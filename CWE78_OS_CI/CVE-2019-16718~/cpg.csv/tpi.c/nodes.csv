command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	6340027	File	data/converged/CVE-2019-16718~_radare2/tpi.c								
ANR	6340028	DeclStmt									
ANR	6340029	Decl							unsigned int	unsigned int	base_idx
ANR	6340030	DeclStmt									
ANR	6340031	Decl							RList	RList *	p_types_list
ANR	6340032	Function	print_base_type	8:0:125:1660							
ANR	6340033	FunctionDef	"print_base_type (EBASE_TYPES base_type , char * * name)"		6340032	0					
ANR	6340034	CompoundStatement		8:64:189:1660	6340032	0					
ANR	6340035	SwitchStatement	switch ( base_type )		6340032	0					
ANR	6340036	Condition	base_type	9:9:200:208	6340032	0	True				
ANR	6340037	Identifier	base_type		6340032	0					
ANR	6340038	CompoundStatement		2:20:21:21	6340032	1					
ANR	6340039	Label	case eT_32PINT4 :	10:1:214:229	6340032	0	True				
ANR	6340040	Identifier	eT_32PINT4		6340032	0					
ANR	6340041	ExpressionStatement	"* name = ""pointer to long"""	11:2:233:258	6340032	1	True				
ANR	6340042	AssignmentExpression	"* name = ""pointer to long"""		6340032	0		=			
ANR	6340043	UnaryOperationExpression	* name		6340032	0					
ANR	6340044	UnaryOperator	*		6340032	0					
ANR	6340045	Identifier	name		6340032	1					
ANR	6340046	PrimaryExpression	"""pointer to long"""		6340032	1					
ANR	6340047	BreakStatement	break ;	12:2:262:267	6340032	2	True				
ANR	6340048	Label	case eT_32PRCHAR :	13:1:270:286	6340032	3	True				
ANR	6340049	Identifier	eT_32PRCHAR		6340032	0					
ANR	6340050	ExpressionStatement	"* name = ""pointer to unsigned char"""	14:2:290:324	6340032	4	True				
ANR	6340051	AssignmentExpression	"* name = ""pointer to unsigned char"""		6340032	0		=			
ANR	6340052	UnaryOperationExpression	* name		6340032	0					
ANR	6340053	UnaryOperator	*		6340032	0					
ANR	6340054	Identifier	name		6340032	1					
ANR	6340055	PrimaryExpression	"""pointer to unsigned char"""		6340032	1					
ANR	6340056	BreakStatement	break ;	15:2:328:333	6340032	5	True				
ANR	6340057	Label	case eT_32PUCHAR :	16:1:336:352	6340032	6	True				
ANR	6340058	Identifier	eT_32PUCHAR		6340032	0					
ANR	6340059	ExpressionStatement	"* name = ""pointer to unsigned char"""	17:2:356:390	6340032	7	True				
ANR	6340060	AssignmentExpression	"* name = ""pointer to unsigned char"""		6340032	0		=			
ANR	6340061	UnaryOperationExpression	* name		6340032	0					
ANR	6340062	UnaryOperator	*		6340032	0					
ANR	6340063	Identifier	name		6340032	1					
ANR	6340064	PrimaryExpression	"""pointer to unsigned char"""		6340032	1					
ANR	6340065	BreakStatement	break ;	18:2:394:399	6340032	8	True				
ANR	6340066	Label	case eT_32PULONG :	19:1:402:418	6340032	9	True				
ANR	6340067	Identifier	eT_32PULONG		6340032	0					
ANR	6340068	ExpressionStatement	"* name = ""pointer to unsigned long"""	20:2:422:456	6340032	10	True				
ANR	6340069	AssignmentExpression	"* name = ""pointer to unsigned long"""		6340032	0		=			
ANR	6340070	UnaryOperationExpression	* name		6340032	0					
ANR	6340071	UnaryOperator	*		6340032	0					
ANR	6340072	Identifier	name		6340032	1					
ANR	6340073	PrimaryExpression	"""pointer to unsigned long"""		6340032	1					
ANR	6340074	BreakStatement	break ;	21:2:460:465	6340032	11	True				
ANR	6340075	Label	case eT_32PLONG :	22:1:468:483	6340032	12	True				
ANR	6340076	Identifier	eT_32PLONG		6340032	0					
ANR	6340077	ExpressionStatement	"* name = ""pointer to long"""	23:2:487:512	6340032	13	True				
ANR	6340078	AssignmentExpression	"* name = ""pointer to long"""		6340032	0		=			
ANR	6340079	UnaryOperationExpression	* name		6340032	0					
ANR	6340080	UnaryOperator	*		6340032	0					
ANR	6340081	Identifier	name		6340032	1					
ANR	6340082	PrimaryExpression	"""pointer to long"""		6340032	1					
ANR	6340083	BreakStatement	break ;	24:2:516:521	6340032	14	True				
ANR	6340084	Label	case eT_32PUQUAD :	25:1:524:540	6340032	15	True				
ANR	6340085	Identifier	eT_32PUQUAD		6340032	0					
ANR	6340086	ExpressionStatement	"* name = ""pointer to unsigned long long"""	26:2:544:583	6340032	16	True				
ANR	6340087	AssignmentExpression	"* name = ""pointer to unsigned long long"""		6340032	0		=			
ANR	6340088	UnaryOperationExpression	* name		6340032	0					
ANR	6340089	UnaryOperator	*		6340032	0					
ANR	6340090	Identifier	name		6340032	1					
ANR	6340091	PrimaryExpression	"""pointer to unsigned long long"""		6340032	1					
ANR	6340092	BreakStatement	break ;	27:2:587:592	6340032	17	True				
ANR	6340093	Label	case eT_32PUSHORT :	28:1:595:612	6340032	18	True				
ANR	6340094	Identifier	eT_32PUSHORT		6340032	0					
ANR	6340095	ExpressionStatement	"* name = ""pointer to unsigned short"""	29:2:616:651	6340032	19	True				
ANR	6340096	AssignmentExpression	"* name = ""pointer to unsigned short"""		6340032	0		=			
ANR	6340097	UnaryOperationExpression	* name		6340032	0					
ANR	6340098	UnaryOperator	*		6340032	0					
ANR	6340099	Identifier	name		6340032	1					
ANR	6340100	PrimaryExpression	"""pointer to unsigned short"""		6340032	1					
ANR	6340101	BreakStatement	break ;	30:2:655:660	6340032	20	True				
ANR	6340102	Label	case eT_32PVOID :	31:1:663:678	6340032	21	True				
ANR	6340103	Identifier	eT_32PVOID		6340032	0					
ANR	6340104	ExpressionStatement	"* name = ""pointer to void"""	32:2:682:707	6340032	22	True				
ANR	6340105	AssignmentExpression	"* name = ""pointer to void"""		6340032	0		=			
ANR	6340106	UnaryOperationExpression	* name		6340032	0					
ANR	6340107	UnaryOperator	*		6340032	0					
ANR	6340108	Identifier	name		6340032	1					
ANR	6340109	PrimaryExpression	"""pointer to void"""		6340032	1					
ANR	6340110	BreakStatement	break ;	33:2:711:716	6340032	23	True				
ANR	6340111	Label	case eT_64PVOID :	34:1:719:734	6340032	24	True				
ANR	6340112	Identifier	eT_64PVOID		6340032	0					
ANR	6340113	ExpressionStatement	"* name = ""pointer64 to void"""	35:2:738:765	6340032	25	True				
ANR	6340114	AssignmentExpression	"* name = ""pointer64 to void"""		6340032	0		=			
ANR	6340115	UnaryOperationExpression	* name		6340032	0					
ANR	6340116	UnaryOperator	*		6340032	0					
ANR	6340117	Identifier	name		6340032	1					
ANR	6340118	PrimaryExpression	"""pointer64 to void"""		6340032	1					
ANR	6340119	BreakStatement	break ;	36:2:769:774	6340032	26	True				
ANR	6340120	Label	case eT_INT4 :	37:1:777:789	6340032	27	True				
ANR	6340121	Identifier	eT_INT4		6340032	0					
ANR	6340122	ExpressionStatement	"* name = ""long"""	38:2:793:807	6340032	28	True				
ANR	6340123	AssignmentExpression	"* name = ""long"""		6340032	0		=			
ANR	6340124	UnaryOperationExpression	* name		6340032	0					
ANR	6340125	UnaryOperator	*		6340032	0					
ANR	6340126	Identifier	name		6340032	1					
ANR	6340127	PrimaryExpression	"""long"""		6340032	1					
ANR	6340128	BreakStatement	break ;	39:2:811:816	6340032	29	True				
ANR	6340129	Label	case eT_INT8 :	40:1:819:831	6340032	30	True				
ANR	6340130	Identifier	eT_INT8		6340032	0					
ANR	6340131	ExpressionStatement	"* name = ""long long"""	41:2:835:854	6340032	31	True				
ANR	6340132	AssignmentExpression	"* name = ""long long"""		6340032	0		=			
ANR	6340133	UnaryOperationExpression	* name		6340032	0					
ANR	6340134	UnaryOperator	*		6340032	0					
ANR	6340135	Identifier	name		6340032	1					
ANR	6340136	PrimaryExpression	"""long long"""		6340032	1					
ANR	6340137	BreakStatement	break ;	42:2:858:863	6340032	32	True				
ANR	6340138	Label	case eT_LONG :	43:1:866:878	6340032	33	True				
ANR	6340139	Identifier	eT_LONG		6340032	0					
ANR	6340140	ExpressionStatement	"* name = ""long"""	44:2:882:896	6340032	34	True				
ANR	6340141	AssignmentExpression	"* name = ""long"""		6340032	0		=			
ANR	6340142	UnaryOperationExpression	* name		6340032	0					
ANR	6340143	UnaryOperator	*		6340032	0					
ANR	6340144	Identifier	name		6340032	1					
ANR	6340145	PrimaryExpression	"""long"""		6340032	1					
ANR	6340146	BreakStatement	break ;	45:2:900:905	6340032	35	True				
ANR	6340147	Label	case eT_QUAD :	46:1:908:920	6340032	36	True				
ANR	6340148	Identifier	eT_QUAD		6340032	0					
ANR	6340149	ExpressionStatement	"* name = ""long long"""	47:2:924:943	6340032	37	True				
ANR	6340150	AssignmentExpression	"* name = ""long long"""		6340032	0		=			
ANR	6340151	UnaryOperationExpression	* name		6340032	0					
ANR	6340152	UnaryOperator	*		6340032	0					
ANR	6340153	Identifier	name		6340032	1					
ANR	6340154	PrimaryExpression	"""long long"""		6340032	1					
ANR	6340155	BreakStatement	break ;	48:2:947:952	6340032	38	True				
ANR	6340156	Label	case eT_RCHAR :	49:1:955:968	6340032	39	True				
ANR	6340157	Identifier	eT_RCHAR		6340032	0					
ANR	6340158	ExpressionStatement	"* name = ""unsigned char"""	50:2:972:995	6340032	40	True				
ANR	6340159	AssignmentExpression	"* name = ""unsigned char"""		6340032	0		=			
ANR	6340160	UnaryOperationExpression	* name		6340032	0					
ANR	6340161	UnaryOperator	*		6340032	0					
ANR	6340162	Identifier	name		6340032	1					
ANR	6340163	PrimaryExpression	"""unsigned char"""		6340032	1					
ANR	6340164	BreakStatement	break ;	51:2:999:1004	6340032	41	True				
ANR	6340165	Label	case eT_REAL32 :	52:1:1007:1021	6340032	42	True				
ANR	6340166	Identifier	eT_REAL32		6340032	0					
ANR	6340167	ExpressionStatement	"* name = ""float"""	53:2:1025:1040	6340032	43	True				
ANR	6340168	AssignmentExpression	"* name = ""float"""		6340032	0		=			
ANR	6340169	UnaryOperationExpression	* name		6340032	0					
ANR	6340170	UnaryOperator	*		6340032	0					
ANR	6340171	Identifier	name		6340032	1					
ANR	6340172	PrimaryExpression	"""float"""		6340032	1					
ANR	6340173	BreakStatement	break ;	54:2:1044:1049	6340032	44	True				
ANR	6340174	Label	case eT_REAL64 :	55:1:1052:1066	6340032	45	True				
ANR	6340175	Identifier	eT_REAL64		6340032	0					
ANR	6340176	ExpressionStatement	"* name = ""double"""	56:2:1070:1086	6340032	46	True				
ANR	6340177	AssignmentExpression	"* name = ""double"""		6340032	0		=			
ANR	6340178	UnaryOperationExpression	* name		6340032	0					
ANR	6340179	UnaryOperator	*		6340032	0					
ANR	6340180	Identifier	name		6340032	1					
ANR	6340181	PrimaryExpression	"""double"""		6340032	1					
ANR	6340182	BreakStatement	break ;	57:2:1090:1095	6340032	47	True				
ANR	6340183	Label	case eT_REAL80 :	58:1:1098:1112	6340032	48	True				
ANR	6340184	Identifier	eT_REAL80		6340032	0					
ANR	6340185	ExpressionStatement	"* name = ""long double"""	59:2:1116:1137	6340032	49	True				
ANR	6340186	AssignmentExpression	"* name = ""long double"""		6340032	0		=			
ANR	6340187	UnaryOperationExpression	* name		6340032	0					
ANR	6340188	UnaryOperator	*		6340032	0					
ANR	6340189	Identifier	name		6340032	1					
ANR	6340190	PrimaryExpression	"""long double"""		6340032	1					
ANR	6340191	BreakStatement	break ;	60:2:1141:1146	6340032	50	True				
ANR	6340192	Label	case eT_SHORT :	61:1:1149:1162	6340032	51	True				
ANR	6340193	Identifier	eT_SHORT		6340032	0					
ANR	6340194	ExpressionStatement	"* name = ""short"""	62:2:1166:1181	6340032	52	True				
ANR	6340195	AssignmentExpression	"* name = ""short"""		6340032	0		=			
ANR	6340196	UnaryOperationExpression	* name		6340032	0					
ANR	6340197	UnaryOperator	*		6340032	0					
ANR	6340198	Identifier	name		6340032	1					
ANR	6340199	PrimaryExpression	"""short"""		6340032	1					
ANR	6340200	BreakStatement	break ;	63:2:1185:1190	6340032	53	True				
ANR	6340201	Label	case eT_UCHAR :	64:1:1193:1206	6340032	54	True				
ANR	6340202	Identifier	eT_UCHAR		6340032	0					
ANR	6340203	ExpressionStatement	"* name = ""unsigned char"""	65:2:1210:1233	6340032	55	True				
ANR	6340204	AssignmentExpression	"* name = ""unsigned char"""		6340032	0		=			
ANR	6340205	UnaryOperationExpression	* name		6340032	0					
ANR	6340206	UnaryOperator	*		6340032	0					
ANR	6340207	Identifier	name		6340032	1					
ANR	6340208	PrimaryExpression	"""unsigned char"""		6340032	1					
ANR	6340209	BreakStatement	break ;	66:2:1237:1242	6340032	56	True				
ANR	6340210	Label	case eT_UINT4 :	67:1:1245:1258	6340032	57	True				
ANR	6340211	Identifier	eT_UINT4		6340032	0					
ANR	6340212	ExpressionStatement	"* name = ""unsigned long"""	68:2:1262:1285	6340032	58	True				
ANR	6340213	AssignmentExpression	"* name = ""unsigned long"""		6340032	0		=			
ANR	6340214	UnaryOperationExpression	* name		6340032	0					
ANR	6340215	UnaryOperator	*		6340032	0					
ANR	6340216	Identifier	name		6340032	1					
ANR	6340217	PrimaryExpression	"""unsigned long"""		6340032	1					
ANR	6340218	BreakStatement	break ;	69:2:1289:1294	6340032	59	True				
ANR	6340219	Label	case eT_ULONG :	70:1:1297:1310	6340032	60	True				
ANR	6340220	Identifier	eT_ULONG		6340032	0					
ANR	6340221	ExpressionStatement	"* name = ""unsigned long"""	71:2:1314:1337	6340032	61	True				
ANR	6340222	AssignmentExpression	"* name = ""unsigned long"""		6340032	0		=			
ANR	6340223	UnaryOperationExpression	* name		6340032	0					
ANR	6340224	UnaryOperator	*		6340032	0					
ANR	6340225	Identifier	name		6340032	1					
ANR	6340226	PrimaryExpression	"""unsigned long"""		6340032	1					
ANR	6340227	BreakStatement	break ;	72:2:1341:1346	6340032	62	True				
ANR	6340228	Label	case eT_UQUAD :	73:1:1349:1362	6340032	63	True				
ANR	6340229	Identifier	eT_UQUAD		6340032	0					
ANR	6340230	ExpressionStatement	"* name = ""unsigned long long"""	74:2:1366:1394	6340032	64	True				
ANR	6340231	AssignmentExpression	"* name = ""unsigned long long"""		6340032	0		=			
ANR	6340232	UnaryOperationExpression	* name		6340032	0					
ANR	6340233	UnaryOperator	*		6340032	0					
ANR	6340234	Identifier	name		6340032	1					
ANR	6340235	PrimaryExpression	"""unsigned long long"""		6340032	1					
ANR	6340236	BreakStatement	break ;	75:2:1398:1403	6340032	65	True				
ANR	6340237	Label	case eT_USHORT :	76:1:1406:1420	6340032	66	True				
ANR	6340238	Identifier	eT_USHORT		6340032	0					
ANR	6340239	ExpressionStatement	"* name = ""unsigned short"""	77:2:1424:1448	6340032	67	True				
ANR	6340240	AssignmentExpression	"* name = ""unsigned short"""		6340032	0		=			
ANR	6340241	UnaryOperationExpression	* name		6340032	0					
ANR	6340242	UnaryOperator	*		6340032	0					
ANR	6340243	Identifier	name		6340032	1					
ANR	6340244	PrimaryExpression	"""unsigned short"""		6340032	1					
ANR	6340245	BreakStatement	break ;	78:2:1452:1457	6340032	68	True				
ANR	6340246	Label	case eT_WCHAR :	79:1:1460:1473	6340032	69	True				
ANR	6340247	Identifier	eT_WCHAR		6340032	0					
ANR	6340248	ExpressionStatement	"* name = ""wchar"""	80:2:1477:1492	6340032	70	True				
ANR	6340249	AssignmentExpression	"* name = ""wchar"""		6340032	0		=			
ANR	6340250	UnaryOperationExpression	* name		6340032	0					
ANR	6340251	UnaryOperator	*		6340032	0					
ANR	6340252	Identifier	name		6340032	1					
ANR	6340253	PrimaryExpression	"""wchar"""		6340032	1					
ANR	6340254	BreakStatement	break ;	81:2:1496:1501	6340032	71	True				
ANR	6340255	Label	case eT_VOID :	82:1:1504:1516	6340032	72	True				
ANR	6340256	Identifier	eT_VOID		6340032	0					
ANR	6340257	ExpressionStatement	"* name = ""void"""	83:2:1520:1534	6340032	73	True				
ANR	6340258	AssignmentExpression	"* name = ""void"""		6340032	0		=			
ANR	6340259	UnaryOperationExpression	* name		6340032	0					
ANR	6340260	UnaryOperator	*		6340032	0					
ANR	6340261	Identifier	name		6340032	1					
ANR	6340262	PrimaryExpression	"""void"""		6340032	1					
ANR	6340263	BreakStatement	break ;	84:2:1538:1543	6340032	74	True				
ANR	6340264	Label	case eT_32PWCHAR :	85:1:1546:1562	6340032	75	True				
ANR	6340265	Identifier	eT_32PWCHAR		6340032	0					
ANR	6340266	ExpressionStatement	"* name = ""pointer to wchar"""	86:2:1566:1592	6340032	76	True				
ANR	6340267	AssignmentExpression	"* name = ""pointer to wchar"""		6340032	0		=			
ANR	6340268	UnaryOperationExpression	* name		6340032	0					
ANR	6340269	UnaryOperator	*		6340032	0					
ANR	6340270	Identifier	name		6340032	1					
ANR	6340271	PrimaryExpression	"""pointer to wchar"""		6340032	1					
ANR	6340272	BreakStatement	break ;	87:2:1596:1601	6340032	77	True				
ANR	6340273	Label	default :	88:1:1604:1611	6340032	78	True				
ANR	6340274	Identifier	default		6340032	0					
ANR	6340275	ExpressionStatement	"* name = ""unsupported base type"""	89:2:1615:1646	6340032	79	True				
ANR	6340276	AssignmentExpression	"* name = ""unsupported base type"""		6340032	0		=			
ANR	6340277	UnaryOperationExpression	* name		6340032	0					
ANR	6340278	UnaryOperator	*		6340032	0					
ANR	6340279	Identifier	name		6340032	1					
ANR	6340280	PrimaryExpression	"""unsupported base type"""		6340032	1					
ANR	6340281	BreakStatement	break ;	90:2:1650:1655	6340032	80	True				
ANR	6340282	ReturnType	static void		6340032	1					
ANR	6340283	Identifier	print_base_type		6340032	2					
ANR	6340284	ParameterList	"EBASE_TYPES base_type , char * * name"		6340032	3					
ANR	6340285	Parameter	EBASE_TYPES base_type	8:28:153:173	6340032	0	True				
ANR	6340286	ParameterType	EBASE_TYPES		6340032	0					
ANR	6340287	Identifier	base_type		6340032	1					
ANR	6340288	Parameter	char * * name	8:51:176:186	6340032	1	True				
ANR	6340289	ParameterType	char * *		6340032	0					
ANR	6340290	Identifier	name		6340032	1					
ANR	6340291	CFGEntryNode	ENTRY		6340032		True				
ANR	6340292	CFGExitNode	EXIT		6340032		True				
ANR	6340293	Symbol	* name		6340032						
ANR	6340294	Symbol	base_type		6340032						
ANR	6340295	Symbol	name		6340032						
ANR	6340296	Function	get_sval_name_len	95:0:1743:2392							
ANR	6340297	FunctionDef	"get_sval_name_len (SVal * val , int * res_len)"		6340296	0					
ANR	6340298	CompoundStatement		95:55:1798:2392	6340296	0					
ANR	6340299	IfStatement	if ( val -> value_or_type < eLF_CHAR )		6340296	0					
ANR	6340300	Condition	val -> value_or_type < eLF_CHAR	96:5:1805:1833	6340296	0	True				
ANR	6340301	RelationalExpression	val -> value_or_type < eLF_CHAR		6340296	0		<			
ANR	6340302	PtrMemberAccess	val -> value_or_type		6340296	0					
ANR	6340303	Identifier	val		6340296	0					
ANR	6340304	Identifier	value_or_type		6340296	1					
ANR	6340305	Identifier	eLF_CHAR		6340296	1					
ANR	6340306	CompoundStatement		3:2:41:88	6340296	1					
ANR	6340307	IdentifierDeclStatement	SCString * scstr = ( SCString * ) val -> name_or_val ;	97:2:1840:1887	6340296	0	True				
ANR	6340308	IdentifierDecl	* scstr = ( SCString * ) val -> name_or_val		6340296	0					
ANR	6340309	IdentifierDeclType	SCString *		6340296	0					
ANR	6340310	Identifier	scstr		6340296	1					
ANR	6340311	AssignmentExpression	* scstr = ( SCString * ) val -> name_or_val		6340296	2		=			
ANR	6340312	Identifier	scstr		6340296	0					
ANR	6340313	CastExpression	( SCString * ) val -> name_or_val		6340296	1					
ANR	6340314	CastTarget	SCString *		6340296	0					
ANR	6340315	PtrMemberAccess	val -> name_or_val		6340296	1					
ANR	6340316	Identifier	val		6340296	0					
ANR	6340317	Identifier	name_or_val		6340296	1					
ANR	6340318	ExpressionStatement	* res_len = scstr -> size	98:2:1891:1913	6340296	1	True				
ANR	6340319	AssignmentExpression	* res_len = scstr -> size		6340296	0		=			
ANR	6340320	UnaryOperationExpression	* res_len		6340296	0					
ANR	6340321	UnaryOperator	*		6340296	0					
ANR	6340322	Identifier	res_len		6340296	1					
ANR	6340323	PtrMemberAccess	scstr -> size		6340296	1					
ANR	6340324	Identifier	scstr		6340296	0					
ANR	6340325	Identifier	size		6340296	1					
ANR	6340326	ElseStatement	else		6340296	0					
ANR	6340327	CompoundStatement		5:8:124:124	6340296	0					
ANR	6340328	SwitchStatement	switch ( val -> value_or_type )		6340296	0					
ANR	6340329	Condition	val -> value_or_type	100:10:1935:1952	6340296	0	True				
ANR	6340330	PtrMemberAccess	val -> value_or_type		6340296	0					
ANR	6340331	Identifier	val		6340296	0					
ANR	6340332	Identifier	value_or_type		6340296	1					
ANR	6340333	CompoundStatement		6:30:156:156	6340296	1					
ANR	6340334	Label	case eLF_ULONG :	101:2:1959:1973	6340296	0	True				
ANR	6340335	Identifier	eLF_ULONG		6340296	0					
ANR	6340336	CompoundStatement		9:3:183:206	6340296	1					
ANR	6340337	IdentifierDeclStatement	SVal_LF_ULONG * lf_ulong ;	103:3:1982:2005	6340296	0	True				
ANR	6340338	IdentifierDecl	* lf_ulong		6340296	0					
ANR	6340339	IdentifierDeclType	SVal_LF_ULONG *		6340296	0					
ANR	6340340	Identifier	lf_ulong		6340296	1					
ANR	6340341	ExpressionStatement	lf_ulong = ( SVal_LF_ULONG * ) val -> name_or_val	104:3:2010:2055	6340296	1	True				
ANR	6340342	AssignmentExpression	lf_ulong = ( SVal_LF_ULONG * ) val -> name_or_val		6340296	0		=			
ANR	6340343	Identifier	lf_ulong		6340296	0					
ANR	6340344	CastExpression	( SVal_LF_ULONG * ) val -> name_or_val		6340296	1					
ANR	6340345	CastTarget	SVal_LF_ULONG *		6340296	0					
ANR	6340346	PtrMemberAccess	val -> name_or_val		6340296	1					
ANR	6340347	Identifier	val		6340296	0					
ANR	6340348	Identifier	name_or_val		6340296	1					
ANR	6340349	ExpressionStatement	* res_len = lf_ulong -> name . size	105:3:2060:2090	6340296	2	True				
ANR	6340350	AssignmentExpression	* res_len = lf_ulong -> name . size		6340296	0		=			
ANR	6340351	UnaryOperationExpression	* res_len		6340296	0					
ANR	6340352	UnaryOperator	*		6340296	0					
ANR	6340353	Identifier	res_len		6340296	1					
ANR	6340354	MemberAccess	lf_ulong -> name . size		6340296	1					
ANR	6340355	PtrMemberAccess	lf_ulong -> name		6340296	0					
ANR	6340356	Identifier	lf_ulong		6340296	0					
ANR	6340357	Identifier	name		6340296	1					
ANR	6340358	Identifier	size		6340296	1					
ANR	6340359	BreakStatement	break ;	106:3:2095:2100	6340296	3	True				
ANR	6340360	Label	case eLF_USHORT :	108:2:2108:2123	6340296	2	True				
ANR	6340361	Identifier	eLF_USHORT		6340296	0					
ANR	6340362	CompoundStatement		16:3:333:358	6340296	3					
ANR	6340363	IdentifierDeclStatement	SVal_LF_USHORT * lf_ushort ;	110:3:2132:2157	6340296	0	True				
ANR	6340364	IdentifierDecl	* lf_ushort		6340296	0					
ANR	6340365	IdentifierDeclType	SVal_LF_USHORT *		6340296	0					
ANR	6340366	Identifier	lf_ushort		6340296	1					
ANR	6340367	ExpressionStatement	lf_ushort = ( SVal_LF_USHORT * ) val -> name_or_val	111:3:2162:2209	6340296	1	True				
ANR	6340368	AssignmentExpression	lf_ushort = ( SVal_LF_USHORT * ) val -> name_or_val		6340296	0		=			
ANR	6340369	Identifier	lf_ushort		6340296	0					
ANR	6340370	CastExpression	( SVal_LF_USHORT * ) val -> name_or_val		6340296	1					
ANR	6340371	CastTarget	SVal_LF_USHORT *		6340296	0					
ANR	6340372	PtrMemberAccess	val -> name_or_val		6340296	1					
ANR	6340373	Identifier	val		6340296	0					
ANR	6340374	Identifier	name_or_val		6340296	1					
ANR	6340375	ExpressionStatement	* res_len = lf_ushort -> name . size	112:3:2214:2245	6340296	2	True				
ANR	6340376	AssignmentExpression	* res_len = lf_ushort -> name . size		6340296	0		=			
ANR	6340377	UnaryOperationExpression	* res_len		6340296	0					
ANR	6340378	UnaryOperator	*		6340296	0					
ANR	6340379	Identifier	res_len		6340296	1					
ANR	6340380	MemberAccess	lf_ushort -> name . size		6340296	1					
ANR	6340381	PtrMemberAccess	lf_ushort -> name		6340296	0					
ANR	6340382	Identifier	lf_ushort		6340296	0					
ANR	6340383	Identifier	name		6340296	1					
ANR	6340384	Identifier	size		6340296	1					
ANR	6340385	BreakStatement	break ;	113:3:2250:2255	6340296	3	True				
ANR	6340386	Label	default :	115:2:2263:2270	6340296	4	True				
ANR	6340387	Identifier	default		6340296	0					
ANR	6340388	ExpressionStatement	* res_len = 0	116:3:2275:2287	6340296	5	True				
ANR	6340389	AssignmentExpression	* res_len = 0		6340296	0		=			
ANR	6340390	UnaryOperationExpression	* res_len		6340296	0					
ANR	6340391	UnaryOperator	*		6340296	0					
ANR	6340392	Identifier	res_len		6340296	1					
ANR	6340393	PrimaryExpression	0		6340296	1					
ANR	6340394	ExpressionStatement	"printf ( ""get_sval_name_len: Skipping unsupported type (%d)\\n"" , val -> value_or_type )"	117:3:2292:2373	6340296	6	True				
ANR	6340395	CallExpression	"printf ( ""get_sval_name_len: Skipping unsupported type (%d)\\n"" , val -> value_or_type )"		6340296	0					
ANR	6340396	Callee	printf		6340296	0					
ANR	6340397	Identifier	printf		6340296	0					
ANR	6340398	ArgumentList	"""get_sval_name_len: Skipping unsupported type (%d)\\n"""		6340296	1					
ANR	6340399	Argument	"""get_sval_name_len: Skipping unsupported type (%d)\\n"""		6340296	0					
ANR	6340400	PrimaryExpression	"""get_sval_name_len: Skipping unsupported type (%d)\\n"""		6340296	0					
ANR	6340401	Argument	val -> value_or_type		6340296	1					
ANR	6340402	PtrMemberAccess	val -> value_or_type		6340296	0					
ANR	6340403	Identifier	val		6340296	0					
ANR	6340404	Identifier	value_or_type		6340296	1					
ANR	6340405	BreakStatement	break ;	118:3:2378:2383	6340296	7	True				
ANR	6340406	ReturnType	static void		6340296	1					
ANR	6340407	Identifier	get_sval_name_len		6340296	2					
ANR	6340408	ParameterList	"SVal * val , int * res_len"		6340296	3					
ANR	6340409	Parameter	SVal * val	95:30:1773:1781	6340296	0	True				
ANR	6340410	ParameterType	SVal *		6340296	0					
ANR	6340411	Identifier	val		6340296	1					
ANR	6340412	Parameter	int * res_len	95:41:1784:1795	6340296	1	True				
ANR	6340413	ParameterType	int *		6340296	0					
ANR	6340414	Identifier	res_len		6340296	1					
ANR	6340415	CFGEntryNode	ENTRY		6340296		True				
ANR	6340416	CFGExitNode	EXIT		6340296		True				
ANR	6340417	Symbol	val		6340296						
ANR	6340418	Symbol	* res_len		6340296						
ANR	6340419	Symbol	scstr		6340296						
ANR	6340420	Symbol	lf_ushort -> name . size		6340296						
ANR	6340421	Symbol	lf_ulong -> name . size		6340296						
ANR	6340422	Symbol	* val		6340296						
ANR	6340423	Symbol	eLF_CHAR		6340296						
ANR	6340424	Symbol	* scstr		6340296						
ANR	6340425	Symbol	* lf_ushort		6340296						
ANR	6340426	Symbol	val -> value_or_type		6340296						
ANR	6340427	Symbol	lf_ulong		6340296						
ANR	6340428	Symbol	* lf_ulong		6340296						
ANR	6340429	Symbol	res_len		6340296						
ANR	6340430	Symbol	val -> name_or_val		6340296						
ANR	6340431	Symbol	scstr -> size		6340296						
ANR	6340432	Symbol	lf_ulong -> name		6340296						
ANR	6340433	Symbol	lf_ushort		6340296						
ANR	6340434	Symbol	lf_ushort -> name		6340296						
ANR	6340435	Function	get_sval_name	124:0:2475:4062							
ANR	6340436	FunctionDef	"get_sval_name (SVal * val , char * * name)"		6340435	0					
ANR	6340437	CompoundStatement		124:50:2525:4062	6340435	0					
ANR	6340438	IfStatement	if ( val -> value_or_type < eLF_CHAR )		6340435	0					
ANR	6340439	Condition	val -> value_or_type < eLF_CHAR	125:5:2532:2560	6340435	0	True				
ANR	6340440	RelationalExpression	val -> value_or_type < eLF_CHAR		6340435	0		<			
ANR	6340441	PtrMemberAccess	val -> value_or_type		6340435	0					
ANR	6340442	Identifier	val		6340435	0					
ANR	6340443	Identifier	value_or_type		6340435	1					
ANR	6340444	Identifier	eLF_CHAR		6340435	1					
ANR	6340445	CompoundStatement		3:2:41:56	6340435	1					
ANR	6340446	IdentifierDeclStatement	SCString * scstr ;	126:2:2567:2582	6340435	0	True				
ANR	6340447	IdentifierDecl	* scstr		6340435	0					
ANR	6340448	IdentifierDeclType	SCString *		6340435	0					
ANR	6340449	Identifier	scstr		6340435	1					
ANR	6340450	ExpressionStatement	scstr = ( SCString * ) val -> name_or_val	127:2:2586:2623	6340435	1	True				
ANR	6340451	AssignmentExpression	scstr = ( SCString * ) val -> name_or_val		6340435	0		=			
ANR	6340452	Identifier	scstr		6340435	0					
ANR	6340453	CastExpression	( SCString * ) val -> name_or_val		6340435	1					
ANR	6340454	CastTarget	SCString *		6340435	0					
ANR	6340455	PtrMemberAccess	val -> name_or_val		6340435	1					
ANR	6340456	Identifier	val		6340435	0					
ANR	6340457	Identifier	name_or_val		6340435	1					
ANR	6340458	ExpressionStatement	* name = scstr -> name	128:2:2627:2646	6340435	2	True				
ANR	6340459	AssignmentExpression	* name = scstr -> name		6340435	0		=			
ANR	6340460	UnaryOperationExpression	* name		6340435	0					
ANR	6340461	UnaryOperator	*		6340435	0					
ANR	6340462	Identifier	name		6340435	1					
ANR	6340463	PtrMemberAccess	scstr -> name		6340435	1					
ANR	6340464	Identifier	scstr		6340435	0					
ANR	6340465	Identifier	name		6340435	1					
ANR	6340466	ElseStatement	else		6340435	0					
ANR	6340467	CompoundStatement		7:8:161:161	6340435	0					
ANR	6340468	SwitchStatement	switch ( val -> value_or_type )		6340435	0					
ANR	6340469	Condition	val -> value_or_type	131:10:2699:2716	6340435	0	True				
ANR	6340470	PtrMemberAccess	val -> value_or_type		6340435	0					
ANR	6340471	Identifier	val		6340435	0					
ANR	6340472	Identifier	value_or_type		6340435	1					
ANR	6340473	CompoundStatement		8:30:193:193	6340435	1					
ANR	6340474	Label	case eLF_UQUADWORD :	132:2:2723:2741	6340435	0	True				
ANR	6340475	Identifier	eLF_UQUADWORD		6340435	0					
ANR	6340476	CompoundStatement		11:3:224:255	6340435	1					
ANR	6340477	IdentifierDeclStatement	SVal_LF_UQUADWORD * lf_uquadword ;	134:3:2750:2781	6340435	0	True				
ANR	6340478	IdentifierDecl	* lf_uquadword		6340435	0					
ANR	6340479	IdentifierDeclType	SVal_LF_UQUADWORD *		6340435	0					
ANR	6340480	Identifier	lf_uquadword		6340435	1					
ANR	6340481	ExpressionStatement	lf_uquadword = ( SVal_LF_UQUADWORD * ) val -> name_or_val	135:3:2786:2839	6340435	1	True				
ANR	6340482	AssignmentExpression	lf_uquadword = ( SVal_LF_UQUADWORD * ) val -> name_or_val		6340435	0		=			
ANR	6340483	Identifier	lf_uquadword		6340435	0					
ANR	6340484	CastExpression	( SVal_LF_UQUADWORD * ) val -> name_or_val		6340435	1					
ANR	6340485	CastTarget	SVal_LF_UQUADWORD *		6340435	0					
ANR	6340486	PtrMemberAccess	val -> name_or_val		6340435	1					
ANR	6340487	Identifier	val		6340435	0					
ANR	6340488	Identifier	name_or_val		6340435	1					
ANR	6340489	ExpressionStatement	* name = lf_uquadword -> name . name	136:3:2844:2875	6340435	2	True				
ANR	6340490	AssignmentExpression	* name = lf_uquadword -> name . name		6340435	0		=			
ANR	6340491	UnaryOperationExpression	* name		6340435	0					
ANR	6340492	UnaryOperator	*		6340435	0					
ANR	6340493	Identifier	name		6340435	1					
ANR	6340494	MemberAccess	lf_uquadword -> name . name		6340435	1					
ANR	6340495	PtrMemberAccess	lf_uquadword -> name		6340435	0					
ANR	6340496	Identifier	lf_uquadword		6340435	0					
ANR	6340497	Identifier	name		6340435	1					
ANR	6340498	Identifier	name		6340435	1					
ANR	6340499	BreakStatement	break ;	137:3:2880:2885	6340435	3	True				
ANR	6340500	Label	case eLF_QUADWORD :	139:2:2893:2910	6340435	2	True				
ANR	6340501	Identifier	eLF_QUADWORD		6340435	0					
ANR	6340502	CompoundStatement		18:3:393:422	6340435	3					
ANR	6340503	IdentifierDeclStatement	SVal_LF_QUADWORD * lf_quadword ;	141:3:2919:2948	6340435	0	True				
ANR	6340504	IdentifierDecl	* lf_quadword		6340435	0					
ANR	6340505	IdentifierDeclType	SVal_LF_QUADWORD *		6340435	0					
ANR	6340506	Identifier	lf_quadword		6340435	1					
ANR	6340507	ExpressionStatement	lf_quadword = ( SVal_LF_QUADWORD * ) val -> name_or_val	142:3:2953:3004	6340435	1	True				
ANR	6340508	AssignmentExpression	lf_quadword = ( SVal_LF_QUADWORD * ) val -> name_or_val		6340435	0		=			
ANR	6340509	Identifier	lf_quadword		6340435	0					
ANR	6340510	CastExpression	( SVal_LF_QUADWORD * ) val -> name_or_val		6340435	1					
ANR	6340511	CastTarget	SVal_LF_QUADWORD *		6340435	0					
ANR	6340512	PtrMemberAccess	val -> name_or_val		6340435	1					
ANR	6340513	Identifier	val		6340435	0					
ANR	6340514	Identifier	name_or_val		6340435	1					
ANR	6340515	ExpressionStatement	* name = lf_quadword -> name . name	143:3:3009:3039	6340435	2	True				
ANR	6340516	AssignmentExpression	* name = lf_quadword -> name . name		6340435	0		=			
ANR	6340517	UnaryOperationExpression	* name		6340435	0					
ANR	6340518	UnaryOperator	*		6340435	0					
ANR	6340519	Identifier	name		6340435	1					
ANR	6340520	MemberAccess	lf_quadword -> name . name		6340435	1					
ANR	6340521	PtrMemberAccess	lf_quadword -> name		6340435	0					
ANR	6340522	Identifier	lf_quadword		6340435	0					
ANR	6340523	Identifier	name		6340435	1					
ANR	6340524	Identifier	name		6340435	1					
ANR	6340525	BreakStatement	break ;	144:3:3044:3049	6340435	3	True				
ANR	6340526	Label	case eLF_CHAR :	146:2:3057:3070	6340435	4	True				
ANR	6340527	Identifier	eLF_CHAR		6340435	0					
ANR	6340528	CompoundStatement		25:3:553:574	6340435	5					
ANR	6340529	IdentifierDeclStatement	SVal_LF_CHAR * lf_char ;	148:3:3079:3100	6340435	0	True				
ANR	6340530	IdentifierDecl	* lf_char		6340435	0					
ANR	6340531	IdentifierDeclType	SVal_LF_CHAR *		6340435	0					
ANR	6340532	Identifier	lf_char		6340435	1					
ANR	6340533	ExpressionStatement	lf_char = ( SVal_LF_CHAR * ) val -> name_or_val	149:3:3105:3148	6340435	1	True				
ANR	6340534	AssignmentExpression	lf_char = ( SVal_LF_CHAR * ) val -> name_or_val		6340435	0		=			
ANR	6340535	Identifier	lf_char		6340435	0					
ANR	6340536	CastExpression	( SVal_LF_CHAR * ) val -> name_or_val		6340435	1					
ANR	6340537	CastTarget	SVal_LF_CHAR *		6340435	0					
ANR	6340538	PtrMemberAccess	val -> name_or_val		6340435	1					
ANR	6340539	Identifier	val		6340435	0					
ANR	6340540	Identifier	name_or_val		6340435	1					
ANR	6340541	ExpressionStatement	* name = lf_char -> name . name	150:3:3153:3179	6340435	2	True				
ANR	6340542	AssignmentExpression	* name = lf_char -> name . name		6340435	0		=			
ANR	6340543	UnaryOperationExpression	* name		6340435	0					
ANR	6340544	UnaryOperator	*		6340435	0					
ANR	6340545	Identifier	name		6340435	1					
ANR	6340546	MemberAccess	lf_char -> name . name		6340435	1					
ANR	6340547	PtrMemberAccess	lf_char -> name		6340435	0					
ANR	6340548	Identifier	lf_char		6340435	0					
ANR	6340549	Identifier	name		6340435	1					
ANR	6340550	Identifier	name		6340435	1					
ANR	6340551	BreakStatement	break ;	152:3:3224:3229	6340435	3	True				
ANR	6340552	Label	case eLF_ULONG :	154:2:3237:3251	6340435	6	True				
ANR	6340553	Identifier	eLF_ULONG		6340435	0					
ANR	6340554	CompoundStatement		33:3:734:757	6340435	7					
ANR	6340555	IdentifierDeclStatement	SVal_LF_ULONG * lf_ulong ;	156:3:3260:3283	6340435	0	True				
ANR	6340556	IdentifierDecl	* lf_ulong		6340435	0					
ANR	6340557	IdentifierDeclType	SVal_LF_ULONG *		6340435	0					
ANR	6340558	Identifier	lf_ulong		6340435	1					
ANR	6340559	ExpressionStatement	lf_ulong = ( SVal_LF_ULONG * ) val -> name_or_val	157:3:3288:3333	6340435	1	True				
ANR	6340560	AssignmentExpression	lf_ulong = ( SVal_LF_ULONG * ) val -> name_or_val		6340435	0		=			
ANR	6340561	Identifier	lf_ulong		6340435	0					
ANR	6340562	CastExpression	( SVal_LF_ULONG * ) val -> name_or_val		6340435	1					
ANR	6340563	CastTarget	SVal_LF_ULONG *		6340435	0					
ANR	6340564	PtrMemberAccess	val -> name_or_val		6340435	1					
ANR	6340565	Identifier	val		6340435	0					
ANR	6340566	Identifier	name_or_val		6340435	1					
ANR	6340567	ExpressionStatement	* name = lf_ulong -> name . name	158:3:3338:3365	6340435	2	True				
ANR	6340568	AssignmentExpression	* name = lf_ulong -> name . name		6340435	0		=			
ANR	6340569	UnaryOperationExpression	* name		6340435	0					
ANR	6340570	UnaryOperator	*		6340435	0					
ANR	6340571	Identifier	name		6340435	1					
ANR	6340572	MemberAccess	lf_ulong -> name . name		6340435	1					
ANR	6340573	PtrMemberAccess	lf_ulong -> name		6340435	0					
ANR	6340574	Identifier	lf_ulong		6340435	0					
ANR	6340575	Identifier	name		6340435	1					
ANR	6340576	Identifier	name		6340435	1					
ANR	6340577	BreakStatement	break ;	160:3:3410:3415	6340435	3	True				
ANR	6340578	Label	case eLF_LONG :	162:2:3423:3436	6340435	8	True				
ANR	6340579	Identifier	eLF_LONG		6340435	0					
ANR	6340580	CompoundStatement		41:3:919:940	6340435	9					
ANR	6340581	IdentifierDeclStatement	SVal_LF_LONG * lf_long ;	164:3:3445:3466	6340435	0	True				
ANR	6340582	IdentifierDecl	* lf_long		6340435	0					
ANR	6340583	IdentifierDeclType	SVal_LF_LONG *		6340435	0					
ANR	6340584	Identifier	lf_long		6340435	1					
ANR	6340585	ExpressionStatement	lf_long = ( SVal_LF_LONG * ) val -> name_or_val	165:3:3471:3514	6340435	1	True				
ANR	6340586	AssignmentExpression	lf_long = ( SVal_LF_LONG * ) val -> name_or_val		6340435	0		=			
ANR	6340587	Identifier	lf_long		6340435	0					
ANR	6340588	CastExpression	( SVal_LF_LONG * ) val -> name_or_val		6340435	1					
ANR	6340589	CastTarget	SVal_LF_LONG *		6340435	0					
ANR	6340590	PtrMemberAccess	val -> name_or_val		6340435	1					
ANR	6340591	Identifier	val		6340435	0					
ANR	6340592	Identifier	name_or_val		6340435	1					
ANR	6340593	ExpressionStatement	* name = lf_long -> name . name	166:3:3519:3545	6340435	2	True				
ANR	6340594	AssignmentExpression	* name = lf_long -> name . name		6340435	0		=			
ANR	6340595	UnaryOperationExpression	* name		6340435	0					
ANR	6340596	UnaryOperator	*		6340435	0					
ANR	6340597	Identifier	name		6340435	1					
ANR	6340598	MemberAccess	lf_long -> name . name		6340435	1					
ANR	6340599	PtrMemberAccess	lf_long -> name		6340435	0					
ANR	6340600	Identifier	lf_long		6340435	0					
ANR	6340601	Identifier	name		6340435	1					
ANR	6340602	Identifier	name		6340435	1					
ANR	6340603	BreakStatement	break ;	168:3:3589:3594	6340435	3	True				
ANR	6340604	Label	case eLF_USHORT :	170:2:3602:3617	6340435	10	True				
ANR	6340605	Identifier	eLF_USHORT		6340435	0					
ANR	6340606	CompoundStatement		49:3:1100:1125	6340435	11					
ANR	6340607	IdentifierDeclStatement	SVal_LF_USHORT * lf_ushort ;	172:3:3626:3651	6340435	0	True				
ANR	6340608	IdentifierDecl	* lf_ushort		6340435	0					
ANR	6340609	IdentifierDeclType	SVal_LF_USHORT *		6340435	0					
ANR	6340610	Identifier	lf_ushort		6340435	1					
ANR	6340611	ExpressionStatement	lf_ushort = ( SVal_LF_USHORT * ) val -> name_or_val	173:3:3656:3703	6340435	1	True				
ANR	6340612	AssignmentExpression	lf_ushort = ( SVal_LF_USHORT * ) val -> name_or_val		6340435	0		=			
ANR	6340613	Identifier	lf_ushort		6340435	0					
ANR	6340614	CastExpression	( SVal_LF_USHORT * ) val -> name_or_val		6340435	1					
ANR	6340615	CastTarget	SVal_LF_USHORT *		6340435	0					
ANR	6340616	PtrMemberAccess	val -> name_or_val		6340435	1					
ANR	6340617	Identifier	val		6340435	0					
ANR	6340618	Identifier	name_or_val		6340435	1					
ANR	6340619	ExpressionStatement	* name = lf_ushort -> name . name	174:3:3708:3735	6340435	2	True				
ANR	6340620	AssignmentExpression	* name = lf_ushort -> name . name		6340435	0		=			
ANR	6340621	UnaryOperationExpression	* name		6340435	0					
ANR	6340622	UnaryOperator	*		6340435	0					
ANR	6340623	Identifier	name		6340435	1					
ANR	6340624	MemberAccess	lf_ushort -> name . name		6340435	1					
ANR	6340625	PtrMemberAccess	lf_ushort -> name		6340435	0					
ANR	6340626	Identifier	lf_ushort		6340435	0					
ANR	6340627	Identifier	name		6340435	1					
ANR	6340628	Identifier	name		6340435	1					
ANR	6340629	BreakStatement	break ;	176:3:3781:3786	6340435	3	True				
ANR	6340630	Label	case eLF_SHORT :	178:2:3794:3808	6340435	12	True				
ANR	6340631	Identifier	eLF_SHORT		6340435	0					
ANR	6340632	CompoundStatement		57:3:1291:1314	6340435	13					
ANR	6340633	IdentifierDeclStatement	SVal_LF_SHORT * lf_short ;	180:3:3817:3840	6340435	0	True				
ANR	6340634	IdentifierDecl	* lf_short		6340435	0					
ANR	6340635	IdentifierDeclType	SVal_LF_SHORT *		6340435	0					
ANR	6340636	Identifier	lf_short		6340435	1					
ANR	6340637	ExpressionStatement	lf_short = ( SVal_LF_SHORT * ) val -> name_or_val	181:3:3845:3890	6340435	1	True				
ANR	6340638	AssignmentExpression	lf_short = ( SVal_LF_SHORT * ) val -> name_or_val		6340435	0		=			
ANR	6340639	Identifier	lf_short		6340435	0					
ANR	6340640	CastExpression	( SVal_LF_SHORT * ) val -> name_or_val		6340435	1					
ANR	6340641	CastTarget	SVal_LF_SHORT *		6340435	0					
ANR	6340642	PtrMemberAccess	val -> name_or_val		6340435	1					
ANR	6340643	Identifier	val		6340435	0					
ANR	6340644	Identifier	name_or_val		6340435	1					
ANR	6340645	ExpressionStatement	* name = lf_short -> name . name	182:3:3895:3922	6340435	2	True				
ANR	6340646	AssignmentExpression	* name = lf_short -> name . name		6340435	0		=			
ANR	6340647	UnaryOperationExpression	* name		6340435	0					
ANR	6340648	UnaryOperator	*		6340435	0					
ANR	6340649	Identifier	name		6340435	1					
ANR	6340650	MemberAccess	lf_short -> name . name		6340435	1					
ANR	6340651	PtrMemberAccess	lf_short -> name		6340435	0					
ANR	6340652	Identifier	lf_short		6340435	0					
ANR	6340653	Identifier	name		6340435	1					
ANR	6340654	Identifier	name		6340435	1					
ANR	6340655	BreakStatement	break ;	183:3:3927:3932	6340435	3	True				
ANR	6340656	Label	default :	185:2:3940:3947	6340435	14	True				
ANR	6340657	Identifier	default		6340435	0					
ANR	6340658	ExpressionStatement	* name = 0	186:3:3952:3961	6340435	15	True				
ANR	6340659	AssignmentExpression	* name = 0		6340435	0		=			
ANR	6340660	UnaryOperationExpression	* name		6340435	0					
ANR	6340661	UnaryOperator	*		6340435	0					
ANR	6340662	Identifier	name		6340435	1					
ANR	6340663	PrimaryExpression	0		6340435	1					
ANR	6340664	ExpressionStatement	"printf ( ""get_sval_name: Skipping unsupported type (%d)\\n"" , val -> value_or_type )"	187:3:3966:4043	6340435	16	True				
ANR	6340665	CallExpression	"printf ( ""get_sval_name: Skipping unsupported type (%d)\\n"" , val -> value_or_type )"		6340435	0					
ANR	6340666	Callee	printf		6340435	0					
ANR	6340667	Identifier	printf		6340435	0					
ANR	6340668	ArgumentList	"""get_sval_name: Skipping unsupported type (%d)\\n"""		6340435	1					
ANR	6340669	Argument	"""get_sval_name: Skipping unsupported type (%d)\\n"""		6340435	0					
ANR	6340670	PrimaryExpression	"""get_sval_name: Skipping unsupported type (%d)\\n"""		6340435	0					
ANR	6340671	Argument	val -> value_or_type		6340435	1					
ANR	6340672	PtrMemberAccess	val -> value_or_type		6340435	0					
ANR	6340673	Identifier	val		6340435	0					
ANR	6340674	Identifier	value_or_type		6340435	1					
ANR	6340675	BreakStatement	break ;	188:3:4048:4053	6340435	17	True				
ANR	6340676	ReturnType	static void		6340435	1					
ANR	6340677	Identifier	get_sval_name		6340435	2					
ANR	6340678	ParameterList	"SVal * val , char * * name"		6340435	3					
ANR	6340679	Parameter	SVal * val	124:26:2501:2509	6340435	0	True				
ANR	6340680	ParameterType	SVal *		6340435	0					
ANR	6340681	Identifier	val		6340435	1					
ANR	6340682	Parameter	char * * name	124:37:2512:2522	6340435	1	True				
ANR	6340683	ParameterType	char * *		6340435	0					
ANR	6340684	Identifier	name		6340435	1					
ANR	6340685	CFGEntryNode	ENTRY		6340435		True				
ANR	6340686	CFGExitNode	EXIT		6340435		True				
ANR	6340687	Symbol	lf_quadword -> name . name		6340435						
ANR	6340688	Symbol	lf_char -> name . name		6340435						
ANR	6340689	Symbol	lf_long -> name . name		6340435						
ANR	6340690	Symbol	lf_short -> name . name		6340435						
ANR	6340691	Symbol	* val		6340435						
ANR	6340692	Symbol	eLF_CHAR		6340435						
ANR	6340693	Symbol	lf_quadword -> name		6340435						
ANR	6340694	Symbol	* lf_uquadword		6340435						
ANR	6340695	Symbol	* scstr		6340435						
ANR	6340696	Symbol	lf_ushort -> name . name		6340435						
ANR	6340697	Symbol	lf_ulong		6340435						
ANR	6340698	Symbol	* lf_long		6340435						
ANR	6340699	Symbol	lf_uquadword -> name . name		6340435						
ANR	6340700	Symbol	* lf_short		6340435						
ANR	6340701	Symbol	lf_ulong -> name . name		6340435						
ANR	6340702	Symbol	lf_ulong -> name		6340435						
ANR	6340703	Symbol	lf_ushort -> name		6340435						
ANR	6340704	Symbol	val		6340435						
ANR	6340705	Symbol	* name		6340435						
ANR	6340706	Symbol	scstr		6340435						
ANR	6340707	Symbol	lf_char		6340435						
ANR	6340708	Symbol	lf_uquadword -> name		6340435						
ANR	6340709	Symbol	lf_short		6340435						
ANR	6340710	Symbol	lf_char -> name		6340435						
ANR	6340711	Symbol	* lf_ushort		6340435						
ANR	6340712	Symbol	lf_uquadword		6340435						
ANR	6340713	Symbol	* lf_quadword		6340435						
ANR	6340714	Symbol	val -> value_or_type		6340435						
ANR	6340715	Symbol	lf_quadword		6340435						
ANR	6340716	Symbol	* lf_ulong		6340435						
ANR	6340717	Symbol	val -> name_or_val		6340435						
ANR	6340718	Symbol	scstr -> name		6340435						
ANR	6340719	Symbol	name		6340435						
ANR	6340720	Symbol	lf_long -> name		6340435						
ANR	6340721	Symbol	lf_short -> name		6340435						
ANR	6340722	Symbol	* lf_char		6340435						
ANR	6340723	Symbol	lf_long		6340435						
ANR	6340724	Symbol	lf_ushort		6340435						
ANR	6340725	Function	is_union_fwdref	214:0:4716:4892							
ANR	6340726	FunctionDef	"is_union_fwdref (void * type , int * is_fwdref)"		6340725	0					
ANR	6340727	CompoundStatement		214:56:4772:4892	6340725	0					
ANR	6340728	IdentifierDeclStatement	STypeInfo * t = ( STypeInfo * ) type ;	215:1:4775:4808	6340725	0	True				
ANR	6340729	IdentifierDecl	* t = ( STypeInfo * ) type		6340725	0					
ANR	6340730	IdentifierDeclType	STypeInfo *		6340725	0					
ANR	6340731	Identifier	t		6340725	1					
ANR	6340732	AssignmentExpression	* t = ( STypeInfo * ) type		6340725	2		=			
ANR	6340733	Identifier	t		6340725	0					
ANR	6340734	CastExpression	( STypeInfo * ) type		6340725	1					
ANR	6340735	CastTarget	STypeInfo *		6340725	0					
ANR	6340736	Identifier	type		6340725	1					
ANR	6340737	IdentifierDeclStatement	SLF_UNION * lf = ( SLF_UNION * ) t -> type_info ;	216:1:4811:4853	6340725	1	True				
ANR	6340738	IdentifierDecl	* lf = ( SLF_UNION * ) t -> type_info		6340725	0					
ANR	6340739	IdentifierDeclType	SLF_UNION *		6340725	0					
ANR	6340740	Identifier	lf		6340725	1					
ANR	6340741	AssignmentExpression	* lf = ( SLF_UNION * ) t -> type_info		6340725	2		=			
ANR	6340742	Identifier	lf		6340725	0					
ANR	6340743	CastExpression	( SLF_UNION * ) t -> type_info		6340725	1					
ANR	6340744	CastTarget	SLF_UNION *		6340725	0					
ANR	6340745	PtrMemberAccess	t -> type_info		6340725	1					
ANR	6340746	Identifier	t		6340725	0					
ANR	6340747	Identifier	type_info		6340725	1					
ANR	6340748	ExpressionStatement	* is_fwdref = lf -> prop . bits . fwdref	218:1:4857:4890	6340725	2	True				
ANR	6340749	AssignmentExpression	* is_fwdref = lf -> prop . bits . fwdref		6340725	0		=			
ANR	6340750	UnaryOperationExpression	* is_fwdref		6340725	0					
ANR	6340751	UnaryOperator	*		6340725	0					
ANR	6340752	Identifier	is_fwdref		6340725	1					
ANR	6340753	MemberAccess	lf -> prop . bits . fwdref		6340725	1					
ANR	6340754	MemberAccess	lf -> prop . bits		6340725	0					
ANR	6340755	PtrMemberAccess	lf -> prop		6340725	0					
ANR	6340756	Identifier	lf		6340725	0					
ANR	6340757	Identifier	prop		6340725	1					
ANR	6340758	Identifier	bits		6340725	1					
ANR	6340759	Identifier	fwdref		6340725	1					
ANR	6340760	ReturnType	static void		6340725	1					
ANR	6340761	Identifier	is_union_fwdref		6340725	2					
ANR	6340762	ParameterList	"void * type , int * is_fwdref"		6340725	3					
ANR	6340763	Parameter	void * type	214:28:4744:4753	6340725	0	True				
ANR	6340764	ParameterType	void *		6340725	0					
ANR	6340765	Identifier	type		6340725	1					
ANR	6340766	Parameter	int * is_fwdref	214:40:4756:4769	6340725	1	True				
ANR	6340767	ParameterType	int *		6340725	0					
ANR	6340768	Identifier	is_fwdref		6340725	1					
ANR	6340769	CFGEntryNode	ENTRY		6340725		True				
ANR	6340770	CFGExitNode	EXIT		6340725		True				
ANR	6340771	Symbol	lf -> prop . bits . fwdref		6340725						
ANR	6340772	Symbol	* lf		6340725						
ANR	6340773	Symbol	t		6340725						
ANR	6340774	Symbol	is_fwdref		6340725						
ANR	6340775	Symbol	lf -> prop . bits		6340725						
ANR	6340776	Symbol	* is_fwdref		6340725						
ANR	6340777	Symbol	lf		6340725						
ANR	6340778	Symbol	t -> type_info		6340725						
ANR	6340779	Symbol	type		6340725						
ANR	6340780	Symbol	* t		6340725						
ANR	6340781	Symbol	lf -> prop		6340725						
ANR	6340782	Function	is_struct_class_fwdref	222:0:4975:5166							
ANR	6340783	FunctionDef	"is_struct_class_fwdref (void * type , int * is_fwdref)"		6340782	0					
ANR	6340784	CompoundStatement		222:63:5038:5166	6340782	0					
ANR	6340785	IdentifierDeclStatement	STypeInfo * t = ( STypeInfo * ) type ;	223:1:5041:5074	6340782	0	True				
ANR	6340786	IdentifierDecl	* t = ( STypeInfo * ) type		6340782	0					
ANR	6340787	IdentifierDeclType	STypeInfo *		6340782	0					
ANR	6340788	Identifier	t		6340782	1					
ANR	6340789	AssignmentExpression	* t = ( STypeInfo * ) type		6340782	2		=			
ANR	6340790	Identifier	t		6340782	0					
ANR	6340791	CastExpression	( STypeInfo * ) type		6340782	1					
ANR	6340792	CastTarget	STypeInfo *		6340782	0					
ANR	6340793	Identifier	type		6340782	1					
ANR	6340794	IdentifierDeclStatement	SLF_STRUCTURE * lf = ( SLF_STRUCTURE * ) t -> type_info ;	224:1:5077:5127	6340782	1	True				
ANR	6340795	IdentifierDecl	* lf = ( SLF_STRUCTURE * ) t -> type_info		6340782	0					
ANR	6340796	IdentifierDeclType	SLF_STRUCTURE *		6340782	0					
ANR	6340797	Identifier	lf		6340782	1					
ANR	6340798	AssignmentExpression	* lf = ( SLF_STRUCTURE * ) t -> type_info		6340782	2		=			
ANR	6340799	Identifier	lf		6340782	0					
ANR	6340800	CastExpression	( SLF_STRUCTURE * ) t -> type_info		6340782	1					
ANR	6340801	CastTarget	SLF_STRUCTURE *		6340782	0					
ANR	6340802	PtrMemberAccess	t -> type_info		6340782	1					
ANR	6340803	Identifier	t		6340782	0					
ANR	6340804	Identifier	type_info		6340782	1					
ANR	6340805	ExpressionStatement	* is_fwdref = lf -> prop . bits . fwdref	226:1:5131:5164	6340782	2	True				
ANR	6340806	AssignmentExpression	* is_fwdref = lf -> prop . bits . fwdref		6340782	0		=			
ANR	6340807	UnaryOperationExpression	* is_fwdref		6340782	0					
ANR	6340808	UnaryOperator	*		6340782	0					
ANR	6340809	Identifier	is_fwdref		6340782	1					
ANR	6340810	MemberAccess	lf -> prop . bits . fwdref		6340782	1					
ANR	6340811	MemberAccess	lf -> prop . bits		6340782	0					
ANR	6340812	PtrMemberAccess	lf -> prop		6340782	0					
ANR	6340813	Identifier	lf		6340782	0					
ANR	6340814	Identifier	prop		6340782	1					
ANR	6340815	Identifier	bits		6340782	1					
ANR	6340816	Identifier	fwdref		6340782	1					
ANR	6340817	ReturnType	static void		6340782	1					
ANR	6340818	Identifier	is_struct_class_fwdref		6340782	2					
ANR	6340819	ParameterList	"void * type , int * is_fwdref"		6340782	3					
ANR	6340820	Parameter	void * type	222:35:5010:5019	6340782	0	True				
ANR	6340821	ParameterType	void *		6340782	0					
ANR	6340822	Identifier	type		6340782	1					
ANR	6340823	Parameter	int * is_fwdref	222:47:5022:5035	6340782	1	True				
ANR	6340824	ParameterType	int *		6340782	0					
ANR	6340825	Identifier	is_fwdref		6340782	1					
ANR	6340826	CFGEntryNode	ENTRY		6340782		True				
ANR	6340827	CFGExitNode	EXIT		6340782		True				
ANR	6340828	Symbol	lf -> prop . bits . fwdref		6340782						
ANR	6340829	Symbol	* lf		6340782						
ANR	6340830	Symbol	t		6340782						
ANR	6340831	Symbol	is_fwdref		6340782						
ANR	6340832	Symbol	lf -> prop . bits		6340782						
ANR	6340833	Symbol	* is_fwdref		6340782						
ANR	6340834	Symbol	lf		6340782						
ANR	6340835	Symbol	t -> type_info		6340782						
ANR	6340836	Symbol	type		6340782						
ANR	6340837	Symbol	* t		6340782						
ANR	6340838	Symbol	lf -> prop		6340782						
ANR	6340839	Function	get_array_element_type	230:0:5249:5595							
ANR	6340840	FunctionDef	"get_array_element_type (void * type , void * * ret_type)"		6340839	0					
ANR	6340841	CompoundStatement		230:63:5312:5595	6340839	0					
ANR	6340842	IdentifierDeclStatement	STypeInfo * t = ( STypeInfo * ) type ;	231:1:5315:5348	6340839	0	True				
ANR	6340843	IdentifierDecl	* t = ( STypeInfo * ) type		6340839	0					
ANR	6340844	IdentifierDeclType	STypeInfo *		6340839	0					
ANR	6340845	Identifier	t		6340839	1					
ANR	6340846	AssignmentExpression	* t = ( STypeInfo * ) type		6340839	2		=			
ANR	6340847	Identifier	t		6340839	0					
ANR	6340848	CastExpression	( STypeInfo * ) type		6340839	1					
ANR	6340849	CastTarget	STypeInfo *		6340839	0					
ANR	6340850	Identifier	type		6340839	1					
ANR	6340851	IdentifierDeclStatement	SLF_ARRAY * lf_array = ( SLF_ARRAY * ) t -> type_info ;	232:1:5351:5399	6340839	1	True				
ANR	6340852	IdentifierDecl	* lf_array = ( SLF_ARRAY * ) t -> type_info		6340839	0					
ANR	6340853	IdentifierDeclType	SLF_ARRAY *		6340839	0					
ANR	6340854	Identifier	lf_array		6340839	1					
ANR	6340855	AssignmentExpression	* lf_array = ( SLF_ARRAY * ) t -> type_info		6340839	2		=			
ANR	6340856	Identifier	lf_array		6340839	0					
ANR	6340857	CastExpression	( SLF_ARRAY * ) t -> type_info		6340839	1					
ANR	6340858	CastTarget	SLF_ARRAY *		6340839	0					
ANR	6340859	PtrMemberAccess	t -> type_info		6340839	1					
ANR	6340860	Identifier	t		6340839	0					
ANR	6340861	Identifier	type_info		6340839	1					
ANR	6340862	IdentifierDeclStatement	int curr_idx = lf_array -> element_type ;	233:1:5402:5439	6340839	2	True				
ANR	6340863	IdentifierDecl	curr_idx = lf_array -> element_type		6340839	0					
ANR	6340864	IdentifierDeclType	int		6340839	0					
ANR	6340865	Identifier	curr_idx		6340839	1					
ANR	6340866	AssignmentExpression	curr_idx = lf_array -> element_type		6340839	2		=			
ANR	6340867	Identifier	curr_idx		6340839	0					
ANR	6340868	PtrMemberAccess	lf_array -> element_type		6340839	1					
ANR	6340869	Identifier	lf_array		6340839	0					
ANR	6340870	Identifier	element_type		6340839	1					
ANR	6340871	IfStatement	if ( curr_idx < base_idx )		6340839	3					
ANR	6340872	Condition	curr_idx < base_idx	235:5:5447:5465	6340839	0	True				
ANR	6340873	RelationalExpression	curr_idx < base_idx		6340839	0		<			
ANR	6340874	Identifier	curr_idx		6340839	0					
ANR	6340875	Identifier	base_idx		6340839	1					
ANR	6340876	CompoundStatement		6:26:155:155	6340839	1					
ANR	6340877	ExpressionStatement	* ret_type = 0	236:2:5472:5485	6340839	0	True				
ANR	6340878	AssignmentExpression	* ret_type = 0		6340839	0		=			
ANR	6340879	UnaryOperationExpression	* ret_type		6340839	0					
ANR	6340880	UnaryOperator	*		6340839	0					
ANR	6340881	Identifier	ret_type		6340839	1					
ANR	6340882	PrimaryExpression	0		6340839	1					
ANR	6340883	ElseStatement	else		6340839	0					
ANR	6340884	CompoundStatement		8:8:182:182	6340839	0					
ANR	6340885	ExpressionStatement	curr_idx -= base_idx	238:2:5499:5519	6340839	0	True				
ANR	6340886	AssignmentExpression	curr_idx -= base_idx		6340839	0		-=			
ANR	6340887	Identifier	curr_idx		6340839	0					
ANR	6340888	Identifier	base_idx		6340839	1					
ANR	6340889	ExpressionStatement	"* ret_type = r_list_get_n ( p_types_list , curr_idx )"	239:2:5523:5571	6340839	1	True				
ANR	6340890	AssignmentExpression	"* ret_type = r_list_get_n ( p_types_list , curr_idx )"		6340839	0		=			
ANR	6340891	UnaryOperationExpression	* ret_type		6340839	0					
ANR	6340892	UnaryOperator	*		6340839	0					
ANR	6340893	Identifier	ret_type		6340839	1					
ANR	6340894	CallExpression	"r_list_get_n ( p_types_list , curr_idx )"		6340839	1					
ANR	6340895	Callee	r_list_get_n		6340839	0					
ANR	6340896	Identifier	r_list_get_n		6340839	0					
ANR	6340897	ArgumentList	p_types_list		6340839	1					
ANR	6340898	Argument	p_types_list		6340839	0					
ANR	6340899	Identifier	p_types_list		6340839	0					
ANR	6340900	Argument	curr_idx		6340839	1					
ANR	6340901	Identifier	curr_idx		6340839	0					
ANR	6340902	ReturnStatement	return curr_idx ;	242:1:5578:5593	6340839	4	True				
ANR	6340903	Identifier	curr_idx		6340839	0					
ANR	6340904	ReturnType	static int		6340839	1					
ANR	6340905	Identifier	get_array_element_type		6340839	2					
ANR	6340906	ParameterList	"void * type , void * * ret_type"		6340839	3					
ANR	6340907	Parameter	void * type	230:34:5283:5292	6340839	0	True				
ANR	6340908	ParameterType	void *		6340839	0					
ANR	6340909	Identifier	type		6340839	1					
ANR	6340910	Parameter	void * * ret_type	230:46:5295:5309	6340839	1	True				
ANR	6340911	ParameterType	void * *		6340839	0					
ANR	6340912	Identifier	ret_type		6340839	1					
ANR	6340913	CFGEntryNode	ENTRY		6340839		True				
ANR	6340914	CFGExitNode	EXIT		6340839		True				
ANR	6340915	Symbol	ret_type		6340839						
ANR	6340916	Symbol	base_idx		6340839						
ANR	6340917	Symbol	p_types_list		6340839						
ANR	6340918	Symbol	r_list_get_n		6340839						
ANR	6340919	Symbol	t -> type_info		6340839						
ANR	6340920	Symbol	type		6340839						
ANR	6340921	Symbol	t		6340839						
ANR	6340922	Symbol	lf_array		6340839						
ANR	6340923	Symbol	* lf_array		6340839						
ANR	6340924	Symbol	* ret_type		6340839						
ANR	6340925	Symbol	curr_idx		6340839						
ANR	6340926	Symbol	lf_array -> element_type		6340839						
ANR	6340927	Symbol	* t		6340839						
ANR	6340928	Function	get_array_index_type	246:0:5678:6020							
ANR	6340929	FunctionDef	"get_array_index_type (void * type , void * * ret_type)"		6340928	0					
ANR	6340930	CompoundStatement		246:61:5739:6020	6340928	0					
ANR	6340931	IdentifierDeclStatement	STypeInfo * t = ( STypeInfo * ) type ;	247:1:5742:5775	6340928	0	True				
ANR	6340932	IdentifierDecl	* t = ( STypeInfo * ) type		6340928	0					
ANR	6340933	IdentifierDeclType	STypeInfo *		6340928	0					
ANR	6340934	Identifier	t		6340928	1					
ANR	6340935	AssignmentExpression	* t = ( STypeInfo * ) type		6340928	2		=			
ANR	6340936	Identifier	t		6340928	0					
ANR	6340937	CastExpression	( STypeInfo * ) type		6340928	1					
ANR	6340938	CastTarget	STypeInfo *		6340928	0					
ANR	6340939	Identifier	type		6340928	1					
ANR	6340940	IdentifierDeclStatement	SLF_ARRAY * lf_array = ( SLF_ARRAY * ) t -> type_info ;	248:1:5778:5826	6340928	1	True				
ANR	6340941	IdentifierDecl	* lf_array = ( SLF_ARRAY * ) t -> type_info		6340928	0					
ANR	6340942	IdentifierDeclType	SLF_ARRAY *		6340928	0					
ANR	6340943	Identifier	lf_array		6340928	1					
ANR	6340944	AssignmentExpression	* lf_array = ( SLF_ARRAY * ) t -> type_info		6340928	2		=			
ANR	6340945	Identifier	lf_array		6340928	0					
ANR	6340946	CastExpression	( SLF_ARRAY * ) t -> type_info		6340928	1					
ANR	6340947	CastTarget	SLF_ARRAY *		6340928	0					
ANR	6340948	PtrMemberAccess	t -> type_info		6340928	1					
ANR	6340949	Identifier	t		6340928	0					
ANR	6340950	Identifier	type_info		6340928	1					
ANR	6340951	IdentifierDeclStatement	int curr_idx = lf_array -> index_type ;	249:1:5829:5864	6340928	2	True				
ANR	6340952	IdentifierDecl	curr_idx = lf_array -> index_type		6340928	0					
ANR	6340953	IdentifierDeclType	int		6340928	0					
ANR	6340954	Identifier	curr_idx		6340928	1					
ANR	6340955	AssignmentExpression	curr_idx = lf_array -> index_type		6340928	2		=			
ANR	6340956	Identifier	curr_idx		6340928	0					
ANR	6340957	PtrMemberAccess	lf_array -> index_type		6340928	1					
ANR	6340958	Identifier	lf_array		6340928	0					
ANR	6340959	Identifier	index_type		6340928	1					
ANR	6340960	IfStatement	if ( curr_idx < base_idx )		6340928	3					
ANR	6340961	Condition	curr_idx < base_idx	251:5:5872:5890	6340928	0	True				
ANR	6340962	RelationalExpression	curr_idx < base_idx		6340928	0		<			
ANR	6340963	Identifier	curr_idx		6340928	0					
ANR	6340964	Identifier	base_idx		6340928	1					
ANR	6340965	CompoundStatement		6:26:153:153	6340928	1					
ANR	6340966	ExpressionStatement	* ret_type = 0	252:2:5897:5910	6340928	0	True				
ANR	6340967	AssignmentExpression	* ret_type = 0		6340928	0		=			
ANR	6340968	UnaryOperationExpression	* ret_type		6340928	0					
ANR	6340969	UnaryOperator	*		6340928	0					
ANR	6340970	Identifier	ret_type		6340928	1					
ANR	6340971	PrimaryExpression	0		6340928	1					
ANR	6340972	ElseStatement	else		6340928	0					
ANR	6340973	CompoundStatement		8:8:180:180	6340928	0					
ANR	6340974	ExpressionStatement	curr_idx -= base_idx	254:2:5924:5944	6340928	0	True				
ANR	6340975	AssignmentExpression	curr_idx -= base_idx		6340928	0		-=			
ANR	6340976	Identifier	curr_idx		6340928	0					
ANR	6340977	Identifier	base_idx		6340928	1					
ANR	6340978	ExpressionStatement	"* ret_type = r_list_get_n ( p_types_list , curr_idx )"	255:2:5948:5996	6340928	1	True				
ANR	6340979	AssignmentExpression	"* ret_type = r_list_get_n ( p_types_list , curr_idx )"		6340928	0		=			
ANR	6340980	UnaryOperationExpression	* ret_type		6340928	0					
ANR	6340981	UnaryOperator	*		6340928	0					
ANR	6340982	Identifier	ret_type		6340928	1					
ANR	6340983	CallExpression	"r_list_get_n ( p_types_list , curr_idx )"		6340928	1					
ANR	6340984	Callee	r_list_get_n		6340928	0					
ANR	6340985	Identifier	r_list_get_n		6340928	0					
ANR	6340986	ArgumentList	p_types_list		6340928	1					
ANR	6340987	Argument	p_types_list		6340928	0					
ANR	6340988	Identifier	p_types_list		6340928	0					
ANR	6340989	Argument	curr_idx		6340928	1					
ANR	6340990	Identifier	curr_idx		6340928	0					
ANR	6340991	ReturnStatement	return curr_idx ;	258:1:6003:6018	6340928	4	True				
ANR	6340992	Identifier	curr_idx		6340928	0					
ANR	6340993	ReturnType	static int		6340928	1					
ANR	6340994	Identifier	get_array_index_type		6340928	2					
ANR	6340995	ParameterList	"void * type , void * * ret_type"		6340928	3					
ANR	6340996	Parameter	void * type	246:32:5710:5719	6340928	0	True				
ANR	6340997	ParameterType	void *		6340928	0					
ANR	6340998	Identifier	type		6340928	1					
ANR	6340999	Parameter	void * * ret_type	246:44:5722:5736	6340928	1	True				
ANR	6341000	ParameterType	void * *		6340928	0					
ANR	6341001	Identifier	ret_type		6340928	1					
ANR	6341002	CFGEntryNode	ENTRY		6340928		True				
ANR	6341003	CFGExitNode	EXIT		6340928		True				
ANR	6341004	Symbol	ret_type		6340928						
ANR	6341005	Symbol	base_idx		6340928						
ANR	6341006	Symbol	r_list_get_n		6340928						
ANR	6341007	Symbol	p_types_list		6340928						
ANR	6341008	Symbol	t -> type_info		6340928						
ANR	6341009	Symbol	type		6340928						
ANR	6341010	Symbol	t		6340928						
ANR	6341011	Symbol	lf_array		6340928						
ANR	6341012	Symbol	* lf_array		6340928						
ANR	6341013	Symbol	* ret_type		6340928						
ANR	6341014	Symbol	curr_idx		6340928						
ANR	6341015	Symbol	lf_array -> index_type		6340928						
ANR	6341016	Symbol	* t		6340928						
ANR	6341017	Function	get_bitfield_base_type	262:0:6103:6440							
ANR	6341018	FunctionDef	"get_bitfield_base_type (void * type , void * * ret_type)"		6341017	0					
ANR	6341019	CompoundStatement		262:63:6166:6440	6341017	0					
ANR	6341020	IdentifierDeclStatement	STypeInfo * t = ( STypeInfo * ) type ;	263:1:6169:6202	6341017	0	True				
ANR	6341021	IdentifierDecl	* t = ( STypeInfo * ) type		6341017	0					
ANR	6341022	IdentifierDeclType	STypeInfo *		6341017	0					
ANR	6341023	Identifier	t		6341017	1					
ANR	6341024	AssignmentExpression	* t = ( STypeInfo * ) type		6341017	2		=			
ANR	6341025	Identifier	t		6341017	0					
ANR	6341026	CastExpression	( STypeInfo * ) type		6341017	1					
ANR	6341027	CastTarget	STypeInfo *		6341017	0					
ANR	6341028	Identifier	type		6341017	1					
ANR	6341029	IdentifierDeclStatement	SLF_BITFIELD * lf = ( SLF_BITFIELD * ) t -> type_info ;	264:1:6205:6253	6341017	1	True				
ANR	6341030	IdentifierDecl	* lf = ( SLF_BITFIELD * ) t -> type_info		6341017	0					
ANR	6341031	IdentifierDeclType	SLF_BITFIELD *		6341017	0					
ANR	6341032	Identifier	lf		6341017	1					
ANR	6341033	AssignmentExpression	* lf = ( SLF_BITFIELD * ) t -> type_info		6341017	2		=			
ANR	6341034	Identifier	lf		6341017	0					
ANR	6341035	CastExpression	( SLF_BITFIELD * ) t -> type_info		6341017	1					
ANR	6341036	CastTarget	SLF_BITFIELD *		6341017	0					
ANR	6341037	PtrMemberAccess	t -> type_info		6341017	1					
ANR	6341038	Identifier	t		6341017	0					
ANR	6341039	Identifier	type_info		6341017	1					
ANR	6341040	IdentifierDeclStatement	int curr_idx = lf -> base_type ;	265:1:6256:6284	6341017	2	True				
ANR	6341041	IdentifierDecl	curr_idx = lf -> base_type		6341017	0					
ANR	6341042	IdentifierDeclType	int		6341017	0					
ANR	6341043	Identifier	curr_idx		6341017	1					
ANR	6341044	AssignmentExpression	curr_idx = lf -> base_type		6341017	2		=			
ANR	6341045	Identifier	curr_idx		6341017	0					
ANR	6341046	PtrMemberAccess	lf -> base_type		6341017	1					
ANR	6341047	Identifier	lf		6341017	0					
ANR	6341048	Identifier	base_type		6341017	1					
ANR	6341049	IfStatement	if ( curr_idx < base_idx )		6341017	3					
ANR	6341050	Condition	curr_idx < base_idx	267:5:6292:6310	6341017	0	True				
ANR	6341051	RelationalExpression	curr_idx < base_idx		6341017	0		<			
ANR	6341052	Identifier	curr_idx		6341017	0					
ANR	6341053	Identifier	base_idx		6341017	1					
ANR	6341054	CompoundStatement		6:26:146:146	6341017	1					
ANR	6341055	ExpressionStatement	* ret_type = 0	268:2:6317:6330	6341017	0	True				
ANR	6341056	AssignmentExpression	* ret_type = 0		6341017	0		=			
ANR	6341057	UnaryOperationExpression	* ret_type		6341017	0					
ANR	6341058	UnaryOperator	*		6341017	0					
ANR	6341059	Identifier	ret_type		6341017	1					
ANR	6341060	PrimaryExpression	0		6341017	1					
ANR	6341061	ElseStatement	else		6341017	0					
ANR	6341062	CompoundStatement		8:8:173:173	6341017	0					
ANR	6341063	ExpressionStatement	curr_idx -= base_idx	270:2:6344:6364	6341017	0	True				
ANR	6341064	AssignmentExpression	curr_idx -= base_idx		6341017	0		-=			
ANR	6341065	Identifier	curr_idx		6341017	0					
ANR	6341066	Identifier	base_idx		6341017	1					
ANR	6341067	ExpressionStatement	"* ret_type = r_list_get_n ( p_types_list , curr_idx )"	271:2:6368:6416	6341017	1	True				
ANR	6341068	AssignmentExpression	"* ret_type = r_list_get_n ( p_types_list , curr_idx )"		6341017	0		=			
ANR	6341069	UnaryOperationExpression	* ret_type		6341017	0					
ANR	6341070	UnaryOperator	*		6341017	0					
ANR	6341071	Identifier	ret_type		6341017	1					
ANR	6341072	CallExpression	"r_list_get_n ( p_types_list , curr_idx )"		6341017	1					
ANR	6341073	Callee	r_list_get_n		6341017	0					
ANR	6341074	Identifier	r_list_get_n		6341017	0					
ANR	6341075	ArgumentList	p_types_list		6341017	1					
ANR	6341076	Argument	p_types_list		6341017	0					
ANR	6341077	Identifier	p_types_list		6341017	0					
ANR	6341078	Argument	curr_idx		6341017	1					
ANR	6341079	Identifier	curr_idx		6341017	0					
ANR	6341080	ReturnStatement	return curr_idx ;	274:1:6423:6438	6341017	4	True				
ANR	6341081	Identifier	curr_idx		6341017	0					
ANR	6341082	ReturnType	static int		6341017	1					
ANR	6341083	Identifier	get_bitfield_base_type		6341017	2					
ANR	6341084	ParameterList	"void * type , void * * ret_type"		6341017	3					
ANR	6341085	Parameter	void * type	262:34:6137:6146	6341017	0	True				
ANR	6341086	ParameterType	void *		6341017	0					
ANR	6341087	Identifier	type		6341017	1					
ANR	6341088	Parameter	void * * ret_type	262:46:6149:6163	6341017	1	True				
ANR	6341089	ParameterType	void * *		6341017	0					
ANR	6341090	Identifier	ret_type		6341017	1					
ANR	6341091	CFGEntryNode	ENTRY		6341017		True				
ANR	6341092	CFGExitNode	EXIT		6341017		True				
ANR	6341093	Symbol	* lf		6341017						
ANR	6341094	Symbol	ret_type		6341017						
ANR	6341095	Symbol	base_idx		6341017						
ANR	6341096	Symbol	lf -> base_type		6341017						
ANR	6341097	Symbol	p_types_list		6341017						
ANR	6341098	Symbol	r_list_get_n		6341017						
ANR	6341099	Symbol	t -> type_info		6341017						
ANR	6341100	Symbol	type		6341017						
ANR	6341101	Symbol	t		6341017						
ANR	6341102	Symbol	* ret_type		6341017						
ANR	6341103	Symbol	curr_idx		6341017						
ANR	6341104	Symbol	lf		6341017						
ANR	6341105	Symbol	* t		6341017						
ANR	6341106	Function	get_class_struct_derived	278:0:6523:6862							
ANR	6341107	FunctionDef	"get_class_struct_derived (void * type , void * * ret_type)"		6341106	0					
ANR	6341108	CompoundStatement		278:65:6588:6862	6341106	0					
ANR	6341109	IdentifierDeclStatement	STypeInfo * t = ( STypeInfo * ) type ;	279:1:6591:6624	6341106	0	True				
ANR	6341110	IdentifierDecl	* t = ( STypeInfo * ) type		6341106	0					
ANR	6341111	IdentifierDeclType	STypeInfo *		6341106	0					
ANR	6341112	Identifier	t		6341106	1					
ANR	6341113	AssignmentExpression	* t = ( STypeInfo * ) type		6341106	2		=			
ANR	6341114	Identifier	t		6341106	0					
ANR	6341115	CastExpression	( STypeInfo * ) type		6341106	1					
ANR	6341116	CastTarget	STypeInfo *		6341106	0					
ANR	6341117	Identifier	type		6341106	1					
ANR	6341118	IdentifierDeclStatement	SLF_STRUCTURE * lf = ( SLF_STRUCTURE * ) t -> type_info ;	280:1:6627:6677	6341106	1	True				
ANR	6341119	IdentifierDecl	* lf = ( SLF_STRUCTURE * ) t -> type_info		6341106	0					
ANR	6341120	IdentifierDeclType	SLF_STRUCTURE *		6341106	0					
ANR	6341121	Identifier	lf		6341106	1					
ANR	6341122	AssignmentExpression	* lf = ( SLF_STRUCTURE * ) t -> type_info		6341106	2		=			
ANR	6341123	Identifier	lf		6341106	0					
ANR	6341124	CastExpression	( SLF_STRUCTURE * ) t -> type_info		6341106	1					
ANR	6341125	CastTarget	SLF_STRUCTURE *		6341106	0					
ANR	6341126	PtrMemberAccess	t -> type_info		6341106	1					
ANR	6341127	Identifier	t		6341106	0					
ANR	6341128	Identifier	type_info		6341106	1					
ANR	6341129	IdentifierDeclStatement	int curr_idx = lf -> derived ;	281:1:6680:6706	6341106	2	True				
ANR	6341130	IdentifierDecl	curr_idx = lf -> derived		6341106	0					
ANR	6341131	IdentifierDeclType	int		6341106	0					
ANR	6341132	Identifier	curr_idx		6341106	1					
ANR	6341133	AssignmentExpression	curr_idx = lf -> derived		6341106	2		=			
ANR	6341134	Identifier	curr_idx		6341106	0					
ANR	6341135	PtrMemberAccess	lf -> derived		6341106	1					
ANR	6341136	Identifier	lf		6341106	0					
ANR	6341137	Identifier	derived		6341106	1					
ANR	6341138	IfStatement	if ( curr_idx < base_idx )		6341106	3					
ANR	6341139	Condition	curr_idx < base_idx	283:5:6714:6732	6341106	0	True				
ANR	6341140	RelationalExpression	curr_idx < base_idx		6341106	0		<			
ANR	6341141	Identifier	curr_idx		6341106	0					
ANR	6341142	Identifier	base_idx		6341106	1					
ANR	6341143	CompoundStatement		6:26:146:146	6341106	1					
ANR	6341144	ExpressionStatement	* ret_type = 0	284:2:6739:6752	6341106	0	True				
ANR	6341145	AssignmentExpression	* ret_type = 0		6341106	0		=			
ANR	6341146	UnaryOperationExpression	* ret_type		6341106	0					
ANR	6341147	UnaryOperator	*		6341106	0					
ANR	6341148	Identifier	ret_type		6341106	1					
ANR	6341149	PrimaryExpression	0		6341106	1					
ANR	6341150	ElseStatement	else		6341106	0					
ANR	6341151	CompoundStatement		8:8:173:173	6341106	0					
ANR	6341152	ExpressionStatement	curr_idx -= base_idx	286:2:6766:6786	6341106	0	True				
ANR	6341153	AssignmentExpression	curr_idx -= base_idx		6341106	0		-=			
ANR	6341154	Identifier	curr_idx		6341106	0					
ANR	6341155	Identifier	base_idx		6341106	1					
ANR	6341156	ExpressionStatement	"* ret_type = r_list_get_n ( p_types_list , curr_idx )"	287:2:6790:6838	6341106	1	True				
ANR	6341157	AssignmentExpression	"* ret_type = r_list_get_n ( p_types_list , curr_idx )"		6341106	0		=			
ANR	6341158	UnaryOperationExpression	* ret_type		6341106	0					
ANR	6341159	UnaryOperator	*		6341106	0					
ANR	6341160	Identifier	ret_type		6341106	1					
ANR	6341161	CallExpression	"r_list_get_n ( p_types_list , curr_idx )"		6341106	1					
ANR	6341162	Callee	r_list_get_n		6341106	0					
ANR	6341163	Identifier	r_list_get_n		6341106	0					
ANR	6341164	ArgumentList	p_types_list		6341106	1					
ANR	6341165	Argument	p_types_list		6341106	0					
ANR	6341166	Identifier	p_types_list		6341106	0					
ANR	6341167	Argument	curr_idx		6341106	1					
ANR	6341168	Identifier	curr_idx		6341106	0					
ANR	6341169	ReturnStatement	return curr_idx ;	290:1:6845:6860	6341106	4	True				
ANR	6341170	Identifier	curr_idx		6341106	0					
ANR	6341171	ReturnType	static int		6341106	1					
ANR	6341172	Identifier	get_class_struct_derived		6341106	2					
ANR	6341173	ParameterList	"void * type , void * * ret_type"		6341106	3					
ANR	6341174	Parameter	void * type	278:36:6559:6568	6341106	0	True				
ANR	6341175	ParameterType	void *		6341106	0					
ANR	6341176	Identifier	type		6341106	1					
ANR	6341177	Parameter	void * * ret_type	278:48:6571:6585	6341106	1	True				
ANR	6341178	ParameterType	void * *		6341106	0					
ANR	6341179	Identifier	ret_type		6341106	1					
ANR	6341180	CFGEntryNode	ENTRY		6341106		True				
ANR	6341181	CFGExitNode	EXIT		6341106		True				
ANR	6341182	Symbol	* lf		6341106						
ANR	6341183	Symbol	ret_type		6341106						
ANR	6341184	Symbol	base_idx		6341106						
ANR	6341185	Symbol	r_list_get_n		6341106						
ANR	6341186	Symbol	p_types_list		6341106						
ANR	6341187	Symbol	t -> type_info		6341106						
ANR	6341188	Symbol	type		6341106						
ANR	6341189	Symbol	lf -> derived		6341106						
ANR	6341190	Symbol	t		6341106						
ANR	6341191	Symbol	* ret_type		6341106						
ANR	6341192	Symbol	curr_idx		6341106						
ANR	6341193	Symbol	lf		6341106						
ANR	6341194	Symbol	* t		6341106						
ANR	6341195	Function	get_class_struct_vshape	294:0:6945:7282							
ANR	6341196	FunctionDef	"get_class_struct_vshape (void * type , void * * ret_type)"		6341195	0					
ANR	6341197	CompoundStatement		294:64:7009:7282	6341195	0					
ANR	6341198	IdentifierDeclStatement	STypeInfo * t = ( STypeInfo * ) type ;	295:1:7012:7045	6341195	0	True				
ANR	6341199	IdentifierDecl	* t = ( STypeInfo * ) type		6341195	0					
ANR	6341200	IdentifierDeclType	STypeInfo *		6341195	0					
ANR	6341201	Identifier	t		6341195	1					
ANR	6341202	AssignmentExpression	* t = ( STypeInfo * ) type		6341195	2		=			
ANR	6341203	Identifier	t		6341195	0					
ANR	6341204	CastExpression	( STypeInfo * ) type		6341195	1					
ANR	6341205	CastTarget	STypeInfo *		6341195	0					
ANR	6341206	Identifier	type		6341195	1					
ANR	6341207	IdentifierDeclStatement	SLF_STRUCTURE * lf = ( SLF_STRUCTURE * ) t -> type_info ;	296:1:7048:7098	6341195	1	True				
ANR	6341208	IdentifierDecl	* lf = ( SLF_STRUCTURE * ) t -> type_info		6341195	0					
ANR	6341209	IdentifierDeclType	SLF_STRUCTURE *		6341195	0					
ANR	6341210	Identifier	lf		6341195	1					
ANR	6341211	AssignmentExpression	* lf = ( SLF_STRUCTURE * ) t -> type_info		6341195	2		=			
ANR	6341212	Identifier	lf		6341195	0					
ANR	6341213	CastExpression	( SLF_STRUCTURE * ) t -> type_info		6341195	1					
ANR	6341214	CastTarget	SLF_STRUCTURE *		6341195	0					
ANR	6341215	PtrMemberAccess	t -> type_info		6341195	1					
ANR	6341216	Identifier	t		6341195	0					
ANR	6341217	Identifier	type_info		6341195	1					
ANR	6341218	IdentifierDeclStatement	int curr_idx = lf -> vshape ;	297:1:7101:7126	6341195	2	True				
ANR	6341219	IdentifierDecl	curr_idx = lf -> vshape		6341195	0					
ANR	6341220	IdentifierDeclType	int		6341195	0					
ANR	6341221	Identifier	curr_idx		6341195	1					
ANR	6341222	AssignmentExpression	curr_idx = lf -> vshape		6341195	2		=			
ANR	6341223	Identifier	curr_idx		6341195	0					
ANR	6341224	PtrMemberAccess	lf -> vshape		6341195	1					
ANR	6341225	Identifier	lf		6341195	0					
ANR	6341226	Identifier	vshape		6341195	1					
ANR	6341227	IfStatement	if ( curr_idx < base_idx )		6341195	3					
ANR	6341228	Condition	curr_idx < base_idx	299:5:7134:7152	6341195	0	True				
ANR	6341229	RelationalExpression	curr_idx < base_idx		6341195	0		<			
ANR	6341230	Identifier	curr_idx		6341195	0					
ANR	6341231	Identifier	base_idx		6341195	1					
ANR	6341232	CompoundStatement		6:26:145:145	6341195	1					
ANR	6341233	ExpressionStatement	* ret_type = 0	300:2:7159:7172	6341195	0	True				
ANR	6341234	AssignmentExpression	* ret_type = 0		6341195	0		=			
ANR	6341235	UnaryOperationExpression	* ret_type		6341195	0					
ANR	6341236	UnaryOperator	*		6341195	0					
ANR	6341237	Identifier	ret_type		6341195	1					
ANR	6341238	PrimaryExpression	0		6341195	1					
ANR	6341239	ElseStatement	else		6341195	0					
ANR	6341240	CompoundStatement		8:8:172:172	6341195	0					
ANR	6341241	ExpressionStatement	curr_idx -= base_idx	302:2:7186:7206	6341195	0	True				
ANR	6341242	AssignmentExpression	curr_idx -= base_idx		6341195	0		-=			
ANR	6341243	Identifier	curr_idx		6341195	0					
ANR	6341244	Identifier	base_idx		6341195	1					
ANR	6341245	ExpressionStatement	"* ret_type = r_list_get_n ( p_types_list , curr_idx )"	303:2:7210:7258	6341195	1	True				
ANR	6341246	AssignmentExpression	"* ret_type = r_list_get_n ( p_types_list , curr_idx )"		6341195	0		=			
ANR	6341247	UnaryOperationExpression	* ret_type		6341195	0					
ANR	6341248	UnaryOperator	*		6341195	0					
ANR	6341249	Identifier	ret_type		6341195	1					
ANR	6341250	CallExpression	"r_list_get_n ( p_types_list , curr_idx )"		6341195	1					
ANR	6341251	Callee	r_list_get_n		6341195	0					
ANR	6341252	Identifier	r_list_get_n		6341195	0					
ANR	6341253	ArgumentList	p_types_list		6341195	1					
ANR	6341254	Argument	p_types_list		6341195	0					
ANR	6341255	Identifier	p_types_list		6341195	0					
ANR	6341256	Argument	curr_idx		6341195	1					
ANR	6341257	Identifier	curr_idx		6341195	0					
ANR	6341258	ReturnStatement	return curr_idx ;	306:1:7265:7280	6341195	4	True				
ANR	6341259	Identifier	curr_idx		6341195	0					
ANR	6341260	ReturnType	static int		6341195	1					
ANR	6341261	Identifier	get_class_struct_vshape		6341195	2					
ANR	6341262	ParameterList	"void * type , void * * ret_type"		6341195	3					
ANR	6341263	Parameter	void * type	294:35:6980:6989	6341195	0	True				
ANR	6341264	ParameterType	void *		6341195	0					
ANR	6341265	Identifier	type		6341195	1					
ANR	6341266	Parameter	void * * ret_type	294:47:6992:7006	6341195	1	True				
ANR	6341267	ParameterType	void * *		6341195	0					
ANR	6341268	Identifier	ret_type		6341195	1					
ANR	6341269	CFGEntryNode	ENTRY		6341195		True				
ANR	6341270	CFGExitNode	EXIT		6341195		True				
ANR	6341271	Symbol	* lf		6341195						
ANR	6341272	Symbol	ret_type		6341195						
ANR	6341273	Symbol	base_idx		6341195						
ANR	6341274	Symbol	p_types_list		6341195						
ANR	6341275	Symbol	r_list_get_n		6341195						
ANR	6341276	Symbol	t -> type_info		6341195						
ANR	6341277	Symbol	type		6341195						
ANR	6341278	Symbol	lf -> vshape		6341195						
ANR	6341279	Symbol	t		6341195						
ANR	6341280	Symbol	* ret_type		6341195						
ANR	6341281	Symbol	curr_idx		6341195						
ANR	6341282	Symbol	lf		6341195						
ANR	6341283	Symbol	* t		6341195						
ANR	6341284	Function	get_mfunction_return_type	310:0:7365:7709							
ANR	6341285	FunctionDef	"get_mfunction_return_type (void * type , void * * ret_type)"		6341284	0					
ANR	6341286	CompoundStatement		310:66:7431:7709	6341284	0					
ANR	6341287	IdentifierDeclStatement	STypeInfo * t = ( STypeInfo * ) type ;	311:1:7434:7467	6341284	0	True				
ANR	6341288	IdentifierDecl	* t = ( STypeInfo * ) type		6341284	0					
ANR	6341289	IdentifierDeclType	STypeInfo *		6341284	0					
ANR	6341290	Identifier	t		6341284	1					
ANR	6341291	AssignmentExpression	* t = ( STypeInfo * ) type		6341284	2		=			
ANR	6341292	Identifier	t		6341284	0					
ANR	6341293	CastExpression	( STypeInfo * ) type		6341284	1					
ANR	6341294	CastTarget	STypeInfo *		6341284	0					
ANR	6341295	Identifier	type		6341284	1					
ANR	6341296	IdentifierDeclStatement	SLF_MFUNCTION * lf = ( SLF_MFUNCTION * ) t -> type_info ;	312:1:7470:7520	6341284	1	True				
ANR	6341297	IdentifierDecl	* lf = ( SLF_MFUNCTION * ) t -> type_info		6341284	0					
ANR	6341298	IdentifierDeclType	SLF_MFUNCTION *		6341284	0					
ANR	6341299	Identifier	lf		6341284	1					
ANR	6341300	AssignmentExpression	* lf = ( SLF_MFUNCTION * ) t -> type_info		6341284	2		=			
ANR	6341301	Identifier	lf		6341284	0					
ANR	6341302	CastExpression	( SLF_MFUNCTION * ) t -> type_info		6341284	1					
ANR	6341303	CastTarget	SLF_MFUNCTION *		6341284	0					
ANR	6341304	PtrMemberAccess	t -> type_info		6341284	1					
ANR	6341305	Identifier	t		6341284	0					
ANR	6341306	Identifier	type_info		6341284	1					
ANR	6341307	IdentifierDeclStatement	int curr_idx = lf -> return_type ;	313:1:7523:7553	6341284	2	True				
ANR	6341308	IdentifierDecl	curr_idx = lf -> return_type		6341284	0					
ANR	6341309	IdentifierDeclType	int		6341284	0					
ANR	6341310	Identifier	curr_idx		6341284	1					
ANR	6341311	AssignmentExpression	curr_idx = lf -> return_type		6341284	2		=			
ANR	6341312	Identifier	curr_idx		6341284	0					
ANR	6341313	PtrMemberAccess	lf -> return_type		6341284	1					
ANR	6341314	Identifier	lf		6341284	0					
ANR	6341315	Identifier	return_type		6341284	1					
ANR	6341316	IfStatement	if ( curr_idx < base_idx )		6341284	3					
ANR	6341317	Condition	curr_idx < base_idx	315:5:7561:7579	6341284	0	True				
ANR	6341318	RelationalExpression	curr_idx < base_idx		6341284	0		<			
ANR	6341319	Identifier	curr_idx		6341284	0					
ANR	6341320	Identifier	base_idx		6341284	1					
ANR	6341321	CompoundStatement		6:26:150:150	6341284	1					
ANR	6341322	ExpressionStatement	* ret_type = 0	316:2:7586:7599	6341284	0	True				
ANR	6341323	AssignmentExpression	* ret_type = 0		6341284	0		=			
ANR	6341324	UnaryOperationExpression	* ret_type		6341284	0					
ANR	6341325	UnaryOperator	*		6341284	0					
ANR	6341326	Identifier	ret_type		6341284	1					
ANR	6341327	PrimaryExpression	0		6341284	1					
ANR	6341328	ElseStatement	else		6341284	0					
ANR	6341329	CompoundStatement		8:8:177:177	6341284	0					
ANR	6341330	ExpressionStatement	curr_idx -= base_idx	318:2:7613:7633	6341284	0	True				
ANR	6341331	AssignmentExpression	curr_idx -= base_idx		6341284	0		-=			
ANR	6341332	Identifier	curr_idx		6341284	0					
ANR	6341333	Identifier	base_idx		6341284	1					
ANR	6341334	ExpressionStatement	"* ret_type = r_list_get_n ( p_types_list , curr_idx )"	319:2:7637:7685	6341284	1	True				
ANR	6341335	AssignmentExpression	"* ret_type = r_list_get_n ( p_types_list , curr_idx )"		6341284	0		=			
ANR	6341336	UnaryOperationExpression	* ret_type		6341284	0					
ANR	6341337	UnaryOperator	*		6341284	0					
ANR	6341338	Identifier	ret_type		6341284	1					
ANR	6341339	CallExpression	"r_list_get_n ( p_types_list , curr_idx )"		6341284	1					
ANR	6341340	Callee	r_list_get_n		6341284	0					
ANR	6341341	Identifier	r_list_get_n		6341284	0					
ANR	6341342	ArgumentList	p_types_list		6341284	1					
ANR	6341343	Argument	p_types_list		6341284	0					
ANR	6341344	Identifier	p_types_list		6341284	0					
ANR	6341345	Argument	curr_idx		6341284	1					
ANR	6341346	Identifier	curr_idx		6341284	0					
ANR	6341347	ReturnStatement	return curr_idx ;	322:1:7692:7707	6341284	4	True				
ANR	6341348	Identifier	curr_idx		6341284	0					
ANR	6341349	ReturnType	static int		6341284	1					
ANR	6341350	Identifier	get_mfunction_return_type		6341284	2					
ANR	6341351	ParameterList	"void * type , void * * ret_type"		6341284	3					
ANR	6341352	Parameter	void * type	310:37:7402:7411	6341284	0	True				
ANR	6341353	ParameterType	void *		6341284	0					
ANR	6341354	Identifier	type		6341284	1					
ANR	6341355	Parameter	void * * ret_type	310:49:7414:7428	6341284	1	True				
ANR	6341356	ParameterType	void * *		6341284	0					
ANR	6341357	Identifier	ret_type		6341284	1					
ANR	6341358	CFGEntryNode	ENTRY		6341284		True				
ANR	6341359	CFGExitNode	EXIT		6341284		True				
ANR	6341360	Symbol	* lf		6341284						
ANR	6341361	Symbol	ret_type		6341284						
ANR	6341362	Symbol	base_idx		6341284						
ANR	6341363	Symbol	r_list_get_n		6341284						
ANR	6341364	Symbol	p_types_list		6341284						
ANR	6341365	Symbol	t -> type_info		6341284						
ANR	6341366	Symbol	lf -> return_type		6341284						
ANR	6341367	Symbol	type		6341284						
ANR	6341368	Symbol	t		6341284						
ANR	6341369	Symbol	* ret_type		6341284						
ANR	6341370	Symbol	curr_idx		6341284						
ANR	6341371	Symbol	lf		6341284						
ANR	6341372	Symbol	* t		6341284						
ANR	6341373	Function	get_mfunction_class_type	326:0:7792:8134							
ANR	6341374	FunctionDef	"get_mfunction_class_type (void * type , void * * ret_type)"		6341373	0					
ANR	6341375	CompoundStatement		326:65:7857:8134	6341373	0					
ANR	6341376	IdentifierDeclStatement	STypeInfo * t = ( STypeInfo * ) type ;	327:1:7860:7893	6341373	0	True				
ANR	6341377	IdentifierDecl	* t = ( STypeInfo * ) type		6341373	0					
ANR	6341378	IdentifierDeclType	STypeInfo *		6341373	0					
ANR	6341379	Identifier	t		6341373	1					
ANR	6341380	AssignmentExpression	* t = ( STypeInfo * ) type		6341373	2		=			
ANR	6341381	Identifier	t		6341373	0					
ANR	6341382	CastExpression	( STypeInfo * ) type		6341373	1					
ANR	6341383	CastTarget	STypeInfo *		6341373	0					
ANR	6341384	Identifier	type		6341373	1					
ANR	6341385	IdentifierDeclStatement	SLF_MFUNCTION * lf = ( SLF_MFUNCTION * ) t -> type_info ;	328:1:7896:7946	6341373	1	True				
ANR	6341386	IdentifierDecl	* lf = ( SLF_MFUNCTION * ) t -> type_info		6341373	0					
ANR	6341387	IdentifierDeclType	SLF_MFUNCTION *		6341373	0					
ANR	6341388	Identifier	lf		6341373	1					
ANR	6341389	AssignmentExpression	* lf = ( SLF_MFUNCTION * ) t -> type_info		6341373	2		=			
ANR	6341390	Identifier	lf		6341373	0					
ANR	6341391	CastExpression	( SLF_MFUNCTION * ) t -> type_info		6341373	1					
ANR	6341392	CastTarget	SLF_MFUNCTION *		6341373	0					
ANR	6341393	PtrMemberAccess	t -> type_info		6341373	1					
ANR	6341394	Identifier	t		6341373	0					
ANR	6341395	Identifier	type_info		6341373	1					
ANR	6341396	IdentifierDeclStatement	int curr_idx = lf -> class_type ;	329:1:7949:7978	6341373	2	True				
ANR	6341397	IdentifierDecl	curr_idx = lf -> class_type		6341373	0					
ANR	6341398	IdentifierDeclType	int		6341373	0					
ANR	6341399	Identifier	curr_idx		6341373	1					
ANR	6341400	AssignmentExpression	curr_idx = lf -> class_type		6341373	2		=			
ANR	6341401	Identifier	curr_idx		6341373	0					
ANR	6341402	PtrMemberAccess	lf -> class_type		6341373	1					
ANR	6341403	Identifier	lf		6341373	0					
ANR	6341404	Identifier	class_type		6341373	1					
ANR	6341405	IfStatement	if ( curr_idx < base_idx )		6341373	3					
ANR	6341406	Condition	curr_idx < base_idx	331:5:7986:8004	6341373	0	True				
ANR	6341407	RelationalExpression	curr_idx < base_idx		6341373	0		<			
ANR	6341408	Identifier	curr_idx		6341373	0					
ANR	6341409	Identifier	base_idx		6341373	1					
ANR	6341410	CompoundStatement		6:26:149:149	6341373	1					
ANR	6341411	ExpressionStatement	* ret_type = 0	332:2:8011:8024	6341373	0	True				
ANR	6341412	AssignmentExpression	* ret_type = 0		6341373	0		=			
ANR	6341413	UnaryOperationExpression	* ret_type		6341373	0					
ANR	6341414	UnaryOperator	*		6341373	0					
ANR	6341415	Identifier	ret_type		6341373	1					
ANR	6341416	PrimaryExpression	0		6341373	1					
ANR	6341417	ElseStatement	else		6341373	0					
ANR	6341418	CompoundStatement		8:8:176:176	6341373	0					
ANR	6341419	ExpressionStatement	curr_idx -= base_idx	334:2:8038:8058	6341373	0	True				
ANR	6341420	AssignmentExpression	curr_idx -= base_idx		6341373	0		-=			
ANR	6341421	Identifier	curr_idx		6341373	0					
ANR	6341422	Identifier	base_idx		6341373	1					
ANR	6341423	ExpressionStatement	"* ret_type = r_list_get_n ( p_types_list , curr_idx )"	335:2:8062:8110	6341373	1	True				
ANR	6341424	AssignmentExpression	"* ret_type = r_list_get_n ( p_types_list , curr_idx )"		6341373	0		=			
ANR	6341425	UnaryOperationExpression	* ret_type		6341373	0					
ANR	6341426	UnaryOperator	*		6341373	0					
ANR	6341427	Identifier	ret_type		6341373	1					
ANR	6341428	CallExpression	"r_list_get_n ( p_types_list , curr_idx )"		6341373	1					
ANR	6341429	Callee	r_list_get_n		6341373	0					
ANR	6341430	Identifier	r_list_get_n		6341373	0					
ANR	6341431	ArgumentList	p_types_list		6341373	1					
ANR	6341432	Argument	p_types_list		6341373	0					
ANR	6341433	Identifier	p_types_list		6341373	0					
ANR	6341434	Argument	curr_idx		6341373	1					
ANR	6341435	Identifier	curr_idx		6341373	0					
ANR	6341436	ReturnStatement	return curr_idx ;	338:1:8117:8132	6341373	4	True				
ANR	6341437	Identifier	curr_idx		6341373	0					
ANR	6341438	ReturnType	static int		6341373	1					
ANR	6341439	Identifier	get_mfunction_class_type		6341373	2					
ANR	6341440	ParameterList	"void * type , void * * ret_type"		6341373	3					
ANR	6341441	Parameter	void * type	326:36:7828:7837	6341373	0	True				
ANR	6341442	ParameterType	void *		6341373	0					
ANR	6341443	Identifier	type		6341373	1					
ANR	6341444	Parameter	void * * ret_type	326:48:7840:7854	6341373	1	True				
ANR	6341445	ParameterType	void * *		6341373	0					
ANR	6341446	Identifier	ret_type		6341373	1					
ANR	6341447	CFGEntryNode	ENTRY		6341373		True				
ANR	6341448	CFGExitNode	EXIT		6341373		True				
ANR	6341449	Symbol	* lf		6341373						
ANR	6341450	Symbol	ret_type		6341373						
ANR	6341451	Symbol	base_idx		6341373						
ANR	6341452	Symbol	p_types_list		6341373						
ANR	6341453	Symbol	r_list_get_n		6341373						
ANR	6341454	Symbol	t -> type_info		6341373						
ANR	6341455	Symbol	type		6341373						
ANR	6341456	Symbol	lf -> class_type		6341373						
ANR	6341457	Symbol	t		6341373						
ANR	6341458	Symbol	* ret_type		6341373						
ANR	6341459	Symbol	curr_idx		6341373						
ANR	6341460	Symbol	lf		6341373						
ANR	6341461	Symbol	* t		6341373						
ANR	6341462	Function	get_mfunction_this_type	342:0:8217:8557							
ANR	6341463	FunctionDef	"get_mfunction_this_type (void * type , void * * ret_type)"		6341462	0					
ANR	6341464	CompoundStatement		342:64:8281:8557	6341462	0					
ANR	6341465	IdentifierDeclStatement	STypeInfo * t = ( STypeInfo * ) type ;	343:1:8284:8317	6341462	0	True				
ANR	6341466	IdentifierDecl	* t = ( STypeInfo * ) type		6341462	0					
ANR	6341467	IdentifierDeclType	STypeInfo *		6341462	0					
ANR	6341468	Identifier	t		6341462	1					
ANR	6341469	AssignmentExpression	* t = ( STypeInfo * ) type		6341462	2		=			
ANR	6341470	Identifier	t		6341462	0					
ANR	6341471	CastExpression	( STypeInfo * ) type		6341462	1					
ANR	6341472	CastTarget	STypeInfo *		6341462	0					
ANR	6341473	Identifier	type		6341462	1					
ANR	6341474	IdentifierDeclStatement	SLF_MFUNCTION * lf = ( SLF_MFUNCTION * ) t -> type_info ;	344:1:8320:8370	6341462	1	True				
ANR	6341475	IdentifierDecl	* lf = ( SLF_MFUNCTION * ) t -> type_info		6341462	0					
ANR	6341476	IdentifierDeclType	SLF_MFUNCTION *		6341462	0					
ANR	6341477	Identifier	lf		6341462	1					
ANR	6341478	AssignmentExpression	* lf = ( SLF_MFUNCTION * ) t -> type_info		6341462	2		=			
ANR	6341479	Identifier	lf		6341462	0					
ANR	6341480	CastExpression	( SLF_MFUNCTION * ) t -> type_info		6341462	1					
ANR	6341481	CastTarget	SLF_MFUNCTION *		6341462	0					
ANR	6341482	PtrMemberAccess	t -> type_info		6341462	1					
ANR	6341483	Identifier	t		6341462	0					
ANR	6341484	Identifier	type_info		6341462	1					
ANR	6341485	IdentifierDeclStatement	int curr_idx = lf -> this_type ;	345:1:8373:8401	6341462	2	True				
ANR	6341486	IdentifierDecl	curr_idx = lf -> this_type		6341462	0					
ANR	6341487	IdentifierDeclType	int		6341462	0					
ANR	6341488	Identifier	curr_idx		6341462	1					
ANR	6341489	AssignmentExpression	curr_idx = lf -> this_type		6341462	2		=			
ANR	6341490	Identifier	curr_idx		6341462	0					
ANR	6341491	PtrMemberAccess	lf -> this_type		6341462	1					
ANR	6341492	Identifier	lf		6341462	0					
ANR	6341493	Identifier	this_type		6341462	1					
ANR	6341494	IfStatement	if ( curr_idx < base_idx )		6341462	3					
ANR	6341495	Condition	curr_idx < base_idx	347:5:8409:8427	6341462	0	True				
ANR	6341496	RelationalExpression	curr_idx < base_idx		6341462	0		<			
ANR	6341497	Identifier	curr_idx		6341462	0					
ANR	6341498	Identifier	base_idx		6341462	1					
ANR	6341499	CompoundStatement		6:26:148:148	6341462	1					
ANR	6341500	ExpressionStatement	* ret_type = 0	348:2:8434:8447	6341462	0	True				
ANR	6341501	AssignmentExpression	* ret_type = 0		6341462	0		=			
ANR	6341502	UnaryOperationExpression	* ret_type		6341462	0					
ANR	6341503	UnaryOperator	*		6341462	0					
ANR	6341504	Identifier	ret_type		6341462	1					
ANR	6341505	PrimaryExpression	0		6341462	1					
ANR	6341506	ElseStatement	else		6341462	0					
ANR	6341507	CompoundStatement		8:8:175:175	6341462	0					
ANR	6341508	ExpressionStatement	curr_idx -= base_idx	350:2:8461:8481	6341462	0	True				
ANR	6341509	AssignmentExpression	curr_idx -= base_idx		6341462	0		-=			
ANR	6341510	Identifier	curr_idx		6341462	0					
ANR	6341511	Identifier	base_idx		6341462	1					
ANR	6341512	ExpressionStatement	"* ret_type = r_list_get_n ( p_types_list , curr_idx )"	351:2:8485:8533	6341462	1	True				
ANR	6341513	AssignmentExpression	"* ret_type = r_list_get_n ( p_types_list , curr_idx )"		6341462	0		=			
ANR	6341514	UnaryOperationExpression	* ret_type		6341462	0					
ANR	6341515	UnaryOperator	*		6341462	0					
ANR	6341516	Identifier	ret_type		6341462	1					
ANR	6341517	CallExpression	"r_list_get_n ( p_types_list , curr_idx )"		6341462	1					
ANR	6341518	Callee	r_list_get_n		6341462	0					
ANR	6341519	Identifier	r_list_get_n		6341462	0					
ANR	6341520	ArgumentList	p_types_list		6341462	1					
ANR	6341521	Argument	p_types_list		6341462	0					
ANR	6341522	Identifier	p_types_list		6341462	0					
ANR	6341523	Argument	curr_idx		6341462	1					
ANR	6341524	Identifier	curr_idx		6341462	0					
ANR	6341525	ReturnStatement	return curr_idx ;	354:1:8540:8555	6341462	4	True				
ANR	6341526	Identifier	curr_idx		6341462	0					
ANR	6341527	ReturnType	static int		6341462	1					
ANR	6341528	Identifier	get_mfunction_this_type		6341462	2					
ANR	6341529	ParameterList	"void * type , void * * ret_type"		6341462	3					
ANR	6341530	Parameter	void * type	342:35:8252:8261	6341462	0	True				
ANR	6341531	ParameterType	void *		6341462	0					
ANR	6341532	Identifier	type		6341462	1					
ANR	6341533	Parameter	void * * ret_type	342:47:8264:8278	6341462	1	True				
ANR	6341534	ParameterType	void * *		6341462	0					
ANR	6341535	Identifier	ret_type		6341462	1					
ANR	6341536	CFGEntryNode	ENTRY		6341462		True				
ANR	6341537	CFGExitNode	EXIT		6341462		True				
ANR	6341538	Symbol	* lf		6341462						
ANR	6341539	Symbol	ret_type		6341462						
ANR	6341540	Symbol	lf -> this_type		6341462						
ANR	6341541	Symbol	base_idx		6341462						
ANR	6341542	Symbol	p_types_list		6341462						
ANR	6341543	Symbol	r_list_get_n		6341462						
ANR	6341544	Symbol	t -> type_info		6341462						
ANR	6341545	Symbol	type		6341462						
ANR	6341546	Symbol	t		6341462						
ANR	6341547	Symbol	* ret_type		6341462						
ANR	6341548	Symbol	curr_idx		6341462						
ANR	6341549	Symbol	lf		6341462						
ANR	6341550	Symbol	* t		6341462						
ANR	6341551	Function	get_mfunction_arglist	358:0:8640:8976							
ANR	6341552	FunctionDef	"get_mfunction_arglist (void * type , void * * ret_type)"		6341551	0					
ANR	6341553	CompoundStatement		358:62:8702:8976	6341551	0					
ANR	6341554	IdentifierDeclStatement	STypeInfo * t = ( STypeInfo * ) type ;	359:1:8705:8738	6341551	0	True				
ANR	6341555	IdentifierDecl	* t = ( STypeInfo * ) type		6341551	0					
ANR	6341556	IdentifierDeclType	STypeInfo *		6341551	0					
ANR	6341557	Identifier	t		6341551	1					
ANR	6341558	AssignmentExpression	* t = ( STypeInfo * ) type		6341551	2		=			
ANR	6341559	Identifier	t		6341551	0					
ANR	6341560	CastExpression	( STypeInfo * ) type		6341551	1					
ANR	6341561	CastTarget	STypeInfo *		6341551	0					
ANR	6341562	Identifier	type		6341551	1					
ANR	6341563	IdentifierDeclStatement	SLF_MFUNCTION * lf = ( SLF_MFUNCTION * ) t -> type_info ;	360:1:8741:8791	6341551	1	True				
ANR	6341564	IdentifierDecl	* lf = ( SLF_MFUNCTION * ) t -> type_info		6341551	0					
ANR	6341565	IdentifierDeclType	SLF_MFUNCTION *		6341551	0					
ANR	6341566	Identifier	lf		6341551	1					
ANR	6341567	AssignmentExpression	* lf = ( SLF_MFUNCTION * ) t -> type_info		6341551	2		=			
ANR	6341568	Identifier	lf		6341551	0					
ANR	6341569	CastExpression	( SLF_MFUNCTION * ) t -> type_info		6341551	1					
ANR	6341570	CastTarget	SLF_MFUNCTION *		6341551	0					
ANR	6341571	PtrMemberAccess	t -> type_info		6341551	1					
ANR	6341572	Identifier	t		6341551	0					
ANR	6341573	Identifier	type_info		6341551	1					
ANR	6341574	IdentifierDeclStatement	int curr_idx = lf -> arglist ;	361:1:8794:8820	6341551	2	True				
ANR	6341575	IdentifierDecl	curr_idx = lf -> arglist		6341551	0					
ANR	6341576	IdentifierDeclType	int		6341551	0					
ANR	6341577	Identifier	curr_idx		6341551	1					
ANR	6341578	AssignmentExpression	curr_idx = lf -> arglist		6341551	2		=			
ANR	6341579	Identifier	curr_idx		6341551	0					
ANR	6341580	PtrMemberAccess	lf -> arglist		6341551	1					
ANR	6341581	Identifier	lf		6341551	0					
ANR	6341582	Identifier	arglist		6341551	1					
ANR	6341583	IfStatement	if ( curr_idx < base_idx )		6341551	3					
ANR	6341584	Condition	curr_idx < base_idx	363:5:8828:8846	6341551	0	True				
ANR	6341585	RelationalExpression	curr_idx < base_idx		6341551	0		<			
ANR	6341586	Identifier	curr_idx		6341551	0					
ANR	6341587	Identifier	base_idx		6341551	1					
ANR	6341588	CompoundStatement		6:26:146:146	6341551	1					
ANR	6341589	ExpressionStatement	* ret_type = 0	364:2:8853:8866	6341551	0	True				
ANR	6341590	AssignmentExpression	* ret_type = 0		6341551	0		=			
ANR	6341591	UnaryOperationExpression	* ret_type		6341551	0					
ANR	6341592	UnaryOperator	*		6341551	0					
ANR	6341593	Identifier	ret_type		6341551	1					
ANR	6341594	PrimaryExpression	0		6341551	1					
ANR	6341595	ElseStatement	else		6341551	0					
ANR	6341596	CompoundStatement		8:8:173:173	6341551	0					
ANR	6341597	ExpressionStatement	curr_idx -= base_idx	366:2:8880:8900	6341551	0	True				
ANR	6341598	AssignmentExpression	curr_idx -= base_idx		6341551	0		-=			
ANR	6341599	Identifier	curr_idx		6341551	0					
ANR	6341600	Identifier	base_idx		6341551	1					
ANR	6341601	ExpressionStatement	"* ret_type = r_list_get_n ( p_types_list , curr_idx )"	367:2:8904:8952	6341551	1	True				
ANR	6341602	AssignmentExpression	"* ret_type = r_list_get_n ( p_types_list , curr_idx )"		6341551	0		=			
ANR	6341603	UnaryOperationExpression	* ret_type		6341551	0					
ANR	6341604	UnaryOperator	*		6341551	0					
ANR	6341605	Identifier	ret_type		6341551	1					
ANR	6341606	CallExpression	"r_list_get_n ( p_types_list , curr_idx )"		6341551	1					
ANR	6341607	Callee	r_list_get_n		6341551	0					
ANR	6341608	Identifier	r_list_get_n		6341551	0					
ANR	6341609	ArgumentList	p_types_list		6341551	1					
ANR	6341610	Argument	p_types_list		6341551	0					
ANR	6341611	Identifier	p_types_list		6341551	0					
ANR	6341612	Argument	curr_idx		6341551	1					
ANR	6341613	Identifier	curr_idx		6341551	0					
ANR	6341614	ReturnStatement	return curr_idx ;	370:1:8959:8974	6341551	4	True				
ANR	6341615	Identifier	curr_idx		6341551	0					
ANR	6341616	ReturnType	static int		6341551	1					
ANR	6341617	Identifier	get_mfunction_arglist		6341551	2					
ANR	6341618	ParameterList	"void * type , void * * ret_type"		6341551	3					
ANR	6341619	Parameter	void * type	358:33:8673:8682	6341551	0	True				
ANR	6341620	ParameterType	void *		6341551	0					
ANR	6341621	Identifier	type		6341551	1					
ANR	6341622	Parameter	void * * ret_type	358:45:8685:8699	6341551	1	True				
ANR	6341623	ParameterType	void * *		6341551	0					
ANR	6341624	Identifier	ret_type		6341551	1					
ANR	6341625	CFGEntryNode	ENTRY		6341551		True				
ANR	6341626	CFGExitNode	EXIT		6341551		True				
ANR	6341627	Symbol	lf -> arglist		6341551						
ANR	6341628	Symbol	* lf		6341551						
ANR	6341629	Symbol	ret_type		6341551						
ANR	6341630	Symbol	base_idx		6341551						
ANR	6341631	Symbol	p_types_list		6341551						
ANR	6341632	Symbol	r_list_get_n		6341551						
ANR	6341633	Symbol	t -> type_info		6341551						
ANR	6341634	Symbol	type		6341551						
ANR	6341635	Symbol	t		6341551						
ANR	6341636	Symbol	* ret_type		6341551						
ANR	6341637	Symbol	curr_idx		6341551						
ANR	6341638	Symbol	lf		6341551						
ANR	6341639	Symbol	* t		6341551						
ANR	6341640	Function	get_modifier_modified_type	374:0:9059:9404							
ANR	6341641	FunctionDef	"get_modifier_modified_type (void * type , void * * ret_type)"		6341640	0					
ANR	6341642	CompoundStatement		374:67:9126:9404	6341640	0					
ANR	6341643	IdentifierDeclStatement	STypeInfo * t = ( STypeInfo * ) type ;	375:1:9129:9162	6341640	0	True				
ANR	6341644	IdentifierDecl	* t = ( STypeInfo * ) type		6341640	0					
ANR	6341645	IdentifierDeclType	STypeInfo *		6341640	0					
ANR	6341646	Identifier	t		6341640	1					
ANR	6341647	AssignmentExpression	* t = ( STypeInfo * ) type		6341640	2		=			
ANR	6341648	Identifier	t		6341640	0					
ANR	6341649	CastExpression	( STypeInfo * ) type		6341640	1					
ANR	6341650	CastTarget	STypeInfo *		6341640	0					
ANR	6341651	Identifier	type		6341640	1					
ANR	6341652	IdentifierDeclStatement	SLF_MODIFIER * lf = ( SLF_MODIFIER * ) t -> type_info ;	376:1:9165:9213	6341640	1	True				
ANR	6341653	IdentifierDecl	* lf = ( SLF_MODIFIER * ) t -> type_info		6341640	0					
ANR	6341654	IdentifierDeclType	SLF_MODIFIER *		6341640	0					
ANR	6341655	Identifier	lf		6341640	1					
ANR	6341656	AssignmentExpression	* lf = ( SLF_MODIFIER * ) t -> type_info		6341640	2		=			
ANR	6341657	Identifier	lf		6341640	0					
ANR	6341658	CastExpression	( SLF_MODIFIER * ) t -> type_info		6341640	1					
ANR	6341659	CastTarget	SLF_MODIFIER *		6341640	0					
ANR	6341660	PtrMemberAccess	t -> type_info		6341640	1					
ANR	6341661	Identifier	t		6341640	0					
ANR	6341662	Identifier	type_info		6341640	1					
ANR	6341663	IdentifierDeclStatement	int curr_idx = lf -> modified_type ;	377:1:9216:9248	6341640	2	True				
ANR	6341664	IdentifierDecl	curr_idx = lf -> modified_type		6341640	0					
ANR	6341665	IdentifierDeclType	int		6341640	0					
ANR	6341666	Identifier	curr_idx		6341640	1					
ANR	6341667	AssignmentExpression	curr_idx = lf -> modified_type		6341640	2		=			
ANR	6341668	Identifier	curr_idx		6341640	0					
ANR	6341669	PtrMemberAccess	lf -> modified_type		6341640	1					
ANR	6341670	Identifier	lf		6341640	0					
ANR	6341671	Identifier	modified_type		6341640	1					
ANR	6341672	IfStatement	if ( curr_idx < base_idx )		6341640	3					
ANR	6341673	Condition	curr_idx < base_idx	379:5:9256:9274	6341640	0	True				
ANR	6341674	RelationalExpression	curr_idx < base_idx		6341640	0		<			
ANR	6341675	Identifier	curr_idx		6341640	0					
ANR	6341676	Identifier	base_idx		6341640	1					
ANR	6341677	CompoundStatement		6:26:150:150	6341640	1					
ANR	6341678	ExpressionStatement	* ret_type = 0	380:2:9281:9294	6341640	0	True				
ANR	6341679	AssignmentExpression	* ret_type = 0		6341640	0		=			
ANR	6341680	UnaryOperationExpression	* ret_type		6341640	0					
ANR	6341681	UnaryOperator	*		6341640	0					
ANR	6341682	Identifier	ret_type		6341640	1					
ANR	6341683	PrimaryExpression	0		6341640	1					
ANR	6341684	ElseStatement	else		6341640	0					
ANR	6341685	CompoundStatement		8:8:177:177	6341640	0					
ANR	6341686	ExpressionStatement	curr_idx -= base_idx	382:2:9308:9328	6341640	0	True				
ANR	6341687	AssignmentExpression	curr_idx -= base_idx		6341640	0		-=			
ANR	6341688	Identifier	curr_idx		6341640	0					
ANR	6341689	Identifier	base_idx		6341640	1					
ANR	6341690	ExpressionStatement	"* ret_type = r_list_get_n ( p_types_list , curr_idx )"	383:2:9332:9380	6341640	1	True				
ANR	6341691	AssignmentExpression	"* ret_type = r_list_get_n ( p_types_list , curr_idx )"		6341640	0		=			
ANR	6341692	UnaryOperationExpression	* ret_type		6341640	0					
ANR	6341693	UnaryOperator	*		6341640	0					
ANR	6341694	Identifier	ret_type		6341640	1					
ANR	6341695	CallExpression	"r_list_get_n ( p_types_list , curr_idx )"		6341640	1					
ANR	6341696	Callee	r_list_get_n		6341640	0					
ANR	6341697	Identifier	r_list_get_n		6341640	0					
ANR	6341698	ArgumentList	p_types_list		6341640	1					
ANR	6341699	Argument	p_types_list		6341640	0					
ANR	6341700	Identifier	p_types_list		6341640	0					
ANR	6341701	Argument	curr_idx		6341640	1					
ANR	6341702	Identifier	curr_idx		6341640	0					
ANR	6341703	ReturnStatement	return curr_idx ;	386:1:9387:9402	6341640	4	True				
ANR	6341704	Identifier	curr_idx		6341640	0					
ANR	6341705	ReturnType	static int		6341640	1					
ANR	6341706	Identifier	get_modifier_modified_type		6341640	2					
ANR	6341707	ParameterList	"void * type , void * * ret_type"		6341640	3					
ANR	6341708	Parameter	void * type	374:38:9097:9106	6341640	0	True				
ANR	6341709	ParameterType	void *		6341640	0					
ANR	6341710	Identifier	type		6341640	1					
ANR	6341711	Parameter	void * * ret_type	374:50:9109:9123	6341640	1	True				
ANR	6341712	ParameterType	void * *		6341640	0					
ANR	6341713	Identifier	ret_type		6341640	1					
ANR	6341714	CFGEntryNode	ENTRY		6341640		True				
ANR	6341715	CFGExitNode	EXIT		6341640		True				
ANR	6341716	Symbol	* lf		6341640						
ANR	6341717	Symbol	ret_type		6341640						
ANR	6341718	Symbol	base_idx		6341640						
ANR	6341719	Symbol	lf -> modified_type		6341640						
ANR	6341720	Symbol	r_list_get_n		6341640						
ANR	6341721	Symbol	p_types_list		6341640						
ANR	6341722	Symbol	t -> type_info		6341640						
ANR	6341723	Symbol	type		6341640						
ANR	6341724	Symbol	t		6341640						
ANR	6341725	Symbol	* ret_type		6341640						
ANR	6341726	Symbol	curr_idx		6341640						
ANR	6341727	Symbol	lf		6341640						
ANR	6341728	Symbol	* t		6341640						
ANR	6341729	Function	get_pointer_utype	390:0:9487:9813							
ANR	6341730	FunctionDef	"get_pointer_utype (void * type , void * * ret_type)"		6341729	0					
ANR	6341731	CompoundStatement		390:58:9545:9813	6341729	0					
ANR	6341732	IdentifierDeclStatement	STypeInfo * t = ( STypeInfo * ) type ;	391:1:9548:9581	6341729	0	True				
ANR	6341733	IdentifierDecl	* t = ( STypeInfo * ) type		6341729	0					
ANR	6341734	IdentifierDeclType	STypeInfo *		6341729	0					
ANR	6341735	Identifier	t		6341729	1					
ANR	6341736	AssignmentExpression	* t = ( STypeInfo * ) type		6341729	2		=			
ANR	6341737	Identifier	t		6341729	0					
ANR	6341738	CastExpression	( STypeInfo * ) type		6341729	1					
ANR	6341739	CastTarget	STypeInfo *		6341729	0					
ANR	6341740	Identifier	type		6341729	1					
ANR	6341741	IdentifierDeclStatement	SLF_POINTER * lf = ( SLF_POINTER * ) t -> type_info ;	392:1:9584:9630	6341729	1	True				
ANR	6341742	IdentifierDecl	* lf = ( SLF_POINTER * ) t -> type_info		6341729	0					
ANR	6341743	IdentifierDeclType	SLF_POINTER *		6341729	0					
ANR	6341744	Identifier	lf		6341729	1					
ANR	6341745	AssignmentExpression	* lf = ( SLF_POINTER * ) t -> type_info		6341729	2		=			
ANR	6341746	Identifier	lf		6341729	0					
ANR	6341747	CastExpression	( SLF_POINTER * ) t -> type_info		6341729	1					
ANR	6341748	CastTarget	SLF_POINTER *		6341729	0					
ANR	6341749	PtrMemberAccess	t -> type_info		6341729	1					
ANR	6341750	Identifier	t		6341729	0					
ANR	6341751	Identifier	type_info		6341729	1					
ANR	6341752	IdentifierDeclStatement	int curr_idx = lf -> utype ;	393:1:9633:9657	6341729	2	True				
ANR	6341753	IdentifierDecl	curr_idx = lf -> utype		6341729	0					
ANR	6341754	IdentifierDeclType	int		6341729	0					
ANR	6341755	Identifier	curr_idx		6341729	1					
ANR	6341756	AssignmentExpression	curr_idx = lf -> utype		6341729	2		=			
ANR	6341757	Identifier	curr_idx		6341729	0					
ANR	6341758	PtrMemberAccess	lf -> utype		6341729	1					
ANR	6341759	Identifier	lf		6341729	0					
ANR	6341760	Identifier	utype		6341729	1					
ANR	6341761	IfStatement	if ( curr_idx < base_idx )		6341729	3					
ANR	6341762	Condition	curr_idx < base_idx	395:5:9665:9683	6341729	0	True				
ANR	6341763	RelationalExpression	curr_idx < base_idx		6341729	0		<			
ANR	6341764	Identifier	curr_idx		6341729	0					
ANR	6341765	Identifier	base_idx		6341729	1					
ANR	6341766	CompoundStatement		6:26:140:140	6341729	1					
ANR	6341767	ExpressionStatement	* ret_type = 0	396:2:9690:9703	6341729	0	True				
ANR	6341768	AssignmentExpression	* ret_type = 0		6341729	0		=			
ANR	6341769	UnaryOperationExpression	* ret_type		6341729	0					
ANR	6341770	UnaryOperator	*		6341729	0					
ANR	6341771	Identifier	ret_type		6341729	1					
ANR	6341772	PrimaryExpression	0		6341729	1					
ANR	6341773	ElseStatement	else		6341729	0					
ANR	6341774	CompoundStatement		8:8:167:167	6341729	0					
ANR	6341775	ExpressionStatement	curr_idx -= base_idx	398:2:9717:9737	6341729	0	True				
ANR	6341776	AssignmentExpression	curr_idx -= base_idx		6341729	0		-=			
ANR	6341777	Identifier	curr_idx		6341729	0					
ANR	6341778	Identifier	base_idx		6341729	1					
ANR	6341779	ExpressionStatement	"* ret_type = r_list_get_n ( p_types_list , curr_idx )"	399:2:9741:9789	6341729	1	True				
ANR	6341780	AssignmentExpression	"* ret_type = r_list_get_n ( p_types_list , curr_idx )"		6341729	0		=			
ANR	6341781	UnaryOperationExpression	* ret_type		6341729	0					
ANR	6341782	UnaryOperator	*		6341729	0					
ANR	6341783	Identifier	ret_type		6341729	1					
ANR	6341784	CallExpression	"r_list_get_n ( p_types_list , curr_idx )"		6341729	1					
ANR	6341785	Callee	r_list_get_n		6341729	0					
ANR	6341786	Identifier	r_list_get_n		6341729	0					
ANR	6341787	ArgumentList	p_types_list		6341729	1					
ANR	6341788	Argument	p_types_list		6341729	0					
ANR	6341789	Identifier	p_types_list		6341729	0					
ANR	6341790	Argument	curr_idx		6341729	1					
ANR	6341791	Identifier	curr_idx		6341729	0					
ANR	6341792	ReturnStatement	return curr_idx ;	402:1:9796:9811	6341729	4	True				
ANR	6341793	Identifier	curr_idx		6341729	0					
ANR	6341794	ReturnType	static int		6341729	1					
ANR	6341795	Identifier	get_pointer_utype		6341729	2					
ANR	6341796	ParameterList	"void * type , void * * ret_type"		6341729	3					
ANR	6341797	Parameter	void * type	390:29:9516:9525	6341729	0	True				
ANR	6341798	ParameterType	void *		6341729	0					
ANR	6341799	Identifier	type		6341729	1					
ANR	6341800	Parameter	void * * ret_type	390:41:9528:9542	6341729	1	True				
ANR	6341801	ParameterType	void * *		6341729	0					
ANR	6341802	Identifier	ret_type		6341729	1					
ANR	6341803	CFGEntryNode	ENTRY		6341729		True				
ANR	6341804	CFGExitNode	EXIT		6341729		True				
ANR	6341805	Symbol	lf -> utype		6341729						
ANR	6341806	Symbol	* lf		6341729						
ANR	6341807	Symbol	ret_type		6341729						
ANR	6341808	Symbol	base_idx		6341729						
ANR	6341809	Symbol	p_types_list		6341729						
ANR	6341810	Symbol	r_list_get_n		6341729						
ANR	6341811	Symbol	t -> type_info		6341729						
ANR	6341812	Symbol	type		6341729						
ANR	6341813	Symbol	t		6341729						
ANR	6341814	Symbol	* ret_type		6341729						
ANR	6341815	Symbol	curr_idx		6341729						
ANR	6341816	Symbol	lf		6341729						
ANR	6341817	Symbol	* t		6341729						
ANR	6341818	Function	get_procedure_return_type	406:0:9896:10240							
ANR	6341819	FunctionDef	"get_procedure_return_type (void * type , void * * ret_type)"		6341818	0					
ANR	6341820	CompoundStatement		406:66:9962:10240	6341818	0					
ANR	6341821	IdentifierDeclStatement	STypeInfo * t = ( STypeInfo * ) type ;	407:1:9965:9998	6341818	0	True				
ANR	6341822	IdentifierDecl	* t = ( STypeInfo * ) type		6341818	0					
ANR	6341823	IdentifierDeclType	STypeInfo *		6341818	0					
ANR	6341824	Identifier	t		6341818	1					
ANR	6341825	AssignmentExpression	* t = ( STypeInfo * ) type		6341818	2		=			
ANR	6341826	Identifier	t		6341818	0					
ANR	6341827	CastExpression	( STypeInfo * ) type		6341818	1					
ANR	6341828	CastTarget	STypeInfo *		6341818	0					
ANR	6341829	Identifier	type		6341818	1					
ANR	6341830	IdentifierDeclStatement	SLF_PROCEDURE * lf = ( SLF_PROCEDURE * ) t -> type_info ;	408:1:10001:10051	6341818	1	True				
ANR	6341831	IdentifierDecl	* lf = ( SLF_PROCEDURE * ) t -> type_info		6341818	0					
ANR	6341832	IdentifierDeclType	SLF_PROCEDURE *		6341818	0					
ANR	6341833	Identifier	lf		6341818	1					
ANR	6341834	AssignmentExpression	* lf = ( SLF_PROCEDURE * ) t -> type_info		6341818	2		=			
ANR	6341835	Identifier	lf		6341818	0					
ANR	6341836	CastExpression	( SLF_PROCEDURE * ) t -> type_info		6341818	1					
ANR	6341837	CastTarget	SLF_PROCEDURE *		6341818	0					
ANR	6341838	PtrMemberAccess	t -> type_info		6341818	1					
ANR	6341839	Identifier	t		6341818	0					
ANR	6341840	Identifier	type_info		6341818	1					
ANR	6341841	IdentifierDeclStatement	int curr_idx = lf -> return_type ;	409:1:10054:10084	6341818	2	True				
ANR	6341842	IdentifierDecl	curr_idx = lf -> return_type		6341818	0					
ANR	6341843	IdentifierDeclType	int		6341818	0					
ANR	6341844	Identifier	curr_idx		6341818	1					
ANR	6341845	AssignmentExpression	curr_idx = lf -> return_type		6341818	2		=			
ANR	6341846	Identifier	curr_idx		6341818	0					
ANR	6341847	PtrMemberAccess	lf -> return_type		6341818	1					
ANR	6341848	Identifier	lf		6341818	0					
ANR	6341849	Identifier	return_type		6341818	1					
ANR	6341850	IfStatement	if ( curr_idx < base_idx )		6341818	3					
ANR	6341851	Condition	curr_idx < base_idx	411:5:10092:10110	6341818	0	True				
ANR	6341852	RelationalExpression	curr_idx < base_idx		6341818	0		<			
ANR	6341853	Identifier	curr_idx		6341818	0					
ANR	6341854	Identifier	base_idx		6341818	1					
ANR	6341855	CompoundStatement		6:26:150:150	6341818	1					
ANR	6341856	ExpressionStatement	* ret_type = 0	412:2:10117:10130	6341818	0	True				
ANR	6341857	AssignmentExpression	* ret_type = 0		6341818	0		=			
ANR	6341858	UnaryOperationExpression	* ret_type		6341818	0					
ANR	6341859	UnaryOperator	*		6341818	0					
ANR	6341860	Identifier	ret_type		6341818	1					
ANR	6341861	PrimaryExpression	0		6341818	1					
ANR	6341862	ElseStatement	else		6341818	0					
ANR	6341863	CompoundStatement		8:8:177:177	6341818	0					
ANR	6341864	ExpressionStatement	curr_idx -= base_idx	414:2:10144:10164	6341818	0	True				
ANR	6341865	AssignmentExpression	curr_idx -= base_idx		6341818	0		-=			
ANR	6341866	Identifier	curr_idx		6341818	0					
ANR	6341867	Identifier	base_idx		6341818	1					
ANR	6341868	ExpressionStatement	"* ret_type = r_list_get_n ( p_types_list , curr_idx )"	415:2:10168:10216	6341818	1	True				
ANR	6341869	AssignmentExpression	"* ret_type = r_list_get_n ( p_types_list , curr_idx )"		6341818	0		=			
ANR	6341870	UnaryOperationExpression	* ret_type		6341818	0					
ANR	6341871	UnaryOperator	*		6341818	0					
ANR	6341872	Identifier	ret_type		6341818	1					
ANR	6341873	CallExpression	"r_list_get_n ( p_types_list , curr_idx )"		6341818	1					
ANR	6341874	Callee	r_list_get_n		6341818	0					
ANR	6341875	Identifier	r_list_get_n		6341818	0					
ANR	6341876	ArgumentList	p_types_list		6341818	1					
ANR	6341877	Argument	p_types_list		6341818	0					
ANR	6341878	Identifier	p_types_list		6341818	0					
ANR	6341879	Argument	curr_idx		6341818	1					
ANR	6341880	Identifier	curr_idx		6341818	0					
ANR	6341881	ReturnStatement	return curr_idx ;	418:1:10223:10238	6341818	4	True				
ANR	6341882	Identifier	curr_idx		6341818	0					
ANR	6341883	ReturnType	static int		6341818	1					
ANR	6341884	Identifier	get_procedure_return_type		6341818	2					
ANR	6341885	ParameterList	"void * type , void * * ret_type"		6341818	3					
ANR	6341886	Parameter	void * type	406:37:9933:9942	6341818	0	True				
ANR	6341887	ParameterType	void *		6341818	0					
ANR	6341888	Identifier	type		6341818	1					
ANR	6341889	Parameter	void * * ret_type	406:49:9945:9959	6341818	1	True				
ANR	6341890	ParameterType	void * *		6341818	0					
ANR	6341891	Identifier	ret_type		6341818	1					
ANR	6341892	CFGEntryNode	ENTRY		6341818		True				
ANR	6341893	CFGExitNode	EXIT		6341818		True				
ANR	6341894	Symbol	* lf		6341818						
ANR	6341895	Symbol	ret_type		6341818						
ANR	6341896	Symbol	base_idx		6341818						
ANR	6341897	Symbol	p_types_list		6341818						
ANR	6341898	Symbol	r_list_get_n		6341818						
ANR	6341899	Symbol	t -> type_info		6341818						
ANR	6341900	Symbol	lf -> return_type		6341818						
ANR	6341901	Symbol	type		6341818						
ANR	6341902	Symbol	t		6341818						
ANR	6341903	Symbol	* ret_type		6341818						
ANR	6341904	Symbol	curr_idx		6341818						
ANR	6341905	Symbol	lf		6341818						
ANR	6341906	Symbol	* t		6341818						
ANR	6341907	Function	get_procedure_arglist	422:0:10323:10660							
ANR	6341908	FunctionDef	"get_procedure_arglist (void * type , void * * ret_type)"		6341907	0					
ANR	6341909	CompoundStatement		422:62:10385:10660	6341907	0					
ANR	6341910	IdentifierDeclStatement	STypeInfo * t = ( STypeInfo * ) type ;	423:1:10388:10421	6341907	0	True				
ANR	6341911	IdentifierDecl	* t = ( STypeInfo * ) type		6341907	0					
ANR	6341912	IdentifierDeclType	STypeInfo *		6341907	0					
ANR	6341913	Identifier	t		6341907	1					
ANR	6341914	AssignmentExpression	* t = ( STypeInfo * ) type		6341907	2		=			
ANR	6341915	Identifier	t		6341907	0					
ANR	6341916	CastExpression	( STypeInfo * ) type		6341907	1					
ANR	6341917	CastTarget	STypeInfo *		6341907	0					
ANR	6341918	Identifier	type		6341907	1					
ANR	6341919	IdentifierDeclStatement	SLF_PROCEDURE * lf = ( SLF_PROCEDURE * ) t -> type_info ;	424:1:10424:10474	6341907	1	True				
ANR	6341920	IdentifierDecl	* lf = ( SLF_PROCEDURE * ) t -> type_info		6341907	0					
ANR	6341921	IdentifierDeclType	SLF_PROCEDURE *		6341907	0					
ANR	6341922	Identifier	lf		6341907	1					
ANR	6341923	AssignmentExpression	* lf = ( SLF_PROCEDURE * ) t -> type_info		6341907	2		=			
ANR	6341924	Identifier	lf		6341907	0					
ANR	6341925	CastExpression	( SLF_PROCEDURE * ) t -> type_info		6341907	1					
ANR	6341926	CastTarget	SLF_PROCEDURE *		6341907	0					
ANR	6341927	PtrMemberAccess	t -> type_info		6341907	1					
ANR	6341928	Identifier	t		6341907	0					
ANR	6341929	Identifier	type_info		6341907	1					
ANR	6341930	IdentifierDeclStatement	int curr_idx = lf -> arg_list ;	425:1:10477:10504	6341907	2	True				
ANR	6341931	IdentifierDecl	curr_idx = lf -> arg_list		6341907	0					
ANR	6341932	IdentifierDeclType	int		6341907	0					
ANR	6341933	Identifier	curr_idx		6341907	1					
ANR	6341934	AssignmentExpression	curr_idx = lf -> arg_list		6341907	2		=			
ANR	6341935	Identifier	curr_idx		6341907	0					
ANR	6341936	PtrMemberAccess	lf -> arg_list		6341907	1					
ANR	6341937	Identifier	lf		6341907	0					
ANR	6341938	Identifier	arg_list		6341907	1					
ANR	6341939	IfStatement	if ( curr_idx < base_idx )		6341907	3					
ANR	6341940	Condition	curr_idx < base_idx	427:5:10512:10530	6341907	0	True				
ANR	6341941	RelationalExpression	curr_idx < base_idx		6341907	0		<			
ANR	6341942	Identifier	curr_idx		6341907	0					
ANR	6341943	Identifier	base_idx		6341907	1					
ANR	6341944	CompoundStatement		6:26:147:147	6341907	1					
ANR	6341945	ExpressionStatement	* ret_type = 0	428:2:10537:10550	6341907	0	True				
ANR	6341946	AssignmentExpression	* ret_type = 0		6341907	0		=			
ANR	6341947	UnaryOperationExpression	* ret_type		6341907	0					
ANR	6341948	UnaryOperator	*		6341907	0					
ANR	6341949	Identifier	ret_type		6341907	1					
ANR	6341950	PrimaryExpression	0		6341907	1					
ANR	6341951	ElseStatement	else		6341907	0					
ANR	6341952	CompoundStatement		8:8:174:174	6341907	0					
ANR	6341953	ExpressionStatement	curr_idx -= base_idx	430:2:10564:10584	6341907	0	True				
ANR	6341954	AssignmentExpression	curr_idx -= base_idx		6341907	0		-=			
ANR	6341955	Identifier	curr_idx		6341907	0					
ANR	6341956	Identifier	base_idx		6341907	1					
ANR	6341957	ExpressionStatement	"* ret_type = r_list_get_n ( p_types_list , curr_idx )"	431:2:10588:10636	6341907	1	True				
ANR	6341958	AssignmentExpression	"* ret_type = r_list_get_n ( p_types_list , curr_idx )"		6341907	0		=			
ANR	6341959	UnaryOperationExpression	* ret_type		6341907	0					
ANR	6341960	UnaryOperator	*		6341907	0					
ANR	6341961	Identifier	ret_type		6341907	1					
ANR	6341962	CallExpression	"r_list_get_n ( p_types_list , curr_idx )"		6341907	1					
ANR	6341963	Callee	r_list_get_n		6341907	0					
ANR	6341964	Identifier	r_list_get_n		6341907	0					
ANR	6341965	ArgumentList	p_types_list		6341907	1					
ANR	6341966	Argument	p_types_list		6341907	0					
ANR	6341967	Identifier	p_types_list		6341907	0					
ANR	6341968	Argument	curr_idx		6341907	1					
ANR	6341969	Identifier	curr_idx		6341907	0					
ANR	6341970	ReturnStatement	return curr_idx ;	434:1:10643:10658	6341907	4	True				
ANR	6341971	Identifier	curr_idx		6341907	0					
ANR	6341972	ReturnType	static int		6341907	1					
ANR	6341973	Identifier	get_procedure_arglist		6341907	2					
ANR	6341974	ParameterList	"void * type , void * * ret_type"		6341907	3					
ANR	6341975	Parameter	void * type	422:33:10356:10365	6341907	0	True				
ANR	6341976	ParameterType	void *		6341907	0					
ANR	6341977	Identifier	type		6341907	1					
ANR	6341978	Parameter	void * * ret_type	422:45:10368:10382	6341907	1	True				
ANR	6341979	ParameterType	void * *		6341907	0					
ANR	6341980	Identifier	ret_type		6341907	1					
ANR	6341981	CFGEntryNode	ENTRY		6341907		True				
ANR	6341982	CFGExitNode	EXIT		6341907		True				
ANR	6341983	Symbol	* lf		6341907						
ANR	6341984	Symbol	ret_type		6341907						
ANR	6341985	Symbol	base_idx		6341907						
ANR	6341986	Symbol	r_list_get_n		6341907						
ANR	6341987	Symbol	p_types_list		6341907						
ANR	6341988	Symbol	t -> type_info		6341907						
ANR	6341989	Symbol	type		6341907						
ANR	6341990	Symbol	t		6341907						
ANR	6341991	Symbol	* ret_type		6341907						
ANR	6341992	Symbol	curr_idx		6341907						
ANR	6341993	Symbol	lf		6341907						
ANR	6341994	Symbol	lf -> arg_list		6341907						
ANR	6341995	Symbol	* t		6341907						
ANR	6341996	Function	get_member_index	438:0:10743:11066							
ANR	6341997	FunctionDef	"get_member_index (void * type , void * * ret_type)"		6341996	0					
ANR	6341998	CompoundStatement		438:57:10800:11066	6341996	0					
ANR	6341999	IdentifierDeclStatement	STypeInfo * t = ( STypeInfo * ) type ;	439:1:10803:10836	6341996	0	True				
ANR	6342000	IdentifierDecl	* t = ( STypeInfo * ) type		6341996	0					
ANR	6342001	IdentifierDeclType	STypeInfo *		6341996	0					
ANR	6342002	Identifier	t		6341996	1					
ANR	6342003	AssignmentExpression	* t = ( STypeInfo * ) type		6341996	2		=			
ANR	6342004	Identifier	t		6341996	0					
ANR	6342005	CastExpression	( STypeInfo * ) type		6341996	1					
ANR	6342006	CastTarget	STypeInfo *		6341996	0					
ANR	6342007	Identifier	type		6341996	1					
ANR	6342008	IdentifierDeclStatement	SLF_MEMBER * lf = ( SLF_MEMBER * ) t -> type_info ;	440:1:10839:10883	6341996	1	True				
ANR	6342009	IdentifierDecl	* lf = ( SLF_MEMBER * ) t -> type_info		6341996	0					
ANR	6342010	IdentifierDeclType	SLF_MEMBER *		6341996	0					
ANR	6342011	Identifier	lf		6341996	1					
ANR	6342012	AssignmentExpression	* lf = ( SLF_MEMBER * ) t -> type_info		6341996	2		=			
ANR	6342013	Identifier	lf		6341996	0					
ANR	6342014	CastExpression	( SLF_MEMBER * ) t -> type_info		6341996	1					
ANR	6342015	CastTarget	SLF_MEMBER *		6341996	0					
ANR	6342016	PtrMemberAccess	t -> type_info		6341996	1					
ANR	6342017	Identifier	t		6341996	0					
ANR	6342018	Identifier	type_info		6341996	1					
ANR	6342019	IdentifierDeclStatement	int curr_idx = lf -> index ;	441:1:10886:10910	6341996	2	True				
ANR	6342020	IdentifierDecl	curr_idx = lf -> index		6341996	0					
ANR	6342021	IdentifierDeclType	int		6341996	0					
ANR	6342022	Identifier	curr_idx		6341996	1					
ANR	6342023	AssignmentExpression	curr_idx = lf -> index		6341996	2		=			
ANR	6342024	Identifier	curr_idx		6341996	0					
ANR	6342025	PtrMemberAccess	lf -> index		6341996	1					
ANR	6342026	Identifier	lf		6341996	0					
ANR	6342027	Identifier	index		6341996	1					
ANR	6342028	IfStatement	if ( curr_idx < base_idx )		6341996	3					
ANR	6342029	Condition	curr_idx < base_idx	443:5:10918:10936	6341996	0	True				
ANR	6342030	RelationalExpression	curr_idx < base_idx		6341996	0		<			
ANR	6342031	Identifier	curr_idx		6341996	0					
ANR	6342032	Identifier	base_idx		6341996	1					
ANR	6342033	CompoundStatement		6:26:138:138	6341996	1					
ANR	6342034	ExpressionStatement	* ret_type = 0	444:2:10943:10956	6341996	0	True				
ANR	6342035	AssignmentExpression	* ret_type = 0		6341996	0		=			
ANR	6342036	UnaryOperationExpression	* ret_type		6341996	0					
ANR	6342037	UnaryOperator	*		6341996	0					
ANR	6342038	Identifier	ret_type		6341996	1					
ANR	6342039	PrimaryExpression	0		6341996	1					
ANR	6342040	ElseStatement	else		6341996	0					
ANR	6342041	CompoundStatement		8:8:165:165	6341996	0					
ANR	6342042	ExpressionStatement	curr_idx -= base_idx	446:2:10970:10990	6341996	0	True				
ANR	6342043	AssignmentExpression	curr_idx -= base_idx		6341996	0		-=			
ANR	6342044	Identifier	curr_idx		6341996	0					
ANR	6342045	Identifier	base_idx		6341996	1					
ANR	6342046	ExpressionStatement	"* ret_type = r_list_get_n ( p_types_list , curr_idx )"	447:2:10994:11042	6341996	1	True				
ANR	6342047	AssignmentExpression	"* ret_type = r_list_get_n ( p_types_list , curr_idx )"		6341996	0		=			
ANR	6342048	UnaryOperationExpression	* ret_type		6341996	0					
ANR	6342049	UnaryOperator	*		6341996	0					
ANR	6342050	Identifier	ret_type		6341996	1					
ANR	6342051	CallExpression	"r_list_get_n ( p_types_list , curr_idx )"		6341996	1					
ANR	6342052	Callee	r_list_get_n		6341996	0					
ANR	6342053	Identifier	r_list_get_n		6341996	0					
ANR	6342054	ArgumentList	p_types_list		6341996	1					
ANR	6342055	Argument	p_types_list		6341996	0					
ANR	6342056	Identifier	p_types_list		6341996	0					
ANR	6342057	Argument	curr_idx		6341996	1					
ANR	6342058	Identifier	curr_idx		6341996	0					
ANR	6342059	ReturnStatement	return curr_idx ;	450:1:11049:11064	6341996	4	True				
ANR	6342060	Identifier	curr_idx		6341996	0					
ANR	6342061	ReturnType	static int		6341996	1					
ANR	6342062	Identifier	get_member_index		6341996	2					
ANR	6342063	ParameterList	"void * type , void * * ret_type"		6341996	3					
ANR	6342064	Parameter	void * type	438:28:10771:10780	6341996	0	True				
ANR	6342065	ParameterType	void *		6341996	0					
ANR	6342066	Identifier	type		6341996	1					
ANR	6342067	Parameter	void * * ret_type	438:40:10783:10797	6341996	1	True				
ANR	6342068	ParameterType	void * *		6341996	0					
ANR	6342069	Identifier	ret_type		6341996	1					
ANR	6342070	CFGEntryNode	ENTRY		6341996		True				
ANR	6342071	CFGExitNode	EXIT		6341996		True				
ANR	6342072	Symbol	* lf		6341996						
ANR	6342073	Symbol	ret_type		6341996						
ANR	6342074	Symbol	base_idx		6341996						
ANR	6342075	Symbol	r_list_get_n		6341996						
ANR	6342076	Symbol	p_types_list		6341996						
ANR	6342077	Symbol	t -> type_info		6341996						
ANR	6342078	Symbol	type		6341996						
ANR	6342079	Symbol	lf -> index		6341996						
ANR	6342080	Symbol	t		6341996						
ANR	6342081	Symbol	* ret_type		6341996						
ANR	6342082	Symbol	curr_idx		6341996						
ANR	6342083	Symbol	lf		6341996						
ANR	6342084	Symbol	* t		6341996						
ANR	6342085	Function	get_nesttype_index	454:0:11149:11478							
ANR	6342086	FunctionDef	"get_nesttype_index (void * type , void * * ret_type)"		6342085	0					
ANR	6342087	CompoundStatement		454:59:11208:11478	6342085	0					
ANR	6342088	IdentifierDeclStatement	STypeInfo * t = ( STypeInfo * ) type ;	455:1:11211:11244	6342085	0	True				
ANR	6342089	IdentifierDecl	* t = ( STypeInfo * ) type		6342085	0					
ANR	6342090	IdentifierDeclType	STypeInfo *		6342085	0					
ANR	6342091	Identifier	t		6342085	1					
ANR	6342092	AssignmentExpression	* t = ( STypeInfo * ) type		6342085	2		=			
ANR	6342093	Identifier	t		6342085	0					
ANR	6342094	CastExpression	( STypeInfo * ) type		6342085	1					
ANR	6342095	CastTarget	STypeInfo *		6342085	0					
ANR	6342096	Identifier	type		6342085	1					
ANR	6342097	IdentifierDeclStatement	SLF_NESTTYPE * lf = ( SLF_NESTTYPE * ) t -> type_info ;	456:1:11247:11295	6342085	1	True				
ANR	6342098	IdentifierDecl	* lf = ( SLF_NESTTYPE * ) t -> type_info		6342085	0					
ANR	6342099	IdentifierDeclType	SLF_NESTTYPE *		6342085	0					
ANR	6342100	Identifier	lf		6342085	1					
ANR	6342101	AssignmentExpression	* lf = ( SLF_NESTTYPE * ) t -> type_info		6342085	2		=			
ANR	6342102	Identifier	lf		6342085	0					
ANR	6342103	CastExpression	( SLF_NESTTYPE * ) t -> type_info		6342085	1					
ANR	6342104	CastTarget	SLF_NESTTYPE *		6342085	0					
ANR	6342105	PtrMemberAccess	t -> type_info		6342085	1					
ANR	6342106	Identifier	t		6342085	0					
ANR	6342107	Identifier	type_info		6342085	1					
ANR	6342108	IdentifierDeclStatement	int curr_idx = lf -> index ;	457:1:11298:11322	6342085	2	True				
ANR	6342109	IdentifierDecl	curr_idx = lf -> index		6342085	0					
ANR	6342110	IdentifierDeclType	int		6342085	0					
ANR	6342111	Identifier	curr_idx		6342085	1					
ANR	6342112	AssignmentExpression	curr_idx = lf -> index		6342085	2		=			
ANR	6342113	Identifier	curr_idx		6342085	0					
ANR	6342114	PtrMemberAccess	lf -> index		6342085	1					
ANR	6342115	Identifier	lf		6342085	0					
ANR	6342116	Identifier	index		6342085	1					
ANR	6342117	IfStatement	if ( curr_idx < base_idx )		6342085	3					
ANR	6342118	Condition	curr_idx < base_idx	459:5:11330:11348	6342085	0	True				
ANR	6342119	RelationalExpression	curr_idx < base_idx		6342085	0		<			
ANR	6342120	Identifier	curr_idx		6342085	0					
ANR	6342121	Identifier	base_idx		6342085	1					
ANR	6342122	CompoundStatement		6:26:142:142	6342085	1					
ANR	6342123	ExpressionStatement	* ret_type = 0	460:2:11355:11368	6342085	0	True				
ANR	6342124	AssignmentExpression	* ret_type = 0		6342085	0		=			
ANR	6342125	UnaryOperationExpression	* ret_type		6342085	0					
ANR	6342126	UnaryOperator	*		6342085	0					
ANR	6342127	Identifier	ret_type		6342085	1					
ANR	6342128	PrimaryExpression	0		6342085	1					
ANR	6342129	ElseStatement	else		6342085	0					
ANR	6342130	CompoundStatement		8:8:169:169	6342085	0					
ANR	6342131	ExpressionStatement	curr_idx -= base_idx	462:2:11382:11402	6342085	0	True				
ANR	6342132	AssignmentExpression	curr_idx -= base_idx		6342085	0		-=			
ANR	6342133	Identifier	curr_idx		6342085	0					
ANR	6342134	Identifier	base_idx		6342085	1					
ANR	6342135	ExpressionStatement	"* ret_type = r_list_get_n ( p_types_list , curr_idx )"	463:2:11406:11454	6342085	1	True				
ANR	6342136	AssignmentExpression	"* ret_type = r_list_get_n ( p_types_list , curr_idx )"		6342085	0		=			
ANR	6342137	UnaryOperationExpression	* ret_type		6342085	0					
ANR	6342138	UnaryOperator	*		6342085	0					
ANR	6342139	Identifier	ret_type		6342085	1					
ANR	6342140	CallExpression	"r_list_get_n ( p_types_list , curr_idx )"		6342085	1					
ANR	6342141	Callee	r_list_get_n		6342085	0					
ANR	6342142	Identifier	r_list_get_n		6342085	0					
ANR	6342143	ArgumentList	p_types_list		6342085	1					
ANR	6342144	Argument	p_types_list		6342085	0					
ANR	6342145	Identifier	p_types_list		6342085	0					
ANR	6342146	Argument	curr_idx		6342085	1					
ANR	6342147	Identifier	curr_idx		6342085	0					
ANR	6342148	ReturnStatement	return curr_idx ;	466:1:11461:11476	6342085	4	True				
ANR	6342149	Identifier	curr_idx		6342085	0					
ANR	6342150	ReturnType	static int		6342085	1					
ANR	6342151	Identifier	get_nesttype_index		6342085	2					
ANR	6342152	ParameterList	"void * type , void * * ret_type"		6342085	3					
ANR	6342153	Parameter	void * type	454:30:11179:11188	6342085	0	True				
ANR	6342154	ParameterType	void *		6342085	0					
ANR	6342155	Identifier	type		6342085	1					
ANR	6342156	Parameter	void * * ret_type	454:42:11191:11205	6342085	1	True				
ANR	6342157	ParameterType	void * *		6342085	0					
ANR	6342158	Identifier	ret_type		6342085	1					
ANR	6342159	CFGEntryNode	ENTRY		6342085		True				
ANR	6342160	CFGExitNode	EXIT		6342085		True				
ANR	6342161	Symbol	* lf		6342085						
ANR	6342162	Symbol	ret_type		6342085						
ANR	6342163	Symbol	base_idx		6342085						
ANR	6342164	Symbol	r_list_get_n		6342085						
ANR	6342165	Symbol	p_types_list		6342085						
ANR	6342166	Symbol	t -> type_info		6342085						
ANR	6342167	Symbol	type		6342085						
ANR	6342168	Symbol	lf -> index		6342085						
ANR	6342169	Symbol	t		6342085						
ANR	6342170	Symbol	* ret_type		6342085						
ANR	6342171	Symbol	curr_idx		6342085						
ANR	6342172	Symbol	lf		6342085						
ANR	6342173	Symbol	* t		6342085						
ANR	6342174	Function	get_onemethod_index	470:0:11561:11893							
ANR	6342175	FunctionDef	"get_onemethod_index (void * type , void * * ret_type)"		6342174	0					
ANR	6342176	CompoundStatement		470:60:11621:11893	6342174	0					
ANR	6342177	IdentifierDeclStatement	STypeInfo * t = ( STypeInfo * ) type ;	471:1:11624:11657	6342174	0	True				
ANR	6342178	IdentifierDecl	* t = ( STypeInfo * ) type		6342174	0					
ANR	6342179	IdentifierDeclType	STypeInfo *		6342174	0					
ANR	6342180	Identifier	t		6342174	1					
ANR	6342181	AssignmentExpression	* t = ( STypeInfo * ) type		6342174	2		=			
ANR	6342182	Identifier	t		6342174	0					
ANR	6342183	CastExpression	( STypeInfo * ) type		6342174	1					
ANR	6342184	CastTarget	STypeInfo *		6342174	0					
ANR	6342185	Identifier	type		6342174	1					
ANR	6342186	IdentifierDeclStatement	SLF_ONEMETHOD * lf = ( SLF_ONEMETHOD * ) t -> type_info ;	472:1:11660:11710	6342174	1	True				
ANR	6342187	IdentifierDecl	* lf = ( SLF_ONEMETHOD * ) t -> type_info		6342174	0					
ANR	6342188	IdentifierDeclType	SLF_ONEMETHOD *		6342174	0					
ANR	6342189	Identifier	lf		6342174	1					
ANR	6342190	AssignmentExpression	* lf = ( SLF_ONEMETHOD * ) t -> type_info		6342174	2		=			
ANR	6342191	Identifier	lf		6342174	0					
ANR	6342192	CastExpression	( SLF_ONEMETHOD * ) t -> type_info		6342174	1					
ANR	6342193	CastTarget	SLF_ONEMETHOD *		6342174	0					
ANR	6342194	PtrMemberAccess	t -> type_info		6342174	1					
ANR	6342195	Identifier	t		6342174	0					
ANR	6342196	Identifier	type_info		6342174	1					
ANR	6342197	IdentifierDeclStatement	int curr_idx = lf -> index ;	473:1:11713:11737	6342174	2	True				
ANR	6342198	IdentifierDecl	curr_idx = lf -> index		6342174	0					
ANR	6342199	IdentifierDeclType	int		6342174	0					
ANR	6342200	Identifier	curr_idx		6342174	1					
ANR	6342201	AssignmentExpression	curr_idx = lf -> index		6342174	2		=			
ANR	6342202	Identifier	curr_idx		6342174	0					
ANR	6342203	PtrMemberAccess	lf -> index		6342174	1					
ANR	6342204	Identifier	lf		6342174	0					
ANR	6342205	Identifier	index		6342174	1					
ANR	6342206	IfStatement	if ( curr_idx < base_idx )		6342174	3					
ANR	6342207	Condition	curr_idx < base_idx	475:5:11745:11763	6342174	0	True				
ANR	6342208	RelationalExpression	curr_idx < base_idx		6342174	0		<			
ANR	6342209	Identifier	curr_idx		6342174	0					
ANR	6342210	Identifier	base_idx		6342174	1					
ANR	6342211	CompoundStatement		6:26:144:144	6342174	1					
ANR	6342212	ExpressionStatement	* ret_type = 0	476:2:11770:11783	6342174	0	True				
ANR	6342213	AssignmentExpression	* ret_type = 0		6342174	0		=			
ANR	6342214	UnaryOperationExpression	* ret_type		6342174	0					
ANR	6342215	UnaryOperator	*		6342174	0					
ANR	6342216	Identifier	ret_type		6342174	1					
ANR	6342217	PrimaryExpression	0		6342174	1					
ANR	6342218	ElseStatement	else		6342174	0					
ANR	6342219	CompoundStatement		8:8:171:171	6342174	0					
ANR	6342220	ExpressionStatement	curr_idx -= base_idx	478:2:11797:11817	6342174	0	True				
ANR	6342221	AssignmentExpression	curr_idx -= base_idx		6342174	0		-=			
ANR	6342222	Identifier	curr_idx		6342174	0					
ANR	6342223	Identifier	base_idx		6342174	1					
ANR	6342224	ExpressionStatement	"* ret_type = r_list_get_n ( p_types_list , curr_idx )"	479:2:11821:11869	6342174	1	True				
ANR	6342225	AssignmentExpression	"* ret_type = r_list_get_n ( p_types_list , curr_idx )"		6342174	0		=			
ANR	6342226	UnaryOperationExpression	* ret_type		6342174	0					
ANR	6342227	UnaryOperator	*		6342174	0					
ANR	6342228	Identifier	ret_type		6342174	1					
ANR	6342229	CallExpression	"r_list_get_n ( p_types_list , curr_idx )"		6342174	1					
ANR	6342230	Callee	r_list_get_n		6342174	0					
ANR	6342231	Identifier	r_list_get_n		6342174	0					
ANR	6342232	ArgumentList	p_types_list		6342174	1					
ANR	6342233	Argument	p_types_list		6342174	0					
ANR	6342234	Identifier	p_types_list		6342174	0					
ANR	6342235	Argument	curr_idx		6342174	1					
ANR	6342236	Identifier	curr_idx		6342174	0					
ANR	6342237	ReturnStatement	return curr_idx ;	482:1:11876:11891	6342174	4	True				
ANR	6342238	Identifier	curr_idx		6342174	0					
ANR	6342239	ReturnType	static int		6342174	1					
ANR	6342240	Identifier	get_onemethod_index		6342174	2					
ANR	6342241	ParameterList	"void * type , void * * ret_type"		6342174	3					
ANR	6342242	Parameter	void * type	470:31:11592:11601	6342174	0	True				
ANR	6342243	ParameterType	void *		6342174	0					
ANR	6342244	Identifier	type		6342174	1					
ANR	6342245	Parameter	void * * ret_type	470:43:11604:11618	6342174	1	True				
ANR	6342246	ParameterType	void * *		6342174	0					
ANR	6342247	Identifier	ret_type		6342174	1					
ANR	6342248	CFGEntryNode	ENTRY		6342174		True				
ANR	6342249	CFGExitNode	EXIT		6342174		True				
ANR	6342250	Symbol	* lf		6342174						
ANR	6342251	Symbol	ret_type		6342174						
ANR	6342252	Symbol	base_idx		6342174						
ANR	6342253	Symbol	r_list_get_n		6342174						
ANR	6342254	Symbol	p_types_list		6342174						
ANR	6342255	Symbol	t -> type_info		6342174						
ANR	6342256	Symbol	type		6342174						
ANR	6342257	Symbol	lf -> index		6342174						
ANR	6342258	Symbol	t		6342174						
ANR	6342259	Symbol	* ret_type		6342174						
ANR	6342260	Symbol	curr_idx		6342174						
ANR	6342261	Symbol	lf		6342174						
ANR	6342262	Symbol	* t		6342174						
ANR	6342263	Function	get_method_mlist	485:0:11896:12219							
ANR	6342264	FunctionDef	"get_method_mlist (void * type , void * * ret_type)"		6342263	0					
ANR	6342265	CompoundStatement		485:57:11953:12219	6342263	0					
ANR	6342266	IdentifierDeclStatement	STypeInfo * t = ( STypeInfo * ) type ;	486:1:11956:11989	6342263	0	True				
ANR	6342267	IdentifierDecl	* t = ( STypeInfo * ) type		6342263	0					
ANR	6342268	IdentifierDeclType	STypeInfo *		6342263	0					
ANR	6342269	Identifier	t		6342263	1					
ANR	6342270	AssignmentExpression	* t = ( STypeInfo * ) type		6342263	2		=			
ANR	6342271	Identifier	t		6342263	0					
ANR	6342272	CastExpression	( STypeInfo * ) type		6342263	1					
ANR	6342273	CastTarget	STypeInfo *		6342263	0					
ANR	6342274	Identifier	type		6342263	1					
ANR	6342275	IdentifierDeclStatement	SLF_METHOD * lf = ( SLF_METHOD * ) t -> type_info ;	487:1:11992:12036	6342263	1	True				
ANR	6342276	IdentifierDecl	* lf = ( SLF_METHOD * ) t -> type_info		6342263	0					
ANR	6342277	IdentifierDeclType	SLF_METHOD *		6342263	0					
ANR	6342278	Identifier	lf		6342263	1					
ANR	6342279	AssignmentExpression	* lf = ( SLF_METHOD * ) t -> type_info		6342263	2		=			
ANR	6342280	Identifier	lf		6342263	0					
ANR	6342281	CastExpression	( SLF_METHOD * ) t -> type_info		6342263	1					
ANR	6342282	CastTarget	SLF_METHOD *		6342263	0					
ANR	6342283	PtrMemberAccess	t -> type_info		6342263	1					
ANR	6342284	Identifier	t		6342263	0					
ANR	6342285	Identifier	type_info		6342263	1					
ANR	6342286	IdentifierDeclStatement	int curr_idx = lf -> mlist ;	488:1:12039:12063	6342263	2	True				
ANR	6342287	IdentifierDecl	curr_idx = lf -> mlist		6342263	0					
ANR	6342288	IdentifierDeclType	int		6342263	0					
ANR	6342289	Identifier	curr_idx		6342263	1					
ANR	6342290	AssignmentExpression	curr_idx = lf -> mlist		6342263	2		=			
ANR	6342291	Identifier	curr_idx		6342263	0					
ANR	6342292	PtrMemberAccess	lf -> mlist		6342263	1					
ANR	6342293	Identifier	lf		6342263	0					
ANR	6342294	Identifier	mlist		6342263	1					
ANR	6342295	IfStatement	if ( curr_idx < base_idx )		6342263	3					
ANR	6342296	Condition	curr_idx < base_idx	490:5:12071:12089	6342263	0	True				
ANR	6342297	RelationalExpression	curr_idx < base_idx		6342263	0		<			
ANR	6342298	Identifier	curr_idx		6342263	0					
ANR	6342299	Identifier	base_idx		6342263	1					
ANR	6342300	CompoundStatement		6:26:138:138	6342263	1					
ANR	6342301	ExpressionStatement	* ret_type = 0	491:2:12096:12109	6342263	0	True				
ANR	6342302	AssignmentExpression	* ret_type = 0		6342263	0		=			
ANR	6342303	UnaryOperationExpression	* ret_type		6342263	0					
ANR	6342304	UnaryOperator	*		6342263	0					
ANR	6342305	Identifier	ret_type		6342263	1					
ANR	6342306	PrimaryExpression	0		6342263	1					
ANR	6342307	ElseStatement	else		6342263	0					
ANR	6342308	CompoundStatement		8:8:165:165	6342263	0					
ANR	6342309	ExpressionStatement	curr_idx -= base_idx	493:2:12123:12143	6342263	0	True				
ANR	6342310	AssignmentExpression	curr_idx -= base_idx		6342263	0		-=			
ANR	6342311	Identifier	curr_idx		6342263	0					
ANR	6342312	Identifier	base_idx		6342263	1					
ANR	6342313	ExpressionStatement	"* ret_type = r_list_get_n ( p_types_list , curr_idx )"	494:2:12147:12195	6342263	1	True				
ANR	6342314	AssignmentExpression	"* ret_type = r_list_get_n ( p_types_list , curr_idx )"		6342263	0		=			
ANR	6342315	UnaryOperationExpression	* ret_type		6342263	0					
ANR	6342316	UnaryOperator	*		6342263	0					
ANR	6342317	Identifier	ret_type		6342263	1					
ANR	6342318	CallExpression	"r_list_get_n ( p_types_list , curr_idx )"		6342263	1					
ANR	6342319	Callee	r_list_get_n		6342263	0					
ANR	6342320	Identifier	r_list_get_n		6342263	0					
ANR	6342321	ArgumentList	p_types_list		6342263	1					
ANR	6342322	Argument	p_types_list		6342263	0					
ANR	6342323	Identifier	p_types_list		6342263	0					
ANR	6342324	Argument	curr_idx		6342263	1					
ANR	6342325	Identifier	curr_idx		6342263	0					
ANR	6342326	ReturnStatement	return curr_idx ;	497:1:12202:12217	6342263	4	True				
ANR	6342327	Identifier	curr_idx		6342263	0					
ANR	6342328	ReturnType	static int		6342263	1					
ANR	6342329	Identifier	get_method_mlist		6342263	2					
ANR	6342330	ParameterList	"void * type , void * * ret_type"		6342263	3					
ANR	6342331	Parameter	void * type	485:28:11924:11933	6342263	0	True				
ANR	6342332	ParameterType	void *		6342263	0					
ANR	6342333	Identifier	type		6342263	1					
ANR	6342334	Parameter	void * * ret_type	485:40:11936:11950	6342263	1	True				
ANR	6342335	ParameterType	void * *		6342263	0					
ANR	6342336	Identifier	ret_type		6342263	1					
ANR	6342337	CFGEntryNode	ENTRY		6342263		True				
ANR	6342338	CFGExitNode	EXIT		6342263		True				
ANR	6342339	Symbol	* lf		6342263						
ANR	6342340	Symbol	ret_type		6342263						
ANR	6342341	Symbol	base_idx		6342263						
ANR	6342342	Symbol	p_types_list		6342263						
ANR	6342343	Symbol	r_list_get_n		6342263						
ANR	6342344	Symbol	t -> type_info		6342263						
ANR	6342345	Symbol	type		6342263						
ANR	6342346	Symbol	lf -> mlist		6342263						
ANR	6342347	Symbol	t		6342263						
ANR	6342348	Symbol	* ret_type		6342263						
ANR	6342349	Symbol	curr_idx		6342263						
ANR	6342350	Symbol	lf		6342263						
ANR	6342351	Symbol	* t		6342263						
ANR	6342352	Function	get_enum_utype	500:0:12222:12539							
ANR	6342353	FunctionDef	"get_enum_utype (void * type , void * * ret_type)"		6342352	0					
ANR	6342354	CompoundStatement		500:55:12277:12539	6342352	0					
ANR	6342355	IdentifierDeclStatement	STypeInfo * t = ( STypeInfo * ) type ;	501:1:12280:12313	6342352	0	True				
ANR	6342356	IdentifierDecl	* t = ( STypeInfo * ) type		6342352	0					
ANR	6342357	IdentifierDeclType	STypeInfo *		6342352	0					
ANR	6342358	Identifier	t		6342352	1					
ANR	6342359	AssignmentExpression	* t = ( STypeInfo * ) type		6342352	2		=			
ANR	6342360	Identifier	t		6342352	0					
ANR	6342361	CastExpression	( STypeInfo * ) type		6342352	1					
ANR	6342362	CastTarget	STypeInfo *		6342352	0					
ANR	6342363	Identifier	type		6342352	1					
ANR	6342364	IdentifierDeclStatement	SLF_ENUM * lf = ( SLF_ENUM * ) t -> type_info ;	502:1:12316:12356	6342352	1	True				
ANR	6342365	IdentifierDecl	* lf = ( SLF_ENUM * ) t -> type_info		6342352	0					
ANR	6342366	IdentifierDeclType	SLF_ENUM *		6342352	0					
ANR	6342367	Identifier	lf		6342352	1					
ANR	6342368	AssignmentExpression	* lf = ( SLF_ENUM * ) t -> type_info		6342352	2		=			
ANR	6342369	Identifier	lf		6342352	0					
ANR	6342370	CastExpression	( SLF_ENUM * ) t -> type_info		6342352	1					
ANR	6342371	CastTarget	SLF_ENUM *		6342352	0					
ANR	6342372	PtrMemberAccess	t -> type_info		6342352	1					
ANR	6342373	Identifier	t		6342352	0					
ANR	6342374	Identifier	type_info		6342352	1					
ANR	6342375	IdentifierDeclStatement	int curr_idx = lf -> utype ;	503:1:12359:12383	6342352	2	True				
ANR	6342376	IdentifierDecl	curr_idx = lf -> utype		6342352	0					
ANR	6342377	IdentifierDeclType	int		6342352	0					
ANR	6342378	Identifier	curr_idx		6342352	1					
ANR	6342379	AssignmentExpression	curr_idx = lf -> utype		6342352	2		=			
ANR	6342380	Identifier	curr_idx		6342352	0					
ANR	6342381	PtrMemberAccess	lf -> utype		6342352	1					
ANR	6342382	Identifier	lf		6342352	0					
ANR	6342383	Identifier	utype		6342352	1					
ANR	6342384	IfStatement	if ( curr_idx < base_idx )		6342352	3					
ANR	6342385	Condition	curr_idx < base_idx	505:5:12391:12409	6342352	0	True				
ANR	6342386	RelationalExpression	curr_idx < base_idx		6342352	0		<			
ANR	6342387	Identifier	curr_idx		6342352	0					
ANR	6342388	Identifier	base_idx		6342352	1					
ANR	6342389	CompoundStatement		6:26:134:134	6342352	1					
ANR	6342390	ExpressionStatement	* ret_type = 0	506:2:12416:12429	6342352	0	True				
ANR	6342391	AssignmentExpression	* ret_type = 0		6342352	0		=			
ANR	6342392	UnaryOperationExpression	* ret_type		6342352	0					
ANR	6342393	UnaryOperator	*		6342352	0					
ANR	6342394	Identifier	ret_type		6342352	1					
ANR	6342395	PrimaryExpression	0		6342352	1					
ANR	6342396	ElseStatement	else		6342352	0					
ANR	6342397	CompoundStatement		8:8:161:161	6342352	0					
ANR	6342398	ExpressionStatement	curr_idx -= base_idx	508:2:12443:12463	6342352	0	True				
ANR	6342399	AssignmentExpression	curr_idx -= base_idx		6342352	0		-=			
ANR	6342400	Identifier	curr_idx		6342352	0					
ANR	6342401	Identifier	base_idx		6342352	1					
ANR	6342402	ExpressionStatement	"* ret_type = r_list_get_n ( p_types_list , curr_idx )"	509:2:12467:12515	6342352	1	True				
ANR	6342403	AssignmentExpression	"* ret_type = r_list_get_n ( p_types_list , curr_idx )"		6342352	0		=			
ANR	6342404	UnaryOperationExpression	* ret_type		6342352	0					
ANR	6342405	UnaryOperator	*		6342352	0					
ANR	6342406	Identifier	ret_type		6342352	1					
ANR	6342407	CallExpression	"r_list_get_n ( p_types_list , curr_idx )"		6342352	1					
ANR	6342408	Callee	r_list_get_n		6342352	0					
ANR	6342409	Identifier	r_list_get_n		6342352	0					
ANR	6342410	ArgumentList	p_types_list		6342352	1					
ANR	6342411	Argument	p_types_list		6342352	0					
ANR	6342412	Identifier	p_types_list		6342352	0					
ANR	6342413	Argument	curr_idx		6342352	1					
ANR	6342414	Identifier	curr_idx		6342352	0					
ANR	6342415	ReturnStatement	return curr_idx ;	512:1:12522:12537	6342352	4	True				
ANR	6342416	Identifier	curr_idx		6342352	0					
ANR	6342417	ReturnType	static int		6342352	1					
ANR	6342418	Identifier	get_enum_utype		6342352	2					
ANR	6342419	ParameterList	"void * type , void * * ret_type"		6342352	3					
ANR	6342420	Parameter	void * type	500:26:12248:12257	6342352	0	True				
ANR	6342421	ParameterType	void *		6342352	0					
ANR	6342422	Identifier	type		6342352	1					
ANR	6342423	Parameter	void * * ret_type	500:38:12260:12274	6342352	1	True				
ANR	6342424	ParameterType	void * *		6342352	0					
ANR	6342425	Identifier	ret_type		6342352	1					
ANR	6342426	CFGEntryNode	ENTRY		6342352		True				
ANR	6342427	CFGExitNode	EXIT		6342352		True				
ANR	6342428	Symbol	* lf		6342352						
ANR	6342429	Symbol	lf -> utype		6342352						
ANR	6342430	Symbol	ret_type		6342352						
ANR	6342431	Symbol	base_idx		6342352						
ANR	6342432	Symbol	p_types_list		6342352						
ANR	6342433	Symbol	r_list_get_n		6342352						
ANR	6342434	Symbol	t -> type_info		6342352						
ANR	6342435	Symbol	type		6342352						
ANR	6342436	Symbol	t		6342352						
ANR	6342437	Symbol	* ret_type		6342352						
ANR	6342438	Symbol	curr_idx		6342352						
ANR	6342439	Symbol	lf		6342352						
ANR	6342440	Symbol	* t		6342352						
ANR	6342441	Function	get_fieldlist_members	515:0:12542:12733							
ANR	6342442	FunctionDef	"get_fieldlist_members (void * type , RList * * l)"		6342441	0					
ANR	6342443	CompoundStatement		515:57:12599:12733	6342441	0					
ANR	6342444	IdentifierDeclStatement	STypeInfo * t = ( STypeInfo * ) type ;	516:1:12602:12635	6342441	0	True				
ANR	6342445	IdentifierDecl	* t = ( STypeInfo * ) type		6342441	0					
ANR	6342446	IdentifierDeclType	STypeInfo *		6342441	0					
ANR	6342447	Identifier	t		6342441	1					
ANR	6342448	AssignmentExpression	* t = ( STypeInfo * ) type		6342441	2		=			
ANR	6342449	Identifier	t		6342441	0					
ANR	6342450	CastExpression	( STypeInfo * ) type		6342441	1					
ANR	6342451	CastTarget	STypeInfo *		6342441	0					
ANR	6342452	Identifier	type		6342441	1					
ANR	6342453	IdentifierDeclStatement	SLF_FIELDLIST * lf_fieldlist = ( SLF_FIELDLIST * ) t -> type_info ;	517:1:12638:12698	6342441	1	True				
ANR	6342454	IdentifierDecl	* lf_fieldlist = ( SLF_FIELDLIST * ) t -> type_info		6342441	0					
ANR	6342455	IdentifierDeclType	SLF_FIELDLIST *		6342441	0					
ANR	6342456	Identifier	lf_fieldlist		6342441	1					
ANR	6342457	AssignmentExpression	* lf_fieldlist = ( SLF_FIELDLIST * ) t -> type_info		6342441	2		=			
ANR	6342458	Identifier	lf_fieldlist		6342441	0					
ANR	6342459	CastExpression	( SLF_FIELDLIST * ) t -> type_info		6342441	1					
ANR	6342460	CastTarget	SLF_FIELDLIST *		6342441	0					
ANR	6342461	PtrMemberAccess	t -> type_info		6342441	1					
ANR	6342462	Identifier	t		6342441	0					
ANR	6342463	Identifier	type_info		6342441	1					
ANR	6342464	ExpressionStatement	* l = lf_fieldlist -> substructs	519:1:12702:12731	6342441	2	True				
ANR	6342465	AssignmentExpression	* l = lf_fieldlist -> substructs		6342441	0		=			
ANR	6342466	UnaryOperationExpression	* l		6342441	0					
ANR	6342467	UnaryOperator	*		6342441	0					
ANR	6342468	Identifier	l		6342441	1					
ANR	6342469	PtrMemberAccess	lf_fieldlist -> substructs		6342441	1					
ANR	6342470	Identifier	lf_fieldlist		6342441	0					
ANR	6342471	Identifier	substructs		6342441	1					
ANR	6342472	ReturnType	static void		6342441	1					
ANR	6342473	Identifier	get_fieldlist_members		6342441	2					
ANR	6342474	ParameterList	"void * type , RList * * l"		6342441	3					
ANR	6342475	Parameter	void * type	515:34:12576:12585	6342441	0	True				
ANR	6342476	ParameterType	void *		6342441	0					
ANR	6342477	Identifier	type		6342441	1					
ANR	6342478	Parameter	RList * * l	515:46:12588:12596	6342441	1	True				
ANR	6342479	ParameterType	RList * *		6342441	0					
ANR	6342480	Identifier	l		6342441	1					
ANR	6342481	CFGEntryNode	ENTRY		6342441		True				
ANR	6342482	CFGExitNode	EXIT		6342441		True				
ANR	6342483	Symbol	* lf_fieldlist		6342441						
ANR	6342484	Symbol	t		6342441						
ANR	6342485	Symbol	lf_fieldlist		6342441						
ANR	6342486	Symbol	* l		6342441						
ANR	6342487	Symbol	lf_fieldlist -> substructs		6342441						
ANR	6342488	Symbol	t -> type_info		6342441						
ANR	6342489	Symbol	type		6342441						
ANR	6342490	Symbol	l		6342441						
ANR	6342491	Symbol	* t		6342441						
ANR	6342492	Function	get_union_members	522:0:12736:13136							
ANR	6342493	FunctionDef	"get_union_members (void * type , RList * * l)"		6342492	0					
ANR	6342494	CompoundStatement		522:53:12789:13136	6342492	0					
ANR	6342495	IdentifierDeclStatement	STypeInfo * t = ( STypeInfo * ) type ;	523:1:12792:12825	6342492	0	True				
ANR	6342496	IdentifierDecl	* t = ( STypeInfo * ) type		6342492	0					
ANR	6342497	IdentifierDeclType	STypeInfo *		6342492	0					
ANR	6342498	Identifier	t		6342492	1					
ANR	6342499	AssignmentExpression	* t = ( STypeInfo * ) type		6342492	2		=			
ANR	6342500	Identifier	t		6342492	0					
ANR	6342501	CastExpression	( STypeInfo * ) type		6342492	1					
ANR	6342502	CastTarget	STypeInfo *		6342492	0					
ANR	6342503	Identifier	type		6342492	1					
ANR	6342504	IdentifierDeclStatement	SLF_UNION * lf_union = ( SLF_UNION * ) t -> type_info ;	524:1:12828:12876	6342492	1	True				
ANR	6342505	IdentifierDecl	* lf_union = ( SLF_UNION * ) t -> type_info		6342492	0					
ANR	6342506	IdentifierDeclType	SLF_UNION *		6342492	0					
ANR	6342507	Identifier	lf_union		6342492	1					
ANR	6342508	AssignmentExpression	* lf_union = ( SLF_UNION * ) t -> type_info		6342492	2		=			
ANR	6342509	Identifier	lf_union		6342492	0					
ANR	6342510	CastExpression	( SLF_UNION * ) t -> type_info		6342492	1					
ANR	6342511	CastTarget	SLF_UNION *		6342492	0					
ANR	6342512	PtrMemberAccess	t -> type_info		6342492	1					
ANR	6342513	Identifier	t		6342492	0					
ANR	6342514	Identifier	type_info		6342492	1					
ANR	6342515	IdentifierDeclStatement	unsigned int indx = 0 ;	525:1:12879:12900	6342492	2	True				
ANR	6342516	IdentifierDecl	indx = 0		6342492	0					
ANR	6342517	IdentifierDeclType	unsigned int		6342492	0					
ANR	6342518	Identifier	indx		6342492	1					
ANR	6342519	AssignmentExpression	indx = 0		6342492	2		=			
ANR	6342520	Identifier	indx		6342492	0					
ANR	6342521	PrimaryExpression	0		6342492	1					
ANR	6342522	IfStatement	if ( lf_union -> field_list == 0 )		6342492	3					
ANR	6342523	Condition	lf_union -> field_list == 0	527:5:12908:12932	6342492	0	True				
ANR	6342524	EqualityExpression	lf_union -> field_list == 0		6342492	0		==			
ANR	6342525	PtrMemberAccess	lf_union -> field_list		6342492	0					
ANR	6342526	Identifier	lf_union		6342492	0					
ANR	6342527	Identifier	field_list		6342492	1					
ANR	6342528	PrimaryExpression	0		6342492	1					
ANR	6342529	CompoundStatement		6:32:145:145	6342492	1					
ANR	6342530	ExpressionStatement	* l = 0	528:2:12939:12945	6342492	0	True				
ANR	6342531	AssignmentExpression	* l = 0		6342492	0		=			
ANR	6342532	UnaryOperationExpression	* l		6342492	0					
ANR	6342533	UnaryOperator	*		6342492	0					
ANR	6342534	Identifier	l		6342492	1					
ANR	6342535	PrimaryExpression	0		6342492	1					
ANR	6342536	ElseStatement	else		6342492	0					
ANR	6342537	CompoundStatement		9:2:169:183	6342492	0					
ANR	6342538	IdentifierDeclStatement	SType * tmp = 0 ;	530:2:12959:12973	6342492	0	True				
ANR	6342539	IdentifierDecl	* tmp = 0		6342492	0					
ANR	6342540	IdentifierDeclType	SType *		6342492	0					
ANR	6342541	Identifier	tmp		6342492	1					
ANR	6342542	AssignmentExpression	* tmp = 0		6342492	2		=			
ANR	6342543	Identifier	tmp		6342492	0					
ANR	6342544	PrimaryExpression	0		6342492	1					
ANR	6342545	ExpressionStatement	indx = lf_union -> field_list - base_idx	531:2:12977:13015	6342492	1	True				
ANR	6342546	AssignmentExpression	indx = lf_union -> field_list - base_idx		6342492	0		=			
ANR	6342547	Identifier	indx		6342492	0					
ANR	6342548	AdditiveExpression	lf_union -> field_list - base_idx		6342492	1		-			
ANR	6342549	PtrMemberAccess	lf_union -> field_list		6342492	0					
ANR	6342550	Identifier	lf_union		6342492	0					
ANR	6342551	Identifier	field_list		6342492	1					
ANR	6342552	Identifier	base_idx		6342492	1					
ANR	6342553	ExpressionStatement	"tmp = ( SType * ) r_list_get_n ( p_types_list , indx )"	532:2:13019:13066	6342492	2	True				
ANR	6342554	AssignmentExpression	"tmp = ( SType * ) r_list_get_n ( p_types_list , indx )"		6342492	0		=			
ANR	6342555	Identifier	tmp		6342492	0					
ANR	6342556	CastExpression	"( SType * ) r_list_get_n ( p_types_list , indx )"		6342492	1					
ANR	6342557	CastTarget	SType *		6342492	0					
ANR	6342558	CallExpression	"r_list_get_n ( p_types_list , indx )"		6342492	1					
ANR	6342559	Callee	r_list_get_n		6342492	0					
ANR	6342560	Identifier	r_list_get_n		6342492	0					
ANR	6342561	ArgumentList	p_types_list		6342492	1					
ANR	6342562	Argument	p_types_list		6342492	0					
ANR	6342563	Identifier	p_types_list		6342492	0					
ANR	6342564	Argument	indx		6342492	1					
ANR	6342565	Identifier	indx		6342492	0					
ANR	6342566	ExpressionStatement	* l = ( ( SLF_FIELDLIST * ) tmp -> type_data . type_info ) -> substructs	533:2:13070:13131	6342492	3	True				
ANR	6342567	AssignmentExpression	* l = ( ( SLF_FIELDLIST * ) tmp -> type_data . type_info ) -> substructs		6342492	0		=			
ANR	6342568	UnaryOperationExpression	* l		6342492	0					
ANR	6342569	UnaryOperator	*		6342492	0					
ANR	6342570	Identifier	l		6342492	1					
ANR	6342571	PtrMemberAccess	( ( SLF_FIELDLIST * ) tmp -> type_data . type_info ) -> substructs		6342492	1					
ANR	6342572	CastExpression	( SLF_FIELDLIST * ) tmp -> type_data . type_info		6342492	0					
ANR	6342573	CastTarget	SLF_FIELDLIST *		6342492	0					
ANR	6342574	MemberAccess	tmp -> type_data . type_info		6342492	1					
ANR	6342575	PtrMemberAccess	tmp -> type_data		6342492	0					
ANR	6342576	Identifier	tmp		6342492	0					
ANR	6342577	Identifier	type_data		6342492	1					
ANR	6342578	Identifier	type_info		6342492	1					
ANR	6342579	Identifier	substructs		6342492	1					
ANR	6342580	ReturnType	static void		6342492	1					
ANR	6342581	Identifier	get_union_members		6342492	2					
ANR	6342582	ParameterList	"void * type , RList * * l"		6342492	3					
ANR	6342583	Parameter	void * type	522:30:12766:12775	6342492	0	True				
ANR	6342584	ParameterType	void *		6342492	0					
ANR	6342585	Identifier	type		6342492	1					
ANR	6342586	Parameter	RList * * l	522:42:12778:12786	6342492	1	True				
ANR	6342587	ParameterType	RList * *		6342492	0					
ANR	6342588	Identifier	l		6342492	1					
ANR	6342589	CFGEntryNode	ENTRY		6342492		True				
ANR	6342590	CFGExitNode	EXIT		6342492		True				
ANR	6342591	Symbol	* tmp		6342492						
ANR	6342592	Symbol	base_idx		6342492						
ANR	6342593	Symbol	indx		6342492						
ANR	6342594	Symbol	* tmp -> type_data . type_info		6342492						
ANR	6342595	Symbol	r_list_get_n		6342492						
ANR	6342596	Symbol	p_types_list		6342492						
ANR	6342597	Symbol	t -> type_info		6342492						
ANR	6342598	Symbol	* * tmp		6342492						
ANR	6342599	Symbol	type		6342492						
ANR	6342600	Symbol	l		6342492						
ANR	6342601	Symbol	* tmp -> type_data		6342492						
ANR	6342602	Symbol	( ( SLF_FIELDLIST * ) tmp -> type_data . type_info ) -> substructs		6342492						
ANR	6342603	Symbol	tmp -> type_data		6342492						
ANR	6342604	Symbol	lf_union		6342492						
ANR	6342605	Symbol	t		6342492						
ANR	6342606	Symbol	* lf_union		6342492						
ANR	6342607	Symbol	* l		6342492						
ANR	6342608	Symbol	tmp		6342492						
ANR	6342609	Symbol	lf_union -> field_list		6342492						
ANR	6342610	Symbol	tmp -> type_data . type_info		6342492						
ANR	6342611	Symbol	* t		6342492						
ANR	6342612	Function	get_struct_class_members	537:0:13139:13599							
ANR	6342613	FunctionDef	"get_struct_class_members (void * type , RList * * l)"		6342612	0					
ANR	6342614	CompoundStatement		537:60:13199:13599	6342612	0					
ANR	6342615	IdentifierDeclStatement	SLF_FIELDLIST * lf_fieldlist = 0 ;	538:1:13202:13233	6342612	0	True				
ANR	6342616	IdentifierDecl	* lf_fieldlist = 0		6342612	0					
ANR	6342617	IdentifierDeclType	SLF_FIELDLIST *		6342612	0					
ANR	6342618	Identifier	lf_fieldlist		6342612	1					
ANR	6342619	AssignmentExpression	* lf_fieldlist = 0		6342612	2		=			
ANR	6342620	Identifier	lf_fieldlist		6342612	0					
ANR	6342621	PrimaryExpression	0		6342612	1					
ANR	6342622	IdentifierDeclStatement	STypeInfo * t = ( STypeInfo * ) type ;	539:1:13236:13269	6342612	1	True				
ANR	6342623	IdentifierDecl	* t = ( STypeInfo * ) type		6342612	0					
ANR	6342624	IdentifierDeclType	STypeInfo *		6342612	0					
ANR	6342625	Identifier	t		6342612	1					
ANR	6342626	AssignmentExpression	* t = ( STypeInfo * ) type		6342612	2		=			
ANR	6342627	Identifier	t		6342612	0					
ANR	6342628	CastExpression	( STypeInfo * ) type		6342612	1					
ANR	6342629	CastTarget	STypeInfo *		6342612	0					
ANR	6342630	Identifier	type		6342612	1					
ANR	6342631	IdentifierDeclStatement	SLF_STRUCTURE * lf = ( SLF_STRUCTURE * ) t -> type_info ;	540:1:13272:13322	6342612	2	True				
ANR	6342632	IdentifierDecl	* lf = ( SLF_STRUCTURE * ) t -> type_info		6342612	0					
ANR	6342633	IdentifierDeclType	SLF_STRUCTURE *		6342612	0					
ANR	6342634	Identifier	lf		6342612	1					
ANR	6342635	AssignmentExpression	* lf = ( SLF_STRUCTURE * ) t -> type_info		6342612	2		=			
ANR	6342636	Identifier	lf		6342612	0					
ANR	6342637	CastExpression	( SLF_STRUCTURE * ) t -> type_info		6342612	1					
ANR	6342638	CastTarget	SLF_STRUCTURE *		6342612	0					
ANR	6342639	PtrMemberAccess	t -> type_info		6342612	1					
ANR	6342640	Identifier	t		6342612	0					
ANR	6342641	Identifier	type_info		6342612	1					
ANR	6342642	IdentifierDeclStatement	unsigned int indx = 0 ;	541:1:13325:13346	6342612	3	True				
ANR	6342643	IdentifierDecl	indx = 0		6342612	0					
ANR	6342644	IdentifierDeclType	unsigned int		6342612	0					
ANR	6342645	Identifier	indx		6342612	1					
ANR	6342646	AssignmentExpression	indx = 0		6342612	2		=			
ANR	6342647	Identifier	indx		6342612	0					
ANR	6342648	PrimaryExpression	0		6342612	1					
ANR	6342649	IfStatement	if ( lf -> field_list == 0 )		6342612	4					
ANR	6342650	Condition	lf -> field_list == 0	543:5:13354:13372	6342612	0	True				
ANR	6342651	EqualityExpression	lf -> field_list == 0		6342612	0		==			
ANR	6342652	PtrMemberAccess	lf -> field_list		6342612	0					
ANR	6342653	Identifier	lf		6342612	0					
ANR	6342654	Identifier	field_list		6342612	1					
ANR	6342655	PrimaryExpression	0		6342612	1					
ANR	6342656	CompoundStatement		7:26:175:175	6342612	1					
ANR	6342657	ExpressionStatement	* l = 0	544:2:13379:13385	6342612	0	True				
ANR	6342658	AssignmentExpression	* l = 0		6342612	0		=			
ANR	6342659	UnaryOperationExpression	* l		6342612	0					
ANR	6342660	UnaryOperator	*		6342612	0					
ANR	6342661	Identifier	l		6342612	1					
ANR	6342662	PrimaryExpression	0		6342612	1					
ANR	6342663	ElseStatement	else		6342612	0					
ANR	6342664	CompoundStatement		10:2:199:213	6342612	0					
ANR	6342665	IdentifierDeclStatement	SType * tmp = 0 ;	546:2:13399:13413	6342612	0	True				
ANR	6342666	IdentifierDecl	* tmp = 0		6342612	0					
ANR	6342667	IdentifierDeclType	SType *		6342612	0					
ANR	6342668	Identifier	tmp		6342612	1					
ANR	6342669	AssignmentExpression	* tmp = 0		6342612	2		=			
ANR	6342670	Identifier	tmp		6342612	0					
ANR	6342671	PrimaryExpression	0		6342612	1					
ANR	6342672	ExpressionStatement	indx = lf -> field_list - base_idx	547:2:13417:13449	6342612	1	True				
ANR	6342673	AssignmentExpression	indx = lf -> field_list - base_idx		6342612	0		=			
ANR	6342674	Identifier	indx		6342612	0					
ANR	6342675	AdditiveExpression	lf -> field_list - base_idx		6342612	1		-			
ANR	6342676	PtrMemberAccess	lf -> field_list		6342612	0					
ANR	6342677	Identifier	lf		6342612	0					
ANR	6342678	Identifier	field_list		6342612	1					
ANR	6342679	Identifier	base_idx		6342612	1					
ANR	6342680	ExpressionStatement	"tmp = ( SType * ) r_list_get_n ( p_types_list , indx )"	548:2:13453:13500	6342612	2	True				
ANR	6342681	AssignmentExpression	"tmp = ( SType * ) r_list_get_n ( p_types_list , indx )"		6342612	0		=			
ANR	6342682	Identifier	tmp		6342612	0					
ANR	6342683	CastExpression	"( SType * ) r_list_get_n ( p_types_list , indx )"		6342612	1					
ANR	6342684	CastTarget	SType *		6342612	0					
ANR	6342685	CallExpression	"r_list_get_n ( p_types_list , indx )"		6342612	1					
ANR	6342686	Callee	r_list_get_n		6342612	0					
ANR	6342687	Identifier	r_list_get_n		6342612	0					
ANR	6342688	ArgumentList	p_types_list		6342612	1					
ANR	6342689	Argument	p_types_list		6342612	0					
ANR	6342690	Identifier	p_types_list		6342612	0					
ANR	6342691	Argument	indx		6342612	1					
ANR	6342692	Identifier	indx		6342612	0					
ANR	6342693	ExpressionStatement	lf_fieldlist = ( SLF_FIELDLIST * ) tmp -> type_data . type_info	549:2:13504:13561	6342612	3	True				
ANR	6342694	AssignmentExpression	lf_fieldlist = ( SLF_FIELDLIST * ) tmp -> type_data . type_info		6342612	0		=			
ANR	6342695	Identifier	lf_fieldlist		6342612	0					
ANR	6342696	CastExpression	( SLF_FIELDLIST * ) tmp -> type_data . type_info		6342612	1					
ANR	6342697	CastTarget	SLF_FIELDLIST *		6342612	0					
ANR	6342698	MemberAccess	tmp -> type_data . type_info		6342612	1					
ANR	6342699	PtrMemberAccess	tmp -> type_data		6342612	0					
ANR	6342700	Identifier	tmp		6342612	0					
ANR	6342701	Identifier	type_data		6342612	1					
ANR	6342702	Identifier	type_info		6342612	1					
ANR	6342703	ExpressionStatement	* l = lf_fieldlist -> substructs	550:2:13565:13594	6342612	4	True				
ANR	6342704	AssignmentExpression	* l = lf_fieldlist -> substructs		6342612	0		=			
ANR	6342705	UnaryOperationExpression	* l		6342612	0					
ANR	6342706	UnaryOperator	*		6342612	0					
ANR	6342707	Identifier	l		6342612	1					
ANR	6342708	PtrMemberAccess	lf_fieldlist -> substructs		6342612	1					
ANR	6342709	Identifier	lf_fieldlist		6342612	0					
ANR	6342710	Identifier	substructs		6342612	1					
ANR	6342711	ReturnType	static void		6342612	1					
ANR	6342712	Identifier	get_struct_class_members		6342612	2					
ANR	6342713	ParameterList	"void * type , RList * * l"		6342612	3					
ANR	6342714	Parameter	void * type	537:37:13176:13185	6342612	0	True				
ANR	6342715	ParameterType	void *		6342612	0					
ANR	6342716	Identifier	type		6342612	1					
ANR	6342717	Parameter	RList * * l	537:49:13188:13196	6342612	1	True				
ANR	6342718	ParameterType	RList * *		6342612	0					
ANR	6342719	Identifier	l		6342612	1					
ANR	6342720	CFGEntryNode	ENTRY		6342612		True				
ANR	6342721	CFGExitNode	EXIT		6342612		True				
ANR	6342722	Symbol	* tmp		6342612						
ANR	6342723	Symbol	* lf		6342612						
ANR	6342724	Symbol	* lf_fieldlist		6342612						
ANR	6342725	Symbol	base_idx		6342612						
ANR	6342726	Symbol	lf_fieldlist -> substructs		6342612						
ANR	6342727	Symbol	indx		6342612						
ANR	6342728	Symbol	r_list_get_n		6342612						
ANR	6342729	Symbol	p_types_list		6342612						
ANR	6342730	Symbol	t -> type_info		6342612						
ANR	6342731	Symbol	type		6342612						
ANR	6342732	Symbol	l		6342612						
ANR	6342733	Symbol	tmp -> type_data		6342612						
ANR	6342734	Symbol	t		6342612						
ANR	6342735	Symbol	lf_fieldlist		6342612						
ANR	6342736	Symbol	* l		6342612						
ANR	6342737	Symbol	tmp		6342612						
ANR	6342738	Symbol	lf		6342612						
ANR	6342739	Symbol	tmp -> type_data . type_info		6342612						
ANR	6342740	Symbol	* t		6342612						
ANR	6342741	Symbol	lf -> field_list		6342612						
ANR	6342742	Function	get_enum_members	554:0:13602:13981							
ANR	6342743	FunctionDef	"get_enum_members (void * type , RList * * l)"		6342742	0					
ANR	6342744	CompoundStatement		554:52:13654:13981	6342742	0					
ANR	6342745	IdentifierDeclStatement	STypeInfo * t = ( STypeInfo * ) type ;	555:1:13657:13690	6342742	0	True				
ANR	6342746	IdentifierDecl	* t = ( STypeInfo * ) type		6342742	0					
ANR	6342747	IdentifierDeclType	STypeInfo *		6342742	0					
ANR	6342748	Identifier	t		6342742	1					
ANR	6342749	AssignmentExpression	* t = ( STypeInfo * ) type		6342742	2		=			
ANR	6342750	Identifier	t		6342742	0					
ANR	6342751	CastExpression	( STypeInfo * ) type		6342742	1					
ANR	6342752	CastTarget	STypeInfo *		6342742	0					
ANR	6342753	Identifier	type		6342742	1					
ANR	6342754	IdentifierDeclStatement	SLF_ENUM * lf = ( SLF_ENUM * ) t -> type_info ;	556:1:13693:13733	6342742	1	True				
ANR	6342755	IdentifierDecl	* lf = ( SLF_ENUM * ) t -> type_info		6342742	0					
ANR	6342756	IdentifierDeclType	SLF_ENUM *		6342742	0					
ANR	6342757	Identifier	lf		6342742	1					
ANR	6342758	AssignmentExpression	* lf = ( SLF_ENUM * ) t -> type_info		6342742	2		=			
ANR	6342759	Identifier	lf		6342742	0					
ANR	6342760	CastExpression	( SLF_ENUM * ) t -> type_info		6342742	1					
ANR	6342761	CastTarget	SLF_ENUM *		6342742	0					
ANR	6342762	PtrMemberAccess	t -> type_info		6342742	1					
ANR	6342763	Identifier	t		6342742	0					
ANR	6342764	Identifier	type_info		6342742	1					
ANR	6342765	IdentifierDeclStatement	unsigned int indx = 0 ;	557:1:13736:13757	6342742	2	True				
ANR	6342766	IdentifierDecl	indx = 0		6342742	0					
ANR	6342767	IdentifierDeclType	unsigned int		6342742	0					
ANR	6342768	Identifier	indx		6342742	1					
ANR	6342769	AssignmentExpression	indx = 0		6342742	2		=			
ANR	6342770	Identifier	indx		6342742	0					
ANR	6342771	PrimaryExpression	0		6342742	1					
ANR	6342772	IfStatement	if ( lf -> field_list == 0 )		6342742	3					
ANR	6342773	Condition	lf -> field_list == 0	559:5:13765:13783	6342742	0	True				
ANR	6342774	EqualityExpression	lf -> field_list == 0		6342742	0		==			
ANR	6342775	PtrMemberAccess	lf -> field_list		6342742	0					
ANR	6342776	Identifier	lf		6342742	0					
ANR	6342777	Identifier	field_list		6342742	1					
ANR	6342778	PrimaryExpression	0		6342742	1					
ANR	6342779	CompoundStatement		6:26:131:131	6342742	1					
ANR	6342780	ExpressionStatement	* l = 0	560:2:13790:13796	6342742	0	True				
ANR	6342781	AssignmentExpression	* l = 0		6342742	0		=			
ANR	6342782	UnaryOperationExpression	* l		6342742	0					
ANR	6342783	UnaryOperator	*		6342742	0					
ANR	6342784	Identifier	l		6342742	1					
ANR	6342785	PrimaryExpression	0		6342742	1					
ANR	6342786	ElseStatement	else		6342742	0					
ANR	6342787	CompoundStatement		9:2:155:169	6342742	0					
ANR	6342788	IdentifierDeclStatement	SType * tmp = 0 ;	562:2:13810:13824	6342742	0	True				
ANR	6342789	IdentifierDecl	* tmp = 0		6342742	0					
ANR	6342790	IdentifierDeclType	SType *		6342742	0					
ANR	6342791	Identifier	tmp		6342742	1					
ANR	6342792	AssignmentExpression	* tmp = 0		6342742	2		=			
ANR	6342793	Identifier	tmp		6342742	0					
ANR	6342794	PrimaryExpression	0		6342742	1					
ANR	6342795	ExpressionStatement	indx = lf -> field_list - base_idx	563:2:13828:13860	6342742	1	True				
ANR	6342796	AssignmentExpression	indx = lf -> field_list - base_idx		6342742	0		=			
ANR	6342797	Identifier	indx		6342742	0					
ANR	6342798	AdditiveExpression	lf -> field_list - base_idx		6342742	1		-			
ANR	6342799	PtrMemberAccess	lf -> field_list		6342742	0					
ANR	6342800	Identifier	lf		6342742	0					
ANR	6342801	Identifier	field_list		6342742	1					
ANR	6342802	Identifier	base_idx		6342742	1					
ANR	6342803	ExpressionStatement	"tmp = ( SType * ) r_list_get_n ( p_types_list , indx )"	564:2:13864:13911	6342742	2	True				
ANR	6342804	AssignmentExpression	"tmp = ( SType * ) r_list_get_n ( p_types_list , indx )"		6342742	0		=			
ANR	6342805	Identifier	tmp		6342742	0					
ANR	6342806	CastExpression	"( SType * ) r_list_get_n ( p_types_list , indx )"		6342742	1					
ANR	6342807	CastTarget	SType *		6342742	0					
ANR	6342808	CallExpression	"r_list_get_n ( p_types_list , indx )"		6342742	1					
ANR	6342809	Callee	r_list_get_n		6342742	0					
ANR	6342810	Identifier	r_list_get_n		6342742	0					
ANR	6342811	ArgumentList	p_types_list		6342742	1					
ANR	6342812	Argument	p_types_list		6342742	0					
ANR	6342813	Identifier	p_types_list		6342742	0					
ANR	6342814	Argument	indx		6342742	1					
ANR	6342815	Identifier	indx		6342742	0					
ANR	6342816	ExpressionStatement	* l = ( ( SLF_FIELDLIST * ) tmp -> type_data . type_info ) -> substructs	565:2:13915:13976	6342742	3	True				
ANR	6342817	AssignmentExpression	* l = ( ( SLF_FIELDLIST * ) tmp -> type_data . type_info ) -> substructs		6342742	0		=			
ANR	6342818	UnaryOperationExpression	* l		6342742	0					
ANR	6342819	UnaryOperator	*		6342742	0					
ANR	6342820	Identifier	l		6342742	1					
ANR	6342821	PtrMemberAccess	( ( SLF_FIELDLIST * ) tmp -> type_data . type_info ) -> substructs		6342742	1					
ANR	6342822	CastExpression	( SLF_FIELDLIST * ) tmp -> type_data . type_info		6342742	0					
ANR	6342823	CastTarget	SLF_FIELDLIST *		6342742	0					
ANR	6342824	MemberAccess	tmp -> type_data . type_info		6342742	1					
ANR	6342825	PtrMemberAccess	tmp -> type_data		6342742	0					
ANR	6342826	Identifier	tmp		6342742	0					
ANR	6342827	Identifier	type_data		6342742	1					
ANR	6342828	Identifier	type_info		6342742	1					
ANR	6342829	Identifier	substructs		6342742	1					
ANR	6342830	ReturnType	static void		6342742	1					
ANR	6342831	Identifier	get_enum_members		6342742	2					
ANR	6342832	ParameterList	"void * type , RList * * l"		6342742	3					
ANR	6342833	Parameter	void * type	554:29:13631:13640	6342742	0	True				
ANR	6342834	ParameterType	void *		6342742	0					
ANR	6342835	Identifier	type		6342742	1					
ANR	6342836	Parameter	RList * * l	554:41:13643:13651	6342742	1	True				
ANR	6342837	ParameterType	RList * *		6342742	0					
ANR	6342838	Identifier	l		6342742	1					
ANR	6342839	CFGEntryNode	ENTRY		6342742		True				
ANR	6342840	CFGExitNode	EXIT		6342742		True				
ANR	6342841	Symbol	* tmp		6342742						
ANR	6342842	Symbol	* lf		6342742						
ANR	6342843	Symbol	base_idx		6342742						
ANR	6342844	Symbol	indx		6342742						
ANR	6342845	Symbol	* tmp -> type_data . type_info		6342742						
ANR	6342846	Symbol	r_list_get_n		6342742						
ANR	6342847	Symbol	p_types_list		6342742						
ANR	6342848	Symbol	t -> type_info		6342742						
ANR	6342849	Symbol	* * tmp		6342742						
ANR	6342850	Symbol	type		6342742						
ANR	6342851	Symbol	l		6342742						
ANR	6342852	Symbol	* tmp -> type_data		6342742						
ANR	6342853	Symbol	( ( SLF_FIELDLIST * ) tmp -> type_data . type_info ) -> substructs		6342742						
ANR	6342854	Symbol	tmp -> type_data		6342742						
ANR	6342855	Symbol	t		6342742						
ANR	6342856	Symbol	* l		6342742						
ANR	6342857	Symbol	tmp		6342742						
ANR	6342858	Symbol	lf		6342742						
ANR	6342859	Symbol	tmp -> type_data . type_info		6342742						
ANR	6342860	Symbol	* t		6342742						
ANR	6342861	Symbol	lf -> field_list		6342742						
ANR	6342862	Function	get_sval_val	569:0:13984:15269							
ANR	6342863	FunctionDef	"get_sval_val (SVal * val , int * res)"		6342862	0					
ANR	6342864	CompoundStatement		569:46:14030:15269	6342862	0					
ANR	6342865	IfStatement	if ( val -> value_or_type < eLF_CHAR )		6342862	0					
ANR	6342866	Condition	val -> value_or_type < eLF_CHAR	570:5:14037:14065	6342862	0	True				
ANR	6342867	RelationalExpression	val -> value_or_type < eLF_CHAR		6342862	0		<			
ANR	6342868	PtrMemberAccess	val -> value_or_type		6342862	0					
ANR	6342869	Identifier	val		6342862	0					
ANR	6342870	Identifier	value_or_type		6342862	1					
ANR	6342871	Identifier	eLF_CHAR		6342862	1					
ANR	6342872	CompoundStatement		2:36:37:37	6342862	1					
ANR	6342873	ExpressionStatement	* res = val -> value_or_type	571:2:14072:14097	6342862	0	True				
ANR	6342874	AssignmentExpression	* res = val -> value_or_type		6342862	0		=			
ANR	6342875	UnaryOperationExpression	* res		6342862	0					
ANR	6342876	UnaryOperator	*		6342862	0					
ANR	6342877	Identifier	res		6342862	1					
ANR	6342878	PtrMemberAccess	val -> value_or_type		6342862	1					
ANR	6342879	Identifier	val		6342862	0					
ANR	6342880	Identifier	value_or_type		6342862	1					
ANR	6342881	ElseStatement	else		6342862	0					
ANR	6342882	CompoundStatement		4:8:76:76	6342862	0					
ANR	6342883	SwitchStatement	switch ( val -> value_or_type )		6342862	0					
ANR	6342884	Condition	val -> value_or_type	573:10:14119:14136	6342862	0	True				
ANR	6342885	PtrMemberAccess	val -> value_or_type		6342862	0					
ANR	6342886	Identifier	val		6342862	0					
ANR	6342887	Identifier	value_or_type		6342862	1					
ANR	6342888	CompoundStatement		5:30:108:108	6342862	1					
ANR	6342889	Label	case eLF_UQUADWORD :	574:2:14143:14161	6342862	0	True				
ANR	6342890	Identifier	eLF_UQUADWORD		6342862	0					
ANR	6342891	CompoundStatement		8:3:139:167	6342862	1					
ANR	6342892	IdentifierDeclStatement	SVal_LF_UQUADWORD * lf_uqword ;	576:3:14170:14198	6342862	0	True				
ANR	6342893	IdentifierDecl	* lf_uqword		6342862	0					
ANR	6342894	IdentifierDeclType	SVal_LF_UQUADWORD *		6342862	0					
ANR	6342895	Identifier	lf_uqword		6342862	1					
ANR	6342896	ExpressionStatement	lf_uqword = ( SVal_LF_UQUADWORD * ) val -> name_or_val	577:3:14203:14253	6342862	1	True				
ANR	6342897	AssignmentExpression	lf_uqword = ( SVal_LF_UQUADWORD * ) val -> name_or_val		6342862	0		=			
ANR	6342898	Identifier	lf_uqword		6342862	0					
ANR	6342899	CastExpression	( SVal_LF_UQUADWORD * ) val -> name_or_val		6342862	1					
ANR	6342900	CastTarget	SVal_LF_UQUADWORD *		6342862	0					
ANR	6342901	PtrMemberAccess	val -> name_or_val		6342862	1					
ANR	6342902	Identifier	val		6342862	0					
ANR	6342903	Identifier	name_or_val		6342862	1					
ANR	6342904	ExpressionStatement	* res = lf_uqword -> value	578:3:14258:14281	6342862	2	True				
ANR	6342905	AssignmentExpression	* res = lf_uqword -> value		6342862	0		=			
ANR	6342906	UnaryOperationExpression	* res		6342862	0					
ANR	6342907	UnaryOperator	*		6342862	0					
ANR	6342908	Identifier	res		6342862	1					
ANR	6342909	PtrMemberAccess	lf_uqword -> value		6342862	1					
ANR	6342910	Identifier	lf_uqword		6342862	0					
ANR	6342911	Identifier	value		6342862	1					
ANR	6342912	BreakStatement	break ;	579:3:14286:14291	6342862	3	True				
ANR	6342913	Label	case eLF_QUADWORD :	581:2:14299:14316	6342862	2	True				
ANR	6342914	Identifier	eLF_QUADWORD		6342862	0					
ANR	6342915	CompoundStatement		15:3:294:320	6342862	3					
ANR	6342916	IdentifierDeclStatement	SVal_LF_QUADWORD * lf_qword ;	583:3:14325:14351	6342862	0	True				
ANR	6342917	IdentifierDecl	* lf_qword		6342862	0					
ANR	6342918	IdentifierDeclType	SVal_LF_QUADWORD *		6342862	0					
ANR	6342919	Identifier	lf_qword		6342862	1					
ANR	6342920	ExpressionStatement	lf_qword = ( SVal_LF_QUADWORD * ) val -> name_or_val	584:3:14356:14404	6342862	1	True				
ANR	6342921	AssignmentExpression	lf_qword = ( SVal_LF_QUADWORD * ) val -> name_or_val		6342862	0		=			
ANR	6342922	Identifier	lf_qword		6342862	0					
ANR	6342923	CastExpression	( SVal_LF_QUADWORD * ) val -> name_or_val		6342862	1					
ANR	6342924	CastTarget	SVal_LF_QUADWORD *		6342862	0					
ANR	6342925	PtrMemberAccess	val -> name_or_val		6342862	1					
ANR	6342926	Identifier	val		6342862	0					
ANR	6342927	Identifier	name_or_val		6342862	1					
ANR	6342928	ExpressionStatement	* res = lf_qword -> value	585:3:14409:14431	6342862	2	True				
ANR	6342929	AssignmentExpression	* res = lf_qword -> value		6342862	0		=			
ANR	6342930	UnaryOperationExpression	* res		6342862	0					
ANR	6342931	UnaryOperator	*		6342862	0					
ANR	6342932	Identifier	res		6342862	1					
ANR	6342933	PtrMemberAccess	lf_qword -> value		6342862	1					
ANR	6342934	Identifier	lf_qword		6342862	0					
ANR	6342935	Identifier	value		6342862	1					
ANR	6342936	BreakStatement	break ;	586:3:14436:14441	6342862	3	True				
ANR	6342937	Label	case eLF_ULONG :	588:2:14449:14463	6342862	4	True				
ANR	6342938	Identifier	eLF_ULONG		6342862	0					
ANR	6342939	CompoundStatement		22:3:441:464	6342862	5					
ANR	6342940	IdentifierDeclStatement	SVal_LF_ULONG * lf_ulong ;	590:3:14472:14495	6342862	0	True				
ANR	6342941	IdentifierDecl	* lf_ulong		6342862	0					
ANR	6342942	IdentifierDeclType	SVal_LF_ULONG *		6342862	0					
ANR	6342943	Identifier	lf_ulong		6342862	1					
ANR	6342944	ExpressionStatement	lf_ulong = ( SVal_LF_ULONG * ) val -> name_or_val	591:3:14500:14545	6342862	1	True				
ANR	6342945	AssignmentExpression	lf_ulong = ( SVal_LF_ULONG * ) val -> name_or_val		6342862	0		=			
ANR	6342946	Identifier	lf_ulong		6342862	0					
ANR	6342947	CastExpression	( SVal_LF_ULONG * ) val -> name_or_val		6342862	1					
ANR	6342948	CastTarget	SVal_LF_ULONG *		6342862	0					
ANR	6342949	PtrMemberAccess	val -> name_or_val		6342862	1					
ANR	6342950	Identifier	val		6342862	0					
ANR	6342951	Identifier	name_or_val		6342862	1					
ANR	6342952	ExpressionStatement	* res = lf_ulong -> value	592:3:14550:14572	6342862	2	True				
ANR	6342953	AssignmentExpression	* res = lf_ulong -> value		6342862	0		=			
ANR	6342954	UnaryOperationExpression	* res		6342862	0					
ANR	6342955	UnaryOperator	*		6342862	0					
ANR	6342956	Identifier	res		6342862	1					
ANR	6342957	PtrMemberAccess	lf_ulong -> value		6342862	1					
ANR	6342958	Identifier	lf_ulong		6342862	0					
ANR	6342959	Identifier	value		6342862	1					
ANR	6342960	BreakStatement	break ;	593:3:14577:14582	6342862	3	True				
ANR	6342961	Label	case eLF_LONG :	595:2:14590:14603	6342862	6	True				
ANR	6342962	Identifier	eLF_LONG		6342862	0					
ANR	6342963	CompoundStatement		29:3:581:602	6342862	7					
ANR	6342964	IdentifierDeclStatement	SVal_LF_LONG * lf_long ;	597:3:14612:14633	6342862	0	True				
ANR	6342965	IdentifierDecl	* lf_long		6342862	0					
ANR	6342966	IdentifierDeclType	SVal_LF_LONG *		6342862	0					
ANR	6342967	Identifier	lf_long		6342862	1					
ANR	6342968	ExpressionStatement	lf_long = ( SVal_LF_LONG * ) val -> name_or_val	598:3:14638:14681	6342862	1	True				
ANR	6342969	AssignmentExpression	lf_long = ( SVal_LF_LONG * ) val -> name_or_val		6342862	0		=			
ANR	6342970	Identifier	lf_long		6342862	0					
ANR	6342971	CastExpression	( SVal_LF_LONG * ) val -> name_or_val		6342862	1					
ANR	6342972	CastTarget	SVal_LF_LONG *		6342862	0					
ANR	6342973	PtrMemberAccess	val -> name_or_val		6342862	1					
ANR	6342974	Identifier	val		6342862	0					
ANR	6342975	Identifier	name_or_val		6342862	1					
ANR	6342976	ExpressionStatement	* res = lf_long -> value	599:3:14686:14707	6342862	2	True				
ANR	6342977	AssignmentExpression	* res = lf_long -> value		6342862	0		=			
ANR	6342978	UnaryOperationExpression	* res		6342862	0					
ANR	6342979	UnaryOperator	*		6342862	0					
ANR	6342980	Identifier	res		6342862	1					
ANR	6342981	PtrMemberAccess	lf_long -> value		6342862	1					
ANR	6342982	Identifier	lf_long		6342862	0					
ANR	6342983	Identifier	value		6342862	1					
ANR	6342984	BreakStatement	break ;	600:3:14712:14717	6342862	3	True				
ANR	6342985	Label	case eLF_USHORT :	602:2:14725:14740	6342862	8	True				
ANR	6342986	Identifier	eLF_USHORT		6342862	0					
ANR	6342987	CompoundStatement		36:3:718:743	6342862	9					
ANR	6342988	IdentifierDeclStatement	SVal_LF_USHORT * lf_ushort ;	604:3:14749:14774	6342862	0	True				
ANR	6342989	IdentifierDecl	* lf_ushort		6342862	0					
ANR	6342990	IdentifierDeclType	SVal_LF_USHORT *		6342862	0					
ANR	6342991	Identifier	lf_ushort		6342862	1					
ANR	6342992	ExpressionStatement	lf_ushort = ( SVal_LF_USHORT * ) val -> name_or_val	605:3:14779:14826	6342862	1	True				
ANR	6342993	AssignmentExpression	lf_ushort = ( SVal_LF_USHORT * ) val -> name_or_val		6342862	0		=			
ANR	6342994	Identifier	lf_ushort		6342862	0					
ANR	6342995	CastExpression	( SVal_LF_USHORT * ) val -> name_or_val		6342862	1					
ANR	6342996	CastTarget	SVal_LF_USHORT *		6342862	0					
ANR	6342997	PtrMemberAccess	val -> name_or_val		6342862	1					
ANR	6342998	Identifier	val		6342862	0					
ANR	6342999	Identifier	name_or_val		6342862	1					
ANR	6343000	ExpressionStatement	* res = lf_ushort -> value	606:3:14831:14854	6342862	2	True				
ANR	6343001	AssignmentExpression	* res = lf_ushort -> value		6342862	0		=			
ANR	6343002	UnaryOperationExpression	* res		6342862	0					
ANR	6343003	UnaryOperator	*		6342862	0					
ANR	6343004	Identifier	res		6342862	1					
ANR	6343005	PtrMemberAccess	lf_ushort -> value		6342862	1					
ANR	6343006	Identifier	lf_ushort		6342862	0					
ANR	6343007	Identifier	value		6342862	1					
ANR	6343008	BreakStatement	break ;	607:3:14859:14864	6342862	3	True				
ANR	6343009	Label	case eLF_SHORT :	609:2:14872:14886	6342862	10	True				
ANR	6343010	Identifier	eLF_SHORT		6342862	0					
ANR	6343011	CompoundStatement		43:3:864:887	6342862	11					
ANR	6343012	IdentifierDeclStatement	SVal_LF_SHORT * lf_short ;	611:3:14895:14918	6342862	0	True				
ANR	6343013	IdentifierDecl	* lf_short		6342862	0					
ANR	6343014	IdentifierDeclType	SVal_LF_SHORT *		6342862	0					
ANR	6343015	Identifier	lf_short		6342862	1					
ANR	6343016	ExpressionStatement	lf_short = ( SVal_LF_SHORT * ) val -> name_or_val	612:3:14923:14968	6342862	1	True				
ANR	6343017	AssignmentExpression	lf_short = ( SVal_LF_SHORT * ) val -> name_or_val		6342862	0		=			
ANR	6343018	Identifier	lf_short		6342862	0					
ANR	6343019	CastExpression	( SVal_LF_SHORT * ) val -> name_or_val		6342862	1					
ANR	6343020	CastTarget	SVal_LF_SHORT *		6342862	0					
ANR	6343021	PtrMemberAccess	val -> name_or_val		6342862	1					
ANR	6343022	Identifier	val		6342862	0					
ANR	6343023	Identifier	name_or_val		6342862	1					
ANR	6343024	ExpressionStatement	* res = lf_short -> value	613:3:14973:14995	6342862	2	True				
ANR	6343025	AssignmentExpression	* res = lf_short -> value		6342862	0		=			
ANR	6343026	UnaryOperationExpression	* res		6342862	0					
ANR	6343027	UnaryOperator	*		6342862	0					
ANR	6343028	Identifier	res		6342862	1					
ANR	6343029	PtrMemberAccess	lf_short -> value		6342862	1					
ANR	6343030	Identifier	lf_short		6342862	0					
ANR	6343031	Identifier	value		6342862	1					
ANR	6343032	BreakStatement	break ;	614:3:15000:15005	6342862	3	True				
ANR	6343033	Label	case eLF_CHAR :	616:2:15013:15026	6342862	12	True				
ANR	6343034	Identifier	eLF_CHAR		6342862	0					
ANR	6343035	CompoundStatement		50:3:1004:1025	6342862	13					
ANR	6343036	IdentifierDeclStatement	SVal_LF_CHAR * lf_char ;	618:3:15035:15056	6342862	0	True				
ANR	6343037	IdentifierDecl	* lf_char		6342862	0					
ANR	6343038	IdentifierDeclType	SVal_LF_CHAR *		6342862	0					
ANR	6343039	Identifier	lf_char		6342862	1					
ANR	6343040	ExpressionStatement	lf_char = ( SVal_LF_CHAR * ) val -> name_or_val	619:3:15061:15104	6342862	1	True				
ANR	6343041	AssignmentExpression	lf_char = ( SVal_LF_CHAR * ) val -> name_or_val		6342862	0		=			
ANR	6343042	Identifier	lf_char		6342862	0					
ANR	6343043	CastExpression	( SVal_LF_CHAR * ) val -> name_or_val		6342862	1					
ANR	6343044	CastTarget	SVal_LF_CHAR *		6342862	0					
ANR	6343045	PtrMemberAccess	val -> name_or_val		6342862	1					
ANR	6343046	Identifier	val		6342862	0					
ANR	6343047	Identifier	name_or_val		6342862	1					
ANR	6343048	ExpressionStatement	* res = lf_char -> value	620:3:15109:15130	6342862	2	True				
ANR	6343049	AssignmentExpression	* res = lf_char -> value		6342862	0		=			
ANR	6343050	UnaryOperationExpression	* res		6342862	0					
ANR	6343051	UnaryOperator	*		6342862	0					
ANR	6343052	Identifier	res		6342862	1					
ANR	6343053	PtrMemberAccess	lf_char -> value		6342862	1					
ANR	6343054	Identifier	lf_char		6342862	0					
ANR	6343055	Identifier	value		6342862	1					
ANR	6343056	BreakStatement	break ;	621:3:15135:15140	6342862	3	True				
ANR	6343057	Label	default :	624:2:15149:15156	6342862	14	True				
ANR	6343058	Identifier	default		6342862	0					
ANR	6343059	ExpressionStatement	* res = 0	625:3:15161:15169	6342862	15	True				
ANR	6343060	AssignmentExpression	* res = 0		6342862	0		=			
ANR	6343061	UnaryOperationExpression	* res		6342862	0					
ANR	6343062	UnaryOperator	*		6342862	0					
ANR	6343063	Identifier	res		6342862	1					
ANR	6343064	PrimaryExpression	0		6342862	1					
ANR	6343065	ExpressionStatement	"printf ( ""get_sval_val: Skipping unsupported type (%d)\\n"" , val -> value_or_type )"	626:3:15174:15250	6342862	16	True				
ANR	6343066	CallExpression	"printf ( ""get_sval_val: Skipping unsupported type (%d)\\n"" , val -> value_or_type )"		6342862	0					
ANR	6343067	Callee	printf		6342862	0					
ANR	6343068	Identifier	printf		6342862	0					
ANR	6343069	ArgumentList	"""get_sval_val: Skipping unsupported type (%d)\\n"""		6342862	1					
ANR	6343070	Argument	"""get_sval_val: Skipping unsupported type (%d)\\n"""		6342862	0					
ANR	6343071	PrimaryExpression	"""get_sval_val: Skipping unsupported type (%d)\\n"""		6342862	0					
ANR	6343072	Argument	val -> value_or_type		6342862	1					
ANR	6343073	PtrMemberAccess	val -> value_or_type		6342862	0					
ANR	6343074	Identifier	val		6342862	0					
ANR	6343075	Identifier	value_or_type		6342862	1					
ANR	6343076	BreakStatement	break ;	627:3:15255:15260	6342862	17	True				
ANR	6343077	ReturnType	static void		6342862	1					
ANR	6343078	Identifier	get_sval_val		6342862	2					
ANR	6343079	ParameterList	"SVal * val , int * res"		6342862	3					
ANR	6343080	Parameter	SVal * val	569:25:14009:14017	6342862	0	True				
ANR	6343081	ParameterType	SVal *		6342862	0					
ANR	6343082	Identifier	val		6342862	1					
ANR	6343083	Parameter	int * res	569:36:14020:14027	6342862	1	True				
ANR	6343084	ParameterType	int *		6342862	0					
ANR	6343085	Identifier	res		6342862	1					
ANR	6343086	CFGEntryNode	ENTRY		6342862		True				
ANR	6343087	CFGExitNode	EXIT		6342862		True				
ANR	6343088	Symbol	* lf_uqword		6342862						
ANR	6343089	Symbol	lf_ushort -> value		6342862						
ANR	6343090	Symbol	* res		6342862						
ANR	6343091	Symbol	eLF_CHAR		6342862						
ANR	6343092	Symbol	* val		6342862						
ANR	6343093	Symbol	* lf_qword		6342862						
ANR	6343094	Symbol	lf_qword -> value		6342862						
ANR	6343095	Symbol	lf_uqword		6342862						
ANR	6343096	Symbol	lf_ulong		6342862						
ANR	6343097	Symbol	* lf_long		6342862						
ANR	6343098	Symbol	lf_uqword -> value		6342862						
ANR	6343099	Symbol	* lf_short		6342862						
ANR	6343100	Symbol	val		6342862						
ANR	6343101	Symbol	res		6342862						
ANR	6343102	Symbol	lf_char		6342862						
ANR	6343103	Symbol	lf_char -> value		6342862						
ANR	6343104	Symbol	lf_short -> value		6342862						
ANR	6343105	Symbol	lf_ulong -> value		6342862						
ANR	6343106	Symbol	lf_short		6342862						
ANR	6343107	Symbol	lf_long -> value		6342862						
ANR	6343108	Symbol	* lf_ushort		6342862						
ANR	6343109	Symbol	lf_qword		6342862						
ANR	6343110	Symbol	val -> value_or_type		6342862						
ANR	6343111	Symbol	* lf_ulong		6342862						
ANR	6343112	Symbol	val -> name_or_val		6342862						
ANR	6343113	Symbol	lf_long		6342862						
ANR	6343114	Symbol	* lf_char		6342862						
ANR	6343115	Symbol	lf_ushort		6342862						
ANR	6343116	Function	get_onemethod_name_len	641:0:15549:15756							
ANR	6343117	FunctionDef	"get_onemethod_name_len (void * type , int * res_len)"		6343116	0					
ANR	6343118	CompoundStatement		641:61:15610:15756	6343116	0					
ANR	6343119	IdentifierDeclStatement	STypeInfo * t = ( STypeInfo * ) type ;	642:1:15613:15646	6343116	0	True				
ANR	6343120	IdentifierDecl	* t = ( STypeInfo * ) type		6343116	0					
ANR	6343121	IdentifierDeclType	STypeInfo *		6343116	0					
ANR	6343122	Identifier	t		6343116	1					
ANR	6343123	AssignmentExpression	* t = ( STypeInfo * ) type		6343116	2		=			
ANR	6343124	Identifier	t		6343116	0					
ANR	6343125	CastExpression	( STypeInfo * ) type		6343116	1					
ANR	6343126	CastTarget	STypeInfo *		6343116	0					
ANR	6343127	Identifier	type		6343116	1					
ANR	6343128	IdentifierDeclStatement	SLF_ONEMETHOD * lf_onemethod = ( SLF_ONEMETHOD * ) t -> type_info ;	643:1:15649:15708	6343116	1	True				
ANR	6343129	IdentifierDecl	* lf_onemethod = ( SLF_ONEMETHOD * ) t -> type_info		6343116	0					
ANR	6343130	IdentifierDeclType	SLF_ONEMETHOD *		6343116	0					
ANR	6343131	Identifier	lf_onemethod		6343116	1					
ANR	6343132	AssignmentExpression	* lf_onemethod = ( SLF_ONEMETHOD * ) t -> type_info		6343116	2		=			
ANR	6343133	Identifier	lf_onemethod		6343116	0					
ANR	6343134	CastExpression	( SLF_ONEMETHOD * ) t -> type_info		6343116	1					
ANR	6343135	CastTarget	SLF_ONEMETHOD *		6343116	0					
ANR	6343136	PtrMemberAccess	t -> type_info		6343116	1					
ANR	6343137	Identifier	t		6343116	0					
ANR	6343138	Identifier	type_info		6343116	1					
ANR	6343139	ExpressionStatement	* res_len = lf_onemethod -> val . str_data . size	645:1:15712:15754	6343116	2	True				
ANR	6343140	AssignmentExpression	* res_len = lf_onemethod -> val . str_data . size		6343116	0		=			
ANR	6343141	UnaryOperationExpression	* res_len		6343116	0					
ANR	6343142	UnaryOperator	*		6343116	0					
ANR	6343143	Identifier	res_len		6343116	1					
ANR	6343144	MemberAccess	lf_onemethod -> val . str_data . size		6343116	1					
ANR	6343145	MemberAccess	lf_onemethod -> val . str_data		6343116	0					
ANR	6343146	PtrMemberAccess	lf_onemethod -> val		6343116	0					
ANR	6343147	Identifier	lf_onemethod		6343116	0					
ANR	6343148	Identifier	val		6343116	1					
ANR	6343149	Identifier	str_data		6343116	1					
ANR	6343150	Identifier	size		6343116	1					
ANR	6343151	ReturnType	static void		6343116	1					
ANR	6343152	Identifier	get_onemethod_name_len		6343116	2					
ANR	6343153	ParameterList	"void * type , int * res_len"		6343116	3					
ANR	6343154	Parameter	void * type	641:35:15584:15593	6343116	0	True				
ANR	6343155	ParameterType	void *		6343116	0					
ANR	6343156	Identifier	type		6343116	1					
ANR	6343157	Parameter	int * res_len	641:47:15596:15607	6343116	1	True				
ANR	6343158	ParameterType	int *		6343116	0					
ANR	6343159	Identifier	res_len		6343116	1					
ANR	6343160	CFGEntryNode	ENTRY		6343116		True				
ANR	6343161	CFGExitNode	EXIT		6343116		True				
ANR	6343162	Symbol	* res_len		6343116						
ANR	6343163	Symbol	t		6343116						
ANR	6343164	Symbol	* lf_onemethod		6343116						
ANR	6343165	Symbol	lf_onemethod -> val		6343116						
ANR	6343166	Symbol	res_len		6343116						
ANR	6343167	Symbol	lf_onemethod		6343116						
ANR	6343168	Symbol	t -> type_info		6343116						
ANR	6343169	Symbol	type		6343116						
ANR	6343170	Symbol	lf_onemethod -> val . str_data . size		6343116						
ANR	6343171	Symbol	* t		6343116						
ANR	6343172	Symbol	lf_onemethod -> val . str_data		6343116						
ANR	6343173	Function	get_enum_name_len	648:0:15759:15933							
ANR	6343174	FunctionDef	"get_enum_name_len (void * type , int * res_len)"		6343173	0					
ANR	6343175	CompoundStatement		648:56:15815:15933	6343173	0					
ANR	6343176	IdentifierDeclStatement	STypeInfo * t = ( STypeInfo * ) type ;	649:1:15818:15851	6343173	0	True				
ANR	6343177	IdentifierDecl	* t = ( STypeInfo * ) type		6343173	0					
ANR	6343178	IdentifierDeclType	STypeInfo *		6343173	0					
ANR	6343179	Identifier	t		6343173	1					
ANR	6343180	AssignmentExpression	* t = ( STypeInfo * ) type		6343173	2		=			
ANR	6343181	Identifier	t		6343173	0					
ANR	6343182	CastExpression	( STypeInfo * ) type		6343173	1					
ANR	6343183	CastTarget	STypeInfo *		6343173	0					
ANR	6343184	Identifier	type		6343173	1					
ANR	6343185	IdentifierDeclStatement	SLF_ENUM * lf_enum = ( SLF_ENUM * ) t -> type_info ;	650:1:15854:15898	6343173	1	True				
ANR	6343186	IdentifierDecl	* lf_enum = ( SLF_ENUM * ) t -> type_info		6343173	0					
ANR	6343187	IdentifierDeclType	SLF_ENUM *		6343173	0					
ANR	6343188	Identifier	lf_enum		6343173	1					
ANR	6343189	AssignmentExpression	* lf_enum = ( SLF_ENUM * ) t -> type_info		6343173	2		=			
ANR	6343190	Identifier	lf_enum		6343173	0					
ANR	6343191	CastExpression	( SLF_ENUM * ) t -> type_info		6343173	1					
ANR	6343192	CastTarget	SLF_ENUM *		6343173	0					
ANR	6343193	PtrMemberAccess	t -> type_info		6343173	1					
ANR	6343194	Identifier	t		6343173	0					
ANR	6343195	Identifier	type_info		6343173	1					
ANR	6343196	ExpressionStatement	* res_len = lf_enum -> name . size	652:1:15902:15931	6343173	2	True				
ANR	6343197	AssignmentExpression	* res_len = lf_enum -> name . size		6343173	0		=			
ANR	6343198	UnaryOperationExpression	* res_len		6343173	0					
ANR	6343199	UnaryOperator	*		6343173	0					
ANR	6343200	Identifier	res_len		6343173	1					
ANR	6343201	MemberAccess	lf_enum -> name . size		6343173	1					
ANR	6343202	PtrMemberAccess	lf_enum -> name		6343173	0					
ANR	6343203	Identifier	lf_enum		6343173	0					
ANR	6343204	Identifier	name		6343173	1					
ANR	6343205	Identifier	size		6343173	1					
ANR	6343206	ReturnType	static void		6343173	1					
ANR	6343207	Identifier	get_enum_name_len		6343173	2					
ANR	6343208	ParameterList	"void * type , int * res_len"		6343173	3					
ANR	6343209	Parameter	void * type	648:30:15789:15798	6343173	0	True				
ANR	6343210	ParameterType	void *		6343173	0					
ANR	6343211	Identifier	type		6343173	1					
ANR	6343212	Parameter	int * res_len	648:42:15801:15812	6343173	1	True				
ANR	6343213	ParameterType	int *		6343173	0					
ANR	6343214	Identifier	res_len		6343173	1					
ANR	6343215	CFGEntryNode	ENTRY		6343173		True				
ANR	6343216	CFGExitNode	EXIT		6343173		True				
ANR	6343217	Symbol	* res_len		6343173						
ANR	6343218	Symbol	t		6343173						
ANR	6343219	Symbol	res_len		6343173						
ANR	6343220	Symbol	* lf_enum		6343173						
ANR	6343221	Symbol	t -> type_info		6343173						
ANR	6343222	Symbol	type		6343173						
ANR	6343223	Symbol	* t		6343173						
ANR	6343224	Symbol	lf_enum -> name		6343173						
ANR	6343225	Symbol	lf_enum		6343173						
ANR	6343226	Symbol	lf_enum -> name . size		6343173						
ANR	6343227	Function	get_class_struct_name_len	655:0:15936:16131							
ANR	6343228	FunctionDef	"get_class_struct_name_len (void * type , int * res_len)"		6343227	0					
ANR	6343229	CompoundStatement		655:64:16000:16131	6343227	0					
ANR	6343230	IdentifierDeclStatement	STypeInfo * t = ( STypeInfo * ) type ;	656:1:16003:16036	6343227	0	True				
ANR	6343231	IdentifierDecl	* t = ( STypeInfo * ) type		6343227	0					
ANR	6343232	IdentifierDeclType	STypeInfo *		6343227	0					
ANR	6343233	Identifier	t		6343227	1					
ANR	6343234	AssignmentExpression	* t = ( STypeInfo * ) type		6343227	2		=			
ANR	6343235	Identifier	t		6343227	0					
ANR	6343236	CastExpression	( STypeInfo * ) type		6343227	1					
ANR	6343237	CastTarget	STypeInfo *		6343227	0					
ANR	6343238	Identifier	type		6343227	1					
ANR	6343239	IdentifierDeclStatement	SLF_STRUCTURE * lf = ( SLF_STRUCTURE * ) t -> type_info ;	657:1:16039:16088	6343227	1	True				
ANR	6343240	IdentifierDecl	* lf = ( SLF_STRUCTURE * ) t -> type_info		6343227	0					
ANR	6343241	IdentifierDeclType	SLF_STRUCTURE *		6343227	0					
ANR	6343242	Identifier	lf		6343227	1					
ANR	6343243	AssignmentExpression	* lf = ( SLF_STRUCTURE * ) t -> type_info		6343227	2		=			
ANR	6343244	Identifier	lf		6343227	0					
ANR	6343245	CastExpression	( SLF_STRUCTURE * ) t -> type_info		6343227	1					
ANR	6343246	CastTarget	SLF_STRUCTURE *		6343227	0					
ANR	6343247	PtrMemberAccess	t -> type_info		6343227	1					
ANR	6343248	Identifier	t		6343227	0					
ANR	6343249	Identifier	type_info		6343227	1					
ANR	6343250	ExpressionStatement	"get_sval_name_len ( & lf -> size , res_len )"	659:1:16092:16129	6343227	2	True				
ANR	6343251	CallExpression	"get_sval_name_len ( & lf -> size , res_len )"		6343227	0					
ANR	6343252	Callee	get_sval_name_len		6343227	0					
ANR	6343253	Identifier	get_sval_name_len		6343227	0					
ANR	6343254	ArgumentList	& lf -> size		6343227	1					
ANR	6343255	Argument	& lf -> size		6343227	0					
ANR	6343256	UnaryOperationExpression	& lf -> size		6343227	0					
ANR	6343257	UnaryOperator	&		6343227	0					
ANR	6343258	PtrMemberAccess	lf -> size		6343227	1					
ANR	6343259	Identifier	lf		6343227	0					
ANR	6343260	Identifier	size		6343227	1					
ANR	6343261	Argument	res_len		6343227	1					
ANR	6343262	Identifier	res_len		6343227	0					
ANR	6343263	ReturnType	static void		6343227	1					
ANR	6343264	Identifier	get_class_struct_name_len		6343227	2					
ANR	6343265	ParameterList	"void * type , int * res_len"		6343227	3					
ANR	6343266	Parameter	void * type	655:38:15974:15983	6343227	0	True				
ANR	6343267	ParameterType	void *		6343227	0					
ANR	6343268	Identifier	type		6343227	1					
ANR	6343269	Parameter	int * res_len	655:50:15986:15997	6343227	1	True				
ANR	6343270	ParameterType	int *		6343227	0					
ANR	6343271	Identifier	res_len		6343227	1					
ANR	6343272	CFGEntryNode	ENTRY		6343227		True				
ANR	6343273	CFGExitNode	EXIT		6343227		True				
ANR	6343274	Symbol	t		6343227						
ANR	6343275	Symbol	res_len		6343227						
ANR	6343276	Symbol	lf		6343227						
ANR	6343277	Symbol	t -> type_info		6343227						
ANR	6343278	Symbol	type		6343227						
ANR	6343279	Symbol	& lf -> size		6343227						
ANR	6343280	Symbol	* t		6343227						
ANR	6343281	Function	get_array_name_len	662:0:16134:16327							
ANR	6343282	FunctionDef	"get_array_name_len (void * type , int * res_len)"		6343281	0					
ANR	6343283	CompoundStatement		662:57:16191:16327	6343281	0					
ANR	6343284	IdentifierDeclStatement	STypeInfo * t = ( STypeInfo * ) type ;	663:1:16194:16227	6343281	0	True				
ANR	6343285	IdentifierDecl	* t = ( STypeInfo * ) type		6343281	0					
ANR	6343286	IdentifierDeclType	STypeInfo *		6343281	0					
ANR	6343287	Identifier	t		6343281	1					
ANR	6343288	AssignmentExpression	* t = ( STypeInfo * ) type		6343281	2		=			
ANR	6343289	Identifier	t		6343281	0					
ANR	6343290	CastExpression	( STypeInfo * ) type		6343281	1					
ANR	6343291	CastTarget	STypeInfo *		6343281	0					
ANR	6343292	Identifier	type		6343281	1					
ANR	6343293	IdentifierDeclStatement	SLF_ARRAY * lf_array = ( SLF_ARRAY * ) t -> type_info ;	664:1:16230:16278	6343281	1	True				
ANR	6343294	IdentifierDecl	* lf_array = ( SLF_ARRAY * ) t -> type_info		6343281	0					
ANR	6343295	IdentifierDeclType	SLF_ARRAY *		6343281	0					
ANR	6343296	Identifier	lf_array		6343281	1					
ANR	6343297	AssignmentExpression	* lf_array = ( SLF_ARRAY * ) t -> type_info		6343281	2		=			
ANR	6343298	Identifier	lf_array		6343281	0					
ANR	6343299	CastExpression	( SLF_ARRAY * ) t -> type_info		6343281	1					
ANR	6343300	CastTarget	SLF_ARRAY *		6343281	0					
ANR	6343301	PtrMemberAccess	t -> type_info		6343281	1					
ANR	6343302	Identifier	t		6343281	0					
ANR	6343303	Identifier	type_info		6343281	1					
ANR	6343304	ExpressionStatement	"get_sval_name_len ( & lf_array -> size , res_len )"	666:1:16282:16325	6343281	2	True				
ANR	6343305	CallExpression	"get_sval_name_len ( & lf_array -> size , res_len )"		6343281	0					
ANR	6343306	Callee	get_sval_name_len		6343281	0					
ANR	6343307	Identifier	get_sval_name_len		6343281	0					
ANR	6343308	ArgumentList	& lf_array -> size		6343281	1					
ANR	6343309	Argument	& lf_array -> size		6343281	0					
ANR	6343310	UnaryOperationExpression	& lf_array -> size		6343281	0					
ANR	6343311	UnaryOperator	&		6343281	0					
ANR	6343312	PtrMemberAccess	lf_array -> size		6343281	1					
ANR	6343313	Identifier	lf_array		6343281	0					
ANR	6343314	Identifier	size		6343281	1					
ANR	6343315	Argument	res_len		6343281	1					
ANR	6343316	Identifier	res_len		6343281	0					
ANR	6343317	ReturnType	static void		6343281	1					
ANR	6343318	Identifier	get_array_name_len		6343281	2					
ANR	6343319	ParameterList	"void * type , int * res_len"		6343281	3					
ANR	6343320	Parameter	void * type	662:31:16165:16174	6343281	0	True				
ANR	6343321	ParameterType	void *		6343281	0					
ANR	6343322	Identifier	type		6343281	1					
ANR	6343323	Parameter	int * res_len	662:43:16177:16188	6343281	1	True				
ANR	6343324	ParameterType	int *		6343281	0					
ANR	6343325	Identifier	res_len		6343281	1					
ANR	6343326	CFGEntryNode	ENTRY		6343281		True				
ANR	6343327	CFGExitNode	EXIT		6343281		True				
ANR	6343328	Symbol	& lf_array -> size		6343281						
ANR	6343329	Symbol	t		6343281						
ANR	6343330	Symbol	res_len		6343281						
ANR	6343331	Symbol	lf_array		6343281						
ANR	6343332	Symbol	t -> type_info		6343281						
ANR	6343333	Symbol	type		6343281						
ANR	6343334	Symbol	* t		6343281						
ANR	6343335	Function	get_union_name_len	669:0:16330:16523							
ANR	6343336	FunctionDef	"get_union_name_len (void * type , int * res_len)"		6343335	0					
ANR	6343337	CompoundStatement		669:57:16387:16523	6343335	0					
ANR	6343338	IdentifierDeclStatement	STypeInfo * t = ( STypeInfo * ) type ;	670:1:16390:16423	6343335	0	True				
ANR	6343339	IdentifierDecl	* t = ( STypeInfo * ) type		6343335	0					
ANR	6343340	IdentifierDeclType	STypeInfo *		6343335	0					
ANR	6343341	Identifier	t		6343335	1					
ANR	6343342	AssignmentExpression	* t = ( STypeInfo * ) type		6343335	2		=			
ANR	6343343	Identifier	t		6343335	0					
ANR	6343344	CastExpression	( STypeInfo * ) type		6343335	1					
ANR	6343345	CastTarget	STypeInfo *		6343335	0					
ANR	6343346	Identifier	type		6343335	1					
ANR	6343347	IdentifierDeclStatement	SLF_UNION * lf_union = ( SLF_UNION * ) t -> type_info ;	671:1:16426:16474	6343335	1	True				
ANR	6343348	IdentifierDecl	* lf_union = ( SLF_UNION * ) t -> type_info		6343335	0					
ANR	6343349	IdentifierDeclType	SLF_UNION *		6343335	0					
ANR	6343350	Identifier	lf_union		6343335	1					
ANR	6343351	AssignmentExpression	* lf_union = ( SLF_UNION * ) t -> type_info		6343335	2		=			
ANR	6343352	Identifier	lf_union		6343335	0					
ANR	6343353	CastExpression	( SLF_UNION * ) t -> type_info		6343335	1					
ANR	6343354	CastTarget	SLF_UNION *		6343335	0					
ANR	6343355	PtrMemberAccess	t -> type_info		6343335	1					
ANR	6343356	Identifier	t		6343335	0					
ANR	6343357	Identifier	type_info		6343335	1					
ANR	6343358	ExpressionStatement	"get_sval_name_len ( & lf_union -> size , res_len )"	673:1:16478:16521	6343335	2	True				
ANR	6343359	CallExpression	"get_sval_name_len ( & lf_union -> size , res_len )"		6343335	0					
ANR	6343360	Callee	get_sval_name_len		6343335	0					
ANR	6343361	Identifier	get_sval_name_len		6343335	0					
ANR	6343362	ArgumentList	& lf_union -> size		6343335	1					
ANR	6343363	Argument	& lf_union -> size		6343335	0					
ANR	6343364	UnaryOperationExpression	& lf_union -> size		6343335	0					
ANR	6343365	UnaryOperator	&		6343335	0					
ANR	6343366	PtrMemberAccess	lf_union -> size		6343335	1					
ANR	6343367	Identifier	lf_union		6343335	0					
ANR	6343368	Identifier	size		6343335	1					
ANR	6343369	Argument	res_len		6343335	1					
ANR	6343370	Identifier	res_len		6343335	0					
ANR	6343371	ReturnType	static void		6343335	1					
ANR	6343372	Identifier	get_union_name_len		6343335	2					
ANR	6343373	ParameterList	"void * type , int * res_len"		6343335	3					
ANR	6343374	Parameter	void * type	669:31:16361:16370	6343335	0	True				
ANR	6343375	ParameterType	void *		6343335	0					
ANR	6343376	Identifier	type		6343335	1					
ANR	6343377	Parameter	int * res_len	669:43:16373:16384	6343335	1	True				
ANR	6343378	ParameterType	int *		6343335	0					
ANR	6343379	Identifier	res_len		6343335	1					
ANR	6343380	CFGEntryNode	ENTRY		6343335		True				
ANR	6343381	CFGExitNode	EXIT		6343335		True				
ANR	6343382	Symbol	lf_union		6343335						
ANR	6343383	Symbol	t		6343335						
ANR	6343384	Symbol	res_len		6343335						
ANR	6343385	Symbol	& lf_union -> size		6343335						
ANR	6343386	Symbol	t -> type_info		6343335						
ANR	6343387	Symbol	type		6343335						
ANR	6343388	Symbol	* t		6343335						
ANR	6343389	Function	get_enumerate_name_len	676:0:16526:16724							
ANR	6343390	FunctionDef	"get_enumerate_name_len (void * type , int * res_len)"		6343389	0					
ANR	6343391	CompoundStatement		676:61:16587:16724	6343389	0					
ANR	6343392	IdentifierDeclStatement	STypeInfo * t = ( STypeInfo * ) type ;	677:1:16590:16623	6343389	0	True				
ANR	6343393	IdentifierDecl	* t = ( STypeInfo * ) type		6343389	0					
ANR	6343394	IdentifierDeclType	STypeInfo *		6343389	0					
ANR	6343395	Identifier	t		6343389	1					
ANR	6343396	AssignmentExpression	* t = ( STypeInfo * ) type		6343389	2		=			
ANR	6343397	Identifier	t		6343389	0					
ANR	6343398	CastExpression	( STypeInfo * ) type		6343389	1					
ANR	6343399	CastTarget	STypeInfo *		6343389	0					
ANR	6343400	Identifier	type		6343389	1					
ANR	6343401	IdentifierDeclStatement	SLF_ENUMERATE * lf = ( SLF_ENUMERATE * ) t -> type_info ;	678:1:16626:16675	6343389	1	True				
ANR	6343402	IdentifierDecl	* lf = ( SLF_ENUMERATE * ) t -> type_info		6343389	0					
ANR	6343403	IdentifierDeclType	SLF_ENUMERATE *		6343389	0					
ANR	6343404	Identifier	lf		6343389	1					
ANR	6343405	AssignmentExpression	* lf = ( SLF_ENUMERATE * ) t -> type_info		6343389	2		=			
ANR	6343406	Identifier	lf		6343389	0					
ANR	6343407	CastExpression	( SLF_ENUMERATE * ) t -> type_info		6343389	1					
ANR	6343408	CastTarget	SLF_ENUMERATE *		6343389	0					
ANR	6343409	PtrMemberAccess	t -> type_info		6343389	1					
ANR	6343410	Identifier	t		6343389	0					
ANR	6343411	Identifier	type_info		6343389	1					
ANR	6343412	ExpressionStatement	"get_sval_name_len ( & lf -> enum_value , res_len )"	680:1:16679:16722	6343389	2	True				
ANR	6343413	CallExpression	"get_sval_name_len ( & lf -> enum_value , res_len )"		6343389	0					
ANR	6343414	Callee	get_sval_name_len		6343389	0					
ANR	6343415	Identifier	get_sval_name_len		6343389	0					
ANR	6343416	ArgumentList	& lf -> enum_value		6343389	1					
ANR	6343417	Argument	& lf -> enum_value		6343389	0					
ANR	6343418	UnaryOperationExpression	& lf -> enum_value		6343389	0					
ANR	6343419	UnaryOperator	&		6343389	0					
ANR	6343420	PtrMemberAccess	lf -> enum_value		6343389	1					
ANR	6343421	Identifier	lf		6343389	0					
ANR	6343422	Identifier	enum_value		6343389	1					
ANR	6343423	Argument	res_len		6343389	1					
ANR	6343424	Identifier	res_len		6343389	0					
ANR	6343425	ReturnType	static void		6343389	1					
ANR	6343426	Identifier	get_enumerate_name_len		6343389	2					
ANR	6343427	ParameterList	"void * type , int * res_len"		6343389	3					
ANR	6343428	Parameter	void * type	676:35:16561:16570	6343389	0	True				
ANR	6343429	ParameterType	void *		6343389	0					
ANR	6343430	Identifier	type		6343389	1					
ANR	6343431	Parameter	int * res_len	676:47:16573:16584	6343389	1	True				
ANR	6343432	ParameterType	int *		6343389	0					
ANR	6343433	Identifier	res_len		6343389	1					
ANR	6343434	CFGEntryNode	ENTRY		6343389		True				
ANR	6343435	CFGExitNode	EXIT		6343389		True				
ANR	6343436	Symbol	t		6343389						
ANR	6343437	Symbol	& lf -> enum_value		6343389						
ANR	6343438	Symbol	res_len		6343389						
ANR	6343439	Symbol	lf		6343389						
ANR	6343440	Symbol	t -> type_info		6343389						
ANR	6343441	Symbol	type		6343389						
ANR	6343442	Symbol	* t		6343389						
ANR	6343443	Function	get_nesttype_name_len	683:0:16727:16895							
ANR	6343444	FunctionDef	"get_nesttype_name_len (void * type , int * res)"		6343443	0					
ANR	6343445	CompoundStatement		683:56:16783:16895	6343443	0					
ANR	6343446	IdentifierDeclStatement	STypeInfo * t = ( STypeInfo * ) type ;	684:1:16786:16819	6343443	0	True				
ANR	6343447	IdentifierDecl	* t = ( STypeInfo * ) type		6343443	0					
ANR	6343448	IdentifierDeclType	STypeInfo *		6343443	0					
ANR	6343449	Identifier	t		6343443	1					
ANR	6343450	AssignmentExpression	* t = ( STypeInfo * ) type		6343443	2		=			
ANR	6343451	Identifier	t		6343443	0					
ANR	6343452	CastExpression	( STypeInfo * ) type		6343443	1					
ANR	6343453	CastTarget	STypeInfo *		6343443	0					
ANR	6343454	Identifier	type		6343443	1					
ANR	6343455	IdentifierDeclStatement	SLF_NESTTYPE * lf = ( SLF_NESTTYPE * ) t -> type_info ;	685:1:16822:16869	6343443	1	True				
ANR	6343456	IdentifierDecl	* lf = ( SLF_NESTTYPE * ) t -> type_info		6343443	0					
ANR	6343457	IdentifierDeclType	SLF_NESTTYPE *		6343443	0					
ANR	6343458	Identifier	lf		6343443	1					
ANR	6343459	AssignmentExpression	* lf = ( SLF_NESTTYPE * ) t -> type_info		6343443	2		=			
ANR	6343460	Identifier	lf		6343443	0					
ANR	6343461	CastExpression	( SLF_NESTTYPE * ) t -> type_info		6343443	1					
ANR	6343462	CastTarget	SLF_NESTTYPE *		6343443	0					
ANR	6343463	PtrMemberAccess	t -> type_info		6343443	1					
ANR	6343464	Identifier	t		6343443	0					
ANR	6343465	Identifier	type_info		6343443	1					
ANR	6343466	ExpressionStatement	* res = lf -> name . size	687:1:16873:16893	6343443	2	True				
ANR	6343467	AssignmentExpression	* res = lf -> name . size		6343443	0		=			
ANR	6343468	UnaryOperationExpression	* res		6343443	0					
ANR	6343469	UnaryOperator	*		6343443	0					
ANR	6343470	Identifier	res		6343443	1					
ANR	6343471	MemberAccess	lf -> name . size		6343443	1					
ANR	6343472	PtrMemberAccess	lf -> name		6343443	0					
ANR	6343473	Identifier	lf		6343443	0					
ANR	6343474	Identifier	name		6343443	1					
ANR	6343475	Identifier	size		6343443	1					
ANR	6343476	ReturnType	static void		6343443	1					
ANR	6343477	Identifier	get_nesttype_name_len		6343443	2					
ANR	6343478	ParameterList	"void * type , int * res"		6343443	3					
ANR	6343479	Parameter	void * type	683:34:16761:16770	6343443	0	True				
ANR	6343480	ParameterType	void *		6343443	0					
ANR	6343481	Identifier	type		6343443	1					
ANR	6343482	Parameter	int * res	683:46:16773:16780	6343443	1	True				
ANR	6343483	ParameterType	int *		6343443	0					
ANR	6343484	Identifier	res		6343443	1					
ANR	6343485	CFGEntryNode	ENTRY		6343443		True				
ANR	6343486	CFGExitNode	EXIT		6343443		True				
ANR	6343487	Symbol	res		6343443						
ANR	6343488	Symbol	* lf		6343443						
ANR	6343489	Symbol	t		6343443						
ANR	6343490	Symbol	lf -> name		6343443						
ANR	6343491	Symbol	lf		6343443						
ANR	6343492	Symbol	* res		6343443						
ANR	6343493	Symbol	t -> type_info		6343443						
ANR	6343494	Symbol	type		6343443						
ANR	6343495	Symbol	lf -> name . size		6343443						
ANR	6343496	Symbol	* t		6343443						
ANR	6343497	Function	get_method_name_len	690:0:16898:17060							
ANR	6343498	FunctionDef	"get_method_name_len (void * type , int * res)"		6343497	0					
ANR	6343499	CompoundStatement		690:54:16952:17060	6343497	0					
ANR	6343500	IdentifierDeclStatement	STypeInfo * t = ( STypeInfo * ) type ;	691:1:16955:16988	6343497	0	True				
ANR	6343501	IdentifierDecl	* t = ( STypeInfo * ) type		6343497	0					
ANR	6343502	IdentifierDeclType	STypeInfo *		6343497	0					
ANR	6343503	Identifier	t		6343497	1					
ANR	6343504	AssignmentExpression	* t = ( STypeInfo * ) type		6343497	2		=			
ANR	6343505	Identifier	t		6343497	0					
ANR	6343506	CastExpression	( STypeInfo * ) type		6343497	1					
ANR	6343507	CastTarget	STypeInfo *		6343497	0					
ANR	6343508	Identifier	type		6343497	1					
ANR	6343509	IdentifierDeclStatement	SLF_METHOD * lf = ( SLF_METHOD * ) t -> type_info ;	692:1:16991:17034	6343497	1	True				
ANR	6343510	IdentifierDecl	* lf = ( SLF_METHOD * ) t -> type_info		6343497	0					
ANR	6343511	IdentifierDeclType	SLF_METHOD *		6343497	0					
ANR	6343512	Identifier	lf		6343497	1					
ANR	6343513	AssignmentExpression	* lf = ( SLF_METHOD * ) t -> type_info		6343497	2		=			
ANR	6343514	Identifier	lf		6343497	0					
ANR	6343515	CastExpression	( SLF_METHOD * ) t -> type_info		6343497	1					
ANR	6343516	CastTarget	SLF_METHOD *		6343497	0					
ANR	6343517	PtrMemberAccess	t -> type_info		6343497	1					
ANR	6343518	Identifier	t		6343497	0					
ANR	6343519	Identifier	type_info		6343497	1					
ANR	6343520	ExpressionStatement	* res = lf -> name . size	694:1:17038:17058	6343497	2	True				
ANR	6343521	AssignmentExpression	* res = lf -> name . size		6343497	0		=			
ANR	6343522	UnaryOperationExpression	* res		6343497	0					
ANR	6343523	UnaryOperator	*		6343497	0					
ANR	6343524	Identifier	res		6343497	1					
ANR	6343525	MemberAccess	lf -> name . size		6343497	1					
ANR	6343526	PtrMemberAccess	lf -> name		6343497	0					
ANR	6343527	Identifier	lf		6343497	0					
ANR	6343528	Identifier	name		6343497	1					
ANR	6343529	Identifier	size		6343497	1					
ANR	6343530	ReturnType	static void		6343497	1					
ANR	6343531	Identifier	get_method_name_len		6343497	2					
ANR	6343532	ParameterList	"void * type , int * res"		6343497	3					
ANR	6343533	Parameter	void * type	690:32:16930:16939	6343497	0	True				
ANR	6343534	ParameterType	void *		6343497	0					
ANR	6343535	Identifier	type		6343497	1					
ANR	6343536	Parameter	int * res	690:44:16942:16949	6343497	1	True				
ANR	6343537	ParameterType	int *		6343497	0					
ANR	6343538	Identifier	res		6343497	1					
ANR	6343539	CFGEntryNode	ENTRY		6343497		True				
ANR	6343540	CFGExitNode	EXIT		6343497		True				
ANR	6343541	Symbol	res		6343497						
ANR	6343542	Symbol	* lf		6343497						
ANR	6343543	Symbol	t		6343497						
ANR	6343544	Symbol	lf -> name		6343497						
ANR	6343545	Symbol	lf		6343497						
ANR	6343546	Symbol	* res		6343497						
ANR	6343547	Symbol	t -> type_info		6343497						
ANR	6343548	Symbol	type		6343497						
ANR	6343549	Symbol	lf -> name . size		6343497						
ANR	6343550	Symbol	* t		6343497						
ANR	6343551	Function	get_member_name_len	697:0:17063:17240							
ANR	6343552	FunctionDef	"get_member_name_len (void * type , int * res)"		6343551	0					
ANR	6343553	CompoundStatement		697:54:17117:17240	6343551	0					
ANR	6343554	IdentifierDeclStatement	STypeInfo * t = ( STypeInfo * ) type ;	698:1:17120:17153	6343551	0	True				
ANR	6343555	IdentifierDecl	* t = ( STypeInfo * ) type		6343551	0					
ANR	6343556	IdentifierDeclType	STypeInfo *		6343551	0					
ANR	6343557	Identifier	t		6343551	1					
ANR	6343558	AssignmentExpression	* t = ( STypeInfo * ) type		6343551	2		=			
ANR	6343559	Identifier	t		6343551	0					
ANR	6343560	CastExpression	( STypeInfo * ) type		6343551	1					
ANR	6343561	CastTarget	STypeInfo *		6343551	0					
ANR	6343562	Identifier	type		6343551	1					
ANR	6343563	IdentifierDeclStatement	SLF_MEMBER * lf = ( SLF_MEMBER * ) t -> type_info ;	699:1:17156:17199	6343551	1	True				
ANR	6343564	IdentifierDecl	* lf = ( SLF_MEMBER * ) t -> type_info		6343551	0					
ANR	6343565	IdentifierDeclType	SLF_MEMBER *		6343551	0					
ANR	6343566	Identifier	lf		6343551	1					
ANR	6343567	AssignmentExpression	* lf = ( SLF_MEMBER * ) t -> type_info		6343551	2		=			
ANR	6343568	Identifier	lf		6343551	0					
ANR	6343569	CastExpression	( SLF_MEMBER * ) t -> type_info		6343551	1					
ANR	6343570	CastTarget	SLF_MEMBER *		6343551	0					
ANR	6343571	PtrMemberAccess	t -> type_info		6343551	1					
ANR	6343572	Identifier	t		6343551	0					
ANR	6343573	Identifier	type_info		6343551	1					
ANR	6343574	ExpressionStatement	"get_sval_name_len ( & lf -> offset , res )"	701:1:17203:17238	6343551	2	True				
ANR	6343575	CallExpression	"get_sval_name_len ( & lf -> offset , res )"		6343551	0					
ANR	6343576	Callee	get_sval_name_len		6343551	0					
ANR	6343577	Identifier	get_sval_name_len		6343551	0					
ANR	6343578	ArgumentList	& lf -> offset		6343551	1					
ANR	6343579	Argument	& lf -> offset		6343551	0					
ANR	6343580	UnaryOperationExpression	& lf -> offset		6343551	0					
ANR	6343581	UnaryOperator	&		6343551	0					
ANR	6343582	PtrMemberAccess	lf -> offset		6343551	1					
ANR	6343583	Identifier	lf		6343551	0					
ANR	6343584	Identifier	offset		6343551	1					
ANR	6343585	Argument	res		6343551	1					
ANR	6343586	Identifier	res		6343551	0					
ANR	6343587	ReturnType	static void		6343551	1					
ANR	6343588	Identifier	get_member_name_len		6343551	2					
ANR	6343589	ParameterList	"void * type , int * res"		6343551	3					
ANR	6343590	Parameter	void * type	697:32:17095:17104	6343551	0	True				
ANR	6343591	ParameterType	void *		6343551	0					
ANR	6343592	Identifier	type		6343551	1					
ANR	6343593	Parameter	int * res	697:44:17107:17114	6343551	1	True				
ANR	6343594	ParameterType	int *		6343551	0					
ANR	6343595	Identifier	res		6343551	1					
ANR	6343596	CFGEntryNode	ENTRY		6343551		True				
ANR	6343597	CFGExitNode	EXIT		6343551		True				
ANR	6343598	Symbol	res		6343551						
ANR	6343599	Symbol	t		6343551						
ANR	6343600	Symbol	lf		6343551						
ANR	6343601	Symbol	t -> type_info		6343551						
ANR	6343602	Symbol	type		6343551						
ANR	6343603	Symbol	& lf -> offset		6343551						
ANR	6343604	Symbol	* t		6343551						
ANR	6343605	Function	get_member_name	704:0:17243:17416							
ANR	6343606	FunctionDef	"get_member_name (void * type , char * * name)"		6343605	0					
ANR	6343607	CompoundStatement		704:53:17296:17416	6343605	0					
ANR	6343608	IdentifierDeclStatement	STypeInfo * t = ( STypeInfo * ) type ;	705:1:17299:17332	6343605	0	True				
ANR	6343609	IdentifierDecl	* t = ( STypeInfo * ) type		6343605	0					
ANR	6343610	IdentifierDeclType	STypeInfo *		6343605	0					
ANR	6343611	Identifier	t		6343605	1					
ANR	6343612	AssignmentExpression	* t = ( STypeInfo * ) type		6343605	2		=			
ANR	6343613	Identifier	t		6343605	0					
ANR	6343614	CastExpression	( STypeInfo * ) type		6343605	1					
ANR	6343615	CastTarget	STypeInfo *		6343605	0					
ANR	6343616	Identifier	type		6343605	1					
ANR	6343617	IdentifierDeclStatement	SLF_MEMBER * lf = ( SLF_MEMBER * ) t -> type_info ;	706:1:17335:17378	6343605	1	True				
ANR	6343618	IdentifierDecl	* lf = ( SLF_MEMBER * ) t -> type_info		6343605	0					
ANR	6343619	IdentifierDeclType	SLF_MEMBER *		6343605	0					
ANR	6343620	Identifier	lf		6343605	1					
ANR	6343621	AssignmentExpression	* lf = ( SLF_MEMBER * ) t -> type_info		6343605	2		=			
ANR	6343622	Identifier	lf		6343605	0					
ANR	6343623	CastExpression	( SLF_MEMBER * ) t -> type_info		6343605	1					
ANR	6343624	CastTarget	SLF_MEMBER *		6343605	0					
ANR	6343625	PtrMemberAccess	t -> type_info		6343605	1					
ANR	6343626	Identifier	t		6343605	0					
ANR	6343627	Identifier	type_info		6343605	1					
ANR	6343628	ExpressionStatement	"get_sval_name ( & lf -> offset , name )"	708:1:17382:17414	6343605	2	True				
ANR	6343629	CallExpression	"get_sval_name ( & lf -> offset , name )"		6343605	0					
ANR	6343630	Callee	get_sval_name		6343605	0					
ANR	6343631	Identifier	get_sval_name		6343605	0					
ANR	6343632	ArgumentList	& lf -> offset		6343605	1					
ANR	6343633	Argument	& lf -> offset		6343605	0					
ANR	6343634	UnaryOperationExpression	& lf -> offset		6343605	0					
ANR	6343635	UnaryOperator	&		6343605	0					
ANR	6343636	PtrMemberAccess	lf -> offset		6343605	1					
ANR	6343637	Identifier	lf		6343605	0					
ANR	6343638	Identifier	offset		6343605	1					
ANR	6343639	Argument	name		6343605	1					
ANR	6343640	Identifier	name		6343605	0					
ANR	6343641	ReturnType	static void		6343605	1					
ANR	6343642	Identifier	get_member_name		6343605	2					
ANR	6343643	ParameterList	"void * type , char * * name"		6343605	3					
ANR	6343644	Parameter	void * type	704:28:17271:17280	6343605	0	True				
ANR	6343645	ParameterType	void *		6343605	0					
ANR	6343646	Identifier	type		6343605	1					
ANR	6343647	Parameter	char * * name	704:40:17283:17293	6343605	1	True				
ANR	6343648	ParameterType	char * *		6343605	0					
ANR	6343649	Identifier	name		6343605	1					
ANR	6343650	CFGEntryNode	ENTRY		6343605		True				
ANR	6343651	CFGExitNode	EXIT		6343605		True				
ANR	6343652	Symbol	t		6343605						
ANR	6343653	Symbol	name		6343605						
ANR	6343654	Symbol	lf		6343605						
ANR	6343655	Symbol	t -> type_info		6343605						
ANR	6343656	Symbol	type		6343605						
ANR	6343657	Symbol	& lf -> offset		6343605						
ANR	6343658	Symbol	* t		6343605						
ANR	6343659	Function	get_onemethod_name	711:0:17419:17598							
ANR	6343660	FunctionDef	"get_onemethod_name (void * type , char * * name)"		6343659	0					
ANR	6343661	CompoundStatement		711:56:17475:17598	6343659	0					
ANR	6343662	IdentifierDeclStatement	STypeInfo * t = ( STypeInfo * ) type ;	712:1:17478:17511	6343659	0	True				
ANR	6343663	IdentifierDecl	* t = ( STypeInfo * ) type		6343659	0					
ANR	6343664	IdentifierDeclType	STypeInfo *		6343659	0					
ANR	6343665	Identifier	t		6343659	1					
ANR	6343666	AssignmentExpression	* t = ( STypeInfo * ) type		6343659	2		=			
ANR	6343667	Identifier	t		6343659	0					
ANR	6343668	CastExpression	( STypeInfo * ) type		6343659	1					
ANR	6343669	CastTarget	STypeInfo *		6343659	0					
ANR	6343670	Identifier	type		6343659	1					
ANR	6343671	IdentifierDeclStatement	SLF_ONEMETHOD * lf = ( SLF_ONEMETHOD * ) t -> type_info ;	713:1:17514:17563	6343659	1	True				
ANR	6343672	IdentifierDecl	* lf = ( SLF_ONEMETHOD * ) t -> type_info		6343659	0					
ANR	6343673	IdentifierDeclType	SLF_ONEMETHOD *		6343659	0					
ANR	6343674	Identifier	lf		6343659	1					
ANR	6343675	AssignmentExpression	* lf = ( SLF_ONEMETHOD * ) t -> type_info		6343659	2		=			
ANR	6343676	Identifier	lf		6343659	0					
ANR	6343677	CastExpression	( SLF_ONEMETHOD * ) t -> type_info		6343659	1					
ANR	6343678	CastTarget	SLF_ONEMETHOD *		6343659	0					
ANR	6343679	PtrMemberAccess	t -> type_info		6343659	1					
ANR	6343680	Identifier	t		6343659	0					
ANR	6343681	Identifier	type_info		6343659	1					
ANR	6343682	ExpressionStatement	* name = lf -> val . str_data . name	715:1:17567:17596	6343659	2	True				
ANR	6343683	AssignmentExpression	* name = lf -> val . str_data . name		6343659	0		=			
ANR	6343684	UnaryOperationExpression	* name		6343659	0					
ANR	6343685	UnaryOperator	*		6343659	0					
ANR	6343686	Identifier	name		6343659	1					
ANR	6343687	MemberAccess	lf -> val . str_data . name		6343659	1					
ANR	6343688	MemberAccess	lf -> val . str_data		6343659	0					
ANR	6343689	PtrMemberAccess	lf -> val		6343659	0					
ANR	6343690	Identifier	lf		6343659	0					
ANR	6343691	Identifier	val		6343659	1					
ANR	6343692	Identifier	str_data		6343659	1					
ANR	6343693	Identifier	name		6343659	1					
ANR	6343694	ReturnType	static void		6343659	1					
ANR	6343695	Identifier	get_onemethod_name		6343659	2					
ANR	6343696	ParameterList	"void * type , char * * name"		6343659	3					
ANR	6343697	Parameter	void * type	711:31:17450:17459	6343659	0	True				
ANR	6343698	ParameterType	void *		6343659	0					
ANR	6343699	Identifier	type		6343659	1					
ANR	6343700	Parameter	char * * name	711:43:17462:17472	6343659	1	True				
ANR	6343701	ParameterType	char * *		6343659	0					
ANR	6343702	Identifier	name		6343659	1					
ANR	6343703	CFGEntryNode	ENTRY		6343659		True				
ANR	6343704	CFGExitNode	EXIT		6343659		True				
ANR	6343705	Symbol	* name		6343659						
ANR	6343706	Symbol	* lf		6343659						
ANR	6343707	Symbol	t		6343659						
ANR	6343708	Symbol	lf -> val . str_data		6343659						
ANR	6343709	Symbol	name		6343659						
ANR	6343710	Symbol	lf		6343659						
ANR	6343711	Symbol	lf -> val		6343659						
ANR	6343712	Symbol	t -> type_info		6343659						
ANR	6343713	Symbol	type		6343659						
ANR	6343714	Symbol	lf -> val . str_data . name		6343659						
ANR	6343715	Symbol	* t		6343659						
ANR	6343716	Function	get_method_name	718:0:17601:17763							
ANR	6343717	FunctionDef	"get_method_name (void * type , char * * name)"		6343716	0					
ANR	6343718	CompoundStatement		718:53:17654:17763	6343716	0					
ANR	6343719	IdentifierDeclStatement	STypeInfo * t = ( STypeInfo * ) type ;	719:1:17657:17690	6343716	0	True				
ANR	6343720	IdentifierDecl	* t = ( STypeInfo * ) type		6343716	0					
ANR	6343721	IdentifierDeclType	STypeInfo *		6343716	0					
ANR	6343722	Identifier	t		6343716	1					
ANR	6343723	AssignmentExpression	* t = ( STypeInfo * ) type		6343716	2		=			
ANR	6343724	Identifier	t		6343716	0					
ANR	6343725	CastExpression	( STypeInfo * ) type		6343716	1					
ANR	6343726	CastTarget	STypeInfo *		6343716	0					
ANR	6343727	Identifier	type		6343716	1					
ANR	6343728	IdentifierDeclStatement	SLF_METHOD * lf = ( SLF_METHOD * ) t -> type_info ;	720:1:17693:17736	6343716	1	True				
ANR	6343729	IdentifierDecl	* lf = ( SLF_METHOD * ) t -> type_info		6343716	0					
ANR	6343730	IdentifierDeclType	SLF_METHOD *		6343716	0					
ANR	6343731	Identifier	lf		6343716	1					
ANR	6343732	AssignmentExpression	* lf = ( SLF_METHOD * ) t -> type_info		6343716	2		=			
ANR	6343733	Identifier	lf		6343716	0					
ANR	6343734	CastExpression	( SLF_METHOD * ) t -> type_info		6343716	1					
ANR	6343735	CastTarget	SLF_METHOD *		6343716	0					
ANR	6343736	PtrMemberAccess	t -> type_info		6343716	1					
ANR	6343737	Identifier	t		6343716	0					
ANR	6343738	Identifier	type_info		6343716	1					
ANR	6343739	ExpressionStatement	* name = lf -> name . name	722:1:17740:17761	6343716	2	True				
ANR	6343740	AssignmentExpression	* name = lf -> name . name		6343716	0		=			
ANR	6343741	UnaryOperationExpression	* name		6343716	0					
ANR	6343742	UnaryOperator	*		6343716	0					
ANR	6343743	Identifier	name		6343716	1					
ANR	6343744	MemberAccess	lf -> name . name		6343716	1					
ANR	6343745	PtrMemberAccess	lf -> name		6343716	0					
ANR	6343746	Identifier	lf		6343716	0					
ANR	6343747	Identifier	name		6343716	1					
ANR	6343748	Identifier	name		6343716	1					
ANR	6343749	ReturnType	static void		6343716	1					
ANR	6343750	Identifier	get_method_name		6343716	2					
ANR	6343751	ParameterList	"void * type , char * * name"		6343716	3					
ANR	6343752	Parameter	void * type	718:28:17629:17638	6343716	0	True				
ANR	6343753	ParameterType	void *		6343716	0					
ANR	6343754	Identifier	type		6343716	1					
ANR	6343755	Parameter	char * * name	718:40:17641:17651	6343716	1	True				
ANR	6343756	ParameterType	char * *		6343716	0					
ANR	6343757	Identifier	name		6343716	1					
ANR	6343758	CFGEntryNode	ENTRY		6343716		True				
ANR	6343759	CFGExitNode	EXIT		6343716		True				
ANR	6343760	Symbol	* name		6343716						
ANR	6343761	Symbol	* lf		6343716						
ANR	6343762	Symbol	t		6343716						
ANR	6343763	Symbol	lf -> name		6343716						
ANR	6343764	Symbol	name		6343716						
ANR	6343765	Symbol	lf -> name . name		6343716						
ANR	6343766	Symbol	lf		6343716						
ANR	6343767	Symbol	t -> type_info		6343716						
ANR	6343768	Symbol	type		6343716						
ANR	6343769	Symbol	* t		6343716						
ANR	6343770	Function	get_nesttype_name	725:0:17766:17934							
ANR	6343771	FunctionDef	"get_nesttype_name (void * type , char * * name)"		6343770	0					
ANR	6343772	CompoundStatement		725:55:17821:17934	6343770	0					
ANR	6343773	IdentifierDeclStatement	STypeInfo * t = ( STypeInfo * ) type ;	726:1:17824:17857	6343770	0	True				
ANR	6343774	IdentifierDecl	* t = ( STypeInfo * ) type		6343770	0					
ANR	6343775	IdentifierDeclType	STypeInfo *		6343770	0					
ANR	6343776	Identifier	t		6343770	1					
ANR	6343777	AssignmentExpression	* t = ( STypeInfo * ) type		6343770	2		=			
ANR	6343778	Identifier	t		6343770	0					
ANR	6343779	CastExpression	( STypeInfo * ) type		6343770	1					
ANR	6343780	CastTarget	STypeInfo *		6343770	0					
ANR	6343781	Identifier	type		6343770	1					
ANR	6343782	IdentifierDeclStatement	SLF_NESTTYPE * lf = ( SLF_NESTTYPE * ) t -> type_info ;	727:1:17860:17907	6343770	1	True				
ANR	6343783	IdentifierDecl	* lf = ( SLF_NESTTYPE * ) t -> type_info		6343770	0					
ANR	6343784	IdentifierDeclType	SLF_NESTTYPE *		6343770	0					
ANR	6343785	Identifier	lf		6343770	1					
ANR	6343786	AssignmentExpression	* lf = ( SLF_NESTTYPE * ) t -> type_info		6343770	2		=			
ANR	6343787	Identifier	lf		6343770	0					
ANR	6343788	CastExpression	( SLF_NESTTYPE * ) t -> type_info		6343770	1					
ANR	6343789	CastTarget	SLF_NESTTYPE *		6343770	0					
ANR	6343790	PtrMemberAccess	t -> type_info		6343770	1					
ANR	6343791	Identifier	t		6343770	0					
ANR	6343792	Identifier	type_info		6343770	1					
ANR	6343793	ExpressionStatement	* name = lf -> name . name	729:1:17911:17932	6343770	2	True				
ANR	6343794	AssignmentExpression	* name = lf -> name . name		6343770	0		=			
ANR	6343795	UnaryOperationExpression	* name		6343770	0					
ANR	6343796	UnaryOperator	*		6343770	0					
ANR	6343797	Identifier	name		6343770	1					
ANR	6343798	MemberAccess	lf -> name . name		6343770	1					
ANR	6343799	PtrMemberAccess	lf -> name		6343770	0					
ANR	6343800	Identifier	lf		6343770	0					
ANR	6343801	Identifier	name		6343770	1					
ANR	6343802	Identifier	name		6343770	1					
ANR	6343803	ReturnType	static void		6343770	1					
ANR	6343804	Identifier	get_nesttype_name		6343770	2					
ANR	6343805	ParameterList	"void * type , char * * name"		6343770	3					
ANR	6343806	Parameter	void * type	725:30:17796:17805	6343770	0	True				
ANR	6343807	ParameterType	void *		6343770	0					
ANR	6343808	Identifier	type		6343770	1					
ANR	6343809	Parameter	char * * name	725:42:17808:17818	6343770	1	True				
ANR	6343810	ParameterType	char * *		6343770	0					
ANR	6343811	Identifier	name		6343770	1					
ANR	6343812	CFGEntryNode	ENTRY		6343770		True				
ANR	6343813	CFGExitNode	EXIT		6343770		True				
ANR	6343814	Symbol	* name		6343770						
ANR	6343815	Symbol	* lf		6343770						
ANR	6343816	Symbol	t		6343770						
ANR	6343817	Symbol	lf -> name		6343770						
ANR	6343818	Symbol	name		6343770						
ANR	6343819	Symbol	lf -> name . name		6343770						
ANR	6343820	Symbol	lf		6343770						
ANR	6343821	Symbol	t -> type_info		6343770						
ANR	6343822	Symbol	type		6343770						
ANR	6343823	Symbol	* t		6343770						
ANR	6343824	Function	get_enumerate_name	732:0:17937:18123							
ANR	6343825	FunctionDef	"get_enumerate_name (void * type , char * * name)"		6343824	0					
ANR	6343826	CompoundStatement		732:56:17993:18123	6343824	0					
ANR	6343827	IdentifierDeclStatement	STypeInfo * t = ( STypeInfo * ) type ;	733:1:17996:18029	6343824	0	True				
ANR	6343828	IdentifierDecl	* t = ( STypeInfo * ) type		6343824	0					
ANR	6343829	IdentifierDeclType	STypeInfo *		6343824	0					
ANR	6343830	Identifier	t		6343824	1					
ANR	6343831	AssignmentExpression	* t = ( STypeInfo * ) type		6343824	2		=			
ANR	6343832	Identifier	t		6343824	0					
ANR	6343833	CastExpression	( STypeInfo * ) type		6343824	1					
ANR	6343834	CastTarget	STypeInfo *		6343824	0					
ANR	6343835	Identifier	type		6343824	1					
ANR	6343836	IdentifierDeclStatement	SLF_ENUMERATE * lf = ( SLF_ENUMERATE * ) t -> type_info ;	734:1:18032:18081	6343824	1	True				
ANR	6343837	IdentifierDecl	* lf = ( SLF_ENUMERATE * ) t -> type_info		6343824	0					
ANR	6343838	IdentifierDeclType	SLF_ENUMERATE *		6343824	0					
ANR	6343839	Identifier	lf		6343824	1					
ANR	6343840	AssignmentExpression	* lf = ( SLF_ENUMERATE * ) t -> type_info		6343824	2		=			
ANR	6343841	Identifier	lf		6343824	0					
ANR	6343842	CastExpression	( SLF_ENUMERATE * ) t -> type_info		6343824	1					
ANR	6343843	CastTarget	SLF_ENUMERATE *		6343824	0					
ANR	6343844	PtrMemberAccess	t -> type_info		6343824	1					
ANR	6343845	Identifier	t		6343824	0					
ANR	6343846	Identifier	type_info		6343824	1					
ANR	6343847	ExpressionStatement	"get_sval_name ( & lf -> enum_value , name )"	736:1:18085:18121	6343824	2	True				
ANR	6343848	CallExpression	"get_sval_name ( & lf -> enum_value , name )"		6343824	0					
ANR	6343849	Callee	get_sval_name		6343824	0					
ANR	6343850	Identifier	get_sval_name		6343824	0					
ANR	6343851	ArgumentList	& lf -> enum_value		6343824	1					
ANR	6343852	Argument	& lf -> enum_value		6343824	0					
ANR	6343853	UnaryOperationExpression	& lf -> enum_value		6343824	0					
ANR	6343854	UnaryOperator	&		6343824	0					
ANR	6343855	PtrMemberAccess	lf -> enum_value		6343824	1					
ANR	6343856	Identifier	lf		6343824	0					
ANR	6343857	Identifier	enum_value		6343824	1					
ANR	6343858	Argument	name		6343824	1					
ANR	6343859	Identifier	name		6343824	0					
ANR	6343860	ReturnType	static void		6343824	1					
ANR	6343861	Identifier	get_enumerate_name		6343824	2					
ANR	6343862	ParameterList	"void * type , char * * name"		6343824	3					
ANR	6343863	Parameter	void * type	732:31:17968:17977	6343824	0	True				
ANR	6343864	ParameterType	void *		6343824	0					
ANR	6343865	Identifier	type		6343824	1					
ANR	6343866	Parameter	char * * name	732:43:17980:17990	6343824	1	True				
ANR	6343867	ParameterType	char * *		6343824	0					
ANR	6343868	Identifier	name		6343824	1					
ANR	6343869	CFGEntryNode	ENTRY		6343824		True				
ANR	6343870	CFGExitNode	EXIT		6343824		True				
ANR	6343871	Symbol	t		6343824						
ANR	6343872	Symbol	& lf -> enum_value		6343824						
ANR	6343873	Symbol	name		6343824						
ANR	6343874	Symbol	lf		6343824						
ANR	6343875	Symbol	t -> type_info		6343824						
ANR	6343876	Symbol	type		6343824						
ANR	6343877	Symbol	* t		6343824						
ANR	6343878	Function	get_enum_name	739:0:18126:18292							
ANR	6343879	FunctionDef	"get_enum_name (void * type , char * * name)"		6343878	0					
ANR	6343880	CompoundStatement		739:51:18177:18292	6343878	0					
ANR	6343881	IdentifierDeclStatement	STypeInfo * t = ( STypeInfo * ) type ;	740:1:18180:18213	6343878	0	True				
ANR	6343882	IdentifierDecl	* t = ( STypeInfo * ) type		6343878	0					
ANR	6343883	IdentifierDeclType	STypeInfo *		6343878	0					
ANR	6343884	Identifier	t		6343878	1					
ANR	6343885	AssignmentExpression	* t = ( STypeInfo * ) type		6343878	2		=			
ANR	6343886	Identifier	t		6343878	0					
ANR	6343887	CastExpression	( STypeInfo * ) type		6343878	1					
ANR	6343888	CastTarget	STypeInfo *		6343878	0					
ANR	6343889	Identifier	type		6343878	1					
ANR	6343890	IdentifierDeclStatement	SLF_ENUM * lf_enum = ( SLF_ENUM * ) t -> type_info ;	741:1:18216:18260	6343878	1	True				
ANR	6343891	IdentifierDecl	* lf_enum = ( SLF_ENUM * ) t -> type_info		6343878	0					
ANR	6343892	IdentifierDeclType	SLF_ENUM *		6343878	0					
ANR	6343893	Identifier	lf_enum		6343878	1					
ANR	6343894	AssignmentExpression	* lf_enum = ( SLF_ENUM * ) t -> type_info		6343878	2		=			
ANR	6343895	Identifier	lf_enum		6343878	0					
ANR	6343896	CastExpression	( SLF_ENUM * ) t -> type_info		6343878	1					
ANR	6343897	CastTarget	SLF_ENUM *		6343878	0					
ANR	6343898	PtrMemberAccess	t -> type_info		6343878	1					
ANR	6343899	Identifier	t		6343878	0					
ANR	6343900	Identifier	type_info		6343878	1					
ANR	6343901	ExpressionStatement	* name = lf_enum -> name . name	743:1:18264:18290	6343878	2	True				
ANR	6343902	AssignmentExpression	* name = lf_enum -> name . name		6343878	0		=			
ANR	6343903	UnaryOperationExpression	* name		6343878	0					
ANR	6343904	UnaryOperator	*		6343878	0					
ANR	6343905	Identifier	name		6343878	1					
ANR	6343906	MemberAccess	lf_enum -> name . name		6343878	1					
ANR	6343907	PtrMemberAccess	lf_enum -> name		6343878	0					
ANR	6343908	Identifier	lf_enum		6343878	0					
ANR	6343909	Identifier	name		6343878	1					
ANR	6343910	Identifier	name		6343878	1					
ANR	6343911	ReturnType	static void		6343878	1					
ANR	6343912	Identifier	get_enum_name		6343878	2					
ANR	6343913	ParameterList	"void * type , char * * name"		6343878	3					
ANR	6343914	Parameter	void * type	739:26:18152:18161	6343878	0	True				
ANR	6343915	ParameterType	void *		6343878	0					
ANR	6343916	Identifier	type		6343878	1					
ANR	6343917	Parameter	char * * name	739:38:18164:18174	6343878	1	True				
ANR	6343918	ParameterType	char * *		6343878	0					
ANR	6343919	Identifier	name		6343878	1					
ANR	6343920	CFGEntryNode	ENTRY		6343878		True				
ANR	6343921	CFGExitNode	EXIT		6343878		True				
ANR	6343922	Symbol	* name		6343878						
ANR	6343923	Symbol	t		6343878						
ANR	6343924	Symbol	lf_enum -> name . name		6343878						
ANR	6343925	Symbol	name		6343878						
ANR	6343926	Symbol	* lf_enum		6343878						
ANR	6343927	Symbol	t -> type_info		6343878						
ANR	6343928	Symbol	type		6343878						
ANR	6343929	Symbol	* t		6343878						
ANR	6343930	Symbol	lf_enum -> name		6343878						
ANR	6343931	Symbol	lf_enum		6343878						
ANR	6343932	Function	get_class_struct_name	746:0:18295:18478							
ANR	6343933	FunctionDef	"get_class_struct_name (void * type , char * * name)"		6343932	0					
ANR	6343934	CompoundStatement		746:59:18354:18478	6343932	0					
ANR	6343935	IdentifierDeclStatement	STypeInfo * t = ( STypeInfo * ) type ;	747:1:18357:18390	6343932	0	True				
ANR	6343936	IdentifierDecl	* t = ( STypeInfo * ) type		6343932	0					
ANR	6343937	IdentifierDeclType	STypeInfo *		6343932	0					
ANR	6343938	Identifier	t		6343932	1					
ANR	6343939	AssignmentExpression	* t = ( STypeInfo * ) type		6343932	2		=			
ANR	6343940	Identifier	t		6343932	0					
ANR	6343941	CastExpression	( STypeInfo * ) type		6343932	1					
ANR	6343942	CastTarget	STypeInfo *		6343932	0					
ANR	6343943	Identifier	type		6343932	1					
ANR	6343944	IdentifierDeclStatement	SLF_STRUCTURE * lf = ( SLF_STRUCTURE * ) t -> type_info ;	748:1:18393:18442	6343932	1	True				
ANR	6343945	IdentifierDecl	* lf = ( SLF_STRUCTURE * ) t -> type_info		6343932	0					
ANR	6343946	IdentifierDeclType	SLF_STRUCTURE *		6343932	0					
ANR	6343947	Identifier	lf		6343932	1					
ANR	6343948	AssignmentExpression	* lf = ( SLF_STRUCTURE * ) t -> type_info		6343932	2		=			
ANR	6343949	Identifier	lf		6343932	0					
ANR	6343950	CastExpression	( SLF_STRUCTURE * ) t -> type_info		6343932	1					
ANR	6343951	CastTarget	SLF_STRUCTURE *		6343932	0					
ANR	6343952	PtrMemberAccess	t -> type_info		6343932	1					
ANR	6343953	Identifier	t		6343932	0					
ANR	6343954	Identifier	type_info		6343932	1					
ANR	6343955	ExpressionStatement	"get_sval_name ( & lf -> size , name )"	750:1:18446:18476	6343932	2	True				
ANR	6343956	CallExpression	"get_sval_name ( & lf -> size , name )"		6343932	0					
ANR	6343957	Callee	get_sval_name		6343932	0					
ANR	6343958	Identifier	get_sval_name		6343932	0					
ANR	6343959	ArgumentList	& lf -> size		6343932	1					
ANR	6343960	Argument	& lf -> size		6343932	0					
ANR	6343961	UnaryOperationExpression	& lf -> size		6343932	0					
ANR	6343962	UnaryOperator	&		6343932	0					
ANR	6343963	PtrMemberAccess	lf -> size		6343932	1					
ANR	6343964	Identifier	lf		6343932	0					
ANR	6343965	Identifier	size		6343932	1					
ANR	6343966	Argument	name		6343932	1					
ANR	6343967	Identifier	name		6343932	0					
ANR	6343968	ReturnType	static void		6343932	1					
ANR	6343969	Identifier	get_class_struct_name		6343932	2					
ANR	6343970	ParameterList	"void * type , char * * name"		6343932	3					
ANR	6343971	Parameter	void * type	746:34:18329:18338	6343932	0	True				
ANR	6343972	ParameterType	void *		6343932	0					
ANR	6343973	Identifier	type		6343932	1					
ANR	6343974	Parameter	char * * name	746:46:18341:18351	6343932	1	True				
ANR	6343975	ParameterType	char * *		6343932	0					
ANR	6343976	Identifier	name		6343932	1					
ANR	6343977	CFGEntryNode	ENTRY		6343932		True				
ANR	6343978	CFGExitNode	EXIT		6343932		True				
ANR	6343979	Symbol	t		6343932						
ANR	6343980	Symbol	name		6343932						
ANR	6343981	Symbol	lf		6343932						
ANR	6343982	Symbol	t -> type_info		6343932						
ANR	6343983	Symbol	type		6343932						
ANR	6343984	Symbol	& lf -> size		6343932						
ANR	6343985	Symbol	* t		6343932						
ANR	6343986	Function	get_array_name	753:0:18481:18662							
ANR	6343987	FunctionDef	"get_array_name (void * type , char * * name)"		6343986	0					
ANR	6343988	CompoundStatement		753:52:18533:18662	6343986	0					
ANR	6343989	IdentifierDeclStatement	STypeInfo * t = ( STypeInfo * ) type ;	754:1:18536:18569	6343986	0	True				
ANR	6343990	IdentifierDecl	* t = ( STypeInfo * ) type		6343986	0					
ANR	6343991	IdentifierDeclType	STypeInfo *		6343986	0					
ANR	6343992	Identifier	t		6343986	1					
ANR	6343993	AssignmentExpression	* t = ( STypeInfo * ) type		6343986	2		=			
ANR	6343994	Identifier	t		6343986	0					
ANR	6343995	CastExpression	( STypeInfo * ) type		6343986	1					
ANR	6343996	CastTarget	STypeInfo *		6343986	0					
ANR	6343997	Identifier	type		6343986	1					
ANR	6343998	IdentifierDeclStatement	SLF_ARRAY * lf_array = ( SLF_ARRAY * ) t -> type_info ;	755:1:18572:18620	6343986	1	True				
ANR	6343999	IdentifierDecl	* lf_array = ( SLF_ARRAY * ) t -> type_info		6343986	0					
ANR	6344000	IdentifierDeclType	SLF_ARRAY *		6343986	0					
ANR	6344001	Identifier	lf_array		6343986	1					
ANR	6344002	AssignmentExpression	* lf_array = ( SLF_ARRAY * ) t -> type_info		6343986	2		=			
ANR	6344003	Identifier	lf_array		6343986	0					
ANR	6344004	CastExpression	( SLF_ARRAY * ) t -> type_info		6343986	1					
ANR	6344005	CastTarget	SLF_ARRAY *		6343986	0					
ANR	6344006	PtrMemberAccess	t -> type_info		6343986	1					
ANR	6344007	Identifier	t		6343986	0					
ANR	6344008	Identifier	type_info		6343986	1					
ANR	6344009	ExpressionStatement	"get_sval_name ( & lf_array -> size , name )"	757:1:18624:18660	6343986	2	True				
ANR	6344010	CallExpression	"get_sval_name ( & lf_array -> size , name )"		6343986	0					
ANR	6344011	Callee	get_sval_name		6343986	0					
ANR	6344012	Identifier	get_sval_name		6343986	0					
ANR	6344013	ArgumentList	& lf_array -> size		6343986	1					
ANR	6344014	Argument	& lf_array -> size		6343986	0					
ANR	6344015	UnaryOperationExpression	& lf_array -> size		6343986	0					
ANR	6344016	UnaryOperator	&		6343986	0					
ANR	6344017	PtrMemberAccess	lf_array -> size		6343986	1					
ANR	6344018	Identifier	lf_array		6343986	0					
ANR	6344019	Identifier	size		6343986	1					
ANR	6344020	Argument	name		6343986	1					
ANR	6344021	Identifier	name		6343986	0					
ANR	6344022	ReturnType	static void		6343986	1					
ANR	6344023	Identifier	get_array_name		6343986	2					
ANR	6344024	ParameterList	"void * type , char * * name"		6343986	3					
ANR	6344025	Parameter	void * type	753:27:18508:18517	6343986	0	True				
ANR	6344026	ParameterType	void *		6343986	0					
ANR	6344027	Identifier	type		6343986	1					
ANR	6344028	Parameter	char * * name	753:39:18520:18530	6343986	1	True				
ANR	6344029	ParameterType	char * *		6343986	0					
ANR	6344030	Identifier	name		6343986	1					
ANR	6344031	CFGEntryNode	ENTRY		6343986		True				
ANR	6344032	CFGExitNode	EXIT		6343986		True				
ANR	6344033	Symbol	& lf_array -> size		6343986						
ANR	6344034	Symbol	t		6343986						
ANR	6344035	Symbol	lf_array		6343986						
ANR	6344036	Symbol	name		6343986						
ANR	6344037	Symbol	t -> type_info		6343986						
ANR	6344038	Symbol	type		6343986						
ANR	6344039	Symbol	* t		6343986						
ANR	6344040	Function	get_union_name	760:0:18665:18846							
ANR	6344041	FunctionDef	"get_union_name (void * type , char * * name)"		6344040	0					
ANR	6344042	CompoundStatement		760:52:18717:18846	6344040	0					
ANR	6344043	IdentifierDeclStatement	STypeInfo * t = ( STypeInfo * ) type ;	761:1:18720:18753	6344040	0	True				
ANR	6344044	IdentifierDecl	* t = ( STypeInfo * ) type		6344040	0					
ANR	6344045	IdentifierDeclType	STypeInfo *		6344040	0					
ANR	6344046	Identifier	t		6344040	1					
ANR	6344047	AssignmentExpression	* t = ( STypeInfo * ) type		6344040	2		=			
ANR	6344048	Identifier	t		6344040	0					
ANR	6344049	CastExpression	( STypeInfo * ) type		6344040	1					
ANR	6344050	CastTarget	STypeInfo *		6344040	0					
ANR	6344051	Identifier	type		6344040	1					
ANR	6344052	IdentifierDeclStatement	SLF_UNION * lf_union = ( SLF_UNION * ) t -> type_info ;	762:1:18756:18804	6344040	1	True				
ANR	6344053	IdentifierDecl	* lf_union = ( SLF_UNION * ) t -> type_info		6344040	0					
ANR	6344054	IdentifierDeclType	SLF_UNION *		6344040	0					
ANR	6344055	Identifier	lf_union		6344040	1					
ANR	6344056	AssignmentExpression	* lf_union = ( SLF_UNION * ) t -> type_info		6344040	2		=			
ANR	6344057	Identifier	lf_union		6344040	0					
ANR	6344058	CastExpression	( SLF_UNION * ) t -> type_info		6344040	1					
ANR	6344059	CastTarget	SLF_UNION *		6344040	0					
ANR	6344060	PtrMemberAccess	t -> type_info		6344040	1					
ANR	6344061	Identifier	t		6344040	0					
ANR	6344062	Identifier	type_info		6344040	1					
ANR	6344063	ExpressionStatement	"get_sval_name ( & lf_union -> size , name )"	764:1:18808:18844	6344040	2	True				
ANR	6344064	CallExpression	"get_sval_name ( & lf_union -> size , name )"		6344040	0					
ANR	6344065	Callee	get_sval_name		6344040	0					
ANR	6344066	Identifier	get_sval_name		6344040	0					
ANR	6344067	ArgumentList	& lf_union -> size		6344040	1					
ANR	6344068	Argument	& lf_union -> size		6344040	0					
ANR	6344069	UnaryOperationExpression	& lf_union -> size		6344040	0					
ANR	6344070	UnaryOperator	&		6344040	0					
ANR	6344071	PtrMemberAccess	lf_union -> size		6344040	1					
ANR	6344072	Identifier	lf_union		6344040	0					
ANR	6344073	Identifier	size		6344040	1					
ANR	6344074	Argument	name		6344040	1					
ANR	6344075	Identifier	name		6344040	0					
ANR	6344076	ReturnType	static void		6344040	1					
ANR	6344077	Identifier	get_union_name		6344040	2					
ANR	6344078	ParameterList	"void * type , char * * name"		6344040	3					
ANR	6344079	Parameter	void * type	760:27:18692:18701	6344040	0	True				
ANR	6344080	ParameterType	void *		6344040	0					
ANR	6344081	Identifier	type		6344040	1					
ANR	6344082	Parameter	char * * name	760:39:18704:18714	6344040	1	True				
ANR	6344083	ParameterType	char * *		6344040	0					
ANR	6344084	Identifier	name		6344040	1					
ANR	6344085	CFGEntryNode	ENTRY		6344040		True				
ANR	6344086	CFGExitNode	EXIT		6344040		True				
ANR	6344087	Symbol	lf_union		6344040						
ANR	6344088	Symbol	t		6344040						
ANR	6344089	Symbol	name		6344040						
ANR	6344090	Symbol	& lf_union -> size		6344040						
ANR	6344091	Symbol	t -> type_info		6344040						
ANR	6344092	Symbol	type		6344040						
ANR	6344093	Symbol	* t		6344040						
ANR	6344094	Function	get_onemethod_val	767:0:18849:19014							
ANR	6344095	FunctionDef	"get_onemethod_val (void * type , int * res)"		6344094	0					
ANR	6344096	CompoundStatement		767:52:18901:19014	6344094	0					
ANR	6344097	IdentifierDeclStatement	STypeInfo * t = ( STypeInfo * ) type ;	768:1:18904:18937	6344094	0	True				
ANR	6344098	IdentifierDecl	* t = ( STypeInfo * ) type		6344094	0					
ANR	6344099	IdentifierDeclType	STypeInfo *		6344094	0					
ANR	6344100	Identifier	t		6344094	1					
ANR	6344101	AssignmentExpression	* t = ( STypeInfo * ) type		6344094	2		=			
ANR	6344102	Identifier	t		6344094	0					
ANR	6344103	CastExpression	( STypeInfo * ) type		6344094	1					
ANR	6344104	CastTarget	STypeInfo *		6344094	0					
ANR	6344105	Identifier	type		6344094	1					
ANR	6344106	IdentifierDeclStatement	SLF_ONEMETHOD * lf = ( SLF_ONEMETHOD * ) t -> type_info ;	769:1:18940:18990	6344094	1	True				
ANR	6344107	IdentifierDecl	* lf = ( SLF_ONEMETHOD * ) t -> type_info		6344094	0					
ANR	6344108	IdentifierDeclType	SLF_ONEMETHOD *		6344094	0					
ANR	6344109	Identifier	lf		6344094	1					
ANR	6344110	AssignmentExpression	* lf = ( SLF_ONEMETHOD * ) t -> type_info		6344094	2		=			
ANR	6344111	Identifier	lf		6344094	0					
ANR	6344112	CastExpression	( SLF_ONEMETHOD * ) t -> type_info		6344094	1					
ANR	6344113	CastTarget	SLF_ONEMETHOD *		6344094	0					
ANR	6344114	PtrMemberAccess	t -> type_info		6344094	1					
ANR	6344115	Identifier	t		6344094	0					
ANR	6344116	Identifier	type_info		6344094	1					
ANR	6344117	ExpressionStatement	* res = lf -> val . val	771:1:18994:19012	6344094	2	True				
ANR	6344118	AssignmentExpression	* res = lf -> val . val		6344094	0		=			
ANR	6344119	UnaryOperationExpression	* res		6344094	0					
ANR	6344120	UnaryOperator	*		6344094	0					
ANR	6344121	Identifier	res		6344094	1					
ANR	6344122	MemberAccess	lf -> val . val		6344094	1					
ANR	6344123	PtrMemberAccess	lf -> val		6344094	0					
ANR	6344124	Identifier	lf		6344094	0					
ANR	6344125	Identifier	val		6344094	1					
ANR	6344126	Identifier	val		6344094	1					
ANR	6344127	ReturnType	static void		6344094	1					
ANR	6344128	Identifier	get_onemethod_val		6344094	2					
ANR	6344129	ParameterList	"void * type , int * res"		6344094	3					
ANR	6344130	Parameter	void * type	767:30:18879:18888	6344094	0	True				
ANR	6344131	ParameterType	void *		6344094	0					
ANR	6344132	Identifier	type		6344094	1					
ANR	6344133	Parameter	int * res	767:42:18891:18898	6344094	1	True				
ANR	6344134	ParameterType	int *		6344094	0					
ANR	6344135	Identifier	res		6344094	1					
ANR	6344136	CFGEntryNode	ENTRY		6344094		True				
ANR	6344137	CFGExitNode	EXIT		6344094		True				
ANR	6344138	Symbol	res		6344094						
ANR	6344139	Symbol	* lf		6344094						
ANR	6344140	Symbol	t		6344094						
ANR	6344141	Symbol	lf		6344094						
ANR	6344142	Symbol	lf -> val		6344094						
ANR	6344143	Symbol	lf -> val . val		6344094						
ANR	6344144	Symbol	* res		6344094						
ANR	6344145	Symbol	t -> type_info		6344094						
ANR	6344146	Symbol	type		6344094						
ANR	6344147	Symbol	* t		6344094						
ANR	6344148	Function	get_member_val	774:0:19017:19184							
ANR	6344149	FunctionDef	"get_member_val (void * type , int * res)"		6344148	0					
ANR	6344150	CompoundStatement		774:49:19066:19184	6344148	0					
ANR	6344151	IdentifierDeclStatement	STypeInfo * t = ( STypeInfo * ) type ;	775:1:19069:19102	6344148	0	True				
ANR	6344152	IdentifierDecl	* t = ( STypeInfo * ) type		6344148	0					
ANR	6344153	IdentifierDeclType	STypeInfo *		6344148	0					
ANR	6344154	Identifier	t		6344148	1					
ANR	6344155	AssignmentExpression	* t = ( STypeInfo * ) type		6344148	2		=			
ANR	6344156	Identifier	t		6344148	0					
ANR	6344157	CastExpression	( STypeInfo * ) type		6344148	1					
ANR	6344158	CastTarget	STypeInfo *		6344148	0					
ANR	6344159	Identifier	type		6344148	1					
ANR	6344160	IdentifierDeclStatement	SLF_MEMBER * lf = ( SLF_MEMBER * ) t -> type_info ;	776:1:19105:19148	6344148	1	True				
ANR	6344161	IdentifierDecl	* lf = ( SLF_MEMBER * ) t -> type_info		6344148	0					
ANR	6344162	IdentifierDeclType	SLF_MEMBER *		6344148	0					
ANR	6344163	Identifier	lf		6344148	1					
ANR	6344164	AssignmentExpression	* lf = ( SLF_MEMBER * ) t -> type_info		6344148	2		=			
ANR	6344165	Identifier	lf		6344148	0					
ANR	6344166	CastExpression	( SLF_MEMBER * ) t -> type_info		6344148	1					
ANR	6344167	CastTarget	SLF_MEMBER *		6344148	0					
ANR	6344168	PtrMemberAccess	t -> type_info		6344148	1					
ANR	6344169	Identifier	t		6344148	0					
ANR	6344170	Identifier	type_info		6344148	1					
ANR	6344171	ExpressionStatement	"get_sval_val ( & lf -> offset , res )"	777:1:19151:19182	6344148	2	True				
ANR	6344172	CallExpression	"get_sval_val ( & lf -> offset , res )"		6344148	0					
ANR	6344173	Callee	get_sval_val		6344148	0					
ANR	6344174	Identifier	get_sval_val		6344148	0					
ANR	6344175	ArgumentList	& lf -> offset		6344148	1					
ANR	6344176	Argument	& lf -> offset		6344148	0					
ANR	6344177	UnaryOperationExpression	& lf -> offset		6344148	0					
ANR	6344178	UnaryOperator	&		6344148	0					
ANR	6344179	PtrMemberAccess	lf -> offset		6344148	1					
ANR	6344180	Identifier	lf		6344148	0					
ANR	6344181	Identifier	offset		6344148	1					
ANR	6344182	Argument	res		6344148	1					
ANR	6344183	Identifier	res		6344148	0					
ANR	6344184	ReturnType	static void		6344148	1					
ANR	6344185	Identifier	get_member_val		6344148	2					
ANR	6344186	ParameterList	"void * type , int * res"		6344148	3					
ANR	6344187	Parameter	void * type	774:27:19044:19053	6344148	0	True				
ANR	6344188	ParameterType	void *		6344148	0					
ANR	6344189	Identifier	type		6344148	1					
ANR	6344190	Parameter	int * res	774:39:19056:19063	6344148	1	True				
ANR	6344191	ParameterType	int *		6344148	0					
ANR	6344192	Identifier	res		6344148	1					
ANR	6344193	CFGEntryNode	ENTRY		6344148		True				
ANR	6344194	CFGExitNode	EXIT		6344148		True				
ANR	6344195	Symbol	res		6344148						
ANR	6344196	Symbol	t		6344148						
ANR	6344197	Symbol	lf		6344148						
ANR	6344198	Symbol	t -> type_info		6344148						
ANR	6344199	Symbol	type		6344148						
ANR	6344200	Symbol	& lf -> offset		6344148						
ANR	6344201	Symbol	* t		6344148						
ANR	6344202	Function	get_enumerate_val	780:0:19187:19367							
ANR	6344203	FunctionDef	"get_enumerate_val (void * type , int * res)"		6344202	0					
ANR	6344204	CompoundStatement		780:52:19239:19367	6344202	0					
ANR	6344205	IdentifierDeclStatement	STypeInfo * t = ( STypeInfo * ) type ;	781:1:19242:19275	6344202	0	True				
ANR	6344206	IdentifierDecl	* t = ( STypeInfo * ) type		6344202	0					
ANR	6344207	IdentifierDeclType	STypeInfo *		6344202	0					
ANR	6344208	Identifier	t		6344202	1					
ANR	6344209	AssignmentExpression	* t = ( STypeInfo * ) type		6344202	2		=			
ANR	6344210	Identifier	t		6344202	0					
ANR	6344211	CastExpression	( STypeInfo * ) type		6344202	1					
ANR	6344212	CastTarget	STypeInfo *		6344202	0					
ANR	6344213	Identifier	type		6344202	1					
ANR	6344214	IdentifierDeclStatement	SLF_ENUMERATE * lf = ( SLF_ENUMERATE * ) t -> type_info ;	782:1:19278:19327	6344202	1	True				
ANR	6344215	IdentifierDecl	* lf = ( SLF_ENUMERATE * ) t -> type_info		6344202	0					
ANR	6344216	IdentifierDeclType	SLF_ENUMERATE *		6344202	0					
ANR	6344217	Identifier	lf		6344202	1					
ANR	6344218	AssignmentExpression	* lf = ( SLF_ENUMERATE * ) t -> type_info		6344202	2		=			
ANR	6344219	Identifier	lf		6344202	0					
ANR	6344220	CastExpression	( SLF_ENUMERATE * ) t -> type_info		6344202	1					
ANR	6344221	CastTarget	SLF_ENUMERATE *		6344202	0					
ANR	6344222	PtrMemberAccess	t -> type_info		6344202	1					
ANR	6344223	Identifier	t		6344202	0					
ANR	6344224	Identifier	type_info		6344202	1					
ANR	6344225	ExpressionStatement	"get_sval_val ( & lf -> enum_value , res )"	783:1:19330:19365	6344202	2	True				
ANR	6344226	CallExpression	"get_sval_val ( & lf -> enum_value , res )"		6344202	0					
ANR	6344227	Callee	get_sval_val		6344202	0					
ANR	6344228	Identifier	get_sval_val		6344202	0					
ANR	6344229	ArgumentList	& lf -> enum_value		6344202	1					
ANR	6344230	Argument	& lf -> enum_value		6344202	0					
ANR	6344231	UnaryOperationExpression	& lf -> enum_value		6344202	0					
ANR	6344232	UnaryOperator	&		6344202	0					
ANR	6344233	PtrMemberAccess	lf -> enum_value		6344202	1					
ANR	6344234	Identifier	lf		6344202	0					
ANR	6344235	Identifier	enum_value		6344202	1					
ANR	6344236	Argument	res		6344202	1					
ANR	6344237	Identifier	res		6344202	0					
ANR	6344238	ReturnType	static void		6344202	1					
ANR	6344239	Identifier	get_enumerate_val		6344202	2					
ANR	6344240	ParameterList	"void * type , int * res"		6344202	3					
ANR	6344241	Parameter	void * type	780:30:19217:19226	6344202	0	True				
ANR	6344242	ParameterType	void *		6344202	0					
ANR	6344243	Identifier	type		6344202	1					
ANR	6344244	Parameter	int * res	780:42:19229:19236	6344202	1	True				
ANR	6344245	ParameterType	int *		6344202	0					
ANR	6344246	Identifier	res		6344202	1					
ANR	6344247	CFGEntryNode	ENTRY		6344202		True				
ANR	6344248	CFGExitNode	EXIT		6344202		True				
ANR	6344249	Symbol	res		6344202						
ANR	6344250	Symbol	t		6344202						
ANR	6344251	Symbol	& lf -> enum_value		6344202						
ANR	6344252	Symbol	lf		6344202						
ANR	6344253	Symbol	t -> type_info		6344202						
ANR	6344254	Symbol	type		6344202						
ANR	6344255	Symbol	* t		6344202						
ANR	6344256	Function	get_class_struct_val	786:0:19370:19548							
ANR	6344257	FunctionDef	"get_class_struct_val (void * type , int * res)"		6344256	0					
ANR	6344258	CompoundStatement		786:55:19425:19548	6344256	0					
ANR	6344259	IdentifierDeclStatement	STypeInfo * t = ( STypeInfo * ) type ;	787:1:19428:19461	6344256	0	True				
ANR	6344260	IdentifierDecl	* t = ( STypeInfo * ) type		6344256	0					
ANR	6344261	IdentifierDeclType	STypeInfo *		6344256	0					
ANR	6344262	Identifier	t		6344256	1					
ANR	6344263	AssignmentExpression	* t = ( STypeInfo * ) type		6344256	2		=			
ANR	6344264	Identifier	t		6344256	0					
ANR	6344265	CastExpression	( STypeInfo * ) type		6344256	1					
ANR	6344266	CastTarget	STypeInfo *		6344256	0					
ANR	6344267	Identifier	type		6344256	1					
ANR	6344268	IdentifierDeclStatement	SLF_STRUCTURE * lf = ( SLF_STRUCTURE * ) t -> type_info ;	788:1:19464:19514	6344256	1	True				
ANR	6344269	IdentifierDecl	* lf = ( SLF_STRUCTURE * ) t -> type_info		6344256	0					
ANR	6344270	IdentifierDeclType	SLF_STRUCTURE *		6344256	0					
ANR	6344271	Identifier	lf		6344256	1					
ANR	6344272	AssignmentExpression	* lf = ( SLF_STRUCTURE * ) t -> type_info		6344256	2		=			
ANR	6344273	Identifier	lf		6344256	0					
ANR	6344274	CastExpression	( SLF_STRUCTURE * ) t -> type_info		6344256	1					
ANR	6344275	CastTarget	SLF_STRUCTURE *		6344256	0					
ANR	6344276	PtrMemberAccess	t -> type_info		6344256	1					
ANR	6344277	Identifier	t		6344256	0					
ANR	6344278	Identifier	type_info		6344256	1					
ANR	6344279	ExpressionStatement	"get_sval_val ( & lf -> size , res )"	789:1:19517:19546	6344256	2	True				
ANR	6344280	CallExpression	"get_sval_val ( & lf -> size , res )"		6344256	0					
ANR	6344281	Callee	get_sval_val		6344256	0					
ANR	6344282	Identifier	get_sval_val		6344256	0					
ANR	6344283	ArgumentList	& lf -> size		6344256	1					
ANR	6344284	Argument	& lf -> size		6344256	0					
ANR	6344285	UnaryOperationExpression	& lf -> size		6344256	0					
ANR	6344286	UnaryOperator	&		6344256	0					
ANR	6344287	PtrMemberAccess	lf -> size		6344256	1					
ANR	6344288	Identifier	lf		6344256	0					
ANR	6344289	Identifier	size		6344256	1					
ANR	6344290	Argument	res		6344256	1					
ANR	6344291	Identifier	res		6344256	0					
ANR	6344292	ReturnType	static void		6344256	1					
ANR	6344293	Identifier	get_class_struct_val		6344256	2					
ANR	6344294	ParameterList	"void * type , int * res"		6344256	3					
ANR	6344295	Parameter	void * type	786:33:19403:19412	6344256	0	True				
ANR	6344296	ParameterType	void *		6344256	0					
ANR	6344297	Identifier	type		6344256	1					
ANR	6344298	Parameter	int * res	786:45:19415:19422	6344256	1	True				
ANR	6344299	ParameterType	int *		6344256	0					
ANR	6344300	Identifier	res		6344256	1					
ANR	6344301	CFGEntryNode	ENTRY		6344256		True				
ANR	6344302	CFGExitNode	EXIT		6344256		True				
ANR	6344303	Symbol	res		6344256						
ANR	6344304	Symbol	t		6344256						
ANR	6344305	Symbol	lf		6344256						
ANR	6344306	Symbol	t -> type_info		6344256						
ANR	6344307	Symbol	type		6344256						
ANR	6344308	Symbol	& lf -> size		6344256						
ANR	6344309	Symbol	* t		6344256						
ANR	6344310	Function	get_array_val	792:0:19551:19726							
ANR	6344311	FunctionDef	"get_array_val (void * type , int * res)"		6344310	0					
ANR	6344312	CompoundStatement		792:48:19599:19726	6344310	0					
ANR	6344313	IdentifierDeclStatement	STypeInfo * t = ( STypeInfo * ) type ;	793:1:19602:19635	6344310	0	True				
ANR	6344314	IdentifierDecl	* t = ( STypeInfo * ) type		6344310	0					
ANR	6344315	IdentifierDeclType	STypeInfo *		6344310	0					
ANR	6344316	Identifier	t		6344310	1					
ANR	6344317	AssignmentExpression	* t = ( STypeInfo * ) type		6344310	2		=			
ANR	6344318	Identifier	t		6344310	0					
ANR	6344319	CastExpression	( STypeInfo * ) type		6344310	1					
ANR	6344320	CastTarget	STypeInfo *		6344310	0					
ANR	6344321	Identifier	type		6344310	1					
ANR	6344322	IdentifierDeclStatement	SLF_ARRAY * lf_array = ( SLF_ARRAY * ) t -> type_info ;	794:1:19638:19686	6344310	1	True				
ANR	6344323	IdentifierDecl	* lf_array = ( SLF_ARRAY * ) t -> type_info		6344310	0					
ANR	6344324	IdentifierDeclType	SLF_ARRAY *		6344310	0					
ANR	6344325	Identifier	lf_array		6344310	1					
ANR	6344326	AssignmentExpression	* lf_array = ( SLF_ARRAY * ) t -> type_info		6344310	2		=			
ANR	6344327	Identifier	lf_array		6344310	0					
ANR	6344328	CastExpression	( SLF_ARRAY * ) t -> type_info		6344310	1					
ANR	6344329	CastTarget	SLF_ARRAY *		6344310	0					
ANR	6344330	PtrMemberAccess	t -> type_info		6344310	1					
ANR	6344331	Identifier	t		6344310	0					
ANR	6344332	Identifier	type_info		6344310	1					
ANR	6344333	ExpressionStatement	"get_sval_val ( & lf_array -> size , res )"	795:1:19689:19724	6344310	2	True				
ANR	6344334	CallExpression	"get_sval_val ( & lf_array -> size , res )"		6344310	0					
ANR	6344335	Callee	get_sval_val		6344310	0					
ANR	6344336	Identifier	get_sval_val		6344310	0					
ANR	6344337	ArgumentList	& lf_array -> size		6344310	1					
ANR	6344338	Argument	& lf_array -> size		6344310	0					
ANR	6344339	UnaryOperationExpression	& lf_array -> size		6344310	0					
ANR	6344340	UnaryOperator	&		6344310	0					
ANR	6344341	PtrMemberAccess	lf_array -> size		6344310	1					
ANR	6344342	Identifier	lf_array		6344310	0					
ANR	6344343	Identifier	size		6344310	1					
ANR	6344344	Argument	res		6344310	1					
ANR	6344345	Identifier	res		6344310	0					
ANR	6344346	ReturnType	static void		6344310	1					
ANR	6344347	Identifier	get_array_val		6344310	2					
ANR	6344348	ParameterList	"void * type , int * res"		6344310	3					
ANR	6344349	Parameter	void * type	792:26:19577:19586	6344310	0	True				
ANR	6344350	ParameterType	void *		6344310	0					
ANR	6344351	Identifier	type		6344310	1					
ANR	6344352	Parameter	int * res	792:38:19589:19596	6344310	1	True				
ANR	6344353	ParameterType	int *		6344310	0					
ANR	6344354	Identifier	res		6344310	1					
ANR	6344355	CFGEntryNode	ENTRY		6344310		True				
ANR	6344356	CFGExitNode	EXIT		6344310		True				
ANR	6344357	Symbol	res		6344310						
ANR	6344358	Symbol	& lf_array -> size		6344310						
ANR	6344359	Symbol	t		6344310						
ANR	6344360	Symbol	lf_array		6344310						
ANR	6344361	Symbol	t -> type_info		6344310						
ANR	6344362	Symbol	type		6344310						
ANR	6344363	Symbol	* t		6344310						
ANR	6344364	Function	get_union_val	798:0:19729:19904							
ANR	6344365	FunctionDef	"get_union_val (void * type , int * res)"		6344364	0					
ANR	6344366	CompoundStatement		798:48:19777:19904	6344364	0					
ANR	6344367	IdentifierDeclStatement	STypeInfo * t = ( STypeInfo * ) type ;	799:1:19780:19813	6344364	0	True				
ANR	6344368	IdentifierDecl	* t = ( STypeInfo * ) type		6344364	0					
ANR	6344369	IdentifierDeclType	STypeInfo *		6344364	0					
ANR	6344370	Identifier	t		6344364	1					
ANR	6344371	AssignmentExpression	* t = ( STypeInfo * ) type		6344364	2		=			
ANR	6344372	Identifier	t		6344364	0					
ANR	6344373	CastExpression	( STypeInfo * ) type		6344364	1					
ANR	6344374	CastTarget	STypeInfo *		6344364	0					
ANR	6344375	Identifier	type		6344364	1					
ANR	6344376	IdentifierDeclStatement	SLF_UNION * lf_union = ( SLF_UNION * ) t -> type_info ;	800:1:19816:19864	6344364	1	True				
ANR	6344377	IdentifierDecl	* lf_union = ( SLF_UNION * ) t -> type_info		6344364	0					
ANR	6344378	IdentifierDeclType	SLF_UNION *		6344364	0					
ANR	6344379	Identifier	lf_union		6344364	1					
ANR	6344380	AssignmentExpression	* lf_union = ( SLF_UNION * ) t -> type_info		6344364	2		=			
ANR	6344381	Identifier	lf_union		6344364	0					
ANR	6344382	CastExpression	( SLF_UNION * ) t -> type_info		6344364	1					
ANR	6344383	CastTarget	SLF_UNION *		6344364	0					
ANR	6344384	PtrMemberAccess	t -> type_info		6344364	1					
ANR	6344385	Identifier	t		6344364	0					
ANR	6344386	Identifier	type_info		6344364	1					
ANR	6344387	ExpressionStatement	"get_sval_val ( & lf_union -> size , res )"	802:1:19868:19902	6344364	2	True				
ANR	6344388	CallExpression	"get_sval_val ( & lf_union -> size , res )"		6344364	0					
ANR	6344389	Callee	get_sval_val		6344364	0					
ANR	6344390	Identifier	get_sval_val		6344364	0					
ANR	6344391	ArgumentList	& lf_union -> size		6344364	1					
ANR	6344392	Argument	& lf_union -> size		6344364	0					
ANR	6344393	UnaryOperationExpression	& lf_union -> size		6344364	0					
ANR	6344394	UnaryOperator	&		6344364	0					
ANR	6344395	PtrMemberAccess	lf_union -> size		6344364	1					
ANR	6344396	Identifier	lf_union		6344364	0					
ANR	6344397	Identifier	size		6344364	1					
ANR	6344398	Argument	res		6344364	1					
ANR	6344399	Identifier	res		6344364	0					
ANR	6344400	ReturnType	static void		6344364	1					
ANR	6344401	Identifier	get_union_val		6344364	2					
ANR	6344402	ParameterList	"void * type , int * res"		6344364	3					
ANR	6344403	Parameter	void * type	798:26:19755:19764	6344364	0	True				
ANR	6344404	ParameterType	void *		6344364	0					
ANR	6344405	Identifier	type		6344364	1					
ANR	6344406	Parameter	int * res	798:38:19767:19774	6344364	1	True				
ANR	6344407	ParameterType	int *		6344364	0					
ANR	6344408	Identifier	res		6344364	1					
ANR	6344409	CFGEntryNode	ENTRY		6344364		True				
ANR	6344410	CFGExitNode	EXIT		6344364		True				
ANR	6344411	Symbol	res		6344364						
ANR	6344412	Symbol	lf_union		6344364						
ANR	6344413	Symbol	t		6344364						
ANR	6344414	Symbol	& lf_union -> size		6344364						
ANR	6344415	Symbol	t -> type_info		6344364						
ANR	6344416	Symbol	type		6344364						
ANR	6344417	Symbol	* t		6344364						
ANR	6344418	Function	free_sval	825:0:20393:21564							
ANR	6344419	FunctionDef	free_sval (SVal * val)		6344418	0					
ANR	6344420	CompoundStatement		825:33:20426:21564	6344418	0					
ANR	6344421	IfStatement	if ( val -> value_or_type < eLF_CHAR )		6344418	0					
ANR	6344422	Condition	val -> value_or_type < eLF_CHAR	826:5:20433:20461	6344418	0	True				
ANR	6344423	RelationalExpression	val -> value_or_type < eLF_CHAR		6344418	0		<			
ANR	6344424	PtrMemberAccess	val -> value_or_type		6344418	0					
ANR	6344425	Identifier	val		6344418	0					
ANR	6344426	Identifier	value_or_type		6344418	1					
ANR	6344427	Identifier	eLF_CHAR		6344418	1					
ANR	6344428	CompoundStatement		3:2:41:56	6344418	1					
ANR	6344429	IdentifierDeclStatement	SCString * scstr ;	827:2:20468:20483	6344418	0	True				
ANR	6344430	IdentifierDecl	* scstr		6344418	0					
ANR	6344431	IdentifierDeclType	SCString *		6344418	0					
ANR	6344432	Identifier	scstr		6344418	1					
ANR	6344433	ExpressionStatement	scstr = ( SCString * ) val -> name_or_val	828:2:20487:20524	6344418	1	True				
ANR	6344434	AssignmentExpression	scstr = ( SCString * ) val -> name_or_val		6344418	0		=			
ANR	6344435	Identifier	scstr		6344418	0					
ANR	6344436	CastExpression	( SCString * ) val -> name_or_val		6344418	1					
ANR	6344437	CastTarget	SCString *		6344418	0					
ANR	6344438	PtrMemberAccess	val -> name_or_val		6344418	1					
ANR	6344439	Identifier	val		6344418	0					
ANR	6344440	Identifier	name_or_val		6344418	1					
ANR	6344441	ExpressionStatement	R_FREE ( scstr -> name )	829:2:20528:20547	6344418	2	True				
ANR	6344442	CallExpression	R_FREE ( scstr -> name )		6344418	0					
ANR	6344443	Callee	R_FREE		6344418	0					
ANR	6344444	Identifier	R_FREE		6344418	0					
ANR	6344445	ArgumentList	scstr -> name		6344418	1					
ANR	6344446	Argument	scstr -> name		6344418	0					
ANR	6344447	PtrMemberAccess	scstr -> name		6344418	0					
ANR	6344448	Identifier	scstr		6344418	0					
ANR	6344449	Identifier	name		6344418	1					
ANR	6344450	ExpressionStatement	R_FREE ( val -> name_or_val )	830:2:20551:20575	6344418	3	True				
ANR	6344451	CallExpression	R_FREE ( val -> name_or_val )		6344418	0					
ANR	6344452	Callee	R_FREE		6344418	0					
ANR	6344453	Identifier	R_FREE		6344418	0					
ANR	6344454	ArgumentList	val -> name_or_val		6344418	1					
ANR	6344455	Argument	val -> name_or_val		6344418	0					
ANR	6344456	PtrMemberAccess	val -> name_or_val		6344418	0					
ANR	6344457	Identifier	val		6344418	0					
ANR	6344458	Identifier	name_or_val		6344418	1					
ANR	6344459	ElseStatement	else		6344418	0					
ANR	6344460	CompoundStatement		7:8:158:158	6344418	0					
ANR	6344461	SwitchStatement	switch ( val -> value_or_type )		6344418	0					
ANR	6344462	Condition	val -> value_or_type	832:10:20597:20614	6344418	0	True				
ANR	6344463	PtrMemberAccess	val -> value_or_type		6344418	0					
ANR	6344464	Identifier	val		6344418	0					
ANR	6344465	Identifier	value_or_type		6344418	1					
ANR	6344466	CompoundStatement		8:30:190:190	6344418	1					
ANR	6344467	Label	case eLF_ULONG :	833:2:20621:20635	6344418	0	True				
ANR	6344468	Identifier	eLF_ULONG		6344418	0					
ANR	6344469	CompoundStatement		11:3:217:240	6344418	1					
ANR	6344470	IdentifierDeclStatement	SVal_LF_ULONG * lf_ulong ;	835:3:20644:20667	6344418	0	True				
ANR	6344471	IdentifierDecl	* lf_ulong		6344418	0					
ANR	6344472	IdentifierDeclType	SVal_LF_ULONG *		6344418	0					
ANR	6344473	Identifier	lf_ulong		6344418	1					
ANR	6344474	ExpressionStatement	lf_ulong = ( SVal_LF_ULONG * ) val -> name_or_val	836:3:20672:20717	6344418	1	True				
ANR	6344475	AssignmentExpression	lf_ulong = ( SVal_LF_ULONG * ) val -> name_or_val		6344418	0		=			
ANR	6344476	Identifier	lf_ulong		6344418	0					
ANR	6344477	CastExpression	( SVal_LF_ULONG * ) val -> name_or_val		6344418	1					
ANR	6344478	CastTarget	SVal_LF_ULONG *		6344418	0					
ANR	6344479	PtrMemberAccess	val -> name_or_val		6344418	1					
ANR	6344480	Identifier	val		6344418	0					
ANR	6344481	Identifier	name_or_val		6344418	1					
ANR	6344482	ExpressionStatement	R_FREE ( lf_ulong -> name . name )	837:3:20722:20749	6344418	2	True				
ANR	6344483	CallExpression	R_FREE ( lf_ulong -> name . name )		6344418	0					
ANR	6344484	Callee	R_FREE		6344418	0					
ANR	6344485	Identifier	R_FREE		6344418	0					
ANR	6344486	ArgumentList	lf_ulong -> name . name		6344418	1					
ANR	6344487	Argument	lf_ulong -> name . name		6344418	0					
ANR	6344488	MemberAccess	lf_ulong -> name . name		6344418	0					
ANR	6344489	PtrMemberAccess	lf_ulong -> name		6344418	0					
ANR	6344490	Identifier	lf_ulong		6344418	0					
ANR	6344491	Identifier	name		6344418	1					
ANR	6344492	Identifier	name		6344418	1					
ANR	6344493	ExpressionStatement	R_FREE ( val -> name_or_val )	838:3:20754:20778	6344418	3	True				
ANR	6344494	CallExpression	R_FREE ( val -> name_or_val )		6344418	0					
ANR	6344495	Callee	R_FREE		6344418	0					
ANR	6344496	Identifier	R_FREE		6344418	0					
ANR	6344497	ArgumentList	val -> name_or_val		6344418	1					
ANR	6344498	Argument	val -> name_or_val		6344418	0					
ANR	6344499	PtrMemberAccess	val -> name_or_val		6344418	0					
ANR	6344500	Identifier	val		6344418	0					
ANR	6344501	Identifier	name_or_val		6344418	1					
ANR	6344502	BreakStatement	break ;	839:3:20783:20788	6344418	4	True				
ANR	6344503	Label	case eLF_LONG :	841:2:20796:20809	6344418	2	True				
ANR	6344504	Identifier	eLF_LONG		6344418	0					
ANR	6344505	CompoundStatement		19:3:391:412	6344418	3					
ANR	6344506	IdentifierDeclStatement	SVal_LF_LONG * lf_long ;	843:3:20818:20839	6344418	0	True				
ANR	6344507	IdentifierDecl	* lf_long		6344418	0					
ANR	6344508	IdentifierDeclType	SVal_LF_LONG *		6344418	0					
ANR	6344509	Identifier	lf_long		6344418	1					
ANR	6344510	ExpressionStatement	lf_long = ( SVal_LF_LONG * ) val -> name_or_val	844:3:20844:20887	6344418	1	True				
ANR	6344511	AssignmentExpression	lf_long = ( SVal_LF_LONG * ) val -> name_or_val		6344418	0		=			
ANR	6344512	Identifier	lf_long		6344418	0					
ANR	6344513	CastExpression	( SVal_LF_LONG * ) val -> name_or_val		6344418	1					
ANR	6344514	CastTarget	SVal_LF_LONG *		6344418	0					
ANR	6344515	PtrMemberAccess	val -> name_or_val		6344418	1					
ANR	6344516	Identifier	val		6344418	0					
ANR	6344517	Identifier	name_or_val		6344418	1					
ANR	6344518	ExpressionStatement	R_FREE ( lf_long -> name . name )	845:3:20892:20918	6344418	2	True				
ANR	6344519	CallExpression	R_FREE ( lf_long -> name . name )		6344418	0					
ANR	6344520	Callee	R_FREE		6344418	0					
ANR	6344521	Identifier	R_FREE		6344418	0					
ANR	6344522	ArgumentList	lf_long -> name . name		6344418	1					
ANR	6344523	Argument	lf_long -> name . name		6344418	0					
ANR	6344524	MemberAccess	lf_long -> name . name		6344418	0					
ANR	6344525	PtrMemberAccess	lf_long -> name		6344418	0					
ANR	6344526	Identifier	lf_long		6344418	0					
ANR	6344527	Identifier	name		6344418	1					
ANR	6344528	Identifier	name		6344418	1					
ANR	6344529	ExpressionStatement	R_FREE ( val -> name_or_val )	846:3:20923:20947	6344418	3	True				
ANR	6344530	CallExpression	R_FREE ( val -> name_or_val )		6344418	0					
ANR	6344531	Callee	R_FREE		6344418	0					
ANR	6344532	Identifier	R_FREE		6344418	0					
ANR	6344533	ArgumentList	val -> name_or_val		6344418	1					
ANR	6344534	Argument	val -> name_or_val		6344418	0					
ANR	6344535	PtrMemberAccess	val -> name_or_val		6344418	0					
ANR	6344536	Identifier	val		6344418	0					
ANR	6344537	Identifier	name_or_val		6344418	1					
ANR	6344538	BreakStatement	break ;	847:3:20952:20957	6344418	4	True				
ANR	6344539	Label	case eLF_SHORT :	849:2:20965:20979	6344418	4	True				
ANR	6344540	Identifier	eLF_SHORT		6344418	0					
ANR	6344541	CompoundStatement		27:3:561:584	6344418	5					
ANR	6344542	IdentifierDeclStatement	SVal_LF_SHORT * lf_short ;	851:3:20988:21011	6344418	0	True				
ANR	6344543	IdentifierDecl	* lf_short		6344418	0					
ANR	6344544	IdentifierDeclType	SVal_LF_SHORT *		6344418	0					
ANR	6344545	Identifier	lf_short		6344418	1					
ANR	6344546	ExpressionStatement	lf_short = ( SVal_LF_SHORT * ) val -> name_or_val	852:3:21016:21061	6344418	1	True				
ANR	6344547	AssignmentExpression	lf_short = ( SVal_LF_SHORT * ) val -> name_or_val		6344418	0		=			
ANR	6344548	Identifier	lf_short		6344418	0					
ANR	6344549	CastExpression	( SVal_LF_SHORT * ) val -> name_or_val		6344418	1					
ANR	6344550	CastTarget	SVal_LF_SHORT *		6344418	0					
ANR	6344551	PtrMemberAccess	val -> name_or_val		6344418	1					
ANR	6344552	Identifier	val		6344418	0					
ANR	6344553	Identifier	name_or_val		6344418	1					
ANR	6344554	ExpressionStatement	R_FREE ( lf_short -> name . name )	853:3:21066:21093	6344418	2	True				
ANR	6344555	CallExpression	R_FREE ( lf_short -> name . name )		6344418	0					
ANR	6344556	Callee	R_FREE		6344418	0					
ANR	6344557	Identifier	R_FREE		6344418	0					
ANR	6344558	ArgumentList	lf_short -> name . name		6344418	1					
ANR	6344559	Argument	lf_short -> name . name		6344418	0					
ANR	6344560	MemberAccess	lf_short -> name . name		6344418	0					
ANR	6344561	PtrMemberAccess	lf_short -> name		6344418	0					
ANR	6344562	Identifier	lf_short		6344418	0					
ANR	6344563	Identifier	name		6344418	1					
ANR	6344564	Identifier	name		6344418	1					
ANR	6344565	ExpressionStatement	R_FREE ( val -> name_or_val )	854:3:21098:21122	6344418	3	True				
ANR	6344566	CallExpression	R_FREE ( val -> name_or_val )		6344418	0					
ANR	6344567	Callee	R_FREE		6344418	0					
ANR	6344568	Identifier	R_FREE		6344418	0					
ANR	6344569	ArgumentList	val -> name_or_val		6344418	1					
ANR	6344570	Argument	val -> name_or_val		6344418	0					
ANR	6344571	PtrMemberAccess	val -> name_or_val		6344418	0					
ANR	6344572	Identifier	val		6344418	0					
ANR	6344573	Identifier	name_or_val		6344418	1					
ANR	6344574	BreakStatement	break ;	855:3:21127:21132	6344418	4	True				
ANR	6344575	Label	case eLF_USHORT :	857:2:21140:21155	6344418	6	True				
ANR	6344576	Identifier	eLF_USHORT		6344418	0					
ANR	6344577	CompoundStatement		35:3:737:762	6344418	7					
ANR	6344578	IdentifierDeclStatement	SVal_LF_USHORT * lf_ushort ;	859:3:21164:21189	6344418	0	True				
ANR	6344579	IdentifierDecl	* lf_ushort		6344418	0					
ANR	6344580	IdentifierDeclType	SVal_LF_USHORT *		6344418	0					
ANR	6344581	Identifier	lf_ushort		6344418	1					
ANR	6344582	ExpressionStatement	lf_ushort = ( SVal_LF_USHORT * ) val -> name_or_val	860:3:21194:21241	6344418	1	True				
ANR	6344583	AssignmentExpression	lf_ushort = ( SVal_LF_USHORT * ) val -> name_or_val		6344418	0		=			
ANR	6344584	Identifier	lf_ushort		6344418	0					
ANR	6344585	CastExpression	( SVal_LF_USHORT * ) val -> name_or_val		6344418	1					
ANR	6344586	CastTarget	SVal_LF_USHORT *		6344418	0					
ANR	6344587	PtrMemberAccess	val -> name_or_val		6344418	1					
ANR	6344588	Identifier	val		6344418	0					
ANR	6344589	Identifier	name_or_val		6344418	1					
ANR	6344590	ExpressionStatement	R_FREE ( lf_ushort -> name . name )	861:3:21246:21274	6344418	2	True				
ANR	6344591	CallExpression	R_FREE ( lf_ushort -> name . name )		6344418	0					
ANR	6344592	Callee	R_FREE		6344418	0					
ANR	6344593	Identifier	R_FREE		6344418	0					
ANR	6344594	ArgumentList	lf_ushort -> name . name		6344418	1					
ANR	6344595	Argument	lf_ushort -> name . name		6344418	0					
ANR	6344596	MemberAccess	lf_ushort -> name . name		6344418	0					
ANR	6344597	PtrMemberAccess	lf_ushort -> name		6344418	0					
ANR	6344598	Identifier	lf_ushort		6344418	0					
ANR	6344599	Identifier	name		6344418	1					
ANR	6344600	Identifier	name		6344418	1					
ANR	6344601	ExpressionStatement	R_FREE ( val -> name_or_val )	862:3:21279:21303	6344418	3	True				
ANR	6344602	CallExpression	R_FREE ( val -> name_or_val )		6344418	0					
ANR	6344603	Callee	R_FREE		6344418	0					
ANR	6344604	Identifier	R_FREE		6344418	0					
ANR	6344605	ArgumentList	val -> name_or_val		6344418	1					
ANR	6344606	Argument	val -> name_or_val		6344418	0					
ANR	6344607	PtrMemberAccess	val -> name_or_val		6344418	0					
ANR	6344608	Identifier	val		6344418	0					
ANR	6344609	Identifier	name_or_val		6344418	1					
ANR	6344610	BreakStatement	break ;	863:3:21308:21313	6344418	4	True				
ANR	6344611	Label	case eLF_CHAR :	865:2:21321:21334	6344418	8	True				
ANR	6344612	Identifier	eLF_CHAR		6344418	0					
ANR	6344613	CompoundStatement		43:3:916:937	6344418	9					
ANR	6344614	IdentifierDeclStatement	SVal_LF_CHAR * lf_char ;	867:3:21343:21364	6344418	0	True				
ANR	6344615	IdentifierDecl	* lf_char		6344418	0					
ANR	6344616	IdentifierDeclType	SVal_LF_CHAR *		6344418	0					
ANR	6344617	Identifier	lf_char		6344418	1					
ANR	6344618	ExpressionStatement	lf_char = ( SVal_LF_CHAR * ) val -> name_or_val	868:3:21369:21412	6344418	1	True				
ANR	6344619	AssignmentExpression	lf_char = ( SVal_LF_CHAR * ) val -> name_or_val		6344418	0		=			
ANR	6344620	Identifier	lf_char		6344418	0					
ANR	6344621	CastExpression	( SVal_LF_CHAR * ) val -> name_or_val		6344418	1					
ANR	6344622	CastTarget	SVal_LF_CHAR *		6344418	0					
ANR	6344623	PtrMemberAccess	val -> name_or_val		6344418	1					
ANR	6344624	Identifier	val		6344418	0					
ANR	6344625	Identifier	name_or_val		6344418	1					
ANR	6344626	ExpressionStatement	R_FREE ( lf_char -> name . name )	869:3:21417:21443	6344418	2	True				
ANR	6344627	CallExpression	R_FREE ( lf_char -> name . name )		6344418	0					
ANR	6344628	Callee	R_FREE		6344418	0					
ANR	6344629	Identifier	R_FREE		6344418	0					
ANR	6344630	ArgumentList	lf_char -> name . name		6344418	1					
ANR	6344631	Argument	lf_char -> name . name		6344418	0					
ANR	6344632	MemberAccess	lf_char -> name . name		6344418	0					
ANR	6344633	PtrMemberAccess	lf_char -> name		6344418	0					
ANR	6344634	Identifier	lf_char		6344418	0					
ANR	6344635	Identifier	name		6344418	1					
ANR	6344636	Identifier	name		6344418	1					
ANR	6344637	ExpressionStatement	R_FREE ( val -> name_or_val )	870:3:21448:21472	6344418	3	True				
ANR	6344638	CallExpression	R_FREE ( val -> name_or_val )		6344418	0					
ANR	6344639	Callee	R_FREE		6344418	0					
ANR	6344640	Identifier	R_FREE		6344418	0					
ANR	6344641	ArgumentList	val -> name_or_val		6344418	1					
ANR	6344642	Argument	val -> name_or_val		6344418	0					
ANR	6344643	PtrMemberAccess	val -> name_or_val		6344418	0					
ANR	6344644	Identifier	val		6344418	0					
ANR	6344645	Identifier	name_or_val		6344418	1					
ANR	6344646	BreakStatement	break ;	871:3:21477:21482	6344418	4	True				
ANR	6344647	Label	default :	873:2:21490:21497	6344418	10	True				
ANR	6344648	Identifier	default		6344418	0					
ANR	6344649	ExpressionStatement	"printf ( ""free_sval()::not supproted type\\n"" )"	874:3:21502:21545	6344418	11	True				
ANR	6344650	CallExpression	"printf ( ""free_sval()::not supproted type\\n"" )"		6344418	0					
ANR	6344651	Callee	printf		6344418	0					
ANR	6344652	Identifier	printf		6344418	0					
ANR	6344653	ArgumentList	"""free_sval()::not supproted type\\n"""		6344418	1					
ANR	6344654	Argument	"""free_sval()::not supproted type\\n"""		6344418	0					
ANR	6344655	PrimaryExpression	"""free_sval()::not supproted type\\n"""		6344418	0					
ANR	6344656	BreakStatement	break ;	875:3:21550:21555	6344418	12	True				
ANR	6344657	ReturnType	static void		6344418	1					
ANR	6344658	Identifier	free_sval		6344418	2					
ANR	6344659	ParameterList	SVal * val		6344418	3					
ANR	6344660	Parameter	SVal * val	825:22:20415:20423	6344418	0	True				
ANR	6344661	ParameterType	SVal *		6344418	0					
ANR	6344662	Identifier	val		6344418	1					
ANR	6344663	CFGEntryNode	ENTRY		6344418		True				
ANR	6344664	CFGExitNode	EXIT		6344418		True				
ANR	6344665	Symbol	lf_long -> name . name		6344418						
ANR	6344666	Symbol	lf_short -> name . name		6344418						
ANR	6344667	Symbol	lf_char -> name . name		6344418						
ANR	6344668	Symbol	* val		6344418						
ANR	6344669	Symbol	eLF_CHAR		6344418						
ANR	6344670	Symbol	* scstr		6344418						
ANR	6344671	Symbol	lf_ushort -> name . name		6344418						
ANR	6344672	Symbol	lf_ulong		6344418						
ANR	6344673	Symbol	* lf_long		6344418						
ANR	6344674	Symbol	* lf_short		6344418						
ANR	6344675	Symbol	lf_ulong -> name . name		6344418						
ANR	6344676	Symbol	lf_ulong -> name		6344418						
ANR	6344677	Symbol	lf_ushort -> name		6344418						
ANR	6344678	Symbol	val		6344418						
ANR	6344679	Symbol	scstr		6344418						
ANR	6344680	Symbol	lf_char		6344418						
ANR	6344681	Symbol	lf_short		6344418						
ANR	6344682	Symbol	lf_char -> name		6344418						
ANR	6344683	Symbol	* lf_ushort		6344418						
ANR	6344684	Symbol	val -> value_or_type		6344418						
ANR	6344685	Symbol	* lf_ulong		6344418						
ANR	6344686	Symbol	val -> name_or_val		6344418						
ANR	6344687	Symbol	scstr -> name		6344418						
ANR	6344688	Symbol	lf_long -> name		6344418						
ANR	6344689	Symbol	lf_short -> name		6344418						
ANR	6344690	Symbol	lf_long		6344418						
ANR	6344691	Symbol	* lf_char		6344418						
ANR	6344692	Symbol	lf_ushort		6344418						
ANR	6344693	Function	free_lf_enumerate	880:0:21567:21762							
ANR	6344694	FunctionDef	free_lf_enumerate (void * type_info)		6344693	0					
ANR	6344695	CompoundStatement		880:47:21614:21762	6344693	0					
ANR	6344696	IdentifierDeclStatement	STypeInfo * typeInfo = ( STypeInfo * ) type_info ;	881:1:21617:21662	6344693	0	True				
ANR	6344697	IdentifierDecl	* typeInfo = ( STypeInfo * ) type_info		6344693	0					
ANR	6344698	IdentifierDeclType	STypeInfo *		6344693	0					
ANR	6344699	Identifier	typeInfo		6344693	1					
ANR	6344700	AssignmentExpression	* typeInfo = ( STypeInfo * ) type_info		6344693	2		=			
ANR	6344701	Identifier	typeInfo		6344693	0					
ANR	6344702	CastExpression	( STypeInfo * ) type_info		6344693	1					
ANR	6344703	CastTarget	STypeInfo *		6344693	0					
ANR	6344704	Identifier	type_info		6344693	1					
ANR	6344705	IdentifierDeclStatement	SLF_ENUMERATE * lf_en = ( SLF_ENUMERATE * ) typeInfo -> type_info ;	882:1:21665:21725	6344693	1	True				
ANR	6344706	IdentifierDecl	* lf_en = ( SLF_ENUMERATE * ) typeInfo -> type_info		6344693	0					
ANR	6344707	IdentifierDeclType	SLF_ENUMERATE *		6344693	0					
ANR	6344708	Identifier	lf_en		6344693	1					
ANR	6344709	AssignmentExpression	* lf_en = ( SLF_ENUMERATE * ) typeInfo -> type_info		6344693	2		=			
ANR	6344710	Identifier	lf_en		6344693	0					
ANR	6344711	CastExpression	( SLF_ENUMERATE * ) typeInfo -> type_info		6344693	1					
ANR	6344712	CastTarget	SLF_ENUMERATE *		6344693	0					
ANR	6344713	PtrMemberAccess	typeInfo -> type_info		6344693	1					
ANR	6344714	Identifier	typeInfo		6344693	0					
ANR	6344715	Identifier	type_info		6344693	1					
ANR	6344716	ExpressionStatement	free_sval ( & ( lf_en -> enum_value ) )	883:1:21728:21760	6344693	2	True				
ANR	6344717	CallExpression	free_sval ( & ( lf_en -> enum_value ) )		6344693	0					
ANR	6344718	Callee	free_sval		6344693	0					
ANR	6344719	Identifier	free_sval		6344693	0					
ANR	6344720	ArgumentList	& ( lf_en -> enum_value )		6344693	1					
ANR	6344721	Argument	& ( lf_en -> enum_value )		6344693	0					
ANR	6344722	UnaryOperationExpression	& ( lf_en -> enum_value )		6344693	0					
ANR	6344723	UnaryOperator	&		6344693	0					
ANR	6344724	PtrMemberAccess	lf_en -> enum_value		6344693	1					
ANR	6344725	Identifier	lf_en		6344693	0					
ANR	6344726	Identifier	enum_value		6344693	1					
ANR	6344727	ReturnType	static void		6344693	1					
ANR	6344728	Identifier	free_lf_enumerate		6344693	2					
ANR	6344729	ParameterList	void * type_info		6344693	3					
ANR	6344730	Parameter	void * type_info	880:30:21597:21611	6344693	0	True				
ANR	6344731	ParameterType	void *		6344693	0					
ANR	6344732	Identifier	type_info		6344693	1					
ANR	6344733	CFGEntryNode	ENTRY		6344693		True				
ANR	6344734	CFGExitNode	EXIT		6344693		True				
ANR	6344735	Symbol	& lf_en -> enum_value		6344693						
ANR	6344736	Symbol	type_info		6344693						
ANR	6344737	Symbol	typeInfo		6344693						
ANR	6344738	Symbol	* typeInfo		6344693						
ANR	6344739	Symbol	typeInfo -> type_info		6344693						
ANR	6344740	Symbol	lf_en		6344693						
ANR	6344741	Function	free_lf_nesttype	886:0:21765:21952							
ANR	6344742	FunctionDef	free_lf_nesttype (void * type_info)		6344741	0					
ANR	6344743	CompoundStatement		886:46:21811:21952	6344741	0					
ANR	6344744	IdentifierDeclStatement	STypeInfo * typeInfo = ( STypeInfo * ) type_info ;	887:1:21814:21859	6344741	0	True				
ANR	6344745	IdentifierDecl	* typeInfo = ( STypeInfo * ) type_info		6344741	0					
ANR	6344746	IdentifierDeclType	STypeInfo *		6344741	0					
ANR	6344747	Identifier	typeInfo		6344741	1					
ANR	6344748	AssignmentExpression	* typeInfo = ( STypeInfo * ) type_info		6344741	2		=			
ANR	6344749	Identifier	typeInfo		6344741	0					
ANR	6344750	CastExpression	( STypeInfo * ) type_info		6344741	1					
ANR	6344751	CastTarget	STypeInfo *		6344741	0					
ANR	6344752	Identifier	type_info		6344741	1					
ANR	6344753	IdentifierDeclStatement	SLF_NESTTYPE * lf_nest = ( SLF_NESTTYPE * ) typeInfo -> type_info ;	888:1:21862:21922	6344741	1	True				
ANR	6344754	IdentifierDecl	* lf_nest = ( SLF_NESTTYPE * ) typeInfo -> type_info		6344741	0					
ANR	6344755	IdentifierDeclType	SLF_NESTTYPE *		6344741	0					
ANR	6344756	Identifier	lf_nest		6344741	1					
ANR	6344757	AssignmentExpression	* lf_nest = ( SLF_NESTTYPE * ) typeInfo -> type_info		6344741	2		=			
ANR	6344758	Identifier	lf_nest		6344741	0					
ANR	6344759	CastExpression	( SLF_NESTTYPE * ) typeInfo -> type_info		6344741	1					
ANR	6344760	CastTarget	SLF_NESTTYPE *		6344741	0					
ANR	6344761	PtrMemberAccess	typeInfo -> type_info		6344741	1					
ANR	6344762	Identifier	typeInfo		6344741	0					
ANR	6344763	Identifier	type_info		6344741	1					
ANR	6344764	ExpressionStatement	free ( lf_nest -> name . name )	889:1:21925:21950	6344741	2	True				
ANR	6344765	CallExpression	free ( lf_nest -> name . name )		6344741	0					
ANR	6344766	Callee	free		6344741	0					
ANR	6344767	Identifier	free		6344741	0					
ANR	6344768	ArgumentList	lf_nest -> name . name		6344741	1					
ANR	6344769	Argument	lf_nest -> name . name		6344741	0					
ANR	6344770	MemberAccess	lf_nest -> name . name		6344741	0					
ANR	6344771	PtrMemberAccess	lf_nest -> name		6344741	0					
ANR	6344772	Identifier	lf_nest		6344741	0					
ANR	6344773	Identifier	name		6344741	1					
ANR	6344774	Identifier	name		6344741	1					
ANR	6344775	ReturnType	static void		6344741	1					
ANR	6344776	Identifier	free_lf_nesttype		6344741	2					
ANR	6344777	ParameterList	void * type_info		6344741	3					
ANR	6344778	Parameter	void * type_info	886:29:21794:21808	6344741	0	True				
ANR	6344779	ParameterType	void *		6344741	0					
ANR	6344780	Identifier	type_info		6344741	1					
ANR	6344781	CFGEntryNode	ENTRY		6344741		True				
ANR	6344782	CFGExitNode	EXIT		6344741		True				
ANR	6344783	Symbol	lf_nest		6344741						
ANR	6344784	Symbol	type_info		6344741						
ANR	6344785	Symbol	typeInfo		6344741						
ANR	6344786	Symbol	lf_nest -> name		6344741						
ANR	6344787	Symbol	lf_nest -> name . name		6344741						
ANR	6344788	Symbol	* lf_nest		6344741						
ANR	6344789	Symbol	typeInfo -> type_info		6344741						
ANR	6344790	Symbol	* typeInfo		6344741						
ANR	6344791	Function	free_lf_method	892:0:21955:22136							
ANR	6344792	FunctionDef	free_lf_method (void * type_info)		6344791	0					
ANR	6344793	CompoundStatement		892:44:21999:22136	6344791	0					
ANR	6344794	IdentifierDeclStatement	STypeInfo * typeInfo = ( STypeInfo * ) type_info ;	893:1:22002:22047	6344791	0	True				
ANR	6344795	IdentifierDecl	* typeInfo = ( STypeInfo * ) type_info		6344791	0					
ANR	6344796	IdentifierDeclType	STypeInfo *		6344791	0					
ANR	6344797	Identifier	typeInfo		6344791	1					
ANR	6344798	AssignmentExpression	* typeInfo = ( STypeInfo * ) type_info		6344791	2		=			
ANR	6344799	Identifier	typeInfo		6344791	0					
ANR	6344800	CastExpression	( STypeInfo * ) type_info		6344791	1					
ANR	6344801	CastTarget	STypeInfo *		6344791	0					
ANR	6344802	Identifier	type_info		6344791	1					
ANR	6344803	IdentifierDeclStatement	SLF_METHOD * lf_meth = ( SLF_METHOD * ) typeInfo -> type_info ;	894:1:22050:22106	6344791	1	True				
ANR	6344804	IdentifierDecl	* lf_meth = ( SLF_METHOD * ) typeInfo -> type_info		6344791	0					
ANR	6344805	IdentifierDeclType	SLF_METHOD *		6344791	0					
ANR	6344806	Identifier	lf_meth		6344791	1					
ANR	6344807	AssignmentExpression	* lf_meth = ( SLF_METHOD * ) typeInfo -> type_info		6344791	2		=			
ANR	6344808	Identifier	lf_meth		6344791	0					
ANR	6344809	CastExpression	( SLF_METHOD * ) typeInfo -> type_info		6344791	1					
ANR	6344810	CastTarget	SLF_METHOD *		6344791	0					
ANR	6344811	PtrMemberAccess	typeInfo -> type_info		6344791	1					
ANR	6344812	Identifier	typeInfo		6344791	0					
ANR	6344813	Identifier	type_info		6344791	1					
ANR	6344814	ExpressionStatement	free ( lf_meth -> name . name )	895:1:22109:22134	6344791	2	True				
ANR	6344815	CallExpression	free ( lf_meth -> name . name )		6344791	0					
ANR	6344816	Callee	free		6344791	0					
ANR	6344817	Identifier	free		6344791	0					
ANR	6344818	ArgumentList	lf_meth -> name . name		6344791	1					
ANR	6344819	Argument	lf_meth -> name . name		6344791	0					
ANR	6344820	MemberAccess	lf_meth -> name . name		6344791	0					
ANR	6344821	PtrMemberAccess	lf_meth -> name		6344791	0					
ANR	6344822	Identifier	lf_meth		6344791	0					
ANR	6344823	Identifier	name		6344791	1					
ANR	6344824	Identifier	name		6344791	1					
ANR	6344825	ReturnType	static void		6344791	1					
ANR	6344826	Identifier	free_lf_method		6344791	2					
ANR	6344827	ParameterList	void * type_info		6344791	3					
ANR	6344828	Parameter	void * type_info	892:27:21982:21996	6344791	0	True				
ANR	6344829	ParameterType	void *		6344791	0					
ANR	6344830	Identifier	type_info		6344791	1					
ANR	6344831	CFGEntryNode	ENTRY		6344791		True				
ANR	6344832	CFGExitNode	EXIT		6344791		True				
ANR	6344833	Symbol	type_info		6344791						
ANR	6344834	Symbol	typeInfo		6344791						
ANR	6344835	Symbol	* lf_meth		6344791						
ANR	6344836	Symbol	lf_meth -> name		6344791						
ANR	6344837	Symbol	* typeInfo		6344791						
ANR	6344838	Symbol	typeInfo -> type_info		6344791						
ANR	6344839	Symbol	lf_meth -> name . name		6344791						
ANR	6344840	Symbol	lf_meth		6344791						
ANR	6344841	Function	free_lf_member	898:0:22139:22321							
ANR	6344842	FunctionDef	free_lf_member (void * type_info)		6344841	0					
ANR	6344843	CompoundStatement		898:44:22183:22321	6344841	0					
ANR	6344844	IdentifierDeclStatement	STypeInfo * typeInfo = ( STypeInfo * ) type_info ;	899:1:22186:22231	6344841	0	True				
ANR	6344845	IdentifierDecl	* typeInfo = ( STypeInfo * ) type_info		6344841	0					
ANR	6344846	IdentifierDeclType	STypeInfo *		6344841	0					
ANR	6344847	Identifier	typeInfo		6344841	1					
ANR	6344848	AssignmentExpression	* typeInfo = ( STypeInfo * ) type_info		6344841	2		=			
ANR	6344849	Identifier	typeInfo		6344841	0					
ANR	6344850	CastExpression	( STypeInfo * ) type_info		6344841	1					
ANR	6344851	CastTarget	STypeInfo *		6344841	0					
ANR	6344852	Identifier	type_info		6344841	1					
ANR	6344853	IdentifierDeclStatement	SLF_MEMBER * lf_mem = ( SLF_MEMBER * ) typeInfo -> type_info ;	900:1:22234:22289	6344841	1	True				
ANR	6344854	IdentifierDecl	* lf_mem = ( SLF_MEMBER * ) typeInfo -> type_info		6344841	0					
ANR	6344855	IdentifierDeclType	SLF_MEMBER *		6344841	0					
ANR	6344856	Identifier	lf_mem		6344841	1					
ANR	6344857	AssignmentExpression	* lf_mem = ( SLF_MEMBER * ) typeInfo -> type_info		6344841	2		=			
ANR	6344858	Identifier	lf_mem		6344841	0					
ANR	6344859	CastExpression	( SLF_MEMBER * ) typeInfo -> type_info		6344841	1					
ANR	6344860	CastTarget	SLF_MEMBER *		6344841	0					
ANR	6344861	PtrMemberAccess	typeInfo -> type_info		6344841	1					
ANR	6344862	Identifier	typeInfo		6344841	0					
ANR	6344863	Identifier	type_info		6344841	1					
ANR	6344864	ExpressionStatement	free_sval ( & lf_mem -> offset )	901:1:22292:22319	6344841	2	True				
ANR	6344865	CallExpression	free_sval ( & lf_mem -> offset )		6344841	0					
ANR	6344866	Callee	free_sval		6344841	0					
ANR	6344867	Identifier	free_sval		6344841	0					
ANR	6344868	ArgumentList	& lf_mem -> offset		6344841	1					
ANR	6344869	Argument	& lf_mem -> offset		6344841	0					
ANR	6344870	UnaryOperationExpression	& lf_mem -> offset		6344841	0					
ANR	6344871	UnaryOperator	&		6344841	0					
ANR	6344872	PtrMemberAccess	lf_mem -> offset		6344841	1					
ANR	6344873	Identifier	lf_mem		6344841	0					
ANR	6344874	Identifier	offset		6344841	1					
ANR	6344875	ReturnType	static void		6344841	1					
ANR	6344876	Identifier	free_lf_member		6344841	2					
ANR	6344877	ParameterList	void * type_info		6344841	3					
ANR	6344878	Parameter	void * type_info	898:27:22166:22180	6344841	0	True				
ANR	6344879	ParameterType	void *		6344841	0					
ANR	6344880	Identifier	type_info		6344841	1					
ANR	6344881	CFGEntryNode	ENTRY		6344841		True				
ANR	6344882	CFGExitNode	EXIT		6344841		True				
ANR	6344883	Symbol	type_info		6344841						
ANR	6344884	Symbol	typeInfo		6344841						
ANR	6344885	Symbol	lf_mem		6344841						
ANR	6344886	Symbol	& lf_mem -> offset		6344841						
ANR	6344887	Symbol	* typeInfo		6344841						
ANR	6344888	Symbol	typeInfo -> type_info		6344841						
ANR	6344889	Function	free_lf_fieldlist	904:0:22324:22832							
ANR	6344890	FunctionDef	free_lf_fieldlist (void * type)		6344889	0					
ANR	6344891	CompoundStatement		904:42:22366:22832	6344889	0					
ANR	6344892	IdentifierDeclStatement	STypeInfo * t = ( STypeInfo * ) type ;	905:1:22369:22402	6344889	0	True				
ANR	6344893	IdentifierDecl	* t = ( STypeInfo * ) type		6344889	0					
ANR	6344894	IdentifierDeclType	STypeInfo *		6344889	0					
ANR	6344895	Identifier	t		6344889	1					
ANR	6344896	AssignmentExpression	* t = ( STypeInfo * ) type		6344889	2		=			
ANR	6344897	Identifier	t		6344889	0					
ANR	6344898	CastExpression	( STypeInfo * ) type		6344889	1					
ANR	6344899	CastTarget	STypeInfo *		6344889	0					
ANR	6344900	Identifier	type		6344889	1					
ANR	6344901	IdentifierDeclStatement	SLF_FIELDLIST * lf_fieldlist = ( SLF_FIELDLIST * ) t -> type_info ;	906:1:22405:22465	6344889	1	True				
ANR	6344902	IdentifierDecl	* lf_fieldlist = ( SLF_FIELDLIST * ) t -> type_info		6344889	0					
ANR	6344903	IdentifierDeclType	SLF_FIELDLIST *		6344889	0					
ANR	6344904	Identifier	lf_fieldlist		6344889	1					
ANR	6344905	AssignmentExpression	* lf_fieldlist = ( SLF_FIELDLIST * ) t -> type_info		6344889	2		=			
ANR	6344906	Identifier	lf_fieldlist		6344889	0					
ANR	6344907	CastExpression	( SLF_FIELDLIST * ) t -> type_info		6344889	1					
ANR	6344908	CastTarget	SLF_FIELDLIST *		6344889	0					
ANR	6344909	PtrMemberAccess	t -> type_info		6344889	1					
ANR	6344910	Identifier	t		6344889	0					
ANR	6344911	Identifier	type_info		6344889	1					
ANR	6344912	IdentifierDeclStatement	RListIter * it ;	907:1:22468:22481	6344889	2	True				
ANR	6344913	IdentifierDecl	* it		6344889	0					
ANR	6344914	IdentifierDeclType	RListIter *		6344889	0					
ANR	6344915	Identifier	it		6344889	1					
ANR	6344916	IdentifierDeclStatement	STypeInfo * type_info = 0 ;	908:1:22484:22508	6344889	3	True				
ANR	6344917	IdentifierDecl	* type_info = 0		6344889	0					
ANR	6344918	IdentifierDeclType	STypeInfo *		6344889	0					
ANR	6344919	Identifier	type_info		6344889	1					
ANR	6344920	AssignmentExpression	* type_info = 0		6344889	2		=			
ANR	6344921	Identifier	type_info		6344889	0					
ANR	6344922	PrimaryExpression	0		6344889	1					
ANR	6344923	ExpressionStatement	it = r_list_iterator ( lf_fieldlist -> substructs )	910:1:22512:22558	6344889	4	True				
ANR	6344924	AssignmentExpression	it = r_list_iterator ( lf_fieldlist -> substructs )		6344889	0		=			
ANR	6344925	Identifier	it		6344889	0					
ANR	6344926	CallExpression	r_list_iterator ( lf_fieldlist -> substructs )		6344889	1					
ANR	6344927	Callee	r_list_iterator		6344889	0					
ANR	6344928	Identifier	r_list_iterator		6344889	0					
ANR	6344929	ArgumentList	lf_fieldlist -> substructs		6344889	1					
ANR	6344930	Argument	lf_fieldlist -> substructs		6344889	0					
ANR	6344931	PtrMemberAccess	lf_fieldlist -> substructs		6344889	0					
ANR	6344932	Identifier	lf_fieldlist		6344889	0					
ANR	6344933	Identifier	substructs		6344889	1					
ANR	6344934	WhileStatement	while ( r_list_iter_next ( it ) )		6344889	5					
ANR	6344935	Condition	r_list_iter_next ( it )	911:8:22568:22587	6344889	0	True				
ANR	6344936	CallExpression	r_list_iter_next ( it )		6344889	0					
ANR	6344937	Callee	r_list_iter_next		6344889	0					
ANR	6344938	Identifier	r_list_iter_next		6344889	0					
ANR	6344939	ArgumentList	it		6344889	1					
ANR	6344940	Argument	it		6344889	0					
ANR	6344941	Identifier	it		6344889	0					
ANR	6344942	CompoundStatement		8:30:223:223	6344889	1					
ANR	6344943	ExpressionStatement	type_info = ( STypeInfo * ) r_list_iter_get ( it )	912:2:22594:22639	6344889	0	True				
ANR	6344944	AssignmentExpression	type_info = ( STypeInfo * ) r_list_iter_get ( it )		6344889	0		=			
ANR	6344945	Identifier	type_info		6344889	0					
ANR	6344946	CastExpression	( STypeInfo * ) r_list_iter_get ( it )		6344889	1					
ANR	6344947	CastTarget	STypeInfo *		6344889	0					
ANR	6344948	CallExpression	r_list_iter_get ( it )		6344889	1					
ANR	6344949	Callee	r_list_iter_get		6344889	0					
ANR	6344950	Identifier	r_list_iter_get		6344889	0					
ANR	6344951	ArgumentList	it		6344889	1					
ANR	6344952	Argument	it		6344889	0					
ANR	6344953	Identifier	it		6344889	0					
ANR	6344954	IfStatement	if ( type_info -> free_ )		6344889	1					
ANR	6344955	Condition	type_info -> free_	913:6:22647:22662	6344889	0	True				
ANR	6344956	PtrMemberAccess	type_info -> free_		6344889	0					
ANR	6344957	Identifier	type_info		6344889	0					
ANR	6344958	Identifier	free_		6344889	1					
ANR	6344959	CompoundStatement		10:24:298:298	6344889	1					
ANR	6344960	ExpressionStatement	type_info -> free_ ( type_info )	914:3:22670:22698	6344889	0	True				
ANR	6344961	CallExpression	type_info -> free_ ( type_info )		6344889	0					
ANR	6344962	Callee	type_info -> free_		6344889	0					
ANR	6344963	PtrMemberAccess	type_info -> free_		6344889	0					
ANR	6344964	Identifier	type_info		6344889	0					
ANR	6344965	Identifier	free_		6344889	1					
ANR	6344966	ArgumentList	type_info		6344889	1					
ANR	6344967	Argument	type_info		6344889	0					
ANR	6344968	Identifier	type_info		6344889	0					
ANR	6344969	IfStatement	if ( type_info -> type_info )		6344889	2					
ANR	6344970	Condition	type_info -> type_info	916:6:22710:22729	6344889	0	True				
ANR	6344971	PtrMemberAccess	type_info -> type_info		6344889	0					
ANR	6344972	Identifier	type_info		6344889	0					
ANR	6344973	Identifier	type_info		6344889	1					
ANR	6344974	CompoundStatement		13:28:365:365	6344889	1					
ANR	6344975	ExpressionStatement	free ( type_info -> type_info )	917:3:22737:22763	6344889	0	True				
ANR	6344976	CallExpression	free ( type_info -> type_info )		6344889	0					
ANR	6344977	Callee	free		6344889	0					
ANR	6344978	Identifier	free		6344889	0					
ANR	6344979	ArgumentList	type_info -> type_info		6344889	1					
ANR	6344980	Argument	type_info -> type_info		6344889	0					
ANR	6344981	PtrMemberAccess	type_info -> type_info		6344889	0					
ANR	6344982	Identifier	type_info		6344889	0					
ANR	6344983	Identifier	type_info		6344889	1					
ANR	6344984	ExpressionStatement	free ( type_info )	919:2:22771:22786	6344889	3	True				
ANR	6344985	CallExpression	free ( type_info )		6344889	0					
ANR	6344986	Callee	free		6344889	0					
ANR	6344987	Identifier	free		6344889	0					
ANR	6344988	ArgumentList	type_info		6344889	1					
ANR	6344989	Argument	type_info		6344889	0					
ANR	6344990	Identifier	type_info		6344889	0					
ANR	6344991	ExpressionStatement	r_list_free ( lf_fieldlist -> substructs )	921:1:22792:22830	6344889	6	True				
ANR	6344992	CallExpression	r_list_free ( lf_fieldlist -> substructs )		6344889	0					
ANR	6344993	Callee	r_list_free		6344889	0					
ANR	6344994	Identifier	r_list_free		6344889	0					
ANR	6344995	ArgumentList	lf_fieldlist -> substructs		6344889	1					
ANR	6344996	Argument	lf_fieldlist -> substructs		6344889	0					
ANR	6344997	PtrMemberAccess	lf_fieldlist -> substructs		6344889	0					
ANR	6344998	Identifier	lf_fieldlist		6344889	0					
ANR	6344999	Identifier	substructs		6344889	1					
ANR	6345000	ReturnType	static void		6344889	1					
ANR	6345001	Identifier	free_lf_fieldlist		6344889	2					
ANR	6345002	ParameterList	void * type		6344889	3					
ANR	6345003	Parameter	void * type	904:30:22354:22363	6344889	0	True				
ANR	6345004	ParameterType	void *		6344889	0					
ANR	6345005	Identifier	type		6344889	1					
ANR	6345006	CFGEntryNode	ENTRY		6344889		True				
ANR	6345007	CFGExitNode	EXIT		6344889		True				
ANR	6345008	Symbol	type_info -> free_		6344889						
ANR	6345009	Symbol	type_info		6344889						
ANR	6345010	Symbol	* lf_fieldlist		6344889						
ANR	6345011	Symbol	r_list_iter_next		6344889						
ANR	6345012	Symbol	lf_fieldlist -> substructs		6344889						
ANR	6345013	Symbol	r_list_iterator		6344889						
ANR	6345014	Symbol	r_list_iter_get		6344889						
ANR	6345015	Symbol	t -> type_info		6344889						
ANR	6345016	Symbol	it		6344889						
ANR	6345017	Symbol	type_info -> type_info		6344889						
ANR	6345018	Symbol	type		6344889						
ANR	6345019	Symbol	t		6344889						
ANR	6345020	Symbol	lf_fieldlist		6344889						
ANR	6345021	Symbol	* t		6344889						
ANR	6345022	Symbol	* type_info		6344889						
ANR	6345023	Function	free_lf_class	924:0:22835:22992							
ANR	6345024	FunctionDef	free_lf_class (void * type)		6345023	0					
ANR	6345025	CompoundStatement		924:38:22873:22992	6345023	0					
ANR	6345026	IdentifierDeclStatement	STypeInfo * t = ( STypeInfo * ) type ;	925:1:22876:22909	6345023	0	True				
ANR	6345027	IdentifierDecl	* t = ( STypeInfo * ) type		6345023	0					
ANR	6345028	IdentifierDeclType	STypeInfo *		6345023	0					
ANR	6345029	Identifier	t		6345023	1					
ANR	6345030	AssignmentExpression	* t = ( STypeInfo * ) type		6345023	2		=			
ANR	6345031	Identifier	t		6345023	0					
ANR	6345032	CastExpression	( STypeInfo * ) type		6345023	1					
ANR	6345033	CastTarget	STypeInfo *		6345023	0					
ANR	6345034	Identifier	type		6345023	1					
ANR	6345035	IdentifierDeclStatement	SLF_CLASS * lf_class = ( SLF_CLASS * ) t -> type_info ;	926:1:22912:22960	6345023	1	True				
ANR	6345036	IdentifierDecl	* lf_class = ( SLF_CLASS * ) t -> type_info		6345023	0					
ANR	6345037	IdentifierDeclType	SLF_CLASS *		6345023	0					
ANR	6345038	Identifier	lf_class		6345023	1					
ANR	6345039	AssignmentExpression	* lf_class = ( SLF_CLASS * ) t -> type_info		6345023	2		=			
ANR	6345040	Identifier	lf_class		6345023	0					
ANR	6345041	CastExpression	( SLF_CLASS * ) t -> type_info		6345023	1					
ANR	6345042	CastTarget	SLF_CLASS *		6345023	0					
ANR	6345043	PtrMemberAccess	t -> type_info		6345023	1					
ANR	6345044	Identifier	t		6345023	0					
ANR	6345045	Identifier	type_info		6345023	1					
ANR	6345046	ExpressionStatement	free_sval ( & lf_class -> size )	928:1:22964:22990	6345023	2	True				
ANR	6345047	CallExpression	free_sval ( & lf_class -> size )		6345023	0					
ANR	6345048	Callee	free_sval		6345023	0					
ANR	6345049	Identifier	free_sval		6345023	0					
ANR	6345050	ArgumentList	& lf_class -> size		6345023	1					
ANR	6345051	Argument	& lf_class -> size		6345023	0					
ANR	6345052	UnaryOperationExpression	& lf_class -> size		6345023	0					
ANR	6345053	UnaryOperator	&		6345023	0					
ANR	6345054	PtrMemberAccess	lf_class -> size		6345023	1					
ANR	6345055	Identifier	lf_class		6345023	0					
ANR	6345056	Identifier	size		6345023	1					
ANR	6345057	ReturnType	static void		6345023	1					
ANR	6345058	Identifier	free_lf_class		6345023	2					
ANR	6345059	ParameterList	void * type		6345023	3					
ANR	6345060	Parameter	void * type	924:26:22861:22870	6345023	0	True				
ANR	6345061	ParameterType	void *		6345023	0					
ANR	6345062	Identifier	type		6345023	1					
ANR	6345063	CFGEntryNode	ENTRY		6345023		True				
ANR	6345064	CFGExitNode	EXIT		6345023		True				
ANR	6345065	Symbol	t		6345023						
ANR	6345066	Symbol	& lf_class -> size		6345023						
ANR	6345067	Symbol	t -> type_info		6345023						
ANR	6345068	Symbol	type		6345023						
ANR	6345069	Symbol	* t		6345023						
ANR	6345070	Symbol	lf_class		6345023						
ANR	6345071	Function	free_lf_union	931:0:22995:23152							
ANR	6345072	FunctionDef	free_lf_union (void * type)		6345071	0					
ANR	6345073	CompoundStatement		931:38:23033:23152	6345071	0					
ANR	6345074	IdentifierDeclStatement	STypeInfo * t = ( STypeInfo * ) type ;	932:1:23036:23069	6345071	0	True				
ANR	6345075	IdentifierDecl	* t = ( STypeInfo * ) type		6345071	0					
ANR	6345076	IdentifierDeclType	STypeInfo *		6345071	0					
ANR	6345077	Identifier	t		6345071	1					
ANR	6345078	AssignmentExpression	* t = ( STypeInfo * ) type		6345071	2		=			
ANR	6345079	Identifier	t		6345071	0					
ANR	6345080	CastExpression	( STypeInfo * ) type		6345071	1					
ANR	6345081	CastTarget	STypeInfo *		6345071	0					
ANR	6345082	Identifier	type		6345071	1					
ANR	6345083	IdentifierDeclStatement	SLF_UNION * lf_union = ( SLF_UNION * ) t -> type_info ;	933:1:23072:23120	6345071	1	True				
ANR	6345084	IdentifierDecl	* lf_union = ( SLF_UNION * ) t -> type_info		6345071	0					
ANR	6345085	IdentifierDeclType	SLF_UNION *		6345071	0					
ANR	6345086	Identifier	lf_union		6345071	1					
ANR	6345087	AssignmentExpression	* lf_union = ( SLF_UNION * ) t -> type_info		6345071	2		=			
ANR	6345088	Identifier	lf_union		6345071	0					
ANR	6345089	CastExpression	( SLF_UNION * ) t -> type_info		6345071	1					
ANR	6345090	CastTarget	SLF_UNION *		6345071	0					
ANR	6345091	PtrMemberAccess	t -> type_info		6345071	1					
ANR	6345092	Identifier	t		6345071	0					
ANR	6345093	Identifier	type_info		6345071	1					
ANR	6345094	ExpressionStatement	free_sval ( & lf_union -> size )	934:1:23123:23150	6345071	2	True				
ANR	6345095	CallExpression	free_sval ( & lf_union -> size )		6345071	0					
ANR	6345096	Callee	free_sval		6345071	0					
ANR	6345097	Identifier	free_sval		6345071	0					
ANR	6345098	ArgumentList	& lf_union -> size		6345071	1					
ANR	6345099	Argument	& lf_union -> size		6345071	0					
ANR	6345100	UnaryOperationExpression	& lf_union -> size		6345071	0					
ANR	6345101	UnaryOperator	&		6345071	0					
ANR	6345102	PtrMemberAccess	lf_union -> size		6345071	1					
ANR	6345103	Identifier	lf_union		6345071	0					
ANR	6345104	Identifier	size		6345071	1					
ANR	6345105	ReturnType	static void		6345071	1					
ANR	6345106	Identifier	free_lf_union		6345071	2					
ANR	6345107	ParameterList	void * type		6345071	3					
ANR	6345108	Parameter	void * type	931:26:23021:23030	6345071	0	True				
ANR	6345109	ParameterType	void *		6345071	0					
ANR	6345110	Identifier	type		6345071	1					
ANR	6345111	CFGEntryNode	ENTRY		6345071		True				
ANR	6345112	CFGExitNode	EXIT		6345071		True				
ANR	6345113	Symbol	lf_union		6345071						
ANR	6345114	Symbol	t		6345071						
ANR	6345115	Symbol	& lf_union -> size		6345071						
ANR	6345116	Symbol	t -> type_info		6345071						
ANR	6345117	Symbol	type		6345071						
ANR	6345118	Symbol	* t		6345071						
ANR	6345119	Function	free_lf_onemethod	937:0:23155:23339							
ANR	6345120	FunctionDef	free_lf_onemethod (void * type)		6345119	0					
ANR	6345121	CompoundStatement		937:42:23197:23339	6345119	0					
ANR	6345122	IdentifierDeclStatement	STypeInfo * t = ( STypeInfo * ) type ;	938:1:23200:23233	6345119	0	True				
ANR	6345123	IdentifierDecl	* t = ( STypeInfo * ) type		6345119	0					
ANR	6345124	IdentifierDeclType	STypeInfo *		6345119	0					
ANR	6345125	Identifier	t		6345119	1					
ANR	6345126	AssignmentExpression	* t = ( STypeInfo * ) type		6345119	2		=			
ANR	6345127	Identifier	t		6345119	0					
ANR	6345128	CastExpression	( STypeInfo * ) type		6345119	1					
ANR	6345129	CastTarget	STypeInfo *		6345119	0					
ANR	6345130	Identifier	type		6345119	1					
ANR	6345131	IdentifierDeclStatement	SLF_ONEMETHOD * lf_onemethod = ( SLF_ONEMETHOD * ) t -> type_info ;	939:1:23236:23296	6345119	1	True				
ANR	6345132	IdentifierDecl	* lf_onemethod = ( SLF_ONEMETHOD * ) t -> type_info		6345119	0					
ANR	6345133	IdentifierDeclType	SLF_ONEMETHOD *		6345119	0					
ANR	6345134	Identifier	lf_onemethod		6345119	1					
ANR	6345135	AssignmentExpression	* lf_onemethod = ( SLF_ONEMETHOD * ) t -> type_info		6345119	2		=			
ANR	6345136	Identifier	lf_onemethod		6345119	0					
ANR	6345137	CastExpression	( SLF_ONEMETHOD * ) t -> type_info		6345119	1					
ANR	6345138	CastTarget	SLF_ONEMETHOD *		6345119	0					
ANR	6345139	PtrMemberAccess	t -> type_info		6345119	1					
ANR	6345140	Identifier	t		6345119	0					
ANR	6345141	Identifier	type_info		6345119	1					
ANR	6345142	ExpressionStatement	free ( lf_onemethod -> val . str_data . name )	940:1:23299:23337	6345119	2	True				
ANR	6345143	CallExpression	free ( lf_onemethod -> val . str_data . name )		6345119	0					
ANR	6345144	Callee	free		6345119	0					
ANR	6345145	Identifier	free		6345119	0					
ANR	6345146	ArgumentList	lf_onemethod -> val . str_data . name		6345119	1					
ANR	6345147	Argument	lf_onemethod -> val . str_data . name		6345119	0					
ANR	6345148	MemberAccess	lf_onemethod -> val . str_data . name		6345119	0					
ANR	6345149	MemberAccess	lf_onemethod -> val . str_data		6345119	0					
ANR	6345150	PtrMemberAccess	lf_onemethod -> val		6345119	0					
ANR	6345151	Identifier	lf_onemethod		6345119	0					
ANR	6345152	Identifier	val		6345119	1					
ANR	6345153	Identifier	str_data		6345119	1					
ANR	6345154	Identifier	name		6345119	1					
ANR	6345155	ReturnType	static void		6345119	1					
ANR	6345156	Identifier	free_lf_onemethod		6345119	2					
ANR	6345157	ParameterList	void * type		6345119	3					
ANR	6345158	Parameter	void * type	937:30:23185:23194	6345119	0	True				
ANR	6345159	ParameterType	void *		6345119	0					
ANR	6345160	Identifier	type		6345119	1					
ANR	6345161	CFGEntryNode	ENTRY		6345119		True				
ANR	6345162	CFGExitNode	EXIT		6345119		True				
ANR	6345163	Symbol	lf_onemethod -> val . str_data . name		6345119						
ANR	6345164	Symbol	t		6345119						
ANR	6345165	Symbol	* lf_onemethod		6345119						
ANR	6345166	Symbol	lf_onemethod -> val		6345119						
ANR	6345167	Symbol	lf_onemethod		6345119						
ANR	6345168	Symbol	t -> type_info		6345119						
ANR	6345169	Symbol	type		6345119						
ANR	6345170	Symbol	* t		6345119						
ANR	6345171	Symbol	lf_onemethod -> val . str_data		6345119						
ANR	6345172	Function	free_lf_enum	943:0:23342:23492							
ANR	6345173	FunctionDef	free_lf_enum (void * type)		6345172	0					
ANR	6345174	CompoundStatement		943:37:23379:23492	6345172	0					
ANR	6345175	IdentifierDeclStatement	STypeInfo * t = ( STypeInfo * ) type ;	944:1:23382:23415	6345172	0	True				
ANR	6345176	IdentifierDecl	* t = ( STypeInfo * ) type		6345172	0					
ANR	6345177	IdentifierDeclType	STypeInfo *		6345172	0					
ANR	6345178	Identifier	t		6345172	1					
ANR	6345179	AssignmentExpression	* t = ( STypeInfo * ) type		6345172	2		=			
ANR	6345180	Identifier	t		6345172	0					
ANR	6345181	CastExpression	( STypeInfo * ) type		6345172	1					
ANR	6345182	CastTarget	STypeInfo *		6345172	0					
ANR	6345183	Identifier	type		6345172	1					
ANR	6345184	IdentifierDeclStatement	SLF_ENUM * lf_enum = ( SLF_ENUM * ) t -> type_info ;	945:1:23418:23463	6345172	1	True				
ANR	6345185	IdentifierDecl	* lf_enum = ( SLF_ENUM * ) t -> type_info		6345172	0					
ANR	6345186	IdentifierDeclType	SLF_ENUM *		6345172	0					
ANR	6345187	Identifier	lf_enum		6345172	1					
ANR	6345188	AssignmentExpression	* lf_enum = ( SLF_ENUM * ) t -> type_info		6345172	2		=			
ANR	6345189	Identifier	lf_enum		6345172	0					
ANR	6345190	CastExpression	( SLF_ENUM * ) t -> type_info		6345172	1					
ANR	6345191	CastTarget	SLF_ENUM *		6345172	0					
ANR	6345192	PtrMemberAccess	t -> type_info		6345172	1					
ANR	6345193	Identifier	t		6345172	0					
ANR	6345194	Identifier	type_info		6345172	1					
ANR	6345195	ExpressionStatement	free ( lf_enum -> name . name )	946:1:23466:23490	6345172	2	True				
ANR	6345196	CallExpression	free ( lf_enum -> name . name )		6345172	0					
ANR	6345197	Callee	free		6345172	0					
ANR	6345198	Identifier	free		6345172	0					
ANR	6345199	ArgumentList	lf_enum -> name . name		6345172	1					
ANR	6345200	Argument	lf_enum -> name . name		6345172	0					
ANR	6345201	MemberAccess	lf_enum -> name . name		6345172	0					
ANR	6345202	PtrMemberAccess	lf_enum -> name		6345172	0					
ANR	6345203	Identifier	lf_enum		6345172	0					
ANR	6345204	Identifier	name		6345172	1					
ANR	6345205	Identifier	name		6345172	1					
ANR	6345206	ReturnType	static void		6345172	1					
ANR	6345207	Identifier	free_lf_enum		6345172	2					
ANR	6345208	ParameterList	void * type		6345172	3					
ANR	6345209	Parameter	void * type	943:25:23367:23376	6345172	0	True				
ANR	6345210	ParameterType	void *		6345172	0					
ANR	6345211	Identifier	type		6345172	1					
ANR	6345212	CFGEntryNode	ENTRY		6345172		True				
ANR	6345213	CFGExitNode	EXIT		6345172		True				
ANR	6345214	Symbol	t		6345172						
ANR	6345215	Symbol	lf_enum -> name . name		6345172						
ANR	6345216	Symbol	* lf_enum		6345172						
ANR	6345217	Symbol	t -> type_info		6345172						
ANR	6345218	Symbol	type		6345172						
ANR	6345219	Symbol	* t		6345172						
ANR	6345220	Symbol	lf_enum -> name		6345172						
ANR	6345221	Symbol	lf_enum		6345172						
ANR	6345222	Function	free_lf_array	949:0:23495:23652							
ANR	6345223	FunctionDef	free_lf_array (void * type)		6345222	0					
ANR	6345224	CompoundStatement		949:38:23533:23652	6345222	0					
ANR	6345225	IdentifierDeclStatement	STypeInfo * t = ( STypeInfo * ) type ;	950:1:23536:23569	6345222	0	True				
ANR	6345226	IdentifierDecl	* t = ( STypeInfo * ) type		6345222	0					
ANR	6345227	IdentifierDeclType	STypeInfo *		6345222	0					
ANR	6345228	Identifier	t		6345222	1					
ANR	6345229	AssignmentExpression	* t = ( STypeInfo * ) type		6345222	2		=			
ANR	6345230	Identifier	t		6345222	0					
ANR	6345231	CastExpression	( STypeInfo * ) type		6345222	1					
ANR	6345232	CastTarget	STypeInfo *		6345222	0					
ANR	6345233	Identifier	type		6345222	1					
ANR	6345234	IdentifierDeclStatement	SLF_ARRAY * lf_array = ( SLF_ARRAY * ) t -> type_info ;	951:1:23572:23620	6345222	1	True				
ANR	6345235	IdentifierDecl	* lf_array = ( SLF_ARRAY * ) t -> type_info		6345222	0					
ANR	6345236	IdentifierDeclType	SLF_ARRAY *		6345222	0					
ANR	6345237	Identifier	lf_array		6345222	1					
ANR	6345238	AssignmentExpression	* lf_array = ( SLF_ARRAY * ) t -> type_info		6345222	2		=			
ANR	6345239	Identifier	lf_array		6345222	0					
ANR	6345240	CastExpression	( SLF_ARRAY * ) t -> type_info		6345222	1					
ANR	6345241	CastTarget	SLF_ARRAY *		6345222	0					
ANR	6345242	PtrMemberAccess	t -> type_info		6345222	1					
ANR	6345243	Identifier	t		6345222	0					
ANR	6345244	Identifier	type_info		6345222	1					
ANR	6345245	ExpressionStatement	free_sval ( & lf_array -> size )	952:1:23623:23650	6345222	2	True				
ANR	6345246	CallExpression	free_sval ( & lf_array -> size )		6345222	0					
ANR	6345247	Callee	free_sval		6345222	0					
ANR	6345248	Identifier	free_sval		6345222	0					
ANR	6345249	ArgumentList	& lf_array -> size		6345222	1					
ANR	6345250	Argument	& lf_array -> size		6345222	0					
ANR	6345251	UnaryOperationExpression	& lf_array -> size		6345222	0					
ANR	6345252	UnaryOperator	&		6345222	0					
ANR	6345253	PtrMemberAccess	lf_array -> size		6345222	1					
ANR	6345254	Identifier	lf_array		6345222	0					
ANR	6345255	Identifier	size		6345222	1					
ANR	6345256	ReturnType	static void		6345222	1					
ANR	6345257	Identifier	free_lf_array		6345222	2					
ANR	6345258	ParameterList	void * type		6345222	3					
ANR	6345259	Parameter	void * type	949:26:23521:23530	6345222	0	True				
ANR	6345260	ParameterType	void *		6345222	0					
ANR	6345261	Identifier	type		6345222	1					
ANR	6345262	CFGEntryNode	ENTRY		6345222		True				
ANR	6345263	CFGExitNode	EXIT		6345222		True				
ANR	6345264	Symbol	& lf_array -> size		6345222						
ANR	6345265	Symbol	t		6345222						
ANR	6345266	Symbol	lf_array		6345222						
ANR	6345267	Symbol	t -> type_info		6345222						
ANR	6345268	Symbol	type		6345222						
ANR	6345269	Symbol	* t		6345222						
ANR	6345270	Function	free_lf_arglist	955:0:23655:23847							
ANR	6345271	FunctionDef	free_lf_arglist (void * type)		6345270	0					
ANR	6345272	CompoundStatement		955:40:23695:23847	6345270	0					
ANR	6345273	IdentifierDeclStatement	STypeInfo * t = ( STypeInfo * ) type ;	956:1:23698:23731	6345270	0	True				
ANR	6345274	IdentifierDecl	* t = ( STypeInfo * ) type		6345270	0					
ANR	6345275	IdentifierDeclType	STypeInfo *		6345270	0					
ANR	6345276	Identifier	t		6345270	1					
ANR	6345277	AssignmentExpression	* t = ( STypeInfo * ) type		6345270	2		=			
ANR	6345278	Identifier	t		6345270	0					
ANR	6345279	CastExpression	( STypeInfo * ) type		6345270	1					
ANR	6345280	CastTarget	STypeInfo *		6345270	0					
ANR	6345281	Identifier	type		6345270	1					
ANR	6345282	IdentifierDeclStatement	SLF_ARGLIST * lf_arglist = ( SLF_ARGLIST * ) t -> type_info ;	957:1:23734:23788	6345270	1	True				
ANR	6345283	IdentifierDecl	* lf_arglist = ( SLF_ARGLIST * ) t -> type_info		6345270	0					
ANR	6345284	IdentifierDeclType	SLF_ARGLIST *		6345270	0					
ANR	6345285	Identifier	lf_arglist		6345270	1					
ANR	6345286	AssignmentExpression	* lf_arglist = ( SLF_ARGLIST * ) t -> type_info		6345270	2		=			
ANR	6345287	Identifier	lf_arglist		6345270	0					
ANR	6345288	CastExpression	( SLF_ARGLIST * ) t -> type_info		6345270	1					
ANR	6345289	CastTarget	SLF_ARGLIST *		6345270	0					
ANR	6345290	PtrMemberAccess	t -> type_info		6345270	1					
ANR	6345291	Identifier	t		6345270	0					
ANR	6345292	Identifier	type_info		6345270	1					
ANR	6345293	ExpressionStatement	free ( lf_arglist -> arg_type )	958:1:23791:23818	6345270	2	True				
ANR	6345294	CallExpression	free ( lf_arglist -> arg_type )		6345270	0					
ANR	6345295	Callee	free		6345270	0					
ANR	6345296	Identifier	free		6345270	0					
ANR	6345297	ArgumentList	lf_arglist -> arg_type		6345270	1					
ANR	6345298	Argument	lf_arglist -> arg_type		6345270	0					
ANR	6345299	PtrMemberAccess	lf_arglist -> arg_type		6345270	0					
ANR	6345300	Identifier	lf_arglist		6345270	0					
ANR	6345301	Identifier	arg_type		6345270	1					
ANR	6345302	ExpressionStatement	lf_arglist -> arg_type = 0	959:1:23821:23845	6345270	3	True				
ANR	6345303	AssignmentExpression	lf_arglist -> arg_type = 0		6345270	0		=			
ANR	6345304	PtrMemberAccess	lf_arglist -> arg_type		6345270	0					
ANR	6345305	Identifier	lf_arglist		6345270	0					
ANR	6345306	Identifier	arg_type		6345270	1					
ANR	6345307	PrimaryExpression	0		6345270	1					
ANR	6345308	ReturnType	static void		6345270	1					
ANR	6345309	Identifier	free_lf_arglist		6345270	2					
ANR	6345310	ParameterList	void * type		6345270	3					
ANR	6345311	Parameter	void * type	955:28:23683:23692	6345270	0	True				
ANR	6345312	ParameterType	void *		6345270	0					
ANR	6345313	Identifier	type		6345270	1					
ANR	6345314	CFGEntryNode	ENTRY		6345270		True				
ANR	6345315	CFGExitNode	EXIT		6345270		True				
ANR	6345316	Symbol	t		6345270						
ANR	6345317	Symbol	t -> type_info		6345270						
ANR	6345318	Symbol	* lf_arglist		6345270						
ANR	6345319	Symbol	type		6345270						
ANR	6345320	Symbol	lf_arglist		6345270						
ANR	6345321	Symbol	* t		6345270						
ANR	6345322	Symbol	lf_arglist -> arg_type		6345270						
ANR	6345323	Function	free_lf_vtshape	962:0:23850:24054							
ANR	6345324	FunctionDef	free_lf_vtshape (void * type)		6345323	0					
ANR	6345325	CompoundStatement		962:40:23890:24054	6345323	0					
ANR	6345326	IdentifierDeclStatement	STypeInfo * t = ( STypeInfo * ) type ;	963:1:23893:23926	6345323	0	True				
ANR	6345327	IdentifierDecl	* t = ( STypeInfo * ) type		6345323	0					
ANR	6345328	IdentifierDeclType	STypeInfo *		6345323	0					
ANR	6345329	Identifier	t		6345323	1					
ANR	6345330	AssignmentExpression	* t = ( STypeInfo * ) type		6345323	2		=			
ANR	6345331	Identifier	t		6345323	0					
ANR	6345332	CastExpression	( STypeInfo * ) type		6345323	1					
ANR	6345333	CastTarget	STypeInfo *		6345323	0					
ANR	6345334	Identifier	type		6345323	1					
ANR	6345335	IdentifierDeclStatement	SLF_VTSHAPE * lf_vtshape = ( SLF_VTSHAPE * ) t -> type_info ;	964:1:23929:23983	6345323	1	True				
ANR	6345336	IdentifierDecl	* lf_vtshape = ( SLF_VTSHAPE * ) t -> type_info		6345323	0					
ANR	6345337	IdentifierDeclType	SLF_VTSHAPE *		6345323	0					
ANR	6345338	Identifier	lf_vtshape		6345323	1					
ANR	6345339	AssignmentExpression	* lf_vtshape = ( SLF_VTSHAPE * ) t -> type_info		6345323	2		=			
ANR	6345340	Identifier	lf_vtshape		6345323	0					
ANR	6345341	CastExpression	( SLF_VTSHAPE * ) t -> type_info		6345323	1					
ANR	6345342	CastTarget	SLF_VTSHAPE *		6345323	0					
ANR	6345343	PtrMemberAccess	t -> type_info		6345323	1					
ANR	6345344	Identifier	t		6345323	0					
ANR	6345345	Identifier	type_info		6345323	1					
ANR	6345346	ExpressionStatement	free ( lf_vtshape -> vt_descriptors )	965:1:23986:24019	6345323	2	True				
ANR	6345347	CallExpression	free ( lf_vtshape -> vt_descriptors )		6345323	0					
ANR	6345348	Callee	free		6345323	0					
ANR	6345349	Identifier	free		6345323	0					
ANR	6345350	ArgumentList	lf_vtshape -> vt_descriptors		6345323	1					
ANR	6345351	Argument	lf_vtshape -> vt_descriptors		6345323	0					
ANR	6345352	PtrMemberAccess	lf_vtshape -> vt_descriptors		6345323	0					
ANR	6345353	Identifier	lf_vtshape		6345323	0					
ANR	6345354	Identifier	vt_descriptors		6345323	1					
ANR	6345355	ExpressionStatement	lf_vtshape -> vt_descriptors = 0	966:1:24022:24052	6345323	3	True				
ANR	6345356	AssignmentExpression	lf_vtshape -> vt_descriptors = 0		6345323	0		=			
ANR	6345357	PtrMemberAccess	lf_vtshape -> vt_descriptors		6345323	0					
ANR	6345358	Identifier	lf_vtshape		6345323	0					
ANR	6345359	Identifier	vt_descriptors		6345323	1					
ANR	6345360	PrimaryExpression	0		6345323	1					
ANR	6345361	ReturnType	static void		6345323	1					
ANR	6345362	Identifier	free_lf_vtshape		6345323	2					
ANR	6345363	ParameterList	void * type		6345323	3					
ANR	6345364	Parameter	void * type	962:28:23878:23887	6345323	0	True				
ANR	6345365	ParameterType	void *		6345323	0					
ANR	6345366	Identifier	type		6345323	1					
ANR	6345367	CFGEntryNode	ENTRY		6345323		True				
ANR	6345368	CFGExitNode	EXIT		6345323		True				
ANR	6345369	Symbol	t		6345323						
ANR	6345370	Symbol	* lf_vtshape		6345323						
ANR	6345371	Symbol	lf_vtshape -> vt_descriptors		6345323						
ANR	6345372	Symbol	lf_vtshape		6345323						
ANR	6345373	Symbol	t -> type_info		6345323						
ANR	6345374	Symbol	type		6345323						
ANR	6345375	Symbol	* t		6345323						
ANR	6345376	Function	free_tpi_stream	969:0:24057:24640							
ANR	6345377	FunctionDef	free_tpi_stream (void * stream)		6345376	0					
ANR	6345378	CompoundStatement		969:42:24099:24640	6345376	0					
ANR	6345379	IdentifierDeclStatement	STpiStream * tpi_stream = ( STpiStream * ) stream ;	970:1:24102:24147	6345376	0	True				
ANR	6345380	IdentifierDecl	* tpi_stream = ( STpiStream * ) stream		6345376	0					
ANR	6345381	IdentifierDeclType	STpiStream *		6345376	0					
ANR	6345382	Identifier	tpi_stream		6345376	1					
ANR	6345383	AssignmentExpression	* tpi_stream = ( STpiStream * ) stream		6345376	2		=			
ANR	6345384	Identifier	tpi_stream		6345376	0					
ANR	6345385	CastExpression	( STpiStream * ) stream		6345376	1					
ANR	6345386	CastTarget	STpiStream *		6345376	0					
ANR	6345387	Identifier	stream		6345376	1					
ANR	6345388	IdentifierDeclStatement	RListIter * it ;	971:1:24150:24163	6345376	1	True				
ANR	6345389	IdentifierDecl	* it		6345376	0					
ANR	6345390	IdentifierDeclType	RListIter *		6345376	0					
ANR	6345391	Identifier	it		6345376	1					
ANR	6345392	IdentifierDeclStatement	SType * type = NULL ;	972:1:24166:24184	6345376	2	True				
ANR	6345393	IdentifierDecl	* type = NULL		6345376	0					
ANR	6345394	IdentifierDeclType	SType *		6345376	0					
ANR	6345395	Identifier	type		6345376	1					
ANR	6345396	AssignmentExpression	* type = NULL		6345376	2		=			
ANR	6345397	Identifier	NULL		6345376	0					
ANR	6345398	Identifier	NULL		6345376	1					
ANR	6345399	ExpressionStatement	it = r_list_iterator ( tpi_stream -> types )	974:1:24188:24228	6345376	3	True				
ANR	6345400	AssignmentExpression	it = r_list_iterator ( tpi_stream -> types )		6345376	0		=			
ANR	6345401	Identifier	it		6345376	0					
ANR	6345402	CallExpression	r_list_iterator ( tpi_stream -> types )		6345376	1					
ANR	6345403	Callee	r_list_iterator		6345376	0					
ANR	6345404	Identifier	r_list_iterator		6345376	0					
ANR	6345405	ArgumentList	tpi_stream -> types		6345376	1					
ANR	6345406	Argument	tpi_stream -> types		6345376	0					
ANR	6345407	PtrMemberAccess	tpi_stream -> types		6345376	0					
ANR	6345408	Identifier	tpi_stream		6345376	0					
ANR	6345409	Identifier	types		6345376	1					
ANR	6345410	WhileStatement	while ( r_list_iter_next ( it ) )		6345376	4					
ANR	6345411	Condition	r_list_iter_next ( it )	975:8:24238:24258	6345376	0	True				
ANR	6345412	CallExpression	r_list_iter_next ( it )		6345376	0					
ANR	6345413	Callee	r_list_iter_next		6345376	0					
ANR	6345414	Identifier	r_list_iter_next		6345376	0					
ANR	6345415	ArgumentList	it		6345376	1					
ANR	6345416	Argument	it		6345376	0					
ANR	6345417	Identifier	it		6345376	0					
ANR	6345418	CompoundStatement		7:31:161:161	6345376	1					
ANR	6345419	ExpressionStatement	type = ( SType * ) r_list_iter_get ( it )	976:2:24265:24302	6345376	0	True				
ANR	6345420	AssignmentExpression	type = ( SType * ) r_list_iter_get ( it )		6345376	0		=			
ANR	6345421	Identifier	type		6345376	0					
ANR	6345422	CastExpression	( SType * ) r_list_iter_get ( it )		6345376	1					
ANR	6345423	CastTarget	SType *		6345376	0					
ANR	6345424	CallExpression	r_list_iter_get ( it )		6345376	1					
ANR	6345425	Callee	r_list_iter_get		6345376	0					
ANR	6345426	Identifier	r_list_iter_get		6345376	0					
ANR	6345427	ArgumentList	it		6345376	1					
ANR	6345428	Argument	it		6345376	0					
ANR	6345429	Identifier	it		6345376	0					
ANR	6345430	IfStatement	if ( ! type )		6345376	1					
ANR	6345431	Condition	! type	977:6:24310:24314	6345376	0	True				
ANR	6345432	UnaryOperationExpression	! type		6345376	0					
ANR	6345433	UnaryOperator	!		6345376	0					
ANR	6345434	Identifier	type		6345376	1					
ANR	6345435	CompoundStatement		9:13:217:217	6345376	1					
ANR	6345436	ContinueStatement	continue ;	978:3:24322:24330	6345376	0	True				
ANR	6345437	IfStatement	if ( type -> type_data . free_ )		6345376	2					
ANR	6345438	Condition	type -> type_data . free_	980:6:24342:24362	6345376	0	True				
ANR	6345439	MemberAccess	type -> type_data . free_		6345376	0					
ANR	6345440	PtrMemberAccess	type -> type_data		6345376	0					
ANR	6345441	Identifier	type		6345376	0					
ANR	6345442	Identifier	type_data		6345376	1					
ANR	6345443	Identifier	free_		6345376	1					
ANR	6345444	CompoundStatement		12:29:265:265	6345376	1					
ANR	6345445	ExpressionStatement	type -> type_data . free_ ( & type -> type_data )	981:3:24370:24410	6345376	0	True				
ANR	6345446	CallExpression	type -> type_data . free_ ( & type -> type_data )		6345376	0					
ANR	6345447	Callee	type -> type_data . free_		6345376	0					
ANR	6345448	MemberAccess	type -> type_data . free_		6345376	0					
ANR	6345449	PtrMemberAccess	type -> type_data		6345376	0					
ANR	6345450	Identifier	type		6345376	0					
ANR	6345451	Identifier	type_data		6345376	1					
ANR	6345452	Identifier	free_		6345376	1					
ANR	6345453	ArgumentList	& type -> type_data		6345376	1					
ANR	6345454	Argument	& type -> type_data		6345376	0					
ANR	6345455	UnaryOperationExpression	& type -> type_data		6345376	0					
ANR	6345456	UnaryOperator	&		6345376	0					
ANR	6345457	PtrMemberAccess	type -> type_data		6345376	1					
ANR	6345458	Identifier	type		6345376	0					
ANR	6345459	Identifier	type_data		6345376	1					
ANR	6345460	ExpressionStatement	type -> type_data . free_ = 0	982:3:24415:24440	6345376	1	True				
ANR	6345461	AssignmentExpression	type -> type_data . free_ = 0		6345376	0		=			
ANR	6345462	MemberAccess	type -> type_data . free_		6345376	0					
ANR	6345463	PtrMemberAccess	type -> type_data		6345376	0					
ANR	6345464	Identifier	type		6345376	0					
ANR	6345465	Identifier	type_data		6345376	1					
ANR	6345466	Identifier	free_		6345376	1					
ANR	6345467	PrimaryExpression	0		6345376	1					
ANR	6345468	IfStatement	if ( type -> type_data . type_info )		6345376	3					
ANR	6345469	Condition	type -> type_data . type_info	984:6:24452:24476	6345376	0	True				
ANR	6345470	MemberAccess	type -> type_data . type_info		6345376	0					
ANR	6345471	PtrMemberAccess	type -> type_data		6345376	0					
ANR	6345472	Identifier	type		6345376	0					
ANR	6345473	Identifier	type_data		6345376	1					
ANR	6345474	Identifier	type_info		6345376	1					
ANR	6345475	CompoundStatement		16:33:379:379	6345376	1					
ANR	6345476	ExpressionStatement	free ( type -> type_data . type_info )	985:3:24484:24516	6345376	0	True				
ANR	6345477	CallExpression	free ( type -> type_data . type_info )		6345376	0					
ANR	6345478	Callee	free		6345376	0					
ANR	6345479	Identifier	free		6345376	0					
ANR	6345480	ArgumentList	type -> type_data . type_info		6345376	1					
ANR	6345481	Argument	type -> type_data . type_info		6345376	0					
ANR	6345482	MemberAccess	type -> type_data . type_info		6345376	0					
ANR	6345483	PtrMemberAccess	type -> type_data		6345376	0					
ANR	6345484	Identifier	type		6345376	0					
ANR	6345485	Identifier	type_data		6345376	1					
ANR	6345486	Identifier	type_info		6345376	1					
ANR	6345487	ExpressionStatement	type -> type_data . free_ = 0	986:3:24521:24546	6345376	1	True				
ANR	6345488	AssignmentExpression	type -> type_data . free_ = 0		6345376	0		=			
ANR	6345489	MemberAccess	type -> type_data . free_		6345376	0					
ANR	6345490	PtrMemberAccess	type -> type_data		6345376	0					
ANR	6345491	Identifier	type		6345376	0					
ANR	6345492	Identifier	type_data		6345376	1					
ANR	6345493	Identifier	free_		6345376	1					
ANR	6345494	PrimaryExpression	0		6345376	1					
ANR	6345495	ExpressionStatement	type -> type_data . type_info = 0	987:3:24551:24580	6345376	2	True				
ANR	6345496	AssignmentExpression	type -> type_data . type_info = 0		6345376	0		=			
ANR	6345497	MemberAccess	type -> type_data . type_info		6345376	0					
ANR	6345498	PtrMemberAccess	type -> type_data		6345376	0					
ANR	6345499	Identifier	type		6345376	0					
ANR	6345500	Identifier	type_data		6345376	1					
ANR	6345501	Identifier	type_info		6345376	1					
ANR	6345502	PrimaryExpression	0		6345376	1					
ANR	6345503	ExpressionStatement	R_FREE ( type )	989:2:24588:24601	6345376	4	True				
ANR	6345504	CallExpression	R_FREE ( type )		6345376	0					
ANR	6345505	Callee	R_FREE		6345376	0					
ANR	6345506	Identifier	R_FREE		6345376	0					
ANR	6345507	ArgumentList	type		6345376	1					
ANR	6345508	Argument	type		6345376	0					
ANR	6345509	Identifier	type		6345376	0					
ANR	6345510	ExpressionStatement	r_list_free ( tpi_stream -> types )	991:1:24607:24638	6345376	5	True				
ANR	6345511	CallExpression	r_list_free ( tpi_stream -> types )		6345376	0					
ANR	6345512	Callee	r_list_free		6345376	0					
ANR	6345513	Identifier	r_list_free		6345376	0					
ANR	6345514	ArgumentList	tpi_stream -> types		6345376	1					
ANR	6345515	Argument	tpi_stream -> types		6345376	0					
ANR	6345516	PtrMemberAccess	tpi_stream -> types		6345376	0					
ANR	6345517	Identifier	tpi_stream		6345376	0					
ANR	6345518	Identifier	types		6345376	1					
ANR	6345519	ReturnType	static void		6345376	1					
ANR	6345520	Identifier	free_tpi_stream		6345376	2					
ANR	6345521	ParameterList	void * stream		6345376	3					
ANR	6345522	Parameter	void * stream	969:28:24085:24096	6345376	0	True				
ANR	6345523	ParameterType	void *		6345376	0					
ANR	6345524	Identifier	stream		6345376	1					
ANR	6345525	CFGEntryNode	ENTRY		6345376		True				
ANR	6345526	CFGExitNode	EXIT		6345376		True				
ANR	6345527	Symbol	NULL		6345376						
ANR	6345528	Symbol	r_list_iter_next		6345376						
ANR	6345529	Symbol	tpi_stream -> types		6345376						
ANR	6345530	Symbol	type -> type_data . free_		6345376						
ANR	6345531	Symbol	type -> type_data		6345376						
ANR	6345532	Symbol	& type -> type_data		6345376						
ANR	6345533	Symbol	r_list_iterator		6345376						
ANR	6345534	Symbol	r_list_iter_get		6345376						
ANR	6345535	Symbol	tpi_stream		6345376						
ANR	6345536	Symbol	it		6345376						
ANR	6345537	Symbol	type		6345376						
ANR	6345538	Symbol	stream		6345376						
ANR	6345539	Symbol	* type		6345376						
ANR	6345540	Symbol	type -> type_data . type_info		6345376						
ANR	6345541	Symbol	* tpi_stream		6345376						
ANR	6345542	Function	get_array_print_type	994:0:24643:25402							
ANR	6345543	FunctionDef	"get_array_print_type (void * type , char * * name)"		6345542	0					
ANR	6345544	CompoundStatement		994:58:24701:25402	6345542	0					
ANR	6345545	IdentifierDeclStatement	STypeInfo * ti = ( STypeInfo * ) type ;	995:1:24704:24738	6345542	0	True				
ANR	6345546	IdentifierDecl	* ti = ( STypeInfo * ) type		6345542	0					
ANR	6345547	IdentifierDeclType	STypeInfo *		6345542	0					
ANR	6345548	Identifier	ti		6345542	1					
ANR	6345549	AssignmentExpression	* ti = ( STypeInfo * ) type		6345542	2		=			
ANR	6345550	Identifier	ti		6345542	0					
ANR	6345551	CastExpression	( STypeInfo * ) type		6345542	1					
ANR	6345552	CastTarget	STypeInfo *		6345542	0					
ANR	6345553	Identifier	type		6345542	1					
ANR	6345554	IdentifierDeclStatement	SType * t = 0 ;	996:1:24741:24753	6345542	1	True				
ANR	6345555	IdentifierDecl	* t = 0		6345542	0					
ANR	6345556	IdentifierDeclType	SType *		6345542	0					
ANR	6345557	Identifier	t		6345542	1					
ANR	6345558	AssignmentExpression	* t = 0		6345542	2		=			
ANR	6345559	Identifier	t		6345542	0					
ANR	6345560	PrimaryExpression	0		6345542	1					
ANR	6345561	IdentifierDeclStatement	char * tmp_name = NULL ;	997:1:24756:24777	6345542	2	True				
ANR	6345562	IdentifierDecl	* tmp_name = NULL		6345542	0					
ANR	6345563	IdentifierDeclType	char *		6345542	0					
ANR	6345564	Identifier	tmp_name		6345542	1					
ANR	6345565	AssignmentExpression	* tmp_name = NULL		6345542	2		=			
ANR	6345566	Identifier	NULL		6345542	0					
ANR	6345567	Identifier	NULL		6345542	1					
ANR	6345568	IdentifierDeclStatement	int name_len = 0 ;	998:1:24780:24796	6345542	3	True				
ANR	6345569	IdentifierDecl	name_len = 0		6345542	0					
ANR	6345570	IdentifierDeclType	int		6345542	0					
ANR	6345571	Identifier	name_len		6345542	1					
ANR	6345572	AssignmentExpression	name_len = 0		6345542	2		=			
ANR	6345573	Identifier	name_len		6345542	0					
ANR	6345574	PrimaryExpression	0		6345542	1					
ANR	6345575	IdentifierDeclStatement	bool need_to_free = true ;	999:1:24799:24823	6345542	4	True				
ANR	6345576	IdentifierDecl	need_to_free = true		6345542	0					
ANR	6345577	IdentifierDeclType	bool		6345542	0					
ANR	6345578	Identifier	need_to_free		6345542	1					
ANR	6345579	AssignmentExpression	need_to_free = true		6345542	2		=			
ANR	6345580	Identifier	true		6345542	0					
ANR	6345581	Identifier	true		6345542	1					
ANR	6345582	IdentifierDeclStatement	int base_type = 0 ;	1000:1:24826:24843	6345542	5	True				
ANR	6345583	IdentifierDecl	base_type = 0		6345542	0					
ANR	6345584	IdentifierDeclType	int		6345542	0					
ANR	6345585	Identifier	base_type		6345542	1					
ANR	6345586	AssignmentExpression	base_type = 0		6345542	2		=			
ANR	6345587	Identifier	base_type		6345542	0					
ANR	6345588	PrimaryExpression	0		6345542	1					
ANR	6345589	ExpressionStatement	"base_type = ti -> get_element_type ( ti , ( void * * ) & t )"	1002:1:24847:24897	6345542	6	True				
ANR	6345590	AssignmentExpression	"base_type = ti -> get_element_type ( ti , ( void * * ) & t )"		6345542	0		=			
ANR	6345591	Identifier	base_type		6345542	0					
ANR	6345592	CallExpression	"ti -> get_element_type ( ti , ( void * * ) & t )"		6345542	1					
ANR	6345593	Callee	ti -> get_element_type		6345542	0					
ANR	6345594	PtrMemberAccess	ti -> get_element_type		6345542	0					
ANR	6345595	Identifier	ti		6345542	0					
ANR	6345596	Identifier	get_element_type		6345542	1					
ANR	6345597	ArgumentList	ti		6345542	1					
ANR	6345598	Argument	ti		6345542	0					
ANR	6345599	Identifier	ti		6345542	0					
ANR	6345600	Argument	( void * * ) & t		6345542	1					
ANR	6345601	CastExpression	( void * * ) & t		6345542	0					
ANR	6345602	CastTarget	void * *		6345542	0					
ANR	6345603	UnaryOperationExpression	& t		6345542	1					
ANR	6345604	UnaryOperator	&		6345542	0					
ANR	6345605	Identifier	t		6345542	1					
ANR	6345606	IfStatement	if ( ! t )		6345542	7					
ANR	6345607	Condition	! t	1003:5:24904:24905	6345542	0	True				
ANR	6345608	UnaryOperationExpression	! t		6345542	0					
ANR	6345609	UnaryOperator	!		6345542	0					
ANR	6345610	Identifier	t		6345542	1					
ANR	6345611	CompoundStatement		10:9:206:206	6345542	1					
ANR	6345612	ExpressionStatement	need_to_free = false	1004:2:24912:24932	6345542	0	True				
ANR	6345613	AssignmentExpression	need_to_free = false		6345542	0		=			
ANR	6345614	Identifier	need_to_free		6345542	0					
ANR	6345615	Identifier	false		6345542	1					
ANR	6345616	ExpressionStatement	"print_base_type ( base_type , & tmp_name )"	1005:2:24936:24974	6345542	1	True				
ANR	6345617	CallExpression	"print_base_type ( base_type , & tmp_name )"		6345542	0					
ANR	6345618	Callee	print_base_type		6345542	0					
ANR	6345619	Identifier	print_base_type		6345542	0					
ANR	6345620	ArgumentList	base_type		6345542	1					
ANR	6345621	Argument	base_type		6345542	0					
ANR	6345622	Identifier	base_type		6345542	0					
ANR	6345623	Argument	& tmp_name		6345542	1					
ANR	6345624	UnaryOperationExpression	& tmp_name		6345542	0					
ANR	6345625	UnaryOperator	&		6345542	0					
ANR	6345626	Identifier	tmp_name		6345542	1					
ANR	6345627	ElseStatement	else		6345542	0					
ANR	6345628	CompoundStatement		13:8:282:282	6345542	0					
ANR	6345629	ExpressionStatement	ti = & t -> type_data	1007:2:24988:25006	6345542	0	True				
ANR	6345630	AssignmentExpression	ti = & t -> type_data		6345542	0		=			
ANR	6345631	Identifier	ti		6345542	0					
ANR	6345632	UnaryOperationExpression	& t -> type_data		6345542	1					
ANR	6345633	UnaryOperator	&		6345542	0					
ANR	6345634	PtrMemberAccess	t -> type_data		6345542	1					
ANR	6345635	Identifier	t		6345542	0					
ANR	6345636	Identifier	type_data		6345542	1					
ANR	6345637	ExpressionStatement	"ti -> get_print_type ( ti , & tmp_name )"	1008:2:25010:25044	6345542	1	True				
ANR	6345638	CallExpression	"ti -> get_print_type ( ti , & tmp_name )"		6345542	0					
ANR	6345639	Callee	ti -> get_print_type		6345542	0					
ANR	6345640	PtrMemberAccess	ti -> get_print_type		6345542	0					
ANR	6345641	Identifier	ti		6345542	0					
ANR	6345642	Identifier	get_print_type		6345542	1					
ANR	6345643	ArgumentList	ti		6345542	1					
ANR	6345644	Argument	ti		6345542	0					
ANR	6345645	Identifier	ti		6345542	0					
ANR	6345646	Argument	& tmp_name		6345542	1					
ANR	6345647	UnaryOperationExpression	& tmp_name		6345542	0					
ANR	6345648	UnaryOperator	&		6345542	0					
ANR	6345649	Identifier	tmp_name		6345542	1					
ANR	6345650	ExpressionStatement	"name_len = strlen ( ""array: "" )"	1011:1:25051:25080	6345542	8	True				
ANR	6345651	AssignmentExpression	"name_len = strlen ( ""array: "" )"		6345542	0		=			
ANR	6345652	Identifier	name_len		6345542	0					
ANR	6345653	CallExpression	"strlen ( ""array: "" )"		6345542	1					
ANR	6345654	Callee	strlen		6345542	0					
ANR	6345655	Identifier	strlen		6345542	0					
ANR	6345656	ArgumentList	"""array: """		6345542	1					
ANR	6345657	Argument	"""array: """		6345542	0					
ANR	6345658	PrimaryExpression	"""array: """		6345542	0					
ANR	6345659	IfStatement	if ( tmp_name )		6345542	9					
ANR	6345660	Condition	tmp_name	1012:5:25087:25094	6345542	0	True				
ANR	6345661	Identifier	tmp_name		6345542	0					
ANR	6345662	CompoundStatement		19:15:395:395	6345542	1					
ANR	6345663	ExpressionStatement	name_len += strlen ( tmp_name )	1013:2:25101:25130	6345542	0	True				
ANR	6345664	AssignmentExpression	name_len += strlen ( tmp_name )		6345542	0		+=			
ANR	6345665	Identifier	name_len		6345542	0					
ANR	6345666	CallExpression	strlen ( tmp_name )		6345542	1					
ANR	6345667	Callee	strlen		6345542	0					
ANR	6345668	Identifier	strlen		6345542	0					
ANR	6345669	ArgumentList	tmp_name		6345542	1					
ANR	6345670	Argument	tmp_name		6345542	0					
ANR	6345671	Identifier	tmp_name		6345542	0					
ANR	6345672	ExpressionStatement	* name = ( char * ) malloc ( name_len + 1 )	1015:1:25136:25174	6345542	10	True				
ANR	6345673	AssignmentExpression	* name = ( char * ) malloc ( name_len + 1 )		6345542	0		=			
ANR	6345674	UnaryOperationExpression	* name		6345542	0					
ANR	6345675	UnaryOperator	*		6345542	0					
ANR	6345676	Identifier	name		6345542	1					
ANR	6345677	CastExpression	( char * ) malloc ( name_len + 1 )		6345542	1					
ANR	6345678	CastTarget	char *		6345542	0					
ANR	6345679	CallExpression	malloc ( name_len + 1 )		6345542	1					
ANR	6345680	Callee	malloc		6345542	0					
ANR	6345681	Identifier	malloc		6345542	0					
ANR	6345682	ArgumentList	name_len + 1		6345542	1					
ANR	6345683	Argument	name_len + 1		6345542	0					
ANR	6345684	AdditiveExpression	name_len + 1		6345542	0		+			
ANR	6345685	Identifier	name_len		6345542	0					
ANR	6345686	PrimaryExpression	1		6345542	1					
ANR	6345687	IfStatement	if ( ! ( * name ) )		6345542	11					
ANR	6345688	Condition	! ( * name )	1016:5:25181:25188	6345542	0	True				
ANR	6345689	UnaryOperationExpression	! ( * name )		6345542	0					
ANR	6345690	UnaryOperator	!		6345542	0					
ANR	6345691	UnaryOperationExpression	* name		6345542	1					
ANR	6345692	UnaryOperator	*		6345542	0					
ANR	6345693	Identifier	name		6345542	1					
ANR	6345694	CompoundStatement		23:15:489:489	6345542	1					
ANR	6345695	IfStatement	if ( need_to_free )		6345542	0					
ANR	6345696	Condition	need_to_free	1017:6:25199:25210	6345542	0	True				
ANR	6345697	Identifier	need_to_free		6345542	0					
ANR	6345698	CompoundStatement		24:20:511:511	6345542	1					
ANR	6345699	ExpressionStatement	R_FREE ( tmp_name )	1018:3:25218:25235	6345542	0	True				
ANR	6345700	CallExpression	R_FREE ( tmp_name )		6345542	0					
ANR	6345701	Callee	R_FREE		6345542	0					
ANR	6345702	Identifier	R_FREE		6345542	0					
ANR	6345703	ArgumentList	tmp_name		6345542	1					
ANR	6345704	Argument	tmp_name		6345542	0					
ANR	6345705	Identifier	tmp_name		6345542	0					
ANR	6345706	ReturnStatement	return ;	1020:2:25243:25249	6345542	1	True				
ANR	6345707	ExpressionStatement	"strcpy ( * name , ""array: "" )"	1023:1:25282:25307	6345542	12	True				
ANR	6345708	CallExpression	"strcpy ( * name , ""array: "" )"		6345542	0					
ANR	6345709	Callee	strcpy		6345542	0					
ANR	6345710	Identifier	strcpy		6345542	0					
ANR	6345711	ArgumentList	* name		6345542	1					
ANR	6345712	Argument	* name		6345542	0					
ANR	6345713	UnaryOperationExpression	* name		6345542	0					
ANR	6345714	UnaryOperator	*		6345542	0					
ANR	6345715	Identifier	name		6345542	1					
ANR	6345716	Argument	"""array: """		6345542	1					
ANR	6345717	PrimaryExpression	"""array: """		6345542	0					
ANR	6345718	IfStatement	if ( tmp_name )		6345542	13					
ANR	6345719	Condition	tmp_name	1024:5:25314:25321	6345542	0	True				
ANR	6345720	Identifier	tmp_name		6345542	0					
ANR	6345721	CompoundStatement		31:15:622:622	6345542	1					
ANR	6345722	ExpressionStatement	"strcat ( * name , tmp_name )"	1025:2:25328:25352	6345542	0	True				
ANR	6345723	CallExpression	"strcat ( * name , tmp_name )"		6345542	0					
ANR	6345724	Callee	strcat		6345542	0					
ANR	6345725	Identifier	strcat		6345542	0					
ANR	6345726	ArgumentList	* name		6345542	1					
ANR	6345727	Argument	* name		6345542	0					
ANR	6345728	UnaryOperationExpression	* name		6345542	0					
ANR	6345729	UnaryOperator	*		6345542	0					
ANR	6345730	Identifier	name		6345542	1					
ANR	6345731	Argument	tmp_name		6345542	1					
ANR	6345732	Identifier	tmp_name		6345542	0					
ANR	6345733	IfStatement	if ( need_to_free )		6345542	14					
ANR	6345734	Condition	need_to_free	1027:5:25362:25373	6345542	0	True				
ANR	6345735	Identifier	need_to_free		6345542	0					
ANR	6345736	CompoundStatement		34:19:674:674	6345542	1					
ANR	6345737	ExpressionStatement	R_FREE ( tmp_name )	1028:2:25380:25397	6345542	0	True				
ANR	6345738	CallExpression	R_FREE ( tmp_name )		6345542	0					
ANR	6345739	Callee	R_FREE		6345542	0					
ANR	6345740	Identifier	R_FREE		6345542	0					
ANR	6345741	ArgumentList	tmp_name		6345542	1					
ANR	6345742	Argument	tmp_name		6345542	0					
ANR	6345743	Identifier	tmp_name		6345542	0					
ANR	6345744	ReturnType	static void		6345542	1					
ANR	6345745	Identifier	get_array_print_type		6345542	2					
ANR	6345746	ParameterList	"void * type , char * * name"		6345542	3					
ANR	6345747	Parameter	void * type	994:33:24676:24685	6345542	0	True				
ANR	6345748	ParameterType	void *		6345542	0					
ANR	6345749	Identifier	type		6345542	1					
ANR	6345750	Parameter	char * * name	994:45:24688:24698	6345542	1	True				
ANR	6345751	ParameterType	char * *		6345542	0					
ANR	6345752	Identifier	name		6345542	1					
ANR	6345753	CFGEntryNode	ENTRY		6345542		True				
ANR	6345754	CFGExitNode	EXIT		6345542		True				
ANR	6345755	Symbol	* name		6345542						
ANR	6345756	Symbol	malloc		6345542						
ANR	6345757	Symbol	NULL		6345542						
ANR	6345758	Symbol	ti -> get_element_type		6345542						
ANR	6345759	Symbol	false		6345542						
ANR	6345760	Symbol	& t -> type_data		6345542						
ANR	6345761	Symbol	type		6345542						
ANR	6345762	Symbol	tmp_name		6345542						
ANR	6345763	Symbol	strlen		6345542						
ANR	6345764	Symbol	base_type		6345542						
ANR	6345765	Symbol	t		6345542						
ANR	6345766	Symbol	ti		6345542						
ANR	6345767	Symbol	name		6345542						
ANR	6345768	Symbol	true		6345542						
ANR	6345769	Symbol	* ti		6345542						
ANR	6345770	Symbol	& t		6345542						
ANR	6345771	Symbol	name_len		6345542						
ANR	6345772	Symbol	need_to_free		6345542						
ANR	6345773	Symbol	& tmp_name		6345542						
ANR	6345774	Function	get_pointer_print_type	1032:0:25405:26147							
ANR	6345775	FunctionDef	"get_pointer_print_type (void * type , char * * name)"		6345774	0					
ANR	6345776	CompoundStatement		1032:60:25465:26147	6345774	0					
ANR	6345777	IdentifierDeclStatement	STypeInfo * ti = ( STypeInfo * ) type ;	1033:1:25468:25502	6345774	0	True				
ANR	6345778	IdentifierDecl	* ti = ( STypeInfo * ) type		6345774	0					
ANR	6345779	IdentifierDeclType	STypeInfo *		6345774	0					
ANR	6345780	Identifier	ti		6345774	1					
ANR	6345781	AssignmentExpression	* ti = ( STypeInfo * ) type		6345774	2		=			
ANR	6345782	Identifier	ti		6345774	0					
ANR	6345783	CastExpression	( STypeInfo * ) type		6345774	1					
ANR	6345784	CastTarget	STypeInfo *		6345774	0					
ANR	6345785	Identifier	type		6345774	1					
ANR	6345786	IdentifierDeclStatement	SType * t = 0 ;	1034:1:25505:25517	6345774	1	True				
ANR	6345787	IdentifierDecl	* t = 0		6345774	0					
ANR	6345788	IdentifierDeclType	SType *		6345774	0					
ANR	6345789	Identifier	t		6345774	1					
ANR	6345790	AssignmentExpression	* t = 0		6345774	2		=			
ANR	6345791	Identifier	t		6345774	0					
ANR	6345792	PrimaryExpression	0		6345774	1					
ANR	6345793	IdentifierDeclStatement	char * tmp_name = NULL ;	1035:1:25520:25541	6345774	2	True				
ANR	6345794	IdentifierDecl	* tmp_name = NULL		6345774	0					
ANR	6345795	IdentifierDeclType	char *		6345774	0					
ANR	6345796	Identifier	tmp_name		6345774	1					
ANR	6345797	AssignmentExpression	* tmp_name = NULL		6345774	2		=			
ANR	6345798	Identifier	NULL		6345774	0					
ANR	6345799	Identifier	NULL		6345774	1					
ANR	6345800	IdentifierDeclStatement	int name_len = 0 ;	1036:1:25544:25560	6345774	3	True				
ANR	6345801	IdentifierDecl	name_len = 0		6345774	0					
ANR	6345802	IdentifierDeclType	int		6345774	0					
ANR	6345803	Identifier	name_len		6345774	1					
ANR	6345804	AssignmentExpression	name_len = 0		6345774	2		=			
ANR	6345805	Identifier	name_len		6345774	0					
ANR	6345806	PrimaryExpression	0		6345774	1					
ANR	6345807	IdentifierDeclStatement	int need_to_free = 1 ;	1037:1:25563:25583	6345774	4	True				
ANR	6345808	IdentifierDecl	need_to_free = 1		6345774	0					
ANR	6345809	IdentifierDeclType	int		6345774	0					
ANR	6345810	Identifier	need_to_free		6345774	1					
ANR	6345811	AssignmentExpression	need_to_free = 1		6345774	2		=			
ANR	6345812	Identifier	need_to_free		6345774	0					
ANR	6345813	PrimaryExpression	1		6345774	1					
ANR	6345814	IdentifierDeclStatement	int base_type = 0 ;	1038:1:25586:25603	6345774	5	True				
ANR	6345815	IdentifierDecl	base_type = 0		6345774	0					
ANR	6345816	IdentifierDeclType	int		6345774	0					
ANR	6345817	Identifier	base_type		6345774	1					
ANR	6345818	AssignmentExpression	base_type = 0		6345774	2		=			
ANR	6345819	Identifier	base_type		6345774	0					
ANR	6345820	PrimaryExpression	0		6345774	1					
ANR	6345821	ExpressionStatement	"base_type = ti -> get_utype ( ti , ( void * * ) & t )"	1040:1:25607:25650	6345774	6	True				
ANR	6345822	AssignmentExpression	"base_type = ti -> get_utype ( ti , ( void * * ) & t )"		6345774	0		=			
ANR	6345823	Identifier	base_type		6345774	0					
ANR	6345824	CallExpression	"ti -> get_utype ( ti , ( void * * ) & t )"		6345774	1					
ANR	6345825	Callee	ti -> get_utype		6345774	0					
ANR	6345826	PtrMemberAccess	ti -> get_utype		6345774	0					
ANR	6345827	Identifier	ti		6345774	0					
ANR	6345828	Identifier	get_utype		6345774	1					
ANR	6345829	ArgumentList	ti		6345774	1					
ANR	6345830	Argument	ti		6345774	0					
ANR	6345831	Identifier	ti		6345774	0					
ANR	6345832	Argument	( void * * ) & t		6345774	1					
ANR	6345833	CastExpression	( void * * ) & t		6345774	0					
ANR	6345834	CastTarget	void * *		6345774	0					
ANR	6345835	UnaryOperationExpression	& t		6345774	1					
ANR	6345836	UnaryOperator	&		6345774	0					
ANR	6345837	Identifier	t		6345774	1					
ANR	6345838	IfStatement	if ( ! t )		6345774	7					
ANR	6345839	Condition	! t	1041:5:25657:25658	6345774	0	True				
ANR	6345840	UnaryOperationExpression	! t		6345774	0					
ANR	6345841	UnaryOperator	!		6345774	0					
ANR	6345842	Identifier	t		6345774	1					
ANR	6345843	CompoundStatement		10:9:195:195	6345774	1					
ANR	6345844	ExpressionStatement	need_to_free = 0	1042:2:25665:25681	6345774	0	True				
ANR	6345845	AssignmentExpression	need_to_free = 0		6345774	0		=			
ANR	6345846	Identifier	need_to_free		6345774	0					
ANR	6345847	PrimaryExpression	0		6345774	1					
ANR	6345848	ExpressionStatement	"print_base_type ( base_type , & tmp_name )"	1043:2:25685:25723	6345774	1	True				
ANR	6345849	CallExpression	"print_base_type ( base_type , & tmp_name )"		6345774	0					
ANR	6345850	Callee	print_base_type		6345774	0					
ANR	6345851	Identifier	print_base_type		6345774	0					
ANR	6345852	ArgumentList	base_type		6345774	1					
ANR	6345853	Argument	base_type		6345774	0					
ANR	6345854	Identifier	base_type		6345774	0					
ANR	6345855	Argument	& tmp_name		6345774	1					
ANR	6345856	UnaryOperationExpression	& tmp_name		6345774	0					
ANR	6345857	UnaryOperator	&		6345774	0					
ANR	6345858	Identifier	tmp_name		6345774	1					
ANR	6345859	ElseStatement	else		6345774	0					
ANR	6345860	CompoundStatement		13:8:267:267	6345774	0					
ANR	6345861	ExpressionStatement	ti = & t -> type_data	1045:2:25737:25755	6345774	0	True				
ANR	6345862	AssignmentExpression	ti = & t -> type_data		6345774	0		=			
ANR	6345863	Identifier	ti		6345774	0					
ANR	6345864	UnaryOperationExpression	& t -> type_data		6345774	1					
ANR	6345865	UnaryOperator	&		6345774	0					
ANR	6345866	PtrMemberAccess	t -> type_data		6345774	1					
ANR	6345867	Identifier	t		6345774	0					
ANR	6345868	Identifier	type_data		6345774	1					
ANR	6345869	ExpressionStatement	"ti -> get_print_type ( ti , & tmp_name )"	1046:2:25759:25793	6345774	1	True				
ANR	6345870	CallExpression	"ti -> get_print_type ( ti , & tmp_name )"		6345774	0					
ANR	6345871	Callee	ti -> get_print_type		6345774	0					
ANR	6345872	PtrMemberAccess	ti -> get_print_type		6345774	0					
ANR	6345873	Identifier	ti		6345774	0					
ANR	6345874	Identifier	get_print_type		6345774	1					
ANR	6345875	ArgumentList	ti		6345774	1					
ANR	6345876	Argument	ti		6345774	0					
ANR	6345877	Identifier	ti		6345774	0					
ANR	6345878	Argument	& tmp_name		6345774	1					
ANR	6345879	UnaryOperationExpression	& tmp_name		6345774	0					
ANR	6345880	UnaryOperator	&		6345774	0					
ANR	6345881	Identifier	tmp_name		6345774	1					
ANR	6345882	ExpressionStatement	"name_len = strlen ( ""pointer to "" )"	1049:1:25800:25833	6345774	8	True				
ANR	6345883	AssignmentExpression	"name_len = strlen ( ""pointer to "" )"		6345774	0		=			
ANR	6345884	Identifier	name_len		6345774	0					
ANR	6345885	CallExpression	"strlen ( ""pointer to "" )"		6345774	1					
ANR	6345886	Callee	strlen		6345774	0					
ANR	6345887	Identifier	strlen		6345774	0					
ANR	6345888	ArgumentList	"""pointer to """		6345774	1					
ANR	6345889	Argument	"""pointer to """		6345774	0					
ANR	6345890	PrimaryExpression	"""pointer to """		6345774	0					
ANR	6345891	IfStatement	if ( tmp_name )		6345774	9					
ANR	6345892	Condition	tmp_name	1050:5:25840:25847	6345774	0	True				
ANR	6345893	Identifier	tmp_name		6345774	0					
ANR	6345894	CompoundStatement		19:15:384:384	6345774	1					
ANR	6345895	ExpressionStatement	name_len += strlen ( tmp_name )	1051:2:25854:25883	6345774	0	True				
ANR	6345896	AssignmentExpression	name_len += strlen ( tmp_name )		6345774	0		+=			
ANR	6345897	Identifier	name_len		6345774	0					
ANR	6345898	CallExpression	strlen ( tmp_name )		6345774	1					
ANR	6345899	Callee	strlen		6345774	0					
ANR	6345900	Identifier	strlen		6345774	0					
ANR	6345901	ArgumentList	tmp_name		6345774	1					
ANR	6345902	Argument	tmp_name		6345774	0					
ANR	6345903	Identifier	tmp_name		6345774	0					
ANR	6345904	ExpressionStatement	* name = ( char * ) malloc ( name_len + 1 )	1053:1:25889:25927	6345774	10	True				
ANR	6345905	AssignmentExpression	* name = ( char * ) malloc ( name_len + 1 )		6345774	0		=			
ANR	6345906	UnaryOperationExpression	* name		6345774	0					
ANR	6345907	UnaryOperator	*		6345774	0					
ANR	6345908	Identifier	name		6345774	1					
ANR	6345909	CastExpression	( char * ) malloc ( name_len + 1 )		6345774	1					
ANR	6345910	CastTarget	char *		6345774	0					
ANR	6345911	CallExpression	malloc ( name_len + 1 )		6345774	1					
ANR	6345912	Callee	malloc		6345774	0					
ANR	6345913	Identifier	malloc		6345774	0					
ANR	6345914	ArgumentList	name_len + 1		6345774	1					
ANR	6345915	Argument	name_len + 1		6345774	0					
ANR	6345916	AdditiveExpression	name_len + 1		6345774	0		+			
ANR	6345917	Identifier	name_len		6345774	0					
ANR	6345918	PrimaryExpression	1		6345774	1					
ANR	6345919	IfStatement	if ( ! ( * name ) )		6345774	11					
ANR	6345920	Condition	! ( * name )	1054:5:25934:25941	6345774	0	True				
ANR	6345921	UnaryOperationExpression	! ( * name )		6345774	0					
ANR	6345922	UnaryOperator	!		6345774	0					
ANR	6345923	UnaryOperationExpression	* name		6345774	1					
ANR	6345924	UnaryOperator	*		6345774	0					
ANR	6345925	Identifier	name		6345774	1					
ANR	6345926	CompoundStatement		23:15:478:478	6345774	1					
ANR	6345927	ReturnStatement	return ;	1056:2:25970:25976	6345774	0	True				
ANR	6345928	ExpressionStatement	"strcpy ( * name , ""pointer to "" )"	1059:1:26009:26038	6345774	12	True				
ANR	6345929	CallExpression	"strcpy ( * name , ""pointer to "" )"		6345774	0					
ANR	6345930	Callee	strcpy		6345774	0					
ANR	6345931	Identifier	strcpy		6345774	0					
ANR	6345932	ArgumentList	* name		6345774	1					
ANR	6345933	Argument	* name		6345774	0					
ANR	6345934	UnaryOperationExpression	* name		6345774	0					
ANR	6345935	UnaryOperator	*		6345774	0					
ANR	6345936	Identifier	name		6345774	1					
ANR	6345937	Argument	"""pointer to """		6345774	1					
ANR	6345938	PrimaryExpression	"""pointer to """		6345774	0					
ANR	6345939	IfStatement	if ( tmp_name )		6345774	13					
ANR	6345940	Condition	tmp_name	1060:5:26045:26052	6345774	0	True				
ANR	6345941	Identifier	tmp_name		6345774	0					
ANR	6345942	CompoundStatement		29:15:589:589	6345774	1					
ANR	6345943	ExpressionStatement	"strcat ( * name , tmp_name )"	1061:2:26059:26083	6345774	0	True				
ANR	6345944	CallExpression	"strcat ( * name , tmp_name )"		6345774	0					
ANR	6345945	Callee	strcat		6345774	0					
ANR	6345946	Identifier	strcat		6345774	0					
ANR	6345947	ArgumentList	* name		6345774	1					
ANR	6345948	Argument	* name		6345774	0					
ANR	6345949	UnaryOperationExpression	* name		6345774	0					
ANR	6345950	UnaryOperator	*		6345774	0					
ANR	6345951	Identifier	name		6345774	1					
ANR	6345952	Argument	tmp_name		6345774	1					
ANR	6345953	Identifier	tmp_name		6345774	0					
ANR	6345954	IfStatement	if ( need_to_free )		6345774	14					
ANR	6345955	Condition	need_to_free	1063:5:26093:26104	6345774	0	True				
ANR	6345956	Identifier	need_to_free		6345774	0					
ANR	6345957	CompoundStatement		32:19:641:641	6345774	1					
ANR	6345958	ExpressionStatement	free ( tmp_name )	1064:2:26111:26126	6345774	0	True				
ANR	6345959	CallExpression	free ( tmp_name )		6345774	0					
ANR	6345960	Callee	free		6345774	0					
ANR	6345961	Identifier	free		6345774	0					
ANR	6345962	ArgumentList	tmp_name		6345774	1					
ANR	6345963	Argument	tmp_name		6345774	0					
ANR	6345964	Identifier	tmp_name		6345774	0					
ANR	6345965	ExpressionStatement	tmp_name = 0	1065:2:26130:26142	6345774	1	True				
ANR	6345966	AssignmentExpression	tmp_name = 0		6345774	0		=			
ANR	6345967	Identifier	tmp_name		6345774	0					
ANR	6345968	PrimaryExpression	0		6345774	1					
ANR	6345969	ReturnType	static void		6345774	1					
ANR	6345970	Identifier	get_pointer_print_type		6345774	2					
ANR	6345971	ParameterList	"void * type , char * * name"		6345774	3					
ANR	6345972	Parameter	void * type	1032:35:25440:25449	6345774	0	True				
ANR	6345973	ParameterType	void *		6345774	0					
ANR	6345974	Identifier	type		6345774	1					
ANR	6345975	Parameter	char * * name	1032:47:25452:25462	6345774	1	True				
ANR	6345976	ParameterType	char * *		6345774	0					
ANR	6345977	Identifier	name		6345774	1					
ANR	6345978	CFGEntryNode	ENTRY		6345774		True				
ANR	6345979	CFGExitNode	EXIT		6345774		True				
ANR	6345980	Symbol	* name		6345774						
ANR	6345981	Symbol	malloc		6345774						
ANR	6345982	Symbol	NULL		6345774						
ANR	6345983	Symbol	ti -> get_utype		6345774						
ANR	6345984	Symbol	& t -> type_data		6345774						
ANR	6345985	Symbol	type		6345774						
ANR	6345986	Symbol	tmp_name		6345774						
ANR	6345987	Symbol	strlen		6345774						
ANR	6345988	Symbol	base_type		6345774						
ANR	6345989	Symbol	t		6345774						
ANR	6345990	Symbol	ti		6345774						
ANR	6345991	Symbol	name		6345774						
ANR	6345992	Symbol	* ti		6345774						
ANR	6345993	Symbol	& t		6345774						
ANR	6345994	Symbol	name_len		6345774						
ANR	6345995	Symbol	need_to_free		6345774						
ANR	6345996	Symbol	& tmp_name		6345774						
ANR	6345997	Function	get_modifier_print_type	1069:0:26150:26913							
ANR	6345998	FunctionDef	"get_modifier_print_type (void * type , char * * name)"		6345997	0					
ANR	6345999	CompoundStatement		1069:61:26211:26913	6345997	0					
ANR	6346000	IdentifierDeclStatement	STypeInfo * ti = ( STypeInfo * ) type ;	1070:1:26214:26248	6345997	0	True				
ANR	6346001	IdentifierDecl	* ti = ( STypeInfo * ) type		6345997	0					
ANR	6346002	IdentifierDeclType	STypeInfo *		6345997	0					
ANR	6346003	Identifier	ti		6345997	1					
ANR	6346004	AssignmentExpression	* ti = ( STypeInfo * ) type		6345997	2		=			
ANR	6346005	Identifier	ti		6345997	0					
ANR	6346006	CastExpression	( STypeInfo * ) type		6345997	1					
ANR	6346007	CastTarget	STypeInfo *		6345997	0					
ANR	6346008	Identifier	type		6345997	1					
ANR	6346009	IdentifierDeclStatement	SType * t = 0 ;	1071:1:26251:26263	6345997	1	True				
ANR	6346010	IdentifierDecl	* t = 0		6345997	0					
ANR	6346011	IdentifierDeclType	SType *		6345997	0					
ANR	6346012	Identifier	t		6345997	1					
ANR	6346013	AssignmentExpression	* t = 0		6345997	2		=			
ANR	6346014	Identifier	t		6345997	0					
ANR	6346015	PrimaryExpression	0		6345997	1					
ANR	6346016	IdentifierDeclStatement	char * tmp_name = NULL ;	1072:1:26266:26287	6345997	2	True				
ANR	6346017	IdentifierDecl	* tmp_name = NULL		6345997	0					
ANR	6346018	IdentifierDeclType	char *		6345997	0					
ANR	6346019	Identifier	tmp_name		6345997	1					
ANR	6346020	AssignmentExpression	* tmp_name = NULL		6345997	2		=			
ANR	6346021	Identifier	NULL		6345997	0					
ANR	6346022	Identifier	NULL		6345997	1					
ANR	6346023	IdentifierDeclStatement	int name_len = 0 ;	1073:1:26290:26306	6345997	3	True				
ANR	6346024	IdentifierDecl	name_len = 0		6345997	0					
ANR	6346025	IdentifierDeclType	int		6345997	0					
ANR	6346026	Identifier	name_len		6345997	1					
ANR	6346027	AssignmentExpression	name_len = 0		6345997	2		=			
ANR	6346028	Identifier	name_len		6345997	0					
ANR	6346029	PrimaryExpression	0		6345997	1					
ANR	6346030	IdentifierDeclStatement	bool need_to_free = true ;	1074:1:26309:26333	6345997	4	True				
ANR	6346031	IdentifierDecl	need_to_free = true		6345997	0					
ANR	6346032	IdentifierDeclType	bool		6345997	0					
ANR	6346033	Identifier	need_to_free		6345997	1					
ANR	6346034	AssignmentExpression	need_to_free = true		6345997	2		=			
ANR	6346035	Identifier	true		6345997	0					
ANR	6346036	Identifier	true		6345997	1					
ANR	6346037	IdentifierDeclStatement	int base_type = 0 ;	1075:1:26336:26353	6345997	5	True				
ANR	6346038	IdentifierDecl	base_type = 0		6345997	0					
ANR	6346039	IdentifierDeclType	int		6345997	0					
ANR	6346040	Identifier	base_type		6345997	1					
ANR	6346041	AssignmentExpression	base_type = 0		6345997	2		=			
ANR	6346042	Identifier	base_type		6345997	0					
ANR	6346043	PrimaryExpression	0		6345997	1					
ANR	6346044	ExpressionStatement	"base_type = ti -> get_modified_type ( ti , ( void * * ) & t )"	1077:1:26357:26408	6345997	6	True				
ANR	6346045	AssignmentExpression	"base_type = ti -> get_modified_type ( ti , ( void * * ) & t )"		6345997	0		=			
ANR	6346046	Identifier	base_type		6345997	0					
ANR	6346047	CallExpression	"ti -> get_modified_type ( ti , ( void * * ) & t )"		6345997	1					
ANR	6346048	Callee	ti -> get_modified_type		6345997	0					
ANR	6346049	PtrMemberAccess	ti -> get_modified_type		6345997	0					
ANR	6346050	Identifier	ti		6345997	0					
ANR	6346051	Identifier	get_modified_type		6345997	1					
ANR	6346052	ArgumentList	ti		6345997	1					
ANR	6346053	Argument	ti		6345997	0					
ANR	6346054	Identifier	ti		6345997	0					
ANR	6346055	Argument	( void * * ) & t		6345997	1					
ANR	6346056	CastExpression	( void * * ) & t		6345997	0					
ANR	6346057	CastTarget	void * *		6345997	0					
ANR	6346058	UnaryOperationExpression	& t		6345997	1					
ANR	6346059	UnaryOperator	&		6345997	0					
ANR	6346060	Identifier	t		6345997	1					
ANR	6346061	IfStatement	if ( ! t )		6345997	7					
ANR	6346062	Condition	! t	1078:5:26415:26416	6345997	0	True				
ANR	6346063	UnaryOperationExpression	! t		6345997	0					
ANR	6346064	UnaryOperator	!		6345997	0					
ANR	6346065	Identifier	t		6345997	1					
ANR	6346066	CompoundStatement		10:9:207:207	6345997	1					
ANR	6346067	ExpressionStatement	need_to_free = false	1079:2:26423:26443	6345997	0	True				
ANR	6346068	AssignmentExpression	need_to_free = false		6345997	0		=			
ANR	6346069	Identifier	need_to_free		6345997	0					
ANR	6346070	Identifier	false		6345997	1					
ANR	6346071	ExpressionStatement	"print_base_type ( base_type , & tmp_name )"	1080:2:26447:26485	6345997	1	True				
ANR	6346072	CallExpression	"print_base_type ( base_type , & tmp_name )"		6345997	0					
ANR	6346073	Callee	print_base_type		6345997	0					
ANR	6346074	Identifier	print_base_type		6345997	0					
ANR	6346075	ArgumentList	base_type		6345997	1					
ANR	6346076	Argument	base_type		6345997	0					
ANR	6346077	Identifier	base_type		6345997	0					
ANR	6346078	Argument	& tmp_name		6345997	1					
ANR	6346079	UnaryOperationExpression	& tmp_name		6345997	0					
ANR	6346080	UnaryOperator	&		6345997	0					
ANR	6346081	Identifier	tmp_name		6345997	1					
ANR	6346082	ElseStatement	else		6345997	0					
ANR	6346083	CompoundStatement		13:8:283:283	6345997	0					
ANR	6346084	ExpressionStatement	ti = & t -> type_data	1082:2:26499:26517	6345997	0	True				
ANR	6346085	AssignmentExpression	ti = & t -> type_data		6345997	0		=			
ANR	6346086	Identifier	ti		6345997	0					
ANR	6346087	UnaryOperationExpression	& t -> type_data		6345997	1					
ANR	6346088	UnaryOperator	&		6345997	0					
ANR	6346089	PtrMemberAccess	t -> type_data		6345997	1					
ANR	6346090	Identifier	t		6345997	0					
ANR	6346091	Identifier	type_data		6345997	1					
ANR	6346092	ExpressionStatement	"ti -> get_print_type ( ti , & tmp_name )"	1083:2:26521:26555	6345997	1	True				
ANR	6346093	CallExpression	"ti -> get_print_type ( ti , & tmp_name )"		6345997	0					
ANR	6346094	Callee	ti -> get_print_type		6345997	0					
ANR	6346095	PtrMemberAccess	ti -> get_print_type		6345997	0					
ANR	6346096	Identifier	ti		6345997	0					
ANR	6346097	Identifier	get_print_type		6345997	1					
ANR	6346098	ArgumentList	ti		6345997	1					
ANR	6346099	Argument	ti		6345997	0					
ANR	6346100	Identifier	ti		6345997	0					
ANR	6346101	Argument	& tmp_name		6345997	1					
ANR	6346102	UnaryOperationExpression	& tmp_name		6345997	0					
ANR	6346103	UnaryOperator	&		6345997	0					
ANR	6346104	Identifier	tmp_name		6345997	1					
ANR	6346105	ExpressionStatement	"name_len = strlen ( ""modifier "" )"	1086:1:26562:26593	6345997	8	True				
ANR	6346106	AssignmentExpression	"name_len = strlen ( ""modifier "" )"		6345997	0		=			
ANR	6346107	Identifier	name_len		6345997	0					
ANR	6346108	CallExpression	"strlen ( ""modifier "" )"		6345997	1					
ANR	6346109	Callee	strlen		6345997	0					
ANR	6346110	Identifier	strlen		6345997	0					
ANR	6346111	ArgumentList	"""modifier """		6345997	1					
ANR	6346112	Argument	"""modifier """		6345997	0					
ANR	6346113	PrimaryExpression	"""modifier """		6345997	0					
ANR	6346114	IfStatement	if ( tmp_name )		6345997	9					
ANR	6346115	Condition	tmp_name	1087:5:26600:26607	6345997	0	True				
ANR	6346116	Identifier	tmp_name		6345997	0					
ANR	6346117	CompoundStatement		19:15:398:398	6345997	1					
ANR	6346118	ExpressionStatement	name_len += strlen ( tmp_name )	1088:2:26614:26643	6345997	0	True				
ANR	6346119	AssignmentExpression	name_len += strlen ( tmp_name )		6345997	0		+=			
ANR	6346120	Identifier	name_len		6345997	0					
ANR	6346121	CallExpression	strlen ( tmp_name )		6345997	1					
ANR	6346122	Callee	strlen		6345997	0					
ANR	6346123	Identifier	strlen		6345997	0					
ANR	6346124	ArgumentList	tmp_name		6345997	1					
ANR	6346125	Argument	tmp_name		6345997	0					
ANR	6346126	Identifier	tmp_name		6345997	0					
ANR	6346127	ExpressionStatement	* name = ( char * ) malloc ( name_len + 1 )	1090:1:26649:26687	6345997	10	True				
ANR	6346128	AssignmentExpression	* name = ( char * ) malloc ( name_len + 1 )		6345997	0		=			
ANR	6346129	UnaryOperationExpression	* name		6345997	0					
ANR	6346130	UnaryOperator	*		6345997	0					
ANR	6346131	Identifier	name		6345997	1					
ANR	6346132	CastExpression	( char * ) malloc ( name_len + 1 )		6345997	1					
ANR	6346133	CastTarget	char *		6345997	0					
ANR	6346134	CallExpression	malloc ( name_len + 1 )		6345997	1					
ANR	6346135	Callee	malloc		6345997	0					
ANR	6346136	Identifier	malloc		6345997	0					
ANR	6346137	ArgumentList	name_len + 1		6345997	1					
ANR	6346138	Argument	name_len + 1		6345997	0					
ANR	6346139	AdditiveExpression	name_len + 1		6345997	0		+			
ANR	6346140	Identifier	name_len		6345997	0					
ANR	6346141	PrimaryExpression	1		6345997	1					
ANR	6346142	IfStatement	if ( ! ( * name ) )		6345997	11					
ANR	6346143	Condition	! ( * name )	1091:5:26694:26701	6345997	0	True				
ANR	6346144	UnaryOperationExpression	! ( * name )		6345997	0					
ANR	6346145	UnaryOperator	!		6345997	0					
ANR	6346146	UnaryOperationExpression	* name		6345997	1					
ANR	6346147	UnaryOperator	*		6345997	0					
ANR	6346148	Identifier	name		6345997	1					
ANR	6346149	CompoundStatement		23:15:492:492	6345997	1					
ANR	6346150	IfStatement	if ( need_to_free )		6345997	0					
ANR	6346151	Condition	need_to_free	1092:6:26712:26723	6345997	0	True				
ANR	6346152	Identifier	need_to_free		6345997	0					
ANR	6346153	CompoundStatement		24:20:514:514	6345997	1					
ANR	6346154	ExpressionStatement	free ( tmp_name )	1093:3:26731:26746	6345997	0	True				
ANR	6346155	CallExpression	free ( tmp_name )		6345997	0					
ANR	6346156	Callee	free		6345997	0					
ANR	6346157	Identifier	free		6345997	0					
ANR	6346158	ArgumentList	tmp_name		6345997	1					
ANR	6346159	Argument	tmp_name		6345997	0					
ANR	6346160	Identifier	tmp_name		6345997	0					
ANR	6346161	ReturnStatement	return ;	1095:2:26754:26760	6345997	1	True				
ANR	6346162	ExpressionStatement	"strcpy ( * name , ""modifier "" )"	1098:1:26793:26820	6345997	12	True				
ANR	6346163	CallExpression	"strcpy ( * name , ""modifier "" )"		6345997	0					
ANR	6346164	Callee	strcpy		6345997	0					
ANR	6346165	Identifier	strcpy		6345997	0					
ANR	6346166	ArgumentList	* name		6345997	1					
ANR	6346167	Argument	* name		6345997	0					
ANR	6346168	UnaryOperationExpression	* name		6345997	0					
ANR	6346169	UnaryOperator	*		6345997	0					
ANR	6346170	Identifier	name		6345997	1					
ANR	6346171	Argument	"""modifier """		6345997	1					
ANR	6346172	PrimaryExpression	"""modifier """		6345997	0					
ANR	6346173	IfStatement	if ( tmp_name )		6345997	13					
ANR	6346174	Condition	tmp_name	1099:5:26827:26834	6345997	0	True				
ANR	6346175	Identifier	tmp_name		6345997	0					
ANR	6346176	CompoundStatement		31:15:625:625	6345997	1					
ANR	6346177	ExpressionStatement	"strcat ( * name , tmp_name )"	1100:2:26841:26865	6345997	0	True				
ANR	6346178	CallExpression	"strcat ( * name , tmp_name )"		6345997	0					
ANR	6346179	Callee	strcat		6345997	0					
ANR	6346180	Identifier	strcat		6345997	0					
ANR	6346181	ArgumentList	* name		6345997	1					
ANR	6346182	Argument	* name		6345997	0					
ANR	6346183	UnaryOperationExpression	* name		6345997	0					
ANR	6346184	UnaryOperator	*		6345997	0					
ANR	6346185	Identifier	name		6345997	1					
ANR	6346186	Argument	tmp_name		6345997	1					
ANR	6346187	Identifier	tmp_name		6345997	0					
ANR	6346188	IfStatement	if ( need_to_free )		6345997	14					
ANR	6346189	Condition	need_to_free	1102:5:26875:26886	6345997	0	True				
ANR	6346190	Identifier	need_to_free		6345997	0					
ANR	6346191	CompoundStatement		34:19:677:677	6345997	1					
ANR	6346192	ExpressionStatement	free ( tmp_name )	1103:2:26893:26908	6345997	0	True				
ANR	6346193	CallExpression	free ( tmp_name )		6345997	0					
ANR	6346194	Callee	free		6345997	0					
ANR	6346195	Identifier	free		6345997	0					
ANR	6346196	ArgumentList	tmp_name		6345997	1					
ANR	6346197	Argument	tmp_name		6345997	0					
ANR	6346198	Identifier	tmp_name		6345997	0					
ANR	6346199	ReturnType	static void		6345997	1					
ANR	6346200	Identifier	get_modifier_print_type		6345997	2					
ANR	6346201	ParameterList	"void * type , char * * name"		6345997	3					
ANR	6346202	Parameter	void * type	1069:36:26186:26195	6345997	0	True				
ANR	6346203	ParameterType	void *		6345997	0					
ANR	6346204	Identifier	type		6345997	1					
ANR	6346205	Parameter	char * * name	1069:48:26198:26208	6345997	1	True				
ANR	6346206	ParameterType	char * *		6345997	0					
ANR	6346207	Identifier	name		6345997	1					
ANR	6346208	CFGEntryNode	ENTRY		6345997		True				
ANR	6346209	CFGExitNode	EXIT		6345997		True				
ANR	6346210	Symbol	* name		6345997						
ANR	6346211	Symbol	malloc		6345997						
ANR	6346212	Symbol	NULL		6345997						
ANR	6346213	Symbol	false		6345997						
ANR	6346214	Symbol	& t -> type_data		6345997						
ANR	6346215	Symbol	type		6345997						
ANR	6346216	Symbol	tmp_name		6345997						
ANR	6346217	Symbol	ti -> get_modified_type		6345997						
ANR	6346218	Symbol	strlen		6345997						
ANR	6346219	Symbol	base_type		6345997						
ANR	6346220	Symbol	t		6345997						
ANR	6346221	Symbol	ti		6345997						
ANR	6346222	Symbol	name		6345997						
ANR	6346223	Symbol	true		6345997						
ANR	6346224	Symbol	* ti		6345997						
ANR	6346225	Symbol	& t		6345997						
ANR	6346226	Symbol	name_len		6345997						
ANR	6346227	Symbol	need_to_free		6345997						
ANR	6346228	Symbol	& tmp_name		6345997						
ANR	6346229	Function	get_procedure_print_type	1107:0:26916:27144							
ANR	6346230	FunctionDef	"get_procedure_print_type (void * type , char * * name)"		6346229	0					
ANR	6346231	CompoundStatement		1107:62:26978:27144	6346229	0					
ANR	6346232	IdentifierDeclStatement	"const int name_len = strlen ( ""proc "" ) ;"	1108:1:26981:27018	6346229	0	True				
ANR	6346233	IdentifierDecl	"name_len = strlen ( ""proc "" )"		6346229	0					
ANR	6346234	IdentifierDeclType	const int		6346229	0					
ANR	6346235	Identifier	name_len		6346229	1					
ANR	6346236	AssignmentExpression	"name_len = strlen ( ""proc "" )"		6346229	2		=			
ANR	6346237	Identifier	name_len		6346229	0					
ANR	6346238	CallExpression	"strlen ( ""proc "" )"		6346229	1					
ANR	6346239	Callee	strlen		6346229	0					
ANR	6346240	Identifier	strlen		6346229	0					
ANR	6346241	ArgumentList	"""proc """		6346229	1					
ANR	6346242	Argument	"""proc """		6346229	0					
ANR	6346243	PrimaryExpression	"""proc """		6346229	0					
ANR	6346244	ExpressionStatement	* name = ( char * ) malloc ( name_len + 1 )	1109:1:27021:27059	6346229	1	True				
ANR	6346245	AssignmentExpression	* name = ( char * ) malloc ( name_len + 1 )		6346229	0		=			
ANR	6346246	UnaryOperationExpression	* name		6346229	0					
ANR	6346247	UnaryOperator	*		6346229	0					
ANR	6346248	Identifier	name		6346229	1					
ANR	6346249	CastExpression	( char * ) malloc ( name_len + 1 )		6346229	1					
ANR	6346250	CastTarget	char *		6346229	0					
ANR	6346251	CallExpression	malloc ( name_len + 1 )		6346229	1					
ANR	6346252	Callee	malloc		6346229	0					
ANR	6346253	Identifier	malloc		6346229	0					
ANR	6346254	ArgumentList	name_len + 1		6346229	1					
ANR	6346255	Argument	name_len + 1		6346229	0					
ANR	6346256	AdditiveExpression	name_len + 1		6346229	0		+			
ANR	6346257	Identifier	name_len		6346229	0					
ANR	6346258	PrimaryExpression	1		6346229	1					
ANR	6346259	IfStatement	if ( ! ( * name ) )		6346229	2					
ANR	6346260	Condition	! ( * name )	1110:5:27066:27073	6346229	0	True				
ANR	6346261	UnaryOperationExpression	! ( * name )		6346229	0					
ANR	6346262	UnaryOperator	!		6346229	0					
ANR	6346263	UnaryOperationExpression	* name		6346229	1					
ANR	6346264	UnaryOperator	*		6346229	0					
ANR	6346265	Identifier	name		6346229	1					
ANR	6346266	CompoundStatement		4:15:97:97	6346229	1					
ANR	6346267	ReturnStatement	return ;	1111:2:27080:27086	6346229	0	True				
ANR	6346268	ExpressionStatement	"strcpy ( * name , ""proc "" )"	1114:1:27119:27142	6346229	3	True				
ANR	6346269	CallExpression	"strcpy ( * name , ""proc "" )"		6346229	0					
ANR	6346270	Callee	strcpy		6346229	0					
ANR	6346271	Identifier	strcpy		6346229	0					
ANR	6346272	ArgumentList	* name		6346229	1					
ANR	6346273	Argument	* name		6346229	0					
ANR	6346274	UnaryOperationExpression	* name		6346229	0					
ANR	6346275	UnaryOperator	*		6346229	0					
ANR	6346276	Identifier	name		6346229	1					
ANR	6346277	Argument	"""proc """		6346229	1					
ANR	6346278	PrimaryExpression	"""proc """		6346229	0					
ANR	6346279	ReturnType	static void		6346229	1					
ANR	6346280	Identifier	get_procedure_print_type		6346229	2					
ANR	6346281	ParameterList	"void * type , char * * name"		6346229	3					
ANR	6346282	Parameter	void * type	1107:37:26953:26962	6346229	0	True				
ANR	6346283	ParameterType	void *		6346229	0					
ANR	6346284	Identifier	type		6346229	1					
ANR	6346285	Parameter	char * * name	1107:49:26965:26975	6346229	1	True				
ANR	6346286	ParameterType	char * *		6346229	0					
ANR	6346287	Identifier	name		6346229	1					
ANR	6346288	CFGEntryNode	ENTRY		6346229		True				
ANR	6346289	CFGExitNode	EXIT		6346229		True				
ANR	6346290	Symbol	* name		6346229						
ANR	6346291	Symbol	strlen		6346229						
ANR	6346292	Symbol	malloc		6346229						
ANR	6346293	Symbol	name		6346229						
ANR	6346294	Symbol	name_len		6346229						
ANR	6346295	Symbol	type		6346229						
ANR	6346296	Function	get_bitfield_print_type	1117:0:27147:28084							
ANR	6346297	FunctionDef	"get_bitfield_print_type (void * type , char * * name)"		6346296	0					
ANR	6346298	CompoundStatement		1117:61:27208:28084	6346296	0					
ANR	6346299	IdentifierDeclStatement	STypeInfo * ti = ( STypeInfo * ) type ;	1118:1:27211:27245	6346296	0	True				
ANR	6346300	IdentifierDecl	* ti = ( STypeInfo * ) type		6346296	0					
ANR	6346301	IdentifierDeclType	STypeInfo *		6346296	0					
ANR	6346302	Identifier	ti		6346296	1					
ANR	6346303	AssignmentExpression	* ti = ( STypeInfo * ) type		6346296	2		=			
ANR	6346304	Identifier	ti		6346296	0					
ANR	6346305	CastExpression	( STypeInfo * ) type		6346296	1					
ANR	6346306	CastTarget	STypeInfo *		6346296	0					
ANR	6346307	Identifier	type		6346296	1					
ANR	6346308	IdentifierDeclStatement	SType * t = 0 ;	1119:1:27248:27260	6346296	1	True				
ANR	6346309	IdentifierDecl	* t = 0		6346296	0					
ANR	6346310	IdentifierDeclType	SType *		6346296	0					
ANR	6346311	Identifier	t		6346296	1					
ANR	6346312	AssignmentExpression	* t = 0		6346296	2		=			
ANR	6346313	Identifier	t		6346296	0					
ANR	6346314	PrimaryExpression	0		6346296	1					
ANR	6346315	IdentifierDeclStatement	char * tmp_name = 0 ;	1120:1:27263:27281	6346296	2	True				
ANR	6346316	IdentifierDecl	* tmp_name = 0		6346296	0					
ANR	6346317	IdentifierDeclType	char *		6346296	0					
ANR	6346318	Identifier	tmp_name		6346296	1					
ANR	6346319	AssignmentExpression	* tmp_name = 0		6346296	2		=			
ANR	6346320	Identifier	tmp_name		6346296	0					
ANR	6346321	PrimaryExpression	0		6346296	1					
ANR	6346322	IdentifierDeclStatement	int name_len = 0 ;	1121:1:27284:27300	6346296	3	True				
ANR	6346323	IdentifierDecl	name_len = 0		6346296	0					
ANR	6346324	IdentifierDeclType	int		6346296	0					
ANR	6346325	Identifier	name_len		6346296	1					
ANR	6346326	AssignmentExpression	name_len = 0		6346296	2		=			
ANR	6346327	Identifier	name_len		6346296	0					
ANR	6346328	PrimaryExpression	0		6346296	1					
ANR	6346329	IdentifierDeclStatement	int need_to_free = 1 ;	1122:1:27303:27323	6346296	4	True				
ANR	6346330	IdentifierDecl	need_to_free = 1		6346296	0					
ANR	6346331	IdentifierDeclType	int		6346296	0					
ANR	6346332	Identifier	need_to_free		6346296	1					
ANR	6346333	AssignmentExpression	need_to_free = 1		6346296	2		=			
ANR	6346334	Identifier	need_to_free		6346296	0					
ANR	6346335	PrimaryExpression	1		6346296	1					
ANR	6346336	IdentifierDeclStatement	int base_type = 0 ;	1123:1:27326:27343	6346296	5	True				
ANR	6346337	IdentifierDecl	base_type = 0		6346296	0					
ANR	6346338	IdentifierDeclType	int		6346296	0					
ANR	6346339	Identifier	base_type		6346296	1					
ANR	6346340	AssignmentExpression	base_type = 0		6346296	2		=			
ANR	6346341	Identifier	base_type		6346296	0					
ANR	6346342	PrimaryExpression	0		6346296	1					
ANR	6346343	IdentifierDeclStatement	SLF_BITFIELD * bitfeild_info = ( SLF_BITFIELD * ) ti -> type_info ;	1124:1:27346:27405	6346296	6	True				
ANR	6346344	IdentifierDecl	* bitfeild_info = ( SLF_BITFIELD * ) ti -> type_info		6346296	0					
ANR	6346345	IdentifierDeclType	SLF_BITFIELD *		6346296	0					
ANR	6346346	Identifier	bitfeild_info		6346296	1					
ANR	6346347	AssignmentExpression	* bitfeild_info = ( SLF_BITFIELD * ) ti -> type_info		6346296	2		=			
ANR	6346348	Identifier	bitfeild_info		6346296	0					
ANR	6346349	CastExpression	( SLF_BITFIELD * ) ti -> type_info		6346296	1					
ANR	6346350	CastTarget	SLF_BITFIELD *		6346296	0					
ANR	6346351	PtrMemberAccess	ti -> type_info		6346296	1					
ANR	6346352	Identifier	ti		6346296	0					
ANR	6346353	Identifier	type_info		6346296	1					
ANR	6346354	ExpressionStatement	"base_type = ti -> get_base_type ( ti , ( void * * ) & t )"	1126:1:27409:27456	6346296	7	True				
ANR	6346355	AssignmentExpression	"base_type = ti -> get_base_type ( ti , ( void * * ) & t )"		6346296	0		=			
ANR	6346356	Identifier	base_type		6346296	0					
ANR	6346357	CallExpression	"ti -> get_base_type ( ti , ( void * * ) & t )"		6346296	1					
ANR	6346358	Callee	ti -> get_base_type		6346296	0					
ANR	6346359	PtrMemberAccess	ti -> get_base_type		6346296	0					
ANR	6346360	Identifier	ti		6346296	0					
ANR	6346361	Identifier	get_base_type		6346296	1					
ANR	6346362	ArgumentList	ti		6346296	1					
ANR	6346363	Argument	ti		6346296	0					
ANR	6346364	Identifier	ti		6346296	0					
ANR	6346365	Argument	( void * * ) & t		6346296	1					
ANR	6346366	CastExpression	( void * * ) & t		6346296	0					
ANR	6346367	CastTarget	void * *		6346296	0					
ANR	6346368	UnaryOperationExpression	& t		6346296	1					
ANR	6346369	UnaryOperator	&		6346296	0					
ANR	6346370	Identifier	t		6346296	1					
ANR	6346371	IfStatement	if ( ! t )		6346296	8					
ANR	6346372	Condition	! t	1127:5:27463:27464	6346296	0	True				
ANR	6346373	UnaryOperationExpression	! t		6346296	0					
ANR	6346374	UnaryOperator	!		6346296	0					
ANR	6346375	Identifier	t		6346296	1					
ANR	6346376	CompoundStatement		11:9:258:258	6346296	1					
ANR	6346377	ExpressionStatement	need_to_free = 0	1128:2:27471:27487	6346296	0	True				
ANR	6346378	AssignmentExpression	need_to_free = 0		6346296	0		=			
ANR	6346379	Identifier	need_to_free		6346296	0					
ANR	6346380	PrimaryExpression	0		6346296	1					
ANR	6346381	ExpressionStatement	"print_base_type ( base_type , & tmp_name )"	1129:2:27491:27529	6346296	1	True				
ANR	6346382	CallExpression	"print_base_type ( base_type , & tmp_name )"		6346296	0					
ANR	6346383	Callee	print_base_type		6346296	0					
ANR	6346384	Identifier	print_base_type		6346296	0					
ANR	6346385	ArgumentList	base_type		6346296	1					
ANR	6346386	Argument	base_type		6346296	0					
ANR	6346387	Identifier	base_type		6346296	0					
ANR	6346388	Argument	& tmp_name		6346296	1					
ANR	6346389	UnaryOperationExpression	& tmp_name		6346296	0					
ANR	6346390	UnaryOperator	&		6346296	0					
ANR	6346391	Identifier	tmp_name		6346296	1					
ANR	6346392	ElseStatement	else		6346296	0					
ANR	6346393	CompoundStatement		14:8:330:330	6346296	0					
ANR	6346394	ExpressionStatement	ti = & t -> type_data	1131:2:27543:27561	6346296	0	True				
ANR	6346395	AssignmentExpression	ti = & t -> type_data		6346296	0		=			
ANR	6346396	Identifier	ti		6346296	0					
ANR	6346397	UnaryOperationExpression	& t -> type_data		6346296	1					
ANR	6346398	UnaryOperator	&		6346296	0					
ANR	6346399	PtrMemberAccess	t -> type_data		6346296	1					
ANR	6346400	Identifier	t		6346296	0					
ANR	6346401	Identifier	type_data		6346296	1					
ANR	6346402	ExpressionStatement	"ti -> get_print_type ( ti , & tmp_name )"	1132:2:27565:27599	6346296	1	True				
ANR	6346403	CallExpression	"ti -> get_print_type ( ti , & tmp_name )"		6346296	0					
ANR	6346404	Callee	ti -> get_print_type		6346296	0					
ANR	6346405	PtrMemberAccess	ti -> get_print_type		6346296	0					
ANR	6346406	Identifier	ti		6346296	0					
ANR	6346407	Identifier	get_print_type		6346296	1					
ANR	6346408	ArgumentList	ti		6346296	1					
ANR	6346409	Argument	ti		6346296	0					
ANR	6346410	Identifier	ti		6346296	0					
ANR	6346411	Argument	& tmp_name		6346296	1					
ANR	6346412	UnaryOperationExpression	& tmp_name		6346296	0					
ANR	6346413	UnaryOperator	&		6346296	0					
ANR	6346414	Identifier	tmp_name		6346296	1					
ANR	6346415	ExpressionStatement	"name_len = strlen ( ""bitfield "" )"	1135:1:27606:27637	6346296	9	True				
ANR	6346416	AssignmentExpression	"name_len = strlen ( ""bitfield "" )"		6346296	0		=			
ANR	6346417	Identifier	name_len		6346296	0					
ANR	6346418	CallExpression	"strlen ( ""bitfield "" )"		6346296	1					
ANR	6346419	Callee	strlen		6346296	0					
ANR	6346420	Identifier	strlen		6346296	0					
ANR	6346421	ArgumentList	"""bitfield """		6346296	1					
ANR	6346422	Argument	"""bitfield """		6346296	0					
ANR	6346423	PrimaryExpression	"""bitfield """		6346296	0					
ANR	6346424	IfStatement	if ( tmp_name )		6346296	10					
ANR	6346425	Condition	tmp_name	1136:5:27644:27651	6346296	0	True				
ANR	6346426	Identifier	tmp_name		6346296	0					
ANR	6346427	CompoundStatement		20:15:445:445	6346296	1					
ANR	6346428	ExpressionStatement	name_len += strlen ( tmp_name )	1137:2:27658:27687	6346296	0	True				
ANR	6346429	AssignmentExpression	name_len += strlen ( tmp_name )		6346296	0		+=			
ANR	6346430	Identifier	name_len		6346296	0					
ANR	6346431	CallExpression	strlen ( tmp_name )		6346296	1					
ANR	6346432	Callee	strlen		6346296	0					
ANR	6346433	Identifier	strlen		6346296	0					
ANR	6346434	ArgumentList	tmp_name		6346296	1					
ANR	6346435	Argument	tmp_name		6346296	0					
ANR	6346436	Identifier	tmp_name		6346296	0					
ANR	6346437	ExpressionStatement	name_len += 4	1139:1:27693:27706	6346296	11	True				
ANR	6346438	AssignmentExpression	name_len += 4		6346296	0		+=			
ANR	6346439	Identifier	name_len		6346296	0					
ANR	6346440	PrimaryExpression	4		6346296	1					
ANR	6346441	ExpressionStatement	* name = ( char * ) malloc ( name_len + 1 + 1 )	1140:1:27709:27751	6346296	12	True				
ANR	6346442	AssignmentExpression	* name = ( char * ) malloc ( name_len + 1 + 1 )		6346296	0		=			
ANR	6346443	UnaryOperationExpression	* name		6346296	0					
ANR	6346444	UnaryOperator	*		6346296	0					
ANR	6346445	Identifier	name		6346296	1					
ANR	6346446	CastExpression	( char * ) malloc ( name_len + 1 + 1 )		6346296	1					
ANR	6346447	CastTarget	char *		6346296	0					
ANR	6346448	CallExpression	malloc ( name_len + 1 + 1 )		6346296	1					
ANR	6346449	Callee	malloc		6346296	0					
ANR	6346450	Identifier	malloc		6346296	0					
ANR	6346451	ArgumentList	name_len + 1 + 1		6346296	1					
ANR	6346452	Argument	name_len + 1 + 1		6346296	0					
ANR	6346453	AdditiveExpression	name_len + 1 + 1		6346296	0		+			
ANR	6346454	Identifier	name_len		6346296	0					
ANR	6346455	AdditiveExpression	1 + 1		6346296	1		+			
ANR	6346456	PrimaryExpression	1		6346296	0					
ANR	6346457	PrimaryExpression	1		6346296	1					
ANR	6346458	IfStatement	if ( ! ( * name ) )		6346296	13					
ANR	6346459	Condition	! ( * name )	1141:5:27758:27765	6346296	0	True				
ANR	6346460	UnaryOperationExpression	! ( * name )		6346296	0					
ANR	6346461	UnaryOperator	!		6346296	0					
ANR	6346462	UnaryOperationExpression	* name		6346296	1					
ANR	6346463	UnaryOperator	*		6346296	0					
ANR	6346464	Identifier	name		6346296	1					
ANR	6346465	CompoundStatement		25:15:559:559	6346296	1					
ANR	6346466	IfStatement	if ( need_to_free )		6346296	0					
ANR	6346467	Condition	need_to_free	1142:6:27776:27787	6346296	0	True				
ANR	6346468	Identifier	need_to_free		6346296	0					
ANR	6346469	CompoundStatement		26:20:581:581	6346296	1					
ANR	6346470	ExpressionStatement	free ( tmp_name )	1143:3:27795:27810	6346296	0	True				
ANR	6346471	CallExpression	free ( tmp_name )		6346296	0					
ANR	6346472	Callee	free		6346296	0					
ANR	6346473	Identifier	free		6346296	0					
ANR	6346474	ArgumentList	tmp_name		6346296	1					
ANR	6346475	Argument	tmp_name		6346296	0					
ANR	6346476	Identifier	tmp_name		6346296	0					
ANR	6346477	ReturnStatement	return ;	1145:2:27818:27824	6346296	1	True				
ANR	6346478	IfStatement	if ( tmp_name )		6346296	14					
ANR	6346479	Condition	tmp_name	1149:5:27862:27869	6346296	0	True				
ANR	6346480	Identifier	tmp_name		6346296	0					
ANR	6346481	CompoundStatement		33:15:663:663	6346296	1					
ANR	6346482	ExpressionStatement	"sprintf ( * name , ""%s %s : %d"" , ""bitfield"" , tmp_name , ( int ) bitfeild_info -> length )"	1150:2:27876:27955	6346296	0	True				
ANR	6346483	CallExpression	"sprintf ( * name , ""%s %s : %d"" , ""bitfield"" , tmp_name , ( int ) bitfeild_info -> length )"		6346296	0					
ANR	6346484	Callee	sprintf		6346296	0					
ANR	6346485	Identifier	sprintf		6346296	0					
ANR	6346486	ArgumentList	* name		6346296	1					
ANR	6346487	Argument	* name		6346296	0					
ANR	6346488	UnaryOperationExpression	* name		6346296	0					
ANR	6346489	UnaryOperator	*		6346296	0					
ANR	6346490	Identifier	name		6346296	1					
ANR	6346491	Argument	"""%s %s : %d"""		6346296	1					
ANR	6346492	PrimaryExpression	"""%s %s : %d"""		6346296	0					
ANR	6346493	Argument	"""bitfield"""		6346296	2					
ANR	6346494	PrimaryExpression	"""bitfield"""		6346296	0					
ANR	6346495	Argument	tmp_name		6346296	3					
ANR	6346496	Identifier	tmp_name		6346296	0					
ANR	6346497	Argument	( int ) bitfeild_info -> length		6346296	4					
ANR	6346498	CastExpression	( int ) bitfeild_info -> length		6346296	0					
ANR	6346499	CastTarget	int		6346296	0					
ANR	6346500	PtrMemberAccess	bitfeild_info -> length		6346296	1					
ANR	6346501	Identifier	bitfeild_info		6346296	0					
ANR	6346502	Identifier	length		6346296	1					
ANR	6346503	ElseStatement	else		6346296	0					
ANR	6346504	CompoundStatement		35:8:756:756	6346296	0					
ANR	6346505	ExpressionStatement	"sprintf ( * name , ""%s : %d"" , ""bitfield"" , ( int ) bitfeild_info -> length )"	1152:2:27969:28035	6346296	0	True				
ANR	6346506	CallExpression	"sprintf ( * name , ""%s : %d"" , ""bitfield"" , ( int ) bitfeild_info -> length )"		6346296	0					
ANR	6346507	Callee	sprintf		6346296	0					
ANR	6346508	Identifier	sprintf		6346296	0					
ANR	6346509	ArgumentList	* name		6346296	1					
ANR	6346510	Argument	* name		6346296	0					
ANR	6346511	UnaryOperationExpression	* name		6346296	0					
ANR	6346512	UnaryOperator	*		6346296	0					
ANR	6346513	Identifier	name		6346296	1					
ANR	6346514	Argument	"""%s : %d"""		6346296	1					
ANR	6346515	PrimaryExpression	"""%s : %d"""		6346296	0					
ANR	6346516	Argument	"""bitfield"""		6346296	2					
ANR	6346517	PrimaryExpression	"""bitfield"""		6346296	0					
ANR	6346518	Argument	( int ) bitfeild_info -> length		6346296	3					
ANR	6346519	CastExpression	( int ) bitfeild_info -> length		6346296	0					
ANR	6346520	CastTarget	int		6346296	0					
ANR	6346521	PtrMemberAccess	bitfeild_info -> length		6346296	1					
ANR	6346522	Identifier	bitfeild_info		6346296	0					
ANR	6346523	Identifier	length		6346296	1					
ANR	6346524	IfStatement	if ( need_to_free )		6346296	15					
ANR	6346525	Condition	need_to_free	1155:5:28046:28057	6346296	0	True				
ANR	6346526	Identifier	need_to_free		6346296	0					
ANR	6346527	CompoundStatement		39:19:851:851	6346296	1					
ANR	6346528	ExpressionStatement	free ( tmp_name )	1156:2:28064:28079	6346296	0	True				
ANR	6346529	CallExpression	free ( tmp_name )		6346296	0					
ANR	6346530	Callee	free		6346296	0					
ANR	6346531	Identifier	free		6346296	0					
ANR	6346532	ArgumentList	tmp_name		6346296	1					
ANR	6346533	Argument	tmp_name		6346296	0					
ANR	6346534	Identifier	tmp_name		6346296	0					
ANR	6346535	ReturnType	static void		6346296	1					
ANR	6346536	Identifier	get_bitfield_print_type		6346296	2					
ANR	6346537	ParameterList	"void * type , char * * name"		6346296	3					
ANR	6346538	Parameter	void * type	1117:36:27183:27192	6346296	0	True				
ANR	6346539	ParameterType	void *		6346296	0					
ANR	6346540	Identifier	type		6346296	1					
ANR	6346541	Parameter	char * * name	1117:48:27195:27205	6346296	1	True				
ANR	6346542	ParameterType	char * *		6346296	0					
ANR	6346543	Identifier	name		6346296	1					
ANR	6346544	CFGEntryNode	ENTRY		6346296		True				
ANR	6346545	CFGExitNode	EXIT		6346296		True				
ANR	6346546	Symbol	* name		6346296						
ANR	6346547	Symbol	malloc		6346296						
ANR	6346548	Symbol	bitfeild_info -> length		6346296						
ANR	6346549	Symbol	ti -> get_base_type		6346296						
ANR	6346550	Symbol	& t -> type_data		6346296						
ANR	6346551	Symbol	type		6346296						
ANR	6346552	Symbol	* bitfeild_info		6346296						
ANR	6346553	Symbol	bitfeild_info		6346296						
ANR	6346554	Symbol	tmp_name		6346296						
ANR	6346555	Symbol	ti -> type_info		6346296						
ANR	6346556	Symbol	strlen		6346296						
ANR	6346557	Symbol	base_type		6346296						
ANR	6346558	Symbol	t		6346296						
ANR	6346559	Symbol	ti		6346296						
ANR	6346560	Symbol	name		6346296						
ANR	6346561	Symbol	* ti		6346296						
ANR	6346562	Symbol	& t		6346296						
ANR	6346563	Symbol	name_len		6346296						
ANR	6346564	Symbol	need_to_free		6346296						
ANR	6346565	Symbol	& tmp_name		6346296						
ANR	6346566	Function	get_fieldlist_print_type	1160:0:28087:28335							
ANR	6346567	FunctionDef	"get_fieldlist_print_type (void * type , char * * name)"		6346566	0					
ANR	6346568	CompoundStatement		1160:62:28149:28335	6346566	0					
ANR	6346569	IdentifierDeclStatement	int name_len = 0 ;	1161:1:28152:28168	6346566	0	True				
ANR	6346570	IdentifierDecl	name_len = 0		6346566	0					
ANR	6346571	IdentifierDeclType	int		6346566	0					
ANR	6346572	Identifier	name_len		6346566	1					
ANR	6346573	AssignmentExpression	name_len = 0		6346566	2		=			
ANR	6346574	Identifier	name_len		6346566	0					
ANR	6346575	PrimaryExpression	0		6346566	1					
ANR	6346576	ExpressionStatement	"name_len = strlen ( ""fieldlist "" )"	1163:1:28172:28204	6346566	1	True				
ANR	6346577	AssignmentExpression	"name_len = strlen ( ""fieldlist "" )"		6346566	0		=			
ANR	6346578	Identifier	name_len		6346566	0					
ANR	6346579	CallExpression	"strlen ( ""fieldlist "" )"		6346566	1					
ANR	6346580	Callee	strlen		6346566	0					
ANR	6346581	Identifier	strlen		6346566	0					
ANR	6346582	ArgumentList	"""fieldlist """		6346566	1					
ANR	6346583	Argument	"""fieldlist """		6346566	0					
ANR	6346584	PrimaryExpression	"""fieldlist """		6346566	0					
ANR	6346585	ExpressionStatement	* name = ( char * ) malloc ( name_len + 1 )	1164:1:28207:28245	6346566	2	True				
ANR	6346586	AssignmentExpression	* name = ( char * ) malloc ( name_len + 1 )		6346566	0		=			
ANR	6346587	UnaryOperationExpression	* name		6346566	0					
ANR	6346588	UnaryOperator	*		6346566	0					
ANR	6346589	Identifier	name		6346566	1					
ANR	6346590	CastExpression	( char * ) malloc ( name_len + 1 )		6346566	1					
ANR	6346591	CastTarget	char *		6346566	0					
ANR	6346592	CallExpression	malloc ( name_len + 1 )		6346566	1					
ANR	6346593	Callee	malloc		6346566	0					
ANR	6346594	Identifier	malloc		6346566	0					
ANR	6346595	ArgumentList	name_len + 1		6346566	1					
ANR	6346596	Argument	name_len + 1		6346566	0					
ANR	6346597	AdditiveExpression	name_len + 1		6346566	0		+			
ANR	6346598	Identifier	name_len		6346566	0					
ANR	6346599	PrimaryExpression	1		6346566	1					
ANR	6346600	IfStatement	if ( ! ( * name ) )		6346566	3					
ANR	6346601	Condition	! ( * name )	1165:5:28252:28259	6346566	0	True				
ANR	6346602	UnaryOperationExpression	! ( * name )		6346566	0					
ANR	6346603	UnaryOperator	!		6346566	0					
ANR	6346604	UnaryOperationExpression	* name		6346566	1					
ANR	6346605	UnaryOperator	*		6346566	0					
ANR	6346606	Identifier	name		6346566	1					
ANR	6346607	CompoundStatement		6:15:112:112	6346566	1					
ANR	6346608	ReturnStatement	return ;	1166:2:28266:28272	6346566	0	True				
ANR	6346609	ExpressionStatement	"strcpy ( * name , ""fieldlist "" )"	1169:1:28305:28333	6346566	4	True				
ANR	6346610	CallExpression	"strcpy ( * name , ""fieldlist "" )"		6346566	0					
ANR	6346611	Callee	strcpy		6346566	0					
ANR	6346612	Identifier	strcpy		6346566	0					
ANR	6346613	ArgumentList	* name		6346566	1					
ANR	6346614	Argument	* name		6346566	0					
ANR	6346615	UnaryOperationExpression	* name		6346566	0					
ANR	6346616	UnaryOperator	*		6346566	0					
ANR	6346617	Identifier	name		6346566	1					
ANR	6346618	Argument	"""fieldlist """		6346566	1					
ANR	6346619	PrimaryExpression	"""fieldlist """		6346566	0					
ANR	6346620	ReturnType	static void		6346566	1					
ANR	6346621	Identifier	get_fieldlist_print_type		6346566	2					
ANR	6346622	ParameterList	"void * type , char * * name"		6346566	3					
ANR	6346623	Parameter	void * type	1160:37:28124:28133	6346566	0	True				
ANR	6346624	ParameterType	void *		6346566	0					
ANR	6346625	Identifier	type		6346566	1					
ANR	6346626	Parameter	char * * name	1160:49:28136:28146	6346566	1	True				
ANR	6346627	ParameterType	char * *		6346566	0					
ANR	6346628	Identifier	name		6346566	1					
ANR	6346629	CFGEntryNode	ENTRY		6346566		True				
ANR	6346630	CFGExitNode	EXIT		6346566		True				
ANR	6346631	Symbol	* name		6346566						
ANR	6346632	Symbol	strlen		6346566						
ANR	6346633	Symbol	malloc		6346566						
ANR	6346634	Symbol	name		6346566						
ANR	6346635	Symbol	name_len		6346566						
ANR	6346636	Symbol	type		6346566						
ANR	6346637	Function	get_enum_print_type	1172:0:28338:29071							
ANR	6346638	FunctionDef	"get_enum_print_type (void * type , char * * name)"		6346637	0					
ANR	6346639	CompoundStatement		1172:57:28395:29071	6346637	0					
ANR	6346640	IdentifierDeclStatement	STypeInfo * ti = ( STypeInfo * ) type ;	1173:1:28398:28432	6346637	0	True				
ANR	6346641	IdentifierDecl	* ti = ( STypeInfo * ) type		6346637	0					
ANR	6346642	IdentifierDeclType	STypeInfo *		6346637	0					
ANR	6346643	Identifier	ti		6346637	1					
ANR	6346644	AssignmentExpression	* ti = ( STypeInfo * ) type		6346637	2		=			
ANR	6346645	Identifier	ti		6346637	0					
ANR	6346646	CastExpression	( STypeInfo * ) type		6346637	1					
ANR	6346647	CastTarget	STypeInfo *		6346637	0					
ANR	6346648	Identifier	type		6346637	1					
ANR	6346649	IdentifierDeclStatement	SType * t = 0 ;	1174:1:28435:28447	6346637	1	True				
ANR	6346650	IdentifierDecl	* t = 0		6346637	0					
ANR	6346651	IdentifierDeclType	SType *		6346637	0					
ANR	6346652	Identifier	t		6346637	1					
ANR	6346653	AssignmentExpression	* t = 0		6346637	2		=			
ANR	6346654	Identifier	t		6346637	0					
ANR	6346655	PrimaryExpression	0		6346637	1					
ANR	6346656	IdentifierDeclStatement	char * tmp_name = 0 ;	1175:1:28450:28468	6346637	2	True				
ANR	6346657	IdentifierDecl	* tmp_name = 0		6346637	0					
ANR	6346658	IdentifierDeclType	char *		6346637	0					
ANR	6346659	Identifier	tmp_name		6346637	1					
ANR	6346660	AssignmentExpression	* tmp_name = 0		6346637	2		=			
ANR	6346661	Identifier	tmp_name		6346637	0					
ANR	6346662	PrimaryExpression	0		6346637	1					
ANR	6346663	IdentifierDeclStatement	int name_len = 0 ;	1176:1:28471:28487	6346637	3	True				
ANR	6346664	IdentifierDecl	name_len = 0		6346637	0					
ANR	6346665	IdentifierDeclType	int		6346637	0					
ANR	6346666	Identifier	name_len		6346637	1					
ANR	6346667	AssignmentExpression	name_len = 0		6346637	2		=			
ANR	6346668	Identifier	name_len		6346637	0					
ANR	6346669	PrimaryExpression	0		6346637	1					
ANR	6346670	IdentifierDeclStatement	int need_to_free = 1 ;	1177:1:28490:28510	6346637	4	True				
ANR	6346671	IdentifierDecl	need_to_free = 1		6346637	0					
ANR	6346672	IdentifierDeclType	int		6346637	0					
ANR	6346673	Identifier	need_to_free		6346637	1					
ANR	6346674	AssignmentExpression	need_to_free = 1		6346637	2		=			
ANR	6346675	Identifier	need_to_free		6346637	0					
ANR	6346676	PrimaryExpression	1		6346637	1					
ANR	6346677	IdentifierDeclStatement	int base_type = 0 ;	1178:1:28513:28530	6346637	5	True				
ANR	6346678	IdentifierDecl	base_type = 0		6346637	0					
ANR	6346679	IdentifierDeclType	int		6346637	0					
ANR	6346680	Identifier	base_type		6346637	1					
ANR	6346681	AssignmentExpression	base_type = 0		6346637	2		=			
ANR	6346682	Identifier	base_type		6346637	0					
ANR	6346683	PrimaryExpression	0		6346637	1					
ANR	6346684	ExpressionStatement	"base_type = ti -> get_utype ( ti , ( void * * ) & t )"	1180:1:28534:28577	6346637	6	True				
ANR	6346685	AssignmentExpression	"base_type = ti -> get_utype ( ti , ( void * * ) & t )"		6346637	0		=			
ANR	6346686	Identifier	base_type		6346637	0					
ANR	6346687	CallExpression	"ti -> get_utype ( ti , ( void * * ) & t )"		6346637	1					
ANR	6346688	Callee	ti -> get_utype		6346637	0					
ANR	6346689	PtrMemberAccess	ti -> get_utype		6346637	0					
ANR	6346690	Identifier	ti		6346637	0					
ANR	6346691	Identifier	get_utype		6346637	1					
ANR	6346692	ArgumentList	ti		6346637	1					
ANR	6346693	Argument	ti		6346637	0					
ANR	6346694	Identifier	ti		6346637	0					
ANR	6346695	Argument	( void * * ) & t		6346637	1					
ANR	6346696	CastExpression	( void * * ) & t		6346637	0					
ANR	6346697	CastTarget	void * *		6346637	0					
ANR	6346698	UnaryOperationExpression	& t		6346637	1					
ANR	6346699	UnaryOperator	&		6346637	0					
ANR	6346700	Identifier	t		6346637	1					
ANR	6346701	IfStatement	if ( ! t )		6346637	7					
ANR	6346702	Condition	! t	1181:5:28584:28585	6346637	0	True				
ANR	6346703	UnaryOperationExpression	! t		6346637	0					
ANR	6346704	UnaryOperator	!		6346637	0					
ANR	6346705	Identifier	t		6346637	1					
ANR	6346706	CompoundStatement		10:9:192:192	6346637	1					
ANR	6346707	ExpressionStatement	need_to_free = 0	1182:2:28592:28608	6346637	0	True				
ANR	6346708	AssignmentExpression	need_to_free = 0		6346637	0		=			
ANR	6346709	Identifier	need_to_free		6346637	0					
ANR	6346710	PrimaryExpression	0		6346637	1					
ANR	6346711	ExpressionStatement	"print_base_type ( base_type , & tmp_name )"	1183:2:28612:28650	6346637	1	True				
ANR	6346712	CallExpression	"print_base_type ( base_type , & tmp_name )"		6346637	0					
ANR	6346713	Callee	print_base_type		6346637	0					
ANR	6346714	Identifier	print_base_type		6346637	0					
ANR	6346715	ArgumentList	base_type		6346637	1					
ANR	6346716	Argument	base_type		6346637	0					
ANR	6346717	Identifier	base_type		6346637	0					
ANR	6346718	Argument	& tmp_name		6346637	1					
ANR	6346719	UnaryOperationExpression	& tmp_name		6346637	0					
ANR	6346720	UnaryOperator	&		6346637	0					
ANR	6346721	Identifier	tmp_name		6346637	1					
ANR	6346722	ElseStatement	else		6346637	0					
ANR	6346723	CompoundStatement		13:8:264:264	6346637	0					
ANR	6346724	ExpressionStatement	ti = & t -> type_data	1185:2:28664:28682	6346637	0	True				
ANR	6346725	AssignmentExpression	ti = & t -> type_data		6346637	0		=			
ANR	6346726	Identifier	ti		6346637	0					
ANR	6346727	UnaryOperationExpression	& t -> type_data		6346637	1					
ANR	6346728	UnaryOperator	&		6346637	0					
ANR	6346729	PtrMemberAccess	t -> type_data		6346637	1					
ANR	6346730	Identifier	t		6346637	0					
ANR	6346731	Identifier	type_data		6346637	1					
ANR	6346732	ExpressionStatement	"ti -> get_print_type ( ti , & tmp_name )"	1186:2:28686:28720	6346637	1	True				
ANR	6346733	CallExpression	"ti -> get_print_type ( ti , & tmp_name )"		6346637	0					
ANR	6346734	Callee	ti -> get_print_type		6346637	0					
ANR	6346735	PtrMemberAccess	ti -> get_print_type		6346637	0					
ANR	6346736	Identifier	ti		6346637	0					
ANR	6346737	Identifier	get_print_type		6346637	1					
ANR	6346738	ArgumentList	ti		6346637	1					
ANR	6346739	Argument	ti		6346637	0					
ANR	6346740	Identifier	ti		6346637	0					
ANR	6346741	Argument	& tmp_name		6346637	1					
ANR	6346742	UnaryOperationExpression	& tmp_name		6346637	0					
ANR	6346743	UnaryOperator	&		6346637	0					
ANR	6346744	Identifier	tmp_name		6346637	1					
ANR	6346745	ExpressionStatement	"name_len = strlen ( ""enum "" )"	1189:1:28727:28754	6346637	8	True				
ANR	6346746	AssignmentExpression	"name_len = strlen ( ""enum "" )"		6346637	0		=			
ANR	6346747	Identifier	name_len		6346637	0					
ANR	6346748	CallExpression	"strlen ( ""enum "" )"		6346637	1					
ANR	6346749	Callee	strlen		6346637	0					
ANR	6346750	Identifier	strlen		6346637	0					
ANR	6346751	ArgumentList	"""enum """		6346637	1					
ANR	6346752	Argument	"""enum """		6346637	0					
ANR	6346753	PrimaryExpression	"""enum """		6346637	0					
ANR	6346754	IfStatement	if ( tmp_name )		6346637	9					
ANR	6346755	Condition	tmp_name	1190:5:28761:28768	6346637	0	True				
ANR	6346756	Identifier	tmp_name		6346637	0					
ANR	6346757	CompoundStatement		19:15:375:375	6346637	1					
ANR	6346758	ExpressionStatement	name_len += strlen ( tmp_name )	1191:2:28775:28804	6346637	0	True				
ANR	6346759	AssignmentExpression	name_len += strlen ( tmp_name )		6346637	0		+=			
ANR	6346760	Identifier	name_len		6346637	0					
ANR	6346761	CallExpression	strlen ( tmp_name )		6346637	1					
ANR	6346762	Callee	strlen		6346637	0					
ANR	6346763	Identifier	strlen		6346637	0					
ANR	6346764	ArgumentList	tmp_name		6346637	1					
ANR	6346765	Argument	tmp_name		6346637	0					
ANR	6346766	Identifier	tmp_name		6346637	0					
ANR	6346767	ExpressionStatement	* name = ( char * ) malloc ( name_len + 1 )	1193:1:28810:28848	6346637	10	True				
ANR	6346768	AssignmentExpression	* name = ( char * ) malloc ( name_len + 1 )		6346637	0		=			
ANR	6346769	UnaryOperationExpression	* name		6346637	0					
ANR	6346770	UnaryOperator	*		6346637	0					
ANR	6346771	Identifier	name		6346637	1					
ANR	6346772	CastExpression	( char * ) malloc ( name_len + 1 )		6346637	1					
ANR	6346773	CastTarget	char *		6346637	0					
ANR	6346774	CallExpression	malloc ( name_len + 1 )		6346637	1					
ANR	6346775	Callee	malloc		6346637	0					
ANR	6346776	Identifier	malloc		6346637	0					
ANR	6346777	ArgumentList	name_len + 1		6346637	1					
ANR	6346778	Argument	name_len + 1		6346637	0					
ANR	6346779	AdditiveExpression	name_len + 1		6346637	0		+			
ANR	6346780	Identifier	name_len		6346637	0					
ANR	6346781	PrimaryExpression	1		6346637	1					
ANR	6346782	IfStatement	if ( ! ( * name ) )		6346637	11					
ANR	6346783	Condition	! ( * name )	1194:5:28855:28862	6346637	0	True				
ANR	6346784	UnaryOperationExpression	! ( * name )		6346637	0					
ANR	6346785	UnaryOperator	!		6346637	0					
ANR	6346786	UnaryOperationExpression	* name		6346637	1					
ANR	6346787	UnaryOperator	*		6346637	0					
ANR	6346788	Identifier	name		6346637	1					
ANR	6346789	CompoundStatement		23:15:469:469	6346637	1					
ANR	6346790	IfStatement	if ( need_to_free )		6346637	0					
ANR	6346791	Condition	need_to_free	1195:6:28873:28884	6346637	0	True				
ANR	6346792	Identifier	need_to_free		6346637	0					
ANR	6346793	CompoundStatement		24:20:491:491	6346637	1					
ANR	6346794	ExpressionStatement	free ( tmp_name )	1196:3:28892:28907	6346637	0	True				
ANR	6346795	CallExpression	free ( tmp_name )		6346637	0					
ANR	6346796	Callee	free		6346637	0					
ANR	6346797	Identifier	free		6346637	0					
ANR	6346798	ArgumentList	tmp_name		6346637	1					
ANR	6346799	Argument	tmp_name		6346637	0					
ANR	6346800	Identifier	tmp_name		6346637	0					
ANR	6346801	ReturnStatement	return ;	1198:2:28915:28921	6346637	1	True				
ANR	6346802	ExpressionStatement	"strcpy ( * name , ""enum "" )"	1201:1:28954:28977	6346637	12	True				
ANR	6346803	CallExpression	"strcpy ( * name , ""enum "" )"		6346637	0					
ANR	6346804	Callee	strcpy		6346637	0					
ANR	6346805	Identifier	strcpy		6346637	0					
ANR	6346806	ArgumentList	* name		6346637	1					
ANR	6346807	Argument	* name		6346637	0					
ANR	6346808	UnaryOperationExpression	* name		6346637	0					
ANR	6346809	UnaryOperator	*		6346637	0					
ANR	6346810	Identifier	name		6346637	1					
ANR	6346811	Argument	"""enum """		6346637	1					
ANR	6346812	PrimaryExpression	"""enum """		6346637	0					
ANR	6346813	IfStatement	if ( tmp_name )		6346637	13					
ANR	6346814	Condition	tmp_name	1202:5:28984:28991	6346637	0	True				
ANR	6346815	Identifier	tmp_name		6346637	0					
ANR	6346816	CompoundStatement		31:15:598:598	6346637	1					
ANR	6346817	ExpressionStatement	"strcat ( * name , tmp_name )"	1203:2:28998:29022	6346637	0	True				
ANR	6346818	CallExpression	"strcat ( * name , tmp_name )"		6346637	0					
ANR	6346819	Callee	strcat		6346637	0					
ANR	6346820	Identifier	strcat		6346637	0					
ANR	6346821	ArgumentList	* name		6346637	1					
ANR	6346822	Argument	* name		6346637	0					
ANR	6346823	UnaryOperationExpression	* name		6346637	0					
ANR	6346824	UnaryOperator	*		6346637	0					
ANR	6346825	Identifier	name		6346637	1					
ANR	6346826	Argument	tmp_name		6346637	1					
ANR	6346827	Identifier	tmp_name		6346637	0					
ANR	6346828	IfStatement	if ( need_to_free )		6346637	14					
ANR	6346829	Condition	need_to_free	1206:5:29033:29044	6346637	0	True				
ANR	6346830	Identifier	need_to_free		6346637	0					
ANR	6346831	CompoundStatement		35:19:651:651	6346637	1					
ANR	6346832	ExpressionStatement	free ( tmp_name )	1207:2:29051:29066	6346637	0	True				
ANR	6346833	CallExpression	free ( tmp_name )		6346637	0					
ANR	6346834	Callee	free		6346637	0					
ANR	6346835	Identifier	free		6346637	0					
ANR	6346836	ArgumentList	tmp_name		6346637	1					
ANR	6346837	Argument	tmp_name		6346637	0					
ANR	6346838	Identifier	tmp_name		6346637	0					
ANR	6346839	ReturnType	static void		6346637	1					
ANR	6346840	Identifier	get_enum_print_type		6346637	2					
ANR	6346841	ParameterList	"void * type , char * * name"		6346637	3					
ANR	6346842	Parameter	void * type	1172:32:28370:28379	6346637	0	True				
ANR	6346843	ParameterType	void *		6346637	0					
ANR	6346844	Identifier	type		6346637	1					
ANR	6346845	Parameter	char * * name	1172:44:28382:28392	6346637	1	True				
ANR	6346846	ParameterType	char * *		6346637	0					
ANR	6346847	Identifier	name		6346637	1					
ANR	6346848	CFGEntryNode	ENTRY		6346637		True				
ANR	6346849	CFGExitNode	EXIT		6346637		True				
ANR	6346850	Symbol	* name		6346637						
ANR	6346851	Symbol	malloc		6346637						
ANR	6346852	Symbol	ti -> get_utype		6346637						
ANR	6346853	Symbol	& t -> type_data		6346637						
ANR	6346854	Symbol	type		6346637						
ANR	6346855	Symbol	tmp_name		6346637						
ANR	6346856	Symbol	strlen		6346637						
ANR	6346857	Symbol	base_type		6346637						
ANR	6346858	Symbol	t		6346637						
ANR	6346859	Symbol	ti		6346637						
ANR	6346860	Symbol	name		6346637						
ANR	6346861	Symbol	* ti		6346637						
ANR	6346862	Symbol	& t		6346637						
ANR	6346863	Symbol	name_len		6346637						
ANR	6346864	Symbol	need_to_free		6346637						
ANR	6346865	Symbol	& tmp_name		6346637						
ANR	6346866	Function	get_class_struct_print_type	1211:0:29074:29690							
ANR	6346867	FunctionDef	"get_class_struct_print_type (void * type , char * * name)"		6346866	0					
ANR	6346868	CompoundStatement		1211:65:29139:29690	6346866	0					
ANR	6346869	IdentifierDeclStatement	STypeInfo * ti = ( STypeInfo * ) type ;	1212:1:29142:29176	6346866	0	True				
ANR	6346870	IdentifierDecl	* ti = ( STypeInfo * ) type		6346866	0					
ANR	6346871	IdentifierDeclType	STypeInfo *		6346866	0					
ANR	6346872	Identifier	ti		6346866	1					
ANR	6346873	AssignmentExpression	* ti = ( STypeInfo * ) type		6346866	2		=			
ANR	6346874	Identifier	ti		6346866	0					
ANR	6346875	CastExpression	( STypeInfo * ) type		6346866	1					
ANR	6346876	CastTarget	STypeInfo *		6346866	0					
ANR	6346877	Identifier	type		6346866	1					
ANR	6346878	IdentifierDeclStatement	ELeafType lt ;	1213:1:29179:29191	6346866	1	True				
ANR	6346879	IdentifierDecl	lt		6346866	0					
ANR	6346880	IdentifierDeclType	ELeafType		6346866	0					
ANR	6346881	Identifier	lt		6346866	1					
ANR	6346882	IdentifierDeclStatement	"char * tmp_name = 0 , * tmp1 = 0 ;"	1214:1:29194:29223	6346866	2	True				
ANR	6346883	IdentifierDecl	* tmp_name = 0		6346866	0					
ANR	6346884	IdentifierDeclType	char *		6346866	0					
ANR	6346885	Identifier	tmp_name		6346866	1					
ANR	6346886	AssignmentExpression	* tmp_name = 0		6346866	2		=			
ANR	6346887	Identifier	tmp_name		6346866	0					
ANR	6346888	PrimaryExpression	0		6346866	1					
ANR	6346889	IdentifierDecl	* tmp1 = 0		6346866	1					
ANR	6346890	IdentifierDeclType	char *		6346866	0					
ANR	6346891	Identifier	tmp1		6346866	1					
ANR	6346892	AssignmentExpression	* tmp1 = 0		6346866	2		=			
ANR	6346893	Identifier	tmp1		6346866	0					
ANR	6346894	PrimaryExpression	0		6346866	1					
ANR	6346895	IdentifierDeclStatement	int name_len = 0 ;	1215:1:29226:29242	6346866	3	True				
ANR	6346896	IdentifierDecl	name_len = 0		6346866	0					
ANR	6346897	IdentifierDeclType	int		6346866	0					
ANR	6346898	Identifier	name_len		6346866	1					
ANR	6346899	AssignmentExpression	name_len = 0		6346866	2		=			
ANR	6346900	Identifier	name_len		6346866	0					
ANR	6346901	PrimaryExpression	0		6346866	1					
ANR	6346902	ExpressionStatement	lt = ti -> leaf_type	1217:1:29246:29264	6346866	4	True				
ANR	6346903	AssignmentExpression	lt = ti -> leaf_type		6346866	0		=			
ANR	6346904	Identifier	lt		6346866	0					
ANR	6346905	PtrMemberAccess	ti -> leaf_type		6346866	1					
ANR	6346906	Identifier	ti		6346866	0					
ANR	6346907	Identifier	leaf_type		6346866	1					
ANR	6346908	ExpressionStatement	"ti -> get_name ( ti , & tmp_name )"	1218:1:29267:29294	6346866	5	True				
ANR	6346909	CallExpression	"ti -> get_name ( ti , & tmp_name )"		6346866	0					
ANR	6346910	Callee	ti -> get_name		6346866	0					
ANR	6346911	PtrMemberAccess	ti -> get_name		6346866	0					
ANR	6346912	Identifier	ti		6346866	0					
ANR	6346913	Identifier	get_name		6346866	1					
ANR	6346914	ArgumentList	ti		6346866	1					
ANR	6346915	Argument	ti		6346866	0					
ANR	6346916	Identifier	ti		6346866	0					
ANR	6346917	Argument	& tmp_name		6346866	1					
ANR	6346918	UnaryOperationExpression	& tmp_name		6346866	0					
ANR	6346919	UnaryOperator	&		6346866	0					
ANR	6346920	Identifier	tmp_name		6346866	1					
ANR	6346921	IfStatement	if ( lt == eLF_CLASS )		6346866	6					
ANR	6346922	Condition	lt == eLF_CLASS	1220:5:29302:29316	6346866	0	True				
ANR	6346923	EqualityExpression	lt == eLF_CLASS		6346866	0		==			
ANR	6346924	Identifier	lt		6346866	0					
ANR	6346925	Identifier	eLF_CLASS		6346866	1					
ANR	6346926	CompoundStatement		10:22:179:179	6346866	1					
ANR	6346927	ExpressionStatement	"tmp1 = ""class """	1221:2:29323:29338	6346866	0	True				
ANR	6346928	AssignmentExpression	"tmp1 = ""class """		6346866	0		=			
ANR	6346929	Identifier	tmp1		6346866	0					
ANR	6346930	PrimaryExpression	"""class """		6346866	1					
ANR	6346931	ElseStatement	else		6346866	0					
ANR	6346932	CompoundStatement		12:8:208:208	6346866	0					
ANR	6346933	ExpressionStatement	"tmp1 = ""struct """	1223:2:29352:29368	6346866	0	True				
ANR	6346934	AssignmentExpression	"tmp1 = ""struct """		6346866	0		=			
ANR	6346935	Identifier	tmp1		6346866	0					
ANR	6346936	PrimaryExpression	"""struct """		6346866	1					
ANR	6346937	ExpressionStatement	name_len = strlen ( tmp1 )	1225:1:29374:29397	6346866	7	True				
ANR	6346938	AssignmentExpression	name_len = strlen ( tmp1 )		6346866	0		=			
ANR	6346939	Identifier	name_len		6346866	0					
ANR	6346940	CallExpression	strlen ( tmp1 )		6346866	1					
ANR	6346941	Callee	strlen		6346866	0					
ANR	6346942	Identifier	strlen		6346866	0					
ANR	6346943	ArgumentList	tmp1		6346866	1					
ANR	6346944	Argument	tmp1		6346866	0					
ANR	6346945	Identifier	tmp1		6346866	0					
ANR	6346946	IfStatement	if ( tmp_name )		6346866	8					
ANR	6346947	Condition	tmp_name	1226:5:29404:29411	6346866	0	True				
ANR	6346948	Identifier	tmp_name		6346866	0					
ANR	6346949	CompoundStatement		16:15:274:274	6346866	1					
ANR	6346950	ExpressionStatement	name_len += strlen ( tmp_name )	1227:2:29418:29447	6346866	0	True				
ANR	6346951	AssignmentExpression	name_len += strlen ( tmp_name )		6346866	0		+=			
ANR	6346952	Identifier	name_len		6346866	0					
ANR	6346953	CallExpression	strlen ( tmp_name )		6346866	1					
ANR	6346954	Callee	strlen		6346866	0					
ANR	6346955	Identifier	strlen		6346866	0					
ANR	6346956	ArgumentList	tmp_name		6346866	1					
ANR	6346957	Argument	tmp_name		6346866	0					
ANR	6346958	Identifier	tmp_name		6346866	0					
ANR	6346959	ExpressionStatement	* name = ( char * ) malloc ( name_len + 1 )	1229:1:29453:29490	6346866	9	True				
ANR	6346960	AssignmentExpression	* name = ( char * ) malloc ( name_len + 1 )		6346866	0		=			
ANR	6346961	UnaryOperationExpression	* name		6346866	0					
ANR	6346962	UnaryOperator	*		6346866	0					
ANR	6346963	Identifier	name		6346866	1					
ANR	6346964	CastExpression	( char * ) malloc ( name_len + 1 )		6346866	1					
ANR	6346965	CastTarget	char *		6346866	0					
ANR	6346966	CallExpression	malloc ( name_len + 1 )		6346866	1					
ANR	6346967	Callee	malloc		6346866	0					
ANR	6346968	Identifier	malloc		6346866	0					
ANR	6346969	ArgumentList	name_len + 1		6346866	1					
ANR	6346970	Argument	name_len + 1		6346866	0					
ANR	6346971	AdditiveExpression	name_len + 1		6346866	0		+			
ANR	6346972	Identifier	name_len		6346866	0					
ANR	6346973	PrimaryExpression	1		6346866	1					
ANR	6346974	IfStatement	if ( ! ( * name ) )		6346866	10					
ANR	6346975	Condition	! ( * name )	1230:5:29497:29504	6346866	0	True				
ANR	6346976	UnaryOperationExpression	! ( * name )		6346866	0					
ANR	6346977	UnaryOperator	!		6346866	0					
ANR	6346978	UnaryOperationExpression	* name		6346866	1					
ANR	6346979	UnaryOperator	*		6346866	0					
ANR	6346980	Identifier	name		6346866	1					
ANR	6346981	CompoundStatement		20:15:367:367	6346866	1					
ANR	6346982	ReturnStatement	return ;	1231:2:29511:29517	6346866	0	True				
ANR	6346983	ExpressionStatement	"strcpy ( * name , tmp1 )"	1234:1:29550:29569	6346866	11	True				
ANR	6346984	CallExpression	"strcpy ( * name , tmp1 )"		6346866	0					
ANR	6346985	Callee	strcpy		6346866	0					
ANR	6346986	Identifier	strcpy		6346866	0					
ANR	6346987	ArgumentList	* name		6346866	1					
ANR	6346988	Argument	* name		6346866	0					
ANR	6346989	UnaryOperationExpression	* name		6346866	0					
ANR	6346990	UnaryOperator	*		6346866	0					
ANR	6346991	Identifier	name		6346866	1					
ANR	6346992	Argument	tmp1		6346866	1					
ANR	6346993	Identifier	tmp1		6346866	0					
ANR	6346994	IfStatement	if ( tmp_name )		6346866	12					
ANR	6346995	Condition	tmp_name	1235:5:29576:29583	6346866	0	True				
ANR	6346996	Identifier	tmp_name		6346866	0					
ANR	6346997	CompoundStatement		25:15:446:446	6346866	1					
ANR	6346998	ExpressionStatement	"strcat ( * name , tmp_name )"	1236:2:29590:29614	6346866	0	True				
ANR	6346999	CallExpression	"strcat ( * name , tmp_name )"		6346866	0					
ANR	6347000	Callee	strcat		6346866	0					
ANR	6347001	Identifier	strcat		6346866	0					
ANR	6347002	ArgumentList	* name		6346866	1					
ANR	6347003	Argument	* name		6346866	0					
ANR	6347004	UnaryOperationExpression	* name		6346866	0					
ANR	6347005	UnaryOperator	*		6346866	0					
ANR	6347006	Identifier	name		6346866	1					
ANR	6347007	Argument	tmp_name		6346866	1					
ANR	6347008	Identifier	tmp_name		6346866	0					
ANR	6347009	ReturnType	static void		6346866	1					
ANR	6347010	Identifier	get_class_struct_print_type		6346866	2					
ANR	6347011	ParameterList	"void * type , char * * name"		6346866	3					
ANR	6347012	Parameter	void * type	1211:40:29114:29123	6346866	0	True				
ANR	6347013	ParameterType	void *		6346866	0					
ANR	6347014	Identifier	type		6346866	1					
ANR	6347015	Parameter	char * * name	1211:52:29126:29136	6346866	1	True				
ANR	6347016	ParameterType	char * *		6346866	0					
ANR	6347017	Identifier	name		6346866	1					
ANR	6347018	CFGEntryNode	ENTRY		6346866		True				
ANR	6347019	CFGExitNode	EXIT		6346866		True				
ANR	6347020	Symbol	* name		6346866						
ANR	6347021	Symbol	malloc		6346866						
ANR	6347022	Symbol	eLF_CLASS		6346866						
ANR	6347023	Symbol	lt		6346866						
ANR	6347024	Symbol	type		6346866						
ANR	6347025	Symbol	tmp1		6346866						
ANR	6347026	Symbol	tmp_name		6346866						
ANR	6347027	Symbol	strlen		6346866						
ANR	6347028	Symbol	ti		6346866						
ANR	6347029	Symbol	ti -> leaf_type		6346866						
ANR	6347030	Symbol	name		6346866						
ANR	6347031	Symbol	* ti		6346866						
ANR	6347032	Symbol	name_len		6346866						
ANR	6347033	Symbol	& tmp_name		6346866						
ANR	6347034	Function	get_arglist_print_type	1245:0:29693:30544							
ANR	6347035	FunctionDef	"get_arglist_print_type (void * type , char * * name)"		6347034	0					
ANR	6347036	CompoundStatement		1245:60:29753:30544	6347034	0					
ANR	6347037	ExpressionStatement	( void ) type	1246:1:29756:29767	6347034	0	True				
ANR	6347038	CastExpression	( void ) type		6347034	0					
ANR	6347039	CastTarget	void		6347034	0					
ANR	6347040	Identifier	type		6347034	1					
ANR	6347041	IdentifierDeclStatement	int name_len = 0 ;	1247:1:29770:29786	6347034	1	True				
ANR	6347042	IdentifierDecl	name_len = 0		6347034	0					
ANR	6347043	IdentifierDeclType	int		6347034	0					
ANR	6347044	Identifier	name_len		6347034	1					
ANR	6347045	AssignmentExpression	name_len = 0		6347034	2		=			
ANR	6347046	Identifier	name_len		6347034	0					
ANR	6347047	PrimaryExpression	0		6347034	1					
ANR	6347048	ExpressionStatement	"name_len = strlen ( ""arg_list"" )"	1249:1:29790:29820	6347034	2	True				
ANR	6347049	AssignmentExpression	"name_len = strlen ( ""arg_list"" )"		6347034	0		=			
ANR	6347050	Identifier	name_len		6347034	0					
ANR	6347051	CallExpression	"strlen ( ""arg_list"" )"		6347034	1					
ANR	6347052	Callee	strlen		6347034	0					
ANR	6347053	Identifier	strlen		6347034	0					
ANR	6347054	ArgumentList	"""arg_list"""		6347034	1					
ANR	6347055	Argument	"""arg_list"""		6347034	0					
ANR	6347056	PrimaryExpression	"""arg_list"""		6347034	0					
ANR	6347057	ExpressionStatement	* name = ( char * ) malloc ( name_len + 1 )	1250:1:29823:29861	6347034	3	True				
ANR	6347058	AssignmentExpression	* name = ( char * ) malloc ( name_len + 1 )		6347034	0		=			
ANR	6347059	UnaryOperationExpression	* name		6347034	0					
ANR	6347060	UnaryOperator	*		6347034	0					
ANR	6347061	Identifier	name		6347034	1					
ANR	6347062	CastExpression	( char * ) malloc ( name_len + 1 )		6347034	1					
ANR	6347063	CastTarget	char *		6347034	0					
ANR	6347064	CallExpression	malloc ( name_len + 1 )		6347034	1					
ANR	6347065	Callee	malloc		6347034	0					
ANR	6347066	Identifier	malloc		6347034	0					
ANR	6347067	ArgumentList	name_len + 1		6347034	1					
ANR	6347068	Argument	name_len + 1		6347034	0					
ANR	6347069	AdditiveExpression	name_len + 1		6347034	0		+			
ANR	6347070	Identifier	name_len		6347034	0					
ANR	6347071	PrimaryExpression	1		6347034	1					
ANR	6347072	IfStatement	if ( ! ( * name ) )		6347034	4					
ANR	6347073	Condition	! ( * name )	1251:5:29868:29875	6347034	0	True				
ANR	6347074	UnaryOperationExpression	! ( * name )		6347034	0					
ANR	6347075	UnaryOperator	!		6347034	0					
ANR	6347076	UnaryOperationExpression	* name		6347034	1					
ANR	6347077	UnaryOperator	*		6347034	0					
ANR	6347078	Identifier	name		6347034	1					
ANR	6347079	CompoundStatement		7:15:124:124	6347034	1					
ANR	6347080	ReturnStatement	return ;	1252:2:29882:29888	6347034	0	True				
ANR	6347081	ExpressionStatement	"strcpy ( * name , ""arg_list"" )"	1255:1:29921:29947	6347034	5	True				
ANR	6347082	CallExpression	"strcpy ( * name , ""arg_list"" )"		6347034	0					
ANR	6347083	Callee	strcpy		6347034	0					
ANR	6347084	Identifier	strcpy		6347034	0					
ANR	6347085	ArgumentList	* name		6347034	1					
ANR	6347086	Argument	* name		6347034	0					
ANR	6347087	UnaryOperationExpression	* name		6347034	0					
ANR	6347088	UnaryOperator	*		6347034	0					
ANR	6347089	Identifier	name		6347034	1					
ANR	6347090	Argument	"""arg_list"""		6347034	1					
ANR	6347091	PrimaryExpression	"""arg_list"""		6347034	0					
ANR	6347092	ReturnType	static void		6347034	1					
ANR	6347093	Identifier	get_arglist_print_type		6347034	2					
ANR	6347094	ParameterList	"void * type , char * * name"		6347034	3					
ANR	6347095	Parameter	void * type	1245:35:29728:29737	6347034	0	True				
ANR	6347096	ParameterType	void *		6347034	0					
ANR	6347097	Identifier	type		6347034	1					
ANR	6347098	Parameter	char * * name	1245:47:29740:29750	6347034	1	True				
ANR	6347099	ParameterType	char * *		6347034	0					
ANR	6347100	Identifier	name		6347034	1					
ANR	6347101	CFGEntryNode	ENTRY		6347034		True				
ANR	6347102	CFGExitNode	EXIT		6347034		True				
ANR	6347103	Symbol	* name		6347034						
ANR	6347104	Symbol	strlen		6347034						
ANR	6347105	Symbol	malloc		6347034						
ANR	6347106	Symbol	name		6347034						
ANR	6347107	Symbol	name_len		6347034						
ANR	6347108	Symbol	type		6347034						
ANR	6347109	Function	get_mfunction_print_type	1283:0:30547:30794							
ANR	6347110	FunctionDef	"get_mfunction_print_type (void * type , char * * name)"		6347109	0					
ANR	6347111	CompoundStatement		1283:62:30609:30794	6347109	0					
ANR	6347112	IdentifierDeclStatement	int name_len = 0 ;	1284:1:30612:30628	6347109	0	True				
ANR	6347113	IdentifierDecl	name_len = 0		6347109	0					
ANR	6347114	IdentifierDeclType	int		6347109	0					
ANR	6347115	Identifier	name_len		6347109	1					
ANR	6347116	AssignmentExpression	name_len = 0		6347109	2		=			
ANR	6347117	Identifier	name_len		6347109	0					
ANR	6347118	PrimaryExpression	0		6347109	1					
ANR	6347119	ExpressionStatement	"name_len = strlen ( ""mfunction "" )"	1286:1:30632:30663	6347109	1	True				
ANR	6347120	AssignmentExpression	"name_len = strlen ( ""mfunction "" )"		6347109	0		=			
ANR	6347121	Identifier	name_len		6347109	0					
ANR	6347122	CallExpression	"strlen ( ""mfunction "" )"		6347109	1					
ANR	6347123	Callee	strlen		6347109	0					
ANR	6347124	Identifier	strlen		6347109	0					
ANR	6347125	ArgumentList	"""mfunction """		6347109	1					
ANR	6347126	Argument	"""mfunction """		6347109	0					
ANR	6347127	PrimaryExpression	"""mfunction """		6347109	0					
ANR	6347128	ExpressionStatement	* name = ( char * ) malloc ( name_len + 1 )	1287:1:30666:30704	6347109	2	True				
ANR	6347129	AssignmentExpression	* name = ( char * ) malloc ( name_len + 1 )		6347109	0		=			
ANR	6347130	UnaryOperationExpression	* name		6347109	0					
ANR	6347131	UnaryOperator	*		6347109	0					
ANR	6347132	Identifier	name		6347109	1					
ANR	6347133	CastExpression	( char * ) malloc ( name_len + 1 )		6347109	1					
ANR	6347134	CastTarget	char *		6347109	0					
ANR	6347135	CallExpression	malloc ( name_len + 1 )		6347109	1					
ANR	6347136	Callee	malloc		6347109	0					
ANR	6347137	Identifier	malloc		6347109	0					
ANR	6347138	ArgumentList	name_len + 1		6347109	1					
ANR	6347139	Argument	name_len + 1		6347109	0					
ANR	6347140	AdditiveExpression	name_len + 1		6347109	0		+			
ANR	6347141	Identifier	name_len		6347109	0					
ANR	6347142	PrimaryExpression	1		6347109	1					
ANR	6347143	IfStatement	if ( ! ( * name ) )		6347109	3					
ANR	6347144	Condition	! ( * name )	1288:5:30711:30718	6347109	0	True				
ANR	6347145	UnaryOperationExpression	! ( * name )		6347109	0					
ANR	6347146	UnaryOperator	!		6347109	0					
ANR	6347147	UnaryOperationExpression	* name		6347109	1					
ANR	6347148	UnaryOperator	*		6347109	0					
ANR	6347149	Identifier	name		6347109	1					
ANR	6347150	CompoundStatement		6:15:111:111	6347109	1					
ANR	6347151	ReturnStatement	return ;	1289:2:30725:30731	6347109	0	True				
ANR	6347152	ExpressionStatement	"strcpy ( * name , ""mfunction "" )"	1292:1:30764:30792	6347109	4	True				
ANR	6347153	CallExpression	"strcpy ( * name , ""mfunction "" )"		6347109	0					
ANR	6347154	Callee	strcpy		6347109	0					
ANR	6347155	Identifier	strcpy		6347109	0					
ANR	6347156	ArgumentList	* name		6347109	1					
ANR	6347157	Argument	* name		6347109	0					
ANR	6347158	UnaryOperationExpression	* name		6347109	0					
ANR	6347159	UnaryOperator	*		6347109	0					
ANR	6347160	Identifier	name		6347109	1					
ANR	6347161	Argument	"""mfunction """		6347109	1					
ANR	6347162	PrimaryExpression	"""mfunction """		6347109	0					
ANR	6347163	ReturnType	static void		6347109	1					
ANR	6347164	Identifier	get_mfunction_print_type		6347109	2					
ANR	6347165	ParameterList	"void * type , char * * name"		6347109	3					
ANR	6347166	Parameter	void * type	1283:37:30584:30593	6347109	0	True				
ANR	6347167	ParameterType	void *		6347109	0					
ANR	6347168	Identifier	type		6347109	1					
ANR	6347169	Parameter	char * * name	1283:49:30596:30606	6347109	1	True				
ANR	6347170	ParameterType	char * *		6347109	0					
ANR	6347171	Identifier	name		6347109	1					
ANR	6347172	CFGEntryNode	ENTRY		6347109		True				
ANR	6347173	CFGExitNode	EXIT		6347109		True				
ANR	6347174	Symbol	* name		6347109						
ANR	6347175	Symbol	strlen		6347109						
ANR	6347176	Symbol	malloc		6347109						
ANR	6347177	Symbol	name		6347109						
ANR	6347178	Symbol	name_len		6347109						
ANR	6347179	Symbol	type		6347109						
ANR	6347180	Function	get_union_print_type	1296:0:30877:31436							
ANR	6347181	FunctionDef	"get_union_print_type (void * type , char * * name)"		6347180	0					
ANR	6347182	CompoundStatement		1296:58:30935:31436	6347180	0					
ANR	6347183	IdentifierDeclStatement	STypeInfo * ti = ( STypeInfo * ) type ;	1297:1:30938:30972	6347180	0	True				
ANR	6347184	IdentifierDecl	* ti = ( STypeInfo * ) type		6347180	0					
ANR	6347185	IdentifierDeclType	STypeInfo *		6347180	0					
ANR	6347186	Identifier	ti		6347180	1					
ANR	6347187	AssignmentExpression	* ti = ( STypeInfo * ) type		6347180	2		=			
ANR	6347188	Identifier	ti		6347180	0					
ANR	6347189	CastExpression	( STypeInfo * ) type		6347180	1					
ANR	6347190	CastTarget	STypeInfo *		6347180	0					
ANR	6347191	Identifier	type		6347180	1					
ANR	6347192	IdentifierDeclStatement	"char * tmp_name = 0 , * tmp1 = 0 ;"	1299:1:30992:31021	6347180	1	True				
ANR	6347193	IdentifierDecl	* tmp_name = 0		6347180	0					
ANR	6347194	IdentifierDeclType	char *		6347180	0					
ANR	6347195	Identifier	tmp_name		6347180	1					
ANR	6347196	AssignmentExpression	* tmp_name = 0		6347180	2		=			
ANR	6347197	Identifier	tmp_name		6347180	0					
ANR	6347198	PrimaryExpression	0		6347180	1					
ANR	6347199	IdentifierDecl	* tmp1 = 0		6347180	1					
ANR	6347200	IdentifierDeclType	char *		6347180	0					
ANR	6347201	Identifier	tmp1		6347180	1					
ANR	6347202	AssignmentExpression	* tmp1 = 0		6347180	2		=			
ANR	6347203	Identifier	tmp1		6347180	0					
ANR	6347204	PrimaryExpression	0		6347180	1					
ANR	6347205	IdentifierDeclStatement	int name_len = 0 ;	1300:1:31024:31040	6347180	2	True				
ANR	6347206	IdentifierDecl	name_len = 0		6347180	0					
ANR	6347207	IdentifierDeclType	int		6347180	0					
ANR	6347208	Identifier	name_len		6347180	1					
ANR	6347209	AssignmentExpression	name_len = 0		6347180	2		=			
ANR	6347210	Identifier	name_len		6347180	0					
ANR	6347211	PrimaryExpression	0		6347180	1					
ANR	6347212	ExpressionStatement	"ti -> get_name ( ti , & tmp_name )"	1303:1:31067:31095	6347180	3	True				
ANR	6347213	CallExpression	"ti -> get_name ( ti , & tmp_name )"		6347180	0					
ANR	6347214	Callee	ti -> get_name		6347180	0					
ANR	6347215	PtrMemberAccess	ti -> get_name		6347180	0					
ANR	6347216	Identifier	ti		6347180	0					
ANR	6347217	Identifier	get_name		6347180	1					
ANR	6347218	ArgumentList	ti		6347180	1					
ANR	6347219	Argument	ti		6347180	0					
ANR	6347220	Identifier	ti		6347180	0					
ANR	6347221	Argument	& tmp_name		6347180	1					
ANR	6347222	UnaryOperationExpression	& tmp_name		6347180	0					
ANR	6347223	UnaryOperator	&		6347180	0					
ANR	6347224	Identifier	tmp_name		6347180	1					
ANR	6347225	ExpressionStatement	"tmp1 = ""union """	1305:1:31099:31114	6347180	4	True				
ANR	6347226	AssignmentExpression	"tmp1 = ""union """		6347180	0		=			
ANR	6347227	Identifier	tmp1		6347180	0					
ANR	6347228	PrimaryExpression	"""union """		6347180	1					
ANR	6347229	ExpressionStatement	name_len = strlen ( tmp1 )	1306:1:31117:31141	6347180	5	True				
ANR	6347230	AssignmentExpression	name_len = strlen ( tmp1 )		6347180	0		=			
ANR	6347231	Identifier	name_len		6347180	0					
ANR	6347232	CallExpression	strlen ( tmp1 )		6347180	1					
ANR	6347233	Callee	strlen		6347180	0					
ANR	6347234	Identifier	strlen		6347180	0					
ANR	6347235	ArgumentList	tmp1		6347180	1					
ANR	6347236	Argument	tmp1		6347180	0					
ANR	6347237	Identifier	tmp1		6347180	0					
ANR	6347238	IfStatement	if ( tmp_name )		6347180	6					
ANR	6347239	Condition	tmp_name	1307:5:31148:31155	6347180	0	True				
ANR	6347240	Identifier	tmp_name		6347180	0					
ANR	6347241	CompoundStatement		12:15:222:222	6347180	1					
ANR	6347242	ExpressionStatement	name_len += strlen ( tmp_name )	1308:2:31162:31191	6347180	0	True				
ANR	6347243	AssignmentExpression	name_len += strlen ( tmp_name )		6347180	0		+=			
ANR	6347244	Identifier	name_len		6347180	0					
ANR	6347245	CallExpression	strlen ( tmp_name )		6347180	1					
ANR	6347246	Callee	strlen		6347180	0					
ANR	6347247	Identifier	strlen		6347180	0					
ANR	6347248	ArgumentList	tmp_name		6347180	1					
ANR	6347249	Argument	tmp_name		6347180	0					
ANR	6347250	Identifier	tmp_name		6347180	0					
ANR	6347251	ExpressionStatement	* name = ( char * ) malloc ( name_len + 1 )	1310:1:31197:31235	6347180	7	True				
ANR	6347252	AssignmentExpression	* name = ( char * ) malloc ( name_len + 1 )		6347180	0		=			
ANR	6347253	UnaryOperationExpression	* name		6347180	0					
ANR	6347254	UnaryOperator	*		6347180	0					
ANR	6347255	Identifier	name		6347180	1					
ANR	6347256	CastExpression	( char * ) malloc ( name_len + 1 )		6347180	1					
ANR	6347257	CastTarget	char *		6347180	0					
ANR	6347258	CallExpression	malloc ( name_len + 1 )		6347180	1					
ANR	6347259	Callee	malloc		6347180	0					
ANR	6347260	Identifier	malloc		6347180	0					
ANR	6347261	ArgumentList	name_len + 1		6347180	1					
ANR	6347262	Argument	name_len + 1		6347180	0					
ANR	6347263	AdditiveExpression	name_len + 1		6347180	0		+			
ANR	6347264	Identifier	name_len		6347180	0					
ANR	6347265	PrimaryExpression	1		6347180	1					
ANR	6347266	IfStatement	if ( ! ( * name ) )		6347180	8					
ANR	6347267	Condition	! ( * name )	1311:5:31242:31249	6347180	0	True				
ANR	6347268	UnaryOperationExpression	! ( * name )		6347180	0					
ANR	6347269	UnaryOperator	!		6347180	0					
ANR	6347270	UnaryOperationExpression	* name		6347180	1					
ANR	6347271	UnaryOperator	*		6347180	0					
ANR	6347272	Identifier	name		6347180	1					
ANR	6347273	CompoundStatement		16:15:316:316	6347180	1					
ANR	6347274	ReturnStatement	return ;	1312:2:31256:31262	6347180	0	True				
ANR	6347275	ExpressionStatement	"strcpy ( * name , tmp1 )"	1315:1:31295:31315	6347180	9	True				
ANR	6347276	CallExpression	"strcpy ( * name , tmp1 )"		6347180	0					
ANR	6347277	Callee	strcpy		6347180	0					
ANR	6347278	Identifier	strcpy		6347180	0					
ANR	6347279	ArgumentList	* name		6347180	1					
ANR	6347280	Argument	* name		6347180	0					
ANR	6347281	UnaryOperationExpression	* name		6347180	0					
ANR	6347282	UnaryOperator	*		6347180	0					
ANR	6347283	Identifier	name		6347180	1					
ANR	6347284	Argument	tmp1		6347180	1					
ANR	6347285	Identifier	tmp1		6347180	0					
ANR	6347286	IfStatement	if ( tmp_name )		6347180	10					
ANR	6347287	Condition	tmp_name	1316:5:31322:31329	6347180	0	True				
ANR	6347288	Identifier	tmp_name		6347180	0					
ANR	6347289	CompoundStatement		21:15:396:396	6347180	1					
ANR	6347290	ExpressionStatement	"strcat ( * name , tmp_name )"	1317:2:31336:31360	6347180	0	True				
ANR	6347291	CallExpression	"strcat ( * name , tmp_name )"		6347180	0					
ANR	6347292	Callee	strcat		6347180	0					
ANR	6347293	Identifier	strcat		6347180	0					
ANR	6347294	ArgumentList	* name		6347180	1					
ANR	6347295	Argument	* name		6347180	0					
ANR	6347296	UnaryOperationExpression	* name		6347180	0					
ANR	6347297	UnaryOperator	*		6347180	0					
ANR	6347298	Identifier	name		6347180	1					
ANR	6347299	Argument	tmp_name		6347180	1					
ANR	6347300	Identifier	tmp_name		6347180	0					
ANR	6347301	ReturnType	static void		6347180	1					
ANR	6347302	Identifier	get_union_print_type		6347180	2					
ANR	6347303	ParameterList	"void * type , char * * name"		6347180	3					
ANR	6347304	Parameter	void * type	1296:33:30910:30919	6347180	0	True				
ANR	6347305	ParameterType	void *		6347180	0					
ANR	6347306	Identifier	type		6347180	1					
ANR	6347307	Parameter	char * * name	1296:45:30922:30932	6347180	1	True				
ANR	6347308	ParameterType	char * *		6347180	0					
ANR	6347309	Identifier	name		6347180	1					
ANR	6347310	CFGEntryNode	ENTRY		6347180		True				
ANR	6347311	CFGExitNode	EXIT		6347180		True				
ANR	6347312	Symbol	* name		6347180						
ANR	6347313	Symbol	strlen		6347180						
ANR	6347314	Symbol	malloc		6347180						
ANR	6347315	Symbol	ti		6347180						
ANR	6347316	Symbol	name		6347180						
ANR	6347317	Symbol	name_len		6347180						
ANR	6347318	Symbol	type		6347180						
ANR	6347319	Symbol	tmp1		6347180						
ANR	6347320	Symbol	& tmp_name		6347180						
ANR	6347321	Symbol	tmp_name		6347180						
ANR	6347322	Function	get_vtshape_print_type	1326:0:31439:31678							
ANR	6347323	FunctionDef	"get_vtshape_print_type (void * type , char * * name)"		6347322	0					
ANR	6347324	CompoundStatement		1326:60:31499:31678	6347322	0					
ANR	6347325	IdentifierDeclStatement	int name_len = 0 ;	1327:1:31502:31518	6347322	0	True				
ANR	6347326	IdentifierDecl	name_len = 0		6347322	0					
ANR	6347327	IdentifierDeclType	int		6347322	0					
ANR	6347328	Identifier	name_len		6347322	1					
ANR	6347329	AssignmentExpression	name_len = 0		6347322	2		=			
ANR	6347330	Identifier	name_len		6347322	0					
ANR	6347331	PrimaryExpression	0		6347322	1					
ANR	6347332	ExpressionStatement	"name_len = strlen ( ""vtshape"" )"	1329:1:31522:31551	6347322	1	True				
ANR	6347333	AssignmentExpression	"name_len = strlen ( ""vtshape"" )"		6347322	0		=			
ANR	6347334	Identifier	name_len		6347322	0					
ANR	6347335	CallExpression	"strlen ( ""vtshape"" )"		6347322	1					
ANR	6347336	Callee	strlen		6347322	0					
ANR	6347337	Identifier	strlen		6347322	0					
ANR	6347338	ArgumentList	"""vtshape"""		6347322	1					
ANR	6347339	Argument	"""vtshape"""		6347322	0					
ANR	6347340	PrimaryExpression	"""vtshape"""		6347322	0					
ANR	6347341	ExpressionStatement	* name = ( char * ) malloc ( name_len + 1 )	1330:1:31554:31592	6347322	2	True				
ANR	6347342	AssignmentExpression	* name = ( char * ) malloc ( name_len + 1 )		6347322	0		=			
ANR	6347343	UnaryOperationExpression	* name		6347322	0					
ANR	6347344	UnaryOperator	*		6347322	0					
ANR	6347345	Identifier	name		6347322	1					
ANR	6347346	CastExpression	( char * ) malloc ( name_len + 1 )		6347322	1					
ANR	6347347	CastTarget	char *		6347322	0					
ANR	6347348	CallExpression	malloc ( name_len + 1 )		6347322	1					
ANR	6347349	Callee	malloc		6347322	0					
ANR	6347350	Identifier	malloc		6347322	0					
ANR	6347351	ArgumentList	name_len + 1		6347322	1					
ANR	6347352	Argument	name_len + 1		6347322	0					
ANR	6347353	AdditiveExpression	name_len + 1		6347322	0		+			
ANR	6347354	Identifier	name_len		6347322	0					
ANR	6347355	PrimaryExpression	1		6347322	1					
ANR	6347356	IfStatement	if ( ! ( * name ) )		6347322	3					
ANR	6347357	Condition	! ( * name )	1331:5:31599:31606	6347322	0	True				
ANR	6347358	UnaryOperationExpression	! ( * name )		6347322	0					
ANR	6347359	UnaryOperator	!		6347322	0					
ANR	6347360	UnaryOperationExpression	* name		6347322	1					
ANR	6347361	UnaryOperator	*		6347322	0					
ANR	6347362	Identifier	name		6347322	1					
ANR	6347363	CompoundStatement		6:15:109:109	6347322	1					
ANR	6347364	ReturnStatement	return ;	1332:2:31613:31619	6347322	0	True				
ANR	6347365	ExpressionStatement	"strcpy ( * name , ""vthape"" )"	1335:1:31652:31676	6347322	4	True				
ANR	6347366	CallExpression	"strcpy ( * name , ""vthape"" )"		6347322	0					
ANR	6347367	Callee	strcpy		6347322	0					
ANR	6347368	Identifier	strcpy		6347322	0					
ANR	6347369	ArgumentList	* name		6347322	1					
ANR	6347370	Argument	* name		6347322	0					
ANR	6347371	UnaryOperationExpression	* name		6347322	0					
ANR	6347372	UnaryOperator	*		6347322	0					
ANR	6347373	Identifier	name		6347322	1					
ANR	6347374	Argument	"""vthape"""		6347322	1					
ANR	6347375	PrimaryExpression	"""vthape"""		6347322	0					
ANR	6347376	ReturnType	static void		6347322	1					
ANR	6347377	Identifier	get_vtshape_print_type		6347322	2					
ANR	6347378	ParameterList	"void * type , char * * name"		6347322	3					
ANR	6347379	Parameter	void * type	1326:35:31474:31483	6347322	0	True				
ANR	6347380	ParameterType	void *		6347322	0					
ANR	6347381	Identifier	type		6347322	1					
ANR	6347382	Parameter	char * * name	1326:47:31486:31496	6347322	1	True				
ANR	6347383	ParameterType	char * *		6347322	0					
ANR	6347384	Identifier	name		6347322	1					
ANR	6347385	CFGEntryNode	ENTRY		6347322		True				
ANR	6347386	CFGExitNode	EXIT		6347322		True				
ANR	6347387	Symbol	* name		6347322						
ANR	6347388	Symbol	strlen		6347322						
ANR	6347389	Symbol	malloc		6347322						
ANR	6347390	Symbol	name		6347322						
ANR	6347391	Symbol	name_len		6347322						
ANR	6347392	Symbol	type		6347322						
ANR	6347393	Function	get_enumerate_print_type	1338:0:31681:32181							
ANR	6347394	FunctionDef	"get_enumerate_print_type (void * type , char * * name)"		6347393	0					
ANR	6347395	CompoundStatement		1338:62:31743:32181	6347393	0					
ANR	6347396	IdentifierDeclStatement	STypeInfo * ti = ( STypeInfo * ) type ;	1339:1:31746:31780	6347393	0	True				
ANR	6347397	IdentifierDecl	* ti = ( STypeInfo * ) type		6347393	0					
ANR	6347398	IdentifierDeclType	STypeInfo *		6347393	0					
ANR	6347399	Identifier	ti		6347393	1					
ANR	6347400	AssignmentExpression	* ti = ( STypeInfo * ) type		6347393	2		=			
ANR	6347401	Identifier	ti		6347393	0					
ANR	6347402	CastExpression	( STypeInfo * ) type		6347393	1					
ANR	6347403	CastTarget	STypeInfo *		6347393	0					
ANR	6347404	Identifier	type		6347393	1					
ANR	6347405	IdentifierDeclStatement	"char * tmp_name = 0 , * tmp1 = 0 ;"	1340:1:31783:31812	6347393	1	True				
ANR	6347406	IdentifierDecl	* tmp_name = 0		6347393	0					
ANR	6347407	IdentifierDeclType	char *		6347393	0					
ANR	6347408	Identifier	tmp_name		6347393	1					
ANR	6347409	AssignmentExpression	* tmp_name = 0		6347393	2		=			
ANR	6347410	Identifier	tmp_name		6347393	0					
ANR	6347411	PrimaryExpression	0		6347393	1					
ANR	6347412	IdentifierDecl	* tmp1 = 0		6347393	1					
ANR	6347413	IdentifierDeclType	char *		6347393	0					
ANR	6347414	Identifier	tmp1		6347393	1					
ANR	6347415	AssignmentExpression	* tmp1 = 0		6347393	2		=			
ANR	6347416	Identifier	tmp1		6347393	0					
ANR	6347417	PrimaryExpression	0		6347393	1					
ANR	6347418	IdentifierDeclStatement	int name_len = 0 ;	1341:1:31815:31831	6347393	2	True				
ANR	6347419	IdentifierDecl	name_len = 0		6347393	0					
ANR	6347420	IdentifierDeclType	int		6347393	0					
ANR	6347421	Identifier	name_len		6347393	1					
ANR	6347422	AssignmentExpression	name_len = 0		6347393	2		=			
ANR	6347423	Identifier	name_len		6347393	0					
ANR	6347424	PrimaryExpression	0		6347393	1					
ANR	6347425	ExpressionStatement	"ti -> get_name ( ti , & tmp_name )"	1343:1:31835:31863	6347393	3	True				
ANR	6347426	CallExpression	"ti -> get_name ( ti , & tmp_name )"		6347393	0					
ANR	6347427	Callee	ti -> get_name		6347393	0					
ANR	6347428	PtrMemberAccess	ti -> get_name		6347393	0					
ANR	6347429	Identifier	ti		6347393	0					
ANR	6347430	Identifier	get_name		6347393	1					
ANR	6347431	ArgumentList	ti		6347393	1					
ANR	6347432	Argument	ti		6347393	0					
ANR	6347433	Identifier	ti		6347393	0					
ANR	6347434	Argument	& tmp_name		6347393	1					
ANR	6347435	UnaryOperationExpression	& tmp_name		6347393	0					
ANR	6347436	UnaryOperator	&		6347393	0					
ANR	6347437	Identifier	tmp_name		6347393	1					
ANR	6347438	ExpressionStatement	"tmp1 = ""enumerate """	1345:1:31867:31886	6347393	4	True				
ANR	6347439	AssignmentExpression	"tmp1 = ""enumerate """		6347393	0		=			
ANR	6347440	Identifier	tmp1		6347393	0					
ANR	6347441	PrimaryExpression	"""enumerate """		6347393	1					
ANR	6347442	ExpressionStatement	name_len = strlen ( tmp1 )	1346:1:31889:31913	6347393	5	True				
ANR	6347443	AssignmentExpression	name_len = strlen ( tmp1 )		6347393	0		=			
ANR	6347444	Identifier	name_len		6347393	0					
ANR	6347445	CallExpression	strlen ( tmp1 )		6347393	1					
ANR	6347446	Callee	strlen		6347393	0					
ANR	6347447	Identifier	strlen		6347393	0					
ANR	6347448	ArgumentList	tmp1		6347393	1					
ANR	6347449	Argument	tmp1		6347393	0					
ANR	6347450	Identifier	tmp1		6347393	0					
ANR	6347451	IfStatement	if ( tmp_name )		6347393	6					
ANR	6347452	Condition	tmp_name	1347:5:31920:31927	6347393	0	True				
ANR	6347453	Identifier	tmp_name		6347393	0					
ANR	6347454	CompoundStatement		10:15:186:186	6347393	1					
ANR	6347455	ExpressionStatement	name_len += strlen ( tmp_name )	1348:2:31934:31963	6347393	0	True				
ANR	6347456	AssignmentExpression	name_len += strlen ( tmp_name )		6347393	0		+=			
ANR	6347457	Identifier	name_len		6347393	0					
ANR	6347458	CallExpression	strlen ( tmp_name )		6347393	1					
ANR	6347459	Callee	strlen		6347393	0					
ANR	6347460	Identifier	strlen		6347393	0					
ANR	6347461	ArgumentList	tmp_name		6347393	1					
ANR	6347462	Argument	tmp_name		6347393	0					
ANR	6347463	Identifier	tmp_name		6347393	0					
ANR	6347464	ExpressionStatement	* name = ( char * ) malloc ( name_len + 1 )	1350:1:31969:32007	6347393	7	True				
ANR	6347465	AssignmentExpression	* name = ( char * ) malloc ( name_len + 1 )		6347393	0		=			
ANR	6347466	UnaryOperationExpression	* name		6347393	0					
ANR	6347467	UnaryOperator	*		6347393	0					
ANR	6347468	Identifier	name		6347393	1					
ANR	6347469	CastExpression	( char * ) malloc ( name_len + 1 )		6347393	1					
ANR	6347470	CastTarget	char *		6347393	0					
ANR	6347471	CallExpression	malloc ( name_len + 1 )		6347393	1					
ANR	6347472	Callee	malloc		6347393	0					
ANR	6347473	Identifier	malloc		6347393	0					
ANR	6347474	ArgumentList	name_len + 1		6347393	1					
ANR	6347475	Argument	name_len + 1		6347393	0					
ANR	6347476	AdditiveExpression	name_len + 1		6347393	0		+			
ANR	6347477	Identifier	name_len		6347393	0					
ANR	6347478	PrimaryExpression	1		6347393	1					
ANR	6347479	IfStatement	if ( ! ( * name ) )		6347393	8					
ANR	6347480	Condition	! ( * name )	1351:5:32014:32021	6347393	0	True				
ANR	6347481	UnaryOperationExpression	! ( * name )		6347393	0					
ANR	6347482	UnaryOperator	!		6347393	0					
ANR	6347483	UnaryOperationExpression	* name		6347393	1					
ANR	6347484	UnaryOperator	*		6347393	0					
ANR	6347485	Identifier	name		6347393	1					
ANR	6347486	CompoundStatement		14:15:280:280	6347393	1					
ANR	6347487	ReturnStatement	return ;	1352:2:32028:32034	6347393	0	True				
ANR	6347488	ExpressionStatement	"strcpy ( * name , tmp1 )"	1355:1:32067:32087	6347393	9	True				
ANR	6347489	CallExpression	"strcpy ( * name , tmp1 )"		6347393	0					
ANR	6347490	Callee	strcpy		6347393	0					
ANR	6347491	Identifier	strcpy		6347393	0					
ANR	6347492	ArgumentList	* name		6347393	1					
ANR	6347493	Argument	* name		6347393	0					
ANR	6347494	UnaryOperationExpression	* name		6347393	0					
ANR	6347495	UnaryOperator	*		6347393	0					
ANR	6347496	Identifier	name		6347393	1					
ANR	6347497	Argument	tmp1		6347393	1					
ANR	6347498	Identifier	tmp1		6347393	0					
ANR	6347499	IfStatement	if ( tmp_name )		6347393	10					
ANR	6347500	Condition	tmp_name	1356:5:32094:32101	6347393	0	True				
ANR	6347501	Identifier	tmp_name		6347393	0					
ANR	6347502	CompoundStatement		19:15:360:360	6347393	1					
ANR	6347503	ExpressionStatement	"strcat ( * name , tmp_name )"	1357:2:32108:32132	6347393	0	True				
ANR	6347504	CallExpression	"strcat ( * name , tmp_name )"		6347393	0					
ANR	6347505	Callee	strcat		6347393	0					
ANR	6347506	Identifier	strcat		6347393	0					
ANR	6347507	ArgumentList	* name		6347393	1					
ANR	6347508	Argument	* name		6347393	0					
ANR	6347509	UnaryOperationExpression	* name		6347393	0					
ANR	6347510	UnaryOperator	*		6347393	0					
ANR	6347511	Identifier	name		6347393	1					
ANR	6347512	Argument	tmp_name		6347393	1					
ANR	6347513	Identifier	tmp_name		6347393	0					
ANR	6347514	ReturnType	static void		6347393	1					
ANR	6347515	Identifier	get_enumerate_print_type		6347393	2					
ANR	6347516	ParameterList	"void * type , char * * name"		6347393	3					
ANR	6347517	Parameter	void * type	1338:37:31718:31727	6347393	0	True				
ANR	6347518	ParameterType	void *		6347393	0					
ANR	6347519	Identifier	type		6347393	1					
ANR	6347520	Parameter	char * * name	1338:49:31730:31740	6347393	1	True				
ANR	6347521	ParameterType	char * *		6347393	0					
ANR	6347522	Identifier	name		6347393	1					
ANR	6347523	CFGEntryNode	ENTRY		6347393		True				
ANR	6347524	CFGExitNode	EXIT		6347393		True				
ANR	6347525	Symbol	* name		6347393						
ANR	6347526	Symbol	strlen		6347393						
ANR	6347527	Symbol	malloc		6347393						
ANR	6347528	Symbol	ti		6347393						
ANR	6347529	Symbol	name		6347393						
ANR	6347530	Symbol	name_len		6347393						
ANR	6347531	Symbol	type		6347393						
ANR	6347532	Symbol	tmp1		6347393						
ANR	6347533	Symbol	& tmp_name		6347393						
ANR	6347534	Symbol	tmp_name		6347393						
ANR	6347535	Function	get_nesttype_print_type	1364:0:32184:33213							
ANR	6347536	FunctionDef	"get_nesttype_print_type (void * type , char * * name)"		6347535	0					
ANR	6347537	CompoundStatement		1364:61:32245:33213	6347535	0					
ANR	6347538	IdentifierDeclStatement	STypeInfo * ti = ( STypeInfo * ) type ;	1365:1:32248:32282	6347535	0	True				
ANR	6347539	IdentifierDecl	* ti = ( STypeInfo * ) type		6347535	0					
ANR	6347540	IdentifierDeclType	STypeInfo *		6347535	0					
ANR	6347541	Identifier	ti		6347535	1					
ANR	6347542	AssignmentExpression	* ti = ( STypeInfo * ) type		6347535	2		=			
ANR	6347543	Identifier	ti		6347535	0					
ANR	6347544	CastExpression	( STypeInfo * ) type		6347535	1					
ANR	6347545	CastTarget	STypeInfo *		6347535	0					
ANR	6347546	Identifier	type		6347535	1					
ANR	6347547	IdentifierDeclStatement	SType * t = 0 ;	1366:1:32285:32297	6347535	1	True				
ANR	6347548	IdentifierDecl	* t = 0		6347535	0					
ANR	6347549	IdentifierDeclType	SType *		6347535	0					
ANR	6347550	Identifier	t		6347535	1					
ANR	6347551	AssignmentExpression	* t = 0		6347535	2		=			
ANR	6347552	Identifier	t		6347535	0					
ANR	6347553	PrimaryExpression	0		6347535	1					
ANR	6347554	IdentifierDeclStatement	char * tmp_name = 0 ;	1367:1:32300:32318	6347535	2	True				
ANR	6347555	IdentifierDecl	* tmp_name = 0		6347535	0					
ANR	6347556	IdentifierDeclType	char *		6347535	0					
ANR	6347557	Identifier	tmp_name		6347535	1					
ANR	6347558	AssignmentExpression	* tmp_name = 0		6347535	2		=			
ANR	6347559	Identifier	tmp_name		6347535	0					
ANR	6347560	PrimaryExpression	0		6347535	1					
ANR	6347561	IdentifierDeclStatement	int name_len = 0 ;	1368:1:32321:32337	6347535	3	True				
ANR	6347562	IdentifierDecl	name_len = 0		6347535	0					
ANR	6347563	IdentifierDeclType	int		6347535	0					
ANR	6347564	Identifier	name_len		6347535	1					
ANR	6347565	AssignmentExpression	name_len = 0		6347535	2		=			
ANR	6347566	Identifier	name_len		6347535	0					
ANR	6347567	PrimaryExpression	0		6347535	1					
ANR	6347568	IdentifierDeclStatement	int need_to_free = 1 ;	1369:1:32340:32360	6347535	4	True				
ANR	6347569	IdentifierDecl	need_to_free = 1		6347535	0					
ANR	6347570	IdentifierDeclType	int		6347535	0					
ANR	6347571	Identifier	need_to_free		6347535	1					
ANR	6347572	AssignmentExpression	need_to_free = 1		6347535	2		=			
ANR	6347573	Identifier	need_to_free		6347535	0					
ANR	6347574	PrimaryExpression	1		6347535	1					
ANR	6347575	IdentifierDeclStatement	int base_type = 0 ;	1370:1:32363:32380	6347535	5	True				
ANR	6347576	IdentifierDecl	base_type = 0		6347535	0					
ANR	6347577	IdentifierDeclType	int		6347535	0					
ANR	6347578	Identifier	base_type		6347535	1					
ANR	6347579	AssignmentExpression	base_type = 0		6347535	2		=			
ANR	6347580	Identifier	base_type		6347535	0					
ANR	6347581	PrimaryExpression	0		6347535	1					
ANR	6347582	ExpressionStatement	"base_type = ti -> get_index ( ti , ( void * * ) & t )"	1372:1:32384:32427	6347535	6	True				
ANR	6347583	AssignmentExpression	"base_type = ti -> get_index ( ti , ( void * * ) & t )"		6347535	0		=			
ANR	6347584	Identifier	base_type		6347535	0					
ANR	6347585	CallExpression	"ti -> get_index ( ti , ( void * * ) & t )"		6347535	1					
ANR	6347586	Callee	ti -> get_index		6347535	0					
ANR	6347587	PtrMemberAccess	ti -> get_index		6347535	0					
ANR	6347588	Identifier	ti		6347535	0					
ANR	6347589	Identifier	get_index		6347535	1					
ANR	6347590	ArgumentList	ti		6347535	1					
ANR	6347591	Argument	ti		6347535	0					
ANR	6347592	Identifier	ti		6347535	0					
ANR	6347593	Argument	( void * * ) & t		6347535	1					
ANR	6347594	CastExpression	( void * * ) & t		6347535	0					
ANR	6347595	CastTarget	void * *		6347535	0					
ANR	6347596	UnaryOperationExpression	& t		6347535	1					
ANR	6347597	UnaryOperator	&		6347535	0					
ANR	6347598	Identifier	t		6347535	1					
ANR	6347599	IfStatement	if ( ! t )		6347535	7					
ANR	6347600	Condition	! t	1373:5:32434:32435	6347535	0	True				
ANR	6347601	UnaryOperationExpression	! t		6347535	0					
ANR	6347602	UnaryOperator	!		6347535	0					
ANR	6347603	Identifier	t		6347535	1					
ANR	6347604	CompoundStatement		10:9:192:192	6347535	1					
ANR	6347605	ExpressionStatement	need_to_free = 0	1374:2:32442:32458	6347535	0	True				
ANR	6347606	AssignmentExpression	need_to_free = 0		6347535	0		=			
ANR	6347607	Identifier	need_to_free		6347535	0					
ANR	6347608	PrimaryExpression	0		6347535	1					
ANR	6347609	ExpressionStatement	"print_base_type ( base_type , & tmp_name )"	1375:2:32462:32500	6347535	1	True				
ANR	6347610	CallExpression	"print_base_type ( base_type , & tmp_name )"		6347535	0					
ANR	6347611	Callee	print_base_type		6347535	0					
ANR	6347612	Identifier	print_base_type		6347535	0					
ANR	6347613	ArgumentList	base_type		6347535	1					
ANR	6347614	Argument	base_type		6347535	0					
ANR	6347615	Identifier	base_type		6347535	0					
ANR	6347616	Argument	& tmp_name		6347535	1					
ANR	6347617	UnaryOperationExpression	& tmp_name		6347535	0					
ANR	6347618	UnaryOperator	&		6347535	0					
ANR	6347619	Identifier	tmp_name		6347535	1					
ANR	6347620	ElseStatement	else		6347535	0					
ANR	6347621	CompoundStatement		13:8:264:264	6347535	0					
ANR	6347622	ExpressionStatement	ti = & t -> type_data	1377:2:32514:32532	6347535	0	True				
ANR	6347623	AssignmentExpression	ti = & t -> type_data		6347535	0		=			
ANR	6347624	Identifier	ti		6347535	0					
ANR	6347625	UnaryOperationExpression	& t -> type_data		6347535	1					
ANR	6347626	UnaryOperator	&		6347535	0					
ANR	6347627	PtrMemberAccess	t -> type_data		6347535	1					
ANR	6347628	Identifier	t		6347535	0					
ANR	6347629	Identifier	type_data		6347535	1					
ANR	6347630	IfStatement	if ( ti -> get_print_type != NULL )		6347535	1					
ANR	6347631	Condition	ti -> get_print_type != NULL	1378:6:32540:32565	6347535	0	True				
ANR	6347632	EqualityExpression	ti -> get_print_type != NULL		6347535	0		!=			
ANR	6347633	PtrMemberAccess	ti -> get_print_type		6347535	0					
ANR	6347634	Identifier	ti		6347535	0					
ANR	6347635	Identifier	get_print_type		6347535	1					
ANR	6347636	Identifier	NULL		6347535	1					
ANR	6347637	CompoundStatement		15:34:322:322	6347535	1					
ANR	6347638	ExpressionStatement	"ti -> get_print_type ( ti , & tmp_name )"	1379:3:32573:32607	6347535	0	True				
ANR	6347639	CallExpression	"ti -> get_print_type ( ti , & tmp_name )"		6347535	0					
ANR	6347640	Callee	ti -> get_print_type		6347535	0					
ANR	6347641	PtrMemberAccess	ti -> get_print_type		6347535	0					
ANR	6347642	Identifier	ti		6347535	0					
ANR	6347643	Identifier	get_print_type		6347535	1					
ANR	6347644	ArgumentList	ti		6347535	1					
ANR	6347645	Argument	ti		6347535	0					
ANR	6347646	Identifier	ti		6347535	0					
ANR	6347647	Argument	& tmp_name		6347535	1					
ANR	6347648	UnaryOperationExpression	& tmp_name		6347535	0					
ANR	6347649	UnaryOperator	&		6347535	0					
ANR	6347650	Identifier	tmp_name		6347535	1					
ANR	6347651	ElseStatement	else		6347535	0					
ANR	6347652	CompoundStatement		17:9:372:372	6347535	0					
ANR	6347653	ExpressionStatement	"name_len = strlen ( ""nesttype "" )"	1389:1:32861:32892	6347535	8	True				
ANR	6347654	AssignmentExpression	"name_len = strlen ( ""nesttype "" )"		6347535	0		=			
ANR	6347655	Identifier	name_len		6347535	0					
ANR	6347656	CallExpression	"strlen ( ""nesttype "" )"		6347535	1					
ANR	6347657	Callee	strlen		6347535	0					
ANR	6347658	Identifier	strlen		6347535	0					
ANR	6347659	ArgumentList	"""nesttype """		6347535	1					
ANR	6347660	Argument	"""nesttype """		6347535	0					
ANR	6347661	PrimaryExpression	"""nesttype """		6347535	0					
ANR	6347662	IfStatement	if ( tmp_name )		6347535	9					
ANR	6347663	Condition	tmp_name	1390:5:32899:32906	6347535	0	True				
ANR	6347664	Identifier	tmp_name		6347535	0					
ANR	6347665	CompoundStatement		27:15:663:663	6347535	1					
ANR	6347666	ExpressionStatement	name_len += strlen ( tmp_name )	1391:2:32913:32942	6347535	0	True				
ANR	6347667	AssignmentExpression	name_len += strlen ( tmp_name )		6347535	0		+=			
ANR	6347668	Identifier	name_len		6347535	0					
ANR	6347669	CallExpression	strlen ( tmp_name )		6347535	1					
ANR	6347670	Callee	strlen		6347535	0					
ANR	6347671	Identifier	strlen		6347535	0					
ANR	6347672	ArgumentList	tmp_name		6347535	1					
ANR	6347673	Argument	tmp_name		6347535	0					
ANR	6347674	Identifier	tmp_name		6347535	0					
ANR	6347675	ExpressionStatement	* name = ( char * ) malloc ( name_len + 1 )	1393:1:32948:32986	6347535	10	True				
ANR	6347676	AssignmentExpression	* name = ( char * ) malloc ( name_len + 1 )		6347535	0		=			
ANR	6347677	UnaryOperationExpression	* name		6347535	0					
ANR	6347678	UnaryOperator	*		6347535	0					
ANR	6347679	Identifier	name		6347535	1					
ANR	6347680	CastExpression	( char * ) malloc ( name_len + 1 )		6347535	1					
ANR	6347681	CastTarget	char *		6347535	0					
ANR	6347682	CallExpression	malloc ( name_len + 1 )		6347535	1					
ANR	6347683	Callee	malloc		6347535	0					
ANR	6347684	Identifier	malloc		6347535	0					
ANR	6347685	ArgumentList	name_len + 1		6347535	1					
ANR	6347686	Argument	name_len + 1		6347535	0					
ANR	6347687	AdditiveExpression	name_len + 1		6347535	0		+			
ANR	6347688	Identifier	name_len		6347535	0					
ANR	6347689	PrimaryExpression	1		6347535	1					
ANR	6347690	IfStatement	if ( ! ( * name ) )		6347535	11					
ANR	6347691	Condition	! ( * name )	1394:5:32993:33000	6347535	0	True				
ANR	6347692	UnaryOperationExpression	! ( * name )		6347535	0					
ANR	6347693	UnaryOperator	!		6347535	0					
ANR	6347694	UnaryOperationExpression	* name		6347535	1					
ANR	6347695	UnaryOperator	*		6347535	0					
ANR	6347696	Identifier	name		6347535	1					
ANR	6347697	CompoundStatement		31:15:757:757	6347535	1					
ANR	6347698	IfStatement	if ( need_to_free )		6347535	0					
ANR	6347699	Condition	need_to_free	1395:6:33011:33022	6347535	0	True				
ANR	6347700	Identifier	need_to_free		6347535	0					
ANR	6347701	CompoundStatement		32:20:779:779	6347535	1					
ANR	6347702	ExpressionStatement	free ( tmp_name )	1396:3:33030:33045	6347535	0	True				
ANR	6347703	CallExpression	free ( tmp_name )		6347535	0					
ANR	6347704	Callee	free		6347535	0					
ANR	6347705	Identifier	free		6347535	0					
ANR	6347706	ArgumentList	tmp_name		6347535	1					
ANR	6347707	Argument	tmp_name		6347535	0					
ANR	6347708	Identifier	tmp_name		6347535	0					
ANR	6347709	ReturnStatement	return ;	1398:2:33053:33059	6347535	1	True				
ANR	6347710	ExpressionStatement	"strcpy ( * name , ""nesttype "" )"	1401:1:33092:33119	6347535	12	True				
ANR	6347711	CallExpression	"strcpy ( * name , ""nesttype "" )"		6347535	0					
ANR	6347712	Callee	strcpy		6347535	0					
ANR	6347713	Identifier	strcpy		6347535	0					
ANR	6347714	ArgumentList	* name		6347535	1					
ANR	6347715	Argument	* name		6347535	0					
ANR	6347716	UnaryOperationExpression	* name		6347535	0					
ANR	6347717	UnaryOperator	*		6347535	0					
ANR	6347718	Identifier	name		6347535	1					
ANR	6347719	Argument	"""nesttype """		6347535	1					
ANR	6347720	PrimaryExpression	"""nesttype """		6347535	0					
ANR	6347721	IfStatement	if ( tmp_name )		6347535	13					
ANR	6347722	Condition	tmp_name	1402:5:33126:33133	6347535	0	True				
ANR	6347723	Identifier	tmp_name		6347535	0					
ANR	6347724	CompoundStatement		39:15:890:890	6347535	1					
ANR	6347725	ExpressionStatement	"strcat ( * name , tmp_name )"	1403:2:33140:33164	6347535	0	True				
ANR	6347726	CallExpression	"strcat ( * name , tmp_name )"		6347535	0					
ANR	6347727	Callee	strcat		6347535	0					
ANR	6347728	Identifier	strcat		6347535	0					
ANR	6347729	ArgumentList	* name		6347535	1					
ANR	6347730	Argument	* name		6347535	0					
ANR	6347731	UnaryOperationExpression	* name		6347535	0					
ANR	6347732	UnaryOperator	*		6347535	0					
ANR	6347733	Identifier	name		6347535	1					
ANR	6347734	Argument	tmp_name		6347535	1					
ANR	6347735	Identifier	tmp_name		6347535	0					
ANR	6347736	IfStatement	if ( need_to_free )		6347535	14					
ANR	6347737	Condition	need_to_free	1406:5:33175:33186	6347535	0	True				
ANR	6347738	Identifier	need_to_free		6347535	0					
ANR	6347739	CompoundStatement		43:19:943:943	6347535	1					
ANR	6347740	ExpressionStatement	free ( tmp_name )	1407:2:33193:33208	6347535	0	True				
ANR	6347741	CallExpression	free ( tmp_name )		6347535	0					
ANR	6347742	Callee	free		6347535	0					
ANR	6347743	Identifier	free		6347535	0					
ANR	6347744	ArgumentList	tmp_name		6347535	1					
ANR	6347745	Argument	tmp_name		6347535	0					
ANR	6347746	Identifier	tmp_name		6347535	0					
ANR	6347747	ReturnType	static void		6347535	1					
ANR	6347748	Identifier	get_nesttype_print_type		6347535	2					
ANR	6347749	ParameterList	"void * type , char * * name"		6347535	3					
ANR	6347750	Parameter	void * type	1364:36:32220:32229	6347535	0	True				
ANR	6347751	ParameterType	void *		6347535	0					
ANR	6347752	Identifier	type		6347535	1					
ANR	6347753	Parameter	char * * name	1364:48:32232:32242	6347535	1	True				
ANR	6347754	ParameterType	char * *		6347535	0					
ANR	6347755	Identifier	name		6347535	1					
ANR	6347756	CFGEntryNode	ENTRY		6347535		True				
ANR	6347757	CFGExitNode	EXIT		6347535		True				
ANR	6347758	Symbol	* name		6347535						
ANR	6347759	Symbol	malloc		6347535						
ANR	6347760	Symbol	NULL		6347535						
ANR	6347761	Symbol	& t -> type_data		6347535						
ANR	6347762	Symbol	type		6347535						
ANR	6347763	Symbol	tmp_name		6347535						
ANR	6347764	Symbol	strlen		6347535						
ANR	6347765	Symbol	base_type		6347535						
ANR	6347766	Symbol	t		6347535						
ANR	6347767	Symbol	ti		6347535						
ANR	6347768	Symbol	name		6347535						
ANR	6347769	Symbol	* ti		6347535						
ANR	6347770	Symbol	& t		6347535						
ANR	6347771	Symbol	name_len		6347535						
ANR	6347772	Symbol	ti -> get_print_type		6347535						
ANR	6347773	Symbol	need_to_free		6347535						
ANR	6347774	Symbol	ti -> get_index		6347535						
ANR	6347775	Symbol	& tmp_name		6347535						
ANR	6347776	Function	get_method_print_type	1411:0:33216:33710							
ANR	6347777	FunctionDef	"get_method_print_type (void * type , char * * name)"		6347776	0					
ANR	6347778	CompoundStatement		1411:59:33275:33710	6347776	0					
ANR	6347779	IdentifierDeclStatement	STypeInfo * ti = ( STypeInfo * ) type ;	1412:1:33278:33312	6347776	0	True				
ANR	6347780	IdentifierDecl	* ti = ( STypeInfo * ) type		6347776	0					
ANR	6347781	IdentifierDeclType	STypeInfo *		6347776	0					
ANR	6347782	Identifier	ti		6347776	1					
ANR	6347783	AssignmentExpression	* ti = ( STypeInfo * ) type		6347776	2		=			
ANR	6347784	Identifier	ti		6347776	0					
ANR	6347785	CastExpression	( STypeInfo * ) type		6347776	1					
ANR	6347786	CastTarget	STypeInfo *		6347776	0					
ANR	6347787	Identifier	type		6347776	1					
ANR	6347788	IdentifierDeclStatement	"char * tmp_name = 0 , * tmp1 = 0 ;"	1413:1:33315:33344	6347776	1	True				
ANR	6347789	IdentifierDecl	* tmp_name = 0		6347776	0					
ANR	6347790	IdentifierDeclType	char *		6347776	0					
ANR	6347791	Identifier	tmp_name		6347776	1					
ANR	6347792	AssignmentExpression	* tmp_name = 0		6347776	2		=			
ANR	6347793	Identifier	tmp_name		6347776	0					
ANR	6347794	PrimaryExpression	0		6347776	1					
ANR	6347795	IdentifierDecl	* tmp1 = 0		6347776	1					
ANR	6347796	IdentifierDeclType	char *		6347776	0					
ANR	6347797	Identifier	tmp1		6347776	1					
ANR	6347798	AssignmentExpression	* tmp1 = 0		6347776	2		=			
ANR	6347799	Identifier	tmp1		6347776	0					
ANR	6347800	PrimaryExpression	0		6347776	1					
ANR	6347801	IdentifierDeclStatement	int name_len = 0 ;	1414:1:33347:33363	6347776	2	True				
ANR	6347802	IdentifierDecl	name_len = 0		6347776	0					
ANR	6347803	IdentifierDeclType	int		6347776	0					
ANR	6347804	Identifier	name_len		6347776	1					
ANR	6347805	AssignmentExpression	name_len = 0		6347776	2		=			
ANR	6347806	Identifier	name_len		6347776	0					
ANR	6347807	PrimaryExpression	0		6347776	1					
ANR	6347808	ExpressionStatement	"ti -> get_name ( ti , & tmp_name )"	1416:1:33367:33395	6347776	3	True				
ANR	6347809	CallExpression	"ti -> get_name ( ti , & tmp_name )"		6347776	0					
ANR	6347810	Callee	ti -> get_name		6347776	0					
ANR	6347811	PtrMemberAccess	ti -> get_name		6347776	0					
ANR	6347812	Identifier	ti		6347776	0					
ANR	6347813	Identifier	get_name		6347776	1					
ANR	6347814	ArgumentList	ti		6347776	1					
ANR	6347815	Argument	ti		6347776	0					
ANR	6347816	Identifier	ti		6347776	0					
ANR	6347817	Argument	& tmp_name		6347776	1					
ANR	6347818	UnaryOperationExpression	& tmp_name		6347776	0					
ANR	6347819	UnaryOperator	&		6347776	0					
ANR	6347820	Identifier	tmp_name		6347776	1					
ANR	6347821	ExpressionStatement	"tmp1 = ""method """	1418:1:33399:33415	6347776	4	True				
ANR	6347822	AssignmentExpression	"tmp1 = ""method """		6347776	0		=			
ANR	6347823	Identifier	tmp1		6347776	0					
ANR	6347824	PrimaryExpression	"""method """		6347776	1					
ANR	6347825	ExpressionStatement	name_len = strlen ( tmp1 )	1419:1:33418:33442	6347776	5	True				
ANR	6347826	AssignmentExpression	name_len = strlen ( tmp1 )		6347776	0		=			
ANR	6347827	Identifier	name_len		6347776	0					
ANR	6347828	CallExpression	strlen ( tmp1 )		6347776	1					
ANR	6347829	Callee	strlen		6347776	0					
ANR	6347830	Identifier	strlen		6347776	0					
ANR	6347831	ArgumentList	tmp1		6347776	1					
ANR	6347832	Argument	tmp1		6347776	0					
ANR	6347833	Identifier	tmp1		6347776	0					
ANR	6347834	IfStatement	if ( tmp_name )		6347776	6					
ANR	6347835	Condition	tmp_name	1420:5:33449:33456	6347776	0	True				
ANR	6347836	Identifier	tmp_name		6347776	0					
ANR	6347837	CompoundStatement		10:15:183:183	6347776	1					
ANR	6347838	ExpressionStatement	name_len += strlen ( tmp_name )	1421:2:33463:33492	6347776	0	True				
ANR	6347839	AssignmentExpression	name_len += strlen ( tmp_name )		6347776	0		+=			
ANR	6347840	Identifier	name_len		6347776	0					
ANR	6347841	CallExpression	strlen ( tmp_name )		6347776	1					
ANR	6347842	Callee	strlen		6347776	0					
ANR	6347843	Identifier	strlen		6347776	0					
ANR	6347844	ArgumentList	tmp_name		6347776	1					
ANR	6347845	Argument	tmp_name		6347776	0					
ANR	6347846	Identifier	tmp_name		6347776	0					
ANR	6347847	ExpressionStatement	* name = ( char * ) malloc ( name_len + 1 )	1423:1:33498:33536	6347776	7	True				
ANR	6347848	AssignmentExpression	* name = ( char * ) malloc ( name_len + 1 )		6347776	0		=			
ANR	6347849	UnaryOperationExpression	* name		6347776	0					
ANR	6347850	UnaryOperator	*		6347776	0					
ANR	6347851	Identifier	name		6347776	1					
ANR	6347852	CastExpression	( char * ) malloc ( name_len + 1 )		6347776	1					
ANR	6347853	CastTarget	char *		6347776	0					
ANR	6347854	CallExpression	malloc ( name_len + 1 )		6347776	1					
ANR	6347855	Callee	malloc		6347776	0					
ANR	6347856	Identifier	malloc		6347776	0					
ANR	6347857	ArgumentList	name_len + 1		6347776	1					
ANR	6347858	Argument	name_len + 1		6347776	0					
ANR	6347859	AdditiveExpression	name_len + 1		6347776	0		+			
ANR	6347860	Identifier	name_len		6347776	0					
ANR	6347861	PrimaryExpression	1		6347776	1					
ANR	6347862	IfStatement	if ( ! ( * name ) )		6347776	8					
ANR	6347863	Condition	! ( * name )	1424:5:33543:33550	6347776	0	True				
ANR	6347864	UnaryOperationExpression	! ( * name )		6347776	0					
ANR	6347865	UnaryOperator	!		6347776	0					
ANR	6347866	UnaryOperationExpression	* name		6347776	1					
ANR	6347867	UnaryOperator	*		6347776	0					
ANR	6347868	Identifier	name		6347776	1					
ANR	6347869	CompoundStatement		14:15:277:277	6347776	1					
ANR	6347870	ReturnStatement	return ;	1425:2:33557:33563	6347776	0	True				
ANR	6347871	ExpressionStatement	"strcpy ( * name , tmp1 )"	1428:1:33596:33616	6347776	9	True				
ANR	6347872	CallExpression	"strcpy ( * name , tmp1 )"		6347776	0					
ANR	6347873	Callee	strcpy		6347776	0					
ANR	6347874	Identifier	strcpy		6347776	0					
ANR	6347875	ArgumentList	* name		6347776	1					
ANR	6347876	Argument	* name		6347776	0					
ANR	6347877	UnaryOperationExpression	* name		6347776	0					
ANR	6347878	UnaryOperator	*		6347776	0					
ANR	6347879	Identifier	name		6347776	1					
ANR	6347880	Argument	tmp1		6347776	1					
ANR	6347881	Identifier	tmp1		6347776	0					
ANR	6347882	IfStatement	if ( tmp_name )		6347776	10					
ANR	6347883	Condition	tmp_name	1429:5:33623:33630	6347776	0	True				
ANR	6347884	Identifier	tmp_name		6347776	0					
ANR	6347885	CompoundStatement		19:15:357:357	6347776	1					
ANR	6347886	ExpressionStatement	"strcat ( * name , tmp_name )"	1430:2:33637:33661	6347776	0	True				
ANR	6347887	CallExpression	"strcat ( * name , tmp_name )"		6347776	0					
ANR	6347888	Callee	strcat		6347776	0					
ANR	6347889	Identifier	strcat		6347776	0					
ANR	6347890	ArgumentList	* name		6347776	1					
ANR	6347891	Argument	* name		6347776	0					
ANR	6347892	UnaryOperationExpression	* name		6347776	0					
ANR	6347893	UnaryOperator	*		6347776	0					
ANR	6347894	Identifier	name		6347776	1					
ANR	6347895	Argument	tmp_name		6347776	1					
ANR	6347896	Identifier	tmp_name		6347776	0					
ANR	6347897	ReturnType	static void		6347776	1					
ANR	6347898	Identifier	get_method_print_type		6347776	2					
ANR	6347899	ParameterList	"void * type , char * * name"		6347776	3					
ANR	6347900	Parameter	void * type	1411:34:33250:33259	6347776	0	True				
ANR	6347901	ParameterType	void *		6347776	0					
ANR	6347902	Identifier	type		6347776	1					
ANR	6347903	Parameter	char * * name	1411:46:33262:33272	6347776	1	True				
ANR	6347904	ParameterType	char * *		6347776	0					
ANR	6347905	Identifier	name		6347776	1					
ANR	6347906	CFGEntryNode	ENTRY		6347776		True				
ANR	6347907	CFGExitNode	EXIT		6347776		True				
ANR	6347908	Symbol	* name		6347776						
ANR	6347909	Symbol	strlen		6347776						
ANR	6347910	Symbol	malloc		6347776						
ANR	6347911	Symbol	ti		6347776						
ANR	6347912	Symbol	name		6347776						
ANR	6347913	Symbol	name_len		6347776						
ANR	6347914	Symbol	type		6347776						
ANR	6347915	Symbol	tmp1		6347776						
ANR	6347916	Symbol	& tmp_name		6347776						
ANR	6347917	Symbol	tmp_name		6347776						
ANR	6347918	Function	get_member_print_type	1437:0:33713:34451							
ANR	6347919	FunctionDef	"get_member_print_type (void * type , char * * name)"		6347918	0					
ANR	6347920	CompoundStatement		1437:59:33772:34451	6347918	0					
ANR	6347921	IdentifierDeclStatement	STypeInfo * ti = ( STypeInfo * ) type ;	1438:1:33775:33809	6347918	0	True				
ANR	6347922	IdentifierDecl	* ti = ( STypeInfo * ) type		6347918	0					
ANR	6347923	IdentifierDeclType	STypeInfo *		6347918	0					
ANR	6347924	Identifier	ti		6347918	1					
ANR	6347925	AssignmentExpression	* ti = ( STypeInfo * ) type		6347918	2		=			
ANR	6347926	Identifier	ti		6347918	0					
ANR	6347927	CastExpression	( STypeInfo * ) type		6347918	1					
ANR	6347928	CastTarget	STypeInfo *		6347918	0					
ANR	6347929	Identifier	type		6347918	1					
ANR	6347930	IdentifierDeclStatement	SType * t = 0 ;	1439:1:33812:33824	6347918	1	True				
ANR	6347931	IdentifierDecl	* t = 0		6347918	0					
ANR	6347932	IdentifierDeclType	SType *		6347918	0					
ANR	6347933	Identifier	t		6347918	1					
ANR	6347934	AssignmentExpression	* t = 0		6347918	2		=			
ANR	6347935	Identifier	t		6347918	0					
ANR	6347936	PrimaryExpression	0		6347918	1					
ANR	6347937	IdentifierDeclStatement	char * tmp_name = 0 ;	1440:1:33827:33845	6347918	2	True				
ANR	6347938	IdentifierDecl	* tmp_name = 0		6347918	0					
ANR	6347939	IdentifierDeclType	char *		6347918	0					
ANR	6347940	Identifier	tmp_name		6347918	1					
ANR	6347941	AssignmentExpression	* tmp_name = 0		6347918	2		=			
ANR	6347942	Identifier	tmp_name		6347918	0					
ANR	6347943	PrimaryExpression	0		6347918	1					
ANR	6347944	IdentifierDeclStatement	int name_len = 0 ;	1441:1:33848:33864	6347918	3	True				
ANR	6347945	IdentifierDecl	name_len = 0		6347918	0					
ANR	6347946	IdentifierDeclType	int		6347918	0					
ANR	6347947	Identifier	name_len		6347918	1					
ANR	6347948	AssignmentExpression	name_len = 0		6347918	2		=			
ANR	6347949	Identifier	name_len		6347918	0					
ANR	6347950	PrimaryExpression	0		6347918	1					
ANR	6347951	IdentifierDeclStatement	int need_to_free = 1 ;	1442:1:33867:33887	6347918	4	True				
ANR	6347952	IdentifierDecl	need_to_free = 1		6347918	0					
ANR	6347953	IdentifierDeclType	int		6347918	0					
ANR	6347954	Identifier	need_to_free		6347918	1					
ANR	6347955	AssignmentExpression	need_to_free = 1		6347918	2		=			
ANR	6347956	Identifier	need_to_free		6347918	0					
ANR	6347957	PrimaryExpression	1		6347918	1					
ANR	6347958	IdentifierDeclStatement	int base_type = 0 ;	1443:1:33890:33907	6347918	5	True				
ANR	6347959	IdentifierDecl	base_type = 0		6347918	0					
ANR	6347960	IdentifierDeclType	int		6347918	0					
ANR	6347961	Identifier	base_type		6347918	1					
ANR	6347962	AssignmentExpression	base_type = 0		6347918	2		=			
ANR	6347963	Identifier	base_type		6347918	0					
ANR	6347964	PrimaryExpression	0		6347918	1					
ANR	6347965	ExpressionStatement	"base_type = ti -> get_index ( ti , ( void * * ) & t )"	1445:1:33911:33955	6347918	6	True				
ANR	6347966	AssignmentExpression	"base_type = ti -> get_index ( ti , ( void * * ) & t )"		6347918	0		=			
ANR	6347967	Identifier	base_type		6347918	0					
ANR	6347968	CallExpression	"ti -> get_index ( ti , ( void * * ) & t )"		6347918	1					
ANR	6347969	Callee	ti -> get_index		6347918	0					
ANR	6347970	PtrMemberAccess	ti -> get_index		6347918	0					
ANR	6347971	Identifier	ti		6347918	0					
ANR	6347972	Identifier	get_index		6347918	1					
ANR	6347973	ArgumentList	ti		6347918	1					
ANR	6347974	Argument	ti		6347918	0					
ANR	6347975	Identifier	ti		6347918	0					
ANR	6347976	Argument	( void * * ) & t		6347918	1					
ANR	6347977	CastExpression	( void * * ) & t		6347918	0					
ANR	6347978	CastTarget	void * *		6347918	0					
ANR	6347979	UnaryOperationExpression	& t		6347918	1					
ANR	6347980	UnaryOperator	&		6347918	0					
ANR	6347981	Identifier	t		6347918	1					
ANR	6347982	IfStatement	if ( ! t )		6347918	7					
ANR	6347983	Condition	! t	1446:5:33962:33963	6347918	0	True				
ANR	6347984	UnaryOperationExpression	! t		6347918	0					
ANR	6347985	UnaryOperator	!		6347918	0					
ANR	6347986	Identifier	t		6347918	1					
ANR	6347987	CompoundStatement		10:9:193:193	6347918	1					
ANR	6347988	ExpressionStatement	need_to_free = 0	1447:2:33970:33986	6347918	0	True				
ANR	6347989	AssignmentExpression	need_to_free = 0		6347918	0		=			
ANR	6347990	Identifier	need_to_free		6347918	0					
ANR	6347991	PrimaryExpression	0		6347918	1					
ANR	6347992	ExpressionStatement	"print_base_type ( base_type , & tmp_name )"	1448:2:33990:34028	6347918	1	True				
ANR	6347993	CallExpression	"print_base_type ( base_type , & tmp_name )"		6347918	0					
ANR	6347994	Callee	print_base_type		6347918	0					
ANR	6347995	Identifier	print_base_type		6347918	0					
ANR	6347996	ArgumentList	base_type		6347918	1					
ANR	6347997	Argument	base_type		6347918	0					
ANR	6347998	Identifier	base_type		6347918	0					
ANR	6347999	Argument	& tmp_name		6347918	1					
ANR	6348000	UnaryOperationExpression	& tmp_name		6347918	0					
ANR	6348001	UnaryOperator	&		6347918	0					
ANR	6348002	Identifier	tmp_name		6347918	1					
ANR	6348003	ElseStatement	else		6347918	0					
ANR	6348004	CompoundStatement		13:8:265:265	6347918	0					
ANR	6348005	ExpressionStatement	ti = & t -> type_data	1450:2:34042:34060	6347918	0	True				
ANR	6348006	AssignmentExpression	ti = & t -> type_data		6347918	0		=			
ANR	6348007	Identifier	ti		6347918	0					
ANR	6348008	UnaryOperationExpression	& t -> type_data		6347918	1					
ANR	6348009	UnaryOperator	&		6347918	0					
ANR	6348010	PtrMemberAccess	t -> type_data		6347918	1					
ANR	6348011	Identifier	t		6347918	0					
ANR	6348012	Identifier	type_data		6347918	1					
ANR	6348013	ExpressionStatement	"ti -> get_print_type ( ti , & tmp_name )"	1451:2:34064:34098	6347918	1	True				
ANR	6348014	CallExpression	"ti -> get_print_type ( ti , & tmp_name )"		6347918	0					
ANR	6348015	Callee	ti -> get_print_type		6347918	0					
ANR	6348016	PtrMemberAccess	ti -> get_print_type		6347918	0					
ANR	6348017	Identifier	ti		6347918	0					
ANR	6348018	Identifier	get_print_type		6347918	1					
ANR	6348019	ArgumentList	ti		6347918	1					
ANR	6348020	Argument	ti		6347918	0					
ANR	6348021	Identifier	ti		6347918	0					
ANR	6348022	Argument	& tmp_name		6347918	1					
ANR	6348023	UnaryOperationExpression	& tmp_name		6347918	0					
ANR	6348024	UnaryOperator	&		6347918	0					
ANR	6348025	Identifier	tmp_name		6347918	1					
ANR	6348026	ExpressionStatement	"name_len = strlen ( ""(member) "" )"	1454:1:34105:34136	6347918	8	True				
ANR	6348027	AssignmentExpression	"name_len = strlen ( ""(member) "" )"		6347918	0		=			
ANR	6348028	Identifier	name_len		6347918	0					
ANR	6348029	CallExpression	"strlen ( ""(member) "" )"		6347918	1					
ANR	6348030	Callee	strlen		6347918	0					
ANR	6348031	Identifier	strlen		6347918	0					
ANR	6348032	ArgumentList	"""(member) """		6347918	1					
ANR	6348033	Argument	"""(member) """		6347918	0					
ANR	6348034	PrimaryExpression	"""(member) """		6347918	0					
ANR	6348035	IfStatement	if ( tmp_name )		6347918	9					
ANR	6348036	Condition	tmp_name	1455:5:34143:34150	6347918	0	True				
ANR	6348037	Identifier	tmp_name		6347918	0					
ANR	6348038	CompoundStatement		19:15:380:380	6347918	1					
ANR	6348039	ExpressionStatement	name_len += strlen ( tmp_name )	1456:2:34157:34186	6347918	0	True				
ANR	6348040	AssignmentExpression	name_len += strlen ( tmp_name )		6347918	0		+=			
ANR	6348041	Identifier	name_len		6347918	0					
ANR	6348042	CallExpression	strlen ( tmp_name )		6347918	1					
ANR	6348043	Callee	strlen		6347918	0					
ANR	6348044	Identifier	strlen		6347918	0					
ANR	6348045	ArgumentList	tmp_name		6347918	1					
ANR	6348046	Argument	tmp_name		6347918	0					
ANR	6348047	Identifier	tmp_name		6347918	0					
ANR	6348048	ExpressionStatement	* name = ( char * ) malloc ( name_len + 1 )	1458:1:34192:34230	6347918	10	True				
ANR	6348049	AssignmentExpression	* name = ( char * ) malloc ( name_len + 1 )		6347918	0		=			
ANR	6348050	UnaryOperationExpression	* name		6347918	0					
ANR	6348051	UnaryOperator	*		6347918	0					
ANR	6348052	Identifier	name		6347918	1					
ANR	6348053	CastExpression	( char * ) malloc ( name_len + 1 )		6347918	1					
ANR	6348054	CastTarget	char *		6347918	0					
ANR	6348055	CallExpression	malloc ( name_len + 1 )		6347918	1					
ANR	6348056	Callee	malloc		6347918	0					
ANR	6348057	Identifier	malloc		6347918	0					
ANR	6348058	ArgumentList	name_len + 1		6347918	1					
ANR	6348059	Argument	name_len + 1		6347918	0					
ANR	6348060	AdditiveExpression	name_len + 1		6347918	0		+			
ANR	6348061	Identifier	name_len		6347918	0					
ANR	6348062	PrimaryExpression	1		6347918	1					
ANR	6348063	IfStatement	if ( ! ( * name ) )		6347918	11					
ANR	6348064	Condition	! ( * name )	1459:5:34237:34244	6347918	0	True				
ANR	6348065	UnaryOperationExpression	! ( * name )		6347918	0					
ANR	6348066	UnaryOperator	!		6347918	0					
ANR	6348067	UnaryOperationExpression	* name		6347918	1					
ANR	6348068	UnaryOperator	*		6347918	0					
ANR	6348069	Identifier	name		6347918	1					
ANR	6348070	CompoundStatement		23:15:474:474	6347918	1					
ANR	6348071	IfStatement	if ( need_to_free )		6347918	0					
ANR	6348072	Condition	need_to_free	1460:6:34255:34266	6347918	0	True				
ANR	6348073	Identifier	need_to_free		6347918	0					
ANR	6348074	ExpressionStatement	R_FREE ( tmp_name )	1460:20:34269:34286	6347918	1	True				
ANR	6348075	CallExpression	R_FREE ( tmp_name )		6347918	0					
ANR	6348076	Callee	R_FREE		6347918	0					
ANR	6348077	Identifier	R_FREE		6347918	0					
ANR	6348078	ArgumentList	tmp_name		6347918	1					
ANR	6348079	Argument	tmp_name		6347918	0					
ANR	6348080	Identifier	tmp_name		6347918	0					
ANR	6348081	ReturnStatement	return ;	1461:2:34290:34296	6347918	1	True				
ANR	6348082	ExpressionStatement	"strcpy ( * name , ""(member) "" )"	1464:1:34329:34355	6347918	12	True				
ANR	6348083	CallExpression	"strcpy ( * name , ""(member) "" )"		6347918	0					
ANR	6348084	Callee	strcpy		6347918	0					
ANR	6348085	Identifier	strcpy		6347918	0					
ANR	6348086	ArgumentList	* name		6347918	1					
ANR	6348087	Argument	* name		6347918	0					
ANR	6348088	UnaryOperationExpression	* name		6347918	0					
ANR	6348089	UnaryOperator	*		6347918	0					
ANR	6348090	Identifier	name		6347918	1					
ANR	6348091	Argument	"""(member) """		6347918	1					
ANR	6348092	PrimaryExpression	"""(member) """		6347918	0					
ANR	6348093	IfStatement	if ( tmp_name )		6347918	13					
ANR	6348094	Condition	tmp_name	1465:5:34362:34369	6347918	0	True				
ANR	6348095	Identifier	tmp_name		6347918	0					
ANR	6348096	CompoundStatement		29:15:599:599	6347918	1					
ANR	6348097	ExpressionStatement	"strcat ( * name , tmp_name )"	1466:2:34376:34400	6347918	0	True				
ANR	6348098	CallExpression	"strcat ( * name , tmp_name )"		6347918	0					
ANR	6348099	Callee	strcat		6347918	0					
ANR	6348100	Identifier	strcat		6347918	0					
ANR	6348101	ArgumentList	* name		6347918	1					
ANR	6348102	Argument	* name		6347918	0					
ANR	6348103	UnaryOperationExpression	* name		6347918	0					
ANR	6348104	UnaryOperator	*		6347918	0					
ANR	6348105	Identifier	name		6347918	1					
ANR	6348106	Argument	tmp_name		6347918	1					
ANR	6348107	Identifier	tmp_name		6347918	0					
ANR	6348108	IfStatement	if ( need_to_free )		6347918	14					
ANR	6348109	Condition	need_to_free	1469:5:34411:34422	6347918	0	True				
ANR	6348110	Identifier	need_to_free		6347918	0					
ANR	6348111	CompoundStatement		33:19:652:652	6347918	1					
ANR	6348112	ExpressionStatement	R_FREE ( tmp_name )	1470:2:34429:34446	6347918	0	True				
ANR	6348113	CallExpression	R_FREE ( tmp_name )		6347918	0					
ANR	6348114	Callee	R_FREE		6347918	0					
ANR	6348115	Identifier	R_FREE		6347918	0					
ANR	6348116	ArgumentList	tmp_name		6347918	1					
ANR	6348117	Argument	tmp_name		6347918	0					
ANR	6348118	Identifier	tmp_name		6347918	0					
ANR	6348119	ReturnType	static void		6347918	1					
ANR	6348120	Identifier	get_member_print_type		6347918	2					
ANR	6348121	ParameterList	"void * type , char * * name"		6347918	3					
ANR	6348122	Parameter	void * type	1437:34:33747:33756	6347918	0	True				
ANR	6348123	ParameterType	void *		6347918	0					
ANR	6348124	Identifier	type		6347918	1					
ANR	6348125	Parameter	char * * name	1437:46:33759:33769	6347918	1	True				
ANR	6348126	ParameterType	char * *		6347918	0					
ANR	6348127	Identifier	name		6347918	1					
ANR	6348128	CFGEntryNode	ENTRY		6347918		True				
ANR	6348129	CFGExitNode	EXIT		6347918		True				
ANR	6348130	Symbol	* name		6347918						
ANR	6348131	Symbol	malloc		6347918						
ANR	6348132	Symbol	& t -> type_data		6347918						
ANR	6348133	Symbol	type		6347918						
ANR	6348134	Symbol	tmp_name		6347918						
ANR	6348135	Symbol	strlen		6347918						
ANR	6348136	Symbol	base_type		6347918						
ANR	6348137	Symbol	t		6347918						
ANR	6348138	Symbol	ti		6347918						
ANR	6348139	Symbol	name		6347918						
ANR	6348140	Symbol	* ti		6347918						
ANR	6348141	Symbol	& t		6347918						
ANR	6348142	Symbol	name_len		6347918						
ANR	6348143	Symbol	need_to_free		6347918						
ANR	6348144	Symbol	ti -> get_index		6347918						
ANR	6348145	Symbol	& tmp_name		6347918						
ANR	6348146	Function	get_onemethod_print_type	1474:0:34454:35202							
ANR	6348147	FunctionDef	"get_onemethod_print_type (void * type , char * * name)"		6348146	0					
ANR	6348148	CompoundStatement		1474:62:34516:35202	6348146	0					
ANR	6348149	IdentifierDeclStatement	STypeInfo * ti = ( STypeInfo * ) type ;	1475:1:34519:34553	6348146	0	True				
ANR	6348150	IdentifierDecl	* ti = ( STypeInfo * ) type		6348146	0					
ANR	6348151	IdentifierDeclType	STypeInfo *		6348146	0					
ANR	6348152	Identifier	ti		6348146	1					
ANR	6348153	AssignmentExpression	* ti = ( STypeInfo * ) type		6348146	2		=			
ANR	6348154	Identifier	ti		6348146	0					
ANR	6348155	CastExpression	( STypeInfo * ) type		6348146	1					
ANR	6348156	CastTarget	STypeInfo *		6348146	0					
ANR	6348157	Identifier	type		6348146	1					
ANR	6348158	IdentifierDeclStatement	SType * t = 0 ;	1476:1:34556:34568	6348146	1	True				
ANR	6348159	IdentifierDecl	* t = 0		6348146	0					
ANR	6348160	IdentifierDeclType	SType *		6348146	0					
ANR	6348161	Identifier	t		6348146	1					
ANR	6348162	AssignmentExpression	* t = 0		6348146	2		=			
ANR	6348163	Identifier	t		6348146	0					
ANR	6348164	PrimaryExpression	0		6348146	1					
ANR	6348165	IdentifierDeclStatement	char * tmp_name = 0 ;	1477:1:34571:34589	6348146	2	True				
ANR	6348166	IdentifierDecl	* tmp_name = 0		6348146	0					
ANR	6348167	IdentifierDeclType	char *		6348146	0					
ANR	6348168	Identifier	tmp_name		6348146	1					
ANR	6348169	AssignmentExpression	* tmp_name = 0		6348146	2		=			
ANR	6348170	Identifier	tmp_name		6348146	0					
ANR	6348171	PrimaryExpression	0		6348146	1					
ANR	6348172	IdentifierDeclStatement	int name_len = 0 ;	1478:1:34592:34608	6348146	3	True				
ANR	6348173	IdentifierDecl	name_len = 0		6348146	0					
ANR	6348174	IdentifierDeclType	int		6348146	0					
ANR	6348175	Identifier	name_len		6348146	1					
ANR	6348176	AssignmentExpression	name_len = 0		6348146	2		=			
ANR	6348177	Identifier	name_len		6348146	0					
ANR	6348178	PrimaryExpression	0		6348146	1					
ANR	6348179	IdentifierDeclStatement	int need_to_free = 1 ;	1479:1:34611:34631	6348146	4	True				
ANR	6348180	IdentifierDecl	need_to_free = 1		6348146	0					
ANR	6348181	IdentifierDeclType	int		6348146	0					
ANR	6348182	Identifier	need_to_free		6348146	1					
ANR	6348183	AssignmentExpression	need_to_free = 1		6348146	2		=			
ANR	6348184	Identifier	need_to_free		6348146	0					
ANR	6348185	PrimaryExpression	1		6348146	1					
ANR	6348186	IdentifierDeclStatement	int base_type = 0 ;	1480:1:34634:34651	6348146	5	True				
ANR	6348187	IdentifierDecl	base_type = 0		6348146	0					
ANR	6348188	IdentifierDeclType	int		6348146	0					
ANR	6348189	Identifier	base_type		6348146	1					
ANR	6348190	AssignmentExpression	base_type = 0		6348146	2		=			
ANR	6348191	Identifier	base_type		6348146	0					
ANR	6348192	PrimaryExpression	0		6348146	1					
ANR	6348193	ExpressionStatement	"base_type = ti -> get_index ( ti , ( void * * ) & t )"	1482:1:34655:34698	6348146	6	True				
ANR	6348194	AssignmentExpression	"base_type = ti -> get_index ( ti , ( void * * ) & t )"		6348146	0		=			
ANR	6348195	Identifier	base_type		6348146	0					
ANR	6348196	CallExpression	"ti -> get_index ( ti , ( void * * ) & t )"		6348146	1					
ANR	6348197	Callee	ti -> get_index		6348146	0					
ANR	6348198	PtrMemberAccess	ti -> get_index		6348146	0					
ANR	6348199	Identifier	ti		6348146	0					
ANR	6348200	Identifier	get_index		6348146	1					
ANR	6348201	ArgumentList	ti		6348146	1					
ANR	6348202	Argument	ti		6348146	0					
ANR	6348203	Identifier	ti		6348146	0					
ANR	6348204	Argument	( void * * ) & t		6348146	1					
ANR	6348205	CastExpression	( void * * ) & t		6348146	0					
ANR	6348206	CastTarget	void * *		6348146	0					
ANR	6348207	UnaryOperationExpression	& t		6348146	1					
ANR	6348208	UnaryOperator	&		6348146	0					
ANR	6348209	Identifier	t		6348146	1					
ANR	6348210	IfStatement	if ( ! t )		6348146	7					
ANR	6348211	Condition	! t	1483:5:34705:34706	6348146	0	True				
ANR	6348212	UnaryOperationExpression	! t		6348146	0					
ANR	6348213	UnaryOperator	!		6348146	0					
ANR	6348214	Identifier	t		6348146	1					
ANR	6348215	CompoundStatement		10:9:192:192	6348146	1					
ANR	6348216	ExpressionStatement	need_to_free = 0	1484:2:34713:34729	6348146	0	True				
ANR	6348217	AssignmentExpression	need_to_free = 0		6348146	0		=			
ANR	6348218	Identifier	need_to_free		6348146	0					
ANR	6348219	PrimaryExpression	0		6348146	1					
ANR	6348220	ExpressionStatement	"print_base_type ( base_type , & tmp_name )"	1485:2:34733:34771	6348146	1	True				
ANR	6348221	CallExpression	"print_base_type ( base_type , & tmp_name )"		6348146	0					
ANR	6348222	Callee	print_base_type		6348146	0					
ANR	6348223	Identifier	print_base_type		6348146	0					
ANR	6348224	ArgumentList	base_type		6348146	1					
ANR	6348225	Argument	base_type		6348146	0					
ANR	6348226	Identifier	base_type		6348146	0					
ANR	6348227	Argument	& tmp_name		6348146	1					
ANR	6348228	UnaryOperationExpression	& tmp_name		6348146	0					
ANR	6348229	UnaryOperator	&		6348146	0					
ANR	6348230	Identifier	tmp_name		6348146	1					
ANR	6348231	ElseStatement	else		6348146	0					
ANR	6348232	CompoundStatement		13:8:264:264	6348146	0					
ANR	6348233	ExpressionStatement	ti = & t -> type_data	1487:2:34785:34803	6348146	0	True				
ANR	6348234	AssignmentExpression	ti = & t -> type_data		6348146	0		=			
ANR	6348235	Identifier	ti		6348146	0					
ANR	6348236	UnaryOperationExpression	& t -> type_data		6348146	1					
ANR	6348237	UnaryOperator	&		6348146	0					
ANR	6348238	PtrMemberAccess	t -> type_data		6348146	1					
ANR	6348239	Identifier	t		6348146	0					
ANR	6348240	Identifier	type_data		6348146	1					
ANR	6348241	ExpressionStatement	"ti -> get_print_type ( ti , & tmp_name )"	1488:2:34807:34841	6348146	1	True				
ANR	6348242	CallExpression	"ti -> get_print_type ( ti , & tmp_name )"		6348146	0					
ANR	6348243	Callee	ti -> get_print_type		6348146	0					
ANR	6348244	PtrMemberAccess	ti -> get_print_type		6348146	0					
ANR	6348245	Identifier	ti		6348146	0					
ANR	6348246	Identifier	get_print_type		6348146	1					
ANR	6348247	ArgumentList	ti		6348146	1					
ANR	6348248	Argument	ti		6348146	0					
ANR	6348249	Identifier	ti		6348146	0					
ANR	6348250	Argument	& tmp_name		6348146	1					
ANR	6348251	UnaryOperationExpression	& tmp_name		6348146	0					
ANR	6348252	UnaryOperator	&		6348146	0					
ANR	6348253	Identifier	tmp_name		6348146	1					
ANR	6348254	ExpressionStatement	"name_len = strlen ( ""onemethod "" )"	1491:1:34848:34880	6348146	8	True				
ANR	6348255	AssignmentExpression	"name_len = strlen ( ""onemethod "" )"		6348146	0		=			
ANR	6348256	Identifier	name_len		6348146	0					
ANR	6348257	CallExpression	"strlen ( ""onemethod "" )"		6348146	1					
ANR	6348258	Callee	strlen		6348146	0					
ANR	6348259	Identifier	strlen		6348146	0					
ANR	6348260	ArgumentList	"""onemethod """		6348146	1					
ANR	6348261	Argument	"""onemethod """		6348146	0					
ANR	6348262	PrimaryExpression	"""onemethod """		6348146	0					
ANR	6348263	IfStatement	if ( tmp_name )		6348146	9					
ANR	6348264	Condition	tmp_name	1492:5:34887:34894	6348146	0	True				
ANR	6348265	Identifier	tmp_name		6348146	0					
ANR	6348266	CompoundStatement		19:15:380:380	6348146	1					
ANR	6348267	ExpressionStatement	name_len += strlen ( tmp_name )	1493:2:34901:34930	6348146	0	True				
ANR	6348268	AssignmentExpression	name_len += strlen ( tmp_name )		6348146	0		+=			
ANR	6348269	Identifier	name_len		6348146	0					
ANR	6348270	CallExpression	strlen ( tmp_name )		6348146	1					
ANR	6348271	Callee	strlen		6348146	0					
ANR	6348272	Identifier	strlen		6348146	0					
ANR	6348273	ArgumentList	tmp_name		6348146	1					
ANR	6348274	Argument	tmp_name		6348146	0					
ANR	6348275	Identifier	tmp_name		6348146	0					
ANR	6348276	ExpressionStatement	* name = ( char * ) malloc ( name_len + 1 )	1495:1:34936:34974	6348146	10	True				
ANR	6348277	AssignmentExpression	* name = ( char * ) malloc ( name_len + 1 )		6348146	0		=			
ANR	6348278	UnaryOperationExpression	* name		6348146	0					
ANR	6348279	UnaryOperator	*		6348146	0					
ANR	6348280	Identifier	name		6348146	1					
ANR	6348281	CastExpression	( char * ) malloc ( name_len + 1 )		6348146	1					
ANR	6348282	CastTarget	char *		6348146	0					
ANR	6348283	CallExpression	malloc ( name_len + 1 )		6348146	1					
ANR	6348284	Callee	malloc		6348146	0					
ANR	6348285	Identifier	malloc		6348146	0					
ANR	6348286	ArgumentList	name_len + 1		6348146	1					
ANR	6348287	Argument	name_len + 1		6348146	0					
ANR	6348288	AdditiveExpression	name_len + 1		6348146	0		+			
ANR	6348289	Identifier	name_len		6348146	0					
ANR	6348290	PrimaryExpression	1		6348146	1					
ANR	6348291	IfStatement	if ( ! ( * name ) )		6348146	11					
ANR	6348292	Condition	! ( * name )	1496:5:34981:34988	6348146	0	True				
ANR	6348293	UnaryOperationExpression	! ( * name )		6348146	0					
ANR	6348294	UnaryOperator	!		6348146	0					
ANR	6348295	UnaryOperationExpression	* name		6348146	1					
ANR	6348296	UnaryOperator	*		6348146	0					
ANR	6348297	Identifier	name		6348146	1					
ANR	6348298	CompoundStatement		23:15:474:474	6348146	1					
ANR	6348299	IfStatement	if ( need_to_free )		6348146	0					
ANR	6348300	Condition	need_to_free	1497:6:34999:35010	6348146	0	True				
ANR	6348301	Identifier	need_to_free		6348146	0					
ANR	6348302	CompoundStatement		24:20:496:496	6348146	1					
ANR	6348303	ExpressionStatement	free ( tmp_name )	1498:3:35018:35033	6348146	0	True				
ANR	6348304	CallExpression	free ( tmp_name )		6348146	0					
ANR	6348305	Callee	free		6348146	0					
ANR	6348306	Identifier	free		6348146	0					
ANR	6348307	ArgumentList	tmp_name		6348146	1					
ANR	6348308	Argument	tmp_name		6348146	0					
ANR	6348309	Identifier	tmp_name		6348146	0					
ANR	6348310	ReturnStatement	return ;	1500:2:35041:35047	6348146	1	True				
ANR	6348311	ExpressionStatement	"strcpy ( * name , ""onemethod "" )"	1503:1:35080:35108	6348146	12	True				
ANR	6348312	CallExpression	"strcpy ( * name , ""onemethod "" )"		6348146	0					
ANR	6348313	Callee	strcpy		6348146	0					
ANR	6348314	Identifier	strcpy		6348146	0					
ANR	6348315	ArgumentList	* name		6348146	1					
ANR	6348316	Argument	* name		6348146	0					
ANR	6348317	UnaryOperationExpression	* name		6348146	0					
ANR	6348318	UnaryOperator	*		6348146	0					
ANR	6348319	Identifier	name		6348146	1					
ANR	6348320	Argument	"""onemethod """		6348146	1					
ANR	6348321	PrimaryExpression	"""onemethod """		6348146	0					
ANR	6348322	IfStatement	if ( tmp_name )		6348146	13					
ANR	6348323	Condition	tmp_name	1504:5:35115:35122	6348146	0	True				
ANR	6348324	Identifier	tmp_name		6348146	0					
ANR	6348325	CompoundStatement		31:15:608:608	6348146	1					
ANR	6348326	ExpressionStatement	"strcat ( * name , tmp_name )"	1505:2:35129:35153	6348146	0	True				
ANR	6348327	CallExpression	"strcat ( * name , tmp_name )"		6348146	0					
ANR	6348328	Callee	strcat		6348146	0					
ANR	6348329	Identifier	strcat		6348146	0					
ANR	6348330	ArgumentList	* name		6348146	1					
ANR	6348331	Argument	* name		6348146	0					
ANR	6348332	UnaryOperationExpression	* name		6348146	0					
ANR	6348333	UnaryOperator	*		6348146	0					
ANR	6348334	Identifier	name		6348146	1					
ANR	6348335	Argument	tmp_name		6348146	1					
ANR	6348336	Identifier	tmp_name		6348146	0					
ANR	6348337	IfStatement	if ( need_to_free )		6348146	14					
ANR	6348338	Condition	need_to_free	1508:5:35164:35175	6348146	0	True				
ANR	6348339	Identifier	need_to_free		6348146	0					
ANR	6348340	CompoundStatement		35:19:661:661	6348146	1					
ANR	6348341	ExpressionStatement	free ( tmp_name )	1509:2:35182:35197	6348146	0	True				
ANR	6348342	CallExpression	free ( tmp_name )		6348146	0					
ANR	6348343	Callee	free		6348146	0					
ANR	6348344	Identifier	free		6348146	0					
ANR	6348345	ArgumentList	tmp_name		6348146	1					
ANR	6348346	Argument	tmp_name		6348146	0					
ANR	6348347	Identifier	tmp_name		6348146	0					
ANR	6348348	ReturnType	static void		6348146	1					
ANR	6348349	Identifier	get_onemethod_print_type		6348146	2					
ANR	6348350	ParameterList	"void * type , char * * name"		6348146	3					
ANR	6348351	Parameter	void * type	1474:37:34491:34500	6348146	0	True				
ANR	6348352	ParameterType	void *		6348146	0					
ANR	6348353	Identifier	type		6348146	1					
ANR	6348354	Parameter	char * * name	1474:49:34503:34513	6348146	1	True				
ANR	6348355	ParameterType	char * *		6348146	0					
ANR	6348356	Identifier	name		6348146	1					
ANR	6348357	CFGEntryNode	ENTRY		6348146		True				
ANR	6348358	CFGExitNode	EXIT		6348146		True				
ANR	6348359	Symbol	* name		6348146						
ANR	6348360	Symbol	malloc		6348146						
ANR	6348361	Symbol	& t -> type_data		6348146						
ANR	6348362	Symbol	type		6348146						
ANR	6348363	Symbol	tmp_name		6348146						
ANR	6348364	Symbol	strlen		6348146						
ANR	6348365	Symbol	base_type		6348146						
ANR	6348366	Symbol	t		6348146						
ANR	6348367	Symbol	ti		6348146						
ANR	6348368	Symbol	name		6348146						
ANR	6348369	Symbol	* ti		6348146						
ANR	6348370	Symbol	& t		6348146						
ANR	6348371	Symbol	name_len		6348146						
ANR	6348372	Symbol	need_to_free		6348146						
ANR	6348373	Symbol	ti -> get_index		6348146						
ANR	6348374	Symbol	& tmp_name		6348146						
ANR	6348375	Function	init_scstring	1514:0:35285:35402							
ANR	6348376	FunctionDef	"init_scstring (SCString * cstr , unsigned int size , char * name)"		6348375	0					
ANR	6348377	CompoundStatement		1514:66:35351:35402	6348375	0					
ANR	6348378	ExpressionStatement	cstr -> size = size	1515:1:35354:35371	6348375	0	True				
ANR	6348379	AssignmentExpression	cstr -> size = size		6348375	0		=			
ANR	6348380	PtrMemberAccess	cstr -> size		6348375	0					
ANR	6348381	Identifier	cstr		6348375	0					
ANR	6348382	Identifier	size		6348375	1					
ANR	6348383	Identifier	size		6348375	1					
ANR	6348384	ExpressionStatement	cstr -> name = strdup ( name )	1516:1:35374:35400	6348375	1	True				
ANR	6348385	AssignmentExpression	cstr -> name = strdup ( name )		6348375	0		=			
ANR	6348386	PtrMemberAccess	cstr -> name		6348375	0					
ANR	6348387	Identifier	cstr		6348375	0					
ANR	6348388	Identifier	name		6348375	1					
ANR	6348389	CallExpression	strdup ( name )		6348375	1					
ANR	6348390	Callee	strdup		6348375	0					
ANR	6348391	Identifier	strdup		6348375	0					
ANR	6348392	ArgumentList	name		6348375	1					
ANR	6348393	Argument	name		6348375	0					
ANR	6348394	Identifier	name		6348375	0					
ANR	6348395	ReturnType	void		6348375	1					
ANR	6348396	Identifier	init_scstring		6348375	2					
ANR	6348397	ParameterList	"SCString * cstr , unsigned int size , char * name"		6348375	3					
ANR	6348398	Parameter	SCString * cstr	1514:19:35304:35317	6348375	0	True				
ANR	6348399	ParameterType	SCString *		6348375	0					
ANR	6348400	Identifier	cstr		6348375	1					
ANR	6348401	Parameter	unsigned int size	1514:35:35320:35336	6348375	1	True				
ANR	6348402	ParameterType	unsigned int		6348375	0					
ANR	6348403	Identifier	size		6348375	1					
ANR	6348404	Parameter	char * name	1514:54:35339:35348	6348375	2	True				
ANR	6348405	ParameterType	char *		6348375	0					
ANR	6348406	Identifier	name		6348375	1					
ANR	6348407	CFGEntryNode	ENTRY		6348375		True				
ANR	6348408	CFGExitNode	EXIT		6348375		True				
ANR	6348409	Symbol	cstr		6348375						
ANR	6348410	Symbol	size		6348375						
ANR	6348411	Symbol	name		6348375						
ANR	6348412	Symbol	cstr -> name		6348375						
ANR	6348413	Symbol	* cstr		6348375						
ANR	6348414	Symbol	strdup		6348375						
ANR	6348415	Symbol	cstr -> size		6348375						
ANR	6348416	Function	deinit_scstring	1520:0:35485:35544							
ANR	6348417	FunctionDef	deinit_scstring (SCString * cstr)		6348416	0					
ANR	6348418	CompoundStatement		1520:37:35522:35544	6348416	0					
ANR	6348419	ExpressionStatement	free ( cstr -> name )	1521:1:35525:35542	6348416	0	True				
ANR	6348420	CallExpression	free ( cstr -> name )		6348416	0					
ANR	6348421	Callee	free		6348416	0					
ANR	6348422	Identifier	free		6348416	0					
ANR	6348423	ArgumentList	cstr -> name		6348416	1					
ANR	6348424	Argument	cstr -> name		6348416	0					
ANR	6348425	PtrMemberAccess	cstr -> name		6348416	0					
ANR	6348426	Identifier	cstr		6348416	0					
ANR	6348427	Identifier	name		6348416	1					
ANR	6348428	ReturnType	void		6348416	1					
ANR	6348429	Identifier	deinit_scstring		6348416	2					
ANR	6348430	ParameterList	SCString * cstr		6348416	3					
ANR	6348431	Parameter	SCString * cstr	1520:21:35506:35519	6348416	0	True				
ANR	6348432	ParameterType	SCString *		6348416	0					
ANR	6348433	Identifier	cstr		6348416	1					
ANR	6348434	CFGEntryNode	ENTRY		6348416		True				
ANR	6348435	CFGExitNode	EXIT		6348416		True				
ANR	6348436	Symbol	cstr		6348416						
ANR	6348437	Symbol	cstr -> name		6348416						
ANR	6348438	Symbol	* cstr		6348416						
ANR	6348439	Function	parse_sctring	1525:0:35627:36024							
ANR	6348440	FunctionDef	"parse_sctring (SCString * sctr , unsigned char * leaf_data , unsigned int * read_bytes , unsigned int len)"		6348439	0					
ANR	6348441	CompoundStatement		1525:104:35731:36024	6348439	0					
ANR	6348442	IdentifierDeclStatement	unsigned int c = 0 ;	1526:1:35734:35752	6348439	0	True				
ANR	6348443	IdentifierDecl	c = 0		6348439	0					
ANR	6348444	IdentifierDeclType	unsigned int		6348439	0					
ANR	6348445	Identifier	c		6348439	1					
ANR	6348446	AssignmentExpression	c = 0		6348439	2		=			
ANR	6348447	Identifier	c		6348439	0					
ANR	6348448	PrimaryExpression	0		6348439	1					
ANR	6348449	ExpressionStatement	sctr -> name = NULL	1527:1:35755:35772	6348439	1	True				
ANR	6348450	AssignmentExpression	sctr -> name = NULL		6348439	0		=			
ANR	6348451	PtrMemberAccess	sctr -> name		6348439	0					
ANR	6348452	Identifier	sctr		6348439	0					
ANR	6348453	Identifier	name		6348439	1					
ANR	6348454	Identifier	NULL		6348439	1					
ANR	6348455	ExpressionStatement	sctr -> size = 0	1528:1:35775:35789	6348439	2	True				
ANR	6348456	AssignmentExpression	sctr -> size = 0		6348439	0		=			
ANR	6348457	PtrMemberAccess	sctr -> size		6348439	0					
ANR	6348458	Identifier	sctr		6348439	0					
ANR	6348459	Identifier	size		6348439	1					
ANR	6348460	PrimaryExpression	0		6348439	1					
ANR	6348461	WhileStatement	while ( * leaf_data )		6348439	3					
ANR	6348462	Condition	* leaf_data	1529:8:35799:35808	6348439	0	True				
ANR	6348463	UnaryOperationExpression	* leaf_data		6348439	0					
ANR	6348464	UnaryOperator	*		6348439	0					
ANR	6348465	Identifier	leaf_data		6348439	1					
ANR	6348466	CompoundStatement		5:20:79:79	6348439	1					
ANR	6348467	ExpressionStatement	"CAN_READ ( ( * read_bytes + c ) , 1 , len )"	1530:2:35815:35850	6348439	0	True				
ANR	6348468	CallExpression	"CAN_READ ( ( * read_bytes + c ) , 1 , len )"		6348439	0					
ANR	6348469	Callee	CAN_READ		6348439	0					
ANR	6348470	Identifier	CAN_READ		6348439	0					
ANR	6348471	ArgumentList	* read_bytes + c		6348439	1					
ANR	6348472	Argument	* read_bytes + c		6348439	0					
ANR	6348473	AdditiveExpression	* read_bytes + c		6348439	0		+			
ANR	6348474	UnaryOperationExpression	* read_bytes		6348439	0					
ANR	6348475	UnaryOperator	*		6348439	0					
ANR	6348476	Identifier	read_bytes		6348439	1					
ANR	6348477	Identifier	c		6348439	1					
ANR	6348478	Argument	1		6348439	1					
ANR	6348479	PrimaryExpression	1		6348439	0					
ANR	6348480	Argument	len		6348439	2					
ANR	6348481	Identifier	len		6348439	0					
ANR	6348482	ExpressionStatement	c ++	1531:2:35854:35857	6348439	1	True				
ANR	6348483	PostIncDecOperationExpression	c ++		6348439	0					
ANR	6348484	Identifier	c		6348439	0					
ANR	6348485	IncDec	++		6348439	1					
ANR	6348486	ExpressionStatement	leaf_data ++	1532:2:35861:35872	6348439	2	True				
ANR	6348487	PostIncDecOperationExpression	leaf_data ++		6348439	0					
ANR	6348488	Identifier	leaf_data		6348439	0					
ANR	6348489	IncDec	++		6348439	1					
ANR	6348490	ExpressionStatement	"CAN_READ ( * read_bytes , 1 , len )"	1534:1:35878:35907	6348439	4	True				
ANR	6348491	CallExpression	"CAN_READ ( * read_bytes , 1 , len )"		6348439	0					
ANR	6348492	Callee	CAN_READ		6348439	0					
ANR	6348493	Identifier	CAN_READ		6348439	0					
ANR	6348494	ArgumentList	* read_bytes		6348439	1					
ANR	6348495	Argument	* read_bytes		6348439	0					
ANR	6348496	UnaryOperationExpression	* read_bytes		6348439	0					
ANR	6348497	UnaryOperator	*		6348439	0					
ANR	6348498	Identifier	read_bytes		6348439	1					
ANR	6348499	Argument	1		6348439	1					
ANR	6348500	PrimaryExpression	1		6348439	0					
ANR	6348501	Argument	len		6348439	2					
ANR	6348502	Identifier	len		6348439	0					
ANR	6348503	ExpressionStatement	leaf_data += 1	1535:1:35910:35924	6348439	5	True				
ANR	6348504	AssignmentExpression	leaf_data += 1		6348439	0		+=			
ANR	6348505	Identifier	leaf_data		6348439	0					
ANR	6348506	PrimaryExpression	1		6348439	1					
ANR	6348507	ExpressionStatement	( * read_bytes ) += ( c + 1 )	1536:1:35927:35951	6348439	6	True				
ANR	6348508	AssignmentExpression	( * read_bytes ) += ( c + 1 )		6348439	0		+=			
ANR	6348509	UnaryOperationExpression	* read_bytes		6348439	0					
ANR	6348510	UnaryOperator	*		6348439	0					
ANR	6348511	Identifier	read_bytes		6348439	1					
ANR	6348512	AdditiveExpression	c + 1		6348439	1		+			
ANR	6348513	Identifier	c		6348439	0					
ANR	6348514	PrimaryExpression	1		6348439	1					
ANR	6348515	ExpressionStatement	"init_scstring ( sctr , c + 1 , ( char * ) leaf_data - ( c + 1 ) )"	1538:1:35955:36011	6348439	7	True				
ANR	6348516	CallExpression	"init_scstring ( sctr , c + 1 , ( char * ) leaf_data - ( c + 1 ) )"		6348439	0					
ANR	6348517	Callee	init_scstring		6348439	0					
ANR	6348518	Identifier	init_scstring		6348439	0					
ANR	6348519	ArgumentList	sctr		6348439	1					
ANR	6348520	Argument	sctr		6348439	0					
ANR	6348521	Identifier	sctr		6348439	0					
ANR	6348522	Argument	c + 1		6348439	1					
ANR	6348523	AdditiveExpression	c + 1		6348439	0		+			
ANR	6348524	Identifier	c		6348439	0					
ANR	6348525	PrimaryExpression	1		6348439	1					
ANR	6348526	Argument	( char * ) leaf_data - ( c + 1 )		6348439	2					
ANR	6348527	AdditiveExpression	( char * ) leaf_data - ( c + 1 )		6348439	0		-			
ANR	6348528	CastExpression	( char * ) leaf_data		6348439	0					
ANR	6348529	CastTarget	char *		6348439	0					
ANR	6348530	Identifier	leaf_data		6348439	1					
ANR	6348531	AdditiveExpression	c + 1		6348439	1		+			
ANR	6348532	Identifier	c		6348439	0					
ANR	6348533	PrimaryExpression	1		6348439	1					
ANR	6348534	ReturnStatement	return 1 ;	1539:1:36014:36022	6348439	8	True				
ANR	6348535	PrimaryExpression	1		6348439	0					
ANR	6348536	ReturnType	int		6348439	1					
ANR	6348537	Identifier	parse_sctring		6348439	2					
ANR	6348538	ParameterList	"SCString * sctr , unsigned char * leaf_data , unsigned int * read_bytes , unsigned int len"		6348439	3					
ANR	6348539	Parameter	SCString * sctr	1525:18:35645:35658	6348439	0	True				
ANR	6348540	ParameterType	SCString *		6348439	0					
ANR	6348541	Identifier	sctr		6348439	1					
ANR	6348542	Parameter	unsigned char * leaf_data	1525:34:35661:35684	6348439	1	True				
ANR	6348543	ParameterType	unsigned char *		6348439	0					
ANR	6348544	Identifier	leaf_data		6348439	1					
ANR	6348545	Parameter	unsigned int * read_bytes	1525:60:35687:35710	6348439	2	True				
ANR	6348546	ParameterType	unsigned int *		6348439	0					
ANR	6348547	Identifier	read_bytes		6348439	1					
ANR	6348548	Parameter	unsigned int len	1525:86:35713:35728	6348439	3	True				
ANR	6348549	ParameterType	unsigned int		6348439	0					
ANR	6348550	Identifier	len		6348439	1					
ANR	6348551	CFGEntryNode	ENTRY		6348439		True				
ANR	6348552	CFGExitNode	EXIT		6348439		True				
ANR	6348553	Symbol	* sctr		6348439						
ANR	6348554	Symbol	leaf_data		6348439						
ANR	6348555	Symbol	* read_bytes		6348439						
ANR	6348556	Symbol	c		6348439						
ANR	6348557	Symbol	NULL		6348439						
ANR	6348558	Symbol	len		6348439						
ANR	6348559	Symbol	sctr -> name		6348439						
ANR	6348560	Symbol	* leaf_data		6348439						
ANR	6348561	Symbol	sctr		6348439						
ANR	6348562	Symbol	sctr -> size		6348439						
ANR	6348563	Symbol	read_bytes		6348439						
ANR	6348564	Function	parse_sval	1543:0:36107:39504							
ANR	6348565	FunctionDef	"parse_sval (SVal * val , unsigned char * leaf_data , unsigned int * read_bytes , unsigned int len)"		6348564	0					
ANR	6348566	CompoundStatement		1544:0:36210:39504	6348564	0					
ANR	6348567	ExpressionStatement	val -> name_or_val = 0	1545:1:36213:36233	6348564	0	True				
ANR	6348568	AssignmentExpression	val -> name_or_val = 0		6348564	0		=			
ANR	6348569	PtrMemberAccess	val -> name_or_val		6348564	0					
ANR	6348570	Identifier	val		6348564	0					
ANR	6348571	Identifier	name_or_val		6348564	1					
ANR	6348572	PrimaryExpression	0		6348564	1					
ANR	6348573	ExpressionStatement	"READ2 ( * read_bytes , len , val -> value_or_type , leaf_data , ut16 )"	1547:1:36237:36297	6348564	1	True				
ANR	6348574	CallExpression	"READ2 ( * read_bytes , len , val -> value_or_type , leaf_data , ut16 )"		6348564	0					
ANR	6348575	Callee	READ2		6348564	0					
ANR	6348576	Identifier	READ2		6348564	0					
ANR	6348577	ArgumentList	* read_bytes		6348564	1					
ANR	6348578	Argument	* read_bytes		6348564	0					
ANR	6348579	UnaryOperationExpression	* read_bytes		6348564	0					
ANR	6348580	UnaryOperator	*		6348564	0					
ANR	6348581	Identifier	read_bytes		6348564	1					
ANR	6348582	Argument	len		6348564	1					
ANR	6348583	Identifier	len		6348564	0					
ANR	6348584	Argument	val -> value_or_type		6348564	2					
ANR	6348585	PtrMemberAccess	val -> value_or_type		6348564	0					
ANR	6348586	Identifier	val		6348564	0					
ANR	6348587	Identifier	value_or_type		6348564	1					
ANR	6348588	Argument	leaf_data		6348564	3					
ANR	6348589	Identifier	leaf_data		6348564	0					
ANR	6348590	Argument	ut16		6348564	4					
ANR	6348591	Identifier	ut16		6348564	0					
ANR	6348592	IfStatement	if ( val -> value_or_type < eLF_CHAR )		6348564	2					
ANR	6348593	Condition	val -> value_or_type < eLF_CHAR	1549:5:36305:36333	6348564	0	True				
ANR	6348594	RelationalExpression	val -> value_or_type < eLF_CHAR		6348564	0		<			
ANR	6348595	PtrMemberAccess	val -> value_or_type		6348564	0					
ANR	6348596	Identifier	val		6348564	0					
ANR	6348597	Identifier	value_or_type		6348564	1					
ANR	6348598	Identifier	eLF_CHAR		6348564	1					
ANR	6348599	CompoundStatement		7:2:129:185	6348564	1					
ANR	6348600	IdentifierDeclStatement	SCString * sctr = ( SCString * ) malloc ( sizeof ( SCString ) ) ;	1550:2:36340:36396	6348564	0	True				
ANR	6348601	IdentifierDecl	* sctr = ( SCString * ) malloc ( sizeof ( SCString ) )		6348564	0					
ANR	6348602	IdentifierDeclType	SCString *		6348564	0					
ANR	6348603	Identifier	sctr		6348564	1					
ANR	6348604	AssignmentExpression	* sctr = ( SCString * ) malloc ( sizeof ( SCString ) )		6348564	2		=			
ANR	6348605	Identifier	sctr		6348564	0					
ANR	6348606	CastExpression	( SCString * ) malloc ( sizeof ( SCString ) )		6348564	1					
ANR	6348607	CastTarget	SCString *		6348564	0					
ANR	6348608	CallExpression	malloc ( sizeof ( SCString ) )		6348564	1					
ANR	6348609	Callee	malloc		6348564	0					
ANR	6348610	Identifier	malloc		6348564	0					
ANR	6348611	ArgumentList	sizeof ( SCString )		6348564	1					
ANR	6348612	Argument	sizeof ( SCString )		6348564	0					
ANR	6348613	SizeofExpression	sizeof ( SCString )		6348564	0					
ANR	6348614	Sizeof	sizeof		6348564	0					
ANR	6348615	SizeofOperand	SCString		6348564	1					
ANR	6348616	IfStatement	if ( ! sctr )		6348564	1					
ANR	6348617	Condition	! sctr	1551:6:36404:36408	6348564	0	True				
ANR	6348618	UnaryOperationExpression	! sctr		6348564	0					
ANR	6348619	UnaryOperator	!		6348564	0					
ANR	6348620	Identifier	sctr		6348564	1					
ANR	6348621	CompoundStatement		8:13:200:200	6348564	1					
ANR	6348622	ReturnStatement	return 0 ;	1552:3:36416:36424	6348564	0	True				
ANR	6348623	PrimaryExpression	0		6348564	0					
ANR	6348624	ExpressionStatement	"parse_sctring ( sctr , leaf_data , read_bytes , len )"	1554:2:36432:36480	6348564	2	True				
ANR	6348625	CallExpression	"parse_sctring ( sctr , leaf_data , read_bytes , len )"		6348564	0					
ANR	6348626	Callee	parse_sctring		6348564	0					
ANR	6348627	Identifier	parse_sctring		6348564	0					
ANR	6348628	ArgumentList	sctr		6348564	1					
ANR	6348629	Argument	sctr		6348564	0					
ANR	6348630	Identifier	sctr		6348564	0					
ANR	6348631	Argument	leaf_data		6348564	1					
ANR	6348632	Identifier	leaf_data		6348564	0					
ANR	6348633	Argument	read_bytes		6348564	2					
ANR	6348634	Identifier	read_bytes		6348564	0					
ANR	6348635	Argument	len		6348564	3					
ANR	6348636	Identifier	len		6348564	0					
ANR	6348637	ExpressionStatement	val -> name_or_val = sctr	1555:2:36484:36507	6348564	3	True				
ANR	6348638	AssignmentExpression	val -> name_or_val = sctr		6348564	0		=			
ANR	6348639	PtrMemberAccess	val -> name_or_val		6348564	0					
ANR	6348640	Identifier	val		6348564	0					
ANR	6348641	Identifier	name_or_val		6348564	1					
ANR	6348642	Identifier	sctr		6348564	1					
ANR	6348643	ElseStatement	else		6348564	0					
ANR	6348644	CompoundStatement		13:8:306:306	6348564	0					
ANR	6348645	SwitchStatement	switch ( val -> value_or_type )		6348564	0					
ANR	6348646	Condition	val -> value_or_type	1557:10:36529:36546	6348564	0	True				
ANR	6348647	PtrMemberAccess	val -> value_or_type		6348564	0					
ANR	6348648	Identifier	val		6348564	0					
ANR	6348649	Identifier	value_or_type		6348564	1					
ANR	6348650	CompoundStatement		14:30:338:338	6348564	1					
ANR	6348651	Label	case eLF_UQUADWORD :	1558:2:36553:36571	6348564	0	True				
ANR	6348652	Identifier	eLF_UQUADWORD		6348564	0					
ANR	6348653	CompoundStatement		17:6:372:399	6348564	1					
ANR	6348654	IdentifierDeclStatement	SVal_LF_UQUADWORD lf_uqword ;	1560:6:36583:36610	6348564	0	True				
ANR	6348655	IdentifierDecl	lf_uqword		6348564	0					
ANR	6348656	IdentifierDeclType	SVal_LF_UQUADWORD		6348564	0					
ANR	6348657	Identifier	lf_uqword		6348564	1					
ANR	6348658	ExpressionStatement	"READ8 ( * read_bytes , len , lf_uqword . value , leaf_data , st64 )"	1561:6:36618:36675	6348564	1	True				
ANR	6348659	CallExpression	"READ8 ( * read_bytes , len , lf_uqword . value , leaf_data , st64 )"		6348564	0					
ANR	6348660	Callee	READ8		6348564	0					
ANR	6348661	Identifier	READ8		6348564	0					
ANR	6348662	ArgumentList	* read_bytes		6348564	1					
ANR	6348663	Argument	* read_bytes		6348564	0					
ANR	6348664	UnaryOperationExpression	* read_bytes		6348564	0					
ANR	6348665	UnaryOperator	*		6348564	0					
ANR	6348666	Identifier	read_bytes		6348564	1					
ANR	6348667	Argument	len		6348564	1					
ANR	6348668	Identifier	len		6348564	0					
ANR	6348669	Argument	lf_uqword . value		6348564	2					
ANR	6348670	MemberAccess	lf_uqword . value		6348564	0					
ANR	6348671	Identifier	lf_uqword		6348564	0					
ANR	6348672	Identifier	value		6348564	1					
ANR	6348673	Argument	leaf_data		6348564	3					
ANR	6348674	Identifier	leaf_data		6348564	0					
ANR	6348675	Argument	st64		6348564	4					
ANR	6348676	Identifier	st64		6348564	0					
ANR	6348677	ExpressionStatement	"parse_sctring ( & lf_uqword . name , leaf_data , read_bytes , len )"	1562:6:36683:36741	6348564	2	True				
ANR	6348678	CallExpression	"parse_sctring ( & lf_uqword . name , leaf_data , read_bytes , len )"		6348564	0					
ANR	6348679	Callee	parse_sctring		6348564	0					
ANR	6348680	Identifier	parse_sctring		6348564	0					
ANR	6348681	ArgumentList	& lf_uqword . name		6348564	1					
ANR	6348682	Argument	& lf_uqword . name		6348564	0					
ANR	6348683	UnaryOperationExpression	& lf_uqword . name		6348564	0					
ANR	6348684	UnaryOperator	&		6348564	0					
ANR	6348685	MemberAccess	lf_uqword . name		6348564	1					
ANR	6348686	Identifier	lf_uqword		6348564	0					
ANR	6348687	Identifier	name		6348564	1					
ANR	6348688	Argument	leaf_data		6348564	1					
ANR	6348689	Identifier	leaf_data		6348564	0					
ANR	6348690	Argument	read_bytes		6348564	2					
ANR	6348691	Identifier	read_bytes		6348564	0					
ANR	6348692	Argument	len		6348564	3					
ANR	6348693	Identifier	len		6348564	0					
ANR	6348694	ExpressionStatement	val -> name_or_val = malloc ( sizeof ( SVal_LF_UQUADWORD ) )	1563:6:36749:36801	6348564	3	True				
ANR	6348695	AssignmentExpression	val -> name_or_val = malloc ( sizeof ( SVal_LF_UQUADWORD ) )		6348564	0		=			
ANR	6348696	PtrMemberAccess	val -> name_or_val		6348564	0					
ANR	6348697	Identifier	val		6348564	0					
ANR	6348698	Identifier	name_or_val		6348564	1					
ANR	6348699	CallExpression	malloc ( sizeof ( SVal_LF_UQUADWORD ) )		6348564	1					
ANR	6348700	Callee	malloc		6348564	0					
ANR	6348701	Identifier	malloc		6348564	0					
ANR	6348702	ArgumentList	sizeof ( SVal_LF_UQUADWORD )		6348564	1					
ANR	6348703	Argument	sizeof ( SVal_LF_UQUADWORD )		6348564	0					
ANR	6348704	SizeofExpression	sizeof ( SVal_LF_UQUADWORD )		6348564	0					
ANR	6348705	Sizeof	sizeof		6348564	0					
ANR	6348706	SizeofOperand	SVal_LF_UQUADWORD		6348564	1					
ANR	6348707	IfStatement	if ( ! val -> name_or_val )		6348564	4					
ANR	6348708	Condition	! val -> name_or_val	1564:10:36813:36829	6348564	0	True				
ANR	6348709	UnaryOperationExpression	! val -> name_or_val		6348564	0					
ANR	6348710	UnaryOperator	!		6348564	0					
ANR	6348711	PtrMemberAccess	val -> name_or_val		6348564	1					
ANR	6348712	Identifier	val		6348564	0					
ANR	6348713	Identifier	name_or_val		6348564	1					
ANR	6348714	CompoundStatement		21:29:621:621	6348564	1					
ANR	6348715	BreakStatement	break ;	1565:7:36841:36846	6348564	0	True				
ANR	6348716	ExpressionStatement	"memcpy ( val -> name_or_val , & lf_uqword , sizeof ( SVal_LF_UQUADWORD ) )"	1567:6:36862:36925	6348564	5	True				
ANR	6348717	CallExpression	"memcpy ( val -> name_or_val , & lf_uqword , sizeof ( SVal_LF_UQUADWORD ) )"		6348564	0					
ANR	6348718	Callee	memcpy		6348564	0					
ANR	6348719	Identifier	memcpy		6348564	0					
ANR	6348720	ArgumentList	val -> name_or_val		6348564	1					
ANR	6348721	Argument	val -> name_or_val		6348564	0					
ANR	6348722	PtrMemberAccess	val -> name_or_val		6348564	0					
ANR	6348723	Identifier	val		6348564	0					
ANR	6348724	Identifier	name_or_val		6348564	1					
ANR	6348725	Argument	& lf_uqword		6348564	1					
ANR	6348726	UnaryOperationExpression	& lf_uqword		6348564	0					
ANR	6348727	UnaryOperator	&		6348564	0					
ANR	6348728	Identifier	lf_uqword		6348564	1					
ANR	6348729	Argument	sizeof ( SVal_LF_UQUADWORD )		6348564	2					
ANR	6348730	SizeofExpression	sizeof ( SVal_LF_UQUADWORD )		6348564	0					
ANR	6348731	Sizeof	sizeof		6348564	0					
ANR	6348732	SizeofOperand	SVal_LF_UQUADWORD		6348564	1					
ANR	6348733	BreakStatement	break ;	1568:6:36933:36938	6348564	6	True				
ANR	6348734	Label	case eLF_QUADWORD :	1570:2:36946:36963	6348564	2	True				
ANR	6348735	Identifier	eLF_QUADWORD		6348564	0					
ANR	6348736	CompoundStatement		29:3:761:786	6348564	3					
ANR	6348737	IdentifierDeclStatement	SVal_LF_QUADWORD lf_qword ;	1572:3:36972:36997	6348564	0	True				
ANR	6348738	IdentifierDecl	lf_qword		6348564	0					
ANR	6348739	IdentifierDeclType	SVal_LF_QUADWORD		6348564	0					
ANR	6348740	Identifier	lf_qword		6348564	1					
ANR	6348741	ExpressionStatement	"READ8 ( * read_bytes , len , lf_qword . value , leaf_data , st64 )"	1573:3:37002:37058	6348564	1	True				
ANR	6348742	CallExpression	"READ8 ( * read_bytes , len , lf_qword . value , leaf_data , st64 )"		6348564	0					
ANR	6348743	Callee	READ8		6348564	0					
ANR	6348744	Identifier	READ8		6348564	0					
ANR	6348745	ArgumentList	* read_bytes		6348564	1					
ANR	6348746	Argument	* read_bytes		6348564	0					
ANR	6348747	UnaryOperationExpression	* read_bytes		6348564	0					
ANR	6348748	UnaryOperator	*		6348564	0					
ANR	6348749	Identifier	read_bytes		6348564	1					
ANR	6348750	Argument	len		6348564	1					
ANR	6348751	Identifier	len		6348564	0					
ANR	6348752	Argument	lf_qword . value		6348564	2					
ANR	6348753	MemberAccess	lf_qword . value		6348564	0					
ANR	6348754	Identifier	lf_qword		6348564	0					
ANR	6348755	Identifier	value		6348564	1					
ANR	6348756	Argument	leaf_data		6348564	3					
ANR	6348757	Identifier	leaf_data		6348564	0					
ANR	6348758	Argument	st64		6348564	4					
ANR	6348759	Identifier	st64		6348564	0					
ANR	6348760	ExpressionStatement	"parse_sctring ( & lf_qword . name , leaf_data , read_bytes , len )"	1574:3:37063:37121	6348564	2	True				
ANR	6348761	CallExpression	"parse_sctring ( & lf_qword . name , leaf_data , read_bytes , len )"		6348564	0					
ANR	6348762	Callee	parse_sctring		6348564	0					
ANR	6348763	Identifier	parse_sctring		6348564	0					
ANR	6348764	ArgumentList	& lf_qword . name		6348564	1					
ANR	6348765	Argument	& lf_qword . name		6348564	0					
ANR	6348766	UnaryOperationExpression	& lf_qword . name		6348564	0					
ANR	6348767	UnaryOperator	&		6348564	0					
ANR	6348768	MemberAccess	lf_qword . name		6348564	1					
ANR	6348769	Identifier	lf_qword		6348564	0					
ANR	6348770	Identifier	name		6348564	1					
ANR	6348771	Argument	leaf_data		6348564	1					
ANR	6348772	Identifier	leaf_data		6348564	0					
ANR	6348773	Argument	read_bytes		6348564	2					
ANR	6348774	Identifier	read_bytes		6348564	0					
ANR	6348775	Argument	len		6348564	3					
ANR	6348776	Identifier	len		6348564	0					
ANR	6348777	ExpressionStatement	val -> name_or_val = malloc ( sizeof ( SVal_LF_QUADWORD ) )	1575:3:37126:37179	6348564	3	True				
ANR	6348778	AssignmentExpression	val -> name_or_val = malloc ( sizeof ( SVal_LF_QUADWORD ) )		6348564	0		=			
ANR	6348779	PtrMemberAccess	val -> name_or_val		6348564	0					
ANR	6348780	Identifier	val		6348564	0					
ANR	6348781	Identifier	name_or_val		6348564	1					
ANR	6348782	CallExpression	malloc ( sizeof ( SVal_LF_QUADWORD ) )		6348564	1					
ANR	6348783	Callee	malloc		6348564	0					
ANR	6348784	Identifier	malloc		6348564	0					
ANR	6348785	ArgumentList	sizeof ( SVal_LF_QUADWORD )		6348564	1					
ANR	6348786	Argument	sizeof ( SVal_LF_QUADWORD )		6348564	0					
ANR	6348787	SizeofExpression	sizeof ( SVal_LF_QUADWORD )		6348564	0					
ANR	6348788	Sizeof	sizeof		6348564	0					
ANR	6348789	SizeofOperand	SVal_LF_QUADWORD		6348564	1					
ANR	6348790	IfStatement	if ( ! val -> name_or_val )		6348564	4					
ANR	6348791	Condition	! val -> name_or_val	1576:7:37188:37204	6348564	0	True				
ANR	6348792	UnaryOperationExpression	! val -> name_or_val		6348564	0					
ANR	6348793	UnaryOperator	!		6348564	0					
ANR	6348794	PtrMemberAccess	val -> name_or_val		6348564	1					
ANR	6348795	Identifier	val		6348564	0					
ANR	6348796	Identifier	name_or_val		6348564	1					
ANR	6348797	CompoundStatement		33:26:996:996	6348564	1					
ANR	6348798	BreakStatement	break ;	1577:4:37213:37218	6348564	0	True				
ANR	6348799	ExpressionStatement	"memcpy ( val -> name_or_val , & lf_qword , sizeof ( SVal_LF_QUADWORD ) )"	1579:3:37228:37291	6348564	5	True				
ANR	6348800	CallExpression	"memcpy ( val -> name_or_val , & lf_qword , sizeof ( SVal_LF_QUADWORD ) )"		6348564	0					
ANR	6348801	Callee	memcpy		6348564	0					
ANR	6348802	Identifier	memcpy		6348564	0					
ANR	6348803	ArgumentList	val -> name_or_val		6348564	1					
ANR	6348804	Argument	val -> name_or_val		6348564	0					
ANR	6348805	PtrMemberAccess	val -> name_or_val		6348564	0					
ANR	6348806	Identifier	val		6348564	0					
ANR	6348807	Identifier	name_or_val		6348564	1					
ANR	6348808	Argument	& lf_qword		6348564	1					
ANR	6348809	UnaryOperationExpression	& lf_qword		6348564	0					
ANR	6348810	UnaryOperator	&		6348564	0					
ANR	6348811	Identifier	lf_qword		6348564	1					
ANR	6348812	Argument	sizeof ( SVal_LF_QUADWORD )		6348564	2					
ANR	6348813	SizeofExpression	sizeof ( SVal_LF_QUADWORD )		6348564	0					
ANR	6348814	Sizeof	sizeof		6348564	0					
ANR	6348815	SizeofOperand	SVal_LF_QUADWORD		6348564	1					
ANR	6348816	BreakStatement	break ;	1580:3:37296:37301	6348564	6	True				
ANR	6348817	Label	case eLF_CHAR :	1582:2:37309:37322	6348564	4	True				
ANR	6348818	Identifier	eLF_CHAR		6348564	0					
ANR	6348819	CompoundStatement		41:3:1120:1140	6348564	5					
ANR	6348820	IdentifierDeclStatement	SVal_LF_CHAR lf_char ;	1584:3:37331:37351	6348564	0	True				
ANR	6348821	IdentifierDecl	lf_char		6348564	0					
ANR	6348822	IdentifierDeclType	SVal_LF_CHAR		6348564	0					
ANR	6348823	Identifier	lf_char		6348564	1					
ANR	6348824	ExpressionStatement	"READ1 ( * read_bytes , len , lf_char . value , leaf_data , st8 )"	1585:3:37356:37410	6348564	1	True				
ANR	6348825	CallExpression	"READ1 ( * read_bytes , len , lf_char . value , leaf_data , st8 )"		6348564	0					
ANR	6348826	Callee	READ1		6348564	0					
ANR	6348827	Identifier	READ1		6348564	0					
ANR	6348828	ArgumentList	* read_bytes		6348564	1					
ANR	6348829	Argument	* read_bytes		6348564	0					
ANR	6348830	UnaryOperationExpression	* read_bytes		6348564	0					
ANR	6348831	UnaryOperator	*		6348564	0					
ANR	6348832	Identifier	read_bytes		6348564	1					
ANR	6348833	Argument	len		6348564	1					
ANR	6348834	Identifier	len		6348564	0					
ANR	6348835	Argument	lf_char . value		6348564	2					
ANR	6348836	MemberAccess	lf_char . value		6348564	0					
ANR	6348837	Identifier	lf_char		6348564	0					
ANR	6348838	Identifier	value		6348564	1					
ANR	6348839	Argument	leaf_data		6348564	3					
ANR	6348840	Identifier	leaf_data		6348564	0					
ANR	6348841	Argument	st8		6348564	4					
ANR	6348842	Identifier	st8		6348564	0					
ANR	6348843	ExpressionStatement	"parse_sctring ( & lf_char . name , leaf_data , read_bytes , len )"	1586:3:37415:37472	6348564	2	True				
ANR	6348844	CallExpression	"parse_sctring ( & lf_char . name , leaf_data , read_bytes , len )"		6348564	0					
ANR	6348845	Callee	parse_sctring		6348564	0					
ANR	6348846	Identifier	parse_sctring		6348564	0					
ANR	6348847	ArgumentList	& lf_char . name		6348564	1					
ANR	6348848	Argument	& lf_char . name		6348564	0					
ANR	6348849	UnaryOperationExpression	& lf_char . name		6348564	0					
ANR	6348850	UnaryOperator	&		6348564	0					
ANR	6348851	MemberAccess	lf_char . name		6348564	1					
ANR	6348852	Identifier	lf_char		6348564	0					
ANR	6348853	Identifier	name		6348564	1					
ANR	6348854	Argument	leaf_data		6348564	1					
ANR	6348855	Identifier	leaf_data		6348564	0					
ANR	6348856	Argument	read_bytes		6348564	2					
ANR	6348857	Identifier	read_bytes		6348564	0					
ANR	6348858	Argument	len		6348564	3					
ANR	6348859	Identifier	len		6348564	0					
ANR	6348860	ExpressionStatement	val -> name_or_val = malloc ( sizeof ( SVal_LF_CHAR ) )	1587:3:37477:37526	6348564	3	True				
ANR	6348861	AssignmentExpression	val -> name_or_val = malloc ( sizeof ( SVal_LF_CHAR ) )		6348564	0		=			
ANR	6348862	PtrMemberAccess	val -> name_or_val		6348564	0					
ANR	6348863	Identifier	val		6348564	0					
ANR	6348864	Identifier	name_or_val		6348564	1					
ANR	6348865	CallExpression	malloc ( sizeof ( SVal_LF_CHAR ) )		6348564	1					
ANR	6348866	Callee	malloc		6348564	0					
ANR	6348867	Identifier	malloc		6348564	0					
ANR	6348868	ArgumentList	sizeof ( SVal_LF_CHAR )		6348564	1					
ANR	6348869	Argument	sizeof ( SVal_LF_CHAR )		6348564	0					
ANR	6348870	SizeofExpression	sizeof ( SVal_LF_CHAR )		6348564	0					
ANR	6348871	Sizeof	sizeof		6348564	0					
ANR	6348872	SizeofOperand	SVal_LF_CHAR		6348564	1					
ANR	6348873	IfStatement	if ( ! val -> name_or_val )		6348564	4					
ANR	6348874	Condition	! val -> name_or_val	1588:7:37535:37551	6348564	0	True				
ANR	6348875	UnaryOperationExpression	! val -> name_or_val		6348564	0					
ANR	6348876	UnaryOperator	!		6348564	0					
ANR	6348877	PtrMemberAccess	val -> name_or_val		6348564	1					
ANR	6348878	Identifier	val		6348564	0					
ANR	6348879	Identifier	name_or_val		6348564	1					
ANR	6348880	CompoundStatement		45:26:1343:1343	6348564	1					
ANR	6348881	BreakStatement	break ;	1589:4:37560:37565	6348564	0	True				
ANR	6348882	ExpressionStatement	"memcpy ( val -> name_or_val , & lf_char , sizeof ( SVal_LF_CHAR ) )"	1591:3:37575:37633	6348564	5	True				
ANR	6348883	CallExpression	"memcpy ( val -> name_or_val , & lf_char , sizeof ( SVal_LF_CHAR ) )"		6348564	0					
ANR	6348884	Callee	memcpy		6348564	0					
ANR	6348885	Identifier	memcpy		6348564	0					
ANR	6348886	ArgumentList	val -> name_or_val		6348564	1					
ANR	6348887	Argument	val -> name_or_val		6348564	0					
ANR	6348888	PtrMemberAccess	val -> name_or_val		6348564	0					
ANR	6348889	Identifier	val		6348564	0					
ANR	6348890	Identifier	name_or_val		6348564	1					
ANR	6348891	Argument	& lf_char		6348564	1					
ANR	6348892	UnaryOperationExpression	& lf_char		6348564	0					
ANR	6348893	UnaryOperator	&		6348564	0					
ANR	6348894	Identifier	lf_char		6348564	1					
ANR	6348895	Argument	sizeof ( SVal_LF_CHAR )		6348564	2					
ANR	6348896	SizeofExpression	sizeof ( SVal_LF_CHAR )		6348564	0					
ANR	6348897	Sizeof	sizeof		6348564	0					
ANR	6348898	SizeofOperand	SVal_LF_CHAR		6348564	1					
ANR	6348899	BreakStatement	break ;	1592:3:37638:37643	6348564	6	True				
ANR	6348900	Label	case eLF_LONG :	1594:2:37651:37664	6348564	6	True				
ANR	6348901	Identifier	eLF_LONG		6348564	0					
ANR	6348902	CompoundStatement		53:3:1462:1482	6348564	7					
ANR	6348903	IdentifierDeclStatement	SVal_LF_LONG lf_long ;	1596:3:37673:37693	6348564	0	True				
ANR	6348904	IdentifierDecl	lf_long		6348564	0					
ANR	6348905	IdentifierDeclType	SVal_LF_LONG		6348564	0					
ANR	6348906	Identifier	lf_long		6348564	1					
ANR	6348907	ExpressionStatement	lf_long . value = 0	1597:3:37698:37715	6348564	1	True				
ANR	6348908	AssignmentExpression	lf_long . value = 0		6348564	0		=			
ANR	6348909	MemberAccess	lf_long . value		6348564	0					
ANR	6348910	Identifier	lf_long		6348564	0					
ANR	6348911	Identifier	value		6348564	1					
ANR	6348912	PrimaryExpression	0		6348564	1					
ANR	6348913	ExpressionStatement	"READ4 ( * read_bytes , len , lf_long . value , leaf_data , st32 )"	1601:3:37849:37904	6348564	2	True				
ANR	6348914	CallExpression	"READ4 ( * read_bytes , len , lf_long . value , leaf_data , st32 )"		6348564	0					
ANR	6348915	Callee	READ4		6348564	0					
ANR	6348916	Identifier	READ4		6348564	0					
ANR	6348917	ArgumentList	* read_bytes		6348564	1					
ANR	6348918	Argument	* read_bytes		6348564	0					
ANR	6348919	UnaryOperationExpression	* read_bytes		6348564	0					
ANR	6348920	UnaryOperator	*		6348564	0					
ANR	6348921	Identifier	read_bytes		6348564	1					
ANR	6348922	Argument	len		6348564	1					
ANR	6348923	Identifier	len		6348564	0					
ANR	6348924	Argument	lf_long . value		6348564	2					
ANR	6348925	MemberAccess	lf_long . value		6348564	0					
ANR	6348926	Identifier	lf_long		6348564	0					
ANR	6348927	Identifier	value		6348564	1					
ANR	6348928	Argument	leaf_data		6348564	3					
ANR	6348929	Identifier	leaf_data		6348564	0					
ANR	6348930	Argument	st32		6348564	4					
ANR	6348931	Identifier	st32		6348564	0					
ANR	6348932	ExpressionStatement	"parse_sctring ( & lf_long . name , leaf_data , read_bytes , len )"	1602:3:37909:37966	6348564	3	True				
ANR	6348933	CallExpression	"parse_sctring ( & lf_long . name , leaf_data , read_bytes , len )"		6348564	0					
ANR	6348934	Callee	parse_sctring		6348564	0					
ANR	6348935	Identifier	parse_sctring		6348564	0					
ANR	6348936	ArgumentList	& lf_long . name		6348564	1					
ANR	6348937	Argument	& lf_long . name		6348564	0					
ANR	6348938	UnaryOperationExpression	& lf_long . name		6348564	0					
ANR	6348939	UnaryOperator	&		6348564	0					
ANR	6348940	MemberAccess	lf_long . name		6348564	1					
ANR	6348941	Identifier	lf_long		6348564	0					
ANR	6348942	Identifier	name		6348564	1					
ANR	6348943	Argument	leaf_data		6348564	1					
ANR	6348944	Identifier	leaf_data		6348564	0					
ANR	6348945	Argument	read_bytes		6348564	2					
ANR	6348946	Identifier	read_bytes		6348564	0					
ANR	6348947	Argument	len		6348564	3					
ANR	6348948	Identifier	len		6348564	0					
ANR	6348949	ExpressionStatement	val -> name_or_val = malloc ( sizeof ( SVal_LF_LONG ) )	1603:3:37971:38020	6348564	4	True				
ANR	6348950	AssignmentExpression	val -> name_or_val = malloc ( sizeof ( SVal_LF_LONG ) )		6348564	0		=			
ANR	6348951	PtrMemberAccess	val -> name_or_val		6348564	0					
ANR	6348952	Identifier	val		6348564	0					
ANR	6348953	Identifier	name_or_val		6348564	1					
ANR	6348954	CallExpression	malloc ( sizeof ( SVal_LF_LONG ) )		6348564	1					
ANR	6348955	Callee	malloc		6348564	0					
ANR	6348956	Identifier	malloc		6348564	0					
ANR	6348957	ArgumentList	sizeof ( SVal_LF_LONG )		6348564	1					
ANR	6348958	Argument	sizeof ( SVal_LF_LONG )		6348564	0					
ANR	6348959	SizeofExpression	sizeof ( SVal_LF_LONG )		6348564	0					
ANR	6348960	Sizeof	sizeof		6348564	0					
ANR	6348961	SizeofOperand	SVal_LF_LONG		6348564	1					
ANR	6348962	IfStatement	if ( ! val -> name_or_val )		6348564	5					
ANR	6348963	Condition	! val -> name_or_val	1604:7:38029:38045	6348564	0	True				
ANR	6348964	UnaryOperationExpression	! val -> name_or_val		6348564	0					
ANR	6348965	UnaryOperator	!		6348564	0					
ANR	6348966	PtrMemberAccess	val -> name_or_val		6348564	1					
ANR	6348967	Identifier	val		6348564	0					
ANR	6348968	Identifier	name_or_val		6348564	1					
ANR	6348969	CompoundStatement		61:26:1837:1837	6348564	1					
ANR	6348970	BreakStatement	break ;	1605:4:38054:38059	6348564	0	True				
ANR	6348971	ExpressionStatement	"memcpy ( val -> name_or_val , & lf_long , sizeof ( SVal_LF_LONG ) )"	1607:3:38069:38127	6348564	6	True				
ANR	6348972	CallExpression	"memcpy ( val -> name_or_val , & lf_long , sizeof ( SVal_LF_LONG ) )"		6348564	0					
ANR	6348973	Callee	memcpy		6348564	0					
ANR	6348974	Identifier	memcpy		6348564	0					
ANR	6348975	ArgumentList	val -> name_or_val		6348564	1					
ANR	6348976	Argument	val -> name_or_val		6348564	0					
ANR	6348977	PtrMemberAccess	val -> name_or_val		6348564	0					
ANR	6348978	Identifier	val		6348564	0					
ANR	6348979	Identifier	name_or_val		6348564	1					
ANR	6348980	Argument	& lf_long		6348564	1					
ANR	6348981	UnaryOperationExpression	& lf_long		6348564	0					
ANR	6348982	UnaryOperator	&		6348564	0					
ANR	6348983	Identifier	lf_long		6348564	1					
ANR	6348984	Argument	sizeof ( SVal_LF_LONG )		6348564	2					
ANR	6348985	SizeofExpression	sizeof ( SVal_LF_LONG )		6348564	0					
ANR	6348986	Sizeof	sizeof		6348564	0					
ANR	6348987	SizeofOperand	SVal_LF_LONG		6348564	1					
ANR	6348988	BreakStatement	break ;	1608:3:38132:38137	6348564	7	True				
ANR	6348989	Label	case eLF_ULONG :	1610:2:38145:38159	6348564	8	True				
ANR	6348990	Identifier	eLF_ULONG		6348564	0					
ANR	6348991	CompoundStatement		69:3:1957:1979	6348564	9					
ANR	6348992	IdentifierDeclStatement	SVal_LF_ULONG lf_ulong ;	1612:3:38168:38190	6348564	0	True				
ANR	6348993	IdentifierDecl	lf_ulong		6348564	0					
ANR	6348994	IdentifierDeclType	SVal_LF_ULONG		6348564	0					
ANR	6348995	Identifier	lf_ulong		6348564	1					
ANR	6348996	ExpressionStatement	lf_ulong . value = 0	1613:3:38195:38213	6348564	1	True				
ANR	6348997	AssignmentExpression	lf_ulong . value = 0		6348564	0		=			
ANR	6348998	MemberAccess	lf_ulong . value		6348564	0					
ANR	6348999	Identifier	lf_ulong		6348564	0					
ANR	6349000	Identifier	value		6348564	1					
ANR	6349001	PrimaryExpression	0		6348564	1					
ANR	6349002	ExpressionStatement	"READ4 ( * read_bytes , len , lf_ulong . value , leaf_data , ut32 )"	1617:3:38375:38431	6348564	2	True				
ANR	6349003	CallExpression	"READ4 ( * read_bytes , len , lf_ulong . value , leaf_data , ut32 )"		6348564	0					
ANR	6349004	Callee	READ4		6348564	0					
ANR	6349005	Identifier	READ4		6348564	0					
ANR	6349006	ArgumentList	* read_bytes		6348564	1					
ANR	6349007	Argument	* read_bytes		6348564	0					
ANR	6349008	UnaryOperationExpression	* read_bytes		6348564	0					
ANR	6349009	UnaryOperator	*		6348564	0					
ANR	6349010	Identifier	read_bytes		6348564	1					
ANR	6349011	Argument	len		6348564	1					
ANR	6349012	Identifier	len		6348564	0					
ANR	6349013	Argument	lf_ulong . value		6348564	2					
ANR	6349014	MemberAccess	lf_ulong . value		6348564	0					
ANR	6349015	Identifier	lf_ulong		6348564	0					
ANR	6349016	Identifier	value		6348564	1					
ANR	6349017	Argument	leaf_data		6348564	3					
ANR	6349018	Identifier	leaf_data		6348564	0					
ANR	6349019	Argument	ut32		6348564	4					
ANR	6349020	Identifier	ut32		6348564	0					
ANR	6349021	ExpressionStatement	"parse_sctring ( & lf_ulong . name , leaf_data , read_bytes , len )"	1618:3:38436:38494	6348564	3	True				
ANR	6349022	CallExpression	"parse_sctring ( & lf_ulong . name , leaf_data , read_bytes , len )"		6348564	0					
ANR	6349023	Callee	parse_sctring		6348564	0					
ANR	6349024	Identifier	parse_sctring		6348564	0					
ANR	6349025	ArgumentList	& lf_ulong . name		6348564	1					
ANR	6349026	Argument	& lf_ulong . name		6348564	0					
ANR	6349027	UnaryOperationExpression	& lf_ulong . name		6348564	0					
ANR	6349028	UnaryOperator	&		6348564	0					
ANR	6349029	MemberAccess	lf_ulong . name		6348564	1					
ANR	6349030	Identifier	lf_ulong		6348564	0					
ANR	6349031	Identifier	name		6348564	1					
ANR	6349032	Argument	leaf_data		6348564	1					
ANR	6349033	Identifier	leaf_data		6348564	0					
ANR	6349034	Argument	read_bytes		6348564	2					
ANR	6349035	Identifier	read_bytes		6348564	0					
ANR	6349036	Argument	len		6348564	3					
ANR	6349037	Identifier	len		6348564	0					
ANR	6349038	ExpressionStatement	val -> name_or_val = malloc ( sizeof ( SVal_LF_ULONG ) )	1619:3:38499:38549	6348564	4	True				
ANR	6349039	AssignmentExpression	val -> name_or_val = malloc ( sizeof ( SVal_LF_ULONG ) )		6348564	0		=			
ANR	6349040	PtrMemberAccess	val -> name_or_val		6348564	0					
ANR	6349041	Identifier	val		6348564	0					
ANR	6349042	Identifier	name_or_val		6348564	1					
ANR	6349043	CallExpression	malloc ( sizeof ( SVal_LF_ULONG ) )		6348564	1					
ANR	6349044	Callee	malloc		6348564	0					
ANR	6349045	Identifier	malloc		6348564	0					
ANR	6349046	ArgumentList	sizeof ( SVal_LF_ULONG )		6348564	1					
ANR	6349047	Argument	sizeof ( SVal_LF_ULONG )		6348564	0					
ANR	6349048	SizeofExpression	sizeof ( SVal_LF_ULONG )		6348564	0					
ANR	6349049	Sizeof	sizeof		6348564	0					
ANR	6349050	SizeofOperand	SVal_LF_ULONG		6348564	1					
ANR	6349051	IfStatement	if ( ! val -> name_or_val )		6348564	5					
ANR	6349052	Condition	! val -> name_or_val	1620:7:38558:38574	6348564	0	True				
ANR	6349053	UnaryOperationExpression	! val -> name_or_val		6348564	0					
ANR	6349054	UnaryOperator	!		6348564	0					
ANR	6349055	PtrMemberAccess	val -> name_or_val		6348564	1					
ANR	6349056	Identifier	val		6348564	0					
ANR	6349057	Identifier	name_or_val		6348564	1					
ANR	6349058	CompoundStatement		77:26:2366:2366	6348564	1					
ANR	6349059	BreakStatement	break ;	1621:4:38583:38588	6348564	0	True				
ANR	6349060	ExpressionStatement	"memcpy ( val -> name_or_val , & lf_ulong , sizeof ( SVal_LF_ULONG ) )"	1623:3:38598:38657	6348564	6	True				
ANR	6349061	CallExpression	"memcpy ( val -> name_or_val , & lf_ulong , sizeof ( SVal_LF_ULONG ) )"		6348564	0					
ANR	6349062	Callee	memcpy		6348564	0					
ANR	6349063	Identifier	memcpy		6348564	0					
ANR	6349064	ArgumentList	val -> name_or_val		6348564	1					
ANR	6349065	Argument	val -> name_or_val		6348564	0					
ANR	6349066	PtrMemberAccess	val -> name_or_val		6348564	0					
ANR	6349067	Identifier	val		6348564	0					
ANR	6349068	Identifier	name_or_val		6348564	1					
ANR	6349069	Argument	& lf_ulong		6348564	1					
ANR	6349070	UnaryOperationExpression	& lf_ulong		6348564	0					
ANR	6349071	UnaryOperator	&		6348564	0					
ANR	6349072	Identifier	lf_ulong		6348564	1					
ANR	6349073	Argument	sizeof ( SVal_LF_ULONG )		6348564	2					
ANR	6349074	SizeofExpression	sizeof ( SVal_LF_ULONG )		6348564	0					
ANR	6349075	Sizeof	sizeof		6348564	0					
ANR	6349076	SizeofOperand	SVal_LF_ULONG		6348564	1					
ANR	6349077	BreakStatement	break ;	1624:3:38662:38667	6348564	7	True				
ANR	6349078	Label	case eLF_SHORT :	1626:2:38675:38689	6348564	10	True				
ANR	6349079	Identifier	eLF_SHORT		6348564	0					
ANR	6349080	CompoundStatement		85:3:2487:2509	6348564	11					
ANR	6349081	IdentifierDeclStatement	SVal_LF_SHORT lf_short ;	1628:3:38698:38720	6348564	0	True				
ANR	6349082	IdentifierDecl	lf_short		6348564	0					
ANR	6349083	IdentifierDeclType	SVal_LF_SHORT		6348564	0					
ANR	6349084	Identifier	lf_short		6348564	1					
ANR	6349085	ExpressionStatement	"READ2 ( * read_bytes , len , lf_short . value , leaf_data , st16 )"	1629:3:38725:38781	6348564	1	True				
ANR	6349086	CallExpression	"READ2 ( * read_bytes , len , lf_short . value , leaf_data , st16 )"		6348564	0					
ANR	6349087	Callee	READ2		6348564	0					
ANR	6349088	Identifier	READ2		6348564	0					
ANR	6349089	ArgumentList	* read_bytes		6348564	1					
ANR	6349090	Argument	* read_bytes		6348564	0					
ANR	6349091	UnaryOperationExpression	* read_bytes		6348564	0					
ANR	6349092	UnaryOperator	*		6348564	0					
ANR	6349093	Identifier	read_bytes		6348564	1					
ANR	6349094	Argument	len		6348564	1					
ANR	6349095	Identifier	len		6348564	0					
ANR	6349096	Argument	lf_short . value		6348564	2					
ANR	6349097	MemberAccess	lf_short . value		6348564	0					
ANR	6349098	Identifier	lf_short		6348564	0					
ANR	6349099	Identifier	value		6348564	1					
ANR	6349100	Argument	leaf_data		6348564	3					
ANR	6349101	Identifier	leaf_data		6348564	0					
ANR	6349102	Argument	st16		6348564	4					
ANR	6349103	Identifier	st16		6348564	0					
ANR	6349104	ExpressionStatement	"parse_sctring ( & lf_short . name , leaf_data , read_bytes , len )"	1630:3:38786:38844	6348564	2	True				
ANR	6349105	CallExpression	"parse_sctring ( & lf_short . name , leaf_data , read_bytes , len )"		6348564	0					
ANR	6349106	Callee	parse_sctring		6348564	0					
ANR	6349107	Identifier	parse_sctring		6348564	0					
ANR	6349108	ArgumentList	& lf_short . name		6348564	1					
ANR	6349109	Argument	& lf_short . name		6348564	0					
ANR	6349110	UnaryOperationExpression	& lf_short . name		6348564	0					
ANR	6349111	UnaryOperator	&		6348564	0					
ANR	6349112	MemberAccess	lf_short . name		6348564	1					
ANR	6349113	Identifier	lf_short		6348564	0					
ANR	6349114	Identifier	name		6348564	1					
ANR	6349115	Argument	leaf_data		6348564	1					
ANR	6349116	Identifier	leaf_data		6348564	0					
ANR	6349117	Argument	read_bytes		6348564	2					
ANR	6349118	Identifier	read_bytes		6348564	0					
ANR	6349119	Argument	len		6348564	3					
ANR	6349120	Identifier	len		6348564	0					
ANR	6349121	ExpressionStatement	val -> name_or_val = malloc ( sizeof ( SVal_LF_SHORT ) )	1631:3:38849:38899	6348564	3	True				
ANR	6349122	AssignmentExpression	val -> name_or_val = malloc ( sizeof ( SVal_LF_SHORT ) )		6348564	0		=			
ANR	6349123	PtrMemberAccess	val -> name_or_val		6348564	0					
ANR	6349124	Identifier	val		6348564	0					
ANR	6349125	Identifier	name_or_val		6348564	1					
ANR	6349126	CallExpression	malloc ( sizeof ( SVal_LF_SHORT ) )		6348564	1					
ANR	6349127	Callee	malloc		6348564	0					
ANR	6349128	Identifier	malloc		6348564	0					
ANR	6349129	ArgumentList	sizeof ( SVal_LF_SHORT )		6348564	1					
ANR	6349130	Argument	sizeof ( SVal_LF_SHORT )		6348564	0					
ANR	6349131	SizeofExpression	sizeof ( SVal_LF_SHORT )		6348564	0					
ANR	6349132	Sizeof	sizeof		6348564	0					
ANR	6349133	SizeofOperand	SVal_LF_SHORT		6348564	1					
ANR	6349134	IfStatement	if ( ! val -> name_or_val )		6348564	4					
ANR	6349135	Condition	! val -> name_or_val	1632:7:38908:38924	6348564	0	True				
ANR	6349136	UnaryOperationExpression	! val -> name_or_val		6348564	0					
ANR	6349137	UnaryOperator	!		6348564	0					
ANR	6349138	PtrMemberAccess	val -> name_or_val		6348564	1					
ANR	6349139	Identifier	val		6348564	0					
ANR	6349140	Identifier	name_or_val		6348564	1					
ANR	6349141	CompoundStatement		89:26:2716:2716	6348564	1					
ANR	6349142	BreakStatement	break ;	1633:4:38933:38938	6348564	0	True				
ANR	6349143	ExpressionStatement	"memcpy ( val -> name_or_val , & lf_short , sizeof ( SVal_LF_SHORT ) )"	1635:3:38948:39008	6348564	5	True				
ANR	6349144	CallExpression	"memcpy ( val -> name_or_val , & lf_short , sizeof ( SVal_LF_SHORT ) )"		6348564	0					
ANR	6349145	Callee	memcpy		6348564	0					
ANR	6349146	Identifier	memcpy		6348564	0					
ANR	6349147	ArgumentList	val -> name_or_val		6348564	1					
ANR	6349148	Argument	val -> name_or_val		6348564	0					
ANR	6349149	PtrMemberAccess	val -> name_or_val		6348564	0					
ANR	6349150	Identifier	val		6348564	0					
ANR	6349151	Identifier	name_or_val		6348564	1					
ANR	6349152	Argument	& lf_short		6348564	1					
ANR	6349153	UnaryOperationExpression	& lf_short		6348564	0					
ANR	6349154	UnaryOperator	&		6348564	0					
ANR	6349155	Identifier	lf_short		6348564	1					
ANR	6349156	Argument	sizeof ( SVal_LF_SHORT )		6348564	2					
ANR	6349157	SizeofExpression	sizeof ( SVal_LF_SHORT )		6348564	0					
ANR	6349158	Sizeof	sizeof		6348564	0					
ANR	6349159	SizeofOperand	SVal_LF_SHORT		6348564	1					
ANR	6349160	BreakStatement	break ;	1636:3:39013:39018	6348564	6	True				
ANR	6349161	Label	case eLF_USHORT :	1638:2:39026:39041	6348564	12	True				
ANR	6349162	Identifier	eLF_USHORT		6348564	0					
ANR	6349163	CompoundStatement		97:3:2839:2863	6348564	13					
ANR	6349164	IdentifierDeclStatement	SVal_LF_USHORT lf_ushort ;	1640:3:39050:39074	6348564	0	True				
ANR	6349165	IdentifierDecl	lf_ushort		6348564	0					
ANR	6349166	IdentifierDeclType	SVal_LF_USHORT		6348564	0					
ANR	6349167	Identifier	lf_ushort		6348564	1					
ANR	6349168	ExpressionStatement	"READ2 ( * read_bytes , len , lf_ushort . value , leaf_data , ut16 )"	1641:3:39079:39136	6348564	1	True				
ANR	6349169	CallExpression	"READ2 ( * read_bytes , len , lf_ushort . value , leaf_data , ut16 )"		6348564	0					
ANR	6349170	Callee	READ2		6348564	0					
ANR	6349171	Identifier	READ2		6348564	0					
ANR	6349172	ArgumentList	* read_bytes		6348564	1					
ANR	6349173	Argument	* read_bytes		6348564	0					
ANR	6349174	UnaryOperationExpression	* read_bytes		6348564	0					
ANR	6349175	UnaryOperator	*		6348564	0					
ANR	6349176	Identifier	read_bytes		6348564	1					
ANR	6349177	Argument	len		6348564	1					
ANR	6349178	Identifier	len		6348564	0					
ANR	6349179	Argument	lf_ushort . value		6348564	2					
ANR	6349180	MemberAccess	lf_ushort . value		6348564	0					
ANR	6349181	Identifier	lf_ushort		6348564	0					
ANR	6349182	Identifier	value		6348564	1					
ANR	6349183	Argument	leaf_data		6348564	3					
ANR	6349184	Identifier	leaf_data		6348564	0					
ANR	6349185	Argument	ut16		6348564	4					
ANR	6349186	Identifier	ut16		6348564	0					
ANR	6349187	ExpressionStatement	"parse_sctring ( & lf_ushort . name , leaf_data , read_bytes , len )"	1642:3:39141:39200	6348564	2	True				
ANR	6349188	CallExpression	"parse_sctring ( & lf_ushort . name , leaf_data , read_bytes , len )"		6348564	0					
ANR	6349189	Callee	parse_sctring		6348564	0					
ANR	6349190	Identifier	parse_sctring		6348564	0					
ANR	6349191	ArgumentList	& lf_ushort . name		6348564	1					
ANR	6349192	Argument	& lf_ushort . name		6348564	0					
ANR	6349193	UnaryOperationExpression	& lf_ushort . name		6348564	0					
ANR	6349194	UnaryOperator	&		6348564	0					
ANR	6349195	MemberAccess	lf_ushort . name		6348564	1					
ANR	6349196	Identifier	lf_ushort		6348564	0					
ANR	6349197	Identifier	name		6348564	1					
ANR	6349198	Argument	leaf_data		6348564	1					
ANR	6349199	Identifier	leaf_data		6348564	0					
ANR	6349200	Argument	read_bytes		6348564	2					
ANR	6349201	Identifier	read_bytes		6348564	0					
ANR	6349202	Argument	len		6348564	3					
ANR	6349203	Identifier	len		6348564	0					
ANR	6349204	ExpressionStatement	val -> name_or_val = malloc ( sizeof ( SVal_LF_USHORT ) )	1643:3:39205:39255	6348564	3	True				
ANR	6349205	AssignmentExpression	val -> name_or_val = malloc ( sizeof ( SVal_LF_USHORT ) )		6348564	0		=			
ANR	6349206	PtrMemberAccess	val -> name_or_val		6348564	0					
ANR	6349207	Identifier	val		6348564	0					
ANR	6349208	Identifier	name_or_val		6348564	1					
ANR	6349209	CallExpression	malloc ( sizeof ( SVal_LF_USHORT ) )		6348564	1					
ANR	6349210	Callee	malloc		6348564	0					
ANR	6349211	Identifier	malloc		6348564	0					
ANR	6349212	ArgumentList	sizeof ( SVal_LF_USHORT )		6348564	1					
ANR	6349213	Argument	sizeof ( SVal_LF_USHORT )		6348564	0					
ANR	6349214	SizeofExpression	sizeof ( SVal_LF_USHORT )		6348564	0					
ANR	6349215	Sizeof	sizeof		6348564	0					
ANR	6349216	SizeofOperand	SVal_LF_USHORT		6348564	1					
ANR	6349217	IfStatement	if ( ! val -> name_or_val )		6348564	4					
ANR	6349218	Condition	! val -> name_or_val	1644:7:39264:39280	6348564	0	True				
ANR	6349219	UnaryOperationExpression	! val -> name_or_val		6348564	0					
ANR	6349220	UnaryOperator	!		6348564	0					
ANR	6349221	PtrMemberAccess	val -> name_or_val		6348564	1					
ANR	6349222	Identifier	val		6348564	0					
ANR	6349223	Identifier	name_or_val		6348564	1					
ANR	6349224	CompoundStatement		101:26:3072:3072	6348564	1					
ANR	6349225	BreakStatement	break ;	1645:4:39289:39294	6348564	0	True				
ANR	6349226	ExpressionStatement	"memcpy ( val -> name_or_val , & lf_ushort , sizeof ( SVal_LF_USHORT ) )"	1647:3:39304:39365	6348564	5	True				
ANR	6349227	CallExpression	"memcpy ( val -> name_or_val , & lf_ushort , sizeof ( SVal_LF_USHORT ) )"		6348564	0					
ANR	6349228	Callee	memcpy		6348564	0					
ANR	6349229	Identifier	memcpy		6348564	0					
ANR	6349230	ArgumentList	val -> name_or_val		6348564	1					
ANR	6349231	Argument	val -> name_or_val		6348564	0					
ANR	6349232	PtrMemberAccess	val -> name_or_val		6348564	0					
ANR	6349233	Identifier	val		6348564	0					
ANR	6349234	Identifier	name_or_val		6348564	1					
ANR	6349235	Argument	& lf_ushort		6348564	1					
ANR	6349236	UnaryOperationExpression	& lf_ushort		6348564	0					
ANR	6349237	UnaryOperator	&		6348564	0					
ANR	6349238	Identifier	lf_ushort		6348564	1					
ANR	6349239	Argument	sizeof ( SVal_LF_USHORT )		6348564	2					
ANR	6349240	SizeofExpression	sizeof ( SVal_LF_USHORT )		6348564	0					
ANR	6349241	Sizeof	sizeof		6348564	0					
ANR	6349242	SizeofOperand	SVal_LF_USHORT		6348564	1					
ANR	6349243	BreakStatement	break ;	1648:3:39370:39375	6348564	6	True				
ANR	6349244	Label	default :	1650:2:39383:39390	6348564	14	True				
ANR	6349245	Identifier	default		6348564	0					
ANR	6349246	ExpressionStatement	"printf ( ""parse_sval: Skipping unsupported type (%d)\\n"" , val -> value_or_type )"	1651:3:39395:39470	6348564	15	True				
ANR	6349247	CallExpression	"printf ( ""parse_sval: Skipping unsupported type (%d)\\n"" , val -> value_or_type )"		6348564	0					
ANR	6349248	Callee	printf		6348564	0					
ANR	6349249	Identifier	printf		6348564	0					
ANR	6349250	ArgumentList	"""parse_sval: Skipping unsupported type (%d)\\n"""		6348564	1					
ANR	6349251	Argument	"""parse_sval: Skipping unsupported type (%d)\\n"""		6348564	0					
ANR	6349252	PrimaryExpression	"""parse_sval: Skipping unsupported type (%d)\\n"""		6348564	0					
ANR	6349253	Argument	val -> value_or_type		6348564	1					
ANR	6349254	PtrMemberAccess	val -> value_or_type		6348564	0					
ANR	6349255	Identifier	val		6348564	0					
ANR	6349256	Identifier	value_or_type		6348564	1					
ANR	6349257	ReturnStatement	return 0 ;	1652:3:39475:39483	6348564	16	True				
ANR	6349258	PrimaryExpression	0		6348564	0					
ANR	6349259	ReturnStatement	return 1 ;	1656:1:39494:39502	6348564	3	True				
ANR	6349260	PrimaryExpression	1		6348564	0					
ANR	6349261	ReturnType	static int		6348564	1					
ANR	6349262	Identifier	parse_sval		6348564	2					
ANR	6349263	ParameterList	"SVal * val , unsigned char * leaf_data , unsigned int * read_bytes , unsigned int len"		6348564	3					
ANR	6349264	Parameter	SVal * val	1543:22:36129:36137	6348564	0	True				
ANR	6349265	ParameterType	SVal *		6348564	0					
ANR	6349266	Identifier	val		6348564	1					
ANR	6349267	Parameter	unsigned char * leaf_data	1543:33:36140:36163	6348564	1	True				
ANR	6349268	ParameterType	unsigned char *		6348564	0					
ANR	6349269	Identifier	leaf_data		6348564	1					
ANR	6349270	Parameter	unsigned int * read_bytes	1543:59:36166:36189	6348564	2	True				
ANR	6349271	ParameterType	unsigned int *		6348564	0					
ANR	6349272	Identifier	read_bytes		6348564	1					
ANR	6349273	Parameter	unsigned int len	1543:85:36192:36207	6348564	3	True				
ANR	6349274	ParameterType	unsigned int		6348564	0					
ANR	6349275	Identifier	len		6348564	1					
ANR	6349276	CFGEntryNode	ENTRY		6348564		True				
ANR	6349277	CFGExitNode	EXIT		6348564		True				
ANR	6349278	Symbol	& lf_long . name		6348564						
ANR	6349279	Symbol	& lf_short . name		6348564						
ANR	6349280	Symbol	& lf_ushort		6348564						
ANR	6349281	Symbol	leaf_data		6348564						
ANR	6349282	Symbol	& lf_char . name		6348564						
ANR	6349283	Symbol	lf_qword . value		6348564						
ANR	6349284	Symbol	ut32		6348564						
ANR	6349285	Symbol	& lf_ulong		6348564						
ANR	6349286	Symbol	lf_uqword . value		6348564						
ANR	6349287	Symbol	* val		6348564						
ANR	6349288	Symbol	eLF_CHAR		6348564						
ANR	6349289	Symbol	& lf_qword		6348564						
ANR	6349290	Symbol	lf_long . value		6348564						
ANR	6349291	Symbol	& lf_long		6348564						
ANR	6349292	Symbol	* read_bytes		6348564						
ANR	6349293	Symbol	& lf_qword . name		6348564						
ANR	6349294	Symbol	len		6348564						
ANR	6349295	Symbol	lf_uqword		6348564						
ANR	6349296	Symbol	lf_ulong		6348564						
ANR	6349297	Symbol	lf_char . value		6348564						
ANR	6349298	Symbol	& lf_ushort . name		6348564						
ANR	6349299	Symbol	val		6348564						
ANR	6349300	Symbol	lf_short . value		6348564						
ANR	6349301	Symbol	& lf_short		6348564						
ANR	6349302	Symbol	malloc		6348564						
ANR	6349303	Symbol	lf_char		6348564						
ANR	6349304	Symbol	& lf_char		6348564						
ANR	6349305	Symbol	st64		6348564						
ANR	6349306	Symbol	& lf_uqword . name		6348564						
ANR	6349307	Symbol	lf_short		6348564						
ANR	6349308	Symbol	read_bytes		6348564						
ANR	6349309	Symbol	& lf_uqword		6348564						
ANR	6349310	Symbol	lf_ulong . value		6348564						
ANR	6349311	Symbol	lf_ushort . value		6348564						
ANR	6349312	Symbol	st16		6348564						
ANR	6349313	Symbol	lf_qword		6348564						
ANR	6349314	Symbol	ut16		6348564						
ANR	6349315	Symbol	val -> value_or_type		6348564						
ANR	6349316	Symbol	& lf_ulong . name		6348564						
ANR	6349317	Symbol	st8		6348564						
ANR	6349318	Symbol	st32		6348564						
ANR	6349319	Symbol	val -> name_or_val		6348564						
ANR	6349320	Symbol	sctr		6348564						
ANR	6349321	Symbol	lf_long		6348564						
ANR	6349322	Symbol	lf_ushort		6348564						
ANR	6349323	Function	parse_lf_enumerate	1660:0:39587:40374							
ANR	6349324	FunctionDef	"parse_lf_enumerate (SLF_ENUMERATE * lf_enumerate , unsigned char * leaf_data , unsigned int * read_bytes , unsigned int len)"		6349323	0					
ANR	6349325	CompoundStatement		1661:0:39716:40374	6349323	0					
ANR	6349326	IdentifierDeclStatement	"unsigned int read_bytes_before = 0 , tmp_read_bytes_before = 0 ;"	1662:1:39719:39780	6349323	0	True				
ANR	6349327	IdentifierDecl	read_bytes_before = 0		6349323	0					
ANR	6349328	IdentifierDeclType	unsigned int		6349323	0					
ANR	6349329	Identifier	read_bytes_before		6349323	1					
ANR	6349330	AssignmentExpression	read_bytes_before = 0		6349323	2		=			
ANR	6349331	Identifier	read_bytes_before		6349323	0					
ANR	6349332	PrimaryExpression	0		6349323	1					
ANR	6349333	IdentifierDecl	tmp_read_bytes_before = 0		6349323	1					
ANR	6349334	IdentifierDeclType	unsigned int		6349323	0					
ANR	6349335	Identifier	tmp_read_bytes_before		6349323	1					
ANR	6349336	AssignmentExpression	tmp_read_bytes_before = 0		6349323	2		=			
ANR	6349337	Identifier	tmp_read_bytes_before		6349323	0					
ANR	6349338	PrimaryExpression	0		6349323	1					
ANR	6349339	ExpressionStatement	lf_enumerate -> enum_value . name_or_val = 0	1664:1:39784:39824	6349323	1	True				
ANR	6349340	AssignmentExpression	lf_enumerate -> enum_value . name_or_val = 0		6349323	0		=			
ANR	6349341	MemberAccess	lf_enumerate -> enum_value . name_or_val		6349323	0					
ANR	6349342	PtrMemberAccess	lf_enumerate -> enum_value		6349323	0					
ANR	6349343	Identifier	lf_enumerate		6349323	0					
ANR	6349344	Identifier	enum_value		6349323	1					
ANR	6349345	Identifier	name_or_val		6349323	1					
ANR	6349346	PrimaryExpression	0		6349323	1					
ANR	6349347	ExpressionStatement	read_bytes_before = * read_bytes	1666:1:39828:39859	6349323	2	True				
ANR	6349348	AssignmentExpression	read_bytes_before = * read_bytes		6349323	0		=			
ANR	6349349	Identifier	read_bytes_before		6349323	0					
ANR	6349350	UnaryOperationExpression	* read_bytes		6349323	1					
ANR	6349351	UnaryOperator	*		6349323	0					
ANR	6349352	Identifier	read_bytes		6349323	1					
ANR	6349353	ExpressionStatement	"READ2 ( * read_bytes , len , lf_enumerate -> fldattr . fldattr , leaf_data , ut16 )"	1667:1:39862:39933	6349323	3	True				
ANR	6349354	CallExpression	"READ2 ( * read_bytes , len , lf_enumerate -> fldattr . fldattr , leaf_data , ut16 )"		6349323	0					
ANR	6349355	Callee	READ2		6349323	0					
ANR	6349356	Identifier	READ2		6349323	0					
ANR	6349357	ArgumentList	* read_bytes		6349323	1					
ANR	6349358	Argument	* read_bytes		6349323	0					
ANR	6349359	UnaryOperationExpression	* read_bytes		6349323	0					
ANR	6349360	UnaryOperator	*		6349323	0					
ANR	6349361	Identifier	read_bytes		6349323	1					
ANR	6349362	Argument	len		6349323	1					
ANR	6349363	Identifier	len		6349323	0					
ANR	6349364	Argument	lf_enumerate -> fldattr . fldattr		6349323	2					
ANR	6349365	MemberAccess	lf_enumerate -> fldattr . fldattr		6349323	0					
ANR	6349366	PtrMemberAccess	lf_enumerate -> fldattr		6349323	0					
ANR	6349367	Identifier	lf_enumerate		6349323	0					
ANR	6349368	Identifier	fldattr		6349323	1					
ANR	6349369	Identifier	fldattr		6349323	1					
ANR	6349370	Argument	leaf_data		6349323	3					
ANR	6349371	Identifier	leaf_data		6349323	0					
ANR	6349372	Argument	ut16		6349323	4					
ANR	6349373	Identifier	ut16		6349323	0					
ANR	6349374	ExpressionStatement	tmp_read_bytes_before = * read_bytes	1669:1:39937:39972	6349323	4	True				
ANR	6349375	AssignmentExpression	tmp_read_bytes_before = * read_bytes		6349323	0		=			
ANR	6349376	Identifier	tmp_read_bytes_before		6349323	0					
ANR	6349377	UnaryOperationExpression	* read_bytes		6349323	1					
ANR	6349378	UnaryOperator	*		6349323	0					
ANR	6349379	Identifier	read_bytes		6349323	1					
ANR	6349380	ExpressionStatement	"parse_sval ( & lf_enumerate -> enum_value , leaf_data , read_bytes , len )"	1670:1:39975:40040	6349323	5	True				
ANR	6349381	CallExpression	"parse_sval ( & lf_enumerate -> enum_value , leaf_data , read_bytes , len )"		6349323	0					
ANR	6349382	Callee	parse_sval		6349323	0					
ANR	6349383	Identifier	parse_sval		6349323	0					
ANR	6349384	ArgumentList	& lf_enumerate -> enum_value		6349323	1					
ANR	6349385	Argument	& lf_enumerate -> enum_value		6349323	0					
ANR	6349386	UnaryOperationExpression	& lf_enumerate -> enum_value		6349323	0					
ANR	6349387	UnaryOperator	&		6349323	0					
ANR	6349388	PtrMemberAccess	lf_enumerate -> enum_value		6349323	1					
ANR	6349389	Identifier	lf_enumerate		6349323	0					
ANR	6349390	Identifier	enum_value		6349323	1					
ANR	6349391	Argument	leaf_data		6349323	1					
ANR	6349392	Identifier	leaf_data		6349323	0					
ANR	6349393	Argument	read_bytes		6349323	2					
ANR	6349394	Identifier	read_bytes		6349323	0					
ANR	6349395	Argument	len		6349323	3					
ANR	6349396	Identifier	len		6349323	0					
ANR	6349397	ExpressionStatement	leaf_data += ( * read_bytes - tmp_read_bytes_before )	1671:1:40043:40093	6349323	6	True				
ANR	6349398	AssignmentExpression	leaf_data += ( * read_bytes - tmp_read_bytes_before )		6349323	0		+=			
ANR	6349399	Identifier	leaf_data		6349323	0					
ANR	6349400	AdditiveExpression	* read_bytes - tmp_read_bytes_before		6349323	1		-			
ANR	6349401	UnaryOperationExpression	* read_bytes		6349323	0					
ANR	6349402	UnaryOperator	*		6349323	0					
ANR	6349403	Identifier	read_bytes		6349323	1					
ANR	6349404	Identifier	tmp_read_bytes_before		6349323	1					
ANR	6349405	ExpressionStatement	"PEEK_READ1 ( * read_bytes , len , lf_enumerate -> pad , leaf_data , ut8 )"	1673:1:40097:40160	6349323	7	True				
ANR	6349406	CallExpression	"PEEK_READ1 ( * read_bytes , len , lf_enumerate -> pad , leaf_data , ut8 )"		6349323	0					
ANR	6349407	Callee	PEEK_READ1		6349323	0					
ANR	6349408	Identifier	PEEK_READ1		6349323	0					
ANR	6349409	ArgumentList	* read_bytes		6349323	1					
ANR	6349410	Argument	* read_bytes		6349323	0					
ANR	6349411	UnaryOperationExpression	* read_bytes		6349323	0					
ANR	6349412	UnaryOperator	*		6349323	0					
ANR	6349413	Identifier	read_bytes		6349323	1					
ANR	6349414	Argument	len		6349323	1					
ANR	6349415	Identifier	len		6349323	0					
ANR	6349416	Argument	lf_enumerate -> pad		6349323	2					
ANR	6349417	PtrMemberAccess	lf_enumerate -> pad		6349323	0					
ANR	6349418	Identifier	lf_enumerate		6349323	0					
ANR	6349419	Identifier	pad		6349323	1					
ANR	6349420	Argument	leaf_data		6349323	3					
ANR	6349421	Identifier	leaf_data		6349323	0					
ANR	6349422	Argument	ut8		6349323	4					
ANR	6349423	Identifier	ut8		6349323	0					
ANR	6349424	ExpressionStatement	"PAD_ALIGN ( lf_enumerate -> pad , * read_bytes , leaf_data , len )"	1674:1:40163:40220	6349323	8	True				
ANR	6349425	CallExpression	"PAD_ALIGN ( lf_enumerate -> pad , * read_bytes , leaf_data , len )"		6349323	0					
ANR	6349426	Callee	PAD_ALIGN		6349323	0					
ANR	6349427	Identifier	PAD_ALIGN		6349323	0					
ANR	6349428	ArgumentList	lf_enumerate -> pad		6349323	1					
ANR	6349429	Argument	lf_enumerate -> pad		6349323	0					
ANR	6349430	PtrMemberAccess	lf_enumerate -> pad		6349323	0					
ANR	6349431	Identifier	lf_enumerate		6349323	0					
ANR	6349432	Identifier	pad		6349323	1					
ANR	6349433	Argument	* read_bytes		6349323	1					
ANR	6349434	UnaryOperationExpression	* read_bytes		6349323	0					
ANR	6349435	UnaryOperator	*		6349323	0					
ANR	6349436	Identifier	read_bytes		6349323	1					
ANR	6349437	Argument	leaf_data		6349323	2					
ANR	6349438	Identifier	leaf_data		6349323	0					
ANR	6349439	Argument	len		6349323	3					
ANR	6349440	Identifier	len		6349323	0					
ANR	6349441	ReturnStatement	return ( * read_bytes - read_bytes_before ) ;	1680:1:40332:40372	6349323	9	True				
ANR	6349442	AdditiveExpression	* read_bytes - read_bytes_before		6349323	0		-			
ANR	6349443	UnaryOperationExpression	* read_bytes		6349323	0					
ANR	6349444	UnaryOperator	*		6349323	0					
ANR	6349445	Identifier	read_bytes		6349323	1					
ANR	6349446	Identifier	read_bytes_before		6349323	1					
ANR	6349447	ReturnType	static int		6349323	1					
ANR	6349448	Identifier	parse_lf_enumerate		6349323	2					
ANR	6349449	ParameterList	"SLF_ENUMERATE * lf_enumerate , unsigned char * leaf_data , unsigned int * read_bytes , unsigned int len"		6349323	3					
ANR	6349450	Parameter	SLF_ENUMERATE * lf_enumerate	1660:30:39617:39643	6349323	0	True				
ANR	6349451	ParameterType	SLF_ENUMERATE *		6349323	0					
ANR	6349452	Identifier	lf_enumerate		6349323	1					
ANR	6349453	Parameter	unsigned char * leaf_data	1660:59:39646:39669	6349323	1	True				
ANR	6349454	ParameterType	unsigned char *		6349323	0					
ANR	6349455	Identifier	leaf_data		6349323	1					
ANR	6349456	Parameter	unsigned int * read_bytes	1660:85:39672:39695	6349323	2	True				
ANR	6349457	ParameterType	unsigned int *		6349323	0					
ANR	6349458	Identifier	read_bytes		6349323	1					
ANR	6349459	Parameter	unsigned int len	1660:111:39698:39713	6349323	3	True				
ANR	6349460	ParameterType	unsigned int		6349323	0					
ANR	6349461	Identifier	len		6349323	1					
ANR	6349462	CFGEntryNode	ENTRY		6349323		True				
ANR	6349463	CFGExitNode	EXIT		6349323		True				
ANR	6349464	Symbol	lf_enumerate -> enum_value . name_or_val		6349323						
ANR	6349465	Symbol	* lf_enumerate		6349323						
ANR	6349466	Symbol	leaf_data		6349323						
ANR	6349467	Symbol	lf_enumerate -> enum_value		6349323						
ANR	6349468	Symbol	& lf_enumerate -> enum_value		6349323						
ANR	6349469	Symbol	read_bytes		6349323						
ANR	6349470	Symbol	lf_enumerate -> pad		6349323						
ANR	6349471	Symbol	lf_enumerate		6349323						
ANR	6349472	Symbol	* read_bytes		6349323						
ANR	6349473	Symbol	ut16		6349323						
ANR	6349474	Symbol	len		6349323						
ANR	6349475	Symbol	lf_enumerate -> fldattr		6349323						
ANR	6349476	Symbol	read_bytes_before		6349323						
ANR	6349477	Symbol	lf_enumerate -> fldattr . fldattr		6349323						
ANR	6349478	Symbol	ut8		6349323						
ANR	6349479	Symbol	tmp_read_bytes_before		6349323						
ANR	6349480	Function	parse_lf_nesttype	1684:0:40457:40965							
ANR	6349481	FunctionDef	"parse_lf_nesttype (SLF_NESTTYPE * lf_nesttype , unsigned char * leaf_data , unsigned int * read_bytes , unsigned int len)"		6349480	0					
ANR	6349482	CompoundStatement		1685:0:40583:40965	6349480	0					
ANR	6349483	IdentifierDeclStatement	unsigned int read_bytes_before = * read_bytes ;	1686:1:40586:40630	6349480	0	True				
ANR	6349484	IdentifierDecl	read_bytes_before = * read_bytes		6349480	0					
ANR	6349485	IdentifierDeclType	unsigned int		6349480	0					
ANR	6349486	Identifier	read_bytes_before		6349480	1					
ANR	6349487	AssignmentExpression	read_bytes_before = * read_bytes		6349480	2		=			
ANR	6349488	Identifier	read_bytes_before		6349480	0					
ANR	6349489	UnaryOperationExpression	* read_bytes		6349480	1					
ANR	6349490	UnaryOperator	*		6349480	0					
ANR	6349491	Identifier	read_bytes		6349480	1					
ANR	6349492	ExpressionStatement	lf_nesttype -> name . name = 0	1688:1:40634:40660	6349480	1	True				
ANR	6349493	AssignmentExpression	lf_nesttype -> name . name = 0		6349480	0		=			
ANR	6349494	MemberAccess	lf_nesttype -> name . name		6349480	0					
ANR	6349495	PtrMemberAccess	lf_nesttype -> name		6349480	0					
ANR	6349496	Identifier	lf_nesttype		6349480	0					
ANR	6349497	Identifier	name		6349480	1					
ANR	6349498	Identifier	name		6349480	1					
ANR	6349499	PrimaryExpression	0		6349480	1					
ANR	6349500	ExpressionStatement	"READ2 ( * read_bytes , len , lf_nesttype -> pad , leaf_data , ut16 )"	1690:1:40664:40722	6349480	2	True				
ANR	6349501	CallExpression	"READ2 ( * read_bytes , len , lf_nesttype -> pad , leaf_data , ut16 )"		6349480	0					
ANR	6349502	Callee	READ2		6349480	0					
ANR	6349503	Identifier	READ2		6349480	0					
ANR	6349504	ArgumentList	* read_bytes		6349480	1					
ANR	6349505	Argument	* read_bytes		6349480	0					
ANR	6349506	UnaryOperationExpression	* read_bytes		6349480	0					
ANR	6349507	UnaryOperator	*		6349480	0					
ANR	6349508	Identifier	read_bytes		6349480	1					
ANR	6349509	Argument	len		6349480	1					
ANR	6349510	Identifier	len		6349480	0					
ANR	6349511	Argument	lf_nesttype -> pad		6349480	2					
ANR	6349512	PtrMemberAccess	lf_nesttype -> pad		6349480	0					
ANR	6349513	Identifier	lf_nesttype		6349480	0					
ANR	6349514	Identifier	pad		6349480	1					
ANR	6349515	Argument	leaf_data		6349480	3					
ANR	6349516	Identifier	leaf_data		6349480	0					
ANR	6349517	Argument	ut16		6349480	4					
ANR	6349518	Identifier	ut16		6349480	0					
ANR	6349519	ExpressionStatement	"READ4 ( * read_bytes , len , lf_nesttype -> index , leaf_data , ut16 )"	1691:1:40725:40785	6349480	3	True				
ANR	6349520	CallExpression	"READ4 ( * read_bytes , len , lf_nesttype -> index , leaf_data , ut16 )"		6349480	0					
ANR	6349521	Callee	READ4		6349480	0					
ANR	6349522	Identifier	READ4		6349480	0					
ANR	6349523	ArgumentList	* read_bytes		6349480	1					
ANR	6349524	Argument	* read_bytes		6349480	0					
ANR	6349525	UnaryOperationExpression	* read_bytes		6349480	0					
ANR	6349526	UnaryOperator	*		6349480	0					
ANR	6349527	Identifier	read_bytes		6349480	1					
ANR	6349528	Argument	len		6349480	1					
ANR	6349529	Identifier	len		6349480	0					
ANR	6349530	Argument	lf_nesttype -> index		6349480	2					
ANR	6349531	PtrMemberAccess	lf_nesttype -> index		6349480	0					
ANR	6349532	Identifier	lf_nesttype		6349480	0					
ANR	6349533	Identifier	index		6349480	1					
ANR	6349534	Argument	leaf_data		6349480	3					
ANR	6349535	Identifier	leaf_data		6349480	0					
ANR	6349536	Argument	ut16		6349480	4					
ANR	6349537	Identifier	ut16		6349480	0					
ANR	6349538	ExpressionStatement	"parse_sctring ( & lf_nesttype -> name , leaf_data , read_bytes , len )"	1693:1:40789:40850	6349480	4	True				
ANR	6349539	CallExpression	"parse_sctring ( & lf_nesttype -> name , leaf_data , read_bytes , len )"		6349480	0					
ANR	6349540	Callee	parse_sctring		6349480	0					
ANR	6349541	Identifier	parse_sctring		6349480	0					
ANR	6349542	ArgumentList	& lf_nesttype -> name		6349480	1					
ANR	6349543	Argument	& lf_nesttype -> name		6349480	0					
ANR	6349544	UnaryOperationExpression	& lf_nesttype -> name		6349480	0					
ANR	6349545	UnaryOperator	&		6349480	0					
ANR	6349546	PtrMemberAccess	lf_nesttype -> name		6349480	1					
ANR	6349547	Identifier	lf_nesttype		6349480	0					
ANR	6349548	Identifier	name		6349480	1					
ANR	6349549	Argument	leaf_data		6349480	1					
ANR	6349550	Identifier	leaf_data		6349480	0					
ANR	6349551	Argument	read_bytes		6349480	2					
ANR	6349552	Identifier	read_bytes		6349480	0					
ANR	6349553	Argument	len		6349480	3					
ANR	6349554	Identifier	len		6349480	0					
ANR	6349555	ReturnStatement	return * read_bytes - read_bytes_before ;	1696:1:40925:40963	6349480	5	True				
ANR	6349556	AdditiveExpression	* read_bytes - read_bytes_before		6349480	0		-			
ANR	6349557	UnaryOperationExpression	* read_bytes		6349480	0					
ANR	6349558	UnaryOperator	*		6349480	0					
ANR	6349559	Identifier	read_bytes		6349480	1					
ANR	6349560	Identifier	read_bytes_before		6349480	1					
ANR	6349561	ReturnType	static int		6349480	1					
ANR	6349562	Identifier	parse_lf_nesttype		6349480	2					
ANR	6349563	ParameterList	"SLF_NESTTYPE * lf_nesttype , unsigned char * leaf_data , unsigned int * read_bytes , unsigned int len"		6349480	3					
ANR	6349564	Parameter	SLF_NESTTYPE * lf_nesttype	1684:29:40486:40510	6349480	0	True				
ANR	6349565	ParameterType	SLF_NESTTYPE *		6349480	0					
ANR	6349566	Identifier	lf_nesttype		6349480	1					
ANR	6349567	Parameter	unsigned char * leaf_data	1684:56:40513:40536	6349480	1	True				
ANR	6349568	ParameterType	unsigned char *		6349480	0					
ANR	6349569	Identifier	leaf_data		6349480	1					
ANR	6349570	Parameter	unsigned int * read_bytes	1684:82:40539:40562	6349480	2	True				
ANR	6349571	ParameterType	unsigned int *		6349480	0					
ANR	6349572	Identifier	read_bytes		6349480	1					
ANR	6349573	Parameter	unsigned int len	1684:108:40565:40580	6349480	3	True				
ANR	6349574	ParameterType	unsigned int		6349480	0					
ANR	6349575	Identifier	len		6349480	1					
ANR	6349576	CFGEntryNode	ENTRY		6349480		True				
ANR	6349577	CFGExitNode	EXIT		6349480		True				
ANR	6349578	Symbol	leaf_data		6349480						
ANR	6349579	Symbol	lf_nesttype -> name . name		6349480						
ANR	6349580	Symbol	* lf_nesttype		6349480						
ANR	6349581	Symbol	lf_nesttype -> pad		6349480						
ANR	6349582	Symbol	& lf_nesttype -> name		6349480						
ANR	6349583	Symbol	lf_nesttype		6349480						
ANR	6349584	Symbol	read_bytes		6349480						
ANR	6349585	Symbol	* read_bytes		6349480						
ANR	6349586	Symbol	lf_nesttype -> name		6349480						
ANR	6349587	Symbol	ut16		6349480						
ANR	6349588	Symbol	lf_nesttype -> index		6349480						
ANR	6349589	Symbol	len		6349480						
ANR	6349590	Symbol	read_bytes_before		6349480						
ANR	6349591	Function	parse_lf_method	1700:0:41048:41780							
ANR	6349592	FunctionDef	"parse_lf_method (SLF_METHOD * lf_method , unsigned char * leaf_data , unsigned int * read_bytes , unsigned int len)"		6349591	0					
ANR	6349593	CompoundStatement		1701:0:41168:41780	6349591	0					
ANR	6349594	IdentifierDeclStatement	"unsigned int read_bytes_before = * read_bytes , tmp_read_bytes_before = 0 ;"	1702:1:41171:41242	6349591	0	True				
ANR	6349595	IdentifierDecl	read_bytes_before = * read_bytes		6349591	0					
ANR	6349596	IdentifierDeclType	unsigned int		6349591	0					
ANR	6349597	Identifier	read_bytes_before		6349591	1					
ANR	6349598	AssignmentExpression	read_bytes_before = * read_bytes		6349591	2		=			
ANR	6349599	Identifier	read_bytes_before		6349591	0					
ANR	6349600	UnaryOperationExpression	* read_bytes		6349591	1					
ANR	6349601	UnaryOperator	*		6349591	0					
ANR	6349602	Identifier	read_bytes		6349591	1					
ANR	6349603	IdentifierDecl	tmp_read_bytes_before = 0		6349591	1					
ANR	6349604	IdentifierDeclType	unsigned int		6349591	0					
ANR	6349605	Identifier	tmp_read_bytes_before		6349591	1					
ANR	6349606	AssignmentExpression	tmp_read_bytes_before = 0		6349591	2		=			
ANR	6349607	Identifier	tmp_read_bytes_before		6349591	0					
ANR	6349608	PrimaryExpression	0		6349591	1					
ANR	6349609	ExpressionStatement	lf_method -> name . name = 0	1704:1:41246:41270	6349591	1	True				
ANR	6349610	AssignmentExpression	lf_method -> name . name = 0		6349591	0		=			
ANR	6349611	MemberAccess	lf_method -> name . name		6349591	0					
ANR	6349612	PtrMemberAccess	lf_method -> name		6349591	0					
ANR	6349613	Identifier	lf_method		6349591	0					
ANR	6349614	Identifier	name		6349591	1					
ANR	6349615	Identifier	name		6349591	1					
ANR	6349616	PrimaryExpression	0		6349591	1					
ANR	6349617	ExpressionStatement	"READ2 ( * read_bytes , len , lf_method -> count , leaf_data , ut16 )"	1706:1:41274:41332	6349591	2	True				
ANR	6349618	CallExpression	"READ2 ( * read_bytes , len , lf_method -> count , leaf_data , ut16 )"		6349591	0					
ANR	6349619	Callee	READ2		6349591	0					
ANR	6349620	Identifier	READ2		6349591	0					
ANR	6349621	ArgumentList	* read_bytes		6349591	1					
ANR	6349622	Argument	* read_bytes		6349591	0					
ANR	6349623	UnaryOperationExpression	* read_bytes		6349591	0					
ANR	6349624	UnaryOperator	*		6349591	0					
ANR	6349625	Identifier	read_bytes		6349591	1					
ANR	6349626	Argument	len		6349591	1					
ANR	6349627	Identifier	len		6349591	0					
ANR	6349628	Argument	lf_method -> count		6349591	2					
ANR	6349629	PtrMemberAccess	lf_method -> count		6349591	0					
ANR	6349630	Identifier	lf_method		6349591	0					
ANR	6349631	Identifier	count		6349591	1					
ANR	6349632	Argument	leaf_data		6349591	3					
ANR	6349633	Identifier	leaf_data		6349591	0					
ANR	6349634	Argument	ut16		6349591	4					
ANR	6349635	Identifier	ut16		6349591	0					
ANR	6349636	ExpressionStatement	"READ4 ( * read_bytes , len , lf_method -> mlist , leaf_data , ut32 )"	1707:1:41335:41393	6349591	3	True				
ANR	6349637	CallExpression	"READ4 ( * read_bytes , len , lf_method -> mlist , leaf_data , ut32 )"		6349591	0					
ANR	6349638	Callee	READ4		6349591	0					
ANR	6349639	Identifier	READ4		6349591	0					
ANR	6349640	ArgumentList	* read_bytes		6349591	1					
ANR	6349641	Argument	* read_bytes		6349591	0					
ANR	6349642	UnaryOperationExpression	* read_bytes		6349591	0					
ANR	6349643	UnaryOperator	*		6349591	0					
ANR	6349644	Identifier	read_bytes		6349591	1					
ANR	6349645	Argument	len		6349591	1					
ANR	6349646	Identifier	len		6349591	0					
ANR	6349647	Argument	lf_method -> mlist		6349591	2					
ANR	6349648	PtrMemberAccess	lf_method -> mlist		6349591	0					
ANR	6349649	Identifier	lf_method		6349591	0					
ANR	6349650	Identifier	mlist		6349591	1					
ANR	6349651	Argument	leaf_data		6349591	3					
ANR	6349652	Identifier	leaf_data		6349591	0					
ANR	6349653	Argument	ut32		6349591	4					
ANR	6349654	Identifier	ut32		6349591	0					
ANR	6349655	ExpressionStatement	tmp_read_bytes_before = * read_bytes	1709:1:41397:41432	6349591	4	True				
ANR	6349656	AssignmentExpression	tmp_read_bytes_before = * read_bytes		6349591	0		=			
ANR	6349657	Identifier	tmp_read_bytes_before		6349591	0					
ANR	6349658	UnaryOperationExpression	* read_bytes		6349591	1					
ANR	6349659	UnaryOperator	*		6349591	0					
ANR	6349660	Identifier	read_bytes		6349591	1					
ANR	6349661	ExpressionStatement	"parse_sctring ( & lf_method -> name , leaf_data , read_bytes , len )"	1710:1:41435:41494	6349591	5	True				
ANR	6349662	CallExpression	"parse_sctring ( & lf_method -> name , leaf_data , read_bytes , len )"		6349591	0					
ANR	6349663	Callee	parse_sctring		6349591	0					
ANR	6349664	Identifier	parse_sctring		6349591	0					
ANR	6349665	ArgumentList	& lf_method -> name		6349591	1					
ANR	6349666	Argument	& lf_method -> name		6349591	0					
ANR	6349667	UnaryOperationExpression	& lf_method -> name		6349591	0					
ANR	6349668	UnaryOperator	&		6349591	0					
ANR	6349669	PtrMemberAccess	lf_method -> name		6349591	1					
ANR	6349670	Identifier	lf_method		6349591	0					
ANR	6349671	Identifier	name		6349591	1					
ANR	6349672	Argument	leaf_data		6349591	1					
ANR	6349673	Identifier	leaf_data		6349591	0					
ANR	6349674	Argument	read_bytes		6349591	2					
ANR	6349675	Identifier	read_bytes		6349591	0					
ANR	6349676	Argument	len		6349591	3					
ANR	6349677	Identifier	len		6349591	0					
ANR	6349678	ExpressionStatement	leaf_data += ( * read_bytes - tmp_read_bytes_before )	1711:1:41497:41547	6349591	6	True				
ANR	6349679	AssignmentExpression	leaf_data += ( * read_bytes - tmp_read_bytes_before )		6349591	0		+=			
ANR	6349680	Identifier	leaf_data		6349591	0					
ANR	6349681	AdditiveExpression	* read_bytes - tmp_read_bytes_before		6349591	1		-			
ANR	6349682	UnaryOperationExpression	* read_bytes		6349591	0					
ANR	6349683	UnaryOperator	*		6349591	0					
ANR	6349684	Identifier	read_bytes		6349591	1					
ANR	6349685	Identifier	tmp_read_bytes_before		6349591	1					
ANR	6349686	ExpressionStatement	"PEEK_READ1 ( * read_bytes , len , lf_method -> pad , leaf_data , ut8 )"	1713:1:41551:41611	6349591	7	True				
ANR	6349687	CallExpression	"PEEK_READ1 ( * read_bytes , len , lf_method -> pad , leaf_data , ut8 )"		6349591	0					
ANR	6349688	Callee	PEEK_READ1		6349591	0					
ANR	6349689	Identifier	PEEK_READ1		6349591	0					
ANR	6349690	ArgumentList	* read_bytes		6349591	1					
ANR	6349691	Argument	* read_bytes		6349591	0					
ANR	6349692	UnaryOperationExpression	* read_bytes		6349591	0					
ANR	6349693	UnaryOperator	*		6349591	0					
ANR	6349694	Identifier	read_bytes		6349591	1					
ANR	6349695	Argument	len		6349591	1					
ANR	6349696	Identifier	len		6349591	0					
ANR	6349697	Argument	lf_method -> pad		6349591	2					
ANR	6349698	PtrMemberAccess	lf_method -> pad		6349591	0					
ANR	6349699	Identifier	lf_method		6349591	0					
ANR	6349700	Identifier	pad		6349591	1					
ANR	6349701	Argument	leaf_data		6349591	3					
ANR	6349702	Identifier	leaf_data		6349591	0					
ANR	6349703	Argument	ut8		6349591	4					
ANR	6349704	Identifier	ut8		6349591	0					
ANR	6349705	ExpressionStatement	"PAD_ALIGN ( lf_method -> pad , * read_bytes , leaf_data , len )"	1714:1:41614:41668	6349591	8	True				
ANR	6349706	CallExpression	"PAD_ALIGN ( lf_method -> pad , * read_bytes , leaf_data , len )"		6349591	0					
ANR	6349707	Callee	PAD_ALIGN		6349591	0					
ANR	6349708	Identifier	PAD_ALIGN		6349591	0					
ANR	6349709	ArgumentList	lf_method -> pad		6349591	1					
ANR	6349710	Argument	lf_method -> pad		6349591	0					
ANR	6349711	PtrMemberAccess	lf_method -> pad		6349591	0					
ANR	6349712	Identifier	lf_method		6349591	0					
ANR	6349713	Identifier	pad		6349591	1					
ANR	6349714	Argument	* read_bytes		6349591	1					
ANR	6349715	UnaryOperationExpression	* read_bytes		6349591	0					
ANR	6349716	UnaryOperator	*		6349591	0					
ANR	6349717	Identifier	read_bytes		6349591	1					
ANR	6349718	Argument	leaf_data		6349591	2					
ANR	6349719	Identifier	leaf_data		6349591	0					
ANR	6349720	Argument	len		6349591	3					
ANR	6349721	Identifier	len		6349591	0					
ANR	6349722	ReturnStatement	return * read_bytes - read_bytes_before ;	1718:1:41740:41778	6349591	9	True				
ANR	6349723	AdditiveExpression	* read_bytes - read_bytes_before		6349591	0		-			
ANR	6349724	UnaryOperationExpression	* read_bytes		6349591	0					
ANR	6349725	UnaryOperator	*		6349591	0					
ANR	6349726	Identifier	read_bytes		6349591	1					
ANR	6349727	Identifier	read_bytes_before		6349591	1					
ANR	6349728	ReturnType	static int		6349591	1					
ANR	6349729	Identifier	parse_lf_method		6349591	2					
ANR	6349730	ParameterList	"SLF_METHOD * lf_method , unsigned char * leaf_data , unsigned int * read_bytes , unsigned int len"		6349591	3					
ANR	6349731	Parameter	SLF_METHOD * lf_method	1700:27:41075:41095	6349591	0	True				
ANR	6349732	ParameterType	SLF_METHOD *		6349591	0					
ANR	6349733	Identifier	lf_method		6349591	1					
ANR	6349734	Parameter	unsigned char * leaf_data	1700:50:41098:41121	6349591	1	True				
ANR	6349735	ParameterType	unsigned char *		6349591	0					
ANR	6349736	Identifier	leaf_data		6349591	1					
ANR	6349737	Parameter	unsigned int * read_bytes	1700:76:41124:41147	6349591	2	True				
ANR	6349738	ParameterType	unsigned int *		6349591	0					
ANR	6349739	Identifier	read_bytes		6349591	1					
ANR	6349740	Parameter	unsigned int len	1700:102:41150:41165	6349591	3	True				
ANR	6349741	ParameterType	unsigned int		6349591	0					
ANR	6349742	Identifier	len		6349591	1					
ANR	6349743	CFGEntryNode	ENTRY		6349591		True				
ANR	6349744	CFGExitNode	EXIT		6349591		True				
ANR	6349745	Symbol	leaf_data		6349591						
ANR	6349746	Symbol	lf_method -> mlist		6349591						
ANR	6349747	Symbol	ut32		6349591						
ANR	6349748	Symbol	lf_method -> count		6349591						
ANR	6349749	Symbol	lf_method		6349591						
ANR	6349750	Symbol	read_bytes		6349591						
ANR	6349751	Symbol	* lf_method		6349591						
ANR	6349752	Symbol	lf_method -> name		6349591						
ANR	6349753	Symbol	& lf_method -> name		6349591						
ANR	6349754	Symbol	* read_bytes		6349591						
ANR	6349755	Symbol	ut16		6349591						
ANR	6349756	Symbol	len		6349591						
ANR	6349757	Symbol	lf_method -> name . name		6349591						
ANR	6349758	Symbol	read_bytes_before		6349591						
ANR	6349759	Symbol	ut8		6349591						
ANR	6349760	Symbol	lf_method -> pad		6349591						
ANR	6349761	Symbol	tmp_read_bytes_before		6349591						
ANR	6349762	Function	parse_lf_member	1722:0:41863:42638							
ANR	6349763	FunctionDef	"parse_lf_member (SLF_MEMBER * lf_member , unsigned char * leaf_data , unsigned int * read_bytes , unsigned int len)"		6349762	0					
ANR	6349764	CompoundStatement		1723:0:41983:42638	6349762	0					
ANR	6349765	IdentifierDeclStatement	"int read_bytes_before = * read_bytes , tmp_read_bytes_before = 0 ;"	1724:1:41986:42048	6349762	0	True				
ANR	6349766	IdentifierDecl	read_bytes_before = * read_bytes		6349762	0					
ANR	6349767	IdentifierDeclType	int		6349762	0					
ANR	6349768	Identifier	read_bytes_before		6349762	1					
ANR	6349769	AssignmentExpression	read_bytes_before = * read_bytes		6349762	2		=			
ANR	6349770	Identifier	read_bytes_before		6349762	0					
ANR	6349771	UnaryOperationExpression	* read_bytes		6349762	1					
ANR	6349772	UnaryOperator	*		6349762	0					
ANR	6349773	Identifier	read_bytes		6349762	1					
ANR	6349774	IdentifierDecl	tmp_read_bytes_before = 0		6349762	1					
ANR	6349775	IdentifierDeclType	int		6349762	0					
ANR	6349776	Identifier	tmp_read_bytes_before		6349762	1					
ANR	6349777	AssignmentExpression	tmp_read_bytes_before = 0		6349762	2		=			
ANR	6349778	Identifier	tmp_read_bytes_before		6349762	0					
ANR	6349779	PrimaryExpression	0		6349762	1					
ANR	6349780	ExpressionStatement	lf_member -> offset . name_or_val = 0	1726:1:42052:42085	6349762	1	True				
ANR	6349781	AssignmentExpression	lf_member -> offset . name_or_val = 0		6349762	0		=			
ANR	6349782	MemberAccess	lf_member -> offset . name_or_val		6349762	0					
ANR	6349783	PtrMemberAccess	lf_member -> offset		6349762	0					
ANR	6349784	Identifier	lf_member		6349762	0					
ANR	6349785	Identifier	offset		6349762	1					
ANR	6349786	Identifier	name_or_val		6349762	1					
ANR	6349787	PrimaryExpression	0		6349762	1					
ANR	6349788	ExpressionStatement	"READ2 ( * read_bytes , len , lf_member -> fldattr . fldattr , leaf_data , ut16 )"	1728:1:42089:42157	6349762	2	True				
ANR	6349789	CallExpression	"READ2 ( * read_bytes , len , lf_member -> fldattr . fldattr , leaf_data , ut16 )"		6349762	0					
ANR	6349790	Callee	READ2		6349762	0					
ANR	6349791	Identifier	READ2		6349762	0					
ANR	6349792	ArgumentList	* read_bytes		6349762	1					
ANR	6349793	Argument	* read_bytes		6349762	0					
ANR	6349794	UnaryOperationExpression	* read_bytes		6349762	0					
ANR	6349795	UnaryOperator	*		6349762	0					
ANR	6349796	Identifier	read_bytes		6349762	1					
ANR	6349797	Argument	len		6349762	1					
ANR	6349798	Identifier	len		6349762	0					
ANR	6349799	Argument	lf_member -> fldattr . fldattr		6349762	2					
ANR	6349800	MemberAccess	lf_member -> fldattr . fldattr		6349762	0					
ANR	6349801	PtrMemberAccess	lf_member -> fldattr		6349762	0					
ANR	6349802	Identifier	lf_member		6349762	0					
ANR	6349803	Identifier	fldattr		6349762	1					
ANR	6349804	Identifier	fldattr		6349762	1					
ANR	6349805	Argument	leaf_data		6349762	3					
ANR	6349806	Identifier	leaf_data		6349762	0					
ANR	6349807	Argument	ut16		6349762	4					
ANR	6349808	Identifier	ut16		6349762	0					
ANR	6349809	ExpressionStatement	"READ4 ( * read_bytes , len , lf_member -> index , leaf_data , ut32 )"	1729:1:42160:42218	6349762	3	True				
ANR	6349810	CallExpression	"READ4 ( * read_bytes , len , lf_member -> index , leaf_data , ut32 )"		6349762	0					
ANR	6349811	Callee	READ4		6349762	0					
ANR	6349812	Identifier	READ4		6349762	0					
ANR	6349813	ArgumentList	* read_bytes		6349762	1					
ANR	6349814	Argument	* read_bytes		6349762	0					
ANR	6349815	UnaryOperationExpression	* read_bytes		6349762	0					
ANR	6349816	UnaryOperator	*		6349762	0					
ANR	6349817	Identifier	read_bytes		6349762	1					
ANR	6349818	Argument	len		6349762	1					
ANR	6349819	Identifier	len		6349762	0					
ANR	6349820	Argument	lf_member -> index		6349762	2					
ANR	6349821	PtrMemberAccess	lf_member -> index		6349762	0					
ANR	6349822	Identifier	lf_member		6349762	0					
ANR	6349823	Identifier	index		6349762	1					
ANR	6349824	Argument	leaf_data		6349762	3					
ANR	6349825	Identifier	leaf_data		6349762	0					
ANR	6349826	Argument	ut32		6349762	4					
ANR	6349827	Identifier	ut32		6349762	0					
ANR	6349828	ExpressionStatement	tmp_read_bytes_before = * read_bytes	1731:1:42222:42257	6349762	4	True				
ANR	6349829	AssignmentExpression	tmp_read_bytes_before = * read_bytes		6349762	0		=			
ANR	6349830	Identifier	tmp_read_bytes_before		6349762	0					
ANR	6349831	UnaryOperationExpression	* read_bytes		6349762	1					
ANR	6349832	UnaryOperator	*		6349762	0					
ANR	6349833	Identifier	read_bytes		6349762	1					
ANR	6349834	ExpressionStatement	"parse_sval ( & lf_member -> offset , leaf_data , read_bytes , len )"	1732:1:42260:42318	6349762	5	True				
ANR	6349835	CallExpression	"parse_sval ( & lf_member -> offset , leaf_data , read_bytes , len )"		6349762	0					
ANR	6349836	Callee	parse_sval		6349762	0					
ANR	6349837	Identifier	parse_sval		6349762	0					
ANR	6349838	ArgumentList	& lf_member -> offset		6349762	1					
ANR	6349839	Argument	& lf_member -> offset		6349762	0					
ANR	6349840	UnaryOperationExpression	& lf_member -> offset		6349762	0					
ANR	6349841	UnaryOperator	&		6349762	0					
ANR	6349842	PtrMemberAccess	lf_member -> offset		6349762	1					
ANR	6349843	Identifier	lf_member		6349762	0					
ANR	6349844	Identifier	offset		6349762	1					
ANR	6349845	Argument	leaf_data		6349762	1					
ANR	6349846	Identifier	leaf_data		6349762	0					
ANR	6349847	Argument	read_bytes		6349762	2					
ANR	6349848	Identifier	read_bytes		6349762	0					
ANR	6349849	Argument	len		6349762	3					
ANR	6349850	Identifier	len		6349762	0					
ANR	6349851	ExpressionStatement	leaf_data += ( * read_bytes - tmp_read_bytes_before )	1733:1:42321:42371	6349762	6	True				
ANR	6349852	AssignmentExpression	leaf_data += ( * read_bytes - tmp_read_bytes_before )		6349762	0		+=			
ANR	6349853	Identifier	leaf_data		6349762	0					
ANR	6349854	AdditiveExpression	* read_bytes - tmp_read_bytes_before		6349762	1		-			
ANR	6349855	UnaryOperationExpression	* read_bytes		6349762	0					
ANR	6349856	UnaryOperator	*		6349762	0					
ANR	6349857	Identifier	read_bytes		6349762	1					
ANR	6349858	Identifier	tmp_read_bytes_before		6349762	1					
ANR	6349859	ExpressionStatement	"PEEK_READ1 ( * read_bytes , len , lf_member -> pad , leaf_data , ut8 )"	1735:1:42375:42435	6349762	7	True				
ANR	6349860	CallExpression	"PEEK_READ1 ( * read_bytes , len , lf_member -> pad , leaf_data , ut8 )"		6349762	0					
ANR	6349861	Callee	PEEK_READ1		6349762	0					
ANR	6349862	Identifier	PEEK_READ1		6349762	0					
ANR	6349863	ArgumentList	* read_bytes		6349762	1					
ANR	6349864	Argument	* read_bytes		6349762	0					
ANR	6349865	UnaryOperationExpression	* read_bytes		6349762	0					
ANR	6349866	UnaryOperator	*		6349762	0					
ANR	6349867	Identifier	read_bytes		6349762	1					
ANR	6349868	Argument	len		6349762	1					
ANR	6349869	Identifier	len		6349762	0					
ANR	6349870	Argument	lf_member -> pad		6349762	2					
ANR	6349871	PtrMemberAccess	lf_member -> pad		6349762	0					
ANR	6349872	Identifier	lf_member		6349762	0					
ANR	6349873	Identifier	pad		6349762	1					
ANR	6349874	Argument	leaf_data		6349762	3					
ANR	6349875	Identifier	leaf_data		6349762	0					
ANR	6349876	Argument	ut8		6349762	4					
ANR	6349877	Identifier	ut8		6349762	0					
ANR	6349878	ExpressionStatement	"PAD_ALIGN ( lf_member -> pad , * read_bytes , leaf_data , len )"	1736:1:42438:42492	6349762	8	True				
ANR	6349879	CallExpression	"PAD_ALIGN ( lf_member -> pad , * read_bytes , leaf_data , len )"		6349762	0					
ANR	6349880	Callee	PAD_ALIGN		6349762	0					
ANR	6349881	Identifier	PAD_ALIGN		6349762	0					
ANR	6349882	ArgumentList	lf_member -> pad		6349762	1					
ANR	6349883	Argument	lf_member -> pad		6349762	0					
ANR	6349884	PtrMemberAccess	lf_member -> pad		6349762	0					
ANR	6349885	Identifier	lf_member		6349762	0					
ANR	6349886	Identifier	pad		6349762	1					
ANR	6349887	Argument	* read_bytes		6349762	1					
ANR	6349888	UnaryOperationExpression	* read_bytes		6349762	0					
ANR	6349889	UnaryOperator	*		6349762	0					
ANR	6349890	Identifier	read_bytes		6349762	1					
ANR	6349891	Argument	leaf_data		6349762	2					
ANR	6349892	Identifier	leaf_data		6349762	0					
ANR	6349893	Argument	len		6349762	3					
ANR	6349894	Identifier	len		6349762	0					
ANR	6349895	ReturnStatement	return ( * read_bytes - read_bytes_before ) ;	1742:1:42596:42636	6349762	9	True				
ANR	6349896	AdditiveExpression	* read_bytes - read_bytes_before		6349762	0		-			
ANR	6349897	UnaryOperationExpression	* read_bytes		6349762	0					
ANR	6349898	UnaryOperator	*		6349762	0					
ANR	6349899	Identifier	read_bytes		6349762	1					
ANR	6349900	Identifier	read_bytes_before		6349762	1					
ANR	6349901	ReturnType	static int		6349762	1					
ANR	6349902	Identifier	parse_lf_member		6349762	2					
ANR	6349903	ParameterList	"SLF_MEMBER * lf_member , unsigned char * leaf_data , unsigned int * read_bytes , unsigned int len"		6349762	3					
ANR	6349904	Parameter	SLF_MEMBER * lf_member	1722:27:41890:41910	6349762	0	True				
ANR	6349905	ParameterType	SLF_MEMBER *		6349762	0					
ANR	6349906	Identifier	lf_member		6349762	1					
ANR	6349907	Parameter	unsigned char * leaf_data	1722:50:41913:41936	6349762	1	True				
ANR	6349908	ParameterType	unsigned char *		6349762	0					
ANR	6349909	Identifier	leaf_data		6349762	1					
ANR	6349910	Parameter	unsigned int * read_bytes	1722:76:41939:41962	6349762	2	True				
ANR	6349911	ParameterType	unsigned int *		6349762	0					
ANR	6349912	Identifier	read_bytes		6349762	1					
ANR	6349913	Parameter	unsigned int len	1722:102:41965:41980	6349762	3	True				
ANR	6349914	ParameterType	unsigned int		6349762	0					
ANR	6349915	Identifier	len		6349762	1					
ANR	6349916	CFGEntryNode	ENTRY		6349762		True				
ANR	6349917	CFGExitNode	EXIT		6349762		True				
ANR	6349918	Symbol	leaf_data		6349762						
ANR	6349919	Symbol	lf_member -> fldattr . fldattr		6349762						
ANR	6349920	Symbol	lf_member -> offset . name_or_val		6349762						
ANR	6349921	Symbol	ut32		6349762						
ANR	6349922	Symbol	read_bytes		6349762						
ANR	6349923	Symbol	& lf_member -> offset		6349762						
ANR	6349924	Symbol	* read_bytes		6349762						
ANR	6349925	Symbol	ut16		6349762						
ANR	6349926	Symbol	len		6349762						
ANR	6349927	Symbol	read_bytes_before		6349762						
ANR	6349928	Symbol	* lf_member		6349762						
ANR	6349929	Symbol	lf_member		6349762						
ANR	6349930	Symbol	lf_member -> pad		6349762						
ANR	6349931	Symbol	lf_member -> offset		6349762						
ANR	6349932	Symbol	ut8		6349762						
ANR	6349933	Symbol	lf_member -> index		6349762						
ANR	6349934	Symbol	tmp_read_bytes_before		6349762						
ANR	6349935	Symbol	lf_member -> fldattr		6349762						
ANR	6349936	Function	parse_lf_onemethod	1746:0:42721:43720							
ANR	6349937	FunctionDef	"parse_lf_onemethod (SLF_ONEMETHOD * lf_onemethod , unsigned char * leaf_data , unsigned int * read_bytes , unsigned int len)"		6349936	0					
ANR	6349938	CompoundStatement		1747:0:42850:43720	6349936	0					
ANR	6349939	IdentifierDeclStatement	"int read_bytes_before = * read_bytes , tmp_before_read_bytes = 0 ;"	1748:1:42853:42915	6349936	0	True				
ANR	6349940	IdentifierDecl	read_bytes_before = * read_bytes		6349936	0					
ANR	6349941	IdentifierDeclType	int		6349936	0					
ANR	6349942	Identifier	read_bytes_before		6349936	1					
ANR	6349943	AssignmentExpression	read_bytes_before = * read_bytes		6349936	2		=			
ANR	6349944	Identifier	read_bytes_before		6349936	0					
ANR	6349945	UnaryOperationExpression	* read_bytes		6349936	1					
ANR	6349946	UnaryOperator	*		6349936	0					
ANR	6349947	Identifier	read_bytes		6349936	1					
ANR	6349948	IdentifierDecl	tmp_before_read_bytes = 0		6349936	1					
ANR	6349949	IdentifierDeclType	int		6349936	0					
ANR	6349950	Identifier	tmp_before_read_bytes		6349936	1					
ANR	6349951	AssignmentExpression	tmp_before_read_bytes = 0		6349936	2		=			
ANR	6349952	Identifier	tmp_before_read_bytes		6349936	0					
ANR	6349953	PrimaryExpression	0		6349936	1					
ANR	6349954	ExpressionStatement	lf_onemethod -> val . str_data . name = 0	1750:1:42919:42954	6349936	1	True				
ANR	6349955	AssignmentExpression	lf_onemethod -> val . str_data . name = 0		6349936	0		=			
ANR	6349956	MemberAccess	lf_onemethod -> val . str_data . name		6349936	0					
ANR	6349957	MemberAccess	lf_onemethod -> val . str_data		6349936	0					
ANR	6349958	PtrMemberAccess	lf_onemethod -> val		6349936	0					
ANR	6349959	Identifier	lf_onemethod		6349936	0					
ANR	6349960	Identifier	val		6349936	1					
ANR	6349961	Identifier	str_data		6349936	1					
ANR	6349962	Identifier	name		6349936	1					
ANR	6349963	PrimaryExpression	0		6349936	1					
ANR	6349964	ExpressionStatement	lf_onemethod -> val . val = 0	1751:1:42957:42982	6349936	2	True				
ANR	6349965	AssignmentExpression	lf_onemethod -> val . val = 0		6349936	0		=			
ANR	6349966	MemberAccess	lf_onemethod -> val . val		6349936	0					
ANR	6349967	PtrMemberAccess	lf_onemethod -> val		6349936	0					
ANR	6349968	Identifier	lf_onemethod		6349936	0					
ANR	6349969	Identifier	val		6349936	1					
ANR	6349970	Identifier	val		6349936	1					
ANR	6349971	PrimaryExpression	0		6349936	1					
ANR	6349972	ExpressionStatement	"READ2 ( * read_bytes , len , lf_onemethod -> fldattr . fldattr , leaf_data , ut16 )"	1753:1:42986:43057	6349936	3	True				
ANR	6349973	CallExpression	"READ2 ( * read_bytes , len , lf_onemethod -> fldattr . fldattr , leaf_data , ut16 )"		6349936	0					
ANR	6349974	Callee	READ2		6349936	0					
ANR	6349975	Identifier	READ2		6349936	0					
ANR	6349976	ArgumentList	* read_bytes		6349936	1					
ANR	6349977	Argument	* read_bytes		6349936	0					
ANR	6349978	UnaryOperationExpression	* read_bytes		6349936	0					
ANR	6349979	UnaryOperator	*		6349936	0					
ANR	6349980	Identifier	read_bytes		6349936	1					
ANR	6349981	Argument	len		6349936	1					
ANR	6349982	Identifier	len		6349936	0					
ANR	6349983	Argument	lf_onemethod -> fldattr . fldattr		6349936	2					
ANR	6349984	MemberAccess	lf_onemethod -> fldattr . fldattr		6349936	0					
ANR	6349985	PtrMemberAccess	lf_onemethod -> fldattr		6349936	0					
ANR	6349986	Identifier	lf_onemethod		6349936	0					
ANR	6349987	Identifier	fldattr		6349936	1					
ANR	6349988	Identifier	fldattr		6349936	1					
ANR	6349989	Argument	leaf_data		6349936	3					
ANR	6349990	Identifier	leaf_data		6349936	0					
ANR	6349991	Argument	ut16		6349936	4					
ANR	6349992	Identifier	ut16		6349936	0					
ANR	6349993	ExpressionStatement	"READ4 ( * read_bytes , len , lf_onemethod -> index , leaf_data , ut32 )"	1754:1:43060:43121	6349936	4	True				
ANR	6349994	CallExpression	"READ4 ( * read_bytes , len , lf_onemethod -> index , leaf_data , ut32 )"		6349936	0					
ANR	6349995	Callee	READ4		6349936	0					
ANR	6349996	Identifier	READ4		6349936	0					
ANR	6349997	ArgumentList	* read_bytes		6349936	1					
ANR	6349998	Argument	* read_bytes		6349936	0					
ANR	6349999	UnaryOperationExpression	* read_bytes		6349936	0					
ANR	6350000	UnaryOperator	*		6349936	0					
ANR	6350001	Identifier	read_bytes		6349936	1					
ANR	6350002	Argument	len		6349936	1					
ANR	6350003	Identifier	len		6349936	0					
ANR	6350004	Argument	lf_onemethod -> index		6349936	2					
ANR	6350005	PtrMemberAccess	lf_onemethod -> index		6349936	0					
ANR	6350006	Identifier	lf_onemethod		6349936	0					
ANR	6350007	Identifier	index		6349936	1					
ANR	6350008	Argument	leaf_data		6349936	3					
ANR	6350009	Identifier	leaf_data		6349936	0					
ANR	6350010	Argument	ut32		6349936	4					
ANR	6350011	Identifier	ut32		6349936	0					
ANR	6350012	ExpressionStatement	lf_onemethod -> fldattr . fldattr = SWAP_UINT16 ( lf_onemethod -> fldattr . fldattr )	1756:1:43125:43199	6349936	5	True				
ANR	6350013	AssignmentExpression	lf_onemethod -> fldattr . fldattr = SWAP_UINT16 ( lf_onemethod -> fldattr . fldattr )		6349936	0		=			
ANR	6350014	MemberAccess	lf_onemethod -> fldattr . fldattr		6349936	0					
ANR	6350015	PtrMemberAccess	lf_onemethod -> fldattr		6349936	0					
ANR	6350016	Identifier	lf_onemethod		6349936	0					
ANR	6350017	Identifier	fldattr		6349936	1					
ANR	6350018	Identifier	fldattr		6349936	1					
ANR	6350019	CallExpression	SWAP_UINT16 ( lf_onemethod -> fldattr . fldattr )		6349936	1					
ANR	6350020	Callee	SWAP_UINT16		6349936	0					
ANR	6350021	Identifier	SWAP_UINT16		6349936	0					
ANR	6350022	ArgumentList	lf_onemethod -> fldattr . fldattr		6349936	1					
ANR	6350023	Argument	lf_onemethod -> fldattr . fldattr		6349936	0					
ANR	6350024	MemberAccess	lf_onemethod -> fldattr . fldattr		6349936	0					
ANR	6350025	PtrMemberAccess	lf_onemethod -> fldattr		6349936	0					
ANR	6350026	Identifier	lf_onemethod		6349936	0					
ANR	6350027	Identifier	fldattr		6349936	1					
ANR	6350028	Identifier	fldattr		6349936	1					
ANR	6350029	IfStatement	if ( ( lf_onemethod -> fldattr . bits . mprop == eMTintro ) || ( lf_onemethod -> fldattr . bits . mprop == eMTpureintro ) )		6349936	6					
ANR	6350030	Condition	( lf_onemethod -> fldattr . bits . mprop == eMTintro ) || ( lf_onemethod -> fldattr . bits . mprop == eMTpureintro )	1758:4:43206:43307	6349936	0	True				
ANR	6350031	OrExpression	( lf_onemethod -> fldattr . bits . mprop == eMTintro ) || ( lf_onemethod -> fldattr . bits . mprop == eMTpureintro )		6349936	0		||			
ANR	6350032	EqualityExpression	lf_onemethod -> fldattr . bits . mprop == eMTintro		6349936	0		==			
ANR	6350033	MemberAccess	lf_onemethod -> fldattr . bits . mprop		6349936	0					
ANR	6350034	MemberAccess	lf_onemethod -> fldattr . bits		6349936	0					
ANR	6350035	PtrMemberAccess	lf_onemethod -> fldattr		6349936	0					
ANR	6350036	Identifier	lf_onemethod		6349936	0					
ANR	6350037	Identifier	fldattr		6349936	1					
ANR	6350038	Identifier	bits		6349936	1					
ANR	6350039	Identifier	mprop		6349936	1					
ANR	6350040	Identifier	eMTintro		6349936	1					
ANR	6350041	EqualityExpression	lf_onemethod -> fldattr . bits . mprop == eMTpureintro		6349936	1		==			
ANR	6350042	MemberAccess	lf_onemethod -> fldattr . bits . mprop		6349936	0					
ANR	6350043	MemberAccess	lf_onemethod -> fldattr . bits		6349936	0					
ANR	6350044	PtrMemberAccess	lf_onemethod -> fldattr		6349936	0					
ANR	6350045	Identifier	lf_onemethod		6349936	0					
ANR	6350046	Identifier	fldattr		6349936	1					
ANR	6350047	Identifier	bits		6349936	1					
ANR	6350048	Identifier	mprop		6349936	1					
ANR	6350049	Identifier	eMTpureintro		6349936	1					
ANR	6350050	CompoundStatement		13:54:459:459	6349936	1					
ANR	6350051	ExpressionStatement	"READ4 ( * read_bytes , len , lf_onemethod -> val . val , leaf_data , ut32 )"	1760:2:43314:43377	6349936	0	True				
ANR	6350052	CallExpression	"READ4 ( * read_bytes , len , lf_onemethod -> val . val , leaf_data , ut32 )"		6349936	0					
ANR	6350053	Callee	READ4		6349936	0					
ANR	6350054	Identifier	READ4		6349936	0					
ANR	6350055	ArgumentList	* read_bytes		6349936	1					
ANR	6350056	Argument	* read_bytes		6349936	0					
ANR	6350057	UnaryOperationExpression	* read_bytes		6349936	0					
ANR	6350058	UnaryOperator	*		6349936	0					
ANR	6350059	Identifier	read_bytes		6349936	1					
ANR	6350060	Argument	len		6349936	1					
ANR	6350061	Identifier	len		6349936	0					
ANR	6350062	Argument	lf_onemethod -> val . val		6349936	2					
ANR	6350063	MemberAccess	lf_onemethod -> val . val		6349936	0					
ANR	6350064	PtrMemberAccess	lf_onemethod -> val		6349936	0					
ANR	6350065	Identifier	lf_onemethod		6349936	0					
ANR	6350066	Identifier	val		6349936	1					
ANR	6350067	Identifier	val		6349936	1					
ANR	6350068	Argument	leaf_data		6349936	3					
ANR	6350069	Identifier	leaf_data		6349936	0					
ANR	6350070	Argument	ut32		6349936	4					
ANR	6350071	Identifier	ut32		6349936	0					
ANR	6350072	ExpressionStatement	tmp_before_read_bytes = * read_bytes	1763:1:43384:43419	6349936	7	True				
ANR	6350073	AssignmentExpression	tmp_before_read_bytes = * read_bytes		6349936	0		=			
ANR	6350074	Identifier	tmp_before_read_bytes		6349936	0					
ANR	6350075	UnaryOperationExpression	* read_bytes		6349936	1					
ANR	6350076	UnaryOperator	*		6349936	0					
ANR	6350077	Identifier	read_bytes		6349936	1					
ANR	6350078	ExpressionStatement	"parse_sctring ( & ( lf_onemethod -> val . str_data ) , leaf_data , read_bytes , len )"	1764:1:43422:43494	6349936	8	True				
ANR	6350079	CallExpression	"parse_sctring ( & ( lf_onemethod -> val . str_data ) , leaf_data , read_bytes , len )"		6349936	0					
ANR	6350080	Callee	parse_sctring		6349936	0					
ANR	6350081	Identifier	parse_sctring		6349936	0					
ANR	6350082	ArgumentList	& ( lf_onemethod -> val . str_data )		6349936	1					
ANR	6350083	Argument	& ( lf_onemethod -> val . str_data )		6349936	0					
ANR	6350084	UnaryOperationExpression	& ( lf_onemethod -> val . str_data )		6349936	0					
ANR	6350085	UnaryOperator	&		6349936	0					
ANR	6350086	MemberAccess	lf_onemethod -> val . str_data		6349936	1					
ANR	6350087	PtrMemberAccess	lf_onemethod -> val		6349936	0					
ANR	6350088	Identifier	lf_onemethod		6349936	0					
ANR	6350089	Identifier	val		6349936	1					
ANR	6350090	Identifier	str_data		6349936	1					
ANR	6350091	Argument	leaf_data		6349936	1					
ANR	6350092	Identifier	leaf_data		6349936	0					
ANR	6350093	Argument	read_bytes		6349936	2					
ANR	6350094	Identifier	read_bytes		6349936	0					
ANR	6350095	Argument	len		6349936	3					
ANR	6350096	Identifier	len		6349936	0					
ANR	6350097	ExpressionStatement	leaf_data += ( * read_bytes - tmp_before_read_bytes )	1765:1:43497:43547	6349936	9	True				
ANR	6350098	AssignmentExpression	leaf_data += ( * read_bytes - tmp_before_read_bytes )		6349936	0		+=			
ANR	6350099	Identifier	leaf_data		6349936	0					
ANR	6350100	AdditiveExpression	* read_bytes - tmp_before_read_bytes		6349936	1		-			
ANR	6350101	UnaryOperationExpression	* read_bytes		6349936	0					
ANR	6350102	UnaryOperator	*		6349936	0					
ANR	6350103	Identifier	read_bytes		6349936	1					
ANR	6350104	Identifier	tmp_before_read_bytes		6349936	1					
ANR	6350105	ExpressionStatement	"PEEK_READ1 ( * read_bytes , len , lf_onemethod -> pad , leaf_data , ut8 )"	1767:1:43551:43614	6349936	10	True				
ANR	6350106	CallExpression	"PEEK_READ1 ( * read_bytes , len , lf_onemethod -> pad , leaf_data , ut8 )"		6349936	0					
ANR	6350107	Callee	PEEK_READ1		6349936	0					
ANR	6350108	Identifier	PEEK_READ1		6349936	0					
ANR	6350109	ArgumentList	* read_bytes		6349936	1					
ANR	6350110	Argument	* read_bytes		6349936	0					
ANR	6350111	UnaryOperationExpression	* read_bytes		6349936	0					
ANR	6350112	UnaryOperator	*		6349936	0					
ANR	6350113	Identifier	read_bytes		6349936	1					
ANR	6350114	Argument	len		6349936	1					
ANR	6350115	Identifier	len		6349936	0					
ANR	6350116	Argument	lf_onemethod -> pad		6349936	2					
ANR	6350117	PtrMemberAccess	lf_onemethod -> pad		6349936	0					
ANR	6350118	Identifier	lf_onemethod		6349936	0					
ANR	6350119	Identifier	pad		6349936	1					
ANR	6350120	Argument	leaf_data		6349936	3					
ANR	6350121	Identifier	leaf_data		6349936	0					
ANR	6350122	Argument	ut8		6349936	4					
ANR	6350123	Identifier	ut8		6349936	0					
ANR	6350124	ExpressionStatement	"PAD_ALIGN ( lf_onemethod -> pad , * read_bytes , leaf_data , len )"	1768:1:43617:43674	6349936	11	True				
ANR	6350125	CallExpression	"PAD_ALIGN ( lf_onemethod -> pad , * read_bytes , leaf_data , len )"		6349936	0					
ANR	6350126	Callee	PAD_ALIGN		6349936	0					
ANR	6350127	Identifier	PAD_ALIGN		6349936	0					
ANR	6350128	ArgumentList	lf_onemethod -> pad		6349936	1					
ANR	6350129	Argument	lf_onemethod -> pad		6349936	0					
ANR	6350130	PtrMemberAccess	lf_onemethod -> pad		6349936	0					
ANR	6350131	Identifier	lf_onemethod		6349936	0					
ANR	6350132	Identifier	pad		6349936	1					
ANR	6350133	Argument	* read_bytes		6349936	1					
ANR	6350134	UnaryOperationExpression	* read_bytes		6349936	0					
ANR	6350135	UnaryOperator	*		6349936	0					
ANR	6350136	Identifier	read_bytes		6349936	1					
ANR	6350137	Argument	leaf_data		6349936	2					
ANR	6350138	Identifier	leaf_data		6349936	0					
ANR	6350139	Argument	len		6349936	3					
ANR	6350140	Identifier	len		6349936	0					
ANR	6350141	ReturnStatement	return ( * read_bytes - read_bytes_before ) ;	1770:1:43678:43718	6349936	12	True				
ANR	6350142	AdditiveExpression	* read_bytes - read_bytes_before		6349936	0		-			
ANR	6350143	UnaryOperationExpression	* read_bytes		6349936	0					
ANR	6350144	UnaryOperator	*		6349936	0					
ANR	6350145	Identifier	read_bytes		6349936	1					
ANR	6350146	Identifier	read_bytes_before		6349936	1					
ANR	6350147	ReturnType	static int		6349936	1					
ANR	6350148	Identifier	parse_lf_onemethod		6349936	2					
ANR	6350149	ParameterList	"SLF_ONEMETHOD * lf_onemethod , unsigned char * leaf_data , unsigned int * read_bytes , unsigned int len"		6349936	3					
ANR	6350150	Parameter	SLF_ONEMETHOD * lf_onemethod	1746:30:42751:42777	6349936	0	True				
ANR	6350151	ParameterType	SLF_ONEMETHOD *		6349936	0					
ANR	6350152	Identifier	lf_onemethod		6349936	1					
ANR	6350153	Parameter	unsigned char * leaf_data	1746:59:42780:42803	6349936	1	True				
ANR	6350154	ParameterType	unsigned char *		6349936	0					
ANR	6350155	Identifier	leaf_data		6349936	1					
ANR	6350156	Parameter	unsigned int * read_bytes	1746:85:42806:42829	6349936	2	True				
ANR	6350157	ParameterType	unsigned int *		6349936	0					
ANR	6350158	Identifier	read_bytes		6349936	1					
ANR	6350159	Parameter	unsigned int len	1746:111:42832:42847	6349936	3	True				
ANR	6350160	ParameterType	unsigned int		6349936	0					
ANR	6350161	Identifier	len		6349936	1					
ANR	6350162	CFGEntryNode	ENTRY		6349936		True				
ANR	6350163	CFGExitNode	EXIT		6349936		True				
ANR	6350164	Symbol	leaf_data		6349936						
ANR	6350165	Symbol	lf_onemethod -> val . str_data . name		6349936						
ANR	6350166	Symbol	lf_onemethod -> fldattr . bits		6349936						
ANR	6350167	Symbol	& lf_onemethod -> val . str_data		6349936						
ANR	6350168	Symbol	lf_onemethod -> val		6349936						
ANR	6350169	Symbol	eMTpureintro		6349936						
ANR	6350170	Symbol	ut32		6349936						
ANR	6350171	Symbol	eMTintro		6349936						
ANR	6350172	Symbol	lf_onemethod -> fldattr		6349936						
ANR	6350173	Symbol	lf_onemethod -> val . str_data		6349936						
ANR	6350174	Symbol	* read_bytes		6349936						
ANR	6350175	Symbol	& lf_onemethod -> val		6349936						
ANR	6350176	Symbol	len		6349936						
ANR	6350177	Symbol	lf_onemethod -> pad		6349936						
ANR	6350178	Symbol	read_bytes_before		6349936						
ANR	6350179	Symbol	lf_onemethod -> index		6349936						
ANR	6350180	Symbol	SWAP_UINT16		6349936						
ANR	6350181	Symbol	tmp_before_read_bytes		6349936						
ANR	6350182	Symbol	lf_onemethod		6349936						
ANR	6350183	Symbol	lf_onemethod -> fldattr . fldattr		6349936						
ANR	6350184	Symbol	lf_onemethod -> fldattr . bits . mprop		6349936						
ANR	6350185	Symbol	* lf_onemethod		6349936						
ANR	6350186	Symbol	read_bytes		6349936						
ANR	6350187	Symbol	lf_onemethod -> val . val		6349936						
ANR	6350188	Symbol	ut16		6349936						
ANR	6350189	Symbol	ut8		6349936						
ANR	6350190	Function	init_stype_info	1774:0:43803:49348							
ANR	6350191	FunctionDef	init_stype_info (STypeInfo * type_info)		6350190	0					
ANR	6350192	CompoundStatement		1775:0:43853:49348	6350190	0					
ANR	6350193	ExpressionStatement	type_info -> free_ = 0	1776:1:43856:43876	6350190	0	True				
ANR	6350194	AssignmentExpression	type_info -> free_ = 0		6350190	0		=			
ANR	6350195	PtrMemberAccess	type_info -> free_		6350190	0					
ANR	6350196	Identifier	type_info		6350190	0					
ANR	6350197	Identifier	free_		6350190	1					
ANR	6350198	PrimaryExpression	0		6350190	1					
ANR	6350199	ExpressionStatement	type_info -> get_members = 0	1777:1:43879:43905	6350190	1	True				
ANR	6350200	AssignmentExpression	type_info -> get_members = 0		6350190	0		=			
ANR	6350201	PtrMemberAccess	type_info -> get_members		6350190	0					
ANR	6350202	Identifier	type_info		6350190	0					
ANR	6350203	Identifier	get_members		6350190	1					
ANR	6350204	PrimaryExpression	0		6350190	1					
ANR	6350205	ExpressionStatement	type_info -> get_name = 0	1778:1:43908:43931	6350190	2	True				
ANR	6350206	AssignmentExpression	type_info -> get_name = 0		6350190	0		=			
ANR	6350207	PtrMemberAccess	type_info -> get_name		6350190	0					
ANR	6350208	Identifier	type_info		6350190	0					
ANR	6350209	Identifier	get_name		6350190	1					
ANR	6350210	PrimaryExpression	0		6350190	1					
ANR	6350211	ExpressionStatement	type_info -> get_val = 0	1779:1:43934:43956	6350190	3	True				
ANR	6350212	AssignmentExpression	type_info -> get_val = 0		6350190	0		=			
ANR	6350213	PtrMemberAccess	type_info -> get_val		6350190	0					
ANR	6350214	Identifier	type_info		6350190	0					
ANR	6350215	Identifier	get_val		6350190	1					
ANR	6350216	PrimaryExpression	0		6350190	1					
ANR	6350217	ExpressionStatement	type_info -> get_name_len = 0	1780:1:43959:43986	6350190	4	True				
ANR	6350218	AssignmentExpression	type_info -> get_name_len = 0		6350190	0		=			
ANR	6350219	PtrMemberAccess	type_info -> get_name_len		6350190	0					
ANR	6350220	Identifier	type_info		6350190	0					
ANR	6350221	Identifier	get_name_len		6350190	1					
ANR	6350222	PrimaryExpression	0		6350190	1					
ANR	6350223	ExpressionStatement	type_info -> get_arg_type = 0	1781:1:43989:44016	6350190	5	True				
ANR	6350224	AssignmentExpression	type_info -> get_arg_type = 0		6350190	0		=			
ANR	6350225	PtrMemberAccess	type_info -> get_arg_type		6350190	0					
ANR	6350226	Identifier	type_info		6350190	0					
ANR	6350227	Identifier	get_arg_type		6350190	1					
ANR	6350228	PrimaryExpression	0		6350190	1					
ANR	6350229	ExpressionStatement	type_info -> get_element_type = 0	1782:1:44019:44050	6350190	6	True				
ANR	6350230	AssignmentExpression	type_info -> get_element_type = 0		6350190	0		=			
ANR	6350231	PtrMemberAccess	type_info -> get_element_type		6350190	0					
ANR	6350232	Identifier	type_info		6350190	0					
ANR	6350233	Identifier	get_element_type		6350190	1					
ANR	6350234	PrimaryExpression	0		6350190	1					
ANR	6350235	ExpressionStatement	type_info -> get_index_type = 0	1783:1:44053:44082	6350190	7	True				
ANR	6350236	AssignmentExpression	type_info -> get_index_type = 0		6350190	0		=			
ANR	6350237	PtrMemberAccess	type_info -> get_index_type		6350190	0					
ANR	6350238	Identifier	type_info		6350190	0					
ANR	6350239	Identifier	get_index_type		6350190	1					
ANR	6350240	PrimaryExpression	0		6350190	1					
ANR	6350241	ExpressionStatement	type_info -> get_base_type = 0	1784:1:44085:44113	6350190	8	True				
ANR	6350242	AssignmentExpression	type_info -> get_base_type = 0		6350190	0		=			
ANR	6350243	PtrMemberAccess	type_info -> get_base_type		6350190	0					
ANR	6350244	Identifier	type_info		6350190	0					
ANR	6350245	Identifier	get_base_type		6350190	1					
ANR	6350246	PrimaryExpression	0		6350190	1					
ANR	6350247	ExpressionStatement	type_info -> get_derived = 0	1785:1:44116:44142	6350190	9	True				
ANR	6350248	AssignmentExpression	type_info -> get_derived = 0		6350190	0		=			
ANR	6350249	PtrMemberAccess	type_info -> get_derived		6350190	0					
ANR	6350250	Identifier	type_info		6350190	0					
ANR	6350251	Identifier	get_derived		6350190	1					
ANR	6350252	PrimaryExpression	0		6350190	1					
ANR	6350253	ExpressionStatement	type_info -> get_vshape = 0	1786:1:44145:44170	6350190	10	True				
ANR	6350254	AssignmentExpression	type_info -> get_vshape = 0		6350190	0		=			
ANR	6350255	PtrMemberAccess	type_info -> get_vshape		6350190	0					
ANR	6350256	Identifier	type_info		6350190	0					
ANR	6350257	Identifier	get_vshape		6350190	1					
ANR	6350258	PrimaryExpression	0		6350190	1					
ANR	6350259	ExpressionStatement	type_info -> get_utype = 0	1787:1:44173:44197	6350190	11	True				
ANR	6350260	AssignmentExpression	type_info -> get_utype = 0		6350190	0		=			
ANR	6350261	PtrMemberAccess	type_info -> get_utype		6350190	0					
ANR	6350262	Identifier	type_info		6350190	0					
ANR	6350263	Identifier	get_utype		6350190	1					
ANR	6350264	PrimaryExpression	0		6350190	1					
ANR	6350265	ExpressionStatement	type_info -> get_return_type = 0	1788:1:44200:44230	6350190	12	True				
ANR	6350266	AssignmentExpression	type_info -> get_return_type = 0		6350190	0		=			
ANR	6350267	PtrMemberAccess	type_info -> get_return_type		6350190	0					
ANR	6350268	Identifier	type_info		6350190	0					
ANR	6350269	Identifier	get_return_type		6350190	1					
ANR	6350270	PrimaryExpression	0		6350190	1					
ANR	6350271	ExpressionStatement	type_info -> get_class_type = 0	1789:1:44233:44262	6350190	13	True				
ANR	6350272	AssignmentExpression	type_info -> get_class_type = 0		6350190	0		=			
ANR	6350273	PtrMemberAccess	type_info -> get_class_type		6350190	0					
ANR	6350274	Identifier	type_info		6350190	0					
ANR	6350275	Identifier	get_class_type		6350190	1					
ANR	6350276	PrimaryExpression	0		6350190	1					
ANR	6350277	ExpressionStatement	type_info -> get_this_type = 0	1790:1:44265:44293	6350190	14	True				
ANR	6350278	AssignmentExpression	type_info -> get_this_type = 0		6350190	0		=			
ANR	6350279	PtrMemberAccess	type_info -> get_this_type		6350190	0					
ANR	6350280	Identifier	type_info		6350190	0					
ANR	6350281	Identifier	get_this_type		6350190	1					
ANR	6350282	PrimaryExpression	0		6350190	1					
ANR	6350283	ExpressionStatement	type_info -> get_arglist = 0	1791:1:44296:44322	6350190	15	True				
ANR	6350284	AssignmentExpression	type_info -> get_arglist = 0		6350190	0		=			
ANR	6350285	PtrMemberAccess	type_info -> get_arglist		6350190	0					
ANR	6350286	Identifier	type_info		6350190	0					
ANR	6350287	Identifier	get_arglist		6350190	1					
ANR	6350288	PrimaryExpression	0		6350190	1					
ANR	6350289	ExpressionStatement	type_info -> get_index = 0	1792:1:44325:44349	6350190	16	True				
ANR	6350290	AssignmentExpression	type_info -> get_index = 0		6350190	0		=			
ANR	6350291	PtrMemberAccess	type_info -> get_index		6350190	0					
ANR	6350292	Identifier	type_info		6350190	0					
ANR	6350293	Identifier	get_index		6350190	1					
ANR	6350294	PrimaryExpression	0		6350190	1					
ANR	6350295	ExpressionStatement	type_info -> get_mlist = 0	1793:1:44352:44376	6350190	17	True				
ANR	6350296	AssignmentExpression	type_info -> get_mlist = 0		6350190	0		=			
ANR	6350297	PtrMemberAccess	type_info -> get_mlist		6350190	0					
ANR	6350298	Identifier	type_info		6350190	0					
ANR	6350299	Identifier	get_mlist		6350190	1					
ANR	6350300	PrimaryExpression	0		6350190	1					
ANR	6350301	ExpressionStatement	type_info -> get_modified_type = 0	1794:1:44379:44411	6350190	18	True				
ANR	6350302	AssignmentExpression	type_info -> get_modified_type = 0		6350190	0		=			
ANR	6350303	PtrMemberAccess	type_info -> get_modified_type		6350190	0					
ANR	6350304	Identifier	type_info		6350190	0					
ANR	6350305	Identifier	get_modified_type		6350190	1					
ANR	6350306	PrimaryExpression	0		6350190	1					
ANR	6350307	ExpressionStatement	type_info -> is_fwdref = 0	1795:1:44414:44438	6350190	19	True				
ANR	6350308	AssignmentExpression	type_info -> is_fwdref = 0		6350190	0		=			
ANR	6350309	PtrMemberAccess	type_info -> is_fwdref		6350190	0					
ANR	6350310	Identifier	type_info		6350190	0					
ANR	6350311	Identifier	is_fwdref		6350190	1					
ANR	6350312	PrimaryExpression	0		6350190	1					
ANR	6350313	ExpressionStatement	type_info -> get_print_type = 0	1796:1:44441:44470	6350190	20	True				
ANR	6350314	AssignmentExpression	type_info -> get_print_type = 0		6350190	0		=			
ANR	6350315	PtrMemberAccess	type_info -> get_print_type		6350190	0					
ANR	6350316	Identifier	type_info		6350190	0					
ANR	6350317	Identifier	get_print_type		6350190	1					
ANR	6350318	PrimaryExpression	0		6350190	1					
ANR	6350319	SwitchStatement	switch ( type_info -> leaf_type )		6350190	21					
ANR	6350320	Condition	type_info -> leaf_type	1798:9:44482:44501	6350190	0	True				
ANR	6350321	PtrMemberAccess	type_info -> leaf_type		6350190	0					
ANR	6350322	Identifier	type_info		6350190	0					
ANR	6350323	Identifier	leaf_type		6350190	1					
ANR	6350324	CompoundStatement		24:31:650:650	6350190	1					
ANR	6350325	Label	case eLF_FIELDLIST :	1799:1:44507:44525	6350190	0	True				
ANR	6350326	Identifier	eLF_FIELDLIST		6350190	0					
ANR	6350327	ExpressionStatement	type_info -> get_members = get_fieldlist_members	1800:2:44529:44575	6350190	1	True				
ANR	6350328	AssignmentExpression	type_info -> get_members = get_fieldlist_members		6350190	0		=			
ANR	6350329	PtrMemberAccess	type_info -> get_members		6350190	0					
ANR	6350330	Identifier	type_info		6350190	0					
ANR	6350331	Identifier	get_members		6350190	1					
ANR	6350332	Identifier	get_fieldlist_members		6350190	1					
ANR	6350333	ExpressionStatement	type_info -> free_ = free_lf_fieldlist	1801:2:44579:44615	6350190	2	True				
ANR	6350334	AssignmentExpression	type_info -> free_ = free_lf_fieldlist		6350190	0		=			
ANR	6350335	PtrMemberAccess	type_info -> free_		6350190	0					
ANR	6350336	Identifier	type_info		6350190	0					
ANR	6350337	Identifier	free_		6350190	1					
ANR	6350338	Identifier	free_lf_fieldlist		6350190	1					
ANR	6350339	ExpressionStatement	type_info -> get_print_type = get_fieldlist_print_type	1802:2:44619:44671	6350190	3	True				
ANR	6350340	AssignmentExpression	type_info -> get_print_type = get_fieldlist_print_type		6350190	0		=			
ANR	6350341	PtrMemberAccess	type_info -> get_print_type		6350190	0					
ANR	6350342	Identifier	type_info		6350190	0					
ANR	6350343	Identifier	get_print_type		6350190	1					
ANR	6350344	Identifier	get_fieldlist_print_type		6350190	1					
ANR	6350345	BreakStatement	break ;	1803:2:44675:44680	6350190	4	True				
ANR	6350346	Label	case eLF_ENUM :	1804:1:44683:44696	6350190	5	True				
ANR	6350347	Identifier	eLF_ENUM		6350190	0					
ANR	6350348	ExpressionStatement	type_info -> get_name = get_enum_name	1805:2:44700:44735	6350190	6	True				
ANR	6350349	AssignmentExpression	type_info -> get_name = get_enum_name		6350190	0		=			
ANR	6350350	PtrMemberAccess	type_info -> get_name		6350190	0					
ANR	6350351	Identifier	type_info		6350190	0					
ANR	6350352	Identifier	get_name		6350190	1					
ANR	6350353	Identifier	get_enum_name		6350190	1					
ANR	6350354	ExpressionStatement	type_info -> get_name_len = get_enum_name_len	1806:2:44739:44782	6350190	7	True				
ANR	6350355	AssignmentExpression	type_info -> get_name_len = get_enum_name_len		6350190	0		=			
ANR	6350356	PtrMemberAccess	type_info -> get_name_len		6350190	0					
ANR	6350357	Identifier	type_info		6350190	0					
ANR	6350358	Identifier	get_name_len		6350190	1					
ANR	6350359	Identifier	get_enum_name_len		6350190	1					
ANR	6350360	ExpressionStatement	type_info -> get_members = get_enum_members	1807:2:44786:44827	6350190	8	True				
ANR	6350361	AssignmentExpression	type_info -> get_members = get_enum_members		6350190	0		=			
ANR	6350362	PtrMemberAccess	type_info -> get_members		6350190	0					
ANR	6350363	Identifier	type_info		6350190	0					
ANR	6350364	Identifier	get_members		6350190	1					
ANR	6350365	Identifier	get_enum_members		6350190	1					
ANR	6350366	ExpressionStatement	type_info -> get_utype = get_enum_utype	1808:2:44831:44868	6350190	9	True				
ANR	6350367	AssignmentExpression	type_info -> get_utype = get_enum_utype		6350190	0		=			
ANR	6350368	PtrMemberAccess	type_info -> get_utype		6350190	0					
ANR	6350369	Identifier	type_info		6350190	0					
ANR	6350370	Identifier	get_utype		6350190	1					
ANR	6350371	Identifier	get_enum_utype		6350190	1					
ANR	6350372	ExpressionStatement	type_info -> free_ = free_lf_enum	1809:2:44872:44903	6350190	10	True				
ANR	6350373	AssignmentExpression	type_info -> free_ = free_lf_enum		6350190	0		=			
ANR	6350374	PtrMemberAccess	type_info -> free_		6350190	0					
ANR	6350375	Identifier	type_info		6350190	0					
ANR	6350376	Identifier	free_		6350190	1					
ANR	6350377	Identifier	free_lf_enum		6350190	1					
ANR	6350378	ExpressionStatement	type_info -> get_print_type = get_enum_print_type	1810:2:44907:44954	6350190	11	True				
ANR	6350379	AssignmentExpression	type_info -> get_print_type = get_enum_print_type		6350190	0		=			
ANR	6350380	PtrMemberAccess	type_info -> get_print_type		6350190	0					
ANR	6350381	Identifier	type_info		6350190	0					
ANR	6350382	Identifier	get_print_type		6350190	1					
ANR	6350383	Identifier	get_enum_print_type		6350190	1					
ANR	6350384	BreakStatement	break ;	1811:2:44958:44963	6350190	12	True				
ANR	6350385	Label	case eLF_CLASS :	1812:1:44966:44980	6350190	13	True				
ANR	6350386	Identifier	eLF_CLASS		6350190	0					
ANR	6350387	Label	case eLF_STRUCTURE :	1813:1:44983:45001	6350190	14	True				
ANR	6350388	Identifier	eLF_STRUCTURE		6350190	0					
ANR	6350389	ExpressionStatement	type_info -> get_name = get_class_struct_name	1814:2:45005:45048	6350190	15	True				
ANR	6350390	AssignmentExpression	type_info -> get_name = get_class_struct_name		6350190	0		=			
ANR	6350391	PtrMemberAccess	type_info -> get_name		6350190	0					
ANR	6350392	Identifier	type_info		6350190	0					
ANR	6350393	Identifier	get_name		6350190	1					
ANR	6350394	Identifier	get_class_struct_name		6350190	1					
ANR	6350395	ExpressionStatement	type_info -> get_val = get_class_struct_val	1815:2:45052:45093	6350190	16	True				
ANR	6350396	AssignmentExpression	type_info -> get_val = get_class_struct_val		6350190	0		=			
ANR	6350397	PtrMemberAccess	type_info -> get_val		6350190	0					
ANR	6350398	Identifier	type_info		6350190	0					
ANR	6350399	Identifier	get_val		6350190	1					
ANR	6350400	Identifier	get_class_struct_val		6350190	1					
ANR	6350401	ExpressionStatement	type_info -> get_name_len = get_class_struct_name_len	1816:2:45127:45178	6350190	17	True				
ANR	6350402	AssignmentExpression	type_info -> get_name_len = get_class_struct_name_len		6350190	0		=			
ANR	6350403	PtrMemberAccess	type_info -> get_name_len		6350190	0					
ANR	6350404	Identifier	type_info		6350190	0					
ANR	6350405	Identifier	get_name_len		6350190	1					
ANR	6350406	Identifier	get_class_struct_name_len		6350190	1					
ANR	6350407	ExpressionStatement	type_info -> get_members = get_struct_class_members	1817:2:45182:45231	6350190	18	True				
ANR	6350408	AssignmentExpression	type_info -> get_members = get_struct_class_members		6350190	0		=			
ANR	6350409	PtrMemberAccess	type_info -> get_members		6350190	0					
ANR	6350410	Identifier	type_info		6350190	0					
ANR	6350411	Identifier	get_members		6350190	1					
ANR	6350412	Identifier	get_struct_class_members		6350190	1					
ANR	6350413	ExpressionStatement	type_info -> get_derived = get_class_struct_derived	1818:2:45235:45284	6350190	19	True				
ANR	6350414	AssignmentExpression	type_info -> get_derived = get_class_struct_derived		6350190	0		=			
ANR	6350415	PtrMemberAccess	type_info -> get_derived		6350190	0					
ANR	6350416	Identifier	type_info		6350190	0					
ANR	6350417	Identifier	get_derived		6350190	1					
ANR	6350418	Identifier	get_class_struct_derived		6350190	1					
ANR	6350419	ExpressionStatement	type_info -> get_vshape = get_class_struct_vshape	1819:2:45288:45335	6350190	20	True				
ANR	6350420	AssignmentExpression	type_info -> get_vshape = get_class_struct_vshape		6350190	0		=			
ANR	6350421	PtrMemberAccess	type_info -> get_vshape		6350190	0					
ANR	6350422	Identifier	type_info		6350190	0					
ANR	6350423	Identifier	get_vshape		6350190	1					
ANR	6350424	Identifier	get_class_struct_vshape		6350190	1					
ANR	6350425	ExpressionStatement	type_info -> is_fwdref = is_struct_class_fwdref	1820:2:45339:45384	6350190	21	True				
ANR	6350426	AssignmentExpression	type_info -> is_fwdref = is_struct_class_fwdref		6350190	0		=			
ANR	6350427	PtrMemberAccess	type_info -> is_fwdref		6350190	0					
ANR	6350428	Identifier	type_info		6350190	0					
ANR	6350429	Identifier	is_fwdref		6350190	1					
ANR	6350430	Identifier	is_struct_class_fwdref		6350190	1					
ANR	6350431	ExpressionStatement	type_info -> free_ = free_lf_class	1821:2:45388:45420	6350190	22	True				
ANR	6350432	AssignmentExpression	type_info -> free_ = free_lf_class		6350190	0		=			
ANR	6350433	PtrMemberAccess	type_info -> free_		6350190	0					
ANR	6350434	Identifier	type_info		6350190	0					
ANR	6350435	Identifier	free_		6350190	1					
ANR	6350436	Identifier	free_lf_class		6350190	1					
ANR	6350437	ExpressionStatement	type_info -> get_print_type = get_class_struct_print_type	1822:2:45424:45479	6350190	23	True				
ANR	6350438	AssignmentExpression	type_info -> get_print_type = get_class_struct_print_type		6350190	0		=			
ANR	6350439	PtrMemberAccess	type_info -> get_print_type		6350190	0					
ANR	6350440	Identifier	type_info		6350190	0					
ANR	6350441	Identifier	get_print_type		6350190	1					
ANR	6350442	Identifier	get_class_struct_print_type		6350190	1					
ANR	6350443	BreakStatement	break ;	1823:2:45483:45488	6350190	24	True				
ANR	6350444	Label	case eLF_POINTER :	1824:1:45491:45507	6350190	25	True				
ANR	6350445	Identifier	eLF_POINTER		6350190	0					
ANR	6350446	ExpressionStatement	type_info -> get_utype = get_pointer_utype	1825:2:45511:45551	6350190	26	True				
ANR	6350447	AssignmentExpression	type_info -> get_utype = get_pointer_utype		6350190	0		=			
ANR	6350448	PtrMemberAccess	type_info -> get_utype		6350190	0					
ANR	6350449	Identifier	type_info		6350190	0					
ANR	6350450	Identifier	get_utype		6350190	1					
ANR	6350451	Identifier	get_pointer_utype		6350190	1					
ANR	6350452	ExpressionStatement	type_info -> get_print_type = get_pointer_print_type	1826:2:45555:45605	6350190	27	True				
ANR	6350453	AssignmentExpression	type_info -> get_print_type = get_pointer_print_type		6350190	0		=			
ANR	6350454	PtrMemberAccess	type_info -> get_print_type		6350190	0					
ANR	6350455	Identifier	type_info		6350190	0					
ANR	6350456	Identifier	get_print_type		6350190	1					
ANR	6350457	Identifier	get_pointer_print_type		6350190	1					
ANR	6350458	BreakStatement	break ;	1827:2:45609:45614	6350190	28	True				
ANR	6350459	Label	case eLF_ARRAY :	1828:1:45617:45631	6350190	29	True				
ANR	6350460	Identifier	eLF_ARRAY		6350190	0					
ANR	6350461	ExpressionStatement	type_info -> get_name = get_array_name	1829:2:45635:45671	6350190	30	True				
ANR	6350462	AssignmentExpression	type_info -> get_name = get_array_name		6350190	0		=			
ANR	6350463	PtrMemberAccess	type_info -> get_name		6350190	0					
ANR	6350464	Identifier	type_info		6350190	0					
ANR	6350465	Identifier	get_name		6350190	1					
ANR	6350466	Identifier	get_array_name		6350190	1					
ANR	6350467	ExpressionStatement	type_info -> get_val = get_array_val	1830:2:45675:45709	6350190	31	True				
ANR	6350468	AssignmentExpression	type_info -> get_val = get_array_val		6350190	0		=			
ANR	6350469	PtrMemberAccess	type_info -> get_val		6350190	0					
ANR	6350470	Identifier	type_info		6350190	0					
ANR	6350471	Identifier	get_val		6350190	1					
ANR	6350472	Identifier	get_array_val		6350190	1					
ANR	6350473	ExpressionStatement	type_info -> get_name_len = get_array_name_len	1831:2:45713:45757	6350190	32	True				
ANR	6350474	AssignmentExpression	type_info -> get_name_len = get_array_name_len		6350190	0		=			
ANR	6350475	PtrMemberAccess	type_info -> get_name_len		6350190	0					
ANR	6350476	Identifier	type_info		6350190	0					
ANR	6350477	Identifier	get_name_len		6350190	1					
ANR	6350478	Identifier	get_array_name_len		6350190	1					
ANR	6350479	ExpressionStatement	type_info -> get_element_type = get_array_element_type	1832:2:45761:45813	6350190	33	True				
ANR	6350480	AssignmentExpression	type_info -> get_element_type = get_array_element_type		6350190	0		=			
ANR	6350481	PtrMemberAccess	type_info -> get_element_type		6350190	0					
ANR	6350482	Identifier	type_info		6350190	0					
ANR	6350483	Identifier	get_element_type		6350190	1					
ANR	6350484	Identifier	get_array_element_type		6350190	1					
ANR	6350485	ExpressionStatement	type_info -> get_index_type = get_array_index_type	1833:2:45817:45865	6350190	34	True				
ANR	6350486	AssignmentExpression	type_info -> get_index_type = get_array_index_type		6350190	0		=			
ANR	6350487	PtrMemberAccess	type_info -> get_index_type		6350190	0					
ANR	6350488	Identifier	type_info		6350190	0					
ANR	6350489	Identifier	get_index_type		6350190	1					
ANR	6350490	Identifier	get_array_index_type		6350190	1					
ANR	6350491	ExpressionStatement	type_info -> free_ = free_lf_array	1834:2:45869:45901	6350190	35	True				
ANR	6350492	AssignmentExpression	type_info -> free_ = free_lf_array		6350190	0		=			
ANR	6350493	PtrMemberAccess	type_info -> free_		6350190	0					
ANR	6350494	Identifier	type_info		6350190	0					
ANR	6350495	Identifier	free_		6350190	1					
ANR	6350496	Identifier	free_lf_array		6350190	1					
ANR	6350497	ExpressionStatement	type_info -> get_print_type = get_array_print_type	1835:2:45905:45953	6350190	36	True				
ANR	6350498	AssignmentExpression	type_info -> get_print_type = get_array_print_type		6350190	0		=			
ANR	6350499	PtrMemberAccess	type_info -> get_print_type		6350190	0					
ANR	6350500	Identifier	type_info		6350190	0					
ANR	6350501	Identifier	get_print_type		6350190	1					
ANR	6350502	Identifier	get_array_print_type		6350190	1					
ANR	6350503	BreakStatement	break ;	1836:2:45957:45962	6350190	37	True				
ANR	6350504	Label	case eLF_MODIFIER :	1837:1:45965:45982	6350190	38	True				
ANR	6350505	Identifier	eLF_MODIFIER		6350190	0					
ANR	6350506	ExpressionStatement	type_info -> get_modified_type = get_modifier_modified_type	1838:2:45986:46043	6350190	39	True				
ANR	6350507	AssignmentExpression	type_info -> get_modified_type = get_modifier_modified_type		6350190	0		=			
ANR	6350508	PtrMemberAccess	type_info -> get_modified_type		6350190	0					
ANR	6350509	Identifier	type_info		6350190	0					
ANR	6350510	Identifier	get_modified_type		6350190	1					
ANR	6350511	Identifier	get_modifier_modified_type		6350190	1					
ANR	6350512	ExpressionStatement	type_info -> get_print_type = get_modifier_print_type	1839:2:46047:46098	6350190	40	True				
ANR	6350513	AssignmentExpression	type_info -> get_print_type = get_modifier_print_type		6350190	0		=			
ANR	6350514	PtrMemberAccess	type_info -> get_print_type		6350190	0					
ANR	6350515	Identifier	type_info		6350190	0					
ANR	6350516	Identifier	get_print_type		6350190	1					
ANR	6350517	Identifier	get_modifier_print_type		6350190	1					
ANR	6350518	BreakStatement	break ;	1840:2:46102:46107	6350190	41	True				
ANR	6350519	Label	case eLF_ARGLIST :	1841:1:46110:46126	6350190	42	True				
ANR	6350520	Identifier	eLF_ARGLIST		6350190	0					
ANR	6350521	ExpressionStatement	type_info -> free_ = free_lf_arglist	1842:2:46130:46164	6350190	43	True				
ANR	6350522	AssignmentExpression	type_info -> free_ = free_lf_arglist		6350190	0		=			
ANR	6350523	PtrMemberAccess	type_info -> free_		6350190	0					
ANR	6350524	Identifier	type_info		6350190	0					
ANR	6350525	Identifier	free_		6350190	1					
ANR	6350526	Identifier	free_lf_arglist		6350190	1					
ANR	6350527	ExpressionStatement	type_info -> get_print_type = get_arglist_print_type	1843:2:46168:46218	6350190	44	True				
ANR	6350528	AssignmentExpression	type_info -> get_print_type = get_arglist_print_type		6350190	0		=			
ANR	6350529	PtrMemberAccess	type_info -> get_print_type		6350190	0					
ANR	6350530	Identifier	type_info		6350190	0					
ANR	6350531	Identifier	get_print_type		6350190	1					
ANR	6350532	Identifier	get_arglist_print_type		6350190	1					
ANR	6350533	BreakStatement	break ;	1844:2:46222:46227	6350190	45	True				
ANR	6350534	Label	case eLF_MFUNCTION :	1845:1:46230:46248	6350190	46	True				
ANR	6350535	Identifier	eLF_MFUNCTION		6350190	0					
ANR	6350536	ExpressionStatement	type_info -> get_return_type = get_mfunction_return_type	1846:2:46252:46306	6350190	47	True				
ANR	6350537	AssignmentExpression	type_info -> get_return_type = get_mfunction_return_type		6350190	0		=			
ANR	6350538	PtrMemberAccess	type_info -> get_return_type		6350190	0					
ANR	6350539	Identifier	type_info		6350190	0					
ANR	6350540	Identifier	get_return_type		6350190	1					
ANR	6350541	Identifier	get_mfunction_return_type		6350190	1					
ANR	6350542	ExpressionStatement	type_info -> get_class_type = get_mfunction_class_type	1847:2:46310:46362	6350190	48	True				
ANR	6350543	AssignmentExpression	type_info -> get_class_type = get_mfunction_class_type		6350190	0		=			
ANR	6350544	PtrMemberAccess	type_info -> get_class_type		6350190	0					
ANR	6350545	Identifier	type_info		6350190	0					
ANR	6350546	Identifier	get_class_type		6350190	1					
ANR	6350547	Identifier	get_mfunction_class_type		6350190	1					
ANR	6350548	ExpressionStatement	type_info -> get_this_type = get_mfunction_this_type	1848:2:46366:46416	6350190	49	True				
ANR	6350549	AssignmentExpression	type_info -> get_this_type = get_mfunction_this_type		6350190	0		=			
ANR	6350550	PtrMemberAccess	type_info -> get_this_type		6350190	0					
ANR	6350551	Identifier	type_info		6350190	0					
ANR	6350552	Identifier	get_this_type		6350190	1					
ANR	6350553	Identifier	get_mfunction_this_type		6350190	1					
ANR	6350554	ExpressionStatement	type_info -> get_arglist = get_mfunction_arglist	1849:2:46420:46466	6350190	50	True				
ANR	6350555	AssignmentExpression	type_info -> get_arglist = get_mfunction_arglist		6350190	0		=			
ANR	6350556	PtrMemberAccess	type_info -> get_arglist		6350190	0					
ANR	6350557	Identifier	type_info		6350190	0					
ANR	6350558	Identifier	get_arglist		6350190	1					
ANR	6350559	Identifier	get_mfunction_arglist		6350190	1					
ANR	6350560	ExpressionStatement	type_info -> get_print_type = get_mfunction_print_type	1850:2:46470:46522	6350190	51	True				
ANR	6350561	AssignmentExpression	type_info -> get_print_type = get_mfunction_print_type		6350190	0		=			
ANR	6350562	PtrMemberAccess	type_info -> get_print_type		6350190	0					
ANR	6350563	Identifier	type_info		6350190	0					
ANR	6350564	Identifier	get_print_type		6350190	1					
ANR	6350565	Identifier	get_mfunction_print_type		6350190	1					
ANR	6350566	BreakStatement	break ;	1851:2:46526:46531	6350190	52	True				
ANR	6350567	Label	case eLF_METHODLIST :	1852:1:46534:46553	6350190	53	True				
ANR	6350568	Identifier	eLF_METHODLIST		6350190	0					
ANR	6350569	BreakStatement	break ;	1853:2:46557:46562	6350190	54	True				
ANR	6350570	Label	case eLF_PROCEDURE :	1854:1:46565:46583	6350190	55	True				
ANR	6350571	Identifier	eLF_PROCEDURE		6350190	0					
ANR	6350572	ExpressionStatement	type_info -> get_return_type = get_procedure_return_type	1855:2:46587:46641	6350190	56	True				
ANR	6350573	AssignmentExpression	type_info -> get_return_type = get_procedure_return_type		6350190	0		=			
ANR	6350574	PtrMemberAccess	type_info -> get_return_type		6350190	0					
ANR	6350575	Identifier	type_info		6350190	0					
ANR	6350576	Identifier	get_return_type		6350190	1					
ANR	6350577	Identifier	get_procedure_return_type		6350190	1					
ANR	6350578	ExpressionStatement	type_info -> get_arglist = get_procedure_arglist	1856:2:46645:46691	6350190	57	True				
ANR	6350579	AssignmentExpression	type_info -> get_arglist = get_procedure_arglist		6350190	0		=			
ANR	6350580	PtrMemberAccess	type_info -> get_arglist		6350190	0					
ANR	6350581	Identifier	type_info		6350190	0					
ANR	6350582	Identifier	get_arglist		6350190	1					
ANR	6350583	Identifier	get_procedure_arglist		6350190	1					
ANR	6350584	ExpressionStatement	type_info -> get_print_type = get_procedure_print_type	1857:2:46695:46747	6350190	58	True				
ANR	6350585	AssignmentExpression	type_info -> get_print_type = get_procedure_print_type		6350190	0		=			
ANR	6350586	PtrMemberAccess	type_info -> get_print_type		6350190	0					
ANR	6350587	Identifier	type_info		6350190	0					
ANR	6350588	Identifier	get_print_type		6350190	1					
ANR	6350589	Identifier	get_procedure_print_type		6350190	1					
ANR	6350590	BreakStatement	break ;	1858:2:46751:46756	6350190	59	True				
ANR	6350591	Label	case eLF_UNION :	1859:1:46759:46773	6350190	60	True				
ANR	6350592	Identifier	eLF_UNION		6350190	0					
ANR	6350593	ExpressionStatement	type_info -> get_name = get_union_name	1860:2:46777:46813	6350190	61	True				
ANR	6350594	AssignmentExpression	type_info -> get_name = get_union_name		6350190	0		=			
ANR	6350595	PtrMemberAccess	type_info -> get_name		6350190	0					
ANR	6350596	Identifier	type_info		6350190	0					
ANR	6350597	Identifier	get_name		6350190	1					
ANR	6350598	Identifier	get_union_name		6350190	1					
ANR	6350599	ExpressionStatement	type_info -> get_val = get_union_val	1861:2:46817:46851	6350190	62	True				
ANR	6350600	AssignmentExpression	type_info -> get_val = get_union_val		6350190	0		=			
ANR	6350601	PtrMemberAccess	type_info -> get_val		6350190	0					
ANR	6350602	Identifier	type_info		6350190	0					
ANR	6350603	Identifier	get_val		6350190	1					
ANR	6350604	Identifier	get_union_val		6350190	1					
ANR	6350605	ExpressionStatement	type_info -> get_name_len = get_union_name_len	1862:2:46855:46899	6350190	63	True				
ANR	6350606	AssignmentExpression	type_info -> get_name_len = get_union_name_len		6350190	0		=			
ANR	6350607	PtrMemberAccess	type_info -> get_name_len		6350190	0					
ANR	6350608	Identifier	type_info		6350190	0					
ANR	6350609	Identifier	get_name_len		6350190	1					
ANR	6350610	Identifier	get_union_name_len		6350190	1					
ANR	6350611	ExpressionStatement	type_info -> get_members = get_union_members	1863:2:46903:46945	6350190	64	True				
ANR	6350612	AssignmentExpression	type_info -> get_members = get_union_members		6350190	0		=			
ANR	6350613	PtrMemberAccess	type_info -> get_members		6350190	0					
ANR	6350614	Identifier	type_info		6350190	0					
ANR	6350615	Identifier	get_members		6350190	1					
ANR	6350616	Identifier	get_union_members		6350190	1					
ANR	6350617	ExpressionStatement	type_info -> is_fwdref = is_union_fwdref	1864:2:46949:46987	6350190	65	True				
ANR	6350618	AssignmentExpression	type_info -> is_fwdref = is_union_fwdref		6350190	0		=			
ANR	6350619	PtrMemberAccess	type_info -> is_fwdref		6350190	0					
ANR	6350620	Identifier	type_info		6350190	0					
ANR	6350621	Identifier	is_fwdref		6350190	1					
ANR	6350622	Identifier	is_union_fwdref		6350190	1					
ANR	6350623	ExpressionStatement	type_info -> free_ = free_lf_union	1865:2:46991:47023	6350190	66	True				
ANR	6350624	AssignmentExpression	type_info -> free_ = free_lf_union		6350190	0		=			
ANR	6350625	PtrMemberAccess	type_info -> free_		6350190	0					
ANR	6350626	Identifier	type_info		6350190	0					
ANR	6350627	Identifier	free_		6350190	1					
ANR	6350628	Identifier	free_lf_union		6350190	1					
ANR	6350629	ExpressionStatement	type_info -> get_print_type = get_union_print_type	1866:2:47027:47075	6350190	67	True				
ANR	6350630	AssignmentExpression	type_info -> get_print_type = get_union_print_type		6350190	0		=			
ANR	6350631	PtrMemberAccess	type_info -> get_print_type		6350190	0					
ANR	6350632	Identifier	type_info		6350190	0					
ANR	6350633	Identifier	get_print_type		6350190	1					
ANR	6350634	Identifier	get_union_print_type		6350190	1					
ANR	6350635	BreakStatement	break ;	1867:2:47079:47084	6350190	68	True				
ANR	6350636	Label	case eLF_BITFIELD :	1868:1:47087:47104	6350190	69	True				
ANR	6350637	Identifier	eLF_BITFIELD		6350190	0					
ANR	6350638	ExpressionStatement	type_info -> get_base_type = get_bitfield_base_type	1869:2:47108:47157	6350190	70	True				
ANR	6350639	AssignmentExpression	type_info -> get_base_type = get_bitfield_base_type		6350190	0		=			
ANR	6350640	PtrMemberAccess	type_info -> get_base_type		6350190	0					
ANR	6350641	Identifier	type_info		6350190	0					
ANR	6350642	Identifier	get_base_type		6350190	1					
ANR	6350643	Identifier	get_bitfield_base_type		6350190	1					
ANR	6350644	ExpressionStatement	type_info -> get_print_type = get_bitfield_print_type	1870:2:47161:47212	6350190	71	True				
ANR	6350645	AssignmentExpression	type_info -> get_print_type = get_bitfield_print_type		6350190	0		=			
ANR	6350646	PtrMemberAccess	type_info -> get_print_type		6350190	0					
ANR	6350647	Identifier	type_info		6350190	0					
ANR	6350648	Identifier	get_print_type		6350190	1					
ANR	6350649	Identifier	get_bitfield_print_type		6350190	1					
ANR	6350650	BreakStatement	break ;	1871:2:47216:47221	6350190	72	True				
ANR	6350651	Label	case eLF_VTSHAPE :	1872:1:47224:47240	6350190	73	True				
ANR	6350652	Identifier	eLF_VTSHAPE		6350190	0					
ANR	6350653	ExpressionStatement	type_info -> free_ = free_lf_vtshape	1873:2:47244:47278	6350190	74	True				
ANR	6350654	AssignmentExpression	type_info -> free_ = free_lf_vtshape		6350190	0		=			
ANR	6350655	PtrMemberAccess	type_info -> free_		6350190	0					
ANR	6350656	Identifier	type_info		6350190	0					
ANR	6350657	Identifier	free_		6350190	1					
ANR	6350658	Identifier	free_lf_vtshape		6350190	1					
ANR	6350659	ExpressionStatement	type_info -> get_print_type = get_vtshape_print_type	1874:2:47282:47332	6350190	75	True				
ANR	6350660	AssignmentExpression	type_info -> get_print_type = get_vtshape_print_type		6350190	0		=			
ANR	6350661	PtrMemberAccess	type_info -> get_print_type		6350190	0					
ANR	6350662	Identifier	type_info		6350190	0					
ANR	6350663	Identifier	get_print_type		6350190	1					
ANR	6350664	Identifier	get_vtshape_print_type		6350190	1					
ANR	6350665	BreakStatement	break ;	1875:2:47336:47341	6350190	76	True				
ANR	6350666	Label	case eLF_ENUMERATE :	1876:1:47344:47362	6350190	77	True				
ANR	6350667	Identifier	eLF_ENUMERATE		6350190	0					
ANR	6350668	ExpressionStatement	type_info -> get_name = get_enumerate_name	1877:2:47366:47406	6350190	78	True				
ANR	6350669	AssignmentExpression	type_info -> get_name = get_enumerate_name		6350190	0		=			
ANR	6350670	PtrMemberAccess	type_info -> get_name		6350190	0					
ANR	6350671	Identifier	type_info		6350190	0					
ANR	6350672	Identifier	get_name		6350190	1					
ANR	6350673	Identifier	get_enumerate_name		6350190	1					
ANR	6350674	ExpressionStatement	type_info -> get_val = get_enumerate_val	1878:2:47410:47448	6350190	79	True				
ANR	6350675	AssignmentExpression	type_info -> get_val = get_enumerate_val		6350190	0		=			
ANR	6350676	PtrMemberAccess	type_info -> get_val		6350190	0					
ANR	6350677	Identifier	type_info		6350190	0					
ANR	6350678	Identifier	get_val		6350190	1					
ANR	6350679	Identifier	get_enumerate_val		6350190	1					
ANR	6350680	ExpressionStatement	type_info -> get_name_len = get_enumerate_name_len	1879:2:47452:47500	6350190	80	True				
ANR	6350681	AssignmentExpression	type_info -> get_name_len = get_enumerate_name_len		6350190	0		=			
ANR	6350682	PtrMemberAccess	type_info -> get_name_len		6350190	0					
ANR	6350683	Identifier	type_info		6350190	0					
ANR	6350684	Identifier	get_name_len		6350190	1					
ANR	6350685	Identifier	get_enumerate_name_len		6350190	1					
ANR	6350686	ExpressionStatement	type_info -> free_ = free_lf_enumerate	1880:2:47504:47540	6350190	81	True				
ANR	6350687	AssignmentExpression	type_info -> free_ = free_lf_enumerate		6350190	0		=			
ANR	6350688	PtrMemberAccess	type_info -> free_		6350190	0					
ANR	6350689	Identifier	type_info		6350190	0					
ANR	6350690	Identifier	free_		6350190	1					
ANR	6350691	Identifier	free_lf_enumerate		6350190	1					
ANR	6350692	ExpressionStatement	type_info -> get_print_type = get_enumerate_print_type	1881:2:47544:47596	6350190	82	True				
ANR	6350693	AssignmentExpression	type_info -> get_print_type = get_enumerate_print_type		6350190	0		=			
ANR	6350694	PtrMemberAccess	type_info -> get_print_type		6350190	0					
ANR	6350695	Identifier	type_info		6350190	0					
ANR	6350696	Identifier	get_print_type		6350190	1					
ANR	6350697	Identifier	get_enumerate_print_type		6350190	1					
ANR	6350698	BreakStatement	break ;	1882:2:47600:47605	6350190	83	True				
ANR	6350699	Label	case eLF_NESTTYPE :	1883:1:47608:47625	6350190	84	True				
ANR	6350700	Identifier	eLF_NESTTYPE		6350190	0					
ANR	6350701	ExpressionStatement	type_info -> get_name = get_nesttype_name	1884:2:47629:47668	6350190	85	True				
ANR	6350702	AssignmentExpression	type_info -> get_name = get_nesttype_name		6350190	0		=			
ANR	6350703	PtrMemberAccess	type_info -> get_name		6350190	0					
ANR	6350704	Identifier	type_info		6350190	0					
ANR	6350705	Identifier	get_name		6350190	1					
ANR	6350706	Identifier	get_nesttype_name		6350190	1					
ANR	6350707	ExpressionStatement	type_info -> get_name_len = get_nesttype_name_len	1885:2:47672:47719	6350190	86	True				
ANR	6350708	AssignmentExpression	type_info -> get_name_len = get_nesttype_name_len		6350190	0		=			
ANR	6350709	PtrMemberAccess	type_info -> get_name_len		6350190	0					
ANR	6350710	Identifier	type_info		6350190	0					
ANR	6350711	Identifier	get_name_len		6350190	1					
ANR	6350712	Identifier	get_nesttype_name_len		6350190	1					
ANR	6350713	ExpressionStatement	type_info -> get_index = get_nesttype_index	1886:2:47723:47764	6350190	87	True				
ANR	6350714	AssignmentExpression	type_info -> get_index = get_nesttype_index		6350190	0		=			
ANR	6350715	PtrMemberAccess	type_info -> get_index		6350190	0					
ANR	6350716	Identifier	type_info		6350190	0					
ANR	6350717	Identifier	get_index		6350190	1					
ANR	6350718	Identifier	get_nesttype_index		6350190	1					
ANR	6350719	ExpressionStatement	type_info -> free_ = free_lf_nesttype	1887:2:47768:47803	6350190	88	True				
ANR	6350720	AssignmentExpression	type_info -> free_ = free_lf_nesttype		6350190	0		=			
ANR	6350721	PtrMemberAccess	type_info -> free_		6350190	0					
ANR	6350722	Identifier	type_info		6350190	0					
ANR	6350723	Identifier	free_		6350190	1					
ANR	6350724	Identifier	free_lf_nesttype		6350190	1					
ANR	6350725	ExpressionStatement	type_info -> get_print_type = get_nesttype_print_type	1888:2:47807:47858	6350190	89	True				
ANR	6350726	AssignmentExpression	type_info -> get_print_type = get_nesttype_print_type		6350190	0		=			
ANR	6350727	PtrMemberAccess	type_info -> get_print_type		6350190	0					
ANR	6350728	Identifier	type_info		6350190	0					
ANR	6350729	Identifier	get_print_type		6350190	1					
ANR	6350730	Identifier	get_nesttype_print_type		6350190	1					
ANR	6350731	BreakStatement	break ;	1889:2:47862:47867	6350190	90	True				
ANR	6350732	Label	case eLF_METHOD :	1890:1:47870:47885	6350190	91	True				
ANR	6350733	Identifier	eLF_METHOD		6350190	0					
ANR	6350734	ExpressionStatement	type_info -> get_name = get_method_name	1891:2:47889:47926	6350190	92	True				
ANR	6350735	AssignmentExpression	type_info -> get_name = get_method_name		6350190	0		=			
ANR	6350736	PtrMemberAccess	type_info -> get_name		6350190	0					
ANR	6350737	Identifier	type_info		6350190	0					
ANR	6350738	Identifier	get_name		6350190	1					
ANR	6350739	Identifier	get_method_name		6350190	1					
ANR	6350740	ExpressionStatement	type_info -> get_name_len = get_method_name_len	1892:2:47930:47975	6350190	93	True				
ANR	6350741	AssignmentExpression	type_info -> get_name_len = get_method_name_len		6350190	0		=			
ANR	6350742	PtrMemberAccess	type_info -> get_name_len		6350190	0					
ANR	6350743	Identifier	type_info		6350190	0					
ANR	6350744	Identifier	get_name_len		6350190	1					
ANR	6350745	Identifier	get_method_name_len		6350190	1					
ANR	6350746	ExpressionStatement	type_info -> get_mlist = get_method_mlist	1893:2:47979:48018	6350190	94	True				
ANR	6350747	AssignmentExpression	type_info -> get_mlist = get_method_mlist		6350190	0		=			
ANR	6350748	PtrMemberAccess	type_info -> get_mlist		6350190	0					
ANR	6350749	Identifier	type_info		6350190	0					
ANR	6350750	Identifier	get_mlist		6350190	1					
ANR	6350751	Identifier	get_method_mlist		6350190	1					
ANR	6350752	ExpressionStatement	type_info -> free_ = free_lf_method	1894:2:48022:48055	6350190	95	True				
ANR	6350753	AssignmentExpression	type_info -> free_ = free_lf_method		6350190	0		=			
ANR	6350754	PtrMemberAccess	type_info -> free_		6350190	0					
ANR	6350755	Identifier	type_info		6350190	0					
ANR	6350756	Identifier	free_		6350190	1					
ANR	6350757	Identifier	free_lf_method		6350190	1					
ANR	6350758	ExpressionStatement	type_info -> get_print_type = get_method_print_type	1895:2:48059:48108	6350190	96	True				
ANR	6350759	AssignmentExpression	type_info -> get_print_type = get_method_print_type		6350190	0		=			
ANR	6350760	PtrMemberAccess	type_info -> get_print_type		6350190	0					
ANR	6350761	Identifier	type_info		6350190	0					
ANR	6350762	Identifier	get_print_type		6350190	1					
ANR	6350763	Identifier	get_method_print_type		6350190	1					
ANR	6350764	BreakStatement	break ;	1896:2:48112:48117	6350190	97	True				
ANR	6350765	Label	case eLF_MEMBER :	1897:1:48120:48135	6350190	98	True				
ANR	6350766	Identifier	eLF_MEMBER		6350190	0					
ANR	6350767	ExpressionStatement	type_info -> get_name = get_member_name	1898:2:48139:48176	6350190	99	True				
ANR	6350768	AssignmentExpression	type_info -> get_name = get_member_name		6350190	0		=			
ANR	6350769	PtrMemberAccess	type_info -> get_name		6350190	0					
ANR	6350770	Identifier	type_info		6350190	0					
ANR	6350771	Identifier	get_name		6350190	1					
ANR	6350772	Identifier	get_member_name		6350190	1					
ANR	6350773	ExpressionStatement	type_info -> get_val = get_member_val	1899:2:48180:48215	6350190	100	True				
ANR	6350774	AssignmentExpression	type_info -> get_val = get_member_val		6350190	0		=			
ANR	6350775	PtrMemberAccess	type_info -> get_val		6350190	0					
ANR	6350776	Identifier	type_info		6350190	0					
ANR	6350777	Identifier	get_val		6350190	1					
ANR	6350778	Identifier	get_member_val		6350190	1					
ANR	6350779	ExpressionStatement	type_info -> get_name_len = get_member_name_len	1900:2:48219:48264	6350190	101	True				
ANR	6350780	AssignmentExpression	type_info -> get_name_len = get_member_name_len		6350190	0		=			
ANR	6350781	PtrMemberAccess	type_info -> get_name_len		6350190	0					
ANR	6350782	Identifier	type_info		6350190	0					
ANR	6350783	Identifier	get_name_len		6350190	1					
ANR	6350784	Identifier	get_member_name_len		6350190	1					
ANR	6350785	ExpressionStatement	type_info -> get_index = get_member_index	1901:2:48268:48307	6350190	102	True				
ANR	6350786	AssignmentExpression	type_info -> get_index = get_member_index		6350190	0		=			
ANR	6350787	PtrMemberAccess	type_info -> get_index		6350190	0					
ANR	6350788	Identifier	type_info		6350190	0					
ANR	6350789	Identifier	get_index		6350190	1					
ANR	6350790	Identifier	get_member_index		6350190	1					
ANR	6350791	ExpressionStatement	type_info -> free_ = free_lf_member	1902:2:48311:48344	6350190	103	True				
ANR	6350792	AssignmentExpression	type_info -> free_ = free_lf_member		6350190	0		=			
ANR	6350793	PtrMemberAccess	type_info -> free_		6350190	0					
ANR	6350794	Identifier	type_info		6350190	0					
ANR	6350795	Identifier	free_		6350190	1					
ANR	6350796	Identifier	free_lf_member		6350190	1					
ANR	6350797	ExpressionStatement	type_info -> get_print_type = get_member_print_type	1903:2:48348:48397	6350190	104	True				
ANR	6350798	AssignmentExpression	type_info -> get_print_type = get_member_print_type		6350190	0		=			
ANR	6350799	PtrMemberAccess	type_info -> get_print_type		6350190	0					
ANR	6350800	Identifier	type_info		6350190	0					
ANR	6350801	Identifier	get_print_type		6350190	1					
ANR	6350802	Identifier	get_member_print_type		6350190	1					
ANR	6350803	BreakStatement	break ;	1904:2:48401:48406	6350190	105	True				
ANR	6350804	Label	case eLF_ONEMETHOD :	1905:1:48409:48427	6350190	106	True				
ANR	6350805	Identifier	eLF_ONEMETHOD		6350190	0					
ANR	6350806	ExpressionStatement	type_info -> get_name = get_onemethod_name	1906:2:48431:48471	6350190	107	True				
ANR	6350807	AssignmentExpression	type_info -> get_name = get_onemethod_name		6350190	0		=			
ANR	6350808	PtrMemberAccess	type_info -> get_name		6350190	0					
ANR	6350809	Identifier	type_info		6350190	0					
ANR	6350810	Identifier	get_name		6350190	1					
ANR	6350811	Identifier	get_onemethod_name		6350190	1					
ANR	6350812	ExpressionStatement	type_info -> get_name_len = get_onemethod_name_len	1907:2:48475:48523	6350190	108	True				
ANR	6350813	AssignmentExpression	type_info -> get_name_len = get_onemethod_name_len		6350190	0		=			
ANR	6350814	PtrMemberAccess	type_info -> get_name_len		6350190	0					
ANR	6350815	Identifier	type_info		6350190	0					
ANR	6350816	Identifier	get_name_len		6350190	1					
ANR	6350817	Identifier	get_onemethod_name_len		6350190	1					
ANR	6350818	ExpressionStatement	type_info -> get_val = get_onemethod_val	1908:2:48527:48565	6350190	109	True				
ANR	6350819	AssignmentExpression	type_info -> get_val = get_onemethod_val		6350190	0		=			
ANR	6350820	PtrMemberAccess	type_info -> get_val		6350190	0					
ANR	6350821	Identifier	type_info		6350190	0					
ANR	6350822	Identifier	get_val		6350190	1					
ANR	6350823	Identifier	get_onemethod_val		6350190	1					
ANR	6350824	ExpressionStatement	type_info -> get_index = get_onemethod_index	1909:2:48569:48611	6350190	110	True				
ANR	6350825	AssignmentExpression	type_info -> get_index = get_onemethod_index		6350190	0		=			
ANR	6350826	PtrMemberAccess	type_info -> get_index		6350190	0					
ANR	6350827	Identifier	type_info		6350190	0					
ANR	6350828	Identifier	get_index		6350190	1					
ANR	6350829	Identifier	get_onemethod_index		6350190	1					
ANR	6350830	ExpressionStatement	type_info -> free_ = free_lf_onemethod	1910:2:48615:48651	6350190	111	True				
ANR	6350831	AssignmentExpression	type_info -> free_ = free_lf_onemethod		6350190	0		=			
ANR	6350832	PtrMemberAccess	type_info -> free_		6350190	0					
ANR	6350833	Identifier	type_info		6350190	0					
ANR	6350834	Identifier	free_		6350190	1					
ANR	6350835	Identifier	free_lf_onemethod		6350190	1					
ANR	6350836	ExpressionStatement	type_info -> get_print_type = get_onemethod_print_type	1911:2:48655:48707	6350190	112	True				
ANR	6350837	AssignmentExpression	type_info -> get_print_type = get_onemethod_print_type		6350190	0		=			
ANR	6350838	PtrMemberAccess	type_info -> get_print_type		6350190	0					
ANR	6350839	Identifier	type_info		6350190	0					
ANR	6350840	Identifier	get_print_type		6350190	1					
ANR	6350841	Identifier	get_onemethod_print_type		6350190	1					
ANR	6350842	BreakStatement	break ;	1912:2:48711:48716	6350190	113	True				
ANR	6350843	Label	default :	1913:1:48719:48726	6350190	114	True				
ANR	6350844	Identifier	default		6350190	0					
ANR	6350845	ExpressionStatement	type_info -> get_name = 0	1915:2:48788:48811	6350190	115	True				
ANR	6350846	AssignmentExpression	type_info -> get_name = 0		6350190	0		=			
ANR	6350847	PtrMemberAccess	type_info -> get_name		6350190	0					
ANR	6350848	Identifier	type_info		6350190	0					
ANR	6350849	Identifier	get_name		6350190	1					
ANR	6350850	PrimaryExpression	0		6350190	1					
ANR	6350851	ExpressionStatement	type_info -> get_val = 0	1916:2:48815:48837	6350190	116	True				
ANR	6350852	AssignmentExpression	type_info -> get_val = 0		6350190	0		=			
ANR	6350853	PtrMemberAccess	type_info -> get_val		6350190	0					
ANR	6350854	Identifier	type_info		6350190	0					
ANR	6350855	Identifier	get_val		6350190	1					
ANR	6350856	PrimaryExpression	0		6350190	1					
ANR	6350857	ExpressionStatement	type_info -> get_name_len = 0	1917:2:48841:48868	6350190	117	True				
ANR	6350858	AssignmentExpression	type_info -> get_name_len = 0		6350190	0		=			
ANR	6350859	PtrMemberAccess	type_info -> get_name_len		6350190	0					
ANR	6350860	Identifier	type_info		6350190	0					
ANR	6350861	Identifier	get_name_len		6350190	1					
ANR	6350862	PrimaryExpression	0		6350190	1					
ANR	6350863	ExpressionStatement	type_info -> get_members = 0	1918:2:48872:48898	6350190	118	True				
ANR	6350864	AssignmentExpression	type_info -> get_members = 0		6350190	0		=			
ANR	6350865	PtrMemberAccess	type_info -> get_members		6350190	0					
ANR	6350866	Identifier	type_info		6350190	0					
ANR	6350867	Identifier	get_members		6350190	1					
ANR	6350868	PrimaryExpression	0		6350190	1					
ANR	6350869	ExpressionStatement	type_info -> get_arg_type = 0	1919:2:48902:48929	6350190	119	True				
ANR	6350870	AssignmentExpression	type_info -> get_arg_type = 0		6350190	0		=			
ANR	6350871	PtrMemberAccess	type_info -> get_arg_type		6350190	0					
ANR	6350872	Identifier	type_info		6350190	0					
ANR	6350873	Identifier	get_arg_type		6350190	1					
ANR	6350874	PrimaryExpression	0		6350190	1					
ANR	6350875	ExpressionStatement	type_info -> get_element_type = 0	1920:2:48933:48964	6350190	120	True				
ANR	6350876	AssignmentExpression	type_info -> get_element_type = 0		6350190	0		=			
ANR	6350877	PtrMemberAccess	type_info -> get_element_type		6350190	0					
ANR	6350878	Identifier	type_info		6350190	0					
ANR	6350879	Identifier	get_element_type		6350190	1					
ANR	6350880	PrimaryExpression	0		6350190	1					
ANR	6350881	ExpressionStatement	type_info -> get_index_type = 0	1921:2:48968:48997	6350190	121	True				
ANR	6350882	AssignmentExpression	type_info -> get_index_type = 0		6350190	0		=			
ANR	6350883	PtrMemberAccess	type_info -> get_index_type		6350190	0					
ANR	6350884	Identifier	type_info		6350190	0					
ANR	6350885	Identifier	get_index_type		6350190	1					
ANR	6350886	PrimaryExpression	0		6350190	1					
ANR	6350887	ExpressionStatement	type_info -> get_base_type = 0	1922:2:49001:49029	6350190	122	True				
ANR	6350888	AssignmentExpression	type_info -> get_base_type = 0		6350190	0		=			
ANR	6350889	PtrMemberAccess	type_info -> get_base_type		6350190	0					
ANR	6350890	Identifier	type_info		6350190	0					
ANR	6350891	Identifier	get_base_type		6350190	1					
ANR	6350892	PrimaryExpression	0		6350190	1					
ANR	6350893	ExpressionStatement	type_info -> get_derived = 0	1923:2:49033:49059	6350190	123	True				
ANR	6350894	AssignmentExpression	type_info -> get_derived = 0		6350190	0		=			
ANR	6350895	PtrMemberAccess	type_info -> get_derived		6350190	0					
ANR	6350896	Identifier	type_info		6350190	0					
ANR	6350897	Identifier	get_derived		6350190	1					
ANR	6350898	PrimaryExpression	0		6350190	1					
ANR	6350899	ExpressionStatement	type_info -> get_vshape = 0	1924:2:49063:49088	6350190	124	True				
ANR	6350900	AssignmentExpression	type_info -> get_vshape = 0		6350190	0		=			
ANR	6350901	PtrMemberAccess	type_info -> get_vshape		6350190	0					
ANR	6350902	Identifier	type_info		6350190	0					
ANR	6350903	Identifier	get_vshape		6350190	1					
ANR	6350904	PrimaryExpression	0		6350190	1					
ANR	6350905	ExpressionStatement	type_info -> get_utype = 0	1925:2:49092:49116	6350190	125	True				
ANR	6350906	AssignmentExpression	type_info -> get_utype = 0		6350190	0		=			
ANR	6350907	PtrMemberAccess	type_info -> get_utype		6350190	0					
ANR	6350908	Identifier	type_info		6350190	0					
ANR	6350909	Identifier	get_utype		6350190	1					
ANR	6350910	PrimaryExpression	0		6350190	1					
ANR	6350911	ExpressionStatement	type_info -> get_return_type = 0	1926:2:49120:49150	6350190	126	True				
ANR	6350912	AssignmentExpression	type_info -> get_return_type = 0		6350190	0		=			
ANR	6350913	PtrMemberAccess	type_info -> get_return_type		6350190	0					
ANR	6350914	Identifier	type_info		6350190	0					
ANR	6350915	Identifier	get_return_type		6350190	1					
ANR	6350916	PrimaryExpression	0		6350190	1					
ANR	6350917	ExpressionStatement	type_info -> get_class_type = 0	1927:2:49154:49183	6350190	127	True				
ANR	6350918	AssignmentExpression	type_info -> get_class_type = 0		6350190	0		=			
ANR	6350919	PtrMemberAccess	type_info -> get_class_type		6350190	0					
ANR	6350920	Identifier	type_info		6350190	0					
ANR	6350921	Identifier	get_class_type		6350190	1					
ANR	6350922	PrimaryExpression	0		6350190	1					
ANR	6350923	ExpressionStatement	type_info -> get_this_type = 0	1928:2:49187:49215	6350190	128	True				
ANR	6350924	AssignmentExpression	type_info -> get_this_type = 0		6350190	0		=			
ANR	6350925	PtrMemberAccess	type_info -> get_this_type		6350190	0					
ANR	6350926	Identifier	type_info		6350190	0					
ANR	6350927	Identifier	get_this_type		6350190	1					
ANR	6350928	PrimaryExpression	0		6350190	1					
ANR	6350929	ExpressionStatement	type_info -> get_arglist = 0	1929:2:49219:49245	6350190	129	True				
ANR	6350930	AssignmentExpression	type_info -> get_arglist = 0		6350190	0		=			
ANR	6350931	PtrMemberAccess	type_info -> get_arglist		6350190	0					
ANR	6350932	Identifier	type_info		6350190	0					
ANR	6350933	Identifier	get_arglist		6350190	1					
ANR	6350934	PrimaryExpression	0		6350190	1					
ANR	6350935	ExpressionStatement	type_info -> get_index = 0	1930:2:49249:49273	6350190	130	True				
ANR	6350936	AssignmentExpression	type_info -> get_index = 0		6350190	0		=			
ANR	6350937	PtrMemberAccess	type_info -> get_index		6350190	0					
ANR	6350938	Identifier	type_info		6350190	0					
ANR	6350939	Identifier	get_index		6350190	1					
ANR	6350940	PrimaryExpression	0		6350190	1					
ANR	6350941	ExpressionStatement	type_info -> get_mlist = 0	1931:2:49277:49301	6350190	131	True				
ANR	6350942	AssignmentExpression	type_info -> get_mlist = 0		6350190	0		=			
ANR	6350943	PtrMemberAccess	type_info -> get_mlist		6350190	0					
ANR	6350944	Identifier	type_info		6350190	0					
ANR	6350945	Identifier	get_mlist		6350190	1					
ANR	6350946	PrimaryExpression	0		6350190	1					
ANR	6350947	ExpressionStatement	type_info -> get_print_type = 0	1932:2:49305:49334	6350190	132	True				
ANR	6350948	AssignmentExpression	type_info -> get_print_type = 0		6350190	0		=			
ANR	6350949	PtrMemberAccess	type_info -> get_print_type		6350190	0					
ANR	6350950	Identifier	type_info		6350190	0					
ANR	6350951	Identifier	get_print_type		6350190	1					
ANR	6350952	PrimaryExpression	0		6350190	1					
ANR	6350953	BreakStatement	break ;	1933:2:49338:49343	6350190	133	True				
ANR	6350954	ReturnType	static void		6350190	1					
ANR	6350955	Identifier	init_stype_info		6350190	2					
ANR	6350956	ParameterList	STypeInfo * type_info		6350190	3					
ANR	6350957	Parameter	STypeInfo * type_info	1774:28:43831:43850	6350190	0	True				
ANR	6350958	ParameterType	STypeInfo *		6350190	0					
ANR	6350959	Identifier	type_info		6350190	1					
ANR	6350960	CFGEntryNode	ENTRY		6350190		True				
ANR	6350961	CFGExitNode	EXIT		6350190		True				
ANR	6350962	Symbol	get_array_print_type		6350190						
ANR	6350963	Symbol	type_info -> get_mlist		6350190						
ANR	6350964	Symbol	get_method_name		6350190						
ANR	6350965	Symbol	free_lf_enum		6350190						
ANR	6350966	Symbol	get_union_name		6350190						
ANR	6350967	Symbol	get_bitfield_base_type		6350190						
ANR	6350968	Symbol	get_enumerate_print_type		6350190						
ANR	6350969	Symbol	get_mfunction_this_type		6350190						
ANR	6350970	Symbol	get_mfunction_print_type		6350190						
ANR	6350971	Symbol	get_class_struct_name_len		6350190						
ANR	6350972	Symbol	get_nesttype_name_len		6350190						
ANR	6350973	Symbol	get_nesttype_name		6350190						
ANR	6350974	Symbol	is_union_fwdref		6350190						
ANR	6350975	Symbol	get_arglist_print_type		6350190						
ANR	6350976	Symbol	free_lf_fieldlist		6350190						
ANR	6350977	Symbol	get_enum_print_type		6350190						
ANR	6350978	Symbol	get_member_index		6350190						
ANR	6350979	Symbol	get_bitfield_print_type		6350190						
ANR	6350980	Symbol	get_vtshape_print_type		6350190						
ANR	6350981	Symbol	get_mfunction_return_type		6350190						
ANR	6350982	Symbol	type_info -> get_index_type		6350190						
ANR	6350983	Symbol	free_lf_method		6350190						
ANR	6350984	Symbol	get_member_name		6350190						
ANR	6350985	Symbol	get_enum_name_len		6350190						
ANR	6350986	Symbol	get_array_name		6350190						
ANR	6350987	Symbol	type_info -> get_base_type		6350190						
ANR	6350988	Symbol	get_enumerate_val		6350190						
ANR	6350989	Symbol	type_info -> free_		6350190						
ANR	6350990	Symbol	get_union_name_len		6350190						
ANR	6350991	Symbol	type_info -> get_arg_type		6350190						
ANR	6350992	Symbol	get_member_print_type		6350190						
ANR	6350993	Symbol	type_info -> get_derived		6350190						
ANR	6350994	Symbol	get_class_struct_derived		6350190						
ANR	6350995	Symbol	type_info -> get_class_type		6350190						
ANR	6350996	Symbol	get_array_element_type		6350190						
ANR	6350997	Symbol	type_info -> get_arglist		6350190						
ANR	6350998	Symbol	get_array_val		6350190						
ANR	6350999	Symbol	type_info -> get_modified_type		6350190						
ANR	6351000	Symbol	get_nesttype_index		6350190						
ANR	6351001	Symbol	free_lf_union		6350190						
ANR	6351002	Symbol	get_enumerate_name_len		6350190						
ANR	6351003	Symbol	type_info		6350190						
ANR	6351004	Symbol	type_info -> get_utype		6350190						
ANR	6351005	Symbol	type_info -> get_members		6350190						
ANR	6351006	Symbol	get_union_print_type		6350190						
ANR	6351007	Symbol	get_onemethod_val		6350190						
ANR	6351008	Symbol	get_onemethod_print_type		6350190						
ANR	6351009	Symbol	get_enum_name		6350190						
ANR	6351010	Symbol	get_mfunction_arglist		6350190						
ANR	6351011	Symbol	get_method_print_type		6350190						
ANR	6351012	Symbol	get_class_struct_vshape		6350190						
ANR	6351013	Symbol	free_lf_class		6350190						
ANR	6351014	Symbol	get_union_members		6350190						
ANR	6351015	Symbol	get_onemethod_index		6350190						
ANR	6351016	Symbol	get_member_name_len		6350190						
ANR	6351017	Symbol	get_onemethod_name		6350190						
ANR	6351018	Symbol	free_lf_array		6350190						
ANR	6351019	Symbol	is_struct_class_fwdref		6350190						
ANR	6351020	Symbol	type_info -> get_name		6350190						
ANR	6351021	Symbol	type_info -> get_index		6350190						
ANR	6351022	Symbol	get_onemethod_name_len		6350190						
ANR	6351023	Symbol	get_class_struct_name		6350190						
ANR	6351024	Symbol	type_info -> get_name_len		6350190						
ANR	6351025	Symbol	get_enum_utype		6350190						
ANR	6351026	Symbol	free_lf_onemethod		6350190						
ANR	6351027	Symbol	get_mfunction_class_type		6350190						
ANR	6351028	Symbol	get_procedure_print_type		6350190						
ANR	6351029	Symbol	type_info -> leaf_type		6350190						
ANR	6351030	Symbol	get_fieldlist_members		6350190						
ANR	6351031	Symbol	get_class_struct_val		6350190						
ANR	6351032	Symbol	get_array_name_len		6350190						
ANR	6351033	Symbol	get_enum_members		6350190						
ANR	6351034	Symbol	free_lf_arglist		6350190						
ANR	6351035	Symbol	free_lf_vtshape		6350190						
ANR	6351036	Symbol	get_procedure_arglist		6350190						
ANR	6351037	Symbol	get_method_name_len		6350190						
ANR	6351038	Symbol	get_modifier_modified_type		6350190						
ANR	6351039	Symbol	free_lf_enumerate		6350190						
ANR	6351040	Symbol	* type_info		6350190						
ANR	6351041	Symbol	get_union_val		6350190						
ANR	6351042	Symbol	get_method_mlist		6350190						
ANR	6351043	Symbol	type_info -> get_return_type		6350190						
ANR	6351044	Symbol	type_info -> get_element_type		6350190						
ANR	6351045	Symbol	get_class_struct_print_type		6350190						
ANR	6351046	Symbol	get_array_index_type		6350190						
ANR	6351047	Symbol	type_info -> get_this_type		6350190						
ANR	6351048	Symbol	get_procedure_return_type		6350190						
ANR	6351049	Symbol	get_member_val		6350190						
ANR	6351050	Symbol	get_struct_class_members		6350190						
ANR	6351051	Symbol	type_info -> get_print_type		6350190						
ANR	6351052	Symbol	free_lf_nesttype		6350190						
ANR	6351053	Symbol	type_info -> get_val		6350190						
ANR	6351054	Symbol	get_pointer_print_type		6350190						
ANR	6351055	Symbol	get_modifier_print_type		6350190						
ANR	6351056	Symbol	type_info -> is_fwdref		6350190						
ANR	6351057	Symbol	type_info -> get_vshape		6350190						
ANR	6351058	Symbol	get_pointer_utype		6350190						
ANR	6351059	Symbol	get_enumerate_name		6350190						
ANR	6351060	Symbol	get_fieldlist_print_type		6350190						
ANR	6351061	Symbol	free_lf_member		6350190						
ANR	6351062	Symbol	get_nesttype_print_type		6350190						
ANR	6351063	DeclStmt									
ANR	6351064	Decl							STypeInfo	STypeInfo *	type_info
ANR	6351065	DeclStmt									
ANR	6351066	Decl							lf_type	lf_type *	lf
ANR	6351067	DeclStmt									
ANR	6351068	Decl							parse_	"parse_ ( lf , p , read_bytes , len )"	lf_func_name
ANR	6351069	Function	parse_lf_fieldlist	1953:0:49921:50888							
ANR	6351070	FunctionDef	"parse_lf_fieldlist (SLF_FIELDLIST * lf_fieldlist , unsigned char * leaf_data , unsigned int * read_bytes , unsigned int len)"		6351069	0					
ANR	6351071	CompoundStatement		1954:0:50051:50888	6351069	0					
ANR	6351072	IdentifierDeclStatement	ELeafType leaf_type ;	1955:1:50054:50073	6351069	0	True				
ANR	6351073	IdentifierDecl	leaf_type		6351069	0					
ANR	6351074	IdentifierDeclType	ELeafType		6351069	0					
ANR	6351075	Identifier	leaf_type		6351069	1					
ANR	6351076	IdentifierDeclStatement	int curr_read_bytes = 0 ;	1956:1:50076:50099	6351069	1	True				
ANR	6351077	IdentifierDecl	curr_read_bytes = 0		6351069	0					
ANR	6351078	IdentifierDeclType	int		6351069	0					
ANR	6351079	Identifier	curr_read_bytes		6351069	1					
ANR	6351080	AssignmentExpression	curr_read_bytes = 0		6351069	2		=			
ANR	6351081	Identifier	curr_read_bytes		6351069	0					
ANR	6351082	PrimaryExpression	0		6351069	1					
ANR	6351083	IdentifierDeclStatement	unsigned char * p = leaf_data ;	1957:1:50102:50130	6351069	2	True				
ANR	6351084	IdentifierDecl	* p = leaf_data		6351069	0					
ANR	6351085	IdentifierDeclType	unsigned char *		6351069	0					
ANR	6351086	Identifier	p		6351069	1					
ANR	6351087	AssignmentExpression	* p = leaf_data		6351069	2		=			
ANR	6351088	Identifier	leaf_data		6351069	0					
ANR	6351089	Identifier	leaf_data		6351069	1					
ANR	6351090	ExpressionStatement	lf_fieldlist -> substructs = r_list_new ( )	1959:1:50134:50173	6351069	3	True				
ANR	6351091	AssignmentExpression	lf_fieldlist -> substructs = r_list_new ( )		6351069	0		=			
ANR	6351092	PtrMemberAccess	lf_fieldlist -> substructs		6351069	0					
ANR	6351093	Identifier	lf_fieldlist		6351069	0					
ANR	6351094	Identifier	substructs		6351069	1					
ANR	6351095	CallExpression	r_list_new ( )		6351069	1					
ANR	6351096	Callee	r_list_new		6351069	0					
ANR	6351097	Identifier	r_list_new		6351069	0					
ANR	6351098	ArgumentList			6351069	1					
ANR	6351099	WhileStatement	while ( * read_bytes <= len )		6351069	4					
ANR	6351100	Condition	* read_bytes <= len	1961:8:50184:50201	6351069	0	True				
ANR	6351101	RelationalExpression	* read_bytes <= len		6351069	0		<=			
ANR	6351102	UnaryOperationExpression	* read_bytes		6351069	0					
ANR	6351103	UnaryOperator	*		6351069	0					
ANR	6351104	Identifier	read_bytes		6351069	1					
ANR	6351105	Identifier	len		6351069	1					
ANR	6351106	CompoundStatement		8:28:152:152	6351069	1					
ANR	6351107	ExpressionStatement	"READ2 ( * read_bytes , len , leaf_type , p , ut16 )"	1962:2:50208:50251	6351069	0	True				
ANR	6351108	CallExpression	"READ2 ( * read_bytes , len , leaf_type , p , ut16 )"		6351069	0					
ANR	6351109	Callee	READ2		6351069	0					
ANR	6351110	Identifier	READ2		6351069	0					
ANR	6351111	ArgumentList	* read_bytes		6351069	1					
ANR	6351112	Argument	* read_bytes		6351069	0					
ANR	6351113	UnaryOperationExpression	* read_bytes		6351069	0					
ANR	6351114	UnaryOperator	*		6351069	0					
ANR	6351115	Identifier	read_bytes		6351069	1					
ANR	6351116	Argument	len		6351069	1					
ANR	6351117	Identifier	len		6351069	0					
ANR	6351118	Argument	leaf_type		6351069	2					
ANR	6351119	Identifier	leaf_type		6351069	0					
ANR	6351120	Argument	p		6351069	3					
ANR	6351121	Identifier	p		6351069	0					
ANR	6351122	Argument	ut16		6351069	4					
ANR	6351123	Identifier	ut16		6351069	0					
ANR	6351124	SwitchStatement	switch ( leaf_type )		6351069	1					
ANR	6351125	Condition	leaf_type	1963:10:50263:50271	6351069	0	True				
ANR	6351126	Identifier	leaf_type		6351069	0					
ANR	6351127	CompoundStatement		10:21:222:222	6351069	1					
ANR	6351128	Label	case eLF_ENUMERATE :	1964:2:50278:50296	6351069	0	True				
ANR	6351129	Identifier	eLF_ENUMERATE		6351069	0					
ANR	6351130	ExpressionStatement	"PARSE_LF2 ( SLF_ENUMERATE , lf_enumerate , eLF_ENUMERATE )"	1965:3:50301:50354	6351069	1	True				
ANR	6351131	CallExpression	"PARSE_LF2 ( SLF_ENUMERATE , lf_enumerate , eLF_ENUMERATE )"		6351069	0					
ANR	6351132	Callee	PARSE_LF2		6351069	0					
ANR	6351133	Identifier	PARSE_LF2		6351069	0					
ANR	6351134	ArgumentList	SLF_ENUMERATE		6351069	1					
ANR	6351135	Argument	SLF_ENUMERATE		6351069	0					
ANR	6351136	Identifier	SLF_ENUMERATE		6351069	0					
ANR	6351137	Argument	lf_enumerate		6351069	1					
ANR	6351138	Identifier	lf_enumerate		6351069	0					
ANR	6351139	Argument	eLF_ENUMERATE		6351069	2					
ANR	6351140	Identifier	eLF_ENUMERATE		6351069	0					
ANR	6351141	BreakStatement	break ;	1966:3:50359:50364	6351069	2	True				
ANR	6351142	Label	case eLF_NESTTYPE :	1967:2:50368:50385	6351069	3	True				
ANR	6351143	Identifier	eLF_NESTTYPE		6351069	0					
ANR	6351144	ExpressionStatement	"PARSE_LF2 ( SLF_NESTTYPE , lf_nesttype , eLF_NESTTYPE )"	1968:3:50390:50440	6351069	4	True				
ANR	6351145	CallExpression	"PARSE_LF2 ( SLF_NESTTYPE , lf_nesttype , eLF_NESTTYPE )"		6351069	0					
ANR	6351146	Callee	PARSE_LF2		6351069	0					
ANR	6351147	Identifier	PARSE_LF2		6351069	0					
ANR	6351148	ArgumentList	SLF_NESTTYPE		6351069	1					
ANR	6351149	Argument	SLF_NESTTYPE		6351069	0					
ANR	6351150	Identifier	SLF_NESTTYPE		6351069	0					
ANR	6351151	Argument	lf_nesttype		6351069	1					
ANR	6351152	Identifier	lf_nesttype		6351069	0					
ANR	6351153	Argument	eLF_NESTTYPE		6351069	2					
ANR	6351154	Identifier	eLF_NESTTYPE		6351069	0					
ANR	6351155	BreakStatement	break ;	1969:3:50445:50450	6351069	5	True				
ANR	6351156	Label	case eLF_METHOD :	1970:2:50454:50469	6351069	6	True				
ANR	6351157	Identifier	eLF_METHOD		6351069	0					
ANR	6351158	ExpressionStatement	"PARSE_LF2 ( SLF_METHOD , lf_method , eLF_METHOD )"	1971:3:50474:50518	6351069	7	True				
ANR	6351159	CallExpression	"PARSE_LF2 ( SLF_METHOD , lf_method , eLF_METHOD )"		6351069	0					
ANR	6351160	Callee	PARSE_LF2		6351069	0					
ANR	6351161	Identifier	PARSE_LF2		6351069	0					
ANR	6351162	ArgumentList	SLF_METHOD		6351069	1					
ANR	6351163	Argument	SLF_METHOD		6351069	0					
ANR	6351164	Identifier	SLF_METHOD		6351069	0					
ANR	6351165	Argument	lf_method		6351069	1					
ANR	6351166	Identifier	lf_method		6351069	0					
ANR	6351167	Argument	eLF_METHOD		6351069	2					
ANR	6351168	Identifier	eLF_METHOD		6351069	0					
ANR	6351169	BreakStatement	break ;	1972:3:50523:50528	6351069	8	True				
ANR	6351170	Label	case eLF_MEMBER :	1973:2:50532:50547	6351069	9	True				
ANR	6351171	Identifier	eLF_MEMBER		6351069	0					
ANR	6351172	ExpressionStatement	"PARSE_LF2 ( SLF_MEMBER , lf_member , eLF_MEMBER )"	1974:3:50552:50596	6351069	10	True				
ANR	6351173	CallExpression	"PARSE_LF2 ( SLF_MEMBER , lf_member , eLF_MEMBER )"		6351069	0					
ANR	6351174	Callee	PARSE_LF2		6351069	0					
ANR	6351175	Identifier	PARSE_LF2		6351069	0					
ANR	6351176	ArgumentList	SLF_MEMBER		6351069	1					
ANR	6351177	Argument	SLF_MEMBER		6351069	0					
ANR	6351178	Identifier	SLF_MEMBER		6351069	0					
ANR	6351179	Argument	lf_member		6351069	1					
ANR	6351180	Identifier	lf_member		6351069	0					
ANR	6351181	Argument	eLF_MEMBER		6351069	2					
ANR	6351182	Identifier	eLF_MEMBER		6351069	0					
ANR	6351183	BreakStatement	break ;	1975:3:50601:50606	6351069	11	True				
ANR	6351184	Label	case eLF_ONEMETHOD :	1976:2:50610:50628	6351069	12	True				
ANR	6351185	Identifier	eLF_ONEMETHOD		6351069	0					
ANR	6351186	ExpressionStatement	"PARSE_LF2 ( SLF_ONEMETHOD , lf_onemethod , eLF_ONEMETHOD )"	1977:3:50633:50686	6351069	13	True				
ANR	6351187	CallExpression	"PARSE_LF2 ( SLF_ONEMETHOD , lf_onemethod , eLF_ONEMETHOD )"		6351069	0					
ANR	6351188	Callee	PARSE_LF2		6351069	0					
ANR	6351189	Identifier	PARSE_LF2		6351069	0					
ANR	6351190	ArgumentList	SLF_ONEMETHOD		6351069	1					
ANR	6351191	Argument	SLF_ONEMETHOD		6351069	0					
ANR	6351192	Identifier	SLF_ONEMETHOD		6351069	0					
ANR	6351193	Argument	lf_onemethod		6351069	1					
ANR	6351194	Identifier	lf_onemethod		6351069	0					
ANR	6351195	Argument	eLF_ONEMETHOD		6351069	2					
ANR	6351196	Identifier	eLF_ONEMETHOD		6351069	0					
ANR	6351197	BreakStatement	break ;	1978:3:50691:50696	6351069	14	True				
ANR	6351198	Label	default :	1979:2:50700:50707	6351069	15	True				
ANR	6351199	Identifier	default		6351069	0					
ANR	6351200	ReturnStatement	return 0 ;	1981:3:50776:50784	6351069	16	True				
ANR	6351201	PrimaryExpression	0		6351069	0					
ANR	6351202	IfStatement	if ( curr_read_bytes != 0 )		6351069	2					
ANR	6351203	Condition	curr_read_bytes != 0	1984:6:50797:50816	6351069	0	True				
ANR	6351204	EqualityExpression	curr_read_bytes != 0		6351069	0		!=			
ANR	6351205	Identifier	curr_read_bytes		6351069	0					
ANR	6351206	PrimaryExpression	0		6351069	1					
ANR	6351207	CompoundStatement		31:28:767:767	6351069	1					
ANR	6351208	ExpressionStatement	p += curr_read_bytes	1985:3:50824:50844	6351069	0	True				
ANR	6351209	AssignmentExpression	p += curr_read_bytes		6351069	0		+=			
ANR	6351210	Identifier	p		6351069	0					
ANR	6351211	Identifier	curr_read_bytes		6351069	1					
ANR	6351212	ElseStatement	else		6351069	0					
ANR	6351213	CompoundStatement		33:9:803:803	6351069	0					
ANR	6351214	ReturnStatement	return 0 ;	1987:3:50860:50868	6351069	0	True				
ANR	6351215	PrimaryExpression	0		6351069	0					
ANR	6351216	ReturnStatement	return 0 ;	1990:1:50878:50886	6351069	5	True				
ANR	6351217	PrimaryExpression	0		6351069	0					
ANR	6351218	ReturnType	static int		6351069	1					
ANR	6351219	Identifier	parse_lf_fieldlist		6351069	2					
ANR	6351220	ParameterList	"SLF_FIELDLIST * lf_fieldlist , unsigned char * leaf_data , unsigned int * read_bytes , unsigned int len"		6351069	3					
ANR	6351221	Parameter	SLF_FIELDLIST * lf_fieldlist	1953:30:49951:49977	6351069	0	True				
ANR	6351222	ParameterType	SLF_FIELDLIST *		6351069	0					
ANR	6351223	Identifier	lf_fieldlist		6351069	1					
ANR	6351224	Parameter	unsigned char * leaf_data	1953:60:49981:50004	6351069	1	True				
ANR	6351225	ParameterType	unsigned char *		6351069	0					
ANR	6351226	Identifier	leaf_data		6351069	1					
ANR	6351227	Parameter	unsigned int * read_bytes	1953:86:50007:50030	6351069	2	True				
ANR	6351228	ParameterType	unsigned int *		6351069	0					
ANR	6351229	Identifier	read_bytes		6351069	1					
ANR	6351230	Parameter	unsigned int len	1953:112:50033:50048	6351069	3	True				
ANR	6351231	ParameterType	unsigned int		6351069	0					
ANR	6351232	Identifier	len		6351069	1					
ANR	6351233	CFGEntryNode	ENTRY		6351069		True				
ANR	6351234	CFGExitNode	EXIT		6351069		True				
ANR	6351235	Symbol	leaf_data		6351069						
ANR	6351236	Symbol	* lf_fieldlist		6351069						
ANR	6351237	Symbol	leaf_type		6351069						
ANR	6351238	Symbol	lf_method		6351069						
ANR	6351239	Symbol	SLF_ENUMERATE		6351069						
ANR	6351240	Symbol	SLF_NESTTYPE		6351069						
ANR	6351241	Symbol	lf_enumerate		6351069						
ANR	6351242	Symbol	* read_bytes		6351069						
ANR	6351243	Symbol	len		6351069						
ANR	6351244	Symbol	lf_fieldlist		6351069						
ANR	6351245	Symbol	curr_read_bytes		6351069						
ANR	6351246	Symbol	SLF_ONEMETHOD		6351069						
ANR	6351247	Symbol	eLF_MEMBER		6351069						
ANR	6351248	Symbol	lf_onemethod		6351069						
ANR	6351249	Symbol	eLF_ONEMETHOD		6351069						
ANR	6351250	Symbol	eLF_METHOD		6351069						
ANR	6351251	Symbol	lf_fieldlist -> substructs		6351069						
ANR	6351252	Symbol	lf_nesttype		6351069						
ANR	6351253	Symbol	SLF_METHOD		6351069						
ANR	6351254	Symbol	eLF_ENUMERATE		6351069						
ANR	6351255	Symbol	read_bytes		6351069						
ANR	6351256	Symbol	p		6351069						
ANR	6351257	Symbol	ut16		6351069						
ANR	6351258	Symbol	SLF_MEMBER		6351069						
ANR	6351259	Symbol	lf_member		6351069						
ANR	6351260	Symbol	eLF_NESTTYPE		6351069						
ANR	6351261	Symbol	r_list_new		6351069						
ANR	6351262	Function	parse_lf_enum	1994:0:50971:51894							
ANR	6351263	FunctionDef	"parse_lf_enum (SLF_ENUM * lf_enum , unsigned char * leaf_data , unsigned int * read_bytes , unsigned int len)"		6351262	0					
ANR	6351264	CompoundStatement		1995:0:51085:51894	6351262	0					
ANR	6351265	IdentifierDeclStatement	unsigned int tmp_before_read_bytes = * read_bytes ;	1996:1:51088:51136	6351262	0	True				
ANR	6351266	IdentifierDecl	tmp_before_read_bytes = * read_bytes		6351262	0					
ANR	6351267	IdentifierDeclType	unsigned int		6351262	0					
ANR	6351268	Identifier	tmp_before_read_bytes		6351262	1					
ANR	6351269	AssignmentExpression	tmp_before_read_bytes = * read_bytes		6351262	2		=			
ANR	6351270	Identifier	tmp_before_read_bytes		6351262	0					
ANR	6351271	UnaryOperationExpression	* read_bytes		6351262	1					
ANR	6351272	UnaryOperator	*		6351262	0					
ANR	6351273	Identifier	read_bytes		6351262	1					
ANR	6351274	IdentifierDeclStatement	unsigned int before_read_bytes = 0 ;	1997:1:51139:51173	6351262	1	True				
ANR	6351275	IdentifierDecl	before_read_bytes = 0		6351262	0					
ANR	6351276	IdentifierDeclType	unsigned int		6351262	0					
ANR	6351277	Identifier	before_read_bytes		6351262	1					
ANR	6351278	AssignmentExpression	before_read_bytes = 0		6351262	2		=			
ANR	6351279	Identifier	before_read_bytes		6351262	0					
ANR	6351280	PrimaryExpression	0		6351262	1					
ANR	6351281	ExpressionStatement	lf_enum -> name . name = 0	1999:1:51177:51199	6351262	2	True				
ANR	6351282	AssignmentExpression	lf_enum -> name . name = 0		6351262	0		=			
ANR	6351283	MemberAccess	lf_enum -> name . name		6351262	0					
ANR	6351284	PtrMemberAccess	lf_enum -> name		6351262	0					
ANR	6351285	Identifier	lf_enum		6351262	0					
ANR	6351286	Identifier	name		6351262	1					
ANR	6351287	Identifier	name		6351262	1					
ANR	6351288	PrimaryExpression	0		6351262	1					
ANR	6351289	ExpressionStatement	"READ2 ( * read_bytes , len , lf_enum -> count , leaf_data , ut16 )"	2001:1:51203:51259	6351262	3	True				
ANR	6351290	CallExpression	"READ2 ( * read_bytes , len , lf_enum -> count , leaf_data , ut16 )"		6351262	0					
ANR	6351291	Callee	READ2		6351262	0					
ANR	6351292	Identifier	READ2		6351262	0					
ANR	6351293	ArgumentList	* read_bytes		6351262	1					
ANR	6351294	Argument	* read_bytes		6351262	0					
ANR	6351295	UnaryOperationExpression	* read_bytes		6351262	0					
ANR	6351296	UnaryOperator	*		6351262	0					
ANR	6351297	Identifier	read_bytes		6351262	1					
ANR	6351298	Argument	len		6351262	1					
ANR	6351299	Identifier	len		6351262	0					
ANR	6351300	Argument	lf_enum -> count		6351262	2					
ANR	6351301	PtrMemberAccess	lf_enum -> count		6351262	0					
ANR	6351302	Identifier	lf_enum		6351262	0					
ANR	6351303	Identifier	count		6351262	1					
ANR	6351304	Argument	leaf_data		6351262	3					
ANR	6351305	Identifier	leaf_data		6351262	0					
ANR	6351306	Argument	ut16		6351262	4					
ANR	6351307	Identifier	ut16		6351262	0					
ANR	6351308	ExpressionStatement	"READ2 ( * read_bytes , len , lf_enum -> prop . cv_property , leaf_data , ut16 )"	2002:1:51262:51329	6351262	4	True				
ANR	6351309	CallExpression	"READ2 ( * read_bytes , len , lf_enum -> prop . cv_property , leaf_data , ut16 )"		6351262	0					
ANR	6351310	Callee	READ2		6351262	0					
ANR	6351311	Identifier	READ2		6351262	0					
ANR	6351312	ArgumentList	* read_bytes		6351262	1					
ANR	6351313	Argument	* read_bytes		6351262	0					
ANR	6351314	UnaryOperationExpression	* read_bytes		6351262	0					
ANR	6351315	UnaryOperator	*		6351262	0					
ANR	6351316	Identifier	read_bytes		6351262	1					
ANR	6351317	Argument	len		6351262	1					
ANR	6351318	Identifier	len		6351262	0					
ANR	6351319	Argument	lf_enum -> prop . cv_property		6351262	2					
ANR	6351320	MemberAccess	lf_enum -> prop . cv_property		6351262	0					
ANR	6351321	PtrMemberAccess	lf_enum -> prop		6351262	0					
ANR	6351322	Identifier	lf_enum		6351262	0					
ANR	6351323	Identifier	prop		6351262	1					
ANR	6351324	Identifier	cv_property		6351262	1					
ANR	6351325	Argument	leaf_data		6351262	3					
ANR	6351326	Identifier	leaf_data		6351262	0					
ANR	6351327	Argument	ut16		6351262	4					
ANR	6351328	Identifier	ut16		6351262	0					
ANR	6351329	ExpressionStatement	"READ4 ( * read_bytes , len , lf_enum -> utype , leaf_data , ut32 )"	2003:1:51332:51388	6351262	5	True				
ANR	6351330	CallExpression	"READ4 ( * read_bytes , len , lf_enum -> utype , leaf_data , ut32 )"		6351262	0					
ANR	6351331	Callee	READ4		6351262	0					
ANR	6351332	Identifier	READ4		6351262	0					
ANR	6351333	ArgumentList	* read_bytes		6351262	1					
ANR	6351334	Argument	* read_bytes		6351262	0					
ANR	6351335	UnaryOperationExpression	* read_bytes		6351262	0					
ANR	6351336	UnaryOperator	*		6351262	0					
ANR	6351337	Identifier	read_bytes		6351262	1					
ANR	6351338	Argument	len		6351262	1					
ANR	6351339	Identifier	len		6351262	0					
ANR	6351340	Argument	lf_enum -> utype		6351262	2					
ANR	6351341	PtrMemberAccess	lf_enum -> utype		6351262	0					
ANR	6351342	Identifier	lf_enum		6351262	0					
ANR	6351343	Identifier	utype		6351262	1					
ANR	6351344	Argument	leaf_data		6351262	3					
ANR	6351345	Identifier	leaf_data		6351262	0					
ANR	6351346	Argument	ut32		6351262	4					
ANR	6351347	Identifier	ut32		6351262	0					
ANR	6351348	ExpressionStatement	"READ4 ( * read_bytes , len , lf_enum -> field_list , leaf_data , ut32 )"	2004:1:51391:51452	6351262	6	True				
ANR	6351349	CallExpression	"READ4 ( * read_bytes , len , lf_enum -> field_list , leaf_data , ut32 )"		6351262	0					
ANR	6351350	Callee	READ4		6351262	0					
ANR	6351351	Identifier	READ4		6351262	0					
ANR	6351352	ArgumentList	* read_bytes		6351262	1					
ANR	6351353	Argument	* read_bytes		6351262	0					
ANR	6351354	UnaryOperationExpression	* read_bytes		6351262	0					
ANR	6351355	UnaryOperator	*		6351262	0					
ANR	6351356	Identifier	read_bytes		6351262	1					
ANR	6351357	Argument	len		6351262	1					
ANR	6351358	Identifier	len		6351262	0					
ANR	6351359	Argument	lf_enum -> field_list		6351262	2					
ANR	6351360	PtrMemberAccess	lf_enum -> field_list		6351262	0					
ANR	6351361	Identifier	lf_enum		6351262	0					
ANR	6351362	Identifier	field_list		6351262	1					
ANR	6351363	Argument	leaf_data		6351262	3					
ANR	6351364	Identifier	leaf_data		6351262	0					
ANR	6351365	Argument	ut32		6351262	4					
ANR	6351366	Identifier	ut32		6351262	0					
ANR	6351367	ExpressionStatement	lf_enum -> prop . cv_property = SWAP_UINT16 ( lf_enum -> prop . cv_property )	2006:1:51456:51522	6351262	7	True				
ANR	6351368	AssignmentExpression	lf_enum -> prop . cv_property = SWAP_UINT16 ( lf_enum -> prop . cv_property )		6351262	0		=			
ANR	6351369	MemberAccess	lf_enum -> prop . cv_property		6351262	0					
ANR	6351370	PtrMemberAccess	lf_enum -> prop		6351262	0					
ANR	6351371	Identifier	lf_enum		6351262	0					
ANR	6351372	Identifier	prop		6351262	1					
ANR	6351373	Identifier	cv_property		6351262	1					
ANR	6351374	CallExpression	SWAP_UINT16 ( lf_enum -> prop . cv_property )		6351262	1					
ANR	6351375	Callee	SWAP_UINT16		6351262	0					
ANR	6351376	Identifier	SWAP_UINT16		6351262	0					
ANR	6351377	ArgumentList	lf_enum -> prop . cv_property		6351262	1					
ANR	6351378	Argument	lf_enum -> prop . cv_property		6351262	0					
ANR	6351379	MemberAccess	lf_enum -> prop . cv_property		6351262	0					
ANR	6351380	PtrMemberAccess	lf_enum -> prop		6351262	0					
ANR	6351381	Identifier	lf_enum		6351262	0					
ANR	6351382	Identifier	prop		6351262	1					
ANR	6351383	Identifier	cv_property		6351262	1					
ANR	6351384	ExpressionStatement	before_read_bytes = * read_bytes	2007:1:51525:51556	6351262	8	True				
ANR	6351385	AssignmentExpression	before_read_bytes = * read_bytes		6351262	0		=			
ANR	6351386	Identifier	before_read_bytes		6351262	0					
ANR	6351387	UnaryOperationExpression	* read_bytes		6351262	1					
ANR	6351388	UnaryOperator	*		6351262	0					
ANR	6351389	Identifier	read_bytes		6351262	1					
ANR	6351390	ExpressionStatement	"parse_sctring ( & lf_enum -> name , leaf_data , read_bytes , len )"	2008:1:51559:51617	6351262	9	True				
ANR	6351391	CallExpression	"parse_sctring ( & lf_enum -> name , leaf_data , read_bytes , len )"		6351262	0					
ANR	6351392	Callee	parse_sctring		6351262	0					
ANR	6351393	Identifier	parse_sctring		6351262	0					
ANR	6351394	ArgumentList	& lf_enum -> name		6351262	1					
ANR	6351395	Argument	& lf_enum -> name		6351262	0					
ANR	6351396	UnaryOperationExpression	& lf_enum -> name		6351262	0					
ANR	6351397	UnaryOperator	&		6351262	0					
ANR	6351398	PtrMemberAccess	lf_enum -> name		6351262	1					
ANR	6351399	Identifier	lf_enum		6351262	0					
ANR	6351400	Identifier	name		6351262	1					
ANR	6351401	Argument	leaf_data		6351262	1					
ANR	6351402	Identifier	leaf_data		6351262	0					
ANR	6351403	Argument	read_bytes		6351262	2					
ANR	6351404	Identifier	read_bytes		6351262	0					
ANR	6351405	Argument	len		6351262	3					
ANR	6351406	Identifier	len		6351262	0					
ANR	6351407	ExpressionStatement	leaf_data += ( * read_bytes - before_read_bytes )	2009:1:51620:51666	6351262	10	True				
ANR	6351408	AssignmentExpression	leaf_data += ( * read_bytes - before_read_bytes )		6351262	0		+=			
ANR	6351409	Identifier	leaf_data		6351262	0					
ANR	6351410	AdditiveExpression	* read_bytes - before_read_bytes		6351262	1		-			
ANR	6351411	UnaryOperationExpression	* read_bytes		6351262	0					
ANR	6351412	UnaryOperator	*		6351262	0					
ANR	6351413	Identifier	read_bytes		6351262	1					
ANR	6351414	Identifier	before_read_bytes		6351262	1					
ANR	6351415	ExpressionStatement	"PEEK_READ1 ( * read_bytes , len , lf_enum -> pad , leaf_data , ut8 )"	2011:1:51670:51728	6351262	11	True				
ANR	6351416	CallExpression	"PEEK_READ1 ( * read_bytes , len , lf_enum -> pad , leaf_data , ut8 )"		6351262	0					
ANR	6351417	Callee	PEEK_READ1		6351262	0					
ANR	6351418	Identifier	PEEK_READ1		6351262	0					
ANR	6351419	ArgumentList	* read_bytes		6351262	1					
ANR	6351420	Argument	* read_bytes		6351262	0					
ANR	6351421	UnaryOperationExpression	* read_bytes		6351262	0					
ANR	6351422	UnaryOperator	*		6351262	0					
ANR	6351423	Identifier	read_bytes		6351262	1					
ANR	6351424	Argument	len		6351262	1					
ANR	6351425	Identifier	len		6351262	0					
ANR	6351426	Argument	lf_enum -> pad		6351262	2					
ANR	6351427	PtrMemberAccess	lf_enum -> pad		6351262	0					
ANR	6351428	Identifier	lf_enum		6351262	0					
ANR	6351429	Identifier	pad		6351262	1					
ANR	6351430	Argument	leaf_data		6351262	3					
ANR	6351431	Identifier	leaf_data		6351262	0					
ANR	6351432	Argument	ut8		6351262	4					
ANR	6351433	Identifier	ut8		6351262	0					
ANR	6351434	ExpressionStatement	"PAD_ALIGN ( lf_enum -> pad , * read_bytes , leaf_data , len )"	2012:1:51731:51783	6351262	12	True				
ANR	6351435	CallExpression	"PAD_ALIGN ( lf_enum -> pad , * read_bytes , leaf_data , len )"		6351262	0					
ANR	6351436	Callee	PAD_ALIGN		6351262	0					
ANR	6351437	Identifier	PAD_ALIGN		6351262	0					
ANR	6351438	ArgumentList	lf_enum -> pad		6351262	1					
ANR	6351439	Argument	lf_enum -> pad		6351262	0					
ANR	6351440	PtrMemberAccess	lf_enum -> pad		6351262	0					
ANR	6351441	Identifier	lf_enum		6351262	0					
ANR	6351442	Identifier	pad		6351262	1					
ANR	6351443	Argument	* read_bytes		6351262	1					
ANR	6351444	UnaryOperationExpression	* read_bytes		6351262	0					
ANR	6351445	UnaryOperator	*		6351262	0					
ANR	6351446	Identifier	read_bytes		6351262	1					
ANR	6351447	Argument	leaf_data		6351262	2					
ANR	6351448	Identifier	leaf_data		6351262	0					
ANR	6351449	Argument	len		6351262	3					
ANR	6351450	Identifier	len		6351262	0					
ANR	6351451	ReturnStatement	return * read_bytes - tmp_before_read_bytes ;	2015:1:51850:51892	6351262	13	True				
ANR	6351452	AdditiveExpression	* read_bytes - tmp_before_read_bytes		6351262	0		-			
ANR	6351453	UnaryOperationExpression	* read_bytes		6351262	0					
ANR	6351454	UnaryOperator	*		6351262	0					
ANR	6351455	Identifier	read_bytes		6351262	1					
ANR	6351456	Identifier	tmp_before_read_bytes		6351262	1					
ANR	6351457	ReturnType	static int		6351262	1					
ANR	6351458	Identifier	parse_lf_enum		6351262	2					
ANR	6351459	ParameterList	"SLF_ENUM * lf_enum , unsigned char * leaf_data , unsigned int * read_bytes , unsigned int len"		6351262	3					
ANR	6351460	Parameter	SLF_ENUM * lf_enum	1994:25:50996:51012	6351262	0	True				
ANR	6351461	ParameterType	SLF_ENUM *		6351262	0					
ANR	6351462	Identifier	lf_enum		6351262	1					
ANR	6351463	Parameter	unsigned char * leaf_data	1994:44:51015:51038	6351262	1	True				
ANR	6351464	ParameterType	unsigned char *		6351262	0					
ANR	6351465	Identifier	leaf_data		6351262	1					
ANR	6351466	Parameter	unsigned int * read_bytes	1994:70:51041:51064	6351262	2	True				
ANR	6351467	ParameterType	unsigned int *		6351262	0					
ANR	6351468	Identifier	read_bytes		6351262	1					
ANR	6351469	Parameter	unsigned int len	1994:96:51067:51082	6351262	3	True				
ANR	6351470	ParameterType	unsigned int		6351262	0					
ANR	6351471	Identifier	len		6351262	1					
ANR	6351472	CFGEntryNode	ENTRY		6351262		True				
ANR	6351473	CFGExitNode	EXIT		6351262		True				
ANR	6351474	Symbol	leaf_data		6351262						
ANR	6351475	Symbol	lf_enum -> field_list		6351262						
ANR	6351476	Symbol	before_read_bytes		6351262						
ANR	6351477	Symbol	lf_enum -> count		6351262						
ANR	6351478	Symbol	lf_enum -> utype		6351262						
ANR	6351479	Symbol	lf_enum -> name . name		6351262						
ANR	6351480	Symbol	lf_enum -> prop		6351262						
ANR	6351481	Symbol	ut32		6351262						
ANR	6351482	Symbol	* lf_enum		6351262						
ANR	6351483	Symbol	lf_enum -> prop . cv_property		6351262						
ANR	6351484	Symbol	read_bytes		6351262						
ANR	6351485	Symbol	* read_bytes		6351262						
ANR	6351486	Symbol	ut16		6351262						
ANR	6351487	Symbol	lf_enum -> pad		6351262						
ANR	6351488	Symbol	len		6351262						
ANR	6351489	Symbol	SWAP_UINT16		6351262						
ANR	6351490	Symbol	tmp_before_read_bytes		6351262						
ANR	6351491	Symbol	& lf_enum -> name		6351262						
ANR	6351492	Symbol	ut8		6351262						
ANR	6351493	Symbol	lf_enum -> name		6351262						
ANR	6351494	Symbol	lf_enum		6351262						
ANR	6351495	Function	parse_lf_class	2019:0:51977:53027							
ANR	6351496	FunctionDef	"parse_lf_class (SLF_CLASS * lf_class , unsigned char * leaf_data , unsigned int * read_bytes , unsigned int len)"		6351495	0					
ANR	6351497	CompoundStatement		2020:0:52094:53027	6351495	0					
ANR	6351498	IdentifierDeclStatement	unsigned int tmp_before_read_bytes = * read_bytes ;	2022:1:52120:52168	6351495	0	True				
ANR	6351499	IdentifierDecl	tmp_before_read_bytes = * read_bytes		6351495	0					
ANR	6351500	IdentifierDeclType	unsigned int		6351495	0					
ANR	6351501	Identifier	tmp_before_read_bytes		6351495	1					
ANR	6351502	AssignmentExpression	tmp_before_read_bytes = * read_bytes		6351495	2		=			
ANR	6351503	Identifier	tmp_before_read_bytes		6351495	0					
ANR	6351504	UnaryOperationExpression	* read_bytes		6351495	1					
ANR	6351505	UnaryOperator	*		6351495	0					
ANR	6351506	Identifier	read_bytes		6351495	1					
ANR	6351507	IdentifierDeclStatement	unsigned int before_read_bytes = 0 ;	2023:1:52171:52205	6351495	1	True				
ANR	6351508	IdentifierDecl	before_read_bytes = 0		6351495	0					
ANR	6351509	IdentifierDeclType	unsigned int		6351495	0					
ANR	6351510	Identifier	before_read_bytes		6351495	1					
ANR	6351511	AssignmentExpression	before_read_bytes = 0		6351495	2		=			
ANR	6351512	Identifier	before_read_bytes		6351495	0					
ANR	6351513	PrimaryExpression	0		6351495	1					
ANR	6351514	ExpressionStatement	lf_class -> size . name_or_val = 0	2025:1:52209:52239	6351495	2	True				
ANR	6351515	AssignmentExpression	lf_class -> size . name_or_val = 0		6351495	0		=			
ANR	6351516	MemberAccess	lf_class -> size . name_or_val		6351495	0					
ANR	6351517	PtrMemberAccess	lf_class -> size		6351495	0					
ANR	6351518	Identifier	lf_class		6351495	0					
ANR	6351519	Identifier	size		6351495	1					
ANR	6351520	Identifier	name_or_val		6351495	1					
ANR	6351521	PrimaryExpression	0		6351495	1					
ANR	6351522	ExpressionStatement	"READ2 ( * read_bytes , len , lf_class -> count , leaf_data , ut16 )"	2027:1:52243:52300	6351495	3	True				
ANR	6351523	CallExpression	"READ2 ( * read_bytes , len , lf_class -> count , leaf_data , ut16 )"		6351495	0					
ANR	6351524	Callee	READ2		6351495	0					
ANR	6351525	Identifier	READ2		6351495	0					
ANR	6351526	ArgumentList	* read_bytes		6351495	1					
ANR	6351527	Argument	* read_bytes		6351495	0					
ANR	6351528	UnaryOperationExpression	* read_bytes		6351495	0					
ANR	6351529	UnaryOperator	*		6351495	0					
ANR	6351530	Identifier	read_bytes		6351495	1					
ANR	6351531	Argument	len		6351495	1					
ANR	6351532	Identifier	len		6351495	0					
ANR	6351533	Argument	lf_class -> count		6351495	2					
ANR	6351534	PtrMemberAccess	lf_class -> count		6351495	0					
ANR	6351535	Identifier	lf_class		6351495	0					
ANR	6351536	Identifier	count		6351495	1					
ANR	6351537	Argument	leaf_data		6351495	3					
ANR	6351538	Identifier	leaf_data		6351495	0					
ANR	6351539	Argument	ut16		6351495	4					
ANR	6351540	Identifier	ut16		6351495	0					
ANR	6351541	ExpressionStatement	"READ2 ( * read_bytes , len , lf_class -> prop . cv_property , leaf_data , ut16 )"	2028:1:52303:52371	6351495	4	True				
ANR	6351542	CallExpression	"READ2 ( * read_bytes , len , lf_class -> prop . cv_property , leaf_data , ut16 )"		6351495	0					
ANR	6351543	Callee	READ2		6351495	0					
ANR	6351544	Identifier	READ2		6351495	0					
ANR	6351545	ArgumentList	* read_bytes		6351495	1					
ANR	6351546	Argument	* read_bytes		6351495	0					
ANR	6351547	UnaryOperationExpression	* read_bytes		6351495	0					
ANR	6351548	UnaryOperator	*		6351495	0					
ANR	6351549	Identifier	read_bytes		6351495	1					
ANR	6351550	Argument	len		6351495	1					
ANR	6351551	Identifier	len		6351495	0					
ANR	6351552	Argument	lf_class -> prop . cv_property		6351495	2					
ANR	6351553	MemberAccess	lf_class -> prop . cv_property		6351495	0					
ANR	6351554	PtrMemberAccess	lf_class -> prop		6351495	0					
ANR	6351555	Identifier	lf_class		6351495	0					
ANR	6351556	Identifier	prop		6351495	1					
ANR	6351557	Identifier	cv_property		6351495	1					
ANR	6351558	Argument	leaf_data		6351495	3					
ANR	6351559	Identifier	leaf_data		6351495	0					
ANR	6351560	Argument	ut16		6351495	4					
ANR	6351561	Identifier	ut16		6351495	0					
ANR	6351562	ExpressionStatement	"READ4 ( * read_bytes , len , lf_class -> field_list , leaf_data , ut32 )"	2029:1:52374:52436	6351495	5	True				
ANR	6351563	CallExpression	"READ4 ( * read_bytes , len , lf_class -> field_list , leaf_data , ut32 )"		6351495	0					
ANR	6351564	Callee	READ4		6351495	0					
ANR	6351565	Identifier	READ4		6351495	0					
ANR	6351566	ArgumentList	* read_bytes		6351495	1					
ANR	6351567	Argument	* read_bytes		6351495	0					
ANR	6351568	UnaryOperationExpression	* read_bytes		6351495	0					
ANR	6351569	UnaryOperator	*		6351495	0					
ANR	6351570	Identifier	read_bytes		6351495	1					
ANR	6351571	Argument	len		6351495	1					
ANR	6351572	Identifier	len		6351495	0					
ANR	6351573	Argument	lf_class -> field_list		6351495	2					
ANR	6351574	PtrMemberAccess	lf_class -> field_list		6351495	0					
ANR	6351575	Identifier	lf_class		6351495	0					
ANR	6351576	Identifier	field_list		6351495	1					
ANR	6351577	Argument	leaf_data		6351495	3					
ANR	6351578	Identifier	leaf_data		6351495	0					
ANR	6351579	Argument	ut32		6351495	4					
ANR	6351580	Identifier	ut32		6351495	0					
ANR	6351581	ExpressionStatement	"READ4 ( * read_bytes , len , lf_class -> derived , leaf_data , ut32 )"	2030:1:52439:52498	6351495	6	True				
ANR	6351582	CallExpression	"READ4 ( * read_bytes , len , lf_class -> derived , leaf_data , ut32 )"		6351495	0					
ANR	6351583	Callee	READ4		6351495	0					
ANR	6351584	Identifier	READ4		6351495	0					
ANR	6351585	ArgumentList	* read_bytes		6351495	1					
ANR	6351586	Argument	* read_bytes		6351495	0					
ANR	6351587	UnaryOperationExpression	* read_bytes		6351495	0					
ANR	6351588	UnaryOperator	*		6351495	0					
ANR	6351589	Identifier	read_bytes		6351495	1					
ANR	6351590	Argument	len		6351495	1					
ANR	6351591	Identifier	len		6351495	0					
ANR	6351592	Argument	lf_class -> derived		6351495	2					
ANR	6351593	PtrMemberAccess	lf_class -> derived		6351495	0					
ANR	6351594	Identifier	lf_class		6351495	0					
ANR	6351595	Identifier	derived		6351495	1					
ANR	6351596	Argument	leaf_data		6351495	3					
ANR	6351597	Identifier	leaf_data		6351495	0					
ANR	6351598	Argument	ut32		6351495	4					
ANR	6351599	Identifier	ut32		6351495	0					
ANR	6351600	ExpressionStatement	"READ4 ( * read_bytes , len , lf_class -> vshape , leaf_data , ut32 )"	2031:1:52501:52559	6351495	7	True				
ANR	6351601	CallExpression	"READ4 ( * read_bytes , len , lf_class -> vshape , leaf_data , ut32 )"		6351495	0					
ANR	6351602	Callee	READ4		6351495	0					
ANR	6351603	Identifier	READ4		6351495	0					
ANR	6351604	ArgumentList	* read_bytes		6351495	1					
ANR	6351605	Argument	* read_bytes		6351495	0					
ANR	6351606	UnaryOperationExpression	* read_bytes		6351495	0					
ANR	6351607	UnaryOperator	*		6351495	0					
ANR	6351608	Identifier	read_bytes		6351495	1					
ANR	6351609	Argument	len		6351495	1					
ANR	6351610	Identifier	len		6351495	0					
ANR	6351611	Argument	lf_class -> vshape		6351495	2					
ANR	6351612	PtrMemberAccess	lf_class -> vshape		6351495	0					
ANR	6351613	Identifier	lf_class		6351495	0					
ANR	6351614	Identifier	vshape		6351495	1					
ANR	6351615	Argument	leaf_data		6351495	3					
ANR	6351616	Identifier	leaf_data		6351495	0					
ANR	6351617	Argument	ut32		6351495	4					
ANR	6351618	Identifier	ut32		6351495	0					
ANR	6351619	ExpressionStatement	before_read_bytes = * read_bytes	2033:1:52563:52594	6351495	8	True				
ANR	6351620	AssignmentExpression	before_read_bytes = * read_bytes		6351495	0		=			
ANR	6351621	Identifier	before_read_bytes		6351495	0					
ANR	6351622	UnaryOperationExpression	* read_bytes		6351495	1					
ANR	6351623	UnaryOperator	*		6351495	0					
ANR	6351624	Identifier	read_bytes		6351495	1					
ANR	6351625	ExpressionStatement	"parse_sval ( & lf_class -> size , leaf_data , read_bytes , len )"	2034:1:52597:52652	6351495	9	True				
ANR	6351626	CallExpression	"parse_sval ( & lf_class -> size , leaf_data , read_bytes , len )"		6351495	0					
ANR	6351627	Callee	parse_sval		6351495	0					
ANR	6351628	Identifier	parse_sval		6351495	0					
ANR	6351629	ArgumentList	& lf_class -> size		6351495	1					
ANR	6351630	Argument	& lf_class -> size		6351495	0					
ANR	6351631	UnaryOperationExpression	& lf_class -> size		6351495	0					
ANR	6351632	UnaryOperator	&		6351495	0					
ANR	6351633	PtrMemberAccess	lf_class -> size		6351495	1					
ANR	6351634	Identifier	lf_class		6351495	0					
ANR	6351635	Identifier	size		6351495	1					
ANR	6351636	Argument	leaf_data		6351495	1					
ANR	6351637	Identifier	leaf_data		6351495	0					
ANR	6351638	Argument	read_bytes		6351495	2					
ANR	6351639	Identifier	read_bytes		6351495	0					
ANR	6351640	Argument	len		6351495	3					
ANR	6351641	Identifier	len		6351495	0					
ANR	6351642	ExpressionStatement	before_read_bytes = * read_bytes - before_read_bytes	2035:1:52655:52706	6351495	10	True				
ANR	6351643	AssignmentExpression	before_read_bytes = * read_bytes - before_read_bytes		6351495	0		=			
ANR	6351644	Identifier	before_read_bytes		6351495	0					
ANR	6351645	AdditiveExpression	* read_bytes - before_read_bytes		6351495	1		-			
ANR	6351646	UnaryOperationExpression	* read_bytes		6351495	0					
ANR	6351647	UnaryOperator	*		6351495	0					
ANR	6351648	Identifier	read_bytes		6351495	1					
ANR	6351649	Identifier	before_read_bytes		6351495	1					
ANR	6351650	ExpressionStatement	leaf_data = ( unsigned char * ) leaf_data + before_read_bytes	2036:1:52709:52767	6351495	11	True				
ANR	6351651	AssignmentExpression	leaf_data = ( unsigned char * ) leaf_data + before_read_bytes		6351495	0		=			
ANR	6351652	Identifier	leaf_data		6351495	0					
ANR	6351653	AdditiveExpression	( unsigned char * ) leaf_data + before_read_bytes		6351495	1		+			
ANR	6351654	CastExpression	( unsigned char * ) leaf_data		6351495	0					
ANR	6351655	CastTarget	unsigned char *		6351495	0					
ANR	6351656	Identifier	leaf_data		6351495	1					
ANR	6351657	Identifier	before_read_bytes		6351495	1					
ANR	6351658	ExpressionStatement	"PEEK_READ1 ( * read_bytes , len , lf_class -> pad , leaf_data , ut8 )"	2038:1:52771:52830	6351495	12	True				
ANR	6351659	CallExpression	"PEEK_READ1 ( * read_bytes , len , lf_class -> pad , leaf_data , ut8 )"		6351495	0					
ANR	6351660	Callee	PEEK_READ1		6351495	0					
ANR	6351661	Identifier	PEEK_READ1		6351495	0					
ANR	6351662	ArgumentList	* read_bytes		6351495	1					
ANR	6351663	Argument	* read_bytes		6351495	0					
ANR	6351664	UnaryOperationExpression	* read_bytes		6351495	0					
ANR	6351665	UnaryOperator	*		6351495	0					
ANR	6351666	Identifier	read_bytes		6351495	1					
ANR	6351667	Argument	len		6351495	1					
ANR	6351668	Identifier	len		6351495	0					
ANR	6351669	Argument	lf_class -> pad		6351495	2					
ANR	6351670	PtrMemberAccess	lf_class -> pad		6351495	0					
ANR	6351671	Identifier	lf_class		6351495	0					
ANR	6351672	Identifier	pad		6351495	1					
ANR	6351673	Argument	leaf_data		6351495	3					
ANR	6351674	Identifier	leaf_data		6351495	0					
ANR	6351675	Argument	ut8		6351495	4					
ANR	6351676	Identifier	ut8		6351495	0					
ANR	6351677	ExpressionStatement	"PAD_ALIGN ( lf_class -> pad , * read_bytes , leaf_data , len )"	2039:1:52833:52886	6351495	13	True				
ANR	6351678	CallExpression	"PAD_ALIGN ( lf_class -> pad , * read_bytes , leaf_data , len )"		6351495	0					
ANR	6351679	Callee	PAD_ALIGN		6351495	0					
ANR	6351680	Identifier	PAD_ALIGN		6351495	0					
ANR	6351681	ArgumentList	lf_class -> pad		6351495	1					
ANR	6351682	Argument	lf_class -> pad		6351495	0					
ANR	6351683	PtrMemberAccess	lf_class -> pad		6351495	0					
ANR	6351684	Identifier	lf_class		6351495	0					
ANR	6351685	Identifier	pad		6351495	1					
ANR	6351686	Argument	* read_bytes		6351495	1					
ANR	6351687	UnaryOperationExpression	* read_bytes		6351495	0					
ANR	6351688	UnaryOperator	*		6351495	0					
ANR	6351689	Identifier	read_bytes		6351495	1					
ANR	6351690	Argument	leaf_data		6351495	2					
ANR	6351691	Identifier	leaf_data		6351495	0					
ANR	6351692	Argument	len		6351495	3					
ANR	6351693	Identifier	len		6351495	0					
ANR	6351694	ReturnStatement	return * read_bytes - tmp_before_read_bytes ;	2044:1:52983:53025	6351495	14	True				
ANR	6351695	AdditiveExpression	* read_bytes - tmp_before_read_bytes		6351495	0		-			
ANR	6351696	UnaryOperationExpression	* read_bytes		6351495	0					
ANR	6351697	UnaryOperator	*		6351495	0					
ANR	6351698	Identifier	read_bytes		6351495	1					
ANR	6351699	Identifier	tmp_before_read_bytes		6351495	1					
ANR	6351700	ReturnType	static int		6351495	1					
ANR	6351701	Identifier	parse_lf_class		6351495	2					
ANR	6351702	ParameterList	"SLF_CLASS * lf_class , unsigned char * leaf_data , unsigned int * read_bytes , unsigned int len"		6351495	3					
ANR	6351703	Parameter	SLF_CLASS * lf_class	2019:26:52003:52021	6351495	0	True				
ANR	6351704	ParameterType	SLF_CLASS *		6351495	0					
ANR	6351705	Identifier	lf_class		6351495	1					
ANR	6351706	Parameter	unsigned char * leaf_data	2019:47:52024:52047	6351495	1	True				
ANR	6351707	ParameterType	unsigned char *		6351495	0					
ANR	6351708	Identifier	leaf_data		6351495	1					
ANR	6351709	Parameter	unsigned int * read_bytes	2019:73:52050:52073	6351495	2	True				
ANR	6351710	ParameterType	unsigned int *		6351495	0					
ANR	6351711	Identifier	read_bytes		6351495	1					
ANR	6351712	Parameter	unsigned int len	2019:99:52076:52091	6351495	3	True				
ANR	6351713	ParameterType	unsigned int		6351495	0					
ANR	6351714	Identifier	len		6351495	1					
ANR	6351715	CFGEntryNode	ENTRY		6351495		True				
ANR	6351716	CFGExitNode	EXIT		6351495		True				
ANR	6351717	Symbol	lf_class -> size . name_or_val		6351495						
ANR	6351718	Symbol	lf_class -> prop . cv_property		6351495						
ANR	6351719	Symbol	leaf_data		6351495						
ANR	6351720	Symbol	lf_class -> prop		6351495						
ANR	6351721	Symbol	lf_class -> size		6351495						
ANR	6351722	Symbol	before_read_bytes		6351495						
ANR	6351723	Symbol	ut32		6351495						
ANR	6351724	Symbol	read_bytes		6351495						
ANR	6351725	Symbol	lf_class		6351495						
ANR	6351726	Symbol	lf_class -> field_list		6351495						
ANR	6351727	Symbol	lf_class -> pad		6351495						
ANR	6351728	Symbol	lf_class -> vshape		6351495						
ANR	6351729	Symbol	* read_bytes		6351495						
ANR	6351730	Symbol	ut16		6351495						
ANR	6351731	Symbol	len		6351495						
ANR	6351732	Symbol	lf_class -> derived		6351495						
ANR	6351733	Symbol	tmp_before_read_bytes		6351495						
ANR	6351734	Symbol	& lf_class -> size		6351495						
ANR	6351735	Symbol	ut8		6351495						
ANR	6351736	Symbol	lf_class -> count		6351495						
ANR	6351737	Symbol	* lf_class		6351495						
ANR	6351738	Function	parse_lf_structure	2048:0:53110:54240							
ANR	6351739	FunctionDef	"parse_lf_structure (SLF_STRUCTURE * lf_structure , unsigned char * leaf_data , unsigned int * read_bytes , unsigned int len)"		6351738	0					
ANR	6351740	CompoundStatement		2049:0:53239:54240	6351738	0					
ANR	6351741	IdentifierDeclStatement	unsigned int tmp_before_read_bytes = * read_bytes ;	2051:1:53273:53321	6351738	0	True				
ANR	6351742	IdentifierDecl	tmp_before_read_bytes = * read_bytes		6351738	0					
ANR	6351743	IdentifierDeclType	unsigned int		6351738	0					
ANR	6351744	Identifier	tmp_before_read_bytes		6351738	1					
ANR	6351745	AssignmentExpression	tmp_before_read_bytes = * read_bytes		6351738	2		=			
ANR	6351746	Identifier	tmp_before_read_bytes		6351738	0					
ANR	6351747	UnaryOperationExpression	* read_bytes		6351738	1					
ANR	6351748	UnaryOperator	*		6351738	0					
ANR	6351749	Identifier	read_bytes		6351738	1					
ANR	6351750	IdentifierDeclStatement	unsigned int before_read_bytes = 0 ;	2052:1:53324:53358	6351738	1	True				
ANR	6351751	IdentifierDecl	before_read_bytes = 0		6351738	0					
ANR	6351752	IdentifierDeclType	unsigned int		6351738	0					
ANR	6351753	Identifier	before_read_bytes		6351738	1					
ANR	6351754	AssignmentExpression	before_read_bytes = 0		6351738	2		=			
ANR	6351755	Identifier	before_read_bytes		6351738	0					
ANR	6351756	PrimaryExpression	0		6351738	1					
ANR	6351757	ExpressionStatement	lf_structure -> size . name_or_val = 0	2054:1:53362:53396	6351738	2	True				
ANR	6351758	AssignmentExpression	lf_structure -> size . name_or_val = 0		6351738	0		=			
ANR	6351759	MemberAccess	lf_structure -> size . name_or_val		6351738	0					
ANR	6351760	PtrMemberAccess	lf_structure -> size		6351738	0					
ANR	6351761	Identifier	lf_structure		6351738	0					
ANR	6351762	Identifier	size		6351738	1					
ANR	6351763	Identifier	name_or_val		6351738	1					
ANR	6351764	PrimaryExpression	0		6351738	1					
ANR	6351765	ExpressionStatement	"READ2 ( * read_bytes , len , lf_structure -> count , leaf_data , ut16 )"	2056:1:53400:53461	6351738	3	True				
ANR	6351766	CallExpression	"READ2 ( * read_bytes , len , lf_structure -> count , leaf_data , ut16 )"		6351738	0					
ANR	6351767	Callee	READ2		6351738	0					
ANR	6351768	Identifier	READ2		6351738	0					
ANR	6351769	ArgumentList	* read_bytes		6351738	1					
ANR	6351770	Argument	* read_bytes		6351738	0					
ANR	6351771	UnaryOperationExpression	* read_bytes		6351738	0					
ANR	6351772	UnaryOperator	*		6351738	0					
ANR	6351773	Identifier	read_bytes		6351738	1					
ANR	6351774	Argument	len		6351738	1					
ANR	6351775	Identifier	len		6351738	0					
ANR	6351776	Argument	lf_structure -> count		6351738	2					
ANR	6351777	PtrMemberAccess	lf_structure -> count		6351738	0					
ANR	6351778	Identifier	lf_structure		6351738	0					
ANR	6351779	Identifier	count		6351738	1					
ANR	6351780	Argument	leaf_data		6351738	3					
ANR	6351781	Identifier	leaf_data		6351738	0					
ANR	6351782	Argument	ut16		6351738	4					
ANR	6351783	Identifier	ut16		6351738	0					
ANR	6351784	ExpressionStatement	"READ2 ( * read_bytes , len , lf_structure -> prop . cv_property , leaf_data , ut16 )"	2057:1:53464:53536	6351738	4	True				
ANR	6351785	CallExpression	"READ2 ( * read_bytes , len , lf_structure -> prop . cv_property , leaf_data , ut16 )"		6351738	0					
ANR	6351786	Callee	READ2		6351738	0					
ANR	6351787	Identifier	READ2		6351738	0					
ANR	6351788	ArgumentList	* read_bytes		6351738	1					
ANR	6351789	Argument	* read_bytes		6351738	0					
ANR	6351790	UnaryOperationExpression	* read_bytes		6351738	0					
ANR	6351791	UnaryOperator	*		6351738	0					
ANR	6351792	Identifier	read_bytes		6351738	1					
ANR	6351793	Argument	len		6351738	1					
ANR	6351794	Identifier	len		6351738	0					
ANR	6351795	Argument	lf_structure -> prop . cv_property		6351738	2					
ANR	6351796	MemberAccess	lf_structure -> prop . cv_property		6351738	0					
ANR	6351797	PtrMemberAccess	lf_structure -> prop		6351738	0					
ANR	6351798	Identifier	lf_structure		6351738	0					
ANR	6351799	Identifier	prop		6351738	1					
ANR	6351800	Identifier	cv_property		6351738	1					
ANR	6351801	Argument	leaf_data		6351738	3					
ANR	6351802	Identifier	leaf_data		6351738	0					
ANR	6351803	Argument	ut16		6351738	4					
ANR	6351804	Identifier	ut16		6351738	0					
ANR	6351805	ExpressionStatement	"READ4 ( * read_bytes , len , lf_structure -> field_list , leaf_data , ut32 )"	2058:1:53539:53605	6351738	5	True				
ANR	6351806	CallExpression	"READ4 ( * read_bytes , len , lf_structure -> field_list , leaf_data , ut32 )"		6351738	0					
ANR	6351807	Callee	READ4		6351738	0					
ANR	6351808	Identifier	READ4		6351738	0					
ANR	6351809	ArgumentList	* read_bytes		6351738	1					
ANR	6351810	Argument	* read_bytes		6351738	0					
ANR	6351811	UnaryOperationExpression	* read_bytes		6351738	0					
ANR	6351812	UnaryOperator	*		6351738	0					
ANR	6351813	Identifier	read_bytes		6351738	1					
ANR	6351814	Argument	len		6351738	1					
ANR	6351815	Identifier	len		6351738	0					
ANR	6351816	Argument	lf_structure -> field_list		6351738	2					
ANR	6351817	PtrMemberAccess	lf_structure -> field_list		6351738	0					
ANR	6351818	Identifier	lf_structure		6351738	0					
ANR	6351819	Identifier	field_list		6351738	1					
ANR	6351820	Argument	leaf_data		6351738	3					
ANR	6351821	Identifier	leaf_data		6351738	0					
ANR	6351822	Argument	ut32		6351738	4					
ANR	6351823	Identifier	ut32		6351738	0					
ANR	6351824	ExpressionStatement	"READ4 ( * read_bytes , len , lf_structure -> derived , leaf_data , ut32 )"	2059:1:53608:53671	6351738	6	True				
ANR	6351825	CallExpression	"READ4 ( * read_bytes , len , lf_structure -> derived , leaf_data , ut32 )"		6351738	0					
ANR	6351826	Callee	READ4		6351738	0					
ANR	6351827	Identifier	READ4		6351738	0					
ANR	6351828	ArgumentList	* read_bytes		6351738	1					
ANR	6351829	Argument	* read_bytes		6351738	0					
ANR	6351830	UnaryOperationExpression	* read_bytes		6351738	0					
ANR	6351831	UnaryOperator	*		6351738	0					
ANR	6351832	Identifier	read_bytes		6351738	1					
ANR	6351833	Argument	len		6351738	1					
ANR	6351834	Identifier	len		6351738	0					
ANR	6351835	Argument	lf_structure -> derived		6351738	2					
ANR	6351836	PtrMemberAccess	lf_structure -> derived		6351738	0					
ANR	6351837	Identifier	lf_structure		6351738	0					
ANR	6351838	Identifier	derived		6351738	1					
ANR	6351839	Argument	leaf_data		6351738	3					
ANR	6351840	Identifier	leaf_data		6351738	0					
ANR	6351841	Argument	ut32		6351738	4					
ANR	6351842	Identifier	ut32		6351738	0					
ANR	6351843	ExpressionStatement	"READ4 ( * read_bytes , len , lf_structure -> vshape , leaf_data , ut32 )"	2060:1:53674:53736	6351738	7	True				
ANR	6351844	CallExpression	"READ4 ( * read_bytes , len , lf_structure -> vshape , leaf_data , ut32 )"		6351738	0					
ANR	6351845	Callee	READ4		6351738	0					
ANR	6351846	Identifier	READ4		6351738	0					
ANR	6351847	ArgumentList	* read_bytes		6351738	1					
ANR	6351848	Argument	* read_bytes		6351738	0					
ANR	6351849	UnaryOperationExpression	* read_bytes		6351738	0					
ANR	6351850	UnaryOperator	*		6351738	0					
ANR	6351851	Identifier	read_bytes		6351738	1					
ANR	6351852	Argument	len		6351738	1					
ANR	6351853	Identifier	len		6351738	0					
ANR	6351854	Argument	lf_structure -> vshape		6351738	2					
ANR	6351855	PtrMemberAccess	lf_structure -> vshape		6351738	0					
ANR	6351856	Identifier	lf_structure		6351738	0					
ANR	6351857	Identifier	vshape		6351738	1					
ANR	6351858	Argument	leaf_data		6351738	3					
ANR	6351859	Identifier	leaf_data		6351738	0					
ANR	6351860	Argument	ut32		6351738	4					
ANR	6351861	Identifier	ut32		6351738	0					
ANR	6351862	ExpressionStatement	lf_structure -> prop . cv_property = SWAP_UINT16 ( lf_structure -> prop . cv_property )	2062:1:53740:53816	6351738	8	True				
ANR	6351863	AssignmentExpression	lf_structure -> prop . cv_property = SWAP_UINT16 ( lf_structure -> prop . cv_property )		6351738	0		=			
ANR	6351864	MemberAccess	lf_structure -> prop . cv_property		6351738	0					
ANR	6351865	PtrMemberAccess	lf_structure -> prop		6351738	0					
ANR	6351866	Identifier	lf_structure		6351738	0					
ANR	6351867	Identifier	prop		6351738	1					
ANR	6351868	Identifier	cv_property		6351738	1					
ANR	6351869	CallExpression	SWAP_UINT16 ( lf_structure -> prop . cv_property )		6351738	1					
ANR	6351870	Callee	SWAP_UINT16		6351738	0					
ANR	6351871	Identifier	SWAP_UINT16		6351738	0					
ANR	6351872	ArgumentList	lf_structure -> prop . cv_property		6351738	1					
ANR	6351873	Argument	lf_structure -> prop . cv_property		6351738	0					
ANR	6351874	MemberAccess	lf_structure -> prop . cv_property		6351738	0					
ANR	6351875	PtrMemberAccess	lf_structure -> prop		6351738	0					
ANR	6351876	Identifier	lf_structure		6351738	0					
ANR	6351877	Identifier	prop		6351738	1					
ANR	6351878	Identifier	cv_property		6351738	1					
ANR	6351879	ExpressionStatement	before_read_bytes = * read_bytes	2064:1:53820:53851	6351738	9	True				
ANR	6351880	AssignmentExpression	before_read_bytes = * read_bytes		6351738	0		=			
ANR	6351881	Identifier	before_read_bytes		6351738	0					
ANR	6351882	UnaryOperationExpression	* read_bytes		6351738	1					
ANR	6351883	UnaryOperator	*		6351738	0					
ANR	6351884	Identifier	read_bytes		6351738	1					
ANR	6351885	ExpressionStatement	"parse_sval ( & lf_structure -> size , leaf_data , read_bytes , len )"	2065:1:53854:53913	6351738	10	True				
ANR	6351886	CallExpression	"parse_sval ( & lf_structure -> size , leaf_data , read_bytes , len )"		6351738	0					
ANR	6351887	Callee	parse_sval		6351738	0					
ANR	6351888	Identifier	parse_sval		6351738	0					
ANR	6351889	ArgumentList	& lf_structure -> size		6351738	1					
ANR	6351890	Argument	& lf_structure -> size		6351738	0					
ANR	6351891	UnaryOperationExpression	& lf_structure -> size		6351738	0					
ANR	6351892	UnaryOperator	&		6351738	0					
ANR	6351893	PtrMemberAccess	lf_structure -> size		6351738	1					
ANR	6351894	Identifier	lf_structure		6351738	0					
ANR	6351895	Identifier	size		6351738	1					
ANR	6351896	Argument	leaf_data		6351738	1					
ANR	6351897	Identifier	leaf_data		6351738	0					
ANR	6351898	Argument	read_bytes		6351738	2					
ANR	6351899	Identifier	read_bytes		6351738	0					
ANR	6351900	Argument	len		6351738	3					
ANR	6351901	Identifier	len		6351738	0					
ANR	6351902	ExpressionStatement	leaf_data += ( * read_bytes - before_read_bytes )	2066:1:53916:53962	6351738	11	True				
ANR	6351903	AssignmentExpression	leaf_data += ( * read_bytes - before_read_bytes )		6351738	0		+=			
ANR	6351904	Identifier	leaf_data		6351738	0					
ANR	6351905	AdditiveExpression	* read_bytes - before_read_bytes		6351738	1		-			
ANR	6351906	UnaryOperationExpression	* read_bytes		6351738	0					
ANR	6351907	UnaryOperator	*		6351738	0					
ANR	6351908	Identifier	read_bytes		6351738	1					
ANR	6351909	Identifier	before_read_bytes		6351738	1					
ANR	6351910	ExpressionStatement	"PEEK_READ1 ( * read_bytes , len , lf_structure -> pad , leaf_data , ut8 )"	2068:1:53966:54029	6351738	12	True				
ANR	6351911	CallExpression	"PEEK_READ1 ( * read_bytes , len , lf_structure -> pad , leaf_data , ut8 )"		6351738	0					
ANR	6351912	Callee	PEEK_READ1		6351738	0					
ANR	6351913	Identifier	PEEK_READ1		6351738	0					
ANR	6351914	ArgumentList	* read_bytes		6351738	1					
ANR	6351915	Argument	* read_bytes		6351738	0					
ANR	6351916	UnaryOperationExpression	* read_bytes		6351738	0					
ANR	6351917	UnaryOperator	*		6351738	0					
ANR	6351918	Identifier	read_bytes		6351738	1					
ANR	6351919	Argument	len		6351738	1					
ANR	6351920	Identifier	len		6351738	0					
ANR	6351921	Argument	lf_structure -> pad		6351738	2					
ANR	6351922	PtrMemberAccess	lf_structure -> pad		6351738	0					
ANR	6351923	Identifier	lf_structure		6351738	0					
ANR	6351924	Identifier	pad		6351738	1					
ANR	6351925	Argument	leaf_data		6351738	3					
ANR	6351926	Identifier	leaf_data		6351738	0					
ANR	6351927	Argument	ut8		6351738	4					
ANR	6351928	Identifier	ut8		6351738	0					
ANR	6351929	ExpressionStatement	"PAD_ALIGN ( lf_structure -> pad , * read_bytes , leaf_data , len )"	2069:1:54032:54089	6351738	13	True				
ANR	6351930	CallExpression	"PAD_ALIGN ( lf_structure -> pad , * read_bytes , leaf_data , len )"		6351738	0					
ANR	6351931	Callee	PAD_ALIGN		6351738	0					
ANR	6351932	Identifier	PAD_ALIGN		6351738	0					
ANR	6351933	ArgumentList	lf_structure -> pad		6351738	1					
ANR	6351934	Argument	lf_structure -> pad		6351738	0					
ANR	6351935	PtrMemberAccess	lf_structure -> pad		6351738	0					
ANR	6351936	Identifier	lf_structure		6351738	0					
ANR	6351937	Identifier	pad		6351738	1					
ANR	6351938	Argument	* read_bytes		6351738	1					
ANR	6351939	UnaryOperationExpression	* read_bytes		6351738	0					
ANR	6351940	UnaryOperator	*		6351738	0					
ANR	6351941	Identifier	read_bytes		6351738	1					
ANR	6351942	Argument	leaf_data		6351738	2					
ANR	6351943	Identifier	leaf_data		6351738	0					
ANR	6351944	Argument	len		6351738	3					
ANR	6351945	Identifier	len		6351738	0					
ANR	6351946	ReturnStatement	return * read_bytes - tmp_before_read_bytes ;	2074:1:54196:54238	6351738	14	True				
ANR	6351947	AdditiveExpression	* read_bytes - tmp_before_read_bytes		6351738	0		-			
ANR	6351948	UnaryOperationExpression	* read_bytes		6351738	0					
ANR	6351949	UnaryOperator	*		6351738	0					
ANR	6351950	Identifier	read_bytes		6351738	1					
ANR	6351951	Identifier	tmp_before_read_bytes		6351738	1					
ANR	6351952	ReturnType	static int		6351738	1					
ANR	6351953	Identifier	parse_lf_structure		6351738	2					
ANR	6351954	ParameterList	"SLF_STRUCTURE * lf_structure , unsigned char * leaf_data , unsigned int * read_bytes , unsigned int len"		6351738	3					
ANR	6351955	Parameter	SLF_STRUCTURE * lf_structure	2048:30:53140:53166	6351738	0	True				
ANR	6351956	ParameterType	SLF_STRUCTURE *		6351738	0					
ANR	6351957	Identifier	lf_structure		6351738	1					
ANR	6351958	Parameter	unsigned char * leaf_data	2048:59:53169:53192	6351738	1	True				
ANR	6351959	ParameterType	unsigned char *		6351738	0					
ANR	6351960	Identifier	leaf_data		6351738	1					
ANR	6351961	Parameter	unsigned int * read_bytes	2048:85:53195:53218	6351738	2	True				
ANR	6351962	ParameterType	unsigned int *		6351738	0					
ANR	6351963	Identifier	read_bytes		6351738	1					
ANR	6351964	Parameter	unsigned int len	2048:111:53221:53236	6351738	3	True				
ANR	6351965	ParameterType	unsigned int		6351738	0					
ANR	6351966	Identifier	len		6351738	1					
ANR	6351967	CFGEntryNode	ENTRY		6351738		True				
ANR	6351968	CFGExitNode	EXIT		6351738		True				
ANR	6351969	Symbol	lf_structure		6351738						
ANR	6351970	Symbol	leaf_data		6351738						
ANR	6351971	Symbol	before_read_bytes		6351738						
ANR	6351972	Symbol	ut32		6351738						
ANR	6351973	Symbol	lf_structure -> prop		6351738						
ANR	6351974	Symbol	read_bytes		6351738						
ANR	6351975	Symbol	lf_structure -> prop . cv_property		6351738						
ANR	6351976	Symbol	* read_bytes		6351738						
ANR	6351977	Symbol	ut16		6351738						
ANR	6351978	Symbol	lf_structure -> derived		6351738						
ANR	6351979	Symbol	lf_structure -> size		6351738						
ANR	6351980	Symbol	len		6351738						
ANR	6351981	Symbol	SWAP_UINT16		6351738						
ANR	6351982	Symbol	lf_structure -> pad		6351738						
ANR	6351983	Symbol	tmp_before_read_bytes		6351738						
ANR	6351984	Symbol	lf_structure -> size . name_or_val		6351738						
ANR	6351985	Symbol	* lf_structure		6351738						
ANR	6351986	Symbol	lf_structure -> field_list		6351738						
ANR	6351987	Symbol	ut8		6351738						
ANR	6351988	Symbol	lf_structure -> count		6351738						
ANR	6351989	Symbol	& lf_structure -> size		6351738						
ANR	6351990	Symbol	lf_structure -> vshape		6351738						
ANR	6351991	Function	parse_lf_pointer	2078:0:54323:54883							
ANR	6351992	FunctionDef	"parse_lf_pointer (SLF_POINTER * lf_pointer , unsigned char * leaf_data , unsigned int * read_bytes , unsigned int len)"		6351991	0					
ANR	6351993	CompoundStatement		2079:0:54446:54883	6351991	0					
ANR	6351994	IdentifierDeclStatement	unsigned int tmp_before_read_bytes = * read_bytes ;	2080:1:54449:54497	6351991	0	True				
ANR	6351995	IdentifierDecl	tmp_before_read_bytes = * read_bytes		6351991	0					
ANR	6351996	IdentifierDeclType	unsigned int		6351991	0					
ANR	6351997	Identifier	tmp_before_read_bytes		6351991	1					
ANR	6351998	AssignmentExpression	tmp_before_read_bytes = * read_bytes		6351991	2		=			
ANR	6351999	Identifier	tmp_before_read_bytes		6351991	0					
ANR	6352000	UnaryOperationExpression	* read_bytes		6351991	1					
ANR	6352001	UnaryOperator	*		6351991	0					
ANR	6352002	Identifier	read_bytes		6351991	1					
ANR	6352003	ExpressionStatement	"READ4 ( * read_bytes , len , lf_pointer -> utype , leaf_data , ut32 )"	2082:1:54501:54560	6351991	1	True				
ANR	6352004	CallExpression	"READ4 ( * read_bytes , len , lf_pointer -> utype , leaf_data , ut32 )"		6351991	0					
ANR	6352005	Callee	READ4		6351991	0					
ANR	6352006	Identifier	READ4		6351991	0					
ANR	6352007	ArgumentList	* read_bytes		6351991	1					
ANR	6352008	Argument	* read_bytes		6351991	0					
ANR	6352009	UnaryOperationExpression	* read_bytes		6351991	0					
ANR	6352010	UnaryOperator	*		6351991	0					
ANR	6352011	Identifier	read_bytes		6351991	1					
ANR	6352012	Argument	len		6351991	1					
ANR	6352013	Identifier	len		6351991	0					
ANR	6352014	Argument	lf_pointer -> utype		6351991	2					
ANR	6352015	PtrMemberAccess	lf_pointer -> utype		6351991	0					
ANR	6352016	Identifier	lf_pointer		6351991	0					
ANR	6352017	Identifier	utype		6351991	1					
ANR	6352018	Argument	leaf_data		6351991	3					
ANR	6352019	Identifier	leaf_data		6351991	0					
ANR	6352020	Argument	ut32		6351991	4					
ANR	6352021	Identifier	ut32		6351991	0					
ANR	6352022	ExpressionStatement	"READ4 ( * read_bytes , len , lf_pointer -> ptr_attr . ptr_attr , leaf_data , ut32 )"	2083:1:54563:54634	6351991	2	True				
ANR	6352023	CallExpression	"READ4 ( * read_bytes , len , lf_pointer -> ptr_attr . ptr_attr , leaf_data , ut32 )"		6351991	0					
ANR	6352024	Callee	READ4		6351991	0					
ANR	6352025	Identifier	READ4		6351991	0					
ANR	6352026	ArgumentList	* read_bytes		6351991	1					
ANR	6352027	Argument	* read_bytes		6351991	0					
ANR	6352028	UnaryOperationExpression	* read_bytes		6351991	0					
ANR	6352029	UnaryOperator	*		6351991	0					
ANR	6352030	Identifier	read_bytes		6351991	1					
ANR	6352031	Argument	len		6351991	1					
ANR	6352032	Identifier	len		6351991	0					
ANR	6352033	Argument	lf_pointer -> ptr_attr . ptr_attr		6351991	2					
ANR	6352034	MemberAccess	lf_pointer -> ptr_attr . ptr_attr		6351991	0					
ANR	6352035	PtrMemberAccess	lf_pointer -> ptr_attr		6351991	0					
ANR	6352036	Identifier	lf_pointer		6351991	0					
ANR	6352037	Identifier	ptr_attr		6351991	1					
ANR	6352038	Identifier	ptr_attr		6351991	1					
ANR	6352039	Argument	leaf_data		6351991	3					
ANR	6352040	Identifier	leaf_data		6351991	0					
ANR	6352041	Argument	ut32		6351991	4					
ANR	6352042	Identifier	ut32		6351991	0					
ANR	6352043	ExpressionStatement	lf_pointer -> ptr_attr . ptr_attr = SWAP_UINT32 ( lf_pointer -> ptr_attr . ptr_attr )	2085:1:54638:54712	6351991	3	True				
ANR	6352044	AssignmentExpression	lf_pointer -> ptr_attr . ptr_attr = SWAP_UINT32 ( lf_pointer -> ptr_attr . ptr_attr )		6351991	0		=			
ANR	6352045	MemberAccess	lf_pointer -> ptr_attr . ptr_attr		6351991	0					
ANR	6352046	PtrMemberAccess	lf_pointer -> ptr_attr		6351991	0					
ANR	6352047	Identifier	lf_pointer		6351991	0					
ANR	6352048	Identifier	ptr_attr		6351991	1					
ANR	6352049	Identifier	ptr_attr		6351991	1					
ANR	6352050	CallExpression	SWAP_UINT32 ( lf_pointer -> ptr_attr . ptr_attr )		6351991	1					
ANR	6352051	Callee	SWAP_UINT32		6351991	0					
ANR	6352052	Identifier	SWAP_UINT32		6351991	0					
ANR	6352053	ArgumentList	lf_pointer -> ptr_attr . ptr_attr		6351991	1					
ANR	6352054	Argument	lf_pointer -> ptr_attr . ptr_attr		6351991	0					
ANR	6352055	MemberAccess	lf_pointer -> ptr_attr . ptr_attr		6351991	0					
ANR	6352056	PtrMemberAccess	lf_pointer -> ptr_attr		6351991	0					
ANR	6352057	Identifier	lf_pointer		6351991	0					
ANR	6352058	Identifier	ptr_attr		6351991	1					
ANR	6352059	Identifier	ptr_attr		6351991	1					
ANR	6352060	ExpressionStatement	"PEEK_READ1 ( * read_bytes , len , lf_pointer -> pad , leaf_data , ut8 )"	2087:1:54716:54777	6351991	4	True				
ANR	6352061	CallExpression	"PEEK_READ1 ( * read_bytes , len , lf_pointer -> pad , leaf_data , ut8 )"		6351991	0					
ANR	6352062	Callee	PEEK_READ1		6351991	0					
ANR	6352063	Identifier	PEEK_READ1		6351991	0					
ANR	6352064	ArgumentList	* read_bytes		6351991	1					
ANR	6352065	Argument	* read_bytes		6351991	0					
ANR	6352066	UnaryOperationExpression	* read_bytes		6351991	0					
ANR	6352067	UnaryOperator	*		6351991	0					
ANR	6352068	Identifier	read_bytes		6351991	1					
ANR	6352069	Argument	len		6351991	1					
ANR	6352070	Identifier	len		6351991	0					
ANR	6352071	Argument	lf_pointer -> pad		6351991	2					
ANR	6352072	PtrMemberAccess	lf_pointer -> pad		6351991	0					
ANR	6352073	Identifier	lf_pointer		6351991	0					
ANR	6352074	Identifier	pad		6351991	1					
ANR	6352075	Argument	leaf_data		6351991	3					
ANR	6352076	Identifier	leaf_data		6351991	0					
ANR	6352077	Argument	ut8		6351991	4					
ANR	6352078	Identifier	ut8		6351991	0					
ANR	6352079	ExpressionStatement	"PAD_ALIGN ( lf_pointer -> pad , * read_bytes , leaf_data , len )"	2088:1:54780:54835	6351991	5	True				
ANR	6352080	CallExpression	"PAD_ALIGN ( lf_pointer -> pad , * read_bytes , leaf_data , len )"		6351991	0					
ANR	6352081	Callee	PAD_ALIGN		6351991	0					
ANR	6352082	Identifier	PAD_ALIGN		6351991	0					
ANR	6352083	ArgumentList	lf_pointer -> pad		6351991	1					
ANR	6352084	Argument	lf_pointer -> pad		6351991	0					
ANR	6352085	PtrMemberAccess	lf_pointer -> pad		6351991	0					
ANR	6352086	Identifier	lf_pointer		6351991	0					
ANR	6352087	Identifier	pad		6351991	1					
ANR	6352088	Argument	* read_bytes		6351991	1					
ANR	6352089	UnaryOperationExpression	* read_bytes		6351991	0					
ANR	6352090	UnaryOperator	*		6351991	0					
ANR	6352091	Identifier	read_bytes		6351991	1					
ANR	6352092	Argument	leaf_data		6351991	2					
ANR	6352093	Identifier	leaf_data		6351991	0					
ANR	6352094	Argument	len		6351991	3					
ANR	6352095	Identifier	len		6351991	0					
ANR	6352096	ReturnStatement	return * read_bytes - tmp_before_read_bytes ;	2090:1:54839:54881	6351991	6	True				
ANR	6352097	AdditiveExpression	* read_bytes - tmp_before_read_bytes		6351991	0		-			
ANR	6352098	UnaryOperationExpression	* read_bytes		6351991	0					
ANR	6352099	UnaryOperator	*		6351991	0					
ANR	6352100	Identifier	read_bytes		6351991	1					
ANR	6352101	Identifier	tmp_before_read_bytes		6351991	1					
ANR	6352102	ReturnType	static int		6351991	1					
ANR	6352103	Identifier	parse_lf_pointer		6351991	2					
ANR	6352104	ParameterList	"SLF_POINTER * lf_pointer , unsigned char * leaf_data , unsigned int * read_bytes , unsigned int len"		6351991	3					
ANR	6352105	Parameter	SLF_POINTER * lf_pointer	2078:28:54351:54373	6351991	0	True				
ANR	6352106	ParameterType	SLF_POINTER *		6351991	0					
ANR	6352107	Identifier	lf_pointer		6351991	1					
ANR	6352108	Parameter	unsigned char * leaf_data	2078:53:54376:54399	6351991	1	True				
ANR	6352109	ParameterType	unsigned char *		6351991	0					
ANR	6352110	Identifier	leaf_data		6351991	1					
ANR	6352111	Parameter	unsigned int * read_bytes	2078:79:54402:54425	6351991	2	True				
ANR	6352112	ParameterType	unsigned int *		6351991	0					
ANR	6352113	Identifier	read_bytes		6351991	1					
ANR	6352114	Parameter	unsigned int len	2078:105:54428:54443	6351991	3	True				
ANR	6352115	ParameterType	unsigned int		6351991	0					
ANR	6352116	Identifier	len		6351991	1					
ANR	6352117	CFGEntryNode	ENTRY		6351991		True				
ANR	6352118	CFGExitNode	EXIT		6351991		True				
ANR	6352119	Symbol	leaf_data		6351991						
ANR	6352120	Symbol	* lf_pointer		6351991						
ANR	6352121	Symbol	ut32		6351991						
ANR	6352122	Symbol	lf_pointer -> pad		6351991						
ANR	6352123	Symbol	read_bytes		6351991						
ANR	6352124	Symbol	lf_pointer -> utype		6351991						
ANR	6352125	Symbol	lf_pointer -> ptr_attr . ptr_attr		6351991						
ANR	6352126	Symbol	* read_bytes		6351991						
ANR	6352127	Symbol	len		6351991						
ANR	6352128	Symbol	lf_pointer -> ptr_attr		6351991						
ANR	6352129	Symbol	lf_pointer		6351991						
ANR	6352130	Symbol	tmp_before_read_bytes		6351991						
ANR	6352131	Symbol	ut8		6351991						
ANR	6352132	Symbol	SWAP_UINT32		6351991						
ANR	6352133	Function	parse_lf_array	2094:0:54966:55742							
ANR	6352134	FunctionDef	"parse_lf_array (SLF_ARRAY * lf_array , unsigned char * leaf_data , unsigned int * read_bytes , unsigned int len)"		6352133	0					
ANR	6352135	CompoundStatement		2095:0:55083:55742	6352133	0					
ANR	6352136	IdentifierDeclStatement	unsigned int tmp_before_read_bytes = * read_bytes ;	2096:1:55086:55134	6352133	0	True				
ANR	6352137	IdentifierDecl	tmp_before_read_bytes = * read_bytes		6352133	0					
ANR	6352138	IdentifierDeclType	unsigned int		6352133	0					
ANR	6352139	Identifier	tmp_before_read_bytes		6352133	1					
ANR	6352140	AssignmentExpression	tmp_before_read_bytes = * read_bytes		6352133	2		=			
ANR	6352141	Identifier	tmp_before_read_bytes		6352133	0					
ANR	6352142	UnaryOperationExpression	* read_bytes		6352133	1					
ANR	6352143	UnaryOperator	*		6352133	0					
ANR	6352144	Identifier	read_bytes		6352133	1					
ANR	6352145	IdentifierDeclStatement	unsigned int before_read_bytes = 0 ;	2097:1:55137:55171	6352133	1	True				
ANR	6352146	IdentifierDecl	before_read_bytes = 0		6352133	0					
ANR	6352147	IdentifierDeclType	unsigned int		6352133	0					
ANR	6352148	Identifier	before_read_bytes		6352133	1					
ANR	6352149	AssignmentExpression	before_read_bytes = 0		6352133	2		=			
ANR	6352150	Identifier	before_read_bytes		6352133	0					
ANR	6352151	PrimaryExpression	0		6352133	1					
ANR	6352152	ExpressionStatement	lf_array -> size . name_or_val = 0	2099:1:55175:55205	6352133	2	True				
ANR	6352153	AssignmentExpression	lf_array -> size . name_or_val = 0		6352133	0		=			
ANR	6352154	MemberAccess	lf_array -> size . name_or_val		6352133	0					
ANR	6352155	PtrMemberAccess	lf_array -> size		6352133	0					
ANR	6352156	Identifier	lf_array		6352133	0					
ANR	6352157	Identifier	size		6352133	1					
ANR	6352158	Identifier	name_or_val		6352133	1					
ANR	6352159	PrimaryExpression	0		6352133	1					
ANR	6352160	ExpressionStatement	"READ4 ( * read_bytes , len , lf_array -> element_type , leaf_data , ut32 )"	2101:1:55209:55273	6352133	3	True				
ANR	6352161	CallExpression	"READ4 ( * read_bytes , len , lf_array -> element_type , leaf_data , ut32 )"		6352133	0					
ANR	6352162	Callee	READ4		6352133	0					
ANR	6352163	Identifier	READ4		6352133	0					
ANR	6352164	ArgumentList	* read_bytes		6352133	1					
ANR	6352165	Argument	* read_bytes		6352133	0					
ANR	6352166	UnaryOperationExpression	* read_bytes		6352133	0					
ANR	6352167	UnaryOperator	*		6352133	0					
ANR	6352168	Identifier	read_bytes		6352133	1					
ANR	6352169	Argument	len		6352133	1					
ANR	6352170	Identifier	len		6352133	0					
ANR	6352171	Argument	lf_array -> element_type		6352133	2					
ANR	6352172	PtrMemberAccess	lf_array -> element_type		6352133	0					
ANR	6352173	Identifier	lf_array		6352133	0					
ANR	6352174	Identifier	element_type		6352133	1					
ANR	6352175	Argument	leaf_data		6352133	3					
ANR	6352176	Identifier	leaf_data		6352133	0					
ANR	6352177	Argument	ut32		6352133	4					
ANR	6352178	Identifier	ut32		6352133	0					
ANR	6352179	ExpressionStatement	"READ4 ( * read_bytes , len , lf_array -> index_type , leaf_data , ut32 )"	2102:1:55276:55338	6352133	4	True				
ANR	6352180	CallExpression	"READ4 ( * read_bytes , len , lf_array -> index_type , leaf_data , ut32 )"		6352133	0					
ANR	6352181	Callee	READ4		6352133	0					
ANR	6352182	Identifier	READ4		6352133	0					
ANR	6352183	ArgumentList	* read_bytes		6352133	1					
ANR	6352184	Argument	* read_bytes		6352133	0					
ANR	6352185	UnaryOperationExpression	* read_bytes		6352133	0					
ANR	6352186	UnaryOperator	*		6352133	0					
ANR	6352187	Identifier	read_bytes		6352133	1					
ANR	6352188	Argument	len		6352133	1					
ANR	6352189	Identifier	len		6352133	0					
ANR	6352190	Argument	lf_array -> index_type		6352133	2					
ANR	6352191	PtrMemberAccess	lf_array -> index_type		6352133	0					
ANR	6352192	Identifier	lf_array		6352133	0					
ANR	6352193	Identifier	index_type		6352133	1					
ANR	6352194	Argument	leaf_data		6352133	3					
ANR	6352195	Identifier	leaf_data		6352133	0					
ANR	6352196	Argument	ut32		6352133	4					
ANR	6352197	Identifier	ut32		6352133	0					
ANR	6352198	ExpressionStatement	before_read_bytes = * read_bytes	2104:1:55342:55373	6352133	5	True				
ANR	6352199	AssignmentExpression	before_read_bytes = * read_bytes		6352133	0		=			
ANR	6352200	Identifier	before_read_bytes		6352133	0					
ANR	6352201	UnaryOperationExpression	* read_bytes		6352133	1					
ANR	6352202	UnaryOperator	*		6352133	0					
ANR	6352203	Identifier	read_bytes		6352133	1					
ANR	6352204	ExpressionStatement	"parse_sval ( & lf_array -> size , leaf_data , read_bytes , len )"	2105:1:55376:55431	6352133	6	True				
ANR	6352205	CallExpression	"parse_sval ( & lf_array -> size , leaf_data , read_bytes , len )"		6352133	0					
ANR	6352206	Callee	parse_sval		6352133	0					
ANR	6352207	Identifier	parse_sval		6352133	0					
ANR	6352208	ArgumentList	& lf_array -> size		6352133	1					
ANR	6352209	Argument	& lf_array -> size		6352133	0					
ANR	6352210	UnaryOperationExpression	& lf_array -> size		6352133	0					
ANR	6352211	UnaryOperator	&		6352133	0					
ANR	6352212	PtrMemberAccess	lf_array -> size		6352133	1					
ANR	6352213	Identifier	lf_array		6352133	0					
ANR	6352214	Identifier	size		6352133	1					
ANR	6352215	Argument	leaf_data		6352133	1					
ANR	6352216	Identifier	leaf_data		6352133	0					
ANR	6352217	Argument	read_bytes		6352133	2					
ANR	6352218	Identifier	read_bytes		6352133	0					
ANR	6352219	Argument	len		6352133	3					
ANR	6352220	Identifier	len		6352133	0					
ANR	6352221	ExpressionStatement	leaf_data += ( * read_bytes - before_read_bytes )	2106:1:55434:55480	6352133	7	True				
ANR	6352222	AssignmentExpression	leaf_data += ( * read_bytes - before_read_bytes )		6352133	0		+=			
ANR	6352223	Identifier	leaf_data		6352133	0					
ANR	6352224	AdditiveExpression	* read_bytes - before_read_bytes		6352133	1		-			
ANR	6352225	UnaryOperationExpression	* read_bytes		6352133	0					
ANR	6352226	UnaryOperator	*		6352133	0					
ANR	6352227	Identifier	read_bytes		6352133	1					
ANR	6352228	Identifier	before_read_bytes		6352133	1					
ANR	6352229	ExpressionStatement	"PEEK_READ1 ( * read_bytes , len , lf_array -> pad , leaf_data , ut8 )"	2108:1:55484:55543	6352133	8	True				
ANR	6352230	CallExpression	"PEEK_READ1 ( * read_bytes , len , lf_array -> pad , leaf_data , ut8 )"		6352133	0					
ANR	6352231	Callee	PEEK_READ1		6352133	0					
ANR	6352232	Identifier	PEEK_READ1		6352133	0					
ANR	6352233	ArgumentList	* read_bytes		6352133	1					
ANR	6352234	Argument	* read_bytes		6352133	0					
ANR	6352235	UnaryOperationExpression	* read_bytes		6352133	0					
ANR	6352236	UnaryOperator	*		6352133	0					
ANR	6352237	Identifier	read_bytes		6352133	1					
ANR	6352238	Argument	len		6352133	1					
ANR	6352239	Identifier	len		6352133	0					
ANR	6352240	Argument	lf_array -> pad		6352133	2					
ANR	6352241	PtrMemberAccess	lf_array -> pad		6352133	0					
ANR	6352242	Identifier	lf_array		6352133	0					
ANR	6352243	Identifier	pad		6352133	1					
ANR	6352244	Argument	leaf_data		6352133	3					
ANR	6352245	Identifier	leaf_data		6352133	0					
ANR	6352246	Argument	ut8		6352133	4					
ANR	6352247	Identifier	ut8		6352133	0					
ANR	6352248	ExpressionStatement	"PAD_ALIGN ( lf_array -> pad , * read_bytes , leaf_data , len )"	2109:1:55546:55599	6352133	9	True				
ANR	6352249	CallExpression	"PAD_ALIGN ( lf_array -> pad , * read_bytes , leaf_data , len )"		6352133	0					
ANR	6352250	Callee	PAD_ALIGN		6352133	0					
ANR	6352251	Identifier	PAD_ALIGN		6352133	0					
ANR	6352252	ArgumentList	lf_array -> pad		6352133	1					
ANR	6352253	Argument	lf_array -> pad		6352133	0					
ANR	6352254	PtrMemberAccess	lf_array -> pad		6352133	0					
ANR	6352255	Identifier	lf_array		6352133	0					
ANR	6352256	Identifier	pad		6352133	1					
ANR	6352257	Argument	* read_bytes		6352133	1					
ANR	6352258	UnaryOperationExpression	* read_bytes		6352133	0					
ANR	6352259	UnaryOperator	*		6352133	0					
ANR	6352260	Identifier	read_bytes		6352133	1					
ANR	6352261	Argument	leaf_data		6352133	2					
ANR	6352262	Identifier	leaf_data		6352133	0					
ANR	6352263	Argument	len		6352133	3					
ANR	6352264	Identifier	len		6352133	0					
ANR	6352265	ReturnStatement	return * read_bytes - tmp_before_read_bytes ;	2114:1:55698:55740	6352133	10	True				
ANR	6352266	AdditiveExpression	* read_bytes - tmp_before_read_bytes		6352133	0		-			
ANR	6352267	UnaryOperationExpression	* read_bytes		6352133	0					
ANR	6352268	UnaryOperator	*		6352133	0					
ANR	6352269	Identifier	read_bytes		6352133	1					
ANR	6352270	Identifier	tmp_before_read_bytes		6352133	1					
ANR	6352271	ReturnType	static int		6352133	1					
ANR	6352272	Identifier	parse_lf_array		6352133	2					
ANR	6352273	ParameterList	"SLF_ARRAY * lf_array , unsigned char * leaf_data , unsigned int * read_bytes , unsigned int len"		6352133	3					
ANR	6352274	Parameter	SLF_ARRAY * lf_array	2094:26:54992:55010	6352133	0	True				
ANR	6352275	ParameterType	SLF_ARRAY *		6352133	0					
ANR	6352276	Identifier	lf_array		6352133	1					
ANR	6352277	Parameter	unsigned char * leaf_data	2094:47:55013:55036	6352133	1	True				
ANR	6352278	ParameterType	unsigned char *		6352133	0					
ANR	6352279	Identifier	leaf_data		6352133	1					
ANR	6352280	Parameter	unsigned int * read_bytes	2094:73:55039:55062	6352133	2	True				
ANR	6352281	ParameterType	unsigned int *		6352133	0					
ANR	6352282	Identifier	read_bytes		6352133	1					
ANR	6352283	Parameter	unsigned int len	2094:99:55065:55080	6352133	3	True				
ANR	6352284	ParameterType	unsigned int		6352133	0					
ANR	6352285	Identifier	len		6352133	1					
ANR	6352286	CFGEntryNode	ENTRY		6352133		True				
ANR	6352287	CFGExitNode	EXIT		6352133		True				
ANR	6352288	Symbol	lf_array -> pad		6352133						
ANR	6352289	Symbol	leaf_data		6352133						
ANR	6352290	Symbol	before_read_bytes		6352133						
ANR	6352291	Symbol	lf_array -> size		6352133						
ANR	6352292	Symbol	lf_array -> size . name_or_val		6352133						
ANR	6352293	Symbol	ut32		6352133						
ANR	6352294	Symbol	read_bytes		6352133						
ANR	6352295	Symbol	& lf_array -> size		6352133						
ANR	6352296	Symbol	* read_bytes		6352133						
ANR	6352297	Symbol	len		6352133						
ANR	6352298	Symbol	tmp_before_read_bytes		6352133						
ANR	6352299	Symbol	lf_array		6352133						
ANR	6352300	Symbol	* lf_array		6352133						
ANR	6352301	Symbol	ut8		6352133						
ANR	6352302	Symbol	lf_array -> index_type		6352133						
ANR	6352303	Symbol	lf_array -> element_type		6352133						
ANR	6352304	Function	parse_lf_modifier	2118:0:55825:56404							
ANR	6352305	FunctionDef	"parse_lf_modifier (SLF_MODIFIER * lf_modifier , unsigned char * leaf_data , unsigned int * read_bytes , unsigned int len)"		6352304	0					
ANR	6352306	CompoundStatement		2119:0:55951:56404	6352304	0					
ANR	6352307	IdentifierDeclStatement	unsigned int tmp_before_read_bytes = * read_bytes ;	2120:1:55954:56002	6352304	0	True				
ANR	6352308	IdentifierDecl	tmp_before_read_bytes = * read_bytes		6352304	0					
ANR	6352309	IdentifierDeclType	unsigned int		6352304	0					
ANR	6352310	Identifier	tmp_before_read_bytes		6352304	1					
ANR	6352311	AssignmentExpression	tmp_before_read_bytes = * read_bytes		6352304	2		=			
ANR	6352312	Identifier	tmp_before_read_bytes		6352304	0					
ANR	6352313	UnaryOperationExpression	* read_bytes		6352304	1					
ANR	6352314	UnaryOperator	*		6352304	0					
ANR	6352315	Identifier	read_bytes		6352304	1					
ANR	6352316	ExpressionStatement	"READ4 ( * read_bytes , len , lf_modifier -> modified_type , leaf_data , ut32 )"	2122:1:56006:56074	6352304	1	True				
ANR	6352317	CallExpression	"READ4 ( * read_bytes , len , lf_modifier -> modified_type , leaf_data , ut32 )"		6352304	0					
ANR	6352318	Callee	READ4		6352304	0					
ANR	6352319	Identifier	READ4		6352304	0					
ANR	6352320	ArgumentList	* read_bytes		6352304	1					
ANR	6352321	Argument	* read_bytes		6352304	0					
ANR	6352322	UnaryOperationExpression	* read_bytes		6352304	0					
ANR	6352323	UnaryOperator	*		6352304	0					
ANR	6352324	Identifier	read_bytes		6352304	1					
ANR	6352325	Argument	len		6352304	1					
ANR	6352326	Identifier	len		6352304	0					
ANR	6352327	Argument	lf_modifier -> modified_type		6352304	2					
ANR	6352328	PtrMemberAccess	lf_modifier -> modified_type		6352304	0					
ANR	6352329	Identifier	lf_modifier		6352304	0					
ANR	6352330	Identifier	modified_type		6352304	1					
ANR	6352331	Argument	leaf_data		6352304	3					
ANR	6352332	Identifier	leaf_data		6352304	0					
ANR	6352333	Argument	ut32		6352304	4					
ANR	6352334	Identifier	ut32		6352304	0					
ANR	6352335	ExpressionStatement	"READ2 ( * read_bytes , len , lf_modifier -> umodifier . modifier , leaf_data , ut16 )"	2123:1:56077:56150	6352304	2	True				
ANR	6352336	CallExpression	"READ2 ( * read_bytes , len , lf_modifier -> umodifier . modifier , leaf_data , ut16 )"		6352304	0					
ANR	6352337	Callee	READ2		6352304	0					
ANR	6352338	Identifier	READ2		6352304	0					
ANR	6352339	ArgumentList	* read_bytes		6352304	1					
ANR	6352340	Argument	* read_bytes		6352304	0					
ANR	6352341	UnaryOperationExpression	* read_bytes		6352304	0					
ANR	6352342	UnaryOperator	*		6352304	0					
ANR	6352343	Identifier	read_bytes		6352304	1					
ANR	6352344	Argument	len		6352304	1					
ANR	6352345	Identifier	len		6352304	0					
ANR	6352346	Argument	lf_modifier -> umodifier . modifier		6352304	2					
ANR	6352347	MemberAccess	lf_modifier -> umodifier . modifier		6352304	0					
ANR	6352348	PtrMemberAccess	lf_modifier -> umodifier		6352304	0					
ANR	6352349	Identifier	lf_modifier		6352304	0					
ANR	6352350	Identifier	umodifier		6352304	1					
ANR	6352351	Identifier	modifier		6352304	1					
ANR	6352352	Argument	leaf_data		6352304	3					
ANR	6352353	Identifier	leaf_data		6352304	0					
ANR	6352354	Argument	ut16		6352304	4					
ANR	6352355	Identifier	ut16		6352304	0					
ANR	6352356	ExpressionStatement	lf_modifier -> umodifier . modifier = SWAP_UINT16 ( lf_modifier -> umodifier . modifier )	2124:1:56153:56231	6352304	3	True				
ANR	6352357	AssignmentExpression	lf_modifier -> umodifier . modifier = SWAP_UINT16 ( lf_modifier -> umodifier . modifier )		6352304	0		=			
ANR	6352358	MemberAccess	lf_modifier -> umodifier . modifier		6352304	0					
ANR	6352359	PtrMemberAccess	lf_modifier -> umodifier		6352304	0					
ANR	6352360	Identifier	lf_modifier		6352304	0					
ANR	6352361	Identifier	umodifier		6352304	1					
ANR	6352362	Identifier	modifier		6352304	1					
ANR	6352363	CallExpression	SWAP_UINT16 ( lf_modifier -> umodifier . modifier )		6352304	1					
ANR	6352364	Callee	SWAP_UINT16		6352304	0					
ANR	6352365	Identifier	SWAP_UINT16		6352304	0					
ANR	6352366	ArgumentList	lf_modifier -> umodifier . modifier		6352304	1					
ANR	6352367	Argument	lf_modifier -> umodifier . modifier		6352304	0					
ANR	6352368	MemberAccess	lf_modifier -> umodifier . modifier		6352304	0					
ANR	6352369	PtrMemberAccess	lf_modifier -> umodifier		6352304	0					
ANR	6352370	Identifier	lf_modifier		6352304	0					
ANR	6352371	Identifier	umodifier		6352304	1					
ANR	6352372	Identifier	modifier		6352304	1					
ANR	6352373	ExpressionStatement	"PEEK_READ1 ( * read_bytes , len , lf_modifier -> pad , leaf_data , ut8 )"	2126:1:56235:56297	6352304	4	True				
ANR	6352374	CallExpression	"PEEK_READ1 ( * read_bytes , len , lf_modifier -> pad , leaf_data , ut8 )"		6352304	0					
ANR	6352375	Callee	PEEK_READ1		6352304	0					
ANR	6352376	Identifier	PEEK_READ1		6352304	0					
ANR	6352377	ArgumentList	* read_bytes		6352304	1					
ANR	6352378	Argument	* read_bytes		6352304	0					
ANR	6352379	UnaryOperationExpression	* read_bytes		6352304	0					
ANR	6352380	UnaryOperator	*		6352304	0					
ANR	6352381	Identifier	read_bytes		6352304	1					
ANR	6352382	Argument	len		6352304	1					
ANR	6352383	Identifier	len		6352304	0					
ANR	6352384	Argument	lf_modifier -> pad		6352304	2					
ANR	6352385	PtrMemberAccess	lf_modifier -> pad		6352304	0					
ANR	6352386	Identifier	lf_modifier		6352304	0					
ANR	6352387	Identifier	pad		6352304	1					
ANR	6352388	Argument	leaf_data		6352304	3					
ANR	6352389	Identifier	leaf_data		6352304	0					
ANR	6352390	Argument	ut8		6352304	4					
ANR	6352391	Identifier	ut8		6352304	0					
ANR	6352392	ExpressionStatement	"PAD_ALIGN ( lf_modifier -> pad , * read_bytes , leaf_data , len )"	2127:1:56300:56356	6352304	5	True				
ANR	6352393	CallExpression	"PAD_ALIGN ( lf_modifier -> pad , * read_bytes , leaf_data , len )"		6352304	0					
ANR	6352394	Callee	PAD_ALIGN		6352304	0					
ANR	6352395	Identifier	PAD_ALIGN		6352304	0					
ANR	6352396	ArgumentList	lf_modifier -> pad		6352304	1					
ANR	6352397	Argument	lf_modifier -> pad		6352304	0					
ANR	6352398	PtrMemberAccess	lf_modifier -> pad		6352304	0					
ANR	6352399	Identifier	lf_modifier		6352304	0					
ANR	6352400	Identifier	pad		6352304	1					
ANR	6352401	Argument	* read_bytes		6352304	1					
ANR	6352402	UnaryOperationExpression	* read_bytes		6352304	0					
ANR	6352403	UnaryOperator	*		6352304	0					
ANR	6352404	Identifier	read_bytes		6352304	1					
ANR	6352405	Argument	leaf_data		6352304	2					
ANR	6352406	Identifier	leaf_data		6352304	0					
ANR	6352407	Argument	len		6352304	3					
ANR	6352408	Identifier	len		6352304	0					
ANR	6352409	ReturnStatement	return * read_bytes - tmp_before_read_bytes ;	2129:1:56360:56402	6352304	6	True				
ANR	6352410	AdditiveExpression	* read_bytes - tmp_before_read_bytes		6352304	0		-			
ANR	6352411	UnaryOperationExpression	* read_bytes		6352304	0					
ANR	6352412	UnaryOperator	*		6352304	0					
ANR	6352413	Identifier	read_bytes		6352304	1					
ANR	6352414	Identifier	tmp_before_read_bytes		6352304	1					
ANR	6352415	ReturnType	static int		6352304	1					
ANR	6352416	Identifier	parse_lf_modifier		6352304	2					
ANR	6352417	ParameterList	"SLF_MODIFIER * lf_modifier , unsigned char * leaf_data , unsigned int * read_bytes , unsigned int len"		6352304	3					
ANR	6352418	Parameter	SLF_MODIFIER * lf_modifier	2118:29:55854:55878	6352304	0	True				
ANR	6352419	ParameterType	SLF_MODIFIER *		6352304	0					
ANR	6352420	Identifier	lf_modifier		6352304	1					
ANR	6352421	Parameter	unsigned char * leaf_data	2118:56:55881:55904	6352304	1	True				
ANR	6352422	ParameterType	unsigned char *		6352304	0					
ANR	6352423	Identifier	leaf_data		6352304	1					
ANR	6352424	Parameter	unsigned int * read_bytes	2118:82:55907:55930	6352304	2	True				
ANR	6352425	ParameterType	unsigned int *		6352304	0					
ANR	6352426	Identifier	read_bytes		6352304	1					
ANR	6352427	Parameter	unsigned int len	2118:108:55933:55948	6352304	3	True				
ANR	6352428	ParameterType	unsigned int		6352304	0					
ANR	6352429	Identifier	len		6352304	1					
ANR	6352430	CFGEntryNode	ENTRY		6352304		True				
ANR	6352431	CFGExitNode	EXIT		6352304		True				
ANR	6352432	Symbol	* lf_modifier		6352304						
ANR	6352433	Symbol	leaf_data		6352304						
ANR	6352434	Symbol	lf_modifier -> pad		6352304						
ANR	6352435	Symbol	ut32		6352304						
ANR	6352436	Symbol	read_bytes		6352304						
ANR	6352437	Symbol	lf_modifier -> modified_type		6352304						
ANR	6352438	Symbol	lf_modifier		6352304						
ANR	6352439	Symbol	lf_modifier -> umodifier . modifier		6352304						
ANR	6352440	Symbol	* read_bytes		6352304						
ANR	6352441	Symbol	ut16		6352304						
ANR	6352442	Symbol	len		6352304						
ANR	6352443	Symbol	SWAP_UINT16		6352304						
ANR	6352444	Symbol	tmp_before_read_bytes		6352304						
ANR	6352445	Symbol	lf_modifier -> umodifier		6352304						
ANR	6352446	Symbol	ut8		6352304						
ANR	6352447	Function	parse_lf_arglist	2133:0:56487:57190							
ANR	6352448	FunctionDef	"parse_lf_arglist (SLF_ARGLIST * lf_arglist , unsigned char * leaf_data , unsigned int * read_bytes , unsigned int len)"		6352447	0					
ANR	6352449	CompoundStatement		2134:0:56610:57190	6352447	0					
ANR	6352450	IdentifierDeclStatement	unsigned int tmp_before_read_bytes = * read_bytes ;	2135:1:56613:56661	6352447	0	True				
ANR	6352451	IdentifierDecl	tmp_before_read_bytes = * read_bytes		6352447	0					
ANR	6352452	IdentifierDeclType	unsigned int		6352447	0					
ANR	6352453	Identifier	tmp_before_read_bytes		6352447	1					
ANR	6352454	AssignmentExpression	tmp_before_read_bytes = * read_bytes		6352447	2		=			
ANR	6352455	Identifier	tmp_before_read_bytes		6352447	0					
ANR	6352456	UnaryOperationExpression	* read_bytes		6352447	1					
ANR	6352457	UnaryOperator	*		6352447	0					
ANR	6352458	Identifier	read_bytes		6352447	1					
ANR	6352459	ExpressionStatement	lf_arglist -> arg_type = 0	2137:1:56665:56689	6352447	1	True				
ANR	6352460	AssignmentExpression	lf_arglist -> arg_type = 0		6352447	0		=			
ANR	6352461	PtrMemberAccess	lf_arglist -> arg_type		6352447	0					
ANR	6352462	Identifier	lf_arglist		6352447	0					
ANR	6352463	Identifier	arg_type		6352447	1					
ANR	6352464	PrimaryExpression	0		6352447	1					
ANR	6352465	ExpressionStatement	"READ4 ( * read_bytes , len , lf_arglist -> count , leaf_data , ut32 )"	2139:1:56693:56752	6352447	2	True				
ANR	6352466	CallExpression	"READ4 ( * read_bytes , len , lf_arglist -> count , leaf_data , ut32 )"		6352447	0					
ANR	6352467	Callee	READ4		6352447	0					
ANR	6352468	Identifier	READ4		6352447	0					
ANR	6352469	ArgumentList	* read_bytes		6352447	1					
ANR	6352470	Argument	* read_bytes		6352447	0					
ANR	6352471	UnaryOperationExpression	* read_bytes		6352447	0					
ANR	6352472	UnaryOperator	*		6352447	0					
ANR	6352473	Identifier	read_bytes		6352447	1					
ANR	6352474	Argument	len		6352447	1					
ANR	6352475	Identifier	len		6352447	0					
ANR	6352476	Argument	lf_arglist -> count		6352447	2					
ANR	6352477	PtrMemberAccess	lf_arglist -> count		6352447	0					
ANR	6352478	Identifier	lf_arglist		6352447	0					
ANR	6352479	Identifier	count		6352447	1					
ANR	6352480	Argument	leaf_data		6352447	3					
ANR	6352481	Identifier	leaf_data		6352447	0					
ANR	6352482	Argument	ut32		6352447	4					
ANR	6352483	Identifier	ut32		6352447	0					
ANR	6352484	ExpressionStatement	lf_arglist -> arg_type = ( unsigned int * ) malloc ( lf_arglist -> count * 4 )	2141:1:56756:56826	6352447	3	True				
ANR	6352485	AssignmentExpression	lf_arglist -> arg_type = ( unsigned int * ) malloc ( lf_arglist -> count * 4 )		6352447	0		=			
ANR	6352486	PtrMemberAccess	lf_arglist -> arg_type		6352447	0					
ANR	6352487	Identifier	lf_arglist		6352447	0					
ANR	6352488	Identifier	arg_type		6352447	1					
ANR	6352489	CastExpression	( unsigned int * ) malloc ( lf_arglist -> count * 4 )		6352447	1					
ANR	6352490	CastTarget	unsigned int *		6352447	0					
ANR	6352491	CallExpression	malloc ( lf_arglist -> count * 4 )		6352447	1					
ANR	6352492	Callee	malloc		6352447	0					
ANR	6352493	Identifier	malloc		6352447	0					
ANR	6352494	ArgumentList	lf_arglist -> count * 4		6352447	1					
ANR	6352495	Argument	lf_arglist -> count * 4		6352447	0					
ANR	6352496	MultiplicativeExpression	lf_arglist -> count * 4		6352447	0		*			
ANR	6352497	PtrMemberAccess	lf_arglist -> count		6352447	0					
ANR	6352498	Identifier	lf_arglist		6352447	0					
ANR	6352499	Identifier	count		6352447	1					
ANR	6352500	PrimaryExpression	4		6352447	1					
ANR	6352501	IfStatement	if ( ! lf_arglist -> arg_type )		6352447	4					
ANR	6352502	Condition	! lf_arglist -> arg_type	2142:5:56833:56853	6352447	0	True				
ANR	6352503	UnaryOperationExpression	! lf_arglist -> arg_type		6352447	0					
ANR	6352504	UnaryOperator	!		6352447	0					
ANR	6352505	PtrMemberAccess	lf_arglist -> arg_type		6352447	1					
ANR	6352506	Identifier	lf_arglist		6352447	0					
ANR	6352507	Identifier	arg_type		6352447	1					
ANR	6352508	CompoundStatement		9:28:245:245	6352447	1					
ANR	6352509	ReturnStatement	return 0 ;	2143:2:56860:56868	6352447	0	True				
ANR	6352510	PrimaryExpression	0		6352447	0					
ANR	6352511	ExpressionStatement	"memcpy ( lf_arglist -> arg_type , leaf_data , lf_arglist -> count * 4 )"	2145:1:56874:56937	6352447	5	True				
ANR	6352512	CallExpression	"memcpy ( lf_arglist -> arg_type , leaf_data , lf_arglist -> count * 4 )"		6352447	0					
ANR	6352513	Callee	memcpy		6352447	0					
ANR	6352514	Identifier	memcpy		6352447	0					
ANR	6352515	ArgumentList	lf_arglist -> arg_type		6352447	1					
ANR	6352516	Argument	lf_arglist -> arg_type		6352447	0					
ANR	6352517	PtrMemberAccess	lf_arglist -> arg_type		6352447	0					
ANR	6352518	Identifier	lf_arglist		6352447	0					
ANR	6352519	Identifier	arg_type		6352447	1					
ANR	6352520	Argument	leaf_data		6352447	1					
ANR	6352521	Identifier	leaf_data		6352447	0					
ANR	6352522	Argument	lf_arglist -> count * 4		6352447	2					
ANR	6352523	MultiplicativeExpression	lf_arglist -> count * 4		6352447	0		*			
ANR	6352524	PtrMemberAccess	lf_arglist -> count		6352447	0					
ANR	6352525	Identifier	lf_arglist		6352447	0					
ANR	6352526	Identifier	count		6352447	1					
ANR	6352527	PrimaryExpression	4		6352447	1					
ANR	6352528	ExpressionStatement	leaf_data += ( lf_arglist -> count * 4 )	2146:1:56940:56976	6352447	6	True				
ANR	6352529	AssignmentExpression	leaf_data += ( lf_arglist -> count * 4 )		6352447	0		+=			
ANR	6352530	Identifier	leaf_data		6352447	0					
ANR	6352531	MultiplicativeExpression	lf_arglist -> count * 4		6352447	1		*			
ANR	6352532	PtrMemberAccess	lf_arglist -> count		6352447	0					
ANR	6352533	Identifier	lf_arglist		6352447	0					
ANR	6352534	Identifier	count		6352447	1					
ANR	6352535	PrimaryExpression	4		6352447	1					
ANR	6352536	ExpressionStatement	* read_bytes += ( lf_arglist -> count * 4 )	2147:1:56979:57017	6352447	7	True				
ANR	6352537	AssignmentExpression	* read_bytes += ( lf_arglist -> count * 4 )		6352447	0		+=			
ANR	6352538	UnaryOperationExpression	* read_bytes		6352447	0					
ANR	6352539	UnaryOperator	*		6352447	0					
ANR	6352540	Identifier	read_bytes		6352447	1					
ANR	6352541	MultiplicativeExpression	lf_arglist -> count * 4		6352447	1		*			
ANR	6352542	PtrMemberAccess	lf_arglist -> count		6352447	0					
ANR	6352543	Identifier	lf_arglist		6352447	0					
ANR	6352544	Identifier	count		6352447	1					
ANR	6352545	PrimaryExpression	4		6352447	1					
ANR	6352546	ExpressionStatement	"PEEK_READ1 ( * read_bytes , len , lf_arglist -> pad , leaf_data , ut8 )"	2149:1:57021:57083	6352447	8	True				
ANR	6352547	CallExpression	"PEEK_READ1 ( * read_bytes , len , lf_arglist -> pad , leaf_data , ut8 )"		6352447	0					
ANR	6352548	Callee	PEEK_READ1		6352447	0					
ANR	6352549	Identifier	PEEK_READ1		6352447	0					
ANR	6352550	ArgumentList	* read_bytes		6352447	1					
ANR	6352551	Argument	* read_bytes		6352447	0					
ANR	6352552	UnaryOperationExpression	* read_bytes		6352447	0					
ANR	6352553	UnaryOperator	*		6352447	0					
ANR	6352554	Identifier	read_bytes		6352447	1					
ANR	6352555	Argument	len		6352447	1					
ANR	6352556	Identifier	len		6352447	0					
ANR	6352557	Argument	lf_arglist -> pad		6352447	2					
ANR	6352558	PtrMemberAccess	lf_arglist -> pad		6352447	0					
ANR	6352559	Identifier	lf_arglist		6352447	0					
ANR	6352560	Identifier	pad		6352447	1					
ANR	6352561	Argument	leaf_data		6352447	3					
ANR	6352562	Identifier	leaf_data		6352447	0					
ANR	6352563	Argument	ut8		6352447	4					
ANR	6352564	Identifier	ut8		6352447	0					
ANR	6352565	ExpressionStatement	"PAD_ALIGN ( lf_arglist -> pad , * read_bytes , leaf_data , len )"	2150:1:57086:57142	6352447	9	True				
ANR	6352566	CallExpression	"PAD_ALIGN ( lf_arglist -> pad , * read_bytes , leaf_data , len )"		6352447	0					
ANR	6352567	Callee	PAD_ALIGN		6352447	0					
ANR	6352568	Identifier	PAD_ALIGN		6352447	0					
ANR	6352569	ArgumentList	lf_arglist -> pad		6352447	1					
ANR	6352570	Argument	lf_arglist -> pad		6352447	0					
ANR	6352571	PtrMemberAccess	lf_arglist -> pad		6352447	0					
ANR	6352572	Identifier	lf_arglist		6352447	0					
ANR	6352573	Identifier	pad		6352447	1					
ANR	6352574	Argument	* read_bytes		6352447	1					
ANR	6352575	UnaryOperationExpression	* read_bytes		6352447	0					
ANR	6352576	UnaryOperator	*		6352447	0					
ANR	6352577	Identifier	read_bytes		6352447	1					
ANR	6352578	Argument	leaf_data		6352447	2					
ANR	6352579	Identifier	leaf_data		6352447	0					
ANR	6352580	Argument	len		6352447	3					
ANR	6352581	Identifier	len		6352447	0					
ANR	6352582	ReturnStatement	return * read_bytes - tmp_before_read_bytes ;	2152:1:57146:57188	6352447	10	True				
ANR	6352583	AdditiveExpression	* read_bytes - tmp_before_read_bytes		6352447	0		-			
ANR	6352584	UnaryOperationExpression	* read_bytes		6352447	0					
ANR	6352585	UnaryOperator	*		6352447	0					
ANR	6352586	Identifier	read_bytes		6352447	1					
ANR	6352587	Identifier	tmp_before_read_bytes		6352447	1					
ANR	6352588	ReturnType	static int		6352447	1					
ANR	6352589	Identifier	parse_lf_arglist		6352447	2					
ANR	6352590	ParameterList	"SLF_ARGLIST * lf_arglist , unsigned char * leaf_data , unsigned int * read_bytes , unsigned int len"		6352447	3					
ANR	6352591	Parameter	SLF_ARGLIST * lf_arglist	2133:28:56515:56537	6352447	0	True				
ANR	6352592	ParameterType	SLF_ARGLIST *		6352447	0					
ANR	6352593	Identifier	lf_arglist		6352447	1					
ANR	6352594	Parameter	unsigned char * leaf_data	2133:53:56540:56563	6352447	1	True				
ANR	6352595	ParameterType	unsigned char *		6352447	0					
ANR	6352596	Identifier	leaf_data		6352447	1					
ANR	6352597	Parameter	unsigned int * read_bytes	2133:79:56566:56589	6352447	2	True				
ANR	6352598	ParameterType	unsigned int *		6352447	0					
ANR	6352599	Identifier	read_bytes		6352447	1					
ANR	6352600	Parameter	unsigned int len	2133:105:56592:56607	6352447	3	True				
ANR	6352601	ParameterType	unsigned int		6352447	0					
ANR	6352602	Identifier	len		6352447	1					
ANR	6352603	CFGEntryNode	ENTRY		6352447		True				
ANR	6352604	CFGExitNode	EXIT		6352447		True				
ANR	6352605	Symbol	malloc		6352447						
ANR	6352606	Symbol	leaf_data		6352447						
ANR	6352607	Symbol	ut32		6352447						
ANR	6352608	Symbol	lf_arglist -> pad		6352447						
ANR	6352609	Symbol	* lf_arglist		6352447						
ANR	6352610	Symbol	read_bytes		6352447						
ANR	6352611	Symbol	* read_bytes		6352447						
ANR	6352612	Symbol	len		6352447						
ANR	6352613	Symbol	tmp_before_read_bytes		6352447						
ANR	6352614	Symbol	ut8		6352447						
ANR	6352615	Symbol	lf_arglist		6352447						
ANR	6352616	Symbol	lf_arglist -> count		6352447						
ANR	6352617	Symbol	lf_arglist -> arg_type		6352447						
ANR	6352618	Function	parse_lf_mfunction	2156:0:57273:58173							
ANR	6352619	FunctionDef	"parse_lf_mfunction (SLF_MFUNCTION * lf_mfunction , unsigned char * leaf_data , unsigned int * read_bytes , unsigned int len)"		6352618	0					
ANR	6352620	CompoundStatement		2157:0:57402:58173	6352618	0					
ANR	6352621	IdentifierDeclStatement	unsigned int tmp_before_read_bytes = * read_bytes ;	2158:1:57405:57453	6352618	0	True				
ANR	6352622	IdentifierDecl	tmp_before_read_bytes = * read_bytes		6352618	0					
ANR	6352623	IdentifierDeclType	unsigned int		6352618	0					
ANR	6352624	Identifier	tmp_before_read_bytes		6352618	1					
ANR	6352625	AssignmentExpression	tmp_before_read_bytes = * read_bytes		6352618	2		=			
ANR	6352626	Identifier	tmp_before_read_bytes		6352618	0					
ANR	6352627	UnaryOperationExpression	* read_bytes		6352618	1					
ANR	6352628	UnaryOperator	*		6352618	0					
ANR	6352629	Identifier	read_bytes		6352618	1					
ANR	6352630	ExpressionStatement	"READ4 ( * read_bytes , len , lf_mfunction -> return_type , leaf_data , ut32 )"	2160:1:57457:57524	6352618	1	True				
ANR	6352631	CallExpression	"READ4 ( * read_bytes , len , lf_mfunction -> return_type , leaf_data , ut32 )"		6352618	0					
ANR	6352632	Callee	READ4		6352618	0					
ANR	6352633	Identifier	READ4		6352618	0					
ANR	6352634	ArgumentList	* read_bytes		6352618	1					
ANR	6352635	Argument	* read_bytes		6352618	0					
ANR	6352636	UnaryOperationExpression	* read_bytes		6352618	0					
ANR	6352637	UnaryOperator	*		6352618	0					
ANR	6352638	Identifier	read_bytes		6352618	1					
ANR	6352639	Argument	len		6352618	1					
ANR	6352640	Identifier	len		6352618	0					
ANR	6352641	Argument	lf_mfunction -> return_type		6352618	2					
ANR	6352642	PtrMemberAccess	lf_mfunction -> return_type		6352618	0					
ANR	6352643	Identifier	lf_mfunction		6352618	0					
ANR	6352644	Identifier	return_type		6352618	1					
ANR	6352645	Argument	leaf_data		6352618	3					
ANR	6352646	Identifier	leaf_data		6352618	0					
ANR	6352647	Argument	ut32		6352618	4					
ANR	6352648	Identifier	ut32		6352618	0					
ANR	6352649	ExpressionStatement	"READ4 ( * read_bytes , len , lf_mfunction -> class_type , leaf_data , ut32 )"	2161:1:57527:57593	6352618	2	True				
ANR	6352650	CallExpression	"READ4 ( * read_bytes , len , lf_mfunction -> class_type , leaf_data , ut32 )"		6352618	0					
ANR	6352651	Callee	READ4		6352618	0					
ANR	6352652	Identifier	READ4		6352618	0					
ANR	6352653	ArgumentList	* read_bytes		6352618	1					
ANR	6352654	Argument	* read_bytes		6352618	0					
ANR	6352655	UnaryOperationExpression	* read_bytes		6352618	0					
ANR	6352656	UnaryOperator	*		6352618	0					
ANR	6352657	Identifier	read_bytes		6352618	1					
ANR	6352658	Argument	len		6352618	1					
ANR	6352659	Identifier	len		6352618	0					
ANR	6352660	Argument	lf_mfunction -> class_type		6352618	2					
ANR	6352661	PtrMemberAccess	lf_mfunction -> class_type		6352618	0					
ANR	6352662	Identifier	lf_mfunction		6352618	0					
ANR	6352663	Identifier	class_type		6352618	1					
ANR	6352664	Argument	leaf_data		6352618	3					
ANR	6352665	Identifier	leaf_data		6352618	0					
ANR	6352666	Argument	ut32		6352618	4					
ANR	6352667	Identifier	ut32		6352618	0					
ANR	6352668	ExpressionStatement	"READ4 ( * read_bytes , len , lf_mfunction -> this_type , leaf_data , ut32 )"	2162:1:57596:57661	6352618	3	True				
ANR	6352669	CallExpression	"READ4 ( * read_bytes , len , lf_mfunction -> this_type , leaf_data , ut32 )"		6352618	0					
ANR	6352670	Callee	READ4		6352618	0					
ANR	6352671	Identifier	READ4		6352618	0					
ANR	6352672	ArgumentList	* read_bytes		6352618	1					
ANR	6352673	Argument	* read_bytes		6352618	0					
ANR	6352674	UnaryOperationExpression	* read_bytes		6352618	0					
ANR	6352675	UnaryOperator	*		6352618	0					
ANR	6352676	Identifier	read_bytes		6352618	1					
ANR	6352677	Argument	len		6352618	1					
ANR	6352678	Identifier	len		6352618	0					
ANR	6352679	Argument	lf_mfunction -> this_type		6352618	2					
ANR	6352680	PtrMemberAccess	lf_mfunction -> this_type		6352618	0					
ANR	6352681	Identifier	lf_mfunction		6352618	0					
ANR	6352682	Identifier	this_type		6352618	1					
ANR	6352683	Argument	leaf_data		6352618	3					
ANR	6352684	Identifier	leaf_data		6352618	0					
ANR	6352685	Argument	ut32		6352618	4					
ANR	6352686	Identifier	ut32		6352618	0					
ANR	6352687	ExpressionStatement	"READ1 ( * read_bytes , len , lf_mfunction -> call_conv , leaf_data , ut8 )"	2163:1:57664:57728	6352618	4	True				
ANR	6352688	CallExpression	"READ1 ( * read_bytes , len , lf_mfunction -> call_conv , leaf_data , ut8 )"		6352618	0					
ANR	6352689	Callee	READ1		6352618	0					
ANR	6352690	Identifier	READ1		6352618	0					
ANR	6352691	ArgumentList	* read_bytes		6352618	1					
ANR	6352692	Argument	* read_bytes		6352618	0					
ANR	6352693	UnaryOperationExpression	* read_bytes		6352618	0					
ANR	6352694	UnaryOperator	*		6352618	0					
ANR	6352695	Identifier	read_bytes		6352618	1					
ANR	6352696	Argument	len		6352618	1					
ANR	6352697	Identifier	len		6352618	0					
ANR	6352698	Argument	lf_mfunction -> call_conv		6352618	2					
ANR	6352699	PtrMemberAccess	lf_mfunction -> call_conv		6352618	0					
ANR	6352700	Identifier	lf_mfunction		6352618	0					
ANR	6352701	Identifier	call_conv		6352618	1					
ANR	6352702	Argument	leaf_data		6352618	3					
ANR	6352703	Identifier	leaf_data		6352618	0					
ANR	6352704	Argument	ut8		6352618	4					
ANR	6352705	Identifier	ut8		6352618	0					
ANR	6352706	ExpressionStatement	"READ1 ( * read_bytes , len , lf_mfunction -> reserved , leaf_data , ut8 )"	2164:1:57731:57794	6352618	5	True				
ANR	6352707	CallExpression	"READ1 ( * read_bytes , len , lf_mfunction -> reserved , leaf_data , ut8 )"		6352618	0					
ANR	6352708	Callee	READ1		6352618	0					
ANR	6352709	Identifier	READ1		6352618	0					
ANR	6352710	ArgumentList	* read_bytes		6352618	1					
ANR	6352711	Argument	* read_bytes		6352618	0					
ANR	6352712	UnaryOperationExpression	* read_bytes		6352618	0					
ANR	6352713	UnaryOperator	*		6352618	0					
ANR	6352714	Identifier	read_bytes		6352618	1					
ANR	6352715	Argument	len		6352618	1					
ANR	6352716	Identifier	len		6352618	0					
ANR	6352717	Argument	lf_mfunction -> reserved		6352618	2					
ANR	6352718	PtrMemberAccess	lf_mfunction -> reserved		6352618	0					
ANR	6352719	Identifier	lf_mfunction		6352618	0					
ANR	6352720	Identifier	reserved		6352618	1					
ANR	6352721	Argument	leaf_data		6352618	3					
ANR	6352722	Identifier	leaf_data		6352618	0					
ANR	6352723	Argument	ut8		6352618	4					
ANR	6352724	Identifier	ut8		6352618	0					
ANR	6352725	ExpressionStatement	"READ2 ( * read_bytes , len , lf_mfunction -> parm_count , leaf_data , ut8 )"	2165:1:57797:57862	6352618	6	True				
ANR	6352726	CallExpression	"READ2 ( * read_bytes , len , lf_mfunction -> parm_count , leaf_data , ut8 )"		6352618	0					
ANR	6352727	Callee	READ2		6352618	0					
ANR	6352728	Identifier	READ2		6352618	0					
ANR	6352729	ArgumentList	* read_bytes		6352618	1					
ANR	6352730	Argument	* read_bytes		6352618	0					
ANR	6352731	UnaryOperationExpression	* read_bytes		6352618	0					
ANR	6352732	UnaryOperator	*		6352618	0					
ANR	6352733	Identifier	read_bytes		6352618	1					
ANR	6352734	Argument	len		6352618	1					
ANR	6352735	Identifier	len		6352618	0					
ANR	6352736	Argument	lf_mfunction -> parm_count		6352618	2					
ANR	6352737	PtrMemberAccess	lf_mfunction -> parm_count		6352618	0					
ANR	6352738	Identifier	lf_mfunction		6352618	0					
ANR	6352739	Identifier	parm_count		6352618	1					
ANR	6352740	Argument	leaf_data		6352618	3					
ANR	6352741	Identifier	leaf_data		6352618	0					
ANR	6352742	Argument	ut8		6352618	4					
ANR	6352743	Identifier	ut8		6352618	0					
ANR	6352744	ExpressionStatement	"READ4 ( * read_bytes , len , lf_mfunction -> arglist , leaf_data , ut32 )"	2166:1:57865:57928	6352618	7	True				
ANR	6352745	CallExpression	"READ4 ( * read_bytes , len , lf_mfunction -> arglist , leaf_data , ut32 )"		6352618	0					
ANR	6352746	Callee	READ4		6352618	0					
ANR	6352747	Identifier	READ4		6352618	0					
ANR	6352748	ArgumentList	* read_bytes		6352618	1					
ANR	6352749	Argument	* read_bytes		6352618	0					
ANR	6352750	UnaryOperationExpression	* read_bytes		6352618	0					
ANR	6352751	UnaryOperator	*		6352618	0					
ANR	6352752	Identifier	read_bytes		6352618	1					
ANR	6352753	Argument	len		6352618	1					
ANR	6352754	Identifier	len		6352618	0					
ANR	6352755	Argument	lf_mfunction -> arglist		6352618	2					
ANR	6352756	PtrMemberAccess	lf_mfunction -> arglist		6352618	0					
ANR	6352757	Identifier	lf_mfunction		6352618	0					
ANR	6352758	Identifier	arglist		6352618	1					
ANR	6352759	Argument	leaf_data		6352618	3					
ANR	6352760	Identifier	leaf_data		6352618	0					
ANR	6352761	Argument	ut32		6352618	4					
ANR	6352762	Identifier	ut32		6352618	0					
ANR	6352763	ExpressionStatement	"READ4 ( * read_bytes , len , lf_mfunction -> this_adjust , leaf_data , st32 )"	2167:1:57931:57998	6352618	8	True				
ANR	6352764	CallExpression	"READ4 ( * read_bytes , len , lf_mfunction -> this_adjust , leaf_data , st32 )"		6352618	0					
ANR	6352765	Callee	READ4		6352618	0					
ANR	6352766	Identifier	READ4		6352618	0					
ANR	6352767	ArgumentList	* read_bytes		6352618	1					
ANR	6352768	Argument	* read_bytes		6352618	0					
ANR	6352769	UnaryOperationExpression	* read_bytes		6352618	0					
ANR	6352770	UnaryOperator	*		6352618	0					
ANR	6352771	Identifier	read_bytes		6352618	1					
ANR	6352772	Argument	len		6352618	1					
ANR	6352773	Identifier	len		6352618	0					
ANR	6352774	Argument	lf_mfunction -> this_adjust		6352618	2					
ANR	6352775	PtrMemberAccess	lf_mfunction -> this_adjust		6352618	0					
ANR	6352776	Identifier	lf_mfunction		6352618	0					
ANR	6352777	Identifier	this_adjust		6352618	1					
ANR	6352778	Argument	leaf_data		6352618	3					
ANR	6352779	Identifier	leaf_data		6352618	0					
ANR	6352780	Argument	st32		6352618	4					
ANR	6352781	Identifier	st32		6352618	0					
ANR	6352782	ExpressionStatement	"PEEK_READ1 ( * read_bytes , len , lf_mfunction -> pad , leaf_data , ut8 )"	2169:1:58002:58065	6352618	9	True				
ANR	6352783	CallExpression	"PEEK_READ1 ( * read_bytes , len , lf_mfunction -> pad , leaf_data , ut8 )"		6352618	0					
ANR	6352784	Callee	PEEK_READ1		6352618	0					
ANR	6352785	Identifier	PEEK_READ1		6352618	0					
ANR	6352786	ArgumentList	* read_bytes		6352618	1					
ANR	6352787	Argument	* read_bytes		6352618	0					
ANR	6352788	UnaryOperationExpression	* read_bytes		6352618	0					
ANR	6352789	UnaryOperator	*		6352618	0					
ANR	6352790	Identifier	read_bytes		6352618	1					
ANR	6352791	Argument	len		6352618	1					
ANR	6352792	Identifier	len		6352618	0					
ANR	6352793	Argument	lf_mfunction -> pad		6352618	2					
ANR	6352794	PtrMemberAccess	lf_mfunction -> pad		6352618	0					
ANR	6352795	Identifier	lf_mfunction		6352618	0					
ANR	6352796	Identifier	pad		6352618	1					
ANR	6352797	Argument	leaf_data		6352618	3					
ANR	6352798	Identifier	leaf_data		6352618	0					
ANR	6352799	Argument	ut8		6352618	4					
ANR	6352800	Identifier	ut8		6352618	0					
ANR	6352801	ExpressionStatement	"PAD_ALIGN ( lf_mfunction -> pad , * read_bytes , leaf_data , len )"	2170:1:58068:58125	6352618	10	True				
ANR	6352802	CallExpression	"PAD_ALIGN ( lf_mfunction -> pad , * read_bytes , leaf_data , len )"		6352618	0					
ANR	6352803	Callee	PAD_ALIGN		6352618	0					
ANR	6352804	Identifier	PAD_ALIGN		6352618	0					
ANR	6352805	ArgumentList	lf_mfunction -> pad		6352618	1					
ANR	6352806	Argument	lf_mfunction -> pad		6352618	0					
ANR	6352807	PtrMemberAccess	lf_mfunction -> pad		6352618	0					
ANR	6352808	Identifier	lf_mfunction		6352618	0					
ANR	6352809	Identifier	pad		6352618	1					
ANR	6352810	Argument	* read_bytes		6352618	1					
ANR	6352811	UnaryOperationExpression	* read_bytes		6352618	0					
ANR	6352812	UnaryOperator	*		6352618	0					
ANR	6352813	Identifier	read_bytes		6352618	1					
ANR	6352814	Argument	leaf_data		6352618	2					
ANR	6352815	Identifier	leaf_data		6352618	0					
ANR	6352816	Argument	len		6352618	3					
ANR	6352817	Identifier	len		6352618	0					
ANR	6352818	ReturnStatement	return * read_bytes - tmp_before_read_bytes ;	2172:1:58129:58171	6352618	11	True				
ANR	6352819	AdditiveExpression	* read_bytes - tmp_before_read_bytes		6352618	0		-			
ANR	6352820	UnaryOperationExpression	* read_bytes		6352618	0					
ANR	6352821	UnaryOperator	*		6352618	0					
ANR	6352822	Identifier	read_bytes		6352618	1					
ANR	6352823	Identifier	tmp_before_read_bytes		6352618	1					
ANR	6352824	ReturnType	static int		6352618	1					
ANR	6352825	Identifier	parse_lf_mfunction		6352618	2					
ANR	6352826	ParameterList	"SLF_MFUNCTION * lf_mfunction , unsigned char * leaf_data , unsigned int * read_bytes , unsigned int len"		6352618	3					
ANR	6352827	Parameter	SLF_MFUNCTION * lf_mfunction	2156:30:57303:57329	6352618	0	True				
ANR	6352828	ParameterType	SLF_MFUNCTION *		6352618	0					
ANR	6352829	Identifier	lf_mfunction		6352618	1					
ANR	6352830	Parameter	unsigned char * leaf_data	2156:59:57332:57355	6352618	1	True				
ANR	6352831	ParameterType	unsigned char *		6352618	0					
ANR	6352832	Identifier	leaf_data		6352618	1					
ANR	6352833	Parameter	unsigned int * read_bytes	2156:85:57358:57381	6352618	2	True				
ANR	6352834	ParameterType	unsigned int *		6352618	0					
ANR	6352835	Identifier	read_bytes		6352618	1					
ANR	6352836	Parameter	unsigned int len	2156:111:57384:57399	6352618	3	True				
ANR	6352837	ParameterType	unsigned int		6352618	0					
ANR	6352838	Identifier	len		6352618	1					
ANR	6352839	CFGEntryNode	ENTRY		6352618		True				
ANR	6352840	CFGExitNode	EXIT		6352618		True				
ANR	6352841	Symbol	lf_mfunction -> parm_count		6352618						
ANR	6352842	Symbol	leaf_data		6352618						
ANR	6352843	Symbol	lf_mfunction -> this_adjust		6352618						
ANR	6352844	Symbol	lf_mfunction		6352618						
ANR	6352845	Symbol	lf_mfunction -> reserved		6352618						
ANR	6352846	Symbol	ut32		6352618						
ANR	6352847	Symbol	lf_mfunction -> return_type		6352618						
ANR	6352848	Symbol	lf_mfunction -> class_type		6352618						
ANR	6352849	Symbol	lf_mfunction -> pad		6352618						
ANR	6352850	Symbol	read_bytes		6352618						
ANR	6352851	Symbol	lf_mfunction -> call_conv		6352618						
ANR	6352852	Symbol	lf_mfunction -> this_type		6352618						
ANR	6352853	Symbol	* read_bytes		6352618						
ANR	6352854	Symbol	len		6352618						
ANR	6352855	Symbol	tmp_before_read_bytes		6352618						
ANR	6352856	Symbol	st32		6352618						
ANR	6352857	Symbol	ut8		6352618						
ANR	6352858	Symbol	lf_mfunction -> arglist		6352618						
ANR	6352859	Symbol	* lf_mfunction		6352618						
ANR	6352860	Function	parse_lf_procedure	2175:0:58176:58871							
ANR	6352861	FunctionDef	"parse_lf_procedure (SLF_PROCEDURE * lf_procedure , unsigned char * leaf_data , unsigned int * read_bytes , unsigned int len)"		6352860	0					
ANR	6352862	CompoundStatement		2175:129:58305:58871	6352860	0					
ANR	6352863	IdentifierDeclStatement	unsigned int tmp_before_read_bytes = * read_bytes ;	2176:1:58308:58356	6352860	0	True				
ANR	6352864	IdentifierDecl	tmp_before_read_bytes = * read_bytes		6352860	0					
ANR	6352865	IdentifierDeclType	unsigned int		6352860	0					
ANR	6352866	Identifier	tmp_before_read_bytes		6352860	1					
ANR	6352867	AssignmentExpression	tmp_before_read_bytes = * read_bytes		6352860	2		=			
ANR	6352868	Identifier	tmp_before_read_bytes		6352860	0					
ANR	6352869	UnaryOperationExpression	* read_bytes		6352860	1					
ANR	6352870	UnaryOperator	*		6352860	0					
ANR	6352871	Identifier	read_bytes		6352860	1					
ANR	6352872	ExpressionStatement	"READ4 ( * read_bytes , len , lf_procedure -> return_type , leaf_data , ut32 )"	2178:1:58360:58427	6352860	1	True				
ANR	6352873	CallExpression	"READ4 ( * read_bytes , len , lf_procedure -> return_type , leaf_data , ut32 )"		6352860	0					
ANR	6352874	Callee	READ4		6352860	0					
ANR	6352875	Identifier	READ4		6352860	0					
ANR	6352876	ArgumentList	* read_bytes		6352860	1					
ANR	6352877	Argument	* read_bytes		6352860	0					
ANR	6352878	UnaryOperationExpression	* read_bytes		6352860	0					
ANR	6352879	UnaryOperator	*		6352860	0					
ANR	6352880	Identifier	read_bytes		6352860	1					
ANR	6352881	Argument	len		6352860	1					
ANR	6352882	Identifier	len		6352860	0					
ANR	6352883	Argument	lf_procedure -> return_type		6352860	2					
ANR	6352884	PtrMemberAccess	lf_procedure -> return_type		6352860	0					
ANR	6352885	Identifier	lf_procedure		6352860	0					
ANR	6352886	Identifier	return_type		6352860	1					
ANR	6352887	Argument	leaf_data		6352860	3					
ANR	6352888	Identifier	leaf_data		6352860	0					
ANR	6352889	Argument	ut32		6352860	4					
ANR	6352890	Identifier	ut32		6352860	0					
ANR	6352891	ExpressionStatement	"READ1 ( * read_bytes , len , lf_procedure -> call_conv , leaf_data , ut8 )"	2179:1:58430:58494	6352860	2	True				
ANR	6352892	CallExpression	"READ1 ( * read_bytes , len , lf_procedure -> call_conv , leaf_data , ut8 )"		6352860	0					
ANR	6352893	Callee	READ1		6352860	0					
ANR	6352894	Identifier	READ1		6352860	0					
ANR	6352895	ArgumentList	* read_bytes		6352860	1					
ANR	6352896	Argument	* read_bytes		6352860	0					
ANR	6352897	UnaryOperationExpression	* read_bytes		6352860	0					
ANR	6352898	UnaryOperator	*		6352860	0					
ANR	6352899	Identifier	read_bytes		6352860	1					
ANR	6352900	Argument	len		6352860	1					
ANR	6352901	Identifier	len		6352860	0					
ANR	6352902	Argument	lf_procedure -> call_conv		6352860	2					
ANR	6352903	PtrMemberAccess	lf_procedure -> call_conv		6352860	0					
ANR	6352904	Identifier	lf_procedure		6352860	0					
ANR	6352905	Identifier	call_conv		6352860	1					
ANR	6352906	Argument	leaf_data		6352860	3					
ANR	6352907	Identifier	leaf_data		6352860	0					
ANR	6352908	Argument	ut8		6352860	4					
ANR	6352909	Identifier	ut8		6352860	0					
ANR	6352910	ExpressionStatement	"READ1 ( * read_bytes , len , lf_procedure -> reserved , leaf_data , ut8 )"	2180:1:58497:58560	6352860	3	True				
ANR	6352911	CallExpression	"READ1 ( * read_bytes , len , lf_procedure -> reserved , leaf_data , ut8 )"		6352860	0					
ANR	6352912	Callee	READ1		6352860	0					
ANR	6352913	Identifier	READ1		6352860	0					
ANR	6352914	ArgumentList	* read_bytes		6352860	1					
ANR	6352915	Argument	* read_bytes		6352860	0					
ANR	6352916	UnaryOperationExpression	* read_bytes		6352860	0					
ANR	6352917	UnaryOperator	*		6352860	0					
ANR	6352918	Identifier	read_bytes		6352860	1					
ANR	6352919	Argument	len		6352860	1					
ANR	6352920	Identifier	len		6352860	0					
ANR	6352921	Argument	lf_procedure -> reserved		6352860	2					
ANR	6352922	PtrMemberAccess	lf_procedure -> reserved		6352860	0					
ANR	6352923	Identifier	lf_procedure		6352860	0					
ANR	6352924	Identifier	reserved		6352860	1					
ANR	6352925	Argument	leaf_data		6352860	3					
ANR	6352926	Identifier	leaf_data		6352860	0					
ANR	6352927	Argument	ut8		6352860	4					
ANR	6352928	Identifier	ut8		6352860	0					
ANR	6352929	ExpressionStatement	"READ2 ( * read_bytes , len , lf_procedure -> parm_count , leaf_data , ut16 )"	2181:1:58563:58629	6352860	4	True				
ANR	6352930	CallExpression	"READ2 ( * read_bytes , len , lf_procedure -> parm_count , leaf_data , ut16 )"		6352860	0					
ANR	6352931	Callee	READ2		6352860	0					
ANR	6352932	Identifier	READ2		6352860	0					
ANR	6352933	ArgumentList	* read_bytes		6352860	1					
ANR	6352934	Argument	* read_bytes		6352860	0					
ANR	6352935	UnaryOperationExpression	* read_bytes		6352860	0					
ANR	6352936	UnaryOperator	*		6352860	0					
ANR	6352937	Identifier	read_bytes		6352860	1					
ANR	6352938	Argument	len		6352860	1					
ANR	6352939	Identifier	len		6352860	0					
ANR	6352940	Argument	lf_procedure -> parm_count		6352860	2					
ANR	6352941	PtrMemberAccess	lf_procedure -> parm_count		6352860	0					
ANR	6352942	Identifier	lf_procedure		6352860	0					
ANR	6352943	Identifier	parm_count		6352860	1					
ANR	6352944	Argument	leaf_data		6352860	3					
ANR	6352945	Identifier	leaf_data		6352860	0					
ANR	6352946	Argument	ut16		6352860	4					
ANR	6352947	Identifier	ut16		6352860	0					
ANR	6352948	ExpressionStatement	"READ4 ( * read_bytes , len , lf_procedure -> arg_list , leaf_data , ut32 )"	2182:1:58632:58696	6352860	5	True				
ANR	6352949	CallExpression	"READ4 ( * read_bytes , len , lf_procedure -> arg_list , leaf_data , ut32 )"		6352860	0					
ANR	6352950	Callee	READ4		6352860	0					
ANR	6352951	Identifier	READ4		6352860	0					
ANR	6352952	ArgumentList	* read_bytes		6352860	1					
ANR	6352953	Argument	* read_bytes		6352860	0					
ANR	6352954	UnaryOperationExpression	* read_bytes		6352860	0					
ANR	6352955	UnaryOperator	*		6352860	0					
ANR	6352956	Identifier	read_bytes		6352860	1					
ANR	6352957	Argument	len		6352860	1					
ANR	6352958	Identifier	len		6352860	0					
ANR	6352959	Argument	lf_procedure -> arg_list		6352860	2					
ANR	6352960	PtrMemberAccess	lf_procedure -> arg_list		6352860	0					
ANR	6352961	Identifier	lf_procedure		6352860	0					
ANR	6352962	Identifier	arg_list		6352860	1					
ANR	6352963	Argument	leaf_data		6352860	3					
ANR	6352964	Identifier	leaf_data		6352860	0					
ANR	6352965	Argument	ut32		6352860	4					
ANR	6352966	Identifier	ut32		6352860	0					
ANR	6352967	ExpressionStatement	"PEEK_READ1 ( * read_bytes , len , lf_procedure -> pad , leaf_data , ut8 )"	2184:1:58700:58763	6352860	6	True				
ANR	6352968	CallExpression	"PEEK_READ1 ( * read_bytes , len , lf_procedure -> pad , leaf_data , ut8 )"		6352860	0					
ANR	6352969	Callee	PEEK_READ1		6352860	0					
ANR	6352970	Identifier	PEEK_READ1		6352860	0					
ANR	6352971	ArgumentList	* read_bytes		6352860	1					
ANR	6352972	Argument	* read_bytes		6352860	0					
ANR	6352973	UnaryOperationExpression	* read_bytes		6352860	0					
ANR	6352974	UnaryOperator	*		6352860	0					
ANR	6352975	Identifier	read_bytes		6352860	1					
ANR	6352976	Argument	len		6352860	1					
ANR	6352977	Identifier	len		6352860	0					
ANR	6352978	Argument	lf_procedure -> pad		6352860	2					
ANR	6352979	PtrMemberAccess	lf_procedure -> pad		6352860	0					
ANR	6352980	Identifier	lf_procedure		6352860	0					
ANR	6352981	Identifier	pad		6352860	1					
ANR	6352982	Argument	leaf_data		6352860	3					
ANR	6352983	Identifier	leaf_data		6352860	0					
ANR	6352984	Argument	ut8		6352860	4					
ANR	6352985	Identifier	ut8		6352860	0					
ANR	6352986	ExpressionStatement	"PAD_ALIGN ( lf_procedure -> pad , * read_bytes , leaf_data , len )"	2185:1:58766:58823	6352860	7	True				
ANR	6352987	CallExpression	"PAD_ALIGN ( lf_procedure -> pad , * read_bytes , leaf_data , len )"		6352860	0					
ANR	6352988	Callee	PAD_ALIGN		6352860	0					
ANR	6352989	Identifier	PAD_ALIGN		6352860	0					
ANR	6352990	ArgumentList	lf_procedure -> pad		6352860	1					
ANR	6352991	Argument	lf_procedure -> pad		6352860	0					
ANR	6352992	PtrMemberAccess	lf_procedure -> pad		6352860	0					
ANR	6352993	Identifier	lf_procedure		6352860	0					
ANR	6352994	Identifier	pad		6352860	1					
ANR	6352995	Argument	* read_bytes		6352860	1					
ANR	6352996	UnaryOperationExpression	* read_bytes		6352860	0					
ANR	6352997	UnaryOperator	*		6352860	0					
ANR	6352998	Identifier	read_bytes		6352860	1					
ANR	6352999	Argument	leaf_data		6352860	2					
ANR	6353000	Identifier	leaf_data		6352860	0					
ANR	6353001	Argument	len		6352860	3					
ANR	6353002	Identifier	len		6352860	0					
ANR	6353003	ReturnStatement	return * read_bytes - tmp_before_read_bytes ;	2187:1:58827:58869	6352860	8	True				
ANR	6353004	AdditiveExpression	* read_bytes - tmp_before_read_bytes		6352860	0		-			
ANR	6353005	UnaryOperationExpression	* read_bytes		6352860	0					
ANR	6353006	UnaryOperator	*		6352860	0					
ANR	6353007	Identifier	read_bytes		6352860	1					
ANR	6353008	Identifier	tmp_before_read_bytes		6352860	1					
ANR	6353009	ReturnType	static int		6352860	1					
ANR	6353010	Identifier	parse_lf_procedure		6352860	2					
ANR	6353011	ParameterList	"SLF_PROCEDURE * lf_procedure , unsigned char * leaf_data , unsigned int * read_bytes , unsigned int len"		6352860	3					
ANR	6353012	Parameter	SLF_PROCEDURE * lf_procedure	2175:30:58206:58232	6352860	0	True				
ANR	6353013	ParameterType	SLF_PROCEDURE *		6352860	0					
ANR	6353014	Identifier	lf_procedure		6352860	1					
ANR	6353015	Parameter	unsigned char * leaf_data	2175:59:58235:58258	6352860	1	True				
ANR	6353016	ParameterType	unsigned char *		6352860	0					
ANR	6353017	Identifier	leaf_data		6352860	1					
ANR	6353018	Parameter	unsigned int * read_bytes	2175:85:58261:58284	6352860	2	True				
ANR	6353019	ParameterType	unsigned int *		6352860	0					
ANR	6353020	Identifier	read_bytes		6352860	1					
ANR	6353021	Parameter	unsigned int len	2175:111:58287:58302	6352860	3	True				
ANR	6353022	ParameterType	unsigned int		6352860	0					
ANR	6353023	Identifier	len		6352860	1					
ANR	6353024	CFGEntryNode	ENTRY		6352860		True				
ANR	6353025	CFGExitNode	EXIT		6352860		True				
ANR	6353026	Symbol	leaf_data		6352860						
ANR	6353027	Symbol	lf_procedure		6352860						
ANR	6353028	Symbol	ut32		6352860						
ANR	6353029	Symbol	lf_procedure -> reserved		6352860						
ANR	6353030	Symbol	lf_procedure -> pad		6352860						
ANR	6353031	Symbol	* lf_procedure		6352860						
ANR	6353032	Symbol	lf_procedure -> return_type		6352860						
ANR	6353033	Symbol	read_bytes		6352860						
ANR	6353034	Symbol	* read_bytes		6352860						
ANR	6353035	Symbol	lf_procedure -> call_conv		6352860						
ANR	6353036	Symbol	ut16		6352860						
ANR	6353037	Symbol	lf_procedure -> arg_list		6352860						
ANR	6353038	Symbol	len		6352860						
ANR	6353039	Symbol	tmp_before_read_bytes		6352860						
ANR	6353040	Symbol	ut8		6352860						
ANR	6353041	Symbol	lf_procedure -> parm_count		6352860						
ANR	6353042	Function	parse_lf_union	2190:0:58874:59778							
ANR	6353043	FunctionDef	"parse_lf_union (SLF_UNION * lf_union , unsigned char * leaf_data , unsigned int * read_bytes , unsigned int len)"		6353042	0					
ANR	6353044	CompoundStatement		2190:117:58991:59778	6353042	0					
ANR	6353045	IdentifierDeclStatement	unsigned int tmp_before_read_bytes = * read_bytes ;	2191:1:58994:59042	6353042	0	True				
ANR	6353046	IdentifierDecl	tmp_before_read_bytes = * read_bytes		6353042	0					
ANR	6353047	IdentifierDeclType	unsigned int		6353042	0					
ANR	6353048	Identifier	tmp_before_read_bytes		6353042	1					
ANR	6353049	AssignmentExpression	tmp_before_read_bytes = * read_bytes		6353042	2		=			
ANR	6353050	Identifier	tmp_before_read_bytes		6353042	0					
ANR	6353051	UnaryOperationExpression	* read_bytes		6353042	1					
ANR	6353052	UnaryOperator	*		6353042	0					
ANR	6353053	Identifier	read_bytes		6353042	1					
ANR	6353054	IdentifierDeclStatement	unsigned int before_read_bytes = 0 ;	2192:1:59045:59079	6353042	1	True				
ANR	6353055	IdentifierDecl	before_read_bytes = 0		6353042	0					
ANR	6353056	IdentifierDeclType	unsigned int		6353042	0					
ANR	6353057	Identifier	before_read_bytes		6353042	1					
ANR	6353058	AssignmentExpression	before_read_bytes = 0		6353042	2		=			
ANR	6353059	Identifier	before_read_bytes		6353042	0					
ANR	6353060	PrimaryExpression	0		6353042	1					
ANR	6353061	ExpressionStatement	lf_union -> size . name_or_val = 0	2194:1:59083:59113	6353042	2	True				
ANR	6353062	AssignmentExpression	lf_union -> size . name_or_val = 0		6353042	0		=			
ANR	6353063	MemberAccess	lf_union -> size . name_or_val		6353042	0					
ANR	6353064	PtrMemberAccess	lf_union -> size		6353042	0					
ANR	6353065	Identifier	lf_union		6353042	0					
ANR	6353066	Identifier	size		6353042	1					
ANR	6353067	Identifier	name_or_val		6353042	1					
ANR	6353068	PrimaryExpression	0		6353042	1					
ANR	6353069	ExpressionStatement	"READ2 ( * read_bytes , len , lf_union -> count , leaf_data , ut16 )"	2196:1:59117:59174	6353042	3	True				
ANR	6353070	CallExpression	"READ2 ( * read_bytes , len , lf_union -> count , leaf_data , ut16 )"		6353042	0					
ANR	6353071	Callee	READ2		6353042	0					
ANR	6353072	Identifier	READ2		6353042	0					
ANR	6353073	ArgumentList	* read_bytes		6353042	1					
ANR	6353074	Argument	* read_bytes		6353042	0					
ANR	6353075	UnaryOperationExpression	* read_bytes		6353042	0					
ANR	6353076	UnaryOperator	*		6353042	0					
ANR	6353077	Identifier	read_bytes		6353042	1					
ANR	6353078	Argument	len		6353042	1					
ANR	6353079	Identifier	len		6353042	0					
ANR	6353080	Argument	lf_union -> count		6353042	2					
ANR	6353081	PtrMemberAccess	lf_union -> count		6353042	0					
ANR	6353082	Identifier	lf_union		6353042	0					
ANR	6353083	Identifier	count		6353042	1					
ANR	6353084	Argument	leaf_data		6353042	3					
ANR	6353085	Identifier	leaf_data		6353042	0					
ANR	6353086	Argument	ut16		6353042	4					
ANR	6353087	Identifier	ut16		6353042	0					
ANR	6353088	ExpressionStatement	"READ2 ( * read_bytes , len , lf_union -> prop . cv_property , leaf_data , ut16 )"	2197:1:59177:59245	6353042	4	True				
ANR	6353089	CallExpression	"READ2 ( * read_bytes , len , lf_union -> prop . cv_property , leaf_data , ut16 )"		6353042	0					
ANR	6353090	Callee	READ2		6353042	0					
ANR	6353091	Identifier	READ2		6353042	0					
ANR	6353092	ArgumentList	* read_bytes		6353042	1					
ANR	6353093	Argument	* read_bytes		6353042	0					
ANR	6353094	UnaryOperationExpression	* read_bytes		6353042	0					
ANR	6353095	UnaryOperator	*		6353042	0					
ANR	6353096	Identifier	read_bytes		6353042	1					
ANR	6353097	Argument	len		6353042	1					
ANR	6353098	Identifier	len		6353042	0					
ANR	6353099	Argument	lf_union -> prop . cv_property		6353042	2					
ANR	6353100	MemberAccess	lf_union -> prop . cv_property		6353042	0					
ANR	6353101	PtrMemberAccess	lf_union -> prop		6353042	0					
ANR	6353102	Identifier	lf_union		6353042	0					
ANR	6353103	Identifier	prop		6353042	1					
ANR	6353104	Identifier	cv_property		6353042	1					
ANR	6353105	Argument	leaf_data		6353042	3					
ANR	6353106	Identifier	leaf_data		6353042	0					
ANR	6353107	Argument	ut16		6353042	4					
ANR	6353108	Identifier	ut16		6353042	0					
ANR	6353109	ExpressionStatement	"READ4 ( * read_bytes , len , lf_union -> field_list , leaf_data , ut32 )"	2198:1:59248:59310	6353042	5	True				
ANR	6353110	CallExpression	"READ4 ( * read_bytes , len , lf_union -> field_list , leaf_data , ut32 )"		6353042	0					
ANR	6353111	Callee	READ4		6353042	0					
ANR	6353112	Identifier	READ4		6353042	0					
ANR	6353113	ArgumentList	* read_bytes		6353042	1					
ANR	6353114	Argument	* read_bytes		6353042	0					
ANR	6353115	UnaryOperationExpression	* read_bytes		6353042	0					
ANR	6353116	UnaryOperator	*		6353042	0					
ANR	6353117	Identifier	read_bytes		6353042	1					
ANR	6353118	Argument	len		6353042	1					
ANR	6353119	Identifier	len		6353042	0					
ANR	6353120	Argument	lf_union -> field_list		6353042	2					
ANR	6353121	PtrMemberAccess	lf_union -> field_list		6353042	0					
ANR	6353122	Identifier	lf_union		6353042	0					
ANR	6353123	Identifier	field_list		6353042	1					
ANR	6353124	Argument	leaf_data		6353042	3					
ANR	6353125	Identifier	leaf_data		6353042	0					
ANR	6353126	Argument	ut32		6353042	4					
ANR	6353127	Identifier	ut32		6353042	0					
ANR	6353128	ExpressionStatement	before_read_bytes = * read_bytes	2200:1:59314:59345	6353042	6	True				
ANR	6353129	AssignmentExpression	before_read_bytes = * read_bytes		6353042	0		=			
ANR	6353130	Identifier	before_read_bytes		6353042	0					
ANR	6353131	UnaryOperationExpression	* read_bytes		6353042	1					
ANR	6353132	UnaryOperator	*		6353042	0					
ANR	6353133	Identifier	read_bytes		6353042	1					
ANR	6353134	ExpressionStatement	"parse_sval ( & lf_union -> size , leaf_data , read_bytes , len )"	2201:1:59348:59403	6353042	7	True				
ANR	6353135	CallExpression	"parse_sval ( & lf_union -> size , leaf_data , read_bytes , len )"		6353042	0					
ANR	6353136	Callee	parse_sval		6353042	0					
ANR	6353137	Identifier	parse_sval		6353042	0					
ANR	6353138	ArgumentList	& lf_union -> size		6353042	1					
ANR	6353139	Argument	& lf_union -> size		6353042	0					
ANR	6353140	UnaryOperationExpression	& lf_union -> size		6353042	0					
ANR	6353141	UnaryOperator	&		6353042	0					
ANR	6353142	PtrMemberAccess	lf_union -> size		6353042	1					
ANR	6353143	Identifier	lf_union		6353042	0					
ANR	6353144	Identifier	size		6353042	1					
ANR	6353145	Argument	leaf_data		6353042	1					
ANR	6353146	Identifier	leaf_data		6353042	0					
ANR	6353147	Argument	read_bytes		6353042	2					
ANR	6353148	Identifier	read_bytes		6353042	0					
ANR	6353149	Argument	len		6353042	3					
ANR	6353150	Identifier	len		6353042	0					
ANR	6353151	ExpressionStatement	before_read_bytes = * read_bytes - before_read_bytes	2202:1:59406:59457	6353042	8	True				
ANR	6353152	AssignmentExpression	before_read_bytes = * read_bytes - before_read_bytes		6353042	0		=			
ANR	6353153	Identifier	before_read_bytes		6353042	0					
ANR	6353154	AdditiveExpression	* read_bytes - before_read_bytes		6353042	1		-			
ANR	6353155	UnaryOperationExpression	* read_bytes		6353042	0					
ANR	6353156	UnaryOperator	*		6353042	0					
ANR	6353157	Identifier	read_bytes		6353042	1					
ANR	6353158	Identifier	before_read_bytes		6353042	1					
ANR	6353159	ExpressionStatement	leaf_data = ( unsigned char * ) leaf_data + before_read_bytes	2203:1:59460:59518	6353042	9	True				
ANR	6353160	AssignmentExpression	leaf_data = ( unsigned char * ) leaf_data + before_read_bytes		6353042	0		=			
ANR	6353161	Identifier	leaf_data		6353042	0					
ANR	6353162	AdditiveExpression	( unsigned char * ) leaf_data + before_read_bytes		6353042	1		+			
ANR	6353163	CastExpression	( unsigned char * ) leaf_data		6353042	0					
ANR	6353164	CastTarget	unsigned char *		6353042	0					
ANR	6353165	Identifier	leaf_data		6353042	1					
ANR	6353166	Identifier	before_read_bytes		6353042	1					
ANR	6353167	ExpressionStatement	"PEEK_READ1 ( * read_bytes , len , lf_union -> pad , leaf_data , ut8 )"	2205:1:59522:59581	6353042	10	True				
ANR	6353168	CallExpression	"PEEK_READ1 ( * read_bytes , len , lf_union -> pad , leaf_data , ut8 )"		6353042	0					
ANR	6353169	Callee	PEEK_READ1		6353042	0					
ANR	6353170	Identifier	PEEK_READ1		6353042	0					
ANR	6353171	ArgumentList	* read_bytes		6353042	1					
ANR	6353172	Argument	* read_bytes		6353042	0					
ANR	6353173	UnaryOperationExpression	* read_bytes		6353042	0					
ANR	6353174	UnaryOperator	*		6353042	0					
ANR	6353175	Identifier	read_bytes		6353042	1					
ANR	6353176	Argument	len		6353042	1					
ANR	6353177	Identifier	len		6353042	0					
ANR	6353178	Argument	lf_union -> pad		6353042	2					
ANR	6353179	PtrMemberAccess	lf_union -> pad		6353042	0					
ANR	6353180	Identifier	lf_union		6353042	0					
ANR	6353181	Identifier	pad		6353042	1					
ANR	6353182	Argument	leaf_data		6353042	3					
ANR	6353183	Identifier	leaf_data		6353042	0					
ANR	6353184	Argument	ut8		6353042	4					
ANR	6353185	Identifier	ut8		6353042	0					
ANR	6353186	ExpressionStatement	"PAD_ALIGN ( lf_union -> pad , * read_bytes , leaf_data , len )"	2206:1:59584:59637	6353042	11	True				
ANR	6353187	CallExpression	"PAD_ALIGN ( lf_union -> pad , * read_bytes , leaf_data , len )"		6353042	0					
ANR	6353188	Callee	PAD_ALIGN		6353042	0					
ANR	6353189	Identifier	PAD_ALIGN		6353042	0					
ANR	6353190	ArgumentList	lf_union -> pad		6353042	1					
ANR	6353191	Argument	lf_union -> pad		6353042	0					
ANR	6353192	PtrMemberAccess	lf_union -> pad		6353042	0					
ANR	6353193	Identifier	lf_union		6353042	0					
ANR	6353194	Identifier	pad		6353042	1					
ANR	6353195	Argument	* read_bytes		6353042	1					
ANR	6353196	UnaryOperationExpression	* read_bytes		6353042	0					
ANR	6353197	UnaryOperator	*		6353042	0					
ANR	6353198	Identifier	read_bytes		6353042	1					
ANR	6353199	Argument	leaf_data		6353042	2					
ANR	6353200	Identifier	leaf_data		6353042	0					
ANR	6353201	Argument	len		6353042	3					
ANR	6353202	Identifier	len		6353042	0					
ANR	6353203	ReturnStatement	return * read_bytes - tmp_before_read_bytes ;	2211:1:59734:59776	6353042	12	True				
ANR	6353204	AdditiveExpression	* read_bytes - tmp_before_read_bytes		6353042	0		-			
ANR	6353205	UnaryOperationExpression	* read_bytes		6353042	0					
ANR	6353206	UnaryOperator	*		6353042	0					
ANR	6353207	Identifier	read_bytes		6353042	1					
ANR	6353208	Identifier	tmp_before_read_bytes		6353042	1					
ANR	6353209	ReturnType	static int		6353042	1					
ANR	6353210	Identifier	parse_lf_union		6353042	2					
ANR	6353211	ParameterList	"SLF_UNION * lf_union , unsigned char * leaf_data , unsigned int * read_bytes , unsigned int len"		6353042	3					
ANR	6353212	Parameter	SLF_UNION * lf_union	2190:26:58900:58918	6353042	0	True				
ANR	6353213	ParameterType	SLF_UNION *		6353042	0					
ANR	6353214	Identifier	lf_union		6353042	1					
ANR	6353215	Parameter	unsigned char * leaf_data	2190:47:58921:58944	6353042	1	True				
ANR	6353216	ParameterType	unsigned char *		6353042	0					
ANR	6353217	Identifier	leaf_data		6353042	1					
ANR	6353218	Parameter	unsigned int * read_bytes	2190:73:58947:58970	6353042	2	True				
ANR	6353219	ParameterType	unsigned int *		6353042	0					
ANR	6353220	Identifier	read_bytes		6353042	1					
ANR	6353221	Parameter	unsigned int len	2190:99:58973:58988	6353042	3	True				
ANR	6353222	ParameterType	unsigned int		6353042	0					
ANR	6353223	Identifier	len		6353042	1					
ANR	6353224	CFGEntryNode	ENTRY		6353042		True				
ANR	6353225	CFGExitNode	EXIT		6353042		True				
ANR	6353226	Symbol	leaf_data		6353042						
ANR	6353227	Symbol	before_read_bytes		6353042						
ANR	6353228	Symbol	lf_union -> pad		6353042						
ANR	6353229	Symbol	ut32		6353042						
ANR	6353230	Symbol	lf_union -> count		6353042						
ANR	6353231	Symbol	read_bytes		6353042						
ANR	6353232	Symbol	lf_union		6353042						
ANR	6353233	Symbol	lf_union -> size		6353042						
ANR	6353234	Symbol	* read_bytes		6353042						
ANR	6353235	Symbol	ut16		6353042						
ANR	6353236	Symbol	len		6353042						
ANR	6353237	Symbol	lf_union -> prop . cv_property		6353042						
ANR	6353238	Symbol	* lf_union		6353042						
ANR	6353239	Symbol	lf_union -> size . name_or_val		6353042						
ANR	6353240	Symbol	lf_union -> prop		6353042						
ANR	6353241	Symbol	tmp_before_read_bytes		6353042						
ANR	6353242	Symbol	ut8		6353042						
ANR	6353243	Symbol	& lf_union -> size		6353042						
ANR	6353244	Symbol	lf_union -> field_list		6353042						
ANR	6353245	Function	parse_lf_bitfield	2214:0:59781:60327							
ANR	6353246	FunctionDef	"parse_lf_bitfield (SLF_BITFIELD * lf_bitfield , unsigned char * leaf_data , unsigned int * read_bytes , unsigned int len)"		6353245	0					
ANR	6353247	CompoundStatement		2214:126:59907:60327	6353245	0					
ANR	6353248	IdentifierDeclStatement	unsigned int tmp_before_read_bytes = * read_bytes ;	2215:1:59910:59958	6353245	0	True				
ANR	6353249	IdentifierDecl	tmp_before_read_bytes = * read_bytes		6353245	0					
ANR	6353250	IdentifierDeclType	unsigned int		6353245	0					
ANR	6353251	Identifier	tmp_before_read_bytes		6353245	1					
ANR	6353252	AssignmentExpression	tmp_before_read_bytes = * read_bytes		6353245	2		=			
ANR	6353253	Identifier	tmp_before_read_bytes		6353245	0					
ANR	6353254	UnaryOperationExpression	* read_bytes		6353245	1					
ANR	6353255	UnaryOperator	*		6353245	0					
ANR	6353256	Identifier	read_bytes		6353245	1					
ANR	6353257	ExpressionStatement	"READ4 ( * read_bytes , len , lf_bitfield -> base_type , leaf_data , ut32 )"	2217:1:59962:60026	6353245	1	True				
ANR	6353258	CallExpression	"READ4 ( * read_bytes , len , lf_bitfield -> base_type , leaf_data , ut32 )"		6353245	0					
ANR	6353259	Callee	READ4		6353245	0					
ANR	6353260	Identifier	READ4		6353245	0					
ANR	6353261	ArgumentList	* read_bytes		6353245	1					
ANR	6353262	Argument	* read_bytes		6353245	0					
ANR	6353263	UnaryOperationExpression	* read_bytes		6353245	0					
ANR	6353264	UnaryOperator	*		6353245	0					
ANR	6353265	Identifier	read_bytes		6353245	1					
ANR	6353266	Argument	len		6353245	1					
ANR	6353267	Identifier	len		6353245	0					
ANR	6353268	Argument	lf_bitfield -> base_type		6353245	2					
ANR	6353269	PtrMemberAccess	lf_bitfield -> base_type		6353245	0					
ANR	6353270	Identifier	lf_bitfield		6353245	0					
ANR	6353271	Identifier	base_type		6353245	1					
ANR	6353272	Argument	leaf_data		6353245	3					
ANR	6353273	Identifier	leaf_data		6353245	0					
ANR	6353274	Argument	ut32		6353245	4					
ANR	6353275	Identifier	ut32		6353245	0					
ANR	6353276	ExpressionStatement	"READ1 ( * read_bytes , len , lf_bitfield -> length , leaf_data , ut8 )"	2218:1:60029:60089	6353245	2	True				
ANR	6353277	CallExpression	"READ1 ( * read_bytes , len , lf_bitfield -> length , leaf_data , ut8 )"		6353245	0					
ANR	6353278	Callee	READ1		6353245	0					
ANR	6353279	Identifier	READ1		6353245	0					
ANR	6353280	ArgumentList	* read_bytes		6353245	1					
ANR	6353281	Argument	* read_bytes		6353245	0					
ANR	6353282	UnaryOperationExpression	* read_bytes		6353245	0					
ANR	6353283	UnaryOperator	*		6353245	0					
ANR	6353284	Identifier	read_bytes		6353245	1					
ANR	6353285	Argument	len		6353245	1					
ANR	6353286	Identifier	len		6353245	0					
ANR	6353287	Argument	lf_bitfield -> length		6353245	2					
ANR	6353288	PtrMemberAccess	lf_bitfield -> length		6353245	0					
ANR	6353289	Identifier	lf_bitfield		6353245	0					
ANR	6353290	Identifier	length		6353245	1					
ANR	6353291	Argument	leaf_data		6353245	3					
ANR	6353292	Identifier	leaf_data		6353245	0					
ANR	6353293	Argument	ut8		6353245	4					
ANR	6353294	Identifier	ut8		6353245	0					
ANR	6353295	ExpressionStatement	"READ1 ( * read_bytes , len , lf_bitfield -> position , leaf_data , ut8 )"	2219:1:60092:60154	6353245	3	True				
ANR	6353296	CallExpression	"READ1 ( * read_bytes , len , lf_bitfield -> position , leaf_data , ut8 )"		6353245	0					
ANR	6353297	Callee	READ1		6353245	0					
ANR	6353298	Identifier	READ1		6353245	0					
ANR	6353299	ArgumentList	* read_bytes		6353245	1					
ANR	6353300	Argument	* read_bytes		6353245	0					
ANR	6353301	UnaryOperationExpression	* read_bytes		6353245	0					
ANR	6353302	UnaryOperator	*		6353245	0					
ANR	6353303	Identifier	read_bytes		6353245	1					
ANR	6353304	Argument	len		6353245	1					
ANR	6353305	Identifier	len		6353245	0					
ANR	6353306	Argument	lf_bitfield -> position		6353245	2					
ANR	6353307	PtrMemberAccess	lf_bitfield -> position		6353245	0					
ANR	6353308	Identifier	lf_bitfield		6353245	0					
ANR	6353309	Identifier	position		6353245	1					
ANR	6353310	Argument	leaf_data		6353245	3					
ANR	6353311	Identifier	leaf_data		6353245	0					
ANR	6353312	Argument	ut8		6353245	4					
ANR	6353313	Identifier	ut8		6353245	0					
ANR	6353314	ExpressionStatement	"PEEK_READ1 ( * read_bytes , len , lf_bitfield -> pad , leaf_data , ut8 )"	2221:1:60158:60220	6353245	4	True				
ANR	6353315	CallExpression	"PEEK_READ1 ( * read_bytes , len , lf_bitfield -> pad , leaf_data , ut8 )"		6353245	0					
ANR	6353316	Callee	PEEK_READ1		6353245	0					
ANR	6353317	Identifier	PEEK_READ1		6353245	0					
ANR	6353318	ArgumentList	* read_bytes		6353245	1					
ANR	6353319	Argument	* read_bytes		6353245	0					
ANR	6353320	UnaryOperationExpression	* read_bytes		6353245	0					
ANR	6353321	UnaryOperator	*		6353245	0					
ANR	6353322	Identifier	read_bytes		6353245	1					
ANR	6353323	Argument	len		6353245	1					
ANR	6353324	Identifier	len		6353245	0					
ANR	6353325	Argument	lf_bitfield -> pad		6353245	2					
ANR	6353326	PtrMemberAccess	lf_bitfield -> pad		6353245	0					
ANR	6353327	Identifier	lf_bitfield		6353245	0					
ANR	6353328	Identifier	pad		6353245	1					
ANR	6353329	Argument	leaf_data		6353245	3					
ANR	6353330	Identifier	leaf_data		6353245	0					
ANR	6353331	Argument	ut8		6353245	4					
ANR	6353332	Identifier	ut8		6353245	0					
ANR	6353333	ExpressionStatement	"PAD_ALIGN ( lf_bitfield -> pad , * read_bytes , leaf_data , len )"	2222:1:60223:60279	6353245	5	True				
ANR	6353334	CallExpression	"PAD_ALIGN ( lf_bitfield -> pad , * read_bytes , leaf_data , len )"		6353245	0					
ANR	6353335	Callee	PAD_ALIGN		6353245	0					
ANR	6353336	Identifier	PAD_ALIGN		6353245	0					
ANR	6353337	ArgumentList	lf_bitfield -> pad		6353245	1					
ANR	6353338	Argument	lf_bitfield -> pad		6353245	0					
ANR	6353339	PtrMemberAccess	lf_bitfield -> pad		6353245	0					
ANR	6353340	Identifier	lf_bitfield		6353245	0					
ANR	6353341	Identifier	pad		6353245	1					
ANR	6353342	Argument	* read_bytes		6353245	1					
ANR	6353343	UnaryOperationExpression	* read_bytes		6353245	0					
ANR	6353344	UnaryOperator	*		6353245	0					
ANR	6353345	Identifier	read_bytes		6353245	1					
ANR	6353346	Argument	leaf_data		6353245	2					
ANR	6353347	Identifier	leaf_data		6353245	0					
ANR	6353348	Argument	len		6353245	3					
ANR	6353349	Identifier	len		6353245	0					
ANR	6353350	ReturnStatement	return * read_bytes - tmp_before_read_bytes ;	2224:1:60283:60325	6353245	6	True				
ANR	6353351	AdditiveExpression	* read_bytes - tmp_before_read_bytes		6353245	0		-			
ANR	6353352	UnaryOperationExpression	* read_bytes		6353245	0					
ANR	6353353	UnaryOperator	*		6353245	0					
ANR	6353354	Identifier	read_bytes		6353245	1					
ANR	6353355	Identifier	tmp_before_read_bytes		6353245	1					
ANR	6353356	ReturnType	static int		6353245	1					
ANR	6353357	Identifier	parse_lf_bitfield		6353245	2					
ANR	6353358	ParameterList	"SLF_BITFIELD * lf_bitfield , unsigned char * leaf_data , unsigned int * read_bytes , unsigned int len"		6353245	3					
ANR	6353359	Parameter	SLF_BITFIELD * lf_bitfield	2214:29:59810:59834	6353245	0	True				
ANR	6353360	ParameterType	SLF_BITFIELD *		6353245	0					
ANR	6353361	Identifier	lf_bitfield		6353245	1					
ANR	6353362	Parameter	unsigned char * leaf_data	2214:56:59837:59860	6353245	1	True				
ANR	6353363	ParameterType	unsigned char *		6353245	0					
ANR	6353364	Identifier	leaf_data		6353245	1					
ANR	6353365	Parameter	unsigned int * read_bytes	2214:82:59863:59886	6353245	2	True				
ANR	6353366	ParameterType	unsigned int *		6353245	0					
ANR	6353367	Identifier	read_bytes		6353245	1					
ANR	6353368	Parameter	unsigned int len	2214:108:59889:59904	6353245	3	True				
ANR	6353369	ParameterType	unsigned int		6353245	0					
ANR	6353370	Identifier	len		6353245	1					
ANR	6353371	CFGEntryNode	ENTRY		6353245		True				
ANR	6353372	CFGExitNode	EXIT		6353245		True				
ANR	6353373	Symbol	leaf_data		6353245						
ANR	6353374	Symbol	lf_bitfield -> base_type		6353245						
ANR	6353375	Symbol	* lf_bitfield		6353245						
ANR	6353376	Symbol	lf_bitfield -> position		6353245						
ANR	6353377	Symbol	ut32		6353245						
ANR	6353378	Symbol	lf_bitfield -> length		6353245						
ANR	6353379	Symbol	read_bytes		6353245						
ANR	6353380	Symbol	lf_bitfield -> pad		6353245						
ANR	6353381	Symbol	* read_bytes		6353245						
ANR	6353382	Symbol	len		6353245						
ANR	6353383	Symbol	tmp_before_read_bytes		6353245						
ANR	6353384	Symbol	lf_bitfield		6353245						
ANR	6353385	Symbol	ut8		6353245						
ANR	6353386	Function	parse_lf_vtshape	2227:0:60330:61076							
ANR	6353387	FunctionDef	"parse_lf_vtshape (SLF_VTSHAPE * lf_vtshape , unsigned char * leaf_data , unsigned int * read_bytes , unsigned int len)"		6353386	0					
ANR	6353388	CompoundStatement		2227:123:60453:61076	6353386	0					
ANR	6353389	IdentifierDeclStatement	unsigned int tmp_before_read_bytes = * read_bytes ;	2228:1:60456:60504	6353386	0	True				
ANR	6353390	IdentifierDecl	tmp_before_read_bytes = * read_bytes		6353386	0					
ANR	6353391	IdentifierDeclType	unsigned int		6353386	0					
ANR	6353392	Identifier	tmp_before_read_bytes		6353386	1					
ANR	6353393	AssignmentExpression	tmp_before_read_bytes = * read_bytes		6353386	2		=			
ANR	6353394	Identifier	tmp_before_read_bytes		6353386	0					
ANR	6353395	UnaryOperationExpression	* read_bytes		6353386	1					
ANR	6353396	UnaryOperator	*		6353386	0					
ANR	6353397	Identifier	read_bytes		6353386	1					
ANR	6353398	IdentifierDeclStatement	unsigned int size ;	2229:1:60507:60524	6353386	1	True				
ANR	6353399	IdentifierDecl	size		6353386	0					
ANR	6353400	IdentifierDeclType	unsigned int		6353386	0					
ANR	6353401	Identifier	size		6353386	1					
ANR	6353402	ExpressionStatement	lf_vtshape -> vt_descriptors = 0	2231:1:60541:60571	6353386	2	True				
ANR	6353403	AssignmentExpression	lf_vtshape -> vt_descriptors = 0		6353386	0		=			
ANR	6353404	PtrMemberAccess	lf_vtshape -> vt_descriptors		6353386	0					
ANR	6353405	Identifier	lf_vtshape		6353386	0					
ANR	6353406	Identifier	vt_descriptors		6353386	1					
ANR	6353407	PrimaryExpression	0		6353386	1					
ANR	6353408	ExpressionStatement	"READ2 ( * read_bytes , len , lf_vtshape -> count , leaf_data , ut16 )"	2233:1:60575:60634	6353386	3	True				
ANR	6353409	CallExpression	"READ2 ( * read_bytes , len , lf_vtshape -> count , leaf_data , ut16 )"		6353386	0					
ANR	6353410	Callee	READ2		6353386	0					
ANR	6353411	Identifier	READ2		6353386	0					
ANR	6353412	ArgumentList	* read_bytes		6353386	1					
ANR	6353413	Argument	* read_bytes		6353386	0					
ANR	6353414	UnaryOperationExpression	* read_bytes		6353386	0					
ANR	6353415	UnaryOperator	*		6353386	0					
ANR	6353416	Identifier	read_bytes		6353386	1					
ANR	6353417	Argument	len		6353386	1					
ANR	6353418	Identifier	len		6353386	0					
ANR	6353419	Argument	lf_vtshape -> count		6353386	2					
ANR	6353420	PtrMemberAccess	lf_vtshape -> count		6353386	0					
ANR	6353421	Identifier	lf_vtshape		6353386	0					
ANR	6353422	Identifier	count		6353386	1					
ANR	6353423	Argument	leaf_data		6353386	3					
ANR	6353424	Identifier	leaf_data		6353386	0					
ANR	6353425	Argument	ut16		6353386	4					
ANR	6353426	Identifier	ut16		6353386	0					
ANR	6353427	ExpressionStatement	size = ( 4 * lf_vtshape -> count + ( lf_vtshape -> count % 2 ) * 4 ) / 8	2235:1:60638:60702	6353386	4	True				
ANR	6353428	AssignmentExpression	size = ( 4 * lf_vtshape -> count + ( lf_vtshape -> count % 2 ) * 4 ) / 8		6353386	0		=			
ANR	6353429	Identifier	size		6353386	0					
ANR	6353430	MultiplicativeExpression	( 4 * lf_vtshape -> count + ( lf_vtshape -> count % 2 ) * 4 ) / 8		6353386	1		/			
ANR	6353431	AdditiveExpression	4 * lf_vtshape -> count + ( lf_vtshape -> count % 2 ) * 4		6353386	0		+			
ANR	6353432	MultiplicativeExpression	4 * lf_vtshape -> count		6353386	0		*			
ANR	6353433	PrimaryExpression	4		6353386	0					
ANR	6353434	PtrMemberAccess	lf_vtshape -> count		6353386	1					
ANR	6353435	Identifier	lf_vtshape		6353386	0					
ANR	6353436	Identifier	count		6353386	1					
ANR	6353437	MultiplicativeExpression	( lf_vtshape -> count % 2 ) * 4		6353386	1		*			
ANR	6353438	MultiplicativeExpression	lf_vtshape -> count % 2		6353386	0		%			
ANR	6353439	PtrMemberAccess	lf_vtshape -> count		6353386	0					
ANR	6353440	Identifier	lf_vtshape		6353386	0					
ANR	6353441	Identifier	count		6353386	1					
ANR	6353442	PrimaryExpression	2		6353386	1					
ANR	6353443	PrimaryExpression	4		6353386	1					
ANR	6353444	PrimaryExpression	8		6353386	1					
ANR	6353445	ExpressionStatement	lf_vtshape -> vt_descriptors = ( char * ) malloc ( size )	2236:1:60705:60756	6353386	5	True				
ANR	6353446	AssignmentExpression	lf_vtshape -> vt_descriptors = ( char * ) malloc ( size )		6353386	0		=			
ANR	6353447	PtrMemberAccess	lf_vtshape -> vt_descriptors		6353386	0					
ANR	6353448	Identifier	lf_vtshape		6353386	0					
ANR	6353449	Identifier	vt_descriptors		6353386	1					
ANR	6353450	CastExpression	( char * ) malloc ( size )		6353386	1					
ANR	6353451	CastTarget	char *		6353386	0					
ANR	6353452	CallExpression	malloc ( size )		6353386	1					
ANR	6353453	Callee	malloc		6353386	0					
ANR	6353454	Identifier	malloc		6353386	0					
ANR	6353455	ArgumentList	size		6353386	1					
ANR	6353456	Argument	size		6353386	0					
ANR	6353457	Identifier	size		6353386	0					
ANR	6353458	IfStatement	if ( ! lf_vtshape -> vt_descriptors )		6353386	6					
ANR	6353459	Condition	! lf_vtshape -> vt_descriptors	2237:5:60763:60789	6353386	0	True				
ANR	6353460	UnaryOperationExpression	! lf_vtshape -> vt_descriptors		6353386	0					
ANR	6353461	UnaryOperator	!		6353386	0					
ANR	6353462	PtrMemberAccess	lf_vtshape -> vt_descriptors		6353386	1					
ANR	6353463	Identifier	lf_vtshape		6353386	0					
ANR	6353464	Identifier	vt_descriptors		6353386	1					
ANR	6353465	CompoundStatement		11:34:338:338	6353386	1					
ANR	6353466	ReturnStatement	return 0 ;	2238:2:60796:60804	6353386	0	True				
ANR	6353467	PrimaryExpression	0		6353386	0					
ANR	6353468	ExpressionStatement	"memcpy ( lf_vtshape -> vt_descriptors , leaf_data , size )"	2240:1:60810:60862	6353386	7	True				
ANR	6353469	CallExpression	"memcpy ( lf_vtshape -> vt_descriptors , leaf_data , size )"		6353386	0					
ANR	6353470	Callee	memcpy		6353386	0					
ANR	6353471	Identifier	memcpy		6353386	0					
ANR	6353472	ArgumentList	lf_vtshape -> vt_descriptors		6353386	1					
ANR	6353473	Argument	lf_vtshape -> vt_descriptors		6353386	0					
ANR	6353474	PtrMemberAccess	lf_vtshape -> vt_descriptors		6353386	0					
ANR	6353475	Identifier	lf_vtshape		6353386	0					
ANR	6353476	Identifier	vt_descriptors		6353386	1					
ANR	6353477	Argument	leaf_data		6353386	1					
ANR	6353478	Identifier	leaf_data		6353386	0					
ANR	6353479	Argument	size		6353386	2					
ANR	6353480	Identifier	size		6353386	0					
ANR	6353481	ExpressionStatement	leaf_data += size	2241:1:60865:60882	6353386	8	True				
ANR	6353482	AssignmentExpression	leaf_data += size		6353386	0		+=			
ANR	6353483	Identifier	leaf_data		6353386	0					
ANR	6353484	Identifier	size		6353386	1					
ANR	6353485	ExpressionStatement	* read_bytes += size	2242:1:60885:60904	6353386	9	True				
ANR	6353486	AssignmentExpression	* read_bytes += size		6353386	0		+=			
ANR	6353487	UnaryOperationExpression	* read_bytes		6353386	0					
ANR	6353488	UnaryOperator	*		6353386	0					
ANR	6353489	Identifier	read_bytes		6353386	1					
ANR	6353490	Identifier	size		6353386	1					
ANR	6353491	ExpressionStatement	"PEEK_READ1 ( * read_bytes , len , lf_vtshape -> pad , leaf_data , ut8 )"	2244:1:60908:60969	6353386	10	True				
ANR	6353492	CallExpression	"PEEK_READ1 ( * read_bytes , len , lf_vtshape -> pad , leaf_data , ut8 )"		6353386	0					
ANR	6353493	Callee	PEEK_READ1		6353386	0					
ANR	6353494	Identifier	PEEK_READ1		6353386	0					
ANR	6353495	ArgumentList	* read_bytes		6353386	1					
ANR	6353496	Argument	* read_bytes		6353386	0					
ANR	6353497	UnaryOperationExpression	* read_bytes		6353386	0					
ANR	6353498	UnaryOperator	*		6353386	0					
ANR	6353499	Identifier	read_bytes		6353386	1					
ANR	6353500	Argument	len		6353386	1					
ANR	6353501	Identifier	len		6353386	0					
ANR	6353502	Argument	lf_vtshape -> pad		6353386	2					
ANR	6353503	PtrMemberAccess	lf_vtshape -> pad		6353386	0					
ANR	6353504	Identifier	lf_vtshape		6353386	0					
ANR	6353505	Identifier	pad		6353386	1					
ANR	6353506	Argument	leaf_data		6353386	3					
ANR	6353507	Identifier	leaf_data		6353386	0					
ANR	6353508	Argument	ut8		6353386	4					
ANR	6353509	Identifier	ut8		6353386	0					
ANR	6353510	ExpressionStatement	"PAD_ALIGN ( lf_vtshape -> pad , * read_bytes , leaf_data , len )"	2245:1:60972:61028	6353386	11	True				
ANR	6353511	CallExpression	"PAD_ALIGN ( lf_vtshape -> pad , * read_bytes , leaf_data , len )"		6353386	0					
ANR	6353512	Callee	PAD_ALIGN		6353386	0					
ANR	6353513	Identifier	PAD_ALIGN		6353386	0					
ANR	6353514	ArgumentList	lf_vtshape -> pad		6353386	1					
ANR	6353515	Argument	lf_vtshape -> pad		6353386	0					
ANR	6353516	PtrMemberAccess	lf_vtshape -> pad		6353386	0					
ANR	6353517	Identifier	lf_vtshape		6353386	0					
ANR	6353518	Identifier	pad		6353386	1					
ANR	6353519	Argument	* read_bytes		6353386	1					
ANR	6353520	UnaryOperationExpression	* read_bytes		6353386	0					
ANR	6353521	UnaryOperator	*		6353386	0					
ANR	6353522	Identifier	read_bytes		6353386	1					
ANR	6353523	Argument	leaf_data		6353386	2					
ANR	6353524	Identifier	leaf_data		6353386	0					
ANR	6353525	Argument	len		6353386	3					
ANR	6353526	Identifier	len		6353386	0					
ANR	6353527	ReturnStatement	return * read_bytes - tmp_before_read_bytes ;	2247:1:61032:61074	6353386	12	True				
ANR	6353528	AdditiveExpression	* read_bytes - tmp_before_read_bytes		6353386	0		-			
ANR	6353529	UnaryOperationExpression	* read_bytes		6353386	0					
ANR	6353530	UnaryOperator	*		6353386	0					
ANR	6353531	Identifier	read_bytes		6353386	1					
ANR	6353532	Identifier	tmp_before_read_bytes		6353386	1					
ANR	6353533	ReturnType	static int		6353386	1					
ANR	6353534	Identifier	parse_lf_vtshape		6353386	2					
ANR	6353535	ParameterList	"SLF_VTSHAPE * lf_vtshape , unsigned char * leaf_data , unsigned int * read_bytes , unsigned int len"		6353386	3					
ANR	6353536	Parameter	SLF_VTSHAPE * lf_vtshape	2227:28:60358:60380	6353386	0	True				
ANR	6353537	ParameterType	SLF_VTSHAPE *		6353386	0					
ANR	6353538	Identifier	lf_vtshape		6353386	1					
ANR	6353539	Parameter	unsigned char * leaf_data	2227:53:60383:60406	6353386	1	True				
ANR	6353540	ParameterType	unsigned char *		6353386	0					
ANR	6353541	Identifier	leaf_data		6353386	1					
ANR	6353542	Parameter	unsigned int * read_bytes	2227:79:60409:60432	6353386	2	True				
ANR	6353543	ParameterType	unsigned int *		6353386	0					
ANR	6353544	Identifier	read_bytes		6353386	1					
ANR	6353545	Parameter	unsigned int len	2227:105:60435:60450	6353386	3	True				
ANR	6353546	ParameterType	unsigned int		6353386	0					
ANR	6353547	Identifier	len		6353386	1					
ANR	6353548	CFGEntryNode	ENTRY		6353386		True				
ANR	6353549	CFGExitNode	EXIT		6353386		True				
ANR	6353550	Symbol	malloc		6353386						
ANR	6353551	Symbol	leaf_data		6353386						
ANR	6353552	Symbol	lf_vtshape -> count		6353386						
ANR	6353553	Symbol	lf_vtshape -> pad		6353386						
ANR	6353554	Symbol	read_bytes		6353386						
ANR	6353555	Symbol	* read_bytes		6353386						
ANR	6353556	Symbol	ut16		6353386						
ANR	6353557	Symbol	len		6353386						
ANR	6353558	Symbol	size		6353386						
ANR	6353559	Symbol	* lf_vtshape		6353386						
ANR	6353560	Symbol	tmp_before_read_bytes		6353386						
ANR	6353561	Symbol	lf_vtshape -> vt_descriptors		6353386						
ANR	6353562	Symbol	lf_vtshape		6353386						
ANR	6353563	Symbol	ut8		6353386						
ANR	6353564	DeclStmt									
ANR	6353565	Decl							lf_type	lf_type *	lf
ANR	6353566	DeclStmt									
ANR	6353567	Decl							parse_	parse_	lf_func
ANR	6353568	Function	parse_tpi_stypes	2259:0:61446:63659							
ANR	6353569	FunctionDef	"parse_tpi_stypes (R_STREAM_FILE * stream , SType * type)"		6353568	0					
ANR	6353570	CompoundStatement		2259:64:61510:63659	6353568	0					
ANR	6353571	IdentifierDeclStatement	unsigned char * leaf_data ;	2260:1:61513:61537	6353568	0	True				
ANR	6353572	IdentifierDecl	* leaf_data		6353568	0					
ANR	6353573	IdentifierDeclType	unsigned char *		6353568	0					
ANR	6353574	Identifier	leaf_data		6353568	1					
ANR	6353575	IdentifierDeclStatement	unsigned int read_bytes = 0 ;	2261:1:61540:61567	6353568	1	True				
ANR	6353576	IdentifierDecl	read_bytes = 0		6353568	0					
ANR	6353577	IdentifierDeclType	unsigned int		6353568	0					
ANR	6353578	Identifier	read_bytes		6353568	1					
ANR	6353579	AssignmentExpression	read_bytes = 0		6353568	2		=			
ANR	6353580	Identifier	read_bytes		6353568	0					
ANR	6353581	PrimaryExpression	0		6353568	1					
ANR	6353582	ExpressionStatement	"stream_file_read ( stream , 2 , ( char * ) & type -> length )"	2263:1:61571:61621	6353568	2	True				
ANR	6353583	CallExpression	"stream_file_read ( stream , 2 , ( char * ) & type -> length )"		6353568	0					
ANR	6353584	Callee	stream_file_read		6353568	0					
ANR	6353585	Identifier	stream_file_read		6353568	0					
ANR	6353586	ArgumentList	stream		6353568	1					
ANR	6353587	Argument	stream		6353568	0					
ANR	6353588	Identifier	stream		6353568	0					
ANR	6353589	Argument	2		6353568	1					
ANR	6353590	PrimaryExpression	2		6353568	0					
ANR	6353591	Argument	( char * ) & type -> length		6353568	2					
ANR	6353592	CastExpression	( char * ) & type -> length		6353568	0					
ANR	6353593	CastTarget	char *		6353568	0					
ANR	6353594	UnaryOperationExpression	& type -> length		6353568	1					
ANR	6353595	UnaryOperator	&		6353568	0					
ANR	6353596	PtrMemberAccess	type -> length		6353568	1					
ANR	6353597	Identifier	type		6353568	0					
ANR	6353598	Identifier	length		6353568	1					
ANR	6353599	IfStatement	if ( type -> length < 1 )		6353568	3					
ANR	6353600	Condition	type -> length < 1	2264:5:61628:61643	6353568	0	True				
ANR	6353601	RelationalExpression	type -> length < 1		6353568	0		<			
ANR	6353602	PtrMemberAccess	type -> length		6353568	0					
ANR	6353603	Identifier	type		6353568	0					
ANR	6353604	Identifier	length		6353568	1					
ANR	6353605	PrimaryExpression	1		6353568	1					
ANR	6353606	CompoundStatement		6:23:135:135	6353568	1					
ANR	6353607	ReturnStatement	return 0 ;	2265:2:61650:61658	6353568	0	True				
ANR	6353608	PrimaryExpression	0		6353568	0					
ANR	6353609	ExpressionStatement	leaf_data = ( unsigned char * ) malloc ( type -> length )	2267:1:61664:61714	6353568	4	True				
ANR	6353610	AssignmentExpression	leaf_data = ( unsigned char * ) malloc ( type -> length )		6353568	0		=			
ANR	6353611	Identifier	leaf_data		6353568	0					
ANR	6353612	CastExpression	( unsigned char * ) malloc ( type -> length )		6353568	1					
ANR	6353613	CastTarget	unsigned char *		6353568	0					
ANR	6353614	CallExpression	malloc ( type -> length )		6353568	1					
ANR	6353615	Callee	malloc		6353568	0					
ANR	6353616	Identifier	malloc		6353568	0					
ANR	6353617	ArgumentList	type -> length		6353568	1					
ANR	6353618	Argument	type -> length		6353568	0					
ANR	6353619	PtrMemberAccess	type -> length		6353568	0					
ANR	6353620	Identifier	type		6353568	0					
ANR	6353621	Identifier	length		6353568	1					
ANR	6353622	IfStatement	if ( ! leaf_data )		6353568	5					
ANR	6353623	Condition	! leaf_data	2268:5:61721:61730	6353568	0	True				
ANR	6353624	UnaryOperationExpression	! leaf_data		6353568	0					
ANR	6353625	UnaryOperator	!		6353568	0					
ANR	6353626	Identifier	leaf_data		6353568	1					
ANR	6353627	CompoundStatement		10:17:222:222	6353568	1					
ANR	6353628	ReturnStatement	return 0 ;	2269:2:61737:61745	6353568	0	True				
ANR	6353629	PrimaryExpression	0		6353568	0					
ANR	6353630	ExpressionStatement	"stream_file_read ( stream , type -> length , ( char * ) leaf_data )"	2271:1:61751:61809	6353568	6	True				
ANR	6353631	CallExpression	"stream_file_read ( stream , type -> length , ( char * ) leaf_data )"		6353568	0					
ANR	6353632	Callee	stream_file_read		6353568	0					
ANR	6353633	Identifier	stream_file_read		6353568	0					
ANR	6353634	ArgumentList	stream		6353568	1					
ANR	6353635	Argument	stream		6353568	0					
ANR	6353636	Identifier	stream		6353568	0					
ANR	6353637	Argument	type -> length		6353568	1					
ANR	6353638	PtrMemberAccess	type -> length		6353568	0					
ANR	6353639	Identifier	type		6353568	0					
ANR	6353640	Identifier	length		6353568	1					
ANR	6353641	Argument	( char * ) leaf_data		6353568	2					
ANR	6353642	CastExpression	( char * ) leaf_data		6353568	0					
ANR	6353643	CastTarget	char *		6353568	0					
ANR	6353644	Identifier	leaf_data		6353568	1					
ANR	6353645	ExpressionStatement	type -> type_data . leaf_type = * ( unsigned short * ) leaf_data	2272:1:61812:61868	6353568	7	True				
ANR	6353646	AssignmentExpression	type -> type_data . leaf_type = * ( unsigned short * ) leaf_data		6353568	0		=			
ANR	6353647	MemberAccess	type -> type_data . leaf_type		6353568	0					
ANR	6353648	PtrMemberAccess	type -> type_data		6353568	0					
ANR	6353649	Identifier	type		6353568	0					
ANR	6353650	Identifier	type_data		6353568	1					
ANR	6353651	Identifier	leaf_type		6353568	1					
ANR	6353652	UnaryOperationExpression	* ( unsigned short * ) leaf_data		6353568	1					
ANR	6353653	UnaryOperator	*		6353568	0					
ANR	6353654	CastExpression	( unsigned short * ) leaf_data		6353568	1					
ANR	6353655	CastTarget	unsigned short *		6353568	0					
ANR	6353656	Identifier	leaf_data		6353568	1					
ANR	6353657	ExpressionStatement	read_bytes += 2	2273:1:61871:61886	6353568	8	True				
ANR	6353658	AssignmentExpression	read_bytes += 2		6353568	0		+=			
ANR	6353659	Identifier	read_bytes		6353568	0					
ANR	6353660	PrimaryExpression	2		6353568	1					
ANR	6353661	SwitchStatement	switch ( type -> type_data . leaf_type )		6353568	9					
ANR	6353662	Condition	type -> type_data . leaf_type	2274:9:61897:61921	6353568	0	True				
ANR	6353663	MemberAccess	type -> type_data . leaf_type		6353568	0					
ANR	6353664	PtrMemberAccess	type -> type_data		6353568	0					
ANR	6353665	Identifier	type		6353568	0					
ANR	6353666	Identifier	type_data		6353568	1					
ANR	6353667	Identifier	leaf_type		6353568	1					
ANR	6353668	CompoundStatement		16:36:413:413	6353568	1					
ANR	6353669	Label	case eLF_FIELDLIST :	2275:1:61927:61945	6353568	0	True				
ANR	6353670	Identifier	eLF_FIELDLIST		6353568	0					
ANR	6353671	ExpressionStatement	"PARSE_LF ( SLF_FIELDLIST , lf_fieldlist )"	2277:2:61980:62017	6353568	1	True				
ANR	6353672	CallExpression	"PARSE_LF ( SLF_FIELDLIST , lf_fieldlist )"		6353568	0					
ANR	6353673	Callee	PARSE_LF		6353568	0					
ANR	6353674	Identifier	PARSE_LF		6353568	0					
ANR	6353675	ArgumentList	SLF_FIELDLIST		6353568	1					
ANR	6353676	Argument	SLF_FIELDLIST		6353568	0					
ANR	6353677	Identifier	SLF_FIELDLIST		6353568	0					
ANR	6353678	Argument	lf_fieldlist		6353568	1					
ANR	6353679	Identifier	lf_fieldlist		6353568	0					
ANR	6353680	BreakStatement	break ;	2278:2:62021:62026	6353568	2	True				
ANR	6353681	Label	case eLF_ENUM :	2279:1:62029:62042	6353568	3	True				
ANR	6353682	Identifier	eLF_ENUM		6353568	0					
ANR	6353683	ExpressionStatement	"PARSE_LF ( SLF_ENUM , lf_enum )"	2281:2:62072:62099	6353568	4	True				
ANR	6353684	CallExpression	"PARSE_LF ( SLF_ENUM , lf_enum )"		6353568	0					
ANR	6353685	Callee	PARSE_LF		6353568	0					
ANR	6353686	Identifier	PARSE_LF		6353568	0					
ANR	6353687	ArgumentList	SLF_ENUM		6353568	1					
ANR	6353688	Argument	SLF_ENUM		6353568	0					
ANR	6353689	Identifier	SLF_ENUM		6353568	0					
ANR	6353690	Argument	lf_enum		6353568	1					
ANR	6353691	Identifier	lf_enum		6353568	0					
ANR	6353692	BreakStatement	break ;	2282:2:62103:62108	6353568	5	True				
ANR	6353693	Label	case eLF_CLASS :	2284:1:62148:62162	6353568	6	True				
ANR	6353694	Identifier	eLF_CLASS		6353568	0					
ANR	6353695	ExpressionStatement	"PARSE_LF ( SLF_CLASS , lf_class )"	2286:2:62193:62222	6353568	7	True				
ANR	6353696	CallExpression	"PARSE_LF ( SLF_CLASS , lf_class )"		6353568	0					
ANR	6353697	Callee	PARSE_LF		6353568	0					
ANR	6353698	Identifier	PARSE_LF		6353568	0					
ANR	6353699	ArgumentList	SLF_CLASS		6353568	1					
ANR	6353700	Argument	SLF_CLASS		6353568	0					
ANR	6353701	Identifier	SLF_CLASS		6353568	0					
ANR	6353702	Argument	lf_class		6353568	1					
ANR	6353703	Identifier	lf_class		6353568	0					
ANR	6353704	BreakStatement	break ;	2287:2:62226:62231	6353568	8	True				
ANR	6353705	Label	case eLF_STRUCTURE :	2288:1:62234:62252	6353568	9	True				
ANR	6353706	Identifier	eLF_STRUCTURE		6353568	0					
ANR	6353707	ExpressionStatement	"PARSE_LF ( SLF_STRUCTURE , lf_structure )"	2290:2:62287:62324	6353568	10	True				
ANR	6353708	CallExpression	"PARSE_LF ( SLF_STRUCTURE , lf_structure )"		6353568	0					
ANR	6353709	Callee	PARSE_LF		6353568	0					
ANR	6353710	Identifier	PARSE_LF		6353568	0					
ANR	6353711	ArgumentList	SLF_STRUCTURE		6353568	1					
ANR	6353712	Argument	SLF_STRUCTURE		6353568	0					
ANR	6353713	Identifier	SLF_STRUCTURE		6353568	0					
ANR	6353714	Argument	lf_structure		6353568	1					
ANR	6353715	Identifier	lf_structure		6353568	0					
ANR	6353716	BreakStatement	break ;	2291:2:62328:62333	6353568	11	True				
ANR	6353717	Label	case eLF_POINTER :	2292:1:62336:62352	6353568	12	True				
ANR	6353718	Identifier	eLF_POINTER		6353568	0					
ANR	6353719	CompoundStatement		37:2:877:938	6353568	13					
ANR	6353720	IdentifierDeclStatement	SLF_POINTER * lf = ( SLF_POINTER * ) malloc ( sizeof ( SLF_POINTER ) ) ;	2295:2:62388:62449	6353568	0	True				
ANR	6353721	IdentifierDecl	* lf = ( SLF_POINTER * ) malloc ( sizeof ( SLF_POINTER ) )		6353568	0					
ANR	6353722	IdentifierDeclType	SLF_POINTER *		6353568	0					
ANR	6353723	Identifier	lf		6353568	1					
ANR	6353724	AssignmentExpression	* lf = ( SLF_POINTER * ) malloc ( sizeof ( SLF_POINTER ) )		6353568	2		=			
ANR	6353725	Identifier	lf		6353568	0					
ANR	6353726	CastExpression	( SLF_POINTER * ) malloc ( sizeof ( SLF_POINTER ) )		6353568	1					
ANR	6353727	CastTarget	SLF_POINTER *		6353568	0					
ANR	6353728	CallExpression	malloc ( sizeof ( SLF_POINTER ) )		6353568	1					
ANR	6353729	Callee	malloc		6353568	0					
ANR	6353730	Identifier	malloc		6353568	0					
ANR	6353731	ArgumentList	sizeof ( SLF_POINTER )		6353568	1					
ANR	6353732	Argument	sizeof ( SLF_POINTER )		6353568	0					
ANR	6353733	SizeofExpression	sizeof ( SLF_POINTER )		6353568	0					
ANR	6353734	Sizeof	sizeof		6353568	0					
ANR	6353735	SizeofOperand	SLF_POINTER		6353568	1					
ANR	6353736	IfStatement	if ( ! lf )		6353568	1					
ANR	6353737	Condition	! lf	2296:6:62459:62461	6353568	0	True				
ANR	6353738	UnaryOperationExpression	! lf		6353568	0					
ANR	6353739	UnaryOperator	!		6353568	0					
ANR	6353740	Identifier	lf		6353568	1					
ANR	6353741	CompoundStatement		38:11:953:953	6353568	1					
ANR	6353742	ExpressionStatement	free ( leaf_data )	2297:3:62471:62487	6353568	0	True				
ANR	6353743	CallExpression	free ( leaf_data )		6353568	0					
ANR	6353744	Callee	free		6353568	0					
ANR	6353745	Identifier	free		6353568	0					
ANR	6353746	ArgumentList	leaf_data		6353568	1					
ANR	6353747	Argument	leaf_data		6353568	0					
ANR	6353748	Identifier	leaf_data		6353568	0					
ANR	6353749	ReturnStatement	return 0 ;	2298:3:62494:62502	6353568	1	True				
ANR	6353750	PrimaryExpression	0		6353568	0					
ANR	6353751	ExpressionStatement	"parse_lf_pointer ( lf , leaf_data + 2 , & read_bytes , type -> length )"	2300:2:62514:62576	6353568	2	True				
ANR	6353752	CallExpression	"parse_lf_pointer ( lf , leaf_data + 2 , & read_bytes , type -> length )"		6353568	0					
ANR	6353753	Callee	parse_lf_pointer		6353568	0					
ANR	6353754	Identifier	parse_lf_pointer		6353568	0					
ANR	6353755	ArgumentList	lf		6353568	1					
ANR	6353756	Argument	lf		6353568	0					
ANR	6353757	Identifier	lf		6353568	0					
ANR	6353758	Argument	leaf_data + 2		6353568	1					
ANR	6353759	AdditiveExpression	leaf_data + 2		6353568	0		+			
ANR	6353760	Identifier	leaf_data		6353568	0					
ANR	6353761	PrimaryExpression	2		6353568	1					
ANR	6353762	Argument	& read_bytes		6353568	2					
ANR	6353763	UnaryOperationExpression	& read_bytes		6353568	0					
ANR	6353764	UnaryOperator	&		6353568	0					
ANR	6353765	Identifier	read_bytes		6353568	1					
ANR	6353766	Argument	type -> length		6353568	3					
ANR	6353767	PtrMemberAccess	type -> length		6353568	0					
ANR	6353768	Identifier	type		6353568	0					
ANR	6353769	Identifier	length		6353568	1					
ANR	6353770	ExpressionStatement	type -> type_data . type_info = ( void * ) lf	2301:2:62582:62621	6353568	3	True				
ANR	6353771	AssignmentExpression	type -> type_data . type_info = ( void * ) lf		6353568	0		=			
ANR	6353772	MemberAccess	type -> type_data . type_info		6353568	0					
ANR	6353773	PtrMemberAccess	type -> type_data		6353568	0					
ANR	6353774	Identifier	type		6353568	0					
ANR	6353775	Identifier	type_data		6353568	1					
ANR	6353776	Identifier	type_info		6353568	1					
ANR	6353777	CastExpression	( void * ) lf		6353568	1					
ANR	6353778	CastTarget	void *		6353568	0					
ANR	6353779	Identifier	lf		6353568	1					
ANR	6353780	ExpressionStatement	init_stype_info ( & type -> type_data )	2302:2:62627:62660	6353568	4	True				
ANR	6353781	CallExpression	init_stype_info ( & type -> type_data )		6353568	0					
ANR	6353782	Callee	init_stype_info		6353568	0					
ANR	6353783	Identifier	init_stype_info		6353568	0					
ANR	6353784	ArgumentList	& type -> type_data		6353568	1					
ANR	6353785	Argument	& type -> type_data		6353568	0					
ANR	6353786	UnaryOperationExpression	& type -> type_data		6353568	0					
ANR	6353787	UnaryOperator	&		6353568	0					
ANR	6353788	PtrMemberAccess	type -> type_data		6353568	1					
ANR	6353789	Identifier	type		6353568	0					
ANR	6353790	Identifier	type_data		6353568	1					
ANR	6353791	BreakStatement	break ;	2305:2:62708:62713	6353568	14	True				
ANR	6353792	Label	case eLF_ARRAY :	2306:1:62716:62730	6353568	15	True				
ANR	6353793	Identifier	eLF_ARRAY		6353568	0					
ANR	6353794	ExpressionStatement	"PARSE_LF ( SLF_ARRAY , lf_array )"	2308:2:62761:62790	6353568	16	True				
ANR	6353795	CallExpression	"PARSE_LF ( SLF_ARRAY , lf_array )"		6353568	0					
ANR	6353796	Callee	PARSE_LF		6353568	0					
ANR	6353797	Identifier	PARSE_LF		6353568	0					
ANR	6353798	ArgumentList	SLF_ARRAY		6353568	1					
ANR	6353799	Argument	SLF_ARRAY		6353568	0					
ANR	6353800	Identifier	SLF_ARRAY		6353568	0					
ANR	6353801	Argument	lf_array		6353568	1					
ANR	6353802	Identifier	lf_array		6353568	0					
ANR	6353803	BreakStatement	break ;	2309:2:62794:62799	6353568	17	True				
ANR	6353804	Label	case eLF_MODIFIER :	2310:1:62802:62819	6353568	18	True				
ANR	6353805	Identifier	eLF_MODIFIER		6353568	0					
ANR	6353806	ExpressionStatement	"PARSE_LF ( SLF_MODIFIER , lf_modifier )"	2312:2:62853:62888	6353568	19	True				
ANR	6353807	CallExpression	"PARSE_LF ( SLF_MODIFIER , lf_modifier )"		6353568	0					
ANR	6353808	Callee	PARSE_LF		6353568	0					
ANR	6353809	Identifier	PARSE_LF		6353568	0					
ANR	6353810	ArgumentList	SLF_MODIFIER		6353568	1					
ANR	6353811	Argument	SLF_MODIFIER		6353568	0					
ANR	6353812	Identifier	SLF_MODIFIER		6353568	0					
ANR	6353813	Argument	lf_modifier		6353568	1					
ANR	6353814	Identifier	lf_modifier		6353568	0					
ANR	6353815	BreakStatement	break ;	2313:2:62892:62897	6353568	20	True				
ANR	6353816	Label	case eLF_ARGLIST :	2314:1:62900:62916	6353568	21	True				
ANR	6353817	Identifier	eLF_ARGLIST		6353568	0					
ANR	6353818	ExpressionStatement	"PARSE_LF ( SLF_ARGLIST , lf_arglist )"	2316:2:62949:62982	6353568	22	True				
ANR	6353819	CallExpression	"PARSE_LF ( SLF_ARGLIST , lf_arglist )"		6353568	0					
ANR	6353820	Callee	PARSE_LF		6353568	0					
ANR	6353821	Identifier	PARSE_LF		6353568	0					
ANR	6353822	ArgumentList	SLF_ARGLIST		6353568	1					
ANR	6353823	Argument	SLF_ARGLIST		6353568	0					
ANR	6353824	Identifier	SLF_ARGLIST		6353568	0					
ANR	6353825	Argument	lf_arglist		6353568	1					
ANR	6353826	Identifier	lf_arglist		6353568	0					
ANR	6353827	BreakStatement	break ;	2317:2:62986:62991	6353568	23	True				
ANR	6353828	Label	case eLF_MFUNCTION :	2318:1:62994:63012	6353568	24	True				
ANR	6353829	Identifier	eLF_MFUNCTION		6353568	0					
ANR	6353830	ExpressionStatement	"PARSE_LF ( SLF_MFUNCTION , lf_mfunction )"	2320:2:63047:63084	6353568	25	True				
ANR	6353831	CallExpression	"PARSE_LF ( SLF_MFUNCTION , lf_mfunction )"		6353568	0					
ANR	6353832	Callee	PARSE_LF		6353568	0					
ANR	6353833	Identifier	PARSE_LF		6353568	0					
ANR	6353834	ArgumentList	SLF_MFUNCTION		6353568	1					
ANR	6353835	Argument	SLF_MFUNCTION		6353568	0					
ANR	6353836	Identifier	SLF_MFUNCTION		6353568	0					
ANR	6353837	Argument	lf_mfunction		6353568	1					
ANR	6353838	Identifier	lf_mfunction		6353568	0					
ANR	6353839	BreakStatement	break ;	2321:2:63088:63093	6353568	26	True				
ANR	6353840	Label	case eLF_METHODLIST :	2322:1:63096:63115	6353568	27	True				
ANR	6353841	Identifier	eLF_METHODLIST		6353568	0					
ANR	6353842	BreakStatement	break ;	2324:2:63152:63157	6353568	28	True				
ANR	6353843	Label	case eLF_PROCEDURE :	2325:1:63160:63178	6353568	29	True				
ANR	6353844	Identifier	eLF_PROCEDURE		6353568	0					
ANR	6353845	ExpressionStatement	"PARSE_LF ( SLF_PROCEDURE , lf_procedure )"	2327:2:63213:63250	6353568	30	True				
ANR	6353846	CallExpression	"PARSE_LF ( SLF_PROCEDURE , lf_procedure )"		6353568	0					
ANR	6353847	Callee	PARSE_LF		6353568	0					
ANR	6353848	Identifier	PARSE_LF		6353568	0					
ANR	6353849	ArgumentList	SLF_PROCEDURE		6353568	1					
ANR	6353850	Argument	SLF_PROCEDURE		6353568	0					
ANR	6353851	Identifier	SLF_PROCEDURE		6353568	0					
ANR	6353852	Argument	lf_procedure		6353568	1					
ANR	6353853	Identifier	lf_procedure		6353568	0					
ANR	6353854	BreakStatement	break ;	2328:2:63254:63259	6353568	31	True				
ANR	6353855	Label	case eLF_UNION :	2329:1:63262:63276	6353568	32	True				
ANR	6353856	Identifier	eLF_UNION		6353568	0					
ANR	6353857	ExpressionStatement	"PARSE_LF ( SLF_UNION , lf_union )"	2331:2:63307:63336	6353568	33	True				
ANR	6353858	CallExpression	"PARSE_LF ( SLF_UNION , lf_union )"		6353568	0					
ANR	6353859	Callee	PARSE_LF		6353568	0					
ANR	6353860	Identifier	PARSE_LF		6353568	0					
ANR	6353861	ArgumentList	SLF_UNION		6353568	1					
ANR	6353862	Argument	SLF_UNION		6353568	0					
ANR	6353863	Identifier	SLF_UNION		6353568	0					
ANR	6353864	Argument	lf_union		6353568	1					
ANR	6353865	Identifier	lf_union		6353568	0					
ANR	6353866	BreakStatement	break ;	2332:2:63340:63345	6353568	34	True				
ANR	6353867	Label	case eLF_BITFIELD :	2333:1:63348:63365	6353568	35	True				
ANR	6353868	Identifier	eLF_BITFIELD		6353568	0					
ANR	6353869	ExpressionStatement	"PARSE_LF ( SLF_BITFIELD , lf_bitfield )"	2335:2:63399:63434	6353568	36	True				
ANR	6353870	CallExpression	"PARSE_LF ( SLF_BITFIELD , lf_bitfield )"		6353568	0					
ANR	6353871	Callee	PARSE_LF		6353568	0					
ANR	6353872	Identifier	PARSE_LF		6353568	0					
ANR	6353873	ArgumentList	SLF_BITFIELD		6353568	1					
ANR	6353874	Argument	SLF_BITFIELD		6353568	0					
ANR	6353875	Identifier	SLF_BITFIELD		6353568	0					
ANR	6353876	Argument	lf_bitfield		6353568	1					
ANR	6353877	Identifier	lf_bitfield		6353568	0					
ANR	6353878	BreakStatement	break ;	2336:2:63438:63443	6353568	37	True				
ANR	6353879	Label	case eLF_VTSHAPE :	2337:1:63446:63462	6353568	38	True				
ANR	6353880	Identifier	eLF_VTSHAPE		6353568	0					
ANR	6353881	ExpressionStatement	"PARSE_LF ( SLF_VTSHAPE , lf_vtshape )"	2339:2:63495:63528	6353568	39	True				
ANR	6353882	CallExpression	"PARSE_LF ( SLF_VTSHAPE , lf_vtshape )"		6353568	0					
ANR	6353883	Callee	PARSE_LF		6353568	0					
ANR	6353884	Identifier	PARSE_LF		6353568	0					
ANR	6353885	ArgumentList	SLF_VTSHAPE		6353568	1					
ANR	6353886	Argument	SLF_VTSHAPE		6353568	0					
ANR	6353887	Identifier	SLF_VTSHAPE		6353568	0					
ANR	6353888	Argument	lf_vtshape		6353568	1					
ANR	6353889	Identifier	lf_vtshape		6353568	0					
ANR	6353890	BreakStatement	break ;	2340:2:63532:63537	6353568	40	True				
ANR	6353891	Label	default :	2341:1:63540:63547	6353568	41	True				
ANR	6353892	Identifier	default		6353568	0					
ANR	6353893	ExpressionStatement	"printf ( ""parse_tpi_streams(): unsupported leaf type\\n"" )"	2342:2:63551:63605	6353568	42	True				
ANR	6353894	CallExpression	"printf ( ""parse_tpi_streams(): unsupported leaf type\\n"" )"		6353568	0					
ANR	6353895	Callee	printf		6353568	0					
ANR	6353896	Identifier	printf		6353568	0					
ANR	6353897	ArgumentList	"""parse_tpi_streams(): unsupported leaf type\\n"""		6353568	1					
ANR	6353898	Argument	"""parse_tpi_streams(): unsupported leaf type\\n"""		6353568	0					
ANR	6353899	PrimaryExpression	"""parse_tpi_streams(): unsupported leaf type\\n"""		6353568	0					
ANR	6353900	BreakStatement	break ;	2343:2:63609:63614	6353568	43	True				
ANR	6353901	ExpressionStatement	free ( leaf_data )	2346:1:63621:63637	6353568	10	True				
ANR	6353902	CallExpression	free ( leaf_data )		6353568	0					
ANR	6353903	Callee	free		6353568	0					
ANR	6353904	Identifier	free		6353568	0					
ANR	6353905	ArgumentList	leaf_data		6353568	1					
ANR	6353906	Argument	leaf_data		6353568	0					
ANR	6353907	Identifier	leaf_data		6353568	0					
ANR	6353908	ReturnStatement	return read_bytes ;	2347:1:63640:63657	6353568	11	True				
ANR	6353909	Identifier	read_bytes		6353568	0					
ANR	6353910	ReturnType	static int		6353568	1					
ANR	6353911	Identifier	parse_tpi_stypes		6353568	2					
ANR	6353912	ParameterList	"R_STREAM_FILE * stream , SType * type"		6353568	3					
ANR	6353913	Parameter	R_STREAM_FILE * stream	2259:28:61474:61494	6353568	0	True				
ANR	6353914	ParameterType	R_STREAM_FILE *		6353568	0					
ANR	6353915	Identifier	stream		6353568	1					
ANR	6353916	Parameter	SType * type	2259:51:61497:61507	6353568	1	True				
ANR	6353917	ParameterType	SType *		6353568	0					
ANR	6353918	Identifier	type		6353568	1					
ANR	6353919	CFGEntryNode	ENTRY		6353568		True				
ANR	6353920	CFGExitNode	EXIT		6353568		True				
ANR	6353921	Symbol	& type -> length		6353568						
ANR	6353922	Symbol	lf_structure		6353568						
ANR	6353923	Symbol	leaf_data		6353568						
ANR	6353924	Symbol	lf_mfunction		6353568						
ANR	6353925	Symbol	lf_procedure		6353568						
ANR	6353926	Symbol	type -> type_data		6353568						
ANR	6353927	Symbol	& type -> type_data		6353568						
ANR	6353928	Symbol	SLF_FIELDLIST		6353568						
ANR	6353929	Symbol	SLF_ARGLIST		6353568						
ANR	6353930	Symbol	SLF_VTSHAPE		6353568						
ANR	6353931	Symbol	SLF_CLASS		6353568						
ANR	6353932	Symbol	type		6353568						
ANR	6353933	Symbol	lf_class		6353568						
ANR	6353934	Symbol	lf_modifier		6353568						
ANR	6353935	Symbol	SLF_UNION		6353568						
ANR	6353936	Symbol	SLF_ARRAY		6353568						
ANR	6353937	Symbol	SLF_PROCEDURE		6353568						
ANR	6353938	Symbol	stream		6353568						
ANR	6353939	Symbol	* type		6353568						
ANR	6353940	Symbol	lf_fieldlist		6353568						
ANR	6353941	Symbol	SLF_STRUCTURE		6353568						
ANR	6353942	Symbol	& read_bytes		6353568						
ANR	6353943	Symbol	SLF_ENUM		6353568						
ANR	6353944	Symbol	type -> type_data . type_info		6353568						
ANR	6353945	Symbol	lf_arglist		6353568						
ANR	6353946	Symbol	malloc		6353568						
ANR	6353947	Symbol	SLF_MODIFIER		6353568						
ANR	6353948	Symbol	* leaf_data		6353568						
ANR	6353949	Symbol	* ( unsigned short * ) leaf_data		6353568						
ANR	6353950	Symbol	read_bytes		6353568						
ANR	6353951	Symbol	type -> type_data . leaf_type		6353568						
ANR	6353952	Symbol	lf_union		6353568						
ANR	6353953	Symbol	lf_array		6353568						
ANR	6353954	Symbol	lf_bitfield		6353568						
ANR	6353955	Symbol	lf_vtshape		6353568						
ANR	6353956	Symbol	lf		6353568						
ANR	6353957	Symbol	type -> length		6353568						
ANR	6353958	Symbol	lf_enum		6353568						
ANR	6353959	Symbol	SLF_MFUNCTION		6353568						
ANR	6353960	Symbol	SLF_BITFIELD		6353568						
ANR	6353961	Function	parse_tpi_stream	2350:0:63662:64418							
ANR	6353962	FunctionDef	"parse_tpi_stream (void * parsed_pdb_stream , R_STREAM_FILE * stream)"		6353961	0					
ANR	6353963	CompoundStatement		2350:69:63731:64418	6353961	0					
ANR	6353964	IdentifierDeclStatement	int i ;	2351:1:63734:63739	6353961	0	True				
ANR	6353965	IdentifierDecl	i		6353961	0					
ANR	6353966	IdentifierDeclType	int		6353961	0					
ANR	6353967	Identifier	i		6353961	1					
ANR	6353968	IdentifierDeclStatement	SType * type = 0 ;	2352:1:63742:63757	6353961	1	True				
ANR	6353969	IdentifierDecl	* type = 0		6353961	0					
ANR	6353970	IdentifierDeclType	SType *		6353961	0					
ANR	6353971	Identifier	type		6353961	1					
ANR	6353972	AssignmentExpression	* type = 0		6353961	2		=			
ANR	6353973	Identifier	type		6353961	0					
ANR	6353974	PrimaryExpression	0		6353961	1					
ANR	6353975	IdentifierDeclStatement	STpiStream * tpi_stream = ( STpiStream * ) parsed_pdb_stream ;	2353:1:63760:63817	6353961	2	True				
ANR	6353976	IdentifierDecl	* tpi_stream = ( STpiStream * ) parsed_pdb_stream		6353961	0					
ANR	6353977	IdentifierDeclType	STpiStream *		6353961	0					
ANR	6353978	Identifier	tpi_stream		6353961	1					
ANR	6353979	AssignmentExpression	* tpi_stream = ( STpiStream * ) parsed_pdb_stream		6353961	2		=			
ANR	6353980	Identifier	tpi_stream		6353961	0					
ANR	6353981	CastExpression	( STpiStream * ) parsed_pdb_stream		6353961	1					
ANR	6353982	CastTarget	STpiStream *		6353961	0					
ANR	6353983	Identifier	parsed_pdb_stream		6353961	1					
ANR	6353984	ExpressionStatement	tpi_stream -> types = r_list_new ( )	2354:1:63820:63852	6353961	3	True				
ANR	6353985	AssignmentExpression	tpi_stream -> types = r_list_new ( )		6353961	0		=			
ANR	6353986	PtrMemberAccess	tpi_stream -> types		6353961	0					
ANR	6353987	Identifier	tpi_stream		6353961	0					
ANR	6353988	Identifier	types		6353961	1					
ANR	6353989	CallExpression	r_list_new ( )		6353961	1					
ANR	6353990	Callee	r_list_new		6353961	0					
ANR	6353991	Identifier	r_list_new		6353961	0					
ANR	6353992	ArgumentList			6353961	1					
ANR	6353993	ExpressionStatement	p_types_list = tpi_stream -> types	2355:1:63855:63887	6353961	4	True				
ANR	6353994	AssignmentExpression	p_types_list = tpi_stream -> types		6353961	0		=			
ANR	6353995	Identifier	p_types_list		6353961	0					
ANR	6353996	PtrMemberAccess	tpi_stream -> types		6353961	1					
ANR	6353997	Identifier	tpi_stream		6353961	0					
ANR	6353998	Identifier	types		6353961	1					
ANR	6353999	ExpressionStatement	"stream_file_read ( stream , sizeof ( STPIHeader ) , ( char * ) & tpi_stream -> header )"	2357:1:63891:63964	6353961	5	True				
ANR	6354000	CallExpression	"stream_file_read ( stream , sizeof ( STPIHeader ) , ( char * ) & tpi_stream -> header )"		6353961	0					
ANR	6354001	Callee	stream_file_read		6353961	0					
ANR	6354002	Identifier	stream_file_read		6353961	0					
ANR	6354003	ArgumentList	stream		6353961	1					
ANR	6354004	Argument	stream		6353961	0					
ANR	6354005	Identifier	stream		6353961	0					
ANR	6354006	Argument	sizeof ( STPIHeader )		6353961	1					
ANR	6354007	SizeofExpression	sizeof ( STPIHeader )		6353961	0					
ANR	6354008	Sizeof	sizeof		6353961	0					
ANR	6354009	SizeofOperand	STPIHeader		6353961	1					
ANR	6354010	Argument	( char * ) & tpi_stream -> header		6353961	2					
ANR	6354011	CastExpression	( char * ) & tpi_stream -> header		6353961	0					
ANR	6354012	CastTarget	char *		6353961	0					
ANR	6354013	UnaryOperationExpression	& tpi_stream -> header		6353961	1					
ANR	6354014	UnaryOperator	&		6353961	0					
ANR	6354015	PtrMemberAccess	tpi_stream -> header		6353961	1					
ANR	6354016	Identifier	tpi_stream		6353961	0					
ANR	6354017	Identifier	header		6353961	1					
ANR	6354018	ExpressionStatement	base_idx = tpi_stream -> header . ti_min	2359:1:63968:64004	6353961	6	True				
ANR	6354019	AssignmentExpression	base_idx = tpi_stream -> header . ti_min		6353961	0		=			
ANR	6354020	Identifier	base_idx		6353961	0					
ANR	6354021	MemberAccess	tpi_stream -> header . ti_min		6353961	1					
ANR	6354022	PtrMemberAccess	tpi_stream -> header		6353961	0					
ANR	6354023	Identifier	tpi_stream		6353961	0					
ANR	6354024	Identifier	header		6353961	1					
ANR	6354025	Identifier	ti_min		6353961	1					
ANR	6354026	ForStatement	for ( i = tpi_stream -> header . ti_min ; i < tpi_stream -> header . ti_max ; i ++ )		6353961	7					
ANR	6354027	ForInit	i = tpi_stream -> header . ti_min ;	2361:6:64013:64042	6353961	0	True				
ANR	6354028	AssignmentExpression	i = tpi_stream -> header . ti_min		6353961	0		=			
ANR	6354029	Identifier	i		6353961	0					
ANR	6354030	MemberAccess	tpi_stream -> header . ti_min		6353961	1					
ANR	6354031	PtrMemberAccess	tpi_stream -> header		6353961	0					
ANR	6354032	Identifier	tpi_stream		6353961	0					
ANR	6354033	Identifier	header		6353961	1					
ANR	6354034	Identifier	ti_min		6353961	1					
ANR	6354035	Condition	i < tpi_stream -> header . ti_max	2361:37:64044:64072	6353961	1	True				
ANR	6354036	RelationalExpression	i < tpi_stream -> header . ti_max		6353961	0		<			
ANR	6354037	Identifier	i		6353961	0					
ANR	6354038	MemberAccess	tpi_stream -> header . ti_max		6353961	1					
ANR	6354039	PtrMemberAccess	tpi_stream -> header		6353961	0					
ANR	6354040	Identifier	tpi_stream		6353961	0					
ANR	6354041	Identifier	header		6353961	1					
ANR	6354042	Identifier	ti_max		6353961	1					
ANR	6354043	PostIncDecOperationExpression	i ++	2361:68:64075:64077	6353961	2	True				
ANR	6354044	Identifier	i		6353961	0					
ANR	6354045	IncDec	++		6353961	1					
ANR	6354046	CompoundStatement		12:73:348:348	6353961	3					
ANR	6354047	ExpressionStatement	type = ( SType * ) malloc ( sizeof ( SType ) )	2362:2:64084:64124	6353961	0	True				
ANR	6354048	AssignmentExpression	type = ( SType * ) malloc ( sizeof ( SType ) )		6353961	0		=			
ANR	6354049	Identifier	type		6353961	0					
ANR	6354050	CastExpression	( SType * ) malloc ( sizeof ( SType ) )		6353961	1					
ANR	6354051	CastTarget	SType *		6353961	0					
ANR	6354052	CallExpression	malloc ( sizeof ( SType ) )		6353961	1					
ANR	6354053	Callee	malloc		6353961	0					
ANR	6354054	Identifier	malloc		6353961	0					
ANR	6354055	ArgumentList	sizeof ( SType )		6353961	1					
ANR	6354056	Argument	sizeof ( SType )		6353961	0					
ANR	6354057	SizeofExpression	sizeof ( SType )		6353961	0					
ANR	6354058	Sizeof	sizeof		6353961	0					
ANR	6354059	SizeofOperand	SType		6353961	1					
ANR	6354060	IfStatement	if ( ! type )		6353961	1					
ANR	6354061	Condition	! type	2363:6:64132:64136	6353961	0	True				
ANR	6354062	UnaryOperationExpression	! type		6353961	0					
ANR	6354063	UnaryOperator	!		6353961	0					
ANR	6354064	Identifier	type		6353961	1					
ANR	6354065	CompoundStatement		14:13:407:407	6353961	1					
ANR	6354066	ReturnStatement	return 0 ;	2364:3:64144:64152	6353961	0	True				
ANR	6354067	PrimaryExpression	0		6353961	0					
ANR	6354068	ExpressionStatement	type -> tpi_idx = i	2366:2:64160:64177	6353961	2	True				
ANR	6354069	AssignmentExpression	type -> tpi_idx = i		6353961	0		=			
ANR	6354070	PtrMemberAccess	type -> tpi_idx		6353961	0					
ANR	6354071	Identifier	type		6353961	0					
ANR	6354072	Identifier	tpi_idx		6353961	1					
ANR	6354073	Identifier	i		6353961	1					
ANR	6354074	ExpressionStatement	type -> type_data . type_info = 0	2367:2:64181:64210	6353961	3	True				
ANR	6354075	AssignmentExpression	type -> type_data . type_info = 0		6353961	0		=			
ANR	6354076	MemberAccess	type -> type_data . type_info		6353961	0					
ANR	6354077	PtrMemberAccess	type -> type_data		6353961	0					
ANR	6354078	Identifier	type		6353961	0					
ANR	6354079	Identifier	type_data		6353961	1					
ANR	6354080	Identifier	type_info		6353961	1					
ANR	6354081	PrimaryExpression	0		6353961	1					
ANR	6354082	ExpressionStatement	type -> type_data . leaf_type = eLF_MAX	2368:2:64214:64249	6353961	4	True				
ANR	6354083	AssignmentExpression	type -> type_data . leaf_type = eLF_MAX		6353961	0		=			
ANR	6354084	MemberAccess	type -> type_data . leaf_type		6353961	0					
ANR	6354085	PtrMemberAccess	type -> type_data		6353961	0					
ANR	6354086	Identifier	type		6353961	0					
ANR	6354087	Identifier	type_data		6353961	1					
ANR	6354088	Identifier	leaf_type		6353961	1					
ANR	6354089	Identifier	eLF_MAX		6353961	1					
ANR	6354090	ExpressionStatement	init_stype_info ( & type -> type_data )	2369:2:64253:64286	6353961	5	True				
ANR	6354091	CallExpression	init_stype_info ( & type -> type_data )		6353961	0					
ANR	6354092	Callee	init_stype_info		6353961	0					
ANR	6354093	Identifier	init_stype_info		6353961	0					
ANR	6354094	ArgumentList	& type -> type_data		6353961	1					
ANR	6354095	Argument	& type -> type_data		6353961	0					
ANR	6354096	UnaryOperationExpression	& type -> type_data		6353961	0					
ANR	6354097	UnaryOperator	&		6353961	0					
ANR	6354098	PtrMemberAccess	type -> type_data		6353961	1					
ANR	6354099	Identifier	type		6353961	0					
ANR	6354100	Identifier	type_data		6353961	1					
ANR	6354101	IfStatement	"if ( ! parse_tpi_stypes ( stream , type ) )"		6353961	6					
ANR	6354102	Condition	"! parse_tpi_stypes ( stream , type )"	2370:6:64294:64324	6353961	0	True				
ANR	6354103	UnaryOperationExpression	"! parse_tpi_stypes ( stream , type )"		6353961	0					
ANR	6354104	UnaryOperator	!		6353961	0					
ANR	6354105	CallExpression	"parse_tpi_stypes ( stream , type )"		6353961	1					
ANR	6354106	Callee	parse_tpi_stypes		6353961	0					
ANR	6354107	Identifier	parse_tpi_stypes		6353961	0					
ANR	6354108	ArgumentList	stream		6353961	1					
ANR	6354109	Argument	stream		6353961	0					
ANR	6354110	Identifier	stream		6353961	0					
ANR	6354111	Argument	type		6353961	1					
ANR	6354112	Identifier	type		6353961	0					
ANR	6354113	CompoundStatement		21:39:595:595	6353961	1					
ANR	6354114	ExpressionStatement	free ( type )	2371:3:64332:64343	6353961	0	True				
ANR	6354115	CallExpression	free ( type )		6353961	0					
ANR	6354116	Callee	free		6353961	0					
ANR	6354117	Identifier	free		6353961	0					
ANR	6354118	ArgumentList	type		6353961	1					
ANR	6354119	Argument	type		6353961	0					
ANR	6354120	Identifier	type		6353961	0					
ANR	6354121	ReturnStatement	return 0 ;	2372:3:64348:64356	6353961	1	True				
ANR	6354122	PrimaryExpression	0		6353961	0					
ANR	6354123	ExpressionStatement	"r_list_append ( tpi_stream -> types , type )"	2374:2:64364:64402	6353961	7	True				
ANR	6354124	CallExpression	"r_list_append ( tpi_stream -> types , type )"		6353961	0					
ANR	6354125	Callee	r_list_append		6353961	0					
ANR	6354126	Identifier	r_list_append		6353961	0					
ANR	6354127	ArgumentList	tpi_stream -> types		6353961	1					
ANR	6354128	Argument	tpi_stream -> types		6353961	0					
ANR	6354129	PtrMemberAccess	tpi_stream -> types		6353961	0					
ANR	6354130	Identifier	tpi_stream		6353961	0					
ANR	6354131	Identifier	types		6353961	1					
ANR	6354132	Argument	type		6353961	1					
ANR	6354133	Identifier	type		6353961	0					
ANR	6354134	ReturnStatement	return 1 ;	2376:1:64408:64416	6353961	8	True				
ANR	6354135	PrimaryExpression	1		6353961	0					
ANR	6354136	ReturnType	int		6353961	1					
ANR	6354137	Identifier	parse_tpi_stream		6353961	2					
ANR	6354138	ParameterList	"void * parsed_pdb_stream , R_STREAM_FILE * stream"		6353961	3					
ANR	6354139	Parameter	void * parsed_pdb_stream	2350:21:63683:63705	6353961	0	True				
ANR	6354140	ParameterType	void *		6353961	0					
ANR	6354141	Identifier	parsed_pdb_stream		6353961	1					
ANR	6354142	Parameter	R_STREAM_FILE * stream	2350:46:63708:63728	6353961	1	True				
ANR	6354143	ParameterType	R_STREAM_FILE *		6353961	0					
ANR	6354144	Identifier	stream		6353961	1					
ANR	6354145	CFGEntryNode	ENTRY		6353961		True				
ANR	6354146	CFGExitNode	EXIT		6353961		True				
ANR	6354147	Symbol	parse_tpi_stypes		6353961						
ANR	6354148	Symbol	malloc		6353961						
ANR	6354149	Symbol	& tpi_stream -> header		6353961						
ANR	6354150	Symbol	tpi_stream -> types		6353961						
ANR	6354151	Symbol	tpi_stream -> header . ti_min		6353961						
ANR	6354152	Symbol	type -> tpi_idx		6353961						
ANR	6354153	Symbol	type -> type_data		6353961						
ANR	6354154	Symbol	& type -> type_data		6353961						
ANR	6354155	Symbol	base_idx		6353961						
ANR	6354156	Symbol	eLF_MAX		6353961						
ANR	6354157	Symbol	parsed_pdb_stream		6353961						
ANR	6354158	Symbol	i		6353961						
ANR	6354159	Symbol	p_types_list		6353961						
ANR	6354160	Symbol	tpi_stream		6353961						
ANR	6354161	Symbol	type		6353961						
ANR	6354162	Symbol	type -> type_data . leaf_type		6353961						
ANR	6354163	Symbol	stream		6353961						
ANR	6354164	Symbol	* type		6353961						
ANR	6354165	Symbol	tpi_stream -> header . ti_max		6353961						
ANR	6354166	Symbol	type -> type_data . type_info		6353961						
ANR	6354167	Symbol	* tpi_stream		6353961						
ANR	6354168	Symbol	r_list_new		6353961						
ANR	6354169	Symbol	tpi_stream -> header		6353961						
ANR	6354170	Function	init_tpi_stream	2379:0:64421:64506							
ANR	6354171	FunctionDef	init_tpi_stream (STpiStream * tpi_stream)		6354170	0					
ANR	6354172	CompoundStatement		2379:45:64466:64506	6354170	0					
ANR	6354173	ExpressionStatement	tpi_stream -> free_ = free_tpi_stream	2380:1:64469:64504	6354170	0	True				
ANR	6354174	AssignmentExpression	tpi_stream -> free_ = free_tpi_stream		6354170	0		=			
ANR	6354175	PtrMemberAccess	tpi_stream -> free_		6354170	0					
ANR	6354176	Identifier	tpi_stream		6354170	0					
ANR	6354177	Identifier	free_		6354170	1					
ANR	6354178	Identifier	free_tpi_stream		6354170	1					
ANR	6354179	ReturnType	void		6354170	1					
ANR	6354180	Identifier	init_tpi_stream		6354170	2					
ANR	6354181	ParameterList	STpiStream * tpi_stream		6354170	3					
ANR	6354182	Parameter	STpiStream * tpi_stream	2379:21:64442:64463	6354170	0	True				
ANR	6354183	ParameterType	STpiStream *		6354170	0					
ANR	6354184	Identifier	tpi_stream		6354170	1					
ANR	6354185	CFGEntryNode	ENTRY		6354170		True				
ANR	6354186	CFGExitNode	EXIT		6354170		True				
ANR	6354187	Symbol	tpi_stream -> free_		6354170						
ANR	6354188	Symbol	tpi_stream		6354170						
ANR	6354189	Symbol	free_tpi_stream		6354170						
ANR	6354190	Symbol	* tpi_stream		6354170						
