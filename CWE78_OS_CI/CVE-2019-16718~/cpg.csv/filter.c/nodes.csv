command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	1482700	File	data/converged/CVE-2019-16718~_radare2/filter.c								
ANR	1482701	Function	__hashify	6:0:91:517							
ANR	1482702	FunctionDef	"__hashify (char * s , ut64 vaddr)"		1482701	0					
ANR	1482703	CompoundStatement		6:44:135:517	1482701	0					
ANR	1482704	ExpressionStatement	"r_return_val_if_fail ( s , NULL )"	7:1:138:168	1482701	0	True				
ANR	1482705	CallExpression	"r_return_val_if_fail ( s , NULL )"		1482701	0					
ANR	1482706	Callee	r_return_val_if_fail		1482701	0					
ANR	1482707	Identifier	r_return_val_if_fail		1482701	0					
ANR	1482708	ArgumentList	s		1482701	1					
ANR	1482709	Argument	s		1482701	0					
ANR	1482710	Identifier	s		1482701	0					
ANR	1482711	Argument	NULL		1482701	1					
ANR	1482712	Identifier	NULL		1482701	0					
ANR	1482713	IdentifierDeclStatement	char * os = s ;	9:1:172:184	1482701	1	True				
ANR	1482714	IdentifierDecl	* os = s		1482701	0					
ANR	1482715	IdentifierDeclType	char *		1482701	0					
ANR	1482716	Identifier	os		1482701	1					
ANR	1482717	AssignmentExpression	* os = s		1482701	2		=			
ANR	1482718	Identifier	s		1482701	0					
ANR	1482719	Identifier	s		1482701	1					
ANR	1482720	WhileStatement	while ( * s )		1482701	2					
ANR	1482721	Condition	* s	10:8:194:195	1482701	0	True				
ANR	1482722	UnaryOperationExpression	* s		1482701	0					
ANR	1482723	UnaryOperator	*		1482701	0					
ANR	1482724	Identifier	s		1482701	1					
ANR	1482725	CompoundStatement		5:12:62:62	1482701	1					
ANR	1482726	IfStatement	if ( ! IS_PRINTABLE ( * s ) )		1482701	0					
ANR	1482727	Condition	! IS_PRINTABLE ( * s )	11:6:206:223	1482701	0	True				
ANR	1482728	UnaryOperationExpression	! IS_PRINTABLE ( * s )		1482701	0					
ANR	1482729	UnaryOperator	!		1482701	0					
ANR	1482730	CallExpression	IS_PRINTABLE ( * s )		1482701	1					
ANR	1482731	Callee	IS_PRINTABLE		1482701	0					
ANR	1482732	Identifier	IS_PRINTABLE		1482701	0					
ANR	1482733	ArgumentList	* s		1482701	1					
ANR	1482734	Argument	* s		1482701	0					
ANR	1482735	UnaryOperationExpression	* s		1482701	0					
ANR	1482736	UnaryOperator	*		1482701	0					
ANR	1482737	Identifier	s		1482701	1					
ANR	1482738	CompoundStatement		15:3:269:304	1482701	1					
ANR	1482739	IfStatement	if ( vaddr && vaddr != UT64_MAX )		1482701	0					
ANR	1482740	Condition	vaddr && vaddr != UT64_MAX	12:7:235:260	1482701	0	True				
ANR	1482741	AndExpression	vaddr && vaddr != UT64_MAX		1482701	0		&&			
ANR	1482742	Identifier	vaddr		1482701	0					
ANR	1482743	EqualityExpression	vaddr != UT64_MAX		1482701	1		!=			
ANR	1482744	Identifier	vaddr		1482701	0					
ANR	1482745	Identifier	UT64_MAX		1482701	1					
ANR	1482746	CompoundStatement		7:35:127:127	1482701	1					
ANR	1482747	Statement	char	13:4:269:272	1482701	0	True				
ANR	1482748	Statement	*	13:9:274:274	1482701	1	True				
ANR	1482749	Statement	ret	13:10:275:277	1482701	2	True				
ANR	1482750	Statement	=	13:14:279:279	1482701	3	True				
ANR	1482751	Statement	r_str_newf	13:16:281:290	1482701	4	True				
ANR	1482752	Statement	(	13:27:292:292	1482701	5	True				
ANR	1482753	Statement	"""_%"""	13:28:293:296	1482701	6	True				
ANR	1482754	Statement	PFMT64d	13:33:298:304	1482701	7	True				
ANR	1482755	Statement	","	13:40:305:305	1482701	8	True				
ANR	1482756	Statement	vaddr	13:42:307:311	1482701	9	True				
ANR	1482757	Statement	)	13:47:312:312	1482701	10	True				
ANR	1482758	ExpressionStatement		13:48:313:313	1482701	11	True				
ANR	1482759	IfStatement	if ( ret )		1482701	12					
ANR	1482760	Condition	ret	14:8:323:325	1482701	0	True				
ANR	1482761	Identifier	ret		1482701	0					
ANR	1482762	CompoundStatement		9:13:192:192	1482701	1					
ANR	1482763	ExpressionStatement	free ( os )	15:5:335:344	1482701	0	True				
ANR	1482764	CallExpression	free ( os )		1482701	0					
ANR	1482765	Callee	free		1482701	0					
ANR	1482766	Identifier	free		1482701	0					
ANR	1482767	ArgumentList	os		1482701	1					
ANR	1482768	Argument	os		1482701	0					
ANR	1482769	Identifier	os		1482701	0					
ANR	1482770	ReturnStatement	return ret ;	17:4:356:366	1482701	13	True				
ANR	1482771	Identifier	ret		1482701	0					
ANR	1482772	IdentifierDeclStatement	ut32 hash = sdb_hash ( s ) ;	19:3:376:400	1482701	1	True				
ANR	1482773	IdentifierDecl	hash = sdb_hash ( s )		1482701	0					
ANR	1482774	IdentifierDeclType	ut32		1482701	0					
ANR	1482775	Identifier	hash		1482701	1					
ANR	1482776	AssignmentExpression	hash = sdb_hash ( s )		1482701	2		=			
ANR	1482777	Identifier	hash		1482701	0					
ANR	1482778	CallExpression	sdb_hash ( s )		1482701	1					
ANR	1482779	Callee	sdb_hash		1482701	0					
ANR	1482780	Identifier	sdb_hash		1482701	0					
ANR	1482781	ArgumentList	s		1482701	1					
ANR	1482782	Argument	s		1482701	0					
ANR	1482783	Identifier	s		1482701	0					
ANR	1482784	IdentifierDeclStatement	"char * ret = r_str_newf ( ""%x"" , hash ) ;"	20:3:405:440	1482701	2	True				
ANR	1482785	IdentifierDecl	"* ret = r_str_newf ( ""%x"" , hash )"		1482701	0					
ANR	1482786	IdentifierDeclType	char *		1482701	0					
ANR	1482787	Identifier	ret		1482701	1					
ANR	1482788	AssignmentExpression	"* ret = r_str_newf ( ""%x"" , hash )"		1482701	2		=			
ANR	1482789	Identifier	ret		1482701	0					
ANR	1482790	CallExpression	"r_str_newf ( ""%x"" , hash )"		1482701	1					
ANR	1482791	Callee	r_str_newf		1482701	0					
ANR	1482792	Identifier	r_str_newf		1482701	0					
ANR	1482793	ArgumentList	"""%x"""		1482701	1					
ANR	1482794	Argument	"""%x"""		1482701	0					
ANR	1482795	PrimaryExpression	"""%x"""		1482701	0					
ANR	1482796	Argument	hash		1482701	1					
ANR	1482797	Identifier	hash		1482701	0					
ANR	1482798	IfStatement	if ( ret )		1482701	3					
ANR	1482799	Condition	ret	21:7:449:451	1482701	0	True				
ANR	1482800	Identifier	ret		1482701	0					
ANR	1482801	CompoundStatement		16:12:318:318	1482701	1					
ANR	1482802	ExpressionStatement	free ( os )	22:4:460:469	1482701	0	True				
ANR	1482803	CallExpression	free ( os )		1482701	0					
ANR	1482804	Callee	free		1482701	0					
ANR	1482805	Identifier	free		1482701	0					
ANR	1482806	ArgumentList	os		1482701	1					
ANR	1482807	Argument	os		1482701	0					
ANR	1482808	Identifier	os		1482701	0					
ANR	1482809	ReturnStatement	return ret ;	24:3:479:489	1482701	4	True				
ANR	1482810	Identifier	ret		1482701	0					
ANR	1482811	ExpressionStatement	s ++	26:2:497:500	1482701	1	True				
ANR	1482812	PostIncDecOperationExpression	s ++		1482701	0					
ANR	1482813	Identifier	s		1482701	0					
ANR	1482814	IncDec	++		1482701	1					
ANR	1482815	ReturnStatement	return os ;	28:1:506:515	1482701	3	True				
ANR	1482816	Identifier	os		1482701	0					
ANR	1482817	ReturnType	static char *		1482701	1					
ANR	1482818	Identifier	__hashify		1482701	2					
ANR	1482819	ParameterList	"char * s , ut64 vaddr"		1482701	3					
ANR	1482820	Parameter	char * s	6:23:114:120	1482701	0	True				
ANR	1482821	ParameterType	char *		1482701	0					
ANR	1482822	Identifier	s		1482701	1					
ANR	1482823	Parameter	ut64 vaddr	6:32:123:132	1482701	1	True				
ANR	1482824	ParameterType	ut64		1482701	0					
ANR	1482825	Identifier	vaddr		1482701	1					
ANR	1482826	CFGEntryNode	ENTRY		1482701		True				
ANR	1482827	CFGExitNode	EXIT		1482701		True				
ANR	1482828	Symbol	ret		1482701						
ANR	1482829	Symbol	sdb_hash		1482701						
ANR	1482830	Symbol	s		1482701						
ANR	1482831	Symbol	NULL		1482701						
ANR	1482832	Symbol	IS_PRINTABLE		1482701						
ANR	1482833	Symbol	os		1482701						
ANR	1482834	Symbol	vaddr		1482701						
ANR	1482835	Symbol	r_str_newf		1482701						
ANR	1482836	Symbol	UT64_MAX		1482701						
ANR	1482837	Symbol	* s		1482701						
ANR	1482838	Symbol	hash		1482701						
ANR	1482839	Function	r_bin_filter_name	32:0:562:1474							
ANR	1482840	FunctionDef	"r_bin_filter_name (RBinFile * bf , Sdb * db , ut64 vaddr , char * name)"		1482839	0					
ANR	1482841	CompoundStatement		32:77:639:1474	1482839	0					
ANR	1482842	ExpressionStatement	"r_return_val_if_fail ( db && name , NULL )"	33:1:642:681	1482839	0	True				
ANR	1482843	CallExpression	"r_return_val_if_fail ( db && name , NULL )"		1482839	0					
ANR	1482844	Callee	r_return_val_if_fail		1482839	0					
ANR	1482845	Identifier	r_return_val_if_fail		1482839	0					
ANR	1482846	ArgumentList	db && name		1482839	1					
ANR	1482847	Argument	db && name		1482839	0					
ANR	1482848	AndExpression	db && name		1482839	0		&&			
ANR	1482849	Identifier	db		1482839	0					
ANR	1482850	Identifier	name		1482839	1					
ANR	1482851	Argument	NULL		1482839	1					
ANR	1482852	Identifier	NULL		1482839	0					
ANR	1482853	IdentifierDeclStatement	char * resname = name ;	35:1:685:705	1482839	1	True				
ANR	1482854	IdentifierDecl	* resname = name		1482839	0					
ANR	1482855	IdentifierDeclType	char *		1482839	0					
ANR	1482856	Identifier	resname		1482839	1					
ANR	1482857	AssignmentExpression	* resname = name		1482839	2		=			
ANR	1482858	Identifier	name		1482839	0					
ANR	1482859	Identifier	name		1482839	1					
ANR	1482860	Statement	const	36:1:708:712	1482839	2	True				
ANR	1482861	Statement	char	36:7:714:717	1482839	3	True				
ANR	1482862	Statement	*	36:12:719:719	1482839	4	True				
ANR	1482863	Statement	uname	36:13:720:724	1482839	5	True				
ANR	1482864	Statement	=	36:19:726:726	1482839	6	True				
ANR	1482865	Statement	sdb_fmt	36:21:728:734	1482839	7	True				
ANR	1482866	Statement	(	36:29:736:736	1482839	8	True				
ANR	1482867	Statement	"""%"""	36:30:737:739	1482839	9	True				
ANR	1482868	Statement	PFMT64x	36:34:741:747	1482839	10	True				
ANR	1482869	Statement	""".%s"""	36:42:749:753	1482839	11	True				
ANR	1482870	Statement	","	36:47:754:754	1482839	12	True				
ANR	1482871	Statement	vaddr	36:49:756:760	1482839	13	True				
ANR	1482872	Statement	","	36:54:761:761	1482839	14	True				
ANR	1482873	Statement	resname	36:56:763:769	1482839	15	True				
ANR	1482874	Statement	)	36:63:770:770	1482839	16	True				
ANR	1482875	ExpressionStatement		36:64:771:771	1482839	17	True				
ANR	1482876	IdentifierDeclStatement	ut32 vhash = sdb_hash ( uname ) ;	37:1:774:803	1482839	18	True				
ANR	1482877	IdentifierDecl	vhash = sdb_hash ( uname )		1482839	0					
ANR	1482878	IdentifierDeclType	ut32		1482839	0					
ANR	1482879	Identifier	vhash		1482839	1					
ANR	1482880	AssignmentExpression	vhash = sdb_hash ( uname )		1482839	2		=			
ANR	1482881	Identifier	vhash		1482839	0					
ANR	1482882	CallExpression	sdb_hash ( uname )		1482839	1					
ANR	1482883	Callee	sdb_hash		1482839	0					
ANR	1482884	Identifier	sdb_hash		1482839	0					
ANR	1482885	ArgumentList	uname		1482839	1					
ANR	1482886	Argument	uname		1482839	0					
ANR	1482887	Identifier	uname		1482839	0					
ANR	1482888	IdentifierDeclStatement	ut32 hash = sdb_hash ( resname ) ;	38:1:829:859	1482839	19	True				
ANR	1482889	IdentifierDecl	hash = sdb_hash ( resname )		1482839	0					
ANR	1482890	IdentifierDeclType	ut32		1482839	0					
ANR	1482891	Identifier	hash		1482839	1					
ANR	1482892	AssignmentExpression	hash = sdb_hash ( resname )		1482839	2		=			
ANR	1482893	Identifier	hash		1482839	0					
ANR	1482894	CallExpression	sdb_hash ( resname )		1482839	1					
ANR	1482895	Callee	sdb_hash		1482839	0					
ANR	1482896	Identifier	sdb_hash		1482839	0					
ANR	1482897	ArgumentList	resname		1482839	1					
ANR	1482898	Argument	resname		1482839	0					
ANR	1482899	Identifier	resname		1482839	0					
ANR	1482900	IdentifierDeclStatement	"int count = sdb_num_inc ( db , sdb_fmt ( ""%x"" , hash ) , 1 , 0 ) ;"	39:1:922:978	1482839	20	True				
ANR	1482901	IdentifierDecl	"count = sdb_num_inc ( db , sdb_fmt ( ""%x"" , hash ) , 1 , 0 )"		1482839	0					
ANR	1482902	IdentifierDeclType	int		1482839	0					
ANR	1482903	Identifier	count		1482839	1					
ANR	1482904	AssignmentExpression	"count = sdb_num_inc ( db , sdb_fmt ( ""%x"" , hash ) , 1 , 0 )"		1482839	2		=			
ANR	1482905	Identifier	count		1482839	0					
ANR	1482906	CallExpression	"sdb_num_inc ( db , sdb_fmt ( ""%x"" , hash ) , 1 , 0 )"		1482839	1					
ANR	1482907	Callee	sdb_num_inc		1482839	0					
ANR	1482908	Identifier	sdb_num_inc		1482839	0					
ANR	1482909	ArgumentList	db		1482839	1					
ANR	1482910	Argument	db		1482839	0					
ANR	1482911	Identifier	db		1482839	0					
ANR	1482912	Argument	"sdb_fmt ( ""%x"" , hash )"		1482839	1					
ANR	1482913	CallExpression	"sdb_fmt ( ""%x"" , hash )"		1482839	0					
ANR	1482914	Callee	sdb_fmt		1482839	0					
ANR	1482915	Identifier	sdb_fmt		1482839	0					
ANR	1482916	ArgumentList	"""%x"""		1482839	1					
ANR	1482917	Argument	"""%x"""		1482839	0					
ANR	1482918	PrimaryExpression	"""%x"""		1482839	0					
ANR	1482919	Argument	hash		1482839	1					
ANR	1482920	Identifier	hash		1482839	0					
ANR	1482921	Argument	1		1482839	2					
ANR	1482922	PrimaryExpression	1		1482839	0					
ANR	1482923	Argument	0		1482839	3					
ANR	1482924	PrimaryExpression	0		1482839	0					
ANR	1482925	IfStatement	"if ( sdb_exists ( db , sdb_fmt ( ""%x"" , vhash ) ) )"		1482839	21					
ANR	1482926	Condition	"sdb_exists ( db , sdb_fmt ( ""%x"" , vhash ) )"	41:5:986:1023	1482839	0	True				
ANR	1482927	CallExpression	"sdb_exists ( db , sdb_fmt ( ""%x"" , vhash ) )"		1482839	0					
ANR	1482928	Callee	sdb_exists		1482839	0					
ANR	1482929	Identifier	sdb_exists		1482839	0					
ANR	1482930	ArgumentList	db		1482839	1					
ANR	1482931	Argument	db		1482839	0					
ANR	1482932	Identifier	db		1482839	0					
ANR	1482933	Argument	"sdb_fmt ( ""%x"" , vhash )"		1482839	1					
ANR	1482934	CallExpression	"sdb_fmt ( ""%x"" , vhash )"		1482839	0					
ANR	1482935	Callee	sdb_fmt		1482839	0					
ANR	1482936	Identifier	sdb_fmt		1482839	0					
ANR	1482937	ArgumentList	"""%x"""		1482839	1					
ANR	1482938	Argument	"""%x"""		1482839	0					
ANR	1482939	PrimaryExpression	"""%x"""		1482839	0					
ANR	1482940	Argument	vhash		1482839	1					
ANR	1482941	Identifier	vhash		1482839	0					
ANR	1482942	CompoundStatement		10:45:386:386	1482839	1					
ANR	1482943	ReturnStatement	return resname ;	43:2:1085:1099	1482839	0	True				
ANR	1482944	Identifier	resname		1482839	0					
ANR	1482945	ExpressionStatement	"sdb_num_set ( db , sdb_fmt ( ""%x"" , vhash ) , 1 , 0 )"	45:1:1105:1150	1482839	22	True				
ANR	1482946	CallExpression	"sdb_num_set ( db , sdb_fmt ( ""%x"" , vhash ) , 1 , 0 )"		1482839	0					
ANR	1482947	Callee	sdb_num_set		1482839	0					
ANR	1482948	Identifier	sdb_num_set		1482839	0					
ANR	1482949	ArgumentList	db		1482839	1					
ANR	1482950	Argument	db		1482839	0					
ANR	1482951	Identifier	db		1482839	0					
ANR	1482952	Argument	"sdb_fmt ( ""%x"" , vhash )"		1482839	1					
ANR	1482953	CallExpression	"sdb_fmt ( ""%x"" , vhash )"		1482839	0					
ANR	1482954	Callee	sdb_fmt		1482839	0					
ANR	1482955	Identifier	sdb_fmt		1482839	0					
ANR	1482956	ArgumentList	"""%x"""		1482839	1					
ANR	1482957	Argument	"""%x"""		1482839	0					
ANR	1482958	PrimaryExpression	"""%x"""		1482839	0					
ANR	1482959	Argument	vhash		1482839	1					
ANR	1482960	Identifier	vhash		1482839	0					
ANR	1482961	Argument	1		1482839	2					
ANR	1482962	PrimaryExpression	1		1482839	0					
ANR	1482963	Argument	0		1482839	3					
ANR	1482964	PrimaryExpression	0		1482839	0					
ANR	1482965	IfStatement	if ( vaddr )		1482839	23					
ANR	1482966	Condition	vaddr	46:5:1157:1161	1482839	0	True				
ANR	1482967	Identifier	vaddr		1482839	0					
ANR	1482968	CompoundStatement		16:2:528:564	1482839	1					
ANR	1482969	IdentifierDeclStatement	"char * p = __hashify ( resname , vaddr ) ;"	47:2:1168:1204	1482839	0	True				
ANR	1482970	IdentifierDecl	"* p = __hashify ( resname , vaddr )"		1482839	0					
ANR	1482971	IdentifierDeclType	char *		1482839	0					
ANR	1482972	Identifier	p		1482839	1					
ANR	1482973	AssignmentExpression	"* p = __hashify ( resname , vaddr )"		1482839	2		=			
ANR	1482974	Identifier	p		1482839	0					
ANR	1482975	CallExpression	"__hashify ( resname , vaddr )"		1482839	1					
ANR	1482976	Callee	__hashify		1482839	0					
ANR	1482977	Identifier	__hashify		1482839	0					
ANR	1482978	ArgumentList	resname		1482839	1					
ANR	1482979	Argument	resname		1482839	0					
ANR	1482980	Identifier	resname		1482839	0					
ANR	1482981	Argument	vaddr		1482839	1					
ANR	1482982	Identifier	vaddr		1482839	0					
ANR	1482983	IfStatement	if ( p )		1482839	1					
ANR	1482984	Condition	p	48:6:1212:1212	1482839	0	True				
ANR	1482985	Identifier	p		1482839	0					
ANR	1482986	CompoundStatement		17:9:575:575	1482839	1					
ANR	1482987	ExpressionStatement	resname = p	49:3:1220:1231	1482839	0	True				
ANR	1482988	AssignmentExpression	resname = p		1482839	0		=			
ANR	1482989	Identifier	resname		1482839	0					
ANR	1482990	Identifier	p		1482839	1					
ANR	1482991	IfStatement	if ( count > 1 )		1482839	24					
ANR	1482992	Condition	count > 1	52:5:1245:1253	1482839	0	True				
ANR	1482993	RelationalExpression	count > 1		1482839	0		>			
ANR	1482994	Identifier	count		1482839	0					
ANR	1482995	PrimaryExpression	1		1482839	1					
ANR	1482996	CompoundStatement		22:2:620:671	1482839	1					
ANR	1482997	IdentifierDeclStatement	"char * p = r_str_appendf ( resname , ""_%d"" , count - 1 ) ;"	53:2:1260:1311	1482839	0	True				
ANR	1482998	IdentifierDecl	"* p = r_str_appendf ( resname , ""_%d"" , count - 1 )"		1482839	0					
ANR	1482999	IdentifierDeclType	char *		1482839	0					
ANR	1483000	Identifier	p		1482839	1					
ANR	1483001	AssignmentExpression	"* p = r_str_appendf ( resname , ""_%d"" , count - 1 )"		1482839	2		=			
ANR	1483002	Identifier	p		1482839	0					
ANR	1483003	CallExpression	"r_str_appendf ( resname , ""_%d"" , count - 1 )"		1482839	1					
ANR	1483004	Callee	r_str_appendf		1482839	0					
ANR	1483005	Identifier	r_str_appendf		1482839	0					
ANR	1483006	ArgumentList	resname		1482839	1					
ANR	1483007	Argument	resname		1482839	0					
ANR	1483008	Identifier	resname		1482839	0					
ANR	1483009	Argument	"""_%d"""		1482839	1					
ANR	1483010	PrimaryExpression	"""_%d"""		1482839	0					
ANR	1483011	Argument	count - 1		1482839	2					
ANR	1483012	AdditiveExpression	count - 1		1482839	0		-			
ANR	1483013	Identifier	count		1482839	0					
ANR	1483014	PrimaryExpression	1		1482839	1					
ANR	1483015	IfStatement	if ( p )		1482839	1					
ANR	1483016	Condition	p	54:6:1319:1319	1482839	0	True				
ANR	1483017	Identifier	p		1482839	0					
ANR	1483018	CompoundStatement		23:9:682:682	1482839	1					
ANR	1483019	ExpressionStatement	resname = p	55:3:1327:1338	1482839	0	True				
ANR	1483020	AssignmentExpression	resname = p		1482839	0		=			
ANR	1483021	Identifier	resname		1482839	0					
ANR	1483022	Identifier	p		1482839	1					
ANR	1483023	ReturnStatement	return resname ;	61:1:1458:1472	1482839	25	True				
ANR	1483024	Identifier	resname		1482839	0					
ANR	1483025	ReturnType	R_API char *		1482839	1					
ANR	1483026	Identifier	r_bin_filter_name		1482839	2					
ANR	1483027	ParameterList	"RBinFile * bf , Sdb * db , ut64 vaddr , char * name"		1482839	3					
ANR	1483028	Parameter	RBinFile * bf	32:30:592:603	1482839	0	True				
ANR	1483029	ParameterType	RBinFile *		1482839	0					
ANR	1483030	Identifier	bf		1482839	1					
ANR	1483031	Parameter	Sdb * db	32:44:606:612	1482839	1	True				
ANR	1483032	ParameterType	Sdb *		1482839	0					
ANR	1483033	Identifier	db		1482839	1					
ANR	1483034	Parameter	ut64 vaddr	32:53:615:624	1482839	2	True				
ANR	1483035	ParameterType	ut64		1482839	0					
ANR	1483036	Identifier	vaddr		1482839	1					
ANR	1483037	Parameter	char * name	32:65:627:636	1482839	3	True				
ANR	1483038	ParameterType	char *		1482839	0					
ANR	1483039	Identifier	name		1482839	1					
ANR	1483040	CFGEntryNode	ENTRY		1482839		True				
ANR	1483041	CFGExitNode	EXIT		1482839		True				
ANR	1483042	Symbol	sdb_hash		1482839						
ANR	1483043	Symbol	NULL		1482839						
ANR	1483044	Symbol	bf		1482839						
ANR	1483045	Symbol	uname		1482839						
ANR	1483046	Symbol	__hashify		1482839						
ANR	1483047	Symbol	count		1482839						
ANR	1483048	Symbol	sdb_exists		1482839						
ANR	1483049	Symbol	vaddr		1482839						
ANR	1483050	Symbol	vhash		1482839						
ANR	1483051	Symbol	resname		1482839						
ANR	1483052	Symbol	p		1482839						
ANR	1483053	Symbol	r_str_appendf		1482839						
ANR	1483054	Symbol	name		1482839						
ANR	1483055	Symbol	sdb_num_inc		1482839						
ANR	1483056	Symbol	sdb_fmt		1482839						
ANR	1483057	Symbol	db		1482839						
ANR	1483058	Symbol	hash		1482839						
ANR	1483059	Function	r_bin_filter_sym	64:0:1477:2928							
ANR	1483060	FunctionDef	"r_bin_filter_sym (RBinFile * bf , HtPP * ht , ut64 vaddr , RBinSymbol * sym)"		1483059	0					
ANR	1483061	CompoundStatement		64:81:1558:2928	1483059	0					
ANR	1483062	ExpressionStatement	r_return_if_fail ( ht && sym && sym -> name )	65:1:1561:1602	1483059	0	True				
ANR	1483063	CallExpression	r_return_if_fail ( ht && sym && sym -> name )		1483059	0					
ANR	1483064	Callee	r_return_if_fail		1483059	0					
ANR	1483065	Identifier	r_return_if_fail		1483059	0					
ANR	1483066	ArgumentList	ht && sym && sym -> name		1483059	1					
ANR	1483067	Argument	ht && sym && sym -> name		1483059	0					
ANR	1483068	AndExpression	ht && sym && sym -> name		1483059	0		&&			
ANR	1483069	Identifier	ht		1483059	0					
ANR	1483070	AndExpression	sym && sym -> name		1483059	1		&&			
ANR	1483071	Identifier	sym		1483059	0					
ANR	1483072	PtrMemberAccess	sym -> name		1483059	1					
ANR	1483073	Identifier	sym		1483059	0					
ANR	1483074	Identifier	name		1483059	1					
ANR	1483075	IdentifierDeclStatement	const char * name = sym -> name ;	66:1:1605:1633	1483059	1	True				
ANR	1483076	IdentifierDecl	* name = sym -> name		1483059	0					
ANR	1483077	IdentifierDeclType	const char *		1483059	0					
ANR	1483078	Identifier	name		1483059	1					
ANR	1483079	AssignmentExpression	* name = sym -> name		1483059	2		=			
ANR	1483080	Identifier	name		1483059	0					
ANR	1483081	PtrMemberAccess	sym -> name		1483059	1					
ANR	1483082	Identifier	sym		1483059	0					
ANR	1483083	Identifier	name		1483059	1					
ANR	1483084	IfStatement	if ( bf && bf -> o && bf -> o -> lang )		1483059	2					
ANR	1483085	Condition	bf && bf -> o && bf -> o -> lang	69:5:1747:1772	1483059	0	True				
ANR	1483086	AndExpression	bf && bf -> o && bf -> o -> lang		1483059	0		&&			
ANR	1483087	Identifier	bf		1483059	0					
ANR	1483088	AndExpression	bf -> o && bf -> o -> lang		1483059	1		&&			
ANR	1483089	PtrMemberAccess	bf -> o		1483059	0					
ANR	1483090	Identifier	bf		1483059	0					
ANR	1483091	Identifier	o		1483059	1					
ANR	1483092	PtrMemberAccess	bf -> o -> lang		1483059	1					
ANR	1483093	PtrMemberAccess	bf -> o		1483059	0					
ANR	1483094	Identifier	bf		1483059	0					
ANR	1483095	Identifier	o		1483059	1					
ANR	1483096	Identifier	lang		1483059	1					
ANR	1483097	CompoundStatement		8:2:276:342	1483059	1					
ANR	1483098	IdentifierDeclStatement	const char * lang = r_bin_lang_tostring ( bf -> o -> lang ) ;	70:2:1779:1831	1483059	0	True				
ANR	1483099	IdentifierDecl	* lang = r_bin_lang_tostring ( bf -> o -> lang )		1483059	0					
ANR	1483100	IdentifierDeclType	const char *		1483059	0					
ANR	1483101	Identifier	lang		1483059	1					
ANR	1483102	AssignmentExpression	* lang = r_bin_lang_tostring ( bf -> o -> lang )		1483059	2		=			
ANR	1483103	Identifier	lang		1483059	0					
ANR	1483104	CallExpression	r_bin_lang_tostring ( bf -> o -> lang )		1483059	1					
ANR	1483105	Callee	r_bin_lang_tostring		1483059	0					
ANR	1483106	Identifier	r_bin_lang_tostring		1483059	0					
ANR	1483107	ArgumentList	bf -> o -> lang		1483059	1					
ANR	1483108	Argument	bf -> o -> lang		1483059	0					
ANR	1483109	PtrMemberAccess	bf -> o -> lang		1483059	0					
ANR	1483110	PtrMemberAccess	bf -> o		1483059	0					
ANR	1483111	Identifier	bf		1483059	0					
ANR	1483112	Identifier	o		1483059	1					
ANR	1483113	Identifier	lang		1483059	1					
ANR	1483114	IdentifierDeclStatement	"char * dn = r_bin_demangle ( bf , lang , sym -> name , sym -> vaddr , false ) ;"	71:2:1835:1901	1483059	1	True				
ANR	1483115	IdentifierDecl	"* dn = r_bin_demangle ( bf , lang , sym -> name , sym -> vaddr , false )"		1483059	0					
ANR	1483116	IdentifierDeclType	char *		1483059	0					
ANR	1483117	Identifier	dn		1483059	1					
ANR	1483118	AssignmentExpression	"* dn = r_bin_demangle ( bf , lang , sym -> name , sym -> vaddr , false )"		1483059	2		=			
ANR	1483119	Identifier	dn		1483059	0					
ANR	1483120	CallExpression	"r_bin_demangle ( bf , lang , sym -> name , sym -> vaddr , false )"		1483059	1					
ANR	1483121	Callee	r_bin_demangle		1483059	0					
ANR	1483122	Identifier	r_bin_demangle		1483059	0					
ANR	1483123	ArgumentList	bf		1483059	1					
ANR	1483124	Argument	bf		1483059	0					
ANR	1483125	Identifier	bf		1483059	0					
ANR	1483126	Argument	lang		1483059	1					
ANR	1483127	Identifier	lang		1483059	0					
ANR	1483128	Argument	sym -> name		1483059	2					
ANR	1483129	PtrMemberAccess	sym -> name		1483059	0					
ANR	1483130	Identifier	sym		1483059	0					
ANR	1483131	Identifier	name		1483059	1					
ANR	1483132	Argument	sym -> vaddr		1483059	3					
ANR	1483133	PtrMemberAccess	sym -> vaddr		1483059	0					
ANR	1483134	Identifier	sym		1483059	0					
ANR	1483135	Identifier	vaddr		1483059	1					
ANR	1483136	Argument	false		1483059	4					
ANR	1483137	Identifier	false		1483059	0					
ANR	1483138	IfStatement	if ( dn && * dn )		1483059	2					
ANR	1483139	Condition	dn && * dn	72:6:1909:1917	1483059	0	True				
ANR	1483140	AndExpression	dn && * dn		1483059	0		&&			
ANR	1483141	Identifier	dn		1483059	0					
ANR	1483142	UnaryOperationExpression	* dn		1483059	1					
ANR	1483143	UnaryOperator	*		1483059	0					
ANR	1483144	Identifier	dn		1483059	1					
ANR	1483145	CompoundStatement		15:3:586:612	1483059	1					
ANR	1483146	ExpressionStatement	sym -> dname = dn	73:3:1925:1940	1483059	0	True				
ANR	1483147	AssignmentExpression	sym -> dname = dn		1483059	0		=			
ANR	1483148	PtrMemberAccess	sym -> dname		1483059	0					
ANR	1483149	Identifier	sym		1483059	0					
ANR	1483150	Identifier	dname		1483059	1					
ANR	1483151	Identifier	dn		1483059	1					
ANR	1483152	ExpressionStatement	sym -> name = dn	76:3:2067:2081	1483059	1	True				
ANR	1483153	AssignmentExpression	sym -> name = dn		1483059	0		=			
ANR	1483154	PtrMemberAccess	sym -> name		1483059	0					
ANR	1483155	Identifier	sym		1483059	0					
ANR	1483156	Identifier	name		1483059	1					
ANR	1483157	Identifier	dn		1483059	1					
ANR	1483158	IdentifierDeclStatement	"char * p = strchr ( dn , '.' ) ;"	78:3:2145:2171	1483059	2	True				
ANR	1483159	IdentifierDecl	"* p = strchr ( dn , '.' )"		1483059	0					
ANR	1483160	IdentifierDeclType	char *		1483059	0					
ANR	1483161	Identifier	p		1483059	1					
ANR	1483162	AssignmentExpression	"* p = strchr ( dn , '.' )"		1483059	2		=			
ANR	1483163	Identifier	p		1483059	0					
ANR	1483164	CallExpression	"strchr ( dn , '.' )"		1483059	1					
ANR	1483165	Callee	strchr		1483059	0					
ANR	1483166	Identifier	strchr		1483059	0					
ANR	1483167	ArgumentList	dn		1483059	1					
ANR	1483168	Argument	dn		1483059	0					
ANR	1483169	Identifier	dn		1483059	0					
ANR	1483170	Argument	'.'		1483059	1					
ANR	1483171	PrimaryExpression	'.'		1483059	0					
ANR	1483172	IfStatement	if ( p )		1483059	3					
ANR	1483173	Condition	p	79:7:2180:2180	1483059	0	True				
ANR	1483174	Identifier	p		1483059	0					
ANR	1483175	CompoundStatement		16:10:624:624	1483059	1					
ANR	1483176	IfStatement	if ( IS_UPPER ( * dn ) )		1483059	0					
ANR	1483177	Condition	IS_UPPER ( * dn )	80:8:2193:2206	1483059	0	True				
ANR	1483178	CallExpression	IS_UPPER ( * dn )		1483059	0					
ANR	1483179	Callee	IS_UPPER		1483059	0					
ANR	1483180	Identifier	IS_UPPER		1483059	0					
ANR	1483181	ArgumentList	* dn		1483059	1					
ANR	1483182	Argument	* dn		1483059	0					
ANR	1483183	UnaryOperationExpression	* dn		1483059	0					
ANR	1483184	UnaryOperator	*		1483059	0					
ANR	1483185	Identifier	dn		1483059	1					
ANR	1483186	CompoundStatement		17:24:650:650	1483059	1					
ANR	1483187	ExpressionStatement	sym -> classname = strdup ( dn )	81:5:2216:2244	1483059	0	True				
ANR	1483188	AssignmentExpression	sym -> classname = strdup ( dn )		1483059	0		=			
ANR	1483189	PtrMemberAccess	sym -> classname		1483059	0					
ANR	1483190	Identifier	sym		1483059	0					
ANR	1483191	Identifier	classname		1483059	1					
ANR	1483192	CallExpression	strdup ( dn )		1483059	1					
ANR	1483193	Callee	strdup		1483059	0					
ANR	1483194	Identifier	strdup		1483059	0					
ANR	1483195	ArgumentList	dn		1483059	1					
ANR	1483196	Argument	dn		1483059	0					
ANR	1483197	Identifier	dn		1483059	0					
ANR	1483198	ExpressionStatement	sym -> classname [ p - dn ] = 0	82:5:2251:2277	1483059	1	True				
ANR	1483199	AssignmentExpression	sym -> classname [ p - dn ] = 0		1483059	0		=			
ANR	1483200	ArrayIndexing	sym -> classname [ p - dn ]		1483059	0					
ANR	1483201	PtrMemberAccess	sym -> classname		1483059	0					
ANR	1483202	Identifier	sym		1483059	0					
ANR	1483203	Identifier	classname		1483059	1					
ANR	1483204	AdditiveExpression	p - dn		1483059	1		-			
ANR	1483205	Identifier	p		1483059	0					
ANR	1483206	Identifier	dn		1483059	1					
ANR	1483207	PrimaryExpression	0		1483059	1					
ANR	1483208	ElseStatement	else		1483059	0					
ANR	1483209	IfStatement	if ( IS_UPPER ( p [ 1 ] ) )		1483059	0					
ANR	1483210	Condition	IS_UPPER ( p [ 1 ] )	83:15:2294:2308	1483059	0	True				
ANR	1483211	CallExpression	IS_UPPER ( p [ 1 ] )		1483059	0					
ANR	1483212	Callee	IS_UPPER		1483059	0					
ANR	1483213	Identifier	IS_UPPER		1483059	0					
ANR	1483214	ArgumentList	p [ 1 ]		1483059	1					
ANR	1483215	Argument	p [ 1 ]		1483059	0					
ANR	1483216	ArrayIndexing	p [ 1 ]		1483059	0					
ANR	1483217	Identifier	p		1483059	0					
ANR	1483218	PrimaryExpression	1		1483059	1					
ANR	1483219	CompoundStatement		20:32:752:752	1483059	1					
ANR	1483220	ExpressionStatement	sym -> classname = strdup ( p + 1 )	84:5:2318:2349	1483059	0	True				
ANR	1483221	AssignmentExpression	sym -> classname = strdup ( p + 1 )		1483059	0		=			
ANR	1483222	PtrMemberAccess	sym -> classname		1483059	0					
ANR	1483223	Identifier	sym		1483059	0					
ANR	1483224	Identifier	classname		1483059	1					
ANR	1483225	CallExpression	strdup ( p + 1 )		1483059	1					
ANR	1483226	Callee	strdup		1483059	0					
ANR	1483227	Identifier	strdup		1483059	0					
ANR	1483228	ArgumentList	p + 1		1483059	1					
ANR	1483229	Argument	p + 1		1483059	0					
ANR	1483230	AdditiveExpression	p + 1		1483059	0		+			
ANR	1483231	Identifier	p		1483059	0					
ANR	1483232	PrimaryExpression	1		1483059	1					
ANR	1483233	ExpressionStatement	"p = strchr ( sym -> classname , '.' )"	85:5:2356:2388	1483059	1	True				
ANR	1483234	AssignmentExpression	"p = strchr ( sym -> classname , '.' )"		1483059	0		=			
ANR	1483235	Identifier	p		1483059	0					
ANR	1483236	CallExpression	"strchr ( sym -> classname , '.' )"		1483059	1					
ANR	1483237	Callee	strchr		1483059	0					
ANR	1483238	Identifier	strchr		1483059	0					
ANR	1483239	ArgumentList	sym -> classname		1483059	1					
ANR	1483240	Argument	sym -> classname		1483059	0					
ANR	1483241	PtrMemberAccess	sym -> classname		1483059	0					
ANR	1483242	Identifier	sym		1483059	0					
ANR	1483243	Identifier	classname		1483059	1					
ANR	1483244	Argument	'.'		1483059	1					
ANR	1483245	PrimaryExpression	'.'		1483059	0					
ANR	1483246	IfStatement	if ( p )		1483059	2					
ANR	1483247	Condition	p	86:9:2399:2399	1483059	0	True				
ANR	1483248	Identifier	p		1483059	0					
ANR	1483249	CompoundStatement		23:12:843:843	1483059	1					
ANR	1483250	ExpressionStatement	* p = 0	87:6:2410:2416	1483059	0	True				
ANR	1483251	AssignmentExpression	* p = 0		1483059	0		=			
ANR	1483252	UnaryOperationExpression	* p		1483059	0					
ANR	1483253	UnaryOperator	*		1483059	0					
ANR	1483254	Identifier	p		1483059	1					
ANR	1483255	PrimaryExpression	0		1483059	1					
ANR	1483256	Statement	const	94:1:2445:2449	1483059	3	True				
ANR	1483257	Statement	char	94:7:2451:2454	1483059	4	True				
ANR	1483258	Statement	*	94:12:2456:2456	1483059	5	True				
ANR	1483259	Statement	uname	94:13:2457:2461	1483059	6	True				
ANR	1483260	Statement	=	94:19:2463:2463	1483059	7	True				
ANR	1483261	Statement	sdb_fmt	94:21:2465:2471	1483059	8	True				
ANR	1483262	Statement	(	94:29:2473:2473	1483059	9	True				
ANR	1483263	Statement	"""%"""	94:30:2474:2476	1483059	10	True				
ANR	1483264	Statement	PFMT64x	94:34:2478:2484	1483059	11	True				
ANR	1483265	Statement	""".%s"""	94:42:2486:2490	1483059	12	True				
ANR	1483266	Statement	","	94:47:2491:2491	1483059	13	True				
ANR	1483267	Statement	vaddr	94:49:2493:2497	1483059	14	True				
ANR	1483268	Statement	","	94:54:2498:2498	1483059	15	True				
ANR	1483269	Statement	name	94:56:2500:2503	1483059	16	True				
ANR	1483270	Statement	)	94:60:2504:2504	1483059	17	True				
ANR	1483271	ExpressionStatement		94:61:2505:2505	1483059	18	True				
ANR	1483272	IdentifierDeclStatement	"bool res = ht_pp_insert ( ht , uname , sym ) ;"	95:1:2508:2548	1483059	19	True				
ANR	1483273	IdentifierDecl	"res = ht_pp_insert ( ht , uname , sym )"		1483059	0					
ANR	1483274	IdentifierDeclType	bool		1483059	0					
ANR	1483275	Identifier	res		1483059	1					
ANR	1483276	AssignmentExpression	"res = ht_pp_insert ( ht , uname , sym )"		1483059	2		=			
ANR	1483277	Identifier	res		1483059	0					
ANR	1483278	CallExpression	"ht_pp_insert ( ht , uname , sym )"		1483059	1					
ANR	1483279	Callee	ht_pp_insert		1483059	0					
ANR	1483280	Identifier	ht_pp_insert		1483059	0					
ANR	1483281	ArgumentList	ht		1483059	1					
ANR	1483282	Argument	ht		1483059	0					
ANR	1483283	Identifier	ht		1483059	0					
ANR	1483284	Argument	uname		1483059	1					
ANR	1483285	Identifier	uname		1483059	0					
ANR	1483286	Argument	sym		1483059	2					
ANR	1483287	Identifier	sym		1483059	0					
ANR	1483288	IfStatement	if ( ! res )		1483059	20					
ANR	1483289	Condition	! res	96:5:2555:2558	1483059	0	True				
ANR	1483290	UnaryOperationExpression	! res		1483059	0					
ANR	1483291	UnaryOperator	!		1483059	0					
ANR	1483292	Identifier	res		1483059	1					
ANR	1483293	CompoundStatement		33:11:1002:1002	1483059	1					
ANR	1483294	ReturnStatement	return ;	97:2:2565:2571	1483059	0	True				
ANR	1483295	ExpressionStatement	sym -> dup_count = 0	99:1:2577:2595	1483059	21	True				
ANR	1483296	AssignmentExpression	sym -> dup_count = 0		1483059	0		=			
ANR	1483297	PtrMemberAccess	sym -> dup_count		1483059	0					
ANR	1483298	Identifier	sym		1483059	0					
ANR	1483299	Identifier	dup_count		1483059	1					
ANR	1483300	PrimaryExpression	0		1483059	1					
ANR	1483301	Statement	const	101:1:2599:2603	1483059	22	True				
ANR	1483302	Statement	char	101:7:2605:2608	1483059	23	True				
ANR	1483303	Statement	*	101:12:2610:2610	1483059	24	True				
ANR	1483304	Statement	oname	101:13:2611:2615	1483059	25	True				
ANR	1483305	Statement	=	101:19:2617:2617	1483059	26	True				
ANR	1483306	Statement	sdb_fmt	101:21:2619:2625	1483059	27	True				
ANR	1483307	Statement	(	101:29:2627:2627	1483059	28	True				
ANR	1483308	Statement	"""o.%"""	101:30:2628:2632	1483059	29	True				
ANR	1483309	Statement	PFMT64x	101:36:2634:2640	1483059	30	True				
ANR	1483310	Statement	""".%s"""	101:44:2642:2646	1483059	31	True				
ANR	1483311	Statement	","	101:49:2647:2647	1483059	32	True				
ANR	1483312	Statement	0	101:51:2649:2649	1483059	33	True				
ANR	1483313	Statement	","	101:52:2650:2650	1483059	34	True				
ANR	1483314	Statement	name	101:54:2652:2655	1483059	35	True				
ANR	1483315	Statement	)	101:58:2656:2656	1483059	36	True				
ANR	1483316	ExpressionStatement		101:59:2657:2657	1483059	37	True				
ANR	1483317	IdentifierDeclStatement	"RBinSymbol * prev_sym = ht_pp_find ( ht , oname , NULL ) ;"	102:1:2660:2711	1483059	38	True				
ANR	1483318	IdentifierDecl	"* prev_sym = ht_pp_find ( ht , oname , NULL )"		1483059	0					
ANR	1483319	IdentifierDeclType	RBinSymbol *		1483059	0					
ANR	1483320	Identifier	prev_sym		1483059	1					
ANR	1483321	AssignmentExpression	"* prev_sym = ht_pp_find ( ht , oname , NULL )"		1483059	2		=			
ANR	1483322	Identifier	prev_sym		1483059	0					
ANR	1483323	CallExpression	"ht_pp_find ( ht , oname , NULL )"		1483059	1					
ANR	1483324	Callee	ht_pp_find		1483059	0					
ANR	1483325	Identifier	ht_pp_find		1483059	0					
ANR	1483326	ArgumentList	ht		1483059	1					
ANR	1483327	Argument	ht		1483059	0					
ANR	1483328	Identifier	ht		1483059	0					
ANR	1483329	Argument	oname		1483059	1					
ANR	1483330	Identifier	oname		1483059	0					
ANR	1483331	Argument	NULL		1483059	2					
ANR	1483332	Identifier	NULL		1483059	0					
ANR	1483333	IfStatement	if ( ! prev_sym )		1483059	39					
ANR	1483334	Condition	! prev_sym	103:5:2718:2726	1483059	0	True				
ANR	1483335	UnaryOperationExpression	! prev_sym		1483059	0					
ANR	1483336	UnaryOperator	!		1483059	0					
ANR	1483337	Identifier	prev_sym		1483059	1					
ANR	1483338	CompoundStatement		40:16:1170:1170	1483059	1					
ANR	1483339	IfStatement	"if ( ! ht_pp_insert ( ht , oname , sym ) )"		1483059	0					
ANR	1483340	Condition	"! ht_pp_insert ( ht , oname , sym )"	104:6:2737:2766	1483059	0	True				
ANR	1483341	UnaryOperationExpression	"! ht_pp_insert ( ht , oname , sym )"		1483059	0					
ANR	1483342	UnaryOperator	!		1483059	0					
ANR	1483343	CallExpression	"ht_pp_insert ( ht , oname , sym )"		1483059	1					
ANR	1483344	Callee	ht_pp_insert		1483059	0					
ANR	1483345	Identifier	ht_pp_insert		1483059	0					
ANR	1483346	ArgumentList	ht		1483059	1					
ANR	1483347	Argument	ht		1483059	0					
ANR	1483348	Identifier	ht		1483059	0					
ANR	1483349	Argument	oname		1483059	1					
ANR	1483350	Identifier	oname		1483059	0					
ANR	1483351	Argument	sym		1483059	2					
ANR	1483352	Identifier	sym		1483059	0					
ANR	1483353	CompoundStatement		41:38:1210:1210	1483059	1					
ANR	1483354	ExpressionStatement	"R_LOG_WARN ( ""Failed to insert dup_count in ht"" )"	105:3:2774:2821	1483059	0	True				
ANR	1483355	CallExpression	"R_LOG_WARN ( ""Failed to insert dup_count in ht"" )"		1483059	0					
ANR	1483356	Callee	R_LOG_WARN		1483059	0					
ANR	1483357	Identifier	R_LOG_WARN		1483059	0					
ANR	1483358	ArgumentList	"""Failed to insert dup_count in ht"""		1483059	1					
ANR	1483359	Argument	"""Failed to insert dup_count in ht"""		1483059	0					
ANR	1483360	PrimaryExpression	"""Failed to insert dup_count in ht"""		1483059	0					
ANR	1483361	ReturnStatement	return ;	106:3:2826:2832	1483059	1	True				
ANR	1483362	ElseStatement	else		1483059	0					
ANR	1483363	CompoundStatement		45:8:1287:1287	1483059	0					
ANR	1483364	ExpressionStatement	sym -> dup_count = prev_sym -> dup_count + 1	109:2:2850:2890	1483059	0	True				
ANR	1483365	AssignmentExpression	sym -> dup_count = prev_sym -> dup_count + 1		1483059	0		=			
ANR	1483366	PtrMemberAccess	sym -> dup_count		1483059	0					
ANR	1483367	Identifier	sym		1483059	0					
ANR	1483368	Identifier	dup_count		1483059	1					
ANR	1483369	AdditiveExpression	prev_sym -> dup_count + 1		1483059	1		+			
ANR	1483370	PtrMemberAccess	prev_sym -> dup_count		1483059	0					
ANR	1483371	Identifier	prev_sym		1483059	0					
ANR	1483372	Identifier	dup_count		1483059	1					
ANR	1483373	PrimaryExpression	1		1483059	1					
ANR	1483374	ExpressionStatement	"ht_pp_update ( ht , oname , sym )"	110:2:2894:2923	1483059	1	True				
ANR	1483375	CallExpression	"ht_pp_update ( ht , oname , sym )"		1483059	0					
ANR	1483376	Callee	ht_pp_update		1483059	0					
ANR	1483377	Identifier	ht_pp_update		1483059	0					
ANR	1483378	ArgumentList	ht		1483059	1					
ANR	1483379	Argument	ht		1483059	0					
ANR	1483380	Identifier	ht		1483059	0					
ANR	1483381	Argument	oname		1483059	1					
ANR	1483382	Identifier	oname		1483059	0					
ANR	1483383	Argument	sym		1483059	2					
ANR	1483384	Identifier	sym		1483059	0					
ANR	1483385	ReturnType	R_API void		1483059	1					
ANR	1483386	Identifier	r_bin_filter_sym		1483059	2					
ANR	1483387	ParameterList	"RBinFile * bf , HtPP * ht , ut64 vaddr , RBinSymbol * sym"		1483059	3					
ANR	1483388	Parameter	RBinFile * bf	64:28:1505:1516	1483059	0	True				
ANR	1483389	ParameterType	RBinFile *		1483059	0					
ANR	1483390	Identifier	bf		1483059	1					
ANR	1483391	Parameter	HtPP * ht	64:42:1519:1526	1483059	1	True				
ANR	1483392	ParameterType	HtPP *		1483059	0					
ANR	1483393	Identifier	ht		1483059	1					
ANR	1483394	Parameter	ut64 vaddr	64:52:1529:1538	1483059	2	True				
ANR	1483395	ParameterType	ut64		1483059	0					
ANR	1483396	Identifier	vaddr		1483059	1					
ANR	1483397	Parameter	RBinSymbol * sym	64:64:1541:1555	1483059	3	True				
ANR	1483398	ParameterType	RBinSymbol *		1483059	0					
ANR	1483399	Identifier	sym		1483059	1					
ANR	1483400	CFGEntryNode	ENTRY		1483059		True				
ANR	1483401	CFGExitNode	EXIT		1483059		True				
ANR	1483402	Symbol	sym -> classname		1483059						
ANR	1483403	Symbol	bf		1483059						
ANR	1483404	Symbol	sym		1483059						
ANR	1483405	Symbol	ht_pp_insert		1483059						
ANR	1483406	Symbol	r_bin_lang_tostring		1483059						
ANR	1483407	Symbol	strchr		1483059						
ANR	1483408	Symbol	dn		1483059						
ANR	1483409	Symbol	vaddr		1483059						
ANR	1483410	Symbol	ht		1483059						
ANR	1483411	Symbol	ht_pp_find		1483059						
ANR	1483412	Symbol	* bf -> o		1483059						
ANR	1483413	Symbol	* dn		1483059						
ANR	1483414	Symbol	prev_sym -> dup_count		1483059						
ANR	1483415	Symbol	bf -> o		1483059						
ANR	1483416	Symbol	r_bin_demangle		1483059						
ANR	1483417	Symbol	* prev_sym		1483059						
ANR	1483418	Symbol	* * sym		1483059						
ANR	1483419	Symbol	lang		1483059						
ANR	1483420	Symbol	sym -> dup_count		1483059						
ANR	1483421	Symbol	res		1483059						
ANR	1483422	Symbol	NULL		1483059						
ANR	1483423	Symbol	uname		1483059						
ANR	1483424	Symbol	sym -> vaddr		1483059						
ANR	1483425	Symbol	sym -> dname		1483059						
ANR	1483426	Symbol	IS_UPPER		1483059						
ANR	1483427	Symbol	false		1483059						
ANR	1483428	Symbol	* bf		1483059						
ANR	1483429	Symbol	bf -> o -> lang		1483059						
ANR	1483430	Symbol	p		1483059						
ANR	1483431	Symbol	* sym		1483059						
ANR	1483432	Symbol	* * bf		1483059						
ANR	1483433	Symbol	prev_sym		1483059						
ANR	1483434	Symbol	oname		1483059						
ANR	1483435	Symbol	sym -> name		1483059						
ANR	1483436	Symbol	name		1483059						
ANR	1483437	Symbol	* sym -> classname		1483059						
ANR	1483438	Symbol	* p		1483059						
ANR	1483439	Symbol	strdup		1483059						
ANR	1483440	Function	r_bin_filter_symbols	114:0:2931:3229							
ANR	1483441	FunctionDef	"r_bin_filter_symbols (RBinFile * bf , RList * list)"		1483440	0					
ANR	1483442	CompoundStatement		114:59:2990:3229	1483440	0					
ANR	1483443	IdentifierDeclStatement	HtPP * ht = ht_pp_new0 ( ) ;	115:1:2993:3017	1483440	0	True				
ANR	1483444	IdentifierDecl	* ht = ht_pp_new0 ( )		1483440	0					
ANR	1483445	IdentifierDeclType	HtPP *		1483440	0					
ANR	1483446	Identifier	ht		1483440	1					
ANR	1483447	AssignmentExpression	* ht = ht_pp_new0 ( )		1483440	2		=			
ANR	1483448	Identifier	ht		1483440	0					
ANR	1483449	CallExpression	ht_pp_new0 ( )		1483440	1					
ANR	1483450	Callee	ht_pp_new0		1483440	0					
ANR	1483451	Identifier	ht_pp_new0		1483440	0					
ANR	1483452	ArgumentList			1483440	1					
ANR	1483453	IfStatement	if ( ! ht )		1483440	1					
ANR	1483454	Condition	! ht	116:5:3024:3026	1483440	0	True				
ANR	1483455	UnaryOperationExpression	! ht		1483440	0					
ANR	1483456	UnaryOperator	!		1483440	0					
ANR	1483457	Identifier	ht		1483440	1					
ANR	1483458	CompoundStatement		3:10:38:38	1483440	1					
ANR	1483459	ReturnStatement	return ;	117:2:3033:3039	1483440	0	True				
ANR	1483460	IdentifierDeclStatement	RListIter * iter ;	120:1:3046:3061	1483440	2	True				
ANR	1483461	IdentifierDecl	* iter		1483440	0					
ANR	1483462	IdentifierDeclType	RListIter *		1483440	0					
ANR	1483463	Identifier	iter		1483440	1					
ANR	1483464	IdentifierDeclStatement	RBinSymbol * sym ;	121:1:3064:3079	1483440	3	True				
ANR	1483465	IdentifierDecl	* sym		1483440	0					
ANR	1483466	IdentifierDeclType	RBinSymbol *		1483440	0					
ANR	1483467	Identifier	sym		1483440	1					
ANR	1483468	Statement	r_list_foreach	122:1:3082:3095	1483440	4	True				
ANR	1483469	Statement	(	122:16:3097:3097	1483440	5	True				
ANR	1483470	Statement	list	122:17:3098:3101	1483440	6	True				
ANR	1483471	Statement	","	122:21:3102:3102	1483440	7	True				
ANR	1483472	Statement	iter	122:23:3104:3107	1483440	8	True				
ANR	1483473	Statement	","	122:27:3108:3108	1483440	9	True				
ANR	1483474	Statement	sym	122:29:3110:3112	1483440	10	True				
ANR	1483475	Statement	)	122:32:3113:3113	1483440	11	True				
ANR	1483476	CompoundStatement		9:34:124:124	1483440	12					
ANR	1483477	IfStatement	if ( sym && sym -> name && * sym -> name )		1483440	0					
ANR	1483478	Condition	sym && sym -> name && * sym -> name	123:6:3123:3152	1483440	0	True				
ANR	1483479	AndExpression	sym && sym -> name && * sym -> name		1483440	0		&&			
ANR	1483480	Identifier	sym		1483440	0					
ANR	1483481	AndExpression	sym -> name && * sym -> name		1483440	1		&&			
ANR	1483482	PtrMemberAccess	sym -> name		1483440	0					
ANR	1483483	Identifier	sym		1483440	0					
ANR	1483484	Identifier	name		1483440	1					
ANR	1483485	UnaryOperationExpression	* sym -> name		1483440	1					
ANR	1483486	UnaryOperator	*		1483440	0					
ANR	1483487	PtrMemberAccess	sym -> name		1483440	1					
ANR	1483488	Identifier	sym		1483440	0					
ANR	1483489	Identifier	name		1483440	1					
ANR	1483490	CompoundStatement		10:38:164:164	1483440	1					
ANR	1483491	ExpressionStatement	"r_bin_filter_sym ( bf , ht , sym -> vaddr , sym )"	124:3:3160:3202	1483440	0	True				
ANR	1483492	CallExpression	"r_bin_filter_sym ( bf , ht , sym -> vaddr , sym )"		1483440	0					
ANR	1483493	Callee	r_bin_filter_sym		1483440	0					
ANR	1483494	Identifier	r_bin_filter_sym		1483440	0					
ANR	1483495	ArgumentList	bf		1483440	1					
ANR	1483496	Argument	bf		1483440	0					
ANR	1483497	Identifier	bf		1483440	0					
ANR	1483498	Argument	ht		1483440	1					
ANR	1483499	Identifier	ht		1483440	0					
ANR	1483500	Argument	sym -> vaddr		1483440	2					
ANR	1483501	PtrMemberAccess	sym -> vaddr		1483440	0					
ANR	1483502	Identifier	sym		1483440	0					
ANR	1483503	Identifier	vaddr		1483440	1					
ANR	1483504	Argument	sym		1483440	3					
ANR	1483505	Identifier	sym		1483440	0					
ANR	1483506	ExpressionStatement	ht_pp_free ( ht )	127:1:3212:3227	1483440	13	True				
ANR	1483507	CallExpression	ht_pp_free ( ht )		1483440	0					
ANR	1483508	Callee	ht_pp_free		1483440	0					
ANR	1483509	Identifier	ht_pp_free		1483440	0					
ANR	1483510	ArgumentList	ht		1483440	1					
ANR	1483511	Argument	ht		1483440	0					
ANR	1483512	Identifier	ht		1483440	0					
ANR	1483513	ReturnType	R_API void		1483440	1					
ANR	1483514	Identifier	r_bin_filter_symbols		1483440	2					
ANR	1483515	ParameterList	"RBinFile * bf , RList * list"		1483440	3					
ANR	1483516	Parameter	RBinFile * bf	114:32:2963:2974	1483440	0	True				
ANR	1483517	ParameterType	RBinFile *		1483440	0					
ANR	1483518	Identifier	bf		1483440	1					
ANR	1483519	Parameter	RList * list	114:46:2977:2987	1483440	1	True				
ANR	1483520	ParameterType	RList *		1483440	0					
ANR	1483521	Identifier	list		1483440	1					
ANR	1483522	CFGEntryNode	ENTRY		1483440		True				
ANR	1483523	CFGExitNode	EXIT		1483440		True				
ANR	1483524	Symbol	* sym		1483440						
ANR	1483525	Symbol	* sym -> name		1483440						
ANR	1483526	Symbol	ht_pp_new0		1483440						
ANR	1483527	Symbol	bf		1483440						
ANR	1483528	Symbol	sym		1483440						
ANR	1483529	Symbol	sym -> vaddr		1483440						
ANR	1483530	Symbol	sym -> name		1483440						
ANR	1483531	Symbol	iter		1483440						
ANR	1483532	Symbol	* * sym		1483440						
ANR	1483533	Symbol	list		1483440						
ANR	1483534	Symbol	ht		1483440						
ANR	1483535	Function	r_bin_filter_sections	130:0:3232:3506							
ANR	1483536	FunctionDef	"r_bin_filter_sections (RBinFile * bf , RList * list)"		1483535	0					
ANR	1483537	CompoundStatement		130:60:3292:3506	1483535	0					
ANR	1483538	IdentifierDeclStatement	RBinSection * sec ;	131:1:3295:3311	1483535	0	True				
ANR	1483539	IdentifierDecl	* sec		1483535	0					
ANR	1483540	IdentifierDeclType	RBinSection *		1483535	0					
ANR	1483541	Identifier	sec		1483535	1					
ANR	1483542	IdentifierDeclStatement	Sdb * db = sdb_new0 ( ) ;	132:1:3314:3335	1483535	1	True				
ANR	1483543	IdentifierDecl	* db = sdb_new0 ( )		1483535	0					
ANR	1483544	IdentifierDeclType	Sdb *		1483535	0					
ANR	1483545	Identifier	db		1483535	1					
ANR	1483546	AssignmentExpression	* db = sdb_new0 ( )		1483535	2		=			
ANR	1483547	Identifier	db		1483535	0					
ANR	1483548	CallExpression	sdb_new0 ( )		1483535	1					
ANR	1483549	Callee	sdb_new0		1483535	0					
ANR	1483550	Identifier	sdb_new0		1483535	0					
ANR	1483551	ArgumentList			1483535	1					
ANR	1483552	IdentifierDeclStatement	RListIter * iter ;	133:1:3338:3353	1483535	2	True				
ANR	1483553	IdentifierDecl	* iter		1483535	0					
ANR	1483554	IdentifierDeclType	RListIter *		1483535	0					
ANR	1483555	Identifier	iter		1483535	1					
ANR	1483556	Statement	r_list_foreach	134:1:3356:3369	1483535	3	True				
ANR	1483557	Statement	(	134:16:3371:3371	1483535	4	True				
ANR	1483558	Statement	list	134:17:3372:3375	1483535	5	True				
ANR	1483559	Statement	","	134:21:3376:3376	1483535	6	True				
ANR	1483560	Statement	iter	134:23:3378:3381	1483535	7	True				
ANR	1483561	Statement	","	134:27:3382:3382	1483535	8	True				
ANR	1483562	Statement	sec	134:29:3384:3386	1483535	9	True				
ANR	1483563	Statement	)	134:32:3387:3387	1483535	10	True				
ANR	1483564	CompoundStatement		6:2:100:159	1483535	11					
ANR	1483565	IdentifierDeclStatement	"char * p = r_bin_filter_name ( bf , db , sec -> vaddr , sec -> name ) ;"	135:2:3393:3452	1483535	0	True				
ANR	1483566	IdentifierDecl	"* p = r_bin_filter_name ( bf , db , sec -> vaddr , sec -> name )"		1483535	0					
ANR	1483567	IdentifierDeclType	char *		1483535	0					
ANR	1483568	Identifier	p		1483535	1					
ANR	1483569	AssignmentExpression	"* p = r_bin_filter_name ( bf , db , sec -> vaddr , sec -> name )"		1483535	2		=			
ANR	1483570	Identifier	p		1483535	0					
ANR	1483571	CallExpression	"r_bin_filter_name ( bf , db , sec -> vaddr , sec -> name )"		1483535	1					
ANR	1483572	Callee	r_bin_filter_name		1483535	0					
ANR	1483573	Identifier	r_bin_filter_name		1483535	0					
ANR	1483574	ArgumentList	bf		1483535	1					
ANR	1483575	Argument	bf		1483535	0					
ANR	1483576	Identifier	bf		1483535	0					
ANR	1483577	Argument	db		1483535	1					
ANR	1483578	Identifier	db		1483535	0					
ANR	1483579	Argument	sec -> vaddr		1483535	2					
ANR	1483580	PtrMemberAccess	sec -> vaddr		1483535	0					
ANR	1483581	Identifier	sec		1483535	0					
ANR	1483582	Identifier	vaddr		1483535	1					
ANR	1483583	Argument	sec -> name		1483535	3					
ANR	1483584	PtrMemberAccess	sec -> name		1483535	0					
ANR	1483585	Identifier	sec		1483535	0					
ANR	1483586	Identifier	name		1483535	1					
ANR	1483587	IfStatement	if ( p )		1483535	1					
ANR	1483588	Condition	p	136:6:3460:3460	1483535	0	True				
ANR	1483589	Identifier	p		1483535	0					
ANR	1483590	CompoundStatement		7:9:170:170	1483535	1					
ANR	1483591	ExpressionStatement	sec -> name = p	137:3:3468:3481	1483535	0	True				
ANR	1483592	AssignmentExpression	sec -> name = p		1483535	0		=			
ANR	1483593	PtrMemberAccess	sec -> name		1483535	0					
ANR	1483594	Identifier	sec		1483535	0					
ANR	1483595	Identifier	name		1483535	1					
ANR	1483596	Identifier	p		1483535	1					
ANR	1483597	ExpressionStatement	sdb_free ( db )	140:1:3491:3504	1483535	12	True				
ANR	1483598	CallExpression	sdb_free ( db )		1483535	0					
ANR	1483599	Callee	sdb_free		1483535	0					
ANR	1483600	Identifier	sdb_free		1483535	0					
ANR	1483601	ArgumentList	db		1483535	1					
ANR	1483602	Argument	db		1483535	0					
ANR	1483603	Identifier	db		1483535	0					
ANR	1483604	ReturnType	R_API void		1483535	1					
ANR	1483605	Identifier	r_bin_filter_sections		1483535	2					
ANR	1483606	ParameterList	"RBinFile * bf , RList * list"		1483535	3					
ANR	1483607	Parameter	RBinFile * bf	130:33:3265:3276	1483535	0	True				
ANR	1483608	ParameterType	RBinFile *		1483535	0					
ANR	1483609	Identifier	bf		1483535	1					
ANR	1483610	Parameter	RList * list	130:47:3279:3289	1483535	1	True				
ANR	1483611	ParameterType	RList *		1483535	0					
ANR	1483612	Identifier	list		1483535	1					
ANR	1483613	CFGEntryNode	ENTRY		1483535		True				
ANR	1483614	CFGExitNode	EXIT		1483535		True				
ANR	1483615	Symbol	sec		1483535						
ANR	1483616	Symbol	p		1483535						
ANR	1483617	Symbol	sdb_new0		1483535						
ANR	1483618	Symbol	bf		1483535						
ANR	1483619	Symbol	sec -> name		1483535						
ANR	1483620	Symbol	iter		1483535						
ANR	1483621	Symbol	r_bin_filter_name		1483535						
ANR	1483622	Symbol	* sec		1483535						
ANR	1483623	Symbol	list		1483535						
ANR	1483624	Symbol	sec -> vaddr		1483535						
ANR	1483625	Symbol	db		1483535						
ANR	1483626	Function	false_positive	143:0:3509:4245							
ANR	1483627	FunctionDef	false_positive (const char * str)		1483626	0					
ANR	1483628	CompoundStatement		143:44:3553:4245	1483626	0					
ANR	1483629	IdentifierDeclStatement	int i ;	144:1:3556:3561	1483626	0	True				
ANR	1483630	IdentifierDecl	i		1483626	0					
ANR	1483631	IdentifierDeclType	int		1483626	0					
ANR	1483632	Identifier	i		1483626	1					
ANR	1483633	IdentifierDeclStatement	ut8 bo [ 0x100 ] ;	145:1:3564:3577	1483626	1	True				
ANR	1483634	IdentifierDecl	bo [ 0x100 ]		1483626	0					
ANR	1483635	IdentifierDeclType	ut8 [ 0x100 ]		1483626	0					
ANR	1483636	Identifier	bo		1483626	1					
ANR	1483637	PrimaryExpression	0x100		1483626	2					
ANR	1483638	IdentifierDeclStatement	int up = 0 ;	146:1:3580:3590	1483626	2	True				
ANR	1483639	IdentifierDecl	up = 0		1483626	0					
ANR	1483640	IdentifierDeclType	int		1483626	0					
ANR	1483641	Identifier	up		1483626	1					
ANR	1483642	AssignmentExpression	up = 0		1483626	2		=			
ANR	1483643	Identifier	up		1483626	0					
ANR	1483644	PrimaryExpression	0		1483626	1					
ANR	1483645	IdentifierDeclStatement	int lo = 0 ;	147:1:3593:3603	1483626	3	True				
ANR	1483646	IdentifierDecl	lo = 0		1483626	0					
ANR	1483647	IdentifierDeclType	int		1483626	0					
ANR	1483648	Identifier	lo		1483626	1					
ANR	1483649	AssignmentExpression	lo = 0		1483626	2		=			
ANR	1483650	Identifier	lo		1483626	0					
ANR	1483651	PrimaryExpression	0		1483626	1					
ANR	1483652	IdentifierDeclStatement	int ot = 0 ;	148:1:3606:3616	1483626	4	True				
ANR	1483653	IdentifierDecl	ot = 0		1483626	0					
ANR	1483654	IdentifierDeclType	int		1483626	0					
ANR	1483655	Identifier	ot		1483626	1					
ANR	1483656	AssignmentExpression	ot = 0		1483626	2		=			
ANR	1483657	Identifier	ot		1483626	0					
ANR	1483658	PrimaryExpression	0		1483626	1					
ANR	1483659	IdentifierDeclStatement	int di = 0 ;	149:1:3619:3629	1483626	5	True				
ANR	1483660	IdentifierDecl	di = 0		1483626	0					
ANR	1483661	IdentifierDeclType	int		1483626	0					
ANR	1483662	Identifier	di		1483626	1					
ANR	1483663	AssignmentExpression	di = 0		1483626	2		=			
ANR	1483664	Identifier	di		1483626	0					
ANR	1483665	PrimaryExpression	0		1483626	1					
ANR	1483666	IdentifierDeclStatement	int ln = 0 ;	150:1:3632:3642	1483626	6	True				
ANR	1483667	IdentifierDecl	ln = 0		1483626	0					
ANR	1483668	IdentifierDeclType	int		1483626	0					
ANR	1483669	Identifier	ln		1483626	1					
ANR	1483670	AssignmentExpression	ln = 0		1483626	2		=			
ANR	1483671	Identifier	ln		1483626	0					
ANR	1483672	PrimaryExpression	0		1483626	1					
ANR	1483673	IdentifierDeclStatement	int sp = 0 ;	151:1:3645:3655	1483626	7	True				
ANR	1483674	IdentifierDecl	sp = 0		1483626	0					
ANR	1483675	IdentifierDeclType	int		1483626	0					
ANR	1483676	Identifier	sp		1483626	1					
ANR	1483677	AssignmentExpression	sp = 0		1483626	2		=			
ANR	1483678	Identifier	sp		1483626	0					
ANR	1483679	PrimaryExpression	0		1483626	1					
ANR	1483680	IdentifierDeclStatement	int nm = 0 ;	152:1:3658:3668	1483626	8	True				
ANR	1483681	IdentifierDecl	nm = 0		1483626	0					
ANR	1483682	IdentifierDeclType	int		1483626	0					
ANR	1483683	Identifier	nm		1483626	1					
ANR	1483684	AssignmentExpression	nm = 0		1483626	2		=			
ANR	1483685	Identifier	nm		1483626	0					
ANR	1483686	PrimaryExpression	0		1483626	1					
ANR	1483687	ForStatement	for ( i = 0 ; i < 0x100 ; i ++ )		1483626	9					
ANR	1483688	ForInit	i = 0 ;	153:6:3676:3681	1483626	0	True				
ANR	1483689	AssignmentExpression	i = 0		1483626	0		=			
ANR	1483690	Identifier	i		1483626	0					
ANR	1483691	PrimaryExpression	0		1483626	1					
ANR	1483692	Condition	i < 0x100	153:13:3683:3691	1483626	1	True				
ANR	1483693	RelationalExpression	i < 0x100		1483626	0		<			
ANR	1483694	Identifier	i		1483626	0					
ANR	1483695	PrimaryExpression	0x100		1483626	1					
ANR	1483696	PostIncDecOperationExpression	i ++	153:24:3694:3696	1483626	2	True				
ANR	1483697	Identifier	i		1483626	0					
ANR	1483698	IncDec	++		1483626	1					
ANR	1483699	CompoundStatement		11:29:145:145	1483626	3					
ANR	1483700	ExpressionStatement	bo [ i ] = 0	154:2:3703:3712	1483626	0	True				
ANR	1483701	AssignmentExpression	bo [ i ] = 0		1483626	0		=			
ANR	1483702	ArrayIndexing	bo [ i ]		1483626	0					
ANR	1483703	Identifier	bo		1483626	0					
ANR	1483704	Identifier	i		1483626	1					
ANR	1483705	PrimaryExpression	0		1483626	1					
ANR	1483706	ForStatement	for ( i = 0 ; str [ i ] ; i ++ )		1483626	10					
ANR	1483707	ForInit	i = 0 ;	156:6:3723:3728	1483626	0	True				
ANR	1483708	AssignmentExpression	i = 0		1483626	0		=			
ANR	1483709	Identifier	i		1483626	0					
ANR	1483710	PrimaryExpression	0		1483626	1					
ANR	1483711	Condition	str [ i ]	156:13:3730:3735	1483626	1	True				
ANR	1483712	ArrayIndexing	str [ i ]		1483626	0					
ANR	1483713	Identifier	str		1483626	0					
ANR	1483714	Identifier	i		1483626	1					
ANR	1483715	PostIncDecOperationExpression	i ++	156:21:3738:3740	1483626	2	True				
ANR	1483716	Identifier	i		1483626	0					
ANR	1483717	IncDec	++		1483626	1					
ANR	1483718	CompoundStatement		14:26:189:189	1483626	3					
ANR	1483719	IfStatement	if ( IS_DIGIT ( str [ i ] ) )		1483626	0					
ANR	1483720	Condition	IS_DIGIT ( str [ i ] )	157:6:3751:3767	1483626	0	True				
ANR	1483721	CallExpression	IS_DIGIT ( str [ i ] )		1483626	0					
ANR	1483722	Callee	IS_DIGIT		1483626	0					
ANR	1483723	Identifier	IS_DIGIT		1483626	0					
ANR	1483724	ArgumentList	str [ i ]		1483626	1					
ANR	1483725	Argument	str [ i ]		1483626	0					
ANR	1483726	ArrayIndexing	str [ i ]		1483626	0					
ANR	1483727	Identifier	str		1483626	0					
ANR	1483728	Identifier	i		1483626	1					
ANR	1483729	CompoundStatement		15:25:216:216	1483626	1					
ANR	1483730	ExpressionStatement	nm ++	158:3:3775:3779	1483626	0	True				
ANR	1483731	PostIncDecOperationExpression	nm ++		1483626	0					
ANR	1483732	Identifier	nm		1483626	0					
ANR	1483733	IncDec	++		1483626	1					
ANR	1483734	ElseStatement	else		1483626	0					
ANR	1483735	IfStatement	if ( str [ i ] >= 'a' && str [ i ] <= 'z' )		1483626	0					
ANR	1483736	Condition	str [ i ] >= 'a' && str [ i ] <= 'z'	159:13:3794:3819	1483626	0	True				
ANR	1483737	AndExpression	str [ i ] >= 'a' && str [ i ] <= 'z'		1483626	0		&&			
ANR	1483738	RelationalExpression	str [ i ] >= 'a'		1483626	0		>=			
ANR	1483739	ArrayIndexing	str [ i ]		1483626	0					
ANR	1483740	Identifier	str		1483626	0					
ANR	1483741	Identifier	i		1483626	1					
ANR	1483742	PrimaryExpression	'a'		1483626	1					
ANR	1483743	RelationalExpression	str [ i ] <= 'z'		1483626	1		<=			
ANR	1483744	ArrayIndexing	str [ i ]		1483626	0					
ANR	1483745	Identifier	str		1483626	0					
ANR	1483746	Identifier	i		1483626	1					
ANR	1483747	PrimaryExpression	'z'		1483626	1					
ANR	1483748	CompoundStatement		17:41:268:268	1483626	1					
ANR	1483749	ExpressionStatement	lo ++	160:3:3827:3831	1483626	0	True				
ANR	1483750	PostIncDecOperationExpression	lo ++		1483626	0					
ANR	1483751	Identifier	lo		1483626	0					
ANR	1483752	IncDec	++		1483626	1					
ANR	1483753	ElseStatement	else		1483626	0					
ANR	1483754	IfStatement	if ( str [ i ] >= 'A' && str [ i ] <= 'Z' )		1483626	0					
ANR	1483755	Condition	str [ i ] >= 'A' && str [ i ] <= 'Z'	161:13:3846:3871	1483626	0	True				
ANR	1483756	AndExpression	str [ i ] >= 'A' && str [ i ] <= 'Z'		1483626	0		&&			
ANR	1483757	RelationalExpression	str [ i ] >= 'A'		1483626	0		>=			
ANR	1483758	ArrayIndexing	str [ i ]		1483626	0					
ANR	1483759	Identifier	str		1483626	0					
ANR	1483760	Identifier	i		1483626	1					
ANR	1483761	PrimaryExpression	'A'		1483626	1					
ANR	1483762	RelationalExpression	str [ i ] <= 'Z'		1483626	1		<=			
ANR	1483763	ArrayIndexing	str [ i ]		1483626	0					
ANR	1483764	Identifier	str		1483626	0					
ANR	1483765	Identifier	i		1483626	1					
ANR	1483766	PrimaryExpression	'Z'		1483626	1					
ANR	1483767	CompoundStatement		19:41:320:320	1483626	1					
ANR	1483768	ExpressionStatement	up ++	162:3:3879:3883	1483626	0	True				
ANR	1483769	PostIncDecOperationExpression	up ++		1483626	0					
ANR	1483770	Identifier	up		1483626	0					
ANR	1483771	IncDec	++		1483626	1					
ANR	1483772	ElseStatement	else		1483626	0					
ANR	1483773	CompoundStatement		21:9:340:340	1483626	0					
ANR	1483774	ExpressionStatement	ot ++	164:3:3899:3903	1483626	0	True				
ANR	1483775	PostIncDecOperationExpression	ot ++		1483626	0					
ANR	1483776	Identifier	ot		1483626	0					
ANR	1483777	IncDec	++		1483626	1					
ANR	1483778	IfStatement	if ( str [ i ] == '\\\\' )		1483626	1					
ANR	1483779	Condition	str [ i ] == '\\\\'	166:6:3915:3926	1483626	0	True				
ANR	1483780	EqualityExpression	str [ i ] == '\\\\'		1483626	0		==			
ANR	1483781	ArrayIndexing	str [ i ]		1483626	0					
ANR	1483782	Identifier	str		1483626	0					
ANR	1483783	Identifier	i		1483626	1					
ANR	1483784	PrimaryExpression	'\\\\'		1483626	1					
ANR	1483785	CompoundStatement		24:20:375:375	1483626	1					
ANR	1483786	ExpressionStatement	ot ++	167:3:3934:3938	1483626	0	True				
ANR	1483787	PostIncDecOperationExpression	ot ++		1483626	0					
ANR	1483788	Identifier	ot		1483626	0					
ANR	1483789	IncDec	++		1483626	1					
ANR	1483790	IfStatement	if ( str [ i ] == ' ' )		1483626	2					
ANR	1483791	Condition	str [ i ] == ' '	169:6:3950:3960	1483626	0	True				
ANR	1483792	EqualityExpression	str [ i ] == ' '		1483626	0		==			
ANR	1483793	ArrayIndexing	str [ i ]		1483626	0					
ANR	1483794	Identifier	str		1483626	0					
ANR	1483795	Identifier	i		1483626	1					
ANR	1483796	PrimaryExpression	' '		1483626	1					
ANR	1483797	CompoundStatement		27:19:409:409	1483626	1					
ANR	1483798	ExpressionStatement	sp ++	170:3:3968:3972	1483626	0	True				
ANR	1483799	PostIncDecOperationExpression	sp ++		1483626	0					
ANR	1483800	Identifier	sp		1483626	0					
ANR	1483801	IncDec	++		1483626	1					
ANR	1483802	ExpressionStatement	bo [ ( ut8 ) str [ i ] ] = 1	172:2:3980:3999	1483626	3	True				
ANR	1483803	AssignmentExpression	bo [ ( ut8 ) str [ i ] ] = 1		1483626	0		=			
ANR	1483804	ArrayIndexing	bo [ ( ut8 ) str [ i ] ]		1483626	0					
ANR	1483805	Identifier	bo		1483626	0					
ANR	1483806	CastExpression	( ut8 ) str [ i ]		1483626	1					
ANR	1483807	CastTarget	ut8		1483626	0					
ANR	1483808	ArrayIndexing	str [ i ]		1483626	1					
ANR	1483809	Identifier	str		1483626	0					
ANR	1483810	Identifier	i		1483626	1					
ANR	1483811	PrimaryExpression	1		1483626	1					
ANR	1483812	ExpressionStatement	ln ++	173:2:4003:4007	1483626	4	True				
ANR	1483813	PostIncDecOperationExpression	ln ++		1483626	0					
ANR	1483814	Identifier	ln		1483626	0					
ANR	1483815	IncDec	++		1483626	1					
ANR	1483816	ForStatement	for ( i = 0 ; i < 0x100 ; i ++ )		1483626	11					
ANR	1483817	ForInit	i = 0 ;	175:6:4018:4023	1483626	0	True				
ANR	1483818	AssignmentExpression	i = 0		1483626	0		=			
ANR	1483819	Identifier	i		1483626	0					
ANR	1483820	PrimaryExpression	0		1483626	1					
ANR	1483821	Condition	i < 0x100	175:13:4025:4031	1483626	1	True				
ANR	1483822	RelationalExpression	i < 0x100		1483626	0		<			
ANR	1483823	Identifier	i		1483626	0					
ANR	1483824	PrimaryExpression	0x100		1483626	1					
ANR	1483825	PostIncDecOperationExpression	i ++	175:22:4034:4036	1483626	2	True				
ANR	1483826	Identifier	i		1483626	0					
ANR	1483827	IncDec	++		1483626	1					
ANR	1483828	CompoundStatement		33:27:485:485	1483626	3					
ANR	1483829	IfStatement	if ( bo [ i ] )		1483626	0					
ANR	1483830	Condition	bo [ i ]	176:6:4047:4051	1483626	0	True				
ANR	1483831	ArrayIndexing	bo [ i ]		1483626	0					
ANR	1483832	Identifier	bo		1483626	0					
ANR	1483833	Identifier	i		1483626	1					
ANR	1483834	CompoundStatement		34:13:500:500	1483626	1					
ANR	1483835	ExpressionStatement	di ++	177:3:4059:4063	1483626	0	True				
ANR	1483836	PostIncDecOperationExpression	di ++		1483626	0					
ANR	1483837	Identifier	di		1483626	0					
ANR	1483838	IncDec	++		1483626	1					
ANR	1483839	IfStatement	if ( ln > 2 && str [ 0 ] != '_' )		1483626	12					
ANR	1483840	Condition	ln > 2 && str [ 0 ] != '_'	180:5:4077:4099	1483626	0	True				
ANR	1483841	AndExpression	ln > 2 && str [ 0 ] != '_'		1483626	0		&&			
ANR	1483842	RelationalExpression	ln > 2		1483626	0		>			
ANR	1483843	Identifier	ln		1483626	0					
ANR	1483844	PrimaryExpression	2		1483626	1					
ANR	1483845	EqualityExpression	str [ 0 ] != '_'		1483626	1		!=			
ANR	1483846	ArrayIndexing	str [ 0 ]		1483626	0					
ANR	1483847	Identifier	str		1483626	0					
ANR	1483848	PrimaryExpression	0		1483626	1					
ANR	1483849	PrimaryExpression	'_'		1483626	1					
ANR	1483850	CompoundStatement		38:30:548:548	1483626	1					
ANR	1483851	IfStatement	if ( ln < 10 )		1483626	0					
ANR	1483852	Condition	ln < 10	181:6:4110:4116	1483626	0	True				
ANR	1483853	RelationalExpression	ln < 10		1483626	0		<			
ANR	1483854	Identifier	ln		1483626	0					
ANR	1483855	PrimaryExpression	10		1483626	1					
ANR	1483856	CompoundStatement		39:15:565:565	1483626	1					
ANR	1483857	ReturnStatement	return true ;	182:3:4124:4135	1483626	0	True				
ANR	1483858	Identifier	true		1483626	0					
ANR	1483859	IfStatement	if ( ot >= ( nm + up + lo ) )		1483626	1					
ANR	1483860	Condition	ot >= ( nm + up + lo )	184:6:4147:4166	1483626	0	True				
ANR	1483861	RelationalExpression	ot >= ( nm + up + lo )		1483626	0		>=			
ANR	1483862	Identifier	ot		1483626	0					
ANR	1483863	AdditiveExpression	nm + up + lo		1483626	1		+			
ANR	1483864	Identifier	nm		1483626	0					
ANR	1483865	AdditiveExpression	up + lo		1483626	1		+			
ANR	1483866	Identifier	up		1483626	0					
ANR	1483867	Identifier	lo		1483626	1					
ANR	1483868	CompoundStatement		42:28:615:615	1483626	1					
ANR	1483869	ReturnStatement	return true ;	185:3:4174:4185	1483626	0	True				
ANR	1483870	Identifier	true		1483626	0					
ANR	1483871	IfStatement	if ( lo < 3 )		1483626	2					
ANR	1483872	Condition	lo < 3	187:6:4197:4202	1483626	0	True				
ANR	1483873	RelationalExpression	lo < 3		1483626	0		<			
ANR	1483874	Identifier	lo		1483626	0					
ANR	1483875	PrimaryExpression	3		1483626	1					
ANR	1483876	CompoundStatement		45:14:651:651	1483626	1					
ANR	1483877	ReturnStatement	return true ;	188:3:4210:4221	1483626	0	True				
ANR	1483878	Identifier	true		1483626	0					
ANR	1483879	ReturnStatement	return false ;	191:1:4231:4243	1483626	13	True				
ANR	1483880	Identifier	false		1483626	0					
ANR	1483881	ReturnType	static bool		1483626	1					
ANR	1483882	Identifier	false_positive		1483626	2					
ANR	1483883	ParameterList	const char * str		1483626	3					
ANR	1483884	Parameter	const char * str	143:27:3536:3550	1483626	0	True				
ANR	1483885	ParameterType	const char *		1483626	0					
ANR	1483886	Identifier	str		1483626	1					
ANR	1483887	CFGEntryNode	ENTRY		1483626		True				
ANR	1483888	CFGExitNode	EXIT		1483626		True				
ANR	1483889	Symbol	ln		1483626						
ANR	1483890	Symbol	* * i		1483626						
ANR	1483891	Symbol	lo		1483626						
ANR	1483892	Symbol	ot		1483626						
ANR	1483893	Symbol	di		1483626						
ANR	1483894	Symbol	* * str		1483626						
ANR	1483895	Symbol	false		1483626						
ANR	1483896	Symbol	i		1483626						
ANR	1483897	Symbol	bo		1483626						
ANR	1483898	Symbol	IS_DIGIT		1483626						
ANR	1483899	Symbol	str		1483626						
ANR	1483900	Symbol	* bo		1483626						
ANR	1483901	Symbol	* i		1483626						
ANR	1483902	Symbol	true		1483626						
ANR	1483903	Symbol	up		1483626						
ANR	1483904	Symbol	* str		1483626						
ANR	1483905	Symbol	sp		1483626						
ANR	1483906	Symbol	nm		1483626						
ANR	1483907	Function	r_bin_strpurge	194:0:4248:5308							
ANR	1483908	FunctionDef	"r_bin_strpurge (RBin * bin , const char * str , ut64 refaddr)"		1483907	0					
ANR	1483909	CompoundStatement		194:68:4316:5308	1483907	0					
ANR	1483910	IdentifierDeclStatement	bool purge = false ;	195:1:4319:4337	1483907	0	True				
ANR	1483911	IdentifierDecl	purge = false		1483907	0					
ANR	1483912	IdentifierDeclType	bool		1483907	0					
ANR	1483913	Identifier	purge		1483907	1					
ANR	1483914	AssignmentExpression	purge = false		1483907	2		=			
ANR	1483915	Identifier	false		1483907	0					
ANR	1483916	Identifier	false		1483907	1					
ANR	1483917	IfStatement	if ( bin -> strpurge )		1483907	1					
ANR	1483918	Condition	bin -> strpurge	196:5:4344:4356	1483907	0	True				
ANR	1483919	PtrMemberAccess	bin -> strpurge		1483907	0					
ANR	1483920	Identifier	bin		1483907	0					
ANR	1483921	Identifier	strpurge		1483907	1					
ANR	1483922	CompoundStatement		4:2:46:82	1483907	1					
ANR	1483923	IdentifierDeclStatement	char * addrs = strdup ( bin -> strpurge ) ;	197:2:4363:4399	1483907	0	True				
ANR	1483924	IdentifierDecl	* addrs = strdup ( bin -> strpurge )		1483907	0					
ANR	1483925	IdentifierDeclType	char *		1483907	0					
ANR	1483926	Identifier	addrs		1483907	1					
ANR	1483927	AssignmentExpression	* addrs = strdup ( bin -> strpurge )		1483907	2		=			
ANR	1483928	Identifier	addrs		1483907	0					
ANR	1483929	CallExpression	strdup ( bin -> strpurge )		1483907	1					
ANR	1483930	Callee	strdup		1483907	0					
ANR	1483931	Identifier	strdup		1483907	0					
ANR	1483932	ArgumentList	bin -> strpurge		1483907	1					
ANR	1483933	Argument	bin -> strpurge		1483907	0					
ANR	1483934	PtrMemberAccess	bin -> strpurge		1483907	0					
ANR	1483935	Identifier	bin		1483907	0					
ANR	1483936	Identifier	strpurge		1483907	1					
ANR	1483937	IfStatement	if ( addrs )		1483907	1					
ANR	1483938	Condition	addrs	198:6:4407:4411	1483907	0	True				
ANR	1483939	Identifier	addrs		1483907	0					
ANR	1483940	CompoundStatement		10:3:188:207	1483907	1					
ANR	1483941	IdentifierDeclStatement	"int splits = r_str_split ( addrs , ',' ) ;"	199:3:4419:4456	1483907	0	True				
ANR	1483942	IdentifierDecl	"splits = r_str_split ( addrs , ',' )"		1483907	0					
ANR	1483943	IdentifierDeclType	int		1483907	0					
ANR	1483944	Identifier	splits		1483907	1					
ANR	1483945	AssignmentExpression	"splits = r_str_split ( addrs , ',' )"		1483907	2		=			
ANR	1483946	Identifier	splits		1483907	0					
ANR	1483947	CallExpression	"r_str_split ( addrs , ',' )"		1483907	1					
ANR	1483948	Callee	r_str_split		1483907	0					
ANR	1483949	Identifier	r_str_split		1483907	0					
ANR	1483950	ArgumentList	addrs		1483907	1					
ANR	1483951	Argument	addrs		1483907	0					
ANR	1483952	Identifier	addrs		1483907	0					
ANR	1483953	Argument	"','"		1483907	1					
ANR	1483954	PrimaryExpression	"','"		1483907	0					
ANR	1483955	IdentifierDeclStatement	int i ;	200:3:4461:4466	1483907	1	True				
ANR	1483956	IdentifierDecl	i		1483907	0					
ANR	1483957	IdentifierDeclType	int		1483907	0					
ANR	1483958	Identifier	i		1483907	1					
ANR	1483959	IdentifierDeclStatement	char * ptr ;	201:3:4471:4480	1483907	2	True				
ANR	1483960	IdentifierDecl	* ptr		1483907	0					
ANR	1483961	IdentifierDeclType	char *		1483907	0					
ANR	1483962	Identifier	ptr		1483907	1					
ANR	1483963	IdentifierDeclStatement	char * range_sep ;	202:3:4485:4500	1483907	3	True				
ANR	1483964	IdentifierDecl	* range_sep		1483907	0					
ANR	1483965	IdentifierDeclType	char *		1483907	0					
ANR	1483966	Identifier	range_sep		1483907	1					
ANR	1483967	IdentifierDeclStatement	"ut64 addr , from , to ;"	203:3:4505:4524	1483907	4	True				
ANR	1483968	IdentifierDecl	addr		1483907	0					
ANR	1483969	IdentifierDeclType	ut64		1483907	0					
ANR	1483970	Identifier	addr		1483907	1					
ANR	1483971	IdentifierDecl	from		1483907	1					
ANR	1483972	IdentifierDeclType	ut64		1483907	0					
ANR	1483973	Identifier	from		1483907	1					
ANR	1483974	IdentifierDecl	to		1483907	2					
ANR	1483975	IdentifierDeclType	ut64		1483907	0					
ANR	1483976	Identifier	to		1483907	1					
ANR	1483977	ForStatement	"for ( i = 0 , ptr = addrs ; i < splits ; i ++ , ptr += strlen ( ptr ) + 1 )"		1483907	5					
ANR	1483978	ForInit	"i = 0 , ptr = addrs ;"	204:8:4534:4552	1483907	0	True				
ANR	1483979	Expression	"i = 0 , ptr = addrs"		1483907	0					
ANR	1483980	AssignmentExpression	i = 0		1483907	0		=			
ANR	1483981	Identifier	i		1483907	0					
ANR	1483982	PrimaryExpression	0		1483907	1					
ANR	1483983	AssignmentExpression	ptr = addrs		1483907	1		=			
ANR	1483984	Identifier	ptr		1483907	0					
ANR	1483985	Identifier	addrs		1483907	1					
ANR	1483986	Condition	i < splits	204:28:4554:4563	1483907	1	True				
ANR	1483987	RelationalExpression	i < splits		1483907	0		<			
ANR	1483988	Identifier	i		1483907	0					
ANR	1483989	Identifier	splits		1483907	1					
ANR	1483990	Expression	"i ++ , ptr += strlen ( ptr ) + 1"	204:40:4566:4593	1483907	2	True				
ANR	1483991	PostIncDecOperationExpression	i ++		1483907	0					
ANR	1483992	Identifier	i		1483907	0					
ANR	1483993	IncDec	++		1483907	1					
ANR	1483994	AssignmentExpression	ptr += strlen ( ptr ) + 1		1483907	1		+=			
ANR	1483995	Identifier	ptr		1483907	0					
ANR	1483996	AdditiveExpression	strlen ( ptr ) + 1		1483907	1		+			
ANR	1483997	CallExpression	strlen ( ptr )		1483907	0					
ANR	1483998	Callee	strlen		1483907	0					
ANR	1483999	Identifier	strlen		1483907	0					
ANR	1484000	ArgumentList	ptr		1483907	1					
ANR	1484001	Argument	ptr		1483907	0					
ANR	1484002	Identifier	ptr		1483907	0					
ANR	1484003	PrimaryExpression	1		1483907	1					
ANR	1484004	CompoundStatement		16:4:382:399	1483907	3					
ANR	1484005	IfStatement	"if ( ! strcmp ( ptr , ""true"" ) && false_positive ( str ) )"		1483907	0					
ANR	1484006	Condition	"! strcmp ( ptr , ""true"" ) && false_positive ( str )"	205:8:4606:4650	1483907	0	True				
ANR	1484007	AndExpression	"! strcmp ( ptr , ""true"" ) && false_positive ( str )"		1483907	0		&&			
ANR	1484008	UnaryOperationExpression	"! strcmp ( ptr , ""true"" )"		1483907	0					
ANR	1484009	UnaryOperator	!		1483907	0					
ANR	1484010	CallExpression	"strcmp ( ptr , ""true"" )"		1483907	1					
ANR	1484011	Callee	strcmp		1483907	0					
ANR	1484012	Identifier	strcmp		1483907	0					
ANR	1484013	ArgumentList	ptr		1483907	1					
ANR	1484014	Argument	ptr		1483907	0					
ANR	1484015	Identifier	ptr		1483907	0					
ANR	1484016	Argument	"""true"""		1483907	1					
ANR	1484017	PrimaryExpression	"""true"""		1483907	0					
ANR	1484018	CallExpression	false_positive ( str )		1483907	1					
ANR	1484019	Callee	false_positive		1483907	0					
ANR	1484020	Identifier	false_positive		1483907	0					
ANR	1484021	ArgumentList	str		1483907	1					
ANR	1484022	Argument	str		1483907	0					
ANR	1484023	Identifier	str		1483907	0					
ANR	1484024	CompoundStatement		12:55:336:336	1483907	1					
ANR	1484025	ExpressionStatement	purge = true	206:5:4660:4672	1483907	0	True				
ANR	1484026	AssignmentExpression	purge = true		1483907	0		=			
ANR	1484027	Identifier	purge		1483907	0					
ANR	1484028	Identifier	true		1483907	1					
ANR	1484029	ContinueStatement	continue ;	207:5:4679:4687	1483907	1	True				
ANR	1484030	IdentifierDeclStatement	bool bang = false ;	209:4:4699:4716	1483907	1	True				
ANR	1484031	IdentifierDecl	bang = false		1483907	0					
ANR	1484032	IdentifierDeclType	bool		1483907	0					
ANR	1484033	Identifier	bang		1483907	1					
ANR	1484034	AssignmentExpression	bang = false		1483907	2		=			
ANR	1484035	Identifier	false		1483907	0					
ANR	1484036	Identifier	false		1483907	1					
ANR	1484037	IfStatement	if ( * ptr == '!' )		1483907	2					
ANR	1484038	Condition	* ptr == '!'	210:8:4726:4736	1483907	0	True				
ANR	1484039	EqualityExpression	* ptr == '!'		1483907	0		==			
ANR	1484040	UnaryOperationExpression	* ptr		1483907	0					
ANR	1484041	UnaryOperator	*		1483907	0					
ANR	1484042	Identifier	ptr		1483907	1					
ANR	1484043	PrimaryExpression	'!'		1483907	1					
ANR	1484044	CompoundStatement		17:21:422:422	1483907	1					
ANR	1484045	ExpressionStatement	bang = true	211:5:4746:4757	1483907	0	True				
ANR	1484046	AssignmentExpression	bang = true		1483907	0		=			
ANR	1484047	Identifier	bang		1483907	0					
ANR	1484048	Identifier	true		1483907	1					
ANR	1484049	ExpressionStatement	ptr ++	212:5:4764:4769	1483907	1	True				
ANR	1484050	PostIncDecOperationExpression	ptr ++		1483907	0					
ANR	1484051	Identifier	ptr		1483907	0					
ANR	1484052	IncDec	++		1483907	1					
ANR	1484053	IfStatement	"if ( ! strcmp ( ptr , ""all"" ) )"		1483907	3					
ANR	1484054	Condition	"! strcmp ( ptr , ""all"" )"	214:8:4785:4804	1483907	0	True				
ANR	1484055	UnaryOperationExpression	"! strcmp ( ptr , ""all"" )"		1483907	0					
ANR	1484056	UnaryOperator	!		1483907	0					
ANR	1484057	CallExpression	"strcmp ( ptr , ""all"" )"		1483907	1					
ANR	1484058	Callee	strcmp		1483907	0					
ANR	1484059	Identifier	strcmp		1483907	0					
ANR	1484060	ArgumentList	ptr		1483907	1					
ANR	1484061	Argument	ptr		1483907	0					
ANR	1484062	Identifier	ptr		1483907	0					
ANR	1484063	Argument	"""all"""		1483907	1					
ANR	1484064	PrimaryExpression	"""all"""		1483907	0					
ANR	1484065	CompoundStatement		21:30:490:490	1483907	1					
ANR	1484066	ExpressionStatement	purge = ! bang	215:5:4814:4827	1483907	0	True				
ANR	1484067	AssignmentExpression	purge = ! bang		1483907	0		=			
ANR	1484068	Identifier	purge		1483907	0					
ANR	1484069	UnaryOperationExpression	! bang		1483907	1					
ANR	1484070	UnaryOperator	!		1483907	0					
ANR	1484071	Identifier	bang		1483907	1					
ANR	1484072	ContinueStatement	continue ;	216:5:4834:4842	1483907	1	True				
ANR	1484073	ExpressionStatement	"range_sep = strchr ( ptr , '-' )"	218:4:4854:4883	1483907	4	True				
ANR	1484074	AssignmentExpression	"range_sep = strchr ( ptr , '-' )"		1483907	0		=			
ANR	1484075	Identifier	range_sep		1483907	0					
ANR	1484076	CallExpression	"strchr ( ptr , '-' )"		1483907	1					
ANR	1484077	Callee	strchr		1483907	0					
ANR	1484078	Identifier	strchr		1483907	0					
ANR	1484079	ArgumentList	ptr		1483907	1					
ANR	1484080	Argument	ptr		1483907	0					
ANR	1484081	Identifier	ptr		1483907	0					
ANR	1484082	Argument	'-'		1483907	1					
ANR	1484083	PrimaryExpression	'-'		1483907	0					
ANR	1484084	IfStatement	if ( range_sep )		1483907	5					
ANR	1484085	Condition	range_sep	219:8:4893:4901	1483907	0	True				
ANR	1484086	Identifier	range_sep		1483907	0					
ANR	1484087	CompoundStatement		26:19:587:587	1483907	1					
ANR	1484088	ExpressionStatement	* range_sep = 0	220:5:4911:4925	1483907	0	True				
ANR	1484089	AssignmentExpression	* range_sep = 0		1483907	0		=			
ANR	1484090	UnaryOperationExpression	* range_sep		1483907	0					
ANR	1484091	UnaryOperator	*		1483907	0					
ANR	1484092	Identifier	range_sep		1483907	1					
ANR	1484093	PrimaryExpression	0		1483907	1					
ANR	1484094	ExpressionStatement	"from = r_num_get ( NULL , ptr )"	221:5:4932:4960	1483907	1	True				
ANR	1484095	AssignmentExpression	"from = r_num_get ( NULL , ptr )"		1483907	0		=			
ANR	1484096	Identifier	from		1483907	0					
ANR	1484097	CallExpression	"r_num_get ( NULL , ptr )"		1483907	1					
ANR	1484098	Callee	r_num_get		1483907	0					
ANR	1484099	Identifier	r_num_get		1483907	0					
ANR	1484100	ArgumentList	NULL		1483907	1					
ANR	1484101	Argument	NULL		1483907	0					
ANR	1484102	Identifier	NULL		1483907	0					
ANR	1484103	Argument	ptr		1483907	1					
ANR	1484104	Identifier	ptr		1483907	0					
ANR	1484105	ExpressionStatement	ptr = range_sep + 1	222:5:4967:4986	1483907	2	True				
ANR	1484106	AssignmentExpression	ptr = range_sep + 1		1483907	0		=			
ANR	1484107	Identifier	ptr		1483907	0					
ANR	1484108	AdditiveExpression	range_sep + 1		1483907	1		+			
ANR	1484109	Identifier	range_sep		1483907	0					
ANR	1484110	PrimaryExpression	1		1483907	1					
ANR	1484111	ExpressionStatement	"to = r_num_get ( NULL , ptr )"	223:5:4993:5019	1483907	3	True				
ANR	1484112	AssignmentExpression	"to = r_num_get ( NULL , ptr )"		1483907	0		=			
ANR	1484113	Identifier	to		1483907	0					
ANR	1484114	CallExpression	"r_num_get ( NULL , ptr )"		1483907	1					
ANR	1484115	Callee	r_num_get		1483907	0					
ANR	1484116	Identifier	r_num_get		1483907	0					
ANR	1484117	ArgumentList	NULL		1483907	1					
ANR	1484118	Argument	NULL		1483907	0					
ANR	1484119	Identifier	NULL		1483907	0					
ANR	1484120	Argument	ptr		1483907	1					
ANR	1484121	Identifier	ptr		1483907	0					
ANR	1484122	IfStatement	if ( refaddr >= from && refaddr <= to )		1483907	4					
ANR	1484123	Condition	refaddr >= from && refaddr <= to	224:9:5030:5061	1483907	0	True				
ANR	1484124	AndExpression	refaddr >= from && refaddr <= to		1483907	0		&&			
ANR	1484125	RelationalExpression	refaddr >= from		1483907	0		>=			
ANR	1484126	Identifier	refaddr		1483907	0					
ANR	1484127	Identifier	from		1483907	1					
ANR	1484128	RelationalExpression	refaddr <= to		1483907	1		<=			
ANR	1484129	Identifier	refaddr		1483907	0					
ANR	1484130	Identifier	to		1483907	1					
ANR	1484131	CompoundStatement		31:43:747:747	1483907	1					
ANR	1484132	ExpressionStatement	purge = ! bang	225:6:5072:5085	1483907	0	True				
ANR	1484133	AssignmentExpression	purge = ! bang		1483907	0		=			
ANR	1484134	Identifier	purge		1483907	0					
ANR	1484135	UnaryOperationExpression	! bang		1483907	1					
ANR	1484136	UnaryOperator	!		1483907	0					
ANR	1484137	Identifier	bang		1483907	1					
ANR	1484138	ContinueStatement	continue ;	226:6:5093:5101	1483907	1	True				
ANR	1484139	ExpressionStatement	"addr = r_num_get ( NULL , ptr )"	229:4:5120:5148	1483907	6	True				
ANR	1484140	AssignmentExpression	"addr = r_num_get ( NULL , ptr )"		1483907	0		=			
ANR	1484141	Identifier	addr		1483907	0					
ANR	1484142	CallExpression	"r_num_get ( NULL , ptr )"		1483907	1					
ANR	1484143	Callee	r_num_get		1483907	0					
ANR	1484144	Identifier	r_num_get		1483907	0					
ANR	1484145	ArgumentList	NULL		1483907	1					
ANR	1484146	Argument	NULL		1483907	0					
ANR	1484147	Identifier	NULL		1483907	0					
ANR	1484148	Argument	ptr		1483907	1					
ANR	1484149	Identifier	ptr		1483907	0					
ANR	1484150	IfStatement	if ( addr != 0 || * ptr == '0' )		1483907	7					
ANR	1484151	Condition	addr != 0 || * ptr == '0'	230:8:5158:5181	1483907	0	True				
ANR	1484152	OrExpression	addr != 0 || * ptr == '0'		1483907	0		||			
ANR	1484153	EqualityExpression	addr != 0		1483907	0		!=			
ANR	1484154	Identifier	addr		1483907	0					
ANR	1484155	PrimaryExpression	0		1483907	1					
ANR	1484156	EqualityExpression	* ptr == '0'		1483907	1		==			
ANR	1484157	UnaryOperationExpression	* ptr		1483907	0					
ANR	1484158	UnaryOperator	*		1483907	0					
ANR	1484159	Identifier	ptr		1483907	1					
ANR	1484160	PrimaryExpression	'0'		1483907	1					
ANR	1484161	CompoundStatement		37:34:867:867	1483907	1					
ANR	1484162	IfStatement	if ( refaddr == addr )		1483907	0					
ANR	1484163	Condition	refaddr == addr	231:9:5195:5209	1483907	0	True				
ANR	1484164	EqualityExpression	refaddr == addr		1483907	0		==			
ANR	1484165	Identifier	refaddr		1483907	0					
ANR	1484166	Identifier	addr		1483907	1					
ANR	1484167	CompoundStatement		38:26:895:895	1483907	1					
ANR	1484168	ExpressionStatement	purge = ! bang	232:6:5220:5233	1483907	0	True				
ANR	1484169	AssignmentExpression	purge = ! bang		1483907	0		=			
ANR	1484170	Identifier	purge		1483907	0					
ANR	1484171	UnaryOperationExpression	! bang		1483907	1					
ANR	1484172	UnaryOperator	!		1483907	0					
ANR	1484173	Identifier	bang		1483907	1					
ANR	1484174	ContinueStatement	continue ;	233:6:5241:5249	1483907	1	True				
ANR	1484175	ExpressionStatement	free ( addrs )	237:3:5272:5284	1483907	6	True				
ANR	1484176	CallExpression	free ( addrs )		1483907	0					
ANR	1484177	Callee	free		1483907	0					
ANR	1484178	Identifier	free		1483907	0					
ANR	1484179	ArgumentList	addrs		1483907	1					
ANR	1484180	Argument	addrs		1483907	0					
ANR	1484181	Identifier	addrs		1483907	0					
ANR	1484182	ReturnStatement	return purge ;	240:1:5294:5306	1483907	2	True				
ANR	1484183	Identifier	purge		1483907	0					
ANR	1484184	ReturnType	R_API bool		1483907	1					
ANR	1484185	Identifier	r_bin_strpurge		1483907	2					
ANR	1484186	ParameterList	"RBin * bin , const char * str , ut64 refaddr"		1483907	3					
ANR	1484187	Parameter	RBin * bin	194:26:4274:4282	1483907	0	True				
ANR	1484188	ParameterType	RBin *		1483907	0					
ANR	1484189	Identifier	bin		1483907	1					
ANR	1484190	Parameter	const char * str	194:37:4285:4299	1483907	1	True				
ANR	1484191	ParameterType	const char *		1483907	0					
ANR	1484192	Identifier	str		1483907	1					
ANR	1484193	Parameter	ut64 refaddr	194:54:4302:4313	1483907	2	True				
ANR	1484194	ParameterType	ut64		1483907	0					
ANR	1484195	Identifier	refaddr		1483907	1					
ANR	1484196	CFGEntryNode	ENTRY		1483907		True				
ANR	1484197	CFGExitNode	EXIT		1483907		True				
ANR	1484198	Symbol	splits		1483907						
ANR	1484199	Symbol	bin		1483907						
ANR	1484200	Symbol	strchr		1483907						
ANR	1484201	Symbol	purge		1483907						
ANR	1484202	Symbol	* range_sep		1483907						
ANR	1484203	Symbol	* bin		1483907						
ANR	1484204	Symbol	strlen		1483907						
ANR	1484205	Symbol	bang		1483907						
ANR	1484206	Symbol	* ptr		1483907						
ANR	1484207	Symbol	from		1483907						
ANR	1484208	Symbol	r_num_get		1483907						
ANR	1484209	Symbol	addr		1483907						
ANR	1484210	Symbol	strcmp		1483907						
ANR	1484211	Symbol	NULL		1483907						
ANR	1484212	Symbol	range_sep		1483907						
ANR	1484213	Symbol	addrs		1483907						
ANR	1484214	Symbol	false		1483907						
ANR	1484215	Symbol	i		1483907						
ANR	1484216	Symbol	refaddr		1483907						
ANR	1484217	Symbol	ptr		1483907						
ANR	1484218	Symbol	str		1483907						
ANR	1484219	Symbol	r_str_split		1483907						
ANR	1484220	Symbol	bin -> strpurge		1483907						
ANR	1484221	Symbol	false_positive		1483907						
ANR	1484222	Symbol	true		1483907						
ANR	1484223	Symbol	strdup		1483907						
ANR	1484224	Symbol	to		1483907						
ANR	1484225	Function	bin_strfilter	243:0:5311:7297							
ANR	1484226	FunctionDef	"bin_strfilter (RBin * bin , const char * str)"		1484225	0					
ANR	1484227	CompoundStatement		243:54:5365:7297	1484225	0					
ANR	1484228	IdentifierDeclStatement	int i ;	244:1:5368:5373	1484225	0	True				
ANR	1484229	IdentifierDecl	i		1484225	0					
ANR	1484230	IdentifierDeclType	int		1484225	0					
ANR	1484231	Identifier	i		1484225	1					
ANR	1484232	SwitchStatement	switch ( bin -> strfilter )		1484225	1					
ANR	1484233	Condition	bin -> strfilter	245:9:5384:5397	1484225	0	True				
ANR	1484234	PtrMemberAccess	bin -> strfilter		1484225	0					
ANR	1484235	Identifier	bin		1484225	0					
ANR	1484236	Identifier	strfilter		1484225	1					
ANR	1484237	CompoundStatement		3:25:34:34	1484225	1					
ANR	1484238	Label	case 'U' :	246:1:5403:5411	1484225	0	True				
ANR	1484239	ForStatement	for ( i = 0 ; str [ i ] ; i ++ )		1484225	1					
ANR	1484240	ForInit	i = 0 ;	247:7:5446:5451	1484225	0	True				
ANR	1484241	AssignmentExpression	i = 0		1484225	0		=			
ANR	1484242	Identifier	i		1484225	0					
ANR	1484243	PrimaryExpression	0		1484225	1					
ANR	1484244	Condition	str [ i ]	247:14:5453:5458	1484225	1	True				
ANR	1484245	ArrayIndexing	str [ i ]		1484225	0					
ANR	1484246	Identifier	str		1484225	0					
ANR	1484247	Identifier	i		1484225	1					
ANR	1484248	PostIncDecOperationExpression	i ++	247:22:5461:5463	1484225	2	True				
ANR	1484249	Identifier	i		1484225	0					
ANR	1484250	IncDec	++		1484225	1					
ANR	1484251	CompoundStatement		6:3:105:121	1484225	3					
ANR	1484252	IdentifierDeclStatement	char ch = str [ i ] ;	248:3:5471:5487	1484225	0	True				
ANR	1484253	IdentifierDecl	ch = str [ i ]		1484225	0					
ANR	1484254	IdentifierDeclType	char		1484225	0					
ANR	1484255	Identifier	ch		1484225	1					
ANR	1484256	AssignmentExpression	ch = str [ i ]		1484225	2		=			
ANR	1484257	Identifier	ch		1484225	0					
ANR	1484258	ArrayIndexing	str [ i ]		1484225	1					
ANR	1484259	Identifier	str		1484225	0					
ANR	1484260	Identifier	i		1484225	1					
ANR	1484261	IfStatement	if ( ch == ' ' )		1484225	1					
ANR	1484262	Condition	ch == ' '	249:7:5496:5504	1484225	0	True				
ANR	1484263	EqualityExpression	ch == ' '		1484225	0		==			
ANR	1484264	Identifier	ch		1484225	0					
ANR	1484265	PrimaryExpression	' '		1484225	1					
ANR	1484266	CompoundStatement		7:18:141:141	1484225	1					
ANR	1484267	ContinueStatement	continue ;	250:4:5513:5521	1484225	0	True				
ANR	1484268	IfStatement	if ( ch < '@' || ch > 'Z' )		1484225	2					
ANR	1484269	Condition	ch < '@' || ch > 'Z'	252:7:5535:5553	1484225	0	True				
ANR	1484270	OrExpression	ch < '@' || ch > 'Z'		1484225	0		||			
ANR	1484271	RelationalExpression	ch < '@'		1484225	0		<			
ANR	1484272	Identifier	ch		1484225	0					
ANR	1484273	PrimaryExpression	'@'		1484225	1					
ANR	1484274	RelationalExpression	ch > 'Z'		1484225	1		>			
ANR	1484275	Identifier	ch		1484225	0					
ANR	1484276	PrimaryExpression	'Z'		1484225	1					
ANR	1484277	CompoundStatement		10:28:190:190	1484225	1					
ANR	1484278	ReturnStatement	return false ;	253:4:5562:5574	1484225	0	True				
ANR	1484279	Identifier	false		1484225	0					
ANR	1484280	IfStatement	if ( ch < 0 || ! IS_PRINTABLE ( ch ) )		1484225	3					
ANR	1484281	Condition	ch < 0 || ! IS_PRINTABLE ( ch )	255:7:5588:5615	1484225	0	True				
ANR	1484282	OrExpression	ch < 0 || ! IS_PRINTABLE ( ch )		1484225	0		||			
ANR	1484283	RelationalExpression	ch < 0		1484225	0		<			
ANR	1484284	Identifier	ch		1484225	0					
ANR	1484285	PrimaryExpression	0		1484225	1					
ANR	1484286	UnaryOperationExpression	! IS_PRINTABLE ( ch )		1484225	1					
ANR	1484287	UnaryOperator	!		1484225	0					
ANR	1484288	CallExpression	IS_PRINTABLE ( ch )		1484225	1					
ANR	1484289	Callee	IS_PRINTABLE		1484225	0					
ANR	1484290	Identifier	IS_PRINTABLE		1484225	0					
ANR	1484291	ArgumentList	ch		1484225	1					
ANR	1484292	Argument	ch		1484225	0					
ANR	1484293	Identifier	ch		1484225	0					
ANR	1484294	CompoundStatement		13:37:252:252	1484225	1					
ANR	1484295	ReturnStatement	return false ;	256:4:5624:5636	1484225	0	True				
ANR	1484296	Identifier	false		1484225	0					
ANR	1484297	IfStatement	if ( str [ 0 ] && str [ 1 ] )		1484225	2					
ANR	1484298	Condition	str [ 0 ] && str [ 1 ]	259:6:5653:5668	1484225	0	True				
ANR	1484299	AndExpression	str [ 0 ] && str [ 1 ]		1484225	0		&&			
ANR	1484300	ArrayIndexing	str [ 0 ]		1484225	0					
ANR	1484301	Identifier	str		1484225	0					
ANR	1484302	PrimaryExpression	0		1484225	1					
ANR	1484303	ArrayIndexing	str [ 1 ]		1484225	1					
ANR	1484304	Identifier	str		1484225	0					
ANR	1484305	PrimaryExpression	1		1484225	1					
ANR	1484306	CompoundStatement		17:24:305:305	1484225	1					
ANR	1484307	ForStatement	for ( i = 2 ; i < 6 && str [ i ] ; i ++ )		1484225	0					
ANR	1484308	ForInit	i = 2 ;	260:8:5681:5686	1484225	0	True				
ANR	1484309	AssignmentExpression	i = 2		1484225	0		=			
ANR	1484310	Identifier	i		1484225	0					
ANR	1484311	PrimaryExpression	2		1484225	1					
ANR	1484312	Condition	i < 6 && str [ i ]	260:15:5688:5700	1484225	1	True				
ANR	1484313	AndExpression	i < 6 && str [ i ]		1484225	0		&&			
ANR	1484314	RelationalExpression	i < 6		1484225	0		<			
ANR	1484315	Identifier	i		1484225	0					
ANR	1484316	PrimaryExpression	6		1484225	1					
ANR	1484317	ArrayIndexing	str [ i ]		1484225	1					
ANR	1484318	Identifier	str		1484225	0					
ANR	1484319	Identifier	i		1484225	1					
ANR	1484320	PostIncDecOperationExpression	i ++	260:30:5703:5705	1484225	2	True				
ANR	1484321	Identifier	i		1484225	0					
ANR	1484322	IncDec	++		1484225	1					
ANR	1484323	CompoundStatement		18:35:342:342	1484225	3					
ANR	1484324	IfStatement	if ( str [ i ] == str [ 0 ] )		1484225	0					
ANR	1484325	Condition	str [ i ] == str [ 0 ]	261:8:5718:5733	1484225	0	True				
ANR	1484326	EqualityExpression	str [ i ] == str [ 0 ]		1484225	0		==			
ANR	1484327	ArrayIndexing	str [ i ]		1484225	0					
ANR	1484328	Identifier	str		1484225	0					
ANR	1484329	Identifier	i		1484225	1					
ANR	1484330	ArrayIndexing	str [ 0 ]		1484225	1					
ANR	1484331	Identifier	str		1484225	0					
ANR	1484332	PrimaryExpression	0		1484225	1					
ANR	1484333	CompoundStatement		19:26:370:370	1484225	1					
ANR	1484334	ReturnStatement	return false ;	262:5:5743:5755	1484225	0	True				
ANR	1484335	Identifier	false		1484225	0					
ANR	1484336	IfStatement	if ( str [ i ] == str [ 1 ] )		1484225	1					
ANR	1484337	Condition	str [ i ] == str [ 1 ]	264:8:5771:5786	1484225	0	True				
ANR	1484338	EqualityExpression	str [ i ] == str [ 1 ]		1484225	0		==			
ANR	1484339	ArrayIndexing	str [ i ]		1484225	0					
ANR	1484340	Identifier	str		1484225	0					
ANR	1484341	Identifier	i		1484225	1					
ANR	1484342	ArrayIndexing	str [ 1 ]		1484225	1					
ANR	1484343	Identifier	str		1484225	0					
ANR	1484344	PrimaryExpression	1		1484225	1					
ANR	1484345	CompoundStatement		22:26:423:423	1484225	1					
ANR	1484346	ReturnStatement	return false ;	265:5:5796:5808	1484225	0	True				
ANR	1484347	Identifier	false		1484225	0					
ANR	1484348	IfStatement	if ( str [ 0 ] == str [ 2 ] )		1484225	3					
ANR	1484349	Condition	str [ 0 ] == str [ 2 ]	269:6:5831:5846	1484225	0	True				
ANR	1484350	EqualityExpression	str [ 0 ] == str [ 2 ]		1484225	0		==			
ANR	1484351	ArrayIndexing	str [ 0 ]		1484225	0					
ANR	1484352	Identifier	str		1484225	0					
ANR	1484353	PrimaryExpression	0		1484225	1					
ANR	1484354	ArrayIndexing	str [ 2 ]		1484225	1					
ANR	1484355	Identifier	str		1484225	0					
ANR	1484356	PrimaryExpression	2		1484225	1					
ANR	1484357	CompoundStatement		27:24:483:483	1484225	1					
ANR	1484358	ReturnStatement	return false ;	270:3:5854:5866	1484225	0	True				
ANR	1484359	Identifier	false		1484225	0					
ANR	1484360	BreakStatement	break ;	272:2:5896:5901	1484225	4	True				
ANR	1484361	Label	case 'a' :	273:1:5904:5912	1484225	5	True				
ANR	1484362	ForStatement	for ( i = 0 ; str [ i ] ; i ++ )		1484225	6					
ANR	1484363	ForInit	i = 0 ;	274:7:5956:5961	1484225	0	True				
ANR	1484364	AssignmentExpression	i = 0		1484225	0		=			
ANR	1484365	Identifier	i		1484225	0					
ANR	1484366	PrimaryExpression	0		1484225	1					
ANR	1484367	Condition	str [ i ]	274:14:5963:5968	1484225	1	True				
ANR	1484368	ArrayIndexing	str [ i ]		1484225	0					
ANR	1484369	Identifier	str		1484225	0					
ANR	1484370	Identifier	i		1484225	1					
ANR	1484371	PostIncDecOperationExpression	i ++	274:22:5971:5973	1484225	2	True				
ANR	1484372	Identifier	i		1484225	0					
ANR	1484373	IncDec	++		1484225	1					
ANR	1484374	CompoundStatement		33:3:615:631	1484225	3					
ANR	1484375	IdentifierDeclStatement	char ch = str [ i ] ;	275:3:5981:5997	1484225	0	True				
ANR	1484376	IdentifierDecl	ch = str [ i ]		1484225	0					
ANR	1484377	IdentifierDeclType	char		1484225	0					
ANR	1484378	Identifier	ch		1484225	1					
ANR	1484379	AssignmentExpression	ch = str [ i ]		1484225	2		=			
ANR	1484380	Identifier	ch		1484225	0					
ANR	1484381	ArrayIndexing	str [ i ]		1484225	1					
ANR	1484382	Identifier	str		1484225	0					
ANR	1484383	Identifier	i		1484225	1					
ANR	1484384	IfStatement	if ( ch < 1 || ! IS_PRINTABLE ( ch ) )		1484225	1					
ANR	1484385	Condition	ch < 1 || ! IS_PRINTABLE ( ch )	276:7:6006:6033	1484225	0	True				
ANR	1484386	OrExpression	ch < 1 || ! IS_PRINTABLE ( ch )		1484225	0		||			
ANR	1484387	RelationalExpression	ch < 1		1484225	0		<			
ANR	1484388	Identifier	ch		1484225	0					
ANR	1484389	PrimaryExpression	1		1484225	1					
ANR	1484390	UnaryOperationExpression	! IS_PRINTABLE ( ch )		1484225	1					
ANR	1484391	UnaryOperator	!		1484225	0					
ANR	1484392	CallExpression	IS_PRINTABLE ( ch )		1484225	1					
ANR	1484393	Callee	IS_PRINTABLE		1484225	0					
ANR	1484394	Identifier	IS_PRINTABLE		1484225	0					
ANR	1484395	ArgumentList	ch		1484225	1					
ANR	1484396	Argument	ch		1484225	0					
ANR	1484397	Identifier	ch		1484225	0					
ANR	1484398	CompoundStatement		34:37:670:670	1484225	1					
ANR	1484399	ReturnStatement	return false ;	277:4:6042:6054	1484225	0	True				
ANR	1484400	Identifier	false		1484225	0					
ANR	1484401	BreakStatement	break ;	280:2:6067:6072	1484225	7	True				
ANR	1484402	Label	case 'e' :	281:1:6075:6083	1484225	8	True				
ANR	1484403	IfStatement	if ( str && * str )		1484225	9					
ANR	1484404	Condition	str && * str	282:6:6101:6111	1484225	0	True				
ANR	1484405	AndExpression	str && * str		1484225	0		&&			
ANR	1484406	Identifier	str		1484225	0					
ANR	1484407	UnaryOperationExpression	* str		1484225	1					
ANR	1484408	UnaryOperator	*		1484225	0					
ANR	1484409	Identifier	str		1484225	1					
ANR	1484410	CompoundStatement		40:19:748:748	1484225	1					
ANR	1484411	IfStatement	"if ( ! strstr ( str + 1 , ""@"" ) )"		1484225	0					
ANR	1484412	Condition	"! strstr ( str + 1 , ""@"" )"	283:7:6123:6144	1484225	0	True				
ANR	1484413	UnaryOperationExpression	"! strstr ( str + 1 , ""@"" )"		1484225	0					
ANR	1484414	UnaryOperator	!		1484225	0					
ANR	1484415	CallExpression	"strstr ( str + 1 , ""@"" )"		1484225	1					
ANR	1484416	Callee	strstr		1484225	0					
ANR	1484417	Identifier	strstr		1484225	0					
ANR	1484418	ArgumentList	str + 1		1484225	1					
ANR	1484419	Argument	str + 1		1484225	0					
ANR	1484420	AdditiveExpression	str + 1		1484225	0		+			
ANR	1484421	Identifier	str		1484225	0					
ANR	1484422	PrimaryExpression	1		1484225	1					
ANR	1484423	Argument	"""@"""		1484225	1					
ANR	1484424	PrimaryExpression	"""@"""		1484225	0					
ANR	1484425	CompoundStatement		41:31:781:781	1484225	1					
ANR	1484426	ReturnStatement	return false ;	284:4:6153:6165	1484225	0	True				
ANR	1484427	Identifier	false		1484225	0					
ANR	1484428	IfStatement	"if ( ! strstr ( str + 1 , ""."" ) )"		1484225	1					
ANR	1484429	Condition	"! strstr ( str + 1 , ""."" )"	286:7:6179:6200	1484225	0	True				
ANR	1484430	UnaryOperationExpression	"! strstr ( str + 1 , ""."" )"		1484225	0					
ANR	1484431	UnaryOperator	!		1484225	0					
ANR	1484432	CallExpression	"strstr ( str + 1 , ""."" )"		1484225	1					
ANR	1484433	Callee	strstr		1484225	0					
ANR	1484434	Identifier	strstr		1484225	0					
ANR	1484435	ArgumentList	str + 1		1484225	1					
ANR	1484436	Argument	str + 1		1484225	0					
ANR	1484437	AdditiveExpression	str + 1		1484225	0		+			
ANR	1484438	Identifier	str		1484225	0					
ANR	1484439	PrimaryExpression	1		1484225	1					
ANR	1484440	Argument	"""."""		1484225	1					
ANR	1484441	PrimaryExpression	"""."""		1484225	0					
ANR	1484442	CompoundStatement		44:31:837:837	1484225	1					
ANR	1484443	ReturnStatement	return false ;	287:4:6209:6221	1484225	0	True				
ANR	1484444	Identifier	false		1484225	0					
ANR	1484445	ElseStatement	else		1484225	0					
ANR	1484446	CompoundStatement		47:9:871:871	1484225	0					
ANR	1484447	ReturnStatement	return false ;	290:3:6242:6254	1484225	0	True				
ANR	1484448	Identifier	false		1484225	0					
ANR	1484449	BreakStatement	break ;	292:2:6262:6267	1484225	10	True				
ANR	1484450	Label	case 'f' :	293:1:6270:6278	1484225	11	True				
ANR	1484451	IfStatement	if ( str && * str )		1484225	12					
ANR	1484452	Condition	str && * str	294:6:6303:6313	1484225	0	True				
ANR	1484453	AndExpression	str && * str		1484225	0		&&			
ANR	1484454	Identifier	str		1484225	0					
ANR	1484455	UnaryOperationExpression	* str		1484225	1					
ANR	1484456	UnaryOperator	*		1484225	0					
ANR	1484457	Identifier	str		1484225	1					
ANR	1484458	CompoundStatement		52:19:950:950	1484225	1					
ANR	1484459	IfStatement	"if ( ! strstr ( str + 1 , ""%"" ) )"		1484225	0					
ANR	1484460	Condition	"! strstr ( str + 1 , ""%"" )"	295:7:6325:6346	1484225	0	True				
ANR	1484461	UnaryOperationExpression	"! strstr ( str + 1 , ""%"" )"		1484225	0					
ANR	1484462	UnaryOperator	!		1484225	0					
ANR	1484463	CallExpression	"strstr ( str + 1 , ""%"" )"		1484225	1					
ANR	1484464	Callee	strstr		1484225	0					
ANR	1484465	Identifier	strstr		1484225	0					
ANR	1484466	ArgumentList	str + 1		1484225	1					
ANR	1484467	Argument	str + 1		1484225	0					
ANR	1484468	AdditiveExpression	str + 1		1484225	0		+			
ANR	1484469	Identifier	str		1484225	0					
ANR	1484470	PrimaryExpression	1		1484225	1					
ANR	1484471	Argument	"""%"""		1484225	1					
ANR	1484472	PrimaryExpression	"""%"""		1484225	0					
ANR	1484473	CompoundStatement		53:31:983:983	1484225	1					
ANR	1484474	ReturnStatement	return false ;	296:4:6355:6367	1484225	0	True				
ANR	1484475	Identifier	false		1484225	0					
ANR	1484476	ElseStatement	else		1484225	0					
ANR	1484477	CompoundStatement		56:9:1017:1017	1484225	0					
ANR	1484478	ReturnStatement	return false ;	299:3:6388:6400	1484225	0	True				
ANR	1484479	Identifier	false		1484225	0					
ANR	1484480	BreakStatement	break ;	301:2:6408:6413	1484225	13	True				
ANR	1484481	Label	case 'u' :	302:1:6416:6424	1484225	14	True				
ANR	1484482	IfStatement	"if ( ! strstr ( str , ""://"" ) )"		1484225	15					
ANR	1484483	Condition	"! strstr ( str , ""://"" )"	303:6:6440:6459	1484225	0	True				
ANR	1484484	UnaryOperationExpression	"! strstr ( str , ""://"" )"		1484225	0					
ANR	1484485	UnaryOperator	!		1484225	0					
ANR	1484486	CallExpression	"strstr ( str , ""://"" )"		1484225	1					
ANR	1484487	Callee	strstr		1484225	0					
ANR	1484488	Identifier	strstr		1484225	0					
ANR	1484489	ArgumentList	str		1484225	1					
ANR	1484490	Argument	str		1484225	0					
ANR	1484491	Identifier	str		1484225	0					
ANR	1484492	Argument	"""://"""		1484225	1					
ANR	1484493	PrimaryExpression	"""://"""		1484225	0					
ANR	1484494	CompoundStatement		61:28:1096:1096	1484225	1					
ANR	1484495	ReturnStatement	return false ;	304:3:6467:6479	1484225	0	True				
ANR	1484496	Identifier	false		1484225	0					
ANR	1484497	BreakStatement	break ;	306:2:6487:6492	1484225	16	True				
ANR	1484498	Label	case 'i' :	307:8:6502:6510	1484225	17	True				
ANR	1484499	CompoundStatement		69:3:1203:1221	1484225	18					
ANR	1484500	IdentifierDeclStatement	int segment = 0 ;	309:3:6526:6541	1484225	0	True				
ANR	1484501	IdentifierDecl	segment = 0		1484225	0					
ANR	1484502	IdentifierDeclType	int		1484225	0					
ANR	1484503	Identifier	segment		1484225	1					
ANR	1484504	AssignmentExpression	segment = 0		1484225	2		=			
ANR	1484505	Identifier	segment		1484225	0					
ANR	1484506	PrimaryExpression	0		1484225	1					
ANR	1484507	IdentifierDeclStatement	int segmentsum = 0 ;	310:3:6546:6564	1484225	1	True				
ANR	1484508	IdentifierDecl	segmentsum = 0		1484225	0					
ANR	1484509	IdentifierDeclType	int		1484225	0					
ANR	1484510	Identifier	segmentsum		1484225	1					
ANR	1484511	AssignmentExpression	segmentsum = 0		1484225	2		=			
ANR	1484512	Identifier	segmentsum		1484225	0					
ANR	1484513	PrimaryExpression	0		1484225	1					
ANR	1484514	IdentifierDeclStatement	bool prevd = false ;	311:3:6569:6587	1484225	2	True				
ANR	1484515	IdentifierDecl	prevd = false		1484225	0					
ANR	1484516	IdentifierDeclType	bool		1484225	0					
ANR	1484517	Identifier	prevd		1484225	1					
ANR	1484518	AssignmentExpression	prevd = false		1484225	2		=			
ANR	1484519	Identifier	false		1484225	0					
ANR	1484520	Identifier	false		1484225	1					
ANR	1484521	ForStatement	for ( i = 0 ; str [ i ] ; i ++ )		1484225	3					
ANR	1484522	ForInit	i = 0 ;	312:8:6597:6602	1484225	0	True				
ANR	1484523	AssignmentExpression	i = 0		1484225	0		=			
ANR	1484524	Identifier	i		1484225	0					
ANR	1484525	PrimaryExpression	0		1484225	1					
ANR	1484526	Condition	str [ i ]	312:15:6604:6609	1484225	1	True				
ANR	1484527	ArrayIndexing	str [ i ]		1484225	0					
ANR	1484528	Identifier	str		1484225	0					
ANR	1484529	Identifier	i		1484225	1					
ANR	1484530	PostIncDecOperationExpression	i ++	312:23:6612:6614	1484225	2	True				
ANR	1484531	Identifier	i		1484225	0					
ANR	1484532	IncDec	++		1484225	1					
ANR	1484533	CompoundStatement		71:4:1257:1273	1484225	3					
ANR	1484534	IdentifierDeclStatement	char ch = str [ i ] ;	313:4:6623:6639	1484225	0	True				
ANR	1484535	IdentifierDecl	ch = str [ i ]		1484225	0					
ANR	1484536	IdentifierDeclType	char		1484225	0					
ANR	1484537	Identifier	ch		1484225	1					
ANR	1484538	AssignmentExpression	ch = str [ i ]		1484225	2		=			
ANR	1484539	Identifier	ch		1484225	0					
ANR	1484540	ArrayIndexing	str [ i ]		1484225	1					
ANR	1484541	Identifier	str		1484225	0					
ANR	1484542	Identifier	i		1484225	1					
ANR	1484543	IfStatement	if ( IS_DIGIT ( ch ) )		1484225	1					
ANR	1484544	Condition	IS_DIGIT ( ch )	314:8:6649:6661	1484225	0	True				
ANR	1484545	CallExpression	IS_DIGIT ( ch )		1484225	0					
ANR	1484546	Callee	IS_DIGIT		1484225	0					
ANR	1484547	Identifier	IS_DIGIT		1484225	0					
ANR	1484548	ArgumentList	ch		1484225	1					
ANR	1484549	Argument	ch		1484225	0					
ANR	1484550	Identifier	ch		1484225	0					
ANR	1484551	CompoundStatement		72:23:1298:1298	1484225	1					
ANR	1484552	ExpressionStatement	segmentsum = segmentsum * 10 + ( ch - '0' )	315:5:6671:6710	1484225	0	True				
ANR	1484553	AssignmentExpression	segmentsum = segmentsum * 10 + ( ch - '0' )		1484225	0		=			
ANR	1484554	Identifier	segmentsum		1484225	0					
ANR	1484555	AdditiveExpression	segmentsum * 10 + ( ch - '0' )		1484225	1		+			
ANR	1484556	MultiplicativeExpression	segmentsum * 10		1484225	0		*			
ANR	1484557	Identifier	segmentsum		1484225	0					
ANR	1484558	PrimaryExpression	10		1484225	1					
ANR	1484559	AdditiveExpression	ch - '0'		1484225	1		-			
ANR	1484560	Identifier	ch		1484225	0					
ANR	1484561	PrimaryExpression	'0'		1484225	1					
ANR	1484562	IfStatement	if ( segment == 3 )		1484225	1					
ANR	1484563	Condition	segment == 3	316:9:6721:6732	1484225	0	True				
ANR	1484564	EqualityExpression	segment == 3		1484225	0		==			
ANR	1484565	Identifier	segment		1484225	0					
ANR	1484566	PrimaryExpression	3		1484225	1					
ANR	1484567	CompoundStatement		74:23:1369:1369	1484225	1					
ANR	1484568	ReturnStatement	return true ;	317:6:6743:6754	1484225	0	True				
ANR	1484569	Identifier	true		1484225	0					
ANR	1484570	ExpressionStatement	prevd = true	319:5:6768:6780	1484225	2	True				
ANR	1484571	AssignmentExpression	prevd = true		1484225	0		=			
ANR	1484572	Identifier	prevd		1484225	0					
ANR	1484573	Identifier	true		1484225	1					
ANR	1484574	ElseStatement	else		1484225	0					
ANR	1484575	IfStatement	if ( ch == '.' )		1484225	0					
ANR	1484576	Condition	ch == '.'	320:15:6797:6805	1484225	0	True				
ANR	1484577	EqualityExpression	ch == '.'		1484225	0		==			
ANR	1484578	Identifier	ch		1484225	0					
ANR	1484579	PrimaryExpression	'.'		1484225	1					
ANR	1484580	CompoundStatement		78:26:1442:1442	1484225	1					
ANR	1484581	IfStatement	if ( prevd == true && segmentsum < 256 )		1484225	0					
ANR	1484582	Condition	prevd == true && segmentsum < 256	321:9:6819:6851	1484225	0	True				
ANR	1484583	AndExpression	prevd == true && segmentsum < 256		1484225	0		&&			
ANR	1484584	EqualityExpression	prevd == true		1484225	0		==			
ANR	1484585	Identifier	prevd		1484225	0					
ANR	1484586	Identifier	true		1484225	1					
ANR	1484587	RelationalExpression	segmentsum < 256		1484225	1		<			
ANR	1484588	Identifier	segmentsum		1484225	0					
ANR	1484589	PrimaryExpression	256		1484225	1					
ANR	1484590	CompoundStatement		79:43:1487:1487	1484225	1					
ANR	1484591	ExpressionStatement	segment ++	322:6:6861:6870	1484225	0	True				
ANR	1484592	PostIncDecOperationExpression	segment ++		1484225	0					
ANR	1484593	Identifier	segment		1484225	0					
ANR	1484594	IncDec	++		1484225	1					
ANR	1484595	ExpressionStatement	segmentsum = 0	323:6:6878:6892	1484225	1	True				
ANR	1484596	AssignmentExpression	segmentsum = 0		1484225	0		=			
ANR	1484597	Identifier	segmentsum		1484225	0					
ANR	1484598	PrimaryExpression	0		1484225	1					
ANR	1484599	ElseStatement	else		1484225	0					
ANR	1484600	CompoundStatement		82:12:1540:1540	1484225	0					
ANR	1484601	ExpressionStatement	segmentsum = 0	325:6:6914:6928	1484225	0	True				
ANR	1484602	AssignmentExpression	segmentsum = 0		1484225	0		=			
ANR	1484603	Identifier	segmentsum		1484225	0					
ANR	1484604	PrimaryExpression	0		1484225	1					
ANR	1484605	ExpressionStatement	segment = 0	326:6:6936:6947	1484225	1	True				
ANR	1484606	AssignmentExpression	segment = 0		1484225	0		=			
ANR	1484607	Identifier	segment		1484225	0					
ANR	1484608	PrimaryExpression	0		1484225	1					
ANR	1484609	ExpressionStatement	prevd = false	328:5:6961:6974	1484225	1	True				
ANR	1484610	AssignmentExpression	prevd = false		1484225	0		=			
ANR	1484611	Identifier	prevd		1484225	0					
ANR	1484612	Identifier	false		1484225	1					
ANR	1484613	ElseStatement	else		1484225	0					
ANR	1484614	CompoundStatement		87:11:1621:1621	1484225	0					
ANR	1484615	ExpressionStatement	segmentsum = 0	330:5:6994:7008	1484225	0	True				
ANR	1484616	AssignmentExpression	segmentsum = 0		1484225	0		=			
ANR	1484617	Identifier	segmentsum		1484225	0					
ANR	1484618	PrimaryExpression	0		1484225	1					
ANR	1484619	ExpressionStatement	prevd = false	331:5:7015:7028	1484225	1	True				
ANR	1484620	AssignmentExpression	prevd = false		1484225	0		=			
ANR	1484621	Identifier	prevd		1484225	0					
ANR	1484622	Identifier	false		1484225	1					
ANR	1484623	ExpressionStatement	segment = 0	332:5:7035:7046	1484225	2	True				
ANR	1484624	AssignmentExpression	segment = 0		1484225	0		=			
ANR	1484625	Identifier	segment		1484225	0					
ANR	1484626	PrimaryExpression	0		1484225	1					
ANR	1484627	ReturnStatement	return false ;	335:3:7062:7074	1484225	4	True				
ANR	1484628	Identifier	false		1484225	0					
ANR	1484629	Label	case 'p' :	337:1:7081:7089	1484225	19	True				
ANR	1484630	IfStatement	if ( str [ 0 ] != '/' )		1484225	20					
ANR	1484631	Condition	str [ 0 ] != '/'	338:6:7105:7117	1484225	0	True				
ANR	1484632	EqualityExpression	str [ 0 ] != '/'		1484225	0		!=			
ANR	1484633	ArrayIndexing	str [ 0 ]		1484225	0					
ANR	1484634	Identifier	str		1484225	0					
ANR	1484635	PrimaryExpression	0		1484225	1					
ANR	1484636	PrimaryExpression	'/'		1484225	1					
ANR	1484637	CompoundStatement		96:21:1754:1754	1484225	1					
ANR	1484638	ReturnStatement	return false ;	339:3:7125:7137	1484225	0	True				
ANR	1484639	Identifier	false		1484225	0					
ANR	1484640	BreakStatement	break ;	341:2:7145:7150	1484225	21	True				
ANR	1484641	Label	case '8' :	342:1:7153:7161	1484225	22	True				
ANR	1484642	ForStatement	for ( i = 0 ; str [ i ] ; i ++ )		1484225	23					
ANR	1484643	ForInit	i = 0 ;	343:7:7178:7183	1484225	0	True				
ANR	1484644	AssignmentExpression	i = 0		1484225	0		=			
ANR	1484645	Identifier	i		1484225	0					
ANR	1484646	PrimaryExpression	0		1484225	1					
ANR	1484647	Condition	str [ i ]	343:14:7185:7190	1484225	1	True				
ANR	1484648	ArrayIndexing	str [ i ]		1484225	0					
ANR	1484649	Identifier	str		1484225	0					
ANR	1484650	Identifier	i		1484225	1					
ANR	1484651	PostIncDecOperationExpression	i ++	343:22:7193:7195	1484225	2	True				
ANR	1484652	Identifier	i		1484225	0					
ANR	1484653	IncDec	++		1484225	1					
ANR	1484654	CompoundStatement		102:3:1837:1853	1484225	3					
ANR	1484655	IdentifierDeclStatement	char ch = str [ i ] ;	344:3:7203:7219	1484225	0	True				
ANR	1484656	IdentifierDecl	ch = str [ i ]		1484225	0					
ANR	1484657	IdentifierDeclType	char		1484225	0					
ANR	1484658	Identifier	ch		1484225	1					
ANR	1484659	AssignmentExpression	ch = str [ i ]		1484225	2		=			
ANR	1484660	Identifier	ch		1484225	0					
ANR	1484661	ArrayIndexing	str [ i ]		1484225	1					
ANR	1484662	Identifier	str		1484225	0					
ANR	1484663	Identifier	i		1484225	1					
ANR	1484664	IfStatement	if ( ch < 0 )		1484225	1					
ANR	1484665	Condition	ch < 0	345:7:7228:7233	1484225	0	True				
ANR	1484666	RelationalExpression	ch < 0		1484225	0		<			
ANR	1484667	Identifier	ch		1484225	0					
ANR	1484668	PrimaryExpression	0		1484225	1					
ANR	1484669	CompoundStatement		103:15:1870:1870	1484225	1					
ANR	1484670	ReturnStatement	return true ;	346:4:7242:7253	1484225	0	True				
ANR	1484671	Identifier	true		1484225	0					
ANR	1484672	ReturnStatement	return false ;	349:2:7266:7278	1484225	24	True				
ANR	1484673	Identifier	false		1484225	0					
ANR	1484674	ReturnStatement	return true ;	351:1:7284:7295	1484225	2	True				
ANR	1484675	Identifier	true		1484225	0					
ANR	1484676	ReturnType	static bool		1484225	1					
ANR	1484677	Identifier	bin_strfilter		1484225	2					
ANR	1484678	ParameterList	"RBin * bin , const char * str"		1484225	3					
ANR	1484679	Parameter	RBin * bin	243:26:5337:5345	1484225	0	True				
ANR	1484680	ParameterType	RBin *		1484225	0					
ANR	1484681	Identifier	bin		1484225	1					
ANR	1484682	Parameter	const char * str	243:37:5348:5362	1484225	1	True				
ANR	1484683	ParameterType	const char *		1484225	0					
ANR	1484684	Identifier	str		1484225	1					
ANR	1484685	CFGEntryNode	ENTRY		1484225		True				
ANR	1484686	CFGExitNode	EXIT		1484225		True				
ANR	1484687	Symbol	IS_PRINTABLE		1484225						
ANR	1484688	Symbol	segmentsum		1484225						
ANR	1484689	Symbol	ch		1484225						
ANR	1484690	Symbol	bin		1484225						
ANR	1484691	Symbol	false		1484225						
ANR	1484692	Symbol	i		1484225						
ANR	1484693	Symbol	* bin		1484225						
ANR	1484694	Symbol	prevd		1484225						
ANR	1484695	Symbol	IS_DIGIT		1484225						
ANR	1484696	Symbol	str		1484225						
ANR	1484697	Symbol	bin -> strfilter		1484225						
ANR	1484698	Symbol	* i		1484225						
ANR	1484699	Symbol	strstr		1484225						
ANR	1484700	Symbol	segment		1484225						
ANR	1484701	Symbol	true		1484225						
ANR	1484702	Symbol	* str		1484225						
ANR	1484703	Function	r_bin_string_filter	354:0:7300:7474							
ANR	1484704	FunctionDef	"r_bin_string_filter (RBin * bin , const char * str , ut64 addr)"		1484703	0					
ANR	1484705	CompoundStatement		354:70:7370:7474	1484703	0					
ANR	1484706	IfStatement	"if ( r_bin_strpurge ( bin , str , addr ) || ! bin_strfilter ( bin , str ) )"		1484703	0					
ANR	1484707	Condition	"r_bin_strpurge ( bin , str , addr ) || ! bin_strfilter ( bin , str )"	355:5:7377:7436	1484703	0	True				
ANR	1484708	OrExpression	"r_bin_strpurge ( bin , str , addr ) || ! bin_strfilter ( bin , str )"		1484703	0		||			
ANR	1484709	CallExpression	"r_bin_strpurge ( bin , str , addr )"		1484703	0					
ANR	1484710	Callee	r_bin_strpurge		1484703	0					
ANR	1484711	Identifier	r_bin_strpurge		1484703	0					
ANR	1484712	ArgumentList	bin		1484703	1					
ANR	1484713	Argument	bin		1484703	0					
ANR	1484714	Identifier	bin		1484703	0					
ANR	1484715	Argument	str		1484703	1					
ANR	1484716	Identifier	str		1484703	0					
ANR	1484717	Argument	addr		1484703	2					
ANR	1484718	Identifier	addr		1484703	0					
ANR	1484719	UnaryOperationExpression	"! bin_strfilter ( bin , str )"		1484703	1					
ANR	1484720	UnaryOperator	!		1484703	0					
ANR	1484721	CallExpression	"bin_strfilter ( bin , str )"		1484703	1					
ANR	1484722	Callee	bin_strfilter		1484703	0					
ANR	1484723	Identifier	bin_strfilter		1484703	0					
ANR	1484724	ArgumentList	bin		1484703	1					
ANR	1484725	Argument	bin		1484703	0					
ANR	1484726	Identifier	bin		1484703	0					
ANR	1484727	Argument	str		1484703	1					
ANR	1484728	Identifier	str		1484703	0					
ANR	1484729	CompoundStatement		2:67:68:68	1484703	1					
ANR	1484730	ReturnStatement	return false ;	356:2:7443:7455	1484703	0	True				
ANR	1484731	Identifier	false		1484703	0					
ANR	1484732	ReturnStatement	return true ;	358:1:7461:7472	1484703	1	True				
ANR	1484733	Identifier	true		1484703	0					
ANR	1484734	ReturnType	R_API bool		1484703	1					
ANR	1484735	Identifier	r_bin_string_filter		1484703	2					
ANR	1484736	ParameterList	"RBin * bin , const char * str , ut64 addr"		1484703	3					
ANR	1484737	Parameter	RBin * bin	354:31:7331:7339	1484703	0	True				
ANR	1484738	ParameterType	RBin *		1484703	0					
ANR	1484739	Identifier	bin		1484703	1					
ANR	1484740	Parameter	const char * str	354:42:7342:7356	1484703	1	True				
ANR	1484741	ParameterType	const char *		1484703	0					
ANR	1484742	Identifier	str		1484703	1					
ANR	1484743	Parameter	ut64 addr	354:59:7359:7367	1484703	2	True				
ANR	1484744	ParameterType	ut64		1484703	0					
ANR	1484745	Identifier	addr		1484703	1					
ANR	1484746	CFGEntryNode	ENTRY		1484703		True				
ANR	1484747	CFGExitNode	EXIT		1484703		True				
ANR	1484748	Symbol	str		1484703						
ANR	1484749	Symbol	bin_strfilter		1484703						
ANR	1484750	Symbol	bin		1484703						
ANR	1484751	Symbol	r_bin_strpurge		1484703						
ANR	1484752	Symbol	false		1484703						
ANR	1484753	Symbol	true		1484703						
ANR	1484754	Symbol	addr		1484703						
