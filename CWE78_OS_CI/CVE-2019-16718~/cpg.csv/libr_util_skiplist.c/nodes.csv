command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	5216316	File	data/converged/CVE-2019-16718~_radare2/libr_util_skiplist.c								
ANR	5216317	Function	r_skiplist_node_new	14:0:336:622							
ANR	5216318	FunctionDef	"r_skiplist_node_new (void * data , int level)"		5216317	0					
ANR	5216319	CompoundStatement		14:66:402:622	5216317	0					
ANR	5216320	IdentifierDeclStatement	RSkipListNode * res = R_NEW0 ( RSkipListNode ) ;	15:1:405:448	5216317	0	True				
ANR	5216321	IdentifierDecl	* res = R_NEW0 ( RSkipListNode )		5216317	0					
ANR	5216322	IdentifierDeclType	RSkipListNode *		5216317	0					
ANR	5216323	Identifier	res		5216317	1					
ANR	5216324	AssignmentExpression	* res = R_NEW0 ( RSkipListNode )		5216317	2		=			
ANR	5216325	Identifier	res		5216317	0					
ANR	5216326	CallExpression	R_NEW0 ( RSkipListNode )		5216317	1					
ANR	5216327	Callee	R_NEW0		5216317	0					
ANR	5216328	Identifier	R_NEW0		5216317	0					
ANR	5216329	ArgumentList	RSkipListNode		5216317	1					
ANR	5216330	Argument	RSkipListNode		5216317	0					
ANR	5216331	Identifier	RSkipListNode		5216317	0					
ANR	5216332	IfStatement	if ( ! res )		5216317	1					
ANR	5216333	Condition	! res	16:5:455:458	5216317	0	True				
ANR	5216334	UnaryOperationExpression	! res		5216317	0					
ANR	5216335	UnaryOperator	!		5216317	0					
ANR	5216336	Identifier	res		5216317	1					
ANR	5216337	CompoundStatement		3:11:58:58	5216317	1					
ANR	5216338	ReturnStatement	return NULL ;	17:2:465:476	5216317	0	True				
ANR	5216339	Identifier	NULL		5216317	0					
ANR	5216340	Statement	res	19:1:482:484	5216317	2	True				
ANR	5216341	Statement	->	19:4:485:486	5216317	3	True				
ANR	5216342	Statement	forward	19:6:487:493	5216317	4	True				
ANR	5216343	Statement	=	19:14:495:495	5216317	5	True				
ANR	5216344	Statement	R_NEWS0	19:16:497:503	5216317	6	True				
ANR	5216345	Statement	(	19:24:505:505	5216317	7	True				
ANR	5216346	Statement	RSkipListNode	19:25:506:518	5216317	8	True				
ANR	5216347	Statement	*	19:39:520:520	5216317	9	True				
ANR	5216348	Statement	","	19:40:521:521	5216317	10	True				
ANR	5216349	Statement	level	19:42:523:527	5216317	11	True				
ANR	5216350	Statement	+	19:48:529:529	5216317	12	True				
ANR	5216351	Statement	1	19:50:531:531	5216317	13	True				
ANR	5216352	Statement	)	19:51:532:532	5216317	14	True				
ANR	5216353	ExpressionStatement		19:52:533:533	5216317	15	True				
ANR	5216354	IfStatement	if ( ! res -> forward )		5216317	16					
ANR	5216355	Condition	! res -> forward	20:5:540:552	5216317	0	True				
ANR	5216356	UnaryOperationExpression	! res -> forward		5216317	0					
ANR	5216357	UnaryOperator	!		5216317	0					
ANR	5216358	PtrMemberAccess	res -> forward		5216317	1					
ANR	5216359	Identifier	res		5216317	0					
ANR	5216360	Identifier	forward		5216317	1					
ANR	5216361	CompoundStatement		7:21:153:153	5216317	1					
ANR	5216362	ExpressionStatement	free ( res )	21:2:560:570	5216317	0	True				
ANR	5216363	CallExpression	free ( res )		5216317	0					
ANR	5216364	Callee	free		5216317	0					
ANR	5216365	Identifier	free		5216317	0					
ANR	5216366	ArgumentList	res		5216317	1					
ANR	5216367	Argument	res		5216317	0					
ANR	5216368	Identifier	res		5216317	0					
ANR	5216369	ReturnStatement	return NULL ;	22:2:574:585	5216317	1	True				
ANR	5216370	Identifier	NULL		5216317	0					
ANR	5216371	ExpressionStatement	res -> data = data	24:1:591:607	5216317	17	True				
ANR	5216372	AssignmentExpression	res -> data = data		5216317	0		=			
ANR	5216373	PtrMemberAccess	res -> data		5216317	0					
ANR	5216374	Identifier	res		5216317	0					
ANR	5216375	Identifier	data		5216317	1					
ANR	5216376	Identifier	data		5216317	1					
ANR	5216377	ReturnStatement	return res ;	25:1:610:620	5216317	18	True				
ANR	5216378	Identifier	res		5216317	0					
ANR	5216379	ReturnType	static RSkipListNode *		5216317	1					
ANR	5216380	Identifier	r_skiplist_node_new		5216317	2					
ANR	5216381	ParameterList	"void * data , int level"		5216317	3					
ANR	5216382	Parameter	void * data	14:43:379:388	5216317	0	True				
ANR	5216383	ParameterType	void *		5216317	0					
ANR	5216384	Identifier	data		5216317	1					
ANR	5216385	Parameter	int level	14:55:391:399	5216317	1	True				
ANR	5216386	ParameterType	int		5216317	0					
ANR	5216387	Identifier	level		5216317	1					
ANR	5216388	CFGEntryNode	ENTRY		5216317		True				
ANR	5216389	CFGExitNode	EXIT		5216317		True				
ANR	5216390	Symbol	res		5216317						
ANR	5216391	Symbol	R_NEW0		5216317						
ANR	5216392	Symbol	res -> data		5216317						
ANR	5216393	Symbol	NULL		5216317						
ANR	5216394	Symbol	data		5216317						
ANR	5216395	Symbol	level		5216317						
ANR	5216396	Symbol	RSkipListNode		5216317						
ANR	5216397	Symbol	* res		5216317						
ANR	5216398	Symbol	res -> forward		5216317						
ANR	5216399	Function	r_skiplist_node_free	28:0:625:824							
ANR	5216400	FunctionDef	"r_skiplist_node_free (RSkipList * list , RSkipListNode * node)"		5216399	0					
ANR	5216401	CompoundStatement		28:72:697:824	5216399	0					
ANR	5216402	IfStatement	if ( node )		5216399	0					
ANR	5216403	Condition	node	29:5:704:707	5216399	0	True				
ANR	5216404	Identifier	node		5216399	0					
ANR	5216405	CompoundStatement		2:11:12:12	5216399	1					
ANR	5216406	IfStatement	if ( list -> freefn && node -> data )		5216399	0					
ANR	5216407	Condition	list -> freefn && node -> data	30:6:718:743	5216399	0	True				
ANR	5216408	AndExpression	list -> freefn && node -> data		5216399	0		&&			
ANR	5216409	PtrMemberAccess	list -> freefn		5216399	0					
ANR	5216410	Identifier	list		5216399	0					
ANR	5216411	Identifier	freefn		5216399	1					
ANR	5216412	PtrMemberAccess	node -> data		5216399	1					
ANR	5216413	Identifier	node		5216399	0					
ANR	5216414	Identifier	data		5216399	1					
ANR	5216415	CompoundStatement		3:34:48:48	5216399	1					
ANR	5216416	ExpressionStatement	list -> freefn ( node -> data )	31:3:751:776	5216399	0	True				
ANR	5216417	CallExpression	list -> freefn ( node -> data )		5216399	0					
ANR	5216418	Callee	list -> freefn		5216399	0					
ANR	5216419	PtrMemberAccess	list -> freefn		5216399	0					
ANR	5216420	Identifier	list		5216399	0					
ANR	5216421	Identifier	freefn		5216399	1					
ANR	5216422	ArgumentList	node -> data		5216399	1					
ANR	5216423	Argument	node -> data		5216399	0					
ANR	5216424	PtrMemberAccess	node -> data		5216399	0					
ANR	5216425	Identifier	node		5216399	0					
ANR	5216426	Identifier	data		5216399	1					
ANR	5216427	ExpressionStatement	free ( node -> forward )	33:2:784:804	5216399	1	True				
ANR	5216428	CallExpression	free ( node -> forward )		5216399	0					
ANR	5216429	Callee	free		5216399	0					
ANR	5216430	Identifier	free		5216399	0					
ANR	5216431	ArgumentList	node -> forward		5216399	1					
ANR	5216432	Argument	node -> forward		5216399	0					
ANR	5216433	PtrMemberAccess	node -> forward		5216399	0					
ANR	5216434	Identifier	node		5216399	0					
ANR	5216435	Identifier	forward		5216399	1					
ANR	5216436	ExpressionStatement	free ( node )	34:2:808:819	5216399	2	True				
ANR	5216437	CallExpression	free ( node )		5216399	0					
ANR	5216438	Callee	free		5216399	0					
ANR	5216439	Identifier	free		5216399	0					
ANR	5216440	ArgumentList	node		5216399	1					
ANR	5216441	Argument	node		5216399	0					
ANR	5216442	Identifier	node		5216399	0					
ANR	5216443	ReturnType	static void		5216399	1					
ANR	5216444	Identifier	r_skiplist_node_free		5216399	2					
ANR	5216445	ParameterList	"RSkipList * list , RSkipListNode * node"		5216399	3					
ANR	5216446	Parameter	RSkipList * list	28:34:659:673	5216399	0	True				
ANR	5216447	ParameterType	RSkipList *		5216399	0					
ANR	5216448	Identifier	list		5216399	1					
ANR	5216449	Parameter	RSkipListNode * node	28:51:676:694	5216399	1	True				
ANR	5216450	ParameterType	RSkipListNode *		5216399	0					
ANR	5216451	Identifier	node		5216399	1					
ANR	5216452	CFGEntryNode	ENTRY		5216399		True				
ANR	5216453	CFGExitNode	EXIT		5216399		True				
ANR	5216454	Symbol	node		5216399						
ANR	5216455	Symbol	node -> data		5216399						
ANR	5216456	Symbol	* list		5216399						
ANR	5216457	Symbol	list -> freefn		5216399						
ANR	5216458	Symbol	node -> forward		5216399						
ANR	5216459	Symbol	* node		5216399						
ANR	5216460	Symbol	list		5216399						
ANR	5216461	Function	init_head	38:0:827:956							
ANR	5216462	FunctionDef	init_head (RSkipListNode * head)		5216461	0					
ANR	5216463	CompoundStatement		38:44:871:956	5216461	0					
ANR	5216464	IdentifierDeclStatement	int i ;	39:1:874:879	5216461	0	True				
ANR	5216465	IdentifierDecl	i		5216461	0					
ANR	5216466	IdentifierDeclType	int		5216461	0					
ANR	5216467	Identifier	i		5216461	1					
ANR	5216468	ForStatement	for ( i = 0 ; i <= SKIPLIST_MAX_DEPTH ; i ++ )		5216461	1					
ANR	5216469	ForInit	i = 0 ;	40:6:887:892	5216461	0	True				
ANR	5216470	AssignmentExpression	i = 0		5216461	0		=			
ANR	5216471	Identifier	i		5216461	0					
ANR	5216472	PrimaryExpression	0		5216461	1					
ANR	5216473	Condition	i <= SKIPLIST_MAX_DEPTH	40:13:894:916	5216461	1	True				
ANR	5216474	RelationalExpression	i <= SKIPLIST_MAX_DEPTH		5216461	0		<=			
ANR	5216475	Identifier	i		5216461	0					
ANR	5216476	Identifier	SKIPLIST_MAX_DEPTH		5216461	1					
ANR	5216477	PostIncDecOperationExpression	i ++	40:38:919:921	5216461	2	True				
ANR	5216478	Identifier	i		5216461	0					
ANR	5216479	IncDec	++		5216461	1					
ANR	5216480	CompoundStatement		3:43:52:52	5216461	3					
ANR	5216481	ExpressionStatement	head -> forward [ i ] = head	41:2:928:951	5216461	0	True				
ANR	5216482	AssignmentExpression	head -> forward [ i ] = head		5216461	0		=			
ANR	5216483	ArrayIndexing	head -> forward [ i ]		5216461	0					
ANR	5216484	PtrMemberAccess	head -> forward		5216461	0					
ANR	5216485	Identifier	head		5216461	0					
ANR	5216486	Identifier	forward		5216461	1					
ANR	5216487	Identifier	i		5216461	1					
ANR	5216488	Identifier	head		5216461	1					
ANR	5216489	ReturnType	static void		5216461	1					
ANR	5216490	Identifier	init_head		5216461	2					
ANR	5216491	ParameterList	RSkipListNode * head		5216461	3					
ANR	5216492	Parameter	RSkipListNode * head	38:23:850:868	5216461	0	True				
ANR	5216493	ParameterType	RSkipListNode *		5216461	0					
ANR	5216494	Identifier	head		5216461	1					
ANR	5216495	CFGEntryNode	ENTRY		5216461		True				
ANR	5216496	CFGExitNode	EXIT		5216461		True				
ANR	5216497	Symbol	head		5216461						
ANR	5216498	Symbol	SKIPLIST_MAX_DEPTH		5216461						
ANR	5216499	Symbol	* head -> forward		5216461						
ANR	5216500	Symbol	* i		5216461						
ANR	5216501	Symbol	* * head		5216461						
ANR	5216502	Symbol	i		5216461						
ANR	5216503	Symbol	* head		5216461						
ANR	5216504	Symbol	head -> forward		5216461						
ANR	5216505	Function	find_insertpoint	51:0:1248:1763							
ANR	5216506	FunctionDef	"find_insertpoint (RSkipList * list , void * data , RSkipListNode * * updates , bool by_data)"		5216505	0					
ANR	5216507	CompoundStatement		51:107:1355:1763	5216505	0					
ANR	5216508	IdentifierDeclStatement	RSkipListNode * x = list -> head ;	52:1:1358:1387	5216505	0	True				
ANR	5216509	IdentifierDecl	* x = list -> head		5216505	0					
ANR	5216510	IdentifierDeclType	RSkipListNode *		5216505	0					
ANR	5216511	Identifier	x		5216505	1					
ANR	5216512	AssignmentExpression	* x = list -> head		5216505	2		=			
ANR	5216513	Identifier	x		5216505	0					
ANR	5216514	PtrMemberAccess	list -> head		5216505	1					
ANR	5216515	Identifier	list		5216505	0					
ANR	5216516	Identifier	head		5216505	1					
ANR	5216517	IdentifierDeclStatement	int i ;	53:1:1390:1395	5216505	1	True				
ANR	5216518	IdentifierDecl	i		5216505	0					
ANR	5216519	IdentifierDeclType	int		5216505	0					
ANR	5216520	Identifier	i		5216505	1					
ANR	5216521	ForStatement	for ( i = list -> list_level ; i >= 0 ; i -- )		5216505	2					
ANR	5216522	ForInit	i = list -> list_level ;	55:6:1404:1424	5216505	0	True				
ANR	5216523	AssignmentExpression	i = list -> list_level		5216505	0		=			
ANR	5216524	Identifier	i		5216505	0					
ANR	5216525	PtrMemberAccess	list -> list_level		5216505	1					
ANR	5216526	Identifier	list		5216505	0					
ANR	5216527	Identifier	list_level		5216505	1					
ANR	5216528	Condition	i >= 0	55:28:1426:1431	5216505	1	True				
ANR	5216529	RelationalExpression	i >= 0		5216505	0		>=			
ANR	5216530	Identifier	i		5216505	0					
ANR	5216531	PrimaryExpression	0		5216505	1					
ANR	5216532	PostIncDecOperationExpression	i --	55:36:1434:1436	5216505	2	True				
ANR	5216533	Identifier	i		5216505	0					
ANR	5216534	IncDec	--		5216505	1					
ANR	5216535	CompoundStatement		5:41:83:83	5216505	3					
ANR	5216536	IfStatement	if ( by_data )		5216505	0					
ANR	5216537	Condition	by_data	56:6:1447:1453	5216505	0	True				
ANR	5216538	Identifier	by_data		5216505	0					
ANR	5216539	CompoundStatement		6:15:100:100	5216505	1					
ANR	5216540	WhileStatement	"while ( x -> forward [ i ] != list -> head && list -> compare ( x -> forward [ i ] -> data , data ) < 0 )"		5216505	0					
ANR	5216541	Condition	"x -> forward [ i ] != list -> head && list -> compare ( x -> forward [ i ] -> data , data ) < 0"	57:10:1468:1547	5216505	0	True				
ANR	5216542	AndExpression	"x -> forward [ i ] != list -> head && list -> compare ( x -> forward [ i ] -> data , data ) < 0"		5216505	0		&&			
ANR	5216543	EqualityExpression	x -> forward [ i ] != list -> head		5216505	0		!=			
ANR	5216544	ArrayIndexing	x -> forward [ i ]		5216505	0					
ANR	5216545	PtrMemberAccess	x -> forward		5216505	0					
ANR	5216546	Identifier	x		5216505	0					
ANR	5216547	Identifier	forward		5216505	1					
ANR	5216548	Identifier	i		5216505	1					
ANR	5216549	PtrMemberAccess	list -> head		5216505	1					
ANR	5216550	Identifier	list		5216505	0					
ANR	5216551	Identifier	head		5216505	1					
ANR	5216552	RelationalExpression	"list -> compare ( x -> forward [ i ] -> data , data ) < 0"		5216505	1		<			
ANR	5216553	CallExpression	"list -> compare ( x -> forward [ i ] -> data , data )"		5216505	0					
ANR	5216554	Callee	list -> compare		5216505	0					
ANR	5216555	PtrMemberAccess	list -> compare		5216505	0					
ANR	5216556	Identifier	list		5216505	0					
ANR	5216557	Identifier	compare		5216505	1					
ANR	5216558	ArgumentList	x -> forward [ i ] -> data		5216505	1					
ANR	5216559	Argument	x -> forward [ i ] -> data		5216505	0					
ANR	5216560	PtrMemberAccess	x -> forward [ i ] -> data		5216505	0					
ANR	5216561	ArrayIndexing	x -> forward [ i ]		5216505	0					
ANR	5216562	PtrMemberAccess	x -> forward		5216505	0					
ANR	5216563	Identifier	x		5216505	0					
ANR	5216564	Identifier	forward		5216505	1					
ANR	5216565	Identifier	i		5216505	1					
ANR	5216566	Identifier	data		5216505	1					
ANR	5216567	Argument	data		5216505	1					
ANR	5216568	Identifier	data		5216505	0					
ANR	5216569	PrimaryExpression	0		5216505	1					
ANR	5216570	CompoundStatement		8:54:194:194	5216505	1					
ANR	5216571	ExpressionStatement	x = x -> forward [ i ]	59:4:1556:1573	5216505	0	True				
ANR	5216572	AssignmentExpression	x = x -> forward [ i ]		5216505	0		=			
ANR	5216573	Identifier	x		5216505	0					
ANR	5216574	ArrayIndexing	x -> forward [ i ]		5216505	1					
ANR	5216575	PtrMemberAccess	x -> forward		5216505	0					
ANR	5216576	Identifier	x		5216505	0					
ANR	5216577	Identifier	forward		5216505	1					
ANR	5216578	Identifier	i		5216505	1					
ANR	5216579	ElseStatement	else		5216505	0					
ANR	5216580	CompoundStatement		11:9:233:233	5216505	0					
ANR	5216581	WhileStatement	while ( x -> forward [ i ] != list -> head && x -> forward [ i ] != data )		5216505	0					
ANR	5216582	Condition	x -> forward [ i ] != list -> head && x -> forward [ i ] != data	62:10:1601:1652	5216505	0	True				
ANR	5216583	AndExpression	x -> forward [ i ] != list -> head && x -> forward [ i ] != data		5216505	0		&&			
ANR	5216584	EqualityExpression	x -> forward [ i ] != list -> head		5216505	0		!=			
ANR	5216585	ArrayIndexing	x -> forward [ i ]		5216505	0					
ANR	5216586	PtrMemberAccess	x -> forward		5216505	0					
ANR	5216587	Identifier	x		5216505	0					
ANR	5216588	Identifier	forward		5216505	1					
ANR	5216589	Identifier	i		5216505	1					
ANR	5216590	PtrMemberAccess	list -> head		5216505	1					
ANR	5216591	Identifier	list		5216505	0					
ANR	5216592	Identifier	head		5216505	1					
ANR	5216593	EqualityExpression	x -> forward [ i ] != data		5216505	1		!=			
ANR	5216594	ArrayIndexing	x -> forward [ i ]		5216505	0					
ANR	5216595	PtrMemberAccess	x -> forward		5216505	0					
ANR	5216596	Identifier	x		5216505	0					
ANR	5216597	Identifier	forward		5216505	1					
ANR	5216598	Identifier	i		5216505	1					
ANR	5216599	Identifier	data		5216505	1					
ANR	5216600	CompoundStatement		12:64:299:299	5216505	1					
ANR	5216601	ExpressionStatement	x = x -> forward [ i ]	63:4:1661:1678	5216505	0	True				
ANR	5216602	AssignmentExpression	x = x -> forward [ i ]		5216505	0		=			
ANR	5216603	Identifier	x		5216505	0					
ANR	5216604	ArrayIndexing	x -> forward [ i ]		5216505	1					
ANR	5216605	PtrMemberAccess	x -> forward		5216505	0					
ANR	5216606	Identifier	x		5216505	0					
ANR	5216607	Identifier	forward		5216505	1					
ANR	5216608	Identifier	i		5216505	1					
ANR	5216609	IfStatement	if ( updates )		5216505	1					
ANR	5216610	Condition	updates	66:6:1695:1701	5216505	0	True				
ANR	5216611	Identifier	updates		5216505	0					
ANR	5216612	CompoundStatement		16:15:348:348	5216505	1					
ANR	5216613	ExpressionStatement	updates [ i ] = x	67:3:1709:1723	5216505	0	True				
ANR	5216614	AssignmentExpression	updates [ i ] = x		5216505	0		=			
ANR	5216615	ArrayIndexing	updates [ i ]		5216505	0					
ANR	5216616	Identifier	updates		5216505	0					
ANR	5216617	Identifier	i		5216505	1					
ANR	5216618	Identifier	x		5216505	1					
ANR	5216619	ExpressionStatement	x = x -> forward [ 0 ]	70:1:1733:1750	5216505	3	True				
ANR	5216620	AssignmentExpression	x = x -> forward [ 0 ]		5216505	0		=			
ANR	5216621	Identifier	x		5216505	0					
ANR	5216622	ArrayIndexing	x -> forward [ 0 ]		5216505	1					
ANR	5216623	PtrMemberAccess	x -> forward		5216505	0					
ANR	5216624	Identifier	x		5216505	0					
ANR	5216625	Identifier	forward		5216505	1					
ANR	5216626	PrimaryExpression	0		5216505	1					
ANR	5216627	ReturnStatement	return x ;	71:1:1753:1761	5216505	4	True				
ANR	5216628	Identifier	x		5216505	0					
ANR	5216629	ReturnType	static RSkipListNode *		5216505	1					
ANR	5216630	Identifier	find_insertpoint		5216505	2					
ANR	5216631	ParameterList	"RSkipList * list , void * data , RSkipListNode * * updates , bool by_data"		5216505	3					
ANR	5216632	Parameter	RSkipList * list	51:39:1287:1301	5216505	0	True				
ANR	5216633	ParameterType	RSkipList *		5216505	0					
ANR	5216634	Identifier	list		5216505	1					
ANR	5216635	Parameter	void * data	51:56:1304:1313	5216505	1	True				
ANR	5216636	ParameterType	void *		5216505	0					
ANR	5216637	Identifier	data		5216505	1					
ANR	5216638	Parameter	RSkipListNode * * updates	51:68:1316:1338	5216505	2	True				
ANR	5216639	ParameterType	RSkipListNode * *		5216505	0					
ANR	5216640	Identifier	updates		5216505	1					
ANR	5216641	Parameter	bool by_data	51:93:1341:1352	5216505	3	True				
ANR	5216642	ParameterType	bool		5216505	0					
ANR	5216643	Identifier	by_data		5216505	1					
ANR	5216644	CFGEntryNode	ENTRY		5216505		True				
ANR	5216645	CFGExitNode	EXIT		5216505		True				
ANR	5216646	Symbol	* * i		5216505						
ANR	5216647	Symbol	* x		5216505						
ANR	5216648	Symbol	data		5216505						
ANR	5216649	Symbol	i		5216505						
ANR	5216650	Symbol	* * * x		5216505						
ANR	5216651	Symbol	* * x -> forward		5216505						
ANR	5216652	Symbol	x -> forward [ i ] -> data		5216505						
ANR	5216653	Symbol	list		5216505						
ANR	5216654	Symbol	updates		5216505						
ANR	5216655	Symbol	list -> head		5216505						
ANR	5216656	Symbol	* x -> forward		5216505						
ANR	5216657	Symbol	* updates		5216505						
ANR	5216658	Symbol	* i		5216505						
ANR	5216659	Symbol	* * x		5216505						
ANR	5216660	Symbol	by_data		5216505						
ANR	5216661	Symbol	* list		5216505						
ANR	5216662	Symbol	x		5216505						
ANR	5216663	Symbol	list -> compare		5216505						
ANR	5216664	Symbol	list -> list_level		5216505						
ANR	5216665	Symbol	x -> forward		5216505						
ANR	5216666	Function	delete_element	74:0:1766:2599							
ANR	5216667	FunctionDef	"delete_element (RSkipList * list , void * data , bool by_data)"		5216666	0					
ANR	5216668	CompoundStatement		74:70:1836:2599	5216666	0					
ANR	5216669	IdentifierDeclStatement	int i ;	75:1:1839:1844	5216666	0	True				
ANR	5216670	IdentifierDecl	i		5216666	0					
ANR	5216671	IdentifierDeclType	int		5216666	0					
ANR	5216672	Identifier	i		5216666	1					
ANR	5216673	IdentifierDeclStatement	"RSkipListNode * update [ SKIPLIST_MAX_DEPTH + 1 ] , * x ;"	76:1:1847:1896	5216666	1	True				
ANR	5216674	IdentifierDecl	* update [ SKIPLIST_MAX_DEPTH + 1 ]		5216666	0					
ANR	5216675	IdentifierDeclType	RSkipListNode * [ SKIPLIST_MAX_DEPTH + 1 ]		5216666	0					
ANR	5216676	Identifier	update		5216666	1					
ANR	5216677	AdditiveExpression	SKIPLIST_MAX_DEPTH + 1		5216666	2		+			
ANR	5216678	Identifier	SKIPLIST_MAX_DEPTH		5216666	0					
ANR	5216679	PrimaryExpression	1		5216666	1					
ANR	5216680	IdentifierDecl	* x		5216666	1					
ANR	5216681	IdentifierDeclType	RSkipListNode *		5216666	0					
ANR	5216682	Identifier	x		5216666	1					
ANR	5216683	ExpressionStatement	"x = find_insertpoint ( list , data , update , by_data )"	79:1:1952:2002	5216666	2	True				
ANR	5216684	AssignmentExpression	"x = find_insertpoint ( list , data , update , by_data )"		5216666	0		=			
ANR	5216685	Identifier	x		5216666	0					
ANR	5216686	CallExpression	"find_insertpoint ( list , data , update , by_data )"		5216666	1					
ANR	5216687	Callee	find_insertpoint		5216666	0					
ANR	5216688	Identifier	find_insertpoint		5216666	0					
ANR	5216689	ArgumentList	list		5216666	1					
ANR	5216690	Argument	list		5216666	0					
ANR	5216691	Identifier	list		5216666	0					
ANR	5216692	Argument	data		5216666	1					
ANR	5216693	Identifier	data		5216666	0					
ANR	5216694	Argument	update		5216666	2					
ANR	5216695	Identifier	update		5216666	0					
ANR	5216696	Argument	by_data		5216666	3					
ANR	5216697	Identifier	by_data		5216666	0					
ANR	5216698	IfStatement	"if ( x == list -> head || list -> compare ( x -> data , data ) != 0 )"		5216666	3					
ANR	5216699	Condition	"x == list -> head || list -> compare ( x -> data , data ) != 0"	81:5:2066:2117	5216666	0	True				
ANR	5216700	OrExpression	"x == list -> head || list -> compare ( x -> data , data ) != 0"		5216666	0		||			
ANR	5216701	EqualityExpression	x == list -> head		5216666	0		==			
ANR	5216702	Identifier	x		5216666	0					
ANR	5216703	PtrMemberAccess	list -> head		5216666	1					
ANR	5216704	Identifier	list		5216666	0					
ANR	5216705	Identifier	head		5216666	1					
ANR	5216706	EqualityExpression	"list -> compare ( x -> data , data ) != 0"		5216666	1		!=			
ANR	5216707	CallExpression	"list -> compare ( x -> data , data )"		5216666	0					
ANR	5216708	Callee	list -> compare		5216666	0					
ANR	5216709	PtrMemberAccess	list -> compare		5216666	0					
ANR	5216710	Identifier	list		5216666	0					
ANR	5216711	Identifier	compare		5216666	1					
ANR	5216712	ArgumentList	x -> data		5216666	1					
ANR	5216713	Argument	x -> data		5216666	0					
ANR	5216714	PtrMemberAccess	x -> data		5216666	0					
ANR	5216715	Identifier	x		5216666	0					
ANR	5216716	Identifier	data		5216666	1					
ANR	5216717	Argument	data		5216666	1					
ANR	5216718	Identifier	data		5216666	0					
ANR	5216719	PrimaryExpression	0		5216666	1					
ANR	5216720	CompoundStatement		8:59:283:283	5216666	1					
ANR	5216721	ReturnStatement	return false ;	82:2:2124:2136	5216666	0	True				
ANR	5216722	Identifier	false		5216666	0					
ANR	5216723	ForStatement	for ( i = 0 ; i <= list -> list_level ; i ++ )		5216666	4					
ANR	5216724	ForInit	i = 0 ;	87:6:2254:2259	5216666	0	True				
ANR	5216725	AssignmentExpression	i = 0		5216666	0		=			
ANR	5216726	Identifier	i		5216666	0					
ANR	5216727	PrimaryExpression	0		5216666	1					
ANR	5216728	Condition	i <= list -> list_level	87:13:2261:2281	5216666	1	True				
ANR	5216729	RelationalExpression	i <= list -> list_level		5216666	0		<=			
ANR	5216730	Identifier	i		5216666	0					
ANR	5216731	PtrMemberAccess	list -> list_level		5216666	1					
ANR	5216732	Identifier	list		5216666	0					
ANR	5216733	Identifier	list_level		5216666	1					
ANR	5216734	PostIncDecOperationExpression	i ++	87:36:2284:2286	5216666	2	True				
ANR	5216735	Identifier	i		5216666	0					
ANR	5216736	IncDec	++		5216666	1					
ANR	5216737	CompoundStatement		14:41:452:452	5216666	3					
ANR	5216738	IfStatement	if ( update [ i ] -> forward [ i ] != x )		5216666	0					
ANR	5216739	Condition	update [ i ] -> forward [ i ] != x	88:6:2297:2322	5216666	0	True				
ANR	5216740	EqualityExpression	update [ i ] -> forward [ i ] != x		5216666	0		!=			
ANR	5216741	ArrayIndexing	update [ i ] -> forward [ i ]		5216666	0					
ANR	5216742	PtrMemberAccess	update [ i ] -> forward		5216666	0					
ANR	5216743	ArrayIndexing	update [ i ]		5216666	0					
ANR	5216744	Identifier	update		5216666	0					
ANR	5216745	Identifier	i		5216666	1					
ANR	5216746	Identifier	forward		5216666	1					
ANR	5216747	Identifier	i		5216666	1					
ANR	5216748	Identifier	x		5216666	1					
ANR	5216749	CompoundStatement		15:34:488:488	5216666	1					
ANR	5216750	BreakStatement	break ;	89:3:2330:2335	5216666	0	True				
ANR	5216751	ExpressionStatement	update [ i ] -> forward [ i ] = x -> forward [ i ]	91:2:2343:2380	5216666	1	True				
ANR	5216752	AssignmentExpression	update [ i ] -> forward [ i ] = x -> forward [ i ]		5216666	0		=			
ANR	5216753	ArrayIndexing	update [ i ] -> forward [ i ]		5216666	0					
ANR	5216754	PtrMemberAccess	update [ i ] -> forward		5216666	0					
ANR	5216755	ArrayIndexing	update [ i ]		5216666	0					
ANR	5216756	Identifier	update		5216666	0					
ANR	5216757	Identifier	i		5216666	1					
ANR	5216758	Identifier	forward		5216666	1					
ANR	5216759	Identifier	i		5216666	1					
ANR	5216760	ArrayIndexing	x -> forward [ i ]		5216666	1					
ANR	5216761	PtrMemberAccess	x -> forward		5216666	0					
ANR	5216762	Identifier	x		5216666	0					
ANR	5216763	Identifier	forward		5216666	1					
ANR	5216764	Identifier	i		5216666	1					
ANR	5216765	ExpressionStatement	"r_skiplist_node_free ( list , x )"	93:1:2386:2416	5216666	5	True				
ANR	5216766	CallExpression	"r_skiplist_node_free ( list , x )"		5216666	0					
ANR	5216767	Callee	r_skiplist_node_free		5216666	0					
ANR	5216768	Identifier	r_skiplist_node_free		5216666	0					
ANR	5216769	ArgumentList	list		5216666	1					
ANR	5216770	Argument	list		5216666	0					
ANR	5216771	Identifier	list		5216666	0					
ANR	5216772	Argument	x		5216666	1					
ANR	5216773	Identifier	x		5216666	0					
ANR	5216774	WhileStatement	while ( ( list -> list_level > 0 ) && ( list -> head -> forward [ list -> list_level ] == list -> head ) )		5216666	6					
ANR	5216775	Condition	( list -> list_level > 0 ) && ( list -> head -> forward [ list -> list_level ] == list -> head )	96:8:2460:2540	5216666	0	True				
ANR	5216776	AndExpression	( list -> list_level > 0 ) && ( list -> head -> forward [ list -> list_level ] == list -> head )		5216666	0		&&			
ANR	5216777	RelationalExpression	list -> list_level > 0		5216666	0		>			
ANR	5216778	PtrMemberAccess	list -> list_level		5216666	0					
ANR	5216779	Identifier	list		5216666	0					
ANR	5216780	Identifier	list_level		5216666	1					
ANR	5216781	PrimaryExpression	0		5216666	1					
ANR	5216782	EqualityExpression	list -> head -> forward [ list -> list_level ] == list -> head		5216666	1		==			
ANR	5216783	ArrayIndexing	list -> head -> forward [ list -> list_level ]		5216666	0					
ANR	5216784	PtrMemberAccess	list -> head -> forward		5216666	0					
ANR	5216785	PtrMemberAccess	list -> head		5216666	0					
ANR	5216786	Identifier	list		5216666	0					
ANR	5216787	Identifier	head		5216666	1					
ANR	5216788	Identifier	forward		5216666	1					
ANR	5216789	PtrMemberAccess	list -> list_level		5216666	1					
ANR	5216790	Identifier	list		5216666	0					
ANR	5216791	Identifier	list_level		5216666	1					
ANR	5216792	PtrMemberAccess	list -> head		5216666	1					
ANR	5216793	Identifier	list		5216666	0					
ANR	5216794	Identifier	head		5216666	1					
ANR	5216795	CompoundStatement		24:57:706:706	5216666	1					
ANR	5216796	ExpressionStatement	list -> list_level --	98:2:2547:2565	5216666	0	True				
ANR	5216797	PostIncDecOperationExpression	list -> list_level --		5216666	0					
ANR	5216798	PtrMemberAccess	list -> list_level		5216666	0					
ANR	5216799	Identifier	list		5216666	0					
ANR	5216800	Identifier	list_level		5216666	1					
ANR	5216801	IncDec	--		5216666	1					
ANR	5216802	ExpressionStatement	list -> size --	100:1:2571:2583	5216666	7	True				
ANR	5216803	PostIncDecOperationExpression	list -> size --		5216666	0					
ANR	5216804	PtrMemberAccess	list -> size		5216666	0					
ANR	5216805	Identifier	list		5216666	0					
ANR	5216806	Identifier	size		5216666	1					
ANR	5216807	IncDec	--		5216666	1					
ANR	5216808	ReturnStatement	return true ;	101:1:2586:2597	5216666	8	True				
ANR	5216809	Identifier	true		5216666	0					
ANR	5216810	ReturnType	static bool		5216666	1					
ANR	5216811	Identifier	delete_element		5216666	2					
ANR	5216812	ParameterList	"RSkipList * list , void * data , bool by_data"		5216666	3					
ANR	5216813	Parameter	RSkipList * list	74:27:1793:1807	5216666	0	True				
ANR	5216814	ParameterType	RSkipList *		5216666	0					
ANR	5216815	Identifier	list		5216666	1					
ANR	5216816	Parameter	void * data	74:44:1810:1819	5216666	1	True				
ANR	5216817	ParameterType	void *		5216666	0					
ANR	5216818	Identifier	data		5216666	1					
ANR	5216819	Parameter	bool by_data	74:56:1822:1833	5216666	2	True				
ANR	5216820	ParameterType	bool		5216666	0					
ANR	5216821	Identifier	by_data		5216666	1					
ANR	5216822	CFGEntryNode	ENTRY		5216666		True				
ANR	5216823	CFGExitNode	EXIT		5216666		True				
ANR	5216824	Symbol	* list -> list_level		5216666						
ANR	5216825	Symbol	* x		5216666						
ANR	5216826	Symbol	list -> head -> forward		5216666						
ANR	5216827	Symbol	* list -> head		5216666						
ANR	5216828	Symbol	data		5216666						
ANR	5216829	Symbol	* update		5216666						
ANR	5216830	Symbol	update		5216666						
ANR	5216831	Symbol	* x -> forward		5216666						
ANR	5216832	Symbol	* * x		5216666						
ANR	5216833	Symbol	* * list		5216666						
ANR	5216834	Symbol	by_data		5216666						
ANR	5216835	Symbol	x -> forward		5216666						
ANR	5216836	Symbol	x -> data		5216666						
ANR	5216837	Symbol	* * i		5216666						
ANR	5216838	Symbol	* * list -> head		5216666						
ANR	5216839	Symbol	* * * update		5216666						
ANR	5216840	Symbol	* * update		5216666						
ANR	5216841	Symbol	false		5216666						
ANR	5216842	Symbol	i		5216666						
ANR	5216843	Symbol	* update [ i ] -> forward		5216666						
ANR	5216844	Symbol	list		5216666						
ANR	5216845	Symbol	list -> size		5216666						
ANR	5216846	Symbol	update [ i ] -> forward		5216666						
ANR	5216847	Symbol	list -> head		5216666						
ANR	5216848	Symbol	* i		5216666						
ANR	5216849	Symbol	* * * list		5216666						
ANR	5216850	Symbol	* list		5216666						
ANR	5216851	Symbol	x		5216666						
ANR	5216852	Symbol	* * * i		5216666						
ANR	5216853	Symbol	true		5216666						
ANR	5216854	Symbol	find_insertpoint		5216666						
ANR	5216855	Symbol	list -> compare		5216666						
ANR	5216856	Symbol	* list -> head -> forward		5216666						
ANR	5216857	Symbol	list -> list_level		5216666						
ANR	5216858	Function	r_skiplist_new	108:0:2829:3227							
ANR	5216859	FunctionDef	"r_skiplist_new (RListFree freefn , RListComparator comparefn)"		5216858	0					
ANR	5216860	CompoundStatement		108:77:2906:3227	5216858	0					
ANR	5216861	IdentifierDeclStatement	RSkipList * list = R_NEW0 ( RSkipList ) ;	109:1:2909:2945	5216858	0	True				
ANR	5216862	IdentifierDecl	* list = R_NEW0 ( RSkipList )		5216858	0					
ANR	5216863	IdentifierDeclType	RSkipList *		5216858	0					
ANR	5216864	Identifier	list		5216858	1					
ANR	5216865	AssignmentExpression	* list = R_NEW0 ( RSkipList )		5216858	2		=			
ANR	5216866	Identifier	list		5216858	0					
ANR	5216867	CallExpression	R_NEW0 ( RSkipList )		5216858	1					
ANR	5216868	Callee	R_NEW0		5216858	0					
ANR	5216869	Identifier	R_NEW0		5216858	0					
ANR	5216870	ArgumentList	RSkipList		5216858	1					
ANR	5216871	Argument	RSkipList		5216858	0					
ANR	5216872	Identifier	RSkipList		5216858	0					
ANR	5216873	IfStatement	if ( ! list )		5216858	1					
ANR	5216874	Condition	! list	110:5:2952:2956	5216858	0	True				
ANR	5216875	UnaryOperationExpression	! list		5216858	0					
ANR	5216876	UnaryOperator	!		5216858	0					
ANR	5216877	Identifier	list		5216858	1					
ANR	5216878	CompoundStatement		3:12:52:52	5216858	1					
ANR	5216879	ReturnStatement	return NULL ;	111:2:2963:2974	5216858	0	True				
ANR	5216880	Identifier	NULL		5216858	0					
ANR	5216881	ExpressionStatement	"list -> head = r_skiplist_node_new ( NULL , SKIPLIST_MAX_DEPTH )"	114:1:2981:3040	5216858	2	True				
ANR	5216882	AssignmentExpression	"list -> head = r_skiplist_node_new ( NULL , SKIPLIST_MAX_DEPTH )"		5216858	0		=			
ANR	5216883	PtrMemberAccess	list -> head		5216858	0					
ANR	5216884	Identifier	list		5216858	0					
ANR	5216885	Identifier	head		5216858	1					
ANR	5216886	CallExpression	"r_skiplist_node_new ( NULL , SKIPLIST_MAX_DEPTH )"		5216858	1					
ANR	5216887	Callee	r_skiplist_node_new		5216858	0					
ANR	5216888	Identifier	r_skiplist_node_new		5216858	0					
ANR	5216889	ArgumentList	NULL		5216858	1					
ANR	5216890	Argument	NULL		5216858	0					
ANR	5216891	Identifier	NULL		5216858	0					
ANR	5216892	Argument	SKIPLIST_MAX_DEPTH		5216858	1					
ANR	5216893	Identifier	SKIPLIST_MAX_DEPTH		5216858	0					
ANR	5216894	IfStatement	if ( ! list -> head )		5216858	3					
ANR	5216895	Condition	! list -> head	115:5:3047:3057	5216858	0	True				
ANR	5216896	UnaryOperationExpression	! list -> head		5216858	0					
ANR	5216897	UnaryOperator	!		5216858	0					
ANR	5216898	PtrMemberAccess	list -> head		5216858	1					
ANR	5216899	Identifier	list		5216858	0					
ANR	5216900	Identifier	head		5216858	1					
ANR	5216901	CompoundStatement		8:18:153:153	5216858	1					
ANR	5216902	ExpressionStatement	free ( list )	116:2:3064:3075	5216858	0	True				
ANR	5216903	CallExpression	free ( list )		5216858	0					
ANR	5216904	Callee	free		5216858	0					
ANR	5216905	Identifier	free		5216858	0					
ANR	5216906	ArgumentList	list		5216858	1					
ANR	5216907	Argument	list		5216858	0					
ANR	5216908	Identifier	list		5216858	0					
ANR	5216909	ReturnStatement	return NULL ;	117:2:3079:3090	5216858	1	True				
ANR	5216910	Identifier	NULL		5216858	0					
ANR	5216911	ExpressionStatement	init_head ( list -> head )	120:1:3097:3119	5216858	4	True				
ANR	5216912	CallExpression	init_head ( list -> head )		5216858	0					
ANR	5216913	Callee	init_head		5216858	0					
ANR	5216914	Identifier	init_head		5216858	0					
ANR	5216915	ArgumentList	list -> head		5216858	1					
ANR	5216916	Argument	list -> head		5216858	0					
ANR	5216917	PtrMemberAccess	list -> head		5216858	0					
ANR	5216918	Identifier	list		5216858	0					
ANR	5216919	Identifier	head		5216858	1					
ANR	5216920	ExpressionStatement	list -> list_level = 0	121:1:3122:3142	5216858	5	True				
ANR	5216921	AssignmentExpression	list -> list_level = 0		5216858	0		=			
ANR	5216922	PtrMemberAccess	list -> list_level		5216858	0					
ANR	5216923	Identifier	list		5216858	0					
ANR	5216924	Identifier	list_level		5216858	1					
ANR	5216925	PrimaryExpression	0		5216858	1					
ANR	5216926	ExpressionStatement	list -> size = 0	122:1:3145:3159	5216858	6	True				
ANR	5216927	AssignmentExpression	list -> size = 0		5216858	0		=			
ANR	5216928	PtrMemberAccess	list -> size		5216858	0					
ANR	5216929	Identifier	list		5216858	0					
ANR	5216930	Identifier	size		5216858	1					
ANR	5216931	PrimaryExpression	0		5216858	1					
ANR	5216932	ExpressionStatement	list -> freefn = freefn	123:1:3162:3183	5216858	7	True				
ANR	5216933	AssignmentExpression	list -> freefn = freefn		5216858	0		=			
ANR	5216934	PtrMemberAccess	list -> freefn		5216858	0					
ANR	5216935	Identifier	list		5216858	0					
ANR	5216936	Identifier	freefn		5216858	1					
ANR	5216937	Identifier	freefn		5216858	1					
ANR	5216938	ExpressionStatement	list -> compare = comparefn	124:1:3186:3211	5216858	8	True				
ANR	5216939	AssignmentExpression	list -> compare = comparefn		5216858	0		=			
ANR	5216940	PtrMemberAccess	list -> compare		5216858	0					
ANR	5216941	Identifier	list		5216858	0					
ANR	5216942	Identifier	compare		5216858	1					
ANR	5216943	Identifier	comparefn		5216858	1					
ANR	5216944	ReturnStatement	return list ;	125:1:3214:3225	5216858	9	True				
ANR	5216945	Identifier	list		5216858	0					
ANR	5216946	ReturnType	R_API RSkipList *		5216858	1					
ANR	5216947	Identifier	r_skiplist_new		5216858	2					
ANR	5216948	ParameterList	"RListFree freefn , RListComparator comparefn"		5216858	3					
ANR	5216949	Parameter	RListFree freefn	108:32:2861:2876	5216858	0	True				
ANR	5216950	ParameterType	RListFree		5216858	0					
ANR	5216951	Identifier	freefn		5216858	1					
ANR	5216952	Parameter	RListComparator comparefn	108:50:2879:2903	5216858	1	True				
ANR	5216953	ParameterType	RListComparator		5216858	0					
ANR	5216954	Identifier	comparefn		5216858	1					
ANR	5216955	CFGEntryNode	ENTRY		5216858		True				
ANR	5216956	CFGExitNode	EXIT		5216858		True				
ANR	5216957	Symbol	NULL		5216858						
ANR	5216958	Symbol	comparefn		5216858						
ANR	5216959	Symbol	list -> freefn		5216858						
ANR	5216960	Symbol	r_skiplist_node_new		5216858						
ANR	5216961	Symbol	RSkipList		5216858						
ANR	5216962	Symbol	list		5216858						
ANR	5216963	Symbol	list -> size		5216858						
ANR	5216964	Symbol	freefn		5216858						
ANR	5216965	Symbol	list -> head		5216858						
ANR	5216966	Symbol	R_NEW0		5216858						
ANR	5216967	Symbol	SKIPLIST_MAX_DEPTH		5216858						
ANR	5216968	Symbol	* list		5216858						
ANR	5216969	Symbol	list -> compare		5216858						
ANR	5216970	Symbol	list -> list_level		5216858						
ANR	5216971	Function	r_skiplist_purge	129:0:3267:3563							
ANR	5216972	FunctionDef	r_skiplist_purge (RSkipList * list)		5216971	0					
ANR	5216973	CompoundStatement		129:45:3312:3563	5216971	0					
ANR	5216974	IdentifierDeclStatement	RSkipListNode * n ;	130:1:3315:3331	5216971	0	True				
ANR	5216975	IdentifierDecl	* n		5216971	0					
ANR	5216976	IdentifierDeclType	RSkipListNode *		5216971	0					
ANR	5216977	Identifier	n		5216971	1					
ANR	5216978	IfStatement	if ( ! list )		5216971	1					
ANR	5216979	Condition	! list	131:5:3338:3342	5216971	0	True				
ANR	5216980	UnaryOperationExpression	! list		5216971	0					
ANR	5216981	UnaryOperator	!		5216971	0					
ANR	5216982	Identifier	list		5216971	1					
ANR	5216983	CompoundStatement		3:12:32:32	5216971	1					
ANR	5216984	ReturnStatement	return ;	132:2:3349:3355	5216971	0	True				
ANR	5216985	ExpressionStatement	n = list -> head -> forward [ 0 ]	134:1:3361:3387	5216971	2	True				
ANR	5216986	AssignmentExpression	n = list -> head -> forward [ 0 ]		5216971	0		=			
ANR	5216987	Identifier	n		5216971	0					
ANR	5216988	ArrayIndexing	list -> head -> forward [ 0 ]		5216971	1					
ANR	5216989	PtrMemberAccess	list -> head -> forward		5216971	0					
ANR	5216990	PtrMemberAccess	list -> head		5216971	0					
ANR	5216991	Identifier	list		5216971	0					
ANR	5216992	Identifier	head		5216971	1					
ANR	5216993	Identifier	forward		5216971	1					
ANR	5216994	PrimaryExpression	0		5216971	1					
ANR	5216995	WhileStatement	while ( n != list -> head )		5216971	3					
ANR	5216996	Condition	n != list -> head	135:8:3397:3411	5216971	0	True				
ANR	5216997	EqualityExpression	n != list -> head		5216971	0		!=			
ANR	5216998	Identifier	n		5216971	0					
ANR	5216999	PtrMemberAccess	list -> head		5216971	1					
ANR	5217000	Identifier	list		5216971	0					
ANR	5217001	Identifier	head		5216971	1					
ANR	5217002	CompoundStatement		8:2:105:125	5216971	1					
ANR	5217003	IdentifierDeclStatement	RSkipListNode * x = n ;	136:2:3418:3438	5216971	0	True				
ANR	5217004	IdentifierDecl	* x = n		5216971	0					
ANR	5217005	IdentifierDeclType	RSkipListNode *		5216971	0					
ANR	5217006	Identifier	x		5216971	1					
ANR	5217007	AssignmentExpression	* x = n		5216971	2		=			
ANR	5217008	Identifier	n		5216971	0					
ANR	5217009	Identifier	n		5216971	1					
ANR	5217010	ExpressionStatement	n = n -> forward [ 0 ]	137:2:3442:3459	5216971	1	True				
ANR	5217011	AssignmentExpression	n = n -> forward [ 0 ]		5216971	0		=			
ANR	5217012	Identifier	n		5216971	0					
ANR	5217013	ArrayIndexing	n -> forward [ 0 ]		5216971	1					
ANR	5217014	PtrMemberAccess	n -> forward		5216971	0					
ANR	5217015	Identifier	n		5216971	0					
ANR	5217016	Identifier	forward		5216971	1					
ANR	5217017	PrimaryExpression	0		5216971	1					
ANR	5217018	ExpressionStatement	"r_skiplist_node_free ( list , x )"	138:2:3463:3493	5216971	2	True				
ANR	5217019	CallExpression	"r_skiplist_node_free ( list , x )"		5216971	0					
ANR	5217020	Callee	r_skiplist_node_free		5216971	0					
ANR	5217021	Identifier	r_skiplist_node_free		5216971	0					
ANR	5217022	ArgumentList	list		5216971	1					
ANR	5217023	Argument	list		5216971	0					
ANR	5217024	Identifier	list		5216971	0					
ANR	5217025	Argument	x		5216971	1					
ANR	5217026	Identifier	x		5216971	0					
ANR	5217027	ExpressionStatement	init_head ( list -> head )	140:1:3499:3521	5216971	4	True				
ANR	5217028	CallExpression	init_head ( list -> head )		5216971	0					
ANR	5217029	Callee	init_head		5216971	0					
ANR	5217030	Identifier	init_head		5216971	0					
ANR	5217031	ArgumentList	list -> head		5216971	1					
ANR	5217032	Argument	list -> head		5216971	0					
ANR	5217033	PtrMemberAccess	list -> head		5216971	0					
ANR	5217034	Identifier	list		5216971	0					
ANR	5217035	Identifier	head		5216971	1					
ANR	5217036	ExpressionStatement	list -> size = 0	141:1:3524:3538	5216971	5	True				
ANR	5217037	AssignmentExpression	list -> size = 0		5216971	0		=			
ANR	5217038	PtrMemberAccess	list -> size		5216971	0					
ANR	5217039	Identifier	list		5216971	0					
ANR	5217040	Identifier	size		5216971	1					
ANR	5217041	PrimaryExpression	0		5216971	1					
ANR	5217042	ExpressionStatement	list -> list_level = 0	142:1:3541:3561	5216971	6	True				
ANR	5217043	AssignmentExpression	list -> list_level = 0		5216971	0		=			
ANR	5217044	PtrMemberAccess	list -> list_level		5216971	0					
ANR	5217045	Identifier	list		5216971	0					
ANR	5217046	Identifier	list_level		5216971	1					
ANR	5217047	PrimaryExpression	0		5216971	1					
ANR	5217048	ReturnType	R_API void		5216971	1					
ANR	5217049	Identifier	r_skiplist_purge		5216971	2					
ANR	5217050	ParameterList	RSkipList * list		5216971	3					
ANR	5217051	Parameter	RSkipList * list	129:28:3295:3309	5216971	0	True				
ANR	5217052	ParameterType	RSkipList *		5216971	0					
ANR	5217053	Identifier	list		5216971	1					
ANR	5217054	CFGEntryNode	ENTRY		5216971		True				
ANR	5217055	CFGExitNode	EXIT		5216971		True				
ANR	5217056	Symbol	* list -> head		5216971						
ANR	5217057	Symbol	list -> head -> forward		5216971						
ANR	5217058	Symbol	* * list -> head		5216971						
ANR	5217059	Symbol	* n -> forward		5216971						
ANR	5217060	Symbol	list		5216971						
ANR	5217061	Symbol	list -> size		5216971						
ANR	5217062	Symbol	n		5216971						
ANR	5217063	Symbol	list -> head		5216971						
ANR	5217064	Symbol	* * list		5216971						
ANR	5217065	Symbol	* * * list		5216971						
ANR	5217066	Symbol	* list		5216971						
ANR	5217067	Symbol	x		5216971						
ANR	5217068	Symbol	* n		5216971						
ANR	5217069	Symbol	n -> forward		5216971						
ANR	5217070	Symbol	* list -> head -> forward		5216971						
ANR	5217071	Symbol	* * n		5216971						
ANR	5217072	Symbol	list -> list_level		5216971						
ANR	5217073	Function	r_skiplist_free	146:0:3632:3787							
ANR	5217074	FunctionDef	r_skiplist_free (RSkipList * list)		5217073	0					
ANR	5217075	CompoundStatement		146:44:3676:3787	5217073	0					
ANR	5217076	IfStatement	if ( ! list )		5217073	0					
ANR	5217077	Condition	! list	147:5:3683:3687	5217073	0	True				
ANR	5217078	UnaryOperationExpression	! list		5217073	0					
ANR	5217079	UnaryOperator	!		5217073	0					
ANR	5217080	Identifier	list		5217073	1					
ANR	5217081	CompoundStatement		2:12:13:13	5217073	1					
ANR	5217082	ReturnStatement	return ;	148:2:3694:3700	5217073	0	True				
ANR	5217083	ExpressionStatement	r_skiplist_purge ( list )	150:1:3706:3729	5217073	1	True				
ANR	5217084	CallExpression	r_skiplist_purge ( list )		5217073	0					
ANR	5217085	Callee	r_skiplist_purge		5217073	0					
ANR	5217086	Identifier	r_skiplist_purge		5217073	0					
ANR	5217087	ArgumentList	list		5217073	1					
ANR	5217088	Argument	list		5217073	0					
ANR	5217089	Identifier	list		5217073	0					
ANR	5217090	ExpressionStatement	"r_skiplist_node_free ( list , list -> head )"	151:1:3732:3771	5217073	2	True				
ANR	5217091	CallExpression	"r_skiplist_node_free ( list , list -> head )"		5217073	0					
ANR	5217092	Callee	r_skiplist_node_free		5217073	0					
ANR	5217093	Identifier	r_skiplist_node_free		5217073	0					
ANR	5217094	ArgumentList	list		5217073	1					
ANR	5217095	Argument	list		5217073	0					
ANR	5217096	Identifier	list		5217073	0					
ANR	5217097	Argument	list -> head		5217073	1					
ANR	5217098	PtrMemberAccess	list -> head		5217073	0					
ANR	5217099	Identifier	list		5217073	0					
ANR	5217100	Identifier	head		5217073	1					
ANR	5217101	ExpressionStatement	free ( list )	152:1:3774:3785	5217073	3	True				
ANR	5217102	CallExpression	free ( list )		5217073	0					
ANR	5217103	Callee	free		5217073	0					
ANR	5217104	Identifier	free		5217073	0					
ANR	5217105	ArgumentList	list		5217073	1					
ANR	5217106	Argument	list		5217073	0					
ANR	5217107	Identifier	list		5217073	0					
ANR	5217108	ReturnType	R_API void		5217073	1					
ANR	5217109	Identifier	r_skiplist_free		5217073	2					
ANR	5217110	ParameterList	RSkipList * list		5217073	3					
ANR	5217111	Parameter	RSkipList * list	146:27:3659:3673	5217073	0	True				
ANR	5217112	ParameterType	RSkipList *		5217073	0					
ANR	5217113	Identifier	list		5217073	1					
ANR	5217114	CFGEntryNode	ENTRY		5217073		True				
ANR	5217115	CFGExitNode	EXIT		5217073		True				
ANR	5217116	Symbol	list -> head		5217073						
ANR	5217117	Symbol	* list		5217073						
ANR	5217118	Symbol	list		5217073						
ANR	5217119	Function	r_skiplist_insert	157:0:3877:5080							
ANR	5217120	FunctionDef	"r_skiplist_insert (RSkipList * list , void * data)"		5217119	0					
ANR	5217121	CompoundStatement		157:68:3945:5080	5217119	0					
ANR	5217122	IdentifierDeclStatement	RSkipListNode * update [ SKIPLIST_MAX_DEPTH + 1 ] ;	158:1:3948:3993	5217119	0	True				
ANR	5217123	IdentifierDecl	* update [ SKIPLIST_MAX_DEPTH + 1 ]		5217119	0					
ANR	5217124	IdentifierDeclType	RSkipListNode * [ SKIPLIST_MAX_DEPTH + 1 ]		5217119	0					
ANR	5217125	Identifier	update		5217119	1					
ANR	5217126	AdditiveExpression	SKIPLIST_MAX_DEPTH + 1		5217119	2		+			
ANR	5217127	Identifier	SKIPLIST_MAX_DEPTH		5217119	0					
ANR	5217128	PrimaryExpression	1		5217119	1					
ANR	5217129	IdentifierDeclStatement	RSkipListNode * x ;	159:1:3996:4012	5217119	1	True				
ANR	5217130	IdentifierDecl	* x		5217119	0					
ANR	5217131	IdentifierDeclType	RSkipListNode *		5217119	0					
ANR	5217132	Identifier	x		5217119	1					
ANR	5217133	IdentifierDeclStatement	"int i , x_level , new_level ;"	160:1:4015:4040	5217119	2	True				
ANR	5217134	IdentifierDecl	i		5217119	0					
ANR	5217135	IdentifierDeclType	int		5217119	0					
ANR	5217136	Identifier	i		5217119	1					
ANR	5217137	IdentifierDecl	x_level		5217119	1					
ANR	5217138	IdentifierDeclType	int		5217119	0					
ANR	5217139	Identifier	x_level		5217119	1					
ANR	5217140	IdentifierDecl	new_level		5217119	2					
ANR	5217141	IdentifierDeclType	int		5217119	0					
ANR	5217142	Identifier	new_level		5217119	1					
ANR	5217143	ExpressionStatement	"x = find_insertpoint ( list , data , update , true )"	163:1:4099:4146	5217119	3	True				
ANR	5217144	AssignmentExpression	"x = find_insertpoint ( list , data , update , true )"		5217119	0		=			
ANR	5217145	Identifier	x		5217119	0					
ANR	5217146	CallExpression	"find_insertpoint ( list , data , update , true )"		5217119	1					
ANR	5217147	Callee	find_insertpoint		5217119	0					
ANR	5217148	Identifier	find_insertpoint		5217119	0					
ANR	5217149	ArgumentList	list		5217119	1					
ANR	5217150	Argument	list		5217119	0					
ANR	5217151	Identifier	list		5217119	0					
ANR	5217152	Argument	data		5217119	1					
ANR	5217153	Identifier	data		5217119	0					
ANR	5217154	Argument	update		5217119	2					
ANR	5217155	Identifier	update		5217119	0					
ANR	5217156	Argument	true		5217119	3					
ANR	5217157	Identifier	true		5217119	0					
ANR	5217158	IfStatement	"if ( x != list -> head && ! list -> compare ( x -> data , data ) )"		5217119	4					
ANR	5217159	Condition	"x != list -> head && ! list -> compare ( x -> data , data )"	165:5:4206:4253	5217119	0	True				
ANR	5217160	AndExpression	"x != list -> head && ! list -> compare ( x -> data , data )"		5217119	0		&&			
ANR	5217161	EqualityExpression	x != list -> head		5217119	0		!=			
ANR	5217162	Identifier	x		5217119	0					
ANR	5217163	PtrMemberAccess	list -> head		5217119	1					
ANR	5217164	Identifier	list		5217119	0					
ANR	5217165	Identifier	head		5217119	1					
ANR	5217166	UnaryOperationExpression	"! list -> compare ( x -> data , data )"		5217119	1					
ANR	5217167	UnaryOperator	!		5217119	0					
ANR	5217168	CallExpression	"list -> compare ( x -> data , data )"		5217119	1					
ANR	5217169	Callee	list -> compare		5217119	0					
ANR	5217170	PtrMemberAccess	list -> compare		5217119	0					
ANR	5217171	Identifier	list		5217119	0					
ANR	5217172	Identifier	compare		5217119	1					
ANR	5217173	ArgumentList	x -> data		5217119	1					
ANR	5217174	Argument	x -> data		5217119	0					
ANR	5217175	PtrMemberAccess	x -> data		5217119	0					
ANR	5217176	Identifier	x		5217119	0					
ANR	5217177	Identifier	data		5217119	1					
ANR	5217178	Argument	data		5217119	1					
ANR	5217179	Identifier	data		5217119	0					
ANR	5217180	CompoundStatement		9:55:310:310	5217119	1					
ANR	5217181	ReturnStatement	return x ;	166:2:4260:4268	5217119	0	True				
ANR	5217182	Identifier	x		5217119	0					
ANR	5217183	ForStatement	for ( x_level = 0 ; rand ( ) < RAND_MAX / 2 && x_level < SKIPLIST_MAX_DEPTH ; x_level ++ )		5217119	5					
ANR	5217184	ForInit	x_level = 0 ;	170:6:4349:4360	5217119	0	True				
ANR	5217185	AssignmentExpression	x_level = 0		5217119	0		=			
ANR	5217186	Identifier	x_level		5217119	0					
ANR	5217187	PrimaryExpression	0		5217119	1					
ANR	5217188	Condition	rand ( ) < RAND_MAX / 2 && x_level < SKIPLIST_MAX_DEPTH	170:19:4362:4415	5217119	1	True				
ANR	5217189	AndExpression	rand ( ) < RAND_MAX / 2 && x_level < SKIPLIST_MAX_DEPTH		5217119	0		&&			
ANR	5217190	RelationalExpression	rand ( ) < RAND_MAX / 2		5217119	0		<			
ANR	5217191	CallExpression	rand ( )		5217119	0					
ANR	5217192	Callee	rand		5217119	0					
ANR	5217193	Identifier	rand		5217119	0					
ANR	5217194	ArgumentList			5217119	1					
ANR	5217195	MultiplicativeExpression	RAND_MAX / 2		5217119	1		/			
ANR	5217196	Identifier	RAND_MAX		5217119	0					
ANR	5217197	PrimaryExpression	2		5217119	1					
ANR	5217198	RelationalExpression	x_level < SKIPLIST_MAX_DEPTH		5217119	1		<			
ANR	5217199	Identifier	x_level		5217119	0					
ANR	5217200	Identifier	SKIPLIST_MAX_DEPTH		5217119	1					
ANR	5217201	PostIncDecOperationExpression	x_level ++	170:75:4418:4426	5217119	2	True				
ANR	5217202	Identifier	x_level		5217119	0					
ANR	5217203	IncDec	++		5217119	1					
ANR	5217204	CompoundStatement		14:86:483:483	5217119	3					
ANR	5217205	ExpressionStatement		171:2:4433:4433	5217119	0	True				
ANR	5217206	ExpressionStatement	new_level = list -> list_level	176:1:4557:4585	5217119	6	True				
ANR	5217207	AssignmentExpression	new_level = list -> list_level		5217119	0		=			
ANR	5217208	Identifier	new_level		5217119	0					
ANR	5217209	PtrMemberAccess	list -> list_level		5217119	1					
ANR	5217210	Identifier	list		5217119	0					
ANR	5217211	Identifier	list_level		5217119	1					
ANR	5217212	IfStatement	if ( x_level > list -> list_level )		5217119	7					
ANR	5217213	Condition	x_level > list -> list_level	177:5:4592:4617	5217119	0	True				
ANR	5217214	RelationalExpression	x_level > list -> list_level		5217119	0		>			
ANR	5217215	Identifier	x_level		5217119	0					
ANR	5217216	PtrMemberAccess	list -> list_level		5217119	1					
ANR	5217217	Identifier	list		5217119	0					
ANR	5217218	Identifier	list_level		5217119	1					
ANR	5217219	CompoundStatement		21:33:674:674	5217119	1					
ANR	5217220	ForStatement	for ( i = list -> list_level + 1 ; i <= x_level ; i ++ )		5217119	0					
ANR	5217221	ForInit	i = list -> list_level + 1 ;	178:7:4629:4653	5217119	0	True				
ANR	5217222	AssignmentExpression	i = list -> list_level + 1		5217119	0		=			
ANR	5217223	Identifier	i		5217119	0					
ANR	5217224	AdditiveExpression	list -> list_level + 1		5217119	1		+			
ANR	5217225	PtrMemberAccess	list -> list_level		5217119	0					
ANR	5217226	Identifier	list		5217119	0					
ANR	5217227	Identifier	list_level		5217119	1					
ANR	5217228	PrimaryExpression	1		5217119	1					
ANR	5217229	Condition	i <= x_level	178:33:4655:4666	5217119	1	True				
ANR	5217230	RelationalExpression	i <= x_level		5217119	0		<=			
ANR	5217231	Identifier	i		5217119	0					
ANR	5217232	Identifier	x_level		5217119	1					
ANR	5217233	PostIncDecOperationExpression	i ++	178:47:4669:4671	5217119	2	True				
ANR	5217234	Identifier	i		5217119	0					
ANR	5217235	IncDec	++		5217119	1					
ANR	5217236	CompoundStatement		22:52:728:728	5217119	3					
ANR	5217237	ExpressionStatement	update [ i ] = list -> head	179:3:4679:4701	5217119	0	True				
ANR	5217238	AssignmentExpression	update [ i ] = list -> head		5217119	0		=			
ANR	5217239	ArrayIndexing	update [ i ]		5217119	0					
ANR	5217240	Identifier	update		5217119	0					
ANR	5217241	Identifier	i		5217119	1					
ANR	5217242	PtrMemberAccess	list -> head		5217119	1					
ANR	5217243	Identifier	list		5217119	0					
ANR	5217244	Identifier	head		5217119	1					
ANR	5217245	ExpressionStatement	new_level = x_level	181:2:4709:4728	5217119	1	True				
ANR	5217246	AssignmentExpression	new_level = x_level		5217119	0		=			
ANR	5217247	Identifier	new_level		5217119	0					
ANR	5217248	Identifier	x_level		5217119	1					
ANR	5217249	ExpressionStatement	"x = r_skiplist_node_new ( data , x_level )"	184:1:4735:4774	5217119	8	True				
ANR	5217250	AssignmentExpression	"x = r_skiplist_node_new ( data , x_level )"		5217119	0		=			
ANR	5217251	Identifier	x		5217119	0					
ANR	5217252	CallExpression	"r_skiplist_node_new ( data , x_level )"		5217119	1					
ANR	5217253	Callee	r_skiplist_node_new		5217119	0					
ANR	5217254	Identifier	r_skiplist_node_new		5217119	0					
ANR	5217255	ArgumentList	data		5217119	1					
ANR	5217256	Argument	data		5217119	0					
ANR	5217257	Identifier	data		5217119	0					
ANR	5217258	Argument	x_level		5217119	1					
ANR	5217259	Identifier	x_level		5217119	0					
ANR	5217260	IfStatement	if ( ! x )		5217119	9					
ANR	5217261	Condition	! x	185:5:4781:4782	5217119	0	True				
ANR	5217262	UnaryOperationExpression	! x		5217119	0					
ANR	5217263	UnaryOperator	!		5217119	0					
ANR	5217264	Identifier	x		5217119	1					
ANR	5217265	CompoundStatement		29:9:839:839	5217119	1					
ANR	5217266	ReturnStatement	return NULL ;	186:2:4789:4800	5217119	0	True				
ANR	5217267	Identifier	NULL		5217119	0					
ANR	5217268	ForStatement	for ( i = 0 ; i <= x_level ; i ++ )		5217119	10					
ANR	5217269	ForInit	i = 0 ;	191:6:4921:4926	5217119	0	True				
ANR	5217270	AssignmentExpression	i = 0		5217119	0		=			
ANR	5217271	Identifier	i		5217119	0					
ANR	5217272	PrimaryExpression	0		5217119	1					
ANR	5217273	Condition	i <= x_level	191:13:4928:4939	5217119	1	True				
ANR	5217274	RelationalExpression	i <= x_level		5217119	0		<=			
ANR	5217275	Identifier	i		5217119	0					
ANR	5217276	Identifier	x_level		5217119	1					
ANR	5217277	PostIncDecOperationExpression	i ++	191:27:4942:4944	5217119	2	True				
ANR	5217278	Identifier	i		5217119	0					
ANR	5217279	IncDec	++		5217119	1					
ANR	5217280	CompoundStatement		35:32:1001:1001	5217119	3					
ANR	5217281	ExpressionStatement	x -> forward [ i ] = update [ i ] -> forward [ i ]	192:2:4951:4988	5217119	0	True				
ANR	5217282	AssignmentExpression	x -> forward [ i ] = update [ i ] -> forward [ i ]		5217119	0		=			
ANR	5217283	ArrayIndexing	x -> forward [ i ]		5217119	0					
ANR	5217284	PtrMemberAccess	x -> forward		5217119	0					
ANR	5217285	Identifier	x		5217119	0					
ANR	5217286	Identifier	forward		5217119	1					
ANR	5217287	Identifier	i		5217119	1					
ANR	5217288	ArrayIndexing	update [ i ] -> forward [ i ]		5217119	1					
ANR	5217289	PtrMemberAccess	update [ i ] -> forward		5217119	0					
ANR	5217290	ArrayIndexing	update [ i ]		5217119	0					
ANR	5217291	Identifier	update		5217119	0					
ANR	5217292	Identifier	i		5217119	1					
ANR	5217293	Identifier	forward		5217119	1					
ANR	5217294	Identifier	i		5217119	1					
ANR	5217295	ExpressionStatement	update [ i ] -> forward [ i ] = x	193:2:4992:5017	5217119	1	True				
ANR	5217296	AssignmentExpression	update [ i ] -> forward [ i ] = x		5217119	0		=			
ANR	5217297	ArrayIndexing	update [ i ] -> forward [ i ]		5217119	0					
ANR	5217298	PtrMemberAccess	update [ i ] -> forward		5217119	0					
ANR	5217299	ArrayIndexing	update [ i ]		5217119	0					
ANR	5217300	Identifier	update		5217119	0					
ANR	5217301	Identifier	i		5217119	1					
ANR	5217302	Identifier	forward		5217119	1					
ANR	5217303	Identifier	i		5217119	1					
ANR	5217304	Identifier	x		5217119	1					
ANR	5217305	ExpressionStatement	list -> list_level = new_level	196:1:5024:5052	5217119	11	True				
ANR	5217306	AssignmentExpression	list -> list_level = new_level		5217119	0		=			
ANR	5217307	PtrMemberAccess	list -> list_level		5217119	0					
ANR	5217308	Identifier	list		5217119	0					
ANR	5217309	Identifier	list_level		5217119	1					
ANR	5217310	Identifier	new_level		5217119	1					
ANR	5217311	ExpressionStatement	list -> size ++	197:1:5055:5067	5217119	12	True				
ANR	5217312	PostIncDecOperationExpression	list -> size ++		5217119	0					
ANR	5217313	PtrMemberAccess	list -> size		5217119	0					
ANR	5217314	Identifier	list		5217119	0					
ANR	5217315	Identifier	size		5217119	1					
ANR	5217316	IncDec	++		5217119	1					
ANR	5217317	ReturnStatement	return x ;	198:1:5070:5078	5217119	13	True				
ANR	5217318	Identifier	x		5217119	0					
ANR	5217319	ReturnType	R_API RSkipListNode *		5217119	1					
ANR	5217320	Identifier	r_skiplist_insert		5217119	2					
ANR	5217321	ParameterList	"RSkipList * list , void * data"		5217119	3					
ANR	5217322	Parameter	RSkipList * list	157:39:3916:3930	5217119	0	True				
ANR	5217323	ParameterType	RSkipList *		5217119	0					
ANR	5217324	Identifier	list		5217119	1					
ANR	5217325	Parameter	void * data	157:56:3933:3942	5217119	1	True				
ANR	5217326	ParameterType	void *		5217119	0					
ANR	5217327	Identifier	data		5217119	1					
ANR	5217328	CFGEntryNode	ENTRY		5217119		True				
ANR	5217329	CFGExitNode	EXIT		5217119		True				
ANR	5217330	Symbol	* x		5217119						
ANR	5217331	Symbol	data		5217119						
ANR	5217332	Symbol	* update		5217119						
ANR	5217333	Symbol	update		5217119						
ANR	5217334	Symbol	rand		5217119						
ANR	5217335	Symbol	* x -> forward		5217119						
ANR	5217336	Symbol	* * x		5217119						
ANR	5217337	Symbol	x_level		5217119						
ANR	5217338	Symbol	x -> forward		5217119						
ANR	5217339	Symbol	x -> data		5217119						
ANR	5217340	Symbol	* * i		5217119						
ANR	5217341	Symbol	NULL		5217119						
ANR	5217342	Symbol	new_level		5217119						
ANR	5217343	Symbol	* * * update		5217119						
ANR	5217344	Symbol	* * update		5217119						
ANR	5217345	Symbol	i		5217119						
ANR	5217346	Symbol	r_skiplist_node_new		5217119						
ANR	5217347	Symbol	* update [ i ] -> forward		5217119						
ANR	5217348	Symbol	list		5217119						
ANR	5217349	Symbol	list -> size		5217119						
ANR	5217350	Symbol	update [ i ] -> forward		5217119						
ANR	5217351	Symbol	list -> head		5217119						
ANR	5217352	Symbol	RAND_MAX		5217119						
ANR	5217353	Symbol	SKIPLIST_MAX_DEPTH		5217119						
ANR	5217354	Symbol	* i		5217119						
ANR	5217355	Symbol	* list		5217119						
ANR	5217356	Symbol	x		5217119						
ANR	5217357	Symbol	true		5217119						
ANR	5217358	Symbol	* * * i		5217119						
ANR	5217359	Symbol	find_insertpoint		5217119						
ANR	5217360	Symbol	list -> compare		5217119						
ANR	5217361	Symbol	list -> list_level		5217119						
ANR	5217362	Function	r_skiplist_delete	202:0:5125:5228							
ANR	5217363	FunctionDef	"r_skiplist_delete (RSkipList * list , void * data)"		5217362	0					
ANR	5217364	CompoundStatement		202:58:5183:5228	5217362	0					
ANR	5217365	ReturnStatement	"return delete_element ( list , data , true ) ;"	203:1:5186:5226	5217362	0	True				
ANR	5217366	CallExpression	"delete_element ( list , data , true )"		5217362	0					
ANR	5217367	Callee	delete_element		5217362	0					
ANR	5217368	Identifier	delete_element		5217362	0					
ANR	5217369	ArgumentList	list		5217362	1					
ANR	5217370	Argument	list		5217362	0					
ANR	5217371	Identifier	list		5217362	0					
ANR	5217372	Argument	data		5217362	1					
ANR	5217373	Identifier	data		5217362	0					
ANR	5217374	Argument	true		5217362	2					
ANR	5217375	Identifier	true		5217362	0					
ANR	5217376	ReturnType	R_API bool		5217362	1					
ANR	5217377	Identifier	r_skiplist_delete		5217362	2					
ANR	5217378	ParameterList	"RSkipList * list , void * data"		5217362	3					
ANR	5217379	Parameter	RSkipList * list	202:29:5154:5168	5217362	0	True				
ANR	5217380	ParameterType	RSkipList *		5217362	0					
ANR	5217381	Identifier	list		5217362	1					
ANR	5217382	Parameter	void * data	202:46:5171:5180	5217362	1	True				
ANR	5217383	ParameterType	void *		5217362	0					
ANR	5217384	Identifier	data		5217362	1					
ANR	5217385	CFGEntryNode	ENTRY		5217362		True				
ANR	5217386	CFGExitNode	EXIT		5217362		True				
ANR	5217387	Symbol	delete_element		5217362						
ANR	5217388	Symbol	data		5217362						
ANR	5217389	Symbol	true		5217362						
ANR	5217390	Symbol	list		5217362						
ANR	5217391	Function	r_skiplist_delete_node	207:0:5283:5401							
ANR	5217392	FunctionDef	"r_skiplist_delete_node (RSkipList * list , RSkipListNode * node)"		5217391	0					
ANR	5217393	CompoundStatement		207:72:5355:5401	5217391	0					
ANR	5217394	ReturnStatement	"return delete_element ( list , node , false ) ;"	208:1:5358:5399	5217391	0	True				
ANR	5217395	CallExpression	"delete_element ( list , node , false )"		5217391	0					
ANR	5217396	Callee	delete_element		5217391	0					
ANR	5217397	Identifier	delete_element		5217391	0					
ANR	5217398	ArgumentList	list		5217391	1					
ANR	5217399	Argument	list		5217391	0					
ANR	5217400	Identifier	list		5217391	0					
ANR	5217401	Argument	node		5217391	1					
ANR	5217402	Identifier	node		5217391	0					
ANR	5217403	Argument	false		5217391	2					
ANR	5217404	Identifier	false		5217391	0					
ANR	5217405	ReturnType	R_API bool		5217391	1					
ANR	5217406	Identifier	r_skiplist_delete_node		5217391	2					
ANR	5217407	ParameterList	"RSkipList * list , RSkipListNode * node"		5217391	3					
ANR	5217408	Parameter	RSkipList * list	207:34:5317:5331	5217391	0	True				
ANR	5217409	ParameterType	RSkipList *		5217391	0					
ANR	5217410	Identifier	list		5217391	1					
ANR	5217411	Parameter	RSkipListNode * node	207:51:5334:5352	5217391	1	True				
ANR	5217412	ParameterType	RSkipListNode *		5217391	0					
ANR	5217413	Identifier	node		5217391	1					
ANR	5217414	CFGEntryNode	ENTRY		5217391		True				
ANR	5217415	CFGExitNode	EXIT		5217391		True				
ANR	5217416	Symbol	node		5217391						
ANR	5217417	Symbol	delete_element		5217391						
ANR	5217418	Symbol	false		5217391						
ANR	5217419	Symbol	list		5217391						
ANR	5217420	Function	r_skiplist_find	211:0:5404:5626							
ANR	5217421	FunctionDef	"r_skiplist_find (RSkipList * list , void * data)"		5217420	0					
ANR	5217422	CompoundStatement		211:66:5470:5626	5217420	0					
ANR	5217423	IdentifierDeclStatement	"RSkipListNode * x = find_insertpoint ( list , data , NULL , true ) ;"	212:1:5473:5533	5217420	0	True				
ANR	5217424	IdentifierDecl	"* x = find_insertpoint ( list , data , NULL , true )"		5217420	0					
ANR	5217425	IdentifierDeclType	RSkipListNode *		5217420	0					
ANR	5217426	Identifier	x		5217420	1					
ANR	5217427	AssignmentExpression	"* x = find_insertpoint ( list , data , NULL , true )"		5217420	2		=			
ANR	5217428	Identifier	x		5217420	0					
ANR	5217429	CallExpression	"find_insertpoint ( list , data , NULL , true )"		5217420	1					
ANR	5217430	Callee	find_insertpoint		5217420	0					
ANR	5217431	Identifier	find_insertpoint		5217420	0					
ANR	5217432	ArgumentList	list		5217420	1					
ANR	5217433	Argument	list		5217420	0					
ANR	5217434	Identifier	list		5217420	0					
ANR	5217435	Argument	data		5217420	1					
ANR	5217436	Identifier	data		5217420	0					
ANR	5217437	Argument	NULL		5217420	2					
ANR	5217438	Identifier	NULL		5217420	0					
ANR	5217439	Argument	true		5217420	3					
ANR	5217440	Identifier	true		5217420	0					
ANR	5217441	IfStatement	"if ( x != list -> head && list -> compare ( x -> data , data ) == 0 )"		5217420	1					
ANR	5217442	Condition	"x != list -> head && list -> compare ( x -> data , data ) == 0"	213:5:5540:5592	5217420	0	True				
ANR	5217443	AndExpression	"x != list -> head && list -> compare ( x -> data , data ) == 0"		5217420	0		&&			
ANR	5217444	EqualityExpression	x != list -> head		5217420	0		!=			
ANR	5217445	Identifier	x		5217420	0					
ANR	5217446	PtrMemberAccess	list -> head		5217420	1					
ANR	5217447	Identifier	list		5217420	0					
ANR	5217448	Identifier	head		5217420	1					
ANR	5217449	EqualityExpression	"list -> compare ( x -> data , data ) == 0"		5217420	1		==			
ANR	5217450	CallExpression	"list -> compare ( x -> data , data )"		5217420	0					
ANR	5217451	Callee	list -> compare		5217420	0					
ANR	5217452	PtrMemberAccess	list -> compare		5217420	0					
ANR	5217453	Identifier	list		5217420	0					
ANR	5217454	Identifier	compare		5217420	1					
ANR	5217455	ArgumentList	x -> data		5217420	1					
ANR	5217456	Argument	x -> data		5217420	0					
ANR	5217457	PtrMemberAccess	x -> data		5217420	0					
ANR	5217458	Identifier	x		5217420	0					
ANR	5217459	Identifier	data		5217420	1					
ANR	5217460	Argument	data		5217420	1					
ANR	5217461	Identifier	data		5217420	0					
ANR	5217462	PrimaryExpression	0		5217420	1					
ANR	5217463	CompoundStatement		3:60:124:124	5217420	1					
ANR	5217464	ReturnStatement	return x ;	214:2:5599:5607	5217420	0	True				
ANR	5217465	Identifier	x		5217420	0					
ANR	5217466	ReturnStatement	return NULL ;	216:1:5613:5624	5217420	2	True				
ANR	5217467	Identifier	NULL		5217420	0					
ANR	5217468	ReturnType	R_API RSkipListNode *		5217420	1					
ANR	5217469	Identifier	r_skiplist_find		5217420	2					
ANR	5217470	ParameterList	"RSkipList * list , void * data"		5217420	3					
ANR	5217471	Parameter	RSkipList * list	211:37:5441:5455	5217420	0	True				
ANR	5217472	ParameterType	RSkipList *		5217420	0					
ANR	5217473	Identifier	list		5217420	1					
ANR	5217474	Parameter	void * data	211:54:5458:5467	5217420	1	True				
ANR	5217475	ParameterType	void *		5217420	0					
ANR	5217476	Identifier	data		5217420	1					
ANR	5217477	CFGEntryNode	ENTRY		5217420		True				
ANR	5217478	CFGExitNode	EXIT		5217420		True				
ANR	5217479	Symbol	list -> head		5217420						
ANR	5217480	Symbol	x -> data		5217420						
ANR	5217481	Symbol	* x		5217420						
ANR	5217482	Symbol	NULL		5217420						
ANR	5217483	Symbol	data		5217420						
ANR	5217484	Symbol	* list		5217420						
ANR	5217485	Symbol	x		5217420						
ANR	5217486	Symbol	true		5217420						
ANR	5217487	Symbol	find_insertpoint		5217420						
ANR	5217488	Symbol	list -> compare		5217420						
ANR	5217489	Symbol	list		5217420						
ANR	5217490	Function	r_skiplist_find_geq	219:0:5629:5800							
ANR	5217491	FunctionDef	"r_skiplist_find_geq (RSkipList * list , void * data)"		5217490	0					
ANR	5217492	CompoundStatement		219:70:5699:5800	5217490	0					
ANR	5217493	IdentifierDeclStatement	"RSkipListNode * x = find_insertpoint ( list , data , NULL , true ) ;"	220:1:5702:5762	5217490	0	True				
ANR	5217494	IdentifierDecl	"* x = find_insertpoint ( list , data , NULL , true )"		5217490	0					
ANR	5217495	IdentifierDeclType	RSkipListNode *		5217490	0					
ANR	5217496	Identifier	x		5217490	1					
ANR	5217497	AssignmentExpression	"* x = find_insertpoint ( list , data , NULL , true )"		5217490	2		=			
ANR	5217498	Identifier	x		5217490	0					
ANR	5217499	CallExpression	"find_insertpoint ( list , data , NULL , true )"		5217490	1					
ANR	5217500	Callee	find_insertpoint		5217490	0					
ANR	5217501	Identifier	find_insertpoint		5217490	0					
ANR	5217502	ArgumentList	list		5217490	1					
ANR	5217503	Argument	list		5217490	0					
ANR	5217504	Identifier	list		5217490	0					
ANR	5217505	Argument	data		5217490	1					
ANR	5217506	Identifier	data		5217490	0					
ANR	5217507	Argument	NULL		5217490	2					
ANR	5217508	Identifier	NULL		5217490	0					
ANR	5217509	Argument	true		5217490	3					
ANR	5217510	Identifier	true		5217490	0					
ANR	5217511	ReturnStatement	return x != list -> head ? x : NULL ;	221:1:5765:5798	5217490	1	True				
ANR	5217512	ConditionalExpression	x != list -> head ? x : NULL		5217490	0					
ANR	5217513	Condition	x != list -> head		5217490	0					
ANR	5217514	EqualityExpression	x != list -> head		5217490	0		!=			
ANR	5217515	Identifier	x		5217490	0					
ANR	5217516	PtrMemberAccess	list -> head		5217490	1					
ANR	5217517	Identifier	list		5217490	0					
ANR	5217518	Identifier	head		5217490	1					
ANR	5217519	Identifier	x		5217490	1					
ANR	5217520	Identifier	NULL		5217490	2					
ANR	5217521	ReturnType	R_API RSkipListNode *		5217490	1					
ANR	5217522	Identifier	r_skiplist_find_geq		5217490	2					
ANR	5217523	ParameterList	"RSkipList * list , void * data"		5217490	3					
ANR	5217524	Parameter	RSkipList * list	219:41:5670:5684	5217490	0	True				
ANR	5217525	ParameterType	RSkipList *		5217490	0					
ANR	5217526	Identifier	list		5217490	1					
ANR	5217527	Parameter	void * data	219:58:5687:5696	5217490	1	True				
ANR	5217528	ParameterType	void *		5217490	0					
ANR	5217529	Identifier	data		5217490	1					
ANR	5217530	CFGEntryNode	ENTRY		5217490		True				
ANR	5217531	CFGExitNode	EXIT		5217490		True				
ANR	5217532	Symbol	list -> head		5217490						
ANR	5217533	Symbol	NULL		5217490						
ANR	5217534	Symbol	data		5217490						
ANR	5217535	Symbol	* list		5217490						
ANR	5217536	Symbol	x		5217490						
ANR	5217537	Symbol	true		5217490						
ANR	5217538	Symbol	find_insertpoint		5217490						
ANR	5217539	Symbol	list		5217490						
ANR	5217540	Function	r_skiplist_find_leq	224:0:5803:6118							
ANR	5217541	FunctionDef	"r_skiplist_find_leq (RSkipList * list , void * data)"		5217540	0					
ANR	5217542	CompoundStatement		224:70:5873:6118	5217540	0					
ANR	5217543	IdentifierDeclStatement	RSkipListNode * x = list -> head ;	225:1:5876:5905	5217540	0	True				
ANR	5217544	IdentifierDecl	* x = list -> head		5217540	0					
ANR	5217545	IdentifierDeclType	RSkipListNode *		5217540	0					
ANR	5217546	Identifier	x		5217540	1					
ANR	5217547	AssignmentExpression	* x = list -> head		5217540	2		=			
ANR	5217548	Identifier	x		5217540	0					
ANR	5217549	PtrMemberAccess	list -> head		5217540	1					
ANR	5217550	Identifier	list		5217540	0					
ANR	5217551	Identifier	head		5217540	1					
ANR	5217552	IdentifierDeclStatement	int i ;	226:1:5908:5913	5217540	1	True				
ANR	5217553	IdentifierDecl	i		5217540	0					
ANR	5217554	IdentifierDeclType	int		5217540	0					
ANR	5217555	Identifier	i		5217540	1					
ANR	5217556	ForStatement	for ( i = list -> list_level ; i >= 0 ; i -- )		5217540	2					
ANR	5217557	ForInit	i = list -> list_level ;	228:6:5922:5942	5217540	0	True				
ANR	5217558	AssignmentExpression	i = list -> list_level		5217540	0		=			
ANR	5217559	Identifier	i		5217540	0					
ANR	5217560	PtrMemberAccess	list -> list_level		5217540	1					
ANR	5217561	Identifier	list		5217540	0					
ANR	5217562	Identifier	list_level		5217540	1					
ANR	5217563	Condition	i >= 0	228:28:5944:5949	5217540	1	True				
ANR	5217564	RelationalExpression	i >= 0		5217540	0		>=			
ANR	5217565	Identifier	i		5217540	0					
ANR	5217566	PrimaryExpression	0		5217540	1					
ANR	5217567	PostIncDecOperationExpression	i --	228:36:5952:5954	5217540	2	True				
ANR	5217568	Identifier	i		5217540	0					
ANR	5217569	IncDec	--		5217540	1					
ANR	5217570	CompoundStatement		5:41:83:83	5217540	3					
ANR	5217571	WhileStatement	"while ( x -> forward [ i ] != list -> head && list -> compare ( x -> forward [ i ] -> data , data ) <= 0 )"		5217540	0					
ANR	5217572	Condition	"x -> forward [ i ] != list -> head && list -> compare ( x -> forward [ i ] -> data , data ) <= 0"	229:9:5968:6048	5217540	0	True				
ANR	5217573	AndExpression	"x -> forward [ i ] != list -> head && list -> compare ( x -> forward [ i ] -> data , data ) <= 0"		5217540	0		&&			
ANR	5217574	EqualityExpression	x -> forward [ i ] != list -> head		5217540	0		!=			
ANR	5217575	ArrayIndexing	x -> forward [ i ]		5217540	0					
ANR	5217576	PtrMemberAccess	x -> forward		5217540	0					
ANR	5217577	Identifier	x		5217540	0					
ANR	5217578	Identifier	forward		5217540	1					
ANR	5217579	Identifier	i		5217540	1					
ANR	5217580	PtrMemberAccess	list -> head		5217540	1					
ANR	5217581	Identifier	list		5217540	0					
ANR	5217582	Identifier	head		5217540	1					
ANR	5217583	RelationalExpression	"list -> compare ( x -> forward [ i ] -> data , data ) <= 0"		5217540	1		<=			
ANR	5217584	CallExpression	"list -> compare ( x -> forward [ i ] -> data , data )"		5217540	0					
ANR	5217585	Callee	list -> compare		5217540	0					
ANR	5217586	PtrMemberAccess	list -> compare		5217540	0					
ANR	5217587	Identifier	list		5217540	0					
ANR	5217588	Identifier	compare		5217540	1					
ANR	5217589	ArgumentList	x -> forward [ i ] -> data		5217540	1					
ANR	5217590	Argument	x -> forward [ i ] -> data		5217540	0					
ANR	5217591	PtrMemberAccess	x -> forward [ i ] -> data		5217540	0					
ANR	5217592	ArrayIndexing	x -> forward [ i ]		5217540	0					
ANR	5217593	PtrMemberAccess	x -> forward		5217540	0					
ANR	5217594	Identifier	x		5217540	0					
ANR	5217595	Identifier	forward		5217540	1					
ANR	5217596	Identifier	i		5217540	1					
ANR	5217597	Identifier	data		5217540	1					
ANR	5217598	Argument	data		5217540	1					
ANR	5217599	Identifier	data		5217540	0					
ANR	5217600	PrimaryExpression	0		5217540	1					
ANR	5217601	CompoundStatement		7:54:177:177	5217540	1					
ANR	5217602	ExpressionStatement	x = x -> forward [ i ]	231:3:6056:6073	5217540	0	True				
ANR	5217603	AssignmentExpression	x = x -> forward [ i ]		5217540	0		=			
ANR	5217604	Identifier	x		5217540	0					
ANR	5217605	ArrayIndexing	x -> forward [ i ]		5217540	1					
ANR	5217606	PtrMemberAccess	x -> forward		5217540	0					
ANR	5217607	Identifier	x		5217540	0					
ANR	5217608	Identifier	forward		5217540	1					
ANR	5217609	Identifier	i		5217540	1					
ANR	5217610	ReturnStatement	return x != list -> head ? x : NULL ;	234:1:6083:6116	5217540	3	True				
ANR	5217611	ConditionalExpression	x != list -> head ? x : NULL		5217540	0					
ANR	5217612	Condition	x != list -> head		5217540	0					
ANR	5217613	EqualityExpression	x != list -> head		5217540	0		!=			
ANR	5217614	Identifier	x		5217540	0					
ANR	5217615	PtrMemberAccess	list -> head		5217540	1					
ANR	5217616	Identifier	list		5217540	0					
ANR	5217617	Identifier	head		5217540	1					
ANR	5217618	Identifier	x		5217540	1					
ANR	5217619	Identifier	NULL		5217540	2					
ANR	5217620	ReturnType	R_API RSkipListNode *		5217540	1					
ANR	5217621	Identifier	r_skiplist_find_leq		5217540	2					
ANR	5217622	ParameterList	"RSkipList * list , void * data"		5217540	3					
ANR	5217623	Parameter	RSkipList * list	224:41:5844:5858	5217540	0	True				
ANR	5217624	ParameterType	RSkipList *		5217540	0					
ANR	5217625	Identifier	list		5217540	1					
ANR	5217626	Parameter	void * data	224:58:5861:5870	5217540	1	True				
ANR	5217627	ParameterType	void *		5217540	0					
ANR	5217628	Identifier	data		5217540	1					
ANR	5217629	CFGEntryNode	ENTRY		5217540		True				
ANR	5217630	CFGExitNode	EXIT		5217540		True				
ANR	5217631	Symbol	* * i		5217540						
ANR	5217632	Symbol	* x		5217540						
ANR	5217633	Symbol	NULL		5217540						
ANR	5217634	Symbol	data		5217540						
ANR	5217635	Symbol	i		5217540						
ANR	5217636	Symbol	* * * x		5217540						
ANR	5217637	Symbol	* * x -> forward		5217540						
ANR	5217638	Symbol	x -> forward [ i ] -> data		5217540						
ANR	5217639	Symbol	list		5217540						
ANR	5217640	Symbol	list -> head		5217540						
ANR	5217641	Symbol	* x -> forward		5217540						
ANR	5217642	Symbol	* i		5217540						
ANR	5217643	Symbol	* * x		5217540						
ANR	5217644	Symbol	* list		5217540						
ANR	5217645	Symbol	x		5217540						
ANR	5217646	Symbol	list -> compare		5217540						
ANR	5217647	Symbol	list -> list_level		5217540						
ANR	5217648	Symbol	x -> forward		5217540						
ANR	5217649	Function	r_skiplist_join	238:0:6163:6353							
ANR	5217650	FunctionDef	"r_skiplist_join (RSkipList * l1 , RSkipList * l2)"		5217649	0					
ANR	5217651	CompoundStatement		238:57:6220:6353	5217649	0					
ANR	5217652	IdentifierDeclStatement	RSkipListNode * it ;	239:1:6223:6240	5217649	0	True				
ANR	5217653	IdentifierDecl	* it		5217649	0					
ANR	5217654	IdentifierDeclType	RSkipListNode *		5217649	0					
ANR	5217655	Identifier	it		5217649	1					
ANR	5217656	IdentifierDeclStatement	void * data ;	240:1:6243:6253	5217649	1	True				
ANR	5217657	IdentifierDecl	* data		5217649	0					
ANR	5217658	IdentifierDeclType	void *		5217649	0					
ANR	5217659	Identifier	data		5217649	1					
ANR	5217660	Statement	r_skiplist_foreach	242:1:6257:6274	5217649	2	True				
ANR	5217661	Statement	(	242:20:6276:6276	5217649	3	True				
ANR	5217662	Statement	l2	242:21:6277:6278	5217649	4	True				
ANR	5217663	Statement	","	242:23:6279:6279	5217649	5	True				
ANR	5217664	Statement	it	242:25:6281:6282	5217649	6	True				
ANR	5217665	Statement	","	242:27:6283:6283	5217649	7	True				
ANR	5217666	Statement	data	242:29:6285:6288	5217649	8	True				
ANR	5217667	Statement	)	242:33:6289:6289	5217649	9	True				
ANR	5217668	CompoundStatement		5:35:70:70	5217649	10					
ANR	5217669	ExpressionStatement	"r_skiplist_insert ( l1 , data )"	243:2:6295:6323	5217649	0	True				
ANR	5217670	CallExpression	"r_skiplist_insert ( l1 , data )"		5217649	0					
ANR	5217671	Callee	r_skiplist_insert		5217649	0					
ANR	5217672	Identifier	r_skiplist_insert		5217649	0					
ANR	5217673	ArgumentList	l1		5217649	1					
ANR	5217674	Argument	l1		5217649	0					
ANR	5217675	Identifier	l1		5217649	0					
ANR	5217676	Argument	data		5217649	1					
ANR	5217677	Identifier	data		5217649	0					
ANR	5217678	ExpressionStatement	r_skiplist_purge ( l2 )	246:1:6330:6351	5217649	11	True				
ANR	5217679	CallExpression	r_skiplist_purge ( l2 )		5217649	0					
ANR	5217680	Callee	r_skiplist_purge		5217649	0					
ANR	5217681	Identifier	r_skiplist_purge		5217649	0					
ANR	5217682	ArgumentList	l2		5217649	1					
ANR	5217683	Argument	l2		5217649	0					
ANR	5217684	Identifier	l2		5217649	0					
ANR	5217685	ReturnType	R_API void		5217649	1					
ANR	5217686	Identifier	r_skiplist_join		5217649	2					
ANR	5217687	ParameterList	"RSkipList * l1 , RSkipList * l2"		5217649	3					
ANR	5217688	Parameter	RSkipList * l1	238:27:6190:6202	5217649	0	True				
ANR	5217689	ParameterType	RSkipList *		5217649	0					
ANR	5217690	Identifier	l1		5217649	1					
ANR	5217691	Parameter	RSkipList * l2	238:42:6205:6217	5217649	1	True				
ANR	5217692	ParameterType	RSkipList *		5217649	0					
ANR	5217693	Identifier	l2		5217649	1					
ANR	5217694	CFGEntryNode	ENTRY		5217649		True				
ANR	5217695	CFGExitNode	EXIT		5217649		True				
ANR	5217696	Symbol	data		5217649						
ANR	5217697	Symbol	l1		5217649						
ANR	5217698	Symbol	l2		5217649						
ANR	5217699	Symbol	it		5217649						
ANR	5217700	Function	r_skiplist_get_first	250:0:6430:6606							
ANR	5217701	FunctionDef	r_skiplist_get_first (RSkipList * list)		5217700	0					
ANR	5217702	CompoundStatement		250:50:6480:6606	5217700	0					
ANR	5217703	IfStatement	if ( ! list )		5217700	0					
ANR	5217704	Condition	! list	251:5:6487:6491	5217700	0	True				
ANR	5217705	UnaryOperationExpression	! list		5217700	0					
ANR	5217706	UnaryOperator	!		5217700	0					
ANR	5217707	Identifier	list		5217700	1					
ANR	5217708	CompoundStatement		2:12:13:13	5217700	1					
ANR	5217709	ReturnStatement	return NULL ;	252:2:6498:6509	5217700	0	True				
ANR	5217710	Identifier	NULL		5217700	0					
ANR	5217711	IdentifierDeclStatement	RSkipListNode * res = list -> head -> forward [ 0 ] ;	254:1:6515:6558	5217700	1	True				
ANR	5217712	IdentifierDecl	* res = list -> head -> forward [ 0 ]		5217700	0					
ANR	5217713	IdentifierDeclType	RSkipListNode *		5217700	0					
ANR	5217714	Identifier	res		5217700	1					
ANR	5217715	AssignmentExpression	* res = list -> head -> forward [ 0 ]		5217700	2		=			
ANR	5217716	Identifier	res		5217700	0					
ANR	5217717	ArrayIndexing	list -> head -> forward [ 0 ]		5217700	1					
ANR	5217718	PtrMemberAccess	list -> head -> forward		5217700	0					
ANR	5217719	PtrMemberAccess	list -> head		5217700	0					
ANR	5217720	Identifier	list		5217700	0					
ANR	5217721	Identifier	head		5217700	1					
ANR	5217722	Identifier	forward		5217700	1					
ANR	5217723	PrimaryExpression	0		5217700	1					
ANR	5217724	ReturnStatement	return res == list -> head ? NULL : res -> data ;	255:1:6561:6604	5217700	2	True				
ANR	5217725	ConditionalExpression	res == list -> head ? NULL : res -> data		5217700	0					
ANR	5217726	Condition	res == list -> head		5217700	0					
ANR	5217727	EqualityExpression	res == list -> head		5217700	0		==			
ANR	5217728	Identifier	res		5217700	0					
ANR	5217729	PtrMemberAccess	list -> head		5217700	1					
ANR	5217730	Identifier	list		5217700	0					
ANR	5217731	Identifier	head		5217700	1					
ANR	5217732	Identifier	NULL		5217700	1					
ANR	5217733	PtrMemberAccess	res -> data		5217700	2					
ANR	5217734	Identifier	res		5217700	0					
ANR	5217735	Identifier	data		5217700	1					
ANR	5217736	ReturnType	R_API void *		5217700	1					
ANR	5217737	Identifier	r_skiplist_get_first		5217700	2					
ANR	5217738	ParameterList	RSkipList * list		5217700	3					
ANR	5217739	Parameter	RSkipList * list	250:33:6463:6477	5217700	0	True				
ANR	5217740	ParameterType	RSkipList *		5217700	0					
ANR	5217741	Identifier	list		5217700	1					
ANR	5217742	CFGEntryNode	ENTRY		5217700		True				
ANR	5217743	CFGExitNode	EXIT		5217700		True				
ANR	5217744	Symbol	res		5217700						
ANR	5217745	Symbol	list -> head -> forward		5217700						
ANR	5217746	Symbol	* list -> head		5217700						
ANR	5217747	Symbol	NULL		5217700						
ANR	5217748	Symbol	* * list -> head		5217700						
ANR	5217749	Symbol	* res		5217700						
ANR	5217750	Symbol	list		5217700						
ANR	5217751	Symbol	list -> head		5217700						
ANR	5217752	Symbol	res -> data		5217700						
ANR	5217753	Symbol	* * list		5217700						
ANR	5217754	Symbol	* * * list		5217700						
ANR	5217755	Symbol	* list		5217700						
ANR	5217756	Symbol	* list -> head -> forward		5217700						
ANR	5217757	Function	r_skiplist_get_n	259:0:6681:6937							
ANR	5217758	FunctionDef	"r_skiplist_get_n (RSkipList * list , int n)"		5217757	0					
ANR	5217759	CompoundStatement		259:53:6734:6937	5217757	0					
ANR	5217760	IdentifierDeclStatement	int count = 0 ;	260:1:6737:6750	5217757	0	True				
ANR	5217761	IdentifierDecl	count = 0		5217757	0					
ANR	5217762	IdentifierDeclType	int		5217757	0					
ANR	5217763	Identifier	count		5217757	1					
ANR	5217764	AssignmentExpression	count = 0		5217757	2		=			
ANR	5217765	Identifier	count		5217757	0					
ANR	5217766	PrimaryExpression	0		5217757	1					
ANR	5217767	IdentifierDeclStatement	RSkipListNode * node ;	261:1:6753:6772	5217757	1	True				
ANR	5217768	IdentifierDecl	* node		5217757	0					
ANR	5217769	IdentifierDeclType	RSkipListNode *		5217757	0					
ANR	5217770	Identifier	node		5217757	1					
ANR	5217771	IdentifierDeclStatement	void * data ;	262:1:6775:6785	5217757	2	True				
ANR	5217772	IdentifierDecl	* data		5217757	0					
ANR	5217773	IdentifierDeclType	void *		5217757	0					
ANR	5217774	Identifier	data		5217757	1					
ANR	5217775	IfStatement	if ( ! list || n < 0 )		5217757	3					
ANR	5217776	Condition	! list || n < 0	263:5:6792:6805	5217757	0	True				
ANR	5217777	OrExpression	! list || n < 0		5217757	0		||			
ANR	5217778	UnaryOperationExpression	! list		5217757	0					
ANR	5217779	UnaryOperator	!		5217757	0					
ANR	5217780	Identifier	list		5217757	1					
ANR	5217781	RelationalExpression	n < 0		5217757	1		<			
ANR	5217782	Identifier	n		5217757	0					
ANR	5217783	PrimaryExpression	0		5217757	1					
ANR	5217784	CompoundStatement		5:21:73:73	5217757	1					
ANR	5217785	ReturnStatement	return NULL ;	264:2:6812:6823	5217757	0	True				
ANR	5217786	Identifier	NULL		5217757	0					
ANR	5217787	Statement	r_skiplist_foreach	266:1:6829:6846	5217757	4	True				
ANR	5217788	Statement	(	266:20:6848:6848	5217757	5	True				
ANR	5217789	Statement	list	266:21:6849:6852	5217757	6	True				
ANR	5217790	Statement	","	266:25:6853:6853	5217757	7	True				
ANR	5217791	Statement	node	266:27:6855:6858	5217757	8	True				
ANR	5217792	Statement	","	266:31:6859:6859	5217757	9	True				
ANR	5217793	Statement	data	266:33:6861:6864	5217757	10	True				
ANR	5217794	Statement	)	266:37:6865:6865	5217757	11	True				
ANR	5217795	CompoundStatement		8:39:132:132	5217757	12					
ANR	5217796	IfStatement	if ( count == n )		5217757	0					
ANR	5217797	Condition	count == n	267:6:6875:6884	5217757	0	True				
ANR	5217798	EqualityExpression	count == n		5217757	0		==			
ANR	5217799	Identifier	count		5217757	0					
ANR	5217800	Identifier	n		5217757	1					
ANR	5217801	CompoundStatement		9:18:152:152	5217757	1					
ANR	5217802	ReturnStatement	return data ;	268:3:6892:6903	5217757	0	True				
ANR	5217803	Identifier	data		5217757	0					
ANR	5217804	ExpressionStatement	++ count	270:2:6911:6918	5217757	1	True				
ANR	5217805	UnaryExpression	++ count		5217757	0					
ANR	5217806	IncDec	++		5217757	0					
ANR	5217807	Identifier	count		5217757	1					
ANR	5217808	ReturnStatement	return NULL ;	272:1:6924:6935	5217757	13	True				
ANR	5217809	Identifier	NULL		5217757	0					
ANR	5217810	ReturnType	R_API void *		5217757	1					
ANR	5217811	Identifier	r_skiplist_get_n		5217757	2					
ANR	5217812	ParameterList	"RSkipList * list , int n"		5217757	3					
ANR	5217813	Parameter	RSkipList * list	259:29:6710:6724	5217757	0	True				
ANR	5217814	ParameterType	RSkipList *		5217757	0					
ANR	5217815	Identifier	list		5217757	1					
ANR	5217816	Parameter	int n	259:46:6727:6731	5217757	1	True				
ANR	5217817	ParameterType	int		5217757	0					
ANR	5217818	Identifier	n		5217757	1					
ANR	5217819	CFGEntryNode	ENTRY		5217757		True				
ANR	5217820	CFGExitNode	EXIT		5217757		True				
ANR	5217821	Symbol	node		5217757						
ANR	5217822	Symbol	NULL		5217757						
ANR	5217823	Symbol	data		5217757						
ANR	5217824	Symbol	count		5217757						
ANR	5217825	Symbol	list		5217757						
ANR	5217826	Symbol	n		5217757						
ANR	5217827	Function	r_skiplist_get_geq	276:0:6941:7085							
ANR	5217828	FunctionDef	"r_skiplist_get_geq (RSkipList * list , void * data)"		5217827	0					
ANR	5217829	CompoundStatement		276:60:7001:7085	5217827	0					
ANR	5217830	IdentifierDeclStatement	"RSkipListNode * x = r_skiplist_find_geq ( list , data ) ;"	277:1:7004:7055	5217827	0	True				
ANR	5217831	IdentifierDecl	"* x = r_skiplist_find_geq ( list , data )"		5217827	0					
ANR	5217832	IdentifierDeclType	RSkipListNode *		5217827	0					
ANR	5217833	Identifier	x		5217827	1					
ANR	5217834	AssignmentExpression	"* x = r_skiplist_find_geq ( list , data )"		5217827	2		=			
ANR	5217835	Identifier	x		5217827	0					
ANR	5217836	CallExpression	"r_skiplist_find_geq ( list , data )"		5217827	1					
ANR	5217837	Callee	r_skiplist_find_geq		5217827	0					
ANR	5217838	Identifier	r_skiplist_find_geq		5217827	0					
ANR	5217839	ArgumentList	list		5217827	1					
ANR	5217840	Argument	list		5217827	0					
ANR	5217841	Identifier	list		5217827	0					
ANR	5217842	Argument	data		5217827	1					
ANR	5217843	Identifier	data		5217827	0					
ANR	5217844	ReturnStatement	return x ? x -> data : NULL ;	278:1:7058:7083	5217827	1	True				
ANR	5217845	ConditionalExpression	x ? x -> data : NULL		5217827	0					
ANR	5217846	Condition	x		5217827	0					
ANR	5217847	Identifier	x		5217827	0					
ANR	5217848	PtrMemberAccess	x -> data		5217827	1					
ANR	5217849	Identifier	x		5217827	0					
ANR	5217850	Identifier	data		5217827	1					
ANR	5217851	Identifier	NULL		5217827	2					
ANR	5217852	ReturnType	R_API void *		5217827	1					
ANR	5217853	Identifier	r_skiplist_get_geq		5217827	2					
ANR	5217854	ParameterList	"RSkipList * list , void * data"		5217827	3					
ANR	5217855	Parameter	RSkipList * list	276:31:6972:6986	5217827	0	True				
ANR	5217856	ParameterType	RSkipList *		5217827	0					
ANR	5217857	Identifier	list		5217827	1					
ANR	5217858	Parameter	void * data	276:48:6989:6998	5217827	1	True				
ANR	5217859	ParameterType	void *		5217827	0					
ANR	5217860	Identifier	data		5217827	1					
ANR	5217861	CFGEntryNode	ENTRY		5217827		True				
ANR	5217862	CFGExitNode	EXIT		5217827		True				
ANR	5217863	Symbol	x -> data		5217827						
ANR	5217864	Symbol	* x		5217827						
ANR	5217865	Symbol	NULL		5217827						
ANR	5217866	Symbol	data		5217827						
ANR	5217867	Symbol	r_skiplist_find_geq		5217827						
ANR	5217868	Symbol	x		5217827						
ANR	5217869	Symbol	list		5217827						
ANR	5217870	Function	r_skiplist_get_leq	281:0:7088:7232							
ANR	5217871	FunctionDef	"r_skiplist_get_leq (RSkipList * list , void * data)"		5217870	0					
ANR	5217872	CompoundStatement		281:60:7148:7232	5217870	0					
ANR	5217873	IdentifierDeclStatement	"RSkipListNode * x = r_skiplist_find_leq ( list , data ) ;"	282:1:7151:7202	5217870	0	True				
ANR	5217874	IdentifierDecl	"* x = r_skiplist_find_leq ( list , data )"		5217870	0					
ANR	5217875	IdentifierDeclType	RSkipListNode *		5217870	0					
ANR	5217876	Identifier	x		5217870	1					
ANR	5217877	AssignmentExpression	"* x = r_skiplist_find_leq ( list , data )"		5217870	2		=			
ANR	5217878	Identifier	x		5217870	0					
ANR	5217879	CallExpression	"r_skiplist_find_leq ( list , data )"		5217870	1					
ANR	5217880	Callee	r_skiplist_find_leq		5217870	0					
ANR	5217881	Identifier	r_skiplist_find_leq		5217870	0					
ANR	5217882	ArgumentList	list		5217870	1					
ANR	5217883	Argument	list		5217870	0					
ANR	5217884	Identifier	list		5217870	0					
ANR	5217885	Argument	data		5217870	1					
ANR	5217886	Identifier	data		5217870	0					
ANR	5217887	ReturnStatement	return x ? x -> data : NULL ;	283:1:7205:7230	5217870	1	True				
ANR	5217888	ConditionalExpression	x ? x -> data : NULL		5217870	0					
ANR	5217889	Condition	x		5217870	0					
ANR	5217890	Identifier	x		5217870	0					
ANR	5217891	PtrMemberAccess	x -> data		5217870	1					
ANR	5217892	Identifier	x		5217870	0					
ANR	5217893	Identifier	data		5217870	1					
ANR	5217894	Identifier	NULL		5217870	2					
ANR	5217895	ReturnType	R_API void *		5217870	1					
ANR	5217896	Identifier	r_skiplist_get_leq		5217870	2					
ANR	5217897	ParameterList	"RSkipList * list , void * data"		5217870	3					
ANR	5217898	Parameter	RSkipList * list	281:31:7119:7133	5217870	0	True				
ANR	5217899	ParameterType	RSkipList *		5217870	0					
ANR	5217900	Identifier	list		5217870	1					
ANR	5217901	Parameter	void * data	281:48:7136:7145	5217870	1	True				
ANR	5217902	ParameterType	void *		5217870	0					
ANR	5217903	Identifier	data		5217870	1					
ANR	5217904	CFGEntryNode	ENTRY		5217870		True				
ANR	5217905	CFGExitNode	EXIT		5217870		True				
ANR	5217906	Symbol	x -> data		5217870						
ANR	5217907	Symbol	r_skiplist_find_leq		5217870						
ANR	5217908	Symbol	* x		5217870						
ANR	5217909	Symbol	NULL		5217870						
ANR	5217910	Symbol	data		5217870						
ANR	5217911	Symbol	x		5217870						
ANR	5217912	Symbol	list		5217870						
ANR	5217913	Function	r_skiplist_empty	287:0:7271:7343							
ANR	5217914	FunctionDef	r_skiplist_empty (RSkipList * list)		5217913	0					
ANR	5217915	CompoundStatement		287:45:7316:7343	5217913	0					
ANR	5217916	ReturnStatement	return list -> size == 0 ;	288:1:7319:7341	5217913	0	True				
ANR	5217917	EqualityExpression	list -> size == 0		5217913	0		==			
ANR	5217918	PtrMemberAccess	list -> size		5217913	0					
ANR	5217919	Identifier	list		5217913	0					
ANR	5217920	Identifier	size		5217913	1					
ANR	5217921	PrimaryExpression	0		5217913	1					
ANR	5217922	ReturnType	R_API bool		5217913	1					
ANR	5217923	Identifier	r_skiplist_empty		5217913	2					
ANR	5217924	ParameterList	RSkipList * list		5217913	3					
ANR	5217925	Parameter	RSkipList * list	287:28:7299:7313	5217913	0	True				
ANR	5217926	ParameterType	RSkipList *		5217913	0					
ANR	5217927	Identifier	list		5217913	1					
ANR	5217928	CFGEntryNode	ENTRY		5217913		True				
ANR	5217929	CFGExitNode	EXIT		5217913		True				
ANR	5217930	Symbol	* list		5217913						
ANR	5217931	Symbol	list		5217913						
ANR	5217932	Symbol	list -> size		5217913						
ANR	5217933	Function	r_skiplist_to_list	295:0:7557:7754							
ANR	5217934	FunctionDef	r_skiplist_to_list (RSkipList * list)		5217933	0					
ANR	5217935	CompoundStatement		295:49:7606:7754	5217933	0					
ANR	5217936	IdentifierDeclStatement	RList * res = r_list_new ( ) ;	296:1:7609:7635	5217933	0	True				
ANR	5217937	IdentifierDecl	* res = r_list_new ( )		5217933	0					
ANR	5217938	IdentifierDeclType	RList *		5217933	0					
ANR	5217939	Identifier	res		5217933	1					
ANR	5217940	AssignmentExpression	* res = r_list_new ( )		5217933	2		=			
ANR	5217941	Identifier	res		5217933	0					
ANR	5217942	CallExpression	r_list_new ( )		5217933	1					
ANR	5217943	Callee	r_list_new		5217933	0					
ANR	5217944	Identifier	r_list_new		5217933	0					
ANR	5217945	ArgumentList			5217933	1					
ANR	5217946	IdentifierDeclStatement	RSkipListNode * n ;	297:1:7638:7654	5217933	1	True				
ANR	5217947	IdentifierDecl	* n		5217933	0					
ANR	5217948	IdentifierDeclType	RSkipListNode *		5217933	0					
ANR	5217949	Identifier	n		5217933	1					
ANR	5217950	IdentifierDeclStatement	void * data ;	298:1:7657:7667	5217933	2	True				
ANR	5217951	IdentifierDecl	* data		5217933	0					
ANR	5217952	IdentifierDeclType	void *		5217933	0					
ANR	5217953	Identifier	data		5217933	1					
ANR	5217954	Statement	r_skiplist_foreach	300:1:7671:7688	5217933	3	True				
ANR	5217955	Statement	(	300:20:7690:7690	5217933	4	True				
ANR	5217956	Statement	list	300:21:7691:7694	5217933	5	True				
ANR	5217957	Statement	","	300:25:7695:7695	5217933	6	True				
ANR	5217958	Statement	n	300:27:7697:7697	5217933	7	True				
ANR	5217959	Statement	","	300:28:7698:7698	5217933	8	True				
ANR	5217960	Statement	data	300:30:7700:7703	5217933	9	True				
ANR	5217961	Statement	)	300:34:7704:7704	5217933	10	True				
ANR	5217962	CompoundStatement		6:36:99:99	5217933	11					
ANR	5217963	ExpressionStatement	"r_list_append ( res , data )"	301:2:7710:7735	5217933	0	True				
ANR	5217964	CallExpression	"r_list_append ( res , data )"		5217933	0					
ANR	5217965	Callee	r_list_append		5217933	0					
ANR	5217966	Identifier	r_list_append		5217933	0					
ANR	5217967	ArgumentList	res		5217933	1					
ANR	5217968	Argument	res		5217933	0					
ANR	5217969	Identifier	res		5217933	0					
ANR	5217970	Argument	data		5217933	1					
ANR	5217971	Identifier	data		5217933	0					
ANR	5217972	ReturnStatement	return res ;	304:1:7742:7752	5217933	12	True				
ANR	5217973	Identifier	res		5217933	0					
ANR	5217974	ReturnType	R_API RList *		5217933	1					
ANR	5217975	Identifier	r_skiplist_to_list		5217933	2					
ANR	5217976	ParameterList	RSkipList * list		5217933	3					
ANR	5217977	Parameter	RSkipList * list	295:32:7589:7603	5217933	0	True				
ANR	5217978	ParameterType	RSkipList *		5217933	0					
ANR	5217979	Identifier	list		5217933	1					
ANR	5217980	CFGEntryNode	ENTRY		5217933		True				
ANR	5217981	CFGExitNode	EXIT		5217933		True				
ANR	5217982	Symbol	res		5217933						
ANR	5217983	Symbol	data		5217933						
ANR	5217984	Symbol	list		5217933						
ANR	5217985	Symbol	n		5217933						
ANR	5217986	Symbol	r_list_new		5217933						
