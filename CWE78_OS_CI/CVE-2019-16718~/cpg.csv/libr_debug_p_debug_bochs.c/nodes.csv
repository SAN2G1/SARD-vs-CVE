command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	4688866	File	data/converged/CVE-2019-16718~_radare2/libr_debug_p_debug_bochs.c								
ANR	4688867	DeclStmt									
ANR	4688868	Decl							bool	bool	bCapturaRegs
ANR	4688869	DeclStmt									
ANR	4688870	Decl							bool	bool	bStep
ANR	4688871	DeclStmt									
ANR	4688872	Decl							bool	bool	bBreak
ANR	4688873	DeclStmt									
ANR	4688874	Decl							bool	bool	bAjusta
ANR	4688875	DeclStmt									
ANR	4688876	Decl							char	char *	saveRegs
ANR	4688877	DeclStmt									
ANR	4688878	Decl							ut64	ut64	ripStop
ANR	4688879	ClassDef	<unnamed>	14:8:291:328							
ANR	4688880	DeclStmt									
ANR	4688881	Decl							libbochs_t	libbochs_t	desc
ANR	4688882	DeclStmt									
ANR	4688883	Decl									RIOBochs
ANR	4688884	DeclStmt									
ANR	4688885	Decl							libbochs_t	libbochs_t *	desc
ANR	4688886	Function	isBochs	20:0:364:617							
ANR	4688887	FunctionDef	isBochs (RDebug * dbg)		4688886	0					
ANR	4688888	CompoundStatement		20:33:397:617	4688886	0					
ANR	4688889	IdentifierDeclStatement	RIODesc * d = dbg -> iob . io -> desc ;	21:1:400:430	4688886	0	True				
ANR	4688890	IdentifierDecl	* d = dbg -> iob . io -> desc		4688886	0					
ANR	4688891	IdentifierDeclType	RIODesc *		4688886	0					
ANR	4688892	Identifier	d		4688886	1					
ANR	4688893	AssignmentExpression	* d = dbg -> iob . io -> desc		4688886	2		=			
ANR	4688894	Identifier	d		4688886	0					
ANR	4688895	PtrMemberAccess	dbg -> iob . io -> desc		4688886	1					
ANR	4688896	MemberAccess	dbg -> iob . io		4688886	0					
ANR	4688897	PtrMemberAccess	dbg -> iob		4688886	0					
ANR	4688898	Identifier	dbg		4688886	0					
ANR	4688899	Identifier	iob		4688886	1					
ANR	4688900	Identifier	io		4688886	1					
ANR	4688901	Identifier	desc		4688886	1					
ANR	4688902	IfStatement	if ( d && d -> plugin && d -> plugin -> name )		4688886	1					
ANR	4688903	Condition	d && d -> plugin && d -> plugin -> name	22:5:437:469	4688886	0	True				
ANR	4688904	AndExpression	d && d -> plugin && d -> plugin -> name		4688886	0		&&			
ANR	4688905	Identifier	d		4688886	0					
ANR	4688906	AndExpression	d -> plugin && d -> plugin -> name		4688886	1		&&			
ANR	4688907	PtrMemberAccess	d -> plugin		4688886	0					
ANR	4688908	Identifier	d		4688886	0					
ANR	4688909	Identifier	plugin		4688886	1					
ANR	4688910	PtrMemberAccess	d -> plugin -> name		4688886	1					
ANR	4688911	PtrMemberAccess	d -> plugin		4688886	0					
ANR	4688912	Identifier	d		4688886	0					
ANR	4688913	Identifier	plugin		4688886	1					
ANR	4688914	Identifier	name		4688886	1					
ANR	4688915	CompoundStatement		3:40:74:74	4688886	1					
ANR	4688916	IfStatement	"if ( ! strcmp ( ""bochs"" , d -> plugin -> name ) )"		4688886	0					
ANR	4688917	Condition	"! strcmp ( ""bochs"" , d -> plugin -> name )"	23:6:480:513	4688886	0	True				
ANR	4688918	UnaryOperationExpression	"! strcmp ( ""bochs"" , d -> plugin -> name )"		4688886	0					
ANR	4688919	UnaryOperator	!		4688886	0					
ANR	4688920	CallExpression	"strcmp ( ""bochs"" , d -> plugin -> name )"		4688886	1					
ANR	4688921	Callee	strcmp		4688886	0					
ANR	4688922	Identifier	strcmp		4688886	0					
ANR	4688923	ArgumentList	"""bochs"""		4688886	1					
ANR	4688924	Argument	"""bochs"""		4688886	0					
ANR	4688925	PrimaryExpression	"""bochs"""		4688886	0					
ANR	4688926	Argument	d -> plugin -> name		4688886	1					
ANR	4688927	PtrMemberAccess	d -> plugin -> name		4688886	0					
ANR	4688928	PtrMemberAccess	d -> plugin		4688886	0					
ANR	4688929	Identifier	d		4688886	0					
ANR	4688930	Identifier	plugin		4688886	1					
ANR	4688931	Identifier	name		4688886	1					
ANR	4688932	CompoundStatement		4:42:118:118	4688886	1					
ANR	4688933	ReturnStatement	return true ;	24:3:521:532	4688886	0	True				
ANR	4688934	Identifier	true		4688886	0					
ANR	4688935	ExpressionStatement	"eprintf ( ""error: the iodesc data is not bochs friendly\\n"" )"	27:1:542:600	4688886	2	True				
ANR	4688936	CallExpression	"eprintf ( ""error: the iodesc data is not bochs friendly\\n"" )"		4688886	0					
ANR	4688937	Callee	eprintf		4688886	0					
ANR	4688938	Identifier	eprintf		4688886	0					
ANR	4688939	ArgumentList	"""error: the iodesc data is not bochs friendly\\n"""		4688886	1					
ANR	4688940	Argument	"""error: the iodesc data is not bochs friendly\\n"""		4688886	0					
ANR	4688941	PrimaryExpression	"""error: the iodesc data is not bochs friendly\\n"""		4688886	0					
ANR	4688942	ReturnStatement	return false ;	28:1:603:615	4688886	3	True				
ANR	4688943	Identifier	false		4688886	0					
ANR	4688944	ReturnType	static bool		4688886	1					
ANR	4688945	Identifier	isBochs		4688886	2					
ANR	4688946	ParameterList	RDebug * dbg		4688886	3					
ANR	4688947	Parameter	RDebug * dbg	20:20:384:394	4688886	0	True				
ANR	4688948	ParameterType	RDebug *		4688886	0					
ANR	4688949	Identifier	dbg		4688886	1					
ANR	4688950	CFGEntryNode	ENTRY		4688886		True				
ANR	4688951	CFGExitNode	EXIT		4688886		True				
ANR	4688952	Symbol	strcmp		4688886						
ANR	4688953	Symbol	dbg -> iob . io		4688886						
ANR	4688954	Symbol	dbg -> iob		4688886						
ANR	4688955	Symbol	d		4688886						
ANR	4688956	Symbol	d -> plugin		4688886						
ANR	4688957	Symbol	* d -> plugin		4688886						
ANR	4688958	Symbol	* * d		4688886						
ANR	4688959	Symbol	dbg		4688886						
ANR	4688960	Symbol	false		4688886						
ANR	4688961	Symbol	* dbg		4688886						
ANR	4688962	Symbol	* dbg -> iob . io		4688886						
ANR	4688963	Symbol	* d		4688886						
ANR	4688964	Symbol	d -> plugin -> name		4688886						
ANR	4688965	Symbol	dbg -> iob . io -> desc		4688886						
ANR	4688966	Symbol	* dbg -> iob		4688886						
ANR	4688967	Symbol	true		4688886						
ANR	4688968	Symbol	* * dbg		4688886						
ANR	4688969	Function	r_debug_bochs_breakpoint	31:0:620:2039							
ANR	4688970	FunctionDef	"r_debug_bochs_breakpoint (RBreakpoint * bp , RBreakpointItem * b , bool set)"		4688969	0					
ANR	4688971	CompoundStatement		31:84:704:2039	4688969	0					
ANR	4688972	IdentifierDeclStatement	char cmd [ 64 ] ;	32:1:707:719	4688969	0	True				
ANR	4688973	IdentifierDecl	cmd [ 64 ]		4688969	0					
ANR	4688974	IdentifierDeclType	char [ 64 ]		4688969	0					
ANR	4688975	Identifier	cmd		4688969	1					
ANR	4688976	PrimaryExpression	64		4688969	2					
ANR	4688977	IdentifierDeclStatement	char num [ 4 ] ;	33:1:722:733	4688969	1	True				
ANR	4688978	IdentifierDecl	num [ 4 ]		4688969	0					
ANR	4688979	IdentifierDeclType	char [ 4 ]		4688969	0					
ANR	4688980	Identifier	num		4688969	1					
ANR	4688981	PrimaryExpression	4		4688969	2					
ANR	4688982	IdentifierDeclStatement	char addr [ 19 ] ;	34:1:736:749	4688969	2	True				
ANR	4688983	IdentifierDecl	addr [ 19 ]		4688969	0					
ANR	4688984	IdentifierDeclType	char [ 19 ]		4688969	0					
ANR	4688985	Identifier	addr		4688969	1					
ANR	4688986	PrimaryExpression	19		4688969	2					
ANR	4688987	IdentifierDeclStatement	char bufcmd [ 100 ] ;	35:1:752:768	4688969	3	True				
ANR	4688988	IdentifierDecl	bufcmd [ 100 ]		4688969	0					
ANR	4688989	IdentifierDeclType	char [ 100 ]		4688969	0					
ANR	4688990	Identifier	bufcmd		4688969	1					
ANR	4688991	PrimaryExpression	100		4688969	2					
ANR	4688992	IdentifierDeclStatement	ut64 a ;	36:1:771:777	4688969	4	True				
ANR	4688993	IdentifierDecl	a		4688969	0					
ANR	4688994	IdentifierDeclType	ut64		4688969	0					
ANR	4688995	Identifier	a		4688969	1					
ANR	4688996	IdentifierDeclStatement	"int n , i , lenRec ;"	37:1:780:795	4688969	5	True				
ANR	4688997	IdentifierDecl	n		4688969	0					
ANR	4688998	IdentifierDeclType	int		4688969	0					
ANR	4688999	Identifier	n		4688969	1					
ANR	4689000	IdentifierDecl	i		4688969	1					
ANR	4689001	IdentifierDeclType	int		4688969	0					
ANR	4689002	Identifier	i		4688969	1					
ANR	4689003	IdentifierDecl	lenRec		4688969	2					
ANR	4689004	IdentifierDeclType	int		4688969	0					
ANR	4689005	Identifier	lenRec		4688969	1					
ANR	4689006	IfStatement	if ( ! b )		4688969	6					
ANR	4689007	Condition	! b	39:5:837:838	4688969	0	True				
ANR	4689008	UnaryOperationExpression	! b		4688969	0					
ANR	4689009	UnaryOperator	!		4688969	0					
ANR	4689010	Identifier	b		4688969	1					
ANR	4689011	CompoundStatement		9:9:136:136	4688969	1					
ANR	4689012	ReturnStatement	return false ;	40:2:845:857	4688969	0	True				
ANR	4689013	Identifier	false		4688969	0					
ANR	4689014	IfStatement	if ( set )		4688969	7					
ANR	4689015	Condition	set	42:5:867:869	4688969	0	True				
ANR	4689016	Identifier	set		4688969	0					
ANR	4689017	CompoundStatement		12:10:167:167	4688969	1					
ANR	4689018	ExpressionStatement	"sprintf ( cmd , ""lb 0x%x"" , ( ut32 ) b -> addr )"	44:2:940:979	4688969	0	True				
ANR	4689019	CallExpression	"sprintf ( cmd , ""lb 0x%x"" , ( ut32 ) b -> addr )"		4688969	0					
ANR	4689020	Callee	sprintf		4688969	0					
ANR	4689021	Identifier	sprintf		4688969	0					
ANR	4689022	ArgumentList	cmd		4688969	1					
ANR	4689023	Argument	cmd		4688969	0					
ANR	4689024	Identifier	cmd		4688969	0					
ANR	4689025	Argument	"""lb 0x%x"""		4688969	1					
ANR	4689026	PrimaryExpression	"""lb 0x%x"""		4688969	0					
ANR	4689027	Argument	( ut32 ) b -> addr		4688969	2					
ANR	4689028	CastExpression	( ut32 ) b -> addr		4688969	0					
ANR	4689029	CastTarget	ut32		4688969	0					
ANR	4689030	PtrMemberAccess	b -> addr		4688969	1					
ANR	4689031	Identifier	b		4688969	0					
ANR	4689032	Identifier	addr		4688969	1					
ANR	4689033	ExpressionStatement	"bochs_send_cmd ( desc , cmd , true )"	45:2:983:1015	4688969	1	True				
ANR	4689034	CallExpression	"bochs_send_cmd ( desc , cmd , true )"		4688969	0					
ANR	4689035	Callee	bochs_send_cmd		4688969	0					
ANR	4689036	Identifier	bochs_send_cmd		4688969	0					
ANR	4689037	ArgumentList	desc		4688969	1					
ANR	4689038	Argument	desc		4688969	0					
ANR	4689039	Identifier	desc		4688969	0					
ANR	4689040	Argument	cmd		4688969	1					
ANR	4689041	Identifier	cmd		4688969	0					
ANR	4689042	Argument	true		4688969	2					
ANR	4689043	Identifier	true		4688969	0					
ANR	4689044	ExpressionStatement	bCapturaRegs = true	46:2:1019:1038	4688969	2	True				
ANR	4689045	AssignmentExpression	bCapturaRegs = true		4688969	0		=			
ANR	4689046	Identifier	bCapturaRegs		4688969	0					
ANR	4689047	Identifier	true		4688969	1					
ANR	4689048	ElseStatement	else		4688969	0					
ANR	4689049	CompoundStatement		17:8:343:343	4688969	0					
ANR	4689050	ExpressionStatement	"bochs_send_cmd ( desc , ""blist"" , true )"	55:2:1277:1311	4688969	0	True				
ANR	4689051	CallExpression	"bochs_send_cmd ( desc , ""blist"" , true )"		4688969	0					
ANR	4689052	Callee	bochs_send_cmd		4688969	0					
ANR	4689053	Identifier	bochs_send_cmd		4688969	0					
ANR	4689054	ArgumentList	desc		4688969	1					
ANR	4689055	Argument	desc		4688969	0					
ANR	4689056	Identifier	desc		4688969	0					
ANR	4689057	Argument	"""blist"""		4688969	1					
ANR	4689058	PrimaryExpression	"""blist"""		4688969	0					
ANR	4689059	Argument	true		4688969	2					
ANR	4689060	Identifier	true		4688969	0					
ANR	4689061	ExpressionStatement	lenRec = strlen ( desc -> data )	56:2:1315:1343	4688969	1	True				
ANR	4689062	AssignmentExpression	lenRec = strlen ( desc -> data )		4688969	0		=			
ANR	4689063	Identifier	lenRec		4688969	0					
ANR	4689064	CallExpression	strlen ( desc -> data )		4688969	1					
ANR	4689065	Callee	strlen		4688969	0					
ANR	4689066	Identifier	strlen		4688969	0					
ANR	4689067	ArgumentList	desc -> data		4688969	1					
ANR	4689068	Argument	desc -> data		4688969	0					
ANR	4689069	PtrMemberAccess	desc -> data		4688969	0					
ANR	4689070	Identifier	desc		4688969	0					
ANR	4689071	Identifier	data		4688969	1					
ANR	4689072	ExpressionStatement	a = - 1	57:2:1347:1353	4688969	2	True				
ANR	4689073	AssignmentExpression	a = - 1		4688969	0		=			
ANR	4689074	Identifier	a		4688969	0					
ANR	4689075	UnaryOperationExpression	- 1		4688969	1					
ANR	4689076	UnaryOperator	-		4688969	0					
ANR	4689077	PrimaryExpression	1		4688969	1					
ANR	4689078	ExpressionStatement	n = 0	58:2:1357:1362	4688969	3	True				
ANR	4689079	AssignmentExpression	n = 0		4688969	0		=			
ANR	4689080	Identifier	n		4688969	0					
ANR	4689081	PrimaryExpression	0		4688969	1					
ANR	4689082	IfStatement	"if ( ! strncmp ( desc -> data , ""Num Type"" , 8 ) )"		4688969	4					
ANR	4689083	Condition	"! strncmp ( desc -> data , ""Num Type"" , 8 )"	59:6:1370:1405	4688969	0	True				
ANR	4689084	UnaryOperationExpression	"! strncmp ( desc -> data , ""Num Type"" , 8 )"		4688969	0					
ANR	4689085	UnaryOperator	!		4688969	0					
ANR	4689086	CallExpression	"strncmp ( desc -> data , ""Num Type"" , 8 )"		4688969	1					
ANR	4689087	Callee	strncmp		4688969	0					
ANR	4689088	Identifier	strncmp		4688969	0					
ANR	4689089	ArgumentList	desc -> data		4688969	1					
ANR	4689090	Argument	desc -> data		4688969	0					
ANR	4689091	PtrMemberAccess	desc -> data		4688969	0					
ANR	4689092	Identifier	desc		4688969	0					
ANR	4689093	Identifier	data		4688969	1					
ANR	4689094	Argument	"""Num Type"""		4688969	1					
ANR	4689095	PrimaryExpression	"""Num Type"""		4688969	0					
ANR	4689096	Argument	8		4688969	2					
ANR	4689097	PrimaryExpression	8		4688969	0					
ANR	4689098	CompoundStatement		29:44:703:703	4688969	1					
ANR	4689099	ExpressionStatement	i = 37	60:3:1413:1419	4688969	0	True				
ANR	4689100	AssignmentExpression	i = 37		4688969	0		=			
ANR	4689101	Identifier	i		4688969	0					
ANR	4689102	PrimaryExpression	37		4688969	1					
ANR	4689103	DoStatement	do		4688969	1					
ANR	4689104	CompoundStatement		31:6:722:722	4688969	0					
ANR	4689105	IfStatement	if ( desc -> data [ i + 24 ] == 'y' )		4688969	0					
ANR	4689106	Condition	desc -> data [ i + 24 ] == 'y'	62:8:1437:1461	4688969	0	True				
ANR	4689107	EqualityExpression	desc -> data [ i + 24 ] == 'y'		4688969	0		==			
ANR	4689108	ArrayIndexing	desc -> data [ i + 24 ]		4688969	0					
ANR	4689109	PtrMemberAccess	desc -> data		4688969	0					
ANR	4689110	Identifier	desc		4688969	0					
ANR	4689111	Identifier	data		4688969	1					
ANR	4689112	AdditiveExpression	i + 24		4688969	1		+			
ANR	4689113	Identifier	i		4688969	0					
ANR	4689114	PrimaryExpression	24		4688969	1					
ANR	4689115	PrimaryExpression	'y'		4688969	1					
ANR	4689116	CompoundStatement		32:35:759:759	4688969	1					
ANR	4689117	ExpressionStatement	"strncpy ( num , & desc -> data [ i ] , 3 )"	63:5:1471:1502	4688969	0	True				
ANR	4689118	CallExpression	"strncpy ( num , & desc -> data [ i ] , 3 )"		4688969	0					
ANR	4689119	Callee	strncpy		4688969	0					
ANR	4689120	Identifier	strncpy		4688969	0					
ANR	4689121	ArgumentList	num		4688969	1					
ANR	4689122	Argument	num		4688969	0					
ANR	4689123	Identifier	num		4688969	0					
ANR	4689124	Argument	& desc -> data [ i ]		4688969	1					
ANR	4689125	UnaryOperationExpression	& desc -> data [ i ]		4688969	0					
ANR	4689126	UnaryOperator	&		4688969	0					
ANR	4689127	ArrayIndexing	desc -> data [ i ]		4688969	1					
ANR	4689128	PtrMemberAccess	desc -> data		4688969	0					
ANR	4689129	Identifier	desc		4688969	0					
ANR	4689130	Identifier	data		4688969	1					
ANR	4689131	Identifier	i		4688969	1					
ANR	4689132	Argument	3		4688969	2					
ANR	4689133	PrimaryExpression	3		4688969	0					
ANR	4689134	ExpressionStatement	num [ 3 ] = 0	64:5:1509:1519	4688969	1	True				
ANR	4689135	AssignmentExpression	num [ 3 ] = 0		4688969	0		=			
ANR	4689136	ArrayIndexing	num [ 3 ]		4688969	0					
ANR	4689137	Identifier	num		4688969	0					
ANR	4689138	PrimaryExpression	3		4688969	1					
ANR	4689139	PrimaryExpression	0		4688969	1					
ANR	4689140	ExpressionStatement	"strncpy ( addr , & desc -> data [ i + 28 ] , 18 )"	65:5:1526:1564	4688969	2	True				
ANR	4689141	CallExpression	"strncpy ( addr , & desc -> data [ i + 28 ] , 18 )"		4688969	0					
ANR	4689142	Callee	strncpy		4688969	0					
ANR	4689143	Identifier	strncpy		4688969	0					
ANR	4689144	ArgumentList	addr		4688969	1					
ANR	4689145	Argument	addr		4688969	0					
ANR	4689146	Identifier	addr		4688969	0					
ANR	4689147	Argument	& desc -> data [ i + 28 ]		4688969	1					
ANR	4689148	UnaryOperationExpression	& desc -> data [ i + 28 ]		4688969	0					
ANR	4689149	UnaryOperator	&		4688969	0					
ANR	4689150	ArrayIndexing	desc -> data [ i + 28 ]		4688969	1					
ANR	4689151	PtrMemberAccess	desc -> data		4688969	0					
ANR	4689152	Identifier	desc		4688969	0					
ANR	4689153	Identifier	data		4688969	1					
ANR	4689154	AdditiveExpression	i + 28		4688969	1		+			
ANR	4689155	Identifier	i		4688969	0					
ANR	4689156	PrimaryExpression	28		4688969	1					
ANR	4689157	Argument	18		4688969	2					
ANR	4689158	PrimaryExpression	18		4688969	0					
ANR	4689159	ExpressionStatement	addr [ 18 ] = 0	66:5:1571:1583	4688969	3	True				
ANR	4689160	AssignmentExpression	addr [ 18 ] = 0		4688969	0		=			
ANR	4689161	ArrayIndexing	addr [ 18 ]		4688969	0					
ANR	4689162	Identifier	addr		4688969	0					
ANR	4689163	PrimaryExpression	18		4688969	1					
ANR	4689164	PrimaryExpression	0		4688969	1					
ANR	4689165	ExpressionStatement	"n = r_num_get ( NULL , num )"	67:5:1590:1614	4688969	4	True				
ANR	4689166	AssignmentExpression	"n = r_num_get ( NULL , num )"		4688969	0		=			
ANR	4689167	Identifier	n		4688969	0					
ANR	4689168	CallExpression	"r_num_get ( NULL , num )"		4688969	1					
ANR	4689169	Callee	r_num_get		4688969	0					
ANR	4689170	Identifier	r_num_get		4688969	0					
ANR	4689171	ArgumentList	NULL		4688969	1					
ANR	4689172	Argument	NULL		4688969	0					
ANR	4689173	Identifier	NULL		4688969	0					
ANR	4689174	Argument	num		4688969	1					
ANR	4689175	Identifier	num		4688969	0					
ANR	4689176	ExpressionStatement	"a = r_num_get ( NULL , addr )"	68:5:1621:1646	4688969	5	True				
ANR	4689177	AssignmentExpression	"a = r_num_get ( NULL , addr )"		4688969	0		=			
ANR	4689178	Identifier	a		4688969	0					
ANR	4689179	CallExpression	"r_num_get ( NULL , addr )"		4688969	1					
ANR	4689180	Callee	r_num_get		4688969	0					
ANR	4689181	Identifier	r_num_get		4688969	0					
ANR	4689182	ArgumentList	NULL		4688969	1					
ANR	4689183	Argument	NULL		4688969	0					
ANR	4689184	Identifier	NULL		4688969	0					
ANR	4689185	Argument	addr		4688969	1					
ANR	4689186	Identifier	addr		4688969	0					
ANR	4689187	IfStatement	if ( a == b -> addr )		4688969	6					
ANR	4689188	Condition	a == b -> addr	70:9:1708:1719	4688969	0	True				
ANR	4689189	EqualityExpression	a == b -> addr		4688969	0		==			
ANR	4689190	Identifier	a		4688969	0					
ANR	4689191	PtrMemberAccess	b -> addr		4688969	1					
ANR	4689192	Identifier	b		4688969	0					
ANR	4689193	Identifier	addr		4688969	1					
ANR	4689194	CompoundStatement		40:23:1017:1017	4688969	1					
ANR	4689195	BreakStatement	break ;	71:6:1730:1735	4688969	0	True				
ANR	4689196	ExpressionStatement	i += 48	74:4:1754:1761	4688969	1	True				
ANR	4689197	AssignmentExpression	i += 48		4688969	0		+=			
ANR	4689198	Identifier	i		4688969	0					
ANR	4689199	PrimaryExpression	48		4688969	1					
ANR	4689200	Condition	desc -> data [ i ] != '<' && i < lenRec - 4	75:12:1775:1808	4688969	1	True				
ANR	4689201	AndExpression	desc -> data [ i ] != '<' && i < lenRec - 4		4688969	0		&&			
ANR	4689202	EqualityExpression	desc -> data [ i ] != '<'		4688969	0		!=			
ANR	4689203	ArrayIndexing	desc -> data [ i ]		4688969	0					
ANR	4689204	PtrMemberAccess	desc -> data		4688969	0					
ANR	4689205	Identifier	desc		4688969	0					
ANR	4689206	Identifier	data		4688969	1					
ANR	4689207	Identifier	i		4688969	1					
ANR	4689208	PrimaryExpression	'<'		4688969	1					
ANR	4689209	RelationalExpression	i < lenRec - 4		4688969	1		<			
ANR	4689210	Identifier	i		4688969	0					
ANR	4689211	AdditiveExpression	lenRec - 4		4688969	1		-			
ANR	4689212	Identifier	lenRec		4688969	0					
ANR	4689213	PrimaryExpression	4		4688969	1					
ANR	4689214	IfStatement	if ( a == b -> addr )		4688969	5					
ANR	4689215	Condition	a == b -> addr	77:6:1822:1833	4688969	0	True				
ANR	4689216	EqualityExpression	a == b -> addr		4688969	0		==			
ANR	4689217	Identifier	a		4688969	0					
ANR	4689218	PtrMemberAccess	b -> addr		4688969	1					
ANR	4689219	Identifier	b		4688969	0					
ANR	4689220	Identifier	addr		4688969	1					
ANR	4689221	CompoundStatement		47:20:1131:1131	4688969	1					
ANR	4689222	ExpressionStatement	"snprintf ( bufcmd , sizeof ( bufcmd ) , ""d %i"" , n )"	78:3:1841:1886	4688969	0	True				
ANR	4689223	CallExpression	"snprintf ( bufcmd , sizeof ( bufcmd ) , ""d %i"" , n )"		4688969	0					
ANR	4689224	Callee	snprintf		4688969	0					
ANR	4689225	Identifier	snprintf		4688969	0					
ANR	4689226	ArgumentList	bufcmd		4688969	1					
ANR	4689227	Argument	bufcmd		4688969	0					
ANR	4689228	Identifier	bufcmd		4688969	0					
ANR	4689229	Argument	sizeof ( bufcmd )		4688969	1					
ANR	4689230	SizeofExpression	sizeof ( bufcmd )		4688969	0					
ANR	4689231	Sizeof	sizeof		4688969	0					
ANR	4689232	SizeofOperand	bufcmd		4688969	1					
ANR	4689233	Argument	"""d %i"""		4688969	2					
ANR	4689234	PrimaryExpression	"""d %i"""		4688969	0					
ANR	4689235	Argument	n		4688969	3					
ANR	4689236	Identifier	n		4688969	0					
ANR	4689237	ExpressionStatement	"bochs_send_cmd ( desc , bufcmd , true )"	80:3:1980:2015	4688969	1	True				
ANR	4689238	CallExpression	"bochs_send_cmd ( desc , bufcmd , true )"		4688969	0					
ANR	4689239	Callee	bochs_send_cmd		4688969	0					
ANR	4689240	Identifier	bochs_send_cmd		4688969	0					
ANR	4689241	ArgumentList	desc		4688969	1					
ANR	4689242	Argument	desc		4688969	0					
ANR	4689243	Identifier	desc		4688969	0					
ANR	4689244	Argument	bufcmd		4688969	1					
ANR	4689245	Identifier	bufcmd		4688969	0					
ANR	4689246	Argument	true		4688969	2					
ANR	4689247	Identifier	true		4688969	0					
ANR	4689248	ReturnStatement	return true ;	84:1:2026:2037	4688969	8	True				
ANR	4689249	Identifier	true		4688969	0					
ANR	4689250	ReturnType	static int		4688969	1					
ANR	4689251	Identifier	r_debug_bochs_breakpoint		4688969	2					
ANR	4689252	ParameterList	"RBreakpoint * bp , RBreakpointItem * b , bool set"		4688969	3					
ANR	4689253	Parameter	RBreakpoint * bp	31:37:657:671	4688969	0	True				
ANR	4689254	ParameterType	RBreakpoint *		4688969	0					
ANR	4689255	Identifier	bp		4688969	1					
ANR	4689256	Parameter	RBreakpointItem * b	31:54:674:691	4688969	1	True				
ANR	4689257	ParameterType	RBreakpointItem *		4688969	0					
ANR	4689258	Identifier	b		4688969	1					
ANR	4689259	Parameter	bool set	31:74:694:701	4688969	2	True				
ANR	4689260	ParameterType	bool		4688969	0					
ANR	4689261	Identifier	set		4688969	1					
ANR	4689262	CFGEntryNode	ENTRY		4688969		True				
ANR	4689263	CFGExitNode	EXIT		4688969		True				
ANR	4689264	Symbol	num		4688969						
ANR	4689265	Symbol	bp		4688969						
ANR	4689266	Symbol	b -> addr		4688969						
ANR	4689267	Symbol	strlen		4688969						
ANR	4689268	Symbol	strncmp		4688969						
ANR	4689269	Symbol	* desc -> data		4688969						
ANR	4689270	Symbol	bCapturaRegs		4688969						
ANR	4689271	Symbol	* desc		4688969						
ANR	4689272	Symbol	desc -> data		4688969						
ANR	4689273	Symbol	r_num_get		4688969						
ANR	4689274	Symbol	addr		4688969						
ANR	4689275	Symbol	a		4688969						
ANR	4689276	Symbol	b		4688969						
ANR	4689277	Symbol	set		4688969						
ANR	4689278	Symbol	NULL		4688969						
ANR	4689279	Symbol	false		4688969						
ANR	4689280	Symbol	i		4688969						
ANR	4689281	Symbol	* * desc		4688969						
ANR	4689282	Symbol	* b		4688969						
ANR	4689283	Symbol	n		4688969						
ANR	4689284	Symbol	* num		4688969						
ANR	4689285	Symbol	* i		4688969						
ANR	4689286	Symbol	lenRec		4688969						
ANR	4689287	Symbol	true		4688969						
ANR	4689288	Symbol	cmd		4688969						
ANR	4689289	Symbol	* addr		4688969						
ANR	4689290	Symbol	bufcmd		4688969						
ANR	4689291	Symbol	desc		4688969						
ANR	4689292	Function	r_debug_bochs_reg_read	87:0:2042:6103							
ANR	4689293	FunctionDef	"r_debug_bochs_reg_read (RDebug * dbg , int type , ut8 * buf , int size)"		4689292	0					
ANR	4689294	CompoundStatement		87:77:2119:6103	4689292	0					
ANR	4689295	IdentifierDeclStatement	char strReg [ 19 ] ;	88:1:2122:2137	4689292	0	True				
ANR	4689296	IdentifierDecl	strReg [ 19 ]		4689292	0					
ANR	4689297	IdentifierDeclType	char [ 19 ]		4689292	0					
ANR	4689298	Identifier	strReg		4689292	1					
ANR	4689299	PrimaryExpression	19		4689292	2					
ANR	4689300	IdentifierDeclStatement	char regname [ 4 ] ;	89:1:2140:2155	4689292	1	True				
ANR	4689301	IdentifierDecl	regname [ 4 ]		4689292	0					
ANR	4689302	IdentifierDeclType	char [ 4 ]		4689292	0					
ANR	4689303	Identifier	regname		4689292	1					
ANR	4689304	PrimaryExpression	4		4689292	2					
ANR	4689305	IdentifierDeclStatement	char strBase [ 19 ] ;	90:1:2158:2174	4689292	2	True				
ANR	4689306	IdentifierDecl	strBase [ 19 ]		4689292	0					
ANR	4689307	IdentifierDeclType	char [ 19 ]		4689292	0					
ANR	4689308	Identifier	strBase		4689292	1					
ANR	4689309	PrimaryExpression	19		4689292	2					
ANR	4689310	IdentifierDeclStatement	char strLimit [ 19 ] ;	91:1:2177:2194	4689292	3	True				
ANR	4689311	IdentifierDecl	strLimit [ 19 ]		4689292	0					
ANR	4689312	IdentifierDeclType	char [ 19 ]		4689292	0					
ANR	4689313	Identifier	strLimit		4689292	1					
ANR	4689314	PrimaryExpression	19		4689292	2					
ANR	4689315	IdentifierDeclStatement	"int i = 0 , pos = 0 , lenRec = 0 ;"	92:1:2197:2227	4689292	4	True				
ANR	4689316	IdentifierDecl	i = 0		4689292	0					
ANR	4689317	IdentifierDeclType	int		4689292	0					
ANR	4689318	Identifier	i		4689292	1					
ANR	4689319	AssignmentExpression	i = 0		4689292	2		=			
ANR	4689320	Identifier	i		4689292	0					
ANR	4689321	PrimaryExpression	0		4689292	1					
ANR	4689322	IdentifierDecl	pos = 0		4689292	1					
ANR	4689323	IdentifierDeclType	int		4689292	0					
ANR	4689324	Identifier	pos		4689292	1					
ANR	4689325	AssignmentExpression	pos = 0		4689292	2		=			
ANR	4689326	Identifier	pos		4689292	0					
ANR	4689327	PrimaryExpression	0		4689292	1					
ANR	4689328	IdentifierDecl	lenRec = 0		4689292	2					
ANR	4689329	IdentifierDeclType	int		4689292	0					
ANR	4689330	Identifier	lenRec		4689292	1					
ANR	4689331	AssignmentExpression	lenRec = 0		4689292	2		=			
ANR	4689332	Identifier	lenRec		4689292	0					
ANR	4689333	PrimaryExpression	0		4689292	1					
ANR	4689334	IdentifierDeclStatement	"ut64 val = 0 , valRIP = 0 ;"	93:1:2230:2254	4689292	5	True				
ANR	4689335	IdentifierDecl	val = 0		4689292	0					
ANR	4689336	IdentifierDeclType	ut64		4689292	0					
ANR	4689337	Identifier	val		4689292	1					
ANR	4689338	AssignmentExpression	val = 0		4689292	2		=			
ANR	4689339	Identifier	val		4689292	0					
ANR	4689340	PrimaryExpression	0		4689292	1					
ANR	4689341	IdentifierDecl	valRIP = 0		4689292	1					
ANR	4689342	IdentifierDeclType	ut64		4689292	0					
ANR	4689343	Identifier	valRIP		4689292	1					
ANR	4689344	AssignmentExpression	valRIP = 0		4689292	2		=			
ANR	4689345	Identifier	valRIP		4689292	0					
ANR	4689346	PrimaryExpression	0		4689292	1					
ANR	4689347	IfStatement	if ( ! isBochs ( dbg ) )		4689292	6					
ANR	4689348	Condition	! isBochs ( dbg )	94:5:2277:2290	4689292	0	True				
ANR	4689349	UnaryOperationExpression	! isBochs ( dbg )		4689292	0					
ANR	4689350	UnaryOperator	!		4689292	0					
ANR	4689351	CallExpression	isBochs ( dbg )		4689292	1					
ANR	4689352	Callee	isBochs		4689292	0					
ANR	4689353	Identifier	isBochs		4689292	0					
ANR	4689354	ArgumentList	dbg		4689292	1					
ANR	4689355	Argument	dbg		4689292	0					
ANR	4689356	Identifier	dbg		4689292	0					
ANR	4689357	CompoundStatement		8:21:173:173	4689292	1					
ANR	4689358	ReturnStatement	return 0 ;	95:2:2297:2305	4689292	0	True				
ANR	4689359	PrimaryExpression	0		4689292	0					
ANR	4689360	IfStatement	if ( bCapturaRegs == true )		4689292	7					
ANR	4689361	Condition	bCapturaRegs == true	99:5:2349:2368	4689292	0	True				
ANR	4689362	EqualityExpression	bCapturaRegs == true		4689292	0		==			
ANR	4689363	Identifier	bCapturaRegs		4689292	0					
ANR	4689364	Identifier	true		4689292	1					
ANR	4689365	CompoundStatement		82:2:2765:2770	4689292	1					
ANR	4689366	ExpressionStatement	"bochs_send_cmd ( desc , ""regs"" , true )"	100:2:2375:2410	4689292	0	True				
ANR	4689367	CallExpression	"bochs_send_cmd ( desc , ""regs"" , true )"		4689292	0					
ANR	4689368	Callee	bochs_send_cmd		4689292	0					
ANR	4689369	Identifier	bochs_send_cmd		4689292	0					
ANR	4689370	ArgumentList	desc		4689292	1					
ANR	4689371	Argument	desc		4689292	0					
ANR	4689372	Identifier	desc		4689292	0					
ANR	4689373	Argument	"""regs"""		4689292	1					
ANR	4689374	PrimaryExpression	"""regs"""		4689292	0					
ANR	4689375	Argument	true		4689292	2					
ANR	4689376	Identifier	true		4689292	0					
ANR	4689377	ExpressionStatement	pos = 0x78	105:2:2597:2607	4689292	1	True				
ANR	4689378	AssignmentExpression	pos = 0x78		4689292	0		=			
ANR	4689379	Identifier	pos		4689292	0					
ANR	4689380	PrimaryExpression	0x78		4689292	1					
ANR	4689381	ExpressionStatement	lenRec = strlen ( desc -> data )	106:2:2611:2639	4689292	2	True				
ANR	4689382	AssignmentExpression	lenRec = strlen ( desc -> data )		4689292	0		=			
ANR	4689383	Identifier	lenRec		4689292	0					
ANR	4689384	CallExpression	strlen ( desc -> data )		4689292	1					
ANR	4689385	Callee	strlen		4689292	0					
ANR	4689386	Identifier	strlen		4689292	0					
ANR	4689387	ArgumentList	desc -> data		4689292	1					
ANR	4689388	Argument	desc -> data		4689292	0					
ANR	4689389	PtrMemberAccess	desc -> data		4689292	0					
ANR	4689390	Identifier	desc		4689292	0					
ANR	4689391	Identifier	data		4689292	1					
ANR	4689392	WhileStatement	while ( desc -> data [ i ] != 0 && i < lenRec - 4 )		4689292	3					
ANR	4689393	Condition	desc -> data [ i ] != 0 && i < lenRec - 4	107:9:2650:2684	4689292	0	True				
ANR	4689394	AndExpression	desc -> data [ i ] != 0 && i < lenRec - 4		4689292	0		&&			
ANR	4689395	EqualityExpression	desc -> data [ i ] != 0		4689292	0		!=			
ANR	4689396	ArrayIndexing	desc -> data [ i ]		4689292	0					
ANR	4689397	PtrMemberAccess	desc -> data		4689292	0					
ANR	4689398	Identifier	desc		4689292	0					
ANR	4689399	Identifier	data		4689292	1					
ANR	4689400	Identifier	i		4689292	1					
ANR	4689401	PrimaryExpression	0		4689292	1					
ANR	4689402	RelationalExpression	i < lenRec - 4		4689292	1		<			
ANR	4689403	Identifier	i		4689292	0					
ANR	4689404	AdditiveExpression	lenRec - 4		4689292	1		-			
ANR	4689405	Identifier	lenRec		4689292	0					
ANR	4689406	PrimaryExpression	4		4689292	1					
ANR	4689407	CompoundStatement		21:47:568:568	4689292	1					
ANR	4689408	IfStatement	if ( ( desc -> data [ i ] == ( ut8 ) 'r' && desc -> data [ i + 3 ] == ( ut8 ) ':' ) )		4689292	0					
ANR	4689409	Condition	desc -> data [ i ] == ( ut8 ) 'r' && desc -> data [ i + 3 ] == ( ut8 ) ':'	108:8:2698:2757	4689292	0	True				
ANR	4689410	AndExpression	desc -> data [ i ] == ( ut8 ) 'r' && desc -> data [ i + 3 ] == ( ut8 ) ':'		4689292	0		&&			
ANR	4689411	EqualityExpression	desc -> data [ i ] == ( ut8 ) 'r'		4689292	0		==			
ANR	4689412	ArrayIndexing	desc -> data [ i ]		4689292	0					
ANR	4689413	PtrMemberAccess	desc -> data		4689292	0					
ANR	4689414	Identifier	desc		4689292	0					
ANR	4689415	Identifier	data		4689292	1					
ANR	4689416	Identifier	i		4689292	1					
ANR	4689417	CastExpression	( ut8 ) 'r'		4689292	1					
ANR	4689418	CastTarget	ut8		4689292	0					
ANR	4689419	PrimaryExpression	'r'		4689292	1					
ANR	4689420	EqualityExpression	desc -> data [ i + 3 ] == ( ut8 ) ':'		4689292	1		==			
ANR	4689421	ArrayIndexing	desc -> data [ i + 3 ]		4689292	0					
ANR	4689422	PtrMemberAccess	desc -> data		4689292	0					
ANR	4689423	Identifier	desc		4689292	0					
ANR	4689424	Identifier	data		4689292	1					
ANR	4689425	AdditiveExpression	i + 3		4689292	1		+			
ANR	4689426	Identifier	i		4689292	0					
ANR	4689427	PrimaryExpression	3		4689292	1					
ANR	4689428	CastExpression	( ut8 ) ':'		4689292	1					
ANR	4689429	CastTarget	ut8		4689292	0					
ANR	4689430	PrimaryExpression	':'		4689292	1					
ANR	4689431	CompoundStatement		22:70:640:640	4689292	1					
ANR	4689432	ExpressionStatement	"strncpy ( regname , & desc -> data [ i ] , 3 )"	109:4:2766:2802	4689292	0	True				
ANR	4689433	CallExpression	"strncpy ( regname , & desc -> data [ i ] , 3 )"		4689292	0					
ANR	4689434	Callee	strncpy		4689292	0					
ANR	4689435	Identifier	strncpy		4689292	0					
ANR	4689436	ArgumentList	regname		4689292	1					
ANR	4689437	Argument	regname		4689292	0					
ANR	4689438	Identifier	regname		4689292	0					
ANR	4689439	Argument	& desc -> data [ i ]		4689292	1					
ANR	4689440	UnaryOperationExpression	& desc -> data [ i ]		4689292	0					
ANR	4689441	UnaryOperator	&		4689292	0					
ANR	4689442	ArrayIndexing	desc -> data [ i ]		4689292	1					
ANR	4689443	PtrMemberAccess	desc -> data		4689292	0					
ANR	4689444	Identifier	desc		4689292	0					
ANR	4689445	Identifier	data		4689292	1					
ANR	4689446	Identifier	i		4689292	1					
ANR	4689447	Argument	3		4689292	2					
ANR	4689448	PrimaryExpression	3		4689292	0					
ANR	4689449	ExpressionStatement	regname [ 3 ] = 0	110:4:2808:2822	4689292	1	True				
ANR	4689450	AssignmentExpression	regname [ 3 ] = 0		4689292	0		=			
ANR	4689451	ArrayIndexing	regname [ 3 ]		4689292	0					
ANR	4689452	Identifier	regname		4689292	0					
ANR	4689453	PrimaryExpression	3		4689292	1					
ANR	4689454	PrimaryExpression	0		4689292	1					
ANR	4689455	ExpressionStatement	"strncpy ( & strReg [ 2 ] , & desc -> data [ i + 5 ] , 8 )"	111:4:2828:2871	4689292	2	True				
ANR	4689456	CallExpression	"strncpy ( & strReg [ 2 ] , & desc -> data [ i + 5 ] , 8 )"		4689292	0					
ANR	4689457	Callee	strncpy		4689292	0					
ANR	4689458	Identifier	strncpy		4689292	0					
ANR	4689459	ArgumentList	& strReg [ 2 ]		4689292	1					
ANR	4689460	Argument	& strReg [ 2 ]		4689292	0					
ANR	4689461	UnaryOperationExpression	& strReg [ 2 ]		4689292	0					
ANR	4689462	UnaryOperator	&		4689292	0					
ANR	4689463	ArrayIndexing	strReg [ 2 ]		4689292	1					
ANR	4689464	Identifier	strReg		4689292	0					
ANR	4689465	PrimaryExpression	2		4689292	1					
ANR	4689466	Argument	& desc -> data [ i + 5 ]		4689292	1					
ANR	4689467	UnaryOperationExpression	& desc -> data [ i + 5 ]		4689292	0					
ANR	4689468	UnaryOperator	&		4689292	0					
ANR	4689469	ArrayIndexing	desc -> data [ i + 5 ]		4689292	1					
ANR	4689470	PtrMemberAccess	desc -> data		4689292	0					
ANR	4689471	Identifier	desc		4689292	0					
ANR	4689472	Identifier	data		4689292	1					
ANR	4689473	AdditiveExpression	i + 5		4689292	1		+			
ANR	4689474	Identifier	i		4689292	0					
ANR	4689475	PrimaryExpression	5		4689292	1					
ANR	4689476	Argument	8		4689292	2					
ANR	4689477	PrimaryExpression	8		4689292	0					
ANR	4689478	ExpressionStatement	"strncpy ( & strReg [ 10 ] , & desc -> data [ i + 14 ] , 8 )"	112:4:2877:2922	4689292	3	True				
ANR	4689479	CallExpression	"strncpy ( & strReg [ 10 ] , & desc -> data [ i + 14 ] , 8 )"		4689292	0					
ANR	4689480	Callee	strncpy		4689292	0					
ANR	4689481	Identifier	strncpy		4689292	0					
ANR	4689482	ArgumentList	& strReg [ 10 ]		4689292	1					
ANR	4689483	Argument	& strReg [ 10 ]		4689292	0					
ANR	4689484	UnaryOperationExpression	& strReg [ 10 ]		4689292	0					
ANR	4689485	UnaryOperator	&		4689292	0					
ANR	4689486	ArrayIndexing	strReg [ 10 ]		4689292	1					
ANR	4689487	Identifier	strReg		4689292	0					
ANR	4689488	PrimaryExpression	10		4689292	1					
ANR	4689489	Argument	& desc -> data [ i + 14 ]		4689292	1					
ANR	4689490	UnaryOperationExpression	& desc -> data [ i + 14 ]		4689292	0					
ANR	4689491	UnaryOperator	&		4689292	0					
ANR	4689492	ArrayIndexing	desc -> data [ i + 14 ]		4689292	1					
ANR	4689493	PtrMemberAccess	desc -> data		4689292	0					
ANR	4689494	Identifier	desc		4689292	0					
ANR	4689495	Identifier	data		4689292	1					
ANR	4689496	AdditiveExpression	i + 14		4689292	1		+			
ANR	4689497	Identifier	i		4689292	0					
ANR	4689498	PrimaryExpression	14		4689292	1					
ANR	4689499	Argument	8		4689292	2					
ANR	4689500	PrimaryExpression	8		4689292	0					
ANR	4689501	ExpressionStatement	strReg [ 0 ] = '0'	113:4:2928:2941	4689292	4	True				
ANR	4689502	AssignmentExpression	strReg [ 0 ] = '0'		4689292	0		=			
ANR	4689503	ArrayIndexing	strReg [ 0 ]		4689292	0					
ANR	4689504	Identifier	strReg		4689292	0					
ANR	4689505	PrimaryExpression	0		4689292	1					
ANR	4689506	PrimaryExpression	'0'		4689292	1					
ANR	4689507	ExpressionStatement	strReg [ 1 ] = 'x'	114:4:2947:2960	4689292	5	True				
ANR	4689508	AssignmentExpression	strReg [ 1 ] = 'x'		4689292	0		=			
ANR	4689509	ArrayIndexing	strReg [ 1 ]		4689292	0					
ANR	4689510	Identifier	strReg		4689292	0					
ANR	4689511	PrimaryExpression	1		4689292	1					
ANR	4689512	PrimaryExpression	'x'		4689292	1					
ANR	4689513	ExpressionStatement	strReg [ 18 ] = 0	115:4:2966:2980	4689292	6	True				
ANR	4689514	AssignmentExpression	strReg [ 18 ] = 0		4689292	0		=			
ANR	4689515	ArrayIndexing	strReg [ 18 ]		4689292	0					
ANR	4689516	Identifier	strReg		4689292	0					
ANR	4689517	PrimaryExpression	18		4689292	1					
ANR	4689518	PrimaryExpression	0		4689292	1					
ANR	4689519	ExpressionStatement	i += 22	116:4:2986:2993	4689292	7	True				
ANR	4689520	AssignmentExpression	i += 22		4689292	0		+=			
ANR	4689521	Identifier	i		4689292	0					
ANR	4689522	PrimaryExpression	22		4689292	1					
ANR	4689523	ExpressionStatement	"val = r_num_get ( NULL , strReg )"	117:4:2999:3029	4689292	8	True				
ANR	4689524	AssignmentExpression	"val = r_num_get ( NULL , strReg )"		4689292	0		=			
ANR	4689525	Identifier	val		4689292	0					
ANR	4689526	CallExpression	"r_num_get ( NULL , strReg )"		4689292	1					
ANR	4689527	Callee	r_num_get		4689292	0					
ANR	4689528	Identifier	r_num_get		4689292	0					
ANR	4689529	ArgumentList	NULL		4689292	1					
ANR	4689530	Argument	NULL		4689292	0					
ANR	4689531	Identifier	NULL		4689292	0					
ANR	4689532	Argument	strReg		4689292	1					
ANR	4689533	Identifier	strReg		4689292	0					
ANR	4689534	ExpressionStatement	"memcpy ( & buf [ pos ] , & val , 8 )"	119:4:3117:3144	4689292	9	True				
ANR	4689535	CallExpression	"memcpy ( & buf [ pos ] , & val , 8 )"		4689292	0					
ANR	4689536	Callee	memcpy		4689292	0					
ANR	4689537	Identifier	memcpy		4689292	0					
ANR	4689538	ArgumentList	& buf [ pos ]		4689292	1					
ANR	4689539	Argument	& buf [ pos ]		4689292	0					
ANR	4689540	UnaryOperationExpression	& buf [ pos ]		4689292	0					
ANR	4689541	UnaryOperator	&		4689292	0					
ANR	4689542	ArrayIndexing	buf [ pos ]		4689292	1					
ANR	4689543	Identifier	buf		4689292	0					
ANR	4689544	Identifier	pos		4689292	1					
ANR	4689545	Argument	& val		4689292	1					
ANR	4689546	UnaryOperationExpression	& val		4689292	0					
ANR	4689547	UnaryOperator	&		4689292	0					
ANR	4689548	Identifier	val		4689292	1					
ANR	4689549	Argument	8		4689292	2					
ANR	4689550	PrimaryExpression	8		4689292	0					
ANR	4689551	IfStatement	"if ( ! strncmp ( regname , ""rip"" , 3 ) )"		4689292	10					
ANR	4689552	Condition	"! strncmp ( regname , ""rip"" , 3 )"	121:8:3234:3261	4689292	0	True				
ANR	4689553	UnaryOperationExpression	"! strncmp ( regname , ""rip"" , 3 )"		4689292	0					
ANR	4689554	UnaryOperator	!		4689292	0					
ANR	4689555	CallExpression	"strncmp ( regname , ""rip"" , 3 )"		4689292	1					
ANR	4689556	Callee	strncmp		4689292	0					
ANR	4689557	Identifier	strncmp		4689292	0					
ANR	4689558	ArgumentList	regname		4689292	1					
ANR	4689559	Argument	regname		4689292	0					
ANR	4689560	Identifier	regname		4689292	0					
ANR	4689561	Argument	"""rip"""		4689292	1					
ANR	4689562	PrimaryExpression	"""rip"""		4689292	0					
ANR	4689563	Argument	3		4689292	2					
ANR	4689564	PrimaryExpression	3		4689292	0					
ANR	4689565	CompoundStatement		35:38:1144:1144	4689292	1					
ANR	4689566	ExpressionStatement	valRIP = val	123:5:3299:3311	4689292	0	True				
ANR	4689567	AssignmentExpression	valRIP = val		4689292	0		=			
ANR	4689568	Identifier	valRIP		4689292	0					
ANR	4689569	Identifier	val		4689292	1					
ANR	4689570	ExpressionStatement	pos += 8	125:4:3323:3330	4689292	11	True				
ANR	4689571	AssignmentExpression	pos += 8		4689292	0		+=			
ANR	4689572	Identifier	pos		4689292	0					
ANR	4689573	PrimaryExpression	8		4689292	1					
ANR	4689574	ElseStatement	else		4689292	0					
ANR	4689575	CompoundStatement		41:10:1223:1223	4689292	0					
ANR	4689576	ExpressionStatement	i ++	128:4:3349:3352	4689292	0	True				
ANR	4689577	PostIncDecOperationExpression	i ++		4689292	0					
ANR	4689578	Identifier	i		4689292	0					
ANR	4689579	IncDec	++		4689292	1					
ANR	4689580	ExpressionStatement	"bochs_send_cmd ( desc , ""info cpu"" , true )"	132:2:3366:3405	4689292	4	True				
ANR	4689581	CallExpression	"bochs_send_cmd ( desc , ""info cpu"" , true )"		4689292	0					
ANR	4689582	Callee	bochs_send_cmd		4689292	0					
ANR	4689583	Identifier	bochs_send_cmd		4689292	0					
ANR	4689584	ArgumentList	desc		4689292	1					
ANR	4689585	Argument	desc		4689292	0					
ANR	4689586	Identifier	desc		4689292	0					
ANR	4689587	Argument	"""info cpu"""		4689292	1					
ANR	4689588	PrimaryExpression	"""info cpu"""		4689292	0					
ANR	4689589	Argument	true		4689292	2					
ANR	4689590	Identifier	true		4689292	0					
ANR	4689591	IfStatement	"if ( strstr ( desc -> data , ""PC_32"" ) )"		4689292	5					
ANR	4689592	Condition	"strstr ( desc -> data , ""PC_32"" )"	133:6:3413:3439	4689292	0	True				
ANR	4689593	CallExpression	"strstr ( desc -> data , ""PC_32"" )"		4689292	0					
ANR	4689594	Callee	strstr		4689292	0					
ANR	4689595	Identifier	strstr		4689292	0					
ANR	4689596	ArgumentList	desc -> data		4689292	1					
ANR	4689597	Argument	desc -> data		4689292	0					
ANR	4689598	PtrMemberAccess	desc -> data		4689292	0					
ANR	4689599	Identifier	desc		4689292	0					
ANR	4689600	Identifier	data		4689292	1					
ANR	4689601	Argument	"""PC_32"""		4689292	1					
ANR	4689602	PrimaryExpression	"""PC_32"""		4689292	0					
ANR	4689603	CompoundStatement		47:35:1322:1322	4689292	1					
ANR	4689604	ExpressionStatement	bAjusta = true	134:3:3447:3461	4689292	0	True				
ANR	4689605	AssignmentExpression	bAjusta = true		4689292	0		=			
ANR	4689606	Identifier	bAjusta		4689292	0					
ANR	4689607	Identifier	true		4689292	1					
ANR	4689608	ElseStatement	else		4689292	0					
ANR	4689609	IfStatement	"if ( strstr ( desc -> data , ""PC_80"" ) )"		4689292	0					
ANR	4689610	Condition	"strstr ( desc -> data , ""PC_80"" )"	136:13:3508:3534	4689292	0	True				
ANR	4689611	CallExpression	"strstr ( desc -> data , ""PC_80"" )"		4689292	0					
ANR	4689612	Callee	strstr		4689292	0					
ANR	4689613	Identifier	strstr		4689292	0					
ANR	4689614	ArgumentList	desc -> data		4689292	1					
ANR	4689615	Argument	desc -> data		4689292	0					
ANR	4689616	PtrMemberAccess	desc -> data		4689292	0					
ANR	4689617	Identifier	desc		4689292	0					
ANR	4689618	Identifier	data		4689292	1					
ANR	4689619	Argument	"""PC_80"""		4689292	1					
ANR	4689620	PrimaryExpression	"""PC_80"""		4689292	0					
ANR	4689621	CompoundStatement		50:42:1417:1417	4689292	1					
ANR	4689622	ExpressionStatement	bAjusta = false	137:3:3542:3557	4689292	0	True				
ANR	4689623	AssignmentExpression	bAjusta = false		4689292	0		=			
ANR	4689624	Identifier	bAjusta		4689292	0					
ANR	4689625	Identifier	false		4689292	1					
ANR	4689626	ElseStatement	else		4689292	0					
ANR	4689627	IfStatement	"if ( strstr ( desc -> data , ""PC_64"" ) )"		4689292	0					
ANR	4689628	Condition	"strstr ( desc -> data , ""PC_64"" )"	139:13:3604:3630	4689292	0	True				
ANR	4689629	CallExpression	"strstr ( desc -> data , ""PC_64"" )"		4689292	0					
ANR	4689630	Callee	strstr		4689292	0					
ANR	4689631	Identifier	strstr		4689292	0					
ANR	4689632	ArgumentList	desc -> data		4689292	1					
ANR	4689633	Argument	desc -> data		4689292	0					
ANR	4689634	PtrMemberAccess	desc -> data		4689292	0					
ANR	4689635	Identifier	desc		4689292	0					
ANR	4689636	Identifier	data		4689292	1					
ANR	4689637	Argument	"""PC_64"""		4689292	1					
ANR	4689638	PrimaryExpression	"""PC_64"""		4689292	0					
ANR	4689639	CompoundStatement		53:42:1513:1513	4689292	1					
ANR	4689640	ExpressionStatement	bAjusta = false	140:3:3638:3653	4689292	0	True				
ANR	4689641	AssignmentExpression	bAjusta = false		4689292	0		=			
ANR	4689642	Identifier	bAjusta		4689292	0					
ANR	4689643	Identifier	false		4689292	1					
ANR	4689644	ElseStatement	else		4689292	0					
ANR	4689645	CompoundStatement		56:9:1576:1576	4689292	0					
ANR	4689646	ExpressionStatement	"eprintf ( ""[unknown mode]\\n%s\\n"" , desc -> data )"	143:3:3701:3745	4689292	0	True				
ANR	4689647	CallExpression	"eprintf ( ""[unknown mode]\\n%s\\n"" , desc -> data )"		4689292	0					
ANR	4689648	Callee	eprintf		4689292	0					
ANR	4689649	Identifier	eprintf		4689292	0					
ANR	4689650	ArgumentList	"""[unknown mode]\\n%s\\n"""		4689292	1					
ANR	4689651	Argument	"""[unknown mode]\\n%s\\n"""		4689292	0					
ANR	4689652	PrimaryExpression	"""[unknown mode]\\n%s\\n"""		4689292	0					
ANR	4689653	Argument	desc -> data		4689292	1					
ANR	4689654	PtrMemberAccess	desc -> data		4689292	0					
ANR	4689655	Identifier	desc		4689292	0					
ANR	4689656	Identifier	data		4689292	1					
ANR	4689657	ExpressionStatement	"bochs_send_cmd ( desc , ""sreg"" , true )"	163:2:4743:4778	4689292	6	True				
ANR	4689658	CallExpression	"bochs_send_cmd ( desc , ""sreg"" , true )"		4689292	0					
ANR	4689659	Callee	bochs_send_cmd		4689292	0					
ANR	4689660	Identifier	bochs_send_cmd		4689292	0					
ANR	4689661	ArgumentList	desc		4689292	1					
ANR	4689662	Argument	desc		4689292	0					
ANR	4689663	Identifier	desc		4689292	0					
ANR	4689664	Argument	"""sreg"""		4689292	1					
ANR	4689665	PrimaryExpression	"""sreg"""		4689292	0					
ANR	4689666	Argument	true		4689292	2					
ANR	4689667	Identifier	true		4689292	0					
ANR	4689668	ExpressionStatement	pos = 0x38	165:2:4783:4793	4689292	7	True				
ANR	4689669	AssignmentExpression	pos = 0x38		4689292	0		=			
ANR	4689670	Identifier	pos		4689292	0					
ANR	4689671	PrimaryExpression	0x38		4689292	1					
ANR	4689672	IdentifierDeclStatement	"char * s [ ] = { ""es:0x"" , ""cs:0x"" , ""ss:0x"" , ""ds:0x"" , ""fs:0x"" , ""gs:0x"" , 0 } ;"	166:2:4797:4864	4689292	8	True				
ANR	4689673	IdentifierDecl	"* s [ ] = { ""es:0x"" , ""cs:0x"" , ""ss:0x"" , ""ds:0x"" , ""fs:0x"" , ""gs:0x"" , 0 }"		4689292	0					
ANR	4689674	IdentifierDeclType	char * [ ]		4689292	0					
ANR	4689675	Identifier	s		4689292	1					
ANR	4689676	AssignmentExpression	"* s [ ] = { ""es:0x"" , ""cs:0x"" , ""ss:0x"" , ""ds:0x"" , ""fs:0x"" , ""gs:0x"" , 0 }"		4689292	2		=			
ANR	4689677	Identifier	s		4689292	0					
ANR	4689678	InitializerList	"""es:0x"""		4689292	1					
ANR	4689679	PrimaryExpression	"""es:0x"""		4689292	0					
ANR	4689680	PrimaryExpression	"""cs:0x"""		4689292	1					
ANR	4689681	PrimaryExpression	"""ss:0x"""		4689292	2					
ANR	4689682	PrimaryExpression	"""ds:0x"""		4689292	3					
ANR	4689683	PrimaryExpression	"""fs:0x"""		4689292	4					
ANR	4689684	PrimaryExpression	"""gs:0x"""		4689292	5					
ANR	4689685	PrimaryExpression	0		4689292	6					
ANR	4689686	IdentifierDeclStatement	const char * x ;	167:2:4868:4881	4689292	9	True				
ANR	4689687	IdentifierDecl	* x		4689292	0					
ANR	4689688	IdentifierDeclType	const char *		4689292	0					
ANR	4689689	Identifier	x		4689292	1					
ANR	4689690	IdentifierDeclStatement	int n ;	168:2:4885:4890	4689292	10	True				
ANR	4689691	IdentifierDecl	n		4689292	0					
ANR	4689692	IdentifierDeclType	int		4689292	0					
ANR	4689693	Identifier	n		4689292	1					
ANR	4689694	ForStatement	for ( n = 0 ; s [ n ] != 0 ; n ++ )		4689292	11					
ANR	4689695	ForInit	n = 0 ;	169:7:4899:4904	4689292	0	True				
ANR	4689696	AssignmentExpression	n = 0		4689292	0		=			
ANR	4689697	Identifier	n		4689292	0					
ANR	4689698	PrimaryExpression	0		4689292	1					
ANR	4689699	Condition	s [ n ] != 0	169:14:4906:4914	4689292	1	True				
ANR	4689700	EqualityExpression	s [ n ] != 0		4689292	0		!=			
ANR	4689701	ArrayIndexing	s [ n ]		4689292	0					
ANR	4689702	Identifier	s		4689292	0					
ANR	4689703	Identifier	n		4689292	1					
ANR	4689704	PrimaryExpression	0		4689292	1					
ANR	4689705	PostIncDecOperationExpression	n ++	169:25:4917:4919	4689292	2	True				
ANR	4689706	Identifier	n		4689292	0					
ANR	4689707	IncDec	++		4689292	1					
ANR	4689708	CompoundStatement		83:30:2802:2802	4689292	3					
ANR	4689709	IfStatement	"if ( ( x = strstr ( desc -> data , s [ n ] ) ) )"		4689292	0					
ANR	4689710	Condition	"x = strstr ( desc -> data , s [ n ] )"	170:7:4931:4960	4689292	0	True				
ANR	4689711	AssignmentExpression	"x = strstr ( desc -> data , s [ n ] )"		4689292	0		=			
ANR	4689712	Identifier	x		4689292	0					
ANR	4689713	CallExpression	"strstr ( desc -> data , s [ n ] )"		4689292	1					
ANR	4689714	Callee	strstr		4689292	0					
ANR	4689715	Identifier	strstr		4689292	0					
ANR	4689716	ArgumentList	desc -> data		4689292	1					
ANR	4689717	Argument	desc -> data		4689292	0					
ANR	4689718	PtrMemberAccess	desc -> data		4689292	0					
ANR	4689719	Identifier	desc		4689292	0					
ANR	4689720	Identifier	data		4689292	1					
ANR	4689721	Argument	s [ n ]		4689292	1					
ANR	4689722	ArrayIndexing	s [ n ]		4689292	0					
ANR	4689723	Identifier	s		4689292	0					
ANR	4689724	Identifier	n		4689292	1					
ANR	4689725	CompoundStatement		84:39:2843:2843	4689292	1					
ANR	4689726	ExpressionStatement	"strncpy ( & strReg [ 0 ] , x + 3 , 7 )"	171:4:4969:4997	4689292	0	True				
ANR	4689727	CallExpression	"strncpy ( & strReg [ 0 ] , x + 3 , 7 )"		4689292	0					
ANR	4689728	Callee	strncpy		4689292	0					
ANR	4689729	Identifier	strncpy		4689292	0					
ANR	4689730	ArgumentList	& strReg [ 0 ]		4689292	1					
ANR	4689731	Argument	& strReg [ 0 ]		4689292	0					
ANR	4689732	UnaryOperationExpression	& strReg [ 0 ]		4689292	0					
ANR	4689733	UnaryOperator	&		4689292	0					
ANR	4689734	ArrayIndexing	strReg [ 0 ]		4689292	1					
ANR	4689735	Identifier	strReg		4689292	0					
ANR	4689736	PrimaryExpression	0		4689292	1					
ANR	4689737	Argument	x + 3		4689292	1					
ANR	4689738	AdditiveExpression	x + 3		4689292	0		+			
ANR	4689739	Identifier	x		4689292	0					
ANR	4689740	PrimaryExpression	3		4689292	1					
ANR	4689741	Argument	7		4689292	2					
ANR	4689742	PrimaryExpression	7		4689292	0					
ANR	4689743	ExpressionStatement	strReg [ 6 ] = 0	172:4:5003:5016	4689292	1	True				
ANR	4689744	AssignmentExpression	strReg [ 6 ] = 0		4689292	0		=			
ANR	4689745	ArrayIndexing	strReg [ 6 ]		4689292	0					
ANR	4689746	Identifier	strReg		4689292	0					
ANR	4689747	PrimaryExpression	6		4689292	1					
ANR	4689748	PrimaryExpression	0		4689292	1					
ANR	4689749	ExpressionStatement	"val = r_num_get ( NULL , strReg )"	173:4:5022:5052	4689292	2	True				
ANR	4689750	AssignmentExpression	"val = r_num_get ( NULL , strReg )"		4689292	0		=			
ANR	4689751	Identifier	val		4689292	0					
ANR	4689752	CallExpression	"r_num_get ( NULL , strReg )"		4689292	1					
ANR	4689753	Callee	r_num_get		4689292	0					
ANR	4689754	Identifier	r_num_get		4689292	0					
ANR	4689755	ArgumentList	NULL		4689292	1					
ANR	4689756	Argument	NULL		4689292	0					
ANR	4689757	Identifier	NULL		4689292	0					
ANR	4689758	Argument	strReg		4689292	1					
ANR	4689759	Identifier	strReg		4689292	0					
ANR	4689760	ExpressionStatement	"strncpy ( regname , s [ n ] , 2 )"	174:4:5058:5084	4689292	3	True				
ANR	4689761	CallExpression	"strncpy ( regname , s [ n ] , 2 )"		4689292	0					
ANR	4689762	Callee	strncpy		4689292	0					
ANR	4689763	Identifier	strncpy		4689292	0					
ANR	4689764	ArgumentList	regname		4689292	1					
ANR	4689765	Argument	regname		4689292	0					
ANR	4689766	Identifier	regname		4689292	0					
ANR	4689767	Argument	s [ n ]		4689292	1					
ANR	4689768	ArrayIndexing	s [ n ]		4689292	0					
ANR	4689769	Identifier	s		4689292	0					
ANR	4689770	Identifier	n		4689292	1					
ANR	4689771	Argument	2		4689292	2					
ANR	4689772	PrimaryExpression	2		4689292	0					
ANR	4689773	ExpressionStatement	regname [ 2 ] = 0	175:4:5090:5104	4689292	4	True				
ANR	4689774	AssignmentExpression	regname [ 2 ] = 0		4689292	0		=			
ANR	4689775	ArrayIndexing	regname [ 2 ]		4689292	0					
ANR	4689776	Identifier	regname		4689292	0					
ANR	4689777	PrimaryExpression	2		4689292	1					
ANR	4689778	PrimaryExpression	0		4689292	1					
ANR	4689779	IfStatement	"if ( ( x = strstr ( x , ""base="" ) ) )"		4689292	5					
ANR	4689780	Condition	"x = strstr ( x , ""base="" )"	176:8:5114:5138	4689292	0	True				
ANR	4689781	AssignmentExpression	"x = strstr ( x , ""base="" )"		4689292	0		=			
ANR	4689782	Identifier	x		4689292	0					
ANR	4689783	CallExpression	"strstr ( x , ""base="" )"		4689292	1					
ANR	4689784	Callee	strstr		4689292	0					
ANR	4689785	Identifier	strstr		4689292	0					
ANR	4689786	ArgumentList	x		4689292	1					
ANR	4689787	Argument	x		4689292	0					
ANR	4689788	Identifier	x		4689292	0					
ANR	4689789	Argument	"""base="""		4689292	1					
ANR	4689790	PrimaryExpression	"""base="""		4689292	0					
ANR	4689791	CompoundStatement		90:35:3021:3021	4689292	1					
ANR	4689792	ExpressionStatement	"strncpy ( strBase , x + 5 , 10 )"	177:5:5148:5176	4689292	0	True				
ANR	4689793	CallExpression	"strncpy ( strBase , x + 5 , 10 )"		4689292	0					
ANR	4689794	Callee	strncpy		4689292	0					
ANR	4689795	Identifier	strncpy		4689292	0					
ANR	4689796	ArgumentList	strBase		4689292	1					
ANR	4689797	Argument	strBase		4689292	0					
ANR	4689798	Identifier	strBase		4689292	0					
ANR	4689799	Argument	x + 5		4689292	1					
ANR	4689800	AdditiveExpression	x + 5		4689292	0		+			
ANR	4689801	Identifier	x		4689292	0					
ANR	4689802	PrimaryExpression	5		4689292	1					
ANR	4689803	Argument	10		4689292	2					
ANR	4689804	PrimaryExpression	10		4689292	0					
ANR	4689805	ExpressionStatement	strBase [ 10 ] = 0	178:5:5183:5198	4689292	1	True				
ANR	4689806	AssignmentExpression	strBase [ 10 ] = 0		4689292	0		=			
ANR	4689807	ArrayIndexing	strBase [ 10 ]		4689292	0					
ANR	4689808	Identifier	strBase		4689292	0					
ANR	4689809	PrimaryExpression	10		4689292	1					
ANR	4689810	PrimaryExpression	0		4689292	1					
ANR	4689811	IfStatement	"if ( ( x = strstr ( x , ""limit="" ) ) )"		4689292	2					
ANR	4689812	Condition	"x = strstr ( x , ""limit="" )"	179:9:5209:5234	4689292	0	True				
ANR	4689813	AssignmentExpression	"x = strstr ( x , ""limit="" )"		4689292	0		=			
ANR	4689814	Identifier	x		4689292	0					
ANR	4689815	CallExpression	"strstr ( x , ""limit="" )"		4689292	1					
ANR	4689816	Callee	strstr		4689292	0					
ANR	4689817	Identifier	strstr		4689292	0					
ANR	4689818	ArgumentList	x		4689292	1					
ANR	4689819	Argument	x		4689292	0					
ANR	4689820	Identifier	x		4689292	0					
ANR	4689821	Argument	"""limit="""		4689292	1					
ANR	4689822	PrimaryExpression	"""limit="""		4689292	0					
ANR	4689823	CompoundStatement		93:37:3117:3117	4689292	1					
ANR	4689824	ExpressionStatement	"strncpy ( strLimit , x + 6 , 10 )"	180:6:5245:5274	4689292	0	True				
ANR	4689825	CallExpression	"strncpy ( strLimit , x + 6 , 10 )"		4689292	0					
ANR	4689826	Callee	strncpy		4689292	0					
ANR	4689827	Identifier	strncpy		4689292	0					
ANR	4689828	ArgumentList	strLimit		4689292	1					
ANR	4689829	Argument	strLimit		4689292	0					
ANR	4689830	Identifier	strLimit		4689292	0					
ANR	4689831	Argument	x + 6		4689292	1					
ANR	4689832	AdditiveExpression	x + 6		4689292	0		+			
ANR	4689833	Identifier	x		4689292	0					
ANR	4689834	PrimaryExpression	6		4689292	1					
ANR	4689835	Argument	10		4689292	2					
ANR	4689836	PrimaryExpression	10		4689292	0					
ANR	4689837	ExpressionStatement	strLimit [ 10 ] = 0	181:6:5282:5298	4689292	1	True				
ANR	4689838	AssignmentExpression	strLimit [ 10 ] = 0		4689292	0		=			
ANR	4689839	ArrayIndexing	strLimit [ 10 ]		4689292	0					
ANR	4689840	Identifier	strLimit		4689292	0					
ANR	4689841	PrimaryExpression	10		4689292	1					
ANR	4689842	PrimaryExpression	0		4689292	1					
ANR	4689843	ExpressionStatement	"memcpy ( & buf [ pos ] , & val , 2 )"	185:4:5422:5449	4689292	6	True				
ANR	4689844	CallExpression	"memcpy ( & buf [ pos ] , & val , 2 )"		4689292	0					
ANR	4689845	Callee	memcpy		4689292	0					
ANR	4689846	Identifier	memcpy		4689292	0					
ANR	4689847	ArgumentList	& buf [ pos ]		4689292	1					
ANR	4689848	Argument	& buf [ pos ]		4689292	0					
ANR	4689849	UnaryOperationExpression	& buf [ pos ]		4689292	0					
ANR	4689850	UnaryOperator	&		4689292	0					
ANR	4689851	ArrayIndexing	buf [ pos ]		4689292	1					
ANR	4689852	Identifier	buf		4689292	0					
ANR	4689853	Identifier	pos		4689292	1					
ANR	4689854	Argument	& val		4689292	1					
ANR	4689855	UnaryOperationExpression	& val		4689292	0					
ANR	4689856	UnaryOperator	&		4689292	0					
ANR	4689857	Identifier	val		4689292	1					
ANR	4689858	Argument	2		4689292	2					
ANR	4689859	PrimaryExpression	2		4689292	0					
ANR	4689860	ExpressionStatement	pos += 2	186:4:5455:5463	4689292	7	True				
ANR	4689861	AssignmentExpression	pos += 2		4689292	0		+=			
ANR	4689862	Identifier	pos		4689292	0					
ANR	4689863	PrimaryExpression	2		4689292	1					
ANR	4689864	IfStatement	if ( bAjusta )		4689292	8					
ANR	4689865	Condition	bAjusta	187:8:5473:5479	4689292	0	True				
ANR	4689866	Identifier	bAjusta		4689292	0					
ANR	4689867	CompoundStatement		101:17:3362:3362	4689292	1					
ANR	4689868	IfStatement	"if ( ! strncmp ( regname , ""cs"" , 2 ) )"		4689292	0					
ANR	4689869	Condition	"! strncmp ( regname , ""cs"" , 2 )"	188:9:5493:5517	4689292	0	True				
ANR	4689870	UnaryOperationExpression	"! strncmp ( regname , ""cs"" , 2 )"		4689292	0					
ANR	4689871	UnaryOperator	!		4689292	0					
ANR	4689872	CallExpression	"strncmp ( regname , ""cs"" , 2 )"		4689292	1					
ANR	4689873	Callee	strncmp		4689292	0					
ANR	4689874	Identifier	strncmp		4689292	0					
ANR	4689875	ArgumentList	regname		4689292	1					
ANR	4689876	Argument	regname		4689292	0					
ANR	4689877	Identifier	regname		4689292	0					
ANR	4689878	Argument	"""cs"""		4689292	1					
ANR	4689879	PrimaryExpression	"""cs"""		4689292	0					
ANR	4689880	Argument	2		4689292	2					
ANR	4689881	PrimaryExpression	2		4689292	0					
ANR	4689882	CompoundStatement		102:36:3400:3400	4689292	1					
ANR	4689883	ExpressionStatement	valRIP += ( val * 0x10 )	189:6:5528:5548	4689292	0	True				
ANR	4689884	AssignmentExpression	valRIP += ( val * 0x10 )		4689292	0		+=			
ANR	4689885	Identifier	valRIP		4689292	0					
ANR	4689886	MultiplicativeExpression	val * 0x10		4689292	1		*			
ANR	4689887	Identifier	val		4689292	0					
ANR	4689888	PrimaryExpression	0x10		4689292	1					
ANR	4689889	IfStatement	if ( ripStop != 0 )		4689292	12					
ANR	4689890	Condition	ripStop != 0	196:6:5710:5721	4689292	0	True				
ANR	4689891	EqualityExpression	ripStop != 0		4689292	0		!=			
ANR	4689892	Identifier	ripStop		4689292	0					
ANR	4689893	PrimaryExpression	0		4689292	1					
ANR	4689894	CompoundStatement		110:20:3604:3604	4689292	1					
ANR	4689895	ExpressionStatement	"memcpy ( & buf [ 0 ] , & ripStop , 8 )"	197:3:5729:5758	4689292	0	True				
ANR	4689896	CallExpression	"memcpy ( & buf [ 0 ] , & ripStop , 8 )"		4689292	0					
ANR	4689897	Callee	memcpy		4689292	0					
ANR	4689898	Identifier	memcpy		4689292	0					
ANR	4689899	ArgumentList	& buf [ 0 ]		4689292	1					
ANR	4689900	Argument	& buf [ 0 ]		4689292	0					
ANR	4689901	UnaryOperationExpression	& buf [ 0 ]		4689292	0					
ANR	4689902	UnaryOperator	&		4689292	0					
ANR	4689903	ArrayIndexing	buf [ 0 ]		4689292	1					
ANR	4689904	Identifier	buf		4689292	0					
ANR	4689905	PrimaryExpression	0		4689292	1					
ANR	4689906	Argument	& ripStop		4689292	1					
ANR	4689907	UnaryOperationExpression	& ripStop		4689292	0					
ANR	4689908	UnaryOperator	&		4689292	0					
ANR	4689909	Identifier	ripStop		4689292	1					
ANR	4689910	Argument	8		4689292	2					
ANR	4689911	PrimaryExpression	8		4689292	0					
ANR	4689912	ElseStatement	else		4689292	0					
ANR	4689913	CompoundStatement		112:9:3649:3649	4689292	0					
ANR	4689914	ExpressionStatement	"memcpy ( & buf [ 0 ] , & valRIP , 8 )"	199:3:5774:5802	4689292	0	True				
ANR	4689915	CallExpression	"memcpy ( & buf [ 0 ] , & valRIP , 8 )"		4689292	0					
ANR	4689916	Callee	memcpy		4689292	0					
ANR	4689917	Identifier	memcpy		4689292	0					
ANR	4689918	ArgumentList	& buf [ 0 ]		4689292	1					
ANR	4689919	Argument	& buf [ 0 ]		4689292	0					
ANR	4689920	UnaryOperationExpression	& buf [ 0 ]		4689292	0					
ANR	4689921	UnaryOperator	&		4689292	0					
ANR	4689922	ArrayIndexing	buf [ 0 ]		4689292	1					
ANR	4689923	Identifier	buf		4689292	0					
ANR	4689924	PrimaryExpression	0		4689292	1					
ANR	4689925	Argument	& valRIP		4689292	1					
ANR	4689926	UnaryOperationExpression	& valRIP		4689292	0					
ANR	4689927	UnaryOperator	&		4689292	0					
ANR	4689928	Identifier	valRIP		4689292	1					
ANR	4689929	Argument	8		4689292	2					
ANR	4689930	PrimaryExpression	8		4689292	0					
ANR	4689931	ExpressionStatement	"memcpy ( saveRegs , buf , size )"	202:2:5918:5944	4689292	13	True				
ANR	4689932	CallExpression	"memcpy ( saveRegs , buf , size )"		4689292	0					
ANR	4689933	Callee	memcpy		4689292	0					
ANR	4689934	Identifier	memcpy		4689292	0					
ANR	4689935	ArgumentList	saveRegs		4689292	1					
ANR	4689936	Argument	saveRegs		4689292	0					
ANR	4689937	Identifier	saveRegs		4689292	0					
ANR	4689938	Argument	buf		4689292	1					
ANR	4689939	Identifier	buf		4689292	0					
ANR	4689940	Argument	size		4689292	2					
ANR	4689941	Identifier	size		4689292	0					
ANR	4689942	ExpressionStatement	bCapturaRegs = false	203:2:5948:5968	4689292	14	True				
ANR	4689943	AssignmentExpression	bCapturaRegs = false		4689292	0		=			
ANR	4689944	Identifier	bCapturaRegs		4689292	0					
ANR	4689945	Identifier	false		4689292	1					
ANR	4689946	ElseStatement	else		4689292	0					
ANR	4689947	CompoundStatement		119:8:3891:3891	4689292	0					
ANR	4689948	ExpressionStatement	"memcpy ( buf , saveRegs , size )"	206:2:6015:6043	4689292	0	True				
ANR	4689949	CallExpression	"memcpy ( buf , saveRegs , size )"		4689292	0					
ANR	4689950	Callee	memcpy		4689292	0					
ANR	4689951	Identifier	memcpy		4689292	0					
ANR	4689952	ArgumentList	buf		4689292	1					
ANR	4689953	Argument	buf		4689292	0					
ANR	4689954	Identifier	buf		4689292	0					
ANR	4689955	Argument	saveRegs		4689292	1					
ANR	4689956	Identifier	saveRegs		4689292	0					
ANR	4689957	Argument	size		4689292	2					
ANR	4689958	Identifier	size		4689292	0					
ANR	4689959	ReturnStatement	return size ;	209:1:6090:6101	4689292	8	True				
ANR	4689960	Identifier	size		4689292	0					
ANR	4689961	ReturnType	static int		4689292	1					
ANR	4689962	Identifier	r_debug_bochs_reg_read		4689292	2					
ANR	4689963	ParameterList	"RDebug * dbg , int type , ut8 * buf , int size"		4689292	3					
ANR	4689964	Parameter	RDebug * dbg	87:34:2076:2086	4689292	0	True				
ANR	4689965	ParameterType	RDebug *		4689292	0					
ANR	4689966	Identifier	dbg		4689292	1					
ANR	4689967	Parameter	int type	87:47:2089:2096	4689292	1	True				
ANR	4689968	ParameterType	int		4689292	0					
ANR	4689969	Identifier	type		4689292	1					
ANR	4689970	Parameter	ut8 * buf	87:57:2099:2106	4689292	2	True				
ANR	4689971	ParameterType	ut8 *		4689292	0					
ANR	4689972	Identifier	buf		4689292	1					
ANR	4689973	Parameter	int size	87:67:2109:2116	4689292	3	True				
ANR	4689974	ParameterType	int		4689292	0					
ANR	4689975	Identifier	size		4689292	1					
ANR	4689976	CFGEntryNode	ENTRY		4689292		True				
ANR	4689977	CFGExitNode	EXIT		4689292		True				
ANR	4689978	Symbol	& val		4689292						
ANR	4689979	Symbol	* strBase		4689292						
ANR	4689980	Symbol	saveRegs		4689292						
ANR	4689981	Symbol	type		4689292						
ANR	4689982	Symbol	strlen		4689292						
ANR	4689983	Symbol	strncmp		4689292						
ANR	4689984	Symbol	& ripStop		4689292						
ANR	4689985	Symbol	* desc -> data		4689292						
ANR	4689986	Symbol	* strReg		4689292						
ANR	4689987	Symbol	pos		4689292						
ANR	4689988	Symbol	bCapturaRegs		4689292						
ANR	4689989	Symbol	* desc		4689292						
ANR	4689990	Symbol	desc -> data		4689292						
ANR	4689991	Symbol	r_num_get		4689292						
ANR	4689992	Symbol	valRIP		4689292						
ANR	4689993	Symbol	val		4689292						
ANR	4689994	Symbol	regname		4689292						
ANR	4689995	Symbol	NULL		4689292						
ANR	4689996	Symbol	strBase		4689292						
ANR	4689997	Symbol	dbg		4689292						
ANR	4689998	Symbol	strLimit		4689292						
ANR	4689999	Symbol	false		4689292						
ANR	4690000	Symbol	i		4689292						
ANR	4690001	Symbol	* * desc		4689292						
ANR	4690002	Symbol	& valRIP		4689292						
ANR	4690003	Symbol	bAjusta		4689292						
ANR	4690004	Symbol	n		4689292						
ANR	4690005	Symbol	buf		4689292						
ANR	4690006	Symbol	* i		4689292						
ANR	4690007	Symbol	s		4689292						
ANR	4690008	Symbol	size		4689292						
ANR	4690009	Symbol	strstr		4689292						
ANR	4690010	Symbol	strReg		4689292						
ANR	4690011	Symbol	lenRec		4689292						
ANR	4690012	Symbol	isBochs		4689292						
ANR	4690013	Symbol	* regname		4689292						
ANR	4690014	Symbol	true		4689292						
ANR	4690015	Symbol	x		4689292						
ANR	4690016	Symbol	* n		4689292						
ANR	4690017	Symbol	* s		4689292						
ANR	4690018	Symbol	* strLimit		4689292						
ANR	4690019	Symbol	ripStop		4689292						
ANR	4690020	Symbol	desc		4689292						
ANR	4690021	Function	r_debug_bochs_reg_write	212:0:6106:6237							
ANR	4690022	FunctionDef	"r_debug_bochs_reg_write (RDebug * dbg , int type , const ut8 * buf , int size)"		4690021	0					
ANR	4690023	CompoundStatement		212:84:6190:6237	4690021	0					
ANR	4690024	ReturnStatement	return - 1 ;	214:1:6226:6235	4690021	0	True				
ANR	4690025	UnaryOperationExpression	- 1		4690021	0					
ANR	4690026	UnaryOperator	-		4690021	0					
ANR	4690027	PrimaryExpression	1		4690021	1					
ANR	4690028	ReturnType	static int		4690021	1					
ANR	4690029	Identifier	r_debug_bochs_reg_write		4690021	2					
ANR	4690030	ParameterList	"RDebug * dbg , int type , const ut8 * buf , int size"		4690021	3					
ANR	4690031	Parameter	RDebug * dbg	212:35:6141:6151	4690021	0	True				
ANR	4690032	ParameterType	RDebug *		4690021	0					
ANR	4690033	Identifier	dbg		4690021	1					
ANR	4690034	Parameter	int type	212:48:6154:6161	4690021	1	True				
ANR	4690035	ParameterType	int		4690021	0					
ANR	4690036	Identifier	type		4690021	1					
ANR	4690037	Parameter	const ut8 * buf	212:58:6164:6177	4690021	2	True				
ANR	4690038	ParameterType	const ut8 *		4690021	0					
ANR	4690039	Identifier	buf		4690021	1					
ANR	4690040	Parameter	int size	212:74:6180:6187	4690021	3	True				
ANR	4690041	ParameterType	int		4690021	0					
ANR	4690042	Identifier	size		4690021	1					
ANR	4690043	CFGEntryNode	ENTRY		4690021		True				
ANR	4690044	CFGExitNode	EXIT		4690021		True				
ANR	4690045	Symbol	buf		4690021						
ANR	4690046	Symbol	size		4690021						
ANR	4690047	Symbol	dbg		4690021						
ANR	4690048	Symbol	type		4690021						
ANR	4690049	Function	map_free	217:0:6240:6304							
ANR	4690050	FunctionDef	map_free (RDebugMap * map)		4690049	0					
ANR	4690051	CompoundStatement		217:30:6270:6304	4690049	0					
ANR	4690052	ExpressionStatement	free ( map -> name )	218:1:6273:6289	4690049	0	True				
ANR	4690053	CallExpression	free ( map -> name )		4690049	0					
ANR	4690054	Callee	free		4690049	0					
ANR	4690055	Identifier	free		4690049	0					
ANR	4690056	ArgumentList	map -> name		4690049	1					
ANR	4690057	Argument	map -> name		4690049	0					
ANR	4690058	PtrMemberAccess	map -> name		4690049	0					
ANR	4690059	Identifier	map		4690049	0					
ANR	4690060	Identifier	name		4690049	1					
ANR	4690061	ExpressionStatement	free ( map )	219:1:6292:6302	4690049	1	True				
ANR	4690062	CallExpression	free ( map )		4690049	0					
ANR	4690063	Callee	free		4690049	0					
ANR	4690064	Identifier	free		4690049	0					
ANR	4690065	ArgumentList	map		4690049	1					
ANR	4690066	Argument	map		4690049	0					
ANR	4690067	Identifier	map		4690049	0					
ANR	4690068	ReturnType	void		4690049	1					
ANR	4690069	Identifier	map_free		4690049	2					
ANR	4690070	ParameterList	RDebugMap * map		4690049	3					
ANR	4690071	Parameter	RDebugMap * map	217:14:6254:6267	4690049	0	True				
ANR	4690072	ParameterType	RDebugMap *		4690049	0					
ANR	4690073	Identifier	map		4690049	1					
ANR	4690074	CFGEntryNode	ENTRY		4690049		True				
ANR	4690075	CFGExitNode	EXIT		4690049		True				
ANR	4690076	Symbol	map -> name		4690049						
ANR	4690077	Symbol	* map		4690049						
ANR	4690078	Symbol	map		4690049						
ANR	4690079	Function	r_debug_bochs_map_get	222:0:6307:6782							
ANR	4690080	FunctionDef	r_debug_bochs_map_get (RDebug * dbg)		4690079	0					
ANR	4690081	CompoundStatement		222:49:6356:6782	4690079	0					
ANR	4690082	IfStatement	if ( ! isBochs ( dbg ) )		4690079	0					
ANR	4690083	Condition	! isBochs ( dbg )	223:5:6370:6383	4690079	0	True				
ANR	4690084	UnaryOperationExpression	! isBochs ( dbg )		4690079	0					
ANR	4690085	UnaryOperator	!		4690079	0					
ANR	4690086	CallExpression	isBochs ( dbg )		4690079	1					
ANR	4690087	Callee	isBochs		4690079	0					
ANR	4690088	Identifier	isBochs		4690079	0					
ANR	4690089	ArgumentList	dbg		4690079	1					
ANR	4690090	Argument	dbg		4690079	0					
ANR	4690091	Identifier	dbg		4690079	0					
ANR	4690092	CompoundStatement		2:21:29:29	4690079	1					
ANR	4690093	ReturnStatement	return NULL ;	224:2:6390:6401	4690079	0	True				
ANR	4690094	Identifier	NULL		4690079	0					
ANR	4690095	IdentifierDeclStatement	RDebugMap * mr ;	227:1:6444:6457	4690079	1	True				
ANR	4690096	IdentifierDecl	* mr		4690079	0					
ANR	4690097	IdentifierDeclType	RDebugMap *		4690079	0					
ANR	4690098	Identifier	mr		4690079	1					
ANR	4690099	IdentifierDeclStatement	RList * list = r_list_newf ( ( RListFree ) map_free ) ;	228:1:6460:6507	4690079	2	True				
ANR	4690100	IdentifierDecl	* list = r_list_newf ( ( RListFree ) map_free )		4690079	0					
ANR	4690101	IdentifierDeclType	RList *		4690079	0					
ANR	4690102	Identifier	list		4690079	1					
ANR	4690103	AssignmentExpression	* list = r_list_newf ( ( RListFree ) map_free )		4690079	2		=			
ANR	4690104	Identifier	list		4690079	0					
ANR	4690105	CallExpression	r_list_newf ( ( RListFree ) map_free )		4690079	1					
ANR	4690106	Callee	r_list_newf		4690079	0					
ANR	4690107	Identifier	r_list_newf		4690079	0					
ANR	4690108	ArgumentList	( RListFree ) map_free		4690079	1					
ANR	4690109	Argument	( RListFree ) map_free		4690079	0					
ANR	4690110	CastExpression	( RListFree ) map_free		4690079	0					
ANR	4690111	CastTarget	RListFree		4690079	0					
ANR	4690112	Identifier	map_free		4690079	1					
ANR	4690113	IfStatement	if ( ! list )		4690079	3					
ANR	4690114	Condition	! list	229:5:6514:6518	4690079	0	True				
ANR	4690115	UnaryOperationExpression	! list		4690079	0					
ANR	4690116	UnaryOperator	!		4690079	0					
ANR	4690117	Identifier	list		4690079	1					
ANR	4690118	CompoundStatement		8:12:164:164	4690079	1					
ANR	4690119	ReturnStatement	return NULL ;	230:2:6525:6536	4690079	0	True				
ANR	4690120	Identifier	NULL		4690079	0					
ANR	4690121	ExpressionStatement	mr = R_NEW0 ( RDebugMap )	232:1:6542:6565	4690079	4	True				
ANR	4690122	AssignmentExpression	mr = R_NEW0 ( RDebugMap )		4690079	0		=			
ANR	4690123	Identifier	mr		4690079	0					
ANR	4690124	CallExpression	R_NEW0 ( RDebugMap )		4690079	1					
ANR	4690125	Callee	R_NEW0		4690079	0					
ANR	4690126	Identifier	R_NEW0		4690079	0					
ANR	4690127	ArgumentList	RDebugMap		4690079	1					
ANR	4690128	Argument	RDebugMap		4690079	0					
ANR	4690129	Identifier	RDebugMap		4690079	0					
ANR	4690130	IfStatement	if ( ! mr )		4690079	5					
ANR	4690131	Condition	! mr	233:5:6572:6574	4690079	0	True				
ANR	4690132	UnaryOperationExpression	! mr		4690079	0					
ANR	4690133	UnaryOperator	!		4690079	0					
ANR	4690134	Identifier	mr		4690079	1					
ANR	4690135	CompoundStatement		12:10:220:220	4690079	1					
ANR	4690136	ExpressionStatement	r_list_free ( list )	234:2:6581:6599	4690079	0	True				
ANR	4690137	CallExpression	r_list_free ( list )		4690079	0					
ANR	4690138	Callee	r_list_free		4690079	0					
ANR	4690139	Identifier	r_list_free		4690079	0					
ANR	4690140	ArgumentList	list		4690079	1					
ANR	4690141	Argument	list		4690079	0					
ANR	4690142	Identifier	list		4690079	0					
ANR	4690143	ReturnStatement	return NULL ;	235:2:6603:6614	4690079	1	True				
ANR	4690144	Identifier	NULL		4690079	0					
ANR	4690145	ExpressionStatement	"mr -> name = strdup ( ""fake"" )"	237:1:6620:6646	4690079	6	True				
ANR	4690146	AssignmentExpression	"mr -> name = strdup ( ""fake"" )"		4690079	0		=			
ANR	4690147	PtrMemberAccess	mr -> name		4690079	0					
ANR	4690148	Identifier	mr		4690079	0					
ANR	4690149	Identifier	name		4690079	1					
ANR	4690150	CallExpression	"strdup ( ""fake"" )"		4690079	1					
ANR	4690151	Callee	strdup		4690079	0					
ANR	4690152	Identifier	strdup		4690079	0					
ANR	4690153	ArgumentList	"""fake"""		4690079	1					
ANR	4690154	Argument	"""fake"""		4690079	0					
ANR	4690155	PrimaryExpression	"""fake"""		4690079	0					
ANR	4690156	ExpressionStatement	mr -> addr = 0	238:1:6649:6661	4690079	7	True				
ANR	4690157	AssignmentExpression	mr -> addr = 0		4690079	0		=			
ANR	4690158	PtrMemberAccess	mr -> addr		4690079	0					
ANR	4690159	Identifier	mr		4690079	0					
ANR	4690160	Identifier	addr		4690079	1					
ANR	4690161	PrimaryExpression	0		4690079	1					
ANR	4690162	ExpressionStatement	mr -> addr_end = UT32_MAX	239:1:6664:6687	4690079	8	True				
ANR	4690163	AssignmentExpression	mr -> addr_end = UT32_MAX		4690079	0		=			
ANR	4690164	PtrMemberAccess	mr -> addr_end		4690079	0					
ANR	4690165	Identifier	mr		4690079	0					
ANR	4690166	Identifier	addr_end		4690079	1					
ANR	4690167	Identifier	UT32_MAX		4690079	1					
ANR	4690168	ExpressionStatement	mr -> size = UT32_MAX	240:1:6690:6709	4690079	9	True				
ANR	4690169	AssignmentExpression	mr -> size = UT32_MAX		4690079	0		=			
ANR	4690170	PtrMemberAccess	mr -> size		4690079	0					
ANR	4690171	Identifier	mr		4690079	0					
ANR	4690172	Identifier	size		4690079	1					
ANR	4690173	Identifier	UT32_MAX		4690079	1					
ANR	4690174	ExpressionStatement	mr -> perm = 0	241:1:6712:6724	4690079	10	True				
ANR	4690175	AssignmentExpression	mr -> perm = 0		4690079	0		=			
ANR	4690176	PtrMemberAccess	mr -> perm		4690079	0					
ANR	4690177	Identifier	mr		4690079	0					
ANR	4690178	Identifier	perm		4690079	1					
ANR	4690179	PrimaryExpression	0		4690079	1					
ANR	4690180	ExpressionStatement	mr -> user = 0	242:1:6727:6739	4690079	11	True				
ANR	4690181	AssignmentExpression	mr -> user = 0		4690079	0		=			
ANR	4690182	PtrMemberAccess	mr -> user		4690079	0					
ANR	4690183	Identifier	mr		4690079	0					
ANR	4690184	Identifier	user		4690079	1					
ANR	4690185	PrimaryExpression	0		4690079	1					
ANR	4690186	ExpressionStatement	"r_list_append ( list , mr )"	243:1:6742:6766	4690079	12	True				
ANR	4690187	CallExpression	"r_list_append ( list , mr )"		4690079	0					
ANR	4690188	Callee	r_list_append		4690079	0					
ANR	4690189	Identifier	r_list_append		4690079	0					
ANR	4690190	ArgumentList	list		4690079	1					
ANR	4690191	Argument	list		4690079	0					
ANR	4690192	Identifier	list		4690079	0					
ANR	4690193	Argument	mr		4690079	1					
ANR	4690194	Identifier	mr		4690079	0					
ANR	4690195	ReturnStatement	return list ;	244:1:6769:6780	4690079	13	True				
ANR	4690196	Identifier	list		4690079	0					
ANR	4690197	ReturnType	static RList *		4690079	1					
ANR	4690198	Identifier	r_debug_bochs_map_get		4690079	2					
ANR	4690199	ParameterList	RDebug * dbg		4690079	3					
ANR	4690200	Parameter	RDebug * dbg	222:36:6343:6353	4690079	0	True				
ANR	4690201	ParameterType	RDebug *		4690079	0					
ANR	4690202	Identifier	dbg		4690079	1					
ANR	4690203	CFGEntryNode	ENTRY		4690079		True				
ANR	4690204	CFGExitNode	EXIT		4690079		True				
ANR	4690205	Symbol	mr -> name		4690079						
ANR	4690206	Symbol	UT32_MAX		4690079						
ANR	4690207	Symbol	mr -> addr_end		4690079						
ANR	4690208	Symbol	NULL		4690079						
ANR	4690209	Symbol	mr -> perm		4690079						
ANR	4690210	Symbol	mr		4690079						
ANR	4690211	Symbol	r_list_newf		4690079						
ANR	4690212	Symbol	dbg		4690079						
ANR	4690213	Symbol	* mr		4690079						
ANR	4690214	Symbol	map_free		4690079						
ANR	4690215	Symbol	list		4690079						
ANR	4690216	Symbol	R_NEW0		4690079						
ANR	4690217	Symbol	mr -> size		4690079						
ANR	4690218	Symbol	isBochs		4690079						
ANR	4690219	Symbol	RDebugMap		4690079						
ANR	4690220	Symbol	strdup		4690079						
ANR	4690221	Symbol	mr -> addr		4690079						
ANR	4690222	Symbol	mr -> user		4690079						
ANR	4690223	Function	r_debug_bochs_step	247:0:6785:6985							
ANR	4690224	FunctionDef	r_debug_bochs_step (RDebug * dbg)		4690223	0					
ANR	4690225	CompoundStatement		247:43:6828:6985	4690223	0					
ANR	4690226	IfStatement	if ( ! isBochs ( dbg ) )		4690223	0					
ANR	4690227	Condition	! isBochs ( dbg )	248:5:6835:6848	4690223	0	True				
ANR	4690228	UnaryOperationExpression	! isBochs ( dbg )		4690223	0					
ANR	4690229	UnaryOperator	!		4690223	0					
ANR	4690230	CallExpression	isBochs ( dbg )		4690223	1					
ANR	4690231	Callee	isBochs		4690223	0					
ANR	4690232	Identifier	isBochs		4690223	0					
ANR	4690233	ArgumentList	dbg		4690223	1					
ANR	4690234	Argument	dbg		4690223	0					
ANR	4690235	Identifier	dbg		4690223	0					
ANR	4690236	CompoundStatement		2:21:22:22	4690223	1					
ANR	4690237	ReturnStatement	return false ;	249:2:6855:6867	4690223	0	True				
ANR	4690238	Identifier	false		4690223	0					
ANR	4690239	ExpressionStatement	"bochs_send_cmd ( desc , ""s"" , true )"	252:1:6902:6932	4690223	1	True				
ANR	4690240	CallExpression	"bochs_send_cmd ( desc , ""s"" , true )"		4690223	0					
ANR	4690241	Callee	bochs_send_cmd		4690223	0					
ANR	4690242	Identifier	bochs_send_cmd		4690223	0					
ANR	4690243	ArgumentList	desc		4690223	1					
ANR	4690244	Argument	desc		4690223	0					
ANR	4690245	Identifier	desc		4690223	0					
ANR	4690246	Argument	"""s"""		4690223	1					
ANR	4690247	PrimaryExpression	"""s"""		4690223	0					
ANR	4690248	Argument	true		4690223	2					
ANR	4690249	Identifier	true		4690223	0					
ANR	4690250	ExpressionStatement	bCapturaRegs = true	253:1:6935:6954	4690223	2	True				
ANR	4690251	AssignmentExpression	bCapturaRegs = true		4690223	0		=			
ANR	4690252	Identifier	bCapturaRegs		4690223	0					
ANR	4690253	Identifier	true		4690223	1					
ANR	4690254	ExpressionStatement	bStep = true	254:1:6957:6969	4690223	3	True				
ANR	4690255	AssignmentExpression	bStep = true		4690223	0		=			
ANR	4690256	Identifier	bStep		4690223	0					
ANR	4690257	Identifier	true		4690223	1					
ANR	4690258	ReturnStatement	return true ;	255:1:6972:6983	4690223	4	True				
ANR	4690259	Identifier	true		4690223	0					
ANR	4690260	ReturnType	static int		4690223	1					
ANR	4690261	Identifier	r_debug_bochs_step		4690223	2					
ANR	4690262	ParameterList	RDebug * dbg		4690223	3					
ANR	4690263	Parameter	RDebug * dbg	247:30:6815:6825	4690223	0	True				
ANR	4690264	ParameterType	RDebug *		4690223	0					
ANR	4690265	Identifier	dbg		4690223	1					
ANR	4690266	CFGEntryNode	ENTRY		4690223		True				
ANR	4690267	CFGExitNode	EXIT		4690223		True				
ANR	4690268	Symbol	bStep		4690223						
ANR	4690269	Symbol	isBochs		4690223						
ANR	4690270	Symbol	bCapturaRegs		4690223						
ANR	4690271	Symbol	dbg		4690223						
ANR	4690272	Symbol	false		4690223						
ANR	4690273	Symbol	true		4690223						
ANR	4690274	Symbol	desc		4690223						
ANR	4690275	Function	r_debug_bochs_continue	258:0:6988:7187							
ANR	4690276	FunctionDef	"r_debug_bochs_continue (RDebug * dbg , int pid , int tid , int sig)"		4690275	0					
ANR	4690277	CompoundStatement		258:74:7062:7187	4690275	0					
ANR	4690278	ExpressionStatement	"bochs_send_cmd ( desc , ""c"" , false )"	260:1:7099:7132	4690275	0	True				
ANR	4690279	CallExpression	"bochs_send_cmd ( desc , ""c"" , false )"		4690275	0					
ANR	4690280	Callee	bochs_send_cmd		4690275	0					
ANR	4690281	Identifier	bochs_send_cmd		4690275	0					
ANR	4690282	ArgumentList	desc		4690275	1					
ANR	4690283	Argument	desc		4690275	0					
ANR	4690284	Identifier	desc		4690275	0					
ANR	4690285	Argument	"""c"""		4690275	1					
ANR	4690286	PrimaryExpression	"""c"""		4690275	0					
ANR	4690287	Argument	false		4690275	2					
ANR	4690288	Identifier	false		4690275	0					
ANR	4690289	ExpressionStatement	bCapturaRegs = true	261:1:7135:7154	4690275	1	True				
ANR	4690290	AssignmentExpression	bCapturaRegs = true		4690275	0		=			
ANR	4690291	Identifier	bCapturaRegs		4690275	0					
ANR	4690292	Identifier	true		4690275	1					
ANR	4690293	ExpressionStatement	bBreak = false	262:1:7157:7171	4690275	2	True				
ANR	4690294	AssignmentExpression	bBreak = false		4690275	0		=			
ANR	4690295	Identifier	bBreak		4690275	0					
ANR	4690296	Identifier	false		4690275	1					
ANR	4690297	ReturnStatement	return true ;	263:1:7174:7185	4690275	3	True				
ANR	4690298	Identifier	true		4690275	0					
ANR	4690299	ReturnType	static int		4690275	1					
ANR	4690300	Identifier	r_debug_bochs_continue		4690275	2					
ANR	4690301	ParameterList	"RDebug * dbg , int pid , int tid , int sig"		4690275	3					
ANR	4690302	Parameter	RDebug * dbg	258:34:7022:7032	4690275	0	True				
ANR	4690303	ParameterType	RDebug *		4690275	0					
ANR	4690304	Identifier	dbg		4690275	1					
ANR	4690305	Parameter	int pid	258:47:7035:7041	4690275	1	True				
ANR	4690306	ParameterType	int		4690275	0					
ANR	4690307	Identifier	pid		4690275	1					
ANR	4690308	Parameter	int tid	258:56:7044:7050	4690275	2	True				
ANR	4690309	ParameterType	int		4690275	0					
ANR	4690310	Identifier	tid		4690275	1					
ANR	4690311	Parameter	int sig	258:65:7053:7059	4690275	3	True				
ANR	4690312	ParameterType	int		4690275	0					
ANR	4690313	Identifier	sig		4690275	1					
ANR	4690314	CFGEntryNode	ENTRY		4690275		True				
ANR	4690315	CFGExitNode	EXIT		4690275		True				
ANR	4690316	Symbol	sig		4690275						
ANR	4690317	Symbol	bCapturaRegs		4690275						
ANR	4690318	Symbol	dbg		4690275						
ANR	4690319	Symbol	false		4690275						
ANR	4690320	Symbol	true		4690275						
ANR	4690321	Symbol	pid		4690275						
ANR	4690322	Symbol	tid		4690275						
ANR	4690323	Symbol	desc		4690275						
ANR	4690324	Symbol	bBreak		4690275						
ANR	4690325	Function	bochs_debug_break	266:0:7190:7322							
ANR	4690326	FunctionDef	bochs_debug_break (void * u)		4690325	0					
ANR	4690327	CompoundStatement		266:39:7229:7322	4690325	0					
ANR	4690328	ExpressionStatement	"eprintf ( ""bochs_debug_break: Sending break...\\n"" )"	267:1:7232:7280	4690325	0	True				
ANR	4690329	CallExpression	"eprintf ( ""bochs_debug_break: Sending break...\\n"" )"		4690325	0					
ANR	4690330	Callee	eprintf		4690325	0					
ANR	4690331	Identifier	eprintf		4690325	0					
ANR	4690332	ArgumentList	"""bochs_debug_break: Sending break...\\n"""		4690325	1					
ANR	4690333	Argument	"""bochs_debug_break: Sending break...\\n"""		4690325	0					
ANR	4690334	PrimaryExpression	"""bochs_debug_break: Sending break...\\n"""		4690325	0					
ANR	4690335	ExpressionStatement	bochs_cmd_stop ( desc )	268:1:7283:7304	4690325	1	True				
ANR	4690336	CallExpression	bochs_cmd_stop ( desc )		4690325	0					
ANR	4690337	Callee	bochs_cmd_stop		4690325	0					
ANR	4690338	Identifier	bochs_cmd_stop		4690325	0					
ANR	4690339	ArgumentList	desc		4690325	1					
ANR	4690340	Argument	desc		4690325	0					
ANR	4690341	Identifier	desc		4690325	0					
ANR	4690342	ExpressionStatement	bBreak = true	269:1:7307:7320	4690325	2	True				
ANR	4690343	AssignmentExpression	bBreak = true		4690325	0		=			
ANR	4690344	Identifier	bBreak		4690325	0					
ANR	4690345	Identifier	true		4690325	1					
ANR	4690346	ReturnType	static void		4690325	1					
ANR	4690347	Identifier	bochs_debug_break		4690325	2					
ANR	4690348	ParameterList	void * u		4690325	3					
ANR	4690349	Parameter	void * u	266:30:7220:7226	4690325	0	True				
ANR	4690350	ParameterType	void *		4690325	0					
ANR	4690351	Identifier	u		4690325	1					
ANR	4690352	CFGEntryNode	ENTRY		4690325		True				
ANR	4690353	CFGExitNode	EXIT		4690325		True				
ANR	4690354	Symbol	u		4690325						
ANR	4690355	Symbol	true		4690325						
ANR	4690356	Symbol	desc		4690325						
ANR	4690357	Symbol	bBreak		4690325						
ANR	4690358	Function	r_debug_bochs_wait	272:0:7325:8506							
ANR	4690359	FunctionDef	"r_debug_bochs_wait (RDebug * dbg , int pid)"		4690358	0					
ANR	4690360	CompoundStatement		272:52:7377:8506	4690358	0					
ANR	4690361	IfStatement	if ( ! isBochs ( dbg ) )		4690358	0					
ANR	4690362	Condition	! isBochs ( dbg )	273:5:7384:7397	4690358	0	True				
ANR	4690363	UnaryOperationExpression	! isBochs ( dbg )		4690358	0					
ANR	4690364	UnaryOperator	!		4690358	0					
ANR	4690365	CallExpression	isBochs ( dbg )		4690358	1					
ANR	4690366	Callee	isBochs		4690358	0					
ANR	4690367	Identifier	isBochs		4690358	0					
ANR	4690368	ArgumentList	dbg		4690358	1					
ANR	4690369	Argument	dbg		4690358	0					
ANR	4690370	Identifier	dbg		4690358	0					
ANR	4690371	CompoundStatement		2:21:22:22	4690358	1					
ANR	4690372	ReturnStatement	return false ;	274:2:7404:7416	4690358	0	True				
ANR	4690373	Identifier	false		4690358	0					
ANR	4690374	IdentifierDeclStatement	char strIP [ 19 ] ;	276:1:7422:7436	4690358	1	True				
ANR	4690375	IdentifierDecl	strIP [ 19 ]		4690358	0					
ANR	4690376	IdentifierDeclType	char [ 19 ]		4690358	0					
ANR	4690377	Identifier	strIP		4690358	1					
ANR	4690378	PrimaryExpression	19		4690358	2					
ANR	4690379	IdentifierDeclStatement	int i = 0 ;	277:1:7439:7448	4690358	2	True				
ANR	4690380	IdentifierDecl	i = 0		4690358	0					
ANR	4690381	IdentifierDeclType	int		4690358	0					
ANR	4690382	Identifier	i		4690358	1					
ANR	4690383	AssignmentExpression	i = 0		4690358	2		=			
ANR	4690384	Identifier	i		4690358	0					
ANR	4690385	PrimaryExpression	0		4690358	1					
ANR	4690386	IdentifierDeclStatement	const char * x ;	278:1:7451:7464	4690358	3	True				
ANR	4690387	IdentifierDecl	* x		4690358	0					
ANR	4690388	IdentifierDeclType	const char *		4690358	0					
ANR	4690389	Identifier	x		4690358	1					
ANR	4690390	IdentifierDeclStatement	"char * ini = 0 , * fin = 0 ;"	279:1:7467:7490	4690358	4	True				
ANR	4690391	IdentifierDecl	* ini = 0		4690358	0					
ANR	4690392	IdentifierDeclType	char *		4690358	0					
ANR	4690393	Identifier	ini		4690358	1					
ANR	4690394	AssignmentExpression	* ini = 0		4690358	2		=			
ANR	4690395	Identifier	ini		4690358	0					
ANR	4690396	PrimaryExpression	0		4690358	1					
ANR	4690397	IdentifierDecl	* fin = 0		4690358	1					
ANR	4690398	IdentifierDeclType	char *		4690358	0					
ANR	4690399	Identifier	fin		4690358	1					
ANR	4690400	AssignmentExpression	* fin = 0		4690358	2		=			
ANR	4690401	Identifier	fin		4690358	0					
ANR	4690402	PrimaryExpression	0		4690358	1					
ANR	4690403	IfStatement	if ( bStep )		4690358	5					
ANR	4690404	Condition	bStep	283:5:7529:7533	4690358	0	True				
ANR	4690405	Identifier	bStep		4690358	0					
ANR	4690406	CompoundStatement		12:12:158:158	4690358	1					
ANR	4690407	ExpressionStatement	bStep = false	284:2:7540:7553	4690358	0	True				
ANR	4690408	AssignmentExpression	bStep = false		4690358	0		=			
ANR	4690409	Identifier	bStep		4690358	0					
ANR	4690410	Identifier	false		4690358	1					
ANR	4690411	ElseStatement	else		4690358	0					
ANR	4690412	CompoundStatement		14:8:185:185	4690358	0					
ANR	4690413	ExpressionStatement	"r_cons_break_push ( bochs_debug_break , dbg )"	286:2:7567:7609	4690358	0	True				
ANR	4690414	CallExpression	"r_cons_break_push ( bochs_debug_break , dbg )"		4690358	0					
ANR	4690415	Callee	r_cons_break_push		4690358	0					
ANR	4690416	Identifier	r_cons_break_push		4690358	0					
ANR	4690417	ArgumentList	bochs_debug_break		4690358	1					
ANR	4690418	Argument	bochs_debug_break		4690358	0					
ANR	4690419	Identifier	bochs_debug_break		4690358	0					
ANR	4690420	Argument	dbg		4690358	1					
ANR	4690421	Identifier	dbg		4690358	0					
ANR	4690422	ExpressionStatement	i = 500	287:2:7613:7620	4690358	1	True				
ANR	4690423	AssignmentExpression	i = 500		4690358	0		=			
ANR	4690424	Identifier	i		4690358	0					
ANR	4690425	PrimaryExpression	500		4690358	1					
ANR	4690426	DoStatement	do		4690358	2					
ANR	4690427	CompoundStatement		17:5:249:249	4690358	0					
ANR	4690428	ExpressionStatement	bochs_wait ( desc )	289:3:7632:7649	4690358	0	True				
ANR	4690429	CallExpression	bochs_wait ( desc )		4690358	0					
ANR	4690430	Callee	bochs_wait		4690358	0					
ANR	4690431	Identifier	bochs_wait		4690358	0					
ANR	4690432	ArgumentList	desc		4690358	1					
ANR	4690433	Argument	desc		4690358	0					
ANR	4690434	Identifier	desc		4690358	0					
ANR	4690435	IfStatement	if ( bBreak )		4690358	1					
ANR	4690436	Condition	bBreak	290:7:7658:7663	4690358	0	True				
ANR	4690437	Identifier	bBreak		4690358	0					
ANR	4690438	CompoundStatement		19:15:288:288	4690358	1					
ANR	4690439	IfStatement	if ( desc -> data [ 0 ] )		4690358	0					
ANR	4690440	Condition	desc -> data [ 0 ]	291:8:7676:7688	4690358	0	True				
ANR	4690441	ArrayIndexing	desc -> data [ 0 ]		4690358	0					
ANR	4690442	PtrMemberAccess	desc -> data		4690358	0					
ANR	4690443	Identifier	desc		4690358	0					
ANR	4690444	Identifier	data		4690358	1					
ANR	4690445	PrimaryExpression	0		4690358	1					
ANR	4690446	CompoundStatement		20:23:313:313	4690358	1					
ANR	4690447	ExpressionStatement	"eprintf ( ""ctrl+c %s\\n"" , desc -> data )"	292:5:7698:7733	4690358	0	True				
ANR	4690448	CallExpression	"eprintf ( ""ctrl+c %s\\n"" , desc -> data )"		4690358	0					
ANR	4690449	Callee	eprintf		4690358	0					
ANR	4690450	Identifier	eprintf		4690358	0					
ANR	4690451	ArgumentList	"""ctrl+c %s\\n"""		4690358	1					
ANR	4690452	Argument	"""ctrl+c %s\\n"""		4690358	0					
ANR	4690453	PrimaryExpression	"""ctrl+c %s\\n"""		4690358	0					
ANR	4690454	Argument	desc -> data		4690358	1					
ANR	4690455	PtrMemberAccess	desc -> data		4690358	0					
ANR	4690456	Identifier	desc		4690358	0					
ANR	4690457	Identifier	data		4690358	1					
ANR	4690458	ExpressionStatement	bBreak = false	293:5:7740:7754	4690358	1	True				
ANR	4690459	AssignmentExpression	bBreak = false		4690358	0		=			
ANR	4690460	Identifier	bBreak		4690358	0					
ANR	4690461	Identifier	false		4690358	1					
ANR	4690462	BreakStatement	break ;	294:5:7761:7766	4690358	2	True				
ANR	4690463	ExpressionStatement	i --	296:4:7778:7781	4690358	1	True				
ANR	4690464	PostIncDecOperationExpression	i --		4690358	0					
ANR	4690465	Identifier	i		4690358	0					
ANR	4690466	IncDec	--		4690358	1					
ANR	4690467	IfStatement	if ( ! i )		4690358	2					
ANR	4690468	Condition	! i	297:8:7791:7792	4690358	0	True				
ANR	4690469	UnaryOperationExpression	! i		4690358	0					
ANR	4690470	UnaryOperator	!		4690358	0					
ANR	4690471	Identifier	i		4690358	1					
ANR	4690472	CompoundStatement		26:12:417:417	4690358	1					
ANR	4690473	ExpressionStatement	bBreak = false	298:5:7802:7816	4690358	0	True				
ANR	4690474	AssignmentExpression	bBreak = false		4690358	0		=			
ANR	4690475	Identifier	bBreak		4690358	0					
ANR	4690476	Identifier	false		4690358	1					
ANR	4690477	ExpressionStatement	"eprintf ( ""empty ctrl+c.\\n"" )"	299:5:7823:7850	4690358	1	True				
ANR	4690478	CallExpression	"eprintf ( ""empty ctrl+c.\\n"" )"		4690358	0					
ANR	4690479	Callee	eprintf		4690358	0					
ANR	4690480	Identifier	eprintf		4690358	0					
ANR	4690481	ArgumentList	"""empty ctrl+c.\\n"""		4690358	1					
ANR	4690482	Argument	"""empty ctrl+c.\\n"""		4690358	0					
ANR	4690483	PrimaryExpression	"""empty ctrl+c.\\n"""		4690358	0					
ANR	4690484	BreakStatement	break ;	300:5:7857:7862	4690358	2	True				
ANR	4690485	ElseStatement	else		4690358	0					
ANR	4690486	IfStatement	if ( desc -> data [ 0 ] )		4690358	0					
ANR	4690487	Condition	desc -> data [ 0 ]	302:14:7884:7896	4690358	0	True				
ANR	4690488	ArrayIndexing	desc -> data [ 0 ]		4690358	0					
ANR	4690489	PtrMemberAccess	desc -> data		4690358	0					
ANR	4690490	Identifier	desc		4690358	0					
ANR	4690491	Identifier	data		4690358	1					
ANR	4690492	PrimaryExpression	0		4690358	1					
ANR	4690493	CompoundStatement		31:29:521:521	4690358	1					
ANR	4690494	BreakStatement	break ;	304:4:7957:7962	4690358	0	True				
ANR	4690495	Condition	1	306:10:7979:7979	4690358	1	True				
ANR	4690496	PrimaryExpression	1		4690358	0					
ANR	4690497	ExpressionStatement	r_cons_break_pop ( )	307:2:7985:8004	4690358	3	True				
ANR	4690498	CallExpression	r_cons_break_pop ( )		4690358	0					
ANR	4690499	Callee	r_cons_break_pop		4690358	0					
ANR	4690500	Identifier	r_cons_break_pop		4690358	0					
ANR	4690501	ArgumentList			4690358	1					
ANR	4690502	ExpressionStatement	ripStop = 0	312:1:8167:8178	4690358	6	True				
ANR	4690503	AssignmentExpression	ripStop = 0		4690358	0		=			
ANR	4690504	Identifier	ripStop		4690358	0					
ANR	4690505	PrimaryExpression	0		4690358	1					
ANR	4690506	IfStatement	"if ( ( x = strstr ( desc -> data , ""Next at"" ) ) )"		4690358	7					
ANR	4690507	Condition	"x = strstr ( desc -> data , ""Next at"" )"	313:5:8185:8220	4690358	0	True				
ANR	4690508	AssignmentExpression	"x = strstr ( desc -> data , ""Next at"" )"		4690358	0		=			
ANR	4690509	Identifier	x		4690358	0					
ANR	4690510	CallExpression	"strstr ( desc -> data , ""Next at"" )"		4690358	1					
ANR	4690511	Callee	strstr		4690358	0					
ANR	4690512	Identifier	strstr		4690358	0					
ANR	4690513	ArgumentList	desc -> data		4690358	1					
ANR	4690514	Argument	desc -> data		4690358	0					
ANR	4690515	PtrMemberAccess	desc -> data		4690358	0					
ANR	4690516	Identifier	desc		4690358	0					
ANR	4690517	Identifier	data		4690358	1					
ANR	4690518	Argument	"""Next at"""		4690358	1					
ANR	4690519	PrimaryExpression	"""Next at"""		4690358	0					
ANR	4690520	CompoundStatement		42:43:845:845	4690358	1					
ANR	4690521	IfStatement	"if ( ( ini = strstr ( x , ""[0x"" ) ) )"		4690358	0					
ANR	4690522	Condition	"ini = strstr ( x , ""[0x"" )"	314:6:8231:8255	4690358	0	True				
ANR	4690523	AssignmentExpression	"ini = strstr ( x , ""[0x"" )"		4690358	0		=			
ANR	4690524	Identifier	ini		4690358	0					
ANR	4690525	CallExpression	"strstr ( x , ""[0x"" )"		4690358	1					
ANR	4690526	Callee	strstr		4690358	0					
ANR	4690527	Identifier	strstr		4690358	0					
ANR	4690528	ArgumentList	x		4690358	1					
ANR	4690529	Argument	x		4690358	0					
ANR	4690530	Identifier	x		4690358	0					
ANR	4690531	Argument	"""[0x"""		4690358	1					
ANR	4690532	PrimaryExpression	"""[0x"""		4690358	0					
ANR	4690533	CompoundStatement		43:33:880:880	4690358	1					
ANR	4690534	IfStatement	"if ( ( fin = strstr ( ini , ""]"" ) ) )"		4690358	0					
ANR	4690535	Condition	"fin = strstr ( ini , ""]"" )"	315:7:8267:8290	4690358	0	True				
ANR	4690536	AssignmentExpression	"fin = strstr ( ini , ""]"" )"		4690358	0		=			
ANR	4690537	Identifier	fin		4690358	0					
ANR	4690538	CallExpression	"strstr ( ini , ""]"" )"		4690358	1					
ANR	4690539	Callee	strstr		4690358	0					
ANR	4690540	Identifier	strstr		4690358	0					
ANR	4690541	ArgumentList	ini		4690358	1					
ANR	4690542	Argument	ini		4690358	0					
ANR	4690543	Identifier	ini		4690358	0					
ANR	4690544	Argument	"""]"""		4690358	1					
ANR	4690545	PrimaryExpression	"""]"""		4690358	0					
ANR	4690546	CompoundStatement		45:4:921:944	4690358	1					
ANR	4690547	IdentifierDeclStatement	int len = fin - ini - 1 ;	316:4:8299:8322	4690358	0	True				
ANR	4690548	IdentifierDecl	len = fin - ini - 1		4690358	0					
ANR	4690549	IdentifierDeclType	int		4690358	0					
ANR	4690550	Identifier	len		4690358	1					
ANR	4690551	AssignmentExpression	len = fin - ini - 1		4690358	2		=			
ANR	4690552	Identifier	len		4690358	0					
ANR	4690553	AdditiveExpression	fin - ini - 1		4690358	1		-			
ANR	4690554	Identifier	fin		4690358	0					
ANR	4690555	AdditiveExpression	ini - 1		4690358	1		-			
ANR	4690556	Identifier	ini		4690358	0					
ANR	4690557	PrimaryExpression	1		4690358	1					
ANR	4690558	ExpressionStatement	"strncpy ( strIP , ini + 1 , len )"	317:4:8328:8355	4690358	1	True				
ANR	4690559	CallExpression	"strncpy ( strIP , ini + 1 , len )"		4690358	0					
ANR	4690560	Callee	strncpy		4690358	0					
ANR	4690561	Identifier	strncpy		4690358	0					
ANR	4690562	ArgumentList	strIP		4690358	1					
ANR	4690563	Argument	strIP		4690358	0					
ANR	4690564	Identifier	strIP		4690358	0					
ANR	4690565	Argument	ini + 1		4690358	1					
ANR	4690566	AdditiveExpression	ini + 1		4690358	0		+			
ANR	4690567	Identifier	ini		4690358	0					
ANR	4690568	PrimaryExpression	1		4690358	1					
ANR	4690569	Argument	len		4690358	2					
ANR	4690570	Identifier	len		4690358	0					
ANR	4690571	ExpressionStatement	strIP [ len ] = 0	318:4:8361:8375	4690358	2	True				
ANR	4690572	AssignmentExpression	strIP [ len ] = 0		4690358	0		=			
ANR	4690573	ArrayIndexing	strIP [ len ]		4690358	0					
ANR	4690574	Identifier	strIP		4690358	0					
ANR	4690575	Identifier	len		4690358	1					
ANR	4690576	PrimaryExpression	0		4690358	1					
ANR	4690577	ExpressionStatement	"ripStop = r_num_get ( NULL , strIP )"	320:4:8424:8457	4690358	3	True				
ANR	4690578	AssignmentExpression	"ripStop = r_num_get ( NULL , strIP )"		4690358	0		=			
ANR	4690579	Identifier	ripStop		4690358	0					
ANR	4690580	CallExpression	"r_num_get ( NULL , strIP )"		4690358	1					
ANR	4690581	Callee	r_num_get		4690358	0					
ANR	4690582	Identifier	r_num_get		4690358	0					
ANR	4690583	ArgumentList	NULL		4690358	1					
ANR	4690584	Argument	NULL		4690358	0					
ANR	4690585	Identifier	NULL		4690358	0					
ANR	4690586	Argument	strIP		4690358	1					
ANR	4690587	Identifier	strIP		4690358	0					
ANR	4690588	ExpressionStatement	desc -> data [ 0 ] = 0	324:1:8472:8489	4690358	8	True				
ANR	4690589	AssignmentExpression	desc -> data [ 0 ] = 0		4690358	0		=			
ANR	4690590	ArrayIndexing	desc -> data [ 0 ]		4690358	0					
ANR	4690591	PtrMemberAccess	desc -> data		4690358	0					
ANR	4690592	Identifier	desc		4690358	0					
ANR	4690593	Identifier	data		4690358	1					
ANR	4690594	PrimaryExpression	0		4690358	1					
ANR	4690595	PrimaryExpression	0		4690358	1					
ANR	4690596	ReturnStatement	return true ;	326:1:8493:8504	4690358	9	True				
ANR	4690597	Identifier	true		4690358	0					
ANR	4690598	ReturnType	static int		4690358	1					
ANR	4690599	Identifier	r_debug_bochs_wait		4690358	2					
ANR	4690600	ParameterList	"RDebug * dbg , int pid"		4690358	3					
ANR	4690601	Parameter	RDebug * dbg	272:30:7355:7365	4690358	0	True				
ANR	4690602	ParameterType	RDebug *		4690358	0					
ANR	4690603	Identifier	dbg		4690358	1					
ANR	4690604	Parameter	int pid	272:43:7368:7374	4690358	1	True				
ANR	4690605	ParameterType	int		4690358	0					
ANR	4690606	Identifier	pid		4690358	1					
ANR	4690607	CFGEntryNode	ENTRY		4690358		True				
ANR	4690608	CFGExitNode	EXIT		4690358		True				
ANR	4690609	Symbol	bStep		4690358						
ANR	4690610	Symbol	* strIP		4690358						
ANR	4690611	Symbol	pid		4690358						
ANR	4690612	Symbol	fin		4690358						
ANR	4690613	Symbol	strIP		4690358						
ANR	4690614	Symbol	bochs_debug_break		4690358						
ANR	4690615	Symbol	* desc -> data		4690358						
ANR	4690616	Symbol	len		4690358						
ANR	4690617	Symbol	desc -> data		4690358						
ANR	4690618	Symbol	* desc		4690358						
ANR	4690619	Symbol	r_num_get		4690358						
ANR	4690620	Symbol	NULL		4690358						
ANR	4690621	Symbol	ini		4690358						
ANR	4690622	Symbol	dbg		4690358						
ANR	4690623	Symbol	false		4690358						
ANR	4690624	Symbol	i		4690358						
ANR	4690625	Symbol	* * desc		4690358						
ANR	4690626	Symbol	bBreak		4690358						
ANR	4690627	Symbol	strstr		4690358						
ANR	4690628	Symbol	isBochs		4690358						
ANR	4690629	Symbol	x		4690358						
ANR	4690630	Symbol	true		4690358						
ANR	4690631	Symbol	ripStop		4690358						
ANR	4690632	Symbol	desc		4690358						
ANR	4690633	Symbol	* len		4690358						
ANR	4690634	Function	r_debug_bochs_stop	329:0:8509:8688							
ANR	4690635	FunctionDef	r_debug_bochs_stop (RDebug * dbg)		4690634	0					
ANR	4690636	CompoundStatement		329:43:8552:8688	4690634	0					
ANR	4690637	ReturnStatement	return true ;	334:1:8675:8686	4690634	0	True				
ANR	4690638	Identifier	true		4690634	0					
ANR	4690639	ReturnType	static int		4690634	1					
ANR	4690640	Identifier	r_debug_bochs_stop		4690634	2					
ANR	4690641	ParameterList	RDebug * dbg		4690634	3					
ANR	4690642	Parameter	RDebug * dbg	329:30:8539:8549	4690634	0	True				
ANR	4690643	ParameterType	RDebug *		4690634	0					
ANR	4690644	Identifier	dbg		4690634	1					
ANR	4690645	CFGEntryNode	ENTRY		4690634		True				
ANR	4690646	CFGExitNode	EXIT		4690634		True				
ANR	4690647	Symbol	dbg		4690634						
ANR	4690648	Symbol	true		4690634						
ANR	4690649	Function	r_debug_bochs_attach	337:0:8691:9218							
ANR	4690650	FunctionDef	"r_debug_bochs_attach (RDebug * dbg , int pid)"		4690649	0					
ANR	4690651	CompoundStatement		337:54:8745:9218	4690649	0					
ANR	4690652	IdentifierDeclStatement	RIODesc * d = dbg -> iob . io -> desc ;	338:1:8748:8778	4690649	0	True				
ANR	4690653	IdentifierDecl	* d = dbg -> iob . io -> desc		4690649	0					
ANR	4690654	IdentifierDeclType	RIODesc *		4690649	0					
ANR	4690655	Identifier	d		4690649	1					
ANR	4690656	AssignmentExpression	* d = dbg -> iob . io -> desc		4690649	2		=			
ANR	4690657	Identifier	d		4690649	0					
ANR	4690658	PtrMemberAccess	dbg -> iob . io -> desc		4690649	1					
ANR	4690659	MemberAccess	dbg -> iob . io		4690649	0					
ANR	4690660	PtrMemberAccess	dbg -> iob		4690649	0					
ANR	4690661	Identifier	dbg		4690649	0					
ANR	4690662	Identifier	iob		4690649	1					
ANR	4690663	Identifier	io		4690649	1					
ANR	4690664	Identifier	desc		4690649	1					
ANR	4690665	ExpressionStatement	dbg -> swstep = false	340:1:8813:8832	4690649	1	True				
ANR	4690666	AssignmentExpression	dbg -> swstep = false		4690649	0		=			
ANR	4690667	PtrMemberAccess	dbg -> swstep		4690649	0					
ANR	4690668	Identifier	dbg		4690649	0					
ANR	4690669	Identifier	swstep		4690649	1					
ANR	4690670	Identifier	false		4690649	1					
ANR	4690671	IfStatement	if ( d && d -> plugin && d -> plugin -> name && d -> data )		4690649	2					
ANR	4690672	Condition	d && d -> plugin && d -> plugin -> name && d -> data	341:5:8839:8882	4690649	0	True				
ANR	4690673	AndExpression	d && d -> plugin && d -> plugin -> name && d -> data		4690649	0		&&			
ANR	4690674	Identifier	d		4690649	0					
ANR	4690675	AndExpression	d -> plugin && d -> plugin -> name && d -> data		4690649	1		&&			
ANR	4690676	PtrMemberAccess	d -> plugin		4690649	0					
ANR	4690677	Identifier	d		4690649	0					
ANR	4690678	Identifier	plugin		4690649	1					
ANR	4690679	AndExpression	d -> plugin -> name && d -> data		4690649	1		&&			
ANR	4690680	PtrMemberAccess	d -> plugin -> name		4690649	0					
ANR	4690681	PtrMemberAccess	d -> plugin		4690649	0					
ANR	4690682	Identifier	d		4690649	0					
ANR	4690683	Identifier	plugin		4690649	1					
ANR	4690684	Identifier	name		4690649	1					
ANR	4690685	PtrMemberAccess	d -> data		4690649	1					
ANR	4690686	Identifier	d		4690649	0					
ANR	4690687	Identifier	data		4690649	1					
ANR	4690688	CompoundStatement		5:51:139:139	4690649	1					
ANR	4690689	IfStatement	"if ( ! strcmp ( ""bochs"" , d -> plugin -> name ) )"		4690649	0					
ANR	4690690	Condition	"! strcmp ( ""bochs"" , d -> plugin -> name )"	342:6:8893:8926	4690649	0	True				
ANR	4690691	UnaryOperationExpression	"! strcmp ( ""bochs"" , d -> plugin -> name )"		4690649	0					
ANR	4690692	UnaryOperator	!		4690649	0					
ANR	4690693	CallExpression	"strcmp ( ""bochs"" , d -> plugin -> name )"		4690649	1					
ANR	4690694	Callee	strcmp		4690649	0					
ANR	4690695	Identifier	strcmp		4690649	0					
ANR	4690696	ArgumentList	"""bochs"""		4690649	1					
ANR	4690697	Argument	"""bochs"""		4690649	0					
ANR	4690698	PrimaryExpression	"""bochs"""		4690649	0					
ANR	4690699	Argument	d -> plugin -> name		4690649	1					
ANR	4690700	PtrMemberAccess	d -> plugin -> name		4690649	0					
ANR	4690701	PtrMemberAccess	d -> plugin		4690649	0					
ANR	4690702	Identifier	d		4690649	0					
ANR	4690703	Identifier	plugin		4690649	1					
ANR	4690704	Identifier	name		4690649	1					
ANR	4690705	CompoundStatement		7:3:188:209	4690649	1					
ANR	4690706	IdentifierDeclStatement	RIOBochs * g = d -> data ;	343:3:8934:8955	4690649	0	True				
ANR	4690707	IdentifierDecl	* g = d -> data		4690649	0					
ANR	4690708	IdentifierDeclType	RIOBochs *		4690649	0					
ANR	4690709	Identifier	g		4690649	1					
ANR	4690710	AssignmentExpression	* g = d -> data		4690649	2		=			
ANR	4690711	Identifier	g		4690649	0					
ANR	4690712	PtrMemberAccess	d -> data		4690649	1					
ANR	4690713	Identifier	d		4690649	0					
ANR	4690714	Identifier	data		4690649	1					
ANR	4690715	IfStatement	if ( ( desc = & g -> desc ) )		4690649	1					
ANR	4690716	Condition	desc = & g -> desc	346:7:9041:9059	4690649	0	True				
ANR	4690717	AssignmentExpression	desc = & g -> desc		4690649	0		=			
ANR	4690718	Identifier	desc		4690649	0					
ANR	4690719	UnaryOperationExpression	& g -> desc		4690649	1					
ANR	4690720	UnaryOperator	&		4690649	0					
ANR	4690721	PtrMemberAccess	g -> desc		4690649	1					
ANR	4690722	Identifier	g		4690649	0					
ANR	4690723	Identifier	desc		4690649	1					
ANR	4690724	CompoundStatement		10:28:316:316	4690649	1					
ANR	4690725	ExpressionStatement	"eprintf ( ""bochs attach: ok\\n"" )"	347:4:9068:9097	4690649	0	True				
ANR	4690726	CallExpression	"eprintf ( ""bochs attach: ok\\n"" )"		4690649	0					
ANR	4690727	Callee	eprintf		4690649	0					
ANR	4690728	Identifier	eprintf		4690649	0					
ANR	4690729	ArgumentList	"""bochs attach: ok\\n"""		4690649	1					
ANR	4690730	Argument	"""bochs attach: ok\\n"""		4690649	0					
ANR	4690731	PrimaryExpression	"""bochs attach: ok\\n"""		4690649	0					
ANR	4690732	ExpressionStatement	saveRegs = malloc ( 1024 )	348:4:9103:9126	4690649	1	True				
ANR	4690733	AssignmentExpression	saveRegs = malloc ( 1024 )		4690649	0		=			
ANR	4690734	Identifier	saveRegs		4690649	0					
ANR	4690735	CallExpression	malloc ( 1024 )		4690649	1					
ANR	4690736	Callee	malloc		4690649	0					
ANR	4690737	Identifier	malloc		4690649	0					
ANR	4690738	ArgumentList	1024		4690649	1					
ANR	4690739	Argument	1024		4690649	0					
ANR	4690740	PrimaryExpression	1024		4690649	0					
ANR	4690741	ExpressionStatement	bCapturaRegs = true	349:4:9132:9151	4690649	2	True				
ANR	4690742	AssignmentExpression	bCapturaRegs = true		4690649	0		=			
ANR	4690743	Identifier	bCapturaRegs		4690649	0					
ANR	4690744	Identifier	true		4690649	1					
ANR	4690745	ExpressionStatement	bStep = false	350:4:9157:9170	4690649	3	True				
ANR	4690746	AssignmentExpression	bStep = false		4690649	0		=			
ANR	4690747	Identifier	bStep		4690649	0					
ANR	4690748	Identifier	false		4690649	1					
ANR	4690749	ExpressionStatement	bBreak = false	351:4:9176:9190	4690649	4	True				
ANR	4690750	AssignmentExpression	bBreak = false		4690649	0		=			
ANR	4690751	Identifier	bBreak		4690649	0					
ANR	4690752	Identifier	false		4690649	1					
ANR	4690753	ReturnStatement	return true ;	355:1:9205:9216	4690649	3	True				
ANR	4690754	Identifier	true		4690649	0					
ANR	4690755	ReturnType	static int		4690649	1					
ANR	4690756	Identifier	r_debug_bochs_attach		4690649	2					
ANR	4690757	ParameterList	"RDebug * dbg , int pid"		4690649	3					
ANR	4690758	Parameter	RDebug * dbg	337:32:8723:8733	4690649	0	True				
ANR	4690759	ParameterType	RDebug *		4690649	0					
ANR	4690760	Identifier	dbg		4690649	1					
ANR	4690761	Parameter	int pid	337:45:8736:8742	4690649	1	True				
ANR	4690762	ParameterType	int		4690649	0					
ANR	4690763	Identifier	pid		4690649	1					
ANR	4690764	CFGEntryNode	ENTRY		4690649		True				
ANR	4690765	CFGExitNode	EXIT		4690649		True				
ANR	4690766	Symbol	dbg -> iob . io		4690649						
ANR	4690767	Symbol	bStep		4690649						
ANR	4690768	Symbol	* d -> plugin		4690649						
ANR	4690769	Symbol	saveRegs		4690649						
ANR	4690770	Symbol	pid		4690649						
ANR	4690771	Symbol	d -> plugin -> name		4690649						
ANR	4690772	Symbol	dbg -> iob . io -> desc		4690649						
ANR	4690773	Symbol	bCapturaRegs		4690649						
ANR	4690774	Symbol	* dbg -> iob		4690649						
ANR	4690775	Symbol	strcmp		4690649						
ANR	4690776	Symbol	malloc		4690649						
ANR	4690777	Symbol	dbg -> iob		4690649						
ANR	4690778	Symbol	d		4690649						
ANR	4690779	Symbol	d -> plugin		4690649						
ANR	4690780	Symbol	* * d		4690649						
ANR	4690781	Symbol	g		4690649						
ANR	4690782	Symbol	dbg		4690649						
ANR	4690783	Symbol	false		4690649						
ANR	4690784	Symbol	& g -> desc		4690649						
ANR	4690785	Symbol	d -> data		4690649						
ANR	4690786	Symbol	* dbg		4690649						
ANR	4690787	Symbol	* dbg -> iob . io		4690649						
ANR	4690788	Symbol	* d		4690649						
ANR	4690789	Symbol	bBreak		4690649						
ANR	4690790	Symbol	dbg -> swstep		4690649						
ANR	4690791	Symbol	true		4690649						
ANR	4690792	Symbol	* * dbg		4690649						
ANR	4690793	Symbol	desc		4690649						
ANR	4690794	Function	r_debug_bochs_detach	358:0:9221:9341							
ANR	4690795	FunctionDef	"r_debug_bochs_detach (RDebug * dbg , int pid)"		4690794	0					
ANR	4690796	CompoundStatement		358:54:9275:9341	4690794	0					
ANR	4690797	ExpressionStatement	free ( saveRegs )	360:1:9310:9325	4690794	0	True				
ANR	4690798	CallExpression	free ( saveRegs )		4690794	0					
ANR	4690799	Callee	free		4690794	0					
ANR	4690800	Identifier	free		4690794	0					
ANR	4690801	ArgumentList	saveRegs		4690794	1					
ANR	4690802	Argument	saveRegs		4690794	0					
ANR	4690803	Identifier	saveRegs		4690794	0					
ANR	4690804	ReturnStatement	return true ;	361:1:9328:9339	4690794	1	True				
ANR	4690805	Identifier	true		4690794	0					
ANR	4690806	ReturnType	static int		4690794	1					
ANR	4690807	Identifier	r_debug_bochs_detach		4690794	2					
ANR	4690808	ParameterList	"RDebug * dbg , int pid"		4690794	3					
ANR	4690809	Parameter	RDebug * dbg	358:32:9253:9263	4690794	0	True				
ANR	4690810	ParameterType	RDebug *		4690794	0					
ANR	4690811	Identifier	dbg		4690794	1					
ANR	4690812	Parameter	int pid	358:45:9266:9272	4690794	1	True				
ANR	4690813	ParameterType	int		4690794	0					
ANR	4690814	Identifier	pid		4690794	1					
ANR	4690815	CFGEntryNode	ENTRY		4690794		True				
ANR	4690816	CFGExitNode	EXIT		4690794		True				
ANR	4690817	Symbol	dbg		4690794						
ANR	4690818	Symbol	true		4690794						
ANR	4690819	Symbol	saveRegs		4690794						
ANR	4690820	Symbol	pid		4690794						
ANR	4690821	Function	r_debug_bochs_reg_profile	364:0:9344:14047							
ANR	4690822	FunctionDef	r_debug_bochs_reg_profile (RDebug * dbg)		4690821	0					
ANR	4690823	CompoundStatement		364:58:9402:14047	4690821	0					
ANR	4690824	IdentifierDeclStatement	int bits = dbg -> anal -> bits ;	365:1:9405:9431	4690821	0	True				
ANR	4690825	IdentifierDecl	bits = dbg -> anal -> bits		4690821	0					
ANR	4690826	IdentifierDeclType	int		4690821	0					
ANR	4690827	Identifier	bits		4690821	1					
ANR	4690828	AssignmentExpression	bits = dbg -> anal -> bits		4690821	2		=			
ANR	4690829	Identifier	bits		4690821	0					
ANR	4690830	PtrMemberAccess	dbg -> anal -> bits		4690821	1					
ANR	4690831	PtrMemberAccess	dbg -> anal		4690821	0					
ANR	4690832	Identifier	dbg		4690821	0					
ANR	4690833	Identifier	anal		4690821	1					
ANR	4690834	Identifier	bits		4690821	1					
ANR	4690835	IfStatement	if ( bits == 16 || bits == 32 || bits == 64 )		4690821	1					
ANR	4690836	Condition	bits == 16 || bits == 32 || bits == 64	367:5:9439:9476	4690821	0	True				
ANR	4690837	OrExpression	bits == 16 || bits == 32 || bits == 64		4690821	0		||			
ANR	4690838	EqualityExpression	bits == 16		4690821	0		==			
ANR	4690839	Identifier	bits		4690821	0					
ANR	4690840	PrimaryExpression	16		4690821	1					
ANR	4690841	OrExpression	bits == 32 || bits == 64		4690821	1		||			
ANR	4690842	EqualityExpression	bits == 32		4690821	0		==			
ANR	4690843	Identifier	bits		4690821	0					
ANR	4690844	PrimaryExpression	32		4690821	1					
ANR	4690845	EqualityExpression	bits == 64		4690821	1		==			
ANR	4690846	Identifier	bits		4690821	0					
ANR	4690847	PrimaryExpression	64		4690821	1					
ANR	4690848	CompoundStatement		4:45:76:76	4690821	1					
ANR	4690849	Statement	return	368:2:9483:9488	4690821	0	True				
ANR	4690850	Statement	strdup	368:9:9490:9495	4690821	1	True				
ANR	4690851	Statement	(	368:16:9497:9497	4690821	2	True				
ANR	4690852	Statement	"""=PC\\tcsip\\n"""	369:4:9503:9514	4690821	3	True				
ANR	4690853	Statement	"""=SP\\trsp\\n"""	370:4:9520:9530	4690821	4	True				
ANR	4690854	Statement	"""=BP\\trbp\\n"""	371:4:9536:9546	4690821	5	True				
ANR	4690855	Statement	"""=A0\\trax\\n"""	372:4:9552:9562	4690821	6	True				
ANR	4690856	Statement	"""=A1\\trbx\\n"""	373:4:9568:9578	4690821	7	True				
ANR	4690857	Statement	"""=A2\\trcx\\n"""	374:4:9584:9594	4690821	8	True				
ANR	4690858	Statement	"""=A3\\trdi\\n"""	375:4:9600:9610	4690821	9	True				
ANR	4690859	Statement	"""seg\\tes\\t2\\t0x038\\t0\\t\\n"""	377:4:9617:9637	4690821	10	True				
ANR	4690860	Statement	"""seg\\tcs\\t2\\t0x03A\\t0\\t\\n"""	378:4:9643:9663	4690821	11	True				
ANR	4690861	Statement	"""seg\\tss\\t2\\t0x03C\\t0\\t\\n"""	379:4:9669:9689	4690821	12	True				
ANR	4690862	Statement	"""seg\\tds\\t2\\t0x03E\\t0\\t\\n"""	380:4:9695:9715	4690821	13	True				
ANR	4690863	Statement	"""seg\\tfs\\t2\\t0x040\\t0\\t\\n"""	381:4:9721:9741	4690821	14	True				
ANR	4690864	Statement	"""seg\\tgs\\t2\\t0x042\\t0\\t\\n"""	382:4:9747:9767	4690821	15	True				
ANR	4690865	Statement	"""gpr\\trax\\t8\\t0x078\\t0\\t\\n"""	384:4:9774:9795	4690821	16	True				
ANR	4690866	Statement	"""gpr\\teax\\t4\\t0x078\\t0\\t\\n"""	385:4:9801:9822	4690821	17	True				
ANR	4690867	Statement	"""gpr\\tax\\t2\\t0x078\\t0\\t\\n"""	386:4:9828:9848	4690821	18	True				
ANR	4690868	Statement	"""gpr\\tal\\t1\\t0x078\\t0\\t\\n"""	387:4:9854:9874	4690821	19	True				
ANR	4690869	Statement	"""gpr\\trcx\\t8\\t0x080\\t0\\t\\n"""	388:4:9880:9901	4690821	20	True				
ANR	4690870	Statement	"""gpr\\tecx\\t4\\t0x080\\t0\\t\\n"""	389:4:9907:9928	4690821	21	True				
ANR	4690871	Statement	"""gpr\\tcx\\t2\\t0x080\\t0\\t\\n"""	390:4:9934:9954	4690821	22	True				
ANR	4690872	Statement	"""gpr\\tcl\\t1\\t0x078\\t0\\t\\n"""	391:4:9960:9980	4690821	23	True				
ANR	4690873	Statement	"""gpr\\trdx\\t8\\t0x088\\t0\\t\\n"""	392:4:9986:10007	4690821	24	True				
ANR	4690874	Statement	"""gpr\\tedx\\t4\\t0x088\\t0\\t\\n"""	393:4:10013:10034	4690821	25	True				
ANR	4690875	Statement	"""gpr\\tdx\\t2\\t0x088\\t0\\t\\n"""	394:4:10040:10060	4690821	26	True				
ANR	4690876	Statement	"""gpr\\tdl\\t1\\t0x088\\t0\\t\\n"""	395:4:10066:10086	4690821	27	True				
ANR	4690877	Statement	"""gpr\\trbx\\t8\\t0x090\\t0\\t\\n"""	396:4:10092:10113	4690821	28	True				
ANR	4690878	Statement	"""gpr\\tebx\\t4\\t0x090\\t0\\t\\n"""	397:4:10119:10140	4690821	29	True				
ANR	4690879	Statement	"""gpr\\tbx\\t2\\t0x090\\t0\\t\\n"""	398:4:10146:10166	4690821	30	True				
ANR	4690880	Statement	"""gpr\\tbl\\t1\\t0x090\\t0\\t\\n"""	399:4:10172:10192	4690821	31	True				
ANR	4690881	Statement	"""gpr\\trsp\\t8\\t0x098\\t0\\t\\n"""	400:4:10198:10219	4690821	32	True				
ANR	4690882	Statement	"""gpr\\tesp\\t4\\t0x098\\t0\\t\\n"""	401:4:10225:10246	4690821	33	True				
ANR	4690883	Statement	"""gpr\\tsp\\t2\\t0x098\\t0\\t\\n"""	402:4:10252:10272	4690821	34	True				
ANR	4690884	Statement	"""gpr\\tspl\\t1\\t0x098\\t0\\t\\n"""	403:4:10278:10299	4690821	35	True				
ANR	4690885	Statement	"""gpr\\trbp\\t8\\t0x0A0\\t0\\t\\n"""	404:4:10305:10326	4690821	36	True				
ANR	4690886	Statement	"""gpr\\tebp\\t4\\t0x0A0\\t0\\t\\n"""	405:4:10332:10353	4690821	37	True				
ANR	4690887	Statement	"""gpr\\tbp\\t2\\t0x0A0\\t0\\t\\n"""	406:4:10359:10379	4690821	38	True				
ANR	4690888	Statement	"""gpr\\tbpl\\t1\\t0x0A0\\t0\\t\\n"""	407:4:10385:10406	4690821	39	True				
ANR	4690889	Statement	"""gpr\\trsi\\t8\\t0x0A8\\t0\\t\\n"""	408:4:10412:10433	4690821	40	True				
ANR	4690890	Statement	"""gpr\\tesi\\t4\\t0x0A8\\t0\\t\\n"""	409:4:10439:10460	4690821	41	True				
ANR	4690891	Statement	"""gpr\\tsi\\t2\\t0x0A8\\t0\\t\\n"""	410:4:10466:10486	4690821	42	True				
ANR	4690892	Statement	"""gpr\\tsil\\t1\\t0x0A8\\t0\\t\\n"""	411:4:10492:10513	4690821	43	True				
ANR	4690893	Statement	"""gpr\\trdi\\t8\\t0x0B0\\t0\\t\\n"""	412:4:10519:10540	4690821	44	True				
ANR	4690894	Statement	"""gpr\\tedi\\t4\\t0x0B0\\t0\\t\\n"""	413:4:10546:10567	4690821	45	True				
ANR	4690895	Statement	"""gpr\\tdi\\t2\\t0x0B0\\t0\\t\\n"""	414:4:10573:10593	4690821	46	True				
ANR	4690896	Statement	"""gpr\\tdil\\t1\\t0x0B0\\t0\\t\\n"""	415:4:10599:10620	4690821	47	True				
ANR	4690897	Statement	"""gpr\\tr8\\t8\\t0x0B8\\t0\\t\\n"""	416:4:10626:10646	4690821	48	True				
ANR	4690898	Statement	"""gpr\\tr8d\\t4\\t0x0B8\\t0\\t\\n"""	417:4:10652:10673	4690821	49	True				
ANR	4690899	Statement	"""gpr\\tr8w\\t2\\t0x0B8\\t0\\t\\n"""	418:4:10679:10700	4690821	50	True				
ANR	4690900	Statement	"""gpr\\tr8b\\t1\\t0x0B8\\t0\\t\\n"""	419:4:10706:10727	4690821	51	True				
ANR	4690901	Statement	"""gpr\\tr9\\t8\\t0x0C0\\t0\\t\\n"""	420:4:10733:10753	4690821	52	True				
ANR	4690902	Statement	"""gpr\\tr9d\\t4\\t0x0C0\\t0\\t\\n"""	421:4:10759:10780	4690821	53	True				
ANR	4690903	Statement	"""gpr\\tr9w\\t2\\t0x0C0\\t0\\t\\n"""	422:4:10786:10807	4690821	54	True				
ANR	4690904	Statement	"""gpr\\tr9b\\t1\\t0x0C0\\t0\\t\\n"""	423:4:10813:10834	4690821	55	True				
ANR	4690905	Statement	"""gpr\\tr10\\t8\\t0x0C8\\t0\\t\\n"""	424:4:10840:10861	4690821	56	True				
ANR	4690906	Statement	"""gpr\\tr10d\\t4\\t0x0C8\\t0\\t\\n"""	425:4:10867:10889	4690821	57	True				
ANR	4690907	Statement	"""gpr\\tr10w\\t2\\t0x0C8\\t0\\t\\n"""	426:4:10895:10917	4690821	58	True				
ANR	4690908	Statement	"""gpr\\tr10b\\t1\\t0x0C8\\t0\\t\\n"""	427:4:10923:10945	4690821	59	True				
ANR	4690909	Statement	"""gpr\\tr11\\t8\\t0x0D0\\t0\\t\\n"""	428:4:10951:10972	4690821	60	True				
ANR	4690910	Statement	"""gpr\\tr11d\\t4\\t0x0D0\\t0\\t\\n"""	429:4:10978:11000	4690821	61	True				
ANR	4690911	Statement	"""gpr\\tr11w\\t2\\t0x0D0\\t0\\t\\n"""	430:4:11006:11028	4690821	62	True				
ANR	4690912	Statement	"""gpr\\tr11b\\t1\\t0x0D0\\t0\\t\\n"""	431:4:11034:11056	4690821	63	True				
ANR	4690913	Statement	"""gpr\\tr12\\t8\\t0x0D8\\t0\\t\\n"""	432:4:11062:11083	4690821	64	True				
ANR	4690914	Statement	"""gpr\\tr12d\\t4\\t0x0D8\\t0\\t\\n"""	433:4:11089:11111	4690821	65	True				
ANR	4690915	Statement	"""gpr\\tr12w\\t2\\t0x0D8\\t0\\t\\n"""	434:4:11117:11139	4690821	66	True				
ANR	4690916	Statement	"""gpr\\tr12b\\t1\\t0x0D8\\t0\\t\\n"""	435:4:11145:11167	4690821	67	True				
ANR	4690917	Statement	"""gpr\\tr13\\t8\\t0x0E0\\t0\\t\\n"""	436:4:11173:11194	4690821	68	True				
ANR	4690918	Statement	"""gpr\\tr13d\\t4\\t0x0E0\\t0\\t\\n"""	437:4:11200:11222	4690821	69	True				
ANR	4690919	Statement	"""gpr\\tr13w\\t2\\t0x0E0\\t0\\t\\n"""	438:4:11228:11250	4690821	70	True				
ANR	4690920	Statement	"""gpr\\tr13b\\t1\\t0x0E0\\t0\\t\\n"""	439:4:11256:11278	4690821	71	True				
ANR	4690921	Statement	"""gpr\\tr14\\t8\\t0x0E8\\t0\\t\\n"""	440:4:11284:11305	4690821	72	True				
ANR	4690922	Statement	"""gpr\\tr14d\\t4\\t0x0E8\\t0\\t\\n"""	441:4:11311:11333	4690821	73	True				
ANR	4690923	Statement	"""gpr\\tr14w\\t2\\t0x0E8\\t0\\t\\n"""	442:4:11339:11361	4690821	74	True				
ANR	4690924	Statement	"""gpr\\tr14b\\t1\\t0x0E8\\t0\\t\\n"""	443:4:11367:11389	4690821	75	True				
ANR	4690925	Statement	"""gpr\\tr15\\t8\\t0x0F0\\t0\\t\\n"""	444:4:11395:11416	4690821	76	True				
ANR	4690926	Statement	"""gpr\\tr15d\\t4\\t0x0F0\\t0\\t\\n"""	445:4:11422:11444	4690821	77	True				
ANR	4690927	Statement	"""gpr\\tr15w\\t2\\t0x0F0\\t0\\t\\n"""	446:4:11450:11472	4690821	78	True				
ANR	4690928	Statement	"""gpr\\tr15b\\t1\\t0x0F0\\t0\\t\\n"""	447:4:11478:11500	4690821	79	True				
ANR	4690929	Statement	"""gpr\\trip\\t8\\t0x0F8\\t0\\t\\n"""	448:4:11506:11527	4690821	80	True				
ANR	4690930	Statement	"""gpr\\teip\\t4\\t0x0F8\\t0\\t\\n"""	449:4:11533:11554	4690821	81	True				
ANR	4690931	Statement	"""gpr\\tcsip\\t8\\t0x000\\t0\\t\\n"""	450:4:11560:11582	4690821	82	True				
ANR	4690932	Statement	)	541:4:14027:14027	4690821	83	True				
ANR	4690933	ExpressionStatement		541:5:14028:14028	4690821	84	True				
ANR	4690934	ReturnStatement	return NULL ;	543:1:14034:14045	4690821	2	True				
ANR	4690935	Identifier	NULL		4690821	0					
ANR	4690936	ReturnType	static const char *		4690821	1					
ANR	4690937	Identifier	r_debug_bochs_reg_profile		4690821	2					
ANR	4690938	ParameterList	RDebug * dbg		4690821	3					
ANR	4690939	Parameter	RDebug * dbg	364:45:9389:9399	4690821	0	True				
ANR	4690940	ParameterType	RDebug *		4690821	0					
ANR	4690941	Identifier	dbg		4690821	1					
ANR	4690942	CFGEntryNode	ENTRY		4690821		True				
ANR	4690943	CFGExitNode	EXIT		4690821		True				
ANR	4690944	Symbol	* dbg -> anal		4690821						
ANR	4690945	Symbol	dbg -> anal -> bits		4690821						
ANR	4690946	Symbol	NULL		4690821						
ANR	4690947	Symbol	dbg -> anal		4690821						
ANR	4690948	Symbol	dbg		4690821						
ANR	4690949	Symbol	bits		4690821						
ANR	4690950	Symbol	* dbg		4690821						
ANR	4690951	Symbol	* * dbg		4690821						
ANR	4690952	DeclStmt									
ANR	4690953	Decl							RDebugPlugin	RDebugPlugin	r_debug_plugin_bochs
ANR	4690954	DeclStmt									
ANR	4690955	Decl							R_API RLibStruct	R_API RLibStruct	radare_plugin
