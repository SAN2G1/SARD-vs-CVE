command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	578233	File	data/converged/CVE-2019-16718~_radare2/bin_symbols.c								
ANR	578234	DeclStmt									
ANR	578235	Decl							bool	bool	is64
ANR	578236	DeclStmt									
ANR	578237	Decl							ut64	ut64	dwordsBeginAt
ANR	578238	DeclStmt									
ANR	578239	Decl							ut64	ut64	stringsBeginAt
ANR	578240	DeclStmt									
ANR	578241	Decl							ut64	ut64	symbolsBeginAt
ANR	578242	DeclStmt									
ANR	578243	Decl							RList	RList *	globalSymbols
ANR	578244	ClassDef	symbols_header_t	22:8:487:647							
ANR	578245	DeclStmt									
ANR	578246	Decl							ut32	ut32	magic
ANR	578247	DeclStmt									
ANR	578248	Decl							ut32	ut32	version
ANR	578249	DeclStmt									
ANR	578250	Decl							ut8	ut8 [ 16 ]	uuid
ANR	578251	DeclStmt									
ANR	578252	Decl							ut32	ut32	unk0
ANR	578253	DeclStmt									
ANR	578254	Decl							ut32	ut32	unk1
ANR	578255	DeclStmt									
ANR	578256	Decl							ut32	ut32	slotsize
ANR	578257	DeclStmt									
ANR	578258	Decl							ut32	ut32	addr
ANR	578259	DeclStmt									
ANR	578260	Decl							bool	bool	valid
ANR	578261	DeclStmt									
ANR	578262	Decl							int	int	size
ANR	578263	DeclStmt									
ANR	578264	Decl							symbols_header_t	symbols_header_t	SymbolsHeader
ANR	578265	Function	parseHeader	35:0:703:1162							
ANR	578266	FunctionDef	parseHeader (RBuffer * buf)		578265	0					
ANR	578267	CompoundStatement		35:47:750:1162	578265	0					
ANR	578268	IdentifierDeclStatement	ut8 b [ 64 ] ;	36:1:753:762	578265	0	True				
ANR	578269	IdentifierDecl	b [ 64 ]		578265	0					
ANR	578270	IdentifierDeclType	ut8 [ 64 ]		578265	0					
ANR	578271	Identifier	b		578265	1					
ANR	578272	PrimaryExpression	64		578265	2					
ANR	578273	IdentifierDeclStatement	SymbolsHeader sh = { 0 } ;	37:1:765:789	578265	1	True				
ANR	578274	IdentifierDecl	sh = { 0 }		578265	0					
ANR	578275	IdentifierDeclType	SymbolsHeader		578265	0					
ANR	578276	Identifier	sh		578265	1					
ANR	578277	AssignmentExpression	sh = { 0 }		578265	2		=			
ANR	578278	Identifier	sh		578265	0					
ANR	578279	InitializerList	0		578265	1					
ANR	578280	PrimaryExpression	0		578265	0					
ANR	578281	ExpressionStatement	"( void ) r_buf_read_at ( buf , 0 , b , sizeof ( b ) )"	38:1:792:835	578265	2	True				
ANR	578282	CastExpression	"( void ) r_buf_read_at ( buf , 0 , b , sizeof ( b ) )"		578265	0					
ANR	578283	CastTarget	void		578265	0					
ANR	578284	CallExpression	"r_buf_read_at ( buf , 0 , b , sizeof ( b ) )"		578265	1					
ANR	578285	Callee	r_buf_read_at		578265	0					
ANR	578286	Identifier	r_buf_read_at		578265	0					
ANR	578287	ArgumentList	buf		578265	1					
ANR	578288	Argument	buf		578265	0					
ANR	578289	Identifier	buf		578265	0					
ANR	578290	Argument	0		578265	1					
ANR	578291	PrimaryExpression	0		578265	0					
ANR	578292	Argument	b		578265	2					
ANR	578293	Identifier	b		578265	0					
ANR	578294	Argument	sizeof ( b )		578265	3					
ANR	578295	SizeofExpression	sizeof ( b )		578265	0					
ANR	578296	Sizeof	sizeof		578265	0					
ANR	578297	SizeofOperand	b		578265	1					
ANR	578298	ExpressionStatement	sh . magic = r_read_le32 ( b )	39:1:838:864	578265	3	True				
ANR	578299	AssignmentExpression	sh . magic = r_read_le32 ( b )		578265	0		=			
ANR	578300	MemberAccess	sh . magic		578265	0					
ANR	578301	Identifier	sh		578265	0					
ANR	578302	Identifier	magic		578265	1					
ANR	578303	CallExpression	r_read_le32 ( b )		578265	1					
ANR	578304	Callee	r_read_le32		578265	0					
ANR	578305	Identifier	r_read_le32		578265	0					
ANR	578306	ArgumentList	b		578265	1					
ANR	578307	Argument	b		578265	0					
ANR	578308	Identifier	b		578265	0					
ANR	578309	ExpressionStatement	sh . version = r_read_le32 ( b + 4 )	40:1:867:899	578265	4	True				
ANR	578310	AssignmentExpression	sh . version = r_read_le32 ( b + 4 )		578265	0		=			
ANR	578311	MemberAccess	sh . version		578265	0					
ANR	578312	Identifier	sh		578265	0					
ANR	578313	Identifier	version		578265	1					
ANR	578314	CallExpression	r_read_le32 ( b + 4 )		578265	1					
ANR	578315	Callee	r_read_le32		578265	0					
ANR	578316	Identifier	r_read_le32		578265	0					
ANR	578317	ArgumentList	b + 4		578265	1					
ANR	578318	Argument	b + 4		578265	0					
ANR	578319	AdditiveExpression	b + 4		578265	0		+			
ANR	578320	Identifier	b		578265	0					
ANR	578321	PrimaryExpression	4		578265	1					
ANR	578322	ExpressionStatement	sh . valid = sh . magic == 0xff01ff02	41:1:902:935	578265	5	True				
ANR	578323	AssignmentExpression	sh . valid = sh . magic == 0xff01ff02		578265	0		=			
ANR	578324	MemberAccess	sh . valid		578265	0					
ANR	578325	Identifier	sh		578265	0					
ANR	578326	Identifier	valid		578265	1					
ANR	578327	EqualityExpression	sh . magic == 0xff01ff02		578265	1		==			
ANR	578328	MemberAccess	sh . magic		578265	0					
ANR	578329	Identifier	sh		578265	0					
ANR	578330	Identifier	magic		578265	1					
ANR	578331	PrimaryExpression	0xff01ff02		578265	1					
ANR	578332	IdentifierDeclStatement	int i ;	42:1:938:943	578265	6	True				
ANR	578333	IdentifierDecl	i		578265	0					
ANR	578334	IdentifierDeclType	int		578265	0					
ANR	578335	Identifier	i		578265	1					
ANR	578336	ForStatement	for ( i = 0 ; i < 16 ; i ++ )		578265	7					
ANR	578337	ForInit	i = 0 ;	43:6:951:956	578265	0	True				
ANR	578338	AssignmentExpression	i = 0		578265	0		=			
ANR	578339	Identifier	i		578265	0					
ANR	578340	PrimaryExpression	0		578265	1					
ANR	578341	Condition	i < 16	43:13:958:963	578265	1	True				
ANR	578342	RelationalExpression	i < 16		578265	0		<			
ANR	578343	Identifier	i		578265	0					
ANR	578344	PrimaryExpression	16		578265	1					
ANR	578345	PostIncDecOperationExpression	i ++	43:21:966:968	578265	2	True				
ANR	578346	Identifier	i		578265	0					
ANR	578347	IncDec	++		578265	1					
ANR	578348	CompoundStatement		9:26:220:220	578265	3					
ANR	578349	ExpressionStatement	sh . uuid [ i ] = b [ 24 + i ]	44:2:975:997	578265	0	True				
ANR	578350	AssignmentExpression	sh . uuid [ i ] = b [ 24 + i ]		578265	0		=			
ANR	578351	ArrayIndexing	sh . uuid [ i ]		578265	0					
ANR	578352	MemberAccess	sh . uuid		578265	0					
ANR	578353	Identifier	sh		578265	0					
ANR	578354	Identifier	uuid		578265	1					
ANR	578355	Identifier	i		578265	1					
ANR	578356	ArrayIndexing	b [ 24 + i ]		578265	1					
ANR	578357	Identifier	b		578265	0					
ANR	578358	AdditiveExpression	24 + i		578265	1		+			
ANR	578359	PrimaryExpression	24		578265	0					
ANR	578360	Identifier	i		578265	1					
ANR	578361	ExpressionStatement	sh . unk0 = r_read_le16 ( b + 0x28 )	46:1:1003:1035	578265	8	True				
ANR	578362	AssignmentExpression	sh . unk0 = r_read_le16 ( b + 0x28 )		578265	0		=			
ANR	578363	MemberAccess	sh . unk0		578265	0					
ANR	578364	Identifier	sh		578265	0					
ANR	578365	Identifier	unk0		578265	1					
ANR	578366	CallExpression	r_read_le16 ( b + 0x28 )		578265	1					
ANR	578367	Callee	r_read_le16		578265	0					
ANR	578368	Identifier	r_read_le16		578265	0					
ANR	578369	ArgumentList	b + 0x28		578265	1					
ANR	578370	Argument	b + 0x28		578265	0					
ANR	578371	AdditiveExpression	b + 0x28		578265	0		+			
ANR	578372	Identifier	b		578265	0					
ANR	578373	PrimaryExpression	0x28		578265	1					
ANR	578374	ExpressionStatement	sh . unk1 = r_read_le16 ( b + 0x2c )	47:1:1038:1070	578265	9	True				
ANR	578375	AssignmentExpression	sh . unk1 = r_read_le16 ( b + 0x2c )		578265	0		=			
ANR	578376	MemberAccess	sh . unk1		578265	0					
ANR	578377	Identifier	sh		578265	0					
ANR	578378	Identifier	unk1		578265	1					
ANR	578379	CallExpression	r_read_le16 ( b + 0x2c )		578265	1					
ANR	578380	Callee	r_read_le16		578265	0					
ANR	578381	Identifier	r_read_le16		578265	0					
ANR	578382	ArgumentList	b + 0x2c		578265	1					
ANR	578383	Argument	b + 0x2c		578265	0					
ANR	578384	AdditiveExpression	b + 0x2c		578265	0		+			
ANR	578385	Identifier	b		578265	0					
ANR	578386	PrimaryExpression	0x2c		578265	1					
ANR	578387	ExpressionStatement	sh . slotsize = r_read_le16 ( b + 0x2e )	48:1:1095:1131	578265	10	True				
ANR	578388	AssignmentExpression	sh . slotsize = r_read_le16 ( b + 0x2e )		578265	0		=			
ANR	578389	MemberAccess	sh . slotsize		578265	0					
ANR	578390	Identifier	sh		578265	0					
ANR	578391	Identifier	slotsize		578265	1					
ANR	578392	CallExpression	r_read_le16 ( b + 0x2e )		578265	1					
ANR	578393	Callee	r_read_le16		578265	0					
ANR	578394	Identifier	r_read_le16		578265	0					
ANR	578395	ArgumentList	b + 0x2e		578265	1					
ANR	578396	Argument	b + 0x2e		578265	0					
ANR	578397	AdditiveExpression	b + 0x2e		578265	0		+			
ANR	578398	Identifier	b		578265	0					
ANR	578399	PrimaryExpression	0x2e		578265	1					
ANR	578400	ExpressionStatement	sh . size = 0x40	49:1:1134:1148	578265	11	True				
ANR	578401	AssignmentExpression	sh . size = 0x40		578265	0		=			
ANR	578402	MemberAccess	sh . size		578265	0					
ANR	578403	Identifier	sh		578265	0					
ANR	578404	Identifier	size		578265	1					
ANR	578405	PrimaryExpression	0x40		578265	1					
ANR	578406	ReturnStatement	return sh ;	50:1:1151:1160	578265	12	True				
ANR	578407	Identifier	sh		578265	0					
ANR	578408	ReturnType	static SymbolsHeader		578265	1					
ANR	578409	Identifier	parseHeader		578265	2					
ANR	578410	ParameterList	RBuffer * buf		578265	3					
ANR	578411	Parameter	RBuffer * buf	35:33:736:747	578265	0	True				
ANR	578412	ParameterType	RBuffer *		578265	0					
ANR	578413	Identifier	buf		578265	1					
ANR	578414	CFGEntryNode	ENTRY		578265		True				
ANR	578415	CFGExitNode	EXIT		578265		True				
ANR	578416	Symbol	sh . uuid		578265						
ANR	578417	Symbol	b		578265						
ANR	578418	Symbol	r_read_le32		578265						
ANR	578419	Symbol	sh . unk0		578265						
ANR	578420	Symbol	sh . unk1		578265						
ANR	578421	Symbol	sh . magic		578265						
ANR	578422	Symbol	sh . valid		578265						
ANR	578423	Symbol	i		578265						
ANR	578424	Symbol	* sh . uuid		578265						
ANR	578425	Symbol	sh . size		578265						
ANR	578426	Symbol	* b		578265						
ANR	578427	Symbol	r_read_le16		578265						
ANR	578428	Symbol	sh . version		578265						
ANR	578429	Symbol	buf		578265						
ANR	578430	Symbol	* i		578265						
ANR	578431	Symbol	sh . slotsize		578265						
ANR	578432	Symbol	sh		578265						
ANR	578433	Symbol	* sh		578265						
ANR	578434	ClassDef	symbols_metadata_t	53:8:1173:1404							
ANR	578435	DeclStmt									
ANR	578436	Decl							ut32	ut32	cputype
ANR	578437	DeclStmt									
ANR	578438	Decl							ut32	ut32	subtype
ANR	578439	DeclStmt									
ANR	578440	Decl							ut32	ut32	n_segments
ANR	578441	DeclStmt									
ANR	578442	Decl							ut32	ut32	namelen
ANR	578443	DeclStmt									
ANR	578444	Decl							ut32	ut32	name
ANR	578445	DeclStmt									
ANR	578446	Decl							bool	bool	valid
ANR	578447	DeclStmt									
ANR	578448	Decl							ut32	ut32	size
ANR	578449	DeclStmt									
ANR	578450	Decl							RList	RList *	segments
ANR	578451	DeclStmt									
ANR	578452	Decl							ut32	ut32	addr
ANR	578453	DeclStmt									
ANR	578454	Decl							int	int	bits
ANR	578455	DeclStmt									
ANR	578456	Decl							const char	const char *	arch
ANR	578457	DeclStmt									
ANR	578458	Decl							const char	const char *	cpu
ANR	578459	DeclStmt									
ANR	578460	Decl							symbols_metadata_t	symbols_metadata_t	SymbolsMetadata
ANR	578461	Function	newSection	69:0:1453:1815							
ANR	578462	FunctionDef	"newSection (const char * name , ut32 from , ut32 to , bool is_segment)"		578461	0					
ANR	578463	CompoundStatement		69:86:1539:1815	578461	0					
ANR	578464	IdentifierDeclStatement	RBinSection * s = R_NEW0 ( RBinSection ) ;	70:1:1542:1579	578461	0	True				
ANR	578465	IdentifierDecl	* s = R_NEW0 ( RBinSection )		578461	0					
ANR	578466	IdentifierDeclType	RBinSection *		578461	0					
ANR	578467	Identifier	s		578461	1					
ANR	578468	AssignmentExpression	* s = R_NEW0 ( RBinSection )		578461	2		=			
ANR	578469	Identifier	s		578461	0					
ANR	578470	CallExpression	R_NEW0 ( RBinSection )		578461	1					
ANR	578471	Callee	R_NEW0		578461	0					
ANR	578472	Identifier	R_NEW0		578461	0					
ANR	578473	ArgumentList	RBinSection		578461	1					
ANR	578474	Argument	RBinSection		578461	0					
ANR	578475	Identifier	RBinSection		578461	0					
ANR	578476	IfStatement	if ( ! s )		578461	1					
ANR	578477	Condition	! s	71:5:1586:1587	578461	0	True				
ANR	578478	UnaryOperationExpression	! s		578461	0					
ANR	578479	UnaryOperator	!		578461	0					
ANR	578480	Identifier	s		578461	1					
ANR	578481	CompoundStatement		3:9:50:50	578461	1					
ANR	578482	ReturnStatement	return NULL ;	72:2:1594:1605	578461	0	True				
ANR	578483	Identifier	NULL		578461	0					
ANR	578484	ExpressionStatement	s -> name = strdup ( name )	74:1:1611:1634	578461	2	True				
ANR	578485	AssignmentExpression	s -> name = strdup ( name )		578461	0		=			
ANR	578486	PtrMemberAccess	s -> name		578461	0					
ANR	578487	Identifier	s		578461	0					
ANR	578488	Identifier	name		578461	1					
ANR	578489	CallExpression	strdup ( name )		578461	1					
ANR	578490	Callee	strdup		578461	0					
ANR	578491	Identifier	strdup		578461	0					
ANR	578492	ArgumentList	name		578461	1					
ANR	578493	Argument	name		578461	0					
ANR	578494	Identifier	name		578461	0					
ANR	578495	ExpressionStatement	s -> size = to - from + 1	75:1:1637:1660	578461	3	True				
ANR	578496	AssignmentExpression	s -> size = to - from + 1		578461	0		=			
ANR	578497	PtrMemberAccess	s -> size		578461	0					
ANR	578498	Identifier	s		578461	0					
ANR	578499	Identifier	size		578461	1					
ANR	578500	AdditiveExpression	to - from + 1		578461	1		-			
ANR	578501	Identifier	to		578461	0					
ANR	578502	AdditiveExpression	from + 1		578461	1		+			
ANR	578503	Identifier	from		578461	0					
ANR	578504	PrimaryExpression	1		578461	1					
ANR	578505	ExpressionStatement	s -> vsize = s -> size	76:1:1663:1681	578461	4	True				
ANR	578506	AssignmentExpression	s -> vsize = s -> size		578461	0		=			
ANR	578507	PtrMemberAccess	s -> vsize		578461	0					
ANR	578508	Identifier	s		578461	0					
ANR	578509	Identifier	vsize		578461	1					
ANR	578510	PtrMemberAccess	s -> size		578461	1					
ANR	578511	Identifier	s		578461	0					
ANR	578512	Identifier	size		578461	1					
ANR	578513	ExpressionStatement	s -> paddr = from	77:1:1684:1699	578461	5	True				
ANR	578514	AssignmentExpression	s -> paddr = from		578461	0		=			
ANR	578515	PtrMemberAccess	s -> paddr		578461	0					
ANR	578516	Identifier	s		578461	0					
ANR	578517	Identifier	paddr		578461	1					
ANR	578518	Identifier	from		578461	1					
ANR	578519	ExpressionStatement	s -> vaddr = from	78:1:1702:1717	578461	6	True				
ANR	578520	AssignmentExpression	s -> vaddr = from		578461	0		=			
ANR	578521	PtrMemberAccess	s -> vaddr		578461	0					
ANR	578522	Identifier	s		578461	0					
ANR	578523	Identifier	vaddr		578461	1					
ANR	578524	Identifier	from		578461	1					
ANR	578525	ExpressionStatement	s -> add = true	79:1:1720:1733	578461	7	True				
ANR	578526	AssignmentExpression	s -> add = true		578461	0		=			
ANR	578527	PtrMemberAccess	s -> add		578461	0					
ANR	578528	Identifier	s		578461	0					
ANR	578529	Identifier	add		578461	1					
ANR	578530	Identifier	true		578461	1					
ANR	578531	ExpressionStatement	"s -> perm = strstr ( name , ""TEXT"" ) ? 5 : 4"	80:1:1736:1773	578461	8	True				
ANR	578532	AssignmentExpression	"s -> perm = strstr ( name , ""TEXT"" ) ? 5 : 4"		578461	0		=			
ANR	578533	PtrMemberAccess	s -> perm		578461	0					
ANR	578534	Identifier	s		578461	0					
ANR	578535	Identifier	perm		578461	1					
ANR	578536	ConditionalExpression	"strstr ( name , ""TEXT"" ) ? 5 : 4"		578461	1					
ANR	578537	Condition	"strstr ( name , ""TEXT"" )"		578461	0					
ANR	578538	CallExpression	"strstr ( name , ""TEXT"" )"		578461	0					
ANR	578539	Callee	strstr		578461	0					
ANR	578540	Identifier	strstr		578461	0					
ANR	578541	ArgumentList	name		578461	1					
ANR	578542	Argument	name		578461	0					
ANR	578543	Identifier	name		578461	0					
ANR	578544	Argument	"""TEXT"""		578461	1					
ANR	578545	PrimaryExpression	"""TEXT"""		578461	0					
ANR	578546	PrimaryExpression	5		578461	1					
ANR	578547	PrimaryExpression	4		578461	2					
ANR	578548	ExpressionStatement	s -> is_segment = is_segment	81:1:1776:1802	578461	9	True				
ANR	578549	AssignmentExpression	s -> is_segment = is_segment		578461	0		=			
ANR	578550	PtrMemberAccess	s -> is_segment		578461	0					
ANR	578551	Identifier	s		578461	0					
ANR	578552	Identifier	is_segment		578461	1					
ANR	578553	Identifier	is_segment		578461	1					
ANR	578554	ReturnStatement	return s ;	82:1:1805:1813	578461	10	True				
ANR	578555	Identifier	s		578461	0					
ANR	578556	ReturnType	static RBinSection *		578461	1					
ANR	578557	Identifier	newSection		578461	2					
ANR	578558	ParameterList	"const char * name , ut32 from , ut32 to , bool is_segment"		578461	3					
ANR	578559	Parameter	const char * name	69:31:1484:1499	578461	0	True				
ANR	578560	ParameterType	const char *		578461	0					
ANR	578561	Identifier	name		578461	1					
ANR	578562	Parameter	ut32 from	69:49:1502:1510	578461	1	True				
ANR	578563	ParameterType	ut32		578461	0					
ANR	578564	Identifier	from		578461	1					
ANR	578565	Parameter	ut32 to	69:60:1513:1519	578461	2	True				
ANR	578566	ParameterType	ut32		578461	0					
ANR	578567	Identifier	to		578461	1					
ANR	578568	Parameter	bool is_segment	69:69:1522:1536	578461	3	True				
ANR	578569	ParameterType	bool		578461	0					
ANR	578570	Identifier	is_segment		578461	1					
ANR	578571	CFGEntryNode	ENTRY		578461		True				
ANR	578572	CFGExitNode	EXIT		578461		True				
ANR	578573	Symbol	s -> is_segment		578461						
ANR	578574	Symbol	s -> size		578461						
ANR	578575	Symbol	NULL		578461						
ANR	578576	Symbol	s -> vsize		578461						
ANR	578577	Symbol	s -> paddr		578461						
ANR	578578	Symbol	s -> add		578461						
ANR	578579	Symbol	s -> perm		578461						
ANR	578580	Symbol	is_segment		578461						
ANR	578581	Symbol	s -> vaddr		578461						
ANR	578582	Symbol	R_NEW0		578461						
ANR	578583	Symbol	s		578461						
ANR	578584	Symbol	s -> name		578461						
ANR	578585	Symbol	strstr		578461						
ANR	578586	Symbol	name		578461						
ANR	578587	Symbol	true		578461						
ANR	578588	Symbol	from		578461						
ANR	578589	Symbol	to		578461						
ANR	578590	Symbol	RBinSection		578461						
ANR	578591	Symbol	strdup		578461						
ANR	578592	Symbol	* s		578461						
ANR	578593	Function	parseSegments	85:0:1818:2580							
ANR	578594	FunctionDef	"parseSegments (RBuffer * buf , int off , int count)"		578593	0					
ANR	578595	CompoundStatement		85:62:1880:2580	578593	0					
ANR	578596	IdentifierDeclStatement	"ut8 * b = calloc ( count , 32 ) ;"	86:1:1883:1910	578593	0	True				
ANR	578597	IdentifierDecl	"* b = calloc ( count , 32 )"		578593	0					
ANR	578598	IdentifierDeclType	ut8 *		578593	0					
ANR	578599	Identifier	b		578593	1					
ANR	578600	AssignmentExpression	"* b = calloc ( count , 32 )"		578593	2		=			
ANR	578601	Identifier	b		578593	0					
ANR	578602	CallExpression	"calloc ( count , 32 )"		578593	1					
ANR	578603	Callee	calloc		578593	0					
ANR	578604	Identifier	calloc		578593	0					
ANR	578605	ArgumentList	count		578593	1					
ANR	578606	Argument	count		578593	0					
ANR	578607	Identifier	count		578593	0					
ANR	578608	Argument	32		578593	1					
ANR	578609	PrimaryExpression	32		578593	0					
ANR	578610	ExpressionStatement	"( void ) r_buf_read_at ( buf , off , b , count * 32 )"	87:1:1913:1958	578593	1	True				
ANR	578611	CastExpression	"( void ) r_buf_read_at ( buf , off , b , count * 32 )"		578593	0					
ANR	578612	CastTarget	void		578593	0					
ANR	578613	CallExpression	"r_buf_read_at ( buf , off , b , count * 32 )"		578593	1					
ANR	578614	Callee	r_buf_read_at		578593	0					
ANR	578615	Identifier	r_buf_read_at		578593	0					
ANR	578616	ArgumentList	buf		578593	1					
ANR	578617	Argument	buf		578593	0					
ANR	578618	Identifier	buf		578593	0					
ANR	578619	Argument	off		578593	1					
ANR	578620	Identifier	off		578593	0					
ANR	578621	Argument	b		578593	2					
ANR	578622	Identifier	b		578593	0					
ANR	578623	Argument	count * 32		578593	3					
ANR	578624	MultiplicativeExpression	count * 32		578593	0		*			
ANR	578625	Identifier	count		578593	0					
ANR	578626	PrimaryExpression	32		578593	1					
ANR	578627	IdentifierDeclStatement	int x = off ;	88:1:1961:1972	578593	2	True				
ANR	578628	IdentifierDecl	x = off		578593	0					
ANR	578629	IdentifierDeclType	int		578593	0					
ANR	578630	Identifier	x		578593	1					
ANR	578631	AssignmentExpression	x = off		578593	2		=			
ANR	578632	Identifier	off		578593	0					
ANR	578633	Identifier	off		578593	1					
ANR	578634	IdentifierDeclStatement	int X = 0 ;	89:1:1975:1984	578593	3	True				
ANR	578635	IdentifierDecl	X = 0		578593	0					
ANR	578636	IdentifierDeclType	int		578593	0					
ANR	578637	Identifier	X		578593	1					
ANR	578638	AssignmentExpression	X = 0		578593	2		=			
ANR	578639	Identifier	X		578593	0					
ANR	578640	PrimaryExpression	0		578593	1					
ANR	578641	IdentifierDeclStatement	int i ;	90:1:1987:1992	578593	4	True				
ANR	578642	IdentifierDecl	i		578593	0					
ANR	578643	IdentifierDeclType	int		578593	0					
ANR	578644	Identifier	i		578593	1					
ANR	578645	IdentifierDeclStatement	RList * segments = r_list_newf ( ( RListFree ) r_bin_section_free ) ;	91:1:1995:2056	578593	5	True				
ANR	578646	IdentifierDecl	* segments = r_list_newf ( ( RListFree ) r_bin_section_free )		578593	0					
ANR	578647	IdentifierDeclType	RList *		578593	0					
ANR	578648	Identifier	segments		578593	1					
ANR	578649	AssignmentExpression	* segments = r_list_newf ( ( RListFree ) r_bin_section_free )		578593	2		=			
ANR	578650	Identifier	segments		578593	0					
ANR	578651	CallExpression	r_list_newf ( ( RListFree ) r_bin_section_free )		578593	1					
ANR	578652	Callee	r_list_newf		578593	0					
ANR	578653	Identifier	r_list_newf		578593	0					
ANR	578654	ArgumentList	( RListFree ) r_bin_section_free		578593	1					
ANR	578655	Argument	( RListFree ) r_bin_section_free		578593	0					
ANR	578656	CastExpression	( RListFree ) r_bin_section_free		578593	0					
ANR	578657	CastTarget	RListFree		578593	0					
ANR	578658	Identifier	r_bin_section_free		578593	1					
ANR	578659	IfStatement	if ( ! segments )		578593	6					
ANR	578660	Condition	! segments	92:5:2063:2071	578593	0	True				
ANR	578661	UnaryOperationExpression	! segments		578593	0					
ANR	578662	UnaryOperator	!		578593	0					
ANR	578663	Identifier	segments		578593	1					
ANR	578664	CompoundStatement		8:16:193:193	578593	1					
ANR	578665	ReturnStatement	return NULL ;	93:2:2078:2089	578593	0	True				
ANR	578666	Identifier	NULL		578593	0					
ANR	578667	ForStatement	for ( i = 0 ; i < count ; i ++ )		578593	7					
ANR	578668	ForInit	i = 0 ;	96:6:2139:2144	578593	0	True				
ANR	578669	AssignmentExpression	i = 0		578593	0		=			
ANR	578670	Identifier	i		578593	0					
ANR	578671	PrimaryExpression	0		578593	1					
ANR	578672	Condition	i < count	96:13:2146:2154	578593	1	True				
ANR	578673	RelationalExpression	i < count		578593	0		<			
ANR	578674	Identifier	i		578593	0					
ANR	578675	Identifier	count		578593	1					
ANR	578676	PostIncDecOperationExpression	i ++	96:24:2157:2159	578593	2	True				
ANR	578677	Identifier	i		578593	0					
ANR	578678	IncDec	++		578593	1					
ANR	578679	CompoundStatement		19:2:546:602	578593	3					
ANR	578680	IdentifierDeclStatement	int A = r_read_le32 ( b + X + 16 ) ;	97:2:2166:2198	578593	0	True				
ANR	578681	IdentifierDecl	A = r_read_le32 ( b + X + 16 )		578593	0					
ANR	578682	IdentifierDeclType	int		578593	0					
ANR	578683	Identifier	A		578593	1					
ANR	578684	AssignmentExpression	A = r_read_le32 ( b + X + 16 )		578593	2		=			
ANR	578685	Identifier	A		578593	0					
ANR	578686	CallExpression	r_read_le32 ( b + X + 16 )		578593	1					
ANR	578687	Callee	r_read_le32		578593	0					
ANR	578688	Identifier	r_read_le32		578593	0					
ANR	578689	ArgumentList	b + X + 16		578593	1					
ANR	578690	Argument	b + X + 16		578593	0					
ANR	578691	AdditiveExpression	b + X + 16		578593	0		+			
ANR	578692	Identifier	b		578593	0					
ANR	578693	AdditiveExpression	X + 16		578593	1		+			
ANR	578694	Identifier	X		578593	0					
ANR	578695	PrimaryExpression	16		578593	1					
ANR	578696	IdentifierDeclStatement	int B = r_read_le32 ( b + X + 16 + 8 ) ;	98:2:2202:2238	578593	1	True				
ANR	578697	IdentifierDecl	B = r_read_le32 ( b + X + 16 + 8 )		578593	0					
ANR	578698	IdentifierDeclType	int		578593	0					
ANR	578699	Identifier	B		578593	1					
ANR	578700	AssignmentExpression	B = r_read_le32 ( b + X + 16 + 8 )		578593	2		=			
ANR	578701	Identifier	B		578593	0					
ANR	578702	CallExpression	r_read_le32 ( b + X + 16 + 8 )		578593	1					
ANR	578703	Callee	r_read_le32		578593	0					
ANR	578704	Identifier	r_read_le32		578593	0					
ANR	578705	ArgumentList	b + X + 16 + 8		578593	1					
ANR	578706	Argument	b + X + 16 + 8		578593	0					
ANR	578707	AdditiveExpression	b + X + 16 + 8		578593	0		+			
ANR	578708	Identifier	b		578593	0					
ANR	578709	AdditiveExpression	X + 16 + 8		578593	1		+			
ANR	578710	Identifier	X		578593	0					
ANR	578711	AdditiveExpression	16 + 8		578593	1		+			
ANR	578712	PrimaryExpression	16		578593	0					
ANR	578713	PrimaryExpression	8		578593	1					
ANR	578714	IdentifierDeclStatement	const char * cname = ( const char * ) ( b + X ) ;	101:2:2323:2364	578593	2	True				
ANR	578715	IdentifierDecl	* cname = ( const char * ) ( b + X )		578593	0					
ANR	578716	IdentifierDeclType	const char *		578593	0					
ANR	578717	Identifier	cname		578593	1					
ANR	578718	AssignmentExpression	* cname = ( const char * ) ( b + X )		578593	2		=			
ANR	578719	Identifier	cname		578593	0					
ANR	578720	CastExpression	( const char * ) ( b + X )		578593	1					
ANR	578721	CastTarget	const char *		578593	0					
ANR	578722	AdditiveExpression	b + X		578593	1		+			
ANR	578723	Identifier	b		578593	0					
ANR	578724	Identifier	X		578593	1					
ANR	578725	IdentifierDeclStatement	"char * name = r_str_ndup ( cname , r_str_nlen ( cname , 16 ) ) ;"	102:2:2368:2423	578593	3	True				
ANR	578726	IdentifierDecl	"* name = r_str_ndup ( cname , r_str_nlen ( cname , 16 ) )"		578593	0					
ANR	578727	IdentifierDeclType	char *		578593	0					
ANR	578728	Identifier	name		578593	1					
ANR	578729	AssignmentExpression	"* name = r_str_ndup ( cname , r_str_nlen ( cname , 16 ) )"		578593	2		=			
ANR	578730	Identifier	name		578593	0					
ANR	578731	CallExpression	"r_str_ndup ( cname , r_str_nlen ( cname , 16 ) )"		578593	1					
ANR	578732	Callee	r_str_ndup		578593	0					
ANR	578733	Identifier	r_str_ndup		578593	0					
ANR	578734	ArgumentList	cname		578593	1					
ANR	578735	Argument	cname		578593	0					
ANR	578736	Identifier	cname		578593	0					
ANR	578737	Argument	"r_str_nlen ( cname , 16 )"		578593	1					
ANR	578738	CallExpression	"r_str_nlen ( cname , 16 )"		578593	0					
ANR	578739	Callee	r_str_nlen		578593	0					
ANR	578740	Identifier	r_str_nlen		578593	0					
ANR	578741	ArgumentList	cname		578593	1					
ANR	578742	Argument	cname		578593	0					
ANR	578743	Identifier	cname		578593	0					
ANR	578744	Argument	16		578593	1					
ANR	578745	PrimaryExpression	16		578593	0					
ANR	578746	IdentifierDeclStatement	"RBinSection * section = newSection ( name , A , A + B , true ) ;"	103:2:2427:2483	578593	4	True				
ANR	578747	IdentifierDecl	"* section = newSection ( name , A , A + B , true )"		578593	0					
ANR	578748	IdentifierDeclType	RBinSection *		578593	0					
ANR	578749	Identifier	section		578593	1					
ANR	578750	AssignmentExpression	"* section = newSection ( name , A , A + B , true )"		578593	2		=			
ANR	578751	Identifier	section		578593	0					
ANR	578752	CallExpression	"newSection ( name , A , A + B , true )"		578593	1					
ANR	578753	Callee	newSection		578593	0					
ANR	578754	Identifier	newSection		578593	0					
ANR	578755	ArgumentList	name		578593	1					
ANR	578756	Argument	name		578593	0					
ANR	578757	Identifier	name		578593	0					
ANR	578758	Argument	A		578593	1					
ANR	578759	Identifier	A		578593	0					
ANR	578760	Argument	A + B		578593	2					
ANR	578761	AdditiveExpression	A + B		578593	0		+			
ANR	578762	Identifier	A		578593	0					
ANR	578763	Identifier	B		578593	1					
ANR	578764	Argument	true		578593	3					
ANR	578765	Identifier	true		578593	0					
ANR	578766	ExpressionStatement	free ( name )	104:2:2487:2498	578593	5	True				
ANR	578767	CallExpression	free ( name )		578593	0					
ANR	578768	Callee	free		578593	0					
ANR	578769	Identifier	free		578593	0					
ANR	578770	ArgumentList	name		578593	1					
ANR	578771	Argument	name		578593	0					
ANR	578772	Identifier	name		578593	0					
ANR	578773	ExpressionStatement	"r_list_append ( segments , section )"	105:2:2502:2535	578593	6	True				
ANR	578774	CallExpression	"r_list_append ( segments , section )"		578593	0					
ANR	578775	Callee	r_list_append		578593	0					
ANR	578776	Identifier	r_list_append		578593	0					
ANR	578777	ArgumentList	segments		578593	1					
ANR	578778	Argument	segments		578593	0					
ANR	578779	Identifier	segments		578593	0					
ANR	578780	Argument	section		578593	1					
ANR	578781	Identifier	section		578593	0					
ANR	578782	ExpressionStatement	x += 32	106:2:2539:2546	578593	7	True				
ANR	578783	AssignmentExpression	x += 32		578593	0		+=			
ANR	578784	Identifier	x		578593	0					
ANR	578785	PrimaryExpression	32		578593	1					
ANR	578786	ExpressionStatement	X += 32	107:2:2550:2557	578593	8	True				
ANR	578787	AssignmentExpression	X += 32		578593	0		+=			
ANR	578788	Identifier	X		578593	0					
ANR	578789	PrimaryExpression	32		578593	1					
ANR	578790	ReturnStatement	return segments ;	109:1:2563:2578	578593	8	True				
ANR	578791	Identifier	segments		578593	0					
ANR	578792	ReturnType	static RList *		578593	1					
ANR	578793	Identifier	parseSegments		578593	2					
ANR	578794	ParameterList	"RBuffer * buf , int off , int count"		578593	3					
ANR	578795	Parameter	RBuffer * buf	85:28:1846:1857	578593	0	True				
ANR	578796	ParameterType	RBuffer *		578593	0					
ANR	578797	Identifier	buf		578593	1					
ANR	578798	Parameter	int off	85:42:1860:1866	578593	1	True				
ANR	578799	ParameterType	int		578593	0					
ANR	578800	Identifier	off		578593	1					
ANR	578801	Parameter	int count	85:51:1869:1877	578593	2	True				
ANR	578802	ParameterType	int		578593	0					
ANR	578803	Identifier	count		578593	1					
ANR	578804	CFGEntryNode	ENTRY		578593		True				
ANR	578805	CFGExitNode	EXIT		578593		True				
ANR	578806	Symbol	A		578593						
ANR	578807	Symbol	b		578593						
ANR	578808	Symbol	B		578593						
ANR	578809	Symbol	NULL		578593						
ANR	578810	Symbol	r_read_le32		578593						
ANR	578811	Symbol	r_list_newf		578593						
ANR	578812	Symbol	r_str_ndup		578593						
ANR	578813	Symbol	newSection		578593						
ANR	578814	Symbol	count		578593						
ANR	578815	Symbol	cname		578593						
ANR	578816	Symbol	r_str_nlen		578593						
ANR	578817	Symbol	i		578593						
ANR	578818	Symbol	r_bin_section_free		578593						
ANR	578819	Symbol	section		578593						
ANR	578820	Symbol	calloc		578593						
ANR	578821	Symbol	off		578593						
ANR	578822	Symbol	segments		578593						
ANR	578823	Symbol	buf		578593						
ANR	578824	Symbol	x		578593						
ANR	578825	Symbol	X		578593						
ANR	578826	Symbol	name		578593						
ANR	578827	Symbol	true		578593						
ANR	578828	Function	typeString	112:0:2583:2917							
ANR	578829	FunctionDef	"typeString (ut32 n , int * bits)"		578828	0					
ANR	578830	CompoundStatement		112:49:2632:2917	578828	0					
ANR	578831	ExpressionStatement	* bits = 32	113:1:2635:2645	578828	0	True				
ANR	578832	AssignmentExpression	* bits = 32		578828	0		=			
ANR	578833	UnaryOperationExpression	* bits		578828	0					
ANR	578834	UnaryOperator	*		578828	0					
ANR	578835	Identifier	bits		578828	1					
ANR	578836	PrimaryExpression	32		578828	1					
ANR	578837	IfStatement	if ( n == 12 )		578828	1					
ANR	578838	Condition	n == 12	114:5:2652:2658	578828	0	True				
ANR	578839	EqualityExpression	n == 12		578828	0		==			
ANR	578840	Identifier	n		578828	0					
ANR	578841	PrimaryExpression	12		578828	1					
ANR	578842	CompoundStatement		3:14:28:28	578828	1					
ANR	578843	ReturnStatement	"return ""arm"" ;"	115:2:2690:2702	578828	0	True				
ANR	578844	PrimaryExpression	"""arm"""		578828	0					
ANR	578845	IfStatement	if ( n == 0x0100000c )		578828	2					
ANR	578846	Condition	n == 0x0100000c	117:5:2712:2726	578828	0	True				
ANR	578847	EqualityExpression	n == 0x0100000c		578828	0		==			
ANR	578848	Identifier	n		578828	0					
ANR	578849	PrimaryExpression	0x0100000c		578828	1					
ANR	578850	CompoundStatement		6:22:96:96	578828	1					
ANR	578851	ExpressionStatement	* bits = 64	118:2:2742:2752	578828	0	True				
ANR	578852	AssignmentExpression	* bits = 64		578828	0		=			
ANR	578853	UnaryOperationExpression	* bits		578828	0					
ANR	578854	UnaryOperator	*		578828	0					
ANR	578855	Identifier	bits		578828	1					
ANR	578856	PrimaryExpression	64		578828	1					
ANR	578857	ExpressionStatement	is64 = true	119:2:2756:2767	578828	1	True				
ANR	578858	AssignmentExpression	is64 = true		578828	0		=			
ANR	578859	Identifier	is64		578828	0					
ANR	578860	Identifier	true		578828	1					
ANR	578861	ReturnStatement	"return ""arm"" ;"	120:2:2771:2783	578828	2	True				
ANR	578862	PrimaryExpression	"""arm"""		578828	0					
ANR	578863	IfStatement	if ( n == 0x0200000c )		578828	3					
ANR	578864	Condition	n == 0x0200000c	122:5:2793:2807	578828	0	True				
ANR	578865	EqualityExpression	n == 0x0200000c		578828	0		==			
ANR	578866	Identifier	n		578828	0					
ANR	578867	PrimaryExpression	0x0200000c		578828	1					
ANR	578868	CompoundStatement		11:22:177:177	578828	1					
ANR	578869	ExpressionStatement	is64 = false	124:2:2855:2867	578828	0	True				
ANR	578870	AssignmentExpression	is64 = false		578828	0		=			
ANR	578871	Identifier	is64		578828	0					
ANR	578872	Identifier	false		578828	1					
ANR	578873	ExpressionStatement	* bits = 64	125:2:2871:2881	578828	1	True				
ANR	578874	AssignmentExpression	* bits = 64		578828	0		=			
ANR	578875	UnaryOperationExpression	* bits		578828	0					
ANR	578876	UnaryOperator	*		578828	0					
ANR	578877	Identifier	bits		578828	1					
ANR	578878	PrimaryExpression	64		578828	1					
ANR	578879	ReturnStatement	"return ""arm"" ;"	126:2:2885:2897	578828	2	True				
ANR	578880	PrimaryExpression	"""arm"""		578828	0					
ANR	578881	ReturnStatement	"return ""x86"" ;"	128:1:2903:2915	578828	4	True				
ANR	578882	PrimaryExpression	"""x86"""		578828	0					
ANR	578883	ReturnType	static const char *		578828	1					
ANR	578884	Identifier	typeString		578828	2					
ANR	578885	ParameterList	"ut32 n , int * bits"		578828	3					
ANR	578886	Parameter	ut32 n	112:30:2613:2618	578828	0	True				
ANR	578887	ParameterType	ut32		578828	0					
ANR	578888	Identifier	n		578828	1					
ANR	578889	Parameter	int * bits	112:38:2621:2629	578828	1	True				
ANR	578890	ParameterType	int *		578828	0					
ANR	578891	Identifier	bits		578828	1					
ANR	578892	CFGEntryNode	ENTRY		578828		True				
ANR	578893	CFGExitNode	EXIT		578828		True				
ANR	578894	Symbol	* bits		578828						
ANR	578895	Symbol	bits		578828						
ANR	578896	Symbol	true		578828						
ANR	578897	Symbol	false		578828						
ANR	578898	Symbol	is64		578828						
ANR	578899	Symbol	n		578828						
ANR	578900	Function	subtypeString	131:0:2920:3036							
ANR	578901	FunctionDef	subtypeString (int n)		578900	0					
ANR	578902	CompoundStatement		131:40:2960:3036	578900	0					
ANR	578903	IfStatement	if ( n == 9 )		578900	0					
ANR	578904	Condition	n == 9	132:5:2967:2972	578900	0	True				
ANR	578905	EqualityExpression	n == 9		578900	0		==			
ANR	578906	Identifier	n		578900	0					
ANR	578907	PrimaryExpression	9		578900	1					
ANR	578908	CompoundStatement		2:13:14:14	578900	1					
ANR	578909	ReturnStatement	"return ""armv7"" ;"	133:2:3004:3018	578900	0	True				
ANR	578910	PrimaryExpression	"""armv7"""		578900	0					
ANR	578911	ReturnStatement	"return ""?"" ;"	135:1:3024:3034	578900	1	True				
ANR	578912	PrimaryExpression	"""?"""		578900	0					
ANR	578913	ReturnType	static const char *		578900	1					
ANR	578914	Identifier	subtypeString		578900	2					
ANR	578915	ParameterList	int n		578900	3					
ANR	578916	Parameter	int n	131:33:2953:2957	578900	0	True				
ANR	578917	ParameterType	int		578900	0					
ANR	578918	Identifier	n		578900	1					
ANR	578919	CFGEntryNode	ENTRY		578900		True				
ANR	578920	CFGExitNode	EXIT		578900		True				
ANR	578921	Symbol	n		578900						
ANR	578922	Function	parseMetadata	139:0:3130:4524							
ANR	578923	FunctionDef	"parseMetadata (RBuffer * buf , int off)"		578922	0					
ANR	578924	CompoundStatement		139:60:3190:4524	578922	0					
ANR	578925	IdentifierDeclStatement	SymbolsMetadata sm = { 0 } ;	140:1:3193:3219	578922	0	True				
ANR	578926	IdentifierDecl	sm = { 0 }		578922	0					
ANR	578927	IdentifierDeclType	SymbolsMetadata		578922	0					
ANR	578928	Identifier	sm		578922	1					
ANR	578929	AssignmentExpression	sm = { 0 }		578922	2		=			
ANR	578930	Identifier	sm		578922	0					
ANR	578931	InitializerList	0		578922	1					
ANR	578932	PrimaryExpression	0		578922	0					
ANR	578933	IdentifierDeclStatement	ut8 b [ 0x100 ] = { 0 } ;	141:1:3222:3242	578922	1	True				
ANR	578934	IdentifierDecl	b [ 0x100 ] = { 0 }		578922	0					
ANR	578935	IdentifierDeclType	ut8 [ 0x100 ]		578922	0					
ANR	578936	Identifier	b		578922	1					
ANR	578937	PrimaryExpression	0x100		578922	2					
ANR	578938	AssignmentExpression	b [ 0x100 ] = { 0 }		578922	3		=			
ANR	578939	Identifier	b		578922	0					
ANR	578940	InitializerList	0		578922	1					
ANR	578941	PrimaryExpression	0		578922	0					
ANR	578942	ExpressionStatement	"( void ) r_buf_read_at ( buf , off , b , sizeof ( b ) )"	142:1:3245:3290	578922	2	True				
ANR	578943	CastExpression	"( void ) r_buf_read_at ( buf , off , b , sizeof ( b ) )"		578922	0					
ANR	578944	CastTarget	void		578922	0					
ANR	578945	CallExpression	"r_buf_read_at ( buf , off , b , sizeof ( b ) )"		578922	1					
ANR	578946	Callee	r_buf_read_at		578922	0					
ANR	578947	Identifier	r_buf_read_at		578922	0					
ANR	578948	ArgumentList	buf		578922	1					
ANR	578949	Argument	buf		578922	0					
ANR	578950	Identifier	buf		578922	0					
ANR	578951	Argument	off		578922	1					
ANR	578952	Identifier	off		578922	0					
ANR	578953	Argument	b		578922	2					
ANR	578954	Identifier	b		578922	0					
ANR	578955	Argument	sizeof ( b )		578922	3					
ANR	578956	SizeofExpression	sizeof ( b )		578922	0					
ANR	578957	Sizeof	sizeof		578922	0					
ANR	578958	SizeofOperand	b		578922	1					
ANR	578959	ExpressionStatement	sm . addr = off	143:1:3293:3306	578922	3	True				
ANR	578960	AssignmentExpression	sm . addr = off		578922	0		=			
ANR	578961	MemberAccess	sm . addr		578922	0					
ANR	578962	Identifier	sm		578922	0					
ANR	578963	Identifier	addr		578922	1					
ANR	578964	Identifier	off		578922	1					
ANR	578965	ExpressionStatement	sm . cputype = r_read_le32 ( b )	144:1:3309:3337	578922	4	True				
ANR	578966	AssignmentExpression	sm . cputype = r_read_le32 ( b )		578922	0		=			
ANR	578967	MemberAccess	sm . cputype		578922	0					
ANR	578968	Identifier	sm		578922	0					
ANR	578969	Identifier	cputype		578922	1					
ANR	578970	CallExpression	r_read_le32 ( b )		578922	1					
ANR	578971	Callee	r_read_le32		578922	0					
ANR	578972	Identifier	r_read_le32		578922	0					
ANR	578973	ArgumentList	b		578922	1					
ANR	578974	Argument	b		578922	0					
ANR	578975	Identifier	b		578922	0					
ANR	578976	ExpressionStatement	"sm . arch = typeString ( sm . cputype , & sm . bits )"	145:1:3340:3383	578922	5	True				
ANR	578977	AssignmentExpression	"sm . arch = typeString ( sm . cputype , & sm . bits )"		578922	0		=			
ANR	578978	MemberAccess	sm . arch		578922	0					
ANR	578979	Identifier	sm		578922	0					
ANR	578980	Identifier	arch		578922	1					
ANR	578981	CallExpression	"typeString ( sm . cputype , & sm . bits )"		578922	1					
ANR	578982	Callee	typeString		578922	0					
ANR	578983	Identifier	typeString		578922	0					
ANR	578984	ArgumentList	sm . cputype		578922	1					
ANR	578985	Argument	sm . cputype		578922	0					
ANR	578986	MemberAccess	sm . cputype		578922	0					
ANR	578987	Identifier	sm		578922	0					
ANR	578988	Identifier	cputype		578922	1					
ANR	578989	Argument	& sm . bits		578922	1					
ANR	578990	UnaryOperationExpression	& sm . bits		578922	0					
ANR	578991	UnaryOperator	&		578922	0					
ANR	578992	MemberAccess	sm . bits		578922	1					
ANR	578993	Identifier	sm		578922	0					
ANR	578994	Identifier	bits		578922	1					
ANR	578995	ExpressionStatement	sm . subtype = r_read_le32 ( b + 4 )	148:1:3548:3580	578922	6	True				
ANR	578996	AssignmentExpression	sm . subtype = r_read_le32 ( b + 4 )		578922	0		=			
ANR	578997	MemberAccess	sm . subtype		578922	0					
ANR	578998	Identifier	sm		578922	0					
ANR	578999	Identifier	subtype		578922	1					
ANR	579000	CallExpression	r_read_le32 ( b + 4 )		578922	1					
ANR	579001	Callee	r_read_le32		578922	0					
ANR	579002	Identifier	r_read_le32		578922	0					
ANR	579003	ArgumentList	b + 4		578922	1					
ANR	579004	Argument	b + 4		578922	0					
ANR	579005	AdditiveExpression	b + 4		578922	0		+			
ANR	579006	Identifier	b		578922	0					
ANR	579007	PrimaryExpression	4		578922	1					
ANR	579008	ExpressionStatement	sm . cpu = subtypeString ( sm . subtype )	149:1:3583:3618	578922	7	True				
ANR	579009	AssignmentExpression	sm . cpu = subtypeString ( sm . subtype )		578922	0		=			
ANR	579010	MemberAccess	sm . cpu		578922	0					
ANR	579011	Identifier	sm		578922	0					
ANR	579012	Identifier	cpu		578922	1					
ANR	579013	CallExpression	subtypeString ( sm . subtype )		578922	1					
ANR	579014	Callee	subtypeString		578922	0					
ANR	579015	Identifier	subtypeString		578922	0					
ANR	579016	ArgumentList	sm . subtype		578922	1					
ANR	579017	Argument	sm . subtype		578922	0					
ANR	579018	MemberAccess	sm . subtype		578922	0					
ANR	579019	Identifier	sm		578922	0					
ANR	579020	Identifier	subtype		578922	1					
ANR	579021	ExpressionStatement	sm . n_segments = r_read_le32 ( b + 8 )	151:1:3715:3750	578922	8	True				
ANR	579022	AssignmentExpression	sm . n_segments = r_read_le32 ( b + 8 )		578922	0		=			
ANR	579023	MemberAccess	sm . n_segments		578922	0					
ANR	579024	Identifier	sm		578922	0					
ANR	579025	Identifier	n_segments		578922	1					
ANR	579026	CallExpression	r_read_le32 ( b + 8 )		578922	1					
ANR	579027	Callee	r_read_le32		578922	0					
ANR	579028	Identifier	r_read_le32		578922	0					
ANR	579029	ArgumentList	b + 8		578922	1					
ANR	579030	Argument	b + 8		578922	0					
ANR	579031	AdditiveExpression	b + 8		578922	0		+			
ANR	579032	Identifier	b		578922	0					
ANR	579033	PrimaryExpression	8		578922	1					
ANR	579034	ExpressionStatement	sm . namelen = r_read_le32 ( b + 0xc )	153:1:3793:3827	578922	9	True				
ANR	579035	AssignmentExpression	sm . namelen = r_read_le32 ( b + 0xc )		578922	0		=			
ANR	579036	MemberAccess	sm . namelen		578922	0					
ANR	579037	Identifier	sm		578922	0					
ANR	579038	Identifier	namelen		578922	1					
ANR	579039	CallExpression	r_read_le32 ( b + 0xc )		578922	1					
ANR	579040	Callee	r_read_le32		578922	0					
ANR	579041	Identifier	r_read_le32		578922	0					
ANR	579042	ArgumentList	b + 0xc		578922	1					
ANR	579043	Argument	b + 0xc		578922	0					
ANR	579044	AdditiveExpression	b + 0xc		578922	0		+			
ANR	579045	Identifier	b		578922	0					
ANR	579046	PrimaryExpression	0xc		578922	1					
ANR	579047	IdentifierDeclStatement	int delta = 16 ;	157:1:3992:4006	578922	10	True				
ANR	579048	IdentifierDecl	delta = 16		578922	0					
ANR	579049	IdentifierDeclType	int		578922	0					
ANR	579050	Identifier	delta		578922	1					
ANR	579051	AssignmentExpression	delta = 16		578922	2		=			
ANR	579052	Identifier	delta		578922	0					
ANR	579053	PrimaryExpression	16		578922	1					
ANR	579054	ExpressionStatement	"sm . segments = parseSegments ( buf , off + sm . namelen + delta , sm . n_segments )"	158:1:4009:4083	578922	11	True				
ANR	579055	AssignmentExpression	"sm . segments = parseSegments ( buf , off + sm . namelen + delta , sm . n_segments )"		578922	0		=			
ANR	579056	MemberAccess	sm . segments		578922	0					
ANR	579057	Identifier	sm		578922	0					
ANR	579058	Identifier	segments		578922	1					
ANR	579059	CallExpression	"parseSegments ( buf , off + sm . namelen + delta , sm . n_segments )"		578922	1					
ANR	579060	Callee	parseSegments		578922	0					
ANR	579061	Identifier	parseSegments		578922	0					
ANR	579062	ArgumentList	buf		578922	1					
ANR	579063	Argument	buf		578922	0					
ANR	579064	Identifier	buf		578922	0					
ANR	579065	Argument	off + sm . namelen + delta		578922	1					
ANR	579066	AdditiveExpression	off + sm . namelen + delta		578922	0		+			
ANR	579067	Identifier	off		578922	0					
ANR	579068	AdditiveExpression	sm . namelen + delta		578922	1		+			
ANR	579069	MemberAccess	sm . namelen		578922	0					
ANR	579070	Identifier	sm		578922	0					
ANR	579071	Identifier	namelen		578922	1					
ANR	579072	Identifier	delta		578922	1					
ANR	579073	Argument	sm . n_segments		578922	2					
ANR	579074	MemberAccess	sm . n_segments		578922	0					
ANR	579075	Identifier	sm		578922	0					
ANR	579076	Identifier	n_segments		578922	1					
ANR	579077	ExpressionStatement	sm . size = ( sm . n_segments * 32 ) + 120	159:1:4086:4122	578922	12	True				
ANR	579078	AssignmentExpression	sm . size = ( sm . n_segments * 32 ) + 120		578922	0		=			
ANR	579079	MemberAccess	sm . size		578922	0					
ANR	579080	Identifier	sm		578922	0					
ANR	579081	Identifier	size		578922	1					
ANR	579082	AdditiveExpression	( sm . n_segments * 32 ) + 120		578922	1		+			
ANR	579083	MultiplicativeExpression	sm . n_segments * 32		578922	0		*			
ANR	579084	MemberAccess	sm . n_segments		578922	0					
ANR	579085	Identifier	sm		578922	0					
ANR	579086	Identifier	n_segments		578922	1					
ANR	579087	PrimaryExpression	32		578922	1					
ANR	579088	PrimaryExpression	120		578922	1					
ANR	579089	IdentifierDeclStatement	"ut32 nm , nm2 , nm3 ;"	162:1:4152:4169	578922	13	True				
ANR	579090	IdentifierDecl	nm		578922	0					
ANR	579091	IdentifierDeclType	ut32		578922	0					
ANR	579092	Identifier	nm		578922	1					
ANR	579093	IdentifierDecl	nm2		578922	1					
ANR	579094	IdentifierDeclType	ut32		578922	0					
ANR	579095	Identifier	nm2		578922	1					
ANR	579096	IdentifierDecl	nm3		578922	2					
ANR	579097	IdentifierDeclType	ut32		578922	0					
ANR	579098	Identifier	nm3		578922	1					
ANR	579099	ExpressionStatement	"r_buf_read_at ( buf , off + sm . size , ( ut8 * ) & nm , sizeof ( nm ) )"	163:1:4172:4230	578922	14	True				
ANR	579100	CallExpression	"r_buf_read_at ( buf , off + sm . size , ( ut8 * ) & nm , sizeof ( nm ) )"		578922	0					
ANR	579101	Callee	r_buf_read_at		578922	0					
ANR	579102	Identifier	r_buf_read_at		578922	0					
ANR	579103	ArgumentList	buf		578922	1					
ANR	579104	Argument	buf		578922	0					
ANR	579105	Identifier	buf		578922	0					
ANR	579106	Argument	off + sm . size		578922	1					
ANR	579107	AdditiveExpression	off + sm . size		578922	0		+			
ANR	579108	Identifier	off		578922	0					
ANR	579109	MemberAccess	sm . size		578922	1					
ANR	579110	Identifier	sm		578922	0					
ANR	579111	Identifier	size		578922	1					
ANR	579112	Argument	( ut8 * ) & nm		578922	2					
ANR	579113	CastExpression	( ut8 * ) & nm		578922	0					
ANR	579114	CastTarget	ut8 *		578922	0					
ANR	579115	UnaryOperationExpression	& nm		578922	1					
ANR	579116	UnaryOperator	&		578922	0					
ANR	579117	Identifier	nm		578922	1					
ANR	579118	Argument	sizeof ( nm )		578922	3					
ANR	579119	SizeofExpression	sizeof ( nm )		578922	0					
ANR	579120	Sizeof	sizeof		578922	0					
ANR	579121	SizeofOperand	nm		578922	1					
ANR	579122	ExpressionStatement	"r_buf_read_at ( buf , off + sm . size + 4 , ( ut8 * ) & nm2 , sizeof ( nm2 ) )"	164:1:4233:4297	578922	15	True				
ANR	579123	CallExpression	"r_buf_read_at ( buf , off + sm . size + 4 , ( ut8 * ) & nm2 , sizeof ( nm2 ) )"		578922	0					
ANR	579124	Callee	r_buf_read_at		578922	0					
ANR	579125	Identifier	r_buf_read_at		578922	0					
ANR	579126	ArgumentList	buf		578922	1					
ANR	579127	Argument	buf		578922	0					
ANR	579128	Identifier	buf		578922	0					
ANR	579129	Argument	off + sm . size + 4		578922	1					
ANR	579130	AdditiveExpression	off + sm . size + 4		578922	0		+			
ANR	579131	Identifier	off		578922	0					
ANR	579132	AdditiveExpression	sm . size + 4		578922	1		+			
ANR	579133	MemberAccess	sm . size		578922	0					
ANR	579134	Identifier	sm		578922	0					
ANR	579135	Identifier	size		578922	1					
ANR	579136	PrimaryExpression	4		578922	1					
ANR	579137	Argument	( ut8 * ) & nm2		578922	2					
ANR	579138	CastExpression	( ut8 * ) & nm2		578922	0					
ANR	579139	CastTarget	ut8 *		578922	0					
ANR	579140	UnaryOperationExpression	& nm2		578922	1					
ANR	579141	UnaryOperator	&		578922	0					
ANR	579142	Identifier	nm2		578922	1					
ANR	579143	Argument	sizeof ( nm2 )		578922	3					
ANR	579144	SizeofExpression	sizeof ( nm2 )		578922	0					
ANR	579145	Sizeof	sizeof		578922	0					
ANR	579146	SizeofOperand	nm2		578922	1					
ANR	579147	ExpressionStatement	"r_buf_read_at ( buf , off + sm . size + 8 , ( ut8 * ) & nm3 , sizeof ( nm3 ) )"	165:1:4300:4364	578922	16	True				
ANR	579148	CallExpression	"r_buf_read_at ( buf , off + sm . size + 8 , ( ut8 * ) & nm3 , sizeof ( nm3 ) )"		578922	0					
ANR	579149	Callee	r_buf_read_at		578922	0					
ANR	579150	Identifier	r_buf_read_at		578922	0					
ANR	579151	ArgumentList	buf		578922	1					
ANR	579152	Argument	buf		578922	0					
ANR	579153	Identifier	buf		578922	0					
ANR	579154	Argument	off + sm . size + 8		578922	1					
ANR	579155	AdditiveExpression	off + sm . size + 8		578922	0		+			
ANR	579156	Identifier	off		578922	0					
ANR	579157	AdditiveExpression	sm . size + 8		578922	1		+			
ANR	579158	MemberAccess	sm . size		578922	0					
ANR	579159	Identifier	sm		578922	0					
ANR	579160	Identifier	size		578922	1					
ANR	579161	PrimaryExpression	8		578922	1					
ANR	579162	Argument	( ut8 * ) & nm3		578922	2					
ANR	579163	CastExpression	( ut8 * ) & nm3		578922	0					
ANR	579164	CastTarget	ut8 *		578922	0					
ANR	579165	UnaryOperationExpression	& nm3		578922	1					
ANR	579166	UnaryOperator	&		578922	0					
ANR	579167	Identifier	nm3		578922	1					
ANR	579168	Argument	sizeof ( nm3 )		578922	3					
ANR	579169	SizeofExpression	sizeof ( nm3 )		578922	0					
ANR	579170	Sizeof	sizeof		578922	0					
ANR	579171	SizeofOperand	nm3		578922	1					
ANR	579172	IfStatement	if ( r_read_le32 ( & nm3 ) != 0xa1b22b1a )		578922	17					
ANR	579173	Condition	r_read_le32 ( & nm3 ) != 0xa1b22b1a	167:5:4438:4469	578922	0	True				
ANR	579174	EqualityExpression	r_read_le32 ( & nm3 ) != 0xa1b22b1a		578922	0		!=			
ANR	579175	CallExpression	r_read_le32 ( & nm3 )		578922	0					
ANR	579176	Callee	r_read_le32		578922	0					
ANR	579177	Identifier	r_read_le32		578922	0					
ANR	579178	ArgumentList	& nm3		578922	1					
ANR	579179	Argument	& nm3		578922	0					
ANR	579180	UnaryOperationExpression	& nm3		578922	0					
ANR	579181	UnaryOperator	&		578922	0					
ANR	579182	Identifier	nm3		578922	1					
ANR	579183	PrimaryExpression	0xa1b22b1a		578922	1					
ANR	579184	CompoundStatement		29:39:1281:1281	578922	1					
ANR	579185	ExpressionStatement	sm . size -= 8	168:2:4476:4488	578922	0	True				
ANR	579186	AssignmentExpression	sm . size -= 8		578922	0		-=			
ANR	579187	MemberAccess	sm . size		578922	0					
ANR	579188	Identifier	sm		578922	0					
ANR	579189	Identifier	size		578922	1					
ANR	579190	PrimaryExpression	8		578922	1					
ANR	579191	ReturnStatement	return sm ;	171:1:4513:4522	578922	18	True				
ANR	579192	Identifier	sm		578922	0					
ANR	579193	ReturnType	static SymbolsMetadata		578922	1					
ANR	579194	Identifier	parseMetadata		578922	2					
ANR	579195	ParameterList	"RBuffer * buf , int off"		578922	3					
ANR	579196	Parameter	RBuffer * buf	139:37:3167:3178	578922	0	True				
ANR	579197	ParameterType	RBuffer *		578922	0					
ANR	579198	Identifier	buf		578922	1					
ANR	579199	Parameter	int off	139:51:3181:3187	578922	1	True				
ANR	579200	ParameterType	int		578922	0					
ANR	579201	Identifier	off		578922	1					
ANR	579202	CFGEntryNode	ENTRY		578922		True				
ANR	579203	CFGExitNode	EXIT		578922		True				
ANR	579204	Symbol	sm . namelen		578922						
ANR	579205	Symbol	& sm		578922						
ANR	579206	Symbol	delta		578922						
ANR	579207	Symbol	sm . n_segments		578922						
ANR	579208	Symbol	sm . cpu		578922						
ANR	579209	Symbol	nm2		578922						
ANR	579210	Symbol	nm3		578922						
ANR	579211	Symbol	typeString		578922						
ANR	579212	Symbol	sm		578922						
ANR	579213	Symbol	sm . arch		578922						
ANR	579214	Symbol	sm . segments		578922						
ANR	579215	Symbol	subtypeString		578922						
ANR	579216	Symbol	b		578922						
ANR	579217	Symbol	r_read_le32		578922						
ANR	579218	Symbol	sm . size		578922						
ANR	579219	Symbol	& nm		578922						
ANR	579220	Symbol	off		578922						
ANR	579221	Symbol	buf		578922						
ANR	579222	Symbol	& sm . bits		578922						
ANR	579223	Symbol	parseSegments		578922						
ANR	579224	Symbol	sm . cputype		578922						
ANR	579225	Symbol	sm . addr		578922						
ANR	579226	Symbol	& nm3		578922						
ANR	579227	Symbol	sm . subtype		578922						
ANR	579228	Symbol	& nm2		578922						
ANR	579229	Symbol	nm		578922						
ANR	579230	Function	printSymbolsHeader	176:0:4571:5068							
ANR	579231	FunctionDef	printSymbolsHeader (SymbolsHeader sh)		579230	0					
ANR	579232	CompoundStatement		176:49:4620:5068	579230	0					
ANR	579233	ExpressionStatement	"eprintf ( ""0x%08x  uuid     "" , 24 )"	178:1:4679:4712	579230	0	True				
ANR	579234	CallExpression	"eprintf ( ""0x%08x  uuid     "" , 24 )"		579230	0					
ANR	579235	Callee	eprintf		579230	0					
ANR	579236	Identifier	eprintf		579230	0					
ANR	579237	ArgumentList	"""0x%08x  uuid     """		579230	1					
ANR	579238	Argument	"""0x%08x  uuid     """		579230	0					
ANR	579239	PrimaryExpression	"""0x%08x  uuid     """		579230	0					
ANR	579240	Argument	24		579230	1					
ANR	579241	PrimaryExpression	24		579230	0					
ANR	579242	IdentifierDeclStatement	int i ;	179:1:4715:4720	579230	1	True				
ANR	579243	IdentifierDecl	i		579230	0					
ANR	579244	IdentifierDeclType	int		579230	0					
ANR	579245	Identifier	i		579230	1					
ANR	579246	ForStatement	for ( i = 0 ; i < 16 ; i ++ )		579230	2					
ANR	579247	ForInit	i = 0 ;	180:6:4728:4733	579230	0	True				
ANR	579248	AssignmentExpression	i = 0		579230	0		=			
ANR	579249	Identifier	i		579230	0					
ANR	579250	PrimaryExpression	0		579230	1					
ANR	579251	Condition	i < 16	180:13:4735:4740	579230	1	True				
ANR	579252	RelationalExpression	i < 16		579230	0		<			
ANR	579253	Identifier	i		579230	0					
ANR	579254	PrimaryExpression	16		579230	1					
ANR	579255	PostIncDecOperationExpression	i ++	180:21:4743:4745	579230	2	True				
ANR	579256	Identifier	i		579230	0					
ANR	579257	IncDec	++		579230	1					
ANR	579258	CompoundStatement		5:26:127:127	579230	3					
ANR	579259	ExpressionStatement	"eprintf ( ""%02x"" , sh . uuid [ i ] )"	181:2:4752:4780	579230	0	True				
ANR	579260	CallExpression	"eprintf ( ""%02x"" , sh . uuid [ i ] )"		579230	0					
ANR	579261	Callee	eprintf		579230	0					
ANR	579262	Identifier	eprintf		579230	0					
ANR	579263	ArgumentList	"""%02x"""		579230	1					
ANR	579264	Argument	"""%02x"""		579230	0					
ANR	579265	PrimaryExpression	"""%02x"""		579230	0					
ANR	579266	Argument	sh . uuid [ i ]		579230	1					
ANR	579267	ArrayIndexing	sh . uuid [ i ]		579230	0					
ANR	579268	MemberAccess	sh . uuid		579230	0					
ANR	579269	Identifier	sh		579230	0					
ANR	579270	Identifier	uuid		579230	1					
ANR	579271	Identifier	i		579230	1					
ANR	579272	ExpressionStatement	"eprintf ( ""\\n"" )"	183:1:4786:4800	579230	3	True				
ANR	579273	CallExpression	"eprintf ( ""\\n"" )"		579230	0					
ANR	579274	Callee	eprintf		579230	0					
ANR	579275	Identifier	eprintf		579230	0					
ANR	579276	ArgumentList	"""\\n"""		579230	1					
ANR	579277	Argument	"""\\n"""		579230	0					
ANR	579278	PrimaryExpression	"""\\n"""		579230	0					
ANR	579279	ReturnType	static void		579230	1					
ANR	579280	Identifier	printSymbolsHeader		579230	2					
ANR	579281	ParameterList	SymbolsHeader sh		579230	3					
ANR	579282	Parameter	SymbolsHeader sh	176:31:4602:4617	579230	0	True				
ANR	579283	ParameterType	SymbolsHeader		579230	0					
ANR	579284	Identifier	sh		579230	1					
ANR	579285	CFGEntryNode	ENTRY		579230		True				
ANR	579286	CFGExitNode	EXIT		579230		True				
ANR	579287	Symbol	sh . uuid		579230						
ANR	579288	Symbol	* i		579230						
ANR	579289	Symbol	sh		579230						
ANR	579290	Symbol	* sh		579230						
ANR	579291	Symbol	i		579230						
ANR	579292	Symbol	* sh . uuid		579230						
ANR	579293	Function	parseStrings	190:0:5071:6222							
ANR	579294	FunctionDef	"parseStrings (RBuffer * buf , int string_section , int string_section_end)"		579293	0					
ANR	579295	CompoundStatement		190:85:5156:6222	579293	0					
ANR	579296	IdentifierDeclStatement	int sss = string_section_end + string_section ;	191:1:5159:5204	579293	0	True				
ANR	579297	IdentifierDecl	sss = string_section_end + string_section		579293	0					
ANR	579298	IdentifierDeclType	int		579293	0					
ANR	579299	Identifier	sss		579293	1					
ANR	579300	AssignmentExpression	sss = string_section_end + string_section		579293	2		=			
ANR	579301	Identifier	sss		579293	0					
ANR	579302	AdditiveExpression	string_section_end + string_section		579293	1		+			
ANR	579303	Identifier	string_section_end		579293	0					
ANR	579304	Identifier	string_section		579293	1					
ANR	579305	IfStatement	if ( sss < 1 )		579293	1					
ANR	579306	Condition	sss < 1	192:5:5211:5217	579293	0	True				
ANR	579307	RelationalExpression	sss < 1		579293	0		<			
ANR	579308	Identifier	sss		579293	0					
ANR	579309	PrimaryExpression	1		579293	1					
ANR	579310	CompoundStatement		3:14:63:63	579293	1					
ANR	579311	ReturnStatement	return NULL ;	193:2:5224:5235	579293	0	True				
ANR	579312	Identifier	NULL		579293	0					
ANR	579313	IdentifierDeclStatement	"char * b = calloc ( 1 , sss ) ;"	195:1:5241:5266	579293	2	True				
ANR	579314	IdentifierDecl	"* b = calloc ( 1 , sss )"		579293	0					
ANR	579315	IdentifierDeclType	char *		579293	0					
ANR	579316	Identifier	b		579293	1					
ANR	579317	AssignmentExpression	"* b = calloc ( 1 , sss )"		579293	2		=			
ANR	579318	Identifier	b		579293	0					
ANR	579319	CallExpression	"calloc ( 1 , sss )"		579293	1					
ANR	579320	Callee	calloc		579293	0					
ANR	579321	Identifier	calloc		579293	0					
ANR	579322	ArgumentList	1		579293	1					
ANR	579323	Argument	1		579293	0					
ANR	579324	PrimaryExpression	1		579293	0					
ANR	579325	Argument	sss		579293	1					
ANR	579326	Identifier	sss		579293	0					
ANR	579327	IfStatement	if ( ! b )		579293	3					
ANR	579328	Condition	! b	196:5:5273:5274	579293	0	True				
ANR	579329	UnaryOperationExpression	! b		579293	0					
ANR	579330	UnaryOperator	!		579293	0					
ANR	579331	Identifier	b		579293	1					
ANR	579332	CompoundStatement		7:9:120:120	579293	1					
ANR	579333	ReturnStatement	return NULL ;	197:2:5281:5292	579293	0	True				
ANR	579334	Identifier	NULL		579293	0					
ANR	579335	IdentifierDeclStatement	int o = 0 ;	199:1:5298:5307	579293	4	True				
ANR	579336	IdentifierDecl	o = 0		579293	0					
ANR	579337	IdentifierDeclType	int		579293	0					
ANR	579338	Identifier	o		579293	1					
ANR	579339	AssignmentExpression	o = 0		579293	2		=			
ANR	579340	Identifier	o		579293	0					
ANR	579341	PrimaryExpression	0		579293	1					
ANR	579342	IdentifierDeclStatement	char * s = b ;	200:1:5310:5321	579293	5	True				
ANR	579343	IdentifierDecl	* s = b		579293	0					
ANR	579344	IdentifierDeclType	char *		579293	0					
ANR	579345	Identifier	s		579293	1					
ANR	579346	AssignmentExpression	* s = b		579293	2		=			
ANR	579347	Identifier	b		579293	0					
ANR	579348	Identifier	b		579293	1					
ANR	579349	IdentifierDeclStatement	char * os = s ;	201:1:5324:5336	579293	6	True				
ANR	579350	IdentifierDecl	* os = s		579293	0					
ANR	579351	IdentifierDeclType	char *		579293	0					
ANR	579352	Identifier	os		579293	1					
ANR	579353	AssignmentExpression	* os = s		579293	2		=			
ANR	579354	Identifier	s		579293	0					
ANR	579355	Identifier	s		579293	1					
ANR	579356	IdentifierDeclStatement	int nstrings = 0 ;	202:1:5339:5355	579293	7	True				
ANR	579357	IdentifierDecl	nstrings = 0		579293	0					
ANR	579358	IdentifierDeclType	int		579293	0					
ANR	579359	Identifier	nstrings		579293	1					
ANR	579360	AssignmentExpression	nstrings = 0		579293	2		=			
ANR	579361	Identifier	nstrings		579293	0					
ANR	579362	PrimaryExpression	0		579293	1					
ANR	579363	IdentifierDeclStatement	"int available = r_buf_read_at ( buf , string_section , ( ut8 * ) b , sss ) ;"	204:1:5359:5425	579293	8	True				
ANR	579364	IdentifierDecl	"available = r_buf_read_at ( buf , string_section , ( ut8 * ) b , sss )"		579293	0					
ANR	579365	IdentifierDeclType	int		579293	0					
ANR	579366	Identifier	available		579293	1					
ANR	579367	AssignmentExpression	"available = r_buf_read_at ( buf , string_section , ( ut8 * ) b , sss )"		579293	2		=			
ANR	579368	Identifier	available		579293	0					
ANR	579369	CallExpression	"r_buf_read_at ( buf , string_section , ( ut8 * ) b , sss )"		579293	1					
ANR	579370	Callee	r_buf_read_at		579293	0					
ANR	579371	Identifier	r_buf_read_at		579293	0					
ANR	579372	ArgumentList	buf		579293	1					
ANR	579373	Argument	buf		579293	0					
ANR	579374	Identifier	buf		579293	0					
ANR	579375	Argument	string_section		579293	1					
ANR	579376	Identifier	string_section		579293	0					
ANR	579377	Argument	( ut8 * ) b		579293	2					
ANR	579378	CastExpression	( ut8 * ) b		579293	0					
ANR	579379	CastTarget	ut8 *		579293	0					
ANR	579380	Identifier	b		579293	1					
ANR	579381	Argument	sss		579293	3					
ANR	579382	Identifier	sss		579293	0					
ANR	579383	IfStatement	if ( available != sss )		579293	9					
ANR	579384	Condition	available != sss	205:5:5432:5447	579293	0	True				
ANR	579385	EqualityExpression	available != sss		579293	0		!=			
ANR	579386	Identifier	available		579293	0					
ANR	579387	Identifier	sss		579293	1					
ANR	579388	CompoundStatement		16:23:293:293	579293	1					
ANR	579389	ExpressionStatement	sss = available	206:2:5454:5469	579293	0	True				
ANR	579390	AssignmentExpression	sss = available		579293	0		=			
ANR	579391	Identifier	sss		579293	0					
ANR	579392	Identifier	available		579293	1					
ANR	579393	IfStatement	if ( sss < 1 )		579293	10					
ANR	579394	Condition	sss < 1	208:5:5479:5485	579293	0	True				
ANR	579395	RelationalExpression	sss < 1		579293	0		<			
ANR	579396	Identifier	sss		579293	0					
ANR	579397	PrimaryExpression	1		579293	1					
ANR	579398	CompoundStatement		19:14:331:331	579293	1					
ANR	579399	Statement	eprintf	209:2:5492:5498	579293	0	True				
ANR	579400	Statement	(	209:10:5500:5500	579293	1	True				
ANR	579401	Statement	"""Cannot read strings at 0x%08"""	209:11:5501:5530	579293	2	True				
ANR	579402	Statement	PFMT64x	209:42:5532:5538	579293	3	True				
ANR	579403	Statement	"""\\n"""	209:50:5540:5543	579293	4	True				
ANR	579404	Statement	","	209:54:5544:5544	579293	5	True				
ANR	579405	Statement	(	209:56:5546:5546	579293	6	True				
ANR	579406	Statement	ut64	209:57:5547:5550	579293	7	True				
ANR	579407	Statement	)	209:61:5551:5551	579293	8	True				
ANR	579408	Statement	string_section	209:62:5552:5565	579293	9	True				
ANR	579409	Statement	)	209:76:5566:5566	579293	10	True				
ANR	579410	ExpressionStatement		209:77:5567:5567	579293	11	True				
ANR	579411	ExpressionStatement	free ( b )	210:2:5571:5579	579293	12	True				
ANR	579412	CallExpression	free ( b )		579293	0					
ANR	579413	Callee	free		579293	0					
ANR	579414	Identifier	free		579293	0					
ANR	579415	ArgumentList	b		579293	1					
ANR	579416	Argument	b		579293	0					
ANR	579417	Identifier	b		579293	0					
ANR	579418	ReturnStatement	return NULL ;	211:2:5583:5594	579293	13	True				
ANR	579419	Identifier	NULL		579293	0					
ANR	579420	IdentifierDeclStatement	RList * res = r_list_newf ( ( RListFree ) r_bin_string_free ) ;	213:1:5600:5655	579293	11	True				
ANR	579421	IdentifierDecl	* res = r_list_newf ( ( RListFree ) r_bin_string_free )		579293	0					
ANR	579422	IdentifierDeclType	RList *		579293	0					
ANR	579423	Identifier	res		579293	1					
ANR	579424	AssignmentExpression	* res = r_list_newf ( ( RListFree ) r_bin_string_free )		579293	2		=			
ANR	579425	Identifier	res		579293	0					
ANR	579426	CallExpression	r_list_newf ( ( RListFree ) r_bin_string_free )		579293	1					
ANR	579427	Callee	r_list_newf		579293	0					
ANR	579428	Identifier	r_list_newf		579293	0					
ANR	579429	ArgumentList	( RListFree ) r_bin_string_free		579293	1					
ANR	579430	Argument	( RListFree ) r_bin_string_free		579293	0					
ANR	579431	CastExpression	( RListFree ) r_bin_string_free		579293	0					
ANR	579432	CastTarget	RListFree		579293	0					
ANR	579433	Identifier	r_bin_string_free		579293	1					
ANR	579434	IdentifierDeclStatement	int i ;	214:1:5658:5663	579293	12	True				
ANR	579435	IdentifierDecl	i		579293	0					
ANR	579436	IdentifierDeclType	int		579293	0					
ANR	579437	Identifier	i		579293	1					
ANR	579438	IdentifierDeclStatement	char * s_end = s + sss ;	215:1:5666:5687	579293	13	True				
ANR	579439	IdentifierDecl	* s_end = s + sss		579293	0					
ANR	579440	IdentifierDeclType	char *		579293	0					
ANR	579441	Identifier	s_end		579293	1					
ANR	579442	AssignmentExpression	* s_end = s + sss		579293	2		=			
ANR	579443	Identifier	s_end		579293	0					
ANR	579444	AdditiveExpression	s + sss		579293	1		+			
ANR	579445	Identifier	s		579293	0					
ANR	579446	Identifier	sss		579293	1					
ANR	579447	ForStatement	for ( i = 0 ; true ; i ++ )		579293	14					
ANR	579448	ForInit	i = 0 ;	216:6:5695:5700	579293	0	True				
ANR	579449	AssignmentExpression	i = 0		579293	0		=			
ANR	579450	Identifier	i		579293	0					
ANR	579451	PrimaryExpression	0		579293	1					
ANR	579452	Condition	true	216:13:5702:5705	579293	1	True				
ANR	579453	Identifier	true		579293	0					
ANR	579454	PostIncDecOperationExpression	i ++	216:19:5708:5710	579293	2	True				
ANR	579455	Identifier	i		579293	0					
ANR	579456	IncDec	++		579293	1					
ANR	579457	CompoundStatement		37:2:756:792	579293	3					
ANR	579458	ExpressionStatement	o = s - os	217:2:5717:5727	579293	0	True				
ANR	579459	AssignmentExpression	o = s - os		579293	0		=			
ANR	579460	Identifier	o		579293	0					
ANR	579461	AdditiveExpression	s - os		579293	1		-			
ANR	579462	Identifier	s		579293	0					
ANR	579463	Identifier	os		579293	1					
ANR	579464	IfStatement	if ( string_section + o + 8 > string_section_end )		579293	1					
ANR	579465	Condition	string_section + o + 8 > string_section_end	218:6:5735:5777	579293	0	True				
ANR	579466	RelationalExpression	string_section + o + 8 > string_section_end		579293	0		>			
ANR	579467	AdditiveExpression	string_section + o + 8		579293	0		+			
ANR	579468	Identifier	string_section		579293	0					
ANR	579469	AdditiveExpression	o + 8		579293	1		+			
ANR	579470	Identifier	o		579293	0					
ANR	579471	PrimaryExpression	8		579293	1					
ANR	579472	Identifier	string_section_end		579293	1					
ANR	579473	CompoundStatement		29:51:623:623	579293	1					
ANR	579474	BreakStatement	break ;	219:3:5785:5790	579293	0	True				
ANR	579475	IfStatement	if ( s + 4 > s_end )		579293	2					
ANR	579476	Condition	s + 4 > s_end	221:6:5802:5814	579293	0	True				
ANR	579477	RelationalExpression	s + 4 > s_end		579293	0		>			
ANR	579478	AdditiveExpression	s + 4		579293	0		+			
ANR	579479	Identifier	s		579293	0					
ANR	579480	PrimaryExpression	4		579293	1					
ANR	579481	Identifier	s_end		579293	1					
ANR	579482	CompoundStatement		32:21:660:660	579293	1					
ANR	579483	BreakStatement	break ;	222:3:5822:5827	579293	0	True				
ANR	579484	ExpressionStatement	nstrings ++	224:2:5835:5845	579293	3	True				
ANR	579485	PostIncDecOperationExpression	nstrings ++		579293	0					
ANR	579486	Identifier	nstrings		579293	0					
ANR	579487	IncDec	++		579293	1					
ANR	579488	IdentifierDeclStatement	RBinString * bs = R_NEW0 ( RBinString ) ;	226:2:5913:5949	579293	4	True				
ANR	579489	IdentifierDecl	* bs = R_NEW0 ( RBinString )		579293	0					
ANR	579490	IdentifierDeclType	RBinString *		579293	0					
ANR	579491	Identifier	bs		579293	1					
ANR	579492	AssignmentExpression	* bs = R_NEW0 ( RBinString )		579293	2		=			
ANR	579493	Identifier	bs		579293	0					
ANR	579494	CallExpression	R_NEW0 ( RBinString )		579293	1					
ANR	579495	Callee	R_NEW0		579293	0					
ANR	579496	Identifier	R_NEW0		579293	0					
ANR	579497	ArgumentList	RBinString		579293	1					
ANR	579498	Argument	RBinString		579293	0					
ANR	579499	Identifier	RBinString		579293	0					
ANR	579500	IfStatement	if ( ! bs )		579293	5					
ANR	579501	Condition	! bs	227:6:5957:5959	579293	0	True				
ANR	579502	UnaryOperationExpression	! bs		579293	0					
ANR	579503	UnaryOperator	!		579293	0					
ANR	579504	Identifier	bs		579293	1					
ANR	579505	CompoundStatement		38:11:805:805	579293	1					
ANR	579506	BreakStatement	break ;	228:3:5967:5972	579293	0	True				
ANR	579507	ExpressionStatement	bs -> string = strdup ( s )	230:2:5980:6003	579293	6	True				
ANR	579508	AssignmentExpression	bs -> string = strdup ( s )		579293	0		=			
ANR	579509	PtrMemberAccess	bs -> string		579293	0					
ANR	579510	Identifier	bs		579293	0					
ANR	579511	Identifier	string		579293	1					
ANR	579512	CallExpression	strdup ( s )		579293	1					
ANR	579513	Callee	strdup		579293	0					
ANR	579514	Identifier	strdup		579293	0					
ANR	579515	ArgumentList	s		579293	1					
ANR	579516	Argument	s		579293	0					
ANR	579517	Identifier	s		579293	0					
ANR	579518	ExpressionStatement	bs -> vaddr = o + string_section	232:2:6033:6063	579293	7	True				
ANR	579519	AssignmentExpression	bs -> vaddr = o + string_section		579293	0		=			
ANR	579520	PtrMemberAccess	bs -> vaddr		579293	0					
ANR	579521	Identifier	bs		579293	0					
ANR	579522	Identifier	vaddr		579293	1					
ANR	579523	AdditiveExpression	o + string_section		579293	1		+			
ANR	579524	Identifier	o		579293	0					
ANR	579525	Identifier	string_section		579293	1					
ANR	579526	ExpressionStatement	bs -> paddr = o + string_section	233:2:6067:6097	579293	8	True				
ANR	579527	AssignmentExpression	bs -> paddr = o + string_section		579293	0		=			
ANR	579528	PtrMemberAccess	bs -> paddr		579293	0					
ANR	579529	Identifier	bs		579293	0					
ANR	579530	Identifier	paddr		579293	1					
ANR	579531	AdditiveExpression	o + string_section		579293	1		+			
ANR	579532	Identifier	o		579293	0					
ANR	579533	Identifier	string_section		579293	1					
ANR	579534	ExpressionStatement	bs -> ordinal = i	234:2:6101:6116	579293	9	True				
ANR	579535	AssignmentExpression	bs -> ordinal = i		579293	0		=			
ANR	579536	PtrMemberAccess	bs -> ordinal		579293	0					
ANR	579537	Identifier	bs		579293	0					
ANR	579538	Identifier	ordinal		579293	1					
ANR	579539	Identifier	i		579293	1					
ANR	579540	ExpressionStatement	bs -> length = strlen ( s )	235:2:6120:6143	579293	10	True				
ANR	579541	AssignmentExpression	bs -> length = strlen ( s )		579293	0		=			
ANR	579542	PtrMemberAccess	bs -> length		579293	0					
ANR	579543	Identifier	bs		579293	0					
ANR	579544	Identifier	length		579293	1					
ANR	579545	CallExpression	strlen ( s )		579293	1					
ANR	579546	Callee	strlen		579293	0					
ANR	579547	Identifier	strlen		579293	0					
ANR	579548	ArgumentList	s		579293	1					
ANR	579549	Argument	s		579293	0					
ANR	579550	Identifier	s		579293	0					
ANR	579551	ExpressionStatement	"r_list_append ( res , bs )"	236:2:6147:6170	579293	11	True				
ANR	579552	CallExpression	"r_list_append ( res , bs )"		579293	0					
ANR	579553	Callee	r_list_append		579293	0					
ANR	579554	Identifier	r_list_append		579293	0					
ANR	579555	ArgumentList	res		579293	1					
ANR	579556	Argument	res		579293	0					
ANR	579557	Identifier	res		579293	0					
ANR	579558	Argument	bs		579293	1					
ANR	579559	Identifier	bs		579293	0					
ANR	579560	ExpressionStatement	s += bs -> length + 1	237:2:6174:6193	579293	12	True				
ANR	579561	AssignmentExpression	s += bs -> length + 1		579293	0		+=			
ANR	579562	Identifier	s		579293	0					
ANR	579563	AdditiveExpression	bs -> length + 1		579293	1		+			
ANR	579564	PtrMemberAccess	bs -> length		579293	0					
ANR	579565	Identifier	bs		579293	0					
ANR	579566	Identifier	length		579293	1					
ANR	579567	PrimaryExpression	1		579293	1					
ANR	579568	ExpressionStatement	free ( b )	239:1:6199:6207	579293	15	True				
ANR	579569	CallExpression	free ( b )		579293	0					
ANR	579570	Callee	free		579293	0					
ANR	579571	Identifier	free		579293	0					
ANR	579572	ArgumentList	b		579293	1					
ANR	579573	Argument	b		579293	0					
ANR	579574	Identifier	b		579293	0					
ANR	579575	ReturnStatement	return res ;	240:1:6210:6220	579293	16	True				
ANR	579576	Identifier	res		579293	0					
ANR	579577	ReturnType	static RList *		579293	1					
ANR	579578	Identifier	parseStrings		579293	2					
ANR	579579	ParameterList	"RBuffer * buf , int string_section , int string_section_end"		579293	3					
ANR	579580	Parameter	RBuffer * buf	190:27:5098:5109	579293	0	True				
ANR	579581	ParameterType	RBuffer *		579293	0					
ANR	579582	Identifier	buf		579293	1					
ANR	579583	Parameter	int string_section	190:41:5112:5129	579293	1	True				
ANR	579584	ParameterType	int		579293	0					
ANR	579585	Identifier	string_section		579293	1					
ANR	579586	Parameter	int string_section_end	190:61:5132:5153	579293	2	True				
ANR	579587	ParameterType	int		579293	0					
ANR	579588	Identifier	string_section_end		579293	1					
ANR	579589	CFGEntryNode	ENTRY		579293		True				
ANR	579590	CFGExitNode	EXIT		579293		True				
ANR	579591	Symbol	nstrings		579293						
ANR	579592	Symbol	bs -> paddr		579293						
ANR	579593	Symbol	string_section		579293						
ANR	579594	Symbol	available		579293						
ANR	579595	Symbol	bs -> string		579293						
ANR	579596	Symbol	calloc		579293						
ANR	579597	Symbol	bs -> ordinal		579293						
ANR	579598	Symbol	s_end		579293						
ANR	579599	Symbol	bs		579293						
ANR	579600	Symbol	bs -> vaddr		579293						
ANR	579601	Symbol	strlen		579293						
ANR	579602	Symbol	sss		579293						
ANR	579603	Symbol	* bs		579293						
ANR	579604	Symbol	res		579293						
ANR	579605	Symbol	b		579293						
ANR	579606	Symbol	NULL		579293						
ANR	579607	Symbol	os		579293						
ANR	579608	Symbol	r_list_newf		579293						
ANR	579609	Symbol	RBinString		579293						
ANR	579610	Symbol	i		579293						
ANR	579611	Symbol	o		579293						
ANR	579612	Symbol	R_NEW0		579293						
ANR	579613	Symbol	buf		579293						
ANR	579614	Symbol	s		579293						
ANR	579615	Symbol	bs -> length		579293						
ANR	579616	Symbol	r_buf_read_at		579293						
ANR	579617	Symbol	true		579293						
ANR	579618	Symbol	strdup		579293						
ANR	579619	Symbol	r_bin_string_free		579293						
ANR	579620	Symbol	string_section_end		579293						
ANR	579621	ClassDef	symbols_dragons_t	243:8:6233:6363							
ANR	579622	DeclStmt									
ANR	579623	Decl							int	int	foo
ANR	579624	DeclStmt									
ANR	579625	Decl							ut32	ut32	addr
ANR	579626	DeclStmt									
ANR	579627	Decl							ut32	ut32	size
ANR	579628	DeclStmt									
ANR	579629	Decl							ut32	ut32	n_sections
ANR	579630	DeclStmt									
ANR	579631	Decl							ut32	ut32	n_segments
ANR	579632	DeclStmt									
ANR	579633	Decl							ut32	ut32	n_symbols
ANR	579634	DeclStmt									
ANR	579635	Decl							symbols_dragons_t	symbols_dragons_t	SymbolsDragons
ANR	579636	Function	parseDragons	252:0:6366:9387							
ANR	579637	FunctionDef	"parseDragons (RBuffer * buf , int off , int bits)"		579636	0					
ANR	579638	CompoundStatement		252:68:6434:9387	579636	0					
ANR	579639	IdentifierDeclStatement	SymbolsDragons sd = { 0 } ;	253:1:6437:6462	579636	0	True				
ANR	579640	IdentifierDecl	sd = { 0 }		579636	0					
ANR	579641	IdentifierDeclType	SymbolsDragons		579636	0					
ANR	579642	Identifier	sd		579636	1					
ANR	579643	AssignmentExpression	sd = { 0 }		579636	2		=			
ANR	579644	Identifier	sd		579636	0					
ANR	579645	InitializerList	0		579636	1					
ANR	579646	PrimaryExpression	0		579636	0					
ANR	579647	ExpressionStatement	sd . addr = off	254:1:6465:6478	579636	1	True				
ANR	579648	AssignmentExpression	sd . addr = off		579636	0		=			
ANR	579649	MemberAccess	sd . addr		579636	0					
ANR	579650	Identifier	sd		579636	0					
ANR	579651	Identifier	addr		579636	1					
ANR	579652	Identifier	off		579636	1					
ANR	579653	ExpressionStatement	sd . size = 1	255:1:6481:6492	579636	2	True				
ANR	579654	AssignmentExpression	sd . size = 1		579636	0		=			
ANR	579655	MemberAccess	sd . size		579636	0					
ANR	579656	Identifier	sd		579636	0					
ANR	579657	Identifier	size		579636	1					
ANR	579658	PrimaryExpression	1		579636	1					
ANR	579659	IdentifierDeclStatement	"D eprintf ( ""Dragons at 0x%x\\n"" , off ) ;"	256:1:6495:6531	579636	3	True				
ANR	579660	IdentifierDecl	"eprintf ( ""Dragons at 0x%x\\n"" , off )"		579636	0					
ANR	579661	IdentifierDeclType	D		579636	0					
ANR	579662	Identifier	eprintf		579636	1					
ANR	579663	Expression	"""Dragons at 0x%x\\n"" , off"		579636	2					
ANR	579664	PrimaryExpression	"""Dragons at 0x%x\\n"""		579636	0					
ANR	579665	Identifier	off		579636	1					
ANR	579666	IdentifierDeclStatement	const int size = r_buf_size ( buf ) - off ;	257:1:6534:6573	579636	4	True				
ANR	579667	IdentifierDecl	size = r_buf_size ( buf ) - off		579636	0					
ANR	579668	IdentifierDeclType	const int		579636	0					
ANR	579669	Identifier	size		579636	1					
ANR	579670	AssignmentExpression	size = r_buf_size ( buf ) - off		579636	2		=			
ANR	579671	Identifier	size		579636	0					
ANR	579672	AdditiveExpression	r_buf_size ( buf ) - off		579636	1		-			
ANR	579673	CallExpression	r_buf_size ( buf )		579636	0					
ANR	579674	Callee	r_buf_size		579636	0					
ANR	579675	Identifier	r_buf_size		579636	0					
ANR	579676	ArgumentList	buf		579636	1					
ANR	579677	Argument	buf		579636	0					
ANR	579678	Identifier	buf		579636	0					
ANR	579679	Identifier	off		579636	1					
ANR	579680	IfStatement	if ( size < 1 )		579636	5					
ANR	579681	Condition	size < 1	258:5:6580:6587	579636	0	True				
ANR	579682	RelationalExpression	size < 1		579636	0		<			
ANR	579683	Identifier	size		579636	0					
ANR	579684	PrimaryExpression	1		579636	1					
ANR	579685	CompoundStatement		7:15:155:155	579636	1					
ANR	579686	ReturnStatement	return sd ;	259:2:6594:6603	579636	0	True				
ANR	579687	Identifier	sd		579636	0					
ANR	579688	IdentifierDeclStatement	ut8 * b = malloc ( size ) ;	261:1:6609:6631	579636	6	True				
ANR	579689	IdentifierDecl	* b = malloc ( size )		579636	0					
ANR	579690	IdentifierDeclType	ut8 *		579636	0					
ANR	579691	Identifier	b		579636	1					
ANR	579692	AssignmentExpression	* b = malloc ( size )		579636	2		=			
ANR	579693	Identifier	b		579636	0					
ANR	579694	CallExpression	malloc ( size )		579636	1					
ANR	579695	Callee	malloc		579636	0					
ANR	579696	Identifier	malloc		579636	0					
ANR	579697	ArgumentList	size		579636	1					
ANR	579698	Argument	size		579636	0					
ANR	579699	Identifier	size		579636	0					
ANR	579700	IfStatement	if ( ! b )		579636	7					
ANR	579701	Condition	! b	262:5:6638:6639	579636	0	True				
ANR	579702	UnaryOperationExpression	! b		579636	0					
ANR	579703	UnaryOperator	!		579636	0					
ANR	579704	Identifier	b		579636	1					
ANR	579705	CompoundStatement		11:9:207:207	579636	1					
ANR	579706	ReturnStatement	return sd ;	263:2:6646:6655	579636	0	True				
ANR	579707	Identifier	sd		579636	0					
ANR	579708	IdentifierDeclStatement	"int available = r_buf_read_at ( buf , off , b , size ) ;"	265:1:6661:6710	579636	8	True				
ANR	579709	IdentifierDecl	"available = r_buf_read_at ( buf , off , b , size )"		579636	0					
ANR	579710	IdentifierDeclType	int		579636	0					
ANR	579711	Identifier	available		579636	1					
ANR	579712	AssignmentExpression	"available = r_buf_read_at ( buf , off , b , size )"		579636	2		=			
ANR	579713	Identifier	available		579636	0					
ANR	579714	CallExpression	"r_buf_read_at ( buf , off , b , size )"		579636	1					
ANR	579715	Callee	r_buf_read_at		579636	0					
ANR	579716	Identifier	r_buf_read_at		579636	0					
ANR	579717	ArgumentList	buf		579636	1					
ANR	579718	Argument	buf		579636	0					
ANR	579719	Identifier	buf		579636	0					
ANR	579720	Argument	off		579636	1					
ANR	579721	Identifier	off		579636	0					
ANR	579722	Argument	b		579636	2					
ANR	579723	Identifier	b		579636	0					
ANR	579724	Argument	size		579636	3					
ANR	579725	Identifier	size		579636	0					
ANR	579726	IfStatement	if ( available != size )		579636	9					
ANR	579727	Condition	available != size	266:5:6717:6733	579636	0	True				
ANR	579728	EqualityExpression	available != size		579636	0		!=			
ANR	579729	Identifier	available		579636	0					
ANR	579730	Identifier	size		579636	1					
ANR	579731	CompoundStatement		15:24:301:301	579636	1					
ANR	579732	ExpressionStatement	"eprintf ( ""Warning: r_buf_read_at failed\\n"" )"	267:2:6740:6783	579636	0	True				
ANR	579733	CallExpression	"eprintf ( ""Warning: r_buf_read_at failed\\n"" )"		579636	0					
ANR	579734	Callee	eprintf		579636	0					
ANR	579735	Identifier	eprintf		579636	0					
ANR	579736	ArgumentList	"""Warning: r_buf_read_at failed\\n"""		579636	1					
ANR	579737	Argument	"""Warning: r_buf_read_at failed\\n"""		579636	0					
ANR	579738	PrimaryExpression	"""Warning: r_buf_read_at failed\\n"""		579636	0					
ANR	579739	ReturnStatement	return sd ;	268:2:6787:6796	579636	1	True				
ANR	579740	Identifier	sd		579636	0					
ANR	579741	Statement	0x00000138	274:1:6967:6976	579636	10	True				
ANR	579742	Statement	|	274:12:6978:6978	579636	11	True				
ANR	579743	Statement	1	274:13:6979:6979	579636	12	True				
ANR	579744	Statement	a2b	274:14:6980:6982	579636	13	True				
ANR	579745	Statement	b2a1	274:18:6984:6987	579636	14	True				
ANR	579746	Statement	0300	274:23:6989:6992	579636	15	True				
ANR	579747	Statement	0000	274:28:6994:6997	579636	16	True				
ANR	579748	Statement	1	274:33:6999:6999	579636	17	True				
ANR	579749	Statement	a2b	274:34:7000:7002	579636	18	True				
ANR	579750	Statement	b2a1	274:38:7004:7007	579636	19	True				
ANR	579751	Statement	e055	274:43:7009:7012	579636	20	True				
ANR	579752	Statement	0000	274:48:7014:7017	579636	21	True				
ANR	579753	Statement	|	274:52:7018:7018	579636	22	True				
ANR	579754	Statement	.	274:54:7020:7020	579636	23	True				
ANR	579755	Statement	+	274:55:7021:7021	579636	24	True				
ANR	579756	Statement	...	274:56:7022:7024	579636	25	True				
ANR	579757	Statement	...	274:59:7025:7027	579636	26	True				
ANR	579758	Statement	.	274:62:7028:7028	579636	27	True				
ANR	579759	Statement	+	274:63:7029:7029	579636	28	True				
ANR	579760	Statement	...	274:64:7030:7032	579636	29	True				
ANR	579761	Statement	U	274:67:7033:7033	579636	30	True				
ANR	579762	Statement	.	274:68:7034:7034	579636	31	True				
ANR	579763	Statement	.	274:69:7035:7035	579636	32	True				
ANR	579764	Statement	n_segments	275:25:7062:7071	579636	33	True				
ANR	579765	Statement	--	275:36:7073:7074	579636	34	True				
ANR	579766	Statement	--	275:38:7075:7076	579636	35	True				
ANR	579767	Statement	.	275:40:7077:7077	579636	36	True				
ANR	579768	Statement	.	275:51:7088:7088	579636	37	True				
ANR	579769	Statement	--	275:52:7089:7090	579636	38	True				
ANR	579770	Statement	-	275:54:7091:7091	579636	39	True				
ANR	579771	Statement	how	275:56:7093:7095	579636	40	True				
ANR	579772	Statement	many	275:60:7097:7100	579636	41	True				
ANR	579773	Statement	sections	275:65:7102:7109	579636	42	True				
ANR	579774	Statement	?	275:74:7111:7111	579636	43	True				
ANR	579775	Statement	0x00000148	276:1:7114:7123	579636	44	True				
ANR	579776	Statement	|	276:12:7125:7125	579636	45	True				
ANR	579777	Statement	0100	276:13:7126:7129	579636	46	True				
ANR	579778	Statement	0000	276:18:7131:7134	579636	47	True				
ANR	579779	Statement	ca55	276:23:7136:7139	579636	48	True				
ANR	579780	Statement	0000	276:28:7141:7144	579636	49	True				
ANR	579781	Statement	0400	276:33:7146:7149	579636	50	True				
ANR	579782	Statement	0000	276:38:7151:7154	579636	51	True				
ANR	579783	Statement	1800	276:43:7156:7159	579636	52	True				
ANR	579784	Statement	0000	276:48:7161:7164	579636	53	True				
ANR	579785	Statement	|	276:52:7165:7165	579636	54	True				
ANR	579786	Statement	...	276:54:7167:7169	579636	55	True				
ANR	579787	Statement	.	276:57:7170:7170	579636	56	True				
ANR	579788	Statement	.	276:58:7171:7171	579636	57	True				
ANR	579789	Statement	U	276:59:7172:7172	579636	58	True				
ANR	579790	Statement	...	276:60:7173:7175	579636	59	True				
ANR	579791	Statement	...	276:63:7176:7178	579636	60	True				
ANR	579792	Statement	...	276:66:7179:7181	579636	61	True				
ANR	579793	Statement	.	276:69:7182:7182	579636	62	True				
ANR	579794	Statement	.	277:14:7198:7198	579636	63	True				
ANR	579795	Statement	--	277:15:7199:7200	579636	64	True				
ANR	579796	Statement	--	277:17:7201:7202	579636	65	True				
ANR	579797	Statement	how	277:20:7204:7206	579636	66	True				
ANR	579798	Statement	many	277:24:7208:7211	579636	67	True				
ANR	579799	Statement	symbols	277:29:7213:7219	579636	68	True				
ANR	579800	Statement	?	277:36:7220:7220	579636	69	True				
ANR	579801	Statement	0xc7	277:38:7222:7225	579636	70	True				
ANR	579802	Statement	0x00000158	278:1:7228:7237	579636	71	True				
ANR	579803	Statement	|	278:12:7239:7239	579636	72	True				
ANR	579804	Statement	c700	278:13:7240:7243	579636	73	True				
ANR	579805	Statement	0000	278:18:7245:7248	579636	74	True				
ANR	579806	Statement	0000	278:23:7250:7253	579636	75	True				
ANR	579807	Statement	0000	278:28:7255:7258	579636	76	True				
ANR	579808	Statement	0000	278:33:7260:7263	579636	77	True				
ANR	579809	Statement	0000	278:38:7265:7268	579636	78	True				
ANR	579810	Statement	0104	278:43:7270:7273	579636	79	True				
ANR	579811	Statement	0000	278:48:7275:7278	579636	80	True				
ANR	579812	Statement	|	278:52:7279:7279	579636	81	True				
ANR	579813	Statement	...	278:54:7281:7283	579636	82	True				
ANR	579814	Statement	...	278:57:7284:7286	579636	83	True				
ANR	579815	Statement	...	278:60:7287:7289	579636	84	True				
ANR	579816	Statement	...	278:63:7290:7292	579636	85	True				
ANR	579817	Statement	...	278:66:7293:7295	579636	86	True				
ANR	579818	Statement	.	278:69:7296:7296	579636	87	True				
ANR	579819	Statement	0x00000168	279:1:7299:7308	579636	88	True				
ANR	579820	Statement	|	279:12:7310:7310	579636	89	True				
ANR	579821	Statement	250	279:13:7311:7313	579636	90	True				
ANR	579822	Statement	b	279:16:7314:7314	579636	91	True				
ANR	579823	Statement	e803	279:18:7316:7319	579636	92	True				
ANR	579824	Statement	0000	279:23:7321:7324	579636	93	True				
ANR	579825	Statement	0100	279:28:7326:7329	579636	94	True				
ANR	579826	Statement	0000	279:33:7331:7334	579636	95	True				
ANR	579827	Statement	0000	279:38:7336:7339	579636	96	True				
ANR	579828	Statement	bd55	279:43:7341:7344	579636	97	True				
ANR	579829	Statement	0000	279:48:7346:7349	579636	98	True				
ANR	579830	Statement	|	279:52:7350:7350	579636	99	True				
ANR	579831	Statement	%	279:54:7352:7352	579636	100	True				
ANR	579832	Statement	...	279:55:7353:7355	579636	101	True				
ANR	579833	Statement	...	279:58:7356:7358	579636	102	True				
ANR	579834	Statement	...	279:61:7359:7361	579636	103	True				
ANR	579835	Statement	...	279:64:7362:7364	579636	104	True				
ANR	579836	Statement	U	279:67:7365:7365	579636	105	True				
ANR	579837	Statement	.	279:68:7366:7366	579636	106	True				
ANR	579838	Statement	.	279:69:7367:7367	579636	107	True				
ANR	579839	Statement	0x00000178	280:1:7370:7379	579636	108	True				
ANR	579840	Statement	|	280:12:7381:7381	579636	109	True				
ANR	579841	Statement	91	280:13:7382:7383	579636	110	True				
ANR	579842	Statement	bb	280:15:7384:7385	579636	111	True				
ANR	579843	Statement	e903	280:18:7387:7390	579636	112	True				
ANR	579844	Statement	e35a	280:23:7392:7395	579636	113	True				
ANR	579845	Statement	b42c	280:28:7397:7400	579636	114	True				
ANR	579846	Statement	93	280:33:7402:7403	579636	115	True				
ANR	579847	Statement	a4	280:35:7404:7405	579636	116	True				
ANR	579848	Statement	340	280:38:7407:7409	579636	117	True				
ANR	579849	Statement	a	280:41:7410:7410	579636	118	True				
ANR	579850	Statement	8746	280:43:7412:7415	579636	119	True				
ANR	579851	Statement	9489	280:48:7417:7420	579636	120	True				
ANR	579852	Statement	|	280:52:7421:7421	579636	121	True				
ANR	579853	Statement	...	280:54:7423:7425	579636	122	True				
ANR	579854	Statement	.	280:57:7426:7426	579636	123	True				
ANR	579855	Statement	.	280:58:7427:7427	579636	124	True				
ANR	579856	Statement	Z	280:59:7428:7428	579636	125	True				
ANR	579857	Statement	.	280:60:7429:7429	579636	126	True				
ANR	579858	Statement	","	280:61:7430:7430	579636	127	True				
ANR	579859	Statement	.	280:62:7431:7431	579636	128	True				
ANR	579860	Statement	.4	280:63:7432:7433	579636	129	True				
ANR	579861	Statement	.	280:65:7434:7434	579636	130	True				
ANR	579862	Statement	.	280:66:7435:7435	579636	131	True				
ANR	579863	Statement	F	280:67:7436:7436	579636	132	True				
ANR	579864	Statement	.	280:68:7437:7437	579636	133	True				
ANR	579865	Statement	.	280:69:7438:7438	579636	134	True				
ANR	579866	Statement	0x00000188	281:1:7441:7450	579636	135	True				
ANR	579867	Statement	|	281:12:7452:7452	579636	136	True				
ANR	579868	Statement	0	281:13:7453:7453	579636	137	True				
ANR	579869	Statement	cea	281:14:7454:7456	579636	138	True				
ANR	579870	Statement	4	281:18:7458:7458	579636	139	True				
ANR	579871	Statement	c40	281:19:7459:7461	579636	140	True				
ANR	579872	Statement	0	281:23:7463:7463	579636	141	True				
ANR	579873	Statement	c00	281:24:7464:7466	579636	142	True				
ANR	579874	Statement	0000	281:28:7468:7471	579636	143	True				
ANR	579875	Statement	0	281:33:7473:7473	579636	144	True				
ANR	579876	Statement	900	281:34:7474:7476	579636	145	True				
ANR	579877	Statement	0000	281:38:7478:7481	579636	146	True				
ANR	579878	Statement	0000	281:43:7483:7486	579636	147	True				
ANR	579879	Statement	0000	281:48:7488:7491	579636	148	True				
ANR	579880	Statement	|	281:52:7492:7492	579636	149	True				
ANR	579881	Statement	.	281:54:7494:7494	579636	150	True				
ANR	579882	Statement	.	281:55:7495:7495	579636	151	True				
ANR	579883	Statement	L	281:56:7496:7496	579636	152	True				
ANR	579884	Statement	...	281:58:7498:7500	579636	153	True				
ANR	579885	Statement	...	281:61:7501:7503	579636	154	True				
ANR	579886	Statement	...	281:64:7504:7506	579636	155	True				
ANR	579887	Statement	...	281:67:7507:7509	579636	156	True				
ANR	579888	Statement	0x00000198	282:1:7512:7521	579636	157	True				
ANR	579889	Statement	|	282:12:7523:7523	579636	158	True				
ANR	579890	Statement	0000	282:13:7524:7527	579636	159	True				
ANR	579891	Statement	0000	282:18:7529:7532	579636	160	True				
ANR	579892	Statement	0000	282:23:7534:7537	579636	161	True				
ANR	579893	Statement	0000	282:28:7539:7542	579636	162	True				
ANR	579894	Statement	0000	282:33:7544:7547	579636	163	True				
ANR	579895	Statement	0000	282:38:7549:7552	579636	164	True				
ANR	579896	Statement	0000	282:43:7554:7557	579636	165	True				
ANR	579897	Statement	0000	282:48:7559:7562	579636	166	True				
ANR	579898	Statement	|	282:52:7563:7563	579636	167	True				
ANR	579899	Statement	...	282:54:7565:7567	579636	168	True				
ANR	579900	Statement	...	282:57:7568:7570	579636	169	True				
ANR	579901	Statement	...	282:60:7571:7573	579636	170	True				
ANR	579902	Statement	...	282:63:7574:7576	579636	171	True				
ANR	579903	Statement	...	282:66:7577:7579	579636	172	True				
ANR	579904	Statement	.	282:69:7580:7580	579636	173	True				
ANR	579905	Statement	0x000001a8	283:1:7583:7592	579636	174	True				
ANR	579906	Statement	|	283:12:7594:7594	579636	175	True				
ANR	579907	Statement	00	283:13:7595:7596	579636	176	True				
ANR	579908	Statement	80	283:15:7597:7598	579636	177	True				
ANR	579909	Statement	0000	283:18:7600:7603	579636	178	True				
ANR	579910	Statement	0000	283:23:7605:7608	579636	179	True				
ANR	579911	Statement	0000	283:28:7610:7613	579636	180	True				
ANR	579912	Statement	5f	283:33:7615:7616	579636	181	True				
ANR	579913	Statement	5f	283:35:7617:7618	579636	182	True				
ANR	579914	Statement	5445	283:38:7620:7623	579636	183	True				
ANR	579915	Statement	5854	283:43:7625:7628	579636	184	True				
ANR	579916	Statement	0000	283:48:7630:7633	579636	185	True				
ANR	579917	Statement	|	283:52:7634:7634	579636	186	True				
ANR	579918	Statement	...	283:54:7636:7638	579636	187	True				
ANR	579919	Statement	...	283:57:7639:7641	579636	188	True				
ANR	579920	Statement	.	283:60:7642:7642	579636	189	True				
ANR	579921	Statement	.	283:61:7643:7643	579636	190	True				
ANR	579922	Statement	__TEXT	283:62:7644:7649	579636	191	True				
ANR	579923	Statement	.	283:68:7650:7650	579636	192	True				
ANR	579924	Statement	.	283:69:7651:7651	579636	193	True				
ANR	579925	Statement	0x000001b8	284:1:7654:7663	579636	194	True				
ANR	579926	Statement	|	284:12:7665:7665	579636	195	True				
ANR	579927	Statement	0000	284:13:7666:7669	579636	196	True				
ANR	579928	Statement	0000	284:18:7671:7674	579636	197	True				
ANR	579929	Statement	0000	284:23:7676:7679	579636	198	True				
ANR	579930	Statement	0000	284:28:7681:7684	579636	199	True				
ANR	579931	Statement	00	284:33:7686:7687	579636	200	True				
ANR	579932	Statement	80	284:35:7688:7689	579636	201	True				
ANR	579933	Statement	0000	284:38:7691:7694	579636	202	True				
ANR	579934	Statement	0000	284:43:7696:7699	579636	203	True				
ANR	579935	Statement	0000	284:48:7701:7704	579636	204	True				
ANR	579936	Statement	|	284:52:7705:7705	579636	205	True				
ANR	579937	Statement	...	284:54:7707:7709	579636	206	True				
ANR	579938	Statement	...	284:57:7710:7712	579636	207	True				
ANR	579939	Statement	...	284:60:7713:7715	579636	208	True				
ANR	579940	Statement	...	284:63:7716:7718	579636	209	True				
ANR	579941	Statement	...	284:66:7719:7721	579636	210	True				
ANR	579942	Statement	.	284:69:7722:7722	579636	211	True				
ANR	579943	Statement	0x000001c8	285:1:7725:7734	579636	212	True				
ANR	579944	Statement	|	285:12:7736:7736	579636	213	True				
ANR	579945	Statement	0040	285:13:7737:7740	579636	214	True				
ANR	579946	Statement	0000	285:18:7742:7745	579636	215	True				
ANR	579947	Statement	0000	285:23:7747:7750	579636	216	True				
ANR	579948	Statement	0000	285:28:7752:7755	579636	217	True				
ANR	579949	Statement	5f	285:33:7757:7758	579636	218	True				
ANR	579950	Statement	5f	285:35:7759:7760	579636	219	True				
ANR	579951	Statement	4441	285:38:7762:7765	579636	220	True				
ANR	579952	Statement	5441	285:43:7767:7770	579636	221	True				
ANR	579953	Statement	0000	285:48:7772:7775	579636	222	True				
ANR	579954	Statement	|	285:52:7776:7776	579636	223	True				
ANR	579955	Statement	.	285:54:7778:7778	579636	224	True				
ANR	579956	Statement	...	285:56:7780:7782	579636	225	True				
ANR	579957	Statement	...	285:59:7783:7785	579636	226	True				
ANR	579958	Statement	__DATA	285:62:7786:7791	579636	227	True				
ANR	579959	Statement	.	285:68:7792:7792	579636	228	True				
ANR	579960	Statement	.	285:69:7793:7793	579636	229	True				
ANR	579961	Statement	0x000001d8	286:1:7796:7805	579636	230	True				
ANR	579962	Statement	|	286:12:7807:7807	579636	231	True				
ANR	579963	Statement	0000	286:13:7808:7811	579636	232	True				
ANR	579964	Statement	0000	286:18:7813:7816	579636	233	True				
ANR	579965	Statement	0000	286:23:7818:7821	579636	234	True				
ANR	579966	Statement	0000	286:28:7823:7826	579636	235	True				
ANR	579967	Statement	00	286:33:7828:7829	579636	236	True				
ANR	579968	Statement	c0	286:35:7830:7831	579636	237	True				
ANR	579969	Statement	0000	286:38:7833:7836	579636	238	True				
ANR	579970	Statement	0000	286:43:7838:7841	579636	239	True				
ANR	579971	Statement	0000	286:48:7843:7846	579636	240	True				
ANR	579972	Statement	|	286:52:7847:7847	579636	241	True				
ANR	579973	Statement	...	286:54:7849:7851	579636	242	True				
ANR	579974	Statement	...	286:57:7852:7854	579636	243	True				
ANR	579975	Statement	...	286:60:7855:7857	579636	244	True				
ANR	579976	Statement	...	286:63:7858:7860	579636	245	True				
ANR	579977	Statement	...	286:66:7861:7863	579636	246	True				
ANR	579978	Statement	.	286:69:7864:7864	579636	247	True				
ANR	579979	Statement	0x000001e8	287:1:7867:7876	579636	248	True				
ANR	579980	Statement	|	287:12:7878:7878	579636	249	True				
ANR	579981	Statement	0000	287:13:7879:7882	579636	250	True				
ANR	579982	Statement	0100	287:18:7884:7887	579636	251	True				
ANR	579983	Statement	0000	287:23:7889:7892	579636	252	True				
ANR	579984	Statement	0000	287:28:7894:7897	579636	253	True				
ANR	579985	Statement	5f	287:33:7899:7900	579636	254	True				
ANR	579986	Statement	5f	287:35:7901:7902	579636	255	True				
ANR	579987	Statement	4	287:38:7904:7904	579636	256	True				
ANR	579988	Statement	c4c	287:39:7905:7907	579636	257	True				
ANR	579989	Statement	564d	287:43:7909:7912	579636	258	True				
ANR	579990	Statement	0000	287:48:7914:7917	579636	259	True				
ANR	579991	Statement	|	287:52:7918:7918	579636	260	True				
ANR	579992	Statement	...	287:54:7920:7922	579636	261	True				
ANR	579993	Statement	...	287:57:7923:7925	579636	262	True				
ANR	579994	Statement	.	287:60:7926:7926	579636	263	True				
ANR	579995	Statement	.	287:61:7927:7927	579636	264	True				
ANR	579996	Statement	__LLVM	287:62:7928:7933	579636	265	True				
ANR	579997	Statement	.	287:68:7934:7934	579636	266	True				
ANR	579998	Statement	.	287:69:7935:7935	579636	267	True				
ANR	579999	Statement	0x000001f8	288:1:7938:7947	579636	268	True				
ANR	580000	Statement	|	288:12:7949:7949	579636	269	True				
ANR	580001	Statement	0000	288:13:7950:7953	579636	270	True				
ANR	580002	Statement	0000	288:18:7955:7958	579636	271	True				
ANR	580003	Statement	0000	288:23:7960:7963	579636	272	True				
ANR	580004	Statement	0000	288:28:7965:7968	579636	273	True				
ANR	580005	Statement	00	288:33:7970:7971	579636	274	True				
ANR	580006	Statement	c0	288:35:7972:7973	579636	275	True				
ANR	580007	Statement	0100	288:38:7975:7978	579636	276	True				
ANR	580008	Statement	0000	288:43:7980:7983	579636	277	True				
ANR	580009	Statement	0000	288:48:7985:7988	579636	278	True				
ANR	580010	Statement	|	288:52:7989:7989	579636	279	True				
ANR	580011	Statement	...	288:54:7991:7993	579636	280	True				
ANR	580012	Statement	...	288:57:7994:7996	579636	281	True				
ANR	580013	Statement	...	288:60:7997:7999	579636	282	True				
ANR	580014	Statement	...	288:63:8000:8002	579636	283	True				
ANR	580015	Statement	...	288:66:8003:8005	579636	284	True				
ANR	580016	Statement	.	288:69:8006:8006	579636	285	True				
ANR	580017	Statement	0x00000208	289:1:8009:8018	579636	286	True				
ANR	580018	Statement	|	289:12:8020:8020	579636	287	True				
ANR	580019	Statement	00	289:13:8021:8022	579636	288	True				
ANR	580020	Statement	c0	289:15:8023:8024	579636	289	True				
ANR	580021	Statement	0000	289:18:8026:8029	579636	290	True				
ANR	580022	Statement	0000	289:23:8031:8034	579636	291	True				
ANR	580023	Statement	0000	289:28:8036:8039	579636	292	True				
ANR	580024	Statement	5f	289:33:8041:8042	579636	293	True				
ANR	580025	Statement	5f	289:35:8043:8044	579636	294	True				
ANR	580026	Statement	4	289:38:8046:8046	579636	295	True				
ANR	580027	Statement	c49	289:39:8047:8049	579636	296	True				
ANR	580028	Statement	4e4	289:43:8051:8053	579636	297	True				
ANR	580029	Statement	b	289:46:8054:8054	579636	298	True				
ANR	580030	Statement	4544	289:48:8056:8059	579636	299	True				
ANR	580031	Statement	|	289:52:8060:8060	579636	300	True				
ANR	580032	Statement	...	289:54:8062:8064	579636	301	True				
ANR	580033	Statement	...	289:57:8065:8067	579636	302	True				
ANR	580034	Statement	.	289:60:8068:8068	579636	303	True				
ANR	580035	Statement	.	289:61:8069:8069	579636	304	True				
ANR	580036	Statement	__LINKED	289:62:8070:8077	579636	305	True				
ANR	580037	Statement	0x00000218	290:1:8080:8089	579636	306	True				
ANR	580038	Statement	|	290:12:8091:8091	579636	307	True				
ANR	580039	Statement	4954	290:13:8092:8095	579636	308	True				
ANR	580040	Statement	0000	290:18:8097:8100	579636	309	True				
ANR	580041	Statement	0000	290:23:8102:8105	579636	310	True				
ANR	580042	Statement	0000	290:28:8107:8110	579636	311	True				
ANR	580043	Statement	0000	290:33:8112:8115	579636	312	True				
ANR	580044	Statement	0000	290:38:8117:8120	579636	313	True				
ANR	580045	Statement	d069	290:43:8122:8125	579636	314	True				
ANR	580046	Statement	0000	290:48:8127:8130	579636	315	True				
ANR	580047	Statement	|	290:52:8131:8131	579636	316	True				
ANR	580048	Statement	IT	290:54:8133:8134	579636	317	True				
ANR	580049	Statement	...	290:56:8135:8137	579636	318	True				
ANR	580050	Statement	...	290:59:8138:8140	579636	319	True				
ANR	580051	Statement	...	290:62:8141:8143	579636	320	True				
ANR	580052	Statement	.	290:65:8144:8144	579636	321	True				
ANR	580053	Statement	.	290:66:8145:8145	579636	322	True				
ANR	580054	Statement	i	290:67:8146:8146	579636	323	True				
ANR	580055	Statement	.	290:68:8147:8147	579636	324	True				
ANR	580056	Statement	.	290:69:8148:8148	579636	325	True				
ANR	580057	IdentifierDeclStatement	int magicCombo = 0 ;	293:1:8193:8211	579636	326	True				
ANR	580058	IdentifierDecl	magicCombo = 0		579636	0					
ANR	580059	IdentifierDeclType	int		579636	0					
ANR	580060	Identifier	magicCombo		579636	1					
ANR	580061	AssignmentExpression	magicCombo = 0		579636	2		=			
ANR	580062	Identifier	magicCombo		579636	0					
ANR	580063	PrimaryExpression	0		579636	1					
ANR	580064	IfStatement	"if ( ! memcmp ( ""\\x1a\\x2b\\xb2\\xa1"" , b , 4 ) )"		579636	327					
ANR	580065	Condition	"! memcmp ( ""\\x1a\\x2b\\xb2\\xa1"" , b , 4 )"	294:5:8218:8251	579636	0	True				
ANR	580066	UnaryOperationExpression	"! memcmp ( ""\\x1a\\x2b\\xb2\\xa1"" , b , 4 )"		579636	0					
ANR	580067	UnaryOperator	!		579636	0					
ANR	580068	CallExpression	"memcmp ( ""\\x1a\\x2b\\xb2\\xa1"" , b , 4 )"		579636	1					
ANR	580069	Callee	memcmp		579636	0					
ANR	580070	Identifier	memcmp		579636	0					
ANR	580071	ArgumentList	"""\\x1a\\x2b\\xb2\\xa1"""		579636	1					
ANR	580072	Argument	"""\\x1a\\x2b\\xb2\\xa1"""		579636	0					
ANR	580073	PrimaryExpression	"""\\x1a\\x2b\\xb2\\xa1"""		579636	0					
ANR	580074	Argument	b		579636	1					
ANR	580075	Identifier	b		579636	0					
ANR	580076	Argument	4		579636	2					
ANR	580077	PrimaryExpression	4		579636	0					
ANR	580078	CompoundStatement		43:41:1819:1819	579636	1					
ANR	580079	ExpressionStatement	magicCombo ++	295:2:8270:8282	579636	0	True				
ANR	580080	PostIncDecOperationExpression	magicCombo ++		579636	0					
ANR	580081	Identifier	magicCombo		579636	0					
ANR	580082	IncDec	++		579636	1					
ANR	580083	IfStatement	"if ( ! memcmp ( ""\\x1a\\x2b\\xb2\\xa1"" , b + 8 , 4 ) )"		579636	328					
ANR	580084	Condition	"! memcmp ( ""\\x1a\\x2b\\xb2\\xa1"" , b + 8 , 4 )"	297:5:8292:8329	579636	0	True				
ANR	580085	UnaryOperationExpression	"! memcmp ( ""\\x1a\\x2b\\xb2\\xa1"" , b + 8 , 4 )"		579636	0					
ANR	580086	UnaryOperator	!		579636	0					
ANR	580087	CallExpression	"memcmp ( ""\\x1a\\x2b\\xb2\\xa1"" , b + 8 , 4 )"		579636	1					
ANR	580088	Callee	memcmp		579636	0					
ANR	580089	Identifier	memcmp		579636	0					
ANR	580090	ArgumentList	"""\\x1a\\x2b\\xb2\\xa1"""		579636	1					
ANR	580091	Argument	"""\\x1a\\x2b\\xb2\\xa1"""		579636	0					
ANR	580092	PrimaryExpression	"""\\x1a\\x2b\\xb2\\xa1"""		579636	0					
ANR	580093	Argument	b + 8		579636	1					
ANR	580094	AdditiveExpression	b + 8		579636	0		+			
ANR	580095	Identifier	b		579636	0					
ANR	580096	PrimaryExpression	8		579636	1					
ANR	580097	Argument	4		579636	2					
ANR	580098	PrimaryExpression	4		579636	0					
ANR	580099	CompoundStatement		46:45:1897:1897	579636	1					
ANR	580100	ExpressionStatement	magicCombo ++	298:2:8336:8348	579636	0	True				
ANR	580101	PostIncDecOperationExpression	magicCombo ++		579636	0					
ANR	580102	Identifier	magicCombo		579636	0					
ANR	580103	IncDec	++		579636	1					
ANR	580104	IfStatement	if ( magicCombo != 2 )		579636	329					
ANR	580105	Condition	magicCombo != 2	300:5:8358:8372	579636	0	True				
ANR	580106	EqualityExpression	magicCombo != 2		579636	0		!=			
ANR	580107	Identifier	magicCombo		579636	0					
ANR	580108	PrimaryExpression	2		579636	1					
ANR	580109	CompoundStatement		49:22:1940:1940	579636	1					
ANR	580110	ExpressionStatement	"available = r_buf_read_at ( buf , off - 8 , b , size )"	302:2:8402:8451	579636	0	True				
ANR	580111	AssignmentExpression	"available = r_buf_read_at ( buf , off - 8 , b , size )"		579636	0		=			
ANR	580112	Identifier	available		579636	0					
ANR	580113	CallExpression	"r_buf_read_at ( buf , off - 8 , b , size )"		579636	1					
ANR	580114	Callee	r_buf_read_at		579636	0					
ANR	580115	Identifier	r_buf_read_at		579636	0					
ANR	580116	ArgumentList	buf		579636	1					
ANR	580117	Argument	buf		579636	0					
ANR	580118	Identifier	buf		579636	0					
ANR	580119	Argument	off - 8		579636	1					
ANR	580120	AdditiveExpression	off - 8		579636	0		-			
ANR	580121	Identifier	off		579636	0					
ANR	580122	PrimaryExpression	8		579636	1					
ANR	580123	Argument	b		579636	2					
ANR	580124	Identifier	b		579636	0					
ANR	580125	Argument	size		579636	3					
ANR	580126	Identifier	size		579636	0					
ANR	580127	IfStatement	if ( available != size )		579636	1					
ANR	580128	Condition	available != size	303:6:8459:8475	579636	0	True				
ANR	580129	EqualityExpression	available != size		579636	0		!=			
ANR	580130	Identifier	available		579636	0					
ANR	580131	Identifier	size		579636	1					
ANR	580132	CompoundStatement		52:25:2043:2043	579636	1					
ANR	580133	ExpressionStatement	"eprintf ( ""Warning: r_buf_read_at failed\\n"" )"	304:3:8483:8526	579636	0	True				
ANR	580134	CallExpression	"eprintf ( ""Warning: r_buf_read_at failed\\n"" )"		579636	0					
ANR	580135	Callee	eprintf		579636	0					
ANR	580136	Identifier	eprintf		579636	0					
ANR	580137	ArgumentList	"""Warning: r_buf_read_at failed\\n"""		579636	1					
ANR	580138	Argument	"""Warning: r_buf_read_at failed\\n"""		579636	0					
ANR	580139	PrimaryExpression	"""Warning: r_buf_read_at failed\\n"""		579636	0					
ANR	580140	ReturnStatement	return sd ;	305:3:8531:8540	579636	1	True				
ANR	580141	Identifier	sd		579636	0					
ANR	580142	IfStatement	"if ( ! memcmp ( ""\\x1a\\x2b\\xb2\\xa1"" , b , 4 ) )"		579636	2					
ANR	580143	Condition	"! memcmp ( ""\\x1a\\x2b\\xb2\\xa1"" , b , 4 )"	307:6:8552:8585	579636	0	True				
ANR	580144	UnaryOperationExpression	"! memcmp ( ""\\x1a\\x2b\\xb2\\xa1"" , b , 4 )"		579636	0					
ANR	580145	UnaryOperator	!		579636	0					
ANR	580146	CallExpression	"memcmp ( ""\\x1a\\x2b\\xb2\\xa1"" , b , 4 )"		579636	1					
ANR	580147	Callee	memcmp		579636	0					
ANR	580148	Identifier	memcmp		579636	0					
ANR	580149	ArgumentList	"""\\x1a\\x2b\\xb2\\xa1"""		579636	1					
ANR	580150	Argument	"""\\x1a\\x2b\\xb2\\xa1"""		579636	0					
ANR	580151	PrimaryExpression	"""\\x1a\\x2b\\xb2\\xa1"""		579636	0					
ANR	580152	Argument	b		579636	1					
ANR	580153	Identifier	b		579636	0					
ANR	580154	Argument	4		579636	2					
ANR	580155	PrimaryExpression	4		579636	0					
ANR	580156	CompoundStatement		56:42:2153:2153	579636	1					
ANR	580157	ExpressionStatement	off -= 8	308:3:8605:8613	579636	0	True				
ANR	580158	AssignmentExpression	off -= 8		579636	0		-=			
ANR	580159	Identifier	off		579636	0					
ANR	580160	PrimaryExpression	8		579636	1					
ANR	580161	ElseStatement	else		579636	0					
ANR	580162	CompoundStatement		58:9:2189:2189	579636	0					
ANR	580163	ExpressionStatement	"eprintf ( ""0x%08x  parsing error: invalid magic retry\\n"" , off )"	310:3:8629:8690	579636	0	True				
ANR	580164	CallExpression	"eprintf ( ""0x%08x  parsing error: invalid magic retry\\n"" , off )"		579636	0					
ANR	580165	Callee	eprintf		579636	0					
ANR	580166	Identifier	eprintf		579636	0					
ANR	580167	ArgumentList	"""0x%08x  parsing error: invalid magic retry\\n"""		579636	1					
ANR	580168	Argument	"""0x%08x  parsing error: invalid magic retry\\n"""		579636	0					
ANR	580169	PrimaryExpression	"""0x%08x  parsing error: invalid magic retry\\n"""		579636	0					
ANR	580170	Argument	off		579636	1					
ANR	580171	Identifier	off		579636	0					
ANR	580172	IdentifierDeclStatement	"D eprintf ( ""0x%08x  magic  OK\\n"" , off ) ;"	313:1:8700:8738	579636	330	True				
ANR	580173	IdentifierDecl	"eprintf ( ""0x%08x  magic  OK\\n"" , off )"		579636	0					
ANR	580174	IdentifierDeclType	D		579636	0					
ANR	580175	Identifier	eprintf		579636	1					
ANR	580176	Expression	"""0x%08x  magic  OK\\n"" , off"		579636	2					
ANR	580177	PrimaryExpression	"""0x%08x  magic  OK\\n"""		579636	0					
ANR	580178	Identifier	off		579636	1					
ANR	580179	Statement	D	314:1:8741:8741	579636	331	True				
ANR	580180	CompoundStatement		64:2:2312:2349	579636	332					
ANR	580181	IdentifierDeclStatement	const int e0ss = r_read_le32 ( b + 12 ) ;	315:2:8747:8784	579636	0	True				
ANR	580182	IdentifierDecl	e0ss = r_read_le32 ( b + 12 )		579636	0					
ANR	580183	IdentifierDeclType	const int		579636	0					
ANR	580184	Identifier	e0ss		579636	1					
ANR	580185	AssignmentExpression	e0ss = r_read_le32 ( b + 12 )		579636	2		=			
ANR	580186	Identifier	e0ss		579636	0					
ANR	580187	CallExpression	r_read_le32 ( b + 12 )		579636	1					
ANR	580188	Callee	r_read_le32		579636	0					
ANR	580189	Identifier	r_read_le32		579636	0					
ANR	580190	ArgumentList	b + 12		579636	1					
ANR	580191	Argument	b + 12		579636	0					
ANR	580192	AdditiveExpression	b + 12		579636	0		+			
ANR	580193	Identifier	b		579636	0					
ANR	580194	PrimaryExpression	12		579636	1					
ANR	580195	ExpressionStatement	"eprintf ( ""0x%08x  eoss   0x%x\\n"" , off + 12 , e0ss )"	316:2:8788:8837	579636	1	True				
ANR	580196	CallExpression	"eprintf ( ""0x%08x  eoss   0x%x\\n"" , off + 12 , e0ss )"		579636	0					
ANR	580197	Callee	eprintf		579636	0					
ANR	580198	Identifier	eprintf		579636	0					
ANR	580199	ArgumentList	"""0x%08x  eoss   0x%x\\n"""		579636	1					
ANR	580200	Argument	"""0x%08x  eoss   0x%x\\n"""		579636	0					
ANR	580201	PrimaryExpression	"""0x%08x  eoss   0x%x\\n"""		579636	0					
ANR	580202	Argument	off + 12		579636	1					
ANR	580203	AdditiveExpression	off + 12		579636	0		+			
ANR	580204	Identifier	off		579636	0					
ANR	580205	PrimaryExpression	12		579636	1					
ANR	580206	Argument	e0ss		579636	2					
ANR	580207	Identifier	e0ss		579636	0					
ANR	580208	ExpressionStatement	sd . n_segments = r_read_le32 ( b + 24 )	318:1:8843:8879	579636	333	True				
ANR	580209	AssignmentExpression	sd . n_segments = r_read_le32 ( b + 24 )		579636	0		=			
ANR	580210	MemberAccess	sd . n_segments		579636	0					
ANR	580211	Identifier	sd		579636	0					
ANR	580212	Identifier	n_segments		579636	1					
ANR	580213	CallExpression	r_read_le32 ( b + 24 )		579636	1					
ANR	580214	Callee	r_read_le32		579636	0					
ANR	580215	Identifier	r_read_le32		579636	0					
ANR	580216	ArgumentList	b + 24		579636	1					
ANR	580217	Argument	b + 24		579636	0					
ANR	580218	AdditiveExpression	b + 24		579636	0		+			
ANR	580219	Identifier	b		579636	0					
ANR	580220	PrimaryExpression	24		579636	1					
ANR	580221	ExpressionStatement	sd . n_sections = r_read_le32 ( b + 28 )	319:1:8882:8918	579636	334	True				
ANR	580222	AssignmentExpression	sd . n_sections = r_read_le32 ( b + 28 )		579636	0		=			
ANR	580223	MemberAccess	sd . n_sections		579636	0					
ANR	580224	Identifier	sd		579636	0					
ANR	580225	Identifier	n_sections		579636	1					
ANR	580226	CallExpression	r_read_le32 ( b + 28 )		579636	1					
ANR	580227	Callee	r_read_le32		579636	0					
ANR	580228	Identifier	r_read_le32		579636	0					
ANR	580229	ArgumentList	b + 28		579636	1					
ANR	580230	Argument	b + 28		579636	0					
ANR	580231	AdditiveExpression	b + 28		579636	0		+			
ANR	580232	Identifier	b		579636	0					
ANR	580233	PrimaryExpression	28		579636	1					
ANR	580234	ExpressionStatement	"parseSegments ( buf , SEGMENTS_BEGIN , sd . n_segments )"	320:1:8921:8971	579636	335	True				
ANR	580235	CallExpression	"parseSegments ( buf , SEGMENTS_BEGIN , sd . n_segments )"		579636	0					
ANR	580236	Callee	parseSegments		579636	0					
ANR	580237	Identifier	parseSegments		579636	0					
ANR	580238	ArgumentList	buf		579636	1					
ANR	580239	Argument	buf		579636	0					
ANR	580240	Identifier	buf		579636	0					
ANR	580241	Argument	SEGMENTS_BEGIN		579636	1					
ANR	580242	Identifier	SEGMENTS_BEGIN		579636	0					
ANR	580243	Argument	sd . n_segments		579636	2					
ANR	580244	MemberAccess	sd . n_segments		579636	0					
ANR	580245	Identifier	sd		579636	0					
ANR	580246	Identifier	n_segments		579636	1					
ANR	580247	ExpressionStatement	sd . n_symbols = r_read_le32 ( b + 0x20 )	322:1:8975:9012	579636	336	True				
ANR	580248	AssignmentExpression	sd . n_symbols = r_read_le32 ( b + 0x20 )		579636	0		=			
ANR	580249	MemberAccess	sd . n_symbols		579636	0					
ANR	580250	Identifier	sd		579636	0					
ANR	580251	Identifier	n_symbols		579636	1					
ANR	580252	CallExpression	r_read_le32 ( b + 0x20 )		579636	1					
ANR	580253	Callee	r_read_le32		579636	0					
ANR	580254	Identifier	r_read_le32		579636	0					
ANR	580255	ArgumentList	b + 0x20		579636	1					
ANR	580256	Argument	b + 0x20		579636	0					
ANR	580257	AdditiveExpression	b + 0x20		579636	0		+			
ANR	580258	Identifier	b		579636	0					
ANR	580259	PrimaryExpression	0x20		579636	1					
ANR	580260	IfStatement	if ( sd . n_symbols > 1024 * 1024 )		579636	337					
ANR	580261	Condition	sd . n_symbols > 1024 * 1024	323:5:9043:9068	579636	0	True				
ANR	580262	RelationalExpression	sd . n_symbols > 1024 * 1024		579636	0		>			
ANR	580263	MemberAccess	sd . n_symbols		579636	0					
ANR	580264	Identifier	sd		579636	0					
ANR	580265	Identifier	n_symbols		579636	1					
ANR	580266	MultiplicativeExpression	1024 * 1024		579636	1		*			
ANR	580267	PrimaryExpression	1024		579636	0					
ANR	580268	PrimaryExpression	1024		579636	1					
ANR	580269	CompoundStatement		72:33:2636:2636	579636	1					
ANR	580270	ExpressionStatement	"eprintf ( ""Warning: too many symbols %d, truncated to 2048\\n"" , sd . n_symbols )"	324:2:9075:9150	579636	0	True				
ANR	580271	CallExpression	"eprintf ( ""Warning: too many symbols %d, truncated to 2048\\n"" , sd . n_symbols )"		579636	0					
ANR	580272	Callee	eprintf		579636	0					
ANR	580273	Identifier	eprintf		579636	0					
ANR	580274	ArgumentList	"""Warning: too many symbols %d, truncated to 2048\\n"""		579636	1					
ANR	580275	Argument	"""Warning: too many symbols %d, truncated to 2048\\n"""		579636	0					
ANR	580276	PrimaryExpression	"""Warning: too many symbols %d, truncated to 2048\\n"""		579636	0					
ANR	580277	Argument	sd . n_symbols		579636	1					
ANR	580278	MemberAccess	sd . n_symbols		579636	0					
ANR	580279	Identifier	sd		579636	0					
ANR	580280	Identifier	n_symbols		579636	1					
ANR	580281	ExpressionStatement	sd . n_symbols = 2048	325:2:9154:9173	579636	1	True				
ANR	580282	AssignmentExpression	sd . n_symbols = 2048		579636	0		=			
ANR	580283	MemberAccess	sd . n_symbols		579636	0					
ANR	580284	Identifier	sd		579636	0					
ANR	580285	Identifier	n_symbols		579636	1					
ANR	580286	PrimaryExpression	2048		579636	1					
ANR	580287	ExpressionStatement	sd . addr = off	327:1:9179:9192	579636	338	True				
ANR	580288	AssignmentExpression	sd . addr = off		579636	0		=			
ANR	580289	MemberAccess	sd . addr		579636	0					
ANR	580290	Identifier	sd		579636	0					
ANR	580291	Identifier	addr		579636	1					
ANR	580292	Identifier	off		579636	1					
ANR	580293	ExpressionStatement	sd . size = 0x70 - 8	328:1:9195:9213	579636	339	True				
ANR	580294	AssignmentExpression	sd . size = 0x70 - 8		579636	0		=			
ANR	580295	MemberAccess	sd . size		579636	0					
ANR	580296	Identifier	sd		579636	0					
ANR	580297	Identifier	size		579636	1					
ANR	580298	AdditiveExpression	0x70 - 8		579636	1		-			
ANR	580299	PrimaryExpression	0x70		579636	0					
ANR	580300	PrimaryExpression	8		579636	1					
ANR	580301	ExpressionStatement	sd . size += sd . n_segments * 32	329:1:9241:9270	579636	340	True				
ANR	580302	AssignmentExpression	sd . size += sd . n_segments * 32		579636	0		+=			
ANR	580303	MemberAccess	sd . size		579636	0					
ANR	580304	Identifier	sd		579636	0					
ANR	580305	Identifier	size		579636	1					
ANR	580306	MultiplicativeExpression	sd . n_segments * 32		579636	1		*			
ANR	580307	MemberAccess	sd . n_segments		579636	0					
ANR	580308	Identifier	sd		579636	0					
ANR	580309	Identifier	n_segments		579636	1					
ANR	580310	PrimaryExpression	32		579636	1					
ANR	580311	IfStatement	if ( is64 )		579636	341					
ANR	580312	Condition	is64	330:5:9277:9280	579636	0	True				
ANR	580313	Identifier	is64		579636	0					
ANR	580314	CompoundStatement		79:11:2848:2848	579636	1					
ANR	580315	ExpressionStatement	sd . size += sd . n_sections * 24	331:2:9287:9316	579636	0	True				
ANR	580316	AssignmentExpression	sd . size += sd . n_sections * 24		579636	0		+=			
ANR	580317	MemberAccess	sd . size		579636	0					
ANR	580318	Identifier	sd		579636	0					
ANR	580319	Identifier	size		579636	1					
ANR	580320	MultiplicativeExpression	sd . n_sections * 24		579636	1		*			
ANR	580321	MemberAccess	sd . n_sections		579636	0					
ANR	580322	Identifier	sd		579636	0					
ANR	580323	Identifier	n_sections		579636	1					
ANR	580324	PrimaryExpression	24		579636	1					
ANR	580325	ElseStatement	else		579636	0					
ANR	580326	CompoundStatement		81:8:2891:2891	579636	0					
ANR	580327	ExpressionStatement	sd . size += sd . n_sections * 16	333:2:9330:9359	579636	0	True				
ANR	580328	AssignmentExpression	sd . size += sd . n_sections * 16		579636	0		+=			
ANR	580329	MemberAccess	sd . size		579636	0					
ANR	580330	Identifier	sd		579636	0					
ANR	580331	Identifier	size		579636	1					
ANR	580332	MultiplicativeExpression	sd . n_sections * 16		579636	1		*			
ANR	580333	MemberAccess	sd . n_sections		579636	0					
ANR	580334	Identifier	sd		579636	0					
ANR	580335	Identifier	n_sections		579636	1					
ANR	580336	PrimaryExpression	16		579636	1					
ANR	580337	ExpressionStatement	free ( b )	335:1:9365:9373	579636	342	True				
ANR	580338	CallExpression	free ( b )		579636	0					
ANR	580339	Callee	free		579636	0					
ANR	580340	Identifier	free		579636	0					
ANR	580341	ArgumentList	b		579636	1					
ANR	580342	Argument	b		579636	0					
ANR	580343	Identifier	b		579636	0					
ANR	580344	ReturnStatement	return sd ;	336:1:9376:9385	579636	343	True				
ANR	580345	Identifier	sd		579636	0					
ANR	580346	ReturnType	static SymbolsDragons		579636	1					
ANR	580347	Identifier	parseDragons		579636	2					
ANR	580348	ParameterList	"RBuffer * buf , int off , int bits"		579636	3					
ANR	580349	Parameter	RBuffer * buf	252:35:6401:6412	579636	0	True				
ANR	580350	ParameterType	RBuffer *		579636	0					
ANR	580351	Identifier	buf		579636	1					
ANR	580352	Parameter	int off	252:49:6415:6421	579636	1	True				
ANR	580353	ParameterType	int		579636	0					
ANR	580354	Identifier	off		579636	1					
ANR	580355	Parameter	int bits	252:58:6424:6431	579636	2	True				
ANR	580356	ParameterType	int		579636	0					
ANR	580357	Identifier	bits		579636	1					
ANR	580358	CFGEntryNode	ENTRY		579636		True				
ANR	580359	CFGExitNode	EXIT		579636		True				
ANR	580360	Symbol	malloc		579636						
ANR	580361	Symbol	b		579636						
ANR	580362	Symbol	r_read_le32		579636						
ANR	580363	Symbol	e0ss		579636						
ANR	580364	Symbol	bits		579636						
ANR	580365	Symbol	available		579636						
ANR	580366	Symbol	sd . n_sections		579636						
ANR	580367	Symbol	sd . n_segments		579636						
ANR	580368	Symbol	off		579636						
ANR	580369	Symbol	magicCombo		579636						
ANR	580370	Symbol	sd . size		579636						
ANR	580371	Symbol	sd		579636						
ANR	580372	Symbol	buf		579636						
ANR	580373	Symbol	eprintf		579636						
ANR	580374	Symbol	memcmp		579636						
ANR	580375	Symbol	size		579636						
ANR	580376	Symbol	sd . addr		579636						
ANR	580377	Symbol	r_buf_read_at		579636						
ANR	580378	Symbol	SEGMENTS_BEGIN		579636						
ANR	580379	Symbol	is64		579636						
ANR	580380	Symbol	r_buf_size		579636						
ANR	580381	Symbol	sd . n_symbols		579636						
ANR	580382	Function	newSymbol	339:0:9390:9707							
ANR	580383	FunctionDef	"newSymbol (RBinString * s , ut64 addr , ut64 size)"		580382	0					
ANR	580384	CompoundStatement		339:66:9456:9707	580382	0					
ANR	580385	IdentifierDeclStatement	RBinSymbol * sym = R_NEW0 ( RBinSymbol ) ;	340:1:9459:9496	580382	0	True				
ANR	580386	IdentifierDecl	* sym = R_NEW0 ( RBinSymbol )		580382	0					
ANR	580387	IdentifierDeclType	RBinSymbol *		580382	0					
ANR	580388	Identifier	sym		580382	1					
ANR	580389	AssignmentExpression	* sym = R_NEW0 ( RBinSymbol )		580382	2		=			
ANR	580390	Identifier	sym		580382	0					
ANR	580391	CallExpression	R_NEW0 ( RBinSymbol )		580382	1					
ANR	580392	Callee	R_NEW0		580382	0					
ANR	580393	Identifier	R_NEW0		580382	0					
ANR	580394	ArgumentList	RBinSymbol		580382	1					
ANR	580395	Argument	RBinSymbol		580382	0					
ANR	580396	Identifier	RBinSymbol		580382	0					
ANR	580397	IfStatement	if ( sym )		580382	1					
ANR	580398	Condition	sym	341:5:9503:9505	580382	0	True				
ANR	580399	Identifier	sym		580382	0					
ANR	580400	CompoundStatement		3:10:51:51	580382	1					
ANR	580401	ExpressionStatement	sym -> name = s ? s -> string : NULL	342:2:9512:9542	580382	0	True				
ANR	580402	AssignmentExpression	sym -> name = s ? s -> string : NULL		580382	0		=			
ANR	580403	PtrMemberAccess	sym -> name		580382	0					
ANR	580404	Identifier	sym		580382	0					
ANR	580405	Identifier	name		580382	1					
ANR	580406	ConditionalExpression	s ? s -> string : NULL		580382	1					
ANR	580407	Condition	s		580382	0					
ANR	580408	Identifier	s		580382	0					
ANR	580409	PtrMemberAccess	s -> string		580382	1					
ANR	580410	Identifier	s		580382	0					
ANR	580411	Identifier	string		580382	1					
ANR	580412	Identifier	NULL		580382	2					
ANR	580413	ExpressionStatement	sym -> paddr = addr	343:2:9546:9563	580382	1	True				
ANR	580414	AssignmentExpression	sym -> paddr = addr		580382	0		=			
ANR	580415	PtrMemberAccess	sym -> paddr		580382	0					
ANR	580416	Identifier	sym		580382	0					
ANR	580417	Identifier	paddr		580382	1					
ANR	580418	Identifier	addr		580382	1					
ANR	580419	ExpressionStatement	sym -> vaddr = addr	344:2:9567:9584	580382	2	True				
ANR	580420	AssignmentExpression	sym -> vaddr = addr		580382	0		=			
ANR	580421	PtrMemberAccess	sym -> vaddr		580382	0					
ANR	580422	Identifier	sym		580382	0					
ANR	580423	Identifier	vaddr		580382	1					
ANR	580424	Identifier	addr		580382	1					
ANR	580425	ExpressionStatement	sym -> size = size	345:2:9588:9604	580382	3	True				
ANR	580426	AssignmentExpression	sym -> size = size		580382	0		=			
ANR	580427	PtrMemberAccess	sym -> size		580382	0					
ANR	580428	Identifier	sym		580382	0					
ANR	580429	Identifier	size		580382	1					
ANR	580430	Identifier	size		580382	1					
ANR	580431	ExpressionStatement	sym -> type = r_str_const ( R_BIN_TYPE_FUNC_STR )	346:2:9608:9653	580382	4	True				
ANR	580432	AssignmentExpression	sym -> type = r_str_const ( R_BIN_TYPE_FUNC_STR )		580382	0		=			
ANR	580433	PtrMemberAccess	sym -> type		580382	0					
ANR	580434	Identifier	sym		580382	0					
ANR	580435	Identifier	type		580382	1					
ANR	580436	CallExpression	r_str_const ( R_BIN_TYPE_FUNC_STR )		580382	1					
ANR	580437	Callee	r_str_const		580382	0					
ANR	580438	Identifier	r_str_const		580382	0					
ANR	580439	ArgumentList	R_BIN_TYPE_FUNC_STR		580382	1					
ANR	580440	Argument	R_BIN_TYPE_FUNC_STR		580382	0					
ANR	580441	Identifier	R_BIN_TYPE_FUNC_STR		580382	0					
ANR	580442	ExpressionStatement	"sym -> bind = r_str_const ( ""NONE"" )"	347:2:9657:9689	580382	5	True				
ANR	580443	AssignmentExpression	"sym -> bind = r_str_const ( ""NONE"" )"		580382	0		=			
ANR	580444	PtrMemberAccess	sym -> bind		580382	0					
ANR	580445	Identifier	sym		580382	0					
ANR	580446	Identifier	bind		580382	1					
ANR	580447	CallExpression	"r_str_const ( ""NONE"" )"		580382	1					
ANR	580448	Callee	r_str_const		580382	0					
ANR	580449	Identifier	r_str_const		580382	0					
ANR	580450	ArgumentList	"""NONE"""		580382	1					
ANR	580451	Argument	"""NONE"""		580382	0					
ANR	580452	PrimaryExpression	"""NONE"""		580382	0					
ANR	580453	ReturnStatement	return sym ;	349:1:9695:9705	580382	2	True				
ANR	580454	Identifier	sym		580382	0					
ANR	580455	ReturnType	static RBinSymbol *		580382	1					
ANR	580456	Identifier	newSymbol		580382	2					
ANR	580457	ParameterList	"RBinString * s , ut64 addr , ut64 size"		580382	3					
ANR	580458	Parameter	RBinString * s	339:29:9419:9431	580382	0	True				
ANR	580459	ParameterType	RBinString *		580382	0					
ANR	580460	Identifier	s		580382	1					
ANR	580461	Parameter	ut64 addr	339:44:9434:9442	580382	1	True				
ANR	580462	ParameterType	ut64		580382	0					
ANR	580463	Identifier	addr		580382	1					
ANR	580464	Parameter	ut64 size	339:55:9445:9453	580382	2	True				
ANR	580465	ParameterType	ut64		580382	0					
ANR	580466	Identifier	size		580382	1					
ANR	580467	CFGEntryNode	ENTRY		580382		True				
ANR	580468	CFGExitNode	EXIT		580382		True				
ANR	580469	Symbol	r_str_const		580382						
ANR	580470	Symbol	sym -> bind		580382						
ANR	580471	Symbol	NULL		580382						
ANR	580472	Symbol	s -> string		580382						
ANR	580473	Symbol	sym		580382						
ANR	580474	Symbol	sym -> vaddr		580382						
ANR	580475	Symbol	sym -> paddr		580382						
ANR	580476	Symbol	sym -> type		580382						
ANR	580477	Symbol	sym -> size		580382						
ANR	580478	Symbol	R_NEW0		580382						
ANR	580479	Symbol	* sym		580382						
ANR	580480	Symbol	s		580382						
ANR	580481	Symbol	R_BIN_TYPE_FUNC_STR		580382						
ANR	580482	Symbol	size		580382						
ANR	580483	Symbol	sym -> name		580382						
ANR	580484	Symbol	addr		580382						
ANR	580485	Symbol	* s		580382						
ANR	580486	Symbol	RBinSymbol		580382						
ANR	580487	Function	parseSections	352:0:9710:10923							
ANR	580488	FunctionDef	"parseSections (RBuffer * b , int x , int n_sections , RList * strings)"		580487	0					
ANR	580489	CompoundStatement		352:79:9789:10923	580487	0					
ANR	580490	IdentifierDeclStatement	int buf_sz = r_buf_size ( b ) ;	354:1:9820:9847	580487	0	True				
ANR	580491	IdentifierDecl	buf_sz = r_buf_size ( b )		580487	0					
ANR	580492	IdentifierDeclType	int		580487	0					
ANR	580493	Identifier	buf_sz		580487	1					
ANR	580494	AssignmentExpression	buf_sz = r_buf_size ( b )		580487	2		=			
ANR	580495	Identifier	buf_sz		580487	0					
ANR	580496	CallExpression	r_buf_size ( b )		580487	1					
ANR	580497	Callee	r_buf_size		580487	0					
ANR	580498	Identifier	r_buf_size		580487	0					
ANR	580499	ArgumentList	b		580487	1					
ANR	580500	Argument	b		580487	0					
ANR	580501	Identifier	b		580487	0					
ANR	580502	IdentifierDeclStatement	char * buf = malloc ( buf_sz ) ;	355:1:9850:9877	580487	1	True				
ANR	580503	IdentifierDecl	* buf = malloc ( buf_sz )		580487	0					
ANR	580504	IdentifierDeclType	char *		580487	0					
ANR	580505	Identifier	buf		580487	1					
ANR	580506	AssignmentExpression	* buf = malloc ( buf_sz )		580487	2		=			
ANR	580507	Identifier	buf		580487	0					
ANR	580508	CallExpression	malloc ( buf_sz )		580487	1					
ANR	580509	Callee	malloc		580487	0					
ANR	580510	Identifier	malloc		580487	0					
ANR	580511	ArgumentList	buf_sz		580487	1					
ANR	580512	Argument	buf_sz		580487	0					
ANR	580513	Identifier	buf_sz		580487	0					
ANR	580514	IfStatement	if ( ! buf )		580487	2					
ANR	580515	Condition	! buf	356:5:9884:9887	580487	0	True				
ANR	580516	UnaryOperationExpression	! buf		580487	0					
ANR	580517	UnaryOperator	!		580487	0					
ANR	580518	Identifier	buf		580487	1					
ANR	580519	CompoundStatement		5:11:100:100	580487	1					
ANR	580520	ReturnStatement	return NULL ;	357:2:9894:9905	580487	0	True				
ANR	580521	Identifier	NULL		580487	0					
ANR	580522	IdentifierDeclStatement	bool must_free = false ;	359:1:9911:9933	580487	3	True				
ANR	580523	IdentifierDecl	must_free = false		580487	0					
ANR	580524	IdentifierDeclType	bool		580487	0					
ANR	580525	Identifier	must_free		580487	1					
ANR	580526	AssignmentExpression	must_free = false		580487	2		=			
ANR	580527	Identifier	false		580487	0					
ANR	580528	Identifier	false		580487	1					
ANR	580529	IfStatement	if ( ! strings )		580487	4					
ANR	580530	Condition	! strings	360:5:9940:9947	580487	0	True				
ANR	580531	UnaryOperationExpression	! strings		580487	0					
ANR	580532	UnaryOperator	!		580487	0					
ANR	580533	Identifier	strings		580487	1					
ANR	580534	CompoundStatement		9:15:160:160	580487	1					
ANR	580535	ExpressionStatement	"strings = parseStrings ( b , stringsBeginAt , buf_sz )"	361:2:9954:10004	580487	0	True				
ANR	580536	AssignmentExpression	"strings = parseStrings ( b , stringsBeginAt , buf_sz )"		580487	0		=			
ANR	580537	Identifier	strings		580487	0					
ANR	580538	CallExpression	"parseStrings ( b , stringsBeginAt , buf_sz )"		580487	1					
ANR	580539	Callee	parseStrings		580487	0					
ANR	580540	Identifier	parseStrings		580487	0					
ANR	580541	ArgumentList	b		580487	1					
ANR	580542	Argument	b		580487	0					
ANR	580543	Identifier	b		580487	0					
ANR	580544	Argument	stringsBeginAt		580487	1					
ANR	580545	Identifier	stringsBeginAt		580487	0					
ANR	580546	Argument	buf_sz		580487	2					
ANR	580547	Identifier	buf_sz		580487	0					
ANR	580548	IfStatement	if ( strings )		580487	1					
ANR	580549	Condition	strings	362:6:10012:10018	580487	0	True				
ANR	580550	Identifier	strings		580487	0					
ANR	580551	CompoundStatement		11:15:231:231	580487	1					
ANR	580552	ExpressionStatement	must_free = true	363:3:10026:10042	580487	0	True				
ANR	580553	AssignmentExpression	must_free = true		580487	0		=			
ANR	580554	Identifier	must_free		580487	0					
ANR	580555	Identifier	true		580487	1					
ANR	580556	ExpressionStatement	"r_buf_read_at ( b , x , ( ut8 * ) buf , 4 )"	367:1:10061:10096	580487	5	True				
ANR	580557	CallExpression	"r_buf_read_at ( b , x , ( ut8 * ) buf , 4 )"		580487	0					
ANR	580558	Callee	r_buf_read_at		580487	0					
ANR	580559	Identifier	r_buf_read_at		580487	0					
ANR	580560	ArgumentList	b		580487	1					
ANR	580561	Argument	b		580487	0					
ANR	580562	Identifier	b		580487	0					
ANR	580563	Argument	x		580487	1					
ANR	580564	Identifier	x		580487	0					
ANR	580565	Argument	( ut8 * ) buf		580487	2					
ANR	580566	CastExpression	( ut8 * ) buf		580487	0					
ANR	580567	CastTarget	ut8 *		580487	0					
ANR	580568	Identifier	buf		580487	1					
ANR	580569	Argument	4		580487	3					
ANR	580570	PrimaryExpression	4		580487	0					
ANR	580571	IfStatement	if ( buf [ 0 ] == '_' )		580487	6					
ANR	580572	Condition	buf [ 0 ] == '_'	368:5:10103:10115	580487	0	True				
ANR	580573	EqualityExpression	buf [ 0 ] == '_'		580487	0		==			
ANR	580574	ArrayIndexing	buf [ 0 ]		580487	0					
ANR	580575	Identifier	buf		580487	0					
ANR	580576	PrimaryExpression	0		580487	1					
ANR	580577	PrimaryExpression	'_'		580487	1					
ANR	580578	CompoundStatement		17:20:328:328	580487	1					
ANR	580579	ExpressionStatement	x += 16	369:2:10122:10129	580487	0	True				
ANR	580580	AssignmentExpression	x += 16		580487	0		+=			
ANR	580581	Identifier	x		580487	0					
ANR	580582	PrimaryExpression	16		580487	1					
ANR	580583	IdentifierDeclStatement	RList * res = r_list_newf ( ( RListFree ) r_bin_section_free ) ;	371:1:10135:10191	580487	7	True				
ANR	580584	IdentifierDecl	* res = r_list_newf ( ( RListFree ) r_bin_section_free )		580487	0					
ANR	580585	IdentifierDeclType	RList *		580487	0					
ANR	580586	Identifier	res		580487	1					
ANR	580587	AssignmentExpression	* res = r_list_newf ( ( RListFree ) r_bin_section_free )		580487	2		=			
ANR	580588	Identifier	res		580487	0					
ANR	580589	CallExpression	r_list_newf ( ( RListFree ) r_bin_section_free )		580487	1					
ANR	580590	Callee	r_list_newf		580487	0					
ANR	580591	Identifier	r_list_newf		580487	0					
ANR	580592	ArgumentList	( RListFree ) r_bin_section_free		580487	1					
ANR	580593	Argument	( RListFree ) r_bin_section_free		580487	0					
ANR	580594	CastExpression	( RListFree ) r_bin_section_free		580487	0					
ANR	580595	CastTarget	RListFree		580487	0					
ANR	580596	Identifier	r_bin_section_free		580487	1					
ANR	580597	IdentifierDeclStatement	int i ;	372:1:10194:10199	580487	8	True				
ANR	580598	IdentifierDecl	i		580487	0					
ANR	580599	IdentifierDeclType	int		580487	0					
ANR	580600	Identifier	i		580487	1					
ANR	580601	ExpressionStatement	"r_buf_read_at ( b , x , ( ut8 * ) buf , buf_sz )"	373:1:10202:10242	580487	9	True				
ANR	580602	CallExpression	"r_buf_read_at ( b , x , ( ut8 * ) buf , buf_sz )"		580487	0					
ANR	580603	Callee	r_buf_read_at		580487	0					
ANR	580604	Identifier	r_buf_read_at		580487	0					
ANR	580605	ArgumentList	b		580487	1					
ANR	580606	Argument	b		580487	0					
ANR	580607	Identifier	b		580487	0					
ANR	580608	Argument	x		580487	1					
ANR	580609	Identifier	x		580487	0					
ANR	580610	Argument	( ut8 * ) buf		580487	2					
ANR	580611	CastExpression	( ut8 * ) buf		580487	0					
ANR	580612	CastTarget	ut8 *		580487	0					
ANR	580613	Identifier	buf		580487	1					
ANR	580614	Argument	buf_sz		580487	3					
ANR	580615	Identifier	buf_sz		580487	0					
ANR	580616	IdentifierDeclStatement	int off = 0 ;	374:1:10245:10256	580487	10	True				
ANR	580617	IdentifierDecl	off = 0		580487	0					
ANR	580618	IdentifierDeclType	int		580487	0					
ANR	580619	Identifier	off		580487	1					
ANR	580620	AssignmentExpression	off = 0		580487	2		=			
ANR	580621	Identifier	off		580487	0					
ANR	580622	PrimaryExpression	0		580487	1					
ANR	580623	ForStatement	for ( i = 0 ; i < n_sections ; i ++ )		580487	11					
ANR	580624	ForInit	i = 0 ;	375:6:10264:10269	580487	0	True				
ANR	580625	AssignmentExpression	i = 0		580487	0		=			
ANR	580626	Identifier	i		580487	0					
ANR	580627	PrimaryExpression	0		580487	1					
ANR	580628	Condition	i < n_sections	375:13:10271:10284	580487	1	True				
ANR	580629	RelationalExpression	i < n_sections		580487	0		<			
ANR	580630	Identifier	i		580487	0					
ANR	580631	Identifier	n_sections		580487	1					
ANR	580632	PostIncDecOperationExpression	i ++	375:29:10287:10289	580487	2	True				
ANR	580633	Identifier	i		580487	0					
ANR	580634	IncDec	++		580487	1					
ANR	580635	CompoundStatement		37:2:968:1024	580487	3					
ANR	580636	ExpressionStatement	off = i * 16	376:2:10296:10308	580487	0	True				
ANR	580637	AssignmentExpression	off = i * 16		580487	0		=			
ANR	580638	Identifier	off		580487	0					
ANR	580639	MultiplicativeExpression	i * 16		580487	1		*			
ANR	580640	Identifier	i		580487	0					
ANR	580641	PrimaryExpression	16		580487	1					
ANR	580642	IfStatement	if ( off + 8 >= buf_sz )		580487	1					
ANR	580643	Condition	off + 8 >= buf_sz	377:6:10316:10332	580487	0	True				
ANR	580644	RelationalExpression	off + 8 >= buf_sz		580487	0		>=			
ANR	580645	AdditiveExpression	off + 8		580487	0		+			
ANR	580646	Identifier	off		580487	0					
ANR	580647	PrimaryExpression	8		580487	1					
ANR	580648	Identifier	buf_sz		580487	1					
ANR	580649	CompoundStatement		26:25:545:545	580487	1					
ANR	580650	BreakStatement	break ;	378:3:10340:10345	580487	0	True				
ANR	580651	IdentifierDeclStatement	"RBinString * name = strings ? r_list_get_n ( strings , i ) : NULL ;"	380:2:10353:10412	580487	2	True				
ANR	580652	IdentifierDecl	"* name = strings ? r_list_get_n ( strings , i ) : NULL"		580487	0					
ANR	580653	IdentifierDeclType	RBinString *		580487	0					
ANR	580654	Identifier	name		580487	1					
ANR	580655	AssignmentExpression	"* name = strings ? r_list_get_n ( strings , i ) : NULL"		580487	2		=			
ANR	580656	Identifier	name		580487	0					
ANR	580657	ConditionalExpression	"strings ? r_list_get_n ( strings , i ) : NULL"		580487	1					
ANR	580658	Condition	strings		580487	0					
ANR	580659	Identifier	strings		580487	0					
ANR	580660	CallExpression	"r_list_get_n ( strings , i )"		580487	1					
ANR	580661	Callee	r_list_get_n		580487	0					
ANR	580662	Identifier	r_list_get_n		580487	0					
ANR	580663	ArgumentList	strings		580487	1					
ANR	580664	Argument	strings		580487	0					
ANR	580665	Identifier	strings		580487	0					
ANR	580666	Argument	i		580487	1					
ANR	580667	Identifier	i		580487	0					
ANR	580668	Identifier	NULL		580487	2					
ANR	580669	IdentifierDeclStatement	"const char * namestr = name ? name -> string : """" ;"	381:2:10416:10460	580487	3	True				
ANR	580670	IdentifierDecl	"* namestr = name ? name -> string : """""		580487	0					
ANR	580671	IdentifierDeclType	const char *		580487	0					
ANR	580672	Identifier	namestr		580487	1					
ANR	580673	AssignmentExpression	"* namestr = name ? name -> string : """""		580487	2		=			
ANR	580674	Identifier	namestr		580487	0					
ANR	580675	ConditionalExpression	"name ? name -> string : """""		580487	1					
ANR	580676	Condition	name		580487	0					
ANR	580677	Identifier	name		580487	0					
ANR	580678	PtrMemberAccess	name -> string		580487	1					
ANR	580679	Identifier	name		580487	0					
ANR	580680	Identifier	string		580487	1					
ANR	580681	PrimaryExpression	""""""		580487	2					
ANR	580682	IdentifierDeclStatement	ut32 A = r_read_le32 ( buf + off ) ;	382:2:10464:10496	580487	4	True				
ANR	580683	IdentifierDecl	A = r_read_le32 ( buf + off )		580487	0					
ANR	580684	IdentifierDeclType	ut32		580487	0					
ANR	580685	Identifier	A		580487	1					
ANR	580686	AssignmentExpression	A = r_read_le32 ( buf + off )		580487	2		=			
ANR	580687	Identifier	A		580487	0					
ANR	580688	CallExpression	r_read_le32 ( buf + off )		580487	1					
ANR	580689	Callee	r_read_le32		580487	0					
ANR	580690	Identifier	r_read_le32		580487	0					
ANR	580691	ArgumentList	buf + off		580487	1					
ANR	580692	Argument	buf + off		580487	0					
ANR	580693	AdditiveExpression	buf + off		580487	0		+			
ANR	580694	Identifier	buf		580487	0					
ANR	580695	Identifier	off		580487	1					
ANR	580696	IdentifierDeclStatement	ut32 B = r_read_le32 ( buf + off + 4 ) ;	383:2:10500:10536	580487	5	True				
ANR	580697	IdentifierDecl	B = r_read_le32 ( buf + off + 4 )		580487	0					
ANR	580698	IdentifierDeclType	ut32		580487	0					
ANR	580699	Identifier	B		580487	1					
ANR	580700	AssignmentExpression	B = r_read_le32 ( buf + off + 4 )		580487	2		=			
ANR	580701	Identifier	B		580487	0					
ANR	580702	CallExpression	r_read_le32 ( buf + off + 4 )		580487	1					
ANR	580703	Callee	r_read_le32		580487	0					
ANR	580704	Identifier	r_read_le32		580487	0					
ANR	580705	ArgumentList	buf + off + 4		580487	1					
ANR	580706	Argument	buf + off + 4		580487	0					
ANR	580707	AdditiveExpression	buf + off + 4		580487	0		+			
ANR	580708	Identifier	buf		580487	0					
ANR	580709	AdditiveExpression	off + 4		580487	1		+			
ANR	580710	Identifier	off		580487	0					
ANR	580711	PrimaryExpression	4		580487	1					
ANR	580712	IdentifierDeclStatement	"RBinSection * section = newSection ( namestr , A , A + B , 0 ) ;"	388:2:10758:10814	580487	6	True				
ANR	580713	IdentifierDecl	"* section = newSection ( namestr , A , A + B , 0 )"		580487	0					
ANR	580714	IdentifierDeclType	RBinSection *		580487	0					
ANR	580715	Identifier	section		580487	1					
ANR	580716	AssignmentExpression	"* section = newSection ( namestr , A , A + B , 0 )"		580487	2		=			
ANR	580717	Identifier	section		580487	0					
ANR	580718	CallExpression	"newSection ( namestr , A , A + B , 0 )"		580487	1					
ANR	580719	Callee	newSection		580487	0					
ANR	580720	Identifier	newSection		580487	0					
ANR	580721	ArgumentList	namestr		580487	1					
ANR	580722	Argument	namestr		580487	0					
ANR	580723	Identifier	namestr		580487	0					
ANR	580724	Argument	A		580487	1					
ANR	580725	Identifier	A		580487	0					
ANR	580726	Argument	A + B		580487	2					
ANR	580727	AdditiveExpression	A + B		580487	0		+			
ANR	580728	Identifier	A		580487	0					
ANR	580729	Identifier	B		580487	1					
ANR	580730	Argument	0		580487	3					
ANR	580731	PrimaryExpression	0		580487	0					
ANR	580732	ExpressionStatement	"r_list_append ( res , section )"	389:2:10818:10846	580487	7	True				
ANR	580733	CallExpression	"r_list_append ( res , section )"		580487	0					
ANR	580734	Callee	r_list_append		580487	0					
ANR	580735	Identifier	r_list_append		580487	0					
ANR	580736	ArgumentList	res		580487	1					
ANR	580737	Argument	res		580487	0					
ANR	580738	Identifier	res		580487	0					
ANR	580739	Argument	section		580487	1					
ANR	580740	Identifier	section		580487	0					
ANR	580741	IfStatement	if ( must_free )		580487	12					
ANR	580742	Condition	must_free	391:5:10856:10864	580487	0	True				
ANR	580743	Identifier	must_free		580487	0					
ANR	580744	CompoundStatement		40:16:1077:1077	580487	1					
ANR	580745	ExpressionStatement	r_list_free ( strings )	392:2:10871:10892	580487	0	True				
ANR	580746	CallExpression	r_list_free ( strings )		580487	0					
ANR	580747	Callee	r_list_free		580487	0					
ANR	580748	Identifier	r_list_free		580487	0					
ANR	580749	ArgumentList	strings		580487	1					
ANR	580750	Argument	strings		580487	0					
ANR	580751	Identifier	strings		580487	0					
ANR	580752	ExpressionStatement	free ( buf )	394:1:10898:10908	580487	13	True				
ANR	580753	CallExpression	free ( buf )		580487	0					
ANR	580754	Callee	free		580487	0					
ANR	580755	Identifier	free		580487	0					
ANR	580756	ArgumentList	buf		580487	1					
ANR	580757	Argument	buf		580487	0					
ANR	580758	Identifier	buf		580487	0					
ANR	580759	ReturnStatement	return res ;	395:1:10911:10921	580487	14	True				
ANR	580760	Identifier	res		580487	0					
ANR	580761	ReturnType	static RList *		580487	1					
ANR	580762	Identifier	parseSections		580487	2					
ANR	580763	ParameterList	"RBuffer * b , int x , int n_sections , RList * strings"		580487	3					
ANR	580764	Parameter	RBuffer * b	352:28:9738:9747	580487	0	True				
ANR	580765	ParameterType	RBuffer *		580487	0					
ANR	580766	Identifier	b		580487	1					
ANR	580767	Parameter	int x	352:40:9750:9754	580487	1	True				
ANR	580768	ParameterType	int		580487	0					
ANR	580769	Identifier	x		580487	1					
ANR	580770	Parameter	int n_sections	352:47:9757:9770	580487	2	True				
ANR	580771	ParameterType	int		580487	0					
ANR	580772	Identifier	n_sections		580487	1					
ANR	580773	Parameter	RList * strings	352:63:9773:9786	580487	3	True				
ANR	580774	ParameterType	RList *		580487	0					
ANR	580775	Identifier	strings		580487	1					
ANR	580776	CFGEntryNode	ENTRY		580487		True				
ANR	580777	CFGExitNode	EXIT		580487		True				
ANR	580778	Symbol	A		580487						
ANR	580779	Symbol	B		580487						
ANR	580780	Symbol	newSection		580487						
ANR	580781	Symbol	section		580487						
ANR	580782	Symbol	strings		580487						
ANR	580783	Symbol	* name		580487						
ANR	580784	Symbol	name -> string		580487						
ANR	580785	Symbol	malloc		580487						
ANR	580786	Symbol	res		580487						
ANR	580787	Symbol	b		580487						
ANR	580788	Symbol	* buf		580487						
ANR	580789	Symbol	NULL		580487						
ANR	580790	Symbol	stringsBeginAt		580487						
ANR	580791	Symbol	r_read_le32		580487						
ANR	580792	Symbol	r_list_newf		580487						
ANR	580793	Symbol	namestr		580487						
ANR	580794	Symbol	buf_sz		580487						
ANR	580795	Symbol	false		580487						
ANR	580796	Symbol	i		580487						
ANR	580797	Symbol	r_list_get_n		580487						
ANR	580798	Symbol	r_bin_section_free		580487						
ANR	580799	Symbol	n_sections		580487						
ANR	580800	Symbol	off		580487						
ANR	580801	Symbol	buf		580487						
ANR	580802	Symbol	must_free		580487						
ANR	580803	Symbol	parseStrings		580487						
ANR	580804	Symbol	x		580487						
ANR	580805	Symbol	true		580487						
ANR	580806	Symbol	name		580487						
ANR	580807	Symbol	r_buf_size		580487						
ANR	580808	Function	parseSymbols	398:0:10926:11973							
ANR	580809	FunctionDef	"parseSymbols (RBuffer * buf , int x , ut64 * eof , int count)"		580808	0					
ANR	580810	CompoundStatement		398:70:10996:11973	580808	0					
ANR	580811	IdentifierDeclStatement	const int structSize = 24 ;	400:1:11026:11051	580808	0	True				
ANR	580812	IdentifierDecl	structSize = 24		580808	0					
ANR	580813	IdentifierDeclType	const int		580808	0					
ANR	580814	Identifier	structSize		580808	1					
ANR	580815	AssignmentExpression	structSize = 24		580808	2		=			
ANR	580816	Identifier	structSize		580808	0					
ANR	580817	PrimaryExpression	24		580808	1					
ANR	580818	IfStatement	if ( eof )		580808	1					
ANR	580819	Condition	eof	401:5:11075:11077	580808	0	True				
ANR	580820	Identifier	eof		580808	0					
ANR	580821	CompoundStatement		4:10:83:83	580808	1					
ANR	580822	ExpressionStatement	* eof = x + ( count * structSize )	402:2:11084:11115	580808	0	True				
ANR	580823	AssignmentExpression	* eof = x + ( count * structSize )		580808	0		=			
ANR	580824	UnaryOperationExpression	* eof		580808	0					
ANR	580825	UnaryOperator	*		580808	0					
ANR	580826	Identifier	eof		580808	1					
ANR	580827	AdditiveExpression	x + ( count * structSize )		580808	1		+			
ANR	580828	Identifier	x		580808	0					
ANR	580829	MultiplicativeExpression	count * structSize		580808	1		*			
ANR	580830	Identifier	count		580808	0					
ANR	580831	Identifier	structSize		580808	1					
ANR	580832	IdentifierDeclStatement	"ut8 * b = calloc ( structSize , count ) ;"	405:1:11170:11205	580808	2	True				
ANR	580833	IdentifierDecl	"* b = calloc ( structSize , count )"		580808	0					
ANR	580834	IdentifierDeclType	ut8 *		580808	0					
ANR	580835	Identifier	b		580808	1					
ANR	580836	AssignmentExpression	"* b = calloc ( structSize , count )"		580808	2		=			
ANR	580837	Identifier	b		580808	0					
ANR	580838	CallExpression	"calloc ( structSize , count )"		580808	1					
ANR	580839	Callee	calloc		580808	0					
ANR	580840	Identifier	calloc		580808	0					
ANR	580841	ArgumentList	structSize		580808	1					
ANR	580842	Argument	structSize		580808	0					
ANR	580843	Identifier	structSize		580808	0					
ANR	580844	Argument	count		580808	1					
ANR	580845	Identifier	count		580808	0					
ANR	580846	IfStatement	if ( ! b )		580808	3					
ANR	580847	Condition	! b	406:5:11212:11213	580808	0	True				
ANR	580848	UnaryOperationExpression	! b		580808	0					
ANR	580849	UnaryOperator	!		580808	0					
ANR	580850	Identifier	b		580808	1					
ANR	580851	CompoundStatement		9:9:219:219	580808	1					
ANR	580852	ReturnStatement	return NULL ;	407:2:11220:11231	580808	0	True				
ANR	580853	Identifier	NULL		580808	0					
ANR	580854	IdentifierDeclStatement	RList * symbols = r_list_newf ( r_bin_symbol_free ) ;	409:1:11237:11285	580808	4	True				
ANR	580855	IdentifierDecl	* symbols = r_list_newf ( r_bin_symbol_free )		580808	0					
ANR	580856	IdentifierDeclType	RList *		580808	0					
ANR	580857	Identifier	symbols		580808	1					
ANR	580858	AssignmentExpression	* symbols = r_list_newf ( r_bin_symbol_free )		580808	2		=			
ANR	580859	Identifier	symbols		580808	0					
ANR	580860	CallExpression	r_list_newf ( r_bin_symbol_free )		580808	1					
ANR	580861	Callee	r_list_newf		580808	0					
ANR	580862	Identifier	r_list_newf		580808	0					
ANR	580863	ArgumentList	r_bin_symbol_free		580808	1					
ANR	580864	Argument	r_bin_symbol_free		580808	0					
ANR	580865	Identifier	r_bin_symbol_free		580808	0					
ANR	580866	ExpressionStatement	"r_buf_read_at ( buf , x , b , count * structSize )"	410:1:11288:11333	580808	5	True				
ANR	580867	CallExpression	"r_buf_read_at ( buf , x , b , count * structSize )"		580808	0					
ANR	580868	Callee	r_buf_read_at		580808	0					
ANR	580869	Identifier	r_buf_read_at		580808	0					
ANR	580870	ArgumentList	buf		580808	1					
ANR	580871	Argument	buf		580808	0					
ANR	580872	Identifier	buf		580808	0					
ANR	580873	Argument	x		580808	1					
ANR	580874	Identifier	x		580808	0					
ANR	580875	Argument	b		580808	2					
ANR	580876	Identifier	b		580808	0					
ANR	580877	Argument	count * structSize		580808	3					
ANR	580878	MultiplicativeExpression	count * structSize		580808	0		*			
ANR	580879	Identifier	count		580808	0					
ANR	580880	Identifier	structSize		580808	1					
ANR	580881	IdentifierDeclStatement	int i ;	411:1:11336:11341	580808	6	True				
ANR	580882	IdentifierDecl	i		580808	0					
ANR	580883	IdentifierDeclType	int		580808	0					
ANR	580884	Identifier	i		580808	1					
ANR	580885	ForStatement	for ( i = 0 ; i < count ; i ++ )		580808	7					
ANR	580886	ForInit	i = 0 ;	412:6:11349:11354	580808	0	True				
ANR	580887	AssignmentExpression	i = 0		580808	0		=			
ANR	580888	Identifier	i		580808	0					
ANR	580889	PrimaryExpression	0		580808	1					
ANR	580890	Condition	i < count	412:13:11356:11364	580808	1	True				
ANR	580891	RelationalExpression	i < count		580808	0		<			
ANR	580892	Identifier	i		580808	0					
ANR	580893	Identifier	count		580808	1					
ANR	580894	PostIncDecOperationExpression	i ++	412:24:11367:11369	580808	2	True				
ANR	580895	Identifier	i		580808	0					
ANR	580896	IncDec	++		580808	1					
ANR	580897	CompoundStatement		18:2:465:503	580808	3					
ANR	580898	IdentifierDeclStatement	int n = ( i * structSize ) ;	413:2:11376:11400	580808	0	True				
ANR	580899	IdentifierDecl	n = ( i * structSize )		580808	0					
ANR	580900	IdentifierDeclType	int		580808	0					
ANR	580901	Identifier	n		580808	1					
ANR	580902	AssignmentExpression	n = ( i * structSize )		580808	2		=			
ANR	580903	Identifier	n		580808	0					
ANR	580904	MultiplicativeExpression	i * structSize		580808	1		*			
ANR	580905	Identifier	i		580808	0					
ANR	580906	Identifier	structSize		580808	1					
ANR	580907	IdentifierDeclStatement	const ut32 A = r_read_le32 ( b + n ) ;	414:2:11404:11438	580808	1	True				
ANR	580908	IdentifierDecl	A = r_read_le32 ( b + n )		580808	0					
ANR	580909	IdentifierDeclType	const ut32		580808	0					
ANR	580910	Identifier	A		580808	1					
ANR	580911	AssignmentExpression	A = r_read_le32 ( b + n )		580808	2		=			
ANR	580912	Identifier	A		580808	0					
ANR	580913	CallExpression	r_read_le32 ( b + n )		580808	1					
ANR	580914	Callee	r_read_le32		580808	0					
ANR	580915	Identifier	r_read_le32		580808	0					
ANR	580916	ArgumentList	b + n		580808	1					
ANR	580917	Argument	b + n		580808	0					
ANR	580918	AdditiveExpression	b + n		580808	0		+			
ANR	580919	Identifier	b		580808	0					
ANR	580920	Identifier	n		580808	1					
ANR	580921	IdentifierDeclStatement	const ut32 B = r_read_le32 ( b + n + 4 ) ;	415:2:11462:11500	580808	2	True				
ANR	580922	IdentifierDecl	B = r_read_le32 ( b + n + 4 )		580808	0					
ANR	580923	IdentifierDeclType	const ut32		580808	0					
ANR	580924	Identifier	B		580808	1					
ANR	580925	AssignmentExpression	B = r_read_le32 ( b + n + 4 )		580808	2		=			
ANR	580926	Identifier	B		580808	0					
ANR	580927	CallExpression	r_read_le32 ( b + n + 4 )		580808	1					
ANR	580928	Callee	r_read_le32		580808	0					
ANR	580929	Identifier	r_read_le32		580808	0					
ANR	580930	ArgumentList	b + n + 4		580808	1					
ANR	580931	Argument	b + n + 4		580808	0					
ANR	580932	AdditiveExpression	b + n + 4		580808	0		+			
ANR	580933	Identifier	b		580808	0					
ANR	580934	AdditiveExpression	n + 4		580808	1		+			
ANR	580935	Identifier	n		580808	0					
ANR	580936	PrimaryExpression	4		580808	1					
ANR	580937	ExpressionStatement	"r_list_append ( symbols , newSymbol ( NULL , A , B ) )"	422:2:11857:11904	580808	3	True				
ANR	580938	CallExpression	"r_list_append ( symbols , newSymbol ( NULL , A , B ) )"		580808	0					
ANR	580939	Callee	r_list_append		580808	0					
ANR	580940	Identifier	r_list_append		580808	0					
ANR	580941	ArgumentList	symbols		580808	1					
ANR	580942	Argument	symbols		580808	0					
ANR	580943	Identifier	symbols		580808	0					
ANR	580944	Argument	"newSymbol ( NULL , A , B )"		580808	1					
ANR	580945	CallExpression	"newSymbol ( NULL , A , B )"		580808	0					
ANR	580946	Callee	newSymbol		580808	0					
ANR	580947	Identifier	newSymbol		580808	0					
ANR	580948	ArgumentList	NULL		580808	1					
ANR	580949	Argument	NULL		580808	0					
ANR	580950	Identifier	NULL		580808	0					
ANR	580951	Argument	A		580808	1					
ANR	580952	Identifier	A		580808	0					
ANR	580953	Argument	B		580808	2					
ANR	580954	Identifier	B		580808	0					
ANR	580955	ExpressionStatement	free ( b )	425:1:11946:11954	580808	8	True				
ANR	580956	CallExpression	free ( b )		580808	0					
ANR	580957	Callee	free		580808	0					
ANR	580958	Identifier	free		580808	0					
ANR	580959	ArgumentList	b		580808	1					
ANR	580960	Argument	b		580808	0					
ANR	580961	Identifier	b		580808	0					
ANR	580962	ReturnStatement	return symbols ;	426:1:11957:11971	580808	9	True				
ANR	580963	Identifier	symbols		580808	0					
ANR	580964	ReturnType	static RList *		580808	1					
ANR	580965	Identifier	parseSymbols		580808	2					
ANR	580966	ParameterList	"RBuffer * buf , int x , ut64 * eof , int count"		580808	3					
ANR	580967	Parameter	RBuffer * buf	398:27:10953:10964	580808	0	True				
ANR	580968	ParameterType	RBuffer *		580808	0					
ANR	580969	Identifier	buf		580808	1					
ANR	580970	Parameter	int x	398:41:10967:10971	580808	1	True				
ANR	580971	ParameterType	int		580808	0					
ANR	580972	Identifier	x		580808	1					
ANR	580973	Parameter	ut64 * eof	398:48:10974:10982	580808	2	True				
ANR	580974	ParameterType	ut64 *		580808	0					
ANR	580975	Identifier	eof		580808	1					
ANR	580976	Parameter	int count	398:59:10985:10993	580808	3	True				
ANR	580977	ParameterType	int		580808	0					
ANR	580978	Identifier	count		580808	1					
ANR	580979	CFGEntryNode	ENTRY		580808		True				
ANR	580980	CFGExitNode	EXIT		580808		True				
ANR	580981	Symbol	A		580808						
ANR	580982	Symbol	b		580808						
ANR	580983	Symbol	B		580808						
ANR	580984	Symbol	NULL		580808						
ANR	580985	Symbol	r_read_le32		580808						
ANR	580986	Symbol	r_list_newf		580808						
ANR	580987	Symbol	r_bin_symbol_free		580808						
ANR	580988	Symbol	count		580808						
ANR	580989	Symbol	i		580808						
ANR	580990	Symbol	calloc		580808						
ANR	580991	Symbol	structSize		580808						
ANR	580992	Symbol	symbols		580808						
ANR	580993	Symbol	n		580808						
ANR	580994	Symbol	buf		580808						
ANR	580995	Symbol	x		580808						
ANR	580996	Symbol	* eof		580808						
ANR	580997	Symbol	newSymbol		580808						
ANR	580998	Symbol	eof		580808						
ANR	580999	Function	filterSymbolStrings	429:0:11976:12335							
ANR	581000	FunctionDef	"filterSymbolStrings (RList * strings , int n_sections)"		580999	0					
ANR	581001	CompoundStatement		429:66:12042:12335	580999	0					
ANR	581002	IdentifierDeclStatement	RListIter * iter ;	430:1:12045:12060	580999	0	True				
ANR	581003	IdentifierDecl	* iter		580999	0					
ANR	581004	IdentifierDeclType	RListIter *		580999	0					
ANR	581005	Identifier	iter		580999	1					
ANR	581006	IdentifierDeclStatement	RBinString * s ;	431:1:12063:12076	580999	1	True				
ANR	581007	IdentifierDecl	* s		580999	0					
ANR	581008	IdentifierDeclType	RBinString *		580999	0					
ANR	581009	Identifier	s		580999	1					
ANR	581010	IdentifierDeclStatement	RList * list = r_list_newf ( NULL ) ;	432:1:12079:12111	580999	2	True				
ANR	581011	IdentifierDecl	* list = r_list_newf ( NULL )		580999	0					
ANR	581012	IdentifierDeclType	RList *		580999	0					
ANR	581013	Identifier	list		580999	1					
ANR	581014	AssignmentExpression	* list = r_list_newf ( NULL )		580999	2		=			
ANR	581015	Identifier	list		580999	0					
ANR	581016	CallExpression	r_list_newf ( NULL )		580999	1					
ANR	581017	Callee	r_list_newf		580999	0					
ANR	581018	Identifier	r_list_newf		580999	0					
ANR	581019	ArgumentList	NULL		580999	1					
ANR	581020	Argument	NULL		580999	0					
ANR	581021	Identifier	NULL		580999	0					
ANR	581022	Statement	r_list_foreach	433:1:12114:12127	580999	3	True				
ANR	581023	Statement	(	433:16:12129:12129	580999	4	True				
ANR	581024	Statement	strings	433:17:12130:12136	580999	5	True				
ANR	581025	Statement	","	433:24:12137:12137	580999	6	True				
ANR	581026	Statement	iter	433:26:12139:12142	580999	7	True				
ANR	581027	Statement	","	433:30:12143:12143	580999	8	True				
ANR	581028	Statement	s	433:32:12145:12145	580999	9	True				
ANR	581029	Statement	)	433:33:12146:12146	580999	10	True				
ANR	581030	CompoundStatement		5:35:105:105	580999	11					
ANR	581031	IfStatement	"if ( * s -> string != '_' && ! strstr ( s -> string , ""$$"" ) )"		580999	0					
ANR	581032	Condition	"* s -> string != '_' && ! strstr ( s -> string , ""$$"" )"	434:6:12156:12201	580999	0	True				
ANR	581033	AndExpression	"* s -> string != '_' && ! strstr ( s -> string , ""$$"" )"		580999	0		&&			
ANR	581034	EqualityExpression	* s -> string != '_'		580999	0		!=			
ANR	581035	UnaryOperationExpression	* s -> string		580999	0					
ANR	581036	UnaryOperator	*		580999	0					
ANR	581037	PtrMemberAccess	s -> string		580999	1					
ANR	581038	Identifier	s		580999	0					
ANR	581039	Identifier	string		580999	1					
ANR	581040	PrimaryExpression	'_'		580999	1					
ANR	581041	UnaryOperationExpression	"! strstr ( s -> string , ""$$"" )"		580999	1					
ANR	581042	UnaryOperator	!		580999	0					
ANR	581043	CallExpression	"strstr ( s -> string , ""$$"" )"		580999	1					
ANR	581044	Callee	strstr		580999	0					
ANR	581045	Identifier	strstr		580999	0					
ANR	581046	ArgumentList	s -> string		580999	1					
ANR	581047	Argument	s -> string		580999	0					
ANR	581048	PtrMemberAccess	s -> string		580999	0					
ANR	581049	Identifier	s		580999	0					
ANR	581050	Identifier	string		580999	1					
ANR	581051	Argument	"""$$"""		580999	1					
ANR	581052	PrimaryExpression	"""$$"""		580999	0					
ANR	581053	CompoundStatement		6:54:161:161	580999	1					
ANR	581054	ContinueStatement	continue ;	435:3:12209:12217	580999	0	True				
ANR	581055	IfStatement	"if ( strchr ( s -> string , ' ' ) )"		580999	1					
ANR	581056	Condition	"strchr ( s -> string , ' ' )"	437:6:12229:12251	580999	0	True				
ANR	581057	CallExpression	"strchr ( s -> string , ' ' )"		580999	0					
ANR	581058	Callee	strchr		580999	0					
ANR	581059	Identifier	strchr		580999	0					
ANR	581060	ArgumentList	s -> string		580999	1					
ANR	581061	Argument	s -> string		580999	0					
ANR	581062	PtrMemberAccess	s -> string		580999	0					
ANR	581063	Identifier	s		580999	0					
ANR	581064	Identifier	string		580999	1					
ANR	581065	Argument	' '		580999	1					
ANR	581066	PrimaryExpression	' '		580999	0					
ANR	581067	CompoundStatement		9:31:211:211	580999	1					
ANR	581068	ContinueStatement	continue ;	438:3:12259:12267	580999	0	True				
ANR	581069	ExpressionStatement	"r_list_append ( list , newSymbol ( s , 0 , 0 ) )"	440:2:12275:12316	580999	2	True				
ANR	581070	CallExpression	"r_list_append ( list , newSymbol ( s , 0 , 0 ) )"		580999	0					
ANR	581071	Callee	r_list_append		580999	0					
ANR	581072	Identifier	r_list_append		580999	0					
ANR	581073	ArgumentList	list		580999	1					
ANR	581074	Argument	list		580999	0					
ANR	581075	Identifier	list		580999	0					
ANR	581076	Argument	"newSymbol ( s , 0 , 0 )"		580999	1					
ANR	581077	CallExpression	"newSymbol ( s , 0 , 0 )"		580999	0					
ANR	581078	Callee	newSymbol		580999	0					
ANR	581079	Identifier	newSymbol		580999	0					
ANR	581080	ArgumentList	s		580999	1					
ANR	581081	Argument	s		580999	0					
ANR	581082	Identifier	s		580999	0					
ANR	581083	Argument	0		580999	1					
ANR	581084	PrimaryExpression	0		580999	0					
ANR	581085	Argument	0		580999	2					
ANR	581086	PrimaryExpression	0		580999	0					
ANR	581087	ReturnStatement	return list ;	442:1:12322:12333	580999	12	True				
ANR	581088	Identifier	list		580999	0					
ANR	581089	ReturnType	static RList *		580999	1					
ANR	581090	Identifier	filterSymbolStrings		580999	2					
ANR	581091	ParameterList	"RList * strings , int n_sections"		580999	3					
ANR	581092	Parameter	RList * strings	429:34:12010:12023	580999	0	True				
ANR	581093	ParameterType	RList *		580999	0					
ANR	581094	Identifier	strings		580999	1					
ANR	581095	Parameter	int n_sections	429:50:12026:12039	580999	1	True				
ANR	581096	ParameterType	int		580999	0					
ANR	581097	Identifier	n_sections		580999	1					
ANR	581098	CFGEntryNode	ENTRY		580999		True				
ANR	581099	CFGExitNode	EXIT		580999		True				
ANR	581100	CFGErrorNode	ERROR		580999		True				
ANR	581101	Symbol	NULL		580999						
ANR	581102	Symbol	s -> string		580999						
ANR	581103	Symbol	r_list_newf		580999						
ANR	581104	Symbol	iter		580999						
ANR	581105	Symbol	strchr		580999						
ANR	581106	Symbol	n_sections		580999						
ANR	581107	Symbol	list		580999						
ANR	581108	Symbol	s		580999						
ANR	581109	Symbol	strings		580999						
ANR	581110	Symbol	strstr		580999						
ANR	581111	Symbol	* s -> string		580999						
ANR	581112	Symbol	* * s		580999						
ANR	581113	Symbol	newSymbol		580999						
ANR	581114	Symbol	* s		580999						
ANR	581115	Function	parseTable3	447:0:12403:13121							
ANR	581116	FunctionDef	"parseTable3 (RBuffer * buf , int x)"		581115	0					
ANR	581117	CompoundStatement		447:45:12448:13121	581115	0					
ANR	581118	IdentifierDeclStatement	const int dword_section = dwordsBeginAt ;	449:1:12471:12510	581115	0	True				
ANR	581119	IdentifierDecl	dword_section = dwordsBeginAt		581115	0					
ANR	581120	IdentifierDeclType	const int		581115	0					
ANR	581121	Identifier	dword_section		581115	1					
ANR	581122	AssignmentExpression	dword_section = dwordsBeginAt		581115	2		=			
ANR	581123	Identifier	dwordsBeginAt		581115	0					
ANR	581124	Identifier	dwordsBeginAt		581115	1					
ANR	581125	IdentifierDeclStatement	int dword_section_end = stringsBeginAt ;	450:1:12513:12551	581115	1	True				
ANR	581126	IdentifierDecl	dword_section_end = stringsBeginAt		581115	0					
ANR	581127	IdentifierDeclType	int		581115	0					
ANR	581128	Identifier	dword_section_end		581115	1					
ANR	581129	AssignmentExpression	dword_section_end = stringsBeginAt		581115	2		=			
ANR	581130	Identifier	stringsBeginAt		581115	0					
ANR	581131	Identifier	stringsBeginAt		581115	1					
ANR	581132	IdentifierDeclStatement	"int i , size = dword_section_end - dword_section ;"	451:1:12554:12601	581115	2	True				
ANR	581133	IdentifierDecl	i		581115	0					
ANR	581134	IdentifierDeclType	int		581115	0					
ANR	581135	Identifier	i		581115	1					
ANR	581136	IdentifierDecl	size = dword_section_end - dword_section		581115	1					
ANR	581137	IdentifierDeclType	int		581115	0					
ANR	581138	Identifier	size		581115	1					
ANR	581139	AssignmentExpression	size = dword_section_end - dword_section		581115	2		=			
ANR	581140	Identifier	size		581115	0					
ANR	581141	AdditiveExpression	dword_section_end - dword_section		581115	1		-			
ANR	581142	Identifier	dword_section_end		581115	0					
ANR	581143	Identifier	dword_section		581115	1					
ANR	581144	IdentifierDeclStatement	int min = - 1 ;	452:1:12604:12616	581115	3	True				
ANR	581145	IdentifierDecl	min = - 1		581115	0					
ANR	581146	IdentifierDeclType	int		581115	0					
ANR	581147	Identifier	min		581115	1					
ANR	581148	AssignmentExpression	min = - 1		581115	2		=			
ANR	581149	Identifier	min		581115	0					
ANR	581150	UnaryOperationExpression	- 1		581115	1					
ANR	581151	UnaryOperator	-		581115	0					
ANR	581152	PrimaryExpression	1		581115	1					
ANR	581153	IdentifierDeclStatement	int max = - 1 ;	453:1:12619:12631	581115	4	True				
ANR	581154	IdentifierDecl	max = - 1		581115	0					
ANR	581155	IdentifierDeclType	int		581115	0					
ANR	581156	Identifier	max		581115	1					
ANR	581157	AssignmentExpression	max = - 1		581115	2		=			
ANR	581158	Identifier	max		581115	0					
ANR	581159	UnaryOperationExpression	- 1		581115	1					
ANR	581160	UnaryOperator	-		581115	0					
ANR	581161	PrimaryExpression	1		581115	1					
ANR	581162	IdentifierDeclStatement	"ut8 * b = calloc ( size , 1 ) ;"	455:1:12669:12694	581115	5	True				
ANR	581163	IdentifierDecl	"* b = calloc ( size , 1 )"		581115	0					
ANR	581164	IdentifierDeclType	ut8 *		581115	0					
ANR	581165	Identifier	b		581115	1					
ANR	581166	AssignmentExpression	"* b = calloc ( size , 1 )"		581115	2		=			
ANR	581167	Identifier	b		581115	0					
ANR	581168	CallExpression	"calloc ( size , 1 )"		581115	1					
ANR	581169	Callee	calloc		581115	0					
ANR	581170	Identifier	calloc		581115	0					
ANR	581171	ArgumentList	size		581115	1					
ANR	581172	Argument	size		581115	0					
ANR	581173	Identifier	size		581115	0					
ANR	581174	Argument	1		581115	1					
ANR	581175	PrimaryExpression	1		581115	0					
ANR	581176	IfStatement	if ( ! b )		581115	6					
ANR	581177	Condition	! b	456:5:12701:12702	581115	0	True				
ANR	581178	UnaryOperationExpression	! b		581115	0					
ANR	581179	UnaryOperator	!		581115	0					
ANR	581180	Identifier	b		581115	1					
ANR	581181	CompoundStatement		10:9:256:256	581115	1					
ANR	581182	ReturnStatement	return ;	457:2:12709:12715	581115	0	True				
ANR	581183	ExpressionStatement	"r_buf_read_at ( buf , x , b , size )"	459:1:12721:12752	581115	7	True				
ANR	581184	CallExpression	"r_buf_read_at ( buf , x , b , size )"		581115	0					
ANR	581185	Callee	r_buf_read_at		581115	0					
ANR	581186	Identifier	r_buf_read_at		581115	0					
ANR	581187	ArgumentList	buf		581115	1					
ANR	581188	Argument	buf		581115	0					
ANR	581189	Identifier	buf		581115	0					
ANR	581190	Argument	x		581115	1					
ANR	581191	Identifier	x		581115	0					
ANR	581192	Argument	b		581115	2					
ANR	581193	Identifier	b		581115	0					
ANR	581194	Argument	size		581115	3					
ANR	581195	Identifier	size		581115	0					
ANR	581196	ForStatement	for ( i = 0 ; i < size ; i += 8 )		581115	8					
ANR	581197	ForInit	i = 0 ;	460:6:12760:12765	581115	0	True				
ANR	581198	AssignmentExpression	i = 0		581115	0		=			
ANR	581199	Identifier	i		581115	0					
ANR	581200	PrimaryExpression	0		581115	1					
ANR	581201	Condition	i < size	460:13:12767:12774	581115	1	True				
ANR	581202	RelationalExpression	i < size		581115	0		<			
ANR	581203	Identifier	i		581115	0					
ANR	581204	Identifier	size		581115	1					
ANR	581205	AssignmentExpression	i += 8	460:23:12777:12782	581115	2	True	+=			
ANR	581206	Identifier	i		581115	0					
ANR	581207	PrimaryExpression	8		581115	1					
ANR	581208	CompoundStatement		20:2:439:466	581115	3					
ANR	581209	IfStatement	if ( i + 4 >= size )		581115	0					
ANR	581210	Condition	i + 4 >= size	462:6:12825:12837	581115	0	True				
ANR	581211	RelationalExpression	i + 4 >= size		581115	0		>=			
ANR	581212	AdditiveExpression	i + 4		581115	0		+			
ANR	581213	Identifier	i		581115	0					
ANR	581214	PrimaryExpression	4		581115	1					
ANR	581215	Identifier	size		581115	1					
ANR	581216	CompoundStatement		16:21:391:391	581115	1					
ANR	581217	ExpressionStatement	"eprintf ( ""..skip..\\n"" )"	463:3:12845:12867	581115	0	True				
ANR	581218	CallExpression	"eprintf ( ""..skip..\\n"" )"		581115	0					
ANR	581219	Callee	eprintf		581115	0					
ANR	581220	Identifier	eprintf		581115	0					
ANR	581221	ArgumentList	"""..skip..\\n"""		581115	1					
ANR	581222	Argument	"""..skip..\\n"""		581115	0					
ANR	581223	PrimaryExpression	"""..skip..\\n"""		581115	0					
ANR	581224	ContinueStatement	continue ;	464:3:12872:12880	581115	1	True				
ANR	581225	IdentifierDeclStatement	int v = r_read_le32 ( b + i ) ;	466:2:12888:12915	581115	1	True				
ANR	581226	IdentifierDecl	v = r_read_le32 ( b + i )		581115	0					
ANR	581227	IdentifierDeclType	int		581115	0					
ANR	581228	Identifier	v		581115	1					
ANR	581229	AssignmentExpression	v = r_read_le32 ( b + i )		581115	2		=			
ANR	581230	Identifier	v		581115	0					
ANR	581231	CallExpression	r_read_le32 ( b + i )		581115	1					
ANR	581232	Callee	r_read_le32		581115	0					
ANR	581233	Identifier	r_read_le32		581115	0					
ANR	581234	ArgumentList	b + i		581115	1					
ANR	581235	Argument	b + i		581115	0					
ANR	581236	AdditiveExpression	b + i		581115	0		+			
ANR	581237	Identifier	b		581115	0					
ANR	581238	Identifier	i		581115	1					
ANR	581239	IfStatement	if ( min == - 1 || v < min )		581115	2					
ANR	581240	Condition	min == - 1 || v < min	469:6:13021:13040	581115	0	True				
ANR	581241	OrExpression	min == - 1 || v < min		581115	0		||			
ANR	581242	EqualityExpression	min == - 1		581115	0		==			
ANR	581243	Identifier	min		581115	0					
ANR	581244	UnaryOperationExpression	- 1		581115	1					
ANR	581245	UnaryOperator	-		581115	0					
ANR	581246	PrimaryExpression	1		581115	1					
ANR	581247	RelationalExpression	v < min		581115	1		<			
ANR	581248	Identifier	v		581115	0					
ANR	581249	Identifier	min		581115	1					
ANR	581250	CompoundStatement		23:28:594:594	581115	1					
ANR	581251	ExpressionStatement	min = v	470:3:13048:13055	581115	0	True				
ANR	581252	AssignmentExpression	min = v		581115	0		=			
ANR	581253	Identifier	min		581115	0					
ANR	581254	Identifier	v		581115	1					
ANR	581255	IfStatement	if ( max == - 1 || v > max )		581115	3					
ANR	581256	Condition	max == - 1 || v > max	472:6:13067:13086	581115	0	True				
ANR	581257	OrExpression	max == - 1 || v > max		581115	0		||			
ANR	581258	EqualityExpression	max == - 1		581115	0		==			
ANR	581259	Identifier	max		581115	0					
ANR	581260	UnaryOperationExpression	- 1		581115	1					
ANR	581261	UnaryOperator	-		581115	0					
ANR	581262	PrimaryExpression	1		581115	1					
ANR	581263	RelationalExpression	v > max		581115	1		>			
ANR	581264	Identifier	v		581115	0					
ANR	581265	Identifier	max		581115	1					
ANR	581266	CompoundStatement		26:28:640:640	581115	1					
ANR	581267	ExpressionStatement	max = v	473:3:13094:13101	581115	0	True				
ANR	581268	AssignmentExpression	max = v		581115	0		=			
ANR	581269	Identifier	max		581115	0					
ANR	581270	Identifier	v		581115	1					
ANR	581271	ExpressionStatement	free ( b )	476:1:13111:13119	581115	9	True				
ANR	581272	CallExpression	free ( b )		581115	0					
ANR	581273	Callee	free		581115	0					
ANR	581274	Identifier	free		581115	0					
ANR	581275	ArgumentList	b		581115	1					
ANR	581276	Argument	b		581115	0					
ANR	581277	Identifier	b		581115	0					
ANR	581278	ReturnType	static void		581115	1					
ANR	581279	Identifier	parseTable3		581115	2					
ANR	581280	ParameterList	"RBuffer * buf , int x"		581115	3					
ANR	581281	Parameter	RBuffer * buf	447:24:12427:12438	581115	0	True				
ANR	581282	ParameterType	RBuffer *		581115	0					
ANR	581283	Identifier	buf		581115	1					
ANR	581284	Parameter	int x	447:38:12441:12445	581115	1	True				
ANR	581285	ParameterType	int		581115	0					
ANR	581286	Identifier	x		581115	1					
ANR	581287	CFGEntryNode	ENTRY		581115		True				
ANR	581288	CFGExitNode	EXIT		581115		True				
ANR	581289	Symbol	dword_section_end		581115						
ANR	581290	Symbol	b		581115						
ANR	581291	Symbol	dwordsBeginAt		581115						
ANR	581292	Symbol	stringsBeginAt		581115						
ANR	581293	Symbol	r_read_le32		581115						
ANR	581294	Symbol	max		581115						
ANR	581295	Symbol	i		581115						
ANR	581296	Symbol	calloc		581115						
ANR	581297	Symbol	dword_section		581115						
ANR	581298	Symbol	buf		581115						
ANR	581299	Symbol	min		581115						
ANR	581300	Symbol	size		581115						
ANR	581301	Symbol	v		581115						
ANR	581302	Symbol	x		581115						
ANR	581303	Function	load_buffer	479:0:13124:16019							
ANR	581304	FunctionDef	"load_buffer (RBinFile * bf , void * * bin_obj , RBuffer * buf , ut64 loadaddr , Sdb * sdb)"		581303	0					
ANR	581305	CompoundStatement		479:93:13217:16019	581303	0					
ANR	581306	Statement	SYMBOLS	481:1:13226:13232	581303	0	True				
ANR	581307	Statement	HEADER	481:9:13234:13239	581303	1	True				
ANR	581308	Statement	0	483:1:13243:13243	581303	2	True				
ANR	581309	Statement	MAGIC	483:3:13245:13249	581303	3	True				
ANR	581310	Statement	02f	483:9:13251:13253	581303	4	True				
ANR	581311	Statement	f01ff	483:12:13254:13258	581303	5	True				
ANR	581312	Statement	4	484:1:13261:13261	581303	6	True				
ANR	581313	Statement	VERSION	484:3:13263:13269	581303	7	True				
ANR	581314	Statement	1	484:11:13271:13271	581303	8	True				
ANR	581315	Statement	(	484:13:13273:13273	581303	9	True				
ANR	581316	Statement	little	484:14:13274:13279	581303	10	True				
ANR	581317	Statement	endian	484:21:13281:13286	581303	11	True				
ANR	581318	Statement	)	484:27:13287:13287	581303	12	True				
ANR	581319	Statement	8	485:1:13290:13290	581303	13	True				
ANR	581320	Statement	ffffffff	485:8:13297:13304	581303	14	True				
ANR	581321	Statement	16	486:0:13306:13307	581303	15	True				
ANR	581322	Statement	002	486:8:13314:13316	581303	16	True				
ANR	581323	Statement	b0000	486:11:13317:13321	581303	17	True				
ANR	581324	Statement	01000000	486:17:13323:13330	581303	18	True				
ANR	581325	CompoundStatement		8:26:114:114	581303	19					
ANR	581326	Statement	0x2b00	486:28:13334:13339	581303	0	True				
ANR	581327	Statement	","	486:34:13340:13340	581303	1	True				
ANR	581328	Statement	0x0000	486:36:13342:13347	581303	2	True				
ANR	581329	Statement	24	487:0:13351:13352	581303	20	True				
ANR	581330	Statement	UUID	487:3:13354:13357	581303	21	True				
ANR	581331	Statement	16	487:11:13362:13363	581303	22	True				
ANR	581332	Statement	bytes	487:14:13365:13369	581303	23	True				
ANR	581333	Statement	40	488:0:13371:13372	581303	24	True				
ANR	581334	Statement	2621	488:3:13374:13377	581303	25	True				
ANR	581335	Statement	d85b	488:8:13379:13382	581303	26	True				
ANR	581336	Statement	2100	488:13:13384:13387	581303	27	True				
ANR	581337	Statement	2000	488:18:13389:13392	581303	28	True				
ANR	581338	Statement	0000	488:23:13394:13397	581303	29	True				
ANR	581339	Statement	0000	488:28:13399:13402	581303	30	True				
ANR	581340	Statement	0000	488:33:13404:13407	581303	31	True				
ANR	581341	Statement	0000	488:38:13409:13412	581303	32	True				
ANR	581342	Statement	56	489:0:13414:13415	581303	33	True				
ANR	581343	Statement	ffff	489:3:13417:13420	581303	34	True				
ANR	581344	Statement	ffff	489:8:13422:13425	581303	35	True				
ANR	581345	Statement	ffff	489:13:13427:13430	581303	36	True				
ANR	581346	Statement	ff7f	489:18:13432:13435	581303	37	True				
ANR	581347	Statement	0	489:23:13437:13437	581303	38	True				
ANR	581348	Statement	c00	489:24:13438:13440	581303	39	True				
ANR	581349	Statement	0000	489:28:13442:13445	581303	40	True				
ANR	581350	Statement	0	489:33:13447:13447	581303	41	True				
ANR	581351	Statement	900	489:34:13448:13450	581303	42	True				
ANR	581352	Statement	0000	489:38:13452:13455	581303	43	True				
ANR	581353	Statement	72	490:0:13457:13458	581303	44	True				
ANR	581354	Statement	0400	490:3:13460:13463	581303	45	True				
ANR	581355	Statement	0000	490:8:13465:13468	581303	46	True				
ANR	581356	Statement	6800	490:13:13470:13473	581303	47	True				
ANR	581357	Statement	0000	490:18:13475:13478	581303	48	True				
ANR	581358	Statement	2f	490:23:13480:13481	581303	49	True				
ANR	581359	Statement	76	490:25:13482:13483	581303	50	True				
ANR	581360	Statement	6172	490:28:13485:13488	581303	51	True				
ANR	581361	Statement	2f	490:33:13490:13491	581303	52	True				
ANR	581362	Statement	66	490:35:13492:13493	581303	53	True				
ANR	581363	Statement	6f	490:38:13495:13496	581303	54	True				
ANR	581364	Statement	6	490:40:13497:13497	581303	55	True				
ANR	581365	Statement	c	490:41:13498:13498	581303	56	True				
ANR	581366	Statement	...	490:43:13500:13502	581303	57	True				
ANR	581367	Statement	.	490:46:13503:13503	581303	58	True				
ANR	581368	Statement	4	490:48:13505:13505	581303	59	True				
ANR	581369	Statement	","	490:49:13506:13506	581303	60	True				
ANR	581370	Statement	104	490:51:13508:13510	581303	61	True				
ANR	581371	Statement	184	491:0:13534:13536	581303	62	True				
ANR	581372	Statement	0x000000b8	492:0:13539:13548	581303	63	True				
ANR	581373	Statement	5f	492:12:13551:13552	581303	64	True				
ANR	581374	Statement	5f	492:14:13553:13554	581303	65	True				
ANR	581375	Statement	5445	492:17:13556:13559	581303	66	True				
ANR	581376	Statement	5854	492:22:13561:13564	581303	67	True				
ANR	581377	Statement	0000	492:27:13566:13569	581303	68	True				
ANR	581378	Statement	0000	492:32:13571:13574	581303	69	True				
ANR	581379	Statement	0000	492:37:13576:13579	581303	70	True				
ANR	581380	Statement	0000	492:42:13581:13584	581303	71	True				
ANR	581381	Statement	0000	492:47:13586:13589	581303	72	True				
ANR	581382	Statement	0000	492:52:13591:13594	581303	73	True				
ANR	581383	Statement	0000	492:57:13596:13599	581303	74	True				
ANR	581384	Statement	0000	492:62:13601:13604	581303	75	True				
ANR	581385	Statement	0000	492:67:13606:13609	581303	76	True				
ANR	581386	Statement	00	492:72:13611:13612	581303	77	True				
ANR	581387	Statement	80	492:74:13613:13614	581303	78	True				
ANR	581388	Statement	0000	492:77:13616:13619	581303	79	True				
ANR	581389	Statement	0000	492:82:13621:13624	581303	80	True				
ANR	581390	Statement	0000	492:87:13626:13629	581303	81	True				
ANR	581391	Statement	__TEXT	492:93:13632:13637	581303	82	True				
ANR	581392	Statement	...	492:99:13638:13640	581303	83	True				
ANR	581393	Statement	...	492:102:13641:13643	581303	84	True				
ANR	581394	Statement	...	492:105:13644:13646	581303	85	True				
ANR	581395	Statement	...	492:108:13647:13649	581303	86	True				
ANR	581396	Statement	...	492:111:13650:13652	581303	87	True				
ANR	581397	Statement	...	492:114:13653:13655	581303	88	True				
ANR	581398	Statement	...	492:117:13656:13658	581303	89	True				
ANR	581399	Statement	...	492:120:13659:13661	581303	90	True				
ANR	581400	Statement	.	492:123:13662:13662	581303	91	True				
ANR	581401	Statement	.	492:124:13663:13663	581303	92	True				
ANR	581402	Statement	0x000000d8	493:0:13665:13674	581303	93	True				
ANR	581403	Statement	5f	493:12:13677:13678	581303	94	True				
ANR	581404	Statement	5f	493:14:13679:13680	581303	95	True				
ANR	581405	Statement	4441	493:17:13682:13685	581303	96	True				
ANR	581406	Statement	5441	493:22:13687:13690	581303	97	True				
ANR	581407	Statement	0000	493:27:13692:13695	581303	98	True				
ANR	581408	Statement	0000	493:32:13697:13700	581303	99	True				
ANR	581409	Statement	0000	493:37:13702:13705	581303	100	True				
ANR	581410	Statement	0000	493:42:13707:13710	581303	101	True				
ANR	581411	Statement	0000	493:47:13712:13715	581303	102	True				
ANR	581412	Statement	00	493:52:13717:13718	581303	103	True				
ANR	581413	Statement	80	493:54:13719:13720	581303	104	True				
ANR	581414	Statement	0000	493:57:13722:13725	581303	105	True				
ANR	581415	Statement	0000	493:62:13727:13730	581303	106	True				
ANR	581416	Statement	0000	493:67:13732:13735	581303	107	True				
ANR	581417	Statement	0040	493:72:13737:13740	581303	108	True				
ANR	581418	Statement	0000	493:77:13742:13745	581303	109	True				
ANR	581419	Statement	0000	493:82:13747:13750	581303	110	True				
ANR	581420	Statement	0000	493:87:13752:13755	581303	111	True				
ANR	581421	Statement	__DATA	493:93:13758:13763	581303	112	True				
ANR	581422	Statement	...	493:99:13764:13766	581303	113	True				
ANR	581423	Statement	...	493:102:13767:13769	581303	114	True				
ANR	581424	Statement	...	493:105:13770:13772	581303	115	True				
ANR	581425	Statement	...	493:108:13773:13775	581303	116	True				
ANR	581426	Statement	...	493:111:13776:13778	581303	117	True				
ANR	581427	Statement	...	493:114:13779:13781	581303	118	True				
ANR	581428	Statement	.	493:117:13782:13782	581303	119	True				
ANR	581429	Statement	...	493:119:13784:13786	581303	120	True				
ANR	581430	Statement	...	493:122:13787:13789	581303	121	True				
ANR	581431	Statement	0x000000f8	494:0:13791:13800	581303	122	True				
ANR	581432	Statement	5f	494:12:13803:13804	581303	123	True				
ANR	581433	Statement	5f	494:14:13805:13806	581303	124	True				
ANR	581434	Statement	4	494:17:13808:13808	581303	125	True				
ANR	581435	Statement	c4c	494:18:13809:13811	581303	126	True				
ANR	581436	Statement	564d	494:22:13813:13816	581303	127	True				
ANR	581437	Statement	0000	494:27:13818:13821	581303	128	True				
ANR	581438	Statement	0000	494:32:13823:13826	581303	129	True				
ANR	581439	Statement	0000	494:37:13828:13831	581303	130	True				
ANR	581440	Statement	0000	494:42:13833:13836	581303	131	True				
ANR	581441	Statement	0000	494:47:13838:13841	581303	132	True				
ANR	581442	Statement	00	494:52:13843:13844	581303	133	True				
ANR	581443	Statement	c0	494:54:13845:13846	581303	134	True				
ANR	581444	Statement	0000	494:57:13848:13851	581303	135	True				
ANR	581445	Statement	0000	494:62:13853:13856	581303	136	True				
ANR	581446	Statement	0000	494:67:13858:13861	581303	137	True				
ANR	581447	Statement	0000	494:72:13863:13866	581303	138	True				
ANR	581448	Statement	0100	494:77:13868:13871	581303	139	True				
ANR	581449	Statement	0000	494:82:13873:13876	581303	140	True				
ANR	581450	Statement	0000	494:87:13878:13881	581303	141	True				
ANR	581451	Statement	__LLVM	494:93:13884:13889	581303	142	True				
ANR	581452	Statement	...	494:99:13890:13892	581303	143	True				
ANR	581453	Statement	...	494:102:13893:13895	581303	144	True				
ANR	581454	Statement	...	494:105:13896:13898	581303	145	True				
ANR	581455	Statement	...	494:108:13899:13901	581303	146	True				
ANR	581456	Statement	...	494:111:13902:13904	581303	147	True				
ANR	581457	Statement	...	494:114:13905:13907	581303	148	True				
ANR	581458	Statement	...	494:117:13908:13910	581303	149	True				
ANR	581459	Statement	...	494:120:13911:13913	581303	150	True				
ANR	581460	Statement	.	494:123:13914:13914	581303	151	True				
ANR	581461	Statement	.	494:124:13915:13915	581303	152	True				
ANR	581462	Statement	0x00000118	495:0:13917:13926	581303	153	True				
ANR	581463	Statement	5f	495:12:13929:13930	581303	154	True				
ANR	581464	Statement	5f	495:14:13931:13932	581303	155	True				
ANR	581465	Statement	4	495:17:13934:13934	581303	156	True				
ANR	581466	Statement	c49	495:18:13935:13937	581303	157	True				
ANR	581467	Statement	4e4	495:22:13939:13941	581303	158	True				
ANR	581468	Statement	b	495:25:13942:13942	581303	159	True				
ANR	581469	Statement	4544	495:27:13944:13947	581303	160	True				
ANR	581470	Statement	4954	495:32:13949:13952	581303	161	True				
ANR	581471	Statement	0000	495:37:13954:13957	581303	162	True				
ANR	581472	Statement	0000	495:42:13959:13962	581303	163	True				
ANR	581473	Statement	0000	495:47:13964:13967	581303	164	True				
ANR	581474	Statement	00	495:52:13969:13970	581303	165	True				
ANR	581475	Statement	c0	495:54:13971:13972	581303	166	True				
ANR	581476	Statement	0100	495:57:13974:13977	581303	167	True				
ANR	581477	Statement	0000	495:62:13979:13982	581303	168	True				
ANR	581478	Statement	0000	495:67:13984:13987	581303	169	True				
ANR	581479	Statement	00	495:72:13989:13990	581303	170	True				
ANR	581480	Statement	c0	495:74:13991:13992	581303	171	True				
ANR	581481	Statement	0000	495:77:13994:13997	581303	172	True				
ANR	581482	Statement	0000	495:82:13999:14002	581303	173	True				
ANR	581483	Statement	0000	495:87:14004:14007	581303	174	True				
ANR	581484	Statement	__LINKEDIT	495:93:14010:14019	581303	175	True				
ANR	581485	Statement	...	495:103:14020:14022	581303	176	True				
ANR	581486	Statement	...	495:106:14023:14025	581303	177	True				
ANR	581487	Statement	...	495:109:14026:14028	581303	178	True				
ANR	581488	Statement	...	495:112:14029:14031	581303	179	True				
ANR	581489	Statement	...	495:115:14032:14034	581303	180	True				
ANR	581490	Statement	...	495:118:14035:14037	581303	181	True				
ANR	581491	Statement	...	495:121:14038:14040	581303	182	True				
ANR	581492	Statement	.	495:124:14041:14041	581303	183	True				
ANR	581493	IdentifierDeclStatement	SymbolsHeader sh = parseHeader ( buf ) ;	499:1:14085:14121	581303	184	True				
ANR	581494	IdentifierDecl	sh = parseHeader ( buf )		581303	0					
ANR	581495	IdentifierDeclType	SymbolsHeader		581303	0					
ANR	581496	Identifier	sh		581303	1					
ANR	581497	AssignmentExpression	sh = parseHeader ( buf )		581303	2		=			
ANR	581498	Identifier	sh		581303	0					
ANR	581499	CallExpression	parseHeader ( buf )		581303	1					
ANR	581500	Callee	parseHeader		581303	0					
ANR	581501	Identifier	parseHeader		581303	0					
ANR	581502	ArgumentList	buf		581303	1					
ANR	581503	Argument	buf		581303	0					
ANR	581504	Identifier	buf		581303	0					
ANR	581505	IfStatement	if ( ! sh . valid )		581303	185					
ANR	581506	Condition	! sh . valid	500:5:14128:14136	581303	0	True				
ANR	581507	UnaryOperationExpression	! sh . valid		581303	0					
ANR	581508	UnaryOperator	!		581303	0					
ANR	581509	MemberAccess	sh . valid		581303	1					
ANR	581510	Identifier	sh		581303	0					
ANR	581511	Identifier	valid		581303	1					
ANR	581512	CompoundStatement		22:16:921:921	581303	1					
ANR	581513	ExpressionStatement	"eprintf ( ""Invalid headers\\n"" )"	501:2:14143:14172	581303	0	True				
ANR	581514	CallExpression	"eprintf ( ""Invalid headers\\n"" )"		581303	0					
ANR	581515	Callee	eprintf		581303	0					
ANR	581516	Identifier	eprintf		581303	0					
ANR	581517	ArgumentList	"""Invalid headers\\n"""		581303	1					
ANR	581518	Argument	"""Invalid headers\\n"""		581303	0					
ANR	581519	PrimaryExpression	"""Invalid headers\\n"""		581303	0					
ANR	581520	ReturnStatement	return false ;	502:2:14176:14188	581303	1	True				
ANR	581521	Identifier	false		581303	0					
ANR	581522	ExpressionStatement	printSymbolsHeader ( sh )	504:1:14194:14217	581303	186	True				
ANR	581523	CallExpression	printSymbolsHeader ( sh )		581303	0					
ANR	581524	Callee	printSymbolsHeader		581303	0					
ANR	581525	Identifier	printSymbolsHeader		581303	0					
ANR	581526	ArgumentList	sh		581303	1					
ANR	581527	Argument	sh		581303	0					
ANR	581528	Identifier	sh		581303	0					
ANR	581529	IdentifierDeclStatement	"SymbolsMetadata sm = parseMetadata ( buf , 0x40 ) ;"	507:1:14257:14303	581303	187	True				
ANR	581530	IdentifierDecl	"sm = parseMetadata ( buf , 0x40 )"		581303	0					
ANR	581531	IdentifierDeclType	SymbolsMetadata		581303	0					
ANR	581532	Identifier	sm		581303	1					
ANR	581533	AssignmentExpression	"sm = parseMetadata ( buf , 0x40 )"		581303	2		=			
ANR	581534	Identifier	sm		581303	0					
ANR	581535	CallExpression	"parseMetadata ( buf , 0x40 )"		581303	1					
ANR	581536	Callee	parseMetadata		581303	0					
ANR	581537	Identifier	parseMetadata		581303	0					
ANR	581538	ArgumentList	buf		581303	1					
ANR	581539	Argument	buf		581303	0					
ANR	581540	Identifier	buf		581303	0					
ANR	581541	Argument	0x40		581303	1					
ANR	581542	PrimaryExpression	0x40		581303	0					
ANR	581543	IdentifierDeclStatement	"SymbolsDragons sd = parseDragons ( buf , sm . addr + sm . size , sm . bits ) ;"	510:1:14385:14451	581303	188	True				
ANR	581544	IdentifierDecl	"sd = parseDragons ( buf , sm . addr + sm . size , sm . bits )"		581303	0					
ANR	581545	IdentifierDeclType	SymbolsDragons		581303	0					
ANR	581546	Identifier	sd		581303	1					
ANR	581547	AssignmentExpression	"sd = parseDragons ( buf , sm . addr + sm . size , sm . bits )"		581303	2		=			
ANR	581548	Identifier	sd		581303	0					
ANR	581549	CallExpression	"parseDragons ( buf , sm . addr + sm . size , sm . bits )"		581303	1					
ANR	581550	Callee	parseDragons		581303	0					
ANR	581551	Identifier	parseDragons		581303	0					
ANR	581552	ArgumentList	buf		581303	1					
ANR	581553	Argument	buf		581303	0					
ANR	581554	Identifier	buf		581303	0					
ANR	581555	Argument	sm . addr + sm . size		581303	1					
ANR	581556	AdditiveExpression	sm . addr + sm . size		581303	0		+			
ANR	581557	MemberAccess	sm . addr		581303	0					
ANR	581558	Identifier	sm		581303	0					
ANR	581559	Identifier	addr		581303	1					
ANR	581560	MemberAccess	sm . size		581303	1					
ANR	581561	Identifier	sm		581303	0					
ANR	581562	Identifier	size		581303	1					
ANR	581563	Argument	sm . bits		581303	2					
ANR	581564	MemberAccess	sm . bits		581303	0					
ANR	581565	Identifier	sm		581303	0					
ANR	581566	Identifier	bits		581303	1					
ANR	581567	ExpressionStatement	symbolsBeginAt = sd . addr + sd . size	516:1:14639:14673	581303	189	True				
ANR	581568	AssignmentExpression	symbolsBeginAt = sd . addr + sd . size		581303	0		=			
ANR	581569	Identifier	symbolsBeginAt		581303	0					
ANR	581570	AdditiveExpression	sd . addr + sd . size		581303	1		+			
ANR	581571	MemberAccess	sd . addr		581303	0					
ANR	581572	Identifier	sd		581303	0					
ANR	581573	Identifier	addr		581303	1					
ANR	581574	MemberAccess	sd . size		581303	1					
ANR	581575	Identifier	sd		581303	0					
ANR	581576	Identifier	size		581303	1					
ANR	581577	IdentifierDeclStatement	"D eprintf ( ""Symbols at 0x%08x\\n"" , ( ut32 ) symbolsBeginAt ) ;"	517:1:14699:14754	581303	190	True				
ANR	581578	IdentifierDecl	"eprintf ( ""Symbols at 0x%08x\\n"" , ( ut32 ) symbolsBeginAt )"		581303	0					
ANR	581579	IdentifierDeclType	D		581303	0					
ANR	581580	Identifier	eprintf		581303	1					
ANR	581581	Expression	"""Symbols at 0x%08x\\n"" , ( ut32 ) symbolsBeginAt"		581303	2					
ANR	581582	PrimaryExpression	"""Symbols at 0x%08x\\n"""		581303	0					
ANR	581583	CastExpression	( ut32 ) symbolsBeginAt		581303	1					
ANR	581584	CastTarget	ut32		581303	0					
ANR	581585	Identifier	symbolsBeginAt		581303	1					
ANR	581586	IdentifierDeclStatement	"RList * symbols = parseSymbols ( buf , symbolsBeginAt , & dwordsBeginAt , sd . n_symbols ) ;"	518:1:14757:14838	581303	191	True				
ANR	581587	IdentifierDecl	"* symbols = parseSymbols ( buf , symbolsBeginAt , & dwordsBeginAt , sd . n_symbols )"		581303	0					
ANR	581588	IdentifierDeclType	RList *		581303	0					
ANR	581589	Identifier	symbols		581303	1					
ANR	581590	AssignmentExpression	"* symbols = parseSymbols ( buf , symbolsBeginAt , & dwordsBeginAt , sd . n_symbols )"		581303	2		=			
ANR	581591	Identifier	symbols		581303	0					
ANR	581592	CallExpression	"parseSymbols ( buf , symbolsBeginAt , & dwordsBeginAt , sd . n_symbols )"		581303	1					
ANR	581593	Callee	parseSymbols		581303	0					
ANR	581594	Identifier	parseSymbols		581303	0					
ANR	581595	ArgumentList	buf		581303	1					
ANR	581596	Argument	buf		581303	0					
ANR	581597	Identifier	buf		581303	0					
ANR	581598	Argument	symbolsBeginAt		581303	1					
ANR	581599	Identifier	symbolsBeginAt		581303	0					
ANR	581600	Argument	& dwordsBeginAt		581303	2					
ANR	581601	UnaryOperationExpression	& dwordsBeginAt		581303	0					
ANR	581602	UnaryOperator	&		581303	0					
ANR	581603	Identifier	dwordsBeginAt		581303	1					
ANR	581604	Argument	sd . n_symbols		581303	3					
ANR	581605	MemberAccess	sd . n_symbols		581303	0					
ANR	581606	Identifier	sd		581303	0					
ANR	581607	Identifier	n_symbols		581303	1					
ANR	581608	IdentifierDeclStatement	"D eprintf ( ""Dwords at 0x%08x\\n"" , ( ut32 ) dwordsBeginAt ) ;"	519:1:14841:14894	581303	192	True				
ANR	581609	IdentifierDecl	"eprintf ( ""Dwords at 0x%08x\\n"" , ( ut32 ) dwordsBeginAt )"		581303	0					
ANR	581610	IdentifierDeclType	D		581303	0					
ANR	581611	Identifier	eprintf		581303	1					
ANR	581612	Expression	"""Dwords at 0x%08x\\n"" , ( ut32 ) dwordsBeginAt"		581303	2					
ANR	581613	PrimaryExpression	"""Dwords at 0x%08x\\n"""		581303	0					
ANR	581614	CastExpression	( ut32 ) dwordsBeginAt		581303	1					
ANR	581615	CastTarget	ut32		581303	0					
ANR	581616	Identifier	dwordsBeginAt		581303	1					
ANR	581617	ExpressionStatement	stringsBeginAt = dwordsBeginAt + ( sd . n_symbols * 8 )	520:1:14897:14948	581303	193	True				
ANR	581618	AssignmentExpression	stringsBeginAt = dwordsBeginAt + ( sd . n_symbols * 8 )		581303	0		=			
ANR	581619	Identifier	stringsBeginAt		581303	0					
ANR	581620	AdditiveExpression	dwordsBeginAt + ( sd . n_symbols * 8 )		581303	1		+			
ANR	581621	Identifier	dwordsBeginAt		581303	0					
ANR	581622	MultiplicativeExpression	sd . n_symbols * 8		581303	1		*			
ANR	581623	MemberAccess	sd . n_symbols		581303	0					
ANR	581624	Identifier	sd		581303	0					
ANR	581625	Identifier	n_symbols		581303	1					
ANR	581626	PrimaryExpression	8		581303	1					
ANR	581627	IdentifierDeclStatement	"D eprintf ( ""Strings at 0x%08x\\n"" , ( ut32 ) stringsBeginAt ) ;"	521:1:14951:15006	581303	194	True				
ANR	581628	IdentifierDecl	"eprintf ( ""Strings at 0x%08x\\n"" , ( ut32 ) stringsBeginAt )"		581303	0					
ANR	581629	IdentifierDeclType	D		581303	0					
ANR	581630	Identifier	eprintf		581303	1					
ANR	581631	Expression	"""Strings at 0x%08x\\n"" , ( ut32 ) stringsBeginAt"		581303	2					
ANR	581632	PrimaryExpression	"""Strings at 0x%08x\\n"""		581303	0					
ANR	581633	CastExpression	( ut32 ) stringsBeginAt		581303	1					
ANR	581634	CastTarget	ut32		581303	0					
ANR	581635	Identifier	stringsBeginAt		581303	1					
ANR	581636	ExpressionStatement	"parseTable3 ( buf , dwordsBeginAt )"	524:1:15074:15106	581303	195	True				
ANR	581637	CallExpression	"parseTable3 ( buf , dwordsBeginAt )"		581303	0					
ANR	581638	Callee	parseTable3		581303	0					
ANR	581639	Identifier	parseTable3		581303	0					
ANR	581640	ArgumentList	buf		581303	1					
ANR	581641	Argument	buf		581303	0					
ANR	581642	Identifier	buf		581303	0					
ANR	581643	Argument	dwordsBeginAt		581303	1					
ANR	581644	Identifier	dwordsBeginAt		581303	0					
ANR	581645	IdentifierDeclStatement	"RList * strings = parseStrings ( buf , stringsBeginAt , stringsBeginAt + r_buf_size ( buf ) ) ;"	527:1:15146:15232	581303	196	True				
ANR	581646	IdentifierDecl	"* strings = parseStrings ( buf , stringsBeginAt , stringsBeginAt + r_buf_size ( buf ) )"		581303	0					
ANR	581647	IdentifierDeclType	RList *		581303	0					
ANR	581648	Identifier	strings		581303	1					
ANR	581649	AssignmentExpression	"* strings = parseStrings ( buf , stringsBeginAt , stringsBeginAt + r_buf_size ( buf ) )"		581303	2		=			
ANR	581650	Identifier	strings		581303	0					
ANR	581651	CallExpression	"parseStrings ( buf , stringsBeginAt , stringsBeginAt + r_buf_size ( buf ) )"		581303	1					
ANR	581652	Callee	parseStrings		581303	0					
ANR	581653	Identifier	parseStrings		581303	0					
ANR	581654	ArgumentList	buf		581303	1					
ANR	581655	Argument	buf		581303	0					
ANR	581656	Identifier	buf		581303	0					
ANR	581657	Argument	stringsBeginAt		581303	1					
ANR	581658	Identifier	stringsBeginAt		581303	0					
ANR	581659	Argument	stringsBeginAt + r_buf_size ( buf )		581303	2					
ANR	581660	AdditiveExpression	stringsBeginAt + r_buf_size ( buf )		581303	0		+			
ANR	581661	Identifier	stringsBeginAt		581303	0					
ANR	581662	CallExpression	r_buf_size ( buf )		581303	1					
ANR	581663	Callee	r_buf_size		581303	0					
ANR	581664	Identifier	r_buf_size		581303	0					
ANR	581665	ArgumentList	buf		581303	1					
ANR	581666	Argument	buf		581303	0					
ANR	581667	Identifier	buf		581303	0					
ANR	581668	IfStatement	if ( strings )		581303	197					
ANR	581669	Condition	strings	530:5:15342:15348	581303	0	True				
ANR	581670	Identifier	strings		581303	0					
ANR	581671	CompoundStatement		59:2:2401:2410	581303	1					
ANR	581672	IdentifierDeclStatement	"RList * symbolStrings = filterSymbolStrings ( strings , sd . n_sections ) ;"	531:2:15355:15422	581303	0	True				
ANR	581673	IdentifierDecl	"* symbolStrings = filterSymbolStrings ( strings , sd . n_sections )"		581303	0					
ANR	581674	IdentifierDeclType	RList *		581303	0					
ANR	581675	Identifier	symbolStrings		581303	1					
ANR	581676	AssignmentExpression	"* symbolStrings = filterSymbolStrings ( strings , sd . n_sections )"		581303	2		=			
ANR	581677	Identifier	symbolStrings		581303	0					
ANR	581678	CallExpression	"filterSymbolStrings ( strings , sd . n_sections )"		581303	1					
ANR	581679	Callee	filterSymbolStrings		581303	0					
ANR	581680	Identifier	filterSymbolStrings		581303	0					
ANR	581681	ArgumentList	strings		581303	1					
ANR	581682	Argument	strings		581303	0					
ANR	581683	Identifier	strings		581303	0					
ANR	581684	Argument	sd . n_sections		581303	1					
ANR	581685	MemberAccess	sd . n_sections		581303	0					
ANR	581686	Identifier	sd		581303	0					
ANR	581687	Identifier	n_sections		581303	1					
ANR	581688	IdentifierDeclStatement	RListIter * iter ;	535:2:15581:15596	581303	1	True				
ANR	581689	IdentifierDecl	* iter		581303	0					
ANR	581690	IdentifierDeclType	RListIter *		581303	0					
ANR	581691	Identifier	iter		581303	1					
ANR	581692	IdentifierDeclStatement	RBinSymbol * sym ;	536:2:15600:15615	581303	2	True				
ANR	581693	IdentifierDecl	* sym		581303	0					
ANR	581694	IdentifierDeclType	RBinSymbol *		581303	0					
ANR	581695	Identifier	sym		581303	1					
ANR	581696	IdentifierDeclStatement	int n = 0 ;	537:2:15619:15628	581303	3	True				
ANR	581697	IdentifierDecl	n = 0		581303	0					
ANR	581698	IdentifierDeclType	int		581303	0					
ANR	581699	Identifier	n		581303	1					
ANR	581700	AssignmentExpression	n = 0		581303	2		=			
ANR	581701	Identifier	n		581303	0					
ANR	581702	PrimaryExpression	0		581303	1					
ANR	581703	Statement	r_list_foreach	538:2:15650:15663	581303	4	True				
ANR	581704	Statement	(	538:17:15665:15665	581303	5	True				
ANR	581705	Statement	symbols	538:18:15666:15672	581303	6	True				
ANR	581706	Statement	","	538:25:15673:15673	581303	7	True				
ANR	581707	Statement	iter	538:27:15675:15678	581303	8	True				
ANR	581708	Statement	","	538:31:15679:15679	581303	9	True				
ANR	581709	Statement	sym	538:33:15681:15683	581303	10	True				
ANR	581710	Statement	)	538:36:15684:15684	581303	11	True				
ANR	581711	CompoundStatement		62:3:2503:2551	581303	12					
ANR	581712	IdentifierDeclStatement	int m = n + sd . n_sections ;	539:3:15691:15716	581303	0	True				
ANR	581713	IdentifierDecl	m = n + sd . n_sections		581303	0					
ANR	581714	IdentifierDeclType	int		581303	0					
ANR	581715	Identifier	m		581303	1					
ANR	581716	AssignmentExpression	m = n + sd . n_sections		581303	2		=			
ANR	581717	Identifier	m		581303	0					
ANR	581718	AdditiveExpression	n + sd . n_sections		581303	1		+			
ANR	581719	Identifier	n		581303	0					
ANR	581720	MemberAccess	sd . n_sections		581303	1					
ANR	581721	Identifier	sd		581303	0					
ANR	581722	Identifier	n_sections		581303	1					
ANR	581723	IdentifierDeclStatement	"RBinString * bs = r_list_get_n ( symbolStrings , m ) ;"	540:3:15721:15769	581303	1	True				
ANR	581724	IdentifierDecl	"* bs = r_list_get_n ( symbolStrings , m )"		581303	0					
ANR	581725	IdentifierDeclType	RBinString *		581303	0					
ANR	581726	Identifier	bs		581303	1					
ANR	581727	AssignmentExpression	"* bs = r_list_get_n ( symbolStrings , m )"		581303	2		=			
ANR	581728	Identifier	bs		581303	0					
ANR	581729	CallExpression	"r_list_get_n ( symbolStrings , m )"		581303	1					
ANR	581730	Callee	r_list_get_n		581303	0					
ANR	581731	Identifier	r_list_get_n		581303	0					
ANR	581732	ArgumentList	symbolStrings		581303	1					
ANR	581733	Argument	symbolStrings		581303	0					
ANR	581734	Identifier	symbolStrings		581303	0					
ANR	581735	Argument	m		581303	1					
ANR	581736	Identifier	m		581303	0					
ANR	581737	IfStatement	if ( bs )		581303	2					
ANR	581738	Condition	bs	541:7:15778:15779	581303	0	True				
ANR	581739	Identifier	bs		581303	0					
ANR	581740	CompoundStatement		63:11:2564:2564	581303	1					
ANR	581741	ExpressionStatement	sym -> name = strdup ( bs -> string )	542:4:15788:15819	581303	0	True				
ANR	581742	AssignmentExpression	sym -> name = strdup ( bs -> string )		581303	0		=			
ANR	581743	PtrMemberAccess	sym -> name		581303	0					
ANR	581744	Identifier	sym		581303	0					
ANR	581745	Identifier	name		581303	1					
ANR	581746	CallExpression	strdup ( bs -> string )		581303	1					
ANR	581747	Callee	strdup		581303	0					
ANR	581748	Identifier	strdup		581303	0					
ANR	581749	ArgumentList	bs -> string		581303	1					
ANR	581750	Argument	bs -> string		581303	0					
ANR	581751	PtrMemberAccess	bs -> string		581303	0					
ANR	581752	Identifier	bs		581303	0					
ANR	581753	Identifier	string		581303	1					
ANR	581754	ElseStatement	else		581303	0					
ANR	581755	CompoundStatement		65:10:2613:2613	581303	0					
ANR	581756	ExpressionStatement	"sym -> name = r_str_newf ( ""__unnamed_%d"" , n )"	544:4:15837:15879	581303	0	True				
ANR	581757	AssignmentExpression	"sym -> name = r_str_newf ( ""__unnamed_%d"" , n )"		581303	0		=			
ANR	581758	PtrMemberAccess	sym -> name		581303	0					
ANR	581759	Identifier	sym		581303	0					
ANR	581760	Identifier	name		581303	1					
ANR	581761	CallExpression	"r_str_newf ( ""__unnamed_%d"" , n )"		581303	1					
ANR	581762	Callee	r_str_newf		581303	0					
ANR	581763	Identifier	r_str_newf		581303	0					
ANR	581764	ArgumentList	"""__unnamed_%d"""		581303	1					
ANR	581765	Argument	"""__unnamed_%d"""		581303	0					
ANR	581766	PrimaryExpression	"""__unnamed_%d"""		581303	0					
ANR	581767	Argument	n		581303	1					
ANR	581768	Identifier	n		581303	0					
ANR	581769	ExpressionStatement	sym -> ordinal = n	546:3:15889:15905	581303	3	True				
ANR	581770	AssignmentExpression	sym -> ordinal = n		581303	0		=			
ANR	581771	PtrMemberAccess	sym -> ordinal		581303	0					
ANR	581772	Identifier	sym		581303	0					
ANR	581773	Identifier	ordinal		581303	1					
ANR	581774	Identifier	n		581303	1					
ANR	581775	ExpressionStatement	n ++	547:3:15910:15913	581303	4	True				
ANR	581776	PostIncDecOperationExpression	n ++		581303	0					
ANR	581777	Identifier	n		581303	0					
ANR	581778	IncDec	++		581303	1					
ANR	581779	ExpressionStatement	r_list_free ( strings )	549:2:15921:15942	581303	13	True				
ANR	581780	CallExpression	r_list_free ( strings )		581303	0					
ANR	581781	Callee	r_list_free		581303	0					
ANR	581782	Identifier	r_list_free		581303	0					
ANR	581783	ArgumentList	strings		581303	1					
ANR	581784	Argument	strings		581303	0					
ANR	581785	Identifier	strings		581303	0					
ANR	581786	ExpressionStatement	r_list_free ( symbolStrings )	550:2:15946:15973	581303	14	True				
ANR	581787	CallExpression	r_list_free ( symbolStrings )		581303	0					
ANR	581788	Callee	r_list_free		581303	0					
ANR	581789	Identifier	r_list_free		581303	0					
ANR	581790	ArgumentList	symbolStrings		581303	1					
ANR	581791	Argument	symbolStrings		581303	0					
ANR	581792	Identifier	symbolStrings		581303	0					
ANR	581793	ExpressionStatement	globalSymbols = symbols	551:2:15977:16000	581303	15	True				
ANR	581794	AssignmentExpression	globalSymbols = symbols		581303	0		=			
ANR	581795	Identifier	globalSymbols		581303	0					
ANR	581796	Identifier	symbols		581303	1					
ANR	581797	ReturnStatement	return true ;	553:1:16006:16017	581303	198	True				
ANR	581798	Identifier	true		581303	0					
ANR	581799	ReturnType	static bool		581303	1					
ANR	581800	Identifier	load_buffer		581303	2					
ANR	581801	ParameterList	"RBinFile * bf , void * * bin_obj , RBuffer * buf , ut64 loadaddr , Sdb * sdb"		581303	3					
ANR	581802	Parameter	RBinFile * bf	479:24:13148:13159	581303	0	True				
ANR	581803	ParameterType	RBinFile *		581303	0					
ANR	581804	Identifier	bf		581303	1					
ANR	581805	Parameter	void * * bin_obj	479:38:13162:13175	581303	1	True				
ANR	581806	ParameterType	void * *		581303	0					
ANR	581807	Identifier	bin_obj		581303	1					
ANR	581808	Parameter	RBuffer * buf	479:54:13178:13189	581303	2	True				
ANR	581809	ParameterType	RBuffer *		581303	0					
ANR	581810	Identifier	buf		581303	1					
ANR	581811	Parameter	ut64 loadaddr	479:68:13192:13204	581303	3	True				
ANR	581812	ParameterType	ut64		581303	0					
ANR	581813	Identifier	loadaddr		581303	1					
ANR	581814	Parameter	Sdb * sdb	479:83:13207:13214	581303	4	True				
ANR	581815	ParameterType	Sdb *		581303	0					
ANR	581816	Identifier	sdb		581303	1					
ANR	581817	CFGEntryNode	ENTRY		581303		True				
ANR	581818	CFGExitNode	EXIT		581303		True				
ANR	581819	Symbol	symbolStrings		581303						
ANR	581820	Symbol	sym -> ordinal		581303						
ANR	581821	Symbol	bf		581303						
ANR	581822	Symbol	sym		581303						
ANR	581823	Symbol	bs -> string		581303						
ANR	581824	Symbol	sd . n_sections		581303						
ANR	581825	Symbol	filterSymbolStrings		581303						
ANR	581826	Symbol	r_str_newf		581303						
ANR	581827	Symbol	symbolsBeginAt		581303						
ANR	581828	Symbol	symbols		581303						
ANR	581829	Symbol	loadaddr		581303						
ANR	581830	Symbol	sd . size		581303						
ANR	581831	Symbol	parseHeader		581303						
ANR	581832	Symbol	sd		581303						
ANR	581833	Symbol	bs		581303						
ANR	581834	Symbol	eprintf		581303						
ANR	581835	Symbol	globalSymbols		581303						
ANR	581836	Symbol	strings		581303						
ANR	581837	Symbol	* bs		581303						
ANR	581838	Symbol	sh		581303						
ANR	581839	Symbol	sm		581303						
ANR	581840	Symbol	sd . n_symbols		581303						
ANR	581841	Symbol	parseSymbols		581303						
ANR	581842	Symbol	& dwordsBeginAt		581303						
ANR	581843	Symbol	stringsBeginAt		581303						
ANR	581844	Symbol	dwordsBeginAt		581303						
ANR	581845	Symbol	sm . size		581303						
ANR	581846	Symbol	false		581303						
ANR	581847	Symbol	sh . valid		581303						
ANR	581848	Symbol	iter		581303						
ANR	581849	Symbol	r_list_get_n		581303						
ANR	581850	Symbol	sm . bits		581303						
ANR	581851	Symbol	parseDragons		581303						
ANR	581852	Symbol	m		581303						
ANR	581853	Symbol	n		581303						
ANR	581854	Symbol	sdb		581303						
ANR	581855	Symbol	* sym		581303						
ANR	581856	Symbol	buf		581303						
ANR	581857	Symbol	bin_obj		581303						
ANR	581858	Symbol	parseStrings		581303						
ANR	581859	Symbol	sym -> name		581303						
ANR	581860	Symbol	sd . addr		581303						
ANR	581861	Symbol	true		581303						
ANR	581862	Symbol	strdup		581303						
ANR	581863	Symbol	parseMetadata		581303						
ANR	581864	Symbol	sm . addr		581303						
ANR	581865	Symbol	r_buf_size		581303						
ANR	581866	Function	sections	556:0:16022:16544							
ANR	581867	FunctionDef	sections (RBinFile * bf)		581866	0					
ANR	581868	CompoundStatement		556:37:16059:16544	581866	0					
ANR	581869	IdentifierDeclStatement	"SymbolsMetadata sm = parseMetadata ( bf -> buf , 0x40 ) ;"	557:1:16062:16112	581866	0	True				
ANR	581870	IdentifierDecl	"sm = parseMetadata ( bf -> buf , 0x40 )"		581866	0					
ANR	581871	IdentifierDeclType	SymbolsMetadata		581866	0					
ANR	581872	Identifier	sm		581866	1					
ANR	581873	AssignmentExpression	"sm = parseMetadata ( bf -> buf , 0x40 )"		581866	2		=			
ANR	581874	Identifier	sm		581866	0					
ANR	581875	CallExpression	"parseMetadata ( bf -> buf , 0x40 )"		581866	1					
ANR	581876	Callee	parseMetadata		581866	0					
ANR	581877	Identifier	parseMetadata		581866	0					
ANR	581878	ArgumentList	bf -> buf		581866	1					
ANR	581879	Argument	bf -> buf		581866	0					
ANR	581880	PtrMemberAccess	bf -> buf		581866	0					
ANR	581881	Identifier	bf		581866	0					
ANR	581882	Identifier	buf		581866	1					
ANR	581883	Argument	0x40		581866	1					
ANR	581884	PrimaryExpression	0x40		581866	0					
ANR	581885	IdentifierDeclStatement	"SymbolsDragons sd = parseDragons ( bf -> buf , sm . addr + sm . size , sm . bits ) ;"	558:1:16115:16185	581866	1	True				
ANR	581886	IdentifierDecl	"sd = parseDragons ( bf -> buf , sm . addr + sm . size , sm . bits )"		581866	0					
ANR	581887	IdentifierDeclType	SymbolsDragons		581866	0					
ANR	581888	Identifier	sd		581866	1					
ANR	581889	AssignmentExpression	"sd = parseDragons ( bf -> buf , sm . addr + sm . size , sm . bits )"		581866	2		=			
ANR	581890	Identifier	sd		581866	0					
ANR	581891	CallExpression	"parseDragons ( bf -> buf , sm . addr + sm . size , sm . bits )"		581866	1					
ANR	581892	Callee	parseDragons		581866	0					
ANR	581893	Identifier	parseDragons		581866	0					
ANR	581894	ArgumentList	bf -> buf		581866	1					
ANR	581895	Argument	bf -> buf		581866	0					
ANR	581896	PtrMemberAccess	bf -> buf		581866	0					
ANR	581897	Identifier	bf		581866	0					
ANR	581898	Identifier	buf		581866	1					
ANR	581899	Argument	sm . addr + sm . size		581866	1					
ANR	581900	AdditiveExpression	sm . addr + sm . size		581866	0		+			
ANR	581901	MemberAccess	sm . addr		581866	0					
ANR	581902	Identifier	sm		581866	0					
ANR	581903	Identifier	addr		581866	1					
ANR	581904	MemberAccess	sm . size		581866	1					
ANR	581905	Identifier	sm		581866	0					
ANR	581906	Identifier	size		581866	1					
ANR	581907	Argument	sm . bits		581866	2					
ANR	581908	MemberAccess	sm . bits		581866	0					
ANR	581909	Identifier	sm		581866	0					
ANR	581910	Identifier	bits		581866	1					
ANR	581911	IdentifierDeclStatement	"RList * sections = parseSections ( bf -> buf , SECTIONS_BEGIN - 0x18 , sd . n_sections , NULL ) ;"	559:1:16188:16273	581866	2	True				
ANR	581912	IdentifierDecl	"* sections = parseSections ( bf -> buf , SECTIONS_BEGIN - 0x18 , sd . n_sections , NULL )"		581866	0					
ANR	581913	IdentifierDeclType	RList *		581866	0					
ANR	581914	Identifier	sections		581866	1					
ANR	581915	AssignmentExpression	"* sections = parseSections ( bf -> buf , SECTIONS_BEGIN - 0x18 , sd . n_sections , NULL )"		581866	2		=			
ANR	581916	Identifier	sections		581866	0					
ANR	581917	CallExpression	"parseSections ( bf -> buf , SECTIONS_BEGIN - 0x18 , sd . n_sections , NULL )"		581866	1					
ANR	581918	Callee	parseSections		581866	0					
ANR	581919	Identifier	parseSections		581866	0					
ANR	581920	ArgumentList	bf -> buf		581866	1					
ANR	581921	Argument	bf -> buf		581866	0					
ANR	581922	PtrMemberAccess	bf -> buf		581866	0					
ANR	581923	Identifier	bf		581866	0					
ANR	581924	Identifier	buf		581866	1					
ANR	581925	Argument	SECTIONS_BEGIN - 0x18		581866	1					
ANR	581926	AdditiveExpression	SECTIONS_BEGIN - 0x18		581866	0		-			
ANR	581927	Identifier	SECTIONS_BEGIN		581866	0					
ANR	581928	PrimaryExpression	0x18		581866	1					
ANR	581929	Argument	sd . n_sections		581866	2					
ANR	581930	MemberAccess	sd . n_sections		581866	0					
ANR	581931	Identifier	sd		581866	0					
ANR	581932	Identifier	n_sections		581866	1					
ANR	581933	Argument	NULL		581866	3					
ANR	581934	Identifier	NULL		581866	0					
ANR	581935	IdentifierDeclStatement	RList * res = r_list_newf ( ( RListFree ) r_bin_section_free ) ;	560:1:16276:16332	581866	3	True				
ANR	581936	IdentifierDecl	* res = r_list_newf ( ( RListFree ) r_bin_section_free )		581866	0					
ANR	581937	IdentifierDeclType	RList *		581866	0					
ANR	581938	Identifier	res		581866	1					
ANR	581939	AssignmentExpression	* res = r_list_newf ( ( RListFree ) r_bin_section_free )		581866	2		=			
ANR	581940	Identifier	res		581866	0					
ANR	581941	CallExpression	r_list_newf ( ( RListFree ) r_bin_section_free )		581866	1					
ANR	581942	Callee	r_list_newf		581866	0					
ANR	581943	Identifier	r_list_newf		581866	0					
ANR	581944	ArgumentList	( RListFree ) r_bin_section_free		581866	1					
ANR	581945	Argument	( RListFree ) r_bin_section_free		581866	0					
ANR	581946	CastExpression	( RListFree ) r_bin_section_free		581866	0					
ANR	581947	CastTarget	RListFree		581866	0					
ANR	581948	Identifier	r_bin_section_free		581866	1					
ANR	581949	IdentifierDeclStatement	RListIter * iter ;	561:1:16335:16350	581866	4	True				
ANR	581950	IdentifierDecl	* iter		581866	0					
ANR	581951	IdentifierDeclType	RListIter *		581866	0					
ANR	581952	Identifier	iter		581866	1					
ANR	581953	IdentifierDeclStatement	RBinSection * s ;	562:1:16353:16367	581866	5	True				
ANR	581954	IdentifierDecl	* s		581866	0					
ANR	581955	IdentifierDeclType	RBinSection *		581866	0					
ANR	581956	Identifier	s		581866	1					
ANR	581957	Statement	r_list_foreach	563:1:16370:16383	581866	6	True				
ANR	581958	Statement	(	563:16:16385:16385	581866	7	True				
ANR	581959	Statement	sm	563:17:16386:16387	581866	8	True				
ANR	581960	Statement	.	563:19:16388:16388	581866	9	True				
ANR	581961	Statement	segments	563:20:16389:16396	581866	10	True				
ANR	581962	Statement	","	563:28:16397:16397	581866	11	True				
ANR	581963	Statement	iter	563:30:16399:16402	581866	12	True				
ANR	581964	Statement	","	563:34:16403:16403	581866	13	True				
ANR	581965	Statement	s	563:36:16405:16405	581866	14	True				
ANR	581966	Statement	)	563:37:16406:16406	581866	15	True				
ANR	581967	CompoundStatement		8:39:348:348	581866	16					
ANR	581968	ExpressionStatement	"r_list_append ( res , s )"	564:2:16412:16434	581866	0	True				
ANR	581969	CallExpression	"r_list_append ( res , s )"		581866	0					
ANR	581970	Callee	r_list_append		581866	0					
ANR	581971	Identifier	r_list_append		581866	0					
ANR	581972	ArgumentList	res		581866	1					
ANR	581973	Argument	res		581866	0					
ANR	581974	Identifier	res		581866	0					
ANR	581975	Argument	s		581866	1					
ANR	581976	Identifier	s		581866	0					
ANR	581977	Statement	r_list_foreach	566:1:16440:16453	581866	17	True				
ANR	581978	Statement	(	566:16:16455:16455	581866	18	True				
ANR	581979	Statement	sections	566:17:16456:16463	581866	19	True				
ANR	581980	Statement	","	566:25:16464:16464	581866	20	True				
ANR	581981	Statement	iter	566:27:16466:16469	581866	21	True				
ANR	581982	Statement	","	566:31:16470:16470	581866	22	True				
ANR	581983	Statement	s	566:33:16472:16472	581866	23	True				
ANR	581984	Statement	)	566:34:16473:16473	581866	24	True				
ANR	581985	CompoundStatement		11:36:415:415	581866	25					
ANR	581986	ExpressionStatement	"r_list_append ( res , s )"	567:2:16479:16501	581866	0	True				
ANR	581987	CallExpression	"r_list_append ( res , s )"		581866	0					
ANR	581988	Callee	r_list_append		581866	0					
ANR	581989	Identifier	r_list_append		581866	0					
ANR	581990	ArgumentList	res		581866	1					
ANR	581991	Argument	res		581866	0					
ANR	581992	Identifier	res		581866	0					
ANR	581993	Argument	s		581866	1					
ANR	581994	Identifier	s		581866	0					
ANR	581995	ExpressionStatement	r_list_free ( sections )	569:1:16507:16529	581866	26	True				
ANR	581996	CallExpression	r_list_free ( sections )		581866	0					
ANR	581997	Callee	r_list_free		581866	0					
ANR	581998	Identifier	r_list_free		581866	0					
ANR	581999	ArgumentList	sections		581866	1					
ANR	582000	Argument	sections		581866	0					
ANR	582001	Identifier	sections		581866	0					
ANR	582002	ReturnStatement	return res ;	570:1:16532:16542	581866	27	True				
ANR	582003	Identifier	res		581866	0					
ANR	582004	ReturnType	static RList *		581866	1					
ANR	582005	Identifier	sections		581866	2					
ANR	582006	ParameterList	RBinFile * bf		581866	3					
ANR	582007	Parameter	RBinFile * bf	556:23:16045:16056	581866	0	True				
ANR	582008	ParameterType	RBinFile *		581866	0					
ANR	582009	Identifier	bf		581866	1					
ANR	582010	CFGEntryNode	ENTRY		581866		True				
ANR	582011	CFGExitNode	EXIT		581866		True				
ANR	582012	Symbol	res		581866						
ANR	582013	Symbol	NULL		581866						
ANR	582014	Symbol	bf		581866						
ANR	582015	Symbol	sm . size		581866						
ANR	582016	Symbol	r_list_newf		581866						
ANR	582017	Symbol	* bf		581866						
ANR	582018	Symbol	SECTIONS_BEGIN		581866						
ANR	582019	Symbol	iter		581866						
ANR	582020	Symbol	sd . n_sections		581866						
ANR	582021	Symbol	r_bin_section_free		581866						
ANR	582022	Symbol	sm . bits		581866						
ANR	582023	Symbol	parseDragons		581866						
ANR	582024	Symbol	sections		581866						
ANR	582025	Symbol	sd		581866						
ANR	582026	Symbol	parseSections		581866						
ANR	582027	Symbol	s		581866						
ANR	582028	Symbol	bf -> buf		581866						
ANR	582029	Symbol	sm		581866						
ANR	582030	Symbol	parseMetadata		581866						
ANR	582031	Symbol	sm . addr		581866						
ANR	582032	Function	baddr	573:0:16547:16594							
ANR	582033	FunctionDef	baddr (RBinFile * bf)		582032	0					
ANR	582034	CompoundStatement		573:32:16579:16594	582032	0					
ANR	582035	Statement	return	574:1:16582:16587	582032	0	True				
ANR	582036	Statement	0L	574:8:16589:16590	582032	1	True				
ANR	582037	ExpressionStatement	L	574:10:16591:16592	582032	2	True				
ANR	582038	Identifier	L		582032	0					
ANR	582039	ReturnType	static ut64		582032	1					
ANR	582040	Identifier	baddr		582032	2					
ANR	582041	ParameterList	RBinFile * bf		582032	3					
ANR	582042	Parameter	RBinFile * bf	573:18:16565:16576	582032	0	True				
ANR	582043	ParameterType	RBinFile *		582032	0					
ANR	582044	Identifier	bf		582032	1					
ANR	582045	CFGEntryNode	ENTRY		582032		True				
ANR	582046	CFGExitNode	EXIT		582032		True				
ANR	582047	Symbol	bf		582032						
ANR	582048	Function	info	577:0:16597:17029							
ANR	582049	FunctionDef	info (RBinFile * bf)		582048	0					
ANR	582050	CompoundStatement		577:36:16633:17029	582048	0					
ANR	582051	IdentifierDeclStatement	"SymbolsMetadata sm = parseMetadata ( bf -> buf , 0x40 ) ;"	578:1:16636:16686	582048	0	True				
ANR	582052	IdentifierDecl	"sm = parseMetadata ( bf -> buf , 0x40 )"		582048	0					
ANR	582053	IdentifierDeclType	SymbolsMetadata		582048	0					
ANR	582054	Identifier	sm		582048	1					
ANR	582055	AssignmentExpression	"sm = parseMetadata ( bf -> buf , 0x40 )"		582048	2		=			
ANR	582056	Identifier	sm		582048	0					
ANR	582057	CallExpression	"parseMetadata ( bf -> buf , 0x40 )"		582048	1					
ANR	582058	Callee	parseMetadata		582048	0					
ANR	582059	Identifier	parseMetadata		582048	0					
ANR	582060	ArgumentList	bf -> buf		582048	1					
ANR	582061	Argument	bf -> buf		582048	0					
ANR	582062	PtrMemberAccess	bf -> buf		582048	0					
ANR	582063	Identifier	bf		582048	0					
ANR	582064	Identifier	buf		582048	1					
ANR	582065	Argument	0x40		582048	1					
ANR	582066	PrimaryExpression	0x40		582048	0					
ANR	582067	IdentifierDeclStatement	RBinInfo * ret = R_NEW0 ( RBinInfo ) ;	579:1:16689:16722	582048	1	True				
ANR	582068	IdentifierDecl	* ret = R_NEW0 ( RBinInfo )		582048	0					
ANR	582069	IdentifierDeclType	RBinInfo *		582048	0					
ANR	582070	Identifier	ret		582048	1					
ANR	582071	AssignmentExpression	* ret = R_NEW0 ( RBinInfo )		582048	2		=			
ANR	582072	Identifier	ret		582048	0					
ANR	582073	CallExpression	R_NEW0 ( RBinInfo )		582048	1					
ANR	582074	Callee	R_NEW0		582048	0					
ANR	582075	Identifier	R_NEW0		582048	0					
ANR	582076	ArgumentList	RBinInfo		582048	1					
ANR	582077	Argument	RBinInfo		582048	0					
ANR	582078	Identifier	RBinInfo		582048	0					
ANR	582079	IfStatement	if ( ! ret )		582048	2					
ANR	582080	Condition	! ret	580:5:16729:16732	582048	0	True				
ANR	582081	UnaryOperationExpression	! ret		582048	0					
ANR	582082	UnaryOperator	!		582048	0					
ANR	582083	Identifier	ret		582048	1					
ANR	582084	CompoundStatement		4:11:101:101	582048	1					
ANR	582085	ReturnStatement	return NULL ;	581:2:16739:16750	582048	0	True				
ANR	582086	Identifier	NULL		582048	0					
ANR	582087	ExpressionStatement	ret -> file = strdup ( bf -> file )	583:1:16756:16785	582048	3	True				
ANR	582088	AssignmentExpression	ret -> file = strdup ( bf -> file )		582048	0		=			
ANR	582089	PtrMemberAccess	ret -> file		582048	0					
ANR	582090	Identifier	ret		582048	0					
ANR	582091	Identifier	file		582048	1					
ANR	582092	CallExpression	strdup ( bf -> file )		582048	1					
ANR	582093	Callee	strdup		582048	0					
ANR	582094	Identifier	strdup		582048	0					
ANR	582095	ArgumentList	bf -> file		582048	1					
ANR	582096	Argument	bf -> file		582048	0					
ANR	582097	PtrMemberAccess	bf -> file		582048	0					
ANR	582098	Identifier	bf		582048	0					
ANR	582099	Identifier	file		582048	1					
ANR	582100	ExpressionStatement	"ret -> bclass = strdup ( ""symbols"" )"	584:1:16788:16820	582048	4	True				
ANR	582101	AssignmentExpression	"ret -> bclass = strdup ( ""symbols"" )"		582048	0		=			
ANR	582102	PtrMemberAccess	ret -> bclass		582048	0					
ANR	582103	Identifier	ret		582048	0					
ANR	582104	Identifier	bclass		582048	1					
ANR	582105	CallExpression	"strdup ( ""symbols"" )"		582048	1					
ANR	582106	Callee	strdup		582048	0					
ANR	582107	Identifier	strdup		582048	0					
ANR	582108	ArgumentList	"""symbols"""		582048	1					
ANR	582109	Argument	"""symbols"""		582048	0					
ANR	582110	PrimaryExpression	"""symbols"""		582048	0					
ANR	582111	ExpressionStatement	"ret -> os = strdup ( ""unknown"" )"	585:1:16823:16851	582048	5	True				
ANR	582112	AssignmentExpression	"ret -> os = strdup ( ""unknown"" )"		582048	0		=			
ANR	582113	PtrMemberAccess	ret -> os		582048	0					
ANR	582114	Identifier	ret		582048	0					
ANR	582115	Identifier	os		582048	1					
ANR	582116	CallExpression	"strdup ( ""unknown"" )"		582048	1					
ANR	582117	Callee	strdup		582048	0					
ANR	582118	Identifier	strdup		582048	0					
ANR	582119	ArgumentList	"""unknown"""		582048	1					
ANR	582120	Argument	"""unknown"""		582048	0					
ANR	582121	PrimaryExpression	"""unknown"""		582048	0					
ANR	582122	ExpressionStatement	ret -> arch = sm . arch ? strdup ( sm . arch ) : NULL	586:1:16854:16897	582048	6	True				
ANR	582123	AssignmentExpression	ret -> arch = sm . arch ? strdup ( sm . arch ) : NULL		582048	0		=			
ANR	582124	PtrMemberAccess	ret -> arch		582048	0					
ANR	582125	Identifier	ret		582048	0					
ANR	582126	Identifier	arch		582048	1					
ANR	582127	ConditionalExpression	sm . arch ? strdup ( sm . arch ) : NULL		582048	1					
ANR	582128	Condition	sm . arch		582048	0					
ANR	582129	MemberAccess	sm . arch		582048	0					
ANR	582130	Identifier	sm		582048	0					
ANR	582131	Identifier	arch		582048	1					
ANR	582132	CallExpression	strdup ( sm . arch )		582048	1					
ANR	582133	Callee	strdup		582048	0					
ANR	582134	Identifier	strdup		582048	0					
ANR	582135	ArgumentList	sm . arch		582048	1					
ANR	582136	Argument	sm . arch		582048	0					
ANR	582137	MemberAccess	sm . arch		582048	0					
ANR	582138	Identifier	sm		582048	0					
ANR	582139	Identifier	arch		582048	1					
ANR	582140	Identifier	NULL		582048	2					
ANR	582141	ExpressionStatement	ret -> bits = sm . bits	587:1:16900:16919	582048	7	True				
ANR	582142	AssignmentExpression	ret -> bits = sm . bits		582048	0		=			
ANR	582143	PtrMemberAccess	ret -> bits		582048	0					
ANR	582144	Identifier	ret		582048	0					
ANR	582145	Identifier	bits		582048	1					
ANR	582146	MemberAccess	sm . bits		582048	1					
ANR	582147	Identifier	sm		582048	0					
ANR	582148	Identifier	bits		582048	1					
ANR	582149	ExpressionStatement	"ret -> type = strdup ( ""Symbols file"" )"	588:1:16922:16957	582048	8	True				
ANR	582150	AssignmentExpression	"ret -> type = strdup ( ""Symbols file"" )"		582048	0		=			
ANR	582151	PtrMemberAccess	ret -> type		582048	0					
ANR	582152	Identifier	ret		582048	0					
ANR	582153	Identifier	type		582048	1					
ANR	582154	CallExpression	"strdup ( ""Symbols file"" )"		582048	1					
ANR	582155	Callee	strdup		582048	0					
ANR	582156	Identifier	strdup		582048	0					
ANR	582157	ArgumentList	"""Symbols file"""		582048	1					
ANR	582158	Argument	"""Symbols file"""		582048	0					
ANR	582159	PrimaryExpression	"""Symbols file"""		582048	0					
ANR	582160	ExpressionStatement	"ret -> subsystem = strdup ( ""llvm"" )"	589:1:16960:16992	582048	9	True				
ANR	582161	AssignmentExpression	"ret -> subsystem = strdup ( ""llvm"" )"		582048	0		=			
ANR	582162	PtrMemberAccess	ret -> subsystem		582048	0					
ANR	582163	Identifier	ret		582048	0					
ANR	582164	Identifier	subsystem		582048	1					
ANR	582165	CallExpression	"strdup ( ""llvm"" )"		582048	1					
ANR	582166	Callee	strdup		582048	0					
ANR	582167	Identifier	strdup		582048	0					
ANR	582168	ArgumentList	"""llvm"""		582048	1					
ANR	582169	Argument	"""llvm"""		582048	0					
ANR	582170	PrimaryExpression	"""llvm"""		582048	0					
ANR	582171	ExpressionStatement	ret -> has_va = true	590:1:16995:17013	582048	10	True				
ANR	582172	AssignmentExpression	ret -> has_va = true		582048	0		=			
ANR	582173	PtrMemberAccess	ret -> has_va		582048	0					
ANR	582174	Identifier	ret		582048	0					
ANR	582175	Identifier	has_va		582048	1					
ANR	582176	Identifier	true		582048	1					
ANR	582177	ReturnStatement	return ret ;	592:1:17017:17027	582048	11	True				
ANR	582178	Identifier	ret		582048	0					
ANR	582179	ReturnType	static RBinInfo *		582048	1					
ANR	582180	Identifier	info		582048	2					
ANR	582181	ParameterList	RBinFile * bf		582048	3					
ANR	582182	Parameter	RBinFile * bf	577:22:16619:16630	582048	0	True				
ANR	582183	ParameterType	RBinFile *		582048	0					
ANR	582184	Identifier	bf		582048	1					
ANR	582185	CFGEntryNode	ENTRY		582048		True				
ANR	582186	CFGExitNode	EXIT		582048		True				
ANR	582187	Symbol	ret		582048						
ANR	582188	Symbol	ret -> os		582048						
ANR	582189	Symbol	NULL		582048						
ANR	582190	Symbol	bf		582048						
ANR	582191	Symbol	ret -> arch		582048						
ANR	582192	Symbol	ret -> subsystem		582048						
ANR	582193	Symbol	* bf		582048						
ANR	582194	Symbol	* ret		582048						
ANR	582195	Symbol	sm . bits		582048						
ANR	582196	Symbol	ret -> bclass		582048						
ANR	582197	Symbol	R_NEW0		582048						
ANR	582198	Symbol	bf -> file		582048						
ANR	582199	Symbol	bf -> buf		582048						
ANR	582200	Symbol	true		582048						
ANR	582201	Symbol	ret -> bits		582048						
ANR	582202	Symbol	sm		582048						
ANR	582203	Symbol	RBinInfo		582048						
ANR	582204	Symbol	ret -> has_va		582048						
ANR	582205	Symbol	strdup		582048						
ANR	582206	Symbol	sm . arch		582048						
ANR	582207	Symbol	ret -> file		582048						
ANR	582208	Symbol	parseMetadata		582048						
ANR	582209	Symbol	ret -> type		582048						
ANR	582210	Function	check_buffer	595:0:17032:17172							
ANR	582211	FunctionDef	check_buffer (RBuffer * b)		582210	0					
ANR	582212	CompoundStatement		595:37:17069:17172	582210	0					
ANR	582213	IdentifierDeclStatement	ut8 buf [ 4 ] ;	596:1:17072:17082	582210	0	True				
ANR	582214	IdentifierDecl	buf [ 4 ]		582210	0					
ANR	582215	IdentifierDeclType	ut8 [ 4 ]		582210	0					
ANR	582216	Identifier	buf		582210	1					
ANR	582217	PrimaryExpression	4		582210	2					
ANR	582218	ExpressionStatement	"r_buf_read_at ( b , 0 , buf , sizeof ( buf ) )"	597:1:17085:17124	582210	1	True				
ANR	582219	CallExpression	"r_buf_read_at ( b , 0 , buf , sizeof ( buf ) )"		582210	0					
ANR	582220	Callee	r_buf_read_at		582210	0					
ANR	582221	Identifier	r_buf_read_at		582210	0					
ANR	582222	ArgumentList	b		582210	1					
ANR	582223	Argument	b		582210	0					
ANR	582224	Identifier	b		582210	0					
ANR	582225	Argument	0		582210	1					
ANR	582226	PrimaryExpression	0		582210	0					
ANR	582227	Argument	buf		582210	2					
ANR	582228	Identifier	buf		582210	0					
ANR	582229	Argument	sizeof ( buf )		582210	3					
ANR	582230	SizeofExpression	sizeof ( buf )		582210	0					
ANR	582231	Sizeof	sizeof		582210	0					
ANR	582232	SizeofOperand	buf		582210	1					
ANR	582233	ReturnStatement	"return ! memcmp ( buf , ""\\x02\\xff\\x01\\xff"" , 4 ) ;"	598:1:17127:17170	582210	2	True				
ANR	582234	UnaryOperationExpression	"! memcmp ( buf , ""\\x02\\xff\\x01\\xff"" , 4 )"		582210	0					
ANR	582235	UnaryOperator	!		582210	0					
ANR	582236	CallExpression	"memcmp ( buf , ""\\x02\\xff\\x01\\xff"" , 4 )"		582210	1					
ANR	582237	Callee	memcmp		582210	0					
ANR	582238	Identifier	memcmp		582210	0					
ANR	582239	ArgumentList	buf		582210	1					
ANR	582240	Argument	buf		582210	0					
ANR	582241	Identifier	buf		582210	0					
ANR	582242	Argument	"""\\x02\\xff\\x01\\xff"""		582210	1					
ANR	582243	PrimaryExpression	"""\\x02\\xff\\x01\\xff"""		582210	0					
ANR	582244	Argument	4		582210	2					
ANR	582245	PrimaryExpression	4		582210	0					
ANR	582246	ReturnType	static bool		582210	1					
ANR	582247	Identifier	check_buffer		582210	2					
ANR	582248	ParameterList	RBuffer * b		582210	3					
ANR	582249	Parameter	RBuffer * b	595:25:17057:17066	582210	0	True				
ANR	582250	ParameterType	RBuffer *		582210	0					
ANR	582251	Identifier	b		582210	1					
ANR	582252	CFGEntryNode	ENTRY		582210		True				
ANR	582253	CFGExitNode	EXIT		582210		True				
ANR	582254	Symbol	b		582210						
ANR	582255	Symbol	buf		582210						
ANR	582256	Symbol	memcmp		582210						
ANR	582257	Function	strings	601:0:17175:17533							
ANR	582258	FunctionDef	strings (RBinFile * bf)		582257	0					
ANR	582259	CompoundStatement		601:36:17211:17533	582257	0					
ANR	582260	IdentifierDeclStatement	RListIter * iter ;	602:1:17214:17229	582257	0	True				
ANR	582261	IdentifierDecl	* iter		582257	0					
ANR	582262	IdentifierDeclType	RListIter *		582257	0					
ANR	582263	Identifier	iter		582257	1					
ANR	582264	IdentifierDeclStatement	RList * list = r_list_newf ( NULL ) ;	603:1:17232:17264	582257	1	True				
ANR	582265	IdentifierDecl	* list = r_list_newf ( NULL )		582257	0					
ANR	582266	IdentifierDeclType	RList *		582257	0					
ANR	582267	Identifier	list		582257	1					
ANR	582268	AssignmentExpression	* list = r_list_newf ( NULL )		582257	2		=			
ANR	582269	Identifier	list		582257	0					
ANR	582270	CallExpression	r_list_newf ( NULL )		582257	1					
ANR	582271	Callee	r_list_newf		582257	0					
ANR	582272	Identifier	r_list_newf		582257	0					
ANR	582273	ArgumentList	NULL		582257	1					
ANR	582274	Argument	NULL		582257	0					
ANR	582275	Identifier	NULL		582257	0					
ANR	582276	IdentifierDeclStatement	"RList * strings = parseStrings ( bf -> buf , stringsBeginAt , r_buf_size ( bf -> buf ) ) ;"	604:1:17267:17344	582257	2	True				
ANR	582277	IdentifierDecl	"* strings = parseStrings ( bf -> buf , stringsBeginAt , r_buf_size ( bf -> buf ) )"		582257	0					
ANR	582278	IdentifierDeclType	RList *		582257	0					
ANR	582279	Identifier	strings		582257	1					
ANR	582280	AssignmentExpression	"* strings = parseStrings ( bf -> buf , stringsBeginAt , r_buf_size ( bf -> buf ) )"		582257	2		=			
ANR	582281	Identifier	strings		582257	0					
ANR	582282	CallExpression	"parseStrings ( bf -> buf , stringsBeginAt , r_buf_size ( bf -> buf ) )"		582257	1					
ANR	582283	Callee	parseStrings		582257	0					
ANR	582284	Identifier	parseStrings		582257	0					
ANR	582285	ArgumentList	bf -> buf		582257	1					
ANR	582286	Argument	bf -> buf		582257	0					
ANR	582287	PtrMemberAccess	bf -> buf		582257	0					
ANR	582288	Identifier	bf		582257	0					
ANR	582289	Identifier	buf		582257	1					
ANR	582290	Argument	stringsBeginAt		582257	1					
ANR	582291	Identifier	stringsBeginAt		582257	0					
ANR	582292	Argument	r_buf_size ( bf -> buf )		582257	2					
ANR	582293	CallExpression	r_buf_size ( bf -> buf )		582257	0					
ANR	582294	Callee	r_buf_size		582257	0					
ANR	582295	Identifier	r_buf_size		582257	0					
ANR	582296	ArgumentList	bf -> buf		582257	1					
ANR	582297	Argument	bf -> buf		582257	0					
ANR	582298	PtrMemberAccess	bf -> buf		582257	0					
ANR	582299	Identifier	bf		582257	0					
ANR	582300	Identifier	buf		582257	1					
ANR	582301	IdentifierDeclStatement	RBinString * s ;	605:1:17347:17360	582257	3	True				
ANR	582302	IdentifierDecl	* s		582257	0					
ANR	582303	IdentifierDeclType	RBinString *		582257	0					
ANR	582304	Identifier	s		582257	1					
ANR	582305	Statement	r_list_foreach	607:1:17421:17434	582257	4	True				
ANR	582306	Statement	(	607:16:17436:17436	582257	5	True				
ANR	582307	Statement	strings	607:17:17437:17443	582257	6	True				
ANR	582308	Statement	","	607:24:17444:17444	582257	7	True				
ANR	582309	Statement	iter	607:26:17446:17449	582257	8	True				
ANR	582310	Statement	","	607:30:17450:17450	582257	9	True				
ANR	582311	Statement	s	607:32:17452:17452	582257	10	True				
ANR	582312	Statement	)	607:33:17453:17453	582257	11	True				
ANR	582313	CompoundStatement		7:35:243:243	582257	12					
ANR	582314	IfStatement	if ( * s -> string != '_' )		582257	0					
ANR	582315	Condition	* s -> string != '_'	608:6:17463:17479	582257	0	True				
ANR	582316	EqualityExpression	* s -> string != '_'		582257	0		!=			
ANR	582317	UnaryOperationExpression	* s -> string		582257	0					
ANR	582318	UnaryOperator	*		582257	0					
ANR	582319	PtrMemberAccess	s -> string		582257	1					
ANR	582320	Identifier	s		582257	0					
ANR	582321	Identifier	string		582257	1					
ANR	582322	PrimaryExpression	'_'		582257	1					
ANR	582323	CompoundStatement		8:25:270:270	582257	1					
ANR	582324	ExpressionStatement	"r_list_append ( list , s )"	609:3:17487:17510	582257	0	True				
ANR	582325	CallExpression	"r_list_append ( list , s )"		582257	0					
ANR	582326	Callee	r_list_append		582257	0					
ANR	582327	Identifier	r_list_append		582257	0					
ANR	582328	ArgumentList	list		582257	1					
ANR	582329	Argument	list		582257	0					
ANR	582330	Identifier	list		582257	0					
ANR	582331	Argument	s		582257	1					
ANR	582332	Identifier	s		582257	0					
ANR	582333	ReturnStatement	return list ;	612:1:17520:17531	582257	13	True				
ANR	582334	Identifier	list		582257	0					
ANR	582335	ReturnType	static RList *		582257	1					
ANR	582336	Identifier	strings		582257	2					
ANR	582337	ParameterList	RBinFile * bf		582257	3					
ANR	582338	Parameter	RBinFile * bf	601:22:17197:17208	582257	0	True				
ANR	582339	ParameterType	RBinFile *		582257	0					
ANR	582340	Identifier	bf		582257	1					
ANR	582341	CFGEntryNode	ENTRY		582257		True				
ANR	582342	CFGExitNode	EXIT		582257		True				
ANR	582343	Symbol	NULL		582257						
ANR	582344	Symbol	stringsBeginAt		582257						
ANR	582345	Symbol	bf		582257						
ANR	582346	Symbol	s -> string		582257						
ANR	582347	Symbol	r_list_newf		582257						
ANR	582348	Symbol	iter		582257						
ANR	582349	Symbol	* bf		582257						
ANR	582350	Symbol	list		582257						
ANR	582351	Symbol	s		582257						
ANR	582352	Symbol	strings		582257						
ANR	582353	Symbol	bf -> buf		582257						
ANR	582354	Symbol	* s -> string		582257						
ANR	582355	Symbol	parseStrings		582257						
ANR	582356	Symbol	* * s		582257						
ANR	582357	Symbol	* s		582257						
ANR	582358	Symbol	r_buf_size		582257						
ANR	582359	Function	symbols	615:0:17536:17597							
ANR	582360	FunctionDef	symbols (RBinFile * bf)		582359	0					
ANR	582361	CompoundStatement		615:36:17572:17597	582359	0					
ANR	582362	ReturnStatement	return globalSymbols ;	616:1:17575:17595	582359	0	True				
ANR	582363	Identifier	globalSymbols		582359	0					
ANR	582364	ReturnType	static RList *		582359	1					
ANR	582365	Identifier	symbols		582359	2					
ANR	582366	ParameterList	RBinFile * bf		582359	3					
ANR	582367	Parameter	RBinFile * bf	615:22:17558:17569	582359	0	True				
ANR	582368	ParameterType	RBinFile *		582359	0					
ANR	582369	Identifier	bf		582359	1					
ANR	582370	CFGEntryNode	ENTRY		582359		True				
ANR	582371	CFGExitNode	EXIT		582359		True				
ANR	582372	Symbol	globalSymbols		582359						
ANR	582373	Symbol	bf		582359						
ANR	582374	Function	size	619:0:17600:17651							
ANR	582375	FunctionDef	size (RBinFile * bf)		582374	0					
ANR	582376	CompoundStatement		619:31:17631:17651	582374	0					
ANR	582377	ReturnStatement	return UT64_MAX ;	620:1:17634:17649	582374	0	True				
ANR	582378	Identifier	UT64_MAX		582374	0					
ANR	582379	ReturnType	static ut64		582374	1					
ANR	582380	Identifier	size		582374	2					
ANR	582381	ParameterList	RBinFile * bf		582374	3					
ANR	582382	Parameter	RBinFile * bf	619:17:17617:17628	582374	0	True				
ANR	582383	ParameterType	RBinFile *		582374	0					
ANR	582384	Identifier	bf		582374	1					
ANR	582385	CFGEntryNode	ENTRY		582374		True				
ANR	582386	CFGExitNode	EXIT		582374		True				
ANR	582387	Symbol	bf		582374						
ANR	582388	Symbol	UT64_MAX		582374						
ANR	582389	DeclStmt									
ANR	582390	Decl							RBinPlugin	RBinPlugin	r_bin_plugin_symbols
ANR	582391	DeclStmt									
ANR	582392	Decl							R_API RLibStruct	R_API RLibStruct	radare_plugin
