command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	869669	File	data/converged/CVE-2019-16718~_radare2/cmd_cmp.c								
ANR	869670	DeclStmt									
ANR	869671	Decl							const char	const char * [ ]	help_msg_c
ANR	869672	Function	cmd_cmp_init	35:0:1733:1807							
ANR	869673	FunctionDef	cmd_cmp_init (RCore * core)		869672	0					
ANR	869674	CompoundStatement		35:38:1771:1807	869672	0					
ANR	869675	ExpressionStatement	"DEFINE_CMD_DESCRIPTOR ( core , c )"	36:1:1774:1805	869672	0	True				
ANR	869676	CallExpression	"DEFINE_CMD_DESCRIPTOR ( core , c )"		869672	0					
ANR	869677	Callee	DEFINE_CMD_DESCRIPTOR		869672	0					
ANR	869678	Identifier	DEFINE_CMD_DESCRIPTOR		869672	0					
ANR	869679	ArgumentList	core		869672	1					
ANR	869680	Argument	core		869672	0					
ANR	869681	Identifier	core		869672	0					
ANR	869682	Argument	c		869672	1					
ANR	869683	Identifier	c		869672	0					
ANR	869684	ReturnType	static void		869672	1					
ANR	869685	Identifier	cmd_cmp_init		869672	2					
ANR	869686	ParameterList	RCore * core		869672	3					
ANR	869687	Parameter	RCore * core	35:25:1758:1768	869672	0	True				
ANR	869688	ParameterType	RCore *		869672	0					
ANR	869689	Identifier	core		869672	1					
ANR	869690	CFGEntryNode	ENTRY		869672		True				
ANR	869691	CFGExitNode	EXIT		869672		True				
ANR	869692	Symbol	core		869672						
ANR	869693	Symbol	c		869672						
ANR	869694	Function	r_core_cmpwatch_free	39:0:1810:1911							
ANR	869695	FunctionDef	r_core_cmpwatch_free (RCoreCmpWatcher * w)		869694	0					
ANR	869696	CompoundStatement		39:52:1862:1911	869694	0					
ANR	869697	ExpressionStatement	free ( w -> ndata )	40:1:1865:1880	869694	0	True				
ANR	869698	CallExpression	free ( w -> ndata )		869694	0					
ANR	869699	Callee	free		869694	0					
ANR	869700	Identifier	free		869694	0					
ANR	869701	ArgumentList	w -> ndata		869694	1					
ANR	869702	Argument	w -> ndata		869694	0					
ANR	869703	PtrMemberAccess	w -> ndata		869694	0					
ANR	869704	Identifier	w		869694	0					
ANR	869705	Identifier	ndata		869694	1					
ANR	869706	ExpressionStatement	free ( w -> odata )	41:1:1883:1898	869694	1	True				
ANR	869707	CallExpression	free ( w -> odata )		869694	0					
ANR	869708	Callee	free		869694	0					
ANR	869709	Identifier	free		869694	0					
ANR	869710	ArgumentList	w -> odata		869694	1					
ANR	869711	Argument	w -> odata		869694	0					
ANR	869712	PtrMemberAccess	w -> odata		869694	0					
ANR	869713	Identifier	w		869694	0					
ANR	869714	Identifier	odata		869694	1					
ANR	869715	ExpressionStatement	free ( w )	42:1:1901:1909	869694	2	True				
ANR	869716	CallExpression	free ( w )		869694	0					
ANR	869717	Callee	free		869694	0					
ANR	869718	Identifier	free		869694	0					
ANR	869719	ArgumentList	w		869694	1					
ANR	869720	Argument	w		869694	0					
ANR	869721	Identifier	w		869694	0					
ANR	869722	ReturnType	R_API void		869694	1					
ANR	869723	Identifier	r_core_cmpwatch_free		869694	2					
ANR	869724	ParameterList	RCoreCmpWatcher * w		869694	3					
ANR	869725	Parameter	RCoreCmpWatcher * w	39:32:1842:1859	869694	0	True				
ANR	869726	ParameterType	RCoreCmpWatcher *		869694	0					
ANR	869727	Identifier	w		869694	1					
ANR	869728	CFGEntryNode	ENTRY		869694		True				
ANR	869729	CFGExitNode	EXIT		869694		True				
ANR	869730	Symbol	* w		869694						
ANR	869731	Symbol	w -> ndata		869694						
ANR	869732	Symbol	w		869694						
ANR	869733	Symbol	w -> odata		869694						
ANR	869734	Function	r_core_cmpwatch_get	45:0:1914:2125							
ANR	869735	FunctionDef	"r_core_cmpwatch_get (RCore * core , ut64 addr)"		869734	0					
ANR	869736	CompoundStatement		45:67:1981:2125	869734	0					
ANR	869737	IdentifierDeclStatement	RListIter * iter ;	46:1:1984:1999	869734	0	True				
ANR	869738	IdentifierDecl	* iter		869734	0					
ANR	869739	IdentifierDeclType	RListIter *		869734	0					
ANR	869740	Identifier	iter		869734	1					
ANR	869741	IdentifierDeclStatement	RCoreCmpWatcher * w ;	47:1:2002:2020	869734	1	True				
ANR	869742	IdentifierDecl	* w		869734	0					
ANR	869743	IdentifierDeclType	RCoreCmpWatcher *		869734	0					
ANR	869744	Identifier	w		869734	1					
ANR	869745	Statement	r_list_foreach	48:1:2023:2036	869734	2	True				
ANR	869746	Statement	(	48:16:2038:2038	869734	3	True				
ANR	869747	Statement	core	48:17:2039:2042	869734	4	True				
ANR	869748	Statement	->	48:21:2043:2044	869734	5	True				
ANR	869749	Statement	watchers	48:23:2045:2052	869734	6	True				
ANR	869750	Statement	","	48:31:2053:2053	869734	7	True				
ANR	869751	Statement	iter	48:33:2055:2058	869734	8	True				
ANR	869752	Statement	","	48:37:2059:2059	869734	9	True				
ANR	869753	Statement	w	48:39:2061:2061	869734	10	True				
ANR	869754	Statement	)	48:40:2062:2062	869734	11	True				
ANR	869755	CompoundStatement		4:42:82:82	869734	12					
ANR	869756	IfStatement	if ( addr == w -> addr )		869734	0					
ANR	869757	Condition	addr == w -> addr	49:6:2072:2086	869734	0	True				
ANR	869758	EqualityExpression	addr == w -> addr		869734	0		==			
ANR	869759	Identifier	addr		869734	0					
ANR	869760	PtrMemberAccess	w -> addr		869734	1					
ANR	869761	Identifier	w		869734	0					
ANR	869762	Identifier	addr		869734	1					
ANR	869763	CompoundStatement		5:23:107:107	869734	1					
ANR	869764	ReturnStatement	return w ;	50:3:2094:2102	869734	0	True				
ANR	869765	Identifier	w		869734	0					
ANR	869766	ReturnStatement	return NULL ;	53:1:2112:2123	869734	13	True				
ANR	869767	Identifier	NULL		869734	0					
ANR	869768	ReturnType	R_API RCoreCmpWatcher *		869734	1					
ANR	869769	Identifier	r_core_cmpwatch_get		869734	2					
ANR	869770	ParameterList	"RCore * core , ut64 addr"		869734	3					
ANR	869771	Parameter	RCore * core	45:43:1957:1967	869734	0	True				
ANR	869772	ParameterType	RCore *		869734	0					
ANR	869773	Identifier	core		869734	1					
ANR	869774	Parameter	ut64 addr	45:56:1970:1978	869734	1	True				
ANR	869775	ParameterType	ut64		869734	0					
ANR	869776	Identifier	addr		869734	1					
ANR	869777	CFGEntryNode	ENTRY		869734		True				
ANR	869778	CFGExitNode	EXIT		869734		True				
ANR	869779	Symbol	core		869734						
ANR	869780	Symbol	* w		869734						
ANR	869781	Symbol	NULL		869734						
ANR	869782	Symbol	w		869734						
ANR	869783	Symbol	iter		869734						
ANR	869784	Symbol	addr		869734						
ANR	869785	Symbol	w -> addr		869734						
ANR	869786	Function	r_core_cmpwatch_add	56:0:2128:2705							
ANR	869787	FunctionDef	"r_core_cmpwatch_add (RCore * core , ut64 addr , int size , const char * cmd)"		869786	0					
ANR	869788	CompoundStatement		56:81:2209:2705	869786	0					
ANR	869789	IdentifierDeclStatement	RCoreCmpWatcher * cmpw ;	57:1:2212:2233	869786	0	True				
ANR	869790	IdentifierDecl	* cmpw		869786	0					
ANR	869791	IdentifierDeclType	RCoreCmpWatcher *		869786	0					
ANR	869792	Identifier	cmpw		869786	1					
ANR	869793	IfStatement	if ( size < 1 )		869786	1					
ANR	869794	Condition	size < 1	58:5:2240:2247	869786	0	True				
ANR	869795	RelationalExpression	size < 1		869786	0		<			
ANR	869796	Identifier	size		869786	0					
ANR	869797	PrimaryExpression	1		869786	1					
ANR	869798	CompoundStatement		3:15:40:40	869786	1					
ANR	869799	ReturnStatement	return false ;	59:2:2254:2266	869786	0	True				
ANR	869800	Identifier	false		869786	0					
ANR	869801	ExpressionStatement	"cmpw = r_core_cmpwatch_get ( core , addr )"	61:1:2272:2311	869786	2	True				
ANR	869802	AssignmentExpression	"cmpw = r_core_cmpwatch_get ( core , addr )"		869786	0		=			
ANR	869803	Identifier	cmpw		869786	0					
ANR	869804	CallExpression	"r_core_cmpwatch_get ( core , addr )"		869786	1					
ANR	869805	Callee	r_core_cmpwatch_get		869786	0					
ANR	869806	Identifier	r_core_cmpwatch_get		869786	0					
ANR	869807	ArgumentList	core		869786	1					
ANR	869808	Argument	core		869786	0					
ANR	869809	Identifier	core		869786	0					
ANR	869810	Argument	addr		869786	1					
ANR	869811	Identifier	addr		869786	0					
ANR	869812	IfStatement	if ( ! cmpw )		869786	3					
ANR	869813	Condition	! cmpw	62:5:2318:2322	869786	0	True				
ANR	869814	UnaryOperationExpression	! cmpw		869786	0					
ANR	869815	UnaryOperator	!		869786	0					
ANR	869816	Identifier	cmpw		869786	1					
ANR	869817	CompoundStatement		7:12:115:115	869786	1					
ANR	869818	ExpressionStatement	cmpw = R_NEW ( RCoreCmpWatcher )	63:2:2329:2359	869786	0	True				
ANR	869819	AssignmentExpression	cmpw = R_NEW ( RCoreCmpWatcher )		869786	0		=			
ANR	869820	Identifier	cmpw		869786	0					
ANR	869821	CallExpression	R_NEW ( RCoreCmpWatcher )		869786	1					
ANR	869822	Callee	R_NEW		869786	0					
ANR	869823	Identifier	R_NEW		869786	0					
ANR	869824	ArgumentList	RCoreCmpWatcher		869786	1					
ANR	869825	Argument	RCoreCmpWatcher		869786	0					
ANR	869826	Identifier	RCoreCmpWatcher		869786	0					
ANR	869827	IfStatement	if ( ! cmpw )		869786	1					
ANR	869828	Condition	! cmpw	64:6:2367:2371	869786	0	True				
ANR	869829	UnaryOperationExpression	! cmpw		869786	0					
ANR	869830	UnaryOperator	!		869786	0					
ANR	869831	Identifier	cmpw		869786	1					
ANR	869832	CompoundStatement		9:13:164:164	869786	1					
ANR	869833	ReturnStatement	return false ;	65:3:2379:2391	869786	0	True				
ANR	869834	Identifier	false		869786	0					
ANR	869835	ExpressionStatement	cmpw -> addr = addr	67:2:2399:2416	869786	2	True				
ANR	869836	AssignmentExpression	cmpw -> addr = addr		869786	0		=			
ANR	869837	PtrMemberAccess	cmpw -> addr		869786	0					
ANR	869838	Identifier	cmpw		869786	0					
ANR	869839	Identifier	addr		869786	1					
ANR	869840	Identifier	addr		869786	1					
ANR	869841	ExpressionStatement	cmpw -> size = size	69:1:2422:2439	869786	4	True				
ANR	869842	AssignmentExpression	cmpw -> size = size		869786	0		=			
ANR	869843	PtrMemberAccess	cmpw -> size		869786	0					
ANR	869844	Identifier	cmpw		869786	0					
ANR	869845	Identifier	size		869786	1					
ANR	869846	Identifier	size		869786	1					
ANR	869847	ExpressionStatement	"snprintf ( cmpw -> cmd , sizeof ( cmpw -> cmd ) , ""%s"" , cmd )"	70:1:2442:2493	869786	5	True				
ANR	869848	CallExpression	"snprintf ( cmpw -> cmd , sizeof ( cmpw -> cmd ) , ""%s"" , cmd )"		869786	0					
ANR	869849	Callee	snprintf		869786	0					
ANR	869850	Identifier	snprintf		869786	0					
ANR	869851	ArgumentList	cmpw -> cmd		869786	1					
ANR	869852	Argument	cmpw -> cmd		869786	0					
ANR	869853	PtrMemberAccess	cmpw -> cmd		869786	0					
ANR	869854	Identifier	cmpw		869786	0					
ANR	869855	Identifier	cmd		869786	1					
ANR	869856	Argument	sizeof ( cmpw -> cmd )		869786	1					
ANR	869857	SizeofExpression	sizeof ( cmpw -> cmd )		869786	0					
ANR	869858	Sizeof	sizeof		869786	0					
ANR	869859	PtrMemberAccess	cmpw -> cmd		869786	1					
ANR	869860	Identifier	cmpw		869786	0					
ANR	869861	Identifier	cmd		869786	1					
ANR	869862	Argument	"""%s"""		869786	2					
ANR	869863	PrimaryExpression	"""%s"""		869786	0					
ANR	869864	Argument	cmd		869786	3					
ANR	869865	Identifier	cmd		869786	0					
ANR	869866	ExpressionStatement	cmpw -> odata = NULL	71:1:2496:2514	869786	6	True				
ANR	869867	AssignmentExpression	cmpw -> odata = NULL		869786	0		=			
ANR	869868	PtrMemberAccess	cmpw -> odata		869786	0					
ANR	869869	Identifier	cmpw		869786	0					
ANR	869870	Identifier	odata		869786	1					
ANR	869871	Identifier	NULL		869786	1					
ANR	869872	ExpressionStatement	cmpw -> ndata = malloc ( size )	72:1:2517:2544	869786	7	True				
ANR	869873	AssignmentExpression	cmpw -> ndata = malloc ( size )		869786	0		=			
ANR	869874	PtrMemberAccess	cmpw -> ndata		869786	0					
ANR	869875	Identifier	cmpw		869786	0					
ANR	869876	Identifier	ndata		869786	1					
ANR	869877	CallExpression	malloc ( size )		869786	1					
ANR	869878	Callee	malloc		869786	0					
ANR	869879	Identifier	malloc		869786	0					
ANR	869880	ArgumentList	size		869786	1					
ANR	869881	Argument	size		869786	0					
ANR	869882	Identifier	size		869786	0					
ANR	869883	IfStatement	if ( ! cmpw -> ndata )		869786	8					
ANR	869884	Condition	! cmpw -> ndata	73:5:2551:2562	869786	0	True				
ANR	869885	UnaryOperationExpression	! cmpw -> ndata		869786	0					
ANR	869886	UnaryOperator	!		869786	0					
ANR	869887	PtrMemberAccess	cmpw -> ndata		869786	1					
ANR	869888	Identifier	cmpw		869786	0					
ANR	869889	Identifier	ndata		869786	1					
ANR	869890	CompoundStatement		18:19:355:355	869786	1					
ANR	869891	ExpressionStatement	free ( cmpw )	74:2:2569:2580	869786	0	True				
ANR	869892	CallExpression	free ( cmpw )		869786	0					
ANR	869893	Callee	free		869786	0					
ANR	869894	Identifier	free		869786	0					
ANR	869895	ArgumentList	cmpw		869786	1					
ANR	869896	Argument	cmpw		869786	0					
ANR	869897	Identifier	cmpw		869786	0					
ANR	869898	ReturnStatement	return false ;	75:2:2584:2596	869786	1	True				
ANR	869899	Identifier	false		869786	0					
ANR	869900	ExpressionStatement	"r_io_read_at ( core -> io , addr , cmpw -> ndata , size )"	77:1:2602:2650	869786	9	True				
ANR	869901	CallExpression	"r_io_read_at ( core -> io , addr , cmpw -> ndata , size )"		869786	0					
ANR	869902	Callee	r_io_read_at		869786	0					
ANR	869903	Identifier	r_io_read_at		869786	0					
ANR	869904	ArgumentList	core -> io		869786	1					
ANR	869905	Argument	core -> io		869786	0					
ANR	869906	PtrMemberAccess	core -> io		869786	0					
ANR	869907	Identifier	core		869786	0					
ANR	869908	Identifier	io		869786	1					
ANR	869909	Argument	addr		869786	1					
ANR	869910	Identifier	addr		869786	0					
ANR	869911	Argument	cmpw -> ndata		869786	2					
ANR	869912	PtrMemberAccess	cmpw -> ndata		869786	0					
ANR	869913	Identifier	cmpw		869786	0					
ANR	869914	Identifier	ndata		869786	1					
ANR	869915	Argument	size		869786	3					
ANR	869916	Identifier	size		869786	0					
ANR	869917	ExpressionStatement	"r_list_append ( core -> watchers , cmpw )"	78:1:2653:2689	869786	10	True				
ANR	869918	CallExpression	"r_list_append ( core -> watchers , cmpw )"		869786	0					
ANR	869919	Callee	r_list_append		869786	0					
ANR	869920	Identifier	r_list_append		869786	0					
ANR	869921	ArgumentList	core -> watchers		869786	1					
ANR	869922	Argument	core -> watchers		869786	0					
ANR	869923	PtrMemberAccess	core -> watchers		869786	0					
ANR	869924	Identifier	core		869786	0					
ANR	869925	Identifier	watchers		869786	1					
ANR	869926	Argument	cmpw		869786	1					
ANR	869927	Identifier	cmpw		869786	0					
ANR	869928	ReturnStatement	return true ;	79:1:2692:2703	869786	11	True				
ANR	869929	Identifier	true		869786	0					
ANR	869930	ReturnType	R_API int		869786	1					
ANR	869931	Identifier	r_core_cmpwatch_add		869786	2					
ANR	869932	ParameterList	"RCore * core , ut64 addr , int size , const char * cmd"		869786	3					
ANR	869933	Parameter	RCore * core	56:30:2158:2168	869786	0	True				
ANR	869934	ParameterType	RCore *		869786	0					
ANR	869935	Identifier	core		869786	1					
ANR	869936	Parameter	ut64 addr	56:43:2171:2179	869786	1	True				
ANR	869937	ParameterType	ut64		869786	0					
ANR	869938	Identifier	addr		869786	1					
ANR	869939	Parameter	int size	56:54:2182:2189	869786	2	True				
ANR	869940	ParameterType	int		869786	0					
ANR	869941	Identifier	size		869786	1					
ANR	869942	Parameter	const char * cmd	56:64:2192:2206	869786	3	True				
ANR	869943	ParameterType	const char *		869786	0					
ANR	869944	Identifier	cmd		869786	1					
ANR	869945	CFGEntryNode	ENTRY		869786		True				
ANR	869946	CFGExitNode	EXIT		869786		True				
ANR	869947	Symbol	malloc		869786						
ANR	869948	Symbol	NULL		869786						
ANR	869949	Symbol	cmpw -> ndata		869786						
ANR	869950	Symbol	cmpw -> size		869786						
ANR	869951	Symbol	cmpw -> cmd		869786						
ANR	869952	Symbol	false		869786						
ANR	869953	Symbol	* core		869786						
ANR	869954	Symbol	RCoreCmpWatcher		869786						
ANR	869955	Symbol	cmpw -> addr		869786						
ANR	869956	Symbol	core		869786						
ANR	869957	Symbol	size		869786						
ANR	869958	Symbol	core -> io		869786						
ANR	869959	Symbol	r_core_cmpwatch_get		869786						
ANR	869960	Symbol	cmpw -> odata		869786						
ANR	869961	Symbol	true		869786						
ANR	869962	Symbol	* cmpw		869786						
ANR	869963	Symbol	cmd		869786						
ANR	869964	Symbol	core -> watchers		869786						
ANR	869965	Symbol	addr		869786						
ANR	869966	Symbol	R_NEW		869786						
ANR	869967	Symbol	cmpw		869786						
ANR	869968	Function	r_core_cmpwatch_del	82:0:2708:3006							
ANR	869969	FunctionDef	"r_core_cmpwatch_del (RCore * core , ut64 addr)"		869968	0					
ANR	869970	CompoundStatement		82:54:2762:3006	869968	0					
ANR	869971	IdentifierDeclStatement	int ret = false ;	83:1:2765:2780	869968	0	True				
ANR	869972	IdentifierDecl	ret = false		869968	0					
ANR	869973	IdentifierDeclType	int		869968	0					
ANR	869974	Identifier	ret		869968	1					
ANR	869975	AssignmentExpression	ret = false		869968	2		=			
ANR	869976	Identifier	false		869968	0					
ANR	869977	Identifier	false		869968	1					
ANR	869978	IdentifierDeclStatement	RCoreCmpWatcher * w ;	84:1:2783:2801	869968	1	True				
ANR	869979	IdentifierDecl	* w		869968	0					
ANR	869980	IdentifierDeclType	RCoreCmpWatcher *		869968	0					
ANR	869981	Identifier	w		869968	1					
ANR	869982	IdentifierDeclStatement	"RListIter * iter , * iter2 ;"	85:1:2804:2827	869968	2	True				
ANR	869983	IdentifierDecl	* iter		869968	0					
ANR	869984	IdentifierDeclType	RListIter *		869968	0					
ANR	869985	Identifier	iter		869968	1					
ANR	869986	IdentifierDecl	* iter2		869968	1					
ANR	869987	IdentifierDeclType	RListIter *		869968	0					
ANR	869988	Identifier	iter2		869968	1					
ANR	869989	Statement	r_list_foreach_safe	86:1:2830:2848	869968	3	True				
ANR	869990	Statement	(	86:21:2850:2850	869968	4	True				
ANR	869991	Statement	core	86:22:2851:2854	869968	5	True				
ANR	869992	Statement	->	86:26:2855:2856	869968	6	True				
ANR	869993	Statement	watchers	86:28:2857:2864	869968	7	True				
ANR	869994	Statement	","	86:36:2865:2865	869968	8	True				
ANR	869995	Statement	iter	86:38:2867:2870	869968	9	True				
ANR	869996	Statement	","	86:42:2871:2871	869968	10	True				
ANR	869997	Statement	iter2	86:44:2873:2877	869968	11	True				
ANR	869998	Statement	","	86:49:2878:2878	869968	12	True				
ANR	869999	Statement	w	86:51:2880:2880	869968	13	True				
ANR	870000	Statement	)	86:52:2881:2881	869968	14	True				
ANR	870001	CompoundStatement		5:54:120:120	869968	15					
ANR	870002	IfStatement	if ( w -> addr == addr || addr == UT64_MAX )		869968	0					
ANR	870003	Condition	w -> addr == addr || addr == UT64_MAX	87:6:2891:2925	869968	0	True				
ANR	870004	OrExpression	w -> addr == addr || addr == UT64_MAX		869968	0		||			
ANR	870005	EqualityExpression	w -> addr == addr		869968	0		==			
ANR	870006	PtrMemberAccess	w -> addr		869968	0					
ANR	870007	Identifier	w		869968	0					
ANR	870008	Identifier	addr		869968	1					
ANR	870009	Identifier	addr		869968	1					
ANR	870010	EqualityExpression	addr == UT64_MAX		869968	1		==			
ANR	870011	Identifier	addr		869968	0					
ANR	870012	Identifier	UT64_MAX		869968	1					
ANR	870013	CompoundStatement		6:43:165:165	869968	1					
ANR	870014	ExpressionStatement	"r_list_delete ( core -> watchers , iter )"	88:3:2933:2969	869968	0	True				
ANR	870015	CallExpression	"r_list_delete ( core -> watchers , iter )"		869968	0					
ANR	870016	Callee	r_list_delete		869968	0					
ANR	870017	Identifier	r_list_delete		869968	0					
ANR	870018	ArgumentList	core -> watchers		869968	1					
ANR	870019	Argument	core -> watchers		869968	0					
ANR	870020	PtrMemberAccess	core -> watchers		869968	0					
ANR	870021	Identifier	core		869968	0					
ANR	870022	Identifier	watchers		869968	1					
ANR	870023	Argument	iter		869968	1					
ANR	870024	Identifier	iter		869968	0					
ANR	870025	ExpressionStatement	ret = true	89:3:2974:2984	869968	1	True				
ANR	870026	AssignmentExpression	ret = true		869968	0		=			
ANR	870027	Identifier	ret		869968	0					
ANR	870028	Identifier	true		869968	1					
ANR	870029	ReturnStatement	return ret ;	92:1:2994:3004	869968	16	True				
ANR	870030	Identifier	ret		869968	0					
ANR	870031	ReturnType	R_API int		869968	1					
ANR	870032	Identifier	r_core_cmpwatch_del		869968	2					
ANR	870033	ParameterList	"RCore * core , ut64 addr"		869968	3					
ANR	870034	Parameter	RCore * core	82:30:2738:2748	869968	0	True				
ANR	870035	ParameterType	RCore *		869968	0					
ANR	870036	Identifier	core		869968	1					
ANR	870037	Parameter	ut64 addr	82:43:2751:2759	869968	1	True				
ANR	870038	ParameterType	ut64		869968	0					
ANR	870039	Identifier	addr		869968	1					
ANR	870040	CFGEntryNode	ENTRY		869968		True				
ANR	870041	CFGExitNode	EXIT		869968		True				
ANR	870042	Symbol	ret		869968						
ANR	870043	Symbol	* w		869968						
ANR	870044	Symbol	iter2		869968						
ANR	870045	Symbol	false		869968						
ANR	870046	Symbol	* core		869968						
ANR	870047	Symbol	iter		869968						
ANR	870048	Symbol	core		869968						
ANR	870049	Symbol	w		869968						
ANR	870050	Symbol	true		869968						
ANR	870051	Symbol	core -> watchers		869968						
ANR	870052	Symbol	addr		869968						
ANR	870053	Symbol	UT64_MAX		869968						
ANR	870054	Symbol	w -> addr		869968						
ANR	870055	Function	r_core_cmpwatch_show	95:0:3009:3777							
ANR	870056	FunctionDef	"r_core_cmpwatch_show (RCore * core , ut64 addr , int mode)"		870055	0					
ANR	870057	CompoundStatement		95:65:3074:3777	870055	0					
ANR	870058	IdentifierDeclStatement	char cmd [ 128 ] ;	96:1:3077:3090	870055	0	True				
ANR	870059	IdentifierDecl	cmd [ 128 ]		870055	0					
ANR	870060	IdentifierDeclType	char [ 128 ]		870055	0					
ANR	870061	Identifier	cmd		870055	1					
ANR	870062	PrimaryExpression	128		870055	2					
ANR	870063	IdentifierDeclStatement	RListIter * iter ;	97:1:3093:3108	870055	1	True				
ANR	870064	IdentifierDecl	* iter		870055	0					
ANR	870065	IdentifierDeclType	RListIter *		870055	0					
ANR	870066	Identifier	iter		870055	1					
ANR	870067	IdentifierDeclStatement	RCoreCmpWatcher * w ;	98:1:3111:3129	870055	2	True				
ANR	870068	IdentifierDecl	* w		870055	0					
ANR	870069	IdentifierDeclType	RCoreCmpWatcher *		870055	0					
ANR	870070	Identifier	w		870055	1					
ANR	870071	Statement	r_list_foreach	99:1:3132:3145	870055	3	True				
ANR	870072	Statement	(	99:16:3147:3147	870055	4	True				
ANR	870073	Statement	core	99:17:3148:3151	870055	5	True				
ANR	870074	Statement	->	99:21:3152:3153	870055	6	True				
ANR	870075	Statement	watchers	99:23:3154:3161	870055	7	True				
ANR	870076	Statement	","	99:31:3162:3162	870055	8	True				
ANR	870077	Statement	iter	99:33:3164:3167	870055	9	True				
ANR	870078	Statement	","	99:37:3168:3168	870055	10	True				
ANR	870079	Statement	w	99:39:3170:3170	870055	11	True				
ANR	870080	Statement	)	99:40:3171:3171	870055	12	True				
ANR	870081	CompoundStatement		6:2:102:165	870055	13					
ANR	870082	IdentifierDeclStatement	"int is_diff = w -> odata ? memcmp ( w -> odata , w -> ndata , w -> size ) : 0 ;"	100:2:3177:3240	870055	0	True				
ANR	870083	IdentifierDecl	"is_diff = w -> odata ? memcmp ( w -> odata , w -> ndata , w -> size ) : 0"		870055	0					
ANR	870084	IdentifierDeclType	int		870055	0					
ANR	870085	Identifier	is_diff		870055	1					
ANR	870086	AssignmentExpression	"is_diff = w -> odata ? memcmp ( w -> odata , w -> ndata , w -> size ) : 0"		870055	2		=			
ANR	870087	Identifier	is_diff		870055	0					
ANR	870088	ConditionalExpression	"w -> odata ? memcmp ( w -> odata , w -> ndata , w -> size ) : 0"		870055	1					
ANR	870089	Condition	w -> odata		870055	0					
ANR	870090	PtrMemberAccess	w -> odata		870055	0					
ANR	870091	Identifier	w		870055	0					
ANR	870092	Identifier	odata		870055	1					
ANR	870093	CallExpression	"memcmp ( w -> odata , w -> ndata , w -> size )"		870055	1					
ANR	870094	Callee	memcmp		870055	0					
ANR	870095	Identifier	memcmp		870055	0					
ANR	870096	ArgumentList	w -> odata		870055	1					
ANR	870097	Argument	w -> odata		870055	0					
ANR	870098	PtrMemberAccess	w -> odata		870055	0					
ANR	870099	Identifier	w		870055	0					
ANR	870100	Identifier	odata		870055	1					
ANR	870101	Argument	w -> ndata		870055	1					
ANR	870102	PtrMemberAccess	w -> ndata		870055	0					
ANR	870103	Identifier	w		870055	0					
ANR	870104	Identifier	ndata		870055	1					
ANR	870105	Argument	w -> size		870055	2					
ANR	870106	PtrMemberAccess	w -> size		870055	0					
ANR	870107	Identifier	w		870055	0					
ANR	870108	Identifier	size		870055	1					
ANR	870109	PrimaryExpression	0		870055	2					
ANR	870110	SwitchStatement	switch ( mode )		870055	1					
ANR	870111	Condition	mode	101:10:3252:3255	870055	0	True				
ANR	870112	Identifier	mode		870055	0					
ANR	870113	CompoundStatement		7:16:183:183	870055	1					
ANR	870114	Label	case '*' :	102:2:3262:3270	870055	0	True				
ANR	870115	Statement	r_cons_printf	103:3:3275:3287	870055	1	True				
ANR	870116	Statement	(	103:17:3289:3289	870055	2	True				
ANR	870117	Statement	"""cw 0x%08"""	103:18:3290:3299	870055	3	True				
ANR	870118	Statement	PFMT64x	103:28:3300:3306	870055	4	True				
ANR	870119	Statement	""" %d %s%s\\n"""	103:36:3308:3319	870055	5	True				
ANR	870120	Statement	","	103:48:3320:3320	870055	6	True				
ANR	870121	Statement	w	104:4:3326:3326	870055	7	True				
ANR	870122	Statement	->	104:5:3327:3328	870055	8	True				
ANR	870123	Statement	addr	104:7:3329:3332	870055	9	True				
ANR	870124	Statement	","	104:11:3333:3333	870055	10	True				
ANR	870125	Statement	w	104:13:3335:3335	870055	11	True				
ANR	870126	Statement	->	104:14:3336:3337	870055	12	True				
ANR	870127	Statement	size	104:16:3338:3341	870055	13	True				
ANR	870128	Statement	","	104:20:3342:3342	870055	14	True				
ANR	870129	Statement	w	104:22:3344:3344	870055	15	True				
ANR	870130	Statement	->	104:23:3345:3346	870055	16	True				
ANR	870131	Statement	cmd	104:25:3347:3349	870055	17	True				
ANR	870132	Statement	","	104:28:3350:3350	870055	18	True				
ANR	870133	Statement	is_diff	104:30:3352:3358	870055	19	True				
ANR	870134	Statement	?	104:37:3359:3359	870055	20	True				
ANR	870135	Statement	""" # differs"""	104:39:3361:3372	870055	21	True				
ANR	870136	Statement	:	104:51:3373:3373	870055	22	True				
ANR	870137	Statement	""""""	104:53:3375:3376	870055	23	True				
ANR	870138	Statement	)	104:55:3377:3377	870055	24	True				
ANR	870139	ExpressionStatement		104:56:3378:3378	870055	25	True				
ANR	870140	BreakStatement	break ;	105:3:3383:3388	870055	26	True				
ANR	870141	Label	case 'd' :	106:2:3392:3400	870055	27	True				
ANR	870142	IfStatement	if ( is_diff )		870055	28					
ANR	870143	Condition	is_diff	107:7:3417:3423	870055	0	True				
ANR	870144	Identifier	is_diff		870055	0					
ANR	870145	CompoundStatement		13:16:351:351	870055	1					
ANR	870146	Statement	r_cons_printf	108:4:3432:3444	870055	0	True				
ANR	870147	Statement	(	108:18:3446:3446	870055	1	True				
ANR	870148	Statement	"""0x%08"""	108:19:3447:3453	870055	2	True				
ANR	870149	Statement	PFMT64x	108:26:3454:3460	870055	3	True				
ANR	870150	Statement	""" has changed\\n"""	108:34:3462:3477	870055	4	True				
ANR	870151	Statement	","	108:50:3478:3478	870055	5	True				
ANR	870152	Statement	w	108:52:3480:3480	870055	6	True				
ANR	870153	Statement	->	108:53:3481:3482	870055	7	True				
ANR	870154	Statement	addr	108:55:3483:3486	870055	8	True				
ANR	870155	Statement	)	108:59:3487:3487	870055	9	True				
ANR	870156	ExpressionStatement		108:60:3488:3488	870055	10	True				
ANR	870157	Label	case 'o' :	110:2:3497:3505	870055	29	True				
ANR	870158	Label	default :	112:2:3547:3554	870055	30	True				
ANR	870159	Identifier	default		870055	0					
ANR	870160	Statement	r_cons_printf	113:3:3559:3571	870055	31	True				
ANR	870161	Statement	(	113:17:3573:3573	870055	32	True				
ANR	870162	Statement	"""0x%08"""	113:18:3574:3580	870055	33	True				
ANR	870163	Statement	PFMT64x	113:25:3581:3587	870055	34	True				
ANR	870164	Statement	"""%s\\n"""	113:33:3589:3594	870055	35	True				
ANR	870165	Statement	","	113:39:3595:3595	870055	36	True				
ANR	870166	Statement	w	113:41:3597:3597	870055	37	True				
ANR	870167	Statement	->	113:42:3598:3599	870055	38	True				
ANR	870168	Statement	addr	113:44:3600:3603	870055	39	True				
ANR	870169	Statement	","	113:48:3604:3604	870055	40	True				
ANR	870170	Statement	is_diff	113:50:3606:3612	870055	41	True				
ANR	870171	Statement	?	113:57:3613:3613	870055	42	True				
ANR	870172	Statement	""" modified"""	113:59:3615:3625	870055	43	True				
ANR	870173	Statement	:	113:70:3626:3626	870055	44	True				
ANR	870174	Statement	""""""	113:72:3628:3629	870055	45	True				
ANR	870175	Statement	)	113:74:3630:3630	870055	46	True				
ANR	870176	ExpressionStatement		113:75:3631:3631	870055	47	True				
ANR	870177	Statement	snprintf	114:3:3636:3643	870055	48	True				
ANR	870178	Statement	(	114:12:3645:3645	870055	49	True				
ANR	870179	Statement	cmd	114:13:3646:3648	870055	50	True				
ANR	870180	Statement	","	114:16:3649:3649	870055	51	True				
ANR	870181	Statement	sizeof	114:18:3651:3656	870055	52	True				
ANR	870182	Statement	(	114:25:3658:3658	870055	53	True				
ANR	870183	Statement	cmd	114:26:3659:3661	870055	54	True				
ANR	870184	Statement	)	114:29:3662:3662	870055	55	True				
ANR	870185	Statement	","	114:30:3663:3663	870055	56	True				
ANR	870186	Statement	"""%s@%"""	114:32:3665:3670	870055	57	True				
ANR	870187	Statement	PFMT64d	114:38:3671:3677	870055	58	True				
ANR	870188	Statement	"""!%d"""	114:46:3679:3683	870055	59	True				
ANR	870189	Statement	","	114:51:3684:3684	870055	60	True				
ANR	870190	Statement	w	115:4:3690:3690	870055	61	True				
ANR	870191	Statement	->	115:5:3691:3692	870055	62	True				
ANR	870192	Statement	cmd	115:7:3693:3695	870055	63	True				
ANR	870193	Statement	","	115:10:3696:3696	870055	64	True				
ANR	870194	Statement	w	115:12:3698:3698	870055	65	True				
ANR	870195	Statement	->	115:13:3699:3700	870055	66	True				
ANR	870196	Statement	addr	115:15:3701:3704	870055	67	True				
ANR	870197	Statement	","	115:19:3705:3705	870055	68	True				
ANR	870198	Statement	w	115:21:3707:3707	870055	69	True				
ANR	870199	Statement	->	115:22:3708:3709	870055	70	True				
ANR	870200	Statement	size	115:24:3710:3713	870055	71	True				
ANR	870201	Statement	)	115:28:3714:3714	870055	72	True				
ANR	870202	ExpressionStatement		115:29:3715:3715	870055	73	True				
ANR	870203	ExpressionStatement	"r_core_cmd0 ( core , cmd )"	116:3:3720:3743	870055	74	True				
ANR	870204	CallExpression	"r_core_cmd0 ( core , cmd )"		870055	0					
ANR	870205	Callee	r_core_cmd0		870055	0					
ANR	870206	Identifier	r_core_cmd0		870055	0					
ANR	870207	ArgumentList	core		870055	1					
ANR	870208	Argument	core		870055	0					
ANR	870209	Identifier	core		870055	0					
ANR	870210	Argument	cmd		870055	1					
ANR	870211	Identifier	cmd		870055	0					
ANR	870212	BreakStatement	break ;	117:3:3748:3753	870055	75	True				
ANR	870213	ReturnStatement	return false ;	120:1:3763:3775	870055	14	True				
ANR	870214	Identifier	false		870055	0					
ANR	870215	ReturnType	R_API int		870055	1					
ANR	870216	Identifier	r_core_cmpwatch_show		870055	2					
ANR	870217	ParameterList	"RCore * core , ut64 addr , int mode"		870055	3					
ANR	870218	Parameter	RCore * core	95:31:3040:3050	870055	0	True				
ANR	870219	ParameterType	RCore *		870055	0					
ANR	870220	Identifier	core		870055	1					
ANR	870221	Parameter	ut64 addr	95:44:3053:3061	870055	1	True				
ANR	870222	ParameterType	ut64		870055	0					
ANR	870223	Identifier	addr		870055	1					
ANR	870224	Parameter	int mode	95:55:3064:3071	870055	2	True				
ANR	870225	ParameterType	int		870055	0					
ANR	870226	Identifier	mode		870055	1					
ANR	870227	CFGEntryNode	ENTRY		870055		True				
ANR	870228	CFGExitNode	EXIT		870055		True				
ANR	870229	Symbol	* w		870055						
ANR	870230	Symbol	false		870055						
ANR	870231	Symbol	iter		870055						
ANR	870232	Symbol	is_diff		870055						
ANR	870233	Symbol	mode		870055						
ANR	870234	Symbol	core		870055						
ANR	870235	Symbol	w -> ndata		870055						
ANR	870236	Symbol	memcmp		870055						
ANR	870237	Symbol	w -> size		870055						
ANR	870238	Symbol	w		870055						
ANR	870239	Symbol	cmd		870055						
ANR	870240	Symbol	addr		870055						
ANR	870241	Symbol	w -> odata		870055						
ANR	870242	Function	r_core_cmpwatch_update	123:0:3780:4133							
ANR	870243	FunctionDef	"r_core_cmpwatch_update (RCore * core , ut64 addr)"		870242	0					
ANR	870244	CompoundStatement		123:57:3837:4133	870242	0					
ANR	870245	IdentifierDeclStatement	RCoreCmpWatcher * w ;	124:1:3840:3858	870242	0	True				
ANR	870246	IdentifierDecl	* w		870242	0					
ANR	870247	IdentifierDeclType	RCoreCmpWatcher *		870242	0					
ANR	870248	Identifier	w		870242	1					
ANR	870249	IdentifierDeclStatement	RListIter * iter ;	125:1:3861:3876	870242	1	True				
ANR	870250	IdentifierDecl	* iter		870242	0					
ANR	870251	IdentifierDeclType	RListIter *		870242	0					
ANR	870252	Identifier	iter		870242	1					
ANR	870253	Statement	r_list_foreach	126:1:3879:3892	870242	2	True				
ANR	870254	Statement	(	126:16:3894:3894	870242	3	True				
ANR	870255	Statement	core	126:17:3895:3898	870242	4	True				
ANR	870256	Statement	->	126:21:3899:3900	870242	5	True				
ANR	870257	Statement	watchers	126:23:3901:3908	870242	6	True				
ANR	870258	Statement	","	126:31:3909:3909	870242	7	True				
ANR	870259	Statement	iter	126:33:3911:3914	870242	8	True				
ANR	870260	Statement	","	126:37:3915:3915	870242	9	True				
ANR	870261	Statement	w	126:39:3917:3917	870242	10	True				
ANR	870262	Statement	)	126:40:3918:3918	870242	11	True				
ANR	870263	CompoundStatement		4:42:82:82	870242	12					
ANR	870264	ExpressionStatement	free ( w -> odata )	127:2:3924:3939	870242	0	True				
ANR	870265	CallExpression	free ( w -> odata )		870242	0					
ANR	870266	Callee	free		870242	0					
ANR	870267	Identifier	free		870242	0					
ANR	870268	ArgumentList	w -> odata		870242	1					
ANR	870269	Argument	w -> odata		870242	0					
ANR	870270	PtrMemberAccess	w -> odata		870242	0					
ANR	870271	Identifier	w		870242	0					
ANR	870272	Identifier	odata		870242	1					
ANR	870273	ExpressionStatement	w -> odata = w -> ndata	128:2:3943:3962	870242	1	True				
ANR	870274	AssignmentExpression	w -> odata = w -> ndata		870242	0		=			
ANR	870275	PtrMemberAccess	w -> odata		870242	0					
ANR	870276	Identifier	w		870242	0					
ANR	870277	Identifier	odata		870242	1					
ANR	870278	PtrMemberAccess	w -> ndata		870242	1					
ANR	870279	Identifier	w		870242	0					
ANR	870280	Identifier	ndata		870242	1					
ANR	870281	ExpressionStatement	w -> ndata = malloc ( w -> size )	129:2:3966:3993	870242	2	True				
ANR	870282	AssignmentExpression	w -> ndata = malloc ( w -> size )		870242	0		=			
ANR	870283	PtrMemberAccess	w -> ndata		870242	0					
ANR	870284	Identifier	w		870242	0					
ANR	870285	Identifier	ndata		870242	1					
ANR	870286	CallExpression	malloc ( w -> size )		870242	1					
ANR	870287	Callee	malloc		870242	0					
ANR	870288	Identifier	malloc		870242	0					
ANR	870289	ArgumentList	w -> size		870242	1					
ANR	870290	Argument	w -> size		870242	0					
ANR	870291	PtrMemberAccess	w -> size		870242	0					
ANR	870292	Identifier	w		870242	0					
ANR	870293	Identifier	size		870242	1					
ANR	870294	IfStatement	if ( ! w -> ndata )		870242	3					
ANR	870295	Condition	! w -> ndata	130:6:4001:4009	870242	0	True				
ANR	870296	UnaryOperationExpression	! w -> ndata		870242	0					
ANR	870297	UnaryOperator	!		870242	0					
ANR	870298	PtrMemberAccess	w -> ndata		870242	1					
ANR	870299	Identifier	w		870242	0					
ANR	870300	Identifier	ndata		870242	1					
ANR	870301	CompoundStatement		8:17:174:174	870242	1					
ANR	870302	ReturnStatement	return false ;	131:3:4017:4029	870242	0	True				
ANR	870303	Identifier	false		870242	0					
ANR	870304	ExpressionStatement	"r_io_read_at ( core -> io , w -> addr , w -> ndata , w -> size )"	133:2:4037:4088	870242	4	True				
ANR	870305	CallExpression	"r_io_read_at ( core -> io , w -> addr , w -> ndata , w -> size )"		870242	0					
ANR	870306	Callee	r_io_read_at		870242	0					
ANR	870307	Identifier	r_io_read_at		870242	0					
ANR	870308	ArgumentList	core -> io		870242	1					
ANR	870309	Argument	core -> io		870242	0					
ANR	870310	PtrMemberAccess	core -> io		870242	0					
ANR	870311	Identifier	core		870242	0					
ANR	870312	Identifier	io		870242	1					
ANR	870313	Argument	w -> addr		870242	1					
ANR	870314	PtrMemberAccess	w -> addr		870242	0					
ANR	870315	Identifier	w		870242	0					
ANR	870316	Identifier	addr		870242	1					
ANR	870317	Argument	w -> ndata		870242	2					
ANR	870318	PtrMemberAccess	w -> ndata		870242	0					
ANR	870319	Identifier	w		870242	0					
ANR	870320	Identifier	ndata		870242	1					
ANR	870321	Argument	w -> size		870242	3					
ANR	870322	PtrMemberAccess	w -> size		870242	0					
ANR	870323	Identifier	w		870242	0					
ANR	870324	Identifier	size		870242	1					
ANR	870325	ReturnStatement	return ! r_list_empty ( core -> watchers ) ;	135:1:4094:4131	870242	13	True				
ANR	870326	UnaryOperationExpression	! r_list_empty ( core -> watchers )		870242	0					
ANR	870327	UnaryOperator	!		870242	0					
ANR	870328	CallExpression	r_list_empty ( core -> watchers )		870242	1					
ANR	870329	Callee	r_list_empty		870242	0					
ANR	870330	Identifier	r_list_empty		870242	0					
ANR	870331	ArgumentList	core -> watchers		870242	1					
ANR	870332	Argument	core -> watchers		870242	0					
ANR	870333	PtrMemberAccess	core -> watchers		870242	0					
ANR	870334	Identifier	core		870242	0					
ANR	870335	Identifier	watchers		870242	1					
ANR	870336	ReturnType	R_API int		870242	1					
ANR	870337	Identifier	r_core_cmpwatch_update		870242	2					
ANR	870338	ParameterList	"RCore * core , ut64 addr"		870242	3					
ANR	870339	Parameter	RCore * core	123:33:3813:3823	870242	0	True				
ANR	870340	ParameterType	RCore *		870242	0					
ANR	870341	Identifier	core		870242	1					
ANR	870342	Parameter	ut64 addr	123:46:3826:3834	870242	1	True				
ANR	870343	ParameterType	ut64		870242	0					
ANR	870344	Identifier	addr		870242	1					
ANR	870345	CFGEntryNode	ENTRY		870242		True				
ANR	870346	CFGExitNode	EXIT		870242		True				
ANR	870347	Symbol	* w		870242						
ANR	870348	Symbol	malloc		870242						
ANR	870349	Symbol	false		870242						
ANR	870350	Symbol	* core		870242						
ANR	870351	Symbol	iter		870242						
ANR	870352	Symbol	core		870242						
ANR	870353	Symbol	w -> ndata		870242						
ANR	870354	Symbol	core -> io		870242						
ANR	870355	Symbol	w -> size		870242						
ANR	870356	Symbol	w		870242						
ANR	870357	Symbol	r_list_empty		870242						
ANR	870358	Symbol	core -> watchers		870242						
ANR	870359	Symbol	addr		870242						
ANR	870360	Symbol	w -> odata		870242						
ANR	870361	Symbol	w -> addr		870242						
ANR	870362	Function	r_core_cmpwatch_revert	138:0:4136:4468							
ANR	870363	FunctionDef	"r_core_cmpwatch_revert (RCore * core , ut64 addr)"		870362	0					
ANR	870364	CompoundStatement		138:57:4193:4468	870362	0					
ANR	870365	IdentifierDeclStatement	RCoreCmpWatcher * w ;	139:1:4196:4214	870362	0	True				
ANR	870366	IdentifierDecl	* w		870362	0					
ANR	870367	IdentifierDeclType	RCoreCmpWatcher *		870362	0					
ANR	870368	Identifier	w		870362	1					
ANR	870369	IdentifierDeclStatement	int ret = false ;	140:1:4217:4232	870362	1	True				
ANR	870370	IdentifierDecl	ret = false		870362	0					
ANR	870371	IdentifierDeclType	int		870362	0					
ANR	870372	Identifier	ret		870362	1					
ANR	870373	AssignmentExpression	ret = false		870362	2		=			
ANR	870374	Identifier	false		870362	0					
ANR	870375	Identifier	false		870362	1					
ANR	870376	IdentifierDeclStatement	RListIter * iter ;	141:1:4235:4250	870362	2	True				
ANR	870377	IdentifierDecl	* iter		870362	0					
ANR	870378	IdentifierDeclType	RListIter *		870362	0					
ANR	870379	Identifier	iter		870362	1					
ANR	870380	Statement	r_list_foreach	142:1:4253:4266	870362	3	True				
ANR	870381	Statement	(	142:16:4268:4268	870362	4	True				
ANR	870382	Statement	core	142:17:4269:4272	870362	5	True				
ANR	870383	Statement	->	142:21:4273:4274	870362	6	True				
ANR	870384	Statement	watchers	142:23:4275:4282	870362	7	True				
ANR	870385	Statement	","	142:31:4283:4283	870362	8	True				
ANR	870386	Statement	iter	142:33:4285:4288	870362	9	True				
ANR	870387	Statement	","	142:37:4289:4289	870362	10	True				
ANR	870388	Statement	w	142:39:4291:4291	870362	11	True				
ANR	870389	Statement	)	142:40:4292:4292	870362	12	True				
ANR	870390	CompoundStatement		5:42:100:100	870362	13					
ANR	870391	IfStatement	if ( w -> addr == addr || addr == UT64_MAX )		870362	0					
ANR	870392	Condition	w -> addr == addr || addr == UT64_MAX	143:6:4302:4336	870362	0	True				
ANR	870393	OrExpression	w -> addr == addr || addr == UT64_MAX		870362	0		||			
ANR	870394	EqualityExpression	w -> addr == addr		870362	0		==			
ANR	870395	PtrMemberAccess	w -> addr		870362	0					
ANR	870396	Identifier	w		870362	0					
ANR	870397	Identifier	addr		870362	1					
ANR	870398	Identifier	addr		870362	1					
ANR	870399	EqualityExpression	addr == UT64_MAX		870362	1		==			
ANR	870400	Identifier	addr		870362	0					
ANR	870401	Identifier	UT64_MAX		870362	1					
ANR	870402	CompoundStatement		6:43:145:145	870362	1					
ANR	870403	IfStatement	if ( w -> odata )		870362	0					
ANR	870404	Condition	w -> odata	144:7:4348:4355	870362	0	True				
ANR	870405	PtrMemberAccess	w -> odata		870362	0					
ANR	870406	Identifier	w		870362	0					
ANR	870407	Identifier	odata		870362	1					
ANR	870408	CompoundStatement		7:17:164:164	870362	1					
ANR	870409	ExpressionStatement	free ( w -> ndata )	145:4:4364:4379	870362	0	True				
ANR	870410	CallExpression	free ( w -> ndata )		870362	0					
ANR	870411	Callee	free		870362	0					
ANR	870412	Identifier	free		870362	0					
ANR	870413	ArgumentList	w -> ndata		870362	1					
ANR	870414	Argument	w -> ndata		870362	0					
ANR	870415	PtrMemberAccess	w -> ndata		870362	0					
ANR	870416	Identifier	w		870362	0					
ANR	870417	Identifier	ndata		870362	1					
ANR	870418	ExpressionStatement	w -> ndata = w -> odata	146:4:4385:4404	870362	1	True				
ANR	870419	AssignmentExpression	w -> ndata = w -> odata		870362	0		=			
ANR	870420	PtrMemberAccess	w -> ndata		870362	0					
ANR	870421	Identifier	w		870362	0					
ANR	870422	Identifier	ndata		870362	1					
ANR	870423	PtrMemberAccess	w -> odata		870362	1					
ANR	870424	Identifier	w		870362	0					
ANR	870425	Identifier	odata		870362	1					
ANR	870426	ExpressionStatement	w -> odata = NULL	147:4:4410:4425	870362	2	True				
ANR	870427	AssignmentExpression	w -> odata = NULL		870362	0		=			
ANR	870428	PtrMemberAccess	w -> odata		870362	0					
ANR	870429	Identifier	w		870362	0					
ANR	870430	Identifier	odata		870362	1					
ANR	870431	Identifier	NULL		870362	1					
ANR	870432	ExpressionStatement	ret = true	148:4:4431:4441	870362	3	True				
ANR	870433	AssignmentExpression	ret = true		870362	0		=			
ANR	870434	Identifier	ret		870362	0					
ANR	870435	Identifier	true		870362	1					
ANR	870436	ReturnStatement	return ret ;	152:1:4456:4466	870362	14	True				
ANR	870437	Identifier	ret		870362	0					
ANR	870438	ReturnType	R_API int		870362	1					
ANR	870439	Identifier	r_core_cmpwatch_revert		870362	2					
ANR	870440	ParameterList	"RCore * core , ut64 addr"		870362	3					
ANR	870441	Parameter	RCore * core	138:33:4169:4179	870362	0	True				
ANR	870442	ParameterType	RCore *		870362	0					
ANR	870443	Identifier	core		870362	1					
ANR	870444	Parameter	ut64 addr	138:46:4182:4190	870362	1	True				
ANR	870445	ParameterType	ut64		870362	0					
ANR	870446	Identifier	addr		870362	1					
ANR	870447	CFGEntryNode	ENTRY		870362		True				
ANR	870448	CFGExitNode	EXIT		870362		True				
ANR	870449	Symbol	ret		870362						
ANR	870450	Symbol	* w		870362						
ANR	870451	Symbol	NULL		870362						
ANR	870452	Symbol	false		870362						
ANR	870453	Symbol	iter		870362						
ANR	870454	Symbol	core		870362						
ANR	870455	Symbol	w -> ndata		870362						
ANR	870456	Symbol	w		870362						
ANR	870457	Symbol	true		870362						
ANR	870458	Symbol	addr		870362						
ANR	870459	Symbol	UT64_MAX		870362						
ANR	870460	Symbol	w -> addr		870362						
ANR	870461	Symbol	w -> odata		870362						
ANR	870462	Function	radare_compare_words	155:0:4471:6010							
ANR	870463	FunctionDef	"radare_compare_words (RCore * core , ut64 of , ut64 od , int len , int ws)"		870462	0					
ANR	870464	CompoundStatement		155:80:4551:6010	870462	0					
ANR	870465	IdentifierDeclStatement	int i ;	156:1:4554:4559	870462	0	True				
ANR	870466	IdentifierDecl	i		870462	0					
ANR	870467	IdentifierDeclType	int		870462	0					
ANR	870468	Identifier	i		870462	1					
ANR	870469	IdentifierDeclStatement	"bool useColor = r_config_get_i ( core -> config , ""scr.color"" ) != 0 ;"	157:1:4562:4625	870462	1	True				
ANR	870470	IdentifierDecl	"useColor = r_config_get_i ( core -> config , ""scr.color"" ) != 0"		870462	0					
ANR	870471	IdentifierDeclType	bool		870462	0					
ANR	870472	Identifier	useColor		870462	1					
ANR	870473	AssignmentExpression	"useColor = r_config_get_i ( core -> config , ""scr.color"" ) != 0"		870462	2		=			
ANR	870474	Identifier	useColor		870462	0					
ANR	870475	EqualityExpression	"r_config_get_i ( core -> config , ""scr.color"" ) != 0"		870462	1		!=			
ANR	870476	CallExpression	"r_config_get_i ( core -> config , ""scr.color"" )"		870462	0					
ANR	870477	Callee	r_config_get_i		870462	0					
ANR	870478	Identifier	r_config_get_i		870462	0					
ANR	870479	ArgumentList	core -> config		870462	1					
ANR	870480	Argument	core -> config		870462	0					
ANR	870481	PtrMemberAccess	core -> config		870462	0					
ANR	870482	Identifier	core		870462	0					
ANR	870483	Identifier	config		870462	1					
ANR	870484	Argument	"""scr.color"""		870462	1					
ANR	870485	PrimaryExpression	"""scr.color"""		870462	0					
ANR	870486	PrimaryExpression	0		870462	1					
ANR	870487	IdentifierDeclStatement	"utAny v0 , v1 ;"	158:1:4628:4640	870462	2	True				
ANR	870488	IdentifierDecl	v0		870462	0					
ANR	870489	IdentifierDeclType	utAny		870462	0					
ANR	870490	Identifier	v0		870462	1					
ANR	870491	IdentifierDecl	v1		870462	1					
ANR	870492	IdentifierDeclType	utAny		870462	0					
ANR	870493	Identifier	v1		870462	1					
ANR	870494	IdentifierDeclStatement	RConsPrintablePalette * pal = & r_cons_singleton ( ) -> context -> pal ;	159:1:4643:4706	870462	3	True				
ANR	870495	IdentifierDecl	* pal = & r_cons_singleton ( ) -> context -> pal		870462	0					
ANR	870496	IdentifierDeclType	RConsPrintablePalette *		870462	0					
ANR	870497	Identifier	pal		870462	1					
ANR	870498	AssignmentExpression	* pal = & r_cons_singleton ( ) -> context -> pal		870462	2		=			
ANR	870499	Identifier	pal		870462	0					
ANR	870500	UnaryOperationExpression	& r_cons_singleton ( ) -> context -> pal		870462	1					
ANR	870501	UnaryOperator	&		870462	0					
ANR	870502	PtrMemberAccess	r_cons_singleton ( ) -> context -> pal		870462	1					
ANR	870503	PtrMemberAccess	r_cons_singleton ( ) -> context		870462	0					
ANR	870504	CallExpression	r_cons_singleton ( )		870462	0					
ANR	870505	Callee	r_cons_singleton		870462	0					
ANR	870506	Identifier	r_cons_singleton		870462	0					
ANR	870507	ArgumentList			870462	1					
ANR	870508	Identifier	context		870462	1					
ANR	870509	Identifier	pal		870462	1					
ANR	870510	ForStatement	for ( i = 0 ; i < len ; i += ws )		870462	4					
ANR	870511	ForInit	i = 0 ;	160:6:4714:4719	870462	0	True				
ANR	870512	AssignmentExpression	i = 0		870462	0		=			
ANR	870513	Identifier	i		870462	0					
ANR	870514	PrimaryExpression	0		870462	1					
ANR	870515	Condition	i < len	160:13:4721:4727	870462	1	True				
ANR	870516	RelationalExpression	i < len		870462	0		<			
ANR	870517	Identifier	i		870462	0					
ANR	870518	Identifier	len		870462	1					
ANR	870519	AssignmentExpression	i += ws	160:22:4730:4734	870462	2	True	+=			
ANR	870520	Identifier	i		870462	0					
ANR	870521	Identifier	ws		870462	1					
ANR	870522	CompoundStatement		13:2:464:512	870462	3					
ANR	870523	ExpressionStatement	"memset ( & v0 , 0 , sizeof ( v0 ) )"	161:2:4741:4769	870462	0	True				
ANR	870524	CallExpression	"memset ( & v0 , 0 , sizeof ( v0 ) )"		870462	0					
ANR	870525	Callee	memset		870462	0					
ANR	870526	Identifier	memset		870462	0					
ANR	870527	ArgumentList	& v0		870462	1					
ANR	870528	Argument	& v0		870462	0					
ANR	870529	UnaryOperationExpression	& v0		870462	0					
ANR	870530	UnaryOperator	&		870462	0					
ANR	870531	Identifier	v0		870462	1					
ANR	870532	Argument	0		870462	1					
ANR	870533	PrimaryExpression	0		870462	0					
ANR	870534	Argument	sizeof ( v0 )		870462	2					
ANR	870535	SizeofExpression	sizeof ( v0 )		870462	0					
ANR	870536	Sizeof	sizeof		870462	0					
ANR	870537	SizeofOperand	v0		870462	1					
ANR	870538	ExpressionStatement	"memset ( & v1 , 0 , sizeof ( v1 ) )"	162:2:4773:4801	870462	1	True				
ANR	870539	CallExpression	"memset ( & v1 , 0 , sizeof ( v1 ) )"		870462	0					
ANR	870540	Callee	memset		870462	0					
ANR	870541	Identifier	memset		870462	0					
ANR	870542	ArgumentList	& v1		870462	1					
ANR	870543	Argument	& v1		870462	0					
ANR	870544	UnaryOperationExpression	& v1		870462	0					
ANR	870545	UnaryOperator	&		870462	0					
ANR	870546	Identifier	v1		870462	1					
ANR	870547	Argument	0		870462	1					
ANR	870548	PrimaryExpression	0		870462	0					
ANR	870549	Argument	sizeof ( v1 )		870462	2					
ANR	870550	SizeofExpression	sizeof ( v1 )		870462	0					
ANR	870551	Sizeof	sizeof		870462	0					
ANR	870552	SizeofOperand	v1		870462	1					
ANR	870553	ExpressionStatement	"r_io_read_at ( core -> io , of + i , ( ut8 * ) & v0 , ws )"	163:2:4805:4851	870462	2	True				
ANR	870554	CallExpression	"r_io_read_at ( core -> io , of + i , ( ut8 * ) & v0 , ws )"		870462	0					
ANR	870555	Callee	r_io_read_at		870462	0					
ANR	870556	Identifier	r_io_read_at		870462	0					
ANR	870557	ArgumentList	core -> io		870462	1					
ANR	870558	Argument	core -> io		870462	0					
ANR	870559	PtrMemberAccess	core -> io		870462	0					
ANR	870560	Identifier	core		870462	0					
ANR	870561	Identifier	io		870462	1					
ANR	870562	Argument	of + i		870462	1					
ANR	870563	AdditiveExpression	of + i		870462	0		+			
ANR	870564	Identifier	of		870462	0					
ANR	870565	Identifier	i		870462	1					
ANR	870566	Argument	( ut8 * ) & v0		870462	2					
ANR	870567	CastExpression	( ut8 * ) & v0		870462	0					
ANR	870568	CastTarget	ut8 *		870462	0					
ANR	870569	UnaryOperationExpression	& v0		870462	1					
ANR	870570	UnaryOperator	&		870462	0					
ANR	870571	Identifier	v0		870462	1					
ANR	870572	Argument	ws		870462	3					
ANR	870573	Identifier	ws		870462	0					
ANR	870574	ExpressionStatement	"r_io_read_at ( core -> io , od + i , ( ut8 * ) & v1 , ws )"	164:2:4855:4901	870462	3	True				
ANR	870575	CallExpression	"r_io_read_at ( core -> io , od + i , ( ut8 * ) & v1 , ws )"		870462	0					
ANR	870576	Callee	r_io_read_at		870462	0					
ANR	870577	Identifier	r_io_read_at		870462	0					
ANR	870578	ArgumentList	core -> io		870462	1					
ANR	870579	Argument	core -> io		870462	0					
ANR	870580	PtrMemberAccess	core -> io		870462	0					
ANR	870581	Identifier	core		870462	0					
ANR	870582	Identifier	io		870462	1					
ANR	870583	Argument	od + i		870462	1					
ANR	870584	AdditiveExpression	od + i		870462	0		+			
ANR	870585	Identifier	od		870462	0					
ANR	870586	Identifier	i		870462	1					
ANR	870587	Argument	( ut8 * ) & v1		870462	2					
ANR	870588	CastExpression	( ut8 * ) & v1		870462	0					
ANR	870589	CastTarget	ut8 *		870462	0					
ANR	870590	UnaryOperationExpression	& v1		870462	1					
ANR	870591	UnaryOperator	&		870462	0					
ANR	870592	Identifier	v1		870462	1					
ANR	870593	Argument	ws		870462	3					
ANR	870594	Identifier	ws		870462	0					
ANR	870595	IdentifierDeclStatement	char ch = ( v0 . v64 == v1 . v64 ) ? '=' : '!' ;	165:2:4905:4943	870462	4	True				
ANR	870596	IdentifierDecl	ch = ( v0 . v64 == v1 . v64 ) ? '=' : '!'		870462	0					
ANR	870597	IdentifierDeclType	char		870462	0					
ANR	870598	Identifier	ch		870462	1					
ANR	870599	AssignmentExpression	ch = ( v0 . v64 == v1 . v64 ) ? '=' : '!'		870462	2		=			
ANR	870600	Identifier	ch		870462	0					
ANR	870601	ConditionalExpression	( v0 . v64 == v1 . v64 ) ? '=' : '!'		870462	1					
ANR	870602	Condition	v0 . v64 == v1 . v64		870462	0					
ANR	870603	EqualityExpression	v0 . v64 == v1 . v64		870462	0		==			
ANR	870604	MemberAccess	v0 . v64		870462	0					
ANR	870605	Identifier	v0		870462	0					
ANR	870606	Identifier	v64		870462	1					
ANR	870607	MemberAccess	v1 . v64		870462	1					
ANR	870608	Identifier	v1		870462	0					
ANR	870609	Identifier	v64		870462	1					
ANR	870610	PrimaryExpression	'='		870462	1					
ANR	870611	PrimaryExpression	'!'		870462	2					
ANR	870612	IdentifierDeclStatement	"const char * color = useColor ? ch == '=' ? """" : pal -> graph_false : """" ;"	166:2:4947:5012	870462	5	True				
ANR	870613	IdentifierDecl	"* color = useColor ? ch == '=' ? """" : pal -> graph_false : """""		870462	0					
ANR	870614	IdentifierDeclType	const char *		870462	0					
ANR	870615	Identifier	color		870462	1					
ANR	870616	AssignmentExpression	"* color = useColor ? ch == '=' ? """" : pal -> graph_false : """""		870462	2		=			
ANR	870617	Identifier	color		870462	0					
ANR	870618	ConditionalExpression	"useColor ? ch == '=' ? """" : pal -> graph_false : """""		870462	1					
ANR	870619	Condition	useColor		870462	0					
ANR	870620	Identifier	useColor		870462	0					
ANR	870621	ConditionalExpression	"ch == '=' ? """" : pal -> graph_false"		870462	1					
ANR	870622	Condition	ch == '='		870462	0					
ANR	870623	EqualityExpression	ch == '='		870462	0		==			
ANR	870624	Identifier	ch		870462	0					
ANR	870625	PrimaryExpression	'='		870462	1					
ANR	870626	PrimaryExpression	""""""		870462	1					
ANR	870627	PtrMemberAccess	pal -> graph_false		870462	2					
ANR	870628	Identifier	pal		870462	0					
ANR	870629	Identifier	graph_false		870462	1					
ANR	870630	PrimaryExpression	""""""		870462	2					
ANR	870631	IdentifierDeclStatement	"const char * colorEnd = useColor ? Color_RESET : """" ;"	167:2:5016:5064	870462	6	True				
ANR	870632	IdentifierDecl	"* colorEnd = useColor ? Color_RESET : """""		870462	0					
ANR	870633	IdentifierDeclType	const char *		870462	0					
ANR	870634	Identifier	colorEnd		870462	1					
ANR	870635	AssignmentExpression	"* colorEnd = useColor ? Color_RESET : """""		870462	2		=			
ANR	870636	Identifier	colorEnd		870462	0					
ANR	870637	ConditionalExpression	"useColor ? Color_RESET : """""		870462	1					
ANR	870638	Condition	useColor		870462	0					
ANR	870639	Identifier	useColor		870462	0					
ANR	870640	Identifier	Color_RESET		870462	1					
ANR	870641	PrimaryExpression	""""""		870462	2					
ANR	870642	IfStatement	if ( useColor )		870462	7					
ANR	870643	Condition	useColor	169:6:5073:5080	870462	0	True				
ANR	870644	Identifier	useColor		870462	0					
ANR	870645	CompoundStatement		15:16:531:531	870462	1					
ANR	870646	Statement	r_cons_printf	170:3:5088:5100	870462	0	True				
ANR	870647	Statement	(	170:17:5102:5102	870462	1	True				
ANR	870648	Statement	"""%s0x%08"""	170:18:5103:5111	870462	2	True				
ANR	870649	Statement	PFMT64x	170:28:5113:5119	870462	3	True				
ANR	870650	Statement	"""  """	170:35:5120:5123	870462	4	True				
ANR	870651	Statement	Color_RESET	170:39:5124:5134	870462	5	True				
ANR	870652	Statement	","	170:50:5135:5135	870462	6	True				
ANR	870653	Statement	pal	170:52:5137:5139	870462	7	True				
ANR	870654	Statement	->	170:55:5140:5141	870462	8	True				
ANR	870655	Statement	offset	170:57:5142:5147	870462	9	True				
ANR	870656	Statement	","	170:63:5148:5148	870462	10	True				
ANR	870657	Statement	of	170:65:5150:5151	870462	11	True				
ANR	870658	Statement	+	170:68:5153:5153	870462	12	True				
ANR	870659	Statement	i	170:70:5155:5155	870462	13	True				
ANR	870660	Statement	)	170:71:5156:5156	870462	14	True				
ANR	870661	ExpressionStatement		170:72:5157:5157	870462	15	True				
ANR	870662	ElseStatement	else		870462	0					
ANR	870663	CompoundStatement		17:9:616:616	870462	0					
ANR	870664	Statement	r_cons_printf	172:3:5173:5185	870462	0	True				
ANR	870665	Statement	(	172:17:5187:5187	870462	1	True				
ANR	870666	Statement	"""0x%08"""	172:18:5188:5194	870462	2	True				
ANR	870667	Statement	PFMT64x	172:26:5196:5202	870462	3	True				
ANR	870668	Statement	"""  """	172:33:5203:5206	870462	4	True				
ANR	870669	Statement	","	172:37:5207:5207	870462	5	True				
ANR	870670	Statement	of	172:39:5209:5210	870462	6	True				
ANR	870671	Statement	+	172:42:5212:5212	870462	7	True				
ANR	870672	Statement	i	172:44:5214:5214	870462	8	True				
ANR	870673	Statement	)	172:45:5215:5215	870462	9	True				
ANR	870674	ExpressionStatement		172:46:5216:5216	870462	10	True				
ANR	870675	SwitchStatement	switch ( ws )		870462	8					
ANR	870676	Condition	ws	174:10:5232:5233	870462	0	True				
ANR	870677	Identifier	ws		870462	0					
ANR	870678	CompoundStatement		20:14:684:684	870462	1					
ANR	870679	Label	case 1 :	175:2:5240:5246	870462	0	True				
ANR	870680	ExpressionStatement	"r_cons_printf ( ""%s0x%02x %c 0x%02x%s\\n"" , color , ( ut32 ) ( v0 . v8 & 0xff ) , ch , ( ut32 ) ( v1 . v8 & 0xff ) , colorEnd )"	176:3:5251:5360	870462	1	True				
ANR	870681	CallExpression	"r_cons_printf ( ""%s0x%02x %c 0x%02x%s\\n"" , color , ( ut32 ) ( v0 . v8 & 0xff ) , ch , ( ut32 ) ( v1 . v8 & 0xff ) , colorEnd )"		870462	0					
ANR	870682	Callee	r_cons_printf		870462	0					
ANR	870683	Identifier	r_cons_printf		870462	0					
ANR	870684	ArgumentList	"""%s0x%02x %c 0x%02x%s\\n"""		870462	1					
ANR	870685	Argument	"""%s0x%02x %c 0x%02x%s\\n"""		870462	0					
ANR	870686	PrimaryExpression	"""%s0x%02x %c 0x%02x%s\\n"""		870462	0					
ANR	870687	Argument	color		870462	1					
ANR	870688	Identifier	color		870462	0					
ANR	870689	Argument	( ut32 ) ( v0 . v8 & 0xff )		870462	2					
ANR	870690	CastExpression	( ut32 ) ( v0 . v8 & 0xff )		870462	0					
ANR	870691	CastTarget	ut32		870462	0					
ANR	870692	BitAndExpression	v0 . v8 & 0xff		870462	1		&			
ANR	870693	MemberAccess	v0 . v8		870462	0					
ANR	870694	Identifier	v0		870462	0					
ANR	870695	Identifier	v8		870462	1					
ANR	870696	PrimaryExpression	0xff		870462	1					
ANR	870697	Argument	ch		870462	3					
ANR	870698	Identifier	ch		870462	0					
ANR	870699	Argument	( ut32 ) ( v1 . v8 & 0xff )		870462	4					
ANR	870700	CastExpression	( ut32 ) ( v1 . v8 & 0xff )		870462	0					
ANR	870701	CastTarget	ut32		870462	0					
ANR	870702	BitAndExpression	v1 . v8 & 0xff		870462	1		&			
ANR	870703	MemberAccess	v1 . v8		870462	0					
ANR	870704	Identifier	v1		870462	0					
ANR	870705	Identifier	v8		870462	1					
ANR	870706	PrimaryExpression	0xff		870462	1					
ANR	870707	Argument	colorEnd		870462	5					
ANR	870708	Identifier	colorEnd		870462	0					
ANR	870709	BreakStatement	break ;	178:3:5365:5370	870462	2	True				
ANR	870710	Label	case 2 :	179:2:5374:5380	870462	3	True				
ANR	870711	ExpressionStatement	"r_cons_printf ( ""%s0x%04hx %c 0x%04hx%s\\n"" , color , v0 . v16 , ch , v1 . v16 , colorEnd )"	180:3:5385:5468	870462	4	True				
ANR	870712	CallExpression	"r_cons_printf ( ""%s0x%04hx %c 0x%04hx%s\\n"" , color , v0 . v16 , ch , v1 . v16 , colorEnd )"		870462	0					
ANR	870713	Callee	r_cons_printf		870462	0					
ANR	870714	Identifier	r_cons_printf		870462	0					
ANR	870715	ArgumentList	"""%s0x%04hx %c 0x%04hx%s\\n"""		870462	1					
ANR	870716	Argument	"""%s0x%04hx %c 0x%04hx%s\\n"""		870462	0					
ANR	870717	PrimaryExpression	"""%s0x%04hx %c 0x%04hx%s\\n"""		870462	0					
ANR	870718	Argument	color		870462	1					
ANR	870719	Identifier	color		870462	0					
ANR	870720	Argument	v0 . v16		870462	2					
ANR	870721	MemberAccess	v0 . v16		870462	0					
ANR	870722	Identifier	v0		870462	0					
ANR	870723	Identifier	v16		870462	1					
ANR	870724	Argument	ch		870462	3					
ANR	870725	Identifier	ch		870462	0					
ANR	870726	Argument	v1 . v16		870462	4					
ANR	870727	MemberAccess	v1 . v16		870462	0					
ANR	870728	Identifier	v1		870462	0					
ANR	870729	Identifier	v16		870462	1					
ANR	870730	Argument	colorEnd		870462	5					
ANR	870731	Identifier	colorEnd		870462	0					
ANR	870732	BreakStatement	break ;	182:3:5473:5478	870462	5	True				
ANR	870733	Label	case 4 :	183:2:5482:5488	870462	6	True				
ANR	870734	Statement	r_cons_printf	184:3:5493:5505	870462	7	True				
ANR	870735	Statement	(	184:17:5507:5507	870462	8	True				
ANR	870736	Statement	"""%s0x%08"""	184:18:5508:5516	870462	9	True				
ANR	870737	Statement	PFMT32x	184:27:5517:5523	870462	10	True				
ANR	870738	Statement	""" %c 0x%08"""	184:34:5524:5534	870462	11	True				
ANR	870739	Statement	PFMT32x	184:45:5535:5541	870462	12	True				
ANR	870740	Statement	"""%s\\n"""	184:52:5542:5547	870462	13	True				
ANR	870741	Statement	","	184:58:5548:5548	870462	14	True				
ANR	870742	Statement	color	184:60:5550:5554	870462	15	True				
ANR	870743	Statement	","	184:65:5555:5555	870462	16	True				
ANR	870744	Statement	v0	185:4:5561:5562	870462	17	True				
ANR	870745	Statement	.	185:6:5563:5563	870462	18	True				
ANR	870746	Statement	v32	185:7:5564:5566	870462	19	True				
ANR	870747	Statement	","	185:10:5567:5567	870462	20	True				
ANR	870748	Statement	ch	185:12:5569:5570	870462	21	True				
ANR	870749	Statement	","	185:14:5571:5571	870462	22	True				
ANR	870750	Statement	v1	185:16:5573:5574	870462	23	True				
ANR	870751	Statement	.	185:18:5575:5575	870462	24	True				
ANR	870752	Statement	v32	185:19:5576:5578	870462	25	True				
ANR	870753	Statement	","	185:22:5579:5579	870462	26	True				
ANR	870754	Statement	colorEnd	185:24:5581:5588	870462	27	True				
ANR	870755	Statement	)	185:32:5589:5589	870462	28	True				
ANR	870756	ExpressionStatement		185:33:5590:5590	870462	29	True				
ANR	870757	IfStatement	if ( v0 . v32 != v1 . v32 )		870462	30					
ANR	870758	Condition	v0 . v32 != v1 . v32	187:7:5649:5664	870462	0	True				
ANR	870759	EqualityExpression	v0 . v32 != v1 . v32		870462	0		!=			
ANR	870760	MemberAccess	v0 . v32		870462	0					
ANR	870761	Identifier	v0		870462	0					
ANR	870762	Identifier	v32		870462	1					
ANR	870763	MemberAccess	v1 . v32		870462	1					
ANR	870764	Identifier	v1		870462	0					
ANR	870765	Identifier	v32		870462	1					
ANR	870766	CompoundStatement		33:25:1115:1115	870462	1					
ANR	870767	BreakStatement	break ;	190:3:5728:5733	870462	31	True				
ANR	870768	Label	case 8 :	191:2:5737:5743	870462	32	True				
ANR	870769	Statement	r_cons_printf	192:3:5748:5760	870462	33	True				
ANR	870770	Statement	(	192:17:5762:5762	870462	34	True				
ANR	870771	Statement	"""%s0x%016"""	192:18:5763:5772	870462	35	True				
ANR	870772	Statement	PFMT64x	192:28:5773:5779	870462	36	True				
ANR	870773	Statement	""" %c 0x%016"""	192:35:5780:5791	870462	37	True				
ANR	870774	Statement	PFMT64x	192:47:5792:5798	870462	38	True				
ANR	870775	Statement	"""%s\\n"""	192:54:5799:5804	870462	39	True				
ANR	870776	Statement	","	192:60:5805:5805	870462	40	True				
ANR	870777	Statement	color	193:4:5811:5815	870462	41	True				
ANR	870778	Statement	","	193:9:5816:5816	870462	42	True				
ANR	870779	Statement	v0	193:11:5818:5819	870462	43	True				
ANR	870780	Statement	.	193:13:5820:5820	870462	44	True				
ANR	870781	Statement	v64	193:14:5821:5823	870462	45	True				
ANR	870782	Statement	","	193:17:5824:5824	870462	46	True				
ANR	870783	Statement	ch	193:19:5826:5827	870462	47	True				
ANR	870784	Statement	","	193:21:5828:5828	870462	48	True				
ANR	870785	Statement	v1	193:23:5830:5831	870462	49	True				
ANR	870786	Statement	.	193:25:5832:5832	870462	50	True				
ANR	870787	Statement	v64	193:26:5833:5835	870462	51	True				
ANR	870788	Statement	","	193:29:5836:5836	870462	52	True				
ANR	870789	Statement	colorEnd	193:31:5838:5845	870462	53	True				
ANR	870790	Statement	)	193:39:5846:5846	870462	54	True				
ANR	870791	ExpressionStatement		193:40:5847:5847	870462	55	True				
ANR	870792	IfStatement	if ( v0 . v64 != v1 . v64 )		870462	56					
ANR	870793	Condition	v0 . v64 != v1 . v64	195:7:5906:5921	870462	0	True				
ANR	870794	EqualityExpression	v0 . v64 != v1 . v64		870462	0		!=			
ANR	870795	MemberAccess	v0 . v64		870462	0					
ANR	870796	Identifier	v0		870462	0					
ANR	870797	Identifier	v64		870462	1					
ANR	870798	MemberAccess	v1 . v64		870462	1					
ANR	870799	Identifier	v1		870462	0					
ANR	870800	Identifier	v64		870462	1					
ANR	870801	CompoundStatement		41:25:1372:1372	870462	1					
ANR	870802	BreakStatement	break ;	198:3:5985:5990	870462	57	True				
ANR	870803	ReturnStatement	return 0 ;	201:1:6000:6008	870462	5	True				
ANR	870804	PrimaryExpression	0		870462	0					
ANR	870805	ReturnType	static int		870462	1					
ANR	870806	Identifier	radare_compare_words		870462	2					
ANR	870807	ParameterList	"RCore * core , ut64 of , ut64 od , int len , int ws"		870462	3					
ANR	870808	Parameter	RCore * core	155:32:4503:4513	870462	0	True				
ANR	870809	ParameterType	RCore *		870462	0					
ANR	870810	Identifier	core		870462	1					
ANR	870811	Parameter	ut64 of	155:45:4516:4522	870462	1	True				
ANR	870812	ParameterType	ut64		870462	0					
ANR	870813	Identifier	of		870462	1					
ANR	870814	Parameter	ut64 od	155:54:4525:4531	870462	2	True				
ANR	870815	ParameterType	ut64		870462	0					
ANR	870816	Identifier	od		870462	1					
ANR	870817	Parameter	int len	155:63:4534:4540	870462	3	True				
ANR	870818	ParameterType	int		870462	0					
ANR	870819	Identifier	len		870462	1					
ANR	870820	Parameter	int ws	155:72:4543:4548	870462	4	True				
ANR	870821	ParameterType	int		870462	0					
ANR	870822	Identifier	ws		870462	1					
ANR	870823	CFGEntryNode	ENTRY		870462		True				
ANR	870824	CFGExitNode	EXIT		870462		True				
ANR	870825	Symbol	color		870462						
ANR	870826	Symbol	* pal		870462						
ANR	870827	Symbol	pal -> graph_false		870462						
ANR	870828	Symbol	* core		870462						
ANR	870829	Symbol	Color_RESET		870462						
ANR	870830	Symbol	v1 . v16		870462						
ANR	870831	Symbol	useColor		870462						
ANR	870832	Symbol	v1 . v64		870462						
ANR	870833	Symbol	len		870462						
ANR	870834	Symbol	core -> io		870462						
ANR	870835	Symbol	v0 . v32		870462						
ANR	870836	Symbol	od		870462						
ANR	870837	Symbol	of		870462						
ANR	870838	Symbol	r_cons_singleton		870462						
ANR	870839	Symbol	pal		870462						
ANR	870840	Symbol	ws		870462						
ANR	870841	Symbol	core -> config		870462						
ANR	870842	Symbol	& v1		870462						
ANR	870843	Symbol	& v0		870462						
ANR	870844	Symbol	ch		870462						
ANR	870845	Symbol	i		870462						
ANR	870846	Symbol	v0 . v16		870462						
ANR	870847	Symbol	v1 . v8		870462						
ANR	870848	Symbol	core		870462						
ANR	870849	Symbol	v1 . v32		870462						
ANR	870850	Symbol	& r_cons_singleton ( ) -> context -> pal		870462						
ANR	870851	Symbol	v0 . v64		870462						
ANR	870852	Symbol	r_config_get_i		870462						
ANR	870853	Symbol	v0		870462						
ANR	870854	Symbol	v0 . v8		870462						
ANR	870855	Symbol	v1		870462						
ANR	870856	Symbol	colorEnd		870462						
ANR	870857	Symbol	r_cons_singleton ( ) -> context		870462						
ANR	870858	Symbol	* r_cons_singleton		870462						
ANR	870859	Function	radare_compare_unified	204:0:6013:6983							
ANR	870860	FunctionDef	"radare_compare_unified (RCore * core , ut64 of , ut64 od , int len)"		870859	0					
ANR	870861	CompoundStatement		204:74:6087:6983	870859	0					
ANR	870862	IdentifierDeclStatement	"int i , min , inc = 16 ;"	205:1:6090:6110	870859	0	True				
ANR	870863	IdentifierDecl	i		870859	0					
ANR	870864	IdentifierDeclType	int		870859	0					
ANR	870865	Identifier	i		870859	1					
ANR	870866	IdentifierDecl	min		870859	1					
ANR	870867	IdentifierDeclType	int		870859	0					
ANR	870868	Identifier	min		870859	1					
ANR	870869	IdentifierDecl	inc = 16		870859	2					
ANR	870870	IdentifierDeclType	int		870859	0					
ANR	870871	Identifier	inc		870859	1					
ANR	870872	AssignmentExpression	inc = 16		870859	2		=			
ANR	870873	Identifier	inc		870859	0					
ANR	870874	PrimaryExpression	16		870859	1					
ANR	870875	IdentifierDeclStatement	"ut8 * f , * d ;"	206:1:6113:6123	870859	1	True				
ANR	870876	IdentifierDecl	* f		870859	0					
ANR	870877	IdentifierDeclType	ut8 *		870859	0					
ANR	870878	Identifier	f		870859	1					
ANR	870879	IdentifierDecl	* d		870859	1					
ANR	870880	IdentifierDeclType	ut8 *		870859	0					
ANR	870881	Identifier	d		870859	1					
ANR	870882	IfStatement	if ( len < 1 )		870859	2					
ANR	870883	Condition	len < 1	207:5:6130:6136	870859	0	True				
ANR	870884	RelationalExpression	len < 1		870859	0		<			
ANR	870885	Identifier	len		870859	0					
ANR	870886	PrimaryExpression	1		870859	1					
ANR	870887	CompoundStatement		4:14:51:51	870859	1					
ANR	870888	ReturnStatement	return false ;	208:2:6143:6155	870859	0	True				
ANR	870889	Identifier	false		870859	0					
ANR	870890	ExpressionStatement	f = malloc ( len )	210:1:6161:6177	870859	3	True				
ANR	870891	AssignmentExpression	f = malloc ( len )		870859	0		=			
ANR	870892	Identifier	f		870859	0					
ANR	870893	CallExpression	malloc ( len )		870859	1					
ANR	870894	Callee	malloc		870859	0					
ANR	870895	Identifier	malloc		870859	0					
ANR	870896	ArgumentList	len		870859	1					
ANR	870897	Argument	len		870859	0					
ANR	870898	Identifier	len		870859	0					
ANR	870899	IfStatement	if ( ! f )		870859	4					
ANR	870900	Condition	! f	211:5:6184:6185	870859	0	True				
ANR	870901	UnaryOperationExpression	! f		870859	0					
ANR	870902	UnaryOperator	!		870859	0					
ANR	870903	Identifier	f		870859	1					
ANR	870904	CompoundStatement		8:9:100:100	870859	1					
ANR	870905	ReturnStatement	return false ;	212:2:6192:6204	870859	0	True				
ANR	870906	Identifier	false		870859	0					
ANR	870907	ExpressionStatement	d = malloc ( len )	214:1:6210:6226	870859	5	True				
ANR	870908	AssignmentExpression	d = malloc ( len )		870859	0		=			
ANR	870909	Identifier	d		870859	0					
ANR	870910	CallExpression	malloc ( len )		870859	1					
ANR	870911	Callee	malloc		870859	0					
ANR	870912	Identifier	malloc		870859	0					
ANR	870913	ArgumentList	len		870859	1					
ANR	870914	Argument	len		870859	0					
ANR	870915	Identifier	len		870859	0					
ANR	870916	IfStatement	if ( ! d )		870859	6					
ANR	870917	Condition	! d	215:5:6233:6234	870859	0	True				
ANR	870918	UnaryOperationExpression	! d		870859	0					
ANR	870919	UnaryOperator	!		870859	0					
ANR	870920	Identifier	d		870859	1					
ANR	870921	CompoundStatement		12:9:149:149	870859	1					
ANR	870922	ExpressionStatement	free ( f )	216:2:6241:6249	870859	0	True				
ANR	870923	CallExpression	free ( f )		870859	0					
ANR	870924	Callee	free		870859	0					
ANR	870925	Identifier	free		870859	0					
ANR	870926	ArgumentList	f		870859	1					
ANR	870927	Argument	f		870859	0					
ANR	870928	Identifier	f		870859	0					
ANR	870929	ReturnStatement	return false ;	217:2:6253:6265	870859	1	True				
ANR	870930	Identifier	false		870859	0					
ANR	870931	ExpressionStatement	"r_io_read_at ( core -> io , of , f , len )"	219:1:6271:6306	870859	7	True				
ANR	870932	CallExpression	"r_io_read_at ( core -> io , of , f , len )"		870859	0					
ANR	870933	Callee	r_io_read_at		870859	0					
ANR	870934	Identifier	r_io_read_at		870859	0					
ANR	870935	ArgumentList	core -> io		870859	1					
ANR	870936	Argument	core -> io		870859	0					
ANR	870937	PtrMemberAccess	core -> io		870859	0					
ANR	870938	Identifier	core		870859	0					
ANR	870939	Identifier	io		870859	1					
ANR	870940	Argument	of		870859	1					
ANR	870941	Identifier	of		870859	0					
ANR	870942	Argument	f		870859	2					
ANR	870943	Identifier	f		870859	0					
ANR	870944	Argument	len		870859	3					
ANR	870945	Identifier	len		870859	0					
ANR	870946	ExpressionStatement	"r_io_read_at ( core -> io , od , d , len )"	220:1:6309:6344	870859	8	True				
ANR	870947	CallExpression	"r_io_read_at ( core -> io , od , d , len )"		870859	0					
ANR	870948	Callee	r_io_read_at		870859	0					
ANR	870949	Identifier	r_io_read_at		870859	0					
ANR	870950	ArgumentList	core -> io		870859	1					
ANR	870951	Argument	core -> io		870859	0					
ANR	870952	PtrMemberAccess	core -> io		870859	0					
ANR	870953	Identifier	core		870859	0					
ANR	870954	Identifier	io		870859	1					
ANR	870955	Argument	od		870859	1					
ANR	870956	Identifier	od		870859	0					
ANR	870957	Argument	d		870859	2					
ANR	870958	Identifier	d		870859	0					
ANR	870959	Argument	len		870859	3					
ANR	870960	Identifier	len		870859	0					
ANR	870961	IdentifierDeclStatement	"int headers = B_IS_SET ( core -> print -> flags , R_PRINT_FLAGS_HEADER ) ;"	221:1:6347:6412	870859	9	True				
ANR	870962	IdentifierDecl	"headers = B_IS_SET ( core -> print -> flags , R_PRINT_FLAGS_HEADER )"		870859	0					
ANR	870963	IdentifierDeclType	int		870859	0					
ANR	870964	Identifier	headers		870859	1					
ANR	870965	AssignmentExpression	"headers = B_IS_SET ( core -> print -> flags , R_PRINT_FLAGS_HEADER )"		870859	2		=			
ANR	870966	Identifier	headers		870859	0					
ANR	870967	CallExpression	"B_IS_SET ( core -> print -> flags , R_PRINT_FLAGS_HEADER )"		870859	1					
ANR	870968	Callee	B_IS_SET		870859	0					
ANR	870969	Identifier	B_IS_SET		870859	0					
ANR	870970	ArgumentList	core -> print -> flags		870859	1					
ANR	870971	Argument	core -> print -> flags		870859	0					
ANR	870972	PtrMemberAccess	core -> print -> flags		870859	0					
ANR	870973	PtrMemberAccess	core -> print		870859	0					
ANR	870974	Identifier	core		870859	0					
ANR	870975	Identifier	print		870859	1					
ANR	870976	Identifier	flags		870859	1					
ANR	870977	Argument	R_PRINT_FLAGS_HEADER		870859	1					
ANR	870978	Identifier	R_PRINT_FLAGS_HEADER		870859	0					
ANR	870979	IfStatement	if ( headers )		870859	10					
ANR	870980	Condition	headers	222:5:6419:6425	870859	0	True				
ANR	870981	Identifier	headers		870859	0					
ANR	870982	CompoundStatement		19:14:340:340	870859	1					
ANR	870983	ExpressionStatement	"B_UNSET ( core -> print -> flags , R_PRINT_FLAGS_HEADER )"	223:2:6432:6482	870859	0	True				
ANR	870984	CallExpression	"B_UNSET ( core -> print -> flags , R_PRINT_FLAGS_HEADER )"		870859	0					
ANR	870985	Callee	B_UNSET		870859	0					
ANR	870986	Identifier	B_UNSET		870859	0					
ANR	870987	ArgumentList	core -> print -> flags		870859	1					
ANR	870988	Argument	core -> print -> flags		870859	0					
ANR	870989	PtrMemberAccess	core -> print -> flags		870859	0					
ANR	870990	PtrMemberAccess	core -> print		870859	0					
ANR	870991	Identifier	core		870859	0					
ANR	870992	Identifier	print		870859	1					
ANR	870993	Identifier	flags		870859	1					
ANR	870994	Argument	R_PRINT_FLAGS_HEADER		870859	1					
ANR	870995	Identifier	R_PRINT_FLAGS_HEADER		870859	0					
ANR	870996	ForStatement	for ( i = 0 ; i < len ; i += inc )		870859	11					
ANR	870997	ForInit	i = 0 ;	225:6:6493:6498	870859	0	True				
ANR	870998	AssignmentExpression	i = 0		870859	0		=			
ANR	870999	Identifier	i		870859	0					
ANR	871000	PrimaryExpression	0		870859	1					
ANR	871001	Condition	i < len	225:13:6500:6506	870859	1	True				
ANR	871002	RelationalExpression	i < len		870859	0		<			
ANR	871003	Identifier	i		870859	0					
ANR	871004	Identifier	len		870859	1					
ANR	871005	AssignmentExpression	i += inc	225:22:6509:6516	870859	2	True	+=			
ANR	871006	Identifier	i		870859	0					
ANR	871007	Identifier	inc		870859	1					
ANR	871008	CompoundStatement		22:32:431:431	870859	3					
ANR	871009	ExpressionStatement	"min = R_MIN ( 16 , ( len - i ) )"	226:2:6523:6550	870859	0	True				
ANR	871010	AssignmentExpression	"min = R_MIN ( 16 , ( len - i ) )"		870859	0		=			
ANR	871011	Identifier	min		870859	0					
ANR	871012	CallExpression	"R_MIN ( 16 , ( len - i ) )"		870859	1					
ANR	871013	Callee	R_MIN		870859	0					
ANR	871014	Identifier	R_MIN		870859	0					
ANR	871015	ArgumentList	16		870859	1					
ANR	871016	Argument	16		870859	0					
ANR	871017	PrimaryExpression	16		870859	0					
ANR	871018	Argument	len - i		870859	1					
ANR	871019	AdditiveExpression	len - i		870859	0		-			
ANR	871020	Identifier	len		870859	0					
ANR	871021	Identifier	i		870859	1					
ANR	871022	IfStatement	"if ( ! memcmp ( f + i , d + i , min ) )"		870859	1					
ANR	871023	Condition	"! memcmp ( f + i , d + i , min )"	227:6:6558:6584	870859	0	True				
ANR	871024	UnaryOperationExpression	"! memcmp ( f + i , d + i , min )"		870859	0					
ANR	871025	UnaryOperator	!		870859	0					
ANR	871026	CallExpression	"memcmp ( f + i , d + i , min )"		870859	1					
ANR	871027	Callee	memcmp		870859	0					
ANR	871028	Identifier	memcmp		870859	0					
ANR	871029	ArgumentList	f + i		870859	1					
ANR	871030	Argument	f + i		870859	0					
ANR	871031	AdditiveExpression	f + i		870859	0		+			
ANR	871032	Identifier	f		870859	0					
ANR	871033	Identifier	i		870859	1					
ANR	871034	Argument	d + i		870859	1					
ANR	871035	AdditiveExpression	d + i		870859	0		+			
ANR	871036	Identifier	d		870859	0					
ANR	871037	Identifier	i		870859	1					
ANR	871038	Argument	min		870859	2					
ANR	871039	Identifier	min		870859	0					
ANR	871040	CompoundStatement		24:35:499:499	870859	1					
ANR	871041	ExpressionStatement	"r_cons_printf ( ""  "" )"	228:3:6592:6612	870859	0	True				
ANR	871042	CallExpression	"r_cons_printf ( ""  "" )"		870859	0					
ANR	871043	Callee	r_cons_printf		870859	0					
ANR	871044	Identifier	r_cons_printf		870859	0					
ANR	871045	ArgumentList	"""  """		870859	1					
ANR	871046	Argument	"""  """		870859	0					
ANR	871047	PrimaryExpression	"""  """		870859	0					
ANR	871048	ExpressionStatement	"r_print_hexdiff ( core -> print , of + i , f + i , of + i , f + i , min , 0 )"	229:3:6617:6684	870859	1	True				
ANR	871049	CallExpression	"r_print_hexdiff ( core -> print , of + i , f + i , of + i , f + i , min , 0 )"		870859	0					
ANR	871050	Callee	r_print_hexdiff		870859	0					
ANR	871051	Identifier	r_print_hexdiff		870859	0					
ANR	871052	ArgumentList	core -> print		870859	1					
ANR	871053	Argument	core -> print		870859	0					
ANR	871054	PtrMemberAccess	core -> print		870859	0					
ANR	871055	Identifier	core		870859	0					
ANR	871056	Identifier	print		870859	1					
ANR	871057	Argument	of + i		870859	1					
ANR	871058	AdditiveExpression	of + i		870859	0		+			
ANR	871059	Identifier	of		870859	0					
ANR	871060	Identifier	i		870859	1					
ANR	871061	Argument	f + i		870859	2					
ANR	871062	AdditiveExpression	f + i		870859	0		+			
ANR	871063	Identifier	f		870859	0					
ANR	871064	Identifier	i		870859	1					
ANR	871065	Argument	of + i		870859	3					
ANR	871066	AdditiveExpression	of + i		870859	0		+			
ANR	871067	Identifier	of		870859	0					
ANR	871068	Identifier	i		870859	1					
ANR	871069	Argument	f + i		870859	4					
ANR	871070	AdditiveExpression	f + i		870859	0		+			
ANR	871071	Identifier	f		870859	0					
ANR	871072	Identifier	i		870859	1					
ANR	871073	Argument	min		870859	5					
ANR	871074	Identifier	min		870859	0					
ANR	871075	Argument	0		870859	6					
ANR	871076	PrimaryExpression	0		870859	0					
ANR	871077	ElseStatement	else		870859	0					
ANR	871078	CompoundStatement		27:9:607:607	870859	0					
ANR	871079	ExpressionStatement	"r_cons_printf ( ""- "" )"	231:3:6700:6720	870859	0	True				
ANR	871080	CallExpression	"r_cons_printf ( ""- "" )"		870859	0					
ANR	871081	Callee	r_cons_printf		870859	0					
ANR	871082	Identifier	r_cons_printf		870859	0					
ANR	871083	ArgumentList	"""- """		870859	1					
ANR	871084	Argument	"""- """		870859	0					
ANR	871085	PrimaryExpression	"""- """		870859	0					
ANR	871086	ExpressionStatement	"r_print_hexdiff ( core -> print , of + i , f + i , od + i , d + i , min , 0 )"	232:3:6725:6792	870859	1	True				
ANR	871087	CallExpression	"r_print_hexdiff ( core -> print , of + i , f + i , od + i , d + i , min , 0 )"		870859	0					
ANR	871088	Callee	r_print_hexdiff		870859	0					
ANR	871089	Identifier	r_print_hexdiff		870859	0					
ANR	871090	ArgumentList	core -> print		870859	1					
ANR	871091	Argument	core -> print		870859	0					
ANR	871092	PtrMemberAccess	core -> print		870859	0					
ANR	871093	Identifier	core		870859	0					
ANR	871094	Identifier	print		870859	1					
ANR	871095	Argument	of + i		870859	1					
ANR	871096	AdditiveExpression	of + i		870859	0		+			
ANR	871097	Identifier	of		870859	0					
ANR	871098	Identifier	i		870859	1					
ANR	871099	Argument	f + i		870859	2					
ANR	871100	AdditiveExpression	f + i		870859	0		+			
ANR	871101	Identifier	f		870859	0					
ANR	871102	Identifier	i		870859	1					
ANR	871103	Argument	od + i		870859	3					
ANR	871104	AdditiveExpression	od + i		870859	0		+			
ANR	871105	Identifier	od		870859	0					
ANR	871106	Identifier	i		870859	1					
ANR	871107	Argument	d + i		870859	4					
ANR	871108	AdditiveExpression	d + i		870859	0		+			
ANR	871109	Identifier	d		870859	0					
ANR	871110	Identifier	i		870859	1					
ANR	871111	Argument	min		870859	5					
ANR	871112	Identifier	min		870859	0					
ANR	871113	Argument	0		870859	6					
ANR	871114	PrimaryExpression	0		870859	0					
ANR	871115	ExpressionStatement	"r_cons_printf ( ""+ "" )"	233:3:6797:6817	870859	2	True				
ANR	871116	CallExpression	"r_cons_printf ( ""+ "" )"		870859	0					
ANR	871117	Callee	r_cons_printf		870859	0					
ANR	871118	Identifier	r_cons_printf		870859	0					
ANR	871119	ArgumentList	"""+ """		870859	1					
ANR	871120	Argument	"""+ """		870859	0					
ANR	871121	PrimaryExpression	"""+ """		870859	0					
ANR	871122	ExpressionStatement	"r_print_hexdiff ( core -> print , od + i , d + i , of + i , f + i , min , 0 )"	234:3:6822:6889	870859	3	True				
ANR	871123	CallExpression	"r_print_hexdiff ( core -> print , od + i , d + i , of + i , f + i , min , 0 )"		870859	0					
ANR	871124	Callee	r_print_hexdiff		870859	0					
ANR	871125	Identifier	r_print_hexdiff		870859	0					
ANR	871126	ArgumentList	core -> print		870859	1					
ANR	871127	Argument	core -> print		870859	0					
ANR	871128	PtrMemberAccess	core -> print		870859	0					
ANR	871129	Identifier	core		870859	0					
ANR	871130	Identifier	print		870859	1					
ANR	871131	Argument	od + i		870859	1					
ANR	871132	AdditiveExpression	od + i		870859	0		+			
ANR	871133	Identifier	od		870859	0					
ANR	871134	Identifier	i		870859	1					
ANR	871135	Argument	d + i		870859	2					
ANR	871136	AdditiveExpression	d + i		870859	0		+			
ANR	871137	Identifier	d		870859	0					
ANR	871138	Identifier	i		870859	1					
ANR	871139	Argument	of + i		870859	3					
ANR	871140	AdditiveExpression	of + i		870859	0		+			
ANR	871141	Identifier	of		870859	0					
ANR	871142	Identifier	i		870859	1					
ANR	871143	Argument	f + i		870859	4					
ANR	871144	AdditiveExpression	f + i		870859	0		+			
ANR	871145	Identifier	f		870859	0					
ANR	871146	Identifier	i		870859	1					
ANR	871147	Argument	min		870859	5					
ANR	871148	Identifier	min		870859	0					
ANR	871149	Argument	0		870859	6					
ANR	871150	PrimaryExpression	0		870859	0					
ANR	871151	IfStatement	if ( headers )		870859	12					
ANR	871152	Condition	headers	237:5:6903:6909	870859	0	True				
ANR	871153	Identifier	headers		870859	0					
ANR	871154	CompoundStatement		34:14:824:824	870859	1					
ANR	871155	ExpressionStatement	"B_SET ( core -> print -> flags , R_PRINT_FLAGS_HEADER )"	238:2:6916:6964	870859	0	True				
ANR	871156	CallExpression	"B_SET ( core -> print -> flags , R_PRINT_FLAGS_HEADER )"		870859	0					
ANR	871157	Callee	B_SET		870859	0					
ANR	871158	Identifier	B_SET		870859	0					
ANR	871159	ArgumentList	core -> print -> flags		870859	1					
ANR	871160	Argument	core -> print -> flags		870859	0					
ANR	871161	PtrMemberAccess	core -> print -> flags		870859	0					
ANR	871162	PtrMemberAccess	core -> print		870859	0					
ANR	871163	Identifier	core		870859	0					
ANR	871164	Identifier	print		870859	1					
ANR	871165	Identifier	flags		870859	1					
ANR	871166	Argument	R_PRINT_FLAGS_HEADER		870859	1					
ANR	871167	Identifier	R_PRINT_FLAGS_HEADER		870859	0					
ANR	871168	ReturnStatement	return true ;	240:1:6970:6981	870859	13	True				
ANR	871169	Identifier	true		870859	0					
ANR	871170	ReturnType	static int		870859	1					
ANR	871171	Identifier	radare_compare_unified		870859	2					
ANR	871172	ParameterList	"RCore * core , ut64 of , ut64 od , int len"		870859	3					
ANR	871173	Parameter	RCore * core	204:34:6047:6057	870859	0	True				
ANR	871174	ParameterType	RCore *		870859	0					
ANR	871175	Identifier	core		870859	1					
ANR	871176	Parameter	ut64 of	204:47:6060:6066	870859	1	True				
ANR	871177	ParameterType	ut64		870859	0					
ANR	871178	Identifier	of		870859	1					
ANR	871179	Parameter	ut64 od	204:56:6069:6075	870859	2	True				
ANR	871180	ParameterType	ut64		870859	0					
ANR	871181	Identifier	od		870859	1					
ANR	871182	Parameter	int len	204:65:6078:6084	870859	3	True				
ANR	871183	ParameterType	int		870859	0					
ANR	871184	Identifier	len		870859	1					
ANR	871185	CFGEntryNode	ENTRY		870859		True				
ANR	871186	CFGExitNode	EXIT		870859		True				
ANR	871187	Symbol	malloc		870859						
ANR	871188	Symbol	headers		870859						
ANR	871189	Symbol	d		870859						
ANR	871190	Symbol	f		870859						
ANR	871191	Symbol	B_IS_SET		870859						
ANR	871192	Symbol	false		870859						
ANR	871193	Symbol	* core		870859						
ANR	871194	Symbol	i		870859						
ANR	871195	Symbol	R_MIN		870859						
ANR	871196	Symbol	core		870859						
ANR	871197	Symbol	* core -> print		870859						
ANR	871198	Symbol	min		870859						
ANR	871199	Symbol	memcmp		870859						
ANR	871200	Symbol	len		870859						
ANR	871201	Symbol	core -> io		870859						
ANR	871202	Symbol	od		870859						
ANR	871203	Symbol	of		870859						
ANR	871204	Symbol	true		870859						
ANR	871205	Symbol	core -> print		870859						
ANR	871206	Symbol	* * core		870859						
ANR	871207	Symbol	core -> print -> flags		870859						
ANR	871208	Symbol	inc		870859						
ANR	871209	Symbol	R_PRINT_FLAGS_HEADER		870859						
ANR	871210	Function	radare_compare	243:0:6986:7662							
ANR	871211	FunctionDef	"radare_compare (RCore * core , const ut8 * f , const ut8 * d , int len , int mode)"		871210	0					
ANR	871212	CompoundStatement		243:86:7072:7662	871210	0					
ANR	871213	IdentifierDeclStatement	"int i , eq = 0 ;"	244:1:7075:7088	871210	0	True				
ANR	871214	IdentifierDecl	i		871210	0					
ANR	871215	IdentifierDeclType	int		871210	0					
ANR	871216	Identifier	i		871210	1					
ANR	871217	IdentifierDecl	eq = 0		871210	1					
ANR	871218	IdentifierDeclType	int		871210	0					
ANR	871219	Identifier	eq		871210	1					
ANR	871220	AssignmentExpression	eq = 0		871210	2		=			
ANR	871221	Identifier	eq		871210	0					
ANR	871222	PrimaryExpression	0		871210	1					
ANR	871223	IfStatement	if ( len < 1 )		871210	1					
ANR	871224	Condition	len < 1	245:5:7095:7101	871210	0	True				
ANR	871225	RelationalExpression	len < 1		871210	0		<			
ANR	871226	Identifier	len		871210	0					
ANR	871227	PrimaryExpression	1		871210	1					
ANR	871228	CompoundStatement		3:14:31:31	871210	1					
ANR	871229	ReturnStatement	return 0 ;	246:2:7108:7116	871210	0	True				
ANR	871230	PrimaryExpression	0		871210	0					
ANR	871231	ForStatement	for ( i = 0 ; i < len ; i ++ )		871210	2					
ANR	871232	ForInit	i = 0 ;	248:6:7127:7132	871210	0	True				
ANR	871233	AssignmentExpression	i = 0		871210	0		=			
ANR	871234	Identifier	i		871210	0					
ANR	871235	PrimaryExpression	0		871210	1					
ANR	871236	Condition	i < len	248:13:7134:7140	871210	1	True				
ANR	871237	RelationalExpression	i < len		871210	0		<			
ANR	871238	Identifier	i		871210	0					
ANR	871239	Identifier	len		871210	1					
ANR	871240	PostIncDecOperationExpression	i ++	248:22:7143:7145	871210	2	True				
ANR	871241	Identifier	i		871210	0					
ANR	871242	IncDec	++		871210	1					
ANR	871243	CompoundStatement		6:27:75:75	871210	3					
ANR	871244	IfStatement	if ( f [ i ] == d [ i ] )		871210	0					
ANR	871245	Condition	f [ i ] == d [ i ]	249:6:7156:7167	871210	0	True				
ANR	871246	EqualityExpression	f [ i ] == d [ i ]		871210	0		==			
ANR	871247	ArrayIndexing	f [ i ]		871210	0					
ANR	871248	Identifier	f		871210	0					
ANR	871249	Identifier	i		871210	1					
ANR	871250	ArrayIndexing	d [ i ]		871210	1					
ANR	871251	Identifier	d		871210	0					
ANR	871252	Identifier	i		871210	1					
ANR	871253	CompoundStatement		7:20:97:97	871210	1					
ANR	871254	ExpressionStatement	eq ++	250:3:7175:7179	871210	0	True				
ANR	871255	PostIncDecOperationExpression	eq ++		871210	0					
ANR	871256	Identifier	eq		871210	0					
ANR	871257	IncDec	++		871210	1					
ANR	871258	ContinueStatement	continue ;	251:3:7184:7192	871210	1	True				
ANR	871259	SwitchStatement	switch ( mode )		871210	1					
ANR	871260	Condition	mode	253:10:7208:7211	871210	0	True				
ANR	871261	Identifier	mode		871210	0					
ANR	871262	CompoundStatement		12:2:143:143	871210	1					
ANR	871263	Label	case 0 :	255:2:7220:7226	871210	0	True				
ANR	871264	Statement	r_cons_printf	256:3:7231:7243	871210	1	True				
ANR	871265	Statement	(	256:17:7245:7245	871210	2	True				
ANR	871266	Statement	"""0x%08"""	256:18:7246:7252	871210	3	True				
ANR	871267	Statement	PFMT64x	256:25:7253:7259	871210	4	True				
ANR	871268	Statement	""" (byte=%.2d)   %02x '%c'  ->  %02x '%c'\\n"""	256:33:7261:7303	871210	5	True				
ANR	871269	Statement	","	256:76:7304:7304	871210	6	True				
ANR	871270	Statement	core	257:4:7310:7313	871210	7	True				
ANR	871271	Statement	->	257:8:7314:7315	871210	8	True				
ANR	871272	Statement	offset	257:10:7316:7321	871210	9	True				
ANR	871273	Statement	+	257:17:7323:7323	871210	10	True				
ANR	871274	Statement	i	257:19:7325:7325	871210	11	True				
ANR	871275	Statement	","	257:20:7326:7326	871210	12	True				
ANR	871276	Statement	i	257:22:7328:7328	871210	13	True				
ANR	871277	Statement	+	257:24:7330:7330	871210	14	True				
ANR	871278	Statement	1	257:26:7332:7332	871210	15	True				
ANR	871279	Statement	","	257:27:7333:7333	871210	16	True				
ANR	871280	Statement	f	258:4:7339:7339	871210	17	True				
ANR	871281	Statement	[	258:5:7340:7340	871210	18	True				
ANR	871282	Statement	i	258:6:7341:7341	871210	19	True				
ANR	871283	Statement	]	258:7:7342:7342	871210	20	True				
ANR	871284	Statement	","	258:8:7343:7343	871210	21	True				
ANR	871285	Statement	(	258:10:7345:7345	871210	22	True				
ANR	871286	Statement	IS_PRINTABLE	258:11:7346:7357	871210	23	True				
ANR	871287	Statement	(	258:24:7359:7359	871210	24	True				
ANR	871288	Statement	f	258:25:7360:7360	871210	25	True				
ANR	871289	Statement	[	258:26:7361:7361	871210	26	True				
ANR	871290	Statement	i	258:27:7362:7362	871210	27	True				
ANR	871291	Statement	]	258:28:7363:7363	871210	28	True				
ANR	871292	Statement	)	258:29:7364:7364	871210	29	True				
ANR	871293	Statement	)	258:30:7365:7365	871210	30	True				
ANR	871294	Statement	?	258:31:7366:7366	871210	31	True				
ANR	871295	Statement	f	258:33:7368:7368	871210	32	True				
ANR	871296	Statement	[	258:34:7369:7369	871210	33	True				
ANR	871297	Statement	i	258:35:7370:7370	871210	34	True				
ANR	871298	Statement	]	258:36:7371:7371	871210	35	True				
ANR	871299	Statement	:	258:37:7372:7372	871210	36	True				
ANR	871300	Statement	' '	258:39:7374:7376	871210	37	True				
ANR	871301	Statement	","	258:42:7377:7377	871210	38	True				
ANR	871302	Statement	d	259:4:7383:7383	871210	39	True				
ANR	871303	Statement	[	259:5:7384:7384	871210	40	True				
ANR	871304	Statement	i	259:6:7385:7385	871210	41	True				
ANR	871305	Statement	]	259:7:7386:7386	871210	42	True				
ANR	871306	Statement	","	259:8:7387:7387	871210	43	True				
ANR	871307	Statement	(	259:10:7389:7389	871210	44	True				
ANR	871308	Statement	IS_PRINTABLE	259:11:7390:7401	871210	45	True				
ANR	871309	Statement	(	259:24:7403:7403	871210	46	True				
ANR	871310	Statement	d	259:25:7404:7404	871210	47	True				
ANR	871311	Statement	[	259:26:7405:7405	871210	48	True				
ANR	871312	Statement	i	259:27:7406:7406	871210	49	True				
ANR	871313	Statement	]	259:28:7407:7407	871210	50	True				
ANR	871314	Statement	)	259:29:7408:7408	871210	51	True				
ANR	871315	Statement	)	259:30:7409:7409	871210	52	True				
ANR	871316	Statement	?	259:31:7410:7410	871210	53	True				
ANR	871317	Statement	d	259:33:7412:7412	871210	54	True				
ANR	871318	Statement	[	259:34:7413:7413	871210	55	True				
ANR	871319	Statement	i	259:35:7414:7414	871210	56	True				
ANR	871320	Statement	]	259:36:7415:7415	871210	57	True				
ANR	871321	Statement	:	259:37:7416:7416	871210	58	True				
ANR	871322	Statement	' '	259:39:7418:7420	871210	59	True				
ANR	871323	Statement	)	259:42:7421:7421	871210	60	True				
ANR	871324	ExpressionStatement		259:43:7422:7422	871210	61	True				
ANR	871325	BreakStatement	break ;	260:3:7427:7432	871210	62	True				
ANR	871326	Label	case '*' :	261:2:7436:7444	871210	63	True				
ANR	871327	Statement	r_cons_printf	262:3:7449:7461	871210	64	True				
ANR	871328	Statement	(	262:17:7463:7463	871210	65	True				
ANR	871329	Statement	"""wx %02x @ 0x%08"""	262:18:7464:7480	871210	66	True				
ANR	871330	Statement	PFMT64x	262:35:7481:7487	871210	67	True				
ANR	871331	Statement	"""\\n"""	262:43:7489:7492	871210	68	True				
ANR	871332	Statement	","	262:47:7493:7493	871210	69	True				
ANR	871333	Statement	d	263:4:7499:7499	871210	70	True				
ANR	871334	Statement	[	263:5:7500:7500	871210	71	True				
ANR	871335	Statement	i	263:6:7501:7501	871210	72	True				
ANR	871336	Statement	]	263:7:7502:7502	871210	73	True				
ANR	871337	Statement	","	263:8:7503:7503	871210	74	True				
ANR	871338	Statement	core	264:4:7509:7512	871210	75	True				
ANR	871339	Statement	->	264:8:7513:7514	871210	76	True				
ANR	871340	Statement	offset	264:10:7515:7520	871210	77	True				
ANR	871341	Statement	+	264:17:7522:7522	871210	78	True				
ANR	871342	Statement	i	264:19:7524:7524	871210	79	True				
ANR	871343	Statement	)	264:20:7525:7525	871210	80	True				
ANR	871344	ExpressionStatement		264:21:7526:7526	871210	81	True				
ANR	871345	BreakStatement	break ;	265:3:7531:7536	871210	82	True				
ANR	871346	IfStatement	if ( mode == 0 )		871210	3					
ANR	871347	Condition	mode == 0	269:5:7551:7559	871210	0	True				
ANR	871348	EqualityExpression	mode == 0		871210	0		==			
ANR	871349	Identifier	mode		871210	0					
ANR	871350	PrimaryExpression	0		871210	1					
ANR	871351	CompoundStatement		27:16:489:489	871210	1					
ANR	871352	ExpressionStatement	"eprintf ( ""Compare %d/%d equal bytes (%d%%)\\n"" , eq , len , ( eq / len ) * 100 )"	270:2:7566:7639	871210	0	True				
ANR	871353	CallExpression	"eprintf ( ""Compare %d/%d equal bytes (%d%%)\\n"" , eq , len , ( eq / len ) * 100 )"		871210	0					
ANR	871354	Callee	eprintf		871210	0					
ANR	871355	Identifier	eprintf		871210	0					
ANR	871356	ArgumentList	"""Compare %d/%d equal bytes (%d%%)\\n"""		871210	1					
ANR	871357	Argument	"""Compare %d/%d equal bytes (%d%%)\\n"""		871210	0					
ANR	871358	PrimaryExpression	"""Compare %d/%d equal bytes (%d%%)\\n"""		871210	0					
ANR	871359	Argument	eq		871210	1					
ANR	871360	Identifier	eq		871210	0					
ANR	871361	Argument	len		871210	2					
ANR	871362	Identifier	len		871210	0					
ANR	871363	Argument	( eq / len ) * 100		871210	3					
ANR	871364	MultiplicativeExpression	( eq / len ) * 100		871210	0		*			
ANR	871365	MultiplicativeExpression	eq / len		871210	0		/			
ANR	871366	Identifier	eq		871210	0					
ANR	871367	Identifier	len		871210	1					
ANR	871368	PrimaryExpression	100		871210	1					
ANR	871369	ReturnStatement	return len - eq ;	272:1:7645:7660	871210	4	True				
ANR	871370	AdditiveExpression	len - eq		871210	0		-			
ANR	871371	Identifier	len		871210	0					
ANR	871372	Identifier	eq		871210	1					
ANR	871373	ReturnType	static int		871210	1					
ANR	871374	Identifier	radare_compare		871210	2					
ANR	871375	ParameterList	"RCore * core , const ut8 * f , const ut8 * d , int len , int mode"		871210	3					
ANR	871376	Parameter	RCore * core	243:26:7012:7022	871210	0	True				
ANR	871377	ParameterType	RCore *		871210	0					
ANR	871378	Identifier	core		871210	1					
ANR	871379	Parameter	const ut8 * f	243:39:7025:7036	871210	1	True				
ANR	871380	ParameterType	const ut8 *		871210	0					
ANR	871381	Identifier	f		871210	1					
ANR	871382	Parameter	const ut8 * d	243:53:7039:7050	871210	2	True				
ANR	871383	ParameterType	const ut8 *		871210	0					
ANR	871384	Identifier	d		871210	1					
ANR	871385	Parameter	int len	243:67:7053:7059	871210	3	True				
ANR	871386	ParameterType	int		871210	0					
ANR	871387	Identifier	len		871210	1					
ANR	871388	Parameter	int mode	243:76:7062:7069	871210	4	True				
ANR	871389	ParameterType	int		871210	0					
ANR	871390	Identifier	mode		871210	1					
ANR	871391	CFGEntryNode	ENTRY		871210		True				
ANR	871392	CFGExitNode	EXIT		871210		True				
ANR	871393	Symbol	mode		871210						
ANR	871394	Symbol	* f		871210						
ANR	871395	Symbol	core		871210						
ANR	871396	Symbol	* i		871210						
ANR	871397	Symbol	d		871210						
ANR	871398	Symbol	len		871210						
ANR	871399	Symbol	f		871210						
ANR	871400	Symbol	i		871210						
ANR	871401	Symbol	eq		871210						
ANR	871402	Symbol	* d		871210						
ANR	871403	Function	cmd_cmp_watcher	275:0:7665:9021							
ANR	871404	FunctionDef	"cmd_cmp_watcher (RCore * core , const char * input)"		871403	0					
ANR	871405	CompoundStatement		275:60:7725:9021	871403	0					
ANR	871406	IdentifierDeclStatement	"char * p , * q , * r = NULL ;"	276:1:7728:7750	871403	0	True				
ANR	871407	IdentifierDecl	* p		871403	0					
ANR	871408	IdentifierDeclType	char *		871403	0					
ANR	871409	Identifier	p		871403	1					
ANR	871410	IdentifierDecl	* q		871403	1					
ANR	871411	IdentifierDeclType	char *		871403	0					
ANR	871412	Identifier	q		871403	1					
ANR	871413	IdentifierDecl	* r = NULL		871403	2					
ANR	871414	IdentifierDeclType	char *		871403	0					
ANR	871415	Identifier	r		871403	1					
ANR	871416	AssignmentExpression	* r = NULL		871403	2		=			
ANR	871417	Identifier	NULL		871403	0					
ANR	871418	Identifier	NULL		871403	1					
ANR	871419	IdentifierDeclStatement	int size = 0 ;	277:1:7753:7765	871403	1	True				
ANR	871420	IdentifierDecl	size = 0		871403	0					
ANR	871421	IdentifierDeclType	int		871403	0					
ANR	871422	Identifier	size		871403	1					
ANR	871423	AssignmentExpression	size = 0		871403	2		=			
ANR	871424	Identifier	size		871403	0					
ANR	871425	PrimaryExpression	0		871403	1					
ANR	871426	IdentifierDeclStatement	ut64 addr = 0 ;	278:1:7768:7781	871403	2	True				
ANR	871427	IdentifierDecl	addr = 0		871403	0					
ANR	871428	IdentifierDeclType	ut64		871403	0					
ANR	871429	Identifier	addr		871403	1					
ANR	871430	AssignmentExpression	addr = 0		871403	2		=			
ANR	871431	Identifier	addr		871403	0					
ANR	871432	PrimaryExpression	0		871403	1					
ANR	871433	SwitchStatement	switch ( * input )		871403	3					
ANR	871434	Condition	* input	279:9:7792:7797	871403	0	True				
ANR	871435	UnaryOperationExpression	* input		871403	0					
ANR	871436	UnaryOperator	*		871403	0					
ANR	871437	Identifier	input		871403	1					
ANR	871438	CompoundStatement		5:17:74:74	871403	1					
ANR	871439	Label	case ' ' :	280:1:7803:7811	871403	0	True				
ANR	871440	ExpressionStatement	p = strdup ( input + 1 )	281:2:7815:7837	871403	1	True				
ANR	871441	AssignmentExpression	p = strdup ( input + 1 )		871403	0		=			
ANR	871442	Identifier	p		871403	0					
ANR	871443	CallExpression	strdup ( input + 1 )		871403	1					
ANR	871444	Callee	strdup		871403	0					
ANR	871445	Identifier	strdup		871403	0					
ANR	871446	ArgumentList	input + 1		871403	1					
ANR	871447	Argument	input + 1		871403	0					
ANR	871448	AdditiveExpression	input + 1		871403	0		+			
ANR	871449	Identifier	input		871403	0					
ANR	871450	PrimaryExpression	1		871403	1					
ANR	871451	ExpressionStatement	"q = strchr ( p , ' ' )"	282:2:7841:7860	871403	2	True				
ANR	871452	AssignmentExpression	"q = strchr ( p , ' ' )"		871403	0		=			
ANR	871453	Identifier	q		871403	0					
ANR	871454	CallExpression	"strchr ( p , ' ' )"		871403	1					
ANR	871455	Callee	strchr		871403	0					
ANR	871456	Identifier	strchr		871403	0					
ANR	871457	ArgumentList	p		871403	1					
ANR	871458	Argument	p		871403	0					
ANR	871459	Identifier	p		871403	0					
ANR	871460	Argument	' '		871403	1					
ANR	871461	PrimaryExpression	' '		871403	0					
ANR	871462	IfStatement	if ( q )		871403	3					
ANR	871463	Condition	q	283:6:7868:7868	871403	0	True				
ANR	871464	Identifier	q		871403	0					
ANR	871465	CompoundStatement		9:9:145:145	871403	1					
ANR	871466	ExpressionStatement	* q ++ = 0	284:3:7876:7884	871403	0	True				
ANR	871467	AssignmentExpression	* q ++ = 0		871403	0		=			
ANR	871468	UnaryOperationExpression	* q ++		871403	0					
ANR	871469	UnaryOperator	*		871403	0					
ANR	871470	PostIncDecOperationExpression	q ++		871403	1					
ANR	871471	Identifier	q		871403	0					
ANR	871472	IncDec	++		871403	1					
ANR	871473	PrimaryExpression	0		871403	1					
ANR	871474	ExpressionStatement	"addr = r_num_math ( core -> num , p )"	285:3:7889:7921	871403	1	True				
ANR	871475	AssignmentExpression	"addr = r_num_math ( core -> num , p )"		871403	0		=			
ANR	871476	Identifier	addr		871403	0					
ANR	871477	CallExpression	"r_num_math ( core -> num , p )"		871403	1					
ANR	871478	Callee	r_num_math		871403	0					
ANR	871479	Identifier	r_num_math		871403	0					
ANR	871480	ArgumentList	core -> num		871403	1					
ANR	871481	Argument	core -> num		871403	0					
ANR	871482	PtrMemberAccess	core -> num		871403	0					
ANR	871483	Identifier	core		871403	0					
ANR	871484	Identifier	num		871403	1					
ANR	871485	Argument	p		871403	1					
ANR	871486	Identifier	p		871403	0					
ANR	871487	ExpressionStatement	"r = strchr ( q , ' ' )"	286:3:7926:7945	871403	2	True				
ANR	871488	AssignmentExpression	"r = strchr ( q , ' ' )"		871403	0		=			
ANR	871489	Identifier	r		871403	0					
ANR	871490	CallExpression	"strchr ( q , ' ' )"		871403	1					
ANR	871491	Callee	strchr		871403	0					
ANR	871492	Identifier	strchr		871403	0					
ANR	871493	ArgumentList	q		871403	1					
ANR	871494	Argument	q		871403	0					
ANR	871495	Identifier	q		871403	0					
ANR	871496	Argument	' '		871403	1					
ANR	871497	PrimaryExpression	' '		871403	0					
ANR	871498	IfStatement	if ( r )		871403	3					
ANR	871499	Condition	r	287:7:7954:7954	871403	0	True				
ANR	871500	Identifier	r		871403	0					
ANR	871501	CompoundStatement		13:10:231:231	871403	1					
ANR	871502	ExpressionStatement	* r ++ = 0	288:4:7963:7971	871403	0	True				
ANR	871503	AssignmentExpression	* r ++ = 0		871403	0		=			
ANR	871504	UnaryOperationExpression	* r ++		871403	0					
ANR	871505	UnaryOperator	*		871403	0					
ANR	871506	PostIncDecOperationExpression	r ++		871403	1					
ANR	871507	Identifier	r		871403	0					
ANR	871508	IncDec	++		871403	1					
ANR	871509	PrimaryExpression	0		871403	1					
ANR	871510	ExpressionStatement	size = atoi ( q )	289:4:7977:7992	871403	1	True				
ANR	871511	AssignmentExpression	size = atoi ( q )		871403	0		=			
ANR	871512	Identifier	size		871403	0					
ANR	871513	CallExpression	atoi ( q )		871403	1					
ANR	871514	Callee	atoi		871403	0					
ANR	871515	Identifier	atoi		871403	0					
ANR	871516	ArgumentList	q		871403	1					
ANR	871517	Argument	q		871403	0					
ANR	871518	Identifier	q		871403	0					
ANR	871519	ExpressionStatement	"r_core_cmpwatch_add ( core , addr , size , r )"	291:3:8002:8043	871403	4	True				
ANR	871520	CallExpression	"r_core_cmpwatch_add ( core , addr , size , r )"		871403	0					
ANR	871521	Callee	r_core_cmpwatch_add		871403	0					
ANR	871522	Identifier	r_core_cmpwatch_add		871403	0					
ANR	871523	ArgumentList	core		871403	1					
ANR	871524	Argument	core		871403	0					
ANR	871525	Identifier	core		871403	0					
ANR	871526	Argument	addr		871403	1					
ANR	871527	Identifier	addr		871403	0					
ANR	871528	Argument	size		871403	2					
ANR	871529	Identifier	size		871403	0					
ANR	871530	Argument	r		871403	3					
ANR	871531	Identifier	r		871403	0					
ANR	871532	ElseStatement	else		871403	0					
ANR	871533	CompoundStatement		19:9:383:383	871403	0					
ANR	871534	ExpressionStatement	"eprintf ( ""Missing parameters\\n"" )"	294:3:8114:8146	871403	0	True				
ANR	871535	CallExpression	"eprintf ( ""Missing parameters\\n"" )"		871403	0					
ANR	871536	Callee	eprintf		871403	0					
ANR	871537	Identifier	eprintf		871403	0					
ANR	871538	ArgumentList	"""Missing parameters\\n"""		871403	1					
ANR	871539	Argument	"""Missing parameters\\n"""		871403	0					
ANR	871540	PrimaryExpression	"""Missing parameters\\n"""		871403	0					
ANR	871541	ExpressionStatement	free ( p )	296:2:8154:8162	871403	4	True				
ANR	871542	CallExpression	free ( p )		871403	0					
ANR	871543	Callee	free		871403	0					
ANR	871544	Identifier	free		871403	0					
ANR	871545	ArgumentList	p		871403	1					
ANR	871546	Argument	p		871403	0					
ANR	871547	Identifier	p		871403	0					
ANR	871548	BreakStatement	break ;	297:2:8166:8171	871403	5	True				
ANR	871549	Label	case 'r' :	298:1:8174:8182	871403	6	True				
ANR	871550	ExpressionStatement	"addr = input [ 1 ] ? r_num_math ( core -> num , input + 1 ) : UT64_MAX"	299:2:8186:8246	871403	7	True				
ANR	871551	AssignmentExpression	"addr = input [ 1 ] ? r_num_math ( core -> num , input + 1 ) : UT64_MAX"		871403	0		=			
ANR	871552	Identifier	addr		871403	0					
ANR	871553	ConditionalExpression	"input [ 1 ] ? r_num_math ( core -> num , input + 1 ) : UT64_MAX"		871403	1					
ANR	871554	Condition	input [ 1 ]		871403	0					
ANR	871555	ArrayIndexing	input [ 1 ]		871403	0					
ANR	871556	Identifier	input		871403	0					
ANR	871557	PrimaryExpression	1		871403	1					
ANR	871558	CallExpression	"r_num_math ( core -> num , input + 1 )"		871403	1					
ANR	871559	Callee	r_num_math		871403	0					
ANR	871560	Identifier	r_num_math		871403	0					
ANR	871561	ArgumentList	core -> num		871403	1					
ANR	871562	Argument	core -> num		871403	0					
ANR	871563	PtrMemberAccess	core -> num		871403	0					
ANR	871564	Identifier	core		871403	0					
ANR	871565	Identifier	num		871403	1					
ANR	871566	Argument	input + 1		871403	1					
ANR	871567	AdditiveExpression	input + 1		871403	0		+			
ANR	871568	Identifier	input		871403	0					
ANR	871569	PrimaryExpression	1		871403	1					
ANR	871570	Identifier	UT64_MAX		871403	2					
ANR	871571	ExpressionStatement	"r_core_cmpwatch_revert ( core , addr )"	300:2:8250:8285	871403	8	True				
ANR	871572	CallExpression	"r_core_cmpwatch_revert ( core , addr )"		871403	0					
ANR	871573	Callee	r_core_cmpwatch_revert		871403	0					
ANR	871574	Identifier	r_core_cmpwatch_revert		871403	0					
ANR	871575	ArgumentList	core		871403	1					
ANR	871576	Argument	core		871403	0					
ANR	871577	Identifier	core		871403	0					
ANR	871578	Argument	addr		871403	1					
ANR	871579	Identifier	addr		871403	0					
ANR	871580	BreakStatement	break ;	301:2:8289:8294	871403	9	True				
ANR	871581	Label	case 'u' :	302:1:8297:8305	871403	10	True				
ANR	871582	ExpressionStatement	"addr = input [ 1 ] ? r_num_math ( core -> num , input + 1 ) : UT64_MAX"	303:2:8309:8369	871403	11	True				
ANR	871583	AssignmentExpression	"addr = input [ 1 ] ? r_num_math ( core -> num , input + 1 ) : UT64_MAX"		871403	0		=			
ANR	871584	Identifier	addr		871403	0					
ANR	871585	ConditionalExpression	"input [ 1 ] ? r_num_math ( core -> num , input + 1 ) : UT64_MAX"		871403	1					
ANR	871586	Condition	input [ 1 ]		871403	0					
ANR	871587	ArrayIndexing	input [ 1 ]		871403	0					
ANR	871588	Identifier	input		871403	0					
ANR	871589	PrimaryExpression	1		871403	1					
ANR	871590	CallExpression	"r_num_math ( core -> num , input + 1 )"		871403	1					
ANR	871591	Callee	r_num_math		871403	0					
ANR	871592	Identifier	r_num_math		871403	0					
ANR	871593	ArgumentList	core -> num		871403	1					
ANR	871594	Argument	core -> num		871403	0					
ANR	871595	PtrMemberAccess	core -> num		871403	0					
ANR	871596	Identifier	core		871403	0					
ANR	871597	Identifier	num		871403	1					
ANR	871598	Argument	input + 1		871403	1					
ANR	871599	AdditiveExpression	input + 1		871403	0		+			
ANR	871600	Identifier	input		871403	0					
ANR	871601	PrimaryExpression	1		871403	1					
ANR	871602	Identifier	UT64_MAX		871403	2					
ANR	871603	ExpressionStatement	"r_core_cmpwatch_update ( core , addr )"	304:2:8373:8408	871403	12	True				
ANR	871604	CallExpression	"r_core_cmpwatch_update ( core , addr )"		871403	0					
ANR	871605	Callee	r_core_cmpwatch_update		871403	0					
ANR	871606	Identifier	r_core_cmpwatch_update		871403	0					
ANR	871607	ArgumentList	core		871403	1					
ANR	871608	Argument	core		871403	0					
ANR	871609	Identifier	core		871403	0					
ANR	871610	Argument	addr		871403	1					
ANR	871611	Identifier	addr		871403	0					
ANR	871612	BreakStatement	break ;	305:2:8412:8417	871403	13	True				
ANR	871613	Label	case '*' :	306:1:8420:8428	871403	14	True				
ANR	871614	ExpressionStatement	"r_core_cmpwatch_show ( core , UT64_MAX , '*' )"	307:2:8432:8474	871403	15	True				
ANR	871615	CallExpression	"r_core_cmpwatch_show ( core , UT64_MAX , '*' )"		871403	0					
ANR	871616	Callee	r_core_cmpwatch_show		871403	0					
ANR	871617	Identifier	r_core_cmpwatch_show		871403	0					
ANR	871618	ArgumentList	core		871403	1					
ANR	871619	Argument	core		871403	0					
ANR	871620	Identifier	core		871403	0					
ANR	871621	Argument	UT64_MAX		871403	1					
ANR	871622	Identifier	UT64_MAX		871403	0					
ANR	871623	Argument	'*'		871403	2					
ANR	871624	PrimaryExpression	'*'		871403	0					
ANR	871625	BreakStatement	break ;	308:2:8478:8483	871403	16	True				
ANR	871626	Label	case '\\0' :	309:1:8486:8495	871403	17	True				
ANR	871627	ExpressionStatement	"r_core_cmpwatch_show ( core , UT64_MAX , 0 )"	310:2:8499:8539	871403	18	True				
ANR	871628	CallExpression	"r_core_cmpwatch_show ( core , UT64_MAX , 0 )"		871403	0					
ANR	871629	Callee	r_core_cmpwatch_show		871403	0					
ANR	871630	Identifier	r_core_cmpwatch_show		871403	0					
ANR	871631	ArgumentList	core		871403	1					
ANR	871632	Argument	core		871403	0					
ANR	871633	Identifier	core		871403	0					
ANR	871634	Argument	UT64_MAX		871403	1					
ANR	871635	Identifier	UT64_MAX		871403	0					
ANR	871636	Argument	0		871403	2					
ANR	871637	PrimaryExpression	0		871403	0					
ANR	871638	BreakStatement	break ;	311:2:8543:8548	871403	19	True				
ANR	871639	Label	case '?' :	312:1:8551:8559	871403	20	True				
ANR	871640	CompoundStatement		39:2:839:1236	871403	21					
ANR	871641	IdentifierDeclStatement	"const char * help_message [ ] = { ""Usage: cw"" , """" , ""Watcher commands"" , ""cw"" , """" , ""List all compare watchers"" , ""cw"" , "" addr"" , ""List all compare watchers"" , ""cw"" , "" addr sz cmd"" , ""Add a memory watcher"" , ""cw"" , ""*"" , ""List compare watchers in r2 cmds"" , ""cwr"" , "" [addr]"" , ""Reset/revert watchers"" , ""cwu"" , "" [addr]"" , ""Update watchers"" , NULL } ;"	313:2:8565:8962	871403	0	True				
ANR	871642	IdentifierDecl	"* help_message [ ] = { ""Usage: cw"" , """" , ""Watcher commands"" , ""cw"" , """" , ""List all compare watchers"" , ""cw"" , "" addr"" , ""List all compare watchers"" , ""cw"" , "" addr sz cmd"" , ""Add a memory watcher"" , ""cw"" , ""*"" , ""List compare watchers in r2 cmds"" , ""cwr"" , "" [addr]"" , ""Reset/revert watchers"" , ""cwu"" , "" [addr]"" , ""Update watchers"" , NULL }"		871403	0					
ANR	871643	IdentifierDeclType	const char * [ ]		871403	0					
ANR	871644	Identifier	help_message		871403	1					
ANR	871645	AssignmentExpression	"* help_message [ ] = { ""Usage: cw"" , """" , ""Watcher commands"" , ""cw"" , """" , ""List all compare watchers"" , ""cw"" , "" addr"" , ""List all compare watchers"" , ""cw"" , "" addr sz cmd"" , ""Add a memory watcher"" , ""cw"" , ""*"" , ""List compare watchers in r2 cmds"" , ""cwr"" , "" [addr]"" , ""Reset/revert watchers"" , ""cwu"" , "" [addr]"" , ""Update watchers"" , NULL }"		871403	2		=			
ANR	871646	Identifier	help_message		871403	0					
ANR	871647	InitializerList	"""Usage: cw"""		871403	1					
ANR	871648	PrimaryExpression	"""Usage: cw"""		871403	0					
ANR	871649	PrimaryExpression	""""""		871403	1					
ANR	871650	PrimaryExpression	"""Watcher commands"""		871403	2					
ANR	871651	PrimaryExpression	"""cw"""		871403	3					
ANR	871652	PrimaryExpression	""""""		871403	4					
ANR	871653	PrimaryExpression	"""List all compare watchers"""		871403	5					
ANR	871654	PrimaryExpression	"""cw"""		871403	6					
ANR	871655	PrimaryExpression	""" addr"""		871403	7					
ANR	871656	PrimaryExpression	"""List all compare watchers"""		871403	8					
ANR	871657	PrimaryExpression	"""cw"""		871403	9					
ANR	871658	PrimaryExpression	""" addr sz cmd"""		871403	10					
ANR	871659	PrimaryExpression	"""Add a memory watcher"""		871403	11					
ANR	871660	PrimaryExpression	"""cw"""		871403	12					
ANR	871661	PrimaryExpression	"""*"""		871403	13					
ANR	871662	PrimaryExpression	"""List compare watchers in r2 cmds"""		871403	14					
ANR	871663	PrimaryExpression	"""cwr"""		871403	15					
ANR	871664	PrimaryExpression	""" [addr]"""		871403	16					
ANR	871665	PrimaryExpression	"""Reset/revert watchers"""		871403	17					
ANR	871666	PrimaryExpression	"""cwu"""		871403	18					
ANR	871667	PrimaryExpression	""" [addr]"""		871403	19					
ANR	871668	PrimaryExpression	"""Update watchers"""		871403	20					
ANR	871669	Identifier	NULL		871403	21					
ANR	871670	ExpressionStatement	"r_core_cmd_help ( core , help_message )"	324:2:8966:9002	871403	1	True				
ANR	871671	CallExpression	"r_core_cmd_help ( core , help_message )"		871403	0					
ANR	871672	Callee	r_core_cmd_help		871403	0					
ANR	871673	Identifier	r_core_cmd_help		871403	0					
ANR	871674	ArgumentList	core		871403	1					
ANR	871675	Argument	core		871403	0					
ANR	871676	Identifier	core		871403	0					
ANR	871677	Argument	help_message		871403	1					
ANR	871678	Identifier	help_message		871403	0					
ANR	871679	BreakStatement	break ;	326:4:9011:9016	871403	22	True				
ANR	871680	ReturnType	static void		871403	1					
ANR	871681	Identifier	cmd_cmp_watcher		871403	2					
ANR	871682	ParameterList	"RCore * core , const char * input"		871403	3					
ANR	871683	Parameter	RCore * core	275:28:7693:7703	871403	0	True				
ANR	871684	ParameterType	RCore *		871403	0					
ANR	871685	Identifier	core		871403	1					
ANR	871686	Parameter	const char * input	275:41:7706:7722	871403	1	True				
ANR	871687	ParameterType	const char *		871403	0					
ANR	871688	Identifier	input		871403	1					
ANR	871689	CFGEntryNode	ENTRY		871403		True				
ANR	871690	CFGExitNode	EXIT		871403		True				
ANR	871691	Symbol	atoi		871403						
ANR	871692	Symbol	NULL		871403						
ANR	871693	Symbol	help_message		871403						
ANR	871694	Symbol	* r ++		871403						
ANR	871695	Symbol	* q ++		871403						
ANR	871696	Symbol	* input		871403						
ANR	871697	Symbol	* core		871403						
ANR	871698	Symbol	strchr		871403						
ANR	871699	Symbol	r_num_math		871403						
ANR	871700	Symbol	p		871403						
ANR	871701	Symbol	core		871403						
ANR	871702	Symbol	input		871403						
ANR	871703	Symbol	q		871403						
ANR	871704	Symbol	r		871403						
ANR	871705	Symbol	size		871403						
ANR	871706	Symbol	strdup		871403						
ANR	871707	Symbol	addr		871403						
ANR	871708	Symbol	core -> num		871403						
ANR	871709	Symbol	UT64_MAX		871403						
ANR	871710	Function	cmd_cmp_disasm	330:0:9024:11807							
ANR	871711	FunctionDef	"cmd_cmp_disasm (RCore * core , const char * input , int mode)"		871710	0					
ANR	871712	CompoundStatement		330:68:9092:11807	871710	0					
ANR	871713	IdentifierDeclStatement	"RAsmOp op , op2 ;"	331:1:9095:9109	871710	0	True				
ANR	871714	IdentifierDecl	op		871710	0					
ANR	871715	IdentifierDeclType	RAsmOp		871710	0					
ANR	871716	Identifier	op		871710	1					
ANR	871717	IdentifierDecl	op2		871710	1					
ANR	871718	IdentifierDeclType	RAsmOp		871710	0					
ANR	871719	Identifier	op2		871710	1					
ANR	871720	IdentifierDeclStatement	"int i , j ;"	332:1:9112:9120	871710	1	True				
ANR	871721	IdentifierDecl	i		871710	0					
ANR	871722	IdentifierDeclType	int		871710	0					
ANR	871723	Identifier	i		871710	1					
ANR	871724	IdentifierDecl	j		871710	1					
ANR	871725	IdentifierDeclType	int		871710	0					
ANR	871726	Identifier	j		871710	1					
ANR	871727	IdentifierDeclStatement	char colpad [ 80 ] ;	333:1:9123:9138	871710	2	True				
ANR	871728	IdentifierDecl	colpad [ 80 ]		871710	0					
ANR	871729	IdentifierDeclType	char [ 80 ]		871710	0					
ANR	871730	Identifier	colpad		871710	1					
ANR	871731	PrimaryExpression	80		871710	2					
ANR	871732	IdentifierDeclStatement	"int hascolor = r_config_get_i ( core -> config , ""scr.color"" ) ;"	334:1:9141:9198	871710	3	True				
ANR	871733	IdentifierDecl	"hascolor = r_config_get_i ( core -> config , ""scr.color"" )"		871710	0					
ANR	871734	IdentifierDeclType	int		871710	0					
ANR	871735	Identifier	hascolor		871710	1					
ANR	871736	AssignmentExpression	"hascolor = r_config_get_i ( core -> config , ""scr.color"" )"		871710	2		=			
ANR	871737	Identifier	hascolor		871710	0					
ANR	871738	CallExpression	"r_config_get_i ( core -> config , ""scr.color"" )"		871710	1					
ANR	871739	Callee	r_config_get_i		871710	0					
ANR	871740	Identifier	r_config_get_i		871710	0					
ANR	871741	ArgumentList	core -> config		871710	1					
ANR	871742	Argument	core -> config		871710	0					
ANR	871743	PtrMemberAccess	core -> config		871710	0					
ANR	871744	Identifier	core		871710	0					
ANR	871745	Identifier	config		871710	1					
ANR	871746	Argument	"""scr.color"""		871710	1					
ANR	871747	PrimaryExpression	"""scr.color"""		871710	0					
ANR	871748	IdentifierDeclStatement	"int cols = r_config_get_i ( core -> config , ""hex.cols"" ) * 2 ;"	335:1:9201:9257	871710	4	True				
ANR	871749	IdentifierDecl	"cols = r_config_get_i ( core -> config , ""hex.cols"" ) * 2"		871710	0					
ANR	871750	IdentifierDeclType	int		871710	0					
ANR	871751	Identifier	cols		871710	1					
ANR	871752	AssignmentExpression	"cols = r_config_get_i ( core -> config , ""hex.cols"" ) * 2"		871710	2		=			
ANR	871753	Identifier	cols		871710	0					
ANR	871754	MultiplicativeExpression	"r_config_get_i ( core -> config , ""hex.cols"" ) * 2"		871710	1		*			
ANR	871755	CallExpression	"r_config_get_i ( core -> config , ""hex.cols"" )"		871710	0					
ANR	871756	Callee	r_config_get_i		871710	0					
ANR	871757	Identifier	r_config_get_i		871710	0					
ANR	871758	ArgumentList	core -> config		871710	1					
ANR	871759	Argument	core -> config		871710	0					
ANR	871760	PtrMemberAccess	core -> config		871710	0					
ANR	871761	Identifier	core		871710	0					
ANR	871762	Identifier	config		871710	1					
ANR	871763	Argument	"""hex.cols"""		871710	1					
ANR	871764	PrimaryExpression	"""hex.cols"""		871710	0					
ANR	871765	PrimaryExpression	2		871710	1					
ANR	871766	IdentifierDeclStatement	"ut64 off = r_num_math ( core -> num , input ) ;"	336:1:9260:9300	871710	5	True				
ANR	871767	IdentifierDecl	"off = r_num_math ( core -> num , input )"		871710	0					
ANR	871768	IdentifierDeclType	ut64		871710	0					
ANR	871769	Identifier	off		871710	1					
ANR	871770	AssignmentExpression	"off = r_num_math ( core -> num , input )"		871710	2		=			
ANR	871771	Identifier	off		871710	0					
ANR	871772	CallExpression	"r_num_math ( core -> num , input )"		871710	1					
ANR	871773	Callee	r_num_math		871710	0					
ANR	871774	Identifier	r_num_math		871710	0					
ANR	871775	ArgumentList	core -> num		871710	1					
ANR	871776	Argument	core -> num		871710	0					
ANR	871777	PtrMemberAccess	core -> num		871710	0					
ANR	871778	Identifier	core		871710	0					
ANR	871779	Identifier	num		871710	1					
ANR	871780	Argument	input		871710	1					
ANR	871781	Identifier	input		871710	0					
ANR	871782	IdentifierDeclStatement	"ut8 * buf = calloc ( core -> blocksize + 32 , 1 ) ;"	337:1:9303:9346	871710	6	True				
ANR	871783	IdentifierDecl	"* buf = calloc ( core -> blocksize + 32 , 1 )"		871710	0					
ANR	871784	IdentifierDeclType	ut8 *		871710	0					
ANR	871785	Identifier	buf		871710	1					
ANR	871786	AssignmentExpression	"* buf = calloc ( core -> blocksize + 32 , 1 )"		871710	2		=			
ANR	871787	Identifier	buf		871710	0					
ANR	871788	CallExpression	"calloc ( core -> blocksize + 32 , 1 )"		871710	1					
ANR	871789	Callee	calloc		871710	0					
ANR	871790	Identifier	calloc		871710	0					
ANR	871791	ArgumentList	core -> blocksize + 32		871710	1					
ANR	871792	Argument	core -> blocksize + 32		871710	0					
ANR	871793	AdditiveExpression	core -> blocksize + 32		871710	0		+			
ANR	871794	PtrMemberAccess	core -> blocksize		871710	0					
ANR	871795	Identifier	core		871710	0					
ANR	871796	Identifier	blocksize		871710	1					
ANR	871797	PrimaryExpression	32		871710	1					
ANR	871798	Argument	1		871710	1					
ANR	871799	PrimaryExpression	1		871710	0					
ANR	871800	IdentifierDeclStatement	RConsPrintablePalette * pal = & r_cons_singleton ( ) -> context -> pal ;	338:1:9349:9412	871710	7	True				
ANR	871801	IdentifierDecl	* pal = & r_cons_singleton ( ) -> context -> pal		871710	0					
ANR	871802	IdentifierDeclType	RConsPrintablePalette *		871710	0					
ANR	871803	Identifier	pal		871710	1					
ANR	871804	AssignmentExpression	* pal = & r_cons_singleton ( ) -> context -> pal		871710	2		=			
ANR	871805	Identifier	pal		871710	0					
ANR	871806	UnaryOperationExpression	& r_cons_singleton ( ) -> context -> pal		871710	1					
ANR	871807	UnaryOperator	&		871710	0					
ANR	871808	PtrMemberAccess	r_cons_singleton ( ) -> context -> pal		871710	1					
ANR	871809	PtrMemberAccess	r_cons_singleton ( ) -> context		871710	0					
ANR	871810	CallExpression	r_cons_singleton ( )		871710	0					
ANR	871811	Callee	r_cons_singleton		871710	0					
ANR	871812	Identifier	r_cons_singleton		871710	0					
ANR	871813	ArgumentList			871710	1					
ANR	871814	Identifier	context		871710	1					
ANR	871815	Identifier	pal		871710	1					
ANR	871816	IfStatement	if ( ! buf )		871710	8					
ANR	871817	Condition	! buf	339:5:9419:9422	871710	0	True				
ANR	871818	UnaryOperationExpression	! buf		871710	0					
ANR	871819	UnaryOperator	!		871710	0					
ANR	871820	Identifier	buf		871710	1					
ANR	871821	CompoundStatement		10:11:332:332	871710	1					
ANR	871822	ReturnStatement	return false ;	340:2:9429:9441	871710	0	True				
ANR	871823	Identifier	false		871710	0					
ANR	871824	ExpressionStatement	"r_io_read_at ( core -> io , off , buf , core -> blocksize + 32 )"	342:1:9447:9502	871710	9	True				
ANR	871825	CallExpression	"r_io_read_at ( core -> io , off , buf , core -> blocksize + 32 )"		871710	0					
ANR	871826	Callee	r_io_read_at		871710	0					
ANR	871827	Identifier	r_io_read_at		871710	0					
ANR	871828	ArgumentList	core -> io		871710	1					
ANR	871829	Argument	core -> io		871710	0					
ANR	871830	PtrMemberAccess	core -> io		871710	0					
ANR	871831	Identifier	core		871710	0					
ANR	871832	Identifier	io		871710	1					
ANR	871833	Argument	off		871710	1					
ANR	871834	Identifier	off		871710	0					
ANR	871835	Argument	buf		871710	2					
ANR	871836	Identifier	buf		871710	0					
ANR	871837	Argument	core -> blocksize + 32		871710	3					
ANR	871838	AdditiveExpression	core -> blocksize + 32		871710	0		+			
ANR	871839	PtrMemberAccess	core -> blocksize		871710	0					
ANR	871840	Identifier	core		871710	0					
ANR	871841	Identifier	blocksize		871710	1					
ANR	871842	PrimaryExpression	32		871710	1					
ANR	871843	SwitchStatement	switch ( mode )		871710	10					
ANR	871844	Condition	mode	343:9:9513:9516	871710	0	True				
ANR	871845	Identifier	mode		871710	0					
ANR	871846	CompoundStatement		14:15:426:426	871710	1					
ANR	871847	Label	case 'c' :	344:1:9522:9530	871710	0	True				
ANR	871848	ForStatement	for ( i = j = 0 ; i < core -> blocksize && j < core -> blocksize ; )		871710	1					
ANR	871849	ForInit	i = j = 0 ;	345:7:9550:9559	871710	0	True				
ANR	871850	AssignmentExpression	i = j = 0		871710	0		=			
ANR	871851	Identifier	i		871710	0					
ANR	871852	AssignmentExpression	j = 0		871710	1		=			
ANR	871853	Identifier	j		871710	0					
ANR	871854	PrimaryExpression	0		871710	1					
ANR	871855	Condition	i < core -> blocksize && j < core -> blocksize	345:18:9561:9602	871710	1	True				
ANR	871856	AndExpression	i < core -> blocksize && j < core -> blocksize		871710	0		&&			
ANR	871857	RelationalExpression	i < core -> blocksize		871710	0		<			
ANR	871858	Identifier	i		871710	0					
ANR	871859	PtrMemberAccess	core -> blocksize		871710	1					
ANR	871860	Identifier	core		871710	0					
ANR	871861	Identifier	blocksize		871710	1					
ANR	871862	RelationalExpression	j < core -> blocksize		871710	1		<			
ANR	871863	Identifier	j		871710	0					
ANR	871864	PtrMemberAccess	core -> blocksize		871710	1					
ANR	871865	Identifier	core		871710	0					
ANR	871866	Identifier	blocksize		871710	1					
ANR	871867	CompoundStatement		28:3:840:895	871710	2					
ANR	871868	ExpressionStatement	"r_asm_set_pc ( core -> assembler , core -> offset + i )"	347:3:9623:9671	871710	0	True				
ANR	871869	CallExpression	"r_asm_set_pc ( core -> assembler , core -> offset + i )"		871710	0					
ANR	871870	Callee	r_asm_set_pc		871710	0					
ANR	871871	Identifier	r_asm_set_pc		871710	0					
ANR	871872	ArgumentList	core -> assembler		871710	1					
ANR	871873	Argument	core -> assembler		871710	0					
ANR	871874	PtrMemberAccess	core -> assembler		871710	0					
ANR	871875	Identifier	core		871710	0					
ANR	871876	Identifier	assembler		871710	1					
ANR	871877	Argument	core -> offset + i		871710	1					
ANR	871878	AdditiveExpression	core -> offset + i		871710	0		+			
ANR	871879	PtrMemberAccess	core -> offset		871710	0					
ANR	871880	Identifier	core		871710	0					
ANR	871881	Identifier	offset		871710	1					
ANR	871882	Identifier	i		871710	1					
ANR	871883	ExpressionStatement	"( void ) r_asm_disassemble ( core -> assembler , & op , core -> block + i , core -> blocksize - i )"	348:3:9676:9765	871710	1	True				
ANR	871884	CastExpression	"( void ) r_asm_disassemble ( core -> assembler , & op , core -> block + i , core -> blocksize - i )"		871710	0					
ANR	871885	CastTarget	void		871710	0					
ANR	871886	CallExpression	"r_asm_disassemble ( core -> assembler , & op , core -> block + i , core -> blocksize - i )"		871710	1					
ANR	871887	Callee	r_asm_disassemble		871710	0					
ANR	871888	Identifier	r_asm_disassemble		871710	0					
ANR	871889	ArgumentList	core -> assembler		871710	1					
ANR	871890	Argument	core -> assembler		871710	0					
ANR	871891	PtrMemberAccess	core -> assembler		871710	0					
ANR	871892	Identifier	core		871710	0					
ANR	871893	Identifier	assembler		871710	1					
ANR	871894	Argument	& op		871710	1					
ANR	871895	UnaryOperationExpression	& op		871710	0					
ANR	871896	UnaryOperator	&		871710	0					
ANR	871897	Identifier	op		871710	1					
ANR	871898	Argument	core -> block + i		871710	2					
ANR	871899	AdditiveExpression	core -> block + i		871710	0		+			
ANR	871900	PtrMemberAccess	core -> block		871710	0					
ANR	871901	Identifier	core		871710	0					
ANR	871902	Identifier	block		871710	1					
ANR	871903	Identifier	i		871710	1					
ANR	871904	Argument	core -> blocksize - i		871710	3					
ANR	871905	AdditiveExpression	core -> blocksize - i		871710	0		-			
ANR	871906	PtrMemberAccess	core -> blocksize		871710	0					
ANR	871907	Identifier	core		871710	0					
ANR	871908	Identifier	blocksize		871710	1					
ANR	871909	Identifier	i		871710	1					
ANR	871910	ExpressionStatement	"r_asm_set_pc ( core -> assembler , off + i )"	352:3:9783:9822	871710	2	True				
ANR	871911	CallExpression	"r_asm_set_pc ( core -> assembler , off + i )"		871710	0					
ANR	871912	Callee	r_asm_set_pc		871710	0					
ANR	871913	Identifier	r_asm_set_pc		871710	0					
ANR	871914	ArgumentList	core -> assembler		871710	1					
ANR	871915	Argument	core -> assembler		871710	0					
ANR	871916	PtrMemberAccess	core -> assembler		871710	0					
ANR	871917	Identifier	core		871710	0					
ANR	871918	Identifier	assembler		871710	1					
ANR	871919	Argument	off + i		871710	1					
ANR	871920	AdditiveExpression	off + i		871710	0		+			
ANR	871921	Identifier	off		871710	0					
ANR	871922	Identifier	i		871710	1					
ANR	871923	ExpressionStatement	"( void ) r_asm_disassemble ( core -> assembler , & op2 , buf + j , core -> blocksize - j )"	353:3:9827:9909	871710	3	True				
ANR	871924	CastExpression	"( void ) r_asm_disassemble ( core -> assembler , & op2 , buf + j , core -> blocksize - j )"		871710	0					
ANR	871925	CastTarget	void		871710	0					
ANR	871926	CallExpression	"r_asm_disassemble ( core -> assembler , & op2 , buf + j , core -> blocksize - j )"		871710	1					
ANR	871927	Callee	r_asm_disassemble		871710	0					
ANR	871928	Identifier	r_asm_disassemble		871710	0					
ANR	871929	ArgumentList	core -> assembler		871710	1					
ANR	871930	Argument	core -> assembler		871710	0					
ANR	871931	PtrMemberAccess	core -> assembler		871710	0					
ANR	871932	Identifier	core		871710	0					
ANR	871933	Identifier	assembler		871710	1					
ANR	871934	Argument	& op2		871710	1					
ANR	871935	UnaryOperationExpression	& op2		871710	0					
ANR	871936	UnaryOperator	&		871710	0					
ANR	871937	Identifier	op2		871710	1					
ANR	871938	Argument	buf + j		871710	2					
ANR	871939	AdditiveExpression	buf + j		871710	0		+			
ANR	871940	Identifier	buf		871710	0					
ANR	871941	Identifier	j		871710	1					
ANR	871942	Argument	core -> blocksize - j		871710	3					
ANR	871943	AdditiveExpression	core -> blocksize - j		871710	0		-			
ANR	871944	PtrMemberAccess	core -> blocksize		871710	0					
ANR	871945	Identifier	core		871710	0					
ANR	871946	Identifier	blocksize		871710	1					
ANR	871947	Identifier	j		871710	1					
ANR	871948	IdentifierDeclStatement	"bool iseq = r_strbuf_equals ( & op . buf_asm , & op2 . buf_asm ) ;"	357:3:9933:9988	871710	4	True				
ANR	871949	IdentifierDecl	"iseq = r_strbuf_equals ( & op . buf_asm , & op2 . buf_asm )"		871710	0					
ANR	871950	IdentifierDeclType	bool		871710	0					
ANR	871951	Identifier	iseq		871710	1					
ANR	871952	AssignmentExpression	"iseq = r_strbuf_equals ( & op . buf_asm , & op2 . buf_asm )"		871710	2		=			
ANR	871953	Identifier	iseq		871710	0					
ANR	871954	CallExpression	"r_strbuf_equals ( & op . buf_asm , & op2 . buf_asm )"		871710	1					
ANR	871955	Callee	r_strbuf_equals		871710	0					
ANR	871956	Identifier	r_strbuf_equals		871710	0					
ANR	871957	ArgumentList	& op . buf_asm		871710	1					
ANR	871958	Argument	& op . buf_asm		871710	0					
ANR	871959	UnaryOperationExpression	& op . buf_asm		871710	0					
ANR	871960	UnaryOperator	&		871710	0					
ANR	871961	MemberAccess	op . buf_asm		871710	1					
ANR	871962	Identifier	op		871710	0					
ANR	871963	Identifier	buf_asm		871710	1					
ANR	871964	Argument	& op2 . buf_asm		871710	1					
ANR	871965	UnaryOperationExpression	& op2 . buf_asm		871710	0					
ANR	871966	UnaryOperator	&		871710	0					
ANR	871967	MemberAccess	op2 . buf_asm		871710	1					
ANR	871968	Identifier	op2		871710	0					
ANR	871969	Identifier	buf_asm		871710	1					
ANR	871970	ExpressionStatement	"memset ( colpad , ' ' , sizeof ( colpad ) )"	358:3:9993:10030	871710	5	True				
ANR	871971	CallExpression	"memset ( colpad , ' ' , sizeof ( colpad ) )"		871710	0					
ANR	871972	Callee	memset		871710	0					
ANR	871973	Identifier	memset		871710	0					
ANR	871974	ArgumentList	colpad		871710	1					
ANR	871975	Argument	colpad		871710	0					
ANR	871976	Identifier	colpad		871710	0					
ANR	871977	Argument	' '		871710	1					
ANR	871978	PrimaryExpression	' '		871710	0					
ANR	871979	Argument	sizeof ( colpad )		871710	2					
ANR	871980	SizeofExpression	sizeof ( colpad )		871710	0					
ANR	871981	Sizeof	sizeof		871710	0					
ANR	871982	SizeofOperand	colpad		871710	1					
ANR	871983	CompoundStatement		31:4:948:993	871710	6					
ANR	871984	IdentifierDeclStatement	int pos = strlen ( r_strbuf_get ( & op . buf_asm ) ) ;	360:4:10041:10086	871710	0	True				
ANR	871985	IdentifierDecl	pos = strlen ( r_strbuf_get ( & op . buf_asm ) )		871710	0					
ANR	871986	IdentifierDeclType	int		871710	0					
ANR	871987	Identifier	pos		871710	1					
ANR	871988	AssignmentExpression	pos = strlen ( r_strbuf_get ( & op . buf_asm ) )		871710	2		=			
ANR	871989	Identifier	pos		871710	0					
ANR	871990	CallExpression	strlen ( r_strbuf_get ( & op . buf_asm ) )		871710	1					
ANR	871991	Callee	strlen		871710	0					
ANR	871992	Identifier	strlen		871710	0					
ANR	871993	ArgumentList	r_strbuf_get ( & op . buf_asm )		871710	1					
ANR	871994	Argument	r_strbuf_get ( & op . buf_asm )		871710	0					
ANR	871995	CallExpression	r_strbuf_get ( & op . buf_asm )		871710	0					
ANR	871996	Callee	r_strbuf_get		871710	0					
ANR	871997	Identifier	r_strbuf_get		871710	0					
ANR	871998	ArgumentList	& op . buf_asm		871710	1					
ANR	871999	Argument	& op . buf_asm		871710	0					
ANR	872000	UnaryOperationExpression	& op . buf_asm		871710	0					
ANR	872001	UnaryOperator	&		871710	0					
ANR	872002	MemberAccess	op . buf_asm		871710	1					
ANR	872003	Identifier	op		871710	0					
ANR	872004	Identifier	buf_asm		871710	1					
ANR	872005	ExpressionStatement	pos = ( pos > cols ) ? 0 : cols - pos	361:4:10092:10125	871710	1	True				
ANR	872006	AssignmentExpression	pos = ( pos > cols ) ? 0 : cols - pos		871710	0		=			
ANR	872007	Identifier	pos		871710	0					
ANR	872008	ConditionalExpression	( pos > cols ) ? 0 : cols - pos		871710	1					
ANR	872009	Condition	pos > cols		871710	0					
ANR	872010	RelationalExpression	pos > cols		871710	0		>			
ANR	872011	Identifier	pos		871710	0					
ANR	872012	Identifier	cols		871710	1					
ANR	872013	PrimaryExpression	0		871710	1					
ANR	872014	AdditiveExpression	cols - pos		871710	2		-			
ANR	872015	Identifier	cols		871710	0					
ANR	872016	Identifier	pos		871710	1					
ANR	872017	ExpressionStatement	colpad [ pos ] = 0	362:4:10131:10146	871710	2	True				
ANR	872018	AssignmentExpression	colpad [ pos ] = 0		871710	0		=			
ANR	872019	ArrayIndexing	colpad [ pos ]		871710	0					
ANR	872020	Identifier	colpad		871710	0					
ANR	872021	Identifier	pos		871710	1					
ANR	872022	PrimaryExpression	0		871710	1					
ANR	872023	IfStatement	if ( hascolor )		871710	7					
ANR	872024	Condition	hascolor	364:7:10160:10167	871710	0	True				
ANR	872025	Identifier	hascolor		871710	0					
ANR	872026	CompoundStatement		35:17:1077:1077	871710	1					
ANR	872027	ExpressionStatement	r_cons_printf ( iseq ? pal -> graph_true : pal -> graph_false )	365:4:10176:10231	871710	0	True				
ANR	872028	CallExpression	r_cons_printf ( iseq ? pal -> graph_true : pal -> graph_false )		871710	0					
ANR	872029	Callee	r_cons_printf		871710	0					
ANR	872030	Identifier	r_cons_printf		871710	0					
ANR	872031	ArgumentList	iseq ? pal -> graph_true : pal -> graph_false		871710	1					
ANR	872032	Argument	iseq ? pal -> graph_true : pal -> graph_false		871710	0					
ANR	872033	ConditionalExpression	iseq ? pal -> graph_true : pal -> graph_false		871710	0					
ANR	872034	Condition	iseq		871710	0					
ANR	872035	Identifier	iseq		871710	0					
ANR	872036	PtrMemberAccess	pal -> graph_true		871710	1					
ANR	872037	Identifier	pal		871710	0					
ANR	872038	Identifier	graph_true		871710	1					
ANR	872039	PtrMemberAccess	pal -> graph_false		871710	2					
ANR	872040	Identifier	pal		871710	0					
ANR	872041	Identifier	graph_false		871710	1					
ANR	872042	Statement	r_cons_printf	367:3:10241:10253	871710	8	True				
ANR	872043	Statement	(	367:17:10255:10255	871710	9	True				
ANR	872044	Statement	""" 0x%08"""	367:18:10256:10263	871710	10	True				
ANR	872045	Statement	PFMT64x	367:26:10264:10270	871710	11	True				
ANR	872046	Statement	"""  %s %s"""	367:34:10272:10280	871710	12	True				
ANR	872047	Statement	","	367:43:10281:10281	871710	13	True				
ANR	872048	Statement	core	368:4:10287:10290	871710	14	True				
ANR	872049	Statement	->	368:8:10291:10292	871710	15	True				
ANR	872050	Statement	offset	368:10:10293:10298	871710	16	True				
ANR	872051	Statement	+	368:17:10300:10300	871710	17	True				
ANR	872052	Statement	i	368:19:10302:10302	871710	18	True				
ANR	872053	Statement	","	368:20:10303:10303	871710	19	True				
ANR	872054	Statement	r_strbuf_get	368:22:10305:10316	871710	20	True				
ANR	872055	Statement	(	368:35:10318:10318	871710	21	True				
ANR	872056	Statement	&	368:36:10319:10319	871710	22	True				
ANR	872057	Statement	op	368:37:10320:10321	871710	23	True				
ANR	872058	Statement	.	368:39:10322:10322	871710	24	True				
ANR	872059	Statement	buf_asm	368:40:10323:10329	871710	25	True				
ANR	872060	Statement	)	368:47:10330:10330	871710	26	True				
ANR	872061	Statement	","	368:48:10331:10331	871710	27	True				
ANR	872062	Statement	colpad	368:50:10333:10338	871710	28	True				
ANR	872063	Statement	)	368:56:10339:10339	871710	29	True				
ANR	872064	ExpressionStatement		368:57:10340:10340	871710	30	True				
ANR	872065	Statement	r_cons_printf	369:3:10345:10357	871710	31	True				
ANR	872066	Statement	(	369:17:10359:10359	871710	32	True				
ANR	872067	Statement	"""%c 0x%08"""	369:18:10360:10369	871710	33	True				
ANR	872068	Statement	PFMT64x	369:28:10370:10376	871710	34	True				
ANR	872069	Statement	"""  %s\\n"""	369:36:10378:10385	871710	35	True				
ANR	872070	Statement	","	369:44:10386:10386	871710	36	True				
ANR	872071	Statement	iseq	370:4:10392:10395	871710	37	True				
ANR	872072	Statement	?	370:8:10396:10396	871710	38	True				
ANR	872073	Label	'=' :	370:10:10398:10401	871710	39	True				
ANR	872074	Statement	'!'	370:15:10403:10405	871710	40	True				
ANR	872075	Statement	","	370:18:10406:10406	871710	41	True				
ANR	872076	Statement	off	370:20:10408:10410	871710	42	True				
ANR	872077	Statement	+	370:24:10412:10412	871710	43	True				
ANR	872078	Statement	j	370:26:10414:10414	871710	44	True				
ANR	872079	Statement	","	370:27:10415:10415	871710	45	True				
ANR	872080	Statement	r_strbuf_get	370:29:10417:10428	871710	46	True				
ANR	872081	Statement	(	370:42:10430:10430	871710	47	True				
ANR	872082	Statement	&	370:43:10431:10431	871710	48	True				
ANR	872083	Statement	op2	370:44:10432:10434	871710	49	True				
ANR	872084	Statement	.	370:47:10435:10435	871710	50	True				
ANR	872085	Statement	buf_asm	370:48:10436:10442	871710	51	True				
ANR	872086	Statement	)	370:55:10443:10443	871710	52	True				
ANR	872087	Statement	)	370:56:10444:10444	871710	53	True				
ANR	872088	ExpressionStatement		370:57:10445:10445	871710	54	True				
ANR	872089	IfStatement	if ( hascolor )		871710	55					
ANR	872090	Condition	hascolor	371:7:10454:10461	871710	0	True				
ANR	872091	Identifier	hascolor		871710	0					
ANR	872092	CompoundStatement		42:17:1371:1371	871710	1					
ANR	872093	ExpressionStatement	r_cons_printf ( Color_RESET )	372:4:10470:10497	871710	0	True				
ANR	872094	CallExpression	r_cons_printf ( Color_RESET )		871710	0					
ANR	872095	Callee	r_cons_printf		871710	0					
ANR	872096	Identifier	r_cons_printf		871710	0					
ANR	872097	ArgumentList	Color_RESET		871710	1					
ANR	872098	Argument	Color_RESET		871710	0					
ANR	872099	Identifier	Color_RESET		871710	0					
ANR	872100	IfStatement	if ( op . size < 1 )		871710	56					
ANR	872101	Condition	op . size < 1	374:7:10511:10521	871710	0	True				
ANR	872102	RelationalExpression	op . size < 1		871710	0		<			
ANR	872103	MemberAccess	op . size		871710	0					
ANR	872104	Identifier	op		871710	0					
ANR	872105	Identifier	size		871710	1					
ANR	872106	PrimaryExpression	1		871710	1					
ANR	872107	CompoundStatement		45:20:1431:1431	871710	1					
ANR	872108	ExpressionStatement	op . size = 1	375:4:10530:10541	871710	0	True				
ANR	872109	AssignmentExpression	op . size = 1		871710	0		=			
ANR	872110	MemberAccess	op . size		871710	0					
ANR	872111	Identifier	op		871710	0					
ANR	872112	Identifier	size		871710	1					
ANR	872113	PrimaryExpression	1		871710	1					
ANR	872114	ExpressionStatement	i += op . size	377:3:10551:10563	871710	57	True				
ANR	872115	AssignmentExpression	i += op . size		871710	0		+=			
ANR	872116	Identifier	i		871710	0					
ANR	872117	MemberAccess	op . size		871710	1					
ANR	872118	Identifier	op		871710	0					
ANR	872119	Identifier	size		871710	1					
ANR	872120	IfStatement	if ( op2 . size < 1 )		871710	58					
ANR	872121	Condition	op2 . size < 1	378:7:10572:10583	871710	0	True				
ANR	872122	RelationalExpression	op2 . size < 1		871710	0		<			
ANR	872123	MemberAccess	op2 . size		871710	0					
ANR	872124	Identifier	op2		871710	0					
ANR	872125	Identifier	size		871710	1					
ANR	872126	PrimaryExpression	1		871710	1					
ANR	872127	CompoundStatement		49:21:1493:1493	871710	1					
ANR	872128	ExpressionStatement	op2 . size = 1	379:4:10592:10604	871710	0	True				
ANR	872129	AssignmentExpression	op2 . size = 1		871710	0		=			
ANR	872130	MemberAccess	op2 . size		871710	0					
ANR	872131	Identifier	op2		871710	0					
ANR	872132	Identifier	size		871710	1					
ANR	872133	PrimaryExpression	1		871710	1					
ANR	872134	ExpressionStatement	j += op2 . size	381:3:10614:10627	871710	59	True				
ANR	872135	AssignmentExpression	j += op2 . size		871710	0		+=			
ANR	872136	Identifier	j		871710	0					
ANR	872137	MemberAccess	op2 . size		871710	1					
ANR	872138	Identifier	op2		871710	0					
ANR	872139	Identifier	size		871710	1					
ANR	872140	BreakStatement	break ;	383:2:10635:10640	871710	2	True				
ANR	872141	Label	case 'u' :	384:1:10643:10651	871710	3	True				
ANR	872142	ForStatement	for ( i = j = 0 ; i < core -> blocksize && j < core -> blocksize ; )		871710	4					
ANR	872143	ForInit	i = j = 0 ;	385:7:10671:10680	871710	0	True				
ANR	872144	AssignmentExpression	i = j = 0		871710	0		=			
ANR	872145	Identifier	i		871710	0					
ANR	872146	AssignmentExpression	j = 0		871710	1		=			
ANR	872147	Identifier	j		871710	0					
ANR	872148	PrimaryExpression	0		871710	1					
ANR	872149	Condition	i < core -> blocksize && j < core -> blocksize	385:18:10682:10723	871710	1	True				
ANR	872150	AndExpression	i < core -> blocksize && j < core -> blocksize		871710	0		&&			
ANR	872151	RelationalExpression	i < core -> blocksize		871710	0		<			
ANR	872152	Identifier	i		871710	0					
ANR	872153	PtrMemberAccess	core -> blocksize		871710	1					
ANR	872154	Identifier	core		871710	0					
ANR	872155	Identifier	blocksize		871710	1					
ANR	872156	RelationalExpression	j < core -> blocksize		871710	1		<			
ANR	872157	Identifier	j		871710	0					
ANR	872158	PtrMemberAccess	core -> blocksize		871710	1					
ANR	872159	Identifier	core		871710	0					
ANR	872160	Identifier	blocksize		871710	1					
ANR	872161	CompoundStatement		68:3:1961:2016	871710	2					
ANR	872162	ExpressionStatement	"r_asm_set_pc ( core -> assembler , core -> offset + i )"	387:3:10744:10792	871710	0	True				
ANR	872163	CallExpression	"r_asm_set_pc ( core -> assembler , core -> offset + i )"		871710	0					
ANR	872164	Callee	r_asm_set_pc		871710	0					
ANR	872165	Identifier	r_asm_set_pc		871710	0					
ANR	872166	ArgumentList	core -> assembler		871710	1					
ANR	872167	Argument	core -> assembler		871710	0					
ANR	872168	PtrMemberAccess	core -> assembler		871710	0					
ANR	872169	Identifier	core		871710	0					
ANR	872170	Identifier	assembler		871710	1					
ANR	872171	Argument	core -> offset + i		871710	1					
ANR	872172	AdditiveExpression	core -> offset + i		871710	0		+			
ANR	872173	PtrMemberAccess	core -> offset		871710	0					
ANR	872174	Identifier	core		871710	0					
ANR	872175	Identifier	offset		871710	1					
ANR	872176	Identifier	i		871710	1					
ANR	872177	ExpressionStatement	"( void ) r_asm_disassemble ( core -> assembler , & op , core -> block + i , core -> blocksize - i )"	388:3:10797:10886	871710	1	True				
ANR	872178	CastExpression	"( void ) r_asm_disassemble ( core -> assembler , & op , core -> block + i , core -> blocksize - i )"		871710	0					
ANR	872179	CastTarget	void		871710	0					
ANR	872180	CallExpression	"r_asm_disassemble ( core -> assembler , & op , core -> block + i , core -> blocksize - i )"		871710	1					
ANR	872181	Callee	r_asm_disassemble		871710	0					
ANR	872182	Identifier	r_asm_disassemble		871710	0					
ANR	872183	ArgumentList	core -> assembler		871710	1					
ANR	872184	Argument	core -> assembler		871710	0					
ANR	872185	PtrMemberAccess	core -> assembler		871710	0					
ANR	872186	Identifier	core		871710	0					
ANR	872187	Identifier	assembler		871710	1					
ANR	872188	Argument	& op		871710	1					
ANR	872189	UnaryOperationExpression	& op		871710	0					
ANR	872190	UnaryOperator	&		871710	0					
ANR	872191	Identifier	op		871710	1					
ANR	872192	Argument	core -> block + i		871710	2					
ANR	872193	AdditiveExpression	core -> block + i		871710	0		+			
ANR	872194	PtrMemberAccess	core -> block		871710	0					
ANR	872195	Identifier	core		871710	0					
ANR	872196	Identifier	block		871710	1					
ANR	872197	Identifier	i		871710	1					
ANR	872198	Argument	core -> blocksize - i		871710	3					
ANR	872199	AdditiveExpression	core -> blocksize - i		871710	0		-			
ANR	872200	PtrMemberAccess	core -> blocksize		871710	0					
ANR	872201	Identifier	core		871710	0					
ANR	872202	Identifier	blocksize		871710	1					
ANR	872203	Identifier	i		871710	1					
ANR	872204	ExpressionStatement	"r_asm_set_pc ( core -> assembler , off + i )"	392:3:10904:10943	871710	2	True				
ANR	872205	CallExpression	"r_asm_set_pc ( core -> assembler , off + i )"		871710	0					
ANR	872206	Callee	r_asm_set_pc		871710	0					
ANR	872207	Identifier	r_asm_set_pc		871710	0					
ANR	872208	ArgumentList	core -> assembler		871710	1					
ANR	872209	Argument	core -> assembler		871710	0					
ANR	872210	PtrMemberAccess	core -> assembler		871710	0					
ANR	872211	Identifier	core		871710	0					
ANR	872212	Identifier	assembler		871710	1					
ANR	872213	Argument	off + i		871710	1					
ANR	872214	AdditiveExpression	off + i		871710	0		+			
ANR	872215	Identifier	off		871710	0					
ANR	872216	Identifier	i		871710	1					
ANR	872217	ExpressionStatement	"( void ) r_asm_disassemble ( core -> assembler , & op2 , buf + j , core -> blocksize - j )"	393:3:10948:11030	871710	3	True				
ANR	872218	CastExpression	"( void ) r_asm_disassemble ( core -> assembler , & op2 , buf + j , core -> blocksize - j )"		871710	0					
ANR	872219	CastTarget	void		871710	0					
ANR	872220	CallExpression	"r_asm_disassemble ( core -> assembler , & op2 , buf + j , core -> blocksize - j )"		871710	1					
ANR	872221	Callee	r_asm_disassemble		871710	0					
ANR	872222	Identifier	r_asm_disassemble		871710	0					
ANR	872223	ArgumentList	core -> assembler		871710	1					
ANR	872224	Argument	core -> assembler		871710	0					
ANR	872225	PtrMemberAccess	core -> assembler		871710	0					
ANR	872226	Identifier	core		871710	0					
ANR	872227	Identifier	assembler		871710	1					
ANR	872228	Argument	& op2		871710	1					
ANR	872229	UnaryOperationExpression	& op2		871710	0					
ANR	872230	UnaryOperator	&		871710	0					
ANR	872231	Identifier	op2		871710	1					
ANR	872232	Argument	buf + j		871710	2					
ANR	872233	AdditiveExpression	buf + j		871710	0		+			
ANR	872234	Identifier	buf		871710	0					
ANR	872235	Identifier	j		871710	1					
ANR	872236	Argument	core -> blocksize - j		871710	3					
ANR	872237	AdditiveExpression	core -> blocksize - j		871710	0		-			
ANR	872238	PtrMemberAccess	core -> blocksize		871710	0					
ANR	872239	Identifier	core		871710	0					
ANR	872240	Identifier	blocksize		871710	1					
ANR	872241	Identifier	j		871710	1					
ANR	872242	IdentifierDeclStatement	"bool iseq = r_strbuf_equals ( & op . buf_asm , & op2 . buf_asm ) ;"	397:3:11054:11109	871710	4	True				
ANR	872243	IdentifierDecl	"iseq = r_strbuf_equals ( & op . buf_asm , & op2 . buf_asm )"		871710	0					
ANR	872244	IdentifierDeclType	bool		871710	0					
ANR	872245	Identifier	iseq		871710	1					
ANR	872246	AssignmentExpression	"iseq = r_strbuf_equals ( & op . buf_asm , & op2 . buf_asm )"		871710	2		=			
ANR	872247	Identifier	iseq		871710	0					
ANR	872248	CallExpression	"r_strbuf_equals ( & op . buf_asm , & op2 . buf_asm )"		871710	1					
ANR	872249	Callee	r_strbuf_equals		871710	0					
ANR	872250	Identifier	r_strbuf_equals		871710	0					
ANR	872251	ArgumentList	& op . buf_asm		871710	1					
ANR	872252	Argument	& op . buf_asm		871710	0					
ANR	872253	UnaryOperationExpression	& op . buf_asm		871710	0					
ANR	872254	UnaryOperator	&		871710	0					
ANR	872255	MemberAccess	op . buf_asm		871710	1					
ANR	872256	Identifier	op		871710	0					
ANR	872257	Identifier	buf_asm		871710	1					
ANR	872258	Argument	& op2 . buf_asm		871710	1					
ANR	872259	UnaryOperationExpression	& op2 . buf_asm		871710	0					
ANR	872260	UnaryOperator	&		871710	0					
ANR	872261	MemberAccess	op2 . buf_asm		871710	1					
ANR	872262	Identifier	op2		871710	0					
ANR	872263	Identifier	buf_asm		871710	1					
ANR	872264	IfStatement	if ( iseq )		871710	5					
ANR	872265	Condition	iseq	398:7:11158:11161	871710	0	True				
ANR	872266	Identifier	iseq		871710	0					
ANR	872267	CompoundStatement		69:13:2071:2071	871710	1					
ANR	872268	Statement	r_cons_printf	399:4:11170:11182	871710	0	True				
ANR	872269	Statement	(	399:18:11184:11184	871710	1	True				
ANR	872270	Statement	""" 0x%08"""	399:19:11185:11192	871710	2	True				
ANR	872271	Statement	PFMT64x	399:27:11193:11199	871710	3	True				
ANR	872272	Statement	"""  %s\\n"""	399:35:11201:11208	871710	4	True				
ANR	872273	Statement	","	399:43:11209:11209	871710	5	True				
ANR	872274	Statement	core	400:5:11216:11219	871710	6	True				
ANR	872275	Statement	->	400:9:11220:11221	871710	7	True				
ANR	872276	Statement	offset	400:11:11222:11227	871710	8	True				
ANR	872277	Statement	+	400:18:11229:11229	871710	9	True				
ANR	872278	Statement	i	400:20:11231:11231	871710	10	True				
ANR	872279	Statement	","	400:21:11232:11232	871710	11	True				
ANR	872280	Statement	r_strbuf_get	400:23:11234:11245	871710	12	True				
ANR	872281	Statement	(	400:36:11247:11247	871710	13	True				
ANR	872282	Statement	&	400:37:11248:11248	871710	14	True				
ANR	872283	Statement	op	400:38:11249:11250	871710	15	True				
ANR	872284	Statement	.	400:40:11251:11251	871710	16	True				
ANR	872285	Statement	buf_asm	400:41:11252:11258	871710	17	True				
ANR	872286	Statement	)	400:48:11259:11259	871710	18	True				
ANR	872287	Statement	)	400:49:11260:11260	871710	19	True				
ANR	872288	ExpressionStatement		400:50:11261:11261	871710	20	True				
ANR	872289	ElseStatement	else		871710	0					
ANR	872290	CompoundStatement		72:10:2180:2180	871710	0					
ANR	872291	IfStatement	if ( hascolor )		871710	0					
ANR	872292	Condition	hascolor	402:8:11283:11290	871710	0	True				
ANR	872293	Identifier	hascolor		871710	0					
ANR	872294	CompoundStatement		73:18:2200:2200	871710	1					
ANR	872295	ExpressionStatement	r_cons_printf ( pal -> graph_false )	403:5:11300:11332	871710	0	True				
ANR	872296	CallExpression	r_cons_printf ( pal -> graph_false )		871710	0					
ANR	872297	Callee	r_cons_printf		871710	0					
ANR	872298	Identifier	r_cons_printf		871710	0					
ANR	872299	ArgumentList	pal -> graph_false		871710	1					
ANR	872300	Argument	pal -> graph_false		871710	0					
ANR	872301	PtrMemberAccess	pal -> graph_false		871710	0					
ANR	872302	Identifier	pal		871710	0					
ANR	872303	Identifier	graph_false		871710	1					
ANR	872304	Statement	r_cons_printf	405:4:11344:11356	871710	1	True				
ANR	872305	Statement	(	405:18:11358:11358	871710	2	True				
ANR	872306	Statement	"""-0x%08"""	405:19:11359:11366	871710	3	True				
ANR	872307	Statement	PFMT64x	405:27:11367:11373	871710	4	True				
ANR	872308	Statement	"""  %s\\n"""	405:35:11375:11382	871710	5	True				
ANR	872309	Statement	","	405:43:11383:11383	871710	6	True				
ANR	872310	Statement	core	406:5:11390:11393	871710	7	True				
ANR	872311	Statement	->	406:9:11394:11395	871710	8	True				
ANR	872312	Statement	offset	406:11:11396:11401	871710	9	True				
ANR	872313	Statement	+	406:18:11403:11403	871710	10	True				
ANR	872314	Statement	i	406:20:11405:11405	871710	11	True				
ANR	872315	Statement	","	406:21:11406:11406	871710	12	True				
ANR	872316	Statement	r_strbuf_get	406:23:11408:11419	871710	13	True				
ANR	872317	Statement	(	406:36:11421:11421	871710	14	True				
ANR	872318	Statement	&	406:37:11422:11422	871710	15	True				
ANR	872319	Statement	op	406:38:11423:11424	871710	16	True				
ANR	872320	Statement	.	406:40:11425:11425	871710	17	True				
ANR	872321	Statement	buf_asm	406:41:11426:11432	871710	18	True				
ANR	872322	Statement	)	406:48:11433:11433	871710	19	True				
ANR	872323	Statement	)	406:49:11434:11434	871710	20	True				
ANR	872324	ExpressionStatement		406:50:11435:11435	871710	21	True				
ANR	872325	IfStatement	if ( hascolor )		871710	22					
ANR	872326	Condition	hascolor	407:8:11445:11452	871710	0	True				
ANR	872327	Identifier	hascolor		871710	0					
ANR	872328	CompoundStatement		78:18:2362:2362	871710	1					
ANR	872329	ExpressionStatement	r_cons_printf ( pal -> graph_true )	408:5:11462:11493	871710	0	True				
ANR	872330	CallExpression	r_cons_printf ( pal -> graph_true )		871710	0					
ANR	872331	Callee	r_cons_printf		871710	0					
ANR	872332	Identifier	r_cons_printf		871710	0					
ANR	872333	ArgumentList	pal -> graph_true		871710	1					
ANR	872334	Argument	pal -> graph_true		871710	0					
ANR	872335	PtrMemberAccess	pal -> graph_true		871710	0					
ANR	872336	Identifier	pal		871710	0					
ANR	872337	Identifier	graph_true		871710	1					
ANR	872338	Statement	r_cons_printf	410:4:11505:11517	871710	23	True				
ANR	872339	Statement	(	410:18:11519:11519	871710	24	True				
ANR	872340	Statement	"""+0x%08"""	410:19:11520:11527	871710	25	True				
ANR	872341	Statement	PFMT64x	410:27:11528:11534	871710	26	True				
ANR	872342	Statement	"""  %s\\n"""	410:35:11536:11543	871710	27	True				
ANR	872343	Statement	","	410:43:11544:11544	871710	28	True				
ANR	872344	Statement	off	411:5:11551:11553	871710	29	True				
ANR	872345	Statement	+	411:9:11555:11555	871710	30	True				
ANR	872346	Statement	j	411:11:11557:11557	871710	31	True				
ANR	872347	Statement	","	411:12:11558:11558	871710	32	True				
ANR	872348	Statement	r_strbuf_get	411:14:11560:11571	871710	33	True				
ANR	872349	Statement	(	411:27:11573:11573	871710	34	True				
ANR	872350	Statement	&	411:28:11574:11574	871710	35	True				
ANR	872351	Statement	op2	411:29:11575:11577	871710	36	True				
ANR	872352	Statement	.	411:32:11578:11578	871710	37	True				
ANR	872353	Statement	buf_asm	411:33:11579:11585	871710	38	True				
ANR	872354	Statement	)	411:40:11586:11586	871710	39	True				
ANR	872355	Statement	)	411:41:11587:11587	871710	40	True				
ANR	872356	ExpressionStatement		411:42:11588:11588	871710	41	True				
ANR	872357	IfStatement	if ( hascolor )		871710	42					
ANR	872358	Condition	hascolor	412:8:11598:11605	871710	0	True				
ANR	872359	Identifier	hascolor		871710	0					
ANR	872360	CompoundStatement		83:18:2515:2515	871710	1					
ANR	872361	ExpressionStatement	r_cons_printf ( Color_RESET )	413:5:11615:11642	871710	0	True				
ANR	872362	CallExpression	r_cons_printf ( Color_RESET )		871710	0					
ANR	872363	Callee	r_cons_printf		871710	0					
ANR	872364	Identifier	r_cons_printf		871710	0					
ANR	872365	ArgumentList	Color_RESET		871710	1					
ANR	872366	Argument	Color_RESET		871710	0					
ANR	872367	Identifier	Color_RESET		871710	0					
ANR	872368	IfStatement	if ( op . size < 1 )		871710	6					
ANR	872369	Condition	op . size < 1	416:7:11662:11672	871710	0	True				
ANR	872370	RelationalExpression	op . size < 1		871710	0		<			
ANR	872371	MemberAccess	op . size		871710	0					
ANR	872372	Identifier	op		871710	0					
ANR	872373	Identifier	size		871710	1					
ANR	872374	PrimaryExpression	1		871710	1					
ANR	872375	CompoundStatement		87:20:2582:2582	871710	1					
ANR	872376	ExpressionStatement	op . size = 1	417:4:11681:11692	871710	0	True				
ANR	872377	AssignmentExpression	op . size = 1		871710	0		=			
ANR	872378	MemberAccess	op . size		871710	0					
ANR	872379	Identifier	op		871710	0					
ANR	872380	Identifier	size		871710	1					
ANR	872381	PrimaryExpression	1		871710	1					
ANR	872382	ExpressionStatement	i += op . size	419:3:11702:11714	871710	7	True				
ANR	872383	AssignmentExpression	i += op . size		871710	0		+=			
ANR	872384	Identifier	i		871710	0					
ANR	872385	MemberAccess	op . size		871710	1					
ANR	872386	Identifier	op		871710	0					
ANR	872387	Identifier	size		871710	1					
ANR	872388	IfStatement	if ( op2 . size < 1 )		871710	8					
ANR	872389	Condition	op2 . size < 1	420:7:11723:11734	871710	0	True				
ANR	872390	RelationalExpression	op2 . size < 1		871710	0		<			
ANR	872391	MemberAccess	op2 . size		871710	0					
ANR	872392	Identifier	op2		871710	0					
ANR	872393	Identifier	size		871710	1					
ANR	872394	PrimaryExpression	1		871710	1					
ANR	872395	CompoundStatement		91:21:2644:2644	871710	1					
ANR	872396	ExpressionStatement	op2 . size = 1	421:4:11743:11755	871710	0	True				
ANR	872397	AssignmentExpression	op2 . size = 1		871710	0		=			
ANR	872398	MemberAccess	op2 . size		871710	0					
ANR	872399	Identifier	op2		871710	0					
ANR	872400	Identifier	size		871710	1					
ANR	872401	PrimaryExpression	1		871710	1					
ANR	872402	ExpressionStatement	j += op2 . size	423:3:11765:11778	871710	9	True				
ANR	872403	AssignmentExpression	j += op2 . size		871710	0		+=			
ANR	872404	Identifier	j		871710	0					
ANR	872405	MemberAccess	op2 . size		871710	1					
ANR	872406	Identifier	op2		871710	0					
ANR	872407	Identifier	size		871710	1					
ANR	872408	BreakStatement	break ;	425:2:11786:11791	871710	5	True				
ANR	872409	ReturnStatement	return 0 ;	427:1:11797:11805	871710	11	True				
ANR	872410	PrimaryExpression	0		871710	0					
ANR	872411	ReturnType	static int		871710	1					
ANR	872412	Identifier	cmd_cmp_disasm		871710	2					
ANR	872413	ParameterList	"RCore * core , const char * input , int mode"		871710	3					
ANR	872414	Parameter	RCore * core	330:26:9050:9060	871710	0	True				
ANR	872415	ParameterType	RCore *		871710	0					
ANR	872416	Identifier	core		871710	1					
ANR	872417	Parameter	const char * input	330:39:9063:9079	871710	1	True				
ANR	872418	ParameterType	const char *		871710	0					
ANR	872419	Identifier	input		871710	1					
ANR	872420	Parameter	int mode	330:58:9082:9089	871710	2	True				
ANR	872421	ParameterType	int		871710	0					
ANR	872422	Identifier	mode		871710	1					
ANR	872423	CFGEntryNode	ENTRY		871710		True				
ANR	872424	CFGExitNode	EXIT		871710		True				
ANR	872425	Symbol	op2 . size		871710						
ANR	872426	Symbol	* pal		871710						
ANR	872427	Symbol	pal -> graph_false		871710						
ANR	872428	Symbol	* core		871710						
ANR	872429	Symbol	Color_RESET		871710						
ANR	872430	Symbol	core -> assembler		871710						
ANR	872431	Symbol	core -> offset		871710						
ANR	872432	Symbol	& op		871710						
ANR	872433	Symbol	calloc		871710						
ANR	872434	Symbol	r_num_math		871710						
ANR	872435	Symbol	mode		871710						
ANR	872436	Symbol	& op2		871710						
ANR	872437	Symbol	strlen		871710						
ANR	872438	Symbol	hascolor		871710						
ANR	872439	Symbol	core -> io		871710						
ANR	872440	Symbol	pos		871710						
ANR	872441	Symbol	pal -> graph_true		871710						
ANR	872442	Symbol	r_cons_singleton		871710						
ANR	872443	Symbol	pal		871710						
ANR	872444	Symbol	core -> num		871710						
ANR	872445	Symbol	cols		871710						
ANR	872446	Symbol	core -> config		871710						
ANR	872447	Symbol	core -> blocksize		871710						
ANR	872448	Symbol	op		871710						
ANR	872449	Symbol	core -> block		871710						
ANR	872450	Symbol	& op2 . buf_asm		871710						
ANR	872451	Symbol	r_strbuf_equals		871710						
ANR	872452	Symbol	iseq		871710						
ANR	872453	Symbol	false		871710						
ANR	872454	Symbol	i		871710						
ANR	872455	Symbol	j		871710						
ANR	872456	Symbol	colpad		871710						
ANR	872457	Symbol	& op . buf_asm		871710						
ANR	872458	Symbol	off		871710						
ANR	872459	Symbol	op2		871710						
ANR	872460	Symbol	core		871710						
ANR	872461	Symbol	input		871710						
ANR	872462	Symbol	buf		871710						
ANR	872463	Symbol	& r_cons_singleton ( ) -> context -> pal		871710						
ANR	872464	Symbol	r_strbuf_get		871710						
ANR	872465	Symbol	r_config_get_i		871710						
ANR	872466	Symbol	op . size		871710						
ANR	872467	Symbol	r_cons_singleton ( ) -> context		871710						
ANR	872468	Symbol	* r_cons_singleton		871710						
ANR	872469	Symbol	* colpad		871710						
ANR	872470	Symbol	* pos		871710						
ANR	872471	Function	cmd_cp	430:0:11810:12571							
ANR	872472	FunctionDef	"cmd_cp (void * data , const char * input)"		872471	0					
ANR	872473	CompoundStatement		430:49:11859:12571	872471	0					
ANR	872474	IdentifierDeclStatement	RCore * core = ( RCore * ) data ;	431:1:11862:11889	872471	0	True				
ANR	872475	IdentifierDecl	* core = ( RCore * ) data		872471	0					
ANR	872476	IdentifierDeclType	RCore *		872471	0					
ANR	872477	Identifier	core		872471	1					
ANR	872478	AssignmentExpression	* core = ( RCore * ) data		872471	2		=			
ANR	872479	Identifier	core		872471	0					
ANR	872480	CastExpression	( RCore * ) data		872471	1					
ANR	872481	CastTarget	RCore *		872471	0					
ANR	872482	Identifier	data		872471	1					
ANR	872483	IfStatement	if ( input [ 1 ] == '.' )		872471	1					
ANR	872484	Condition	input [ 1 ] == '.'	432:5:11896:11910	872471	0	True				
ANR	872485	EqualityExpression	input [ 1 ] == '.'		872471	0		==			
ANR	872486	ArrayIndexing	input [ 1 ]		872471	0					
ANR	872487	Identifier	input		872471	0					
ANR	872488	PrimaryExpression	1		872471	1					
ANR	872489	PrimaryExpression	'.'		872471	1					
ANR	872490	CompoundStatement		6:2:135:188	872471	1					
ANR	872491	IdentifierDeclStatement	"char * file = r_core_cmd_strf ( core , ""ij~{core.file}"" ) ;"	433:2:11917:11970	872471	0	True				
ANR	872492	IdentifierDecl	"* file = r_core_cmd_strf ( core , ""ij~{core.file}"" )"		872471	0					
ANR	872493	IdentifierDeclType	char *		872471	0					
ANR	872494	Identifier	file		872471	1					
ANR	872495	AssignmentExpression	"* file = r_core_cmd_strf ( core , ""ij~{core.file}"" )"		872471	2		=			
ANR	872496	Identifier	file		872471	0					
ANR	872497	CallExpression	"r_core_cmd_strf ( core , ""ij~{core.file}"" )"		872471	1					
ANR	872498	Callee	r_core_cmd_strf		872471	0					
ANR	872499	Identifier	r_core_cmd_strf		872471	0					
ANR	872500	ArgumentList	core		872471	1					
ANR	872501	Argument	core		872471	0					
ANR	872502	Identifier	core		872471	0					
ANR	872503	Argument	"""ij~{core.file}"""		872471	1					
ANR	872504	PrimaryExpression	"""ij~{core.file}"""		872471	0					
ANR	872505	ExpressionStatement	r_str_trim ( file )	434:2:11974:11991	872471	1	True				
ANR	872506	CallExpression	r_str_trim ( file )		872471	0					
ANR	872507	Callee	r_str_trim		872471	0					
ANR	872508	Identifier	r_str_trim		872471	0					
ANR	872509	ArgumentList	file		872471	1					
ANR	872510	Argument	file		872471	0					
ANR	872511	Identifier	file		872471	0					
ANR	872512	IdentifierDeclStatement	"char * newfile = r_str_newf ( ""%s.%s"" , file , input + 2 ) ;"	435:2:11995:12048	872471	2	True				
ANR	872513	IdentifierDecl	"* newfile = r_str_newf ( ""%s.%s"" , file , input + 2 )"		872471	0					
ANR	872514	IdentifierDeclType	char *		872471	0					
ANR	872515	Identifier	newfile		872471	1					
ANR	872516	AssignmentExpression	"* newfile = r_str_newf ( ""%s.%s"" , file , input + 2 )"		872471	2		=			
ANR	872517	Identifier	newfile		872471	0					
ANR	872518	CallExpression	"r_str_newf ( ""%s.%s"" , file , input + 2 )"		872471	1					
ANR	872519	Callee	r_str_newf		872471	0					
ANR	872520	Identifier	r_str_newf		872471	0					
ANR	872521	ArgumentList	"""%s.%s"""		872471	1					
ANR	872522	Argument	"""%s.%s"""		872471	0					
ANR	872523	PrimaryExpression	"""%s.%s"""		872471	0					
ANR	872524	Argument	file		872471	1					
ANR	872525	Identifier	file		872471	0					
ANR	872526	Argument	input + 2		872471	2					
ANR	872527	AdditiveExpression	input + 2		872471	0		+			
ANR	872528	Identifier	input		872471	0					
ANR	872529	PrimaryExpression	2		872471	1					
ANR	872530	ExpressionStatement	"r_file_copy ( file , newfile )"	436:2:12052:12079	872471	3	True				
ANR	872531	CallExpression	"r_file_copy ( file , newfile )"		872471	0					
ANR	872532	Callee	r_file_copy		872471	0					
ANR	872533	Identifier	r_file_copy		872471	0					
ANR	872534	ArgumentList	file		872471	1					
ANR	872535	Argument	file		872471	0					
ANR	872536	Identifier	file		872471	0					
ANR	872537	Argument	newfile		872471	1					
ANR	872538	Identifier	newfile		872471	0					
ANR	872539	ExpressionStatement	free ( file )	437:2:12083:12094	872471	4	True				
ANR	872540	CallExpression	free ( file )		872471	0					
ANR	872541	Callee	free		872471	0					
ANR	872542	Identifier	free		872471	0					
ANR	872543	ArgumentList	file		872471	1					
ANR	872544	Argument	file		872471	0					
ANR	872545	Identifier	file		872471	0					
ANR	872546	ExpressionStatement	free ( newfile )	438:2:12098:12112	872471	5	True				
ANR	872547	CallExpression	free ( newfile )		872471	0					
ANR	872548	Callee	free		872471	0					
ANR	872549	Identifier	free		872471	0					
ANR	872550	ArgumentList	newfile		872471	1					
ANR	872551	Argument	newfile		872471	0					
ANR	872552	Identifier	newfile		872471	0					
ANR	872553	ReturnStatement	return true ;	439:2:12116:12127	872471	6	True				
ANR	872554	Identifier	true		872471	0					
ANR	872555	IfStatement	if ( strlen ( input ) < 3 )		872471	2					
ANR	872556	Condition	strlen ( input ) < 3	441:5:12137:12154	872471	0	True				
ANR	872557	RelationalExpression	strlen ( input ) < 3		872471	0		<			
ANR	872558	CallExpression	strlen ( input )		872471	0					
ANR	872559	Callee	strlen		872471	0					
ANR	872560	Identifier	strlen		872471	0					
ANR	872561	ArgumentList	input		872471	1					
ANR	872562	Argument	input		872471	0					
ANR	872563	Identifier	input		872471	0					
ANR	872564	PrimaryExpression	3		872471	1					
ANR	872565	CompoundStatement		12:25:297:297	872471	1					
ANR	872566	ExpressionStatement	"eprintf ( ""Usage: cp src dst\\n"" )"	442:2:12161:12192	872471	0	True				
ANR	872567	CallExpression	"eprintf ( ""Usage: cp src dst\\n"" )"		872471	0					
ANR	872568	Callee	eprintf		872471	0					
ANR	872569	Identifier	eprintf		872471	0					
ANR	872570	ArgumentList	"""Usage: cp src dst\\n"""		872471	1					
ANR	872571	Argument	"""Usage: cp src dst\\n"""		872471	0					
ANR	872572	PrimaryExpression	"""Usage: cp src dst\\n"""		872471	0					
ANR	872573	ExpressionStatement	"eprintf ( ""Usage: cp.orig  # cp $file $file.orig\\n"" )"	443:2:12196:12247	872471	1	True				
ANR	872574	CallExpression	"eprintf ( ""Usage: cp.orig  # cp $file $file.orig\\n"" )"		872471	0					
ANR	872575	Callee	eprintf		872471	0					
ANR	872576	Identifier	eprintf		872471	0					
ANR	872577	ArgumentList	"""Usage: cp.orig  # cp $file $file.orig\\n"""		872471	1					
ANR	872578	Argument	"""Usage: cp.orig  # cp $file $file.orig\\n"""		872471	0					
ANR	872579	PrimaryExpression	"""Usage: cp.orig  # cp $file $file.orig\\n"""		872471	0					
ANR	872580	ReturnStatement	return false ;	444:2:12251:12263	872471	2	True				
ANR	872581	Identifier	false		872471	0					
ANR	872582	IdentifierDeclStatement	char * cmd = strdup ( input + 2 ) ;	446:1:12269:12299	872471	3	True				
ANR	872583	IdentifierDecl	* cmd = strdup ( input + 2 )		872471	0					
ANR	872584	IdentifierDeclType	char *		872471	0					
ANR	872585	Identifier	cmd		872471	1					
ANR	872586	AssignmentExpression	* cmd = strdup ( input + 2 )		872471	2		=			
ANR	872587	Identifier	cmd		872471	0					
ANR	872588	CallExpression	strdup ( input + 2 )		872471	1					
ANR	872589	Callee	strdup		872471	0					
ANR	872590	Identifier	strdup		872471	0					
ANR	872591	ArgumentList	input + 2		872471	1					
ANR	872592	Argument	input + 2		872471	0					
ANR	872593	AdditiveExpression	input + 2		872471	0		+			
ANR	872594	Identifier	input		872471	0					
ANR	872595	PrimaryExpression	2		872471	1					
ANR	872596	IfStatement	if ( cmd )		872471	4					
ANR	872597	Condition	cmd	447:5:12306:12308	872471	0	True				
ANR	872598	Identifier	cmd		872471	0					
ANR	872599	CompoundStatement		19:2:455:492	872471	1					
ANR	872600	IdentifierDeclStatement	"char * * files = r_str_argv ( cmd , NULL ) ;"	448:2:12315:12352	872471	0	True				
ANR	872601	IdentifierDecl	"* * files = r_str_argv ( cmd , NULL )"		872471	0					
ANR	872602	IdentifierDeclType	char * *		872471	0					
ANR	872603	Identifier	files		872471	1					
ANR	872604	AssignmentExpression	"* * files = r_str_argv ( cmd , NULL )"		872471	2		=			
ANR	872605	Identifier	files		872471	0					
ANR	872606	CallExpression	"r_str_argv ( cmd , NULL )"		872471	1					
ANR	872607	Callee	r_str_argv		872471	0					
ANR	872608	Identifier	r_str_argv		872471	0					
ANR	872609	ArgumentList	cmd		872471	1					
ANR	872610	Argument	cmd		872471	0					
ANR	872611	Identifier	cmd		872471	0					
ANR	872612	Argument	NULL		872471	1					
ANR	872613	Identifier	NULL		872471	0					
ANR	872614	IfStatement	if ( files [ 0 ] && files [ 1 ] )		872471	1					
ANR	872615	Condition	files [ 0 ] && files [ 1 ]	449:6:12360:12379	872471	0	True				
ANR	872616	AndExpression	files [ 0 ] && files [ 1 ]		872471	0		&&			
ANR	872617	ArrayIndexing	files [ 0 ]		872471	0					
ANR	872618	Identifier	files		872471	0					
ANR	872619	PrimaryExpression	0		872471	1					
ANR	872620	ArrayIndexing	files [ 1 ]		872471	1					
ANR	872621	Identifier	files		872471	0					
ANR	872622	PrimaryExpression	1		872471	1					
ANR	872623	CompoundStatement		21:3:527:569	872471	1					
ANR	872624	IdentifierDeclStatement	"bool rc = r_file_copy ( files [ 0 ] , files [ 1 ] ) ;"	450:3:12387:12429	872471	0	True				
ANR	872625	IdentifierDecl	"rc = r_file_copy ( files [ 0 ] , files [ 1 ] )"		872471	0					
ANR	872626	IdentifierDeclType	bool		872471	0					
ANR	872627	Identifier	rc		872471	1					
ANR	872628	AssignmentExpression	"rc = r_file_copy ( files [ 0 ] , files [ 1 ] )"		872471	2		=			
ANR	872629	Identifier	rc		872471	0					
ANR	872630	CallExpression	"r_file_copy ( files [ 0 ] , files [ 1 ] )"		872471	1					
ANR	872631	Callee	r_file_copy		872471	0					
ANR	872632	Identifier	r_file_copy		872471	0					
ANR	872633	ArgumentList	files [ 0 ]		872471	1					
ANR	872634	Argument	files [ 0 ]		872471	0					
ANR	872635	ArrayIndexing	files [ 0 ]		872471	0					
ANR	872636	Identifier	files		872471	0					
ANR	872637	PrimaryExpression	0		872471	1					
ANR	872638	Argument	files [ 1 ]		872471	1					
ANR	872639	ArrayIndexing	files [ 1 ]		872471	0					
ANR	872640	Identifier	files		872471	0					
ANR	872641	PrimaryExpression	1		872471	1					
ANR	872642	ExpressionStatement	free ( cmd )	451:3:12434:12444	872471	1	True				
ANR	872643	CallExpression	free ( cmd )		872471	0					
ANR	872644	Callee	free		872471	0					
ANR	872645	Identifier	free		872471	0					
ANR	872646	ArgumentList	cmd		872471	1					
ANR	872647	Argument	cmd		872471	0					
ANR	872648	Identifier	cmd		872471	0					
ANR	872649	ExpressionStatement	r_str_argv_free ( files )	452:3:12449:12472	872471	2	True				
ANR	872650	CallExpression	r_str_argv_free ( files )		872471	0					
ANR	872651	Callee	r_str_argv_free		872471	0					
ANR	872652	Identifier	r_str_argv_free		872471	0					
ANR	872653	ArgumentList	files		872471	1					
ANR	872654	Argument	files		872471	0					
ANR	872655	Identifier	files		872471	0					
ANR	872656	ReturnStatement	return rc ;	453:3:12477:12486	872471	3	True				
ANR	872657	Identifier	rc		872471	0					
ANR	872658	ExpressionStatement	r_str_argv_free ( files )	455:2:12494:12517	872471	2	True				
ANR	872659	CallExpression	r_str_argv_free ( files )		872471	0					
ANR	872660	Callee	r_str_argv_free		872471	0					
ANR	872661	Identifier	r_str_argv_free		872471	0					
ANR	872662	ArgumentList	files		872471	1					
ANR	872663	Argument	files		872471	0					
ANR	872664	Identifier	files		872471	0					
ANR	872665	ExpressionStatement	"eprintf ( ""Usage: cp src dst\\n"" )"	457:1:12523:12554	872471	5	True				
ANR	872666	CallExpression	"eprintf ( ""Usage: cp src dst\\n"" )"		872471	0					
ANR	872667	Callee	eprintf		872471	0					
ANR	872668	Identifier	eprintf		872471	0					
ANR	872669	ArgumentList	"""Usage: cp src dst\\n"""		872471	1					
ANR	872670	Argument	"""Usage: cp src dst\\n"""		872471	0					
ANR	872671	PrimaryExpression	"""Usage: cp src dst\\n"""		872471	0					
ANR	872672	ReturnStatement	return false ;	458:1:12557:12569	872471	6	True				
ANR	872673	Identifier	false		872471	0					
ANR	872674	ReturnType	static int		872471	1					
ANR	872675	Identifier	cmd_cp		872471	2					
ANR	872676	ParameterList	"void * data , const char * input"		872471	3					
ANR	872677	Parameter	void * data	430:18:11828:11837	872471	0	True				
ANR	872678	ParameterType	void *		872471	0					
ANR	872679	Identifier	data		872471	1					
ANR	872680	Parameter	const char * input	430:30:11840:11856	872471	1	True				
ANR	872681	ParameterType	const char *		872471	0					
ANR	872682	Identifier	input		872471	1					
ANR	872683	CFGEntryNode	ENTRY		872471		True				
ANR	872684	CFGExitNode	EXIT		872471		True				
ANR	872685	Symbol	NULL		872471						
ANR	872686	Symbol	data		872471						
ANR	872687	Symbol	* input		872471						
ANR	872688	Symbol	false		872471						
ANR	872689	Symbol	r_str_newf		872471						
ANR	872690	Symbol	* files		872471						
ANR	872691	Symbol	input		872471						
ANR	872692	Symbol	core		872471						
ANR	872693	Symbol	r_core_cmd_strf		872471						
ANR	872694	Symbol	strlen		872471						
ANR	872695	Symbol	rc		872471						
ANR	872696	Symbol	file		872471						
ANR	872697	Symbol	r_file_copy		872471						
ANR	872698	Symbol	true		872471						
ANR	872699	Symbol	files		872471						
ANR	872700	Symbol	strdup		872471						
ANR	872701	Symbol	cmd		872471						
ANR	872702	Symbol	newfile		872471						
ANR	872703	Symbol	r_str_argv		872471						
ANR	872704	Function	__core_cmp_bits	461:0:12574:14085							
ANR	872705	FunctionDef	"__core_cmp_bits (RCore * core , ut64 addr)"		872704	0					
ANR	872706	CompoundStatement		461:53:12627:14085	872704	0					
ANR	872707	IdentifierDeclStatement	"const bool scr_color = r_config_get_i ( core -> config , ""scr.color"" ) ;"	462:1:12630:12695	872704	0	True				
ANR	872708	IdentifierDecl	"scr_color = r_config_get_i ( core -> config , ""scr.color"" )"		872704	0					
ANR	872709	IdentifierDeclType	const bool		872704	0					
ANR	872710	Identifier	scr_color		872704	1					
ANR	872711	AssignmentExpression	"scr_color = r_config_get_i ( core -> config , ""scr.color"" )"		872704	2		=			
ANR	872712	Identifier	scr_color		872704	0					
ANR	872713	CallExpression	"r_config_get_i ( core -> config , ""scr.color"" )"		872704	1					
ANR	872714	Callee	r_config_get_i		872704	0					
ANR	872715	Identifier	r_config_get_i		872704	0					
ANR	872716	ArgumentList	core -> config		872704	1					
ANR	872717	Argument	core -> config		872704	0					
ANR	872718	PtrMemberAccess	core -> config		872704	0					
ANR	872719	Identifier	core		872704	0					
ANR	872720	Identifier	config		872704	1					
ANR	872721	Argument	"""scr.color"""		872704	1					
ANR	872722	PrimaryExpression	"""scr.color"""		872704	0					
ANR	872723	IdentifierDeclStatement	int i ;	463:1:12698:12703	872704	1	True				
ANR	872724	IdentifierDecl	i		872704	0					
ANR	872725	IdentifierDeclType	int		872704	0					
ANR	872726	Identifier	i		872704	1					
ANR	872727	IdentifierDeclStatement	"ut8 a , b ;"	464:1:12706:12714	872704	2	True				
ANR	872728	IdentifierDecl	a		872704	0					
ANR	872729	IdentifierDeclType	ut8		872704	0					
ANR	872730	Identifier	a		872704	1					
ANR	872731	IdentifierDecl	b		872704	1					
ANR	872732	IdentifierDeclType	ut8		872704	0					
ANR	872733	Identifier	b		872704	1					
ANR	872734	ExpressionStatement	"r_io_read_at ( core -> io , core -> offset , & a , 1 )"	465:1:12717:12761	872704	3	True				
ANR	872735	CallExpression	"r_io_read_at ( core -> io , core -> offset , & a , 1 )"		872704	0					
ANR	872736	Callee	r_io_read_at		872704	0					
ANR	872737	Identifier	r_io_read_at		872704	0					
ANR	872738	ArgumentList	core -> io		872704	1					
ANR	872739	Argument	core -> io		872704	0					
ANR	872740	PtrMemberAccess	core -> io		872704	0					
ANR	872741	Identifier	core		872704	0					
ANR	872742	Identifier	io		872704	1					
ANR	872743	Argument	core -> offset		872704	1					
ANR	872744	PtrMemberAccess	core -> offset		872704	0					
ANR	872745	Identifier	core		872704	0					
ANR	872746	Identifier	offset		872704	1					
ANR	872747	Argument	& a		872704	2					
ANR	872748	UnaryOperationExpression	& a		872704	0					
ANR	872749	UnaryOperator	&		872704	0					
ANR	872750	Identifier	a		872704	1					
ANR	872751	Argument	1		872704	3					
ANR	872752	PrimaryExpression	1		872704	0					
ANR	872753	ExpressionStatement	"r_io_read_at ( core -> io , addr , & b , 1 )"	466:1:12764:12800	872704	4	True				
ANR	872754	CallExpression	"r_io_read_at ( core -> io , addr , & b , 1 )"		872704	0					
ANR	872755	Callee	r_io_read_at		872704	0					
ANR	872756	Identifier	r_io_read_at		872704	0					
ANR	872757	ArgumentList	core -> io		872704	1					
ANR	872758	Argument	core -> io		872704	0					
ANR	872759	PtrMemberAccess	core -> io		872704	0					
ANR	872760	Identifier	core		872704	0					
ANR	872761	Identifier	io		872704	1					
ANR	872762	Argument	addr		872704	1					
ANR	872763	Identifier	addr		872704	0					
ANR	872764	Argument	& b		872704	2					
ANR	872765	UnaryOperationExpression	& b		872704	0					
ANR	872766	UnaryOperator	&		872704	0					
ANR	872767	Identifier	b		872704	1					
ANR	872768	Argument	1		872704	3					
ANR	872769	PrimaryExpression	1		872704	0					
ANR	872770	IdentifierDeclStatement	RConsPrintablePalette * pal = & r_cons_singleton ( ) -> context -> pal ;	467:1:12803:12866	872704	5	True				
ANR	872771	IdentifierDecl	* pal = & r_cons_singleton ( ) -> context -> pal		872704	0					
ANR	872772	IdentifierDeclType	RConsPrintablePalette *		872704	0					
ANR	872773	Identifier	pal		872704	1					
ANR	872774	AssignmentExpression	* pal = & r_cons_singleton ( ) -> context -> pal		872704	2		=			
ANR	872775	Identifier	pal		872704	0					
ANR	872776	UnaryOperationExpression	& r_cons_singleton ( ) -> context -> pal		872704	1					
ANR	872777	UnaryOperator	&		872704	0					
ANR	872778	PtrMemberAccess	r_cons_singleton ( ) -> context -> pal		872704	1					
ANR	872779	PtrMemberAccess	r_cons_singleton ( ) -> context		872704	0					
ANR	872780	CallExpression	r_cons_singleton ( )		872704	0					
ANR	872781	Callee	r_cons_singleton		872704	0					
ANR	872782	Identifier	r_cons_singleton		872704	0					
ANR	872783	ArgumentList			872704	1					
ANR	872784	Identifier	context		872704	1					
ANR	872785	Identifier	pal		872704	1					
ANR	872786	IdentifierDeclStatement	"const char * color = scr_color ? pal -> offset : """" ;"	468:1:12869:12915	872704	6	True				
ANR	872787	IdentifierDecl	"* color = scr_color ? pal -> offset : """""		872704	0					
ANR	872788	IdentifierDeclType	const char *		872704	0					
ANR	872789	Identifier	color		872704	1					
ANR	872790	AssignmentExpression	"* color = scr_color ? pal -> offset : """""		872704	2		=			
ANR	872791	Identifier	color		872704	0					
ANR	872792	ConditionalExpression	"scr_color ? pal -> offset : """""		872704	1					
ANR	872793	Condition	scr_color		872704	0					
ANR	872794	Identifier	scr_color		872704	0					
ANR	872795	PtrMemberAccess	pal -> offset		872704	1					
ANR	872796	Identifier	pal		872704	0					
ANR	872797	Identifier	offset		872704	1					
ANR	872798	PrimaryExpression	""""""		872704	2					
ANR	872799	IdentifierDeclStatement	"const char * color_end = scr_color ? Color_RESET : """" ;"	469:1:12918:12968	872704	7	True				
ANR	872800	IdentifierDecl	"* color_end = scr_color ? Color_RESET : """""		872704	0					
ANR	872801	IdentifierDeclType	const char *		872704	0					
ANR	872802	Identifier	color_end		872704	1					
ANR	872803	AssignmentExpression	"* color_end = scr_color ? Color_RESET : """""		872704	2		=			
ANR	872804	Identifier	color_end		872704	0					
ANR	872805	ConditionalExpression	"scr_color ? Color_RESET : """""		872704	1					
ANR	872806	Condition	scr_color		872704	0					
ANR	872807	Identifier	scr_color		872704	0					
ANR	872808	Identifier	Color_RESET		872704	1					
ANR	872809	PrimaryExpression	""""""		872704	2					
ANR	872810	IfStatement	"if ( r_config_get_i ( core -> config , ""hex.header"" ) )"		872704	8					
ANR	872811	Condition	"r_config_get_i ( core -> config , ""hex.header"" )"	470:5:12975:13017	872704	0	True				
ANR	872812	CallExpression	"r_config_get_i ( core -> config , ""hex.header"" )"		872704	0					
ANR	872813	Callee	r_config_get_i		872704	0					
ANR	872814	Identifier	r_config_get_i		872704	0					
ANR	872815	ArgumentList	core -> config		872704	1					
ANR	872816	Argument	core -> config		872704	0					
ANR	872817	PtrMemberAccess	core -> config		872704	0					
ANR	872818	Identifier	core		872704	0					
ANR	872819	Identifier	config		872704	1					
ANR	872820	Argument	"""hex.header"""		872704	1					
ANR	872821	PrimaryExpression	"""hex.header"""		872704	0					
ANR	872822	CompoundStatement		12:2:451:503	872704	1					
ANR	872823	Statement	char	471:2:13024:13027	872704	0	True				
ANR	872824	Statement	*	471:7:13029:13029	872704	1	True				
ANR	872825	Statement	n	471:8:13030:13030	872704	2	True				
ANR	872826	Statement	=	471:10:13032:13032	872704	3	True				
ANR	872827	Statement	r_str_newf	471:12:13034:13043	872704	4	True				
ANR	872828	Statement	(	471:23:13045:13045	872704	5	True				
ANR	872829	Statement	"""0x%08"""	471:24:13046:13052	872704	6	True				
ANR	872830	Statement	PFMT64x	471:31:13053:13059	872704	7	True				
ANR	872831	Statement	","	471:38:13060:13060	872704	8	True				
ANR	872832	Statement	core	471:40:13062:13065	872704	9	True				
ANR	872833	Statement	->	471:44:13066:13067	872704	10	True				
ANR	872834	Statement	offset	471:46:13068:13073	872704	11	True				
ANR	872835	Statement	)	471:52:13074:13074	872704	12	True				
ANR	872836	ExpressionStatement		471:53:13075:13075	872704	13	True				
ANR	872837	IdentifierDeclStatement	"const char * extra = r_str_pad ( ' ' , strlen ( n ) - 10 ) ;"	472:2:13079:13131	872704	14	True				
ANR	872838	IdentifierDecl	"* extra = r_str_pad ( ' ' , strlen ( n ) - 10 )"		872704	0					
ANR	872839	IdentifierDeclType	const char *		872704	0					
ANR	872840	Identifier	extra		872704	1					
ANR	872841	AssignmentExpression	"* extra = r_str_pad ( ' ' , strlen ( n ) - 10 )"		872704	2		=			
ANR	872842	Identifier	extra		872704	0					
ANR	872843	CallExpression	"r_str_pad ( ' ' , strlen ( n ) - 10 )"		872704	1					
ANR	872844	Callee	r_str_pad		872704	0					
ANR	872845	Identifier	r_str_pad		872704	0					
ANR	872846	ArgumentList	' '		872704	1					
ANR	872847	Argument	' '		872704	0					
ANR	872848	PrimaryExpression	' '		872704	0					
ANR	872849	Argument	strlen ( n ) - 10		872704	1					
ANR	872850	AdditiveExpression	strlen ( n ) - 10		872704	0		-			
ANR	872851	CallExpression	strlen ( n )		872704	0					
ANR	872852	Callee	strlen		872704	0					
ANR	872853	Identifier	strlen		872704	0					
ANR	872854	ArgumentList	n		872704	1					
ANR	872855	Argument	n		872704	0					
ANR	872856	Identifier	n		872704	0					
ANR	872857	PrimaryExpression	10		872704	1					
ANR	872858	ExpressionStatement	free ( n )	473:2:13135:13143	872704	15	True				
ANR	872859	CallExpression	free ( n )		872704	0					
ANR	872860	Callee	free		872704	0					
ANR	872861	Identifier	free		872704	0					
ANR	872862	ArgumentList	n		872704	1					
ANR	872863	Argument	n		872704	0					
ANR	872864	Identifier	n		872704	0					
ANR	872865	ExpressionStatement	"r_cons_printf ( ""%s- offset -%s  7 6 5 4 3 2 1 0%s\\n"" , color , extra , color_end )"	474:2:13147:13225	872704	16	True				
ANR	872866	CallExpression	"r_cons_printf ( ""%s- offset -%s  7 6 5 4 3 2 1 0%s\\n"" , color , extra , color_end )"		872704	0					
ANR	872867	Callee	r_cons_printf		872704	0					
ANR	872868	Identifier	r_cons_printf		872704	0					
ANR	872869	ArgumentList	"""%s- offset -%s  7 6 5 4 3 2 1 0%s\\n"""		872704	1					
ANR	872870	Argument	"""%s- offset -%s  7 6 5 4 3 2 1 0%s\\n"""		872704	0					
ANR	872871	PrimaryExpression	"""%s- offset -%s  7 6 5 4 3 2 1 0%s\\n"""		872704	0					
ANR	872872	Argument	color		872704	1					
ANR	872873	Identifier	color		872704	0					
ANR	872874	Argument	extra		872704	2					
ANR	872875	Identifier	extra		872704	0					
ANR	872876	Argument	color_end		872704	3					
ANR	872877	Identifier	color_end		872704	0					
ANR	872878	ExpressionStatement	"color = scr_color ? pal -> graph_false : """""	476:1:13231:13270	872704	9	True				
ANR	872879	AssignmentExpression	"color = scr_color ? pal -> graph_false : """""		872704	0		=			
ANR	872880	Identifier	color		872704	0					
ANR	872881	ConditionalExpression	"scr_color ? pal -> graph_false : """""		872704	1					
ANR	872882	Condition	scr_color		872704	0					
ANR	872883	Identifier	scr_color		872704	0					
ANR	872884	PtrMemberAccess	pal -> graph_false		872704	1					
ANR	872885	Identifier	pal		872704	0					
ANR	872886	Identifier	graph_false		872704	1					
ANR	872887	PrimaryExpression	""""""		872704	2					
ANR	872888	ExpressionStatement	"color_end = scr_color ? Color_RESET : """""	477:1:13273:13311	872704	10	True				
ANR	872889	AssignmentExpression	"color_end = scr_color ? Color_RESET : """""		872704	0		=			
ANR	872890	Identifier	color_end		872704	0					
ANR	872891	ConditionalExpression	"scr_color ? Color_RESET : """""		872704	1					
ANR	872892	Condition	scr_color		872704	0					
ANR	872893	Identifier	scr_color		872704	0					
ANR	872894	Identifier	Color_RESET		872704	1					
ANR	872895	PrimaryExpression	""""""		872704	2					
ANR	872896	Statement	r_cons_printf	479:1:13315:13327	872704	11	True				
ANR	872897	Statement	(	479:15:13329:13329	872704	12	True				
ANR	872898	Statement	"""%s0x%08"""	479:16:13330:13338	872704	13	True				
ANR	872899	Statement	PFMT64x	479:25:13339:13345	872704	14	True				
ANR	872900	Statement	"""%s  """	479:32:13346:13351	872704	15	True				
ANR	872901	Statement	","	479:38:13352:13352	872704	16	True				
ANR	872902	Statement	color	479:40:13354:13358	872704	17	True				
ANR	872903	Statement	","	479:45:13359:13359	872704	18	True				
ANR	872904	Statement	core	479:47:13361:13364	872704	19	True				
ANR	872905	Statement	->	479:51:13365:13366	872704	20	True				
ANR	872906	Statement	offset	479:53:13367:13372	872704	21	True				
ANR	872907	Statement	","	479:59:13373:13373	872704	22	True				
ANR	872908	Statement	color_end	479:61:13375:13383	872704	23	True				
ANR	872909	Statement	)	479:70:13384:13384	872704	24	True				
ANR	872910	ExpressionStatement		479:71:13385:13385	872704	25	True				
ANR	872911	ForStatement	for ( i = 7 ; i >= 0 ; i -- )		872704	26					
ANR	872912	ForInit	i = 7 ;	480:6:13393:13398	872704	0	True				
ANR	872913	AssignmentExpression	i = 7		872704	0		=			
ANR	872914	Identifier	i		872704	0					
ANR	872915	PrimaryExpression	7		872704	1					
ANR	872916	Condition	i >= 0	480:13:13400:13405	872704	1	True				
ANR	872917	RelationalExpression	i >= 0		872704	0		>=			
ANR	872918	Identifier	i		872704	0					
ANR	872919	PrimaryExpression	0		872704	1					
ANR	872920	PostIncDecOperationExpression	i --	480:21:13408:13410	872704	2	True				
ANR	872921	Identifier	i		872704	0					
ANR	872922	IncDec	--		872704	1					
ANR	872923	CompoundStatement		22:2:819:845	872704	3					
ANR	872924	IdentifierDeclStatement	bool b0 = ( a & 1 << i ) ? 1 : 0 ;	481:2:13417:13443	872704	0	True				
ANR	872925	IdentifierDecl	b0 = ( a & 1 << i ) ? 1 : 0		872704	0					
ANR	872926	IdentifierDeclType	bool		872704	0					
ANR	872927	Identifier	b0		872704	1					
ANR	872928	AssignmentExpression	b0 = ( a & 1 << i ) ? 1 : 0		872704	2		=			
ANR	872929	Identifier	b0		872704	0					
ANR	872930	ConditionalExpression	( a & 1 << i ) ? 1 : 0		872704	1					
ANR	872931	Condition	a & 1 << i		872704	0					
ANR	872932	BitAndExpression	a & 1 << i		872704	0		&			
ANR	872933	Identifier	a		872704	0					
ANR	872934	ShiftExpression	1 << i		872704	1		<<			
ANR	872935	PrimaryExpression	1		872704	0					
ANR	872936	Identifier	i		872704	1					
ANR	872937	PrimaryExpression	1		872704	1					
ANR	872938	PrimaryExpression	0		872704	2					
ANR	872939	IdentifierDeclStatement	bool b1 = ( b & 1 << i ) ? 1 : 0 ;	482:2:13447:13473	872704	1	True				
ANR	872940	IdentifierDecl	b1 = ( b & 1 << i ) ? 1 : 0		872704	0					
ANR	872941	IdentifierDeclType	bool		872704	0					
ANR	872942	Identifier	b1		872704	1					
ANR	872943	AssignmentExpression	b1 = ( b & 1 << i ) ? 1 : 0		872704	2		=			
ANR	872944	Identifier	b1		872704	0					
ANR	872945	ConditionalExpression	( b & 1 << i ) ? 1 : 0		872704	1					
ANR	872946	Condition	b & 1 << i		872704	0					
ANR	872947	BitAndExpression	b & 1 << i		872704	0		&			
ANR	872948	Identifier	b		872704	0					
ANR	872949	ShiftExpression	1 << i		872704	1		<<			
ANR	872950	PrimaryExpression	1		872704	0					
ANR	872951	Identifier	i		872704	1					
ANR	872952	PrimaryExpression	1		872704	1					
ANR	872953	PrimaryExpression	0		872704	2					
ANR	872954	ExpressionStatement	"color = scr_color ? ( b0 == b1 ) ? """" : b0 ? pal -> graph_true : pal -> graph_false : """""	483:2:13477:13552	872704	2	True				
ANR	872955	AssignmentExpression	"color = scr_color ? ( b0 == b1 ) ? """" : b0 ? pal -> graph_true : pal -> graph_false : """""		872704	0		=			
ANR	872956	Identifier	color		872704	0					
ANR	872957	ConditionalExpression	"scr_color ? ( b0 == b1 ) ? """" : b0 ? pal -> graph_true : pal -> graph_false : """""		872704	1					
ANR	872958	Condition	scr_color		872704	0					
ANR	872959	Identifier	scr_color		872704	0					
ANR	872960	ConditionalExpression	"( b0 == b1 ) ? """" : b0 ? pal -> graph_true : pal -> graph_false"		872704	1					
ANR	872961	Condition	b0 == b1		872704	0					
ANR	872962	EqualityExpression	b0 == b1		872704	0		==			
ANR	872963	Identifier	b0		872704	0					
ANR	872964	Identifier	b1		872704	1					
ANR	872965	PrimaryExpression	""""""		872704	1					
ANR	872966	ConditionalExpression	b0 ? pal -> graph_true : pal -> graph_false		872704	2					
ANR	872967	Condition	b0		872704	0					
ANR	872968	Identifier	b0		872704	0					
ANR	872969	PtrMemberAccess	pal -> graph_true		872704	1					
ANR	872970	Identifier	pal		872704	0					
ANR	872971	Identifier	graph_true		872704	1					
ANR	872972	PtrMemberAccess	pal -> graph_false		872704	2					
ANR	872973	Identifier	pal		872704	0					
ANR	872974	Identifier	graph_false		872704	1					
ANR	872975	PrimaryExpression	""""""		872704	2					
ANR	872976	ExpressionStatement	"color_end = scr_color ? Color_RESET : """""	484:2:13556:13595	872704	3	True				
ANR	872977	AssignmentExpression	"color_end = scr_color ? Color_RESET : """""		872704	0		=			
ANR	872978	Identifier	color_end		872704	0					
ANR	872979	ConditionalExpression	"scr_color ? Color_RESET : """""		872704	1					
ANR	872980	Condition	scr_color		872704	0					
ANR	872981	Identifier	scr_color		872704	0					
ANR	872982	Identifier	Color_RESET		872704	1					
ANR	872983	PrimaryExpression	""""""		872704	2					
ANR	872984	ExpressionStatement	"r_cons_printf ( ""%s%d%s "" , color , b0 , color_end )"	485:2:13599:13646	872704	4	True				
ANR	872985	CallExpression	"r_cons_printf ( ""%s%d%s "" , color , b0 , color_end )"		872704	0					
ANR	872986	Callee	r_cons_printf		872704	0					
ANR	872987	Identifier	r_cons_printf		872704	0					
ANR	872988	ArgumentList	"""%s%d%s """		872704	1					
ANR	872989	Argument	"""%s%d%s """		872704	0					
ANR	872990	PrimaryExpression	"""%s%d%s """		872704	0					
ANR	872991	Argument	color		872704	1					
ANR	872992	Identifier	color		872704	0					
ANR	872993	Argument	b0		872704	2					
ANR	872994	Identifier	b0		872704	0					
ANR	872995	Argument	color_end		872704	3					
ANR	872996	Identifier	color_end		872704	0					
ANR	872997	ExpressionStatement	"color = scr_color ? pal -> graph_true : """""	487:1:13652:13690	872704	27	True				
ANR	872998	AssignmentExpression	"color = scr_color ? pal -> graph_true : """""		872704	0		=			
ANR	872999	Identifier	color		872704	0					
ANR	873000	ConditionalExpression	"scr_color ? pal -> graph_true : """""		872704	1					
ANR	873001	Condition	scr_color		872704	0					
ANR	873002	Identifier	scr_color		872704	0					
ANR	873003	PtrMemberAccess	pal -> graph_true		872704	1					
ANR	873004	Identifier	pal		872704	0					
ANR	873005	Identifier	graph_true		872704	1					
ANR	873006	PrimaryExpression	""""""		872704	2					
ANR	873007	ExpressionStatement	"color_end = scr_color ? Color_RESET : """""	488:1:13693:13731	872704	28	True				
ANR	873008	AssignmentExpression	"color_end = scr_color ? Color_RESET : """""		872704	0		=			
ANR	873009	Identifier	color_end		872704	0					
ANR	873010	ConditionalExpression	"scr_color ? Color_RESET : """""		872704	1					
ANR	873011	Condition	scr_color		872704	0					
ANR	873012	Identifier	scr_color		872704	0					
ANR	873013	Identifier	Color_RESET		872704	1					
ANR	873014	PrimaryExpression	""""""		872704	2					
ANR	873015	Statement	r_cons_printf	489:1:13734:13746	872704	29	True				
ANR	873016	Statement	(	489:15:13748:13748	872704	30	True				
ANR	873017	Statement	"""\\n%s0x%08"""	489:16:13749:13759	872704	31	True				
ANR	873018	Statement	PFMT64x	489:27:13760:13766	872704	32	True				
ANR	873019	Statement	"""%s  """	489:34:13767:13772	872704	33	True				
ANR	873020	Statement	","	489:40:13773:13773	872704	34	True				
ANR	873021	Statement	color	489:42:13775:13779	872704	35	True				
ANR	873022	Statement	","	489:47:13780:13780	872704	36	True				
ANR	873023	Statement	addr	489:49:13782:13785	872704	37	True				
ANR	873024	Statement	","	489:53:13786:13786	872704	38	True				
ANR	873025	Statement	color_end	489:55:13788:13796	872704	39	True				
ANR	873026	Statement	)	489:64:13797:13797	872704	40	True				
ANR	873027	ExpressionStatement		489:65:13798:13798	872704	41	True				
ANR	873028	ForStatement	for ( i = 7 ; i >= 0 ; i -- )		872704	42					
ANR	873029	ForInit	i = 7 ;	490:6:13806:13811	872704	0	True				
ANR	873030	AssignmentExpression	i = 7		872704	0		=			
ANR	873031	Identifier	i		872704	0					
ANR	873032	PrimaryExpression	7		872704	1					
ANR	873033	Condition	i >= 0	490:13:13813:13818	872704	1	True				
ANR	873034	RelationalExpression	i >= 0		872704	0		>=			
ANR	873035	Identifier	i		872704	0					
ANR	873036	PrimaryExpression	0		872704	1					
ANR	873037	PostIncDecOperationExpression	i --	490:21:13821:13823	872704	2	True				
ANR	873038	Identifier	i		872704	0					
ANR	873039	IncDec	--		872704	1					
ANR	873040	CompoundStatement		32:2:1232:1258	872704	3					
ANR	873041	IdentifierDeclStatement	bool b0 = ( a & 1 << i ) ? 1 : 0 ;	491:2:13830:13856	872704	0	True				
ANR	873042	IdentifierDecl	b0 = ( a & 1 << i ) ? 1 : 0		872704	0					
ANR	873043	IdentifierDeclType	bool		872704	0					
ANR	873044	Identifier	b0		872704	1					
ANR	873045	AssignmentExpression	b0 = ( a & 1 << i ) ? 1 : 0		872704	2		=			
ANR	873046	Identifier	b0		872704	0					
ANR	873047	ConditionalExpression	( a & 1 << i ) ? 1 : 0		872704	1					
ANR	873048	Condition	a & 1 << i		872704	0					
ANR	873049	BitAndExpression	a & 1 << i		872704	0		&			
ANR	873050	Identifier	a		872704	0					
ANR	873051	ShiftExpression	1 << i		872704	1		<<			
ANR	873052	PrimaryExpression	1		872704	0					
ANR	873053	Identifier	i		872704	1					
ANR	873054	PrimaryExpression	1		872704	1					
ANR	873055	PrimaryExpression	0		872704	2					
ANR	873056	IdentifierDeclStatement	bool b1 = ( b & 1 << i ) ? 1 : 0 ;	492:2:13860:13886	872704	1	True				
ANR	873057	IdentifierDecl	b1 = ( b & 1 << i ) ? 1 : 0		872704	0					
ANR	873058	IdentifierDeclType	bool		872704	0					
ANR	873059	Identifier	b1		872704	1					
ANR	873060	AssignmentExpression	b1 = ( b & 1 << i ) ? 1 : 0		872704	2		=			
ANR	873061	Identifier	b1		872704	0					
ANR	873062	ConditionalExpression	( b & 1 << i ) ? 1 : 0		872704	1					
ANR	873063	Condition	b & 1 << i		872704	0					
ANR	873064	BitAndExpression	b & 1 << i		872704	0		&			
ANR	873065	Identifier	b		872704	0					
ANR	873066	ShiftExpression	1 << i		872704	1		<<			
ANR	873067	PrimaryExpression	1		872704	0					
ANR	873068	Identifier	i		872704	1					
ANR	873069	PrimaryExpression	1		872704	1					
ANR	873070	PrimaryExpression	0		872704	2					
ANR	873071	ExpressionStatement	"color = scr_color ? ( b0 == b1 ) ? """" : b1 ? pal -> graph_true : pal -> graph_false : """""	493:2:13890:13966	872704	2	True				
ANR	873072	AssignmentExpression	"color = scr_color ? ( b0 == b1 ) ? """" : b1 ? pal -> graph_true : pal -> graph_false : """""		872704	0		=			
ANR	873073	Identifier	color		872704	0					
ANR	873074	ConditionalExpression	"scr_color ? ( b0 == b1 ) ? """" : b1 ? pal -> graph_true : pal -> graph_false : """""		872704	1					
ANR	873075	Condition	scr_color		872704	0					
ANR	873076	Identifier	scr_color		872704	0					
ANR	873077	ConditionalExpression	"( b0 == b1 ) ? """" : b1 ? pal -> graph_true : pal -> graph_false"		872704	1					
ANR	873078	Condition	b0 == b1		872704	0					
ANR	873079	EqualityExpression	b0 == b1		872704	0		==			
ANR	873080	Identifier	b0		872704	0					
ANR	873081	Identifier	b1		872704	1					
ANR	873082	PrimaryExpression	""""""		872704	1					
ANR	873083	ConditionalExpression	b1 ? pal -> graph_true : pal -> graph_false		872704	2					
ANR	873084	Condition	b1		872704	0					
ANR	873085	Identifier	b1		872704	0					
ANR	873086	PtrMemberAccess	pal -> graph_true		872704	1					
ANR	873087	Identifier	pal		872704	0					
ANR	873088	Identifier	graph_true		872704	1					
ANR	873089	PtrMemberAccess	pal -> graph_false		872704	2					
ANR	873090	Identifier	pal		872704	0					
ANR	873091	Identifier	graph_false		872704	1					
ANR	873092	PrimaryExpression	""""""		872704	2					
ANR	873093	ExpressionStatement	"color_end = scr_color ? Color_RESET : """""	494:2:13970:14009	872704	3	True				
ANR	873094	AssignmentExpression	"color_end = scr_color ? Color_RESET : """""		872704	0		=			
ANR	873095	Identifier	color_end		872704	0					
ANR	873096	ConditionalExpression	"scr_color ? Color_RESET : """""		872704	1					
ANR	873097	Condition	scr_color		872704	0					
ANR	873098	Identifier	scr_color		872704	0					
ANR	873099	Identifier	Color_RESET		872704	1					
ANR	873100	PrimaryExpression	""""""		872704	2					
ANR	873101	ExpressionStatement	"r_cons_printf ( ""%s%d%s "" , color , b1 , color_end )"	495:2:14013:14060	872704	4	True				
ANR	873102	CallExpression	"r_cons_printf ( ""%s%d%s "" , color , b1 , color_end )"		872704	0					
ANR	873103	Callee	r_cons_printf		872704	0					
ANR	873104	Identifier	r_cons_printf		872704	0					
ANR	873105	ArgumentList	"""%s%d%s """		872704	1					
ANR	873106	Argument	"""%s%d%s """		872704	0					
ANR	873107	PrimaryExpression	"""%s%d%s """		872704	0					
ANR	873108	Argument	color		872704	1					
ANR	873109	Identifier	color		872704	0					
ANR	873110	Argument	b1		872704	2					
ANR	873111	Identifier	b1		872704	0					
ANR	873112	Argument	color_end		872704	3					
ANR	873113	Identifier	color_end		872704	0					
ANR	873114	ExpressionStatement	r_cons_newline ( )	497:1:14066:14083	872704	43	True				
ANR	873115	CallExpression	r_cons_newline ( )		872704	0					
ANR	873116	Callee	r_cons_newline		872704	0					
ANR	873117	Identifier	r_cons_newline		872704	0					
ANR	873118	ArgumentList			872704	1					
ANR	873119	ReturnType	static void		872704	1					
ANR	873120	Identifier	__core_cmp_bits		872704	2					
ANR	873121	ParameterList	"RCore * core , ut64 addr"		872704	3					
ANR	873122	Parameter	RCore * core	461:29:12603:12613	872704	0	True				
ANR	873123	ParameterType	RCore *		872704	0					
ANR	873124	Identifier	core		872704	1					
ANR	873125	Parameter	ut64 addr	461:42:12616:12624	872704	1	True				
ANR	873126	ParameterType	ut64		872704	0					
ANR	873127	Identifier	addr		872704	1					
ANR	873128	CFGEntryNode	ENTRY		872704		True				
ANR	873129	CFGExitNode	EXIT		872704		True				
ANR	873130	Symbol	color		872704						
ANR	873131	Symbol	* pal		872704						
ANR	873132	Symbol	pal -> graph_false		872704						
ANR	873133	Symbol	pal -> offset		872704						
ANR	873134	Symbol	* core		872704						
ANR	873135	Symbol	Color_RESET		872704						
ANR	873136	Symbol	core -> offset		872704						
ANR	873137	Symbol	b0		872704						
ANR	873138	Symbol	b1		872704						
ANR	873139	Symbol	strlen		872704						
ANR	873140	Symbol	core -> io		872704						
ANR	873141	Symbol	pal -> graph_true		872704						
ANR	873142	Symbol	extra		872704						
ANR	873143	Symbol	r_cons_singleton		872704						
ANR	873144	Symbol	scr_color		872704						
ANR	873145	Symbol	pal		872704						
ANR	873146	Symbol	addr		872704						
ANR	873147	Symbol	core -> config		872704						
ANR	873148	Symbol	a		872704						
ANR	873149	Symbol	b		872704						
ANR	873150	Symbol	r_str_pad		872704						
ANR	873151	Symbol	& a		872704						
ANR	873152	Symbol	& b		872704						
ANR	873153	Symbol	color_end		872704						
ANR	873154	Symbol	i		872704						
ANR	873155	Symbol	n		872704						
ANR	873156	Symbol	core		872704						
ANR	873157	Symbol	& r_cons_singleton ( ) -> context -> pal		872704						
ANR	873158	Symbol	r_config_get_i		872704						
ANR	873159	Symbol	r_cons_singleton ( ) -> context		872704						
ANR	873160	Symbol	* r_cons_singleton		872704						
ANR	873161	Function	cmd_cmp	500:0:14088:25093							
ANR	873162	FunctionDef	"cmd_cmp (void * data , const char * input)"		873161	0					
ANR	873163	CompoundStatement		500:50:14138:25093	873161	0					
ANR	873164	Statement	static	501:1:14141:14146	873161	0	True				
ANR	873165	IdentifierDeclStatement	char * oldcwd = NULL ;	501:8:14148:14167	873161	1	True				
ANR	873166	IdentifierDecl	* oldcwd = NULL		873161	0					
ANR	873167	IdentifierDeclType	char *		873161	0					
ANR	873168	Identifier	oldcwd		873161	1					
ANR	873169	AssignmentExpression	* oldcwd = NULL		873161	2		=			
ANR	873170	Identifier	NULL		873161	0					
ANR	873171	Identifier	NULL		873161	1					
ANR	873172	IdentifierDeclStatement	"int ret = 0 , i , mode = 0 ;"	502:1:14170:14194	873161	2	True				
ANR	873173	IdentifierDecl	ret = 0		873161	0					
ANR	873174	IdentifierDeclType	int		873161	0					
ANR	873175	Identifier	ret		873161	1					
ANR	873176	AssignmentExpression	ret = 0		873161	2		=			
ANR	873177	Identifier	ret		873161	0					
ANR	873178	PrimaryExpression	0		873161	1					
ANR	873179	IdentifierDecl	i		873161	1					
ANR	873180	IdentifierDeclType	int		873161	0					
ANR	873181	Identifier	i		873161	1					
ANR	873182	IdentifierDecl	mode = 0		873161	2					
ANR	873183	IdentifierDeclType	int		873161	0					
ANR	873184	Identifier	mode		873161	1					
ANR	873185	AssignmentExpression	mode = 0		873161	2		=			
ANR	873186	Identifier	mode		873161	0					
ANR	873187	PrimaryExpression	0		873161	1					
ANR	873188	IdentifierDeclStatement	RCore * core = ( RCore * ) data ;	503:1:14197:14224	873161	3	True				
ANR	873189	IdentifierDecl	* core = ( RCore * ) data		873161	0					
ANR	873190	IdentifierDeclType	RCore *		873161	0					
ANR	873191	Identifier	core		873161	1					
ANR	873192	AssignmentExpression	* core = ( RCore * ) data		873161	2		=			
ANR	873193	Identifier	core		873161	0					
ANR	873194	CastExpression	( RCore * ) data		873161	1					
ANR	873195	CastTarget	RCore *		873161	0					
ANR	873196	Identifier	data		873161	1					
ANR	873197	IdentifierDeclStatement	ut64 val = UT64_MAX ;	504:1:14227:14246	873161	4	True				
ANR	873198	IdentifierDecl	val = UT64_MAX		873161	0					
ANR	873199	IdentifierDeclType	ut64		873161	0					
ANR	873200	Identifier	val		873161	1					
ANR	873201	AssignmentExpression	val = UT64_MAX		873161	2		=			
ANR	873202	Identifier	UT64_MAX		873161	0					
ANR	873203	Identifier	UT64_MAX		873161	1					
ANR	873204	IdentifierDeclStatement	char * filled ;	505:1:14249:14261	873161	5	True				
ANR	873205	IdentifierDecl	* filled		873161	0					
ANR	873206	IdentifierDeclType	char *		873161	0					
ANR	873207	Identifier	filled		873161	1					
ANR	873208	IdentifierDeclStatement	ut8 * buf ;	506:1:14264:14272	873161	6	True				
ANR	873209	IdentifierDecl	* buf		873161	0					
ANR	873210	IdentifierDeclType	ut8 *		873161	0					
ANR	873211	Identifier	buf		873161	1					
ANR	873212	IdentifierDeclStatement	ut16 v16 ;	507:1:14275:14283	873161	7	True				
ANR	873213	IdentifierDecl	v16		873161	0					
ANR	873214	IdentifierDeclType	ut16		873161	0					
ANR	873215	Identifier	v16		873161	1					
ANR	873216	IdentifierDeclStatement	ut32 v32 ;	508:1:14286:14294	873161	8	True				
ANR	873217	IdentifierDecl	v32		873161	0					
ANR	873218	IdentifierDeclType	ut32		873161	0					
ANR	873219	Identifier	v32		873161	1					
ANR	873220	IdentifierDeclStatement	ut64 v64 ;	509:1:14297:14305	873161	9	True				
ANR	873221	IdentifierDecl	v64		873161	0					
ANR	873222	IdentifierDeclType	ut64		873161	0					
ANR	873223	Identifier	v64		873161	1					
ANR	873224	IdentifierDeclStatement	FILE * fd ;	510:1:14308:14316	873161	10	True				
ANR	873225	IdentifierDecl	* fd		873161	0					
ANR	873226	IdentifierDeclType	FILE *		873161	0					
ANR	873227	Identifier	fd		873161	1					
ANR	873228	IdentifierDeclStatement	const ut8 * block = core -> block ;	511:1:14319:14349	873161	11	True				
ANR	873229	IdentifierDecl	* block = core -> block		873161	0					
ANR	873230	IdentifierDeclType	const ut8 *		873161	0					
ANR	873231	Identifier	block		873161	1					
ANR	873232	AssignmentExpression	* block = core -> block		873161	2		=			
ANR	873233	Identifier	block		873161	0					
ANR	873234	PtrMemberAccess	core -> block		873161	1					
ANR	873235	Identifier	core		873161	0					
ANR	873236	Identifier	block		873161	1					
ANR	873237	SwitchStatement	switch ( * input )		873161	12					
ANR	873238	Condition	* input	513:9:14361:14366	873161	0	True				
ANR	873239	UnaryOperationExpression	* input		873161	0					
ANR	873240	UnaryOperator	*		873161	0					
ANR	873241	Identifier	input		873161	1					
ANR	873242	CompoundStatement		14:17:230:230	873161	1					
ANR	873243	Label	case 'p' :	514:1:14372:14380	873161	0	True				
ANR	873244	ReturnStatement	"return cmd_cp ( data , input ) ;"	515:2:14384:14411	873161	1	True				
ANR	873245	CallExpression	"cmd_cp ( data , input )"		873161	0					
ANR	873246	Callee	cmd_cp		873161	0					
ANR	873247	Identifier	cmd_cp		873161	0					
ANR	873248	ArgumentList	data		873161	1					
ANR	873249	Argument	data		873161	0					
ANR	873250	Identifier	data		873161	0					
ANR	873251	Argument	input		873161	1					
ANR	873252	Identifier	input		873161	0					
ANR	873253	BreakStatement	break ;	516:2:14415:14420	873161	2	True				
ANR	873254	Label	case 'a' :	517:1:14423:14431	873161	3	True				
ANR	873255	IfStatement	if ( input [ 1 ] == 't' )		873161	4					
ANR	873256	Condition	input [ 1 ] == 't'	518:6:14448:14462	873161	0	True				
ANR	873257	EqualityExpression	input [ 1 ] == 't'		873161	0		==			
ANR	873258	ArrayIndexing	input [ 1 ]		873161	0					
ANR	873259	Identifier	input		873161	0					
ANR	873260	PrimaryExpression	1		873161	1					
ANR	873261	PrimaryExpression	't'		873161	1					
ANR	873262	CompoundStatement		20:3:331:375	873161	1					
ANR	873263	IdentifierDeclStatement	const char * path = r_str_trim_ro ( input + 2 ) ;	519:3:14470:14514	873161	0	True				
ANR	873264	IdentifierDecl	* path = r_str_trim_ro ( input + 2 )		873161	0					
ANR	873265	IdentifierDeclType	const char *		873161	0					
ANR	873266	Identifier	path		873161	1					
ANR	873267	AssignmentExpression	* path = r_str_trim_ro ( input + 2 )		873161	2		=			
ANR	873268	Identifier	path		873161	0					
ANR	873269	CallExpression	r_str_trim_ro ( input + 2 )		873161	1					
ANR	873270	Callee	r_str_trim_ro		873161	0					
ANR	873271	Identifier	r_str_trim_ro		873161	0					
ANR	873272	ArgumentList	input + 2		873161	1					
ANR	873273	Argument	input + 2		873161	0					
ANR	873274	AdditiveExpression	input + 2		873161	0		+			
ANR	873275	Identifier	input		873161	0					
ANR	873276	PrimaryExpression	2		873161	1					
ANR	873277	IfStatement	if ( * path == '$' )		873161	1					
ANR	873278	Condition	* path == '$'	520:7:14523:14534	873161	0	True				
ANR	873279	EqualityExpression	* path == '$'		873161	0		==			
ANR	873280	UnaryOperationExpression	* path		873161	0					
ANR	873281	UnaryOperator	*		873161	0					
ANR	873282	Identifier	path		873161	1					
ANR	873283	PrimaryExpression	'$'		873161	1					
ANR	873284	CompoundStatement		22:4:404:463	873161	1					
ANR	873285	IdentifierDeclStatement	"const char * oldText = r_cmd_alias_get ( core -> rcmd , path , 1 ) ;"	521:4:14543:14602	873161	0	True				
ANR	873286	IdentifierDecl	"* oldText = r_cmd_alias_get ( core -> rcmd , path , 1 )"		873161	0					
ANR	873287	IdentifierDeclType	const char *		873161	0					
ANR	873288	Identifier	oldText		873161	1					
ANR	873289	AssignmentExpression	"* oldText = r_cmd_alias_get ( core -> rcmd , path , 1 )"		873161	2		=			
ANR	873290	Identifier	oldText		873161	0					
ANR	873291	CallExpression	"r_cmd_alias_get ( core -> rcmd , path , 1 )"		873161	1					
ANR	873292	Callee	r_cmd_alias_get		873161	0					
ANR	873293	Identifier	r_cmd_alias_get		873161	0					
ANR	873294	ArgumentList	core -> rcmd		873161	1					
ANR	873295	Argument	core -> rcmd		873161	0					
ANR	873296	PtrMemberAccess	core -> rcmd		873161	0					
ANR	873297	Identifier	core		873161	0					
ANR	873298	Identifier	rcmd		873161	1					
ANR	873299	Argument	path		873161	1					
ANR	873300	Identifier	path		873161	0					
ANR	873301	Argument	1		873161	2					
ANR	873302	PrimaryExpression	1		873161	0					
ANR	873303	IfStatement	if ( oldText )		873161	1					
ANR	873304	Condition	oldText	522:8:14612:14618	873161	0	True				
ANR	873305	Identifier	oldText		873161	0					
ANR	873306	CompoundStatement		23:17:482:482	873161	1					
ANR	873307	ExpressionStatement	"r_cons_printf ( ""%s\\n"" , oldText + 1 )"	523:5:14628:14663	873161	0	True				
ANR	873308	CallExpression	"r_cons_printf ( ""%s\\n"" , oldText + 1 )"		873161	0					
ANR	873309	Callee	r_cons_printf		873161	0					
ANR	873310	Identifier	r_cons_printf		873161	0					
ANR	873311	ArgumentList	"""%s\\n"""		873161	1					
ANR	873312	Argument	"""%s\\n"""		873161	0					
ANR	873313	PrimaryExpression	"""%s\\n"""		873161	0					
ANR	873314	Argument	oldText + 1		873161	1					
ANR	873315	AdditiveExpression	oldText + 1		873161	0		+			
ANR	873316	Identifier	oldText		873161	0					
ANR	873317	PrimaryExpression	1		873161	1					
ANR	873318	ElseStatement	else		873161	0					
ANR	873319	CompoundStatement		26:10:542:542	873161	0					
ANR	873320	IfStatement	"if ( r_fs_check ( core -> fs , path ) )"		873161	0					
ANR	873321	Condition	"r_fs_check ( core -> fs , path )"	526:8:14691:14717	873161	0	True				
ANR	873322	CallExpression	"r_fs_check ( core -> fs , path )"		873161	0					
ANR	873323	Callee	r_fs_check		873161	0					
ANR	873324	Identifier	r_fs_check		873161	0					
ANR	873325	ArgumentList	core -> fs		873161	1					
ANR	873326	Argument	core -> fs		873161	0					
ANR	873327	PtrMemberAccess	core -> fs		873161	0					
ANR	873328	Identifier	core		873161	0					
ANR	873329	Identifier	fs		873161	1					
ANR	873330	Argument	path		873161	1					
ANR	873331	Identifier	path		873161	0					
ANR	873332	CompoundStatement		27:37:581:581	873161	1					
ANR	873333	ExpressionStatement	"r_core_cmdf ( core , ""mg %s"" , path )"	527:5:14727:14760	873161	0	True				
ANR	873334	CallExpression	"r_core_cmdf ( core , ""mg %s"" , path )"		873161	0					
ANR	873335	Callee	r_core_cmdf		873161	0					
ANR	873336	Identifier	r_core_cmdf		873161	0					
ANR	873337	ArgumentList	core		873161	1					
ANR	873338	Argument	core		873161	0					
ANR	873339	Identifier	core		873161	0					
ANR	873340	Argument	"""mg %s"""		873161	1					
ANR	873341	PrimaryExpression	"""mg %s"""		873161	0					
ANR	873342	Argument	path		873161	2					
ANR	873343	Identifier	path		873161	0					
ANR	873344	ElseStatement	else		873161	0					
ANR	873345	CompoundStatement		30:5:641:672	873161	0					
ANR	873346	IdentifierDeclStatement	char * res = r_syscmd_cat ( path ) ;	529:5:14780:14811	873161	0	True				
ANR	873347	IdentifierDecl	* res = r_syscmd_cat ( path )		873161	0					
ANR	873348	IdentifierDeclType	char *		873161	0					
ANR	873349	Identifier	res		873161	1					
ANR	873350	AssignmentExpression	* res = r_syscmd_cat ( path )		873161	2		=			
ANR	873351	Identifier	res		873161	0					
ANR	873352	CallExpression	r_syscmd_cat ( path )		873161	1					
ANR	873353	Callee	r_syscmd_cat		873161	0					
ANR	873354	Identifier	r_syscmd_cat		873161	0					
ANR	873355	ArgumentList	path		873161	1					
ANR	873356	Argument	path		873161	0					
ANR	873357	Identifier	path		873161	0					
ANR	873358	IfStatement	if ( res )		873161	1					
ANR	873359	Condition	res	530:9:14822:14824	873161	0	True				
ANR	873360	Identifier	res		873161	0					
ANR	873361	CompoundStatement		31:14:688:688	873161	1					
ANR	873362	ExpressionStatement	r_cons_print ( res )	531:6:14835:14853	873161	0	True				
ANR	873363	CallExpression	r_cons_print ( res )		873161	0					
ANR	873364	Callee	r_cons_print		873161	0					
ANR	873365	Identifier	r_cons_print		873161	0					
ANR	873366	ArgumentList	res		873161	1					
ANR	873367	Argument	res		873161	0					
ANR	873368	Identifier	res		873161	0					
ANR	873369	ExpressionStatement	free ( res )	532:6:14861:14871	873161	1	True				
ANR	873370	CallExpression	free ( res )		873161	0					
ANR	873371	Callee	free		873161	0					
ANR	873372	Identifier	free		873161	0					
ANR	873373	ArgumentList	res		873161	1					
ANR	873374	Argument	res		873161	0					
ANR	873375	Identifier	res		873161	0					
ANR	873376	BreakStatement	break ;	537:2:14897:14902	873161	5	True				
ANR	873377	Label	case 'w' :	538:1:14905:14913	873161	6	True				
ANR	873378	ExpressionStatement	"cmd_cmp_watcher ( core , input + 1 )"	539:2:14917:14950	873161	7	True				
ANR	873379	CallExpression	"cmd_cmp_watcher ( core , input + 1 )"		873161	0					
ANR	873380	Callee	cmd_cmp_watcher		873161	0					
ANR	873381	Identifier	cmd_cmp_watcher		873161	0					
ANR	873382	ArgumentList	core		873161	1					
ANR	873383	Argument	core		873161	0					
ANR	873384	Identifier	core		873161	0					
ANR	873385	Argument	input + 1		873161	1					
ANR	873386	AdditiveExpression	input + 1		873161	0		+			
ANR	873387	Identifier	input		873161	0					
ANR	873388	PrimaryExpression	1		873161	1					
ANR	873389	BreakStatement	break ;	540:2:14954:14959	873161	8	True				
ANR	873390	Label	case '*' :	541:1:14962:14970	873161	9	True				
ANR	873391	IfStatement	if ( ! input [ 2 ] )		873161	10					
ANR	873392	Condition	! input [ 2 ]	542:6:14978:14986	873161	0	True				
ANR	873393	UnaryOperationExpression	! input [ 2 ]		873161	0					
ANR	873394	UnaryOperator	!		873161	0					
ANR	873395	ArrayIndexing	input [ 2 ]		873161	1					
ANR	873396	Identifier	input		873161	0					
ANR	873397	PrimaryExpression	2		873161	1					
ANR	873398	CompoundStatement		43:17:850:850	873161	1					
ANR	873399	ExpressionStatement	"eprintf ( ""Usage: cx* 00..22'\\n"" )"	543:3:14994:15026	873161	0	True				
ANR	873400	CallExpression	"eprintf ( ""Usage: cx* 00..22'\\n"" )"		873161	0					
ANR	873401	Callee	eprintf		873161	0					
ANR	873402	Identifier	eprintf		873161	0					
ANR	873403	ArgumentList	"""Usage: cx* 00..22'\\n"""		873161	1					
ANR	873404	Argument	"""Usage: cx* 00..22'\\n"""		873161	0					
ANR	873405	PrimaryExpression	"""Usage: cx* 00..22'\\n"""		873161	0					
ANR	873406	ReturnStatement	return 0 ;	544:3:15031:15039	873161	1	True				
ANR	873407	PrimaryExpression	0		873161	0					
ANR	873408	ExpressionStatement	"val = radare_compare ( core , block , ( ut8 * ) input + 2 , strlen ( input + 2 ) + 1 , '*' )"	547:2:15048:15133	873161	11	True				
ANR	873409	AssignmentExpression	"val = radare_compare ( core , block , ( ut8 * ) input + 2 , strlen ( input + 2 ) + 1 , '*' )"		873161	0		=			
ANR	873410	Identifier	val		873161	0					
ANR	873411	CallExpression	"radare_compare ( core , block , ( ut8 * ) input + 2 , strlen ( input + 2 ) + 1 , '*' )"		873161	1					
ANR	873412	Callee	radare_compare		873161	0					
ANR	873413	Identifier	radare_compare		873161	0					
ANR	873414	ArgumentList	core		873161	1					
ANR	873415	Argument	core		873161	0					
ANR	873416	Identifier	core		873161	0					
ANR	873417	Argument	block		873161	1					
ANR	873418	Identifier	block		873161	0					
ANR	873419	Argument	( ut8 * ) input + 2		873161	2					
ANR	873420	AdditiveExpression	( ut8 * ) input + 2		873161	0		+			
ANR	873421	CastExpression	( ut8 * ) input		873161	0					
ANR	873422	CastTarget	ut8 *		873161	0					
ANR	873423	Identifier	input		873161	1					
ANR	873424	PrimaryExpression	2		873161	1					
ANR	873425	Argument	strlen ( input + 2 ) + 1		873161	3					
ANR	873426	AdditiveExpression	strlen ( input + 2 ) + 1		873161	0		+			
ANR	873427	CallExpression	strlen ( input + 2 )		873161	0					
ANR	873428	Callee	strlen		873161	0					
ANR	873429	Identifier	strlen		873161	0					
ANR	873430	ArgumentList	input + 2		873161	1					
ANR	873431	Argument	input + 2		873161	0					
ANR	873432	AdditiveExpression	input + 2		873161	0		+			
ANR	873433	Identifier	input		873161	0					
ANR	873434	PrimaryExpression	2		873161	1					
ANR	873435	PrimaryExpression	1		873161	1					
ANR	873436	Argument	'*'		873161	4					
ANR	873437	PrimaryExpression	'*'		873161	0					
ANR	873438	BreakStatement	break ;	549:2:15137:15142	873161	12	True				
ANR	873439	Label	case ' ' :	550:1:15145:15153	873161	13	True				
ANR	873440	CompoundStatement		54:2:1055:1085	873161	14					
ANR	873441	IdentifierDeclStatement	char * str = strdup ( input + 1 ) ;	552:2:15160:15190	873161	0	True				
ANR	873442	IdentifierDecl	* str = strdup ( input + 1 )		873161	0					
ANR	873443	IdentifierDeclType	char *		873161	0					
ANR	873444	Identifier	str		873161	1					
ANR	873445	AssignmentExpression	* str = strdup ( input + 1 )		873161	2		=			
ANR	873446	Identifier	str		873161	0					
ANR	873447	CallExpression	strdup ( input + 1 )		873161	1					
ANR	873448	Callee	strdup		873161	0					
ANR	873449	Identifier	strdup		873161	0					
ANR	873450	ArgumentList	input + 1		873161	1					
ANR	873451	Argument	input + 1		873161	0					
ANR	873452	AdditiveExpression	input + 1		873161	0		+			
ANR	873453	Identifier	input		873161	0					
ANR	873454	PrimaryExpression	1		873161	1					
ANR	873455	IdentifierDeclStatement	int len = r_str_unescape ( str ) ;	553:2:15194:15224	873161	1	True				
ANR	873456	IdentifierDecl	len = r_str_unescape ( str )		873161	0					
ANR	873457	IdentifierDeclType	int		873161	0					
ANR	873458	Identifier	len		873161	1					
ANR	873459	AssignmentExpression	len = r_str_unescape ( str )		873161	2		=			
ANR	873460	Identifier	len		873161	0					
ANR	873461	CallExpression	r_str_unescape ( str )		873161	1					
ANR	873462	Callee	r_str_unescape		873161	0					
ANR	873463	Identifier	r_str_unescape		873161	0					
ANR	873464	ArgumentList	str		873161	1					
ANR	873465	Argument	str		873161	0					
ANR	873466	Identifier	str		873161	0					
ANR	873467	ExpressionStatement	"val = radare_compare ( core , block , ( ut8 * ) str , len , 0 )"	554:2:15228:15283	873161	2	True				
ANR	873468	AssignmentExpression	"val = radare_compare ( core , block , ( ut8 * ) str , len , 0 )"		873161	0		=			
ANR	873469	Identifier	val		873161	0					
ANR	873470	CallExpression	"radare_compare ( core , block , ( ut8 * ) str , len , 0 )"		873161	1					
ANR	873471	Callee	radare_compare		873161	0					
ANR	873472	Identifier	radare_compare		873161	0					
ANR	873473	ArgumentList	core		873161	1					
ANR	873474	Argument	core		873161	0					
ANR	873475	Identifier	core		873161	0					
ANR	873476	Argument	block		873161	1					
ANR	873477	Identifier	block		873161	0					
ANR	873478	Argument	( ut8 * ) str		873161	2					
ANR	873479	CastExpression	( ut8 * ) str		873161	0					
ANR	873480	CastTarget	ut8 *		873161	0					
ANR	873481	Identifier	str		873161	1					
ANR	873482	Argument	len		873161	3					
ANR	873483	Identifier	len		873161	0					
ANR	873484	Argument	0		873161	4					
ANR	873485	PrimaryExpression	0		873161	0					
ANR	873486	ExpressionStatement	free ( str )	555:2:15287:15297	873161	3	True				
ANR	873487	CallExpression	free ( str )		873161	0					
ANR	873488	Callee	free		873161	0					
ANR	873489	Identifier	free		873161	0					
ANR	873490	ArgumentList	str		873161	1					
ANR	873491	Argument	str		873161	0					
ANR	873492	Identifier	str		873161	0					
ANR	873493	BreakStatement	break ;	557:1:15303:15308	873161	15	True				
ANR	873494	Label	case 'x' :	558:1:15311:15319	873161	16	True				
ANR	873495	SwitchStatement	switch ( input [ 1 ] )		873161	17					
ANR	873496	Condition	input [ 1 ]	559:10:15331:15338	873161	0	True				
ANR	873497	ArrayIndexing	input [ 1 ]		873161	0					
ANR	873498	Identifier	input		873161	0					
ANR	873499	PrimaryExpression	1		873161	1					
ANR	873500	CompoundStatement		60:20:1202:1202	873161	1					
ANR	873501	Label	case ' ' :	560:2:15345:15353	873161	0	True				
ANR	873502	ExpressionStatement	mode = 0	561:3:15358:15366	873161	1	True				
ANR	873503	AssignmentExpression	mode = 0		873161	0		=			
ANR	873504	Identifier	mode		873161	0					
ANR	873505	PrimaryExpression	0		873161	1					
ANR	873506	ExpressionStatement	input += 2	562:3:15371:15381	873161	2	True				
ANR	873507	AssignmentExpression	input += 2		873161	0		+=			
ANR	873508	Identifier	input		873161	0					
ANR	873509	PrimaryExpression	2		873161	1					
ANR	873510	BreakStatement	break ;	563:3:15386:15391	873161	3	True				
ANR	873511	Label	case '*' :	564:2:15395:15403	873161	4	True				
ANR	873512	IfStatement	if ( input [ 2 ] != ' ' )		873161	5					
ANR	873513	Condition	input [ 2 ] != ' '	565:7:15412:15426	873161	0	True				
ANR	873514	EqualityExpression	input [ 2 ] != ' '		873161	0		!=			
ANR	873515	ArrayIndexing	input [ 2 ]		873161	0					
ANR	873516	Identifier	input		873161	0					
ANR	873517	PrimaryExpression	2		873161	1					
ANR	873518	PrimaryExpression	' '		873161	1					
ANR	873519	CompoundStatement		66:24:1290:1290	873161	1					
ANR	873520	ExpressionStatement	"eprintf ( ""Usage: cx* 00..22'\\n"" )"	566:4:15435:15467	873161	0	True				
ANR	873521	CallExpression	"eprintf ( ""Usage: cx* 00..22'\\n"" )"		873161	0					
ANR	873522	Callee	eprintf		873161	0					
ANR	873523	Identifier	eprintf		873161	0					
ANR	873524	ArgumentList	"""Usage: cx* 00..22'\\n"""		873161	1					
ANR	873525	Argument	"""Usage: cx* 00..22'\\n"""		873161	0					
ANR	873526	PrimaryExpression	"""Usage: cx* 00..22'\\n"""		873161	0					
ANR	873527	ReturnStatement	return 0 ;	567:4:15473:15481	873161	1	True				
ANR	873528	PrimaryExpression	0		873161	0					
ANR	873529	ExpressionStatement	mode = '*'	569:3:15491:15501	873161	6	True				
ANR	873530	AssignmentExpression	mode = '*'		873161	0		=			
ANR	873531	Identifier	mode		873161	0					
ANR	873532	PrimaryExpression	'*'		873161	1					
ANR	873533	ExpressionStatement	input += 3	570:3:15506:15516	873161	7	True				
ANR	873534	AssignmentExpression	input += 3		873161	0		+=			
ANR	873535	Identifier	input		873161	0					
ANR	873536	PrimaryExpression	3		873161	1					
ANR	873537	BreakStatement	break ;	571:3:15521:15526	873161	8	True				
ANR	873538	Label	default :	572:2:15530:15537	873161	9	True				
ANR	873539	Identifier	default		873161	0					
ANR	873540	ExpressionStatement	"eprintf ( ""Usage: cx 00..22'\\n"" )"	573:3:15542:15573	873161	10	True				
ANR	873541	CallExpression	"eprintf ( ""Usage: cx 00..22'\\n"" )"		873161	0					
ANR	873542	Callee	eprintf		873161	0					
ANR	873543	Identifier	eprintf		873161	0					
ANR	873544	ArgumentList	"""Usage: cx 00..22'\\n"""		873161	1					
ANR	873545	Argument	"""Usage: cx 00..22'\\n"""		873161	0					
ANR	873546	PrimaryExpression	"""Usage: cx 00..22'\\n"""		873161	0					
ANR	873547	ReturnStatement	return 0 ;	574:3:15578:15586	873161	11	True				
ANR	873548	PrimaryExpression	0		873161	0					
ANR	873549	IfStatement	if ( ! ( filled = ( char * ) malloc ( strlen ( input ) + 1 ) ) )		873161	18					
ANR	873550	Condition	! ( filled = ( char * ) malloc ( strlen ( input ) + 1 ) )	576:6:15598:15645	873161	0	True				
ANR	873551	UnaryOperationExpression	! ( filled = ( char * ) malloc ( strlen ( input ) + 1 ) )		873161	0					
ANR	873552	UnaryOperator	!		873161	0					
ANR	873553	AssignmentExpression	filled = ( char * ) malloc ( strlen ( input ) + 1 )		873161	1		=			
ANR	873554	Identifier	filled		873161	0					
ANR	873555	CastExpression	( char * ) malloc ( strlen ( input ) + 1 )		873161	1					
ANR	873556	CastTarget	char *		873161	0					
ANR	873557	CallExpression	malloc ( strlen ( input ) + 1 )		873161	1					
ANR	873558	Callee	malloc		873161	0					
ANR	873559	Identifier	malloc		873161	0					
ANR	873560	ArgumentList	strlen ( input ) + 1		873161	1					
ANR	873561	Argument	strlen ( input ) + 1		873161	0					
ANR	873562	AdditiveExpression	strlen ( input ) + 1		873161	0		+			
ANR	873563	CallExpression	strlen ( input )		873161	0					
ANR	873564	Callee	strlen		873161	0					
ANR	873565	Identifier	strlen		873161	0					
ANR	873566	ArgumentList	input		873161	1					
ANR	873567	Argument	input		873161	0					
ANR	873568	Identifier	input		873161	0					
ANR	873569	PrimaryExpression	1		873161	1					
ANR	873570	CompoundStatement		77:56:1509:1509	873161	1					
ANR	873571	ReturnStatement	return false ;	577:3:15653:15665	873161	0	True				
ANR	873572	Identifier	false		873161	0					
ANR	873573	ExpressionStatement	"memcpy ( filled , input , strlen ( input ) + 1 )"	579:2:15673:15715	873161	19	True				
ANR	873574	CallExpression	"memcpy ( filled , input , strlen ( input ) + 1 )"		873161	0					
ANR	873575	Callee	memcpy		873161	0					
ANR	873576	Identifier	memcpy		873161	0					
ANR	873577	ArgumentList	filled		873161	1					
ANR	873578	Argument	filled		873161	0					
ANR	873579	Identifier	filled		873161	0					
ANR	873580	Argument	input		873161	1					
ANR	873581	Identifier	input		873161	0					
ANR	873582	Argument	strlen ( input ) + 1		873161	2					
ANR	873583	AdditiveExpression	strlen ( input ) + 1		873161	0		+			
ANR	873584	CallExpression	strlen ( input )		873161	0					
ANR	873585	Callee	strlen		873161	0					
ANR	873586	Identifier	strlen		873161	0					
ANR	873587	ArgumentList	input		873161	1					
ANR	873588	Argument	input		873161	0					
ANR	873589	Identifier	input		873161	0					
ANR	873590	PrimaryExpression	1		873161	1					
ANR	873591	IfStatement	if ( ! ( buf = ( ut8 * ) malloc ( strlen ( input ) + 1 ) ) )		873161	20					
ANR	873592	Condition	! ( buf = ( ut8 * ) malloc ( strlen ( input ) + 1 ) )	580:6:15723:15766	873161	0	True				
ANR	873593	UnaryOperationExpression	! ( buf = ( ut8 * ) malloc ( strlen ( input ) + 1 ) )		873161	0					
ANR	873594	UnaryOperator	!		873161	0					
ANR	873595	AssignmentExpression	buf = ( ut8 * ) malloc ( strlen ( input ) + 1 )		873161	1		=			
ANR	873596	Identifier	buf		873161	0					
ANR	873597	CastExpression	( ut8 * ) malloc ( strlen ( input ) + 1 )		873161	1					
ANR	873598	CastTarget	ut8 *		873161	0					
ANR	873599	CallExpression	malloc ( strlen ( input ) + 1 )		873161	1					
ANR	873600	Callee	malloc		873161	0					
ANR	873601	Identifier	malloc		873161	0					
ANR	873602	ArgumentList	strlen ( input ) + 1		873161	1					
ANR	873603	Argument	strlen ( input ) + 1		873161	0					
ANR	873604	AdditiveExpression	strlen ( input ) + 1		873161	0		+			
ANR	873605	CallExpression	strlen ( input )		873161	0					
ANR	873606	Callee	strlen		873161	0					
ANR	873607	Identifier	strlen		873161	0					
ANR	873608	ArgumentList	input		873161	1					
ANR	873609	Argument	input		873161	0					
ANR	873610	Identifier	input		873161	0					
ANR	873611	PrimaryExpression	1		873161	1					
ANR	873612	CompoundStatement		81:52:1630:1630	873161	1					
ANR	873613	ExpressionStatement	free ( filled )	581:3:15774:15787	873161	0	True				
ANR	873614	CallExpression	free ( filled )		873161	0					
ANR	873615	Callee	free		873161	0					
ANR	873616	Identifier	free		873161	0					
ANR	873617	ArgumentList	filled		873161	1					
ANR	873618	Argument	filled		873161	0					
ANR	873619	Identifier	filled		873161	0					
ANR	873620	ReturnStatement	return false ;	582:3:15792:15804	873161	1	True				
ANR	873621	Identifier	false		873161	0					
ANR	873622	ExpressionStatement	"ret = r_hex_bin2str ( block , strlen ( input ) / 2 , ( char * ) buf )"	584:2:15812:15873	873161	21	True				
ANR	873623	AssignmentExpression	"ret = r_hex_bin2str ( block , strlen ( input ) / 2 , ( char * ) buf )"		873161	0		=			
ANR	873624	Identifier	ret		873161	0					
ANR	873625	CallExpression	"r_hex_bin2str ( block , strlen ( input ) / 2 , ( char * ) buf )"		873161	1					
ANR	873626	Callee	r_hex_bin2str		873161	0					
ANR	873627	Identifier	r_hex_bin2str		873161	0					
ANR	873628	ArgumentList	block		873161	1					
ANR	873629	Argument	block		873161	0					
ANR	873630	Identifier	block		873161	0					
ANR	873631	Argument	strlen ( input ) / 2		873161	1					
ANR	873632	MultiplicativeExpression	strlen ( input ) / 2		873161	0		/			
ANR	873633	CallExpression	strlen ( input )		873161	0					
ANR	873634	Callee	strlen		873161	0					
ANR	873635	Identifier	strlen		873161	0					
ANR	873636	ArgumentList	input		873161	1					
ANR	873637	Argument	input		873161	0					
ANR	873638	Identifier	input		873161	0					
ANR	873639	PrimaryExpression	2		873161	1					
ANR	873640	Argument	( char * ) buf		873161	2					
ANR	873641	CastExpression	( char * ) buf		873161	0					
ANR	873642	CastTarget	char *		873161	0					
ANR	873643	Identifier	buf		873161	1					
ANR	873644	ForStatement	for ( i = 0 ; i < ret * 2 ; i ++ )		873161	22					
ANR	873645	ForInit	i = 0 ;	585:7:15882:15887	873161	0	True				
ANR	873646	AssignmentExpression	i = 0		873161	0		=			
ANR	873647	Identifier	i		873161	0					
ANR	873648	PrimaryExpression	0		873161	1					
ANR	873649	Condition	i < ret * 2	585:14:15889:15899	873161	1	True				
ANR	873650	RelationalExpression	i < ret * 2		873161	0		<			
ANR	873651	Identifier	i		873161	0					
ANR	873652	MultiplicativeExpression	ret * 2		873161	1		*			
ANR	873653	Identifier	ret		873161	0					
ANR	873654	PrimaryExpression	2		873161	1					
ANR	873655	PostIncDecOperationExpression	i ++	585:27:15902:15904	873161	2	True				
ANR	873656	Identifier	i		873161	0					
ANR	873657	IncDec	++		873161	1					
ANR	873658	CompoundStatement		86:32:1768:1768	873161	3					
ANR	873659	IfStatement	if ( filled [ i ] == '.' )		873161	0					
ANR	873660	Condition	filled [ i ] == '.'	586:7:15916:15931	873161	0	True				
ANR	873661	EqualityExpression	filled [ i ] == '.'		873161	0		==			
ANR	873662	ArrayIndexing	filled [ i ]		873161	0					
ANR	873663	Identifier	filled		873161	0					
ANR	873664	Identifier	i		873161	1					
ANR	873665	PrimaryExpression	'.'		873161	1					
ANR	873666	CompoundStatement		87:25:1795:1795	873161	1					
ANR	873667	ExpressionStatement	filled [ i ] = buf [ i ]	587:4:15940:15958	873161	0	True				
ANR	873668	AssignmentExpression	filled [ i ] = buf [ i ]		873161	0		=			
ANR	873669	ArrayIndexing	filled [ i ]		873161	0					
ANR	873670	Identifier	filled		873161	0					
ANR	873671	Identifier	i		873161	1					
ANR	873672	ArrayIndexing	buf [ i ]		873161	1					
ANR	873673	Identifier	buf		873161	0					
ANR	873674	Identifier	i		873161	1					
ANR	873675	ExpressionStatement	"ret = r_hex_str2bin ( filled , buf )"	591:2:15972:16005	873161	23	True				
ANR	873676	AssignmentExpression	"ret = r_hex_str2bin ( filled , buf )"		873161	0		=			
ANR	873677	Identifier	ret		873161	0					
ANR	873678	CallExpression	"r_hex_str2bin ( filled , buf )"		873161	1					
ANR	873679	Callee	r_hex_str2bin		873161	0					
ANR	873680	Identifier	r_hex_str2bin		873161	0					
ANR	873681	ArgumentList	filled		873161	1					
ANR	873682	Argument	filled		873161	0					
ANR	873683	Identifier	filled		873161	0					
ANR	873684	Argument	buf		873161	1					
ANR	873685	Identifier	buf		873161	0					
ANR	873686	IfStatement	if ( ret < 1 )		873161	24					
ANR	873687	Condition	ret < 1	592:6:16013:16019	873161	0	True				
ANR	873688	RelationalExpression	ret < 1		873161	0		<			
ANR	873689	Identifier	ret		873161	0					
ANR	873690	PrimaryExpression	1		873161	1					
ANR	873691	CompoundStatement		93:15:1883:1883	873161	1					
ANR	873692	ExpressionStatement	"eprintf ( ""Cannot parse hexpair\\n"" )"	593:3:16027:16061	873161	0	True				
ANR	873693	CallExpression	"eprintf ( ""Cannot parse hexpair\\n"" )"		873161	0					
ANR	873694	Callee	eprintf		873161	0					
ANR	873695	Identifier	eprintf		873161	0					
ANR	873696	ArgumentList	"""Cannot parse hexpair\\n"""		873161	1					
ANR	873697	Argument	"""Cannot parse hexpair\\n"""		873161	0					
ANR	873698	PrimaryExpression	"""Cannot parse hexpair\\n"""		873161	0					
ANR	873699	ElseStatement	else		873161	0					
ANR	873700	CompoundStatement		95:9:1933:1933	873161	0					
ANR	873701	ExpressionStatement	"val = radare_compare ( core , block , buf , ret , mode )"	595:3:16077:16127	873161	0	True				
ANR	873702	AssignmentExpression	"val = radare_compare ( core , block , buf , ret , mode )"		873161	0		=			
ANR	873703	Identifier	val		873161	0					
ANR	873704	CallExpression	"radare_compare ( core , block , buf , ret , mode )"		873161	1					
ANR	873705	Callee	radare_compare		873161	0					
ANR	873706	Identifier	radare_compare		873161	0					
ANR	873707	ArgumentList	core		873161	1					
ANR	873708	Argument	core		873161	0					
ANR	873709	Identifier	core		873161	0					
ANR	873710	Argument	block		873161	1					
ANR	873711	Identifier	block		873161	0					
ANR	873712	Argument	buf		873161	2					
ANR	873713	Identifier	buf		873161	0					
ANR	873714	Argument	ret		873161	3					
ANR	873715	Identifier	ret		873161	0					
ANR	873716	Argument	mode		873161	4					
ANR	873717	Identifier	mode		873161	0					
ANR	873718	ExpressionStatement	free ( buf )	597:2:16135:16145	873161	25	True				
ANR	873719	CallExpression	free ( buf )		873161	0					
ANR	873720	Callee	free		873161	0					
ANR	873721	Identifier	free		873161	0					
ANR	873722	ArgumentList	buf		873161	1					
ANR	873723	Argument	buf		873161	0					
ANR	873724	Identifier	buf		873161	0					
ANR	873725	ExpressionStatement	free ( filled )	598:2:16149:16162	873161	26	True				
ANR	873726	CallExpression	free ( filled )		873161	0					
ANR	873727	Callee	free		873161	0					
ANR	873728	Identifier	free		873161	0					
ANR	873729	ArgumentList	filled		873161	1					
ANR	873730	Argument	filled		873161	0					
ANR	873731	Identifier	filled		873161	0					
ANR	873732	BreakStatement	break ;	599:2:16166:16171	873161	27	True				
ANR	873733	Label	case 'X' :	600:1:16174:16182	873161	28	True				
ANR	873734	ExpressionStatement	buf = malloc ( core -> blocksize )	601:2:16186:16216	873161	29	True				
ANR	873735	AssignmentExpression	buf = malloc ( core -> blocksize )		873161	0		=			
ANR	873736	Identifier	buf		873161	0					
ANR	873737	CallExpression	malloc ( core -> blocksize )		873161	1					
ANR	873738	Callee	malloc		873161	0					
ANR	873739	Identifier	malloc		873161	0					
ANR	873740	ArgumentList	core -> blocksize		873161	1					
ANR	873741	Argument	core -> blocksize		873161	0					
ANR	873742	PtrMemberAccess	core -> blocksize		873161	0					
ANR	873743	Identifier	core		873161	0					
ANR	873744	Identifier	blocksize		873161	1					
ANR	873745	IfStatement	if ( buf )		873161	30					
ANR	873746	Condition	buf	602:6:16224:16226	873161	0	True				
ANR	873747	Identifier	buf		873161	0					
ANR	873748	CompoundStatement		103:11:2090:2090	873161	1					
ANR	873749	IfStatement	"if ( ! r_io_read_at ( core -> io , r_num_math ( core -> num , input + 1 ) , buf , core -> blocksize ) )"		873161	0					
ANR	873750	Condition	"! r_io_read_at ( core -> io , r_num_math ( core -> num , input + 1 ) , buf , core -> blocksize )"	603:7:16238:16327	873161	0	True				
ANR	873751	UnaryOperationExpression	"! r_io_read_at ( core -> io , r_num_math ( core -> num , input + 1 ) , buf , core -> blocksize )"		873161	0					
ANR	873752	UnaryOperator	!		873161	0					
ANR	873753	CallExpression	"r_io_read_at ( core -> io , r_num_math ( core -> num , input + 1 ) , buf , core -> blocksize )"		873161	1					
ANR	873754	Callee	r_io_read_at		873161	0					
ANR	873755	Identifier	r_io_read_at		873161	0					
ANR	873756	ArgumentList	core -> io		873161	1					
ANR	873757	Argument	core -> io		873161	0					
ANR	873758	PtrMemberAccess	core -> io		873161	0					
ANR	873759	Identifier	core		873161	0					
ANR	873760	Identifier	io		873161	1					
ANR	873761	Argument	"r_num_math ( core -> num , input + 1 )"		873161	1					
ANR	873762	CallExpression	"r_num_math ( core -> num , input + 1 )"		873161	0					
ANR	873763	Callee	r_num_math		873161	0					
ANR	873764	Identifier	r_num_math		873161	0					
ANR	873765	ArgumentList	core -> num		873161	1					
ANR	873766	Argument	core -> num		873161	0					
ANR	873767	PtrMemberAccess	core -> num		873161	0					
ANR	873768	Identifier	core		873161	0					
ANR	873769	Identifier	num		873161	1					
ANR	873770	Argument	input + 1		873161	1					
ANR	873771	AdditiveExpression	input + 1		873161	0		+			
ANR	873772	Identifier	input		873161	0					
ANR	873773	PrimaryExpression	1		873161	1					
ANR	873774	Argument	buf		873161	2					
ANR	873775	Identifier	buf		873161	0					
ANR	873776	Argument	core -> blocksize		873161	3					
ANR	873777	PtrMemberAccess	core -> blocksize		873161	0					
ANR	873778	Identifier	core		873161	0					
ANR	873779	Identifier	blocksize		873161	1					
ANR	873780	CompoundStatement		105:44:2191:2191	873161	1					
ANR	873781	ExpressionStatement	"eprintf ( ""Cannot read hexdump\\n"" )"	605:4:16336:16369	873161	0	True				
ANR	873782	CallExpression	"eprintf ( ""Cannot read hexdump\\n"" )"		873161	0					
ANR	873783	Callee	eprintf		873161	0					
ANR	873784	Identifier	eprintf		873161	0					
ANR	873785	ArgumentList	"""Cannot read hexdump\\n"""		873161	1					
ANR	873786	Argument	"""Cannot read hexdump\\n"""		873161	0					
ANR	873787	PrimaryExpression	"""Cannot read hexdump\\n"""		873161	0					
ANR	873788	ElseStatement	else		873161	0					
ANR	873789	CompoundStatement		107:10:2242:2242	873161	0					
ANR	873790	ExpressionStatement	"val = radare_compare ( core , block , buf , ret , mode )"	607:4:16387:16437	873161	0	True				
ANR	873791	AssignmentExpression	"val = radare_compare ( core , block , buf , ret , mode )"		873161	0		=			
ANR	873792	Identifier	val		873161	0					
ANR	873793	CallExpression	"radare_compare ( core , block , buf , ret , mode )"		873161	1					
ANR	873794	Callee	radare_compare		873161	0					
ANR	873795	Identifier	radare_compare		873161	0					
ANR	873796	ArgumentList	core		873161	1					
ANR	873797	Argument	core		873161	0					
ANR	873798	Identifier	core		873161	0					
ANR	873799	Argument	block		873161	1					
ANR	873800	Identifier	block		873161	0					
ANR	873801	Argument	buf		873161	2					
ANR	873802	Identifier	buf		873161	0					
ANR	873803	Argument	ret		873161	3					
ANR	873804	Identifier	ret		873161	0					
ANR	873805	Argument	mode		873161	4					
ANR	873806	Identifier	mode		873161	0					
ANR	873807	ExpressionStatement	free ( buf )	609:3:16447:16457	873161	1	True				
ANR	873808	CallExpression	free ( buf )		873161	0					
ANR	873809	Callee	free		873161	0					
ANR	873810	Identifier	free		873161	0					
ANR	873811	ArgumentList	buf		873161	1					
ANR	873812	Argument	buf		873161	0					
ANR	873813	Identifier	buf		873161	0					
ANR	873814	ReturnStatement	return false ;	611:2:16465:16477	873161	31	True				
ANR	873815	Identifier	false		873161	0					
ANR	873816	BreakStatement	break ;	612:2:16481:16486	873161	32	True				
ANR	873817	Label	case 'f' :	613:1:16489:16497	873161	33	True				
ANR	873818	IfStatement	if ( input [ 1 ] != ' ' )		873161	34					
ANR	873819	Condition	input [ 1 ] != ' '	614:6:16505:16519	873161	0	True				
ANR	873820	EqualityExpression	input [ 1 ] != ' '		873161	0		!=			
ANR	873821	ArrayIndexing	input [ 1 ]		873161	0					
ANR	873822	Identifier	input		873161	0					
ANR	873823	PrimaryExpression	1		873161	1					
ANR	873824	PrimaryExpression	' '		873161	1					
ANR	873825	CompoundStatement		115:23:2383:2383	873161	1					
ANR	873826	ExpressionStatement	"eprintf ( ""Please. use 'cf [file]'\\n"" )"	615:3:16527:16564	873161	0	True				
ANR	873827	CallExpression	"eprintf ( ""Please. use 'cf [file]'\\n"" )"		873161	0					
ANR	873828	Callee	eprintf		873161	0					
ANR	873829	Identifier	eprintf		873161	0					
ANR	873830	ArgumentList	"""Please. use 'cf [file]'\\n"""		873161	1					
ANR	873831	Argument	"""Please. use 'cf [file]'\\n"""		873161	0					
ANR	873832	PrimaryExpression	"""Please. use 'cf [file]'\\n"""		873161	0					
ANR	873833	ReturnStatement	return false ;	616:3:16569:16581	873161	1	True				
ANR	873834	Identifier	false		873161	0					
ANR	873835	ExpressionStatement	"fd = r_sandbox_fopen ( input + 2 , ""rb"" )"	618:2:16589:16627	873161	35	True				
ANR	873836	AssignmentExpression	"fd = r_sandbox_fopen ( input + 2 , ""rb"" )"		873161	0		=			
ANR	873837	Identifier	fd		873161	0					
ANR	873838	CallExpression	"r_sandbox_fopen ( input + 2 , ""rb"" )"		873161	1					
ANR	873839	Callee	r_sandbox_fopen		873161	0					
ANR	873840	Identifier	r_sandbox_fopen		873161	0					
ANR	873841	ArgumentList	input + 2		873161	1					
ANR	873842	Argument	input + 2		873161	0					
ANR	873843	AdditiveExpression	input + 2		873161	0		+			
ANR	873844	Identifier	input		873161	0					
ANR	873845	PrimaryExpression	2		873161	1					
ANR	873846	Argument	"""rb"""		873161	1					
ANR	873847	PrimaryExpression	"""rb"""		873161	0					
ANR	873848	IfStatement	if ( ! fd )		873161	36					
ANR	873849	Condition	! fd	619:6:16635:16637	873161	0	True				
ANR	873850	UnaryOperationExpression	! fd		873161	0					
ANR	873851	UnaryOperator	!		873161	0					
ANR	873852	Identifier	fd		873161	1					
ANR	873853	CompoundStatement		120:11:2501:2501	873161	1					
ANR	873854	ExpressionStatement	"eprintf ( ""Cannot open file '%s'\\n"" , input + 2 )"	620:3:16645:16691	873161	0	True				
ANR	873855	CallExpression	"eprintf ( ""Cannot open file '%s'\\n"" , input + 2 )"		873161	0					
ANR	873856	Callee	eprintf		873161	0					
ANR	873857	Identifier	eprintf		873161	0					
ANR	873858	ArgumentList	"""Cannot open file '%s'\\n"""		873161	1					
ANR	873859	Argument	"""Cannot open file '%s'\\n"""		873161	0					
ANR	873860	PrimaryExpression	"""Cannot open file '%s'\\n"""		873161	0					
ANR	873861	Argument	input + 2		873161	1					
ANR	873862	AdditiveExpression	input + 2		873161	0		+			
ANR	873863	Identifier	input		873161	0					
ANR	873864	PrimaryExpression	2		873161	1					
ANR	873865	ReturnStatement	return false ;	621:3:16696:16708	873161	1	True				
ANR	873866	Identifier	false		873161	0					
ANR	873867	ExpressionStatement	buf = ( ut8 * ) malloc ( core -> blocksize )	623:2:16716:16754	873161	37	True				
ANR	873868	AssignmentExpression	buf = ( ut8 * ) malloc ( core -> blocksize )		873161	0		=			
ANR	873869	Identifier	buf		873161	0					
ANR	873870	CastExpression	( ut8 * ) malloc ( core -> blocksize )		873161	1					
ANR	873871	CastTarget	ut8 *		873161	0					
ANR	873872	CallExpression	malloc ( core -> blocksize )		873161	1					
ANR	873873	Callee	malloc		873161	0					
ANR	873874	Identifier	malloc		873161	0					
ANR	873875	ArgumentList	core -> blocksize		873161	1					
ANR	873876	Argument	core -> blocksize		873161	0					
ANR	873877	PtrMemberAccess	core -> blocksize		873161	0					
ANR	873878	Identifier	core		873161	0					
ANR	873879	Identifier	blocksize		873161	1					
ANR	873880	IfStatement	if ( buf )		873161	38					
ANR	873881	Condition	buf	624:6:16762:16764	873161	0	True				
ANR	873882	Identifier	buf		873161	0					
ANR	873883	CompoundStatement		125:11:2628:2628	873161	1					
ANR	873884	IfStatement	"if ( fread ( buf , 1 , core -> blocksize , fd ) < 1 )"		873161	0					
ANR	873885	Condition	"fread ( buf , 1 , core -> blocksize , fd ) < 1"	625:7:16776:16814	873161	0	True				
ANR	873886	RelationalExpression	"fread ( buf , 1 , core -> blocksize , fd ) < 1"		873161	0		<			
ANR	873887	CallExpression	"fread ( buf , 1 , core -> blocksize , fd )"		873161	0					
ANR	873888	Callee	fread		873161	0					
ANR	873889	Identifier	fread		873161	0					
ANR	873890	ArgumentList	buf		873161	1					
ANR	873891	Argument	buf		873161	0					
ANR	873892	Identifier	buf		873161	0					
ANR	873893	Argument	1		873161	1					
ANR	873894	PrimaryExpression	1		873161	0					
ANR	873895	Argument	core -> blocksize		873161	2					
ANR	873896	PtrMemberAccess	core -> blocksize		873161	0					
ANR	873897	Identifier	core		873161	0					
ANR	873898	Identifier	blocksize		873161	1					
ANR	873899	Argument	fd		873161	3					
ANR	873900	Identifier	fd		873161	0					
ANR	873901	PrimaryExpression	1		873161	1					
ANR	873902	CompoundStatement		126:48:2678:2678	873161	1					
ANR	873903	ExpressionStatement	"eprintf ( ""Cannot read file %s\\n"" , input + 2 )"	626:4:16823:16867	873161	0	True				
ANR	873904	CallExpression	"eprintf ( ""Cannot read file %s\\n"" , input + 2 )"		873161	0					
ANR	873905	Callee	eprintf		873161	0					
ANR	873906	Identifier	eprintf		873161	0					
ANR	873907	ArgumentList	"""Cannot read file %s\\n"""		873161	1					
ANR	873908	Argument	"""Cannot read file %s\\n"""		873161	0					
ANR	873909	PrimaryExpression	"""Cannot read file %s\\n"""		873161	0					
ANR	873910	Argument	input + 2		873161	1					
ANR	873911	AdditiveExpression	input + 2		873161	0		+			
ANR	873912	Identifier	input		873161	0					
ANR	873913	PrimaryExpression	2		873161	1					
ANR	873914	ElseStatement	else		873161	0					
ANR	873915	CompoundStatement		128:10:2740:2740	873161	0					
ANR	873916	ExpressionStatement	"val = radare_compare ( core , block , buf , core -> blocksize , 0 )"	628:4:16885:16944	873161	0	True				
ANR	873917	AssignmentExpression	"val = radare_compare ( core , block , buf , core -> blocksize , 0 )"		873161	0		=			
ANR	873918	Identifier	val		873161	0					
ANR	873919	CallExpression	"radare_compare ( core , block , buf , core -> blocksize , 0 )"		873161	1					
ANR	873920	Callee	radare_compare		873161	0					
ANR	873921	Identifier	radare_compare		873161	0					
ANR	873922	ArgumentList	core		873161	1					
ANR	873923	Argument	core		873161	0					
ANR	873924	Identifier	core		873161	0					
ANR	873925	Argument	block		873161	1					
ANR	873926	Identifier	block		873161	0					
ANR	873927	Argument	buf		873161	2					
ANR	873928	Identifier	buf		873161	0					
ANR	873929	Argument	core -> blocksize		873161	3					
ANR	873930	PtrMemberAccess	core -> blocksize		873161	0					
ANR	873931	Identifier	core		873161	0					
ANR	873932	Identifier	blocksize		873161	1					
ANR	873933	Argument	0		873161	4					
ANR	873934	PrimaryExpression	0		873161	0					
ANR	873935	ExpressionStatement	fclose ( fd )	630:3:16954:16965	873161	1	True				
ANR	873936	CallExpression	fclose ( fd )		873161	0					
ANR	873937	Callee	fclose		873161	0					
ANR	873938	Identifier	fclose		873161	0					
ANR	873939	ArgumentList	fd		873161	1					
ANR	873940	Argument	fd		873161	0					
ANR	873941	Identifier	fd		873161	0					
ANR	873942	ExpressionStatement	free ( buf )	631:3:16970:16980	873161	2	True				
ANR	873943	CallExpression	free ( buf )		873161	0					
ANR	873944	Callee	free		873161	0					
ANR	873945	Identifier	free		873161	0					
ANR	873946	ArgumentList	buf		873161	1					
ANR	873947	Argument	buf		873161	0					
ANR	873948	Identifier	buf		873161	0					
ANR	873949	ElseStatement	else		873161	0					
ANR	873950	CompoundStatement		133:9:2852:2852	873161	0					
ANR	873951	ExpressionStatement	fclose ( fd )	633:3:16996:17007	873161	0	True				
ANR	873952	CallExpression	fclose ( fd )		873161	0					
ANR	873953	Callee	fclose		873161	0					
ANR	873954	Identifier	fclose		873161	0					
ANR	873955	ArgumentList	fd		873161	1					
ANR	873956	Argument	fd		873161	0					
ANR	873957	Identifier	fd		873161	0					
ANR	873958	ReturnStatement	return false ;	634:3:17012:17024	873161	1	True				
ANR	873959	Identifier	false		873161	0					
ANR	873960	BreakStatement	break ;	636:2:17032:17037	873161	39	True				
ANR	873961	Label	case 'd' :	637:1:17040:17048	873161	40	True				
ANR	873962	WhileStatement	while ( input [ 1 ] == ' ' )		873161	41					
ANR	873963	Condition	input [ 1 ] == ' '	638:9:17067:17081	873161	0	True				
ANR	873964	EqualityExpression	input [ 1 ] == ' '		873161	0		==			
ANR	873965	ArrayIndexing	input [ 1 ]		873161	0					
ANR	873966	Identifier	input		873161	0					
ANR	873967	PrimaryExpression	1		873161	1					
ANR	873968	PrimaryExpression	' '		873161	1					
ANR	873969	ExpressionStatement	input ++	638:26:17084:17091	873161	1	True				
ANR	873970	PostIncDecOperationExpression	input ++		873161	0					
ANR	873971	Identifier	input		873161	0					
ANR	873972	IncDec	++		873161	1					
ANR	873973	IfStatement	if ( input [ 1 ] )		873161	42					
ANR	873974	Condition	input [ 1 ]	639:6:17099:17106	873161	0	True				
ANR	873975	ArrayIndexing	input [ 1 ]		873161	0					
ANR	873976	Identifier	input		873161	0					
ANR	873977	PrimaryExpression	1		873161	1					
ANR	873978	CompoundStatement		140:16:2970:2970	873161	1					
ANR	873979	IfStatement	"if ( ! strcmp ( input + 1 , ""-"" ) )"		873161	0					
ANR	873980	Condition	"! strcmp ( input + 1 , ""-"" )"	640:7:17118:17141	873161	0	True				
ANR	873981	UnaryOperationExpression	"! strcmp ( input + 1 , ""-"" )"		873161	0					
ANR	873982	UnaryOperator	!		873161	0					
ANR	873983	CallExpression	"strcmp ( input + 1 , ""-"" )"		873161	1					
ANR	873984	Callee	strcmp		873161	0					
ANR	873985	Identifier	strcmp		873161	0					
ANR	873986	ArgumentList	input + 1		873161	1					
ANR	873987	Argument	input + 1		873161	0					
ANR	873988	AdditiveExpression	input + 1		873161	0		+			
ANR	873989	Identifier	input		873161	0					
ANR	873990	PrimaryExpression	1		873161	1					
ANR	873991	Argument	"""-"""		873161	1					
ANR	873992	PrimaryExpression	"""-"""		873161	0					
ANR	873993	CompoundStatement		141:33:3005:3005	873161	1					
ANR	873994	IfStatement	if ( oldcwd )		873161	0					
ANR	873995	Condition	oldcwd	641:8:17154:17159	873161	0	True				
ANR	873996	Identifier	oldcwd		873161	0					
ANR	873997	CompoundStatement		143:5:3030:3051	873161	1					
ANR	873998	IdentifierDeclStatement	char * newdir = oldcwd ;	642:5:17169:17190	873161	0	True				
ANR	873999	IdentifierDecl	* newdir = oldcwd		873161	0					
ANR	874000	IdentifierDeclType	char *		873161	0					
ANR	874001	Identifier	newdir		873161	1					
ANR	874002	AssignmentExpression	* newdir = oldcwd		873161	2		=			
ANR	874003	Identifier	oldcwd		873161	0					
ANR	874004	Identifier	oldcwd		873161	1					
ANR	874005	ExpressionStatement	oldcwd = r_sys_getdir ( )	643:5:17197:17221	873161	1	True				
ANR	874006	AssignmentExpression	oldcwd = r_sys_getdir ( )		873161	0		=			
ANR	874007	Identifier	oldcwd		873161	0					
ANR	874008	CallExpression	r_sys_getdir ( )		873161	1					
ANR	874009	Callee	r_sys_getdir		873161	0					
ANR	874010	Identifier	r_sys_getdir		873161	0					
ANR	874011	ArgumentList			873161	1					
ANR	874012	IfStatement	if ( r_sandbox_chdir ( newdir ) == - 1 )		873161	2					
ANR	874013	Condition	r_sandbox_chdir ( newdir ) == - 1	644:9:17232:17261	873161	0	True				
ANR	874014	EqualityExpression	r_sandbox_chdir ( newdir ) == - 1		873161	0		==			
ANR	874015	CallExpression	r_sandbox_chdir ( newdir )		873161	0					
ANR	874016	Callee	r_sandbox_chdir		873161	0					
ANR	874017	Identifier	r_sandbox_chdir		873161	0					
ANR	874018	ArgumentList	newdir		873161	1					
ANR	874019	Argument	newdir		873161	0					
ANR	874020	Identifier	newdir		873161	0					
ANR	874021	UnaryOperationExpression	- 1		873161	1					
ANR	874022	UnaryOperator	-		873161	0					
ANR	874023	PrimaryExpression	1		873161	1					
ANR	874024	CompoundStatement		145:41:3125:3125	873161	1					
ANR	874025	ExpressionStatement	"eprintf ( ""Cannot chdir to %s\\n"" , newdir )"	645:6:17272:17312	873161	0	True				
ANR	874026	CallExpression	"eprintf ( ""Cannot chdir to %s\\n"" , newdir )"		873161	0					
ANR	874027	Callee	eprintf		873161	0					
ANR	874028	Identifier	eprintf		873161	0					
ANR	874029	ArgumentList	"""Cannot chdir to %s\\n"""		873161	1					
ANR	874030	Argument	"""Cannot chdir to %s\\n"""		873161	0					
ANR	874031	PrimaryExpression	"""Cannot chdir to %s\\n"""		873161	0					
ANR	874032	Argument	newdir		873161	1					
ANR	874033	Identifier	newdir		873161	0					
ANR	874034	ExpressionStatement	free ( oldcwd )	646:6:17320:17333	873161	1	True				
ANR	874035	CallExpression	free ( oldcwd )		873161	0					
ANR	874036	Callee	free		873161	0					
ANR	874037	Identifier	free		873161	0					
ANR	874038	ArgumentList	oldcwd		873161	1					
ANR	874039	Argument	oldcwd		873161	0					
ANR	874040	Identifier	oldcwd		873161	0					
ANR	874041	ExpressionStatement	oldcwd = newdir	647:6:17341:17356	873161	2	True				
ANR	874042	AssignmentExpression	oldcwd = newdir		873161	0		=			
ANR	874043	Identifier	oldcwd		873161	0					
ANR	874044	Identifier	newdir		873161	1					
ANR	874045	ElseStatement	else		873161	0					
ANR	874046	CompoundStatement		149:12:3231:3231	873161	0					
ANR	874047	ExpressionStatement	free ( newdir )	649:6:17378:17391	873161	0	True				
ANR	874048	CallExpression	free ( newdir )		873161	0					
ANR	874049	Callee	free		873161	0					
ANR	874050	Identifier	free		873161	0					
ANR	874051	ArgumentList	newdir		873161	1					
ANR	874052	Argument	newdir		873161	0					
ANR	874053	Identifier	newdir		873161	0					
ANR	874054	ElseStatement	else		873161	0					
ANR	874055	CompoundStatement		152:11:3272:3272	873161	0					
ANR	874056	ElseStatement	else		873161	0					
ANR	874057	IfStatement	if ( input [ 1 ] == '~' && input [ 2 ] == '/' )		873161	0					
ANR	874058	Condition	input [ 1 ] == '~' && input [ 2 ] == '/'	654:14:17460:17493	873161	0	True				
ANR	874059	AndExpression	input [ 1 ] == '~' && input [ 2 ] == '/'		873161	0		&&			
ANR	874060	EqualityExpression	input [ 1 ] == '~'		873161	0		==			
ANR	874061	ArrayIndexing	input [ 1 ]		873161	0					
ANR	874062	Identifier	input		873161	0					
ANR	874063	PrimaryExpression	1		873161	1					
ANR	874064	PrimaryExpression	'~'		873161	1					
ANR	874065	EqualityExpression	input [ 2 ] == '/'		873161	1		==			
ANR	874066	ArrayIndexing	input [ 2 ]		873161	0					
ANR	874067	Identifier	input		873161	0					
ANR	874068	PrimaryExpression	2		873161	1					
ANR	874069	PrimaryExpression	'/'		873161	1					
ANR	874070	CompoundStatement		156:4:3363:3402	873161	1					
ANR	874071	IdentifierDeclStatement	char * homepath = r_str_home ( input + 3 ) ;	655:4:17502:17541	873161	0	True				
ANR	874072	IdentifierDecl	* homepath = r_str_home ( input + 3 )		873161	0					
ANR	874073	IdentifierDeclType	char *		873161	0					
ANR	874074	Identifier	homepath		873161	1					
ANR	874075	AssignmentExpression	* homepath = r_str_home ( input + 3 )		873161	2		=			
ANR	874076	Identifier	homepath		873161	0					
ANR	874077	CallExpression	r_str_home ( input + 3 )		873161	1					
ANR	874078	Callee	r_str_home		873161	0					
ANR	874079	Identifier	r_str_home		873161	0					
ANR	874080	ArgumentList	input + 3		873161	1					
ANR	874081	Argument	input + 3		873161	0					
ANR	874082	AdditiveExpression	input + 3		873161	0		+			
ANR	874083	Identifier	input		873161	0					
ANR	874084	PrimaryExpression	3		873161	1					
ANR	874085	IfStatement	if ( homepath )		873161	1					
ANR	874086	Condition	homepath	656:8:17551:17558	873161	0	True				
ANR	874087	Identifier	homepath		873161	0					
ANR	874088	CompoundStatement		157:18:3422:3422	873161	1					
ANR	874089	IfStatement	if ( * homepath )		873161	0					
ANR	874090	Condition	* homepath	657:9:17572:17580	873161	0	True				
ANR	874091	UnaryOperationExpression	* homepath		873161	0					
ANR	874092	UnaryOperator	*		873161	0					
ANR	874093	Identifier	homepath		873161	1					
ANR	874094	CompoundStatement		158:20:3444:3444	873161	1					
ANR	874095	ExpressionStatement	free ( oldcwd )	658:6:17591:17604	873161	0	True				
ANR	874096	CallExpression	free ( oldcwd )		873161	0					
ANR	874097	Callee	free		873161	0					
ANR	874098	Identifier	free		873161	0					
ANR	874099	ArgumentList	oldcwd		873161	1					
ANR	874100	Argument	oldcwd		873161	0					
ANR	874101	Identifier	oldcwd		873161	0					
ANR	874102	ExpressionStatement	oldcwd = r_sys_getdir ( )	659:6:17612:17636	873161	1	True				
ANR	874103	AssignmentExpression	oldcwd = r_sys_getdir ( )		873161	0		=			
ANR	874104	Identifier	oldcwd		873161	0					
ANR	874105	CallExpression	r_sys_getdir ( )		873161	1					
ANR	874106	Callee	r_sys_getdir		873161	0					
ANR	874107	Identifier	r_sys_getdir		873161	0					
ANR	874108	ArgumentList			873161	1					
ANR	874109	IfStatement	if ( r_sandbox_chdir ( homepath ) == - 1 )		873161	2					
ANR	874110	Condition	r_sandbox_chdir ( homepath ) == - 1	660:10:17648:17679	873161	0	True				
ANR	874111	EqualityExpression	r_sandbox_chdir ( homepath ) == - 1		873161	0		==			
ANR	874112	CallExpression	r_sandbox_chdir ( homepath )		873161	0					
ANR	874113	Callee	r_sandbox_chdir		873161	0					
ANR	874114	Identifier	r_sandbox_chdir		873161	0					
ANR	874115	ArgumentList	homepath		873161	1					
ANR	874116	Argument	homepath		873161	0					
ANR	874117	Identifier	homepath		873161	0					
ANR	874118	UnaryOperationExpression	- 1		873161	1					
ANR	874119	UnaryOperator	-		873161	0					
ANR	874120	PrimaryExpression	1		873161	1					
ANR	874121	CompoundStatement		161:44:3543:3543	873161	1					
ANR	874122	ExpressionStatement	"eprintf ( ""Cannot chdir to %s\\n"" , homepath )"	661:7:17691:17733	873161	0	True				
ANR	874123	CallExpression	"eprintf ( ""Cannot chdir to %s\\n"" , homepath )"		873161	0					
ANR	874124	Callee	eprintf		873161	0					
ANR	874125	Identifier	eprintf		873161	0					
ANR	874126	ArgumentList	"""Cannot chdir to %s\\n"""		873161	1					
ANR	874127	Argument	"""Cannot chdir to %s\\n"""		873161	0					
ANR	874128	PrimaryExpression	"""Cannot chdir to %s\\n"""		873161	0					
ANR	874129	Argument	homepath		873161	1					
ANR	874130	Identifier	homepath		873161	0					
ANR	874131	ExpressionStatement	free ( homepath )	664:5:17755:17770	873161	1	True				
ANR	874132	CallExpression	free ( homepath )		873161	0					
ANR	874133	Callee	free		873161	0					
ANR	874134	Identifier	free		873161	0					
ANR	874135	ArgumentList	homepath		873161	1					
ANR	874136	Argument	homepath		873161	0					
ANR	874137	Identifier	homepath		873161	0					
ANR	874138	ElseStatement	else		873161	0					
ANR	874139	CompoundStatement		166:11:3644:3644	873161	0					
ANR	874140	ExpressionStatement	"eprintf ( ""Cannot find home\\n"" )"	666:5:17790:17820	873161	0	True				
ANR	874141	CallExpression	"eprintf ( ""Cannot find home\\n"" )"		873161	0					
ANR	874142	Callee	eprintf		873161	0					
ANR	874143	Identifier	eprintf		873161	0					
ANR	874144	ArgumentList	"""Cannot find home\\n"""		873161	1					
ANR	874145	Argument	"""Cannot find home\\n"""		873161	0					
ANR	874146	PrimaryExpression	"""Cannot find home\\n"""		873161	0					
ANR	874147	ElseStatement	else		873161	0					
ANR	874148	CompoundStatement		169:10:3699:3699	873161	0					
ANR	874149	ExpressionStatement	free ( oldcwd )	669:4:17844:17857	873161	0	True				
ANR	874150	CallExpression	free ( oldcwd )		873161	0					
ANR	874151	Callee	free		873161	0					
ANR	874152	Identifier	free		873161	0					
ANR	874153	ArgumentList	oldcwd		873161	1					
ANR	874154	Argument	oldcwd		873161	0					
ANR	874155	Identifier	oldcwd		873161	0					
ANR	874156	ExpressionStatement	oldcwd = r_sys_getdir ( )	670:4:17863:17887	873161	1	True				
ANR	874157	AssignmentExpression	oldcwd = r_sys_getdir ( )		873161	0		=			
ANR	874158	Identifier	oldcwd		873161	0					
ANR	874159	CallExpression	r_sys_getdir ( )		873161	1					
ANR	874160	Callee	r_sys_getdir		873161	0					
ANR	874161	Identifier	r_sys_getdir		873161	0					
ANR	874162	ArgumentList			873161	1					
ANR	874163	IfStatement	if ( r_sandbox_chdir ( input + 1 ) == - 1 )		873161	2					
ANR	874164	Condition	r_sandbox_chdir ( input + 1 ) == - 1	671:8:17897:17929	873161	0	True				
ANR	874165	EqualityExpression	r_sandbox_chdir ( input + 1 ) == - 1		873161	0		==			
ANR	874166	CallExpression	r_sandbox_chdir ( input + 1 )		873161	0					
ANR	874167	Callee	r_sandbox_chdir		873161	0					
ANR	874168	Identifier	r_sandbox_chdir		873161	0					
ANR	874169	ArgumentList	input + 1		873161	1					
ANR	874170	Argument	input + 1		873161	0					
ANR	874171	AdditiveExpression	input + 1		873161	0		+			
ANR	874172	Identifier	input		873161	0					
ANR	874173	PrimaryExpression	1		873161	1					
ANR	874174	UnaryOperationExpression	- 1		873161	1					
ANR	874175	UnaryOperator	-		873161	0					
ANR	874176	PrimaryExpression	1		873161	1					
ANR	874177	CompoundStatement		172:43:3793:3793	873161	1					
ANR	874178	ExpressionStatement	"eprintf ( ""Cannot chdir to %s\\n"" , input + 1 )"	672:5:17939:17982	873161	0	True				
ANR	874179	CallExpression	"eprintf ( ""Cannot chdir to %s\\n"" , input + 1 )"		873161	0					
ANR	874180	Callee	eprintf		873161	0					
ANR	874181	Identifier	eprintf		873161	0					
ANR	874182	ArgumentList	"""Cannot chdir to %s\\n"""		873161	1					
ANR	874183	Argument	"""Cannot chdir to %s\\n"""		873161	0					
ANR	874184	PrimaryExpression	"""Cannot chdir to %s\\n"""		873161	0					
ANR	874185	Argument	input + 1		873161	1					
ANR	874186	AdditiveExpression	input + 1		873161	0		+			
ANR	874187	Identifier	input		873161	0					
ANR	874188	PrimaryExpression	1		873161	1					
ANR	874189	ElseStatement	else		873161	0					
ANR	874190	CompoundStatement		177:3:3870:3908	873161	0					
ANR	874191	IdentifierDeclStatement	char * home = r_sys_getenv ( R_SYS_HOME ) ;	676:3:18009:18047	873161	0	True				
ANR	874192	IdentifierDecl	* home = r_sys_getenv ( R_SYS_HOME )		873161	0					
ANR	874193	IdentifierDeclType	char *		873161	0					
ANR	874194	Identifier	home		873161	1					
ANR	874195	AssignmentExpression	* home = r_sys_getenv ( R_SYS_HOME )		873161	2		=			
ANR	874196	Identifier	home		873161	0					
ANR	874197	CallExpression	r_sys_getenv ( R_SYS_HOME )		873161	1					
ANR	874198	Callee	r_sys_getenv		873161	0					
ANR	874199	Identifier	r_sys_getenv		873161	0					
ANR	874200	ArgumentList	R_SYS_HOME		873161	1					
ANR	874201	Argument	R_SYS_HOME		873161	0					
ANR	874202	Identifier	R_SYS_HOME		873161	0					
ANR	874203	IfStatement	if ( ! home || r_sandbox_chdir ( home ) == - 1 )		873161	1					
ANR	874204	Condition	! home || r_sandbox_chdir ( home ) == - 1	677:7:18056:18092	873161	0	True				
ANR	874205	OrExpression	! home || r_sandbox_chdir ( home ) == - 1		873161	0		||			
ANR	874206	UnaryOperationExpression	! home		873161	0					
ANR	874207	UnaryOperator	!		873161	0					
ANR	874208	Identifier	home		873161	1					
ANR	874209	EqualityExpression	r_sandbox_chdir ( home ) == - 1		873161	1		==			
ANR	874210	CallExpression	r_sandbox_chdir ( home )		873161	0					
ANR	874211	Callee	r_sandbox_chdir		873161	0					
ANR	874212	Identifier	r_sandbox_chdir		873161	0					
ANR	874213	ArgumentList	home		873161	1					
ANR	874214	Argument	home		873161	0					
ANR	874215	Identifier	home		873161	0					
ANR	874216	UnaryOperationExpression	- 1		873161	1					
ANR	874217	UnaryOperator	-		873161	0					
ANR	874218	PrimaryExpression	1		873161	1					
ANR	874219	CompoundStatement		178:46:3956:3956	873161	1					
ANR	874220	ExpressionStatement	"eprintf ( ""Cannot find home.\\n"" )"	678:4:18101:18132	873161	0	True				
ANR	874221	CallExpression	"eprintf ( ""Cannot find home.\\n"" )"		873161	0					
ANR	874222	Callee	eprintf		873161	0					
ANR	874223	Identifier	eprintf		873161	0					
ANR	874224	ArgumentList	"""Cannot find home.\\n"""		873161	1					
ANR	874225	Argument	"""Cannot find home.\\n"""		873161	0					
ANR	874226	PrimaryExpression	"""Cannot find home.\\n"""		873161	0					
ANR	874227	ExpressionStatement	free ( home )	680:3:18142:18153	873161	2	True				
ANR	874228	CallExpression	free ( home )		873161	0					
ANR	874229	Callee	free		873161	0					
ANR	874230	Identifier	free		873161	0					
ANR	874231	ArgumentList	home		873161	1					
ANR	874232	Argument	home		873161	0					
ANR	874233	Identifier	home		873161	0					
ANR	874234	BreakStatement	break ;	682:2:18161:18166	873161	43	True				
ANR	874235	Label	case '1' :	683:1:18169:18177	873161	44	True				
ANR	874236	ExpressionStatement	"__core_cmp_bits ( core , r_num_math ( core -> num , input + 1 ) )"	684:2:18189:18246	873161	45	True				
ANR	874237	CallExpression	"__core_cmp_bits ( core , r_num_math ( core -> num , input + 1 ) )"		873161	0					
ANR	874238	Callee	__core_cmp_bits		873161	0					
ANR	874239	Identifier	__core_cmp_bits		873161	0					
ANR	874240	ArgumentList	core		873161	1					
ANR	874241	Argument	core		873161	0					
ANR	874242	Identifier	core		873161	0					
ANR	874243	Argument	"r_num_math ( core -> num , input + 1 )"		873161	1					
ANR	874244	CallExpression	"r_num_math ( core -> num , input + 1 )"		873161	0					
ANR	874245	Callee	r_num_math		873161	0					
ANR	874246	Identifier	r_num_math		873161	0					
ANR	874247	ArgumentList	core -> num		873161	1					
ANR	874248	Argument	core -> num		873161	0					
ANR	874249	PtrMemberAccess	core -> num		873161	0					
ANR	874250	Identifier	core		873161	0					
ANR	874251	Identifier	num		873161	1					
ANR	874252	Argument	input + 1		873161	1					
ANR	874253	AdditiveExpression	input + 1		873161	0		+			
ANR	874254	Identifier	input		873161	0					
ANR	874255	PrimaryExpression	1		873161	1					
ANR	874256	BreakStatement	break ;	685:2:18250:18255	873161	46	True				
ANR	874257	Label	case '2' :	686:1:18258:18266	873161	47	True				
ANR	874258	ExpressionStatement	"v16 = ( ut16 ) r_num_math ( core -> num , input + 1 )"	687:2:18278:18324	873161	48	True				
ANR	874259	AssignmentExpression	"v16 = ( ut16 ) r_num_math ( core -> num , input + 1 )"		873161	0		=			
ANR	874260	Identifier	v16		873161	0					
ANR	874261	CastExpression	"( ut16 ) r_num_math ( core -> num , input + 1 )"		873161	1					
ANR	874262	CastTarget	ut16		873161	0					
ANR	874263	CallExpression	"r_num_math ( core -> num , input + 1 )"		873161	1					
ANR	874264	Callee	r_num_math		873161	0					
ANR	874265	Identifier	r_num_math		873161	0					
ANR	874266	ArgumentList	core -> num		873161	1					
ANR	874267	Argument	core -> num		873161	0					
ANR	874268	PtrMemberAccess	core -> num		873161	0					
ANR	874269	Identifier	core		873161	0					
ANR	874270	Identifier	num		873161	1					
ANR	874271	Argument	input + 1		873161	1					
ANR	874272	AdditiveExpression	input + 1		873161	0		+			
ANR	874273	Identifier	input		873161	0					
ANR	874274	PrimaryExpression	1		873161	1					
ANR	874275	ExpressionStatement	"val = radare_compare ( core , block , ( ut8 * ) & v16 , sizeof ( v16 ) , 0 )"	688:2:18328:18393	873161	49	True				
ANR	874276	AssignmentExpression	"val = radare_compare ( core , block , ( ut8 * ) & v16 , sizeof ( v16 ) , 0 )"		873161	0		=			
ANR	874277	Identifier	val		873161	0					
ANR	874278	CallExpression	"radare_compare ( core , block , ( ut8 * ) & v16 , sizeof ( v16 ) , 0 )"		873161	1					
ANR	874279	Callee	radare_compare		873161	0					
ANR	874280	Identifier	radare_compare		873161	0					
ANR	874281	ArgumentList	core		873161	1					
ANR	874282	Argument	core		873161	0					
ANR	874283	Identifier	core		873161	0					
ANR	874284	Argument	block		873161	1					
ANR	874285	Identifier	block		873161	0					
ANR	874286	Argument	( ut8 * ) & v16		873161	2					
ANR	874287	CastExpression	( ut8 * ) & v16		873161	0					
ANR	874288	CastTarget	ut8 *		873161	0					
ANR	874289	UnaryOperationExpression	& v16		873161	1					
ANR	874290	UnaryOperator	&		873161	0					
ANR	874291	Identifier	v16		873161	1					
ANR	874292	Argument	sizeof ( v16 )		873161	3					
ANR	874293	SizeofExpression	sizeof ( v16 )		873161	0					
ANR	874294	Sizeof	sizeof		873161	0					
ANR	874295	SizeofOperand	v16		873161	1					
ANR	874296	Argument	0		873161	4					
ANR	874297	PrimaryExpression	0		873161	0					
ANR	874298	BreakStatement	break ;	689:2:18397:18402	873161	50	True				
ANR	874299	Label	case '4' :	690:1:18405:18413	873161	51	True				
ANR	874300	ExpressionStatement	"v32 = ( ut32 ) r_num_math ( core -> num , input + 1 )"	691:2:18425:18471	873161	52	True				
ANR	874301	AssignmentExpression	"v32 = ( ut32 ) r_num_math ( core -> num , input + 1 )"		873161	0		=			
ANR	874302	Identifier	v32		873161	0					
ANR	874303	CastExpression	"( ut32 ) r_num_math ( core -> num , input + 1 )"		873161	1					
ANR	874304	CastTarget	ut32		873161	0					
ANR	874305	CallExpression	"r_num_math ( core -> num , input + 1 )"		873161	1					
ANR	874306	Callee	r_num_math		873161	0					
ANR	874307	Identifier	r_num_math		873161	0					
ANR	874308	ArgumentList	core -> num		873161	1					
ANR	874309	Argument	core -> num		873161	0					
ANR	874310	PtrMemberAccess	core -> num		873161	0					
ANR	874311	Identifier	core		873161	0					
ANR	874312	Identifier	num		873161	1					
ANR	874313	Argument	input + 1		873161	1					
ANR	874314	AdditiveExpression	input + 1		873161	0		+			
ANR	874315	Identifier	input		873161	0					
ANR	874316	PrimaryExpression	1		873161	1					
ANR	874317	ExpressionStatement	"val = radare_compare ( core , block , ( ut8 * ) & v32 , sizeof ( v32 ) , 0 )"	692:2:18475:18540	873161	53	True				
ANR	874318	AssignmentExpression	"val = radare_compare ( core , block , ( ut8 * ) & v32 , sizeof ( v32 ) , 0 )"		873161	0		=			
ANR	874319	Identifier	val		873161	0					
ANR	874320	CallExpression	"radare_compare ( core , block , ( ut8 * ) & v32 , sizeof ( v32 ) , 0 )"		873161	1					
ANR	874321	Callee	radare_compare		873161	0					
ANR	874322	Identifier	radare_compare		873161	0					
ANR	874323	ArgumentList	core		873161	1					
ANR	874324	Argument	core		873161	0					
ANR	874325	Identifier	core		873161	0					
ANR	874326	Argument	block		873161	1					
ANR	874327	Identifier	block		873161	0					
ANR	874328	Argument	( ut8 * ) & v32		873161	2					
ANR	874329	CastExpression	( ut8 * ) & v32		873161	0					
ANR	874330	CastTarget	ut8 *		873161	0					
ANR	874331	UnaryOperationExpression	& v32		873161	1					
ANR	874332	UnaryOperator	&		873161	0					
ANR	874333	Identifier	v32		873161	1					
ANR	874334	Argument	sizeof ( v32 )		873161	3					
ANR	874335	SizeofExpression	sizeof ( v32 )		873161	0					
ANR	874336	Sizeof	sizeof		873161	0					
ANR	874337	SizeofOperand	v32		873161	1					
ANR	874338	Argument	0		873161	4					
ANR	874339	PrimaryExpression	0		873161	0					
ANR	874340	BreakStatement	break ;	693:2:18544:18549	873161	54	True				
ANR	874341	Label	case '8' :	694:1:18552:18560	873161	55	True				
ANR	874342	ExpressionStatement	"v64 = ( ut64 ) r_num_math ( core -> num , input + 1 )"	695:2:18572:18618	873161	56	True				
ANR	874343	AssignmentExpression	"v64 = ( ut64 ) r_num_math ( core -> num , input + 1 )"		873161	0		=			
ANR	874344	Identifier	v64		873161	0					
ANR	874345	CastExpression	"( ut64 ) r_num_math ( core -> num , input + 1 )"		873161	1					
ANR	874346	CastTarget	ut64		873161	0					
ANR	874347	CallExpression	"r_num_math ( core -> num , input + 1 )"		873161	1					
ANR	874348	Callee	r_num_math		873161	0					
ANR	874349	Identifier	r_num_math		873161	0					
ANR	874350	ArgumentList	core -> num		873161	1					
ANR	874351	Argument	core -> num		873161	0					
ANR	874352	PtrMemberAccess	core -> num		873161	0					
ANR	874353	Identifier	core		873161	0					
ANR	874354	Identifier	num		873161	1					
ANR	874355	Argument	input + 1		873161	1					
ANR	874356	AdditiveExpression	input + 1		873161	0		+			
ANR	874357	Identifier	input		873161	0					
ANR	874358	PrimaryExpression	1		873161	1					
ANR	874359	ExpressionStatement	"val = radare_compare ( core , block , ( ut8 * ) & v64 , sizeof ( v64 ) , 0 )"	696:2:18622:18687	873161	57	True				
ANR	874360	AssignmentExpression	"val = radare_compare ( core , block , ( ut8 * ) & v64 , sizeof ( v64 ) , 0 )"		873161	0		=			
ANR	874361	Identifier	val		873161	0					
ANR	874362	CallExpression	"radare_compare ( core , block , ( ut8 * ) & v64 , sizeof ( v64 ) , 0 )"		873161	1					
ANR	874363	Callee	radare_compare		873161	0					
ANR	874364	Identifier	radare_compare		873161	0					
ANR	874365	ArgumentList	core		873161	1					
ANR	874366	Argument	core		873161	0					
ANR	874367	Identifier	core		873161	0					
ANR	874368	Argument	block		873161	1					
ANR	874369	Identifier	block		873161	0					
ANR	874370	Argument	( ut8 * ) & v64		873161	2					
ANR	874371	CastExpression	( ut8 * ) & v64		873161	0					
ANR	874372	CastTarget	ut8 *		873161	0					
ANR	874373	UnaryOperationExpression	& v64		873161	1					
ANR	874374	UnaryOperator	&		873161	0					
ANR	874375	Identifier	v64		873161	1					
ANR	874376	Argument	sizeof ( v64 )		873161	3					
ANR	874377	SizeofExpression	sizeof ( v64 )		873161	0					
ANR	874378	Sizeof	sizeof		873161	0					
ANR	874379	SizeofOperand	v64		873161	1					
ANR	874380	Argument	0		873161	4					
ANR	874381	PrimaryExpression	0		873161	0					
ANR	874382	BreakStatement	break ;	697:2:18691:18696	873161	58	True				
ANR	874383	Label	case 'c' :	698:1:18699:18707	873161	59	True				
ANR	874384	IfStatement	if ( input [ 1 ] == 'd' )		873161	60					
ANR	874385	Condition	input [ 1 ] == 'd'	699:6:18723:18737	873161	0	True				
ANR	874386	EqualityExpression	input [ 1 ] == 'd'		873161	0		==			
ANR	874387	ArrayIndexing	input [ 1 ]		873161	0					
ANR	874388	Identifier	input		873161	0					
ANR	874389	PrimaryExpression	1		873161	1					
ANR	874390	PrimaryExpression	'd'		873161	1					
ANR	874391	CompoundStatement		200:23:4601:4601	873161	1					
ANR	874392	ExpressionStatement	"cmd_cmp_disasm ( core , input + 2 , 'c' )"	700:3:18754:18791	873161	0	True				
ANR	874393	CallExpression	"cmd_cmp_disasm ( core , input + 2 , 'c' )"		873161	0					
ANR	874394	Callee	cmd_cmp_disasm		873161	0					
ANR	874395	Identifier	cmd_cmp_disasm		873161	0					
ANR	874396	ArgumentList	core		873161	1					
ANR	874397	Argument	core		873161	0					
ANR	874398	Identifier	core		873161	0					
ANR	874399	Argument	input + 2		873161	1					
ANR	874400	AdditiveExpression	input + 2		873161	0		+			
ANR	874401	Identifier	input		873161	0					
ANR	874402	PrimaryExpression	2		873161	1					
ANR	874403	Argument	'c'		873161	2					
ANR	874404	PrimaryExpression	'c'		873161	0					
ANR	874405	ElseStatement	else		873161	0					
ANR	874406	CompoundStatement		214:3:5045:5078	873161	0					
ANR	874407	IdentifierDeclStatement	ut32 oflags = core -> print -> flags ;	702:3:18807:18839	873161	0	True				
ANR	874408	IdentifierDecl	oflags = core -> print -> flags		873161	0					
ANR	874409	IdentifierDeclType	ut32		873161	0					
ANR	874410	Identifier	oflags		873161	1					
ANR	874411	AssignmentExpression	oflags = core -> print -> flags		873161	2		=			
ANR	874412	Identifier	oflags		873161	0					
ANR	874413	PtrMemberAccess	core -> print -> flags		873161	1					
ANR	874414	PtrMemberAccess	core -> print		873161	0					
ANR	874415	Identifier	core		873161	0					
ANR	874416	Identifier	print		873161	1					
ANR	874417	Identifier	flags		873161	1					
ANR	874418	IdentifierDeclStatement	ut64 addr = 0 ;	703:3:18844:18857	873161	1	True				
ANR	874419	IdentifierDecl	addr = 0		873161	0					
ANR	874420	IdentifierDeclType	ut64		873161	0					
ANR	874421	Identifier	addr		873161	1					
ANR	874422	AssignmentExpression	addr = 0		873161	2		=			
ANR	874423	Identifier	addr		873161	0					
ANR	874424	PrimaryExpression	0		873161	1					
ANR	874425	IfStatement	if ( input [ 1 ] == 'c' )		873161	2					
ANR	874426	Condition	input [ 1 ] == 'c'	704:7:18918:18932	873161	0	True				
ANR	874427	EqualityExpression	input [ 1 ] == 'c'		873161	0		==			
ANR	874428	ArrayIndexing	input [ 1 ]		873161	0					
ANR	874429	Identifier	input		873161	0					
ANR	874430	PrimaryExpression	1		873161	1					
ANR	874431	PrimaryExpression	'c'		873161	1					
ANR	874432	CompoundStatement		205:24:4796:4796	873161	1					
ANR	874433	ExpressionStatement	core -> print -> flags |= R_PRINT_FLAGS_DIFFOUT	705:4:18950:18993	873161	0	True				
ANR	874434	AssignmentExpression	core -> print -> flags |= R_PRINT_FLAGS_DIFFOUT		873161	0		|=			
ANR	874435	PtrMemberAccess	core -> print -> flags		873161	0					
ANR	874436	PtrMemberAccess	core -> print		873161	0					
ANR	874437	Identifier	core		873161	0					
ANR	874438	Identifier	print		873161	1					
ANR	874439	Identifier	flags		873161	1					
ANR	874440	Identifier	R_PRINT_FLAGS_DIFFOUT		873161	1					
ANR	874441	ExpressionStatement	"addr = r_num_math ( core -> num , input + 2 )"	706:4:18999:19039	873161	1	True				
ANR	874442	AssignmentExpression	"addr = r_num_math ( core -> num , input + 2 )"		873161	0		=			
ANR	874443	Identifier	addr		873161	0					
ANR	874444	CallExpression	"r_num_math ( core -> num , input + 2 )"		873161	1					
ANR	874445	Callee	r_num_math		873161	0					
ANR	874446	Identifier	r_num_math		873161	0					
ANR	874447	ArgumentList	core -> num		873161	1					
ANR	874448	Argument	core -> num		873161	0					
ANR	874449	PtrMemberAccess	core -> num		873161	0					
ANR	874450	Identifier	core		873161	0					
ANR	874451	Identifier	num		873161	1					
ANR	874452	Argument	input + 2		873161	1					
ANR	874453	AdditiveExpression	input + 2		873161	0		+			
ANR	874454	Identifier	input		873161	0					
ANR	874455	PrimaryExpression	2		873161	1					
ANR	874456	ElseStatement	else		873161	0					
ANR	874457	CompoundStatement		208:10:4912:4912	873161	0					
ANR	874458	IfStatement	if ( * input && input [ 1 ] )		873161	0					
ANR	874459	Condition	* input && input [ 1 ]	708:8:19061:19078	873161	0	True				
ANR	874460	AndExpression	* input && input [ 1 ]		873161	0		&&			
ANR	874461	UnaryOperationExpression	* input		873161	0					
ANR	874462	UnaryOperator	*		873161	0					
ANR	874463	Identifier	input		873161	1					
ANR	874464	ArrayIndexing	input [ 1 ]		873161	1					
ANR	874465	Identifier	input		873161	0					
ANR	874466	PrimaryExpression	1		873161	1					
ANR	874467	CompoundStatement		209:28:4942:4942	873161	1					
ANR	874468	ExpressionStatement	"addr = r_num_math ( core -> num , input + 2 )"	709:5:19088:19128	873161	0	True				
ANR	874469	AssignmentExpression	"addr = r_num_math ( core -> num , input + 2 )"		873161	0		=			
ANR	874470	Identifier	addr		873161	0					
ANR	874471	CallExpression	"r_num_math ( core -> num , input + 2 )"		873161	1					
ANR	874472	Callee	r_num_math		873161	0					
ANR	874473	Identifier	r_num_math		873161	0					
ANR	874474	ArgumentList	core -> num		873161	1					
ANR	874475	Argument	core -> num		873161	0					
ANR	874476	PtrMemberAccess	core -> num		873161	0					
ANR	874477	Identifier	core		873161	0					
ANR	874478	Identifier	num		873161	1					
ANR	874479	Argument	input + 2		873161	1					
ANR	874480	AdditiveExpression	input + 2		873161	0		+			
ANR	874481	Identifier	input		873161	0					
ANR	874482	PrimaryExpression	2		873161	1					
ANR	874483	IdentifierDeclStatement	int col = core -> cons -> columns > 123 ;	712:3:19144:19179	873161	3	True				
ANR	874484	IdentifierDecl	col = core -> cons -> columns > 123		873161	0					
ANR	874485	IdentifierDeclType	int		873161	0					
ANR	874486	Identifier	col		873161	1					
ANR	874487	AssignmentExpression	col = core -> cons -> columns > 123		873161	2		=			
ANR	874488	Identifier	col		873161	0					
ANR	874489	RelationalExpression	core -> cons -> columns > 123		873161	1		>			
ANR	874490	PtrMemberAccess	core -> cons -> columns		873161	0					
ANR	874491	PtrMemberAccess	core -> cons		873161	0					
ANR	874492	Identifier	core		873161	0					
ANR	874493	Identifier	cons		873161	1					
ANR	874494	Identifier	columns		873161	1					
ANR	874495	PrimaryExpression	123		873161	1					
ANR	874496	IdentifierDeclStatement	ut8 * b = malloc ( core -> blocksize ) ;	713:3:19184:19217	873161	4	True				
ANR	874497	IdentifierDecl	* b = malloc ( core -> blocksize )		873161	0					
ANR	874498	IdentifierDeclType	ut8 *		873161	0					
ANR	874499	Identifier	b		873161	1					
ANR	874500	AssignmentExpression	* b = malloc ( core -> blocksize )		873161	2		=			
ANR	874501	Identifier	b		873161	0					
ANR	874502	CallExpression	malloc ( core -> blocksize )		873161	1					
ANR	874503	Callee	malloc		873161	0					
ANR	874504	Identifier	malloc		873161	0					
ANR	874505	ArgumentList	core -> blocksize		873161	1					
ANR	874506	Argument	core -> blocksize		873161	0					
ANR	874507	PtrMemberAccess	core -> blocksize		873161	0					
ANR	874508	Identifier	core		873161	0					
ANR	874509	Identifier	blocksize		873161	1					
ANR	874510	IfStatement	if ( b != NULL )		873161	5					
ANR	874511	Condition	b != NULL	714:7:19226:19234	873161	0	True				
ANR	874512	EqualityExpression	b != NULL		873161	0		!=			
ANR	874513	Identifier	b		873161	0					
ANR	874514	Identifier	NULL		873161	1					
ANR	874515	CompoundStatement		215:18:5098:5098	873161	1					
ANR	874516	ExpressionStatement	"memset ( b , 0xff , core -> blocksize )"	715:4:19243:19276	873161	0	True				
ANR	874517	CallExpression	"memset ( b , 0xff , core -> blocksize )"		873161	0					
ANR	874518	Callee	memset		873161	0					
ANR	874519	Identifier	memset		873161	0					
ANR	874520	ArgumentList	b		873161	1					
ANR	874521	Argument	b		873161	0					
ANR	874522	Identifier	b		873161	0					
ANR	874523	Argument	0xff		873161	1					
ANR	874524	PrimaryExpression	0xff		873161	0					
ANR	874525	Argument	core -> blocksize		873161	2					
ANR	874526	PtrMemberAccess	core -> blocksize		873161	0					
ANR	874527	Identifier	core		873161	0					
ANR	874528	Identifier	blocksize		873161	1					
ANR	874529	ExpressionStatement	"r_io_read_at ( core -> io , addr , b , core -> blocksize )"	716:4:19282:19331	873161	1	True				
ANR	874530	CallExpression	"r_io_read_at ( core -> io , addr , b , core -> blocksize )"		873161	0					
ANR	874531	Callee	r_io_read_at		873161	0					
ANR	874532	Identifier	r_io_read_at		873161	0					
ANR	874533	ArgumentList	core -> io		873161	1					
ANR	874534	Argument	core -> io		873161	0					
ANR	874535	PtrMemberAccess	core -> io		873161	0					
ANR	874536	Identifier	core		873161	0					
ANR	874537	Identifier	io		873161	1					
ANR	874538	Argument	addr		873161	1					
ANR	874539	Identifier	addr		873161	0					
ANR	874540	Argument	b		873161	2					
ANR	874541	Identifier	b		873161	0					
ANR	874542	Argument	core -> blocksize		873161	3					
ANR	874543	PtrMemberAccess	core -> blocksize		873161	0					
ANR	874544	Identifier	core		873161	0					
ANR	874545	Identifier	blocksize		873161	1					
ANR	874546	ExpressionStatement	"r_print_hexdiff ( core -> print , core -> offset , block , addr , b , core -> blocksize , col )"	717:4:19337:19423	873161	2	True				
ANR	874547	CallExpression	"r_print_hexdiff ( core -> print , core -> offset , block , addr , b , core -> blocksize , col )"		873161	0					
ANR	874548	Callee	r_print_hexdiff		873161	0					
ANR	874549	Identifier	r_print_hexdiff		873161	0					
ANR	874550	ArgumentList	core -> print		873161	1					
ANR	874551	Argument	core -> print		873161	0					
ANR	874552	PtrMemberAccess	core -> print		873161	0					
ANR	874553	Identifier	core		873161	0					
ANR	874554	Identifier	print		873161	1					
ANR	874555	Argument	core -> offset		873161	1					
ANR	874556	PtrMemberAccess	core -> offset		873161	0					
ANR	874557	Identifier	core		873161	0					
ANR	874558	Identifier	offset		873161	1					
ANR	874559	Argument	block		873161	2					
ANR	874560	Identifier	block		873161	0					
ANR	874561	Argument	addr		873161	3					
ANR	874562	Identifier	addr		873161	0					
ANR	874563	Argument	b		873161	4					
ANR	874564	Identifier	b		873161	0					
ANR	874565	Argument	core -> blocksize		873161	5					
ANR	874566	PtrMemberAccess	core -> blocksize		873161	0					
ANR	874567	Identifier	core		873161	0					
ANR	874568	Identifier	blocksize		873161	1					
ANR	874569	Argument	col		873161	6					
ANR	874570	Identifier	col		873161	0					
ANR	874571	ExpressionStatement	free ( b )	719:4:19429:19437	873161	3	True				
ANR	874572	CallExpression	free ( b )		873161	0					
ANR	874573	Callee	free		873161	0					
ANR	874574	Identifier	free		873161	0					
ANR	874575	ArgumentList	b		873161	1					
ANR	874576	Argument	b		873161	0					
ANR	874577	Identifier	b		873161	0					
ANR	874578	ExpressionStatement	core -> print -> flags = oflags	721:3:19447:19474	873161	6	True				
ANR	874579	AssignmentExpression	core -> print -> flags = oflags		873161	0		=			
ANR	874580	PtrMemberAccess	core -> print -> flags		873161	0					
ANR	874581	PtrMemberAccess	core -> print		873161	0					
ANR	874582	Identifier	core		873161	0					
ANR	874583	Identifier	print		873161	1					
ANR	874584	Identifier	flags		873161	1					
ANR	874585	Identifier	oflags		873161	1					
ANR	874586	BreakStatement	break ;	723:2:19482:19487	873161	61	True				
ANR	874587	Label	case 'g' :	724:1:19490:19498	873161	62	True				
ANR	874588	CompoundStatement		229:2:5441:5459	873161	63					
ANR	874589	IdentifierDeclStatement	int diffops = 0 ;	726:2:19545:19560	873161	0	True				
ANR	874590	IdentifierDecl	diffops = 0		873161	0					
ANR	874591	IdentifierDeclType	int		873161	0					
ANR	874592	Identifier	diffops		873161	1					
ANR	874593	AssignmentExpression	diffops = 0		873161	2		=			
ANR	874594	Identifier	diffops		873161	0					
ANR	874595	PrimaryExpression	0		873161	1					
ANR	874596	IdentifierDeclStatement	RCore * core2 ;	727:2:19564:19576	873161	1	True				
ANR	874597	IdentifierDecl	* core2		873161	0					
ANR	874598	IdentifierDeclType	RCore *		873161	0					
ANR	874599	Identifier	core2		873161	1					
ANR	874600	IdentifierDeclStatement	char * file2 = NULL ;	728:2:19580:19598	873161	2	True				
ANR	874601	IdentifierDecl	* file2 = NULL		873161	0					
ANR	874602	IdentifierDeclType	char *		873161	0					
ANR	874603	Identifier	file2		873161	1					
ANR	874604	AssignmentExpression	* file2 = NULL		873161	2		=			
ANR	874605	Identifier	NULL		873161	0					
ANR	874606	Identifier	NULL		873161	1					
ANR	874607	SwitchStatement	switch ( input [ 1 ] )		873161	3					
ANR	874608	Condition	input [ 1 ]	729:10:19610:19617	873161	0	True				
ANR	874609	ArrayIndexing	input [ 1 ]		873161	0					
ANR	874610	Identifier	input		873161	0					
ANR	874611	PrimaryExpression	1		873161	1					
ANR	874612	CompoundStatement		230:20:5481:5481	873161	1					
ANR	874613	Label	case 'o' :	730:2:19624:19632	873161	0	True				
ANR	874614	ExpressionStatement	file2 = ( char * ) r_str_trim_ro ( input + 2 )	731:3:19654:19696	873161	1	True				
ANR	874615	AssignmentExpression	file2 = ( char * ) r_str_trim_ro ( input + 2 )		873161	0		=			
ANR	874616	Identifier	file2		873161	0					
ANR	874617	CastExpression	( char * ) r_str_trim_ro ( input + 2 )		873161	1					
ANR	874618	CastTarget	char *		873161	0					
ANR	874619	CallExpression	r_str_trim_ro ( input + 2 )		873161	1					
ANR	874620	Callee	r_str_trim_ro		873161	0					
ANR	874621	Identifier	r_str_trim_ro		873161	0					
ANR	874622	ArgumentList	input + 2		873161	1					
ANR	874623	Argument	input + 2		873161	0					
ANR	874624	AdditiveExpression	input + 2		873161	0		+			
ANR	874625	Identifier	input		873161	0					
ANR	874626	PrimaryExpression	2		873161	1					
ANR	874627	ExpressionStatement	"r_anal_diff_setup ( core -> anal , true , - 1 , - 1 )"	732:3:19701:19745	873161	2	True				
ANR	874628	CallExpression	"r_anal_diff_setup ( core -> anal , true , - 1 , - 1 )"		873161	0					
ANR	874629	Callee	r_anal_diff_setup		873161	0					
ANR	874630	Identifier	r_anal_diff_setup		873161	0					
ANR	874631	ArgumentList	core -> anal		873161	1					
ANR	874632	Argument	core -> anal		873161	0					
ANR	874633	PtrMemberAccess	core -> anal		873161	0					
ANR	874634	Identifier	core		873161	0					
ANR	874635	Identifier	anal		873161	1					
ANR	874636	Argument	true		873161	1					
ANR	874637	Identifier	true		873161	0					
ANR	874638	Argument	- 1		873161	2					
ANR	874639	UnaryOperationExpression	- 1		873161	0					
ANR	874640	UnaryOperator	-		873161	0					
ANR	874641	PrimaryExpression	1		873161	1					
ANR	874642	Argument	- 1		873161	3					
ANR	874643	UnaryOperationExpression	- 1		873161	0					
ANR	874644	UnaryOperator	-		873161	0					
ANR	874645	PrimaryExpression	1		873161	1					
ANR	874646	BreakStatement	break ;	733:3:19750:19755	873161	3	True				
ANR	874647	Label	case 'f' :	734:2:19759:19767	873161	4	True				
ANR	874648	ExpressionStatement	"eprintf ( ""TODO: agf is experimental\\n"" )"	735:3:19789:19828	873161	5	True				
ANR	874649	CallExpression	"eprintf ( ""TODO: agf is experimental\\n"" )"		873161	0					
ANR	874650	Callee	eprintf		873161	0					
ANR	874651	Identifier	eprintf		873161	0					
ANR	874652	ArgumentList	"""TODO: agf is experimental\\n"""		873161	1					
ANR	874653	Argument	"""TODO: agf is experimental\\n"""		873161	0					
ANR	874654	PrimaryExpression	"""TODO: agf is experimental\\n"""		873161	0					
ANR	874655	ExpressionStatement	"r_anal_diff_setup ( core -> anal , true , - 1 , - 1 )"	736:3:19833:19877	873161	6	True				
ANR	874656	CallExpression	"r_anal_diff_setup ( core -> anal , true , - 1 , - 1 )"		873161	0					
ANR	874657	Callee	r_anal_diff_setup		873161	0					
ANR	874658	Identifier	r_anal_diff_setup		873161	0					
ANR	874659	ArgumentList	core -> anal		873161	1					
ANR	874660	Argument	core -> anal		873161	0					
ANR	874661	PtrMemberAccess	core -> anal		873161	0					
ANR	874662	Identifier	core		873161	0					
ANR	874663	Identifier	anal		873161	1					
ANR	874664	Argument	true		873161	1					
ANR	874665	Identifier	true		873161	0					
ANR	874666	Argument	- 1		873161	2					
ANR	874667	UnaryOperationExpression	- 1		873161	0					
ANR	874668	UnaryOperator	-		873161	0					
ANR	874669	PrimaryExpression	1		873161	1					
ANR	874670	Argument	- 1		873161	3					
ANR	874671	UnaryOperationExpression	- 1		873161	0					
ANR	874672	UnaryOperator	-		873161	0					
ANR	874673	PrimaryExpression	1		873161	1					
ANR	874674	ExpressionStatement	"r_core_gdiff_fcn ( core , core -> offset , r_num_math ( core -> num , input + 2 ) )"	737:3:19882:19958	873161	7	True				
ANR	874675	CallExpression	"r_core_gdiff_fcn ( core , core -> offset , r_num_math ( core -> num , input + 2 ) )"		873161	0					
ANR	874676	Callee	r_core_gdiff_fcn		873161	0					
ANR	874677	Identifier	r_core_gdiff_fcn		873161	0					
ANR	874678	ArgumentList	core		873161	1					
ANR	874679	Argument	core		873161	0					
ANR	874680	Identifier	core		873161	0					
ANR	874681	Argument	core -> offset		873161	1					
ANR	874682	PtrMemberAccess	core -> offset		873161	0					
ANR	874683	Identifier	core		873161	0					
ANR	874684	Identifier	offset		873161	1					
ANR	874685	Argument	"r_num_math ( core -> num , input + 2 )"		873161	2					
ANR	874686	CallExpression	"r_num_math ( core -> num , input + 2 )"		873161	0					
ANR	874687	Callee	r_num_math		873161	0					
ANR	874688	Identifier	r_num_math		873161	0					
ANR	874689	ArgumentList	core -> num		873161	1					
ANR	874690	Argument	core -> num		873161	0					
ANR	874691	PtrMemberAccess	core -> num		873161	0					
ANR	874692	Identifier	core		873161	0					
ANR	874693	Identifier	num		873161	1					
ANR	874694	Argument	input + 2		873161	1					
ANR	874695	AdditiveExpression	input + 2		873161	0		+			
ANR	874696	Identifier	input		873161	0					
ANR	874697	PrimaryExpression	2		873161	1					
ANR	874698	ReturnStatement	return false ;	739:3:19963:19975	873161	8	True				
ANR	874699	Identifier	false		873161	0					
ANR	874700	Label	case ' ' :	740:2:19979:19987	873161	9	True				
ANR	874701	ExpressionStatement	file2 = ( char * ) r_str_trim_ro ( input + 2 )	741:3:19992:20034	873161	10	True				
ANR	874702	AssignmentExpression	file2 = ( char * ) r_str_trim_ro ( input + 2 )		873161	0		=			
ANR	874703	Identifier	file2		873161	0					
ANR	874704	CastExpression	( char * ) r_str_trim_ro ( input + 2 )		873161	1					
ANR	874705	CastTarget	char *		873161	0					
ANR	874706	CallExpression	r_str_trim_ro ( input + 2 )		873161	1					
ANR	874707	Callee	r_str_trim_ro		873161	0					
ANR	874708	Identifier	r_str_trim_ro		873161	0					
ANR	874709	ArgumentList	input + 2		873161	1					
ANR	874710	Argument	input + 2		873161	0					
ANR	874711	AdditiveExpression	input + 2		873161	0		+			
ANR	874712	Identifier	input		873161	0					
ANR	874713	PrimaryExpression	2		873161	1					
ANR	874714	ExpressionStatement	"r_anal_diff_setup ( core -> anal , false , - 1 , - 1 )"	742:3:20039:20084	873161	11	True				
ANR	874715	CallExpression	"r_anal_diff_setup ( core -> anal , false , - 1 , - 1 )"		873161	0					
ANR	874716	Callee	r_anal_diff_setup		873161	0					
ANR	874717	Identifier	r_anal_diff_setup		873161	0					
ANR	874718	ArgumentList	core -> anal		873161	1					
ANR	874719	Argument	core -> anal		873161	0					
ANR	874720	PtrMemberAccess	core -> anal		873161	0					
ANR	874721	Identifier	core		873161	0					
ANR	874722	Identifier	anal		873161	1					
ANR	874723	Argument	false		873161	1					
ANR	874724	Identifier	false		873161	0					
ANR	874725	Argument	- 1		873161	2					
ANR	874726	UnaryOperationExpression	- 1		873161	0					
ANR	874727	UnaryOperator	-		873161	0					
ANR	874728	PrimaryExpression	1		873161	1					
ANR	874729	Argument	- 1		873161	3					
ANR	874730	UnaryOperationExpression	- 1		873161	0					
ANR	874731	UnaryOperator	-		873161	0					
ANR	874732	PrimaryExpression	1		873161	1					
ANR	874733	BreakStatement	break ;	743:3:20089:20094	873161	12	True				
ANR	874734	Label	default :	744:2:20098:20105	873161	13	True				
ANR	874735	Identifier	default		873161	0					
ANR	874736	CompoundStatement		246:3:5973:6247	873161	14					
ANR	874737	IdentifierDeclStatement	"const char * help_message [ ] = { ""Usage: cg"" , """" , ""Graph code commands"" , ""cg"" , """" , ""diff ratio among functions (columns: off-A, match-ratio, off-B)"" , ""cgf"" , ""[fcn]"" , ""Compare functions (curseek vs fcn)"" , ""cgo"" , """" , ""Opcode-bytes code graph diff"" , NULL } ;"	745:3:20112:20386	873161	0	True				
ANR	874738	IdentifierDecl	"* help_message [ ] = { ""Usage: cg"" , """" , ""Graph code commands"" , ""cg"" , """" , ""diff ratio among functions (columns: off-A, match-ratio, off-B)"" , ""cgf"" , ""[fcn]"" , ""Compare functions (curseek vs fcn)"" , ""cgo"" , """" , ""Opcode-bytes code graph diff"" , NULL }"		873161	0					
ANR	874739	IdentifierDeclType	const char * [ ]		873161	0					
ANR	874740	Identifier	help_message		873161	1					
ANR	874741	AssignmentExpression	"* help_message [ ] = { ""Usage: cg"" , """" , ""Graph code commands"" , ""cg"" , """" , ""diff ratio among functions (columns: off-A, match-ratio, off-B)"" , ""cgf"" , ""[fcn]"" , ""Compare functions (curseek vs fcn)"" , ""cgo"" , """" , ""Opcode-bytes code graph diff"" , NULL }"		873161	2		=			
ANR	874742	Identifier	help_message		873161	0					
ANR	874743	InitializerList	"""Usage: cg"""		873161	1					
ANR	874744	PrimaryExpression	"""Usage: cg"""		873161	0					
ANR	874745	PrimaryExpression	""""""		873161	1					
ANR	874746	PrimaryExpression	"""Graph code commands"""		873161	2					
ANR	874747	PrimaryExpression	"""cg"""		873161	3					
ANR	874748	PrimaryExpression	""""""		873161	4					
ANR	874749	PrimaryExpression	"""diff ratio among functions (columns: off-A, match-ratio, off-B)"""		873161	5					
ANR	874750	PrimaryExpression	"""cgf"""		873161	6					
ANR	874751	PrimaryExpression	"""[fcn]"""		873161	7					
ANR	874752	PrimaryExpression	"""Compare functions (curseek vs fcn)"""		873161	8					
ANR	874753	PrimaryExpression	"""cgo"""		873161	9					
ANR	874754	PrimaryExpression	""""""		873161	10					
ANR	874755	PrimaryExpression	"""Opcode-bytes code graph diff"""		873161	11					
ANR	874756	Identifier	NULL		873161	12					
ANR	874757	ExpressionStatement	"r_core_cmd_help ( core , help_message )"	752:3:20391:20427	873161	1	True				
ANR	874758	CallExpression	"r_core_cmd_help ( core , help_message )"		873161	0					
ANR	874759	Callee	r_core_cmd_help		873161	0					
ANR	874760	Identifier	r_core_cmd_help		873161	0					
ANR	874761	ArgumentList	core		873161	1					
ANR	874762	Argument	core		873161	0					
ANR	874763	Identifier	core		873161	0					
ANR	874764	Argument	help_message		873161	1					
ANR	874765	Identifier	help_message		873161	0					
ANR	874766	ReturnStatement	return false ;	753:3:20432:20444	873161	2	True				
ANR	874767	Identifier	false		873161	0					
ANR	874768	IfStatement	if ( r_file_size ( file2 ) <= 0 )		873161	4					
ANR	874769	Condition	r_file_size ( file2 ) <= 0	757:6:20461:20484	873161	0	True				
ANR	874770	RelationalExpression	r_file_size ( file2 ) <= 0		873161	0		<=			
ANR	874771	CallExpression	r_file_size ( file2 )		873161	0					
ANR	874772	Callee	r_file_size		873161	0					
ANR	874773	Identifier	r_file_size		873161	0					
ANR	874774	ArgumentList	file2		873161	1					
ANR	874775	Argument	file2		873161	0					
ANR	874776	Identifier	file2		873161	0					
ANR	874777	PrimaryExpression	0		873161	1					
ANR	874778	CompoundStatement		258:32:6348:6348	873161	1					
ANR	874779	ExpressionStatement	"eprintf ( ""Cannot compare with file %s\\n"" , file2 )"	758:3:20492:20540	873161	0	True				
ANR	874780	CallExpression	"eprintf ( ""Cannot compare with file %s\\n"" , file2 )"		873161	0					
ANR	874781	Callee	eprintf		873161	0					
ANR	874782	Identifier	eprintf		873161	0					
ANR	874783	ArgumentList	"""Cannot compare with file %s\\n"""		873161	1					
ANR	874784	Argument	"""Cannot compare with file %s\\n"""		873161	0					
ANR	874785	PrimaryExpression	"""Cannot compare with file %s\\n"""		873161	0					
ANR	874786	Argument	file2		873161	1					
ANR	874787	Identifier	file2		873161	0					
ANR	874788	ReturnStatement	return false ;	759:3:20545:20557	873161	1	True				
ANR	874789	Identifier	false		873161	0					
ANR	874790	IfStatement	if ( ! ( core2 = r_core_new ( ) ) )		873161	5					
ANR	874791	Condition	! ( core2 = r_core_new ( ) )	762:6:20570:20593	873161	0	True				
ANR	874792	UnaryOperationExpression	! ( core2 = r_core_new ( ) )		873161	0					
ANR	874793	UnaryOperator	!		873161	0					
ANR	874794	AssignmentExpression	core2 = r_core_new ( )		873161	1		=			
ANR	874795	Identifier	core2		873161	0					
ANR	874796	CallExpression	r_core_new ( )		873161	1					
ANR	874797	Callee	r_core_new		873161	0					
ANR	874798	Identifier	r_core_new		873161	0					
ANR	874799	ArgumentList			873161	1					
ANR	874800	CompoundStatement		263:32:6457:6457	873161	1					
ANR	874801	ExpressionStatement	"eprintf ( ""Cannot init diff core\\n"" )"	763:3:20601:20636	873161	0	True				
ANR	874802	CallExpression	"eprintf ( ""Cannot init diff core\\n"" )"		873161	0					
ANR	874803	Callee	eprintf		873161	0					
ANR	874804	Identifier	eprintf		873161	0					
ANR	874805	ArgumentList	"""Cannot init diff core\\n"""		873161	1					
ANR	874806	Argument	"""Cannot init diff core\\n"""		873161	0					
ANR	874807	PrimaryExpression	"""Cannot init diff core\\n"""		873161	0					
ANR	874808	ReturnStatement	return false ;	764:3:20641:20653	873161	1	True				
ANR	874809	Identifier	false		873161	0					
ANR	874810	ExpressionStatement	"r_core_loadlibs ( core2 , R_CORE_LOADLIBS_ALL , NULL )"	766:2:20661:20711	873161	6	True				
ANR	874811	CallExpression	"r_core_loadlibs ( core2 , R_CORE_LOADLIBS_ALL , NULL )"		873161	0					
ANR	874812	Callee	r_core_loadlibs		873161	0					
ANR	874813	Identifier	r_core_loadlibs		873161	0					
ANR	874814	ArgumentList	core2		873161	1					
ANR	874815	Argument	core2		873161	0					
ANR	874816	Identifier	core2		873161	0					
ANR	874817	Argument	R_CORE_LOADLIBS_ALL		873161	1					
ANR	874818	Identifier	R_CORE_LOADLIBS_ALL		873161	0					
ANR	874819	Argument	NULL		873161	2					
ANR	874820	Identifier	NULL		873161	0					
ANR	874821	ExpressionStatement	core2 -> io -> va = core -> io -> va	767:2:20715:20743	873161	7	True				
ANR	874822	AssignmentExpression	core2 -> io -> va = core -> io -> va		873161	0		=			
ANR	874823	PtrMemberAccess	core2 -> io -> va		873161	0					
ANR	874824	PtrMemberAccess	core2 -> io		873161	0					
ANR	874825	Identifier	core2		873161	0					
ANR	874826	Identifier	io		873161	1					
ANR	874827	Identifier	va		873161	1					
ANR	874828	PtrMemberAccess	core -> io -> va		873161	1					
ANR	874829	PtrMemberAccess	core -> io		873161	0					
ANR	874830	Identifier	core		873161	0					
ANR	874831	Identifier	io		873161	1					
ANR	874832	Identifier	va		873161	1					
ANR	874833	Statement	if	768:2:20747:20748	873161	8	True				
ANR	874834	Statement	(	768:5:20750:20750	873161	9	True				
ANR	874835	Statement	!	768:6:20751:20751	873161	10	True				
ANR	874836	Statement	r_core_file_open	768:7:20752:20767	873161	11	True				
ANR	874837	Statement	(	768:24:20769:20769	873161	12	True				
ANR	874838	Statement	core2	768:25:20770:20774	873161	13	True				
ANR	874839	Statement	","	768:30:20775:20775	873161	14	True				
ANR	874840	Statement	file2	768:32:20777:20781	873161	15	True				
ANR	874841	Statement	","	768:37:20782:20782	873161	16	True				
ANR	874842	Statement	0	768:39:20784:20784	873161	17	True				
ANR	874843	Statement	","	768:40:20785:20785	873161	18	True				
ANR	874844	Statement	0L	768:42:20787:20788	873161	19	True				
ANR	874845	Statement	L	768:44:20789:20789	873161	20	True				
ANR	874846	Statement	)	768:45:20790:20790	873161	21	True				
ANR	874847	Statement	)	768:46:20791:20791	873161	22	True				
ANR	874848	CompoundStatement		269:48:6654:6654	873161	23					
ANR	874849	ExpressionStatement	"eprintf ( ""Cannot open diff file '%s'\\n"" , file2 )"	769:3:20798:20845	873161	0	True				
ANR	874850	CallExpression	"eprintf ( ""Cannot open diff file '%s'\\n"" , file2 )"		873161	0					
ANR	874851	Callee	eprintf		873161	0					
ANR	874852	Identifier	eprintf		873161	0					
ANR	874853	ArgumentList	"""Cannot open diff file '%s'\\n"""		873161	1					
ANR	874854	Argument	"""Cannot open diff file '%s'\\n"""		873161	0					
ANR	874855	PrimaryExpression	"""Cannot open diff file '%s'\\n"""		873161	0					
ANR	874856	Argument	file2		873161	1					
ANR	874857	Identifier	file2		873161	0					
ANR	874858	ExpressionStatement	r_core_free ( core2 )	770:3:20850:20869	873161	1	True				
ANR	874859	CallExpression	r_core_free ( core2 )		873161	0					
ANR	874860	Callee	r_core_free		873161	0					
ANR	874861	Identifier	r_core_free		873161	0					
ANR	874862	ArgumentList	core2		873161	1					
ANR	874863	Argument	core2		873161	0					
ANR	874864	Identifier	core2		873161	0					
ANR	874865	ExpressionStatement	r_core_bind_cons ( core )	771:3:20874:20897	873161	2	True				
ANR	874866	CallExpression	r_core_bind_cons ( core )		873161	0					
ANR	874867	Callee	r_core_bind_cons		873161	0					
ANR	874868	Identifier	r_core_bind_cons		873161	0					
ANR	874869	ArgumentList	core		873161	1					
ANR	874870	Argument	core		873161	0					
ANR	874871	Identifier	core		873161	0					
ANR	874872	ReturnStatement	return false ;	772:3:20902:20914	873161	3	True				
ANR	874873	Identifier	false		873161	0					
ANR	874874	ExpressionStatement	"r_config_set_i ( core2 -> config , ""io.va"" , true )"	775:2:20961:21006	873161	24	True				
ANR	874875	CallExpression	"r_config_set_i ( core2 -> config , ""io.va"" , true )"		873161	0					
ANR	874876	Callee	r_config_set_i		873161	0					
ANR	874877	Identifier	r_config_set_i		873161	0					
ANR	874878	ArgumentList	core2 -> config		873161	1					
ANR	874879	Argument	core2 -> config		873161	0					
ANR	874880	PtrMemberAccess	core2 -> config		873161	0					
ANR	874881	Identifier	core2		873161	0					
ANR	874882	Identifier	config		873161	1					
ANR	874883	Argument	"""io.va"""		873161	1					
ANR	874884	PrimaryExpression	"""io.va"""		873161	0					
ANR	874885	Argument	true		873161	2					
ANR	874886	Identifier	true		873161	0					
ANR	874887	ExpressionStatement	"r_anal_diff_setup ( core -> anal , diffops , - 1 , - 1 )"	776:2:21010:21057	873161	25	True				
ANR	874888	CallExpression	"r_anal_diff_setup ( core -> anal , diffops , - 1 , - 1 )"		873161	0					
ANR	874889	Callee	r_anal_diff_setup		873161	0					
ANR	874890	Identifier	r_anal_diff_setup		873161	0					
ANR	874891	ArgumentList	core -> anal		873161	1					
ANR	874892	Argument	core -> anal		873161	0					
ANR	874893	PtrMemberAccess	core -> anal		873161	0					
ANR	874894	Identifier	core		873161	0					
ANR	874895	Identifier	anal		873161	1					
ANR	874896	Argument	diffops		873161	1					
ANR	874897	Identifier	diffops		873161	0					
ANR	874898	Argument	- 1		873161	2					
ANR	874899	UnaryOperationExpression	- 1		873161	0					
ANR	874900	UnaryOperator	-		873161	0					
ANR	874901	PrimaryExpression	1		873161	1					
ANR	874902	Argument	- 1		873161	3					
ANR	874903	UnaryOperationExpression	- 1		873161	0					
ANR	874904	UnaryOperator	-		873161	0					
ANR	874905	PrimaryExpression	1		873161	1					
ANR	874906	ExpressionStatement	"r_anal_diff_setup ( core2 -> anal , diffops , - 1 , - 1 )"	777:2:21061:21109	873161	26	True				
ANR	874907	CallExpression	"r_anal_diff_setup ( core2 -> anal , diffops , - 1 , - 1 )"		873161	0					
ANR	874908	Callee	r_anal_diff_setup		873161	0					
ANR	874909	Identifier	r_anal_diff_setup		873161	0					
ANR	874910	ArgumentList	core2 -> anal		873161	1					
ANR	874911	Argument	core2 -> anal		873161	0					
ANR	874912	PtrMemberAccess	core2 -> anal		873161	0					
ANR	874913	Identifier	core2		873161	0					
ANR	874914	Identifier	anal		873161	1					
ANR	874915	Argument	diffops		873161	1					
ANR	874916	Identifier	diffops		873161	0					
ANR	874917	Argument	- 1		873161	2					
ANR	874918	UnaryOperationExpression	- 1		873161	0					
ANR	874919	UnaryOperator	-		873161	0					
ANR	874920	PrimaryExpression	1		873161	1					
ANR	874921	Argument	- 1		873161	3					
ANR	874922	UnaryOperationExpression	- 1		873161	0					
ANR	874923	UnaryOperator	-		873161	0					
ANR	874924	PrimaryExpression	1		873161	1					
ANR	874925	ExpressionStatement	"r_core_bin_load ( core2 , file2 , r_config_get_i ( core -> config , ""bin.baddr"" ) )"	779:2:21114:21191	873161	27	True				
ANR	874926	CallExpression	"r_core_bin_load ( core2 , file2 , r_config_get_i ( core -> config , ""bin.baddr"" ) )"		873161	0					
ANR	874927	Callee	r_core_bin_load		873161	0					
ANR	874928	Identifier	r_core_bin_load		873161	0					
ANR	874929	ArgumentList	core2		873161	1					
ANR	874930	Argument	core2		873161	0					
ANR	874931	Identifier	core2		873161	0					
ANR	874932	Argument	file2		873161	1					
ANR	874933	Identifier	file2		873161	0					
ANR	874934	Argument	"r_config_get_i ( core -> config , ""bin.baddr"" )"		873161	2					
ANR	874935	CallExpression	"r_config_get_i ( core -> config , ""bin.baddr"" )"		873161	0					
ANR	874936	Callee	r_config_get_i		873161	0					
ANR	874937	Identifier	r_config_get_i		873161	0					
ANR	874938	ArgumentList	core -> config		873161	1					
ANR	874939	Argument	core -> config		873161	0					
ANR	874940	PtrMemberAccess	core -> config		873161	0					
ANR	874941	Identifier	core		873161	0					
ANR	874942	Identifier	config		873161	1					
ANR	874943	Argument	"""bin.baddr"""		873161	1					
ANR	874944	PrimaryExpression	"""bin.baddr"""		873161	0					
ANR	874945	ExpressionStatement	"r_core_gdiff ( core , core2 )"	781:2:21195:21221	873161	28	True				
ANR	874946	CallExpression	"r_core_gdiff ( core , core2 )"		873161	0					
ANR	874947	Callee	r_core_gdiff		873161	0					
ANR	874948	Identifier	r_core_gdiff		873161	0					
ANR	874949	ArgumentList	core		873161	1					
ANR	874950	Argument	core		873161	0					
ANR	874951	Identifier	core		873161	0					
ANR	874952	Argument	core2		873161	1					
ANR	874953	Identifier	core2		873161	0					
ANR	874954	ExpressionStatement	"r_core_diff_show ( core , core2 )"	782:2:21225:21255	873161	29	True				
ANR	874955	CallExpression	"r_core_diff_show ( core , core2 )"		873161	0					
ANR	874956	Callee	r_core_diff_show		873161	0					
ANR	874957	Identifier	r_core_diff_show		873161	0					
ANR	874958	ArgumentList	core		873161	1					
ANR	874959	Argument	core		873161	0					
ANR	874960	Identifier	core		873161	0					
ANR	874961	Argument	core2		873161	1					
ANR	874962	Identifier	core2		873161	0					
ANR	874963	ExpressionStatement	core2 -> config = NULL	784:2:21302:21322	873161	30	True				
ANR	874964	AssignmentExpression	core2 -> config = NULL		873161	0		=			
ANR	874965	PtrMemberAccess	core2 -> config		873161	0					
ANR	874966	Identifier	core2		873161	0					
ANR	874967	Identifier	config		873161	1					
ANR	874968	Identifier	NULL		873161	1					
ANR	874969	ExpressionStatement	r_core_free ( core2 )	785:2:21326:21345	873161	31	True				
ANR	874970	CallExpression	r_core_free ( core2 )		873161	0					
ANR	874971	Callee	r_core_free		873161	0					
ANR	874972	Identifier	r_core_free		873161	0					
ANR	874973	ArgumentList	core2		873161	1					
ANR	874974	Argument	core2		873161	0					
ANR	874975	Identifier	core2		873161	0					
ANR	874976	ExpressionStatement	r_core_bind_cons ( core )	786:2:21349:21372	873161	32	True				
ANR	874977	CallExpression	r_core_bind_cons ( core )		873161	0					
ANR	874978	Callee	r_core_bind_cons		873161	0					
ANR	874979	Identifier	r_core_bind_cons		873161	0					
ANR	874980	ArgumentList	core		873161	1					
ANR	874981	Argument	core		873161	0					
ANR	874982	Identifier	core		873161	0					
ANR	874983	BreakStatement	break ;	788:1:21378:21383	873161	64	True				
ANR	874984	Label	case 'u' :	789:1:21386:21394	873161	65	True				
ANR	874985	SwitchStatement	switch ( input [ 1 ] )		873161	66					
ANR	874986	Condition	input [ 1 ]	790:10:21414:21421	873161	0	True				
ANR	874987	ArrayIndexing	input [ 1 ]		873161	0					
ANR	874988	Identifier	input		873161	0					
ANR	874989	PrimaryExpression	1		873161	1					
ANR	874990	CompoundStatement		291:20:7285:7285	873161	1					
ANR	874991	Label	case '.' :	791:2:21428:21436	873161	0	True				
ANR	874992	Label	case ' ' :	792:2:21440:21448	873161	1	True				
ANR	874993	ExpressionStatement	"radare_compare_unified ( core , core -> offset , r_num_math ( core -> num , input + 2 ) , core -> blocksize )"	793:3:21453:21556	873161	2	True				
ANR	874994	CallExpression	"radare_compare_unified ( core , core -> offset , r_num_math ( core -> num , input + 2 ) , core -> blocksize )"		873161	0					
ANR	874995	Callee	radare_compare_unified		873161	0					
ANR	874996	Identifier	radare_compare_unified		873161	0					
ANR	874997	ArgumentList	core		873161	1					
ANR	874998	Argument	core		873161	0					
ANR	874999	Identifier	core		873161	0					
ANR	875000	Argument	core -> offset		873161	1					
ANR	875001	PtrMemberAccess	core -> offset		873161	0					
ANR	875002	Identifier	core		873161	0					
ANR	875003	Identifier	offset		873161	1					
ANR	875004	Argument	"r_num_math ( core -> num , input + 2 )"		873161	2					
ANR	875005	CallExpression	"r_num_math ( core -> num , input + 2 )"		873161	0					
ANR	875006	Callee	r_num_math		873161	0					
ANR	875007	Identifier	r_num_math		873161	0					
ANR	875008	ArgumentList	core -> num		873161	1					
ANR	875009	Argument	core -> num		873161	0					
ANR	875010	PtrMemberAccess	core -> num		873161	0					
ANR	875011	Identifier	core		873161	0					
ANR	875012	Identifier	num		873161	1					
ANR	875013	Argument	input + 2		873161	1					
ANR	875014	AdditiveExpression	input + 2		873161	0		+			
ANR	875015	Identifier	input		873161	0					
ANR	875016	PrimaryExpression	2		873161	1					
ANR	875017	Argument	core -> blocksize		873161	3					
ANR	875018	PtrMemberAccess	core -> blocksize		873161	0					
ANR	875019	Identifier	core		873161	0					
ANR	875020	Identifier	blocksize		873161	1					
ANR	875021	BreakStatement	break ;	796:3:21561:21566	873161	3	True				
ANR	875022	Label	case '1' :	797:2:21570:21578	873161	4	True				
ANR	875023	Label	case '2' :	798:2:21582:21590	873161	5	True				
ANR	875024	Label	case '4' :	799:2:21594:21602	873161	6	True				
ANR	875025	Label	case '8' :	800:2:21606:21614	873161	7	True				
ANR	875026	ExpressionStatement	"radare_compare_words ( core , core -> offset , r_num_math ( core -> num , input + 2 ) , core -> blocksize , input [ 1 ] - '0' )"	801:3:21619:21736	873161	8	True				
ANR	875027	CallExpression	"radare_compare_words ( core , core -> offset , r_num_math ( core -> num , input + 2 ) , core -> blocksize , input [ 1 ] - '0' )"		873161	0					
ANR	875028	Callee	radare_compare_words		873161	0					
ANR	875029	Identifier	radare_compare_words		873161	0					
ANR	875030	ArgumentList	core		873161	1					
ANR	875031	Argument	core		873161	0					
ANR	875032	Identifier	core		873161	0					
ANR	875033	Argument	core -> offset		873161	1					
ANR	875034	PtrMemberAccess	core -> offset		873161	0					
ANR	875035	Identifier	core		873161	0					
ANR	875036	Identifier	offset		873161	1					
ANR	875037	Argument	"r_num_math ( core -> num , input + 2 )"		873161	2					
ANR	875038	CallExpression	"r_num_math ( core -> num , input + 2 )"		873161	0					
ANR	875039	Callee	r_num_math		873161	0					
ANR	875040	Identifier	r_num_math		873161	0					
ANR	875041	ArgumentList	core -> num		873161	1					
ANR	875042	Argument	core -> num		873161	0					
ANR	875043	PtrMemberAccess	core -> num		873161	0					
ANR	875044	Identifier	core		873161	0					
ANR	875045	Identifier	num		873161	1					
ANR	875046	Argument	input + 2		873161	1					
ANR	875047	AdditiveExpression	input + 2		873161	0		+			
ANR	875048	Identifier	input		873161	0					
ANR	875049	PrimaryExpression	2		873161	1					
ANR	875050	Argument	core -> blocksize		873161	3					
ANR	875051	PtrMemberAccess	core -> blocksize		873161	0					
ANR	875052	Identifier	core		873161	0					
ANR	875053	Identifier	blocksize		873161	1					
ANR	875054	Argument	input [ 1 ] - '0'		873161	4					
ANR	875055	AdditiveExpression	input [ 1 ] - '0'		873161	0		-			
ANR	875056	ArrayIndexing	input [ 1 ]		873161	0					
ANR	875057	Identifier	input		873161	0					
ANR	875058	PrimaryExpression	1		873161	1					
ANR	875059	PrimaryExpression	'0'		873161	1					
ANR	875060	BreakStatement	break ;	804:3:21741:21746	873161	9	True				
ANR	875061	Label	case 'd' :	805:2:21750:21758	873161	10	True				
ANR	875062	ExpressionStatement	"cmd_cmp_disasm ( core , input + 2 , 'u' )"	806:3:21763:21800	873161	11	True				
ANR	875063	CallExpression	"cmd_cmp_disasm ( core , input + 2 , 'u' )"		873161	0					
ANR	875064	Callee	cmd_cmp_disasm		873161	0					
ANR	875065	Identifier	cmd_cmp_disasm		873161	0					
ANR	875066	ArgumentList	core		873161	1					
ANR	875067	Argument	core		873161	0					
ANR	875068	Identifier	core		873161	0					
ANR	875069	Argument	input + 2		873161	1					
ANR	875070	AdditiveExpression	input + 2		873161	0		+			
ANR	875071	Identifier	input		873161	0					
ANR	875072	PrimaryExpression	2		873161	1					
ANR	875073	Argument	'u'		873161	2					
ANR	875074	PrimaryExpression	'u'		873161	0					
ANR	875075	BreakStatement	break ;	807:3:21805:21810	873161	12	True				
ANR	875076	Label	default :	808:2:21814:21821	873161	13	True				
ANR	875077	Identifier	default		873161	0					
ANR	875078	CompoundStatement		310:3:7689:8282	873161	14					
ANR	875079	IdentifierDeclStatement	"const char * help_msg [ ] = { ""Usage: cu"" , "" [offset]"" , ""# Prints unified comparison to make hexpatches"" , ""cu"" , "" $$+1 > p"" , ""Compare hexpairs from  current seek and +1"" , ""cu1"" , "" $$+1 > p"" , ""Compare bytes from current seek and +1"" , ""cu2"" , "" $$+1 > p"" , ""Compare words (half, 16bit) from current seek and +1"" , ""cu4"" , "" $$+1 > p"" , ""Compare dwords from current seek and +1"" , ""cu8"" , "" $$+1 > p"" , ""Compare qwords from current seek and +1"" , ""cud"" , "" $$+1 > p"" , ""Compare disasm current seek and +1"" , ""wu"" , "" p"" , ""Apply unified hex patch (see output of cu)"" , NULL } ;"	809:3:21828:22421	873161	0	True				
ANR	875080	IdentifierDecl	"* help_msg [ ] = { ""Usage: cu"" , "" [offset]"" , ""# Prints unified comparison to make hexpatches"" , ""cu"" , "" $$+1 > p"" , ""Compare hexpairs from  current seek and +1"" , ""cu1"" , "" $$+1 > p"" , ""Compare bytes from current seek and +1"" , ""cu2"" , "" $$+1 > p"" , ""Compare words (half, 16bit) from current seek and +1"" , ""cu4"" , "" $$+1 > p"" , ""Compare dwords from current seek and +1"" , ""cu8"" , "" $$+1 > p"" , ""Compare qwords from current seek and +1"" , ""cud"" , "" $$+1 > p"" , ""Compare disasm current seek and +1"" , ""wu"" , "" p"" , ""Apply unified hex patch (see output of cu)"" , NULL }"		873161	0					
ANR	875081	IdentifierDeclType	const char * [ ]		873161	0					
ANR	875082	Identifier	help_msg		873161	1					
ANR	875083	AssignmentExpression	"* help_msg [ ] = { ""Usage: cu"" , "" [offset]"" , ""# Prints unified comparison to make hexpatches"" , ""cu"" , "" $$+1 > p"" , ""Compare hexpairs from  current seek and +1"" , ""cu1"" , "" $$+1 > p"" , ""Compare bytes from current seek and +1"" , ""cu2"" , "" $$+1 > p"" , ""Compare words (half, 16bit) from current seek and +1"" , ""cu4"" , "" $$+1 > p"" , ""Compare dwords from current seek and +1"" , ""cu8"" , "" $$+1 > p"" , ""Compare qwords from current seek and +1"" , ""cud"" , "" $$+1 > p"" , ""Compare disasm current seek and +1"" , ""wu"" , "" p"" , ""Apply unified hex patch (see output of cu)"" , NULL }"		873161	2		=			
ANR	875084	Identifier	help_msg		873161	0					
ANR	875085	InitializerList	"""Usage: cu"""		873161	1					
ANR	875086	PrimaryExpression	"""Usage: cu"""		873161	0					
ANR	875087	PrimaryExpression	""" [offset]"""		873161	1					
ANR	875088	PrimaryExpression	"""# Prints unified comparison to make hexpatches"""		873161	2					
ANR	875089	PrimaryExpression	"""cu"""		873161	3					
ANR	875090	PrimaryExpression	""" $$+1 > p"""		873161	4					
ANR	875091	PrimaryExpression	"""Compare hexpairs from  current seek and +1"""		873161	5					
ANR	875092	PrimaryExpression	"""cu1"""		873161	6					
ANR	875093	PrimaryExpression	""" $$+1 > p"""		873161	7					
ANR	875094	PrimaryExpression	"""Compare bytes from current seek and +1"""		873161	8					
ANR	875095	PrimaryExpression	"""cu2"""		873161	9					
ANR	875096	PrimaryExpression	""" $$+1 > p"""		873161	10					
ANR	875097	PrimaryExpression	"""Compare words (half, 16bit) from current seek and +1"""		873161	11					
ANR	875098	PrimaryExpression	"""cu4"""		873161	12					
ANR	875099	PrimaryExpression	""" $$+1 > p"""		873161	13					
ANR	875100	PrimaryExpression	"""Compare dwords from current seek and +1"""		873161	14					
ANR	875101	PrimaryExpression	"""cu8"""		873161	15					
ANR	875102	PrimaryExpression	""" $$+1 > p"""		873161	16					
ANR	875103	PrimaryExpression	"""Compare qwords from current seek and +1"""		873161	17					
ANR	875104	PrimaryExpression	"""cud"""		873161	18					
ANR	875105	PrimaryExpression	""" $$+1 > p"""		873161	19					
ANR	875106	PrimaryExpression	"""Compare disasm current seek and +1"""		873161	20					
ANR	875107	PrimaryExpression	"""wu"""		873161	21					
ANR	875108	PrimaryExpression	""" p"""		873161	22					
ANR	875109	PrimaryExpression	"""Apply unified hex patch (see output of cu)"""		873161	23					
ANR	875110	Identifier	NULL		873161	24					
ANR	875111	ExpressionStatement	"r_core_cmd_help ( core , help_msg )"	820:3:22426:22458	873161	1	True				
ANR	875112	CallExpression	"r_core_cmd_help ( core , help_msg )"		873161	0					
ANR	875113	Callee	r_core_cmd_help		873161	0					
ANR	875114	Identifier	r_core_cmd_help		873161	0					
ANR	875115	ArgumentList	core		873161	1					
ANR	875116	Argument	core		873161	0					
ANR	875117	Identifier	core		873161	0					
ANR	875118	Argument	help_msg		873161	1					
ANR	875119	Identifier	help_msg		873161	0					
ANR	875120	BreakStatement	break ;	823:2:22470:22475	873161	67	True				
ANR	875121	Label	case '?' :	824:1:22478:22486	873161	68	True				
ANR	875122	ExpressionStatement	"r_core_cmd_help ( core , help_msg_c )"	825:2:22490:22524	873161	69	True				
ANR	875123	CallExpression	"r_core_cmd_help ( core , help_msg_c )"		873161	0					
ANR	875124	Callee	r_core_cmd_help		873161	0					
ANR	875125	Identifier	r_core_cmd_help		873161	0					
ANR	875126	ArgumentList	core		873161	1					
ANR	875127	Argument	core		873161	0					
ANR	875128	Identifier	core		873161	0					
ANR	875129	Argument	help_msg_c		873161	1					
ANR	875130	Identifier	help_msg_c		873161	0					
ANR	875131	BreakStatement	break ;	826:2:22528:22533	873161	70	True				
ANR	875132	Label	case 'v' :	827:1:22536:22544	873161	71	True				
ANR	875133	CompoundStatement		329:2:8419:8436	873161	72					
ANR	875134	IdentifierDeclStatement	int sz = input [ 1 ] ;	828:2:22558:22575	873161	0	True				
ANR	875135	IdentifierDecl	sz = input [ 1 ]		873161	0					
ANR	875136	IdentifierDeclType	int		873161	0					
ANR	875137	Identifier	sz		873161	1					
ANR	875138	AssignmentExpression	sz = input [ 1 ]		873161	2		=			
ANR	875139	Identifier	sz		873161	0					
ANR	875140	ArrayIndexing	input [ 1 ]		873161	1					
ANR	875141	Identifier	input		873161	0					
ANR	875142	PrimaryExpression	1		873161	1					
ANR	875143	IfStatement	if ( sz == ' ' )		873161	1					
ANR	875144	Condition	sz == ' '	829:6:22583:22591	873161	0	True				
ANR	875145	EqualityExpression	sz == ' '		873161	0		==			
ANR	875146	Identifier	sz		873161	0					
ANR	875147	PrimaryExpression	' '		873161	1					
ANR	875148	CompoundStatement		330:17:8455:8455	873161	1					
ANR	875149	SwitchStatement	"switch ( r_config_get_i ( core -> config , ""asm.bits"" ) )"		873161	0					
ANR	875150	Condition	"r_config_get_i ( core -> config , ""asm.bits"" )"	830:11:22607:22647	873161	0	True				
ANR	875151	CallExpression	"r_config_get_i ( core -> config , ""asm.bits"" )"		873161	0					
ANR	875152	Callee	r_config_get_i		873161	0					
ANR	875153	Identifier	r_config_get_i		873161	0					
ANR	875154	ArgumentList	core -> config		873161	1					
ANR	875155	Argument	core -> config		873161	0					
ANR	875156	PtrMemberAccess	core -> config		873161	0					
ANR	875157	Identifier	core		873161	0					
ANR	875158	Identifier	config		873161	1					
ANR	875159	Argument	"""asm.bits"""		873161	1					
ANR	875160	PrimaryExpression	"""asm.bits"""		873161	0					
ANR	875161	CompoundStatement		331:54:8511:8511	873161	1					
ANR	875162	Label	case 8 :	831:3:22655:22661	873161	0	True				
ANR	875163	ExpressionStatement	sz = '1'	831:11:22663:22671	873161	1	True				
ANR	875164	AssignmentExpression	sz = '1'		873161	0		=			
ANR	875165	Identifier	sz		873161	0					
ANR	875166	PrimaryExpression	'1'		873161	1					
ANR	875167	BreakStatement	break ;	831:21:22673:22678	873161	2	True				
ANR	875168	Label	case 16 :	832:3:22683:22690	873161	3	True				
ANR	875169	ExpressionStatement	sz = '2'	832:12:22692:22700	873161	4	True				
ANR	875170	AssignmentExpression	sz = '2'		873161	0		=			
ANR	875171	Identifier	sz		873161	0					
ANR	875172	PrimaryExpression	'2'		873161	1					
ANR	875173	BreakStatement	break ;	832:22:22702:22707	873161	5	True				
ANR	875174	Label	case 32 :	833:3:22712:22719	873161	6	True				
ANR	875175	ExpressionStatement	sz = '4'	833:12:22721:22729	873161	7	True				
ANR	875176	AssignmentExpression	sz = '4'		873161	0		=			
ANR	875177	Identifier	sz		873161	0					
ANR	875178	PrimaryExpression	'4'		873161	1					
ANR	875179	BreakStatement	break ;	833:22:22731:22736	873161	8	True				
ANR	875180	Label	case 64 :	834:3:22741:22748	873161	9	True				
ANR	875181	ExpressionStatement	sz = '8'	834:12:22750:22758	873161	10	True				
ANR	875182	AssignmentExpression	sz = '8'		873161	0		=			
ANR	875183	Identifier	sz		873161	0					
ANR	875184	PrimaryExpression	'8'		873161	1					
ANR	875185	BreakStatement	break ;	834:22:22760:22765	873161	11	True				
ANR	875186	Label	default :	835:3:22770:22777	873161	12	True				
ANR	875187	Identifier	default		873161	0					
ANR	875188	ExpressionStatement	sz = '4'	835:12:22779:22787	873161	13	True				
ANR	875189	AssignmentExpression	sz = '4'		873161	0		=			
ANR	875190	Identifier	sz		873161	0					
ANR	875191	PrimaryExpression	'4'		873161	1					
ANR	875192	BreakStatement	break ;	835:22:22789:22794	873161	14	True				
ANR	875193	SwitchStatement	switch ( sz )		873161	2					
ANR	875194	Condition	sz	839:10:22850:22851	873161	0	True				
ANR	875195	Identifier	sz		873161	0					
ANR	875196	CompoundStatement		340:14:8715:8715	873161	1					
ANR	875197	Label	case '1' :	840:2:22858:22866	873161	0	True				
ANR	875198	CompoundStatement		342:3:8743:8790	873161	1					
ANR	875199	IdentifierDeclStatement	"ut8 n = ( ut8 ) r_num_math ( core -> num , input + 2 ) ;"	841:3:22882:22929	873161	0	True				
ANR	875200	IdentifierDecl	"n = ( ut8 ) r_num_math ( core -> num , input + 2 )"		873161	0					
ANR	875201	IdentifierDeclType	ut8		873161	0					
ANR	875202	Identifier	n		873161	1					
ANR	875203	AssignmentExpression	"n = ( ut8 ) r_num_math ( core -> num , input + 2 )"		873161	2		=			
ANR	875204	Identifier	n		873161	0					
ANR	875205	CastExpression	"( ut8 ) r_num_math ( core -> num , input + 2 )"		873161	1					
ANR	875206	CastTarget	ut8		873161	0					
ANR	875207	CallExpression	"r_num_math ( core -> num , input + 2 )"		873161	1					
ANR	875208	Callee	r_num_math		873161	0					
ANR	875209	Identifier	r_num_math		873161	0					
ANR	875210	ArgumentList	core -> num		873161	1					
ANR	875211	Argument	core -> num		873161	0					
ANR	875212	PtrMemberAccess	core -> num		873161	0					
ANR	875213	Identifier	core		873161	0					
ANR	875214	Identifier	num		873161	1					
ANR	875215	Argument	input + 2		873161	1					
ANR	875216	AdditiveExpression	input + 2		873161	0		+			
ANR	875217	Identifier	input		873161	0					
ANR	875218	PrimaryExpression	2		873161	1					
ANR	875219	ExpressionStatement	core -> num -> value = 1	842:3:22934:22954	873161	1	True				
ANR	875220	AssignmentExpression	core -> num -> value = 1		873161	0		=			
ANR	875221	PtrMemberAccess	core -> num -> value		873161	0					
ANR	875222	PtrMemberAccess	core -> num		873161	0					
ANR	875223	Identifier	core		873161	0					
ANR	875224	Identifier	num		873161	1					
ANR	875225	Identifier	value		873161	1					
ANR	875226	PrimaryExpression	1		873161	1					
ANR	875227	IfStatement	if ( block [ 0 ] == n )		873161	2					
ANR	875228	Condition	block [ 0 ] == n	843:7:22963:22975	873161	0	True				
ANR	875229	EqualityExpression	block [ 0 ] == n		873161	0		==			
ANR	875230	ArrayIndexing	block [ 0 ]		873161	0					
ANR	875231	Identifier	block		873161	0					
ANR	875232	PrimaryExpression	0		873161	1					
ANR	875233	Identifier	n		873161	1					
ANR	875234	CompoundStatement		344:22:8839:8839	873161	1					
ANR	875235	Statement	r_cons_printf	844:4:22984:22996	873161	0	True				
ANR	875236	Statement	(	844:18:22998:22998	873161	1	True				
ANR	875237	Statement	"""0x%08"""	844:19:22999:23005	873161	2	True				
ANR	875238	Statement	PFMT64x	844:26:23006:23012	873161	3	True				
ANR	875239	Statement	"""\\n"""	844:34:23014:23017	873161	4	True				
ANR	875240	Statement	","	844:38:23018:23018	873161	5	True				
ANR	875241	Statement	core	844:40:23020:23023	873161	6	True				
ANR	875242	Statement	->	844:44:23024:23025	873161	7	True				
ANR	875243	Statement	offset	844:46:23026:23031	873161	8	True				
ANR	875244	Statement	)	844:52:23032:23032	873161	9	True				
ANR	875245	ExpressionStatement		844:53:23033:23033	873161	10	True				
ANR	875246	ExpressionStatement	core -> num -> value = 0	845:4:23039:23059	873161	11	True				
ANR	875247	AssignmentExpression	core -> num -> value = 0		873161	0		=			
ANR	875248	PtrMemberAccess	core -> num -> value		873161	0					
ANR	875249	PtrMemberAccess	core -> num		873161	0					
ANR	875250	Identifier	core		873161	0					
ANR	875251	Identifier	num		873161	1					
ANR	875252	Identifier	value		873161	1					
ANR	875253	PrimaryExpression	0		873161	1					
ANR	875254	BreakStatement	break ;	847:3:23069:23074	873161	3	True				
ANR	875255	Label	case '2' :	849:2:23082:23090	873161	2	True				
ANR	875256	CompoundStatement		351:3:8967:9016	873161	3					
ANR	875257	IdentifierDeclStatement	"ut16 n = ( ut16 ) r_num_math ( core -> num , input + 2 ) ;"	850:3:23106:23155	873161	0	True				
ANR	875258	IdentifierDecl	"n = ( ut16 ) r_num_math ( core -> num , input + 2 )"		873161	0					
ANR	875259	IdentifierDeclType	ut16		873161	0					
ANR	875260	Identifier	n		873161	1					
ANR	875261	AssignmentExpression	"n = ( ut16 ) r_num_math ( core -> num , input + 2 )"		873161	2		=			
ANR	875262	Identifier	n		873161	0					
ANR	875263	CastExpression	"( ut16 ) r_num_math ( core -> num , input + 2 )"		873161	1					
ANR	875264	CastTarget	ut16		873161	0					
ANR	875265	CallExpression	"r_num_math ( core -> num , input + 2 )"		873161	1					
ANR	875266	Callee	r_num_math		873161	0					
ANR	875267	Identifier	r_num_math		873161	0					
ANR	875268	ArgumentList	core -> num		873161	1					
ANR	875269	Argument	core -> num		873161	0					
ANR	875270	PtrMemberAccess	core -> num		873161	0					
ANR	875271	Identifier	core		873161	0					
ANR	875272	Identifier	num		873161	1					
ANR	875273	Argument	input + 2		873161	1					
ANR	875274	AdditiveExpression	input + 2		873161	0		+			
ANR	875275	Identifier	input		873161	0					
ANR	875276	PrimaryExpression	2		873161	1					
ANR	875277	ExpressionStatement	core -> num -> value = 1	851:3:23160:23180	873161	1	True				
ANR	875278	AssignmentExpression	core -> num -> value = 1		873161	0		=			
ANR	875279	PtrMemberAccess	core -> num -> value		873161	0					
ANR	875280	PtrMemberAccess	core -> num		873161	0					
ANR	875281	Identifier	core		873161	0					
ANR	875282	Identifier	num		873161	1					
ANR	875283	Identifier	value		873161	1					
ANR	875284	PrimaryExpression	1		873161	1					
ANR	875285	IfStatement	if ( core -> blocksize >= 2 && * ( ut16 * ) block == n )		873161	2					
ANR	875286	Condition	core -> blocksize >= 2 && * ( ut16 * ) block == n	852:7:23189:23230	873161	0	True				
ANR	875287	AndExpression	core -> blocksize >= 2 && * ( ut16 * ) block == n		873161	0		&&			
ANR	875288	RelationalExpression	core -> blocksize >= 2		873161	0		>=			
ANR	875289	PtrMemberAccess	core -> blocksize		873161	0					
ANR	875290	Identifier	core		873161	0					
ANR	875291	Identifier	blocksize		873161	1					
ANR	875292	PrimaryExpression	2		873161	1					
ANR	875293	EqualityExpression	* ( ut16 * ) block == n		873161	1		==			
ANR	875294	UnaryOperationExpression	* ( ut16 * ) block		873161	0					
ANR	875295	UnaryOperator	*		873161	0					
ANR	875296	CastExpression	( ut16 * ) block		873161	1					
ANR	875297	CastTarget	ut16 *		873161	0					
ANR	875298	Identifier	block		873161	1					
ANR	875299	Identifier	n		873161	1					
ANR	875300	CompoundStatement		353:51:9094:9094	873161	1					
ANR	875301	Statement	r_cons_printf	853:4:23239:23251	873161	0	True				
ANR	875302	Statement	(	853:18:23253:23253	873161	1	True				
ANR	875303	Statement	"""0x%08"""	853:19:23254:23260	873161	2	True				
ANR	875304	Statement	PFMT64x	853:26:23261:23267	873161	3	True				
ANR	875305	Statement	"""\\n"""	853:34:23269:23272	873161	4	True				
ANR	875306	Statement	","	853:38:23273:23273	873161	5	True				
ANR	875307	Statement	core	853:40:23275:23278	873161	6	True				
ANR	875308	Statement	->	853:44:23279:23280	873161	7	True				
ANR	875309	Statement	offset	853:46:23281:23286	873161	8	True				
ANR	875310	Statement	)	853:52:23287:23287	873161	9	True				
ANR	875311	ExpressionStatement		853:53:23288:23288	873161	10	True				
ANR	875312	ExpressionStatement	core -> num -> value = 0	854:4:23294:23314	873161	11	True				
ANR	875313	AssignmentExpression	core -> num -> value = 0		873161	0		=			
ANR	875314	PtrMemberAccess	core -> num -> value		873161	0					
ANR	875315	PtrMemberAccess	core -> num		873161	0					
ANR	875316	Identifier	core		873161	0					
ANR	875317	Identifier	num		873161	1					
ANR	875318	Identifier	value		873161	1					
ANR	875319	PrimaryExpression	0		873161	1					
ANR	875320	BreakStatement	break ;	856:3:23324:23329	873161	3	True				
ANR	875321	Label	case '4' :	858:2:23337:23345	873161	4	True				
ANR	875322	CompoundStatement		360:3:9222:9271	873161	5					
ANR	875323	IdentifierDeclStatement	"ut32 n = ( ut32 ) r_num_math ( core -> num , input + 2 ) ;"	859:3:23361:23410	873161	0	True				
ANR	875324	IdentifierDecl	"n = ( ut32 ) r_num_math ( core -> num , input + 2 )"		873161	0					
ANR	875325	IdentifierDeclType	ut32		873161	0					
ANR	875326	Identifier	n		873161	1					
ANR	875327	AssignmentExpression	"n = ( ut32 ) r_num_math ( core -> num , input + 2 )"		873161	2		=			
ANR	875328	Identifier	n		873161	0					
ANR	875329	CastExpression	"( ut32 ) r_num_math ( core -> num , input + 2 )"		873161	1					
ANR	875330	CastTarget	ut32		873161	0					
ANR	875331	CallExpression	"r_num_math ( core -> num , input + 2 )"		873161	1					
ANR	875332	Callee	r_num_math		873161	0					
ANR	875333	Identifier	r_num_math		873161	0					
ANR	875334	ArgumentList	core -> num		873161	1					
ANR	875335	Argument	core -> num		873161	0					
ANR	875336	PtrMemberAccess	core -> num		873161	0					
ANR	875337	Identifier	core		873161	0					
ANR	875338	Identifier	num		873161	1					
ANR	875339	Argument	input + 2		873161	1					
ANR	875340	AdditiveExpression	input + 2		873161	0		+			
ANR	875341	Identifier	input		873161	0					
ANR	875342	PrimaryExpression	2		873161	1					
ANR	875343	ExpressionStatement	core -> num -> value = 1	860:3:23415:23435	873161	1	True				
ANR	875344	AssignmentExpression	core -> num -> value = 1		873161	0		=			
ANR	875345	PtrMemberAccess	core -> num -> value		873161	0					
ANR	875346	PtrMemberAccess	core -> num		873161	0					
ANR	875347	Identifier	core		873161	0					
ANR	875348	Identifier	num		873161	1					
ANR	875349	Identifier	value		873161	1					
ANR	875350	PrimaryExpression	1		873161	1					
ANR	875351	IfStatement	if ( core -> blocksize >= 4 && * ( ut32 * ) block == n )		873161	2					
ANR	875352	Condition	core -> blocksize >= 4 && * ( ut32 * ) block == n	861:7:23444:23485	873161	0	True				
ANR	875353	AndExpression	core -> blocksize >= 4 && * ( ut32 * ) block == n		873161	0		&&			
ANR	875354	RelationalExpression	core -> blocksize >= 4		873161	0		>=			
ANR	875355	PtrMemberAccess	core -> blocksize		873161	0					
ANR	875356	Identifier	core		873161	0					
ANR	875357	Identifier	blocksize		873161	1					
ANR	875358	PrimaryExpression	4		873161	1					
ANR	875359	EqualityExpression	* ( ut32 * ) block == n		873161	1		==			
ANR	875360	UnaryOperationExpression	* ( ut32 * ) block		873161	0					
ANR	875361	UnaryOperator	*		873161	0					
ANR	875362	CastExpression	( ut32 * ) block		873161	1					
ANR	875363	CastTarget	ut32 *		873161	0					
ANR	875364	Identifier	block		873161	1					
ANR	875365	Identifier	n		873161	1					
ANR	875366	CompoundStatement		362:51:9349:9349	873161	1					
ANR	875367	Statement	r_cons_printf	862:4:23494:23506	873161	0	True				
ANR	875368	Statement	(	862:18:23508:23508	873161	1	True				
ANR	875369	Statement	"""0x%08"""	862:19:23509:23515	873161	2	True				
ANR	875370	Statement	PFMT64x	862:26:23516:23522	873161	3	True				
ANR	875371	Statement	"""\\n"""	862:34:23524:23527	873161	4	True				
ANR	875372	Statement	","	862:38:23528:23528	873161	5	True				
ANR	875373	Statement	core	862:40:23530:23533	873161	6	True				
ANR	875374	Statement	->	862:44:23534:23535	873161	7	True				
ANR	875375	Statement	offset	862:46:23536:23541	873161	8	True				
ANR	875376	Statement	)	862:52:23542:23542	873161	9	True				
ANR	875377	ExpressionStatement		862:53:23543:23543	873161	10	True				
ANR	875378	ExpressionStatement	core -> num -> value = 0	863:4:23549:23569	873161	11	True				
ANR	875379	AssignmentExpression	core -> num -> value = 0		873161	0		=			
ANR	875380	PtrMemberAccess	core -> num -> value		873161	0					
ANR	875381	PtrMemberAccess	core -> num		873161	0					
ANR	875382	Identifier	core		873161	0					
ANR	875383	Identifier	num		873161	1					
ANR	875384	Identifier	value		873161	1					
ANR	875385	PrimaryExpression	0		873161	1					
ANR	875386	BreakStatement	break ;	865:3:23579:23584	873161	3	True				
ANR	875387	Label	case '8' :	867:2:23592:23600	873161	6	True				
ANR	875388	CompoundStatement		369:3:9477:9526	873161	7					
ANR	875389	IdentifierDeclStatement	"ut64 n = ( ut64 ) r_num_math ( core -> num , input + 2 ) ;"	868:3:23616:23665	873161	0	True				
ANR	875390	IdentifierDecl	"n = ( ut64 ) r_num_math ( core -> num , input + 2 )"		873161	0					
ANR	875391	IdentifierDeclType	ut64		873161	0					
ANR	875392	Identifier	n		873161	1					
ANR	875393	AssignmentExpression	"n = ( ut64 ) r_num_math ( core -> num , input + 2 )"		873161	2		=			
ANR	875394	Identifier	n		873161	0					
ANR	875395	CastExpression	"( ut64 ) r_num_math ( core -> num , input + 2 )"		873161	1					
ANR	875396	CastTarget	ut64		873161	0					
ANR	875397	CallExpression	"r_num_math ( core -> num , input + 2 )"		873161	1					
ANR	875398	Callee	r_num_math		873161	0					
ANR	875399	Identifier	r_num_math		873161	0					
ANR	875400	ArgumentList	core -> num		873161	1					
ANR	875401	Argument	core -> num		873161	0					
ANR	875402	PtrMemberAccess	core -> num		873161	0					
ANR	875403	Identifier	core		873161	0					
ANR	875404	Identifier	num		873161	1					
ANR	875405	Argument	input + 2		873161	1					
ANR	875406	AdditiveExpression	input + 2		873161	0		+			
ANR	875407	Identifier	input		873161	0					
ANR	875408	PrimaryExpression	2		873161	1					
ANR	875409	ExpressionStatement	core -> num -> value = 1	869:3:23670:23690	873161	1	True				
ANR	875410	AssignmentExpression	core -> num -> value = 1		873161	0		=			
ANR	875411	PtrMemberAccess	core -> num -> value		873161	0					
ANR	875412	PtrMemberAccess	core -> num		873161	0					
ANR	875413	Identifier	core		873161	0					
ANR	875414	Identifier	num		873161	1					
ANR	875415	Identifier	value		873161	1					
ANR	875416	PrimaryExpression	1		873161	1					
ANR	875417	IfStatement	if ( core -> blocksize >= 8 && * ( ut64 * ) block == n )		873161	2					
ANR	875418	Condition	core -> blocksize >= 8 && * ( ut64 * ) block == n	870:7:23699:23740	873161	0	True				
ANR	875419	AndExpression	core -> blocksize >= 8 && * ( ut64 * ) block == n		873161	0		&&			
ANR	875420	RelationalExpression	core -> blocksize >= 8		873161	0		>=			
ANR	875421	PtrMemberAccess	core -> blocksize		873161	0					
ANR	875422	Identifier	core		873161	0					
ANR	875423	Identifier	blocksize		873161	1					
ANR	875424	PrimaryExpression	8		873161	1					
ANR	875425	EqualityExpression	* ( ut64 * ) block == n		873161	1		==			
ANR	875426	UnaryOperationExpression	* ( ut64 * ) block		873161	0					
ANR	875427	UnaryOperator	*		873161	0					
ANR	875428	CastExpression	( ut64 * ) block		873161	1					
ANR	875429	CastTarget	ut64 *		873161	0					
ANR	875430	Identifier	block		873161	1					
ANR	875431	Identifier	n		873161	1					
ANR	875432	CompoundStatement		371:51:9604:9604	873161	1					
ANR	875433	Statement	r_cons_printf	871:4:23749:23761	873161	0	True				
ANR	875434	Statement	(	871:18:23763:23763	873161	1	True				
ANR	875435	Statement	"""0x%08"""	871:19:23764:23770	873161	2	True				
ANR	875436	Statement	PFMT64x	871:26:23771:23777	873161	3	True				
ANR	875437	Statement	"""\\n"""	871:34:23779:23782	873161	4	True				
ANR	875438	Statement	","	871:38:23783:23783	873161	5	True				
ANR	875439	Statement	core	871:40:23785:23788	873161	6	True				
ANR	875440	Statement	->	871:44:23789:23790	873161	7	True				
ANR	875441	Statement	offset	871:46:23791:23796	873161	8	True				
ANR	875442	Statement	)	871:52:23797:23797	873161	9	True				
ANR	875443	ExpressionStatement		871:53:23798:23798	873161	10	True				
ANR	875444	ExpressionStatement	core -> num -> value = 0	872:4:23804:23824	873161	11	True				
ANR	875445	AssignmentExpression	core -> num -> value = 0		873161	0		=			
ANR	875446	PtrMemberAccess	core -> num -> value		873161	0					
ANR	875447	PtrMemberAccess	core -> num		873161	0					
ANR	875448	Identifier	core		873161	0					
ANR	875449	Identifier	num		873161	1					
ANR	875450	Identifier	value		873161	1					
ANR	875451	PrimaryExpression	0		873161	1					
ANR	875452	BreakStatement	break ;	874:3:23834:23839	873161	3	True				
ANR	875453	Label	default :	876:2:23847:23854	873161	8	True				
ANR	875454	Identifier	default		873161	0					
ANR	875455	Label	case '?' :	877:2:23858:23866	873161	9	True				
ANR	875456	Statement	eprintf	878:3:23871:23877	873161	10	True				
ANR	875457	Statement	(	878:11:23879:23879	873161	11	True				
ANR	875458	Statement	"""Usage: cv[1248] [num]\\n"""	878:12:23880:23904	873161	12	True				
ANR	875459	Statement	"""Show offset if current value equals to the one specified\\n"""	879:4:23910:23969	873161	13	True				
ANR	875460	Statement	""" /v 18312   # serch for a known value\\n"""	880:4:23975:24015	873161	14	True				
ANR	875461	Statement	""" dc\\n"""	881:4:24021:24027	873161	15	True				
ANR	875462	Statement	""" cv4 18312 @@ hit*\\n"""	882:4:24033:24054	873161	16	True				
ANR	875463	Statement	""" dc\\n"""	883:4:24060:24066	873161	17	True				
ANR	875464	Statement	)	883:11:24067:24067	873161	18	True				
ANR	875465	ExpressionStatement		883:12:24068:24068	873161	19	True				
ANR	875466	BreakStatement	break ;	884:3:24073:24078	873161	20	True				
ANR	875467	BreakStatement	break ;	887:1:24088:24093	873161	73	True				
ANR	875468	Label	case 'V' :	888:1:24096:24104	873161	74	True				
ANR	875469	CompoundStatement		390:2:9979:9996	873161	75					
ANR	875470	IdentifierDeclStatement	int sz = input [ 1 ] ;	889:2:24118:24135	873161	0	True				
ANR	875471	IdentifierDecl	sz = input [ 1 ]		873161	0					
ANR	875472	IdentifierDeclType	int		873161	0					
ANR	875473	Identifier	sz		873161	1					
ANR	875474	AssignmentExpression	sz = input [ 1 ]		873161	2		=			
ANR	875475	Identifier	sz		873161	0					
ANR	875476	ArrayIndexing	input [ 1 ]		873161	1					
ANR	875477	Identifier	input		873161	0					
ANR	875478	PrimaryExpression	1		873161	1					
ANR	875479	IfStatement	if ( sz == ' ' )		873161	1					
ANR	875480	Condition	sz == ' '	890:6:24143:24151	873161	0	True				
ANR	875481	EqualityExpression	sz == ' '		873161	0		==			
ANR	875482	Identifier	sz		873161	0					
ANR	875483	PrimaryExpression	' '		873161	1					
ANR	875484	CompoundStatement		391:17:10015:10015	873161	1					
ANR	875485	SwitchStatement	"switch ( r_config_get_i ( core -> config , ""asm.bits"" ) )"		873161	0					
ANR	875486	Condition	"r_config_get_i ( core -> config , ""asm.bits"" )"	891:11:24167:24207	873161	0	True				
ANR	875487	CallExpression	"r_config_get_i ( core -> config , ""asm.bits"" )"		873161	0					
ANR	875488	Callee	r_config_get_i		873161	0					
ANR	875489	Identifier	r_config_get_i		873161	0					
ANR	875490	ArgumentList	core -> config		873161	1					
ANR	875491	Argument	core -> config		873161	0					
ANR	875492	PtrMemberAccess	core -> config		873161	0					
ANR	875493	Identifier	core		873161	0					
ANR	875494	Identifier	config		873161	1					
ANR	875495	Argument	"""asm.bits"""		873161	1					
ANR	875496	PrimaryExpression	"""asm.bits"""		873161	0					
ANR	875497	CompoundStatement		392:54:10071:10071	873161	1					
ANR	875498	Label	case 8 :	892:3:24215:24221	873161	0	True				
ANR	875499	ExpressionStatement	sz = '1'	892:11:24223:24231	873161	1	True				
ANR	875500	AssignmentExpression	sz = '1'		873161	0		=			
ANR	875501	Identifier	sz		873161	0					
ANR	875502	PrimaryExpression	'1'		873161	1					
ANR	875503	BreakStatement	break ;	892:21:24233:24238	873161	2	True				
ANR	875504	Label	case 16 :	893:3:24243:24250	873161	3	True				
ANR	875505	ExpressionStatement	sz = '2'	893:12:24252:24260	873161	4	True				
ANR	875506	AssignmentExpression	sz = '2'		873161	0		=			
ANR	875507	Identifier	sz		873161	0					
ANR	875508	PrimaryExpression	'2'		873161	1					
ANR	875509	BreakStatement	break ;	893:22:24262:24267	873161	5	True				
ANR	875510	Label	case 32 :	894:3:24272:24279	873161	6	True				
ANR	875511	ExpressionStatement	sz = '4'	894:12:24281:24289	873161	7	True				
ANR	875512	AssignmentExpression	sz = '4'		873161	0		=			
ANR	875513	Identifier	sz		873161	0					
ANR	875514	PrimaryExpression	'4'		873161	1					
ANR	875515	BreakStatement	break ;	894:22:24291:24296	873161	8	True				
ANR	875516	Label	case 64 :	895:3:24301:24308	873161	9	True				
ANR	875517	ExpressionStatement	sz = '8'	895:12:24310:24318	873161	10	True				
ANR	875518	AssignmentExpression	sz = '8'		873161	0		=			
ANR	875519	Identifier	sz		873161	0					
ANR	875520	PrimaryExpression	'8'		873161	1					
ANR	875521	BreakStatement	break ;	895:22:24320:24325	873161	11	True				
ANR	875522	Label	default :	896:3:24330:24337	873161	12	True				
ANR	875523	Identifier	default		873161	0					
ANR	875524	ExpressionStatement	sz = '4'	896:12:24339:24347	873161	13	True				
ANR	875525	AssignmentExpression	sz = '4'		873161	0		=			
ANR	875526	Identifier	sz		873161	0					
ANR	875527	PrimaryExpression	'4'		873161	1					
ANR	875528	BreakStatement	break ;	896:22:24349:24354	873161	14	True				
ANR	875529	ElseStatement	else		873161	0					
ANR	875530	IfStatement	if ( sz == '?' )		873161	0					
ANR	875531	Condition	sz == '?'	898:13:24385:24393	873161	0	True				
ANR	875532	EqualityExpression	sz == '?'		873161	0		==			
ANR	875533	Identifier	sz		873161	0					
ANR	875534	PrimaryExpression	'?'		873161	1					
ANR	875535	CompoundStatement		399:24:10257:10257	873161	1					
ANR	875536	Statement	eprintf	899:3:24401:24407	873161	0	True				
ANR	875537	Statement	(	899:11:24409:24409	873161	1	True				
ANR	875538	Statement	"""Usage: cV[1248] [addr] @ addr2\\n"""	899:12:24410:24443	873161	2	True				
ANR	875539	Statement	"""Compare n bytes from one address to current one and return in $? 0 or 1\\n"""	900:4:24449:24523	873161	3	True				
ANR	875540	Statement	)	900:79:24524:24524	873161	4	True				
ANR	875541	ExpressionStatement		900:80:24525:24525	873161	5	True				
ANR	875542	ExpressionStatement	sz -= '0'	902:2:24533:24542	873161	2	True				
ANR	875543	AssignmentExpression	sz -= '0'		873161	0		-=			
ANR	875544	Identifier	sz		873161	0					
ANR	875545	PrimaryExpression	'0'		873161	1					
ANR	875546	IfStatement	if ( sz > 0 )		873161	3					
ANR	875547	Condition	sz > 0	903:6:24550:24555	873161	0	True				
ANR	875548	RelationalExpression	sz > 0		873161	0		>			
ANR	875549	Identifier	sz		873161	0					
ANR	875550	PrimaryExpression	0		873161	1					
ANR	875551	CompoundStatement		406:3:10472:10488	873161	1					
ANR	875552	IdentifierDeclStatement	"ut64 at = r_num_math ( core -> num , input + 2 ) ;"	904:3:24563:24606	873161	0	True				
ANR	875553	IdentifierDecl	"at = r_num_math ( core -> num , input + 2 )"		873161	0					
ANR	875554	IdentifierDeclType	ut64		873161	0					
ANR	875555	Identifier	at		873161	1					
ANR	875556	AssignmentExpression	"at = r_num_math ( core -> num , input + 2 )"		873161	2		=			
ANR	875557	Identifier	at		873161	0					
ANR	875558	CallExpression	"r_num_math ( core -> num , input + 2 )"		873161	1					
ANR	875559	Callee	r_num_math		873161	0					
ANR	875560	Identifier	r_num_math		873161	0					
ANR	875561	ArgumentList	core -> num		873161	1					
ANR	875562	Argument	core -> num		873161	0					
ANR	875563	PtrMemberAccess	core -> num		873161	0					
ANR	875564	Identifier	core		873161	0					
ANR	875565	Identifier	num		873161	1					
ANR	875566	Argument	input + 2		873161	1					
ANR	875567	AdditiveExpression	input + 2		873161	0		+			
ANR	875568	Identifier	input		873161	0					
ANR	875569	PrimaryExpression	2		873161	1					
ANR	875570	IdentifierDeclStatement	ut8 buf [ 8 ] = { 0 } ;	905:3:24611:24627	873161	1	True				
ANR	875571	IdentifierDecl	buf [ 8 ] = { 0 }		873161	0					
ANR	875572	IdentifierDeclType	ut8 [ 8 ]		873161	0					
ANR	875573	Identifier	buf		873161	1					
ANR	875574	PrimaryExpression	8		873161	2					
ANR	875575	AssignmentExpression	buf [ 8 ] = { 0 }		873161	3		=			
ANR	875576	Identifier	buf		873161	0					
ANR	875577	InitializerList	0		873161	1					
ANR	875578	PrimaryExpression	0		873161	0					
ANR	875579	ExpressionStatement	"r_io_read_at ( core -> io , at , buf , sizeof ( buf ) )"	906:3:24632:24678	873161	2	True				
ANR	875580	CallExpression	"r_io_read_at ( core -> io , at , buf , sizeof ( buf ) )"		873161	0					
ANR	875581	Callee	r_io_read_at		873161	0					
ANR	875582	Identifier	r_io_read_at		873161	0					
ANR	875583	ArgumentList	core -> io		873161	1					
ANR	875584	Argument	core -> io		873161	0					
ANR	875585	PtrMemberAccess	core -> io		873161	0					
ANR	875586	Identifier	core		873161	0					
ANR	875587	Identifier	io		873161	1					
ANR	875588	Argument	at		873161	1					
ANR	875589	Identifier	at		873161	0					
ANR	875590	Argument	buf		873161	2					
ANR	875591	Identifier	buf		873161	0					
ANR	875592	Argument	sizeof ( buf )		873161	3					
ANR	875593	SizeofExpression	sizeof ( buf )		873161	0					
ANR	875594	Sizeof	sizeof		873161	0					
ANR	875595	SizeofOperand	buf		873161	1					
ANR	875596	ExpressionStatement	"core -> num -> value = memcmp ( buf , core -> block , sz ) ? 1 : 0"	907:3:24683:24737	873161	3	True				
ANR	875597	AssignmentExpression	"core -> num -> value = memcmp ( buf , core -> block , sz ) ? 1 : 0"		873161	0		=			
ANR	875598	PtrMemberAccess	core -> num -> value		873161	0					
ANR	875599	PtrMemberAccess	core -> num		873161	0					
ANR	875600	Identifier	core		873161	0					
ANR	875601	Identifier	num		873161	1					
ANR	875602	Identifier	value		873161	1					
ANR	875603	ConditionalExpression	"memcmp ( buf , core -> block , sz ) ? 1 : 0"		873161	1					
ANR	875604	Condition	"memcmp ( buf , core -> block , sz )"		873161	0					
ANR	875605	CallExpression	"memcmp ( buf , core -> block , sz )"		873161	0					
ANR	875606	Callee	memcmp		873161	0					
ANR	875607	Identifier	memcmp		873161	0					
ANR	875608	ArgumentList	buf		873161	1					
ANR	875609	Argument	buf		873161	0					
ANR	875610	Identifier	buf		873161	0					
ANR	875611	Argument	core -> block		873161	1					
ANR	875612	PtrMemberAccess	core -> block		873161	0					
ANR	875613	Identifier	core		873161	0					
ANR	875614	Identifier	block		873161	1					
ANR	875615	Argument	sz		873161	2					
ANR	875616	Identifier	sz		873161	0					
ANR	875617	PrimaryExpression	1		873161	1					
ANR	875618	PrimaryExpression	0		873161	2					
ANR	875619	BreakStatement	break ;	909:2:24745:24750	873161	4	True				
ANR	875620	Label	case 'l' :	911:1:24756:24764	873161	76	True				
ANR	875621	IfStatement	"if ( strchr ( input , 'f' ) )"		873161	77					
ANR	875622	Condition	"strchr ( input , 'f' )"	912:6:24780:24798	873161	0	True				
ANR	875623	CallExpression	"strchr ( input , 'f' )"		873161	0					
ANR	875624	Callee	strchr		873161	0					
ANR	875625	Identifier	strchr		873161	0					
ANR	875626	ArgumentList	input		873161	1					
ANR	875627	Argument	input		873161	0					
ANR	875628	Identifier	input		873161	0					
ANR	875629	Argument	'f'		873161	1					
ANR	875630	PrimaryExpression	'f'		873161	0					
ANR	875631	CompoundStatement		413:27:10662:10662	873161	1					
ANR	875632	ExpressionStatement	r_cons_flush ( )	913:3:24806:24821	873161	0	True				
ANR	875633	CallExpression	r_cons_flush ( )		873161	0					
ANR	875634	Callee	r_cons_flush		873161	0					
ANR	875635	Identifier	r_cons_flush		873161	0					
ANR	875636	ArgumentList			873161	1					
ANR	875637	ElseStatement	else		873161	0					
ANR	875638	IfStatement	if ( input [ 1 ] == 0 )		873161	0					
ANR	875639	Condition	input [ 1 ] == 0	914:13:24836:24848	873161	0	True				
ANR	875640	EqualityExpression	input [ 1 ] == 0		873161	0		==			
ANR	875641	ArrayIndexing	input [ 1 ]		873161	0					
ANR	875642	Identifier	input		873161	0					
ANR	875643	PrimaryExpression	1		873161	1					
ANR	875644	PrimaryExpression	0		873161	1					
ANR	875645	CompoundStatement		415:28:10712:10712	873161	1					
ANR	875646	ExpressionStatement	r_cons_fill_line ( )	915:3:24856:24875	873161	0	True				
ANR	875647	CallExpression	r_cons_fill_line ( )		873161	0					
ANR	875648	Callee	r_cons_fill_line		873161	0					
ANR	875649	Identifier	r_cons_fill_line		873161	0					
ANR	875650	ArgumentList			873161	1					
ANR	875651	ElseStatement	else		873161	0					
ANR	875652	IfStatement	"if ( ! strchr ( input , '0' ) )"		873161	0					
ANR	875653	Condition	"! strchr ( input , '0' )"	917:13:24919:24938	873161	0	True				
ANR	875654	UnaryOperationExpression	"! strchr ( input , '0' )"		873161	0					
ANR	875655	UnaryOperator	!		873161	0					
ANR	875656	CallExpression	"strchr ( input , '0' )"		873161	1					
ANR	875657	Callee	strchr		873161	0					
ANR	875658	Identifier	strchr		873161	0					
ANR	875659	ArgumentList	input		873161	1					
ANR	875660	Argument	input		873161	0					
ANR	875661	Identifier	input		873161	0					
ANR	875662	Argument	'0'		873161	1					
ANR	875663	PrimaryExpression	'0'		873161	0					
ANR	875664	CompoundStatement		418:35:10802:10802	873161	1					
ANR	875665	ExpressionStatement	r_cons_clear00 ( )	918:3:24946:24963	873161	0	True				
ANR	875666	CallExpression	r_cons_clear00 ( )		873161	0					
ANR	875667	Callee	r_cons_clear00		873161	0					
ANR	875668	Identifier	r_cons_clear00		873161	0					
ANR	875669	ArgumentList			873161	1					
ANR	875670	BreakStatement	break ;	920:2:24971:24976	873161	78	True				
ANR	875671	Label	default :	921:1:24979:24986	873161	79	True				
ANR	875672	Identifier	default		873161	0					
ANR	875673	ExpressionStatement	"r_core_cmd_help ( core , help_msg_c )"	922:2:24990:25024	873161	80	True				
ANR	875674	CallExpression	"r_core_cmd_help ( core , help_msg_c )"		873161	0					
ANR	875675	Callee	r_core_cmd_help		873161	0					
ANR	875676	Identifier	r_core_cmd_help		873161	0					
ANR	875677	ArgumentList	core		873161	1					
ANR	875678	Argument	core		873161	0					
ANR	875679	Identifier	core		873161	0					
ANR	875680	Argument	help_msg_c		873161	1					
ANR	875681	Identifier	help_msg_c		873161	0					
ANR	875682	IfStatement	if ( val != UT64_MAX )		873161	13					
ANR	875683	Condition	val != UT64_MAX	924:5:25034:25048	873161	0	True				
ANR	875684	EqualityExpression	val != UT64_MAX		873161	0		!=			
ANR	875685	Identifier	val		873161	0					
ANR	875686	Identifier	UT64_MAX		873161	1					
ANR	875687	CompoundStatement		425:22:10912:10912	873161	1					
ANR	875688	ExpressionStatement	core -> num -> value = val	925:2:25055:25077	873161	0	True				
ANR	875689	AssignmentExpression	core -> num -> value = val		873161	0		=			
ANR	875690	PtrMemberAccess	core -> num -> value		873161	0					
ANR	875691	PtrMemberAccess	core -> num		873161	0					
ANR	875692	Identifier	core		873161	0					
ANR	875693	Identifier	num		873161	1					
ANR	875694	Identifier	value		873161	1					
ANR	875695	Identifier	val		873161	1					
ANR	875696	ReturnStatement	return 0 ;	927:1:25083:25091	873161	14	True				
ANR	875697	PrimaryExpression	0		873161	0					
ANR	875698	ReturnType	static int		873161	1					
ANR	875699	Identifier	cmd_cmp		873161	2					
ANR	875700	ParameterList	"void * data , const char * input"		873161	3					
ANR	875701	Parameter	void * data	500:19:14107:14116	873161	0	True				
ANR	875702	ParameterType	void *		873161	0					
ANR	875703	Identifier	data		873161	1					
ANR	875704	Parameter	const char * input	500:31:14119:14135	873161	1	True				
ANR	875705	ParameterType	const char *		873161	0					
ANR	875706	Identifier	input		873161	1					
ANR	875707	CFGEntryNode	ENTRY		873161		True				
ANR	875708	CFGExitNode	EXIT		873161		True				
ANR	875709	Symbol	r_sys_getenv		873161						
ANR	875710	Symbol	& v16		873161						
ANR	875711	Symbol	* input		873161						
ANR	875712	Symbol	core -> offset		873161						
ANR	875713	Symbol	strchr		873161						
ANR	875714	Symbol	core -> cons -> columns		873161						
ANR	875715	Symbol	* ( ut16 * ) block		873161						
ANR	875716	Symbol	path		873161						
ANR	875717	Symbol	len		873161						
ANR	875718	Symbol	* homepath		873161						
ANR	875719	Symbol	v16		873161						
ANR	875720	Symbol	block		873161						
ANR	875721	Symbol	* core -> num		873161						
ANR	875722	Symbol	val		873161						
ANR	875723	Symbol	core -> blocksize		873161						
ANR	875724	Symbol	* buf		873161						
ANR	875725	Symbol	core -> block		873161						
ANR	875726	Symbol	r_sandbox_chdir		873161						
ANR	875727	Symbol	fread		873161						
ANR	875728	Symbol	str		873161						
ANR	875729	Symbol	input		873161						
ANR	875730	Symbol	oldText		873161						
ANR	875731	Symbol	at		873161						
ANR	875732	Symbol	r_config_get_i		873161						
ANR	875733	Symbol	r_str_trim_ro		873161						
ANR	875734	Symbol	R_PRINT_FLAGS_DIFFOUT		873161						
ANR	875735	Symbol	core -> print -> flags		873161						
ANR	875736	Symbol	oflags		873161						
ANR	875737	Symbol	* core -> cons		873161						
ANR	875738	Symbol	core2 -> anal		873161						
ANR	875739	Symbol	help_msg_c		873161						
ANR	875740	Symbol	* core		873161						
ANR	875741	Symbol	core -> anal		873161						
ANR	875742	Symbol	core -> cons		873161						
ANR	875743	Symbol	v32		873161						
ANR	875744	Symbol	core -> io		873161						
ANR	875745	Symbol	r_hex_str2bin		873161						
ANR	875746	Symbol	r_cmd_alias_get		873161						
ANR	875747	Symbol	* * core2		873161						
ANR	875748	Symbol	malloc		873161						
ANR	875749	Symbol	b		873161						
ANR	875750	Symbol	* ( ut32 * ) block		873161						
ANR	875751	Symbol	oldcwd		873161						
ANR	875752	Symbol	diffops		873161						
ANR	875753	Symbol	* core2 -> io		873161						
ANR	875754	Symbol	r_sys_getdir		873161						
ANR	875755	Symbol	sz		873161						
ANR	875756	Symbol	i		873161						
ANR	875757	Symbol	filled		873161						
ANR	875758	Symbol	r_core_new		873161						
ANR	875759	Symbol	n		873161						
ANR	875760	Symbol	help_msg		873161						
ANR	875761	Symbol	buf		873161						
ANR	875762	Symbol	* core -> print		873161						
ANR	875763	Symbol	& v32		873161						
ANR	875764	Symbol	col		873161						
ANR	875765	Symbol	data		873161						
ANR	875766	Symbol	R_SYS_HOME		873161						
ANR	875767	Symbol	core -> num -> value		873161						
ANR	875768	Symbol	cmd_cp		873161						
ANR	875769	Symbol	mode		873161						
ANR	875770	Symbol	strlen		873161						
ANR	875771	Symbol	memcmp		873161						
ANR	875772	Symbol	r_hex_bin2str		873161						
ANR	875773	Symbol	homepath		873161						
ANR	875774	Symbol	newdir		873161						
ANR	875775	Symbol	core -> num		873161						
ANR	875776	Symbol	& v64		873161						
ANR	875777	Symbol	ret		873161						
ANR	875778	Symbol	strcmp		873161						
ANR	875779	Symbol	res		873161						
ANR	875780	Symbol	NULL		873161						
ANR	875781	Symbol	radare_compare		873161						
ANR	875782	Symbol	core -> io -> va		873161						
ANR	875783	Symbol	core		873161						
ANR	875784	Symbol	v64		873161						
ANR	875785	Symbol	true		873161						
ANR	875786	Symbol	core -> fs		873161						
ANR	875787	Symbol	core -> print		873161						
ANR	875788	Symbol	r_fs_check		873161						
ANR	875789	Symbol	fd		873161						
ANR	875790	Symbol	core2 -> io -> va		873161						
ANR	875791	Symbol	core2 -> config		873161						
ANR	875792	Symbol	help_message		873161						
ANR	875793	Symbol	core2 -> io		873161						
ANR	875794	Symbol	r_str_unescape		873161						
ANR	875795	Symbol	r_num_math		873161						
ANR	875796	Symbol	core2		873161						
ANR	875797	Symbol	* filled		873161						
ANR	875798	Symbol	UT64_MAX		873161						
ANR	875799	Symbol	addr		873161						
ANR	875800	Symbol	r_str_home		873161						
ANR	875801	Symbol	* * core		873161						
ANR	875802	Symbol	core -> config		873161						
ANR	875803	Symbol	core -> rcmd		873161						
ANR	875804	Symbol	* ( ut64 * ) block		873161						
ANR	875805	Symbol	false		873161						
ANR	875806	Symbol	r_io_read_at		873161						
ANR	875807	Symbol	home		873161						
ANR	875808	Symbol	* block		873161						
ANR	875809	Symbol	* core -> io		873161						
ANR	875810	Symbol	* i		873161						
ANR	875811	Symbol	r_file_size		873161						
ANR	875812	Symbol	* core2		873161						
ANR	875813	Symbol	R_CORE_LOADLIBS_ALL		873161						
ANR	875814	Symbol	file2		873161						
ANR	875815	Symbol	* path		873161						
ANR	875816	Symbol	r_sandbox_fopen		873161						
ANR	875817	Symbol	strdup		873161						
ANR	875818	Symbol	r_syscmd_cat		873161						
