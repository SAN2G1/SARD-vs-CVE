command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	2217479	File	data/converged/CVE-2019-16718~_radare2/json_indent.c								
ANR	2217480	Function	doIndent	6:0:86:251							
ANR	2217481	FunctionDef	"doIndent (int idt , char * * o , const char * tab)"		2217480	0					
ANR	2217482	CompoundStatement		6:57:143:251	2217480	0					
ANR	2217483	IdentifierDeclStatement	int i ;	7:1:146:151	2217480	0	True				
ANR	2217484	IdentifierDecl	i		2217480	0					
ANR	2217485	IdentifierDeclType	int		2217480	0					
ANR	2217486	Identifier	i		2217480	1					
ANR	2217487	IdentifierDeclStatement	char * x ;	8:1:154:161	2217480	1	True				
ANR	2217488	IdentifierDecl	* x		2217480	0					
ANR	2217489	IdentifierDeclType	char *		2217480	0					
ANR	2217490	Identifier	x		2217480	1					
ANR	2217491	ForStatement	for ( i = 0 ; i < idt ; i ++ )		2217480	2					
ANR	2217492	ForInit	i = 0 ;	9:6:169:174	2217480	0	True				
ANR	2217493	AssignmentExpression	i = 0		2217480	0		=			
ANR	2217494	Identifier	i		2217480	0					
ANR	2217495	PrimaryExpression	0		2217480	1					
ANR	2217496	Condition	i < idt	9:13:176:182	2217480	1	True				
ANR	2217497	RelationalExpression	i < idt		2217480	0		<			
ANR	2217498	Identifier	i		2217480	0					
ANR	2217499	Identifier	idt		2217480	1					
ANR	2217500	PostIncDecOperationExpression	i ++	9:22:185:187	2217480	2	True				
ANR	2217501	Identifier	i		2217480	0					
ANR	2217502	IncDec	++		2217480	1					
ANR	2217503	CompoundStatement		4:27:46:46	2217480	3					
ANR	2217504	ForStatement	for ( x = ( char * ) tab ; * x ; x ++ )		2217480	0					
ANR	2217505	ForInit	x = ( char * ) tab ;	10:7:199:214	2217480	0	True				
ANR	2217506	AssignmentExpression	x = ( char * ) tab		2217480	0		=			
ANR	2217507	Identifier	x		2217480	0					
ANR	2217508	CastExpression	( char * ) tab		2217480	1					
ANR	2217509	CastTarget	char *		2217480	0					
ANR	2217510	Identifier	tab		2217480	1					
ANR	2217511	Condition	* x	10:24:216:217	2217480	1	True				
ANR	2217512	UnaryOperationExpression	* x		2217480	0					
ANR	2217513	UnaryOperator	*		2217480	0					
ANR	2217514	Identifier	x		2217480	1					
ANR	2217515	PostIncDecOperationExpression	x ++	10:28:220:222	2217480	2	True				
ANR	2217516	Identifier	x		2217480	0					
ANR	2217517	IncDec	++		2217480	1					
ANR	2217518	CompoundStatement		5:33:81:81	2217480	3					
ANR	2217519	ExpressionStatement	* ( * o ) ++ = * x	11:3:230:242	2217480	0	True				
ANR	2217520	AssignmentExpression	* ( * o ) ++ = * x		2217480	0		=			
ANR	2217521	UnaryOperationExpression	* ( * o ) ++		2217480	0					
ANR	2217522	UnaryOperator	*		2217480	0					
ANR	2217523	PostIncDecOperationExpression	( * o ) ++		2217480	1					
ANR	2217524	UnaryOperationExpression	* o		2217480	0					
ANR	2217525	UnaryOperator	*		2217480	0					
ANR	2217526	Identifier	o		2217480	1					
ANR	2217527	IncDec	++		2217480	1					
ANR	2217528	UnaryOperationExpression	* x		2217480	1					
ANR	2217529	UnaryOperator	*		2217480	0					
ANR	2217530	Identifier	x		2217480	1					
ANR	2217531	ReturnType	static void		2217480	1					
ANR	2217532	Identifier	doIndent		2217480	2					
ANR	2217533	ParameterList	"int idt , char * * o , const char * tab"		2217480	3					
ANR	2217534	Parameter	int idt	6:21:107:113	2217480	0	True				
ANR	2217535	ParameterType	int		2217480	0					
ANR	2217536	Identifier	idt		2217480	1					
ANR	2217537	Parameter	char * * o	6:30:116:123	2217480	1	True				
ANR	2217538	ParameterType	char * *		2217480	0					
ANR	2217539	Identifier	o		2217480	1					
ANR	2217540	Parameter	const char * tab	6:40:126:140	2217480	2	True				
ANR	2217541	ParameterType	const char *		2217480	0					
ANR	2217542	Identifier	tab		2217480	1					
ANR	2217543	CFGEntryNode	ENTRY		2217480		True				
ANR	2217544	CFGExitNode	EXIT		2217480		True				
ANR	2217545	Symbol	* x		2217480						
ANR	2217546	Symbol	tab		2217480						
ANR	2217547	Symbol	* ( * o ) ++		2217480						
ANR	2217548	Symbol	idt		2217480						
ANR	2217549	Symbol	x		2217480						
ANR	2217550	Symbol	i		2217480						
ANR	2217551	Symbol	* o		2217480						
ANR	2217552	Symbol	o		2217480						
ANR	2217553	DeclStmt									
ANR	2217554	Decl							const char	const char *	p
ANR	2217555	ClassDef	<unnamed>	25:0:408:493							
ANR	2217556	DeclStmt									
ANR	2217557	Decl							const char	const char * [ ]	origColors
ANR	2217558	Function	r_print_json_path	42:0:629:2574							
ANR	2217559	FunctionDef	"r_print_json_path (const char * s , int pos)"		2217558	0					
ANR	2217560	CompoundStatement		42:54:683:2574	2217558	0					
ANR	2217561	IdentifierDeclStatement	int indent = 0 ;	43:1:686:700	2217558	0	True				
ANR	2217562	IdentifierDecl	indent = 0		2217558	0					
ANR	2217563	IdentifierDeclType	int		2217558	0					
ANR	2217564	Identifier	indent		2217558	1					
ANR	2217565	AssignmentExpression	indent = 0		2217558	2		=			
ANR	2217566	Identifier	indent		2217558	0					
ANR	2217567	PrimaryExpression	0		2217558	1					
ANR	2217568	Statement	define	44:1:703:708	2217558	1	True				
ANR	2217569	Statement	DSZ	44:8:710:712	2217558	2	True				
ANR	2217570	Statement	128	44:12:714:716	2217558	3	True				
ANR	2217571	IdentifierDeclStatement	const char * words [ DSZ ] = { NULL } ;	45:1:719:752	2217558	4	True				
ANR	2217572	IdentifierDecl	* words [ DSZ ] = { NULL }		2217558	0					
ANR	2217573	IdentifierDeclType	const char * [ DSZ ]		2217558	0					
ANR	2217574	Identifier	words		2217558	1					
ANR	2217575	Identifier	DSZ		2217558	2					
ANR	2217576	AssignmentExpression	* words [ DSZ ] = { NULL }		2217558	3		=			
ANR	2217577	Identifier	DSZ		2217558	0					
ANR	2217578	InitializerList	NULL		2217558	1					
ANR	2217579	Identifier	NULL		2217558	0					
ANR	2217580	IdentifierDeclStatement	int lengths [ DSZ ] = { 0 } ;	46:1:755:779	2217558	5	True				
ANR	2217581	IdentifierDecl	lengths [ DSZ ] = { 0 }		2217558	0					
ANR	2217582	IdentifierDeclType	int [ DSZ ]		2217558	0					
ANR	2217583	Identifier	lengths		2217558	1					
ANR	2217584	Identifier	DSZ		2217558	2					
ANR	2217585	AssignmentExpression	lengths [ DSZ ] = { 0 }		2217558	3		=			
ANR	2217586	Identifier	DSZ		2217558	0					
ANR	2217587	InitializerList	0		2217558	1					
ANR	2217588	PrimaryExpression	0		2217558	0					
ANR	2217589	IdentifierDeclStatement	int indexs [ DSZ ] = { 0 } ;	47:1:782:805	2217558	6	True				
ANR	2217590	IdentifierDecl	indexs [ DSZ ] = { 0 }		2217558	0					
ANR	2217591	IdentifierDeclType	int [ DSZ ]		2217558	0					
ANR	2217592	Identifier	indexs		2217558	1					
ANR	2217593	Identifier	DSZ		2217558	2					
ANR	2217594	AssignmentExpression	indexs [ DSZ ] = { 0 }		2217558	3		=			
ANR	2217595	Identifier	DSZ		2217558	0					
ANR	2217596	InitializerList	0		2217558	1					
ANR	2217597	PrimaryExpression	0		2217558	0					
ANR	2217598	IdentifierDeclStatement	int instr = 0 ;	48:1:808:821	2217558	7	True				
ANR	2217599	IdentifierDecl	instr = 0		2217558	0					
ANR	2217600	IdentifierDeclType	int		2217558	0					
ANR	2217601	Identifier	instr		2217558	1					
ANR	2217602	AssignmentExpression	instr = 0		2217558	2		=			
ANR	2217603	Identifier	instr		2217558	0					
ANR	2217604	PrimaryExpression	0		2217558	1					
ANR	2217605	IdentifierDeclStatement	bool isarr = false ;	49:1:824:842	2217558	8	True				
ANR	2217606	IdentifierDecl	isarr = false		2217558	0					
ANR	2217607	IdentifierDeclType	bool		2217558	0					
ANR	2217608	Identifier	isarr		2217558	1					
ANR	2217609	AssignmentExpression	isarr = false		2217558	2		=			
ANR	2217610	Identifier	false		2217558	0					
ANR	2217611	Identifier	false		2217558	1					
ANR	2217612	IfStatement	if ( ! s )		2217558	9					
ANR	2217613	Condition	! s	50:5:849:850	2217558	0	True				
ANR	2217614	UnaryOperationExpression	! s		2217558	0					
ANR	2217615	UnaryOperator	!		2217558	0					
ANR	2217616	Identifier	s		2217558	1					
ANR	2217617	CompoundStatement		9:9:169:169	2217558	1					
ANR	2217618	ReturnStatement	return NULL ;	51:2:857:868	2217558	0	True				
ANR	2217619	Identifier	NULL		2217558	0					
ANR	2217620	IdentifierDeclStatement	int arrpos = 0 ;	53:1:874:888	2217558	10	True				
ANR	2217621	IdentifierDecl	arrpos = 0		2217558	0					
ANR	2217622	IdentifierDeclType	int		2217558	0					
ANR	2217623	Identifier	arrpos		2217558	1					
ANR	2217624	AssignmentExpression	arrpos = 0		2217558	2		=			
ANR	2217625	Identifier	arrpos		2217558	0					
ANR	2217626	PrimaryExpression	0		2217558	1					
ANR	2217627	IdentifierDeclStatement	const char * os = s ;	54:1:891:909	2217558	11	True				
ANR	2217628	IdentifierDecl	* os = s		2217558	0					
ANR	2217629	IdentifierDeclType	const char *		2217558	0					
ANR	2217630	Identifier	os		2217558	1					
ANR	2217631	AssignmentExpression	* os = s		2217558	2		=			
ANR	2217632	Identifier	s		2217558	0					
ANR	2217633	Identifier	s		2217558	1					
ANR	2217634	IdentifierDeclStatement	int osz = ( 1 + strlen ( s ) ) * 20 ;	55:1:912:943	2217558	12	True				
ANR	2217635	IdentifierDecl	osz = ( 1 + strlen ( s ) ) * 20		2217558	0					
ANR	2217636	IdentifierDeclType	int		2217558	0					
ANR	2217637	Identifier	osz		2217558	1					
ANR	2217638	AssignmentExpression	osz = ( 1 + strlen ( s ) ) * 20		2217558	2		=			
ANR	2217639	Identifier	osz		2217558	0					
ANR	2217640	MultiplicativeExpression	( 1 + strlen ( s ) ) * 20		2217558	1		*			
ANR	2217641	AdditiveExpression	1 + strlen ( s )		2217558	0		+			
ANR	2217642	PrimaryExpression	1		2217558	0					
ANR	2217643	CallExpression	strlen ( s )		2217558	1					
ANR	2217644	Callee	strlen		2217558	0					
ANR	2217645	Identifier	strlen		2217558	0					
ANR	2217646	ArgumentList	s		2217558	1					
ANR	2217647	Argument	s		2217558	0					
ANR	2217648	Identifier	s		2217558	0					
ANR	2217649	PrimaryExpression	20		2217558	1					
ANR	2217650	IfStatement	if ( osz < 1 )		2217558	13					
ANR	2217651	Condition	osz < 1	56:5:950:956	2217558	0	True				
ANR	2217652	RelationalExpression	osz < 1		2217558	0		<			
ANR	2217653	Identifier	osz		2217558	0					
ANR	2217654	PrimaryExpression	1		2217558	1					
ANR	2217655	CompoundStatement		15:14:275:275	2217558	1					
ANR	2217656	ReturnStatement	return NULL ;	57:2:963:974	2217558	0	True				
ANR	2217657	Identifier	NULL		2217558	0					
ANR	2217658	IdentifierDeclStatement	const char * str_a = NULL ;	60:1:981:1005	2217558	14	True				
ANR	2217659	IdentifierDecl	* str_a = NULL		2217558	0					
ANR	2217660	IdentifierDeclType	const char *		2217558	0					
ANR	2217661	Identifier	str_a		2217558	1					
ANR	2217662	AssignmentExpression	* str_a = NULL		2217558	2		=			
ANR	2217663	Identifier	NULL		2217558	0					
ANR	2217664	Identifier	NULL		2217558	1					
ANR	2217665	ForStatement	for ( ; * s ; s ++ )		2217558	15					
ANR	2217666	Condition	* s	61:8:1015:1016	2217558	0	True				
ANR	2217667	UnaryOperationExpression	* s		2217558	0					
ANR	2217668	UnaryOperator	*		2217558	0					
ANR	2217669	Identifier	s		2217558	1					
ANR	2217670	PostIncDecOperationExpression	s ++	61:12:1019:1021	2217558	1	True				
ANR	2217671	Identifier	s		2217558	0					
ANR	2217672	IncDec	++		2217558	1					
ANR	2217673	CompoundStatement		20:17:340:340	2217558	2					
ANR	2217674	IfStatement	if ( instr )		2217558	0					
ANR	2217675	Condition	instr	62:6:1032:1036	2217558	0	True				
ANR	2217676	Identifier	instr		2217558	0					
ANR	2217677	CompoundStatement		21:13:355:355	2217558	1					
ANR	2217678	IfStatement	"if ( s [ 0 ] == '""' )"		2217558	0					
ANR	2217679	Condition	"s [ 0 ] == '""'"	63:7:1048:1058	2217558	0	True				
ANR	2217680	EqualityExpression	"s [ 0 ] == '""'"		2217558	0		==			
ANR	2217681	ArrayIndexing	s [ 0 ]		2217558	0					
ANR	2217682	Identifier	s		2217558	0					
ANR	2217683	PrimaryExpression	0		2217558	1					
ANR	2217684	PrimaryExpression	"'""'"		2217558	1					
ANR	2217685	CompoundStatement		24:4:398:419	2217558	1					
ANR	2217686	ExpressionStatement	instr = 0	64:4:1067:1076	2217558	0	True				
ANR	2217687	AssignmentExpression	instr = 0		2217558	0		=			
ANR	2217688	Identifier	instr		2217558	0					
ANR	2217689	PrimaryExpression	0		2217558	1					
ANR	2217690	IdentifierDeclStatement	ut64 cur = str_a - os ;	65:4:1082:1103	2217558	1	True				
ANR	2217691	IdentifierDecl	cur = str_a - os		2217558	0					
ANR	2217692	IdentifierDeclType	ut64		2217558	0					
ANR	2217693	Identifier	cur		2217558	1					
ANR	2217694	AssignmentExpression	cur = str_a - os		2217558	2		=			
ANR	2217695	Identifier	cur		2217558	0					
ANR	2217696	AdditiveExpression	str_a - os		2217558	1		-			
ANR	2217697	Identifier	str_a		2217558	0					
ANR	2217698	Identifier	os		2217558	1					
ANR	2217699	IfStatement	if ( cur > pos )		2217558	2					
ANR	2217700	Condition	cur > pos	66:8:1113:1121	2217558	0	True				
ANR	2217701	RelationalExpression	cur > pos		2217558	0		>			
ANR	2217702	Identifier	cur		2217558	0					
ANR	2217703	Identifier	pos		2217558	1					
ANR	2217704	CompoundStatement		25:19:440:440	2217558	1					
ANR	2217705	BreakStatement	break ;	67:5:1131:1136	2217558	0	True				
ANR	2217706	IfStatement	if ( indent < DSZ )		2217558	3					
ANR	2217707	Condition	indent < DSZ	69:8:1152:1163	2217558	0	True				
ANR	2217708	RelationalExpression	indent < DSZ		2217558	0		<			
ANR	2217709	Identifier	indent		2217558	0					
ANR	2217710	Identifier	DSZ		2217558	1					
ANR	2217711	CompoundStatement		28:22:482:482	2217558	1					
ANR	2217712	ExpressionStatement	words [ indent - 1 ] = str_a	70:5:1173:1198	2217558	0	True				
ANR	2217713	AssignmentExpression	words [ indent - 1 ] = str_a		2217558	0		=			
ANR	2217714	ArrayIndexing	words [ indent - 1 ]		2217558	0					
ANR	2217715	Identifier	words		2217558	0					
ANR	2217716	AdditiveExpression	indent - 1		2217558	1		-			
ANR	2217717	Identifier	indent		2217558	0					
ANR	2217718	PrimaryExpression	1		2217558	1					
ANR	2217719	Identifier	str_a		2217558	1					
ANR	2217720	ExpressionStatement	lengths [ indent - 1 ] = s - str_a	71:5:1205:1236	2217558	1	True				
ANR	2217721	AssignmentExpression	lengths [ indent - 1 ] = s - str_a		2217558	0		=			
ANR	2217722	ArrayIndexing	lengths [ indent - 1 ]		2217558	0					
ANR	2217723	Identifier	lengths		2217558	0					
ANR	2217724	AdditiveExpression	indent - 1		2217558	1		-			
ANR	2217725	Identifier	indent		2217558	0					
ANR	2217726	PrimaryExpression	1		2217558	1					
ANR	2217727	AdditiveExpression	s - str_a		2217558	1		-			
ANR	2217728	Identifier	s		2217558	0					
ANR	2217729	Identifier	str_a		2217558	1					
ANR	2217730	ExpressionStatement	indexs [ indent - 1 ] = 0	72:5:1243:1265	2217558	2	True				
ANR	2217731	AssignmentExpression	indexs [ indent - 1 ] = 0		2217558	0		=			
ANR	2217732	ArrayIndexing	indexs [ indent - 1 ]		2217558	0					
ANR	2217733	Identifier	indexs		2217558	0					
ANR	2217734	AdditiveExpression	indent - 1		2217558	1		-			
ANR	2217735	Identifier	indent		2217558	0					
ANR	2217736	PrimaryExpression	1		2217558	1					
ANR	2217737	PrimaryExpression	0		2217558	1					
ANR	2217738	ContinueStatement	continue ;	75:3:1281:1289	2217558	1	True				
ANR	2217739	IfStatement	"if ( s [ 0 ] == '""' )"		2217558	1					
ANR	2217740	Condition	"s [ 0 ] == '""'"	78:6:1302:1312	2217558	0	True				
ANR	2217741	EqualityExpression	"s [ 0 ] == '""'"		2217558	0		==			
ANR	2217742	ArrayIndexing	s [ 0 ]		2217558	0					
ANR	2217743	Identifier	s		2217558	0					
ANR	2217744	PrimaryExpression	0		2217558	1					
ANR	2217745	PrimaryExpression	"'""'"		2217558	1					
ANR	2217746	CompoundStatement		37:19:631:631	2217558	1					
ANR	2217747	ExpressionStatement	instr = 1	79:3:1320:1329	2217558	0	True				
ANR	2217748	AssignmentExpression	instr = 1		2217558	0		=			
ANR	2217749	Identifier	instr		2217558	0					
ANR	2217750	PrimaryExpression	1		2217558	1					
ANR	2217751	ExpressionStatement	str_a = s + 1	80:3:1334:1347	2217558	1	True				
ANR	2217752	AssignmentExpression	str_a = s + 1		2217558	0		=			
ANR	2217753	Identifier	str_a		2217558	0					
ANR	2217754	AdditiveExpression	s + 1		2217558	1		+			
ANR	2217755	Identifier	s		2217558	0					
ANR	2217756	PrimaryExpression	1		2217558	1					
ANR	2217757	IfStatement	if ( * s == '\\n' || * s == '\\r' || * s == '\\t' || * s == ' ' )		2217558	2					
ANR	2217758	Condition	* s == '\\n' || * s == '\\r' || * s == '\\t' || * s == ' '	82:6:1359:1409	2217558	0	True				
ANR	2217759	OrExpression	* s == '\\n' || * s == '\\r' || * s == '\\t' || * s == ' '		2217558	0		||			
ANR	2217760	EqualityExpression	* s == '\\n'		2217558	0		==			
ANR	2217761	UnaryOperationExpression	* s		2217558	0					
ANR	2217762	UnaryOperator	*		2217558	0					
ANR	2217763	Identifier	s		2217558	1					
ANR	2217764	PrimaryExpression	'\\n'		2217558	1					
ANR	2217765	OrExpression	* s == '\\r' || * s == '\\t' || * s == ' '		2217558	1		||			
ANR	2217766	EqualityExpression	* s == '\\r'		2217558	0		==			
ANR	2217767	UnaryOperationExpression	* s		2217558	0					
ANR	2217768	UnaryOperator	*		2217558	0					
ANR	2217769	Identifier	s		2217558	1					
ANR	2217770	PrimaryExpression	'\\r'		2217558	1					
ANR	2217771	OrExpression	* s == '\\t' || * s == ' '		2217558	1		||			
ANR	2217772	EqualityExpression	* s == '\\t'		2217558	0		==			
ANR	2217773	UnaryOperationExpression	* s		2217558	0					
ANR	2217774	UnaryOperator	*		2217558	0					
ANR	2217775	Identifier	s		2217558	1					
ANR	2217776	PrimaryExpression	'\\t'		2217558	1					
ANR	2217777	EqualityExpression	* s == ' '		2217558	1		==			
ANR	2217778	UnaryOperationExpression	* s		2217558	0					
ANR	2217779	UnaryOperator	*		2217558	0					
ANR	2217780	Identifier	s		2217558	1					
ANR	2217781	PrimaryExpression	' '		2217558	1					
ANR	2217782	CompoundStatement		41:59:728:728	2217558	1					
ANR	2217783	ContinueStatement	continue ;	83:3:1417:1425	2217558	0	True				
ANR	2217784	SwitchStatement	switch ( * s )		2217558	3					
ANR	2217785	Condition	* s	85:10:1441:1442	2217558	0	True				
ANR	2217786	UnaryOperationExpression	* s		2217558	0					
ANR	2217787	UnaryOperator	*		2217558	0					
ANR	2217788	Identifier	s		2217558	1					
ANR	2217789	CompoundStatement		44:14:761:761	2217558	1					
ANR	2217790	Label	case ':' :	86:2:1449:1457	2217558	0	True				
ANR	2217791	BreakStatement	break ;	87:3:1462:1467	2217558	1	True				
ANR	2217792	Label	"case ',' :"	88:2:1471:1479	2217558	2	True				
ANR	2217793	IfStatement	if ( isarr )		2217558	3					
ANR	2217794	Condition	isarr	89:7:1488:1492	2217558	0	True				
ANR	2217795	Identifier	isarr		2217558	0					
ANR	2217796	CompoundStatement		48:14:811:811	2217558	1					
ANR	2217797	ExpressionStatement	arrpos ++	90:4:1501:1510	2217558	0	True				
ANR	2217798	PostIncDecOperationExpression	arrpos ++		2217558	0					
ANR	2217799	Identifier	arrpos		2217558	0					
ANR	2217800	IncDec	++		2217558	1					
ANR	2217801	IfStatement	if ( indent < DSZ )		2217558	1					
ANR	2217802	Condition	indent < DSZ	91:8:1520:1531	2217558	0	True				
ANR	2217803	RelationalExpression	indent < DSZ		2217558	0		<			
ANR	2217804	Identifier	indent		2217558	0					
ANR	2217805	Identifier	DSZ		2217558	1					
ANR	2217806	CompoundStatement		50:22:850:850	2217558	1					
ANR	2217807	ExpressionStatement	indexs [ indent - 1 ] = arrpos	92:5:1541:1568	2217558	0	True				
ANR	2217808	AssignmentExpression	indexs [ indent - 1 ] = arrpos		2217558	0		=			
ANR	2217809	ArrayIndexing	indexs [ indent - 1 ]		2217558	0					
ANR	2217810	Identifier	indexs		2217558	0					
ANR	2217811	AdditiveExpression	indent - 1		2217558	1		-			
ANR	2217812	Identifier	indent		2217558	0					
ANR	2217813	PrimaryExpression	1		2217558	1					
ANR	2217814	Identifier	arrpos		2217558	1					
ANR	2217815	ExpressionStatement	lengths [ indent - 1 ] = ( s - os )	93:5:1575:1605	2217558	1	True				
ANR	2217816	AssignmentExpression	lengths [ indent - 1 ] = ( s - os )		2217558	0		=			
ANR	2217817	ArrayIndexing	lengths [ indent - 1 ]		2217558	0					
ANR	2217818	Identifier	lengths		2217558	0					
ANR	2217819	AdditiveExpression	indent - 1		2217558	1		-			
ANR	2217820	Identifier	indent		2217558	0					
ANR	2217821	PrimaryExpression	1		2217558	1					
ANR	2217822	AdditiveExpression	s - os		2217558	1		-			
ANR	2217823	Identifier	s		2217558	0					
ANR	2217824	Identifier	os		2217558	1					
ANR	2217825	BreakStatement	break ;	96:3:1621:1626	2217558	4	True				
ANR	2217826	Label	case '{' :	97:2:1630:1638	2217558	5	True				
ANR	2217827	Label	case '[' :	98:2:1642:1650	2217558	6	True				
ANR	2217828	IfStatement	if ( * s == '[' )		2217558	7					
ANR	2217829	Condition	* s == '['	99:7:1659:1667	2217558	0	True				
ANR	2217830	EqualityExpression	* s == '['		2217558	0		==			
ANR	2217831	UnaryOperationExpression	* s		2217558	0					
ANR	2217832	UnaryOperator	*		2217558	0					
ANR	2217833	Identifier	s		2217558	1					
ANR	2217834	PrimaryExpression	'['		2217558	1					
ANR	2217835	CompoundStatement		58:18:986:986	2217558	1					
ANR	2217836	ExpressionStatement	isarr = true	100:4:1676:1688	2217558	0	True				
ANR	2217837	AssignmentExpression	isarr = true		2217558	0		=			
ANR	2217838	Identifier	isarr		2217558	0					
ANR	2217839	Identifier	true		2217558	1					
ANR	2217840	ExpressionStatement	arrpos = 0	101:4:1694:1704	2217558	1	True				
ANR	2217841	AssignmentExpression	arrpos = 0		2217558	0		=			
ANR	2217842	Identifier	arrpos		2217558	0					
ANR	2217843	PrimaryExpression	0		2217558	1					
ANR	2217844	IfStatement	if ( indent > 128 )		2217558	8					
ANR	2217845	Condition	indent > 128	103:7:1718:1729	2217558	0	True				
ANR	2217846	RelationalExpression	indent > 128		2217558	0		>			
ANR	2217847	Identifier	indent		2217558	0					
ANR	2217848	PrimaryExpression	128		2217558	1					
ANR	2217849	CompoundStatement		62:21:1048:1048	2217558	1					
ANR	2217850	ExpressionStatement	"eprintf ( ""JSON indentation is too deep\\n"" )"	104:4:1738:1780	2217558	0	True				
ANR	2217851	CallExpression	"eprintf ( ""JSON indentation is too deep\\n"" )"		2217558	0					
ANR	2217852	Callee	eprintf		2217558	0					
ANR	2217853	Identifier	eprintf		2217558	0					
ANR	2217854	ArgumentList	"""JSON indentation is too deep\\n"""		2217558	1					
ANR	2217855	Argument	"""JSON indentation is too deep\\n"""		2217558	0					
ANR	2217856	PrimaryExpression	"""JSON indentation is too deep\\n"""		2217558	0					
ANR	2217857	ExpressionStatement	indent = 0	105:4:1786:1796	2217558	1	True				
ANR	2217858	AssignmentExpression	indent = 0		2217558	0		=			
ANR	2217859	Identifier	indent		2217558	0					
ANR	2217860	PrimaryExpression	0		2217558	1					
ANR	2217861	ElseStatement	else		2217558	0					
ANR	2217862	CompoundStatement		65:10:1124:1124	2217558	0					
ANR	2217863	ExpressionStatement	indent ++	107:4:1814:1822	2217558	0	True				
ANR	2217864	PostIncDecOperationExpression	indent ++		2217558	0					
ANR	2217865	Identifier	indent		2217558	0					
ANR	2217866	IncDec	++		2217558	1					
ANR	2217867	BreakStatement	break ;	109:3:1832:1837	2217558	9	True				
ANR	2217868	Label	case '}' :	110:2:1841:1849	2217558	10	True				
ANR	2217869	Label	case ']' :	111:2:1853:1861	2217558	11	True				
ANR	2217870	IfStatement	if ( * s == ']' )		2217558	12					
ANR	2217871	Condition	* s == ']'	112:7:1870:1878	2217558	0	True				
ANR	2217872	EqualityExpression	* s == ']'		2217558	0		==			
ANR	2217873	UnaryOperationExpression	* s		2217558	0					
ANR	2217874	UnaryOperator	*		2217558	0					
ANR	2217875	Identifier	s		2217558	1					
ANR	2217876	PrimaryExpression	']'		2217558	1					
ANR	2217877	CompoundStatement		71:18:1197:1197	2217558	1					
ANR	2217878	ExpressionStatement	isarr = false	113:4:1887:1900	2217558	0	True				
ANR	2217879	AssignmentExpression	isarr = false		2217558	0		=			
ANR	2217880	Identifier	isarr		2217558	0					
ANR	2217881	Identifier	false		2217558	1					
ANR	2217882	ExpressionStatement	indent --	115:3:1910:1918	2217558	13	True				
ANR	2217883	PostIncDecOperationExpression	indent --		2217558	0					
ANR	2217884	Identifier	indent		2217558	0					
ANR	2217885	IncDec	--		2217558	1					
ANR	2217886	BreakStatement	break ;	116:3:1923:1928	2217558	14	True				
ANR	2217887	IdentifierDeclStatement	int i ;	119:1:1938:1943	2217558	16	True				
ANR	2217888	IdentifierDecl	i		2217558	0					
ANR	2217889	IdentifierDeclType	int		2217558	0					
ANR	2217890	Identifier	i		2217558	1					
ANR	2217891	IdentifierDeclStatement	ut64 opos = 0 ;	120:1:1946:1959	2217558	17	True				
ANR	2217892	IdentifierDecl	opos = 0		2217558	0					
ANR	2217893	IdentifierDeclType	ut64		2217558	0					
ANR	2217894	Identifier	opos		2217558	1					
ANR	2217895	AssignmentExpression	opos = 0		2217558	2		=			
ANR	2217896	Identifier	opos		2217558	0					
ANR	2217897	PrimaryExpression	0		2217558	1					
ANR	2217898	ForStatement	for ( i = 0 ; i < DSZ && i < indent ; i ++ )		2217558	18					
ANR	2217899	ForInit	i = 0 ;	121:6:1967:1972	2217558	0	True				
ANR	2217900	AssignmentExpression	i = 0		2217558	0		=			
ANR	2217901	Identifier	i		2217558	0					
ANR	2217902	PrimaryExpression	0		2217558	1					
ANR	2217903	Condition	i < DSZ && i < indent	121:13:1974:1994	2217558	1	True				
ANR	2217904	AndExpression	i < DSZ && i < indent		2217558	0		&&			
ANR	2217905	RelationalExpression	i < DSZ		2217558	0		<			
ANR	2217906	Identifier	i		2217558	0					
ANR	2217907	Identifier	DSZ		2217558	1					
ANR	2217908	RelationalExpression	i < indent		2217558	1		<			
ANR	2217909	Identifier	i		2217558	0					
ANR	2217910	Identifier	indent		2217558	1					
ANR	2217911	PostIncDecOperationExpression	i ++	121:36:1997:1999	2217558	2	True				
ANR	2217912	Identifier	i		2217558	0					
ANR	2217913	IncDec	++		2217558	1					
ANR	2217914	CompoundStatement		80:41:1318:1318	2217558	3					
ANR	2217915	IfStatement	if ( ( int ) ( size_t ) words [ i ] < DSZ )		2217558	0					
ANR	2217916	Condition	( int ) ( size_t ) words [ i ] < DSZ	122:6:2010:2036	2217558	0	True				
ANR	2217917	RelationalExpression	( int ) ( size_t ) words [ i ] < DSZ		2217558	0		<			
ANR	2217918	CastExpression	( int ) ( size_t ) words [ i ]		2217558	0					
ANR	2217919	CastTarget	int		2217558	0					
ANR	2217920	CastExpression	( size_t ) words [ i ]		2217558	1					
ANR	2217921	CastTarget	size_t		2217558	0					
ANR	2217922	ArrayIndexing	words [ i ]		2217558	1					
ANR	2217923	Identifier	words		2217558	0					
ANR	2217924	Identifier	i		2217558	1					
ANR	2217925	Identifier	DSZ		2217558	1					
ANR	2217926	CompoundStatement		82:3:1360:1381	2217558	1					
ANR	2217927	IdentifierDeclStatement	ut64 cur = lengths [ i ] ;	123:3:2044:2065	2217558	0	True				
ANR	2217928	IdentifierDecl	cur = lengths [ i ]		2217558	0					
ANR	2217929	IdentifierDeclType	ut64		2217558	0					
ANR	2217930	Identifier	cur		2217558	1					
ANR	2217931	AssignmentExpression	cur = lengths [ i ]		2217558	2		=			
ANR	2217932	Identifier	cur		2217558	0					
ANR	2217933	ArrayIndexing	lengths [ i ]		2217558	1					
ANR	2217934	Identifier	lengths		2217558	0					
ANR	2217935	Identifier	i		2217558	1					
ANR	2217936	IfStatement	if ( cur < opos )		2217558	1					
ANR	2217937	Condition	cur < opos	124:7:2074:2083	2217558	0	True				
ANR	2217938	RelationalExpression	cur < opos		2217558	0		<			
ANR	2217939	Identifier	cur		2217558	0					
ANR	2217940	Identifier	opos		2217558	1					
ANR	2217941	CompoundStatement		83:19:1402:1402	2217558	1					
ANR	2217942	ContinueStatement	continue ;	125:4:2092:2100	2217558	0	True				
ANR	2217943	ExpressionStatement	opos = cur	127:3:2110:2120	2217558	2	True				
ANR	2217944	AssignmentExpression	opos = cur		2217558	0		=			
ANR	2217945	Identifier	opos		2217558	0					
ANR	2217946	Identifier	cur		2217558	1					
ANR	2217947	IfStatement	if ( cur > pos )		2217558	3					
ANR	2217948	Condition	cur > pos	128:7:2129:2137	2217558	0	True				
ANR	2217949	RelationalExpression	cur > pos		2217558	0		>			
ANR	2217950	Identifier	cur		2217558	0					
ANR	2217951	Identifier	pos		2217558	1					
ANR	2217952	CompoundStatement		87:18:1456:1456	2217558	1					
ANR	2217953	BreakStatement	break ;	129:4:2146:2151	2217558	0	True				
ANR	2217954	Statement	eprintf	131:3:2161:2167	2217558	4	True				
ANR	2217955	Statement	(	131:11:2169:2169	2217558	5	True				
ANR	2217956	Statement	"""0x%08"""	131:12:2170:2176	2217558	6	True				
ANR	2217957	Statement	PFMT64x	131:19:2177:2183	2217558	7	True				
ANR	2217958	Statement	"""  %d  [%d]\\n"""	131:26:2184:2197	2217558	8	True				
ANR	2217959	Statement	","	131:40:2198:2198	2217558	9	True				
ANR	2217960	Statement	cur	131:42:2200:2202	2217558	10	True				
ANR	2217961	Statement	","	131:45:2203:2203	2217558	11	True				
ANR	2217962	Statement	i	131:47:2205:2205	2217558	12	True				
ANR	2217963	Statement	","	131:48:2206:2206	2217558	13	True				
ANR	2217964	Statement	indexs	131:50:2208:2213	2217558	14	True				
ANR	2217965	Statement	[	131:56:2214:2214	2217558	15	True				
ANR	2217966	Statement	i	131:57:2215:2215	2217558	16	True				
ANR	2217967	Statement	]	131:58:2216:2216	2217558	17	True				
ANR	2217968	Statement	)	131:59:2217:2217	2217558	18	True				
ANR	2217969	ExpressionStatement		131:60:2218:2218	2217558	19	True				
ANR	2217970	ElseStatement	else		2217558	0					
ANR	2217971	CompoundStatement		101:3:1722:1747	2217558	0					
ANR	2217972	IdentifierDeclStatement	"char * a = r_str_ndup ( words [ i ] , lengths [ i ] ) ;"	133:3:2234:2277	2217558	0	True				
ANR	2217973	IdentifierDecl	"* a = r_str_ndup ( words [ i ] , lengths [ i ] )"		2217558	0					
ANR	2217974	IdentifierDeclType	char *		2217558	0					
ANR	2217975	Identifier	a		2217558	1					
ANR	2217976	AssignmentExpression	"* a = r_str_ndup ( words [ i ] , lengths [ i ] )"		2217558	2		=			
ANR	2217977	Identifier	a		2217558	0					
ANR	2217978	CallExpression	"r_str_ndup ( words [ i ] , lengths [ i ] )"		2217558	1					
ANR	2217979	Callee	r_str_ndup		2217558	0					
ANR	2217980	Identifier	r_str_ndup		2217558	0					
ANR	2217981	ArgumentList	words [ i ]		2217558	1					
ANR	2217982	Argument	words [ i ]		2217558	0					
ANR	2217983	ArrayIndexing	words [ i ]		2217558	0					
ANR	2217984	Identifier	words		2217558	0					
ANR	2217985	Identifier	i		2217558	1					
ANR	2217986	Argument	lengths [ i ]		2217558	1					
ANR	2217987	ArrayIndexing	lengths [ i ]		2217558	0					
ANR	2217988	Identifier	lengths		2217558	0					
ANR	2217989	Identifier	i		2217558	1					
ANR	2217990	IdentifierDeclStatement	ut64 cur = words [ i ] - os - 1 ;	134:3:2282:2310	2217558	1	True				
ANR	2217991	IdentifierDecl	cur = words [ i ] - os - 1		2217558	0					
ANR	2217992	IdentifierDeclType	ut64		2217558	0					
ANR	2217993	Identifier	cur		2217558	1					
ANR	2217994	AssignmentExpression	cur = words [ i ] - os - 1		2217558	2		=			
ANR	2217995	Identifier	cur		2217558	0					
ANR	2217996	AdditiveExpression	words [ i ] - os - 1		2217558	1		-			
ANR	2217997	ArrayIndexing	words [ i ]		2217558	0					
ANR	2217998	Identifier	words		2217558	0					
ANR	2217999	Identifier	i		2217558	1					
ANR	2218000	AdditiveExpression	os - 1		2217558	1		-			
ANR	2218001	Identifier	os		2217558	0					
ANR	2218002	PrimaryExpression	1		2217558	1					
ANR	2218003	IfStatement	if ( cur < opos )		2217558	2					
ANR	2218004	Condition	cur < opos	135:7:2319:2328	2217558	0	True				
ANR	2218005	RelationalExpression	cur < opos		2217558	0		<			
ANR	2218006	Identifier	cur		2217558	0					
ANR	2218007	Identifier	opos		2217558	1					
ANR	2218008	CompoundStatement		94:19:1647:1647	2217558	1					
ANR	2218009	ContinueStatement	continue ;	136:4:2337:2345	2217558	0	True				
ANR	2218010	ExpressionStatement	opos = cur	138:3:2355:2365	2217558	3	True				
ANR	2218011	AssignmentExpression	opos = cur		2217558	0		=			
ANR	2218012	Identifier	opos		2217558	0					
ANR	2218013	Identifier	cur		2217558	1					
ANR	2218014	IfStatement	if ( cur > pos )		2217558	4					
ANR	2218015	Condition	cur > pos	139:7:2374:2382	2217558	0	True				
ANR	2218016	RelationalExpression	cur > pos		2217558	0		>			
ANR	2218017	Identifier	cur		2217558	0					
ANR	2218018	Identifier	pos		2217558	1					
ANR	2218019	CompoundStatement		98:18:1701:1701	2217558	1					
ANR	2218020	BreakStatement	break ;	140:4:2391:2396	2217558	0	True				
ANR	2218021	IdentifierDeclStatement	"char * q = strchr ( a , '""' ) ;"	142:3:2406:2431	2217558	5	True				
ANR	2218022	IdentifierDecl	"* q = strchr ( a , '""' )"		2217558	0					
ANR	2218023	IdentifierDeclType	char *		2217558	0					
ANR	2218024	Identifier	q		2217558	1					
ANR	2218025	AssignmentExpression	"* q = strchr ( a , '""' )"		2217558	2		=			
ANR	2218026	Identifier	q		2217558	0					
ANR	2218027	CallExpression	"strchr ( a , '""' )"		2217558	1					
ANR	2218028	Callee	strchr		2217558	0					
ANR	2218029	Identifier	strchr		2217558	0					
ANR	2218030	ArgumentList	a		2217558	1					
ANR	2218031	Argument	a		2217558	0					
ANR	2218032	Identifier	a		2217558	0					
ANR	2218033	Argument	"'""'"		2217558	1					
ANR	2218034	PrimaryExpression	"'""'"		2217558	0					
ANR	2218035	IfStatement	if ( q )		2217558	6					
ANR	2218036	Condition	q	143:7:2440:2440	2217558	0	True				
ANR	2218037	Identifier	q		2217558	0					
ANR	2218038	CompoundStatement		102:10:1759:1759	2217558	1					
ANR	2218039	ExpressionStatement	* q = 0	144:4:2449:2455	2217558	0	True				
ANR	2218040	AssignmentExpression	* q = 0		2217558	0		=			
ANR	2218041	UnaryOperationExpression	* q		2217558	0					
ANR	2218042	UnaryOperator	*		2217558	0					
ANR	2218043	Identifier	q		2217558	1					
ANR	2218044	PrimaryExpression	0		2217558	1					
ANR	2218045	Statement	eprintf	146:3:2465:2471	2217558	7	True				
ANR	2218046	Statement	(	146:11:2473:2473	2217558	8	True				
ANR	2218047	Statement	"""0x%08"""	146:12:2474:2480	2217558	9	True				
ANR	2218048	Statement	PFMT64x	146:19:2481:2487	2217558	10	True				
ANR	2218049	Statement	"""  %d  %s\\n"""	146:26:2488:2499	2217558	11	True				
ANR	2218050	Statement	","	146:38:2500:2500	2217558	12	True				
ANR	2218051	Statement	cur	146:40:2502:2504	2217558	13	True				
ANR	2218052	Statement	","	146:43:2505:2505	2217558	14	True				
ANR	2218053	Statement	i	146:45:2507:2507	2217558	15	True				
ANR	2218054	Statement	","	146:46:2508:2508	2217558	16	True				
ANR	2218055	Statement	a	146:48:2510:2510	2217558	17	True				
ANR	2218056	Statement	)	146:49:2511:2511	2217558	18	True				
ANR	2218057	ExpressionStatement		146:50:2512:2512	2217558	19	True				
ANR	2218058	ExpressionStatement	free ( a )	147:3:2517:2525	2217558	20	True				
ANR	2218059	CallExpression	free ( a )		2217558	0					
ANR	2218060	Callee	free		2217558	0					
ANR	2218061	Identifier	free		2217558	0					
ANR	2218062	ArgumentList	a		2217558	1					
ANR	2218063	Argument	a		2217558	0					
ANR	2218064	Identifier	a		2217558	0					
ANR	2218065	ReturnStatement	return NULL ;	151:1:2561:2572	2217558	19	True				
ANR	2218066	Identifier	NULL		2217558	0					
ANR	2218067	ReturnType	R_API char *		2217558	1					
ANR	2218068	Identifier	r_print_json_path		2217558	2					
ANR	2218069	ParameterList	"const char * s , int pos"		2217558	3					
ANR	2218070	Parameter	const char * s	42:30:659:671	2217558	0	True				
ANR	2218071	ParameterType	const char *		2217558	0					
ANR	2218072	Identifier	s		2217558	1					
ANR	2218073	Parameter	int pos	42:45:674:680	2217558	1	True				
ANR	2218074	ParameterType	int		2217558	0					
ANR	2218075	Identifier	pos		2217558	1					
ANR	2218076	CFGEntryNode	ENTRY		2217558		True				
ANR	2218077	CFGExitNode	EXIT		2217558		True				
ANR	2218078	Symbol	* indent		2217558						
ANR	2218079	Symbol	cur		2217558						
ANR	2218080	Symbol	indent		2217558						
ANR	2218081	Symbol	r_str_ndup		2217558						
ANR	2218082	Symbol	indexs		2217558						
ANR	2218083	Symbol	strchr		2217558						
ANR	2218084	Symbol	isarr		2217558						
ANR	2218085	Symbol	* lengths		2217558						
ANR	2218086	Symbol	arrpos		2217558						
ANR	2218087	Symbol	strlen		2217558						
ANR	2218088	Symbol	* words		2217558						
ANR	2218089	Symbol	pos		2217558						
ANR	2218090	Symbol	instr		2217558						
ANR	2218091	Symbol	osz		2217558						
ANR	2218092	Symbol	str_a		2217558						
ANR	2218093	Symbol	a		2217558						
ANR	2218094	Symbol	NULL		2217558						
ANR	2218095	Symbol	os		2217558						
ANR	2218096	Symbol	words		2217558						
ANR	2218097	Symbol	false		2217558						
ANR	2218098	Symbol	i		2217558						
ANR	2218099	Symbol	DSZ		2217558						
ANR	2218100	Symbol	opos		2217558						
ANR	2218101	Symbol	q		2217558						
ANR	2218102	Symbol	s		2217558						
ANR	2218103	Symbol	* i		2217558						
ANR	2218104	Symbol	lengths		2217558						
ANR	2218105	Symbol	* indexs		2217558						
ANR	2218106	Symbol	true		2217558						
ANR	2218107	Symbol	* q		2217558						
ANR	2218108	Symbol	* s		2217558						
ANR	2218109	Function	r_print_json_human	154:0:2577:4310							
ANR	2218110	FunctionDef	r_print_json_human (const char * s)		2218109	0					
ANR	2218111	CompoundStatement		154:46:2623:4310	2218109	0					
ANR	2218112	IdentifierDeclStatement	int indent = 0 ;	155:1:2626:2640	2218109	0	True				
ANR	2218113	IdentifierDecl	indent = 0		2218109	0					
ANR	2218114	IdentifierDeclType	int		2218109	0					
ANR	2218115	Identifier	indent		2218109	1					
ANR	2218116	AssignmentExpression	indent = 0		2218109	2		=			
ANR	2218117	Identifier	indent		2218109	0					
ANR	2218118	PrimaryExpression	0		2218109	1					
ANR	2218119	IdentifierDeclStatement	"const char * tab = ""  "" ;"	156:1:2643:2665	2218109	1	True				
ANR	2218120	IdentifierDecl	"* tab = ""  """		2218109	0					
ANR	2218121	IdentifierDeclType	const char *		2218109	0					
ANR	2218122	Identifier	tab		2218109	1					
ANR	2218123	AssignmentExpression	"* tab = ""  """		2218109	2		=			
ANR	2218124	Identifier	tab		2218109	0					
ANR	2218125	PrimaryExpression	"""  """		2218109	1					
ANR	2218126	IdentifierDeclStatement	const int indentSize = strlen ( tab ) ;	157:1:2668:2703	2218109	2	True				
ANR	2218127	IdentifierDecl	indentSize = strlen ( tab )		2218109	0					
ANR	2218128	IdentifierDeclType	const int		2218109	0					
ANR	2218129	Identifier	indentSize		2218109	1					
ANR	2218130	AssignmentExpression	indentSize = strlen ( tab )		2218109	2		=			
ANR	2218131	Identifier	indentSize		2218109	0					
ANR	2218132	CallExpression	strlen ( tab )		2218109	1					
ANR	2218133	Callee	strlen		2218109	0					
ANR	2218134	Identifier	strlen		2218109	0					
ANR	2218135	ArgumentList	tab		2218109	1					
ANR	2218136	Argument	tab		2218109	0					
ANR	2218137	Identifier	tab		2218109	0					
ANR	2218138	IdentifierDeclStatement	int instr = 0 ;	158:1:2706:2719	2218109	3	True				
ANR	2218139	IdentifierDecl	instr = 0		2218109	0					
ANR	2218140	IdentifierDeclType	int		2218109	0					
ANR	2218141	Identifier	instr		2218109	1					
ANR	2218142	AssignmentExpression	instr = 0		2218109	2		=			
ANR	2218143	Identifier	instr		2218109	0					
ANR	2218144	PrimaryExpression	0		2218109	1					
ANR	2218145	IdentifierDeclStatement	bool isValue = false ;	159:1:2722:2742	2218109	4	True				
ANR	2218146	IdentifierDecl	isValue = false		2218109	0					
ANR	2218147	IdentifierDeclType	bool		2218109	0					
ANR	2218148	Identifier	isValue		2218109	1					
ANR	2218149	AssignmentExpression	isValue = false		2218109	2		=			
ANR	2218150	Identifier	false		2218109	0					
ANR	2218151	Identifier	false		2218109	1					
ANR	2218152	IdentifierDeclStatement	"char * o , * OE , * tmp ;"	160:1:2745:2763	2218109	5	True				
ANR	2218153	IdentifierDecl	* o		2218109	0					
ANR	2218154	IdentifierDeclType	char *		2218109	0					
ANR	2218155	Identifier	o		2218109	1					
ANR	2218156	IdentifierDecl	* OE		2218109	1					
ANR	2218157	IdentifierDeclType	char *		2218109	0					
ANR	2218158	Identifier	OE		2218109	1					
ANR	2218159	IdentifierDecl	* tmp		2218109	2					
ANR	2218160	IdentifierDeclType	char *		2218109	0					
ANR	2218161	Identifier	tmp		2218109	1					
ANR	2218162	IfStatement	if ( ! s )		2218109	6					
ANR	2218163	Condition	! s	161:5:2770:2771	2218109	0	True				
ANR	2218164	UnaryOperationExpression	! s		2218109	0					
ANR	2218165	UnaryOperator	!		2218109	0					
ANR	2218166	Identifier	s		2218109	1					
ANR	2218167	CompoundStatement		8:9:150:150	2218109	1					
ANR	2218168	ReturnStatement	return NULL ;	162:2:2778:2789	2218109	0	True				
ANR	2218169	Identifier	NULL		2218109	0					
ANR	2218170	IdentifierDeclStatement	int osz = ( 1 + strlen ( s ) ) * 20 ;	164:1:2795:2826	2218109	7	True				
ANR	2218171	IdentifierDecl	osz = ( 1 + strlen ( s ) ) * 20		2218109	0					
ANR	2218172	IdentifierDeclType	int		2218109	0					
ANR	2218173	Identifier	osz		2218109	1					
ANR	2218174	AssignmentExpression	osz = ( 1 + strlen ( s ) ) * 20		2218109	2		=			
ANR	2218175	Identifier	osz		2218109	0					
ANR	2218176	MultiplicativeExpression	( 1 + strlen ( s ) ) * 20		2218109	1		*			
ANR	2218177	AdditiveExpression	1 + strlen ( s )		2218109	0		+			
ANR	2218178	PrimaryExpression	1		2218109	0					
ANR	2218179	CallExpression	strlen ( s )		2218109	1					
ANR	2218180	Callee	strlen		2218109	0					
ANR	2218181	Identifier	strlen		2218109	0					
ANR	2218182	ArgumentList	s		2218109	1					
ANR	2218183	Argument	s		2218109	0					
ANR	2218184	Identifier	s		2218109	0					
ANR	2218185	PrimaryExpression	20		2218109	1					
ANR	2218186	IfStatement	if ( osz < 1 )		2218109	8					
ANR	2218187	Condition	osz < 1	165:5:2833:2839	2218109	0	True				
ANR	2218188	RelationalExpression	osz < 1		2218109	0		<			
ANR	2218189	Identifier	osz		2218109	0					
ANR	2218190	PrimaryExpression	1		2218109	1					
ANR	2218191	CompoundStatement		12:14:218:218	2218109	1					
ANR	2218192	ReturnStatement	return NULL ;	166:2:2846:2857	2218109	0	True				
ANR	2218193	Identifier	NULL		2218109	0					
ANR	2218194	IdentifierDeclStatement	char * O = malloc ( osz ) ;	169:1:2864:2886	2218109	9	True				
ANR	2218195	IdentifierDecl	* O = malloc ( osz )		2218109	0					
ANR	2218196	IdentifierDeclType	char *		2218109	0					
ANR	2218197	Identifier	O		2218109	1					
ANR	2218198	AssignmentExpression	* O = malloc ( osz )		2218109	2		=			
ANR	2218199	Identifier	O		2218109	0					
ANR	2218200	CallExpression	malloc ( osz )		2218109	1					
ANR	2218201	Callee	malloc		2218109	0					
ANR	2218202	Identifier	malloc		2218109	0					
ANR	2218203	ArgumentList	osz		2218109	1					
ANR	2218204	Argument	osz		2218109	0					
ANR	2218205	Identifier	osz		2218109	0					
ANR	2218206	IfStatement	if ( ! O )		2218109	10					
ANR	2218207	Condition	! O	170:5:2893:2894	2218109	0	True				
ANR	2218208	UnaryOperationExpression	! O		2218109	0					
ANR	2218209	UnaryOperator	!		2218109	0					
ANR	2218210	Identifier	O		2218109	1					
ANR	2218211	CompoundStatement		17:9:273:273	2218109	1					
ANR	2218212	ReturnStatement	return NULL ;	171:2:2901:2912	2218109	0	True				
ANR	2218213	Identifier	NULL		2218109	0					
ANR	2218214	ExpressionStatement	OE = O + osz	173:1:2918:2930	2218109	11	True				
ANR	2218215	AssignmentExpression	OE = O + osz		2218109	0		=			
ANR	2218216	Identifier	OE		2218109	0					
ANR	2218217	AdditiveExpression	O + osz		2218109	1		+			
ANR	2218218	Identifier	O		2218109	0					
ANR	2218219	Identifier	osz		2218109	1					
ANR	2218220	ForStatement	for ( o = O ; * s ; s ++ )		2218109	12					
ANR	2218221	ForInit	o = O ;	174:6:2938:2943	2218109	0	True				
ANR	2218222	AssignmentExpression	o = O		2218109	0		=			
ANR	2218223	Identifier	o		2218109	0					
ANR	2218224	Identifier	O		2218109	1					
ANR	2218225	Condition	* s	174:13:2945:2946	2218109	1	True				
ANR	2218226	UnaryOperationExpression	* s		2218109	0					
ANR	2218227	UnaryOperator	*		2218109	0					
ANR	2218228	Identifier	s		2218109	1					
ANR	2218229	PostIncDecOperationExpression	s ++	174:17:2949:2951	2218109	2	True				
ANR	2218230	Identifier	s		2218109	0					
ANR	2218231	IncDec	++		2218109	1					
ANR	2218232	CompoundStatement		21:22:330:330	2218109	3					
ANR	2218233	IfStatement	if ( o + ( indent * indentSize ) + 10 > OE )		2218109	0					
ANR	2218234	Condition	o + ( indent * indentSize ) + 10 > OE	175:6:2962:2996	2218109	0	True				
ANR	2218235	RelationalExpression	o + ( indent * indentSize ) + 10 > OE		2218109	0		>			
ANR	2218236	AdditiveExpression	o + ( indent * indentSize ) + 10		2218109	0		+			
ANR	2218237	Identifier	o		2218109	0					
ANR	2218238	AdditiveExpression	( indent * indentSize ) + 10		2218109	1		+			
ANR	2218239	MultiplicativeExpression	indent * indentSize		2218109	0		*			
ANR	2218240	Identifier	indent		2218109	0					
ANR	2218241	Identifier	indentSize		2218109	1					
ANR	2218242	PrimaryExpression	10		2218109	1					
ANR	2218243	Identifier	OE		2218109	1					
ANR	2218244	CompoundStatement		23:3:380:397	2218109	1					
ANR	2218245	IdentifierDeclStatement	int delta = o - O ;	176:3:3004:3021	2218109	0	True				
ANR	2218246	IdentifierDecl	delta = o - O		2218109	0					
ANR	2218247	IdentifierDeclType	int		2218109	0					
ANR	2218248	Identifier	delta		2218109	1					
ANR	2218249	AssignmentExpression	delta = o - O		2218109	2		=			
ANR	2218250	Identifier	delta		2218109	0					
ANR	2218251	AdditiveExpression	o - O		2218109	1		-			
ANR	2218252	Identifier	o		2218109	0					
ANR	2218253	Identifier	O		2218109	1					
ANR	2218254	ExpressionStatement	osz += 0x1000 + ( indent * indentSize )	177:3:3026:3063	2218109	1	True				
ANR	2218255	AssignmentExpression	osz += 0x1000 + ( indent * indentSize )		2218109	0		+=			
ANR	2218256	Identifier	osz		2218109	0					
ANR	2218257	AdditiveExpression	0x1000 + ( indent * indentSize )		2218109	1		+			
ANR	2218258	PrimaryExpression	0x1000		2218109	0					
ANR	2218259	MultiplicativeExpression	indent * indentSize		2218109	1		*			
ANR	2218260	Identifier	indent		2218109	0					
ANR	2218261	Identifier	indentSize		2218109	1					
ANR	2218262	IfStatement	if ( osz < 1 )		2218109	2					
ANR	2218263	Condition	osz < 1	178:7:3072:3078	2218109	0	True				
ANR	2218264	RelationalExpression	osz < 1		2218109	0		<			
ANR	2218265	Identifier	osz		2218109	0					
ANR	2218266	PrimaryExpression	1		2218109	1					
ANR	2218267	CompoundStatement		25:16:457:457	2218109	1					
ANR	2218268	ExpressionStatement	free ( O )	179:4:3087:3095	2218109	0	True				
ANR	2218269	CallExpression	free ( O )		2218109	0					
ANR	2218270	Callee	free		2218109	0					
ANR	2218271	Identifier	free		2218109	0					
ANR	2218272	ArgumentList	O		2218109	1					
ANR	2218273	Argument	O		2218109	0					
ANR	2218274	Identifier	O		2218109	0					
ANR	2218275	ReturnStatement	return NULL ;	180:4:3101:3112	2218109	1	True				
ANR	2218276	Identifier	NULL		2218109	0					
ANR	2218277	ExpressionStatement	"tmp = realloc ( O , osz )"	182:3:3122:3144	2218109	3	True				
ANR	2218278	AssignmentExpression	"tmp = realloc ( O , osz )"		2218109	0		=			
ANR	2218279	Identifier	tmp		2218109	0					
ANR	2218280	CallExpression	"realloc ( O , osz )"		2218109	1					
ANR	2218281	Callee	realloc		2218109	0					
ANR	2218282	Identifier	realloc		2218109	0					
ANR	2218283	ArgumentList	O		2218109	1					
ANR	2218284	Argument	O		2218109	0					
ANR	2218285	Identifier	O		2218109	0					
ANR	2218286	Argument	osz		2218109	1					
ANR	2218287	Identifier	osz		2218109	0					
ANR	2218288	IfStatement	if ( ! tmp )		2218109	4					
ANR	2218289	Condition	! tmp	183:7:3153:3156	2218109	0	True				
ANR	2218290	UnaryOperationExpression	! tmp		2218109	0					
ANR	2218291	UnaryOperator	!		2218109	0					
ANR	2218292	Identifier	tmp		2218109	1					
ANR	2218293	CompoundStatement		30:13:535:535	2218109	1					
ANR	2218294	ExpressionStatement	free ( O )	184:4:3165:3173	2218109	0	True				
ANR	2218295	CallExpression	free ( O )		2218109	0					
ANR	2218296	Callee	free		2218109	0					
ANR	2218297	Identifier	free		2218109	0					
ANR	2218298	ArgumentList	O		2218109	1					
ANR	2218299	Argument	O		2218109	0					
ANR	2218300	Identifier	O		2218109	0					
ANR	2218301	ReturnStatement	return NULL ;	185:4:3179:3190	2218109	1	True				
ANR	2218302	Identifier	NULL		2218109	0					
ANR	2218303	ExpressionStatement	O = tmp	187:3:3200:3207	2218109	5	True				
ANR	2218304	AssignmentExpression	O = tmp		2218109	0		=			
ANR	2218305	Identifier	O		2218109	0					
ANR	2218306	Identifier	tmp		2218109	1					
ANR	2218307	ExpressionStatement	OE = tmp + osz	188:3:3212:3226	2218109	6	True				
ANR	2218308	AssignmentExpression	OE = tmp + osz		2218109	0		=			
ANR	2218309	Identifier	OE		2218109	0					
ANR	2218310	AdditiveExpression	tmp + osz		2218109	1		+			
ANR	2218311	Identifier	tmp		2218109	0					
ANR	2218312	Identifier	osz		2218109	1					
ANR	2218313	ExpressionStatement	o = O + delta	189:3:3231:3244	2218109	7	True				
ANR	2218314	AssignmentExpression	o = O + delta		2218109	0		=			
ANR	2218315	Identifier	o		2218109	0					
ANR	2218316	AdditiveExpression	O + delta		2218109	1		+			
ANR	2218317	Identifier	O		2218109	0					
ANR	2218318	Identifier	delta		2218109	1					
ANR	2218319	IfStatement	if ( instr )		2218109	1					
ANR	2218320	Condition	instr	191:6:3256:3260	2218109	0	True				
ANR	2218321	Identifier	instr		2218109	0					
ANR	2218322	CompoundStatement		38:13:639:639	2218109	1					
ANR	2218323	IfStatement	"if ( s [ 0 ] == '""' )"		2218109	0					
ANR	2218324	Condition	"s [ 0 ] == '""'"	192:7:3272:3282	2218109	0	True				
ANR	2218325	EqualityExpression	"s [ 0 ] == '""'"		2218109	0		==			
ANR	2218326	ArrayIndexing	s [ 0 ]		2218109	0					
ANR	2218327	Identifier	s		2218109	0					
ANR	2218328	PrimaryExpression	0		2218109	1					
ANR	2218329	PrimaryExpression	"'""'"		2218109	1					
ANR	2218330	CompoundStatement		39:20:661:661	2218109	1					
ANR	2218331	ExpressionStatement	instr = 0	193:4:3291:3300	2218109	0	True				
ANR	2218332	AssignmentExpression	instr = 0		2218109	0		=			
ANR	2218333	Identifier	instr		2218109	0					
ANR	2218334	PrimaryExpression	0		2218109	1					
ANR	2218335	ElseStatement	else		2218109	0					
ANR	2218336	IfStatement	"if ( s [ 0 ] == '\\\\' && s [ 1 ] == '""' )"		2218109	0					
ANR	2218337	Condition	"s [ 0 ] == '\\\\' && s [ 1 ] == '""'"	194:14:3316:3342	2218109	0	True				
ANR	2218338	AndExpression	"s [ 0 ] == '\\\\' && s [ 1 ] == '""'"		2218109	0		&&			
ANR	2218339	EqualityExpression	s [ 0 ] == '\\\\'		2218109	0		==			
ANR	2218340	ArrayIndexing	s [ 0 ]		2218109	0					
ANR	2218341	Identifier	s		2218109	0					
ANR	2218342	PrimaryExpression	0		2218109	1					
ANR	2218343	PrimaryExpression	'\\\\'		2218109	1					
ANR	2218344	EqualityExpression	"s [ 1 ] == '""'"		2218109	1		==			
ANR	2218345	ArrayIndexing	s [ 1 ]		2218109	0					
ANR	2218346	Identifier	s		2218109	0					
ANR	2218347	PrimaryExpression	1		2218109	1					
ANR	2218348	PrimaryExpression	"'""'"		2218109	1					
ANR	2218349	CompoundStatement		41:43:721:721	2218109	1					
ANR	2218350	ExpressionStatement	* o ++ = * s ++	196:4:3374:3385	2218109	0	True				
ANR	2218351	AssignmentExpression	* o ++ = * s ++		2218109	0		=			
ANR	2218352	UnaryOperationExpression	* o ++		2218109	0					
ANR	2218353	UnaryOperator	*		2218109	0					
ANR	2218354	PostIncDecOperationExpression	o ++		2218109	1					
ANR	2218355	Identifier	o		2218109	0					
ANR	2218356	IncDec	++		2218109	1					
ANR	2218357	UnaryOperationExpression	* s ++		2218109	1					
ANR	2218358	UnaryOperator	*		2218109	0					
ANR	2218359	PostIncDecOperationExpression	s ++		2218109	1					
ANR	2218360	Identifier	s		2218109	0					
ANR	2218361	IncDec	++		2218109	1					
ANR	2218362	IfStatement	"if ( * s != '""' )"		2218109	1					
ANR	2218363	Condition	"* s != '""'"	198:7:3399:3407	2218109	0	True				
ANR	2218364	EqualityExpression	"* s != '""'"		2218109	0		!=			
ANR	2218365	UnaryOperationExpression	* s		2218109	0					
ANR	2218366	UnaryOperator	*		2218109	0					
ANR	2218367	Identifier	s		2218109	1					
ANR	2218368	PrimaryExpression	"'""'"		2218109	1					
ANR	2218369	CompoundStatement		45:18:786:786	2218109	1					
ANR	2218370	ExpressionStatement	* o ++ = * s	199:4:3416:3425	2218109	0	True				
ANR	2218371	AssignmentExpression	* o ++ = * s		2218109	0		=			
ANR	2218372	UnaryOperationExpression	* o ++		2218109	0					
ANR	2218373	UnaryOperator	*		2218109	0					
ANR	2218374	PostIncDecOperationExpression	o ++		2218109	1					
ANR	2218375	Identifier	o		2218109	0					
ANR	2218376	IncDec	++		2218109	1					
ANR	2218377	UnaryOperationExpression	* s		2218109	1					
ANR	2218378	UnaryOperator	*		2218109	0					
ANR	2218379	Identifier	s		2218109	1					
ANR	2218380	ContinueStatement	continue ;	201:3:3435:3443	2218109	2	True				
ANR	2218381	IfStatement	if ( indent <= 0 )		2218109	2					
ANR	2218382	Condition	indent <= 0	203:6:3455:3465	2218109	0	True				
ANR	2218383	RelationalExpression	indent <= 0		2218109	0		<=			
ANR	2218384	Identifier	indent		2218109	0					
ANR	2218385	PrimaryExpression	0		2218109	1					
ANR	2218386	CompoundStatement		50:19:844:844	2218109	1					
ANR	2218387	IfStatement	if ( s [ 0 ] != '{' && s [ 0 ] != '[' )		2218109	0					
ANR	2218388	Condition	s [ 0 ] != '{' && s [ 0 ] != '['	205:7:3497:3522	2218109	0	True				
ANR	2218389	AndExpression	s [ 0 ] != '{' && s [ 0 ] != '['		2218109	0		&&			
ANR	2218390	EqualityExpression	s [ 0 ] != '{'		2218109	0		!=			
ANR	2218391	ArrayIndexing	s [ 0 ]		2218109	0					
ANR	2218392	Identifier	s		2218109	0					
ANR	2218393	PrimaryExpression	0		2218109	1					
ANR	2218394	PrimaryExpression	'{'		2218109	1					
ANR	2218395	EqualityExpression	s [ 0 ] != '['		2218109	1		!=			
ANR	2218396	ArrayIndexing	s [ 0 ]		2218109	0					
ANR	2218397	Identifier	s		2218109	0					
ANR	2218398	PrimaryExpression	0		2218109	1					
ANR	2218399	PrimaryExpression	'['		2218109	1					
ANR	2218400	CompoundStatement		52:35:901:901	2218109	1					
ANR	2218401	ExpressionStatement	* o ++ = * s	206:4:3531:3540	2218109	0	True				
ANR	2218402	AssignmentExpression	* o ++ = * s		2218109	0		=			
ANR	2218403	UnaryOperationExpression	* o ++		2218109	0					
ANR	2218404	UnaryOperator	*		2218109	0					
ANR	2218405	PostIncDecOperationExpression	o ++		2218109	1					
ANR	2218406	Identifier	o		2218109	0					
ANR	2218407	IncDec	++		2218109	1					
ANR	2218408	UnaryOperationExpression	* s		2218109	1					
ANR	2218409	UnaryOperator	*		2218109	0					
ANR	2218410	Identifier	s		2218109	1					
ANR	2218411	ContinueStatement	continue ;	207:4:3546:3554	2218109	1	True				
ANR	2218412	IfStatement	"if ( s [ 0 ] == '""' )"		2218109	3					
ANR	2218413	Condition	"s [ 0 ] == '""'"	211:6:3572:3582	2218109	0	True				
ANR	2218414	EqualityExpression	"s [ 0 ] == '""'"		2218109	0		==			
ANR	2218415	ArrayIndexing	s [ 0 ]		2218109	0					
ANR	2218416	Identifier	s		2218109	0					
ANR	2218417	PrimaryExpression	0		2218109	1					
ANR	2218418	PrimaryExpression	"'""'"		2218109	1					
ANR	2218419	CompoundStatement		58:19:961:961	2218109	1					
ANR	2218420	ExpressionStatement	instr = 1	212:3:3590:3599	2218109	0	True				
ANR	2218421	AssignmentExpression	instr = 1		2218109	0		=			
ANR	2218422	Identifier	instr		2218109	0					
ANR	2218423	PrimaryExpression	1		2218109	1					
ANR	2218424	IfStatement	if ( * s == '\\n' || * s == '\\r' || * s == '\\t' || * s == ' ' )		2218109	4					
ANR	2218425	Condition	* s == '\\n' || * s == '\\r' || * s == '\\t' || * s == ' '	214:6:3611:3661	2218109	0	True				
ANR	2218426	OrExpression	* s == '\\n' || * s == '\\r' || * s == '\\t' || * s == ' '		2218109	0		||			
ANR	2218427	EqualityExpression	* s == '\\n'		2218109	0		==			
ANR	2218428	UnaryOperationExpression	* s		2218109	0					
ANR	2218429	UnaryOperator	*		2218109	0					
ANR	2218430	Identifier	s		2218109	1					
ANR	2218431	PrimaryExpression	'\\n'		2218109	1					
ANR	2218432	OrExpression	* s == '\\r' || * s == '\\t' || * s == ' '		2218109	1		||			
ANR	2218433	EqualityExpression	* s == '\\r'		2218109	0		==			
ANR	2218434	UnaryOperationExpression	* s		2218109	0					
ANR	2218435	UnaryOperator	*		2218109	0					
ANR	2218436	Identifier	s		2218109	1					
ANR	2218437	PrimaryExpression	'\\r'		2218109	1					
ANR	2218438	OrExpression	* s == '\\t' || * s == ' '		2218109	1		||			
ANR	2218439	EqualityExpression	* s == '\\t'		2218109	0		==			
ANR	2218440	UnaryOperationExpression	* s		2218109	0					
ANR	2218441	UnaryOperator	*		2218109	0					
ANR	2218442	Identifier	s		2218109	1					
ANR	2218443	PrimaryExpression	'\\t'		2218109	1					
ANR	2218444	EqualityExpression	* s == ' '		2218109	1		==			
ANR	2218445	UnaryOperationExpression	* s		2218109	0					
ANR	2218446	UnaryOperator	*		2218109	0					
ANR	2218447	Identifier	s		2218109	1					
ANR	2218448	PrimaryExpression	' '		2218109	1					
ANR	2218449	CompoundStatement		61:59:1040:1040	2218109	1					
ANR	2218450	ContinueStatement	continue ;	215:3:3669:3677	2218109	0	True				
ANR	2218451	SwitchStatement	switch ( * s )		2218109	5					
ANR	2218452	Condition	* s	217:10:3693:3694	2218109	0	True				
ANR	2218453	UnaryOperationExpression	* s		2218109	0					
ANR	2218454	UnaryOperator	*		2218109	0					
ANR	2218455	Identifier	s		2218109	1					
ANR	2218456	CompoundStatement		64:14:1073:1073	2218109	1					
ANR	2218457	Label	case ':' :	218:2:3701:3709	2218109	0	True				
ANR	2218458	ExpressionStatement	* o ++ = * s	219:3:3714:3723	2218109	1	True				
ANR	2218459	AssignmentExpression	* o ++ = * s		2218109	0		=			
ANR	2218460	UnaryOperationExpression	* o ++		2218109	0					
ANR	2218461	UnaryOperator	*		2218109	0					
ANR	2218462	PostIncDecOperationExpression	o ++		2218109	1					
ANR	2218463	Identifier	o		2218109	0					
ANR	2218464	IncDec	++		2218109	1					
ANR	2218465	UnaryOperationExpression	* s		2218109	1					
ANR	2218466	UnaryOperator	*		2218109	0					
ANR	2218467	Identifier	s		2218109	1					
ANR	2218468	ExpressionStatement	* o ++ = ' '	220:3:3728:3738	2218109	2	True				
ANR	2218469	AssignmentExpression	* o ++ = ' '		2218109	0		=			
ANR	2218470	UnaryOperationExpression	* o ++		2218109	0					
ANR	2218471	UnaryOperator	*		2218109	0					
ANR	2218472	PostIncDecOperationExpression	o ++		2218109	1					
ANR	2218473	Identifier	o		2218109	0					
ANR	2218474	IncDec	++		2218109	1					
ANR	2218475	PrimaryExpression	' '		2218109	1					
ANR	2218476	ExpressionStatement	isValue = true	221:3:3743:3757	2218109	3	True				
ANR	2218477	AssignmentExpression	isValue = true		2218109	0		=			
ANR	2218478	Identifier	isValue		2218109	0					
ANR	2218479	Identifier	true		2218109	1					
ANR	2218480	BreakStatement	break ;	222:3:3762:3767	2218109	4	True				
ANR	2218481	Label	"case ',' :"	223:2:3771:3779	2218109	5	True				
ANR	2218482	ExpressionStatement	* o ++ = '\\n'	224:3:3784:3795	2218109	6	True				
ANR	2218483	AssignmentExpression	* o ++ = '\\n'		2218109	0		=			
ANR	2218484	UnaryOperationExpression	* o ++		2218109	0					
ANR	2218485	UnaryOperator	*		2218109	0					
ANR	2218486	PostIncDecOperationExpression	o ++		2218109	1					
ANR	2218487	Identifier	o		2218109	0					
ANR	2218488	IncDec	++		2218109	1					
ANR	2218489	PrimaryExpression	'\\n'		2218109	1					
ANR	2218490	ExpressionStatement	isValue = false	225:3:3800:3815	2218109	7	True				
ANR	2218491	AssignmentExpression	isValue = false		2218109	0		=			
ANR	2218492	Identifier	isValue		2218109	0					
ANR	2218493	Identifier	false		2218109	1					
ANR	2218494	ExpressionStatement	"doIndent ( indent - 1 , & o , tab )"	226:3:3820:3850	2218109	8	True				
ANR	2218495	CallExpression	"doIndent ( indent - 1 , & o , tab )"		2218109	0					
ANR	2218496	Callee	doIndent		2218109	0					
ANR	2218497	Identifier	doIndent		2218109	0					
ANR	2218498	ArgumentList	indent - 1		2218109	1					
ANR	2218499	Argument	indent - 1		2218109	0					
ANR	2218500	AdditiveExpression	indent - 1		2218109	0		-			
ANR	2218501	Identifier	indent		2218109	0					
ANR	2218502	PrimaryExpression	1		2218109	1					
ANR	2218503	Argument	& o		2218109	1					
ANR	2218504	UnaryOperationExpression	& o		2218109	0					
ANR	2218505	UnaryOperator	&		2218109	0					
ANR	2218506	Identifier	o		2218109	1					
ANR	2218507	Argument	tab		2218109	2					
ANR	2218508	Identifier	tab		2218109	0					
ANR	2218509	BreakStatement	break ;	227:3:3855:3860	2218109	9	True				
ANR	2218510	Label	case '{' :	228:2:3864:3872	2218109	10	True				
ANR	2218511	Label	case '[' :	229:2:3876:3884	2218109	11	True				
ANR	2218512	ExpressionStatement	isValue = false	230:3:3889:3904	2218109	12	True				
ANR	2218513	AssignmentExpression	isValue = false		2218109	0		=			
ANR	2218514	Identifier	isValue		2218109	0					
ANR	2218515	Identifier	false		2218109	1					
ANR	2218516	IfStatement	if ( indent > 0 )		2218109	13					
ANR	2218517	Condition	indent > 0	231:7:3913:3922	2218109	0	True				
ANR	2218518	RelationalExpression	indent > 0		2218109	0		>			
ANR	2218519	Identifier	indent		2218109	0					
ANR	2218520	PrimaryExpression	0		2218109	1					
ANR	2218521	CompoundStatement		78:19:1301:1301	2218109	1					
ANR	2218522	ExpressionStatement	* o ++ = ( indent != - 1 ) ? '\\n' : ' '	232:4:3931:3963	2218109	0	True				
ANR	2218523	AssignmentExpression	* o ++ = ( indent != - 1 ) ? '\\n' : ' '		2218109	0		=			
ANR	2218524	UnaryOperationExpression	* o ++		2218109	0					
ANR	2218525	UnaryOperator	*		2218109	0					
ANR	2218526	PostIncDecOperationExpression	o ++		2218109	1					
ANR	2218527	Identifier	o		2218109	0					
ANR	2218528	IncDec	++		2218109	1					
ANR	2218529	ConditionalExpression	( indent != - 1 ) ? '\\n' : ' '		2218109	1					
ANR	2218530	Condition	indent != - 1		2218109	0					
ANR	2218531	EqualityExpression	indent != - 1		2218109	0		!=			
ANR	2218532	Identifier	indent		2218109	0					
ANR	2218533	UnaryOperationExpression	- 1		2218109	1					
ANR	2218534	UnaryOperator	-		2218109	0					
ANR	2218535	PrimaryExpression	1		2218109	1					
ANR	2218536	PrimaryExpression	'\\n'		2218109	1					
ANR	2218537	PrimaryExpression	' '		2218109	2					
ANR	2218538	IfStatement	if ( indent > 128 )		2218109	14					
ANR	2218539	Condition	indent > 128	234:7:3977:3988	2218109	0	True				
ANR	2218540	RelationalExpression	indent > 128		2218109	0		>			
ANR	2218541	Identifier	indent		2218109	0					
ANR	2218542	PrimaryExpression	128		2218109	1					
ANR	2218543	CompoundStatement		81:21:1367:1367	2218109	1					
ANR	2218544	ExpressionStatement	"eprintf ( ""JSON indentation is too deep\\n"" )"	235:4:3997:4039	2218109	0	True				
ANR	2218545	CallExpression	"eprintf ( ""JSON indentation is too deep\\n"" )"		2218109	0					
ANR	2218546	Callee	eprintf		2218109	0					
ANR	2218547	Identifier	eprintf		2218109	0					
ANR	2218548	ArgumentList	"""JSON indentation is too deep\\n"""		2218109	1					
ANR	2218549	Argument	"""JSON indentation is too deep\\n"""		2218109	0					
ANR	2218550	PrimaryExpression	"""JSON indentation is too deep\\n"""		2218109	0					
ANR	2218551	ExpressionStatement	indent = 0	236:4:4045:4055	2218109	1	True				
ANR	2218552	AssignmentExpression	indent = 0		2218109	0		=			
ANR	2218553	Identifier	indent		2218109	0					
ANR	2218554	PrimaryExpression	0		2218109	1					
ANR	2218555	ElseStatement	else		2218109	0					
ANR	2218556	CompoundStatement		84:10:1443:1443	2218109	0					
ANR	2218557	ExpressionStatement	indent ++	238:4:4073:4081	2218109	0	True				
ANR	2218558	PostIncDecOperationExpression	indent ++		2218109	0					
ANR	2218559	Identifier	indent		2218109	0					
ANR	2218560	IncDec	++		2218109	1					
ANR	2218561	ExpressionStatement	"doIndent ( indent - 1 , & o , tab )"	240:3:4091:4121	2218109	15	True				
ANR	2218562	CallExpression	"doIndent ( indent - 1 , & o , tab )"		2218109	0					
ANR	2218563	Callee	doIndent		2218109	0					
ANR	2218564	Identifier	doIndent		2218109	0					
ANR	2218565	ArgumentList	indent - 1		2218109	1					
ANR	2218566	Argument	indent - 1		2218109	0					
ANR	2218567	AdditiveExpression	indent - 1		2218109	0		-			
ANR	2218568	Identifier	indent		2218109	0					
ANR	2218569	PrimaryExpression	1		2218109	1					
ANR	2218570	Argument	& o		2218109	1					
ANR	2218571	UnaryOperationExpression	& o		2218109	0					
ANR	2218572	UnaryOperator	&		2218109	0					
ANR	2218573	Identifier	o		2218109	1					
ANR	2218574	Argument	tab		2218109	2					
ANR	2218575	Identifier	tab		2218109	0					
ANR	2218576	BreakStatement	break ;	241:3:4126:4131	2218109	16	True				
ANR	2218577	Label	case '}' :	242:2:4135:4143	2218109	17	True				
ANR	2218578	Label	case ']' :	243:2:4147:4155	2218109	18	True				
ANR	2218579	ExpressionStatement	isValue = false	244:3:4160:4175	2218109	19	True				
ANR	2218580	AssignmentExpression	isValue = false		2218109	0		=			
ANR	2218581	Identifier	isValue		2218109	0					
ANR	2218582	Identifier	false		2218109	1					
ANR	2218583	ExpressionStatement	indent --	245:3:4180:4188	2218109	20	True				
ANR	2218584	PostIncDecOperationExpression	indent --		2218109	0					
ANR	2218585	Identifier	indent		2218109	0					
ANR	2218586	IncDec	--		2218109	1					
ANR	2218587	ExpressionStatement	"doIndent ( indent - 1 , & o , tab )"	246:3:4193:4223	2218109	21	True				
ANR	2218588	CallExpression	"doIndent ( indent - 1 , & o , tab )"		2218109	0					
ANR	2218589	Callee	doIndent		2218109	0					
ANR	2218590	Identifier	doIndent		2218109	0					
ANR	2218591	ArgumentList	indent - 1		2218109	1					
ANR	2218592	Argument	indent - 1		2218109	0					
ANR	2218593	AdditiveExpression	indent - 1		2218109	0		-			
ANR	2218594	Identifier	indent		2218109	0					
ANR	2218595	PrimaryExpression	1		2218109	1					
ANR	2218596	Argument	& o		2218109	1					
ANR	2218597	UnaryOperationExpression	& o		2218109	0					
ANR	2218598	UnaryOperator	&		2218109	0					
ANR	2218599	Identifier	o		2218109	1					
ANR	2218600	Argument	tab		2218109	2					
ANR	2218601	Identifier	tab		2218109	0					
ANR	2218602	BreakStatement	break ;	247:3:4228:4233	2218109	22	True				
ANR	2218603	Label	default :	248:2:4237:4244	2218109	23	True				
ANR	2218604	Identifier	default		2218109	0					
ANR	2218605	IfStatement	if ( ! instr )		2218109	24					
ANR	2218606	Condition	! instr	249:7:4253:4258	2218109	0	True				
ANR	2218607	UnaryOperationExpression	! instr		2218109	0					
ANR	2218608	UnaryOperator	!		2218109	0					
ANR	2218609	Identifier	instr		2218109	1					
ANR	2218610	CompoundStatement		96:15:1637:1637	2218109	1					
ANR	2218611	ExpressionStatement	* o ++ = * s	250:4:4267:4276	2218109	0	True				
ANR	2218612	AssignmentExpression	* o ++ = * s		2218109	0		=			
ANR	2218613	UnaryOperationExpression	* o ++		2218109	0					
ANR	2218614	UnaryOperator	*		2218109	0					
ANR	2218615	PostIncDecOperationExpression	o ++		2218109	1					
ANR	2218616	Identifier	o		2218109	0					
ANR	2218617	IncDec	++		2218109	1					
ANR	2218618	UnaryOperationExpression	* s		2218109	1					
ANR	2218619	UnaryOperator	*		2218109	0					
ANR	2218620	Identifier	s		2218109	1					
ANR	2218621	ExpressionStatement	* o = 0	254:1:4291:4297	2218109	13	True				
ANR	2218622	AssignmentExpression	* o = 0		2218109	0		=			
ANR	2218623	UnaryOperationExpression	* o		2218109	0					
ANR	2218624	UnaryOperator	*		2218109	0					
ANR	2218625	Identifier	o		2218109	1					
ANR	2218626	PrimaryExpression	0		2218109	1					
ANR	2218627	ReturnStatement	return O ;	255:1:4300:4308	2218109	14	True				
ANR	2218628	Identifier	O		2218109	0					
ANR	2218629	ReturnType	R_API char *		2218109	1					
ANR	2218630	Identifier	r_print_json_human		2218109	2					
ANR	2218631	ParameterList	const char * s		2218109	3					
ANR	2218632	Parameter	const char * s	154:31:2608:2620	2218109	0	True				
ANR	2218633	ParameterType	const char *		2218109	0					
ANR	2218634	Identifier	s		2218109	1					
ANR	2218635	CFGEntryNode	ENTRY		2218109		True				
ANR	2218636	CFGExitNode	EXIT		2218109		True				
ANR	2218637	Symbol	* s ++		2218109						
ANR	2218638	Symbol	malloc		2218109						
ANR	2218639	Symbol	NULL		2218109						
ANR	2218640	Symbol	indent		2218109						
ANR	2218641	Symbol	* o ++		2218109						
ANR	2218642	Symbol	false		2218109						
ANR	2218643	Symbol	delta		2218109						
ANR	2218644	Symbol	realloc		2218109						
ANR	2218645	Symbol	o		2218109						
ANR	2218646	Symbol	O		2218109						
ANR	2218647	Symbol	strlen		2218109						
ANR	2218648	Symbol	isValue		2218109						
ANR	2218649	Symbol	s		2218109						
ANR	2218650	Symbol	tab		2218109						
ANR	2218651	Symbol	& o		2218109						
ANR	2218652	Symbol	tmp		2218109						
ANR	2218653	Symbol	OE		2218109						
ANR	2218654	Symbol	instr		2218109						
ANR	2218655	Symbol	osz		2218109						
ANR	2218656	Symbol	true		2218109						
ANR	2218657	Symbol	* o		2218109						
ANR	2218658	Symbol	indentSize		2218109						
ANR	2218659	Symbol	* s		2218109						
ANR	2218660	Function	r_print_json_indent	258:0:4313:6627							
ANR	2218661	FunctionDef	"r_print_json_indent (const char * s , bool color , const char * tab , const char * * palette)"		2218660	0					
ANR	2218662	CompoundStatement		258:98:4411:6627	2218660	0					
ANR	2218663	IdentifierDeclStatement	int indent = 0 ;	259:1:4414:4428	2218660	0	True				
ANR	2218664	IdentifierDecl	indent = 0		2218660	0					
ANR	2218665	IdentifierDeclType	int		2218660	0					
ANR	2218666	Identifier	indent		2218660	1					
ANR	2218667	AssignmentExpression	indent = 0		2218660	2		=			
ANR	2218668	Identifier	indent		2218660	0					
ANR	2218669	PrimaryExpression	0		2218660	1					
ANR	2218670	IdentifierDeclStatement	const int indentSize = strlen ( tab ) ;	260:1:4431:4466	2218660	1	True				
ANR	2218671	IdentifierDecl	indentSize = strlen ( tab )		2218660	0					
ANR	2218672	IdentifierDeclType	const int		2218660	0					
ANR	2218673	Identifier	indentSize		2218660	1					
ANR	2218674	AssignmentExpression	indentSize = strlen ( tab )		2218660	2		=			
ANR	2218675	Identifier	indentSize		2218660	0					
ANR	2218676	CallExpression	strlen ( tab )		2218660	1					
ANR	2218677	Callee	strlen		2218660	0					
ANR	2218678	Identifier	strlen		2218660	0					
ANR	2218679	ArgumentList	tab		2218660	1					
ANR	2218680	Argument	tab		2218660	0					
ANR	2218681	Identifier	tab		2218660	0					
ANR	2218682	IdentifierDeclStatement	int instr = 0 ;	261:1:4469:4482	2218660	2	True				
ANR	2218683	IdentifierDecl	instr = 0		2218660	0					
ANR	2218684	IdentifierDeclType	int		2218660	0					
ANR	2218685	Identifier	instr		2218660	1					
ANR	2218686	AssignmentExpression	instr = 0		2218660	2		=			
ANR	2218687	Identifier	instr		2218660	0					
ANR	2218688	PrimaryExpression	0		2218660	1					
ANR	2218689	IdentifierDeclStatement	bool isValue = false ;	262:1:4485:4505	2218660	3	True				
ANR	2218690	IdentifierDecl	isValue = false		2218660	0					
ANR	2218691	IdentifierDeclType	bool		2218660	0					
ANR	2218692	Identifier	isValue		2218660	1					
ANR	2218693	AssignmentExpression	isValue = false		2218660	2		=			
ANR	2218694	Identifier	false		2218660	0					
ANR	2218695	Identifier	false		2218660	1					
ANR	2218696	IdentifierDeclStatement	"char * o , * OE , * tmp ;"	263:1:4508:4526	2218660	4	True				
ANR	2218697	IdentifierDecl	* o		2218660	0					
ANR	2218698	IdentifierDeclType	char *		2218660	0					
ANR	2218699	Identifier	o		2218660	1					
ANR	2218700	IdentifierDecl	* OE		2218660	1					
ANR	2218701	IdentifierDeclType	char *		2218660	0					
ANR	2218702	Identifier	OE		2218660	1					
ANR	2218703	IdentifierDecl	* tmp		2218660	2					
ANR	2218704	IdentifierDeclType	char *		2218660	0					
ANR	2218705	Identifier	tmp		2218660	1					
ANR	2218706	IfStatement	if ( ! s )		2218660	5					
ANR	2218707	Condition	! s	264:5:4533:4534	2218660	0	True				
ANR	2218708	UnaryOperationExpression	! s		2218660	0					
ANR	2218709	UnaryOperator	!		2218660	0					
ANR	2218710	Identifier	s		2218660	1					
ANR	2218711	CompoundStatement		7:9:125:125	2218660	1					
ANR	2218712	ReturnStatement	return NULL ;	265:2:4541:4552	2218660	0	True				
ANR	2218713	Identifier	NULL		2218660	0					
ANR	2218714	IdentifierDeclStatement	const char * * colors = palette ? palette : origColors ;	267:1:4558:4609	2218660	6	True				
ANR	2218715	IdentifierDecl	* * colors = palette ? palette : origColors		2218660	0					
ANR	2218716	IdentifierDeclType	const char * *		2218660	0					
ANR	2218717	Identifier	colors		2218660	1					
ANR	2218718	AssignmentExpression	* * colors = palette ? palette : origColors		2218660	2		=			
ANR	2218719	Identifier	colors		2218660	0					
ANR	2218720	ConditionalExpression	palette ? palette : origColors		2218660	1					
ANR	2218721	Condition	palette		2218660	0					
ANR	2218722	Identifier	palette		2218660	0					
ANR	2218723	Identifier	palette		2218660	1					
ANR	2218724	Identifier	origColors		2218660	2					
ANR	2218725	IdentifierDeclStatement	int osz = ( 1 + strlen ( s ) ) * 20 ;	268:1:4612:4643	2218660	7	True				
ANR	2218726	IdentifierDecl	osz = ( 1 + strlen ( s ) ) * 20		2218660	0					
ANR	2218727	IdentifierDeclType	int		2218660	0					
ANR	2218728	Identifier	osz		2218660	1					
ANR	2218729	AssignmentExpression	osz = ( 1 + strlen ( s ) ) * 20		2218660	2		=			
ANR	2218730	Identifier	osz		2218660	0					
ANR	2218731	MultiplicativeExpression	( 1 + strlen ( s ) ) * 20		2218660	1		*			
ANR	2218732	AdditiveExpression	1 + strlen ( s )		2218660	0		+			
ANR	2218733	PrimaryExpression	1		2218660	0					
ANR	2218734	CallExpression	strlen ( s )		2218660	1					
ANR	2218735	Callee	strlen		2218660	0					
ANR	2218736	Identifier	strlen		2218660	0					
ANR	2218737	ArgumentList	s		2218660	1					
ANR	2218738	Argument	s		2218660	0					
ANR	2218739	Identifier	s		2218660	0					
ANR	2218740	PrimaryExpression	20		2218660	1					
ANR	2218741	IfStatement	if ( osz < 1 )		2218660	8					
ANR	2218742	Condition	osz < 1	269:5:4650:4656	2218660	0	True				
ANR	2218743	RelationalExpression	osz < 1		2218660	0		<			
ANR	2218744	Identifier	osz		2218660	0					
ANR	2218745	PrimaryExpression	1		2218660	1					
ANR	2218746	CompoundStatement		12:14:247:247	2218660	1					
ANR	2218747	ReturnStatement	return NULL ;	270:2:4663:4674	2218660	0	True				
ANR	2218748	Identifier	NULL		2218660	0					
ANR	2218749	IdentifierDeclStatement	char * O = malloc ( osz ) ;	273:1:4681:4703	2218660	9	True				
ANR	2218750	IdentifierDecl	* O = malloc ( osz )		2218660	0					
ANR	2218751	IdentifierDeclType	char *		2218660	0					
ANR	2218752	Identifier	O		2218660	1					
ANR	2218753	AssignmentExpression	* O = malloc ( osz )		2218660	2		=			
ANR	2218754	Identifier	O		2218660	0					
ANR	2218755	CallExpression	malloc ( osz )		2218660	1					
ANR	2218756	Callee	malloc		2218660	0					
ANR	2218757	Identifier	malloc		2218660	0					
ANR	2218758	ArgumentList	osz		2218660	1					
ANR	2218759	Argument	osz		2218660	0					
ANR	2218760	Identifier	osz		2218660	0					
ANR	2218761	IfStatement	if ( ! O )		2218660	10					
ANR	2218762	Condition	! O	274:5:4710:4711	2218660	0	True				
ANR	2218763	UnaryOperationExpression	! O		2218660	0					
ANR	2218764	UnaryOperator	!		2218660	0					
ANR	2218765	Identifier	O		2218660	1					
ANR	2218766	CompoundStatement		17:9:302:302	2218660	1					
ANR	2218767	ReturnStatement	return NULL ;	275:2:4718:4729	2218660	0	True				
ANR	2218768	Identifier	NULL		2218660	0					
ANR	2218769	ExpressionStatement	OE = O + osz	277:1:4735:4747	2218660	11	True				
ANR	2218770	AssignmentExpression	OE = O + osz		2218660	0		=			
ANR	2218771	Identifier	OE		2218660	0					
ANR	2218772	AdditiveExpression	O + osz		2218660	1		+			
ANR	2218773	Identifier	O		2218660	0					
ANR	2218774	Identifier	osz		2218660	1					
ANR	2218775	ForStatement	for ( o = O ; * s ; s ++ )		2218660	12					
ANR	2218776	ForInit	o = O ;	278:6:4755:4760	2218660	0	True				
ANR	2218777	AssignmentExpression	o = O		2218660	0		=			
ANR	2218778	Identifier	o		2218660	0					
ANR	2218779	Identifier	O		2218660	1					
ANR	2218780	Condition	* s	278:13:4762:4763	2218660	1	True				
ANR	2218781	UnaryOperationExpression	* s		2218660	0					
ANR	2218782	UnaryOperator	*		2218660	0					
ANR	2218783	Identifier	s		2218660	1					
ANR	2218784	PostIncDecOperationExpression	s ++	278:17:4766:4768	2218660	2	True				
ANR	2218785	Identifier	s		2218660	0					
ANR	2218786	IncDec	++		2218660	1					
ANR	2218787	CompoundStatement		21:22:359:359	2218660	3					
ANR	2218788	IfStatement	if ( o + ( indent * indentSize ) + 10 > OE )		2218660	0					
ANR	2218789	Condition	o + ( indent * indentSize ) + 10 > OE	279:6:4779:4813	2218660	0	True				
ANR	2218790	RelationalExpression	o + ( indent * indentSize ) + 10 > OE		2218660	0		>			
ANR	2218791	AdditiveExpression	o + ( indent * indentSize ) + 10		2218660	0		+			
ANR	2218792	Identifier	o		2218660	0					
ANR	2218793	AdditiveExpression	( indent * indentSize ) + 10		2218660	1		+			
ANR	2218794	MultiplicativeExpression	indent * indentSize		2218660	0		*			
ANR	2218795	Identifier	indent		2218660	0					
ANR	2218796	Identifier	indentSize		2218660	1					
ANR	2218797	PrimaryExpression	10		2218660	1					
ANR	2218798	Identifier	OE		2218660	1					
ANR	2218799	CompoundStatement		23:3:409:426	2218660	1					
ANR	2218800	IdentifierDeclStatement	int delta = o - O ;	280:3:4821:4838	2218660	0	True				
ANR	2218801	IdentifierDecl	delta = o - O		2218660	0					
ANR	2218802	IdentifierDeclType	int		2218660	0					
ANR	2218803	Identifier	delta		2218660	1					
ANR	2218804	AssignmentExpression	delta = o - O		2218660	2		=			
ANR	2218805	Identifier	delta		2218660	0					
ANR	2218806	AdditiveExpression	o - O		2218660	1		-			
ANR	2218807	Identifier	o		2218660	0					
ANR	2218808	Identifier	O		2218660	1					
ANR	2218809	ExpressionStatement	osz += 0x1000 + ( indent * indentSize )	281:3:4843:4880	2218660	1	True				
ANR	2218810	AssignmentExpression	osz += 0x1000 + ( indent * indentSize )		2218660	0		+=			
ANR	2218811	Identifier	osz		2218660	0					
ANR	2218812	AdditiveExpression	0x1000 + ( indent * indentSize )		2218660	1		+			
ANR	2218813	PrimaryExpression	0x1000		2218660	0					
ANR	2218814	MultiplicativeExpression	indent * indentSize		2218660	1		*			
ANR	2218815	Identifier	indent		2218660	0					
ANR	2218816	Identifier	indentSize		2218660	1					
ANR	2218817	IfStatement	if ( osz < 1 )		2218660	2					
ANR	2218818	Condition	osz < 1	282:7:4889:4895	2218660	0	True				
ANR	2218819	RelationalExpression	osz < 1		2218660	0		<			
ANR	2218820	Identifier	osz		2218660	0					
ANR	2218821	PrimaryExpression	1		2218660	1					
ANR	2218822	CompoundStatement		25:16:486:486	2218660	1					
ANR	2218823	ExpressionStatement	free ( O )	283:4:4904:4912	2218660	0	True				
ANR	2218824	CallExpression	free ( O )		2218660	0					
ANR	2218825	Callee	free		2218660	0					
ANR	2218826	Identifier	free		2218660	0					
ANR	2218827	ArgumentList	O		2218660	1					
ANR	2218828	Argument	O		2218660	0					
ANR	2218829	Identifier	O		2218660	0					
ANR	2218830	ReturnStatement	return NULL ;	284:4:4918:4929	2218660	1	True				
ANR	2218831	Identifier	NULL		2218660	0					
ANR	2218832	ExpressionStatement	"tmp = realloc ( O , osz )"	286:3:4939:4961	2218660	3	True				
ANR	2218833	AssignmentExpression	"tmp = realloc ( O , osz )"		2218660	0		=			
ANR	2218834	Identifier	tmp		2218660	0					
ANR	2218835	CallExpression	"realloc ( O , osz )"		2218660	1					
ANR	2218836	Callee	realloc		2218660	0					
ANR	2218837	Identifier	realloc		2218660	0					
ANR	2218838	ArgumentList	O		2218660	1					
ANR	2218839	Argument	O		2218660	0					
ANR	2218840	Identifier	O		2218660	0					
ANR	2218841	Argument	osz		2218660	1					
ANR	2218842	Identifier	osz		2218660	0					
ANR	2218843	IfStatement	if ( ! tmp )		2218660	4					
ANR	2218844	Condition	! tmp	287:7:4970:4973	2218660	0	True				
ANR	2218845	UnaryOperationExpression	! tmp		2218660	0					
ANR	2218846	UnaryOperator	!		2218660	0					
ANR	2218847	Identifier	tmp		2218660	1					
ANR	2218848	CompoundStatement		30:13:564:564	2218660	1					
ANR	2218849	ExpressionStatement	free ( O )	288:4:4982:4990	2218660	0	True				
ANR	2218850	CallExpression	free ( O )		2218660	0					
ANR	2218851	Callee	free		2218660	0					
ANR	2218852	Identifier	free		2218660	0					
ANR	2218853	ArgumentList	O		2218660	1					
ANR	2218854	Argument	O		2218660	0					
ANR	2218855	Identifier	O		2218660	0					
ANR	2218856	ReturnStatement	return NULL ;	289:4:4996:5007	2218660	1	True				
ANR	2218857	Identifier	NULL		2218660	0					
ANR	2218858	ExpressionStatement	O = tmp	291:3:5017:5024	2218660	5	True				
ANR	2218859	AssignmentExpression	O = tmp		2218660	0		=			
ANR	2218860	Identifier	O		2218660	0					
ANR	2218861	Identifier	tmp		2218660	1					
ANR	2218862	ExpressionStatement	OE = tmp + osz	292:3:5029:5043	2218660	6	True				
ANR	2218863	AssignmentExpression	OE = tmp + osz		2218660	0		=			
ANR	2218864	Identifier	OE		2218660	0					
ANR	2218865	AdditiveExpression	tmp + osz		2218660	1		+			
ANR	2218866	Identifier	tmp		2218660	0					
ANR	2218867	Identifier	osz		2218660	1					
ANR	2218868	ExpressionStatement	o = O + delta	293:3:5048:5061	2218660	7	True				
ANR	2218869	AssignmentExpression	o = O + delta		2218660	0		=			
ANR	2218870	Identifier	o		2218660	0					
ANR	2218871	AdditiveExpression	O + delta		2218660	1		+			
ANR	2218872	Identifier	O		2218660	0					
ANR	2218873	Identifier	delta		2218660	1					
ANR	2218874	IfStatement	if ( instr )		2218660	1					
ANR	2218875	Condition	instr	295:6:5073:5077	2218660	0	True				
ANR	2218876	Identifier	instr		2218660	0					
ANR	2218877	CompoundStatement		38:13:668:668	2218660	1					
ANR	2218878	IfStatement	"if ( s [ 0 ] == '""' )"		2218660	0					
ANR	2218879	Condition	"s [ 0 ] == '""'"	296:7:5089:5099	2218660	0	True				
ANR	2218880	EqualityExpression	"s [ 0 ] == '""'"		2218660	0		==			
ANR	2218881	ArrayIndexing	s [ 0 ]		2218660	0					
ANR	2218882	Identifier	s		2218660	0					
ANR	2218883	PrimaryExpression	0		2218660	1					
ANR	2218884	PrimaryExpression	"'""'"		2218660	1					
ANR	2218885	CompoundStatement		39:20:690:690	2218660	1					
ANR	2218886	ExpressionStatement	instr = 0	297:4:5108:5117	2218660	0	True				
ANR	2218887	AssignmentExpression	instr = 0		2218660	0		=			
ANR	2218888	Identifier	instr		2218660	0					
ANR	2218889	PrimaryExpression	0		2218660	1					
ANR	2218890	ElseStatement	else		2218660	0					
ANR	2218891	IfStatement	"if ( s [ 0 ] == '\\\\' && s [ 1 ] == '""' )"		2218660	0					
ANR	2218892	Condition	"s [ 0 ] == '\\\\' && s [ 1 ] == '""'"	298:14:5133:5159	2218660	0	True				
ANR	2218893	AndExpression	"s [ 0 ] == '\\\\' && s [ 1 ] == '""'"		2218660	0		&&			
ANR	2218894	EqualityExpression	s [ 0 ] == '\\\\'		2218660	0		==			
ANR	2218895	ArrayIndexing	s [ 0 ]		2218660	0					
ANR	2218896	Identifier	s		2218660	0					
ANR	2218897	PrimaryExpression	0		2218660	1					
ANR	2218898	PrimaryExpression	'\\\\'		2218660	1					
ANR	2218899	EqualityExpression	"s [ 1 ] == '""'"		2218660	1		==			
ANR	2218900	ArrayIndexing	s [ 1 ]		2218660	0					
ANR	2218901	Identifier	s		2218660	0					
ANR	2218902	PrimaryExpression	1		2218660	1					
ANR	2218903	PrimaryExpression	"'""'"		2218660	1					
ANR	2218904	CompoundStatement		41:43:750:750	2218660	1					
ANR	2218905	ExpressionStatement	* o ++ = * s ++	299:4:5168:5179	2218660	0	True				
ANR	2218906	AssignmentExpression	* o ++ = * s ++		2218660	0		=			
ANR	2218907	UnaryOperationExpression	* o ++		2218660	0					
ANR	2218908	UnaryOperator	*		2218660	0					
ANR	2218909	PostIncDecOperationExpression	o ++		2218660	1					
ANR	2218910	Identifier	o		2218660	0					
ANR	2218911	IncDec	++		2218660	1					
ANR	2218912	UnaryOperationExpression	* s ++		2218660	1					
ANR	2218913	UnaryOperator	*		2218660	0					
ANR	2218914	PostIncDecOperationExpression	s ++		2218660	1					
ANR	2218915	Identifier	s		2218660	0					
ANR	2218916	IncDec	++		2218660	1					
ANR	2218917	IfStatement	if ( instr )		2218660	1					
ANR	2218918	Condition	instr	301:7:5193:5197	2218660	0	True				
ANR	2218919	Identifier	instr		2218660	0					
ANR	2218920	CompoundStatement		44:14:788:788	2218660	1					
ANR	2218921	IfStatement	if ( isValue )		2218660	0					
ANR	2218922	Condition	isValue	302:8:5210:5216	2218660	0	True				
ANR	2218923	Identifier	isValue		2218660	0					
ANR	2218924	CompoundStatement		45:17:807:807	2218660	1					
ANR	2218925	ExpressionStatement	"EMIT_ESC ( o , colors [ JC_VAL ] )"	304:5:5272:5300	2218660	0	True				
ANR	2218926	CallExpression	"EMIT_ESC ( o , colors [ JC_VAL ] )"		2218660	0					
ANR	2218927	Callee	EMIT_ESC		2218660	0					
ANR	2218928	Identifier	EMIT_ESC		2218660	0					
ANR	2218929	ArgumentList	o		2218660	1					
ANR	2218930	Argument	o		2218660	0					
ANR	2218931	Identifier	o		2218660	0					
ANR	2218932	Argument	colors [ JC_VAL ]		2218660	1					
ANR	2218933	ArrayIndexing	colors [ JC_VAL ]		2218660	0					
ANR	2218934	Identifier	colors		2218660	0					
ANR	2218935	Identifier	JC_VAL		2218660	1					
ANR	2218936	ElseStatement	else		2218660	0					
ANR	2218937	CompoundStatement		48:11:901:901	2218660	0					
ANR	2218938	ExpressionStatement	"EMIT_ESC ( o , colors [ JC_KEY ] )"	306:5:5320:5348	2218660	0	True				
ANR	2218939	CallExpression	"EMIT_ESC ( o , colors [ JC_KEY ] )"		2218660	0					
ANR	2218940	Callee	EMIT_ESC		2218660	0					
ANR	2218941	Identifier	EMIT_ESC		2218660	0					
ANR	2218942	ArgumentList	o		2218660	1					
ANR	2218943	Argument	o		2218660	0					
ANR	2218944	Identifier	o		2218660	0					
ANR	2218945	Argument	colors [ JC_KEY ]		2218660	1					
ANR	2218946	ArrayIndexing	colors [ JC_KEY ]		2218660	0					
ANR	2218947	Identifier	colors		2218660	0					
ANR	2218948	Identifier	JC_KEY		2218660	1					
ANR	2218949	ElseStatement	else		2218660	0					
ANR	2218950	CompoundStatement		51:10:954:954	2218660	0					
ANR	2218951	ExpressionStatement	"EMIT_ESC ( o , colors [ JC_RESET ] )"	309:4:5372:5402	2218660	0	True				
ANR	2218952	CallExpression	"EMIT_ESC ( o , colors [ JC_RESET ] )"		2218660	0					
ANR	2218953	Callee	EMIT_ESC		2218660	0					
ANR	2218954	Identifier	EMIT_ESC		2218660	0					
ANR	2218955	ArgumentList	o		2218660	1					
ANR	2218956	Argument	o		2218660	0					
ANR	2218957	Identifier	o		2218660	0					
ANR	2218958	Argument	colors [ JC_RESET ]		2218660	1					
ANR	2218959	ArrayIndexing	colors [ JC_RESET ]		2218660	0					
ANR	2218960	Identifier	colors		2218660	0					
ANR	2218961	Identifier	JC_RESET		2218660	1					
ANR	2218962	ExpressionStatement	* o ++ = * s	311:3:5412:5421	2218660	2	True				
ANR	2218963	AssignmentExpression	* o ++ = * s		2218660	0		=			
ANR	2218964	UnaryOperationExpression	* o ++		2218660	0					
ANR	2218965	UnaryOperator	*		2218660	0					
ANR	2218966	PostIncDecOperationExpression	o ++		2218660	1					
ANR	2218967	Identifier	o		2218660	0					
ANR	2218968	IncDec	++		2218660	1					
ANR	2218969	UnaryOperationExpression	* s		2218660	1					
ANR	2218970	UnaryOperator	*		2218660	0					
ANR	2218971	Identifier	s		2218660	1					
ANR	2218972	ContinueStatement	continue ;	312:3:5426:5434	2218660	3	True				
ANR	2218973	IfStatement	if ( indent <= 0 )		2218660	2					
ANR	2218974	Condition	indent <= 0	314:6:5446:5456	2218660	0	True				
ANR	2218975	RelationalExpression	indent <= 0		2218660	0		<=			
ANR	2218976	Identifier	indent		2218660	0					
ANR	2218977	PrimaryExpression	0		2218660	1					
ANR	2218978	CompoundStatement		57:19:1047:1047	2218660	1					
ANR	2218979	IfStatement	if ( s [ 0 ] != '{' && s [ 0 ] != '[' )		2218660	0					
ANR	2218980	Condition	s [ 0 ] != '{' && s [ 0 ] != '['	316:7:5497:5522	2218660	0	True				
ANR	2218981	AndExpression	s [ 0 ] != '{' && s [ 0 ] != '['		2218660	0		&&			
ANR	2218982	EqualityExpression	s [ 0 ] != '{'		2218660	0		!=			
ANR	2218983	ArrayIndexing	s [ 0 ]		2218660	0					
ANR	2218984	Identifier	s		2218660	0					
ANR	2218985	PrimaryExpression	0		2218660	1					
ANR	2218986	PrimaryExpression	'{'		2218660	1					
ANR	2218987	EqualityExpression	s [ 0 ] != '['		2218660	1		!=			
ANR	2218988	ArrayIndexing	s [ 0 ]		2218660	0					
ANR	2218989	Identifier	s		2218660	0					
ANR	2218990	PrimaryExpression	0		2218660	1					
ANR	2218991	PrimaryExpression	'['		2218660	1					
ANR	2218992	CompoundStatement		59:35:1113:1113	2218660	1					
ANR	2218993	IfStatement	if ( * s == '\\n' || * s == '\\r' || * s == '\\t' || * s == ' ' )		2218660	0					
ANR	2218994	Condition	* s == '\\n' || * s == '\\r' || * s == '\\t' || * s == ' '	317:8:5535:5585	2218660	0	True				
ANR	2218995	OrExpression	* s == '\\n' || * s == '\\r' || * s == '\\t' || * s == ' '		2218660	0		||			
ANR	2218996	EqualityExpression	* s == '\\n'		2218660	0		==			
ANR	2218997	UnaryOperationExpression	* s		2218660	0					
ANR	2218998	UnaryOperator	*		2218660	0					
ANR	2218999	Identifier	s		2218660	1					
ANR	2219000	PrimaryExpression	'\\n'		2218660	1					
ANR	2219001	OrExpression	* s == '\\r' || * s == '\\t' || * s == ' '		2218660	1		||			
ANR	2219002	EqualityExpression	* s == '\\r'		2218660	0		==			
ANR	2219003	UnaryOperationExpression	* s		2218660	0					
ANR	2219004	UnaryOperator	*		2218660	0					
ANR	2219005	Identifier	s		2218660	1					
ANR	2219006	PrimaryExpression	'\\r'		2218660	1					
ANR	2219007	OrExpression	* s == '\\t' || * s == ' '		2218660	1		||			
ANR	2219008	EqualityExpression	* s == '\\t'		2218660	0		==			
ANR	2219009	UnaryOperationExpression	* s		2218660	0					
ANR	2219010	UnaryOperator	*		2218660	0					
ANR	2219011	Identifier	s		2218660	1					
ANR	2219012	PrimaryExpression	'\\t'		2218660	1					
ANR	2219013	EqualityExpression	* s == ' '		2218660	1		==			
ANR	2219014	UnaryOperationExpression	* s		2218660	0					
ANR	2219015	UnaryOperator	*		2218660	0					
ANR	2219016	Identifier	s		2218660	1					
ANR	2219017	PrimaryExpression	' '		2218660	1					
ANR	2219018	CompoundStatement		60:61:1176:1176	2218660	1					
ANR	2219019	ExpressionStatement	* o ++ = * s	318:5:5595:5604	2218660	0	True				
ANR	2219020	AssignmentExpression	* o ++ = * s		2218660	0		=			
ANR	2219021	UnaryOperationExpression	* o ++		2218660	0					
ANR	2219022	UnaryOperator	*		2218660	0					
ANR	2219023	PostIncDecOperationExpression	o ++		2218660	1					
ANR	2219024	Identifier	o		2218660	0					
ANR	2219025	IncDec	++		2218660	1					
ANR	2219026	UnaryOperationExpression	* s		2218660	1					
ANR	2219027	UnaryOperator	*		2218660	0					
ANR	2219028	Identifier	s		2218660	1					
ANR	2219029	ContinueStatement	continue ;	320:4:5616:5624	2218660	1	True				
ANR	2219030	IfStatement	"if ( s [ 0 ] == '""' )"		2218660	3					
ANR	2219031	Condition	"s [ 0 ] == '""'"	324:6:5642:5652	2218660	0	True				
ANR	2219032	EqualityExpression	"s [ 0 ] == '""'"		2218660	0		==			
ANR	2219033	ArrayIndexing	s [ 0 ]		2218660	0					
ANR	2219034	Identifier	s		2218660	0					
ANR	2219035	PrimaryExpression	0		2218660	1					
ANR	2219036	PrimaryExpression	"'""'"		2218660	1					
ANR	2219037	CompoundStatement		67:19:1243:1243	2218660	1					
ANR	2219038	ExpressionStatement	instr = 1	325:3:5660:5669	2218660	0	True				
ANR	2219039	AssignmentExpression	instr = 1		2218660	0		=			
ANR	2219040	Identifier	instr		2218660	0					
ANR	2219041	PrimaryExpression	1		2218660	1					
ANR	2219042	IfStatement	if ( * s == '\\n' || * s == '\\r' || * s == '\\t' || * s == ' ' || ! IS_PRINTABLE ( * s ) )		2218660	4					
ANR	2219043	Condition	* s == '\\n' || * s == '\\r' || * s == '\\t' || * s == ' ' || ! IS_PRINTABLE ( * s )	327:6:5681:5752	2218660	0	True				
ANR	2219044	OrExpression	* s == '\\n' || * s == '\\r' || * s == '\\t' || * s == ' ' || ! IS_PRINTABLE ( * s )		2218660	0		||			
ANR	2219045	EqualityExpression	* s == '\\n'		2218660	0		==			
ANR	2219046	UnaryOperationExpression	* s		2218660	0					
ANR	2219047	UnaryOperator	*		2218660	0					
ANR	2219048	Identifier	s		2218660	1					
ANR	2219049	PrimaryExpression	'\\n'		2218660	1					
ANR	2219050	OrExpression	* s == '\\r' || * s == '\\t' || * s == ' ' || ! IS_PRINTABLE ( * s )		2218660	1		||			
ANR	2219051	EqualityExpression	* s == '\\r'		2218660	0		==			
ANR	2219052	UnaryOperationExpression	* s		2218660	0					
ANR	2219053	UnaryOperator	*		2218660	0					
ANR	2219054	Identifier	s		2218660	1					
ANR	2219055	PrimaryExpression	'\\r'		2218660	1					
ANR	2219056	OrExpression	* s == '\\t' || * s == ' ' || ! IS_PRINTABLE ( * s )		2218660	1		||			
ANR	2219057	EqualityExpression	* s == '\\t'		2218660	0		==			
ANR	2219058	UnaryOperationExpression	* s		2218660	0					
ANR	2219059	UnaryOperator	*		2218660	0					
ANR	2219060	Identifier	s		2218660	1					
ANR	2219061	PrimaryExpression	'\\t'		2218660	1					
ANR	2219062	OrExpression	* s == ' ' || ! IS_PRINTABLE ( * s )		2218660	1		||			
ANR	2219063	EqualityExpression	* s == ' '		2218660	0		==			
ANR	2219064	UnaryOperationExpression	* s		2218660	0					
ANR	2219065	UnaryOperator	*		2218660	0					
ANR	2219066	Identifier	s		2218660	1					
ANR	2219067	PrimaryExpression	' '		2218660	1					
ANR	2219068	UnaryOperationExpression	! IS_PRINTABLE ( * s )		2218660	1					
ANR	2219069	UnaryOperator	!		2218660	0					
ANR	2219070	CallExpression	IS_PRINTABLE ( * s )		2218660	1					
ANR	2219071	Callee	IS_PRINTABLE		2218660	0					
ANR	2219072	Identifier	IS_PRINTABLE		2218660	0					
ANR	2219073	ArgumentList	* s		2218660	1					
ANR	2219074	Argument	* s		2218660	0					
ANR	2219075	UnaryOperationExpression	* s		2218660	0					
ANR	2219076	UnaryOperator	*		2218660	0					
ANR	2219077	Identifier	s		2218660	1					
ANR	2219078	CompoundStatement		70:80:1343:1343	2218660	1					
ANR	2219079	ContinueStatement	continue ;	328:3:5760:5768	2218660	0	True				
ANR	2219080	SwitchStatement	switch ( * s )		2218660	5					
ANR	2219081	Condition	* s	330:10:5784:5785	2218660	0	True				
ANR	2219082	UnaryOperationExpression	* s		2218660	0					
ANR	2219083	UnaryOperator	*		2218660	0					
ANR	2219084	Identifier	s		2218660	1					
ANR	2219085	CompoundStatement		73:14:1376:1376	2218660	1					
ANR	2219086	Label	case ':' :	331:2:5792:5800	2218660	0	True				
ANR	2219087	ExpressionStatement	* o ++ = * s	332:3:5805:5814	2218660	1	True				
ANR	2219088	AssignmentExpression	* o ++ = * s		2218660	0		=			
ANR	2219089	UnaryOperationExpression	* o ++		2218660	0					
ANR	2219090	UnaryOperator	*		2218660	0					
ANR	2219091	PostIncDecOperationExpression	o ++		2218660	1					
ANR	2219092	Identifier	o		2218660	0					
ANR	2219093	IncDec	++		2218660	1					
ANR	2219094	UnaryOperationExpression	* s		2218660	1					
ANR	2219095	UnaryOperator	*		2218660	0					
ANR	2219096	Identifier	s		2218660	1					
ANR	2219097	ExpressionStatement	* o ++ = ' '	333:3:5819:5829	2218660	2	True				
ANR	2219098	AssignmentExpression	* o ++ = ' '		2218660	0		=			
ANR	2219099	UnaryOperationExpression	* o ++		2218660	0					
ANR	2219100	UnaryOperator	*		2218660	0					
ANR	2219101	PostIncDecOperationExpression	o ++		2218660	1					
ANR	2219102	Identifier	o		2218660	0					
ANR	2219103	IncDec	++		2218660	1					
ANR	2219104	PrimaryExpression	' '		2218660	1					
ANR	2219105	IfStatement	"if ( ! strncmp ( s + 1 , ""true"" , 4 ) )"		2218660	3					
ANR	2219106	Condition	"! strncmp ( s + 1 , ""true"" , 4 )"	334:7:5838:5864	2218660	0	True				
ANR	2219107	UnaryOperationExpression	"! strncmp ( s + 1 , ""true"" , 4 )"		2218660	0					
ANR	2219108	UnaryOperator	!		2218660	0					
ANR	2219109	CallExpression	"strncmp ( s + 1 , ""true"" , 4 )"		2218660	1					
ANR	2219110	Callee	strncmp		2218660	0					
ANR	2219111	Identifier	strncmp		2218660	0					
ANR	2219112	ArgumentList	s + 1		2218660	1					
ANR	2219113	Argument	s + 1		2218660	0					
ANR	2219114	AdditiveExpression	s + 1		2218660	0		+			
ANR	2219115	Identifier	s		2218660	0					
ANR	2219116	PrimaryExpression	1		2218660	1					
ANR	2219117	Argument	"""true"""		2218660	1					
ANR	2219118	PrimaryExpression	"""true"""		2218660	0					
ANR	2219119	Argument	4		2218660	2					
ANR	2219120	PrimaryExpression	4		2218660	0					
ANR	2219121	CompoundStatement		77:36:1455:1455	2218660	1					
ANR	2219122	ExpressionStatement	"EMIT_ESC ( o , colors [ JC_TRUE ] )"	335:4:5873:5902	2218660	0	True				
ANR	2219123	CallExpression	"EMIT_ESC ( o , colors [ JC_TRUE ] )"		2218660	0					
ANR	2219124	Callee	EMIT_ESC		2218660	0					
ANR	2219125	Identifier	EMIT_ESC		2218660	0					
ANR	2219126	ArgumentList	o		2218660	1					
ANR	2219127	Argument	o		2218660	0					
ANR	2219128	Identifier	o		2218660	0					
ANR	2219129	Argument	colors [ JC_TRUE ]		2218660	1					
ANR	2219130	ArrayIndexing	colors [ JC_TRUE ]		2218660	0					
ANR	2219131	Identifier	colors		2218660	0					
ANR	2219132	Identifier	JC_TRUE		2218660	1					
ANR	2219133	ElseStatement	else		2218660	0					
ANR	2219134	IfStatement	"if ( ! strncmp ( s + 1 , ""false"" , 5 ) )"		2218660	0					
ANR	2219135	Condition	"! strncmp ( s + 1 , ""false"" , 5 )"	336:14:5918:5945	2218660	0	True				
ANR	2219136	UnaryOperationExpression	"! strncmp ( s + 1 , ""false"" , 5 )"		2218660	0					
ANR	2219137	UnaryOperator	!		2218660	0					
ANR	2219138	CallExpression	"strncmp ( s + 1 , ""false"" , 5 )"		2218660	1					
ANR	2219139	Callee	strncmp		2218660	0					
ANR	2219140	Identifier	strncmp		2218660	0					
ANR	2219141	ArgumentList	s + 1		2218660	1					
ANR	2219142	Argument	s + 1		2218660	0					
ANR	2219143	AdditiveExpression	s + 1		2218660	0		+			
ANR	2219144	Identifier	s		2218660	0					
ANR	2219145	PrimaryExpression	1		2218660	1					
ANR	2219146	Argument	"""false"""		2218660	1					
ANR	2219147	PrimaryExpression	"""false"""		2218660	0					
ANR	2219148	Argument	5		2218660	2					
ANR	2219149	PrimaryExpression	5		2218660	0					
ANR	2219150	CompoundStatement		79:44:1536:1536	2218660	1					
ANR	2219151	ExpressionStatement	"EMIT_ESC ( o , colors [ JC_FALSE ] )"	337:4:5954:5984	2218660	0	True				
ANR	2219152	CallExpression	"EMIT_ESC ( o , colors [ JC_FALSE ] )"		2218660	0					
ANR	2219153	Callee	EMIT_ESC		2218660	0					
ANR	2219154	Identifier	EMIT_ESC		2218660	0					
ANR	2219155	ArgumentList	o		2218660	1					
ANR	2219156	Argument	o		2218660	0					
ANR	2219157	Identifier	o		2218660	0					
ANR	2219158	Argument	colors [ JC_FALSE ]		2218660	1					
ANR	2219159	ArrayIndexing	colors [ JC_FALSE ]		2218660	0					
ANR	2219160	Identifier	colors		2218660	0					
ANR	2219161	Identifier	JC_FALSE		2218660	1					
ANR	2219162	ExpressionStatement	isValue = true	339:3:5994:6008	2218660	4	True				
ANR	2219163	AssignmentExpression	isValue = true		2218660	0		=			
ANR	2219164	Identifier	isValue		2218660	0					
ANR	2219165	Identifier	true		2218660	1					
ANR	2219166	BreakStatement	break ;	340:3:6013:6018	2218660	5	True				
ANR	2219167	Label	"case ',' :"	341:2:6022:6030	2218660	6	True				
ANR	2219168	ExpressionStatement	"EMIT_ESC ( o , colors [ JC_RESET ] )"	342:3:6035:6065	2218660	7	True				
ANR	2219169	CallExpression	"EMIT_ESC ( o , colors [ JC_RESET ] )"		2218660	0					
ANR	2219170	Callee	EMIT_ESC		2218660	0					
ANR	2219171	Identifier	EMIT_ESC		2218660	0					
ANR	2219172	ArgumentList	o		2218660	1					
ANR	2219173	Argument	o		2218660	0					
ANR	2219174	Identifier	o		2218660	0					
ANR	2219175	Argument	colors [ JC_RESET ]		2218660	1					
ANR	2219176	ArrayIndexing	colors [ JC_RESET ]		2218660	0					
ANR	2219177	Identifier	colors		2218660	0					
ANR	2219178	Identifier	JC_RESET		2218660	1					
ANR	2219179	ExpressionStatement	* o ++ = * s	343:3:6070:6079	2218660	8	True				
ANR	2219180	AssignmentExpression	* o ++ = * s		2218660	0		=			
ANR	2219181	UnaryOperationExpression	* o ++		2218660	0					
ANR	2219182	UnaryOperator	*		2218660	0					
ANR	2219183	PostIncDecOperationExpression	o ++		2218660	1					
ANR	2219184	Identifier	o		2218660	0					
ANR	2219185	IncDec	++		2218660	1					
ANR	2219186	UnaryOperationExpression	* s		2218660	1					
ANR	2219187	UnaryOperator	*		2218660	0					
ANR	2219188	Identifier	s		2218660	1					
ANR	2219189	ExpressionStatement	* o ++ = '\\n'	344:3:6084:6095	2218660	9	True				
ANR	2219190	AssignmentExpression	* o ++ = '\\n'		2218660	0		=			
ANR	2219191	UnaryOperationExpression	* o ++		2218660	0					
ANR	2219192	UnaryOperator	*		2218660	0					
ANR	2219193	PostIncDecOperationExpression	o ++		2218660	1					
ANR	2219194	Identifier	o		2218660	0					
ANR	2219195	IncDec	++		2218660	1					
ANR	2219196	PrimaryExpression	'\\n'		2218660	1					
ANR	2219197	ExpressionStatement	isValue = false	345:3:6100:6115	2218660	10	True				
ANR	2219198	AssignmentExpression	isValue = false		2218660	0		=			
ANR	2219199	Identifier	isValue		2218660	0					
ANR	2219200	Identifier	false		2218660	1					
ANR	2219201	ExpressionStatement	"doIndent ( indent , & o , tab )"	346:3:6120:6146	2218660	11	True				
ANR	2219202	CallExpression	"doIndent ( indent , & o , tab )"		2218660	0					
ANR	2219203	Callee	doIndent		2218660	0					
ANR	2219204	Identifier	doIndent		2218660	0					
ANR	2219205	ArgumentList	indent		2218660	1					
ANR	2219206	Argument	indent		2218660	0					
ANR	2219207	Identifier	indent		2218660	0					
ANR	2219208	Argument	& o		2218660	1					
ANR	2219209	UnaryOperationExpression	& o		2218660	0					
ANR	2219210	UnaryOperator	&		2218660	0					
ANR	2219211	Identifier	o		2218660	1					
ANR	2219212	Argument	tab		2218660	2					
ANR	2219213	Identifier	tab		2218660	0					
ANR	2219214	BreakStatement	break ;	347:3:6151:6156	2218660	12	True				
ANR	2219215	Label	case '{' :	348:2:6160:6168	2218660	13	True				
ANR	2219216	Label	case '[' :	349:2:6172:6180	2218660	14	True				
ANR	2219217	ExpressionStatement	isValue = false	350:3:6185:6200	2218660	15	True				
ANR	2219218	AssignmentExpression	isValue = false		2218660	0		=			
ANR	2219219	Identifier	isValue		2218660	0					
ANR	2219220	Identifier	false		2218660	1					
ANR	2219221	ExpressionStatement	* o ++ = * s	351:3:6205:6214	2218660	16	True				
ANR	2219222	AssignmentExpression	* o ++ = * s		2218660	0		=			
ANR	2219223	UnaryOperationExpression	* o ++		2218660	0					
ANR	2219224	UnaryOperator	*		2218660	0					
ANR	2219225	PostIncDecOperationExpression	o ++		2218660	1					
ANR	2219226	Identifier	o		2218660	0					
ANR	2219227	IncDec	++		2218660	1					
ANR	2219228	UnaryOperationExpression	* s		2218660	1					
ANR	2219229	UnaryOperator	*		2218660	0					
ANR	2219230	Identifier	s		2218660	1					
ANR	2219231	ExpressionStatement	* o ++ = ( indent != - 1 ) ? '\\n' : ' '	352:3:6219:6251	2218660	17	True				
ANR	2219232	AssignmentExpression	* o ++ = ( indent != - 1 ) ? '\\n' : ' '		2218660	0		=			
ANR	2219233	UnaryOperationExpression	* o ++		2218660	0					
ANR	2219234	UnaryOperator	*		2218660	0					
ANR	2219235	PostIncDecOperationExpression	o ++		2218660	1					
ANR	2219236	Identifier	o		2218660	0					
ANR	2219237	IncDec	++		2218660	1					
ANR	2219238	ConditionalExpression	( indent != - 1 ) ? '\\n' : ' '		2218660	1					
ANR	2219239	Condition	indent != - 1		2218660	0					
ANR	2219240	EqualityExpression	indent != - 1		2218660	0		!=			
ANR	2219241	Identifier	indent		2218660	0					
ANR	2219242	UnaryOperationExpression	- 1		2218660	1					
ANR	2219243	UnaryOperator	-		2218660	0					
ANR	2219244	PrimaryExpression	1		2218660	1					
ANR	2219245	PrimaryExpression	'\\n'		2218660	1					
ANR	2219246	PrimaryExpression	' '		2218660	2					
ANR	2219247	IfStatement	if ( indent > 128 )		2218660	18					
ANR	2219248	Condition	indent > 128	353:7:6260:6271	2218660	0	True				
ANR	2219249	RelationalExpression	indent > 128		2218660	0		>			
ANR	2219250	Identifier	indent		2218660	0					
ANR	2219251	PrimaryExpression	128		2218660	1					
ANR	2219252	CompoundStatement		96:21:1862:1862	2218660	1					
ANR	2219253	ExpressionStatement	"eprintf ( ""JSON indentation is too deep\\n"" )"	354:4:6280:6322	2218660	0	True				
ANR	2219254	CallExpression	"eprintf ( ""JSON indentation is too deep\\n"" )"		2218660	0					
ANR	2219255	Callee	eprintf		2218660	0					
ANR	2219256	Identifier	eprintf		2218660	0					
ANR	2219257	ArgumentList	"""JSON indentation is too deep\\n"""		2218660	1					
ANR	2219258	Argument	"""JSON indentation is too deep\\n"""		2218660	0					
ANR	2219259	PrimaryExpression	"""JSON indentation is too deep\\n"""		2218660	0					
ANR	2219260	ExpressionStatement	indent = 0	355:4:6328:6338	2218660	1	True				
ANR	2219261	AssignmentExpression	indent = 0		2218660	0		=			
ANR	2219262	Identifier	indent		2218660	0					
ANR	2219263	PrimaryExpression	0		2218660	1					
ANR	2219264	ElseStatement	else		2218660	0					
ANR	2219265	CompoundStatement		99:10:1938:1938	2218660	0					
ANR	2219266	ExpressionStatement	indent ++	357:4:6356:6364	2218660	0	True				
ANR	2219267	PostIncDecOperationExpression	indent ++		2218660	0					
ANR	2219268	Identifier	indent		2218660	0					
ANR	2219269	IncDec	++		2218660	1					
ANR	2219270	ExpressionStatement	"doIndent ( indent , & o , tab )"	359:3:6374:6400	2218660	19	True				
ANR	2219271	CallExpression	"doIndent ( indent , & o , tab )"		2218660	0					
ANR	2219272	Callee	doIndent		2218660	0					
ANR	2219273	Identifier	doIndent		2218660	0					
ANR	2219274	ArgumentList	indent		2218660	1					
ANR	2219275	Argument	indent		2218660	0					
ANR	2219276	Identifier	indent		2218660	0					
ANR	2219277	Argument	& o		2218660	1					
ANR	2219278	UnaryOperationExpression	& o		2218660	0					
ANR	2219279	UnaryOperator	&		2218660	0					
ANR	2219280	Identifier	o		2218660	1					
ANR	2219281	Argument	tab		2218660	2					
ANR	2219282	Identifier	tab		2218660	0					
ANR	2219283	BreakStatement	break ;	360:3:6405:6410	2218660	20	True				
ANR	2219284	Label	case '}' :	361:2:6414:6422	2218660	21	True				
ANR	2219285	Label	case ']' :	362:2:6426:6434	2218660	22	True				
ANR	2219286	ExpressionStatement	"EMIT_ESC ( o , colors [ JC_RESET ] )"	363:3:6439:6469	2218660	23	True				
ANR	2219287	CallExpression	"EMIT_ESC ( o , colors [ JC_RESET ] )"		2218660	0					
ANR	2219288	Callee	EMIT_ESC		2218660	0					
ANR	2219289	Identifier	EMIT_ESC		2218660	0					
ANR	2219290	ArgumentList	o		2218660	1					
ANR	2219291	Argument	o		2218660	0					
ANR	2219292	Identifier	o		2218660	0					
ANR	2219293	Argument	colors [ JC_RESET ]		2218660	1					
ANR	2219294	ArrayIndexing	colors [ JC_RESET ]		2218660	0					
ANR	2219295	Identifier	colors		2218660	0					
ANR	2219296	Identifier	JC_RESET		2218660	1					
ANR	2219297	ExpressionStatement	isValue = false	364:3:6474:6489	2218660	24	True				
ANR	2219298	AssignmentExpression	isValue = false		2218660	0		=			
ANR	2219299	Identifier	isValue		2218660	0					
ANR	2219300	Identifier	false		2218660	1					
ANR	2219301	ExpressionStatement	* o ++ = '\\n'	365:3:6494:6505	2218660	25	True				
ANR	2219302	AssignmentExpression	* o ++ = '\\n'		2218660	0		=			
ANR	2219303	UnaryOperationExpression	* o ++		2218660	0					
ANR	2219304	UnaryOperator	*		2218660	0					
ANR	2219305	PostIncDecOperationExpression	o ++		2218660	1					
ANR	2219306	Identifier	o		2218660	0					
ANR	2219307	IncDec	++		2218660	1					
ANR	2219308	PrimaryExpression	'\\n'		2218660	1					
ANR	2219309	ExpressionStatement	indent --	366:3:6510:6518	2218660	26	True				
ANR	2219310	PostIncDecOperationExpression	indent --		2218660	0					
ANR	2219311	Identifier	indent		2218660	0					
ANR	2219312	IncDec	--		2218660	1					
ANR	2219313	ExpressionStatement	"doIndent ( indent , & o , tab )"	367:3:6523:6549	2218660	27	True				
ANR	2219314	CallExpression	"doIndent ( indent , & o , tab )"		2218660	0					
ANR	2219315	Callee	doIndent		2218660	0					
ANR	2219316	Identifier	doIndent		2218660	0					
ANR	2219317	ArgumentList	indent		2218660	1					
ANR	2219318	Argument	indent		2218660	0					
ANR	2219319	Identifier	indent		2218660	0					
ANR	2219320	Argument	& o		2218660	1					
ANR	2219321	UnaryOperationExpression	& o		2218660	0					
ANR	2219322	UnaryOperator	&		2218660	0					
ANR	2219323	Identifier	o		2218660	1					
ANR	2219324	Argument	tab		2218660	2					
ANR	2219325	Identifier	tab		2218660	0					
ANR	2219326	ExpressionStatement	* o ++ = * s	368:3:6554:6563	2218660	28	True				
ANR	2219327	AssignmentExpression	* o ++ = * s		2218660	0		=			
ANR	2219328	UnaryOperationExpression	* o ++		2218660	0					
ANR	2219329	UnaryOperator	*		2218660	0					
ANR	2219330	PostIncDecOperationExpression	o ++		2218660	1					
ANR	2219331	Identifier	o		2218660	0					
ANR	2219332	IncDec	++		2218660	1					
ANR	2219333	UnaryOperationExpression	* s		2218660	1					
ANR	2219334	UnaryOperator	*		2218660	0					
ANR	2219335	Identifier	s		2218660	1					
ANR	2219336	BreakStatement	break ;	369:3:6568:6573	2218660	29	True				
ANR	2219337	Label	default :	370:2:6577:6584	2218660	30	True				
ANR	2219338	Identifier	default		2218660	0					
ANR	2219339	ExpressionStatement	* o ++ = * s	371:3:6589:6598	2218660	31	True				
ANR	2219340	AssignmentExpression	* o ++ = * s		2218660	0		=			
ANR	2219341	UnaryOperationExpression	* o ++		2218660	0					
ANR	2219342	UnaryOperator	*		2218660	0					
ANR	2219343	PostIncDecOperationExpression	o ++		2218660	1					
ANR	2219344	Identifier	o		2218660	0					
ANR	2219345	IncDec	++		2218660	1					
ANR	2219346	UnaryOperationExpression	* s		2218660	1					
ANR	2219347	UnaryOperator	*		2218660	0					
ANR	2219348	Identifier	s		2218660	1					
ANR	2219349	ExpressionStatement	* o = 0	374:1:6608:6614	2218660	13	True				
ANR	2219350	AssignmentExpression	* o = 0		2218660	0		=			
ANR	2219351	UnaryOperationExpression	* o		2218660	0					
ANR	2219352	UnaryOperator	*		2218660	0					
ANR	2219353	Identifier	o		2218660	1					
ANR	2219354	PrimaryExpression	0		2218660	1					
ANR	2219355	ReturnStatement	return O ;	375:1:6617:6625	2218660	14	True				
ANR	2219356	Identifier	O		2218660	0					
ANR	2219357	ReturnType	R_API char *		2218660	1					
ANR	2219358	Identifier	r_print_json_indent		2218660	2					
ANR	2219359	ParameterList	"const char * s , bool color , const char * tab , const char * * palette"		2218660	3					
ANR	2219360	Parameter	const char * s	258:32:4345:4357	2218660	0	True				
ANR	2219361	ParameterType	const char *		2218660	0					
ANR	2219362	Identifier	s		2218660	1					
ANR	2219363	Parameter	bool color	258:47:4360:4369	2218660	1	True				
ANR	2219364	ParameterType	bool		2218660	0					
ANR	2219365	Identifier	color		2218660	1					
ANR	2219366	Parameter	const char * tab	258:59:4372:4386	2218660	2	True				
ANR	2219367	ParameterType	const char *		2218660	0					
ANR	2219368	Identifier	tab		2218660	1					
ANR	2219369	Parameter	const char * * palette	258:76:4389:4408	2218660	3	True				
ANR	2219370	ParameterType	const char * *		2218660	0					
ANR	2219371	Identifier	palette		2218660	1					
ANR	2219372	CFGEntryNode	ENTRY		2218660		True				
ANR	2219373	CFGExitNode	EXIT		2218660		True				
ANR	2219374	Symbol	* s ++		2218660						
ANR	2219375	Symbol	IS_PRINTABLE		2218660						
ANR	2219376	Symbol	color		2218660						
ANR	2219377	Symbol	indent		2218660						
ANR	2219378	Symbol	* o ++		2218660						
ANR	2219379	Symbol	delta		2218660						
ANR	2219380	Symbol	realloc		2218660						
ANR	2219381	Symbol	colors		2218660						
ANR	2219382	Symbol	O		2218660						
ANR	2219383	Symbol	JC_FALSE		2218660						
ANR	2219384	Symbol	strlen		2218660						
ANR	2219385	Symbol	* colors		2218660						
ANR	2219386	Symbol	strncmp		2218660						
ANR	2219387	Symbol	tab		2218660						
ANR	2219388	Symbol	tmp		2218660						
ANR	2219389	Symbol	OE		2218660						
ANR	2219390	Symbol	instr		2218660						
ANR	2219391	Symbol	osz		2218660						
ANR	2219392	Symbol	JC_TRUE		2218660						
ANR	2219393	Symbol	JC_VAL		2218660						
ANR	2219394	Symbol	palette		2218660						
ANR	2219395	Symbol	JC_KEY		2218660						
ANR	2219396	Symbol	indentSize		2218660						
ANR	2219397	Symbol	malloc		2218660						
ANR	2219398	Symbol	NULL		2218660						
ANR	2219399	Symbol	origColors		2218660						
ANR	2219400	Symbol	false		2218660						
ANR	2219401	Symbol	* JC_RESET		2218660						
ANR	2219402	Symbol	* JC_VAL		2218660						
ANR	2219403	Symbol	o		2218660						
ANR	2219404	Symbol	JC_RESET		2218660						
ANR	2219405	Symbol	isValue		2218660						
ANR	2219406	Symbol	s		2218660						
ANR	2219407	Symbol	* JC_KEY		2218660						
ANR	2219408	Symbol	& o		2218660						
ANR	2219409	Symbol	true		2218660						
ANR	2219410	Symbol	* o		2218660						
ANR	2219411	Symbol	* JC_FALSE		2218660						
ANR	2219412	Symbol	* s		2218660						
ANR	2219413	Symbol	* JC_TRUE		2218660						
