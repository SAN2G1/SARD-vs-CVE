command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	230778	File	data/converged/CVE-2019-16718~_radare2/anal_tp.c								
ANR	230779	ClassDef	<unnamed>	9:0:186:264							
ANR	230780	Function	r_anal_emul_init	18:0:268:1111							
ANR	230781	FunctionDef	"r_anal_emul_init (RCore * core , RConfigHold * hc)"		230780	0					
ANR	230782	CompoundStatement		18:59:327:1111	230780	0					
ANR	230783	ExpressionStatement	"r_config_hold_i ( hc , ""esil.romem"" , ""asm.trace"" , ""dbg.trace"" , ""esil.nonull"" , ""dbg.follow"" , NULL )"	19:1:330:428	230780	0	True				
ANR	230784	CallExpression	"r_config_hold_i ( hc , ""esil.romem"" , ""asm.trace"" , ""dbg.trace"" , ""esil.nonull"" , ""dbg.follow"" , NULL )"		230780	0					
ANR	230785	Callee	r_config_hold_i		230780	0					
ANR	230786	Identifier	r_config_hold_i		230780	0					
ANR	230787	ArgumentList	hc		230780	1					
ANR	230788	Argument	hc		230780	0					
ANR	230789	Identifier	hc		230780	0					
ANR	230790	Argument	"""esil.romem"""		230780	1					
ANR	230791	PrimaryExpression	"""esil.romem"""		230780	0					
ANR	230792	Argument	"""asm.trace"""		230780	2					
ANR	230793	PrimaryExpression	"""asm.trace"""		230780	0					
ANR	230794	Argument	"""dbg.trace"""		230780	3					
ANR	230795	PrimaryExpression	"""dbg.trace"""		230780	0					
ANR	230796	Argument	"""esil.nonull"""		230780	4					
ANR	230797	PrimaryExpression	"""esil.nonull"""		230780	0					
ANR	230798	Argument	"""dbg.follow"""		230780	5					
ANR	230799	PrimaryExpression	"""dbg.follow"""		230780	0					
ANR	230800	Argument	NULL		230780	6					
ANR	230801	Identifier	NULL		230780	0					
ANR	230802	ExpressionStatement	"r_config_set ( core -> config , ""esil.romem"" , ""true"" )"	21:1:431:480	230780	1	True				
ANR	230803	CallExpression	"r_config_set ( core -> config , ""esil.romem"" , ""true"" )"		230780	0					
ANR	230804	Callee	r_config_set		230780	0					
ANR	230805	Identifier	r_config_set		230780	0					
ANR	230806	ArgumentList	core -> config		230780	1					
ANR	230807	Argument	core -> config		230780	0					
ANR	230808	PtrMemberAccess	core -> config		230780	0					
ANR	230809	Identifier	core		230780	0					
ANR	230810	Identifier	config		230780	1					
ANR	230811	Argument	"""esil.romem"""		230780	1					
ANR	230812	PrimaryExpression	"""esil.romem"""		230780	0					
ANR	230813	Argument	"""true"""		230780	2					
ANR	230814	PrimaryExpression	"""true"""		230780	0					
ANR	230815	ExpressionStatement	"r_config_set ( core -> config , ""asm.trace"" , ""true"" )"	22:1:483:531	230780	2	True				
ANR	230816	CallExpression	"r_config_set ( core -> config , ""asm.trace"" , ""true"" )"		230780	0					
ANR	230817	Callee	r_config_set		230780	0					
ANR	230818	Identifier	r_config_set		230780	0					
ANR	230819	ArgumentList	core -> config		230780	1					
ANR	230820	Argument	core -> config		230780	0					
ANR	230821	PtrMemberAccess	core -> config		230780	0					
ANR	230822	Identifier	core		230780	0					
ANR	230823	Identifier	config		230780	1					
ANR	230824	Argument	"""asm.trace"""		230780	1					
ANR	230825	PrimaryExpression	"""asm.trace"""		230780	0					
ANR	230826	Argument	"""true"""		230780	2					
ANR	230827	PrimaryExpression	"""true"""		230780	0					
ANR	230828	ExpressionStatement	"r_config_set ( core -> config , ""dbg.trace"" , ""true"" )"	23:1:534:582	230780	3	True				
ANR	230829	CallExpression	"r_config_set ( core -> config , ""dbg.trace"" , ""true"" )"		230780	0					
ANR	230830	Callee	r_config_set		230780	0					
ANR	230831	Identifier	r_config_set		230780	0					
ANR	230832	ArgumentList	core -> config		230780	1					
ANR	230833	Argument	core -> config		230780	0					
ANR	230834	PtrMemberAccess	core -> config		230780	0					
ANR	230835	Identifier	core		230780	0					
ANR	230836	Identifier	config		230780	1					
ANR	230837	Argument	"""dbg.trace"""		230780	1					
ANR	230838	PrimaryExpression	"""dbg.trace"""		230780	0					
ANR	230839	Argument	"""true"""		230780	2					
ANR	230840	PrimaryExpression	"""true"""		230780	0					
ANR	230841	ExpressionStatement	"r_config_set ( core -> config , ""esil.nonull"" , ""true"" )"	24:1:585:635	230780	4	True				
ANR	230842	CallExpression	"r_config_set ( core -> config , ""esil.nonull"" , ""true"" )"		230780	0					
ANR	230843	Callee	r_config_set		230780	0					
ANR	230844	Identifier	r_config_set		230780	0					
ANR	230845	ArgumentList	core -> config		230780	1					
ANR	230846	Argument	core -> config		230780	0					
ANR	230847	PtrMemberAccess	core -> config		230780	0					
ANR	230848	Identifier	core		230780	0					
ANR	230849	Identifier	config		230780	1					
ANR	230850	Argument	"""esil.nonull"""		230780	1					
ANR	230851	PrimaryExpression	"""esil.nonull"""		230780	0					
ANR	230852	Argument	"""true"""		230780	2					
ANR	230853	PrimaryExpression	"""true"""		230780	0					
ANR	230854	ExpressionStatement	"r_config_set_i ( core -> config , ""dbg.follow"" , false )"	25:1:638:688	230780	5	True				
ANR	230855	CallExpression	"r_config_set_i ( core -> config , ""dbg.follow"" , false )"		230780	0					
ANR	230856	Callee	r_config_set_i		230780	0					
ANR	230857	Identifier	r_config_set_i		230780	0					
ANR	230858	ArgumentList	core -> config		230780	1					
ANR	230859	Argument	core -> config		230780	0					
ANR	230860	PtrMemberAccess	core -> config		230780	0					
ANR	230861	Identifier	core		230780	0					
ANR	230862	Identifier	config		230780	1					
ANR	230863	Argument	"""dbg.follow"""		230780	1					
ANR	230864	PrimaryExpression	"""dbg.follow"""		230780	0					
ANR	230865	Argument	false		230780	2					
ANR	230866	Identifier	false		230780	0					
ANR	230867	IdentifierDeclStatement	"const char * bp = r_reg_get_name ( core -> anal -> reg , R_REG_NAME_BP ) ;"	26:1:691:755	230780	6	True				
ANR	230868	IdentifierDecl	"* bp = r_reg_get_name ( core -> anal -> reg , R_REG_NAME_BP )"		230780	0					
ANR	230869	IdentifierDeclType	const char *		230780	0					
ANR	230870	Identifier	bp		230780	1					
ANR	230871	AssignmentExpression	"* bp = r_reg_get_name ( core -> anal -> reg , R_REG_NAME_BP )"		230780	2		=			
ANR	230872	Identifier	bp		230780	0					
ANR	230873	CallExpression	"r_reg_get_name ( core -> anal -> reg , R_REG_NAME_BP )"		230780	1					
ANR	230874	Callee	r_reg_get_name		230780	0					
ANR	230875	Identifier	r_reg_get_name		230780	0					
ANR	230876	ArgumentList	core -> anal -> reg		230780	1					
ANR	230877	Argument	core -> anal -> reg		230780	0					
ANR	230878	PtrMemberAccess	core -> anal -> reg		230780	0					
ANR	230879	PtrMemberAccess	core -> anal		230780	0					
ANR	230880	Identifier	core		230780	0					
ANR	230881	Identifier	anal		230780	1					
ANR	230882	Identifier	reg		230780	1					
ANR	230883	Argument	R_REG_NAME_BP		230780	1					
ANR	230884	Identifier	R_REG_NAME_BP		230780	0					
ANR	230885	IdentifierDeclStatement	"const char * sp = r_reg_get_name ( core -> anal -> reg , R_REG_NAME_SP ) ;"	27:1:758:822	230780	7	True				
ANR	230886	IdentifierDecl	"* sp = r_reg_get_name ( core -> anal -> reg , R_REG_NAME_SP )"		230780	0					
ANR	230887	IdentifierDeclType	const char *		230780	0					
ANR	230888	Identifier	sp		230780	1					
ANR	230889	AssignmentExpression	"* sp = r_reg_get_name ( core -> anal -> reg , R_REG_NAME_SP )"		230780	2		=			
ANR	230890	Identifier	sp		230780	0					
ANR	230891	CallExpression	"r_reg_get_name ( core -> anal -> reg , R_REG_NAME_SP )"		230780	1					
ANR	230892	Callee	r_reg_get_name		230780	0					
ANR	230893	Identifier	r_reg_get_name		230780	0					
ANR	230894	ArgumentList	core -> anal -> reg		230780	1					
ANR	230895	Argument	core -> anal -> reg		230780	0					
ANR	230896	PtrMemberAccess	core -> anal -> reg		230780	0					
ANR	230897	PtrMemberAccess	core -> anal		230780	0					
ANR	230898	Identifier	core		230780	0					
ANR	230899	Identifier	anal		230780	1					
ANR	230900	Identifier	reg		230780	1					
ANR	230901	Argument	R_REG_NAME_SP		230780	1					
ANR	230902	Identifier	R_REG_NAME_SP		230780	0					
ANR	230903	IfStatement	"if ( ( bp && ! r_reg_getv ( core -> anal -> reg , bp ) ) && ( sp && ! r_reg_getv ( core -> anal -> reg , sp ) ) )"		230780	8					
ANR	230904	Condition	"( bp && ! r_reg_getv ( core -> anal -> reg , bp ) ) && ( sp && ! r_reg_getv ( core -> anal -> reg , sp ) )"	28:5:829:914	230780	0	True				
ANR	230905	AndExpression	"( bp && ! r_reg_getv ( core -> anal -> reg , bp ) ) && ( sp && ! r_reg_getv ( core -> anal -> reg , sp ) )"		230780	0		&&			
ANR	230906	AndExpression	"bp && ! r_reg_getv ( core -> anal -> reg , bp )"		230780	0		&&			
ANR	230907	Identifier	bp		230780	0					
ANR	230908	UnaryOperationExpression	"! r_reg_getv ( core -> anal -> reg , bp )"		230780	1					
ANR	230909	UnaryOperator	!		230780	0					
ANR	230910	CallExpression	"r_reg_getv ( core -> anal -> reg , bp )"		230780	1					
ANR	230911	Callee	r_reg_getv		230780	0					
ANR	230912	Identifier	r_reg_getv		230780	0					
ANR	230913	ArgumentList	core -> anal -> reg		230780	1					
ANR	230914	Argument	core -> anal -> reg		230780	0					
ANR	230915	PtrMemberAccess	core -> anal -> reg		230780	0					
ANR	230916	PtrMemberAccess	core -> anal		230780	0					
ANR	230917	Identifier	core		230780	0					
ANR	230918	Identifier	anal		230780	1					
ANR	230919	Identifier	reg		230780	1					
ANR	230920	Argument	bp		230780	1					
ANR	230921	Identifier	bp		230780	0					
ANR	230922	AndExpression	"sp && ! r_reg_getv ( core -> anal -> reg , sp )"		230780	1		&&			
ANR	230923	Identifier	sp		230780	0					
ANR	230924	UnaryOperationExpression	"! r_reg_getv ( core -> anal -> reg , sp )"		230780	1					
ANR	230925	UnaryOperator	!		230780	0					
ANR	230926	CallExpression	"r_reg_getv ( core -> anal -> reg , sp )"		230780	1					
ANR	230927	Callee	r_reg_getv		230780	0					
ANR	230928	Identifier	r_reg_getv		230780	0					
ANR	230929	ArgumentList	core -> anal -> reg		230780	1					
ANR	230930	Argument	core -> anal -> reg		230780	0					
ANR	230931	PtrMemberAccess	core -> anal -> reg		230780	0					
ANR	230932	PtrMemberAccess	core -> anal		230780	0					
ANR	230933	Identifier	core		230780	0					
ANR	230934	Identifier	anal		230780	1					
ANR	230935	Identifier	reg		230780	1					
ANR	230936	Argument	sp		230780	1					
ANR	230937	Identifier	sp		230780	0					
ANR	230938	CompoundStatement		11:93:589:589	230780	1					
ANR	230939	ExpressionStatement	"eprintf ( ""Stack isn't initialized.\\n"" )"	29:2:921:959	230780	0	True				
ANR	230940	CallExpression	"eprintf ( ""Stack isn't initialized.\\n"" )"		230780	0					
ANR	230941	Callee	eprintf		230780	0					
ANR	230942	Identifier	eprintf		230780	0					
ANR	230943	ArgumentList	"""Stack isn't initialized.\\n"""		230780	1					
ANR	230944	Argument	"""Stack isn't initialized.\\n"""		230780	0					
ANR	230945	PrimaryExpression	"""Stack isn't initialized.\\n"""		230780	0					
ANR	230946	ExpressionStatement	"eprintf ( ""Try running aei and aeim commands before aft for default stack initialization\\n"" )"	30:2:963:1054	230780	1	True				
ANR	230947	CallExpression	"eprintf ( ""Try running aei and aeim commands before aft for default stack initialization\\n"" )"		230780	0					
ANR	230948	Callee	eprintf		230780	0					
ANR	230949	Identifier	eprintf		230780	0					
ANR	230950	ArgumentList	"""Try running aei and aeim commands before aft for default stack initialization\\n"""		230780	1					
ANR	230951	Argument	"""Try running aei and aeim commands before aft for default stack initialization\\n"""		230780	0					
ANR	230952	PrimaryExpression	"""Try running aei and aeim commands before aft for default stack initialization\\n"""		230780	0					
ANR	230953	ReturnStatement	return false ;	31:2:1058:1070	230780	2	True				
ANR	230954	Identifier	false		230780	0					
ANR	230955	ReturnStatement	return ( core -> anal -> esil != NULL ) ;	33:1:1076:1109	230780	9	True				
ANR	230956	EqualityExpression	core -> anal -> esil != NULL		230780	0		!=			
ANR	230957	PtrMemberAccess	core -> anal -> esil		230780	0					
ANR	230958	PtrMemberAccess	core -> anal		230780	0					
ANR	230959	Identifier	core		230780	0					
ANR	230960	Identifier	anal		230780	1					
ANR	230961	Identifier	esil		230780	1					
ANR	230962	Identifier	NULL		230780	1					
ANR	230963	ReturnType	static bool		230780	1					
ANR	230964	Identifier	r_anal_emul_init		230780	2					
ANR	230965	ParameterList	"RCore * core , RConfigHold * hc"		230780	3					
ANR	230966	Parameter	RCore * core	18:29:297:307	230780	0	True				
ANR	230967	ParameterType	RCore *		230780	0					
ANR	230968	Identifier	core		230780	1					
ANR	230969	Parameter	RConfigHold * hc	18:42:310:324	230780	1	True				
ANR	230970	ParameterType	RConfigHold *		230780	0					
ANR	230971	Identifier	hc		230780	1					
ANR	230972	CFGEntryNode	ENTRY		230780		True				
ANR	230973	CFGExitNode	EXIT		230780		True				
ANR	230974	Symbol	core -> config		230780						
ANR	230975	Symbol	R_REG_NAME_BP		230780						
ANR	230976	Symbol	core -> anal -> reg		230780						
ANR	230977	Symbol	NULL		230780						
ANR	230978	Symbol	* core		230780						
ANR	230979	Symbol	false		230780						
ANR	230980	Symbol	core -> anal		230780						
ANR	230981	Symbol	bp		230780						
ANR	230982	Symbol	core		230780						
ANR	230983	Symbol	* core -> anal		230780						
ANR	230984	Symbol	R_REG_NAME_SP		230780						
ANR	230985	Symbol	r_reg_get_name		230780						
ANR	230986	Symbol	hc		230780						
ANR	230987	Symbol	r_reg_getv		230780						
ANR	230988	Symbol	core -> anal -> esil		230780						
ANR	230989	Symbol	sp		230780						
ANR	230990	Symbol	* * core		230780						
ANR	230991	Function	r_anal_emul_restore	36:0:1114:1233							
ANR	230992	FunctionDef	"r_anal_emul_restore (RCore * core , RConfigHold * hc)"		230991	0					
ANR	230993	CompoundStatement		36:62:1176:1233	230991	0					
ANR	230994	ExpressionStatement	r_config_hold_restore ( hc )	37:1:1179:1205	230991	0	True				
ANR	230995	CallExpression	r_config_hold_restore ( hc )		230991	0					
ANR	230996	Callee	r_config_hold_restore		230991	0					
ANR	230997	Identifier	r_config_hold_restore		230991	0					
ANR	230998	ArgumentList	hc		230991	1					
ANR	230999	Argument	hc		230991	0					
ANR	231000	Identifier	hc		230991	0					
ANR	231001	ExpressionStatement	r_config_hold_free ( hc )	38:1:1208:1231	230991	1	True				
ANR	231002	CallExpression	r_config_hold_free ( hc )		230991	0					
ANR	231003	Callee	r_config_hold_free		230991	0					
ANR	231004	Identifier	r_config_hold_free		230991	0					
ANR	231005	ArgumentList	hc		230991	1					
ANR	231006	Argument	hc		230991	0					
ANR	231007	Identifier	hc		230991	0					
ANR	231008	ReturnType	static void		230991	1					
ANR	231009	Identifier	r_anal_emul_restore		230991	2					
ANR	231010	ParameterList	"RCore * core , RConfigHold * hc"		230991	3					
ANR	231011	Parameter	RCore * core	36:32:1146:1156	230991	0	True				
ANR	231012	ParameterType	RCore *		230991	0					
ANR	231013	Identifier	core		230991	1					
ANR	231014	Parameter	RConfigHold * hc	36:45:1159:1173	230991	1	True				
ANR	231015	ParameterType	RConfigHold *		230991	0					
ANR	231016	Identifier	hc		230991	1					
ANR	231017	CFGEntryNode	ENTRY		230991		True				
ANR	231018	CFGExitNode	EXIT		230991		True				
ANR	231019	Symbol	core		230991						
ANR	231020	Symbol	hc		230991						
ANR	231021	Function	type_pos_hit	43:0:1325:1708							
ANR	231022	FunctionDef	"type_pos_hit (RAnal * anal , Sdb * trace , bool in_stack , int idx , int size , const char * place)"		231021	0					
ANR	231023	CompoundStatement		43:103:1428:1708	231021	0					
ANR	231024	IfStatement	if ( in_stack )		231021	0					
ANR	231025	Condition	in_stack	44:5:1435:1442	231021	0	True				
ANR	231026	Identifier	in_stack		231021	0					
ANR	231027	CompoundStatement		5:2:132:203	231021	1					
ANR	231028	IdentifierDeclStatement	"const char * sp_name = r_reg_get_name ( anal -> reg , R_REG_NAME_SP ) ;"	45:2:1449:1512	231021	0	True				
ANR	231029	IdentifierDecl	"* sp_name = r_reg_get_name ( anal -> reg , R_REG_NAME_SP )"		231021	0					
ANR	231030	IdentifierDeclType	const char *		231021	0					
ANR	231031	Identifier	sp_name		231021	1					
ANR	231032	AssignmentExpression	"* sp_name = r_reg_get_name ( anal -> reg , R_REG_NAME_SP )"		231021	2		=			
ANR	231033	Identifier	sp_name		231021	0					
ANR	231034	CallExpression	"r_reg_get_name ( anal -> reg , R_REG_NAME_SP )"		231021	1					
ANR	231035	Callee	r_reg_get_name		231021	0					
ANR	231036	Identifier	r_reg_get_name		231021	0					
ANR	231037	ArgumentList	anal -> reg		231021	1					
ANR	231038	Argument	anal -> reg		231021	0					
ANR	231039	PtrMemberAccess	anal -> reg		231021	0					
ANR	231040	Identifier	anal		231021	0					
ANR	231041	Identifier	reg		231021	1					
ANR	231042	Argument	R_REG_NAME_SP		231021	1					
ANR	231043	Identifier	R_REG_NAME_SP		231021	0					
ANR	231044	IdentifierDeclStatement	"ut64 sp = r_reg_getv ( anal -> reg , sp_name ) ;"	46:2:1516:1557	231021	1	True				
ANR	231045	IdentifierDecl	"sp = r_reg_getv ( anal -> reg , sp_name )"		231021	0					
ANR	231046	IdentifierDeclType	ut64		231021	0					
ANR	231047	Identifier	sp		231021	1					
ANR	231048	AssignmentExpression	"sp = r_reg_getv ( anal -> reg , sp_name )"		231021	2		=			
ANR	231049	Identifier	sp		231021	0					
ANR	231050	CallExpression	"r_reg_getv ( anal -> reg , sp_name )"		231021	1					
ANR	231051	Callee	r_reg_getv		231021	0					
ANR	231052	Identifier	r_reg_getv		231021	0					
ANR	231053	ArgumentList	anal -> reg		231021	1					
ANR	231054	Argument	anal -> reg		231021	0					
ANR	231055	PtrMemberAccess	anal -> reg		231021	0					
ANR	231056	Identifier	anal		231021	0					
ANR	231057	Identifier	reg		231021	1					
ANR	231058	Argument	sp_name		231021	1					
ANR	231059	Identifier	sp_name		231021	0					
ANR	231060	IdentifierDeclStatement	"ut64 write_addr = sdb_num_get ( trace , sdb_fmt ( ""%d.mem.write"" , idx ) , 0 ) ;"	47:2:1561:1632	231021	2	True				
ANR	231061	IdentifierDecl	"write_addr = sdb_num_get ( trace , sdb_fmt ( ""%d.mem.write"" , idx ) , 0 )"		231021	0					
ANR	231062	IdentifierDeclType	ut64		231021	0					
ANR	231063	Identifier	write_addr		231021	1					
ANR	231064	AssignmentExpression	"write_addr = sdb_num_get ( trace , sdb_fmt ( ""%d.mem.write"" , idx ) , 0 )"		231021	2		=			
ANR	231065	Identifier	write_addr		231021	0					
ANR	231066	CallExpression	"sdb_num_get ( trace , sdb_fmt ( ""%d.mem.write"" , idx ) , 0 )"		231021	1					
ANR	231067	Callee	sdb_num_get		231021	0					
ANR	231068	Identifier	sdb_num_get		231021	0					
ANR	231069	ArgumentList	trace		231021	1					
ANR	231070	Argument	trace		231021	0					
ANR	231071	Identifier	trace		231021	0					
ANR	231072	Argument	"sdb_fmt ( ""%d.mem.write"" , idx )"		231021	1					
ANR	231073	CallExpression	"sdb_fmt ( ""%d.mem.write"" , idx )"		231021	0					
ANR	231074	Callee	sdb_fmt		231021	0					
ANR	231075	Identifier	sdb_fmt		231021	0					
ANR	231076	ArgumentList	"""%d.mem.write"""		231021	1					
ANR	231077	Argument	"""%d.mem.write"""		231021	0					
ANR	231078	PrimaryExpression	"""%d.mem.write"""		231021	0					
ANR	231079	Argument	idx		231021	1					
ANR	231080	Identifier	idx		231021	0					
ANR	231081	Argument	0		231021	2					
ANR	231082	PrimaryExpression	0		231021	0					
ANR	231083	ReturnStatement	return ( write_addr == sp + size ) ;	48:2:1636:1668	231021	3	True				
ANR	231084	EqualityExpression	write_addr == sp + size		231021	0		==			
ANR	231085	Identifier	write_addr		231021	0					
ANR	231086	AdditiveExpression	sp + size		231021	1		+			
ANR	231087	Identifier	sp		231021	0					
ANR	231088	Identifier	size		231021	1					
ANR	231089	ReturnStatement	"return SDB_CONTAINS ( idx , place ) ;"	50:1:1674:1706	231021	1	True				
ANR	231090	CallExpression	"SDB_CONTAINS ( idx , place )"		231021	0					
ANR	231091	Callee	SDB_CONTAINS		231021	0					
ANR	231092	Identifier	SDB_CONTAINS		231021	0					
ANR	231093	ArgumentList	idx		231021	1					
ANR	231094	Argument	idx		231021	0					
ANR	231095	Identifier	idx		231021	0					
ANR	231096	Argument	place		231021	1					
ANR	231097	Identifier	place		231021	0					
ANR	231098	ReturnType	static bool		231021	1					
ANR	231099	Identifier	type_pos_hit		231021	2					
ANR	231100	ParameterList	"RAnal * anal , Sdb * trace , bool in_stack , int idx , int size , const char * place"		231021	3					
ANR	231101	Parameter	RAnal * anal	43:25:1350:1360	231021	0	True				
ANR	231102	ParameterType	RAnal *		231021	0					
ANR	231103	Identifier	anal		231021	1					
ANR	231104	Parameter	Sdb * trace	43:38:1363:1372	231021	1	True				
ANR	231105	ParameterType	Sdb *		231021	0					
ANR	231106	Identifier	trace		231021	1					
ANR	231107	Parameter	bool in_stack	43:50:1375:1387	231021	2	True				
ANR	231108	ParameterType	bool		231021	0					
ANR	231109	Identifier	in_stack		231021	1					
ANR	231110	Parameter	int idx	43:65:1390:1396	231021	3	True				
ANR	231111	ParameterType	int		231021	0					
ANR	231112	Identifier	idx		231021	1					
ANR	231113	Parameter	int size	43:74:1399:1406	231021	4	True				
ANR	231114	ParameterType	int		231021	0					
ANR	231115	Identifier	size		231021	1					
ANR	231116	Parameter	const char * place	43:84:1409:1425	231021	5	True				
ANR	231117	ParameterType	const char *		231021	0					
ANR	231118	Identifier	place		231021	1					
ANR	231119	CFGEntryNode	ENTRY		231021		True				
ANR	231120	CFGExitNode	EXIT		231021		True				
ANR	231121	Symbol	sdb_num_get		231021						
ANR	231122	Symbol	anal -> reg		231021						
ANR	231123	Symbol	trace		231021						
ANR	231124	Symbol	* anal		231021						
ANR	231125	Symbol	SDB_CONTAINS		231021						
ANR	231126	Symbol	R_REG_NAME_SP		231021						
ANR	231127	Symbol	size		231021						
ANR	231128	Symbol	sp_name		231021						
ANR	231129	Symbol	anal		231021						
ANR	231130	Symbol	r_reg_get_name		231021						
ANR	231131	Symbol	place		231021						
ANR	231132	Symbol	r_reg_getv		231021						
ANR	231133	Symbol	idx		231021						
ANR	231134	Symbol	write_addr		231021						
ANR	231135	Symbol	sp		231021						
ANR	231136	Symbol	sdb_fmt		231021						
ANR	231137	Symbol	in_stack		231021						
ANR	231138	Function	var_rename	53:0:1711:2321							
ANR	231139	FunctionDef	"var_rename (RAnal * anal , RAnalVar * v , const char * name , ut64 addr)"		231138	0					
ANR	231140	CompoundStatement		53:78:1789:2321	231138	0					
ANR	231141	IfStatement	if ( ! name || ! v )		231138	0					
ANR	231142	Condition	! name || ! v	54:5:1796:1806	231138	0	True				
ANR	231143	OrExpression	! name || ! v		231138	0		||			
ANR	231144	UnaryOperationExpression	! name		231138	0					
ANR	231145	UnaryOperator	!		231138	0					
ANR	231146	Identifier	name		231138	1					
ANR	231147	UnaryOperationExpression	! v		231138	1					
ANR	231148	UnaryOperator	!		231138	0					
ANR	231149	Identifier	v		231138	1					
ANR	231150	CompoundStatement		2:18:19:19	231138	1					
ANR	231151	ReturnStatement	return ;	55:2:1813:1819	231138	0	True				
ANR	231152	IfStatement	"if ( ! * name || ! strcmp ( name , ""..."" ) )"		231138	1					
ANR	231153	Condition	"! * name || ! strcmp ( name , ""..."" )"	57:5:1829:1860	231138	0	True				
ANR	231154	OrExpression	"! * name || ! strcmp ( name , ""..."" )"		231138	0		||			
ANR	231155	UnaryOperationExpression	! * name		231138	0					
ANR	231156	UnaryOperator	!		231138	0					
ANR	231157	UnaryOperationExpression	* name		231138	1					
ANR	231158	UnaryOperator	*		231138	0					
ANR	231159	Identifier	name		231138	1					
ANR	231160	UnaryOperationExpression	"! strcmp ( name , ""..."" )"		231138	1					
ANR	231161	UnaryOperator	!		231138	0					
ANR	231162	CallExpression	"strcmp ( name , ""..."" )"		231138	1					
ANR	231163	Callee	strcmp		231138	0					
ANR	231164	Identifier	strcmp		231138	0					
ANR	231165	ArgumentList	name		231138	1					
ANR	231166	Argument	name		231138	0					
ANR	231167	Identifier	name		231138	0					
ANR	231168	Argument	"""..."""		231138	1					
ANR	231169	PrimaryExpression	"""..."""		231138	0					
ANR	231170	CompoundStatement		5:39:73:73	231138	1					
ANR	231171	ReturnStatement	return ;	58:2:1867:1873	231138	0	True				
ANR	231172	IdentifierDeclStatement	"bool is_default = ( r_str_startswith ( v -> name , VARPREFIX ) || r_str_startswith ( v -> name , ARGPREFIX ) ) ? true : false ;"	60:1:1879:1993	231138	2	True				
ANR	231173	IdentifierDecl	"is_default = ( r_str_startswith ( v -> name , VARPREFIX ) || r_str_startswith ( v -> name , ARGPREFIX ) ) ? true : false"		231138	0					
ANR	231174	IdentifierDeclType	bool		231138	0					
ANR	231175	Identifier	is_default		231138	1					
ANR	231176	AssignmentExpression	"is_default = ( r_str_startswith ( v -> name , VARPREFIX ) || r_str_startswith ( v -> name , ARGPREFIX ) ) ? true : false"		231138	2		=			
ANR	231177	Identifier	is_default		231138	0					
ANR	231178	ConditionalExpression	"( r_str_startswith ( v -> name , VARPREFIX ) || r_str_startswith ( v -> name , ARGPREFIX ) ) ? true : false"		231138	1					
ANR	231179	Condition	"r_str_startswith ( v -> name , VARPREFIX ) || r_str_startswith ( v -> name , ARGPREFIX )"		231138	0					
ANR	231180	OrExpression	"r_str_startswith ( v -> name , VARPREFIX ) || r_str_startswith ( v -> name , ARGPREFIX )"		231138	0		||			
ANR	231181	CallExpression	"r_str_startswith ( v -> name , VARPREFIX )"		231138	0					
ANR	231182	Callee	r_str_startswith		231138	0					
ANR	231183	Identifier	r_str_startswith		231138	0					
ANR	231184	ArgumentList	v -> name		231138	1					
ANR	231185	Argument	v -> name		231138	0					
ANR	231186	PtrMemberAccess	v -> name		231138	0					
ANR	231187	Identifier	v		231138	0					
ANR	231188	Identifier	name		231138	1					
ANR	231189	Argument	VARPREFIX		231138	1					
ANR	231190	Identifier	VARPREFIX		231138	0					
ANR	231191	CallExpression	"r_str_startswith ( v -> name , ARGPREFIX )"		231138	1					
ANR	231192	Callee	r_str_startswith		231138	0					
ANR	231193	Identifier	r_str_startswith		231138	0					
ANR	231194	ArgumentList	v -> name		231138	1					
ANR	231195	Argument	v -> name		231138	0					
ANR	231196	PtrMemberAccess	v -> name		231138	0					
ANR	231197	Identifier	v		231138	0					
ANR	231198	Identifier	name		231138	1					
ANR	231199	Argument	ARGPREFIX		231138	1					
ANR	231200	Identifier	ARGPREFIX		231138	0					
ANR	231201	Identifier	true		231138	1					
ANR	231202	Identifier	false		231138	2					
ANR	231203	IfStatement	if ( * name == '*' )		231138	3					
ANR	231204	Condition	* name == '*'	62:5:2000:2011	231138	0	True				
ANR	231205	EqualityExpression	* name == '*'		231138	0		==			
ANR	231206	UnaryOperationExpression	* name		231138	0					
ANR	231207	UnaryOperator	*		231138	0					
ANR	231208	Identifier	name		231138	1					
ANR	231209	PrimaryExpression	'*'		231138	1					
ANR	231210	CompoundStatement		10:19:224:224	231138	1					
ANR	231211	ExpressionStatement	name ++	63:2:2018:2024	231138	0	True				
ANR	231212	PostIncDecOperationExpression	name ++		231138	0					
ANR	231213	Identifier	name		231138	0					
ANR	231214	IncDec	++		231138	1					
ANR	231215	IfStatement	if ( ! is_default && ( strlen ( v -> name ) > strlen ( name ) ) )		231138	4					
ANR	231216	Condition	! is_default && ( strlen ( v -> name ) > strlen ( name ) )	66:5:2100:2148	231138	0	True				
ANR	231217	AndExpression	! is_default && ( strlen ( v -> name ) > strlen ( name ) )		231138	0		&&			
ANR	231218	UnaryOperationExpression	! is_default		231138	0					
ANR	231219	UnaryOperator	!		231138	0					
ANR	231220	Identifier	is_default		231138	1					
ANR	231221	RelationalExpression	strlen ( v -> name ) > strlen ( name )		231138	1		>			
ANR	231222	CallExpression	strlen ( v -> name )		231138	0					
ANR	231223	Callee	strlen		231138	0					
ANR	231224	Identifier	strlen		231138	0					
ANR	231225	ArgumentList	v -> name		231138	1					
ANR	231226	Argument	v -> name		231138	0					
ANR	231227	PtrMemberAccess	v -> name		231138	0					
ANR	231228	Identifier	v		231138	0					
ANR	231229	Identifier	name		231138	1					
ANR	231230	CallExpression	strlen ( name )		231138	1					
ANR	231231	Callee	strlen		231138	0					
ANR	231232	Identifier	strlen		231138	0					
ANR	231233	ArgumentList	name		231138	1					
ANR	231234	Argument	name		231138	0					
ANR	231235	Identifier	name		231138	0					
ANR	231236	CompoundStatement		14:56:361:361	231138	1					
ANR	231237	ReturnStatement	return ;	67:2:2155:2161	231138	0	True				
ANR	231238	IdentifierDeclStatement	"RAnalFunction * fcn = r_anal_get_fcn_in ( anal , addr , 0 ) ;"	69:1:2167:2221	231138	5	True				
ANR	231239	IdentifierDecl	"* fcn = r_anal_get_fcn_in ( anal , addr , 0 )"		231138	0					
ANR	231240	IdentifierDeclType	RAnalFunction *		231138	0					
ANR	231241	Identifier	fcn		231138	1					
ANR	231242	AssignmentExpression	"* fcn = r_anal_get_fcn_in ( anal , addr , 0 )"		231138	2		=			
ANR	231243	Identifier	fcn		231138	0					
ANR	231244	CallExpression	"r_anal_get_fcn_in ( anal , addr , 0 )"		231138	1					
ANR	231245	Callee	r_anal_get_fcn_in		231138	0					
ANR	231246	Identifier	r_anal_get_fcn_in		231138	0					
ANR	231247	ArgumentList	anal		231138	1					
ANR	231248	Argument	anal		231138	0					
ANR	231249	Identifier	anal		231138	0					
ANR	231250	Argument	addr		231138	1					
ANR	231251	Identifier	addr		231138	0					
ANR	231252	Argument	0		231138	2					
ANR	231253	PrimaryExpression	0		231138	0					
ANR	231254	IfStatement	if ( ! fcn )		231138	6					
ANR	231255	Condition	! fcn	70:5:2228:2231	231138	0	True				
ANR	231256	UnaryOperationExpression	! fcn		231138	0					
ANR	231257	UnaryOperator	!		231138	0					
ANR	231258	Identifier	fcn		231138	1					
ANR	231259	CompoundStatement		18:11:444:444	231138	1					
ANR	231260	ReturnStatement	return ;	71:2:2238:2244	231138	0	True				
ANR	231261	ExpressionStatement	"r_anal_var_rename ( anal , fcn -> addr , 1 , v -> kind , v -> name , name , false )"	73:1:2250:2319	231138	7	True				
ANR	231262	CallExpression	"r_anal_var_rename ( anal , fcn -> addr , 1 , v -> kind , v -> name , name , false )"		231138	0					
ANR	231263	Callee	r_anal_var_rename		231138	0					
ANR	231264	Identifier	r_anal_var_rename		231138	0					
ANR	231265	ArgumentList	anal		231138	1					
ANR	231266	Argument	anal		231138	0					
ANR	231267	Identifier	anal		231138	0					
ANR	231268	Argument	fcn -> addr		231138	1					
ANR	231269	PtrMemberAccess	fcn -> addr		231138	0					
ANR	231270	Identifier	fcn		231138	0					
ANR	231271	Identifier	addr		231138	1					
ANR	231272	Argument	1		231138	2					
ANR	231273	PrimaryExpression	1		231138	0					
ANR	231274	Argument	v -> kind		231138	3					
ANR	231275	PtrMemberAccess	v -> kind		231138	0					
ANR	231276	Identifier	v		231138	0					
ANR	231277	Identifier	kind		231138	1					
ANR	231278	Argument	v -> name		231138	4					
ANR	231279	PtrMemberAccess	v -> name		231138	0					
ANR	231280	Identifier	v		231138	0					
ANR	231281	Identifier	name		231138	1					
ANR	231282	Argument	name		231138	5					
ANR	231283	Identifier	name		231138	0					
ANR	231284	Argument	false		231138	6					
ANR	231285	Identifier	false		231138	0					
ANR	231286	ReturnType	static void		231138	1					
ANR	231287	Identifier	var_rename		231138	2					
ANR	231288	ParameterList	"RAnal * anal , RAnalVar * v , const char * name , ut64 addr"		231138	3					
ANR	231289	Parameter	RAnal * anal	53:23:1734:1744	231138	0	True				
ANR	231290	ParameterType	RAnal *		231138	0					
ANR	231291	Identifier	anal		231138	1					
ANR	231292	Parameter	RAnalVar * v	53:36:1747:1757	231138	1	True				
ANR	231293	ParameterType	RAnalVar *		231138	0					
ANR	231294	Identifier	v		231138	1					
ANR	231295	Parameter	const char * name	53:49:1760:1775	231138	2	True				
ANR	231296	ParameterType	const char *		231138	0					
ANR	231297	Identifier	name		231138	1					
ANR	231298	Parameter	ut64 addr	53:67:1778:1786	231138	3	True				
ANR	231299	ParameterType	ut64		231138	0					
ANR	231300	Identifier	addr		231138	1					
ANR	231301	CFGEntryNode	ENTRY		231138		True				
ANR	231302	CFGExitNode	EXIT		231138		True				
ANR	231303	Symbol	strcmp		231138						
ANR	231304	Symbol	* name		231138						
ANR	231305	Symbol	* v		231138						
ANR	231306	Symbol	r_str_startswith		231138						
ANR	231307	Symbol	* fcn		231138						
ANR	231308	Symbol	false		231138						
ANR	231309	Symbol	VARPREFIX		231138						
ANR	231310	Symbol	ARGPREFIX		231138						
ANR	231311	Symbol	is_default		231138						
ANR	231312	Symbol	fcn		231138						
ANR	231313	Symbol	strlen		231138						
ANR	231314	Symbol	r_anal_get_fcn_in		231138						
ANR	231315	Symbol	v -> kind		231138						
ANR	231316	Symbol	anal		231138						
ANR	231317	Symbol	v		231138						
ANR	231318	Symbol	name		231138						
ANR	231319	Symbol	true		231138						
ANR	231320	Symbol	fcn -> addr		231138						
ANR	231321	Symbol	addr		231138						
ANR	231322	Symbol	v -> name		231138						
ANR	231323	Function	var_retype	76:0:2324:4268							
ANR	231324	FunctionDef	"var_retype (RAnal * anal , RAnalVar * var , const char * vname , char * type , ut64 addr , bool ref , bool pfx)"		231323	0					
ANR	231325	CompoundStatement		76:113:2437:4268	231323	0					
ANR	231326	IfStatement	if ( ! type || ! var )		231323	0					
ANR	231327	Condition	! type || ! var	77:5:2444:2456	231323	0	True				
ANR	231328	OrExpression	! type || ! var		231323	0		||			
ANR	231329	UnaryOperationExpression	! type		231323	0					
ANR	231330	UnaryOperator	!		231323	0					
ANR	231331	Identifier	type		231323	1					
ANR	231332	UnaryOperationExpression	! var		231323	1					
ANR	231333	UnaryOperator	!		231323	0					
ANR	231334	Identifier	var		231323	1					
ANR	231335	CompoundStatement		2:20:21:21	231323	1					
ANR	231336	ReturnStatement	return ;	78:2:2463:2469	231323	0	True				
ANR	231337	IdentifierDeclStatement	char * trim = type ;	80:1:2475:2492	231323	1	True				
ANR	231338	IdentifierDecl	* trim = type		231323	0					
ANR	231339	IdentifierDeclType	char *		231323	0					
ANR	231340	Identifier	trim		231323	1					
ANR	231341	AssignmentExpression	* trim = type		231323	2		=			
ANR	231342	Identifier	type		231323	0					
ANR	231343	Identifier	type		231323	1					
ANR	231344	ExpressionStatement	r_str_trim ( trim )	81:1:2495:2512	231323	2	True				
ANR	231345	CallExpression	r_str_trim ( trim )		231323	0					
ANR	231346	Callee	r_str_trim		231323	0					
ANR	231347	Identifier	r_str_trim		231323	0					
ANR	231348	ArgumentList	trim		231323	1					
ANR	231349	Argument	trim		231323	0					
ANR	231350	Identifier	trim		231323	0					
ANR	231351	IfStatement	if ( ! * trim )		231323	3					
ANR	231352	Condition	! * trim	82:5:2519:2524	231323	0	True				
ANR	231353	UnaryOperationExpression	! * trim		231323	0					
ANR	231354	UnaryOperator	!		231323	0					
ANR	231355	UnaryOperationExpression	* trim		231323	1					
ANR	231356	UnaryOperator	*		231323	0					
ANR	231357	Identifier	trim		231323	1					
ANR	231358	CompoundStatement		7:13:89:89	231323	1					
ANR	231359	ReturnStatement	return ;	83:2:2531:2537	231323	0	True				
ANR	231360	IdentifierDeclStatement	bool is_ptr = ( vname && * vname == '*' ) ? true : false ;	85:1:2543:2594	231323	4	True				
ANR	231361	IdentifierDecl	is_ptr = ( vname && * vname == '*' ) ? true : false		231323	0					
ANR	231362	IdentifierDeclType	bool		231323	0					
ANR	231363	Identifier	is_ptr		231323	1					
ANR	231364	AssignmentExpression	is_ptr = ( vname && * vname == '*' ) ? true : false		231323	2		=			
ANR	231365	Identifier	is_ptr		231323	0					
ANR	231366	ConditionalExpression	( vname && * vname == '*' ) ? true : false		231323	1					
ANR	231367	Condition	vname && * vname == '*'		231323	0					
ANR	231368	AndExpression	vname && * vname == '*'		231323	0		&&			
ANR	231369	Identifier	vname		231323	0					
ANR	231370	EqualityExpression	* vname == '*'		231323	1		==			
ANR	231371	UnaryOperationExpression	* vname		231323	0					
ANR	231372	UnaryOperator	*		231323	0					
ANR	231373	Identifier	vname		231323	1					
ANR	231374	PrimaryExpression	'*'		231323	1					
ANR	231375	Identifier	true		231323	1					
ANR	231376	Identifier	false		231323	2					
ANR	231377	IfStatement	"if ( ! strncmp ( trim , ""int"" , 3 ) || ( ! is_ptr && ! strcmp ( trim , ""void"" ) ) )"		231323	5					
ANR	231378	Condition	"! strncmp ( trim , ""int"" , 3 ) || ( ! is_ptr && ! strcmp ( trim , ""void"" ) )"	86:5:2601:2664	231323	0	True				
ANR	231379	OrExpression	"! strncmp ( trim , ""int"" , 3 ) || ( ! is_ptr && ! strcmp ( trim , ""void"" ) )"		231323	0		||			
ANR	231380	UnaryOperationExpression	"! strncmp ( trim , ""int"" , 3 )"		231323	0					
ANR	231381	UnaryOperator	!		231323	0					
ANR	231382	CallExpression	"strncmp ( trim , ""int"" , 3 )"		231323	1					
ANR	231383	Callee	strncmp		231323	0					
ANR	231384	Identifier	strncmp		231323	0					
ANR	231385	ArgumentList	trim		231323	1					
ANR	231386	Argument	trim		231323	0					
ANR	231387	Identifier	trim		231323	0					
ANR	231388	Argument	"""int"""		231323	1					
ANR	231389	PrimaryExpression	"""int"""		231323	0					
ANR	231390	Argument	3		231323	2					
ANR	231391	PrimaryExpression	3		231323	0					
ANR	231392	AndExpression	"! is_ptr && ! strcmp ( trim , ""void"" )"		231323	1		&&			
ANR	231393	UnaryOperationExpression	! is_ptr		231323	0					
ANR	231394	UnaryOperator	!		231323	0					
ANR	231395	Identifier	is_ptr		231323	1					
ANR	231396	UnaryOperationExpression	"! strcmp ( trim , ""void"" )"		231323	1					
ANR	231397	UnaryOperator	!		231323	0					
ANR	231398	CallExpression	"strcmp ( trim , ""void"" )"		231323	1					
ANR	231399	Callee	strcmp		231323	0					
ANR	231400	Identifier	strcmp		231323	0					
ANR	231401	ArgumentList	trim		231323	1					
ANR	231402	Argument	trim		231323	0					
ANR	231403	Identifier	trim		231323	0					
ANR	231404	Argument	"""void"""		231323	1					
ANR	231405	PrimaryExpression	"""void"""		231323	0					
ANR	231406	CompoundStatement		11:71:229:229	231323	1					
ANR	231407	ReturnStatement	return ;	88:2:2697:2703	231323	0	True				
ANR	231408	IdentifierDeclStatement	const char * expand = var -> type ;	90:1:2709:2739	231323	6	True				
ANR	231409	IdentifierDecl	* expand = var -> type		231323	0					
ANR	231410	IdentifierDeclType	const char *		231323	0					
ANR	231411	Identifier	expand		231323	1					
ANR	231412	AssignmentExpression	* expand = var -> type		231323	2		=			
ANR	231413	Identifier	expand		231323	0					
ANR	231414	PtrMemberAccess	var -> type		231323	1					
ANR	231415	Identifier	var		231323	0					
ANR	231416	Identifier	type		231323	1					
ANR	231417	IfStatement	"if ( ! strcmp ( var -> type , ""int32_t"" ) )"		231323	7					
ANR	231418	Condition	"! strcmp ( var -> type , ""int32_t"" )"	91:5:2746:2774	231323	0	True				
ANR	231419	UnaryOperationExpression	"! strcmp ( var -> type , ""int32_t"" )"		231323	0					
ANR	231420	UnaryOperator	!		231323	0					
ANR	231421	CallExpression	"strcmp ( var -> type , ""int32_t"" )"		231323	1					
ANR	231422	Callee	strcmp		231323	0					
ANR	231423	Identifier	strcmp		231323	0					
ANR	231424	ArgumentList	var -> type		231323	1					
ANR	231425	Argument	var -> type		231323	0					
ANR	231426	PtrMemberAccess	var -> type		231323	0					
ANR	231427	Identifier	var		231323	0					
ANR	231428	Identifier	type		231323	1					
ANR	231429	Argument	"""int32_t"""		231323	1					
ANR	231430	PrimaryExpression	"""int32_t"""		231323	0					
ANR	231431	CompoundStatement		16:36:339:339	231323	1					
ANR	231432	ExpressionStatement	"expand = ""int"""	92:2:2781:2795	231323	0	True				
ANR	231433	AssignmentExpression	"expand = ""int"""		231323	0		=			
ANR	231434	Identifier	expand		231323	0					
ANR	231435	PrimaryExpression	"""int"""		231323	1					
ANR	231436	ElseStatement	else		231323	0					
ANR	231437	IfStatement	"if ( ! strcmp ( var -> type , ""uint32_t"" ) )"		231323	0					
ANR	231438	Condition	"! strcmp ( var -> type , ""uint32_t"" )"	93:12:2809:2838	231323	0	True				
ANR	231439	UnaryOperationExpression	"! strcmp ( var -> type , ""uint32_t"" )"		231323	0					
ANR	231440	UnaryOperator	!		231323	0					
ANR	231441	CallExpression	"strcmp ( var -> type , ""uint32_t"" )"		231323	1					
ANR	231442	Callee	strcmp		231323	0					
ANR	231443	Identifier	strcmp		231323	0					
ANR	231444	ArgumentList	var -> type		231323	1					
ANR	231445	Argument	var -> type		231323	0					
ANR	231446	PtrMemberAccess	var -> type		231323	0					
ANR	231447	Identifier	var		231323	0					
ANR	231448	Identifier	type		231323	1					
ANR	231449	Argument	"""uint32_t"""		231323	1					
ANR	231450	PrimaryExpression	"""uint32_t"""		231323	0					
ANR	231451	CompoundStatement		18:44:403:403	231323	1					
ANR	231452	ExpressionStatement	"expand = ""unsigned int"""	94:2:2845:2868	231323	0	True				
ANR	231453	AssignmentExpression	"expand = ""unsigned int"""		231323	0		=			
ANR	231454	Identifier	expand		231323	0					
ANR	231455	PrimaryExpression	"""unsigned int"""		231323	1					
ANR	231456	ElseStatement	else		231323	0					
ANR	231457	IfStatement	"if ( ! strcmp ( var -> type , ""uint64_t"" ) )"		231323	0					
ANR	231458	Condition	"! strcmp ( var -> type , ""uint64_t"" )"	95:12:2882:2911	231323	0	True				
ANR	231459	UnaryOperationExpression	"! strcmp ( var -> type , ""uint64_t"" )"		231323	0					
ANR	231460	UnaryOperator	!		231323	0					
ANR	231461	CallExpression	"strcmp ( var -> type , ""uint64_t"" )"		231323	1					
ANR	231462	Callee	strcmp		231323	0					
ANR	231463	Identifier	strcmp		231323	0					
ANR	231464	ArgumentList	var -> type		231323	1					
ANR	231465	Argument	var -> type		231323	0					
ANR	231466	PtrMemberAccess	var -> type		231323	0					
ANR	231467	Identifier	var		231323	0					
ANR	231468	Identifier	type		231323	1					
ANR	231469	Argument	"""uint64_t"""		231323	1					
ANR	231470	PrimaryExpression	"""uint64_t"""		231323	0					
ANR	231471	CompoundStatement		20:44:476:476	231323	1					
ANR	231472	ExpressionStatement	"expand = ""unsigned long long"""	96:2:2918:2947	231323	0	True				
ANR	231473	AssignmentExpression	"expand = ""unsigned long long"""		231323	0		=			
ANR	231474	Identifier	expand		231323	0					
ANR	231475	PrimaryExpression	"""unsigned long long"""		231323	1					
ANR	231476	IdentifierDeclStatement	"const char * tmp = strstr ( expand , ""int"" ) ;"	98:1:2953:2993	231323	8	True				
ANR	231477	IdentifierDecl	"* tmp = strstr ( expand , ""int"" )"		231323	0					
ANR	231478	IdentifierDeclType	const char *		231323	0					
ANR	231479	Identifier	tmp		231323	1					
ANR	231480	AssignmentExpression	"* tmp = strstr ( expand , ""int"" )"		231323	2		=			
ANR	231481	Identifier	tmp		231323	0					
ANR	231482	CallExpression	"strstr ( expand , ""int"" )"		231323	1					
ANR	231483	Callee	strstr		231323	0					
ANR	231484	Identifier	strstr		231323	0					
ANR	231485	ArgumentList	expand		231323	1					
ANR	231486	Argument	expand		231323	0					
ANR	231487	Identifier	expand		231323	0					
ANR	231488	Argument	"""int"""		231323	1					
ANR	231489	PrimaryExpression	"""int"""		231323	0					
ANR	231490	IdentifierDeclStatement	bool is_default = tmp ? true : false ;	99:1:2996:3030	231323	9	True				
ANR	231491	IdentifierDecl	is_default = tmp ? true : false		231323	0					
ANR	231492	IdentifierDeclType	bool		231323	0					
ANR	231493	Identifier	is_default		231323	1					
ANR	231494	AssignmentExpression	is_default = tmp ? true : false		231323	2		=			
ANR	231495	Identifier	is_default		231323	0					
ANR	231496	ConditionalExpression	tmp ? true : false		231323	1					
ANR	231497	Condition	tmp		231323	0					
ANR	231498	Identifier	tmp		231323	0					
ANR	231499	Identifier	true		231323	1					
ANR	231500	Identifier	false		231323	2					
ANR	231501	IfStatement	"if ( ! is_default && strncmp ( var -> type , ""void"" , 4 ) )"		231323	10					
ANR	231502	Condition	"! is_default && strncmp ( var -> type , ""void"" , 4 )"	100:5:3037:3081	231323	0	True				
ANR	231503	AndExpression	"! is_default && strncmp ( var -> type , ""void"" , 4 )"		231323	0		&&			
ANR	231504	UnaryOperationExpression	! is_default		231323	0					
ANR	231505	UnaryOperator	!		231323	0					
ANR	231506	Identifier	is_default		231323	1					
ANR	231507	CallExpression	"strncmp ( var -> type , ""void"" , 4 )"		231323	1					
ANR	231508	Callee	strncmp		231323	0					
ANR	231509	Identifier	strncmp		231323	0					
ANR	231510	ArgumentList	var -> type		231323	1					
ANR	231511	Argument	var -> type		231323	0					
ANR	231512	PtrMemberAccess	var -> type		231323	0					
ANR	231513	Identifier	var		231323	0					
ANR	231514	Identifier	type		231323	1					
ANR	231515	Argument	"""void"""		231323	1					
ANR	231516	PrimaryExpression	"""void"""		231323	0					
ANR	231517	Argument	4		231323	2					
ANR	231518	PrimaryExpression	4		231323	0					
ANR	231519	CompoundStatement		25:52:646:646	231323	1					
ANR	231520	ReturnStatement	return ;	103:2:3198:3204	231323	0	True				
ANR	231521	IdentifierDeclStatement	"RStrBuf * sb = r_strbuf_new ( """" ) ;"	105:1:3210:3241	231323	11	True				
ANR	231522	IdentifierDecl	"* sb = r_strbuf_new ( """" )"		231323	0					
ANR	231523	IdentifierDeclType	RStrBuf *		231323	0					
ANR	231524	Identifier	sb		231323	1					
ANR	231525	AssignmentExpression	"* sb = r_strbuf_new ( """" )"		231323	2		=			
ANR	231526	Identifier	sb		231323	0					
ANR	231527	CallExpression	"r_strbuf_new ( """" )"		231323	1					
ANR	231528	Callee	r_strbuf_new		231323	0					
ANR	231529	Identifier	r_strbuf_new		231323	0					
ANR	231530	ArgumentList	""""""		231323	1					
ANR	231531	Argument	""""""		231323	0					
ANR	231532	PrimaryExpression	""""""		231323	0					
ANR	231533	IfStatement	if ( pfx )		231323	12					
ANR	231534	Condition	pfx	106:5:3248:3250	231323	0	True				
ANR	231535	Identifier	pfx		231323	0					
ANR	231536	CompoundStatement		31:10:815:815	231323	1					
ANR	231537	IfStatement	"if ( is_default && strncmp ( var -> type , ""signed"" , 6 ) )"		231323	0					
ANR	231538	Condition	"is_default && strncmp ( var -> type , ""signed"" , 6 )"	107:6:3261:3306	231323	0	True				
ANR	231539	AndExpression	"is_default && strncmp ( var -> type , ""signed"" , 6 )"		231323	0		&&			
ANR	231540	Identifier	is_default		231323	0					
ANR	231541	CallExpression	"strncmp ( var -> type , ""signed"" , 6 )"		231323	1					
ANR	231542	Callee	strncmp		231323	0					
ANR	231543	Identifier	strncmp		231323	0					
ANR	231544	ArgumentList	var -> type		231323	1					
ANR	231545	Argument	var -> type		231323	0					
ANR	231546	PtrMemberAccess	var -> type		231323	0					
ANR	231547	Identifier	var		231323	0					
ANR	231548	Identifier	type		231323	1					
ANR	231549	Argument	"""signed"""		231323	1					
ANR	231550	PrimaryExpression	"""signed"""		231323	0					
ANR	231551	Argument	6		231323	2					
ANR	231552	PrimaryExpression	6		231323	0					
ANR	231553	CompoundStatement		32:54:871:871	231323	1					
ANR	231554	ExpressionStatement	"r_strbuf_setf ( sb , ""%s %s"" , type , tmp )"	108:3:3314:3352	231323	0	True				
ANR	231555	CallExpression	"r_strbuf_setf ( sb , ""%s %s"" , type , tmp )"		231323	0					
ANR	231556	Callee	r_strbuf_setf		231323	0					
ANR	231557	Identifier	r_strbuf_setf		231323	0					
ANR	231558	ArgumentList	sb		231323	1					
ANR	231559	Argument	sb		231323	0					
ANR	231560	Identifier	sb		231323	0					
ANR	231561	Argument	"""%s %s"""		231323	1					
ANR	231562	PrimaryExpression	"""%s %s"""		231323	0					
ANR	231563	Argument	type		231323	2					
ANR	231564	Identifier	type		231323	0					
ANR	231565	Argument	tmp		231323	3					
ANR	231566	Identifier	tmp		231323	0					
ANR	231567	ElseStatement	else		231323	0					
ANR	231568	CompoundStatement		34:9:925:925	231323	0					
ANR	231569	ExpressionStatement	r_strbuf_free ( sb )	110:3:3368:3386	231323	0	True				
ANR	231570	CallExpression	r_strbuf_free ( sb )		231323	0					
ANR	231571	Callee	r_strbuf_free		231323	0					
ANR	231572	Identifier	r_strbuf_free		231323	0					
ANR	231573	ArgumentList	sb		231323	1					
ANR	231574	Argument	sb		231323	0					
ANR	231575	Identifier	sb		231323	0					
ANR	231576	ReturnStatement	return ;	111:3:3391:3397	231323	1	True				
ANR	231577	ElseStatement	else		231323	0					
ANR	231578	CompoundStatement		38:8:973:973	231323	0					
ANR	231579	ExpressionStatement	"r_strbuf_set ( sb , trim )"	114:2:3415:3438	231323	0	True				
ANR	231580	CallExpression	"r_strbuf_set ( sb , trim )"		231323	0					
ANR	231581	Callee	r_strbuf_set		231323	0					
ANR	231582	Identifier	r_strbuf_set		231323	0					
ANR	231583	ArgumentList	sb		231323	1					
ANR	231584	Argument	sb		231323	0					
ANR	231585	Identifier	sb		231323	0					
ANR	231586	Argument	trim		231323	1					
ANR	231587	Identifier	trim		231323	0					
ANR	231588	IfStatement	"if ( ! strncmp ( r_strbuf_get ( sb ) , ""const "" , 6 ) )"		231323	13					
ANR	231589	Condition	"! strncmp ( r_strbuf_get ( sb ) , ""const "" , 6 )"	116:5:3448:3488	231323	0	True				
ANR	231590	UnaryOperationExpression	"! strncmp ( r_strbuf_get ( sb ) , ""const "" , 6 )"		231323	0					
ANR	231591	UnaryOperator	!		231323	0					
ANR	231592	CallExpression	"strncmp ( r_strbuf_get ( sb ) , ""const "" , 6 )"		231323	1					
ANR	231593	Callee	strncmp		231323	0					
ANR	231594	Identifier	strncmp		231323	0					
ANR	231595	ArgumentList	r_strbuf_get ( sb )		231323	1					
ANR	231596	Argument	r_strbuf_get ( sb )		231323	0					
ANR	231597	CallExpression	r_strbuf_get ( sb )		231323	0					
ANR	231598	Callee	r_strbuf_get		231323	0					
ANR	231599	Identifier	r_strbuf_get		231323	0					
ANR	231600	ArgumentList	sb		231323	1					
ANR	231601	Argument	sb		231323	0					
ANR	231602	Identifier	sb		231323	0					
ANR	231603	Argument	"""const """		231323	1					
ANR	231604	PrimaryExpression	"""const """		231323	0					
ANR	231605	Argument	6		231323	2					
ANR	231606	PrimaryExpression	6		231323	0					
ANR	231607	CompoundStatement		41:48:1053:1053	231323	1					
ANR	231608	ExpressionStatement	"r_strbuf_setf ( sb , ""%s"" , type + 6 )"	119:2:3556:3590	231323	0	True				
ANR	231609	CallExpression	"r_strbuf_setf ( sb , ""%s"" , type + 6 )"		231323	0					
ANR	231610	Callee	r_strbuf_setf		231323	0					
ANR	231611	Identifier	r_strbuf_setf		231323	0					
ANR	231612	ArgumentList	sb		231323	1					
ANR	231613	Argument	sb		231323	0					
ANR	231614	Identifier	sb		231323	0					
ANR	231615	Argument	"""%s"""		231323	1					
ANR	231616	PrimaryExpression	"""%s"""		231323	0					
ANR	231617	Argument	type + 6		231323	2					
ANR	231618	AdditiveExpression	type + 6		231323	0		+			
ANR	231619	Identifier	type		231323	0					
ANR	231620	PrimaryExpression	6		231323	1					
ANR	231621	IfStatement	if ( is_ptr )		231323	14					
ANR	231622	Condition	is_ptr	121:5:3600:3605	231323	0	True				
ANR	231623	Identifier	is_ptr		231323	0					
ANR	231624	CompoundStatement		46:13:1170:1170	231323	1					
ANR	231625	ExpressionStatement	"r_strbuf_append ( sb , "" *"" )"	123:2:3636:3662	231323	0	True				
ANR	231626	CallExpression	"r_strbuf_append ( sb , "" *"" )"		231323	0					
ANR	231627	Callee	r_strbuf_append		231323	0					
ANR	231628	Identifier	r_strbuf_append		231323	0					
ANR	231629	ArgumentList	sb		231323	1					
ANR	231630	Argument	sb		231323	0					
ANR	231631	Identifier	sb		231323	0					
ANR	231632	Argument	""" *"""		231323	1					
ANR	231633	PrimaryExpression	""" *"""		231323	0					
ANR	231634	IfStatement	if ( ref )		231323	15					
ANR	231635	Condition	ref	125:5:3672:3674	231323	0	True				
ANR	231636	Identifier	ref		231323	0					
ANR	231637	CompoundStatement		50:10:1239:1239	231323	1					
ANR	231638	IfStatement	"if ( r_str_endswith ( r_strbuf_get ( sb ) , ""*"" ) )"		231323	0					
ANR	231639	Condition	"r_str_endswith ( r_strbuf_get ( sb ) , ""*"" )"	126:6:3685:3723	231323	0	True				
ANR	231640	CallExpression	"r_str_endswith ( r_strbuf_get ( sb ) , ""*"" )"		231323	0					
ANR	231641	Callee	r_str_endswith		231323	0					
ANR	231642	Identifier	r_str_endswith		231323	0					
ANR	231643	ArgumentList	r_strbuf_get ( sb )		231323	1					
ANR	231644	Argument	r_strbuf_get ( sb )		231323	0					
ANR	231645	CallExpression	r_strbuf_get ( sb )		231323	0					
ANR	231646	Callee	r_strbuf_get		231323	0					
ANR	231647	Identifier	r_strbuf_get		231323	0					
ANR	231648	ArgumentList	sb		231323	1					
ANR	231649	Argument	sb		231323	0					
ANR	231650	Identifier	sb		231323	0					
ANR	231651	Argument	"""*"""		231323	1					
ANR	231652	PrimaryExpression	"""*"""		231323	0					
ANR	231653	CompoundStatement		51:47:1288:1288	231323	1					
ANR	231654	ExpressionStatement	"r_strbuf_append ( sb , ""*"" )"	127:3:3752:3777	231323	0	True				
ANR	231655	CallExpression	"r_strbuf_append ( sb , ""*"" )"		231323	0					
ANR	231656	Callee	r_strbuf_append		231323	0					
ANR	231657	Identifier	r_strbuf_append		231323	0					
ANR	231658	ArgumentList	sb		231323	1					
ANR	231659	Argument	sb		231323	0					
ANR	231660	Identifier	sb		231323	0					
ANR	231661	Argument	"""*"""		231323	1					
ANR	231662	PrimaryExpression	"""*"""		231323	0					
ANR	231663	ElseStatement	else		231323	0					
ANR	231664	CompoundStatement		53:9:1350:1350	231323	0					
ANR	231665	ExpressionStatement	"r_strbuf_append ( sb , "" *"" )"	129:3:3814:3840	231323	0	True				
ANR	231666	CallExpression	"r_strbuf_append ( sb , "" *"" )"		231323	0					
ANR	231667	Callee	r_strbuf_append		231323	0					
ANR	231668	Identifier	r_strbuf_append		231323	0					
ANR	231669	ArgumentList	sb		231323	1					
ANR	231670	Argument	sb		231323	0					
ANR	231671	Identifier	sb		231323	0					
ANR	231672	Argument	""" *"""		231323	1					
ANR	231673	PrimaryExpression	""" *"""		231323	0					
ANR	231674	IdentifierDeclStatement	char * tmp1 = r_strbuf_get ( sb ) ;	133:1:3851:3881	231323	16	True				
ANR	231675	IdentifierDecl	* tmp1 = r_strbuf_get ( sb )		231323	0					
ANR	231676	IdentifierDeclType	char *		231323	0					
ANR	231677	Identifier	tmp1		231323	1					
ANR	231678	AssignmentExpression	* tmp1 = r_strbuf_get ( sb )		231323	2		=			
ANR	231679	Identifier	tmp1		231323	0					
ANR	231680	CallExpression	r_strbuf_get ( sb )		231323	1					
ANR	231681	Callee	r_strbuf_get		231323	0					
ANR	231682	Identifier	r_strbuf_get		231323	0					
ANR	231683	ArgumentList	sb		231323	1					
ANR	231684	Argument	sb		231323	0					
ANR	231685	Identifier	sb		231323	0					
ANR	231686	IfStatement	"if ( r_str_startswith ( tmp1 , ""unsigned long long"" ) )"		231323	17					
ANR	231687	Condition	"r_str_startswith ( tmp1 , ""unsigned long long"" )"	134:5:3888:3932	231323	0	True				
ANR	231688	CallExpression	"r_str_startswith ( tmp1 , ""unsigned long long"" )"		231323	0					
ANR	231689	Callee	r_str_startswith		231323	0					
ANR	231690	Identifier	r_str_startswith		231323	0					
ANR	231691	ArgumentList	tmp1		231323	1					
ANR	231692	Argument	tmp1		231323	0					
ANR	231693	Identifier	tmp1		231323	0					
ANR	231694	Argument	"""unsigned long long"""		231323	1					
ANR	231695	PrimaryExpression	"""unsigned long long"""		231323	0					
ANR	231696	CompoundStatement		59:52:1497:1497	231323	1					
ANR	231697	ExpressionStatement	"r_strbuf_set ( sb , ""uint64_t"" )"	135:2:3939:3968	231323	0	True				
ANR	231698	CallExpression	"r_strbuf_set ( sb , ""uint64_t"" )"		231323	0					
ANR	231699	Callee	r_strbuf_set		231323	0					
ANR	231700	Identifier	r_strbuf_set		231323	0					
ANR	231701	ArgumentList	sb		231323	1					
ANR	231702	Argument	sb		231323	0					
ANR	231703	Identifier	sb		231323	0					
ANR	231704	Argument	"""uint64_t"""		231323	1					
ANR	231705	PrimaryExpression	"""uint64_t"""		231323	0					
ANR	231706	ElseStatement	else		231323	0					
ANR	231707	IfStatement	"if ( r_str_startswith ( tmp1 , ""unsigned"" ) )"		231323	0					
ANR	231708	Condition	"r_str_startswith ( tmp1 , ""unsigned"" )"	136:12:3982:4016	231323	0	True				
ANR	231709	CallExpression	"r_str_startswith ( tmp1 , ""unsigned"" )"		231323	0					
ANR	231710	Callee	r_str_startswith		231323	0					
ANR	231711	Identifier	r_str_startswith		231323	0					
ANR	231712	ArgumentList	tmp1		231323	1					
ANR	231713	Argument	tmp1		231323	0					
ANR	231714	Identifier	tmp1		231323	0					
ANR	231715	Argument	"""unsigned"""		231323	1					
ANR	231716	PrimaryExpression	"""unsigned"""		231323	0					
ANR	231717	CompoundStatement		61:49:1581:1581	231323	1					
ANR	231718	ExpressionStatement	"r_strbuf_set ( sb , ""uint32_t"" )"	137:2:4023:4052	231323	0	True				
ANR	231719	CallExpression	"r_strbuf_set ( sb , ""uint32_t"" )"		231323	0					
ANR	231720	Callee	r_strbuf_set		231323	0					
ANR	231721	Identifier	r_strbuf_set		231323	0					
ANR	231722	ArgumentList	sb		231323	1					
ANR	231723	Argument	sb		231323	0					
ANR	231724	Identifier	sb		231323	0					
ANR	231725	Argument	"""uint32_t"""		231323	1					
ANR	231726	PrimaryExpression	"""uint32_t"""		231323	0					
ANR	231727	ElseStatement	else		231323	0					
ANR	231728	IfStatement	"if ( r_str_startswith ( tmp1 , ""int"" ) )"		231323	0					
ANR	231729	Condition	"r_str_startswith ( tmp1 , ""int"" )"	138:12:4066:4095	231323	0	True				
ANR	231730	CallExpression	"r_str_startswith ( tmp1 , ""int"" )"		231323	0					
ANR	231731	Callee	r_str_startswith		231323	0					
ANR	231732	Identifier	r_str_startswith		231323	0					
ANR	231733	ArgumentList	tmp1		231323	1					
ANR	231734	Argument	tmp1		231323	0					
ANR	231735	Identifier	tmp1		231323	0					
ANR	231736	Argument	"""int"""		231323	1					
ANR	231737	PrimaryExpression	"""int"""		231323	0					
ANR	231738	CompoundStatement		63:44:1660:1660	231323	1					
ANR	231739	ExpressionStatement	"r_strbuf_set ( sb , ""int32_t"" )"	139:2:4102:4130	231323	0	True				
ANR	231740	CallExpression	"r_strbuf_set ( sb , ""int32_t"" )"		231323	0					
ANR	231741	Callee	r_strbuf_set		231323	0					
ANR	231742	Identifier	r_strbuf_set		231323	0					
ANR	231743	ArgumentList	sb		231323	1					
ANR	231744	Argument	sb		231323	0					
ANR	231745	Identifier	sb		231323	0					
ANR	231746	Argument	"""int32_t"""		231323	1					
ANR	231747	PrimaryExpression	"""int32_t"""		231323	0					
ANR	231748	ExpressionStatement	"r_anal_var_retype ( anal , addr , 1 , var -> delta , var -> kind , r_strbuf_get ( sb ) , var -> size , var -> isarg , var -> name )"	141:1:4136:4245	231323	18	True				
ANR	231749	CallExpression	"r_anal_var_retype ( anal , addr , 1 , var -> delta , var -> kind , r_strbuf_get ( sb ) , var -> size , var -> isarg , var -> name )"		231323	0					
ANR	231750	Callee	r_anal_var_retype		231323	0					
ANR	231751	Identifier	r_anal_var_retype		231323	0					
ANR	231752	ArgumentList	anal		231323	1					
ANR	231753	Argument	anal		231323	0					
ANR	231754	Identifier	anal		231323	0					
ANR	231755	Argument	addr		231323	1					
ANR	231756	Identifier	addr		231323	0					
ANR	231757	Argument	1		231323	2					
ANR	231758	PrimaryExpression	1		231323	0					
ANR	231759	Argument	var -> delta		231323	3					
ANR	231760	PtrMemberAccess	var -> delta		231323	0					
ANR	231761	Identifier	var		231323	0					
ANR	231762	Identifier	delta		231323	1					
ANR	231763	Argument	var -> kind		231323	4					
ANR	231764	PtrMemberAccess	var -> kind		231323	0					
ANR	231765	Identifier	var		231323	0					
ANR	231766	Identifier	kind		231323	1					
ANR	231767	Argument	r_strbuf_get ( sb )		231323	5					
ANR	231768	CallExpression	r_strbuf_get ( sb )		231323	0					
ANR	231769	Callee	r_strbuf_get		231323	0					
ANR	231770	Identifier	r_strbuf_get		231323	0					
ANR	231771	ArgumentList	sb		231323	1					
ANR	231772	Argument	sb		231323	0					
ANR	231773	Identifier	sb		231323	0					
ANR	231774	Argument	var -> size		231323	6					
ANR	231775	PtrMemberAccess	var -> size		231323	0					
ANR	231776	Identifier	var		231323	0					
ANR	231777	Identifier	size		231323	1					
ANR	231778	Argument	var -> isarg		231323	7					
ANR	231779	PtrMemberAccess	var -> isarg		231323	0					
ANR	231780	Identifier	var		231323	0					
ANR	231781	Identifier	isarg		231323	1					
ANR	231782	Argument	var -> name		231323	8					
ANR	231783	PtrMemberAccess	var -> name		231323	0					
ANR	231784	Identifier	var		231323	0					
ANR	231785	Identifier	name		231323	1					
ANR	231786	ExpressionStatement	r_strbuf_free ( sb )	142:1:4248:4266	231323	19	True				
ANR	231787	CallExpression	r_strbuf_free ( sb )		231323	0					
ANR	231788	Callee	r_strbuf_free		231323	0					
ANR	231789	Identifier	r_strbuf_free		231323	0					
ANR	231790	ArgumentList	sb		231323	1					
ANR	231791	Argument	sb		231323	0					
ANR	231792	Identifier	sb		231323	0					
ANR	231793	ReturnType	static void		231323	1					
ANR	231794	Identifier	var_retype		231323	2					
ANR	231795	ParameterList	"RAnal * anal , RAnalVar * var , const char * vname , char * type , ut64 addr , bool ref , bool pfx"		231323	3					
ANR	231796	Parameter	RAnal * anal	76:23:2347:2357	231323	0	True				
ANR	231797	ParameterType	RAnal *		231323	0					
ANR	231798	Identifier	anal		231323	1					
ANR	231799	Parameter	RAnalVar * var	76:36:2360:2372	231323	1	True				
ANR	231800	ParameterType	RAnalVar *		231323	0					
ANR	231801	Identifier	var		231323	1					
ANR	231802	Parameter	const char * vname	76:51:2375:2391	231323	2	True				
ANR	231803	ParameterType	const char *		231323	0					
ANR	231804	Identifier	vname		231323	1					
ANR	231805	Parameter	char * type	76:70:2394:2403	231323	3	True				
ANR	231806	ParameterType	char *		231323	0					
ANR	231807	Identifier	type		231323	1					
ANR	231808	Parameter	ut64 addr	76:82:2406:2414	231323	4	True				
ANR	231809	ParameterType	ut64		231323	0					
ANR	231810	Identifier	addr		231323	1					
ANR	231811	Parameter	bool ref	76:93:2417:2424	231323	5	True				
ANR	231812	ParameterType	bool		231323	0					
ANR	231813	Identifier	ref		231323	1					
ANR	231814	Parameter	bool pfx	76:103:2427:2434	231323	6	True				
ANR	231815	ParameterType	bool		231323	0					
ANR	231816	Identifier	pfx		231323	1					
ANR	231817	CFGEntryNode	ENTRY		231323		True				
ANR	231818	CFGExitNode	EXIT		231323		True				
ANR	231819	Symbol	pfx		231323						
ANR	231820	Symbol	var -> type		231323						
ANR	231821	Symbol	type		231323						
ANR	231822	Symbol	tmp1		231323						
ANR	231823	Symbol	var -> size		231323						
ANR	231824	Symbol	var -> delta		231323						
ANR	231825	Symbol	sb		231323						
ANR	231826	Symbol	strncmp		231323						
ANR	231827	Symbol	* var		231323						
ANR	231828	Symbol	ref		231323						
ANR	231829	Symbol	trim		231323						
ANR	231830	Symbol	tmp		231323						
ANR	231831	Symbol	* vname		231323						
ANR	231832	Symbol	r_str_endswith		231323						
ANR	231833	Symbol	addr		231323						
ANR	231834	Symbol	strcmp		231323						
ANR	231835	Symbol	r_str_startswith		231323						
ANR	231836	Symbol	r_strbuf_new		231323						
ANR	231837	Symbol	var		231323						
ANR	231838	Symbol	false		231323						
ANR	231839	Symbol	is_default		231323						
ANR	231840	Symbol	var -> isarg		231323						
ANR	231841	Symbol	expand		231323						
ANR	231842	Symbol	vname		231323						
ANR	231843	Symbol	anal		231323						
ANR	231844	Symbol	strstr		231323						
ANR	231845	Symbol	r_strbuf_get		231323						
ANR	231846	Symbol	is_ptr		231323						
ANR	231847	Symbol	true		231323						
ANR	231848	Symbol	var -> name		231323						
ANR	231849	Symbol	* trim		231323						
ANR	231850	Symbol	var -> kind		231323						
ANR	231851	Function	get_src_regname	145:0:4271:4956							
ANR	231852	FunctionDef	"get_src_regname (RCore * core , ut64 addr , char * regname , int size)"		231851	0					
ANR	231853	CompoundStatement		145:77:4348:4956	231851	0					
ANR	231854	IdentifierDeclStatement	RAnal * anal = core -> anal ;	146:1:4351:4375	231851	0	True				
ANR	231855	IdentifierDecl	* anal = core -> anal		231851	0					
ANR	231856	IdentifierDeclType	RAnal *		231851	0					
ANR	231857	Identifier	anal		231851	1					
ANR	231858	AssignmentExpression	* anal = core -> anal		231851	2		=			
ANR	231859	Identifier	anal		231851	0					
ANR	231860	PtrMemberAccess	core -> anal		231851	1					
ANR	231861	Identifier	core		231851	0					
ANR	231862	Identifier	anal		231851	1					
ANR	231863	IdentifierDeclStatement	"RAnalOp * op = r_core_anal_op ( core , addr , R_ANAL_OP_MASK_VAL | R_ANAL_OP_MASK_ESIL ) ;"	147:1:4378:4461	231851	1	True				
ANR	231864	IdentifierDecl	"* op = r_core_anal_op ( core , addr , R_ANAL_OP_MASK_VAL | R_ANAL_OP_MASK_ESIL )"		231851	0					
ANR	231865	IdentifierDeclType	RAnalOp *		231851	0					
ANR	231866	Identifier	op		231851	1					
ANR	231867	AssignmentExpression	"* op = r_core_anal_op ( core , addr , R_ANAL_OP_MASK_VAL | R_ANAL_OP_MASK_ESIL )"		231851	2		=			
ANR	231868	Identifier	op		231851	0					
ANR	231869	CallExpression	"r_core_anal_op ( core , addr , R_ANAL_OP_MASK_VAL | R_ANAL_OP_MASK_ESIL )"		231851	1					
ANR	231870	Callee	r_core_anal_op		231851	0					
ANR	231871	Identifier	r_core_anal_op		231851	0					
ANR	231872	ArgumentList	core		231851	1					
ANR	231873	Argument	core		231851	0					
ANR	231874	Identifier	core		231851	0					
ANR	231875	Argument	addr		231851	1					
ANR	231876	Identifier	addr		231851	0					
ANR	231877	Argument	R_ANAL_OP_MASK_VAL | R_ANAL_OP_MASK_ESIL		231851	2					
ANR	231878	InclusiveOrExpression	R_ANAL_OP_MASK_VAL | R_ANAL_OP_MASK_ESIL		231851	0		|			
ANR	231879	Identifier	R_ANAL_OP_MASK_VAL		231851	0					
ANR	231880	Identifier	R_ANAL_OP_MASK_ESIL		231851	1					
ANR	231881	IfStatement	if ( ! op )		231851	2					
ANR	231882	Condition	! op	148:5:4468:4470	231851	0	True				
ANR	231883	UnaryOperationExpression	! op		231851	0					
ANR	231884	UnaryOperator	!		231851	0					
ANR	231885	Identifier	op		231851	1					
ANR	231886	CompoundStatement		4:10:124:124	231851	1					
ANR	231887	ReturnStatement	return ;	149:2:4477:4483	231851	0	True				
ANR	231888	IdentifierDeclStatement	char * op_esil = strdup ( r_strbuf_get ( & op -> esil ) ) ;	151:1:4489:4538	231851	3	True				
ANR	231889	IdentifierDecl	* op_esil = strdup ( r_strbuf_get ( & op -> esil ) )		231851	0					
ANR	231890	IdentifierDeclType	char *		231851	0					
ANR	231891	Identifier	op_esil		231851	1					
ANR	231892	AssignmentExpression	* op_esil = strdup ( r_strbuf_get ( & op -> esil ) )		231851	2		=			
ANR	231893	Identifier	op_esil		231851	0					
ANR	231894	CallExpression	strdup ( r_strbuf_get ( & op -> esil ) )		231851	1					
ANR	231895	Callee	strdup		231851	0					
ANR	231896	Identifier	strdup		231851	0					
ANR	231897	ArgumentList	r_strbuf_get ( & op -> esil )		231851	1					
ANR	231898	Argument	r_strbuf_get ( & op -> esil )		231851	0					
ANR	231899	CallExpression	r_strbuf_get ( & op -> esil )		231851	0					
ANR	231900	Callee	r_strbuf_get		231851	0					
ANR	231901	Identifier	r_strbuf_get		231851	0					
ANR	231902	ArgumentList	& op -> esil		231851	1					
ANR	231903	Argument	& op -> esil		231851	0					
ANR	231904	UnaryOperationExpression	& op -> esil		231851	0					
ANR	231905	UnaryOperator	&		231851	0					
ANR	231906	PtrMemberAccess	op -> esil		231851	1					
ANR	231907	Identifier	op		231851	0					
ANR	231908	Identifier	esil		231851	1					
ANR	231909	IdentifierDeclStatement	"char * tmp = strchr ( op_esil , ',' ) ;"	152:1:4541:4574	231851	4	True				
ANR	231910	IdentifierDecl	"* tmp = strchr ( op_esil , ',' )"		231851	0					
ANR	231911	IdentifierDeclType	char *		231851	0					
ANR	231912	Identifier	tmp		231851	1					
ANR	231913	AssignmentExpression	"* tmp = strchr ( op_esil , ',' )"		231851	2		=			
ANR	231914	Identifier	tmp		231851	0					
ANR	231915	CallExpression	"strchr ( op_esil , ',' )"		231851	1					
ANR	231916	Callee	strchr		231851	0					
ANR	231917	Identifier	strchr		231851	0					
ANR	231918	ArgumentList	op_esil		231851	1					
ANR	231919	Argument	op_esil		231851	0					
ANR	231920	Identifier	op_esil		231851	0					
ANR	231921	Argument	"','"		231851	1					
ANR	231922	PrimaryExpression	"','"		231851	0					
ANR	231923	IfStatement	if ( tmp )		231851	5					
ANR	231924	Condition	tmp	153:5:4581:4583	231851	0	True				
ANR	231925	Identifier	tmp		231851	0					
ANR	231926	CompoundStatement		9:10:237:237	231851	1					
ANR	231927	ExpressionStatement	* tmp = '\\0'	154:2:4590:4601	231851	0	True				
ANR	231928	AssignmentExpression	* tmp = '\\0'		231851	0		=			
ANR	231929	UnaryOperationExpression	* tmp		231851	0					
ANR	231930	UnaryOperator	*		231851	0					
ANR	231931	Identifier	tmp		231851	1					
ANR	231932	PrimaryExpression	'\\0'		231851	1					
ANR	231933	ExpressionStatement	"memset ( regname , 0 , size )"	156:1:4607:4632	231851	6	True				
ANR	231934	CallExpression	"memset ( regname , 0 , size )"		231851	0					
ANR	231935	Callee	memset		231851	0					
ANR	231936	Identifier	memset		231851	0					
ANR	231937	ArgumentList	regname		231851	1					
ANR	231938	Argument	regname		231851	0					
ANR	231939	Identifier	regname		231851	0					
ANR	231940	Argument	0		231851	1					
ANR	231941	PrimaryExpression	0		231851	0					
ANR	231942	Argument	size		231851	2					
ANR	231943	Identifier	size		231851	0					
ANR	231944	IdentifierDeclStatement	"RRegItem * ri = r_reg_get ( anal -> reg , op_esil , - 1 ) ;"	157:1:4635:4684	231851	7	True				
ANR	231945	IdentifierDecl	"* ri = r_reg_get ( anal -> reg , op_esil , - 1 )"		231851	0					
ANR	231946	IdentifierDeclType	RRegItem *		231851	0					
ANR	231947	Identifier	ri		231851	1					
ANR	231948	AssignmentExpression	"* ri = r_reg_get ( anal -> reg , op_esil , - 1 )"		231851	2		=			
ANR	231949	Identifier	ri		231851	0					
ANR	231950	CallExpression	"r_reg_get ( anal -> reg , op_esil , - 1 )"		231851	1					
ANR	231951	Callee	r_reg_get		231851	0					
ANR	231952	Identifier	r_reg_get		231851	0					
ANR	231953	ArgumentList	anal -> reg		231851	1					
ANR	231954	Argument	anal -> reg		231851	0					
ANR	231955	PtrMemberAccess	anal -> reg		231851	0					
ANR	231956	Identifier	anal		231851	0					
ANR	231957	Identifier	reg		231851	1					
ANR	231958	Argument	op_esil		231851	1					
ANR	231959	Identifier	op_esil		231851	0					
ANR	231960	Argument	- 1		231851	2					
ANR	231961	UnaryOperationExpression	- 1		231851	0					
ANR	231962	UnaryOperator	-		231851	0					
ANR	231963	PrimaryExpression	1		231851	1					
ANR	231964	IfStatement	if ( ri )		231851	8					
ANR	231965	Condition	ri	158:5:4691:4692	231851	0	True				
ANR	231966	Identifier	ri		231851	0					
ANR	231967	CompoundStatement		14:9:346:346	231851	1					
ANR	231968	IfStatement	if ( ( anal -> bits == 64 ) && ( ri -> size == 32 ) )		231851	0					
ANR	231969	Condition	( anal -> bits == 64 ) && ( ri -> size == 32 )	159:6:4703:4740	231851	0	True				
ANR	231970	AndExpression	( anal -> bits == 64 ) && ( ri -> size == 32 )		231851	0		&&			
ANR	231971	EqualityExpression	anal -> bits == 64		231851	0		==			
ANR	231972	PtrMemberAccess	anal -> bits		231851	0					
ANR	231973	Identifier	anal		231851	0					
ANR	231974	Identifier	bits		231851	1					
ANR	231975	PrimaryExpression	64		231851	1					
ANR	231976	EqualityExpression	ri -> size == 32		231851	1		==			
ANR	231977	PtrMemberAccess	ri -> size		231851	0					
ANR	231978	Identifier	ri		231851	0					
ANR	231979	Identifier	size		231851	1					
ANR	231980	PrimaryExpression	32		231851	1					
ANR	231981	CompoundStatement		16:3:399:452	231851	1					
ANR	231982	IdentifierDeclStatement	"const char * reg = r_reg_32_to_64 ( anal -> reg , op_esil ) ;"	160:3:4748:4801	231851	0	True				
ANR	231983	IdentifierDecl	"* reg = r_reg_32_to_64 ( anal -> reg , op_esil )"		231851	0					
ANR	231984	IdentifierDeclType	const char *		231851	0					
ANR	231985	Identifier	reg		231851	1					
ANR	231986	AssignmentExpression	"* reg = r_reg_32_to_64 ( anal -> reg , op_esil )"		231851	2		=			
ANR	231987	Identifier	reg		231851	0					
ANR	231988	CallExpression	"r_reg_32_to_64 ( anal -> reg , op_esil )"		231851	1					
ANR	231989	Callee	r_reg_32_to_64		231851	0					
ANR	231990	Identifier	r_reg_32_to_64		231851	0					
ANR	231991	ArgumentList	anal -> reg		231851	1					
ANR	231992	Argument	anal -> reg		231851	0					
ANR	231993	PtrMemberAccess	anal -> reg		231851	0					
ANR	231994	Identifier	anal		231851	0					
ANR	231995	Identifier	reg		231851	1					
ANR	231996	Argument	op_esil		231851	1					
ANR	231997	Identifier	op_esil		231851	0					
ANR	231998	IfStatement	if ( reg )		231851	1					
ANR	231999	Condition	reg	161:7:4810:4812	231851	0	True				
ANR	232000	Identifier	reg		231851	0					
ANR	232001	CompoundStatement		17:12:466:466	231851	1					
ANR	232002	ExpressionStatement	free ( op_esil )	162:4:4821:4835	231851	0	True				
ANR	232003	CallExpression	free ( op_esil )		231851	0					
ANR	232004	Callee	free		231851	0					
ANR	232005	Identifier	free		231851	0					
ANR	232006	ArgumentList	op_esil		231851	1					
ANR	232007	Argument	op_esil		231851	0					
ANR	232008	Identifier	op_esil		231851	0					
ANR	232009	ExpressionStatement	op_esil = strdup ( reg )	163:4:4841:4863	231851	1	True				
ANR	232010	AssignmentExpression	op_esil = strdup ( reg )		231851	0		=			
ANR	232011	Identifier	op_esil		231851	0					
ANR	232012	CallExpression	strdup ( reg )		231851	1					
ANR	232013	Callee	strdup		231851	0					
ANR	232014	Identifier	strdup		231851	0					
ANR	232015	ArgumentList	reg		231851	1					
ANR	232016	Argument	reg		231851	0					
ANR	232017	Identifier	reg		231851	0					
ANR	232018	ExpressionStatement	"strncpy ( regname , op_esil , size - 1 )"	166:2:4876:4912	231851	1	True				
ANR	232019	CallExpression	"strncpy ( regname , op_esil , size - 1 )"		231851	0					
ANR	232020	Callee	strncpy		231851	0					
ANR	232021	Identifier	strncpy		231851	0					
ANR	232022	ArgumentList	regname		231851	1					
ANR	232023	Argument	regname		231851	0					
ANR	232024	Identifier	regname		231851	0					
ANR	232025	Argument	op_esil		231851	1					
ANR	232026	Identifier	op_esil		231851	0					
ANR	232027	Argument	size - 1		231851	2					
ANR	232028	AdditiveExpression	size - 1		231851	0		-			
ANR	232029	Identifier	size		231851	0					
ANR	232030	PrimaryExpression	1		231851	1					
ANR	232031	ExpressionStatement	free ( op_esil )	168:1:4918:4932	231851	9	True				
ANR	232032	CallExpression	free ( op_esil )		231851	0					
ANR	232033	Callee	free		231851	0					
ANR	232034	Identifier	free		231851	0					
ANR	232035	ArgumentList	op_esil		231851	1					
ANR	232036	Argument	op_esil		231851	0					
ANR	232037	Identifier	op_esil		231851	0					
ANR	232038	ExpressionStatement	r_anal_op_free ( op )	169:1:4935:4954	231851	10	True				
ANR	232039	CallExpression	r_anal_op_free ( op )		231851	0					
ANR	232040	Callee	r_anal_op_free		231851	0					
ANR	232041	Identifier	r_anal_op_free		231851	0					
ANR	232042	ArgumentList	op		231851	1					
ANR	232043	Argument	op		231851	0					
ANR	232044	Identifier	op		231851	0					
ANR	232045	ReturnType	static void		231851	1					
ANR	232046	Identifier	get_src_regname		231851	2					
ANR	232047	ParameterList	"RCore * core , ut64 addr , char * regname , int size"		231851	3					
ANR	232048	Parameter	RCore * core	145:28:4299:4309	231851	0	True				
ANR	232049	ParameterType	RCore *		231851	0					
ANR	232050	Identifier	core		231851	1					
ANR	232051	Parameter	ut64 addr	145:41:4312:4320	231851	1	True				
ANR	232052	ParameterType	ut64		231851	0					
ANR	232053	Identifier	addr		231851	1					
ANR	232054	Parameter	char * regname	145:52:4323:4335	231851	2	True				
ANR	232055	ParameterType	char *		231851	0					
ANR	232056	Identifier	regname		231851	1					
ANR	232057	Parameter	int size	145:67:4338:4345	231851	3	True				
ANR	232058	ParameterType	int		231851	0					
ANR	232059	Identifier	size		231851	1					
ANR	232060	CFGEntryNode	ENTRY		231851		True				
ANR	232061	CFGExitNode	EXIT		231851		True				
ANR	232062	Symbol	& op -> esil		231851						
ANR	232063	Symbol	* tmp		231851						
ANR	232064	Symbol	anal -> reg		231851						
ANR	232065	Symbol	* core		231851						
ANR	232066	Symbol	strchr		231851						
ANR	232067	Symbol	r_core_anal_op		231851						
ANR	232068	Symbol	core -> anal		231851						
ANR	232069	Symbol	ri -> size		231851						
ANR	232070	Symbol	* anal		231851						
ANR	232071	Symbol	reg		231851						
ANR	232072	Symbol	tmp		231851						
ANR	232073	Symbol	addr		231851						
ANR	232074	Symbol	r_reg_get		231851						
ANR	232075	Symbol	regname		231851						
ANR	232076	Symbol	op		231851						
ANR	232077	Symbol	R_ANAL_OP_MASK_VAL		231851						
ANR	232078	Symbol	r_reg_32_to_64		231851						
ANR	232079	Symbol	anal -> bits		231851						
ANR	232080	Symbol	core		231851						
ANR	232081	Symbol	op_esil		231851						
ANR	232082	Symbol	size		231851						
ANR	232083	Symbol	anal		231851						
ANR	232084	Symbol	r_strbuf_get		231851						
ANR	232085	Symbol	ri		231851						
ANR	232086	Symbol	strdup		231851						
ANR	232087	Symbol	* ri		231851						
ANR	232088	Symbol	R_ANAL_OP_MASK_ESIL		231851						
ANR	232089	Function	get_addr	172:0:4959:5199							
ANR	232090	FunctionDef	"get_addr (Sdb * trace , const char * regname , int idx)"		232089	0					
ANR	232091	CompoundStatement		172:63:5022:5199	232089	0					
ANR	232092	IfStatement	if ( ! regname || ! * regname )		232089	0					
ANR	232093	Condition	! regname || ! * regname	173:5:5029:5049	232089	0	True				
ANR	232094	OrExpression	! regname || ! * regname		232089	0		||			
ANR	232095	UnaryOperationExpression	! regname		232089	0					
ANR	232096	UnaryOperator	!		232089	0					
ANR	232097	Identifier	regname		232089	1					
ANR	232098	UnaryOperationExpression	! * regname		232089	1					
ANR	232099	UnaryOperator	!		232089	0					
ANR	232100	UnaryOperationExpression	* regname		232089	1					
ANR	232101	UnaryOperator	*		232089	0					
ANR	232102	Identifier	regname		232089	1					
ANR	232103	CompoundStatement		2:28:29:29	232089	1					
ANR	232104	ReturnStatement	return UT64_MAX ;	174:2:5056:5071	232089	0	True				
ANR	232105	Identifier	UT64_MAX		232089	0					
ANR	232106	IdentifierDeclStatement	"const char * query = sdb_fmt ( ""%d.reg.read.%s"" , idx , regname ) ;"	176:1:5077:5137	232089	1	True				
ANR	232107	IdentifierDecl	"* query = sdb_fmt ( ""%d.reg.read.%s"" , idx , regname )"		232089	0					
ANR	232108	IdentifierDeclType	const char *		232089	0					
ANR	232109	Identifier	query		232089	1					
ANR	232110	AssignmentExpression	"* query = sdb_fmt ( ""%d.reg.read.%s"" , idx , regname )"		232089	2		=			
ANR	232111	Identifier	query		232089	0					
ANR	232112	CallExpression	"sdb_fmt ( ""%d.reg.read.%s"" , idx , regname )"		232089	1					
ANR	232113	Callee	sdb_fmt		232089	0					
ANR	232114	Identifier	sdb_fmt		232089	0					
ANR	232115	ArgumentList	"""%d.reg.read.%s"""		232089	1					
ANR	232116	Argument	"""%d.reg.read.%s"""		232089	0					
ANR	232117	PrimaryExpression	"""%d.reg.read.%s"""		232089	0					
ANR	232118	Argument	idx		232089	1					
ANR	232119	Identifier	idx		232089	0					
ANR	232120	Argument	regname		232089	2					
ANR	232121	Identifier	regname		232089	0					
ANR	232122	ReturnStatement	"return r_num_math ( NULL , sdb_const_get ( trace , query , 0 ) ) ;"	177:1:5140:5197	232089	2	True				
ANR	232123	CallExpression	"r_num_math ( NULL , sdb_const_get ( trace , query , 0 ) )"		232089	0					
ANR	232124	Callee	r_num_math		232089	0					
ANR	232125	Identifier	r_num_math		232089	0					
ANR	232126	ArgumentList	NULL		232089	1					
ANR	232127	Argument	NULL		232089	0					
ANR	232128	Identifier	NULL		232089	0					
ANR	232129	Argument	"sdb_const_get ( trace , query , 0 )"		232089	1					
ANR	232130	CallExpression	"sdb_const_get ( trace , query , 0 )"		232089	0					
ANR	232131	Callee	sdb_const_get		232089	0					
ANR	232132	Identifier	sdb_const_get		232089	0					
ANR	232133	ArgumentList	trace		232089	1					
ANR	232134	Argument	trace		232089	0					
ANR	232135	Identifier	trace		232089	0					
ANR	232136	Argument	query		232089	1					
ANR	232137	Identifier	query		232089	0					
ANR	232138	Argument	0		232089	2					
ANR	232139	PrimaryExpression	0		232089	0					
ANR	232140	ReturnType	static ut64		232089	1					
ANR	232141	Identifier	get_addr		232089	2					
ANR	232142	ParameterList	"Sdb * trace , const char * regname , int idx"		232089	3					
ANR	232143	Parameter	Sdb * trace	172:21:4980:4989	232089	0	True				
ANR	232144	ParameterType	Sdb *		232089	0					
ANR	232145	Identifier	trace		232089	1					
ANR	232146	Parameter	const char * regname	172:33:4992:5010	232089	1	True				
ANR	232147	ParameterType	const char *		232089	0					
ANR	232148	Identifier	regname		232089	1					
ANR	232149	Parameter	int idx	172:54:5013:5019	232089	2	True				
ANR	232150	ParameterType	int		232089	0					
ANR	232151	Identifier	idx		232089	1					
ANR	232152	CFGEntryNode	ENTRY		232089		True				
ANR	232153	CFGExitNode	EXIT		232089		True				
ANR	232154	Symbol	regname		232089						
ANR	232155	Symbol	trace		232089						
ANR	232156	Symbol	NULL		232089						
ANR	232157	Symbol	* regname		232089						
ANR	232158	Symbol	query		232089						
ANR	232159	Symbol	idx		232089						
ANR	232160	Symbol	UT64_MAX		232089						
ANR	232161	Symbol	sdb_fmt		232089						
ANR	232162	Symbol	sdb_const_get		232089						
ANR	232163	Symbol	r_num_math		232089						
ANR	232164	Function	cond_invert	180:0:5202:5505							
ANR	232165	FunctionDef	cond_invert (int cond)		232164	0					
ANR	232166	CompoundStatement		180:34:5236:5505	232164	0					
ANR	232167	IdentifierDeclStatement	int res = 0 ;	181:1:5239:5250	232164	0	True				
ANR	232168	IdentifierDecl	res = 0		232164	0					
ANR	232169	IdentifierDeclType	int		232164	0					
ANR	232170	Identifier	res		232164	1					
ANR	232171	AssignmentExpression	res = 0		232164	2		=			
ANR	232172	Identifier	res		232164	0					
ANR	232173	PrimaryExpression	0		232164	1					
ANR	232174	SwitchStatement	switch ( cond )		232164	1					
ANR	232175	Condition	cond	182:9:5261:5264	232164	0	True				
ANR	232176	Identifier	cond		232164	0					
ANR	232177	CompoundStatement		3:15:30:30	232164	1					
ANR	232178	Label	case R_ANAL_COND_LE :	183:1:5270:5289	232164	0	True				
ANR	232179	Identifier	R_ANAL_COND_LE		232164	0					
ANR	232180	ExpressionStatement	res = R_ANAL_COND_GT	184:2:5293:5313	232164	1	True				
ANR	232181	AssignmentExpression	res = R_ANAL_COND_GT		232164	0		=			
ANR	232182	Identifier	res		232164	0					
ANR	232183	Identifier	R_ANAL_COND_GT		232164	1					
ANR	232184	BreakStatement	break ;	185:2:5317:5322	232164	2	True				
ANR	232185	Label	case R_ANAL_COND_LT :	186:1:5325:5344	232164	3	True				
ANR	232186	Identifier	R_ANAL_COND_LT		232164	0					
ANR	232187	ExpressionStatement	res = R_ANAL_COND_GE	187:2:5348:5368	232164	4	True				
ANR	232188	AssignmentExpression	res = R_ANAL_COND_GE		232164	0		=			
ANR	232189	Identifier	res		232164	0					
ANR	232190	Identifier	R_ANAL_COND_GE		232164	1					
ANR	232191	BreakStatement	break ;	188:2:5372:5377	232164	5	True				
ANR	232192	Label	case R_ANAL_COND_GE :	189:1:5380:5399	232164	6	True				
ANR	232193	Identifier	R_ANAL_COND_GE		232164	0					
ANR	232194	ExpressionStatement	res = R_ANAL_COND_LT	190:2:5403:5423	232164	7	True				
ANR	232195	AssignmentExpression	res = R_ANAL_COND_LT		232164	0		=			
ANR	232196	Identifier	res		232164	0					
ANR	232197	Identifier	R_ANAL_COND_LT		232164	1					
ANR	232198	BreakStatement	break ;	191:2:5427:5432	232164	8	True				
ANR	232199	Label	case R_ANAL_COND_GT :	192:1:5435:5454	232164	9	True				
ANR	232200	Identifier	R_ANAL_COND_GT		232164	0					
ANR	232201	ExpressionStatement	res = R_ANAL_COND_LE	193:2:5458:5478	232164	10	True				
ANR	232202	AssignmentExpression	res = R_ANAL_COND_LE		232164	0		=			
ANR	232203	Identifier	res		232164	0					
ANR	232204	Identifier	R_ANAL_COND_LE		232164	1					
ANR	232205	BreakStatement	break ;	194:2:5482:5487	232164	11	True				
ANR	232206	ReturnStatement	return res ;	196:1:5493:5503	232164	2	True				
ANR	232207	Identifier	res		232164	0					
ANR	232208	ReturnType	static int		232164	1					
ANR	232209	Identifier	cond_invert		232164	2					
ANR	232210	ParameterList	int cond		232164	3					
ANR	232211	Parameter	int cond	180:24:5226:5233	232164	0	True				
ANR	232212	ParameterType	int		232164	0					
ANR	232213	Identifier	cond		232164	1					
ANR	232214	CFGEntryNode	ENTRY		232164		True				
ANR	232215	CFGExitNode	EXIT		232164		True				
ANR	232216	Symbol	res		232164						
ANR	232217	Symbol	R_ANAL_COND_GE		232164						
ANR	232218	Symbol	R_ANAL_COND_GT		232164						
ANR	232219	Symbol	R_ANAL_COND_LE		232164						
ANR	232220	Symbol	cond		232164						
ANR	232221	Symbol	R_ANAL_COND_LT		232164						
ANR	232222	Function	var_add_range	202:0:5604:5823							
ANR	232223	FunctionDef	"var_add_range (RAnal * a , RAnalVar * var , int cond , ut64 val)"		232222	0					
ANR	232224	CompoundStatement		202:72:5676:5823	232222	0					
ANR	232225	IdentifierDeclStatement	"const char * key = RKEY ( var -> addr , var -> kind , var -> delta ) ;"	203:1:5679:5736	232222	0	True				
ANR	232226	IdentifierDecl	"* key = RKEY ( var -> addr , var -> kind , var -> delta )"		232222	0					
ANR	232227	IdentifierDeclType	const char *		232222	0					
ANR	232228	Identifier	key		232222	1					
ANR	232229	AssignmentExpression	"* key = RKEY ( var -> addr , var -> kind , var -> delta )"		232222	2		=			
ANR	232230	Identifier	key		232222	0					
ANR	232231	CallExpression	"RKEY ( var -> addr , var -> kind , var -> delta )"		232222	1					
ANR	232232	Callee	RKEY		232222	0					
ANR	232233	Identifier	RKEY		232222	0					
ANR	232234	ArgumentList	var -> addr		232222	1					
ANR	232235	Argument	var -> addr		232222	0					
ANR	232236	PtrMemberAccess	var -> addr		232222	0					
ANR	232237	Identifier	var		232222	0					
ANR	232238	Identifier	addr		232222	1					
ANR	232239	Argument	var -> kind		232222	1					
ANR	232240	PtrMemberAccess	var -> kind		232222	0					
ANR	232241	Identifier	var		232222	0					
ANR	232242	Identifier	kind		232222	1					
ANR	232243	Argument	var -> delta		232222	2					
ANR	232244	PtrMemberAccess	var -> delta		232222	0					
ANR	232245	Identifier	var		232222	0					
ANR	232246	Identifier	delta		232222	1					
ANR	232247	ExpressionStatement	"sdb_array_append_num ( ADB , key , cond , 0 )"	204:1:5739:5779	232222	1	True				
ANR	232248	CallExpression	"sdb_array_append_num ( ADB , key , cond , 0 )"		232222	0					
ANR	232249	Callee	sdb_array_append_num		232222	0					
ANR	232250	Identifier	sdb_array_append_num		232222	0					
ANR	232251	ArgumentList	ADB		232222	1					
ANR	232252	Argument	ADB		232222	0					
ANR	232253	Identifier	ADB		232222	0					
ANR	232254	Argument	key		232222	1					
ANR	232255	Identifier	key		232222	0					
ANR	232256	Argument	cond		232222	2					
ANR	232257	Identifier	cond		232222	0					
ANR	232258	Argument	0		232222	3					
ANR	232259	PrimaryExpression	0		232222	0					
ANR	232260	ExpressionStatement	"sdb_array_append_num ( ADB , key , val , 0 )"	205:1:5782:5821	232222	2	True				
ANR	232261	CallExpression	"sdb_array_append_num ( ADB , key , val , 0 )"		232222	0					
ANR	232262	Callee	sdb_array_append_num		232222	0					
ANR	232263	Identifier	sdb_array_append_num		232222	0					
ANR	232264	ArgumentList	ADB		232222	1					
ANR	232265	Argument	ADB		232222	0					
ANR	232266	Identifier	ADB		232222	0					
ANR	232267	Argument	key		232222	1					
ANR	232268	Identifier	key		232222	0					
ANR	232269	Argument	val		232222	2					
ANR	232270	Identifier	val		232222	0					
ANR	232271	Argument	0		232222	3					
ANR	232272	PrimaryExpression	0		232222	0					
ANR	232273	ReturnType	static void		232222	1					
ANR	232274	Identifier	var_add_range		232222	2					
ANR	232275	ParameterList	"RAnal * a , RAnalVar * var , int cond , ut64 val"		232222	3					
ANR	232276	Parameter	RAnal * a	202:27:5631:5638	232222	0	True				
ANR	232277	ParameterType	RAnal *		232222	0					
ANR	232278	Identifier	a		232222	1					
ANR	232279	Parameter	RAnalVar * var	202:37:5641:5653	232222	1	True				
ANR	232280	ParameterType	RAnalVar *		232222	0					
ANR	232281	Identifier	var		232222	1					
ANR	232282	Parameter	int cond	202:52:5656:5663	232222	2	True				
ANR	232283	ParameterType	int		232222	0					
ANR	232284	Identifier	cond		232222	1					
ANR	232285	Parameter	ut64 val	202:62:5666:5673	232222	3	True				
ANR	232286	ParameterType	ut64		232222	0					
ANR	232287	Identifier	val		232222	1					
ANR	232288	CFGEntryNode	ENTRY		232222		True				
ANR	232289	CFGExitNode	EXIT		232222		True				
ANR	232290	Symbol	val		232222						
ANR	232291	Symbol	a		232222						
ANR	232292	Symbol	* var		232222						
ANR	232293	Symbol	var -> addr		232222						
ANR	232294	Symbol	var		232222						
ANR	232295	Symbol	RKEY		232222						
ANR	232296	Symbol	cond		232222						
ANR	232297	Symbol	var -> delta		232222						
ANR	232298	Symbol	var -> kind		232222						
ANR	232299	Symbol	key		232222						
ANR	232300	Symbol	ADB		232222						
ANR	232301	Function	var_get_constraint	208:0:5826:6904							
ANR	232302	FunctionDef	"var_get_constraint (RAnal * a , RAnalVar * var)"		232301	0					
ANR	232303	CompoundStatement		208:60:5886:6904	232301	0					
ANR	232304	IdentifierDeclStatement	"const char * key = RKEY ( var -> addr , var -> kind , var -> delta ) ;"	209:1:5889:5946	232301	0	True				
ANR	232305	IdentifierDecl	"* key = RKEY ( var -> addr , var -> kind , var -> delta )"		232301	0					
ANR	232306	IdentifierDeclType	const char *		232301	0					
ANR	232307	Identifier	key		232301	1					
ANR	232308	AssignmentExpression	"* key = RKEY ( var -> addr , var -> kind , var -> delta )"		232301	2		=			
ANR	232309	Identifier	key		232301	0					
ANR	232310	CallExpression	"RKEY ( var -> addr , var -> kind , var -> delta )"		232301	1					
ANR	232311	Callee	RKEY		232301	0					
ANR	232312	Identifier	RKEY		232301	0					
ANR	232313	ArgumentList	var -> addr		232301	1					
ANR	232314	Argument	var -> addr		232301	0					
ANR	232315	PtrMemberAccess	var -> addr		232301	0					
ANR	232316	Identifier	var		232301	0					
ANR	232317	Identifier	addr		232301	1					
ANR	232318	Argument	var -> kind		232301	1					
ANR	232319	PtrMemberAccess	var -> kind		232301	0					
ANR	232320	Identifier	var		232301	0					
ANR	232321	Identifier	kind		232301	1					
ANR	232322	Argument	var -> delta		232301	2					
ANR	232323	PtrMemberAccess	var -> delta		232301	0					
ANR	232324	Identifier	var		232301	0					
ANR	232325	Identifier	delta		232301	1					
ANR	232326	IdentifierDeclStatement	"int i , n = sdb_array_length ( ADB , key ) ;"	210:1:5949:5987	232301	1	True				
ANR	232327	IdentifierDecl	i		232301	0					
ANR	232328	IdentifierDeclType	int		232301	0					
ANR	232329	Identifier	i		232301	1					
ANR	232330	IdentifierDecl	"n = sdb_array_length ( ADB , key )"		232301	1					
ANR	232331	IdentifierDeclType	int		232301	0					
ANR	232332	Identifier	n		232301	1					
ANR	232333	AssignmentExpression	"n = sdb_array_length ( ADB , key )"		232301	2		=			
ANR	232334	Identifier	n		232301	0					
ANR	232335	CallExpression	"sdb_array_length ( ADB , key )"		232301	1					
ANR	232336	Callee	sdb_array_length		232301	0					
ANR	232337	Identifier	sdb_array_length		232301	0					
ANR	232338	ArgumentList	ADB		232301	1					
ANR	232339	Argument	ADB		232301	0					
ANR	232340	Identifier	ADB		232301	0					
ANR	232341	Argument	key		232301	1					
ANR	232342	Identifier	key		232301	0					
ANR	232343	IfStatement	if ( n < 2 )		232301	2					
ANR	232344	Condition	n < 2	212:5:5995:5999	232301	0	True				
ANR	232345	RelationalExpression	n < 2		232301	0		<			
ANR	232346	Identifier	n		232301	0					
ANR	232347	PrimaryExpression	2		232301	1					
ANR	232348	CompoundStatement		5:12:115:115	232301	1					
ANR	232349	ReturnStatement	return NULL ;	213:2:6006:6017	232301	0	True				
ANR	232350	Identifier	NULL		232301	0					
ANR	232351	IdentifierDeclStatement	"bool low = false , high = false ;"	216:1:6024:6054	232301	3	True				
ANR	232352	IdentifierDecl	low = false		232301	0					
ANR	232353	IdentifierDeclType	bool		232301	0					
ANR	232354	Identifier	low		232301	1					
ANR	232355	AssignmentExpression	low = false		232301	2		=			
ANR	232356	Identifier	false		232301	0					
ANR	232357	Identifier	false		232301	1					
ANR	232358	IdentifierDecl	high = false		232301	1					
ANR	232359	IdentifierDeclType	bool		232301	0					
ANR	232360	Identifier	high		232301	1					
ANR	232361	AssignmentExpression	high = false		232301	2		=			
ANR	232362	Identifier	false		232301	0					
ANR	232363	Identifier	false		232301	1					
ANR	232364	IdentifierDeclStatement	"RStrBuf * sb = r_strbuf_new ( """" ) ;"	217:1:6057:6088	232301	4	True				
ANR	232365	IdentifierDecl	"* sb = r_strbuf_new ( """" )"		232301	0					
ANR	232366	IdentifierDeclType	RStrBuf *		232301	0					
ANR	232367	Identifier	sb		232301	1					
ANR	232368	AssignmentExpression	"* sb = r_strbuf_new ( """" )"		232301	2		=			
ANR	232369	Identifier	sb		232301	0					
ANR	232370	CallExpression	"r_strbuf_new ( """" )"		232301	1					
ANR	232371	Callee	r_strbuf_new		232301	0					
ANR	232372	Identifier	r_strbuf_new		232301	0					
ANR	232373	ArgumentList	""""""		232301	1					
ANR	232374	Argument	""""""		232301	0					
ANR	232375	PrimaryExpression	""""""		232301	0					
ANR	232376	ForStatement	for ( i = 0 ; i < n ; i += 2 )		232301	5					
ANR	232377	ForInit	i = 0 ;	219:6:6097:6102	232301	0	True				
ANR	232378	AssignmentExpression	i = 0		232301	0		=			
ANR	232379	Identifier	i		232301	0					
ANR	232380	PrimaryExpression	0		232301	1					
ANR	232381	Condition	i < n	219:13:6104:6108	232301	1	True				
ANR	232382	RelationalExpression	i < n		232301	0		<			
ANR	232383	Identifier	i		232301	0					
ANR	232384	Identifier	n		232301	1					
ANR	232385	AssignmentExpression	i += 2	219:20:6111:6116	232301	2	True	+=			
ANR	232386	Identifier	i		232301	0					
ANR	232387	PrimaryExpression	2		232301	1					
ANR	232388	CompoundStatement		14:2:286:335	232301	3					
ANR	232389	IdentifierDeclStatement	"ut64 cond = sdb_array_get_num ( ADB , key , i , 0 ) ;"	220:2:6123:6169	232301	0	True				
ANR	232390	IdentifierDecl	"cond = sdb_array_get_num ( ADB , key , i , 0 )"		232301	0					
ANR	232391	IdentifierDeclType	ut64		232301	0					
ANR	232392	Identifier	cond		232301	1					
ANR	232393	AssignmentExpression	"cond = sdb_array_get_num ( ADB , key , i , 0 )"		232301	2		=			
ANR	232394	Identifier	cond		232301	0					
ANR	232395	CallExpression	"sdb_array_get_num ( ADB , key , i , 0 )"		232301	1					
ANR	232396	Callee	sdb_array_get_num		232301	0					
ANR	232397	Identifier	sdb_array_get_num		232301	0					
ANR	232398	ArgumentList	ADB		232301	1					
ANR	232399	Argument	ADB		232301	0					
ANR	232400	Identifier	ADB		232301	0					
ANR	232401	Argument	key		232301	1					
ANR	232402	Identifier	key		232301	0					
ANR	232403	Argument	i		232301	2					
ANR	232404	Identifier	i		232301	0					
ANR	232405	Argument	0		232301	3					
ANR	232406	PrimaryExpression	0		232301	0					
ANR	232407	IdentifierDeclStatement	"ut64 val = sdb_array_get_num ( ADB , key , i + 1 , 0 ) ;"	221:2:6173:6222	232301	1	True				
ANR	232408	IdentifierDecl	"val = sdb_array_get_num ( ADB , key , i + 1 , 0 )"		232301	0					
ANR	232409	IdentifierDeclType	ut64		232301	0					
ANR	232410	Identifier	val		232301	1					
ANR	232411	AssignmentExpression	"val = sdb_array_get_num ( ADB , key , i + 1 , 0 )"		232301	2		=			
ANR	232412	Identifier	val		232301	0					
ANR	232413	CallExpression	"sdb_array_get_num ( ADB , key , i + 1 , 0 )"		232301	1					
ANR	232414	Callee	sdb_array_get_num		232301	0					
ANR	232415	Identifier	sdb_array_get_num		232301	0					
ANR	232416	ArgumentList	ADB		232301	1					
ANR	232417	Argument	ADB		232301	0					
ANR	232418	Identifier	ADB		232301	0					
ANR	232419	Argument	key		232301	1					
ANR	232420	Identifier	key		232301	0					
ANR	232421	Argument	i + 1		232301	2					
ANR	232422	AdditiveExpression	i + 1		232301	0		+			
ANR	232423	Identifier	i		232301	0					
ANR	232424	PrimaryExpression	1		232301	1					
ANR	232425	Argument	0		232301	3					
ANR	232426	PrimaryExpression	0		232301	0					
ANR	232427	SwitchStatement	switch ( cond )		232301	2					
ANR	232428	Condition	cond	222:10:6234:6237	232301	0	True				
ANR	232429	Identifier	cond		232301	0					
ANR	232430	CompoundStatement		15:16:353:353	232301	1					
ANR	232431	Label	case R_ANAL_COND_LE :	223:2:6244:6263	232301	0	True				
ANR	232432	Identifier	R_ANAL_COND_LE		232301	0					
ANR	232433	IfStatement	if ( high )		232301	1					
ANR	232434	Condition	high	224:7:6272:6275	232301	0	True				
ANR	232435	Identifier	high		232301	0					
ANR	232436	CompoundStatement		17:13:391:391	232301	1					
ANR	232437	ExpressionStatement	"r_strbuf_append ( sb , "" && "" )"	225:4:6284:6312	232301	0	True				
ANR	232438	CallExpression	"r_strbuf_append ( sb , "" && "" )"		232301	0					
ANR	232439	Callee	r_strbuf_append		232301	0					
ANR	232440	Identifier	r_strbuf_append		232301	0					
ANR	232441	ArgumentList	sb		232301	1					
ANR	232442	Argument	sb		232301	0					
ANR	232443	Identifier	sb		232301	0					
ANR	232444	Argument	""" && """		232301	1					
ANR	232445	PrimaryExpression	""" && """		232301	0					
ANR	232446	Statement	r_strbuf_append	227:3:6322:6336	232301	2	True				
ANR	232447	Statement	(	227:19:6338:6338	232301	3	True				
ANR	232448	Statement	sb	227:20:6339:6340	232301	4	True				
ANR	232449	Statement	","	227:22:6341:6341	232301	5	True				
ANR	232450	Statement	sdb_fmt	227:24:6343:6349	232301	6	True				
ANR	232451	Statement	(	227:32:6351:6351	232301	7	True				
ANR	232452	Statement	"""<= 0x%"""	227:33:6352:6359	232301	8	True				
ANR	232453	Statement	PFMT64x	227:41:6360:6366	232301	9	True				
ANR	232454	Statement	""""""	227:49:6368:6369	232301	10	True				
ANR	232455	Statement	","	227:51:6370:6370	232301	11	True				
ANR	232456	Statement	val	227:53:6372:6374	232301	12	True				
ANR	232457	Statement	)	227:56:6375:6375	232301	13	True				
ANR	232458	Statement	)	227:57:6376:6376	232301	14	True				
ANR	232459	ExpressionStatement		227:58:6377:6377	232301	15	True				
ANR	232460	ExpressionStatement	low = true	228:3:6382:6392	232301	16	True				
ANR	232461	AssignmentExpression	low = true		232301	0		=			
ANR	232462	Identifier	low		232301	0					
ANR	232463	Identifier	true		232301	1					
ANR	232464	BreakStatement	break ;	229:3:6397:6402	232301	17	True				
ANR	232465	Label	case R_ANAL_COND_LT :	230:2:6406:6425	232301	18	True				
ANR	232466	Identifier	R_ANAL_COND_LT		232301	0					
ANR	232467	IfStatement	if ( high )		232301	19					
ANR	232468	Condition	high	231:7:6434:6437	232301	0	True				
ANR	232469	Identifier	high		232301	0					
ANR	232470	CompoundStatement		24:13:553:553	232301	1					
ANR	232471	ExpressionStatement	"r_strbuf_append ( sb , "" && "" )"	232:4:6446:6474	232301	0	True				
ANR	232472	CallExpression	"r_strbuf_append ( sb , "" && "" )"		232301	0					
ANR	232473	Callee	r_strbuf_append		232301	0					
ANR	232474	Identifier	r_strbuf_append		232301	0					
ANR	232475	ArgumentList	sb		232301	1					
ANR	232476	Argument	sb		232301	0					
ANR	232477	Identifier	sb		232301	0					
ANR	232478	Argument	""" && """		232301	1					
ANR	232479	PrimaryExpression	""" && """		232301	0					
ANR	232480	Statement	r_strbuf_append	234:3:6484:6498	232301	20	True				
ANR	232481	Statement	(	234:19:6500:6500	232301	21	True				
ANR	232482	Statement	sb	234:20:6501:6502	232301	22	True				
ANR	232483	Statement	","	234:22:6503:6503	232301	23	True				
ANR	232484	Statement	sdb_fmt	234:24:6505:6511	232301	24	True				
ANR	232485	Statement	(	234:32:6513:6513	232301	25	True				
ANR	232486	Statement	"""< 0x%"""	234:33:6514:6520	232301	26	True				
ANR	232487	Statement	PFMT64x	234:40:6521:6527	232301	27	True				
ANR	232488	Statement	""""""	234:48:6529:6530	232301	28	True				
ANR	232489	Statement	","	234:50:6531:6531	232301	29	True				
ANR	232490	Statement	val	234:52:6533:6535	232301	30	True				
ANR	232491	Statement	)	234:55:6536:6536	232301	31	True				
ANR	232492	Statement	)	234:56:6537:6537	232301	32	True				
ANR	232493	ExpressionStatement		234:57:6538:6538	232301	33	True				
ANR	232494	ExpressionStatement	low = true	235:3:6543:6553	232301	34	True				
ANR	232495	AssignmentExpression	low = true		232301	0		=			
ANR	232496	Identifier	low		232301	0					
ANR	232497	Identifier	true		232301	1					
ANR	232498	BreakStatement	break ;	236:3:6558:6563	232301	35	True				
ANR	232499	Label	case R_ANAL_COND_GE :	237:2:6567:6586	232301	36	True				
ANR	232500	Identifier	R_ANAL_COND_GE		232301	0					
ANR	232501	Statement	r_strbuf_append	238:3:6591:6605	232301	37	True				
ANR	232502	Statement	(	238:19:6607:6607	232301	38	True				
ANR	232503	Statement	sb	238:20:6608:6609	232301	39	True				
ANR	232504	Statement	","	238:22:6610:6610	232301	40	True				
ANR	232505	Statement	sdb_fmt	238:24:6612:6618	232301	41	True				
ANR	232506	Statement	(	238:32:6620:6620	232301	42	True				
ANR	232507	Statement	""">= 0x%"""	238:33:6621:6628	232301	43	True				
ANR	232508	Statement	PFMT64x	238:41:6629:6635	232301	44	True				
ANR	232509	Statement	""""""	238:49:6637:6638	232301	45	True				
ANR	232510	Statement	","	238:51:6639:6639	232301	46	True				
ANR	232511	Statement	val	238:53:6641:6643	232301	47	True				
ANR	232512	Statement	)	238:56:6644:6644	232301	48	True				
ANR	232513	Statement	)	238:57:6645:6645	232301	49	True				
ANR	232514	ExpressionStatement		238:58:6646:6646	232301	50	True				
ANR	232515	ExpressionStatement	high = true	239:3:6651:6662	232301	51	True				
ANR	232516	AssignmentExpression	high = true		232301	0		=			
ANR	232517	Identifier	high		232301	0					
ANR	232518	Identifier	true		232301	1					
ANR	232519	BreakStatement	break ;	240:3:6667:6672	232301	52	True				
ANR	232520	Label	case R_ANAL_COND_GT :	241:2:6676:6695	232301	53	True				
ANR	232521	Identifier	R_ANAL_COND_GT		232301	0					
ANR	232522	Statement	r_strbuf_append	242:3:6700:6714	232301	54	True				
ANR	232523	Statement	(	242:19:6716:6716	232301	55	True				
ANR	232524	Statement	sb	242:20:6717:6718	232301	56	True				
ANR	232525	Statement	","	242:22:6719:6719	232301	57	True				
ANR	232526	Statement	sdb_fmt	242:24:6721:6727	232301	58	True				
ANR	232527	Statement	(	242:32:6729:6729	232301	59	True				
ANR	232528	Statement	"""> 0x%"""	242:33:6730:6736	232301	60	True				
ANR	232529	Statement	PFMT64x	242:40:6737:6743	232301	61	True				
ANR	232530	Statement	""""""	242:48:6745:6746	232301	62	True				
ANR	232531	Statement	","	242:50:6747:6747	232301	63	True				
ANR	232532	Statement	val	242:52:6749:6751	232301	64	True				
ANR	232533	Statement	)	242:55:6752:6752	232301	65	True				
ANR	232534	Statement	)	242:56:6753:6753	232301	66	True				
ANR	232535	ExpressionStatement		242:57:6754:6754	232301	67	True				
ANR	232536	ExpressionStatement	high = true	243:3:6759:6770	232301	68	True				
ANR	232537	AssignmentExpression	high = true		232301	0		=			
ANR	232538	Identifier	high		232301	0					
ANR	232539	Identifier	true		232301	1					
ANR	232540	BreakStatement	break ;	244:3:6775:6780	232301	69	True				
ANR	232541	IfStatement	if ( low && high && i != n - 2 )		232301	3					
ANR	232542	Condition	low && high && i != n - 2	246:6:6792:6814	232301	0	True				
ANR	232543	AndExpression	low && high && i != n - 2		232301	0		&&			
ANR	232544	Identifier	low		232301	0					
ANR	232545	AndExpression	high && i != n - 2		232301	1		&&			
ANR	232546	Identifier	high		232301	0					
ANR	232547	EqualityExpression	i != n - 2		232301	1		!=			
ANR	232548	Identifier	i		232301	0					
ANR	232549	AdditiveExpression	n - 2		232301	1		-			
ANR	232550	Identifier	n		232301	0					
ANR	232551	PrimaryExpression	2		232301	1					
ANR	232552	CompoundStatement		39:31:930:930	232301	1					
ANR	232553	ExpressionStatement	"r_strbuf_append ( sb , "" || "" )"	247:3:6822:6850	232301	0	True				
ANR	232554	CallExpression	"r_strbuf_append ( sb , "" || "" )"		232301	0					
ANR	232555	Callee	r_strbuf_append		232301	0					
ANR	232556	Identifier	r_strbuf_append		232301	0					
ANR	232557	ArgumentList	sb		232301	1					
ANR	232558	Argument	sb		232301	0					
ANR	232559	Identifier	sb		232301	0					
ANR	232560	Argument	""" || """		232301	1					
ANR	232561	PrimaryExpression	""" || """		232301	0					
ANR	232562	ExpressionStatement	low = false	248:3:6855:6866	232301	1	True				
ANR	232563	AssignmentExpression	low = false		232301	0		=			
ANR	232564	Identifier	low		232301	0					
ANR	232565	Identifier	false		232301	1					
ANR	232566	ExpressionStatement	high = false	249:3:6871:6883	232301	2	True				
ANR	232567	AssignmentExpression	high = false		232301	0		=			
ANR	232568	Identifier	high		232301	0					
ANR	232569	Identifier	false		232301	1					
ANR	232570	ReturnStatement	return sb ;	252:1:6893:6902	232301	6	True				
ANR	232571	Identifier	sb		232301	0					
ANR	232572	ReturnType	R_API RStrBuf *		232301	1					
ANR	232573	Identifier	var_get_constraint		232301	2					
ANR	232574	ParameterList	"RAnal * a , RAnalVar * var"		232301	3					
ANR	232575	Parameter	RAnal * a	208:35:5861:5868	232301	0	True				
ANR	232576	ParameterType	RAnal *		232301	0					
ANR	232577	Identifier	a		232301	1					
ANR	232578	Parameter	RAnalVar * var	208:45:5871:5883	232301	1	True				
ANR	232579	ParameterType	RAnalVar *		232301	0					
ANR	232580	Identifier	var		232301	1					
ANR	232581	CFGEntryNode	ENTRY		232301		True				
ANR	232582	CFGExitNode	EXIT		232301		True				
ANR	232583	Symbol	val		232301						
ANR	232584	Symbol	a		232301						
ANR	232585	Symbol	sdb_array_length		232301						
ANR	232586	Symbol	NULL		232301						
ANR	232587	Symbol	r_strbuf_new		232301						
ANR	232588	Symbol	var		232301						
ANR	232589	Symbol	false		232301						
ANR	232590	Symbol	i		232301						
ANR	232591	Symbol	RKEY		232301						
ANR	232592	Symbol	cond		232301						
ANR	232593	Symbol	var -> delta		232301						
ANR	232594	Symbol	n		232301						
ANR	232595	Symbol	sb		232301						
ANR	232596	Symbol	* var		232301						
ANR	232597	Symbol	high		232301						
ANR	232598	Symbol	var -> addr		232301						
ANR	232599	Symbol	low		232301						
ANR	232600	Symbol	true		232301						
ANR	232601	Symbol	sdb_array_get_num		232301						
ANR	232602	Symbol	var -> kind		232301						
ANR	232603	Symbol	key		232301						
ANR	232604	Symbol	ADB		232301						
ANR	232605	Function	parse_format	255:0:6907:7687							
ANR	232606	FunctionDef	"parse_format (RCore * core , char * fmt)"		232605	0					
ANR	232607	CompoundStatement		255:51:6958:7687	232605	0					
ANR	232608	IfStatement	if ( ! fmt || ! * fmt )		232605	0					
ANR	232609	Condition	! fmt || ! * fmt	256:5:6965:6977	232605	0	True				
ANR	232610	OrExpression	! fmt || ! * fmt		232605	0		||			
ANR	232611	UnaryOperationExpression	! fmt		232605	0					
ANR	232612	UnaryOperator	!		232605	0					
ANR	232613	Identifier	fmt		232605	1					
ANR	232614	UnaryOperationExpression	! * fmt		232605	1					
ANR	232615	UnaryOperator	!		232605	0					
ANR	232616	UnaryOperationExpression	* fmt		232605	1					
ANR	232617	UnaryOperator	*		232605	0					
ANR	232618	Identifier	fmt		232605	1					
ANR	232619	CompoundStatement		2:20:21:21	232605	1					
ANR	232620	ReturnStatement	return NULL ;	257:2:6984:6995	232605	0	True				
ANR	232621	Identifier	NULL		232605	0					
ANR	232622	IdentifierDeclStatement	RList * ret = r_list_new ( ) ;	259:1:7001:7027	232605	1	True				
ANR	232623	IdentifierDecl	* ret = r_list_new ( )		232605	0					
ANR	232624	IdentifierDeclType	RList *		232605	0					
ANR	232625	Identifier	ret		232605	1					
ANR	232626	AssignmentExpression	* ret = r_list_new ( )		232605	2		=			
ANR	232627	Identifier	ret		232605	0					
ANR	232628	CallExpression	r_list_new ( )		232605	1					
ANR	232629	Callee	r_list_new		232605	0					
ANR	232630	Identifier	r_list_new		232605	0					
ANR	232631	ArgumentList			232605	1					
ANR	232632	IfStatement	if ( ! ret )		232605	2					
ANR	232633	Condition	! ret	260:5:7034:7037	232605	0	True				
ANR	232634	UnaryOperationExpression	! ret		232605	0					
ANR	232635	UnaryOperator	!		232605	0					
ANR	232636	Identifier	ret		232605	1					
ANR	232637	CompoundStatement		6:11:81:81	232605	1					
ANR	232638	ReturnStatement	return NULL ;	261:2:7044:7055	232605	0	True				
ANR	232639	Identifier	NULL		232605	0					
ANR	232640	IdentifierDeclStatement	Sdb * s = core -> anal -> sdb_fmts ;	263:1:7061:7090	232605	3	True				
ANR	232641	IdentifierDecl	* s = core -> anal -> sdb_fmts		232605	0					
ANR	232642	IdentifierDeclType	Sdb *		232605	0					
ANR	232643	Identifier	s		232605	1					
ANR	232644	AssignmentExpression	* s = core -> anal -> sdb_fmts		232605	2		=			
ANR	232645	Identifier	s		232605	0					
ANR	232646	PtrMemberAccess	core -> anal -> sdb_fmts		232605	1					
ANR	232647	PtrMemberAccess	core -> anal		232605	0					
ANR	232648	Identifier	core		232605	0					
ANR	232649	Identifier	anal		232605	1					
ANR	232650	Identifier	sdb_fmts		232605	1					
ANR	232651	IdentifierDeclStatement	"const char * spec = r_config_get ( core -> config , ""anal.types.spec"" ) ;"	264:1:7093:7158	232605	4	True				
ANR	232652	IdentifierDecl	"* spec = r_config_get ( core -> config , ""anal.types.spec"" )"		232605	0					
ANR	232653	IdentifierDeclType	const char *		232605	0					
ANR	232654	Identifier	spec		232605	1					
ANR	232655	AssignmentExpression	"* spec = r_config_get ( core -> config , ""anal.types.spec"" )"		232605	2		=			
ANR	232656	Identifier	spec		232605	0					
ANR	232657	CallExpression	"r_config_get ( core -> config , ""anal.types.spec"" )"		232605	1					
ANR	232658	Callee	r_config_get		232605	0					
ANR	232659	Identifier	r_config_get		232605	0					
ANR	232660	ArgumentList	core -> config		232605	1					
ANR	232661	Argument	core -> config		232605	0					
ANR	232662	PtrMemberAccess	core -> config		232605	0					
ANR	232663	Identifier	core		232605	0					
ANR	232664	Identifier	config		232605	1					
ANR	232665	Argument	"""anal.types.spec"""		232605	1					
ANR	232666	PrimaryExpression	"""anal.types.spec"""		232605	0					
ANR	232667	IdentifierDeclStatement	char arr [ 10 ] = { 0 } ;	265:1:7161:7179	232605	5	True				
ANR	232668	IdentifierDecl	arr [ 10 ] = { 0 }		232605	0					
ANR	232669	IdentifierDeclType	char [ 10 ]		232605	0					
ANR	232670	Identifier	arr		232605	1					
ANR	232671	PrimaryExpression	10		232605	2					
ANR	232672	AssignmentExpression	arr [ 10 ] = { 0 }		232605	3		=			
ANR	232673	Identifier	arr		232605	0					
ANR	232674	InitializerList	0		232605	1					
ANR	232675	PrimaryExpression	0		232605	0					
ANR	232676	IdentifierDeclStatement	"char * ptr = strchr ( fmt , '%' ) ;"	266:1:7182:7211	232605	6	True				
ANR	232677	IdentifierDecl	"* ptr = strchr ( fmt , '%' )"		232605	0					
ANR	232678	IdentifierDeclType	char *		232605	0					
ANR	232679	Identifier	ptr		232605	1					
ANR	232680	AssignmentExpression	"* ptr = strchr ( fmt , '%' )"		232605	2		=			
ANR	232681	Identifier	ptr		232605	0					
ANR	232682	CallExpression	"strchr ( fmt , '%' )"		232605	1					
ANR	232683	Callee	strchr		232605	0					
ANR	232684	Identifier	strchr		232605	0					
ANR	232685	ArgumentList	fmt		232605	1					
ANR	232686	Argument	fmt		232605	0					
ANR	232687	Identifier	fmt		232605	0					
ANR	232688	Argument	'%'		232605	1					
ANR	232689	PrimaryExpression	'%'		232605	0					
ANR	232690	ExpressionStatement	fmt [ strlen ( fmt ) - 1 ] = '\\0'	267:1:7214:7242	232605	7	True				
ANR	232691	AssignmentExpression	fmt [ strlen ( fmt ) - 1 ] = '\\0'		232605	0		=			
ANR	232692	ArrayIndexing	fmt [ strlen ( fmt ) - 1 ]		232605	0					
ANR	232693	Identifier	fmt		232605	0					
ANR	232694	AdditiveExpression	strlen ( fmt ) - 1		232605	1		-			
ANR	232695	CallExpression	strlen ( fmt )		232605	0					
ANR	232696	Callee	strlen		232605	0					
ANR	232697	Identifier	strlen		232605	0					
ANR	232698	ArgumentList	fmt		232605	1					
ANR	232699	Argument	fmt		232605	0					
ANR	232700	Identifier	fmt		232605	0					
ANR	232701	PrimaryExpression	1		232605	1					
ANR	232702	PrimaryExpression	'\\0'		232605	1					
ANR	232703	WhileStatement	while ( ptr )		232605	8					
ANR	232704	Condition	ptr	268:8:7252:7254	232605	0	True				
ANR	232705	Identifier	ptr		232605	0					
ANR	232706	CompoundStatement		27:2:586:635	232605	1					
ANR	232707	ExpressionStatement	ptr ++	269:2:7261:7266	232605	0	True				
ANR	232708	PostIncDecOperationExpression	ptr ++		232605	0					
ANR	232709	Identifier	ptr		232605	0					
ANR	232710	IncDec	++		232605	1					
ANR	232711	WhileStatement	while ( IS_DIGIT ( * ptr ) )		232605	1					
ANR	232712	Condition	IS_DIGIT ( * ptr )	271:9:7306:7320	232605	0	True				
ANR	232713	CallExpression	IS_DIGIT ( * ptr )		232605	0					
ANR	232714	Callee	IS_DIGIT		232605	0					
ANR	232715	Identifier	IS_DIGIT		232605	0					
ANR	232716	ArgumentList	* ptr		232605	1					
ANR	232717	Argument	* ptr		232605	0					
ANR	232718	UnaryOperationExpression	* ptr		232605	0					
ANR	232719	UnaryOperator	*		232605	0					
ANR	232720	Identifier	ptr		232605	1					
ANR	232721	CompoundStatement		17:26:364:364	232605	1					
ANR	232722	ExpressionStatement	ptr ++	272:3:7328:7333	232605	0	True				
ANR	232723	PostIncDecOperationExpression	ptr ++		232605	0					
ANR	232724	Identifier	ptr		232605	0					
ANR	232725	IncDec	++		232605	1					
ANR	232726	ExpressionStatement	"r_str_ncpy ( arr , ptr , sizeof ( arr ) - 1 )"	274:2:7341:7380	232605	2	True				
ANR	232727	CallExpression	"r_str_ncpy ( arr , ptr , sizeof ( arr ) - 1 )"		232605	0					
ANR	232728	Callee	r_str_ncpy		232605	0					
ANR	232729	Identifier	r_str_ncpy		232605	0					
ANR	232730	ArgumentList	arr		232605	1					
ANR	232731	Argument	arr		232605	0					
ANR	232732	Identifier	arr		232605	0					
ANR	232733	Argument	ptr		232605	1					
ANR	232734	Identifier	ptr		232605	0					
ANR	232735	Argument	sizeof ( arr ) - 1		232605	2					
ANR	232736	AdditiveExpression	sizeof ( arr ) - 1		232605	0		-			
ANR	232737	SizeofExpression	sizeof ( arr )		232605	0					
ANR	232738	Sizeof	sizeof		232605	0					
ANR	232739	SizeofOperand	arr		232605	1					
ANR	232740	PrimaryExpression	1		232605	1					
ANR	232741	IdentifierDeclStatement	char * tmp = arr ;	275:2:7384:7399	232605	3	True				
ANR	232742	IdentifierDecl	* tmp = arr		232605	0					
ANR	232743	IdentifierDeclType	char *		232605	0					
ANR	232744	Identifier	tmp		232605	1					
ANR	232745	AssignmentExpression	* tmp = arr		232605	2		=			
ANR	232746	Identifier	arr		232605	0					
ANR	232747	Identifier	arr		232605	1					
ANR	232748	WhileStatement	while ( tmp && ( IS_LOWER ( * tmp ) || IS_UPPER ( * tmp ) ) )		232605	4					
ANR	232749	Condition	tmp && ( IS_LOWER ( * tmp ) || IS_UPPER ( * tmp ) )	276:9:7410:7452	232605	0	True				
ANR	232750	AndExpression	tmp && ( IS_LOWER ( * tmp ) || IS_UPPER ( * tmp ) )		232605	0		&&			
ANR	232751	Identifier	tmp		232605	0					
ANR	232752	OrExpression	IS_LOWER ( * tmp ) || IS_UPPER ( * tmp )		232605	1		||			
ANR	232753	CallExpression	IS_LOWER ( * tmp )		232605	0					
ANR	232754	Callee	IS_LOWER		232605	0					
ANR	232755	Identifier	IS_LOWER		232605	0					
ANR	232756	ArgumentList	* tmp		232605	1					
ANR	232757	Argument	* tmp		232605	0					
ANR	232758	UnaryOperationExpression	* tmp		232605	0					
ANR	232759	UnaryOperator	*		232605	0					
ANR	232760	Identifier	tmp		232605	1					
ANR	232761	CallExpression	IS_UPPER ( * tmp )		232605	1					
ANR	232762	Callee	IS_UPPER		232605	0					
ANR	232763	Identifier	IS_UPPER		232605	0					
ANR	232764	ArgumentList	* tmp		232605	1					
ANR	232765	Argument	* tmp		232605	0					
ANR	232766	UnaryOperationExpression	* tmp		232605	0					
ANR	232767	UnaryOperator	*		232605	0					
ANR	232768	Identifier	tmp		232605	1					
ANR	232769	CompoundStatement		22:54:496:496	232605	1					
ANR	232770	ExpressionStatement	tmp ++	277:3:7460:7465	232605	0	True				
ANR	232771	PostIncDecOperationExpression	tmp ++		232605	0					
ANR	232772	Identifier	tmp		232605	0					
ANR	232773	IncDec	++		232605	1					
ANR	232774	ExpressionStatement	* tmp = '\\0'	279:2:7473:7484	232605	5	True				
ANR	232775	AssignmentExpression	* tmp = '\\0'		232605	0		=			
ANR	232776	UnaryOperationExpression	* tmp		232605	0					
ANR	232777	UnaryOperator	*		232605	0					
ANR	232778	Identifier	tmp		232605	1					
ANR	232779	PrimaryExpression	'\\0'		232605	1					
ANR	232780	IdentifierDeclStatement	"const char * query = sdb_fmt ( ""spec.%s.%s"" , spec , arr ) ;"	280:2:7488:7541	232605	6	True				
ANR	232781	IdentifierDecl	"* query = sdb_fmt ( ""spec.%s.%s"" , spec , arr )"		232605	0					
ANR	232782	IdentifierDeclType	const char *		232605	0					
ANR	232783	Identifier	query		232605	1					
ANR	232784	AssignmentExpression	"* query = sdb_fmt ( ""spec.%s.%s"" , spec , arr )"		232605	2		=			
ANR	232785	Identifier	query		232605	0					
ANR	232786	CallExpression	"sdb_fmt ( ""spec.%s.%s"" , spec , arr )"		232605	1					
ANR	232787	Callee	sdb_fmt		232605	0					
ANR	232788	Identifier	sdb_fmt		232605	0					
ANR	232789	ArgumentList	"""spec.%s.%s"""		232605	1					
ANR	232790	Argument	"""spec.%s.%s"""		232605	0					
ANR	232791	PrimaryExpression	"""spec.%s.%s"""		232605	0					
ANR	232792	Argument	spec		232605	1					
ANR	232793	Identifier	spec		232605	0					
ANR	232794	Argument	arr		232605	2					
ANR	232795	Identifier	arr		232605	0					
ANR	232796	IdentifierDeclStatement	"char * type = ( char * ) sdb_const_get ( s , query , 0 ) ;"	281:2:7545:7594	232605	7	True				
ANR	232797	IdentifierDecl	"* type = ( char * ) sdb_const_get ( s , query , 0 )"		232605	0					
ANR	232798	IdentifierDeclType	char *		232605	0					
ANR	232799	Identifier	type		232605	1					
ANR	232800	AssignmentExpression	"* type = ( char * ) sdb_const_get ( s , query , 0 )"		232605	2		=			
ANR	232801	Identifier	type		232605	0					
ANR	232802	CastExpression	"( char * ) sdb_const_get ( s , query , 0 )"		232605	1					
ANR	232803	CastTarget	char *		232605	0					
ANR	232804	CallExpression	"sdb_const_get ( s , query , 0 )"		232605	1					
ANR	232805	Callee	sdb_const_get		232605	0					
ANR	232806	Identifier	sdb_const_get		232605	0					
ANR	232807	ArgumentList	s		232605	1					
ANR	232808	Argument	s		232605	0					
ANR	232809	Identifier	s		232605	0					
ANR	232810	Argument	query		232605	1					
ANR	232811	Identifier	query		232605	0					
ANR	232812	Argument	0		232605	2					
ANR	232813	PrimaryExpression	0		232605	0					
ANR	232814	IfStatement	if ( type )		232605	8					
ANR	232815	Condition	type	282:6:7602:7605	232605	0	True				
ANR	232816	Identifier	type		232605	0					
ANR	232817	CompoundStatement		28:12:649:649	232605	1					
ANR	232818	ExpressionStatement	"r_list_append ( ret , type )"	283:3:7613:7638	232605	0	True				
ANR	232819	CallExpression	"r_list_append ( ret , type )"		232605	0					
ANR	232820	Callee	r_list_append		232605	0					
ANR	232821	Identifier	r_list_append		232605	0					
ANR	232822	ArgumentList	ret		232605	1					
ANR	232823	Argument	ret		232605	0					
ANR	232824	Identifier	ret		232605	0					
ANR	232825	Argument	type		232605	1					
ANR	232826	Identifier	type		232605	0					
ANR	232827	ExpressionStatement	"ptr = strchr ( ptr , '%' )"	285:2:7646:7669	232605	9	True				
ANR	232828	AssignmentExpression	"ptr = strchr ( ptr , '%' )"		232605	0		=			
ANR	232829	Identifier	ptr		232605	0					
ANR	232830	CallExpression	"strchr ( ptr , '%' )"		232605	1					
ANR	232831	Callee	strchr		232605	0					
ANR	232832	Identifier	strchr		232605	0					
ANR	232833	ArgumentList	ptr		232605	1					
ANR	232834	Argument	ptr		232605	0					
ANR	232835	Identifier	ptr		232605	0					
ANR	232836	Argument	'%'		232605	1					
ANR	232837	PrimaryExpression	'%'		232605	0					
ANR	232838	ReturnStatement	return ret ;	287:1:7675:7685	232605	9	True				
ANR	232839	Identifier	ret		232605	0					
ANR	232840	ReturnType	static RList *		232605	1					
ANR	232841	Identifier	parse_format		232605	2					
ANR	232842	ParameterList	"RCore * core , char * fmt"		232605	3					
ANR	232843	Parameter	RCore * core	255:27:6934:6944	232605	0	True				
ANR	232844	ParameterType	RCore *		232605	0					
ANR	232845	Identifier	core		232605	1					
ANR	232846	Parameter	char * fmt	255:40:6947:6955	232605	1	True				
ANR	232847	ParameterType	char *		232605	0					
ANR	232848	Identifier	fmt		232605	1					
ANR	232849	CFGEntryNode	ENTRY		232605		True				
ANR	232850	CFGExitNode	EXIT		232605		True				
ANR	232851	Symbol	* tmp		232605						
ANR	232852	Symbol	IS_LOWER		232605						
ANR	232853	Symbol	* fmt		232605						
ANR	232854	Symbol	* core		232605						
ANR	232855	Symbol	r_config_get		232605						
ANR	232856	Symbol	strchr		232605						
ANR	232857	Symbol	fmt		232605						
ANR	232858	Symbol	type		232605						
ANR	232859	Symbol	core -> anal		232605						
ANR	232860	Symbol	sdb_const_get		232605						
ANR	232861	Symbol	spec		232605						
ANR	232862	Symbol	strlen		232605						
ANR	232863	Symbol	tmp		232605						
ANR	232864	Symbol	* ptr		232605						
ANR	232865	Symbol	sdb_fmt		232605						
ANR	232866	Symbol	* * core		232605						
ANR	232867	Symbol	ret		232605						
ANR	232868	Symbol	core -> config		232605						
ANR	232869	Symbol	arr		232605						
ANR	232870	Symbol	NULL		232605						
ANR	232871	Symbol	IS_UPPER		232605						
ANR	232872	Symbol	query		232605						
ANR	232873	Symbol	ptr		232605						
ANR	232874	Symbol	IS_DIGIT		232605						
ANR	232875	Symbol	core		232605						
ANR	232876	Symbol	core -> anal -> sdb_fmts		232605						
ANR	232877	Symbol	s		232605						
ANR	232878	Symbol	* core -> anal		232605						
ANR	232879	Symbol	* strlen		232605						
ANR	232880	Symbol	r_list_new		232605						
ANR	232881	Function	type_match	294:0:7751:12648							
ANR	232882	FunctionDef	"type_match (RCore * core , ut64 addr , char * fcn_name , ut64 baddr , const char * cc , int prev_idx , bool userfnc , ut64 caddr)"		232881	0					
ANR	232883	CompoundStatement		295:42:7884:12648	232881	0					
ANR	232884	IdentifierDeclStatement	Sdb * trace = core -> anal -> esil -> db_trace ;	296:1:7887:7926	232881	0	True				
ANR	232885	IdentifierDecl	* trace = core -> anal -> esil -> db_trace		232881	0					
ANR	232886	IdentifierDeclType	Sdb *		232881	0					
ANR	232887	Identifier	trace		232881	1					
ANR	232888	AssignmentExpression	* trace = core -> anal -> esil -> db_trace		232881	2		=			
ANR	232889	Identifier	trace		232881	0					
ANR	232890	PtrMemberAccess	core -> anal -> esil -> db_trace		232881	1					
ANR	232891	PtrMemberAccess	core -> anal -> esil		232881	0					
ANR	232892	PtrMemberAccess	core -> anal		232881	0					
ANR	232893	Identifier	core		232881	0					
ANR	232894	Identifier	anal		232881	1					
ANR	232895	Identifier	esil		232881	1					
ANR	232896	Identifier	db_trace		232881	1					
ANR	232897	IdentifierDeclStatement	Sdb * TDB = core -> anal -> sdb_types ;	297:1:7929:7961	232881	1	True				
ANR	232898	IdentifierDecl	* TDB = core -> anal -> sdb_types		232881	0					
ANR	232899	IdentifierDeclType	Sdb *		232881	0					
ANR	232900	Identifier	TDB		232881	1					
ANR	232901	AssignmentExpression	* TDB = core -> anal -> sdb_types		232881	2		=			
ANR	232902	Identifier	TDB		232881	0					
ANR	232903	PtrMemberAccess	core -> anal -> sdb_types		232881	1					
ANR	232904	PtrMemberAccess	core -> anal		232881	0					
ANR	232905	Identifier	core		232881	0					
ANR	232906	Identifier	anal		232881	1					
ANR	232907	Identifier	sdb_types		232881	1					
ANR	232908	IdentifierDeclStatement	RAnal * anal = core -> anal ;	298:1:7964:7988	232881	2	True				
ANR	232909	IdentifierDecl	* anal = core -> anal		232881	0					
ANR	232910	IdentifierDeclType	RAnal *		232881	0					
ANR	232911	Identifier	anal		232881	1					
ANR	232912	AssignmentExpression	* anal = core -> anal		232881	2		=			
ANR	232913	Identifier	anal		232881	0					
ANR	232914	PtrMemberAccess	core -> anal		232881	1					
ANR	232915	Identifier	core		232881	0					
ANR	232916	Identifier	anal		232881	1					
ANR	232917	IdentifierDeclStatement	RList * types = NULL ;	299:1:7991:8010	232881	3	True				
ANR	232918	IdentifierDecl	* types = NULL		232881	0					
ANR	232919	IdentifierDeclType	RList *		232881	0					
ANR	232920	Identifier	types		232881	1					
ANR	232921	AssignmentExpression	* types = NULL		232881	2		=			
ANR	232922	Identifier	NULL		232881	0					
ANR	232923	Identifier	NULL		232881	1					
ANR	232924	IdentifierDeclStatement	"int idx = sdb_num_get ( trace , ""idx"" , 0 ) ;"	300:1:8013:8052	232881	4	True				
ANR	232925	IdentifierDecl	"idx = sdb_num_get ( trace , ""idx"" , 0 )"		232881	0					
ANR	232926	IdentifierDeclType	int		232881	0					
ANR	232927	Identifier	idx		232881	1					
ANR	232928	AssignmentExpression	"idx = sdb_num_get ( trace , ""idx"" , 0 )"		232881	2		=			
ANR	232929	Identifier	idx		232881	0					
ANR	232930	CallExpression	"sdb_num_get ( trace , ""idx"" , 0 )"		232881	1					
ANR	232931	Callee	sdb_num_get		232881	0					
ANR	232932	Identifier	sdb_num_get		232881	0					
ANR	232933	ArgumentList	trace		232881	1					
ANR	232934	Argument	trace		232881	0					
ANR	232935	Identifier	trace		232881	0					
ANR	232936	Argument	"""idx"""		232881	1					
ANR	232937	PrimaryExpression	"""idx"""		232881	0					
ANR	232938	Argument	0		232881	2					
ANR	232939	PrimaryExpression	0		232881	0					
ANR	232940	IdentifierDeclStatement	"bool verbose = r_config_get_i ( core -> config , ""anal.types.verbose"" ) ;"	301:1:8055:8121	232881	5	True				
ANR	232941	IdentifierDecl	"verbose = r_config_get_i ( core -> config , ""anal.types.verbose"" )"		232881	0					
ANR	232942	IdentifierDeclType	bool		232881	0					
ANR	232943	Identifier	verbose		232881	1					
ANR	232944	AssignmentExpression	"verbose = r_config_get_i ( core -> config , ""anal.types.verbose"" )"		232881	2		=			
ANR	232945	Identifier	verbose		232881	0					
ANR	232946	CallExpression	"r_config_get_i ( core -> config , ""anal.types.verbose"" )"		232881	1					
ANR	232947	Callee	r_config_get_i		232881	0					
ANR	232948	Identifier	r_config_get_i		232881	0					
ANR	232949	ArgumentList	core -> config		232881	1					
ANR	232950	Argument	core -> config		232881	0					
ANR	232951	PtrMemberAccess	core -> config		232881	0					
ANR	232952	Identifier	core		232881	0					
ANR	232953	Identifier	config		232881	1					
ANR	232954	Argument	"""anal.types.verbose"""		232881	1					
ANR	232955	PrimaryExpression	"""anal.types.verbose"""		232881	0					
ANR	232956	IdentifierDeclStatement	"bool stack_rev = false , in_stack = false , format = false ;"	302:1:8124:8180	232881	6	True				
ANR	232957	IdentifierDecl	stack_rev = false		232881	0					
ANR	232958	IdentifierDeclType	bool		232881	0					
ANR	232959	Identifier	stack_rev		232881	1					
ANR	232960	AssignmentExpression	stack_rev = false		232881	2		=			
ANR	232961	Identifier	false		232881	0					
ANR	232962	Identifier	false		232881	1					
ANR	232963	IdentifierDecl	in_stack = false		232881	1					
ANR	232964	IdentifierDeclType	bool		232881	0					
ANR	232965	Identifier	in_stack		232881	1					
ANR	232966	AssignmentExpression	in_stack = false		232881	2		=			
ANR	232967	Identifier	false		232881	0					
ANR	232968	Identifier	false		232881	1					
ANR	232969	IdentifierDecl	format = false		232881	2					
ANR	232970	IdentifierDeclType	bool		232881	0					
ANR	232971	Identifier	format		232881	1					
ANR	232972	AssignmentExpression	format = false		232881	2		=			
ANR	232973	Identifier	false		232881	0					
ANR	232974	Identifier	false		232881	1					
ANR	232975	IfStatement	if ( ! fcn_name || ! cc )		232881	7					
ANR	232976	Condition	! fcn_name || ! cc	304:5:8188:8203	232881	0	True				
ANR	232977	OrExpression	! fcn_name || ! cc		232881	0		||			
ANR	232978	UnaryOperationExpression	! fcn_name		232881	0					
ANR	232979	UnaryOperator	!		232881	0					
ANR	232980	Identifier	fcn_name		232881	1					
ANR	232981	UnaryOperationExpression	! cc		232881	1					
ANR	232982	UnaryOperator	!		232881	0					
ANR	232983	Identifier	cc		232881	1					
ANR	232984	CompoundStatement		10:23:321:321	232881	1					
ANR	232985	ReturnStatement	return ;	305:2:8210:8216	232881	0	True				
ANR	232986	IdentifierDeclStatement	"int i , j , pos = 0 , size = 0 , max = r_type_func_args_count ( TDB , fcn_name ) ;"	307:1:8222:8295	232881	8	True				
ANR	232987	IdentifierDecl	i		232881	0					
ANR	232988	IdentifierDeclType	int		232881	0					
ANR	232989	Identifier	i		232881	1					
ANR	232990	IdentifierDecl	j		232881	1					
ANR	232991	IdentifierDeclType	int		232881	0					
ANR	232992	Identifier	j		232881	1					
ANR	232993	IdentifierDecl	pos = 0		232881	2					
ANR	232994	IdentifierDeclType	int		232881	0					
ANR	232995	Identifier	pos		232881	1					
ANR	232996	AssignmentExpression	pos = 0		232881	2		=			
ANR	232997	Identifier	pos		232881	0					
ANR	232998	PrimaryExpression	0		232881	1					
ANR	232999	IdentifierDecl	size = 0		232881	3					
ANR	233000	IdentifierDeclType	int		232881	0					
ANR	233001	Identifier	size		232881	1					
ANR	233002	AssignmentExpression	size = 0		232881	2		=			
ANR	233003	Identifier	size		232881	0					
ANR	233004	PrimaryExpression	0		232881	1					
ANR	233005	IdentifierDecl	"max = r_type_func_args_count ( TDB , fcn_name )"		232881	4					
ANR	233006	IdentifierDeclType	int		232881	0					
ANR	233007	Identifier	max		232881	1					
ANR	233008	AssignmentExpression	"max = r_type_func_args_count ( TDB , fcn_name )"		232881	2		=			
ANR	233009	Identifier	max		232881	0					
ANR	233010	CallExpression	"r_type_func_args_count ( TDB , fcn_name )"		232881	1					
ANR	233011	Callee	r_type_func_args_count		232881	0					
ANR	233012	Identifier	r_type_func_args_count		232881	0					
ANR	233013	ArgumentList	TDB		232881	1					
ANR	233014	Argument	TDB		232881	0					
ANR	233015	Identifier	TDB		232881	0					
ANR	233016	Argument	fcn_name		232881	1					
ANR	233017	Identifier	fcn_name		232881	0					
ANR	233018	IdentifierDeclStatement	"const char * place = r_anal_cc_arg ( anal , cc , 0 ) ;"	308:1:8298:8345	232881	9	True				
ANR	233019	IdentifierDecl	"* place = r_anal_cc_arg ( anal , cc , 0 )"		232881	0					
ANR	233020	IdentifierDeclType	const char *		232881	0					
ANR	233021	Identifier	place		232881	1					
ANR	233022	AssignmentExpression	"* place = r_anal_cc_arg ( anal , cc , 0 )"		232881	2		=			
ANR	233023	Identifier	place		232881	0					
ANR	233024	CallExpression	"r_anal_cc_arg ( anal , cc , 0 )"		232881	1					
ANR	233025	Callee	r_anal_cc_arg		232881	0					
ANR	233026	Identifier	r_anal_cc_arg		232881	0					
ANR	233027	ArgumentList	anal		232881	1					
ANR	233028	Argument	anal		232881	0					
ANR	233029	Identifier	anal		232881	0					
ANR	233030	Argument	cc		232881	1					
ANR	233031	Identifier	cc		232881	0					
ANR	233032	Argument	0		232881	2					
ANR	233033	PrimaryExpression	0		232881	0					
ANR	233034	ExpressionStatement	"r_cons_break_push ( NULL , NULL )"	309:1:8348:8378	232881	10	True				
ANR	233035	CallExpression	"r_cons_break_push ( NULL , NULL )"		232881	0					
ANR	233036	Callee	r_cons_break_push		232881	0					
ANR	233037	Identifier	r_cons_break_push		232881	0					
ANR	233038	ArgumentList	NULL		232881	1					
ANR	233039	Argument	NULL		232881	0					
ANR	233040	Identifier	NULL		232881	0					
ANR	233041	Argument	NULL		232881	1					
ANR	233042	Identifier	NULL		232881	0					
ANR	233043	IfStatement	"if ( ! strcmp ( place , ""stack_rev"" ) )"		232881	11					
ANR	233044	Condition	"! strcmp ( place , ""stack_rev"" )"	311:5:8386:8413	232881	0	True				
ANR	233045	UnaryOperationExpression	"! strcmp ( place , ""stack_rev"" )"		232881	0					
ANR	233046	UnaryOperator	!		232881	0					
ANR	233047	CallExpression	"strcmp ( place , ""stack_rev"" )"		232881	1					
ANR	233048	Callee	strcmp		232881	0					
ANR	233049	Identifier	strcmp		232881	0					
ANR	233050	ArgumentList	place		232881	1					
ANR	233051	Argument	place		232881	0					
ANR	233052	Identifier	place		232881	0					
ANR	233053	Argument	"""stack_rev"""		232881	1					
ANR	233054	PrimaryExpression	"""stack_rev"""		232881	0					
ANR	233055	CompoundStatement		17:35:531:531	232881	1					
ANR	233056	ExpressionStatement	stack_rev = true	312:2:8420:8436	232881	0	True				
ANR	233057	AssignmentExpression	stack_rev = true		232881	0		=			
ANR	233058	Identifier	stack_rev		232881	0					
ANR	233059	Identifier	true		232881	1					
ANR	233060	IfStatement	"if ( ! strncmp ( place , ""stack"" , 5 ) )"		232881	12					
ANR	233061	Condition	"! strncmp ( place , ""stack"" , 5 )"	314:5:8446:8473	232881	0	True				
ANR	233062	UnaryOperationExpression	"! strncmp ( place , ""stack"" , 5 )"		232881	0					
ANR	233063	UnaryOperator	!		232881	0					
ANR	233064	CallExpression	"strncmp ( place , ""stack"" , 5 )"		232881	1					
ANR	233065	Callee	strncmp		232881	0					
ANR	233066	Identifier	strncmp		232881	0					
ANR	233067	ArgumentList	place		232881	1					
ANR	233068	Argument	place		232881	0					
ANR	233069	Identifier	place		232881	0					
ANR	233070	Argument	"""stack"""		232881	1					
ANR	233071	PrimaryExpression	"""stack"""		232881	0					
ANR	233072	Argument	5		232881	2					
ANR	233073	PrimaryExpression	5		232881	0					
ANR	233074	CompoundStatement		20:35:591:591	232881	1					
ANR	233075	ExpressionStatement	in_stack = true	315:2:8480:8495	232881	0	True				
ANR	233076	AssignmentExpression	in_stack = true		232881	0		=			
ANR	233077	Identifier	in_stack		232881	0					
ANR	233078	Identifier	true		232881	1					
ANR	233079	IfStatement	"if ( verbose && ! strncmp ( fcn_name , ""sym.imp."" , 8 ) )"		232881	13					
ANR	233080	Condition	"verbose && ! strncmp ( fcn_name , ""sym.imp."" , 8 )"	317:5:8505:8549	232881	0	True				
ANR	233081	AndExpression	"verbose && ! strncmp ( fcn_name , ""sym.imp."" , 8 )"		232881	0		&&			
ANR	233082	Identifier	verbose		232881	0					
ANR	233083	UnaryOperationExpression	"! strncmp ( fcn_name , ""sym.imp."" , 8 )"		232881	1					
ANR	233084	UnaryOperator	!		232881	0					
ANR	233085	CallExpression	"strncmp ( fcn_name , ""sym.imp."" , 8 )"		232881	1					
ANR	233086	Callee	strncmp		232881	0					
ANR	233087	Identifier	strncmp		232881	0					
ANR	233088	ArgumentList	fcn_name		232881	1					
ANR	233089	Argument	fcn_name		232881	0					
ANR	233090	Identifier	fcn_name		232881	0					
ANR	233091	Argument	"""sym.imp."""		232881	1					
ANR	233092	PrimaryExpression	"""sym.imp."""		232881	0					
ANR	233093	Argument	8		232881	2					
ANR	233094	PrimaryExpression	8		232881	0					
ANR	233095	CompoundStatement		23:52:667:667	232881	1					
ANR	233096	ExpressionStatement	"eprintf ( ""%s missing function definition\\n"" , fcn_name + 8 )"	318:2:8556:8614	232881	0	True				
ANR	233097	CallExpression	"eprintf ( ""%s missing function definition\\n"" , fcn_name + 8 )"		232881	0					
ANR	233098	Callee	eprintf		232881	0					
ANR	233099	Identifier	eprintf		232881	0					
ANR	233100	ArgumentList	"""%s missing function definition\\n"""		232881	1					
ANR	233101	Argument	"""%s missing function definition\\n"""		232881	0					
ANR	233102	PrimaryExpression	"""%s missing function definition\\n"""		232881	0					
ANR	233103	Argument	fcn_name + 8		232881	1					
ANR	233104	AdditiveExpression	fcn_name + 8		232881	0		+			
ANR	233105	Identifier	fcn_name		232881	0					
ANR	233106	PrimaryExpression	8		232881	1					
ANR	233107	IfStatement	if ( ! max )		232881	14					
ANR	233108	Condition	! max	320:5:8624:8627	232881	0	True				
ANR	233109	UnaryOperationExpression	! max		232881	0					
ANR	233110	UnaryOperator	!		232881	0					
ANR	233111	Identifier	max		232881	1					
ANR	233112	CompoundStatement		26:11:745:745	232881	1					
ANR	233113	IfStatement	if ( ! in_stack )		232881	0					
ANR	233114	Condition	! in_stack	321:6:8638:8646	232881	0	True				
ANR	233115	UnaryOperationExpression	! in_stack		232881	0					
ANR	233116	UnaryOperator	!		232881	0					
ANR	233117	Identifier	in_stack		232881	1					
ANR	233118	CompoundStatement		27:17:764:764	232881	1					
ANR	233119	ExpressionStatement	"max = r_anal_cc_max_arg ( anal , cc )"	322:3:8654:8688	232881	0	True				
ANR	233120	AssignmentExpression	"max = r_anal_cc_max_arg ( anal , cc )"		232881	0		=			
ANR	233121	Identifier	max		232881	0					
ANR	233122	CallExpression	"r_anal_cc_max_arg ( anal , cc )"		232881	1					
ANR	233123	Callee	r_anal_cc_max_arg		232881	0					
ANR	233124	Identifier	r_anal_cc_max_arg		232881	0					
ANR	233125	ArgumentList	anal		232881	1					
ANR	233126	Argument	anal		232881	0					
ANR	233127	Identifier	anal		232881	0					
ANR	233128	Argument	cc		232881	1					
ANR	233129	Identifier	cc		232881	0					
ANR	233130	ElseStatement	else		232881	0					
ANR	233131	CompoundStatement		29:9:814:814	232881	0					
ANR	233132	ExpressionStatement	max = DEFAULT_MAX	324:3:8704:8721	232881	0	True				
ANR	233133	AssignmentExpression	max = DEFAULT_MAX		232881	0		=			
ANR	233134	Identifier	max		232881	0					
ANR	233135	Identifier	DEFAULT_MAX		232881	1					
ANR	233136	ForStatement	for ( i = 0 ; i < max ; i ++ )		232881	15					
ANR	233137	ForInit	i = 0 ;	327:6:8736:8741	232881	0	True				
ANR	233138	AssignmentExpression	i = 0		232881	0		=			
ANR	233139	Identifier	i		232881	0					
ANR	233140	PrimaryExpression	0		232881	1					
ANR	233141	Condition	i < max	327:13:8743:8749	232881	1	True				
ANR	233142	RelationalExpression	i < max		232881	0		<			
ANR	233143	Identifier	i		232881	0					
ANR	233144	Identifier	max		232881	1					
ANR	233145	PostIncDecOperationExpression	i ++	327:22:8752:8754	232881	2	True				
ANR	233146	Identifier	i		232881	0					
ANR	233147	IncDec	++		232881	1					
ANR	233148	CompoundStatement		57:2:1504:1520	232881	3					
ANR	233149	IdentifierDeclStatement	int arg_num = stack_rev ? ( max - 1 - i ) : i ;	328:2:8761:8804	232881	0	True				
ANR	233150	IdentifierDecl	arg_num = stack_rev ? ( max - 1 - i ) : i		232881	0					
ANR	233151	IdentifierDeclType	int		232881	0					
ANR	233152	Identifier	arg_num		232881	1					
ANR	233153	AssignmentExpression	arg_num = stack_rev ? ( max - 1 - i ) : i		232881	2		=			
ANR	233154	Identifier	arg_num		232881	0					
ANR	233155	ConditionalExpression	stack_rev ? ( max - 1 - i ) : i		232881	1					
ANR	233156	Condition	stack_rev		232881	0					
ANR	233157	Identifier	stack_rev		232881	0					
ANR	233158	AdditiveExpression	max - 1 - i		232881	1		-			
ANR	233159	Identifier	max		232881	0					
ANR	233160	AdditiveExpression	1 - i		232881	1		-			
ANR	233161	PrimaryExpression	1		232881	0					
ANR	233162	Identifier	i		232881	1					
ANR	233163	Identifier	i		232881	2					
ANR	233164	IdentifierDeclStatement	char * type = NULL ;	329:2:8808:8825	232881	1	True				
ANR	233165	IdentifierDecl	* type = NULL		232881	0					
ANR	233166	IdentifierDeclType	char *		232881	0					
ANR	233167	Identifier	type		232881	1					
ANR	233168	AssignmentExpression	* type = NULL		232881	2		=			
ANR	233169	Identifier	NULL		232881	0					
ANR	233170	Identifier	NULL		232881	1					
ANR	233171	IdentifierDeclStatement	const char * name = NULL ;	330:2:8829:8852	232881	2	True				
ANR	233172	IdentifierDecl	* name = NULL		232881	0					
ANR	233173	IdentifierDeclType	const char *		232881	0					
ANR	233174	Identifier	name		232881	1					
ANR	233175	AssignmentExpression	* name = NULL		232881	2		=			
ANR	233176	Identifier	NULL		232881	0					
ANR	233177	Identifier	NULL		232881	1					
ANR	233178	IfStatement	if ( format )		232881	3					
ANR	233179	Condition	format	331:6:8860:8865	232881	0	True				
ANR	233180	Identifier	format		232881	0					
ANR	233181	CompoundStatement		37:14:983:983	232881	1					
ANR	233182	IfStatement	if ( r_list_empty ( types ) )		232881	0					
ANR	233183	Condition	r_list_empty ( types )	332:7:8877:8896	232881	0	True				
ANR	233184	CallExpression	r_list_empty ( types )		232881	0					
ANR	233185	Callee	r_list_empty		232881	0					
ANR	233186	Identifier	r_list_empty		232881	0					
ANR	233187	ArgumentList	types		232881	1					
ANR	233188	Argument	types		232881	0					
ANR	233189	Identifier	types		232881	0					
ANR	233190	CompoundStatement		38:29:1014:1014	232881	1					
ANR	233191	BreakStatement	break ;	333:4:8905:8910	232881	0	True				
ANR	233192	ExpressionStatement	"type = r_str_new ( r_list_get_n ( types , pos ++ ) )"	335:3:8920:8966	232881	1	True				
ANR	233193	AssignmentExpression	"type = r_str_new ( r_list_get_n ( types , pos ++ ) )"		232881	0		=			
ANR	233194	Identifier	type		232881	0					
ANR	233195	CallExpression	"r_str_new ( r_list_get_n ( types , pos ++ ) )"		232881	1					
ANR	233196	Callee	r_str_new		232881	0					
ANR	233197	Identifier	r_str_new		232881	0					
ANR	233198	ArgumentList	"r_list_get_n ( types , pos ++ )"		232881	1					
ANR	233199	Argument	"r_list_get_n ( types , pos ++ )"		232881	0					
ANR	233200	CallExpression	"r_list_get_n ( types , pos ++ )"		232881	0					
ANR	233201	Callee	r_list_get_n		232881	0					
ANR	233202	Identifier	r_list_get_n		232881	0					
ANR	233203	ArgumentList	types		232881	1					
ANR	233204	Argument	types		232881	0					
ANR	233205	Identifier	types		232881	0					
ANR	233206	Argument	pos ++		232881	1					
ANR	233207	PostIncDecOperationExpression	pos ++		232881	0					
ANR	233208	Identifier	pos		232881	0					
ANR	233209	IncDec	++		232881	1					
ANR	233210	ElseStatement	else		232881	0					
ANR	233211	CompoundStatement		42:9:1092:1092	232881	0					
ANR	233212	ExpressionStatement	"type = r_type_func_args_type ( TDB , fcn_name , arg_num )"	337:3:8982:9035	232881	0	True				
ANR	233213	AssignmentExpression	"type = r_type_func_args_type ( TDB , fcn_name , arg_num )"		232881	0		=			
ANR	233214	Identifier	type		232881	0					
ANR	233215	CallExpression	"r_type_func_args_type ( TDB , fcn_name , arg_num )"		232881	1					
ANR	233216	Callee	r_type_func_args_type		232881	0					
ANR	233217	Identifier	r_type_func_args_type		232881	0					
ANR	233218	ArgumentList	TDB		232881	1					
ANR	233219	Argument	TDB		232881	0					
ANR	233220	Identifier	TDB		232881	0					
ANR	233221	Argument	fcn_name		232881	1					
ANR	233222	Identifier	fcn_name		232881	0					
ANR	233223	Argument	arg_num		232881	2					
ANR	233224	Identifier	arg_num		232881	0					
ANR	233225	ExpressionStatement	"name = r_type_func_args_name ( TDB , fcn_name , arg_num )"	338:3:9040:9093	232881	1	True				
ANR	233226	AssignmentExpression	"name = r_type_func_args_name ( TDB , fcn_name , arg_num )"		232881	0		=			
ANR	233227	Identifier	name		232881	0					
ANR	233228	CallExpression	"r_type_func_args_name ( TDB , fcn_name , arg_num )"		232881	1					
ANR	233229	Callee	r_type_func_args_name		232881	0					
ANR	233230	Identifier	r_type_func_args_name		232881	0					
ANR	233231	ArgumentList	TDB		232881	1					
ANR	233232	Argument	TDB		232881	0					
ANR	233233	Identifier	TDB		232881	0					
ANR	233234	Argument	fcn_name		232881	1					
ANR	233235	Identifier	fcn_name		232881	0					
ANR	233236	Argument	arg_num		232881	2					
ANR	233237	Identifier	arg_num		232881	0					
ANR	233238	IfStatement	if ( ! type && ! userfnc )		232881	4					
ANR	233239	Condition	! type && ! userfnc	340:6:9105:9121	232881	0	True				
ANR	233240	AndExpression	! type && ! userfnc		232881	0		&&			
ANR	233241	UnaryOperationExpression	! type		232881	0					
ANR	233242	UnaryOperator	!		232881	0					
ANR	233243	Identifier	type		232881	1					
ANR	233244	UnaryOperationExpression	! userfnc		232881	1					
ANR	233245	UnaryOperator	!		232881	0					
ANR	233246	Identifier	userfnc		232881	1					
ANR	233247	CompoundStatement		46:25:1239:1239	232881	1					
ANR	233248	ContinueStatement	continue ;	341:3:9129:9137	232881	0	True				
ANR	233249	IfStatement	if ( ! in_stack )		232881	5					
ANR	233250	Condition	! in_stack	343:6:9149:9157	232881	0	True				
ANR	233251	UnaryOperationExpression	! in_stack		232881	0					
ANR	233252	UnaryOperator	!		232881	0					
ANR	233253	Identifier	in_stack		232881	1					
ANR	233254	CompoundStatement		49:17:1275:1275	232881	1					
ANR	233255	ExpressionStatement	"place = r_anal_cc_arg ( anal , cc , arg_num )"	345:3:9238:9279	232881	0	True				
ANR	233256	AssignmentExpression	"place = r_anal_cc_arg ( anal , cc , arg_num )"		232881	0		=			
ANR	233257	Identifier	place		232881	0					
ANR	233258	CallExpression	"r_anal_cc_arg ( anal , cc , arg_num )"		232881	1					
ANR	233259	Callee	r_anal_cc_arg		232881	0					
ANR	233260	Identifier	r_anal_cc_arg		232881	0					
ANR	233261	ArgumentList	anal		232881	1					
ANR	233262	Argument	anal		232881	0					
ANR	233263	Identifier	anal		232881	0					
ANR	233264	Argument	cc		232881	1					
ANR	233265	Identifier	cc		232881	0					
ANR	233266	Argument	arg_num		232881	2					
ANR	233267	Identifier	arg_num		232881	0					
ANR	233268	IdentifierDeclStatement	char regname [ REG_SZ ] = { 0 } ;	347:2:9287:9313	232881	6	True				
ANR	233269	IdentifierDecl	regname [ REG_SZ ] = { 0 }		232881	0					
ANR	233270	IdentifierDeclType	char [ REG_SZ ]		232881	0					
ANR	233271	Identifier	regname		232881	1					
ANR	233272	Identifier	REG_SZ		232881	2					
ANR	233273	AssignmentExpression	regname [ REG_SZ ] = { 0 }		232881	3		=			
ANR	233274	Identifier	REG_SZ		232881	0					
ANR	233275	InitializerList	0		232881	1					
ANR	233276	PrimaryExpression	0		232881	0					
ANR	233277	IdentifierDeclStatement	ut64 xaddr = UT64_MAX ;	348:2:9317:9338	232881	7	True				
ANR	233278	IdentifierDecl	xaddr = UT64_MAX		232881	0					
ANR	233279	IdentifierDeclType	ut64		232881	0					
ANR	233280	Identifier	xaddr		232881	1					
ANR	233281	AssignmentExpression	xaddr = UT64_MAX		232881	2		=			
ANR	233282	Identifier	UT64_MAX		232881	0					
ANR	233283	Identifier	UT64_MAX		232881	1					
ANR	233284	IdentifierDeclStatement	bool memref = false ;	349:2:9342:9361	232881	8	True				
ANR	233285	IdentifierDecl	memref = false		232881	0					
ANR	233286	IdentifierDeclType	bool		232881	0					
ANR	233287	Identifier	memref		232881	1					
ANR	233288	AssignmentExpression	memref = false		232881	2		=			
ANR	233289	Identifier	false		232881	0					
ANR	233290	Identifier	false		232881	1					
ANR	233291	IdentifierDeclStatement	bool cmt_set = false ;	350:2:9365:9385	232881	9	True				
ANR	233292	IdentifierDecl	cmt_set = false		232881	0					
ANR	233293	IdentifierDeclType	bool		232881	0					
ANR	233294	Identifier	cmt_set		232881	1					
ANR	233295	AssignmentExpression	cmt_set = false		232881	2		=			
ANR	233296	Identifier	false		232881	0					
ANR	233297	Identifier	false		232881	1					
ANR	233298	IdentifierDeclStatement	bool res = false ;	351:2:9389:9405	232881	10	True				
ANR	233299	IdentifierDecl	res = false		232881	0					
ANR	233300	IdentifierDeclType	bool		232881	0					
ANR	233301	Identifier	res		232881	1					
ANR	233302	AssignmentExpression	res = false		232881	2		=			
ANR	233303	Identifier	false		232881	0					
ANR	233304	Identifier	false		232881	1					
ANR	233305	ForStatement	for ( j = idx ; j >= prev_idx ; j -- )		232881	11					
ANR	233306	ForInit	j = idx ;	353:7:9478:9485	232881	0	True				
ANR	233307	AssignmentExpression	j = idx		232881	0		=			
ANR	233308	Identifier	j		232881	0					
ANR	233309	Identifier	idx		232881	1					
ANR	233310	Condition	j >= prev_idx	353:16:9487:9499	232881	1	True				
ANR	233311	RelationalExpression	j >= prev_idx		232881	0		>=			
ANR	233312	Identifier	j		232881	0					
ANR	233313	Identifier	prev_idx		232881	1					
ANR	233314	PostIncDecOperationExpression	j --	353:31:9502:9504	232881	2	True				
ANR	233315	Identifier	j		232881	0					
ANR	233316	IncDec	--		232881	1					
ANR	233317	CompoundStatement		83:3:2411:2457	232881	3					
ANR	233318	IdentifierDeclStatement	"ut64 instr_addr = sdb_num_get ( trace , sdb_fmt ( ""%d.addr"" , j ) , 0 ) ;"	354:3:9512:9576	232881	0	True				
ANR	233319	IdentifierDecl	"instr_addr = sdb_num_get ( trace , sdb_fmt ( ""%d.addr"" , j ) , 0 )"		232881	0					
ANR	233320	IdentifierDeclType	ut64		232881	0					
ANR	233321	Identifier	instr_addr		232881	1					
ANR	233322	AssignmentExpression	"instr_addr = sdb_num_get ( trace , sdb_fmt ( ""%d.addr"" , j ) , 0 )"		232881	2		=			
ANR	233323	Identifier	instr_addr		232881	0					
ANR	233324	CallExpression	"sdb_num_get ( trace , sdb_fmt ( ""%d.addr"" , j ) , 0 )"		232881	1					
ANR	233325	Callee	sdb_num_get		232881	0					
ANR	233326	Identifier	sdb_num_get		232881	0					
ANR	233327	ArgumentList	trace		232881	1					
ANR	233328	Argument	trace		232881	0					
ANR	233329	Identifier	trace		232881	0					
ANR	233330	Argument	"sdb_fmt ( ""%d.addr"" , j )"		232881	1					
ANR	233331	CallExpression	"sdb_fmt ( ""%d.addr"" , j )"		232881	0					
ANR	233332	Callee	sdb_fmt		232881	0					
ANR	233333	Identifier	sdb_fmt		232881	0					
ANR	233334	ArgumentList	"""%d.addr"""		232881	1					
ANR	233335	Argument	"""%d.addr"""		232881	0					
ANR	233336	PrimaryExpression	"""%d.addr"""		232881	0					
ANR	233337	Argument	j		232881	1					
ANR	233338	Identifier	j		232881	0					
ANR	233339	Argument	0		232881	2					
ANR	233340	PrimaryExpression	0		232881	0					
ANR	233341	IfStatement	if ( instr_addr < baddr )		232881	1					
ANR	233342	Condition	instr_addr < baddr	355:7:9585:9602	232881	0	True				
ANR	233343	RelationalExpression	instr_addr < baddr		232881	0		<			
ANR	233344	Identifier	instr_addr		232881	0					
ANR	233345	Identifier	baddr		232881	1					
ANR	233346	CompoundStatement		61:27:1720:1720	232881	1					
ANR	233347	BreakStatement	break ;	356:4:9611:9616	232881	0	True				
ANR	233348	IdentifierDeclStatement	"RAnalOp * op = r_core_anal_op ( core , instr_addr , R_ANAL_OP_MASK_BASIC | R_ANAL_OP_MASK_VAL ) ;"	358:3:9626:9716	232881	2	True				
ANR	233349	IdentifierDecl	"* op = r_core_anal_op ( core , instr_addr , R_ANAL_OP_MASK_BASIC | R_ANAL_OP_MASK_VAL )"		232881	0					
ANR	233350	IdentifierDeclType	RAnalOp *		232881	0					
ANR	233351	Identifier	op		232881	1					
ANR	233352	AssignmentExpression	"* op = r_core_anal_op ( core , instr_addr , R_ANAL_OP_MASK_BASIC | R_ANAL_OP_MASK_VAL )"		232881	2		=			
ANR	233353	Identifier	op		232881	0					
ANR	233354	CallExpression	"r_core_anal_op ( core , instr_addr , R_ANAL_OP_MASK_BASIC | R_ANAL_OP_MASK_VAL )"		232881	1					
ANR	233355	Callee	r_core_anal_op		232881	0					
ANR	233356	Identifier	r_core_anal_op		232881	0					
ANR	233357	ArgumentList	core		232881	1					
ANR	233358	Argument	core		232881	0					
ANR	233359	Identifier	core		232881	0					
ANR	233360	Argument	instr_addr		232881	1					
ANR	233361	Identifier	instr_addr		232881	0					
ANR	233362	Argument	R_ANAL_OP_MASK_BASIC | R_ANAL_OP_MASK_VAL		232881	2					
ANR	233363	InclusiveOrExpression	R_ANAL_OP_MASK_BASIC | R_ANAL_OP_MASK_VAL		232881	0		|			
ANR	233364	Identifier	R_ANAL_OP_MASK_BASIC		232881	0					
ANR	233365	Identifier	R_ANAL_OP_MASK_VAL		232881	1					
ANR	233366	IfStatement	if ( ! op )		232881	3					
ANR	233367	Condition	! op	359:7:9725:9727	232881	0	True				
ANR	233368	UnaryOperationExpression	! op		232881	0					
ANR	233369	UnaryOperator	!		232881	0					
ANR	233370	Identifier	op		232881	1					
ANR	233371	CompoundStatement		65:12:1845:1845	232881	1					
ANR	233372	ExpressionStatement	r_anal_op_free ( op )	360:4:9736:9755	232881	0	True				
ANR	233373	CallExpression	r_anal_op_free ( op )		232881	0					
ANR	233374	Callee	r_anal_op_free		232881	0					
ANR	233375	Identifier	r_anal_op_free		232881	0					
ANR	233376	ArgumentList	op		232881	1					
ANR	233377	Argument	op		232881	0					
ANR	233378	Identifier	op		232881	0					
ANR	233379	BreakStatement	break ;	361:4:9761:9766	232881	1	True				
ANR	233380	IdentifierDeclStatement	"RAnalOp * next_op = r_core_anal_op ( core , instr_addr + op -> size , R_ANAL_OP_MASK_BASIC | R_ANAL_OP_MASK_VAL ) ;"	363:3:9776:9882	232881	4	True				
ANR	233381	IdentifierDecl	"* next_op = r_core_anal_op ( core , instr_addr + op -> size , R_ANAL_OP_MASK_BASIC | R_ANAL_OP_MASK_VAL )"		232881	0					
ANR	233382	IdentifierDeclType	RAnalOp *		232881	0					
ANR	233383	Identifier	next_op		232881	1					
ANR	233384	AssignmentExpression	"* next_op = r_core_anal_op ( core , instr_addr + op -> size , R_ANAL_OP_MASK_BASIC | R_ANAL_OP_MASK_VAL )"		232881	2		=			
ANR	233385	Identifier	next_op		232881	0					
ANR	233386	CallExpression	"r_core_anal_op ( core , instr_addr + op -> size , R_ANAL_OP_MASK_BASIC | R_ANAL_OP_MASK_VAL )"		232881	1					
ANR	233387	Callee	r_core_anal_op		232881	0					
ANR	233388	Identifier	r_core_anal_op		232881	0					
ANR	233389	ArgumentList	core		232881	1					
ANR	233390	Argument	core		232881	0					
ANR	233391	Identifier	core		232881	0					
ANR	233392	Argument	instr_addr + op -> size		232881	1					
ANR	233393	AdditiveExpression	instr_addr + op -> size		232881	0		+			
ANR	233394	Identifier	instr_addr		232881	0					
ANR	233395	PtrMemberAccess	op -> size		232881	1					
ANR	233396	Identifier	op		232881	0					
ANR	233397	Identifier	size		232881	1					
ANR	233398	Argument	R_ANAL_OP_MASK_BASIC | R_ANAL_OP_MASK_VAL		232881	2					
ANR	233399	InclusiveOrExpression	R_ANAL_OP_MASK_BASIC | R_ANAL_OP_MASK_VAL		232881	0		|			
ANR	233400	Identifier	R_ANAL_OP_MASK_BASIC		232881	0					
ANR	233401	Identifier	R_ANAL_OP_MASK_VAL		232881	1					
ANR	233402	IfStatement	if ( ! next_op || ( j != idx && ( next_op -> type == R_ANAL_OP_TYPE_CALL || next_op -> type == R_ANAL_OP_TYPE_JMP ) ) )		232881	5					
ANR	233403	Condition	! next_op || ( j != idx && ( next_op -> type == R_ANAL_OP_TYPE_CALL || next_op -> type == R_ANAL_OP_TYPE_JMP ) )	364:7:9891:10000	232881	0	True				
ANR	233404	OrExpression	! next_op || ( j != idx && ( next_op -> type == R_ANAL_OP_TYPE_CALL || next_op -> type == R_ANAL_OP_TYPE_JMP ) )		232881	0		||			
ANR	233405	UnaryOperationExpression	! next_op		232881	0					
ANR	233406	UnaryOperator	!		232881	0					
ANR	233407	Identifier	next_op		232881	1					
ANR	233408	AndExpression	j != idx && ( next_op -> type == R_ANAL_OP_TYPE_CALL || next_op -> type == R_ANAL_OP_TYPE_JMP )		232881	1		&&			
ANR	233409	EqualityExpression	j != idx		232881	0		!=			
ANR	233410	Identifier	j		232881	0					
ANR	233411	Identifier	idx		232881	1					
ANR	233412	OrExpression	next_op -> type == R_ANAL_OP_TYPE_CALL || next_op -> type == R_ANAL_OP_TYPE_JMP		232881	1		||			
ANR	233413	EqualityExpression	next_op -> type == R_ANAL_OP_TYPE_CALL		232881	0		==			
ANR	233414	PtrMemberAccess	next_op -> type		232881	0					
ANR	233415	Identifier	next_op		232881	0					
ANR	233416	Identifier	type		232881	1					
ANR	233417	Identifier	R_ANAL_OP_TYPE_CALL		232881	1					
ANR	233418	EqualityExpression	next_op -> type == R_ANAL_OP_TYPE_JMP		232881	1		==			
ANR	233419	PtrMemberAccess	next_op -> type		232881	0					
ANR	233420	Identifier	next_op		232881	0					
ANR	233421	Identifier	type		232881	1					
ANR	233422	Identifier	R_ANAL_OP_TYPE_JMP		232881	1					
ANR	233423	CompoundStatement		71:49:2118:2118	232881	1					
ANR	233424	ExpressionStatement	r_anal_op_free ( op )	366:4:10009:10028	232881	0	True				
ANR	233425	CallExpression	r_anal_op_free ( op )		232881	0					
ANR	233426	Callee	r_anal_op_free		232881	0					
ANR	233427	Identifier	r_anal_op_free		232881	0					
ANR	233428	ArgumentList	op		232881	1					
ANR	233429	Argument	op		232881	0					
ANR	233430	Identifier	op		232881	0					
ANR	233431	ExpressionStatement	r_anal_op_free ( next_op )	367:4:10034:10058	232881	1	True				
ANR	233432	CallExpression	r_anal_op_free ( next_op )		232881	0					
ANR	233433	Callee	r_anal_op_free		232881	0					
ANR	233434	Identifier	r_anal_op_free		232881	0					
ANR	233435	ArgumentList	next_op		232881	1					
ANR	233436	Argument	next_op		232881	0					
ANR	233437	Identifier	next_op		232881	0					
ANR	233438	BreakStatement	break ;	368:4:10064:10069	232881	2	True				
ANR	233439	IdentifierDeclStatement	const char * key = NULL ;	370:3:10079:10101	232881	6	True				
ANR	233440	IdentifierDecl	* key = NULL		232881	0					
ANR	233441	IdentifierDeclType	const char *		232881	0					
ANR	233442	Identifier	key		232881	1					
ANR	233443	AssignmentExpression	* key = NULL		232881	2		=			
ANR	233444	Identifier	NULL		232881	0					
ANR	233445	Identifier	NULL		232881	1					
ANR	233446	IdentifierDeclStatement	RAnalVar * var = op -> var ;	371:3:10106:10129	232881	7	True				
ANR	233447	IdentifierDecl	* var = op -> var		232881	0					
ANR	233448	IdentifierDeclType	RAnalVar *		232881	0					
ANR	233449	Identifier	var		232881	1					
ANR	233450	AssignmentExpression	* var = op -> var		232881	2		=			
ANR	233451	Identifier	var		232881	0					
ANR	233452	PtrMemberAccess	op -> var		232881	1					
ANR	233453	Identifier	op		232881	0					
ANR	233454	Identifier	var		232881	1					
ANR	233455	IfStatement	if ( ! in_stack )		232881	8					
ANR	233456	Condition	! in_stack	372:7:10138:10146	232881	0	True				
ANR	233457	UnaryOperationExpression	! in_stack		232881	0					
ANR	233458	UnaryOperator	!		232881	0					
ANR	233459	Identifier	in_stack		232881	1					
ANR	233460	CompoundStatement		78:18:2264:2264	232881	1					
ANR	233461	Statement	key	373:4:10155:10157	232881	0	True				
ANR	233462	Statement	=	373:8:10159:10159	232881	1	True				
ANR	233463	Statement	sdb_fmt	373:10:10161:10167	232881	2	True				
ANR	233464	Statement	(	373:18:10169:10169	232881	3	True				
ANR	233465	Statement	"""fcn.0x%08"""	373:19:10170:10180	232881	4	True				
ANR	233466	Statement	PFMT64x	373:30:10181:10187	232881	5	True				
ANR	233467	Statement	""".arg.%s"""	373:37:10188:10196	232881	6	True				
ANR	233468	Statement	","	373:46:10197:10197	232881	7	True				
ANR	233469	Statement	caddr	373:48:10199:10203	232881	8	True				
ANR	233470	Statement	","	373:53:10204:10204	232881	9	True				
ANR	233471	Statement	place	373:55:10206:10210	232881	10	True				
ANR	233472	Statement	)	373:60:10211:10211	232881	11	True				
ANR	233473	ExpressionStatement		373:61:10212:10212	232881	12	True				
ANR	233474	ElseStatement	else		232881	0					
ANR	233475	CompoundStatement		80:10:2339:2339	232881	0					
ANR	233476	Statement	key	375:4:10230:10232	232881	0	True				
ANR	233477	Statement	=	375:8:10234:10234	232881	1	True				
ANR	233478	Statement	sdb_fmt	375:10:10236:10242	232881	2	True				
ANR	233479	Statement	(	375:18:10244:10244	232881	3	True				
ANR	233480	Statement	"""fcn.0x%08"""	375:19:10245:10255	232881	4	True				
ANR	233481	Statement	PFMT64x	375:30:10256:10262	232881	5	True				
ANR	233482	Statement	""".arg.%d"""	375:37:10263:10271	232881	6	True				
ANR	233483	Statement	","	375:46:10272:10272	232881	7	True				
ANR	233484	Statement	caddr	375:48:10274:10278	232881	8	True				
ANR	233485	Statement	","	375:53:10279:10279	232881	9	True				
ANR	233486	Statement	size	375:55:10281:10284	232881	10	True				
ANR	233487	Statement	)	375:59:10285:10285	232881	11	True				
ANR	233488	ExpressionStatement		375:60:10286:10286	232881	12	True				
ANR	233489	IdentifierDeclStatement	"const char * query = sdb_fmt ( ""%d.mem.read"" , j ) ;"	377:3:10296:10342	232881	9	True				
ANR	233490	IdentifierDecl	"* query = sdb_fmt ( ""%d.mem.read"" , j )"		232881	0					
ANR	233491	IdentifierDeclType	const char *		232881	0					
ANR	233492	Identifier	query		232881	1					
ANR	233493	AssignmentExpression	"* query = sdb_fmt ( ""%d.mem.read"" , j )"		232881	2		=			
ANR	233494	Identifier	query		232881	0					
ANR	233495	CallExpression	"sdb_fmt ( ""%d.mem.read"" , j )"		232881	1					
ANR	233496	Callee	sdb_fmt		232881	0					
ANR	233497	Identifier	sdb_fmt		232881	0					
ANR	233498	ArgumentList	"""%d.mem.read"""		232881	1					
ANR	233499	Argument	"""%d.mem.read"""		232881	0					
ANR	233500	PrimaryExpression	"""%d.mem.read"""		232881	0					
ANR	233501	Argument	j		232881	1					
ANR	233502	Identifier	j		232881	0					
ANR	233503	IfStatement	"if ( op -> type == R_ANAL_OP_TYPE_MOV && sdb_const_get ( trace , query , 0 ) )"		232881	10					
ANR	233504	Condition	"op -> type == R_ANAL_OP_TYPE_MOV && sdb_const_get ( trace , query , 0 )"	378:7:10351:10415	232881	0	True				
ANR	233505	AndExpression	"op -> type == R_ANAL_OP_TYPE_MOV && sdb_const_get ( trace , query , 0 )"		232881	0		&&			
ANR	233506	EqualityExpression	op -> type == R_ANAL_OP_TYPE_MOV		232881	0		==			
ANR	233507	PtrMemberAccess	op -> type		232881	0					
ANR	233508	Identifier	op		232881	0					
ANR	233509	Identifier	type		232881	1					
ANR	233510	Identifier	R_ANAL_OP_TYPE_MOV		232881	1					
ANR	233511	CallExpression	"sdb_const_get ( trace , query , 0 )"		232881	1					
ANR	233512	Callee	sdb_const_get		232881	0					
ANR	233513	Identifier	sdb_const_get		232881	0					
ANR	233514	ArgumentList	trace		232881	1					
ANR	233515	Argument	trace		232881	0					
ANR	233516	Identifier	trace		232881	0					
ANR	233517	Argument	query		232881	1					
ANR	233518	Identifier	query		232881	0					
ANR	233519	Argument	0		232881	2					
ANR	233520	PrimaryExpression	0		232881	0					
ANR	233521	CompoundStatement		84:74:2533:2533	232881	1					
ANR	233522	ExpressionStatement	memref = ( ! memref && var && ( var -> kind != R_ANAL_VAR_KIND_REG ) ) ? false : true	379:4:10424:10500	232881	0	True				
ANR	233523	AssignmentExpression	memref = ( ! memref && var && ( var -> kind != R_ANAL_VAR_KIND_REG ) ) ? false : true		232881	0		=			
ANR	233524	Identifier	memref		232881	0					
ANR	233525	ConditionalExpression	( ! memref && var && ( var -> kind != R_ANAL_VAR_KIND_REG ) ) ? false : true		232881	1					
ANR	233526	Condition	! memref && var && ( var -> kind != R_ANAL_VAR_KIND_REG )		232881	0					
ANR	233527	AndExpression	! memref && var && ( var -> kind != R_ANAL_VAR_KIND_REG )		232881	0		&&			
ANR	233528	UnaryOperationExpression	! memref		232881	0					
ANR	233529	UnaryOperator	!		232881	0					
ANR	233530	Identifier	memref		232881	1					
ANR	233531	AndExpression	var && ( var -> kind != R_ANAL_VAR_KIND_REG )		232881	1		&&			
ANR	233532	Identifier	var		232881	0					
ANR	233533	EqualityExpression	var -> kind != R_ANAL_VAR_KIND_REG		232881	1		!=			
ANR	233534	PtrMemberAccess	var -> kind		232881	0					
ANR	233535	Identifier	var		232881	0					
ANR	233536	Identifier	kind		232881	1					
ANR	233537	Identifier	R_ANAL_VAR_KIND_REG		232881	1					
ANR	233538	Identifier	false		232881	1					
ANR	233539	Identifier	true		232881	2					
ANR	233540	IfStatement	"if ( type_pos_hit ( anal , trace , in_stack , j , size , place ) )"		232881	11					
ANR	233541	Condition	"type_pos_hit ( anal , trace , in_stack , j , size , place )"	382:7:10560:10611	232881	0	True				
ANR	233542	CallExpression	"type_pos_hit ( anal , trace , in_stack , j , size , place )"		232881	0					
ANR	233543	Callee	type_pos_hit		232881	0					
ANR	233544	Identifier	type_pos_hit		232881	0					
ANR	233545	ArgumentList	anal		232881	1					
ANR	233546	Argument	anal		232881	0					
ANR	233547	Identifier	anal		232881	0					
ANR	233548	Argument	trace		232881	1					
ANR	233549	Identifier	trace		232881	0					
ANR	233550	Argument	in_stack		232881	2					
ANR	233551	Identifier	in_stack		232881	0					
ANR	233552	Argument	j		232881	3					
ANR	233553	Identifier	j		232881	0					
ANR	233554	Argument	size		232881	4					
ANR	233555	Identifier	size		232881	0					
ANR	233556	Argument	place		232881	5					
ANR	233557	Identifier	place		232881	0					
ANR	233558	CompoundStatement		88:61:2729:2729	232881	1					
ANR	233559	IfStatement	if ( ! cmt_set && type && name )		232881	0					
ANR	233560	Condition	! cmt_set && type && name	383:8:10624:10647	232881	0	True				
ANR	233561	AndExpression	! cmt_set && type && name		232881	0		&&			
ANR	233562	UnaryOperationExpression	! cmt_set		232881	0					
ANR	233563	UnaryOperator	!		232881	0					
ANR	233564	Identifier	cmt_set		232881	1					
ANR	233565	AndExpression	type && name		232881	1		&&			
ANR	233566	Identifier	type		232881	0					
ANR	233567	Identifier	name		232881	1					
ANR	233568	CompoundStatement		89:34:2765:2765	232881	1					
ANR	233569	ExpressionStatement	"r_meta_set_string ( anal , R_META_TYPE_VARTYPE , instr_addr , sdb_fmt ( ""%s%s%s"" , type , r_str_endswith ( type , ""*"" ) ? """" : "" "" , name ) )"	384:5:10657:10792	232881	0	True				
ANR	233570	CallExpression	"r_meta_set_string ( anal , R_META_TYPE_VARTYPE , instr_addr , sdb_fmt ( ""%s%s%s"" , type , r_str_endswith ( type , ""*"" ) ? """" : "" "" , name ) )"		232881	0					
ANR	233571	Callee	r_meta_set_string		232881	0					
ANR	233572	Identifier	r_meta_set_string		232881	0					
ANR	233573	ArgumentList	anal		232881	1					
ANR	233574	Argument	anal		232881	0					
ANR	233575	Identifier	anal		232881	0					
ANR	233576	Argument	R_META_TYPE_VARTYPE		232881	1					
ANR	233577	Identifier	R_META_TYPE_VARTYPE		232881	0					
ANR	233578	Argument	instr_addr		232881	2					
ANR	233579	Identifier	instr_addr		232881	0					
ANR	233580	Argument	"sdb_fmt ( ""%s%s%s"" , type , r_str_endswith ( type , ""*"" ) ? """" : "" "" , name )"		232881	3					
ANR	233581	CallExpression	"sdb_fmt ( ""%s%s%s"" , type , r_str_endswith ( type , ""*"" ) ? """" : "" "" , name )"		232881	0					
ANR	233582	Callee	sdb_fmt		232881	0					
ANR	233583	Identifier	sdb_fmt		232881	0					
ANR	233584	ArgumentList	"""%s%s%s"""		232881	1					
ANR	233585	Argument	"""%s%s%s"""		232881	0					
ANR	233586	PrimaryExpression	"""%s%s%s"""		232881	0					
ANR	233587	Argument	type		232881	1					
ANR	233588	Identifier	type		232881	0					
ANR	233589	Argument	"r_str_endswith ( type , ""*"" ) ? """" : "" """		232881	2					
ANR	233590	ConditionalExpression	"r_str_endswith ( type , ""*"" ) ? """" : "" """		232881	0					
ANR	233591	Condition	"r_str_endswith ( type , ""*"" )"		232881	0					
ANR	233592	CallExpression	"r_str_endswith ( type , ""*"" )"		232881	0					
ANR	233593	Callee	r_str_endswith		232881	0					
ANR	233594	Identifier	r_str_endswith		232881	0					
ANR	233595	ArgumentList	type		232881	1					
ANR	233596	Argument	type		232881	0					
ANR	233597	Identifier	type		232881	0					
ANR	233598	Argument	"""*"""		232881	1					
ANR	233599	PrimaryExpression	"""*"""		232881	0					
ANR	233600	PrimaryExpression	""""""		232881	1					
ANR	233601	PrimaryExpression	""" """		232881	2					
ANR	233602	Argument	name		232881	3					
ANR	233603	Identifier	name		232881	0					
ANR	233604	ExpressionStatement	cmt_set = true	386:5:10799:10813	232881	1	True				
ANR	233605	AssignmentExpression	cmt_set = true		232881	0		=			
ANR	233606	Identifier	cmt_set		232881	0					
ANR	233607	Identifier	true		232881	1					
ANR	233608	IfStatement	"if ( ( op -> ptr && op -> ptr != UT64_MAX ) && ! strcmp ( name , ""format"" ) )"		232881	2					
ANR	233609	Condition	"( op -> ptr && op -> ptr != UT64_MAX ) && ! strcmp ( name , ""format"" )"	387:9:10824:10883	232881	0	True				
ANR	233610	AndExpression	"( op -> ptr && op -> ptr != UT64_MAX ) && ! strcmp ( name , ""format"" )"		232881	0		&&			
ANR	233611	AndExpression	op -> ptr && op -> ptr != UT64_MAX		232881	0		&&			
ANR	233612	PtrMemberAccess	op -> ptr		232881	0					
ANR	233613	Identifier	op		232881	0					
ANR	233614	Identifier	ptr		232881	1					
ANR	233615	EqualityExpression	op -> ptr != UT64_MAX		232881	1		!=			
ANR	233616	PtrMemberAccess	op -> ptr		232881	0					
ANR	233617	Identifier	op		232881	0					
ANR	233618	Identifier	ptr		232881	1					
ANR	233619	Identifier	UT64_MAX		232881	1					
ANR	233620	UnaryOperationExpression	"! strcmp ( name , ""format"" )"		232881	1					
ANR	233621	UnaryOperator	!		232881	0					
ANR	233622	CallExpression	"strcmp ( name , ""format"" )"		232881	1					
ANR	233623	Callee	strcmp		232881	0					
ANR	233624	Identifier	strcmp		232881	0					
ANR	233625	ArgumentList	name		232881	1					
ANR	233626	Argument	name		232881	0					
ANR	233627	Identifier	name		232881	0					
ANR	233628	Argument	"""format"""		232881	1					
ANR	233629	PrimaryExpression	"""format"""		232881	0					
ANR	233630	CompoundStatement		94:6:3009:3059	232881	1					
ANR	233631	IdentifierDeclStatement	"RFlagItem * f = r_flag_get_i ( core -> flags , op -> ptr ) ;"	388:6:10894:10944	232881	0	True				
ANR	233632	IdentifierDecl	"* f = r_flag_get_i ( core -> flags , op -> ptr )"		232881	0					
ANR	233633	IdentifierDeclType	RFlagItem *		232881	0					
ANR	233634	Identifier	f		232881	1					
ANR	233635	AssignmentExpression	"* f = r_flag_get_i ( core -> flags , op -> ptr )"		232881	2		=			
ANR	233636	Identifier	f		232881	0					
ANR	233637	CallExpression	"r_flag_get_i ( core -> flags , op -> ptr )"		232881	1					
ANR	233638	Callee	r_flag_get_i		232881	0					
ANR	233639	Identifier	r_flag_get_i		232881	0					
ANR	233640	ArgumentList	core -> flags		232881	1					
ANR	233641	Argument	core -> flags		232881	0					
ANR	233642	PtrMemberAccess	core -> flags		232881	0					
ANR	233643	Identifier	core		232881	0					
ANR	233644	Identifier	flags		232881	1					
ANR	233645	Argument	op -> ptr		232881	1					
ANR	233646	PtrMemberAccess	op -> ptr		232881	0					
ANR	233647	Identifier	op		232881	0					
ANR	233648	Identifier	ptr		232881	1					
ANR	233649	IfStatement	"if ( f && ! strncmp ( f -> name , ""str"" , 3 ) )"		232881	1					
ANR	233650	Condition	"f && ! strncmp ( f -> name , ""str"" , 3 )"	389:10:10956:10988	232881	0	True				
ANR	233651	AndExpression	"f && ! strncmp ( f -> name , ""str"" , 3 )"		232881	0		&&			
ANR	233652	Identifier	f		232881	0					
ANR	233653	UnaryOperationExpression	"! strncmp ( f -> name , ""str"" , 3 )"		232881	1					
ANR	233654	UnaryOperator	!		232881	0					
ANR	233655	CallExpression	"strncmp ( f -> name , ""str"" , 3 )"		232881	1					
ANR	233656	Callee	strncmp		232881	0					
ANR	233657	Identifier	strncmp		232881	0					
ANR	233658	ArgumentList	f -> name		232881	1					
ANR	233659	Argument	f -> name		232881	0					
ANR	233660	PtrMemberAccess	f -> name		232881	0					
ANR	233661	Identifier	f		232881	0					
ANR	233662	Identifier	name		232881	1					
ANR	233663	Argument	"""str"""		232881	1					
ANR	233664	PrimaryExpression	"""str"""		232881	0					
ANR	233665	Argument	3		232881	2					
ANR	233666	PrimaryExpression	3		232881	0					
ANR	233667	CompoundStatement		95:45:3106:3106	232881	1					
ANR	233668	IfStatement	"if ( ( types = parse_format ( core , f -> realname ) ) )"		232881	0					
ANR	233669	Condition	"types = parse_format ( core , f -> realname )"	390:11:11004:11045	232881	0	True				
ANR	233670	AssignmentExpression	"types = parse_format ( core , f -> realname )"		232881	0		=			
ANR	233671	Identifier	types		232881	0					
ANR	233672	CallExpression	"parse_format ( core , f -> realname )"		232881	1					
ANR	233673	Callee	parse_format		232881	0					
ANR	233674	Identifier	parse_format		232881	0					
ANR	233675	ArgumentList	core		232881	1					
ANR	233676	Argument	core		232881	0					
ANR	233677	Identifier	core		232881	0					
ANR	233678	Argument	f -> realname		232881	1					
ANR	233679	PtrMemberAccess	f -> realname		232881	0					
ANR	233680	Identifier	f		232881	0					
ANR	233681	Identifier	realname		232881	1					
ANR	233682	CompoundStatement		96:55:3163:3163	232881	1					
ANR	233683	ExpressionStatement	max += r_list_length ( types )	391:8:11058:11086	232881	0	True				
ANR	233684	AssignmentExpression	max += r_list_length ( types )		232881	0		+=			
ANR	233685	Identifier	max		232881	0					
ANR	233686	CallExpression	r_list_length ( types )		232881	1					
ANR	233687	Callee	r_list_length		232881	0					
ANR	233688	Identifier	r_list_length		232881	0					
ANR	233689	ArgumentList	types		232881	1					
ANR	233690	Argument	types		232881	0					
ANR	233691	Identifier	types		232881	0					
ANR	233692	ExpressionStatement	format = true	393:7:11104:11117	232881	1	True				
ANR	233693	AssignmentExpression	format = true		232881	0		=			
ANR	233694	Identifier	format		232881	0					
ANR	233695	Identifier	true		232881	1					
ANR	233696	IfStatement	if ( var )		232881	1					
ANR	233697	Condition	var	397:8:11148:11150	232881	0	True				
ANR	233698	Identifier	var		232881	0					
ANR	233699	CompoundStatement		103:13:3268:3268	232881	1					
ANR	233700	IfStatement	if ( ! userfnc )		232881	0					
ANR	233701	Condition	! userfnc	398:9:11164:11171	232881	0	True				
ANR	233702	UnaryOperationExpression	! userfnc		232881	0					
ANR	233703	UnaryOperator	!		232881	0					
ANR	233704	Identifier	userfnc		232881	1					
ANR	233705	CompoundStatement		104:19:3289:3289	232881	1					
ANR	233706	ExpressionStatement	"var_retype ( anal , var , name , type , addr , memref , false )"	399:6:11182:11237	232881	0	True				
ANR	233707	CallExpression	"var_retype ( anal , var , name , type , addr , memref , false )"		232881	0					
ANR	233708	Callee	var_retype		232881	0					
ANR	233709	Identifier	var_retype		232881	0					
ANR	233710	ArgumentList	anal		232881	1					
ANR	233711	Argument	anal		232881	0					
ANR	233712	Identifier	anal		232881	0					
ANR	233713	Argument	var		232881	1					
ANR	233714	Identifier	var		232881	0					
ANR	233715	Argument	name		232881	2					
ANR	233716	Identifier	name		232881	0					
ANR	233717	Argument	type		232881	3					
ANR	233718	Identifier	type		232881	0					
ANR	233719	Argument	addr		232881	4					
ANR	233720	Identifier	addr		232881	0					
ANR	233721	Argument	memref		232881	5					
ANR	233722	Identifier	memref		232881	0					
ANR	233723	Argument	false		232881	6					
ANR	233724	Identifier	false		232881	0					
ANR	233725	ExpressionStatement	"var_rename ( anal , var , name , addr )"	400:6:11245:11279	232881	1	True				
ANR	233726	CallExpression	"var_rename ( anal , var , name , addr )"		232881	0					
ANR	233727	Callee	var_rename		232881	0					
ANR	233728	Identifier	var_rename		232881	0					
ANR	233729	ArgumentList	anal		232881	1					
ANR	233730	Argument	anal		232881	0					
ANR	233731	Identifier	anal		232881	0					
ANR	233732	Argument	var		232881	1					
ANR	233733	Identifier	var		232881	0					
ANR	233734	Argument	name		232881	2					
ANR	233735	Identifier	name		232881	0					
ANR	233736	Argument	addr		232881	3					
ANR	233737	Identifier	addr		232881	0					
ANR	233738	ElseStatement	else		232881	0					
ANR	233739	CompoundStatement		107:12:3408:3408	232881	0					
ANR	233740	ExpressionStatement	"sdb_set ( anal -> sdb_fcns , key , var -> type , 0 )"	403:6:11335:11378	232881	0	True				
ANR	233741	CallExpression	"sdb_set ( anal -> sdb_fcns , key , var -> type , 0 )"		232881	0					
ANR	233742	Callee	sdb_set		232881	0					
ANR	233743	Identifier	sdb_set		232881	0					
ANR	233744	ArgumentList	anal -> sdb_fcns		232881	1					
ANR	233745	Argument	anal -> sdb_fcns		232881	0					
ANR	233746	PtrMemberAccess	anal -> sdb_fcns		232881	0					
ANR	233747	Identifier	anal		232881	0					
ANR	233748	Identifier	sdb_fcns		232881	1					
ANR	233749	Argument	key		232881	1					
ANR	233750	Identifier	key		232881	0					
ANR	233751	Argument	var -> type		232881	2					
ANR	233752	PtrMemberAccess	var -> type		232881	0					
ANR	233753	Identifier	var		232881	0					
ANR	233754	Identifier	type		232881	1					
ANR	233755	Argument	0		232881	3					
ANR	233756	PrimaryExpression	0		232881	0					
ANR	233757	ExpressionStatement	res = true	405:5:11392:11402	232881	1	True				
ANR	233758	AssignmentExpression	res = true		232881	0		=			
ANR	233759	Identifier	res		232881	0					
ANR	233760	Identifier	true		232881	1					
ANR	233761	ElseStatement	else		232881	0					
ANR	233762	CompoundStatement		112:11:3530:3530	232881	0					
ANR	233763	ExpressionStatement	"get_src_regname ( core , instr_addr , regname , sizeof ( regname ) )"	407:5:11422:11483	232881	0	True				
ANR	233764	CallExpression	"get_src_regname ( core , instr_addr , regname , sizeof ( regname ) )"		232881	0					
ANR	233765	Callee	get_src_regname		232881	0					
ANR	233766	Identifier	get_src_regname		232881	0					
ANR	233767	ArgumentList	core		232881	1					
ANR	233768	Argument	core		232881	0					
ANR	233769	Identifier	core		232881	0					
ANR	233770	Argument	instr_addr		232881	1					
ANR	233771	Identifier	instr_addr		232881	0					
ANR	233772	Argument	regname		232881	2					
ANR	233773	Identifier	regname		232881	0					
ANR	233774	Argument	sizeof ( regname )		232881	3					
ANR	233775	SizeofExpression	sizeof ( regname )		232881	0					
ANR	233776	Sizeof	sizeof		232881	0					
ANR	233777	SizeofOperand	regname		232881	1					
ANR	233778	ExpressionStatement	"xaddr = get_addr ( trace , regname , j )"	408:5:11490:11526	232881	1	True				
ANR	233779	AssignmentExpression	"xaddr = get_addr ( trace , regname , j )"		232881	0		=			
ANR	233780	Identifier	xaddr		232881	0					
ANR	233781	CallExpression	"get_addr ( trace , regname , j )"		232881	1					
ANR	233782	Callee	get_addr		232881	0					
ANR	233783	Identifier	get_addr		232881	0					
ANR	233784	ArgumentList	trace		232881	1					
ANR	233785	Argument	trace		232881	0					
ANR	233786	Identifier	trace		232881	0					
ANR	233787	Argument	regname		232881	1					
ANR	233788	Identifier	regname		232881	0					
ANR	233789	Argument	j		232881	2					
ANR	233790	Identifier	j		232881	0					
ANR	233791	IfStatement	"if ( ! res && * regname && SDB_CONTAINS ( j , regname ) )"		232881	12					
ANR	233792	Condition	"! res && * regname && SDB_CONTAINS ( j , regname )"	412:7:11591:11635	232881	0	True				
ANR	233793	AndExpression	"! res && * regname && SDB_CONTAINS ( j , regname )"		232881	0		&&			
ANR	233794	UnaryOperationExpression	! res		232881	0					
ANR	233795	UnaryOperator	!		232881	0					
ANR	233796	Identifier	res		232881	1					
ANR	233797	AndExpression	"* regname && SDB_CONTAINS ( j , regname )"		232881	1		&&			
ANR	233798	UnaryOperationExpression	* regname		232881	0					
ANR	233799	UnaryOperator	*		232881	0					
ANR	233800	Identifier	regname		232881	1					
ANR	233801	CallExpression	"SDB_CONTAINS ( j , regname )"		232881	1					
ANR	233802	Callee	SDB_CONTAINS		232881	0					
ANR	233803	Identifier	SDB_CONTAINS		232881	0					
ANR	233804	ArgumentList	j		232881	1					
ANR	233805	Argument	j		232881	0					
ANR	233806	Identifier	j		232881	0					
ANR	233807	Argument	regname		232881	1					
ANR	233808	Identifier	regname		232881	0					
ANR	233809	CompoundStatement		118:54:3753:3753	232881	1					
ANR	233810	IfStatement	if ( var )		232881	0					
ANR	233811	Condition	var	413:8:11648:11650	232881	0	True				
ANR	233812	Identifier	var		232881	0					
ANR	233813	CompoundStatement		119:13:3768:3768	232881	1					
ANR	233814	IfStatement	if ( ! userfnc )		232881	0					
ANR	233815	Condition	! userfnc	414:9:11664:11671	232881	0	True				
ANR	233816	UnaryOperationExpression	! userfnc		232881	0					
ANR	233817	UnaryOperator	!		232881	0					
ANR	233818	Identifier	userfnc		232881	1					
ANR	233819	CompoundStatement		120:19:3789:3789	232881	1					
ANR	233820	ExpressionStatement	"var_retype ( anal , var , name , type , addr , memref , false )"	415:6:11682:11737	232881	0	True				
ANR	233821	CallExpression	"var_retype ( anal , var , name , type , addr , memref , false )"		232881	0					
ANR	233822	Callee	var_retype		232881	0					
ANR	233823	Identifier	var_retype		232881	0					
ANR	233824	ArgumentList	anal		232881	1					
ANR	233825	Argument	anal		232881	0					
ANR	233826	Identifier	anal		232881	0					
ANR	233827	Argument	var		232881	1					
ANR	233828	Identifier	var		232881	0					
ANR	233829	Argument	name		232881	2					
ANR	233830	Identifier	name		232881	0					
ANR	233831	Argument	type		232881	3					
ANR	233832	Identifier	type		232881	0					
ANR	233833	Argument	addr		232881	4					
ANR	233834	Identifier	addr		232881	0					
ANR	233835	Argument	memref		232881	5					
ANR	233836	Identifier	memref		232881	0					
ANR	233837	Argument	false		232881	6					
ANR	233838	Identifier	false		232881	0					
ANR	233839	ExpressionStatement	"var_rename ( anal , var , name , addr )"	416:6:11745:11779	232881	1	True				
ANR	233840	CallExpression	"var_rename ( anal , var , name , addr )"		232881	0					
ANR	233841	Callee	var_rename		232881	0					
ANR	233842	Identifier	var_rename		232881	0					
ANR	233843	ArgumentList	anal		232881	1					
ANR	233844	Argument	anal		232881	0					
ANR	233845	Identifier	anal		232881	0					
ANR	233846	Argument	var		232881	1					
ANR	233847	Identifier	var		232881	0					
ANR	233848	Argument	name		232881	2					
ANR	233849	Identifier	name		232881	0					
ANR	233850	Argument	addr		232881	3					
ANR	233851	Identifier	addr		232881	0					
ANR	233852	ElseStatement	else		232881	0					
ANR	233853	CompoundStatement		123:12:3908:3908	232881	0					
ANR	233854	ExpressionStatement	"sdb_set ( anal -> sdb_fcns , key , var -> type , 0 )"	418:6:11801:11844	232881	0	True				
ANR	233855	CallExpression	"sdb_set ( anal -> sdb_fcns , key , var -> type , 0 )"		232881	0					
ANR	233856	Callee	sdb_set		232881	0					
ANR	233857	Identifier	sdb_set		232881	0					
ANR	233858	ArgumentList	anal -> sdb_fcns		232881	1					
ANR	233859	Argument	anal -> sdb_fcns		232881	0					
ANR	233860	PtrMemberAccess	anal -> sdb_fcns		232881	0					
ANR	233861	Identifier	anal		232881	0					
ANR	233862	Identifier	sdb_fcns		232881	1					
ANR	233863	Argument	key		232881	1					
ANR	233864	Identifier	key		232881	0					
ANR	233865	Argument	var -> type		232881	2					
ANR	233866	PtrMemberAccess	var -> type		232881	0					
ANR	233867	Identifier	var		232881	0					
ANR	233868	Identifier	type		232881	1					
ANR	233869	Argument	0		232881	3					
ANR	233870	PrimaryExpression	0		232881	0					
ANR	233871	ExpressionStatement	res = true	420:5:11858:11868	232881	1	True				
ANR	233872	AssignmentExpression	res = true		232881	0		=			
ANR	233873	Identifier	res		232881	0					
ANR	233874	Identifier	true		232881	1					
ANR	233875	ElseStatement	else		232881	0					
ANR	233876	CompoundStatement		127:11:3996:3996	232881	0					
ANR	233877	SwitchStatement	switch ( op -> type )		232881	0					
ANR	233878	Condition	op -> type	422:13:11896:11903	232881	0	True				
ANR	233879	PtrMemberAccess	op -> type		232881	0					
ANR	233880	Identifier	op		232881	0					
ANR	233881	Identifier	type		232881	1					
ANR	233882	CompoundStatement		128:23:4021:4021	232881	1					
ANR	233883	Label	case R_ANAL_OP_TYPE_MOV :	423:5:11913:11936	232881	0	True				
ANR	233884	Identifier	R_ANAL_OP_TYPE_MOV		232881	0					
ANR	233885	Label	case R_ANAL_OP_TYPE_PUSH :	424:5:11943:11967	232881	1	True				
ANR	233886	Identifier	R_ANAL_OP_TYPE_PUSH		232881	0					
ANR	233887	ExpressionStatement	"get_src_regname ( core , instr_addr , regname , sizeof ( regname ) )"	425:6:11975:12036	232881	2	True				
ANR	233888	CallExpression	"get_src_regname ( core , instr_addr , regname , sizeof ( regname ) )"		232881	0					
ANR	233889	Callee	get_src_regname		232881	0					
ANR	233890	Identifier	get_src_regname		232881	0					
ANR	233891	ArgumentList	core		232881	1					
ANR	233892	Argument	core		232881	0					
ANR	233893	Identifier	core		232881	0					
ANR	233894	Argument	instr_addr		232881	1					
ANR	233895	Identifier	instr_addr		232881	0					
ANR	233896	Argument	regname		232881	2					
ANR	233897	Identifier	regname		232881	0					
ANR	233898	Argument	sizeof ( regname )		232881	3					
ANR	233899	SizeofExpression	sizeof ( regname )		232881	0					
ANR	233900	Sizeof	sizeof		232881	0					
ANR	233901	SizeofOperand	regname		232881	1					
ANR	233902	BreakStatement	break ;	426:6:12044:12049	232881	3	True				
ANR	233903	Label	case R_ANAL_OP_TYPE_LEA :	427:5:12056:12079	232881	4	True				
ANR	233904	Identifier	R_ANAL_OP_TYPE_LEA		232881	0					
ANR	233905	Label	case R_ANAL_OP_TYPE_LOAD :	428:5:12086:12110	232881	5	True				
ANR	233906	Identifier	R_ANAL_OP_TYPE_LOAD		232881	0					
ANR	233907	Label	case R_ANAL_OP_TYPE_STORE :	429:5:12117:12142	232881	6	True				
ANR	233908	Identifier	R_ANAL_OP_TYPE_STORE		232881	0					
ANR	233909	ExpressionStatement	res = true	430:6:12150:12160	232881	7	True				
ANR	233910	AssignmentExpression	res = true		232881	0		=			
ANR	233911	Identifier	res		232881	0					
ANR	233912	Identifier	true		232881	1					
ANR	233913	BreakStatement	break ;	431:6:12168:12173	232881	8	True				
ANR	233914	ElseStatement	else		232881	0					
ANR	233915	IfStatement	if ( var && res && xaddr && ( xaddr != UT64_MAX ) )		232881	0					
ANR	233916	Condition	var && res && xaddr && ( xaddr != UT64_MAX )	434:14:12202:12243	232881	0	True				
ANR	233917	AndExpression	var && res && xaddr && ( xaddr != UT64_MAX )		232881	0		&&			
ANR	233918	Identifier	var		232881	0					
ANR	233919	AndExpression	res && xaddr && ( xaddr != UT64_MAX )		232881	1		&&			
ANR	233920	Identifier	res		232881	0					
ANR	233921	AndExpression	xaddr && ( xaddr != UT64_MAX )		232881	1		&&			
ANR	233922	Identifier	xaddr		232881	0					
ANR	233923	EqualityExpression	xaddr != UT64_MAX		232881	1		!=			
ANR	233924	Identifier	xaddr		232881	0					
ANR	233925	Identifier	UT64_MAX		232881	1					
ANR	233926	CompoundStatement		143:4:4484:4519	232881	1					
ANR	233927	IdentifierDeclStatement	char tmp [ REG_SZ ] = { 0 } ;	435:4:12282:12304	232881	0	True				
ANR	233928	IdentifierDecl	tmp [ REG_SZ ] = { 0 }		232881	0					
ANR	233929	IdentifierDeclType	char [ REG_SZ ]		232881	0					
ANR	233930	Identifier	tmp		232881	1					
ANR	233931	Identifier	REG_SZ		232881	2					
ANR	233932	AssignmentExpression	tmp [ REG_SZ ] = { 0 }		232881	3		=			
ANR	233933	Identifier	REG_SZ		232881	0					
ANR	233934	InitializerList	0		232881	1					
ANR	233935	PrimaryExpression	0		232881	0					
ANR	233936	ExpressionStatement	"get_src_regname ( core , instr_addr , tmp , sizeof ( tmp ) )"	436:4:12310:12363	232881	1	True				
ANR	233937	CallExpression	"get_src_regname ( core , instr_addr , tmp , sizeof ( tmp ) )"		232881	0					
ANR	233938	Callee	get_src_regname		232881	0					
ANR	233939	Identifier	get_src_regname		232881	0					
ANR	233940	ArgumentList	core		232881	1					
ANR	233941	Argument	core		232881	0					
ANR	233942	Identifier	core		232881	0					
ANR	233943	Argument	instr_addr		232881	1					
ANR	233944	Identifier	instr_addr		232881	0					
ANR	233945	Argument	tmp		232881	2					
ANR	233946	Identifier	tmp		232881	0					
ANR	233947	Argument	sizeof ( tmp )		232881	3					
ANR	233948	SizeofExpression	sizeof ( tmp )		232881	0					
ANR	233949	Sizeof	sizeof		232881	0					
ANR	233950	SizeofOperand	tmp		232881	1					
ANR	233951	IdentifierDeclStatement	"ut64 ptr = get_addr ( trace , tmp , j ) ;"	437:4:12369:12404	232881	2	True				
ANR	233952	IdentifierDecl	"ptr = get_addr ( trace , tmp , j )"		232881	0					
ANR	233953	IdentifierDeclType	ut64		232881	0					
ANR	233954	Identifier	ptr		232881	1					
ANR	233955	AssignmentExpression	"ptr = get_addr ( trace , tmp , j )"		232881	2		=			
ANR	233956	Identifier	ptr		232881	0					
ANR	233957	CallExpression	"get_addr ( trace , tmp , j )"		232881	1					
ANR	233958	Callee	get_addr		232881	0					
ANR	233959	Identifier	get_addr		232881	0					
ANR	233960	ArgumentList	trace		232881	1					
ANR	233961	Argument	trace		232881	0					
ANR	233962	Identifier	trace		232881	0					
ANR	233963	Argument	tmp		232881	1					
ANR	233964	Identifier	tmp		232881	0					
ANR	233965	Argument	j		232881	2					
ANR	233966	Identifier	j		232881	0					
ANR	233967	IfStatement	if ( ptr == xaddr )		232881	3					
ANR	233968	Condition	ptr == xaddr	438:8:12414:12425	232881	0	True				
ANR	233969	EqualityExpression	ptr == xaddr		232881	0		==			
ANR	233970	Identifier	ptr		232881	0					
ANR	233971	Identifier	xaddr		232881	1					
ANR	233972	CompoundStatement		144:22:4543:4543	232881	1					
ANR	233973	ExpressionStatement	"var_retype ( anal , var , name , type , addr , memref , false )"	439:5:12435:12490	232881	0	True				
ANR	233974	CallExpression	"var_retype ( anal , var , name , type , addr , memref , false )"		232881	0					
ANR	233975	Callee	var_retype		232881	0					
ANR	233976	Identifier	var_retype		232881	0					
ANR	233977	ArgumentList	anal		232881	1					
ANR	233978	Argument	anal		232881	0					
ANR	233979	Identifier	anal		232881	0					
ANR	233980	Argument	var		232881	1					
ANR	233981	Identifier	var		232881	0					
ANR	233982	Argument	name		232881	2					
ANR	233983	Identifier	name		232881	0					
ANR	233984	Argument	type		232881	3					
ANR	233985	Identifier	type		232881	0					
ANR	233986	Argument	addr		232881	4					
ANR	233987	Identifier	addr		232881	0					
ANR	233988	Argument	memref		232881	5					
ANR	233989	Identifier	memref		232881	0					
ANR	233990	Argument	false		232881	6					
ANR	233991	Identifier	false		232881	0					
ANR	233992	ExpressionStatement	r_anal_op_free ( op )	442:3:12506:12525	232881	13	True				
ANR	233993	CallExpression	r_anal_op_free ( op )		232881	0					
ANR	233994	Callee	r_anal_op_free		232881	0					
ANR	233995	Identifier	r_anal_op_free		232881	0					
ANR	233996	ArgumentList	op		232881	1					
ANR	233997	Argument	op		232881	0					
ANR	233998	Identifier	op		232881	0					
ANR	233999	ExpressionStatement	r_anal_op_free ( next_op )	443:3:12530:12554	232881	14	True				
ANR	234000	CallExpression	r_anal_op_free ( next_op )		232881	0					
ANR	234001	Callee	r_anal_op_free		232881	0					
ANR	234002	Identifier	r_anal_op_free		232881	0					
ANR	234003	ArgumentList	next_op		232881	1					
ANR	234004	Argument	next_op		232881	0					
ANR	234005	Identifier	next_op		232881	0					
ANR	234006	ExpressionStatement	size += anal -> bits / 8	445:2:12562:12584	232881	12	True				
ANR	234007	AssignmentExpression	size += anal -> bits / 8		232881	0		+=			
ANR	234008	Identifier	size		232881	0					
ANR	234009	MultiplicativeExpression	anal -> bits / 8		232881	1		/			
ANR	234010	PtrMemberAccess	anal -> bits		232881	0					
ANR	234011	Identifier	anal		232881	0					
ANR	234012	Identifier	bits		232881	1					
ANR	234013	PrimaryExpression	8		232881	1					
ANR	234014	ExpressionStatement	free ( type )	446:2:12588:12599	232881	13	True				
ANR	234015	CallExpression	free ( type )		232881	0					
ANR	234016	Callee	free		232881	0					
ANR	234017	Identifier	free		232881	0					
ANR	234018	ArgumentList	type		232881	1					
ANR	234019	Argument	type		232881	0					
ANR	234020	Identifier	type		232881	0					
ANR	234021	ExpressionStatement	r_list_free ( types )	448:1:12605:12624	232881	16	True				
ANR	234022	CallExpression	r_list_free ( types )		232881	0					
ANR	234023	Callee	r_list_free		232881	0					
ANR	234024	Identifier	r_list_free		232881	0					
ANR	234025	ArgumentList	types		232881	1					
ANR	234026	Argument	types		232881	0					
ANR	234027	Identifier	types		232881	0					
ANR	234028	ExpressionStatement	r_cons_break_pop ( )	449:1:12627:12646	232881	17	True				
ANR	234029	CallExpression	r_cons_break_pop ( )		232881	0					
ANR	234030	Callee	r_cons_break_pop		232881	0					
ANR	234031	Identifier	r_cons_break_pop		232881	0					
ANR	234032	ArgumentList			232881	1					
ANR	234033	ReturnType	static void		232881	1					
ANR	234034	Identifier	type_match		232881	2					
ANR	234035	ParameterList	"RCore * core , ut64 addr , char * fcn_name , ut64 baddr , const char * cc , int prev_idx , bool userfnc , ut64 caddr"		232881	3					
ANR	234036	Parameter	RCore * core	294:23:7774:7784	232881	0	True				
ANR	234037	ParameterType	RCore *		232881	0					
ANR	234038	Identifier	core		232881	1					
ANR	234039	Parameter	ut64 addr	294:36:7787:7795	232881	1	True				
ANR	234040	ParameterType	ut64		232881	0					
ANR	234041	Identifier	addr		232881	1					
ANR	234042	Parameter	char * fcn_name	294:47:7798:7811	232881	2	True				
ANR	234043	ParameterType	char *		232881	0					
ANR	234044	Identifier	fcn_name		232881	1					
ANR	234045	Parameter	ut64 baddr	294:63:7814:7823	232881	3	True				
ANR	234046	ParameterType	ut64		232881	0					
ANR	234047	Identifier	baddr		232881	1					
ANR	234048	Parameter	const char * cc	294:75:7826:7839	232881	4	True				
ANR	234049	ParameterType	const char *		232881	0					
ANR	234050	Identifier	cc		232881	1					
ANR	234051	Parameter	int prev_idx	295:2:7844:7855	232881	5	True				
ANR	234052	ParameterType	int		232881	0					
ANR	234053	Identifier	prev_idx		232881	1					
ANR	234054	Parameter	bool userfnc	295:16:7858:7869	232881	6	True				
ANR	234055	ParameterType	bool		232881	0					
ANR	234056	Identifier	userfnc		232881	1					
ANR	234057	Parameter	ut64 caddr	295:30:7872:7881	232881	7	True				
ANR	234058	ParameterType	ut64		232881	0					
ANR	234059	Identifier	caddr		232881	1					
ANR	234060	CFGEntryNode	ENTRY		232881		True				
ANR	234061	CFGExitNode	EXIT		232881		True				
ANR	234062	Symbol	type		232881						
ANR	234063	Symbol	sdb_const_get		232881						
ANR	234064	Symbol	strncmp		232881						
ANR	234065	Symbol	* core -> anal -> esil		232881						
ANR	234066	Symbol	tmp		232881						
ANR	234067	Symbol	core -> anal -> esil		232881						
ANR	234068	Symbol	r_flag_get_i		232881						
ANR	234069	Symbol	in_stack		232881						
ANR	234070	Symbol	r_str_new		232881						
ANR	234071	Symbol	op -> ptr		232881						
ANR	234072	Symbol	var		232881						
ANR	234073	Symbol	op -> type		232881						
ANR	234074	Symbol	r_type_func_args_name		232881						
ANR	234075	Symbol	* * * core		232881						
ANR	234076	Symbol	R_ANAL_OP_TYPE_JMP		232881						
ANR	234077	Symbol	size		232881						
ANR	234078	Symbol	anal		232881						
ANR	234079	Symbol	r_config_get_i		232881						
ANR	234080	Symbol	* regname		232881						
ANR	234081	Symbol	r_list_empty		232881						
ANR	234082	Symbol	f -> realname		232881						
ANR	234083	Symbol	f -> name		232881						
ANR	234084	Symbol	* core		232881						
ANR	234085	Symbol	var -> type		232881						
ANR	234086	Symbol	core -> anal		232881						
ANR	234087	Symbol	anal -> sdb_fcns		232881						
ANR	234088	Symbol	* var		232881						
ANR	234089	Symbol	pos		232881						
ANR	234090	Symbol	core -> anal -> esil -> db_trace		232881						
ANR	234091	Symbol	r_str_endswith		232881						
ANR	234092	Symbol	place		232881						
ANR	234093	Symbol	memref		232881						
ANR	234094	Symbol	fcn_name		232881						
ANR	234095	Symbol	key		232881						
ANR	234096	Symbol	R_ANAL_VAR_KIND_REG		232881						
ANR	234097	Symbol	cc		232881						
ANR	234098	Symbol	max		232881						
ANR	234099	Symbol	f		232881						
ANR	234100	Symbol	i		232881						
ANR	234101	Symbol	j		232881						
ANR	234102	Symbol	core -> flags		232881						
ANR	234103	Symbol	next_op -> type		232881						
ANR	234104	Symbol	op -> var		232881						
ANR	234105	Symbol	verbose		232881						
ANR	234106	Symbol	stack_rev		232881						
ANR	234107	Symbol	* core -> anal		232881						
ANR	234108	Symbol	caddr		232881						
ANR	234109	Symbol	cmt_set		232881						
ANR	234110	Symbol	parse_format		232881						
ANR	234111	Symbol	DEFAULT_MAX		232881						
ANR	234112	Symbol	r_list_length		232881						
ANR	234113	Symbol	arg_num		232881						
ANR	234114	Symbol	* op		232881						
ANR	234115	Symbol	r_core_anal_op		232881						
ANR	234116	Symbol	r_type_func_args_type		232881						
ANR	234117	Symbol	instr_addr		232881						
ANR	234118	Symbol	* * core -> anal		232881						
ANR	234119	Symbol	strcmp		232881						
ANR	234120	Symbol	regname		232881						
ANR	234121	Symbol	xaddr		232881						
ANR	234122	Symbol	res		232881						
ANR	234123	Symbol	NULL		232881						
ANR	234124	Symbol	R_ANAL_OP_MASK_VAL		232881						
ANR	234125	Symbol	query		232881						
ANR	234126	Symbol	format		232881						
ANR	234127	Symbol	r_list_get_n		232881						
ANR	234128	Symbol	R_ANAL_OP_TYPE_MOV		232881						
ANR	234129	Symbol	anal -> bits		232881						
ANR	234130	Symbol	core		232881						
ANR	234131	Symbol	next_op		232881						
ANR	234132	Symbol	R_META_TYPE_VARTYPE		232881						
ANR	234133	Symbol	R_ANAL_OP_TYPE_CALL		232881						
ANR	234134	Symbol	true		232881						
ANR	234135	Symbol	name		232881						
ANR	234136	Symbol	r_anal_cc_max_arg		232881						
ANR	234137	Symbol	idx		232881						
ANR	234138	Symbol	var -> kind		232881						
ANR	234139	Symbol	prev_idx		232881						
ANR	234140	Symbol	* next_op		232881						
ANR	234141	Symbol	baddr		232881						
ANR	234142	Symbol	REG_SZ		232881						
ANR	234143	Symbol	userfnc		232881						
ANR	234144	Symbol	core -> anal -> sdb_types		232881						
ANR	234145	Symbol	R_ANAL_OP_MASK_BASIC		232881						
ANR	234146	Symbol	type_pos_hit		232881						
ANR	234147	Symbol	trace		232881						
ANR	234148	Symbol	* anal		232881						
ANR	234149	Symbol	TDB		232881						
ANR	234150	Symbol	r_type_func_args_count		232881						
ANR	234151	Symbol	r_anal_cc_arg		232881						
ANR	234152	Symbol	addr		232881						
ANR	234153	Symbol	UT64_MAX		232881						
ANR	234154	Symbol	sdb_fmt		232881						
ANR	234155	Symbol	* * core		232881						
ANR	234156	Symbol	sdb_num_get		232881						
ANR	234157	Symbol	core -> config		232881						
ANR	234158	Symbol	op		232881						
ANR	234159	Symbol	types		232881						
ANR	234160	Symbol	false		232881						
ANR	234161	Symbol	ptr		232881						
ANR	234162	Symbol	* f		232881						
ANR	234163	Symbol	get_addr		232881						
ANR	234164	Symbol	SDB_CONTAINS		232881						
ANR	234165	Symbol	op -> size		232881						
ANR	234166	Function	r_core_anal_type_match	452:0:12651:23993							
ANR	234167	FunctionDef	"r_core_anal_type_match (RCore * core , RAnalFunction * fcn)"		234166	0					
ANR	234168	CompoundStatement		452:67:12718:23993	234166	0					
ANR	234169	IdentifierDeclStatement	RAnalBlock * bb ;	453:1:12721:12735	234166	0	True				
ANR	234170	IdentifierDecl	* bb		234166	0					
ANR	234171	IdentifierDeclType	RAnalBlock *		234166	0					
ANR	234172	Identifier	bb		234166	1					
ANR	234173	IdentifierDeclStatement	RListIter * it ;	454:1:12738:12751	234166	1	True				
ANR	234174	IdentifierDecl	* it		234166	0					
ANR	234175	IdentifierDeclType	RListIter *		234166	0					
ANR	234176	Identifier	it		234166	1					
ANR	234177	IdentifierDeclStatement	RAnalOp aop = { 0 } ;	455:1:12754:12771	234166	2	True				
ANR	234178	IdentifierDecl	aop = { 0 }		234166	0					
ANR	234179	IdentifierDeclType	RAnalOp		234166	0					
ANR	234180	Identifier	aop		234166	1					
ANR	234181	AssignmentExpression	aop = { 0 }		234166	2		=			
ANR	234182	Identifier	aop		234166	0					
ANR	234183	InitializerList	0		234166	1					
ANR	234184	PrimaryExpression	0		234166	0					
ANR	234185	IdentifierDeclStatement	bool resolved = false ;	456:1:12774:12795	234166	3	True				
ANR	234186	IdentifierDecl	resolved = false		234166	0					
ANR	234187	IdentifierDeclType	bool		234166	0					
ANR	234188	Identifier	resolved		234166	1					
ANR	234189	AssignmentExpression	resolved = false		234166	2		=			
ANR	234190	Identifier	false		234166	0					
ANR	234191	Identifier	false		234166	1					
ANR	234192	ExpressionStatement	r_return_if_fail ( core && core -> anal && fcn )	458:1:12799:12843	234166	4	True				
ANR	234193	CallExpression	r_return_if_fail ( core && core -> anal && fcn )		234166	0					
ANR	234194	Callee	r_return_if_fail		234166	0					
ANR	234195	Identifier	r_return_if_fail		234166	0					
ANR	234196	ArgumentList	core && core -> anal && fcn		234166	1					
ANR	234197	Argument	core && core -> anal && fcn		234166	0					
ANR	234198	AndExpression	core && core -> anal && fcn		234166	0		&&			
ANR	234199	Identifier	core		234166	0					
ANR	234200	AndExpression	core -> anal && fcn		234166	1		&&			
ANR	234201	PtrMemberAccess	core -> anal		234166	0					
ANR	234202	Identifier	core		234166	0					
ANR	234203	Identifier	anal		234166	1					
ANR	234204	Identifier	fcn		234166	1					
ANR	234205	IfStatement	if ( ! core -> anal -> esil )		234166	5					
ANR	234206	Condition	! core -> anal -> esil	460:5:12851:12867	234166	0	True				
ANR	234207	UnaryOperationExpression	! core -> anal -> esil		234166	0					
ANR	234208	UnaryOperator	!		234166	0					
ANR	234209	PtrMemberAccess	core -> anal -> esil		234166	1					
ANR	234210	PtrMemberAccess	core -> anal		234166	0					
ANR	234211	Identifier	core		234166	0					
ANR	234212	Identifier	anal		234166	1					
ANR	234213	Identifier	esil		234166	1					
ANR	234214	CompoundStatement		9:24:151:151	234166	1					
ANR	234215	ExpressionStatement	"eprintf ( ""Please run aeim\\n"" )"	461:2:12874:12903	234166	0	True				
ANR	234216	CallExpression	"eprintf ( ""Please run aeim\\n"" )"		234166	0					
ANR	234217	Callee	eprintf		234166	0					
ANR	234218	Identifier	eprintf		234166	0					
ANR	234219	ArgumentList	"""Please run aeim\\n"""		234166	1					
ANR	234220	Argument	"""Please run aeim\\n"""		234166	0					
ANR	234221	PrimaryExpression	"""Please run aeim\\n"""		234166	0					
ANR	234222	ReturnStatement	return ;	462:2:12907:12913	234166	1	True				
ANR	234223	IdentifierDeclStatement	RAnal * anal = core -> anal ;	465:1:12920:12944	234166	6	True				
ANR	234224	IdentifierDecl	* anal = core -> anal		234166	0					
ANR	234225	IdentifierDeclType	RAnal *		234166	0					
ANR	234226	Identifier	anal		234166	1					
ANR	234227	AssignmentExpression	* anal = core -> anal		234166	2		=			
ANR	234228	Identifier	anal		234166	0					
ANR	234229	PtrMemberAccess	core -> anal		234166	1					
ANR	234230	Identifier	core		234166	0					
ANR	234231	Identifier	anal		234166	1					
ANR	234232	IdentifierDeclStatement	Sdb * TDB = anal -> sdb_types ;	466:1:12947:12973	234166	7	True				
ANR	234233	IdentifierDecl	* TDB = anal -> sdb_types		234166	0					
ANR	234234	IdentifierDeclType	Sdb *		234166	0					
ANR	234235	Identifier	TDB		234166	1					
ANR	234236	AssignmentExpression	* TDB = anal -> sdb_types		234166	2		=			
ANR	234237	Identifier	TDB		234166	0					
ANR	234238	PtrMemberAccess	anal -> sdb_types		234166	1					
ANR	234239	Identifier	anal		234166	0					
ANR	234240	Identifier	sdb_types		234166	1					
ANR	234241	IdentifierDeclStatement	"bool chk_constraint = r_config_get_i ( core -> config , ""anal.types.constraint"" ) ;"	467:1:12976:13052	234166	8	True				
ANR	234242	IdentifierDecl	"chk_constraint = r_config_get_i ( core -> config , ""anal.types.constraint"" )"		234166	0					
ANR	234243	IdentifierDeclType	bool		234166	0					
ANR	234244	Identifier	chk_constraint		234166	1					
ANR	234245	AssignmentExpression	"chk_constraint = r_config_get_i ( core -> config , ""anal.types.constraint"" )"		234166	2		=			
ANR	234246	Identifier	chk_constraint		234166	0					
ANR	234247	CallExpression	"r_config_get_i ( core -> config , ""anal.types.constraint"" )"		234166	1					
ANR	234248	Callee	r_config_get_i		234166	0					
ANR	234249	Identifier	r_config_get_i		234166	0					
ANR	234250	ArgumentList	core -> config		234166	1					
ANR	234251	Argument	core -> config		234166	0					
ANR	234252	PtrMemberAccess	core -> config		234166	0					
ANR	234253	Identifier	core		234166	0					
ANR	234254	Identifier	config		234166	1					
ANR	234255	Argument	"""anal.types.constraint"""		234166	1					
ANR	234256	PrimaryExpression	"""anal.types.constraint"""		234166	0					
ANR	234257	IdentifierDeclStatement	"int ret , bsize = R_MAX ( 64 , core -> blocksize ) ;"	468:1:13055:13099	234166	9	True				
ANR	234258	IdentifierDecl	ret		234166	0					
ANR	234259	IdentifierDeclType	int		234166	0					
ANR	234260	Identifier	ret		234166	1					
ANR	234261	IdentifierDecl	"bsize = R_MAX ( 64 , core -> blocksize )"		234166	1					
ANR	234262	IdentifierDeclType	int		234166	0					
ANR	234263	Identifier	bsize		234166	1					
ANR	234264	AssignmentExpression	"bsize = R_MAX ( 64 , core -> blocksize )"		234166	2		=			
ANR	234265	Identifier	bsize		234166	0					
ANR	234266	CallExpression	"R_MAX ( 64 , core -> blocksize )"		234166	1					
ANR	234267	Callee	R_MAX		234166	0					
ANR	234268	Identifier	R_MAX		234166	0					
ANR	234269	ArgumentList	64		234166	1					
ANR	234270	Argument	64		234166	0					
ANR	234271	PrimaryExpression	64		234166	0					
ANR	234272	Argument	core -> blocksize		234166	1					
ANR	234273	PtrMemberAccess	core -> blocksize		234166	0					
ANR	234274	Identifier	core		234166	0					
ANR	234275	Identifier	blocksize		234166	1					
ANR	234276	IdentifierDeclStatement	"const int mininstrsz = r_anal_archinfo ( anal , R_ANAL_ARCHINFO_MIN_OP_SIZE ) ;"	469:1:13102:13176	234166	10	True				
ANR	234277	IdentifierDecl	"mininstrsz = r_anal_archinfo ( anal , R_ANAL_ARCHINFO_MIN_OP_SIZE )"		234166	0					
ANR	234278	IdentifierDeclType	const int		234166	0					
ANR	234279	Identifier	mininstrsz		234166	1					
ANR	234280	AssignmentExpression	"mininstrsz = r_anal_archinfo ( anal , R_ANAL_ARCHINFO_MIN_OP_SIZE )"		234166	2		=			
ANR	234281	Identifier	mininstrsz		234166	0					
ANR	234282	CallExpression	"r_anal_archinfo ( anal , R_ANAL_ARCHINFO_MIN_OP_SIZE )"		234166	1					
ANR	234283	Callee	r_anal_archinfo		234166	0					
ANR	234284	Identifier	r_anal_archinfo		234166	0					
ANR	234285	ArgumentList	anal		234166	1					
ANR	234286	Argument	anal		234166	0					
ANR	234287	Identifier	anal		234166	0					
ANR	234288	Argument	R_ANAL_ARCHINFO_MIN_OP_SIZE		234166	1					
ANR	234289	Identifier	R_ANAL_ARCHINFO_MIN_OP_SIZE		234166	0					
ANR	234290	IdentifierDeclStatement	"const int minopcode = R_MAX ( 1 , mininstrsz ) ;"	470:1:13179:13222	234166	11	True				
ANR	234291	IdentifierDecl	"minopcode = R_MAX ( 1 , mininstrsz )"		234166	0					
ANR	234292	IdentifierDeclType	const int		234166	0					
ANR	234293	Identifier	minopcode		234166	1					
ANR	234294	AssignmentExpression	"minopcode = R_MAX ( 1 , mininstrsz )"		234166	2		=			
ANR	234295	Identifier	minopcode		234166	0					
ANR	234296	CallExpression	"R_MAX ( 1 , mininstrsz )"		234166	1					
ANR	234297	Callee	R_MAX		234166	0					
ANR	234298	Identifier	R_MAX		234166	0					
ANR	234299	ArgumentList	1		234166	1					
ANR	234300	Argument	1		234166	0					
ANR	234301	PrimaryExpression	1		234166	0					
ANR	234302	Argument	mininstrsz		234166	1					
ANR	234303	Identifier	mininstrsz		234166	0					
ANR	234304	IdentifierDeclStatement	"int cur_idx , prev_idx = anal -> esil -> trace_idx ;"	471:1:13225:13271	234166	12	True				
ANR	234305	IdentifierDecl	cur_idx		234166	0					
ANR	234306	IdentifierDeclType	int		234166	0					
ANR	234307	Identifier	cur_idx		234166	1					
ANR	234308	IdentifierDecl	prev_idx = anal -> esil -> trace_idx		234166	1					
ANR	234309	IdentifierDeclType	int		234166	0					
ANR	234310	Identifier	prev_idx		234166	1					
ANR	234311	AssignmentExpression	prev_idx = anal -> esil -> trace_idx		234166	2		=			
ANR	234312	Identifier	prev_idx		234166	0					
ANR	234313	PtrMemberAccess	anal -> esil -> trace_idx		234166	1					
ANR	234314	PtrMemberAccess	anal -> esil		234166	0					
ANR	234315	Identifier	anal		234166	0					
ANR	234316	Identifier	esil		234166	1					
ANR	234317	Identifier	trace_idx		234166	1					
ANR	234318	IdentifierDeclStatement	RConfigHold * hc = r_config_hold_new ( core -> config ) ;	472:1:13274:13324	234166	13	True				
ANR	234319	IdentifierDecl	* hc = r_config_hold_new ( core -> config )		234166	0					
ANR	234320	IdentifierDeclType	RConfigHold *		234166	0					
ANR	234321	Identifier	hc		234166	1					
ANR	234322	AssignmentExpression	* hc = r_config_hold_new ( core -> config )		234166	2		=			
ANR	234323	Identifier	hc		234166	0					
ANR	234324	CallExpression	r_config_hold_new ( core -> config )		234166	1					
ANR	234325	Callee	r_config_hold_new		234166	0					
ANR	234326	Identifier	r_config_hold_new		234166	0					
ANR	234327	ArgumentList	core -> config		234166	1					
ANR	234328	Argument	core -> config		234166	0					
ANR	234329	PtrMemberAccess	core -> config		234166	0					
ANR	234330	Identifier	core		234166	0					
ANR	234331	Identifier	config		234166	1					
ANR	234332	IfStatement	if ( ! hc )		234166	14					
ANR	234333	Condition	! hc	473:5:13331:13333	234166	0	True				
ANR	234334	UnaryOperationExpression	! hc		234166	0					
ANR	234335	UnaryOperator	!		234166	0					
ANR	234336	Identifier	hc		234166	1					
ANR	234337	CompoundStatement		22:10:617:617	234166	1					
ANR	234338	ReturnStatement	return ;	474:2:13340:13346	234166	0	True				
ANR	234339	IfStatement	"if ( ! r_anal_emul_init ( core , hc ) || ! fcn )"		234166	15					
ANR	234340	Condition	"! r_anal_emul_init ( core , hc ) || ! fcn"	476:5:13356:13391	234166	0	True				
ANR	234341	OrExpression	"! r_anal_emul_init ( core , hc ) || ! fcn"		234166	0		||			
ANR	234342	UnaryOperationExpression	"! r_anal_emul_init ( core , hc )"		234166	0					
ANR	234343	UnaryOperator	!		234166	0					
ANR	234344	CallExpression	"r_anal_emul_init ( core , hc )"		234166	1					
ANR	234345	Callee	r_anal_emul_init		234166	0					
ANR	234346	Identifier	r_anal_emul_init		234166	0					
ANR	234347	ArgumentList	core		234166	1					
ANR	234348	Argument	core		234166	0					
ANR	234349	Identifier	core		234166	0					
ANR	234350	Argument	hc		234166	1					
ANR	234351	Identifier	hc		234166	0					
ANR	234352	UnaryOperationExpression	! fcn		234166	1					
ANR	234353	UnaryOperator	!		234166	0					
ANR	234354	Identifier	fcn		234166	1					
ANR	234355	CompoundStatement		25:43:675:675	234166	1					
ANR	234356	ExpressionStatement	"r_anal_emul_restore ( core , hc )"	477:2:13398:13428	234166	0	True				
ANR	234357	CallExpression	"r_anal_emul_restore ( core , hc )"		234166	0					
ANR	234358	Callee	r_anal_emul_restore		234166	0					
ANR	234359	Identifier	r_anal_emul_restore		234166	0					
ANR	234360	ArgumentList	core		234166	1					
ANR	234361	Argument	core		234166	0					
ANR	234362	Identifier	core		234166	0					
ANR	234363	Argument	hc		234166	1					
ANR	234364	Identifier	hc		234166	0					
ANR	234365	ReturnStatement	return ;	478:2:13432:13438	234166	1	True				
ANR	234366	IdentifierDeclStatement	ut8 * buf = malloc ( bsize ) ;	480:1:13444:13469	234166	16	True				
ANR	234367	IdentifierDecl	* buf = malloc ( bsize )		234166	0					
ANR	234368	IdentifierDeclType	ut8 *		234166	0					
ANR	234369	Identifier	buf		234166	1					
ANR	234370	AssignmentExpression	* buf = malloc ( bsize )		234166	2		=			
ANR	234371	Identifier	buf		234166	0					
ANR	234372	CallExpression	malloc ( bsize )		234166	1					
ANR	234373	Callee	malloc		234166	0					
ANR	234374	Identifier	malloc		234166	0					
ANR	234375	ArgumentList	bsize		234166	1					
ANR	234376	Argument	bsize		234166	0					
ANR	234377	Identifier	bsize		234166	0					
ANR	234378	IfStatement	if ( ! buf )		234166	17					
ANR	234379	Condition	! buf	481:5:13476:13479	234166	0	True				
ANR	234380	UnaryOperationExpression	! buf		234166	0					
ANR	234381	UnaryOperator	!		234166	0					
ANR	234382	Identifier	buf		234166	1					
ANR	234383	CompoundStatement		30:11:763:763	234166	1					
ANR	234384	ExpressionStatement	"r_anal_emul_restore ( core , hc )"	482:2:13486:13516	234166	0	True				
ANR	234385	CallExpression	"r_anal_emul_restore ( core , hc )"		234166	0					
ANR	234386	Callee	r_anal_emul_restore		234166	0					
ANR	234387	Identifier	r_anal_emul_restore		234166	0					
ANR	234388	ArgumentList	core		234166	1					
ANR	234389	Argument	core		234166	0					
ANR	234390	Identifier	core		234166	0					
ANR	234391	Argument	hc		234166	1					
ANR	234392	Identifier	hc		234166	0					
ANR	234393	ReturnStatement	return ;	483:2:13520:13526	234166	1	True				
ANR	234394	IdentifierDeclStatement	char * fcn_name = NULL ;	485:1:13532:13553	234166	18	True				
ANR	234395	IdentifierDecl	* fcn_name = NULL		234166	0					
ANR	234396	IdentifierDeclType	char *		234166	0					
ANR	234397	Identifier	fcn_name		234166	1					
ANR	234398	AssignmentExpression	* fcn_name = NULL		234166	2		=			
ANR	234399	Identifier	NULL		234166	0					
ANR	234400	Identifier	NULL		234166	1					
ANR	234401	IdentifierDeclStatement	char * ret_type = NULL ;	486:1:13556:13577	234166	19	True				
ANR	234402	IdentifierDecl	* ret_type = NULL		234166	0					
ANR	234403	IdentifierDeclType	char *		234166	0					
ANR	234404	Identifier	ret_type		234166	1					
ANR	234405	AssignmentExpression	* ret_type = NULL		234166	2		=			
ANR	234406	Identifier	NULL		234166	0					
ANR	234407	Identifier	NULL		234166	1					
ANR	234408	IdentifierDeclStatement	bool str_flag = false ;	487:1:13580:13601	234166	20	True				
ANR	234409	IdentifierDecl	str_flag = false		234166	0					
ANR	234410	IdentifierDeclType	bool		234166	0					
ANR	234411	Identifier	str_flag		234166	1					
ANR	234412	AssignmentExpression	str_flag = false		234166	2		=			
ANR	234413	Identifier	false		234166	0					
ANR	234414	Identifier	false		234166	1					
ANR	234415	IdentifierDeclStatement	bool prop = false ;	488:1:13604:13621	234166	21	True				
ANR	234416	IdentifierDecl	prop = false		234166	0					
ANR	234417	IdentifierDeclType	bool		234166	0					
ANR	234418	Identifier	prop		234166	1					
ANR	234419	AssignmentExpression	prop = false		234166	2		=			
ANR	234420	Identifier	false		234166	0					
ANR	234421	Identifier	false		234166	1					
ANR	234422	IdentifierDeclStatement	bool prev_var = false ;	489:1:13624:13645	234166	22	True				
ANR	234423	IdentifierDecl	prev_var = false		234166	0					
ANR	234424	IdentifierDeclType	bool		234166	0					
ANR	234425	Identifier	prev_var		234166	1					
ANR	234426	AssignmentExpression	prev_var = false		234166	2		=			
ANR	234427	Identifier	false		234166	0					
ANR	234428	Identifier	false		234166	1					
ANR	234429	IdentifierDeclStatement	char prev_type [ 256 ] = { 0 } ;	490:1:13648:13673	234166	23	True				
ANR	234430	IdentifierDecl	prev_type [ 256 ] = { 0 }		234166	0					
ANR	234431	IdentifierDeclType	char [ 256 ]		234166	0					
ANR	234432	Identifier	prev_type		234166	1					
ANR	234433	PrimaryExpression	256		234166	2					
ANR	234434	AssignmentExpression	prev_type [ 256 ] = { 0 }		234166	3		=			
ANR	234435	Identifier	prev_type		234166	0					
ANR	234436	InitializerList	0		234166	1					
ANR	234437	PrimaryExpression	0		234166	0					
ANR	234438	IdentifierDeclStatement	const char * prev_dest = NULL ;	491:1:13676:13704	234166	24	True				
ANR	234439	IdentifierDecl	* prev_dest = NULL		234166	0					
ANR	234440	IdentifierDeclType	const char *		234166	0					
ANR	234441	Identifier	prev_dest		234166	1					
ANR	234442	AssignmentExpression	* prev_dest = NULL		234166	2		=			
ANR	234443	Identifier	NULL		234166	0					
ANR	234444	Identifier	NULL		234166	1					
ANR	234445	IdentifierDeclStatement	char * ret_reg = NULL ;	492:1:13707:13727	234166	25	True				
ANR	234446	IdentifierDecl	* ret_reg = NULL		234166	0					
ANR	234447	IdentifierDeclType	char *		234166	0					
ANR	234448	Identifier	ret_reg		234166	1					
ANR	234449	AssignmentExpression	* ret_reg = NULL		234166	2		=			
ANR	234450	Identifier	NULL		234166	0					
ANR	234451	Identifier	NULL		234166	1					
ANR	234452	IdentifierDeclStatement	"const char * pc = r_reg_get_name ( core -> dbg -> reg , R_REG_NAME_PC ) ;"	493:1:13730:13793	234166	26	True				
ANR	234453	IdentifierDecl	"* pc = r_reg_get_name ( core -> dbg -> reg , R_REG_NAME_PC )"		234166	0					
ANR	234454	IdentifierDeclType	const char *		234166	0					
ANR	234455	Identifier	pc		234166	1					
ANR	234456	AssignmentExpression	"* pc = r_reg_get_name ( core -> dbg -> reg , R_REG_NAME_PC )"		234166	2		=			
ANR	234457	Identifier	pc		234166	0					
ANR	234458	CallExpression	"r_reg_get_name ( core -> dbg -> reg , R_REG_NAME_PC )"		234166	1					
ANR	234459	Callee	r_reg_get_name		234166	0					
ANR	234460	Identifier	r_reg_get_name		234166	0					
ANR	234461	ArgumentList	core -> dbg -> reg		234166	1					
ANR	234462	Argument	core -> dbg -> reg		234166	0					
ANR	234463	PtrMemberAccess	core -> dbg -> reg		234166	0					
ANR	234464	PtrMemberAccess	core -> dbg		234166	0					
ANR	234465	Identifier	core		234166	0					
ANR	234466	Identifier	dbg		234166	1					
ANR	234467	Identifier	reg		234166	1					
ANR	234468	Argument	R_REG_NAME_PC		234166	1					
ANR	234469	Identifier	R_REG_NAME_PC		234166	0					
ANR	234470	IdentifierDeclStatement	"RRegItem * r = r_reg_get ( core -> dbg -> reg , pc , - 1 ) ;"	494:1:13796:13844	234166	27	True				
ANR	234471	IdentifierDecl	"* r = r_reg_get ( core -> dbg -> reg , pc , - 1 )"		234166	0					
ANR	234472	IdentifierDeclType	RRegItem *		234166	0					
ANR	234473	Identifier	r		234166	1					
ANR	234474	AssignmentExpression	"* r = r_reg_get ( core -> dbg -> reg , pc , - 1 )"		234166	2		=			
ANR	234475	Identifier	r		234166	0					
ANR	234476	CallExpression	"r_reg_get ( core -> dbg -> reg , pc , - 1 )"		234166	1					
ANR	234477	Callee	r_reg_get		234166	0					
ANR	234478	Identifier	r_reg_get		234166	0					
ANR	234479	ArgumentList	core -> dbg -> reg		234166	1					
ANR	234480	Argument	core -> dbg -> reg		234166	0					
ANR	234481	PtrMemberAccess	core -> dbg -> reg		234166	0					
ANR	234482	PtrMemberAccess	core -> dbg		234166	0					
ANR	234483	Identifier	core		234166	0					
ANR	234484	Identifier	dbg		234166	1					
ANR	234485	Identifier	reg		234166	1					
ANR	234486	Argument	pc		234166	1					
ANR	234487	Identifier	pc		234166	0					
ANR	234488	Argument	- 1		234166	2					
ANR	234489	UnaryOperationExpression	- 1		234166	0					
ANR	234490	UnaryOperator	-		234166	0					
ANR	234491	PrimaryExpression	1		234166	1					
ANR	234492	ExpressionStatement	"r_cons_break_push ( NULL , NULL )"	495:1:13847:13877	234166	28	True				
ANR	234493	CallExpression	"r_cons_break_push ( NULL , NULL )"		234166	0					
ANR	234494	Callee	r_cons_break_push		234166	0					
ANR	234495	Identifier	r_cons_break_push		234166	0					
ANR	234496	ArgumentList	NULL		234166	1					
ANR	234497	Argument	NULL		234166	0					
ANR	234498	Identifier	NULL		234166	0					
ANR	234499	Argument	NULL		234166	1					
ANR	234500	Identifier	NULL		234166	0					
ANR	234501	Statement	r_list_foreach	496:1:13880:13893	234166	29	True				
ANR	234502	Statement	(	496:16:13895:13895	234166	30	True				
ANR	234503	Statement	fcn	496:17:13896:13898	234166	31	True				
ANR	234504	Statement	->	496:20:13899:13900	234166	32	True				
ANR	234505	Statement	bbs	496:22:13901:13903	234166	33	True				
ANR	234506	Statement	","	496:25:13904:13904	234166	34	True				
ANR	234507	Statement	it	496:27:13906:13907	234166	35	True				
ANR	234508	Statement	","	496:29:13908:13908	234166	36	True				
ANR	234509	Statement	bb	496:31:13910:13911	234166	37	True				
ANR	234510	Statement	)	496:33:13912:13912	234166	38	True				
ANR	234511	CompoundStatement		47:2:1223:1232	234166	39					
ANR	234512	IdentifierDeclStatement	ut64 addr = bb -> addr ;	497:2:13918:13938	234166	0	True				
ANR	234513	IdentifierDecl	addr = bb -> addr		234166	0					
ANR	234514	IdentifierDeclType	ut64		234166	0					
ANR	234515	Identifier	addr		234166	1					
ANR	234516	AssignmentExpression	addr = bb -> addr		234166	2		=			
ANR	234517	Identifier	addr		234166	0					
ANR	234518	PtrMemberAccess	bb -> addr		234166	1					
ANR	234519	Identifier	bb		234166	0					
ANR	234520	Identifier	addr		234166	1					
ANR	234521	IdentifierDeclStatement	int i = 0 ;	498:2:13942:13951	234166	1	True				
ANR	234522	IdentifierDecl	i = 0		234166	0					
ANR	234523	IdentifierDeclType	int		234166	0					
ANR	234524	Identifier	i		234166	1					
ANR	234525	AssignmentExpression	i = 0		234166	2		=			
ANR	234526	Identifier	i		234166	0					
ANR	234527	PrimaryExpression	0		234166	1					
ANR	234528	ExpressionStatement	"r_reg_set_value ( core -> dbg -> reg , r , addr )"	499:2:13955:13996	234166	2	True				
ANR	234529	CallExpression	"r_reg_set_value ( core -> dbg -> reg , r , addr )"		234166	0					
ANR	234530	Callee	r_reg_set_value		234166	0					
ANR	234531	Identifier	r_reg_set_value		234166	0					
ANR	234532	ArgumentList	core -> dbg -> reg		234166	1					
ANR	234533	Argument	core -> dbg -> reg		234166	0					
ANR	234534	PtrMemberAccess	core -> dbg -> reg		234166	0					
ANR	234535	PtrMemberAccess	core -> dbg		234166	0					
ANR	234536	Identifier	core		234166	0					
ANR	234537	Identifier	dbg		234166	1					
ANR	234538	Identifier	reg		234166	1					
ANR	234539	Argument	r		234166	1					
ANR	234540	Identifier	r		234166	0					
ANR	234541	Argument	addr		234166	2					
ANR	234542	Identifier	addr		234166	0					
ANR	234543	WhileStatement	while ( 1 )		234166	3					
ANR	234544	Condition	1	500:9:14007:14007	234166	0	True				
ANR	234545	PrimaryExpression	1		234166	0					
ANR	234546	CompoundStatement		86:3:2529:2571	234166	1					
ANR	234547	IfStatement	if ( r_cons_is_breaked ( ) )		234166	0					
ANR	234548	Condition	r_cons_is_breaked ( )	501:7:14019:14038	234166	0	True				
ANR	234549	CallExpression	r_cons_is_breaked ( )		234166	0					
ANR	234550	Callee	r_cons_is_breaked		234166	0					
ANR	234551	Identifier	r_cons_is_breaked		234166	0					
ANR	234552	ArgumentList			234166	1					
ANR	234553	CompoundStatement		50:29:1322:1322	234166	1					
ANR	234554	GotoStatement	goto out_function ;	502:4:14047:14064	234166	0	True				
ANR	234555	Identifier	out_function		234166	0					
ANR	234556	IfStatement	if ( i >= ( bsize - 32 ) )		234166	1					
ANR	234557	Condition	i >= ( bsize - 32 )	504:7:14078:14094	234166	0	True				
ANR	234558	RelationalExpression	i >= ( bsize - 32 )		234166	0		>=			
ANR	234559	Identifier	i		234166	0					
ANR	234560	AdditiveExpression	bsize - 32		234166	1		-			
ANR	234561	Identifier	bsize		234166	0					
ANR	234562	PrimaryExpression	32		234166	1					
ANR	234563	CompoundStatement		53:26:1378:1378	234166	1					
ANR	234564	ExpressionStatement	i = 0	505:4:14103:14108	234166	0	True				
ANR	234565	AssignmentExpression	i = 0		234166	0		=			
ANR	234566	Identifier	i		234166	0					
ANR	234567	PrimaryExpression	0		234166	1					
ANR	234568	IdentifierDeclStatement	"ut64 pcval = r_reg_getv ( anal -> reg , pc ) ;"	507:3:14118:14157	234166	2	True				
ANR	234569	IdentifierDecl	"pcval = r_reg_getv ( anal -> reg , pc )"		234166	0					
ANR	234570	IdentifierDeclType	ut64		234166	0					
ANR	234571	Identifier	pcval		234166	1					
ANR	234572	AssignmentExpression	"pcval = r_reg_getv ( anal -> reg , pc )"		234166	2		=			
ANR	234573	Identifier	pcval		234166	0					
ANR	234574	CallExpression	"r_reg_getv ( anal -> reg , pc )"		234166	1					
ANR	234575	Callee	r_reg_getv		234166	0					
ANR	234576	Identifier	r_reg_getv		234166	0					
ANR	234577	ArgumentList	anal -> reg		234166	1					
ANR	234578	Argument	anal -> reg		234166	0					
ANR	234579	PtrMemberAccess	anal -> reg		234166	0					
ANR	234580	Identifier	anal		234166	0					
ANR	234581	Identifier	reg		234166	1					
ANR	234582	Argument	pc		234166	1					
ANR	234583	Identifier	pc		234166	0					
ANR	234584	IfStatement	if ( ( addr >= bb -> addr + bb -> size ) || ( addr < bb -> addr ) || pcval != addr )		234166	3					
ANR	234585	Condition	( addr >= bb -> addr + bb -> size ) || ( addr < bb -> addr ) || pcval != addr	508:7:14166:14232	234166	0	True				
ANR	234586	OrExpression	( addr >= bb -> addr + bb -> size ) || ( addr < bb -> addr ) || pcval != addr		234166	0		||			
ANR	234587	RelationalExpression	addr >= bb -> addr + bb -> size		234166	0		>=			
ANR	234588	Identifier	addr		234166	0					
ANR	234589	AdditiveExpression	bb -> addr + bb -> size		234166	1		+			
ANR	234590	PtrMemberAccess	bb -> addr		234166	0					
ANR	234591	Identifier	bb		234166	0					
ANR	234592	Identifier	addr		234166	1					
ANR	234593	PtrMemberAccess	bb -> size		234166	1					
ANR	234594	Identifier	bb		234166	0					
ANR	234595	Identifier	size		234166	1					
ANR	234596	OrExpression	( addr < bb -> addr ) || pcval != addr		234166	1		||			
ANR	234597	RelationalExpression	addr < bb -> addr		234166	0		<			
ANR	234598	Identifier	addr		234166	0					
ANR	234599	PtrMemberAccess	bb -> addr		234166	1					
ANR	234600	Identifier	bb		234166	0					
ANR	234601	Identifier	addr		234166	1					
ANR	234602	EqualityExpression	pcval != addr		234166	1		!=			
ANR	234603	Identifier	pcval		234166	0					
ANR	234604	Identifier	addr		234166	1					
ANR	234605	CompoundStatement		57:76:1516:1516	234166	1					
ANR	234606	BreakStatement	break ;	509:4:14241:14246	234166	0	True				
ANR	234607	IfStatement	if ( ! i )		234166	4					
ANR	234608	Condition	! i	511:7:14260:14261	234166	0	True				
ANR	234609	UnaryOperationExpression	! i		234166	0					
ANR	234610	UnaryOperator	!		234166	0					
ANR	234611	Identifier	i		234166	1					
ANR	234612	CompoundStatement		60:11:1545:1545	234166	1					
ANR	234613	ExpressionStatement	"r_io_read_at ( core -> io , addr , buf , bsize )"	512:4:14270:14311	234166	0	True				
ANR	234614	CallExpression	"r_io_read_at ( core -> io , addr , buf , bsize )"		234166	0					
ANR	234615	Callee	r_io_read_at		234166	0					
ANR	234616	Identifier	r_io_read_at		234166	0					
ANR	234617	ArgumentList	core -> io		234166	1					
ANR	234618	Argument	core -> io		234166	0					
ANR	234619	PtrMemberAccess	core -> io		234166	0					
ANR	234620	Identifier	core		234166	0					
ANR	234621	Identifier	io		234166	1					
ANR	234622	Argument	addr		234166	1					
ANR	234623	Identifier	addr		234166	0					
ANR	234624	Argument	buf		234166	2					
ANR	234625	Identifier	buf		234166	0					
ANR	234626	Argument	bsize		234166	3					
ANR	234627	Identifier	bsize		234166	0					
ANR	234628	ExpressionStatement	"ret = r_anal_op ( anal , & aop , addr , buf + i , bsize - i , R_ANAL_OP_MASK_BASIC | R_ANAL_OP_MASK_VAL )"	514:3:14321:14418	234166	5	True				
ANR	234629	AssignmentExpression	"ret = r_anal_op ( anal , & aop , addr , buf + i , bsize - i , R_ANAL_OP_MASK_BASIC | R_ANAL_OP_MASK_VAL )"		234166	0		=			
ANR	234630	Identifier	ret		234166	0					
ANR	234631	CallExpression	"r_anal_op ( anal , & aop , addr , buf + i , bsize - i , R_ANAL_OP_MASK_BASIC | R_ANAL_OP_MASK_VAL )"		234166	1					
ANR	234632	Callee	r_anal_op		234166	0					
ANR	234633	Identifier	r_anal_op		234166	0					
ANR	234634	ArgumentList	anal		234166	1					
ANR	234635	Argument	anal		234166	0					
ANR	234636	Identifier	anal		234166	0					
ANR	234637	Argument	& aop		234166	1					
ANR	234638	UnaryOperationExpression	& aop		234166	0					
ANR	234639	UnaryOperator	&		234166	0					
ANR	234640	Identifier	aop		234166	1					
ANR	234641	Argument	addr		234166	2					
ANR	234642	Identifier	addr		234166	0					
ANR	234643	Argument	buf + i		234166	3					
ANR	234644	AdditiveExpression	buf + i		234166	0		+			
ANR	234645	Identifier	buf		234166	0					
ANR	234646	Identifier	i		234166	1					
ANR	234647	Argument	bsize - i		234166	4					
ANR	234648	AdditiveExpression	bsize - i		234166	0		-			
ANR	234649	Identifier	bsize		234166	0					
ANR	234650	Identifier	i		234166	1					
ANR	234651	Argument	R_ANAL_OP_MASK_BASIC | R_ANAL_OP_MASK_VAL		234166	5					
ANR	234652	InclusiveOrExpression	R_ANAL_OP_MASK_BASIC | R_ANAL_OP_MASK_VAL		234166	0		|			
ANR	234653	Identifier	R_ANAL_OP_MASK_BASIC		234166	0					
ANR	234654	Identifier	R_ANAL_OP_MASK_VAL		234166	1					
ANR	234655	IfStatement	if ( ret <= 0 )		234166	6					
ANR	234656	Condition	ret <= 0	515:7:14427:14434	234166	0	True				
ANR	234657	RelationalExpression	ret <= 0		234166	0		<=			
ANR	234658	Identifier	ret		234166	0					
ANR	234659	PrimaryExpression	0		234166	1					
ANR	234660	CompoundStatement		64:17:1718:1718	234166	1					
ANR	234661	ExpressionStatement	i += minopcode	516:4:14443:14457	234166	0	True				
ANR	234662	AssignmentExpression	i += minopcode		234166	0		+=			
ANR	234663	Identifier	i		234166	0					
ANR	234664	Identifier	minopcode		234166	1					
ANR	234665	ExpressionStatement	addr += minopcode	517:4:14463:14480	234166	1	True				
ANR	234666	AssignmentExpression	addr += minopcode		234166	0		+=			
ANR	234667	Identifier	addr		234166	0					
ANR	234668	Identifier	minopcode		234166	1					
ANR	234669	ExpressionStatement	r_anal_op_fini ( & aop )	518:4:14486:14507	234166	2	True				
ANR	234670	CallExpression	r_anal_op_fini ( & aop )		234166	0					
ANR	234671	Callee	r_anal_op_fini		234166	0					
ANR	234672	Identifier	r_anal_op_fini		234166	0					
ANR	234673	ArgumentList	& aop		234166	1					
ANR	234674	Argument	& aop		234166	0					
ANR	234675	UnaryOperationExpression	& aop		234166	0					
ANR	234676	UnaryOperator	&		234166	0					
ANR	234677	Identifier	aop		234166	1					
ANR	234678	ContinueStatement	continue ;	519:4:14513:14521	234166	3	True				
ANR	234679	Statement	int	521:3:14531:14533	234166	7	True				
ANR	234680	Statement	loop_count	521:7:14535:14544	234166	8	True				
ANR	234681	Statement	=	521:18:14546:14546	234166	9	True				
ANR	234682	Statement	sdb_num_get	521:20:14548:14558	234166	10	True				
ANR	234683	Statement	(	521:32:14560:14560	234166	11	True				
ANR	234684	Statement	anal	521:33:14561:14564	234166	12	True				
ANR	234685	Statement	->	521:37:14565:14566	234166	13	True				
ANR	234686	Statement	esil	521:39:14567:14570	234166	14	True				
ANR	234687	Statement	->	521:43:14571:14572	234166	15	True				
ANR	234688	Statement	db_trace	521:45:14573:14580	234166	16	True				
ANR	234689	Statement	","	521:53:14581:14581	234166	17	True				
ANR	234690	Statement	sdb_fmt	521:55:14583:14589	234166	18	True				
ANR	234691	Statement	(	521:63:14591:14591	234166	19	True				
ANR	234692	Statement	"""0x%"""	521:64:14592:14596	234166	20	True				
ANR	234693	Statement	PFMT64x	521:69:14597:14603	234166	21	True				
ANR	234694	Statement	""".count"""	521:76:14604:14611	234166	22	True				
ANR	234695	Statement	","	521:84:14612:14612	234166	23	True				
ANR	234696	Statement	addr	521:86:14614:14617	234166	24	True				
ANR	234697	Statement	)	521:90:14618:14618	234166	25	True				
ANR	234698	Statement	","	521:91:14619:14619	234166	26	True				
ANR	234699	Statement	0	521:93:14621:14621	234166	27	True				
ANR	234700	Statement	)	521:94:14622:14622	234166	28	True				
ANR	234701	ExpressionStatement		521:95:14623:14623	234166	29	True				
ANR	234702	IfStatement	if ( loop_count > LOOP_MAX || aop . type == R_ANAL_OP_TYPE_RET )		234166	30					
ANR	234703	Condition	loop_count > LOOP_MAX || aop . type == R_ANAL_OP_TYPE_RET	522:7:14632:14686	234166	0	True				
ANR	234704	OrExpression	loop_count > LOOP_MAX || aop . type == R_ANAL_OP_TYPE_RET		234166	0		||			
ANR	234705	RelationalExpression	loop_count > LOOP_MAX		234166	0		>			
ANR	234706	Identifier	loop_count		234166	0					
ANR	234707	Identifier	LOOP_MAX		234166	1					
ANR	234708	EqualityExpression	aop . type == R_ANAL_OP_TYPE_RET		234166	1		==			
ANR	234709	MemberAccess	aop . type		234166	0					
ANR	234710	Identifier	aop		234166	0					
ANR	234711	Identifier	type		234166	1					
ANR	234712	Identifier	R_ANAL_OP_TYPE_RET		234166	1					
ANR	234713	CompoundStatement		71:64:1970:1970	234166	1					
ANR	234714	ExpressionStatement	r_anal_op_fini ( & aop )	523:4:14695:14716	234166	0	True				
ANR	234715	CallExpression	r_anal_op_fini ( & aop )		234166	0					
ANR	234716	Callee	r_anal_op_fini		234166	0					
ANR	234717	Identifier	r_anal_op_fini		234166	0					
ANR	234718	ArgumentList	& aop		234166	1					
ANR	234719	Argument	& aop		234166	0					
ANR	234720	UnaryOperationExpression	& aop		234166	0					
ANR	234721	UnaryOperator	&		234166	0					
ANR	234722	Identifier	aop		234166	1					
ANR	234723	BreakStatement	break ;	524:4:14722:14727	234166	1	True				
ANR	234724	Statement	sdb_num_set	526:3:14737:14747	234166	31	True				
ANR	234725	Statement	(	526:15:14749:14749	234166	32	True				
ANR	234726	Statement	anal	526:16:14750:14753	234166	33	True				
ANR	234727	Statement	->	526:20:14754:14755	234166	34	True				
ANR	234728	Statement	esil	526:22:14756:14759	234166	35	True				
ANR	234729	Statement	->	526:26:14760:14761	234166	36	True				
ANR	234730	Statement	db_trace	526:28:14762:14769	234166	37	True				
ANR	234731	Statement	","	526:36:14770:14770	234166	38	True				
ANR	234732	Statement	sdb_fmt	526:38:14772:14778	234166	39	True				
ANR	234733	Statement	(	526:46:14780:14780	234166	40	True				
ANR	234734	Statement	"""0x%"""	526:47:14781:14785	234166	41	True				
ANR	234735	Statement	PFMT64x	526:52:14786:14792	234166	42	True				
ANR	234736	Statement	""".count"""	526:59:14793:14800	234166	43	True				
ANR	234737	Statement	","	526:67:14801:14801	234166	44	True				
ANR	234738	Statement	addr	526:69:14803:14806	234166	45	True				
ANR	234739	Statement	)	526:73:14807:14807	234166	46	True				
ANR	234740	Statement	","	526:74:14808:14808	234166	47	True				
ANR	234741	Statement	loop_count	526:76:14810:14819	234166	48	True				
ANR	234742	Statement	+	526:87:14821:14821	234166	49	True				
ANR	234743	Statement	1	526:89:14823:14823	234166	50	True				
ANR	234744	Statement	","	526:90:14824:14824	234166	51	True				
ANR	234745	Statement	0	526:92:14826:14826	234166	52	True				
ANR	234746	Statement	)	526:93:14827:14827	234166	53	True				
ANR	234747	ExpressionStatement		526:94:14828:14828	234166	54	True				
ANR	234748	IfStatement	if ( r_anal_op_nonlinear ( aop . type ) )		234166	55					
ANR	234749	Condition	r_anal_op_nonlinear ( aop . type )	527:7:14837:14866	234166	0	True				
ANR	234750	CallExpression	r_anal_op_nonlinear ( aop . type )		234166	0					
ANR	234751	Callee	r_anal_op_nonlinear		234166	0					
ANR	234752	Identifier	r_anal_op_nonlinear		234166	0					
ANR	234753	ArgumentList	aop . type		234166	1					
ANR	234754	Argument	aop . type		234166	0					
ANR	234755	MemberAccess	aop . type		234166	0					
ANR	234756	Identifier	aop		234166	0					
ANR	234757	Identifier	type		234166	1					
ANR	234758	CompoundStatement		76:39:2150:2150	234166	1					
ANR	234759	ExpressionStatement	"r_reg_set_value ( core -> dbg -> reg , r , addr + ret )"	528:4:14895:14942	234166	0	True				
ANR	234760	CallExpression	"r_reg_set_value ( core -> dbg -> reg , r , addr + ret )"		234166	0					
ANR	234761	Callee	r_reg_set_value		234166	0					
ANR	234762	Identifier	r_reg_set_value		234166	0					
ANR	234763	ArgumentList	core -> dbg -> reg		234166	1					
ANR	234764	Argument	core -> dbg -> reg		234166	0					
ANR	234765	PtrMemberAccess	core -> dbg -> reg		234166	0					
ANR	234766	PtrMemberAccess	core -> dbg		234166	0					
ANR	234767	Identifier	core		234166	0					
ANR	234768	Identifier	dbg		234166	1					
ANR	234769	Identifier	reg		234166	1					
ANR	234770	Argument	r		234166	1					
ANR	234771	Identifier	r		234166	0					
ANR	234772	Argument	addr + ret		234166	2					
ANR	234773	AdditiveExpression	addr + ret		234166	0		+			
ANR	234774	Identifier	addr		234166	0					
ANR	234775	Identifier	ret		234166	1					
ANR	234776	ElseStatement	else		234166	0					
ANR	234777	CompoundStatement		78:10:2235:2235	234166	0					
ANR	234778	ExpressionStatement	"r_core_esil_step ( core , UT64_MAX , NULL , NULL , false )"	530:4:14960:15012	234166	0	True				
ANR	234779	CallExpression	"r_core_esil_step ( core , UT64_MAX , NULL , NULL , false )"		234166	0					
ANR	234780	Callee	r_core_esil_step		234166	0					
ANR	234781	Identifier	r_core_esil_step		234166	0					
ANR	234782	ArgumentList	core		234166	1					
ANR	234783	Argument	core		234166	0					
ANR	234784	Identifier	core		234166	0					
ANR	234785	Argument	UT64_MAX		234166	1					
ANR	234786	Identifier	UT64_MAX		234166	0					
ANR	234787	Argument	NULL		234166	2					
ANR	234788	Identifier	NULL		234166	0					
ANR	234789	Argument	NULL		234166	3					
ANR	234790	Identifier	NULL		234166	0					
ANR	234791	Argument	false		234166	4					
ANR	234792	Identifier	false		234166	0					
ANR	234793	IdentifierDeclStatement	bool userfnc = false ;	532:3:15022:15042	234166	56	True				
ANR	234794	IdentifierDecl	userfnc = false		234166	0					
ANR	234795	IdentifierDeclType	bool		234166	0					
ANR	234796	Identifier	userfnc		234166	1					
ANR	234797	AssignmentExpression	userfnc = false		234166	2		=			
ANR	234798	Identifier	false		234166	0					
ANR	234799	Identifier	false		234166	1					
ANR	234800	IdentifierDeclStatement	Sdb * trace = anal -> esil -> db_trace ;	533:3:15047:15080	234166	57	True				
ANR	234801	IdentifierDecl	* trace = anal -> esil -> db_trace		234166	0					
ANR	234802	IdentifierDeclType	Sdb *		234166	0					
ANR	234803	Identifier	trace		234166	1					
ANR	234804	AssignmentExpression	* trace = anal -> esil -> db_trace		234166	2		=			
ANR	234805	Identifier	trace		234166	0					
ANR	234806	PtrMemberAccess	anal -> esil -> db_trace		234166	1					
ANR	234807	PtrMemberAccess	anal -> esil		234166	0					
ANR	234808	Identifier	anal		234166	0					
ANR	234809	Identifier	esil		234166	1					
ANR	234810	Identifier	db_trace		234166	1					
ANR	234811	ExpressionStatement	"cur_idx = sdb_num_get ( trace , ""idx"" , 0 )"	534:3:15085:15124	234166	58	True				
ANR	234812	AssignmentExpression	"cur_idx = sdb_num_get ( trace , ""idx"" , 0 )"		234166	0		=			
ANR	234813	Identifier	cur_idx		234166	0					
ANR	234814	CallExpression	"sdb_num_get ( trace , ""idx"" , 0 )"		234166	1					
ANR	234815	Callee	sdb_num_get		234166	0					
ANR	234816	Identifier	sdb_num_get		234166	0					
ANR	234817	ArgumentList	trace		234166	1					
ANR	234818	Argument	trace		234166	0					
ANR	234819	Identifier	trace		234166	0					
ANR	234820	Argument	"""idx"""		234166	1					
ANR	234821	PrimaryExpression	"""idx"""		234166	0					
ANR	234822	Argument	0		234166	2					
ANR	234823	PrimaryExpression	0		234166	0					
ANR	234824	IdentifierDeclStatement	RAnalVar * var = aop . var ;	535:3:15129:15152	234166	59	True				
ANR	234825	IdentifierDecl	* var = aop . var		234166	0					
ANR	234826	IdentifierDeclType	RAnalVar *		234166	0					
ANR	234827	Identifier	var		234166	1					
ANR	234828	AssignmentExpression	* var = aop . var		234166	2		=			
ANR	234829	Identifier	var		234166	0					
ANR	234830	MemberAccess	aop . var		234166	1					
ANR	234831	Identifier	aop		234166	0					
ANR	234832	Identifier	var		234166	1					
ANR	234833	IdentifierDeclStatement	"RAnalOp * next_op = r_core_anal_op ( core , addr + ret , R_ANAL_OP_MASK_BASIC ) ;"	536:3:15157:15231	234166	60	True				
ANR	234834	IdentifierDecl	"* next_op = r_core_anal_op ( core , addr + ret , R_ANAL_OP_MASK_BASIC )"		234166	0					
ANR	234835	IdentifierDeclType	RAnalOp *		234166	0					
ANR	234836	Identifier	next_op		234166	1					
ANR	234837	AssignmentExpression	"* next_op = r_core_anal_op ( core , addr + ret , R_ANAL_OP_MASK_BASIC )"		234166	2		=			
ANR	234838	Identifier	next_op		234166	0					
ANR	234839	CallExpression	"r_core_anal_op ( core , addr + ret , R_ANAL_OP_MASK_BASIC )"		234166	1					
ANR	234840	Callee	r_core_anal_op		234166	0					
ANR	234841	Identifier	r_core_anal_op		234166	0					
ANR	234842	ArgumentList	core		234166	1					
ANR	234843	Argument	core		234166	0					
ANR	234844	Identifier	core		234166	0					
ANR	234845	Argument	addr + ret		234166	1					
ANR	234846	AdditiveExpression	addr + ret		234166	0		+			
ANR	234847	Identifier	addr		234166	0					
ANR	234848	Identifier	ret		234166	1					
ANR	234849	Argument	R_ANAL_OP_MASK_BASIC		234166	2					
ANR	234850	Identifier	R_ANAL_OP_MASK_BASIC		234166	0					
ANR	234851	IdentifierDeclStatement	ut32 type = aop . type & R_ANAL_OP_TYPE_MASK ;	537:3:15248:15290	234166	61	True				
ANR	234852	IdentifierDecl	type = aop . type & R_ANAL_OP_TYPE_MASK		234166	0					
ANR	234853	IdentifierDeclType	ut32		234166	0					
ANR	234854	Identifier	type		234166	1					
ANR	234855	AssignmentExpression	type = aop . type & R_ANAL_OP_TYPE_MASK		234166	2		=			
ANR	234856	Identifier	type		234166	0					
ANR	234857	BitAndExpression	aop . type & R_ANAL_OP_TYPE_MASK		234166	1		&			
ANR	234858	MemberAccess	aop . type		234166	0					
ANR	234859	Identifier	aop		234166	0					
ANR	234860	Identifier	type		234166	1					
ANR	234861	Identifier	R_ANAL_OP_TYPE_MASK		234166	1					
ANR	234862	IfStatement	if ( aop . type == R_ANAL_OP_TYPE_CALL || aop . type & R_ANAL_OP_TYPE_UCALL )		234166	62					
ANR	234863	Condition	aop . type == R_ANAL_OP_TYPE_CALL || aop . type & R_ANAL_OP_TYPE_UCALL	538:7:15299:15364	234166	0	True				
ANR	234864	OrExpression	aop . type == R_ANAL_OP_TYPE_CALL || aop . type & R_ANAL_OP_TYPE_UCALL		234166	0		||			
ANR	234865	EqualityExpression	aop . type == R_ANAL_OP_TYPE_CALL		234166	0		==			
ANR	234866	MemberAccess	aop . type		234166	0					
ANR	234867	Identifier	aop		234166	0					
ANR	234868	Identifier	type		234166	1					
ANR	234869	Identifier	R_ANAL_OP_TYPE_CALL		234166	1					
ANR	234870	BitAndExpression	aop . type & R_ANAL_OP_TYPE_UCALL		234166	1		&			
ANR	234871	MemberAccess	aop . type		234166	0					
ANR	234872	Identifier	aop		234166	0					
ANR	234873	Identifier	type		234166	1					
ANR	234874	Identifier	R_ANAL_OP_TYPE_UCALL		234166	1					
ANR	234875	CompoundStatement		89:4:2682:2698	234166	1					
ANR	234876	IdentifierDeclStatement	char * full_name = NULL ;	539:4:15373:15395	234166	0	True				
ANR	234877	IdentifierDecl	* full_name = NULL		234166	0					
ANR	234878	IdentifierDeclType	char *		234166	0					
ANR	234879	Identifier	full_name		234166	1					
ANR	234880	AssignmentExpression	* full_name = NULL		234166	2		=			
ANR	234881	Identifier	NULL		234166	0					
ANR	234882	Identifier	NULL		234166	1					
ANR	234883	IdentifierDeclStatement	ut64 callee_addr ;	540:4:15401:15417	234166	1	True				
ANR	234884	IdentifierDecl	callee_addr		234166	0					
ANR	234885	IdentifierDeclType	ut64		234166	0					
ANR	234886	Identifier	callee_addr		234166	1					
ANR	234887	IfStatement	if ( aop . type == R_ANAL_OP_TYPE_CALL )		234166	2					
ANR	234888	Condition	aop . type == R_ANAL_OP_TYPE_CALL	541:8:15427:15457	234166	0	True				
ANR	234889	EqualityExpression	aop . type == R_ANAL_OP_TYPE_CALL		234166	0		==			
ANR	234890	MemberAccess	aop . type		234166	0					
ANR	234891	Identifier	aop		234166	0					
ANR	234892	Identifier	type		234166	1					
ANR	234893	Identifier	R_ANAL_OP_TYPE_CALL		234166	1					
ANR	234894	CompoundStatement		91:5:2748:2812	234166	1					
ANR	234895	IdentifierDeclStatement	"RAnalFunction * fcn_call = r_anal_get_fcn_in ( anal , aop . jump , - 1 ) ;"	542:5:15467:15531	234166	0	True				
ANR	234896	IdentifierDecl	"* fcn_call = r_anal_get_fcn_in ( anal , aop . jump , - 1 )"		234166	0					
ANR	234897	IdentifierDeclType	RAnalFunction *		234166	0					
ANR	234898	Identifier	fcn_call		234166	1					
ANR	234899	AssignmentExpression	"* fcn_call = r_anal_get_fcn_in ( anal , aop . jump , - 1 )"		234166	2		=			
ANR	234900	Identifier	fcn_call		234166	0					
ANR	234901	CallExpression	"r_anal_get_fcn_in ( anal , aop . jump , - 1 )"		234166	1					
ANR	234902	Callee	r_anal_get_fcn_in		234166	0					
ANR	234903	Identifier	r_anal_get_fcn_in		234166	0					
ANR	234904	ArgumentList	anal		234166	1					
ANR	234905	Argument	anal		234166	0					
ANR	234906	Identifier	anal		234166	0					
ANR	234907	Argument	aop . jump		234166	1					
ANR	234908	MemberAccess	aop . jump		234166	0					
ANR	234909	Identifier	aop		234166	0					
ANR	234910	Identifier	jump		234166	1					
ANR	234911	Argument	- 1		234166	2					
ANR	234912	UnaryOperationExpression	- 1		234166	0					
ANR	234913	UnaryOperator	-		234166	0					
ANR	234914	PrimaryExpression	1		234166	1					
ANR	234915	IfStatement	if ( fcn_call )		234166	1					
ANR	234916	Condition	fcn_call	543:9:15542:15549	234166	0	True				
ANR	234917	Identifier	fcn_call		234166	0					
ANR	234918	CompoundStatement		92:19:2833:2833	234166	1					
ANR	234919	ExpressionStatement	full_name = fcn_call -> name	544:6:15560:15586	234166	0	True				
ANR	234920	AssignmentExpression	full_name = fcn_call -> name		234166	0		=			
ANR	234921	Identifier	full_name		234166	0					
ANR	234922	PtrMemberAccess	fcn_call -> name		234166	1					
ANR	234923	Identifier	fcn_call		234166	0					
ANR	234924	Identifier	name		234166	1					
ANR	234925	ExpressionStatement	callee_addr = fcn_call -> addr	545:6:15594:15622	234166	1	True				
ANR	234926	AssignmentExpression	callee_addr = fcn_call -> addr		234166	0		=			
ANR	234927	Identifier	callee_addr		234166	0					
ANR	234928	PtrMemberAccess	fcn_call -> addr		234166	1					
ANR	234929	Identifier	fcn_call		234166	0					
ANR	234930	Identifier	addr		234166	1					
ANR	234931	ElseStatement	else		234166	0					
ANR	234932	IfStatement	if ( aop . ptr != UT64_MAX )		234166	0					
ANR	234933	Condition	aop . ptr != UT64_MAX	547:15:15646:15664	234166	0	True				
ANR	234934	EqualityExpression	aop . ptr != UT64_MAX		234166	0		!=			
ANR	234935	MemberAccess	aop . ptr		234166	0					
ANR	234936	Identifier	aop		234166	0					
ANR	234937	Identifier	ptr		234166	1					
ANR	234938	Identifier	UT64_MAX		234166	1					
ANR	234939	CompoundStatement		97:5:2955:3008	234166	1					
ANR	234940	IdentifierDeclStatement	"RFlagItem * flag = r_flag_get_i ( core -> flags , aop . ptr ) ;"	548:5:15674:15727	234166	0	True				
ANR	234941	IdentifierDecl	"* flag = r_flag_get_i ( core -> flags , aop . ptr )"		234166	0					
ANR	234942	IdentifierDeclType	RFlagItem *		234166	0					
ANR	234943	Identifier	flag		234166	1					
ANR	234944	AssignmentExpression	"* flag = r_flag_get_i ( core -> flags , aop . ptr )"		234166	2		=			
ANR	234945	Identifier	flag		234166	0					
ANR	234946	CallExpression	"r_flag_get_i ( core -> flags , aop . ptr )"		234166	1					
ANR	234947	Callee	r_flag_get_i		234166	0					
ANR	234948	Identifier	r_flag_get_i		234166	0					
ANR	234949	ArgumentList	core -> flags		234166	1					
ANR	234950	Argument	core -> flags		234166	0					
ANR	234951	PtrMemberAccess	core -> flags		234166	0					
ANR	234952	Identifier	core		234166	0					
ANR	234953	Identifier	flags		234166	1					
ANR	234954	Argument	aop . ptr		234166	1					
ANR	234955	MemberAccess	aop . ptr		234166	0					
ANR	234956	Identifier	aop		234166	0					
ANR	234957	Identifier	ptr		234166	1					
ANR	234958	IfStatement	"if ( flag && r_str_startswith ( flag -> realname , ""imp."" ) )"		234166	1					
ANR	234959	Condition	"flag && r_str_startswith ( flag -> realname , ""imp."" )"	549:9:15738:15786	234166	0	True				
ANR	234960	AndExpression	"flag && r_str_startswith ( flag -> realname , ""imp."" )"		234166	0		&&			
ANR	234961	Identifier	flag		234166	0					
ANR	234962	CallExpression	"r_str_startswith ( flag -> realname , ""imp."" )"		234166	1					
ANR	234963	Callee	r_str_startswith		234166	0					
ANR	234964	Identifier	r_str_startswith		234166	0					
ANR	234965	ArgumentList	flag -> realname		234166	1					
ANR	234966	Argument	flag -> realname		234166	0					
ANR	234967	PtrMemberAccess	flag -> realname		234166	0					
ANR	234968	Identifier	flag		234166	0					
ANR	234969	Identifier	realname		234166	1					
ANR	234970	Argument	"""imp."""		234166	1					
ANR	234971	PrimaryExpression	"""imp."""		234166	0					
ANR	234972	CompoundStatement		98:60:3070:3070	234166	1					
ANR	234973	ExpressionStatement	full_name = flag -> realname	550:6:15797:15823	234166	0	True				
ANR	234974	AssignmentExpression	full_name = flag -> realname		234166	0		=			
ANR	234975	Identifier	full_name		234166	0					
ANR	234976	PtrMemberAccess	flag -> realname		234166	1					
ANR	234977	Identifier	flag		234166	0					
ANR	234978	Identifier	realname		234166	1					
ANR	234979	ExpressionStatement	callee_addr = aop . ptr	551:6:15831:15852	234166	1	True				
ANR	234980	AssignmentExpression	callee_addr = aop . ptr		234166	0		=			
ANR	234981	Identifier	callee_addr		234166	0					
ANR	234982	MemberAccess	aop . ptr		234166	1					
ANR	234983	Identifier	aop		234166	0					
ANR	234984	Identifier	ptr		234166	1					
ANR	234985	IfStatement	if ( full_name )		234166	3					
ANR	234986	Condition	full_name	554:8:15875:15883	234166	0	True				
ANR	234987	Identifier	full_name		234166	0					
ANR	234988	CompoundStatement		113:5:3420:3468	234166	1					
ANR	234989	IfStatement	"if ( r_type_func_exist ( TDB , full_name ) )"		234166	0					
ANR	234990	Condition	"r_type_func_exist ( TDB , full_name )"	555:9:15897:15930	234166	0	True				
ANR	234991	CallExpression	"r_type_func_exist ( TDB , full_name )"		234166	0					
ANR	234992	Callee	r_type_func_exist		234166	0					
ANR	234993	Identifier	r_type_func_exist		234166	0					
ANR	234994	ArgumentList	TDB		234166	1					
ANR	234995	Argument	TDB		234166	0					
ANR	234996	Identifier	TDB		234166	0					
ANR	234997	Argument	full_name		234166	1					
ANR	234998	Identifier	full_name		234166	0					
ANR	234999	CompoundStatement		104:45:3214:3214	234166	1					
ANR	235000	ExpressionStatement	fcn_name = strdup ( full_name )	556:6:15941:15970	234166	0	True				
ANR	235001	AssignmentExpression	fcn_name = strdup ( full_name )		234166	0		=			
ANR	235002	Identifier	fcn_name		234166	0					
ANR	235003	CallExpression	strdup ( full_name )		234166	1					
ANR	235004	Callee	strdup		234166	0					
ANR	235005	Identifier	strdup		234166	0					
ANR	235006	ArgumentList	full_name		234166	1					
ANR	235007	Argument	full_name		234166	0					
ANR	235008	Identifier	full_name		234166	0					
ANR	235009	ElseStatement	else		234166	0					
ANR	235010	CompoundStatement		106:12:3265:3265	234166	0					
ANR	235011	ExpressionStatement	"fcn_name = r_type_func_guess ( TDB , full_name )"	558:6:15992:16037	234166	0	True				
ANR	235012	AssignmentExpression	"fcn_name = r_type_func_guess ( TDB , full_name )"		234166	0		=			
ANR	235013	Identifier	fcn_name		234166	0					
ANR	235014	CallExpression	"r_type_func_guess ( TDB , full_name )"		234166	1					
ANR	235015	Callee	r_type_func_guess		234166	0					
ANR	235016	Identifier	r_type_func_guess		234166	0					
ANR	235017	ArgumentList	TDB		234166	1					
ANR	235018	Argument	TDB		234166	0					
ANR	235019	Identifier	TDB		234166	0					
ANR	235020	Argument	full_name		234166	1					
ANR	235021	Identifier	full_name		234166	0					
ANR	235022	IfStatement	if ( ! fcn_name )		234166	1					
ANR	235023	Condition	! fcn_name	560:9:16055:16063	234166	0	True				
ANR	235024	UnaryOperationExpression	! fcn_name		234166	0					
ANR	235025	UnaryOperator	!		234166	0					
ANR	235026	Identifier	fcn_name		234166	1					
ANR	235027	CompoundStatement		109:20:3347:3347	234166	1					
ANR	235028	ExpressionStatement	fcn_name = strdup ( full_name )	561:6:16074:16103	234166	0	True				
ANR	235029	AssignmentExpression	fcn_name = strdup ( full_name )		234166	0		=			
ANR	235030	Identifier	fcn_name		234166	0					
ANR	235031	CallExpression	strdup ( full_name )		234166	1					
ANR	235032	Callee	strdup		234166	0					
ANR	235033	Identifier	strdup		234166	0					
ANR	235034	ArgumentList	full_name		234166	1					
ANR	235035	Argument	full_name		234166	0					
ANR	235036	Identifier	full_name		234166	0					
ANR	235037	ExpressionStatement	userfnc = true	562:6:16111:16125	234166	1	True				
ANR	235038	AssignmentExpression	userfnc = true		234166	0		=			
ANR	235039	Identifier	userfnc		234166	0					
ANR	235040	Identifier	true		234166	1					
ANR	235041	IdentifierDeclStatement	"const char * Cc = r_anal_cc_func ( anal , fcn_name ) ;"	564:5:16139:16187	234166	2	True				
ANR	235042	IdentifierDecl	"* Cc = r_anal_cc_func ( anal , fcn_name )"		234166	0					
ANR	235043	IdentifierDeclType	const char *		234166	0					
ANR	235044	Identifier	Cc		234166	1					
ANR	235045	AssignmentExpression	"* Cc = r_anal_cc_func ( anal , fcn_name )"		234166	2		=			
ANR	235046	Identifier	Cc		234166	0					
ANR	235047	CallExpression	"r_anal_cc_func ( anal , fcn_name )"		234166	1					
ANR	235048	Callee	r_anal_cc_func		234166	0					
ANR	235049	Identifier	r_anal_cc_func		234166	0					
ANR	235050	ArgumentList	anal		234166	1					
ANR	235051	Argument	anal		234166	0					
ANR	235052	Identifier	anal		234166	0					
ANR	235053	Argument	fcn_name		234166	1					
ANR	235054	Identifier	fcn_name		234166	0					
ANR	235055	IfStatement	"if ( Cc && r_anal_cc_exist ( anal , Cc ) )"		234166	3					
ANR	235056	Condition	"Cc && r_anal_cc_exist ( anal , Cc )"	565:9:16198:16229	234166	0	True				
ANR	235057	AndExpression	"Cc && r_anal_cc_exist ( anal , Cc )"		234166	0		&&			
ANR	235058	Identifier	Cc		234166	0					
ANR	235059	CallExpression	"r_anal_cc_exist ( anal , Cc )"		234166	1					
ANR	235060	Callee	r_anal_cc_exist		234166	0					
ANR	235061	Identifier	r_anal_cc_exist		234166	0					
ANR	235062	ArgumentList	anal		234166	1					
ANR	235063	Argument	anal		234166	0					
ANR	235064	Identifier	anal		234166	0					
ANR	235065	Argument	Cc		234166	1					
ANR	235066	Identifier	Cc		234166	0					
ANR	235067	CompoundStatement		125:6:3832:3873	234166	1					
ANR	235068	IdentifierDeclStatement	char * cc = strdup ( Cc ) ;	566:6:16240:16262	234166	0	True				
ANR	235069	IdentifierDecl	* cc = strdup ( Cc )		234166	0					
ANR	235070	IdentifierDeclType	char *		234166	0					
ANR	235071	Identifier	cc		234166	1					
ANR	235072	AssignmentExpression	* cc = strdup ( Cc )		234166	2		=			
ANR	235073	Identifier	cc		234166	0					
ANR	235074	CallExpression	strdup ( Cc )		234166	1					
ANR	235075	Callee	strdup		234166	0					
ANR	235076	Identifier	strdup		234166	0					
ANR	235077	ArgumentList	Cc		234166	1					
ANR	235078	Argument	Cc		234166	0					
ANR	235079	Identifier	Cc		234166	0					
ANR	235080	ExpressionStatement	"type_match ( core , addr , fcn_name , bb -> addr , cc , prev_idx , userfnc , callee_addr )"	567:6:16270:16357	234166	1	True				
ANR	235081	CallExpression	"type_match ( core , addr , fcn_name , bb -> addr , cc , prev_idx , userfnc , callee_addr )"		234166	0					
ANR	235082	Callee	type_match		234166	0					
ANR	235083	Identifier	type_match		234166	0					
ANR	235084	ArgumentList	core		234166	1					
ANR	235085	Argument	core		234166	0					
ANR	235086	Identifier	core		234166	0					
ANR	235087	Argument	addr		234166	1					
ANR	235088	Identifier	addr		234166	0					
ANR	235089	Argument	fcn_name		234166	2					
ANR	235090	Identifier	fcn_name		234166	0					
ANR	235091	Argument	bb -> addr		234166	3					
ANR	235092	PtrMemberAccess	bb -> addr		234166	0					
ANR	235093	Identifier	bb		234166	0					
ANR	235094	Identifier	addr		234166	1					
ANR	235095	Argument	cc		234166	4					
ANR	235096	Identifier	cc		234166	0					
ANR	235097	Argument	prev_idx		234166	5					
ANR	235098	Identifier	prev_idx		234166	0					
ANR	235099	Argument	userfnc		234166	6					
ANR	235100	Identifier	userfnc		234166	0					
ANR	235101	Argument	callee_addr		234166	7					
ANR	235102	Identifier	callee_addr		234166	0					
ANR	235103	ExpressionStatement	prev_idx = cur_idx	569:6:16365:16383	234166	2	True				
ANR	235104	AssignmentExpression	prev_idx = cur_idx		234166	0		=			
ANR	235105	Identifier	prev_idx		234166	0					
ANR	235106	Identifier	cur_idx		234166	1					
ANR	235107	ExpressionStatement	R_FREE ( ret_type )	570:6:16391:16408	234166	3	True				
ANR	235108	CallExpression	R_FREE ( ret_type )		234166	0					
ANR	235109	Callee	R_FREE		234166	0					
ANR	235110	Identifier	R_FREE		234166	0					
ANR	235111	ArgumentList	ret_type		234166	1					
ANR	235112	Argument	ret_type		234166	0					
ANR	235113	Identifier	ret_type		234166	0					
ANR	235114	IdentifierDeclStatement	"const char * rt = r_type_func_ret ( TDB , fcn_name ) ;"	571:6:16416:16464	234166	4	True				
ANR	235115	IdentifierDecl	"* rt = r_type_func_ret ( TDB , fcn_name )"		234166	0					
ANR	235116	IdentifierDeclType	const char *		234166	0					
ANR	235117	Identifier	rt		234166	1					
ANR	235118	AssignmentExpression	"* rt = r_type_func_ret ( TDB , fcn_name )"		234166	2		=			
ANR	235119	Identifier	rt		234166	0					
ANR	235120	CallExpression	"r_type_func_ret ( TDB , fcn_name )"		234166	1					
ANR	235121	Callee	r_type_func_ret		234166	0					
ANR	235122	Identifier	r_type_func_ret		234166	0					
ANR	235123	ArgumentList	TDB		234166	1					
ANR	235124	Argument	TDB		234166	0					
ANR	235125	Identifier	TDB		234166	0					
ANR	235126	Argument	fcn_name		234166	1					
ANR	235127	Identifier	fcn_name		234166	0					
ANR	235128	IfStatement	if ( rt )		234166	5					
ANR	235129	Condition	rt	572:10:16476:16477	234166	0	True				
ANR	235130	Identifier	rt		234166	0					
ANR	235131	CompoundStatement		121:14:3761:3761	234166	1					
ANR	235132	ExpressionStatement	ret_type = strdup ( rt )	573:7:16489:16511	234166	0	True				
ANR	235133	AssignmentExpression	ret_type = strdup ( rt )		234166	0		=			
ANR	235134	Identifier	ret_type		234166	0					
ANR	235135	CallExpression	strdup ( rt )		234166	1					
ANR	235136	Callee	strdup		234166	0					
ANR	235137	Identifier	strdup		234166	0					
ANR	235138	ArgumentList	rt		234166	1					
ANR	235139	Argument	rt		234166	0					
ANR	235140	Identifier	rt		234166	0					
ANR	235141	ExpressionStatement	R_FREE ( ret_reg )	575:6:16527:16543	234166	6	True				
ANR	235142	CallExpression	R_FREE ( ret_reg )		234166	0					
ANR	235143	Callee	R_FREE		234166	0					
ANR	235144	Identifier	R_FREE		234166	0					
ANR	235145	ArgumentList	ret_reg		234166	1					
ANR	235146	Argument	ret_reg		234166	0					
ANR	235147	Identifier	ret_reg		234166	0					
ANR	235148	IdentifierDeclStatement	"const char * rr = r_anal_cc_ret ( anal , cc ) ;"	576:6:16551:16592	234166	7	True				
ANR	235149	IdentifierDecl	"* rr = r_anal_cc_ret ( anal , cc )"		234166	0					
ANR	235150	IdentifierDeclType	const char *		234166	0					
ANR	235151	Identifier	rr		234166	1					
ANR	235152	AssignmentExpression	"* rr = r_anal_cc_ret ( anal , cc )"		234166	2		=			
ANR	235153	Identifier	rr		234166	0					
ANR	235154	CallExpression	"r_anal_cc_ret ( anal , cc )"		234166	1					
ANR	235155	Callee	r_anal_cc_ret		234166	0					
ANR	235156	Identifier	r_anal_cc_ret		234166	0					
ANR	235157	ArgumentList	anal		234166	1					
ANR	235158	Argument	anal		234166	0					
ANR	235159	Identifier	anal		234166	0					
ANR	235160	Argument	cc		234166	1					
ANR	235161	Identifier	cc		234166	0					
ANR	235162	IfStatement	if ( rr )		234166	8					
ANR	235163	Condition	rr	577:10:16604:16605	234166	0	True				
ANR	235164	Identifier	rr		234166	0					
ANR	235165	CompoundStatement		126:14:3889:3889	234166	1					
ANR	235166	ExpressionStatement	ret_reg = strdup ( rr )	578:7:16617:16638	234166	0	True				
ANR	235167	AssignmentExpression	ret_reg = strdup ( rr )		234166	0		=			
ANR	235168	Identifier	ret_reg		234166	0					
ANR	235169	CallExpression	strdup ( rr )		234166	1					
ANR	235170	Callee	strdup		234166	0					
ANR	235171	Identifier	strdup		234166	0					
ANR	235172	ArgumentList	rr		234166	1					
ANR	235173	Argument	rr		234166	0					
ANR	235174	Identifier	rr		234166	0					
ANR	235175	ExpressionStatement	resolved = false	580:6:16654:16670	234166	9	True				
ANR	235176	AssignmentExpression	resolved = false		234166	0		=			
ANR	235177	Identifier	resolved		234166	0					
ANR	235178	Identifier	false		234166	1					
ANR	235179	ExpressionStatement	free ( cc )	581:6:16678:16687	234166	10	True				
ANR	235180	CallExpression	free ( cc )		234166	0					
ANR	235181	Callee	free		234166	0					
ANR	235182	Identifier	free		234166	0					
ANR	235183	ArgumentList	cc		234166	1					
ANR	235184	Argument	cc		234166	0					
ANR	235185	Identifier	cc		234166	0					
ANR	235186	IfStatement	"if ( ! strcmp ( fcn_name , ""__stack_chk_fail"" ) )"		234166	4					
ANR	235187	Condition	"! strcmp ( fcn_name , ""__stack_chk_fail"" )"	583:9:16705:16742	234166	0	True				
ANR	235188	UnaryOperationExpression	"! strcmp ( fcn_name , ""__stack_chk_fail"" )"		234166	0					
ANR	235189	UnaryOperator	!		234166	0					
ANR	235190	CallExpression	"strcmp ( fcn_name , ""__stack_chk_fail"" )"		234166	1					
ANR	235191	Callee	strcmp		234166	0					
ANR	235192	Identifier	strcmp		234166	0					
ANR	235193	ArgumentList	fcn_name		234166	1					
ANR	235194	Argument	fcn_name		234166	0					
ANR	235195	Identifier	fcn_name		234166	0					
ANR	235196	Argument	"""__stack_chk_fail"""		234166	1					
ANR	235197	PrimaryExpression	"""__stack_chk_fail"""		234166	0					
ANR	235198	CompoundStatement		135:6:4147:4236	234166	1					
ANR	235199	IdentifierDeclStatement	"const char * query = sdb_fmt ( ""%d.addr"" , cur_idx - 1 ) ;"	584:6:16753:16805	234166	0	True				
ANR	235200	IdentifierDecl	"* query = sdb_fmt ( ""%d.addr"" , cur_idx - 1 )"		234166	0					
ANR	235201	IdentifierDeclType	const char *		234166	0					
ANR	235202	Identifier	query		234166	1					
ANR	235203	AssignmentExpression	"* query = sdb_fmt ( ""%d.addr"" , cur_idx - 1 )"		234166	2		=			
ANR	235204	Identifier	query		234166	0					
ANR	235205	CallExpression	"sdb_fmt ( ""%d.addr"" , cur_idx - 1 )"		234166	1					
ANR	235206	Callee	sdb_fmt		234166	0					
ANR	235207	Identifier	sdb_fmt		234166	0					
ANR	235208	ArgumentList	"""%d.addr"""		234166	1					
ANR	235209	Argument	"""%d.addr"""		234166	0					
ANR	235210	PrimaryExpression	"""%d.addr"""		234166	0					
ANR	235211	Argument	cur_idx - 1		234166	1					
ANR	235212	AdditiveExpression	cur_idx - 1		234166	0		-			
ANR	235213	Identifier	cur_idx		234166	0					
ANR	235214	PrimaryExpression	1		234166	1					
ANR	235215	IdentifierDeclStatement	"ut64 mov_addr = sdb_num_get ( trace , query , 0 ) ;"	585:6:16813:16858	234166	1	True				
ANR	235216	IdentifierDecl	"mov_addr = sdb_num_get ( trace , query , 0 )"		234166	0					
ANR	235217	IdentifierDeclType	ut64		234166	0					
ANR	235218	Identifier	mov_addr		234166	1					
ANR	235219	AssignmentExpression	"mov_addr = sdb_num_get ( trace , query , 0 )"		234166	2		=			
ANR	235220	Identifier	mov_addr		234166	0					
ANR	235221	CallExpression	"sdb_num_get ( trace , query , 0 )"		234166	1					
ANR	235222	Callee	sdb_num_get		234166	0					
ANR	235223	Identifier	sdb_num_get		234166	0					
ANR	235224	ArgumentList	trace		234166	1					
ANR	235225	Argument	trace		234166	0					
ANR	235226	Identifier	trace		234166	0					
ANR	235227	Argument	query		234166	1					
ANR	235228	Identifier	query		234166	0					
ANR	235229	Argument	0		234166	2					
ANR	235230	PrimaryExpression	0		234166	0					
ANR	235231	IdentifierDeclStatement	"RAnalOp * mop = r_core_anal_op ( core , mov_addr , R_ANAL_OP_MASK_VAL | R_ANAL_OP_MASK_BASIC ) ;"	586:6:16866:16955	234166	2	True				
ANR	235232	IdentifierDecl	"* mop = r_core_anal_op ( core , mov_addr , R_ANAL_OP_MASK_VAL | R_ANAL_OP_MASK_BASIC )"		234166	0					
ANR	235233	IdentifierDeclType	RAnalOp *		234166	0					
ANR	235234	Identifier	mop		234166	1					
ANR	235235	AssignmentExpression	"* mop = r_core_anal_op ( core , mov_addr , R_ANAL_OP_MASK_VAL | R_ANAL_OP_MASK_BASIC )"		234166	2		=			
ANR	235236	Identifier	mop		234166	0					
ANR	235237	CallExpression	"r_core_anal_op ( core , mov_addr , R_ANAL_OP_MASK_VAL | R_ANAL_OP_MASK_BASIC )"		234166	1					
ANR	235238	Callee	r_core_anal_op		234166	0					
ANR	235239	Identifier	r_core_anal_op		234166	0					
ANR	235240	ArgumentList	core		234166	1					
ANR	235241	Argument	core		234166	0					
ANR	235242	Identifier	core		234166	0					
ANR	235243	Argument	mov_addr		234166	1					
ANR	235244	Identifier	mov_addr		234166	0					
ANR	235245	Argument	R_ANAL_OP_MASK_VAL | R_ANAL_OP_MASK_BASIC		234166	2					
ANR	235246	InclusiveOrExpression	R_ANAL_OP_MASK_VAL | R_ANAL_OP_MASK_BASIC		234166	0		|			
ANR	235247	Identifier	R_ANAL_OP_MASK_VAL		234166	0					
ANR	235248	Identifier	R_ANAL_OP_MASK_BASIC		234166	1					
ANR	235249	IfStatement	if ( mop && mop -> var )		234166	3					
ANR	235250	Condition	mop && mop -> var	587:10:16967:16981	234166	0	True				
ANR	235251	AndExpression	mop && mop -> var		234166	0		&&			
ANR	235252	Identifier	mop		234166	0					
ANR	235253	PtrMemberAccess	mop -> var		234166	1					
ANR	235254	Identifier	mop		234166	0					
ANR	235255	Identifier	var		234166	1					
ANR	235256	CompoundStatement		137:7:4274:4317	234166	1					
ANR	235257	IdentifierDeclStatement	ut32 type = mop -> type & R_ANAL_OP_TYPE_MASK ;	588:7:16993:17036	234166	0	True				
ANR	235258	IdentifierDecl	type = mop -> type & R_ANAL_OP_TYPE_MASK		234166	0					
ANR	235259	IdentifierDeclType	ut32		234166	0					
ANR	235260	Identifier	type		234166	1					
ANR	235261	AssignmentExpression	type = mop -> type & R_ANAL_OP_TYPE_MASK		234166	2		=			
ANR	235262	Identifier	type		234166	0					
ANR	235263	BitAndExpression	mop -> type & R_ANAL_OP_TYPE_MASK		234166	1		&			
ANR	235264	PtrMemberAccess	mop -> type		234166	0					
ANR	235265	Identifier	mop		234166	0					
ANR	235266	Identifier	type		234166	1					
ANR	235267	Identifier	R_ANAL_OP_TYPE_MASK		234166	1					
ANR	235268	IfStatement	if ( type == R_ANAL_OP_TYPE_MOV )		234166	1					
ANR	235269	Condition	type == R_ANAL_OP_TYPE_MOV	589:11:17049:17074	234166	0	True				
ANR	235270	EqualityExpression	type == R_ANAL_OP_TYPE_MOV		234166	0		==			
ANR	235271	Identifier	type		234166	0					
ANR	235272	Identifier	R_ANAL_OP_TYPE_MOV		234166	1					
ANR	235273	CompoundStatement		138:39:4358:4358	234166	1					
ANR	235274	ExpressionStatement	"var_rename ( anal , mop -> var , ""canary"" , addr )"	590:8:17087:17130	234166	0	True				
ANR	235275	CallExpression	"var_rename ( anal , mop -> var , ""canary"" , addr )"		234166	0					
ANR	235276	Callee	var_rename		234166	0					
ANR	235277	Identifier	var_rename		234166	0					
ANR	235278	ArgumentList	anal		234166	1					
ANR	235279	Argument	anal		234166	0					
ANR	235280	Identifier	anal		234166	0					
ANR	235281	Argument	mop -> var		234166	1					
ANR	235282	PtrMemberAccess	mop -> var		234166	0					
ANR	235283	Identifier	mop		234166	0					
ANR	235284	Identifier	var		234166	1					
ANR	235285	Argument	"""canary"""		234166	2					
ANR	235286	PrimaryExpression	"""canary"""		234166	0					
ANR	235287	Argument	addr		234166	3					
ANR	235288	Identifier	addr		234166	0					
ANR	235289	ExpressionStatement	r_anal_op_free ( mop )	593:6:17155:17175	234166	4	True				
ANR	235290	CallExpression	r_anal_op_free ( mop )		234166	0					
ANR	235291	Callee	r_anal_op_free		234166	0					
ANR	235292	Identifier	r_anal_op_free		234166	0					
ANR	235293	ArgumentList	mop		234166	1					
ANR	235294	Argument	mop		234166	0					
ANR	235295	Identifier	mop		234166	0					
ANR	235296	ExpressionStatement	free ( fcn_name )	595:5:17189:17204	234166	5	True				
ANR	235297	CallExpression	free ( fcn_name )		234166	0					
ANR	235298	Callee	free		234166	0					
ANR	235299	Identifier	free		234166	0					
ANR	235300	ArgumentList	fcn_name		234166	1					
ANR	235301	Argument	fcn_name		234166	0					
ANR	235302	Identifier	fcn_name		234166	0					
ANR	235303	ElseStatement	else		234166	0					
ANR	235304	IfStatement	if ( ! resolved && ret_type && ret_reg )		234166	0					
ANR	235305	Condition	! resolved && ret_type && ret_reg	597:14:17226:17257	234166	0	True				
ANR	235306	AndExpression	! resolved && ret_type && ret_reg		234166	0		&&			
ANR	235307	UnaryOperationExpression	! resolved		234166	0					
ANR	235308	UnaryOperator	!		234166	0					
ANR	235309	Identifier	resolved		234166	1					
ANR	235310	AndExpression	ret_type && ret_reg		234166	1		&&			
ANR	235311	Identifier	ret_type		234166	0					
ANR	235312	Identifier	ret_reg		234166	1					
ANR	235313	CompoundStatement		150:4:4684:4726	234166	1					
ANR	235314	IdentifierDeclStatement	char src [ REG_SZ ] = { 0 } ;	599:4:17316:17338	234166	0	True				
ANR	235315	IdentifierDecl	src [ REG_SZ ] = { 0 }		234166	0					
ANR	235316	IdentifierDeclType	char [ REG_SZ ]		234166	0					
ANR	235317	Identifier	src		234166	1					
ANR	235318	Identifier	REG_SZ		234166	2					
ANR	235319	AssignmentExpression	src [ REG_SZ ] = { 0 }		234166	3		=			
ANR	235320	Identifier	REG_SZ		234166	0					
ANR	235321	InitializerList	0		234166	1					
ANR	235322	PrimaryExpression	0		234166	0					
ANR	235323	IdentifierDeclStatement	"const char * query = sdb_fmt ( ""%d.reg.write"" , cur_idx ) ;"	600:4:17344:17397	234166	1	True				
ANR	235324	IdentifierDecl	"* query = sdb_fmt ( ""%d.reg.write"" , cur_idx )"		234166	0					
ANR	235325	IdentifierDeclType	const char *		234166	0					
ANR	235326	Identifier	query		234166	1					
ANR	235327	AssignmentExpression	"* query = sdb_fmt ( ""%d.reg.write"" , cur_idx )"		234166	2		=			
ANR	235328	Identifier	query		234166	0					
ANR	235329	CallExpression	"sdb_fmt ( ""%d.reg.write"" , cur_idx )"		234166	1					
ANR	235330	Callee	sdb_fmt		234166	0					
ANR	235331	Identifier	sdb_fmt		234166	0					
ANR	235332	ArgumentList	"""%d.reg.write"""		234166	1					
ANR	235333	Argument	"""%d.reg.write"""		234166	0					
ANR	235334	PrimaryExpression	"""%d.reg.write"""		234166	0					
ANR	235335	Argument	cur_idx		234166	1					
ANR	235336	Identifier	cur_idx		234166	0					
ANR	235337	IdentifierDeclStatement	"char * cur_dest = sdb_get ( trace , query , 0 ) ;"	601:4:17403:17445	234166	2	True				
ANR	235338	IdentifierDecl	"* cur_dest = sdb_get ( trace , query , 0 )"		234166	0					
ANR	235339	IdentifierDeclType	char *		234166	0					
ANR	235340	Identifier	cur_dest		234166	1					
ANR	235341	AssignmentExpression	"* cur_dest = sdb_get ( trace , query , 0 )"		234166	2		=			
ANR	235342	Identifier	cur_dest		234166	0					
ANR	235343	CallExpression	"sdb_get ( trace , query , 0 )"		234166	1					
ANR	235344	Callee	sdb_get		234166	0					
ANR	235345	Identifier	sdb_get		234166	0					
ANR	235346	ArgumentList	trace		234166	1					
ANR	235347	Argument	trace		234166	0					
ANR	235348	Identifier	trace		234166	0					
ANR	235349	Argument	query		234166	1					
ANR	235350	Identifier	query		234166	0					
ANR	235351	Argument	0		234166	2					
ANR	235352	PrimaryExpression	0		234166	0					
ANR	235353	ExpressionStatement	"get_src_regname ( core , aop . addr , src , sizeof ( src ) )"	602:4:17451:17502	234166	3	True				
ANR	235354	CallExpression	"get_src_regname ( core , aop . addr , src , sizeof ( src ) )"		234166	0					
ANR	235355	Callee	get_src_regname		234166	0					
ANR	235356	Identifier	get_src_regname		234166	0					
ANR	235357	ArgumentList	core		234166	1					
ANR	235358	Argument	core		234166	0					
ANR	235359	Identifier	core		234166	0					
ANR	235360	Argument	aop . addr		234166	1					
ANR	235361	MemberAccess	aop . addr		234166	0					
ANR	235362	Identifier	aop		234166	0					
ANR	235363	Identifier	addr		234166	1					
ANR	235364	Argument	src		234166	2					
ANR	235365	Identifier	src		234166	0					
ANR	235366	Argument	sizeof ( src )		234166	3					
ANR	235367	SizeofExpression	sizeof ( src )		234166	0					
ANR	235368	Sizeof	sizeof		234166	0					
ANR	235369	SizeofOperand	src		234166	1					
ANR	235370	IfStatement	"if ( ret_reg && * src && strstr ( ret_reg , src ) )"		234166	4					
ANR	235371	Condition	"ret_reg && * src && strstr ( ret_reg , src )"	603:8:17512:17551	234166	0	True				
ANR	235372	AndExpression	"ret_reg && * src && strstr ( ret_reg , src )"		234166	0		&&			
ANR	235373	Identifier	ret_reg		234166	0					
ANR	235374	AndExpression	"* src && strstr ( ret_reg , src )"		234166	1		&&			
ANR	235375	UnaryOperationExpression	* src		234166	0					
ANR	235376	UnaryOperator	*		234166	0					
ANR	235377	Identifier	src		234166	1					
ANR	235378	CallExpression	"strstr ( ret_reg , src )"		234166	1					
ANR	235379	Callee	strstr		234166	0					
ANR	235380	Identifier	strstr		234166	0					
ANR	235381	ArgumentList	ret_reg		234166	1					
ANR	235382	Argument	ret_reg		234166	0					
ANR	235383	Identifier	ret_reg		234166	0					
ANR	235384	Argument	src		234166	1					
ANR	235385	Identifier	src		234166	0					
ANR	235386	CompoundStatement		152:50:4835:4835	234166	1					
ANR	235387	IfStatement	if ( var && aop . direction == R_ANAL_OP_DIR_WRITE )		234166	0					
ANR	235388	Condition	var && aop . direction == R_ANAL_OP_DIR_WRITE	604:9:17565:17607	234166	0	True				
ANR	235389	AndExpression	var && aop . direction == R_ANAL_OP_DIR_WRITE		234166	0		&&			
ANR	235390	Identifier	var		234166	0					
ANR	235391	EqualityExpression	aop . direction == R_ANAL_OP_DIR_WRITE		234166	1		==			
ANR	235392	MemberAccess	aop . direction		234166	0					
ANR	235393	Identifier	aop		234166	0					
ANR	235394	Identifier	direction		234166	1					
ANR	235395	Identifier	R_ANAL_OP_DIR_WRITE		234166	1					
ANR	235396	CompoundStatement		153:54:4891:4891	234166	1					
ANR	235397	ExpressionStatement	"var_retype ( anal , var , NULL , ret_type , addr , false , false )"	605:6:17618:17676	234166	0	True				
ANR	235398	CallExpression	"var_retype ( anal , var , NULL , ret_type , addr , false , false )"		234166	0					
ANR	235399	Callee	var_retype		234166	0					
ANR	235400	Identifier	var_retype		234166	0					
ANR	235401	ArgumentList	anal		234166	1					
ANR	235402	Argument	anal		234166	0					
ANR	235403	Identifier	anal		234166	0					
ANR	235404	Argument	var		234166	1					
ANR	235405	Identifier	var		234166	0					
ANR	235406	Argument	NULL		234166	2					
ANR	235407	Identifier	NULL		234166	0					
ANR	235408	Argument	ret_type		234166	3					
ANR	235409	Identifier	ret_type		234166	0					
ANR	235410	Argument	addr		234166	4					
ANR	235411	Identifier	addr		234166	0					
ANR	235412	Argument	false		234166	5					
ANR	235413	Identifier	false		234166	0					
ANR	235414	Argument	false		234166	6					
ANR	235415	Identifier	false		234166	0					
ANR	235416	ExpressionStatement	resolved = true	606:6:17684:17699	234166	1	True				
ANR	235417	AssignmentExpression	resolved = true		234166	0		=			
ANR	235418	Identifier	resolved		234166	0					
ANR	235419	Identifier	true		234166	1					
ANR	235420	ElseStatement	else		234166	0					
ANR	235421	IfStatement	if ( type == R_ANAL_OP_TYPE_MOV )		234166	0					
ANR	235422	Condition	type == R_ANAL_OP_TYPE_MOV	607:16:17717:17742	234166	0	True				
ANR	235423	EqualityExpression	type == R_ANAL_OP_TYPE_MOV		234166	0		==			
ANR	235424	Identifier	type		234166	0					
ANR	235425	Identifier	R_ANAL_OP_TYPE_MOV		234166	1					
ANR	235426	CompoundStatement		156:44:5026:5026	234166	1					
ANR	235427	ExpressionStatement	R_FREE ( ret_reg )	608:6:17753:17769	234166	0	True				
ANR	235428	CallExpression	R_FREE ( ret_reg )		234166	0					
ANR	235429	Callee	R_FREE		234166	0					
ANR	235430	Identifier	R_FREE		234166	0					
ANR	235431	ArgumentList	ret_reg		234166	1					
ANR	235432	Argument	ret_reg		234166	0					
ANR	235433	Identifier	ret_reg		234166	0					
ANR	235434	IfStatement	if ( cur_dest )		234166	1					
ANR	235435	Condition	cur_dest	609:10:17781:17788	234166	0	True				
ANR	235436	Identifier	cur_dest		234166	0					
ANR	235437	CompoundStatement		158:20:5072:5072	234166	1					
ANR	235438	ExpressionStatement	ret_reg = strdup ( cur_dest )	610:7:17800:17827	234166	0	True				
ANR	235439	AssignmentExpression	ret_reg = strdup ( cur_dest )		234166	0		=			
ANR	235440	Identifier	ret_reg		234166	0					
ANR	235441	CallExpression	strdup ( cur_dest )		234166	1					
ANR	235442	Callee	strdup		234166	0					
ANR	235443	Identifier	strdup		234166	0					
ANR	235444	ArgumentList	cur_dest		234166	1					
ANR	235445	Argument	cur_dest		234166	0					
ANR	235446	Identifier	cur_dest		234166	0					
ANR	235447	ElseStatement	else		234166	0					
ANR	235448	IfStatement	if ( cur_dest )		234166	0					
ANR	235449	Condition	cur_dest	613:15:17859:17866	234166	0	True				
ANR	235450	Identifier	cur_dest		234166	0					
ANR	235451	CompoundStatement		164:5:5193:5222	234166	1					
ANR	235452	IdentifierDeclStatement	char * foo = strdup ( cur_dest ) ;	614:5:17876:17905	234166	0	True				
ANR	235453	IdentifierDecl	* foo = strdup ( cur_dest )		234166	0					
ANR	235454	IdentifierDeclType	char *		234166	0					
ANR	235455	Identifier	foo		234166	1					
ANR	235456	AssignmentExpression	* foo = strdup ( cur_dest )		234166	2		=			
ANR	235457	Identifier	foo		234166	0					
ANR	235458	CallExpression	strdup ( cur_dest )		234166	1					
ANR	235459	Callee	strdup		234166	0					
ANR	235460	Identifier	strdup		234166	0					
ANR	235461	ArgumentList	cur_dest		234166	1					
ANR	235462	Argument	cur_dest		234166	0					
ANR	235463	Identifier	cur_dest		234166	0					
ANR	235464	IdentifierDeclStatement	"char * tmp = strchr ( foo , ',' ) ;"	615:5:17912:17941	234166	1	True				
ANR	235465	IdentifierDecl	"* tmp = strchr ( foo , ',' )"		234166	0					
ANR	235466	IdentifierDeclType	char *		234166	0					
ANR	235467	Identifier	tmp		234166	1					
ANR	235468	AssignmentExpression	"* tmp = strchr ( foo , ',' )"		234166	2		=			
ANR	235469	Identifier	tmp		234166	0					
ANR	235470	CallExpression	"strchr ( foo , ',' )"		234166	1					
ANR	235471	Callee	strchr		234166	0					
ANR	235472	Identifier	strchr		234166	0					
ANR	235473	ArgumentList	foo		234166	1					
ANR	235474	Argument	foo		234166	0					
ANR	235475	Identifier	foo		234166	0					
ANR	235476	Argument	"','"		234166	1					
ANR	235477	PrimaryExpression	"','"		234166	0					
ANR	235478	IfStatement	if ( tmp )		234166	2					
ANR	235479	Condition	tmp	616:9:17952:17954	234166	0	True				
ANR	235480	Identifier	tmp		234166	0					
ANR	235481	CompoundStatement		165:14:5238:5238	234166	1					
ANR	235482	ExpressionStatement	* tmp ++ = '\\0'	617:6:17965:17978	234166	0	True				
ANR	235483	AssignmentExpression	* tmp ++ = '\\0'		234166	0		=			
ANR	235484	UnaryOperationExpression	* tmp ++		234166	0					
ANR	235485	UnaryOperator	*		234166	0					
ANR	235486	PostIncDecOperationExpression	tmp ++		234166	1					
ANR	235487	Identifier	tmp		234166	0					
ANR	235488	IncDec	++		234166	1					
ANR	235489	PrimaryExpression	'\\0'		234166	1					
ANR	235490	IfStatement	"if ( ret_reg && ( strstr ( ret_reg , foo ) || ( tmp && strstr ( ret_reg , tmp ) ) ) )"		234166	3					
ANR	235491	Condition	"ret_reg && ( strstr ( ret_reg , foo ) || ( tmp && strstr ( ret_reg , tmp ) ) )"	619:9:17996:18063	234166	0	True				
ANR	235492	AndExpression	"ret_reg && ( strstr ( ret_reg , foo ) || ( tmp && strstr ( ret_reg , tmp ) ) )"		234166	0		&&			
ANR	235493	Identifier	ret_reg		234166	0					
ANR	235494	OrExpression	"strstr ( ret_reg , foo ) || ( tmp && strstr ( ret_reg , tmp ) )"		234166	1		||			
ANR	235495	CallExpression	"strstr ( ret_reg , foo )"		234166	0					
ANR	235496	Callee	strstr		234166	0					
ANR	235497	Identifier	strstr		234166	0					
ANR	235498	ArgumentList	ret_reg		234166	1					
ANR	235499	Argument	ret_reg		234166	0					
ANR	235500	Identifier	ret_reg		234166	0					
ANR	235501	Argument	foo		234166	1					
ANR	235502	Identifier	foo		234166	0					
ANR	235503	AndExpression	"tmp && strstr ( ret_reg , tmp )"		234166	1		&&			
ANR	235504	Identifier	tmp		234166	0					
ANR	235505	CallExpression	"strstr ( ret_reg , tmp )"		234166	1					
ANR	235506	Callee	strstr		234166	0					
ANR	235507	Identifier	strstr		234166	0					
ANR	235508	ArgumentList	ret_reg		234166	1					
ANR	235509	Argument	ret_reg		234166	0					
ANR	235510	Identifier	ret_reg		234166	0					
ANR	235511	Argument	tmp		234166	1					
ANR	235512	Identifier	tmp		234166	0					
ANR	235513	CompoundStatement		168:79:5347:5347	234166	1					
ANR	235514	ExpressionStatement	resolved = true	620:6:18074:18089	234166	0	True				
ANR	235515	AssignmentExpression	resolved = true		234166	0		=			
ANR	235516	Identifier	resolved		234166	0					
ANR	235517	Identifier	true		234166	1					
ANR	235518	ElseStatement	else		234166	0					
ANR	235519	IfStatement	if ( type == R_ANAL_OP_TYPE_MOV && ( next_op && next_op -> type == R_ANAL_OP_TYPE_MOV ) )		234166	0					
ANR	235520	Condition	type == R_ANAL_OP_TYPE_MOV && ( next_op && next_op -> type == R_ANAL_OP_TYPE_MOV )	621:16:18107:18191	234166	0	True				
ANR	235521	AndExpression	type == R_ANAL_OP_TYPE_MOV && ( next_op && next_op -> type == R_ANAL_OP_TYPE_MOV )		234166	0		&&			
ANR	235522	EqualityExpression	type == R_ANAL_OP_TYPE_MOV		234166	0		==			
ANR	235523	Identifier	type		234166	0					
ANR	235524	Identifier	R_ANAL_OP_TYPE_MOV		234166	1					
ANR	235525	AndExpression	next_op && next_op -> type == R_ANAL_OP_TYPE_MOV		234166	1		&&			
ANR	235526	Identifier	next_op		234166	0					
ANR	235527	EqualityExpression	next_op -> type == R_ANAL_OP_TYPE_MOV		234166	1		==			
ANR	235528	PtrMemberAccess	next_op -> type		234166	0					
ANR	235529	Identifier	next_op		234166	0					
ANR	235530	Identifier	type		234166	1					
ANR	235531	Identifier	R_ANAL_OP_TYPE_MOV		234166	1					
ANR	235532	CompoundStatement		175:6:5623:5646	234166	1					
ANR	235533	IdentifierDeclStatement	char nsrc [ REG_SZ ] = { 0 } ;	626:6:18342:18365	234166	0	True				
ANR	235534	IdentifierDecl	nsrc [ REG_SZ ] = { 0 }		234166	0					
ANR	235535	IdentifierDeclType	char [ REG_SZ ]		234166	0					
ANR	235536	Identifier	nsrc		234166	1					
ANR	235537	Identifier	REG_SZ		234166	2					
ANR	235538	AssignmentExpression	nsrc [ REG_SZ ] = { 0 }		234166	3		=			
ANR	235539	Identifier	REG_SZ		234166	0					
ANR	235540	InitializerList	0		234166	1					
ANR	235541	PrimaryExpression	0		234166	0					
ANR	235542	ExpressionStatement	"get_src_regname ( core , next_op -> addr , nsrc , sizeof ( nsrc ) )"	627:6:18373:18431	234166	1	True				
ANR	235543	CallExpression	"get_src_regname ( core , next_op -> addr , nsrc , sizeof ( nsrc ) )"		234166	0					
ANR	235544	Callee	get_src_regname		234166	0					
ANR	235545	Identifier	get_src_regname		234166	0					
ANR	235546	ArgumentList	core		234166	1					
ANR	235547	Argument	core		234166	0					
ANR	235548	Identifier	core		234166	0					
ANR	235549	Argument	next_op -> addr		234166	1					
ANR	235550	PtrMemberAccess	next_op -> addr		234166	0					
ANR	235551	Identifier	next_op		234166	0					
ANR	235552	Identifier	addr		234166	1					
ANR	235553	Argument	nsrc		234166	2					
ANR	235554	Identifier	nsrc		234166	0					
ANR	235555	Argument	sizeof ( nsrc )		234166	3					
ANR	235556	SizeofExpression	sizeof ( nsrc )		234166	0					
ANR	235557	Sizeof	sizeof		234166	0					
ANR	235558	SizeofOperand	nsrc		234166	1					
ANR	235559	IfStatement	"if ( ret_reg && * nsrc && strstr ( ret_reg , nsrc ) && var && aop . direction == R_ANAL_OP_DIR_READ )"		234166	2					
ANR	235560	Condition	"ret_reg && * nsrc && strstr ( ret_reg , nsrc ) && var && aop . direction == R_ANAL_OP_DIR_READ"	628:10:18443:18538	234166	0	True				
ANR	235561	AndExpression	"ret_reg && * nsrc && strstr ( ret_reg , nsrc ) && var && aop . direction == R_ANAL_OP_DIR_READ"		234166	0		&&			
ANR	235562	Identifier	ret_reg		234166	0					
ANR	235563	AndExpression	"* nsrc && strstr ( ret_reg , nsrc ) && var && aop . direction == R_ANAL_OP_DIR_READ"		234166	1		&&			
ANR	235564	UnaryOperationExpression	* nsrc		234166	0					
ANR	235565	UnaryOperator	*		234166	0					
ANR	235566	Identifier	nsrc		234166	1					
ANR	235567	AndExpression	"strstr ( ret_reg , nsrc ) && var && aop . direction == R_ANAL_OP_DIR_READ"		234166	1		&&			
ANR	235568	CallExpression	"strstr ( ret_reg , nsrc )"		234166	0					
ANR	235569	Callee	strstr		234166	0					
ANR	235570	Identifier	strstr		234166	0					
ANR	235571	ArgumentList	ret_reg		234166	1					
ANR	235572	Argument	ret_reg		234166	0					
ANR	235573	Identifier	ret_reg		234166	0					
ANR	235574	Argument	nsrc		234166	1					
ANR	235575	Identifier	nsrc		234166	0					
ANR	235576	AndExpression	var && aop . direction == R_ANAL_OP_DIR_READ		234166	1		&&			
ANR	235577	Identifier	var		234166	0					
ANR	235578	EqualityExpression	aop . direction == R_ANAL_OP_DIR_READ		234166	1		==			
ANR	235579	MemberAccess	aop . direction		234166	0					
ANR	235580	Identifier	aop		234166	0					
ANR	235581	Identifier	direction		234166	1					
ANR	235582	Identifier	R_ANAL_OP_DIR_READ		234166	1					
ANR	235583	CompoundStatement		178:45:5822:5822	234166	1					
ANR	235584	ExpressionStatement	"var_retype ( anal , var , NULL , ret_type , addr , true , false )"	630:7:18550:18607	234166	0	True				
ANR	235585	CallExpression	"var_retype ( anal , var , NULL , ret_type , addr , true , false )"		234166	0					
ANR	235586	Callee	var_retype		234166	0					
ANR	235587	Identifier	var_retype		234166	0					
ANR	235588	ArgumentList	anal		234166	1					
ANR	235589	Argument	anal		234166	0					
ANR	235590	Identifier	anal		234166	0					
ANR	235591	Argument	var		234166	1					
ANR	235592	Identifier	var		234166	0					
ANR	235593	Argument	NULL		234166	2					
ANR	235594	Identifier	NULL		234166	0					
ANR	235595	Argument	ret_type		234166	3					
ANR	235596	Identifier	ret_type		234166	0					
ANR	235597	Argument	addr		234166	4					
ANR	235598	Identifier	addr		234166	0					
ANR	235599	Argument	true		234166	5					
ANR	235600	Identifier	true		234166	0					
ANR	235601	Argument	false		234166	6					
ANR	235602	Identifier	false		234166	0					
ANR	235603	ExpressionStatement	free ( foo )	633:5:18629:18639	234166	4	True				
ANR	235604	CallExpression	free ( foo )		234166	0					
ANR	235605	Callee	free		234166	0					
ANR	235606	Identifier	free		234166	0					
ANR	235607	ArgumentList	foo		234166	1					
ANR	235608	Argument	foo		234166	0					
ANR	235609	Identifier	foo		234166	0					
ANR	235610	ExpressionStatement	free ( cur_dest )	635:4:18651:18666	234166	5	True				
ANR	235611	CallExpression	free ( cur_dest )		234166	0					
ANR	235612	Callee	free		234166	0					
ANR	235613	Identifier	free		234166	0					
ANR	235614	ArgumentList	cur_dest		234166	1					
ANR	235615	Argument	cur_dest		234166	0					
ANR	235616	Identifier	cur_dest		234166	0					
ANR	235617	IfStatement	if ( var )		234166	63					
ANR	235618	Condition	var	638:7:18736:18738	234166	0	True				
ANR	235619	Identifier	var		234166	0					
ANR	235620	CompoundStatement		188:4:6028:6045	234166	1					
ANR	235621	IdentifierDeclStatement	bool sign = false ;	639:4:18747:18764	234166	0	True				
ANR	235622	IdentifierDecl	sign = false		234166	0					
ANR	235623	IdentifierDeclType	bool		234166	0					
ANR	235624	Identifier	sign		234166	1					
ANR	235625	AssignmentExpression	sign = false		234166	2		=			
ANR	235626	Identifier	false		234166	0					
ANR	235627	Identifier	false		234166	1					
ANR	235628	IfStatement	if ( ( type == R_ANAL_OP_TYPE_CMP ) && next_op )		234166	1					
ANR	235629	Condition	( type == R_ANAL_OP_TYPE_CMP ) && next_op	640:8:18774:18812	234166	0	True				
ANR	235630	AndExpression	( type == R_ANAL_OP_TYPE_CMP ) && next_op		234166	0		&&			
ANR	235631	EqualityExpression	type == R_ANAL_OP_TYPE_CMP		234166	0		==			
ANR	235632	Identifier	type		234166	0					
ANR	235633	Identifier	R_ANAL_OP_TYPE_CMP		234166	1					
ANR	235634	Identifier	next_op		234166	1					
ANR	235635	CompoundStatement		189:49:6096:6096	234166	1					
ANR	235636	IfStatement	if ( next_op -> sign )		234166	0					
ANR	235637	Condition	next_op -> sign	641:9:18826:18838	234166	0	True				
ANR	235638	PtrMemberAccess	next_op -> sign		234166	0					
ANR	235639	Identifier	next_op		234166	0					
ANR	235640	Identifier	sign		234166	1					
ANR	235641	CompoundStatement		190:24:6122:6122	234166	1					
ANR	235642	ExpressionStatement	sign = true	642:6:18849:18860	234166	0	True				
ANR	235643	AssignmentExpression	sign = true		234166	0		=			
ANR	235644	Identifier	sign		234166	0					
ANR	235645	Identifier	true		234166	1					
ANR	235646	ElseStatement	else		234166	0					
ANR	235647	CompoundStatement		192:12:6155:6155	234166	0					
ANR	235648	ExpressionStatement	"var_retype ( anal , var , NULL , ""unsigned"" , addr , false , true )"	645:6:18916:18975	234166	0	True				
ANR	235649	CallExpression	"var_retype ( anal , var , NULL , ""unsigned"" , addr , false , true )"		234166	0					
ANR	235650	Callee	var_retype		234166	0					
ANR	235651	Identifier	var_retype		234166	0					
ANR	235652	ArgumentList	anal		234166	1					
ANR	235653	Argument	anal		234166	0					
ANR	235654	Identifier	anal		234166	0					
ANR	235655	Argument	var		234166	1					
ANR	235656	Identifier	var		234166	0					
ANR	235657	Argument	NULL		234166	2					
ANR	235658	Identifier	NULL		234166	0					
ANR	235659	Argument	"""unsigned"""		234166	3					
ANR	235660	PrimaryExpression	"""unsigned"""		234166	0					
ANR	235661	Argument	addr		234166	4					
ANR	235662	Identifier	addr		234166	0					
ANR	235663	Argument	false		234166	5					
ANR	235664	Identifier	false		234166	0					
ANR	235665	Argument	true		234166	6					
ANR	235666	Identifier	true		234166	0					
ANR	235667	IfStatement	if ( sign || aop . sign )		234166	2					
ANR	235668	Condition	sign || aop . sign	649:8:19031:19046	234166	0	True				
ANR	235669	OrExpression	sign || aop . sign		234166	0		||			
ANR	235670	Identifier	sign		234166	0					
ANR	235671	MemberAccess	aop . sign		234166	1					
ANR	235672	Identifier	aop		234166	0					
ANR	235673	Identifier	sign		234166	1					
ANR	235674	CompoundStatement		198:26:6330:6330	234166	1					
ANR	235675	ExpressionStatement	"var_retype ( anal , var , NULL , ""signed"" , addr , false , true )"	650:5:19056:19113	234166	0	True				
ANR	235676	CallExpression	"var_retype ( anal , var , NULL , ""signed"" , addr , false , true )"		234166	0					
ANR	235677	Callee	var_retype		234166	0					
ANR	235678	Identifier	var_retype		234166	0					
ANR	235679	ArgumentList	anal		234166	1					
ANR	235680	Argument	anal		234166	0					
ANR	235681	Identifier	anal		234166	0					
ANR	235682	Argument	var		234166	1					
ANR	235683	Identifier	var		234166	0					
ANR	235684	Argument	NULL		234166	2					
ANR	235685	Identifier	NULL		234166	0					
ANR	235686	Argument	"""signed"""		234166	3					
ANR	235687	PrimaryExpression	"""signed"""		234166	0					
ANR	235688	Argument	addr		234166	4					
ANR	235689	Identifier	addr		234166	0					
ANR	235690	Argument	false		234166	5					
ANR	235691	Identifier	false		234166	0					
ANR	235692	Argument	true		234166	6					
ANR	235693	Identifier	true		234166	0					
ANR	235694	IfStatement	if ( prev_dest && ( type == R_ANAL_OP_TYPE_MOV || type == R_ANAL_OP_TYPE_STORE ) )		234166	3					
ANR	235695	Condition	prev_dest && ( type == R_ANAL_OP_TYPE_MOV || type == R_ANAL_OP_TYPE_STORE )	654:8:19231:19303	234166	0	True				
ANR	235696	AndExpression	prev_dest && ( type == R_ANAL_OP_TYPE_MOV || type == R_ANAL_OP_TYPE_STORE )		234166	0		&&			
ANR	235697	Identifier	prev_dest		234166	0					
ANR	235698	OrExpression	type == R_ANAL_OP_TYPE_MOV || type == R_ANAL_OP_TYPE_STORE		234166	1		||			
ANR	235699	EqualityExpression	type == R_ANAL_OP_TYPE_MOV		234166	0		==			
ANR	235700	Identifier	type		234166	0					
ANR	235701	Identifier	R_ANAL_OP_TYPE_MOV		234166	1					
ANR	235702	EqualityExpression	type == R_ANAL_OP_TYPE_STORE		234166	1		==			
ANR	235703	Identifier	type		234166	0					
ANR	235704	Identifier	R_ANAL_OP_TYPE_STORE		234166	1					
ANR	235705	CompoundStatement		206:5:6677:6726	234166	1					
ANR	235706	IdentifierDeclStatement	char reg [ REG_SZ ] = { 0 } ;	655:5:19313:19335	234166	0	True				
ANR	235707	IdentifierDecl	reg [ REG_SZ ] = { 0 }		234166	0					
ANR	235708	IdentifierDeclType	char [ REG_SZ ]		234166	0					
ANR	235709	Identifier	reg		234166	1					
ANR	235710	Identifier	REG_SZ		234166	2					
ANR	235711	AssignmentExpression	reg [ REG_SZ ] = { 0 }		234166	3		=			
ANR	235712	Identifier	REG_SZ		234166	0					
ANR	235713	InitializerList	0		234166	1					
ANR	235714	PrimaryExpression	0		234166	0					
ANR	235715	ExpressionStatement	"get_src_regname ( core , addr , reg , sizeof ( reg ) )"	656:5:19342:19389	234166	1	True				
ANR	235716	CallExpression	"get_src_regname ( core , addr , reg , sizeof ( reg ) )"		234166	0					
ANR	235717	Callee	get_src_regname		234166	0					
ANR	235718	Identifier	get_src_regname		234166	0					
ANR	235719	ArgumentList	core		234166	1					
ANR	235720	Argument	core		234166	0					
ANR	235721	Identifier	core		234166	0					
ANR	235722	Argument	addr		234166	1					
ANR	235723	Identifier	addr		234166	0					
ANR	235724	Argument	reg		234166	2					
ANR	235725	Identifier	reg		234166	0					
ANR	235726	Argument	sizeof ( reg )		234166	3					
ANR	235727	SizeofExpression	sizeof ( reg )		234166	0					
ANR	235728	Sizeof	sizeof		234166	0					
ANR	235729	SizeofOperand	reg		234166	1					
ANR	235730	IdentifierDeclStatement	"bool match = strstr ( prev_dest , reg ) ? true : false ;"	657:5:19396:19445	234166	2	True				
ANR	235731	IdentifierDecl	"match = strstr ( prev_dest , reg ) ? true : false"		234166	0					
ANR	235732	IdentifierDeclType	bool		234166	0					
ANR	235733	Identifier	match		234166	1					
ANR	235734	AssignmentExpression	"match = strstr ( prev_dest , reg ) ? true : false"		234166	2		=			
ANR	235735	Identifier	match		234166	0					
ANR	235736	ConditionalExpression	"strstr ( prev_dest , reg ) ? true : false"		234166	1					
ANR	235737	Condition	"strstr ( prev_dest , reg )"		234166	0					
ANR	235738	CallExpression	"strstr ( prev_dest , reg )"		234166	0					
ANR	235739	Callee	strstr		234166	0					
ANR	235740	Identifier	strstr		234166	0					
ANR	235741	ArgumentList	prev_dest		234166	1					
ANR	235742	Argument	prev_dest		234166	0					
ANR	235743	Identifier	prev_dest		234166	0					
ANR	235744	Argument	reg		234166	1					
ANR	235745	Identifier	reg		234166	0					
ANR	235746	Identifier	true		234166	1					
ANR	235747	Identifier	false		234166	2					
ANR	235748	IfStatement	if ( str_flag && match )		234166	3					
ANR	235749	Condition	str_flag && match	658:9:19456:19472	234166	0	True				
ANR	235750	AndExpression	str_flag && match		234166	0		&&			
ANR	235751	Identifier	str_flag		234166	0					
ANR	235752	Identifier	match		234166	1					
ANR	235753	CompoundStatement		207:28:6756:6756	234166	1					
ANR	235754	ExpressionStatement	"var_retype ( anal , var , NULL , ""const char *"" , addr , false , false )"	659:6:19483:19547	234166	0	True				
ANR	235755	CallExpression	"var_retype ( anal , var , NULL , ""const char *"" , addr , false , false )"		234166	0					
ANR	235756	Callee	var_retype		234166	0					
ANR	235757	Identifier	var_retype		234166	0					
ANR	235758	ArgumentList	anal		234166	1					
ANR	235759	Argument	anal		234166	0					
ANR	235760	Identifier	anal		234166	0					
ANR	235761	Argument	var		234166	1					
ANR	235762	Identifier	var		234166	0					
ANR	235763	Argument	NULL		234166	2					
ANR	235764	Identifier	NULL		234166	0					
ANR	235765	Argument	"""const char *"""		234166	3					
ANR	235766	PrimaryExpression	"""const char *"""		234166	0					
ANR	235767	Argument	addr		234166	4					
ANR	235768	Identifier	addr		234166	0					
ANR	235769	Argument	false		234166	5					
ANR	235770	Identifier	false		234166	0					
ANR	235771	Argument	false		234166	6					
ANR	235772	Identifier	false		234166	0					
ANR	235773	IfStatement	if ( prop && match && prev_var )		234166	4					
ANR	235774	Condition	prop && match && prev_var	661:9:19565:19589	234166	0	True				
ANR	235775	AndExpression	prop && match && prev_var		234166	0		&&			
ANR	235776	Identifier	prop		234166	0					
ANR	235777	AndExpression	match && prev_var		234166	1		&&			
ANR	235778	Identifier	match		234166	0					
ANR	235779	Identifier	prev_var		234166	1					
ANR	235780	CompoundStatement		210:36:6873:6873	234166	1					
ANR	235781	ExpressionStatement	"var_retype ( anal , var , NULL , prev_type , addr , false , false )"	662:6:19600:19659	234166	0	True				
ANR	235782	CallExpression	"var_retype ( anal , var , NULL , prev_type , addr , false , false )"		234166	0					
ANR	235783	Callee	var_retype		234166	0					
ANR	235784	Identifier	var_retype		234166	0					
ANR	235785	ArgumentList	anal		234166	1					
ANR	235786	Argument	anal		234166	0					
ANR	235787	Identifier	anal		234166	0					
ANR	235788	Argument	var		234166	1					
ANR	235789	Identifier	var		234166	0					
ANR	235790	Argument	NULL		234166	2					
ANR	235791	Identifier	NULL		234166	0					
ANR	235792	Argument	prev_type		234166	3					
ANR	235793	Identifier	prev_type		234166	0					
ANR	235794	Argument	addr		234166	4					
ANR	235795	Identifier	addr		234166	0					
ANR	235796	Argument	false		234166	5					
ANR	235797	Identifier	false		234166	0					
ANR	235798	Argument	false		234166	6					
ANR	235799	Identifier	false		234166	0					
ANR	235800	IfStatement	if ( chk_constraint && var && ( type == R_ANAL_OP_TYPE_CMP && aop . disp != UT64_MAX ) && next_op && next_op -> type == R_ANAL_OP_TYPE_CJMP )		234166	4					
ANR	235801	Condition	chk_constraint && var && ( type == R_ANAL_OP_TYPE_CMP && aop . disp != UT64_MAX ) && next_op && next_op -> type == R_ANAL_OP_TYPE_CJMP	665:8:19682:19815	234166	0	True				
ANR	235802	AndExpression	chk_constraint && var && ( type == R_ANAL_OP_TYPE_CMP && aop . disp != UT64_MAX ) && next_op && next_op -> type == R_ANAL_OP_TYPE_CJMP		234166	0		&&			
ANR	235803	Identifier	chk_constraint		234166	0					
ANR	235804	AndExpression	var && ( type == R_ANAL_OP_TYPE_CMP && aop . disp != UT64_MAX ) && next_op && next_op -> type == R_ANAL_OP_TYPE_CJMP		234166	1		&&			
ANR	235805	Identifier	var		234166	0					
ANR	235806	AndExpression	( type == R_ANAL_OP_TYPE_CMP && aop . disp != UT64_MAX ) && next_op && next_op -> type == R_ANAL_OP_TYPE_CJMP		234166	1		&&			
ANR	235807	AndExpression	type == R_ANAL_OP_TYPE_CMP && aop . disp != UT64_MAX		234166	0		&&			
ANR	235808	EqualityExpression	type == R_ANAL_OP_TYPE_CMP		234166	0		==			
ANR	235809	Identifier	type		234166	0					
ANR	235810	Identifier	R_ANAL_OP_TYPE_CMP		234166	1					
ANR	235811	EqualityExpression	aop . disp != UT64_MAX		234166	1		!=			
ANR	235812	MemberAccess	aop . disp		234166	0					
ANR	235813	Identifier	aop		234166	0					
ANR	235814	Identifier	disp		234166	1					
ANR	235815	Identifier	UT64_MAX		234166	1					
ANR	235816	AndExpression	next_op && next_op -> type == R_ANAL_OP_TYPE_CJMP		234166	1		&&			
ANR	235817	Identifier	next_op		234166	0					
ANR	235818	EqualityExpression	next_op -> type == R_ANAL_OP_TYPE_CJMP		234166	1		==			
ANR	235819	PtrMemberAccess	next_op -> type		234166	0					
ANR	235820	Identifier	next_op		234166	0					
ANR	235821	Identifier	type		234166	1					
ANR	235822	Identifier	R_ANAL_OP_TYPE_CJMP		234166	1					
ANR	235823	CompoundStatement		236:5:7739:7797	234166	1					
ANR	235824	IdentifierDeclStatement	bool jmp = false ;	667:5:19825:19841	234166	0	True				
ANR	235825	IdentifierDecl	jmp = false		234166	0					
ANR	235826	IdentifierDeclType	bool		234166	0					
ANR	235827	Identifier	jmp		234166	1					
ANR	235828	AssignmentExpression	jmp = false		234166	2		=			
ANR	235829	Identifier	false		234166	0					
ANR	235830	Identifier	false		234166	1					
ANR	235831	IdentifierDeclStatement	RAnalOp * jmp_op = { 0 } ;	668:5:19848:19869	234166	1	True				
ANR	235832	IdentifierDecl	* jmp_op = { 0 }		234166	0					
ANR	235833	IdentifierDeclType	RAnalOp *		234166	0					
ANR	235834	Identifier	jmp_op		234166	1					
ANR	235835	AssignmentExpression	* jmp_op = { 0 }		234166	2		=			
ANR	235836	Identifier	jmp_op		234166	0					
ANR	235837	InitializerList	0		234166	1					
ANR	235838	PrimaryExpression	0		234166	0					
ANR	235839	IdentifierDeclStatement	ut64 jmp_addr = next_op -> jump ;	669:5:19876:19905	234166	2	True				
ANR	235840	IdentifierDecl	jmp_addr = next_op -> jump		234166	0					
ANR	235841	IdentifierDeclType	ut64		234166	0					
ANR	235842	Identifier	jmp_addr		234166	1					
ANR	235843	AssignmentExpression	jmp_addr = next_op -> jump		234166	2		=			
ANR	235844	Identifier	jmp_addr		234166	0					
ANR	235845	PtrMemberAccess	next_op -> jump		234166	1					
ANR	235846	Identifier	next_op		234166	0					
ANR	235847	Identifier	jump		234166	1					
ANR	235848	IdentifierDeclStatement	"RAnalBlock * jmpbb = r_anal_fcn_bbget_in ( anal , fcn , jmp_addr ) ;"	670:5:19912:19973	234166	3	True				
ANR	235849	IdentifierDecl	"* jmpbb = r_anal_fcn_bbget_in ( anal , fcn , jmp_addr )"		234166	0					
ANR	235850	IdentifierDeclType	RAnalBlock *		234166	0					
ANR	235851	Identifier	jmpbb		234166	1					
ANR	235852	AssignmentExpression	"* jmpbb = r_anal_fcn_bbget_in ( anal , fcn , jmp_addr )"		234166	2		=			
ANR	235853	Identifier	jmpbb		234166	0					
ANR	235854	CallExpression	"r_anal_fcn_bbget_in ( anal , fcn , jmp_addr )"		234166	1					
ANR	235855	Callee	r_anal_fcn_bbget_in		234166	0					
ANR	235856	Identifier	r_anal_fcn_bbget_in		234166	0					
ANR	235857	ArgumentList	anal		234166	1					
ANR	235858	Argument	anal		234166	0					
ANR	235859	Identifier	anal		234166	0					
ANR	235860	Argument	fcn		234166	1					
ANR	235861	Identifier	fcn		234166	0					
ANR	235862	Argument	jmp_addr		234166	2					
ANR	235863	Identifier	jmp_addr		234166	0					
ANR	235864	ForStatement	for ( i = 0 ; i < MAX_INSTR ; i ++ )		234166	4					
ANR	235865	ForInit	i = 0 ;	673:10:20026:20031	234166	0	True				
ANR	235866	AssignmentExpression	i = 0		234166	0		=			
ANR	235867	Identifier	i		234166	0					
ANR	235868	PrimaryExpression	0		234166	1					
ANR	235869	Condition	i < MAX_INSTR	673:17:20033:20045	234166	1	True				
ANR	235870	RelationalExpression	i < MAX_INSTR		234166	0		<			
ANR	235871	Identifier	i		234166	0					
ANR	235872	Identifier	MAX_INSTR		234166	1					
ANR	235873	PostIncDecOperationExpression	i ++	673:33:20049:20051	234166	2	True				
ANR	235874	Identifier	i		234166	0					
ANR	235875	IncDec	++		234166	1					
ANR	235876	CompoundStatement		222:38:7335:7335	234166	3					
ANR	235877	ExpressionStatement	"jmp_op = r_core_anal_op ( core , jmp_addr , R_ANAL_OP_MASK_BASIC )"	674:6:20062:20124	234166	0	True				
ANR	235878	AssignmentExpression	"jmp_op = r_core_anal_op ( core , jmp_addr , R_ANAL_OP_MASK_BASIC )"		234166	0		=			
ANR	235879	Identifier	jmp_op		234166	0					
ANR	235880	CallExpression	"r_core_anal_op ( core , jmp_addr , R_ANAL_OP_MASK_BASIC )"		234166	1					
ANR	235881	Callee	r_core_anal_op		234166	0					
ANR	235882	Identifier	r_core_anal_op		234166	0					
ANR	235883	ArgumentList	core		234166	1					
ANR	235884	Argument	core		234166	0					
ANR	235885	Identifier	core		234166	0					
ANR	235886	Argument	jmp_addr		234166	1					
ANR	235887	Identifier	jmp_addr		234166	0					
ANR	235888	Argument	R_ANAL_OP_MASK_BASIC		234166	2					
ANR	235889	Identifier	R_ANAL_OP_MASK_BASIC		234166	0					
ANR	235890	IfStatement	if ( ! jmp_op )		234166	1					
ANR	235891	Condition	! jmp_op	675:10:20136:20142	234166	0	True				
ANR	235892	UnaryOperationExpression	! jmp_op		234166	0					
ANR	235893	UnaryOperator	!		234166	0					
ANR	235894	Identifier	jmp_op		234166	1					
ANR	235895	CompoundStatement		224:19:7426:7426	234166	1					
ANR	235896	BreakStatement	break ;	676:7:20154:20159	234166	0	True				
ANR	235897	IfStatement	"if ( ( jmp_op -> type == R_ANAL_OP_TYPE_RET && r_anal_bb_is_in_offset ( jmpbb , jmp_addr ) ) || jmp_op -> type == R_ANAL_OP_TYPE_CJMP )"		234166	2					
ANR	235898	Condition	"( jmp_op -> type == R_ANAL_OP_TYPE_RET && r_anal_bb_is_in_offset ( jmpbb , jmp_addr ) ) || jmp_op -> type == R_ANAL_OP_TYPE_CJMP"	678:10:20179:20305	234166	0	True				
ANR	235899	OrExpression	"( jmp_op -> type == R_ANAL_OP_TYPE_RET && r_anal_bb_is_in_offset ( jmpbb , jmp_addr ) ) || jmp_op -> type == R_ANAL_OP_TYPE_CJMP"		234166	0		||			
ANR	235900	AndExpression	"jmp_op -> type == R_ANAL_OP_TYPE_RET && r_anal_bb_is_in_offset ( jmpbb , jmp_addr )"		234166	0		&&			
ANR	235901	EqualityExpression	jmp_op -> type == R_ANAL_OP_TYPE_RET		234166	0		==			
ANR	235902	PtrMemberAccess	jmp_op -> type		234166	0					
ANR	235903	Identifier	jmp_op		234166	0					
ANR	235904	Identifier	type		234166	1					
ANR	235905	Identifier	R_ANAL_OP_TYPE_RET		234166	1					
ANR	235906	CallExpression	"r_anal_bb_is_in_offset ( jmpbb , jmp_addr )"		234166	1					
ANR	235907	Callee	r_anal_bb_is_in_offset		234166	0					
ANR	235908	Identifier	r_anal_bb_is_in_offset		234166	0					
ANR	235909	ArgumentList	jmpbb		234166	1					
ANR	235910	Argument	jmpbb		234166	0					
ANR	235911	Identifier	jmpbb		234166	0					
ANR	235912	Argument	jmp_addr		234166	1					
ANR	235913	Identifier	jmp_addr		234166	0					
ANR	235914	EqualityExpression	jmp_op -> type == R_ANAL_OP_TYPE_CJMP		234166	1		==			
ANR	235915	PtrMemberAccess	jmp_op -> type		234166	0					
ANR	235916	Identifier	jmp_op		234166	0					
ANR	235917	Identifier	type		234166	1					
ANR	235918	Identifier	R_ANAL_OP_TYPE_CJMP		234166	1					
ANR	235919	CompoundStatement		228:48:7589:7589	234166	1					
ANR	235920	ExpressionStatement	jmp = true	680:7:20317:20327	234166	0	True				
ANR	235921	AssignmentExpression	jmp = true		234166	0		=			
ANR	235922	Identifier	jmp		234166	0					
ANR	235923	Identifier	true		234166	1					
ANR	235924	ExpressionStatement	r_anal_op_free ( jmp_op )	681:7:20336:20359	234166	1	True				
ANR	235925	CallExpression	r_anal_op_free ( jmp_op )		234166	0					
ANR	235926	Callee	r_anal_op_free		234166	0					
ANR	235927	Identifier	r_anal_op_free		234166	0					
ANR	235928	ArgumentList	jmp_op		234166	1					
ANR	235929	Argument	jmp_op		234166	0					
ANR	235930	Identifier	jmp_op		234166	0					
ANR	235931	BreakStatement	break ;	682:7:20368:20373	234166	2	True				
ANR	235932	ExpressionStatement	jmp_addr += jmp_op -> size	684:6:20389:20413	234166	3	True				
ANR	235933	AssignmentExpression	jmp_addr += jmp_op -> size		234166	0		+=			
ANR	235934	Identifier	jmp_addr		234166	0					
ANR	235935	PtrMemberAccess	jmp_op -> size		234166	1					
ANR	235936	Identifier	jmp_op		234166	0					
ANR	235937	Identifier	size		234166	1					
ANR	235938	ExpressionStatement	r_anal_op_free ( jmp_op )	685:6:20421:20444	234166	4	True				
ANR	235939	CallExpression	r_anal_op_free ( jmp_op )		234166	0					
ANR	235940	Callee	r_anal_op_free		234166	0					
ANR	235941	Identifier	r_anal_op_free		234166	0					
ANR	235942	ArgumentList	jmp_op		234166	1					
ANR	235943	Argument	jmp_op		234166	0					
ANR	235944	Identifier	jmp_op		234166	0					
ANR	235945	IdentifierDeclStatement	int cond = jmp ? cond_invert ( next_op -> cond ) : next_op -> cond ;	687:5:20458:20516	234166	5	True				
ANR	235946	IdentifierDecl	cond = jmp ? cond_invert ( next_op -> cond ) : next_op -> cond		234166	0					
ANR	235947	IdentifierDeclType	int		234166	0					
ANR	235948	Identifier	cond		234166	1					
ANR	235949	AssignmentExpression	cond = jmp ? cond_invert ( next_op -> cond ) : next_op -> cond		234166	2		=			
ANR	235950	Identifier	cond		234166	0					
ANR	235951	ConditionalExpression	jmp ? cond_invert ( next_op -> cond ) : next_op -> cond		234166	1					
ANR	235952	Condition	jmp		234166	0					
ANR	235953	Identifier	jmp		234166	0					
ANR	235954	CallExpression	cond_invert ( next_op -> cond )		234166	1					
ANR	235955	Callee	cond_invert		234166	0					
ANR	235956	Identifier	cond_invert		234166	0					
ANR	235957	ArgumentList	next_op -> cond		234166	1					
ANR	235958	Argument	next_op -> cond		234166	0					
ANR	235959	PtrMemberAccess	next_op -> cond		234166	0					
ANR	235960	Identifier	next_op		234166	0					
ANR	235961	Identifier	cond		234166	1					
ANR	235962	PtrMemberAccess	next_op -> cond		234166	2					
ANR	235963	Identifier	next_op		234166	0					
ANR	235964	Identifier	cond		234166	1					
ANR	235965	ExpressionStatement	"var_add_range ( anal , var , cond , aop . val )"	688:5:20523:20563	234166	6	True				
ANR	235966	CallExpression	"var_add_range ( anal , var , cond , aop . val )"		234166	0					
ANR	235967	Callee	var_add_range		234166	0					
ANR	235968	Identifier	var_add_range		234166	0					
ANR	235969	ArgumentList	anal		234166	1					
ANR	235970	Argument	anal		234166	0					
ANR	235971	Identifier	anal		234166	0					
ANR	235972	Argument	var		234166	1					
ANR	235973	Identifier	var		234166	0					
ANR	235974	Argument	cond		234166	2					
ANR	235975	Identifier	cond		234166	0					
ANR	235976	Argument	aop . val		234166	3					
ANR	235977	MemberAccess	aop . val		234166	0					
ANR	235978	Identifier	aop		234166	0					
ANR	235979	Identifier	val		234166	1					
ANR	235980	ExpressionStatement	prev_var = ( var && aop . direction == R_ANAL_OP_DIR_READ ) ? true : false	691:3:20579:20647	234166	64	True				
ANR	235981	AssignmentExpression	prev_var = ( var && aop . direction == R_ANAL_OP_DIR_READ ) ? true : false		234166	0		=			
ANR	235982	Identifier	prev_var		234166	0					
ANR	235983	ConditionalExpression	( var && aop . direction == R_ANAL_OP_DIR_READ ) ? true : false		234166	1					
ANR	235984	Condition	var && aop . direction == R_ANAL_OP_DIR_READ		234166	0					
ANR	235985	AndExpression	var && aop . direction == R_ANAL_OP_DIR_READ		234166	0		&&			
ANR	235986	Identifier	var		234166	0					
ANR	235987	EqualityExpression	aop . direction == R_ANAL_OP_DIR_READ		234166	1		==			
ANR	235988	MemberAccess	aop . direction		234166	0					
ANR	235989	Identifier	aop		234166	0					
ANR	235990	Identifier	direction		234166	1					
ANR	235991	Identifier	R_ANAL_OP_DIR_READ		234166	1					
ANR	235992	Identifier	true		234166	1					
ANR	235993	Identifier	false		234166	2					
ANR	235994	ExpressionStatement	str_flag = false	692:3:20652:20668	234166	65	True				
ANR	235995	AssignmentExpression	str_flag = false		234166	0		=			
ANR	235996	Identifier	str_flag		234166	0					
ANR	235997	Identifier	false		234166	1					
ANR	235998	ExpressionStatement	prop = false	693:3:20673:20685	234166	66	True				
ANR	235999	AssignmentExpression	prop = false		234166	0		=			
ANR	236000	Identifier	prop		234166	0					
ANR	236001	Identifier	false		234166	1					
ANR	236002	ExpressionStatement	prev_dest = NULL	694:3:20690:20706	234166	67	True				
ANR	236003	AssignmentExpression	prev_dest = NULL		234166	0		=			
ANR	236004	Identifier	prev_dest		234166	0					
ANR	236005	Identifier	NULL		234166	1					
ANR	236006	SwitchStatement	switch ( type )		234166	68					
ANR	236007	Condition	type	695:11:20719:20722	234166	0	True				
ANR	236008	Identifier	type		234166	0					
ANR	236009	CompoundStatement		267:4:8787:8840	234166	1					
ANR	236010	Label	case R_ANAL_OP_TYPE_MOV :	696:3:20730:20753	234166	0	True				
ANR	236011	Identifier	R_ANAL_OP_TYPE_MOV		234166	0					
ANR	236012	Label	case R_ANAL_OP_TYPE_LEA :	697:3:20758:20781	234166	1	True				
ANR	236013	Identifier	R_ANAL_OP_TYPE_LEA		234166	0					
ANR	236014	Label	case R_ANAL_OP_TYPE_LOAD :	698:3:20786:20810	234166	2	True				
ANR	236015	Identifier	R_ANAL_OP_TYPE_LOAD		234166	0					
ANR	236016	IfStatement	if ( aop . ptr && aop . refptr && aop . ptr != UT64_MAX )		234166	3					
ANR	236017	Condition	aop . ptr && aop . refptr && aop . ptr != UT64_MAX	699:8:20820:20863	234166	0	True				
ANR	236018	AndExpression	aop . ptr && aop . refptr && aop . ptr != UT64_MAX		234166	0		&&			
ANR	236019	MemberAccess	aop . ptr		234166	0					
ANR	236020	Identifier	aop		234166	0					
ANR	236021	Identifier	ptr		234166	1					
ANR	236022	AndExpression	aop . refptr && aop . ptr != UT64_MAX		234166	1		&&			
ANR	236023	MemberAccess	aop . refptr		234166	0					
ANR	236024	Identifier	aop		234166	0					
ANR	236025	Identifier	refptr		234166	1					
ANR	236026	EqualityExpression	aop . ptr != UT64_MAX		234166	1		!=			
ANR	236027	MemberAccess	aop . ptr		234166	0					
ANR	236028	Identifier	aop		234166	0					
ANR	236029	Identifier	ptr		234166	1					
ANR	236030	Identifier	UT64_MAX		234166	1					
ANR	236031	CompoundStatement		248:54:8147:8147	234166	1					
ANR	236032	IfStatement	if ( type == R_ANAL_OP_TYPE_LOAD )		234166	0					
ANR	236033	Condition	type == R_ANAL_OP_TYPE_LOAD	700:9:20877:20903	234166	0	True				
ANR	236034	EqualityExpression	type == R_ANAL_OP_TYPE_LOAD		234166	0		==			
ANR	236035	Identifier	type		234166	0					
ANR	236036	Identifier	R_ANAL_OP_TYPE_LOAD		234166	1					
ANR	236037	CompoundStatement		252:6:8284:8352	234166	1					
ANR	236038	IdentifierDeclStatement	ut8 buf [ 256 ] = { 0 } ;	701:6:20914:20932	234166	0	True				
ANR	236039	IdentifierDecl	buf [ 256 ] = { 0 }		234166	0					
ANR	236040	IdentifierDeclType	ut8 [ 256 ]		234166	0					
ANR	236041	Identifier	buf		234166	1					
ANR	236042	PrimaryExpression	256		234166	2					
ANR	236043	AssignmentExpression	buf [ 256 ] = { 0 }		234166	3		=			
ANR	236044	Identifier	buf		234166	0					
ANR	236045	InitializerList	0		234166	1					
ANR	236046	PrimaryExpression	0		234166	0					
ANR	236047	ExpressionStatement	"r_io_read_at ( core -> io , aop . ptr , buf , sizeof ( buf ) - 1 )"	702:6:20940:20995	234166	1	True				
ANR	236048	CallExpression	"r_io_read_at ( core -> io , aop . ptr , buf , sizeof ( buf ) - 1 )"		234166	0					
ANR	236049	Callee	r_io_read_at		234166	0					
ANR	236050	Identifier	r_io_read_at		234166	0					
ANR	236051	ArgumentList	core -> io		234166	1					
ANR	236052	Argument	core -> io		234166	0					
ANR	236053	PtrMemberAccess	core -> io		234166	0					
ANR	236054	Identifier	core		234166	0					
ANR	236055	Identifier	io		234166	1					
ANR	236056	Argument	aop . ptr		234166	1					
ANR	236057	MemberAccess	aop . ptr		234166	0					
ANR	236058	Identifier	aop		234166	0					
ANR	236059	Identifier	ptr		234166	1					
ANR	236060	Argument	buf		234166	2					
ANR	236061	Identifier	buf		234166	0					
ANR	236062	Argument	sizeof ( buf ) - 1		234166	3					
ANR	236063	AdditiveExpression	sizeof ( buf ) - 1		234166	0		-			
ANR	236064	SizeofExpression	sizeof ( buf )		234166	0					
ANR	236065	Sizeof	sizeof		234166	0					
ANR	236066	SizeofOperand	buf		234166	1					
ANR	236067	PrimaryExpression	1		234166	1					
ANR	236068	IdentifierDeclStatement	"ut64 ptr = r_read_ble ( buf , core -> print -> big_endian , aop . refptr * 8 ) ;"	703:6:21003:21071	234166	2	True				
ANR	236069	IdentifierDecl	"ptr = r_read_ble ( buf , core -> print -> big_endian , aop . refptr * 8 )"		234166	0					
ANR	236070	IdentifierDeclType	ut64		234166	0					
ANR	236071	Identifier	ptr		234166	1					
ANR	236072	AssignmentExpression	"ptr = r_read_ble ( buf , core -> print -> big_endian , aop . refptr * 8 )"		234166	2		=			
ANR	236073	Identifier	ptr		234166	0					
ANR	236074	CallExpression	"r_read_ble ( buf , core -> print -> big_endian , aop . refptr * 8 )"		234166	1					
ANR	236075	Callee	r_read_ble		234166	0					
ANR	236076	Identifier	r_read_ble		234166	0					
ANR	236077	ArgumentList	buf		234166	1					
ANR	236078	Argument	buf		234166	0					
ANR	236079	Identifier	buf		234166	0					
ANR	236080	Argument	core -> print -> big_endian		234166	1					
ANR	236081	PtrMemberAccess	core -> print -> big_endian		234166	0					
ANR	236082	PtrMemberAccess	core -> print		234166	0					
ANR	236083	Identifier	core		234166	0					
ANR	236084	Identifier	print		234166	1					
ANR	236085	Identifier	big_endian		234166	1					
ANR	236086	Argument	aop . refptr * 8		234166	2					
ANR	236087	MultiplicativeExpression	aop . refptr * 8		234166	0		*			
ANR	236088	MemberAccess	aop . refptr		234166	0					
ANR	236089	Identifier	aop		234166	0					
ANR	236090	Identifier	refptr		234166	1					
ANR	236091	PrimaryExpression	8		234166	1					
ANR	236092	IfStatement	if ( ptr && ptr != UT64_MAX )		234166	3					
ANR	236093	Condition	ptr && ptr != UT64_MAX	704:10:21083:21104	234166	0	True				
ANR	236094	AndExpression	ptr && ptr != UT64_MAX		234166	0		&&			
ANR	236095	Identifier	ptr		234166	0					
ANR	236096	EqualityExpression	ptr != UT64_MAX		234166	1		!=			
ANR	236097	Identifier	ptr		234166	0					
ANR	236098	Identifier	UT64_MAX		234166	1					
ANR	236099	CompoundStatement		254:7:8397:8443	234166	1					
ANR	236100	IdentifierDeclStatement	"RFlagItem * f = r_flag_get_i ( core -> flags , ptr ) ;"	705:7:21116:21162	234166	0	True				
ANR	236101	IdentifierDecl	"* f = r_flag_get_i ( core -> flags , ptr )"		234166	0					
ANR	236102	IdentifierDeclType	RFlagItem *		234166	0					
ANR	236103	Identifier	f		234166	1					
ANR	236104	AssignmentExpression	"* f = r_flag_get_i ( core -> flags , ptr )"		234166	2		=			
ANR	236105	Identifier	f		234166	0					
ANR	236106	CallExpression	"r_flag_get_i ( core -> flags , ptr )"		234166	1					
ANR	236107	Callee	r_flag_get_i		234166	0					
ANR	236108	Identifier	r_flag_get_i		234166	0					
ANR	236109	ArgumentList	core -> flags		234166	1					
ANR	236110	Argument	core -> flags		234166	0					
ANR	236111	PtrMemberAccess	core -> flags		234166	0					
ANR	236112	Identifier	core		234166	0					
ANR	236113	Identifier	flags		234166	1					
ANR	236114	Argument	ptr		234166	1					
ANR	236115	Identifier	ptr		234166	0					
ANR	236116	IfStatement	"if ( f && ! strncmp ( f -> name , ""str"" , 3 ) )"		234166	1					
ANR	236117	Condition	"f && ! strncmp ( f -> name , ""str"" , 3 )"	706:11:21175:21207	234166	0	True				
ANR	236118	AndExpression	"f && ! strncmp ( f -> name , ""str"" , 3 )"		234166	0		&&			
ANR	236119	Identifier	f		234166	0					
ANR	236120	UnaryOperationExpression	"! strncmp ( f -> name , ""str"" , 3 )"		234166	1					
ANR	236121	UnaryOperator	!		234166	0					
ANR	236122	CallExpression	"strncmp ( f -> name , ""str"" , 3 )"		234166	1					
ANR	236123	Callee	strncmp		234166	0					
ANR	236124	Identifier	strncmp		234166	0					
ANR	236125	ArgumentList	f -> name		234166	1					
ANR	236126	Argument	f -> name		234166	0					
ANR	236127	PtrMemberAccess	f -> name		234166	0					
ANR	236128	Identifier	f		234166	0					
ANR	236129	Identifier	name		234166	1					
ANR	236130	Argument	"""str"""		234166	1					
ANR	236131	PrimaryExpression	"""str"""		234166	0					
ANR	236132	Argument	3		234166	2					
ANR	236133	PrimaryExpression	3		234166	0					
ANR	236134	CompoundStatement		255:46:8491:8491	234166	1					
ANR	236135	ExpressionStatement	str_flag = true	707:8:21220:21235	234166	0	True				
ANR	236136	AssignmentExpression	str_flag = true		234166	0		=			
ANR	236137	Identifier	str_flag		234166	0					
ANR	236138	Identifier	true		234166	1					
ANR	236139	ElseStatement	else		234166	0					
ANR	236140	IfStatement	"if ( r_flag_exist_at ( core -> flags , ""str"" , 3 , aop . ptr ) )"		234166	0					
ANR	236141	Condition	"r_flag_exist_at ( core -> flags , ""str"" , 3 , aop . ptr )"	710:16:21270:21317	234166	0	True				
ANR	236142	CallExpression	"r_flag_exist_at ( core -> flags , ""str"" , 3 , aop . ptr )"		234166	0					
ANR	236143	Callee	r_flag_exist_at		234166	0					
ANR	236144	Identifier	r_flag_exist_at		234166	0					
ANR	236145	ArgumentList	core -> flags		234166	1					
ANR	236146	Argument	core -> flags		234166	0					
ANR	236147	PtrMemberAccess	core -> flags		234166	0					
ANR	236148	Identifier	core		234166	0					
ANR	236149	Identifier	flags		234166	1					
ANR	236150	Argument	"""str"""		234166	1					
ANR	236151	PrimaryExpression	"""str"""		234166	0					
ANR	236152	Argument	3		234166	2					
ANR	236153	PrimaryExpression	3		234166	0					
ANR	236154	Argument	aop . ptr		234166	3					
ANR	236155	MemberAccess	aop . ptr		234166	0					
ANR	236156	Identifier	aop		234166	0					
ANR	236157	Identifier	ptr		234166	1					
ANR	236158	CompoundStatement		259:66:8601:8601	234166	1					
ANR	236159	ExpressionStatement	str_flag = true	711:6:21328:21343	234166	0	True				
ANR	236160	AssignmentExpression	str_flag = true		234166	0		=			
ANR	236161	Identifier	str_flag		234166	0					
ANR	236162	Identifier	true		234166	1					
ANR	236163	IfStatement	if ( var && str_flag )		234166	4					
ANR	236164	Condition	var && str_flag	715:8:21406:21420	234166	0	True				
ANR	236165	AndExpression	var && str_flag		234166	0		&&			
ANR	236166	Identifier	var		234166	0					
ANR	236167	Identifier	str_flag		234166	1					
ANR	236168	CompoundStatement		264:25:8704:8704	234166	1					
ANR	236169	ExpressionStatement	"var_retype ( anal , var , NULL , ""const char *"" , addr , false , false )"	716:5:21430:21494	234166	0	True				
ANR	236170	CallExpression	"var_retype ( anal , var , NULL , ""const char *"" , addr , false , false )"		234166	0					
ANR	236171	Callee	var_retype		234166	0					
ANR	236172	Identifier	var_retype		234166	0					
ANR	236173	ArgumentList	anal		234166	1					
ANR	236174	Argument	anal		234166	0					
ANR	236175	Identifier	anal		234166	0					
ANR	236176	Argument	var		234166	1					
ANR	236177	Identifier	var		234166	0					
ANR	236178	Argument	NULL		234166	2					
ANR	236179	Identifier	NULL		234166	0					
ANR	236180	Argument	"""const char *"""		234166	3					
ANR	236181	PrimaryExpression	"""const char *"""		234166	0					
ANR	236182	Argument	addr		234166	4					
ANR	236183	Identifier	addr		234166	0					
ANR	236184	Argument	false		234166	5					
ANR	236185	Identifier	false		234166	0					
ANR	236186	Argument	false		234166	6					
ANR	236187	Identifier	false		234166	0					
ANR	236188	IdentifierDeclStatement	"const char * query = sdb_fmt ( ""%d.reg.write"" , cur_idx ) ;"	718:4:21506:21559	234166	5	True				
ANR	236189	IdentifierDecl	"* query = sdb_fmt ( ""%d.reg.write"" , cur_idx )"		234166	0					
ANR	236190	IdentifierDeclType	const char *		234166	0					
ANR	236191	Identifier	query		234166	1					
ANR	236192	AssignmentExpression	"* query = sdb_fmt ( ""%d.reg.write"" , cur_idx )"		234166	2		=			
ANR	236193	Identifier	query		234166	0					
ANR	236194	CallExpression	"sdb_fmt ( ""%d.reg.write"" , cur_idx )"		234166	1					
ANR	236195	Callee	sdb_fmt		234166	0					
ANR	236196	Identifier	sdb_fmt		234166	0					
ANR	236197	ArgumentList	"""%d.reg.write"""		234166	1					
ANR	236198	Argument	"""%d.reg.write"""		234166	0					
ANR	236199	PrimaryExpression	"""%d.reg.write"""		234166	0					
ANR	236200	Argument	cur_idx		234166	1					
ANR	236201	Identifier	cur_idx		234166	0					
ANR	236202	ExpressionStatement	"prev_dest = sdb_const_get ( trace , query , 0 )"	719:4:21565:21608	234166	6	True				
ANR	236203	AssignmentExpression	"prev_dest = sdb_const_get ( trace , query , 0 )"		234166	0		=			
ANR	236204	Identifier	prev_dest		234166	0					
ANR	236205	CallExpression	"sdb_const_get ( trace , query , 0 )"		234166	1					
ANR	236206	Callee	sdb_const_get		234166	0					
ANR	236207	Identifier	sdb_const_get		234166	0					
ANR	236208	ArgumentList	trace		234166	1					
ANR	236209	Argument	trace		234166	0					
ANR	236210	Identifier	trace		234166	0					
ANR	236211	Argument	query		234166	1					
ANR	236212	Identifier	query		234166	0					
ANR	236213	Argument	0		234166	2					
ANR	236214	PrimaryExpression	0		234166	0					
ANR	236215	IfStatement	if ( var )		234166	7					
ANR	236216	Condition	var	720:8:21618:21620	234166	0	True				
ANR	236217	Identifier	var		234166	0					
ANR	236218	CompoundStatement		269:13:8904:8904	234166	1					
ANR	236219	ExpressionStatement	"strncpy ( prev_type , var -> type , sizeof ( prev_type ) - 1 )"	721:5:21630:21684	234166	0	True				
ANR	236220	CallExpression	"strncpy ( prev_type , var -> type , sizeof ( prev_type ) - 1 )"		234166	0					
ANR	236221	Callee	strncpy		234166	0					
ANR	236222	Identifier	strncpy		234166	0					
ANR	236223	ArgumentList	prev_type		234166	1					
ANR	236224	Argument	prev_type		234166	0					
ANR	236225	Identifier	prev_type		234166	0					
ANR	236226	Argument	var -> type		234166	1					
ANR	236227	PtrMemberAccess	var -> type		234166	0					
ANR	236228	Identifier	var		234166	0					
ANR	236229	Identifier	type		234166	1					
ANR	236230	Argument	sizeof ( prev_type ) - 1		234166	2					
ANR	236231	AdditiveExpression	sizeof ( prev_type ) - 1		234166	0		-			
ANR	236232	SizeofExpression	sizeof ( prev_type )		234166	0					
ANR	236233	Sizeof	sizeof		234166	0					
ANR	236234	SizeofOperand	prev_type		234166	1					
ANR	236235	PrimaryExpression	1		234166	1					
ANR	236236	ExpressionStatement	prop = true	722:5:21691:21702	234166	1	True				
ANR	236237	AssignmentExpression	prop = true		234166	0		=			
ANR	236238	Identifier	prop		234166	0					
ANR	236239	Identifier	true		234166	1					
ANR	236240	ExpressionStatement	i += ret	725:3:21718:21726	234166	69	True				
ANR	236241	AssignmentExpression	i += ret		234166	0		+=			
ANR	236242	Identifier	i		234166	0					
ANR	236243	Identifier	ret		234166	1					
ANR	236244	ExpressionStatement	addr += ret	726:3:21731:21742	234166	70	True				
ANR	236245	AssignmentExpression	addr += ret		234166	0		+=			
ANR	236246	Identifier	addr		234166	0					
ANR	236247	Identifier	ret		234166	1					
ANR	236248	ExpressionStatement	r_anal_op_free ( next_op )	727:3:21747:21771	234166	71	True				
ANR	236249	CallExpression	r_anal_op_free ( next_op )		234166	0					
ANR	236250	Callee	r_anal_op_free		234166	0					
ANR	236251	Identifier	r_anal_op_free		234166	0					
ANR	236252	ArgumentList	next_op		234166	1					
ANR	236253	Argument	next_op		234166	0					
ANR	236254	Identifier	next_op		234166	0					
ANR	236255	ExpressionStatement	r_anal_op_fini ( & aop )	728:3:21776:21797	234166	72	True				
ANR	236256	CallExpression	r_anal_op_fini ( & aop )		234166	0					
ANR	236257	Callee	r_anal_op_fini		234166	0					
ANR	236258	Identifier	r_anal_op_fini		234166	0					
ANR	236259	ArgumentList	& aop		234166	1					
ANR	236260	Argument	& aop		234166	0					
ANR	236261	UnaryOperationExpression	& aop		234166	0					
ANR	236262	UnaryOperator	&		234166	0					
ANR	236263	Identifier	aop		234166	1					
ANR	236264	IdentifierDeclStatement	"RList * list = r_anal_var_list ( anal , fcn , R_ANAL_VAR_KIND_REG ) ;"	733:1:21852:21914	234166	40	True				
ANR	236265	IdentifierDecl	"* list = r_anal_var_list ( anal , fcn , R_ANAL_VAR_KIND_REG )"		234166	0					
ANR	236266	IdentifierDeclType	RList *		234166	0					
ANR	236267	Identifier	list		234166	1					
ANR	236268	AssignmentExpression	"* list = r_anal_var_list ( anal , fcn , R_ANAL_VAR_KIND_REG )"		234166	2		=			
ANR	236269	Identifier	list		234166	0					
ANR	236270	CallExpression	"r_anal_var_list ( anal , fcn , R_ANAL_VAR_KIND_REG )"		234166	1					
ANR	236271	Callee	r_anal_var_list		234166	0					
ANR	236272	Identifier	r_anal_var_list		234166	0					
ANR	236273	ArgumentList	anal		234166	1					
ANR	236274	Argument	anal		234166	0					
ANR	236275	Identifier	anal		234166	0					
ANR	236276	Argument	fcn		234166	1					
ANR	236277	Identifier	fcn		234166	0					
ANR	236278	Argument	R_ANAL_VAR_KIND_REG		234166	2					
ANR	236279	Identifier	R_ANAL_VAR_KIND_REG		234166	0					
ANR	236280	IdentifierDeclStatement	"RAnalVar * rvar , * bp_var ;"	734:1:21917:21940	234166	41	True				
ANR	236281	IdentifierDecl	* rvar		234166	0					
ANR	236282	IdentifierDeclType	RAnalVar *		234166	0					
ANR	236283	Identifier	rvar		234166	1					
ANR	236284	IdentifierDecl	* bp_var		234166	1					
ANR	236285	IdentifierDeclType	RAnalVar *		234166	0					
ANR	236286	Identifier	bp_var		234166	1					
ANR	236287	IdentifierDeclStatement	"RListIter * iter , * iter2 ;"	735:1:21943:21967	234166	42	True				
ANR	236288	IdentifierDecl	* iter		234166	0					
ANR	236289	IdentifierDeclType	RListIter *		234166	0					
ANR	236290	Identifier	iter		234166	1					
ANR	236291	IdentifierDecl	* iter2		234166	1					
ANR	236292	IdentifierDeclType	RListIter *		234166	0					
ANR	236293	Identifier	iter2		234166	1					
ANR	236294	Statement	r_list_foreach	736:1:21970:21983	234166	43	True				
ANR	236295	Statement	(	736:16:21985:21985	234166	44	True				
ANR	236296	Statement	list	736:17:21986:21989	234166	45	True				
ANR	236297	Statement	","	736:21:21990:21990	234166	46	True				
ANR	236298	Statement	iter	736:23:21992:21995	234166	47	True				
ANR	236299	Statement	","	736:27:21996:21996	234166	48	True				
ANR	236300	Statement	rvar	736:29:21998:22001	234166	49	True				
ANR	236301	Statement	)	736:33:22002:22002	234166	50	True				
ANR	236302	CompoundStatement		294:2:9554:9616	234166	51					
ANR	236303	IdentifierDeclStatement	"RAnalVar * lvar = get_link_var ( anal , fcn -> addr , rvar ) ;"	737:2:22008:22061	234166	0	True				
ANR	236304	IdentifierDecl	"* lvar = get_link_var ( anal , fcn -> addr , rvar )"		234166	0					
ANR	236305	IdentifierDeclType	RAnalVar *		234166	0					
ANR	236306	Identifier	lvar		234166	1					
ANR	236307	AssignmentExpression	"* lvar = get_link_var ( anal , fcn -> addr , rvar )"		234166	2		=			
ANR	236308	Identifier	lvar		234166	0					
ANR	236309	CallExpression	"get_link_var ( anal , fcn -> addr , rvar )"		234166	1					
ANR	236310	Callee	get_link_var		234166	0					
ANR	236311	Identifier	get_link_var		234166	0					
ANR	236312	ArgumentList	anal		234166	1					
ANR	236313	Argument	anal		234166	0					
ANR	236314	Identifier	anal		234166	0					
ANR	236315	Argument	fcn -> addr		234166	1					
ANR	236316	PtrMemberAccess	fcn -> addr		234166	0					
ANR	236317	Identifier	fcn		234166	0					
ANR	236318	Identifier	addr		234166	1					
ANR	236319	Argument	rvar		234166	2					
ANR	236320	Identifier	rvar		234166	0					
ANR	236321	IdentifierDeclStatement	"RRegItem * i = r_reg_index_get ( anal -> reg , rvar -> delta ) ;"	738:2:22065:22119	234166	1	True				
ANR	236322	IdentifierDecl	"* i = r_reg_index_get ( anal -> reg , rvar -> delta )"		234166	0					
ANR	236323	IdentifierDeclType	RRegItem *		234166	0					
ANR	236324	Identifier	i		234166	1					
ANR	236325	AssignmentExpression	"* i = r_reg_index_get ( anal -> reg , rvar -> delta )"		234166	2		=			
ANR	236326	Identifier	i		234166	0					
ANR	236327	CallExpression	"r_reg_index_get ( anal -> reg , rvar -> delta )"		234166	1					
ANR	236328	Callee	r_reg_index_get		234166	0					
ANR	236329	Identifier	r_reg_index_get		234166	0					
ANR	236330	ArgumentList	anal -> reg		234166	1					
ANR	236331	Argument	anal -> reg		234166	0					
ANR	236332	PtrMemberAccess	anal -> reg		234166	0					
ANR	236333	Identifier	anal		234166	0					
ANR	236334	Identifier	reg		234166	1					
ANR	236335	Argument	rvar -> delta		234166	1					
ANR	236336	PtrMemberAccess	rvar -> delta		234166	0					
ANR	236337	Identifier	rvar		234166	0					
ANR	236338	Identifier	delta		234166	1					
ANR	236339	IfStatement	if ( ! i )		234166	2					
ANR	236340	Condition	! i	739:6:22127:22128	234166	0	True				
ANR	236341	UnaryOperationExpression	! i		234166	0					
ANR	236342	UnaryOperator	!		234166	0					
ANR	236343	Identifier	i		234166	1					
ANR	236344	CompoundStatement		288:10:9412:9412	234166	1					
ANR	236345	ContinueStatement	continue ;	740:3:22136:22144	234166	0	True				
ANR	236346	IdentifierDeclStatement	bool res = true ;	742:2:22152:22167	234166	3	True				
ANR	236347	IdentifierDecl	res = true		234166	0					
ANR	236348	IdentifierDeclType	bool		234166	0					
ANR	236349	Identifier	res		234166	1					
ANR	236350	AssignmentExpression	res = true		234166	2		=			
ANR	236351	Identifier	true		234166	0					
ANR	236352	Identifier	true		234166	1					
ANR	236353	IdentifierDeclStatement	char * type = NULL ;	743:2:22171:22188	234166	4	True				
ANR	236354	IdentifierDecl	* type = NULL		234166	0					
ANR	236355	IdentifierDeclType	char *		234166	0					
ANR	236356	Identifier	type		234166	1					
ANR	236357	AssignmentExpression	* type = NULL		234166	2		=			
ANR	236358	Identifier	NULL		234166	0					
ANR	236359	Identifier	NULL		234166	1					
ANR	236360	Statement	const	744:2:22192:22196	234166	5	True				
ANR	236361	Statement	char	744:8:22198:22201	234166	6	True				
ANR	236362	Statement	*	744:13:22203:22203	234166	7	True				
ANR	236363	Statement	query	744:14:22204:22208	234166	8	True				
ANR	236364	Statement	=	744:20:22210:22210	234166	9	True				
ANR	236365	Statement	sdb_fmt	744:22:22212:22218	234166	10	True				
ANR	236366	Statement	(	744:30:22220:22220	234166	11	True				
ANR	236367	Statement	"""fcn.0x%08"""	744:31:22221:22231	234166	12	True				
ANR	236368	Statement	PFMT64x	744:42:22232:22238	234166	13	True				
ANR	236369	Statement	""".arg.%s"""	744:49:22239:22247	234166	14	True				
ANR	236370	Statement	","	744:58:22248:22248	234166	15	True				
ANR	236371	Statement	fcn	744:60:22250:22252	234166	16	True				
ANR	236372	Statement	->	744:63:22253:22254	234166	17	True				
ANR	236373	Statement	addr	744:65:22255:22258	234166	18	True				
ANR	236374	Statement	","	744:69:22259:22259	234166	19	True				
ANR	236375	Statement	i	744:71:22261:22261	234166	20	True				
ANR	236376	Statement	->	744:72:22262:22263	234166	21	True				
ANR	236377	Statement	name	744:74:22264:22267	234166	22	True				
ANR	236378	Statement	)	744:78:22268:22268	234166	23	True				
ANR	236379	ExpressionStatement		744:79:22269:22269	234166	24	True				
ANR	236380	IdentifierDeclStatement	"const char * qres = sdb_const_get ( anal -> sdb_fcns , query , NULL ) ;"	745:2:22273:22335	234166	25	True				
ANR	236381	IdentifierDecl	"* qres = sdb_const_get ( anal -> sdb_fcns , query , NULL )"		234166	0					
ANR	236382	IdentifierDeclType	const char *		234166	0					
ANR	236383	Identifier	qres		234166	1					
ANR	236384	AssignmentExpression	"* qres = sdb_const_get ( anal -> sdb_fcns , query , NULL )"		234166	2		=			
ANR	236385	Identifier	qres		234166	0					
ANR	236386	CallExpression	"sdb_const_get ( anal -> sdb_fcns , query , NULL )"		234166	1					
ANR	236387	Callee	sdb_const_get		234166	0					
ANR	236388	Identifier	sdb_const_get		234166	0					
ANR	236389	ArgumentList	anal -> sdb_fcns		234166	1					
ANR	236390	Argument	anal -> sdb_fcns		234166	0					
ANR	236391	PtrMemberAccess	anal -> sdb_fcns		234166	0					
ANR	236392	Identifier	anal		234166	0					
ANR	236393	Identifier	sdb_fcns		234166	1					
ANR	236394	Argument	query		234166	1					
ANR	236395	Identifier	query		234166	0					
ANR	236396	Argument	NULL		234166	2					
ANR	236397	Identifier	NULL		234166	0					
ANR	236398	IfStatement	if ( qres )		234166	26					
ANR	236399	Condition	qres	746:6:22343:22346	234166	0	True				
ANR	236400	Identifier	qres		234166	0					
ANR	236401	CompoundStatement		295:12:9630:9630	234166	1					
ANR	236402	ExpressionStatement	type = strdup ( qres )	747:3:22354:22374	234166	0	True				
ANR	236403	AssignmentExpression	type = strdup ( qres )		234166	0		=			
ANR	236404	Identifier	type		234166	0					
ANR	236405	CallExpression	strdup ( qres )		234166	1					
ANR	236406	Callee	strdup		234166	0					
ANR	236407	Identifier	strdup		234166	0					
ANR	236408	ArgumentList	qres		234166	1					
ANR	236409	Argument	qres		234166	0					
ANR	236410	Identifier	qres		234166	0					
ANR	236411	IfStatement	if ( lvar )		234166	27					
ANR	236412	Condition	lvar	749:6:22386:22389	234166	0	True				
ANR	236413	Identifier	lvar		234166	0					
ANR	236414	CompoundStatement		298:12:9673:9673	234166	1					
ANR	236415	ExpressionStatement	"var_retype ( anal , rvar , NULL , lvar -> type , fcn -> addr , false , false )"	751:3:22455:22521	234166	0	True				
ANR	236416	CallExpression	"var_retype ( anal , rvar , NULL , lvar -> type , fcn -> addr , false , false )"		234166	0					
ANR	236417	Callee	var_retype		234166	0					
ANR	236418	Identifier	var_retype		234166	0					
ANR	236419	ArgumentList	anal		234166	1					
ANR	236420	Argument	anal		234166	0					
ANR	236421	Identifier	anal		234166	0					
ANR	236422	Argument	rvar		234166	1					
ANR	236423	Identifier	rvar		234166	0					
ANR	236424	Argument	NULL		234166	2					
ANR	236425	Identifier	NULL		234166	0					
ANR	236426	Argument	lvar -> type		234166	3					
ANR	236427	PtrMemberAccess	lvar -> type		234166	0					
ANR	236428	Identifier	lvar		234166	0					
ANR	236429	Identifier	type		234166	1					
ANR	236430	Argument	fcn -> addr		234166	4					
ANR	236431	PtrMemberAccess	fcn -> addr		234166	0					
ANR	236432	Identifier	fcn		234166	0					
ANR	236433	Identifier	addr		234166	1					
ANR	236434	Argument	false		234166	5					
ANR	236435	Identifier	false		234166	0					
ANR	236436	Argument	false		234166	6					
ANR	236437	Identifier	false		234166	0					
ANR	236438	ExpressionStatement	"var_retype ( anal , lvar , NULL , rvar -> type , fcn -> addr , false , false )"	753:3:22586:22652	234166	1	True				
ANR	236439	CallExpression	"var_retype ( anal , lvar , NULL , rvar -> type , fcn -> addr , false , false )"		234166	0					
ANR	236440	Callee	var_retype		234166	0					
ANR	236441	Identifier	var_retype		234166	0					
ANR	236442	ArgumentList	anal		234166	1					
ANR	236443	Argument	anal		234166	0					
ANR	236444	Identifier	anal		234166	0					
ANR	236445	Argument	lvar		234166	1					
ANR	236446	Identifier	lvar		234166	0					
ANR	236447	Argument	NULL		234166	2					
ANR	236448	Identifier	NULL		234166	0					
ANR	236449	Argument	rvar -> type		234166	3					
ANR	236450	PtrMemberAccess	rvar -> type		234166	0					
ANR	236451	Identifier	rvar		234166	0					
ANR	236452	Identifier	type		234166	1					
ANR	236453	Argument	fcn -> addr		234166	4					
ANR	236454	PtrMemberAccess	fcn -> addr		234166	0					
ANR	236455	Identifier	fcn		234166	0					
ANR	236456	Identifier	addr		234166	1					
ANR	236457	Argument	false		234166	5					
ANR	236458	Identifier	false		234166	0					
ANR	236459	Argument	false		234166	6					
ANR	236460	Identifier	false		234166	0					
ANR	236461	IfStatement	"if ( ! strstr ( lvar -> type , ""int"" ) )"		234166	2					
ANR	236462	Condition	"! strstr ( lvar -> type , ""int"" )"	754:7:22661:22687	234166	0	True				
ANR	236463	UnaryOperationExpression	"! strstr ( lvar -> type , ""int"" )"		234166	0					
ANR	236464	UnaryOperator	!		234166	0					
ANR	236465	CallExpression	"strstr ( lvar -> type , ""int"" )"		234166	1					
ANR	236466	Callee	strstr		234166	0					
ANR	236467	Identifier	strstr		234166	0					
ANR	236468	ArgumentList	lvar -> type		234166	1					
ANR	236469	Argument	lvar -> type		234166	0					
ANR	236470	PtrMemberAccess	lvar -> type		234166	0					
ANR	236471	Identifier	lvar		234166	0					
ANR	236472	Identifier	type		234166	1					
ANR	236473	Argument	"""int"""		234166	1					
ANR	236474	PrimaryExpression	"""int"""		234166	0					
ANR	236475	CompoundStatement		303:36:9971:9971	234166	1					
ANR	236476	ExpressionStatement	res = false	755:4:22696:22707	234166	0	True				
ANR	236477	AssignmentExpression	res = false		234166	0		=			
ANR	236478	Identifier	res		234166	0					
ANR	236479	Identifier	false		234166	1					
ANR	236480	IfStatement	if ( type && res )		234166	28					
ANR	236481	Condition	type && res	758:6:22724:22734	234166	0	True				
ANR	236482	AndExpression	type && res		234166	0		&&			
ANR	236483	Identifier	type		234166	0					
ANR	236484	Identifier	res		234166	1					
ANR	236485	CompoundStatement		307:19:10018:10018	234166	1					
ANR	236486	ExpressionStatement	"var_retype ( anal , rvar , NULL , type , fcn -> addr , false , false )"	761:3:22832:22892	234166	0	True				
ANR	236487	CallExpression	"var_retype ( anal , rvar , NULL , type , fcn -> addr , false , false )"		234166	0					
ANR	236488	Callee	var_retype		234166	0					
ANR	236489	Identifier	var_retype		234166	0					
ANR	236490	ArgumentList	anal		234166	1					
ANR	236491	Argument	anal		234166	0					
ANR	236492	Identifier	anal		234166	0					
ANR	236493	Argument	rvar		234166	1					
ANR	236494	Identifier	rvar		234166	0					
ANR	236495	Argument	NULL		234166	2					
ANR	236496	Identifier	NULL		234166	0					
ANR	236497	Argument	type		234166	3					
ANR	236498	Identifier	type		234166	0					
ANR	236499	Argument	fcn -> addr		234166	4					
ANR	236500	PtrMemberAccess	fcn -> addr		234166	0					
ANR	236501	Identifier	fcn		234166	0					
ANR	236502	Identifier	addr		234166	1					
ANR	236503	Argument	false		234166	5					
ANR	236504	Identifier	false		234166	0					
ANR	236505	Argument	false		234166	6					
ANR	236506	Identifier	false		234166	0					
ANR	236507	IfStatement	if ( lvar )		234166	1					
ANR	236508	Condition	lvar	762:7:22901:22904	234166	0	True				
ANR	236509	Identifier	lvar		234166	0					
ANR	236510	CompoundStatement		311:13:10188:10188	234166	1					
ANR	236511	ExpressionStatement	"var_retype ( anal , lvar , NULL , type , fcn -> addr , false , false )"	763:4:22913:22973	234166	0	True				
ANR	236512	CallExpression	"var_retype ( anal , lvar , NULL , type , fcn -> addr , false , false )"		234166	0					
ANR	236513	Callee	var_retype		234166	0					
ANR	236514	Identifier	var_retype		234166	0					
ANR	236515	ArgumentList	anal		234166	1					
ANR	236516	Argument	anal		234166	0					
ANR	236517	Identifier	anal		234166	0					
ANR	236518	Argument	lvar		234166	1					
ANR	236519	Identifier	lvar		234166	0					
ANR	236520	Argument	NULL		234166	2					
ANR	236521	Identifier	NULL		234166	0					
ANR	236522	Argument	type		234166	3					
ANR	236523	Identifier	type		234166	0					
ANR	236524	Argument	fcn -> addr		234166	4					
ANR	236525	PtrMemberAccess	fcn -> addr		234166	0					
ANR	236526	Identifier	fcn		234166	0					
ANR	236527	Identifier	addr		234166	1					
ANR	236528	Argument	false		234166	5					
ANR	236529	Identifier	false		234166	0					
ANR	236530	Argument	false		234166	6					
ANR	236531	Identifier	false		234166	0					
ANR	236532	ExpressionStatement	free ( type )	766:2:22986:22997	234166	29	True				
ANR	236533	CallExpression	free ( type )		234166	0					
ANR	236534	Callee	free		234166	0					
ANR	236535	Identifier	free		234166	0					
ANR	236536	ArgumentList	type		234166	1					
ANR	236537	Argument	type		234166	0					
ANR	236538	Identifier	type		234166	0					
ANR	236539	ExpressionStatement	r_anal_var_free ( lvar )	767:2:23001:23023	234166	30	True				
ANR	236540	CallExpression	r_anal_var_free ( lvar )		234166	0					
ANR	236541	Callee	r_anal_var_free		234166	0					
ANR	236542	Identifier	r_anal_var_free		234166	0					
ANR	236543	ArgumentList	lvar		234166	1					
ANR	236544	Argument	lvar		234166	0					
ANR	236545	Identifier	lvar		234166	0					
ANR	236546	ExpressionStatement	r_list_free ( list )	769:1:23029:23047	234166	52	True				
ANR	236547	CallExpression	r_list_free ( list )		234166	0					
ANR	236548	Callee	r_list_free		234166	0					
ANR	236549	Identifier	r_list_free		234166	0					
ANR	236550	ArgumentList	list		234166	1					
ANR	236551	Argument	list		234166	0					
ANR	236552	Identifier	list		234166	0					
ANR	236553	IfStatement	if ( fcn -> cc )		234166	53					
ANR	236554	Condition	fcn -> cc	771:5:23131:23137	234166	0	True				
ANR	236555	PtrMemberAccess	fcn -> cc		234166	0					
ANR	236556	Identifier	fcn		234166	0					
ANR	236557	Identifier	cc		234166	1					
ANR	236558	CompoundStatement		321:2:10425:10477	234166	1					
ANR	236559	IdentifierDeclStatement	"const char * place = r_anal_cc_arg ( anal , fcn -> cc , 0 ) ;"	772:2:23144:23196	234166	0	True				
ANR	236560	IdentifierDecl	"* place = r_anal_cc_arg ( anal , fcn -> cc , 0 )"		234166	0					
ANR	236561	IdentifierDeclType	const char *		234166	0					
ANR	236562	Identifier	place		234166	1					
ANR	236563	AssignmentExpression	"* place = r_anal_cc_arg ( anal , fcn -> cc , 0 )"		234166	2		=			
ANR	236564	Identifier	place		234166	0					
ANR	236565	CallExpression	"r_anal_cc_arg ( anal , fcn -> cc , 0 )"		234166	1					
ANR	236566	Callee	r_anal_cc_arg		234166	0					
ANR	236567	Identifier	r_anal_cc_arg		234166	0					
ANR	236568	ArgumentList	anal		234166	1					
ANR	236569	Argument	anal		234166	0					
ANR	236570	Identifier	anal		234166	0					
ANR	236571	Argument	fcn -> cc		234166	1					
ANR	236572	PtrMemberAccess	fcn -> cc		234166	0					
ANR	236573	Identifier	fcn		234166	0					
ANR	236574	Identifier	cc		234166	1					
ANR	236575	Argument	0		234166	2					
ANR	236576	PrimaryExpression	0		234166	0					
ANR	236577	IfStatement	if ( anal -> verbose )		234166	1					
ANR	236578	Condition	anal -> verbose	773:6:23204:23216	234166	0	True				
ANR	236579	PtrMemberAccess	anal -> verbose		234166	0					
ANR	236580	Identifier	anal		234166	0					
ANR	236581	Identifier	verbose		234166	1					
ANR	236582	CompoundStatement		322:21:10500:10500	234166	1					
ANR	236583	ExpressionStatement	"eprintf ( ""[-] place: %s\\n"" , place )"	774:3:23224:23258	234166	0	True				
ANR	236584	CallExpression	"eprintf ( ""[-] place: %s\\n"" , place )"		234166	0					
ANR	236585	Callee	eprintf		234166	0					
ANR	236586	Identifier	eprintf		234166	0					
ANR	236587	ArgumentList	"""[-] place: %s\\n"""		234166	1					
ANR	236588	Argument	"""[-] place: %s\\n"""		234166	0					
ANR	236589	PrimaryExpression	"""[-] place: %s\\n"""		234166	0					
ANR	236590	Argument	place		234166	1					
ANR	236591	Identifier	place		234166	0					
ANR	236592	IfStatement	"if ( place && ! strncmp ( place , ""stack"" , 5 ) )"		234166	2					
ANR	236593	Condition	"place && ! strncmp ( place , ""stack"" , 5 )"	776:6:23270:23306	234166	0	True				
ANR	236594	AndExpression	"place && ! strncmp ( place , ""stack"" , 5 )"		234166	0		&&			
ANR	236595	Identifier	place		234166	0					
ANR	236596	UnaryOperationExpression	"! strncmp ( place , ""stack"" , 5 )"		234166	1					
ANR	236597	UnaryOperator	!		234166	0					
ANR	236598	CallExpression	"strncmp ( place , ""stack"" , 5 )"		234166	1					
ANR	236599	Callee	strncmp		234166	0					
ANR	236600	Identifier	strncmp		234166	0					
ANR	236601	ArgumentList	place		234166	1					
ANR	236602	Argument	place		234166	0					
ANR	236603	Identifier	place		234166	0					
ANR	236604	Argument	"""stack"""		234166	1					
ANR	236605	PrimaryExpression	"""stack"""		234166	0					
ANR	236606	Argument	5		234166	2					
ANR	236607	PrimaryExpression	5		234166	0					
ANR	236608	CompoundStatement		326:3:10595:10658	234166	1					
ANR	236609	IdentifierDeclStatement	"RList * list2 = r_anal_var_list ( anal , fcn , R_ANAL_VAR_KIND_BPV ) ;"	777:3:23314:23377	234166	0	True				
ANR	236610	IdentifierDecl	"* list2 = r_anal_var_list ( anal , fcn , R_ANAL_VAR_KIND_BPV )"		234166	0					
ANR	236611	IdentifierDeclType	RList *		234166	0					
ANR	236612	Identifier	list2		234166	1					
ANR	236613	AssignmentExpression	"* list2 = r_anal_var_list ( anal , fcn , R_ANAL_VAR_KIND_BPV )"		234166	2		=			
ANR	236614	Identifier	list2		234166	0					
ANR	236615	CallExpression	"r_anal_var_list ( anal , fcn , R_ANAL_VAR_KIND_BPV )"		234166	1					
ANR	236616	Callee	r_anal_var_list		234166	0					
ANR	236617	Identifier	r_anal_var_list		234166	0					
ANR	236618	ArgumentList	anal		234166	1					
ANR	236619	Argument	anal		234166	0					
ANR	236620	Identifier	anal		234166	0					
ANR	236621	Argument	fcn		234166	1					
ANR	236622	Identifier	fcn		234166	0					
ANR	236623	Argument	R_ANAL_VAR_KIND_BPV		234166	2					
ANR	236624	Identifier	R_ANAL_VAR_KIND_BPV		234166	0					
ANR	236625	Statement	r_list_foreach	778:3:23382:23395	234166	1	True				
ANR	236626	Statement	(	778:18:23397:23397	234166	2	True				
ANR	236627	Statement	list2	778:19:23398:23402	234166	3	True				
ANR	236628	Statement	","	778:24:23403:23403	234166	4	True				
ANR	236629	Statement	iter2	778:26:23405:23409	234166	5	True				
ANR	236630	Statement	","	778:31:23410:23410	234166	6	True				
ANR	236631	Statement	bp_var	778:33:23412:23417	234166	7	True				
ANR	236632	Statement	)	778:39:23418:23418	234166	8	True				
ANR	236633	CompoundStatement		327:41:10701:10701	234166	9					
ANR	236634	IfStatement	if ( bp_var -> isarg )		234166	0					
ANR	236635	Condition	bp_var -> isarg	779:8:23430:23442	234166	0	True				
ANR	236636	PtrMemberAccess	bp_var -> isarg		234166	0					
ANR	236637	Identifier	bp_var		234166	0					
ANR	236638	Identifier	isarg		234166	1					
ANR	236639	CompoundStatement		330:5:10831:10895	234166	1					
ANR	236640	Statement	const	780:5:23452:23456	234166	0	True				
ANR	236641	Statement	char	780:11:23458:23461	234166	1	True				
ANR	236642	Statement	*	780:16:23463:23463	234166	2	True				
ANR	236643	Statement	query	780:17:23464:23468	234166	3	True				
ANR	236644	Statement	=	780:23:23470:23470	234166	4	True				
ANR	236645	Statement	sdb_fmt	780:25:23472:23478	234166	5	True				
ANR	236646	Statement	(	780:33:23480:23480	234166	6	True				
ANR	236647	Statement	"""fcn.0x%08"""	780:34:23481:23491	234166	7	True				
ANR	236648	Statement	PFMT64x	780:46:23493:23499	234166	8	True				
ANR	236649	Statement	""".arg.%d"""	780:54:23501:23509	234166	9	True				
ANR	236650	Statement	","	780:63:23510:23510	234166	10	True				
ANR	236651	Statement	fcn	780:65:23512:23514	234166	11	True				
ANR	236652	Statement	->	780:68:23515:23516	234166	12	True				
ANR	236653	Statement	addr	780:70:23517:23520	234166	13	True				
ANR	236654	Statement	","	780:74:23521:23521	234166	14	True				
ANR	236655	Statement	(	780:76:23523:23523	234166	15	True				
ANR	236656	Statement	bp_var	780:77:23524:23529	234166	16	True				
ANR	236657	Statement	->	780:83:23530:23531	234166	17	True				
ANR	236658	Statement	delta	780:85:23532:23536	234166	18	True				
ANR	236659	Statement	-	780:91:23538:23538	234166	19	True				
ANR	236660	Statement	8	780:93:23540:23540	234166	20	True				
ANR	236661	Statement	)	780:94:23541:23541	234166	21	True				
ANR	236662	Statement	)	780:95:23542:23542	234166	22	True				
ANR	236663	ExpressionStatement		780:96:23543:23543	234166	23	True				
ANR	236664	IdentifierDeclStatement	"char * type = ( char * ) sdb_const_get ( anal -> sdb_fcns , query , NULL ) ;"	781:5:23550:23614	234166	24	True				
ANR	236665	IdentifierDecl	"* type = ( char * ) sdb_const_get ( anal -> sdb_fcns , query , NULL )"		234166	0					
ANR	236666	IdentifierDeclType	char *		234166	0					
ANR	236667	Identifier	type		234166	1					
ANR	236668	AssignmentExpression	"* type = ( char * ) sdb_const_get ( anal -> sdb_fcns , query , NULL )"		234166	2		=			
ANR	236669	Identifier	type		234166	0					
ANR	236670	CastExpression	"( char * ) sdb_const_get ( anal -> sdb_fcns , query , NULL )"		234166	1					
ANR	236671	CastTarget	char *		234166	0					
ANR	236672	CallExpression	"sdb_const_get ( anal -> sdb_fcns , query , NULL )"		234166	1					
ANR	236673	Callee	sdb_const_get		234166	0					
ANR	236674	Identifier	sdb_const_get		234166	0					
ANR	236675	ArgumentList	anal -> sdb_fcns		234166	1					
ANR	236676	Argument	anal -> sdb_fcns		234166	0					
ANR	236677	PtrMemberAccess	anal -> sdb_fcns		234166	0					
ANR	236678	Identifier	anal		234166	0					
ANR	236679	Identifier	sdb_fcns		234166	1					
ANR	236680	Argument	query		234166	1					
ANR	236681	Identifier	query		234166	0					
ANR	236682	Argument	NULL		234166	2					
ANR	236683	Identifier	NULL		234166	0					
ANR	236684	IfStatement	if ( type )		234166	25					
ANR	236685	Condition	type	782:9:23625:23628	234166	0	True				
ANR	236686	Identifier	type		234166	0					
ANR	236687	CompoundStatement		331:15:10912:10912	234166	1					
ANR	236688	ExpressionStatement	"var_retype ( anal , bp_var , NULL , type , fcn -> addr , false , false )"	783:6:23639:23701	234166	0	True				
ANR	236689	CallExpression	"var_retype ( anal , bp_var , NULL , type , fcn -> addr , false , false )"		234166	0					
ANR	236690	Callee	var_retype		234166	0					
ANR	236691	Identifier	var_retype		234166	0					
ANR	236692	ArgumentList	anal		234166	1					
ANR	236693	Argument	anal		234166	0					
ANR	236694	Identifier	anal		234166	0					
ANR	236695	Argument	bp_var		234166	1					
ANR	236696	Identifier	bp_var		234166	0					
ANR	236697	Argument	NULL		234166	2					
ANR	236698	Identifier	NULL		234166	0					
ANR	236699	Argument	type		234166	3					
ANR	236700	Identifier	type		234166	0					
ANR	236701	Argument	fcn -> addr		234166	4					
ANR	236702	PtrMemberAccess	fcn -> addr		234166	0					
ANR	236703	Identifier	fcn		234166	0					
ANR	236704	Identifier	addr		234166	1					
ANR	236705	Argument	false		234166	5					
ANR	236706	Identifier	false		234166	0					
ANR	236707	Argument	false		234166	6					
ANR	236708	Identifier	false		234166	0					
ANR	236709	ExpressionStatement	r_list_free ( list2 )	787:3:23724:23743	234166	10	True				
ANR	236710	CallExpression	r_list_free ( list2 )		234166	0					
ANR	236711	Callee	r_list_free		234166	0					
ANR	236712	Identifier	r_list_free		234166	0					
ANR	236713	ArgumentList	list2		234166	1					
ANR	236714	Argument	list2		234166	0					
ANR	236715	Identifier	list2		234166	0					
ANR	236716	ElseStatement	else		234166	0					
ANR	236717	CompoundStatement		338:8:11038:11038	234166	0					
ANR	236718	ExpressionStatement	"R_LOG_DEBUG ( ""No calling convention set for function '%s'\\n"" , fcn -> name )"	790:2:23761:23833	234166	0	True				
ANR	236719	CallExpression	"R_LOG_DEBUG ( ""No calling convention set for function '%s'\\n"" , fcn -> name )"		234166	0					
ANR	236720	Callee	R_LOG_DEBUG		234166	0					
ANR	236721	Identifier	R_LOG_DEBUG		234166	0					
ANR	236722	ArgumentList	"""No calling convention set for function '%s'\\n"""		234166	1					
ANR	236723	Argument	"""No calling convention set for function '%s'\\n"""		234166	0					
ANR	236724	PrimaryExpression	"""No calling convention set for function '%s'\\n"""		234166	0					
ANR	236725	Argument	fcn -> name		234166	1					
ANR	236726	PtrMemberAccess	fcn -> name		234166	0					
ANR	236727	Identifier	fcn		234166	0					
ANR	236728	Identifier	name		234166	1					
ANR	236729	Label	out_function :	792:0:23838:23850	234166	54	True				
ANR	236730	Identifier	out_function		234166	0					
ANR	236731	ExpressionStatement	R_FREE ( ret_reg )	793:1:23853:23869	234166	55	True				
ANR	236732	CallExpression	R_FREE ( ret_reg )		234166	0					
ANR	236733	Callee	R_FREE		234166	0					
ANR	236734	Identifier	R_FREE		234166	0					
ANR	236735	ArgumentList	ret_reg		234166	1					
ANR	236736	Argument	ret_reg		234166	0					
ANR	236737	Identifier	ret_reg		234166	0					
ANR	236738	ExpressionStatement	R_FREE ( ret_type )	794:1:23872:23889	234166	56	True				
ANR	236739	CallExpression	R_FREE ( ret_type )		234166	0					
ANR	236740	Callee	R_FREE		234166	0					
ANR	236741	Identifier	R_FREE		234166	0					
ANR	236742	ArgumentList	ret_type		234166	1					
ANR	236743	Argument	ret_type		234166	0					
ANR	236744	Identifier	ret_type		234166	0					
ANR	236745	ExpressionStatement	free ( buf )	795:1:23892:23902	234166	57	True				
ANR	236746	CallExpression	free ( buf )		234166	0					
ANR	236747	Callee	free		234166	0					
ANR	236748	Identifier	free		234166	0					
ANR	236749	ArgumentList	buf		234166	1					
ANR	236750	Argument	buf		234166	0					
ANR	236751	Identifier	buf		234166	0					
ANR	236752	ExpressionStatement	r_cons_break_pop ( )	796:1:23905:23923	234166	58	True				
ANR	236753	CallExpression	r_cons_break_pop ( )		234166	0					
ANR	236754	Callee	r_cons_break_pop		234166	0					
ANR	236755	Identifier	r_cons_break_pop		234166	0					
ANR	236756	ArgumentList			234166	1					
ANR	236757	ExpressionStatement	"r_anal_emul_restore ( core , hc )"	797:1:23926:23956	234166	59	True				
ANR	236758	CallExpression	"r_anal_emul_restore ( core , hc )"		234166	0					
ANR	236759	Callee	r_anal_emul_restore		234166	0					
ANR	236760	Identifier	r_anal_emul_restore		234166	0					
ANR	236761	ArgumentList	core		234166	1					
ANR	236762	Argument	core		234166	0					
ANR	236763	Identifier	core		234166	0					
ANR	236764	Argument	hc		234166	1					
ANR	236765	Identifier	hc		234166	0					
ANR	236766	ExpressionStatement	sdb_reset ( anal -> esil -> db_trace )	798:1:23959:23991	234166	60	True				
ANR	236767	CallExpression	sdb_reset ( anal -> esil -> db_trace )		234166	0					
ANR	236768	Callee	sdb_reset		234166	0					
ANR	236769	Identifier	sdb_reset		234166	0					
ANR	236770	ArgumentList	anal -> esil -> db_trace		234166	1					
ANR	236771	Argument	anal -> esil -> db_trace		234166	0					
ANR	236772	PtrMemberAccess	anal -> esil -> db_trace		234166	0					
ANR	236773	PtrMemberAccess	anal -> esil		234166	0					
ANR	236774	Identifier	anal		234166	0					
ANR	236775	Identifier	esil		234166	1					
ANR	236776	Identifier	db_trace		234166	1					
ANR	236777	ReturnType	R_API void		234166	1					
ANR	236778	Identifier	r_core_anal_type_match		234166	2					
ANR	236779	ParameterList	"RCore * core , RAnalFunction * fcn"		234166	3					
ANR	236780	Parameter	RCore * core	452:34:12685:12695	234166	0	True				
ANR	236781	ParameterType	RCore *		234166	0					
ANR	236782	Identifier	core		234166	1					
ANR	236783	Parameter	RAnalFunction * fcn	452:47:12698:12715	234166	1	True				
ANR	236784	ParameterType	RAnalFunction *		234166	0					
ANR	236785	Identifier	fcn		234166	1					
ANR	236786	CFGEntryNode	ENTRY		234166		True				
ANR	236787	CFGExitNode	EXIT		234166		True				
ANR	236788	CFGErrorNode	ERROR		234166		True				
ANR	236789	Symbol	aop		234166						
ANR	236790	Symbol	* fcn		234166						
ANR	236791	Symbol	R_REG_NAME_PC		234166						
ANR	236792	Symbol	strchr		234166						
ANR	236793	Symbol	next_op -> cond		234166						
ANR	236794	Symbol	sdb_const_get		234166						
ANR	236795	Symbol	* rvar		234166						
ANR	236796	Symbol	strncmp		234166						
ANR	236797	Symbol	pcval		234166						
ANR	236798	Symbol	core -> anal -> esil		234166						
ANR	236799	Symbol	rvar -> delta		234166						
ANR	236800	Symbol	r_flag_get_i		234166						
ANR	236801	Symbol	prev_type		234166						
ANR	236802	Symbol	r_anal_op		234166						
ANR	236803	Symbol	core -> blocksize		234166						
ANR	236804	Symbol	aop . ptr		234166						
ANR	236805	Symbol	bp_var		234166						
ANR	236806	Symbol	core -> print -> big_endian		234166						
ANR	236807	Symbol	R_ANAL_VAR_KIND_BPV		234166						
ANR	236808	Symbol	full_name		234166						
ANR	236809	Symbol	r_config_get_i		234166						
ANR	236810	Symbol	r_read_ble		234166						
ANR	236811	Symbol	MAX_INSTR		234166						
ANR	236812	Symbol	anal -> sdb_types		234166						
ANR	236813	Symbol	* flag		234166						
ANR	236814	Symbol	* core -> dbg		234166						
ANR	236815	Symbol	r_anal_fcn_bbget_in		234166						
ANR	236816	Symbol	bb		234166						
ANR	236817	Symbol	rr		234166						
ANR	236818	Symbol	rt		234166						
ANR	236819	Symbol	f -> name		234166						
ANR	236820	Symbol	* jmp_op		234166						
ANR	236821	Symbol	* core		234166						
ANR	236822	Symbol	var -> type		234166						
ANR	236823	Symbol	core -> anal		234166						
ANR	236824	Symbol	* var		234166						
ANR	236825	Symbol	r_cons_is_breaked		234166						
ANR	236826	Symbol	core -> io		234166						
ANR	236827	Symbol	r_config_hold_new		234166						
ANR	236828	Symbol	resolved		234166						
ANR	236829	Symbol	R_ANAL_ARCHINFO_MIN_OP_SIZE		234166						
ANR	236830	Symbol	r_str_startswith		234166						
ANR	236831	Symbol	cc		234166						
ANR	236832	Symbol	LOOP_MAX		234166						
ANR	236833	Symbol	* tmp ++		234166						
ANR	236834	Symbol	ret_type		234166						
ANR	236835	Symbol	f		234166						
ANR	236836	Symbol	i		234166						
ANR	236837	Symbol	core -> flags		234166						
ANR	236838	Symbol	next_op -> type		234166						
ANR	236839	Symbol	buf		234166						
ANR	236840	Symbol	r		234166						
ANR	236841	Symbol	* core -> print		234166						
ANR	236842	Symbol	loop_count		234166						
ANR	236843	Symbol	* mop		234166						
ANR	236844	Symbol	fcn -> addr		234166						
ANR	236845	Symbol	fcn_call -> name		234166						
ANR	236846	Symbol	cur_dest		234166						
ANR	236847	Symbol	Cc		234166						
ANR	236848	Symbol	r_anal_emul_init		234166						
ANR	236849	Symbol	nsrc		234166						
ANR	236850	Symbol	jmpbb		234166						
ANR	236851	Symbol	bp_var -> isarg		234166						
ANR	236852	Symbol	fcn -> name		234166						
ANR	236853	Symbol	aop . type		234166						
ANR	236854	Symbol	r_core_anal_op		234166						
ANR	236855	Symbol	* src		234166						
ANR	236856	Symbol	r_anal_cc_ret		234166						
ANR	236857	Symbol	reg		234166						
ANR	236858	Symbol	ret_reg		234166						
ANR	236859	Symbol	jmp_op -> type		234166						
ANR	236860	Symbol	ret		234166						
ANR	236861	Symbol	res		234166						
ANR	236862	Symbol	R_ANAL_OP_TYPE_CJMP		234166						
ANR	236863	Symbol	R_ANAL_OP_MASK_VAL		234166						
ANR	236864	Symbol	query		234166						
ANR	236865	Symbol	jmp_addr		234166						
ANR	236866	Symbol	callee_addr		234166						
ANR	236867	Symbol	list		234166						
ANR	236868	Symbol	r_reg_get_name		234166						
ANR	236869	Symbol	next_op		234166						
ANR	236870	Symbol	strstr		234166						
ANR	236871	Symbol	R_ANAL_OP_TYPE_CALL		234166						
ANR	236872	Symbol	get_link_var		234166						
ANR	236873	Symbol	qres		234166						
ANR	236874	Symbol	mop -> type		234166						
ANR	236875	Symbol	prev_idx		234166						
ANR	236876	Symbol	jmp_op		234166						
ANR	236877	Symbol	foo		234166						
ANR	236878	Symbol	R_ANAL_OP_MASK_BASIC		234166						
ANR	236879	Symbol	* lvar		234166						
ANR	236880	Symbol	* anal		234166						
ANR	236881	Symbol	str_flag		234166						
ANR	236882	Symbol	fcn -> cc		234166						
ANR	236883	Symbol	r_anal_cc_arg		234166						
ANR	236884	Symbol	sdb_fmt		234166						
ANR	236885	Symbol	* anal -> esil		234166						
ANR	236886	Symbol	false		234166						
ANR	236887	Symbol	aop . var		234166						
ANR	236888	Symbol	r_reg_index_get		234166						
ANR	236889	Symbol	aop . val		234166						
ANR	236890	Symbol	ptr		234166						
ANR	236891	Symbol	r_type_func_ret		234166						
ANR	236892	Symbol	r_anal_get_fcn_in		234166						
ANR	236893	Symbol	bsize		234166						
ANR	236894	Symbol	hc		234166						
ANR	236895	Symbol	strdup		234166						
ANR	236896	Symbol	r_anal_bb_is_in_offset		234166						
ANR	236897	Symbol	prev_dest		234166						
ANR	236898	Symbol	mininstrsz		234166						
ANR	236899	Symbol	aop . disp		234166						
ANR	236900	Symbol	lvar		234166						
ANR	236901	Symbol	mop -> var		234166						
ANR	236902	Symbol	type		234166						
ANR	236903	Symbol	cond		234166						
ANR	236904	Symbol	minopcode		234166						
ANR	236905	Symbol	mop		234166						
ANR	236906	Symbol	aop . sign		234166						
ANR	236907	Symbol	prev_var		234166						
ANR	236908	Symbol	tmp		234166						
ANR	236909	Symbol	R_ANAL_OP_DIR_READ		234166						
ANR	236910	Symbol	fcn_call -> addr		234166						
ANR	236911	Symbol	cond_invert		234166						
ANR	236912	Symbol	cur_idx		234166						
ANR	236913	Symbol	var		234166						
ANR	236914	Symbol	* bp_var		234166						
ANR	236915	Symbol	iter		234166						
ANR	236916	Symbol	it		234166						
ANR	236917	Symbol	& aop		234166						
ANR	236918	Symbol	anal		234166						
ANR	236919	Symbol	anal -> verbose		234166						
ANR	236920	Symbol	next_op -> addr		234166						
ANR	236921	Symbol	rvar		234166						
ANR	236922	Symbol	flag		234166						
ANR	236923	Symbol	mov_addr		234166						
ANR	236924	Symbol	* nsrc		234166						
ANR	236925	Symbol	anal -> sdb_fcns		234166						
ANR	236926	Symbol	fcn		234166						
ANR	236927	Symbol	R_ANAL_OP_TYPE_UCALL		234166						
ANR	236928	Symbol	* * anal		234166						
ANR	236929	Symbol	fcn_call		234166						
ANR	236930	Symbol	r_type_func_guess		234166						
ANR	236931	Symbol	r_anal_cc_func		234166						
ANR	236932	Symbol	aop . direction		234166						
ANR	236933	Symbol	prop		234166						
ANR	236934	Symbol	place		234166						
ANR	236935	Symbol	fcn_name		234166						
ANR	236936	Symbol	R_ANAL_OP_TYPE_RET		234166						
ANR	236937	Symbol	R_ANAL_VAR_KIND_REG		234166						
ANR	236938	Symbol	malloc		234166						
ANR	236939	Symbol	lvar -> type		234166						
ANR	236940	Symbol	anal -> esil -> trace_idx		234166						
ANR	236941	Symbol	next_op -> jump		234166						
ANR	236942	Symbol	* core -> anal		234166						
ANR	236943	Symbol	core -> dbg -> reg		234166						
ANR	236944	Symbol	list2		234166						
ANR	236945	Symbol	R_MAX		234166						
ANR	236946	Symbol	r_anal_op_nonlinear		234166						
ANR	236947	Symbol	aop . jump		234166						
ANR	236948	Symbol	anal -> reg		234166						
ANR	236949	Symbol	bb -> size		234166						
ANR	236950	Symbol	r_anal_archinfo		234166						
ANR	236951	Symbol	sign		234166						
ANR	236952	Symbol	bb -> addr		234166						
ANR	236953	Symbol	jmp		234166						
ANR	236954	Symbol	R_ANAL_OP_TYPE_STORE		234166						
ANR	236955	Symbol	r_type_func_exist		234166						
ANR	236956	Symbol	r_anal_cc_exist		234166						
ANR	236957	Symbol	R_ANAL_OP_DIR_WRITE		234166						
ANR	236958	Symbol	r_reg_get		234166						
ANR	236959	Symbol	strcmp		234166						
ANR	236960	Symbol	jmp_op -> size		234166						
ANR	236961	Symbol	NULL		234166						
ANR	236962	Symbol	aop . refptr		234166						
ANR	236963	Symbol	rvar -> type		234166						
ANR	236964	Symbol	R_ANAL_OP_TYPE_MOV		234166						
ANR	236965	Symbol	core		234166						
ANR	236966	Symbol	true		234166						
ANR	236967	Symbol	r_reg_getv		234166						
ANR	236968	Symbol	* fcn_call		234166						
ANR	236969	Symbol	aop . addr		234166						
ANR	236970	Symbol	core -> print		234166						
ANR	236971	Symbol	R_ANAL_OP_TYPE_MASK		234166						
ANR	236972	Symbol	* next_op		234166						
ANR	236973	Symbol	REG_SZ		234166						
ANR	236974	Symbol	R_ANAL_OP_TYPE_LOAD		234166						
ANR	236975	Symbol	userfnc		234166						
ANR	236976	Symbol	anal -> esil -> db_trace		234166						
ANR	236977	Symbol	trace		234166						
ANR	236978	Symbol	TDB		234166						
ANR	236979	Symbol	chk_constraint		234166						
ANR	236980	Symbol	addr		234166						
ANR	236981	Symbol	UT64_MAX		234166						
ANR	236982	Symbol	r_flag_exist_at		234166						
ANR	236983	Symbol	* * core		234166						
ANR	236984	Symbol	core -> config		234166						
ANR	236985	Symbol	sdb_num_get		234166						
ANR	236986	Symbol	* bb		234166						
ANR	236987	Symbol	src		234166						
ANR	236988	Symbol	next_op -> sign		234166						
ANR	236989	Symbol	iter2		234166						
ANR	236990	Symbol	match		234166						
ANR	236991	Symbol	sdb_get		234166						
ANR	236992	Symbol	* f		234166						
ANR	236993	Symbol	flag -> realname		234166						
ANR	236994	Symbol	pc		234166						
ANR	236995	Symbol	r_anal_var_list		234166						
ANR	236996	Symbol	R_ANAL_OP_TYPE_CMP		234166						
ANR	236997	Symbol	anal -> esil		234166						
ANR	236998	Symbol	core -> dbg		234166						
