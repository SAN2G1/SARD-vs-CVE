command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	5391333	File	data/converged/CVE-2019-16718~_radare2/misc.c								
ANR	5391334	DeclStmt									
ANR	5391335	Decl							include < grub / i18n . h >	include < grub / i18n . h > ( grub_memmove )	GRUB_EXPORT
ANR	5391336	DeclStmt									
ANR	5391337	Decl							int	"int ( char * str , grub_size_t n , const char * fmt , va_list args )"	grub_vsnprintf_real
ANR	5391338	Function	grub_iswordseparator	68:0:2004:2123							
ANR	5391339	FunctionDef	grub_iswordseparator (int c)		5391338	0					
ANR	5391340	CompoundStatement		70:0:2044:2123	5391338	0					
ANR	5391341	ReturnStatement	"return ( grub_isspace ( c ) || c == ',' || c == ';' || c == '|' || c == '&' ) ;"	71:2:2048:2121	5391338	0	True				
ANR	5391342	OrExpression	"grub_isspace ( c ) || c == ',' || c == ';' || c == '|' || c == '&'"		5391338	0		||			
ANR	5391343	CallExpression	grub_isspace ( c )		5391338	0					
ANR	5391344	Callee	grub_isspace		5391338	0					
ANR	5391345	Identifier	grub_isspace		5391338	0					
ANR	5391346	ArgumentList	c		5391338	1					
ANR	5391347	Argument	c		5391338	0					
ANR	5391348	Identifier	c		5391338	0					
ANR	5391349	OrExpression	"c == ',' || c == ';' || c == '|' || c == '&'"		5391338	1		||			
ANR	5391350	EqualityExpression	"c == ','"		5391338	0		==			
ANR	5391351	Identifier	c		5391338	0					
ANR	5391352	PrimaryExpression	"','"		5391338	1					
ANR	5391353	OrExpression	c == ';' || c == '|' || c == '&'		5391338	1		||			
ANR	5391354	EqualityExpression	c == ';'		5391338	0		==			
ANR	5391355	Identifier	c		5391338	0					
ANR	5391356	PrimaryExpression	';'		5391338	1					
ANR	5391357	OrExpression	c == '|' || c == '&'		5391338	1		||			
ANR	5391358	EqualityExpression	c == '|'		5391338	0		==			
ANR	5391359	Identifier	c		5391338	0					
ANR	5391360	PrimaryExpression	'|'		5391338	1					
ANR	5391361	EqualityExpression	c == '&'		5391338	1		==			
ANR	5391362	Identifier	c		5391338	0					
ANR	5391363	PrimaryExpression	'&'		5391338	1					
ANR	5391364	ReturnType	static int		5391338	1					
ANR	5391365	Identifier	grub_iswordseparator		5391338	2					
ANR	5391366	ParameterList	int c		5391338	3					
ANR	5391367	Parameter	int c	69:22:2037:2041	5391338	0	True				
ANR	5391368	ParameterType	int		5391338	0					
ANR	5391369	Identifier	c		5391338	1					
ANR	5391370	CFGEntryNode	ENTRY		5391338		True				
ANR	5391371	CFGExitNode	EXIT		5391338		True				
ANR	5391372	Symbol	c		5391338						
ANR	5391373	Symbol	grub_isspace		5391338						
ANR	5391374	Function	grub_gettext_dummy	75:0:2181:2250							
ANR	5391375	FunctionDef	grub_gettext_dummy (const char * s)		5391374	0					
ANR	5391376	CompoundStatement		77:0:2236:2250	5391374	0					
ANR	5391377	ReturnStatement	return s ;	78:2:2240:2248	5391374	0	True				
ANR	5391378	Identifier	s		5391374	0					
ANR	5391379	ReturnType	static const char *		5391374	1					
ANR	5391380	Identifier	grub_gettext_dummy		5391374	2					
ANR	5391381	ParameterList	const char * s		5391374	3					
ANR	5391382	Parameter	const char * s	76:20:2221:2233	5391374	0	True				
ANR	5391383	ParameterType	const char *		5391374	0					
ANR	5391384	Identifier	s		5391374	1					
ANR	5391385	CFGEntryNode	ENTRY		5391374		True				
ANR	5391386	CFGExitNode	EXIT		5391374		True				
ANR	5391387	Symbol	s		5391374						
ANR	5391388	DeclStmt									
ANR	5391389	Decl							const char * ( * ) ( const char * s )	const char * ( * ) ( const char * s )	grub_gettext
ANR	5391390	Function	grub_memmove	83:0:2320:2597							
ANR	5391391	FunctionDef	"grub_memmove (void * dest , const void * src , grub_size_t n)"		5391390	0					
ANR	5391392	CompoundStatement		85:0:2385:2597	5391390	0					
ANR	5391393	IdentifierDeclStatement	char * d = ( char * ) dest ;	86:2:2389:2412	5391390	0	True				
ANR	5391394	IdentifierDecl	* d = ( char * ) dest		5391390	0					
ANR	5391395	IdentifierDeclType	char *		5391390	0					
ANR	5391396	Identifier	d		5391390	1					
ANR	5391397	AssignmentExpression	* d = ( char * ) dest		5391390	2		=			
ANR	5391398	Identifier	d		5391390	0					
ANR	5391399	CastExpression	( char * ) dest		5391390	1					
ANR	5391400	CastTarget	char *		5391390	0					
ANR	5391401	Identifier	dest		5391390	1					
ANR	5391402	IdentifierDeclStatement	const char * s = ( const char * ) src ;	87:2:2416:2450	5391390	1	True				
ANR	5391403	IdentifierDecl	* s = ( const char * ) src		5391390	0					
ANR	5391404	IdentifierDeclType	const char *		5391390	0					
ANR	5391405	Identifier	s		5391390	1					
ANR	5391406	AssignmentExpression	* s = ( const char * ) src		5391390	2		=			
ANR	5391407	Identifier	s		5391390	0					
ANR	5391408	CastExpression	( const char * ) src		5391390	1					
ANR	5391409	CastTarget	const char *		5391390	0					
ANR	5391410	Identifier	src		5391390	1					
ANR	5391411	IfStatement	if ( d < s )		5391390	2					
ANR	5391412	Condition	d < s	89:6:2459:2463	5391390	0	True				
ANR	5391413	RelationalExpression	d < s		5391390	0		<			
ANR	5391414	Identifier	d		5391390	0					
ANR	5391415	Identifier	s		5391390	1					
ANR	5391416	WhileStatement	while ( n -- )		5391390	1					
ANR	5391417	Condition	n --	90:11:2477:2479	5391390	0	True				
ANR	5391418	PostIncDecOperationExpression	n --		5391390	0					
ANR	5391419	Identifier	n		5391390	0					
ANR	5391420	IncDec	--		5391390	1					
ANR	5391421	ExpressionStatement	* d ++ = * s ++	91:6:2488:2499	5391390	1	True				
ANR	5391422	AssignmentExpression	* d ++ = * s ++		5391390	0		=			
ANR	5391423	UnaryOperationExpression	* d ++		5391390	0					
ANR	5391424	UnaryOperator	*		5391390	0					
ANR	5391425	PostIncDecOperationExpression	d ++		5391390	1					
ANR	5391426	Identifier	d		5391390	0					
ANR	5391427	IncDec	++		5391390	1					
ANR	5391428	UnaryOperationExpression	* s ++		5391390	1					
ANR	5391429	UnaryOperator	*		5391390	0					
ANR	5391430	PostIncDecOperationExpression	s ++		5391390	1					
ANR	5391431	Identifier	s		5391390	0					
ANR	5391432	IncDec	++		5391390	1					
ANR	5391433	ElseStatement	else		5391390	0					
ANR	5391434	CompoundStatement		9:4:126:126	5391390	0					
ANR	5391435	ExpressionStatement	d += n	94:6:2520:2526	5391390	0	True				
ANR	5391436	AssignmentExpression	d += n		5391390	0		+=			
ANR	5391437	Identifier	d		5391390	0					
ANR	5391438	Identifier	n		5391390	1					
ANR	5391439	ExpressionStatement	s += n	95:6:2534:2540	5391390	1	True				
ANR	5391440	AssignmentExpression	s += n		5391390	0		+=			
ANR	5391441	Identifier	s		5391390	0					
ANR	5391442	Identifier	n		5391390	1					
ANR	5391443	WhileStatement	while ( n -- )		5391390	2					
ANR	5391444	Condition	n --	97:13:2556:2558	5391390	0	True				
ANR	5391445	PostIncDecOperationExpression	n --		5391390	0					
ANR	5391446	Identifier	n		5391390	0					
ANR	5391447	IncDec	--		5391390	1					
ANR	5391448	ExpressionStatement	* -- d = * -- s	98:1:2562:2573	5391390	1	True				
ANR	5391449	AssignmentExpression	* -- d = * -- s		5391390	0		=			
ANR	5391450	UnaryOperationExpression	* -- d		5391390	0					
ANR	5391451	UnaryOperator	*		5391390	0					
ANR	5391452	UnaryExpression	-- d		5391390	1					
ANR	5391453	IncDec	--		5391390	0					
ANR	5391454	Identifier	d		5391390	1					
ANR	5391455	UnaryOperationExpression	* -- s		5391390	1					
ANR	5391456	UnaryOperator	*		5391390	0					
ANR	5391457	UnaryExpression	-- s		5391390	1					
ANR	5391458	IncDec	--		5391390	0					
ANR	5391459	Identifier	s		5391390	1					
ANR	5391460	ReturnStatement	return dest ;	101:2:2584:2595	5391390	3	True				
ANR	5391461	Identifier	dest		5391390	0					
ANR	5391462	ReturnType	void *		5391390	1					
ANR	5391463	Identifier	grub_memmove		5391390	2					
ANR	5391464	ParameterList	"void * dest , const void * src , grub_size_t n"		5391390	3					
ANR	5391465	Parameter	void * dest	84:14:2341:2350	5391390	0	True				
ANR	5391466	ParameterType	void *		5391390	0					
ANR	5391467	Identifier	dest		5391390	1					
ANR	5391468	Parameter	const void * src	84:26:2353:2367	5391390	1	True				
ANR	5391469	ParameterType	const void *		5391390	0					
ANR	5391470	Identifier	src		5391390	1					
ANR	5391471	Parameter	grub_size_t n	84:43:2370:2382	5391390	2	True				
ANR	5391472	ParameterType	grub_size_t		5391390	0					
ANR	5391473	Identifier	n		5391390	1					
ANR	5391474	CFGEntryNode	ENTRY		5391390		True				
ANR	5391475	CFGExitNode	EXIT		5391390		True				
ANR	5391476	Symbol	* s ++		5391390						
ANR	5391477	Symbol	s		5391390						
ANR	5391478	Symbol	d		5391390						
ANR	5391479	Symbol	src		5391390						
ANR	5391480	Symbol	* -- d		5391390						
ANR	5391481	Symbol	* -- s		5391390						
ANR	5391482	Symbol	dest		5391390						
ANR	5391483	Symbol	* s		5391390						
ANR	5391484	Symbol	n		5391390						
ANR	5391485	Symbol	* d ++		5391390						
ANR	5391486	Symbol	* d		5391390						
ANR	5391487	Function	grub_strcpy	104:0:2600:2726							
ANR	5391488	FunctionDef	"grub_strcpy (char * dest , const char * src)"		5391487	0					
ANR	5391489	CompoundStatement		106:0:2649:2726	5391487	0					
ANR	5391490	IdentifierDeclStatement	char * p = dest ;	107:2:2653:2667	5391487	0	True				
ANR	5391491	IdentifierDecl	* p = dest		5391487	0					
ANR	5391492	IdentifierDeclType	char *		5391487	0					
ANR	5391493	Identifier	p		5391487	1					
ANR	5391494	AssignmentExpression	* p = dest		5391487	2		=			
ANR	5391495	Identifier	dest		5391487	0					
ANR	5391496	Identifier	dest		5391487	1					
ANR	5391497	WhileStatement	while ( ( * p ++ = * src ++ ) != '\\0' )		5391487	1					
ANR	5391498	Condition	( * p ++ = * src ++ ) != '\\0'	109:9:2679:2701	5391487	0	True				
ANR	5391499	EqualityExpression	( * p ++ = * src ++ ) != '\\0'		5391487	0		!=			
ANR	5391500	AssignmentExpression	* p ++ = * src ++		5391487	0		=			
ANR	5391501	UnaryOperationExpression	* p ++		5391487	0					
ANR	5391502	UnaryOperator	*		5391487	0					
ANR	5391503	PostIncDecOperationExpression	p ++		5391487	1					
ANR	5391504	Identifier	p		5391487	0					
ANR	5391505	IncDec	++		5391487	1					
ANR	5391506	UnaryOperationExpression	* src ++		5391487	1					
ANR	5391507	UnaryOperator	*		5391487	0					
ANR	5391508	PostIncDecOperationExpression	src ++		5391487	1					
ANR	5391509	Identifier	src		5391487	0					
ANR	5391510	IncDec	++		5391487	1					
ANR	5391511	PrimaryExpression	'\\0'		5391487	1					
ANR	5391512	ExpressionStatement		110:4:2708:2708	5391487	1	True				
ANR	5391513	ReturnStatement	return dest ;	112:2:2713:2724	5391487	2	True				
ANR	5391514	Identifier	dest		5391487	0					
ANR	5391515	ReturnType	char *		5391487	1					
ANR	5391516	Identifier	grub_strcpy		5391487	2					
ANR	5391517	ParameterList	"char * dest , const char * src"		5391487	3					
ANR	5391518	Parameter	char * dest	105:13:2620:2629	5391487	0	True				
ANR	5391519	ParameterType	char *		5391487	0					
ANR	5391520	Identifier	dest		5391487	1					
ANR	5391521	Parameter	const char * src	105:25:2632:2646	5391487	1	True				
ANR	5391522	ParameterType	const char *		5391487	0					
ANR	5391523	Identifier	src		5391487	1					
ANR	5391524	CFGEntryNode	ENTRY		5391487		True				
ANR	5391525	CFGExitNode	EXIT		5391487		True				
ANR	5391526	Symbol	p		5391487						
ANR	5391527	Symbol	src		5391487						
ANR	5391528	Symbol	* p ++		5391487						
ANR	5391529	Symbol	* src ++		5391487						
ANR	5391530	Symbol	dest		5391487						
ANR	5391531	Function	grub_strncpy	115:0:2729:2870							
ANR	5391532	FunctionDef	"grub_strncpy (char * dest , const char * src , int c)"		5391531	0					
ANR	5391533	CompoundStatement		117:0:2786:2870	5391531	0					
ANR	5391534	IdentifierDeclStatement	char * p = dest ;	118:2:2790:2804	5391531	0	True				
ANR	5391535	IdentifierDecl	* p = dest		5391531	0					
ANR	5391536	IdentifierDeclType	char *		5391531	0					
ANR	5391537	Identifier	p		5391531	1					
ANR	5391538	AssignmentExpression	* p = dest		5391531	2		=			
ANR	5391539	Identifier	dest		5391531	0					
ANR	5391540	Identifier	dest		5391531	1					
ANR	5391541	WhileStatement	while ( ( * p ++ = * src ++ ) != '\\0' && -- c )		5391531	1					
ANR	5391542	Condition	( * p ++ = * src ++ ) != '\\0' && -- c	120:9:2816:2845	5391531	0	True				
ANR	5391543	AndExpression	( * p ++ = * src ++ ) != '\\0' && -- c		5391531	0		&&			
ANR	5391544	EqualityExpression	( * p ++ = * src ++ ) != '\\0'		5391531	0		!=			
ANR	5391545	AssignmentExpression	* p ++ = * src ++		5391531	0		=			
ANR	5391546	UnaryOperationExpression	* p ++		5391531	0					
ANR	5391547	UnaryOperator	*		5391531	0					
ANR	5391548	PostIncDecOperationExpression	p ++		5391531	1					
ANR	5391549	Identifier	p		5391531	0					
ANR	5391550	IncDec	++		5391531	1					
ANR	5391551	UnaryOperationExpression	* src ++		5391531	1					
ANR	5391552	UnaryOperator	*		5391531	0					
ANR	5391553	PostIncDecOperationExpression	src ++		5391531	1					
ANR	5391554	Identifier	src		5391531	0					
ANR	5391555	IncDec	++		5391531	1					
ANR	5391556	PrimaryExpression	'\\0'		5391531	1					
ANR	5391557	UnaryExpression	-- c		5391531	1					
ANR	5391558	IncDec	--		5391531	0					
ANR	5391559	Identifier	c		5391531	1					
ANR	5391560	ExpressionStatement		121:4:2852:2852	5391531	1	True				
ANR	5391561	ReturnStatement	return dest ;	123:2:2857:2868	5391531	2	True				
ANR	5391562	Identifier	dest		5391531	0					
ANR	5391563	ReturnType	char *		5391531	1					
ANR	5391564	Identifier	grub_strncpy		5391531	2					
ANR	5391565	ParameterList	"char * dest , const char * src , int c"		5391531	3					
ANR	5391566	Parameter	char * dest	116:14:2750:2759	5391531	0	True				
ANR	5391567	ParameterType	char *		5391531	0					
ANR	5391568	Identifier	dest		5391531	1					
ANR	5391569	Parameter	const char * src	116:26:2762:2776	5391531	1	True				
ANR	5391570	ParameterType	const char *		5391531	0					
ANR	5391571	Identifier	src		5391531	1					
ANR	5391572	Parameter	int c	116:43:2779:2783	5391531	2	True				
ANR	5391573	ParameterType	int		5391531	0					
ANR	5391574	Identifier	c		5391531	1					
ANR	5391575	CFGEntryNode	ENTRY		5391531		True				
ANR	5391576	CFGExitNode	EXIT		5391531		True				
ANR	5391577	Symbol	p		5391531						
ANR	5391578	Symbol	c		5391531						
ANR	5391579	Symbol	src		5391531						
ANR	5391580	Symbol	* p ++		5391531						
ANR	5391581	Symbol	* src ++		5391531						
ANR	5391582	Symbol	dest		5391531						
ANR	5391583	Function	grub_stpcpy	126:0:2873:3027							
ANR	5391584	FunctionDef	"grub_stpcpy (char * dest , const char * src)"		5391583	0					
ANR	5391585	CompoundStatement		128:0:2922:3027	5391583	0					
ANR	5391586	IdentifierDeclStatement	char * d = dest ;	129:2:2926:2940	5391583	0	True				
ANR	5391587	IdentifierDecl	* d = dest		5391583	0					
ANR	5391588	IdentifierDeclType	char *		5391583	0					
ANR	5391589	Identifier	d		5391583	1					
ANR	5391590	AssignmentExpression	* d = dest		5391583	2		=			
ANR	5391591	Identifier	dest		5391583	0					
ANR	5391592	Identifier	dest		5391583	1					
ANR	5391593	IdentifierDeclStatement	const char * s = src ;	130:2:2944:2963	5391583	1	True				
ANR	5391594	IdentifierDecl	* s = src		5391583	0					
ANR	5391595	IdentifierDeclType	const char *		5391583	0					
ANR	5391596	Identifier	s		5391583	1					
ANR	5391597	AssignmentExpression	* s = src		5391583	2		=			
ANR	5391598	Identifier	src		5391583	0					
ANR	5391599	Identifier	src		5391583	1					
ANR	5391600	DoStatement	do		5391583	2					
ANR	5391601	ExpressionStatement	* d ++ = * s	133:4:2975:2984	5391583	0	True				
ANR	5391602	AssignmentExpression	* d ++ = * s		5391583	0		=			
ANR	5391603	UnaryOperationExpression	* d ++		5391583	0					
ANR	5391604	UnaryOperator	*		5391583	0					
ANR	5391605	PostIncDecOperationExpression	d ++		5391583	1					
ANR	5391606	Identifier	d		5391583	0					
ANR	5391607	IncDec	++		5391583	1					
ANR	5391608	UnaryOperationExpression	* s		5391583	1					
ANR	5391609	UnaryOperator	*		5391583	0					
ANR	5391610	Identifier	s		5391583	1					
ANR	5391611	Condition	* s ++ != '\\0'	134:9:2995:3006	5391583	1	True				
ANR	5391612	EqualityExpression	* s ++ != '\\0'		5391583	0		!=			
ANR	5391613	UnaryOperationExpression	* s ++		5391583	0					
ANR	5391614	UnaryOperator	*		5391583	0					
ANR	5391615	PostIncDecOperationExpression	s ++		5391583	1					
ANR	5391616	Identifier	s		5391583	0					
ANR	5391617	IncDec	++		5391583	1					
ANR	5391618	PrimaryExpression	'\\0'		5391583	1					
ANR	5391619	ReturnStatement	return d - 1 ;	136:2:3013:3025	5391583	3	True				
ANR	5391620	AdditiveExpression	d - 1		5391583	0		-			
ANR	5391621	Identifier	d		5391583	0					
ANR	5391622	PrimaryExpression	1		5391583	1					
ANR	5391623	ReturnType	char *		5391583	1					
ANR	5391624	Identifier	grub_stpcpy		5391583	2					
ANR	5391625	ParameterList	"char * dest , const char * src"		5391583	3					
ANR	5391626	Parameter	char * dest	127:13:2893:2902	5391583	0	True				
ANR	5391627	ParameterType	char *		5391583	0					
ANR	5391628	Identifier	dest		5391583	1					
ANR	5391629	Parameter	const char * src	127:25:2905:2919	5391583	1	True				
ANR	5391630	ParameterType	const char *		5391583	0					
ANR	5391631	Identifier	src		5391583	1					
ANR	5391632	CFGEntryNode	ENTRY		5391583		True				
ANR	5391633	CFGExitNode	EXIT		5391583		True				
ANR	5391634	Symbol	* s ++		5391583						
ANR	5391635	Symbol	s		5391583						
ANR	5391636	Symbol	d		5391583						
ANR	5391637	Symbol	src		5391583						
ANR	5391638	Symbol	dest		5391583						
ANR	5391639	Symbol	* s		5391583						
ANR	5391640	Symbol	* d ++		5391583						
ANR	5391641	Function	grub_printf	139:0:3030:3181							
ANR	5391642	FunctionDef	grub_printf (const char * fmt)		5391641	0					
ANR	5391643	CompoundStatement		141:0:3069:3181	5391641	0					
ANR	5391644	IdentifierDeclStatement	va_list ap ;	142:2:3073:3083	5391641	0	True				
ANR	5391645	IdentifierDecl	ap		5391641	0					
ANR	5391646	IdentifierDeclType	va_list		5391641	0					
ANR	5391647	Identifier	ap		5391641	1					
ANR	5391648	IdentifierDeclStatement	int ret ;	143:2:3087:3094	5391641	1	True				
ANR	5391649	IdentifierDecl	ret		5391641	0					
ANR	5391650	IdentifierDeclType	int		5391641	0					
ANR	5391651	Identifier	ret		5391641	1					
ANR	5391652	ExpressionStatement	"va_start ( ap , fmt )"	145:2:3099:3117	5391641	2	True				
ANR	5391653	CallExpression	"va_start ( ap , fmt )"		5391641	0					
ANR	5391654	Callee	va_start		5391641	0					
ANR	5391655	Identifier	va_start		5391641	0					
ANR	5391656	ArgumentList	ap		5391641	1					
ANR	5391657	Argument	ap		5391641	0					
ANR	5391658	Identifier	ap		5391641	0					
ANR	5391659	Argument	fmt		5391641	1					
ANR	5391660	Identifier	fmt		5391641	0					
ANR	5391661	ExpressionStatement	"ret = grub_vprintf ( fmt , ap )"	146:2:3121:3149	5391641	3	True				
ANR	5391662	AssignmentExpression	"ret = grub_vprintf ( fmt , ap )"		5391641	0		=			
ANR	5391663	Identifier	ret		5391641	0					
ANR	5391664	CallExpression	"grub_vprintf ( fmt , ap )"		5391641	1					
ANR	5391665	Callee	grub_vprintf		5391641	0					
ANR	5391666	Identifier	grub_vprintf		5391641	0					
ANR	5391667	ArgumentList	fmt		5391641	1					
ANR	5391668	Argument	fmt		5391641	0					
ANR	5391669	Identifier	fmt		5391641	0					
ANR	5391670	Argument	ap		5391641	1					
ANR	5391671	Identifier	ap		5391641	0					
ANR	5391672	ExpressionStatement	va_end ( ap )	147:2:3153:3164	5391641	4	True				
ANR	5391673	CallExpression	va_end ( ap )		5391641	0					
ANR	5391674	Callee	va_end		5391641	0					
ANR	5391675	Identifier	va_end		5391641	0					
ANR	5391676	ArgumentList	ap		5391641	1					
ANR	5391677	Argument	ap		5391641	0					
ANR	5391678	Identifier	ap		5391641	0					
ANR	5391679	ReturnStatement	return ret ;	149:2:3169:3179	5391641	5	True				
ANR	5391680	Identifier	ret		5391641	0					
ANR	5391681	ReturnType	int		5391641	1					
ANR	5391682	Identifier	grub_printf		5391641	2					
ANR	5391683	ParameterList	const char * fmt		5391641	3					
ANR	5391684	Parameter	const char * fmt	140:13:3047:3061	5391641	0	True				
ANR	5391685	ParameterType	const char *		5391641	0					
ANR	5391686	Identifier	fmt		5391641	1					
ANR	5391687	CFGEntryNode	ENTRY		5391641		True				
ANR	5391688	CFGExitNode	EXIT		5391641		True				
ANR	5391689	Symbol	ret		5391641						
ANR	5391690	Symbol	grub_vprintf		5391641						
ANR	5391691	Symbol	fmt		5391641						
ANR	5391692	Symbol	ap		5391641						
ANR	5391693	Function	grub_printf_	152:0:3184:3339							
ANR	5391694	FunctionDef	grub_printf_ (const char * fmt)		5391693	0					
ANR	5391695	CompoundStatement		154:0:3224:3339	5391693	0					
ANR	5391696	IdentifierDeclStatement	va_list ap ;	155:2:3228:3238	5391693	0	True				
ANR	5391697	IdentifierDecl	ap		5391693	0					
ANR	5391698	IdentifierDeclType	va_list		5391693	0					
ANR	5391699	Identifier	ap		5391693	1					
ANR	5391700	IdentifierDeclStatement	int ret ;	156:2:3242:3249	5391693	1	True				
ANR	5391701	IdentifierDecl	ret		5391693	0					
ANR	5391702	IdentifierDeclType	int		5391693	0					
ANR	5391703	Identifier	ret		5391693	1					
ANR	5391704	ExpressionStatement	"va_start ( ap , fmt )"	158:2:3254:3272	5391693	2	True				
ANR	5391705	CallExpression	"va_start ( ap , fmt )"		5391693	0					
ANR	5391706	Callee	va_start		5391693	0					
ANR	5391707	Identifier	va_start		5391693	0					
ANR	5391708	ArgumentList	ap		5391693	1					
ANR	5391709	Argument	ap		5391693	0					
ANR	5391710	Identifier	ap		5391693	0					
ANR	5391711	Argument	fmt		5391693	1					
ANR	5391712	Identifier	fmt		5391693	0					
ANR	5391713	ExpressionStatement	"ret = grub_vprintf ( _ ( fmt ) , ap )"	159:2:3276:3307	5391693	3	True				
ANR	5391714	AssignmentExpression	"ret = grub_vprintf ( _ ( fmt ) , ap )"		5391693	0		=			
ANR	5391715	Identifier	ret		5391693	0					
ANR	5391716	CallExpression	"grub_vprintf ( _ ( fmt ) , ap )"		5391693	1					
ANR	5391717	Callee	grub_vprintf		5391693	0					
ANR	5391718	Identifier	grub_vprintf		5391693	0					
ANR	5391719	ArgumentList	_ ( fmt )		5391693	1					
ANR	5391720	Argument	_ ( fmt )		5391693	0					
ANR	5391721	CallExpression	_ ( fmt )		5391693	0					
ANR	5391722	Callee	_		5391693	0					
ANR	5391723	Identifier	_		5391693	0					
ANR	5391724	ArgumentList	fmt		5391693	1					
ANR	5391725	Argument	fmt		5391693	0					
ANR	5391726	Identifier	fmt		5391693	0					
ANR	5391727	Argument	ap		5391693	1					
ANR	5391728	Identifier	ap		5391693	0					
ANR	5391729	ExpressionStatement	va_end ( ap )	160:2:3311:3322	5391693	4	True				
ANR	5391730	CallExpression	va_end ( ap )		5391693	0					
ANR	5391731	Callee	va_end		5391693	0					
ANR	5391732	Identifier	va_end		5391693	0					
ANR	5391733	ArgumentList	ap		5391693	1					
ANR	5391734	Argument	ap		5391693	0					
ANR	5391735	Identifier	ap		5391693	0					
ANR	5391736	ReturnStatement	return ret ;	162:2:3327:3337	5391693	5	True				
ANR	5391737	Identifier	ret		5391693	0					
ANR	5391738	ReturnType	int		5391693	1					
ANR	5391739	Identifier	grub_printf_		5391693	2					
ANR	5391740	ParameterList	const char * fmt		5391693	3					
ANR	5391741	Parameter	const char * fmt	153:14:3202:3216	5391693	0	True				
ANR	5391742	ParameterType	const char *		5391693	0					
ANR	5391743	Identifier	fmt		5391693	1					
ANR	5391744	CFGEntryNode	ENTRY		5391693		True				
ANR	5391745	CFGExitNode	EXIT		5391693		True				
ANR	5391746	Symbol	ret		5391693						
ANR	5391747	Symbol	grub_vprintf		5391693						
ANR	5391748	Symbol	fmt		5391693						
ANR	5391749	Symbol	ap		5391693						
ANR	5391750	Symbol	_		5391693						
ANR	5391751	Function	grub_puts	165:0:3342:3491							
ANR	5391752	FunctionDef	grub_puts (const char * s)		5391751	0					
ANR	5391753	CompoundStatement		167:0:3372:3491	5391751	0					
ANR	5391754	WhileStatement	while ( * s )		5391751	0					
ANR	5391755	Condition	* s	168:9:3383:3384	5391751	0	True				
ANR	5391756	UnaryOperationExpression	* s		5391751	0					
ANR	5391757	UnaryOperator	*		5391751	0					
ANR	5391758	Identifier	s		5391751	1					
ANR	5391759	CompoundStatement		3:4:18:18	5391751	1					
ANR	5391760	ExpressionStatement	grub_putchar ( * s )	170:6:3399:3416	5391751	0	True				
ANR	5391761	CallExpression	grub_putchar ( * s )		5391751	0					
ANR	5391762	Callee	grub_putchar		5391751	0					
ANR	5391763	Identifier	grub_putchar		5391751	0					
ANR	5391764	ArgumentList	* s		5391751	1					
ANR	5391765	Argument	* s		5391751	0					
ANR	5391766	UnaryOperationExpression	* s		5391751	0					
ANR	5391767	UnaryOperator	*		5391751	0					
ANR	5391768	Identifier	s		5391751	1					
ANR	5391769	ExpressionStatement	s ++	171:6:3424:3427	5391751	1	True				
ANR	5391770	PostIncDecOperationExpression	s ++		5391751	0					
ANR	5391771	Identifier	s		5391751	0					
ANR	5391772	IncDec	++		5391751	1					
ANR	5391773	ExpressionStatement	grub_putchar ( '\\n' )	173:2:3437:3456	5391751	1	True				
ANR	5391774	CallExpression	grub_putchar ( '\\n' )		5391751	0					
ANR	5391775	Callee	grub_putchar		5391751	0					
ANR	5391776	Identifier	grub_putchar		5391751	0					
ANR	5391777	ArgumentList	'\\n'		5391751	1					
ANR	5391778	Argument	'\\n'		5391751	0					
ANR	5391779	PrimaryExpression	'\\n'		5391751	0					
ANR	5391780	ReturnStatement	return 1 ;	175:2:3461:3469	5391751	2	True				
ANR	5391781	PrimaryExpression	1		5391751	0					
ANR	5391782	ReturnType	int		5391751	1					
ANR	5391783	Identifier	grub_puts		5391751	2					
ANR	5391784	ParameterList	const char * s		5391751	3					
ANR	5391785	Parameter	const char * s	166:11:3357:3369	5391751	0	True				
ANR	5391786	ParameterType	const char *		5391751	0					
ANR	5391787	Identifier	s		5391751	1					
ANR	5391788	CFGEntryNode	ENTRY		5391751		True				
ANR	5391789	CFGExitNode	EXIT		5391751		True				
ANR	5391790	Symbol	s		5391751						
ANR	5391791	Symbol	* s		5391751						
ANR	5391792	Function	grub_puts_	178:0:3494:3554							
ANR	5391793	FunctionDef	grub_puts_ (const char * s)		5391792	0					
ANR	5391794	CompoundStatement		180:0:3525:3554	5391792	0					
ANR	5391795	ReturnStatement	return grub_puts ( _ ( s ) ) ;	181:2:3529:3552	5391792	0	True				
ANR	5391796	CallExpression	grub_puts ( _ ( s ) )		5391792	0					
ANR	5391797	Callee	grub_puts		5391792	0					
ANR	5391798	Identifier	grub_puts		5391792	0					
ANR	5391799	ArgumentList	_ ( s )		5391792	1					
ANR	5391800	Argument	_ ( s )		5391792	0					
ANR	5391801	CallExpression	_ ( s )		5391792	0					
ANR	5391802	Callee	_		5391792	0					
ANR	5391803	Identifier	_		5391792	0					
ANR	5391804	ArgumentList	s		5391792	1					
ANR	5391805	Argument	s		5391792	0					
ANR	5391806	Identifier	s		5391792	0					
ANR	5391807	ReturnType	int		5391792	1					
ANR	5391808	Identifier	grub_puts_		5391792	2					
ANR	5391809	ParameterList	const char * s		5391792	3					
ANR	5391810	Parameter	const char * s	179:12:3510:3522	5391792	0	True				
ANR	5391811	ParameterType	const char *		5391792	0					
ANR	5391812	Identifier	s		5391792	1					
ANR	5391813	CFGEntryNode	ENTRY		5391792		True				
ANR	5391814	CFGExitNode	EXIT		5391792		True				
ANR	5391815	Symbol	s		5391792						
ANR	5391816	Symbol	grub_puts		5391792						
ANR	5391817	Symbol	_		5391792						
ANR	5391818	Function	grub_err_printf	184:0:3557:3706							
ANR	5391819	FunctionDef	grub_err_printf (const char * fmt)		5391818	0					
ANR	5391820	CompoundStatement		186:0:3600:3706	5391818	0					
ANR	5391821	IdentifierDeclStatement	va_list ap ;	187:1:3603:3613	5391818	0	True				
ANR	5391822	IdentifierDecl	ap		5391818	0					
ANR	5391823	IdentifierDeclType	va_list		5391818	0					
ANR	5391824	Identifier	ap		5391818	1					
ANR	5391825	IdentifierDeclStatement	int ret ;	188:1:3616:3623	5391818	1	True				
ANR	5391826	IdentifierDecl	ret		5391818	0					
ANR	5391827	IdentifierDeclType	int		5391818	0					
ANR	5391828	Identifier	ret		5391818	1					
ANR	5391829	ExpressionStatement	"va_start ( ap , fmt )"	190:1:3627:3645	5391818	2	True				
ANR	5391830	CallExpression	"va_start ( ap , fmt )"		5391818	0					
ANR	5391831	Callee	va_start		5391818	0					
ANR	5391832	Identifier	va_start		5391818	0					
ANR	5391833	ArgumentList	ap		5391818	1					
ANR	5391834	Argument	ap		5391818	0					
ANR	5391835	Identifier	ap		5391818	0					
ANR	5391836	Argument	fmt		5391818	1					
ANR	5391837	Identifier	fmt		5391818	0					
ANR	5391838	ExpressionStatement	"ret = grub_vprintf ( fmt , ap )"	191:1:3648:3676	5391818	3	True				
ANR	5391839	AssignmentExpression	"ret = grub_vprintf ( fmt , ap )"		5391818	0		=			
ANR	5391840	Identifier	ret		5391818	0					
ANR	5391841	CallExpression	"grub_vprintf ( fmt , ap )"		5391818	1					
ANR	5391842	Callee	grub_vprintf		5391818	0					
ANR	5391843	Identifier	grub_vprintf		5391818	0					
ANR	5391844	ArgumentList	fmt		5391818	1					
ANR	5391845	Argument	fmt		5391818	0					
ANR	5391846	Identifier	fmt		5391818	0					
ANR	5391847	Argument	ap		5391818	1					
ANR	5391848	Identifier	ap		5391818	0					
ANR	5391849	ExpressionStatement	va_end ( ap )	192:1:3679:3690	5391818	4	True				
ANR	5391850	CallExpression	va_end ( ap )		5391818	0					
ANR	5391851	Callee	va_end		5391818	0					
ANR	5391852	Identifier	va_end		5391818	0					
ANR	5391853	ArgumentList	ap		5391818	1					
ANR	5391854	Argument	ap		5391818	0					
ANR	5391855	Identifier	ap		5391818	0					
ANR	5391856	ReturnStatement	return ret ;	194:1:3694:3704	5391818	5	True				
ANR	5391857	Identifier	ret		5391818	0					
ANR	5391858	ReturnType	int		5391818	1					
ANR	5391859	Identifier	grub_err_printf		5391818	2					
ANR	5391860	ParameterList	const char * fmt		5391818	3					
ANR	5391861	Parameter	const char * fmt	185:17:3578:3592	5391818	0	True				
ANR	5391862	ParameterType	const char *		5391818	0					
ANR	5391863	Identifier	fmt		5391818	1					
ANR	5391864	CFGEntryNode	ENTRY		5391818		True				
ANR	5391865	CFGExitNode	EXIT		5391818		True				
ANR	5391866	Symbol	ret		5391818						
ANR	5391867	Symbol	grub_vprintf		5391818						
ANR	5391868	Symbol	fmt		5391818						
ANR	5391869	Symbol	ap		5391818						
ANR	5391870	Function	grub_real_dprintf	197:0:3709:4116							
ANR	5391871	FunctionDef	"grub_real_dprintf (const char * file , const int line , const char * condition , const char * fmt)"		5391870	0					
ANR	5391872	CompoundStatement		200:0:3817:4116	5391870	0					
ANR	5391873	IdentifierDeclStatement	va_list args ;	201:2:3821:3833	5391870	0	True				
ANR	5391874	IdentifierDecl	args		5391870	0					
ANR	5391875	IdentifierDeclType	va_list		5391870	0					
ANR	5391876	Identifier	args		5391870	1					
ANR	5391877	IdentifierDeclStatement	"const char * debug = grub_env_get ( ""debug"" ) ;"	202:2:3837:3879	5391870	1	True				
ANR	5391878	IdentifierDecl	"* debug = grub_env_get ( ""debug"" )"		5391870	0					
ANR	5391879	IdentifierDeclType	const char *		5391870	0					
ANR	5391880	Identifier	debug		5391870	1					
ANR	5391881	AssignmentExpression	"* debug = grub_env_get ( ""debug"" )"		5391870	2		=			
ANR	5391882	Identifier	debug		5391870	0					
ANR	5391883	CallExpression	"grub_env_get ( ""debug"" )"		5391870	1					
ANR	5391884	Callee	grub_env_get		5391870	0					
ANR	5391885	Identifier	grub_env_get		5391870	0					
ANR	5391886	ArgumentList	"""debug"""		5391870	1					
ANR	5391887	Argument	"""debug"""		5391870	0					
ANR	5391888	PrimaryExpression	"""debug"""		5391870	0					
ANR	5391889	IfStatement	if ( ! debug )		5391870	2					
ANR	5391890	Condition	! debug	204:6:3888:3894	5391870	0	True				
ANR	5391891	UnaryOperationExpression	! debug		5391870	0					
ANR	5391892	UnaryOperator	!		5391870	0					
ANR	5391893	Identifier	debug		5391870	1					
ANR	5391894	ReturnStatement	return ;	205:4:3901:3907	5391870	1	True				
ANR	5391895	IfStatement	"if ( grub_strword ( debug , ""all"" ) || grub_strword ( debug , condition ) )"		5391870	3					
ANR	5391896	Condition	"grub_strword ( debug , ""all"" ) || grub_strword ( debug , condition )"	207:6:3916:3977	5391870	0	True				
ANR	5391897	OrExpression	"grub_strword ( debug , ""all"" ) || grub_strword ( debug , condition )"		5391870	0		||			
ANR	5391898	CallExpression	"grub_strword ( debug , ""all"" )"		5391870	0					
ANR	5391899	Callee	grub_strword		5391870	0					
ANR	5391900	Identifier	grub_strword		5391870	0					
ANR	5391901	ArgumentList	debug		5391870	1					
ANR	5391902	Argument	debug		5391870	0					
ANR	5391903	Identifier	debug		5391870	0					
ANR	5391904	Argument	"""all"""		5391870	1					
ANR	5391905	PrimaryExpression	"""all"""		5391870	0					
ANR	5391906	CallExpression	"grub_strword ( debug , condition )"		5391870	1					
ANR	5391907	Callee	grub_strword		5391870	0					
ANR	5391908	Identifier	grub_strword		5391870	0					
ANR	5391909	ArgumentList	debug		5391870	1					
ANR	5391910	Argument	debug		5391870	0					
ANR	5391911	Identifier	debug		5391870	0					
ANR	5391912	Argument	condition		5391870	1					
ANR	5391913	Identifier	condition		5391870	0					
ANR	5391914	CompoundStatement		9:4:166:166	5391870	1					
ANR	5391915	ExpressionStatement	"grub_printf ( ""%s:%d: "" , file , line )"	209:6:3992:4027	5391870	0	True				
ANR	5391916	CallExpression	"grub_printf ( ""%s:%d: "" , file , line )"		5391870	0					
ANR	5391917	Callee	grub_printf		5391870	0					
ANR	5391918	Identifier	grub_printf		5391870	0					
ANR	5391919	ArgumentList	"""%s:%d: """		5391870	1					
ANR	5391920	Argument	"""%s:%d: """		5391870	0					
ANR	5391921	PrimaryExpression	"""%s:%d: """		5391870	0					
ANR	5391922	Argument	file		5391870	1					
ANR	5391923	Identifier	file		5391870	0					
ANR	5391924	Argument	line		5391870	2					
ANR	5391925	Identifier	line		5391870	0					
ANR	5391926	ExpressionStatement	"va_start ( args , fmt )"	210:6:4035:4055	5391870	1	True				
ANR	5391927	CallExpression	"va_start ( args , fmt )"		5391870	0					
ANR	5391928	Callee	va_start		5391870	0					
ANR	5391929	Identifier	va_start		5391870	0					
ANR	5391930	ArgumentList	args		5391870	1					
ANR	5391931	Argument	args		5391870	0					
ANR	5391932	Identifier	args		5391870	0					
ANR	5391933	Argument	fmt		5391870	1					
ANR	5391934	Identifier	fmt		5391870	0					
ANR	5391935	ExpressionStatement	"grub_vprintf ( fmt , args )"	211:6:4063:4087	5391870	2	True				
ANR	5391936	CallExpression	"grub_vprintf ( fmt , args )"		5391870	0					
ANR	5391937	Callee	grub_vprintf		5391870	0					
ANR	5391938	Identifier	grub_vprintf		5391870	0					
ANR	5391939	ArgumentList	fmt		5391870	1					
ANR	5391940	Argument	fmt		5391870	0					
ANR	5391941	Identifier	fmt		5391870	0					
ANR	5391942	Argument	args		5391870	1					
ANR	5391943	Identifier	args		5391870	0					
ANR	5391944	ExpressionStatement	va_end ( args )	212:6:4095:4108	5391870	3	True				
ANR	5391945	CallExpression	va_end ( args )		5391870	0					
ANR	5391946	Callee	va_end		5391870	0					
ANR	5391947	Identifier	va_end		5391870	0					
ANR	5391948	ArgumentList	args		5391870	1					
ANR	5391949	Argument	args		5391870	0					
ANR	5391950	Identifier	args		5391870	0					
ANR	5391951	ReturnType	void		5391870	1					
ANR	5391952	Identifier	grub_real_dprintf		5391870	2					
ANR	5391953	ParameterList	"const char * file , const int line , const char * condition , const char * fmt"		5391870	3					
ANR	5391954	Parameter	const char * file	198:19:3733:3748	5391870	0	True				
ANR	5391955	ParameterType	const char *		5391870	0					
ANR	5391956	Identifier	file		5391870	1					
ANR	5391957	Parameter	const int line	198:37:3751:3764	5391870	1	True				
ANR	5391958	ParameterType	const int		5391870	0					
ANR	5391959	Identifier	line		5391870	1					
ANR	5391960	Parameter	const char * condition	198:53:3767:3787	5391870	2	True				
ANR	5391961	ParameterType	const char *		5391870	0					
ANR	5391962	Identifier	condition		5391870	1					
ANR	5391963	Parameter	const char * fmt	199:5:3795:3809	5391870	3	True				
ANR	5391964	ParameterType	const char *		5391870	0					
ANR	5391965	Identifier	fmt		5391870	1					
ANR	5391966	CFGEntryNode	ENTRY		5391870		True				
ANR	5391967	CFGExitNode	EXIT		5391870		True				
ANR	5391968	Symbol	args		5391870						
ANR	5391969	Symbol	condition		5391870						
ANR	5391970	Symbol	file		5391870						
ANR	5391971	Symbol	debug		5391870						
ANR	5391972	Symbol	grub_strword		5391870						
ANR	5391973	Symbol	line		5391870						
ANR	5391974	Symbol	grub_env_get		5391870						
ANR	5391975	Symbol	fmt		5391870						
ANR	5391976	Function	grub_vprintf	216:0:4119:4243							
ANR	5391977	FunctionDef	"grub_vprintf (const char * fmt , va_list args)"		5391976	0					
ANR	5391978	CompoundStatement		218:0:4168:4243	5391976	0					
ANR	5391979	IdentifierDeclStatement	int ret ;	219:2:4172:4179	5391976	0	True				
ANR	5391980	IdentifierDecl	ret		5391976	0					
ANR	5391981	IdentifierDeclType	int		5391976	0					
ANR	5391982	Identifier	ret		5391976	1					
ANR	5391983	ExpressionStatement	"ret = grub_vsnprintf_real ( 0 , 0 , fmt , args )"	221:2:4184:4227	5391976	1	True				
ANR	5391984	AssignmentExpression	"ret = grub_vsnprintf_real ( 0 , 0 , fmt , args )"		5391976	0		=			
ANR	5391985	Identifier	ret		5391976	0					
ANR	5391986	CallExpression	"grub_vsnprintf_real ( 0 , 0 , fmt , args )"		5391976	1					
ANR	5391987	Callee	grub_vsnprintf_real		5391976	0					
ANR	5391988	Identifier	grub_vsnprintf_real		5391976	0					
ANR	5391989	ArgumentList	0		5391976	1					
ANR	5391990	Argument	0		5391976	0					
ANR	5391991	PrimaryExpression	0		5391976	0					
ANR	5391992	Argument	0		5391976	1					
ANR	5391993	PrimaryExpression	0		5391976	0					
ANR	5391994	Argument	fmt		5391976	2					
ANR	5391995	Identifier	fmt		5391976	0					
ANR	5391996	Argument	args		5391976	3					
ANR	5391997	Identifier	args		5391976	0					
ANR	5391998	ReturnStatement	return ret ;	222:2:4231:4241	5391976	2	True				
ANR	5391999	Identifier	ret		5391976	0					
ANR	5392000	ReturnType	int		5391976	1					
ANR	5392001	Identifier	grub_vprintf		5391976	2					
ANR	5392002	ParameterList	"const char * fmt , va_list args"		5391976	3					
ANR	5392003	Parameter	const char * fmt	217:14:4137:4151	5391976	0	True				
ANR	5392004	ParameterType	const char *		5391976	0					
ANR	5392005	Identifier	fmt		5391976	1					
ANR	5392006	Parameter	va_list args	217:31:4154:4165	5391976	1	True				
ANR	5392007	ParameterType	va_list		5391976	0					
ANR	5392008	Identifier	args		5391976	1					
ANR	5392009	CFGEntryNode	ENTRY		5391976		True				
ANR	5392010	CFGExitNode	EXIT		5391976		True				
ANR	5392011	Symbol	args		5391976						
ANR	5392012	Symbol	ret		5391976						
ANR	5392013	Symbol	grub_vsnprintf_real		5391976						
ANR	5392014	Symbol	fmt		5391976						
ANR	5392015	Function	grub_memcmp	225:0:4246:4476							
ANR	5392016	FunctionDef	"grub_memcmp (const void * s1 , const void * s2 , grub_size_t n)"		5392015	0					
ANR	5392017	CompoundStatement		227:0:4310:4476	5392015	0					
ANR	5392018	IdentifierDeclStatement	const char * t1 = s1 ;	228:2:4314:4333	5392015	0	True				
ANR	5392019	IdentifierDecl	* t1 = s1		5392015	0					
ANR	5392020	IdentifierDeclType	const char *		5392015	0					
ANR	5392021	Identifier	t1		5392015	1					
ANR	5392022	AssignmentExpression	* t1 = s1		5392015	2		=			
ANR	5392023	Identifier	s1		5392015	0					
ANR	5392024	Identifier	s1		5392015	1					
ANR	5392025	IdentifierDeclStatement	const char * t2 = s2 ;	229:2:4337:4356	5392015	1	True				
ANR	5392026	IdentifierDecl	* t2 = s2		5392015	0					
ANR	5392027	IdentifierDeclType	const char *		5392015	0					
ANR	5392028	Identifier	t2		5392015	1					
ANR	5392029	AssignmentExpression	* t2 = s2		5392015	2		=			
ANR	5392030	Identifier	s2		5392015	0					
ANR	5392031	Identifier	s2		5392015	1					
ANR	5392032	WhileStatement	while ( n -- )		5392015	2					
ANR	5392033	Condition	n --	231:9:4368:4370	5392015	0	True				
ANR	5392034	PostIncDecOperationExpression	n --		5392015	0					
ANR	5392035	Identifier	n		5392015	0					
ANR	5392036	IncDec	--		5392015	1					
ANR	5392037	CompoundStatement		6:4:66:66	5392015	1					
ANR	5392038	IfStatement	if ( * t1 != * t2 )		5392015	0					
ANR	5392039	Condition	* t1 != * t2	233:10:4389:4398	5392015	0	True				
ANR	5392040	EqualityExpression	* t1 != * t2		5392015	0		!=			
ANR	5392041	UnaryOperationExpression	* t1		5392015	0					
ANR	5392042	UnaryOperator	*		5392015	0					
ANR	5392043	Identifier	t1		5392015	1					
ANR	5392044	UnaryOperationExpression	* t2		5392015	1					
ANR	5392045	UnaryOperator	*		5392015	0					
ANR	5392046	Identifier	t2		5392015	1					
ANR	5392047	ReturnStatement	return ( int ) * t1 - ( int ) * t2 ;	234:1:4402:4430	5392015	1	True				
ANR	5392048	AdditiveExpression	( int ) * t1 - ( int ) * t2		5392015	0		-			
ANR	5392049	CastExpression	( int ) * t1		5392015	0					
ANR	5392050	CastTarget	int		5392015	0					
ANR	5392051	UnaryOperationExpression	* t1		5392015	1					
ANR	5392052	UnaryOperator	*		5392015	0					
ANR	5392053	Identifier	t1		5392015	1					
ANR	5392054	CastExpression	( int ) * t2		5392015	1					
ANR	5392055	CastTarget	int		5392015	0					
ANR	5392056	UnaryOperationExpression	* t2		5392015	1					
ANR	5392057	UnaryOperator	*		5392015	0					
ANR	5392058	Identifier	t2		5392015	1					
ANR	5392059	ExpressionStatement	t1 ++	236:6:4439:4443	5392015	1	True				
ANR	5392060	PostIncDecOperationExpression	t1 ++		5392015	0					
ANR	5392061	Identifier	t1		5392015	0					
ANR	5392062	IncDec	++		5392015	1					
ANR	5392063	ExpressionStatement	t2 ++	237:6:4451:4455	5392015	2	True				
ANR	5392064	PostIncDecOperationExpression	t2 ++		5392015	0					
ANR	5392065	Identifier	t2		5392015	0					
ANR	5392066	IncDec	++		5392015	1					
ANR	5392067	ReturnStatement	return 0 ;	240:2:4466:4474	5392015	3	True				
ANR	5392068	PrimaryExpression	0		5392015	0					
ANR	5392069	ReturnType	int		5392015	1					
ANR	5392070	Identifier	grub_memcmp		5392015	2					
ANR	5392071	ParameterList	"const void * s1 , const void * s2 , grub_size_t n"		5392015	3					
ANR	5392072	Parameter	const void * s1	226:13:4263:4276	5392015	0	True				
ANR	5392073	ParameterType	const void *		5392015	0					
ANR	5392074	Identifier	s1		5392015	1					
ANR	5392075	Parameter	const void * s2	226:29:4279:4292	5392015	1	True				
ANR	5392076	ParameterType	const void *		5392015	0					
ANR	5392077	Identifier	s2		5392015	1					
ANR	5392078	Parameter	grub_size_t n	226:45:4295:4307	5392015	2	True				
ANR	5392079	ParameterType	grub_size_t		5392015	0					
ANR	5392080	Identifier	n		5392015	1					
ANR	5392081	CFGEntryNode	ENTRY		5392015		True				
ANR	5392082	CFGExitNode	EXIT		5392015		True				
ANR	5392083	Symbol	* t1		5392015						
ANR	5392084	Symbol	* t2		5392015						
ANR	5392085	Symbol	t1		5392015						
ANR	5392086	Symbol	s1		5392015						
ANR	5392087	Symbol	n		5392015						
ANR	5392088	Symbol	t2		5392015						
ANR	5392089	Symbol	s2		5392015						
ANR	5392090	Function	grub_strcmp	243:0:4479:4651							
ANR	5392091	FunctionDef	"grub_strcmp (const char * s1 , const char * s2)"		5392090	0					
ANR	5392092	CompoundStatement		245:0:4528:4651	5392090	0					
ANR	5392093	WhileStatement	while ( * s1 && * s2 )		5392090	0					
ANR	5392094	Condition	* s1 && * s2	246:9:4539:4548	5392090	0	True				
ANR	5392095	AndExpression	* s1 && * s2		5392090	0		&&			
ANR	5392096	UnaryOperationExpression	* s1		5392090	0					
ANR	5392097	UnaryOperator	*		5392090	0					
ANR	5392098	Identifier	s1		5392090	1					
ANR	5392099	UnaryOperationExpression	* s2		5392090	1					
ANR	5392100	UnaryOperator	*		5392090	0					
ANR	5392101	Identifier	s2		5392090	1					
ANR	5392102	CompoundStatement		3:4:26:26	5392090	1					
ANR	5392103	IfStatement	if ( * s1 != * s2 )		5392090	0					
ANR	5392104	Condition	* s1 != * s2	248:10:4567:4576	5392090	0	True				
ANR	5392105	EqualityExpression	* s1 != * s2		5392090	0		!=			
ANR	5392106	UnaryOperationExpression	* s1		5392090	0					
ANR	5392107	UnaryOperator	*		5392090	0					
ANR	5392108	Identifier	s1		5392090	1					
ANR	5392109	UnaryOperationExpression	* s2		5392090	1					
ANR	5392110	UnaryOperator	*		5392090	0					
ANR	5392111	Identifier	s2		5392090	1					
ANR	5392112	BreakStatement	break ;	249:1:4580:4585	5392090	1	True				
ANR	5392113	ExpressionStatement	s1 ++	251:6:4594:4598	5392090	1	True				
ANR	5392114	PostIncDecOperationExpression	s1 ++		5392090	0					
ANR	5392115	Identifier	s1		5392090	0					
ANR	5392116	IncDec	++		5392090	1					
ANR	5392117	ExpressionStatement	s2 ++	252:6:4606:4610	5392090	2	True				
ANR	5392118	PostIncDecOperationExpression	s2 ++		5392090	0					
ANR	5392119	Identifier	s2		5392090	0					
ANR	5392120	IncDec	++		5392090	1					
ANR	5392121	ReturnStatement	return ( int ) * s1 - ( int ) * s2 ;	255:2:4621:4649	5392090	1	True				
ANR	5392122	AdditiveExpression	( int ) * s1 - ( int ) * s2		5392090	0		-			
ANR	5392123	CastExpression	( int ) * s1		5392090	0					
ANR	5392124	CastTarget	int		5392090	0					
ANR	5392125	UnaryOperationExpression	* s1		5392090	1					
ANR	5392126	UnaryOperator	*		5392090	0					
ANR	5392127	Identifier	s1		5392090	1					
ANR	5392128	CastExpression	( int ) * s2		5392090	1					
ANR	5392129	CastTarget	int		5392090	0					
ANR	5392130	UnaryOperationExpression	* s2		5392090	1					
ANR	5392131	UnaryOperator	*		5392090	0					
ANR	5392132	Identifier	s2		5392090	1					
ANR	5392133	ReturnType	int		5392090	1					
ANR	5392134	Identifier	grub_strcmp		5392090	2					
ANR	5392135	ParameterList	"const char * s1 , const char * s2"		5392090	3					
ANR	5392136	Parameter	const char * s1	244:13:4496:4509	5392090	0	True				
ANR	5392137	ParameterType	const char *		5392090	0					
ANR	5392138	Identifier	s1		5392090	1					
ANR	5392139	Parameter	const char * s2	244:29:4512:4525	5392090	1	True				
ANR	5392140	ParameterType	const char *		5392090	0					
ANR	5392141	Identifier	s2		5392090	1					
ANR	5392142	CFGEntryNode	ENTRY		5392090		True				
ANR	5392143	CFGExitNode	EXIT		5392090		True				
ANR	5392144	Symbol	* s2		5392090						
ANR	5392145	Symbol	* s1		5392090						
ANR	5392146	Symbol	s1		5392090						
ANR	5392147	Symbol	s2		5392090						
ANR	5392148	Function	grub_strncmp	258:0:4654:4878							
ANR	5392149	FunctionDef	"grub_strncmp (const char * s1 , const char * s2 , grub_size_t n)"		5392148	0					
ANR	5392150	CompoundStatement		260:0:4719:4878	5392148	0					
ANR	5392151	IfStatement	if ( n == 0 )		5392148	0					
ANR	5392152	Condition	n == 0	261:6:4727:4732	5392148	0	True				
ANR	5392153	EqualityExpression	n == 0		5392148	0		==			
ANR	5392154	Identifier	n		5392148	0					
ANR	5392155	PrimaryExpression	0		5392148	1					
ANR	5392156	ReturnStatement	return 0 ;	262:4:4739:4747	5392148	1	True				
ANR	5392157	PrimaryExpression	0		5392148	0					
ANR	5392158	WhileStatement	while ( * s1 && * s2 && -- n )		5392148	1					
ANR	5392159	Condition	* s1 && * s2 && -- n	264:9:4759:4775	5392148	0	True				
ANR	5392160	AndExpression	* s1 && * s2 && -- n		5392148	0		&&			
ANR	5392161	UnaryOperationExpression	* s1		5392148	0					
ANR	5392162	UnaryOperator	*		5392148	0					
ANR	5392163	Identifier	s1		5392148	1					
ANR	5392164	AndExpression	* s2 && -- n		5392148	1		&&			
ANR	5392165	UnaryOperationExpression	* s2		5392148	0					
ANR	5392166	UnaryOperator	*		5392148	0					
ANR	5392167	Identifier	s2		5392148	1					
ANR	5392168	UnaryExpression	-- n		5392148	1					
ANR	5392169	IncDec	--		5392148	0					
ANR	5392170	Identifier	n		5392148	1					
ANR	5392171	CompoundStatement		6:4:62:62	5392148	1					
ANR	5392172	IfStatement	if ( * s1 != * s2 )		5392148	0					
ANR	5392173	Condition	* s1 != * s2	266:10:4794:4803	5392148	0	True				
ANR	5392174	EqualityExpression	* s1 != * s2		5392148	0		!=			
ANR	5392175	UnaryOperationExpression	* s1		5392148	0					
ANR	5392176	UnaryOperator	*		5392148	0					
ANR	5392177	Identifier	s1		5392148	1					
ANR	5392178	UnaryOperationExpression	* s2		5392148	1					
ANR	5392179	UnaryOperator	*		5392148	0					
ANR	5392180	Identifier	s2		5392148	1					
ANR	5392181	BreakStatement	break ;	267:1:4807:4812	5392148	1	True				
ANR	5392182	ExpressionStatement	s1 ++	269:6:4821:4825	5392148	1	True				
ANR	5392183	PostIncDecOperationExpression	s1 ++		5392148	0					
ANR	5392184	Identifier	s1		5392148	0					
ANR	5392185	IncDec	++		5392148	1					
ANR	5392186	ExpressionStatement	s2 ++	270:6:4833:4837	5392148	2	True				
ANR	5392187	PostIncDecOperationExpression	s2 ++		5392148	0					
ANR	5392188	Identifier	s2		5392148	0					
ANR	5392189	IncDec	++		5392148	1					
ANR	5392190	ReturnStatement	return ( int ) * s1 - ( int ) * s2 ;	273:2:4848:4876	5392148	2	True				
ANR	5392191	AdditiveExpression	( int ) * s1 - ( int ) * s2		5392148	0		-			
ANR	5392192	CastExpression	( int ) * s1		5392148	0					
ANR	5392193	CastTarget	int		5392148	0					
ANR	5392194	UnaryOperationExpression	* s1		5392148	1					
ANR	5392195	UnaryOperator	*		5392148	0					
ANR	5392196	Identifier	s1		5392148	1					
ANR	5392197	CastExpression	( int ) * s2		5392148	1					
ANR	5392198	CastTarget	int		5392148	0					
ANR	5392199	UnaryOperationExpression	* s2		5392148	1					
ANR	5392200	UnaryOperator	*		5392148	0					
ANR	5392201	Identifier	s2		5392148	1					
ANR	5392202	ReturnType	int		5392148	1					
ANR	5392203	Identifier	grub_strncmp		5392148	2					
ANR	5392204	ParameterList	"const char * s1 , const char * s2 , grub_size_t n"		5392148	3					
ANR	5392205	Parameter	const char * s1	259:14:4672:4685	5392148	0	True				
ANR	5392206	ParameterType	const char *		5392148	0					
ANR	5392207	Identifier	s1		5392148	1					
ANR	5392208	Parameter	const char * s2	259:30:4688:4701	5392148	1	True				
ANR	5392209	ParameterType	const char *		5392148	0					
ANR	5392210	Identifier	s2		5392148	1					
ANR	5392211	Parameter	grub_size_t n	259:46:4704:4716	5392148	2	True				
ANR	5392212	ParameterType	grub_size_t		5392148	0					
ANR	5392213	Identifier	n		5392148	1					
ANR	5392214	CFGEntryNode	ENTRY		5392148		True				
ANR	5392215	CFGExitNode	EXIT		5392148		True				
ANR	5392216	Symbol	* s2		5392148						
ANR	5392217	Symbol	* s1		5392148						
ANR	5392218	Symbol	s1		5392148						
ANR	5392219	Symbol	n		5392148						
ANR	5392220	Symbol	s2		5392148						
ANR	5392221	Function	grub_strchr	276:0:4881:5010							
ANR	5392222	FunctionDef	"grub_strchr (const char * s , int c)"		5392221	0					
ANR	5392223	CompoundStatement		278:0:4923:5010	5392221	0					
ANR	5392224	DoStatement	do		5392221	0					
ANR	5392225	CompoundStatement		3:4:10:10	5392221	0					
ANR	5392226	IfStatement	if ( * s == c )		5392221	0					
ANR	5392227	Condition	* s == c	281:10:4946:4952	5392221	0	True				
ANR	5392228	EqualityExpression	* s == c		5392221	0		==			
ANR	5392229	UnaryOperationExpression	* s		5392221	0					
ANR	5392230	UnaryOperator	*		5392221	0					
ANR	5392231	Identifier	s		5392221	1					
ANR	5392232	Identifier	c		5392221	1					
ANR	5392233	ReturnStatement	return ( char * ) s ;	282:1:4956:4973	5392221	1	True				
ANR	5392234	CastExpression	( char * ) s		5392221	0					
ANR	5392235	CastTarget	char *		5392221	0					
ANR	5392236	Identifier	s		5392221	1					
ANR	5392237	Condition	* s ++	284:9:4990:4993	5392221	1	True				
ANR	5392238	UnaryOperationExpression	* s ++		5392221	0					
ANR	5392239	UnaryOperator	*		5392221	0					
ANR	5392240	PostIncDecOperationExpression	s ++		5392221	1					
ANR	5392241	Identifier	s		5392221	0					
ANR	5392242	IncDec	++		5392221	1					
ANR	5392243	ReturnStatement	return 0 ;	286:2:5000:5008	5392221	1	True				
ANR	5392244	PrimaryExpression	0		5392221	0					
ANR	5392245	ReturnType	char *		5392221	1					
ANR	5392246	Identifier	grub_strchr		5392221	2					
ANR	5392247	ParameterList	"const char * s , int c"		5392221	3					
ANR	5392248	Parameter	const char * s	277:13:4901:4913	5392221	0	True				
ANR	5392249	ParameterType	const char *		5392221	0					
ANR	5392250	Identifier	s		5392221	1					
ANR	5392251	Parameter	int c	277:28:4916:4920	5392221	1	True				
ANR	5392252	ParameterType	int		5392221	0					
ANR	5392253	Identifier	c		5392221	1					
ANR	5392254	CFGEntryNode	ENTRY		5392221		True				
ANR	5392255	CFGExitNode	EXIT		5392221		True				
ANR	5392256	Symbol	* s ++		5392221						
ANR	5392257	Symbol	s		5392221						
ANR	5392258	Symbol	c		5392221						
ANR	5392259	Symbol	* s		5392221						
ANR	5392260	Function	grub_strrchr	289:0:5013:5159							
ANR	5392261	FunctionDef	"grub_strrchr (const char * s , int c)"		5392260	0					
ANR	5392262	CompoundStatement		291:0:5056:5159	5392260	0					
ANR	5392263	IdentifierDeclStatement	char * p = NULL ;	292:2:5060:5074	5392260	0	True				
ANR	5392264	IdentifierDecl	* p = NULL		5392260	0					
ANR	5392265	IdentifierDeclType	char *		5392260	0					
ANR	5392266	Identifier	p		5392260	1					
ANR	5392267	AssignmentExpression	* p = NULL		5392260	2		=			
ANR	5392268	Identifier	NULL		5392260	0					
ANR	5392269	Identifier	NULL		5392260	1					
ANR	5392270	DoStatement	do		5392260	1					
ANR	5392271	CompoundStatement		5:4:29:29	5392260	0					
ANR	5392272	IfStatement	if ( * s == c )		5392260	0					
ANR	5392273	Condition	* s == c	296:10:5098:5104	5392260	0	True				
ANR	5392274	EqualityExpression	* s == c		5392260	0		==			
ANR	5392275	UnaryOperationExpression	* s		5392260	0					
ANR	5392276	UnaryOperator	*		5392260	0					
ANR	5392277	Identifier	s		5392260	1					
ANR	5392278	Identifier	c		5392260	1					
ANR	5392279	ExpressionStatement	p = ( char * ) s	297:1:5108:5122	5392260	1	True				
ANR	5392280	AssignmentExpression	p = ( char * ) s		5392260	0		=			
ANR	5392281	Identifier	p		5392260	0					
ANR	5392282	CastExpression	( char * ) s		5392260	1					
ANR	5392283	CastTarget	char *		5392260	0					
ANR	5392284	Identifier	s		5392260	1					
ANR	5392285	Condition	* s ++	299:9:5139:5142	5392260	1	True				
ANR	5392286	UnaryOperationExpression	* s ++		5392260	0					
ANR	5392287	UnaryOperator	*		5392260	0					
ANR	5392288	PostIncDecOperationExpression	s ++		5392260	1					
ANR	5392289	Identifier	s		5392260	0					
ANR	5392290	IncDec	++		5392260	1					
ANR	5392291	ReturnStatement	return p ;	301:2:5149:5157	5392260	2	True				
ANR	5392292	Identifier	p		5392260	0					
ANR	5392293	ReturnType	char *		5392260	1					
ANR	5392294	Identifier	grub_strrchr		5392260	2					
ANR	5392295	ParameterList	"const char * s , int c"		5392260	3					
ANR	5392296	Parameter	const char * s	290:14:5034:5046	5392260	0	True				
ANR	5392297	ParameterType	const char *		5392260	0					
ANR	5392298	Identifier	s		5392260	1					
ANR	5392299	Parameter	int c	290:29:5049:5053	5392260	1	True				
ANR	5392300	ParameterType	int		5392260	0					
ANR	5392301	Identifier	c		5392260	1					
ANR	5392302	CFGEntryNode	ENTRY		5392260		True				
ANR	5392303	CFGExitNode	EXIT		5392260		True				
ANR	5392304	Symbol	p		5392260						
ANR	5392305	Symbol	* s ++		5392260						
ANR	5392306	Symbol	s		5392260						
ANR	5392307	Symbol	c		5392260						
ANR	5392308	Symbol	NULL		5392260						
ANR	5392309	Symbol	* s		5392260						
ANR	5392310	Function	grub_strstr	306:0:5240:6358							
ANR	5392311	FunctionDef	"grub_strstr (const char * haystack , const char * needle)"		5392310	0					
ANR	5392312	CompoundStatement		308:0:5302:6358	5392310	0					
ANR	5392313	IfStatement	if ( * needle != '\\0' )		5392310	0					
ANR	5392314	Condition	* needle != '\\0'	314:6:5633:5647	5392310	0	True				
ANR	5392315	EqualityExpression	* needle != '\\0'		5392310	0		!=			
ANR	5392316	UnaryOperationExpression	* needle		5392310	0					
ANR	5392317	UnaryOperator	*		5392310	0					
ANR	5392318	Identifier	needle		5392310	1					
ANR	5392319	PrimaryExpression	'\\0'		5392310	1					
ANR	5392320	CompoundStatement		11:6:448:466	5392310	1					
ANR	5392321	IdentifierDeclStatement	char b = * needle ++ ;	318:6:5751:5769	5392310	0	True				
ANR	5392322	IdentifierDecl	b = * needle ++		5392310	0					
ANR	5392323	IdentifierDeclType	char		5392310	0					
ANR	5392324	Identifier	b		5392310	1					
ANR	5392325	AssignmentExpression	b = * needle ++		5392310	2		=			
ANR	5392326	Identifier	b		5392310	0					
ANR	5392327	UnaryOperationExpression	* needle ++		5392310	1					
ANR	5392328	UnaryOperator	*		5392310	0					
ANR	5392329	PostIncDecOperationExpression	needle ++		5392310	1					
ANR	5392330	Identifier	needle		5392310	0					
ANR	5392331	IncDec	++		5392310	1					
ANR	5392332	ForStatement	for ( ; ; haystack ++ )		5392310	1					
ANR	5392333	PostIncDecOperationExpression	haystack ++	320:14:5786:5795	5392310	0	True				
ANR	5392334	Identifier	haystack		5392310	0					
ANR	5392335	IncDec	++		5392310	1					
ANR	5392336	CompoundStatement		14:1:496:496	5392310	1					
ANR	5392337	IfStatement	if ( * haystack == '\\0' )		5392310	0					
ANR	5392338	Condition	* haystack == '\\0'	322:7:5808:5824	5392310	0	True				
ANR	5392339	EqualityExpression	* haystack == '\\0'		5392310	0		==			
ANR	5392340	UnaryOperationExpression	* haystack		5392310	0					
ANR	5392341	UnaryOperator	*		5392310	0					
ANR	5392342	Identifier	haystack		5392310	1					
ANR	5392343	PrimaryExpression	'\\0'		5392310	1					
ANR	5392344	ReturnStatement	return NULL ;	324:5:5854:5865	5392310	1	True				
ANR	5392345	Identifier	NULL		5392310	0					
ANR	5392346	IfStatement	if ( * haystack == b )		5392310	1					
ANR	5392347	Condition	* haystack == b	325:7:5874:5887	5392310	0	True				
ANR	5392348	EqualityExpression	* haystack == b		5392310	0		==			
ANR	5392349	UnaryOperationExpression	* haystack		5392310	0					
ANR	5392350	UnaryOperator	*		5392310	0					
ANR	5392351	Identifier	haystack		5392310	1					
ANR	5392352	Identifier	b		5392310	1					
ANR	5392353	CompoundStatement		22:7:687:715	5392310	1					
ANR	5392354	IdentifierDeclStatement	const char * rhaystack = haystack + 1 ;	328:7:5945:5981	5392310	0	True				
ANR	5392355	IdentifierDecl	* rhaystack = haystack + 1		5392310	0					
ANR	5392356	IdentifierDeclType	const char *		5392310	0					
ANR	5392357	Identifier	rhaystack		5392310	1					
ANR	5392358	AssignmentExpression	* rhaystack = haystack + 1		5392310	2		=			
ANR	5392359	Identifier	rhaystack		5392310	0					
ANR	5392360	AdditiveExpression	haystack + 1		5392310	1		+			
ANR	5392361	Identifier	haystack		5392310	0					
ANR	5392362	PrimaryExpression	1		5392310	1					
ANR	5392363	IdentifierDeclStatement	const char * rneedle = needle ;	329:7:5990:6018	5392310	1	True				
ANR	5392364	IdentifierDecl	* rneedle = needle		5392310	0					
ANR	5392365	IdentifierDeclType	const char *		5392310	0					
ANR	5392366	Identifier	rneedle		5392310	1					
ANR	5392367	AssignmentExpression	* rneedle = needle		5392310	2		=			
ANR	5392368	Identifier	needle		5392310	0					
ANR	5392369	Identifier	needle		5392310	1					
ANR	5392370	ForStatement	"for ( ; ; rhaystack ++ , rneedle ++ )"		5392310	2					
ANR	5392371	Expression	"rhaystack ++ , rneedle ++"	331:15:6036:6057	5392310	0	True				
ANR	5392372	PostIncDecOperationExpression	rhaystack ++		5392310	0					
ANR	5392373	Identifier	rhaystack		5392310	0					
ANR	5392374	IncDec	++		5392310	1					
ANR	5392375	PostIncDecOperationExpression	rneedle ++		5392310	1					
ANR	5392376	Identifier	rneedle		5392310	0					
ANR	5392377	IncDec	++		5392310	1					
ANR	5392378	CompoundStatement		25:2:759:759	5392310	1					
ANR	5392379	IfStatement	if ( * rneedle == '\\0' )		5392310	0					
ANR	5392380	Condition	* rneedle == '\\0'	333:8:6072:6087	5392310	0	True				
ANR	5392381	EqualityExpression	* rneedle == '\\0'		5392310	0		==			
ANR	5392382	UnaryOperationExpression	* rneedle		5392310	0					
ANR	5392383	UnaryOperator	*		5392310	0					
ANR	5392384	Identifier	rneedle		5392310	1					
ANR	5392385	PrimaryExpression	'\\0'		5392310	1					
ANR	5392386	ReturnStatement	return ( char * ) haystack ;	335:6:6124:6148	5392310	1	True				
ANR	5392387	CastExpression	( char * ) haystack		5392310	0					
ANR	5392388	CastTarget	char *		5392310	0					
ANR	5392389	Identifier	haystack		5392310	1					
ANR	5392390	IfStatement	if ( * rhaystack == '\\0' )		5392310	1					
ANR	5392391	Condition	* rhaystack == '\\0'	336:8:6158:6175	5392310	0	True				
ANR	5392392	EqualityExpression	* rhaystack == '\\0'		5392310	0		==			
ANR	5392393	UnaryOperationExpression	* rhaystack		5392310	0					
ANR	5392394	UnaryOperator	*		5392310	0					
ANR	5392395	Identifier	rhaystack		5392310	1					
ANR	5392396	PrimaryExpression	'\\0'		5392310	1					
ANR	5392397	ReturnStatement	return NULL ;	338:6:6207:6218	5392310	1	True				
ANR	5392398	Identifier	NULL		5392310	0					
ANR	5392399	IfStatement	if ( * rhaystack != * rneedle )		5392310	2					
ANR	5392400	Condition	* rhaystack != * rneedle	339:8:6228:6249	5392310	0	True				
ANR	5392401	EqualityExpression	* rhaystack != * rneedle		5392310	0		!=			
ANR	5392402	UnaryOperationExpression	* rhaystack		5392310	0					
ANR	5392403	UnaryOperator	*		5392310	0					
ANR	5392404	Identifier	rhaystack		5392310	1					
ANR	5392405	UnaryOperationExpression	* rneedle		5392310	1					
ANR	5392406	UnaryOperator	*		5392310	0					
ANR	5392407	Identifier	rneedle		5392310	1					
ANR	5392408	BreakStatement	break ;	341:6:6294:6299	5392310	1	True				
ANR	5392409	ElseStatement	else		5392310	0					
ANR	5392410	ReturnStatement	return ( char * ) haystack ;	347:4:6332:6356	5392310	0	True				
ANR	5392411	CastExpression	( char * ) haystack		5392310	0					
ANR	5392412	CastTarget	char *		5392310	0					
ANR	5392413	Identifier	haystack		5392310	1					
ANR	5392414	ReturnType	char *		5392310	1					
ANR	5392415	Identifier	grub_strstr		5392310	2					
ANR	5392416	ParameterList	"const char * haystack , const char * needle"		5392310	3					
ANR	5392417	Parameter	const char * haystack	307:13:5260:5279	5392310	0	True				
ANR	5392418	ParameterType	const char *		5392310	0					
ANR	5392419	Identifier	haystack		5392310	1					
ANR	5392420	Parameter	const char * needle	307:35:5282:5299	5392310	1	True				
ANR	5392421	ParameterType	const char *		5392310	0					
ANR	5392422	Identifier	needle		5392310	1					
ANR	5392423	CFGEntryNode	ENTRY		5392310		True				
ANR	5392424	CFGExitNode	EXIT		5392310		True				
ANR	5392425	InfiniteForNode	true		5392310		True				
ANR	5392426	InfiniteForNode	true		5392310		True				
ANR	5392427	Symbol	b		5392310						
ANR	5392428	Symbol	* rneedle		5392310						
ANR	5392429	Symbol	haystack		5392310						
ANR	5392430	Symbol	NULL		5392310						
ANR	5392431	Symbol	* needle ++		5392310						
ANR	5392432	Symbol	* haystack		5392310						
ANR	5392433	Symbol	* needle		5392310						
ANR	5392434	Symbol	rneedle		5392310						
ANR	5392435	Symbol	needle		5392310						
ANR	5392436	Symbol	* rhaystack		5392310						
ANR	5392437	Symbol	rhaystack		5392310						
ANR	5392438	Function	grub_strword	350:0:6361:7347							
ANR	5392439	FunctionDef	"grub_strword (const char * haystack , const char * needle)"		5392438	0					
ANR	5392440	CompoundStatement		352:0:6421:7347	5392438	0					
ANR	5392441	IdentifierDeclStatement	const char * n_pos = needle ;	353:2:6425:6451	5392438	0	True				
ANR	5392442	IdentifierDecl	* n_pos = needle		5392438	0					
ANR	5392443	IdentifierDeclType	const char *		5392438	0					
ANR	5392444	Identifier	n_pos		5392438	1					
ANR	5392445	AssignmentExpression	* n_pos = needle		5392438	2		=			
ANR	5392446	Identifier	needle		5392438	0					
ANR	5392447	Identifier	needle		5392438	1					
ANR	5392448	WhileStatement	while ( grub_iswordseparator ( * haystack ) )		5392438	1					
ANR	5392449	Condition	grub_iswordseparator ( * haystack )	355:9:6463:6494	5392438	0	True				
ANR	5392450	CallExpression	grub_iswordseparator ( * haystack )		5392438	0					
ANR	5392451	Callee	grub_iswordseparator		5392438	0					
ANR	5392452	Identifier	grub_iswordseparator		5392438	0					
ANR	5392453	ArgumentList	* haystack		5392438	1					
ANR	5392454	Argument	* haystack		5392438	0					
ANR	5392455	UnaryOperationExpression	* haystack		5392438	0					
ANR	5392456	UnaryOperator	*		5392438	0					
ANR	5392457	Identifier	haystack		5392438	1					
ANR	5392458	ExpressionStatement	haystack ++	356:4:6501:6511	5392438	1	True				
ANR	5392459	PostIncDecOperationExpression	haystack ++		5392438	0					
ANR	5392460	Identifier	haystack		5392438	0					
ANR	5392461	IncDec	++		5392438	1					
ANR	5392462	WhileStatement	while ( * haystack )		5392438	2					
ANR	5392463	Condition	* haystack	358:9:6523:6531	5392438	0	True				
ANR	5392464	UnaryOperationExpression	* haystack		5392438	0					
ANR	5392465	UnaryOperator	*		5392438	0					
ANR	5392466	Identifier	haystack		5392438	1					
ANR	5392467	CompoundStatement		8:4:116:116	5392438	1					
ANR	5392468	WhileStatement	while ( * haystack && ! grub_iswordseparator ( * haystack ) && * haystack == * n_pos )		5392438	0					
ANR	5392469	Condition	* haystack && ! grub_iswordseparator ( * haystack ) && * haystack == * n_pos	361:12:6619:6699	5392438	0	True				
ANR	5392470	AndExpression	* haystack && ! grub_iswordseparator ( * haystack ) && * haystack == * n_pos		5392438	0		&&			
ANR	5392471	UnaryOperationExpression	* haystack		5392438	0					
ANR	5392472	UnaryOperator	*		5392438	0					
ANR	5392473	Identifier	haystack		5392438	1					
ANR	5392474	AndExpression	! grub_iswordseparator ( * haystack ) && * haystack == * n_pos		5392438	1		&&			
ANR	5392475	UnaryOperationExpression	! grub_iswordseparator ( * haystack )		5392438	0					
ANR	5392476	UnaryOperator	!		5392438	0					
ANR	5392477	CallExpression	grub_iswordseparator ( * haystack )		5392438	1					
ANR	5392478	Callee	grub_iswordseparator		5392438	0					
ANR	5392479	Identifier	grub_iswordseparator		5392438	0					
ANR	5392480	ArgumentList	* haystack		5392438	1					
ANR	5392481	Argument	* haystack		5392438	0					
ANR	5392482	UnaryOperationExpression	* haystack		5392438	0					
ANR	5392483	UnaryOperator	*		5392438	0					
ANR	5392484	Identifier	haystack		5392438	1					
ANR	5392485	EqualityExpression	* haystack == * n_pos		5392438	1		==			
ANR	5392486	UnaryOperationExpression	* haystack		5392438	0					
ANR	5392487	UnaryOperator	*		5392438	0					
ANR	5392488	Identifier	haystack		5392438	1					
ANR	5392489	UnaryOperationExpression	* n_pos		5392438	1					
ANR	5392490	UnaryOperator	*		5392438	0					
ANR	5392491	Identifier	n_pos		5392438	1					
ANR	5392492	CompoundStatement		12:8:288:288	5392438	1					
ANR	5392493	ExpressionStatement	haystack ++	364:10:6722:6732	5392438	0	True				
ANR	5392494	PostIncDecOperationExpression	haystack ++		5392438	0					
ANR	5392495	Identifier	haystack		5392438	0					
ANR	5392496	IncDec	++		5392438	1					
ANR	5392497	ExpressionStatement	n_pos ++	365:10:6744:6751	5392438	1	True				
ANR	5392498	PostIncDecOperationExpression	n_pos ++		5392438	0					
ANR	5392499	Identifier	n_pos		5392438	0					
ANR	5392500	IncDec	++		5392438	1					
ANR	5392501	IfStatement	if ( ( ! * haystack || grub_iswordseparator ( * haystack ) ) && ( ! * n_pos || grub_iswordseparator ( * n_pos ) ) )		5392438	1					
ANR	5392502	Condition	( ! * haystack || grub_iswordseparator ( * haystack ) ) && ( ! * n_pos || grub_iswordseparator ( * n_pos ) )	371:11:6984:7086	5392438	0	True				
ANR	5392503	AndExpression	( ! * haystack || grub_iswordseparator ( * haystack ) ) && ( ! * n_pos || grub_iswordseparator ( * n_pos ) )		5392438	0		&&			
ANR	5392504	OrExpression	! * haystack || grub_iswordseparator ( * haystack )		5392438	0		||			
ANR	5392505	UnaryOperationExpression	! * haystack		5392438	0					
ANR	5392506	UnaryOperator	!		5392438	0					
ANR	5392507	UnaryOperationExpression	* haystack		5392438	1					
ANR	5392508	UnaryOperator	*		5392438	0					
ANR	5392509	Identifier	haystack		5392438	1					
ANR	5392510	CallExpression	grub_iswordseparator ( * haystack )		5392438	1					
ANR	5392511	Callee	grub_iswordseparator		5392438	0					
ANR	5392512	Identifier	grub_iswordseparator		5392438	0					
ANR	5392513	ArgumentList	* haystack		5392438	1					
ANR	5392514	Argument	* haystack		5392438	0					
ANR	5392515	UnaryOperationExpression	* haystack		5392438	0					
ANR	5392516	UnaryOperator	*		5392438	0					
ANR	5392517	Identifier	haystack		5392438	1					
ANR	5392518	OrExpression	! * n_pos || grub_iswordseparator ( * n_pos )		5392438	1		||			
ANR	5392519	UnaryOperationExpression	! * n_pos		5392438	0					
ANR	5392520	UnaryOperator	!		5392438	0					
ANR	5392521	UnaryOperationExpression	* n_pos		5392438	1					
ANR	5392522	UnaryOperator	*		5392438	0					
ANR	5392523	Identifier	n_pos		5392438	1					
ANR	5392524	CallExpression	grub_iswordseparator ( * n_pos )		5392438	1					
ANR	5392525	Callee	grub_iswordseparator		5392438	0					
ANR	5392526	Identifier	grub_iswordseparator		5392438	0					
ANR	5392527	ArgumentList	* n_pos		5392438	1					
ANR	5392528	Argument	* n_pos		5392438	0					
ANR	5392529	UnaryOperationExpression	* n_pos		5392438	0					
ANR	5392530	UnaryOperator	*		5392438	0					
ANR	5392531	Identifier	n_pos		5392438	1					
ANR	5392532	ReturnStatement	return 1 ;	373:8:7097:7105	5392438	1	True				
ANR	5392533	PrimaryExpression	1		5392438	0					
ANR	5392534	ElseStatement	else		5392438	0					
ANR	5392535	CompoundStatement		24:8:704:704	5392438	0					
ANR	5392536	ExpressionStatement	n_pos = needle	376:10:7138:7152	5392438	0	True				
ANR	5392537	AssignmentExpression	n_pos = needle		5392438	0		=			
ANR	5392538	Identifier	n_pos		5392438	0					
ANR	5392539	Identifier	needle		5392438	1					
ANR	5392540	WhileStatement	while ( * haystack && ! grub_iswordseparator ( * haystack ) )		5392438	1					
ANR	5392541	Condition	* haystack && ! grub_iswordseparator ( * haystack )	377:17:7171:7216	5392438	0	True				
ANR	5392542	AndExpression	* haystack && ! grub_iswordseparator ( * haystack )		5392438	0		&&			
ANR	5392543	UnaryOperationExpression	* haystack		5392438	0					
ANR	5392544	UnaryOperator	*		5392438	0					
ANR	5392545	Identifier	haystack		5392438	1					
ANR	5392546	UnaryOperationExpression	! grub_iswordseparator ( * haystack )		5392438	1					
ANR	5392547	UnaryOperator	!		5392438	0					
ANR	5392548	CallExpression	grub_iswordseparator ( * haystack )		5392438	1					
ANR	5392549	Callee	grub_iswordseparator		5392438	0					
ANR	5392550	Identifier	grub_iswordseparator		5392438	0					
ANR	5392551	ArgumentList	* haystack		5392438	1					
ANR	5392552	Argument	* haystack		5392438	0					
ANR	5392553	UnaryOperationExpression	* haystack		5392438	0					
ANR	5392554	UnaryOperator	*		5392438	0					
ANR	5392555	Identifier	haystack		5392438	1					
ANR	5392556	ExpressionStatement	haystack ++	378:12:7231:7241	5392438	1	True				
ANR	5392557	PostIncDecOperationExpression	haystack ++		5392438	0					
ANR	5392558	Identifier	haystack		5392438	0					
ANR	5392559	IncDec	++		5392438	1					
ANR	5392560	WhileStatement	while ( grub_iswordseparator ( * haystack ) )		5392438	2					
ANR	5392561	Condition	grub_iswordseparator ( * haystack )	379:17:7260:7291	5392438	0	True				
ANR	5392562	CallExpression	grub_iswordseparator ( * haystack )		5392438	0					
ANR	5392563	Callee	grub_iswordseparator		5392438	0					
ANR	5392564	Identifier	grub_iswordseparator		5392438	0					
ANR	5392565	ArgumentList	* haystack		5392438	1					
ANR	5392566	Argument	* haystack		5392438	0					
ANR	5392567	UnaryOperationExpression	* haystack		5392438	0					
ANR	5392568	UnaryOperator	*		5392438	0					
ANR	5392569	Identifier	haystack		5392438	1					
ANR	5392570	ExpressionStatement	haystack ++	380:12:7306:7316	5392438	1	True				
ANR	5392571	PostIncDecOperationExpression	haystack ++		5392438	0					
ANR	5392572	Identifier	haystack		5392438	0					
ANR	5392573	IncDec	++		5392438	1					
ANR	5392574	ReturnStatement	return 0 ;	384:2:7337:7345	5392438	3	True				
ANR	5392575	PrimaryExpression	0		5392438	0					
ANR	5392576	ReturnType	int		5392438	1					
ANR	5392577	Identifier	grub_strword		5392438	2					
ANR	5392578	ParameterList	"const char * haystack , const char * needle"		5392438	3					
ANR	5392579	Parameter	const char * haystack	351:14:6379:6398	5392438	0	True				
ANR	5392580	ParameterType	const char *		5392438	0					
ANR	5392581	Identifier	haystack		5392438	1					
ANR	5392582	Parameter	const char * needle	351:36:6401:6418	5392438	1	True				
ANR	5392583	ParameterType	const char *		5392438	0					
ANR	5392584	Identifier	needle		5392438	1					
ANR	5392585	CFGEntryNode	ENTRY		5392438		True				
ANR	5392586	CFGExitNode	EXIT		5392438		True				
ANR	5392587	Symbol	haystack		5392438						
ANR	5392588	Symbol	* n_pos		5392438						
ANR	5392589	Symbol	* haystack		5392438						
ANR	5392590	Symbol	n_pos		5392438						
ANR	5392591	Symbol	grub_iswordseparator		5392438						
ANR	5392592	Symbol	needle		5392438						
ANR	5392593	Function	grub_isspace	387:0:7350:7437							
ANR	5392594	FunctionDef	grub_isspace (int c)		5392593	0					
ANR	5392595	CompoundStatement		389:0:7375:7437	5392593	0					
ANR	5392596	ReturnStatement	return ( c == '\\n' || c == '\\r' || c == ' ' || c == '\\t' ) ;	390:2:7379:7435	5392593	0	True				
ANR	5392597	OrExpression	c == '\\n' || c == '\\r' || c == ' ' || c == '\\t'		5392593	0		||			
ANR	5392598	EqualityExpression	c == '\\n'		5392593	0		==			
ANR	5392599	Identifier	c		5392593	0					
ANR	5392600	PrimaryExpression	'\\n'		5392593	1					
ANR	5392601	OrExpression	c == '\\r' || c == ' ' || c == '\\t'		5392593	1		||			
ANR	5392602	EqualityExpression	c == '\\r'		5392593	0		==			
ANR	5392603	Identifier	c		5392593	0					
ANR	5392604	PrimaryExpression	'\\r'		5392593	1					
ANR	5392605	OrExpression	c == ' ' || c == '\\t'		5392593	1		||			
ANR	5392606	EqualityExpression	c == ' '		5392593	0		==			
ANR	5392607	Identifier	c		5392593	0					
ANR	5392608	PrimaryExpression	' '		5392593	1					
ANR	5392609	EqualityExpression	c == '\\t'		5392593	1		==			
ANR	5392610	Identifier	c		5392593	0					
ANR	5392611	PrimaryExpression	'\\t'		5392593	1					
ANR	5392612	ReturnType	int		5392593	1					
ANR	5392613	Identifier	grub_isspace		5392593	2					
ANR	5392614	ParameterList	int c		5392593	3					
ANR	5392615	Parameter	int c	388:14:7368:7372	5392593	0	True				
ANR	5392616	ParameterType	int		5392593	0					
ANR	5392617	Identifier	c		5392593	1					
ANR	5392618	CFGEntryNode	ENTRY		5392593		True				
ANR	5392619	CFGExitNode	EXIT		5392593		True				
ANR	5392620	Symbol	c		5392593						
ANR	5392621	Function	grub_isprint	393:0:7440:7500							
ANR	5392622	FunctionDef	grub_isprint (int c)		5392621	0					
ANR	5392623	CompoundStatement		395:0:7465:7500	5392621	0					
ANR	5392624	ReturnStatement	return ( c >= ' ' && c <= '~' ) ;	396:2:7469:7498	5392621	0	True				
ANR	5392625	AndExpression	c >= ' ' && c <= '~'		5392621	0		&&			
ANR	5392626	RelationalExpression	c >= ' '		5392621	0		>=			
ANR	5392627	Identifier	c		5392621	0					
ANR	5392628	PrimaryExpression	' '		5392621	1					
ANR	5392629	RelationalExpression	c <= '~'		5392621	1		<=			
ANR	5392630	Identifier	c		5392621	0					
ANR	5392631	PrimaryExpression	'~'		5392621	1					
ANR	5392632	ReturnType	int		5392621	1					
ANR	5392633	Identifier	grub_isprint		5392621	2					
ANR	5392634	ParameterList	int c		5392621	3					
ANR	5392635	Parameter	int c	394:14:7458:7462	5392621	0	True				
ANR	5392636	ParameterType	int		5392621	0					
ANR	5392637	Identifier	c		5392621	1					
ANR	5392638	CFGEntryNode	ENTRY		5392621		True				
ANR	5392639	CFGExitNode	EXIT		5392621		True				
ANR	5392640	Symbol	c		5392621						
ANR	5392641	Function	grub_strtoul	400:0:7504:7786							
ANR	5392642	FunctionDef	"grub_strtoul (const char * str , char * * end , int base)"		5392641	0					
ANR	5392643	CompoundStatement		402:0:7571:7786	5392641	0					
ANR	5392644	IdentifierDeclStatement	unsigned long long num ;	403:2:7575:7597	5392641	0	True				
ANR	5392645	IdentifierDecl	num		5392641	0					
ANR	5392646	IdentifierDeclType	unsigned long long		5392641	0					
ANR	5392647	Identifier	num		5392641	1					
ANR	5392648	ExpressionStatement	"num = grub_strtoull ( str , end , base )"	405:2:7602:7638	5392641	1	True				
ANR	5392649	AssignmentExpression	"num = grub_strtoull ( str , end , base )"		5392641	0		=			
ANR	5392650	Identifier	num		5392641	0					
ANR	5392651	CallExpression	"grub_strtoull ( str , end , base )"		5392641	1					
ANR	5392652	Callee	grub_strtoull		5392641	0					
ANR	5392653	Identifier	grub_strtoull		5392641	0					
ANR	5392654	ArgumentList	str		5392641	1					
ANR	5392655	Argument	str		5392641	0					
ANR	5392656	Identifier	str		5392641	0					
ANR	5392657	Argument	end		5392641	1					
ANR	5392658	Identifier	end		5392641	0					
ANR	5392659	Argument	base		5392641	2					
ANR	5392660	Identifier	base		5392641	0					
ANR	5392661	IfStatement	if ( num > ~0UL )		5392641	2					
ANR	5392662	Condition	num > ~0UL	406:6:7646:7655	5392641	0	True				
ANR	5392663	RelationalExpression	num > ~0UL		5392641	0		>			
ANR	5392664	Identifier	num		5392641	0					
ANR	5392665	Identifier	~0UL		5392641	1					
ANR	5392666	CompoundStatement		6:4:90:90	5392641	1					
ANR	5392667	ExpressionStatement	"grub_error ( GRUB_ERR_OUT_OF_RANGE , ""overflow is detected"" )"	408:6:7670:7728	5392641	0	True				
ANR	5392668	CallExpression	"grub_error ( GRUB_ERR_OUT_OF_RANGE , ""overflow is detected"" )"		5392641	0					
ANR	5392669	Callee	grub_error		5392641	0					
ANR	5392670	Identifier	grub_error		5392641	0					
ANR	5392671	ArgumentList	GRUB_ERR_OUT_OF_RANGE		5392641	1					
ANR	5392672	Argument	GRUB_ERR_OUT_OF_RANGE		5392641	0					
ANR	5392673	Identifier	GRUB_ERR_OUT_OF_RANGE		5392641	0					
ANR	5392674	Argument	"""overflow is detected"""		5392641	1					
ANR	5392675	PrimaryExpression	"""overflow is detected"""		5392641	0					
ANR	5392676	ReturnStatement	return ~0UL ;	409:6:7736:7747	5392641	1	True				
ANR	5392677	Identifier	~0UL		5392641	0					
ANR	5392678	ReturnStatement	return ( unsigned long ) num ;	412:2:7758:7784	5392641	3	True				
ANR	5392679	CastExpression	( unsigned long ) num		5392641	0					
ANR	5392680	CastTarget	unsigned long		5392641	0					
ANR	5392681	Identifier	num		5392641	1					
ANR	5392682	ReturnType	unsigned long		5392641	1					
ANR	5392683	Identifier	grub_strtoul		5392641	2					
ANR	5392684	ParameterList	"const char * str , char * * end , int base"		5392641	3					
ANR	5392685	Parameter	const char * str	401:14:7532:7546	5392641	0	True				
ANR	5392686	ParameterType	const char *		5392641	0					
ANR	5392687	Identifier	str		5392641	1					
ANR	5392688	Parameter	char * * end	401:31:7549:7558	5392641	1	True				
ANR	5392689	ParameterType	char * *		5392641	0					
ANR	5392690	Identifier	end		5392641	1					
ANR	5392691	Parameter	int base	401:43:7561:7568	5392641	2	True				
ANR	5392692	ParameterType	int		5392641	0					
ANR	5392693	Identifier	base		5392641	1					
ANR	5392694	CFGEntryNode	ENTRY		5392641		True				
ANR	5392695	CFGExitNode	EXIT		5392641		True				
ANR	5392696	Symbol	str		5392641						
ANR	5392697	Symbol	~0UL		5392641						
ANR	5392698	Symbol	grub_strtoull		5392641						
ANR	5392699	Symbol	num		5392641						
ANR	5392700	Symbol	end		5392641						
ANR	5392701	Symbol	GRUB_ERR_OUT_OF_RANGE		5392641						
ANR	5392702	Symbol	base		5392641						
ANR	5392703	Function	grub_strtoull	415:0:7789:8948							
ANR	5392704	FunctionDef	"grub_strtoull (const char * str , char * * end , int base)"		5392703	0					
ANR	5392705	CompoundStatement		417:0:7862:8948	5392703	0					
ANR	5392706	IdentifierDeclStatement	unsigned long long num = 0 ;	418:2:7866:7892	5392703	0	True				
ANR	5392707	IdentifierDecl	num = 0		5392703	0					
ANR	5392708	IdentifierDeclType	unsigned long long		5392703	0					
ANR	5392709	Identifier	num		5392703	1					
ANR	5392710	AssignmentExpression	num = 0		5392703	2		=			
ANR	5392711	Identifier	num		5392703	0					
ANR	5392712	PrimaryExpression	0		5392703	1					
ANR	5392713	IdentifierDeclStatement	int found = 0 ;	419:2:7896:7909	5392703	1	True				
ANR	5392714	IdentifierDecl	found = 0		5392703	0					
ANR	5392715	IdentifierDeclType	int		5392703	0					
ANR	5392716	Identifier	found		5392703	1					
ANR	5392717	AssignmentExpression	found = 0		5392703	2		=			
ANR	5392718	Identifier	found		5392703	0					
ANR	5392719	PrimaryExpression	0		5392703	1					
ANR	5392720	WhileStatement	while ( * str && grub_isspace ( * str ) )		5392703	2					
ANR	5392721	Condition	* str && grub_isspace ( * str )	422:9:7949:7975	5392703	0	True				
ANR	5392722	AndExpression	* str && grub_isspace ( * str )		5392703	0		&&			
ANR	5392723	UnaryOperationExpression	* str		5392703	0					
ANR	5392724	UnaryOperator	*		5392703	0					
ANR	5392725	Identifier	str		5392703	1					
ANR	5392726	CallExpression	grub_isspace ( * str )		5392703	1					
ANR	5392727	Callee	grub_isspace		5392703	0					
ANR	5392728	Identifier	grub_isspace		5392703	0					
ANR	5392729	ArgumentList	* str		5392703	1					
ANR	5392730	Argument	* str		5392703	0					
ANR	5392731	UnaryOperationExpression	* str		5392703	0					
ANR	5392732	UnaryOperator	*		5392703	0					
ANR	5392733	Identifier	str		5392703	1					
ANR	5392734	ExpressionStatement	str ++	423:4:7982:7987	5392703	1	True				
ANR	5392735	PostIncDecOperationExpression	str ++		5392703	0					
ANR	5392736	Identifier	str		5392703	0					
ANR	5392737	IncDec	++		5392703	1					
ANR	5392738	IfStatement	if ( str [ 0 ] == '0' )		5392703	3					
ANR	5392739	Condition	str [ 0 ] == '0'	427:6:8098:8110	5392703	0	True				
ANR	5392740	EqualityExpression	str [ 0 ] == '0'		5392703	0		==			
ANR	5392741	ArrayIndexing	str [ 0 ]		5392703	0					
ANR	5392742	Identifier	str		5392703	0					
ANR	5392743	PrimaryExpression	0		5392703	1					
ANR	5392744	PrimaryExpression	'0'		5392703	1					
ANR	5392745	CompoundStatement		12:4:254:254	5392703	1					
ANR	5392746	IfStatement	if ( str [ 1 ] == 'x' )		5392703	0					
ANR	5392747	Condition	str [ 1 ] == 'x'	429:10:8129:8141	5392703	0	True				
ANR	5392748	EqualityExpression	str [ 1 ] == 'x'		5392703	0		==			
ANR	5392749	ArrayIndexing	str [ 1 ]		5392703	0					
ANR	5392750	Identifier	str		5392703	0					
ANR	5392751	PrimaryExpression	1		5392703	1					
ANR	5392752	PrimaryExpression	'x'		5392703	1					
ANR	5392753	CompoundStatement		14:1:282:282	5392703	1					
ANR	5392754	IfStatement	if ( base == 0 || base == 16 )		5392703	0					
ANR	5392755	Condition	base == 0 || base == 16	431:7:8154:8176	5392703	0	True				
ANR	5392756	OrExpression	base == 0 || base == 16		5392703	0		||			
ANR	5392757	EqualityExpression	base == 0		5392703	0		==			
ANR	5392758	Identifier	base		5392703	0					
ANR	5392759	PrimaryExpression	0		5392703	1					
ANR	5392760	EqualityExpression	base == 16		5392703	1		==			
ANR	5392761	Identifier	base		5392703	0					
ANR	5392762	PrimaryExpression	16		5392703	1					
ANR	5392763	CompoundStatement		16:5:321:321	5392703	1					
ANR	5392764	ExpressionStatement	base = 16	433:7:8193:8202	5392703	0	True				
ANR	5392765	AssignmentExpression	base = 16		5392703	0		=			
ANR	5392766	Identifier	base		5392703	0					
ANR	5392767	PrimaryExpression	16		5392703	1					
ANR	5392768	ExpressionStatement	str += 2	434:7:8211:8219	5392703	1	True				
ANR	5392769	AssignmentExpression	str += 2		5392703	0		+=			
ANR	5392770	Identifier	str		5392703	0					
ANR	5392771	PrimaryExpression	2		5392703	1					
ANR	5392772	ElseStatement	else		5392703	0					
ANR	5392773	IfStatement	if ( base == 0 && str [ 1 ] >= '0' && str [ 1 ] <= '7' )		5392703	0					
ANR	5392774	Condition	base == 0 && str [ 1 ] >= '0' && str [ 1 ] <= '7'	437:15:8246:8288	5392703	0	True				
ANR	5392775	AndExpression	base == 0 && str [ 1 ] >= '0' && str [ 1 ] <= '7'		5392703	0		&&			
ANR	5392776	EqualityExpression	base == 0		5392703	0		==			
ANR	5392777	Identifier	base		5392703	0					
ANR	5392778	PrimaryExpression	0		5392703	1					
ANR	5392779	AndExpression	str [ 1 ] >= '0' && str [ 1 ] <= '7'		5392703	1		&&			
ANR	5392780	RelationalExpression	str [ 1 ] >= '0'		5392703	0		>=			
ANR	5392781	ArrayIndexing	str [ 1 ]		5392703	0					
ANR	5392782	Identifier	str		5392703	0					
ANR	5392783	PrimaryExpression	1		5392703	1					
ANR	5392784	PrimaryExpression	'0'		5392703	1					
ANR	5392785	RelationalExpression	str [ 1 ] <= '7'		5392703	1		<=			
ANR	5392786	ArrayIndexing	str [ 1 ]		5392703	0					
ANR	5392787	Identifier	str		5392703	0					
ANR	5392788	PrimaryExpression	1		5392703	1					
ANR	5392789	PrimaryExpression	'7'		5392703	1					
ANR	5392790	ExpressionStatement	base = 8	438:1:8292:8300	5392703	1	True				
ANR	5392791	AssignmentExpression	base = 8		5392703	0		=			
ANR	5392792	Identifier	base		5392703	0					
ANR	5392793	PrimaryExpression	8		5392703	1					
ANR	5392794	IfStatement	if ( base == 0 )		5392703	4					
ANR	5392795	Condition	base == 0	441:6:8315:8323	5392703	0	True				
ANR	5392796	EqualityExpression	base == 0		5392703	0		==			
ANR	5392797	Identifier	base		5392703	0					
ANR	5392798	PrimaryExpression	0		5392703	1					
ANR	5392799	ExpressionStatement	base = 10	442:4:8330:8339	5392703	1	True				
ANR	5392800	AssignmentExpression	base = 10		5392703	0		=			
ANR	5392801	Identifier	base		5392703	0					
ANR	5392802	PrimaryExpression	10		5392703	1					
ANR	5392803	WhileStatement	while ( * str )		5392703	5					
ANR	5392804	Condition	* str	444:9:8351:8354	5392703	0	True				
ANR	5392805	UnaryOperationExpression	* str		5392703	0					
ANR	5392806	UnaryOperator	*		5392703	0					
ANR	5392807	Identifier	str		5392703	1					
ANR	5392808	CompoundStatement		30:6:506:525	5392703	1					
ANR	5392809	IdentifierDeclStatement	unsigned long digit ;	446:6:8369:8388	5392703	0	True				
ANR	5392810	IdentifierDecl	digit		5392703	0					
ANR	5392811	IdentifierDeclType	unsigned long		5392703	0					
ANR	5392812	Identifier	digit		5392703	1					
ANR	5392813	ExpressionStatement	digit = grub_tolower ( * str ) - '0'	448:6:8397:8430	5392703	1	True				
ANR	5392814	AssignmentExpression	digit = grub_tolower ( * str ) - '0'		5392703	0		=			
ANR	5392815	Identifier	digit		5392703	0					
ANR	5392816	AdditiveExpression	grub_tolower ( * str ) - '0'		5392703	1		-			
ANR	5392817	CallExpression	grub_tolower ( * str )		5392703	0					
ANR	5392818	Callee	grub_tolower		5392703	0					
ANR	5392819	Identifier	grub_tolower		5392703	0					
ANR	5392820	ArgumentList	* str		5392703	1					
ANR	5392821	Argument	* str		5392703	0					
ANR	5392822	UnaryOperationExpression	* str		5392703	0					
ANR	5392823	UnaryOperator	*		5392703	0					
ANR	5392824	Identifier	str		5392703	1					
ANR	5392825	PrimaryExpression	'0'		5392703	1					
ANR	5392826	IfStatement	if ( digit > 9 )		5392703	2					
ANR	5392827	Condition	digit > 9	449:10:8442:8450	5392703	0	True				
ANR	5392828	RelationalExpression	digit > 9		5392703	0		>			
ANR	5392829	Identifier	digit		5392703	0					
ANR	5392830	PrimaryExpression	9		5392703	1					
ANR	5392831	CompoundStatement		34:1:591:591	5392703	1					
ANR	5392832	ExpressionStatement	digit += '0' - 'a' + 10	451:3:8459:8482	5392703	0	True				
ANR	5392833	AssignmentExpression	digit += '0' - 'a' + 10		5392703	0		+=			
ANR	5392834	Identifier	digit		5392703	0					
ANR	5392835	AdditiveExpression	'0' - 'a' + 10		5392703	1		-			
ANR	5392836	PrimaryExpression	'0'		5392703	0					
ANR	5392837	AdditiveExpression	'a' + 10		5392703	1		+			
ANR	5392838	PrimaryExpression	'a'		5392703	0					
ANR	5392839	PrimaryExpression	10		5392703	1					
ANR	5392840	IfStatement	if ( digit >= ( unsigned long ) base )		5392703	1					
ANR	5392841	Condition	digit >= ( unsigned long ) base	452:7:8491:8519	5392703	0	True				
ANR	5392842	RelationalExpression	digit >= ( unsigned long ) base		5392703	0		>=			
ANR	5392843	Identifier	digit		5392703	0					
ANR	5392844	CastExpression	( unsigned long ) base		5392703	1					
ANR	5392845	CastTarget	unsigned long		5392703	0					
ANR	5392846	Identifier	base		5392703	1					
ANR	5392847	BreakStatement	break ;	453:5:8527:8532	5392703	1	True				
ANR	5392848	ExpressionStatement	found = 1	456:6:8544:8553	5392703	3	True				
ANR	5392849	AssignmentExpression	found = 1		5392703	0		=			
ANR	5392850	Identifier	found		5392703	0					
ANR	5392851	PrimaryExpression	1		5392703	1					
ANR	5392852	IfStatement	"if ( num > grub_divmod64 ( ~0ULL - digit , base , 0 ) )"		5392703	4					
ANR	5392853	Condition	"num > grub_divmod64 ( ~0ULL - digit , base , 0 )"	459:10:8605:8648	5392703	0	True				
ANR	5392854	RelationalExpression	"num > grub_divmod64 ( ~0ULL - digit , base , 0 )"		5392703	0		>			
ANR	5392855	Identifier	num		5392703	0					
ANR	5392856	CallExpression	"grub_divmod64 ( ~0ULL - digit , base , 0 )"		5392703	1					
ANR	5392857	Callee	grub_divmod64		5392703	0					
ANR	5392858	Identifier	grub_divmod64		5392703	0					
ANR	5392859	ArgumentList	~0ULL - digit		5392703	1					
ANR	5392860	Argument	~0ULL - digit		5392703	0					
ANR	5392861	AdditiveExpression	~0ULL - digit		5392703	0		-			
ANR	5392862	Identifier	~0ULL		5392703	0					
ANR	5392863	Identifier	digit		5392703	1					
ANR	5392864	Argument	base		5392703	1					
ANR	5392865	Identifier	base		5392703	0					
ANR	5392866	Argument	0		5392703	2					
ANR	5392867	PrimaryExpression	0		5392703	0					
ANR	5392868	CompoundStatement		44:1:789:789	5392703	1					
ANR	5392869	ExpressionStatement	"grub_error ( GRUB_ERR_OUT_OF_RANGE , ""overflow is detected"" )"	461:3:8657:8715	5392703	0	True				
ANR	5392870	CallExpression	"grub_error ( GRUB_ERR_OUT_OF_RANGE , ""overflow is detected"" )"		5392703	0					
ANR	5392871	Callee	grub_error		5392703	0					
ANR	5392872	Identifier	grub_error		5392703	0					
ANR	5392873	ArgumentList	GRUB_ERR_OUT_OF_RANGE		5392703	1					
ANR	5392874	Argument	GRUB_ERR_OUT_OF_RANGE		5392703	0					
ANR	5392875	Identifier	GRUB_ERR_OUT_OF_RANGE		5392703	0					
ANR	5392876	Argument	"""overflow is detected"""		5392703	1					
ANR	5392877	PrimaryExpression	"""overflow is detected"""		5392703	0					
ANR	5392878	ReturnStatement	return ~0ULL ;	462:3:8720:8732	5392703	1	True				
ANR	5392879	Identifier	~0ULL		5392703	0					
ANR	5392880	ExpressionStatement	num = num * base + digit	465:6:8744:8768	5392703	5	True				
ANR	5392881	AssignmentExpression	num = num * base + digit		5392703	0		=			
ANR	5392882	Identifier	num		5392703	0					
ANR	5392883	AdditiveExpression	num * base + digit		5392703	1		+			
ANR	5392884	MultiplicativeExpression	num * base		5392703	0		*			
ANR	5392885	Identifier	num		5392703	0					
ANR	5392886	Identifier	base		5392703	1					
ANR	5392887	Identifier	digit		5392703	1					
ANR	5392888	ExpressionStatement	str ++	466:6:8776:8781	5392703	6	True				
ANR	5392889	PostIncDecOperationExpression	str ++		5392703	0					
ANR	5392890	Identifier	str		5392703	0					
ANR	5392891	IncDec	++		5392703	1					
ANR	5392892	IfStatement	if ( ! found )		5392703	6					
ANR	5392893	Condition	! found	469:6:8796:8802	5392703	0	True				
ANR	5392894	UnaryOperationExpression	! found		5392703	0					
ANR	5392895	UnaryOperator	!		5392703	0					
ANR	5392896	Identifier	found		5392703	1					
ANR	5392897	CompoundStatement		54:4:946:946	5392703	1					
ANR	5392898	ExpressionStatement	"grub_error ( GRUB_ERR_BAD_NUMBER , ""unrecognized number"" )"	471:6:8817:8872	5392703	0	True				
ANR	5392899	CallExpression	"grub_error ( GRUB_ERR_BAD_NUMBER , ""unrecognized number"" )"		5392703	0					
ANR	5392900	Callee	grub_error		5392703	0					
ANR	5392901	Identifier	grub_error		5392703	0					
ANR	5392902	ArgumentList	GRUB_ERR_BAD_NUMBER		5392703	1					
ANR	5392903	Argument	GRUB_ERR_BAD_NUMBER		5392703	0					
ANR	5392904	Identifier	GRUB_ERR_BAD_NUMBER		5392703	0					
ANR	5392905	Argument	"""unrecognized number"""		5392703	1					
ANR	5392906	PrimaryExpression	"""unrecognized number"""		5392703	0					
ANR	5392907	ReturnStatement	return 0 ;	472:6:8880:8888	5392703	1	True				
ANR	5392908	PrimaryExpression	0		5392703	0					
ANR	5392909	IfStatement	if ( end )		5392703	7					
ANR	5392910	Condition	end	475:6:8903:8905	5392703	0	True				
ANR	5392911	Identifier	end		5392703	0					
ANR	5392912	ExpressionStatement	* end = ( char * ) str	476:4:8912:8931	5392703	1	True				
ANR	5392913	AssignmentExpression	* end = ( char * ) str		5392703	0		=			
ANR	5392914	UnaryOperationExpression	* end		5392703	0					
ANR	5392915	UnaryOperator	*		5392703	0					
ANR	5392916	Identifier	end		5392703	1					
ANR	5392917	CastExpression	( char * ) str		5392703	1					
ANR	5392918	CastTarget	char *		5392703	0					
ANR	5392919	Identifier	str		5392703	1					
ANR	5392920	ReturnStatement	return num ;	478:2:8936:8946	5392703	8	True				
ANR	5392921	Identifier	num		5392703	0					
ANR	5392922	ReturnType	unsigned long long		5392703	1					
ANR	5392923	Identifier	grub_strtoull		5392703	2					
ANR	5392924	ParameterList	"const char * str , char * * end , int base"		5392703	3					
ANR	5392925	Parameter	const char * str	416:15:7823:7837	5392703	0	True				
ANR	5392926	ParameterType	const char *		5392703	0					
ANR	5392927	Identifier	str		5392703	1					
ANR	5392928	Parameter	char * * end	416:32:7840:7849	5392703	1	True				
ANR	5392929	ParameterType	char * *		5392703	0					
ANR	5392930	Identifier	end		5392703	1					
ANR	5392931	Parameter	int base	416:44:7852:7859	5392703	2	True				
ANR	5392932	ParameterType	int		5392703	0					
ANR	5392933	Identifier	base		5392703	1					
ANR	5392934	CFGEntryNode	ENTRY		5392703		True				
ANR	5392935	CFGExitNode	EXIT		5392703		True				
ANR	5392936	Symbol	~0ULL		5392703						
ANR	5392937	Symbol	num		5392703						
ANR	5392938	Symbol	GRUB_ERR_OUT_OF_RANGE		5392703						
ANR	5392939	Symbol	grub_isspace		5392703						
ANR	5392940	Symbol	GRUB_ERR_BAD_NUMBER		5392703						
ANR	5392941	Symbol	str		5392703						
ANR	5392942	Symbol	found		5392703						
ANR	5392943	Symbol	grub_tolower		5392703						
ANR	5392944	Symbol	grub_divmod64		5392703						
ANR	5392945	Symbol	end		5392703						
ANR	5392946	Symbol	* end		5392703						
ANR	5392947	Symbol	* str		5392703						
ANR	5392948	Symbol	base		5392703						
ANR	5392949	Symbol	digit		5392703						
ANR	5392950	Function	grub_strdup	481:0:8951:9142							
ANR	5392951	FunctionDef	grub_strdup (const char * s)		5392950	0					
ANR	5392952	CompoundStatement		483:0:8986:9142	5392950	0					
ANR	5392953	IdentifierDeclStatement	grub_size_t len ;	484:2:8990:9005	5392950	0	True				
ANR	5392954	IdentifierDecl	len		5392950	0					
ANR	5392955	IdentifierDeclType	grub_size_t		5392950	0					
ANR	5392956	Identifier	len		5392950	1					
ANR	5392957	IdentifierDeclStatement	char * p ;	485:2:9009:9016	5392950	1	True				
ANR	5392958	IdentifierDecl	* p		5392950	0					
ANR	5392959	IdentifierDeclType	char *		5392950	0					
ANR	5392960	Identifier	p		5392950	1					
ANR	5392961	ExpressionStatement	len = grub_strlen ( s ) + 1	487:2:9021:9046	5392950	2	True				
ANR	5392962	AssignmentExpression	len = grub_strlen ( s ) + 1		5392950	0		=			
ANR	5392963	Identifier	len		5392950	0					
ANR	5392964	AdditiveExpression	grub_strlen ( s ) + 1		5392950	1		+			
ANR	5392965	CallExpression	grub_strlen ( s )		5392950	0					
ANR	5392966	Callee	grub_strlen		5392950	0					
ANR	5392967	Identifier	grub_strlen		5392950	0					
ANR	5392968	ArgumentList	s		5392950	1					
ANR	5392969	Argument	s		5392950	0					
ANR	5392970	Identifier	s		5392950	0					
ANR	5392971	PrimaryExpression	1		5392950	1					
ANR	5392972	ExpressionStatement	p = ( char * ) grub_malloc ( len )	488:2:9050:9080	5392950	3	True				
ANR	5392973	AssignmentExpression	p = ( char * ) grub_malloc ( len )		5392950	0		=			
ANR	5392974	Identifier	p		5392950	0					
ANR	5392975	CastExpression	( char * ) grub_malloc ( len )		5392950	1					
ANR	5392976	CastTarget	char *		5392950	0					
ANR	5392977	CallExpression	grub_malloc ( len )		5392950	1					
ANR	5392978	Callee	grub_malloc		5392950	0					
ANR	5392979	Identifier	grub_malloc		5392950	0					
ANR	5392980	ArgumentList	len		5392950	1					
ANR	5392981	Argument	len		5392950	0					
ANR	5392982	Identifier	len		5392950	0					
ANR	5392983	IfStatement	if ( ! p )		5392950	4					
ANR	5392984	Condition	! p	489:6:9088:9090	5392950	0	True				
ANR	5392985	UnaryOperationExpression	! p		5392950	0					
ANR	5392986	UnaryOperator	!		5392950	0					
ANR	5392987	Identifier	p		5392950	1					
ANR	5392988	ReturnStatement	return 0 ;	490:4:9097:9105	5392950	1	True				
ANR	5392989	PrimaryExpression	0		5392950	0					
ANR	5392990	ReturnStatement	"return grub_memcpy ( p , s , len ) ;"	492:2:9110:9140	5392950	5	True				
ANR	5392991	CallExpression	"grub_memcpy ( p , s , len )"		5392950	0					
ANR	5392992	Callee	grub_memcpy		5392950	0					
ANR	5392993	Identifier	grub_memcpy		5392950	0					
ANR	5392994	ArgumentList	p		5392950	1					
ANR	5392995	Argument	p		5392950	0					
ANR	5392996	Identifier	p		5392950	0					
ANR	5392997	Argument	s		5392950	1					
ANR	5392998	Identifier	s		5392950	0					
ANR	5392999	Argument	len		5392950	2					
ANR	5393000	Identifier	len		5392950	0					
ANR	5393001	ReturnType	char *		5392950	1					
ANR	5393002	Identifier	grub_strdup		5392950	2					
ANR	5393003	ParameterList	const char * s		5392950	3					
ANR	5393004	Parameter	const char * s	482:13:8971:8983	5392950	0	True				
ANR	5393005	ParameterType	const char *		5392950	0					
ANR	5393006	Identifier	s		5392950	1					
ANR	5393007	CFGEntryNode	ENTRY		5392950		True				
ANR	5393008	CFGExitNode	EXIT		5392950		True				
ANR	5393009	Symbol	p		5392950						
ANR	5393010	Symbol	s		5392950						
ANR	5393011	Symbol	grub_malloc		5392950						
ANR	5393012	Symbol	len		5392950						
ANR	5393013	Symbol	grub_memcpy		5392950						
ANR	5393014	Symbol	grub_strlen		5392950						
ANR	5393015	Function	grub_strndup	495:0:9145:9402							
ANR	5393016	FunctionDef	"grub_strndup (const char * s , grub_size_t n)"		5393015	0					
ANR	5393017	CompoundStatement		497:0:9196:9402	5393015	0					
ANR	5393018	IdentifierDeclStatement	grub_size_t len ;	498:2:9200:9215	5393015	0	True				
ANR	5393019	IdentifierDecl	len		5393015	0					
ANR	5393020	IdentifierDeclType	grub_size_t		5393015	0					
ANR	5393021	Identifier	len		5393015	1					
ANR	5393022	IdentifierDeclStatement	char * p ;	499:2:9219:9226	5393015	1	True				
ANR	5393023	IdentifierDecl	* p		5393015	0					
ANR	5393024	IdentifierDeclType	char *		5393015	0					
ANR	5393025	Identifier	p		5393015	1					
ANR	5393026	ExpressionStatement	len = grub_strlen ( s )	501:2:9231:9252	5393015	2	True				
ANR	5393027	AssignmentExpression	len = grub_strlen ( s )		5393015	0		=			
ANR	5393028	Identifier	len		5393015	0					
ANR	5393029	CallExpression	grub_strlen ( s )		5393015	1					
ANR	5393030	Callee	grub_strlen		5393015	0					
ANR	5393031	Identifier	grub_strlen		5393015	0					
ANR	5393032	ArgumentList	s		5393015	1					
ANR	5393033	Argument	s		5393015	0					
ANR	5393034	Identifier	s		5393015	0					
ANR	5393035	IfStatement	if ( len > n )		5393015	3					
ANR	5393036	Condition	len > n	502:6:9260:9266	5393015	0	True				
ANR	5393037	RelationalExpression	len > n		5393015	0		>			
ANR	5393038	Identifier	len		5393015	0					
ANR	5393039	Identifier	n		5393015	1					
ANR	5393040	ExpressionStatement	len = n	503:4:9273:9280	5393015	1	True				
ANR	5393041	AssignmentExpression	len = n		5393015	0		=			
ANR	5393042	Identifier	len		5393015	0					
ANR	5393043	Identifier	n		5393015	1					
ANR	5393044	ExpressionStatement	p = ( char * ) grub_malloc ( len + 1 )	504:2:9284:9318	5393015	4	True				
ANR	5393045	AssignmentExpression	p = ( char * ) grub_malloc ( len + 1 )		5393015	0		=			
ANR	5393046	Identifier	p		5393015	0					
ANR	5393047	CastExpression	( char * ) grub_malloc ( len + 1 )		5393015	1					
ANR	5393048	CastTarget	char *		5393015	0					
ANR	5393049	CallExpression	grub_malloc ( len + 1 )		5393015	1					
ANR	5393050	Callee	grub_malloc		5393015	0					
ANR	5393051	Identifier	grub_malloc		5393015	0					
ANR	5393052	ArgumentList	len + 1		5393015	1					
ANR	5393053	Argument	len + 1		5393015	0					
ANR	5393054	AdditiveExpression	len + 1		5393015	0		+			
ANR	5393055	Identifier	len		5393015	0					
ANR	5393056	PrimaryExpression	1		5393015	1					
ANR	5393057	IfStatement	if ( ! p )		5393015	5					
ANR	5393058	Condition	! p	505:6:9326:9328	5393015	0	True				
ANR	5393059	UnaryOperationExpression	! p		5393015	0					
ANR	5393060	UnaryOperator	!		5393015	0					
ANR	5393061	Identifier	p		5393015	1					
ANR	5393062	ReturnStatement	return 0 ;	506:4:9335:9343	5393015	1	True				
ANR	5393063	PrimaryExpression	0		5393015	0					
ANR	5393064	ExpressionStatement	"grub_memcpy ( p , s , len )"	508:2:9348:9371	5393015	6	True				
ANR	5393065	CallExpression	"grub_memcpy ( p , s , len )"		5393015	0					
ANR	5393066	Callee	grub_memcpy		5393015	0					
ANR	5393067	Identifier	grub_memcpy		5393015	0					
ANR	5393068	ArgumentList	p		5393015	1					
ANR	5393069	Argument	p		5393015	0					
ANR	5393070	Identifier	p		5393015	0					
ANR	5393071	Argument	s		5393015	1					
ANR	5393072	Identifier	s		5393015	0					
ANR	5393073	Argument	len		5393015	2					
ANR	5393074	Identifier	len		5393015	0					
ANR	5393075	ExpressionStatement	p [ len ] = '\\0'	509:2:9375:9388	5393015	7	True				
ANR	5393076	AssignmentExpression	p [ len ] = '\\0'		5393015	0		=			
ANR	5393077	ArrayIndexing	p [ len ]		5393015	0					
ANR	5393078	Identifier	p		5393015	0					
ANR	5393079	Identifier	len		5393015	1					
ANR	5393080	PrimaryExpression	'\\0'		5393015	1					
ANR	5393081	ReturnStatement	return p ;	510:2:9392:9400	5393015	8	True				
ANR	5393082	Identifier	p		5393015	0					
ANR	5393083	ReturnType	char *		5393015	1					
ANR	5393084	Identifier	grub_strndup		5393015	2					
ANR	5393085	ParameterList	"const char * s , grub_size_t n"		5393015	3					
ANR	5393086	Parameter	const char * s	496:14:9166:9178	5393015	0	True				
ANR	5393087	ParameterType	const char *		5393015	0					
ANR	5393088	Identifier	s		5393015	1					
ANR	5393089	Parameter	grub_size_t n	496:29:9181:9193	5393015	1	True				
ANR	5393090	ParameterType	grub_size_t		5393015	0					
ANR	5393091	Identifier	n		5393015	1					
ANR	5393092	CFGEntryNode	ENTRY		5393015		True				
ANR	5393093	CFGExitNode	EXIT		5393015		True				
ANR	5393094	Symbol	p		5393015						
ANR	5393095	Symbol	s		5393015						
ANR	5393096	Symbol	grub_malloc		5393015						
ANR	5393097	Symbol	len		5393015						
ANR	5393098	Symbol	* p		5393015						
ANR	5393099	Symbol	grub_strlen		5393015						
ANR	5393100	Symbol	n		5393015						
ANR	5393101	Symbol	* len		5393015						
ANR	5393102	Function	grub_memset	513:0:9405:9558							
ANR	5393103	FunctionDef	"grub_memset (void * s , int c , grub_size_t n)"		5393102	0					
ANR	5393104	CompoundStatement		515:0:9456:9558	5393102	0					
ANR	5393105	IdentifierDeclStatement	unsigned char * p = ( unsigned char * ) s ;	516:2:9460:9498	5393102	0	True				
ANR	5393106	IdentifierDecl	* p = ( unsigned char * ) s		5393102	0					
ANR	5393107	IdentifierDeclType	unsigned char *		5393102	0					
ANR	5393108	Identifier	p		5393102	1					
ANR	5393109	AssignmentExpression	* p = ( unsigned char * ) s		5393102	2		=			
ANR	5393110	Identifier	p		5393102	0					
ANR	5393111	CastExpression	( unsigned char * ) s		5393102	1					
ANR	5393112	CastTarget	unsigned char *		5393102	0					
ANR	5393113	Identifier	s		5393102	1					
ANR	5393114	WhileStatement	while ( n -- )		5393102	1					
ANR	5393115	Condition	n --	518:9:9510:9512	5393102	0	True				
ANR	5393116	PostIncDecOperationExpression	n --		5393102	0					
ANR	5393117	Identifier	n		5393102	0					
ANR	5393118	IncDec	--		5393102	1					
ANR	5393119	ExpressionStatement	* p ++ = ( unsigned char ) c	519:4:9519:9543	5393102	1	True				
ANR	5393120	AssignmentExpression	* p ++ = ( unsigned char ) c		5393102	0		=			
ANR	5393121	UnaryOperationExpression	* p ++		5393102	0					
ANR	5393122	UnaryOperator	*		5393102	0					
ANR	5393123	PostIncDecOperationExpression	p ++		5393102	1					
ANR	5393124	Identifier	p		5393102	0					
ANR	5393125	IncDec	++		5393102	1					
ANR	5393126	CastExpression	( unsigned char ) c		5393102	1					
ANR	5393127	CastTarget	unsigned char		5393102	0					
ANR	5393128	Identifier	c		5393102	1					
ANR	5393129	ReturnStatement	return s ;	521:2:9548:9556	5393102	2	True				
ANR	5393130	Identifier	s		5393102	0					
ANR	5393131	ReturnType	void *		5393102	1					
ANR	5393132	Identifier	grub_memset		5393102	2					
ANR	5393133	ParameterList	"void * s , int c , grub_size_t n"		5393102	3					
ANR	5393134	Parameter	void * s	514:13:9425:9431	5393102	0	True				
ANR	5393135	ParameterType	void *		5393102	0					
ANR	5393136	Identifier	s		5393102	1					
ANR	5393137	Parameter	int c	514:22:9434:9438	5393102	1	True				
ANR	5393138	ParameterType	int		5393102	0					
ANR	5393139	Identifier	c		5393102	1					
ANR	5393140	Parameter	grub_size_t n	514:29:9441:9453	5393102	2	True				
ANR	5393141	ParameterType	grub_size_t		5393102	0					
ANR	5393142	Identifier	n		5393102	1					
ANR	5393143	CFGEntryNode	ENTRY		5393102		True				
ANR	5393144	CFGExitNode	EXIT		5393102		True				
ANR	5393145	Symbol	p		5393102						
ANR	5393146	Symbol	s		5393102						
ANR	5393147	Symbol	c		5393102						
ANR	5393148	Symbol	* p ++		5393102						
ANR	5393149	Symbol	n		5393102						
ANR	5393150	Function	grub_strlen	524:0:9561:9664							
ANR	5393151	FunctionDef	grub_strlen (const char * s)		5393150	0					
ANR	5393152	CompoundStatement		526:0:9601:9664	5393150	0					
ANR	5393153	IdentifierDeclStatement	const char * p = s ;	527:2:9605:9622	5393150	0	True				
ANR	5393154	IdentifierDecl	* p = s		5393150	0					
ANR	5393155	IdentifierDeclType	const char *		5393150	0					
ANR	5393156	Identifier	p		5393150	1					
ANR	5393157	AssignmentExpression	* p = s		5393150	2		=			
ANR	5393158	Identifier	s		5393150	0					
ANR	5393159	Identifier	s		5393150	1					
ANR	5393160	WhileStatement	while ( * p )		5393150	1					
ANR	5393161	Condition	* p	529:9:9634:9635	5393150	0	True				
ANR	5393162	UnaryOperationExpression	* p		5393150	0					
ANR	5393163	UnaryOperator	*		5393150	0					
ANR	5393164	Identifier	p		5393150	1					
ANR	5393165	ExpressionStatement	p ++	530:4:9642:9645	5393150	1	True				
ANR	5393166	PostIncDecOperationExpression	p ++		5393150	0					
ANR	5393167	Identifier	p		5393150	0					
ANR	5393168	IncDec	++		5393150	1					
ANR	5393169	ReturnStatement	return p - s ;	532:2:9650:9662	5393150	2	True				
ANR	5393170	AdditiveExpression	p - s		5393150	0		-			
ANR	5393171	Identifier	p		5393150	0					
ANR	5393172	Identifier	s		5393150	1					
ANR	5393173	ReturnType	grub_size_t		5393150	1					
ANR	5393174	Identifier	grub_strlen		5393150	2					
ANR	5393175	ParameterList	const char * s		5393150	3					
ANR	5393176	Parameter	const char * s	525:13:9586:9598	5393150	0	True				
ANR	5393177	ParameterType	const char *		5393150	0					
ANR	5393178	Identifier	s		5393150	1					
ANR	5393179	CFGEntryNode	ENTRY		5393150		True				
ANR	5393180	CFGExitNode	EXIT		5393150		True				
ANR	5393181	Symbol	p		5393150						
ANR	5393182	Symbol	s		5393150						
ANR	5393183	Symbol	* p		5393150						
ANR	5393184	Function	grub_reverse	535:0:9667:9835							
ANR	5393185	FunctionDef	grub_reverse (char * str)		5393184	0					
ANR	5393186	CompoundStatement		536:25:9711:9835	5393184	0					
ANR	5393187	IdentifierDeclStatement	"char tmp , * p = str + grub_strlen ( str ) - 1 ;"	537:1:9714:9756	5393184	0	True				
ANR	5393188	IdentifierDecl	tmp		5393184	0					
ANR	5393189	IdentifierDeclType	char		5393184	0					
ANR	5393190	Identifier	tmp		5393184	1					
ANR	5393191	IdentifierDecl	* p = str + grub_strlen ( str ) - 1		5393184	1					
ANR	5393192	IdentifierDeclType	char *		5393184	0					
ANR	5393193	Identifier	p		5393184	1					
ANR	5393194	AssignmentExpression	* p = str + grub_strlen ( str ) - 1		5393184	2		=			
ANR	5393195	Identifier	p		5393184	0					
ANR	5393196	AdditiveExpression	str + grub_strlen ( str ) - 1		5393184	1		+			
ANR	5393197	Identifier	str		5393184	0					
ANR	5393198	AdditiveExpression	grub_strlen ( str ) - 1		5393184	1		-			
ANR	5393199	CallExpression	grub_strlen ( str )		5393184	0					
ANR	5393200	Callee	grub_strlen		5393184	0					
ANR	5393201	Identifier	grub_strlen		5393184	0					
ANR	5393202	ArgumentList	str		5393184	1					
ANR	5393203	Argument	str		5393184	0					
ANR	5393204	Identifier	str		5393184	0					
ANR	5393205	PrimaryExpression	1		5393184	1					
ANR	5393206	WhileStatement	while ( str < p )		5393184	1					
ANR	5393207	Condition	str < p	538:8:9766:9772	5393184	0	True				
ANR	5393208	RelationalExpression	str < p		5393184	0		<			
ANR	5393209	Identifier	str		5393184	0					
ANR	5393210	Identifier	p		5393184	1					
ANR	5393211	CompoundStatement		3:17:63:63	5393184	1					
ANR	5393212	ExpressionStatement	tmp = * str	539:2:9779:9789	5393184	0	True				
ANR	5393213	AssignmentExpression	tmp = * str		5393184	0		=			
ANR	5393214	Identifier	tmp		5393184	0					
ANR	5393215	UnaryOperationExpression	* str		5393184	1					
ANR	5393216	UnaryOperator	*		5393184	0					
ANR	5393217	Identifier	str		5393184	1					
ANR	5393218	ExpressionStatement	* str = * p	540:2:9793:9802	5393184	1	True				
ANR	5393219	AssignmentExpression	* str = * p		5393184	0		=			
ANR	5393220	UnaryOperationExpression	* str		5393184	0					
ANR	5393221	UnaryOperator	*		5393184	0					
ANR	5393222	Identifier	str		5393184	1					
ANR	5393223	UnaryOperationExpression	* p		5393184	1					
ANR	5393224	UnaryOperator	*		5393184	0					
ANR	5393225	Identifier	p		5393184	1					
ANR	5393226	ExpressionStatement	* p = tmp	541:2:9806:9814	5393184	2	True				
ANR	5393227	AssignmentExpression	* p = tmp		5393184	0		=			
ANR	5393228	UnaryOperationExpression	* p		5393184	0					
ANR	5393229	UnaryOperator	*		5393184	0					
ANR	5393230	Identifier	p		5393184	1					
ANR	5393231	Identifier	tmp		5393184	1					
ANR	5393232	ExpressionStatement	str ++	542:2:9818:9823	5393184	3	True				
ANR	5393233	PostIncDecOperationExpression	str ++		5393184	0					
ANR	5393234	Identifier	str		5393184	0					
ANR	5393235	IncDec	++		5393184	1					
ANR	5393236	ExpressionStatement	p --	543:2:9827:9830	5393184	4	True				
ANR	5393237	PostIncDecOperationExpression	p --		5393184	0					
ANR	5393238	Identifier	p		5393184	0					
ANR	5393239	IncDec	--		5393184	1					
ANR	5393240	ReturnType	static inline void		5393184	1					
ANR	5393241	Identifier	grub_reverse		5393184	2					
ANR	5393242	ParameterList	char * str		5393184	3					
ANR	5393243	Parameter	char * str	536:14:9700:9708	5393184	0	True				
ANR	5393244	ParameterType	char *		5393184	0					
ANR	5393245	Identifier	str		5393184	1					
ANR	5393246	CFGEntryNode	ENTRY		5393184		True				
ANR	5393247	CFGExitNode	EXIT		5393184		True				
ANR	5393248	Symbol	str		5393184						
ANR	5393249	Symbol	p		5393184						
ANR	5393250	Symbol	tmp		5393184						
ANR	5393251	Symbol	* p		5393184						
ANR	5393252	Symbol	* str		5393184						
ANR	5393253	Symbol	grub_strlen		5393184						
ANR	5393254	Function	grub_divmod64	548:0:9912:10688							
ANR	5393255	FunctionDef	"grub_divmod64 (grub_uint64_t n , grub_uint32_t d , grub_uint32_t * r)"		5393254	0					
ANR	5393256	CompoundStatement		550:0:9993:10688	5393254	0					
ANR	5393257	IdentifierDeclStatement	unsigned bits = 64 ;	555:2:10239:10257	5393254	0	True				
ANR	5393258	IdentifierDecl	bits = 64		5393254	0					
ANR	5393259	IdentifierDeclType	unsigned		5393254	0					
ANR	5393260	Identifier	bits		5393254	1					
ANR	5393261	AssignmentExpression	bits = 64		5393254	2		=			
ANR	5393262	Identifier	bits		5393254	0					
ANR	5393263	PrimaryExpression	64		5393254	1					
ANR	5393264	IdentifierDeclStatement	unsigned long long q = 0 ;	556:2:10261:10285	5393254	1	True				
ANR	5393265	IdentifierDecl	q = 0		5393254	0					
ANR	5393266	IdentifierDeclType	unsigned long long		5393254	0					
ANR	5393267	Identifier	q		5393254	1					
ANR	5393268	AssignmentExpression	q = 0		5393254	2		=			
ANR	5393269	Identifier	q		5393254	0					
ANR	5393270	PrimaryExpression	0		5393254	1					
ANR	5393271	IdentifierDeclStatement	unsigned m = 0 ;	557:2:10289:10303	5393254	2	True				
ANR	5393272	IdentifierDecl	m = 0		5393254	0					
ANR	5393273	IdentifierDeclType	unsigned		5393254	0					
ANR	5393274	Identifier	m		5393254	1					
ANR	5393275	AssignmentExpression	m = 0		5393254	2		=			
ANR	5393276	Identifier	m		5393254	0					
ANR	5393277	PrimaryExpression	0		5393254	1					
ANR	5393278	IfStatement	if ( n < 0xffffffff )		5393254	3					
ANR	5393279	Condition	n < 0xffffffff	560:6:10381:10394	5393254	0	True				
ANR	5393280	RelationalExpression	n < 0xffffffff		5393254	0		<			
ANR	5393281	Identifier	n		5393254	0					
ANR	5393282	PrimaryExpression	0xffffffff		5393254	1					
ANR	5393283	CompoundStatement		12:4:407:407	5393254	1					
ANR	5393284	IfStatement	if ( r )		5393254	0					
ANR	5393285	Condition	r	562:10:10413:10413	5393254	0	True				
ANR	5393286	Identifier	r		5393254	0					
ANR	5393287	ExpressionStatement	* r = ( ( grub_uint32_t ) n ) % d	563:1:10417:10445	5393254	1	True				
ANR	5393288	AssignmentExpression	* r = ( ( grub_uint32_t ) n ) % d		5393254	0		=			
ANR	5393289	UnaryOperationExpression	* r		5393254	0					
ANR	5393290	UnaryOperator	*		5393254	0					
ANR	5393291	Identifier	r		5393254	1					
ANR	5393292	MultiplicativeExpression	( ( grub_uint32_t ) n ) % d		5393254	1		%			
ANR	5393293	CastExpression	( grub_uint32_t ) n		5393254	0					
ANR	5393294	CastTarget	grub_uint32_t		5393254	0					
ANR	5393295	Identifier	n		5393254	1					
ANR	5393296	Identifier	d		5393254	1					
ANR	5393297	ReturnStatement	return ( ( grub_uint32_t ) n ) / d ;	565:6:10454:10484	5393254	1	True				
ANR	5393298	MultiplicativeExpression	( ( grub_uint32_t ) n ) / d		5393254	0		/			
ANR	5393299	CastExpression	( grub_uint32_t ) n		5393254	0					
ANR	5393300	CastTarget	grub_uint32_t		5393254	0					
ANR	5393301	Identifier	n		5393254	1					
ANR	5393302	Identifier	d		5393254	1					
ANR	5393303	WhileStatement	while ( bits -- )		5393254	4					
ANR	5393304	Condition	bits --	568:9:10502:10507	5393254	0	True				
ANR	5393305	PostIncDecOperationExpression	bits --		5393254	0					
ANR	5393306	Identifier	bits		5393254	0					
ANR	5393307	IncDec	--		5393254	1					
ANR	5393308	CompoundStatement		20:4:520:520	5393254	1					
ANR	5393309	ExpressionStatement	m <<= 1	570:6:10522:10529	5393254	0	True				
ANR	5393310	AssignmentExpression	m <<= 1		5393254	0		<<=			
ANR	5393311	Identifier	m		5393254	0					
ANR	5393312	PrimaryExpression	1		5393254	1					
ANR	5393313	Statement	if	572:6:10538:10539	5393254	1	True				
ANR	5393314	Statement	(	572:9:10541:10541	5393254	2	True				
ANR	5393315	Statement	n	572:10:10542:10542	5393254	3	True				
ANR	5393316	Statement	&	572:12:10544:10544	5393254	4	True				
ANR	5393317	Statement	(	572:14:10546:10546	5393254	5	True				
ANR	5393318	Statement	1UL	572:15:10547:10549	5393254	6	True				
ANR	5393319	Statement	L	572:18:10550:10550	5393254	7	True				
ANR	5393320	Statement	<<	572:20:10552:10553	5393254	8	True				
ANR	5393321	Statement	63	572:23:10555:10556	5393254	9	True				
ANR	5393322	Statement	)	572:25:10557:10557	5393254	10	True				
ANR	5393323	Statement	)	572:26:10558:10558	5393254	11	True				
ANR	5393324	ExpressionStatement	m |= 1	573:1:10561:10567	5393254	12	True				
ANR	5393325	AssignmentExpression	m |= 1		5393254	0		|=			
ANR	5393326	Identifier	m		5393254	0					
ANR	5393327	PrimaryExpression	1		5393254	1					
ANR	5393328	ExpressionStatement	q <<= 1	575:6:10576:10583	5393254	13	True				
ANR	5393329	AssignmentExpression	q <<= 1		5393254	0		<<=			
ANR	5393330	Identifier	q		5393254	0					
ANR	5393331	PrimaryExpression	1		5393254	1					
ANR	5393332	ExpressionStatement	n <<= 1	576:6:10591:10598	5393254	14	True				
ANR	5393333	AssignmentExpression	n <<= 1		5393254	0		<<=			
ANR	5393334	Identifier	n		5393254	0					
ANR	5393335	PrimaryExpression	1		5393254	1					
ANR	5393336	IfStatement	if ( m >= d )		5393254	15					
ANR	5393337	Condition	m >= d	578:10:10611:10616	5393254	0	True				
ANR	5393338	RelationalExpression	m >= d		5393254	0		>=			
ANR	5393339	Identifier	m		5393254	0					
ANR	5393340	Identifier	d		5393254	1					
ANR	5393341	CompoundStatement		30:1:626:626	5393254	1					
ANR	5393342	ExpressionStatement	q |= 1	580:3:10625:10631	5393254	0	True				
ANR	5393343	AssignmentExpression	q |= 1		5393254	0		|=			
ANR	5393344	Identifier	q		5393254	0					
ANR	5393345	PrimaryExpression	1		5393254	1					
ANR	5393346	ExpressionStatement	m -= d	581:3:10636:10642	5393254	1	True				
ANR	5393347	AssignmentExpression	m -= d		5393254	0		-=			
ANR	5393348	Identifier	m		5393254	0					
ANR	5393349	Identifier	d		5393254	1					
ANR	5393350	IfStatement	if ( r )		5393254	5					
ANR	5393351	Condition	r	585:6:10660:10660	5393254	0	True				
ANR	5393352	Identifier	r		5393254	0					
ANR	5393353	ExpressionStatement	* r = m	586:4:10667:10673	5393254	1	True				
ANR	5393354	AssignmentExpression	* r = m		5393254	0		=			
ANR	5393355	UnaryOperationExpression	* r		5393254	0					
ANR	5393356	UnaryOperator	*		5393254	0					
ANR	5393357	Identifier	r		5393254	1					
ANR	5393358	Identifier	m		5393254	1					
ANR	5393359	ReturnStatement	return q ;	588:2:10678:10686	5393254	6	True				
ANR	5393360	Identifier	q		5393254	0					
ANR	5393361	ReturnType	grub_uint64_t		5393254	1					
ANR	5393362	Identifier	grub_divmod64		5393254	2					
ANR	5393363	ParameterList	"grub_uint64_t n , grub_uint32_t d , grub_uint32_t * r"		5393254	3					
ANR	5393364	Parameter	grub_uint64_t n	549:15:9941:9955	5393254	0	True				
ANR	5393365	ParameterType	grub_uint64_t		5393254	0					
ANR	5393366	Identifier	n		5393254	1					
ANR	5393367	Parameter	grub_uint32_t d	549:32:9958:9972	5393254	1	True				
ANR	5393368	ParameterType	grub_uint32_t		5393254	0					
ANR	5393369	Identifier	d		5393254	1					
ANR	5393370	Parameter	grub_uint32_t * r	549:49:9975:9990	5393254	2	True				
ANR	5393371	ParameterType	grub_uint32_t *		5393254	0					
ANR	5393372	Identifier	r		5393254	1					
ANR	5393373	CFGEntryNode	ENTRY		5393254		True				
ANR	5393374	CFGExitNode	EXIT		5393254		True				
ANR	5393375	Symbol	q		5393254						
ANR	5393376	Symbol	r		5393254						
ANR	5393377	Symbol	d		5393254						
ANR	5393378	Symbol	bits		5393254						
ANR	5393379	Symbol	* r		5393254						
ANR	5393380	Symbol	m		5393254						
ANR	5393381	Symbol	n		5393254						
ANR	5393382	Function	grub_lltoa	593:0:10801:11369							
ANR	5393383	FunctionDef	"grub_lltoa (char * str , int c , unsigned long long n)"		5393382	0					
ANR	5393384	CompoundStatement		595:0:10867:11369	5393382	0					
ANR	5393385	IdentifierDeclStatement	unsigned base = ( c == 'x' ) ? 16 : 10 ;	596:2:10871:10907	5393382	0	True				
ANR	5393386	IdentifierDecl	base = ( c == 'x' ) ? 16 : 10		5393382	0					
ANR	5393387	IdentifierDeclType	unsigned		5393382	0					
ANR	5393388	Identifier	base		5393382	1					
ANR	5393389	AssignmentExpression	base = ( c == 'x' ) ? 16 : 10		5393382	2		=			
ANR	5393390	Identifier	base		5393382	0					
ANR	5393391	ConditionalExpression	( c == 'x' ) ? 16 : 10		5393382	1					
ANR	5393392	Condition	c == 'x'		5393382	0					
ANR	5393393	EqualityExpression	c == 'x'		5393382	0		==			
ANR	5393394	Identifier	c		5393382	0					
ANR	5393395	PrimaryExpression	'x'		5393382	1					
ANR	5393396	PrimaryExpression	16		5393382	1					
ANR	5393397	PrimaryExpression	10		5393382	2					
ANR	5393398	IdentifierDeclStatement	char * p ;	597:2:10911:10918	5393382	1	True				
ANR	5393399	IdentifierDecl	* p		5393382	0					
ANR	5393400	IdentifierDeclType	char *		5393382	0					
ANR	5393401	Identifier	p		5393382	1					
ANR	5393402	IfStatement	if ( ( long long ) n < 0 && c == 'd' )		5393382	2					
ANR	5393403	Condition	( long long ) n < 0 && c == 'd'	599:6:10927:10955	5393382	0	True				
ANR	5393404	AndExpression	( long long ) n < 0 && c == 'd'		5393382	0		&&			
ANR	5393405	RelationalExpression	( long long ) n < 0		5393382	0		<			
ANR	5393406	CastExpression	( long long ) n		5393382	0					
ANR	5393407	CastTarget	long long		5393382	0					
ANR	5393408	Identifier	n		5393382	1					
ANR	5393409	PrimaryExpression	0		5393382	1					
ANR	5393410	EqualityExpression	c == 'd'		5393382	1		==			
ANR	5393411	Identifier	c		5393382	0					
ANR	5393412	PrimaryExpression	'd'		5393382	1					
ANR	5393413	CompoundStatement		6:4:94:94	5393382	1					
ANR	5393414	ExpressionStatement	n = ( unsigned long long ) ( - ( ( long long ) n ) )	601:6:10970:11013	5393382	0	True				
ANR	5393415	AssignmentExpression	n = ( unsigned long long ) ( - ( ( long long ) n ) )		5393382	0		=			
ANR	5393416	Identifier	n		5393382	0					
ANR	5393417	CastExpression	( unsigned long long ) ( - ( ( long long ) n ) )		5393382	1					
ANR	5393418	CastTarget	unsigned long long		5393382	0					
ANR	5393419	UnaryOperationExpression	- ( ( long long ) n )		5393382	1					
ANR	5393420	UnaryOperator	-		5393382	0					
ANR	5393421	CastExpression	( long long ) n		5393382	1					
ANR	5393422	CastTarget	long long		5393382	0					
ANR	5393423	Identifier	n		5393382	1					
ANR	5393424	ExpressionStatement	* str ++ = '-'	602:6:11021:11033	5393382	1	True				
ANR	5393425	AssignmentExpression	* str ++ = '-'		5393382	0		=			
ANR	5393426	UnaryOperationExpression	* str ++		5393382	0					
ANR	5393427	UnaryOperator	*		5393382	0					
ANR	5393428	PostIncDecOperationExpression	str ++		5393382	1					
ANR	5393429	Identifier	str		5393382	0					
ANR	5393430	IncDec	++		5393382	1					
ANR	5393431	PrimaryExpression	'-'		5393382	1					
ANR	5393432	ExpressionStatement	p = str	605:2:11044:11051	5393382	3	True				
ANR	5393433	AssignmentExpression	p = str		5393382	0		=			
ANR	5393434	Identifier	p		5393382	0					
ANR	5393435	Identifier	str		5393382	1					
ANR	5393436	IfStatement	if ( base == 16 )		5393382	4					
ANR	5393437	Condition	base == 16	607:6:11060:11069	5393382	0	True				
ANR	5393438	EqualityExpression	base == 16		5393382	0		==			
ANR	5393439	Identifier	base		5393382	0					
ANR	5393440	PrimaryExpression	16		5393382	1					
ANR	5393441	DoStatement	do		5393382	1					
ANR	5393442	CompoundStatement		16:1:220:253	5393382	0					
ANR	5393443	IdentifierDeclStatement	unsigned d = ( unsigned ) ( n & 0xf ) ;	610:1:11088:11121	5393382	0	True				
ANR	5393444	IdentifierDecl	d = ( unsigned ) ( n & 0xf )		5393382	0					
ANR	5393445	IdentifierDeclType	unsigned		5393382	0					
ANR	5393446	Identifier	d		5393382	1					
ANR	5393447	AssignmentExpression	d = ( unsigned ) ( n & 0xf )		5393382	2		=			
ANR	5393448	Identifier	d		5393382	0					
ANR	5393449	CastExpression	( unsigned ) ( n & 0xf )		5393382	1					
ANR	5393450	CastTarget	unsigned		5393382	0					
ANR	5393451	BitAndExpression	n & 0xf		5393382	1		&			
ANR	5393452	Identifier	n		5393382	0					
ANR	5393453	PrimaryExpression	0xf		5393382	1					
ANR	5393454	ExpressionStatement	* p ++ = ( d > 9 ) ? d + 'a' - 10 : d + '0'	611:1:11124:11163	5393382	1	True				
ANR	5393455	AssignmentExpression	* p ++ = ( d > 9 ) ? d + 'a' - 10 : d + '0'		5393382	0		=			
ANR	5393456	UnaryOperationExpression	* p ++		5393382	0					
ANR	5393457	UnaryOperator	*		5393382	0					
ANR	5393458	PostIncDecOperationExpression	p ++		5393382	1					
ANR	5393459	Identifier	p		5393382	0					
ANR	5393460	IncDec	++		5393382	1					
ANR	5393461	ConditionalExpression	( d > 9 ) ? d + 'a' - 10 : d + '0'		5393382	1					
ANR	5393462	Condition	d > 9		5393382	0					
ANR	5393463	RelationalExpression	d > 9		5393382	0		>			
ANR	5393464	Identifier	d		5393382	0					
ANR	5393465	PrimaryExpression	9		5393382	1					
ANR	5393466	AdditiveExpression	d + 'a' - 10		5393382	1		+			
ANR	5393467	Identifier	d		5393382	0					
ANR	5393468	AdditiveExpression	'a' - 10		5393382	1		-			
ANR	5393469	PrimaryExpression	'a'		5393382	0					
ANR	5393470	PrimaryExpression	10		5393382	1					
ANR	5393471	AdditiveExpression	d + '0'		5393382	2		+			
ANR	5393472	Identifier	d		5393382	0					
ANR	5393473	PrimaryExpression	'0'		5393382	1					
ANR	5393474	Condition	n >>= 4	613:11:11184:11190	5393382	1	True				
ANR	5393475	AssignmentExpression	n >>= 4		5393382	0		>>=			
ANR	5393476	Identifier	n		5393382	0					
ANR	5393477	PrimaryExpression	4		5393382	1					
ANR	5393478	ReturnType	static char *		5393382	1					
ANR	5393479	Identifier	grub_lltoa		5393382	2					
ANR	5393480	ParameterList	"char * str , int c , unsigned long long n"		5393382	3					
ANR	5393481	Parameter	char * str	594:12:10827:10835	5393382	0	True				
ANR	5393482	ParameterType	char *		5393382	0					
ANR	5393483	Identifier	str		5393382	1					
ANR	5393484	Parameter	int c	594:23:10838:10842	5393382	1	True				
ANR	5393485	ParameterType	int		5393382	0					
ANR	5393486	Identifier	c		5393382	1					
ANR	5393487	Parameter	unsigned long long n	594:30:10845:10864	5393382	2	True				
ANR	5393488	ParameterType	unsigned long long		5393382	0					
ANR	5393489	Identifier	n		5393382	1					
ANR	5393490	CFGEntryNode	ENTRY		5393382		True				
ANR	5393491	CFGExitNode	EXIT		5393382		True				
ANR	5393492	Symbol	str		5393382						
ANR	5393493	Symbol	p		5393382						
ANR	5393494	Symbol	c		5393382						
ANR	5393495	Symbol	d		5393382						
ANR	5393496	Symbol	* p ++		5393382						
ANR	5393497	Symbol	* str ++		5393382						
ANR	5393498	Symbol	n		5393382						
ANR	5393499	Symbol	base		5393382						
ANR	5393500	ClassDef	vsnprintf_closure	631:0:11372:11456							
ANR	5393501	DeclStmt									
ANR	5393502	Decl							char	char *	str
ANR	5393503	DeclStmt									
ANR	5393504	Decl							grub_size_t	grub_size_t	count
ANR	5393505	DeclStmt									
ANR	5393506	Decl							grub_size_t	grub_size_t	max_len
ANR	5393507	Function	write_char	638:0:11460:11664							
ANR	5393508	FunctionDef	"write_char (unsigned char ch , struct vsnprintf_closure * cc)"		5393507	0					
ANR	5393509	CompoundStatement		640:0:11532:11664	5393507	0					
ANR	5393510	IfStatement	if ( cc -> str )		5393507	0					
ANR	5393511	Condition	cc -> str	641:6:11540:11546	5393507	0	True				
ANR	5393512	PtrMemberAccess	cc -> str		5393507	0					
ANR	5393513	Identifier	cc		5393507	0					
ANR	5393514	Identifier	str		5393507	1					
ANR	5393515	CompoundStatement		3:4:20:20	5393507	1					
ANR	5393516	IfStatement	if ( cc -> count < cc -> max_len )		5393507	0					
ANR	5393517	Condition	cc -> count < cc -> max_len	643:10:11565:11587	5393507	0	True				
ANR	5393518	RelationalExpression	cc -> count < cc -> max_len		5393507	0		<			
ANR	5393519	PtrMemberAccess	cc -> count		5393507	0					
ANR	5393520	Identifier	cc		5393507	0					
ANR	5393521	Identifier	count		5393507	1					
ANR	5393522	PtrMemberAccess	cc -> max_len		5393507	1					
ANR	5393523	Identifier	cc		5393507	0					
ANR	5393524	Identifier	max_len		5393507	1					
ANR	5393525	ExpressionStatement	* ( cc -> str ) ++ = ch	644:1:11591:11608	5393507	1	True				
ANR	5393526	AssignmentExpression	* ( cc -> str ) ++ = ch		5393507	0		=			
ANR	5393527	UnaryOperationExpression	* ( cc -> str ) ++		5393507	0					
ANR	5393528	UnaryOperator	*		5393507	0					
ANR	5393529	PostIncDecOperationExpression	( cc -> str ) ++		5393507	1					
ANR	5393530	PtrMemberAccess	cc -> str		5393507	0					
ANR	5393531	Identifier	cc		5393507	0					
ANR	5393532	Identifier	str		5393507	1					
ANR	5393533	IncDec	++		5393507	1					
ANR	5393534	Identifier	ch		5393507	1					
ANR	5393535	ElseStatement	else		5393507	0					
ANR	5393536	ExpressionStatement	grub_putchar ( ch )	647:4:11627:11644	5393507	0	True				
ANR	5393537	CallExpression	grub_putchar ( ch )		5393507	0					
ANR	5393538	Callee	grub_putchar		5393507	0					
ANR	5393539	Identifier	grub_putchar		5393507	0					
ANR	5393540	ArgumentList	ch		5393507	1					
ANR	5393541	Argument	ch		5393507	0					
ANR	5393542	Identifier	ch		5393507	0					
ANR	5393543	ExpressionStatement	( cc -> count ) ++	649:2:11649:11662	5393507	1	True				
ANR	5393544	PostIncDecOperationExpression	( cc -> count ) ++		5393507	0					
ANR	5393545	PtrMemberAccess	cc -> count		5393507	0					
ANR	5393546	Identifier	cc		5393507	0					
ANR	5393547	Identifier	count		5393507	1					
ANR	5393548	IncDec	++		5393507	1					
ANR	5393549	ReturnType	static void		5393507	1					
ANR	5393550	Identifier	write_char		5393507	2					
ANR	5393551	ParameterList	"unsigned char ch , struct vsnprintf_closure * cc"		5393507	3					
ANR	5393552	Parameter	unsigned char ch	639:12:11484:11499	5393507	0	True				
ANR	5393553	ParameterType	unsigned char		5393507	0					
ANR	5393554	Identifier	ch		5393507	1					
ANR	5393555	Parameter	struct vsnprintf_closure * cc	639:30:11502:11529	5393507	1	True				
ANR	5393556	ParameterType	struct vsnprintf_closure *		5393507	0					
ANR	5393557	Identifier	cc		5393507	1					
ANR	5393558	CFGEntryNode	ENTRY		5393507		True				
ANR	5393559	CFGExitNode	EXIT		5393507		True				
ANR	5393560	Symbol	cc		5393507						
ANR	5393561	Symbol	cc -> max_len		5393507						
ANR	5393562	Symbol	cc -> str		5393507						
ANR	5393563	Symbol	ch		5393507						
ANR	5393564	Symbol	* cc		5393507						
ANR	5393565	Symbol	* ( cc -> str ) ++		5393507						
ANR	5393566	Symbol	cc -> count		5393507						
ANR	5393567	Function	write_str	652:0:11667:11777							
ANR	5393568	FunctionDef	"write_str (const char * s , struct vsnprintf_closure * cc)"		5393567	0					
ANR	5393569	CompoundStatement		654:0:11735:11777	5393567	0					
ANR	5393570	WhileStatement	while ( * s )		5393567	0					
ANR	5393571	Condition	* s	655:9:11746:11747	5393567	0	True				
ANR	5393572	UnaryOperationExpression	* s		5393567	0					
ANR	5393573	UnaryOperator	*		5393567	0					
ANR	5393574	Identifier	s		5393567	1					
ANR	5393575	ExpressionStatement	"write_char ( * s ++ , cc )"	656:4:11754:11775	5393567	1	True				
ANR	5393576	CallExpression	"write_char ( * s ++ , cc )"		5393567	0					
ANR	5393577	Callee	write_char		5393567	0					
ANR	5393578	Identifier	write_char		5393567	0					
ANR	5393579	ArgumentList	* s ++		5393567	1					
ANR	5393580	Argument	* s ++		5393567	0					
ANR	5393581	UnaryOperationExpression	* s ++		5393567	0					
ANR	5393582	UnaryOperator	*		5393567	0					
ANR	5393583	PostIncDecOperationExpression	s ++		5393567	1					
ANR	5393584	Identifier	s		5393567	0					
ANR	5393585	IncDec	++		5393567	1					
ANR	5393586	Argument	cc		5393567	1					
ANR	5393587	Identifier	cc		5393567	0					
ANR	5393588	ReturnType	static void		5393567	1					
ANR	5393589	Identifier	write_str		5393567	2					
ANR	5393590	ParameterList	"const char * s , struct vsnprintf_closure * cc"		5393567	3					
ANR	5393591	Parameter	const char * s	653:11:11690:11702	5393567	0	True				
ANR	5393592	ParameterType	const char *		5393567	0					
ANR	5393593	Identifier	s		5393567	1					
ANR	5393594	Parameter	struct vsnprintf_closure * cc	653:26:11705:11732	5393567	1	True				
ANR	5393595	ParameterType	struct vsnprintf_closure *		5393567	0					
ANR	5393596	Identifier	cc		5393567	1					
ANR	5393597	CFGEntryNode	ENTRY		5393567		True				
ANR	5393598	CFGExitNode	EXIT		5393567		True				
ANR	5393599	Symbol	cc		5393567						
ANR	5393600	Symbol	* s ++		5393567						
ANR	5393601	Symbol	s		5393567						
ANR	5393602	Symbol	* s		5393567						
ANR	5393603	Function	write_fill	659:0:11780:11918							
ANR	5393604	FunctionDef	"write_fill (const char ch , int n , struct vsnprintf_closure * cc)"		5393603	0					
ANR	5393605	CompoundStatement		661:0:11856:11918	5393603	0					
ANR	5393606	IdentifierDeclStatement	int i ;	662:2:11860:11865	5393603	0	True				
ANR	5393607	IdentifierDecl	i		5393603	0					
ANR	5393608	IdentifierDeclType	int		5393603	0					
ANR	5393609	Identifier	i		5393603	1					
ANR	5393610	ForStatement	for ( i = 0 ; i < n ; i ++ )		5393603	1					
ANR	5393611	ForInit	i = 0 ;	663:7:11874:11879	5393603	0	True				
ANR	5393612	AssignmentExpression	i = 0		5393603	0		=			
ANR	5393613	Identifier	i		5393603	0					
ANR	5393614	PrimaryExpression	0		5393603	1					
ANR	5393615	Condition	i < n	663:14:11881:11885	5393603	1	True				
ANR	5393616	RelationalExpression	i < n		5393603	0		<			
ANR	5393617	Identifier	i		5393603	0					
ANR	5393618	Identifier	n		5393603	1					
ANR	5393619	PostIncDecOperationExpression	i ++	663:21:11888:11890	5393603	2	True				
ANR	5393620	Identifier	i		5393603	0					
ANR	5393621	IncDec	++		5393603	1					
ANR	5393622	ExpressionStatement	"write_char ( ch , cc )"	664:4:11897:11916	5393603	3	True				
ANR	5393623	CallExpression	"write_char ( ch , cc )"		5393603	0					
ANR	5393624	Callee	write_char		5393603	0					
ANR	5393625	Identifier	write_char		5393603	0					
ANR	5393626	ArgumentList	ch		5393603	1					
ANR	5393627	Argument	ch		5393603	0					
ANR	5393628	Identifier	ch		5393603	0					
ANR	5393629	Argument	cc		5393603	1					
ANR	5393630	Identifier	cc		5393603	0					
ANR	5393631	ReturnType	static void		5393603	1					
ANR	5393632	Identifier	write_fill		5393603	2					
ANR	5393633	ParameterList	"const char ch , int n , struct vsnprintf_closure * cc"		5393603	3					
ANR	5393634	Parameter	const char ch	660:12:11804:11816	5393603	0	True				
ANR	5393635	ParameterType	const char		5393603	0					
ANR	5393636	Identifier	ch		5393603	1					
ANR	5393637	Parameter	int n	660:27:11819:11823	5393603	1	True				
ANR	5393638	ParameterType	int		5393603	0					
ANR	5393639	Identifier	n		5393603	1					
ANR	5393640	Parameter	struct vsnprintf_closure * cc	660:34:11826:11853	5393603	2	True				
ANR	5393641	ParameterType	struct vsnprintf_closure *		5393603	0					
ANR	5393642	Identifier	cc		5393603	1					
ANR	5393643	CFGEntryNode	ENTRY		5393603		True				
ANR	5393644	CFGExitNode	EXIT		5393603		True				
ANR	5393645	Symbol	cc		5393603						
ANR	5393646	Symbol	ch		5393603						
ANR	5393647	Symbol	i		5393603						
ANR	5393648	Symbol	n		5393603						
ANR	5393649	Function	grub_vsnprintf_real	667:0:11921:15914							
ANR	5393650	FunctionDef	"grub_vsnprintf_real (char * str , grub_size_t max_len , const char * fmt , va_list args)"		5393649	0					
ANR	5393651	CompoundStatement		669:0:12016:15914	5393649	0					
ANR	5393652	IdentifierDeclStatement	char c ;	670:2:12020:12026	5393649	0	True				
ANR	5393653	IdentifierDecl	c		5393649	0					
ANR	5393654	IdentifierDeclType	char		5393649	0					
ANR	5393655	Identifier	c		5393649	1					
ANR	5393656	IdentifierDeclStatement	struct vsnprintf_closure cc ;	671:2:12030:12057	5393649	1	True				
ANR	5393657	IdentifierDecl	cc		5393649	0					
ANR	5393658	IdentifierDeclType	struct vsnprintf_closure		5393649	0					
ANR	5393659	Identifier	cc		5393649	1					
ANR	5393660	ExpressionStatement	cc . str = str	673:2:12062:12074	5393649	2	True				
ANR	5393661	AssignmentExpression	cc . str = str		5393649	0		=			
ANR	5393662	MemberAccess	cc . str		5393649	0					
ANR	5393663	Identifier	cc		5393649	0					
ANR	5393664	Identifier	str		5393649	1					
ANR	5393665	Identifier	str		5393649	1					
ANR	5393666	ExpressionStatement	cc . max_len = max_len	674:2:12078:12098	5393649	3	True				
ANR	5393667	AssignmentExpression	cc . max_len = max_len		5393649	0		=			
ANR	5393668	MemberAccess	cc . max_len		5393649	0					
ANR	5393669	Identifier	cc		5393649	0					
ANR	5393670	Identifier	max_len		5393649	1					
ANR	5393671	Identifier	max_len		5393649	1					
ANR	5393672	ExpressionStatement	cc . count = 0	675:2:12102:12114	5393649	4	True				
ANR	5393673	AssignmentExpression	cc . count = 0		5393649	0		=			
ANR	5393674	MemberAccess	cc . count		5393649	0					
ANR	5393675	Identifier	cc		5393649	0					
ANR	5393676	Identifier	count		5393649	1					
ANR	5393677	PrimaryExpression	0		5393649	1					
ANR	5393678	WhileStatement	while ( ( c = * fmt ++ ) != 0 )		5393649	5					
ANR	5393679	Condition	( c = * fmt ++ ) != 0	677:9:12126:12142	5393649	0	True				
ANR	5393680	EqualityExpression	( c = * fmt ++ ) != 0		5393649	0		!=			
ANR	5393681	AssignmentExpression	c = * fmt ++		5393649	0		=			
ANR	5393682	Identifier	c		5393649	0					
ANR	5393683	UnaryOperationExpression	* fmt ++		5393649	1					
ANR	5393684	UnaryOperator	*		5393649	0					
ANR	5393685	PostIncDecOperationExpression	fmt ++		5393649	1					
ANR	5393686	Identifier	fmt		5393649	0					
ANR	5393687	IncDec	++		5393649	1					
ANR	5393688	PrimaryExpression	0		5393649	1					
ANR	5393689	CompoundStatement		10:4:132:132	5393649	1					
ANR	5393690	IfStatement	if ( c != '%' )		5393649	0					
ANR	5393691	Condition	c != '%'	679:10:12161:12168	5393649	0	True				
ANR	5393692	EqualityExpression	c != '%'		5393649	0		!=			
ANR	5393693	Identifier	c		5393649	0					
ANR	5393694	PrimaryExpression	'%'		5393649	1					
ANR	5393695	ExpressionStatement	"write_char ( c , & cc )"	680:1:12172:12191	5393649	1	True				
ANR	5393696	CallExpression	"write_char ( c , & cc )"		5393649	0					
ANR	5393697	Callee	write_char		5393649	0					
ANR	5393698	Identifier	write_char		5393649	0					
ANR	5393699	ArgumentList	c		5393649	1					
ANR	5393700	Argument	c		5393649	0					
ANR	5393701	Identifier	c		5393649	0					
ANR	5393702	Argument	& cc		5393649	1					
ANR	5393703	UnaryOperationExpression	& cc		5393649	0					
ANR	5393704	UnaryOperator	&		5393649	0					
ANR	5393705	Identifier	cc		5393649	1					
ANR	5393706	ElseStatement	else		5393649	0					
ANR	5393707	CompoundStatement		24:3:383:396	5393649	0					
ANR	5393708	IdentifierDeclStatement	char tmp [ 32 ] ;	683:3:12210:12222	5393649	0	True				
ANR	5393709	IdentifierDecl	tmp [ 32 ]		5393649	0					
ANR	5393710	IdentifierDeclType	char [ 32 ]		5393649	0					
ANR	5393711	Identifier	tmp		5393649	1					
ANR	5393712	PrimaryExpression	32		5393649	2					
ANR	5393713	IdentifierDeclStatement	char * p ;	684:3:12227:12234	5393649	1	True				
ANR	5393714	IdentifierDecl	* p		5393649	0					
ANR	5393715	IdentifierDeclType	char *		5393649	0					
ANR	5393716	Identifier	p		5393649	1					
ANR	5393717	IdentifierDeclStatement	unsigned int format1 = 0 ;	685:3:12239:12263	5393649	2	True				
ANR	5393718	IdentifierDecl	format1 = 0		5393649	0					
ANR	5393719	IdentifierDeclType	unsigned int		5393649	0					
ANR	5393720	Identifier	format1		5393649	1					
ANR	5393721	AssignmentExpression	format1 = 0		5393649	2		=			
ANR	5393722	Identifier	format1		5393649	0					
ANR	5393723	PrimaryExpression	0		5393649	1					
ANR	5393724	IdentifierDeclStatement	unsigned int format2 = ~ 0U ;	686:3:12268:12295	5393649	3	True				
ANR	5393725	IdentifierDecl	format2 = ~ 0U		5393649	0					
ANR	5393726	IdentifierDeclType	unsigned int		5393649	0					
ANR	5393727	Identifier	format2		5393649	1					
ANR	5393728	AssignmentExpression	format2 = ~ 0U		5393649	2		=			
ANR	5393729	Identifier	format2		5393649	0					
ANR	5393730	UnaryOperationExpression	~ 0U		5393649	1					
ANR	5393731	UnaryOperator	~		5393649	0					
ANR	5393732	PrimaryExpression	0U		5393649	1					
ANR	5393733	IdentifierDeclStatement	char zerofill = ' ' ;	687:3:12300:12319	5393649	4	True				
ANR	5393734	IdentifierDecl	zerofill = ' '		5393649	0					
ANR	5393735	IdentifierDeclType	char		5393649	0					
ANR	5393736	Identifier	zerofill		5393649	1					
ANR	5393737	AssignmentExpression	zerofill = ' '		5393649	2		=			
ANR	5393738	Identifier	zerofill		5393649	0					
ANR	5393739	PrimaryExpression	' '		5393649	1					
ANR	5393740	IdentifierDeclStatement	int rightfill = 0 ;	688:3:12324:12341	5393649	5	True				
ANR	5393741	IdentifierDecl	rightfill = 0		5393649	0					
ANR	5393742	IdentifierDeclType	int		5393649	0					
ANR	5393743	Identifier	rightfill		5393649	1					
ANR	5393744	AssignmentExpression	rightfill = 0		5393649	2		=			
ANR	5393745	Identifier	rightfill		5393649	0					
ANR	5393746	PrimaryExpression	0		5393649	1					
ANR	5393747	IdentifierDeclStatement	int n ;	689:3:12346:12351	5393649	6	True				
ANR	5393748	IdentifierDecl	n		5393649	0					
ANR	5393749	IdentifierDeclType	int		5393649	0					
ANR	5393750	Identifier	n		5393649	1					
ANR	5393751	IdentifierDeclStatement	int longfmt = 0 ;	690:3:12356:12371	5393649	7	True				
ANR	5393752	IdentifierDecl	longfmt = 0		5393649	0					
ANR	5393753	IdentifierDeclType	int		5393649	0					
ANR	5393754	Identifier	longfmt		5393649	1					
ANR	5393755	AssignmentExpression	longfmt = 0		5393649	2		=			
ANR	5393756	Identifier	longfmt		5393649	0					
ANR	5393757	PrimaryExpression	0		5393649	1					
ANR	5393758	IdentifierDeclStatement	int longlongfmt = 0 ;	691:3:12376:12395	5393649	8	True				
ANR	5393759	IdentifierDecl	longlongfmt = 0		5393649	0					
ANR	5393760	IdentifierDeclType	int		5393649	0					
ANR	5393761	Identifier	longlongfmt		5393649	1					
ANR	5393762	AssignmentExpression	longlongfmt = 0		5393649	2		=			
ANR	5393763	Identifier	longlongfmt		5393649	0					
ANR	5393764	PrimaryExpression	0		5393649	1					
ANR	5393765	IdentifierDeclStatement	int unsig = 0 ;	692:3:12400:12413	5393649	9	True				
ANR	5393766	IdentifierDecl	unsig = 0		5393649	0					
ANR	5393767	IdentifierDeclType	int		5393649	0					
ANR	5393768	Identifier	unsig		5393649	1					
ANR	5393769	AssignmentExpression	unsig = 0		5393649	2		=			
ANR	5393770	Identifier	unsig		5393649	0					
ANR	5393771	PrimaryExpression	0		5393649	1					
ANR	5393772	IfStatement	if ( * fmt && * fmt == '-' )		5393649	10					
ANR	5393773	Condition	* fmt && * fmt == '-'	694:7:12423:12440	5393649	0	True				
ANR	5393774	AndExpression	* fmt && * fmt == '-'		5393649	0		&&			
ANR	5393775	UnaryOperationExpression	* fmt		5393649	0					
ANR	5393776	UnaryOperator	*		5393649	0					
ANR	5393777	Identifier	fmt		5393649	1					
ANR	5393778	EqualityExpression	* fmt == '-'		5393649	1		==			
ANR	5393779	UnaryOperationExpression	* fmt		5393649	0					
ANR	5393780	UnaryOperator	*		5393649	0					
ANR	5393781	Identifier	fmt		5393649	1					
ANR	5393782	PrimaryExpression	'-'		5393649	1					
ANR	5393783	CompoundStatement		27:5:431:431	5393649	1					
ANR	5393784	ExpressionStatement	rightfill = 1	696:7:12457:12470	5393649	0	True				
ANR	5393785	AssignmentExpression	rightfill = 1		5393649	0		=			
ANR	5393786	Identifier	rightfill		5393649	0					
ANR	5393787	PrimaryExpression	1		5393649	1					
ANR	5393788	ExpressionStatement	fmt ++	697:7:12479:12484	5393649	1	True				
ANR	5393789	PostIncDecOperationExpression	fmt ++		5393649	0					
ANR	5393790	Identifier	fmt		5393649	0					
ANR	5393791	IncDec	++		5393649	1					
ANR	5393792	ExpressionStatement	p = ( char * ) fmt	700:3:12497:12513	5393649	11	True				
ANR	5393793	AssignmentExpression	p = ( char * ) fmt		5393649	0		=			
ANR	5393794	Identifier	p		5393649	0					
ANR	5393795	CastExpression	( char * ) fmt		5393649	1					
ANR	5393796	CastTarget	char *		5393649	0					
ANR	5393797	Identifier	fmt		5393649	1					
ANR	5393798	WhileStatement	while ( * p && grub_isdigit ( * p ) )		5393649	12					
ANR	5393799	Condition	* p && grub_isdigit ( * p )	702:10:12563:12585	5393649	0	True				
ANR	5393800	AndExpression	* p && grub_isdigit ( * p )		5393649	0		&&			
ANR	5393801	UnaryOperationExpression	* p		5393649	0					
ANR	5393802	UnaryOperator	*		5393649	0					
ANR	5393803	Identifier	p		5393649	1					
ANR	5393804	CallExpression	grub_isdigit ( * p )		5393649	1					
ANR	5393805	Callee	grub_isdigit		5393649	0					
ANR	5393806	Identifier	grub_isdigit		5393649	0					
ANR	5393807	ArgumentList	* p		5393649	1					
ANR	5393808	Argument	* p		5393649	0					
ANR	5393809	UnaryOperationExpression	* p		5393649	0					
ANR	5393810	UnaryOperator	*		5393649	0					
ANR	5393811	Identifier	p		5393649	1					
ANR	5393812	ExpressionStatement	p ++	703:5:12593:12596	5393649	1	True				
ANR	5393813	PostIncDecOperationExpression	p ++		5393649	0					
ANR	5393814	Identifier	p		5393649	0					
ANR	5393815	IncDec	++		5393649	1					
ANR	5393816	IfStatement	if ( p > fmt )		5393649	13					
ANR	5393817	Condition	p > fmt	705:7:12606:12612	5393649	0	True				
ANR	5393818	RelationalExpression	p > fmt		5393649	0		>			
ANR	5393819	Identifier	p		5393649	0					
ANR	5393820	Identifier	fmt		5393649	1					
ANR	5393821	CompoundStatement		40:4:626:645	5393649	1					
ANR	5393822	IdentifierDeclStatement	char s [ p - fmt + 1 ] ;	708:4:12643:12662	5393649	0	True				
ANR	5393823	IdentifierDecl	s [ p - fmt + 1 ]		5393649	0					
ANR	5393824	IdentifierDeclType	char [ p - fmt + 1 ]		5393649	0					
ANR	5393825	Identifier	s		5393649	1					
ANR	5393826	AdditiveExpression	p - fmt + 1		5393649	2		-			
ANR	5393827	Identifier	p		5393649	0					
ANR	5393828	AdditiveExpression	fmt + 1		5393649	1		+			
ANR	5393829	Identifier	fmt		5393649	0					
ANR	5393830	PrimaryExpression	1		5393649	1					
ANR	5393831	ExpressionStatement	"grub_strncpy ( s , fmt , p - fmt )"	712:4:12721:12751	5393649	1	True				
ANR	5393832	CallExpression	"grub_strncpy ( s , fmt , p - fmt )"		5393649	0					
ANR	5393833	Callee	grub_strncpy		5393649	0					
ANR	5393834	Identifier	grub_strncpy		5393649	0					
ANR	5393835	ArgumentList	s		5393649	1					
ANR	5393836	Argument	s		5393649	0					
ANR	5393837	Identifier	s		5393649	0					
ANR	5393838	Argument	fmt		5393649	1					
ANR	5393839	Identifier	fmt		5393649	0					
ANR	5393840	Argument	p - fmt		5393649	2					
ANR	5393841	AdditiveExpression	p - fmt		5393649	0		-			
ANR	5393842	Identifier	p		5393649	0					
ANR	5393843	Identifier	fmt		5393649	1					
ANR	5393844	ExpressionStatement	s [ p - fmt ] = 0	713:7:12760:12774	5393649	2	True				
ANR	5393845	AssignmentExpression	s [ p - fmt ] = 0		5393649	0		=			
ANR	5393846	ArrayIndexing	s [ p - fmt ]		5393649	0					
ANR	5393847	Identifier	s		5393649	0					
ANR	5393848	AdditiveExpression	p - fmt		5393649	1		-			
ANR	5393849	Identifier	p		5393649	0					
ANR	5393850	Identifier	fmt		5393649	1					
ANR	5393851	PrimaryExpression	0		5393649	1					
ANR	5393852	IfStatement	if ( s [ 0 ] == '0' )		5393649	3					
ANR	5393853	Condition	s [ 0 ] == '0'	714:11:12787:12797	5393649	0	True				
ANR	5393854	EqualityExpression	s [ 0 ] == '0'		5393649	0		==			
ANR	5393855	ArrayIndexing	s [ 0 ]		5393649	0					
ANR	5393856	Identifier	s		5393649	0					
ANR	5393857	PrimaryExpression	0		5393649	1					
ANR	5393858	PrimaryExpression	'0'		5393649	1					
ANR	5393859	ExpressionStatement	zerofill = '0'	715:2:12802:12816	5393649	1	True				
ANR	5393860	AssignmentExpression	zerofill = '0'		5393649	0		=			
ANR	5393861	Identifier	zerofill		5393649	0					
ANR	5393862	PrimaryExpression	'0'		5393649	1					
ANR	5393863	ExpressionStatement	"format1 = grub_strtoul ( s , 0 , 10 )"	716:7:12825:12858	5393649	4	True				
ANR	5393864	AssignmentExpression	"format1 = grub_strtoul ( s , 0 , 10 )"		5393649	0		=			
ANR	5393865	Identifier	format1		5393649	0					
ANR	5393866	CallExpression	"grub_strtoul ( s , 0 , 10 )"		5393649	1					
ANR	5393867	Callee	grub_strtoul		5393649	0					
ANR	5393868	Identifier	grub_strtoul		5393649	0					
ANR	5393869	ArgumentList	s		5393649	1					
ANR	5393870	Argument	s		5393649	0					
ANR	5393871	Identifier	s		5393649	0					
ANR	5393872	Argument	0		5393649	1					
ANR	5393873	PrimaryExpression	0		5393649	0					
ANR	5393874	Argument	10		5393649	2					
ANR	5393875	PrimaryExpression	10		5393649	0					
ANR	5393876	ExpressionStatement	fmt = p	717:7:12867:12874	5393649	5	True				
ANR	5393877	AssignmentExpression	fmt = p		5393649	0		=			
ANR	5393878	Identifier	fmt		5393649	0					
ANR	5393879	Identifier	p		5393649	1					
ANR	5393880	IfStatement	if ( * p && * p == '.' )		5393649	14					
ANR	5393881	Condition	* p && * p == '.'	720:7:12891:12905	5393649	0	True				
ANR	5393882	AndExpression	* p && * p == '.'		5393649	0		&&			
ANR	5393883	UnaryOperationExpression	* p		5393649	0					
ANR	5393884	UnaryOperator	*		5393649	0					
ANR	5393885	Identifier	p		5393649	1					
ANR	5393886	EqualityExpression	* p == '.'		5393649	1		==			
ANR	5393887	UnaryOperationExpression	* p		5393649	0					
ANR	5393888	UnaryOperator	*		5393649	0					
ANR	5393889	Identifier	p		5393649	1					
ANR	5393890	PrimaryExpression	'.'		5393649	1					
ANR	5393891	CompoundStatement		53:5:896:896	5393649	1					
ANR	5393892	ExpressionStatement	p ++	722:7:12922:12925	5393649	0	True				
ANR	5393893	PostIncDecOperationExpression	p ++		5393649	0					
ANR	5393894	Identifier	p		5393649	0					
ANR	5393895	IncDec	++		5393649	1					
ANR	5393896	ExpressionStatement	fmt ++	723:7:12934:12939	5393649	1	True				
ANR	5393897	PostIncDecOperationExpression	fmt ++		5393649	0					
ANR	5393898	Identifier	fmt		5393649	0					
ANR	5393899	IncDec	++		5393649	1					
ANR	5393900	WhileStatement	while ( * p && grub_isdigit ( * p ) )		5393649	2					
ANR	5393901	Condition	* p && grub_isdigit ( * p )	724:14:12955:12977	5393649	0	True				
ANR	5393902	AndExpression	* p && grub_isdigit ( * p )		5393649	0		&&			
ANR	5393903	UnaryOperationExpression	* p		5393649	0					
ANR	5393904	UnaryOperator	*		5393649	0					
ANR	5393905	Identifier	p		5393649	1					
ANR	5393906	CallExpression	grub_isdigit ( * p )		5393649	1					
ANR	5393907	Callee	grub_isdigit		5393649	0					
ANR	5393908	Identifier	grub_isdigit		5393649	0					
ANR	5393909	ArgumentList	* p		5393649	1					
ANR	5393910	Argument	* p		5393649	0					
ANR	5393911	UnaryOperationExpression	* p		5393649	0					
ANR	5393912	UnaryOperator	*		5393649	0					
ANR	5393913	Identifier	p		5393649	1					
ANR	5393914	ExpressionStatement	p ++	725:2:12982:12985	5393649	1	True				
ANR	5393915	PostIncDecOperationExpression	p ++		5393649	0					
ANR	5393916	Identifier	p		5393649	0					
ANR	5393917	IncDec	++		5393649	1					
ANR	5393918	IfStatement	if ( p > fmt )		5393649	3					
ANR	5393919	Condition	p > fmt	727:11:12999:13005	5393649	0	True				
ANR	5393920	RelationalExpression	p > fmt		5393649	0		>			
ANR	5393921	Identifier	p		5393649	0					
ANR	5393922	Identifier	fmt		5393649	1					
ANR	5393923	CompoundStatement		62:4:1016:1038	5393649	1					
ANR	5393924	IdentifierDeclStatement	char fstr [ p - fmt + 1 ] ;	730:4:13033:13055	5393649	0	True				
ANR	5393925	IdentifierDecl	fstr [ p - fmt + 1 ]		5393649	0					
ANR	5393926	IdentifierDeclType	char [ p - fmt + 1 ]		5393649	0					
ANR	5393927	Identifier	fstr		5393649	1					
ANR	5393928	AdditiveExpression	p - fmt + 1		5393649	2		-			
ANR	5393929	Identifier	p		5393649	0					
ANR	5393930	AdditiveExpression	fmt + 1		5393649	1		+			
ANR	5393931	Identifier	fmt		5393649	0					
ANR	5393932	PrimaryExpression	1		5393649	1					
ANR	5393933	ExpressionStatement	"grub_strncpy ( fstr , fmt , p - fmt )"	734:4:13118:13151	5393649	1	True				
ANR	5393934	CallExpression	"grub_strncpy ( fstr , fmt , p - fmt )"		5393649	0					
ANR	5393935	Callee	grub_strncpy		5393649	0					
ANR	5393936	Identifier	grub_strncpy		5393649	0					
ANR	5393937	ArgumentList	fstr		5393649	1					
ANR	5393938	Argument	fstr		5393649	0					
ANR	5393939	Identifier	fstr		5393649	0					
ANR	5393940	Argument	fmt		5393649	1					
ANR	5393941	Identifier	fmt		5393649	0					
ANR	5393942	Argument	p - fmt		5393649	2					
ANR	5393943	AdditiveExpression	p - fmt		5393649	0		-			
ANR	5393944	Identifier	p		5393649	0					
ANR	5393945	Identifier	fmt		5393649	1					
ANR	5393946	ExpressionStatement	fstr [ p - fmt ] = 0	735:4:13157:13174	5393649	2	True				
ANR	5393947	AssignmentExpression	fstr [ p - fmt ] = 0		5393649	0		=			
ANR	5393948	ArrayIndexing	fstr [ p - fmt ]		5393649	0					
ANR	5393949	Identifier	fstr		5393649	0					
ANR	5393950	AdditiveExpression	p - fmt		5393649	1		-			
ANR	5393951	Identifier	p		5393649	0					
ANR	5393952	Identifier	fmt		5393649	1					
ANR	5393953	PrimaryExpression	0		5393649	1					
ANR	5393954	ExpressionStatement	"format2 = grub_strtoul ( fstr , 0 , 10 )"	736:4:13180:13216	5393649	3	True				
ANR	5393955	AssignmentExpression	"format2 = grub_strtoul ( fstr , 0 , 10 )"		5393649	0		=			
ANR	5393956	Identifier	format2		5393649	0					
ANR	5393957	CallExpression	"grub_strtoul ( fstr , 0 , 10 )"		5393649	1					
ANR	5393958	Callee	grub_strtoul		5393649	0					
ANR	5393959	Identifier	grub_strtoul		5393649	0					
ANR	5393960	ArgumentList	fstr		5393649	1					
ANR	5393961	Argument	fstr		5393649	0					
ANR	5393962	Identifier	fstr		5393649	0					
ANR	5393963	Argument	0		5393649	1					
ANR	5393964	PrimaryExpression	0		5393649	0					
ANR	5393965	Argument	10		5393649	2					
ANR	5393966	PrimaryExpression	10		5393649	0					
ANR	5393967	ExpressionStatement	fmt = p	737:4:13222:13229	5393649	4	True				
ANR	5393968	AssignmentExpression	fmt = p		5393649	0		=			
ANR	5393969	Identifier	fmt		5393649	0					
ANR	5393970	Identifier	p		5393649	1					
ANR	5393971	ExpressionStatement	c = * fmt ++	741:3:13246:13256	5393649	15	True				
ANR	5393972	AssignmentExpression	c = * fmt ++		5393649	0		=			
ANR	5393973	Identifier	c		5393649	0					
ANR	5393974	UnaryOperationExpression	* fmt ++		5393649	1					
ANR	5393975	UnaryOperator	*		5393649	0					
ANR	5393976	PostIncDecOperationExpression	fmt ++		5393649	1					
ANR	5393977	Identifier	fmt		5393649	0					
ANR	5393978	IncDec	++		5393649	1					
ANR	5393979	IfStatement	if ( c == 'l' )		5393649	16					
ANR	5393980	Condition	c == 'l'	742:7:13265:13272	5393649	0	True				
ANR	5393981	EqualityExpression	c == 'l'		5393649	0		==			
ANR	5393982	Identifier	c		5393649	0					
ANR	5393983	PrimaryExpression	'l'		5393649	1					
ANR	5393984	CompoundStatement		75:5:1263:1263	5393649	1					
ANR	5393985	ExpressionStatement	longfmt = 1	744:7:13289:13300	5393649	0	True				
ANR	5393986	AssignmentExpression	longfmt = 1		5393649	0		=			
ANR	5393987	Identifier	longfmt		5393649	0					
ANR	5393988	PrimaryExpression	1		5393649	1					
ANR	5393989	ExpressionStatement	c = * fmt ++	745:7:13309:13319	5393649	1	True				
ANR	5393990	AssignmentExpression	c = * fmt ++		5393649	0		=			
ANR	5393991	Identifier	c		5393649	0					
ANR	5393992	UnaryOperationExpression	* fmt ++		5393649	1					
ANR	5393993	UnaryOperator	*		5393649	0					
ANR	5393994	PostIncDecOperationExpression	fmt ++		5393649	1					
ANR	5393995	Identifier	fmt		5393649	0					
ANR	5393996	IncDec	++		5393649	1					
ANR	5393997	IfStatement	if ( c == 'l' )		5393649	2					
ANR	5393998	Condition	c == 'l'	746:11:13332:13339	5393649	0	True				
ANR	5393999	EqualityExpression	c == 'l'		5393649	0		==			
ANR	5394000	Identifier	c		5393649	0					
ANR	5394001	PrimaryExpression	'l'		5393649	1					
ANR	5394002	CompoundStatement		79:2:1327:1327	5393649	1					
ANR	5394003	ExpressionStatement	longlongfmt = 1	748:4:13350:13365	5393649	0	True				
ANR	5394004	AssignmentExpression	longlongfmt = 1		5393649	0		=			
ANR	5394005	Identifier	longlongfmt		5393649	0					
ANR	5394006	PrimaryExpression	1		5393649	1					
ANR	5394007	ExpressionStatement	c = * fmt ++	749:4:13371:13381	5393649	1	True				
ANR	5394008	AssignmentExpression	c = * fmt ++		5393649	0		=			
ANR	5394009	Identifier	c		5393649	0					
ANR	5394010	UnaryOperationExpression	* fmt ++		5393649	1					
ANR	5394011	UnaryOperator	*		5393649	0					
ANR	5394012	PostIncDecOperationExpression	fmt ++		5393649	1					
ANR	5394013	Identifier	fmt		5393649	0					
ANR	5394014	IncDec	++		5393649	1					
ANR	5394015	SwitchStatement	switch ( c )		5393649	17					
ANR	5394016	Condition	c	753:11:13406:13406	5393649	0	True				
ANR	5394017	Identifier	c		5393649	0					
ANR	5394018	CompoundStatement		86:5:1397:1397	5393649	1					
ANR	5394019	Label	case 'p' :	755:5:13421:13429	5393649	0	True				
ANR	5394020	ExpressionStatement	"write_str ( ""0x"" , & cc )"	756:7:13438:13459	5393649	1	True				
ANR	5394021	CallExpression	"write_str ( ""0x"" , & cc )"		5393649	0					
ANR	5394022	Callee	write_str		5393649	0					
ANR	5394023	Identifier	write_str		5393649	0					
ANR	5394024	ArgumentList	"""0x"""		5393649	1					
ANR	5394025	Argument	"""0x"""		5393649	0					
ANR	5394026	PrimaryExpression	"""0x"""		5393649	0					
ANR	5394027	Argument	& cc		5393649	1					
ANR	5394028	UnaryOperationExpression	& cc		5393649	0					
ANR	5394029	UnaryOperator	&		5393649	0					
ANR	5394030	Identifier	cc		5393649	1					
ANR	5394031	ExpressionStatement	c = 'x'	757:7:13468:13475	5393649	2	True				
ANR	5394032	AssignmentExpression	c = 'x'		5393649	0		=			
ANR	5394033	Identifier	c		5393649	0					
ANR	5394034	PrimaryExpression	'x'		5393649	1					
ANR	5394035	ExpressionStatement	longlongfmt |= ( sizeof ( void * ) == sizeof ( long long ) )	758:7:13484:13538	5393649	3	True				
ANR	5394036	AssignmentExpression	longlongfmt |= ( sizeof ( void * ) == sizeof ( long long ) )		5393649	0		|=			
ANR	5394037	Identifier	longlongfmt		5393649	0					
ANR	5394038	EqualityExpression	sizeof ( void * ) == sizeof ( long long )		5393649	1		==			
ANR	5394039	SizeofExpression	sizeof ( void * )		5393649	0					
ANR	5394040	Sizeof	sizeof		5393649	0					
ANR	5394041	SizeofOperand	void *		5393649	1					
ANR	5394042	SizeofExpression	sizeof ( long long )		5393649	1					
ANR	5394043	Sizeof	sizeof		5393649	0					
ANR	5394044	SizeofOperand	long long		5393649	1					
ANR	5394045	Label	case 'x' :	760:5:13572:13580	5393649	4	True				
ANR	5394046	Label	case 'u' :	761:5:13587:13595	5393649	5	True				
ANR	5394047	ExpressionStatement	unsig = 1	762:7:13604:13613	5393649	6	True				
ANR	5394048	AssignmentExpression	unsig = 1		5393649	0		=			
ANR	5394049	Identifier	unsig		5393649	0					
ANR	5394050	PrimaryExpression	1		5393649	1					
ANR	5394051	Label	case 'd' :	764:5:13647:13655	5393649	7	True				
ANR	5394052	IfStatement	if ( longlongfmt )		5393649	8					
ANR	5394053	Condition	longlongfmt	765:11:13668:13678	5393649	0	True				
ANR	5394054	Identifier	longlongfmt		5393649	0					
ANR	5394055	CompoundStatement		99:4:1672:1684	5393649	1					
ANR	5394056	IdentifierDeclStatement	long long ll ;	767:4:13689:13701	5393649	0	True				
ANR	5394057	IdentifierDecl	ll		5393649	0					
ANR	5394058	IdentifierDeclType	long long		5393649	0					
ANR	5394059	Identifier	ll		5393649	1					
ANR	5394060	Statement	ll	769:4:13708:13709	5393649	1	True				
ANR	5394061	Statement	=	769:7:13711:13711	5393649	2	True				
ANR	5394062	Statement	va_arg	769:9:13713:13718	5393649	3	True				
ANR	5394063	Statement	(	769:16:13720:13720	5393649	4	True				
ANR	5394064	Statement	args	769:17:13721:13724	5393649	5	True				
ANR	5394065	Statement	","	769:21:13725:13725	5393649	6	True				
ANR	5394066	Statement	long	769:23:13727:13730	5393649	7	True				
ANR	5394067	Statement	long	769:28:13732:13735	5393649	8	True				
ANR	5394068	Statement	)	769:32:13736:13736	5393649	9	True				
ANR	5394069	ExpressionStatement		769:33:13737:13737	5393649	10	True				
ANR	5394070	ExpressionStatement	"grub_lltoa ( tmp , c , ll )"	770:4:13743:13766	5393649	11	True				
ANR	5394071	CallExpression	"grub_lltoa ( tmp , c , ll )"		5393649	0					
ANR	5394072	Callee	grub_lltoa		5393649	0					
ANR	5394073	Identifier	grub_lltoa		5393649	0					
ANR	5394074	ArgumentList	tmp		5393649	1					
ANR	5394075	Argument	tmp		5393649	0					
ANR	5394076	Identifier	tmp		5393649	0					
ANR	5394077	Argument	c		5393649	1					
ANR	5394078	Identifier	c		5393649	0					
ANR	5394079	Argument	ll		5393649	2					
ANR	5394080	Identifier	ll		5393649	0					
ANR	5394081	ElseStatement	else		5393649	0					
ANR	5394082	IfStatement	if ( longfmt && unsig )		5393649	0					
ANR	5394083	Condition	longfmt && unsig	772:16:13788:13803	5393649	0	True				
ANR	5394084	AndExpression	longfmt && unsig		5393649	0		&&			
ANR	5394085	Identifier	longfmt		5393649	0					
ANR	5394086	Identifier	unsig		5393649	1					
ANR	5394087	CompoundStatement		105:2:1791:1791	5393649	1					
ANR	5394088	Statement	unsigned	774:4:13814:13821	5393649	0	True				
ANR	5394089	Statement	long	774:13:13823:13826	5393649	1	True				
ANR	5394090	Statement	l	774:18:13828:13828	5393649	2	True				
ANR	5394091	Statement	=	774:20:13830:13830	5393649	3	True				
ANR	5394092	Statement	va_arg	774:22:13832:13837	5393649	4	True				
ANR	5394093	Statement	(	774:29:13839:13839	5393649	5	True				
ANR	5394094	Statement	args	774:30:13840:13843	5393649	6	True				
ANR	5394095	Statement	","	774:34:13844:13844	5393649	7	True				
ANR	5394096	Statement	unsigned	774:36:13846:13853	5393649	8	True				
ANR	5394097	Statement	long	774:45:13855:13858	5393649	9	True				
ANR	5394098	Statement	)	774:49:13859:13859	5393649	10	True				
ANR	5394099	ExpressionStatement		774:50:13860:13860	5393649	11	True				
ANR	5394100	ExpressionStatement	"grub_lltoa ( tmp , c , l )"	775:4:13866:13888	5393649	12	True				
ANR	5394101	CallExpression	"grub_lltoa ( tmp , c , l )"		5393649	0					
ANR	5394102	Callee	grub_lltoa		5393649	0					
ANR	5394103	Identifier	grub_lltoa		5393649	0					
ANR	5394104	ArgumentList	tmp		5393649	1					
ANR	5394105	Argument	tmp		5393649	0					
ANR	5394106	Identifier	tmp		5393649	0					
ANR	5394107	Argument	c		5393649	1					
ANR	5394108	Identifier	c		5393649	0					
ANR	5394109	Argument	l		5393649	2					
ANR	5394110	Identifier	l		5393649	0					
ANR	5394111	ElseStatement	else		5393649	0					
ANR	5394112	IfStatement	if ( longfmt )		5393649	0					
ANR	5394113	Condition	longfmt	777:16:13910:13916	5393649	0	True				
ANR	5394114	Identifier	longfmt		5393649	0					
ANR	5394115	CompoundStatement		110:2:1904:1904	5393649	1					
ANR	5394116	Statement	long	779:4:13927:13930	5393649	0	True				
ANR	5394117	Statement	l	779:9:13932:13932	5393649	1	True				
ANR	5394118	Statement	=	779:11:13934:13934	5393649	2	True				
ANR	5394119	Statement	va_arg	779:13:13936:13941	5393649	3	True				
ANR	5394120	Statement	(	779:20:13943:13943	5393649	4	True				
ANR	5394121	Statement	args	779:21:13944:13947	5393649	5	True				
ANR	5394122	Statement	","	779:25:13948:13948	5393649	6	True				
ANR	5394123	Statement	long	779:27:13950:13953	5393649	7	True				
ANR	5394124	Statement	)	779:31:13954:13954	5393649	8	True				
ANR	5394125	ExpressionStatement		779:32:13955:13955	5393649	9	True				
ANR	5394126	ExpressionStatement	"grub_lltoa ( tmp , c , l )"	780:4:13961:13983	5393649	10	True				
ANR	5394127	CallExpression	"grub_lltoa ( tmp , c , l )"		5393649	0					
ANR	5394128	Callee	grub_lltoa		5393649	0					
ANR	5394129	Identifier	grub_lltoa		5393649	0					
ANR	5394130	ArgumentList	tmp		5393649	1					
ANR	5394131	Argument	tmp		5393649	0					
ANR	5394132	Identifier	tmp		5393649	0					
ANR	5394133	Argument	c		5393649	1					
ANR	5394134	Identifier	c		5393649	0					
ANR	5394135	Argument	l		5393649	2					
ANR	5394136	Identifier	l		5393649	0					
ANR	5394137	ElseStatement	else		5393649	0					
ANR	5394138	IfStatement	if ( unsig )		5393649	0					
ANR	5394139	Condition	unsig	782:16:14005:14009	5393649	0	True				
ANR	5394140	Identifier	unsig		5393649	0					
ANR	5394141	CompoundStatement		115:2:1997:1997	5393649	1					
ANR	5394142	Statement	unsigned	784:4:14020:14027	5393649	0	True				
ANR	5394143	Statement	u	784:13:14029:14029	5393649	1	True				
ANR	5394144	Statement	=	784:15:14031:14031	5393649	2	True				
ANR	5394145	Statement	va_arg	784:17:14033:14038	5393649	3	True				
ANR	5394146	Statement	(	784:24:14040:14040	5393649	4	True				
ANR	5394147	Statement	args	784:25:14041:14044	5393649	5	True				
ANR	5394148	Statement	","	784:29:14045:14045	5393649	6	True				
ANR	5394149	Statement	unsigned	784:31:14047:14054	5393649	7	True				
ANR	5394150	Statement	)	784:39:14055:14055	5393649	8	True				
ANR	5394151	ExpressionStatement		784:40:14056:14056	5393649	9	True				
ANR	5394152	ExpressionStatement	"grub_lltoa ( tmp , c , u )"	785:4:14062:14084	5393649	10	True				
ANR	5394153	CallExpression	"grub_lltoa ( tmp , c , u )"		5393649	0					
ANR	5394154	Callee	grub_lltoa		5393649	0					
ANR	5394155	Identifier	grub_lltoa		5393649	0					
ANR	5394156	ArgumentList	tmp		5393649	1					
ANR	5394157	Argument	tmp		5393649	0					
ANR	5394158	Identifier	tmp		5393649	0					
ANR	5394159	Argument	c		5393649	1					
ANR	5394160	Identifier	c		5393649	0					
ANR	5394161	Argument	u		5393649	2					
ANR	5394162	Identifier	u		5393649	0					
ANR	5394163	ElseStatement	else		5393649	0					
ANR	5394164	CompoundStatement		120:2:2087:2087	5393649	0					
ANR	5394165	ExpressionStatement	"n = va_arg ( args , int )"	789:4:14110:14132	5393649	0	True				
ANR	5394166	AssignmentExpression	"n = va_arg ( args , int )"		5393649	0		=			
ANR	5394167	Identifier	n		5393649	0					
ANR	5394168	CallExpression	"va_arg ( args , int )"		5393649	1					
ANR	5394169	Callee	va_arg		5393649	0					
ANR	5394170	Identifier	va_arg		5393649	0					
ANR	5394171	ArgumentList	args		5393649	1					
ANR	5394172	Argument	args		5393649	0					
ANR	5394173	Identifier	args		5393649	0					
ANR	5394174	Argument	int		5393649	1					
ANR	5394175	Identifier	int		5393649	0					
ANR	5394176	ExpressionStatement	"grub_lltoa ( tmp , c , n )"	790:4:14138:14160	5393649	1	True				
ANR	5394177	CallExpression	"grub_lltoa ( tmp , c , n )"		5393649	0					
ANR	5394178	Callee	grub_lltoa		5393649	0					
ANR	5394179	Identifier	grub_lltoa		5393649	0					
ANR	5394180	ArgumentList	tmp		5393649	1					
ANR	5394181	Argument	tmp		5393649	0					
ANR	5394182	Identifier	tmp		5393649	0					
ANR	5394183	Argument	c		5393649	1					
ANR	5394184	Identifier	c		5393649	0					
ANR	5394185	Argument	n		5393649	2					
ANR	5394186	Identifier	n		5393649	0					
ANR	5394187	IfStatement	if ( ! rightfill && grub_strlen ( tmp ) < format1 )		5393649	9					
ANR	5394188	Condition	! rightfill && grub_strlen ( tmp ) < format1	792:11:14177:14218	5393649	0	True				
ANR	5394189	AndExpression	! rightfill && grub_strlen ( tmp ) < format1		5393649	0		&&			
ANR	5394190	UnaryOperationExpression	! rightfill		5393649	0					
ANR	5394191	UnaryOperator	!		5393649	0					
ANR	5394192	Identifier	rightfill		5393649	1					
ANR	5394193	RelationalExpression	grub_strlen ( tmp ) < format1		5393649	1		<			
ANR	5394194	CallExpression	grub_strlen ( tmp )		5393649	0					
ANR	5394195	Callee	grub_strlen		5393649	0					
ANR	5394196	Identifier	grub_strlen		5393649	0					
ANR	5394197	ArgumentList	tmp		5393649	1					
ANR	5394198	Argument	tmp		5393649	0					
ANR	5394199	Identifier	tmp		5393649	0					
ANR	5394200	Identifier	format1		5393649	1					
ANR	5394201	ExpressionStatement	"write_fill ( zerofill , format1 - grub_strlen ( tmp ) , & cc )"	793:2:14223:14278	5393649	1	True				
ANR	5394202	CallExpression	"write_fill ( zerofill , format1 - grub_strlen ( tmp ) , & cc )"		5393649	0					
ANR	5394203	Callee	write_fill		5393649	0					
ANR	5394204	Identifier	write_fill		5393649	0					
ANR	5394205	ArgumentList	zerofill		5393649	1					
ANR	5394206	Argument	zerofill		5393649	0					
ANR	5394207	Identifier	zerofill		5393649	0					
ANR	5394208	Argument	format1 - grub_strlen ( tmp )		5393649	1					
ANR	5394209	AdditiveExpression	format1 - grub_strlen ( tmp )		5393649	0		-			
ANR	5394210	Identifier	format1		5393649	0					
ANR	5394211	CallExpression	grub_strlen ( tmp )		5393649	1					
ANR	5394212	Callee	grub_strlen		5393649	0					
ANR	5394213	Identifier	grub_strlen		5393649	0					
ANR	5394214	ArgumentList	tmp		5393649	1					
ANR	5394215	Argument	tmp		5393649	0					
ANR	5394216	Identifier	tmp		5393649	0					
ANR	5394217	Argument	& cc		5393649	2					
ANR	5394218	UnaryOperationExpression	& cc		5393649	0					
ANR	5394219	UnaryOperator	&		5393649	0					
ANR	5394220	Identifier	cc		5393649	1					
ANR	5394221	ExpressionStatement	"write_str ( tmp , & cc )"	794:7:14287:14307	5393649	10	True				
ANR	5394222	CallExpression	"write_str ( tmp , & cc )"		5393649	0					
ANR	5394223	Callee	write_str		5393649	0					
ANR	5394224	Identifier	write_str		5393649	0					
ANR	5394225	ArgumentList	tmp		5393649	1					
ANR	5394226	Argument	tmp		5393649	0					
ANR	5394227	Identifier	tmp		5393649	0					
ANR	5394228	Argument	& cc		5393649	1					
ANR	5394229	UnaryOperationExpression	& cc		5393649	0					
ANR	5394230	UnaryOperator	&		5393649	0					
ANR	5394231	Identifier	cc		5393649	1					
ANR	5394232	IfStatement	if ( rightfill && grub_strlen ( tmp ) < format1 )		5393649	11					
ANR	5394233	Condition	rightfill && grub_strlen ( tmp ) < format1	795:11:14320:14359	5393649	0	True				
ANR	5394234	AndExpression	rightfill && grub_strlen ( tmp ) < format1		5393649	0		&&			
ANR	5394235	Identifier	rightfill		5393649	0					
ANR	5394236	RelationalExpression	grub_strlen ( tmp ) < format1		5393649	1		<			
ANR	5394237	CallExpression	grub_strlen ( tmp )		5393649	0					
ANR	5394238	Callee	grub_strlen		5393649	0					
ANR	5394239	Identifier	grub_strlen		5393649	0					
ANR	5394240	ArgumentList	tmp		5393649	1					
ANR	5394241	Argument	tmp		5393649	0					
ANR	5394242	Identifier	tmp		5393649	0					
ANR	5394243	Identifier	format1		5393649	1					
ANR	5394244	ExpressionStatement	"write_fill ( zerofill , format1 - grub_strlen ( tmp ) , & cc )"	796:2:14364:14419	5393649	1	True				
ANR	5394245	CallExpression	"write_fill ( zerofill , format1 - grub_strlen ( tmp ) , & cc )"		5393649	0					
ANR	5394246	Callee	write_fill		5393649	0					
ANR	5394247	Identifier	write_fill		5393649	0					
ANR	5394248	ArgumentList	zerofill		5393649	1					
ANR	5394249	Argument	zerofill		5393649	0					
ANR	5394250	Identifier	zerofill		5393649	0					
ANR	5394251	Argument	format1 - grub_strlen ( tmp )		5393649	1					
ANR	5394252	AdditiveExpression	format1 - grub_strlen ( tmp )		5393649	0		-			
ANR	5394253	Identifier	format1		5393649	0					
ANR	5394254	CallExpression	grub_strlen ( tmp )		5393649	1					
ANR	5394255	Callee	grub_strlen		5393649	0					
ANR	5394256	Identifier	grub_strlen		5393649	0					
ANR	5394257	ArgumentList	tmp		5393649	1					
ANR	5394258	Argument	tmp		5393649	0					
ANR	5394259	Identifier	tmp		5393649	0					
ANR	5394260	Argument	& cc		5393649	2					
ANR	5394261	UnaryOperationExpression	& cc		5393649	0					
ANR	5394262	UnaryOperator	&		5393649	0					
ANR	5394263	Identifier	cc		5393649	1					
ANR	5394264	BreakStatement	break ;	797:7:14428:14433	5393649	12	True				
ANR	5394265	Label	case 'c' :	799:5:14441:14449	5393649	13	True				
ANR	5394266	ExpressionStatement	"n = va_arg ( args , int )"	800:7:14458:14480	5393649	14	True				
ANR	5394267	AssignmentExpression	"n = va_arg ( args , int )"		5393649	0		=			
ANR	5394268	Identifier	n		5393649	0					
ANR	5394269	CallExpression	"va_arg ( args , int )"		5393649	1					
ANR	5394270	Callee	va_arg		5393649	0					
ANR	5394271	Identifier	va_arg		5393649	0					
ANR	5394272	ArgumentList	args		5393649	1					
ANR	5394273	Argument	args		5393649	0					
ANR	5394274	Identifier	args		5393649	0					
ANR	5394275	Argument	int		5393649	1					
ANR	5394276	Identifier	int		5393649	0					
ANR	5394277	ExpressionStatement	"write_char ( n & 0xff , & cc )"	801:7:14489:14515	5393649	15	True				
ANR	5394278	CallExpression	"write_char ( n & 0xff , & cc )"		5393649	0					
ANR	5394279	Callee	write_char		5393649	0					
ANR	5394280	Identifier	write_char		5393649	0					
ANR	5394281	ArgumentList	n & 0xff		5393649	1					
ANR	5394282	Argument	n & 0xff		5393649	0					
ANR	5394283	BitAndExpression	n & 0xff		5393649	0		&			
ANR	5394284	Identifier	n		5393649	0					
ANR	5394285	PrimaryExpression	0xff		5393649	1					
ANR	5394286	Argument	& cc		5393649	1					
ANR	5394287	UnaryOperationExpression	& cc		5393649	0					
ANR	5394288	UnaryOperator	&		5393649	0					
ANR	5394289	Identifier	cc		5393649	1					
ANR	5394290	BreakStatement	break ;	802:7:14524:14529	5393649	16	True				
ANR	5394291	Label	case 'C' :	804:5:14537:14545	5393649	17	True				
ANR	5394292	CompoundStatement		140:2:2607:2620	5393649	18					
ANR	5394293	IdentifierDeclStatement	"grub_uint32_t code = va_arg ( args , grub_uint32_t ) ;"	806:2:14558:14607	5393649	0	True				
ANR	5394294	IdentifierDecl	"code = va_arg ( args , grub_uint32_t )"		5393649	0					
ANR	5394295	IdentifierDeclType	grub_uint32_t		5393649	0					
ANR	5394296	Identifier	code		5393649	1					
ANR	5394297	AssignmentExpression	"code = va_arg ( args , grub_uint32_t )"		5393649	2		=			
ANR	5394298	Identifier	code		5393649	0					
ANR	5394299	CallExpression	"va_arg ( args , grub_uint32_t )"		5393649	1					
ANR	5394300	Callee	va_arg		5393649	0					
ANR	5394301	Identifier	va_arg		5393649	0					
ANR	5394302	ArgumentList	args		5393649	1					
ANR	5394303	Argument	args		5393649	0					
ANR	5394304	Identifier	args		5393649	0					
ANR	5394305	Argument	grub_uint32_t		5393649	1					
ANR	5394306	Identifier	grub_uint32_t		5393649	0					
ANR	5394307	IdentifierDeclStatement	int shift ;	807:2:14611:14620	5393649	1	True				
ANR	5394308	IdentifierDecl	shift		5393649	0					
ANR	5394309	IdentifierDeclType	int		5393649	0					
ANR	5394310	Identifier	shift		5393649	1					
ANR	5394311	IdentifierDeclStatement	unsigned mask ;	808:2:14624:14637	5393649	2	True				
ANR	5394312	IdentifierDecl	mask		5393649	0					
ANR	5394313	IdentifierDeclType	unsigned		5393649	0					
ANR	5394314	Identifier	mask		5393649	1					
ANR	5394315	IfStatement	if ( code <= 0x7f )		5393649	3					
ANR	5394316	Condition	code <= 0x7f	810:6:14646:14657	5393649	0	True				
ANR	5394317	RelationalExpression	code <= 0x7f		5393649	0		<=			
ANR	5394318	Identifier	code		5393649	0					
ANR	5394319	PrimaryExpression	0x7f		5393649	1					
ANR	5394320	CompoundStatement		143:4:2647:2647	5393649	1					
ANR	5394321	ExpressionStatement	shift = 0	812:6:14672:14681	5393649	0	True				
ANR	5394322	AssignmentExpression	shift = 0		5393649	0		=			
ANR	5394323	Identifier	shift		5393649	0					
ANR	5394324	PrimaryExpression	0		5393649	1					
ANR	5394325	ExpressionStatement	mask = 0	813:6:14689:14697	5393649	1	True				
ANR	5394326	AssignmentExpression	mask = 0		5393649	0		=			
ANR	5394327	Identifier	mask		5393649	0					
ANR	5394328	PrimaryExpression	0		5393649	1					
ANR	5394329	ElseStatement	else		5393649	0					
ANR	5394330	IfStatement	if ( code <= 0x7ff )		5393649	0					
ANR	5394331	Condition	code <= 0x7ff	815:11:14716:14728	5393649	0	True				
ANR	5394332	RelationalExpression	code <= 0x7ff		5393649	0		<=			
ANR	5394333	Identifier	code		5393649	0					
ANR	5394334	PrimaryExpression	0x7ff		5393649	1					
ANR	5394335	CompoundStatement		148:4:2718:2718	5393649	1					
ANR	5394336	ExpressionStatement	shift = 6	817:6:14743:14752	5393649	0	True				
ANR	5394337	AssignmentExpression	shift = 6		5393649	0		=			
ANR	5394338	Identifier	shift		5393649	0					
ANR	5394339	PrimaryExpression	6		5393649	1					
ANR	5394340	ExpressionStatement	mask = 0xc0	818:6:14760:14771	5393649	1	True				
ANR	5394341	AssignmentExpression	mask = 0xc0		5393649	0		=			
ANR	5394342	Identifier	mask		5393649	0					
ANR	5394343	PrimaryExpression	0xc0		5393649	1					
ANR	5394344	ElseStatement	else		5393649	0					
ANR	5394345	IfStatement	if ( code <= 0xffff )		5393649	0					
ANR	5394346	Condition	code <= 0xffff	820:11:14790:14803	5393649	0	True				
ANR	5394347	RelationalExpression	code <= 0xffff		5393649	0		<=			
ANR	5394348	Identifier	code		5393649	0					
ANR	5394349	PrimaryExpression	0xffff		5393649	1					
ANR	5394350	CompoundStatement		153:4:2793:2793	5393649	1					
ANR	5394351	ExpressionStatement	shift = 12	822:6:14818:14828	5393649	0	True				
ANR	5394352	AssignmentExpression	shift = 12		5393649	0		=			
ANR	5394353	Identifier	shift		5393649	0					
ANR	5394354	PrimaryExpression	12		5393649	1					
ANR	5394355	ExpressionStatement	mask = 0xe0	823:6:14836:14847	5393649	1	True				
ANR	5394356	AssignmentExpression	mask = 0xe0		5393649	0		=			
ANR	5394357	Identifier	mask		5393649	0					
ANR	5394358	PrimaryExpression	0xe0		5393649	1					
ANR	5394359	ElseStatement	else		5393649	0					
ANR	5394360	IfStatement	if ( code <= 0x1fffff )		5393649	0					
ANR	5394361	Condition	code <= 0x1fffff	825:11:14866:14881	5393649	0	True				
ANR	5394362	RelationalExpression	code <= 0x1fffff		5393649	0		<=			
ANR	5394363	Identifier	code		5393649	0					
ANR	5394364	PrimaryExpression	0x1fffff		5393649	1					
ANR	5394365	CompoundStatement		158:4:2871:2871	5393649	1					
ANR	5394366	ExpressionStatement	shift = 18	827:6:14896:14906	5393649	0	True				
ANR	5394367	AssignmentExpression	shift = 18		5393649	0		=			
ANR	5394368	Identifier	shift		5393649	0					
ANR	5394369	PrimaryExpression	18		5393649	1					
ANR	5394370	ExpressionStatement	mask = 0xf0	828:6:14914:14925	5393649	1	True				
ANR	5394371	AssignmentExpression	mask = 0xf0		5393649	0		=			
ANR	5394372	Identifier	mask		5393649	0					
ANR	5394373	PrimaryExpression	0xf0		5393649	1					
ANR	5394374	ElseStatement	else		5393649	0					
ANR	5394375	IfStatement	if ( code <= 0x3ffffff )		5393649	0					
ANR	5394376	Condition	code <= 0x3ffffff	830:11:14944:14960	5393649	0	True				
ANR	5394377	RelationalExpression	code <= 0x3ffffff		5393649	0		<=			
ANR	5394378	Identifier	code		5393649	0					
ANR	5394379	PrimaryExpression	0x3ffffff		5393649	1					
ANR	5394380	CompoundStatement		163:4:2950:2950	5393649	1					
ANR	5394381	ExpressionStatement	shift = 24	832:6:14975:14985	5393649	0	True				
ANR	5394382	AssignmentExpression	shift = 24		5393649	0		=			
ANR	5394383	Identifier	shift		5393649	0					
ANR	5394384	PrimaryExpression	24		5393649	1					
ANR	5394385	ExpressionStatement	mask = 0xf8	833:6:14993:15004	5393649	1	True				
ANR	5394386	AssignmentExpression	mask = 0xf8		5393649	0		=			
ANR	5394387	Identifier	mask		5393649	0					
ANR	5394388	PrimaryExpression	0xf8		5393649	1					
ANR	5394389	ElseStatement	else		5393649	0					
ANR	5394390	IfStatement	if ( code <= 0x7fffffff )		5393649	0					
ANR	5394391	Condition	code <= 0x7fffffff	835:11:15023:15040	5393649	0	True				
ANR	5394392	RelationalExpression	code <= 0x7fffffff		5393649	0		<=			
ANR	5394393	Identifier	code		5393649	0					
ANR	5394394	PrimaryExpression	0x7fffffff		5393649	1					
ANR	5394395	CompoundStatement		168:4:3030:3030	5393649	1					
ANR	5394396	ExpressionStatement	shift = 30	837:6:15055:15065	5393649	0	True				
ANR	5394397	AssignmentExpression	shift = 30		5393649	0		=			
ANR	5394398	Identifier	shift		5393649	0					
ANR	5394399	PrimaryExpression	30		5393649	1					
ANR	5394400	ExpressionStatement	mask = 0xfc	838:6:15073:15084	5393649	1	True				
ANR	5394401	AssignmentExpression	mask = 0xfc		5393649	0		=			
ANR	5394402	Identifier	mask		5393649	0					
ANR	5394403	PrimaryExpression	0xfc		5393649	1					
ANR	5394404	ElseStatement	else		5393649	0					
ANR	5394405	CompoundStatement		173:4:3086:3086	5393649	0					
ANR	5394406	ExpressionStatement	code = '?'	842:6:15111:15121	5393649	0	True				
ANR	5394407	AssignmentExpression	code = '?'		5393649	0		=			
ANR	5394408	Identifier	code		5393649	0					
ANR	5394409	PrimaryExpression	'?'		5393649	1					
ANR	5394410	ExpressionStatement	shift = 0	843:6:15129:15138	5393649	1	True				
ANR	5394411	AssignmentExpression	shift = 0		5393649	0		=			
ANR	5394412	Identifier	shift		5393649	0					
ANR	5394413	PrimaryExpression	0		5393649	1					
ANR	5394414	ExpressionStatement	mask = 0	844:6:15146:15154	5393649	2	True				
ANR	5394415	AssignmentExpression	mask = 0		5393649	0		=			
ANR	5394416	Identifier	mask		5393649	0					
ANR	5394417	PrimaryExpression	0		5393649	1					
ANR	5394418	ExpressionStatement	"write_char ( mask | ( code >> shift ) , & cc )"	847:2:15165:15205	5393649	4	True				
ANR	5394419	CallExpression	"write_char ( mask | ( code >> shift ) , & cc )"		5393649	0					
ANR	5394420	Callee	write_char		5393649	0					
ANR	5394421	Identifier	write_char		5393649	0					
ANR	5394422	ArgumentList	mask | ( code >> shift )		5393649	1					
ANR	5394423	Argument	mask | ( code >> shift )		5393649	0					
ANR	5394424	InclusiveOrExpression	mask | ( code >> shift )		5393649	0		|			
ANR	5394425	Identifier	mask		5393649	0					
ANR	5394426	ShiftExpression	code >> shift		5393649	1		>>			
ANR	5394427	Identifier	code		5393649	0					
ANR	5394428	Identifier	shift		5393649	1					
ANR	5394429	Argument	& cc		5393649	1					
ANR	5394430	UnaryOperationExpression	& cc		5393649	0					
ANR	5394431	UnaryOperator	&		5393649	0					
ANR	5394432	Identifier	cc		5393649	1					
ANR	5394433	ForStatement	for ( shift -= 6 ; shift >= 0 ; shift -= 6 )		5393649	5					
ANR	5394434	ForInit	shift -= 6 ;	849:7:15215:15225	5393649	0	True				
ANR	5394435	AssignmentExpression	shift -= 6		5393649	0		-=			
ANR	5394436	Identifier	shift		5393649	0					
ANR	5394437	PrimaryExpression	6		5393649	1					
ANR	5394438	Condition	shift >= 0	849:19:15227:15236	5393649	1	True				
ANR	5394439	RelationalExpression	shift >= 0		5393649	0		>=			
ANR	5394440	Identifier	shift		5393649	0					
ANR	5394441	PrimaryExpression	0		5393649	1					
ANR	5394442	AssignmentExpression	shift -= 6	849:31:15239:15248	5393649	2	True	-=			
ANR	5394443	Identifier	shift		5393649	0					
ANR	5394444	PrimaryExpression	6		5393649	1					
ANR	5394445	ExpressionStatement	"write_char ( 0x80 | ( 0x3f & ( code >> shift ) ) , & cc )"	850:4:15255:15304	5393649	3	True				
ANR	5394446	CallExpression	"write_char ( 0x80 | ( 0x3f & ( code >> shift ) ) , & cc )"		5393649	0					
ANR	5394447	Callee	write_char		5393649	0					
ANR	5394448	Identifier	write_char		5393649	0					
ANR	5394449	ArgumentList	0x80 | ( 0x3f & ( code >> shift ) )		5393649	1					
ANR	5394450	Argument	0x80 | ( 0x3f & ( code >> shift ) )		5393649	0					
ANR	5394451	InclusiveOrExpression	0x80 | ( 0x3f & ( code >> shift ) )		5393649	0		|			
ANR	5394452	PrimaryExpression	0x80		5393649	0					
ANR	5394453	BitAndExpression	0x3f & ( code >> shift )		5393649	1		&			
ANR	5394454	PrimaryExpression	0x3f		5393649	0					
ANR	5394455	ShiftExpression	code >> shift		5393649	1		>>			
ANR	5394456	Identifier	code		5393649	0					
ANR	5394457	Identifier	shift		5393649	1					
ANR	5394458	Argument	& cc		5393649	1					
ANR	5394459	UnaryOperationExpression	& cc		5393649	0					
ANR	5394460	UnaryOperator	&		5393649	0					
ANR	5394461	Identifier	cc		5393649	1					
ANR	5394462	BreakStatement	break ;	852:7:15322:15327	5393649	19	True				
ANR	5394463	Label	case 's' :	854:5:15335:15343	5393649	20	True				
ANR	5394464	Statement	p	855:7:15352:15352	5393649	21	True				
ANR	5394465	Statement	=	855:9:15354:15354	5393649	22	True				
ANR	5394466	Statement	va_arg	855:11:15356:15361	5393649	23	True				
ANR	5394467	Statement	(	855:18:15363:15363	5393649	24	True				
ANR	5394468	Statement	args	855:19:15364:15367	5393649	25	True				
ANR	5394469	Statement	","	855:23:15368:15368	5393649	26	True				
ANR	5394470	Statement	char	855:25:15370:15373	5393649	27	True				
ANR	5394471	Statement	*	855:30:15375:15375	5393649	28	True				
ANR	5394472	Statement	)	855:31:15376:15376	5393649	29	True				
ANR	5394473	ExpressionStatement		855:32:15377:15377	5393649	30	True				
ANR	5394474	IfStatement	if ( p )		5393649	31					
ANR	5394475	Condition	p	856:11:15390:15390	5393649	0	True				
ANR	5394476	Identifier	p		5393649	0					
ANR	5394477	CompoundStatement		197:4:3546:3559	5393649	1					
ANR	5394478	IdentifierDeclStatement	grub_size_t len = 0 ;	858:4:15401:15420	5393649	0	True				
ANR	5394479	IdentifierDecl	len = 0		5393649	0					
ANR	5394480	IdentifierDeclType	grub_size_t		5393649	0					
ANR	5394481	Identifier	len		5393649	1					
ANR	5394482	AssignmentExpression	len = 0		5393649	2		=			
ANR	5394483	Identifier	len		5393649	0					
ANR	5394484	PrimaryExpression	0		5393649	1					
ANR	5394485	WhileStatement	while ( len < format2 && p [ len ] )		5393649	1					
ANR	5394486	Condition	len < format2 && p [ len ]	859:11:15433:15455	5393649	0	True				
ANR	5394487	AndExpression	len < format2 && p [ len ]		5393649	0		&&			
ANR	5394488	RelationalExpression	len < format2		5393649	0		<			
ANR	5394489	Identifier	len		5393649	0					
ANR	5394490	Identifier	format2		5393649	1					
ANR	5394491	ArrayIndexing	p [ len ]		5393649	1					
ANR	5394492	Identifier	p		5393649	0					
ANR	5394493	Identifier	len		5393649	1					
ANR	5394494	ExpressionStatement	len ++	860:6:15464:15469	5393649	1	True				
ANR	5394495	PostIncDecOperationExpression	len ++		5393649	0					
ANR	5394496	Identifier	len		5393649	0					
ANR	5394497	IncDec	++		5393649	1					
ANR	5394498	IfStatement	if ( ! rightfill && len < format1 )		5393649	2					
ANR	5394499	Condition	! rightfill && len < format1	862:8:15480:15506	5393649	0	True				
ANR	5394500	AndExpression	! rightfill && len < format1		5393649	0		&&			
ANR	5394501	UnaryOperationExpression	! rightfill		5393649	0					
ANR	5394502	UnaryOperator	!		5393649	0					
ANR	5394503	Identifier	rightfill		5393649	1					
ANR	5394504	RelationalExpression	len < format1		5393649	1		<			
ANR	5394505	Identifier	len		5393649	0					
ANR	5394506	Identifier	format1		5393649	1					
ANR	5394507	ExpressionStatement	"write_fill ( zerofill , format1 - len , & cc )"	863:6:15515:15556	5393649	1	True				
ANR	5394508	CallExpression	"write_fill ( zerofill , format1 - len , & cc )"		5393649	0					
ANR	5394509	Callee	write_fill		5393649	0					
ANR	5394510	Identifier	write_fill		5393649	0					
ANR	5394511	ArgumentList	zerofill		5393649	1					
ANR	5394512	Argument	zerofill		5393649	0					
ANR	5394513	Identifier	zerofill		5393649	0					
ANR	5394514	Argument	format1 - len		5393649	1					
ANR	5394515	AdditiveExpression	format1 - len		5393649	0		-			
ANR	5394516	Identifier	format1		5393649	0					
ANR	5394517	Identifier	len		5393649	1					
ANR	5394518	Argument	& cc		5393649	2					
ANR	5394519	UnaryOperationExpression	& cc		5393649	0					
ANR	5394520	UnaryOperator	&		5393649	0					
ANR	5394521	Identifier	cc		5393649	1					
ANR	5394522	IdentifierDeclStatement	grub_size_t i ;	865:4:15563:15576	5393649	3	True				
ANR	5394523	IdentifierDecl	i		5393649	0					
ANR	5394524	IdentifierDeclType	grub_size_t		5393649	0					
ANR	5394525	Identifier	i		5393649	1					
ANR	5394526	ForStatement	for ( i = 0 ; i < len ; i ++ )		5393649	4					
ANR	5394527	ForInit	i = 0 ;	866:9:15587:15592	5393649	0	True				
ANR	5394528	AssignmentExpression	i = 0		5393649	0		=			
ANR	5394529	Identifier	i		5393649	0					
ANR	5394530	PrimaryExpression	0		5393649	1					
ANR	5394531	Condition	i < len	866:16:15594:15600	5393649	1	True				
ANR	5394532	RelationalExpression	i < len		5393649	0		<			
ANR	5394533	Identifier	i		5393649	0					
ANR	5394534	Identifier	len		5393649	1					
ANR	5394535	PostIncDecOperationExpression	i ++	866:25:15603:15605	5393649	2	True				
ANR	5394536	Identifier	i		5393649	0					
ANR	5394537	IncDec	++		5393649	1					
ANR	5394538	ExpressionStatement	"write_char ( * p ++ , & cc )"	867:6:15614:15636	5393649	3	True				
ANR	5394539	CallExpression	"write_char ( * p ++ , & cc )"		5393649	0					
ANR	5394540	Callee	write_char		5393649	0					
ANR	5394541	Identifier	write_char		5393649	0					
ANR	5394542	ArgumentList	* p ++		5393649	1					
ANR	5394543	Argument	* p ++		5393649	0					
ANR	5394544	UnaryOperationExpression	* p ++		5393649	0					
ANR	5394545	UnaryOperator	*		5393649	0					
ANR	5394546	PostIncDecOperationExpression	p ++		5393649	1					
ANR	5394547	Identifier	p		5393649	0					
ANR	5394548	IncDec	++		5393649	1					
ANR	5394549	Argument	& cc		5393649	1					
ANR	5394550	UnaryOperationExpression	& cc		5393649	0					
ANR	5394551	UnaryOperator	&		5393649	0					
ANR	5394552	Identifier	cc		5393649	1					
ANR	5394553	IfStatement	if ( rightfill && len < format1 )		5393649	5					
ANR	5394554	Condition	rightfill && len < format1	869:8:15647:15672	5393649	0	True				
ANR	5394555	AndExpression	rightfill && len < format1		5393649	0		&&			
ANR	5394556	Identifier	rightfill		5393649	0					
ANR	5394557	RelationalExpression	len < format1		5393649	1		<			
ANR	5394558	Identifier	len		5393649	0					
ANR	5394559	Identifier	format1		5393649	1					
ANR	5394560	ExpressionStatement	"write_fill ( zerofill , format1 - len , & cc )"	870:6:15681:15722	5393649	1	True				
ANR	5394561	CallExpression	"write_fill ( zerofill , format1 - len , & cc )"		5393649	0					
ANR	5394562	Callee	write_fill		5393649	0					
ANR	5394563	Identifier	write_fill		5393649	0					
ANR	5394564	ArgumentList	zerofill		5393649	1					
ANR	5394565	Argument	zerofill		5393649	0					
ANR	5394566	Identifier	zerofill		5393649	0					
ANR	5394567	Argument	format1 - len		5393649	1					
ANR	5394568	AdditiveExpression	format1 - len		5393649	0		-			
ANR	5394569	Identifier	format1		5393649	0					
ANR	5394570	Identifier	len		5393649	1					
ANR	5394571	Argument	& cc		5393649	2					
ANR	5394572	UnaryOperationExpression	& cc		5393649	0					
ANR	5394573	UnaryOperator	&		5393649	0					
ANR	5394574	Identifier	cc		5393649	1					
ANR	5394575	ElseStatement	else		5393649	0					
ANR	5394576	ExpressionStatement	"write_str ( ""(null)"" , & cc )"	873:2:15742:15767	5393649	0	True				
ANR	5394577	CallExpression	"write_str ( ""(null)"" , & cc )"		5393649	0					
ANR	5394578	Callee	write_str		5393649	0					
ANR	5394579	Identifier	write_str		5393649	0					
ANR	5394580	ArgumentList	"""(null)"""		5393649	1					
ANR	5394581	Argument	"""(null)"""		5393649	0					
ANR	5394582	PrimaryExpression	"""(null)"""		5393649	0					
ANR	5394583	Argument	& cc		5393649	1					
ANR	5394584	UnaryOperationExpression	& cc		5393649	0					
ANR	5394585	UnaryOperator	&		5393649	0					
ANR	5394586	Identifier	cc		5393649	1					
ANR	5394587	BreakStatement	break ;	875:7:15777:15782	5393649	32	True				
ANR	5394588	Label	default :	877:5:15790:15797	5393649	33	True				
ANR	5394589	Identifier	default		5393649	0					
ANR	5394590	ExpressionStatement	"write_char ( c , & cc )"	878:7:15806:15825	5393649	34	True				
ANR	5394591	CallExpression	"write_char ( c , & cc )"		5393649	0					
ANR	5394592	Callee	write_char		5393649	0					
ANR	5394593	Identifier	write_char		5393649	0					
ANR	5394594	ArgumentList	c		5393649	1					
ANR	5394595	Argument	c		5393649	0					
ANR	5394596	Identifier	c		5393649	0					
ANR	5394597	Argument	& cc		5393649	1					
ANR	5394598	UnaryOperationExpression	& cc		5393649	0					
ANR	5394599	UnaryOperator	&		5393649	0					
ANR	5394600	Identifier	cc		5393649	1					
ANR	5394601	BreakStatement	break ;	879:7:15834:15839	5393649	35	True				
ANR	5394602	IfStatement	if ( cc . str )		5393649	6					
ANR	5394603	Condition	cc . str	884:6:15864:15869	5393649	0	True				
ANR	5394604	MemberAccess	cc . str		5393649	0					
ANR	5394605	Identifier	cc		5393649	0					
ANR	5394606	Identifier	str		5393649	1					
ANR	5394607	ExpressionStatement	* ( cc . str ) = '\\0'	885:4:15876:15892	5393649	1	True				
ANR	5394608	AssignmentExpression	* ( cc . str ) = '\\0'		5393649	0		=			
ANR	5394609	UnaryOperationExpression	* ( cc . str )		5393649	0					
ANR	5394610	UnaryOperator	*		5393649	0					
ANR	5394611	MemberAccess	cc . str		5393649	1					
ANR	5394612	Identifier	cc		5393649	0					
ANR	5394613	Identifier	str		5393649	1					
ANR	5394614	PrimaryExpression	'\\0'		5393649	1					
ANR	5394615	ReturnStatement	return cc . count ;	887:2:15897:15912	5393649	7	True				
ANR	5394616	MemberAccess	cc . count		5393649	0					
ANR	5394617	Identifier	cc		5393649	0					
ANR	5394618	Identifier	count		5393649	1					
ANR	5394619	ReturnType	static int		5393649	1					
ANR	5394620	Identifier	grub_vsnprintf_real		5393649	2					
ANR	5394621	ParameterList	"char * str , grub_size_t max_len , const char * fmt , va_list args"		5393649	3					
ANR	5394622	Parameter	char * str	668:21:11953:11961	5393649	0	True				
ANR	5394623	ParameterType	char *		5393649	0					
ANR	5394624	Identifier	str		5393649	1					
ANR	5394625	Parameter	grub_size_t max_len	668:32:11964:11982	5393649	1	True				
ANR	5394626	ParameterType	grub_size_t		5393649	0					
ANR	5394627	Identifier	max_len		5393649	1					
ANR	5394628	Parameter	const char * fmt	668:53:11985:11999	5393649	2	True				
ANR	5394629	ParameterType	const char *		5393649	0					
ANR	5394630	Identifier	fmt		5393649	1					
ANR	5394631	Parameter	va_list args	668:70:12002:12013	5393649	3	True				
ANR	5394632	ParameterType	va_list		5393649	0					
ANR	5394633	Identifier	args		5393649	1					
ANR	5394634	CFGEntryNode	ENTRY		5393649		True				
ANR	5394635	CFGExitNode	EXIT		5393649		True				
ANR	5394636	Symbol	ll		5393649						
ANR	5394637	Symbol	grub_strtoul		5393649						
ANR	5394638	Symbol	code		5393649						
ANR	5394639	Symbol	format2		5393649						
ANR	5394640	Symbol	format1		5393649						
ANR	5394641	Symbol	* cc		5393649						
ANR	5394642	Symbol	shift		5393649						
ANR	5394643	Symbol	longlongfmt		5393649						
ANR	5394644	Symbol	* fmt		5393649						
ANR	5394645	Symbol	& cc		5393649						
ANR	5394646	Symbol	fmt		5393649						
ANR	5394647	Symbol	cc . max_len		5393649						
ANR	5394648	Symbol	zerofill		5393649						
ANR	5394649	Symbol	* ( cc . str )		5393649						
ANR	5394650	Symbol	len		5393649						
ANR	5394651	Symbol	tmp		5393649						
ANR	5394652	Symbol	longfmt		5393649						
ANR	5394653	Symbol	grub_strlen		5393649						
ANR	5394654	Symbol	va_arg		5393649						
ANR	5394655	Symbol	rightfill		5393649						
ANR	5394656	Symbol	* cc . str		5393649						
ANR	5394657	Symbol	* fstr		5393649						
ANR	5394658	Symbol	mask		5393649						
ANR	5394659	Symbol	cc		5393649						
ANR	5394660	Symbol	c		5393649						
ANR	5394661	Symbol	* p ++		5393649						
ANR	5394662	Symbol	i		5393649						
ANR	5394663	Symbol	l		5393649						
ANR	5394664	Symbol	n		5393649						
ANR	5394665	Symbol	int		5393649						
ANR	5394666	Symbol	max_len		5393649						
ANR	5394667	Symbol	cc . str		5393649						
ANR	5394668	Symbol	str		5393649						
ANR	5394669	Symbol	args		5393649						
ANR	5394670	Symbol	p		5393649						
ANR	5394671	Symbol	s		5393649						
ANR	5394672	Symbol	* fmt ++		5393649						
ANR	5394673	Symbol	u		5393649						
ANR	5394674	Symbol	grub_uint32_t		5393649						
ANR	5394675	Symbol	cc . count		5393649						
ANR	5394676	Symbol	* p		5393649						
ANR	5394677	Symbol	fstr		5393649						
ANR	5394678	Symbol	unsig		5393649						
ANR	5394679	Symbol	* s		5393649						
ANR	5394680	Symbol	grub_isdigit		5393649						
ANR	5394681	Symbol	* len		5393649						
ANR	5394682	Function	grub_vsnprintf	890:0:15917:16123							
ANR	5394683	FunctionDef	"grub_vsnprintf (char * str , grub_size_t n , const char * fmt , va_list ap)"		5394682	0					
ANR	5394684	CompoundStatement		892:0:15992:16123	5394682	0					
ANR	5394685	IdentifierDeclStatement	grub_size_t ret ;	893:2:15996:16011	5394682	0	True				
ANR	5394686	IdentifierDecl	ret		5394682	0					
ANR	5394687	IdentifierDeclType	grub_size_t		5394682	0					
ANR	5394688	Identifier	ret		5394682	1					
ANR	5394689	IfStatement	if ( ! n )		5394682	1					
ANR	5394690	Condition	! n	895:6:16020:16021	5394682	0	True				
ANR	5394691	UnaryOperationExpression	! n		5394682	0					
ANR	5394692	UnaryOperator	!		5394682	0					
ANR	5394693	Identifier	n		5394682	1					
ANR	5394694	ReturnStatement	return 0 ;	896:4:16028:16036	5394682	1	True				
ANR	5394695	PrimaryExpression	0		5394682	0					
ANR	5394696	ExpressionStatement	n --	898:2:16041:16044	5394682	2	True				
ANR	5394697	PostIncDecOperationExpression	n --		5394682	0					
ANR	5394698	Identifier	n		5394682	0					
ANR	5394699	IncDec	--		5394682	1					
ANR	5394700	ExpressionStatement	"ret = grub_vsnprintf_real ( str , n , fmt , ap )"	900:2:16049:16092	5394682	3	True				
ANR	5394701	AssignmentExpression	"ret = grub_vsnprintf_real ( str , n , fmt , ap )"		5394682	0		=			
ANR	5394702	Identifier	ret		5394682	0					
ANR	5394703	CallExpression	"grub_vsnprintf_real ( str , n , fmt , ap )"		5394682	1					
ANR	5394704	Callee	grub_vsnprintf_real		5394682	0					
ANR	5394705	Identifier	grub_vsnprintf_real		5394682	0					
ANR	5394706	ArgumentList	str		5394682	1					
ANR	5394707	Argument	str		5394682	0					
ANR	5394708	Identifier	str		5394682	0					
ANR	5394709	Argument	n		5394682	1					
ANR	5394710	Identifier	n		5394682	0					
ANR	5394711	Argument	fmt		5394682	2					
ANR	5394712	Identifier	fmt		5394682	0					
ANR	5394713	Argument	ap		5394682	3					
ANR	5394714	Identifier	ap		5394682	0					
ANR	5394715	ReturnStatement	return ret < n ? ret : n ;	902:2:16097:16121	5394682	4	True				
ANR	5394716	ConditionalExpression	ret < n ? ret : n		5394682	0					
ANR	5394717	Condition	ret < n		5394682	0					
ANR	5394718	RelationalExpression	ret < n		5394682	0		<			
ANR	5394719	Identifier	ret		5394682	0					
ANR	5394720	Identifier	n		5394682	1					
ANR	5394721	Identifier	ret		5394682	1					
ANR	5394722	Identifier	n		5394682	2					
ANR	5394723	ReturnType	int		5394682	1					
ANR	5394724	Identifier	grub_vsnprintf		5394682	2					
ANR	5394725	ParameterList	"char * str , grub_size_t n , const char * fmt , va_list ap"		5394682	3					
ANR	5394726	Parameter	char * str	891:16:15937:15945	5394682	0	True				
ANR	5394727	ParameterType	char *		5394682	0					
ANR	5394728	Identifier	str		5394682	1					
ANR	5394729	Parameter	grub_size_t n	891:27:15948:15960	5394682	1	True				
ANR	5394730	ParameterType	grub_size_t		5394682	0					
ANR	5394731	Identifier	n		5394682	1					
ANR	5394732	Parameter	const char * fmt	891:42:15963:15977	5394682	2	True				
ANR	5394733	ParameterType	const char *		5394682	0					
ANR	5394734	Identifier	fmt		5394682	1					
ANR	5394735	Parameter	va_list ap	891:59:15980:15989	5394682	3	True				
ANR	5394736	ParameterType	va_list		5394682	0					
ANR	5394737	Identifier	ap		5394682	1					
ANR	5394738	CFGEntryNode	ENTRY		5394682		True				
ANR	5394739	CFGExitNode	EXIT		5394682		True				
ANR	5394740	Symbol	str		5394682						
ANR	5394741	Symbol	ret		5394682						
ANR	5394742	Symbol	grub_vsnprintf_real		5394682						
ANR	5394743	Symbol	fmt		5394682						
ANR	5394744	Symbol	n		5394682						
ANR	5394745	Symbol	ap		5394682						
ANR	5394746	Function	grub_snprintf	905:0:16126:16315							
ANR	5394747	FunctionDef	"grub_snprintf (char * str , grub_size_t n , const char * fmt)"		5394746	0					
ANR	5394748	CompoundStatement		907:0:16193:16315	5394746	0					
ANR	5394749	IdentifierDeclStatement	va_list ap ;	908:2:16197:16207	5394746	0	True				
ANR	5394750	IdentifierDecl	ap		5394746	0					
ANR	5394751	IdentifierDeclType	va_list		5394746	0					
ANR	5394752	Identifier	ap		5394746	1					
ANR	5394753	IdentifierDeclStatement	int ret ;	909:2:16211:16218	5394746	1	True				
ANR	5394754	IdentifierDecl	ret		5394746	0					
ANR	5394755	IdentifierDeclType	int		5394746	0					
ANR	5394756	Identifier	ret		5394746	1					
ANR	5394757	ExpressionStatement	"va_start ( ap , fmt )"	911:2:16223:16241	5394746	2	True				
ANR	5394758	CallExpression	"va_start ( ap , fmt )"		5394746	0					
ANR	5394759	Callee	va_start		5394746	0					
ANR	5394760	Identifier	va_start		5394746	0					
ANR	5394761	ArgumentList	ap		5394746	1					
ANR	5394762	Argument	ap		5394746	0					
ANR	5394763	Identifier	ap		5394746	0					
ANR	5394764	Argument	fmt		5394746	1					
ANR	5394765	Identifier	fmt		5394746	0					
ANR	5394766	ExpressionStatement	"ret = grub_vsnprintf ( str , n , fmt , ap )"	912:2:16245:16283	5394746	3	True				
ANR	5394767	AssignmentExpression	"ret = grub_vsnprintf ( str , n , fmt , ap )"		5394746	0		=			
ANR	5394768	Identifier	ret		5394746	0					
ANR	5394769	CallExpression	"grub_vsnprintf ( str , n , fmt , ap )"		5394746	1					
ANR	5394770	Callee	grub_vsnprintf		5394746	0					
ANR	5394771	Identifier	grub_vsnprintf		5394746	0					
ANR	5394772	ArgumentList	str		5394746	1					
ANR	5394773	Argument	str		5394746	0					
ANR	5394774	Identifier	str		5394746	0					
ANR	5394775	Argument	n		5394746	1					
ANR	5394776	Identifier	n		5394746	0					
ANR	5394777	Argument	fmt		5394746	2					
ANR	5394778	Identifier	fmt		5394746	0					
ANR	5394779	Argument	ap		5394746	3					
ANR	5394780	Identifier	ap		5394746	0					
ANR	5394781	ExpressionStatement	va_end ( ap )	913:2:16287:16298	5394746	4	True				
ANR	5394782	CallExpression	va_end ( ap )		5394746	0					
ANR	5394783	Callee	va_end		5394746	0					
ANR	5394784	Identifier	va_end		5394746	0					
ANR	5394785	ArgumentList	ap		5394746	1					
ANR	5394786	Argument	ap		5394746	0					
ANR	5394787	Identifier	ap		5394746	0					
ANR	5394788	ReturnStatement	return ret ;	915:2:16303:16313	5394746	5	True				
ANR	5394789	Identifier	ret		5394746	0					
ANR	5394790	ReturnType	int		5394746	1					
ANR	5394791	Identifier	grub_snprintf		5394746	2					
ANR	5394792	ParameterList	"char * str , grub_size_t n , const char * fmt"		5394746	3					
ANR	5394793	Parameter	char * str	906:15:16145:16153	5394746	0	True				
ANR	5394794	ParameterType	char *		5394746	0					
ANR	5394795	Identifier	str		5394746	1					
ANR	5394796	Parameter	grub_size_t n	906:26:16156:16168	5394746	1	True				
ANR	5394797	ParameterType	grub_size_t		5394746	0					
ANR	5394798	Identifier	n		5394746	1					
ANR	5394799	Parameter	const char * fmt	906:41:16171:16185	5394746	2	True				
ANR	5394800	ParameterType	const char *		5394746	0					
ANR	5394801	Identifier	fmt		5394746	1					
ANR	5394802	CFGEntryNode	ENTRY		5394746		True				
ANR	5394803	CFGExitNode	EXIT		5394746		True				
ANR	5394804	Symbol	str		5394746						
ANR	5394805	Symbol	ret		5394746						
ANR	5394806	Symbol	grub_vsnprintf		5394746						
ANR	5394807	Symbol	fmt		5394746						
ANR	5394808	Symbol	n		5394746						
ANR	5394809	Symbol	ap		5394746						
ANR	5394810	Function	grub_xvasprintf	920:0:16345:16660							
ANR	5394811	FunctionDef	"grub_xvasprintf (const char * fmt , va_list ap)"		5394810	0					
ANR	5394812	CompoundStatement		922:0:16398:16660	5394810	0					
ANR	5394813	IdentifierDeclStatement	"grub_size_t s , as = PREALLOC_SIZE ;"	923:2:16402:16435	5394810	0	True				
ANR	5394814	IdentifierDecl	s		5394810	0					
ANR	5394815	IdentifierDeclType	grub_size_t		5394810	0					
ANR	5394816	Identifier	s		5394810	1					
ANR	5394817	IdentifierDecl	as = PREALLOC_SIZE		5394810	1					
ANR	5394818	IdentifierDeclType	grub_size_t		5394810	0					
ANR	5394819	Identifier	as		5394810	1					
ANR	5394820	AssignmentExpression	as = PREALLOC_SIZE		5394810	2		=			
ANR	5394821	Identifier	PREALLOC_SIZE		5394810	0					
ANR	5394822	Identifier	PREALLOC_SIZE		5394810	1					
ANR	5394823	IdentifierDeclStatement	char * ret ;	924:2:16439:16448	5394810	1	True				
ANR	5394824	IdentifierDecl	* ret		5394810	0					
ANR	5394825	IdentifierDeclType	char *		5394810	0					
ANR	5394826	Identifier	ret		5394810	1					
ANR	5394827	WhileStatement	while ( 1 )		5394810	2					
ANR	5394828	Condition	1	926:9:16460:16460	5394810	0	True				
ANR	5394829	PrimaryExpression	1		5394810	0					
ANR	5394830	CompoundStatement		6:4:68:68	5394810	1					
ANR	5394831	ExpressionStatement	ret = grub_malloc ( as + 1 )	928:6:16475:16501	5394810	0	True				
ANR	5394832	AssignmentExpression	ret = grub_malloc ( as + 1 )		5394810	0		=			
ANR	5394833	Identifier	ret		5394810	0					
ANR	5394834	CallExpression	grub_malloc ( as + 1 )		5394810	1					
ANR	5394835	Callee	grub_malloc		5394810	0					
ANR	5394836	Identifier	grub_malloc		5394810	0					
ANR	5394837	ArgumentList	as + 1		5394810	1					
ANR	5394838	Argument	as + 1		5394810	0					
ANR	5394839	AdditiveExpression	as + 1		5394810	0		+			
ANR	5394840	Identifier	as		5394810	0					
ANR	5394841	PrimaryExpression	1		5394810	1					
ANR	5394842	IfStatement	if ( ! ret )		5394810	1					
ANR	5394843	Condition	! ret	929:10:16513:16516	5394810	0	True				
ANR	5394844	UnaryOperationExpression	! ret		5394810	0					
ANR	5394845	UnaryOperator	!		5394810	0					
ANR	5394846	Identifier	ret		5394810	1					
ANR	5394847	ReturnStatement	return NULL ;	930:1:16520:16531	5394810	1	True				
ANR	5394848	Identifier	NULL		5394810	0					
ANR	5394849	ExpressionStatement	"s = grub_vsnprintf_real ( ret , as , fmt , ap )"	932:6:16540:16582	5394810	2	True				
ANR	5394850	AssignmentExpression	"s = grub_vsnprintf_real ( ret , as , fmt , ap )"		5394810	0		=			
ANR	5394851	Identifier	s		5394810	0					
ANR	5394852	CallExpression	"grub_vsnprintf_real ( ret , as , fmt , ap )"		5394810	1					
ANR	5394853	Callee	grub_vsnprintf_real		5394810	0					
ANR	5394854	Identifier	grub_vsnprintf_real		5394810	0					
ANR	5394855	ArgumentList	ret		5394810	1					
ANR	5394856	Argument	ret		5394810	0					
ANR	5394857	Identifier	ret		5394810	0					
ANR	5394858	Argument	as		5394810	1					
ANR	5394859	Identifier	as		5394810	0					
ANR	5394860	Argument	fmt		5394810	2					
ANR	5394861	Identifier	fmt		5394810	0					
ANR	5394862	Argument	ap		5394810	3					
ANR	5394863	Identifier	ap		5394810	0					
ANR	5394864	IfStatement	if ( s <= as )		5394810	3					
ANR	5394865	Condition	s <= as	933:10:16594:16600	5394810	0	True				
ANR	5394866	RelationalExpression	s <= as		5394810	0		<=			
ANR	5394867	Identifier	s		5394810	0					
ANR	5394868	Identifier	as		5394810	1					
ANR	5394869	ReturnStatement	return ret ;	934:1:16604:16614	5394810	1	True				
ANR	5394870	Identifier	ret		5394810	0					
ANR	5394871	ExpressionStatement	grub_free ( ret )	936:6:16623:16638	5394810	4	True				
ANR	5394872	CallExpression	grub_free ( ret )		5394810	0					
ANR	5394873	Callee	grub_free		5394810	0					
ANR	5394874	Identifier	grub_free		5394810	0					
ANR	5394875	ArgumentList	ret		5394810	1					
ANR	5394876	Argument	ret		5394810	0					
ANR	5394877	Identifier	ret		5394810	0					
ANR	5394878	ExpressionStatement	as = s	937:6:16646:16652	5394810	5	True				
ANR	5394879	AssignmentExpression	as = s		5394810	0		=			
ANR	5394880	Identifier	as		5394810	0					
ANR	5394881	Identifier	s		5394810	1					
ANR	5394882	ReturnType	char *		5394810	1					
ANR	5394883	Identifier	grub_xvasprintf		5394810	2					
ANR	5394884	ParameterList	"const char * fmt , va_list ap"		5394810	3					
ANR	5394885	Parameter	const char * fmt	921:17:16369:16383	5394810	0	True				
ANR	5394886	ParameterType	const char *		5394810	0					
ANR	5394887	Identifier	fmt		5394810	1					
ANR	5394888	Parameter	va_list ap	921:34:16386:16395	5394810	1	True				
ANR	5394889	ParameterType	va_list		5394810	0					
ANR	5394890	Identifier	ap		5394810	1					
ANR	5394891	CFGEntryNode	ENTRY		5394810		True				
ANR	5394892	CFGExitNode	EXIT		5394810		True				
ANR	5394893	Symbol	ret		5394810						
ANR	5394894	Symbol	PREALLOC_SIZE		5394810						
ANR	5394895	Symbol	as		5394810						
ANR	5394896	Symbol	s		5394810						
ANR	5394897	Symbol	grub_malloc		5394810						
ANR	5394898	Symbol	NULL		5394810						
ANR	5394899	Symbol	grub_vsnprintf_real		5394810						
ANR	5394900	Symbol	fmt		5394810						
ANR	5394901	Symbol	ap		5394810						
ANR	5394902	Function	grub_xasprintf	941:0:16663:16825							
ANR	5394903	FunctionDef	grub_xasprintf (const char * fmt)		5394902	0					
ANR	5394904	CompoundStatement		943:0:16708:16825	5394902	0					
ANR	5394905	IdentifierDeclStatement	va_list ap ;	944:2:16712:16722	5394902	0	True				
ANR	5394906	IdentifierDecl	ap		5394902	0					
ANR	5394907	IdentifierDeclType	va_list		5394902	0					
ANR	5394908	Identifier	ap		5394902	1					
ANR	5394909	IdentifierDeclStatement	char * ret ;	945:2:16726:16735	5394902	1	True				
ANR	5394910	IdentifierDecl	* ret		5394902	0					
ANR	5394911	IdentifierDeclType	char *		5394902	0					
ANR	5394912	Identifier	ret		5394902	1					
ANR	5394913	ExpressionStatement	"va_start ( ap , fmt )"	947:2:16740:16758	5394902	2	True				
ANR	5394914	CallExpression	"va_start ( ap , fmt )"		5394902	0					
ANR	5394915	Callee	va_start		5394902	0					
ANR	5394916	Identifier	va_start		5394902	0					
ANR	5394917	ArgumentList	ap		5394902	1					
ANR	5394918	Argument	ap		5394902	0					
ANR	5394919	Identifier	ap		5394902	0					
ANR	5394920	Argument	fmt		5394902	1					
ANR	5394921	Identifier	fmt		5394902	0					
ANR	5394922	ExpressionStatement	"ret = grub_xvasprintf ( fmt , ap )"	948:2:16762:16793	5394902	3	True				
ANR	5394923	AssignmentExpression	"ret = grub_xvasprintf ( fmt , ap )"		5394902	0		=			
ANR	5394924	Identifier	ret		5394902	0					
ANR	5394925	CallExpression	"grub_xvasprintf ( fmt , ap )"		5394902	1					
ANR	5394926	Callee	grub_xvasprintf		5394902	0					
ANR	5394927	Identifier	grub_xvasprintf		5394902	0					
ANR	5394928	ArgumentList	fmt		5394902	1					
ANR	5394929	Argument	fmt		5394902	0					
ANR	5394930	Identifier	fmt		5394902	0					
ANR	5394931	Argument	ap		5394902	1					
ANR	5394932	Identifier	ap		5394902	0					
ANR	5394933	ExpressionStatement	va_end ( ap )	949:2:16797:16808	5394902	4	True				
ANR	5394934	CallExpression	va_end ( ap )		5394902	0					
ANR	5394935	Callee	va_end		5394902	0					
ANR	5394936	Identifier	va_end		5394902	0					
ANR	5394937	ArgumentList	ap		5394902	1					
ANR	5394938	Argument	ap		5394902	0					
ANR	5394939	Identifier	ap		5394902	0					
ANR	5394940	ReturnStatement	return ret ;	951:2:16813:16823	5394902	5	True				
ANR	5394941	Identifier	ret		5394902	0					
ANR	5394942	ReturnType	char *		5394902	1					
ANR	5394943	Identifier	grub_xasprintf		5394902	2					
ANR	5394944	ParameterList	const char * fmt		5394902	3					
ANR	5394945	Parameter	const char * fmt	942:16:16686:16700	5394902	0	True				
ANR	5394946	ParameterType	const char *		5394902	0					
ANR	5394947	Identifier	fmt		5394902	1					
ANR	5394948	CFGEntryNode	ENTRY		5394902		True				
ANR	5394949	CFGExitNode	EXIT		5394902		True				
ANR	5394950	Symbol	ret		5394902						
ANR	5394951	Symbol	grub_xvasprintf		5394902						
ANR	5394952	Symbol	fmt		5394902						
ANR	5394953	Symbol	ap		5394902						
ANR	5394954	Function	grub_utf8_to_ucs4	960:0:17180:18616							
ANR	5394955	FunctionDef	"grub_utf8_to_ucs4 (grub_uint32_t * dest , grub_size_t destsize , const grub_uint8_t * src , grub_size_t srcsize , const grub_uint8_t * * srcend)"		5394954	0					
ANR	5394956	CompoundStatement		964:0:17339:18616	5394954	0					
ANR	5394957	IdentifierDeclStatement	grub_uint32_t * p = dest ;	965:2:17343:17366	5394954	0	True				
ANR	5394958	IdentifierDecl	* p = dest		5394954	0					
ANR	5394959	IdentifierDeclType	grub_uint32_t *		5394954	0					
ANR	5394960	Identifier	p		5394954	1					
ANR	5394961	AssignmentExpression	* p = dest		5394954	2		=			
ANR	5394962	Identifier	dest		5394954	0					
ANR	5394963	Identifier	dest		5394954	1					
ANR	5394964	IdentifierDeclStatement	int count = 0 ;	966:2:17370:17383	5394954	1	True				
ANR	5394965	IdentifierDecl	count = 0		5394954	0					
ANR	5394966	IdentifierDeclType	int		5394954	0					
ANR	5394967	Identifier	count		5394954	1					
ANR	5394968	AssignmentExpression	count = 0		5394954	2		=			
ANR	5394969	Identifier	count		5394954	0					
ANR	5394970	PrimaryExpression	0		5394954	1					
ANR	5394971	IdentifierDeclStatement	grub_uint32_t code = 0 ;	967:2:17387:17409	5394954	2	True				
ANR	5394972	IdentifierDecl	code = 0		5394954	0					
ANR	5394973	IdentifierDeclType	grub_uint32_t		5394954	0					
ANR	5394974	Identifier	code		5394954	1					
ANR	5394975	AssignmentExpression	code = 0		5394954	2		=			
ANR	5394976	Identifier	code		5394954	0					
ANR	5394977	PrimaryExpression	0		5394954	1					
ANR	5394978	IfStatement	if ( srcend )		5394954	3					
ANR	5394979	Condition	srcend	969:6:17418:17423	5394954	0	True				
ANR	5394980	Identifier	srcend		5394954	0					
ANR	5394981	ExpressionStatement	* srcend = src	970:4:17430:17443	5394954	1	True				
ANR	5394982	AssignmentExpression	* srcend = src		5394954	0		=			
ANR	5394983	UnaryOperationExpression	* srcend		5394954	0					
ANR	5394984	UnaryOperator	*		5394954	0					
ANR	5394985	Identifier	srcend		5394954	1					
ANR	5394986	Identifier	src		5394954	1					
ANR	5394987	WhileStatement	while ( srcsize && destsize )		5394954	4					
ANR	5394988	Condition	srcsize && destsize	972:9:17455:17473	5394954	0	True				
ANR	5394989	AndExpression	srcsize && destsize		5394954	0		&&			
ANR	5394990	Identifier	srcsize		5394954	0					
ANR	5394991	Identifier	destsize		5394954	1					
ANR	5394992	CompoundStatement		11:6:148:172	5394954	1					
ANR	5394993	IdentifierDeclStatement	grub_uint32_t c = * src ++ ;	974:6:17488:17512	5394954	0	True				
ANR	5394994	IdentifierDecl	c = * src ++		5394954	0					
ANR	5394995	IdentifierDeclType	grub_uint32_t		5394954	0					
ANR	5394996	Identifier	c		5394954	1					
ANR	5394997	AssignmentExpression	c = * src ++		5394954	2		=			
ANR	5394998	Identifier	c		5394954	0					
ANR	5394999	UnaryOperationExpression	* src ++		5394954	1					
ANR	5395000	UnaryOperator	*		5394954	0					
ANR	5395001	PostIncDecOperationExpression	src ++		5394954	1					
ANR	5395002	Identifier	src		5394954	0					
ANR	5395003	IncDec	++		5394954	1					
ANR	5395004	IfStatement	if ( srcsize != ( grub_size_t ) - 1 )		5394954	1					
ANR	5395005	Condition	srcsize != ( grub_size_t ) - 1	975:10:17524:17549	5394954	0	True				
ANR	5395006	EqualityExpression	srcsize != ( grub_size_t ) - 1		5394954	0		!=			
ANR	5395007	Identifier	srcsize		5394954	0					
ANR	5395008	CastExpression	( grub_size_t ) - 1		5394954	1					
ANR	5395009	CastTarget	grub_size_t		5394954	0					
ANR	5395010	UnaryOperationExpression	- 1		5394954	1					
ANR	5395011	UnaryOperator	-		5394954	0					
ANR	5395012	PrimaryExpression	1		5394954	1					
ANR	5395013	ExpressionStatement	srcsize --	976:1:17553:17562	5394954	1	True				
ANR	5395014	PostIncDecOperationExpression	srcsize --		5394954	0					
ANR	5395015	Identifier	srcsize		5394954	0					
ANR	5395016	IncDec	--		5394954	1					
ANR	5395017	IfStatement	if ( count )		5394954	2					
ANR	5395018	Condition	count	977:10:17574:17578	5394954	0	True				
ANR	5395019	Identifier	count		5394954	0					
ANR	5395020	CompoundStatement		15:1:242:242	5394954	1					
ANR	5395021	IfStatement	if ( ( c & 0xc0 ) != 0x80 )		5394954	0					
ANR	5395022	Condition	( c & 0xc0 ) != 0x80	979:7:17591:17608	5394954	0	True				
ANR	5395023	EqualityExpression	( c & 0xc0 ) != 0x80		5394954	0		!=			
ANR	5395024	BitAndExpression	c & 0xc0		5394954	0		&			
ANR	5395025	Identifier	c		5394954	0					
ANR	5395026	PrimaryExpression	0xc0		5394954	1					
ANR	5395027	PrimaryExpression	0x80		5394954	1					
ANR	5395028	CompoundStatement		17:5:276:276	5394954	1					
ANR	5395029	ExpressionStatement	code = '?'	982:7:17646:17656	5394954	0	True				
ANR	5395030	AssignmentExpression	code = '?'		5394954	0		=			
ANR	5395031	Identifier	code		5394954	0					
ANR	5395032	PrimaryExpression	'?'		5394954	1					
ANR	5395033	ExpressionStatement	src --	984:7:17719:17724	5394954	1	True				
ANR	5395034	PostIncDecOperationExpression	src --		5394954	0					
ANR	5395035	Identifier	src		5394954	0					
ANR	5395036	IncDec	--		5394954	1					
ANR	5395037	IfStatement	if ( srcsize != ( grub_size_t ) - 1 )		5394954	2					
ANR	5395038	Condition	srcsize != ( grub_size_t ) - 1	985:11:17737:17762	5394954	0	True				
ANR	5395039	EqualityExpression	srcsize != ( grub_size_t ) - 1		5394954	0		!=			
ANR	5395040	Identifier	srcsize		5394954	0					
ANR	5395041	CastExpression	( grub_size_t ) - 1		5394954	1					
ANR	5395042	CastTarget	grub_size_t		5394954	0					
ANR	5395043	UnaryOperationExpression	- 1		5394954	1					
ANR	5395044	UnaryOperator	-		5394954	0					
ANR	5395045	PrimaryExpression	1		5394954	1					
ANR	5395046	ExpressionStatement	srcsize ++	986:2:17767:17776	5394954	1	True				
ANR	5395047	PostIncDecOperationExpression	srcsize ++		5394954	0					
ANR	5395048	Identifier	srcsize		5394954	0					
ANR	5395049	IncDec	++		5394954	1					
ANR	5395050	ExpressionStatement	count = 0	987:7:17785:17794	5394954	3	True				
ANR	5395051	AssignmentExpression	count = 0		5394954	0		=			
ANR	5395052	Identifier	count		5394954	0					
ANR	5395053	PrimaryExpression	0		5394954	1					
ANR	5395054	ElseStatement	else		5394954	0					
ANR	5395055	CompoundStatement		27:5:476:476	5394954	0					
ANR	5395056	ExpressionStatement	code <<= 6	991:7:17825:17835	5394954	0	True				
ANR	5395057	AssignmentExpression	code <<= 6		5394954	0		<<=			
ANR	5395058	Identifier	code		5394954	0					
ANR	5395059	PrimaryExpression	6		5394954	1					
ANR	5395060	ExpressionStatement	code |= ( c & 0x3f )	992:7:17844:17862	5394954	1	True				
ANR	5395061	AssignmentExpression	code |= ( c & 0x3f )		5394954	0		|=			
ANR	5395062	Identifier	code		5394954	0					
ANR	5395063	BitAndExpression	c & 0x3f		5394954	1		&			
ANR	5395064	Identifier	c		5394954	0					
ANR	5395065	PrimaryExpression	0x3f		5394954	1					
ANR	5395066	ExpressionStatement	count --	993:7:17871:17878	5394954	2	True				
ANR	5395067	PostIncDecOperationExpression	count --		5394954	0					
ANR	5395068	Identifier	count		5394954	0					
ANR	5395069	IncDec	--		5394954	1					
ANR	5395070	ElseStatement	else		5394954	0					
ANR	5395071	CompoundStatement		34:1:562:562	5394954	0					
ANR	5395072	IfStatement	if ( c == 0 )		5394954	0					
ANR	5395073	Condition	c == 0	998:7:17911:17916	5394954	0	True				
ANR	5395074	EqualityExpression	c == 0		5394954	0		==			
ANR	5395075	Identifier	c		5394954	0					
ANR	5395076	PrimaryExpression	0		5394954	1					
ANR	5395077	BreakStatement	break ;	999:5:17924:17929	5394954	1	True				
ANR	5395078	IfStatement	if ( ( c & 0x80 ) == 0x00 )		5394954	1					
ANR	5395079	Condition	( c & 0x80 ) == 0x00	1001:7:17939:17956	5394954	0	True				
ANR	5395080	EqualityExpression	( c & 0x80 ) == 0x00		5394954	0		==			
ANR	5395081	BitAndExpression	c & 0x80		5394954	0		&			
ANR	5395082	Identifier	c		5394954	0					
ANR	5395083	PrimaryExpression	0x80		5394954	1					
ANR	5395084	PrimaryExpression	0x00		5394954	1					
ANR	5395085	ExpressionStatement	code = c	1002:5:17964:17972	5394954	1	True				
ANR	5395086	AssignmentExpression	code = c		5394954	0		=			
ANR	5395087	Identifier	code		5394954	0					
ANR	5395088	Identifier	c		5394954	1					
ANR	5395089	ElseStatement	else		5394954	0					
ANR	5395090	IfStatement	if ( ( c & 0xe0 ) == 0xc0 )		5394954	0					
ANR	5395091	Condition	( c & 0xe0 ) == 0xc0	1003:12:17986:18003	5394954	0	True				
ANR	5395092	EqualityExpression	( c & 0xe0 ) == 0xc0		5394954	0		==			
ANR	5395093	BitAndExpression	c & 0xe0		5394954	0		&			
ANR	5395094	Identifier	c		5394954	0					
ANR	5395095	PrimaryExpression	0xe0		5394954	1					
ANR	5395096	PrimaryExpression	0xc0		5394954	1					
ANR	5395097	CompoundStatement		41:5:671:671	5394954	1					
ANR	5395098	ExpressionStatement	count = 1	1005:7:18020:18029	5394954	0	True				
ANR	5395099	AssignmentExpression	count = 1		5394954	0		=			
ANR	5395100	Identifier	count		5394954	0					
ANR	5395101	PrimaryExpression	1		5394954	1					
ANR	5395102	ExpressionStatement	code = c & 0x1f	1006:7:18038:18053	5394954	1	True				
ANR	5395103	AssignmentExpression	code = c & 0x1f		5394954	0		=			
ANR	5395104	Identifier	code		5394954	0					
ANR	5395105	BitAndExpression	c & 0x1f		5394954	1		&			
ANR	5395106	Identifier	c		5394954	0					
ANR	5395107	PrimaryExpression	0x1f		5394954	1					
ANR	5395108	ElseStatement	else		5394954	0					
ANR	5395109	IfStatement	if ( ( c & 0xf0 ) == 0xe0 )		5394954	0					
ANR	5395110	Condition	( c & 0xf0 ) == 0xe0	1008:12:18074:18091	5394954	0	True				
ANR	5395111	EqualityExpression	( c & 0xf0 ) == 0xe0		5394954	0		==			
ANR	5395112	BitAndExpression	c & 0xf0		5394954	0		&			
ANR	5395113	Identifier	c		5394954	0					
ANR	5395114	PrimaryExpression	0xf0		5394954	1					
ANR	5395115	PrimaryExpression	0xe0		5394954	1					
ANR	5395116	CompoundStatement		46:5:759:759	5394954	1					
ANR	5395117	ExpressionStatement	count = 2	1010:7:18108:18117	5394954	0	True				
ANR	5395118	AssignmentExpression	count = 2		5394954	0		=			
ANR	5395119	Identifier	count		5394954	0					
ANR	5395120	PrimaryExpression	2		5394954	1					
ANR	5395121	ExpressionStatement	code = c & 0x0f	1011:7:18126:18141	5394954	1	True				
ANR	5395122	AssignmentExpression	code = c & 0x0f		5394954	0		=			
ANR	5395123	Identifier	code		5394954	0					
ANR	5395124	BitAndExpression	c & 0x0f		5394954	1		&			
ANR	5395125	Identifier	c		5394954	0					
ANR	5395126	PrimaryExpression	0x0f		5394954	1					
ANR	5395127	ElseStatement	else		5394954	0					
ANR	5395128	IfStatement	if ( ( c & 0xf8 ) == 0xf0 )		5394954	0					
ANR	5395129	Condition	( c & 0xf8 ) == 0xf0	1013:12:18162:18179	5394954	0	True				
ANR	5395130	EqualityExpression	( c & 0xf8 ) == 0xf0		5394954	0		==			
ANR	5395131	BitAndExpression	c & 0xf8		5394954	0		&			
ANR	5395132	Identifier	c		5394954	0					
ANR	5395133	PrimaryExpression	0xf8		5394954	1					
ANR	5395134	PrimaryExpression	0xf0		5394954	1					
ANR	5395135	CompoundStatement		51:5:847:847	5394954	1					
ANR	5395136	ExpressionStatement	count = 3	1015:7:18196:18205	5394954	0	True				
ANR	5395137	AssignmentExpression	count = 3		5394954	0		=			
ANR	5395138	Identifier	count		5394954	0					
ANR	5395139	PrimaryExpression	3		5394954	1					
ANR	5395140	ExpressionStatement	code = c & 0x07	1016:7:18214:18229	5394954	1	True				
ANR	5395141	AssignmentExpression	code = c & 0x07		5394954	0		=			
ANR	5395142	Identifier	code		5394954	0					
ANR	5395143	BitAndExpression	c & 0x07		5394954	1		&			
ANR	5395144	Identifier	c		5394954	0					
ANR	5395145	PrimaryExpression	0x07		5394954	1					
ANR	5395146	ElseStatement	else		5394954	0					
ANR	5395147	IfStatement	if ( ( c & 0xfc ) == 0xf8 )		5394954	0					
ANR	5395148	Condition	( c & 0xfc ) == 0xf8	1018:12:18250:18267	5394954	0	True				
ANR	5395149	EqualityExpression	( c & 0xfc ) == 0xf8		5394954	0		==			
ANR	5395150	BitAndExpression	c & 0xfc		5394954	0		&			
ANR	5395151	Identifier	c		5394954	0					
ANR	5395152	PrimaryExpression	0xfc		5394954	1					
ANR	5395153	PrimaryExpression	0xf8		5394954	1					
ANR	5395154	CompoundStatement		56:5:935:935	5394954	1					
ANR	5395155	ExpressionStatement	count = 4	1020:7:18284:18293	5394954	0	True				
ANR	5395156	AssignmentExpression	count = 4		5394954	0		=			
ANR	5395157	Identifier	count		5394954	0					
ANR	5395158	PrimaryExpression	4		5394954	1					
ANR	5395159	ExpressionStatement	code = c & 0x03	1021:7:18302:18317	5394954	1	True				
ANR	5395160	AssignmentExpression	code = c & 0x03		5394954	0		=			
ANR	5395161	Identifier	code		5394954	0					
ANR	5395162	BitAndExpression	c & 0x03		5394954	1		&			
ANR	5395163	Identifier	c		5394954	0					
ANR	5395164	PrimaryExpression	0x03		5394954	1					
ANR	5395165	ElseStatement	else		5394954	0					
ANR	5395166	IfStatement	if ( ( c & 0xfe ) == 0xfc )		5394954	0					
ANR	5395167	Condition	( c & 0xfe ) == 0xfc	1023:12:18338:18355	5394954	0	True				
ANR	5395168	EqualityExpression	( c & 0xfe ) == 0xfc		5394954	0		==			
ANR	5395169	BitAndExpression	c & 0xfe		5394954	0		&			
ANR	5395170	Identifier	c		5394954	0					
ANR	5395171	PrimaryExpression	0xfe		5394954	1					
ANR	5395172	PrimaryExpression	0xfc		5394954	1					
ANR	5395173	CompoundStatement		61:5:1023:1023	5394954	1					
ANR	5395174	ExpressionStatement	count = 5	1025:7:18372:18381	5394954	0	True				
ANR	5395175	AssignmentExpression	count = 5		5394954	0		=			
ANR	5395176	Identifier	count		5394954	0					
ANR	5395177	PrimaryExpression	5		5394954	1					
ANR	5395178	ExpressionStatement	code = c & 0x01	1026:7:18390:18405	5394954	1	True				
ANR	5395179	AssignmentExpression	code = c & 0x01		5394954	0		=			
ANR	5395180	Identifier	code		5394954	0					
ANR	5395181	BitAndExpression	c & 0x01		5394954	1		&			
ANR	5395182	Identifier	c		5394954	0					
ANR	5395183	PrimaryExpression	0x01		5394954	1					
ANR	5395184	ElseStatement	else		5394954	0					
ANR	5395185	CompoundStatement		66:5:1087:1087	5394954	0					
ANR	5395186	ExpressionStatement	code = '?'	1031:7:18457:18467	5394954	0	True				
ANR	5395187	AssignmentExpression	code = '?'		5394954	0		=			
ANR	5395188	Identifier	code		5394954	0					
ANR	5395189	PrimaryExpression	'?'		5394954	1					
ANR	5395190	ExpressionStatement	count = 0	1032:7:18476:18485	5394954	1	True				
ANR	5395191	AssignmentExpression	count = 0		5394954	0		=			
ANR	5395192	Identifier	count		5394954	0					
ANR	5395193	PrimaryExpression	0		5394954	1					
ANR	5395194	IfStatement	if ( count == 0 )		5394954	3					
ANR	5395195	Condition	count == 0	1036:10:18508:18517	5394954	0	True				
ANR	5395196	EqualityExpression	count == 0		5394954	0		==			
ANR	5395197	Identifier	count		5394954	0					
ANR	5395198	PrimaryExpression	0		5394954	1					
ANR	5395199	CompoundStatement		74:1:1181:1181	5394954	1					
ANR	5395200	ExpressionStatement	* p ++ = code	1038:3:18526:18537	5394954	0	True				
ANR	5395201	AssignmentExpression	* p ++ = code		5394954	0		=			
ANR	5395202	UnaryOperationExpression	* p ++		5394954	0					
ANR	5395203	UnaryOperator	*		5394954	0					
ANR	5395204	PostIncDecOperationExpression	p ++		5394954	1					
ANR	5395205	Identifier	p		5394954	0					
ANR	5395206	IncDec	++		5394954	1					
ANR	5395207	Identifier	code		5394954	1					
ANR	5395208	ExpressionStatement	destsize --	1039:3:18542:18552	5394954	1	True				
ANR	5395209	PostIncDecOperationExpression	destsize --		5394954	0					
ANR	5395210	Identifier	destsize		5394954	0					
ANR	5395211	IncDec	--		5394954	1					
ANR	5395212	IfStatement	if ( srcend )		5394954	5					
ANR	5395213	Condition	srcend	1043:6:18570:18575	5394954	0	True				
ANR	5395214	Identifier	srcend		5394954	0					
ANR	5395215	ExpressionStatement	* srcend = src	1044:4:18582:18595	5394954	1	True				
ANR	5395216	AssignmentExpression	* srcend = src		5394954	0		=			
ANR	5395217	UnaryOperationExpression	* srcend		5394954	0					
ANR	5395218	UnaryOperator	*		5394954	0					
ANR	5395219	Identifier	srcend		5394954	1					
ANR	5395220	Identifier	src		5394954	1					
ANR	5395221	ReturnStatement	return p - dest ;	1045:2:18599:18614	5394954	6	True				
ANR	5395222	AdditiveExpression	p - dest		5394954	0		-			
ANR	5395223	Identifier	p		5394954	0					
ANR	5395224	Identifier	dest		5394954	1					
ANR	5395225	ReturnType	grub_size_t		5394954	1					
ANR	5395226	Identifier	grub_utf8_to_ucs4		5394954	2					
ANR	5395227	ParameterList	"grub_uint32_t * dest , grub_size_t destsize , const grub_uint8_t * src , grub_size_t srcsize , const grub_uint8_t * * srcend"		5394954	3					
ANR	5395228	Parameter	grub_uint32_t * dest	961:19:17211:17229	5394954	0	True				
ANR	5395229	ParameterType	grub_uint32_t *		5394954	0					
ANR	5395230	Identifier	dest		5394954	1					
ANR	5395231	Parameter	grub_size_t destsize	961:40:17232:17251	5394954	1	True				
ANR	5395232	ParameterType	grub_size_t		5394954	0					
ANR	5395233	Identifier	destsize		5394954	1					
ANR	5395234	Parameter	const grub_uint8_t * src	962:5:17259:17281	5394954	2	True				
ANR	5395235	ParameterType	const grub_uint8_t *		5394954	0					
ANR	5395236	Identifier	src		5394954	1					
ANR	5395237	Parameter	grub_size_t srcsize	962:30:17284:17302	5394954	3	True				
ANR	5395238	ParameterType	grub_size_t		5394954	0					
ANR	5395239	Identifier	srcsize		5394954	1					
ANR	5395240	Parameter	const grub_uint8_t * * srcend	963:5:17310:17336	5394954	4	True				
ANR	5395241	ParameterType	const grub_uint8_t * *		5394954	0					
ANR	5395242	Identifier	srcend		5394954	1					
ANR	5395243	CFGEntryNode	ENTRY		5394954		True				
ANR	5395244	CFGExitNode	EXIT		5394954		True				
ANR	5395245	Symbol	p		5394954						
ANR	5395246	Symbol	destsize		5394954						
ANR	5395247	Symbol	code		5394954						
ANR	5395248	Symbol	c		5394954						
ANR	5395249	Symbol	src		5394954						
ANR	5395250	Symbol	srcend		5394954						
ANR	5395251	Symbol	* srcend		5394954						
ANR	5395252	Symbol	* p ++		5394954						
ANR	5395253	Symbol	count		5394954						
ANR	5395254	Symbol	* src ++		5394954						
ANR	5395255	Symbol	srcsize		5394954						
ANR	5395256	Symbol	dest		5394954						
ANR	5395257	Function	grub_abort	1049:0:18669:18874							
ANR	5395258	FunctionDef	grub_abort ()		5395257	0					
ANR	5395259	CompoundStatement		1051:0:18692:18874	5395257	0					
ANR	5395260	ExpressionStatement	"grub_printf ( ""\\nAborted."" )"	1052:2:18696:18722	5395257	0	True				
ANR	5395261	CallExpression	"grub_printf ( ""\\nAborted."" )"		5395257	0					
ANR	5395262	Callee	grub_printf		5395257	0					
ANR	5395263	Identifier	grub_printf		5395257	0					
ANR	5395264	ArgumentList	"""\\nAborted."""		5395257	1					
ANR	5395265	Argument	"""\\nAborted."""		5395257	0					
ANR	5395266	PrimaryExpression	"""\\nAborted."""		5395257	0					
ANR	5395267	IfStatement	if ( grub_term_inputs )		5395257	1					
ANR	5395268	Condition	grub_term_inputs	1055:6:18749:18764	5395257	0	True				
ANR	5395269	Identifier	grub_term_inputs		5395257	0					
ANR	5395270	CompoundStatement		7:4:85:85	5395257	1					
ANR	5395271	ExpressionStatement	"grub_printf ( "" Press any key to exit."" )"	1058:6:18786:18825	5395257	0	True				
ANR	5395272	CallExpression	"grub_printf ( "" Press any key to exit."" )"		5395257	0					
ANR	5395273	Callee	grub_printf		5395257	0					
ANR	5395274	Identifier	grub_printf		5395257	0					
ANR	5395275	ArgumentList	""" Press any key to exit."""		5395257	1					
ANR	5395276	Argument	""" Press any key to exit."""		5395257	0					
ANR	5395277	PrimaryExpression	""" Press any key to exit."""		5395257	0					
ANR	5395278	ExpressionStatement	grub_getkey ( )	1059:6:18833:18847	5395257	1	True				
ANR	5395279	CallExpression	grub_getkey ( )		5395257	0					
ANR	5395280	Callee	grub_getkey		5395257	0					
ANR	5395281	Identifier	grub_getkey		5395257	0					
ANR	5395282	ArgumentList			5395257	1					
ANR	5395283	ReturnType	void		5395257	1					
ANR	5395284	Identifier	grub_abort		5395257	2					
ANR	5395285	ParameterList			5395257	3					
ANR	5395286	CFGEntryNode	ENTRY		5395257		True				
ANR	5395287	CFGExitNode	EXIT		5395257		True				
ANR	5395288	Symbol	grub_term_inputs		5395257						
ANR	5395289	Function	__register_frame_info	1074:0:19177:19213							
ANR	5395290	FunctionDef	__register_frame_info ()		5395289	0					
ANR	5395291	CompoundStatement		1075:0:19211:19213	5395289	0					
ANR	5395292	ReturnType	void		5395289	1					
ANR	5395293	Identifier	__register_frame_info		5395289	2					
ANR	5395294	ParameterList			5395289	3					
ANR	5395295	CFGEntryNode	ENTRY		5395289		True				
ANR	5395296	CFGExitNode	EXIT		5395289		True				
ANR	5395297	Function	__deregister_frame_info	1078:0:19216:19254							
ANR	5395298	FunctionDef	__deregister_frame_info ()		5395297	0					
ANR	5395299	CompoundStatement		1079:0:19252:19254	5395297	0					
ANR	5395300	ReturnType	void		5395297	1					
ANR	5395301	Identifier	__deregister_frame_info		5395297	2					
ANR	5395302	ParameterList			5395297	3					
ANR	5395303	CFGEntryNode	ENTRY		5395297		True				
ANR	5395304	CFGExitNode	EXIT		5395297		True				
