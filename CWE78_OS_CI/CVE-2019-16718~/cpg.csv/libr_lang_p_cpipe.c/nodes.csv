command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	4933789	File	data/converged/CVE-2019-16718~_radare2/libr_lang_p_cpipe.c								
ANR	4933790	Function	lang_cpipe_file	9:0:194:1218							
ANR	4933791	FunctionDef	"lang_cpipe_file (RLang * lang , const char * file)"		4933790	0					
ANR	4933792	CompoundStatement		9:58:252:1218	4933790	0					
ANR	4933793	IdentifierDeclStatement	"char * a , * cc , * p , name [ 512 ] ;"	10:1:255:282	4933790	0	True				
ANR	4933794	IdentifierDecl	* a		4933790	0					
ANR	4933795	IdentifierDeclType	char *		4933790	0					
ANR	4933796	Identifier	a		4933790	1					
ANR	4933797	IdentifierDecl	* cc		4933790	1					
ANR	4933798	IdentifierDeclType	char *		4933790	0					
ANR	4933799	Identifier	cc		4933790	1					
ANR	4933800	IdentifierDecl	* p		4933790	2					
ANR	4933801	IdentifierDeclType	char *		4933790	0					
ANR	4933802	Identifier	p		4933790	1					
ANR	4933803	IdentifierDecl	name [ 512 ]		4933790	3					
ANR	4933804	IdentifierDeclType	char [ 512 ]		4933790	0					
ANR	4933805	Identifier	name		4933790	1					
ANR	4933806	PrimaryExpression	512		4933790	2					
ANR	4933807	IdentifierDeclStatement	"const char * libpath , * libname ;"	11:1:285:314	4933790	1	True				
ANR	4933808	IdentifierDecl	* libpath		4933790	0					
ANR	4933809	IdentifierDeclType	const char *		4933790	0					
ANR	4933810	Identifier	libpath		4933790	1					
ANR	4933811	IdentifierDecl	* libname		4933790	1					
ANR	4933812	IdentifierDeclType	const char *		4933790	0					
ANR	4933813	Identifier	libname		4933790	1					
ANR	4933814	IfStatement	if ( strlen ( file ) > ( sizeof ( name ) - 10 ) )		4933790	2					
ANR	4933815	Condition	strlen ( file ) > ( sizeof ( name ) - 10 )	13:5:322:355	4933790	0	True				
ANR	4933816	RelationalExpression	strlen ( file ) > ( sizeof ( name ) - 10 )		4933790	0		>			
ANR	4933817	CallExpression	strlen ( file )		4933790	0					
ANR	4933818	Callee	strlen		4933790	0					
ANR	4933819	Identifier	strlen		4933790	0					
ANR	4933820	ArgumentList	file		4933790	1					
ANR	4933821	Argument	file		4933790	0					
ANR	4933822	Identifier	file		4933790	0					
ANR	4933823	AdditiveExpression	sizeof ( name ) - 10		4933790	1		-			
ANR	4933824	SizeofExpression	sizeof ( name )		4933790	0					
ANR	4933825	Sizeof	sizeof		4933790	0					
ANR	4933826	SizeofOperand	name		4933790	1					
ANR	4933827	PrimaryExpression	10		4933790	1					
ANR	4933828	ReturnStatement	return false ;	14:2:360:372	4933790	1	True				
ANR	4933829	Identifier	false		4933790	0					
ANR	4933830	IfStatement	"if ( ! strstr ( file , "".c"" ) )"		4933790	3					
ANR	4933831	Condition	"! strstr ( file , "".c"" )"	15:5:379:398	4933790	0	True				
ANR	4933832	UnaryOperationExpression	"! strstr ( file , "".c"" )"		4933790	0					
ANR	4933833	UnaryOperator	!		4933790	0					
ANR	4933834	CallExpression	"strstr ( file , "".c"" )"		4933790	1					
ANR	4933835	Callee	strstr		4933790	0					
ANR	4933836	Identifier	strstr		4933790	0					
ANR	4933837	ArgumentList	file		4933790	1					
ANR	4933838	Argument	file		4933790	0					
ANR	4933839	Identifier	file		4933790	0					
ANR	4933840	Argument	""".c"""		4933790	1					
ANR	4933841	PrimaryExpression	""".c"""		4933790	0					
ANR	4933842	ExpressionStatement	"sprintf ( name , ""%s.c"" , file )"	16:2:403:431	4933790	1	True				
ANR	4933843	CallExpression	"sprintf ( name , ""%s.c"" , file )"		4933790	0					
ANR	4933844	Callee	sprintf		4933790	0					
ANR	4933845	Identifier	sprintf		4933790	0					
ANR	4933846	ArgumentList	name		4933790	1					
ANR	4933847	Argument	name		4933790	0					
ANR	4933848	Identifier	name		4933790	0					
ANR	4933849	Argument	"""%s.c"""		4933790	1					
ANR	4933850	PrimaryExpression	"""%s.c"""		4933790	0					
ANR	4933851	Argument	file		4933790	2					
ANR	4933852	Identifier	file		4933790	0					
ANR	4933853	ElseStatement	else		4933790	0					
ANR	4933854	ExpressionStatement	"strcpy ( name , file )"	17:6:439:458	4933790	0	True				
ANR	4933855	CallExpression	"strcpy ( name , file )"		4933790	0					
ANR	4933856	Callee	strcpy		4933790	0					
ANR	4933857	Identifier	strcpy		4933790	0					
ANR	4933858	ArgumentList	name		4933790	1					
ANR	4933859	Argument	name		4933790	0					
ANR	4933860	Identifier	name		4933790	0					
ANR	4933861	Argument	file		4933790	1					
ANR	4933862	Identifier	file		4933790	0					
ANR	4933863	IfStatement	if ( ! r_file_exists ( name ) )		4933790	4					
ANR	4933864	Condition	! r_file_exists ( name )	18:5:465:485	4933790	0	True				
ANR	4933865	UnaryOperationExpression	! r_file_exists ( name )		4933790	0					
ANR	4933866	UnaryOperator	!		4933790	0					
ANR	4933867	CallExpression	r_file_exists ( name )		4933790	1					
ANR	4933868	Callee	r_file_exists		4933790	0					
ANR	4933869	Identifier	r_file_exists		4933790	0					
ANR	4933870	ArgumentList	name		4933790	1					
ANR	4933871	Argument	name		4933790	0					
ANR	4933872	Identifier	name		4933790	0					
ANR	4933873	CompoundStatement		10:28:235:235	4933790	1					
ANR	4933874	ExpressionStatement	"eprintf ( ""file not found (%s)\\n"" , name )"	19:2:492:531	4933790	0	True				
ANR	4933875	CallExpression	"eprintf ( ""file not found (%s)\\n"" , name )"		4933790	0					
ANR	4933876	Callee	eprintf		4933790	0					
ANR	4933877	Identifier	eprintf		4933790	0					
ANR	4933878	ArgumentList	"""file not found (%s)\\n"""		4933790	1					
ANR	4933879	Argument	"""file not found (%s)\\n"""		4933790	0					
ANR	4933880	PrimaryExpression	"""file not found (%s)\\n"""		4933790	0					
ANR	4933881	Argument	name		4933790	1					
ANR	4933882	Identifier	name		4933790	0					
ANR	4933883	ReturnStatement	return false ;	20:2:535:547	4933790	1	True				
ANR	4933884	Identifier	false		4933790	0					
ANR	4933885	ExpressionStatement	"a = ( char * ) r_str_lchr ( name , '/' )"	23:1:554:587	4933790	5	True				
ANR	4933886	AssignmentExpression	"a = ( char * ) r_str_lchr ( name , '/' )"		4933790	0		=			
ANR	4933887	Identifier	a		4933790	0					
ANR	4933888	CastExpression	"( char * ) r_str_lchr ( name , '/' )"		4933790	1					
ANR	4933889	CastTarget	char *		4933790	0					
ANR	4933890	CallExpression	"r_str_lchr ( name , '/' )"		4933790	1					
ANR	4933891	Callee	r_str_lchr		4933790	0					
ANR	4933892	Identifier	r_str_lchr		4933790	0					
ANR	4933893	ArgumentList	name		4933790	1					
ANR	4933894	Argument	name		4933790	0					
ANR	4933895	Identifier	name		4933790	0					
ANR	4933896	Argument	'/'		4933790	1					
ANR	4933897	PrimaryExpression	'/'		4933790	0					
ANR	4933898	IfStatement	if ( a )		4933790	6					
ANR	4933899	Condition	a	24:5:594:594	4933790	0	True				
ANR	4933900	Identifier	a		4933790	0					
ANR	4933901	CompoundStatement		16:8:344:344	4933790	1					
ANR	4933902	ExpressionStatement	* a = 0	25:2:601:607	4933790	0	True				
ANR	4933903	AssignmentExpression	* a = 0		4933790	0		=			
ANR	4933904	UnaryOperationExpression	* a		4933790	0					
ANR	4933905	UnaryOperator	*		4933790	0					
ANR	4933906	Identifier	a		4933790	1					
ANR	4933907	PrimaryExpression	0		4933790	1					
ANR	4933908	ExpressionStatement	libpath = name	26:2:611:625	4933790	1	True				
ANR	4933909	AssignmentExpression	libpath = name		4933790	0		=			
ANR	4933910	Identifier	libpath		4933790	0					
ANR	4933911	Identifier	name		4933790	1					
ANR	4933912	ExpressionStatement	libname = a + 1	27:2:629:644	4933790	2	True				
ANR	4933913	AssignmentExpression	libname = a + 1		4933790	0		=			
ANR	4933914	Identifier	libname		4933790	0					
ANR	4933915	AdditiveExpression	a + 1		4933790	1		+			
ANR	4933916	Identifier	a		4933790	0					
ANR	4933917	PrimaryExpression	1		4933790	1					
ANR	4933918	ElseStatement	else		4933790	0					
ANR	4933919	CompoundStatement		20:8:401:401	4933790	0					
ANR	4933920	ExpressionStatement	"libpath = ""."""	29:2:658:671	4933790	0	True				
ANR	4933921	AssignmentExpression	"libpath = ""."""		4933790	0		=			
ANR	4933922	Identifier	libpath		4933790	0					
ANR	4933923	PrimaryExpression	"""."""		4933790	1					
ANR	4933924	ExpressionStatement	libname = name	30:2:675:689	4933790	1	True				
ANR	4933925	AssignmentExpression	libname = name		4933790	0		=			
ANR	4933926	Identifier	libname		4933790	0					
ANR	4933927	Identifier	name		4933790	1					
ANR	4933928	Statement	r_sys_setenv	32:1:695:706	4933790	7	True				
ANR	4933929	Statement	(	32:14:708:708	4933790	8	True				
ANR	4933930	Statement	"""PKG_CONFIG_PATH"""	32:15:709:725	4933790	9	True				
ANR	4933931	Statement	","	32:32:726:726	4933790	10	True				
ANR	4933932	Statement	R2_LIBDIR	32:34:728:736	4933790	11	True				
ANR	4933933	Statement	"""/pkgconfig"""	32:43:737:748	4933790	12	True				
ANR	4933934	Statement	)	32:55:749:749	4933790	13	True				
ANR	4933935	ExpressionStatement		32:56:750:750	4933790	14	True				
ANR	4933936	ExpressionStatement	"p = strstr ( name , "".c"" )"	33:1:753:776	4933790	15	True				
ANR	4933937	AssignmentExpression	"p = strstr ( name , "".c"" )"		4933790	0		=			
ANR	4933938	Identifier	p		4933790	0					
ANR	4933939	CallExpression	"strstr ( name , "".c"" )"		4933790	1					
ANR	4933940	Callee	strstr		4933790	0					
ANR	4933941	Identifier	strstr		4933790	0					
ANR	4933942	ArgumentList	name		4933790	1					
ANR	4933943	Argument	name		4933790	0					
ANR	4933944	Identifier	name		4933790	0					
ANR	4933945	Argument	""".c"""		4933790	1					
ANR	4933946	PrimaryExpression	""".c"""		4933790	0					
ANR	4933947	IfStatement	if ( p )		4933790	16					
ANR	4933948	Condition	p	34:5:783:783	4933790	0	True				
ANR	4933949	Identifier	p		4933790	0					
ANR	4933950	ExpressionStatement	* p = 0	34:8:786:792	4933790	1	True				
ANR	4933951	AssignmentExpression	* p = 0		4933790	0		=			
ANR	4933952	UnaryOperationExpression	* p		4933790	0					
ANR	4933953	UnaryOperator	*		4933790	0					
ANR	4933954	Identifier	p		4933790	1					
ANR	4933955	PrimaryExpression	0		4933790	1					
ANR	4933956	ExpressionStatement	"cc = r_sys_getenv ( ""CC"" )"	35:1:795:819	4933790	17	True				
ANR	4933957	AssignmentExpression	"cc = r_sys_getenv ( ""CC"" )"		4933790	0		=			
ANR	4933958	Identifier	cc		4933790	0					
ANR	4933959	CallExpression	"r_sys_getenv ( ""CC"" )"		4933790	1					
ANR	4933960	Callee	r_sys_getenv		4933790	0					
ANR	4933961	Identifier	r_sys_getenv		4933790	0					
ANR	4933962	ArgumentList	"""CC"""		4933790	1					
ANR	4933963	Argument	"""CC"""		4933790	0					
ANR	4933964	PrimaryExpression	"""CC"""		4933790	0					
ANR	4933965	IfStatement	if ( ! cc || ! * cc )		4933790	18					
ANR	4933966	Condition	! cc || ! * cc	36:5:826:836	4933790	0	True				
ANR	4933967	OrExpression	! cc || ! * cc		4933790	0		||			
ANR	4933968	UnaryOperationExpression	! cc		4933790	0					
ANR	4933969	UnaryOperator	!		4933790	0					
ANR	4933970	Identifier	cc		4933790	1					
ANR	4933971	UnaryOperationExpression	! * cc		4933790	1					
ANR	4933972	UnaryOperator	!		4933790	0					
ANR	4933973	UnaryOperationExpression	* cc		4933790	1					
ANR	4933974	UnaryOperator	*		4933790	0					
ANR	4933975	Identifier	cc		4933790	1					
ANR	4933976	CompoundStatement		28:18:586:586	4933790	1					
ANR	4933977	ExpressionStatement	free ( cc )	37:2:843:852	4933790	0	True				
ANR	4933978	CallExpression	free ( cc )		4933790	0					
ANR	4933979	Callee	free		4933790	0					
ANR	4933980	Identifier	free		4933790	0					
ANR	4933981	ArgumentList	cc		4933790	1					
ANR	4933982	Argument	cc		4933790	0					
ANR	4933983	Identifier	cc		4933790	0					
ANR	4933984	ExpressionStatement	"cc = strdup ( ""gcc"" )"	38:2:856:875	4933790	1	True				
ANR	4933985	AssignmentExpression	"cc = strdup ( ""gcc"" )"		4933790	0		=			
ANR	4933986	Identifier	cc		4933790	0					
ANR	4933987	CallExpression	"strdup ( ""gcc"" )"		4933790	1					
ANR	4933988	Callee	strdup		4933790	0					
ANR	4933989	Identifier	strdup		4933790	0					
ANR	4933990	ArgumentList	"""gcc"""		4933790	1					
ANR	4933991	Argument	"""gcc"""		4933790	0					
ANR	4933992	PrimaryExpression	"""gcc"""		4933790	0					
ANR	4933993	Statement	char	40:1:881:884	4933790	19	True				
ANR	4933994	Statement	*	40:6:886:886	4933790	20	True				
ANR	4933995	Statement	buf	40:7:887:889	4933790	21	True				
ANR	4933996	Statement	=	40:11:891:891	4933790	22	True				
ANR	4933997	Statement	r_str_newf	40:13:893:902	4933790	23	True				
ANR	4933998	Statement	(	40:24:904:904	4933790	24	True				
ANR	4933999	Statement	"""%s %s -o %s/bin%s"""	40:25:905:923	4933790	25	True				
ANR	4934000	Statement	""" $(pkg-config --cflags --libs r_socket)"""	41:2:927:967	4933790	26	True				
ANR	4934001	Statement	","	41:43:968:968	4933790	27	True				
ANR	4934002	Statement	cc	42:2:972:973	4933790	28	True				
ANR	4934003	Statement	","	42:4:974:974	4933790	29	True				
ANR	4934004	Statement	file	42:6:976:979	4933790	30	True				
ANR	4934005	Statement	","	42:10:980:980	4933790	31	True				
ANR	4934006	Statement	libpath	42:12:982:988	4933790	32	True				
ANR	4934007	Statement	","	42:19:989:989	4933790	33	True				
ANR	4934008	Statement	libname	42:21:991:997	4933790	34	True				
ANR	4934009	Statement	)	42:28:998:998	4933790	35	True				
ANR	4934010	ExpressionStatement		42:29:999:999	4933790	36	True				
ANR	4934011	ExpressionStatement	free ( cc )	43:1:1002:1011	4933790	37	True				
ANR	4934012	CallExpression	free ( cc )		4933790	0					
ANR	4934013	Callee	free		4933790	0					
ANR	4934014	Identifier	free		4933790	0					
ANR	4934015	ArgumentList	cc		4933790	1					
ANR	4934016	Argument	cc		4933790	0					
ANR	4934017	Identifier	cc		4933790	0					
ANR	4934018	IfStatement	"if ( r_sandbox_system ( buf , 1 ) == 0 )"		4933790	38					
ANR	4934019	Condition	"r_sandbox_system ( buf , 1 ) == 0"	44:5:1018:1047	4933790	0	True				
ANR	4934020	EqualityExpression	"r_sandbox_system ( buf , 1 ) == 0"		4933790	0		==			
ANR	4934021	CallExpression	"r_sandbox_system ( buf , 1 )"		4933790	0					
ANR	4934022	Callee	r_sandbox_system		4933790	0					
ANR	4934023	Identifier	r_sandbox_system		4933790	0					
ANR	4934024	ArgumentList	buf		4933790	1					
ANR	4934025	Argument	buf		4933790	0					
ANR	4934026	Identifier	buf		4933790	0					
ANR	4934027	Argument	1		4933790	1					
ANR	4934028	PrimaryExpression	1		4933790	0					
ANR	4934029	PrimaryExpression	0		4933790	1					
ANR	4934030	CompoundStatement		37:2:801:858	4933790	1					
ANR	4934031	IdentifierDeclStatement	"char * binfile = r_str_newf ( ""%s/bin%s"" , libpath , libname ) ;"	45:2:1054:1111	4933790	0	True				
ANR	4934032	IdentifierDecl	"* binfile = r_str_newf ( ""%s/bin%s"" , libpath , libname )"		4933790	0					
ANR	4934033	IdentifierDeclType	char *		4933790	0					
ANR	4934034	Identifier	binfile		4933790	1					
ANR	4934035	AssignmentExpression	"* binfile = r_str_newf ( ""%s/bin%s"" , libpath , libname )"		4933790	2		=			
ANR	4934036	Identifier	binfile		4933790	0					
ANR	4934037	CallExpression	"r_str_newf ( ""%s/bin%s"" , libpath , libname )"		4933790	1					
ANR	4934038	Callee	r_str_newf		4933790	0					
ANR	4934039	Identifier	r_str_newf		4933790	0					
ANR	4934040	ArgumentList	"""%s/bin%s"""		4933790	1					
ANR	4934041	Argument	"""%s/bin%s"""		4933790	0					
ANR	4934042	PrimaryExpression	"""%s/bin%s"""		4933790	0					
ANR	4934043	Argument	libpath		4933790	1					
ANR	4934044	Identifier	libpath		4933790	0					
ANR	4934045	Argument	libname		4933790	2					
ANR	4934046	Identifier	libname		4933790	0					
ANR	4934047	ExpressionStatement	"lang_pipe_run ( lang , binfile , - 1 )"	46:2:1115:1148	4933790	1	True				
ANR	4934048	CallExpression	"lang_pipe_run ( lang , binfile , - 1 )"		4933790	0					
ANR	4934049	Callee	lang_pipe_run		4933790	0					
ANR	4934050	Identifier	lang_pipe_run		4933790	0					
ANR	4934051	ArgumentList	lang		4933790	1					
ANR	4934052	Argument	lang		4933790	0					
ANR	4934053	Identifier	lang		4933790	0					
ANR	4934054	Argument	binfile		4933790	1					
ANR	4934055	Identifier	binfile		4933790	0					
ANR	4934056	Argument	- 1		4933790	2					
ANR	4934057	UnaryOperationExpression	- 1		4933790	0					
ANR	4934058	UnaryOperator	-		4933790	0					
ANR	4934059	PrimaryExpression	1		4933790	1					
ANR	4934060	ExpressionStatement	r_file_rm ( binfile )	47:2:1152:1171	4933790	2	True				
ANR	4934061	CallExpression	r_file_rm ( binfile )		4933790	0					
ANR	4934062	Callee	r_file_rm		4933790	0					
ANR	4934063	Identifier	r_file_rm		4933790	0					
ANR	4934064	ArgumentList	binfile		4933790	1					
ANR	4934065	Argument	binfile		4933790	0					
ANR	4934066	Identifier	binfile		4933790	0					
ANR	4934067	ExpressionStatement	free ( binfile )	48:2:1175:1189	4933790	3	True				
ANR	4934068	CallExpression	free ( binfile )		4933790	0					
ANR	4934069	Callee	free		4933790	0					
ANR	4934070	Identifier	free		4933790	0					
ANR	4934071	ArgumentList	binfile		4933790	1					
ANR	4934072	Argument	binfile		4933790	0					
ANR	4934073	Identifier	binfile		4933790	0					
ANR	4934074	ExpressionStatement	free ( buf )	50:1:1195:1205	4933790	39	True				
ANR	4934075	CallExpression	free ( buf )		4933790	0					
ANR	4934076	Callee	free		4933790	0					
ANR	4934077	Identifier	free		4933790	0					
ANR	4934078	ArgumentList	buf		4933790	1					
ANR	4934079	Argument	buf		4933790	0					
ANR	4934080	Identifier	buf		4933790	0					
ANR	4934081	ReturnStatement	return 0 ;	51:1:1208:1216	4933790	40	True				
ANR	4934082	PrimaryExpression	0		4933790	0					
ANR	4934083	ReturnType	static int		4933790	1					
ANR	4934084	Identifier	lang_cpipe_file		4933790	2					
ANR	4934085	ParameterList	"RLang * lang , const char * file"		4933790	3					
ANR	4934086	Parameter	RLang * lang	9:27:221:231	4933790	0	True				
ANR	4934087	ParameterType	RLang *		4933790	0					
ANR	4934088	Identifier	lang		4933790	1					
ANR	4934089	Parameter	const char * file	9:40:234:249	4933790	1	True				
ANR	4934090	ParameterType	const char *		4933790	0					
ANR	4934091	Identifier	file		4933790	1					
ANR	4934092	CFGEntryNode	ENTRY		4933790		True				
ANR	4934093	CFGExitNode	EXIT		4933790		True				
ANR	4934094	Symbol	cc		4933790						
ANR	4934095	Symbol	a		4933790						
ANR	4934096	Symbol	r_sandbox_system		4933790						
ANR	4934097	Symbol	* cc		4933790						
ANR	4934098	Symbol	r_sys_getenv		4933790						
ANR	4934099	Symbol	false		4933790						
ANR	4934100	Symbol	* a		4933790						
ANR	4934101	Symbol	r_str_newf		4933790						
ANR	4934102	Symbol	libpath		4933790						
ANR	4934103	Symbol	binfile		4933790						
ANR	4934104	Symbol	p		4933790						
ANR	4934105	Symbol	strlen		4933790						
ANR	4934106	Symbol	buf		4933790						
ANR	4934107	Symbol	file		4933790						
ANR	4934108	Symbol	strstr		4933790						
ANR	4934109	Symbol	r_str_lchr		4933790						
ANR	4934110	Symbol	libname		4933790						
ANR	4934111	Symbol	name		4933790						
ANR	4934112	Symbol	* p		4933790						
ANR	4934113	Symbol	strdup		4933790						
ANR	4934114	Symbol	lang		4933790						
ANR	4934115	Symbol	r_file_exists		4933790						
ANR	4934116	Function	lang_cpipe_init	54:0:1221:1320							
ANR	4934117	FunctionDef	lang_cpipe_init (void * user)		4934116	0					
ANR	4934118	CompoundStatement		54:39:1260:1320	4934116	0					
ANR	4934119	ReturnStatement	return true ;	56:1:1307:1318	4934116	0	True				
ANR	4934120	Identifier	true		4934116	0					
ANR	4934121	ReturnType	static int		4934116	1					
ANR	4934122	Identifier	lang_cpipe_init		4934116	2					
ANR	4934123	ParameterList	void * user		4934116	3					
ANR	4934124	Parameter	void * user	54:27:1248:1257	4934116	0	True				
ANR	4934125	ParameterType	void *		4934116	0					
ANR	4934126	Identifier	user		4934116	1					
ANR	4934127	CFGEntryNode	ENTRY		4934116		True				
ANR	4934128	CFGExitNode	EXIT		4934116		True				
ANR	4934129	Symbol	true		4934116						
ANR	4934130	Symbol	user		4934116						
ANR	4934131	Function	lang_cpipe_run	59:0:1323:1778							
ANR	4934132	FunctionDef	"lang_cpipe_run (RLang * lang , const char * code , int len)"		4934131	0					
ANR	4934133	CompoundStatement		59:66:1389:1778	4934131	0					
ANR	4934134	IdentifierDeclStatement	"FILE * fd = r_sandbox_fopen ( "".tmp.c"" , ""w"" ) ;"	60:1:1392:1434	4934131	0	True				
ANR	4934135	IdentifierDecl	"* fd = r_sandbox_fopen ( "".tmp.c"" , ""w"" )"		4934131	0					
ANR	4934136	IdentifierDeclType	FILE *		4934131	0					
ANR	4934137	Identifier	fd		4934131	1					
ANR	4934138	AssignmentExpression	"* fd = r_sandbox_fopen ( "".tmp.c"" , ""w"" )"		4934131	2		=			
ANR	4934139	Identifier	fd		4934131	0					
ANR	4934140	CallExpression	"r_sandbox_fopen ( "".tmp.c"" , ""w"" )"		4934131	1					
ANR	4934141	Callee	r_sandbox_fopen		4934131	0					
ANR	4934142	Identifier	r_sandbox_fopen		4934131	0					
ANR	4934143	ArgumentList	""".tmp.c"""		4934131	1					
ANR	4934144	Argument	""".tmp.c"""		4934131	0					
ANR	4934145	PrimaryExpression	""".tmp.c"""		4934131	0					
ANR	4934146	Argument	"""w"""		4934131	1					
ANR	4934147	PrimaryExpression	"""w"""		4934131	0					
ANR	4934148	IfStatement	if ( fd )		4934131	1					
ANR	4934149	Condition	fd	61:5:1441:1442	4934131	0	True				
ANR	4934150	Identifier	fd		4934131	0					
ANR	4934151	CompoundStatement		3:9:55:55	4934131	1					
ANR	4934152	ExpressionStatement	"eprintf ( ""Cannot open .tmp.c\\n"" )"	62:2:1449:1481	4934131	0	True				
ANR	4934153	CallExpression	"eprintf ( ""Cannot open .tmp.c\\n"" )"		4934131	0					
ANR	4934154	Callee	eprintf		4934131	0					
ANR	4934155	Identifier	eprintf		4934131	0					
ANR	4934156	ArgumentList	"""Cannot open .tmp.c\\n"""		4934131	1					
ANR	4934157	Argument	"""Cannot open .tmp.c\\n"""		4934131	0					
ANR	4934158	PrimaryExpression	"""Cannot open .tmp.c\\n"""		4934131	0					
ANR	4934159	ReturnStatement	return false ;	63:2:1485:1497	4934131	1	True				
ANR	4934160	Identifier	false		4934131	0					
ANR	4934161	Statement	fputs	65:1:1503:1507	4934131	2	True				
ANR	4934162	Statement	(	65:7:1509:1509	4934131	3	True				
ANR	4934163	Statement	"""#include <r_socket.h>\\n\\n"""	65:8:1510:1536	4934131	4	True				
ANR	4934164	Statement	"""#define R2P(x,y...) r2pipe_cmdf(r2p,x,##y)\\n"""	66:2:1540:1585	4934131	5	True				
ANR	4934165	Statement	"""int main() {\\n"""	67:2:1589:1604	4934131	6	True				
ANR	4934166	Statement	"""  R2Pipe *r2p = r2pipe_open(NULL);"""	68:2:1608:1643	4934131	7	True				
ANR	4934167	Statement	","	68:38:1644:1644	4934131	8	True				
ANR	4934168	Statement	fd	68:40:1646:1647	4934131	9	True				
ANR	4934169	Statement	)	68:42:1648:1648	4934131	10	True				
ANR	4934170	ExpressionStatement		68:43:1649:1649	4934131	11	True				
ANR	4934171	ExpressionStatement	"fputs ( code , fd )"	69:1:1652:1668	4934131	12	True				
ANR	4934172	CallExpression	"fputs ( code , fd )"		4934131	0					
ANR	4934173	Callee	fputs		4934131	0					
ANR	4934174	Identifier	fputs		4934131	0					
ANR	4934175	ArgumentList	code		4934131	1					
ANR	4934176	Argument	code		4934131	0					
ANR	4934177	Identifier	code		4934131	0					
ANR	4934178	Argument	fd		4934131	1					
ANR	4934179	Identifier	fd		4934131	0					
ANR	4934180	ExpressionStatement	"fputs ( ""\\n}\\n"" , fd )"	70:1:1671:1690	4934131	13	True				
ANR	4934181	CallExpression	"fputs ( ""\\n}\\n"" , fd )"		4934131	0					
ANR	4934182	Callee	fputs		4934131	0					
ANR	4934183	Identifier	fputs		4934131	0					
ANR	4934184	ArgumentList	"""\\n}\\n"""		4934131	1					
ANR	4934185	Argument	"""\\n}\\n"""		4934131	0					
ANR	4934186	PrimaryExpression	"""\\n}\\n"""		4934131	0					
ANR	4934187	Argument	fd		4934131	1					
ANR	4934188	Identifier	fd		4934131	0					
ANR	4934189	ExpressionStatement	fclose ( fd )	71:1:1693:1704	4934131	14	True				
ANR	4934190	CallExpression	fclose ( fd )		4934131	0					
ANR	4934191	Callee	fclose		4934131	0					
ANR	4934192	Identifier	fclose		4934131	0					
ANR	4934193	ArgumentList	fd		4934131	1					
ANR	4934194	Argument	fd		4934131	0					
ANR	4934195	Identifier	fd		4934131	0					
ANR	4934196	ExpressionStatement	"lang_cpipe_file ( lang , "".tmp.c"" )"	72:1:1707:1739	4934131	15	True				
ANR	4934197	CallExpression	"lang_cpipe_file ( lang , "".tmp.c"" )"		4934131	0					
ANR	4934198	Callee	lang_cpipe_file		4934131	0					
ANR	4934199	Identifier	lang_cpipe_file		4934131	0					
ANR	4934200	ArgumentList	lang		4934131	1					
ANR	4934201	Argument	lang		4934131	0					
ANR	4934202	Identifier	lang		4934131	0					
ANR	4934203	Argument	""".tmp.c"""		4934131	1					
ANR	4934204	PrimaryExpression	""".tmp.c"""		4934131	0					
ANR	4934205	ExpressionStatement	"r_file_rm ( "".tmp.c"" )"	73:1:1742:1762	4934131	16	True				
ANR	4934206	CallExpression	"r_file_rm ( "".tmp.c"" )"		4934131	0					
ANR	4934207	Callee	r_file_rm		4934131	0					
ANR	4934208	Identifier	r_file_rm		4934131	0					
ANR	4934209	ArgumentList	""".tmp.c"""		4934131	1					
ANR	4934210	Argument	""".tmp.c"""		4934131	0					
ANR	4934211	PrimaryExpression	""".tmp.c"""		4934131	0					
ANR	4934212	ReturnStatement	return true ;	74:1:1765:1776	4934131	17	True				
ANR	4934213	Identifier	true		4934131	0					
ANR	4934214	ReturnType	static int		4934131	1					
ANR	4934215	Identifier	lang_cpipe_run		4934131	2					
ANR	4934216	ParameterList	"RLang * lang , const char * code , int len"		4934131	3					
ANR	4934217	Parameter	RLang * lang	59:26:1349:1359	4934131	0	True				
ANR	4934218	ParameterType	RLang *		4934131	0					
ANR	4934219	Identifier	lang		4934131	1					
ANR	4934220	Parameter	const char * code	59:39:1362:1377	4934131	1	True				
ANR	4934221	ParameterType	const char *		4934131	0					
ANR	4934222	Identifier	code		4934131	1					
ANR	4934223	Parameter	int len	59:57:1380:1386	4934131	2	True				
ANR	4934224	ParameterType	int		4934131	0					
ANR	4934225	Identifier	len		4934131	1					
ANR	4934226	CFGEntryNode	ENTRY		4934131		True				
ANR	4934227	CFGExitNode	EXIT		4934131		True				
ANR	4934228	Symbol	code		4934131						
ANR	4934229	Symbol	len		4934131						
ANR	4934230	Symbol	false		4934131						
ANR	4934231	Symbol	true		4934131						
ANR	4934232	Symbol	r_sandbox_fopen		4934131						
ANR	4934233	Symbol	lang		4934131						
ANR	4934234	Symbol	fd		4934131						
ANR	4934235	DeclStmt									
ANR	4934236	Decl							RLangPlugin	RLangPlugin	r_lang_plugin_cpipe
