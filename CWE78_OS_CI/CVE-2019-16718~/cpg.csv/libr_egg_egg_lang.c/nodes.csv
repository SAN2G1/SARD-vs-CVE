command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	4771666	File	data/converged/CVE-2019-16718~_radare2/libr_egg_egg_lang.c								
ANR	4771667	Function	is_var	7:0:99:205							
ANR	4771668	FunctionDef	is_var (char * x)		4771667	0					
ANR	4771669	CompoundStatement		7:34:133:205	4771667	0					
ANR	4771670	ReturnStatement	return x [ 0 ] == '.' || ( ( x [ 0 ] == '*' || x [ 0 ] == '&' ) && x [ 1 ] == '.' ) ;	8:1:136:203	4771667	0	True				
ANR	4771671	OrExpression	x [ 0 ] == '.' || ( ( x [ 0 ] == '*' || x [ 0 ] == '&' ) && x [ 1 ] == '.' )		4771667	0		||			
ANR	4771672	EqualityExpression	x [ 0 ] == '.'		4771667	0		==			
ANR	4771673	ArrayIndexing	x [ 0 ]		4771667	0					
ANR	4771674	Identifier	x		4771667	0					
ANR	4771675	PrimaryExpression	0		4771667	1					
ANR	4771676	PrimaryExpression	'.'		4771667	1					
ANR	4771677	AndExpression	( x [ 0 ] == '*' || x [ 0 ] == '&' ) && x [ 1 ] == '.'		4771667	1		&&			
ANR	4771678	OrExpression	x [ 0 ] == '*' || x [ 0 ] == '&'		4771667	0		||			
ANR	4771679	EqualityExpression	x [ 0 ] == '*'		4771667	0		==			
ANR	4771680	ArrayIndexing	x [ 0 ]		4771667	0					
ANR	4771681	Identifier	x		4771667	0					
ANR	4771682	PrimaryExpression	0		4771667	1					
ANR	4771683	PrimaryExpression	'*'		4771667	1					
ANR	4771684	EqualityExpression	x [ 0 ] == '&'		4771667	1		==			
ANR	4771685	ArrayIndexing	x [ 0 ]		4771667	0					
ANR	4771686	Identifier	x		4771667	0					
ANR	4771687	PrimaryExpression	0		4771667	1					
ANR	4771688	PrimaryExpression	'&'		4771667	1					
ANR	4771689	EqualityExpression	x [ 1 ] == '.'		4771667	1		==			
ANR	4771690	ArrayIndexing	x [ 1 ]		4771667	0					
ANR	4771691	Identifier	x		4771667	0					
ANR	4771692	PrimaryExpression	1		4771667	1					
ANR	4771693	PrimaryExpression	'.'		4771667	1					
ANR	4771694	ReturnType	static inline int		4771667	1					
ANR	4771695	Identifier	is_var		4771667	2					
ANR	4771696	ParameterList	char * x		4771667	3					
ANR	4771697	Parameter	char * x	7:25:124:130	4771667	0	True				
ANR	4771698	ParameterType	char *		4771667	0					
ANR	4771699	Identifier	x		4771667	1					
ANR	4771700	CFGEntryNode	ENTRY		4771667		True				
ANR	4771701	CFGExitNode	EXIT		4771667		True				
ANR	4771702	Symbol	* x		4771667						
ANR	4771703	Symbol	x		4771667						
ANR	4771704	Function	is_space	11:0:208:302							
ANR	4771705	FunctionDef	is_space (char c)		4771704	0					
ANR	4771706	CompoundStatement		11:35:243:302	4771704	0					
ANR	4771707	ReturnStatement	return c == ' ' || c == '\\t' || c == '\\n' || c == '\\r' ;	12:1:246:300	4771704	0	True				
ANR	4771708	OrExpression	c == ' ' || c == '\\t' || c == '\\n' || c == '\\r'		4771704	0		||			
ANR	4771709	EqualityExpression	c == ' '		4771704	0		==			
ANR	4771710	Identifier	c		4771704	0					
ANR	4771711	PrimaryExpression	' '		4771704	1					
ANR	4771712	OrExpression	c == '\\t' || c == '\\n' || c == '\\r'		4771704	1		||			
ANR	4771713	EqualityExpression	c == '\\t'		4771704	0		==			
ANR	4771714	Identifier	c		4771704	0					
ANR	4771715	PrimaryExpression	'\\t'		4771704	1					
ANR	4771716	OrExpression	c == '\\n' || c == '\\r'		4771704	1		||			
ANR	4771717	EqualityExpression	c == '\\n'		4771704	0		==			
ANR	4771718	Identifier	c		4771704	0					
ANR	4771719	PrimaryExpression	'\\n'		4771704	1					
ANR	4771720	EqualityExpression	c == '\\r'		4771704	1		==			
ANR	4771721	Identifier	c		4771704	0					
ANR	4771722	PrimaryExpression	'\\r'		4771704	1					
ANR	4771723	ReturnType	static inline int		4771704	1					
ANR	4771724	Identifier	is_space		4771704	2					
ANR	4771725	ParameterList	char c		4771704	3					
ANR	4771726	Parameter	char c	11:27:235:240	4771704	0	True				
ANR	4771727	ParameterType	char		4771704	0					
ANR	4771728	Identifier	c		4771704	1					
ANR	4771729	CFGEntryNode	ENTRY		4771704		True				
ANR	4771730	CFGExitNode	EXIT		4771704		True				
ANR	4771731	Symbol	c		4771704						
ANR	4771732	Function	skipspaces	15:0:305:398							
ANR	4771733	FunctionDef	skipspaces (const char * s)		4771732	0					
ANR	4771734	CompoundStatement		15:45:350:398	4771732	0					
ANR	4771735	WhileStatement	while ( is_space ( * s ) )		4771732	0					
ANR	4771736	Condition	is_space ( * s )	16:8:360:372	4771732	0	True				
ANR	4771737	CallExpression	is_space ( * s )		4771732	0					
ANR	4771738	Callee	is_space		4771732	0					
ANR	4771739	Identifier	is_space		4771732	0					
ANR	4771740	ArgumentList	* s		4771732	1					
ANR	4771741	Argument	* s		4771732	0					
ANR	4771742	UnaryOperationExpression	* s		4771732	0					
ANR	4771743	UnaryOperator	*		4771732	0					
ANR	4771744	Identifier	s		4771732	1					
ANR	4771745	CompoundStatement		2:23:24:24	4771732	1					
ANR	4771746	ExpressionStatement	s ++	17:2:379:382	4771732	0	True				
ANR	4771747	PostIncDecOperationExpression	s ++		4771732	0					
ANR	4771748	Identifier	s		4771732	0					
ANR	4771749	IncDec	++		4771732	1					
ANR	4771750	ReturnStatement	return s ;	19:1:388:396	4771732	1	True				
ANR	4771751	Identifier	s		4771732	0					
ANR	4771752	ReturnType	static const char *		4771732	1					
ANR	4771753	Identifier	skipspaces		4771732	2					
ANR	4771754	ParameterList	const char * s		4771732	3					
ANR	4771755	Parameter	const char * s	15:30:335:347	4771732	0	True				
ANR	4771756	ParameterType	const char *		4771732	0					
ANR	4771757	Identifier	s		4771732	1					
ANR	4771758	CFGEntryNode	ENTRY		4771732		True				
ANR	4771759	CFGExitNode	EXIT		4771732		True				
ANR	4771760	Symbol	s		4771732						
ANR	4771761	Symbol	is_space		4771732						
ANR	4771762	Symbol	* s		4771732						
ANR	4771763	Function	is_op	22:0:401:587							
ANR	4771764	FunctionDef	is_op (char x)		4771763	0					
ANR	4771765	CompoundStatement		22:32:433:587	4771763	0					
ANR	4771766	SwitchStatement	switch ( x )		4771763	0					
ANR	4771767	Condition	x	23:9:444:444	4771763	0	True				
ANR	4771768	Identifier	x		4771763	0					
ANR	4771769	CompoundStatement		2:12:13:13	4771763	1					
ANR	4771770	Label	case '-' :	24:1:450:458	4771763	0	True				
ANR	4771771	Label	case '+' :	25:1:461:469	4771763	1	True				
ANR	4771772	ReturnStatement	return 1 ;	26:2:473:481	4771763	2	True				
ANR	4771773	PrimaryExpression	1		4771763	0					
ANR	4771774	Label	case '*' :	27:1:484:492	4771763	3	True				
ANR	4771775	Label	case '/' :	28:1:495:503	4771763	4	True				
ANR	4771776	ReturnStatement	return 2 ;	29:2:507:515	4771763	5	True				
ANR	4771777	PrimaryExpression	2		4771763	0					
ANR	4771778	Label	case '^' :	30:1:518:526	4771763	6	True				
ANR	4771779	Label	case '|' :	31:1:529:537	4771763	7	True				
ANR	4771780	Label	case '&' :	32:1:540:548	4771763	8	True				
ANR	4771781	ReturnStatement	return 3 ;	33:2:552:560	4771763	9	True				
ANR	4771782	PrimaryExpression	3		4771763	0					
ANR	4771783	Label	default :	34:1:563:570	4771763	10	True				
ANR	4771784	Identifier	default		4771763	0					
ANR	4771785	ReturnStatement	return 0 ;	35:2:574:582	4771763	11	True				
ANR	4771786	PrimaryExpression	0		4771763	0					
ANR	4771787	ReturnType	static inline int		4771763	1					
ANR	4771788	Identifier	is_op		4771763	2					
ANR	4771789	ParameterList	char x		4771763	3					
ANR	4771790	Parameter	char x	22:24:425:430	4771763	0	True				
ANR	4771791	ParameterType	char		4771763	0					
ANR	4771792	Identifier	x		4771763	1					
ANR	4771793	CFGEntryNode	ENTRY		4771763		True				
ANR	4771794	CFGExitNode	EXIT		4771763		True				
ANR	4771795	Symbol	x		4771763						
ANR	4771796	Function	get_op	39:0:590:741							
ANR	4771797	FunctionDef	get_op (char * * pos)		4771796	0					
ANR	4771798	CompoundStatement		39:36:626:741	4771796	0					
ANR	4771799	WhileStatement	while ( * * pos && ! ( is_op ( * * pos ) && ! is_var ( * pos ) ) )		4771796	0					
ANR	4771800	Condition	* * pos && ! ( is_op ( * * pos ) && ! is_var ( * pos ) )	40:8:636:678	4771796	0	True				
ANR	4771801	AndExpression	* * pos && ! ( is_op ( * * pos ) && ! is_var ( * pos ) )		4771796	0		&&			
ANR	4771802	UnaryOperationExpression	* * pos		4771796	0					
ANR	4771803	UnaryOperator	*		4771796	0					
ANR	4771804	UnaryOperationExpression	* pos		4771796	1					
ANR	4771805	UnaryOperator	*		4771796	0					
ANR	4771806	Identifier	pos		4771796	1					
ANR	4771807	UnaryOperationExpression	! ( is_op ( * * pos ) && ! is_var ( * pos ) )		4771796	1					
ANR	4771808	UnaryOperator	!		4771796	0					
ANR	4771809	AndExpression	is_op ( * * pos ) && ! is_var ( * pos )		4771796	1		&&			
ANR	4771810	CallExpression	is_op ( * * pos )		4771796	0					
ANR	4771811	Callee	is_op		4771796	0					
ANR	4771812	Identifier	is_op		4771796	0					
ANR	4771813	ArgumentList	* * pos		4771796	1					
ANR	4771814	Argument	* * pos		4771796	0					
ANR	4771815	UnaryOperationExpression	* * pos		4771796	0					
ANR	4771816	UnaryOperator	*		4771796	0					
ANR	4771817	UnaryOperationExpression	* pos		4771796	1					
ANR	4771818	UnaryOperator	*		4771796	0					
ANR	4771819	Identifier	pos		4771796	1					
ANR	4771820	UnaryOperationExpression	! is_var ( * pos )		4771796	1					
ANR	4771821	UnaryOperator	!		4771796	0					
ANR	4771822	CallExpression	is_var ( * pos )		4771796	1					
ANR	4771823	Callee	is_var		4771796	0					
ANR	4771824	Identifier	is_var		4771796	0					
ANR	4771825	ArgumentList	* pos		4771796	1					
ANR	4771826	Argument	* pos		4771796	0					
ANR	4771827	UnaryOperationExpression	* pos		4771796	0					
ANR	4771828	UnaryOperator	*		4771796	0					
ANR	4771829	Identifier	pos		4771796	1					
ANR	4771830	CompoundStatement		2:53:54:54	4771796	1					
ANR	4771831	ExpressionStatement	( * pos ) ++	41:2:685:693	4771796	0	True				
ANR	4771832	PostIncDecOperationExpression	( * pos ) ++		4771796	0					
ANR	4771833	UnaryOperationExpression	* pos		4771796	0					
ANR	4771834	UnaryOperator	*		4771796	0					
ANR	4771835	Identifier	pos		4771796	1					
ANR	4771836	IncDec	++		4771796	1					
ANR	4771837	ReturnStatement	return ( * * pos ) ? ( ( is_op ( * * pos ) ) + 1 ) : 0 ;	43:1:699:739	4771796	1	True				
ANR	4771838	ConditionalExpression	( * * pos ) ? ( ( is_op ( * * pos ) ) + 1 ) : 0		4771796	0					
ANR	4771839	Condition	* * pos		4771796	0					
ANR	4771840	UnaryOperationExpression	* * pos		4771796	0					
ANR	4771841	UnaryOperator	*		4771796	0					
ANR	4771842	UnaryOperationExpression	* pos		4771796	1					
ANR	4771843	UnaryOperator	*		4771796	0					
ANR	4771844	Identifier	pos		4771796	1					
ANR	4771845	AdditiveExpression	( is_op ( * * pos ) ) + 1		4771796	1		+			
ANR	4771846	CallExpression	is_op ( * * pos )		4771796	0					
ANR	4771847	Callee	is_op		4771796	0					
ANR	4771848	Identifier	is_op		4771796	0					
ANR	4771849	ArgumentList	* * pos		4771796	1					
ANR	4771850	Argument	* * pos		4771796	0					
ANR	4771851	UnaryOperationExpression	* * pos		4771796	0					
ANR	4771852	UnaryOperator	*		4771796	0					
ANR	4771853	UnaryOperationExpression	* pos		4771796	1					
ANR	4771854	UnaryOperator	*		4771796	0					
ANR	4771855	Identifier	pos		4771796	1					
ANR	4771856	PrimaryExpression	1		4771796	1					
ANR	4771857	PrimaryExpression	0		4771796	2					
ANR	4771858	ReturnType	static inline int		4771796	1					
ANR	4771859	Identifier	get_op		4771796	2					
ANR	4771860	ParameterList	char * * pos		4771796	3					
ANR	4771861	Parameter	char * * pos	39:25:615:624	4771796	0	True				
ANR	4771862	ParameterType	char * *		4771796	0					
ANR	4771863	Identifier	pos		4771796	1					
ANR	4771864	CFGEntryNode	ENTRY		4771796		True				
ANR	4771865	CFGExitNode	EXIT		4771796		True				
ANR	4771866	Symbol	pos		4771796						
ANR	4771867	Symbol	* * pos		4771796						
ANR	4771868	Symbol	is_op		4771796						
ANR	4771869	Symbol	is_var		4771796						
ANR	4771870	Symbol	* pos		4771796						
ANR	4771871	Function	trim	48:0:830:945							
ANR	4771872	FunctionDef	trim (char * s)		4771871	0					
ANR	4771873	CompoundStatement		48:27:857:945	4771871	0					
ANR	4771874	IdentifierDeclStatement	char * o ;	49:1:860:867	4771871	0	True				
ANR	4771875	IdentifierDecl	* o		4771871	0					
ANR	4771876	IdentifierDeclType	char *		4771871	0					
ANR	4771877	Identifier	o		4771871	1					
ANR	4771878	ForStatement	for ( o = s ; * o ; o ++ )		4771871	1					
ANR	4771879	ForInit	o = s ;	50:6:875:880	4771871	0	True				
ANR	4771880	AssignmentExpression	o = s		4771871	0		=			
ANR	4771881	Identifier	o		4771871	0					
ANR	4771882	Identifier	s		4771871	1					
ANR	4771883	Condition	* o	50:13:882:883	4771871	1	True				
ANR	4771884	UnaryOperationExpression	* o		4771871	0					
ANR	4771885	UnaryOperator	*		4771871	0					
ANR	4771886	Identifier	o		4771871	1					
ANR	4771887	PostIncDecOperationExpression	o ++	50:17:886:888	4771871	2	True				
ANR	4771888	Identifier	o		4771871	0					
ANR	4771889	IncDec	++		4771871	1					
ANR	4771890	CompoundStatement		3:22:33:33	4771871	3					
ANR	4771891	IfStatement	if ( is_space ( * o ) )		4771871	0					
ANR	4771892	Condition	is_space ( * o )	51:6:899:911	4771871	0	True				
ANR	4771893	CallExpression	is_space ( * o )		4771871	0					
ANR	4771894	Callee	is_space		4771871	0					
ANR	4771895	Identifier	is_space		4771871	0					
ANR	4771896	ArgumentList	* o		4771871	1					
ANR	4771897	Argument	* o		4771871	0					
ANR	4771898	UnaryOperationExpression	* o		4771871	0					
ANR	4771899	UnaryOperator	*		4771871	0					
ANR	4771900	Identifier	o		4771871	1					
ANR	4771901	CompoundStatement		4:21:56:56	4771871	1					
ANR	4771902	ExpressionStatement	* o = 0	52:3:919:925	4771871	0	True				
ANR	4771903	AssignmentExpression	* o = 0		4771871	0		=			
ANR	4771904	UnaryOperationExpression	* o		4771871	0					
ANR	4771905	UnaryOperator	*		4771871	0					
ANR	4771906	Identifier	o		4771871	1					
ANR	4771907	PrimaryExpression	0		4771871	1					
ANR	4771908	ReturnStatement	return s ;	55:1:935:943	4771871	2	True				
ANR	4771909	Identifier	s		4771871	0					
ANR	4771910	ReturnType	static char *		4771871	1					
ANR	4771911	Identifier	trim		4771871	2					
ANR	4771912	ParameterList	char * s		4771871	3					
ANR	4771913	Parameter	char * s	48:18:848:854	4771871	0	True				
ANR	4771914	ParameterType	char *		4771871	0					
ANR	4771915	Identifier	s		4771871	1					
ANR	4771916	CFGEntryNode	ENTRY		4771871		True				
ANR	4771917	CFGExitNode	EXIT		4771871		True				
ANR	4771918	Symbol	s		4771871						
ANR	4771919	Symbol	* o		4771871						
ANR	4771920	Symbol	is_space		4771871						
ANR	4771921	Symbol	o		4771871						
ANR	4771922	DeclStmt									
ANR	4771923	Decl							void	"void ( REgg * egg , char * str , int filter )"	rcc_pushstr
ANR	4771924	DeclStmt									
ANR	4771925	Decl							void	"void ( REgg * egg , int delta )"	rcc_context
ANR	4771926	ClassDef	<unnamed>	61:0:1055:1154							
ANR	4771927	Function	find_include	74:0:1158:2182							
ANR	4771928	FunctionDef	"find_include (const char * prefix , const char * file)"		4771927	0					
ANR	4771929	CompoundStatement		74:64:1222:2182	4771927	0					
ANR	4771930	IdentifierDeclStatement	"char * pfx = NULL , * ret = NULL , * env = r_sys_getenv ( R_EGG_INCDIR_ENV ) ;"	75:1:1225:1294	4771927	0	True				
ANR	4771931	IdentifierDecl	* pfx = NULL		4771927	0					
ANR	4771932	IdentifierDeclType	char *		4771927	0					
ANR	4771933	Identifier	pfx		4771927	1					
ANR	4771934	AssignmentExpression	* pfx = NULL		4771927	2		=			
ANR	4771935	Identifier	NULL		4771927	0					
ANR	4771936	Identifier	NULL		4771927	1					
ANR	4771937	IdentifierDecl	* ret = NULL		4771927	1					
ANR	4771938	IdentifierDeclType	char *		4771927	0					
ANR	4771939	Identifier	ret		4771927	1					
ANR	4771940	AssignmentExpression	* ret = NULL		4771927	2		=			
ANR	4771941	Identifier	NULL		4771927	0					
ANR	4771942	Identifier	NULL		4771927	1					
ANR	4771943	IdentifierDecl	* env = r_sys_getenv ( R_EGG_INCDIR_ENV )		4771927	2					
ANR	4771944	IdentifierDeclType	char *		4771927	0					
ANR	4771945	Identifier	env		4771927	1					
ANR	4771946	AssignmentExpression	* env = r_sys_getenv ( R_EGG_INCDIR_ENV )		4771927	2		=			
ANR	4771947	Identifier	env		4771927	0					
ANR	4771948	CallExpression	r_sys_getenv ( R_EGG_INCDIR_ENV )		4771927	1					
ANR	4771949	Callee	r_sys_getenv		4771927	0					
ANR	4771950	Identifier	r_sys_getenv		4771927	0					
ANR	4771951	ArgumentList	R_EGG_INCDIR_ENV		4771927	1					
ANR	4771952	Argument	R_EGG_INCDIR_ENV		4771927	0					
ANR	4771953	Identifier	R_EGG_INCDIR_ENV		4771927	0					
ANR	4771954	IfStatement	if ( ! prefix )		4771927	1					
ANR	4771955	Condition	! prefix	76:5:1301:1307	4771927	0	True				
ANR	4771956	UnaryOperationExpression	! prefix		4771927	0					
ANR	4771957	UnaryOperator	!		4771927	0					
ANR	4771958	Identifier	prefix		4771927	1					
ANR	4771959	CompoundStatement		3:14:87:87	4771927	1					
ANR	4771960	ExpressionStatement	"prefix = """""	77:2:1314:1325	4771927	0	True				
ANR	4771961	AssignmentExpression	"prefix = """""		4771927	0		=			
ANR	4771962	Identifier	prefix		4771927	0					
ANR	4771963	PrimaryExpression	""""""		4771927	1					
ANR	4771964	IfStatement	if ( * prefix == '$' )		4771927	2					
ANR	4771965	Condition	* prefix == '$'	79:5:1335:1348	4771927	0	True				
ANR	4771966	EqualityExpression	* prefix == '$'		4771927	0		==			
ANR	4771967	UnaryOperationExpression	* prefix		4771927	0					
ANR	4771968	UnaryOperator	*		4771927	0					
ANR	4771969	Identifier	prefix		4771927	1					
ANR	4771970	PrimaryExpression	'$'		4771927	1					
ANR	4771971	CompoundStatement		7:2:132:169	4771927	1					
ANR	4771972	IdentifierDeclStatement	char * out = r_sys_getenv ( prefix + 1 ) ;	80:2:1355:1392	4771927	0	True				
ANR	4771973	IdentifierDecl	* out = r_sys_getenv ( prefix + 1 )		4771927	0					
ANR	4771974	IdentifierDeclType	char *		4771927	0					
ANR	4771975	Identifier	out		4771927	1					
ANR	4771976	AssignmentExpression	* out = r_sys_getenv ( prefix + 1 )		4771927	2		=			
ANR	4771977	Identifier	out		4771927	0					
ANR	4771978	CallExpression	r_sys_getenv ( prefix + 1 )		4771927	1					
ANR	4771979	Callee	r_sys_getenv		4771927	0					
ANR	4771980	Identifier	r_sys_getenv		4771927	0					
ANR	4771981	ArgumentList	prefix + 1		4771927	1					
ANR	4771982	Argument	prefix + 1		4771927	0					
ANR	4771983	AdditiveExpression	prefix + 1		4771927	0		+			
ANR	4771984	Identifier	prefix		4771927	0					
ANR	4771985	PrimaryExpression	1		4771927	1					
ANR	4771986	ExpressionStatement	"pfx = out ? out : strdup ( """" )"	81:2:1396:1423	4771927	1	True				
ANR	4771987	AssignmentExpression	"pfx = out ? out : strdup ( """" )"		4771927	0		=			
ANR	4771988	Identifier	pfx		4771927	0					
ANR	4771989	ConditionalExpression	"out ? out : strdup ( """" )"		4771927	1					
ANR	4771990	Condition	out		4771927	0					
ANR	4771991	Identifier	out		4771927	0					
ANR	4771992	Identifier	out		4771927	1					
ANR	4771993	CallExpression	"strdup ( """" )"		4771927	2					
ANR	4771994	Callee	strdup		4771927	0					
ANR	4771995	Identifier	strdup		4771927	0					
ANR	4771996	ArgumentList	""""""		4771927	1					
ANR	4771997	Argument	""""""		4771927	0					
ANR	4771998	PrimaryExpression	""""""		4771927	0					
ANR	4771999	ElseStatement	else		4771927	0					
ANR	4772000	CompoundStatement		9:8:210:210	4771927	0					
ANR	4772001	ExpressionStatement	pfx = strdup ( prefix )	83:2:1437:1458	4771927	0	True				
ANR	4772002	AssignmentExpression	pfx = strdup ( prefix )		4771927	0		=			
ANR	4772003	Identifier	pfx		4771927	0					
ANR	4772004	CallExpression	strdup ( prefix )		4771927	1					
ANR	4772005	Callee	strdup		4771927	0					
ANR	4772006	Identifier	strdup		4771927	0					
ANR	4772007	ArgumentList	prefix		4771927	1					
ANR	4772008	Argument	prefix		4771927	0					
ANR	4772009	Identifier	prefix		4771927	0					
ANR	4772010	IfStatement	if ( ! pfx )		4771927	1					
ANR	4772011	Condition	! pfx	84:6:1466:1469	4771927	0	True				
ANR	4772012	UnaryOperationExpression	! pfx		4771927	0					
ANR	4772013	UnaryOperator	!		4771927	0					
ANR	4772014	Identifier	pfx		4771927	1					
ANR	4772015	CompoundStatement		11:12:249:249	4771927	1					
ANR	4772016	ExpressionStatement	free ( env )	85:3:1477:1487	4771927	0	True				
ANR	4772017	CallExpression	free ( env )		4771927	0					
ANR	4772018	Callee	free		4771927	0					
ANR	4772019	Identifier	free		4771927	0					
ANR	4772020	ArgumentList	env		4771927	1					
ANR	4772021	Argument	env		4771927	0					
ANR	4772022	Identifier	env		4771927	0					
ANR	4772023	ReturnStatement	return NULL ;	86:3:1492:1503	4771927	1	True				
ANR	4772024	Identifier	NULL		4771927	0					
ANR	4772025	IfStatement	if ( env )		4771927	3					
ANR	4772026	Condition	env	90:5:1518:1520	4771927	0	True				
ANR	4772027	Identifier	env		4771927	0					
ANR	4772028	CompoundStatement		18:2:304:339	4771927	1					
ANR	4772029	IdentifierDeclStatement	"char * str , * ptr = strchr ( env , ':' ) ;"	91:2:1527:1562	4771927	0	True				
ANR	4772030	IdentifierDecl	* str		4771927	0					
ANR	4772031	IdentifierDeclType	char *		4771927	0					
ANR	4772032	Identifier	str		4771927	1					
ANR	4772033	IdentifierDecl	"* ptr = strchr ( env , ':' )"		4771927	1					
ANR	4772034	IdentifierDeclType	char *		4771927	0					
ANR	4772035	Identifier	ptr		4771927	1					
ANR	4772036	AssignmentExpression	"* ptr = strchr ( env , ':' )"		4771927	2		=			
ANR	4772037	Identifier	ptr		4771927	0					
ANR	4772038	CallExpression	"strchr ( env , ':' )"		4771927	1					
ANR	4772039	Callee	strchr		4771927	0					
ANR	4772040	Identifier	strchr		4771927	0					
ANR	4772041	ArgumentList	env		4771927	1					
ANR	4772042	Argument	env		4771927	0					
ANR	4772043	Identifier	env		4771927	0					
ANR	4772044	Argument	':'		4771927	1					
ANR	4772045	PrimaryExpression	':'		4771927	0					
ANR	4772046	ExpressionStatement	str = env	93:2:1614:1623	4771927	1	True				
ANR	4772047	AssignmentExpression	str = env		4771927	0		=			
ANR	4772048	Identifier	str		4771927	0					
ANR	4772049	Identifier	env		4771927	1					
ANR	4772050	WhileStatement	while ( str )		4771927	2					
ANR	4772051	Condition	str	94:9:1634:1636	4771927	0	True				
ANR	4772052	Identifier	str		4771927	0					
ANR	4772053	CompoundStatement		21:14:416:416	4771927	1					
ANR	4772054	IfStatement	if ( ptr )		4771927	0					
ANR	4772055	Condition	ptr	95:7:1648:1650	4771927	0	True				
ANR	4772056	Identifier	ptr		4771927	0					
ANR	4772057	CompoundStatement		22:12:430:430	4771927	1					
ANR	4772058	ExpressionStatement	* ptr = 0	96:4:1659:1667	4771927	0	True				
ANR	4772059	AssignmentExpression	* ptr = 0		4771927	0		=			
ANR	4772060	UnaryOperationExpression	* ptr		4771927	0					
ANR	4772061	UnaryOperator	*		4771927	0					
ANR	4772062	Identifier	ptr		4771927	1					
ANR	4772063	PrimaryExpression	0		4771927	1					
ANR	4772064	ExpressionStatement	free ( ret )	98:3:1677:1687	4771927	1	True				
ANR	4772065	CallExpression	free ( ret )		4771927	0					
ANR	4772066	Callee	free		4771927	0					
ANR	4772067	Identifier	free		4771927	0					
ANR	4772068	ArgumentList	ret		4771927	1					
ANR	4772069	Argument	ret		4771927	0					
ANR	4772070	Identifier	ret		4771927	0					
ANR	4772071	ExpressionStatement	"ret = r_str_appendf ( NULL , ""%s/%s"" , pfx , file )"	99:3:1692:1738	4771927	2	True				
ANR	4772072	AssignmentExpression	"ret = r_str_appendf ( NULL , ""%s/%s"" , pfx , file )"		4771927	0		=			
ANR	4772073	Identifier	ret		4771927	0					
ANR	4772074	CallExpression	"r_str_appendf ( NULL , ""%s/%s"" , pfx , file )"		4771927	1					
ANR	4772075	Callee	r_str_appendf		4771927	0					
ANR	4772076	Identifier	r_str_appendf		4771927	0					
ANR	4772077	ArgumentList	NULL		4771927	1					
ANR	4772078	Argument	NULL		4771927	0					
ANR	4772079	Identifier	NULL		4771927	0					
ANR	4772080	Argument	"""%s/%s"""		4771927	1					
ANR	4772081	PrimaryExpression	"""%s/%s"""		4771927	0					
ANR	4772082	Argument	pfx		4771927	2					
ANR	4772083	Identifier	pfx		4771927	0					
ANR	4772084	Argument	file		4771927	3					
ANR	4772085	Identifier	file		4771927	0					
ANR	4772086	CompoundStatement		28:4:526:591	4771927	3					
ANR	4772087	IdentifierDeclStatement	"char * filepath = r_str_appendf ( NULL , ""%s/%s/%s"" , str , pfx , file ) ;"	101:4:1749:1814	4771927	0	True				
ANR	4772088	IdentifierDecl	"* filepath = r_str_appendf ( NULL , ""%s/%s/%s"" , str , pfx , file )"		4771927	0					
ANR	4772089	IdentifierDeclType	char *		4771927	0					
ANR	4772090	Identifier	filepath		4771927	1					
ANR	4772091	AssignmentExpression	"* filepath = r_str_appendf ( NULL , ""%s/%s/%s"" , str , pfx , file )"		4771927	2		=			
ANR	4772092	Identifier	filepath		4771927	0					
ANR	4772093	CallExpression	"r_str_appendf ( NULL , ""%s/%s/%s"" , str , pfx , file )"		4771927	1					
ANR	4772094	Callee	r_str_appendf		4771927	0					
ANR	4772095	Identifier	r_str_appendf		4771927	0					
ANR	4772096	ArgumentList	NULL		4771927	1					
ANR	4772097	Argument	NULL		4771927	0					
ANR	4772098	Identifier	NULL		4771927	0					
ANR	4772099	Argument	"""%s/%s/%s"""		4771927	1					
ANR	4772100	PrimaryExpression	"""%s/%s/%s"""		4771927	0					
ANR	4772101	Argument	str		4771927	2					
ANR	4772102	Identifier	str		4771927	0					
ANR	4772103	Argument	pfx		4771927	3					
ANR	4772104	Identifier	pfx		4771927	0					
ANR	4772105	Argument	file		4771927	4					
ANR	4772106	Identifier	file		4771927	0					
ANR	4772107	IfStatement	if ( r_file_exists ( filepath ) )		4771927	1					
ANR	4772108	Condition	r_file_exists ( filepath )	103:8:1865:1888	4771927	0	True				
ANR	4772109	CallExpression	r_file_exists ( filepath )		4771927	0					
ANR	4772110	Callee	r_file_exists		4771927	0					
ANR	4772111	Identifier	r_file_exists		4771927	0					
ANR	4772112	ArgumentList	filepath		4771927	1					
ANR	4772113	Argument	filepath		4771927	0					
ANR	4772114	Identifier	filepath		4771927	0					
ANR	4772115	CompoundStatement		30:34:668:668	4771927	1					
ANR	4772116	ExpressionStatement	free ( env )	104:5:1898:1908	4771927	0	True				
ANR	4772117	CallExpression	free ( env )		4771927	0					
ANR	4772118	Callee	free		4771927	0					
ANR	4772119	Identifier	free		4771927	0					
ANR	4772120	ArgumentList	env		4771927	1					
ANR	4772121	Argument	env		4771927	0					
ANR	4772122	Identifier	env		4771927	0					
ANR	4772123	ExpressionStatement	free ( pfx )	105:5:1915:1925	4771927	1	True				
ANR	4772124	CallExpression	free ( pfx )		4771927	0					
ANR	4772125	Callee	free		4771927	0					
ANR	4772126	Identifier	free		4771927	0					
ANR	4772127	ArgumentList	pfx		4771927	1					
ANR	4772128	Argument	pfx		4771927	0					
ANR	4772129	Identifier	pfx		4771927	0					
ANR	4772130	ExpressionStatement	free ( ret )	106:5:1932:1942	4771927	2	True				
ANR	4772131	CallExpression	free ( ret )		4771927	0					
ANR	4772132	Callee	free		4771927	0					
ANR	4772133	Identifier	free		4771927	0					
ANR	4772134	ArgumentList	ret		4771927	1					
ANR	4772135	Argument	ret		4771927	0					
ANR	4772136	Identifier	ret		4771927	0					
ANR	4772137	ReturnStatement	return filepath ;	107:5:1949:1964	4771927	3	True				
ANR	4772138	Identifier	filepath		4771927	0					
ANR	4772139	ExpressionStatement	free ( filepath )	109:4:1976:1991	4771927	2	True				
ANR	4772140	CallExpression	free ( filepath )		4771927	0					
ANR	4772141	Callee	free		4771927	0					
ANR	4772142	Identifier	free		4771927	0					
ANR	4772143	ArgumentList	filepath		4771927	1					
ANR	4772144	Argument	filepath		4771927	0					
ANR	4772145	Identifier	filepath		4771927	0					
ANR	4772146	IfStatement	if ( ! ptr )		4771927	4					
ANR	4772147	Condition	! ptr	111:7:2005:2008	4771927	0	True				
ANR	4772148	UnaryOperationExpression	! ptr		4771927	0					
ANR	4772149	UnaryOperator	!		4771927	0					
ANR	4772150	Identifier	ptr		4771927	1					
ANR	4772151	CompoundStatement		38:13:788:788	4771927	1					
ANR	4772152	BreakStatement	break ;	112:4:2017:2022	4771927	0	True				
ANR	4772153	ExpressionStatement	str = ptr + 1	114:3:2032:2045	4771927	5	True				
ANR	4772154	AssignmentExpression	str = ptr + 1		4771927	0		=			
ANR	4772155	Identifier	str		4771927	0					
ANR	4772156	AdditiveExpression	ptr + 1		4771927	1		+			
ANR	4772157	Identifier	ptr		4771927	0					
ANR	4772158	PrimaryExpression	1		4771927	1					
ANR	4772159	ExpressionStatement	"ptr = strchr ( str , ':' )"	115:3:2050:2073	4771927	6	True				
ANR	4772160	AssignmentExpression	"ptr = strchr ( str , ':' )"		4771927	0		=			
ANR	4772161	Identifier	ptr		4771927	0					
ANR	4772162	CallExpression	"strchr ( str , ':' )"		4771927	1					
ANR	4772163	Callee	strchr		4771927	0					
ANR	4772164	Identifier	strchr		4771927	0					
ANR	4772165	ArgumentList	str		4771927	1					
ANR	4772166	Argument	str		4771927	0					
ANR	4772167	Identifier	str		4771927	0					
ANR	4772168	Argument	':'		4771927	1					
ANR	4772169	PrimaryExpression	':'		4771927	0					
ANR	4772170	ExpressionStatement	free ( env )	117:2:2081:2091	4771927	3	True				
ANR	4772171	CallExpression	free ( env )		4771927	0					
ANR	4772172	Callee	free		4771927	0					
ANR	4772173	Identifier	free		4771927	0					
ANR	4772174	ArgumentList	env		4771927	1					
ANR	4772175	Argument	env		4771927	0					
ANR	4772176	Identifier	env		4771927	0					
ANR	4772177	ElseStatement	else		4771927	0					
ANR	4772178	CompoundStatement		45:8:878:878	4771927	0					
ANR	4772179	ExpressionStatement	"ret = r_str_appendf ( NULL , ""%s/%s"" , pfx , file )"	119:2:2105:2151	4771927	0	True				
ANR	4772180	AssignmentExpression	"ret = r_str_appendf ( NULL , ""%s/%s"" , pfx , file )"		4771927	0		=			
ANR	4772181	Identifier	ret		4771927	0					
ANR	4772182	CallExpression	"r_str_appendf ( NULL , ""%s/%s"" , pfx , file )"		4771927	1					
ANR	4772183	Callee	r_str_appendf		4771927	0					
ANR	4772184	Identifier	r_str_appendf		4771927	0					
ANR	4772185	ArgumentList	NULL		4771927	1					
ANR	4772186	Argument	NULL		4771927	0					
ANR	4772187	Identifier	NULL		4771927	0					
ANR	4772188	Argument	"""%s/%s"""		4771927	1					
ANR	4772189	PrimaryExpression	"""%s/%s"""		4771927	0					
ANR	4772190	Argument	pfx		4771927	2					
ANR	4772191	Identifier	pfx		4771927	0					
ANR	4772192	Argument	file		4771927	3					
ANR	4772193	Identifier	file		4771927	0					
ANR	4772194	ExpressionStatement	free ( pfx )	121:1:2157:2167	4771927	4	True				
ANR	4772195	CallExpression	free ( pfx )		4771927	0					
ANR	4772196	Callee	free		4771927	0					
ANR	4772197	Identifier	free		4771927	0					
ANR	4772198	ArgumentList	pfx		4771927	1					
ANR	4772199	Argument	pfx		4771927	0					
ANR	4772200	Identifier	pfx		4771927	0					
ANR	4772201	ReturnStatement	return ret ;	122:1:2170:2180	4771927	5	True				
ANR	4772202	Identifier	ret		4771927	0					
ANR	4772203	ReturnType	static char *		4771927	1					
ANR	4772204	Identifier	find_include		4771927	2					
ANR	4772205	ParameterList	"const char * prefix , const char * file"		4771927	3					
ANR	4772206	Parameter	const char * prefix	74:26:1184:1201	4771927	0	True				
ANR	4772207	ParameterType	const char *		4771927	0					
ANR	4772208	Identifier	prefix		4771927	1					
ANR	4772209	Parameter	const char * file	74:46:1204:1219	4771927	1	True				
ANR	4772210	ParameterType	const char *		4771927	0					
ANR	4772211	Identifier	file		4771927	1					
ANR	4772212	CFGEntryNode	ENTRY		4771927		True				
ANR	4772213	CFGExitNode	EXIT		4771927		True				
ANR	4772214	Symbol	ret		4771927						
ANR	4772215	Symbol	pfx		4771927						
ANR	4772216	Symbol	NULL		4771927						
ANR	4772217	Symbol	* prefix		4771927						
ANR	4772218	Symbol	prefix		4771927						
ANR	4772219	Symbol	r_sys_getenv		4771927						
ANR	4772220	Symbol	strchr		4771927						
ANR	4772221	Symbol	env		4771927						
ANR	4772222	Symbol	R_EGG_INCDIR_ENV		4771927						
ANR	4772223	Symbol	out		4771927						
ANR	4772224	Symbol	ptr		4771927						
ANR	4772225	Symbol	str		4771927						
ANR	4772226	Symbol	file		4771927						
ANR	4772227	Symbol	filepath		4771927						
ANR	4772228	Symbol	r_str_appendf		4771927						
ANR	4772229	Symbol	* ptr		4771927						
ANR	4772230	Symbol	strdup		4771927						
ANR	4772231	Symbol	r_file_exists		4771927						
ANR	4772232	Function	r_egg_lang_init	125:0:2185:2408							
ANR	4772233	FunctionDef	r_egg_lang_init (REgg * egg)		4772232	0					
ANR	4772234	CompoundStatement		125:38:2223:2408	4772232	0					
ANR	4772235	ExpressionStatement	egg -> lang . varsize = 'l'	126:1:2226:2249	4772232	0	True				
ANR	4772236	AssignmentExpression	egg -> lang . varsize = 'l'		4772232	0		=			
ANR	4772237	MemberAccess	egg -> lang . varsize		4772232	0					
ANR	4772238	PtrMemberAccess	egg -> lang		4772232	0					
ANR	4772239	Identifier	egg		4772232	0					
ANR	4772240	Identifier	lang		4772232	1					
ANR	4772241	Identifier	varsize		4772232	1					
ANR	4772242	PrimaryExpression	'l'		4772232	1					
ANR	4772243	ExpressionStatement	egg -> lang . docall = 1	128:1:2290:2310	4772232	1	True				
ANR	4772244	AssignmentExpression	egg -> lang . docall = 1		4772232	0		=			
ANR	4772245	MemberAccess	egg -> lang . docall		4772232	0					
ANR	4772246	PtrMemberAccess	egg -> lang		4772232	0					
ANR	4772247	Identifier	egg		4772232	0					
ANR	4772248	Identifier	lang		4772232	1					
ANR	4772249	Identifier	docall		4772232	1					
ANR	4772250	PrimaryExpression	1		4772232	1					
ANR	4772251	ExpressionStatement	egg -> lang . line = 1	129:1:2313:2331	4772232	2	True				
ANR	4772252	AssignmentExpression	egg -> lang . line = 1		4772232	0		=			
ANR	4772253	MemberAccess	egg -> lang . line		4772232	0					
ANR	4772254	PtrMemberAccess	egg -> lang		4772232	0					
ANR	4772255	Identifier	egg		4772232	0					
ANR	4772256	Identifier	lang		4772232	1					
ANR	4772257	Identifier	line		4772232	1					
ANR	4772258	PrimaryExpression	1		4772232	1					
ANR	4772259	ExpressionStatement	"egg -> lang . file = ""stdin"""	130:1:2334:2358	4772232	3	True				
ANR	4772260	AssignmentExpression	"egg -> lang . file = ""stdin"""		4772232	0		=			
ANR	4772261	MemberAccess	egg -> lang . file		4772232	0					
ANR	4772262	PtrMemberAccess	egg -> lang		4772232	0					
ANR	4772263	Identifier	egg		4772232	0					
ANR	4772264	Identifier	lang		4772232	1					
ANR	4772265	Identifier	file		4772232	1					
ANR	4772266	PrimaryExpression	"""stdin"""		4772232	1					
ANR	4772267	ExpressionStatement	egg -> lang . oc = '\\n'	131:1:2361:2380	4772232	4	True				
ANR	4772268	AssignmentExpression	egg -> lang . oc = '\\n'		4772232	0		=			
ANR	4772269	MemberAccess	egg -> lang . oc		4772232	0					
ANR	4772270	PtrMemberAccess	egg -> lang		4772232	0					
ANR	4772271	Identifier	egg		4772232	0					
ANR	4772272	Identifier	lang		4772232	1					
ANR	4772273	Identifier	oc		4772232	1					
ANR	4772274	PrimaryExpression	'\\n'		4772232	1					
ANR	4772275	ExpressionStatement	egg -> lang . mode = NORMAL	132:1:2383:2406	4772232	5	True				
ANR	4772276	AssignmentExpression	egg -> lang . mode = NORMAL		4772232	0		=			
ANR	4772277	MemberAccess	egg -> lang . mode		4772232	0					
ANR	4772278	PtrMemberAccess	egg -> lang		4772232	0					
ANR	4772279	Identifier	egg		4772232	0					
ANR	4772280	Identifier	lang		4772232	1					
ANR	4772281	Identifier	mode		4772232	1					
ANR	4772282	Identifier	NORMAL		4772232	1					
ANR	4772283	ReturnType	R_API void		4772232	1					
ANR	4772284	Identifier	r_egg_lang_init		4772232	2					
ANR	4772285	ParameterList	REgg * egg		4772232	3					
ANR	4772286	Parameter	REgg * egg	125:27:2212:2220	4772232	0	True				
ANR	4772287	ParameterType	REgg *		4772232	0					
ANR	4772288	Identifier	egg		4772232	1					
ANR	4772289	CFGEntryNode	ENTRY		4772232		True				
ANR	4772290	CFGExitNode	EXIT		4772232		True				
ANR	4772291	Symbol	* egg		4772232						
ANR	4772292	Symbol	egg -> lang . oc		4772232						
ANR	4772293	Symbol	egg		4772232						
ANR	4772294	Symbol	egg -> lang . varsize		4772232						
ANR	4772295	Symbol	egg -> lang . file		4772232						
ANR	4772296	Symbol	egg -> lang . line		4772232						
ANR	4772297	Symbol	egg -> lang		4772232						
ANR	4772298	Symbol	egg -> lang . docall		4772232						
ANR	4772299	Symbol	NORMAL		4772232						
ANR	4772300	Symbol	egg -> lang . mode		4772232						
ANR	4772301	Function	r_egg_lang_free	135:0:2411:2710							
ANR	4772302	FunctionDef	r_egg_lang_free (REgg * egg)		4772301	0					
ANR	4772303	CompoundStatement		135:38:2449:2710	4772301	0					
ANR	4772304	IdentifierDeclStatement	"int i , len ;"	136:1:2452:2462	4772301	0	True				
ANR	4772305	IdentifierDecl	i		4772301	0					
ANR	4772306	IdentifierDeclType	int		4772301	0					
ANR	4772307	Identifier	i		4772301	1					
ANR	4772308	IdentifierDecl	len		4772301	1					
ANR	4772309	IdentifierDeclType	int		4772301	0					
ANR	4772310	Identifier	len		4772301	1					
ANR	4772311	ForStatement	for ( i = 0 ; i < egg -> lang . nsyscalls ; i ++ )		4772301	1					
ANR	4772312	ForInit	i = 0 ;	138:6:2471:2476	4772301	0	True				
ANR	4772313	AssignmentExpression	i = 0		4772301	0		=			
ANR	4772314	Identifier	i		4772301	0					
ANR	4772315	PrimaryExpression	0		4772301	1					
ANR	4772316	Condition	i < egg -> lang . nsyscalls	138:13:2478:2500	4772301	1	True				
ANR	4772317	RelationalExpression	i < egg -> lang . nsyscalls		4772301	0		<			
ANR	4772318	Identifier	i		4772301	0					
ANR	4772319	MemberAccess	egg -> lang . nsyscalls		4772301	1					
ANR	4772320	PtrMemberAccess	egg -> lang		4772301	0					
ANR	4772321	Identifier	egg		4772301	0					
ANR	4772322	Identifier	lang		4772301	1					
ANR	4772323	Identifier	nsyscalls		4772301	1					
ANR	4772324	PostIncDecOperationExpression	i ++	138:38:2503:2505	4772301	2	True				
ANR	4772325	Identifier	i		4772301	0					
ANR	4772326	IncDec	++		4772301	1					
ANR	4772327	CompoundStatement		4:43:58:58	4772301	3					
ANR	4772328	ExpressionStatement	R_FREE ( egg -> lang . syscalls [ i ] . name )	139:3:2513:2548	4772301	0	True				
ANR	4772329	CallExpression	R_FREE ( egg -> lang . syscalls [ i ] . name )		4772301	0					
ANR	4772330	Callee	R_FREE		4772301	0					
ANR	4772331	Identifier	R_FREE		4772301	0					
ANR	4772332	ArgumentList	egg -> lang . syscalls [ i ] . name		4772301	1					
ANR	4772333	Argument	egg -> lang . syscalls [ i ] . name		4772301	0					
ANR	4772334	MemberAccess	egg -> lang . syscalls [ i ] . name		4772301	0					
ANR	4772335	ArrayIndexing	egg -> lang . syscalls [ i ]		4772301	0					
ANR	4772336	MemberAccess	egg -> lang . syscalls		4772301	0					
ANR	4772337	PtrMemberAccess	egg -> lang		4772301	0					
ANR	4772338	Identifier	egg		4772301	0					
ANR	4772339	Identifier	lang		4772301	1					
ANR	4772340	Identifier	syscalls		4772301	1					
ANR	4772341	Identifier	i		4772301	1					
ANR	4772342	Identifier	name		4772301	1					
ANR	4772343	ExpressionStatement	R_FREE ( egg -> lang . syscalls [ i ] . arg )	140:3:2553:2587	4772301	1	True				
ANR	4772344	CallExpression	R_FREE ( egg -> lang . syscalls [ i ] . arg )		4772301	0					
ANR	4772345	Callee	R_FREE		4772301	0					
ANR	4772346	Identifier	R_FREE		4772301	0					
ANR	4772347	ArgumentList	egg -> lang . syscalls [ i ] . arg		4772301	1					
ANR	4772348	Argument	egg -> lang . syscalls [ i ] . arg		4772301	0					
ANR	4772349	MemberAccess	egg -> lang . syscalls [ i ] . arg		4772301	0					
ANR	4772350	ArrayIndexing	egg -> lang . syscalls [ i ]		4772301	0					
ANR	4772351	MemberAccess	egg -> lang . syscalls		4772301	0					
ANR	4772352	PtrMemberAccess	egg -> lang		4772301	0					
ANR	4772353	Identifier	egg		4772301	0					
ANR	4772354	Identifier	lang		4772301	1					
ANR	4772355	Identifier	syscalls		4772301	1					
ANR	4772356	Identifier	i		4772301	1					
ANR	4772357	Identifier	arg		4772301	1					
ANR	4772358	ExpressionStatement	len = sizeof ( egg -> lang . ctxpush ) / sizeof ( char * )	142:1:2593:2643	4772301	2	True				
ANR	4772359	AssignmentExpression	len = sizeof ( egg -> lang . ctxpush ) / sizeof ( char * )		4772301	0		=			
ANR	4772360	Identifier	len		4772301	0					
ANR	4772361	MultiplicativeExpression	sizeof ( egg -> lang . ctxpush ) / sizeof ( char * )		4772301	1		/			
ANR	4772362	SizeofExpression	sizeof ( egg -> lang . ctxpush )		4772301	0					
ANR	4772363	Sizeof	sizeof		4772301	0					
ANR	4772364	MemberAccess	egg -> lang . ctxpush		4772301	1					
ANR	4772365	PtrMemberAccess	egg -> lang		4772301	0					
ANR	4772366	Identifier	egg		4772301	0					
ANR	4772367	Identifier	lang		4772301	1					
ANR	4772368	Identifier	ctxpush		4772301	1					
ANR	4772369	SizeofExpression	sizeof ( char * )		4772301	1					
ANR	4772370	Sizeof	sizeof		4772301	0					
ANR	4772371	SizeofOperand	char *		4772301	1					
ANR	4772372	ForStatement	for ( i = 0 ; i < len ; i ++ )		4772301	3					
ANR	4772373	ForInit	i = 0 ;	143:6:2651:2656	4772301	0	True				
ANR	4772374	AssignmentExpression	i = 0		4772301	0		=			
ANR	4772375	Identifier	i		4772301	0					
ANR	4772376	PrimaryExpression	0		4772301	1					
ANR	4772377	Condition	i < len	143:13:2658:2664	4772301	1	True				
ANR	4772378	RelationalExpression	i < len		4772301	0		<			
ANR	4772379	Identifier	i		4772301	0					
ANR	4772380	Identifier	len		4772301	1					
ANR	4772381	PostIncDecOperationExpression	i ++	143:22:2667:2669	4772301	2	True				
ANR	4772382	Identifier	i		4772301	0					
ANR	4772383	IncDec	++		4772301	1					
ANR	4772384	CompoundStatement		9:27:222:222	4772301	3					
ANR	4772385	ExpressionStatement	R_FREE ( egg -> lang . ctxpush [ i ] )	144:2:2676:2705	4772301	0	True				
ANR	4772386	CallExpression	R_FREE ( egg -> lang . ctxpush [ i ] )		4772301	0					
ANR	4772387	Callee	R_FREE		4772301	0					
ANR	4772388	Identifier	R_FREE		4772301	0					
ANR	4772389	ArgumentList	egg -> lang . ctxpush [ i ]		4772301	1					
ANR	4772390	Argument	egg -> lang . ctxpush [ i ]		4772301	0					
ANR	4772391	ArrayIndexing	egg -> lang . ctxpush [ i ]		4772301	0					
ANR	4772392	MemberAccess	egg -> lang . ctxpush		4772301	0					
ANR	4772393	PtrMemberAccess	egg -> lang		4772301	0					
ANR	4772394	Identifier	egg		4772301	0					
ANR	4772395	Identifier	lang		4772301	1					
ANR	4772396	Identifier	ctxpush		4772301	1					
ANR	4772397	Identifier	i		4772301	1					
ANR	4772398	ReturnType	R_API void		4772301	1					
ANR	4772399	Identifier	r_egg_lang_free		4772301	2					
ANR	4772400	ParameterList	REgg * egg		4772301	3					
ANR	4772401	Parameter	REgg * egg	135:27:2438:2446	4772301	0	True				
ANR	4772402	ParameterType	REgg *		4772301	0					
ANR	4772403	Identifier	egg		4772301	1					
ANR	4772404	CFGEntryNode	ENTRY		4772301		True				
ANR	4772405	CFGExitNode	EXIT		4772301		True				
ANR	4772406	Symbol	egg		4772301						
ANR	4772407	Symbol	egg -> lang . ctxpush		4772301						
ANR	4772408	Symbol	i		4772301						
ANR	4772409	Symbol	* egg -> lang . ctxpush		4772301						
ANR	4772410	Symbol	egg -> lang		4772301						
ANR	4772411	Symbol	* egg -> lang		4772301						
ANR	4772412	Symbol	* egg		4772301						
ANR	4772413	Symbol	* egg -> lang . syscalls		4772301						
ANR	4772414	Symbol	egg -> lang . syscalls		4772301						
ANR	4772415	Symbol	* i		4772301						
ANR	4772416	Symbol	len		4772301						
ANR	4772417	Symbol	egg -> lang . nsyscalls		4772301						
ANR	4772418	Symbol	* * egg		4772301						
ANR	4772419	Symbol	egg -> lang . syscalls [ i ] . arg		4772301						
ANR	4772420	Symbol	egg -> lang . syscalls [ i ] . name		4772301						
ANR	4772421	Function	r_egg_lang_include_path	148:0:2713:3096							
ANR	4772422	FunctionDef	"r_egg_lang_include_path (REgg * egg , const char * path)"		4772421	0					
ANR	4772423	CompoundStatement		148:64:2777:3096	4772421	0					
ANR	4772424	IdentifierDeclStatement	char * tmp_ptr = NULL ;	149:1:2780:2800	4772421	0	True				
ANR	4772425	IdentifierDecl	* tmp_ptr = NULL		4772421	0					
ANR	4772426	IdentifierDeclType	char *		4772421	0					
ANR	4772427	Identifier	tmp_ptr		4772421	1					
ANR	4772428	AssignmentExpression	* tmp_ptr = NULL		4772421	2		=			
ANR	4772429	Identifier	NULL		4772421	0					
ANR	4772430	Identifier	NULL		4772421	1					
ANR	4772431	IdentifierDeclStatement	char * env = r_sys_getenv ( R_EGG_INCDIR_ENV ) ;	150:1:2803:2846	4772421	1	True				
ANR	4772432	IdentifierDecl	* env = r_sys_getenv ( R_EGG_INCDIR_ENV )		4772421	0					
ANR	4772433	IdentifierDeclType	char *		4772421	0					
ANR	4772434	Identifier	env		4772421	1					
ANR	4772435	AssignmentExpression	* env = r_sys_getenv ( R_EGG_INCDIR_ENV )		4772421	2		=			
ANR	4772436	Identifier	env		4772421	0					
ANR	4772437	CallExpression	r_sys_getenv ( R_EGG_INCDIR_ENV )		4772421	1					
ANR	4772438	Callee	r_sys_getenv		4772421	0					
ANR	4772439	Identifier	r_sys_getenv		4772421	0					
ANR	4772440	ArgumentList	R_EGG_INCDIR_ENV		4772421	1					
ANR	4772441	Argument	R_EGG_INCDIR_ENV		4772421	0					
ANR	4772442	Identifier	R_EGG_INCDIR_ENV		4772421	0					
ANR	4772443	IfStatement	if ( ! env || ! * env )		4772421	2					
ANR	4772444	Condition	! env || ! * env	151:5:2853:2865	4772421	0	True				
ANR	4772445	OrExpression	! env || ! * env		4772421	0		||			
ANR	4772446	UnaryOperationExpression	! env		4772421	0					
ANR	4772447	UnaryOperator	!		4772421	0					
ANR	4772448	Identifier	env		4772421	1					
ANR	4772449	UnaryOperationExpression	! * env		4772421	1					
ANR	4772450	UnaryOperator	!		4772421	0					
ANR	4772451	UnaryOperationExpression	* env		4772421	1					
ANR	4772452	UnaryOperator	*		4772421	0					
ANR	4772453	Identifier	env		4772421	1					
ANR	4772454	CompoundStatement		4:20:90:90	4772421	1					
ANR	4772455	ExpressionStatement	r_egg_lang_include_init ( egg )	152:2:2872:2901	4772421	0	True				
ANR	4772456	CallExpression	r_egg_lang_include_init ( egg )		4772421	0					
ANR	4772457	Callee	r_egg_lang_include_init		4772421	0					
ANR	4772458	Identifier	r_egg_lang_include_init		4772421	0					
ANR	4772459	ArgumentList	egg		4772421	1					
ANR	4772460	Argument	egg		4772421	0					
ANR	4772461	Identifier	egg		4772421	0					
ANR	4772462	ExpressionStatement	free ( env )	153:2:2905:2915	4772421	1	True				
ANR	4772463	CallExpression	free ( env )		4772421	0					
ANR	4772464	Callee	free		4772421	0					
ANR	4772465	Identifier	free		4772421	0					
ANR	4772466	ArgumentList	env		4772421	1					
ANR	4772467	Argument	env		4772421	0					
ANR	4772468	Identifier	env		4772421	0					
ANR	4772469	ExpressionStatement	env = r_sys_getenv ( R_EGG_INCDIR_ENV )	154:2:2919:2956	4772421	2	True				
ANR	4772470	AssignmentExpression	env = r_sys_getenv ( R_EGG_INCDIR_ENV )		4772421	0		=			
ANR	4772471	Identifier	env		4772421	0					
ANR	4772472	CallExpression	r_sys_getenv ( R_EGG_INCDIR_ENV )		4772421	1					
ANR	4772473	Callee	r_sys_getenv		4772421	0					
ANR	4772474	Identifier	r_sys_getenv		4772421	0					
ANR	4772475	ArgumentList	R_EGG_INCDIR_ENV		4772421	1					
ANR	4772476	Argument	R_EGG_INCDIR_ENV		4772421	0					
ANR	4772477	Identifier	R_EGG_INCDIR_ENV		4772421	0					
ANR	4772478	ExpressionStatement	tmp_ptr = env	155:2:2960:2973	4772421	3	True				
ANR	4772479	AssignmentExpression	tmp_ptr = env		4772421	0		=			
ANR	4772480	Identifier	tmp_ptr		4772421	0					
ANR	4772481	Identifier	env		4772421	1					
ANR	4772482	ExpressionStatement	"env = r_str_appendf ( NULL , ""%s:%s"" , path , env )"	157:1:2979:3025	4772421	3	True				
ANR	4772483	AssignmentExpression	"env = r_str_appendf ( NULL , ""%s:%s"" , path , env )"		4772421	0		=			
ANR	4772484	Identifier	env		4772421	0					
ANR	4772485	CallExpression	"r_str_appendf ( NULL , ""%s:%s"" , path , env )"		4772421	1					
ANR	4772486	Callee	r_str_appendf		4772421	0					
ANR	4772487	Identifier	r_str_appendf		4772421	0					
ANR	4772488	ArgumentList	NULL		4772421	1					
ANR	4772489	Argument	NULL		4772421	0					
ANR	4772490	Identifier	NULL		4772421	0					
ANR	4772491	Argument	"""%s:%s"""		4772421	1					
ANR	4772492	PrimaryExpression	"""%s:%s"""		4772421	0					
ANR	4772493	Argument	path		4772421	2					
ANR	4772494	Identifier	path		4772421	0					
ANR	4772495	Argument	env		4772421	3					
ANR	4772496	Identifier	env		4772421	0					
ANR	4772497	ExpressionStatement	free ( tmp_ptr )	158:1:3028:3042	4772421	4	True				
ANR	4772498	CallExpression	free ( tmp_ptr )		4772421	0					
ANR	4772499	Callee	free		4772421	0					
ANR	4772500	Identifier	free		4772421	0					
ANR	4772501	ArgumentList	tmp_ptr		4772421	1					
ANR	4772502	Argument	tmp_ptr		4772421	0					
ANR	4772503	Identifier	tmp_ptr		4772421	0					
ANR	4772504	ExpressionStatement	"r_sys_setenv ( R_EGG_INCDIR_ENV , env )"	159:1:3045:3081	4772421	5	True				
ANR	4772505	CallExpression	"r_sys_setenv ( R_EGG_INCDIR_ENV , env )"		4772421	0					
ANR	4772506	Callee	r_sys_setenv		4772421	0					
ANR	4772507	Identifier	r_sys_setenv		4772421	0					
ANR	4772508	ArgumentList	R_EGG_INCDIR_ENV		4772421	1					
ANR	4772509	Argument	R_EGG_INCDIR_ENV		4772421	0					
ANR	4772510	Identifier	R_EGG_INCDIR_ENV		4772421	0					
ANR	4772511	Argument	env		4772421	1					
ANR	4772512	Identifier	env		4772421	0					
ANR	4772513	ExpressionStatement	free ( env )	160:1:3084:3094	4772421	6	True				
ANR	4772514	CallExpression	free ( env )		4772421	0					
ANR	4772515	Callee	free		4772421	0					
ANR	4772516	Identifier	free		4772421	0					
ANR	4772517	ArgumentList	env		4772421	1					
ANR	4772518	Argument	env		4772421	0					
ANR	4772519	Identifier	env		4772421	0					
ANR	4772520	ReturnType	R_API void		4772421	1					
ANR	4772521	Identifier	r_egg_lang_include_path		4772421	2					
ANR	4772522	ParameterList	"REgg * egg , const char * path"		4772421	3					
ANR	4772523	Parameter	REgg * egg	148:35:2748:2756	4772421	0	True				
ANR	4772524	ParameterType	REgg *		4772421	0					
ANR	4772525	Identifier	egg		4772421	1					
ANR	4772526	Parameter	const char * path	148:46:2759:2774	4772421	1	True				
ANR	4772527	ParameterType	const char *		4772421	0					
ANR	4772528	Identifier	path		4772421	1					
ANR	4772529	CFGEntryNode	ENTRY		4772421		True				
ANR	4772530	CFGExitNode	EXIT		4772421		True				
ANR	4772531	Symbol	path		4772421						
ANR	4772532	Symbol	NULL		4772421						
ANR	4772533	Symbol	egg		4772421						
ANR	4772534	Symbol	r_sys_getenv		4772421						
ANR	4772535	Symbol	r_str_appendf		4772421						
ANR	4772536	Symbol	* env		4772421						
ANR	4772537	Symbol	tmp_ptr		4772421						
ANR	4772538	Symbol	env		4772421						
ANR	4772539	Symbol	R_EGG_INCDIR_ENV		4772421						
ANR	4772540	Function	r_egg_lang_include_init	163:0:3099:3270							
ANR	4772541	FunctionDef	r_egg_lang_include_init (REgg * egg)		4772540	0					
ANR	4772542	CompoundStatement		163:46:3145:3270	4772540	0					
ANR	4772543	IdentifierDeclStatement	"char * s = r_str_newf ( "".:%s/%s"" , r_sys_prefix ( NULL ) , R_EGG_INCDIR_PATH ) ;"	164:1:3148:3220	4772540	0	True				
ANR	4772544	IdentifierDecl	"* s = r_str_newf ( "".:%s/%s"" , r_sys_prefix ( NULL ) , R_EGG_INCDIR_PATH )"		4772540	0					
ANR	4772545	IdentifierDeclType	char *		4772540	0					
ANR	4772546	Identifier	s		4772540	1					
ANR	4772547	AssignmentExpression	"* s = r_str_newf ( "".:%s/%s"" , r_sys_prefix ( NULL ) , R_EGG_INCDIR_PATH )"		4772540	2		=			
ANR	4772548	Identifier	s		4772540	0					
ANR	4772549	CallExpression	"r_str_newf ( "".:%s/%s"" , r_sys_prefix ( NULL ) , R_EGG_INCDIR_PATH )"		4772540	1					
ANR	4772550	Callee	r_str_newf		4772540	0					
ANR	4772551	Identifier	r_str_newf		4772540	0					
ANR	4772552	ArgumentList	""".:%s/%s"""		4772540	1					
ANR	4772553	Argument	""".:%s/%s"""		4772540	0					
ANR	4772554	PrimaryExpression	""".:%s/%s"""		4772540	0					
ANR	4772555	Argument	r_sys_prefix ( NULL )		4772540	1					
ANR	4772556	CallExpression	r_sys_prefix ( NULL )		4772540	0					
ANR	4772557	Callee	r_sys_prefix		4772540	0					
ANR	4772558	Identifier	r_sys_prefix		4772540	0					
ANR	4772559	ArgumentList	NULL		4772540	1					
ANR	4772560	Argument	NULL		4772540	0					
ANR	4772561	Identifier	NULL		4772540	0					
ANR	4772562	Argument	R_EGG_INCDIR_PATH		4772540	2					
ANR	4772563	Identifier	R_EGG_INCDIR_PATH		4772540	0					
ANR	4772564	ExpressionStatement	"r_sys_setenv ( R_EGG_INCDIR_ENV , s )"	165:1:3223:3257	4772540	1	True				
ANR	4772565	CallExpression	"r_sys_setenv ( R_EGG_INCDIR_ENV , s )"		4772540	0					
ANR	4772566	Callee	r_sys_setenv		4772540	0					
ANR	4772567	Identifier	r_sys_setenv		4772540	0					
ANR	4772568	ArgumentList	R_EGG_INCDIR_ENV		4772540	1					
ANR	4772569	Argument	R_EGG_INCDIR_ENV		4772540	0					
ANR	4772570	Identifier	R_EGG_INCDIR_ENV		4772540	0					
ANR	4772571	Argument	s		4772540	1					
ANR	4772572	Identifier	s		4772540	0					
ANR	4772573	ExpressionStatement	free ( s )	166:1:3260:3268	4772540	2	True				
ANR	4772574	CallExpression	free ( s )		4772540	0					
ANR	4772575	Callee	free		4772540	0					
ANR	4772576	Identifier	free		4772540	0					
ANR	4772577	ArgumentList	s		4772540	1					
ANR	4772578	Argument	s		4772540	0					
ANR	4772579	Identifier	s		4772540	0					
ANR	4772580	ReturnType	R_API void		4772540	1					
ANR	4772581	Identifier	r_egg_lang_include_init		4772540	2					
ANR	4772582	ParameterList	REgg * egg		4772540	3					
ANR	4772583	Parameter	REgg * egg	163:35:3134:3142	4772540	0	True				
ANR	4772584	ParameterType	REgg *		4772540	0					
ANR	4772585	Identifier	egg		4772540	1					
ANR	4772586	CFGEntryNode	ENTRY		4772540		True				
ANR	4772587	CFGExitNode	EXIT		4772540		True				
ANR	4772588	Symbol	s		4772540						
ANR	4772589	Symbol	NULL		4772540						
ANR	4772590	Symbol	egg		4772540						
ANR	4772591	Symbol	R_EGG_INCDIR_PATH		4772540						
ANR	4772592	Symbol	r_str_newf		4772540						
ANR	4772593	Symbol	r_sys_prefix		4772540						
ANR	4772594	Symbol	R_EGG_INCDIR_ENV		4772540						
ANR	4772595	Function	rcc_set_callname	169:0:3273:3510							
ANR	4772596	FunctionDef	"rcc_set_callname (REgg * egg , const char * s)"		4772595	0					
ANR	4772597	CompoundStatement		169:55:3328:3510	4772595	0					
ANR	4772598	ExpressionStatement	R_FREE ( egg -> lang . callname )	170:1:3331:3358	4772595	0	True				
ANR	4772599	CallExpression	R_FREE ( egg -> lang . callname )		4772595	0					
ANR	4772600	Callee	R_FREE		4772595	0					
ANR	4772601	Identifier	R_FREE		4772595	0					
ANR	4772602	ArgumentList	egg -> lang . callname		4772595	1					
ANR	4772603	Argument	egg -> lang . callname		4772595	0					
ANR	4772604	MemberAccess	egg -> lang . callname		4772595	0					
ANR	4772605	PtrMemberAccess	egg -> lang		4772595	0					
ANR	4772606	Identifier	egg		4772595	0					
ANR	4772607	Identifier	lang		4772595	1					
ANR	4772608	Identifier	callname		4772595	1					
ANR	4772609	ExpressionStatement	egg -> lang . nargs = 0	171:1:3361:3380	4772595	1	True				
ANR	4772610	AssignmentExpression	egg -> lang . nargs = 0		4772595	0		=			
ANR	4772611	MemberAccess	egg -> lang . nargs		4772595	0					
ANR	4772612	PtrMemberAccess	egg -> lang		4772595	0					
ANR	4772613	Identifier	egg		4772595	0					
ANR	4772614	Identifier	lang		4772595	1					
ANR	4772615	Identifier	nargs		4772595	1					
ANR	4772616	PrimaryExpression	0		4772595	1					
ANR	4772617	ExpressionStatement	egg -> lang . callname = trim ( strdup ( skipspaces ( s ) ) )	172:1:3383:3434	4772595	2	True				
ANR	4772618	AssignmentExpression	egg -> lang . callname = trim ( strdup ( skipspaces ( s ) ) )		4772595	0		=			
ANR	4772619	MemberAccess	egg -> lang . callname		4772595	0					
ANR	4772620	PtrMemberAccess	egg -> lang		4772595	0					
ANR	4772621	Identifier	egg		4772595	0					
ANR	4772622	Identifier	lang		4772595	1					
ANR	4772623	Identifier	callname		4772595	1					
ANR	4772624	CallExpression	trim ( strdup ( skipspaces ( s ) ) )		4772595	1					
ANR	4772625	Callee	trim		4772595	0					
ANR	4772626	Identifier	trim		4772595	0					
ANR	4772627	ArgumentList	strdup ( skipspaces ( s ) )		4772595	1					
ANR	4772628	Argument	strdup ( skipspaces ( s ) )		4772595	0					
ANR	4772629	CallExpression	strdup ( skipspaces ( s ) )		4772595	0					
ANR	4772630	Callee	strdup		4772595	0					
ANR	4772631	Identifier	strdup		4772595	0					
ANR	4772632	ArgumentList	skipspaces ( s )		4772595	1					
ANR	4772633	Argument	skipspaces ( s )		4772595	0					
ANR	4772634	CallExpression	skipspaces ( s )		4772595	0					
ANR	4772635	Callee	skipspaces		4772595	0					
ANR	4772636	Identifier	skipspaces		4772595	0					
ANR	4772637	ArgumentList	s		4772595	1					
ANR	4772638	Argument	s		4772595	0					
ANR	4772639	Identifier	s		4772595	0					
ANR	4772640	ExpressionStatement	"egg -> lang . pushargs = ! ( ( ! strcmp ( s , ""goto"" ) ) || ( ! strcmp ( s , ""break"" ) ) )"	173:1:3437:3508	4772595	3	True				
ANR	4772641	AssignmentExpression	"egg -> lang . pushargs = ! ( ( ! strcmp ( s , ""goto"" ) ) || ( ! strcmp ( s , ""break"" ) ) )"		4772595	0		=			
ANR	4772642	MemberAccess	egg -> lang . pushargs		4772595	0					
ANR	4772643	PtrMemberAccess	egg -> lang		4772595	0					
ANR	4772644	Identifier	egg		4772595	0					
ANR	4772645	Identifier	lang		4772595	1					
ANR	4772646	Identifier	pushargs		4772595	1					
ANR	4772647	UnaryOperationExpression	"! ( ( ! strcmp ( s , ""goto"" ) ) || ( ! strcmp ( s , ""break"" ) ) )"		4772595	1					
ANR	4772648	UnaryOperator	!		4772595	0					
ANR	4772649	OrExpression	"( ! strcmp ( s , ""goto"" ) ) || ( ! strcmp ( s , ""break"" ) )"		4772595	1		||			
ANR	4772650	UnaryOperationExpression	"! strcmp ( s , ""goto"" )"		4772595	0					
ANR	4772651	UnaryOperator	!		4772595	0					
ANR	4772652	CallExpression	"strcmp ( s , ""goto"" )"		4772595	1					
ANR	4772653	Callee	strcmp		4772595	0					
ANR	4772654	Identifier	strcmp		4772595	0					
ANR	4772655	ArgumentList	s		4772595	1					
ANR	4772656	Argument	s		4772595	0					
ANR	4772657	Identifier	s		4772595	0					
ANR	4772658	Argument	"""goto"""		4772595	1					
ANR	4772659	PrimaryExpression	"""goto"""		4772595	0					
ANR	4772660	UnaryOperationExpression	"! strcmp ( s , ""break"" )"		4772595	1					
ANR	4772661	UnaryOperator	!		4772595	0					
ANR	4772662	CallExpression	"strcmp ( s , ""break"" )"		4772595	1					
ANR	4772663	Callee	strcmp		4772595	0					
ANR	4772664	Identifier	strcmp		4772595	0					
ANR	4772665	ArgumentList	s		4772595	1					
ANR	4772666	Argument	s		4772595	0					
ANR	4772667	Identifier	s		4772595	0					
ANR	4772668	Argument	"""break"""		4772595	1					
ANR	4772669	PrimaryExpression	"""break"""		4772595	0					
ANR	4772670	ReturnType	static void		4772595	1					
ANR	4772671	Identifier	rcc_set_callname		4772595	2					
ANR	4772672	ParameterList	"REgg * egg , const char * s"		4772595	3					
ANR	4772673	Parameter	REgg * egg	169:29:3302:3310	4772595	0	True				
ANR	4772674	ParameterType	REgg *		4772595	0					
ANR	4772675	Identifier	egg		4772595	1					
ANR	4772676	Parameter	const char * s	169:40:3313:3325	4772595	1	True				
ANR	4772677	ParameterType	const char *		4772595	0					
ANR	4772678	Identifier	s		4772595	1					
ANR	4772679	CFGEntryNode	ENTRY		4772595		True				
ANR	4772680	CFGExitNode	EXIT		4772595		True				
ANR	4772681	Symbol	* egg		4772595						
ANR	4772682	Symbol	strcmp		4772595						
ANR	4772683	Symbol	s		4772595						
ANR	4772684	Symbol	egg		4772595						
ANR	4772685	Symbol	trim		4772595						
ANR	4772686	Symbol	egg -> lang . pushargs		4772595						
ANR	4772687	Symbol	egg -> lang . nargs		4772595						
ANR	4772688	Symbol	egg -> lang . callname		4772595						
ANR	4772689	Symbol	strdup		4772595						
ANR	4772690	Symbol	egg -> lang		4772595						
ANR	4772691	Symbol	skipspaces		4772595						
ANR	4772692	Function	rcc_reset_callname	176:0:3513:3609							
ANR	4772693	FunctionDef	rcc_reset_callname (REgg * egg)		4772692	0					
ANR	4772694	CompoundStatement		176:42:3555:3609	4772692	0					
ANR	4772695	ExpressionStatement	R_FREE ( egg -> lang . callname )	177:1:3558:3585	4772692	0	True				
ANR	4772696	CallExpression	R_FREE ( egg -> lang . callname )		4772692	0					
ANR	4772697	Callee	R_FREE		4772692	0					
ANR	4772698	Identifier	R_FREE		4772692	0					
ANR	4772699	ArgumentList	egg -> lang . callname		4772692	1					
ANR	4772700	Argument	egg -> lang . callname		4772692	0					
ANR	4772701	MemberAccess	egg -> lang . callname		4772692	0					
ANR	4772702	PtrMemberAccess	egg -> lang		4772692	0					
ANR	4772703	Identifier	egg		4772692	0					
ANR	4772704	Identifier	lang		4772692	1					
ANR	4772705	Identifier	callname		4772692	1					
ANR	4772706	ExpressionStatement	egg -> lang . nargs = 0	178:1:3588:3607	4772692	1	True				
ANR	4772707	AssignmentExpression	egg -> lang . nargs = 0		4772692	0		=			
ANR	4772708	MemberAccess	egg -> lang . nargs		4772692	0					
ANR	4772709	PtrMemberAccess	egg -> lang		4772692	0					
ANR	4772710	Identifier	egg		4772692	0					
ANR	4772711	Identifier	lang		4772692	1					
ANR	4772712	Identifier	nargs		4772692	1					
ANR	4772713	PrimaryExpression	0		4772692	1					
ANR	4772714	ReturnType	static void		4772692	1					
ANR	4772715	Identifier	rcc_reset_callname		4772692	2					
ANR	4772716	ParameterList	REgg * egg		4772692	3					
ANR	4772717	Parameter	REgg * egg	176:31:3544:3552	4772692	0	True				
ANR	4772718	ParameterType	REgg *		4772692	0					
ANR	4772719	Identifier	egg		4772692	1					
ANR	4772720	CFGEntryNode	ENTRY		4772692		True				
ANR	4772721	CFGExitNode	EXIT		4772692		True				
ANR	4772722	Symbol	* egg		4772692						
ANR	4772723	Symbol	egg		4772692						
ANR	4772724	Symbol	egg -> lang . nargs		4772692						
ANR	4772725	Symbol	egg -> lang . callname		4772692						
ANR	4772726	Symbol	egg -> lang		4772692						
ANR	4772727	Function	get_frame_label	191:0:3830:4214							
ANR	4772728	FunctionDef	get_frame_label (int type)		4772727	0					
ANR	4772729	CompoundStatement		191:39:3869:4214	4772727	0					
ANR	4772730	Statement	static	192:1:3872:3877	4772727	0	True				
ANR	4772731	IdentifierDeclStatement	char label [ 128 ] ;	192:8:3879:3894	4772727	1	True				
ANR	4772732	IdentifierDecl	label [ 128 ]		4772727	0					
ANR	4772733	IdentifierDeclType	char [ 128 ]		4772727	0					
ANR	4772734	Identifier	label		4772727	1					
ANR	4772735	PrimaryExpression	128		4772727	2					
ANR	4772736	IdentifierDeclStatement	int nf = egg -> lang . nfunctions ;	193:1:3897:3926	4772727	2	True				
ANR	4772737	IdentifierDecl	nf = egg -> lang . nfunctions		4772727	0					
ANR	4772738	IdentifierDeclType	int		4772727	0					
ANR	4772739	Identifier	nf		4772727	1					
ANR	4772740	AssignmentExpression	nf = egg -> lang . nfunctions		4772727	2		=			
ANR	4772741	Identifier	nf		4772727	0					
ANR	4772742	MemberAccess	egg -> lang . nfunctions		4772727	1					
ANR	4772743	PtrMemberAccess	egg -> lang		4772727	0					
ANR	4772744	Identifier	egg		4772727	0					
ANR	4772745	Identifier	lang		4772727	1					
ANR	4772746	Identifier	nfunctions		4772727	1					
ANR	4772747	IdentifierDeclStatement	int nb = egg -> lang . nbrackets ;	194:1:3929:3957	4772727	3	True				
ANR	4772748	IdentifierDecl	nb = egg -> lang . nbrackets		4772727	0					
ANR	4772749	IdentifierDeclType	int		4772727	0					
ANR	4772750	Identifier	nb		4772727	1					
ANR	4772751	AssignmentExpression	nb = egg -> lang . nbrackets		4772727	2		=			
ANR	4772752	Identifier	nb		4772727	0					
ANR	4772753	MemberAccess	egg -> lang . nbrackets		4772727	1					
ANR	4772754	PtrMemberAccess	egg -> lang		4772727	0					
ANR	4772755	Identifier	egg		4772727	0					
ANR	4772756	Identifier	lang		4772727	1					
ANR	4772757	Identifier	nbrackets		4772727	1					
ANR	4772758	IdentifierDeclStatement	int ct = context ;	195:1:3960:3976	4772727	4	True				
ANR	4772759	IdentifierDecl	ct = context		4772727	0					
ANR	4772760	IdentifierDeclType	int		4772727	0					
ANR	4772761	Identifier	ct		4772727	1					
ANR	4772762	AssignmentExpression	ct = context		4772727	2		=			
ANR	4772763	Identifier	context		4772727	0					
ANR	4772764	Identifier	context		4772727	1					
ANR	4772765	IfStatement	if ( type == 1 )		4772727	5					
ANR	4772766	Condition	type == 1	198:5:4053:4061	4772727	0	True				
ANR	4772767	EqualityExpression	type == 1		4772727	0		==			
ANR	4772768	Identifier	type		4772727	0					
ANR	4772769	PrimaryExpression	1		4772727	1					
ANR	4772770	CompoundStatement		8:16:194:194	4772727	1					
ANR	4772771	ExpressionStatement	nb --	199:2:4068:4072	4772727	0	True				
ANR	4772772	PostIncDecOperationExpression	nb --		4772727	0					
ANR	4772773	Identifier	nb		4772727	0					
ANR	4772774	IncDec	--		4772727	1					
ANR	4772775	ElseStatement	else		4772727	0					
ANR	4772776	IfStatement	if ( type == 2 )		4772727	0					
ANR	4772777	Condition	type == 2	200:12:4086:4094	4772727	0	True				
ANR	4772778	EqualityExpression	type == 2		4772727	0		==			
ANR	4772779	Identifier	type		4772727	0					
ANR	4772780	PrimaryExpression	2		4772727	1					
ANR	4772781	CompoundStatement		10:23:227:227	4772727	1					
ANR	4772782	ExpressionStatement	ct --	201:2:4101:4105	4772727	0	True				
ANR	4772783	PostIncDecOperationExpression	ct --		4772727	0					
ANR	4772784	Identifier	ct		4772727	0					
ANR	4772785	IncDec	--		4772727	1					
ANR	4772786	ExpressionStatement	"snprintf ( label , sizeof ( label ) , FRAME_FMT , nf , nb , ct )"	205:1:4142:4197	4772727	6	True				
ANR	4772787	CallExpression	"snprintf ( label , sizeof ( label ) , FRAME_FMT , nf , nb , ct )"		4772727	0					
ANR	4772788	Callee	snprintf		4772727	0					
ANR	4772789	Identifier	snprintf		4772727	0					
ANR	4772790	ArgumentList	label		4772727	1					
ANR	4772791	Argument	label		4772727	0					
ANR	4772792	Identifier	label		4772727	0					
ANR	4772793	Argument	sizeof ( label )		4772727	1					
ANR	4772794	SizeofExpression	sizeof ( label )		4772727	0					
ANR	4772795	Sizeof	sizeof		4772727	0					
ANR	4772796	SizeofOperand	label		4772727	1					
ANR	4772797	Argument	FRAME_FMT		4772727	2					
ANR	4772798	Identifier	FRAME_FMT		4772727	0					
ANR	4772799	Argument	nf		4772727	3					
ANR	4772800	Identifier	nf		4772727	0					
ANR	4772801	Argument	nb		4772727	4					
ANR	4772802	Identifier	nb		4772727	0					
ANR	4772803	Argument	ct		4772727	5					
ANR	4772804	Identifier	ct		4772727	0					
ANR	4772805	ReturnStatement	return label ;	206:1:4200:4212	4772727	7	True				
ANR	4772806	Identifier	label		4772727	0					
ANR	4772807	ReturnType	static char *		4772727	1					
ANR	4772808	Identifier	get_frame_label		4772727	2					
ANR	4772809	ParameterList	int type		4772727	3					
ANR	4772810	Parameter	int type	191:29:3859:3866	4772727	0	True				
ANR	4772811	ParameterType	int		4772727	0					
ANR	4772812	Identifier	type		4772727	1					
ANR	4772813	CFGEntryNode	ENTRY		4772727		True				
ANR	4772814	CFGExitNode	EXIT		4772727		True				
ANR	4772815	Symbol	* egg		4772727						
ANR	4772816	Symbol	ct		4772727						
ANR	4772817	Symbol	FRAME_FMT		4772727						
ANR	4772818	Symbol	egg		4772727						
ANR	4772819	Symbol	nb		4772727						
ANR	4772820	Symbol	nf		4772727						
ANR	4772821	Symbol	egg -> lang . nbrackets		4772727						
ANR	4772822	Symbol	context		4772727						
ANR	4772823	Symbol	egg -> lang . nfunctions		4772727						
ANR	4772824	Symbol	label		4772727						
ANR	4772825	Symbol	type		4772727						
ANR	4772826	Symbol	egg -> lang		4772727						
ANR	4772827	Function	get_end_frame_label	209:0:4217:4622							
ANR	4772828	FunctionDef	get_end_frame_label (REgg * egg)		4772827	0					
ANR	4772829	CompoundStatement		209:44:4261:4622	4772827	0					
ANR	4772830	Statement	static	210:1:4264:4269	4772827	0	True				
ANR	4772831	IdentifierDeclStatement	char label [ 128 ] ;	210:8:4271:4286	4772827	1	True				
ANR	4772832	IdentifierDecl	label [ 128 ]		4772827	0					
ANR	4772833	IdentifierDeclType	char [ 128 ]		4772827	0					
ANR	4772834	Identifier	label		4772827	1					
ANR	4772835	PrimaryExpression	128		4772827	2					
ANR	4772836	ExpressionStatement	"snprintf ( label , sizeof ( label ) - 1 , FRAME_END_FMT , egg -> lang . nfunctions , egg -> lang . nbrackets , context - 1 )"	211:1:4289:4398	4772827	2	True				
ANR	4772837	CallExpression	"snprintf ( label , sizeof ( label ) - 1 , FRAME_END_FMT , egg -> lang . nfunctions , egg -> lang . nbrackets , context - 1 )"		4772827	0					
ANR	4772838	Callee	snprintf		4772827	0					
ANR	4772839	Identifier	snprintf		4772827	0					
ANR	4772840	ArgumentList	label		4772827	1					
ANR	4772841	Argument	label		4772827	0					
ANR	4772842	Identifier	label		4772827	0					
ANR	4772843	Argument	sizeof ( label ) - 1		4772827	1					
ANR	4772844	AdditiveExpression	sizeof ( label ) - 1		4772827	0		-			
ANR	4772845	SizeofExpression	sizeof ( label )		4772827	0					
ANR	4772846	Sizeof	sizeof		4772827	0					
ANR	4772847	SizeofOperand	label		4772827	1					
ANR	4772848	PrimaryExpression	1		4772827	1					
ANR	4772849	Argument	FRAME_END_FMT		4772827	2					
ANR	4772850	Identifier	FRAME_END_FMT		4772827	0					
ANR	4772851	Argument	egg -> lang . nfunctions		4772827	3					
ANR	4772852	MemberAccess	egg -> lang . nfunctions		4772827	0					
ANR	4772853	PtrMemberAccess	egg -> lang		4772827	0					
ANR	4772854	Identifier	egg		4772827	0					
ANR	4772855	Identifier	lang		4772827	1					
ANR	4772856	Identifier	nfunctions		4772827	1					
ANR	4772857	Argument	egg -> lang . nbrackets		4772827	4					
ANR	4772858	MemberAccess	egg -> lang . nbrackets		4772827	0					
ANR	4772859	PtrMemberAccess	egg -> lang		4772827	0					
ANR	4772860	Identifier	egg		4772827	0					
ANR	4772861	Identifier	lang		4772827	1					
ANR	4772862	Identifier	nbrackets		4772827	1					
ANR	4772863	Argument	context - 1		4772827	5					
ANR	4772864	AdditiveExpression	context - 1		4772827	0		-			
ANR	4772865	Identifier	context		4772827	0					
ANR	4772866	PrimaryExpression	1		4772827	1					
ANR	4772867	ReturnStatement	return label ;	215:1:4608:4620	4772827	3	True				
ANR	4772868	Identifier	label		4772827	0					
ANR	4772869	ReturnType	static char *		4772827	1					
ANR	4772870	Identifier	get_end_frame_label		4772827	2					
ANR	4772871	ParameterList	REgg * egg		4772827	3					
ANR	4772872	Parameter	REgg * egg	209:33:4250:4258	4772827	0	True				
ANR	4772873	ParameterType	REgg *		4772827	0					
ANR	4772874	Identifier	egg		4772827	1					
ANR	4772875	CFGEntryNode	ENTRY		4772827		True				
ANR	4772876	CFGExitNode	EXIT		4772827		True				
ANR	4772877	Symbol	* egg		4772827						
ANR	4772878	Symbol	FRAME_END_FMT		4772827						
ANR	4772879	Symbol	egg		4772827						
ANR	4772880	Symbol	context		4772827						
ANR	4772881	Symbol	egg -> lang . nbrackets		4772827						
ANR	4772882	Symbol	egg -> lang . nfunctions		4772827						
ANR	4772883	Symbol	label		4772827						
ANR	4772884	Symbol	egg -> lang		4772827						
ANR	4772885	Function	find_alias	219:0:4632:5140							
ANR	4772886	FunctionDef	"find_alias (REgg * egg , const char * str)"		4772885	0					
ANR	4772887	CompoundStatement		219:58:4690:5140	4772885	0					
ANR	4772888	IdentifierDeclStatement	char * p = ( char * ) str ;	221:1:4755:4777	4772885	0	True				
ANR	4772889	IdentifierDecl	* p = ( char * ) str		4772885	0					
ANR	4772890	IdentifierDeclType	char *		4772885	0					
ANR	4772891	Identifier	p		4772885	1					
ANR	4772892	AssignmentExpression	* p = ( char * ) str		4772885	2		=			
ANR	4772893	Identifier	p		4772885	0					
ANR	4772894	CastExpression	( char * ) str		4772885	1					
ANR	4772895	CastTarget	char *		4772885	0					
ANR	4772896	Identifier	str		4772885	1					
ANR	4772897	IdentifierDeclStatement	int i ;	222:1:4780:4785	4772885	1	True				
ANR	4772898	IdentifierDecl	i		4772885	0					
ANR	4772899	IdentifierDeclType	int		4772885	0					
ANR	4772900	Identifier	i		4772885	1					
ANR	4772901	IfStatement	"if ( * str == '""' )"		4772885	2					
ANR	4772902	Condition	"* str == '""'"	223:5:4792:4802	4772885	0	True				
ANR	4772903	EqualityExpression	"* str == '""'"		4772885	0		==			
ANR	4772904	UnaryOperationExpression	* str		4772885	0					
ANR	4772905	UnaryOperator	*		4772885	0					
ANR	4772906	Identifier	str		4772885	1					
ANR	4772907	PrimaryExpression	"'""'"		4772885	1					
ANR	4772908	CompoundStatement		5:18:114:114	4772885	1					
ANR	4772909	ReturnStatement	return strdup ( str ) ;	224:2:4809:4828	4772885	0	True				
ANR	4772910	CallExpression	strdup ( str )		4772885	0					
ANR	4772911	Callee	strdup		4772885	0					
ANR	4772912	Identifier	strdup		4772885	0					
ANR	4772913	ArgumentList	str		4772885	1					
ANR	4772914	Argument	str		4772885	0					
ANR	4772915	Identifier	str		4772885	0					
ANR	4772916	WhileStatement	while ( * p && ! is_space ( * p ) )		4772885	3					
ANR	4772917	Condition	* p && ! is_space ( * p )	227:8:4877:4896	4772885	0	True				
ANR	4772918	AndExpression	* p && ! is_space ( * p )		4772885	0		&&			
ANR	4772919	UnaryOperationExpression	* p		4772885	0					
ANR	4772920	UnaryOperator	*		4772885	0					
ANR	4772921	Identifier	p		4772885	1					
ANR	4772922	UnaryOperationExpression	! is_space ( * p )		4772885	1					
ANR	4772923	UnaryOperator	!		4772885	0					
ANR	4772924	CallExpression	is_space ( * p )		4772885	1					
ANR	4772925	Callee	is_space		4772885	0					
ANR	4772926	Identifier	is_space		4772885	0					
ANR	4772927	ArgumentList	* p		4772885	1					
ANR	4772928	Argument	* p		4772885	0					
ANR	4772929	UnaryOperationExpression	* p		4772885	0					
ANR	4772930	UnaryOperator	*		4772885	0					
ANR	4772931	Identifier	p		4772885	1					
ANR	4772932	CompoundStatement		9:30:208:208	4772885	1					
ANR	4772933	ExpressionStatement	p ++	228:2:4903:4906	4772885	0	True				
ANR	4772934	PostIncDecOperationExpression	p ++		4772885	0					
ANR	4772935	Identifier	p		4772885	0					
ANR	4772936	IncDec	++		4772885	1					
ANR	4772937	ExpressionStatement	* p = x00	230:1:4912:4923	4772885	4	True				
ANR	4772938	AssignmentExpression	* p = x00		4772885	0		=			
ANR	4772939	UnaryOperationExpression	* p		4772885	0					
ANR	4772940	UnaryOperator	*		4772885	0					
ANR	4772941	Identifier	p		4772885	1					
ANR	4772942	Identifier	x00		4772885	1					
ANR	4772943	ForStatement	for ( i = 0 ; i < egg -> lang . nalias ; i ++ )		4772885	5					
ANR	4772944	ForInit	i = 0 ;	231:6:4931:4936	4772885	0	True				
ANR	4772945	AssignmentExpression	i = 0		4772885	0		=			
ANR	4772946	Identifier	i		4772885	0					
ANR	4772947	PrimaryExpression	0		4772885	1					
ANR	4772948	Condition	i < egg -> lang . nalias	231:13:4938:4957	4772885	1	True				
ANR	4772949	RelationalExpression	i < egg -> lang . nalias		4772885	0		<			
ANR	4772950	Identifier	i		4772885	0					
ANR	4772951	MemberAccess	egg -> lang . nalias		4772885	1					
ANR	4772952	PtrMemberAccess	egg -> lang		4772885	0					
ANR	4772953	Identifier	egg		4772885	0					
ANR	4772954	Identifier	lang		4772885	1					
ANR	4772955	Identifier	nalias		4772885	1					
ANR	4772956	PostIncDecOperationExpression	i ++	231:35:4960:4962	4772885	2	True				
ANR	4772957	Identifier	i		4772885	0					
ANR	4772958	IncDec	++		4772885	1					
ANR	4772959	CompoundStatement		13:40:274:274	4772885	3					
ANR	4772960	IfStatement	"if ( ! strcmp ( str , egg -> lang . aliases [ i ] . name ) )"		4772885	0					
ANR	4772961	Condition	"! strcmp ( str , egg -> lang . aliases [ i ] . name )"	232:6:4973:5012	4772885	0	True				
ANR	4772962	UnaryOperationExpression	"! strcmp ( str , egg -> lang . aliases [ i ] . name )"		4772885	0					
ANR	4772963	UnaryOperator	!		4772885	0					
ANR	4772964	CallExpression	"strcmp ( str , egg -> lang . aliases [ i ] . name )"		4772885	1					
ANR	4772965	Callee	strcmp		4772885	0					
ANR	4772966	Identifier	strcmp		4772885	0					
ANR	4772967	ArgumentList	str		4772885	1					
ANR	4772968	Argument	str		4772885	0					
ANR	4772969	Identifier	str		4772885	0					
ANR	4772970	Argument	egg -> lang . aliases [ i ] . name		4772885	1					
ANR	4772971	MemberAccess	egg -> lang . aliases [ i ] . name		4772885	0					
ANR	4772972	ArrayIndexing	egg -> lang . aliases [ i ]		4772885	0					
ANR	4772973	MemberAccess	egg -> lang . aliases		4772885	0					
ANR	4772974	PtrMemberAccess	egg -> lang		4772885	0					
ANR	4772975	Identifier	egg		4772885	0					
ANR	4772976	Identifier	lang		4772885	1					
ANR	4772977	Identifier	aliases		4772885	1					
ANR	4772978	Identifier	i		4772885	1					
ANR	4772979	Identifier	name		4772885	1					
ANR	4772980	CompoundStatement		14:48:324:324	4772885	1					
ANR	4772981	ReturnStatement	return strdup ( egg -> lang . aliases [ i ] . content ) ;	233:3:5020:5064	4772885	0	True				
ANR	4772982	CallExpression	strdup ( egg -> lang . aliases [ i ] . content )		4772885	0					
ANR	4772983	Callee	strdup		4772885	0					
ANR	4772984	Identifier	strdup		4772885	0					
ANR	4772985	ArgumentList	egg -> lang . aliases [ i ] . content		4772885	1					
ANR	4772986	Argument	egg -> lang . aliases [ i ] . content		4772885	0					
ANR	4772987	MemberAccess	egg -> lang . aliases [ i ] . content		4772885	0					
ANR	4772988	ArrayIndexing	egg -> lang . aliases [ i ]		4772885	0					
ANR	4772989	MemberAccess	egg -> lang . aliases		4772885	0					
ANR	4772990	PtrMemberAccess	egg -> lang		4772885	0					
ANR	4772991	Identifier	egg		4772885	0					
ANR	4772992	Identifier	lang		4772885	1					
ANR	4772993	Identifier	aliases		4772885	1					
ANR	4772994	Identifier	i		4772885	1					
ANR	4772995	Identifier	content		4772885	1					
ANR	4772996	ReturnStatement	return NULL ;	236:1:5074:5085	4772885	6	True				
ANR	4772997	Identifier	NULL		4772885	0					
ANR	4772998	ReturnType	static const char *		4772885	1					
ANR	4772999	Identifier	find_alias		4772885	2					
ANR	4773000	ParameterList	"REgg * egg , const char * str"		4772885	3					
ANR	4773001	Parameter	REgg * egg	219:30:4662:4670	4772885	0	True				
ANR	4773002	ParameterType	REgg *		4772885	0					
ANR	4773003	Identifier	egg		4772885	1					
ANR	4773004	Parameter	const char * str	219:41:4673:4687	4772885	1	True				
ANR	4773005	ParameterType	const char *		4772885	0					
ANR	4773006	Identifier	str		4772885	1					
ANR	4773007	CFGEntryNode	ENTRY		4772885		True				
ANR	4773008	CFGExitNode	EXIT		4772885		True				
ANR	4773009	Symbol	strcmp		4772885						
ANR	4773010	Symbol	NULL		4772885						
ANR	4773011	Symbol	egg		4772885						
ANR	4773012	Symbol	egg -> lang . aliases		4772885						
ANR	4773013	Symbol	egg -> lang . aliases [ i ] . name		4772885						
ANR	4773014	Symbol	i		4772885						
ANR	4773015	Symbol	egg -> lang . aliases [ i ] . content		4772885						
ANR	4773016	Symbol	egg -> lang		4772885						
ANR	4773017	Symbol	* egg -> lang		4772885						
ANR	4773018	Symbol	str		4772885						
ANR	4773019	Symbol	p		4772885						
ANR	4773020	Symbol	* egg		4772885						
ANR	4773021	Symbol	* i		4772885						
ANR	4773022	Symbol	egg -> lang . nalias		4772885						
ANR	4773023	Symbol	x00		4772885						
ANR	4773024	Symbol	* * egg		4772885						
ANR	4773025	Symbol	* p		4772885						
ANR	4773026	Symbol	* str		4772885						
ANR	4773027	Symbol	strdup		4772885						
ANR	4773028	Symbol	* egg -> lang . aliases		4772885						
ANR	4773029	Symbol	is_space		4772885						
ANR	4773030	Function	rcc_internal_mathop	240:0:5143:6038							
ANR	4773031	FunctionDef	"rcc_internal_mathop (REgg * egg , const char * ptr , char * ep , char op)"		4773030	0					
ANR	4773032	CompoundStatement		240:79:5222:6038	4773030	0					
ANR	4773033	IdentifierDeclStatement	"char * p , * q , * oldp ;"	241:1:5225:5243	4773030	0	True				
ANR	4773034	IdentifierDecl	* p		4773030	0					
ANR	4773035	IdentifierDeclType	char *		4773030	0					
ANR	4773036	Identifier	p		4773030	1					
ANR	4773037	IdentifierDecl	* q		4773030	1					
ANR	4773038	IdentifierDeclType	char *		4773030	0					
ANR	4773039	Identifier	q		4773030	1					
ANR	4773040	IdentifierDecl	* oldp		4773030	2					
ANR	4773041	IdentifierDeclType	char *		4773030	0					
ANR	4773042	Identifier	oldp		4773030	1					
ANR	4773043	IdentifierDeclStatement	char type = ' ' ;	242:1:5264:5279	4773030	1	True				
ANR	4773044	IdentifierDecl	type = ' '		4773030	0					
ANR	4773045	IdentifierDeclType	char		4773030	0					
ANR	4773046	Identifier	type		4773030	1					
ANR	4773047	AssignmentExpression	type = ' '		4773030	2		=			
ANR	4773048	Identifier	type		4773030	0					
ANR	4773049	PrimaryExpression	' '		4773030	1					
ANR	4773050	IdentifierDeclStatement	char buf [ 64 ] ;	243:1:5282:5294	4773030	2	True				
ANR	4773051	IdentifierDecl	buf [ 64 ]		4773030	0					
ANR	4773052	IdentifierDeclType	char [ 64 ]		4773030	0					
ANR	4773053	Identifier	buf		4773030	1					
ANR	4773054	PrimaryExpression	64		4773030	2					
ANR	4773055	ExpressionStatement	oldp = p = q = strdup ( ptr )	244:1:5325:5352	4773030	3	True				
ANR	4773056	AssignmentExpression	oldp = p = q = strdup ( ptr )		4773030	0		=			
ANR	4773057	Identifier	oldp		4773030	0					
ANR	4773058	AssignmentExpression	p = q = strdup ( ptr )		4773030	1		=			
ANR	4773059	Identifier	p		4773030	0					
ANR	4773060	AssignmentExpression	q = strdup ( ptr )		4773030	1		=			
ANR	4773061	Identifier	q		4773030	0					
ANR	4773062	CallExpression	strdup ( ptr )		4773030	1					
ANR	4773063	Callee	strdup		4773030	0					
ANR	4773064	Identifier	strdup		4773030	0					
ANR	4773065	ArgumentList	ptr		4773030	1					
ANR	4773066	Argument	ptr		4773030	0					
ANR	4773067	Identifier	ptr		4773030	0					
ANR	4773068	IfStatement	if ( get_op ( & q ) )		4773030	4					
ANR	4773069	Condition	get_op ( & q )	245:5:5359:5369	4773030	0	True				
ANR	4773070	CallExpression	get_op ( & q )		4773030	0					
ANR	4773071	Callee	get_op		4773030	0					
ANR	4773072	Identifier	get_op		4773030	0					
ANR	4773073	ArgumentList	& q		4773030	1					
ANR	4773074	Argument	& q		4773030	0					
ANR	4773075	UnaryOperationExpression	& q		4773030	0					
ANR	4773076	UnaryOperator	&		4773030	0					
ANR	4773077	Identifier	q		4773030	1					
ANR	4773078	CompoundStatement		6:18:149:149	4773030	1					
ANR	4773079	ExpressionStatement	* q = x00	246:2:5376:5387	4773030	0	True				
ANR	4773080	AssignmentExpression	* q = x00		4773030	0		=			
ANR	4773081	UnaryOperationExpression	* q		4773030	0					
ANR	4773082	UnaryOperator	*		4773030	0					
ANR	4773083	Identifier	q		4773030	1					
ANR	4773084	Identifier	x00		4773030	1					
ANR	4773085	IdentifierDeclStatement	REggEmit * e = egg -> remit ;	248:1:5393:5417	4773030	5	True				
ANR	4773086	IdentifierDecl	* e = egg -> remit		4773030	0					
ANR	4773087	IdentifierDeclType	REggEmit *		4773030	0					
ANR	4773088	Identifier	e		4773030	1					
ANR	4773089	AssignmentExpression	* e = egg -> remit		4773030	2		=			
ANR	4773090	Identifier	e		4773030	0					
ANR	4773091	PtrMemberAccess	egg -> remit		4773030	1					
ANR	4773092	Identifier	egg		4773030	0					
ANR	4773093	Identifier	remit		4773030	1					
ANR	4773094	WhileStatement	while ( * p && is_space ( * p ) )		4773030	6					
ANR	4773095	Condition	* p && is_space ( * p )	249:8:5427:5445	4773030	0	True				
ANR	4773096	AndExpression	* p && is_space ( * p )		4773030	0		&&			
ANR	4773097	UnaryOperationExpression	* p		4773030	0					
ANR	4773098	UnaryOperator	*		4773030	0					
ANR	4773099	Identifier	p		4773030	1					
ANR	4773100	CallExpression	is_space ( * p )		4773030	1					
ANR	4773101	Callee	is_space		4773030	0					
ANR	4773102	Identifier	is_space		4773030	0					
ANR	4773103	ArgumentList	* p		4773030	1					
ANR	4773104	Argument	* p		4773030	0					
ANR	4773105	UnaryOperationExpression	* p		4773030	0					
ANR	4773106	UnaryOperator	*		4773030	0					
ANR	4773107	Identifier	p		4773030	1					
ANR	4773108	CompoundStatement		10:29:225:225	4773030	1					
ANR	4773109	ExpressionStatement	p ++	250:2:5452:5455	4773030	0	True				
ANR	4773110	PostIncDecOperationExpression	p ++		4773030	0					
ANR	4773111	Identifier	p		4773030	0					
ANR	4773112	IncDec	++		4773030	1					
ANR	4773113	IfStatement	if ( is_var ( p ) )		4773030	7					
ANR	4773114	Condition	is_var ( p )	252:5:5465:5474	4773030	0	True				
ANR	4773115	CallExpression	is_var ( p )		4773030	0					
ANR	4773116	Callee	is_var		4773030	0					
ANR	4773117	Identifier	is_var		4773030	0					
ANR	4773118	ArgumentList	p		4773030	1					
ANR	4773119	Argument	p		4773030	0					
ANR	4773120	Identifier	p		4773030	0					
ANR	4773121	CompoundStatement		13:17:254:254	4773030	1					
ANR	4773122	ExpressionStatement	"p = r_egg_mkvar ( egg , buf , p , 0 )"	253:2:5481:5513	4773030	0	True				
ANR	4773123	AssignmentExpression	"p = r_egg_mkvar ( egg , buf , p , 0 )"		4773030	0		=			
ANR	4773124	Identifier	p		4773030	0					
ANR	4773125	CallExpression	"r_egg_mkvar ( egg , buf , p , 0 )"		4773030	1					
ANR	4773126	Callee	r_egg_mkvar		4773030	0					
ANR	4773127	Identifier	r_egg_mkvar		4773030	0					
ANR	4773128	ArgumentList	egg		4773030	1					
ANR	4773129	Argument	egg		4773030	0					
ANR	4773130	Identifier	egg		4773030	0					
ANR	4773131	Argument	buf		4773030	1					
ANR	4773132	Identifier	buf		4773030	0					
ANR	4773133	Argument	p		4773030	2					
ANR	4773134	Identifier	p		4773030	0					
ANR	4773135	Argument	0		4773030	3					
ANR	4773136	PrimaryExpression	0		4773030	0					
ANR	4773137	IfStatement	if ( egg -> lang . varxs == '*' )		4773030	1					
ANR	4773138	Condition	egg -> lang . varxs == '*'	254:6:5521:5542	4773030	0	True				
ANR	4773139	EqualityExpression	egg -> lang . varxs == '*'		4773030	0		==			
ANR	4773140	MemberAccess	egg -> lang . varxs		4773030	0					
ANR	4773141	PtrMemberAccess	egg -> lang		4773030	0					
ANR	4773142	Identifier	egg		4773030	0					
ANR	4773143	Identifier	lang		4773030	1					
ANR	4773144	Identifier	varxs		4773030	1					
ANR	4773145	PrimaryExpression	'*'		4773030	1					
ANR	4773146	CompoundStatement		15:30:322:322	4773030	1					
ANR	4773147	ExpressionStatement	"e -> load ( egg , p , egg -> lang . varsize )"	255:3:5550:5585	4773030	0	True				
ANR	4773148	CallExpression	"e -> load ( egg , p , egg -> lang . varsize )"		4773030	0					
ANR	4773149	Callee	e -> load		4773030	0					
ANR	4773150	PtrMemberAccess	e -> load		4773030	0					
ANR	4773151	Identifier	e		4773030	0					
ANR	4773152	Identifier	load		4773030	1					
ANR	4773153	ArgumentList	egg		4773030	1					
ANR	4773154	Argument	egg		4773030	0					
ANR	4773155	Identifier	egg		4773030	0					
ANR	4773156	Argument	p		4773030	1					
ANR	4773157	Identifier	p		4773030	0					
ANR	4773158	Argument	egg -> lang . varsize		4773030	2					
ANR	4773159	MemberAccess	egg -> lang . varsize		4773030	0					
ANR	4773160	PtrMemberAccess	egg -> lang		4773030	0					
ANR	4773161	Identifier	egg		4773030	0					
ANR	4773162	Identifier	lang		4773030	1					
ANR	4773163	Identifier	varsize		4773030	1					
ANR	4773164	ExpressionStatement	R_FREE ( oldp )	256:3:5590:5603	4773030	1	True				
ANR	4773165	CallExpression	R_FREE ( oldp )		4773030	0					
ANR	4773166	Callee	R_FREE		4773030	0					
ANR	4773167	Identifier	R_FREE		4773030	0					
ANR	4773168	ArgumentList	oldp		4773030	1					
ANR	4773169	Argument	oldp		4773030	0					
ANR	4773170	Identifier	oldp		4773030	0					
ANR	4773171	ExpressionStatement	"oldp = p = strdup ( e -> regs ( egg , 0 ) )"	257:3:5608:5644	4773030	2	True				
ANR	4773172	AssignmentExpression	"oldp = p = strdup ( e -> regs ( egg , 0 ) )"		4773030	0		=			
ANR	4773173	Identifier	oldp		4773030	0					
ANR	4773174	AssignmentExpression	"p = strdup ( e -> regs ( egg , 0 ) )"		4773030	1		=			
ANR	4773175	Identifier	p		4773030	0					
ANR	4773176	CallExpression	"strdup ( e -> regs ( egg , 0 ) )"		4773030	1					
ANR	4773177	Callee	strdup		4773030	0					
ANR	4773178	Identifier	strdup		4773030	0					
ANR	4773179	ArgumentList	"e -> regs ( egg , 0 )"		4773030	1					
ANR	4773180	Argument	"e -> regs ( egg , 0 )"		4773030	0					
ANR	4773181	CallExpression	"e -> regs ( egg , 0 )"		4773030	0					
ANR	4773182	Callee	e -> regs		4773030	0					
ANR	4773183	PtrMemberAccess	e -> regs		4773030	0					
ANR	4773184	Identifier	e		4773030	0					
ANR	4773185	Identifier	regs		4773030	1					
ANR	4773186	ArgumentList	egg		4773030	1					
ANR	4773187	Argument	egg		4773030	0					
ANR	4773188	Identifier	egg		4773030	0					
ANR	4773189	Argument	0		4773030	1					
ANR	4773190	PrimaryExpression	0		4773030	0					
ANR	4773191	ElseStatement	else		4773030	0					
ANR	4773192	IfStatement	if ( egg -> lang . varxs == '&' )		4773030	0					
ANR	4773193	Condition	egg -> lang . varxs == '&'	260:13:5749:5770	4773030	0	True				
ANR	4773194	EqualityExpression	egg -> lang . varxs == '&'		4773030	0		==			
ANR	4773195	MemberAccess	egg -> lang . varxs		4773030	0					
ANR	4773196	PtrMemberAccess	egg -> lang		4773030	0					
ANR	4773197	Identifier	egg		4773030	0					
ANR	4773198	Identifier	lang		4773030	1					
ANR	4773199	Identifier	varxs		4773030	1					
ANR	4773200	PrimaryExpression	'&'		4773030	1					
ANR	4773201	CompoundStatement		21:37:550:550	4773030	1					
ANR	4773202	ExpressionStatement	"e -> load_ptr ( egg , p )"	261:3:5778:5798	4773030	0	True				
ANR	4773203	CallExpression	"e -> load_ptr ( egg , p )"		4773030	0					
ANR	4773204	Callee	e -> load_ptr		4773030	0					
ANR	4773205	PtrMemberAccess	e -> load_ptr		4773030	0					
ANR	4773206	Identifier	e		4773030	0					
ANR	4773207	Identifier	load_ptr		4773030	1					
ANR	4773208	ArgumentList	egg		4773030	1					
ANR	4773209	Argument	egg		4773030	0					
ANR	4773210	Identifier	egg		4773030	0					
ANR	4773211	Argument	p		4773030	1					
ANR	4773212	Identifier	p		4773030	0					
ANR	4773213	ExpressionStatement	R_FREE ( oldp )	262:3:5803:5816	4773030	1	True				
ANR	4773214	CallExpression	R_FREE ( oldp )		4773030	0					
ANR	4773215	Callee	R_FREE		4773030	0					
ANR	4773216	Identifier	R_FREE		4773030	0					
ANR	4773217	ArgumentList	oldp		4773030	1					
ANR	4773218	Argument	oldp		4773030	0					
ANR	4773219	Identifier	oldp		4773030	0					
ANR	4773220	ExpressionStatement	"oldp = p = strdup ( e -> regs ( egg , 0 ) )"	263:3:5821:5857	4773030	2	True				
ANR	4773221	AssignmentExpression	"oldp = p = strdup ( e -> regs ( egg , 0 ) )"		4773030	0		=			
ANR	4773222	Identifier	oldp		4773030	0					
ANR	4773223	AssignmentExpression	"p = strdup ( e -> regs ( egg , 0 ) )"		4773030	1		=			
ANR	4773224	Identifier	p		4773030	0					
ANR	4773225	CallExpression	"strdup ( e -> regs ( egg , 0 ) )"		4773030	1					
ANR	4773226	Callee	strdup		4773030	0					
ANR	4773227	Identifier	strdup		4773030	0					
ANR	4773228	ArgumentList	"e -> regs ( egg , 0 )"		4773030	1					
ANR	4773229	Argument	"e -> regs ( egg , 0 )"		4773030	0					
ANR	4773230	CallExpression	"e -> regs ( egg , 0 )"		4773030	0					
ANR	4773231	Callee	e -> regs		4773030	0					
ANR	4773232	PtrMemberAccess	e -> regs		4773030	0					
ANR	4773233	Identifier	e		4773030	0					
ANR	4773234	Identifier	regs		4773030	1					
ANR	4773235	ArgumentList	egg		4773030	1					
ANR	4773236	Argument	egg		4773030	0					
ANR	4773237	Identifier	egg		4773030	0					
ANR	4773238	Argument	0		4773030	1					
ANR	4773239	PrimaryExpression	0		4773030	0					
ANR	4773240	ExpressionStatement	type = ' '	265:2:5865:5875	4773030	2	True				
ANR	4773241	AssignmentExpression	type = ' '		4773030	0		=			
ANR	4773242	Identifier	type		4773030	0					
ANR	4773243	PrimaryExpression	' '		4773030	1					
ANR	4773244	ElseStatement	else		4773030	0					
ANR	4773245	CompoundStatement		27:8:662:662	4773030	0					
ANR	4773246	ExpressionStatement	type = '$'	267:2:5889:5899	4773030	0	True				
ANR	4773247	AssignmentExpression	type = '$'		4773030	0		=			
ANR	4773248	Identifier	type		4773030	0					
ANR	4773249	PrimaryExpression	'$'		4773030	1					
ANR	4773250	IfStatement	if ( * p )		4773030	8					
ANR	4773251	Condition	* p	269:5:5909:5910	4773030	0	True				
ANR	4773252	UnaryOperationExpression	* p		4773030	0					
ANR	4773253	UnaryOperator	*		4773030	0					
ANR	4773254	Identifier	p		4773030	1					
ANR	4773255	CompoundStatement		30:9:690:690	4773030	1					
ANR	4773256	ExpressionStatement	"e -> mathop ( egg , op , egg -> lang . varsize , type , p , ep )"	270:2:5917:5968	4773030	0	True				
ANR	4773257	CallExpression	"e -> mathop ( egg , op , egg -> lang . varsize , type , p , ep )"		4773030	0					
ANR	4773258	Callee	e -> mathop		4773030	0					
ANR	4773259	PtrMemberAccess	e -> mathop		4773030	0					
ANR	4773260	Identifier	e		4773030	0					
ANR	4773261	Identifier	mathop		4773030	1					
ANR	4773262	ArgumentList	egg		4773030	1					
ANR	4773263	Argument	egg		4773030	0					
ANR	4773264	Identifier	egg		4773030	0					
ANR	4773265	Argument	op		4773030	1					
ANR	4773266	Identifier	op		4773030	0					
ANR	4773267	Argument	egg -> lang . varsize		4773030	2					
ANR	4773268	MemberAccess	egg -> lang . varsize		4773030	0					
ANR	4773269	PtrMemberAccess	egg -> lang		4773030	0					
ANR	4773270	Identifier	egg		4773030	0					
ANR	4773271	Identifier	lang		4773030	1					
ANR	4773272	Identifier	varsize		4773030	1					
ANR	4773273	Argument	type		4773030	3					
ANR	4773274	Identifier	type		4773030	0					
ANR	4773275	Argument	p		4773030	4					
ANR	4773276	Identifier	p		4773030	0					
ANR	4773277	Argument	ep		4773030	5					
ANR	4773278	Identifier	ep		4773030	0					
ANR	4773279	IfStatement	if ( p != oldp )		4773030	9					
ANR	4773280	Condition	p != oldp	272:5:5978:5986	4773030	0	True				
ANR	4773281	EqualityExpression	p != oldp		4773030	0		!=			
ANR	4773282	Identifier	p		4773030	0					
ANR	4773283	Identifier	oldp		4773030	1					
ANR	4773284	CompoundStatement		33:16:766:766	4773030	1					
ANR	4773285	ExpressionStatement	R_FREE ( p )	273:2:5993:6003	4773030	0	True				
ANR	4773286	CallExpression	R_FREE ( p )		4773030	0					
ANR	4773287	Callee	R_FREE		4773030	0					
ANR	4773288	Identifier	R_FREE		4773030	0					
ANR	4773289	ArgumentList	p		4773030	1					
ANR	4773290	Argument	p		4773030	0					
ANR	4773291	Identifier	p		4773030	0					
ANR	4773292	ExpressionStatement	R_FREE ( oldp )	275:1:6009:6022	4773030	10	True				
ANR	4773293	CallExpression	R_FREE ( oldp )		4773030	0					
ANR	4773294	Callee	R_FREE		4773030	0					
ANR	4773295	Identifier	R_FREE		4773030	0					
ANR	4773296	ArgumentList	oldp		4773030	1					
ANR	4773297	Argument	oldp		4773030	0					
ANR	4773298	Identifier	oldp		4773030	0					
ANR	4773299	ExpressionStatement	R_FREE ( ep )	276:1:6025:6036	4773030	11	True				
ANR	4773300	CallExpression	R_FREE ( ep )		4773030	0					
ANR	4773301	Callee	R_FREE		4773030	0					
ANR	4773302	Identifier	R_FREE		4773030	0					
ANR	4773303	ArgumentList	ep		4773030	1					
ANR	4773304	Argument	ep		4773030	0					
ANR	4773305	Identifier	ep		4773030	0					
ANR	4773306	ReturnType	static void		4773030	1					
ANR	4773307	Identifier	rcc_internal_mathop		4773030	2					
ANR	4773308	ParameterList	"REgg * egg , const char * ptr , char * ep , char op"		4773030	3					
ANR	4773309	Parameter	REgg * egg	240:32:5175:5183	4773030	0	True				
ANR	4773310	ParameterType	REgg *		4773030	0					
ANR	4773311	Identifier	egg		4773030	1					
ANR	4773312	Parameter	const char * ptr	240:43:5186:5200	4773030	1	True				
ANR	4773313	ParameterType	const char *		4773030	0					
ANR	4773314	Identifier	ptr		4773030	1					
ANR	4773315	Parameter	char * ep	240:60:5203:5210	4773030	2	True				
ANR	4773316	ParameterType	char *		4773030	0					
ANR	4773317	Identifier	ep		4773030	1					
ANR	4773318	Parameter	char op	240:70:5213:5219	4773030	3	True				
ANR	4773319	ParameterType	char		4773030	0					
ANR	4773320	Identifier	op		4773030	1					
ANR	4773321	CFGEntryNode	ENTRY		4773030		True				
ANR	4773322	CFGExitNode	EXIT		4773030		True				
ANR	4773323	Symbol	egg		4773030						
ANR	4773324	Symbol	type		4773030						
ANR	4773325	Symbol	egg -> remit		4773030						
ANR	4773326	Symbol	egg -> lang		4773030						
ANR	4773327	Symbol	* egg		4773030						
ANR	4773328	Symbol	e -> regs		4773030						
ANR	4773329	Symbol	egg -> lang . varsize		4773030						
ANR	4773330	Symbol	egg -> lang . varxs		4773030						
ANR	4773331	Symbol	is_space		4773030						
ANR	4773332	Symbol	oldp		4773030						
ANR	4773333	Symbol	r_egg_mkvar		4773030						
ANR	4773334	Symbol	op		4773030						
ANR	4773335	Symbol	get_op		4773030						
ANR	4773336	Symbol	e		4773030						
ANR	4773337	Symbol	ep		4773030						
ANR	4773338	Symbol	ptr		4773030						
ANR	4773339	Symbol	* e		4773030						
ANR	4773340	Symbol	p		4773030						
ANR	4773341	Symbol	q		4773030						
ANR	4773342	Symbol	buf		4773030						
ANR	4773343	Symbol	& q		4773030						
ANR	4773344	Symbol	x00		4773030						
ANR	4773345	Symbol	* p		4773030						
ANR	4773346	Symbol	strdup		4773030						
ANR	4773347	Symbol	* q		4773030						
ANR	4773348	Symbol	is_var		4773030						
ANR	4773349	Function	rcc_mathop	284:0:6098:7367							
ANR	4773350	FunctionDef	"rcc_mathop (REgg * egg , char * * pos , int level)"		4773349	0					
ANR	4773351	CompoundStatement		284:57:6155:7367	4773349	0					
ANR	4773352	IdentifierDeclStatement	REggEmit * e = egg -> remit ;	285:1:6158:6182	4773349	0	True				
ANR	4773353	IdentifierDecl	* e = egg -> remit		4773349	0					
ANR	4773354	IdentifierDeclType	REggEmit *		4773349	0					
ANR	4773355	Identifier	e		4773349	1					
ANR	4773356	AssignmentExpression	* e = egg -> remit		4773349	2		=			
ANR	4773357	Identifier	e		4773349	0					
ANR	4773358	PtrMemberAccess	egg -> remit		4773349	1					
ANR	4773359	Identifier	egg		4773349	0					
ANR	4773360	Identifier	remit		4773349	1					
ANR	4773361	IdentifierDeclStatement	int op_ret = level ;	286:1:6185:6203	4773349	1	True				
ANR	4773362	IdentifierDecl	op_ret = level		4773349	0					
ANR	4773363	IdentifierDeclType	int		4773349	0					
ANR	4773364	Identifier	op_ret		4773349	1					
ANR	4773365	AssignmentExpression	op_ret = level		4773349	2		=			
ANR	4773366	Identifier	level		4773349	0					
ANR	4773367	Identifier	level		4773349	1					
ANR	4773368	IdentifierDeclStatement	"char op , * next_pos ;"	287:1:6206:6224	4773349	2	True				
ANR	4773369	IdentifierDecl	op		4773349	0					
ANR	4773370	IdentifierDeclType	char		4773349	0					
ANR	4773371	Identifier	op		4773349	1					
ANR	4773372	IdentifierDecl	* next_pos		4773349	1					
ANR	4773373	IdentifierDeclType	char *		4773349	0					
ANR	4773374	Identifier	next_pos		4773349	1					
ANR	4773375	WhileStatement	while ( * * pos && is_space ( * * pos ) )		4773349	3					
ANR	4773376	Condition	* * pos && is_space ( * * pos )	289:8:6235:6259	4773349	0	True				
ANR	4773377	AndExpression	* * pos && is_space ( * * pos )		4773349	0		&&			
ANR	4773378	UnaryOperationExpression	* * pos		4773349	0					
ANR	4773379	UnaryOperator	*		4773349	0					
ANR	4773380	UnaryOperationExpression	* pos		4773349	1					
ANR	4773381	UnaryOperator	*		4773349	0					
ANR	4773382	Identifier	pos		4773349	1					
ANR	4773383	CallExpression	is_space ( * * pos )		4773349	1					
ANR	4773384	Callee	is_space		4773349	0					
ANR	4773385	Identifier	is_space		4773349	0					
ANR	4773386	ArgumentList	* * pos		4773349	1					
ANR	4773387	Argument	* * pos		4773349	0					
ANR	4773388	UnaryOperationExpression	* * pos		4773349	0					
ANR	4773389	UnaryOperator	*		4773349	0					
ANR	4773390	UnaryOperationExpression	* pos		4773349	1					
ANR	4773391	UnaryOperator	*		4773349	0					
ANR	4773392	Identifier	pos		4773349	1					
ANR	4773393	CompoundStatement		6:35:106:106	4773349	1					
ANR	4773394	ExpressionStatement	( * pos ) ++	290:2:6266:6274	4773349	0	True				
ANR	4773395	PostIncDecOperationExpression	( * pos ) ++		4773349	0					
ANR	4773396	UnaryOperationExpression	* pos		4773349	0					
ANR	4773397	UnaryOperator	*		4773349	0					
ANR	4773398	Identifier	pos		4773349	1					
ANR	4773399	IncDec	++		4773349	1					
ANR	4773400	ExpressionStatement	next_pos = * pos + 1	292:1:6280:6299	4773349	4	True				
ANR	4773401	AssignmentExpression	next_pos = * pos + 1		4773349	0		=			
ANR	4773402	Identifier	next_pos		4773349	0					
ANR	4773403	AdditiveExpression	* pos + 1		4773349	1		+			
ANR	4773404	UnaryOperationExpression	* pos		4773349	0					
ANR	4773405	UnaryOperator	*		4773349	0					
ANR	4773406	Identifier	pos		4773349	1					
ANR	4773407	PrimaryExpression	1		4773349	1					
ANR	4773408	DoStatement	do		4773349	5					
ANR	4773409	CompoundStatement		11:4:150:150	4773349	0					
ANR	4773410	ExpressionStatement	op = ( is_op ( * * pos ) && ! ( is_var ( * pos ) ) ) ? * * pos : '='	295:2:6310:6362	4773349	0	True				
ANR	4773411	AssignmentExpression	op = ( is_op ( * * pos ) && ! ( is_var ( * pos ) ) ) ? * * pos : '='		4773349	0		=			
ANR	4773412	Identifier	op		4773349	0					
ANR	4773413	ConditionalExpression	( is_op ( * * pos ) && ! ( is_var ( * pos ) ) ) ? * * pos : '='		4773349	1					
ANR	4773414	Condition	is_op ( * * pos ) && ! ( is_var ( * pos ) )		4773349	0					
ANR	4773415	AndExpression	is_op ( * * pos ) && ! ( is_var ( * pos ) )		4773349	0		&&			
ANR	4773416	CallExpression	is_op ( * * pos )		4773349	0					
ANR	4773417	Callee	is_op		4773349	0					
ANR	4773418	Identifier	is_op		4773349	0					
ANR	4773419	ArgumentList	* * pos		4773349	1					
ANR	4773420	Argument	* * pos		4773349	0					
ANR	4773421	UnaryOperationExpression	* * pos		4773349	0					
ANR	4773422	UnaryOperator	*		4773349	0					
ANR	4773423	UnaryOperationExpression	* pos		4773349	1					
ANR	4773424	UnaryOperator	*		4773349	0					
ANR	4773425	Identifier	pos		4773349	1					
ANR	4773426	UnaryOperationExpression	! ( is_var ( * pos ) )		4773349	1					
ANR	4773427	UnaryOperator	!		4773349	0					
ANR	4773428	CallExpression	is_var ( * pos )		4773349	1					
ANR	4773429	Callee	is_var		4773349	0					
ANR	4773430	Identifier	is_var		4773349	0					
ANR	4773431	ArgumentList	* pos		4773349	1					
ANR	4773432	Argument	* pos		4773349	0					
ANR	4773433	UnaryOperationExpression	* pos		4773349	0					
ANR	4773434	UnaryOperator	*		4773349	0					
ANR	4773435	Identifier	pos		4773349	1					
ANR	4773436	UnaryOperationExpression	* * pos		4773349	1					
ANR	4773437	UnaryOperator	*		4773349	0					
ANR	4773438	UnaryOperationExpression	* pos		4773349	1					
ANR	4773439	UnaryOperator	*		4773349	0					
ANR	4773440	Identifier	pos		4773349	1					
ANR	4773441	PrimaryExpression	'='		4773349	2					
ANR	4773442	ExpressionStatement	* pos = ( is_op ( * * pos ) && ! ( is_var ( * pos ) ) ) ? * pos + 1 : * pos	296:2:6366:6424	4773349	1	True				
ANR	4773443	AssignmentExpression	* pos = ( is_op ( * * pos ) && ! ( is_var ( * pos ) ) ) ? * pos + 1 : * pos		4773349	0		=			
ANR	4773444	UnaryOperationExpression	* pos		4773349	0					
ANR	4773445	UnaryOperator	*		4773349	0					
ANR	4773446	Identifier	pos		4773349	1					
ANR	4773447	ConditionalExpression	( is_op ( * * pos ) && ! ( is_var ( * pos ) ) ) ? * pos + 1 : * pos		4773349	1					
ANR	4773448	Condition	is_op ( * * pos ) && ! ( is_var ( * pos ) )		4773349	0					
ANR	4773449	AndExpression	is_op ( * * pos ) && ! ( is_var ( * pos ) )		4773349	0		&&			
ANR	4773450	CallExpression	is_op ( * * pos )		4773349	0					
ANR	4773451	Callee	is_op		4773349	0					
ANR	4773452	Identifier	is_op		4773349	0					
ANR	4773453	ArgumentList	* * pos		4773349	1					
ANR	4773454	Argument	* * pos		4773349	0					
ANR	4773455	UnaryOperationExpression	* * pos		4773349	0					
ANR	4773456	UnaryOperator	*		4773349	0					
ANR	4773457	UnaryOperationExpression	* pos		4773349	1					
ANR	4773458	UnaryOperator	*		4773349	0					
ANR	4773459	Identifier	pos		4773349	1					
ANR	4773460	UnaryOperationExpression	! ( is_var ( * pos ) )		4773349	1					
ANR	4773461	UnaryOperator	!		4773349	0					
ANR	4773462	CallExpression	is_var ( * pos )		4773349	1					
ANR	4773463	Callee	is_var		4773349	0					
ANR	4773464	Identifier	is_var		4773349	0					
ANR	4773465	ArgumentList	* pos		4773349	1					
ANR	4773466	Argument	* pos		4773349	0					
ANR	4773467	UnaryOperationExpression	* pos		4773349	0					
ANR	4773468	UnaryOperator	*		4773349	0					
ANR	4773469	Identifier	pos		4773349	1					
ANR	4773470	AdditiveExpression	* pos + 1		4773349	1		+			
ANR	4773471	UnaryOperationExpression	* pos		4773349	0					
ANR	4773472	UnaryOperator	*		4773349	0					
ANR	4773473	Identifier	pos		4773349	1					
ANR	4773474	PrimaryExpression	1		4773349	1					
ANR	4773475	UnaryOperationExpression	* pos		4773349	2					
ANR	4773476	UnaryOperator	*		4773349	0					
ANR	4773477	Identifier	pos		4773349	1					
ANR	4773478	ExpressionStatement	op_ret = get_op ( & next_pos )	297:2:6428:6455	4773349	2	True				
ANR	4773479	AssignmentExpression	op_ret = get_op ( & next_pos )		4773349	0		=			
ANR	4773480	Identifier	op_ret		4773349	0					
ANR	4773481	CallExpression	get_op ( & next_pos )		4773349	1					
ANR	4773482	Callee	get_op		4773349	0					
ANR	4773483	Identifier	get_op		4773349	0					
ANR	4773484	ArgumentList	& next_pos		4773349	1					
ANR	4773485	Argument	& next_pos		4773349	0					
ANR	4773486	UnaryOperationExpression	& next_pos		4773349	0					
ANR	4773487	UnaryOperator	&		4773349	0					
ANR	4773488	Identifier	next_pos		4773349	1					
ANR	4773489	IfStatement	if ( op_ret > level )		4773349	3					
ANR	4773490	Condition	op_ret > level	298:6:6463:6476	4773349	0	True				
ANR	4773491	RelationalExpression	op_ret > level		4773349	0		>			
ANR	4773492	Identifier	op_ret		4773349	0					
ANR	4773493	Identifier	level		4773349	1					
ANR	4773494	CompoundStatement		15:22:323:323	4773349	1					
ANR	4773495	ExpressionStatement	"rcc_mathop ( egg , pos , op_ret )"	299:3:6484:6513	4773349	0	True				
ANR	4773496	CallExpression	"rcc_mathop ( egg , pos , op_ret )"		4773349	0					
ANR	4773497	Callee	rcc_mathop		4773349	0					
ANR	4773498	Identifier	rcc_mathop		4773349	0					
ANR	4773499	ArgumentList	egg		4773349	1					
ANR	4773500	Argument	egg		4773349	0					
ANR	4773501	Identifier	egg		4773349	0					
ANR	4773502	Argument	pos		4773349	1					
ANR	4773503	Identifier	pos		4773349	0					
ANR	4773504	Argument	op_ret		4773349	2					
ANR	4773505	Identifier	op_ret		4773349	0					
ANR	4773506	ExpressionStatement	"rcc_internal_mathop ( egg , e -> regs ( egg , op_ret - 1 ) , strdup ( e -> regs ( egg , level - 1 ) ) , op )"	300:3:6518:6613	4773349	1	True				
ANR	4773507	CallExpression	"rcc_internal_mathop ( egg , e -> regs ( egg , op_ret - 1 ) , strdup ( e -> regs ( egg , level - 1 ) ) , op )"		4773349	0					
ANR	4773508	Callee	rcc_internal_mathop		4773349	0					
ANR	4773509	Identifier	rcc_internal_mathop		4773349	0					
ANR	4773510	ArgumentList	egg		4773349	1					
ANR	4773511	Argument	egg		4773349	0					
ANR	4773512	Identifier	egg		4773349	0					
ANR	4773513	Argument	"e -> regs ( egg , op_ret - 1 )"		4773349	1					
ANR	4773514	CallExpression	"e -> regs ( egg , op_ret - 1 )"		4773349	0					
ANR	4773515	Callee	e -> regs		4773349	0					
ANR	4773516	PtrMemberAccess	e -> regs		4773349	0					
ANR	4773517	Identifier	e		4773349	0					
ANR	4773518	Identifier	regs		4773349	1					
ANR	4773519	ArgumentList	egg		4773349	1					
ANR	4773520	Argument	egg		4773349	0					
ANR	4773521	Identifier	egg		4773349	0					
ANR	4773522	Argument	op_ret - 1		4773349	1					
ANR	4773523	AdditiveExpression	op_ret - 1		4773349	0		-			
ANR	4773524	Identifier	op_ret		4773349	0					
ANR	4773525	PrimaryExpression	1		4773349	1					
ANR	4773526	Argument	"strdup ( e -> regs ( egg , level - 1 ) )"		4773349	2					
ANR	4773527	CallExpression	"strdup ( e -> regs ( egg , level - 1 ) )"		4773349	0					
ANR	4773528	Callee	strdup		4773349	0					
ANR	4773529	Identifier	strdup		4773349	0					
ANR	4773530	ArgumentList	"e -> regs ( egg , level - 1 )"		4773349	1					
ANR	4773531	Argument	"e -> regs ( egg , level - 1 )"		4773349	0					
ANR	4773532	CallExpression	"e -> regs ( egg , level - 1 )"		4773349	0					
ANR	4773533	Callee	e -> regs		4773349	0					
ANR	4773534	PtrMemberAccess	e -> regs		4773349	0					
ANR	4773535	Identifier	e		4773349	0					
ANR	4773536	Identifier	regs		4773349	1					
ANR	4773537	ArgumentList	egg		4773349	1					
ANR	4773538	Argument	egg		4773349	0					
ANR	4773539	Identifier	egg		4773349	0					
ANR	4773540	Argument	level - 1		4773349	1					
ANR	4773541	AdditiveExpression	level - 1		4773349	0		-			
ANR	4773542	Identifier	level		4773349	0					
ANR	4773543	PrimaryExpression	1		4773349	1					
ANR	4773544	Argument	op		4773349	3					
ANR	4773545	Identifier	op		4773349	0					
ANR	4773546	ExpressionStatement	next_pos = * pos + 1	302:3:6618:6637	4773349	2	True				
ANR	4773547	AssignmentExpression	next_pos = * pos + 1		4773349	0		=			
ANR	4773548	Identifier	next_pos		4773349	0					
ANR	4773549	AdditiveExpression	* pos + 1		4773349	1		+			
ANR	4773550	UnaryOperationExpression	* pos		4773349	0					
ANR	4773551	UnaryOperator	*		4773349	0					
ANR	4773552	Identifier	pos		4773349	1					
ANR	4773553	PrimaryExpression	1		4773349	1					
ANR	4773554	ElseStatement	else		4773349	0					
ANR	4773555	CompoundStatement		20:9:492:492	4773349	0					
ANR	4773556	ExpressionStatement	"rcc_internal_mathop ( egg , * pos , strdup ( e -> regs ( egg , level - 1 ) ) , op )"	304:3:6653:6723	4773349	0	True				
ANR	4773557	CallExpression	"rcc_internal_mathop ( egg , * pos , strdup ( e -> regs ( egg , level - 1 ) ) , op )"		4773349	0					
ANR	4773558	Callee	rcc_internal_mathop		4773349	0					
ANR	4773559	Identifier	rcc_internal_mathop		4773349	0					
ANR	4773560	ArgumentList	egg		4773349	1					
ANR	4773561	Argument	egg		4773349	0					
ANR	4773562	Identifier	egg		4773349	0					
ANR	4773563	Argument	* pos		4773349	1					
ANR	4773564	UnaryOperationExpression	* pos		4773349	0					
ANR	4773565	UnaryOperator	*		4773349	0					
ANR	4773566	Identifier	pos		4773349	1					
ANR	4773567	Argument	"strdup ( e -> regs ( egg , level - 1 ) )"		4773349	2					
ANR	4773568	CallExpression	"strdup ( e -> regs ( egg , level - 1 ) )"		4773349	0					
ANR	4773569	Callee	strdup		4773349	0					
ANR	4773570	Identifier	strdup		4773349	0					
ANR	4773571	ArgumentList	"e -> regs ( egg , level - 1 )"		4773349	1					
ANR	4773572	Argument	"e -> regs ( egg , level - 1 )"		4773349	0					
ANR	4773573	CallExpression	"e -> regs ( egg , level - 1 )"		4773349	0					
ANR	4773574	Callee	e -> regs		4773349	0					
ANR	4773575	PtrMemberAccess	e -> regs		4773349	0					
ANR	4773576	Identifier	e		4773349	0					
ANR	4773577	Identifier	regs		4773349	1					
ANR	4773578	ArgumentList	egg		4773349	1					
ANR	4773579	Argument	egg		4773349	0					
ANR	4773580	Identifier	egg		4773349	0					
ANR	4773581	Argument	level - 1		4773349	1					
ANR	4773582	AdditiveExpression	level - 1		4773349	0		-			
ANR	4773583	Identifier	level		4773349	0					
ANR	4773584	PrimaryExpression	1		4773349	1					
ANR	4773585	Argument	op		4773349	3					
ANR	4773586	Identifier	op		4773349	0					
ANR	4773587	ExpressionStatement	* pos = next_pos	305:3:6728:6743	4773349	1	True				
ANR	4773588	AssignmentExpression	* pos = next_pos		4773349	0		=			
ANR	4773589	UnaryOperationExpression	* pos		4773349	0					
ANR	4773590	UnaryOperator	*		4773349	0					
ANR	4773591	Identifier	pos		4773349	1					
ANR	4773592	Identifier	next_pos		4773349	1					
ANR	4773593	ExpressionStatement	next_pos ++	306:3:6748:6758	4773349	2	True				
ANR	4773594	PostIncDecOperationExpression	next_pos ++		4773349	0					
ANR	4773595	Identifier	next_pos		4773349	0					
ANR	4773596	IncDec	++		4773349	1					
ANR	4773597	Condition	* * pos && op_ret >= level	308:10:6774:6797	4773349	1	True				
ANR	4773598	AndExpression	* * pos && op_ret >= level		4773349	0		&&			
ANR	4773599	UnaryOperationExpression	* * pos		4773349	0					
ANR	4773600	UnaryOperator	*		4773349	0					
ANR	4773601	UnaryOperationExpression	* pos		4773349	1					
ANR	4773602	UnaryOperator	*		4773349	0					
ANR	4773603	Identifier	pos		4773349	1					
ANR	4773604	RelationalExpression	op_ret >= level		4773349	1		>=			
ANR	4773605	Identifier	op_ret		4773349	0					
ANR	4773606	Identifier	level		4773349	1					
ANR	4773607	ReturnType	static void		4773349	1					
ANR	4773608	Identifier	rcc_mathop		4773349	2					
ANR	4773609	ParameterList	"REgg * egg , char * * pos , int level"		4773349	3					
ANR	4773610	Parameter	REgg * egg	284:23:6121:6129	4773349	0	True				
ANR	4773611	ParameterType	REgg *		4773349	0					
ANR	4773612	Identifier	egg		4773349	1					
ANR	4773613	Parameter	char * * pos	284:34:6132:6141	4773349	1	True				
ANR	4773614	ParameterType	char * *		4773349	0					
ANR	4773615	Identifier	pos		4773349	1					
ANR	4773616	Parameter	int level	284:46:6144:6152	4773349	2	True				
ANR	4773617	ParameterType	int		4773349	0					
ANR	4773618	Identifier	level		4773349	1					
ANR	4773619	CFGEntryNode	ENTRY		4773349		True				
ANR	4773620	CFGExitNode	EXIT		4773349		True				
ANR	4773621	Symbol	op		4773349						
ANR	4773622	Symbol	op_ret		4773349						
ANR	4773623	Symbol	get_op		4773349						
ANR	4773624	Symbol	& next_pos		4773349						
ANR	4773625	Symbol	next_pos		4773349						
ANR	4773626	Symbol	egg		4773349						
ANR	4773627	Symbol	level		4773349						
ANR	4773628	Symbol	e		4773349						
ANR	4773629	Symbol	* * pos		4773349						
ANR	4773630	Symbol	is_op		4773349						
ANR	4773631	Symbol	egg -> remit		4773349						
ANR	4773632	Symbol	* e		4773349						
ANR	4773633	Symbol	* egg		4773349						
ANR	4773634	Symbol	e -> regs		4773349						
ANR	4773635	Symbol	pos		4773349						
ANR	4773636	Symbol	strdup		4773349						
ANR	4773637	Symbol	is_space		4773349						
ANR	4773638	Symbol	is_var		4773349						
ANR	4773639	Symbol	* pos		4773349						
ANR	4773640	Function	rcc_pusharg	326:0:7370:7855							
ANR	4773641	FunctionDef	"rcc_pusharg (REgg * egg , char * str)"		4773640	0					
ANR	4773642	CompoundStatement		326:46:7416:7855	4773640	0					
ANR	4773643	IdentifierDeclStatement	REggEmit * e = egg -> remit ;	327:1:7419:7443	4773640	0	True				
ANR	4773644	IdentifierDecl	* e = egg -> remit		4773640	0					
ANR	4773645	IdentifierDeclType	REggEmit *		4773640	0					
ANR	4773646	Identifier	e		4773640	1					
ANR	4773647	AssignmentExpression	* e = egg -> remit		4773640	2		=			
ANR	4773648	Identifier	e		4773640	0					
ANR	4773649	PtrMemberAccess	egg -> remit		4773640	1					
ANR	4773650	Identifier	egg		4773640	0					
ANR	4773651	Identifier	remit		4773640	1					
ANR	4773652	IdentifierDeclStatement	"char buf [ 64 ] , * p = r_egg_mkvar ( egg , buf , str , 0 ) ;"	328:1:7446:7495	4773640	1	True				
ANR	4773653	IdentifierDecl	buf [ 64 ]		4773640	0					
ANR	4773654	IdentifierDeclType	char [ 64 ]		4773640	0					
ANR	4773655	Identifier	buf		4773640	1					
ANR	4773656	PrimaryExpression	64		4773640	2					
ANR	4773657	IdentifierDecl	"* p = r_egg_mkvar ( egg , buf , str , 0 )"		4773640	1					
ANR	4773658	IdentifierDeclType	char *		4773640	0					
ANR	4773659	Identifier	p		4773640	1					
ANR	4773660	AssignmentExpression	"* p = r_egg_mkvar ( egg , buf , str , 0 )"		4773640	2		=			
ANR	4773661	Identifier	p		4773640	0					
ANR	4773662	CallExpression	"r_egg_mkvar ( egg , buf , str , 0 )"		4773640	1					
ANR	4773663	Callee	r_egg_mkvar		4773640	0					
ANR	4773664	Identifier	r_egg_mkvar		4773640	0					
ANR	4773665	ArgumentList	egg		4773640	1					
ANR	4773666	Argument	egg		4773640	0					
ANR	4773667	Identifier	egg		4773640	0					
ANR	4773668	Argument	buf		4773640	1					
ANR	4773669	Identifier	buf		4773640	0					
ANR	4773670	Argument	str		4773640	2					
ANR	4773671	Identifier	str		4773640	0					
ANR	4773672	Argument	0		4773640	3					
ANR	4773673	PrimaryExpression	0		4773640	0					
ANR	4773674	IfStatement	if ( ! p )		4773640	2					
ANR	4773675	Condition	! p	329:5:7502:7503	4773640	0	True				
ANR	4773676	UnaryOperationExpression	! p		4773640	0					
ANR	4773677	UnaryOperator	!		4773640	0					
ANR	4773678	Identifier	p		4773640	1					
ANR	4773679	CompoundStatement		4:9:89:89	4773640	1					
ANR	4773680	ReturnStatement	return ;	330:2:7510:7516	4773640	0	True				
ANR	4773681	ExpressionStatement	R_FREE ( egg -> lang . ctxpush [ CTX ] )	332:1:7522:7553	4773640	3	True				
ANR	4773682	CallExpression	R_FREE ( egg -> lang . ctxpush [ CTX ] )		4773640	0					
ANR	4773683	Callee	R_FREE		4773640	0					
ANR	4773684	Identifier	R_FREE		4773640	0					
ANR	4773685	ArgumentList	egg -> lang . ctxpush [ CTX ]		4773640	1					
ANR	4773686	Argument	egg -> lang . ctxpush [ CTX ]		4773640	0					
ANR	4773687	ArrayIndexing	egg -> lang . ctxpush [ CTX ]		4773640	0					
ANR	4773688	MemberAccess	egg -> lang . ctxpush		4773640	0					
ANR	4773689	PtrMemberAccess	egg -> lang		4773640	0					
ANR	4773690	Identifier	egg		4773640	0					
ANR	4773691	Identifier	lang		4773640	1					
ANR	4773692	Identifier	ctxpush		4773640	1					
ANR	4773693	Identifier	CTX		4773640	1					
ANR	4773694	ExpressionStatement	egg -> lang . ctxpush [ CTX ] = strdup ( p )	333:1:7556:7591	4773640	4	True				
ANR	4773695	AssignmentExpression	egg -> lang . ctxpush [ CTX ] = strdup ( p )		4773640	0		=			
ANR	4773696	ArrayIndexing	egg -> lang . ctxpush [ CTX ]		4773640	0					
ANR	4773697	MemberAccess	egg -> lang . ctxpush		4773640	0					
ANR	4773698	PtrMemberAccess	egg -> lang		4773640	0					
ANR	4773699	Identifier	egg		4773640	0					
ANR	4773700	Identifier	lang		4773640	1					
ANR	4773701	Identifier	ctxpush		4773640	1					
ANR	4773702	Identifier	CTX		4773640	1					
ANR	4773703	CallExpression	strdup ( p )		4773640	1					
ANR	4773704	Callee	strdup		4773640	0					
ANR	4773705	Identifier	strdup		4773640	0					
ANR	4773706	ArgumentList	p		4773640	1					
ANR	4773707	Argument	p		4773640	0					
ANR	4773708	Identifier	p		4773640	0					
ANR	4773709	ExpressionStatement	egg -> lang . nargs ++	334:1:7631:7648	4773640	5	True				
ANR	4773710	PostIncDecOperationExpression	egg -> lang . nargs ++		4773640	0					
ANR	4773711	MemberAccess	egg -> lang . nargs		4773640	0					
ANR	4773712	PtrMemberAccess	egg -> lang		4773640	0					
ANR	4773713	Identifier	egg		4773640	0					
ANR	4773714	Identifier	lang		4773640	1					
ANR	4773715	Identifier	nargs		4773640	1					
ANR	4773716	IncDec	++		4773640	1					
ANR	4773717	IfStatement	if ( egg -> lang . pushargs )		4773640	6					
ANR	4773718	Condition	egg -> lang . pushargs	335:5:7655:7672	4773640	0	True				
ANR	4773719	MemberAccess	egg -> lang . pushargs		4773640	0					
ANR	4773720	PtrMemberAccess	egg -> lang		4773640	0					
ANR	4773721	Identifier	egg		4773640	0					
ANR	4773722	Identifier	lang		4773640	1					
ANR	4773723	Identifier	pushargs		4773640	1					
ANR	4773724	CompoundStatement		10:25:258:258	4773640	1					
ANR	4773725	ExpressionStatement	"e -> push_arg ( egg , egg -> lang . varxs , egg -> lang . nargs , p )"	336:2:7679:7733	4773640	0	True				
ANR	4773726	CallExpression	"e -> push_arg ( egg , egg -> lang . varxs , egg -> lang . nargs , p )"		4773640	0					
ANR	4773727	Callee	e -> push_arg		4773640	0					
ANR	4773728	PtrMemberAccess	e -> push_arg		4773640	0					
ANR	4773729	Identifier	e		4773640	0					
ANR	4773730	Identifier	push_arg		4773640	1					
ANR	4773731	ArgumentList	egg		4773640	1					
ANR	4773732	Argument	egg		4773640	0					
ANR	4773733	Identifier	egg		4773640	0					
ANR	4773734	Argument	egg -> lang . varxs		4773640	1					
ANR	4773735	MemberAccess	egg -> lang . varxs		4773640	0					
ANR	4773736	PtrMemberAccess	egg -> lang		4773640	0					
ANR	4773737	Identifier	egg		4773640	0					
ANR	4773738	Identifier	lang		4773640	1					
ANR	4773739	Identifier	varxs		4773640	1					
ANR	4773740	Argument	egg -> lang . nargs		4773640	2					
ANR	4773741	MemberAccess	egg -> lang . nargs		4773640	0					
ANR	4773742	PtrMemberAccess	egg -> lang		4773640	0					
ANR	4773743	Identifier	egg		4773640	0					
ANR	4773744	Identifier	lang		4773640	1					
ANR	4773745	Identifier	nargs		4773640	1					
ANR	4773746	Argument	p		4773640	3					
ANR	4773747	Identifier	p		4773640	0					
ANR	4773748	ExpressionStatement	free ( p )	339:1:7845:7853	4773640	7	True				
ANR	4773749	CallExpression	free ( p )		4773640	0					
ANR	4773750	Callee	free		4773640	0					
ANR	4773751	Identifier	free		4773640	0					
ANR	4773752	ArgumentList	p		4773640	1					
ANR	4773753	Argument	p		4773640	0					
ANR	4773754	Identifier	p		4773640	0					
ANR	4773755	ReturnType	static void		4773640	1					
ANR	4773756	Identifier	rcc_pusharg		4773640	2					
ANR	4773757	ParameterList	"REgg * egg , char * str"		4773640	3					
ANR	4773758	Parameter	REgg * egg	326:24:7394:7402	4773640	0	True				
ANR	4773759	ParameterType	REgg *		4773640	0					
ANR	4773760	Identifier	egg		4773640	1					
ANR	4773761	Parameter	char * str	326:35:7405:7413	4773640	1	True				
ANR	4773762	ParameterType	char *		4773640	0					
ANR	4773763	Identifier	str		4773640	1					
ANR	4773764	CFGEntryNode	ENTRY		4773640		True				
ANR	4773765	CFGExitNode	EXIT		4773640		True				
ANR	4773766	Symbol	r_egg_mkvar		4773640						
ANR	4773767	Symbol	egg		4773640						
ANR	4773768	Symbol	e		4773640						
ANR	4773769	Symbol	CTX		4773640						
ANR	4773770	Symbol	egg -> lang . ctxpush		4773640						
ANR	4773771	Symbol	egg -> lang . nargs		4773640						
ANR	4773772	Symbol	* egg -> lang . ctxpush		4773640						
ANR	4773773	Symbol	egg -> remit		4773640						
ANR	4773774	Symbol	egg -> lang		4773640						
ANR	4773775	Symbol	* CTX		4773640						
ANR	4773776	Symbol	* egg -> lang		4773640						
ANR	4773777	Symbol	str		4773640						
ANR	4773778	Symbol	* egg		4773640						
ANR	4773779	Symbol	p		4773640						
ANR	4773780	Symbol	buf		4773640						
ANR	4773781	Symbol	egg -> lang . pushargs		4773640						
ANR	4773782	Symbol	egg -> lang . varxs		4773640						
ANR	4773783	Symbol	* * egg		4773640						
ANR	4773784	Symbol	strdup		4773640						
ANR	4773785	Function	rcc_element	342:0:7858:11169							
ANR	4773786	FunctionDef	"rcc_element (REgg * egg , char * str)"		4773785	0					
ANR	4773787	CompoundStatement		342:46:7904:11169	4773785	0					
ANR	4773788	IfStatement	if ( ! egg || ! str )		4773785	0					
ANR	4773789	Condition	! egg || ! str	343:5:7911:7922	4773785	0	True				
ANR	4773790	OrExpression	! egg || ! str		4773785	0		||			
ANR	4773791	UnaryOperationExpression	! egg		4773785	0					
ANR	4773792	UnaryOperator	!		4773785	0					
ANR	4773793	Identifier	egg		4773785	1					
ANR	4773794	UnaryOperationExpression	! str		4773785	1					
ANR	4773795	UnaryOperator	!		4773785	0					
ANR	4773796	Identifier	str		4773785	1					
ANR	4773797	CompoundStatement		2:19:20:20	4773785	1					
ANR	4773798	ReturnStatement	return ;	344:2:7929:7935	4773785	0	True				
ANR	4773799	IdentifierDeclStatement	REggEmit * e = egg -> remit ;	346:1:7941:7965	4773785	1	True				
ANR	4773800	IdentifierDecl	* e = egg -> remit		4773785	0					
ANR	4773801	IdentifierDeclType	REggEmit *		4773785	0					
ANR	4773802	Identifier	e		4773785	1					
ANR	4773803	AssignmentExpression	* e = egg -> remit		4773785	2		=			
ANR	4773804	Identifier	e		4773785	0					
ANR	4773805	PtrMemberAccess	egg -> remit		4773785	1					
ANR	4773806	Identifier	egg		4773785	0					
ANR	4773807	Identifier	remit		4773785	1					
ANR	4773808	IdentifierDeclStatement	"char * ptr , * p = str + strlen ( str ) ;"	347:1:7968:8002	4773785	2	True				
ANR	4773809	IdentifierDecl	* ptr		4773785	0					
ANR	4773810	IdentifierDeclType	char *		4773785	0					
ANR	4773811	Identifier	ptr		4773785	1					
ANR	4773812	IdentifierDecl	* p = str + strlen ( str )		4773785	1					
ANR	4773813	IdentifierDeclType	char *		4773785	0					
ANR	4773814	Identifier	p		4773785	1					
ANR	4773815	AssignmentExpression	* p = str + strlen ( str )		4773785	2		=			
ANR	4773816	Identifier	p		4773785	0					
ANR	4773817	AdditiveExpression	str + strlen ( str )		4773785	1		+			
ANR	4773818	Identifier	str		4773785	0					
ANR	4773819	CallExpression	strlen ( str )		4773785	1					
ANR	4773820	Callee	strlen		4773785	0					
ANR	4773821	Identifier	strlen		4773785	0					
ANR	4773822	ArgumentList	str		4773785	1					
ANR	4773823	Argument	str		4773785	0					
ANR	4773824	Identifier	str		4773785	0					
ANR	4773825	IdentifierDeclStatement	int inside = 0 ;	348:1:8005:8019	4773785	3	True				
ANR	4773826	IdentifierDecl	inside = 0		4773785	0					
ANR	4773827	IdentifierDeclType	int		4773785	0					
ANR	4773828	Identifier	inside		4773785	1					
ANR	4773829	AssignmentExpression	inside = 0		4773785	2		=			
ANR	4773830	Identifier	inside		4773785	0					
ANR	4773831	PrimaryExpression	0		4773785	1					
ANR	4773832	IdentifierDeclStatement	"int num , num2 ;"	349:1:8022:8035	4773785	4	True				
ANR	4773833	IdentifierDecl	num		4773785	0					
ANR	4773834	IdentifierDeclType	int		4773785	0					
ANR	4773835	Identifier	num		4773785	1					
ANR	4773836	IdentifierDecl	num2		4773785	1					
ANR	4773837	IdentifierDeclType	int		4773785	0					
ANR	4773838	Identifier	num2		4773785	1					
ANR	4773839	IdentifierDeclStatement	int i ;	350:1:8038:8043	4773785	5	True				
ANR	4773840	IdentifierDecl	i		4773785	0					
ANR	4773841	IdentifierDeclType	int		4773785	0					
ANR	4773842	Identifier	i		4773785	1					
ANR	4773843	IfStatement	if ( CTX )		4773785	6					
ANR	4773844	Condition	CTX	352:5:8051:8053	4773785	0	True				
ANR	4773845	Identifier	CTX		4773785	0					
ANR	4773846	CompoundStatement		11:10:151:151	4773785	1					
ANR	4773847	IfStatement	"if ( egg -> lang . slurp == '""' )"		4773785	0					
ANR	4773848	Condition	"egg -> lang . slurp == '""'"	353:6:8064:8085	4773785	0	True				
ANR	4773849	EqualityExpression	"egg -> lang . slurp == '""'"		4773785	0		==			
ANR	4773850	MemberAccess	egg -> lang . slurp		4773785	0					
ANR	4773851	PtrMemberAccess	egg -> lang		4773785	0					
ANR	4773852	Identifier	egg		4773785	0					
ANR	4773853	Identifier	lang		4773785	1					
ANR	4773854	Identifier	slurp		4773785	1					
ANR	4773855	PrimaryExpression	"'""'"		4773785	1					
ANR	4773856	CompoundStatement		12:30:183:183	4773785	1					
ANR	4773857	IfStatement	if ( egg -> lang . mode == NORMAL )		4773785	0					
ANR	4773858	Condition	egg -> lang . mode == NORMAL	354:7:8097:8120	4773785	0	True				
ANR	4773859	EqualityExpression	egg -> lang . mode == NORMAL		4773785	0		==			
ANR	4773860	MemberAccess	egg -> lang . mode		4773785	0					
ANR	4773861	PtrMemberAccess	egg -> lang		4773785	0					
ANR	4773862	Identifier	egg		4773785	0					
ANR	4773863	Identifier	lang		4773785	1					
ANR	4773864	Identifier	mode		4773785	1					
ANR	4773865	Identifier	NORMAL		4773785	1					
ANR	4773866	CompoundStatement		13:33:218:218	4773785	1					
ANR	4773867	IfStatement	if ( ! egg -> lang . dstvar )		4773785	0					
ANR	4773868	Condition	! egg -> lang . dstvar	355:8:8133:8149	4773785	0	True				
ANR	4773869	UnaryOperationExpression	! egg -> lang . dstvar		4773785	0					
ANR	4773870	UnaryOperator	!		4773785	0					
ANR	4773871	MemberAccess	egg -> lang . dstvar		4773785	1					
ANR	4773872	PtrMemberAccess	egg -> lang		4773785	0					
ANR	4773873	Identifier	egg		4773785	0					
ANR	4773874	Identifier	lang		4773785	1					
ANR	4773875	Identifier	dstvar		4773785	1					
ANR	4773876	CompoundStatement		14:27:247:247	4773785	1					
ANR	4773877	ExpressionStatement	"egg -> lang . dstvar = strdup ( "".fix0"" )"	356:5:8159:8194	4773785	0	True				
ANR	4773878	AssignmentExpression	"egg -> lang . dstvar = strdup ( "".fix0"" )"		4773785	0		=			
ANR	4773879	MemberAccess	egg -> lang . dstvar		4773785	0					
ANR	4773880	PtrMemberAccess	egg -> lang		4773785	0					
ANR	4773881	Identifier	egg		4773785	0					
ANR	4773882	Identifier	lang		4773785	1					
ANR	4773883	Identifier	dstvar		4773785	1					
ANR	4773884	CallExpression	"strdup ( "".fix0"" )"		4773785	1					
ANR	4773885	Callee	strdup		4773785	0					
ANR	4773886	Identifier	strdup		4773785	0					
ANR	4773887	ArgumentList	""".fix0"""		4773785	1					
ANR	4773888	Argument	""".fix0"""		4773785	0					
ANR	4773889	PrimaryExpression	""".fix0"""		4773785	0					
ANR	4773890	ExpressionStatement	"rcc_pushstr ( egg , str , 1 )"	358:4:8206:8231	4773785	1	True				
ANR	4773891	CallExpression	"rcc_pushstr ( egg , str , 1 )"		4773785	0					
ANR	4773892	Callee	rcc_pushstr		4773785	0					
ANR	4773893	Identifier	rcc_pushstr		4773785	0					
ANR	4773894	ArgumentList	egg		4773785	1					
ANR	4773895	Argument	egg		4773785	0					
ANR	4773896	Identifier	egg		4773785	0					
ANR	4773897	Argument	str		4773785	1					
ANR	4773898	Identifier	str		4773785	0					
ANR	4773899	Argument	1		4773785	2					
ANR	4773900	PrimaryExpression	1		4773785	0					
ANR	4773901	ElseStatement	else		4773785	0					
ANR	4773902	CompoundStatement		19:9:342:342	4773785	0					
ANR	4773903	IfStatement	if ( egg -> lang . callname )		4773785	0					
ANR	4773904	Condition	egg -> lang . callname	361:7:8256:8273	4773785	0	True				
ANR	4773905	MemberAccess	egg -> lang . callname		4773785	0					
ANR	4773906	PtrMemberAccess	egg -> lang		4773785	0					
ANR	4773907	Identifier	egg		4773785	0					
ANR	4773908	Identifier	lang		4773785	1					
ANR	4773909	Identifier	callname		4773785	1					
ANR	4773910	CompoundStatement		20:27:371:371	4773785	1					
ANR	4773911	IfStatement	"if ( strstr ( egg -> lang . callname , ""while"" ) || strstr ( egg -> lang . callname , ""if"" ) )"		4773785	0					
ANR	4773912	Condition	"strstr ( egg -> lang . callname , ""while"" ) || strstr ( egg -> lang . callname , ""if"" )"	362:8:8286:8358	4773785	0	True				
ANR	4773913	OrExpression	"strstr ( egg -> lang . callname , ""while"" ) || strstr ( egg -> lang . callname , ""if"" )"		4773785	0		||			
ANR	4773914	CallExpression	"strstr ( egg -> lang . callname , ""while"" )"		4773785	0					
ANR	4773915	Callee	strstr		4773785	0					
ANR	4773916	Identifier	strstr		4773785	0					
ANR	4773917	ArgumentList	egg -> lang . callname		4773785	1					
ANR	4773918	Argument	egg -> lang . callname		4773785	0					
ANR	4773919	MemberAccess	egg -> lang . callname		4773785	0					
ANR	4773920	PtrMemberAccess	egg -> lang		4773785	0					
ANR	4773921	Identifier	egg		4773785	0					
ANR	4773922	Identifier	lang		4773785	1					
ANR	4773923	Identifier	callname		4773785	1					
ANR	4773924	Argument	"""while"""		4773785	1					
ANR	4773925	PrimaryExpression	"""while"""		4773785	0					
ANR	4773926	CallExpression	"strstr ( egg -> lang . callname , ""if"" )"		4773785	1					
ANR	4773927	Callee	strstr		4773785	0					
ANR	4773928	Identifier	strstr		4773785	0					
ANR	4773929	ArgumentList	egg -> lang . callname		4773785	1					
ANR	4773930	Argument	egg -> lang . callname		4773785	0					
ANR	4773931	MemberAccess	egg -> lang . callname		4773785	0					
ANR	4773932	PtrMemberAccess	egg -> lang		4773785	0					
ANR	4773933	Identifier	egg		4773785	0					
ANR	4773934	Identifier	lang		4773785	1					
ANR	4773935	Identifier	callname		4773785	1					
ANR	4773936	Argument	"""if"""		4773785	1					
ANR	4773937	PrimaryExpression	"""if"""		4773785	0					
ANR	4773938	CompoundStatement		21:83:456:456	4773785	1					
ANR	4773939	ExpressionStatement	egg -> lang . conditionstr = strdup ( str )	363:5:8368:8405	4773785	0	True				
ANR	4773940	AssignmentExpression	egg -> lang . conditionstr = strdup ( str )		4773785	0		=			
ANR	4773941	MemberAccess	egg -> lang . conditionstr		4773785	0					
ANR	4773942	PtrMemberAccess	egg -> lang		4773785	0					
ANR	4773943	Identifier	egg		4773785	0					
ANR	4773944	Identifier	lang		4773785	1					
ANR	4773945	Identifier	conditionstr		4773785	1					
ANR	4773946	CallExpression	strdup ( str )		4773785	1					
ANR	4773947	Callee	strdup		4773785	0					
ANR	4773948	Identifier	strdup		4773785	0					
ANR	4773949	ArgumentList	str		4773785	1					
ANR	4773950	Argument	str		4773785	0					
ANR	4773951	Identifier	str		4773785	0					
ANR	4773952	ExpressionStatement	egg -> lang . nargs = 0	366:3:8421:8440	4773785	1	True				
ANR	4773953	AssignmentExpression	egg -> lang . nargs = 0		4773785	0		=			
ANR	4773954	MemberAccess	egg -> lang . nargs		4773785	0					
ANR	4773955	PtrMemberAccess	egg -> lang		4773785	0					
ANR	4773956	Identifier	egg		4773785	0					
ANR	4773957	Identifier	lang		4773785	1					
ANR	4773958	Identifier	nargs		4773785	1					
ANR	4773959	PrimaryExpression	0		4773785	1					
ANR	4773960	IfStatement	if ( egg -> lang . mode == GOTO )		4773785	2					
ANR	4773961	Condition	egg -> lang . mode == GOTO	367:7:8449:8470	4773785	0	True				
ANR	4773962	EqualityExpression	egg -> lang . mode == GOTO		4773785	0		==			
ANR	4773963	MemberAccess	egg -> lang . mode		4773785	0					
ANR	4773964	PtrMemberAccess	egg -> lang		4773785	0					
ANR	4773965	Identifier	egg		4773785	0					
ANR	4773966	Identifier	lang		4773785	1					
ANR	4773967	Identifier	mode		4773785	1					
ANR	4773968	Identifier	GOTO		4773785	1					
ANR	4773969	CompoundStatement		26:31:568:568	4773785	1					
ANR	4773970	ExpressionStatement	egg -> lang . mode = NORMAL	368:4:8479:8502	4773785	0	True				
ANR	4773971	AssignmentExpression	egg -> lang . mode = NORMAL		4773785	0		=			
ANR	4773972	MemberAccess	egg -> lang . mode		4773785	0					
ANR	4773973	PtrMemberAccess	egg -> lang		4773785	0					
ANR	4773974	Identifier	egg		4773785	0					
ANR	4773975	Identifier	lang		4773785	1					
ANR	4773976	Identifier	mode		4773785	1					
ANR	4773977	Identifier	NORMAL		4773785	1					
ANR	4773978	WhileStatement	while ( p -- != str )		4773785	3					
ANR	4773979	Condition	p -- != str	370:10:8526:8535	4773785	0	True				
ANR	4773980	EqualityExpression	p -- != str		4773785	0		!=			
ANR	4773981	PostIncDecOperationExpression	p --		4773785	0					
ANR	4773982	Identifier	p		4773785	0					
ANR	4773983	IncDec	--		4773785	1					
ANR	4773984	Identifier	str		4773785	1					
ANR	4773985	CompoundStatement		29:22:633:633	4773785	1					
ANR	4773986	IfStatement	"if ( * p == '""' )"		4773785	0					
ANR	4773987	Condition	"* p == '""'"	371:8:8548:8556	4773785	0	True				
ANR	4773988	EqualityExpression	"* p == '""'"		4773785	0		==			
ANR	4773989	UnaryOperationExpression	* p		4773785	0					
ANR	4773990	UnaryOperator	*		4773785	0					
ANR	4773991	Identifier	p		4773785	1					
ANR	4773992	PrimaryExpression	"'""'"		4773785	1					
ANR	4773993	CompoundStatement		30:19:654:654	4773785	1					
ANR	4773994	ExpressionStatement	inside ^= 1	372:5:8566:8577	4773785	0	True				
ANR	4773995	AssignmentExpression	inside ^= 1		4773785	0		^=			
ANR	4773996	Identifier	inside		4773785	0					
ANR	4773997	PrimaryExpression	1		4773785	1					
ANR	4773998	ElseStatement	else		4773785	0					
ANR	4773999	IfStatement	"if ( * p == ',' && ! inside )"		4773785	0					
ANR	4774000	Condition	"* p == ',' && ! inside"	373:15:8594:8613	4773785	0	True				
ANR	4774001	AndExpression	"* p == ',' && ! inside"		4773785	0		&&			
ANR	4774002	EqualityExpression	"* p == ','"		4773785	0		==			
ANR	4774003	UnaryOperationExpression	* p		4773785	0					
ANR	4774004	UnaryOperator	*		4773785	0					
ANR	4774005	Identifier	p		4773785	1					
ANR	4774006	PrimaryExpression	"','"		4773785	1					
ANR	4774007	UnaryOperationExpression	! inside		4773785	1					
ANR	4774008	UnaryOperator	!		4773785	0					
ANR	4774009	Identifier	inside		4773785	1					
ANR	4774010	CompoundStatement		32:37:711:711	4773785	1					
ANR	4774011	ExpressionStatement	* p = '\\0'	374:5:8623:8632	4773785	0	True				
ANR	4774012	AssignmentExpression	* p = '\\0'		4773785	0		=			
ANR	4774013	UnaryOperationExpression	* p		4773785	0					
ANR	4774014	UnaryOperator	*		4773785	0					
ANR	4774015	Identifier	p		4773785	1					
ANR	4774016	PrimaryExpression	'\\0'		4773785	1					
ANR	4774017	ExpressionStatement	p = ( char * ) skipspaces ( p + 1 )	375:5:8639:8670	4773785	1	True				
ANR	4774018	AssignmentExpression	p = ( char * ) skipspaces ( p + 1 )		4773785	0		=			
ANR	4774019	Identifier	p		4773785	0					
ANR	4774020	CastExpression	( char * ) skipspaces ( p + 1 )		4773785	1					
ANR	4774021	CastTarget	char *		4773785	0					
ANR	4774022	CallExpression	skipspaces ( p + 1 )		4773785	1					
ANR	4774023	Callee	skipspaces		4773785	0					
ANR	4774024	Identifier	skipspaces		4773785	0					
ANR	4774025	ArgumentList	p + 1		4773785	1					
ANR	4774026	Argument	p + 1		4773785	0					
ANR	4774027	AdditiveExpression	p + 1		4773785	0		+			
ANR	4774028	Identifier	p		4773785	0					
ANR	4774029	PrimaryExpression	1		4773785	1					
ANR	4774030	ExpressionStatement	"rcc_pusharg ( egg , p )"	376:5:8677:8697	4773785	2	True				
ANR	4774031	CallExpression	"rcc_pusharg ( egg , p )"		4773785	0					
ANR	4774032	Callee	rcc_pusharg		4773785	0					
ANR	4774033	Identifier	rcc_pusharg		4773785	0					
ANR	4774034	ArgumentList	egg		4773785	1					
ANR	4774035	Argument	egg		4773785	0					
ANR	4774036	Identifier	egg		4773785	0					
ANR	4774037	Argument	p		4773785	1					
ANR	4774038	Identifier	p		4773785	0					
ANR	4774039	ExpressionStatement	"rcc_pusharg ( egg , str )"	379:3:8713:8735	4773785	4	True				
ANR	4774040	CallExpression	"rcc_pusharg ( egg , str )"		4773785	0					
ANR	4774041	Callee	rcc_pusharg		4773785	0					
ANR	4774042	Identifier	rcc_pusharg		4773785	0					
ANR	4774043	ArgumentList	egg		4773785	1					
ANR	4774044	Argument	egg		4773785	0					
ANR	4774045	Identifier	egg		4773785	0					
ANR	4774046	Argument	str		4773785	1					
ANR	4774047	Identifier	str		4773785	0					
ANR	4774048	ElseStatement	else		4773785	0					
ANR	4774049	CompoundStatement		40:8:844:844	4773785	0					
ANR	4774050	SwitchStatement	switch ( egg -> lang . mode )		4773785	0					
ANR	4774051	Condition	egg -> lang . mode	382:10:8761:8774	4773785	0	True				
ANR	4774052	MemberAccess	egg -> lang . mode		4773785	0					
ANR	4774053	PtrMemberAccess	egg -> lang		4773785	0					
ANR	4774054	Identifier	egg		4773785	0					
ANR	4774055	Identifier	lang		4773785	1					
ANR	4774056	Identifier	mode		4773785	1					
ANR	4774057	CompoundStatement		41:26:872:872	4773785	1					
ANR	4774058	Label	case ALIAS :	383:2:8781:8791	4773785	0	True				
ANR	4774059	Identifier	ALIAS		4773785	0					
ANR	4774060	IfStatement	if ( ! egg -> lang . dstvar )		4773785	1					
ANR	4774061	Condition	! egg -> lang . dstvar	384:7:8800:8816	4773785	0	True				
ANR	4774062	UnaryOperationExpression	! egg -> lang . dstvar		4773785	0					
ANR	4774063	UnaryOperator	!		4773785	0					
ANR	4774064	MemberAccess	egg -> lang . dstvar		4773785	1					
ANR	4774065	PtrMemberAccess	egg -> lang		4773785	0					
ANR	4774066	Identifier	egg		4773785	0					
ANR	4774067	Identifier	lang		4773785	1					
ANR	4774068	Identifier	dstvar		4773785	1					
ANR	4774069	CompoundStatement		43:26:914:914	4773785	1					
ANR	4774070	ExpressionStatement	"eprintf ( ""does not set name or content for alias\\n"" )"	385:4:8825:8877	4773785	0	True				
ANR	4774071	CallExpression	"eprintf ( ""does not set name or content for alias\\n"" )"		4773785	0					
ANR	4774072	Callee	eprintf		4773785	0					
ANR	4774073	Identifier	eprintf		4773785	0					
ANR	4774074	ArgumentList	"""does not set name or content for alias\\n"""		4773785	1					
ANR	4774075	Argument	"""does not set name or content for alias\\n"""		4773785	0					
ANR	4774076	PrimaryExpression	"""does not set name or content for alias\\n"""		4773785	0					
ANR	4774077	BreakStatement	break ;	386:4:8883:8888	4773785	1	True				
ANR	4774078	ExpressionStatement	"e -> equ ( egg , egg -> lang . dstvar , str )"	388:3:8898:8933	4773785	2	True				
ANR	4774079	CallExpression	"e -> equ ( egg , egg -> lang . dstvar , str )"		4773785	0					
ANR	4774080	Callee	e -> equ		4773785	0					
ANR	4774081	PtrMemberAccess	e -> equ		4773785	0					
ANR	4774082	Identifier	e		4773785	0					
ANR	4774083	Identifier	equ		4773785	1					
ANR	4774084	ArgumentList	egg		4773785	1					
ANR	4774085	Argument	egg		4773785	0					
ANR	4774086	Identifier	egg		4773785	0					
ANR	4774087	Argument	egg -> lang . dstvar		4773785	1					
ANR	4774088	MemberAccess	egg -> lang . dstvar		4773785	0					
ANR	4774089	PtrMemberAccess	egg -> lang		4773785	0					
ANR	4774090	Identifier	egg		4773785	0					
ANR	4774091	Identifier	lang		4773785	1					
ANR	4774092	Identifier	dstvar		4773785	1					
ANR	4774093	Argument	str		4773785	2					
ANR	4774094	Identifier	str		4773785	0					
ANR	4774095	IfStatement	if ( egg -> lang . nalias > 255 )		4773785	3					
ANR	4774096	Condition	egg -> lang . nalias > 255	389:7:8942:8963	4773785	0	True				
ANR	4774097	RelationalExpression	egg -> lang . nalias > 255		4773785	0		>			
ANR	4774098	MemberAccess	egg -> lang . nalias		4773785	0					
ANR	4774099	PtrMemberAccess	egg -> lang		4773785	0					
ANR	4774100	Identifier	egg		4773785	0					
ANR	4774101	Identifier	lang		4773785	1					
ANR	4774102	Identifier	nalias		4773785	1					
ANR	4774103	PrimaryExpression	255		4773785	1					
ANR	4774104	CompoundStatement		48:31:1061:1061	4773785	1					
ANR	4774105	ExpressionStatement	"eprintf ( ""global-buffer-overflow in aliases\\n"" )"	390:4:8972:9019	4773785	0	True				
ANR	4774106	CallExpression	"eprintf ( ""global-buffer-overflow in aliases\\n"" )"		4773785	0					
ANR	4774107	Callee	eprintf		4773785	0					
ANR	4774108	Identifier	eprintf		4773785	0					
ANR	4774109	ArgumentList	"""global-buffer-overflow in aliases\\n"""		4773785	1					
ANR	4774110	Argument	"""global-buffer-overflow in aliases\\n"""		4773785	0					
ANR	4774111	PrimaryExpression	"""global-buffer-overflow in aliases\\n"""		4773785	0					
ANR	4774112	BreakStatement	break ;	391:4:9025:9030	4773785	1	True				
ANR	4774113	ForStatement	for ( i = 0 ; i < egg -> lang . nalias ; i ++ )		4773785	4					
ANR	4774114	ForInit	i = 0 ;	393:8:9045:9050	4773785	0	True				
ANR	4774115	AssignmentExpression	i = 0		4773785	0		=			
ANR	4774116	Identifier	i		4773785	0					
ANR	4774117	PrimaryExpression	0		4773785	1					
ANR	4774118	Condition	i < egg -> lang . nalias	393:15:9052:9071	4773785	1	True				
ANR	4774119	RelationalExpression	i < egg -> lang . nalias		4773785	0		<			
ANR	4774120	Identifier	i		4773785	0					
ANR	4774121	MemberAccess	egg -> lang . nalias		4773785	1					
ANR	4774122	PtrMemberAccess	egg -> lang		4773785	0					
ANR	4774123	Identifier	egg		4773785	0					
ANR	4774124	Identifier	lang		4773785	1					
ANR	4774125	Identifier	nalias		4773785	1					
ANR	4774126	PostIncDecOperationExpression	i ++	393:37:9074:9076	4773785	2	True				
ANR	4774127	Identifier	i		4773785	0					
ANR	4774128	IncDec	++		4773785	1					
ANR	4774129	CompoundStatement		52:42:1174:1174	4773785	3					
ANR	4774130	IfStatement	"if ( ! strcmp ( egg -> lang . dstvar , egg -> lang . aliases [ i ] . name ) )"		4773785	0					
ANR	4774131	Condition	"! strcmp ( egg -> lang . dstvar , egg -> lang . aliases [ i ] . name )"	394:8:9089:9141	4773785	0	True				
ANR	4774132	UnaryOperationExpression	"! strcmp ( egg -> lang . dstvar , egg -> lang . aliases [ i ] . name )"		4773785	0					
ANR	4774133	UnaryOperator	!		4773785	0					
ANR	4774134	CallExpression	"strcmp ( egg -> lang . dstvar , egg -> lang . aliases [ i ] . name )"		4773785	1					
ANR	4774135	Callee	strcmp		4773785	0					
ANR	4774136	Identifier	strcmp		4773785	0					
ANR	4774137	ArgumentList	egg -> lang . dstvar		4773785	1					
ANR	4774138	Argument	egg -> lang . dstvar		4773785	0					
ANR	4774139	MemberAccess	egg -> lang . dstvar		4773785	0					
ANR	4774140	PtrMemberAccess	egg -> lang		4773785	0					
ANR	4774141	Identifier	egg		4773785	0					
ANR	4774142	Identifier	lang		4773785	1					
ANR	4774143	Identifier	dstvar		4773785	1					
ANR	4774144	Argument	egg -> lang . aliases [ i ] . name		4773785	1					
ANR	4774145	MemberAccess	egg -> lang . aliases [ i ] . name		4773785	0					
ANR	4774146	ArrayIndexing	egg -> lang . aliases [ i ]		4773785	0					
ANR	4774147	MemberAccess	egg -> lang . aliases		4773785	0					
ANR	4774148	PtrMemberAccess	egg -> lang		4773785	0					
ANR	4774149	Identifier	egg		4773785	0					
ANR	4774150	Identifier	lang		4773785	1					
ANR	4774151	Identifier	aliases		4773785	1					
ANR	4774152	Identifier	i		4773785	1					
ANR	4774153	Identifier	name		4773785	1					
ANR	4774154	CompoundStatement		53:63:1239:1239	4773785	1					
ANR	4774155	ExpressionStatement	R_FREE ( egg -> lang . aliases [ i ] . name )	395:5:9151:9185	4773785	0	True				
ANR	4774156	CallExpression	R_FREE ( egg -> lang . aliases [ i ] . name )		4773785	0					
ANR	4774157	Callee	R_FREE		4773785	0					
ANR	4774158	Identifier	R_FREE		4773785	0					
ANR	4774159	ArgumentList	egg -> lang . aliases [ i ] . name		4773785	1					
ANR	4774160	Argument	egg -> lang . aliases [ i ] . name		4773785	0					
ANR	4774161	MemberAccess	egg -> lang . aliases [ i ] . name		4773785	0					
ANR	4774162	ArrayIndexing	egg -> lang . aliases [ i ]		4773785	0					
ANR	4774163	MemberAccess	egg -> lang . aliases		4773785	0					
ANR	4774164	PtrMemberAccess	egg -> lang		4773785	0					
ANR	4774165	Identifier	egg		4773785	0					
ANR	4774166	Identifier	lang		4773785	1					
ANR	4774167	Identifier	aliases		4773785	1					
ANR	4774168	Identifier	i		4773785	1					
ANR	4774169	Identifier	name		4773785	1					
ANR	4774170	ExpressionStatement	R_FREE ( egg -> lang . aliases [ i ] . content )	396:5:9192:9229	4773785	1	True				
ANR	4774171	CallExpression	R_FREE ( egg -> lang . aliases [ i ] . content )		4773785	0					
ANR	4774172	Callee	R_FREE		4773785	0					
ANR	4774173	Identifier	R_FREE		4773785	0					
ANR	4774174	ArgumentList	egg -> lang . aliases [ i ] . content		4773785	1					
ANR	4774175	Argument	egg -> lang . aliases [ i ] . content		4773785	0					
ANR	4774176	MemberAccess	egg -> lang . aliases [ i ] . content		4773785	0					
ANR	4774177	ArrayIndexing	egg -> lang . aliases [ i ]		4773785	0					
ANR	4774178	MemberAccess	egg -> lang . aliases		4773785	0					
ANR	4774179	PtrMemberAccess	egg -> lang		4773785	0					
ANR	4774180	Identifier	egg		4773785	0					
ANR	4774181	Identifier	lang		4773785	1					
ANR	4774182	Identifier	aliases		4773785	1					
ANR	4774183	Identifier	i		4773785	1					
ANR	4774184	Identifier	content		4773785	1					
ANR	4774185	BreakStatement	break ;	397:5:9236:9241	4773785	2	True				
ANR	4774186	ExpressionStatement	egg -> lang . aliases [ i ] . name = strdup ( egg -> lang . dstvar )	400:3:9257:9310	4773785	5	True				
ANR	4774187	AssignmentExpression	egg -> lang . aliases [ i ] . name = strdup ( egg -> lang . dstvar )		4773785	0		=			
ANR	4774188	MemberAccess	egg -> lang . aliases [ i ] . name		4773785	0					
ANR	4774189	ArrayIndexing	egg -> lang . aliases [ i ]		4773785	0					
ANR	4774190	MemberAccess	egg -> lang . aliases		4773785	0					
ANR	4774191	PtrMemberAccess	egg -> lang		4773785	0					
ANR	4774192	Identifier	egg		4773785	0					
ANR	4774193	Identifier	lang		4773785	1					
ANR	4774194	Identifier	aliases		4773785	1					
ANR	4774195	Identifier	i		4773785	1					
ANR	4774196	Identifier	name		4773785	1					
ANR	4774197	CallExpression	strdup ( egg -> lang . dstvar )		4773785	1					
ANR	4774198	Callee	strdup		4773785	0					
ANR	4774199	Identifier	strdup		4773785	0					
ANR	4774200	ArgumentList	egg -> lang . dstvar		4773785	1					
ANR	4774201	Argument	egg -> lang . dstvar		4773785	0					
ANR	4774202	MemberAccess	egg -> lang . dstvar		4773785	0					
ANR	4774203	PtrMemberAccess	egg -> lang		4773785	0					
ANR	4774204	Identifier	egg		4773785	0					
ANR	4774205	Identifier	lang		4773785	1					
ANR	4774206	Identifier	dstvar		4773785	1					
ANR	4774207	ExpressionStatement	egg -> lang . aliases [ i ] . content = strdup ( str )	401:3:9315:9358	4773785	6	True				
ANR	4774208	AssignmentExpression	egg -> lang . aliases [ i ] . content = strdup ( str )		4773785	0		=			
ANR	4774209	MemberAccess	egg -> lang . aliases [ i ] . content		4773785	0					
ANR	4774210	ArrayIndexing	egg -> lang . aliases [ i ]		4773785	0					
ANR	4774211	MemberAccess	egg -> lang . aliases		4773785	0					
ANR	4774212	PtrMemberAccess	egg -> lang		4773785	0					
ANR	4774213	Identifier	egg		4773785	0					
ANR	4774214	Identifier	lang		4773785	1					
ANR	4774215	Identifier	aliases		4773785	1					
ANR	4774216	Identifier	i		4773785	1					
ANR	4774217	Identifier	content		4773785	1					
ANR	4774218	CallExpression	strdup ( str )		4773785	1					
ANR	4774219	Callee	strdup		4773785	0					
ANR	4774220	Identifier	strdup		4773785	0					
ANR	4774221	ArgumentList	str		4773785	1					
ANR	4774222	Argument	str		4773785	0					
ANR	4774223	Identifier	str		4773785	0					
ANR	4774224	ExpressionStatement	egg -> lang . nalias = ( i == egg -> lang . nalias ) ? ( egg -> lang . nalias + 1 ) : egg -> lang . nalias	402:3:9363:9447	4773785	7	True				
ANR	4774225	AssignmentExpression	egg -> lang . nalias = ( i == egg -> lang . nalias ) ? ( egg -> lang . nalias + 1 ) : egg -> lang . nalias		4773785	0		=			
ANR	4774226	MemberAccess	egg -> lang . nalias		4773785	0					
ANR	4774227	PtrMemberAccess	egg -> lang		4773785	0					
ANR	4774228	Identifier	egg		4773785	0					
ANR	4774229	Identifier	lang		4773785	1					
ANR	4774230	Identifier	nalias		4773785	1					
ANR	4774231	ConditionalExpression	( i == egg -> lang . nalias ) ? ( egg -> lang . nalias + 1 ) : egg -> lang . nalias		4773785	1					
ANR	4774232	Condition	i == egg -> lang . nalias		4773785	0					
ANR	4774233	EqualityExpression	i == egg -> lang . nalias		4773785	0		==			
ANR	4774234	Identifier	i		4773785	0					
ANR	4774235	MemberAccess	egg -> lang . nalias		4773785	1					
ANR	4774236	PtrMemberAccess	egg -> lang		4773785	0					
ANR	4774237	Identifier	egg		4773785	0					
ANR	4774238	Identifier	lang		4773785	1					
ANR	4774239	Identifier	nalias		4773785	1					
ANR	4774240	AdditiveExpression	egg -> lang . nalias + 1		4773785	1		+			
ANR	4774241	MemberAccess	egg -> lang . nalias		4773785	0					
ANR	4774242	PtrMemberAccess	egg -> lang		4773785	0					
ANR	4774243	Identifier	egg		4773785	0					
ANR	4774244	Identifier	lang		4773785	1					
ANR	4774245	Identifier	nalias		4773785	1					
ANR	4774246	PrimaryExpression	1		4773785	1					
ANR	4774247	MemberAccess	egg -> lang . nalias		4773785	2					
ANR	4774248	PtrMemberAccess	egg -> lang		4773785	0					
ANR	4774249	Identifier	egg		4773785	0					
ANR	4774250	Identifier	lang		4773785	1					
ANR	4774251	Identifier	nalias		4773785	1					
ANR	4774252	ExpressionStatement	R_FREE ( egg -> lang . dstvar )	404:3:9480:9505	4773785	8	True				
ANR	4774253	CallExpression	R_FREE ( egg -> lang . dstvar )		4773785	0					
ANR	4774254	Callee	R_FREE		4773785	0					
ANR	4774255	Identifier	R_FREE		4773785	0					
ANR	4774256	ArgumentList	egg -> lang . dstvar		4773785	1					
ANR	4774257	Argument	egg -> lang . dstvar		4773785	0					
ANR	4774258	MemberAccess	egg -> lang . dstvar		4773785	0					
ANR	4774259	PtrMemberAccess	egg -> lang		4773785	0					
ANR	4774260	Identifier	egg		4773785	0					
ANR	4774261	Identifier	lang		4773785	1					
ANR	4774262	Identifier	dstvar		4773785	1					
ANR	4774263	ExpressionStatement	egg -> lang . mode = NORMAL	405:3:9510:9533	4773785	9	True				
ANR	4774264	AssignmentExpression	egg -> lang . mode = NORMAL		4773785	0		=			
ANR	4774265	MemberAccess	egg -> lang . mode		4773785	0					
ANR	4774266	PtrMemberAccess	egg -> lang		4773785	0					
ANR	4774267	Identifier	egg		4773785	0					
ANR	4774268	Identifier	lang		4773785	1					
ANR	4774269	Identifier	mode		4773785	1					
ANR	4774270	Identifier	NORMAL		4773785	1					
ANR	4774271	BreakStatement	break ;	406:3:9538:9543	4773785	10	True				
ANR	4774272	Label	case SYSCALL :	407:2:9547:9559	4773785	11	True				
ANR	4774273	Identifier	SYSCALL		4773785	0					
ANR	4774274	IfStatement	if ( ! egg -> lang . dstvar )		4773785	12					
ANR	4774275	Condition	! egg -> lang . dstvar	408:7:9568:9584	4773785	0	True				
ANR	4774276	UnaryOperationExpression	! egg -> lang . dstvar		4773785	0					
ANR	4774277	UnaryOperator	!		4773785	0					
ANR	4774278	MemberAccess	egg -> lang . dstvar		4773785	1					
ANR	4774279	PtrMemberAccess	egg -> lang		4773785	0					
ANR	4774280	Identifier	egg		4773785	0					
ANR	4774281	Identifier	lang		4773785	1					
ANR	4774282	Identifier	dstvar		4773785	1					
ANR	4774283	CompoundStatement		67:26:1682:1682	4773785	1					
ANR	4774284	ExpressionStatement	"eprintf ( ""does not set name or arg for syscall\\n"" )"	409:4:9593:9643	4773785	0	True				
ANR	4774285	CallExpression	"eprintf ( ""does not set name or arg for syscall\\n"" )"		4773785	0					
ANR	4774286	Callee	eprintf		4773785	0					
ANR	4774287	Identifier	eprintf		4773785	0					
ANR	4774288	ArgumentList	"""does not set name or arg for syscall\\n"""		4773785	1					
ANR	4774289	Argument	"""does not set name or arg for syscall\\n"""		4773785	0					
ANR	4774290	PrimaryExpression	"""does not set name or arg for syscall\\n"""		4773785	0					
ANR	4774291	BreakStatement	break ;	410:4:9649:9654	4773785	1	True				
ANR	4774292	IfStatement	if ( egg -> lang . nsyscalls > 255 )		4773785	13					
ANR	4774293	Condition	egg -> lang . nsyscalls > 255	412:7:9668:9692	4773785	0	True				
ANR	4774294	RelationalExpression	egg -> lang . nsyscalls > 255		4773785	0		>			
ANR	4774295	MemberAccess	egg -> lang . nsyscalls		4773785	0					
ANR	4774296	PtrMemberAccess	egg -> lang		4773785	0					
ANR	4774297	Identifier	egg		4773785	0					
ANR	4774298	Identifier	lang		4773785	1					
ANR	4774299	Identifier	nsyscalls		4773785	1					
ANR	4774300	PrimaryExpression	255		4773785	1					
ANR	4774301	CompoundStatement		71:34:1790:1790	4773785	1					
ANR	4774302	ExpressionStatement	"eprintf ( ""global-buffer-overflow in syscalls\\n"" )"	413:4:9701:9749	4773785	0	True				
ANR	4774303	CallExpression	"eprintf ( ""global-buffer-overflow in syscalls\\n"" )"		4773785	0					
ANR	4774304	Callee	eprintf		4773785	0					
ANR	4774305	Identifier	eprintf		4773785	0					
ANR	4774306	ArgumentList	"""global-buffer-overflow in syscalls\\n"""		4773785	1					
ANR	4774307	Argument	"""global-buffer-overflow in syscalls\\n"""		4773785	0					
ANR	4774308	PrimaryExpression	"""global-buffer-overflow in syscalls\\n"""		4773785	0					
ANR	4774309	BreakStatement	break ;	414:4:9755:9760	4773785	1	True				
ANR	4774310	ExpressionStatement	R_FREE ( egg -> lang . syscalls [ egg -> lang . nsyscalls ] . name )	417:3:9829:9882	4773785	14	True				
ANR	4774311	CallExpression	R_FREE ( egg -> lang . syscalls [ egg -> lang . nsyscalls ] . name )		4773785	0					
ANR	4774312	Callee	R_FREE		4773785	0					
ANR	4774313	Identifier	R_FREE		4773785	0					
ANR	4774314	ArgumentList	egg -> lang . syscalls [ egg -> lang . nsyscalls ] . name		4773785	1					
ANR	4774315	Argument	egg -> lang . syscalls [ egg -> lang . nsyscalls ] . name		4773785	0					
ANR	4774316	MemberAccess	egg -> lang . syscalls [ egg -> lang . nsyscalls ] . name		4773785	0					
ANR	4774317	ArrayIndexing	egg -> lang . syscalls [ egg -> lang . nsyscalls ]		4773785	0					
ANR	4774318	MemberAccess	egg -> lang . syscalls		4773785	0					
ANR	4774319	PtrMemberAccess	egg -> lang		4773785	0					
ANR	4774320	Identifier	egg		4773785	0					
ANR	4774321	Identifier	lang		4773785	1					
ANR	4774322	Identifier	syscalls		4773785	1					
ANR	4774323	MemberAccess	egg -> lang . nsyscalls		4773785	1					
ANR	4774324	PtrMemberAccess	egg -> lang		4773785	0					
ANR	4774325	Identifier	egg		4773785	0					
ANR	4774326	Identifier	lang		4773785	1					
ANR	4774327	Identifier	nsyscalls		4773785	1					
ANR	4774328	Identifier	name		4773785	1					
ANR	4774329	ExpressionStatement	R_FREE ( egg -> lang . syscalls [ egg -> lang . nsyscalls ] . arg )	418:3:9887:9939	4773785	15	True				
ANR	4774330	CallExpression	R_FREE ( egg -> lang . syscalls [ egg -> lang . nsyscalls ] . arg )		4773785	0					
ANR	4774331	Callee	R_FREE		4773785	0					
ANR	4774332	Identifier	R_FREE		4773785	0					
ANR	4774333	ArgumentList	egg -> lang . syscalls [ egg -> lang . nsyscalls ] . arg		4773785	1					
ANR	4774334	Argument	egg -> lang . syscalls [ egg -> lang . nsyscalls ] . arg		4773785	0					
ANR	4774335	MemberAccess	egg -> lang . syscalls [ egg -> lang . nsyscalls ] . arg		4773785	0					
ANR	4774336	ArrayIndexing	egg -> lang . syscalls [ egg -> lang . nsyscalls ]		4773785	0					
ANR	4774337	MemberAccess	egg -> lang . syscalls		4773785	0					
ANR	4774338	PtrMemberAccess	egg -> lang		4773785	0					
ANR	4774339	Identifier	egg		4773785	0					
ANR	4774340	Identifier	lang		4773785	1					
ANR	4774341	Identifier	syscalls		4773785	1					
ANR	4774342	MemberAccess	egg -> lang . nsyscalls		4773785	1					
ANR	4774343	PtrMemberAccess	egg -> lang		4773785	0					
ANR	4774344	Identifier	egg		4773785	0					
ANR	4774345	Identifier	lang		4773785	1					
ANR	4774346	Identifier	nsyscalls		4773785	1					
ANR	4774347	Identifier	arg		4773785	1					
ANR	4774348	ExpressionStatement	egg -> lang . syscalls [ egg -> lang . nsyscalls ] . name = strdup ( egg -> lang . dstvar )	419:3:9944:10016	4773785	16	True				
ANR	4774349	AssignmentExpression	egg -> lang . syscalls [ egg -> lang . nsyscalls ] . name = strdup ( egg -> lang . dstvar )		4773785	0		=			
ANR	4774350	MemberAccess	egg -> lang . syscalls [ egg -> lang . nsyscalls ] . name		4773785	0					
ANR	4774351	ArrayIndexing	egg -> lang . syscalls [ egg -> lang . nsyscalls ]		4773785	0					
ANR	4774352	MemberAccess	egg -> lang . syscalls		4773785	0					
ANR	4774353	PtrMemberAccess	egg -> lang		4773785	0					
ANR	4774354	Identifier	egg		4773785	0					
ANR	4774355	Identifier	lang		4773785	1					
ANR	4774356	Identifier	syscalls		4773785	1					
ANR	4774357	MemberAccess	egg -> lang . nsyscalls		4773785	1					
ANR	4774358	PtrMemberAccess	egg -> lang		4773785	0					
ANR	4774359	Identifier	egg		4773785	0					
ANR	4774360	Identifier	lang		4773785	1					
ANR	4774361	Identifier	nsyscalls		4773785	1					
ANR	4774362	Identifier	name		4773785	1					
ANR	4774363	CallExpression	strdup ( egg -> lang . dstvar )		4773785	1					
ANR	4774364	Callee	strdup		4773785	0					
ANR	4774365	Identifier	strdup		4773785	0					
ANR	4774366	ArgumentList	egg -> lang . dstvar		4773785	1					
ANR	4774367	Argument	egg -> lang . dstvar		4773785	0					
ANR	4774368	MemberAccess	egg -> lang . dstvar		4773785	0					
ANR	4774369	PtrMemberAccess	egg -> lang		4773785	0					
ANR	4774370	Identifier	egg		4773785	0					
ANR	4774371	Identifier	lang		4773785	1					
ANR	4774372	Identifier	dstvar		4773785	1					
ANR	4774373	ExpressionStatement	egg -> lang . syscalls [ egg -> lang . nsyscalls ] . arg = strdup ( str )	420:3:10021:10079	4773785	17	True				
ANR	4774374	AssignmentExpression	egg -> lang . syscalls [ egg -> lang . nsyscalls ] . arg = strdup ( str )		4773785	0		=			
ANR	4774375	MemberAccess	egg -> lang . syscalls [ egg -> lang . nsyscalls ] . arg		4773785	0					
ANR	4774376	ArrayIndexing	egg -> lang . syscalls [ egg -> lang . nsyscalls ]		4773785	0					
ANR	4774377	MemberAccess	egg -> lang . syscalls		4773785	0					
ANR	4774378	PtrMemberAccess	egg -> lang		4773785	0					
ANR	4774379	Identifier	egg		4773785	0					
ANR	4774380	Identifier	lang		4773785	1					
ANR	4774381	Identifier	syscalls		4773785	1					
ANR	4774382	MemberAccess	egg -> lang . nsyscalls		4773785	1					
ANR	4774383	PtrMemberAccess	egg -> lang		4773785	0					
ANR	4774384	Identifier	egg		4773785	0					
ANR	4774385	Identifier	lang		4773785	1					
ANR	4774386	Identifier	nsyscalls		4773785	1					
ANR	4774387	Identifier	arg		4773785	1					
ANR	4774388	CallExpression	strdup ( str )		4773785	1					
ANR	4774389	Callee	strdup		4773785	0					
ANR	4774390	Identifier	strdup		4773785	0					
ANR	4774391	ArgumentList	str		4773785	1					
ANR	4774392	Argument	str		4773785	0					
ANR	4774393	Identifier	str		4773785	0					
ANR	4774394	ExpressionStatement	egg -> lang . nsyscalls ++	421:3:10084:10105	4773785	18	True				
ANR	4774395	PostIncDecOperationExpression	egg -> lang . nsyscalls ++		4773785	0					
ANR	4774396	MemberAccess	egg -> lang . nsyscalls		4773785	0					
ANR	4774397	PtrMemberAccess	egg -> lang		4773785	0					
ANR	4774398	Identifier	egg		4773785	0					
ANR	4774399	Identifier	lang		4773785	1					
ANR	4774400	Identifier	nsyscalls		4773785	1					
ANR	4774401	IncDec	++		4773785	1					
ANR	4774402	ExpressionStatement	R_FREE ( egg -> lang . dstvar )	422:3:10110:10135	4773785	19	True				
ANR	4774403	CallExpression	R_FREE ( egg -> lang . dstvar )		4773785	0					
ANR	4774404	Callee	R_FREE		4773785	0					
ANR	4774405	Identifier	R_FREE		4773785	0					
ANR	4774406	ArgumentList	egg -> lang . dstvar		4773785	1					
ANR	4774407	Argument	egg -> lang . dstvar		4773785	0					
ANR	4774408	MemberAccess	egg -> lang . dstvar		4773785	0					
ANR	4774409	PtrMemberAccess	egg -> lang		4773785	0					
ANR	4774410	Identifier	egg		4773785	0					
ANR	4774411	Identifier	lang		4773785	1					
ANR	4774412	Identifier	dstvar		4773785	1					
ANR	4774413	BreakStatement	break ;	423:3:10140:10145	4773785	20	True				
ANR	4774414	Label	case GOTO :	424:2:10149:10158	4773785	21	True				
ANR	4774415	Identifier	GOTO		4773785	0					
ANR	4774416	ExpressionStatement	egg -> lang . elem [ egg -> lang . elem_n ] = 0	425:3:10163:10199	4773785	22	True				
ANR	4774417	AssignmentExpression	egg -> lang . elem [ egg -> lang . elem_n ] = 0		4773785	0		=			
ANR	4774418	ArrayIndexing	egg -> lang . elem [ egg -> lang . elem_n ]		4773785	0					
ANR	4774419	MemberAccess	egg -> lang . elem		4773785	0					
ANR	4774420	PtrMemberAccess	egg -> lang		4773785	0					
ANR	4774421	Identifier	egg		4773785	0					
ANR	4774422	Identifier	lang		4773785	1					
ANR	4774423	Identifier	elem		4773785	1					
ANR	4774424	MemberAccess	egg -> lang . elem_n		4773785	1					
ANR	4774425	PtrMemberAccess	egg -> lang		4773785	0					
ANR	4774426	Identifier	egg		4773785	0					
ANR	4774427	Identifier	lang		4773785	1					
ANR	4774428	Identifier	elem_n		4773785	1					
ANR	4774429	PrimaryExpression	0		4773785	1					
ANR	4774430	ExpressionStatement	"e -> jmp ( egg , egg -> lang . elem , 0 )"	426:3:10204:10235	4773785	23	True				
ANR	4774431	CallExpression	"e -> jmp ( egg , egg -> lang . elem , 0 )"		4773785	0					
ANR	4774432	Callee	e -> jmp		4773785	0					
ANR	4774433	PtrMemberAccess	e -> jmp		4773785	0					
ANR	4774434	Identifier	e		4773785	0					
ANR	4774435	Identifier	jmp		4773785	1					
ANR	4774436	ArgumentList	egg		4773785	1					
ANR	4774437	Argument	egg		4773785	0					
ANR	4774438	Identifier	egg		4773785	0					
ANR	4774439	Argument	egg -> lang . elem		4773785	1					
ANR	4774440	MemberAccess	egg -> lang . elem		4773785	0					
ANR	4774441	PtrMemberAccess	egg -> lang		4773785	0					
ANR	4774442	Identifier	egg		4773785	0					
ANR	4774443	Identifier	lang		4773785	1					
ANR	4774444	Identifier	elem		4773785	1					
ANR	4774445	Argument	0		4773785	2					
ANR	4774446	PrimaryExpression	0		4773785	0					
ANR	4774447	BreakStatement	break ;	427:3:10240:10245	4773785	24	True				
ANR	4774448	Label	case INCLUDE :	428:2:10249:10261	4773785	25	True				
ANR	4774449	Identifier	INCLUDE		4773785	0					
ANR	4774450	ExpressionStatement	"str = ptr = ( char * ) find_alias ( egg , skipspaces ( str ) )"	429:3:10266:10321	4773785	26	True				
ANR	4774451	AssignmentExpression	"str = ptr = ( char * ) find_alias ( egg , skipspaces ( str ) )"		4773785	0		=			
ANR	4774452	Identifier	str		4773785	0					
ANR	4774453	AssignmentExpression	"ptr = ( char * ) find_alias ( egg , skipspaces ( str ) )"		4773785	1		=			
ANR	4774454	Identifier	ptr		4773785	0					
ANR	4774455	CastExpression	"( char * ) find_alias ( egg , skipspaces ( str ) )"		4773785	1					
ANR	4774456	CastTarget	char *		4773785	0					
ANR	4774457	CallExpression	"find_alias ( egg , skipspaces ( str ) )"		4773785	1					
ANR	4774458	Callee	find_alias		4773785	0					
ANR	4774459	Identifier	find_alias		4773785	0					
ANR	4774460	ArgumentList	egg		4773785	1					
ANR	4774461	Argument	egg		4773785	0					
ANR	4774462	Identifier	egg		4773785	0					
ANR	4774463	Argument	skipspaces ( str )		4773785	1					
ANR	4774464	CallExpression	skipspaces ( str )		4773785	0					
ANR	4774465	Callee	skipspaces		4773785	0					
ANR	4774466	Identifier	skipspaces		4773785	0					
ANR	4774467	ArgumentList	str		4773785	1					
ANR	4774468	Argument	str		4773785	0					
ANR	4774469	Identifier	str		4773785	0					
ANR	4774470	IfStatement	if ( ptr )		4773785	27					
ANR	4774471	Condition	ptr	430:7:10330:10332	4773785	0	True				
ANR	4774472	Identifier	ptr		4773785	0					
ANR	4774473	CompoundStatement		89:12:2430:2430	4773785	1					
ANR	4774474	IfStatement	"if ( strchr ( ptr , '""' ) )"		4773785	0					
ANR	4774475	Condition	"strchr ( ptr , '""' )"	431:8:10345:10361	4773785	0	True				
ANR	4774476	CallExpression	"strchr ( ptr , '""' )"		4773785	0					
ANR	4774477	Callee	strchr		4773785	0					
ANR	4774478	Identifier	strchr		4773785	0					
ANR	4774479	ArgumentList	ptr		4773785	1					
ANR	4774480	Argument	ptr		4773785	0					
ANR	4774481	Identifier	ptr		4773785	0					
ANR	4774482	Argument	"'""'"		4773785	1					
ANR	4774483	PrimaryExpression	"'""'"		4773785	0					
ANR	4774484	CompoundStatement		90:27:2459:2459	4773785	1					
ANR	4774485	ExpressionStatement	"ptr = strchr ( ptr , '""' ) + 1"	432:5:10371:10398	4773785	0	True				
ANR	4774486	AssignmentExpression	"ptr = strchr ( ptr , '""' ) + 1"		4773785	0		=			
ANR	4774487	Identifier	ptr		4773785	0					
ANR	4774488	AdditiveExpression	"strchr ( ptr , '""' ) + 1"		4773785	1		+			
ANR	4774489	CallExpression	"strchr ( ptr , '""' )"		4773785	0					
ANR	4774490	Callee	strchr		4773785	0					
ANR	4774491	Identifier	strchr		4773785	0					
ANR	4774492	ArgumentList	ptr		4773785	1					
ANR	4774493	Argument	ptr		4773785	0					
ANR	4774494	Identifier	ptr		4773785	0					
ANR	4774495	Argument	"'""'"		4773785	1					
ANR	4774496	PrimaryExpression	"'""'"		4773785	0					
ANR	4774497	PrimaryExpression	1		4773785	1					
ANR	4774498	IfStatement	"if ( ( p = strchr ( ptr , '""' ) ) )"		4773785	1					
ANR	4774499	Condition	"p = strchr ( ptr , '""' )"	433:9:10409:10431	4773785	0	True				
ANR	4774500	AssignmentExpression	"p = strchr ( ptr , '""' )"		4773785	0		=			
ANR	4774501	Identifier	p		4773785	0					
ANR	4774502	CallExpression	"strchr ( ptr , '""' )"		4773785	1					
ANR	4774503	Callee	strchr		4773785	0					
ANR	4774504	Identifier	strchr		4773785	0					
ANR	4774505	ArgumentList	ptr		4773785	1					
ANR	4774506	Argument	ptr		4773785	0					
ANR	4774507	Identifier	ptr		4773785	0					
ANR	4774508	Argument	"'""'"		4773785	1					
ANR	4774509	PrimaryExpression	"'""'"		4773785	0					
ANR	4774510	CompoundStatement		92:34:2529:2529	4773785	1					
ANR	4774511	ExpressionStatement	* p = x00	434:6:10442:10453	4773785	0	True				
ANR	4774512	AssignmentExpression	* p = x00		4773785	0		=			
ANR	4774513	UnaryOperationExpression	* p		4773785	0					
ANR	4774514	UnaryOperator	*		4773785	0					
ANR	4774515	Identifier	p		4773785	1					
ANR	4774516	Identifier	x00		4773785	1					
ANR	4774517	ElseStatement	else		4773785	0					
ANR	4774518	CompoundStatement		94:12:2562:2562	4773785	0					
ANR	4774519	ExpressionStatement	"eprintf ( ""loss back quote in include directory\\n"" )"	436:6:10475:10525	4773785	0	True				
ANR	4774520	CallExpression	"eprintf ( ""loss back quote in include directory\\n"" )"		4773785	0					
ANR	4774521	Callee	eprintf		4773785	0					
ANR	4774522	Identifier	eprintf		4773785	0					
ANR	4774523	ArgumentList	"""loss back quote in include directory\\n"""		4773785	1					
ANR	4774524	Argument	"""loss back quote in include directory\\n"""		4773785	0					
ANR	4774525	PrimaryExpression	"""loss back quote in include directory\\n"""		4773785	0					
ANR	4774526	ExpressionStatement	egg -> lang . includedir = strdup ( ptr )	438:5:10539:10574	4773785	2	True				
ANR	4774527	AssignmentExpression	egg -> lang . includedir = strdup ( ptr )		4773785	0		=			
ANR	4774528	MemberAccess	egg -> lang . includedir		4773785	0					
ANR	4774529	PtrMemberAccess	egg -> lang		4773785	0					
ANR	4774530	Identifier	egg		4773785	0					
ANR	4774531	Identifier	lang		4773785	1					
ANR	4774532	Identifier	includedir		4773785	1					
ANR	4774533	CallExpression	strdup ( ptr )		4773785	1					
ANR	4774534	Callee	strdup		4773785	0					
ANR	4774535	Identifier	strdup		4773785	0					
ANR	4774536	ArgumentList	ptr		4773785	1					
ANR	4774537	Argument	ptr		4773785	0					
ANR	4774538	Identifier	ptr		4773785	0					
ANR	4774539	ElseStatement	else		4773785	0					
ANR	4774540	CompoundStatement		98:11:2682:2682	4773785	0					
ANR	4774541	ExpressionStatement	"eprintf ( ""wrong include syntax\\n"" )"	440:5:10594:10628	4773785	0	True				
ANR	4774542	CallExpression	"eprintf ( ""wrong include syntax\\n"" )"		4773785	0					
ANR	4774543	Callee	eprintf		4773785	0					
ANR	4774544	Identifier	eprintf		4773785	0					
ANR	4774545	ArgumentList	"""wrong include syntax\\n"""		4773785	1					
ANR	4774546	Argument	"""wrong include syntax\\n"""		4773785	0					
ANR	4774547	PrimaryExpression	"""wrong include syntax\\n"""		4773785	0					
ANR	4774548	ExpressionStatement	egg -> lang . includedir = NULL	442:5:10686:10713	4773785	1	True				
ANR	4774549	AssignmentExpression	egg -> lang . includedir = NULL		4773785	0		=			
ANR	4774550	MemberAccess	egg -> lang . includedir		4773785	0					
ANR	4774551	PtrMemberAccess	egg -> lang		4773785	0					
ANR	4774552	Identifier	egg		4773785	0					
ANR	4774553	Identifier	lang		4773785	1					
ANR	4774554	Identifier	includedir		4773785	1					
ANR	4774555	Identifier	NULL		4773785	1					
ANR	4774556	ElseStatement	else		4773785	0					
ANR	4774557	CompoundStatement		103:10:2826:2826	4773785	0					
ANR	4774558	ExpressionStatement	egg -> lang . includedir = NULL	445:4:10737:10764	4773785	0	True				
ANR	4774559	AssignmentExpression	egg -> lang . includedir = NULL		4773785	0		=			
ANR	4774560	MemberAccess	egg -> lang . includedir		4773785	0					
ANR	4774561	PtrMemberAccess	egg -> lang		4773785	0					
ANR	4774562	Identifier	egg		4773785	0					
ANR	4774563	Identifier	lang		4773785	1					
ANR	4774564	Identifier	includedir		4773785	1					
ANR	4774565	Identifier	NULL		4773785	1					
ANR	4774566	ExpressionStatement	R_FREE ( str )	447:3:10774:10786	4773785	28	True				
ANR	4774567	CallExpression	R_FREE ( str )		4773785	0					
ANR	4774568	Callee	R_FREE		4773785	0					
ANR	4774569	Identifier	R_FREE		4773785	0					
ANR	4774570	ArgumentList	str		4773785	1					
ANR	4774571	Argument	str		4773785	0					
ANR	4774572	Identifier	str		4773785	0					
ANR	4774573	BreakStatement	break ;	448:3:10791:10796	4773785	29	True				
ANR	4774574	Label	default :	449:2:10800:10807	4773785	30	True				
ANR	4774575	Identifier	default		4773785	0					
ANR	4774576	ExpressionStatement	"p = strchr ( str , ',' )"	450:3:10812:10833	4773785	31	True				
ANR	4774577	AssignmentExpression	"p = strchr ( str , ',' )"		4773785	0		=			
ANR	4774578	Identifier	p		4773785	0					
ANR	4774579	CallExpression	"strchr ( str , ',' )"		4773785	1					
ANR	4774580	Callee	strchr		4773785	0					
ANR	4774581	Identifier	strchr		4773785	0					
ANR	4774582	ArgumentList	str		4773785	1					
ANR	4774583	Argument	str		4773785	0					
ANR	4774584	Identifier	str		4773785	0					
ANR	4774585	Argument	"','"		4773785	1					
ANR	4774586	PrimaryExpression	"','"		4773785	0					
ANR	4774587	IfStatement	if ( p )		4773785	32					
ANR	4774588	Condition	p	451:7:10842:10842	4773785	0	True				
ANR	4774589	Identifier	p		4773785	0					
ANR	4774590	CompoundStatement		110:10:2940:2940	4773785	1					
ANR	4774591	ExpressionStatement	* p = '\\0'	452:4:10851:10860	4773785	0	True				
ANR	4774592	AssignmentExpression	* p = '\\0'		4773785	0		=			
ANR	4774593	UnaryOperationExpression	* p		4773785	0					
ANR	4774594	UnaryOperator	*		4773785	0					
ANR	4774595	Identifier	p		4773785	1					
ANR	4774596	PrimaryExpression	'\\0'		4773785	1					
ANR	4774597	ExpressionStatement	num2 = atoi ( p + 1 )	453:4:10866:10885	4773785	1	True				
ANR	4774598	AssignmentExpression	num2 = atoi ( p + 1 )		4773785	0		=			
ANR	4774599	Identifier	num2		4773785	0					
ANR	4774600	CallExpression	atoi ( p + 1 )		4773785	1					
ANR	4774601	Callee	atoi		4773785	0					
ANR	4774602	Identifier	atoi		4773785	0					
ANR	4774603	ArgumentList	p + 1		4773785	1					
ANR	4774604	Argument	p + 1		4773785	0					
ANR	4774605	AdditiveExpression	p + 1		4773785	0		+			
ANR	4774606	Identifier	p		4773785	0					
ANR	4774607	PrimaryExpression	1		4773785	1					
ANR	4774608	ElseStatement	else		4773785	0					
ANR	4774609	CompoundStatement		113:10:2992:2992	4773785	0					
ANR	4774610	ExpressionStatement	num2 = 0	455:4:10903:10911	4773785	0	True				
ANR	4774611	AssignmentExpression	num2 = 0		4773785	0		=			
ANR	4774612	Identifier	num2		4773785	0					
ANR	4774613	PrimaryExpression	0		4773785	1					
ANR	4774614	ExpressionStatement	num = atoi ( str ) + num2	457:3:10921:10944	4773785	33	True				
ANR	4774615	AssignmentExpression	num = atoi ( str ) + num2		4773785	0		=			
ANR	4774616	Identifier	num		4773785	0					
ANR	4774617	AdditiveExpression	atoi ( str ) + num2		4773785	1		+			
ANR	4774618	CallExpression	atoi ( str )		4773785	0					
ANR	4774619	Callee	atoi		4773785	0					
ANR	4774620	Identifier	atoi		4773785	0					
ANR	4774621	ArgumentList	str		4773785	1					
ANR	4774622	Argument	str		4773785	0					
ANR	4774623	Identifier	str		4773785	0					
ANR	4774624	Identifier	num2		4773785	1					
ANR	4774625	ExpressionStatement	egg -> lang . stackframe = num	458:3:10949:10975	4773785	34	True				
ANR	4774626	AssignmentExpression	egg -> lang . stackframe = num		4773785	0		=			
ANR	4774627	MemberAccess	egg -> lang . stackframe		4773785	0					
ANR	4774628	PtrMemberAccess	egg -> lang		4773785	0					
ANR	4774629	Identifier	egg		4773785	0					
ANR	4774630	Identifier	lang		4773785	1					
ANR	4774631	Identifier	stackframe		4773785	1					
ANR	4774632	Identifier	num		4773785	1					
ANR	4774633	ExpressionStatement	egg -> lang . stackfixed = num2	459:3:10980:11007	4773785	35	True				
ANR	4774634	AssignmentExpression	egg -> lang . stackfixed = num2		4773785	0		=			
ANR	4774635	MemberAccess	egg -> lang . stackfixed		4773785	0					
ANR	4774636	PtrMemberAccess	egg -> lang		4773785	0					
ANR	4774637	Identifier	egg		4773785	0					
ANR	4774638	Identifier	lang		4773785	1					
ANR	4774639	Identifier	stackfixed		4773785	1					
ANR	4774640	Identifier	num2		4773785	1					
ANR	4774641	IfStatement	if ( egg -> lang . mode != NAKED )		4773785	36					
ANR	4774642	Condition	egg -> lang . mode != NAKED	460:7:11016:11038	4773785	0	True				
ANR	4774643	EqualityExpression	egg -> lang . mode != NAKED		4773785	0		!=			
ANR	4774644	MemberAccess	egg -> lang . mode		4773785	0					
ANR	4774645	PtrMemberAccess	egg -> lang		4773785	0					
ANR	4774646	Identifier	egg		4773785	0					
ANR	4774647	Identifier	lang		4773785	1					
ANR	4774648	Identifier	mode		4773785	1					
ANR	4774649	Identifier	NAKED		4773785	1					
ANR	4774650	CompoundStatement		119:32:3136:3136	4773785	1					
ANR	4774651	ExpressionStatement	"e -> frame ( egg , egg -> lang . stackframe + egg -> lang . stackfixed )"	461:4:11047:11106	4773785	0	True				
ANR	4774652	CallExpression	"e -> frame ( egg , egg -> lang . stackframe + egg -> lang . stackfixed )"		4773785	0					
ANR	4774653	Callee	e -> frame		4773785	0					
ANR	4774654	PtrMemberAccess	e -> frame		4773785	0					
ANR	4774655	Identifier	e		4773785	0					
ANR	4774656	Identifier	frame		4773785	1					
ANR	4774657	ArgumentList	egg		4773785	1					
ANR	4774658	Argument	egg		4773785	0					
ANR	4774659	Identifier	egg		4773785	0					
ANR	4774660	Argument	egg -> lang . stackframe + egg -> lang . stackfixed		4773785	1					
ANR	4774661	AdditiveExpression	egg -> lang . stackframe + egg -> lang . stackfixed		4773785	0		+			
ANR	4774662	MemberAccess	egg -> lang . stackframe		4773785	0					
ANR	4774663	PtrMemberAccess	egg -> lang		4773785	0					
ANR	4774664	Identifier	egg		4773785	0					
ANR	4774665	Identifier	lang		4773785	1					
ANR	4774666	Identifier	stackframe		4773785	1					
ANR	4774667	MemberAccess	egg -> lang . stackfixed		4773785	1					
ANR	4774668	PtrMemberAccess	egg -> lang		4773785	0					
ANR	4774669	Identifier	egg		4773785	0					
ANR	4774670	Identifier	lang		4773785	1					
ANR	4774671	Identifier	stackfixed		4773785	1					
ANR	4774672	ExpressionStatement	egg -> lang . elem [ 0 ] = 0	464:2:11119:11140	4773785	1	True				
ANR	4774673	AssignmentExpression	egg -> lang . elem [ 0 ] = 0		4773785	0		=			
ANR	4774674	ArrayIndexing	egg -> lang . elem [ 0 ]		4773785	0					
ANR	4774675	MemberAccess	egg -> lang . elem		4773785	0					
ANR	4774676	PtrMemberAccess	egg -> lang		4773785	0					
ANR	4774677	Identifier	egg		4773785	0					
ANR	4774678	Identifier	lang		4773785	1					
ANR	4774679	Identifier	elem		4773785	1					
ANR	4774680	PrimaryExpression	0		4773785	1					
ANR	4774681	PrimaryExpression	0		4773785	1					
ANR	4774682	ExpressionStatement	egg -> lang . elem_n = 0	465:2:11144:11164	4773785	2	True				
ANR	4774683	AssignmentExpression	egg -> lang . elem_n = 0		4773785	0		=			
ANR	4774684	MemberAccess	egg -> lang . elem_n		4773785	0					
ANR	4774685	PtrMemberAccess	egg -> lang		4773785	0					
ANR	4774686	Identifier	egg		4773785	0					
ANR	4774687	Identifier	lang		4773785	1					
ANR	4774688	Identifier	elem_n		4773785	1					
ANR	4774689	PrimaryExpression	0		4773785	1					
ANR	4774690	ReturnType	static void		4773785	1					
ANR	4774691	Identifier	rcc_element		4773785	2					
ANR	4774692	ParameterList	"REgg * egg , char * str"		4773785	3					
ANR	4774693	Parameter	REgg * egg	342:24:7882:7890	4773785	0	True				
ANR	4774694	ParameterType	REgg *		4773785	0					
ANR	4774695	Identifier	egg		4773785	1					
ANR	4774696	Parameter	char * str	342:35:7893:7901	4773785	1	True				
ANR	4774697	ParameterType	char *		4773785	0					
ANR	4774698	Identifier	str		4773785	1					
ANR	4774699	CFGEntryNode	ENTRY		4773785		True				
ANR	4774700	CFGExitNode	EXIT		4773785		True				
ANR	4774701	Symbol	egg		4773785						
ANR	4774702	Symbol	CTX		4773785						
ANR	4774703	Symbol	num		4773785						
ANR	4774704	Symbol	strchr		4773785						
ANR	4774705	Symbol	inside		4773785						
ANR	4774706	Symbol	* egg -> lang		4773785						
ANR	4774707	Symbol	strlen		4773785						
ANR	4774708	Symbol	egg -> lang . syscalls		4773785						
ANR	4774709	Symbol	egg -> lang . syscalls [ egg -> lang . nsyscalls ] . name		4773785						
ANR	4774710	Symbol	egg -> lang . nalias		4773785						
ANR	4774711	Symbol	egg -> lang . stackfixed		4773785						
ANR	4774712	Symbol	egg -> lang . stackframe		4773785						
ANR	4774713	Symbol	strcmp		4773785						
ANR	4774714	Symbol	NULL		4773785						
ANR	4774715	Symbol	* egg -> lang . elem		4773785						
ANR	4774716	Symbol	egg -> lang . nargs		4773785						
ANR	4774717	Symbol	egg -> lang . callname		4773785						
ANR	4774718	Symbol	egg -> lang . mode		4773785						
ANR	4774719	Symbol	skipspaces		4773785						
ANR	4774720	Symbol	str		4773785						
ANR	4774721	Symbol	* egg -> lang . syscalls		4773785						
ANR	4774722	Symbol	egg -> lang . slurp		4773785						
ANR	4774723	Symbol	strstr		4773785						
ANR	4774724	Symbol	* egg -> lang . elem_n		4773785						
ANR	4774725	Symbol	* egg -> lang . aliases		4773785						
ANR	4774726	Symbol	GOTO		4773785						
ANR	4774727	Symbol	* egg -> lang . nsyscalls		4773785						
ANR	4774728	Symbol	egg -> lang . elem		4773785						
ANR	4774729	Symbol	egg -> lang . aliases		4773785						
ANR	4774730	Symbol	egg -> lang . aliases [ i ] . name		4773785						
ANR	4774731	Symbol	egg -> lang . dstvar		4773785						
ANR	4774732	Symbol	egg -> remit		4773785						
ANR	4774733	Symbol	egg -> lang		4773785						
ANR	4774734	Symbol	egg -> lang . includedir		4773785						
ANR	4774735	Symbol	* egg		4773785						
ANR	4774736	Symbol	egg -> lang . syscalls [ egg -> lang . nsyscalls ] . arg		4773785						
ANR	4774737	Symbol	* * egg		4773785						
ANR	4774738	Symbol	num2		4773785						
ANR	4774739	Symbol	atoi		4773785						
ANR	4774740	Symbol	find_alias		4773785						
ANR	4774741	Symbol	e		4773785						
ANR	4774742	Symbol	i		4773785						
ANR	4774743	Symbol	egg -> lang . aliases [ i ] . content		4773785						
ANR	4774744	Symbol	egg -> lang . elem_n		4773785						
ANR	4774745	Symbol	ptr		4773785						
ANR	4774746	Symbol	p		4773785						
ANR	4774747	Symbol	egg -> lang . conditionstr		4773785						
ANR	4774748	Symbol	* i		4773785						
ANR	4774749	Symbol	egg -> lang . nsyscalls		4773785						
ANR	4774750	Symbol	x00		4773785						
ANR	4774751	Symbol	* p		4773785						
ANR	4774752	Symbol	strdup		4773785						
ANR	4774753	Symbol	NORMAL		4773785						
ANR	4774754	Symbol	NAKED		4773785						
ANR	4774755	Function	rcc_pushstr	469:0:11172:12287							
ANR	4774756	FunctionDef	"rcc_pushstr (REgg * egg , char * str , int filter)"		4774755	0					
ANR	4774757	CompoundStatement		469:58:11230:12287	4774755	0					
ANR	4774758	IdentifierDeclStatement	int dotrim ;	470:1:11233:11243	4774755	0	True				
ANR	4774759	IdentifierDecl	dotrim		4774755	0					
ANR	4774760	IdentifierDeclType	int		4774755	0					
ANR	4774761	Identifier	dotrim		4774755	1					
ANR	4774762	IdentifierDeclStatement	"int i , j , len , ch ;"	471:1:11246:11263	4774755	1	True				
ANR	4774763	IdentifierDecl	i		4774755	0					
ANR	4774764	IdentifierDeclType	int		4774755	0					
ANR	4774765	Identifier	i		4774755	1					
ANR	4774766	IdentifierDecl	j		4774755	1					
ANR	4774767	IdentifierDeclType	int		4774755	0					
ANR	4774768	Identifier	j		4774755	1					
ANR	4774769	IdentifierDecl	len		4774755	2					
ANR	4774770	IdentifierDeclType	int		4774755	0					
ANR	4774771	Identifier	len		4774755	1					
ANR	4774772	IdentifierDecl	ch		4774755	3					
ANR	4774773	IdentifierDeclType	int		4774755	0					
ANR	4774774	Identifier	ch		4774755	1					
ANR	4774775	IdentifierDeclStatement	REggEmit * e = egg -> remit ;	472:1:11266:11290	4774755	2	True				
ANR	4774776	IdentifierDecl	* e = egg -> remit		4774755	0					
ANR	4774777	IdentifierDeclType	REggEmit *		4774755	0					
ANR	4774778	Identifier	e		4774755	1					
ANR	4774779	AssignmentExpression	* e = egg -> remit		4774755	2		=			
ANR	4774780	Identifier	e		4774755	0					
ANR	4774781	PtrMemberAccess	egg -> remit		4774755	1					
ANR	4774782	Identifier	egg		4774755	0					
ANR	4774783	Identifier	remit		4774755	1					
ANR	4774784	ExpressionStatement	"e -> comment ( egg , ""encode %s string (%s) (%s)"" , filter ? ""filtered"" : ""unfiltered"" , str , egg -> lang . callname )"	474:1:11294:11401	4774755	3	True				
ANR	4774785	CallExpression	"e -> comment ( egg , ""encode %s string (%s) (%s)"" , filter ? ""filtered"" : ""unfiltered"" , str , egg -> lang . callname )"		4774755	0					
ANR	4774786	Callee	e -> comment		4774755	0					
ANR	4774787	PtrMemberAccess	e -> comment		4774755	0					
ANR	4774788	Identifier	e		4774755	0					
ANR	4774789	Identifier	comment		4774755	1					
ANR	4774790	ArgumentList	egg		4774755	1					
ANR	4774791	Argument	egg		4774755	0					
ANR	4774792	Identifier	egg		4774755	0					
ANR	4774793	Argument	"""encode %s string (%s) (%s)"""		4774755	1					
ANR	4774794	PrimaryExpression	"""encode %s string (%s) (%s)"""		4774755	0					
ANR	4774795	Argument	"filter ? ""filtered"" : ""unfiltered"""		4774755	2					
ANR	4774796	ConditionalExpression	"filter ? ""filtered"" : ""unfiltered"""		4774755	0					
ANR	4774797	Condition	filter		4774755	0					
ANR	4774798	Identifier	filter		4774755	0					
ANR	4774799	PrimaryExpression	"""filtered"""		4774755	1					
ANR	4774800	PrimaryExpression	"""unfiltered"""		4774755	2					
ANR	4774801	Argument	str		4774755	3					
ANR	4774802	Identifier	str		4774755	0					
ANR	4774803	Argument	egg -> lang . callname		4774755	4					
ANR	4774804	MemberAccess	egg -> lang . callname		4774755	0					
ANR	4774805	PtrMemberAccess	egg -> lang		4774755	0					
ANR	4774806	Identifier	egg		4774755	0					
ANR	4774807	Identifier	lang		4774755	1					
ANR	4774808	Identifier	callname		4774755	1					
ANR	4774809	IfStatement	if ( filter )		4774755	4					
ANR	4774810	Condition	filter	478:5:11428:11433	4774755	0	True				
ANR	4774811	Identifier	filter		4774755	0					
ANR	4774812	CompoundStatement		10:13:205:205	4774755	1					
ANR	4774813	ForStatement	for ( i = 0 ; str [ i ] ; i ++ )		4774755	0					
ANR	4774814	ForInit	i = 0 ;	479:7:11445:11450	4774755	0	True				
ANR	4774815	AssignmentExpression	i = 0		4774755	0		=			
ANR	4774816	Identifier	i		4774755	0					
ANR	4774817	PrimaryExpression	0		4774755	1					
ANR	4774818	Condition	str [ i ]	479:14:11452:11457	4774755	1	True				
ANR	4774819	ArrayIndexing	str [ i ]		4774755	0					
ANR	4774820	Identifier	str		4774755	0					
ANR	4774821	Identifier	i		4774755	1					
ANR	4774822	PostIncDecOperationExpression	i ++	479:22:11460:11462	4774755	2	True				
ANR	4774823	Identifier	i		4774755	0					
ANR	4774824	IncDec	++		4774755	1					
ANR	4774825	CompoundStatement		11:27:234:234	4774755	3					
ANR	4774826	ExpressionStatement	dotrim = 0	480:3:11470:11480	4774755	0	True				
ANR	4774827	AssignmentExpression	dotrim = 0		4774755	0		=			
ANR	4774828	Identifier	dotrim		4774755	0					
ANR	4774829	PrimaryExpression	0		4774755	1					
ANR	4774830	IfStatement	if ( str [ i ] == '\\\\' )		4774755	1					
ANR	4774831	Condition	str [ i ] == '\\\\'	481:7:11489:11502	4774755	0	True				
ANR	4774832	EqualityExpression	str [ i ] == '\\\\'		4774755	0		==			
ANR	4774833	ArrayIndexing	str [ i ]		4774755	0					
ANR	4774834	Identifier	str		4774755	0					
ANR	4774835	Identifier	i		4774755	1					
ANR	4774836	PrimaryExpression	'\\\\'		4774755	1					
ANR	4774837	CompoundStatement		13:23:274:274	4774755	1					
ANR	4774838	SwitchStatement	switch ( str [ i + 1 ] )		4774755	0					
ANR	4774839	Condition	str [ i + 1 ]	482:12:11519:11528	4774755	0	True				
ANR	4774840	ArrayIndexing	str [ i + 1 ]		4774755	0					
ANR	4774841	Identifier	str		4774755	0					
ANR	4774842	AdditiveExpression	i + 1		4774755	1		+			
ANR	4774843	Identifier	i		4774755	0					
ANR	4774844	PrimaryExpression	1		4774755	1					
ANR	4774845	CompoundStatement		14:24:300:300	4774755	1					
ANR	4774846	Label	case 't' :	483:4:11537:11545	4774755	0	True				
ANR	4774847	ExpressionStatement	str [ i ] = '\\t'	484:5:11552:11565	4774755	1	True				
ANR	4774848	AssignmentExpression	str [ i ] = '\\t'		4774755	0		=			
ANR	4774849	ArrayIndexing	str [ i ]		4774755	0					
ANR	4774850	Identifier	str		4774755	0					
ANR	4774851	Identifier	i		4774755	1					
ANR	4774852	PrimaryExpression	'\\t'		4774755	1					
ANR	4774853	ExpressionStatement	dotrim = 1	485:5:11572:11582	4774755	2	True				
ANR	4774854	AssignmentExpression	dotrim = 1		4774755	0		=			
ANR	4774855	Identifier	dotrim		4774755	0					
ANR	4774856	PrimaryExpression	1		4774755	1					
ANR	4774857	BreakStatement	break ;	486:5:11589:11594	4774755	3	True				
ANR	4774858	Label	case 'n' :	487:4:11600:11608	4774755	4	True				
ANR	4774859	ExpressionStatement	str [ i ] = '\\n'	488:5:11615:11628	4774755	5	True				
ANR	4774860	AssignmentExpression	str [ i ] = '\\n'		4774755	0		=			
ANR	4774861	ArrayIndexing	str [ i ]		4774755	0					
ANR	4774862	Identifier	str		4774755	0					
ANR	4774863	Identifier	i		4774755	1					
ANR	4774864	PrimaryExpression	'\\n'		4774755	1					
ANR	4774865	ExpressionStatement	dotrim = 1	489:5:11635:11645	4774755	6	True				
ANR	4774866	AssignmentExpression	dotrim = 1		4774755	0		=			
ANR	4774867	Identifier	dotrim		4774755	0					
ANR	4774868	PrimaryExpression	1		4774755	1					
ANR	4774869	BreakStatement	break ;	490:5:11652:11657	4774755	7	True				
ANR	4774870	Label	case 'e' :	491:4:11663:11671	4774755	8	True				
ANR	4774871	ExpressionStatement	str [ i ] = x1b	492:5:11678:11693	4774755	9	True				
ANR	4774872	AssignmentExpression	str [ i ] = x1b		4774755	0		=			
ANR	4774873	ArrayIndexing	str [ i ]		4774755	0					
ANR	4774874	Identifier	str		4774755	0					
ANR	4774875	Identifier	i		4774755	1					
ANR	4774876	Identifier	x1b		4774755	1					
ANR	4774877	ExpressionStatement	dotrim = 1	493:5:11700:11710	4774755	10	True				
ANR	4774878	AssignmentExpression	dotrim = 1		4774755	0		=			
ANR	4774879	Identifier	dotrim		4774755	0					
ANR	4774880	PrimaryExpression	1		4774755	1					
ANR	4774881	BreakStatement	break ;	494:5:11717:11722	4774755	11	True				
ANR	4774882	Label	case 'x' :	495:4:11728:11736	4774755	12	True				
ANR	4774883	ExpressionStatement	ch = r_hex_pair2bin ( str + i + 2 )	496:5:11743:11776	4774755	13	True				
ANR	4774884	AssignmentExpression	ch = r_hex_pair2bin ( str + i + 2 )		4774755	0		=			
ANR	4774885	Identifier	ch		4774755	0					
ANR	4774886	CallExpression	r_hex_pair2bin ( str + i + 2 )		4774755	1					
ANR	4774887	Callee	r_hex_pair2bin		4774755	0					
ANR	4774888	Identifier	r_hex_pair2bin		4774755	0					
ANR	4774889	ArgumentList	str + i + 2		4774755	1					
ANR	4774890	Argument	str + i + 2		4774755	0					
ANR	4774891	AdditiveExpression	str + i + 2		4774755	0		+			
ANR	4774892	Identifier	str		4774755	0					
ANR	4774893	AdditiveExpression	i + 2		4774755	1		+			
ANR	4774894	Identifier	i		4774755	0					
ANR	4774895	PrimaryExpression	2		4774755	1					
ANR	4774896	IfStatement	if ( ch == - 1 )		4774755	14					
ANR	4774897	Condition	ch == - 1	497:9:11787:11794	4774755	0	True				
ANR	4774898	EqualityExpression	ch == - 1		4774755	0		==			
ANR	4774899	Identifier	ch		4774755	0					
ANR	4774900	UnaryOperationExpression	- 1		4774755	1					
ANR	4774901	UnaryOperator	-		4774755	0					
ANR	4774902	PrimaryExpression	1		4774755	1					
ANR	4774903	CompoundStatement		29:19:566:566	4774755	1					
ANR	4774904	ExpressionStatement	"eprintf ( ""%s:%d Error string format\\n"" , egg -> lang . file , egg -> lang . line )"	498:6:11805:11883	4774755	0	True				
ANR	4774905	CallExpression	"eprintf ( ""%s:%d Error string format\\n"" , egg -> lang . file , egg -> lang . line )"		4774755	0					
ANR	4774906	Callee	eprintf		4774755	0					
ANR	4774907	Identifier	eprintf		4774755	0					
ANR	4774908	ArgumentList	"""%s:%d Error string format\\n"""		4774755	1					
ANR	4774909	Argument	"""%s:%d Error string format\\n"""		4774755	0					
ANR	4774910	PrimaryExpression	"""%s:%d Error string format\\n"""		4774755	0					
ANR	4774911	Argument	egg -> lang . file		4774755	1					
ANR	4774912	MemberAccess	egg -> lang . file		4774755	0					
ANR	4774913	PtrMemberAccess	egg -> lang		4774755	0					
ANR	4774914	Identifier	egg		4774755	0					
ANR	4774915	Identifier	lang		4774755	1					
ANR	4774916	Identifier	file		4774755	1					
ANR	4774917	Argument	egg -> lang . line		4774755	2					
ANR	4774918	MemberAccess	egg -> lang . line		4774755	0					
ANR	4774919	PtrMemberAccess	egg -> lang		4774755	0					
ANR	4774920	Identifier	egg		4774755	0					
ANR	4774921	Identifier	lang		4774755	1					
ANR	4774922	Identifier	line		4774755	1					
ANR	4774923	ExpressionStatement	str [ i ] = ( char ) ch	501:5:11897:11915	4774755	15	True				
ANR	4774924	AssignmentExpression	str [ i ] = ( char ) ch		4774755	0		=			
ANR	4774925	ArrayIndexing	str [ i ]		4774755	0					
ANR	4774926	Identifier	str		4774755	0					
ANR	4774927	Identifier	i		4774755	1					
ANR	4774928	CastExpression	( char ) ch		4774755	1					
ANR	4774929	CastTarget	char		4774755	0					
ANR	4774930	Identifier	ch		4774755	1					
ANR	4774931	ExpressionStatement	dotrim = 3	502:5:11922:11932	4774755	16	True				
ANR	4774932	AssignmentExpression	dotrim = 3		4774755	0		=			
ANR	4774933	Identifier	dotrim		4774755	0					
ANR	4774934	PrimaryExpression	3		4774755	1					
ANR	4774935	BreakStatement	break ;	503:5:11939:11944	4774755	17	True				
ANR	4774936	Label	default :	504:4:11950:11957	4774755	18	True				
ANR	4774937	Identifier	default		4774755	0					
ANR	4774938	BreakStatement	break ;	505:5:11964:11969	4774755	19	True				
ANR	4774939	IfStatement	if ( dotrim )		4774755	1					
ANR	4774940	Condition	dotrim	507:8:11985:11990	4774755	0	True				
ANR	4774941	Identifier	dotrim		4774755	0					
ANR	4774942	CompoundStatement		39:16:762:762	4774755	1					
ANR	4774943	ExpressionStatement	"memmove ( str + i + 1 , str + i + dotrim + 1 , strlen ( str + i + dotrim + 1 ) + 1 )"	508:5:12000:12084	4774755	0	True				
ANR	4774944	CallExpression	"memmove ( str + i + 1 , str + i + dotrim + 1 , strlen ( str + i + dotrim + 1 ) + 1 )"		4774755	0					
ANR	4774945	Callee	memmove		4774755	0					
ANR	4774946	Identifier	memmove		4774755	0					
ANR	4774947	ArgumentList	str + i + 1		4774755	1					
ANR	4774948	Argument	str + i + 1		4774755	0					
ANR	4774949	AdditiveExpression	str + i + 1		4774755	0		+			
ANR	4774950	Identifier	str		4774755	0					
ANR	4774951	AdditiveExpression	i + 1		4774755	1		+			
ANR	4774952	Identifier	i		4774755	0					
ANR	4774953	PrimaryExpression	1		4774755	1					
ANR	4774954	Argument	str + i + dotrim + 1		4774755	1					
ANR	4774955	AdditiveExpression	str + i + dotrim + 1		4774755	0		+			
ANR	4774956	Identifier	str		4774755	0					
ANR	4774957	AdditiveExpression	i + dotrim + 1		4774755	1		+			
ANR	4774958	Identifier	i		4774755	0					
ANR	4774959	AdditiveExpression	dotrim + 1		4774755	1		+			
ANR	4774960	Identifier	dotrim		4774755	0					
ANR	4774961	PrimaryExpression	1		4774755	1					
ANR	4774962	Argument	strlen ( str + i + dotrim + 1 ) + 1		4774755	2					
ANR	4774963	AdditiveExpression	strlen ( str + i + dotrim + 1 ) + 1		4774755	0		+			
ANR	4774964	CallExpression	strlen ( str + i + dotrim + 1 )		4774755	0					
ANR	4774965	Callee	strlen		4774755	0					
ANR	4774966	Identifier	strlen		4774755	0					
ANR	4774967	ArgumentList	str + i + dotrim + 1		4774755	1					
ANR	4774968	Argument	str + i + dotrim + 1		4774755	0					
ANR	4774969	AdditiveExpression	str + i + dotrim + 1		4774755	0		+			
ANR	4774970	Identifier	str		4774755	0					
ANR	4774971	AdditiveExpression	i + dotrim + 1		4774755	1		+			
ANR	4774972	Identifier	i		4774755	0					
ANR	4774973	AdditiveExpression	dotrim + 1		4774755	1		+			
ANR	4774974	Identifier	dotrim		4774755	0					
ANR	4774975	PrimaryExpression	1		4774755	1					
ANR	4774976	PrimaryExpression	1		4774755	1					
ANR	4774977	ExpressionStatement	len = strlen ( str )	516:1:12153:12171	4774755	5	True				
ANR	4774978	AssignmentExpression	len = strlen ( str )		4774755	0		=			
ANR	4774979	Identifier	len		4774755	0					
ANR	4774980	CallExpression	strlen ( str )		4774755	1					
ANR	4774981	Callee	strlen		4774755	0					
ANR	4774982	Identifier	strlen		4774755	0					
ANR	4774983	ArgumentList	str		4774755	1					
ANR	4774984	Argument	str		4774755	0					
ANR	4774985	Identifier	str		4774755	0					
ANR	4774986	ExpressionStatement	j = ( len - len % e -> size ) + e -> size	517:1:12174:12209	4774755	6	True				
ANR	4774987	AssignmentExpression	j = ( len - len % e -> size ) + e -> size		4774755	0		=			
ANR	4774988	Identifier	j		4774755	0					
ANR	4774989	AdditiveExpression	( len - len % e -> size ) + e -> size		4774755	1		+			
ANR	4774990	AdditiveExpression	len - len % e -> size		4774755	0		-			
ANR	4774991	Identifier	len		4774755	0					
ANR	4774992	MultiplicativeExpression	len % e -> size		4774755	1		%			
ANR	4774993	Identifier	len		4774755	0					
ANR	4774994	PtrMemberAccess	e -> size		4774755	1					
ANR	4774995	Identifier	e		4774755	0					
ANR	4774996	Identifier	size		4774755	1					
ANR	4774997	PtrMemberAccess	e -> size		4774755	1					
ANR	4774998	Identifier	e		4774755	0					
ANR	4774999	Identifier	size		4774755	1					
ANR	4775000	ExpressionStatement	"e -> set_string ( egg , egg -> lang . dstvar , str , j )"	518:1:12212:12257	4774755	7	True				
ANR	4775001	CallExpression	"e -> set_string ( egg , egg -> lang . dstvar , str , j )"		4774755	0					
ANR	4775002	Callee	e -> set_string		4774755	0					
ANR	4775003	PtrMemberAccess	e -> set_string		4774755	0					
ANR	4775004	Identifier	e		4774755	0					
ANR	4775005	Identifier	set_string		4774755	1					
ANR	4775006	ArgumentList	egg		4774755	1					
ANR	4775007	Argument	egg		4774755	0					
ANR	4775008	Identifier	egg		4774755	0					
ANR	4775009	Argument	egg -> lang . dstvar		4774755	1					
ANR	4775010	MemberAccess	egg -> lang . dstvar		4774755	0					
ANR	4775011	PtrMemberAccess	egg -> lang		4774755	0					
ANR	4775012	Identifier	egg		4774755	0					
ANR	4775013	Identifier	lang		4774755	1					
ANR	4775014	Identifier	dstvar		4774755	1					
ANR	4775015	Argument	str		4774755	2					
ANR	4775016	Identifier	str		4774755	0					
ANR	4775017	Argument	j		4774755	3					
ANR	4775018	Identifier	j		4774755	0					
ANR	4775019	ExpressionStatement	R_FREE ( egg -> lang . dstvar )	519:1:12260:12285	4774755	8	True				
ANR	4775020	CallExpression	R_FREE ( egg -> lang . dstvar )		4774755	0					
ANR	4775021	Callee	R_FREE		4774755	0					
ANR	4775022	Identifier	R_FREE		4774755	0					
ANR	4775023	ArgumentList	egg -> lang . dstvar		4774755	1					
ANR	4775024	Argument	egg -> lang . dstvar		4774755	0					
ANR	4775025	MemberAccess	egg -> lang . dstvar		4774755	0					
ANR	4775026	PtrMemberAccess	egg -> lang		4774755	0					
ANR	4775027	Identifier	egg		4774755	0					
ANR	4775028	Identifier	lang		4774755	1					
ANR	4775029	Identifier	dstvar		4774755	1					
ANR	4775030	ReturnType	static void		4774755	1					
ANR	4775031	Identifier	rcc_pushstr		4774755	2					
ANR	4775032	ParameterList	"REgg * egg , char * str , int filter"		4774755	3					
ANR	4775033	Parameter	REgg * egg	469:24:11196:11204	4774755	0	True				
ANR	4775034	ParameterType	REgg *		4774755	0					
ANR	4775035	Identifier	egg		4774755	1					
ANR	4775036	Parameter	char * str	469:35:11207:11215	4774755	1	True				
ANR	4775037	ParameterType	char *		4774755	0					
ANR	4775038	Identifier	str		4774755	1					
ANR	4775039	Parameter	int filter	469:46:11218:11227	4774755	2	True				
ANR	4775040	ParameterType	int		4774755	0					
ANR	4775041	Identifier	filter		4774755	1					
ANR	4775042	CFGEntryNode	ENTRY		4774755		True				
ANR	4775043	CFGExitNode	EXIT		4774755		True				
ANR	4775044	Symbol	egg		4774755						
ANR	4775045	Symbol	ch		4774755						
ANR	4775046	Symbol	e		4774755						
ANR	4775047	Symbol	r_hex_pair2bin		4774755						
ANR	4775048	Symbol	x1b		4774755						
ANR	4775049	Symbol	i		4774755						
ANR	4775050	Symbol	j		4774755						
ANR	4775051	Symbol	egg -> lang . callname		4774755						
ANR	4775052	Symbol	egg -> lang . dstvar		4774755						
ANR	4775053	Symbol	egg -> remit		4774755						
ANR	4775054	Symbol	egg -> lang		4774755						
ANR	4775055	Symbol	* e		4774755						
ANR	4775056	Symbol	str		4774755						
ANR	4775057	Symbol	filter		4774755						
ANR	4775058	Symbol	* egg		4774755						
ANR	4775059	Symbol	strlen		4774755						
ANR	4775060	Symbol	* i		4774755						
ANR	4775061	Symbol	len		4774755						
ANR	4775062	Symbol	egg -> lang . file		4774755						
ANR	4775063	Symbol	e -> size		4774755						
ANR	4775064	Symbol	egg -> lang . line		4774755						
ANR	4775065	Symbol	dotrim		4774755						
ANR	4775066	Symbol	* str		4774755						
ANR	4775067	Function	r_egg_mkvar	522:0:12290:15448							
ANR	4775068	FunctionDef	"r_egg_mkvar (REgg * egg , char * out , const char * _str , int delta)"		4775067	0					
ANR	4775069	CompoundStatement		522:75:12365:15448	4775067	0					
ANR	4775070	IdentifierDeclStatement	"int i , len , qi ;"	523:1:12368:12382	4775067	0	True				
ANR	4775071	IdentifierDecl	i		4775067	0					
ANR	4775072	IdentifierDeclType	int		4775067	0					
ANR	4775073	Identifier	i		4775067	1					
ANR	4775074	IdentifierDecl	len		4775067	1					
ANR	4775075	IdentifierDeclType	int		4775067	0					
ANR	4775076	Identifier	len		4775067	1					
ANR	4775077	IdentifierDecl	qi		4775067	2					
ANR	4775078	IdentifierDeclType	int		4775067	0					
ANR	4775079	Identifier	qi		4775067	1					
ANR	4775080	IdentifierDeclStatement	"char * oldstr = NULL , * str = NULL , foo [ 32 ] , * q , * ret = NULL ;"	524:1:12385:12443	4775067	1	True				
ANR	4775081	IdentifierDecl	* oldstr = NULL		4775067	0					
ANR	4775082	IdentifierDeclType	char *		4775067	0					
ANR	4775083	Identifier	oldstr		4775067	1					
ANR	4775084	AssignmentExpression	* oldstr = NULL		4775067	2		=			
ANR	4775085	Identifier	NULL		4775067	0					
ANR	4775086	Identifier	NULL		4775067	1					
ANR	4775087	IdentifierDecl	* str = NULL		4775067	1					
ANR	4775088	IdentifierDeclType	char *		4775067	0					
ANR	4775089	Identifier	str		4775067	1					
ANR	4775090	AssignmentExpression	* str = NULL		4775067	2		=			
ANR	4775091	Identifier	NULL		4775067	0					
ANR	4775092	Identifier	NULL		4775067	1					
ANR	4775093	IdentifierDecl	foo [ 32 ]		4775067	2					
ANR	4775094	IdentifierDeclType	char [ 32 ]		4775067	0					
ANR	4775095	Identifier	foo		4775067	1					
ANR	4775096	PrimaryExpression	32		4775067	2					
ANR	4775097	IdentifierDecl	* q		4775067	3					
ANR	4775098	IdentifierDeclType	char *		4775067	0					
ANR	4775099	Identifier	q		4775067	1					
ANR	4775100	IdentifierDecl	* ret = NULL		4775067	4					
ANR	4775101	IdentifierDeclType	char *		4775067	0					
ANR	4775102	Identifier	ret		4775067	1					
ANR	4775103	AssignmentExpression	* ret = NULL		4775067	2		=			
ANR	4775104	Identifier	NULL		4775067	0					
ANR	4775105	Identifier	NULL		4775067	1					
ANR	4775106	ExpressionStatement	delta += egg -> lang . stackfixed	526:1:12447:12476	4775067	2	True				
ANR	4775107	AssignmentExpression	delta += egg -> lang . stackfixed		4775067	0		+=			
ANR	4775108	Identifier	delta		4775067	0					
ANR	4775109	MemberAccess	egg -> lang . stackfixed		4775067	1					
ANR	4775110	PtrMemberAccess	egg -> lang		4775067	0					
ANR	4775111	Identifier	egg		4775067	0					
ANR	4775112	Identifier	lang		4775067	1					
ANR	4775113	Identifier	stackfixed		4775067	1					
ANR	4775114	IfStatement	if ( ! _str )		4775067	3					
ANR	4775115	Condition	! _str	527:5:12509:12513	4775067	0	True				
ANR	4775116	UnaryOperationExpression	! _str		4775067	0					
ANR	4775117	UnaryOperator	!		4775067	0					
ANR	4775118	Identifier	_str		4775067	1					
ANR	4775119	CompoundStatement		6:12:150:150	4775067	1					
ANR	4775120	ReturnStatement	return NULL ;	528:2:12520:12531	4775067	0	True				
ANR	4775121	Identifier	NULL		4775067	0					
ANR	4775122	ExpressionStatement	ret = str = oldstr = strdup ( skipspaces ( _str ) )	531:1:12599:12646	4775067	4	True				
ANR	4775123	AssignmentExpression	ret = str = oldstr = strdup ( skipspaces ( _str ) )		4775067	0		=			
ANR	4775124	Identifier	ret		4775067	0					
ANR	4775125	AssignmentExpression	str = oldstr = strdup ( skipspaces ( _str ) )		4775067	1		=			
ANR	4775126	Identifier	str		4775067	0					
ANR	4775127	AssignmentExpression	oldstr = strdup ( skipspaces ( _str ) )		4775067	1		=			
ANR	4775128	Identifier	oldstr		4775067	0					
ANR	4775129	CallExpression	strdup ( skipspaces ( _str ) )		4775067	1					
ANR	4775130	Callee	strdup		4775067	0					
ANR	4775131	Identifier	strdup		4775067	0					
ANR	4775132	ArgumentList	skipspaces ( _str )		4775067	1					
ANR	4775133	Argument	skipspaces ( _str )		4775067	0					
ANR	4775134	CallExpression	skipspaces ( _str )		4775067	0					
ANR	4775135	Callee	skipspaces		4775067	0					
ANR	4775136	Identifier	skipspaces		4775067	0					
ANR	4775137	ArgumentList	_str		4775067	1					
ANR	4775138	Argument	_str		4775067	0					
ANR	4775139	Identifier	_str		4775067	0					
ANR	4775140	IfStatement	"if ( ( q = strchr ( str , ':' ) ) )"		4775067	5					
ANR	4775141	Condition	"q = strchr ( str , ':' )"	533:5:12722:12744	4775067	0	True				
ANR	4775142	AssignmentExpression	"q = strchr ( str , ':' )"		4775067	0		=			
ANR	4775143	Identifier	q		4775067	0					
ANR	4775144	CallExpression	"strchr ( str , ':' )"		4775067	1					
ANR	4775145	Callee	strchr		4775067	0					
ANR	4775146	Identifier	strchr		4775067	0					
ANR	4775147	ArgumentList	str		4775067	1					
ANR	4775148	Argument	str		4775067	0					
ANR	4775149	Identifier	str		4775067	0					
ANR	4775150	Argument	':'		4775067	1					
ANR	4775151	PrimaryExpression	':'		4775067	0					
ANR	4775152	CompoundStatement		12:30:381:381	4775067	1					
ANR	4775153	ExpressionStatement	* q = '\\0'	534:2:12751:12760	4775067	0	True				
ANR	4775154	AssignmentExpression	* q = '\\0'		4775067	0		=			
ANR	4775155	UnaryOperationExpression	* q		4775067	0					
ANR	4775156	UnaryOperator	*		4775067	0					
ANR	4775157	Identifier	q		4775067	1					
ANR	4775158	PrimaryExpression	'\\0'		4775067	1					
ANR	4775159	ExpressionStatement	qi = atoi ( q + 1 )	535:2:12764:12781	4775067	1	True				
ANR	4775160	AssignmentExpression	qi = atoi ( q + 1 )		4775067	0		=			
ANR	4775161	Identifier	qi		4775067	0					
ANR	4775162	CallExpression	atoi ( q + 1 )		4775067	1					
ANR	4775163	Callee	atoi		4775067	0					
ANR	4775164	Identifier	atoi		4775067	0					
ANR	4775165	ArgumentList	q + 1		4775067	1					
ANR	4775166	Argument	q + 1		4775067	0					
ANR	4775167	AdditiveExpression	q + 1		4775067	0		+			
ANR	4775168	Identifier	q		4775067	0					
ANR	4775169	PrimaryExpression	1		4775067	1					
ANR	4775170	ExpressionStatement	egg -> lang . varsize = ( qi == 1 ) ? 'b' : 'l'	536:2:12785:12824	4775067	2	True				
ANR	4775171	AssignmentExpression	egg -> lang . varsize = ( qi == 1 ) ? 'b' : 'l'		4775067	0		=			
ANR	4775172	MemberAccess	egg -> lang . varsize		4775067	0					
ANR	4775173	PtrMemberAccess	egg -> lang		4775067	0					
ANR	4775174	Identifier	egg		4775067	0					
ANR	4775175	Identifier	lang		4775067	1					
ANR	4775176	Identifier	varsize		4775067	1					
ANR	4775177	ConditionalExpression	( qi == 1 ) ? 'b' : 'l'		4775067	1					
ANR	4775178	Condition	qi == 1		4775067	0					
ANR	4775179	EqualityExpression	qi == 1		4775067	0		==			
ANR	4775180	Identifier	qi		4775067	0					
ANR	4775181	PrimaryExpression	1		4775067	1					
ANR	4775182	PrimaryExpression	'b'		4775067	1					
ANR	4775183	PrimaryExpression	'l'		4775067	2					
ANR	4775184	ElseStatement	else		4775067	0					
ANR	4775185	CompoundStatement		16:8:468:468	4775067	0					
ANR	4775186	ExpressionStatement	egg -> lang . varsize = 'l'	538:2:12838:12861	4775067	0	True				
ANR	4775187	AssignmentExpression	egg -> lang . varsize = 'l'		4775067	0		=			
ANR	4775188	MemberAccess	egg -> lang . varsize		4775067	0					
ANR	4775189	PtrMemberAccess	egg -> lang		4775067	0					
ANR	4775190	Identifier	egg		4775067	0					
ANR	4775191	Identifier	lang		4775067	1					
ANR	4775192	Identifier	varsize		4775067	1					
ANR	4775193	PrimaryExpression	'l'		4775067	1					
ANR	4775194	IfStatement	if ( * str == '*' || * str == '&' )		4775067	6					
ANR	4775195	Condition	* str == '*' || * str == '&'	540:5:12871:12896	4775067	0	True				
ANR	4775196	OrExpression	* str == '*' || * str == '&'		4775067	0		||			
ANR	4775197	EqualityExpression	* str == '*'		4775067	0		==			
ANR	4775198	UnaryOperationExpression	* str		4775067	0					
ANR	4775199	UnaryOperator	*		4775067	0					
ANR	4775200	Identifier	str		4775067	1					
ANR	4775201	PrimaryExpression	'*'		4775067	1					
ANR	4775202	EqualityExpression	* str == '&'		4775067	1		==			
ANR	4775203	UnaryOperationExpression	* str		4775067	0					
ANR	4775204	UnaryOperator	*		4775067	0					
ANR	4775205	Identifier	str		4775067	1					
ANR	4775206	PrimaryExpression	'&'		4775067	1					
ANR	4775207	CompoundStatement		19:33:533:533	4775067	1					
ANR	4775208	ExpressionStatement	egg -> lang . varxs = * str	541:2:12903:12925	4775067	0	True				
ANR	4775209	AssignmentExpression	egg -> lang . varxs = * str		4775067	0		=			
ANR	4775210	MemberAccess	egg -> lang . varxs		4775067	0					
ANR	4775211	PtrMemberAccess	egg -> lang		4775067	0					
ANR	4775212	Identifier	egg		4775067	0					
ANR	4775213	Identifier	lang		4775067	1					
ANR	4775214	Identifier	varxs		4775067	1					
ANR	4775215	UnaryOperationExpression	* str		4775067	1					
ANR	4775216	UnaryOperator	*		4775067	0					
ANR	4775217	Identifier	str		4775067	1					
ANR	4775218	ExpressionStatement	str ++	542:2:12929:12934	4775067	1	True				
ANR	4775219	PostIncDecOperationExpression	str ++		4775067	0					
ANR	4775220	Identifier	str		4775067	0					
ANR	4775221	IncDec	++		4775067	1					
ANR	4775222	ElseStatement	else		4775067	0					
ANR	4775223	CompoundStatement		22:8:578:578	4775067	0					
ANR	4775224	ExpressionStatement	egg -> lang . varxs = 0	544:2:12948:12967	4775067	0	True				
ANR	4775225	AssignmentExpression	egg -> lang . varxs = 0		4775067	0		=			
ANR	4775226	MemberAccess	egg -> lang . varxs		4775067	0					
ANR	4775227	PtrMemberAccess	egg -> lang		4775067	0					
ANR	4775228	Identifier	egg		4775067	0					
ANR	4775229	Identifier	lang		4775067	1					
ANR	4775230	Identifier	varxs		4775067	1					
ANR	4775231	PrimaryExpression	0		4775067	1					
ANR	4775232	IfStatement	if ( str [ 0 ] == '.' )		4775067	7					
ANR	4775233	Condition	str [ 0 ] == '.'	546:5:12977:12989	4775067	0	True				
ANR	4775234	EqualityExpression	str [ 0 ] == '.'		4775067	0		==			
ANR	4775235	ArrayIndexing	str [ 0 ]		4775067	0					
ANR	4775236	Identifier	str		4775067	0					
ANR	4775237	PrimaryExpression	0		4775067	1					
ANR	4775238	PrimaryExpression	'.'		4775067	1					
ANR	4775239	CompoundStatement		26:2:630:654	4775067	1					
ANR	4775240	IdentifierDeclStatement	REggEmit * e = egg -> remit ;	547:2:12996:13020	4775067	0	True				
ANR	4775241	IdentifierDecl	* e = egg -> remit		4775067	0					
ANR	4775242	IdentifierDeclType	REggEmit *		4775067	0					
ANR	4775243	Identifier	e		4775067	1					
ANR	4775244	AssignmentExpression	* e = egg -> remit		4775067	2		=			
ANR	4775245	Identifier	e		4775067	0					
ANR	4775246	PtrMemberAccess	egg -> remit		4775067	1					
ANR	4775247	Identifier	egg		4775067	0					
ANR	4775248	Identifier	remit		4775067	1					
ANR	4775249	IfStatement	"if ( ! strncmp ( str + 1 , ""ret"" , 3 ) )"		4775067	1					
ANR	4775250	Condition	"! strncmp ( str + 1 , ""ret"" , 3 )"	548:6:13028:13055	4775067	0	True				
ANR	4775251	UnaryOperationExpression	"! strncmp ( str + 1 , ""ret"" , 3 )"		4775067	0					
ANR	4775252	UnaryOperator	!		4775067	0					
ANR	4775253	CallExpression	"strncmp ( str + 1 , ""ret"" , 3 )"		4775067	1					
ANR	4775254	Callee	strncmp		4775067	0					
ANR	4775255	Identifier	strncmp		4775067	0					
ANR	4775256	ArgumentList	str + 1		4775067	1					
ANR	4775257	Argument	str + 1		4775067	0					
ANR	4775258	AdditiveExpression	str + 1		4775067	0		+			
ANR	4775259	Identifier	str		4775067	0					
ANR	4775260	PrimaryExpression	1		4775067	1					
ANR	4775261	Argument	"""ret"""		4775067	1					
ANR	4775262	PrimaryExpression	"""ret"""		4775067	0					
ANR	4775263	Argument	3		4775067	2					
ANR	4775264	PrimaryExpression	3		4775067	0					
ANR	4775265	CompoundStatement		27:36:692:692	4775067	1					
ANR	4775266	ExpressionStatement	"strcpy ( out , e -> retvar )"	549:3:13063:13086	4775067	0	True				
ANR	4775267	CallExpression	"strcpy ( out , e -> retvar )"		4775067	0					
ANR	4775268	Callee	strcpy		4775067	0					
ANR	4775269	Identifier	strcpy		4775067	0					
ANR	4775270	ArgumentList	out		4775067	1					
ANR	4775271	Argument	out		4775067	0					
ANR	4775272	Identifier	out		4775067	0					
ANR	4775273	Argument	e -> retvar		4775067	1					
ANR	4775274	PtrMemberAccess	e -> retvar		4775067	0					
ANR	4775275	Identifier	e		4775067	0					
ANR	4775276	Identifier	retvar		4775067	1					
ANR	4775277	ElseStatement	else		4775067	0					
ANR	4775278	IfStatement	"if ( ! strncmp ( str + 1 , ""fix"" , 3 ) )"		4775067	0					
ANR	4775279	Condition	"! strncmp ( str + 1 , ""fix"" , 3 )"	550:13:13101:13128	4775067	0	True				
ANR	4775280	UnaryOperationExpression	"! strncmp ( str + 1 , ""fix"" , 3 )"		4775067	0					
ANR	4775281	UnaryOperator	!		4775067	0					
ANR	4775282	CallExpression	"strncmp ( str + 1 , ""fix"" , 3 )"		4775067	1					
ANR	4775283	Callee	strncmp		4775067	0					
ANR	4775284	Identifier	strncmp		4775067	0					
ANR	4775285	ArgumentList	str + 1		4775067	1					
ANR	4775286	Argument	str + 1		4775067	0					
ANR	4775287	AdditiveExpression	str + 1		4775067	0		+			
ANR	4775288	Identifier	str		4775067	0					
ANR	4775289	PrimaryExpression	1		4775067	1					
ANR	4775290	Argument	"""fix"""		4775067	1					
ANR	4775291	PrimaryExpression	"""fix"""		4775067	0					
ANR	4775292	Argument	3		4775067	2					
ANR	4775293	PrimaryExpression	3		4775067	0					
ANR	4775294	CompoundStatement		30:3:770:829	4775067	1					
ANR	4775295	IdentifierDeclStatement	"int idx = ( int ) r_num_math ( NULL , str + 4 ) + delta + e -> size ;"	551:3:13136:13195	4775067	0	True				
ANR	4775296	IdentifierDecl	"idx = ( int ) r_num_math ( NULL , str + 4 ) + delta + e -> size"		4775067	0					
ANR	4775297	IdentifierDeclType	int		4775067	0					
ANR	4775298	Identifier	idx		4775067	1					
ANR	4775299	AssignmentExpression	"idx = ( int ) r_num_math ( NULL , str + 4 ) + delta + e -> size"		4775067	2		=			
ANR	4775300	Identifier	idx		4775067	0					
ANR	4775301	AdditiveExpression	"( int ) r_num_math ( NULL , str + 4 ) + delta + e -> size"		4775067	1		+			
ANR	4775302	CastExpression	"( int ) r_num_math ( NULL , str + 4 )"		4775067	0					
ANR	4775303	CastTarget	int		4775067	0					
ANR	4775304	CallExpression	"r_num_math ( NULL , str + 4 )"		4775067	1					
ANR	4775305	Callee	r_num_math		4775067	0					
ANR	4775306	Identifier	r_num_math		4775067	0					
ANR	4775307	ArgumentList	NULL		4775067	1					
ANR	4775308	Argument	NULL		4775067	0					
ANR	4775309	Identifier	NULL		4775067	0					
ANR	4775310	Argument	str + 4		4775067	1					
ANR	4775311	AdditiveExpression	str + 4		4775067	0		+			
ANR	4775312	Identifier	str		4775067	0					
ANR	4775313	PrimaryExpression	4		4775067	1					
ANR	4775314	AdditiveExpression	delta + e -> size		4775067	1		+			
ANR	4775315	Identifier	delta		4775067	0					
ANR	4775316	PtrMemberAccess	e -> size		4775067	1					
ANR	4775317	Identifier	e		4775067	0					
ANR	4775318	Identifier	size		4775067	1					
ANR	4775319	ExpressionStatement	"e -> get_var ( egg , 0 , out , idx - egg -> lang . stackfixed )"	552:3:13200:13252	4775067	1	True				
ANR	4775320	CallExpression	"e -> get_var ( egg , 0 , out , idx - egg -> lang . stackfixed )"		4775067	0					
ANR	4775321	Callee	e -> get_var		4775067	0					
ANR	4775322	PtrMemberAccess	e -> get_var		4775067	0					
ANR	4775323	Identifier	e		4775067	0					
ANR	4775324	Identifier	get_var		4775067	1					
ANR	4775325	ArgumentList	egg		4775067	1					
ANR	4775326	Argument	egg		4775067	0					
ANR	4775327	Identifier	egg		4775067	0					
ANR	4775328	Argument	0		4775067	1					
ANR	4775329	PrimaryExpression	0		4775067	0					
ANR	4775330	Argument	out		4775067	2					
ANR	4775331	Identifier	out		4775067	0					
ANR	4775332	Argument	idx - egg -> lang . stackfixed		4775067	3					
ANR	4775333	AdditiveExpression	idx - egg -> lang . stackfixed		4775067	0		-			
ANR	4775334	Identifier	idx		4775067	0					
ANR	4775335	MemberAccess	egg -> lang . stackfixed		4775067	1					
ANR	4775336	PtrMemberAccess	egg -> lang		4775067	0					
ANR	4775337	Identifier	egg		4775067	0					
ANR	4775338	Identifier	lang		4775067	1					
ANR	4775339	Identifier	stackfixed		4775067	1					
ANR	4775340	ElseStatement	else		4775067	0					
ANR	4775341	IfStatement	"if ( ! strncmp ( str + 1 , ""var"" , 3 ) )"		4775067	0					
ANR	4775342	Condition	"! strncmp ( str + 1 , ""var"" , 3 )"	554:13:13351:13378	4775067	0	True				
ANR	4775343	UnaryOperationExpression	"! strncmp ( str + 1 , ""var"" , 3 )"		4775067	0					
ANR	4775344	UnaryOperator	!		4775067	0					
ANR	4775345	CallExpression	"strncmp ( str + 1 , ""var"" , 3 )"		4775067	1					
ANR	4775346	Callee	strncmp		4775067	0					
ANR	4775347	Identifier	strncmp		4775067	0					
ANR	4775348	ArgumentList	str + 1		4775067	1					
ANR	4775349	Argument	str + 1		4775067	0					
ANR	4775350	AdditiveExpression	str + 1		4775067	0		+			
ANR	4775351	Identifier	str		4775067	0					
ANR	4775352	PrimaryExpression	1		4775067	1					
ANR	4775353	Argument	"""var"""		4775067	1					
ANR	4775354	PrimaryExpression	"""var"""		4775067	0					
ANR	4775355	Argument	3		4775067	2					
ANR	4775356	PrimaryExpression	3		4775067	0					
ANR	4775357	CompoundStatement		34:3:1020:1079	4775067	1					
ANR	4775358	IdentifierDeclStatement	"int idx = ( int ) r_num_math ( NULL , str + 4 ) + delta + e -> size ;"	555:3:13386:13445	4775067	0	True				
ANR	4775359	IdentifierDecl	"idx = ( int ) r_num_math ( NULL , str + 4 ) + delta + e -> size"		4775067	0					
ANR	4775360	IdentifierDeclType	int		4775067	0					
ANR	4775361	Identifier	idx		4775067	1					
ANR	4775362	AssignmentExpression	"idx = ( int ) r_num_math ( NULL , str + 4 ) + delta + e -> size"		4775067	2		=			
ANR	4775363	Identifier	idx		4775067	0					
ANR	4775364	AdditiveExpression	"( int ) r_num_math ( NULL , str + 4 ) + delta + e -> size"		4775067	1		+			
ANR	4775365	CastExpression	"( int ) r_num_math ( NULL , str + 4 )"		4775067	0					
ANR	4775366	CastTarget	int		4775067	0					
ANR	4775367	CallExpression	"r_num_math ( NULL , str + 4 )"		4775067	1					
ANR	4775368	Callee	r_num_math		4775067	0					
ANR	4775369	Identifier	r_num_math		4775067	0					
ANR	4775370	ArgumentList	NULL		4775067	1					
ANR	4775371	Argument	NULL		4775067	0					
ANR	4775372	Identifier	NULL		4775067	0					
ANR	4775373	Argument	str + 4		4775067	1					
ANR	4775374	AdditiveExpression	str + 4		4775067	0		+			
ANR	4775375	Identifier	str		4775067	0					
ANR	4775376	PrimaryExpression	4		4775067	1					
ANR	4775377	AdditiveExpression	delta + e -> size		4775067	1		+			
ANR	4775378	Identifier	delta		4775067	0					
ANR	4775379	PtrMemberAccess	e -> size		4775067	1					
ANR	4775380	Identifier	e		4775067	0					
ANR	4775381	Identifier	size		4775067	1					
ANR	4775382	ExpressionStatement	"e -> get_var ( egg , 0 , out , idx )"	556:3:13450:13479	4775067	1	True				
ANR	4775383	CallExpression	"e -> get_var ( egg , 0 , out , idx )"		4775067	0					
ANR	4775384	Callee	e -> get_var		4775067	0					
ANR	4775385	PtrMemberAccess	e -> get_var		4775067	0					
ANR	4775386	Identifier	e		4775067	0					
ANR	4775387	Identifier	get_var		4775067	1					
ANR	4775388	ArgumentList	egg		4775067	1					
ANR	4775389	Argument	egg		4775067	0					
ANR	4775390	Identifier	egg		4775067	0					
ANR	4775391	Argument	0		4775067	1					
ANR	4775392	PrimaryExpression	0		4775067	0					
ANR	4775393	Argument	out		4775067	2					
ANR	4775394	Identifier	out		4775067	0					
ANR	4775395	Argument	idx		4775067	3					
ANR	4775396	Identifier	idx		4775067	0					
ANR	4775397	ElseStatement	else		4775067	0					
ANR	4775398	IfStatement	"if ( ! strncmp ( str + 1 , ""rarg"" , 4 ) )"		4775067	0					
ANR	4775399	Condition	"! strncmp ( str + 1 , ""rarg"" , 4 )"	558:13:13557:13585	4775067	0	True				
ANR	4775400	UnaryOperationExpression	"! strncmp ( str + 1 , ""rarg"" , 4 )"		4775067	0					
ANR	4775401	UnaryOperator	!		4775067	0					
ANR	4775402	CallExpression	"strncmp ( str + 1 , ""rarg"" , 4 )"		4775067	1					
ANR	4775403	Callee	strncmp		4775067	0					
ANR	4775404	Identifier	strncmp		4775067	0					
ANR	4775405	ArgumentList	str + 1		4775067	1					
ANR	4775406	Argument	str + 1		4775067	0					
ANR	4775407	AdditiveExpression	str + 1		4775067	0		+			
ANR	4775408	Identifier	str		4775067	0					
ANR	4775409	PrimaryExpression	1		4775067	1					
ANR	4775410	Argument	"""rarg"""		4775067	1					
ANR	4775411	PrimaryExpression	"""rarg"""		4775067	0					
ANR	4775412	Argument	4		4775067	2					
ANR	4775413	PrimaryExpression	4		4775067	0					
ANR	4775414	CompoundStatement		37:44:1222:1222	4775067	1					
ANR	4775415	IfStatement	if ( e -> get_ar )		4775067	0					
ANR	4775416	Condition	e -> get_ar	559:7:13597:13605	4775067	0	True				
ANR	4775417	PtrMemberAccess	e -> get_ar		4775067	0					
ANR	4775418	Identifier	e		4775067	0					
ANR	4775419	Identifier	get_ar		4775067	1					
ANR	4775420	CompoundStatement		39:4:1248:1289	4775067	1					
ANR	4775421	IdentifierDeclStatement	"int idx = ( int ) r_num_math ( NULL , str + 5 ) ;"	560:4:13614:13655	4775067	0	True				
ANR	4775422	IdentifierDecl	"idx = ( int ) r_num_math ( NULL , str + 5 )"		4775067	0					
ANR	4775423	IdentifierDeclType	int		4775067	0					
ANR	4775424	Identifier	idx		4775067	1					
ANR	4775425	AssignmentExpression	"idx = ( int ) r_num_math ( NULL , str + 5 )"		4775067	2		=			
ANR	4775426	Identifier	idx		4775067	0					
ANR	4775427	CastExpression	"( int ) r_num_math ( NULL , str + 5 )"		4775067	1					
ANR	4775428	CastTarget	int		4775067	0					
ANR	4775429	CallExpression	"r_num_math ( NULL , str + 5 )"		4775067	1					
ANR	4775430	Callee	r_num_math		4775067	0					
ANR	4775431	Identifier	r_num_math		4775067	0					
ANR	4775432	ArgumentList	NULL		4775067	1					
ANR	4775433	Argument	NULL		4775067	0					
ANR	4775434	Identifier	NULL		4775067	0					
ANR	4775435	Argument	str + 5		4775067	1					
ANR	4775436	AdditiveExpression	str + 5		4775067	0		+			
ANR	4775437	Identifier	str		4775067	0					
ANR	4775438	PrimaryExpression	5		4775067	1					
ANR	4775439	ExpressionStatement	"e -> get_ar ( egg , out , idx )"	561:4:13661:13686	4775067	1	True				
ANR	4775440	CallExpression	"e -> get_ar ( egg , out , idx )"		4775067	0					
ANR	4775441	Callee	e -> get_ar		4775067	0					
ANR	4775442	PtrMemberAccess	e -> get_ar		4775067	0					
ANR	4775443	Identifier	e		4775067	0					
ANR	4775444	Identifier	get_ar		4775067	1					
ANR	4775445	ArgumentList	egg		4775067	1					
ANR	4775446	Argument	egg		4775067	0					
ANR	4775447	Identifier	egg		4775067	0					
ANR	4775448	Argument	out		4775067	1					
ANR	4775449	Identifier	out		4775067	0					
ANR	4775450	Argument	idx		4775067	2					
ANR	4775451	Identifier	idx		4775067	0					
ANR	4775452	ElseStatement	else		4775067	0					
ANR	4775453	IfStatement	"if ( ! strncmp ( str + 1 , ""arg"" , 3 ) )"		4775067	0					
ANR	4775454	Condition	"! strncmp ( str + 1 , ""arg"" , 3 )"	563:13:13706:13733	4775067	0	True				
ANR	4775455	UnaryOperationExpression	"! strncmp ( str + 1 , ""arg"" , 3 )"		4775067	0					
ANR	4775456	UnaryOperator	!		4775067	0					
ANR	4775457	CallExpression	"strncmp ( str + 1 , ""arg"" , 3 )"		4775067	1					
ANR	4775458	Callee	strncmp		4775067	0					
ANR	4775459	Identifier	strncmp		4775067	0					
ANR	4775460	ArgumentList	str + 1		4775067	1					
ANR	4775461	Argument	str + 1		4775067	0					
ANR	4775462	AdditiveExpression	str + 1		4775067	0		+			
ANR	4775463	Identifier	str		4775067	0					
ANR	4775464	PrimaryExpression	1		4775067	1					
ANR	4775465	Argument	"""arg"""		4775067	1					
ANR	4775466	PrimaryExpression	"""arg"""		4775067	0					
ANR	4775467	Argument	3		4775067	2					
ANR	4775468	PrimaryExpression	3		4775067	0					
ANR	4775469	CompoundStatement		42:43:1370:1370	4775067	1					
ANR	4775470	IfStatement	if ( str [ 4 ] )		4775067	0					
ANR	4775471	Condition	str [ 4 ]	564:7:13745:13750	4775067	0	True				
ANR	4775472	ArrayIndexing	str [ 4 ]		4775067	0					
ANR	4775473	Identifier	str		4775067	0					
ANR	4775474	PrimaryExpression	4		4775067	1					
ANR	4775475	CompoundStatement		43:15:1387:1387	4775067	1					
ANR	4775476	IfStatement	if ( egg -> lang . stackframe == 0 )		4775067	0					
ANR	4775477	Condition	egg -> lang . stackframe == 0	565:8:13763:13787	4775067	0	True				
ANR	4775478	EqualityExpression	egg -> lang . stackframe == 0		4775067	0		==			
ANR	4775479	MemberAccess	egg -> lang . stackframe		4775067	0					
ANR	4775480	PtrMemberAccess	egg -> lang		4775067	0					
ANR	4775481	Identifier	egg		4775067	0					
ANR	4775482	Identifier	lang		4775067	1					
ANR	4775483	Identifier	stackframe		4775067	1					
ANR	4775484	PrimaryExpression	0		4775067	1					
ANR	4775485	CompoundStatement		44:35:1424:1424	4775067	1					
ANR	4775486	ExpressionStatement	"e -> get_var ( egg , 1 , out , 4 )"	566:5:13797:13824	4775067	0	True				
ANR	4775487	CallExpression	"e -> get_var ( egg , 1 , out , 4 )"		4775067	0					
ANR	4775488	Callee	e -> get_var		4775067	0					
ANR	4775489	PtrMemberAccess	e -> get_var		4775067	0					
ANR	4775490	Identifier	e		4775067	0					
ANR	4775491	Identifier	get_var		4775067	1					
ANR	4775492	ArgumentList	egg		4775067	1					
ANR	4775493	Argument	egg		4775067	0					
ANR	4775494	Identifier	egg		4775067	0					
ANR	4775495	Argument	1		4775067	1					
ANR	4775496	PrimaryExpression	1		4775067	0					
ANR	4775497	Argument	out		4775067	2					
ANR	4775498	Identifier	out		4775067	0					
ANR	4775499	Argument	4		4775067	3					
ANR	4775500	PrimaryExpression	4		4775067	0					
ANR	4775501	ElseStatement	else		4775067	0					
ANR	4775502	CompoundStatement		47:5:1489:1548	4775067	0					
ANR	4775503	IdentifierDeclStatement	"int idx = ( int ) r_num_math ( NULL , str + 4 ) + delta + e -> size ;"	568:5:13855:13914	4775067	0	True				
ANR	4775504	IdentifierDecl	"idx = ( int ) r_num_math ( NULL , str + 4 ) + delta + e -> size"		4775067	0					
ANR	4775505	IdentifierDeclType	int		4775067	0					
ANR	4775506	Identifier	idx		4775067	1					
ANR	4775507	AssignmentExpression	"idx = ( int ) r_num_math ( NULL , str + 4 ) + delta + e -> size"		4775067	2		=			
ANR	4775508	Identifier	idx		4775067	0					
ANR	4775509	AdditiveExpression	"( int ) r_num_math ( NULL , str + 4 ) + delta + e -> size"		4775067	1		+			
ANR	4775510	CastExpression	"( int ) r_num_math ( NULL , str + 4 )"		4775067	0					
ANR	4775511	CastTarget	int		4775067	0					
ANR	4775512	CallExpression	"r_num_math ( NULL , str + 4 )"		4775067	1					
ANR	4775513	Callee	r_num_math		4775067	0					
ANR	4775514	Identifier	r_num_math		4775067	0					
ANR	4775515	ArgumentList	NULL		4775067	1					
ANR	4775516	Argument	NULL		4775067	0					
ANR	4775517	Identifier	NULL		4775067	0					
ANR	4775518	Argument	str + 4		4775067	1					
ANR	4775519	AdditiveExpression	str + 4		4775067	0		+			
ANR	4775520	Identifier	str		4775067	0					
ANR	4775521	PrimaryExpression	4		4775067	1					
ANR	4775522	AdditiveExpression	delta + e -> size		4775067	1		+			
ANR	4775523	Identifier	delta		4775067	0					
ANR	4775524	PtrMemberAccess	e -> size		4775067	1					
ANR	4775525	Identifier	e		4775067	0					
ANR	4775526	Identifier	size		4775067	1					
ANR	4775527	ExpressionStatement	"e -> get_var ( egg , 2 , out , idx + 4 )"	569:5:13921:13954	4775067	1	True				
ANR	4775528	CallExpression	"e -> get_var ( egg , 2 , out , idx + 4 )"		4775067	0					
ANR	4775529	Callee	e -> get_var		4775067	0					
ANR	4775530	PtrMemberAccess	e -> get_var		4775067	0					
ANR	4775531	Identifier	e		4775067	0					
ANR	4775532	Identifier	get_var		4775067	1					
ANR	4775533	ArgumentList	egg		4775067	1					
ANR	4775534	Argument	egg		4775067	0					
ANR	4775535	Identifier	egg		4775067	0					
ANR	4775536	Argument	2		4775067	1					
ANR	4775537	PrimaryExpression	2		4775067	0					
ANR	4775538	Argument	out		4775067	2					
ANR	4775539	Identifier	out		4775067	0					
ANR	4775540	Argument	idx + 4		4775067	3					
ANR	4775541	AdditiveExpression	idx + 4		4775067	0		+			
ANR	4775542	Identifier	idx		4775067	0					
ANR	4775543	PrimaryExpression	4		4775067	1					
ANR	4775544	ElseStatement	else		4775067	0					
ANR	4775545	CompoundStatement		50:10:1606:1606	4775067	0					
ANR	4775546	IfStatement	if ( egg -> lang . callname )		4775067	0					
ANR	4775547	Condition	egg -> lang . callname	573:8:14021:14038	4775067	0	True				
ANR	4775548	MemberAccess	egg -> lang . callname		4775067	0					
ANR	4775549	PtrMemberAccess	egg -> lang		4775067	0					
ANR	4775550	Identifier	egg		4775067	0					
ANR	4775551	Identifier	lang		4775067	1					
ANR	4775552	Identifier	callname		4775067	1					
ANR	4775553	CompoundStatement		52:28:1675:1675	4775067	1					
ANR	4775554	ForStatement	for ( i = 0 ; i < egg -> lang . nsyscalls ; i ++ )		4775067	0					
ANR	4775555	ForInit	i = 0 ;	574:10:14053:14058	4775067	0	True				
ANR	4775556	AssignmentExpression	i = 0		4775067	0		=			
ANR	4775557	Identifier	i		4775067	0					
ANR	4775558	PrimaryExpression	0		4775067	1					
ANR	4775559	Condition	i < egg -> lang . nsyscalls	574:17:14060:14082	4775067	1	True				
ANR	4775560	RelationalExpression	i < egg -> lang . nsyscalls		4775067	0		<			
ANR	4775561	Identifier	i		4775067	0					
ANR	4775562	MemberAccess	egg -> lang . nsyscalls		4775067	1					
ANR	4775563	PtrMemberAccess	egg -> lang		4775067	0					
ANR	4775564	Identifier	egg		4775067	0					
ANR	4775565	Identifier	lang		4775067	1					
ANR	4775566	Identifier	nsyscalls		4775067	1					
ANR	4775567	PostIncDecOperationExpression	i ++	574:42:14085:14087	4775067	2	True				
ANR	4775568	Identifier	i		4775067	0					
ANR	4775569	IncDec	++		4775067	1					
ANR	4775570	CompoundStatement		53:47:1724:1724	4775067	3					
ANR	4775571	IfStatement	"if ( ! strcmp ( egg -> lang . syscalls [ i ] . name , egg -> lang . callname ) )"		4775067	0					
ANR	4775572	Condition	"! strcmp ( egg -> lang . syscalls [ i ] . name , egg -> lang . callname )"	575:10:14102:14157	4775067	0	True				
ANR	4775573	UnaryOperationExpression	"! strcmp ( egg -> lang . syscalls [ i ] . name , egg -> lang . callname )"		4775067	0					
ANR	4775574	UnaryOperator	!		4775067	0					
ANR	4775575	CallExpression	"strcmp ( egg -> lang . syscalls [ i ] . name , egg -> lang . callname )"		4775067	1					
ANR	4775576	Callee	strcmp		4775067	0					
ANR	4775577	Identifier	strcmp		4775067	0					
ANR	4775578	ArgumentList	egg -> lang . syscalls [ i ] . name		4775067	1					
ANR	4775579	Argument	egg -> lang . syscalls [ i ] . name		4775067	0					
ANR	4775580	MemberAccess	egg -> lang . syscalls [ i ] . name		4775067	0					
ANR	4775581	ArrayIndexing	egg -> lang . syscalls [ i ]		4775067	0					
ANR	4775582	MemberAccess	egg -> lang . syscalls		4775067	0					
ANR	4775583	PtrMemberAccess	egg -> lang		4775067	0					
ANR	4775584	Identifier	egg		4775067	0					
ANR	4775585	Identifier	lang		4775067	1					
ANR	4775586	Identifier	syscalls		4775067	1					
ANR	4775587	Identifier	i		4775067	1					
ANR	4775588	Identifier	name		4775067	1					
ANR	4775589	Argument	egg -> lang . callname		4775067	1					
ANR	4775590	MemberAccess	egg -> lang . callname		4775067	0					
ANR	4775591	PtrMemberAccess	egg -> lang		4775067	0					
ANR	4775592	Identifier	egg		4775067	0					
ANR	4775593	Identifier	lang		4775067	1					
ANR	4775594	Identifier	callname		4775067	1					
ANR	4775595	CompoundStatement		54:68:1794:1794	4775067	1					
ANR	4775596	ExpressionStatement	free ( oldstr )	576:7:14169:14182	4775067	0	True				
ANR	4775597	CallExpression	free ( oldstr )		4775067	0					
ANR	4775598	Callee	free		4775067	0					
ANR	4775599	Identifier	free		4775067	0					
ANR	4775600	ArgumentList	oldstr		4775067	1					
ANR	4775601	Argument	oldstr		4775067	0					
ANR	4775602	Identifier	oldstr		4775067	0					
ANR	4775603	ReturnStatement	return strdup ( egg -> lang . syscalls [ i ] . arg ) ;	577:7:14191:14232	4775067	1	True				
ANR	4775604	CallExpression	strdup ( egg -> lang . syscalls [ i ] . arg )		4775067	0					
ANR	4775605	Callee	strdup		4775067	0					
ANR	4775606	Identifier	strdup		4775067	0					
ANR	4775607	ArgumentList	egg -> lang . syscalls [ i ] . arg		4775067	1					
ANR	4775608	Argument	egg -> lang . syscalls [ i ] . arg		4775067	0					
ANR	4775609	MemberAccess	egg -> lang . syscalls [ i ] . arg		4775067	0					
ANR	4775610	ArrayIndexing	egg -> lang . syscalls [ i ]		4775067	0					
ANR	4775611	MemberAccess	egg -> lang . syscalls		4775067	0					
ANR	4775612	PtrMemberAccess	egg -> lang		4775067	0					
ANR	4775613	Identifier	egg		4775067	0					
ANR	4775614	Identifier	lang		4775067	1					
ANR	4775615	Identifier	syscalls		4775067	1					
ANR	4775616	Identifier	i		4775067	1					
ANR	4775617	Identifier	arg		4775067	1					
ANR	4775618	ExpressionStatement	"eprintf ( ""Unknown arg for syscall '%s'\\n"" , egg -> lang . callname )"	580:5:14254:14316	4775067	1	True				
ANR	4775619	CallExpression	"eprintf ( ""Unknown arg for syscall '%s'\\n"" , egg -> lang . callname )"		4775067	0					
ANR	4775620	Callee	eprintf		4775067	0					
ANR	4775621	Identifier	eprintf		4775067	0					
ANR	4775622	ArgumentList	"""Unknown arg for syscall '%s'\\n"""		4775067	1					
ANR	4775623	Argument	"""Unknown arg for syscall '%s'\\n"""		4775067	0					
ANR	4775624	PrimaryExpression	"""Unknown arg for syscall '%s'\\n"""		4775067	0					
ANR	4775625	Argument	egg -> lang . callname		4775067	1					
ANR	4775626	MemberAccess	egg -> lang . callname		4775067	0					
ANR	4775627	PtrMemberAccess	egg -> lang		4775067	0					
ANR	4775628	Identifier	egg		4775067	0					
ANR	4775629	Identifier	lang		4775067	1					
ANR	4775630	Identifier	callname		4775067	1					
ANR	4775631	ElseStatement	else		4775067	0					
ANR	4775632	CompoundStatement		60:11:1963:1963	4775067	0					
ANR	4775633	ExpressionStatement	"eprintf ( ""NO CALLNAME '%s'\\n"" , egg -> lang . callname )"	582:5:14336:14386	4775067	0	True				
ANR	4775634	CallExpression	"eprintf ( ""NO CALLNAME '%s'\\n"" , egg -> lang . callname )"		4775067	0					
ANR	4775635	Callee	eprintf		4775067	0					
ANR	4775636	Identifier	eprintf		4775067	0					
ANR	4775637	ArgumentList	"""NO CALLNAME '%s'\\n"""		4775067	1					
ANR	4775638	Argument	"""NO CALLNAME '%s'\\n"""		4775067	0					
ANR	4775639	PrimaryExpression	"""NO CALLNAME '%s'\\n"""		4775067	0					
ANR	4775640	Argument	egg -> lang . callname		4775067	1					
ANR	4775641	MemberAccess	egg -> lang . callname		4775067	0					
ANR	4775642	PtrMemberAccess	egg -> lang		4775067	0					
ANR	4775643	Identifier	egg		4775067	0					
ANR	4775644	Identifier	lang		4775067	1					
ANR	4775645	Identifier	callname		4775067	1					
ANR	4775646	ElseStatement	else		4775067	0					
ANR	4775647	IfStatement	"if ( ! strncmp ( str + 1 , ""reg"" , 3 ) )"		4775067	0					
ANR	4775648	Condition	"! strncmp ( str + 1 , ""reg"" , 3 )"	585:13:14412:14439	4775067	0	True				
ANR	4775649	UnaryOperationExpression	"! strncmp ( str + 1 , ""reg"" , 3 )"		4775067	0					
ANR	4775650	UnaryOperator	!		4775067	0					
ANR	4775651	CallExpression	"strncmp ( str + 1 , ""reg"" , 3 )"		4775067	1					
ANR	4775652	Callee	strncmp		4775067	0					
ANR	4775653	Identifier	strncmp		4775067	0					
ANR	4775654	ArgumentList	str + 1		4775067	1					
ANR	4775655	Argument	str + 1		4775067	0					
ANR	4775656	AdditiveExpression	str + 1		4775067	0		+			
ANR	4775657	Identifier	str		4775067	0					
ANR	4775658	PrimaryExpression	1		4775067	1					
ANR	4775659	Argument	"""reg"""		4775067	1					
ANR	4775660	PrimaryExpression	"""reg"""		4775067	0					
ANR	4775661	Argument	3		4775067	2					
ANR	4775662	PrimaryExpression	3		4775067	0					
ANR	4775663	CompoundStatement		64:43:2076:2076	4775067	1					
ANR	4775664	IfStatement	if ( egg -> lang . attsyntax )		4775067	0					
ANR	4775665	Condition	egg -> lang . attsyntax	587:7:14491:14509	4775067	0	True				
ANR	4775666	MemberAccess	egg -> lang . attsyntax		4775067	0					
ANR	4775667	PtrMemberAccess	egg -> lang		4775067	0					
ANR	4775668	Identifier	egg		4775067	0					
ANR	4775669	Identifier	lang		4775067	1					
ANR	4775670	Identifier	attsyntax		4775067	1					
ANR	4775671	CompoundStatement		66:28:2146:2146	4775067	1					
ANR	4775672	ExpressionStatement	"snprintf ( out , 32 , ""%%%s"" , e -> regs ( egg , atoi ( str + 4 ) ) )"	588:4:14518:14575	4775067	0	True				
ANR	4775673	CallExpression	"snprintf ( out , 32 , ""%%%s"" , e -> regs ( egg , atoi ( str + 4 ) ) )"		4775067	0					
ANR	4775674	Callee	snprintf		4775067	0					
ANR	4775675	Identifier	snprintf		4775067	0					
ANR	4775676	ArgumentList	out		4775067	1					
ANR	4775677	Argument	out		4775067	0					
ANR	4775678	Identifier	out		4775067	0					
ANR	4775679	Argument	32		4775067	1					
ANR	4775680	PrimaryExpression	32		4775067	0					
ANR	4775681	Argument	"""%%%s"""		4775067	2					
ANR	4775682	PrimaryExpression	"""%%%s"""		4775067	0					
ANR	4775683	Argument	"e -> regs ( egg , atoi ( str + 4 ) )"		4775067	3					
ANR	4775684	CallExpression	"e -> regs ( egg , atoi ( str + 4 ) )"		4775067	0					
ANR	4775685	Callee	e -> regs		4775067	0					
ANR	4775686	PtrMemberAccess	e -> regs		4775067	0					
ANR	4775687	Identifier	e		4775067	0					
ANR	4775688	Identifier	regs		4775067	1					
ANR	4775689	ArgumentList	egg		4775067	1					
ANR	4775690	Argument	egg		4775067	0					
ANR	4775691	Identifier	egg		4775067	0					
ANR	4775692	Argument	atoi ( str + 4 )		4775067	1					
ANR	4775693	CallExpression	atoi ( str + 4 )		4775067	0					
ANR	4775694	Callee	atoi		4775067	0					
ANR	4775695	Identifier	atoi		4775067	0					
ANR	4775696	ArgumentList	str + 4		4775067	1					
ANR	4775697	Argument	str + 4		4775067	0					
ANR	4775698	AdditiveExpression	str + 4		4775067	0		+			
ANR	4775699	Identifier	str		4775067	0					
ANR	4775700	PrimaryExpression	4		4775067	1					
ANR	4775701	ElseStatement	else		4775067	0					
ANR	4775702	CompoundStatement		68:10:2221:2221	4775067	0					
ANR	4775703	ExpressionStatement	"snprintf ( out , 32 , ""%s"" , e -> regs ( egg , atoi ( str + 4 ) ) )"	590:4:14593:14648	4775067	0	True				
ANR	4775704	CallExpression	"snprintf ( out , 32 , ""%s"" , e -> regs ( egg , atoi ( str + 4 ) ) )"		4775067	0					
ANR	4775705	Callee	snprintf		4775067	0					
ANR	4775706	Identifier	snprintf		4775067	0					
ANR	4775707	ArgumentList	out		4775067	1					
ANR	4775708	Argument	out		4775067	0					
ANR	4775709	Identifier	out		4775067	0					
ANR	4775710	Argument	32		4775067	1					
ANR	4775711	PrimaryExpression	32		4775067	0					
ANR	4775712	Argument	"""%s"""		4775067	2					
ANR	4775713	PrimaryExpression	"""%s"""		4775067	0					
ANR	4775714	Argument	"e -> regs ( egg , atoi ( str + 4 ) )"		4775067	3					
ANR	4775715	CallExpression	"e -> regs ( egg , atoi ( str + 4 ) )"		4775067	0					
ANR	4775716	Callee	e -> regs		4775067	0					
ANR	4775717	PtrMemberAccess	e -> regs		4775067	0					
ANR	4775718	Identifier	e		4775067	0					
ANR	4775719	Identifier	regs		4775067	1					
ANR	4775720	ArgumentList	egg		4775067	1					
ANR	4775721	Argument	egg		4775067	0					
ANR	4775722	Identifier	egg		4775067	0					
ANR	4775723	Argument	atoi ( str + 4 )		4775067	1					
ANR	4775724	CallExpression	atoi ( str + 4 )		4775067	0					
ANR	4775725	Callee	atoi		4775067	0					
ANR	4775726	Identifier	atoi		4775067	0					
ANR	4775727	ArgumentList	str + 4		4775067	1					
ANR	4775728	Argument	str + 4		4775067	0					
ANR	4775729	AdditiveExpression	str + 4		4775067	0		+			
ANR	4775730	Identifier	str		4775067	0					
ANR	4775731	PrimaryExpression	4		4775067	1					
ANR	4775732	ElseStatement	else		4775067	0					
ANR	4775733	CompoundStatement		71:9:2298:2298	4775067	0					
ANR	4775734	ExpressionStatement	out = str	593:3:14669:14678	4775067	0	True				
ANR	4775735	AssignmentExpression	out = str		4775067	0		=			
ANR	4775736	Identifier	out		4775067	0					
ANR	4775737	Identifier	str		4775067	1					
ANR	4775738	ExpressionStatement	"eprintf ( ""Something is really wrong\\n"" )"	594:3:14725:14764	4775067	1	True				
ANR	4775739	CallExpression	"eprintf ( ""Something is really wrong\\n"" )"		4775067	0					
ANR	4775740	Callee	eprintf		4775067	0					
ANR	4775741	Identifier	eprintf		4775067	0					
ANR	4775742	ArgumentList	"""Something is really wrong\\n"""		4775067	1					
ANR	4775743	Argument	"""Something is really wrong\\n"""		4775067	0					
ANR	4775744	PrimaryExpression	"""Something is really wrong\\n"""		4775067	0					
ANR	4775745	ExpressionStatement	ret = strdup ( out )	596:2:14772:14790	4775067	2	True				
ANR	4775746	AssignmentExpression	ret = strdup ( out )		4775067	0		=			
ANR	4775747	Identifier	ret		4775067	0					
ANR	4775748	CallExpression	strdup ( out )		4775067	1					
ANR	4775749	Callee	strdup		4775067	0					
ANR	4775750	Identifier	strdup		4775067	0					
ANR	4775751	ArgumentList	out		4775067	1					
ANR	4775752	Argument	out		4775067	0					
ANR	4775753	Identifier	out		4775067	0					
ANR	4775754	ExpressionStatement	free ( oldstr )	597:2:14794:14807	4775067	3	True				
ANR	4775755	CallExpression	free ( oldstr )		4775067	0					
ANR	4775756	Callee	free		4775067	0					
ANR	4775757	Identifier	free		4775067	0					
ANR	4775758	ArgumentList	oldstr		4775067	1					
ANR	4775759	Argument	oldstr		4775067	0					
ANR	4775760	Identifier	oldstr		4775067	0					
ANR	4775761	ElseStatement	else		4775067	0					
ANR	4775762	IfStatement	"if ( * str == '""' || * str == '\\'' )"		4775067	0					
ANR	4775763	Condition	"* str == '""' || * str == '\\''"	598:12:14821:14847	4775067	0	True				
ANR	4775764	OrExpression	"* str == '""' || * str == '\\''"		4775067	0		||			
ANR	4775765	EqualityExpression	"* str == '""'"		4775067	0		==			
ANR	4775766	UnaryOperationExpression	* str		4775067	0					
ANR	4775767	UnaryOperator	*		4775067	0					
ANR	4775768	Identifier	str		4775067	1					
ANR	4775769	PrimaryExpression	"'""'"		4775067	1					
ANR	4775770	EqualityExpression	* str == '\\''		4775067	1		==			
ANR	4775771	UnaryOperationExpression	* str		4775067	0					
ANR	4775772	UnaryOperator	*		4775067	0					
ANR	4775773	Identifier	str		4775067	1					
ANR	4775774	PrimaryExpression	'\\''		4775067	1					
ANR	4775775	CompoundStatement		78:2:2488:2516	4775067	1					
ANR	4775776	IdentifierDeclStatement	"int mustfilter = * str == '""' ;"	599:2:14854:14882	4775067	0	True				
ANR	4775777	IdentifierDecl	"mustfilter = * str == '""'"		4775067	0					
ANR	4775778	IdentifierDeclType	int		4775067	0					
ANR	4775779	Identifier	mustfilter		4775067	1					
ANR	4775780	AssignmentExpression	"mustfilter = * str == '""'"		4775067	2		=			
ANR	4775781	Identifier	mustfilter		4775067	0					
ANR	4775782	EqualityExpression	"* str == '""'"		4775067	1		==			
ANR	4775783	UnaryOperationExpression	* str		4775067	0					
ANR	4775784	UnaryOperator	*		4775067	0					
ANR	4775785	Identifier	str		4775067	1					
ANR	4775786	PrimaryExpression	"'""'"		4775067	1					
ANR	4775787	ExpressionStatement	str ++	601:2:14944:14949	4775067	1	True				
ANR	4775788	PostIncDecOperationExpression	str ++		4775067	0					
ANR	4775789	Identifier	str		4775067	0					
ANR	4775790	IncDec	++		4775067	1					
ANR	4775791	ExpressionStatement	len = strlen ( str ) - 1	602:2:14953:14975	4775067	2	True				
ANR	4775792	AssignmentExpression	len = strlen ( str ) - 1		4775067	0		=			
ANR	4775793	Identifier	len		4775067	0					
ANR	4775794	AdditiveExpression	strlen ( str ) - 1		4775067	1		-			
ANR	4775795	CallExpression	strlen ( str )		4775067	0					
ANR	4775796	Callee	strlen		4775067	0					
ANR	4775797	Identifier	strlen		4775067	0					
ANR	4775798	ArgumentList	str		4775067	1					
ANR	4775799	Argument	str		4775067	0					
ANR	4775800	Identifier	str		4775067	0					
ANR	4775801	PrimaryExpression	1		4775067	1					
ANR	4775802	IfStatement	if ( ! egg -> lang . stackfixed || egg -> lang . stackfixed < len )		4775067	3					
ANR	4775803	Condition	! egg -> lang . stackfixed || egg -> lang . stackfixed < len	603:6:14983:15033	4775067	0	True				
ANR	4775804	OrExpression	! egg -> lang . stackfixed || egg -> lang . stackfixed < len		4775067	0		||			
ANR	4775805	UnaryOperationExpression	! egg -> lang . stackfixed		4775067	0					
ANR	4775806	UnaryOperator	!		4775067	0					
ANR	4775807	MemberAccess	egg -> lang . stackfixed		4775067	1					
ANR	4775808	PtrMemberAccess	egg -> lang		4775067	0					
ANR	4775809	Identifier	egg		4775067	0					
ANR	4775810	Identifier	lang		4775067	1					
ANR	4775811	Identifier	stackfixed		4775067	1					
ANR	4775812	RelationalExpression	egg -> lang . stackfixed < len		4775067	1		<			
ANR	4775813	MemberAccess	egg -> lang . stackfixed		4775067	0					
ANR	4775814	PtrMemberAccess	egg -> lang		4775067	0					
ANR	4775815	Identifier	egg		4775067	0					
ANR	4775816	Identifier	lang		4775067	1					
ANR	4775817	Identifier	stackfixed		4775067	1					
ANR	4775818	Identifier	len		4775067	1					
ANR	4775819	CompoundStatement		82:59:2670:2670	4775067	1					
ANR	4775820	ExpressionStatement	"eprintf ( ""WARNING: No room in the static stackframe! (%d must be %d)\\n"" , egg -> lang . stackfixed , len )"	604:3:15041:15144	4775067	0	True				
ANR	4775821	CallExpression	"eprintf ( ""WARNING: No room in the static stackframe! (%d must be %d)\\n"" , egg -> lang . stackfixed , len )"		4775067	0					
ANR	4775822	Callee	eprintf		4775067	0					
ANR	4775823	Identifier	eprintf		4775067	0					
ANR	4775824	ArgumentList	"""WARNING: No room in the static stackframe! (%d must be %d)\\n"""		4775067	1					
ANR	4775825	Argument	"""WARNING: No room in the static stackframe! (%d must be %d)\\n"""		4775067	0					
ANR	4775826	PrimaryExpression	"""WARNING: No room in the static stackframe! (%d must be %d)\\n"""		4775067	0					
ANR	4775827	Argument	egg -> lang . stackfixed		4775067	1					
ANR	4775828	MemberAccess	egg -> lang . stackfixed		4775067	0					
ANR	4775829	PtrMemberAccess	egg -> lang		4775067	0					
ANR	4775830	Identifier	egg		4775067	0					
ANR	4775831	Identifier	lang		4775067	1					
ANR	4775832	Identifier	stackfixed		4775067	1					
ANR	4775833	Argument	len		4775067	2					
ANR	4775834	Identifier	len		4775067	0					
ANR	4775835	ExpressionStatement	str [ len ] = '\\0'	607:2:15152:15167	4775067	4	True				
ANR	4775836	AssignmentExpression	str [ len ] = '\\0'		4775067	0		=			
ANR	4775837	ArrayIndexing	str [ len ]		4775067	0					
ANR	4775838	Identifier	str		4775067	0					
ANR	4775839	Identifier	len		4775067	1					
ANR	4775840	PrimaryExpression	'\\0'		4775067	1					
ANR	4775841	ExpressionStatement	"snprintf ( foo , sizeof ( foo ) - 1 , "".fix%d"" , egg -> lang . nargs * 16 )"	608:2:15171:15235	4775067	5	True				
ANR	4775842	CallExpression	"snprintf ( foo , sizeof ( foo ) - 1 , "".fix%d"" , egg -> lang . nargs * 16 )"		4775067	0					
ANR	4775843	Callee	snprintf		4775067	0					
ANR	4775844	Identifier	snprintf		4775067	0					
ANR	4775845	ArgumentList	foo		4775067	1					
ANR	4775846	Argument	foo		4775067	0					
ANR	4775847	Identifier	foo		4775067	0					
ANR	4775848	Argument	sizeof ( foo ) - 1		4775067	1					
ANR	4775849	AdditiveExpression	sizeof ( foo ) - 1		4775067	0		-			
ANR	4775850	SizeofExpression	sizeof ( foo )		4775067	0					
ANR	4775851	Sizeof	sizeof		4775067	0					
ANR	4775852	SizeofOperand	foo		4775067	1					
ANR	4775853	PrimaryExpression	1		4775067	1					
ANR	4775854	Argument	""".fix%d"""		4775067	2					
ANR	4775855	PrimaryExpression	""".fix%d"""		4775067	0					
ANR	4775856	Argument	egg -> lang . nargs * 16		4775067	3					
ANR	4775857	MultiplicativeExpression	egg -> lang . nargs * 16		4775067	0		*			
ANR	4775858	MemberAccess	egg -> lang . nargs		4775067	0					
ANR	4775859	PtrMemberAccess	egg -> lang		4775067	0					
ANR	4775860	Identifier	egg		4775067	0					
ANR	4775861	Identifier	lang		4775067	1					
ANR	4775862	Identifier	nargs		4775067	1					
ANR	4775863	PrimaryExpression	16		4775067	1					
ANR	4775864	ExpressionStatement	free ( egg -> lang . dstvar )	609:2:15264:15287	4775067	6	True				
ANR	4775865	CallExpression	free ( egg -> lang . dstvar )		4775067	0					
ANR	4775866	Callee	free		4775067	0					
ANR	4775867	Identifier	free		4775067	0					
ANR	4775868	ArgumentList	egg -> lang . dstvar		4775067	1					
ANR	4775869	Argument	egg -> lang . dstvar		4775067	0					
ANR	4775870	MemberAccess	egg -> lang . dstvar		4775067	0					
ANR	4775871	PtrMemberAccess	egg -> lang		4775067	0					
ANR	4775872	Identifier	egg		4775067	0					
ANR	4775873	Identifier	lang		4775067	1					
ANR	4775874	Identifier	dstvar		4775067	1					
ANR	4775875	ExpressionStatement	egg -> lang . dstvar = strdup ( skipspaces ( foo ) )	610:2:15291:15335	4775067	7	True				
ANR	4775876	AssignmentExpression	egg -> lang . dstvar = strdup ( skipspaces ( foo ) )		4775067	0		=			
ANR	4775877	MemberAccess	egg -> lang . dstvar		4775067	0					
ANR	4775878	PtrMemberAccess	egg -> lang		4775067	0					
ANR	4775879	Identifier	egg		4775067	0					
ANR	4775880	Identifier	lang		4775067	1					
ANR	4775881	Identifier	dstvar		4775067	1					
ANR	4775882	CallExpression	strdup ( skipspaces ( foo ) )		4775067	1					
ANR	4775883	Callee	strdup		4775067	0					
ANR	4775884	Identifier	strdup		4775067	0					
ANR	4775885	ArgumentList	skipspaces ( foo )		4775067	1					
ANR	4775886	Argument	skipspaces ( foo )		4775067	0					
ANR	4775887	CallExpression	skipspaces ( foo )		4775067	0					
ANR	4775888	Callee	skipspaces		4775067	0					
ANR	4775889	Identifier	skipspaces		4775067	0					
ANR	4775890	ArgumentList	foo		4775067	1					
ANR	4775891	Argument	foo		4775067	0					
ANR	4775892	Identifier	foo		4775067	0					
ANR	4775893	ExpressionStatement	"rcc_pushstr ( egg , str , mustfilter )"	611:2:15339:15373	4775067	8	True				
ANR	4775894	CallExpression	"rcc_pushstr ( egg , str , mustfilter )"		4775067	0					
ANR	4775895	Callee	rcc_pushstr		4775067	0					
ANR	4775896	Identifier	rcc_pushstr		4775067	0					
ANR	4775897	ArgumentList	egg		4775067	1					
ANR	4775898	Argument	egg		4775067	0					
ANR	4775899	Identifier	egg		4775067	0					
ANR	4775900	Argument	str		4775067	1					
ANR	4775901	Identifier	str		4775067	0					
ANR	4775902	Argument	mustfilter		4775067	2					
ANR	4775903	Identifier	mustfilter		4775067	0					
ANR	4775904	ExpressionStatement	"ret = r_egg_mkvar ( egg , out , foo , 0 )"	612:2:15377:15413	4775067	9	True				
ANR	4775905	AssignmentExpression	"ret = r_egg_mkvar ( egg , out , foo , 0 )"		4775067	0		=			
ANR	4775906	Identifier	ret		4775067	0					
ANR	4775907	CallExpression	"r_egg_mkvar ( egg , out , foo , 0 )"		4775067	1					
ANR	4775908	Callee	r_egg_mkvar		4775067	0					
ANR	4775909	Identifier	r_egg_mkvar		4775067	0					
ANR	4775910	ArgumentList	egg		4775067	1					
ANR	4775911	Argument	egg		4775067	0					
ANR	4775912	Identifier	egg		4775067	0					
ANR	4775913	Argument	out		4775067	1					
ANR	4775914	Identifier	out		4775067	0					
ANR	4775915	Argument	foo		4775067	2					
ANR	4775916	Identifier	foo		4775067	0					
ANR	4775917	Argument	0		4775067	3					
ANR	4775918	PrimaryExpression	0		4775067	0					
ANR	4775919	ExpressionStatement	free ( oldstr )	613:2:15417:15430	4775067	10	True				
ANR	4775920	CallExpression	free ( oldstr )		4775067	0					
ANR	4775921	Callee	free		4775067	0					
ANR	4775922	Identifier	free		4775067	0					
ANR	4775923	ArgumentList	oldstr		4775067	1					
ANR	4775924	Argument	oldstr		4775067	0					
ANR	4775925	Identifier	oldstr		4775067	0					
ANR	4775926	ReturnStatement	return ret ;	615:1:15436:15446	4775067	8	True				
ANR	4775927	Identifier	ret		4775067	0					
ANR	4775928	ReturnType	R_API char *		4775067	1					
ANR	4775929	Identifier	r_egg_mkvar		4775067	2					
ANR	4775930	ParameterList	"REgg * egg , char * out , const char * _str , int delta"		4775067	3					
ANR	4775931	Parameter	REgg * egg	522:24:12314:12322	4775067	0	True				
ANR	4775932	ParameterType	REgg *		4775067	0					
ANR	4775933	Identifier	egg		4775067	1					
ANR	4775934	Parameter	char * out	522:35:12325:12333	4775067	1	True				
ANR	4775935	ParameterType	char *		4775067	0					
ANR	4775936	Identifier	out		4775067	1					
ANR	4775937	Parameter	const char * _str	522:46:12336:12351	4775067	2	True				
ANR	4775938	ParameterType	const char *		4775067	0					
ANR	4775939	Identifier	_str		4775067	1					
ANR	4775940	Parameter	int delta	522:64:12354:12362	4775067	3	True				
ANR	4775941	ParameterType	int		4775067	0					
ANR	4775942	Identifier	delta		4775067	1					
ANR	4775943	CFGEntryNode	ENTRY		4775067		True				
ANR	4775944	CFGExitNode	EXIT		4775067		True				
ANR	4775945	Symbol	egg		4775067						
ANR	4775946	Symbol	delta		4775067						
ANR	4775947	Symbol	strchr		4775067						
ANR	4775948	Symbol	* egg -> lang		4775067						
ANR	4775949	Symbol	strncmp		4775067						
ANR	4775950	Symbol	egg -> lang . syscalls		4775067						
ANR	4775951	Symbol	strlen		4775067						
ANR	4775952	Symbol	len		4775067						
ANR	4775953	Symbol	egg -> lang . varxs		4775067						
ANR	4775954	Symbol	qi		4775067						
ANR	4775955	Symbol	egg -> lang . stackfixed		4775067						
ANR	4775956	Symbol	egg -> lang . syscalls [ i ] . name		4775067						
ANR	4775957	Symbol	egg -> lang . stackframe		4775067						
ANR	4775958	Symbol	ret		4775067						
ANR	4775959	Symbol	strcmp		4775067						
ANR	4775960	Symbol	r_egg_mkvar		4775067						
ANR	4775961	Symbol	oldstr		4775067						
ANR	4775962	Symbol	NULL		4775067						
ANR	4775963	Symbol	egg -> lang . nargs		4775067						
ANR	4775964	Symbol	egg -> lang . callname		4775067						
ANR	4775965	Symbol	egg -> lang . attsyntax		4775067						
ANR	4775966	Symbol	skipspaces		4775067						
ANR	4775967	Symbol	str		4775067						
ANR	4775968	Symbol	* egg -> lang . syscalls		4775067						
ANR	4775969	Symbol	e -> retvar		4775067						
ANR	4775970	Symbol	e -> size		4775067						
ANR	4775971	Symbol	egg -> lang . syscalls [ i ] . arg		4775067						
ANR	4775972	Symbol	idx		4775067						
ANR	4775973	Symbol	foo		4775067						
ANR	4775974	Symbol	e -> get_ar		4775067						
ANR	4775975	Symbol	egg -> lang . dstvar		4775067						
ANR	4775976	Symbol	egg -> lang		4775067						
ANR	4775977	Symbol	egg -> remit		4775067						
ANR	4775978	Symbol	out		4775067						
ANR	4775979	Symbol	r_num_math		4775067						
ANR	4775980	Symbol	mustfilter		4775067						
ANR	4775981	Symbol	* egg		4775067						
ANR	4775982	Symbol	e -> regs		4775067						
ANR	4775983	Symbol	egg -> lang . varsize		4775067						
ANR	4775984	Symbol	* * egg		4775067						
ANR	4775985	Symbol	* str		4775067						
ANR	4775986	Symbol	_str		4775067						
ANR	4775987	Symbol	atoi		4775067						
ANR	4775988	Symbol	e		4775067						
ANR	4775989	Symbol	i		4775067						
ANR	4775990	Symbol	* e		4775067						
ANR	4775991	Symbol	q		4775067						
ANR	4775992	Symbol	* i		4775067						
ANR	4775993	Symbol	egg -> lang . nsyscalls		4775067						
ANR	4775994	Symbol	strdup		4775067						
ANR	4775995	Symbol	* q		4775067						
ANR	4775996	Symbol	* len		4775067						
ANR	4775997	Function	rcc_fun	618:0:15451:18382							
ANR	4775998	FunctionDef	"rcc_fun (REgg * egg , const char * str)"		4775997	0					
ANR	4775999	CompoundStatement		618:48:15499:18382	4775997	0					
ANR	4776000	IdentifierDeclStatement	"char * ptr , * ptr2 ;"	619:1:15502:15518	4775997	0	True				
ANR	4776001	IdentifierDecl	* ptr		4775997	0					
ANR	4776002	IdentifierDeclType	char *		4775997	0					
ANR	4776003	Identifier	ptr		4775997	1					
ANR	4776004	IdentifierDecl	* ptr2		4775997	1					
ANR	4776005	IdentifierDeclType	char *		4775997	0					
ANR	4776006	Identifier	ptr2		4775997	1					
ANR	4776007	IdentifierDeclStatement	REggEmit * e = egg -> remit ;	620:1:15521:15545	4775997	1	True				
ANR	4776008	IdentifierDecl	* e = egg -> remit		4775997	0					
ANR	4776009	IdentifierDeclType	REggEmit *		4775997	0					
ANR	4776010	Identifier	e		4775997	1					
ANR	4776011	AssignmentExpression	* e = egg -> remit		4775997	2		=			
ANR	4776012	Identifier	e		4775997	0					
ANR	4776013	PtrMemberAccess	egg -> remit		4775997	1					
ANR	4776014	Identifier	egg		4775997	0					
ANR	4776015	Identifier	remit		4775997	1					
ANR	4776016	ExpressionStatement	str = skipspaces ( str )	621:1:15548:15570	4775997	2	True				
ANR	4776017	AssignmentExpression	str = skipspaces ( str )		4775997	0		=			
ANR	4776018	Identifier	str		4775997	0					
ANR	4776019	CallExpression	skipspaces ( str )		4775997	1					
ANR	4776020	Callee	skipspaces		4775997	0					
ANR	4776021	Identifier	skipspaces		4775997	0					
ANR	4776022	ArgumentList	str		4775997	1					
ANR	4776023	Argument	str		4775997	0					
ANR	4776024	Identifier	str		4775997	0					
ANR	4776025	IfStatement	if ( CTX )		4775997	3					
ANR	4776026	Condition	CTX	622:5:15577:15579	4775997	0	True				
ANR	4776027	Identifier	CTX		4775997	0					
ANR	4776028	CompoundStatement		5:10:82:82	4775997	1					
ANR	4776029	ExpressionStatement	"ptr = strchr ( str , '=' )"	623:2:15586:15609	4775997	0	True				
ANR	4776030	AssignmentExpression	"ptr = strchr ( str , '=' )"		4775997	0		=			
ANR	4776031	Identifier	ptr		4775997	0					
ANR	4776032	CallExpression	"strchr ( str , '=' )"		4775997	1					
ANR	4776033	Callee	strchr		4775997	0					
ANR	4776034	Identifier	strchr		4775997	0					
ANR	4776035	ArgumentList	str		4775997	1					
ANR	4776036	Argument	str		4775997	0					
ANR	4776037	Identifier	str		4775997	0					
ANR	4776038	Argument	'='		4775997	1					
ANR	4776039	PrimaryExpression	'='		4775997	0					
ANR	4776040	IfStatement	if ( ptr )		4775997	1					
ANR	4776041	Condition	ptr	624:6:15617:15619	4775997	0	True				
ANR	4776042	Identifier	ptr		4775997	0					
ANR	4776043	CompoundStatement		7:11:122:122	4775997	1					
ANR	4776044	ExpressionStatement	* ptr ++ = '\\0'	625:3:15627:15640	4775997	0	True				
ANR	4776045	AssignmentExpression	* ptr ++ = '\\0'		4775997	0		=			
ANR	4776046	UnaryOperationExpression	* ptr ++		4775997	0					
ANR	4776047	UnaryOperator	*		4775997	0					
ANR	4776048	PostIncDecOperationExpression	ptr ++		4775997	1					
ANR	4776049	Identifier	ptr		4775997	0					
ANR	4776050	IncDec	++		4775997	1					
ANR	4776051	PrimaryExpression	'\\0'		4775997	1					
ANR	4776052	ExpressionStatement	free ( egg -> lang . dstvar )	626:3:15645:15668	4775997	1	True				
ANR	4776053	CallExpression	free ( egg -> lang . dstvar )		4775997	0					
ANR	4776054	Callee	free		4775997	0					
ANR	4776055	Identifier	free		4775997	0					
ANR	4776056	ArgumentList	egg -> lang . dstvar		4775997	1					
ANR	4776057	Argument	egg -> lang . dstvar		4775997	0					
ANR	4776058	MemberAccess	egg -> lang . dstvar		4775997	0					
ANR	4776059	PtrMemberAccess	egg -> lang		4775997	0					
ANR	4776060	Identifier	egg		4775997	0					
ANR	4776061	Identifier	lang		4775997	1					
ANR	4776062	Identifier	dstvar		4775997	1					
ANR	4776063	ExpressionStatement	egg -> lang . dstvar = strdup ( skipspaces ( str ) )	627:3:15673:15717	4775997	2	True				
ANR	4776064	AssignmentExpression	egg -> lang . dstvar = strdup ( skipspaces ( str ) )		4775997	0		=			
ANR	4776065	MemberAccess	egg -> lang . dstvar		4775997	0					
ANR	4776066	PtrMemberAccess	egg -> lang		4775997	0					
ANR	4776067	Identifier	egg		4775997	0					
ANR	4776068	Identifier	lang		4775997	1					
ANR	4776069	Identifier	dstvar		4775997	1					
ANR	4776070	CallExpression	strdup ( skipspaces ( str ) )		4775997	1					
ANR	4776071	Callee	strdup		4775997	0					
ANR	4776072	Identifier	strdup		4775997	0					
ANR	4776073	ArgumentList	skipspaces ( str )		4775997	1					
ANR	4776074	Argument	skipspaces ( str )		4775997	0					
ANR	4776075	CallExpression	skipspaces ( str )		4775997	0					
ANR	4776076	Callee	skipspaces		4775997	0					
ANR	4776077	Identifier	skipspaces		4775997	0					
ANR	4776078	ArgumentList	str		4775997	1					
ANR	4776079	Argument	str		4775997	0					
ANR	4776080	Identifier	str		4775997	0					
ANR	4776081	ExpressionStatement	ptr2 = ( char * ) skipspaces ( ptr )	628:3:15722:15754	4775997	3	True				
ANR	4776082	AssignmentExpression	ptr2 = ( char * ) skipspaces ( ptr )		4775997	0		=			
ANR	4776083	Identifier	ptr2		4775997	0					
ANR	4776084	CastExpression	( char * ) skipspaces ( ptr )		4775997	1					
ANR	4776085	CastTarget	char *		4775997	0					
ANR	4776086	CallExpression	skipspaces ( ptr )		4775997	1					
ANR	4776087	Callee	skipspaces		4775997	0					
ANR	4776088	Identifier	skipspaces		4775997	0					
ANR	4776089	ArgumentList	ptr		4775997	1					
ANR	4776090	Argument	ptr		4775997	0					
ANR	4776091	Identifier	ptr		4775997	0					
ANR	4776092	IfStatement	if ( * ptr2 )		4775997	4					
ANR	4776093	Condition	* ptr2	629:7:15763:15767	4775997	0	True				
ANR	4776094	UnaryOperationExpression	* ptr2		4775997	0					
ANR	4776095	UnaryOperator	*		4775997	0					
ANR	4776096	Identifier	ptr2		4775997	1					
ANR	4776097	CompoundStatement		12:14:270:270	4775997	1					
ANR	4776098	ExpressionStatement	"rcc_set_callname ( egg , skipspaces ( ptr ) )"	630:4:15776:15816	4775997	0	True				
ANR	4776099	CallExpression	"rcc_set_callname ( egg , skipspaces ( ptr ) )"		4775997	0					
ANR	4776100	Callee	rcc_set_callname		4775997	0					
ANR	4776101	Identifier	rcc_set_callname		4775997	0					
ANR	4776102	ArgumentList	egg		4775997	1					
ANR	4776103	Argument	egg		4775997	0					
ANR	4776104	Identifier	egg		4775997	0					
ANR	4776105	Argument	skipspaces ( ptr )		4775997	1					
ANR	4776106	CallExpression	skipspaces ( ptr )		4775997	0					
ANR	4776107	Callee	skipspaces		4775997	0					
ANR	4776108	Identifier	skipspaces		4775997	0					
ANR	4776109	ArgumentList	ptr		4775997	1					
ANR	4776110	Argument	ptr		4775997	0					
ANR	4776111	Identifier	ptr		4775997	0					
ANR	4776112	ElseStatement	else		4775997	0					
ANR	4776113	CompoundStatement		15:9:332:332	4775997	0					
ANR	4776114	ExpressionStatement	str = skipspaces ( str )	633:3:15837:15859	4775997	0	True				
ANR	4776115	AssignmentExpression	str = skipspaces ( str )		4775997	0		=			
ANR	4776116	Identifier	str		4775997	0					
ANR	4776117	CallExpression	skipspaces ( str )		4775997	1					
ANR	4776118	Callee	skipspaces		4775997	0					
ANR	4776119	Identifier	skipspaces		4775997	0					
ANR	4776120	ArgumentList	str		4775997	1					
ANR	4776121	Argument	str		4775997	0					
ANR	4776122	Identifier	str		4775997	0					
ANR	4776123	ExpressionStatement	"rcc_set_callname ( egg , skipspaces ( str ) )"	634:3:15864:15904	4775997	1	True				
ANR	4776124	CallExpression	"rcc_set_callname ( egg , skipspaces ( str ) )"		4775997	0					
ANR	4776125	Callee	rcc_set_callname		4775997	0					
ANR	4776126	Identifier	rcc_set_callname		4775997	0					
ANR	4776127	ArgumentList	egg		4775997	1					
ANR	4776128	Argument	egg		4775997	0					
ANR	4776129	Identifier	egg		4775997	0					
ANR	4776130	Argument	skipspaces ( str )		4775997	1					
ANR	4776131	CallExpression	skipspaces ( str )		4775997	0					
ANR	4776132	Callee	skipspaces		4775997	0					
ANR	4776133	Identifier	skipspaces		4775997	0					
ANR	4776134	ArgumentList	str		4775997	1					
ANR	4776135	Argument	str		4775997	0					
ANR	4776136	Identifier	str		4775997	0					
ANR	4776137	ExpressionStatement	"egg -> remit -> comment ( egg , ""rcc_fun %d (%s)"" , CTX , egg -> lang . callname )"	635:3:15909:15982	4775997	2	True				
ANR	4776138	CallExpression	"egg -> remit -> comment ( egg , ""rcc_fun %d (%s)"" , CTX , egg -> lang . callname )"		4775997	0					
ANR	4776139	Callee	egg -> remit -> comment		4775997	0					
ANR	4776140	PtrMemberAccess	egg -> remit -> comment		4775997	0					
ANR	4776141	PtrMemberAccess	egg -> remit		4775997	0					
ANR	4776142	Identifier	egg		4775997	0					
ANR	4776143	Identifier	remit		4775997	1					
ANR	4776144	Identifier	comment		4775997	1					
ANR	4776145	ArgumentList	egg		4775997	1					
ANR	4776146	Argument	egg		4775997	0					
ANR	4776147	Identifier	egg		4775997	0					
ANR	4776148	Argument	"""rcc_fun %d (%s)"""		4775997	1					
ANR	4776149	PrimaryExpression	"""rcc_fun %d (%s)"""		4775997	0					
ANR	4776150	Argument	CTX		4775997	2					
ANR	4776151	Identifier	CTX		4775997	0					
ANR	4776152	Argument	egg -> lang . callname		4775997	3					
ANR	4776153	MemberAccess	egg -> lang . callname		4775997	0					
ANR	4776154	PtrMemberAccess	egg -> lang		4775997	0					
ANR	4776155	Identifier	egg		4775997	0					
ANR	4776156	Identifier	lang		4775997	1					
ANR	4776157	Identifier	callname		4775997	1					
ANR	4776158	ElseStatement	else		4775997	0					
ANR	4776159	CompoundStatement		21:8:496:496	4775997	0					
ANR	4776160	ExpressionStatement	"ptr = strchr ( str , '@' )"	639:2:16000:16023	4775997	0	True				
ANR	4776161	AssignmentExpression	"ptr = strchr ( str , '@' )"		4775997	0		=			
ANR	4776162	Identifier	ptr		4775997	0					
ANR	4776163	CallExpression	"strchr ( str , '@' )"		4775997	1					
ANR	4776164	Callee	strchr		4775997	0					
ANR	4776165	Identifier	strchr		4775997	0					
ANR	4776166	ArgumentList	str		4775997	1					
ANR	4776167	Argument	str		4775997	0					
ANR	4776168	Identifier	str		4775997	0					
ANR	4776169	Argument	'@'		4775997	1					
ANR	4776170	PrimaryExpression	'@'		4775997	0					
ANR	4776171	IfStatement	if ( ptr )		4775997	1					
ANR	4776172	Condition	ptr	640:6:16031:16033	4775997	0	True				
ANR	4776173	Identifier	ptr		4775997	0					
ANR	4776174	CompoundStatement		23:11:536:536	4775997	1					
ANR	4776175	ExpressionStatement	* ptr ++ = '\\0'	641:3:16041:16054	4775997	0	True				
ANR	4776176	AssignmentExpression	* ptr ++ = '\\0'		4775997	0		=			
ANR	4776177	UnaryOperationExpression	* ptr ++		4775997	0					
ANR	4776178	UnaryOperator	*		4775997	0					
ANR	4776179	PostIncDecOperationExpression	ptr ++		4775997	1					
ANR	4776180	Identifier	ptr		4775997	0					
ANR	4776181	IncDec	++		4775997	1					
ANR	4776182	PrimaryExpression	'\\0'		4775997	1					
ANR	4776183	ExpressionStatement	egg -> lang . mode = NORMAL	642:3:16059:16082	4775997	1	True				
ANR	4776184	AssignmentExpression	egg -> lang . mode = NORMAL		4775997	0		=			
ANR	4776185	MemberAccess	egg -> lang . mode		4775997	0					
ANR	4776186	PtrMemberAccess	egg -> lang		4775997	0					
ANR	4776187	Identifier	egg		4775997	0					
ANR	4776188	Identifier	lang		4775997	1					
ANR	4776189	Identifier	mode		4775997	1					
ANR	4776190	Identifier	NORMAL		4775997	1					
ANR	4776191	IfStatement	"if ( strstr ( ptr , ""env"" ) )"		4775997	2					
ANR	4776192	Condition	"strstr ( ptr , ""env"" )"	643:7:16091:16109	4775997	0	True				
ANR	4776193	CallExpression	"strstr ( ptr , ""env"" )"		4775997	0					
ANR	4776194	Callee	strstr		4775997	0					
ANR	4776195	Identifier	strstr		4775997	0					
ANR	4776196	ArgumentList	ptr		4775997	1					
ANR	4776197	Argument	ptr		4775997	0					
ANR	4776198	Identifier	ptr		4775997	0					
ANR	4776199	Argument	"""env"""		4775997	1					
ANR	4776200	PrimaryExpression	"""env"""		4775997	0					
ANR	4776201	CompoundStatement		26:28:612:612	4775997	1					
ANR	4776202	ExpressionStatement	free ( egg -> lang . setenviron )	645:4:16157:16184	4775997	0	True				
ANR	4776203	CallExpression	free ( egg -> lang . setenviron )		4775997	0					
ANR	4776204	Callee	free		4775997	0					
ANR	4776205	Identifier	free		4775997	0					
ANR	4776206	ArgumentList	egg -> lang . setenviron		4775997	1					
ANR	4776207	Argument	egg -> lang . setenviron		4775997	0					
ANR	4776208	MemberAccess	egg -> lang . setenviron		4775997	0					
ANR	4776209	PtrMemberAccess	egg -> lang		4775997	0					
ANR	4776210	Identifier	egg		4775997	0					
ANR	4776211	Identifier	lang		4775997	1					
ANR	4776212	Identifier	setenviron		4775997	1					
ANR	4776213	ExpressionStatement	egg -> lang . setenviron = strdup ( skipspaces ( str ) )	646:4:16190:16238	4775997	1	True				
ANR	4776214	AssignmentExpression	egg -> lang . setenviron = strdup ( skipspaces ( str ) )		4775997	0		=			
ANR	4776215	MemberAccess	egg -> lang . setenviron		4775997	0					
ANR	4776216	PtrMemberAccess	egg -> lang		4775997	0					
ANR	4776217	Identifier	egg		4775997	0					
ANR	4776218	Identifier	lang		4775997	1					
ANR	4776219	Identifier	setenviron		4775997	1					
ANR	4776220	CallExpression	strdup ( skipspaces ( str ) )		4775997	1					
ANR	4776221	Callee	strdup		4775997	0					
ANR	4776222	Identifier	strdup		4775997	0					
ANR	4776223	ArgumentList	skipspaces ( str )		4775997	1					
ANR	4776224	Argument	skipspaces ( str )		4775997	0					
ANR	4776225	CallExpression	skipspaces ( str )		4775997	0					
ANR	4776226	Callee	skipspaces		4775997	0					
ANR	4776227	Identifier	skipspaces		4775997	0					
ANR	4776228	ArgumentList	str		4775997	1					
ANR	4776229	Argument	str		4775997	0					
ANR	4776230	Identifier	str		4775997	0					
ANR	4776231	ExpressionStatement	egg -> lang . slurp = 0	647:4:16244:16263	4775997	2	True				
ANR	4776232	AssignmentExpression	egg -> lang . slurp = 0		4775997	0		=			
ANR	4776233	MemberAccess	egg -> lang . slurp		4775997	0					
ANR	4776234	PtrMemberAccess	egg -> lang		4775997	0					
ANR	4776235	Identifier	egg		4775997	0					
ANR	4776236	Identifier	lang		4775997	1					
ANR	4776237	Identifier	slurp		4775997	1					
ANR	4776238	PrimaryExpression	0		4775997	1					
ANR	4776239	ElseStatement	else		4775997	0					
ANR	4776240	IfStatement	"if ( strstr ( ptr , ""fastcall"" ) )"		4775997	0					
ANR	4776241	Condition	"strstr ( ptr , ""fastcall"" )"	648:14:16279:16302	4775997	0	True				
ANR	4776242	CallExpression	"strstr ( ptr , ""fastcall"" )"		4775997	0					
ANR	4776243	Callee	strstr		4775997	0					
ANR	4776244	Identifier	strstr		4775997	0					
ANR	4776245	ArgumentList	ptr		4775997	1					
ANR	4776246	Argument	ptr		4775997	0					
ANR	4776247	Identifier	ptr		4775997	0					
ANR	4776248	Argument	"""fastcall"""		4775997	1					
ANR	4776249	PrimaryExpression	"""fastcall"""		4775997	0					
ANR	4776250	CompoundStatement		31:40:805:805	4775997	1					
ANR	4776251	ElseStatement	else		4775997	0					
ANR	4776252	IfStatement	"if ( strstr ( ptr , ""syscall"" ) )"		4775997	0					
ANR	4776253	Condition	"strstr ( ptr , ""syscall"" )"	650:14:16358:16380	4775997	0	True				
ANR	4776254	CallExpression	"strstr ( ptr , ""syscall"" )"		4775997	0					
ANR	4776255	Callee	strstr		4775997	0					
ANR	4776256	Identifier	strstr		4775997	0					
ANR	4776257	ArgumentList	ptr		4775997	1					
ANR	4776258	Argument	ptr		4775997	0					
ANR	4776259	Identifier	ptr		4775997	0					
ANR	4776260	Argument	"""syscall"""		4775997	1					
ANR	4776261	PrimaryExpression	"""syscall"""		4775997	0					
ANR	4776262	CompoundStatement		33:39:883:883	4775997	1					
ANR	4776263	IfStatement	if ( * str )		4775997	0					
ANR	4776264	Condition	* str	651:8:16393:16396	4775997	0	True				
ANR	4776265	UnaryOperationExpression	* str		4775997	0					
ANR	4776266	UnaryOperator	*		4775997	0					
ANR	4776267	Identifier	str		4775997	1					
ANR	4776268	CompoundStatement		34:14:899:899	4775997	1					
ANR	4776269	ExpressionStatement	egg -> lang . mode = SYSCALL	652:5:16406:16430	4775997	0	True				
ANR	4776270	AssignmentExpression	egg -> lang . mode = SYSCALL		4775997	0		=			
ANR	4776271	MemberAccess	egg -> lang . mode		4775997	0					
ANR	4776272	PtrMemberAccess	egg -> lang		4775997	0					
ANR	4776273	Identifier	egg		4775997	0					
ANR	4776274	Identifier	lang		4775997	1					
ANR	4776275	Identifier	mode		4775997	1					
ANR	4776276	Identifier	SYSCALL		4775997	1					
ANR	4776277	ExpressionStatement	egg -> lang . dstvar = strdup ( skipspaces ( str ) )	653:5:16437:16481	4775997	1	True				
ANR	4776278	AssignmentExpression	egg -> lang . dstvar = strdup ( skipspaces ( str ) )		4775997	0		=			
ANR	4776279	MemberAccess	egg -> lang . dstvar		4775997	0					
ANR	4776280	PtrMemberAccess	egg -> lang		4775997	0					
ANR	4776281	Identifier	egg		4775997	0					
ANR	4776282	Identifier	lang		4775997	1					
ANR	4776283	Identifier	dstvar		4775997	1					
ANR	4776284	CallExpression	strdup ( skipspaces ( str ) )		4775997	1					
ANR	4776285	Callee	strdup		4775997	0					
ANR	4776286	Identifier	strdup		4775997	0					
ANR	4776287	ArgumentList	skipspaces ( str )		4775997	1					
ANR	4776288	Argument	skipspaces ( str )		4775997	0					
ANR	4776289	CallExpression	skipspaces ( str )		4775997	0					
ANR	4776290	Callee	skipspaces		4775997	0					
ANR	4776291	Identifier	skipspaces		4775997	0					
ANR	4776292	ArgumentList	str		4775997	1					
ANR	4776293	Argument	str		4775997	0					
ANR	4776294	Identifier	str		4775997	0					
ANR	4776295	ElseStatement	else		4775997	0					
ANR	4776296	CompoundStatement		37:11:994:994	4775997	0					
ANR	4776297	ExpressionStatement	egg -> lang . mode = INLINE	655:5:16501:16524	4775997	0	True				
ANR	4776298	AssignmentExpression	egg -> lang . mode = INLINE		4775997	0		=			
ANR	4776299	MemberAccess	egg -> lang . mode		4775997	0					
ANR	4776300	PtrMemberAccess	egg -> lang		4775997	0					
ANR	4776301	Identifier	egg		4775997	0					
ANR	4776302	Identifier	lang		4775997	1					
ANR	4776303	Identifier	mode		4775997	1					
ANR	4776304	Identifier	INLINE		4775997	1					
ANR	4776305	ExpressionStatement	free ( egg -> lang . syscallbody )	656:5:16531:16559	4775997	1	True				
ANR	4776306	CallExpression	free ( egg -> lang . syscallbody )		4775997	0					
ANR	4776307	Callee	free		4775997	0					
ANR	4776308	Identifier	free		4775997	0					
ANR	4776309	ArgumentList	egg -> lang . syscallbody		4775997	1					
ANR	4776310	Argument	egg -> lang . syscallbody		4775997	0					
ANR	4776311	MemberAccess	egg -> lang . syscallbody		4775997	0					
ANR	4776312	PtrMemberAccess	egg -> lang		4775997	0					
ANR	4776313	Identifier	egg		4775997	0					
ANR	4776314	Identifier	lang		4775997	1					
ANR	4776315	Identifier	syscallbody		4775997	1					
ANR	4776316	ExpressionStatement	egg -> lang . syscallbody = malloc ( 4096 )	657:5:16566:16603	4775997	2	True				
ANR	4776317	AssignmentExpression	egg -> lang . syscallbody = malloc ( 4096 )		4775997	0		=			
ANR	4776318	MemberAccess	egg -> lang . syscallbody		4775997	0					
ANR	4776319	PtrMemberAccess	egg -> lang		4775997	0					
ANR	4776320	Identifier	egg		4775997	0					
ANR	4776321	Identifier	lang		4775997	1					
ANR	4776322	Identifier	syscallbody		4775997	1					
ANR	4776323	CallExpression	malloc ( 4096 )		4775997	1					
ANR	4776324	Callee	malloc		4775997	0					
ANR	4776325	Identifier	malloc		4775997	0					
ANR	4776326	ArgumentList	4096		4775997	1					
ANR	4776327	Argument	4096		4775997	0					
ANR	4776328	PrimaryExpression	4096		4775997	0					
ANR	4776329	ExpressionStatement	egg -> lang . dstval = egg -> lang . syscallbody	658:5:16632:16672	4775997	3	True				
ANR	4776330	AssignmentExpression	egg -> lang . dstval = egg -> lang . syscallbody		4775997	0		=			
ANR	4776331	MemberAccess	egg -> lang . dstval		4775997	0					
ANR	4776332	PtrMemberAccess	egg -> lang		4775997	0					
ANR	4776333	Identifier	egg		4775997	0					
ANR	4776334	Identifier	lang		4775997	1					
ANR	4776335	Identifier	dstval		4775997	1					
ANR	4776336	MemberAccess	egg -> lang . syscallbody		4775997	1					
ANR	4776337	PtrMemberAccess	egg -> lang		4775997	0					
ANR	4776338	Identifier	egg		4775997	0					
ANR	4776339	Identifier	lang		4775997	1					
ANR	4776340	Identifier	syscallbody		4775997	1					
ANR	4776341	ExpressionStatement	R_FREE ( egg -> lang . dstvar )	659:5:16679:16704	4775997	4	True				
ANR	4776342	CallExpression	R_FREE ( egg -> lang . dstvar )		4775997	0					
ANR	4776343	Callee	R_FREE		4775997	0					
ANR	4776344	Identifier	R_FREE		4775997	0					
ANR	4776345	ArgumentList	egg -> lang . dstvar		4775997	1					
ANR	4776346	Argument	egg -> lang . dstvar		4775997	0					
ANR	4776347	MemberAccess	egg -> lang . dstvar		4775997	0					
ANR	4776348	PtrMemberAccess	egg -> lang		4775997	0					
ANR	4776349	Identifier	egg		4775997	0					
ANR	4776350	Identifier	lang		4775997	1					
ANR	4776351	Identifier	dstvar		4775997	1					
ANR	4776352	ExpressionStatement	egg -> lang . ndstval = 0	660:5:16711:16732	4775997	5	True				
ANR	4776353	AssignmentExpression	egg -> lang . ndstval = 0		4775997	0		=			
ANR	4776354	MemberAccess	egg -> lang . ndstval		4775997	0					
ANR	4776355	PtrMemberAccess	egg -> lang		4775997	0					
ANR	4776356	Identifier	egg		4775997	0					
ANR	4776357	Identifier	lang		4775997	1					
ANR	4776358	Identifier	ndstval		4775997	1					
ANR	4776359	PrimaryExpression	0		4775997	1					
ANR	4776360	ExpressionStatement	* egg -> lang . syscallbody = '\\0'	661:5:16739:16768	4775997	6	True				
ANR	4776361	AssignmentExpression	* egg -> lang . syscallbody = '\\0'		4775997	0		=			
ANR	4776362	UnaryOperationExpression	* egg -> lang . syscallbody		4775997	0					
ANR	4776363	UnaryOperator	*		4775997	0					
ANR	4776364	MemberAccess	egg -> lang . syscallbody		4775997	1					
ANR	4776365	PtrMemberAccess	egg -> lang		4775997	0					
ANR	4776366	Identifier	egg		4775997	0					
ANR	4776367	Identifier	lang		4775997	1					
ANR	4776368	Identifier	syscallbody		4775997	1					
ANR	4776369	PrimaryExpression	'\\0'		4775997	1					
ANR	4776370	ElseStatement	else		4775997	0					
ANR	4776371	IfStatement	"if ( strstr ( ptr , ""include"" ) )"		4775997	0					
ANR	4776372	Condition	"strstr ( ptr , ""include"" )"	663:14:16790:16812	4775997	0	True				
ANR	4776373	CallExpression	"strstr ( ptr , ""include"" )"		4775997	0					
ANR	4776374	Callee	strstr		4775997	0					
ANR	4776375	Identifier	strstr		4775997	0					
ANR	4776376	ArgumentList	ptr		4775997	1					
ANR	4776377	Argument	ptr		4775997	0					
ANR	4776378	Identifier	ptr		4775997	0					
ANR	4776379	Argument	"""include"""		4775997	1					
ANR	4776380	PrimaryExpression	"""include"""		4775997	0					
ANR	4776381	CompoundStatement		46:39:1315:1315	4775997	1					
ANR	4776382	ExpressionStatement	egg -> lang . mode = INCLUDE	664:4:16821:16845	4775997	0	True				
ANR	4776383	AssignmentExpression	egg -> lang . mode = INCLUDE		4775997	0		=			
ANR	4776384	MemberAccess	egg -> lang . mode		4775997	0					
ANR	4776385	PtrMemberAccess	egg -> lang		4775997	0					
ANR	4776386	Identifier	egg		4775997	0					
ANR	4776387	Identifier	lang		4775997	1					
ANR	4776388	Identifier	mode		4775997	1					
ANR	4776389	Identifier	INCLUDE		4775997	1					
ANR	4776390	ExpressionStatement	free ( egg -> lang . includefile )	665:4:16851:16879	4775997	1	True				
ANR	4776391	CallExpression	free ( egg -> lang . includefile )		4775997	0					
ANR	4776392	Callee	free		4775997	0					
ANR	4776393	Identifier	free		4775997	0					
ANR	4776394	ArgumentList	egg -> lang . includefile		4775997	1					
ANR	4776395	Argument	egg -> lang . includefile		4775997	0					
ANR	4776396	MemberAccess	egg -> lang . includefile		4775997	0					
ANR	4776397	PtrMemberAccess	egg -> lang		4775997	0					
ANR	4776398	Identifier	egg		4775997	0					
ANR	4776399	Identifier	lang		4775997	1					
ANR	4776400	Identifier	includefile		4775997	1					
ANR	4776401	ExpressionStatement	egg -> lang . includefile = strdup ( skipspaces ( str ) )	666:4:16885:16934	4775997	2	True				
ANR	4776402	AssignmentExpression	egg -> lang . includefile = strdup ( skipspaces ( str ) )		4775997	0		=			
ANR	4776403	MemberAccess	egg -> lang . includefile		4775997	0					
ANR	4776404	PtrMemberAccess	egg -> lang		4775997	0					
ANR	4776405	Identifier	egg		4775997	0					
ANR	4776406	Identifier	lang		4775997	1					
ANR	4776407	Identifier	includefile		4775997	1					
ANR	4776408	CallExpression	strdup ( skipspaces ( str ) )		4775997	1					
ANR	4776409	Callee	strdup		4775997	0					
ANR	4776410	Identifier	strdup		4775997	0					
ANR	4776411	ArgumentList	skipspaces ( str )		4775997	1					
ANR	4776412	Argument	skipspaces ( str )		4775997	0					
ANR	4776413	CallExpression	skipspaces ( str )		4775997	0					
ANR	4776414	Callee	skipspaces		4775997	0					
ANR	4776415	Identifier	skipspaces		4775997	0					
ANR	4776416	ArgumentList	str		4775997	1					
ANR	4776417	Argument	str		4775997	0					
ANR	4776418	Identifier	str		4775997	0					
ANR	4776419	ElseStatement	else		4775997	0					
ANR	4776420	IfStatement	"if ( strstr ( ptr , ""alias"" ) )"		4775997	0					
ANR	4776421	Condition	"strstr ( ptr , ""alias"" )"	669:14:17008:17028	4775997	0	True				
ANR	4776422	CallExpression	"strstr ( ptr , ""alias"" )"		4775997	0					
ANR	4776423	Callee	strstr		4775997	0					
ANR	4776424	Identifier	strstr		4775997	0					
ANR	4776425	ArgumentList	ptr		4775997	1					
ANR	4776426	Argument	ptr		4775997	0					
ANR	4776427	Identifier	ptr		4775997	0					
ANR	4776428	Argument	"""alias"""		4775997	1					
ANR	4776429	PrimaryExpression	"""alias"""		4775997	0					
ANR	4776430	CompoundStatement		52:37:1531:1531	4775997	1					
ANR	4776431	ExpressionStatement	egg -> lang . mode = ALIAS	670:4:17037:17059	4775997	0	True				
ANR	4776432	AssignmentExpression	egg -> lang . mode = ALIAS		4775997	0		=			
ANR	4776433	MemberAccess	egg -> lang . mode		4775997	0					
ANR	4776434	PtrMemberAccess	egg -> lang		4775997	0					
ANR	4776435	Identifier	egg		4775997	0					
ANR	4776436	Identifier	lang		4775997	1					
ANR	4776437	Identifier	mode		4775997	1					
ANR	4776438	Identifier	ALIAS		4775997	1					
ANR	4776439	ExpressionStatement	ptr2 = egg -> lang . dstvar = strdup ( skipspaces ( str ) )	671:4:17065:17116	4775997	1	True				
ANR	4776440	AssignmentExpression	ptr2 = egg -> lang . dstvar = strdup ( skipspaces ( str ) )		4775997	0		=			
ANR	4776441	Identifier	ptr2		4775997	0					
ANR	4776442	AssignmentExpression	egg -> lang . dstvar = strdup ( skipspaces ( str ) )		4775997	1		=			
ANR	4776443	MemberAccess	egg -> lang . dstvar		4775997	0					
ANR	4776444	PtrMemberAccess	egg -> lang		4775997	0					
ANR	4776445	Identifier	egg		4775997	0					
ANR	4776446	Identifier	lang		4775997	1					
ANR	4776447	Identifier	dstvar		4775997	1					
ANR	4776448	CallExpression	strdup ( skipspaces ( str ) )		4775997	1					
ANR	4776449	Callee	strdup		4775997	0					
ANR	4776450	Identifier	strdup		4775997	0					
ANR	4776451	ArgumentList	skipspaces ( str )		4775997	1					
ANR	4776452	Argument	skipspaces ( str )		4775997	0					
ANR	4776453	CallExpression	skipspaces ( str )		4775997	0					
ANR	4776454	Callee	skipspaces		4775997	0					
ANR	4776455	Identifier	skipspaces		4775997	0					
ANR	4776456	ArgumentList	str		4775997	1					
ANR	4776457	Argument	str		4775997	0					
ANR	4776458	Identifier	str		4775997	0					
ANR	4776459	WhileStatement	while ( * ptr2 && ! is_space ( * ptr2 ) )		4775997	2					
ANR	4776460	Condition	* ptr2 && ! is_space ( * ptr2 )	672:11:17129:17154	4775997	0	True				
ANR	4776461	AndExpression	* ptr2 && ! is_space ( * ptr2 )		4775997	0		&&			
ANR	4776462	UnaryOperationExpression	* ptr2		4775997	0					
ANR	4776463	UnaryOperator	*		4775997	0					
ANR	4776464	Identifier	ptr2		4775997	1					
ANR	4776465	UnaryOperationExpression	! is_space ( * ptr2 )		4775997	1					
ANR	4776466	UnaryOperator	!		4775997	0					
ANR	4776467	CallExpression	is_space ( * ptr2 )		4775997	1					
ANR	4776468	Callee	is_space		4775997	0					
ANR	4776469	Identifier	is_space		4775997	0					
ANR	4776470	ArgumentList	* ptr2		4775997	1					
ANR	4776471	Argument	* ptr2		4775997	0					
ANR	4776472	UnaryOperationExpression	* ptr2		4775997	0					
ANR	4776473	UnaryOperator	*		4775997	0					
ANR	4776474	Identifier	ptr2		4775997	1					
ANR	4776475	CompoundStatement		55:39:1657:1657	4775997	1					
ANR	4776476	ExpressionStatement	ptr2 ++	673:5:17164:17170	4775997	0	True				
ANR	4776477	PostIncDecOperationExpression	ptr2 ++		4775997	0					
ANR	4776478	Identifier	ptr2		4775997	0					
ANR	4776479	IncDec	++		4775997	1					
ANR	4776480	ExpressionStatement	* ptr2 = x00	675:4:17182:17196	4775997	3	True				
ANR	4776481	AssignmentExpression	* ptr2 = x00		4775997	0		=			
ANR	4776482	UnaryOperationExpression	* ptr2		4775997	0					
ANR	4776483	UnaryOperator	*		4775997	0					
ANR	4776484	Identifier	ptr2		4775997	1					
ANR	4776485	Identifier	x00		4775997	1					
ANR	4776486	ElseStatement	else		4775997	0					
ANR	4776487	IfStatement	"if ( strstr ( ptr , ""data"" ) )"		4775997	0					
ANR	4776488	Condition	"strstr ( ptr , ""data"" )"	677:14:17266:17285	4775997	0	True				
ANR	4776489	CallExpression	"strstr ( ptr , ""data"" )"		4775997	0					
ANR	4776490	Callee	strstr		4775997	0					
ANR	4776491	Identifier	strstr		4775997	0					
ANR	4776492	ArgumentList	ptr		4775997	1					
ANR	4776493	Argument	ptr		4775997	0					
ANR	4776494	Identifier	ptr		4775997	0					
ANR	4776495	Argument	"""data"""		4775997	1					
ANR	4776496	PrimaryExpression	"""data"""		4775997	0					
ANR	4776497	CompoundStatement		60:36:1788:1788	4775997	1					
ANR	4776498	ExpressionStatement	egg -> lang . mode = DATA	678:4:17294:17315	4775997	0	True				
ANR	4776499	AssignmentExpression	egg -> lang . mode = DATA		4775997	0		=			
ANR	4776500	MemberAccess	egg -> lang . mode		4775997	0					
ANR	4776501	PtrMemberAccess	egg -> lang		4775997	0					
ANR	4776502	Identifier	egg		4775997	0					
ANR	4776503	Identifier	lang		4775997	1					
ANR	4776504	Identifier	mode		4775997	1					
ANR	4776505	Identifier	DATA		4775997	1					
ANR	4776506	ExpressionStatement	egg -> lang . ndstval = 0	679:4:17321:17342	4775997	1	True				
ANR	4776507	AssignmentExpression	egg -> lang . ndstval = 0		4775997	0		=			
ANR	4776508	MemberAccess	egg -> lang . ndstval		4775997	0					
ANR	4776509	PtrMemberAccess	egg -> lang		4775997	0					
ANR	4776510	Identifier	egg		4775997	0					
ANR	4776511	Identifier	lang		4775997	1					
ANR	4776512	Identifier	ndstval		4775997	1					
ANR	4776513	PrimaryExpression	0		4775997	1					
ANR	4776514	ExpressionStatement	egg -> lang . dstvar = strdup ( skipspaces ( str ) )	680:4:17348:17392	4775997	2	True				
ANR	4776515	AssignmentExpression	egg -> lang . dstvar = strdup ( skipspaces ( str ) )		4775997	0		=			
ANR	4776516	MemberAccess	egg -> lang . dstvar		4775997	0					
ANR	4776517	PtrMemberAccess	egg -> lang		4775997	0					
ANR	4776518	Identifier	egg		4775997	0					
ANR	4776519	Identifier	lang		4775997	1					
ANR	4776520	Identifier	dstvar		4775997	1					
ANR	4776521	CallExpression	strdup ( skipspaces ( str ) )		4775997	1					
ANR	4776522	Callee	strdup		4775997	0					
ANR	4776523	Identifier	strdup		4775997	0					
ANR	4776524	ArgumentList	skipspaces ( str )		4775997	1					
ANR	4776525	Argument	skipspaces ( str )		4775997	0					
ANR	4776526	CallExpression	skipspaces ( str )		4775997	0					
ANR	4776527	Callee	skipspaces		4775997	0					
ANR	4776528	Identifier	skipspaces		4775997	0					
ANR	4776529	ArgumentList	str		4775997	1					
ANR	4776530	Argument	str		4775997	0					
ANR	4776531	Identifier	str		4775997	0					
ANR	4776532	ExpressionStatement	egg -> lang . dstval = malloc ( 4096 )	681:4:17398:17430	4775997	3	True				
ANR	4776533	AssignmentExpression	egg -> lang . dstval = malloc ( 4096 )		4775997	0		=			
ANR	4776534	MemberAccess	egg -> lang . dstval		4775997	0					
ANR	4776535	PtrMemberAccess	egg -> lang		4775997	0					
ANR	4776536	Identifier	egg		4775997	0					
ANR	4776537	Identifier	lang		4775997	1					
ANR	4776538	Identifier	dstval		4775997	1					
ANR	4776539	CallExpression	malloc ( 4096 )		4775997	1					
ANR	4776540	Callee	malloc		4775997	0					
ANR	4776541	Identifier	malloc		4775997	0					
ANR	4776542	ArgumentList	4096		4775997	1					
ANR	4776543	Argument	4096		4775997	0					
ANR	4776544	PrimaryExpression	4096		4775997	0					
ANR	4776545	ElseStatement	else		4775997	0					
ANR	4776546	IfStatement	"if ( strstr ( ptr , ""naked"" ) )"		4775997	0					
ANR	4776547	Condition	"strstr ( ptr , ""naked"" )"	682:14:17446:17466	4775997	0	True				
ANR	4776548	CallExpression	"strstr ( ptr , ""naked"" )"		4775997	0					
ANR	4776549	Callee	strstr		4775997	0					
ANR	4776550	Identifier	strstr		4775997	0					
ANR	4776551	ArgumentList	ptr		4775997	1					
ANR	4776552	Argument	ptr		4775997	0					
ANR	4776553	Identifier	ptr		4775997	0					
ANR	4776554	Argument	"""naked"""		4775997	1					
ANR	4776555	PrimaryExpression	"""naked"""		4775997	0					
ANR	4776556	CompoundStatement		65:37:1969:1969	4775997	1					
ANR	4776557	ExpressionStatement	egg -> lang . mode = NAKED	683:4:17475:17497	4775997	0	True				
ANR	4776558	AssignmentExpression	egg -> lang . mode = NAKED		4775997	0		=			
ANR	4776559	MemberAccess	egg -> lang . mode		4775997	0					
ANR	4776560	PtrMemberAccess	egg -> lang		4775997	0					
ANR	4776561	Identifier	egg		4775997	0					
ANR	4776562	Identifier	lang		4775997	1					
ANR	4776563	Identifier	mode		4775997	1					
ANR	4776564	Identifier	NAKED		4775997	1					
ANR	4776565	ExpressionStatement	"r_egg_printf ( egg , ""%s:\\n"" , str )"	690:4:17661:17693	4775997	1	True				
ANR	4776566	CallExpression	"r_egg_printf ( egg , ""%s:\\n"" , str )"		4775997	0					
ANR	4776567	Callee	r_egg_printf		4775997	0					
ANR	4776568	Identifier	r_egg_printf		4775997	0					
ANR	4776569	ArgumentList	egg		4775997	1					
ANR	4776570	Argument	egg		4775997	0					
ANR	4776571	Identifier	egg		4775997	0					
ANR	4776572	Argument	"""%s:\\n"""		4775997	1					
ANR	4776573	PrimaryExpression	"""%s:\\n"""		4775997	0					
ANR	4776574	Argument	str		4775997	2					
ANR	4776575	Identifier	str		4775997	0					
ANR	4776576	ElseStatement	else		4775997	0					
ANR	4776577	IfStatement	"if ( strstr ( ptr , ""inline"" ) )"		4775997	0					
ANR	4776578	Condition	"strstr ( ptr , ""inline"" )"	691:14:17709:17730	4775997	0	True				
ANR	4776579	CallExpression	"strstr ( ptr , ""inline"" )"		4775997	0					
ANR	4776580	Callee	strstr		4775997	0					
ANR	4776581	Identifier	strstr		4775997	0					
ANR	4776582	ArgumentList	ptr		4775997	1					
ANR	4776583	Argument	ptr		4775997	0					
ANR	4776584	Identifier	ptr		4775997	0					
ANR	4776585	Argument	"""inline"""		4775997	1					
ANR	4776586	PrimaryExpression	"""inline"""		4775997	0					
ANR	4776587	CompoundStatement		74:38:2233:2233	4775997	1					
ANR	4776588	ExpressionStatement	egg -> lang . mode = INLINE	692:4:17739:17762	4775997	0	True				
ANR	4776589	AssignmentExpression	egg -> lang . mode = INLINE		4775997	0		=			
ANR	4776590	MemberAccess	egg -> lang . mode		4775997	0					
ANR	4776591	PtrMemberAccess	egg -> lang		4775997	0					
ANR	4776592	Identifier	egg		4775997	0					
ANR	4776593	Identifier	lang		4775997	1					
ANR	4776594	Identifier	mode		4775997	1					
ANR	4776595	Identifier	INLINE		4775997	1					
ANR	4776596	ExpressionStatement	free ( egg -> lang . dstvar )	693:4:17768:17791	4775997	1	True				
ANR	4776597	CallExpression	free ( egg -> lang . dstvar )		4775997	0					
ANR	4776598	Callee	free		4775997	0					
ANR	4776599	Identifier	free		4775997	0					
ANR	4776600	ArgumentList	egg -> lang . dstvar		4775997	1					
ANR	4776601	Argument	egg -> lang . dstvar		4775997	0					
ANR	4776602	MemberAccess	egg -> lang . dstvar		4775997	0					
ANR	4776603	PtrMemberAccess	egg -> lang		4775997	0					
ANR	4776604	Identifier	egg		4775997	0					
ANR	4776605	Identifier	lang		4775997	1					
ANR	4776606	Identifier	dstvar		4775997	1					
ANR	4776607	ExpressionStatement	egg -> lang . dstvar = strdup ( skipspaces ( str ) )	694:4:17797:17841	4775997	2	True				
ANR	4776608	AssignmentExpression	egg -> lang . dstvar = strdup ( skipspaces ( str ) )		4775997	0		=			
ANR	4776609	MemberAccess	egg -> lang . dstvar		4775997	0					
ANR	4776610	PtrMemberAccess	egg -> lang		4775997	0					
ANR	4776611	Identifier	egg		4775997	0					
ANR	4776612	Identifier	lang		4775997	1					
ANR	4776613	Identifier	dstvar		4775997	1					
ANR	4776614	CallExpression	strdup ( skipspaces ( str ) )		4775997	1					
ANR	4776615	Callee	strdup		4775997	0					
ANR	4776616	Identifier	strdup		4775997	0					
ANR	4776617	ArgumentList	skipspaces ( str )		4775997	1					
ANR	4776618	Argument	skipspaces ( str )		4775997	0					
ANR	4776619	CallExpression	skipspaces ( str )		4775997	0					
ANR	4776620	Callee	skipspaces		4775997	0					
ANR	4776621	Identifier	skipspaces		4775997	0					
ANR	4776622	ArgumentList	str		4775997	1					
ANR	4776623	Argument	str		4775997	0					
ANR	4776624	Identifier	str		4775997	0					
ANR	4776625	ExpressionStatement	egg -> lang . dstval = malloc ( 4096 )	695:4:17847:17879	4775997	3	True				
ANR	4776626	AssignmentExpression	egg -> lang . dstval = malloc ( 4096 )		4775997	0		=			
ANR	4776627	MemberAccess	egg -> lang . dstval		4775997	0					
ANR	4776628	PtrMemberAccess	egg -> lang		4775997	0					
ANR	4776629	Identifier	egg		4775997	0					
ANR	4776630	Identifier	lang		4775997	1					
ANR	4776631	Identifier	dstval		4775997	1					
ANR	4776632	CallExpression	malloc ( 4096 )		4775997	1					
ANR	4776633	Callee	malloc		4775997	0					
ANR	4776634	Identifier	malloc		4775997	0					
ANR	4776635	ArgumentList	4096		4775997	1					
ANR	4776636	Argument	4096		4775997	0					
ANR	4776637	PrimaryExpression	4096		4775997	0					
ANR	4776638	ExpressionStatement	egg -> lang . ndstval = 0	696:4:17885:17906	4775997	4	True				
ANR	4776639	AssignmentExpression	egg -> lang . ndstval = 0		4775997	0		=			
ANR	4776640	MemberAccess	egg -> lang . ndstval		4775997	0					
ANR	4776641	PtrMemberAccess	egg -> lang		4775997	0					
ANR	4776642	Identifier	egg		4775997	0					
ANR	4776643	Identifier	lang		4775997	1					
ANR	4776644	Identifier	ndstval		4775997	1					
ANR	4776645	PrimaryExpression	0		4775997	1					
ANR	4776646	ElseStatement	else		4775997	0					
ANR	4776647	CompoundStatement		80:10:2418:2418	4775997	0					
ANR	4776648	IfStatement	if ( * ptr )		4775997	0					
ANR	4776649	Condition	* ptr	699:8:17947:17950	4775997	0	True				
ANR	4776650	UnaryOperationExpression	* ptr		4775997	0					
ANR	4776651	UnaryOperator	*		4775997	0					
ANR	4776652	Identifier	ptr		4775997	1					
ANR	4776653	CompoundStatement		82:14:2453:2453	4775997	1					
ANR	4776654	ExpressionStatement	"r_egg_printf ( egg , ""\\n.%s %s\\n"" , ptr , str )"	700:5:17960:18002	4775997	0	True				
ANR	4776655	CallExpression	"r_egg_printf ( egg , ""\\n.%s %s\\n"" , ptr , str )"		4775997	0					
ANR	4776656	Callee	r_egg_printf		4775997	0					
ANR	4776657	Identifier	r_egg_printf		4775997	0					
ANR	4776658	ArgumentList	egg		4775997	1					
ANR	4776659	Argument	egg		4775997	0					
ANR	4776660	Identifier	egg		4775997	0					
ANR	4776661	Argument	"""\\n.%s %s\\n"""		4775997	1					
ANR	4776662	PrimaryExpression	"""\\n.%s %s\\n"""		4775997	0					
ANR	4776663	Argument	ptr		4775997	2					
ANR	4776664	Identifier	ptr		4775997	0					
ANR	4776665	Argument	str		4775997	3					
ANR	4776666	Identifier	str		4775997	0					
ANR	4776667	ExpressionStatement	"r_egg_printf ( egg , ""%s:\\n"" , str )"	702:4:18014:18046	4775997	1	True				
ANR	4776668	CallExpression	"r_egg_printf ( egg , ""%s:\\n"" , str )"		4775997	0					
ANR	4776669	Callee	r_egg_printf		4775997	0					
ANR	4776670	Identifier	r_egg_printf		4775997	0					
ANR	4776671	ArgumentList	egg		4775997	1					
ANR	4776672	Argument	egg		4775997	0					
ANR	4776673	Identifier	egg		4775997	0					
ANR	4776674	Argument	"""%s:\\n"""		4775997	1					
ANR	4776675	PrimaryExpression	"""%s:\\n"""		4775997	0					
ANR	4776676	Argument	str		4775997	2					
ANR	4776677	Identifier	str		4775997	0					
ANR	4776678	ElseStatement	else		4775997	0					
ANR	4776679	CompoundStatement		87:9:2562:2562	4775997	0					
ANR	4776680	IfStatement	if ( CTX > 0 )		4775997	0					
ANR	4776681	Condition	CTX > 0	706:7:18122:18128	4775997	0	True				
ANR	4776682	RelationalExpression	CTX > 0		4775997	0		>			
ANR	4776683	Identifier	CTX		4775997	0					
ANR	4776684	PrimaryExpression	0		4775997	1					
ANR	4776685	CompoundStatement		89:16:2631:2631	4775997	1					
ANR	4776686	ExpressionStatement	"eprintf ( ""LABEL %d\\n"" , CTX )"	708:4:18149:18176	4775997	0	True				
ANR	4776687	CallExpression	"eprintf ( ""LABEL %d\\n"" , CTX )"		4775997	0					
ANR	4776688	Callee	eprintf		4775997	0					
ANR	4776689	Identifier	eprintf		4775997	0					
ANR	4776690	ArgumentList	"""LABEL %d\\n"""		4775997	1					
ANR	4776691	Argument	"""LABEL %d\\n"""		4775997	0					
ANR	4776692	PrimaryExpression	"""LABEL %d\\n"""		4775997	0					
ANR	4776693	Argument	CTX		4775997	1					
ANR	4776694	Identifier	CTX		4775997	0					
ANR	4776695	ExpressionStatement	"r_egg_printf ( egg , ""\\n%s:\\n"" , str )"	709:4:18182:18216	4775997	1	True				
ANR	4776696	CallExpression	"r_egg_printf ( egg , ""\\n%s:\\n"" , str )"		4775997	0					
ANR	4776697	Callee	r_egg_printf		4775997	0					
ANR	4776698	Identifier	r_egg_printf		4775997	0					
ANR	4776699	ArgumentList	egg		4775997	1					
ANR	4776700	Argument	egg		4775997	0					
ANR	4776701	Identifier	egg		4775997	0					
ANR	4776702	Argument	"""\\n%s:\\n"""		4775997	1					
ANR	4776703	PrimaryExpression	"""\\n%s:\\n"""		4775997	0					
ANR	4776704	Argument	str		4775997	2					
ANR	4776705	Identifier	str		4775997	0					
ANR	4776706	ElseStatement	else		4775997	0					
ANR	4776707	CompoundStatement		93:10:2728:2728	4775997	0					
ANR	4776708	IfStatement	"if ( ! strcmp ( str , ""goto"" ) )"		4775997	0					
ANR	4776709	Condition	"! strcmp ( str , ""goto"" )"	711:8:18238:18258	4775997	0	True				
ANR	4776710	UnaryOperationExpression	"! strcmp ( str , ""goto"" )"		4775997	0					
ANR	4776711	UnaryOperator	!		4775997	0					
ANR	4776712	CallExpression	"strcmp ( str , ""goto"" )"		4775997	1					
ANR	4776713	Callee	strcmp		4775997	0					
ANR	4776714	Identifier	strcmp		4775997	0					
ANR	4776715	ArgumentList	str		4775997	1					
ANR	4776716	Argument	str		4775997	0					
ANR	4776717	Identifier	str		4775997	0					
ANR	4776718	Argument	"""goto"""		4775997	1					
ANR	4776719	PrimaryExpression	"""goto"""		4775997	0					
ANR	4776720	CompoundStatement		94:31:2761:2761	4775997	1					
ANR	4776721	ExpressionStatement	egg -> lang . mode = GOTO	712:5:18268:18289	4775997	0	True				
ANR	4776722	AssignmentExpression	egg -> lang . mode = GOTO		4775997	0		=			
ANR	4776723	MemberAccess	egg -> lang . mode		4775997	0					
ANR	4776724	PtrMemberAccess	egg -> lang		4775997	0					
ANR	4776725	Identifier	egg		4775997	0					
ANR	4776726	Identifier	lang		4775997	1					
ANR	4776727	Identifier	mode		4775997	1					
ANR	4776728	Identifier	GOTO		4775997	1					
ANR	4776729	ElseStatement	else		4775997	0					
ANR	4776730	CompoundStatement		96:11:2802:2802	4775997	0					
ANR	4776731	ExpressionStatement	"e -> call ( egg , str , 0 )"	715:5:18341:18362	4775997	0	True				
ANR	4776732	CallExpression	"e -> call ( egg , str , 0 )"		4775997	0					
ANR	4776733	Callee	e -> call		4775997	0					
ANR	4776734	PtrMemberAccess	e -> call		4775997	0					
ANR	4776735	Identifier	e		4775997	0					
ANR	4776736	Identifier	call		4775997	1					
ANR	4776737	ArgumentList	egg		4775997	1					
ANR	4776738	Argument	egg		4775997	0					
ANR	4776739	Identifier	egg		4775997	0					
ANR	4776740	Argument	str		4775997	1					
ANR	4776741	Identifier	str		4775997	0					
ANR	4776742	Argument	0		4775997	2					
ANR	4776743	PrimaryExpression	0		4775997	0					
ANR	4776744	ReturnType	static void		4775997	1					
ANR	4776745	Identifier	rcc_fun		4775997	2					
ANR	4776746	ParameterList	"REgg * egg , const char * str"		4775997	3					
ANR	4776747	Parameter	REgg * egg	618:20:15471:15479	4775997	0	True				
ANR	4776748	ParameterType	REgg *		4775997	0					
ANR	4776749	Identifier	egg		4775997	1					
ANR	4776750	Parameter	const char * str	618:31:15482:15496	4775997	1	True				
ANR	4776751	ParameterType	const char *		4775997	0					
ANR	4776752	Identifier	str		4775997	1					
ANR	4776753	CFGEntryNode	ENTRY		4775997		True				
ANR	4776754	CFGExitNode	EXIT		4775997		True				
ANR	4776755	Symbol	GOTO		4775997						
ANR	4776756	Symbol	egg		4775997						
ANR	4776757	Symbol	egg -> lang . setenviron		4775997						
ANR	4776758	Symbol	CTX		4775997						
ANR	4776759	Symbol	ALIAS		4775997						
ANR	4776760	Symbol	strchr		4775997						
ANR	4776761	Symbol	egg -> lang . dstvar		4775997						
ANR	4776762	Symbol	egg -> remit		4775997						
ANR	4776763	Symbol	egg -> lang		4775997						
ANR	4776764	Symbol	* egg -> lang		4775997						
ANR	4776765	Symbol	* egg		4775997						
ANR	4776766	Symbol	* egg -> lang . syscallbody		4775997						
ANR	4776767	Symbol	egg -> lang . ndstval		4775997						
ANR	4776768	Symbol	egg -> lang . dstval		4775997						
ANR	4776769	Symbol	* ptr		4775997						
ANR	4776770	Symbol	* ptr2		4775997						
ANR	4776771	Symbol	INLINE		4775997						
ANR	4776772	Symbol	* * egg		4775997						
ANR	4776773	Symbol	* str		4775997						
ANR	4776774	Symbol	INCLUDE		4775997						
ANR	4776775	Symbol	is_space		4775997						
ANR	4776776	Symbol	strcmp		4775997						
ANR	4776777	Symbol	malloc		4775997						
ANR	4776778	Symbol	egg -> lang . syscallbody		4775997						
ANR	4776779	Symbol	e		4775997						
ANR	4776780	Symbol	* ptr ++		4775997						
ANR	4776781	Symbol	egg -> lang . callname		4775997						
ANR	4776782	Symbol	skipspaces		4775997						
ANR	4776783	Symbol	egg -> lang . mode		4775997						
ANR	4776784	Symbol	ptr		4775997						
ANR	4776785	Symbol	str		4775997						
ANR	4776786	Symbol	ptr2		4775997						
ANR	4776787	Symbol	strstr		4775997						
ANR	4776788	Symbol	egg -> lang . slurp		4775997						
ANR	4776789	Symbol	egg -> lang . includefile		4775997						
ANR	4776790	Symbol	DATA		4775997						
ANR	4776791	Symbol	x00		4775997						
ANR	4776792	Symbol	strdup		4775997						
ANR	4776793	Symbol	NORMAL		4775997						
ANR	4776794	Symbol	SYSCALL		4775997						
ANR	4776795	Symbol	NAKED		4775997						
ANR	4776796	Function	shownested	723:0:18391:18567							
ANR	4776797	FunctionDef	shownested ()		4776796	0					
ANR	4776798	CompoundStatement		723:25:18416:18567	4776796	0					
ANR	4776799	IdentifierDeclStatement	int i ;	724:1:18419:18424	4776796	0	True				
ANR	4776800	IdentifierDecl	i		4776796	0					
ANR	4776801	IdentifierDeclType	int		4776796	0					
ANR	4776802	Identifier	i		4776796	1					
ANR	4776803	ExpressionStatement	"eprintf ( ""[[[NESTED %d]]] "" , context )"	725:1:18427:18464	4776796	1	True				
ANR	4776804	CallExpression	"eprintf ( ""[[[NESTED %d]]] "" , context )"		4776796	0					
ANR	4776805	Callee	eprintf		4776796	0					
ANR	4776806	Identifier	eprintf		4776796	0					
ANR	4776807	ArgumentList	"""[[[NESTED %d]]] """		4776796	1					
ANR	4776808	Argument	"""[[[NESTED %d]]] """		4776796	0					
ANR	4776809	PrimaryExpression	"""[[[NESTED %d]]] """		4776796	0					
ANR	4776810	Argument	context		4776796	1					
ANR	4776811	Identifier	context		4776796	0					
ANR	4776812	ForStatement	for ( i = 0 ; egg -> lang . nested [ i ] ; i ++ )		4776796	2					
ANR	4776813	ForInit	i = 0 ;	726:6:18472:18477	4776796	0	True				
ANR	4776814	AssignmentExpression	i = 0		4776796	0		=			
ANR	4776815	Identifier	i		4776796	0					
ANR	4776816	PrimaryExpression	0		4776796	1					
ANR	4776817	Condition	egg -> lang . nested [ i ]	726:13:18479:18497	4776796	1	True				
ANR	4776818	ArrayIndexing	egg -> lang . nested [ i ]		4776796	0					
ANR	4776819	MemberAccess	egg -> lang . nested		4776796	0					
ANR	4776820	PtrMemberAccess	egg -> lang		4776796	0					
ANR	4776821	Identifier	egg		4776796	0					
ANR	4776822	Identifier	lang		4776796	1					
ANR	4776823	Identifier	nested		4776796	1					
ANR	4776824	Identifier	i		4776796	1					
ANR	4776825	PostIncDecOperationExpression	i ++	726:34:18500:18502	4776796	2	True				
ANR	4776826	Identifier	i		4776796	0					
ANR	4776827	IncDec	++		4776796	1					
ANR	4776828	CompoundStatement		4:39:88:88	4776796	3					
ANR	4776829	ExpressionStatement	"eprintf ( ""%s "" , egg -> lang . nested [ i ] )"	727:2:18509:18545	4776796	0	True				
ANR	4776830	CallExpression	"eprintf ( ""%s "" , egg -> lang . nested [ i ] )"		4776796	0					
ANR	4776831	Callee	eprintf		4776796	0					
ANR	4776832	Identifier	eprintf		4776796	0					
ANR	4776833	ArgumentList	"""%s """		4776796	1					
ANR	4776834	Argument	"""%s """		4776796	0					
ANR	4776835	PrimaryExpression	"""%s """		4776796	0					
ANR	4776836	Argument	egg -> lang . nested [ i ]		4776796	1					
ANR	4776837	ArrayIndexing	egg -> lang . nested [ i ]		4776796	0					
ANR	4776838	MemberAccess	egg -> lang . nested		4776796	0					
ANR	4776839	PtrMemberAccess	egg -> lang		4776796	0					
ANR	4776840	Identifier	egg		4776796	0					
ANR	4776841	Identifier	lang		4776796	1					
ANR	4776842	Identifier	nested		4776796	1					
ANR	4776843	Identifier	i		4776796	1					
ANR	4776844	ExpressionStatement	"eprintf ( ""\\n"" )"	729:1:18551:18565	4776796	3	True				
ANR	4776845	CallExpression	"eprintf ( ""\\n"" )"		4776796	0					
ANR	4776846	Callee	eprintf		4776796	0					
ANR	4776847	Identifier	eprintf		4776796	0					
ANR	4776848	ArgumentList	"""\\n"""		4776796	1					
ANR	4776849	Argument	"""\\n"""		4776796	0					
ANR	4776850	PrimaryExpression	"""\\n"""		4776796	0					
ANR	4776851	ReturnType	static void		4776796	1					
ANR	4776852	Identifier	shownested		4776796	2					
ANR	4776853	ParameterList			4776796	3					
ANR	4776854	CFGEntryNode	ENTRY		4776796		True				
ANR	4776855	CFGExitNode	EXIT		4776796		True				
ANR	4776856	Symbol	* egg		4776796						
ANR	4776857	Symbol	* i		4776796						
ANR	4776858	Symbol	egg		4776796						
ANR	4776859	Symbol	egg -> lang . nested		4776796						
ANR	4776860	Symbol	context		4776796						
ANR	4776861	Symbol	i		4776796						
ANR	4776862	Symbol	* * egg		4776796						
ANR	4776863	Symbol	egg -> lang		4776796						
ANR	4776864	Symbol	* egg -> lang		4776796						
ANR	4776865	Symbol	* egg -> lang . nested		4776796						
ANR	4776866	Function	set_nested	733:0:18577:18953							
ANR	4776867	FunctionDef	"set_nested (REgg * egg , const char * s)"		4776866	0					
ANR	4776868	CompoundStatement		733:49:18626:18953	4776866	0					
ANR	4776869	IdentifierDeclStatement	int i = 0 ;	734:1:18629:18638	4776866	0	True				
ANR	4776870	IdentifierDecl	i = 0		4776866	0					
ANR	4776871	IdentifierDeclType	int		4776866	0					
ANR	4776872	Identifier	i		4776866	1					
ANR	4776873	AssignmentExpression	i = 0		4776866	2		=			
ANR	4776874	Identifier	i		4776866	0					
ANR	4776875	PrimaryExpression	0		4776866	1					
ANR	4776876	IfStatement	if ( CTX < 1 )		4776866	1					
ANR	4776877	Condition	CTX < 1	735:5:18645:18651	4776866	0	True				
ANR	4776878	RelationalExpression	CTX < 1		4776866	0		<			
ANR	4776879	Identifier	CTX		4776866	0					
ANR	4776880	PrimaryExpression	1		4776866	1					
ANR	4776881	CompoundStatement		3:14:27:27	4776866	1					
ANR	4776882	ReturnStatement	return ;	736:2:18658:18664	4776866	0	True				
ANR	4776883	ExpressionStatement	free ( egg -> lang . nested [ CTX ] )	738:1:18670:18698	4776866	2	True				
ANR	4776884	CallExpression	free ( egg -> lang . nested [ CTX ] )		4776866	0					
ANR	4776885	Callee	free		4776866	0					
ANR	4776886	Identifier	free		4776866	0					
ANR	4776887	ArgumentList	egg -> lang . nested [ CTX ]		4776866	1					
ANR	4776888	Argument	egg -> lang . nested [ CTX ]		4776866	0					
ANR	4776889	ArrayIndexing	egg -> lang . nested [ CTX ]		4776866	0					
ANR	4776890	MemberAccess	egg -> lang . nested		4776866	0					
ANR	4776891	PtrMemberAccess	egg -> lang		4776866	0					
ANR	4776892	Identifier	egg		4776866	0					
ANR	4776893	Identifier	lang		4776866	1					
ANR	4776894	Identifier	nested		4776866	1					
ANR	4776895	Identifier	CTX		4776866	1					
ANR	4776896	ExpressionStatement	egg -> lang . nested [ CTX ] = strdup ( s )	739:1:18701:18735	4776866	3	True				
ANR	4776897	AssignmentExpression	egg -> lang . nested [ CTX ] = strdup ( s )		4776866	0		=			
ANR	4776898	ArrayIndexing	egg -> lang . nested [ CTX ]		4776866	0					
ANR	4776899	MemberAccess	egg -> lang . nested		4776866	0					
ANR	4776900	PtrMemberAccess	egg -> lang		4776866	0					
ANR	4776901	Identifier	egg		4776866	0					
ANR	4776902	Identifier	lang		4776866	1					
ANR	4776903	Identifier	nested		4776866	1					
ANR	4776904	Identifier	CTX		4776866	1					
ANR	4776905	CallExpression	strdup ( s )		4776866	1					
ANR	4776906	Callee	strdup		4776866	0					
ANR	4776907	Identifier	strdup		4776866	0					
ANR	4776908	ArgumentList	s		4776866	1					
ANR	4776909	Argument	s		4776866	0					
ANR	4776910	Identifier	s		4776866	0					
ANR	4776911	ForStatement	for ( i = 1 ; i < 10 ; i ++ )		4776866	4					
ANR	4776912	ForInit	i = 1 ;	743:6:18851:18856	4776866	0	True				
ANR	4776913	AssignmentExpression	i = 1		4776866	0		=			
ANR	4776914	Identifier	i		4776866	0					
ANR	4776915	PrimaryExpression	1		4776866	1					
ANR	4776916	Condition	i < 10	743:13:18858:18863	4776866	1	True				
ANR	4776917	RelationalExpression	i < 10		4776866	0		<			
ANR	4776918	Identifier	i		4776866	0					
ANR	4776919	PrimaryExpression	10		4776866	1					
ANR	4776920	PostIncDecOperationExpression	i ++	743:21:18866:18868	4776866	2	True				
ANR	4776921	Identifier	i		4776866	0					
ANR	4776922	IncDec	++		4776866	1					
ANR	4776923	CompoundStatement		11:26:244:244	4776866	3					
ANR	4776924	ExpressionStatement	R_FREE ( egg -> lang . nested [ CTX + i ] )	745:2:18914:18948	4776866	0	True				
ANR	4776925	CallExpression	R_FREE ( egg -> lang . nested [ CTX + i ] )		4776866	0					
ANR	4776926	Callee	R_FREE		4776866	0					
ANR	4776927	Identifier	R_FREE		4776866	0					
ANR	4776928	ArgumentList	egg -> lang . nested [ CTX + i ]		4776866	1					
ANR	4776929	Argument	egg -> lang . nested [ CTX + i ]		4776866	0					
ANR	4776930	ArrayIndexing	egg -> lang . nested [ CTX + i ]		4776866	0					
ANR	4776931	MemberAccess	egg -> lang . nested		4776866	0					
ANR	4776932	PtrMemberAccess	egg -> lang		4776866	0					
ANR	4776933	Identifier	egg		4776866	0					
ANR	4776934	Identifier	lang		4776866	1					
ANR	4776935	Identifier	nested		4776866	1					
ANR	4776936	AdditiveExpression	CTX + i		4776866	1		+			
ANR	4776937	Identifier	CTX		4776866	0					
ANR	4776938	Identifier	i		4776866	1					
ANR	4776939	ReturnType	static void		4776866	1					
ANR	4776940	Identifier	set_nested		4776866	2					
ANR	4776941	ParameterList	"REgg * egg , const char * s"		4776866	3					
ANR	4776942	Parameter	REgg * egg	733:23:18600:18608	4776866	0	True				
ANR	4776943	ParameterType	REgg *		4776866	0					
ANR	4776944	Identifier	egg		4776866	1					
ANR	4776945	Parameter	const char * s	733:34:18611:18623	4776866	1	True				
ANR	4776946	ParameterType	const char *		4776866	0					
ANR	4776947	Identifier	s		4776866	1					
ANR	4776948	CFGEntryNode	ENTRY		4776866		True				
ANR	4776949	CFGExitNode	EXIT		4776866		True				
ANR	4776950	Symbol	egg		4776866						
ANR	4776951	Symbol	egg -> lang . nested		4776866						
ANR	4776952	Symbol	CTX		4776866						
ANR	4776953	Symbol	i		4776866						
ANR	4776954	Symbol	egg -> lang		4776866						
ANR	4776955	Symbol	* CTX		4776866						
ANR	4776956	Symbol	* egg -> lang . nested		4776866						
ANR	4776957	Symbol	* egg -> lang		4776866						
ANR	4776958	Symbol	* egg		4776866						
ANR	4776959	Symbol	s		4776866						
ANR	4776960	Symbol	* i		4776866						
ANR	4776961	Symbol	* * egg		4776866						
ANR	4776962	Symbol	strdup		4776866						
ANR	4776963	Function	rcc_context	749:0:18956:22707							
ANR	4776964	FunctionDef	"rcc_context (REgg * egg , int delta)"		4776963	0					
ANR	4776965	CompoundStatement		749:46:19002:22707	4776963	0					
ANR	4776966	IdentifierDeclStatement	REggEmit * emit = egg -> remit ;	750:1:19005:19032	4776963	0	True				
ANR	4776967	IdentifierDecl	* emit = egg -> remit		4776963	0					
ANR	4776968	IdentifierDeclType	REggEmit *		4776963	0					
ANR	4776969	Identifier	emit		4776963	1					
ANR	4776970	AssignmentExpression	* emit = egg -> remit		4776963	2		=			
ANR	4776971	Identifier	emit		4776963	0					
ANR	4776972	PtrMemberAccess	egg -> remit		4776963	1					
ANR	4776973	Identifier	egg		4776963	0					
ANR	4776974	Identifier	remit		4776963	1					
ANR	4776975	IdentifierDeclStatement	char str [ 64 ] ;	751:1:19035:19047	4776963	1	True				
ANR	4776976	IdentifierDecl	str [ 64 ]		4776963	0					
ANR	4776977	IdentifierDeclType	char [ 64 ]		4776963	0					
ANR	4776978	Identifier	str		4776963	1					
ANR	4776979	PrimaryExpression	64		4776963	2					
ANR	4776980	IfStatement	if ( CTX > 31 || CTX < 0 )		4776963	2					
ANR	4776981	Condition	CTX > 31 || CTX < 0	753:5:19055:19073	4776963	0	True				
ANR	4776982	OrExpression	CTX > 31 || CTX < 0		4776963	0		||			
ANR	4776983	RelationalExpression	CTX > 31		4776963	0		>			
ANR	4776984	Identifier	CTX		4776963	0					
ANR	4776985	PrimaryExpression	31		4776963	1					
ANR	4776986	RelationalExpression	CTX < 0		4776963	1		<			
ANR	4776987	Identifier	CTX		4776963	0					
ANR	4776988	PrimaryExpression	0		4776963	1					
ANR	4776989	CompoundStatement		5:26:73:73	4776963	1					
ANR	4776990	ReturnStatement	return ;	754:2:19080:19086	4776963	0	True				
ANR	4776991	IfStatement	if ( delta > 0 )		4776963	3					
ANR	4776992	Condition	delta > 0	757:5:19097:19105	4776963	0	True				
ANR	4776993	RelationalExpression	delta > 0		4776963	0		>			
ANR	4776994	Identifier	delta		4776963	0					
ANR	4776995	PrimaryExpression	0		4776963	1					
ANR	4776996	CompoundStatement		9:16:105:105	4776963	1					
ANR	4776997	ExpressionStatement	egg -> lang . nestedi [ CTX ] ++	758:2:19112:19136	4776963	0	True				
ANR	4776998	PostIncDecOperationExpression	egg -> lang . nestedi [ CTX ] ++		4776963	0					
ANR	4776999	ArrayIndexing	egg -> lang . nestedi [ CTX ]		4776963	0					
ANR	4777000	MemberAccess	egg -> lang . nestedi		4776963	0					
ANR	4777001	PtrMemberAccess	egg -> lang		4776963	0					
ANR	4777002	Identifier	egg		4776963	0					
ANR	4777003	Identifier	lang		4776963	1					
ANR	4777004	Identifier	nestedi		4776963	1					
ANR	4777005	Identifier	CTX		4776963	1					
ANR	4777006	IncDec	++		4776963	1					
ANR	4777007	ExpressionStatement	R_FREE ( egg -> lang . nested_callname [ CTX ] )	759:2:19140:19179	4776963	1	True				
ANR	4777008	CallExpression	R_FREE ( egg -> lang . nested_callname [ CTX ] )		4776963	0					
ANR	4777009	Callee	R_FREE		4776963	0					
ANR	4777010	Identifier	R_FREE		4776963	0					
ANR	4777011	ArgumentList	egg -> lang . nested_callname [ CTX ]		4776963	1					
ANR	4777012	Argument	egg -> lang . nested_callname [ CTX ]		4776963	0					
ANR	4777013	ArrayIndexing	egg -> lang . nested_callname [ CTX ]		4776963	0					
ANR	4777014	MemberAccess	egg -> lang . nested_callname		4776963	0					
ANR	4777015	PtrMemberAccess	egg -> lang		4776963	0					
ANR	4777016	Identifier	egg		4776963	0					
ANR	4777017	Identifier	lang		4776963	1					
ANR	4777018	Identifier	nested_callname		4776963	1					
ANR	4777019	Identifier	CTX		4776963	1					
ANR	4777020	IfStatement	if ( egg -> lang . callname )		4776963	2					
ANR	4777021	Condition	egg -> lang . callname	760:6:19187:19204	4776963	0	True				
ANR	4777022	MemberAccess	egg -> lang . callname		4776963	0					
ANR	4777023	PtrMemberAccess	egg -> lang		4776963	0					
ANR	4777024	Identifier	egg		4776963	0					
ANR	4777025	Identifier	lang		4776963	1					
ANR	4777026	Identifier	callname		4776963	1					
ANR	4777027	CompoundStatement		12:26:204:204	4776963	1					
ANR	4777028	ExpressionStatement	egg -> lang . nested_callname [ CTX ] = strdup ( egg -> lang . callname )	761:3:19212:19272	4776963	0	True				
ANR	4777029	AssignmentExpression	egg -> lang . nested_callname [ CTX ] = strdup ( egg -> lang . callname )		4776963	0		=			
ANR	4777030	ArrayIndexing	egg -> lang . nested_callname [ CTX ]		4776963	0					
ANR	4777031	MemberAccess	egg -> lang . nested_callname		4776963	0					
ANR	4777032	PtrMemberAccess	egg -> lang		4776963	0					
ANR	4777033	Identifier	egg		4776963	0					
ANR	4777034	Identifier	lang		4776963	1					
ANR	4777035	Identifier	nested_callname		4776963	1					
ANR	4777036	Identifier	CTX		4776963	1					
ANR	4777037	CallExpression	strdup ( egg -> lang . callname )		4776963	1					
ANR	4777038	Callee	strdup		4776963	0					
ANR	4777039	Identifier	strdup		4776963	0					
ANR	4777040	ArgumentList	egg -> lang . callname		4776963	1					
ANR	4777041	Argument	egg -> lang . callname		4776963	0					
ANR	4777042	MemberAccess	egg -> lang . callname		4776963	0					
ANR	4777043	PtrMemberAccess	egg -> lang		4776963	0					
ANR	4777044	Identifier	egg		4776963	0					
ANR	4777045	Identifier	lang		4776963	1					
ANR	4777046	Identifier	callname		4776963	1					
ANR	4777047	IfStatement	if ( egg -> lang . callname && CTX > 0 )		4776963	4					
ANR	4777048	Condition	egg -> lang . callname && CTX > 0	764:5:19286:19314	4776963	0	True				
ANR	4777049	AndExpression	egg -> lang . callname && CTX > 0		4776963	0		&&			
ANR	4777050	MemberAccess	egg -> lang . callname		4776963	0					
ANR	4777051	PtrMemberAccess	egg -> lang		4776963	0					
ANR	4777052	Identifier	egg		4776963	0					
ANR	4777053	Identifier	lang		4776963	1					
ANR	4777054	Identifier	callname		4776963	1					
ANR	4777055	RelationalExpression	CTX > 0		4776963	1		>			
ANR	4777056	Identifier	CTX		4776963	0					
ANR	4777057	PrimaryExpression	0		4776963	1					
ANR	4777058	CompoundStatement		16:36:314:314	4776963	1					
ANR	4777059	ExpressionStatement	CTX += delta	769:1:19473:19485	4776963	5	True				
ANR	4777060	AssignmentExpression	CTX += delta		4776963	0		+=			
ANR	4777061	Identifier	CTX		4776963	0					
ANR	4777062	Identifier	delta		4776963	1					
ANR	4777063	ExpressionStatement	egg -> lang . lastctxdelta = delta	770:1:19488:19518	4776963	6	True				
ANR	4777064	AssignmentExpression	egg -> lang . lastctxdelta = delta		4776963	0		=			
ANR	4777065	MemberAccess	egg -> lang . lastctxdelta		4776963	0					
ANR	4777066	PtrMemberAccess	egg -> lang		4776963	0					
ANR	4777067	Identifier	egg		4776963	0					
ANR	4777068	Identifier	lang		4776963	1					
ANR	4777069	Identifier	lastctxdelta		4776963	1					
ANR	4777070	Identifier	delta		4776963	1					
ANR	4777071	IfStatement	if ( CTX == 0 && delta < 0 )		4776963	7					
ANR	4777072	Condition	CTX == 0 && delta < 0	772:5:19526:19546	4776963	0	True				
ANR	4777073	AndExpression	CTX == 0 && delta < 0		4776963	0		&&			
ANR	4777074	EqualityExpression	CTX == 0		4776963	0		==			
ANR	4777075	Identifier	CTX		4776963	0					
ANR	4777076	PrimaryExpression	0		4776963	1					
ANR	4777077	RelationalExpression	delta < 0		4776963	1		<			
ANR	4777078	Identifier	delta		4776963	0					
ANR	4777079	PrimaryExpression	0		4776963	1					
ANR	4777080	CompoundStatement		24:28:546:546	4776963	1					
ANR	4777081	IfStatement	if ( egg -> lang . mode != NAKED )		4776963	0					
ANR	4777082	Condition	egg -> lang . mode != NAKED	773:6:19557:19579	4776963	0	True				
ANR	4777083	EqualityExpression	egg -> lang . mode != NAKED		4776963	0		!=			
ANR	4777084	MemberAccess	egg -> lang . mode		4776963	0					
ANR	4777085	PtrMemberAccess	egg -> lang		4776963	0					
ANR	4777086	Identifier	egg		4776963	0					
ANR	4777087	Identifier	lang		4776963	1					
ANR	4777088	Identifier	mode		4776963	1					
ANR	4777089	Identifier	NAKED		4776963	1					
ANR	4777090	CompoundStatement		25:31:579:579	4776963	1					
ANR	4777091	ExpressionStatement	"emit -> frame_end ( egg , egg -> lang . stackframe + egg -> lang . stackfixed , egg -> lang . nbrackets )"	774:3:19587:19674	4776963	0	True				
ANR	4777092	CallExpression	"emit -> frame_end ( egg , egg -> lang . stackframe + egg -> lang . stackfixed , egg -> lang . nbrackets )"		4776963	0					
ANR	4777093	Callee	emit -> frame_end		4776963	0					
ANR	4777094	PtrMemberAccess	emit -> frame_end		4776963	0					
ANR	4777095	Identifier	emit		4776963	0					
ANR	4777096	Identifier	frame_end		4776963	1					
ANR	4777097	ArgumentList	egg		4776963	1					
ANR	4777098	Argument	egg		4776963	0					
ANR	4777099	Identifier	egg		4776963	0					
ANR	4777100	Argument	egg -> lang . stackframe + egg -> lang . stackfixed		4776963	1					
ANR	4777101	AdditiveExpression	egg -> lang . stackframe + egg -> lang . stackfixed		4776963	0		+			
ANR	4777102	MemberAccess	egg -> lang . stackframe		4776963	0					
ANR	4777103	PtrMemberAccess	egg -> lang		4776963	0					
ANR	4777104	Identifier	egg		4776963	0					
ANR	4777105	Identifier	lang		4776963	1					
ANR	4777106	Identifier	stackframe		4776963	1					
ANR	4777107	MemberAccess	egg -> lang . stackfixed		4776963	1					
ANR	4777108	PtrMemberAccess	egg -> lang		4776963	0					
ANR	4777109	Identifier	egg		4776963	0					
ANR	4777110	Identifier	lang		4776963	1					
ANR	4777111	Identifier	stackfixed		4776963	1					
ANR	4777112	Argument	egg -> lang . nbrackets		4776963	2					
ANR	4777113	MemberAccess	egg -> lang . nbrackets		4776963	0					
ANR	4777114	PtrMemberAccess	egg -> lang		4776963	0					
ANR	4777115	Identifier	egg		4776963	0					
ANR	4777116	Identifier	lang		4776963	1					
ANR	4777117	Identifier	nbrackets		4776963	1					
ANR	4777118	IfStatement	if ( egg -> lang . mode == NORMAL )		4776963	1					
ANR	4777119	Condition	egg -> lang . mode == NORMAL	776:6:19686:19709	4776963	0	True				
ANR	4777120	EqualityExpression	egg -> lang . mode == NORMAL		4776963	0		==			
ANR	4777121	MemberAccess	egg -> lang . mode		4776963	0					
ANR	4777122	PtrMemberAccess	egg -> lang		4776963	0					
ANR	4777123	Identifier	egg		4776963	0					
ANR	4777124	Identifier	lang		4776963	1					
ANR	4777125	Identifier	mode		4776963	1					
ANR	4777126	Identifier	NORMAL		4776963	1					
ANR	4777127	CompoundStatement		28:32:709:709	4776963	1					
ANR	4777128	ExpressionStatement	egg -> lang . stackframe = 0	777:3:19801:19825	4776963	0	True				
ANR	4777129	AssignmentExpression	egg -> lang . stackframe = 0		4776963	0		=			
ANR	4777130	MemberAccess	egg -> lang . stackframe		4776963	0					
ANR	4777131	PtrMemberAccess	egg -> lang		4776963	0					
ANR	4777132	Identifier	egg		4776963	0					
ANR	4777133	Identifier	lang		4776963	1					
ANR	4777134	Identifier	stackframe		4776963	1					
ANR	4777135	PrimaryExpression	0		4776963	1					
ANR	4777136	ExpressionStatement	egg -> lang . mode = NORMAL	779:2:19833:19856	4776963	2	True				
ANR	4777137	AssignmentExpression	egg -> lang . mode = NORMAL		4776963	0		=			
ANR	4777138	MemberAccess	egg -> lang . mode		4776963	0					
ANR	4777139	PtrMemberAccess	egg -> lang		4776963	0					
ANR	4777140	Identifier	egg		4776963	0					
ANR	4777141	Identifier	lang		4776963	1					
ANR	4777142	Identifier	mode		4776963	1					
ANR	4777143	Identifier	NORMAL		4776963	1					
ANR	4777144	ElseStatement	else		4776963	0					
ANR	4777145	CompoundStatement		35:2:938:983	4776963	0					
ANR	4777146	IdentifierDeclStatement	const char * elm = skipspaces ( egg -> lang . elem ) ;	783:2:19941:19986	4776963	0	True				
ANR	4777147	IdentifierDecl	* elm = skipspaces ( egg -> lang . elem )		4776963	0					
ANR	4777148	IdentifierDeclType	const char *		4776963	0					
ANR	4777149	Identifier	elm		4776963	1					
ANR	4777150	AssignmentExpression	* elm = skipspaces ( egg -> lang . elem )		4776963	2		=			
ANR	4777151	Identifier	elm		4776963	0					
ANR	4777152	CallExpression	skipspaces ( egg -> lang . elem )		4776963	1					
ANR	4777153	Callee	skipspaces		4776963	0					
ANR	4777154	Identifier	skipspaces		4776963	0					
ANR	4777155	ArgumentList	egg -> lang . elem		4776963	1					
ANR	4777156	Argument	egg -> lang . elem		4776963	0					
ANR	4777157	MemberAccess	egg -> lang . elem		4776963	0					
ANR	4777158	PtrMemberAccess	egg -> lang		4776963	0					
ANR	4777159	Identifier	egg		4776963	0					
ANR	4777160	Identifier	lang		4776963	1					
ANR	4777161	Identifier	elem		4776963	1					
ANR	4777162	IfStatement	if ( delta < 0 && context > 0 )		4776963	1					
ANR	4777163	Condition	delta < 0 && context > 0	788:6:20113:20136	4776963	0	True				
ANR	4777164	AndExpression	delta < 0 && context > 0		4776963	0		&&			
ANR	4777165	RelationalExpression	delta < 0		4776963	0		<			
ANR	4777166	Identifier	delta		4776963	0					
ANR	4777167	PrimaryExpression	0		4776963	1					
ANR	4777168	RelationalExpression	context > 0		4776963	1		>			
ANR	4777169	Identifier	context		4776963	0					
ANR	4777170	PrimaryExpression	0		4776963	1					
ANR	4777171	CompoundStatement		40:32:1136:1136	4776963	1					
ANR	4777172	ExpressionStatement	"eprintf ( ""close bracket foo!!!\\n"" )"	789:3:20144:20178	4776963	0	True				
ANR	4777173	CallExpression	"eprintf ( ""close bracket foo!!!\\n"" )"		4776963	0					
ANR	4777174	Callee	eprintf		4776963	0					
ANR	4777175	Identifier	eprintf		4776963	0					
ANR	4777176	ArgumentList	"""close bracket foo!!!\\n"""		4776963	1					
ANR	4777177	Argument	"""close bracket foo!!!\\n"""		4776963	0					
ANR	4777178	PrimaryExpression	"""close bracket foo!!!\\n"""		4776963	0					
ANR	4777179	ExpressionStatement	shownested ( )	790:3:20183:20196	4776963	1	True				
ANR	4777180	CallExpression	shownested ( )		4776963	0					
ANR	4777181	Callee	shownested		4776963	0					
ANR	4777182	Identifier	shownested		4776963	0					
ANR	4777183	ArgumentList			4776963	1					
ANR	4777184	ExpressionStatement	cn = strdup ( egg -> lang . nested [ context - 1 ] )	791:3:20201:20244	4776963	2	True				
ANR	4777185	AssignmentExpression	cn = strdup ( egg -> lang . nested [ context - 1 ] )		4776963	0		=			
ANR	4777186	Identifier	cn		4776963	0					
ANR	4777187	CallExpression	strdup ( egg -> lang . nested [ context - 1 ] )		4776963	1					
ANR	4777188	Callee	strdup		4776963	0					
ANR	4777189	Identifier	strdup		4776963	0					
ANR	4777190	ArgumentList	egg -> lang . nested [ context - 1 ]		4776963	1					
ANR	4777191	Argument	egg -> lang . nested [ context - 1 ]		4776963	0					
ANR	4777192	ArrayIndexing	egg -> lang . nested [ context - 1 ]		4776963	0					
ANR	4777193	MemberAccess	egg -> lang . nested		4776963	0					
ANR	4777194	PtrMemberAccess	egg -> lang		4776963	0					
ANR	4777195	Identifier	egg		4776963	0					
ANR	4777196	Identifier	lang		4776963	1					
ANR	4777197	Identifier	nested		4776963	1					
ANR	4777198	AdditiveExpression	context - 1		4776963	1		-			
ANR	4777199	Identifier	context		4776963	0					
ANR	4777200	PrimaryExpression	1		4776963	1					
ANR	4777201	ExpressionStatement	"eprintf ( ""STATEMENT cn=(%s) idx=%d (%s)\\n"" , cn , context - 1 , egg -> lang . nested [ context - 1 ] )"	792:3:20249:20340	4776963	3	True				
ANR	4777202	CallExpression	"eprintf ( ""STATEMENT cn=(%s) idx=%d (%s)\\n"" , cn , context - 1 , egg -> lang . nested [ context - 1 ] )"		4776963	0					
ANR	4777203	Callee	eprintf		4776963	0					
ANR	4777204	Identifier	eprintf		4776963	0					
ANR	4777205	ArgumentList	"""STATEMENT cn=(%s) idx=%d (%s)\\n"""		4776963	1					
ANR	4777206	Argument	"""STATEMENT cn=(%s) idx=%d (%s)\\n"""		4776963	0					
ANR	4777207	PrimaryExpression	"""STATEMENT cn=(%s) idx=%d (%s)\\n"""		4776963	0					
ANR	4777208	Argument	cn		4776963	1					
ANR	4777209	Identifier	cn		4776963	0					
ANR	4777210	Argument	context - 1		4776963	2					
ANR	4777211	AdditiveExpression	context - 1		4776963	0		-			
ANR	4777212	Identifier	context		4776963	0					
ANR	4777213	PrimaryExpression	1		4776963	1					
ANR	4777214	Argument	egg -> lang . nested [ context - 1 ]		4776963	3					
ANR	4777215	ArrayIndexing	egg -> lang . nested [ context - 1 ]		4776963	0					
ANR	4777216	MemberAccess	egg -> lang . nested		4776963	0					
ANR	4777217	PtrMemberAccess	egg -> lang		4776963	0					
ANR	4777218	Identifier	egg		4776963	0					
ANR	4777219	Identifier	lang		4776963	1					
ANR	4777220	Identifier	nested		4776963	1					
ANR	4777221	AdditiveExpression	context - 1		4776963	1		-			
ANR	4777222	Identifier	context		4776963	0					
ANR	4777223	PrimaryExpression	1		4776963	1					
ANR	4777224	ExpressionStatement	"eprintf ( ""CNTXXXPUSH (%s)\\n"" , egg -> lang . ctxpush [ context - 1 ] )"	793:3:20345:20406	4776963	4	True				
ANR	4777225	CallExpression	"eprintf ( ""CNTXXXPUSH (%s)\\n"" , egg -> lang . ctxpush [ context - 1 ] )"		4776963	0					
ANR	4777226	Callee	eprintf		4776963	0					
ANR	4777227	Identifier	eprintf		4776963	0					
ANR	4777228	ArgumentList	"""CNTXXXPUSH (%s)\\n"""		4776963	1					
ANR	4777229	Argument	"""CNTXXXPUSH (%s)\\n"""		4776963	0					
ANR	4777230	PrimaryExpression	"""CNTXXXPUSH (%s)\\n"""		4776963	0					
ANR	4777231	Argument	egg -> lang . ctxpush [ context - 1 ]		4776963	1					
ANR	4777232	ArrayIndexing	egg -> lang . ctxpush [ context - 1 ]		4776963	0					
ANR	4777233	MemberAccess	egg -> lang . ctxpush		4776963	0					
ANR	4777234	PtrMemberAccess	egg -> lang		4776963	0					
ANR	4777235	Identifier	egg		4776963	0					
ANR	4777236	Identifier	lang		4776963	1					
ANR	4777237	Identifier	ctxpush		4776963	1					
ANR	4777238	AdditiveExpression	context - 1		4776963	1		-			
ANR	4777239	Identifier	context		4776963	0					
ANR	4777240	PrimaryExpression	1		4776963	1					
ANR	4777241	IfStatement	"if ( ! strcmp ( cn , ""while"" ) )"		4776963	5					
ANR	4777242	Condition	"! strcmp ( cn , ""while"" )"	795:7:20421:20441	4776963	0	True				
ANR	4777243	UnaryOperationExpression	"! strcmp ( cn , ""while"" )"		4776963	0					
ANR	4777244	UnaryOperator	!		4776963	0					
ANR	4777245	CallExpression	"strcmp ( cn , ""while"" )"		4776963	1					
ANR	4777246	Callee	strcmp		4776963	0					
ANR	4777247	Identifier	strcmp		4776963	0					
ANR	4777248	ArgumentList	cn		4776963	1					
ANR	4777249	Argument	cn		4776963	0					
ANR	4777250	Identifier	cn		4776963	0					
ANR	4777251	Argument	"""while"""		4776963	1					
ANR	4777252	PrimaryExpression	"""while"""		4776963	0					
ANR	4777253	CompoundStatement		47:30:1441:1441	4776963	1					
ANR	4777254	ExpressionStatement	"emit -> while_end ( egg , get_frame_label ( context - 1 ) )"	796:4:20450:20502	4776963	0	True				
ANR	4777255	CallExpression	"emit -> while_end ( egg , get_frame_label ( context - 1 ) )"		4776963	0					
ANR	4777256	Callee	emit -> while_end		4776963	0					
ANR	4777257	PtrMemberAccess	emit -> while_end		4776963	0					
ANR	4777258	Identifier	emit		4776963	0					
ANR	4777259	Identifier	while_end		4776963	1					
ANR	4777260	ArgumentList	egg		4776963	1					
ANR	4777261	Argument	egg		4776963	0					
ANR	4777262	Identifier	egg		4776963	0					
ANR	4777263	Argument	get_frame_label ( context - 1 )		4776963	1					
ANR	4777264	CallExpression	get_frame_label ( context - 1 )		4776963	0					
ANR	4777265	Callee	get_frame_label		4776963	0					
ANR	4777266	Identifier	get_frame_label		4776963	0					
ANR	4777267	ArgumentList	context - 1		4776963	1					
ANR	4777268	Argument	context - 1		4776963	0					
ANR	4777269	AdditiveExpression	context - 1		4776963	0		-			
ANR	4777270	Identifier	context		4776963	0					
ANR	4777271	PrimaryExpression	1		4776963	1					
ANR	4777272	ReturnStatement	return ;	799:4:20580:20586	4776963	1	True				
ANR	4777273	IfStatement	if ( egg -> lang . callname )		4776963	2					
ANR	4777274	Condition	egg -> lang . callname	807:6:20819:20836	4776963	0	True				
ANR	4777275	MemberAccess	egg -> lang . callname		4776963	0					
ANR	4777276	PtrMemberAccess	egg -> lang		4776963	0					
ANR	4777277	Identifier	egg		4776963	0					
ANR	4777278	Identifier	lang		4776963	1					
ANR	4777279	Identifier	callname		4776963	1					
ANR	4777280	CompoundStatement		62:3:1920:1939	4776963	1					
ANR	4777281	IdentifierDeclStatement	"char * b , * g , * e , * n ;"	810:3:20923:20942	4776963	0	True				
ANR	4777282	IdentifierDecl	* b		4776963	0					
ANR	4777283	IdentifierDeclType	char *		4776963	0					
ANR	4777284	Identifier	b		4776963	1					
ANR	4777285	IdentifierDecl	* g		4776963	1					
ANR	4777286	IdentifierDeclType	char *		4776963	0					
ANR	4777287	Identifier	g		4776963	1					
ANR	4777288	IdentifierDecl	* e		4776963	2					
ANR	4777289	IdentifierDeclType	char *		4776963	0					
ANR	4777290	Identifier	e		4776963	1					
ANR	4777291	IdentifierDecl	* n		4776963	3					
ANR	4777292	IdentifierDeclType	char *		4776963	0					
ANR	4777293	Identifier	n		4776963	1					
ANR	4777294	ExpressionStatement	"emit -> comment ( egg , ""cond frame %s (%s)"" , egg -> lang . callname , elm )"	811:3:20947:21013	4776963	1	True				
ANR	4777295	CallExpression	"emit -> comment ( egg , ""cond frame %s (%s)"" , egg -> lang . callname , elm )"		4776963	0					
ANR	4777296	Callee	emit -> comment		4776963	0					
ANR	4777297	PtrMemberAccess	emit -> comment		4776963	0					
ANR	4777298	Identifier	emit		4776963	0					
ANR	4777299	Identifier	comment		4776963	1					
ANR	4777300	ArgumentList	egg		4776963	1					
ANR	4777301	Argument	egg		4776963	0					
ANR	4777302	Identifier	egg		4776963	0					
ANR	4777303	Argument	"""cond frame %s (%s)"""		4776963	1					
ANR	4777304	PrimaryExpression	"""cond frame %s (%s)"""		4776963	0					
ANR	4777305	Argument	egg -> lang . callname		4776963	2					
ANR	4777306	MemberAccess	egg -> lang . callname		4776963	0					
ANR	4777307	PtrMemberAccess	egg -> lang		4776963	0					
ANR	4777308	Identifier	egg		4776963	0					
ANR	4777309	Identifier	lang		4776963	1					
ANR	4777310	Identifier	callname		4776963	1					
ANR	4777311	Argument	elm		4776963	3					
ANR	4777312	Identifier	elm		4776963	0					
ANR	4777313	IfStatement	if ( egg -> lang . conditionstr )		4776963	2					
ANR	4777314	Condition	egg -> lang . conditionstr	813:7:21064:21085	4776963	0	True				
ANR	4777315	MemberAccess	egg -> lang . conditionstr		4776963	0					
ANR	4777316	PtrMemberAccess	egg -> lang		4776963	0					
ANR	4777317	Identifier	egg		4776963	0					
ANR	4777318	Identifier	lang		4776963	1					
ANR	4777319	Identifier	conditionstr		4776963	1					
ANR	4777320	CompoundStatement		65:31:2085:2085	4776963	1					
ANR	4777321	ExpressionStatement	"b = strchr ( egg -> lang . conditionstr , '<' )"	814:4:21094:21134	4776963	0	True				
ANR	4777322	AssignmentExpression	"b = strchr ( egg -> lang . conditionstr , '<' )"		4776963	0		=			
ANR	4777323	Identifier	b		4776963	0					
ANR	4777324	CallExpression	"strchr ( egg -> lang . conditionstr , '<' )"		4776963	1					
ANR	4777325	Callee	strchr		4776963	0					
ANR	4777326	Identifier	strchr		4776963	0					
ANR	4777327	ArgumentList	egg -> lang . conditionstr		4776963	1					
ANR	4777328	Argument	egg -> lang . conditionstr		4776963	0					
ANR	4777329	MemberAccess	egg -> lang . conditionstr		4776963	0					
ANR	4777330	PtrMemberAccess	egg -> lang		4776963	0					
ANR	4777331	Identifier	egg		4776963	0					
ANR	4777332	Identifier	lang		4776963	1					
ANR	4777333	Identifier	conditionstr		4776963	1					
ANR	4777334	Argument	'<'		4776963	1					
ANR	4777335	PrimaryExpression	'<'		4776963	0					
ANR	4777336	ExpressionStatement	"g = strchr ( egg -> lang . conditionstr , '>' )"	815:4:21152:21192	4776963	1	True				
ANR	4777337	AssignmentExpression	"g = strchr ( egg -> lang . conditionstr , '>' )"		4776963	0		=			
ANR	4777338	Identifier	g		4776963	0					
ANR	4777339	CallExpression	"strchr ( egg -> lang . conditionstr , '>' )"		4776963	1					
ANR	4777340	Callee	strchr		4776963	0					
ANR	4777341	Identifier	strchr		4776963	0					
ANR	4777342	ArgumentList	egg -> lang . conditionstr		4776963	1					
ANR	4777343	Argument	egg -> lang . conditionstr		4776963	0					
ANR	4777344	MemberAccess	egg -> lang . conditionstr		4776963	0					
ANR	4777345	PtrMemberAccess	egg -> lang		4776963	0					
ANR	4777346	Identifier	egg		4776963	0					
ANR	4777347	Identifier	lang		4776963	1					
ANR	4777348	Identifier	conditionstr		4776963	1					
ANR	4777349	Argument	'>'		4776963	1					
ANR	4777350	PrimaryExpression	'>'		4776963	0					
ANR	4777351	ExpressionStatement	"e = strchr ( egg -> lang . conditionstr , '=' )"	816:4:21212:21252	4776963	2	True				
ANR	4777352	AssignmentExpression	"e = strchr ( egg -> lang . conditionstr , '=' )"		4776963	0		=			
ANR	4777353	Identifier	e		4776963	0					
ANR	4777354	CallExpression	"strchr ( egg -> lang . conditionstr , '=' )"		4776963	1					
ANR	4777355	Callee	strchr		4776963	0					
ANR	4777356	Identifier	strchr		4776963	0					
ANR	4777357	ArgumentList	egg -> lang . conditionstr		4776963	1					
ANR	4777358	Argument	egg -> lang . conditionstr		4776963	0					
ANR	4777359	MemberAccess	egg -> lang . conditionstr		4776963	0					
ANR	4777360	PtrMemberAccess	egg -> lang		4776963	0					
ANR	4777361	Identifier	egg		4776963	0					
ANR	4777362	Identifier	lang		4776963	1					
ANR	4777363	Identifier	conditionstr		4776963	1					
ANR	4777364	Argument	'='		4776963	1					
ANR	4777365	PrimaryExpression	'='		4776963	0					
ANR	4777366	ExpressionStatement	"n = strchr ( egg -> lang . conditionstr , '!' )"	817:4:21270:21310	4776963	3	True				
ANR	4777367	AssignmentExpression	"n = strchr ( egg -> lang . conditionstr , '!' )"		4776963	0		=			
ANR	4777368	Identifier	n		4776963	0					
ANR	4777369	CallExpression	"strchr ( egg -> lang . conditionstr , '!' )"		4776963	1					
ANR	4777370	Callee	strchr		4776963	0					
ANR	4777371	Identifier	strchr		4776963	0					
ANR	4777372	ArgumentList	egg -> lang . conditionstr		4776963	1					
ANR	4777373	Argument	egg -> lang . conditionstr		4776963	0					
ANR	4777374	MemberAccess	egg -> lang . conditionstr		4776963	0					
ANR	4777375	PtrMemberAccess	egg -> lang		4776963	0					
ANR	4777376	Identifier	egg		4776963	0					
ANR	4777377	Identifier	lang		4776963	1					
ANR	4777378	Identifier	conditionstr		4776963	1					
ANR	4777379	Argument	'!'		4776963	1					
ANR	4777380	PrimaryExpression	'!'		4776963	0					
ANR	4777381	ElseStatement	else		4776963	0					
ANR	4777382	CompoundStatement		70:10:2332:2332	4776963	0					
ANR	4777383	ExpressionStatement	b = g = e = n = NULL	819:4:21341:21361	4776963	0	True				
ANR	4777384	AssignmentExpression	b = g = e = n = NULL		4776963	0		=			
ANR	4777385	Identifier	b		4776963	0					
ANR	4777386	AssignmentExpression	g = e = n = NULL		4776963	1		=			
ANR	4777387	Identifier	g		4776963	0					
ANR	4777388	AssignmentExpression	e = n = NULL		4776963	1		=			
ANR	4777389	Identifier	e		4776963	0					
ANR	4777390	AssignmentExpression	n = NULL		4776963	1		=			
ANR	4777391	Identifier	n		4776963	0					
ANR	4777392	Identifier	NULL		4776963	1					
ANR	4777393	IfStatement	"if ( ! strcmp ( egg -> lang . callname , ""while"" ) )"		4776963	3					
ANR	4777394	Condition	"! strcmp ( egg -> lang . callname , ""while"" )"	821:7:21375:21411	4776963	0	True				
ANR	4777395	UnaryOperationExpression	"! strcmp ( egg -> lang . callname , ""while"" )"		4776963	0					
ANR	4777396	UnaryOperator	!		4776963	0					
ANR	4777397	CallExpression	"strcmp ( egg -> lang . callname , ""while"" )"		4776963	1					
ANR	4777398	Callee	strcmp		4776963	0					
ANR	4777399	Identifier	strcmp		4776963	0					
ANR	4777400	ArgumentList	egg -> lang . callname		4776963	1					
ANR	4777401	Argument	egg -> lang . callname		4776963	0					
ANR	4777402	MemberAccess	egg -> lang . callname		4776963	0					
ANR	4777403	PtrMemberAccess	egg -> lang		4776963	0					
ANR	4777404	Identifier	egg		4776963	0					
ANR	4777405	Identifier	lang		4776963	1					
ANR	4777406	Identifier	callname		4776963	1					
ANR	4777407	Argument	"""while"""		4776963	1					
ANR	4777408	PrimaryExpression	"""while"""		4776963	0					
ANR	4777409	CompoundStatement		74:4:2417:2430	4776963	1					
ANR	4777410	IdentifierDeclStatement	char lab [ 128 ] ;	822:4:21420:21433	4776963	0	True				
ANR	4777411	IdentifierDecl	lab [ 128 ]		4776963	0					
ANR	4777412	IdentifierDeclType	char [ 128 ]		4776963	0					
ANR	4777413	Identifier	lab		4776963	1					
ANR	4777414	PrimaryExpression	128		4776963	2					
ANR	4777415	ExpressionStatement	"sprintf ( lab , ""__begin_%d_%d_%d"" , egg -> lang . nfunctions , CTX - 1 , egg -> lang . nestedi [ CTX - 1 ] - 1 )"	823:4:21439:21540	4776963	1	True				
ANR	4777416	CallExpression	"sprintf ( lab , ""__begin_%d_%d_%d"" , egg -> lang . nfunctions , CTX - 1 , egg -> lang . nestedi [ CTX - 1 ] - 1 )"		4776963	0					
ANR	4777417	Callee	sprintf		4776963	0					
ANR	4777418	Identifier	sprintf		4776963	0					
ANR	4777419	ArgumentList	lab		4776963	1					
ANR	4777420	Argument	lab		4776963	0					
ANR	4777421	Identifier	lab		4776963	0					
ANR	4777422	Argument	"""__begin_%d_%d_%d"""		4776963	1					
ANR	4777423	PrimaryExpression	"""__begin_%d_%d_%d"""		4776963	0					
ANR	4777424	Argument	egg -> lang . nfunctions		4776963	2					
ANR	4777425	MemberAccess	egg -> lang . nfunctions		4776963	0					
ANR	4777426	PtrMemberAccess	egg -> lang		4776963	0					
ANR	4777427	Identifier	egg		4776963	0					
ANR	4777428	Identifier	lang		4776963	1					
ANR	4777429	Identifier	nfunctions		4776963	1					
ANR	4777430	Argument	CTX - 1		4776963	3					
ANR	4777431	AdditiveExpression	CTX - 1		4776963	0		-			
ANR	4777432	Identifier	CTX		4776963	0					
ANR	4777433	PrimaryExpression	1		4776963	1					
ANR	4777434	Argument	egg -> lang . nestedi [ CTX - 1 ] - 1		4776963	4					
ANR	4777435	AdditiveExpression	egg -> lang . nestedi [ CTX - 1 ] - 1		4776963	0		-			
ANR	4777436	ArrayIndexing	egg -> lang . nestedi [ CTX - 1 ]		4776963	0					
ANR	4777437	MemberAccess	egg -> lang . nestedi		4776963	0					
ANR	4777438	PtrMemberAccess	egg -> lang		4776963	0					
ANR	4777439	Identifier	egg		4776963	0					
ANR	4777440	Identifier	lang		4776963	1					
ANR	4777441	Identifier	nestedi		4776963	1					
ANR	4777442	AdditiveExpression	CTX - 1		4776963	1		-			
ANR	4777443	Identifier	CTX		4776963	0					
ANR	4777444	PrimaryExpression	1		4776963	1					
ANR	4777445	PrimaryExpression	1		4776963	1					
ANR	4777446	ExpressionStatement	"emit -> get_while_end ( egg , str , egg -> lang . ctxpush [ CTX - 1 ] , lab )"	827:4:21637:21700	4776963	2	True				
ANR	4777447	CallExpression	"emit -> get_while_end ( egg , str , egg -> lang . ctxpush [ CTX - 1 ] , lab )"		4776963	0					
ANR	4777448	Callee	emit -> get_while_end		4776963	0					
ANR	4777449	PtrMemberAccess	emit -> get_while_end		4776963	0					
ANR	4777450	Identifier	emit		4776963	0					
ANR	4777451	Identifier	get_while_end		4776963	1					
ANR	4777452	ArgumentList	egg		4776963	1					
ANR	4777453	Argument	egg		4776963	0					
ANR	4777454	Identifier	egg		4776963	0					
ANR	4777455	Argument	str		4776963	1					
ANR	4777456	Identifier	str		4776963	0					
ANR	4777457	Argument	egg -> lang . ctxpush [ CTX - 1 ]		4776963	2					
ANR	4777458	ArrayIndexing	egg -> lang . ctxpush [ CTX - 1 ]		4776963	0					
ANR	4777459	MemberAccess	egg -> lang . ctxpush		4776963	0					
ANR	4777460	PtrMemberAccess	egg -> lang		4776963	0					
ANR	4777461	Identifier	egg		4776963	0					
ANR	4777462	Identifier	lang		4776963	1					
ANR	4777463	Identifier	ctxpush		4776963	1					
ANR	4777464	AdditiveExpression	CTX - 1		4776963	1		-			
ANR	4777465	Identifier	CTX		4776963	0					
ANR	4777466	PrimaryExpression	1		4776963	1					
ANR	4777467	Argument	lab		4776963	3					
ANR	4777468	Identifier	lab		4776963	0					
ANR	4777469	IfStatement	if ( delta > 0 )		4776963	3					
ANR	4777470	Condition	delta > 0	832:8:21921:21929	4776963	0	True				
ANR	4777471	RelationalExpression	delta > 0		4776963	0		>			
ANR	4777472	Identifier	delta		4776963	0					
ANR	4777473	PrimaryExpression	0		4776963	1					
ANR	4777474	CompoundStatement		84:19:2929:2929	4776963	1					
ANR	4777475	ExpressionStatement	"set_nested ( egg , str )"	833:5:21939:21960	4776963	0	True				
ANR	4777476	CallExpression	"set_nested ( egg , str )"		4776963	0					
ANR	4777477	Callee	set_nested		4776963	0					
ANR	4777478	Identifier	set_nested		4776963	0					
ANR	4777479	ArgumentList	egg		4776963	1					
ANR	4777480	Argument	egg		4776963	0					
ANR	4777481	Identifier	egg		4776963	0					
ANR	4777482	Argument	str		4776963	1					
ANR	4777483	Identifier	str		4776963	0					
ANR	4777484	ExpressionStatement	"rcc_set_callname ( egg , ""if"" )"	835:4:21972:22000	4776963	4	True				
ANR	4777485	CallExpression	"rcc_set_callname ( egg , ""if"" )"		4776963	0					
ANR	4777486	Callee	rcc_set_callname		4776963	0					
ANR	4777487	Identifier	rcc_set_callname		4776963	0					
ANR	4777488	ArgumentList	egg		4776963	1					
ANR	4777489	Argument	egg		4776963	0					
ANR	4777490	Identifier	egg		4776963	0					
ANR	4777491	Argument	"""if"""		4776963	1					
ANR	4777492	PrimaryExpression	"""if"""		4776963	0					
ANR	4777493	IfStatement	"if ( ! strcmp ( egg -> lang . callname , ""if"" ) )"		4776963	4					
ANR	4777494	Condition	"! strcmp ( egg -> lang . callname , ""if"" )"	837:7:22033:22066	4776963	0	True				
ANR	4777495	UnaryOperationExpression	"! strcmp ( egg -> lang . callname , ""if"" )"		4776963	0					
ANR	4777496	UnaryOperator	!		4776963	0					
ANR	4777497	CallExpression	"strcmp ( egg -> lang . callname , ""if"" )"		4776963	1					
ANR	4777498	Callee	strcmp		4776963	0					
ANR	4777499	Identifier	strcmp		4776963	0					
ANR	4777500	ArgumentList	egg -> lang . callname		4776963	1					
ANR	4777501	Argument	egg -> lang . callname		4776963	0					
ANR	4777502	MemberAccess	egg -> lang . callname		4776963	0					
ANR	4777503	PtrMemberAccess	egg -> lang		4776963	0					
ANR	4777504	Identifier	egg		4776963	0					
ANR	4777505	Identifier	lang		4776963	1					
ANR	4777506	Identifier	callname		4776963	1					
ANR	4777507	Argument	"""if"""		4776963	1					
ANR	4777508	PrimaryExpression	"""if"""		4776963	0					
ANR	4777509	CompoundStatement		89:43:3066:3066	4776963	1					
ANR	4777510	ExpressionStatement	"sprintf ( str , ""__end_%d_%d_%d"" , egg -> lang . nfunctions , CTX - 1 , egg -> lang . nestedi [ CTX - 1 ] - 1 )"	844:4:22352:22446	4776963	0	True				
ANR	4777511	CallExpression	"sprintf ( str , ""__end_%d_%d_%d"" , egg -> lang . nfunctions , CTX - 1 , egg -> lang . nestedi [ CTX - 1 ] - 1 )"		4776963	0					
ANR	4777512	Callee	sprintf		4776963	0					
ANR	4777513	Identifier	sprintf		4776963	0					
ANR	4777514	ArgumentList	str		4776963	1					
ANR	4777515	Argument	str		4776963	0					
ANR	4777516	Identifier	str		4776963	0					
ANR	4777517	Argument	"""__end_%d_%d_%d"""		4776963	1					
ANR	4777518	PrimaryExpression	"""__end_%d_%d_%d"""		4776963	0					
ANR	4777519	Argument	egg -> lang . nfunctions		4776963	2					
ANR	4777520	MemberAccess	egg -> lang . nfunctions		4776963	0					
ANR	4777521	PtrMemberAccess	egg -> lang		4776963	0					
ANR	4777522	Identifier	egg		4776963	0					
ANR	4777523	Identifier	lang		4776963	1					
ANR	4777524	Identifier	nfunctions		4776963	1					
ANR	4777525	Argument	CTX - 1		4776963	3					
ANR	4777526	AdditiveExpression	CTX - 1		4776963	0		-			
ANR	4777527	Identifier	CTX		4776963	0					
ANR	4777528	PrimaryExpression	1		4776963	1					
ANR	4777529	Argument	egg -> lang . nestedi [ CTX - 1 ] - 1		4776963	4					
ANR	4777530	AdditiveExpression	egg -> lang . nestedi [ CTX - 1 ] - 1		4776963	0		-			
ANR	4777531	ArrayIndexing	egg -> lang . nestedi [ CTX - 1 ]		4776963	0					
ANR	4777532	MemberAccess	egg -> lang . nestedi		4776963	0					
ANR	4777533	PtrMemberAccess	egg -> lang		4776963	0					
ANR	4777534	Identifier	egg		4776963	0					
ANR	4777535	Identifier	lang		4776963	1					
ANR	4777536	Identifier	nestedi		4776963	1					
ANR	4777537	AdditiveExpression	CTX - 1		4776963	1		-			
ANR	4777538	Identifier	CTX		4776963	0					
ANR	4777539	PrimaryExpression	1		4776963	1					
ANR	4777540	PrimaryExpression	1		4776963	1					
ANR	4777541	ExpressionStatement	"emit -> branch ( egg , b , g , e , n , egg -> lang . varsize , str )"	845:4:22452:22506	4776963	1	True				
ANR	4777542	CallExpression	"emit -> branch ( egg , b , g , e , n , egg -> lang . varsize , str )"		4776963	0					
ANR	4777543	Callee	emit -> branch		4776963	0					
ANR	4777544	PtrMemberAccess	emit -> branch		4776963	0					
ANR	4777545	Identifier	emit		4776963	0					
ANR	4777546	Identifier	branch		4776963	1					
ANR	4777547	ArgumentList	egg		4776963	1					
ANR	4777548	Argument	egg		4776963	0					
ANR	4777549	Identifier	egg		4776963	0					
ANR	4777550	Argument	b		4776963	1					
ANR	4777551	Identifier	b		4776963	0					
ANR	4777552	Argument	g		4776963	2					
ANR	4777553	Identifier	g		4776963	0					
ANR	4777554	Argument	e		4776963	3					
ANR	4777555	Identifier	e		4776963	0					
ANR	4777556	Argument	n		4776963	4					
ANR	4777557	Identifier	n		4776963	0					
ANR	4777558	Argument	egg -> lang . varsize		4776963	5					
ANR	4777559	MemberAccess	egg -> lang . varsize		4776963	0					
ANR	4777560	PtrMemberAccess	egg -> lang		4776963	0					
ANR	4777561	Identifier	egg		4776963	0					
ANR	4777562	Identifier	lang		4776963	1					
ANR	4777563	Identifier	varsize		4776963	1					
ANR	4777564	Argument	str		4776963	6					
ANR	4777565	Identifier	str		4776963	0					
ANR	4777566	IfStatement	if ( CTX > 0 )		4776963	2					
ANR	4777567	Condition	CTX > 0	846:8:22516:22522	4776963	0	True				
ANR	4777568	RelationalExpression	CTX > 0		4776963	0		>			
ANR	4777569	Identifier	CTX		4776963	0					
ANR	4777570	PrimaryExpression	0		4776963	1					
ANR	4777571	CompoundStatement		98:17:3522:3522	4776963	1					
ANR	4777572	ExpressionStatement	rcc_reset_callname ( egg )	849:4:22555:22579	4776963	3	True				
ANR	4777573	CallExpression	rcc_reset_callname ( egg )		4776963	0					
ANR	4777574	Callee	rcc_reset_callname		4776963	0					
ANR	4777575	Identifier	rcc_reset_callname		4776963	0					
ANR	4777576	ArgumentList	egg		4776963	1					
ANR	4777577	Argument	egg		4776963	0					
ANR	4777578	Identifier	egg		4776963	0					
ANR	4777579	ExpressionStatement	R_FREE ( egg -> lang . conditionstr )	850:4:22585:22616	4776963	4	True				
ANR	4777580	CallExpression	R_FREE ( egg -> lang . conditionstr )		4776963	0					
ANR	4777581	Callee	R_FREE		4776963	0					
ANR	4777582	Identifier	R_FREE		4776963	0					
ANR	4777583	ArgumentList	egg -> lang . conditionstr		4776963	1					
ANR	4777584	Argument	egg -> lang . conditionstr		4776963	0					
ANR	4777585	MemberAccess	egg -> lang . conditionstr		4776963	0					
ANR	4777586	PtrMemberAccess	egg -> lang		4776963	0					
ANR	4777587	Identifier	egg		4776963	0					
ANR	4777588	Identifier	lang		4776963	1					
ANR	4777589	Identifier	conditionstr		4776963	1					
ANR	4777590	ReturnType	static void		4776963	1					
ANR	4777591	Identifier	rcc_context		4776963	2					
ANR	4777592	ParameterList	"REgg * egg , int delta"		4776963	3					
ANR	4777593	Parameter	REgg * egg	749:24:18980:18988	4776963	0	True				
ANR	4777594	ParameterType	REgg *		4776963	0					
ANR	4777595	Identifier	egg		4776963	1					
ANR	4777596	Parameter	int delta	749:35:18991:18999	4776963	1	True				
ANR	4777597	ParameterType	int		4776963	0					
ANR	4777598	Identifier	delta		4776963	1					
ANR	4777599	CFGEntryNode	ENTRY		4776963		True				
ANR	4777600	CFGExitNode	EXIT		4776963		True				
ANR	4777601	Symbol	egg		4776963						
ANR	4777602	Symbol	CTX		4776963						
ANR	4777603	Symbol	egg -> lang . elem		4776963						
ANR	4777604	Symbol	egg -> lang . ctxpush		4776963						
ANR	4777605	Symbol	delta		4776963						
ANR	4777606	Symbol	strchr		4776963						
ANR	4777607	Symbol	egg -> lang . lastctxdelta		4776963						
ANR	4777608	Symbol	lab		4776963						
ANR	4777609	Symbol	egg -> remit		4776963						
ANR	4777610	Symbol	egg -> lang		4776963						
ANR	4777611	Symbol	* CTX		4776963						
ANR	4777612	Symbol	* egg -> lang		4776963						
ANR	4777613	Symbol	* egg -> lang . nested		4776963						
ANR	4777614	Symbol	* egg		4776963						
ANR	4777615	Symbol	* egg -> lang . nestedi		4776963						
ANR	4777616	Symbol	egg -> lang . varsize		4776963						
ANR	4777617	Symbol	context		4776963						
ANR	4777618	Symbol	* * egg		4776963						
ANR	4777619	Symbol	egg -> lang . stackfixed		4776963						
ANR	4777620	Symbol	egg -> lang . stackframe		4776963						
ANR	4777621	Symbol	strcmp		4776963						
ANR	4777622	Symbol	b		4776963						
ANR	4777623	Symbol	* egg -> lang . nested_callname		4776963						
ANR	4777624	Symbol	egg -> lang . nested_callname		4776963						
ANR	4777625	Symbol	NULL		4776963						
ANR	4777626	Symbol	egg -> lang . nested		4776963						
ANR	4777627	Symbol	e		4776963						
ANR	4777628	Symbol	elm		4776963						
ANR	4777629	Symbol	g		4776963						
ANR	4777630	Symbol	egg -> lang . nbrackets		4776963						
ANR	4777631	Symbol	egg -> lang . nfunctions		4776963						
ANR	4777632	Symbol	egg -> lang . callname		4776963						
ANR	4777633	Symbol	* egg -> lang . ctxpush		4776963						
ANR	4777634	Symbol	cn		4776963						
ANR	4777635	Symbol	egg -> lang . mode		4776963						
ANR	4777636	Symbol	skipspaces		4776963						
ANR	4777637	Symbol	* context		4776963						
ANR	4777638	Symbol	n		4776963						
ANR	4777639	Symbol	str		4776963						
ANR	4777640	Symbol	egg -> lang . conditionstr		4776963						
ANR	4777641	Symbol	strdup		4776963						
ANR	4777642	Symbol	emit		4776963						
ANR	4777643	Symbol	NAKED		4776963						
ANR	4777644	Symbol	NORMAL		4776963						
ANR	4777645	Symbol	egg -> lang . nestedi		4776963						
ANR	4777646	Symbol	get_frame_label		4776963						
ANR	4777647	Function	parsedatachar	856:0:22710:24394							
ANR	4777648	FunctionDef	"parsedatachar (REgg * egg , char c)"		4777647	0					
ANR	4777649	CompoundStatement		856:44:22754:24394	4777647	0					
ANR	4777650	IdentifierDeclStatement	char * str ;	857:1:22757:22766	4777647	0	True				
ANR	4777651	IdentifierDecl	* str		4777647	0					
ANR	4777652	IdentifierDeclType	char *		4777647	0					
ANR	4777653	Identifier	str		4777647	1					
ANR	4777654	IdentifierDeclStatement	"int i , j ;"	858:1:22769:22777	4777647	1	True				
ANR	4777655	IdentifierDecl	i		4777647	0					
ANR	4777656	IdentifierDeclType	int		4777647	0					
ANR	4777657	Identifier	i		4777647	1					
ANR	4777658	IdentifierDecl	j		4777647	1					
ANR	4777659	IdentifierDeclType	int		4777647	0					
ANR	4777660	Identifier	j		4777647	1					
ANR	4777661	IfStatement	if ( ! egg -> lang . dstval )		4777647	2					
ANR	4777662	Condition	! egg -> lang . dstval	860:5:22785:22801	4777647	0	True				
ANR	4777663	UnaryOperationExpression	! egg -> lang . dstval		4777647	0					
ANR	4777664	UnaryOperator	!		4777647	0					
ANR	4777665	MemberAccess	egg -> lang . dstval		4777647	1					
ANR	4777666	PtrMemberAccess	egg -> lang		4777647	0					
ANR	4777667	Identifier	egg		4777647	0					
ANR	4777668	Identifier	lang		4777647	1					
ANR	4777669	Identifier	dstval		4777647	1					
ANR	4777670	CompoundStatement		5:24:49:49	4777647	1					
ANR	4777671	ReturnStatement	return 0 ;	861:2:22808:22816	4777647	0	True				
ANR	4777672	PrimaryExpression	0		4777647	0					
ANR	4777673	IfStatement	if ( c == '{' )		4777647	3					
ANR	4777674	Condition	c == '{'	864:5:22848:22855	4777647	0	True				
ANR	4777675	EqualityExpression	c == '{'		4777647	0		==			
ANR	4777676	Identifier	c		4777647	0					
ANR	4777677	PrimaryExpression	'{'		4777647	1					
ANR	4777678	CompoundStatement		9:15:103:103	4777647	1					
ANR	4777679	ExpressionStatement	"rcc_context ( egg , 1 )"	865:2:22889:22909	4777647	0	True				
ANR	4777680	CallExpression	"rcc_context ( egg , 1 )"		4777647	0					
ANR	4777681	Callee	rcc_context		4777647	0					
ANR	4777682	Identifier	rcc_context		4777647	0					
ANR	4777683	ArgumentList	egg		4777647	1					
ANR	4777684	Argument	egg		4777647	0					
ANR	4777685	Identifier	egg		4777647	0					
ANR	4777686	Argument	1		4777647	1					
ANR	4777687	PrimaryExpression	1		4777647	0					
ANR	4777688	IfStatement	if ( ++ ( egg -> lang . inlinectr ) == 1 )		4777647	1					
ANR	4777689	Condition	++ ( egg -> lang . inlinectr ) == 1	866:6:22917:22944	4777647	0	True				
ANR	4777690	EqualityExpression	++ ( egg -> lang . inlinectr ) == 1		4777647	0		==			
ANR	4777691	UnaryExpression	++ ( egg -> lang . inlinectr )		4777647	0					
ANR	4777692	IncDec	++		4777647	0					
ANR	4777693	MemberAccess	egg -> lang . inlinectr		4777647	1					
ANR	4777694	PtrMemberAccess	egg -> lang		4777647	0					
ANR	4777695	Identifier	egg		4777647	0					
ANR	4777696	Identifier	lang		4777647	1					
ANR	4777697	Identifier	inlinectr		4777647	1					
ANR	4777698	PrimaryExpression	1		4777647	1					
ANR	4777699	CompoundStatement		11:36:192:192	4777647	1					
ANR	4777700	ReturnStatement	return egg -> lang . ndstval = 0 ;	867:3:22952:22980	4777647	0	True				
ANR	4777701	AssignmentExpression	egg -> lang . ndstval = 0		4777647	0		=			
ANR	4777702	MemberAccess	egg -> lang . ndstval		4777647	0					
ANR	4777703	PtrMemberAccess	egg -> lang		4777647	0					
ANR	4777704	Identifier	egg		4777647	0					
ANR	4777705	Identifier	lang		4777647	1					
ANR	4777706	Identifier	ndstval		4777647	1					
ANR	4777707	PrimaryExpression	0		4777647	1					
ANR	4777708	ElseStatement	else		4777647	0					
ANR	4777709	IfStatement	if ( egg -> lang . inlinectr == 0 )		4777647	0					
ANR	4777710	Condition	egg -> lang . inlinectr == 0	869:12:22998:23021	4777647	0	True				
ANR	4777711	EqualityExpression	egg -> lang . inlinectr == 0		4777647	0		==			
ANR	4777712	MemberAccess	egg -> lang . inlinectr		4777647	0					
ANR	4777713	PtrMemberAccess	egg -> lang		4777647	0					
ANR	4777714	Identifier	egg		4777647	0					
ANR	4777715	Identifier	lang		4777647	1					
ANR	4777716	Identifier	inlinectr		4777647	1					
ANR	4777717	PrimaryExpression	0		4777647	1					
ANR	4777718	CompoundStatement		14:38:269:269	4777647	1					
ANR	4777719	IfStatement	if ( c == ')' )		4777647	0					
ANR	4777720	Condition	c == ')'	871:6:23096:23103	4777647	0	True				
ANR	4777721	EqualityExpression	c == ')'		4777647	0		==			
ANR	4777722	Identifier	c		4777647	0					
ANR	4777723	PrimaryExpression	')'		4777647	1					
ANR	4777724	CompoundStatement		16:16:351:351	4777647	1					
ANR	4777725	ExpressionStatement	egg -> lang . stackframe = atoi ( egg -> lang . dstval )	872:3:23111:23157	4777647	0	True				
ANR	4777726	AssignmentExpression	egg -> lang . stackframe = atoi ( egg -> lang . dstval )		4777647	0		=			
ANR	4777727	MemberAccess	egg -> lang . stackframe		4777647	0					
ANR	4777728	PtrMemberAccess	egg -> lang		4777647	0					
ANR	4777729	Identifier	egg		4777647	0					
ANR	4777730	Identifier	lang		4777647	1					
ANR	4777731	Identifier	stackframe		4777647	1					
ANR	4777732	CallExpression	atoi ( egg -> lang . dstval )		4777647	1					
ANR	4777733	Callee	atoi		4777647	0					
ANR	4777734	Identifier	atoi		4777647	0					
ANR	4777735	ArgumentList	egg -> lang . dstval		4777647	1					
ANR	4777736	Argument	egg -> lang . dstval		4777647	0					
ANR	4777737	MemberAccess	egg -> lang . dstval		4777647	0					
ANR	4777738	PtrMemberAccess	egg -> lang		4777647	0					
ANR	4777739	Identifier	egg		4777647	0					
ANR	4777740	Identifier	lang		4777647	1					
ANR	4777741	Identifier	dstval		4777647	1					
ANR	4777742	ExpressionStatement	egg -> lang . ndstval = 0	873:3:23162:23183	4777647	1	True				
ANR	4777743	AssignmentExpression	egg -> lang . ndstval = 0		4777647	0		=			
ANR	4777744	MemberAccess	egg -> lang . ndstval		4777647	0					
ANR	4777745	PtrMemberAccess	egg -> lang		4777647	0					
ANR	4777746	Identifier	egg		4777647	0					
ANR	4777747	Identifier	lang		4777647	1					
ANR	4777748	Identifier	ndstval		4777647	1					
ANR	4777749	PrimaryExpression	0		4777647	1					
ANR	4777750	ElseStatement	else		4777647	0					
ANR	4777751	CompoundStatement		19:9:439:439	4777647	0					
ANR	4777752	ExpressionStatement	egg -> lang . dstval [ egg -> lang . ndstval ++ ] = c	875:3:23199:23240	4777647	0	True				
ANR	4777753	AssignmentExpression	egg -> lang . dstval [ egg -> lang . ndstval ++ ] = c		4777647	0		=			
ANR	4777754	ArrayIndexing	egg -> lang . dstval [ egg -> lang . ndstval ++ ]		4777647	0					
ANR	4777755	MemberAccess	egg -> lang . dstval		4777647	0					
ANR	4777756	PtrMemberAccess	egg -> lang		4777647	0					
ANR	4777757	Identifier	egg		4777647	0					
ANR	4777758	Identifier	lang		4777647	1					
ANR	4777759	Identifier	dstval		4777647	1					
ANR	4777760	PostIncDecOperationExpression	egg -> lang . ndstval ++		4777647	1					
ANR	4777761	MemberAccess	egg -> lang . ndstval		4777647	0					
ANR	4777762	PtrMemberAccess	egg -> lang		4777647	0					
ANR	4777763	Identifier	egg		4777647	0					
ANR	4777764	Identifier	lang		4777647	1					
ANR	4777765	Identifier	ndstval		4777647	1					
ANR	4777766	IncDec	++		4777647	1					
ANR	4777767	Identifier	c		4777647	1					
ANR	4777768	ReturnStatement	return 0 ;	877:2:23248:23256	4777647	1	True				
ANR	4777769	PrimaryExpression	0		4777647	0					
ANR	4777770	IfStatement	if ( c == '}' )		4777647	4					
ANR	4777771	Condition	c == '}'	880:5:23286:23293	4777647	0	True				
ANR	4777772	EqualityExpression	c == '}'		4777647	0		==			
ANR	4777773	Identifier	c		4777647	0					
ANR	4777774	PrimaryExpression	'}'		4777647	1					
ANR	4777775	CompoundStatement		25:15:541:541	4777647	1					
ANR	4777776	IfStatement	if ( CTX < 2 )		4777647	0					
ANR	4777777	Condition	CTX < 2	881:6:23331:23337	4777647	0	True				
ANR	4777778	RelationalExpression	CTX < 2		4777647	0		<			
ANR	4777779	Identifier	CTX		4777647	0					
ANR	4777780	PrimaryExpression	2		4777647	1					
ANR	4777781	CompoundStatement		26:15:585:585	4777647	1					
ANR	4777782	ExpressionStatement	egg -> lang . inlinectr = 0	882:3:23345:23368	4777647	0	True				
ANR	4777783	AssignmentExpression	egg -> lang . inlinectr = 0		4777647	0		=			
ANR	4777784	MemberAccess	egg -> lang . inlinectr		4777647	0					
ANR	4777785	PtrMemberAccess	egg -> lang		4777647	0					
ANR	4777786	Identifier	egg		4777647	0					
ANR	4777787	Identifier	lang		4777647	1					
ANR	4777788	Identifier	inlinectr		4777647	1					
ANR	4777789	PrimaryExpression	0		4777647	1					
ANR	4777790	ExpressionStatement	"rcc_context ( egg , - 1 )"	883:3:23373:23394	4777647	1	True				
ANR	4777791	CallExpression	"rcc_context ( egg , - 1 )"		4777647	0					
ANR	4777792	Callee	rcc_context		4777647	0					
ANR	4777793	Identifier	rcc_context		4777647	0					
ANR	4777794	ArgumentList	egg		4777647	1					
ANR	4777795	Argument	egg		4777647	0					
ANR	4777796	Identifier	egg		4777647	0					
ANR	4777797	Argument	- 1		4777647	1					
ANR	4777798	UnaryOperationExpression	- 1		4777647	0					
ANR	4777799	UnaryOperator	-		4777647	0					
ANR	4777800	PrimaryExpression	1		4777647	1					
ANR	4777801	ExpressionStatement	egg -> lang . slurp = 0	884:3:23399:23418	4777647	2	True				
ANR	4777802	AssignmentExpression	egg -> lang . slurp = 0		4777647	0		=			
ANR	4777803	MemberAccess	egg -> lang . slurp		4777647	0					
ANR	4777804	PtrMemberAccess	egg -> lang		4777647	0					
ANR	4777805	Identifier	egg		4777647	0					
ANR	4777806	Identifier	lang		4777647	1					
ANR	4777807	Identifier	slurp		4777647	1					
ANR	4777808	PrimaryExpression	0		4777647	1					
ANR	4777809	ExpressionStatement	egg -> lang . mode = NORMAL	885:3:23423:23446	4777647	3	True				
ANR	4777810	AssignmentExpression	egg -> lang . mode = NORMAL		4777647	0		=			
ANR	4777811	MemberAccess	egg -> lang . mode		4777647	0					
ANR	4777812	PtrMemberAccess	egg -> lang		4777647	0					
ANR	4777813	Identifier	egg		4777647	0					
ANR	4777814	Identifier	lang		4777647	1					
ANR	4777815	Identifier	mode		4777647	1					
ANR	4777816	Identifier	NORMAL		4777647	1					
ANR	4777817	IfStatement	if ( egg -> lang . dstval && egg -> lang . dstvar )		4777647	4					
ANR	4777818	Condition	egg -> lang . dstval && egg -> lang . dstvar	887:7:23473:23508	4777647	0	True				
ANR	4777819	AndExpression	egg -> lang . dstval && egg -> lang . dstvar		4777647	0		&&			
ANR	4777820	MemberAccess	egg -> lang . dstval		4777647	0					
ANR	4777821	PtrMemberAccess	egg -> lang		4777647	0					
ANR	4777822	Identifier	egg		4777647	0					
ANR	4777823	Identifier	lang		4777647	1					
ANR	4777824	Identifier	dstval		4777647	1					
ANR	4777825	MemberAccess	egg -> lang . dstvar		4777647	1					
ANR	4777826	PtrMemberAccess	egg -> lang		4777647	0					
ANR	4777827	Identifier	egg		4777647	0					
ANR	4777828	Identifier	lang		4777647	1					
ANR	4777829	Identifier	dstvar		4777647	1					
ANR	4777830	CompoundStatement		32:45:756:756	4777647	1					
ANR	4777831	ExpressionStatement	egg -> lang . dstval [ egg -> lang . ndstval ] = '\\0'	888:4:23517:23559	4777647	0	True				
ANR	4777832	AssignmentExpression	egg -> lang . dstval [ egg -> lang . ndstval ] = '\\0'		4777647	0		=			
ANR	4777833	ArrayIndexing	egg -> lang . dstval [ egg -> lang . ndstval ]		4777647	0					
ANR	4777834	MemberAccess	egg -> lang . dstval		4777647	0					
ANR	4777835	PtrMemberAccess	egg -> lang		4777647	0					
ANR	4777836	Identifier	egg		4777647	0					
ANR	4777837	Identifier	lang		4777647	1					
ANR	4777838	Identifier	dstval		4777647	1					
ANR	4777839	MemberAccess	egg -> lang . ndstval		4777647	1					
ANR	4777840	PtrMemberAccess	egg -> lang		4777647	0					
ANR	4777841	Identifier	egg		4777647	0					
ANR	4777842	Identifier	lang		4777647	1					
ANR	4777843	Identifier	ndstval		4777647	1					
ANR	4777844	PrimaryExpression	'\\0'		4777647	1					
ANR	4777845	ExpressionStatement	"egg -> remit -> comment ( egg , ""data (%s)(%s)size=(%d)\\n"" , egg -> lang . dstvar , egg -> lang . dstval , egg -> lang . stackframe )"	889:4:23565:23681	4777647	1	True				
ANR	4777846	CallExpression	"egg -> remit -> comment ( egg , ""data (%s)(%s)size=(%d)\\n"" , egg -> lang . dstvar , egg -> lang . dstval , egg -> lang . stackframe )"		4777647	0					
ANR	4777847	Callee	egg -> remit -> comment		4777647	0					
ANR	4777848	PtrMemberAccess	egg -> remit -> comment		4777647	0					
ANR	4777849	PtrMemberAccess	egg -> remit		4777647	0					
ANR	4777850	Identifier	egg		4777647	0					
ANR	4777851	Identifier	remit		4777647	1					
ANR	4777852	Identifier	comment		4777647	1					
ANR	4777853	ArgumentList	egg		4777647	1					
ANR	4777854	Argument	egg		4777647	0					
ANR	4777855	Identifier	egg		4777647	0					
ANR	4777856	Argument	"""data (%s)(%s)size=(%d)\\n"""		4777647	1					
ANR	4777857	PrimaryExpression	"""data (%s)(%s)size=(%d)\\n"""		4777647	0					
ANR	4777858	Argument	egg -> lang . dstvar		4777647	2					
ANR	4777859	MemberAccess	egg -> lang . dstvar		4777647	0					
ANR	4777860	PtrMemberAccess	egg -> lang		4777647	0					
ANR	4777861	Identifier	egg		4777647	0					
ANR	4777862	Identifier	lang		4777647	1					
ANR	4777863	Identifier	dstvar		4777647	1					
ANR	4777864	Argument	egg -> lang . dstval		4777647	3					
ANR	4777865	MemberAccess	egg -> lang . dstval		4777647	0					
ANR	4777866	PtrMemberAccess	egg -> lang		4777647	0					
ANR	4777867	Identifier	egg		4777647	0					
ANR	4777868	Identifier	lang		4777647	1					
ANR	4777869	Identifier	dstval		4777647	1					
ANR	4777870	Argument	egg -> lang . stackframe		4777647	4					
ANR	4777871	MemberAccess	egg -> lang . stackframe		4777647	0					
ANR	4777872	PtrMemberAccess	egg -> lang		4777647	0					
ANR	4777873	Identifier	egg		4777647	0					
ANR	4777874	Identifier	lang		4777647	1					
ANR	4777875	Identifier	stackframe		4777647	1					
ANR	4777876	ExpressionStatement	"r_egg_printf ( egg , "".data\\n"" )"	891:4:23687:23716	4777647	2	True				
ANR	4777877	CallExpression	"r_egg_printf ( egg , "".data\\n"" )"		4777647	0					
ANR	4777878	Callee	r_egg_printf		4777647	0					
ANR	4777879	Identifier	r_egg_printf		4777647	0					
ANR	4777880	ArgumentList	egg		4777647	1					
ANR	4777881	Argument	egg		4777647	0					
ANR	4777882	Identifier	egg		4777647	0					
ANR	4777883	Argument	""".data\\n"""		4777647	1					
ANR	4777884	PrimaryExpression	""".data\\n"""		4777647	0					
ANR	4777885	ForStatement	for ( str = egg -> lang . dstval ; is_space ( * str ) ; str ++ )		4777647	3					
ANR	4777886	ForInit	str = egg -> lang . dstval ;	892:9:23727:23749	4777647	0	True				
ANR	4777887	AssignmentExpression	str = egg -> lang . dstval		4777647	0		=			
ANR	4777888	Identifier	str		4777647	0					
ANR	4777889	MemberAccess	egg -> lang . dstval		4777647	1					
ANR	4777890	PtrMemberAccess	egg -> lang		4777647	0					
ANR	4777891	Identifier	egg		4777647	0					
ANR	4777892	Identifier	lang		4777647	1					
ANR	4777893	Identifier	dstval		4777647	1					
ANR	4777894	Condition	is_space ( * str )	892:33:23751:23765	4777647	1	True				
ANR	4777895	CallExpression	is_space ( * str )		4777647	0					
ANR	4777896	Callee	is_space		4777647	0					
ANR	4777897	Identifier	is_space		4777647	0					
ANR	4777898	ArgumentList	* str		4777647	1					
ANR	4777899	Argument	* str		4777647	0					
ANR	4777900	UnaryOperationExpression	* str		4777647	0					
ANR	4777901	UnaryOperator	*		4777647	0					
ANR	4777902	Identifier	str		4777647	1					
ANR	4777903	PostIncDecOperationExpression	str ++	892:50:23768:23772	4777647	2	True				
ANR	4777904	Identifier	str		4777647	0					
ANR	4777905	IncDec	++		4777647	1					
ANR	4777906	CompoundStatement		37:57:1020:1020	4777647	3					
ANR	4777907	ExpressionStatement		893:5:23782:23782	4777647	0	True				
ANR	4777908	ExpressionStatement	j = ( egg -> lang . stackframe ) ? egg -> lang . stackframe : 1	895:4:23794:23845	4777647	4	True				
ANR	4777909	AssignmentExpression	j = ( egg -> lang . stackframe ) ? egg -> lang . stackframe : 1		4777647	0		=			
ANR	4777910	Identifier	j		4777647	0					
ANR	4777911	ConditionalExpression	( egg -> lang . stackframe ) ? egg -> lang . stackframe : 1		4777647	1					
ANR	4777912	Condition	egg -> lang . stackframe		4777647	0					
ANR	4777913	MemberAccess	egg -> lang . stackframe		4777647	0					
ANR	4777914	PtrMemberAccess	egg -> lang		4777647	0					
ANR	4777915	Identifier	egg		4777647	0					
ANR	4777916	Identifier	lang		4777647	1					
ANR	4777917	Identifier	stackframe		4777647	1					
ANR	4777918	MemberAccess	egg -> lang . stackframe		4777647	1					
ANR	4777919	PtrMemberAccess	egg -> lang		4777647	0					
ANR	4777920	Identifier	egg		4777647	0					
ANR	4777921	Identifier	lang		4777647	1					
ANR	4777922	Identifier	stackframe		4777647	1					
ANR	4777923	PrimaryExpression	1		4777647	2					
ANR	4777924	ExpressionStatement	"r_egg_printf ( egg , ""%s:\\n"" , egg -> lang . dstvar )"	897:4:23872:23917	4777647	5	True				
ANR	4777925	CallExpression	"r_egg_printf ( egg , ""%s:\\n"" , egg -> lang . dstvar )"		4777647	0					
ANR	4777926	Callee	r_egg_printf		4777647	0					
ANR	4777927	Identifier	r_egg_printf		4777647	0					
ANR	4777928	ArgumentList	egg		4777647	1					
ANR	4777929	Argument	egg		4777647	0					
ANR	4777930	Identifier	egg		4777647	0					
ANR	4777931	Argument	"""%s:\\n"""		4777647	1					
ANR	4777932	PrimaryExpression	"""%s:\\n"""		4777647	0					
ANR	4777933	Argument	egg -> lang . dstvar		4777647	2					
ANR	4777934	MemberAccess	egg -> lang . dstvar		4777647	0					
ANR	4777935	PtrMemberAccess	egg -> lang		4777647	0					
ANR	4777936	Identifier	egg		4777647	0					
ANR	4777937	Identifier	lang		4777647	1					
ANR	4777938	Identifier	dstvar		4777647	1					
ANR	4777939	ForStatement	for ( i = 1 ; i <= j ; i ++ )		4777647	6					
ANR	4777940	ForInit	i = 1 ;	898:9:23928:23933	4777647	0	True				
ANR	4777941	AssignmentExpression	i = 1		4777647	0		=			
ANR	4777942	Identifier	i		4777647	0					
ANR	4777943	PrimaryExpression	1		4777647	1					
ANR	4777944	Condition	i <= j	898:16:23935:23940	4777647	1	True				
ANR	4777945	RelationalExpression	i <= j		4777647	0		<=			
ANR	4777946	Identifier	i		4777647	0					
ANR	4777947	Identifier	j		4777647	1					
ANR	4777948	PostIncDecOperationExpression	i ++	898:24:23943:23945	4777647	2	True				
ANR	4777949	Identifier	i		4777647	0					
ANR	4777950	IncDec	++		4777647	1					
ANR	4777951	CompoundStatement		43:29:1193:1193	4777647	3					
ANR	4777952	IfStatement	"if ( * str == '""' )"		4777647	0					
ANR	4777953	Condition	"* str == '""'"	899:9:23959:23969	4777647	0	True				
ANR	4777954	EqualityExpression	"* str == '""'"		4777647	0		==			
ANR	4777955	UnaryOperationExpression	* str		4777647	0					
ANR	4777956	UnaryOperator	*		4777647	0					
ANR	4777957	Identifier	str		4777647	1					
ANR	4777958	PrimaryExpression	"'""'"		4777647	1					
ANR	4777959	CompoundStatement		44:22:1217:1217	4777647	1					
ANR	4777960	ExpressionStatement	"r_egg_printf ( egg , "".ascii %s%s\\n"" , egg -> lang . dstval , ( i == j ) ? ""\\""\\\\x00\\"""" : """" )"	900:6:23980:24060	4777647	0	True				
ANR	4777961	CallExpression	"r_egg_printf ( egg , "".ascii %s%s\\n"" , egg -> lang . dstval , ( i == j ) ? ""\\""\\\\x00\\"""" : """" )"		4777647	0					
ANR	4777962	Callee	r_egg_printf		4777647	0					
ANR	4777963	Identifier	r_egg_printf		4777647	0					
ANR	4777964	ArgumentList	egg		4777647	1					
ANR	4777965	Argument	egg		4777647	0					
ANR	4777966	Identifier	egg		4777647	0					
ANR	4777967	Argument	""".ascii %s%s\\n"""		4777647	1					
ANR	4777968	PrimaryExpression	""".ascii %s%s\\n"""		4777647	0					
ANR	4777969	Argument	egg -> lang . dstval		4777647	2					
ANR	4777970	MemberAccess	egg -> lang . dstval		4777647	0					
ANR	4777971	PtrMemberAccess	egg -> lang		4777647	0					
ANR	4777972	Identifier	egg		4777647	0					
ANR	4777973	Identifier	lang		4777647	1					
ANR	4777974	Identifier	dstval		4777647	1					
ANR	4777975	Argument	"( i == j ) ? ""\\""\\\\x00\\"""" : """""		4777647	3					
ANR	4777976	ConditionalExpression	"( i == j ) ? ""\\""\\\\x00\\"""" : """""		4777647	0					
ANR	4777977	Condition	i == j		4777647	0					
ANR	4777978	EqualityExpression	i == j		4777647	0		==			
ANR	4777979	Identifier	i		4777647	0					
ANR	4777980	Identifier	j		4777647	1					
ANR	4777981	PrimaryExpression	"""\\""\\\\x00\\"""""		4777647	1					
ANR	4777982	PrimaryExpression	""""""		4777647	2					
ANR	4777983	ElseStatement	else		4777647	0					
ANR	4777984	CompoundStatement		46:12:1319:1319	4777647	0					
ANR	4777985	ExpressionStatement	"r_egg_printf ( egg , "".long %s\\n"" , egg -> lang . dstval )"	902:6:24082:24132	4777647	0	True				
ANR	4777986	CallExpression	"r_egg_printf ( egg , "".long %s\\n"" , egg -> lang . dstval )"		4777647	0					
ANR	4777987	Callee	r_egg_printf		4777647	0					
ANR	4777988	Identifier	r_egg_printf		4777647	0					
ANR	4777989	ArgumentList	egg		4777647	1					
ANR	4777990	Argument	egg		4777647	0					
ANR	4777991	Identifier	egg		4777647	0					
ANR	4777992	Argument	""".long %s\\n"""		4777647	1					
ANR	4777993	PrimaryExpression	""".long %s\\n"""		4777647	0					
ANR	4777994	Argument	egg -> lang . dstval		4777647	2					
ANR	4777995	MemberAccess	egg -> lang . dstval		4777647	0					
ANR	4777996	PtrMemberAccess	egg -> lang		4777647	0					
ANR	4777997	Identifier	egg		4777647	0					
ANR	4777998	Identifier	lang		4777647	1					
ANR	4777999	Identifier	dstval		4777647	1					
ANR	4778000	ExpressionStatement	"r_egg_printf ( egg , "".text\\n"" )"	905:4:24151:24180	4777647	7	True				
ANR	4778001	CallExpression	"r_egg_printf ( egg , "".text\\n"" )"		4777647	0					
ANR	4778002	Callee	r_egg_printf		4777647	0					
ANR	4778003	Identifier	r_egg_printf		4777647	0					
ANR	4778004	ArgumentList	egg		4777647	1					
ANR	4778005	Argument	egg		4777647	0					
ANR	4778006	Identifier	egg		4777647	0					
ANR	4778007	Argument	""".text\\n"""		4777647	1					
ANR	4778008	PrimaryExpression	""".text\\n"""		4777647	0					
ANR	4778009	ExpressionStatement	R_FREE ( egg -> lang . dstvar )	906:4:24186:24211	4777647	8	True				
ANR	4778010	CallExpression	R_FREE ( egg -> lang . dstvar )		4777647	0					
ANR	4778011	Callee	R_FREE		4777647	0					
ANR	4778012	Identifier	R_FREE		4777647	0					
ANR	4778013	ArgumentList	egg -> lang . dstvar		4777647	1					
ANR	4778014	Argument	egg -> lang . dstvar		4777647	0					
ANR	4778015	MemberAccess	egg -> lang . dstvar		4777647	0					
ANR	4778016	PtrMemberAccess	egg -> lang		4777647	0					
ANR	4778017	Identifier	egg		4777647	0					
ANR	4778018	Identifier	lang		4777647	1					
ANR	4778019	Identifier	dstvar		4777647	1					
ANR	4778020	ExpressionStatement	R_FREE ( egg -> lang . dstval )	907:4:24217:24242	4777647	9	True				
ANR	4778021	CallExpression	R_FREE ( egg -> lang . dstval )		4777647	0					
ANR	4778022	Callee	R_FREE		4777647	0					
ANR	4778023	Identifier	R_FREE		4777647	0					
ANR	4778024	ArgumentList	egg -> lang . dstval		4777647	1					
ANR	4778025	Argument	egg -> lang . dstval		4777647	0					
ANR	4778026	MemberAccess	egg -> lang . dstval		4777647	0					
ANR	4778027	PtrMemberAccess	egg -> lang		4777647	0					
ANR	4778028	Identifier	egg		4777647	0					
ANR	4778029	Identifier	lang		4777647	1					
ANR	4778030	Identifier	dstval		4777647	1					
ANR	4778031	ExpressionStatement	egg -> lang . ndstval = 0	908:4:24248:24269	4777647	10	True				
ANR	4778032	AssignmentExpression	egg -> lang . ndstval = 0		4777647	0		=			
ANR	4778033	MemberAccess	egg -> lang . ndstval		4777647	0					
ANR	4778034	PtrMemberAccess	egg -> lang		4777647	0					
ANR	4778035	Identifier	egg		4777647	0					
ANR	4778036	Identifier	lang		4777647	1					
ANR	4778037	Identifier	ndstval		4777647	1					
ANR	4778038	PrimaryExpression	0		4777647	1					
ANR	4778039	ExpressionStatement	CTX = 0	909:4:24275:24282	4777647	11	True				
ANR	4778040	AssignmentExpression	CTX = 0		4777647	0		=			
ANR	4778041	Identifier	CTX		4777647	0					
ANR	4778042	PrimaryExpression	0		4777647	1					
ANR	4778043	ReturnStatement	return 1 ;	910:4:24288:24296	4777647	12	True				
ANR	4778044	PrimaryExpression	1		4777647	0					
ANR	4778045	IfStatement	if ( egg -> lang . dstval )		4777647	5					
ANR	4778046	Condition	egg -> lang . dstval	914:5:24315:24330	4777647	0	True				
ANR	4778047	MemberAccess	egg -> lang . dstval		4777647	0					
ANR	4778048	PtrMemberAccess	egg -> lang		4777647	0					
ANR	4778049	Identifier	egg		4777647	0					
ANR	4778050	Identifier	lang		4777647	1					
ANR	4778051	Identifier	dstval		4777647	1					
ANR	4778052	CompoundStatement		59:23:1578:1578	4777647	1					
ANR	4778053	ExpressionStatement	egg -> lang . dstval [ egg -> lang . ndstval ++ ] = c	915:2:24337:24378	4777647	0	True				
ANR	4778054	AssignmentExpression	egg -> lang . dstval [ egg -> lang . ndstval ++ ] = c		4777647	0		=			
ANR	4778055	ArrayIndexing	egg -> lang . dstval [ egg -> lang . ndstval ++ ]		4777647	0					
ANR	4778056	MemberAccess	egg -> lang . dstval		4777647	0					
ANR	4778057	PtrMemberAccess	egg -> lang		4777647	0					
ANR	4778058	Identifier	egg		4777647	0					
ANR	4778059	Identifier	lang		4777647	1					
ANR	4778060	Identifier	dstval		4777647	1					
ANR	4778061	PostIncDecOperationExpression	egg -> lang . ndstval ++		4777647	1					
ANR	4778062	MemberAccess	egg -> lang . ndstval		4777647	0					
ANR	4778063	PtrMemberAccess	egg -> lang		4777647	0					
ANR	4778064	Identifier	egg		4777647	0					
ANR	4778065	Identifier	lang		4777647	1					
ANR	4778066	Identifier	ndstval		4777647	1					
ANR	4778067	IncDec	++		4777647	1					
ANR	4778068	Identifier	c		4777647	1					
ANR	4778069	ReturnStatement	return 0 ;	917:1:24384:24392	4777647	6	True				
ANR	4778070	PrimaryExpression	0		4777647	0					
ANR	4778071	ReturnType	static int		4777647	1					
ANR	4778072	Identifier	parsedatachar		4777647	2					
ANR	4778073	ParameterList	"REgg * egg , char c"		4777647	3					
ANR	4778074	Parameter	REgg * egg	856:25:22735:22743	4777647	0	True				
ANR	4778075	ParameterType	REgg *		4777647	0					
ANR	4778076	Identifier	egg		4777647	1					
ANR	4778077	Parameter	char c	856:36:22746:22751	4777647	1	True				
ANR	4778078	ParameterType	char		4777647	0					
ANR	4778079	Identifier	c		4777647	1					
ANR	4778080	CFGEntryNode	ENTRY		4777647		True				
ANR	4778081	CFGExitNode	EXIT		4777647		True				
ANR	4778082	Symbol	atoi		4777647						
ANR	4778083	Symbol	c		4777647						
ANR	4778084	Symbol	egg		4777647						
ANR	4778085	Symbol	* egg -> lang . dstval		4777647						
ANR	4778086	Symbol	CTX		4777647						
ANR	4778087	Symbol	* egg -> lang . ndstval		4777647						
ANR	4778088	Symbol	i		4777647						
ANR	4778089	Symbol	j		4777647						
ANR	4778090	Symbol	egg -> lang . dstvar		4777647						
ANR	4778091	Symbol	egg -> lang . inlinectr		4777647						
ANR	4778092	Symbol	egg -> lang		4777647						
ANR	4778093	Symbol	egg -> remit		4777647						
ANR	4778094	Symbol	egg -> lang . mode		4777647						
ANR	4778095	Symbol	* egg -> lang		4777647						
ANR	4778096	Symbol	str		4777647						
ANR	4778097	Symbol	* egg		4777647						
ANR	4778098	Symbol	egg -> lang . ndstval		4777647						
ANR	4778099	Symbol	egg -> lang . dstval		4777647						
ANR	4778100	Symbol	egg -> lang . slurp		4777647						
ANR	4778101	Symbol	* * egg		4777647						
ANR	4778102	Symbol	* str		4777647						
ANR	4778103	Symbol	is_space		4777647						
ANR	4778104	Symbol	egg -> lang . stackframe		4777647						
ANR	4778105	Symbol	NORMAL		4777647						
ANR	4778106	Function	parseinlinechar	920:0:24397:25625							
ANR	4778107	FunctionDef	"parseinlinechar (REgg * egg , char c)"		4778106	0					
ANR	4778108	CompoundStatement		920:46:24443:25625	4778106	0					
ANR	4778109	IfStatement	if ( c == '{' )		4778106	0					
ANR	4778110	Condition	c == '{'	922:5:24472:24479	4778106	0	True				
ANR	4778111	EqualityExpression	c == '{'		4778106	0		==			
ANR	4778112	Identifier	c		4778106	0					
ANR	4778113	PrimaryExpression	'{'		4778106	1					
ANR	4778114	CompoundStatement		3:15:38:38	4778106	1					
ANR	4778115	ExpressionStatement	"rcc_context ( egg , 1 )"	923:2:24513:24533	4778106	0	True				
ANR	4778116	CallExpression	"rcc_context ( egg , 1 )"		4778106	0					
ANR	4778117	Callee	rcc_context		4778106	0					
ANR	4778118	Identifier	rcc_context		4778106	0					
ANR	4778119	ArgumentList	egg		4778106	1					
ANR	4778120	Argument	egg		4778106	0					
ANR	4778121	Identifier	egg		4778106	0					
ANR	4778122	Argument	1		4778106	1					
ANR	4778123	PrimaryExpression	1		4778106	0					
ANR	4778124	ExpressionStatement	egg -> lang . inlinectr ++	924:2:24537:24558	4778106	1	True				
ANR	4778125	PostIncDecOperationExpression	egg -> lang . inlinectr ++		4778106	0					
ANR	4778126	MemberAccess	egg -> lang . inlinectr		4778106	0					
ANR	4778127	PtrMemberAccess	egg -> lang		4778106	0					
ANR	4778128	Identifier	egg		4778106	0					
ANR	4778129	Identifier	lang		4778106	1					
ANR	4778130	Identifier	inlinectr		4778106	1					
ANR	4778131	IncDec	++		4778106	1					
ANR	4778132	IfStatement	if ( egg -> lang . inlinectr == 1 )		4778106	2					
ANR	4778133	Condition	egg -> lang . inlinectr == 1	925:6:24566:24589	4778106	0	True				
ANR	4778134	EqualityExpression	egg -> lang . inlinectr == 1		4778106	0		==			
ANR	4778135	MemberAccess	egg -> lang . inlinectr		4778106	0					
ANR	4778136	PtrMemberAccess	egg -> lang		4778106	0					
ANR	4778137	Identifier	egg		4778106	0					
ANR	4778138	Identifier	lang		4778106	1					
ANR	4778139	Identifier	inlinectr		4778106	1					
ANR	4778140	PrimaryExpression	1		4778106	1					
ANR	4778141	CompoundStatement		6:32:148:148	4778106	1					
ANR	4778142	ReturnStatement	return 0 ;	926:3:24597:24605	4778106	0	True				
ANR	4778143	PrimaryExpression	0		4778106	0					
ANR	4778144	ElseStatement	else		4778106	0					
ANR	4778145	IfStatement	if ( egg -> lang . inlinectr == 0 )		4778106	0					
ANR	4778146	Condition	egg -> lang . inlinectr == 0	928:12:24623:24646	4778106	0	True				
ANR	4778147	EqualityExpression	egg -> lang . inlinectr == 0		4778106	0		==			
ANR	4778148	MemberAccess	egg -> lang . inlinectr		4778106	0					
ANR	4778149	PtrMemberAccess	egg -> lang		4778106	0					
ANR	4778150	Identifier	egg		4778106	0					
ANR	4778151	Identifier	lang		4778106	1					
ANR	4778152	Identifier	inlinectr		4778106	1					
ANR	4778153	PrimaryExpression	0		4778106	1					
ANR	4778154	CompoundStatement		9:38:205:205	4778106	1					
ANR	4778155	ReturnStatement	return 0 ;	929:2:24653:24661	4778106	0	True				
ANR	4778156	PrimaryExpression	0		4778106	0					
ANR	4778157	IfStatement	if ( c == '}' )		4778106	1					
ANR	4778158	Condition	c == '}'	933:5:24692:24699	4778106	0	True				
ANR	4778159	EqualityExpression	c == '}'		4778106	0		==			
ANR	4778160	Identifier	c		4778106	0					
ANR	4778161	PrimaryExpression	'}'		4778106	1					
ANR	4778162	CompoundStatement		14:15:258:258	4778106	1					
ANR	4778163	IfStatement	if ( CTX < 2 )		4778106	0					
ANR	4778164	Condition	CTX < 2	934:6:24737:24743	4778106	0	True				
ANR	4778165	RelationalExpression	CTX < 2		4778106	0		<			
ANR	4778166	Identifier	CTX		4778106	0					
ANR	4778167	PrimaryExpression	2		4778106	1					
ANR	4778168	CompoundStatement		15:15:302:302	4778106	1					
ANR	4778169	ExpressionStatement	"rcc_context ( egg , - 1 )"	935:3:24751:24772	4778106	0	True				
ANR	4778170	CallExpression	"rcc_context ( egg , - 1 )"		4778106	0					
ANR	4778171	Callee	rcc_context		4778106	0					
ANR	4778172	Identifier	rcc_context		4778106	0					
ANR	4778173	ArgumentList	egg		4778106	1					
ANR	4778174	Argument	egg		4778106	0					
ANR	4778175	Identifier	egg		4778106	0					
ANR	4778176	Argument	- 1		4778106	1					
ANR	4778177	UnaryOperationExpression	- 1		4778106	0					
ANR	4778178	UnaryOperator	-		4778106	0					
ANR	4778179	PrimaryExpression	1		4778106	1					
ANR	4778180	ExpressionStatement	egg -> lang . slurp = 0	936:3:24777:24796	4778106	1	True				
ANR	4778181	AssignmentExpression	egg -> lang . slurp = 0		4778106	0		=			
ANR	4778182	MemberAccess	egg -> lang . slurp		4778106	0					
ANR	4778183	PtrMemberAccess	egg -> lang		4778106	0					
ANR	4778184	Identifier	egg		4778106	0					
ANR	4778185	Identifier	lang		4778106	1					
ANR	4778186	Identifier	slurp		4778106	1					
ANR	4778187	PrimaryExpression	0		4778106	1					
ANR	4778188	ExpressionStatement	egg -> lang . mode = NORMAL	937:3:24801:24824	4778106	2	True				
ANR	4778189	AssignmentExpression	egg -> lang . mode = NORMAL		4778106	0		=			
ANR	4778190	MemberAccess	egg -> lang . mode		4778106	0					
ANR	4778191	PtrMemberAccess	egg -> lang		4778106	0					
ANR	4778192	Identifier	egg		4778106	0					
ANR	4778193	Identifier	lang		4778106	1					
ANR	4778194	Identifier	mode		4778106	1					
ANR	4778195	Identifier	NORMAL		4778106	1					
ANR	4778196	ExpressionStatement	egg -> lang . inlinectr = 0	938:3:24829:24852	4778106	3	True				
ANR	4778197	AssignmentExpression	egg -> lang . inlinectr = 0		4778106	0		=			
ANR	4778198	MemberAccess	egg -> lang . inlinectr		4778106	0					
ANR	4778199	PtrMemberAccess	egg -> lang		4778106	0					
ANR	4778200	Identifier	egg		4778106	0					
ANR	4778201	Identifier	lang		4778106	1					
ANR	4778202	Identifier	inlinectr		4778106	1					
ANR	4778203	PrimaryExpression	0		4778106	1					
ANR	4778204	IfStatement	if ( ! egg -> lang . dstvar && egg -> lang . dstval == egg -> lang . syscallbody )		4778106	4					
ANR	4778205	Condition	! egg -> lang . dstvar && egg -> lang . dstval == egg -> lang . syscallbody	939:7:24861:24922	4778106	0	True				
ANR	4778206	AndExpression	! egg -> lang . dstvar && egg -> lang . dstval == egg -> lang . syscallbody		4778106	0		&&			
ANR	4778207	UnaryOperationExpression	! egg -> lang . dstvar		4778106	0					
ANR	4778208	UnaryOperator	!		4778106	0					
ANR	4778209	MemberAccess	egg -> lang . dstvar		4778106	1					
ANR	4778210	PtrMemberAccess	egg -> lang		4778106	0					
ANR	4778211	Identifier	egg		4778106	0					
ANR	4778212	Identifier	lang		4778106	1					
ANR	4778213	Identifier	dstvar		4778106	1					
ANR	4778214	EqualityExpression	egg -> lang . dstval == egg -> lang . syscallbody		4778106	1		==			
ANR	4778215	MemberAccess	egg -> lang . dstval		4778106	0					
ANR	4778216	PtrMemberAccess	egg -> lang		4778106	0					
ANR	4778217	Identifier	egg		4778106	0					
ANR	4778218	Identifier	lang		4778106	1					
ANR	4778219	Identifier	dstval		4778106	1					
ANR	4778220	MemberAccess	egg -> lang . syscallbody		4778106	1					
ANR	4778221	PtrMemberAccess	egg -> lang		4778106	0					
ANR	4778222	Identifier	egg		4778106	0					
ANR	4778223	Identifier	lang		4778106	1					
ANR	4778224	Identifier	syscallbody		4778106	1					
ANR	4778225	CompoundStatement		20:71:481:481	4778106	1					
ANR	4778226	ExpressionStatement	egg -> lang . dstval = NULL	940:4:24931:24954	4778106	0	True				
ANR	4778227	AssignmentExpression	egg -> lang . dstval = NULL		4778106	0		=			
ANR	4778228	MemberAccess	egg -> lang . dstval		4778106	0					
ANR	4778229	PtrMemberAccess	egg -> lang		4778106	0					
ANR	4778230	Identifier	egg		4778106	0					
ANR	4778231	Identifier	lang		4778106	1					
ANR	4778232	Identifier	dstval		4778106	1					
ANR	4778233	Identifier	NULL		4778106	1					
ANR	4778234	ReturnStatement	return 1 ;	941:4:24960:24968	4778106	1	True				
ANR	4778235	PrimaryExpression	1		4778106	0					
ANR	4778236	ElseStatement	else		4778106	0					
ANR	4778237	IfStatement	if ( egg -> lang . dstval && egg -> lang . dstvar )		4778106	0					
ANR	4778238	Condition	egg -> lang . dstval && egg -> lang . dstvar	943:7:25002:25037	4778106	0	True				
ANR	4778239	AndExpression	egg -> lang . dstval && egg -> lang . dstvar		4778106	0		&&			
ANR	4778240	MemberAccess	egg -> lang . dstval		4778106	0					
ANR	4778241	PtrMemberAccess	egg -> lang		4778106	0					
ANR	4778242	Identifier	egg		4778106	0					
ANR	4778243	Identifier	lang		4778106	1					
ANR	4778244	Identifier	dstval		4778106	1					
ANR	4778245	MemberAccess	egg -> lang . dstvar		4778106	1					
ANR	4778246	PtrMemberAccess	egg -> lang		4778106	0					
ANR	4778247	Identifier	egg		4778106	0					
ANR	4778248	Identifier	lang		4778106	1					
ANR	4778249	Identifier	dstvar		4778106	1					
ANR	4778250	CompoundStatement		24:45:596:596	4778106	1					
ANR	4778251	ExpressionStatement	egg -> lang . dstval [ egg -> lang . ndstval ] = '\\0'	944:4:25046:25088	4778106	0	True				
ANR	4778252	AssignmentExpression	egg -> lang . dstval [ egg -> lang . ndstval ] = '\\0'		4778106	0		=			
ANR	4778253	ArrayIndexing	egg -> lang . dstval [ egg -> lang . ndstval ]		4778106	0					
ANR	4778254	MemberAccess	egg -> lang . dstval		4778106	0					
ANR	4778255	PtrMemberAccess	egg -> lang		4778106	0					
ANR	4778256	Identifier	egg		4778106	0					
ANR	4778257	Identifier	lang		4778106	1					
ANR	4778258	Identifier	dstval		4778106	1					
ANR	4778259	MemberAccess	egg -> lang . ndstval		4778106	1					
ANR	4778260	PtrMemberAccess	egg -> lang		4778106	0					
ANR	4778261	Identifier	egg		4778106	0					
ANR	4778262	Identifier	lang		4778106	1					
ANR	4778263	Identifier	ndstval		4778106	1					
ANR	4778264	PrimaryExpression	'\\0'		4778106	1					
ANR	4778265	ExpressionStatement	egg -> lang . inlines [ egg -> lang . ninlines ] . name = strdup ( skipspaces ( egg -> lang . dstvar ) )	946:4:25180:25263	4778106	1	True				
ANR	4778266	AssignmentExpression	egg -> lang . inlines [ egg -> lang . ninlines ] . name = strdup ( skipspaces ( egg -> lang . dstvar ) )		4778106	0		=			
ANR	4778267	MemberAccess	egg -> lang . inlines [ egg -> lang . ninlines ] . name		4778106	0					
ANR	4778268	ArrayIndexing	egg -> lang . inlines [ egg -> lang . ninlines ]		4778106	0					
ANR	4778269	MemberAccess	egg -> lang . inlines		4778106	0					
ANR	4778270	PtrMemberAccess	egg -> lang		4778106	0					
ANR	4778271	Identifier	egg		4778106	0					
ANR	4778272	Identifier	lang		4778106	1					
ANR	4778273	Identifier	inlines		4778106	1					
ANR	4778274	MemberAccess	egg -> lang . ninlines		4778106	1					
ANR	4778275	PtrMemberAccess	egg -> lang		4778106	0					
ANR	4778276	Identifier	egg		4778106	0					
ANR	4778277	Identifier	lang		4778106	1					
ANR	4778278	Identifier	ninlines		4778106	1					
ANR	4778279	Identifier	name		4778106	1					
ANR	4778280	CallExpression	strdup ( skipspaces ( egg -> lang . dstvar ) )		4778106	1					
ANR	4778281	Callee	strdup		4778106	0					
ANR	4778282	Identifier	strdup		4778106	0					
ANR	4778283	ArgumentList	skipspaces ( egg -> lang . dstvar )		4778106	1					
ANR	4778284	Argument	skipspaces ( egg -> lang . dstvar )		4778106	0					
ANR	4778285	CallExpression	skipspaces ( egg -> lang . dstvar )		4778106	0					
ANR	4778286	Callee	skipspaces		4778106	0					
ANR	4778287	Identifier	skipspaces		4778106	0					
ANR	4778288	ArgumentList	egg -> lang . dstvar		4778106	1					
ANR	4778289	Argument	egg -> lang . dstvar		4778106	0					
ANR	4778290	MemberAccess	egg -> lang . dstvar		4778106	0					
ANR	4778291	PtrMemberAccess	egg -> lang		4778106	0					
ANR	4778292	Identifier	egg		4778106	0					
ANR	4778293	Identifier	lang		4778106	1					
ANR	4778294	Identifier	dstvar		4778106	1					
ANR	4778295	ExpressionStatement	egg -> lang . inlines [ egg -> lang . ninlines ] . body = strdup ( skipspaces ( egg -> lang . dstval ) )	947:4:25269:25352	4778106	2	True				
ANR	4778296	AssignmentExpression	egg -> lang . inlines [ egg -> lang . ninlines ] . body = strdup ( skipspaces ( egg -> lang . dstval ) )		4778106	0		=			
ANR	4778297	MemberAccess	egg -> lang . inlines [ egg -> lang . ninlines ] . body		4778106	0					
ANR	4778298	ArrayIndexing	egg -> lang . inlines [ egg -> lang . ninlines ]		4778106	0					
ANR	4778299	MemberAccess	egg -> lang . inlines		4778106	0					
ANR	4778300	PtrMemberAccess	egg -> lang		4778106	0					
ANR	4778301	Identifier	egg		4778106	0					
ANR	4778302	Identifier	lang		4778106	1					
ANR	4778303	Identifier	inlines		4778106	1					
ANR	4778304	MemberAccess	egg -> lang . ninlines		4778106	1					
ANR	4778305	PtrMemberAccess	egg -> lang		4778106	0					
ANR	4778306	Identifier	egg		4778106	0					
ANR	4778307	Identifier	lang		4778106	1					
ANR	4778308	Identifier	ninlines		4778106	1					
ANR	4778309	Identifier	body		4778106	1					
ANR	4778310	CallExpression	strdup ( skipspaces ( egg -> lang . dstval ) )		4778106	1					
ANR	4778311	Callee	strdup		4778106	0					
ANR	4778312	Identifier	strdup		4778106	0					
ANR	4778313	ArgumentList	skipspaces ( egg -> lang . dstval )		4778106	1					
ANR	4778314	Argument	skipspaces ( egg -> lang . dstval )		4778106	0					
ANR	4778315	CallExpression	skipspaces ( egg -> lang . dstval )		4778106	0					
ANR	4778316	Callee	skipspaces		4778106	0					
ANR	4778317	Identifier	skipspaces		4778106	0					
ANR	4778318	ArgumentList	egg -> lang . dstval		4778106	1					
ANR	4778319	Argument	egg -> lang . dstval		4778106	0					
ANR	4778320	MemberAccess	egg -> lang . dstval		4778106	0					
ANR	4778321	PtrMemberAccess	egg -> lang		4778106	0					
ANR	4778322	Identifier	egg		4778106	0					
ANR	4778323	Identifier	lang		4778106	1					
ANR	4778324	Identifier	dstval		4778106	1					
ANR	4778325	ExpressionStatement	egg -> lang . ninlines ++	948:4:25358:25378	4778106	3	True				
ANR	4778326	PostIncDecOperationExpression	egg -> lang . ninlines ++		4778106	0					
ANR	4778327	MemberAccess	egg -> lang . ninlines		4778106	0					
ANR	4778328	PtrMemberAccess	egg -> lang		4778106	0					
ANR	4778329	Identifier	egg		4778106	0					
ANR	4778330	Identifier	lang		4778106	1					
ANR	4778331	Identifier	ninlines		4778106	1					
ANR	4778332	IncDec	++		4778106	1					
ANR	4778333	ExpressionStatement	R_FREE ( egg -> lang . dstvar )	949:4:25384:25409	4778106	4	True				
ANR	4778334	CallExpression	R_FREE ( egg -> lang . dstvar )		4778106	0					
ANR	4778335	Callee	R_FREE		4778106	0					
ANR	4778336	Identifier	R_FREE		4778106	0					
ANR	4778337	ArgumentList	egg -> lang . dstvar		4778106	1					
ANR	4778338	Argument	egg -> lang . dstvar		4778106	0					
ANR	4778339	MemberAccess	egg -> lang . dstvar		4778106	0					
ANR	4778340	PtrMemberAccess	egg -> lang		4778106	0					
ANR	4778341	Identifier	egg		4778106	0					
ANR	4778342	Identifier	lang		4778106	1					
ANR	4778343	Identifier	dstvar		4778106	1					
ANR	4778344	ExpressionStatement	R_FREE ( egg -> lang . dstval )	950:4:25415:25440	4778106	5	True				
ANR	4778345	CallExpression	R_FREE ( egg -> lang . dstval )		4778106	0					
ANR	4778346	Callee	R_FREE		4778106	0					
ANR	4778347	Identifier	R_FREE		4778106	0					
ANR	4778348	ArgumentList	egg -> lang . dstval		4778106	1					
ANR	4778349	Argument	egg -> lang . dstval		4778106	0					
ANR	4778350	MemberAccess	egg -> lang . dstval		4778106	0					
ANR	4778351	PtrMemberAccess	egg -> lang		4778106	0					
ANR	4778352	Identifier	egg		4778106	0					
ANR	4778353	Identifier	lang		4778106	1					
ANR	4778354	Identifier	dstval		4778106	1					
ANR	4778355	ReturnStatement	return 1 ;	951:4:25446:25454	4778106	6	True				
ANR	4778356	PrimaryExpression	1		4778106	0					
ANR	4778357	ExpressionStatement	"eprintf ( ""Parse error\\n"" )"	953:3:25464:25489	4778106	5	True				
ANR	4778358	CallExpression	"eprintf ( ""Parse error\\n"" )"		4778106	0					
ANR	4778359	Callee	eprintf		4778106	0					
ANR	4778360	Identifier	eprintf		4778106	0					
ANR	4778361	ArgumentList	"""Parse error\\n"""		4778106	1					
ANR	4778362	Argument	"""Parse error\\n"""		4778106	0					
ANR	4778363	PrimaryExpression	"""Parse error\\n"""		4778106	0					
ANR	4778364	IfStatement	if ( egg -> lang . dstval )		4778106	2					
ANR	4778365	Condition	egg -> lang . dstval	956:5:25503:25518	4778106	0	True				
ANR	4778366	MemberAccess	egg -> lang . dstval		4778106	0					
ANR	4778367	PtrMemberAccess	egg -> lang		4778106	0					
ANR	4778368	Identifier	egg		4778106	0					
ANR	4778369	Identifier	lang		4778106	1					
ANR	4778370	Identifier	dstval		4778106	1					
ANR	4778371	CompoundStatement		37:23:1077:1077	4778106	1					
ANR	4778372	ExpressionStatement	egg -> lang . dstval [ egg -> lang . ndstval ++ ] = c	957:2:25525:25566	4778106	0	True				
ANR	4778373	AssignmentExpression	egg -> lang . dstval [ egg -> lang . ndstval ++ ] = c		4778106	0		=			
ANR	4778374	ArrayIndexing	egg -> lang . dstval [ egg -> lang . ndstval ++ ]		4778106	0					
ANR	4778375	MemberAccess	egg -> lang . dstval		4778106	0					
ANR	4778376	PtrMemberAccess	egg -> lang		4778106	0					
ANR	4778377	Identifier	egg		4778106	0					
ANR	4778378	Identifier	lang		4778106	1					
ANR	4778379	Identifier	dstval		4778106	1					
ANR	4778380	PostIncDecOperationExpression	egg -> lang . ndstval ++		4778106	1					
ANR	4778381	MemberAccess	egg -> lang . ndstval		4778106	0					
ANR	4778382	PtrMemberAccess	egg -> lang		4778106	0					
ANR	4778383	Identifier	egg		4778106	0					
ANR	4778384	Identifier	lang		4778106	1					
ANR	4778385	Identifier	ndstval		4778106	1					
ANR	4778386	IncDec	++		4778106	1					
ANR	4778387	Identifier	c		4778106	1					
ANR	4778388	ExpressionStatement	egg -> lang . dstval [ egg -> lang . ndstval ] = 0	958:2:25570:25609	4778106	1	True				
ANR	4778389	AssignmentExpression	egg -> lang . dstval [ egg -> lang . ndstval ] = 0		4778106	0		=			
ANR	4778390	ArrayIndexing	egg -> lang . dstval [ egg -> lang . ndstval ]		4778106	0					
ANR	4778391	MemberAccess	egg -> lang . dstval		4778106	0					
ANR	4778392	PtrMemberAccess	egg -> lang		4778106	0					
ANR	4778393	Identifier	egg		4778106	0					
ANR	4778394	Identifier	lang		4778106	1					
ANR	4778395	Identifier	dstval		4778106	1					
ANR	4778396	MemberAccess	egg -> lang . ndstval		4778106	1					
ANR	4778397	PtrMemberAccess	egg -> lang		4778106	0					
ANR	4778398	Identifier	egg		4778106	0					
ANR	4778399	Identifier	lang		4778106	1					
ANR	4778400	Identifier	ndstval		4778106	1					
ANR	4778401	PrimaryExpression	0		4778106	1					
ANR	4778402	ReturnStatement	return 0 ;	960:1:25615:25623	4778106	3	True				
ANR	4778403	PrimaryExpression	0		4778106	0					
ANR	4778404	ReturnType	static int		4778106	1					
ANR	4778405	Identifier	parseinlinechar		4778106	2					
ANR	4778406	ParameterList	"REgg * egg , char c"		4778106	3					
ANR	4778407	Parameter	REgg * egg	920:27:24424:24432	4778106	0	True				
ANR	4778408	ParameterType	REgg *		4778106	0					
ANR	4778409	Identifier	egg		4778106	1					
ANR	4778410	Parameter	char c	920:38:24435:24440	4778106	1	True				
ANR	4778411	ParameterType	char		4778106	0					
ANR	4778412	Identifier	c		4778106	1					
ANR	4778413	CFGEntryNode	ENTRY		4778106		True				
ANR	4778414	CFGExitNode	EXIT		4778106		True				
ANR	4778415	Symbol	egg		4778106						
ANR	4778416	Symbol	CTX		4778106						
ANR	4778417	Symbol	egg -> lang . ninlines		4778106						
ANR	4778418	Symbol	* egg -> lang . ndstval		4778106						
ANR	4778419	Symbol	egg -> lang . dstvar		4778106						
ANR	4778420	Symbol	egg -> lang . inlinectr		4778106						
ANR	4778421	Symbol	egg -> lang		4778106						
ANR	4778422	Symbol	* egg -> lang		4778106						
ANR	4778423	Symbol	* egg		4778106						
ANR	4778424	Symbol	egg -> lang . ndstval		4778106						
ANR	4778425	Symbol	egg -> lang . dstval		4778106						
ANR	4778426	Symbol	egg -> lang . inlines [ egg -> lang . ninlines ] . body		4778106						
ANR	4778427	Symbol	egg -> lang . inlines		4778106						
ANR	4778428	Symbol	* * egg		4778106						
ANR	4778429	Symbol	* egg -> lang . ninlines		4778106						
ANR	4778430	Symbol	egg -> lang . syscallbody		4778106						
ANR	4778431	Symbol	c		4778106						
ANR	4778432	Symbol	NULL		4778106						
ANR	4778433	Symbol	* egg -> lang . dstval		4778106						
ANR	4778434	Symbol	egg -> lang . mode		4778106						
ANR	4778435	Symbol	skipspaces		4778106						
ANR	4778436	Symbol	egg -> lang . inlines [ egg -> lang . ninlines ] . name		4778106						
ANR	4778437	Symbol	egg -> lang . slurp		4778106						
ANR	4778438	Symbol	* egg -> lang . inlines		4778106						
ANR	4778439	Symbol	strdup		4778106						
ANR	4778440	Symbol	NORMAL		4778106						
ANR	4778441	Function	rcc_next	964:0:25694:33059							
ANR	4778442	FunctionDef	rcc_next (REgg * egg)		4778441	0					
ANR	4778443	CompoundStatement		964:32:25726:33059	4778441	0					
ANR	4778444	IdentifierDeclStatement	const char * ocn ;	965:1:25729:25744	4778441	0	True				
ANR	4778445	IdentifierDecl	* ocn		4778441	0					
ANR	4778446	IdentifierDeclType	const char *		4778441	0					
ANR	4778447	Identifier	ocn		4778441	1					
ANR	4778448	IdentifierDeclStatement	REggEmit * e = egg -> remit ;	966:1:25747:25771	4778441	1	True				
ANR	4778449	IdentifierDecl	* e = egg -> remit		4778441	0					
ANR	4778450	IdentifierDeclType	REggEmit *		4778441	0					
ANR	4778451	Identifier	e		4778441	1					
ANR	4778452	AssignmentExpression	* e = egg -> remit		4778441	2		=			
ANR	4778453	Identifier	e		4778441	0					
ANR	4778454	PtrMemberAccess	egg -> remit		4778441	1					
ANR	4778455	Identifier	egg		4778441	0					
ANR	4778456	Identifier	remit		4778441	1					
ANR	4778457	IdentifierDeclStatement	"char * str = NULL , * p , * ptr , buf [ 64 ] ;"	967:1:25774:25809	4778441	2	True				
ANR	4778458	IdentifierDecl	* str = NULL		4778441	0					
ANR	4778459	IdentifierDeclType	char *		4778441	0					
ANR	4778460	Identifier	str		4778441	1					
ANR	4778461	AssignmentExpression	* str = NULL		4778441	2		=			
ANR	4778462	Identifier	NULL		4778441	0					
ANR	4778463	Identifier	NULL		4778441	1					
ANR	4778464	IdentifierDecl	* p		4778441	1					
ANR	4778465	IdentifierDeclType	char *		4778441	0					
ANR	4778466	Identifier	p		4778441	1					
ANR	4778467	IdentifierDecl	* ptr		4778441	2					
ANR	4778468	IdentifierDeclType	char *		4778441	0					
ANR	4778469	Identifier	ptr		4778441	1					
ANR	4778470	IdentifierDecl	buf [ 64 ]		4778441	3					
ANR	4778471	IdentifierDeclType	char [ 64 ]		4778441	0					
ANR	4778472	Identifier	buf		4778441	1					
ANR	4778473	PrimaryExpression	64		4778441	2					
ANR	4778474	IdentifierDeclStatement	int i ;	968:1:25812:25817	4778441	3	True				
ANR	4778475	IdentifierDecl	i		4778441	0					
ANR	4778476	IdentifierDeclType	int		4778441	0					
ANR	4778477	Identifier	i		4778441	1					
ANR	4778478	IfStatement	if ( egg -> lang . setenviron )		4778441	4					
ANR	4778479	Condition	egg -> lang . setenviron	970:5:25825:25844	4778441	0	True				
ANR	4778480	MemberAccess	egg -> lang . setenviron		4778441	0					
ANR	4778481	PtrMemberAccess	egg -> lang		4778441	0					
ANR	4778482	Identifier	egg		4778441	0					
ANR	4778483	Identifier	lang		4778441	1					
ANR	4778484	Identifier	setenviron		4778441	1					
ANR	4778485	CompoundStatement		7:27:120:120	4778441	1					
ANR	4778486	ExpressionStatement	egg -> lang . elem [ egg -> lang . elem_n - 1 ] = 0	971:2:25851:25891	4778441	0	True				
ANR	4778487	AssignmentExpression	egg -> lang . elem [ egg -> lang . elem_n - 1 ] = 0		4778441	0		=			
ANR	4778488	ArrayIndexing	egg -> lang . elem [ egg -> lang . elem_n - 1 ]		4778441	0					
ANR	4778489	MemberAccess	egg -> lang . elem		4778441	0					
ANR	4778490	PtrMemberAccess	egg -> lang		4778441	0					
ANR	4778491	Identifier	egg		4778441	0					
ANR	4778492	Identifier	lang		4778441	1					
ANR	4778493	Identifier	elem		4778441	1					
ANR	4778494	AdditiveExpression	egg -> lang . elem_n - 1		4778441	1		-			
ANR	4778495	MemberAccess	egg -> lang . elem_n		4778441	0					
ANR	4778496	PtrMemberAccess	egg -> lang		4778441	0					
ANR	4778497	Identifier	egg		4778441	0					
ANR	4778498	Identifier	lang		4778441	1					
ANR	4778499	Identifier	elem_n		4778441	1					
ANR	4778500	PrimaryExpression	1		4778441	1					
ANR	4778501	PrimaryExpression	0		4778441	1					
ANR	4778502	ExpressionStatement	"r_sys_setenv ( egg -> lang . setenviron , egg -> lang . elem )"	972:2:25895:25946	4778441	1	True				
ANR	4778503	CallExpression	"r_sys_setenv ( egg -> lang . setenviron , egg -> lang . elem )"		4778441	0					
ANR	4778504	Callee	r_sys_setenv		4778441	0					
ANR	4778505	Identifier	r_sys_setenv		4778441	0					
ANR	4778506	ArgumentList	egg -> lang . setenviron		4778441	1					
ANR	4778507	Argument	egg -> lang . setenviron		4778441	0					
ANR	4778508	MemberAccess	egg -> lang . setenviron		4778441	0					
ANR	4778509	PtrMemberAccess	egg -> lang		4778441	0					
ANR	4778510	Identifier	egg		4778441	0					
ANR	4778511	Identifier	lang		4778441	1					
ANR	4778512	Identifier	setenviron		4778441	1					
ANR	4778513	Argument	egg -> lang . elem		4778441	1					
ANR	4778514	MemberAccess	egg -> lang . elem		4778441	0					
ANR	4778515	PtrMemberAccess	egg -> lang		4778441	0					
ANR	4778516	Identifier	egg		4778441	0					
ANR	4778517	Identifier	lang		4778441	1					
ANR	4778518	Identifier	elem		4778441	1					
ANR	4778519	ExpressionStatement	R_FREE ( egg -> lang . setenviron )	973:2:25950:25979	4778441	2	True				
ANR	4778520	CallExpression	R_FREE ( egg -> lang . setenviron )		4778441	0					
ANR	4778521	Callee	R_FREE		4778441	0					
ANR	4778522	Identifier	R_FREE		4778441	0					
ANR	4778523	ArgumentList	egg -> lang . setenviron		4778441	1					
ANR	4778524	Argument	egg -> lang . setenviron		4778441	0					
ANR	4778525	MemberAccess	egg -> lang . setenviron		4778441	0					
ANR	4778526	PtrMemberAccess	egg -> lang		4778441	0					
ANR	4778527	Identifier	egg		4778441	0					
ANR	4778528	Identifier	lang		4778441	1					
ANR	4778529	Identifier	setenviron		4778441	1					
ANR	4778530	ReturnStatement	return ;	974:2:25983:25989	4778441	3	True				
ANR	4778531	IfStatement	if ( egg -> lang . includefile )		4778441	5					
ANR	4778532	Condition	egg -> lang . includefile	976:5:25999:26019	4778441	0	True				
ANR	4778533	MemberAccess	egg -> lang . includefile		4778441	0					
ANR	4778534	PtrMemberAccess	egg -> lang		4778441	0					
ANR	4778535	Identifier	egg		4778441	0					
ANR	4778536	Identifier	lang		4778441	1					
ANR	4778537	Identifier	includefile		4778441	1					
ANR	4778538	CompoundStatement		14:2:299:317	4778441	1					
ANR	4778539	IdentifierDeclStatement	"char * p , * q , * path ;"	977:2:26026:26044	4778441	0	True				
ANR	4778540	IdentifierDecl	* p		4778441	0					
ANR	4778541	IdentifierDeclType	char *		4778441	0					
ANR	4778542	Identifier	p		4778441	1					
ANR	4778543	IdentifierDecl	* q		4778441	1					
ANR	4778544	IdentifierDeclType	char *		4778441	0					
ANR	4778545	Identifier	q		4778441	1					
ANR	4778546	IdentifierDecl	* path		4778441	2					
ANR	4778547	IdentifierDeclType	char *		4778441	0					
ANR	4778548	Identifier	path		4778441	1					
ANR	4778549	ExpressionStatement	egg -> lang . elem [ egg -> lang . elem_n - 1 ] = 0	978:2:26048:26088	4778441	1	True				
ANR	4778550	AssignmentExpression	egg -> lang . elem [ egg -> lang . elem_n - 1 ] = 0		4778441	0		=			
ANR	4778551	ArrayIndexing	egg -> lang . elem [ egg -> lang . elem_n - 1 ]		4778441	0					
ANR	4778552	MemberAccess	egg -> lang . elem		4778441	0					
ANR	4778553	PtrMemberAccess	egg -> lang		4778441	0					
ANR	4778554	Identifier	egg		4778441	0					
ANR	4778555	Identifier	lang		4778441	1					
ANR	4778556	Identifier	elem		4778441	1					
ANR	4778557	AdditiveExpression	egg -> lang . elem_n - 1		4778441	1		-			
ANR	4778558	MemberAccess	egg -> lang . elem_n		4778441	0					
ANR	4778559	PtrMemberAccess	egg -> lang		4778441	0					
ANR	4778560	Identifier	egg		4778441	0					
ANR	4778561	Identifier	lang		4778441	1					
ANR	4778562	Identifier	elem_n		4778441	1					
ANR	4778563	PrimaryExpression	1		4778441	1					
ANR	4778564	PrimaryExpression	0		4778441	1					
ANR	4778565	ExpressionStatement	"path = find_include ( egg -> lang . includedir , egg -> lang . includefile )"	979:2:26092:26157	4778441	2	True				
ANR	4778566	AssignmentExpression	"path = find_include ( egg -> lang . includedir , egg -> lang . includefile )"		4778441	0		=			
ANR	4778567	Identifier	path		4778441	0					
ANR	4778568	CallExpression	"find_include ( egg -> lang . includedir , egg -> lang . includefile )"		4778441	1					
ANR	4778569	Callee	find_include		4778441	0					
ANR	4778570	Identifier	find_include		4778441	0					
ANR	4778571	ArgumentList	egg -> lang . includedir		4778441	1					
ANR	4778572	Argument	egg -> lang . includedir		4778441	0					
ANR	4778573	MemberAccess	egg -> lang . includedir		4778441	0					
ANR	4778574	PtrMemberAccess	egg -> lang		4778441	0					
ANR	4778575	Identifier	egg		4778441	0					
ANR	4778576	Identifier	lang		4778441	1					
ANR	4778577	Identifier	includedir		4778441	1					
ANR	4778578	Argument	egg -> lang . includefile		4778441	1					
ANR	4778579	MemberAccess	egg -> lang . includefile		4778441	0					
ANR	4778580	PtrMemberAccess	egg -> lang		4778441	0					
ANR	4778581	Identifier	egg		4778441	0					
ANR	4778582	Identifier	lang		4778441	1					
ANR	4778583	Identifier	includefile		4778441	1					
ANR	4778584	IfStatement	if ( ! path )		4778441	3					
ANR	4778585	Condition	! path	980:6:26165:26169	4778441	0	True				
ANR	4778586	UnaryOperationExpression	! path		4778441	0					
ANR	4778587	UnaryOperator	!		4778441	0					
ANR	4778588	Identifier	path		4778441	1					
ANR	4778589	CompoundStatement		17:13:445:445	4778441	1					
ANR	4778590	ExpressionStatement	"eprintf ( ""Cannot find include file '%s'\\n"" , egg -> lang . elem )"	981:3:26177:26236	4778441	0	True				
ANR	4778591	CallExpression	"eprintf ( ""Cannot find include file '%s'\\n"" , egg -> lang . elem )"		4778441	0					
ANR	4778592	Callee	eprintf		4778441	0					
ANR	4778593	Identifier	eprintf		4778441	0					
ANR	4778594	ArgumentList	"""Cannot find include file '%s'\\n"""		4778441	1					
ANR	4778595	Argument	"""Cannot find include file '%s'\\n"""		4778441	0					
ANR	4778596	PrimaryExpression	"""Cannot find include file '%s'\\n"""		4778441	0					
ANR	4778597	Argument	egg -> lang . elem		4778441	1					
ANR	4778598	MemberAccess	egg -> lang . elem		4778441	0					
ANR	4778599	PtrMemberAccess	egg -> lang		4778441	0					
ANR	4778600	Identifier	egg		4778441	0					
ANR	4778601	Identifier	lang		4778441	1					
ANR	4778602	Identifier	elem		4778441	1					
ANR	4778603	ReturnStatement	return ;	982:3:26241:26247	4778441	1	True				
ANR	4778604	ExpressionStatement	R_FREE ( egg -> lang . includefile )	984:2:26255:26285	4778441	4	True				
ANR	4778605	CallExpression	R_FREE ( egg -> lang . includefile )		4778441	0					
ANR	4778606	Callee	R_FREE		4778441	0					
ANR	4778607	Identifier	R_FREE		4778441	0					
ANR	4778608	ArgumentList	egg -> lang . includefile		4778441	1					
ANR	4778609	Argument	egg -> lang . includefile		4778441	0					
ANR	4778610	MemberAccess	egg -> lang . includefile		4778441	0					
ANR	4778611	PtrMemberAccess	egg -> lang		4778441	0					
ANR	4778612	Identifier	egg		4778441	0					
ANR	4778613	Identifier	lang		4778441	1					
ANR	4778614	Identifier	includefile		4778441	1					
ANR	4778615	ExpressionStatement	R_FREE ( egg -> lang . includedir )	985:2:26289:26318	4778441	5	True				
ANR	4778616	CallExpression	R_FREE ( egg -> lang . includedir )		4778441	0					
ANR	4778617	Callee	R_FREE		4778441	0					
ANR	4778618	Identifier	R_FREE		4778441	0					
ANR	4778619	ArgumentList	egg -> lang . includedir		4778441	1					
ANR	4778620	Argument	egg -> lang . includedir		4778441	0					
ANR	4778621	MemberAccess	egg -> lang . includedir		4778441	0					
ANR	4778622	PtrMemberAccess	egg -> lang		4778441	0					
ANR	4778623	Identifier	egg		4778441	0					
ANR	4778624	Identifier	lang		4778441	1					
ANR	4778625	Identifier	includedir		4778441	1					
ANR	4778626	ExpressionStatement	rcc_reset_callname ( egg )	986:2:26322:26346	4778441	6	True				
ANR	4778627	CallExpression	rcc_reset_callname ( egg )		4778441	0					
ANR	4778628	Callee	rcc_reset_callname		4778441	0					
ANR	4778629	Identifier	rcc_reset_callname		4778441	0					
ANR	4778630	ArgumentList	egg		4778441	1					
ANR	4778631	Argument	egg		4778441	0					
ANR	4778632	Identifier	egg		4778441	0					
ANR	4778633	ExpressionStatement	"p = q = r_file_slurp ( path , NULL )"	987:2:26350:26383	4778441	7	True				
ANR	4778634	AssignmentExpression	"p = q = r_file_slurp ( path , NULL )"		4778441	0		=			
ANR	4778635	Identifier	p		4778441	0					
ANR	4778636	AssignmentExpression	"q = r_file_slurp ( path , NULL )"		4778441	1		=			
ANR	4778637	Identifier	q		4778441	0					
ANR	4778638	CallExpression	"r_file_slurp ( path , NULL )"		4778441	1					
ANR	4778639	Callee	r_file_slurp		4778441	0					
ANR	4778640	Identifier	r_file_slurp		4778441	0					
ANR	4778641	ArgumentList	path		4778441	1					
ANR	4778642	Argument	path		4778441	0					
ANR	4778643	Identifier	path		4778441	0					
ANR	4778644	Argument	NULL		4778441	1					
ANR	4778645	Identifier	NULL		4778441	0					
ANR	4778646	IfStatement	if ( p )		4778441	8					
ANR	4778647	Condition	p	988:6:26391:26391	4778441	0	True				
ANR	4778648	Identifier	p		4778441	0					
ANR	4778649	CompoundStatement		26:3:672:702	4778441	1					
ANR	4778650	IdentifierDeclStatement	int oline = ++ ( egg -> lang . line ) ;	989:3:26399:26429	4778441	0	True				
ANR	4778651	IdentifierDecl	oline = ++ ( egg -> lang . line )		4778441	0					
ANR	4778652	IdentifierDeclType	int		4778441	0					
ANR	4778653	Identifier	oline		4778441	1					
ANR	4778654	AssignmentExpression	oline = ++ ( egg -> lang . line )		4778441	2		=			
ANR	4778655	Identifier	oline		4778441	0					
ANR	4778656	UnaryExpression	++ ( egg -> lang . line )		4778441	1					
ANR	4778657	IncDec	++		4778441	0					
ANR	4778658	MemberAccess	egg -> lang . line		4778441	1					
ANR	4778659	PtrMemberAccess	egg -> lang		4778441	0					
ANR	4778660	Identifier	egg		4778441	0					
ANR	4778661	Identifier	lang		4778441	1					
ANR	4778662	Identifier	line		4778441	1					
ANR	4778663	ExpressionStatement	egg -> lang . elem [ 0 ] = 0	990:3:26434:26455	4778441	1	True				
ANR	4778664	AssignmentExpression	egg -> lang . elem [ 0 ] = 0		4778441	0		=			
ANR	4778665	ArrayIndexing	egg -> lang . elem [ 0 ]		4778441	0					
ANR	4778666	MemberAccess	egg -> lang . elem		4778441	0					
ANR	4778667	PtrMemberAccess	egg -> lang		4778441	0					
ANR	4778668	Identifier	egg		4778441	0					
ANR	4778669	Identifier	lang		4778441	1					
ANR	4778670	Identifier	elem		4778441	1					
ANR	4778671	PrimaryExpression	0		4778441	1					
ANR	4778672	PrimaryExpression	0		4778441	1					
ANR	4778673	ExpressionStatement	egg -> lang . elem_n = 0	991:3:26502:26522	4778441	2	True				
ANR	4778674	AssignmentExpression	egg -> lang . elem_n = 0		4778441	0		=			
ANR	4778675	MemberAccess	egg -> lang . elem_n		4778441	0					
ANR	4778676	PtrMemberAccess	egg -> lang		4778441	0					
ANR	4778677	Identifier	egg		4778441	0					
ANR	4778678	Identifier	lang		4778441	1					
ANR	4778679	Identifier	elem_n		4778441	1					
ANR	4778680	PrimaryExpression	0		4778441	1					
ANR	4778681	ExpressionStatement	egg -> lang . line = 0	992:3:26527:26545	4778441	3	True				
ANR	4778682	AssignmentExpression	egg -> lang . line = 0		4778441	0		=			
ANR	4778683	MemberAccess	egg -> lang . line		4778441	0					
ANR	4778684	PtrMemberAccess	egg -> lang		4778441	0					
ANR	4778685	Identifier	egg		4778441	0					
ANR	4778686	Identifier	lang		4778441	1					
ANR	4778687	Identifier	line		4778441	1					
ANR	4778688	PrimaryExpression	0		4778441	1					
ANR	4778689	ForStatement	for ( ; * p ; p ++ )		4778441	4					
ANR	4778690	Condition	* p	993:10:26557:26558	4778441	0	True				
ANR	4778691	UnaryOperationExpression	* p		4778441	0					
ANR	4778692	UnaryOperator	*		4778441	0					
ANR	4778693	Identifier	p		4778441	1					
ANR	4778694	PostIncDecOperationExpression	p ++	993:14:26561:26563	4778441	1	True				
ANR	4778695	Identifier	p		4778441	0					
ANR	4778696	IncDec	++		4778441	1					
ANR	4778697	CompoundStatement		30:19:839:839	4778441	2					
ANR	4778698	ExpressionStatement	"r_egg_lang_parsechar ( egg , * p )"	994:4:26572:26602	4778441	0	True				
ANR	4778699	CallExpression	"r_egg_lang_parsechar ( egg , * p )"		4778441	0					
ANR	4778700	Callee	r_egg_lang_parsechar		4778441	0					
ANR	4778701	Identifier	r_egg_lang_parsechar		4778441	0					
ANR	4778702	ArgumentList	egg		4778441	1					
ANR	4778703	Argument	egg		4778441	0					
ANR	4778704	Identifier	egg		4778441	0					
ANR	4778705	Argument	* p		4778441	1					
ANR	4778706	UnaryOperationExpression	* p		4778441	0					
ANR	4778707	UnaryOperator	*		4778441	0					
ANR	4778708	Identifier	p		4778441	1					
ANR	4778709	ExpressionStatement	free ( q )	996:3:26612:26620	4778441	5	True				
ANR	4778710	CallExpression	free ( q )		4778441	0					
ANR	4778711	Callee	free		4778441	0					
ANR	4778712	Identifier	free		4778441	0					
ANR	4778713	ArgumentList	q		4778441	1					
ANR	4778714	Argument	q		4778441	0					
ANR	4778715	Identifier	q		4778441	0					
ANR	4778716	ExpressionStatement	egg -> lang . line = oline	997:3:26625:26647	4778441	6	True				
ANR	4778717	AssignmentExpression	egg -> lang . line = oline		4778441	0		=			
ANR	4778718	MemberAccess	egg -> lang . line		4778441	0					
ANR	4778719	PtrMemberAccess	egg -> lang		4778441	0					
ANR	4778720	Identifier	egg		4778441	0					
ANR	4778721	Identifier	lang		4778441	1					
ANR	4778722	Identifier	line		4778441	1					
ANR	4778723	Identifier	oline		4778441	1					
ANR	4778724	ElseStatement	else		4778441	0					
ANR	4778725	CompoundStatement		35:9:931:931	4778441	0					
ANR	4778726	ExpressionStatement	"eprintf ( ""Cannot find '%s'\\n"" , path )"	999:3:26663:26699	4778441	0	True				
ANR	4778727	CallExpression	"eprintf ( ""Cannot find '%s'\\n"" , path )"		4778441	0					
ANR	4778728	Callee	eprintf		4778441	0					
ANR	4778729	Identifier	eprintf		4778441	0					
ANR	4778730	ArgumentList	"""Cannot find '%s'\\n"""		4778441	1					
ANR	4778731	Argument	"""Cannot find '%s'\\n"""		4778441	0					
ANR	4778732	PrimaryExpression	"""Cannot find '%s'\\n"""		4778441	0					
ANR	4778733	Argument	path		4778441	1					
ANR	4778734	Identifier	path		4778441	0					
ANR	4778735	ExpressionStatement	free ( path )	1001:2:26707:26718	4778441	9	True				
ANR	4778736	CallExpression	free ( path )		4778441	0					
ANR	4778737	Callee	free		4778441	0					
ANR	4778738	Identifier	free		4778441	0					
ANR	4778739	ArgumentList	path		4778441	1					
ANR	4778740	Argument	path		4778441	0					
ANR	4778741	Identifier	path		4778441	0					
ANR	4778742	ReturnStatement	return ;	1002:2:26722:26728	4778441	10	True				
ANR	4778743	ExpressionStatement	egg -> lang . docall = 1	1004:1:26734:26754	4778441	6	True				
ANR	4778744	AssignmentExpression	egg -> lang . docall = 1		4778441	0		=			
ANR	4778745	MemberAccess	egg -> lang . docall		4778441	0					
ANR	4778746	PtrMemberAccess	egg -> lang		4778441	0					
ANR	4778747	Identifier	egg		4778441	0					
ANR	4778748	Identifier	lang		4778441	1					
ANR	4778749	Identifier	docall		4778441	1					
ANR	4778750	PrimaryExpression	1		4778441	1					
ANR	4778751	IfStatement	if ( egg -> lang . callname )		4778441	7					
ANR	4778752	Condition	egg -> lang . callname	1005:5:26761:26778	4778441	0	True				
ANR	4778753	MemberAccess	egg -> lang . callname		4778441	0					
ANR	4778754	PtrMemberAccess	egg -> lang		4778441	0					
ANR	4778755	Identifier	egg		4778441	0					
ANR	4778756	Identifier	lang		4778441	1					
ANR	4778757	Identifier	callname		4778441	1					
ANR	4778758	CompoundStatement		42:25:1054:1054	4778441	1					
ANR	4778759	IfStatement	"if ( ! strcmp ( egg -> lang . callname , ""goto"" ) )"		4778441	0					
ANR	4778760	Condition	"! strcmp ( egg -> lang . callname , ""goto"" )"	1006:6:26789:26824	4778441	0	True				
ANR	4778761	UnaryOperationExpression	"! strcmp ( egg -> lang . callname , ""goto"" )"		4778441	0					
ANR	4778762	UnaryOperator	!		4778441	0					
ANR	4778763	CallExpression	"strcmp ( egg -> lang . callname , ""goto"" )"		4778441	1					
ANR	4778764	Callee	strcmp		4778441	0					
ANR	4778765	Identifier	strcmp		4778441	0					
ANR	4778766	ArgumentList	egg -> lang . callname		4778441	1					
ANR	4778767	Argument	egg -> lang . callname		4778441	0					
ANR	4778768	MemberAccess	egg -> lang . callname		4778441	0					
ANR	4778769	PtrMemberAccess	egg -> lang		4778441	0					
ANR	4778770	Identifier	egg		4778441	0					
ANR	4778771	Identifier	lang		4778441	1					
ANR	4778772	Identifier	callname		4778441	1					
ANR	4778773	Argument	"""goto"""		4778441	1					
ANR	4778774	PrimaryExpression	"""goto"""		4778441	0					
ANR	4778775	CompoundStatement		43:44:1100:1100	4778441	1					
ANR	4778776	IfStatement	if ( egg -> lang . nargs != 1 )		4778441	0					
ANR	4778777	Condition	egg -> lang . nargs != 1	1007:7:26836:26855	4778441	0	True				
ANR	4778778	EqualityExpression	egg -> lang . nargs != 1		4778441	0		!=			
ANR	4778779	MemberAccess	egg -> lang . nargs		4778441	0					
ANR	4778780	PtrMemberAccess	egg -> lang		4778441	0					
ANR	4778781	Identifier	egg		4778441	0					
ANR	4778782	Identifier	lang		4778441	1					
ANR	4778783	Identifier	nargs		4778441	1					
ANR	4778784	PrimaryExpression	1		4778441	1					
ANR	4778785	CompoundStatement		44:29:1131:1131	4778441	1					
ANR	4778786	ExpressionStatement	"eprintf ( ""Invalid number of arguments for goto()\\n"" )"	1008:4:26864:26916	4778441	0	True				
ANR	4778787	CallExpression	"eprintf ( ""Invalid number of arguments for goto()\\n"" )"		4778441	0					
ANR	4778788	Callee	eprintf		4778441	0					
ANR	4778789	Identifier	eprintf		4778441	0					
ANR	4778790	ArgumentList	"""Invalid number of arguments for goto()\\n"""		4778441	1					
ANR	4778791	Argument	"""Invalid number of arguments for goto()\\n"""		4778441	0					
ANR	4778792	PrimaryExpression	"""Invalid number of arguments for goto()\\n"""		4778441	0					
ANR	4778793	ReturnStatement	return ;	1009:4:26922:26928	4778441	1	True				
ANR	4778794	ExpressionStatement	"e -> jmp ( egg , egg -> lang . ctxpush [ CTX ] , 0 )"	1011:3:26938:26977	4778441	1	True				
ANR	4778795	CallExpression	"e -> jmp ( egg , egg -> lang . ctxpush [ CTX ] , 0 )"		4778441	0					
ANR	4778796	Callee	e -> jmp		4778441	0					
ANR	4778797	PtrMemberAccess	e -> jmp		4778441	0					
ANR	4778798	Identifier	e		4778441	0					
ANR	4778799	Identifier	jmp		4778441	1					
ANR	4778800	ArgumentList	egg		4778441	1					
ANR	4778801	Argument	egg		4778441	0					
ANR	4778802	Identifier	egg		4778441	0					
ANR	4778803	Argument	egg -> lang . ctxpush [ CTX ]		4778441	1					
ANR	4778804	ArrayIndexing	egg -> lang . ctxpush [ CTX ]		4778441	0					
ANR	4778805	MemberAccess	egg -> lang . ctxpush		4778441	0					
ANR	4778806	PtrMemberAccess	egg -> lang		4778441	0					
ANR	4778807	Identifier	egg		4778441	0					
ANR	4778808	Identifier	lang		4778441	1					
ANR	4778809	Identifier	ctxpush		4778441	1					
ANR	4778810	Identifier	CTX		4778441	1					
ANR	4778811	Argument	0		4778441	2					
ANR	4778812	PrimaryExpression	0		4778441	0					
ANR	4778813	ExpressionStatement	rcc_reset_callname ( egg )	1012:3:26982:27006	4778441	2	True				
ANR	4778814	CallExpression	rcc_reset_callname ( egg )		4778441	0					
ANR	4778815	Callee	rcc_reset_callname		4778441	0					
ANR	4778816	Identifier	rcc_reset_callname		4778441	0					
ANR	4778817	ArgumentList	egg		4778441	1					
ANR	4778818	Argument	egg		4778441	0					
ANR	4778819	Identifier	egg		4778441	0					
ANR	4778820	ReturnStatement	return ;	1013:3:27011:27017	4778441	3	True				
ANR	4778821	IfStatement	"if ( ! strcmp ( egg -> lang . callname , ""break"" ) )"		4778441	1					
ANR	4778822	Condition	"! strcmp ( egg -> lang . callname , ""break"" )"	1015:6:27029:27065	4778441	0	True				
ANR	4778823	UnaryOperationExpression	"! strcmp ( egg -> lang . callname , ""break"" )"		4778441	0					
ANR	4778824	UnaryOperator	!		4778441	0					
ANR	4778825	CallExpression	"strcmp ( egg -> lang . callname , ""break"" )"		4778441	1					
ANR	4778826	Callee	strcmp		4778441	0					
ANR	4778827	Identifier	strcmp		4778441	0					
ANR	4778828	ArgumentList	egg -> lang . callname		4778441	1					
ANR	4778829	Argument	egg -> lang . callname		4778441	0					
ANR	4778830	MemberAccess	egg -> lang . callname		4778441	0					
ANR	4778831	PtrMemberAccess	egg -> lang		4778441	0					
ANR	4778832	Identifier	egg		4778441	0					
ANR	4778833	Identifier	lang		4778441	1					
ANR	4778834	Identifier	callname		4778441	1					
ANR	4778835	Argument	"""break"""		4778441	1					
ANR	4778836	PrimaryExpression	"""break"""		4778441	0					
ANR	4778837	CompoundStatement		52:45:1341:1341	4778441	1					
ANR	4778838	ExpressionStatement	e -> trap ( egg )	1016:3:27073:27086	4778441	0	True				
ANR	4778839	CallExpression	e -> trap ( egg )		4778441	0					
ANR	4778840	Callee	e -> trap		4778441	0					
ANR	4778841	PtrMemberAccess	e -> trap		4778441	0					
ANR	4778842	Identifier	e		4778441	0					
ANR	4778843	Identifier	trap		4778441	1					
ANR	4778844	ArgumentList	egg		4778441	1					
ANR	4778845	Argument	egg		4778441	0					
ANR	4778846	Identifier	egg		4778441	0					
ANR	4778847	ExpressionStatement	rcc_reset_callname ( egg )	1017:3:27091:27115	4778441	1	True				
ANR	4778848	CallExpression	rcc_reset_callname ( egg )		4778441	0					
ANR	4778849	Callee	rcc_reset_callname		4778441	0					
ANR	4778850	Identifier	rcc_reset_callname		4778441	0					
ANR	4778851	ArgumentList	egg		4778441	1					
ANR	4778852	Argument	egg		4778441	0					
ANR	4778853	Identifier	egg		4778441	0					
ANR	4778854	ReturnStatement	return ;	1018:3:27120:27126	4778441	2	True				
ANR	4778855	ExpressionStatement	"ptr = strchr ( egg -> lang . callname , '=' )"	1020:2:27134:27172	4778441	2	True				
ANR	4778856	AssignmentExpression	"ptr = strchr ( egg -> lang . callname , '=' )"		4778441	0		=			
ANR	4778857	Identifier	ptr		4778441	0					
ANR	4778858	CallExpression	"strchr ( egg -> lang . callname , '=' )"		4778441	1					
ANR	4778859	Callee	strchr		4778441	0					
ANR	4778860	Identifier	strchr		4778441	0					
ANR	4778861	ArgumentList	egg -> lang . callname		4778441	1					
ANR	4778862	Argument	egg -> lang . callname		4778441	0					
ANR	4778863	MemberAccess	egg -> lang . callname		4778441	0					
ANR	4778864	PtrMemberAccess	egg -> lang		4778441	0					
ANR	4778865	Identifier	egg		4778441	0					
ANR	4778866	Identifier	lang		4778441	1					
ANR	4778867	Identifier	callname		4778441	1					
ANR	4778868	Argument	'='		4778441	1					
ANR	4778869	PrimaryExpression	'='		4778441	0					
ANR	4778870	IfStatement	if ( ptr )		4778441	3					
ANR	4778871	Condition	ptr	1021:6:27180:27182	4778441	0	True				
ANR	4778872	Identifier	ptr		4778441	0					
ANR	4778873	CompoundStatement		58:11:1458:1458	4778441	1					
ANR	4778874	ExpressionStatement	* ptr = '\\0'	1022:3:27190:27201	4778441	0	True				
ANR	4778875	AssignmentExpression	* ptr = '\\0'		4778441	0		=			
ANR	4778876	UnaryOperationExpression	* ptr		4778441	0					
ANR	4778877	UnaryOperator	*		4778441	0					
ANR	4778878	Identifier	ptr		4778441	1					
ANR	4778879	PrimaryExpression	'\\0'		4778441	1					
ANR	4778880	ExpressionStatement	ocn = skipspaces ( egg -> lang . callname )	1025:2:27258:27295	4778441	4	True				
ANR	4778881	AssignmentExpression	ocn = skipspaces ( egg -> lang . callname )		4778441	0		=			
ANR	4778882	Identifier	ocn		4778441	0					
ANR	4778883	CallExpression	skipspaces ( egg -> lang . callname )		4778441	1					
ANR	4778884	Callee	skipspaces		4778441	0					
ANR	4778885	Identifier	skipspaces		4778441	0					
ANR	4778886	ArgumentList	egg -> lang . callname		4778441	1					
ANR	4778887	Argument	egg -> lang . callname		4778441	0					
ANR	4778888	MemberAccess	egg -> lang . callname		4778441	0					
ANR	4778889	PtrMemberAccess	egg -> lang		4778441	0					
ANR	4778890	Identifier	egg		4778441	0					
ANR	4778891	Identifier	lang		4778441	1					
ANR	4778892	Identifier	callname		4778441	1					
ANR	4778893	IfStatement	if ( ! ocn )		4778441	5					
ANR	4778894	Condition	! ocn	1026:6:27303:27306	4778441	0	True				
ANR	4778895	UnaryOperationExpression	! ocn		4778441	0					
ANR	4778896	UnaryOperator	!		4778441	0					
ANR	4778897	Identifier	ocn		4778441	1					
ANR	4778898	CompoundStatement		63:12:1582:1582	4778441	1					
ANR	4778899	ReturnStatement	return ;	1027:3:27314:27320	4778441	0	True				
ANR	4778900	ExpressionStatement	"str = r_egg_mkvar ( egg , buf , ocn , 0 )"	1029:2:27328:27364	4778441	6	True				
ANR	4778901	AssignmentExpression	"str = r_egg_mkvar ( egg , buf , ocn , 0 )"		4778441	0		=			
ANR	4778902	Identifier	str		4778441	0					
ANR	4778903	CallExpression	"r_egg_mkvar ( egg , buf , ocn , 0 )"		4778441	1					
ANR	4778904	Callee	r_egg_mkvar		4778441	0					
ANR	4778905	Identifier	r_egg_mkvar		4778441	0					
ANR	4778906	ArgumentList	egg		4778441	1					
ANR	4778907	Argument	egg		4778441	0					
ANR	4778908	Identifier	egg		4778441	0					
ANR	4778909	Argument	buf		4778441	1					
ANR	4778910	Identifier	buf		4778441	0					
ANR	4778911	Argument	ocn		4778441	2					
ANR	4778912	Identifier	ocn		4778441	0					
ANR	4778913	Argument	0		4778441	3					
ANR	4778914	PrimaryExpression	0		4778441	0					
ANR	4778915	IfStatement	if ( ! str )		4778441	7					
ANR	4778916	Condition	! str	1030:6:27372:27375	4778441	0	True				
ANR	4778917	UnaryOperationExpression	! str		4778441	0					
ANR	4778918	UnaryOperator	!		4778441	0					
ANR	4778919	Identifier	str		4778441	1					
ANR	4778920	CompoundStatement		67:12:1651:1651	4778441	1					
ANR	4778921	ExpressionStatement	"eprintf ( ""Cannot mkvar\\n"" )"	1031:3:27383:27409	4778441	0	True				
ANR	4778922	CallExpression	"eprintf ( ""Cannot mkvar\\n"" )"		4778441	0					
ANR	4778923	Callee	eprintf		4778441	0					
ANR	4778924	Identifier	eprintf		4778441	0					
ANR	4778925	ArgumentList	"""Cannot mkvar\\n"""		4778441	1					
ANR	4778926	Argument	"""Cannot mkvar\\n"""		4778441	0					
ANR	4778927	PrimaryExpression	"""Cannot mkvar\\n"""		4778441	0					
ANR	4778928	ReturnStatement	return ;	1032:3:27414:27420	4778441	1	True				
ANR	4778929	IfStatement	if ( * ocn == '.' )		4778441	8					
ANR	4778930	Condition	* ocn == '.'	1034:6:27432:27442	4778441	0	True				
ANR	4778931	EqualityExpression	* ocn == '.'		4778441	0		==			
ANR	4778932	UnaryOperationExpression	* ocn		4778441	0					
ANR	4778933	UnaryOperator	*		4778441	0					
ANR	4778934	Identifier	ocn		4778441	1					
ANR	4778935	PrimaryExpression	'.'		4778441	1					
ANR	4778936	CompoundStatement		71:19:1718:1718	4778441	1					
ANR	4778937	ExpressionStatement	"e -> call ( egg , str , 1 )"	1035:3:27450:27471	4778441	0	True				
ANR	4778938	CallExpression	"e -> call ( egg , str , 1 )"		4778441	0					
ANR	4778939	Callee	e -> call		4778441	0					
ANR	4778940	PtrMemberAccess	e -> call		4778441	0					
ANR	4778941	Identifier	e		4778441	0					
ANR	4778942	Identifier	call		4778441	1					
ANR	4778943	ArgumentList	egg		4778441	1					
ANR	4778944	Argument	egg		4778441	0					
ANR	4778945	Identifier	egg		4778441	0					
ANR	4778946	Argument	str		4778441	1					
ANR	4778947	Identifier	str		4778441	0					
ANR	4778948	Argument	1		4778441	2					
ANR	4778949	PrimaryExpression	1		4778441	0					
ANR	4778950	IfStatement	"if ( ! strcmp ( str , ""while"" ) )"		4778441	9					
ANR	4778951	Condition	"! strcmp ( str , ""while"" )"	1037:6:27483:27504	4778441	0	True				
ANR	4778952	UnaryOperationExpression	"! strcmp ( str , ""while"" )"		4778441	0					
ANR	4778953	UnaryOperator	!		4778441	0					
ANR	4778954	CallExpression	"strcmp ( str , ""while"" )"		4778441	1					
ANR	4778955	Callee	strcmp		4778441	0					
ANR	4778956	Identifier	strcmp		4778441	0					
ANR	4778957	ArgumentList	str		4778441	1					
ANR	4778958	Argument	str		4778441	0					
ANR	4778959	Identifier	str		4778441	0					
ANR	4778960	Argument	"""while"""		4778441	1					
ANR	4778961	PrimaryExpression	"""while"""		4778441	0					
ANR	4778962	CompoundStatement		75:3:1785:1798	4778441	1					
ANR	4778963	IdentifierDeclStatement	char var [ 128 ] ;	1038:3:27512:27525	4778441	0	True				
ANR	4778964	IdentifierDecl	var [ 128 ]		4778441	0					
ANR	4778965	IdentifierDeclType	char [ 128 ]		4778441	0					
ANR	4778966	Identifier	var		4778441	1					
ANR	4778967	PrimaryExpression	128		4778441	2					
ANR	4778968	IfStatement	if ( egg -> lang . lastctxdelta >= 0 )		4778441	1					
ANR	4778969	Condition	egg -> lang . lastctxdelta >= 0	1039:7:27534:27560	4778441	0	True				
ANR	4778970	RelationalExpression	egg -> lang . lastctxdelta >= 0		4778441	0		>=			
ANR	4778971	MemberAccess	egg -> lang . lastctxdelta		4778441	0					
ANR	4778972	PtrMemberAccess	egg -> lang		4778441	0					
ANR	4778973	Identifier	egg		4778441	0					
ANR	4778974	Identifier	lang		4778441	1					
ANR	4778975	Identifier	lastctxdelta		4778441	1					
ANR	4778976	PrimaryExpression	0		4778441	1					
ANR	4778977	CompoundStatement		76:36:1836:1836	4778441	1					
ANR	4778978	ExpressionStatement	"exit ( eprintf ( ""ERROR: Unsupported while syntax\\n"" ) )"	1040:4:27569:27621	4778441	0	True				
ANR	4778979	CallExpression	"exit ( eprintf ( ""ERROR: Unsupported while syntax\\n"" ) )"		4778441	0					
ANR	4778980	Callee	exit		4778441	0					
ANR	4778981	Identifier	exit		4778441	0					
ANR	4778982	ArgumentList	"eprintf ( ""ERROR: Unsupported while syntax\\n"" )"		4778441	1					
ANR	4778983	Argument	"eprintf ( ""ERROR: Unsupported while syntax\\n"" )"		4778441	0					
ANR	4778984	CallExpression	"eprintf ( ""ERROR: Unsupported while syntax\\n"" )"		4778441	0					
ANR	4778985	Callee	eprintf		4778441	0					
ANR	4778986	Identifier	eprintf		4778441	0					
ANR	4778987	ArgumentList	"""ERROR: Unsupported while syntax\\n"""		4778441	1					
ANR	4778988	Argument	"""ERROR: Unsupported while syntax\\n"""		4778441	0					
ANR	4778989	PrimaryExpression	"""ERROR: Unsupported while syntax\\n"""		4778441	0					
ANR	4778990	ExpressionStatement	"sprintf ( var , ""__begin_%d_%d_%d\\n"" , egg -> lang . nfunctions , CTX , egg -> lang . nestedi [ CTX - 1 ] )"	1042:3:27631:27721	4778441	2	True				
ANR	4778991	CallExpression	"sprintf ( var , ""__begin_%d_%d_%d\\n"" , egg -> lang . nfunctions , CTX , egg -> lang . nestedi [ CTX - 1 ] )"		4778441	0					
ANR	4778992	Callee	sprintf		4778441	0					
ANR	4778993	Identifier	sprintf		4778441	0					
ANR	4778994	ArgumentList	var		4778441	1					
ANR	4778995	Argument	var		4778441	0					
ANR	4778996	Identifier	var		4778441	0					
ANR	4778997	Argument	"""__begin_%d_%d_%d\\n"""		4778441	1					
ANR	4778998	PrimaryExpression	"""__begin_%d_%d_%d\\n"""		4778441	0					
ANR	4778999	Argument	egg -> lang . nfunctions		4778441	2					
ANR	4779000	MemberAccess	egg -> lang . nfunctions		4778441	0					
ANR	4779001	PtrMemberAccess	egg -> lang		4778441	0					
ANR	4779002	Identifier	egg		4778441	0					
ANR	4779003	Identifier	lang		4778441	1					
ANR	4779004	Identifier	nfunctions		4778441	1					
ANR	4779005	Argument	CTX		4778441	3					
ANR	4779006	Identifier	CTX		4778441	0					
ANR	4779007	Argument	egg -> lang . nestedi [ CTX - 1 ]		4778441	4					
ANR	4779008	ArrayIndexing	egg -> lang . nestedi [ CTX - 1 ]		4778441	0					
ANR	4779009	MemberAccess	egg -> lang . nestedi		4778441	0					
ANR	4779010	PtrMemberAccess	egg -> lang		4778441	0					
ANR	4779011	Identifier	egg		4778441	0					
ANR	4779012	Identifier	lang		4778441	1					
ANR	4779013	Identifier	nestedi		4778441	1					
ANR	4779014	AdditiveExpression	CTX - 1		4778441	1		-			
ANR	4779015	Identifier	CTX		4778441	0					
ANR	4779016	PrimaryExpression	1		4778441	1					
ANR	4779017	ExpressionStatement	"e -> while_end ( egg , var )"	1043:3:27726:27749	4778441	3	True				
ANR	4779018	CallExpression	"e -> while_end ( egg , var )"		4778441	0					
ANR	4779019	Callee	e -> while_end		4778441	0					
ANR	4779020	PtrMemberAccess	e -> while_end		4778441	0					
ANR	4779021	Identifier	e		4778441	0					
ANR	4779022	Identifier	while_end		4778441	1					
ANR	4779023	ArgumentList	egg		4778441	1					
ANR	4779024	Argument	egg		4778441	0					
ANR	4779025	Identifier	egg		4778441	0					
ANR	4779026	Argument	var		4778441	1					
ANR	4779027	Identifier	var		4778441	0					
ANR	4779028	ExpressionStatement	"eprintf ( ""------------------------------------------ lastctx: %d\\n"" , egg -> lang . lastctxdelta )"	1045:3:27784:27876	4778441	4	True				
ANR	4779029	CallExpression	"eprintf ( ""------------------------------------------ lastctx: %d\\n"" , egg -> lang . lastctxdelta )"		4778441	0					
ANR	4779030	Callee	eprintf		4778441	0					
ANR	4779031	Identifier	eprintf		4778441	0					
ANR	4779032	ArgumentList	"""------------------------------------------ lastctx: %d\\n"""		4778441	1					
ANR	4779033	Argument	"""------------------------------------------ lastctx: %d\\n"""		4778441	0					
ANR	4779034	PrimaryExpression	"""------------------------------------------ lastctx: %d\\n"""		4778441	0					
ANR	4779035	Argument	egg -> lang . lastctxdelta		4778441	1					
ANR	4779036	MemberAccess	egg -> lang . lastctxdelta		4778441	0					
ANR	4779037	PtrMemberAccess	egg -> lang		4778441	0					
ANR	4779038	Identifier	egg		4778441	0					
ANR	4779039	Identifier	lang		4778441	1					
ANR	4779040	Identifier	lastctxdelta		4778441	1					
ANR	4779041	ExpressionStatement	"rcc_printf ( ""  pop %%eax\\n"" )"	1049:3:28098:28126	4778441	5	True				
ANR	4779042	CallExpression	"rcc_printf ( ""  pop %%eax\\n"" )"		4778441	0					
ANR	4779043	Callee	rcc_printf		4778441	0					
ANR	4779044	Identifier	rcc_printf		4778441	0					
ANR	4779045	ArgumentList	"""  pop %%eax\\n"""		4778441	1					
ANR	4779046	Argument	"""  pop %%eax\\n"""		4778441	0					
ANR	4779047	PrimaryExpression	"""  pop %%eax\\n"""		4778441	0					
ANR	4779048	ExpressionStatement	"rcc_printf ( ""  cmp $0, %%eax\\n"" )"	1050:3:28131:28163	4778441	6	True				
ANR	4779049	CallExpression	"rcc_printf ( ""  cmp $0, %%eax\\n"" )"		4778441	0					
ANR	4779050	Callee	rcc_printf		4778441	0					
ANR	4779051	Identifier	rcc_printf		4778441	0					
ANR	4779052	ArgumentList	"""  cmp $0, %%eax\\n"""		4778441	1					
ANR	4779053	Argument	"""  cmp $0, %%eax\\n"""		4778441	0					
ANR	4779054	PrimaryExpression	"""  cmp $0, %%eax\\n"""		4778441	0					
ANR	4779055	IfStatement	if ( egg -> lang . lastctxdelta < 0 )		4778441	7					
ANR	4779056	Condition	egg -> lang . lastctxdelta < 0	1054:7:28311:28336	4778441	0	True				
ANR	4779057	RelationalExpression	egg -> lang . lastctxdelta < 0		4778441	0		<			
ANR	4779058	MemberAccess	egg -> lang . lastctxdelta		4778441	0					
ANR	4779059	PtrMemberAccess	egg -> lang		4778441	0					
ANR	4779060	Identifier	egg		4778441	0					
ANR	4779061	Identifier	lang		4778441	1					
ANR	4779062	Identifier	lastctxdelta		4778441	1					
ANR	4779063	PrimaryExpression	0		4778441	1					
ANR	4779064	CompoundStatement		91:35:2612:2612	4778441	1					
ANR	4779065	ExpressionStatement	"rcc_printf ( ""  jnz %s\\n"" , get_frame_label ( 1 ) )"	1055:4:28345:28391	4778441	0	True				
ANR	4779066	CallExpression	"rcc_printf ( ""  jnz %s\\n"" , get_frame_label ( 1 ) )"		4778441	0					
ANR	4779067	Callee	rcc_printf		4778441	0					
ANR	4779068	Identifier	rcc_printf		4778441	0					
ANR	4779069	ArgumentList	"""  jnz %s\\n"""		4778441	1					
ANR	4779070	Argument	"""  jnz %s\\n"""		4778441	0					
ANR	4779071	PrimaryExpression	"""  jnz %s\\n"""		4778441	0					
ANR	4779072	Argument	get_frame_label ( 1 )		4778441	1					
ANR	4779073	CallExpression	get_frame_label ( 1 )		4778441	0					
ANR	4779074	Callee	get_frame_label		4778441	0					
ANR	4779075	Identifier	get_frame_label		4778441	0					
ANR	4779076	ArgumentList	1		4778441	1					
ANR	4779077	Argument	1		4778441	0					
ANR	4779078	PrimaryExpression	1		4778441	0					
ANR	4779079	ElseStatement	else		4778441	0					
ANR	4779080	CompoundStatement		93:10:2676:2676	4778441	0					
ANR	4779081	ExpressionStatement	"rcc_printf ( ""  jnz %s\\n"" , get_frame_label ( 0 ) )"	1057:4:28409:28455	4778441	0	True				
ANR	4779082	CallExpression	"rcc_printf ( ""  jnz %s\\n"" , get_frame_label ( 0 ) )"		4778441	0					
ANR	4779083	Callee	rcc_printf		4778441	0					
ANR	4779084	Identifier	rcc_printf		4778441	0					
ANR	4779085	ArgumentList	"""  jnz %s\\n"""		4778441	1					
ANR	4779086	Argument	"""  jnz %s\\n"""		4778441	0					
ANR	4779087	PrimaryExpression	"""  jnz %s\\n"""		4778441	0					
ANR	4779088	Argument	get_frame_label ( 0 )		4778441	1					
ANR	4779089	CallExpression	get_frame_label ( 0 )		4778441	0					
ANR	4779090	Callee	get_frame_label		4778441	0					
ANR	4779091	Identifier	get_frame_label		4778441	0					
ANR	4779092	ArgumentList	0		4778441	1					
ANR	4779093	Argument	0		4778441	0					
ANR	4779094	PrimaryExpression	0		4778441	0					
ANR	4779095	ExpressionStatement	egg -> lang . nargs = 0	1062:3:28541:28560	4778441	8	True				
ANR	4779096	AssignmentExpression	egg -> lang . nargs = 0		4778441	0		=			
ANR	4779097	MemberAccess	egg -> lang . nargs		4778441	0					
ANR	4779098	PtrMemberAccess	egg -> lang		4778441	0					
ANR	4779099	Identifier	egg		4778441	0					
ANR	4779100	Identifier	lang		4778441	1					
ANR	4779101	Identifier	nargs		4778441	1					
ANR	4779102	PrimaryExpression	0		4778441	1					
ANR	4779103	ElseStatement	else		4778441	0					
ANR	4779104	CompoundStatement		100:9:2844:2844	4778441	0					
ANR	4779105	ForStatement	for ( i = 0 ; i < egg -> lang . nsyscalls ; i ++ )		4778441	0					
ANR	4779106	ForInit	i = 0 ;	1064:8:28581:28586	4778441	0	True				
ANR	4779107	AssignmentExpression	i = 0		4778441	0		=			
ANR	4779108	Identifier	i		4778441	0					
ANR	4779109	PrimaryExpression	0		4778441	1					
ANR	4779110	Condition	i < egg -> lang . nsyscalls	1064:15:28588:28610	4778441	1	True				
ANR	4779111	RelationalExpression	i < egg -> lang . nsyscalls		4778441	0		<			
ANR	4779112	Identifier	i		4778441	0					
ANR	4779113	MemberAccess	egg -> lang . nsyscalls		4778441	1					
ANR	4779114	PtrMemberAccess	egg -> lang		4778441	0					
ANR	4779115	Identifier	egg		4778441	0					
ANR	4779116	Identifier	lang		4778441	1					
ANR	4779117	Identifier	nsyscalls		4778441	1					
ANR	4779118	PostIncDecOperationExpression	i ++	1064:40:28613:28615	4778441	2	True				
ANR	4779119	Identifier	i		4778441	0					
ANR	4779120	IncDec	++		4778441	1					
ANR	4779121	CompoundStatement		101:45:2891:2891	4778441	3					
ANR	4779122	IfStatement	"if ( ! strcmp ( str , egg -> lang . syscalls [ i ] . name ) )"		4778441	0					
ANR	4779123	Condition	"! strcmp ( str , egg -> lang . syscalls [ i ] . name )"	1065:8:28628:28668	4778441	0	True				
ANR	4779124	UnaryOperationExpression	"! strcmp ( str , egg -> lang . syscalls [ i ] . name )"		4778441	0					
ANR	4779125	UnaryOperator	!		4778441	0					
ANR	4779126	CallExpression	"strcmp ( str , egg -> lang . syscalls [ i ] . name )"		4778441	1					
ANR	4779127	Callee	strcmp		4778441	0					
ANR	4779128	Identifier	strcmp		4778441	0					
ANR	4779129	ArgumentList	str		4778441	1					
ANR	4779130	Argument	str		4778441	0					
ANR	4779131	Identifier	str		4778441	0					
ANR	4779132	Argument	egg -> lang . syscalls [ i ] . name		4778441	1					
ANR	4779133	MemberAccess	egg -> lang . syscalls [ i ] . name		4778441	0					
ANR	4779134	ArrayIndexing	egg -> lang . syscalls [ i ]		4778441	0					
ANR	4779135	MemberAccess	egg -> lang . syscalls		4778441	0					
ANR	4779136	PtrMemberAccess	egg -> lang		4778441	0					
ANR	4779137	Identifier	egg		4778441	0					
ANR	4779138	Identifier	lang		4778441	1					
ANR	4779139	Identifier	syscalls		4778441	1					
ANR	4779140	Identifier	i		4778441	1					
ANR	4779141	Identifier	name		4778441	1					
ANR	4779142	CompoundStatement		102:51:2944:2944	4778441	1					
ANR	4779143	ExpressionStatement	p = egg -> lang . syscallbody	1066:5:28678:28703	4778441	0	True				
ANR	4779144	AssignmentExpression	p = egg -> lang . syscallbody		4778441	0		=			
ANR	4779145	Identifier	p		4778441	0					
ANR	4779146	MemberAccess	egg -> lang . syscallbody		4778441	1					
ANR	4779147	PtrMemberAccess	egg -> lang		4778441	0					
ANR	4779148	Identifier	egg		4778441	0					
ANR	4779149	Identifier	lang		4778441	1					
ANR	4779150	Identifier	syscallbody		4778441	1					
ANR	4779151	ExpressionStatement	"e -> comment ( egg , ""set syscall args"" )"	1067:5:28710:28746	4778441	1	True				
ANR	4779152	CallExpression	"e -> comment ( egg , ""set syscall args"" )"		4778441	0					
ANR	4779153	Callee	e -> comment		4778441	0					
ANR	4779154	PtrMemberAccess	e -> comment		4778441	0					
ANR	4779155	Identifier	e		4778441	0					
ANR	4779156	Identifier	comment		4778441	1					
ANR	4779157	ArgumentList	egg		4778441	1					
ANR	4779158	Argument	egg		4778441	0					
ANR	4779159	Identifier	egg		4778441	0					
ANR	4779160	Argument	"""set syscall args"""		4778441	1					
ANR	4779161	PrimaryExpression	"""set syscall args"""		4778441	0					
ANR	4779162	ExpressionStatement	"e -> syscall_args ( egg , egg -> lang . nargs )"	1068:5:28753:28791	4778441	2	True				
ANR	4779163	CallExpression	"e -> syscall_args ( egg , egg -> lang . nargs )"		4778441	0					
ANR	4779164	Callee	e -> syscall_args		4778441	0					
ANR	4779165	PtrMemberAccess	e -> syscall_args		4778441	0					
ANR	4779166	Identifier	e		4778441	0					
ANR	4779167	Identifier	syscall_args		4778441	1					
ANR	4779168	ArgumentList	egg		4778441	1					
ANR	4779169	Argument	egg		4778441	0					
ANR	4779170	Identifier	egg		4778441	0					
ANR	4779171	Argument	egg -> lang . nargs		4778441	1					
ANR	4779172	MemberAccess	egg -> lang . nargs		4778441	0					
ANR	4779173	PtrMemberAccess	egg -> lang		4778441	0					
ANR	4779174	Identifier	egg		4778441	0					
ANR	4779175	Identifier	lang		4778441	1					
ANR	4779176	Identifier	nargs		4778441	1					
ANR	4779177	ExpressionStatement	egg -> lang . docall = 0	1069:5:28798:28818	4778441	3	True				
ANR	4779178	AssignmentExpression	egg -> lang . docall = 0		4778441	0		=			
ANR	4779179	MemberAccess	egg -> lang . docall		4778441	0					
ANR	4779180	PtrMemberAccess	egg -> lang		4778441	0					
ANR	4779181	Identifier	egg		4778441	0					
ANR	4779182	Identifier	lang		4778441	1					
ANR	4779183	Identifier	docall		4778441	1					
ANR	4779184	PrimaryExpression	0		4778441	1					
ANR	4779185	ExpressionStatement	"e -> comment ( egg , ""syscall"" )"	1070:5:28825:28852	4778441	4	True				
ANR	4779186	CallExpression	"e -> comment ( egg , ""syscall"" )"		4778441	0					
ANR	4779187	Callee	e -> comment		4778441	0					
ANR	4779188	PtrMemberAccess	e -> comment		4778441	0					
ANR	4779189	Identifier	e		4778441	0					
ANR	4779190	Identifier	comment		4778441	1					
ANR	4779191	ArgumentList	egg		4778441	1					
ANR	4779192	Argument	egg		4778441	0					
ANR	4779193	Identifier	egg		4778441	0					
ANR	4779194	Argument	"""syscall"""		4778441	1					
ANR	4779195	PrimaryExpression	"""syscall"""		4778441	0					
ANR	4779196	ExpressionStatement	"r_egg_lang_parsechar ( egg , '\\n' )"	1071:5:28859:28891	4778441	5	True				
ANR	4779197	CallExpression	"r_egg_lang_parsechar ( egg , '\\n' )"		4778441	0					
ANR	4779198	Callee	r_egg_lang_parsechar		4778441	0					
ANR	4779199	Identifier	r_egg_lang_parsechar		4778441	0					
ANR	4779200	ArgumentList	egg		4778441	1					
ANR	4779201	Argument	egg		4778441	0					
ANR	4779202	Identifier	egg		4778441	0					
ANR	4779203	Argument	'\\n'		4778441	1					
ANR	4779204	PrimaryExpression	'\\n'		4778441	0					
ANR	4779205	IfStatement	if ( p )		4778441	6					
ANR	4779206	Condition	p	1072:9:28926:28926	4778441	0	True				
ANR	4779207	Identifier	p		4778441	0					
ANR	4779208	CompoundStatement		109:12:3202:3202	4778441	1					
ANR	4779209	ForStatement	for ( ; * p ; p ++ )		4778441	0					
ANR	4779210	Condition	* p	1073:13:28944:28945	4778441	0	True				
ANR	4779211	UnaryOperationExpression	* p		4778441	0					
ANR	4779212	UnaryOperator	*		4778441	0					
ANR	4779213	Identifier	p		4778441	1					
ANR	4779214	PostIncDecOperationExpression	p ++	1073:17:28948:28950	4778441	1	True				
ANR	4779215	Identifier	p		4778441	0					
ANR	4779216	IncDec	++		4778441	1					
ANR	4779217	CompoundStatement		110:22:3226:3226	4778441	2					
ANR	4779218	ExpressionStatement	"r_egg_lang_parsechar ( egg , * p )"	1074:7:28962:28992	4778441	0	True				
ANR	4779219	CallExpression	"r_egg_lang_parsechar ( egg , * p )"		4778441	0					
ANR	4779220	Callee	r_egg_lang_parsechar		4778441	0					
ANR	4779221	Identifier	r_egg_lang_parsechar		4778441	0					
ANR	4779222	ArgumentList	egg		4778441	1					
ANR	4779223	Argument	egg		4778441	0					
ANR	4779224	Identifier	egg		4778441	0					
ANR	4779225	Argument	* p		4778441	1					
ANR	4779226	UnaryOperationExpression	* p		4778441	0					
ANR	4779227	UnaryOperator	*		4778441	0					
ANR	4779228	Identifier	p		4778441	1					
ANR	4779229	ElseStatement	else		4778441	0					
ANR	4779230	CompoundStatement		114:6:3295:3342	4778441	0					
ANR	4779231	IdentifierDeclStatement	"char * q , * s = e -> syscall ( egg , egg -> lang . nargs ) ;"	1077:6:29022:29069	4778441	0	True				
ANR	4779232	IdentifierDecl	* q		4778441	0					
ANR	4779233	IdentifierDeclType	char *		4778441	0					
ANR	4779234	Identifier	q		4778441	1					
ANR	4779235	IdentifierDecl	"* s = e -> syscall ( egg , egg -> lang . nargs )"		4778441	1					
ANR	4779236	IdentifierDeclType	char *		4778441	0					
ANR	4779237	Identifier	s		4778441	1					
ANR	4779238	AssignmentExpression	"* s = e -> syscall ( egg , egg -> lang . nargs )"		4778441	2		=			
ANR	4779239	Identifier	s		4778441	0					
ANR	4779240	CallExpression	"e -> syscall ( egg , egg -> lang . nargs )"		4778441	1					
ANR	4779241	Callee	e -> syscall		4778441	0					
ANR	4779242	PtrMemberAccess	e -> syscall		4778441	0					
ANR	4779243	Identifier	e		4778441	0					
ANR	4779244	Identifier	syscall		4778441	1					
ANR	4779245	ArgumentList	egg		4778441	1					
ANR	4779246	Argument	egg		4778441	0					
ANR	4779247	Identifier	egg		4778441	0					
ANR	4779248	Argument	egg -> lang . nargs		4778441	1					
ANR	4779249	MemberAccess	egg -> lang . nargs		4778441	0					
ANR	4779250	PtrMemberAccess	egg -> lang		4778441	0					
ANR	4779251	Identifier	egg		4778441	0					
ANR	4779252	Identifier	lang		4778441	1					
ANR	4779253	Identifier	nargs		4778441	1					
ANR	4779254	IfStatement	if ( s )		4778441	1					
ANR	4779255	Condition	s	1078:10:29081:29081	4778441	0	True				
ANR	4779256	Identifier	s		4778441	0					
ANR	4779257	CompoundStatement		115:13:3357:3357	4778441	1					
ANR	4779258	ForStatement	for ( q = s ; * q ; q ++ )		4778441	0					
ANR	4779259	ForInit	q = s ;	1079:12:29098:29103	4778441	0	True				
ANR	4779260	AssignmentExpression	q = s		4778441	0		=			
ANR	4779261	Identifier	q		4778441	0					
ANR	4779262	Identifier	s		4778441	1					
ANR	4779263	Condition	* q	1079:19:29105:29106	4778441	1	True				
ANR	4779264	UnaryOperationExpression	* q		4778441	0					
ANR	4779265	UnaryOperator	*		4778441	0					
ANR	4779266	Identifier	q		4778441	1					
ANR	4779267	PostIncDecOperationExpression	q ++	1079:23:29109:29111	4778441	2	True				
ANR	4779268	Identifier	q		4778441	0					
ANR	4779269	IncDec	++		4778441	1					
ANR	4779270	CompoundStatement		116:28:3387:3387	4778441	3					
ANR	4779271	ExpressionStatement	"r_egg_lang_parsechar ( egg , * q )"	1080:8:29124:29154	4778441	0	True				
ANR	4779272	CallExpression	"r_egg_lang_parsechar ( egg , * q )"		4778441	0					
ANR	4779273	Callee	r_egg_lang_parsechar		4778441	0					
ANR	4779274	Identifier	r_egg_lang_parsechar		4778441	0					
ANR	4779275	ArgumentList	egg		4778441	1					
ANR	4779276	Argument	egg		4778441	0					
ANR	4779277	Identifier	egg		4778441	0					
ANR	4779278	Argument	* q		4778441	1					
ANR	4779279	UnaryOperationExpression	* q		4778441	0					
ANR	4779280	UnaryOperator	*		4778441	0					
ANR	4779281	Identifier	q		4778441	1					
ANR	4779282	ExpressionStatement	free ( s )	1082:7:29172:29180	4778441	1	True				
ANR	4779283	CallExpression	free ( s )		4778441	0					
ANR	4779284	Callee	free		4778441	0					
ANR	4779285	Identifier	free		4778441	0					
ANR	4779286	ArgumentList	s		4778441	1					
ANR	4779287	Argument	s		4778441	0					
ANR	4779288	Identifier	s		4778441	0					
ANR	4779289	ElseStatement	else		4778441	0					
ANR	4779290	CompoundStatement		120:13:3468:3468	4778441	0					
ANR	4779291	ExpressionStatement	"eprintf ( ""Cannot get @syscall payload\\n"" )"	1084:7:29204:29245	4778441	0	True				
ANR	4779292	CallExpression	"eprintf ( ""Cannot get @syscall payload\\n"" )"		4778441	0					
ANR	4779293	Callee	eprintf		4778441	0					
ANR	4779294	Identifier	eprintf		4778441	0					
ANR	4779295	ArgumentList	"""Cannot get @syscall payload\\n"""		4778441	1					
ANR	4779296	Argument	"""Cannot get @syscall payload\\n"""		4778441	0					
ANR	4779297	PrimaryExpression	"""Cannot get @syscall payload\\n"""		4778441	0					
ANR	4779298	ExpressionStatement	egg -> lang . docall = 0	1087:5:29267:29287	4778441	7	True				
ANR	4779299	AssignmentExpression	egg -> lang . docall = 0		4778441	0		=			
ANR	4779300	MemberAccess	egg -> lang . docall		4778441	0					
ANR	4779301	PtrMemberAccess	egg -> lang		4778441	0					
ANR	4779302	Identifier	egg		4778441	0					
ANR	4779303	Identifier	lang		4778441	1					
ANR	4779304	Identifier	docall		4778441	1					
ANR	4779305	PrimaryExpression	0		4778441	1					
ANR	4779306	BreakStatement	break ;	1088:5:29294:29299	4778441	8	True				
ANR	4779307	IfStatement	if ( egg -> lang . docall )		4778441	1					
ANR	4779308	Condition	egg -> lang . docall	1091:7:29319:29334	4778441	0	True				
ANR	4779309	MemberAccess	egg -> lang . docall		4778441	0					
ANR	4779310	PtrMemberAccess	egg -> lang		4778441	0					
ANR	4779311	Identifier	egg		4778441	0					
ANR	4779312	Identifier	lang		4778441	1					
ANR	4779313	Identifier	docall		4778441	1					
ANR	4779314	CompoundStatement		128:25:3610:3610	4778441	1					
ANR	4779315	ForStatement	for ( i = 0 ; i < egg -> lang . ninlines ; i ++ )		4778441	0					
ANR	4779316	ForInit	i = 0 ;	1092:9:29348:29353	4778441	0	True				
ANR	4779317	AssignmentExpression	i = 0		4778441	0		=			
ANR	4779318	Identifier	i		4778441	0					
ANR	4779319	PrimaryExpression	0		4778441	1					
ANR	4779320	Condition	i < egg -> lang . ninlines	1092:16:29355:29376	4778441	1	True				
ANR	4779321	RelationalExpression	i < egg -> lang . ninlines		4778441	0		<			
ANR	4779322	Identifier	i		4778441	0					
ANR	4779323	MemberAccess	egg -> lang . ninlines		4778441	1					
ANR	4779324	PtrMemberAccess	egg -> lang		4778441	0					
ANR	4779325	Identifier	egg		4778441	0					
ANR	4779326	Identifier	lang		4778441	1					
ANR	4779327	Identifier	ninlines		4778441	1					
ANR	4779328	PostIncDecOperationExpression	i ++	1092:40:29379:29381	4778441	2	True				
ANR	4779329	Identifier	i		4778441	0					
ANR	4779330	IncDec	++		4778441	1					
ANR	4779331	CompoundStatement		129:45:3657:3657	4778441	3					
ANR	4779332	IfStatement	"if ( ! strcmp ( str , egg -> lang . inlines [ i ] . name ) )"		4778441	0					
ANR	4779333	Condition	"! strcmp ( str , egg -> lang . inlines [ i ] . name )"	1093:9:29395:29434	4778441	0	True				
ANR	4779334	UnaryOperationExpression	"! strcmp ( str , egg -> lang . inlines [ i ] . name )"		4778441	0					
ANR	4779335	UnaryOperator	!		4778441	0					
ANR	4779336	CallExpression	"strcmp ( str , egg -> lang . inlines [ i ] . name )"		4778441	1					
ANR	4779337	Callee	strcmp		4778441	0					
ANR	4779338	Identifier	strcmp		4778441	0					
ANR	4779339	ArgumentList	str		4778441	1					
ANR	4779340	Argument	str		4778441	0					
ANR	4779341	Identifier	str		4778441	0					
ANR	4779342	Argument	egg -> lang . inlines [ i ] . name		4778441	1					
ANR	4779343	MemberAccess	egg -> lang . inlines [ i ] . name		4778441	0					
ANR	4779344	ArrayIndexing	egg -> lang . inlines [ i ]		4778441	0					
ANR	4779345	MemberAccess	egg -> lang . inlines		4778441	0					
ANR	4779346	PtrMemberAccess	egg -> lang		4778441	0					
ANR	4779347	Identifier	egg		4778441	0					
ANR	4779348	Identifier	lang		4778441	1					
ANR	4779349	Identifier	inlines		4778441	1					
ANR	4779350	Identifier	i		4778441	1					
ANR	4779351	Identifier	name		4778441	1					
ANR	4779352	CompoundStatement		130:51:3710:3710	4778441	1					
ANR	4779353	ExpressionStatement	p = egg -> lang . inlines [ i ] . body	1094:6:29445:29474	4778441	0	True				
ANR	4779354	AssignmentExpression	p = egg -> lang . inlines [ i ] . body		4778441	0		=			
ANR	4779355	Identifier	p		4778441	0					
ANR	4779356	MemberAccess	egg -> lang . inlines [ i ] . body		4778441	1					
ANR	4779357	ArrayIndexing	egg -> lang . inlines [ i ]		4778441	0					
ANR	4779358	MemberAccess	egg -> lang . inlines		4778441	0					
ANR	4779359	PtrMemberAccess	egg -> lang		4778441	0					
ANR	4779360	Identifier	egg		4778441	0					
ANR	4779361	Identifier	lang		4778441	1					
ANR	4779362	Identifier	inlines		4778441	1					
ANR	4779363	Identifier	i		4778441	1					
ANR	4779364	Identifier	body		4778441	1					
ANR	4779365	ExpressionStatement	egg -> lang . docall = 0	1095:6:29482:29502	4778441	1	True				
ANR	4779366	AssignmentExpression	egg -> lang . docall = 0		4778441	0		=			
ANR	4779367	MemberAccess	egg -> lang . docall		4778441	0					
ANR	4779368	PtrMemberAccess	egg -> lang		4778441	0					
ANR	4779369	Identifier	egg		4778441	0					
ANR	4779370	Identifier	lang		4778441	1					
ANR	4779371	Identifier	docall		4778441	1					
ANR	4779372	PrimaryExpression	0		4778441	1					
ANR	4779373	ExpressionStatement	"e -> comment ( egg , ""inline"" )"	1096:6:29510:29536	4778441	2	True				
ANR	4779374	CallExpression	"e -> comment ( egg , ""inline"" )"		4778441	0					
ANR	4779375	Callee	e -> comment		4778441	0					
ANR	4779376	PtrMemberAccess	e -> comment		4778441	0					
ANR	4779377	Identifier	e		4778441	0					
ANR	4779378	Identifier	comment		4778441	1					
ANR	4779379	ArgumentList	egg		4778441	1					
ANR	4779380	Argument	egg		4778441	0					
ANR	4779381	Identifier	egg		4778441	0					
ANR	4779382	Argument	"""inline"""		4778441	1					
ANR	4779383	PrimaryExpression	"""inline"""		4778441	0					
ANR	4779384	ExpressionStatement	"r_egg_lang_parsechar ( egg , '\\n' )"	1097:6:29544:29576	4778441	3	True				
ANR	4779385	CallExpression	"r_egg_lang_parsechar ( egg , '\\n' )"		4778441	0					
ANR	4779386	Callee	r_egg_lang_parsechar		4778441	0					
ANR	4779387	Identifier	r_egg_lang_parsechar		4778441	0					
ANR	4779388	ArgumentList	egg		4778441	1					
ANR	4779389	Argument	egg		4778441	0					
ANR	4779390	Identifier	egg		4778441	0					
ANR	4779391	Argument	'\\n'		4778441	1					
ANR	4779392	PrimaryExpression	'\\n'		4778441	0					
ANR	4779393	ForStatement	for ( ; * p ; p ++ )		4778441	4					
ANR	4779394	Condition	* p	1098:13:29615:29616	4778441	0	True				
ANR	4779395	UnaryOperationExpression	* p		4778441	0					
ANR	4779396	UnaryOperator	*		4778441	0					
ANR	4779397	Identifier	p		4778441	1					
ANR	4779398	PostIncDecOperationExpression	p ++	1098:17:29619:29621	4778441	1	True				
ANR	4779399	Identifier	p		4778441	0					
ANR	4779400	IncDec	++		4778441	1					
ANR	4779401	CompoundStatement		135:22:3897:3897	4778441	2					
ANR	4779402	ExpressionStatement	"r_egg_lang_parsechar ( egg , * p )"	1099:7:29633:29663	4778441	0	True				
ANR	4779403	CallExpression	"r_egg_lang_parsechar ( egg , * p )"		4778441	0					
ANR	4779404	Callee	r_egg_lang_parsechar		4778441	0					
ANR	4779405	Identifier	r_egg_lang_parsechar		4778441	0					
ANR	4779406	ArgumentList	egg		4778441	1					
ANR	4779407	Argument	egg		4778441	0					
ANR	4779408	Identifier	egg		4778441	0					
ANR	4779409	Argument	* p		4778441	1					
ANR	4779410	UnaryOperationExpression	* p		4778441	0					
ANR	4779411	UnaryOperator	*		4778441	0					
ANR	4779412	Identifier	p		4778441	1					
ANR	4779413	ExpressionStatement	egg -> lang . docall = 0	1101:6:29679:29699	4778441	5	True				
ANR	4779414	AssignmentExpression	egg -> lang . docall = 0		4778441	0		=			
ANR	4779415	MemberAccess	egg -> lang . docall		4778441	0					
ANR	4779416	PtrMemberAccess	egg -> lang		4778441	0					
ANR	4779417	Identifier	egg		4778441	0					
ANR	4779418	Identifier	lang		4778441	1					
ANR	4779419	Identifier	docall		4778441	1					
ANR	4779420	PrimaryExpression	0		4778441	1					
ANR	4779421	BreakStatement	break ;	1102:6:29707:29712	4778441	6	True				
ANR	4779422	IfStatement	if ( egg -> lang . docall )		4778441	2					
ANR	4779423	Condition	egg -> lang . docall	1106:7:29739:29754	4778441	0	True				
ANR	4779424	MemberAccess	egg -> lang . docall		4778441	0					
ANR	4779425	PtrMemberAccess	egg -> lang		4778441	0					
ANR	4779426	Identifier	egg		4778441	0					
ANR	4779427	Identifier	lang		4778441	1					
ANR	4779428	Identifier	docall		4778441	1					
ANR	4779429	CompoundStatement		143:25:4030:4030	4778441	1					
ANR	4779430	ExpressionStatement	"e -> comment ( egg , ""call in egg->lang.mode %d"" , egg -> lang . mode )"	1107:4:29763:29824	4778441	0	True				
ANR	4779431	CallExpression	"e -> comment ( egg , ""call in egg->lang.mode %d"" , egg -> lang . mode )"		4778441	0					
ANR	4779432	Callee	e -> comment		4778441	0					
ANR	4779433	PtrMemberAccess	e -> comment		4778441	0					
ANR	4779434	Identifier	e		4778441	0					
ANR	4779435	Identifier	comment		4778441	1					
ANR	4779436	ArgumentList	egg		4778441	1					
ANR	4779437	Argument	egg		4778441	0					
ANR	4779438	Identifier	egg		4778441	0					
ANR	4779439	Argument	"""call in egg->lang.mode %d"""		4778441	1					
ANR	4779440	PrimaryExpression	"""call in egg->lang.mode %d"""		4778441	0					
ANR	4779441	Argument	egg -> lang . mode		4778441	2					
ANR	4779442	MemberAccess	egg -> lang . mode		4778441	0					
ANR	4779443	PtrMemberAccess	egg -> lang		4778441	0					
ANR	4779444	Identifier	egg		4778441	0					
ANR	4779445	Identifier	lang		4778441	1					
ANR	4779446	Identifier	mode		4778441	1					
ANR	4779447	ExpressionStatement	"e -> call ( egg , str , 0 )"	1108:4:29830:29851	4778441	1	True				
ANR	4779448	CallExpression	"e -> call ( egg , str , 0 )"		4778441	0					
ANR	4779449	Callee	e -> call		4778441	0					
ANR	4779450	PtrMemberAccess	e -> call		4778441	0					
ANR	4779451	Identifier	e		4778441	0					
ANR	4779452	Identifier	call		4778441	1					
ANR	4779453	ArgumentList	egg		4778441	1					
ANR	4779454	Argument	egg		4778441	0					
ANR	4779455	Identifier	egg		4778441	0					
ANR	4779456	Argument	str		4778441	1					
ANR	4779457	Identifier	str		4778441	0					
ANR	4779458	Argument	0		4778441	2					
ANR	4779459	PrimaryExpression	0		4778441	0					
ANR	4779460	IfStatement	if ( egg -> lang . nargs > 0 )		4778441	10					
ANR	4779461	Condition	egg -> lang . nargs > 0	1111:6:29868:29886	4778441	0	True				
ANR	4779462	RelationalExpression	egg -> lang . nargs > 0		4778441	0		>			
ANR	4779463	MemberAccess	egg -> lang . nargs		4778441	0					
ANR	4779464	PtrMemberAccess	egg -> lang		4778441	0					
ANR	4779465	Identifier	egg		4778441	0					
ANR	4779466	Identifier	lang		4778441	1					
ANR	4779467	Identifier	nargs		4778441	1					
ANR	4779468	PrimaryExpression	0		4778441	1					
ANR	4779469	CompoundStatement		148:27:4162:4162	4778441	1					
ANR	4779470	ExpressionStatement	"e -> restore_stack ( egg , egg -> lang . nargs * e -> size )"	1112:3:29894:29943	4778441	0	True				
ANR	4779471	CallExpression	"e -> restore_stack ( egg , egg -> lang . nargs * e -> size )"		4778441	0					
ANR	4779472	Callee	e -> restore_stack		4778441	0					
ANR	4779473	PtrMemberAccess	e -> restore_stack		4778441	0					
ANR	4779474	Identifier	e		4778441	0					
ANR	4779475	Identifier	restore_stack		4778441	1					
ANR	4779476	ArgumentList	egg		4778441	1					
ANR	4779477	Argument	egg		4778441	0					
ANR	4779478	Identifier	egg		4778441	0					
ANR	4779479	Argument	egg -> lang . nargs * e -> size		4778441	1					
ANR	4779480	MultiplicativeExpression	egg -> lang . nargs * e -> size		4778441	0		*			
ANR	4779481	MemberAccess	egg -> lang . nargs		4778441	0					
ANR	4779482	PtrMemberAccess	egg -> lang		4778441	0					
ANR	4779483	Identifier	egg		4778441	0					
ANR	4779484	Identifier	lang		4778441	1					
ANR	4779485	Identifier	nargs		4778441	1					
ANR	4779486	PtrMemberAccess	e -> size		4778441	1					
ANR	4779487	Identifier	e		4778441	0					
ANR	4779488	Identifier	size		4778441	1					
ANR	4779489	IfStatement	if ( egg -> lang . dstvar )		4778441	11					
ANR	4779490	Condition	egg -> lang . dstvar	1130:6:30354:30369	4778441	0	True				
ANR	4779491	MemberAccess	egg -> lang . dstvar		4778441	0					
ANR	4779492	PtrMemberAccess	egg -> lang		4778441	0					
ANR	4779493	Identifier	egg		4778441	0					
ANR	4779494	Identifier	lang		4778441	1					
ANR	4779495	Identifier	dstvar		4778441	1					
ANR	4779496	CompoundStatement		167:24:4645:4645	4778441	1					
ANR	4779497	ExpressionStatement	* buf = 0	1132:3:30413:30421	4778441	0	True				
ANR	4779498	AssignmentExpression	* buf = 0		4778441	0		=			
ANR	4779499	UnaryOperationExpression	* buf		4778441	0					
ANR	4779500	UnaryOperator	*		4778441	0					
ANR	4779501	Identifier	buf		4778441	1					
ANR	4779502	PrimaryExpression	0		4778441	1					
ANR	4779503	ExpressionStatement	free ( str )	1133:3:30426:30436	4778441	1	True				
ANR	4779504	CallExpression	free ( str )		4778441	0					
ANR	4779505	Callee	free		4778441	0					
ANR	4779506	Identifier	free		4778441	0					
ANR	4779507	ArgumentList	str		4778441	1					
ANR	4779508	Argument	str		4778441	0					
ANR	4779509	Identifier	str		4778441	0					
ANR	4779510	ExpressionStatement	"str = r_egg_mkvar ( egg , buf , egg -> lang . dstvar , 0 )"	1134:3:30441:30490	4778441	2	True				
ANR	4779511	AssignmentExpression	"str = r_egg_mkvar ( egg , buf , egg -> lang . dstvar , 0 )"		4778441	0		=			
ANR	4779512	Identifier	str		4778441	0					
ANR	4779513	CallExpression	"r_egg_mkvar ( egg , buf , egg -> lang . dstvar , 0 )"		4778441	1					
ANR	4779514	Callee	r_egg_mkvar		4778441	0					
ANR	4779515	Identifier	r_egg_mkvar		4778441	0					
ANR	4779516	ArgumentList	egg		4778441	1					
ANR	4779517	Argument	egg		4778441	0					
ANR	4779518	Identifier	egg		4778441	0					
ANR	4779519	Argument	buf		4778441	1					
ANR	4779520	Identifier	buf		4778441	0					
ANR	4779521	Argument	egg -> lang . dstvar		4778441	2					
ANR	4779522	MemberAccess	egg -> lang . dstvar		4778441	0					
ANR	4779523	PtrMemberAccess	egg -> lang		4778441	0					
ANR	4779524	Identifier	egg		4778441	0					
ANR	4779525	Identifier	lang		4778441	1					
ANR	4779526	Identifier	dstvar		4778441	1					
ANR	4779527	Argument	0		4778441	3					
ANR	4779528	PrimaryExpression	0		4778441	0					
ANR	4779529	IfStatement	if ( * buf == 0 )		4778441	3					
ANR	4779530	Condition	* buf == 0	1135:7:30499:30507	4778441	0	True				
ANR	4779531	EqualityExpression	* buf == 0		4778441	0		==			
ANR	4779532	UnaryOperationExpression	* buf		4778441	0					
ANR	4779533	UnaryOperator	*		4778441	0					
ANR	4779534	Identifier	buf		4778441	1					
ANR	4779535	PrimaryExpression	0		4778441	1					
ANR	4779536	CompoundStatement		172:18:4783:4783	4778441	1					
ANR	4779537	ExpressionStatement	"eprintf ( ""Cannot resolve variable '%s'\\n"" , egg -> lang . dstvar )"	1136:4:30516:30576	4778441	0	True				
ANR	4779538	CallExpression	"eprintf ( ""Cannot resolve variable '%s'\\n"" , egg -> lang . dstvar )"		4778441	0					
ANR	4779539	Callee	eprintf		4778441	0					
ANR	4779540	Identifier	eprintf		4778441	0					
ANR	4779541	ArgumentList	"""Cannot resolve variable '%s'\\n"""		4778441	1					
ANR	4779542	Argument	"""Cannot resolve variable '%s'\\n"""		4778441	0					
ANR	4779543	PrimaryExpression	"""Cannot resolve variable '%s'\\n"""		4778441	0					
ANR	4779544	Argument	egg -> lang . dstvar		4778441	1					
ANR	4779545	MemberAccess	egg -> lang . dstvar		4778441	0					
ANR	4779546	PtrMemberAccess	egg -> lang		4778441	0					
ANR	4779547	Identifier	egg		4778441	0					
ANR	4779548	Identifier	lang		4778441	1					
ANR	4779549	Identifier	dstvar		4778441	1					
ANR	4779550	ElseStatement	else		4778441	0					
ANR	4779551	CompoundStatement		174:10:4861:4861	4778441	0					
ANR	4779552	ExpressionStatement	"e -> get_result ( egg , buf )"	1138:4:30594:30618	4778441	0	True				
ANR	4779553	CallExpression	"e -> get_result ( egg , buf )"		4778441	0					
ANR	4779554	Callee	e -> get_result		4778441	0					
ANR	4779555	PtrMemberAccess	e -> get_result		4778441	0					
ANR	4779556	Identifier	e		4778441	0					
ANR	4779557	Identifier	get_result		4778441	1					
ANR	4779558	ArgumentList	egg		4778441	1					
ANR	4779559	Argument	egg		4778441	0					
ANR	4779560	Identifier	egg		4778441	0					
ANR	4779561	Argument	buf		4778441	1					
ANR	4779562	Identifier	buf		4778441	0					
ANR	4779563	ExpressionStatement	R_FREE ( egg -> lang . dstvar )	1141:3:30635:30660	4778441	4	True				
ANR	4779564	CallExpression	R_FREE ( egg -> lang . dstvar )		4778441	0					
ANR	4779565	Callee	R_FREE		4778441	0					
ANR	4779566	Identifier	R_FREE		4778441	0					
ANR	4779567	ArgumentList	egg -> lang . dstvar		4778441	1					
ANR	4779568	Argument	egg -> lang . dstvar		4778441	0					
ANR	4779569	MemberAccess	egg -> lang . dstvar		4778441	0					
ANR	4779570	PtrMemberAccess	egg -> lang		4778441	0					
ANR	4779571	Identifier	egg		4778441	0					
ANR	4779572	Identifier	lang		4778441	1					
ANR	4779573	Identifier	dstvar		4778441	1					
ANR	4779574	ExpressionStatement	rcc_reset_callname ( egg )	1143:2:30668:30692	4778441	12	True				
ANR	4779575	CallExpression	rcc_reset_callname ( egg )		4778441	0					
ANR	4779576	Callee	rcc_reset_callname		4778441	0					
ANR	4779577	Identifier	rcc_reset_callname		4778441	0					
ANR	4779578	ArgumentList	egg		4778441	1					
ANR	4779579	Argument	egg		4778441	0					
ANR	4779580	Identifier	egg		4778441	0					
ANR	4779581	ElseStatement	else		4778441	0					
ANR	4779582	CompoundStatement		183:2:5011:5054	4778441	0					
ANR	4779583	IdentifierDeclStatement	int vs = 'l' ;	1145:2:30722:30734	4778441	0	True				
ANR	4779584	IdentifierDecl	vs = 'l'		4778441	0					
ANR	4779585	IdentifierDeclType	int		4778441	0					
ANR	4779586	Identifier	vs		4778441	1					
ANR	4779587	AssignmentExpression	vs = 'l'		4778441	2		=			
ANR	4779588	Identifier	vs		4778441	0					
ANR	4779589	PrimaryExpression	'l'		4778441	1					
ANR	4779590	IdentifierDeclStatement	"char type , * eq , * ptr = egg -> lang . elem , * tmp ;"	1146:2:30738:30781	4778441	1	True				
ANR	4779591	IdentifierDecl	type		4778441	0					
ANR	4779592	IdentifierDeclType	char		4778441	0					
ANR	4779593	Identifier	type		4778441	1					
ANR	4779594	IdentifierDecl	* eq		4778441	1					
ANR	4779595	IdentifierDeclType	char *		4778441	0					
ANR	4779596	Identifier	eq		4778441	1					
ANR	4779597	IdentifierDecl	* ptr = egg -> lang . elem		4778441	2					
ANR	4779598	IdentifierDeclType	char *		4778441	0					
ANR	4779599	Identifier	ptr		4778441	1					
ANR	4779600	AssignmentExpression	* ptr = egg -> lang . elem		4778441	2		=			
ANR	4779601	Identifier	ptr		4778441	0					
ANR	4779602	MemberAccess	egg -> lang . elem		4778441	1					
ANR	4779603	PtrMemberAccess	egg -> lang		4778441	0					
ANR	4779604	Identifier	egg		4778441	0					
ANR	4779605	Identifier	lang		4778441	1					
ANR	4779606	Identifier	elem		4778441	1					
ANR	4779607	IdentifierDecl	* tmp		4778441	3					
ANR	4779608	IdentifierDeclType	char *		4778441	0					
ANR	4779609	Identifier	tmp		4778441	1					
ANR	4779610	ExpressionStatement	egg -> lang . elem [ egg -> lang . elem_n ] = '\\0'	1147:2:30785:30824	4778441	2	True				
ANR	4779611	AssignmentExpression	egg -> lang . elem [ egg -> lang . elem_n ] = '\\0'		4778441	0		=			
ANR	4779612	ArrayIndexing	egg -> lang . elem [ egg -> lang . elem_n ]		4778441	0					
ANR	4779613	MemberAccess	egg -> lang . elem		4778441	0					
ANR	4779614	PtrMemberAccess	egg -> lang		4778441	0					
ANR	4779615	Identifier	egg		4778441	0					
ANR	4779616	Identifier	lang		4778441	1					
ANR	4779617	Identifier	elem		4778441	1					
ANR	4779618	MemberAccess	egg -> lang . elem_n		4778441	1					
ANR	4779619	PtrMemberAccess	egg -> lang		4778441	0					
ANR	4779620	Identifier	egg		4778441	0					
ANR	4779621	Identifier	lang		4778441	1					
ANR	4779622	Identifier	elem_n		4778441	1					
ANR	4779623	PrimaryExpression	'\\0'		4778441	1					
ANR	4779624	ExpressionStatement	ptr = ( char * ) skipspaces ( ptr )	1148:2:30828:30859	4778441	3	True				
ANR	4779625	AssignmentExpression	ptr = ( char * ) skipspaces ( ptr )		4778441	0		=			
ANR	4779626	Identifier	ptr		4778441	0					
ANR	4779627	CastExpression	( char * ) skipspaces ( ptr )		4778441	1					
ANR	4779628	CastTarget	char *		4778441	0					
ANR	4779629	CallExpression	skipspaces ( ptr )		4778441	1					
ANR	4779630	Callee	skipspaces		4778441	0					
ANR	4779631	Identifier	skipspaces		4778441	0					
ANR	4779632	ArgumentList	ptr		4778441	1					
ANR	4779633	Argument	ptr		4778441	0					
ANR	4779634	Identifier	ptr		4778441	0					
ANR	4779635	IfStatement	if ( * ptr )		4778441	4					
ANR	4779636	Condition	* ptr	1149:6:30867:30870	4778441	0	True				
ANR	4779637	UnaryOperationExpression	* ptr		4778441	0					
ANR	4779638	UnaryOperator	*		4778441	0					
ANR	4779639	Identifier	ptr		4778441	1					
ANR	4779640	CompoundStatement		186:12:5146:5146	4778441	1					
ANR	4779641	ExpressionStatement	"eq = strchr ( ptr , '=' )"	1150:3:30878:30900	4778441	0	True				
ANR	4779642	AssignmentExpression	"eq = strchr ( ptr , '=' )"		4778441	0		=			
ANR	4779643	Identifier	eq		4778441	0					
ANR	4779644	CallExpression	"strchr ( ptr , '=' )"		4778441	1					
ANR	4779645	Callee	strchr		4778441	0					
ANR	4779646	Identifier	strchr		4778441	0					
ANR	4779647	ArgumentList	ptr		4778441	1					
ANR	4779648	Argument	ptr		4778441	0					
ANR	4779649	Identifier	ptr		4778441	0					
ANR	4779650	Argument	'='		4778441	1					
ANR	4779651	PrimaryExpression	'='		4778441	0					
ANR	4779652	IfStatement	if ( eq )		4778441	1					
ANR	4779653	Condition	eq	1151:7:30909:30910	4778441	0	True				
ANR	4779654	Identifier	eq		4778441	0					
ANR	4779655	CompoundStatement		189:4:5192:5227	4778441	1					
ANR	4779656	IdentifierDeclStatement	char * p = ( char * ) skipspaces ( ptr ) ;	1152:4:30919:30954	4778441	0	True				
ANR	4779657	IdentifierDecl	* p = ( char * ) skipspaces ( ptr )		4778441	0					
ANR	4779658	IdentifierDeclType	char *		4778441	0					
ANR	4779659	Identifier	p		4778441	1					
ANR	4779660	AssignmentExpression	* p = ( char * ) skipspaces ( ptr )		4778441	2		=			
ANR	4779661	Identifier	p		4778441	0					
ANR	4779662	CastExpression	( char * ) skipspaces ( ptr )		4778441	1					
ANR	4779663	CastTarget	char *		4778441	0					
ANR	4779664	CallExpression	skipspaces ( ptr )		4778441	1					
ANR	4779665	Callee	skipspaces		4778441	0					
ANR	4779666	Identifier	skipspaces		4778441	0					
ANR	4779667	ArgumentList	ptr		4778441	1					
ANR	4779668	Argument	ptr		4778441	0					
ANR	4779669	Identifier	ptr		4778441	0					
ANR	4779670	ExpressionStatement	vs = egg -> lang . varsize	1153:4:30960:30982	4778441	1	True				
ANR	4779671	AssignmentExpression	vs = egg -> lang . varsize		4778441	0		=			
ANR	4779672	Identifier	vs		4778441	0					
ANR	4779673	MemberAccess	egg -> lang . varsize		4778441	1					
ANR	4779674	PtrMemberAccess	egg -> lang		4778441	0					
ANR	4779675	Identifier	egg		4778441	0					
ANR	4779676	Identifier	lang		4778441	1					
ANR	4779677	Identifier	varsize		4778441	1					
ANR	4779678	ExpressionStatement	* buf = * eq = x00	1154:4:30988:31007	4778441	2	True				
ANR	4779679	AssignmentExpression	* buf = * eq = x00		4778441	0		=			
ANR	4779680	UnaryOperationExpression	* buf		4778441	0					
ANR	4779681	UnaryOperator	*		4778441	0					
ANR	4779682	Identifier	buf		4778441	1					
ANR	4779683	AssignmentExpression	* eq = x00		4778441	1		=			
ANR	4779684	UnaryOperationExpression	* eq		4778441	0					
ANR	4779685	UnaryOperator	*		4778441	0					
ANR	4779686	Identifier	eq		4778441	1					
ANR	4779687	Identifier	x00		4778441	1					
ANR	4779688	ExpressionStatement	"e -> mathop ( egg , '=' , vs , '$' , ""0"" , e -> regs ( egg , 1 ) )"	1155:4:31013:31065	4778441	3	True				
ANR	4779689	CallExpression	"e -> mathop ( egg , '=' , vs , '$' , ""0"" , e -> regs ( egg , 1 ) )"		4778441	0					
ANR	4779690	Callee	e -> mathop		4778441	0					
ANR	4779691	PtrMemberAccess	e -> mathop		4778441	0					
ANR	4779692	Identifier	e		4778441	0					
ANR	4779693	Identifier	mathop		4778441	1					
ANR	4779694	ArgumentList	egg		4778441	1					
ANR	4779695	Argument	egg		4778441	0					
ANR	4779696	Identifier	egg		4778441	0					
ANR	4779697	Argument	'='		4778441	1					
ANR	4779698	PrimaryExpression	'='		4778441	0					
ANR	4779699	Argument	vs		4778441	2					
ANR	4779700	Identifier	vs		4778441	0					
ANR	4779701	Argument	'$'		4778441	3					
ANR	4779702	PrimaryExpression	'$'		4778441	0					
ANR	4779703	Argument	"""0"""		4778441	4					
ANR	4779704	PrimaryExpression	"""0"""		4778441	0					
ANR	4779705	Argument	"e -> regs ( egg , 1 )"		4778441	5					
ANR	4779706	CallExpression	"e -> regs ( egg , 1 )"		4778441	0					
ANR	4779707	Callee	e -> regs		4778441	0					
ANR	4779708	PtrMemberAccess	e -> regs		4778441	0					
ANR	4779709	Identifier	e		4778441	0					
ANR	4779710	Identifier	regs		4778441	1					
ANR	4779711	ArgumentList	egg		4778441	1					
ANR	4779712	Argument	egg		4778441	0					
ANR	4779713	Identifier	egg		4778441	0					
ANR	4779714	Argument	1		4778441	1					
ANR	4779715	PrimaryExpression	1		4778441	0					
ANR	4779716	ExpressionStatement	egg -> lang . mathline = strdup ( ( char * ) skipspaces ( eq + 1 ) )	1157:4:31143:31201	4778441	4	True				
ANR	4779717	AssignmentExpression	egg -> lang . mathline = strdup ( ( char * ) skipspaces ( eq + 1 ) )		4778441	0		=			
ANR	4779718	MemberAccess	egg -> lang . mathline		4778441	0					
ANR	4779719	PtrMemberAccess	egg -> lang		4778441	0					
ANR	4779720	Identifier	egg		4778441	0					
ANR	4779721	Identifier	lang		4778441	1					
ANR	4779722	Identifier	mathline		4778441	1					
ANR	4779723	CallExpression	strdup ( ( char * ) skipspaces ( eq + 1 ) )		4778441	1					
ANR	4779724	Callee	strdup		4778441	0					
ANR	4779725	Identifier	strdup		4778441	0					
ANR	4779726	ArgumentList	( char * ) skipspaces ( eq + 1 )		4778441	1					
ANR	4779727	Argument	( char * ) skipspaces ( eq + 1 )		4778441	0					
ANR	4779728	CastExpression	( char * ) skipspaces ( eq + 1 )		4778441	0					
ANR	4779729	CastTarget	char *		4778441	0					
ANR	4779730	CallExpression	skipspaces ( eq + 1 )		4778441	1					
ANR	4779731	Callee	skipspaces		4778441	0					
ANR	4779732	Identifier	skipspaces		4778441	0					
ANR	4779733	ArgumentList	eq + 1		4778441	1					
ANR	4779734	Argument	eq + 1		4778441	0					
ANR	4779735	AdditiveExpression	eq + 1		4778441	0		+			
ANR	4779736	Identifier	eq		4778441	0					
ANR	4779737	PrimaryExpression	1		4778441	1					
ANR	4779738	ExpressionStatement	tmp = egg -> lang . mathline	1158:4:31207:31231	4778441	5	True				
ANR	4779739	AssignmentExpression	tmp = egg -> lang . mathline		4778441	0		=			
ANR	4779740	Identifier	tmp		4778441	0					
ANR	4779741	MemberAccess	egg -> lang . mathline		4778441	1					
ANR	4779742	PtrMemberAccess	egg -> lang		4778441	0					
ANR	4779743	Identifier	egg		4778441	0					
ANR	4779744	Identifier	lang		4778441	1					
ANR	4779745	Identifier	mathline		4778441	1					
ANR	4779746	ExpressionStatement	"rcc_mathop ( egg , & tmp , 2 )"	1159:4:31237:31262	4778441	6	True				
ANR	4779747	CallExpression	"rcc_mathop ( egg , & tmp , 2 )"		4778441	0					
ANR	4779748	Callee	rcc_mathop		4778441	0					
ANR	4779749	Identifier	rcc_mathop		4778441	0					
ANR	4779750	ArgumentList	egg		4778441	1					
ANR	4779751	Argument	egg		4778441	0					
ANR	4779752	Identifier	egg		4778441	0					
ANR	4779753	Argument	& tmp		4778441	1					
ANR	4779754	UnaryOperationExpression	& tmp		4778441	0					
ANR	4779755	UnaryOperator	&		4778441	0					
ANR	4779756	Identifier	tmp		4778441	1					
ANR	4779757	Argument	2		4778441	2					
ANR	4779758	PrimaryExpression	2		4778441	0					
ANR	4779759	ExpressionStatement	R_FREE ( egg -> lang . mathline )	1160:4:31268:31295	4778441	7	True				
ANR	4779760	CallExpression	R_FREE ( egg -> lang . mathline )		4778441	0					
ANR	4779761	Callee	R_FREE		4778441	0					
ANR	4779762	Identifier	R_FREE		4778441	0					
ANR	4779763	ArgumentList	egg -> lang . mathline		4778441	1					
ANR	4779764	Argument	egg -> lang . mathline		4778441	0					
ANR	4779765	MemberAccess	egg -> lang . mathline		4778441	0					
ANR	4779766	PtrMemberAccess	egg -> lang		4778441	0					
ANR	4779767	Identifier	egg		4778441	0					
ANR	4779768	Identifier	lang		4778441	1					
ANR	4779769	Identifier	mathline		4778441	1					
ANR	4779770	ExpressionStatement	tmp = NULL	1161:4:31301:31311	4778441	8	True				
ANR	4779771	AssignmentExpression	tmp = NULL		4778441	0		=			
ANR	4779772	Identifier	tmp		4778441	0					
ANR	4779773	Identifier	NULL		4778441	1					
ANR	4779774	ExpressionStatement	"p = r_egg_mkvar ( egg , buf , ptr , 0 )"	1163:4:31366:31400	4778441	9	True				
ANR	4779775	AssignmentExpression	"p = r_egg_mkvar ( egg , buf , ptr , 0 )"		4778441	0		=			
ANR	4779776	Identifier	p		4778441	0					
ANR	4779777	CallExpression	"r_egg_mkvar ( egg , buf , ptr , 0 )"		4778441	1					
ANR	4779778	Callee	r_egg_mkvar		4778441	0					
ANR	4779779	Identifier	r_egg_mkvar		4778441	0					
ANR	4779780	ArgumentList	egg		4778441	1					
ANR	4779781	Argument	egg		4778441	0					
ANR	4779782	Identifier	egg		4778441	0					
ANR	4779783	Argument	buf		4778441	1					
ANR	4779784	Identifier	buf		4778441	0					
ANR	4779785	Argument	ptr		4778441	2					
ANR	4779786	Identifier	ptr		4778441	0					
ANR	4779787	Argument	0		4778441	3					
ANR	4779788	PrimaryExpression	0		4778441	0					
ANR	4779789	IfStatement	if ( is_var ( p ) )		4778441	10					
ANR	4779790	Condition	is_var ( p )	1164:8:31410:31419	4778441	0	True				
ANR	4779791	CallExpression	is_var ( p )		4778441	0					
ANR	4779792	Callee	is_var		4778441	0					
ANR	4779793	Identifier	is_var		4778441	0					
ANR	4779794	ArgumentList	p		4778441	1					
ANR	4779795	Argument	p		4778441	0					
ANR	4779796	Identifier	p		4778441	0					
ANR	4779797	CompoundStatement		202:5:5702:5740	4778441	1					
ANR	4779798	IdentifierDeclStatement	"char * q = r_egg_mkvar ( egg , buf , p , 0 ) ;"	1165:5:31429:31467	4778441	0	True				
ANR	4779799	IdentifierDecl	"* q = r_egg_mkvar ( egg , buf , p , 0 )"		4778441	0					
ANR	4779800	IdentifierDeclType	char *		4778441	0					
ANR	4779801	Identifier	q		4778441	1					
ANR	4779802	AssignmentExpression	"* q = r_egg_mkvar ( egg , buf , p , 0 )"		4778441	2		=			
ANR	4779803	Identifier	q		4778441	0					
ANR	4779804	CallExpression	"r_egg_mkvar ( egg , buf , p , 0 )"		4778441	1					
ANR	4779805	Callee	r_egg_mkvar		4778441	0					
ANR	4779806	Identifier	r_egg_mkvar		4778441	0					
ANR	4779807	ArgumentList	egg		4778441	1					
ANR	4779808	Argument	egg		4778441	0					
ANR	4779809	Identifier	egg		4778441	0					
ANR	4779810	Argument	buf		4778441	1					
ANR	4779811	Identifier	buf		4778441	0					
ANR	4779812	Argument	p		4778441	2					
ANR	4779813	Identifier	p		4778441	0					
ANR	4779814	Argument	0		4778441	3					
ANR	4779815	PrimaryExpression	0		4778441	0					
ANR	4779816	IfStatement	if ( q )		4778441	1					
ANR	4779817	Condition	q	1166:9:31478:31478	4778441	0	True				
ANR	4779818	Identifier	q		4778441	0					
ANR	4779819	CompoundStatement		203:12:5754:5754	4778441	1					
ANR	4779820	ExpressionStatement	free ( p )	1167:6:31489:31497	4778441	0	True				
ANR	4779821	CallExpression	free ( p )		4778441	0					
ANR	4779822	Callee	free		4778441	0					
ANR	4779823	Identifier	free		4778441	0					
ANR	4779824	ArgumentList	p		4778441	1					
ANR	4779825	Argument	p		4778441	0					
ANR	4779826	Identifier	p		4778441	0					
ANR	4779827	ExpressionStatement	p = q	1168:6:31505:31510	4778441	1	True				
ANR	4779828	AssignmentExpression	p = q		4778441	0		=			
ANR	4779829	Identifier	p		4778441	0					
ANR	4779830	Identifier	q		4778441	1					
ANR	4779831	IfStatement	if ( egg -> lang . varxs == '*' || egg -> lang . varxs == '&' )		4778441	2					
ANR	4779832	Condition	egg -> lang . varxs == '*' || egg -> lang . varxs == '&'	1170:9:31528:31575	4778441	0	True				
ANR	4779833	OrExpression	egg -> lang . varxs == '*' || egg -> lang . varxs == '&'		4778441	0		||			
ANR	4779834	EqualityExpression	egg -> lang . varxs == '*'		4778441	0		==			
ANR	4779835	MemberAccess	egg -> lang . varxs		4778441	0					
ANR	4779836	PtrMemberAccess	egg -> lang		4778441	0					
ANR	4779837	Identifier	egg		4778441	0					
ANR	4779838	Identifier	lang		4778441	1					
ANR	4779839	Identifier	varxs		4778441	1					
ANR	4779840	PrimaryExpression	'*'		4778441	1					
ANR	4779841	EqualityExpression	egg -> lang . varxs == '&'		4778441	1		==			
ANR	4779842	MemberAccess	egg -> lang . varxs		4778441	0					
ANR	4779843	PtrMemberAccess	egg -> lang		4778441	0					
ANR	4779844	Identifier	egg		4778441	0					
ANR	4779845	Identifier	lang		4778441	1					
ANR	4779846	Identifier	varxs		4778441	1					
ANR	4779847	PrimaryExpression	'&'		4778441	1					
ANR	4779848	CompoundStatement		207:59:5851:5851	4778441	1					
ANR	4779849	ExpressionStatement	"eprintf ( ""not support for *ptr in egg->lang.dstvar\\n"" )"	1171:6:31586:31640	4778441	0	True				
ANR	4779850	CallExpression	"eprintf ( ""not support for *ptr in egg->lang.dstvar\\n"" )"		4778441	0					
ANR	4779851	Callee	eprintf		4778441	0					
ANR	4779852	Identifier	eprintf		4778441	0					
ANR	4779853	ArgumentList	"""not support for *ptr in egg->lang.dstvar\\n"""		4778441	1					
ANR	4779854	Argument	"""not support for *ptr in egg->lang.dstvar\\n"""		4778441	0					
ANR	4779855	PrimaryExpression	"""not support for *ptr in egg->lang.dstvar\\n"""		4778441	0					
ANR	4779856	ExpressionStatement	type = ' '	1174:5:31691:31701	4778441	3	True				
ANR	4779857	AssignmentExpression	type = ' '		4778441	0		=			
ANR	4779858	Identifier	type		4778441	0					
ANR	4779859	PrimaryExpression	' '		4778441	1					
ANR	4779860	ElseStatement	else		4778441	0					
ANR	4779861	CompoundStatement		212:11:5987:5987	4778441	0					
ANR	4779862	ExpressionStatement	type = '$'	1176:5:31721:31731	4778441	0	True				
ANR	4779863	AssignmentExpression	type = '$'		4778441	0		=			
ANR	4779864	Identifier	type		4778441	0					
ANR	4779865	PrimaryExpression	'$'		4778441	1					
ANR	4779866	ExpressionStatement	"e -> mathop ( egg , '=' , vs , type , e -> regs ( egg , 1 ) , p )"	1178:4:31743:31794	4778441	11	True				
ANR	4779867	CallExpression	"e -> mathop ( egg , '=' , vs , type , e -> regs ( egg , 1 ) , p )"		4778441	0					
ANR	4779868	Callee	e -> mathop		4778441	0					
ANR	4779869	PtrMemberAccess	e -> mathop		4778441	0					
ANR	4779870	Identifier	e		4778441	0					
ANR	4779871	Identifier	mathop		4778441	1					
ANR	4779872	ArgumentList	egg		4778441	1					
ANR	4779873	Argument	egg		4778441	0					
ANR	4779874	Identifier	egg		4778441	0					
ANR	4779875	Argument	'='		4778441	1					
ANR	4779876	PrimaryExpression	'='		4778441	0					
ANR	4779877	Argument	vs		4778441	2					
ANR	4779878	Identifier	vs		4778441	0					
ANR	4779879	Argument	type		4778441	3					
ANR	4779880	Identifier	type		4778441	0					
ANR	4779881	Argument	"e -> regs ( egg , 1 )"		4778441	4					
ANR	4779882	CallExpression	"e -> regs ( egg , 1 )"		4778441	0					
ANR	4779883	Callee	e -> regs		4778441	0					
ANR	4779884	PtrMemberAccess	e -> regs		4778441	0					
ANR	4779885	Identifier	e		4778441	0					
ANR	4779886	Identifier	regs		4778441	1					
ANR	4779887	ArgumentList	egg		4778441	1					
ANR	4779888	Argument	egg		4778441	0					
ANR	4779889	Identifier	egg		4778441	0					
ANR	4779890	Argument	1		4778441	1					
ANR	4779891	PrimaryExpression	1		4778441	0					
ANR	4779892	Argument	p		4778441	5					
ANR	4779893	Identifier	p		4778441	0					
ANR	4779894	ExpressionStatement	free ( p )	1179:4:31800:31808	4778441	12	True				
ANR	4779895	CallExpression	free ( p )		4778441	0					
ANR	4779896	Callee	free		4778441	0					
ANR	4779897	Identifier	free		4778441	0					
ANR	4779898	ArgumentList	p		4778441	1					
ANR	4779899	Argument	p		4778441	0					
ANR	4779900	Identifier	p		4778441	0					
ANR	4779901	ElseStatement	else		4778441	0					
ANR	4779902	CompoundStatement		245:10:7135:7135	4778441	0					
ANR	4779903	IfStatement	"if ( ! strcmp ( ptr , ""break"" ) )"		4778441	0					
ANR	4779904	Condition	"! strcmp ( ptr , ""break"" )"	1209:8:32872:32893	4778441	0	True				
ANR	4779905	UnaryOperationExpression	"! strcmp ( ptr , ""break"" )"		4778441	0					
ANR	4779906	UnaryOperator	!		4778441	0					
ANR	4779907	CallExpression	"strcmp ( ptr , ""break"" )"		4778441	1					
ANR	4779908	Callee	strcmp		4778441	0					
ANR	4779909	Identifier	strcmp		4778441	0					
ANR	4779910	ArgumentList	ptr		4778441	1					
ANR	4779911	Argument	ptr		4778441	0					
ANR	4779912	Identifier	ptr		4778441	0					
ANR	4779913	Argument	"""break"""		4778441	1					
ANR	4779914	PrimaryExpression	"""break"""		4778441	0					
ANR	4779915	CompoundStatement		246:32:7169:7169	4778441	1					
ANR	4779916	ExpressionStatement	e -> trap ( egg )	1210:5:32922:32935	4778441	0	True				
ANR	4779917	CallExpression	e -> trap ( egg )		4778441	0					
ANR	4779918	Callee	e -> trap		4778441	0					
ANR	4779919	PtrMemberAccess	e -> trap		4778441	0					
ANR	4779920	Identifier	e		4778441	0					
ANR	4779921	Identifier	trap		4778441	1					
ANR	4779922	ArgumentList	egg		4778441	1					
ANR	4779923	Argument	egg		4778441	0					
ANR	4779924	Identifier	egg		4778441	0					
ANR	4779925	ExpressionStatement	rcc_reset_callname ( egg )	1211:5:32942:32966	4778441	1	True				
ANR	4779926	CallExpression	rcc_reset_callname ( egg )		4778441	0					
ANR	4779927	Callee	rcc_reset_callname		4778441	0					
ANR	4779928	Identifier	rcc_reset_callname		4778441	0					
ANR	4779929	ArgumentList	egg		4778441	1					
ANR	4779930	Argument	egg		4778441	0					
ANR	4779931	Identifier	egg		4778441	0					
ANR	4779932	ElseStatement	else		4778441	0					
ANR	4779933	CompoundStatement		249:11:7252:7252	4778441	0					
ANR	4779934	ExpressionStatement	"e -> mathop ( egg , '=' , vs , '$' , ptr , NULL )"	1213:5:32986:33026	4778441	0	True				
ANR	4779935	CallExpression	"e -> mathop ( egg , '=' , vs , '$' , ptr , NULL )"		4778441	0					
ANR	4779936	Callee	e -> mathop		4778441	0					
ANR	4779937	PtrMemberAccess	e -> mathop		4778441	0					
ANR	4779938	Identifier	e		4778441	0					
ANR	4779939	Identifier	mathop		4778441	1					
ANR	4779940	ArgumentList	egg		4778441	1					
ANR	4779941	Argument	egg		4778441	0					
ANR	4779942	Identifier	egg		4778441	0					
ANR	4779943	Argument	'='		4778441	1					
ANR	4779944	PrimaryExpression	'='		4778441	0					
ANR	4779945	Argument	vs		4778441	2					
ANR	4779946	Identifier	vs		4778441	0					
ANR	4779947	Argument	'$'		4778441	3					
ANR	4779948	PrimaryExpression	'$'		4778441	0					
ANR	4779949	Argument	ptr		4778441	4					
ANR	4779950	Identifier	ptr		4778441	0					
ANR	4779951	Argument	NULL		4778441	5					
ANR	4779952	Identifier	NULL		4778441	0					
ANR	4779953	ExpressionStatement	free ( str )	1218:1:33047:33057	4778441	8	True				
ANR	4779954	CallExpression	free ( str )		4778441	0					
ANR	4779955	Callee	free		4778441	0					
ANR	4779956	Identifier	free		4778441	0					
ANR	4779957	ArgumentList	str		4778441	1					
ANR	4779958	Argument	str		4778441	0					
ANR	4779959	Identifier	str		4778441	0					
ANR	4779960	ReturnType	static void		4778441	1					
ANR	4779961	Identifier	rcc_next		4778441	2					
ANR	4779962	ParameterList	REgg * egg		4778441	3					
ANR	4779963	Parameter	REgg * egg	964:21:25715:25723	4778441	0	True				
ANR	4779964	ParameterType	REgg *		4778441	0					
ANR	4779965	Identifier	egg		4778441	1					
ANR	4779966	CFGEntryNode	ENTRY		4778441		True				
ANR	4779967	CFGExitNode	EXIT		4778441		True				
ANR	4779968	Symbol	egg		4778441						
ANR	4779969	Symbol	CTX		4778441						
ANR	4779970	Symbol	egg -> lang . ninlines		4778441						
ANR	4779971	Symbol	strchr		4778441						
ANR	4779972	Symbol	egg -> lang . lastctxdelta		4778441						
ANR	4779973	Symbol	type		4778441						
ANR	4779974	Symbol	* egg -> lang		4778441						
ANR	4779975	Symbol	path		4778441						
ANR	4779976	Symbol	egg -> lang . syscalls		4778441						
ANR	4779977	Symbol	eprintf		4778441						
ANR	4779978	Symbol	* egg -> lang . nestedi		4778441						
ANR	4779979	Symbol	tmp		4778441						
ANR	4779980	Symbol	egg -> lang . varxs		4778441						
ANR	4779981	Symbol	* ptr		4778441						
ANR	4779982	Symbol	egg -> lang . inlines		4778441						
ANR	4779983	Symbol	find_include		4778441						
ANR	4779984	Symbol	ocn		4778441						
ANR	4779985	Symbol	egg -> lang . syscalls [ i ] . name		4778441						
ANR	4779986	Symbol	strcmp		4778441						
ANR	4779987	Symbol	r_egg_mkvar		4778441						
ANR	4779988	Symbol	r_file_slurp		4778441						
ANR	4779989	Symbol	* buf		4778441						
ANR	4779990	Symbol	NULL		4778441						
ANR	4779991	Symbol	var		4778441						
ANR	4779992	Symbol	egg -> lang . inlines [ i ] . body		4778441						
ANR	4779993	Symbol	* egg -> lang . elem		4778441						
ANR	4779994	Symbol	egg -> lang . nargs		4778441						
ANR	4779995	Symbol	egg -> lang . callname		4778441						
ANR	4779996	Symbol	* egg -> lang . ctxpush		4778441						
ANR	4779997	Symbol	eq		4778441						
ANR	4779998	Symbol	oline		4778441						
ANR	4779999	Symbol	skipspaces		4778441						
ANR	4780000	Symbol	egg -> lang . mode		4778441						
ANR	4780001	Symbol	str		4778441						
ANR	4780002	Symbol	* egg -> lang . syscalls		4778441						
ANR	4780003	Symbol	* egg -> lang . elem_n		4778441						
ANR	4780004	Symbol	e -> size		4778441						
ANR	4780005	Symbol	& tmp		4778441						
ANR	4780006	Symbol	is_var		4778441						
ANR	4780007	Symbol	vs		4778441						
ANR	4780008	Symbol	egg -> lang . mathline		4778441						
ANR	4780009	Symbol	egg -> lang . setenviron		4778441						
ANR	4780010	Symbol	* ocn		4778441						
ANR	4780011	Symbol	egg -> lang . elem		4778441						
ANR	4780012	Symbol	egg -> lang . ctxpush		4778441						
ANR	4780013	Symbol	egg -> lang . inlines [ i ] . name		4778441						
ANR	4780014	Symbol	egg -> lang . dstvar		4778441						
ANR	4780015	Symbol	egg -> remit		4778441						
ANR	4780016	Symbol	egg -> lang		4778441						
ANR	4780017	Symbol	* CTX		4778441						
ANR	4780018	Symbol	egg -> lang . includedir		4778441						
ANR	4780019	Symbol	* egg		4778441						
ANR	4780020	Symbol	e -> regs		4778441						
ANR	4780021	Symbol	egg -> lang . varsize		4778441						
ANR	4780022	Symbol	egg -> lang . line		4778441						
ANR	4780023	Symbol	* * egg		4778441						
ANR	4780024	Symbol	egg -> lang . syscallbody		4778441						
ANR	4780025	Symbol	e		4778441						
ANR	4780026	Symbol	i		4778441						
ANR	4780027	Symbol	egg -> lang . nfunctions		4778441						
ANR	4780028	Symbol	egg -> lang . elem_n		4778441						
ANR	4780029	Symbol	egg -> lang . docall		4778441						
ANR	4780030	Symbol	ptr		4778441						
ANR	4780031	Symbol	e -> syscall		4778441						
ANR	4780032	Symbol	* e		4778441						
ANR	4780033	Symbol	p		4778441						
ANR	4780034	Symbol	q		4778441						
ANR	4780035	Symbol	* eq		4778441						
ANR	4780036	Symbol	buf		4778441						
ANR	4780037	Symbol	* i		4778441						
ANR	4780038	Symbol	s		4778441						
ANR	4780039	Symbol	egg -> lang . includefile		4778441						
ANR	4780040	Symbol	egg -> lang . nsyscalls		4778441						
ANR	4780041	Symbol	* egg -> lang . inlines		4778441						
ANR	4780042	Symbol	x00		4778441						
ANR	4780043	Symbol	* p		4778441						
ANR	4780044	Symbol	* q		4778441						
ANR	4780045	Symbol	strdup		4778441						
ANR	4780046	Symbol	egg -> lang . nestedi		4778441						
ANR	4780047	Symbol	get_frame_label		4778441						
ANR	4780048	Function	r_egg_lang_parsechar	1221:0:33062:38533							
ANR	4780049	FunctionDef	"r_egg_lang_parsechar (REgg * egg , char c)"		4780048	0					
ANR	4780050	CompoundStatement		1221:50:33112:38533	4780048	0					
ANR	4780051	IdentifierDeclStatement	REggEmit * e = egg -> remit ;	1222:1:33115:33139	4780048	0	True				
ANR	4780052	IdentifierDecl	* e = egg -> remit		4780048	0					
ANR	4780053	IdentifierDeclType	REggEmit *		4780048	0					
ANR	4780054	Identifier	e		4780048	1					
ANR	4780055	AssignmentExpression	* e = egg -> remit		4780048	2		=			
ANR	4780056	Identifier	e		4780048	0					
ANR	4780057	PtrMemberAccess	egg -> remit		4780048	1					
ANR	4780058	Identifier	egg		4780048	0					
ANR	4780059	Identifier	remit		4780048	1					
ANR	4780060	IdentifierDeclStatement	"char * ptr , str [ 64 ] , * tmp_ptr = NULL ;"	1223:1:33142:33177	4780048	1	True				
ANR	4780061	IdentifierDecl	* ptr		4780048	0					
ANR	4780062	IdentifierDeclType	char *		4780048	0					
ANR	4780063	Identifier	ptr		4780048	1					
ANR	4780064	IdentifierDecl	str [ 64 ]		4780048	1					
ANR	4780065	IdentifierDeclType	char [ 64 ]		4780048	0					
ANR	4780066	Identifier	str		4780048	1					
ANR	4780067	PrimaryExpression	64		4780048	2					
ANR	4780068	IdentifierDecl	* tmp_ptr = NULL		4780048	2					
ANR	4780069	IdentifierDeclType	char *		4780048	0					
ANR	4780070	Identifier	tmp_ptr		4780048	1					
ANR	4780071	AssignmentExpression	* tmp_ptr = NULL		4780048	2		=			
ANR	4780072	Identifier	NULL		4780048	0					
ANR	4780073	Identifier	NULL		4780048	1					
ANR	4780074	IdentifierDeclStatement	"int i , j ;"	1224:1:33180:33188	4780048	2	True				
ANR	4780075	IdentifierDecl	i		4780048	0					
ANR	4780076	IdentifierDeclType	int		4780048	0					
ANR	4780077	Identifier	i		4780048	1					
ANR	4780078	IdentifierDecl	j		4780048	1					
ANR	4780079	IdentifierDeclType	int		4780048	0					
ANR	4780080	Identifier	j		4780048	1					
ANR	4780081	IfStatement	if ( c == '\\n' )		4780048	3					
ANR	4780082	Condition	c == '\\n'	1225:5:33195:33203	4780048	0	True				
ANR	4780083	EqualityExpression	c == '\\n'		4780048	0		==			
ANR	4780084	Identifier	c		4780048	0					
ANR	4780085	PrimaryExpression	'\\n'		4780048	1					
ANR	4780086	CompoundStatement		5:16:93:93	4780048	1					
ANR	4780087	ExpressionStatement	egg -> lang . line ++	1226:2:33210:33226	4780048	0	True				
ANR	4780088	PostIncDecOperationExpression	egg -> lang . line ++		4780048	0					
ANR	4780089	MemberAccess	egg -> lang . line		4780048	0					
ANR	4780090	PtrMemberAccess	egg -> lang		4780048	0					
ANR	4780091	Identifier	egg		4780048	0					
ANR	4780092	Identifier	lang		4780048	1					
ANR	4780093	Identifier	line		4780048	1					
ANR	4780094	IncDec	++		4780048	1					
ANR	4780095	ExpressionStatement	egg -> lang . elem_n = 0	1227:2:33230:33250	4780048	1	True				
ANR	4780096	AssignmentExpression	egg -> lang . elem_n = 0		4780048	0		=			
ANR	4780097	MemberAccess	egg -> lang . elem_n		4780048	0					
ANR	4780098	PtrMemberAccess	egg -> lang		4780048	0					
ANR	4780099	Identifier	egg		4780048	0					
ANR	4780100	Identifier	lang		4780048	1					
ANR	4780101	Identifier	elem_n		4780048	1					
ANR	4780102	PrimaryExpression	0		4780048	1					
ANR	4780103	IfStatement	if ( egg -> lang . skipline )		4780048	4					
ANR	4780104	Condition	egg -> lang . skipline	1230:5:33276:33293	4780048	0	True				
ANR	4780105	MemberAccess	egg -> lang . skipline		4780048	0					
ANR	4780106	PtrMemberAccess	egg -> lang		4780048	0					
ANR	4780107	Identifier	egg		4780048	0					
ANR	4780108	Identifier	lang		4780048	1					
ANR	4780109	Identifier	skipline		4780048	1					
ANR	4780110	CompoundStatement		10:25:183:183	4780048	1					
ANR	4780111	IfStatement	if ( c != '\\n' )		4780048	0					
ANR	4780112	Condition	c != '\\n'	1231:6:33304:33312	4780048	0	True				
ANR	4780113	EqualityExpression	c != '\\n'		4780048	0		!=			
ANR	4780114	Identifier	c		4780048	0					
ANR	4780115	PrimaryExpression	'\\n'		4780048	1					
ANR	4780116	CompoundStatement		11:17:202:202	4780048	1					
ANR	4780117	ExpressionStatement	egg -> lang . oc = c	1232:3:33320:33336	4780048	0	True				
ANR	4780118	AssignmentExpression	egg -> lang . oc = c		4780048	0		=			
ANR	4780119	MemberAccess	egg -> lang . oc		4780048	0					
ANR	4780120	PtrMemberAccess	egg -> lang		4780048	0					
ANR	4780121	Identifier	egg		4780048	0					
ANR	4780122	Identifier	lang		4780048	1					
ANR	4780123	Identifier	oc		4780048	1					
ANR	4780124	Identifier	c		4780048	1					
ANR	4780125	ReturnStatement	return 0 ;	1233:3:33341:33349	4780048	1	True				
ANR	4780126	PrimaryExpression	0		4780048	0					
ANR	4780127	ExpressionStatement	egg -> lang . skipline = 0	1235:2:33357:33379	4780048	1	True				
ANR	4780128	AssignmentExpression	egg -> lang . skipline = 0		4780048	0		=			
ANR	4780129	MemberAccess	egg -> lang . skipline		4780048	0					
ANR	4780130	PtrMemberAccess	egg -> lang		4780048	0					
ANR	4780131	Identifier	egg		4780048	0					
ANR	4780132	Identifier	lang		4780048	1					
ANR	4780133	Identifier	skipline		4780048	1					
ANR	4780134	PrimaryExpression	0		4780048	1					
ANR	4780135	IfStatement	if ( egg -> lang . mode == DATA )		4780048	5					
ANR	4780136	Condition	egg -> lang . mode == DATA	1237:5:33389:33410	4780048	0	True				
ANR	4780137	EqualityExpression	egg -> lang . mode == DATA		4780048	0		==			
ANR	4780138	MemberAccess	egg -> lang . mode		4780048	0					
ANR	4780139	PtrMemberAccess	egg -> lang		4780048	0					
ANR	4780140	Identifier	egg		4780048	0					
ANR	4780141	Identifier	lang		4780048	1					
ANR	4780142	Identifier	mode		4780048	1					
ANR	4780143	Identifier	DATA		4780048	1					
ANR	4780144	CompoundStatement		17:29:300:300	4780048	1					
ANR	4780145	ReturnStatement	"return parsedatachar ( egg , c ) ;"	1238:2:33417:33446	4780048	0	True				
ANR	4780146	CallExpression	"parsedatachar ( egg , c )"		4780048	0					
ANR	4780147	Callee	parsedatachar		4780048	0					
ANR	4780148	Identifier	parsedatachar		4780048	0					
ANR	4780149	ArgumentList	egg		4780048	1					
ANR	4780150	Argument	egg		4780048	0					
ANR	4780151	Identifier	egg		4780048	0					
ANR	4780152	Argument	c		4780048	1					
ANR	4780153	Identifier	c		4780048	0					
ANR	4780154	IfStatement	if ( egg -> lang . mode == INLINE )		4780048	6					
ANR	4780155	Condition	egg -> lang . mode == INLINE	1240:5:33456:33479	4780048	0	True				
ANR	4780156	EqualityExpression	egg -> lang . mode == INLINE		4780048	0		==			
ANR	4780157	MemberAccess	egg -> lang . mode		4780048	0					
ANR	4780158	PtrMemberAccess	egg -> lang		4780048	0					
ANR	4780159	Identifier	egg		4780048	0					
ANR	4780160	Identifier	lang		4780048	1					
ANR	4780161	Identifier	mode		4780048	1					
ANR	4780162	Identifier	INLINE		4780048	1					
ANR	4780163	CompoundStatement		20:31:369:369	4780048	1					
ANR	4780164	ReturnStatement	"return parseinlinechar ( egg , c ) ;"	1241:2:33486:33517	4780048	0	True				
ANR	4780165	CallExpression	"parseinlinechar ( egg , c )"		4780048	0					
ANR	4780166	Callee	parseinlinechar		4780048	0					
ANR	4780167	Identifier	parseinlinechar		4780048	0					
ANR	4780168	ArgumentList	egg		4780048	1					
ANR	4780169	Argument	egg		4780048	0					
ANR	4780170	Identifier	egg		4780048	0					
ANR	4780171	Argument	c		4780048	1					
ANR	4780172	Identifier	c		4780048	0					
ANR	4780173	IfStatement	if ( egg -> lang . quoteline )		4780048	7					
ANR	4780174	Condition	egg -> lang . quoteline	1244:5:33541:33559	4780048	0	True				
ANR	4780175	MemberAccess	egg -> lang . quoteline		4780048	0					
ANR	4780176	PtrMemberAccess	egg -> lang		4780048	0					
ANR	4780177	Identifier	egg		4780048	0					
ANR	4780178	Identifier	lang		4780048	1					
ANR	4780179	Identifier	quoteline		4780048	1					
ANR	4780180	CompoundStatement		24:26:449:449	4780048	1					
ANR	4780181	IfStatement	if ( c != egg -> lang . quoteline )		4780048	0					
ANR	4780182	Condition	c != egg -> lang . quoteline	1245:6:33570:33593	4780048	0	True				
ANR	4780183	EqualityExpression	c != egg -> lang . quoteline		4780048	0		!=			
ANR	4780184	Identifier	c		4780048	0					
ANR	4780185	MemberAccess	egg -> lang . quoteline		4780048	1					
ANR	4780186	PtrMemberAccess	egg -> lang		4780048	0					
ANR	4780187	Identifier	egg		4780048	0					
ANR	4780188	Identifier	lang		4780048	1					
ANR	4780189	Identifier	quoteline		4780048	1					
ANR	4780190	CompoundStatement		25:32:483:483	4780048	1					
ANR	4780191	IfStatement	if ( egg -> lang . quotelinevar == 1 )		4780048	0					
ANR	4780192	Condition	egg -> lang . quotelinevar == 1	1246:7:33605:33631	4780048	0	True				
ANR	4780193	EqualityExpression	egg -> lang . quotelinevar == 1		4780048	0		==			
ANR	4780194	MemberAccess	egg -> lang . quotelinevar		4780048	0					
ANR	4780195	PtrMemberAccess	egg -> lang		4780048	0					
ANR	4780196	Identifier	egg		4780048	0					
ANR	4780197	Identifier	lang		4780048	1					
ANR	4780198	Identifier	quotelinevar		4780048	1					
ANR	4780199	PrimaryExpression	1		4780048	1					
ANR	4780200	CompoundStatement		26:36:521:521	4780048	1					
ANR	4780201	IfStatement	if ( c == '`' )		4780048	0					
ANR	4780202	Condition	c == '`'	1247:8:33644:33651	4780048	0	True				
ANR	4780203	EqualityExpression	c == '`'		4780048	0		==			
ANR	4780204	Identifier	c		4780048	0					
ANR	4780205	PrimaryExpression	'`'		4780048	1					
ANR	4780206	CompoundStatement		27:18:541:541	4780048	1					
ANR	4780207	ExpressionStatement	egg -> lang . elem [ egg -> lang . elem_n ] = 0	1248:5:33661:33697	4780048	0	True				
ANR	4780208	AssignmentExpression	egg -> lang . elem [ egg -> lang . elem_n ] = 0		4780048	0		=			
ANR	4780209	ArrayIndexing	egg -> lang . elem [ egg -> lang . elem_n ]		4780048	0					
ANR	4780210	MemberAccess	egg -> lang . elem		4780048	0					
ANR	4780211	PtrMemberAccess	egg -> lang		4780048	0					
ANR	4780212	Identifier	egg		4780048	0					
ANR	4780213	Identifier	lang		4780048	1					
ANR	4780214	Identifier	elem		4780048	1					
ANR	4780215	MemberAccess	egg -> lang . elem_n		4780048	1					
ANR	4780216	PtrMemberAccess	egg -> lang		4780048	0					
ANR	4780217	Identifier	egg		4780048	0					
ANR	4780218	Identifier	lang		4780048	1					
ANR	4780219	Identifier	elem_n		4780048	1					
ANR	4780220	PrimaryExpression	0		4780048	1					
ANR	4780221	ExpressionStatement	egg -> lang . elem_n = 0	1249:5:33704:33724	4780048	1	True				
ANR	4780222	AssignmentExpression	egg -> lang . elem_n = 0		4780048	0		=			
ANR	4780223	MemberAccess	egg -> lang . elem_n		4780048	0					
ANR	4780224	PtrMemberAccess	egg -> lang		4780048	0					
ANR	4780225	Identifier	egg		4780048	0					
ANR	4780226	Identifier	lang		4780048	1					
ANR	4780227	Identifier	elem_n		4780048	1					
ANR	4780228	PrimaryExpression	0		4780048	1					
ANR	4780229	ExpressionStatement	"tmp_ptr = r_egg_mkvar ( egg , str , egg -> lang . elem , 0 )"	1250:5:33731:33782	4780048	2	True				
ANR	4780230	AssignmentExpression	"tmp_ptr = r_egg_mkvar ( egg , str , egg -> lang . elem , 0 )"		4780048	0		=			
ANR	4780231	Identifier	tmp_ptr		4780048	0					
ANR	4780232	CallExpression	"r_egg_mkvar ( egg , str , egg -> lang . elem , 0 )"		4780048	1					
ANR	4780233	Callee	r_egg_mkvar		4780048	0					
ANR	4780234	Identifier	r_egg_mkvar		4780048	0					
ANR	4780235	ArgumentList	egg		4780048	1					
ANR	4780236	Argument	egg		4780048	0					
ANR	4780237	Identifier	egg		4780048	0					
ANR	4780238	Argument	str		4780048	1					
ANR	4780239	Identifier	str		4780048	0					
ANR	4780240	Argument	egg -> lang . elem		4780048	2					
ANR	4780241	MemberAccess	egg -> lang . elem		4780048	0					
ANR	4780242	PtrMemberAccess	egg -> lang		4780048	0					
ANR	4780243	Identifier	egg		4780048	0					
ANR	4780244	Identifier	lang		4780048	1					
ANR	4780245	Identifier	elem		4780048	1					
ANR	4780246	Argument	0		4780048	3					
ANR	4780247	PrimaryExpression	0		4780048	0					
ANR	4780248	ExpressionStatement	"r_egg_printf ( egg , ""%s"" , tmp_ptr )"	1251:5:33789:33822	4780048	3	True				
ANR	4780249	CallExpression	"r_egg_printf ( egg , ""%s"" , tmp_ptr )"		4780048	0					
ANR	4780250	Callee	r_egg_printf		4780048	0					
ANR	4780251	Identifier	r_egg_printf		4780048	0					
ANR	4780252	ArgumentList	egg		4780048	1					
ANR	4780253	Argument	egg		4780048	0					
ANR	4780254	Identifier	egg		4780048	0					
ANR	4780255	Argument	"""%s"""		4780048	1					
ANR	4780256	PrimaryExpression	"""%s"""		4780048	0					
ANR	4780257	Argument	tmp_ptr		4780048	2					
ANR	4780258	Identifier	tmp_ptr		4780048	0					
ANR	4780259	ExpressionStatement	free ( tmp_ptr )	1252:5:33829:33843	4780048	4	True				
ANR	4780260	CallExpression	free ( tmp_ptr )		4780048	0					
ANR	4780261	Callee	free		4780048	0					
ANR	4780262	Identifier	free		4780048	0					
ANR	4780263	ArgumentList	tmp_ptr		4780048	1					
ANR	4780264	Argument	tmp_ptr		4780048	0					
ANR	4780265	Identifier	tmp_ptr		4780048	0					
ANR	4780266	ExpressionStatement	egg -> lang . quotelinevar = 0	1253:5:33850:33876	4780048	5	True				
ANR	4780267	AssignmentExpression	egg -> lang . quotelinevar = 0		4780048	0		=			
ANR	4780268	MemberAccess	egg -> lang . quotelinevar		4780048	0					
ANR	4780269	PtrMemberAccess	egg -> lang		4780048	0					
ANR	4780270	Identifier	egg		4780048	0					
ANR	4780271	Identifier	lang		4780048	1					
ANR	4780272	Identifier	quotelinevar		4780048	1					
ANR	4780273	PrimaryExpression	0		4780048	1					
ANR	4780274	ElseStatement	else		4780048	0					
ANR	4780275	CompoundStatement		34:11:776:776	4780048	0					
ANR	4780276	ExpressionStatement	egg -> lang . elem [ egg -> lang . elem_n ++ ] = c	1255:5:33896:33934	4780048	0	True				
ANR	4780277	AssignmentExpression	egg -> lang . elem [ egg -> lang . elem_n ++ ] = c		4780048	0		=			
ANR	4780278	ArrayIndexing	egg -> lang . elem [ egg -> lang . elem_n ++ ]		4780048	0					
ANR	4780279	MemberAccess	egg -> lang . elem		4780048	0					
ANR	4780280	PtrMemberAccess	egg -> lang		4780048	0					
ANR	4780281	Identifier	egg		4780048	0					
ANR	4780282	Identifier	lang		4780048	1					
ANR	4780283	Identifier	elem		4780048	1					
ANR	4780284	PostIncDecOperationExpression	egg -> lang . elem_n ++		4780048	1					
ANR	4780285	MemberAccess	egg -> lang . elem_n		4780048	0					
ANR	4780286	PtrMemberAccess	egg -> lang		4780048	0					
ANR	4780287	Identifier	egg		4780048	0					
ANR	4780288	Identifier	lang		4780048	1					
ANR	4780289	Identifier	elem_n		4780048	1					
ANR	4780290	IncDec	++		4780048	1					
ANR	4780291	Identifier	c		4780048	1					
ANR	4780292	ElseStatement	else		4780048	0					
ANR	4780293	CompoundStatement		37:10:839:839	4780048	0					
ANR	4780294	IfStatement	if ( c == '`' )		4780048	0					
ANR	4780295	Condition	c == '`'	1258:8:33962:33969	4780048	0	True				
ANR	4780296	EqualityExpression	c == '`'		4780048	0		==			
ANR	4780297	Identifier	c		4780048	0					
ANR	4780298	PrimaryExpression	'`'		4780048	1					
ANR	4780299	CompoundStatement		38:18:859:859	4780048	1					
ANR	4780300	ExpressionStatement	egg -> lang . elem_n = 0	1259:5:33979:33999	4780048	0	True				
ANR	4780301	AssignmentExpression	egg -> lang . elem_n = 0		4780048	0		=			
ANR	4780302	MemberAccess	egg -> lang . elem_n		4780048	0					
ANR	4780303	PtrMemberAccess	egg -> lang		4780048	0					
ANR	4780304	Identifier	egg		4780048	0					
ANR	4780305	Identifier	lang		4780048	1					
ANR	4780306	Identifier	elem_n		4780048	1					
ANR	4780307	PrimaryExpression	0		4780048	1					
ANR	4780308	ExpressionStatement	egg -> lang . quotelinevar = 1	1260:5:34006:34032	4780048	1	True				
ANR	4780309	AssignmentExpression	egg -> lang . quotelinevar = 1		4780048	0		=			
ANR	4780310	MemberAccess	egg -> lang . quotelinevar		4780048	0					
ANR	4780311	PtrMemberAccess	egg -> lang		4780048	0					
ANR	4780312	Identifier	egg		4780048	0					
ANR	4780313	Identifier	lang		4780048	1					
ANR	4780314	Identifier	quotelinevar		4780048	1					
ANR	4780315	PrimaryExpression	1		4780048	1					
ANR	4780316	ElseStatement	else		4780048	0					
ANR	4780317	CompoundStatement		41:11:932:932	4780048	0					
ANR	4780318	ExpressionStatement	"r_egg_printf ( egg , ""%c"" , c )"	1262:5:34052:34079	4780048	0	True				
ANR	4780319	CallExpression	"r_egg_printf ( egg , ""%c"" , c )"		4780048	0					
ANR	4780320	Callee	r_egg_printf		4780048	0					
ANR	4780321	Identifier	r_egg_printf		4780048	0					
ANR	4780322	ArgumentList	egg		4780048	1					
ANR	4780323	Argument	egg		4780048	0					
ANR	4780324	Identifier	egg		4780048	0					
ANR	4780325	Argument	"""%c"""		4780048	1					
ANR	4780326	PrimaryExpression	"""%c"""		4780048	0					
ANR	4780327	Argument	c		4780048	2					
ANR	4780328	Identifier	c		4780048	0					
ANR	4780329	ExpressionStatement	egg -> lang . oc = c	1265:3:34095:34111	4780048	1	True				
ANR	4780330	AssignmentExpression	egg -> lang . oc = c		4780048	0		=			
ANR	4780331	MemberAccess	egg -> lang . oc		4780048	0					
ANR	4780332	PtrMemberAccess	egg -> lang		4780048	0					
ANR	4780333	Identifier	egg		4780048	0					
ANR	4780334	Identifier	lang		4780048	1					
ANR	4780335	Identifier	oc		4780048	1					
ANR	4780336	Identifier	c		4780048	1					
ANR	4780337	ReturnStatement	return 0 ;	1266:3:34116:34124	4780048	2	True				
ANR	4780338	PrimaryExpression	0		4780048	0					
ANR	4780339	ElseStatement	else		4780048	0					
ANR	4780340	CompoundStatement		47:9:1022:1022	4780048	0					
ANR	4780341	ExpressionStatement	"r_egg_printf ( egg , ""\\n"" )"	1268:3:34140:34164	4780048	0	True				
ANR	4780342	CallExpression	"r_egg_printf ( egg , ""\\n"" )"		4780048	0					
ANR	4780343	Callee	r_egg_printf		4780048	0					
ANR	4780344	Identifier	r_egg_printf		4780048	0					
ANR	4780345	ArgumentList	egg		4780048	1					
ANR	4780346	Argument	egg		4780048	0					
ANR	4780347	Identifier	egg		4780048	0					
ANR	4780348	Argument	"""\\n"""		4780048	1					
ANR	4780349	PrimaryExpression	"""\\n"""		4780048	0					
ANR	4780350	ExpressionStatement	egg -> lang . quoteline = 0	1269:3:34169:34192	4780048	1	True				
ANR	4780351	AssignmentExpression	egg -> lang . quoteline = 0		4780048	0		=			
ANR	4780352	MemberAccess	egg -> lang . quoteline		4780048	0					
ANR	4780353	PtrMemberAccess	egg -> lang		4780048	0					
ANR	4780354	Identifier	egg		4780048	0					
ANR	4780355	Identifier	lang		4780048	1					
ANR	4780356	Identifier	quoteline		4780048	1					
ANR	4780357	PrimaryExpression	0		4780048	1					
ANR	4780358	IfStatement	if ( egg -> lang . commentmode )		4780048	8					
ANR	4780359	Condition	egg -> lang . commentmode	1273:5:34207:34227	4780048	0	True				
ANR	4780360	MemberAccess	egg -> lang . commentmode		4780048	0					
ANR	4780361	PtrMemberAccess	egg -> lang		4780048	0					
ANR	4780362	Identifier	egg		4780048	0					
ANR	4780363	Identifier	lang		4780048	1					
ANR	4780364	Identifier	commentmode		4780048	1					
ANR	4780365	CompoundStatement		53:28:1117:1117	4780048	1					
ANR	4780366	IfStatement	if ( c == '/' && egg -> lang . oc == '*' )		4780048	0					
ANR	4780367	Condition	c == '/' && egg -> lang . oc == '*'	1274:6:34238:34268	4780048	0	True				
ANR	4780368	AndExpression	c == '/' && egg -> lang . oc == '*'		4780048	0		&&			
ANR	4780369	EqualityExpression	c == '/'		4780048	0		==			
ANR	4780370	Identifier	c		4780048	0					
ANR	4780371	PrimaryExpression	'/'		4780048	1					
ANR	4780372	EqualityExpression	egg -> lang . oc == '*'		4780048	1		==			
ANR	4780373	MemberAccess	egg -> lang . oc		4780048	0					
ANR	4780374	PtrMemberAccess	egg -> lang		4780048	0					
ANR	4780375	Identifier	egg		4780048	0					
ANR	4780376	Identifier	lang		4780048	1					
ANR	4780377	Identifier	oc		4780048	1					
ANR	4780378	PrimaryExpression	'*'		4780048	1					
ANR	4780379	CompoundStatement		54:39:1158:1158	4780048	1					
ANR	4780380	ExpressionStatement	egg -> lang . commentmode = 0	1275:3:34276:34301	4780048	0	True				
ANR	4780381	AssignmentExpression	egg -> lang . commentmode = 0		4780048	0		=			
ANR	4780382	MemberAccess	egg -> lang . commentmode		4780048	0					
ANR	4780383	PtrMemberAccess	egg -> lang		4780048	0					
ANR	4780384	Identifier	egg		4780048	0					
ANR	4780385	Identifier	lang		4780048	1					
ANR	4780386	Identifier	commentmode		4780048	1					
ANR	4780387	PrimaryExpression	0		4780048	1					
ANR	4780388	ExpressionStatement	egg -> lang . oc = c	1277:2:34309:34325	4780048	1	True				
ANR	4780389	AssignmentExpression	egg -> lang . oc = c		4780048	0		=			
ANR	4780390	MemberAccess	egg -> lang . oc		4780048	0					
ANR	4780391	PtrMemberAccess	egg -> lang		4780048	0					
ANR	4780392	Identifier	egg		4780048	0					
ANR	4780393	Identifier	lang		4780048	1					
ANR	4780394	Identifier	oc		4780048	1					
ANR	4780395	Identifier	c		4780048	1					
ANR	4780396	ReturnStatement	return 0 ;	1278:2:34329:34337	4780048	2	True				
ANR	4780397	PrimaryExpression	0		4780048	0					
ANR	4780398	ElseStatement	else		4780048	0					
ANR	4780399	IfStatement	if ( c == '*' && egg -> lang . oc == '/' )		4780048	0					
ANR	4780400	Condition	c == '*' && egg -> lang . oc == '/'	1279:12:34351:34381	4780048	0	True				
ANR	4780401	AndExpression	c == '*' && egg -> lang . oc == '/'		4780048	0		&&			
ANR	4780402	EqualityExpression	c == '*'		4780048	0		==			
ANR	4780403	Identifier	c		4780048	0					
ANR	4780404	PrimaryExpression	'*'		4780048	1					
ANR	4780405	EqualityExpression	egg -> lang . oc == '/'		4780048	1		==			
ANR	4780406	MemberAccess	egg -> lang . oc		4780048	0					
ANR	4780407	PtrMemberAccess	egg -> lang		4780048	0					
ANR	4780408	Identifier	egg		4780048	0					
ANR	4780409	Identifier	lang		4780048	1					
ANR	4780410	Identifier	oc		4780048	1					
ANR	4780411	PrimaryExpression	'/'		4780048	1					
ANR	4780412	CompoundStatement		59:45:1271:1271	4780048	1					
ANR	4780413	ExpressionStatement	egg -> lang . commentmode = 1	1280:2:34388:34413	4780048	0	True				
ANR	4780414	AssignmentExpression	egg -> lang . commentmode = 1		4780048	0		=			
ANR	4780415	MemberAccess	egg -> lang . commentmode		4780048	0					
ANR	4780416	PtrMemberAccess	egg -> lang		4780048	0					
ANR	4780417	Identifier	egg		4780048	0					
ANR	4780418	Identifier	lang		4780048	1					
ANR	4780419	Identifier	commentmode		4780048	1					
ANR	4780420	PrimaryExpression	1		4780048	1					
ANR	4780421	IfStatement	if ( egg -> lang . slurp )		4780048	9					
ANR	4780422	Condition	egg -> lang . slurp	1282:5:34423:34437	4780048	0	True				
ANR	4780423	MemberAccess	egg -> lang . slurp		4780048	0					
ANR	4780424	PtrMemberAccess	egg -> lang		4780048	0					
ANR	4780425	Identifier	egg		4780048	0					
ANR	4780426	Identifier	lang		4780048	1					
ANR	4780427	Identifier	slurp		4780048	1					
ANR	4780428	CompoundStatement		62:22:1327:1327	4780048	1					
ANR	4780429	IfStatement	"if ( egg -> lang . slurp != '""' && c == egg -> lang . slurpin )"		4780048	0					
ANR	4780430	Condition	"egg -> lang . slurp != '""' && c == egg -> lang . slurpin"	1283:6:34448:34495	4780048	0	True				
ANR	4780431	AndExpression	"egg -> lang . slurp != '""' && c == egg -> lang . slurpin"		4780048	0		&&			
ANR	4780432	EqualityExpression	"egg -> lang . slurp != '""'"		4780048	0		!=			
ANR	4780433	MemberAccess	egg -> lang . slurp		4780048	0					
ANR	4780434	PtrMemberAccess	egg -> lang		4780048	0					
ANR	4780435	Identifier	egg		4780048	0					
ANR	4780436	Identifier	lang		4780048	1					
ANR	4780437	Identifier	slurp		4780048	1					
ANR	4780438	PrimaryExpression	"'""'"		4780048	1					
ANR	4780439	EqualityExpression	c == egg -> lang . slurpin		4780048	1		==			
ANR	4780440	Identifier	c		4780048	0					
ANR	4780441	MemberAccess	egg -> lang . slurpin		4780048	1					
ANR	4780442	PtrMemberAccess	egg -> lang		4780048	0					
ANR	4780443	Identifier	egg		4780048	0					
ANR	4780444	Identifier	lang		4780048	1					
ANR	4780445	Identifier	slurpin		4780048	1					
ANR	4780446	CompoundStatement		63:56:1385:1385	4780048	1					
ANR	4780447	ExpressionStatement	"exit ( eprintf ( ""%s:%d Nesting of expressions not yet supported\\n"" , egg -> lang . file , egg -> lang . line ) )"	1284:3:34538:34648	4780048	0	True				
ANR	4780448	CallExpression	"exit ( eprintf ( ""%s:%d Nesting of expressions not yet supported\\n"" , egg -> lang . file , egg -> lang . line ) )"		4780048	0					
ANR	4780449	Callee	exit		4780048	0					
ANR	4780450	Identifier	exit		4780048	0					
ANR	4780451	ArgumentList	"eprintf ( ""%s:%d Nesting of expressions not yet supported\\n"" , egg -> lang . file , egg -> lang . line )"		4780048	1					
ANR	4780452	Argument	"eprintf ( ""%s:%d Nesting of expressions not yet supported\\n"" , egg -> lang . file , egg -> lang . line )"		4780048	0					
ANR	4780453	CallExpression	"eprintf ( ""%s:%d Nesting of expressions not yet supported\\n"" , egg -> lang . file , egg -> lang . line )"		4780048	0					
ANR	4780454	Callee	eprintf		4780048	0					
ANR	4780455	Identifier	eprintf		4780048	0					
ANR	4780456	ArgumentList	"""%s:%d Nesting of expressions not yet supported\\n"""		4780048	1					
ANR	4780457	Argument	"""%s:%d Nesting of expressions not yet supported\\n"""		4780048	0					
ANR	4780458	PrimaryExpression	"""%s:%d Nesting of expressions not yet supported\\n"""		4780048	0					
ANR	4780459	Argument	egg -> lang . file		4780048	1					
ANR	4780460	MemberAccess	egg -> lang . file		4780048	0					
ANR	4780461	PtrMemberAccess	egg -> lang		4780048	0					
ANR	4780462	Identifier	egg		4780048	0					
ANR	4780463	Identifier	lang		4780048	1					
ANR	4780464	Identifier	file		4780048	1					
ANR	4780465	Argument	egg -> lang . line		4780048	2					
ANR	4780466	MemberAccess	egg -> lang . line		4780048	0					
ANR	4780467	PtrMemberAccess	egg -> lang		4780048	0					
ANR	4780468	Identifier	egg		4780048	0					
ANR	4780469	Identifier	lang		4780048	1					
ANR	4780470	Identifier	line		4780048	1					
ANR	4780471	IfStatement	if ( c == egg -> lang . slurp && egg -> lang . oc != '\\\\' )		4780048	1					
ANR	4780472	Condition	c == egg -> lang . slurp && egg -> lang . oc != '\\\\'	1288:6:34660:34703	4780048	0	True				
ANR	4780473	AndExpression	c == egg -> lang . slurp && egg -> lang . oc != '\\\\'		4780048	0		&&			
ANR	4780474	EqualityExpression	c == egg -> lang . slurp		4780048	0		==			
ANR	4780475	Identifier	c		4780048	0					
ANR	4780476	MemberAccess	egg -> lang . slurp		4780048	1					
ANR	4780477	PtrMemberAccess	egg -> lang		4780048	0					
ANR	4780478	Identifier	egg		4780048	0					
ANR	4780479	Identifier	lang		4780048	1					
ANR	4780480	Identifier	slurp		4780048	1					
ANR	4780481	EqualityExpression	egg -> lang . oc != '\\\\'		4780048	1		!=			
ANR	4780482	MemberAccess	egg -> lang . oc		4780048	0					
ANR	4780483	PtrMemberAccess	egg -> lang		4780048	0					
ANR	4780484	Identifier	egg		4780048	0					
ANR	4780485	Identifier	lang		4780048	1					
ANR	4780486	Identifier	oc		4780048	1					
ANR	4780487	PrimaryExpression	'\\\\'		4780048	1					
ANR	4780488	CompoundStatement		68:52:1593:1593	4780048	1					
ANR	4780489	ExpressionStatement	egg -> lang . elem [ egg -> lang . elem_n ] = '\\0'	1289:3:34736:34775	4780048	0	True				
ANR	4780490	AssignmentExpression	egg -> lang . elem [ egg -> lang . elem_n ] = '\\0'		4780048	0		=			
ANR	4780491	ArrayIndexing	egg -> lang . elem [ egg -> lang . elem_n ]		4780048	0					
ANR	4780492	MemberAccess	egg -> lang . elem		4780048	0					
ANR	4780493	PtrMemberAccess	egg -> lang		4780048	0					
ANR	4780494	Identifier	egg		4780048	0					
ANR	4780495	Identifier	lang		4780048	1					
ANR	4780496	Identifier	elem		4780048	1					
ANR	4780497	MemberAccess	egg -> lang . elem_n		4780048	1					
ANR	4780498	PtrMemberAccess	egg -> lang		4780048	0					
ANR	4780499	Identifier	egg		4780048	0					
ANR	4780500	Identifier	lang		4780048	1					
ANR	4780501	Identifier	elem_n		4780048	1					
ANR	4780502	PrimaryExpression	'\\0'		4780048	1					
ANR	4780503	IfStatement	if ( egg -> lang . elem_n > 0 )		4780048	1					
ANR	4780504	Condition	egg -> lang . elem_n > 0	1290:7:34784:34803	4780048	0	True				
ANR	4780505	RelationalExpression	egg -> lang . elem_n > 0		4780048	0		>			
ANR	4780506	MemberAccess	egg -> lang . elem_n		4780048	0					
ANR	4780507	PtrMemberAccess	egg -> lang		4780048	0					
ANR	4780508	Identifier	egg		4780048	0					
ANR	4780509	Identifier	lang		4780048	1					
ANR	4780510	Identifier	elem_n		4780048	1					
ANR	4780511	PrimaryExpression	0		4780048	1					
ANR	4780512	CompoundStatement		70:29:1693:1693	4780048	1					
ANR	4780513	ExpressionStatement	"rcc_element ( egg , egg -> lang . elem )"	1291:4:34812:34845	4780048	0	True				
ANR	4780514	CallExpression	"rcc_element ( egg , egg -> lang . elem )"		4780048	0					
ANR	4780515	Callee	rcc_element		4780048	0					
ANR	4780516	Identifier	rcc_element		4780048	0					
ANR	4780517	ArgumentList	egg		4780048	1					
ANR	4780518	Argument	egg		4780048	0					
ANR	4780519	Identifier	egg		4780048	0					
ANR	4780520	Argument	egg -> lang . elem		4780048	1					
ANR	4780521	MemberAccess	egg -> lang . elem		4780048	0					
ANR	4780522	PtrMemberAccess	egg -> lang		4780048	0					
ANR	4780523	Identifier	egg		4780048	0					
ANR	4780524	Identifier	lang		4780048	1					
ANR	4780525	Identifier	elem		4780048	1					
ANR	4780526	ElseStatement	else		4780048	0					
ANR	4780527	CompoundStatement		72:10:1744:1744	4780048	0					
ANR	4780528	ExpressionStatement	"e -> frame ( egg , 0 )"	1293:4:34863:34880	4780048	0	True				
ANR	4780529	CallExpression	"e -> frame ( egg , 0 )"		4780048	0					
ANR	4780530	Callee	e -> frame		4780048	0					
ANR	4780531	PtrMemberAccess	e -> frame		4780048	0					
ANR	4780532	Identifier	e		4780048	0					
ANR	4780533	Identifier	frame		4780048	1					
ANR	4780534	ArgumentList	egg		4780048	1					
ANR	4780535	Argument	egg		4780048	0					
ANR	4780536	Identifier	egg		4780048	0					
ANR	4780537	Argument	0		4780048	1					
ANR	4780538	PrimaryExpression	0		4780048	0					
ANR	4780539	ExpressionStatement	egg -> lang . elem_n = 0	1295:3:34890:34910	4780048	2	True				
ANR	4780540	AssignmentExpression	egg -> lang . elem_n = 0		4780048	0		=			
ANR	4780541	MemberAccess	egg -> lang . elem_n		4780048	0					
ANR	4780542	PtrMemberAccess	egg -> lang		4780048	0					
ANR	4780543	Identifier	egg		4780048	0					
ANR	4780544	Identifier	lang		4780048	1					
ANR	4780545	Identifier	elem_n		4780048	1					
ANR	4780546	PrimaryExpression	0		4780048	1					
ANR	4780547	ExpressionStatement	egg -> lang . slurp = 0	1296:3:34915:34934	4780048	3	True				
ANR	4780548	AssignmentExpression	egg -> lang . slurp = 0		4780048	0		=			
ANR	4780549	MemberAccess	egg -> lang . slurp		4780048	0					
ANR	4780550	PtrMemberAccess	egg -> lang		4780048	0					
ANR	4780551	Identifier	egg		4780048	0					
ANR	4780552	Identifier	lang		4780048	1					
ANR	4780553	Identifier	slurp		4780048	1					
ANR	4780554	PrimaryExpression	0		4780048	1					
ANR	4780555	ElseStatement	else		4780048	0					
ANR	4780556	CompoundStatement		77:9:1832:1832	4780048	0					
ANR	4780557	ExpressionStatement	egg -> lang . elem [ egg -> lang . elem_n ++ ] = c	1298:3:34950:34988	4780048	0	True				
ANR	4780558	AssignmentExpression	egg -> lang . elem [ egg -> lang . elem_n ++ ] = c		4780048	0		=			
ANR	4780559	ArrayIndexing	egg -> lang . elem [ egg -> lang . elem_n ++ ]		4780048	0					
ANR	4780560	MemberAccess	egg -> lang . elem		4780048	0					
ANR	4780561	PtrMemberAccess	egg -> lang		4780048	0					
ANR	4780562	Identifier	egg		4780048	0					
ANR	4780563	Identifier	lang		4780048	1					
ANR	4780564	Identifier	elem		4780048	1					
ANR	4780565	PostIncDecOperationExpression	egg -> lang . elem_n ++		4780048	1					
ANR	4780566	MemberAccess	egg -> lang . elem_n		4780048	0					
ANR	4780567	PtrMemberAccess	egg -> lang		4780048	0					
ANR	4780568	Identifier	egg		4780048	0					
ANR	4780569	Identifier	lang		4780048	1					
ANR	4780570	Identifier	elem_n		4780048	1					
ANR	4780571	IncDec	++		4780048	1					
ANR	4780572	Identifier	c		4780048	1					
ANR	4780573	ExpressionStatement	egg -> lang . elem [ egg -> lang . elem_n ] = '\\0'	1300:2:34996:35035	4780048	2	True				
ANR	4780574	AssignmentExpression	egg -> lang . elem [ egg -> lang . elem_n ] = '\\0'		4780048	0		=			
ANR	4780575	ArrayIndexing	egg -> lang . elem [ egg -> lang . elem_n ]		4780048	0					
ANR	4780576	MemberAccess	egg -> lang . elem		4780048	0					
ANR	4780577	PtrMemberAccess	egg -> lang		4780048	0					
ANR	4780578	Identifier	egg		4780048	0					
ANR	4780579	Identifier	lang		4780048	1					
ANR	4780580	Identifier	elem		4780048	1					
ANR	4780581	MemberAccess	egg -> lang . elem_n		4780048	1					
ANR	4780582	PtrMemberAccess	egg -> lang		4780048	0					
ANR	4780583	Identifier	egg		4780048	0					
ANR	4780584	Identifier	lang		4780048	1					
ANR	4780585	Identifier	elem_n		4780048	1					
ANR	4780586	PrimaryExpression	'\\0'		4780048	1					
ANR	4780587	ElseStatement	else		4780048	0					
ANR	4780588	CompoundStatement		81:8:1932:1932	4780048	0					
ANR	4780589	SwitchStatement	switch ( c )		4780048	0					
ANR	4780590	Condition	c	1302:10:35057:35057	4780048	0	True				
ANR	4780591	Identifier	c		4780048	0					
ANR	4780592	CompoundStatement		82:13:1947:1947	4780048	1					
ANR	4780593	Label	case ';' :	1303:2:35064:35072	4780048	0	True				
ANR	4780594	ExpressionStatement	rcc_next ( egg )	1304:3:35077:35091	4780048	1	True				
ANR	4780595	CallExpression	rcc_next ( egg )		4780048	0					
ANR	4780596	Callee	rcc_next		4780048	0					
ANR	4780597	Identifier	rcc_next		4780048	0					
ANR	4780598	ArgumentList	egg		4780048	1					
ANR	4780599	Argument	egg		4780048	0					
ANR	4780600	Identifier	egg		4780048	0					
ANR	4780601	BreakStatement	break ;	1305:3:35096:35101	4780048	2	True				
ANR	4780602	Label	"case '""' :"	1306:2:35105:35113	4780048	3	True				
ANR	4780603	ExpressionStatement	"egg -> lang . slurp = '""'"	1307:3:35118:35139	4780048	4	True				
ANR	4780604	AssignmentExpression	"egg -> lang . slurp = '""'"		4780048	0		=			
ANR	4780605	MemberAccess	egg -> lang . slurp		4780048	0					
ANR	4780606	PtrMemberAccess	egg -> lang		4780048	0					
ANR	4780607	Identifier	egg		4780048	0					
ANR	4780608	Identifier	lang		4780048	1					
ANR	4780609	Identifier	slurp		4780048	1					
ANR	4780610	PrimaryExpression	"'""'"		4780048	1					
ANR	4780611	BreakStatement	break ;	1308:3:35144:35149	4780048	5	True				
ANR	4780612	Label	case '(' :	1309:2:35153:35161	4780048	6	True				
ANR	4780613	ExpressionStatement	egg -> lang . slurpin = '('	1310:3:35166:35189	4780048	7	True				
ANR	4780614	AssignmentExpression	egg -> lang . slurpin = '('		4780048	0		=			
ANR	4780615	MemberAccess	egg -> lang . slurpin		4780048	0					
ANR	4780616	PtrMemberAccess	egg -> lang		4780048	0					
ANR	4780617	Identifier	egg		4780048	0					
ANR	4780618	Identifier	lang		4780048	1					
ANR	4780619	Identifier	slurpin		4780048	1					
ANR	4780620	PrimaryExpression	'('		4780048	1					
ANR	4780621	ExpressionStatement	egg -> lang . slurp = ')'	1311:3:35194:35215	4780048	8	True				
ANR	4780622	AssignmentExpression	egg -> lang . slurp = ')'		4780048	0		=			
ANR	4780623	MemberAccess	egg -> lang . slurp		4780048	0					
ANR	4780624	PtrMemberAccess	egg -> lang		4780048	0					
ANR	4780625	Identifier	egg		4780048	0					
ANR	4780626	Identifier	lang		4780048	1					
ANR	4780627	Identifier	slurp		4780048	1					
ANR	4780628	PrimaryExpression	')'		4780048	1					
ANR	4780629	BreakStatement	break ;	1312:3:35220:35225	4780048	9	True				
ANR	4780630	Label	case '{' :	1313:2:35229:35237	4780048	10	True				
ANR	4780631	IfStatement	if ( CTX > 0 )		4780048	11					
ANR	4780632	Condition	CTX > 0	1314:7:35246:35252	4780048	0	True				
ANR	4780633	RelationalExpression	CTX > 0		4780048	0		>			
ANR	4780634	Identifier	CTX		4780048	0					
ANR	4780635	PrimaryExpression	0		4780048	1					
ANR	4780636	CompoundStatement		94:16:2142:2142	4780048	1					
ANR	4780637	IfStatement	if ( CTX > 31 || CTX < 0 )		4780048	0					
ANR	4780638	Condition	CTX > 31 || CTX < 0	1315:8:35265:35283	4780048	0	True				
ANR	4780639	OrExpression	CTX > 31 || CTX < 0		4780048	0		||			
ANR	4780640	RelationalExpression	CTX > 31		4780048	0		>			
ANR	4780641	Identifier	CTX		4780048	0					
ANR	4780642	PrimaryExpression	31		4780048	1					
ANR	4780643	RelationalExpression	CTX < 0		4780048	1		<			
ANR	4780644	Identifier	CTX		4780048	0					
ANR	4780645	PrimaryExpression	0		4780048	1					
ANR	4780646	CompoundStatement		95:29:2173:2173	4780048	1					
ANR	4780647	ExpressionStatement	"eprintf ( ""Sinking before overflow\\n"" )"	1316:5:35293:35330	4780048	0	True				
ANR	4780648	CallExpression	"eprintf ( ""Sinking before overflow\\n"" )"		4780048	0					
ANR	4780649	Callee	eprintf		4780048	0					
ANR	4780650	Identifier	eprintf		4780048	0					
ANR	4780651	ArgumentList	"""Sinking before overflow\\n"""		4780048	1					
ANR	4780652	Argument	"""Sinking before overflow\\n"""		4780048	0					
ANR	4780653	PrimaryExpression	"""Sinking before overflow\\n"""		4780048	0					
ANR	4780654	ExpressionStatement	CTX = 0	1317:5:35337:35344	4780048	1	True				
ANR	4780655	AssignmentExpression	CTX = 0		4780048	0		=			
ANR	4780656	Identifier	CTX		4780048	0					
ANR	4780657	PrimaryExpression	0		4780048	1					
ANR	4780658	BreakStatement	break ;	1318:5:35351:35356	4780048	2	True				
ANR	4780659	IfStatement	"if ( egg -> lang . nested_callname [ CTX ] && strstr ( egg -> lang . nested_callname [ CTX ] , ""if"" ) && strstr ( egg -> lang . elem , ""else"" ) )"		4780048	1					
ANR	4780660	Condition	"egg -> lang . nested_callname [ CTX ] && strstr ( egg -> lang . nested_callname [ CTX ] , ""if"" ) && strstr ( egg -> lang . elem , ""else"" )"	1321:8:35430:35551	4780048	0	True				
ANR	4780661	AndExpression	"egg -> lang . nested_callname [ CTX ] && strstr ( egg -> lang . nested_callname [ CTX ] , ""if"" ) && strstr ( egg -> lang . elem , ""else"" )"		4780048	0		&&			
ANR	4780662	ArrayIndexing	egg -> lang . nested_callname [ CTX ]		4780048	0					
ANR	4780663	MemberAccess	egg -> lang . nested_callname		4780048	0					
ANR	4780664	PtrMemberAccess	egg -> lang		4780048	0					
ANR	4780665	Identifier	egg		4780048	0					
ANR	4780666	Identifier	lang		4780048	1					
ANR	4780667	Identifier	nested_callname		4780048	1					
ANR	4780668	Identifier	CTX		4780048	1					
ANR	4780669	AndExpression	"strstr ( egg -> lang . nested_callname [ CTX ] , ""if"" ) && strstr ( egg -> lang . elem , ""else"" )"		4780048	1		&&			
ANR	4780670	CallExpression	"strstr ( egg -> lang . nested_callname [ CTX ] , ""if"" )"		4780048	0					
ANR	4780671	Callee	strstr		4780048	0					
ANR	4780672	Identifier	strstr		4780048	0					
ANR	4780673	ArgumentList	egg -> lang . nested_callname [ CTX ]		4780048	1					
ANR	4780674	Argument	egg -> lang . nested_callname [ CTX ]		4780048	0					
ANR	4780675	ArrayIndexing	egg -> lang . nested_callname [ CTX ]		4780048	0					
ANR	4780676	MemberAccess	egg -> lang . nested_callname		4780048	0					
ANR	4780677	PtrMemberAccess	egg -> lang		4780048	0					
ANR	4780678	Identifier	egg		4780048	0					
ANR	4780679	Identifier	lang		4780048	1					
ANR	4780680	Identifier	nested_callname		4780048	1					
ANR	4780681	Identifier	CTX		4780048	1					
ANR	4780682	Argument	"""if"""		4780048	1					
ANR	4780683	PrimaryExpression	"""if"""		4780048	0					
ANR	4780684	CallExpression	"strstr ( egg -> lang . elem , ""else"" )"		4780048	1					
ANR	4780685	Callee	strstr		4780048	0					
ANR	4780686	Identifier	strstr		4780048	0					
ANR	4780687	ArgumentList	egg -> lang . elem		4780048	1					
ANR	4780688	Argument	egg -> lang . elem		4780048	0					
ANR	4780689	MemberAccess	egg -> lang . elem		4780048	0					
ANR	4780690	PtrMemberAccess	egg -> lang		4780048	0					
ANR	4780691	Identifier	egg		4780048	0					
ANR	4780692	Identifier	lang		4780048	1					
ANR	4780693	Identifier	elem		4780048	1					
ANR	4780694	Argument	"""else"""		4780048	1					
ANR	4780695	PrimaryExpression	"""else"""		4780048	0					
ANR	4780696	CompoundStatement		102:41:2441:2441	4780048	1					
ANR	4780697	ExpressionStatement	* egg -> lang . elem = x00	1323:5:35561:35585	4780048	0	True				
ANR	4780698	AssignmentExpression	* egg -> lang . elem = x00		4780048	0		=			
ANR	4780699	UnaryOperationExpression	* egg -> lang . elem		4780048	0					
ANR	4780700	UnaryOperator	*		4780048	0					
ANR	4780701	MemberAccess	egg -> lang . elem		4780048	1					
ANR	4780702	PtrMemberAccess	egg -> lang		4780048	0					
ANR	4780703	Identifier	egg		4780048	0					
ANR	4780704	Identifier	lang		4780048	1					
ANR	4780705	Identifier	elem		4780048	1					
ANR	4780706	Identifier	x00		4780048	1					
ANR	4780707	ExpressionStatement	egg -> lang . elem_n = 0	1324:5:35592:35612	4780048	1	True				
ANR	4780708	AssignmentExpression	egg -> lang . elem_n = 0		4780048	0		=			
ANR	4780709	MemberAccess	egg -> lang . elem_n		4780048	0					
ANR	4780710	PtrMemberAccess	egg -> lang		4780048	0					
ANR	4780711	Identifier	egg		4780048	0					
ANR	4780712	Identifier	lang		4780048	1					
ANR	4780713	Identifier	elem_n		4780048	1					
ANR	4780714	PrimaryExpression	0		4780048	1					
ANR	4780715	Statement	R_FREE	1325:5:35619:35624	4780048	2	True				
ANR	4780716	Statement	(	1325:12:35626:35626	4780048	3	True				
ANR	4780717	Statement	egg	1325:13:35627:35629	4780048	4	True				
ANR	4780718	Statement	->	1325:16:35630:35631	4780048	5	True				
ANR	4780719	Statement	lang	1325:18:35632:35635	4780048	6	True				
ANR	4780720	Statement	.	1325:22:35636:35636	4780048	7	True				
ANR	4780721	Statement	ifelse_table	1325:23:35637:35648	4780048	8	True				
ANR	4780722	Statement	[	1325:35:35649:35649	4780048	9	True				
ANR	4780723	Statement	CTX	1325:36:35650:35652	4780048	10	True				
ANR	4780724	Statement	]	1325:39:35653:35653	4780048	11	True				
ANR	4780725	Statement	[	1325:40:35654:35654	4780048	12	True				
ANR	4780726	Statement	egg	1325:41:35655:35657	4780048	13	True				
ANR	4780727	Statement	->	1325:44:35658:35659	4780048	14	True				
ANR	4780728	Statement	lang	1325:46:35660:35663	4780048	15	True				
ANR	4780729	Statement	.	1325:50:35664:35664	4780048	16	True				
ANR	4780730	Statement	nestedi	1325:51:35665:35671	4780048	17	True				
ANR	4780731	Statement	[	1325:58:35672:35672	4780048	18	True				
ANR	4780732	Statement	CTX	1325:59:35673:35675	4780048	19	True				
ANR	4780733	Statement	]	1325:62:35676:35676	4780048	20	True				
ANR	4780734	Statement	-	1325:64:35678:35678	4780048	21	True				
ANR	4780735	Statement	1	1325:66:35680:35680	4780048	22	True				
ANR	4780736	Statement	]	1325:67:35681:35681	4780048	23	True				
ANR	4780737	Statement	)	1325:68:35682:35682	4780048	24	True				
ANR	4780738	ExpressionStatement	"egg -> lang . ifelse_table [ CTX ] [ egg -> lang . nestedi [ CTX ] - 1 ] = r_str_newf ( ""  __end_%d_%d_%d"" , egg -> lang . nfunctions , CTX , egg -> lang . nestedi [ CTX ] )"	1326:5:35689:35842	4780048	25	True				
ANR	4780739	AssignmentExpression	"egg -> lang . ifelse_table [ CTX ] [ egg -> lang . nestedi [ CTX ] - 1 ] = r_str_newf ( ""  __end_%d_%d_%d"" , egg -> lang . nfunctions , CTX , egg -> lang . nestedi [ CTX ] )"		4780048	0		=			
ANR	4780740	ArrayIndexing	egg -> lang . ifelse_table [ CTX ] [ egg -> lang . nestedi [ CTX ] - 1 ]		4780048	0					
ANR	4780741	ArrayIndexing	egg -> lang . ifelse_table [ CTX ]		4780048	0					
ANR	4780742	MemberAccess	egg -> lang . ifelse_table		4780048	0					
ANR	4780743	PtrMemberAccess	egg -> lang		4780048	0					
ANR	4780744	Identifier	egg		4780048	0					
ANR	4780745	Identifier	lang		4780048	1					
ANR	4780746	Identifier	ifelse_table		4780048	1					
ANR	4780747	Identifier	CTX		4780048	1					
ANR	4780748	AdditiveExpression	egg -> lang . nestedi [ CTX ] - 1		4780048	1		-			
ANR	4780749	ArrayIndexing	egg -> lang . nestedi [ CTX ]		4780048	0					
ANR	4780750	MemberAccess	egg -> lang . nestedi		4780048	0					
ANR	4780751	PtrMemberAccess	egg -> lang		4780048	0					
ANR	4780752	Identifier	egg		4780048	0					
ANR	4780753	Identifier	lang		4780048	1					
ANR	4780754	Identifier	nestedi		4780048	1					
ANR	4780755	Identifier	CTX		4780048	1					
ANR	4780756	PrimaryExpression	1		4780048	1					
ANR	4780757	CallExpression	"r_str_newf ( ""  __end_%d_%d_%d"" , egg -> lang . nfunctions , CTX , egg -> lang . nestedi [ CTX ] )"		4780048	1					
ANR	4780758	Callee	r_str_newf		4780048	0					
ANR	4780759	Identifier	r_str_newf		4780048	0					
ANR	4780760	ArgumentList	"""  __end_%d_%d_%d"""		4780048	1					
ANR	4780761	Argument	"""  __end_%d_%d_%d"""		4780048	0					
ANR	4780762	PrimaryExpression	"""  __end_%d_%d_%d"""		4780048	0					
ANR	4780763	Argument	egg -> lang . nfunctions		4780048	1					
ANR	4780764	MemberAccess	egg -> lang . nfunctions		4780048	0					
ANR	4780765	PtrMemberAccess	egg -> lang		4780048	0					
ANR	4780766	Identifier	egg		4780048	0					
ANR	4780767	Identifier	lang		4780048	1					
ANR	4780768	Identifier	nfunctions		4780048	1					
ANR	4780769	Argument	CTX		4780048	2					
ANR	4780770	Identifier	CTX		4780048	0					
ANR	4780771	Argument	egg -> lang . nestedi [ CTX ]		4780048	3					
ANR	4780772	ArrayIndexing	egg -> lang . nestedi [ CTX ]		4780048	0					
ANR	4780773	MemberAccess	egg -> lang . nestedi		4780048	0					
ANR	4780774	PtrMemberAccess	egg -> lang		4780048	0					
ANR	4780775	Identifier	egg		4780048	0					
ANR	4780776	Identifier	lang		4780048	1					
ANR	4780777	Identifier	nestedi		4780048	1					
ANR	4780778	Identifier	CTX		4780048	1					
ANR	4780779	ExpressionStatement	"r_egg_printf ( egg , ""  __begin_%d_%d_%d:\\n"" , egg -> lang . nfunctions , CTX , egg -> lang . nestedi [ CTX ] )"	1330:4:35854:35953	4780048	2	True				
ANR	4780780	CallExpression	"r_egg_printf ( egg , ""  __begin_%d_%d_%d:\\n"" , egg -> lang . nfunctions , CTX , egg -> lang . nestedi [ CTX ] )"		4780048	0					
ANR	4780781	Callee	r_egg_printf		4780048	0					
ANR	4780782	Identifier	r_egg_printf		4780048	0					
ANR	4780783	ArgumentList	egg		4780048	1					
ANR	4780784	Argument	egg		4780048	0					
ANR	4780785	Identifier	egg		4780048	0					
ANR	4780786	Argument	"""  __begin_%d_%d_%d:\\n"""		4780048	1					
ANR	4780787	PrimaryExpression	"""  __begin_%d_%d_%d:\\n"""		4780048	0					
ANR	4780788	Argument	egg -> lang . nfunctions		4780048	2					
ANR	4780789	MemberAccess	egg -> lang . nfunctions		4780048	0					
ANR	4780790	PtrMemberAccess	egg -> lang		4780048	0					
ANR	4780791	Identifier	egg		4780048	0					
ANR	4780792	Identifier	lang		4780048	1					
ANR	4780793	Identifier	nfunctions		4780048	1					
ANR	4780794	Argument	CTX		4780048	3					
ANR	4780795	Identifier	CTX		4780048	0					
ANR	4780796	Argument	egg -> lang . nestedi [ CTX ]		4780048	4					
ANR	4780797	ArrayIndexing	egg -> lang . nestedi [ CTX ]		4780048	0					
ANR	4780798	MemberAccess	egg -> lang . nestedi		4780048	0					
ANR	4780799	PtrMemberAccess	egg -> lang		4780048	0					
ANR	4780800	Identifier	egg		4780048	0					
ANR	4780801	Identifier	lang		4780048	1					
ANR	4780802	Identifier	nestedi		4780048	1					
ANR	4780803	Identifier	CTX		4780048	1					
ANR	4780804	ExpressionStatement	"rcc_context ( egg , 1 )"	1333:3:35996:36016	4780048	12	True				
ANR	4780805	CallExpression	"rcc_context ( egg , 1 )"		4780048	0					
ANR	4780806	Callee	rcc_context		4780048	0					
ANR	4780807	Identifier	rcc_context		4780048	0					
ANR	4780808	ArgumentList	egg		4780048	1					
ANR	4780809	Argument	egg		4780048	0					
ANR	4780810	Identifier	egg		4780048	0					
ANR	4780811	Argument	1		4780048	1					
ANR	4780812	PrimaryExpression	1		4780048	0					
ANR	4780813	BreakStatement	break ;	1334:3:36021:36026	4780048	13	True				
ANR	4780814	Label	case '}' :	1335:2:36030:36038	4780048	14	True				
ANR	4780815	ExpressionStatement	egg -> lang . endframe = egg -> lang . nested [ CTX ]	1336:3:36043:36085	4780048	15	True				
ANR	4780816	AssignmentExpression	egg -> lang . endframe = egg -> lang . nested [ CTX ]		4780048	0		=			
ANR	4780817	MemberAccess	egg -> lang . endframe		4780048	0					
ANR	4780818	PtrMemberAccess	egg -> lang		4780048	0					
ANR	4780819	Identifier	egg		4780048	0					
ANR	4780820	Identifier	lang		4780048	1					
ANR	4780821	Identifier	endframe		4780048	1					
ANR	4780822	ArrayIndexing	egg -> lang . nested [ CTX ]		4780048	1					
ANR	4780823	MemberAccess	egg -> lang . nested		4780048	0					
ANR	4780824	PtrMemberAccess	egg -> lang		4780048	0					
ANR	4780825	Identifier	egg		4780048	0					
ANR	4780826	Identifier	lang		4780048	1					
ANR	4780827	Identifier	nested		4780048	1					
ANR	4780828	Identifier	CTX		4780048	1					
ANR	4780829	IfStatement	if ( egg -> lang . endframe )		4780048	16					
ANR	4780830	Condition	egg -> lang . endframe	1337:7:36094:36111	4780048	0	True				
ANR	4780831	MemberAccess	egg -> lang . endframe		4780048	0					
ANR	4780832	PtrMemberAccess	egg -> lang		4780048	0					
ANR	4780833	Identifier	egg		4780048	0					
ANR	4780834	Identifier	lang		4780048	1					
ANR	4780835	Identifier	endframe		4780048	1					
ANR	4780836	CompoundStatement		117:27:3001:3001	4780048	1					
ANR	4780837	ExpressionStatement	"r_egg_printf ( egg , ""%s"" , egg -> lang . endframe )"	1339:4:36164:36208	4780048	0	True				
ANR	4780838	CallExpression	"r_egg_printf ( egg , ""%s"" , egg -> lang . endframe )"		4780048	0					
ANR	4780839	Callee	r_egg_printf		4780048	0					
ANR	4780840	Identifier	r_egg_printf		4780048	0					
ANR	4780841	ArgumentList	egg		4780048	1					
ANR	4780842	Argument	egg		4780048	0					
ANR	4780843	Identifier	egg		4780048	0					
ANR	4780844	Argument	"""%s"""		4780048	1					
ANR	4780845	PrimaryExpression	"""%s"""		4780048	0					
ANR	4780846	Argument	egg -> lang . endframe		4780048	2					
ANR	4780847	MemberAccess	egg -> lang . endframe		4780048	0					
ANR	4780848	PtrMemberAccess	egg -> lang		4780048	0					
ANR	4780849	Identifier	egg		4780048	0					
ANR	4780850	Identifier	lang		4780048	1					
ANR	4780851	Identifier	endframe		4780048	1					
ANR	4780852	ExpressionStatement	R_FREE ( egg -> lang . nested [ CTX ] )	1340:4:36214:36244	4780048	1	True				
ANR	4780853	CallExpression	R_FREE ( egg -> lang . nested [ CTX ] )		4780048	0					
ANR	4780854	Callee	R_FREE		4780048	0					
ANR	4780855	Identifier	R_FREE		4780048	0					
ANR	4780856	ArgumentList	egg -> lang . nested [ CTX ]		4780048	1					
ANR	4780857	Argument	egg -> lang . nested [ CTX ]		4780048	0					
ANR	4780858	ArrayIndexing	egg -> lang . nested [ CTX ]		4780048	0					
ANR	4780859	MemberAccess	egg -> lang . nested		4780048	0					
ANR	4780860	PtrMemberAccess	egg -> lang		4780048	0					
ANR	4780861	Identifier	egg		4780048	0					
ANR	4780862	Identifier	lang		4780048	1					
ANR	4780863	Identifier	nested		4780048	1					
ANR	4780864	Identifier	CTX		4780048	1					
ANR	4780865	IfStatement	if ( CTX > 1 )		4780048	17					
ANR	4780866	Condition	CTX > 1	1343:7:36294:36300	4780048	0	True				
ANR	4780867	RelationalExpression	CTX > 1		4780048	0		>			
ANR	4780868	Identifier	CTX		4780048	0					
ANR	4780869	PrimaryExpression	1		4780048	1					
ANR	4780870	CompoundStatement		123:16:3190:3190	4780048	1					
ANR	4780871	IfStatement	"if ( egg -> lang . nested_callname [ CTX - 1 ] && strstr ( egg -> lang . nested_callname [ CTX - 1 ] , ""if"" ) )"		4780048	0					
ANR	4780872	Condition	"egg -> lang . nested_callname [ CTX - 1 ] && strstr ( egg -> lang . nested_callname [ CTX - 1 ] , ""if"" )"	1344:8:36313:36399	4780048	0	True				
ANR	4780873	AndExpression	"egg -> lang . nested_callname [ CTX - 1 ] && strstr ( egg -> lang . nested_callname [ CTX - 1 ] , ""if"" )"		4780048	0		&&			
ANR	4780874	ArrayIndexing	egg -> lang . nested_callname [ CTX - 1 ]		4780048	0					
ANR	4780875	MemberAccess	egg -> lang . nested_callname		4780048	0					
ANR	4780876	PtrMemberAccess	egg -> lang		4780048	0					
ANR	4780877	Identifier	egg		4780048	0					
ANR	4780878	Identifier	lang		4780048	1					
ANR	4780879	Identifier	nested_callname		4780048	1					
ANR	4780880	AdditiveExpression	CTX - 1		4780048	1		-			
ANR	4780881	Identifier	CTX		4780048	0					
ANR	4780882	PrimaryExpression	1		4780048	1					
ANR	4780883	CallExpression	"strstr ( egg -> lang . nested_callname [ CTX - 1 ] , ""if"" )"		4780048	1					
ANR	4780884	Callee	strstr		4780048	0					
ANR	4780885	Identifier	strstr		4780048	0					
ANR	4780886	ArgumentList	egg -> lang . nested_callname [ CTX - 1 ]		4780048	1					
ANR	4780887	Argument	egg -> lang . nested_callname [ CTX - 1 ]		4780048	0					
ANR	4780888	ArrayIndexing	egg -> lang . nested_callname [ CTX - 1 ]		4780048	0					
ANR	4780889	MemberAccess	egg -> lang . nested_callname		4780048	0					
ANR	4780890	PtrMemberAccess	egg -> lang		4780048	0					
ANR	4780891	Identifier	egg		4780048	0					
ANR	4780892	Identifier	lang		4780048	1					
ANR	4780893	Identifier	nested_callname		4780048	1					
ANR	4780894	AdditiveExpression	CTX - 1		4780048	1		-			
ANR	4780895	Identifier	CTX		4780048	0					
ANR	4780896	PrimaryExpression	1		4780048	1					
ANR	4780897	Argument	"""if"""		4780048	1					
ANR	4780898	PrimaryExpression	"""if"""		4780048	0					
ANR	4780899	CompoundStatement		124:97:3289:3289	4780048	1					
ANR	4780900	ExpressionStatement	"tmp_ptr = r_str_newf ( ""__ifelse_%d_%d"" , CTX - 1 , egg -> lang . nestedi [ CTX - 1 ] - 1 )"	1345:5:36409:36489	4780048	0	True				
ANR	4780901	AssignmentExpression	"tmp_ptr = r_str_newf ( ""__ifelse_%d_%d"" , CTX - 1 , egg -> lang . nestedi [ CTX - 1 ] - 1 )"		4780048	0		=			
ANR	4780902	Identifier	tmp_ptr		4780048	0					
ANR	4780903	CallExpression	"r_str_newf ( ""__ifelse_%d_%d"" , CTX - 1 , egg -> lang . nestedi [ CTX - 1 ] - 1 )"		4780048	1					
ANR	4780904	Callee	r_str_newf		4780048	0					
ANR	4780905	Identifier	r_str_newf		4780048	0					
ANR	4780906	ArgumentList	"""__ifelse_%d_%d"""		4780048	1					
ANR	4780907	Argument	"""__ifelse_%d_%d"""		4780048	0					
ANR	4780908	PrimaryExpression	"""__ifelse_%d_%d"""		4780048	0					
ANR	4780909	Argument	CTX - 1		4780048	1					
ANR	4780910	AdditiveExpression	CTX - 1		4780048	0		-			
ANR	4780911	Identifier	CTX		4780048	0					
ANR	4780912	PrimaryExpression	1		4780048	1					
ANR	4780913	Argument	egg -> lang . nestedi [ CTX - 1 ] - 1		4780048	2					
ANR	4780914	AdditiveExpression	egg -> lang . nestedi [ CTX - 1 ] - 1		4780048	0		-			
ANR	4780915	ArrayIndexing	egg -> lang . nestedi [ CTX - 1 ]		4780048	0					
ANR	4780916	MemberAccess	egg -> lang . nestedi		4780048	0					
ANR	4780917	PtrMemberAccess	egg -> lang		4780048	0					
ANR	4780918	Identifier	egg		4780048	0					
ANR	4780919	Identifier	lang		4780048	1					
ANR	4780920	Identifier	nestedi		4780048	1					
ANR	4780921	AdditiveExpression	CTX - 1		4780048	1		-			
ANR	4780922	Identifier	CTX		4780048	0					
ANR	4780923	PrimaryExpression	1		4780048	1					
ANR	4780924	PrimaryExpression	1		4780048	1					
ANR	4780925	ExpressionStatement	"e -> jmp ( egg , tmp_ptr , 0 )"	1346:5:36496:36520	4780048	1	True				
ANR	4780926	CallExpression	"e -> jmp ( egg , tmp_ptr , 0 )"		4780048	0					
ANR	4780927	Callee	e -> jmp		4780048	0					
ANR	4780928	PtrMemberAccess	e -> jmp		4780048	0					
ANR	4780929	Identifier	e		4780048	0					
ANR	4780930	Identifier	jmp		4780048	1					
ANR	4780931	ArgumentList	egg		4780048	1					
ANR	4780932	Argument	egg		4780048	0					
ANR	4780933	Identifier	egg		4780048	0					
ANR	4780934	Argument	tmp_ptr		4780048	1					
ANR	4780935	Identifier	tmp_ptr		4780048	0					
ANR	4780936	Argument	0		4780048	2					
ANR	4780937	PrimaryExpression	0		4780048	0					
ANR	4780938	ExpressionStatement	R_FREE ( tmp_ptr )	1347:5:36527:36543	4780048	2	True				
ANR	4780939	CallExpression	R_FREE ( tmp_ptr )		4780048	0					
ANR	4780940	Callee	R_FREE		4780048	0					
ANR	4780941	Identifier	R_FREE		4780048	0					
ANR	4780942	ArgumentList	tmp_ptr		4780048	1					
ANR	4780943	Argument	tmp_ptr		4780048	0					
ANR	4780944	Identifier	tmp_ptr		4780048	0					
ANR	4780945	ExpressionStatement	"egg -> lang . ifelse_table [ CTX - 1 ] [ egg -> lang . nestedi [ CTX - 1 ] - 1 ] = r_str_newf ( ""__end_%d_%d_%d"" , egg -> lang . nfunctions , CTX - 1 , egg -> lang . nestedi [ CTX - 1 ] - 1 )"	1348:5:36562:36733	4780048	3	True				
ANR	4780946	AssignmentExpression	"egg -> lang . ifelse_table [ CTX - 1 ] [ egg -> lang . nestedi [ CTX - 1 ] - 1 ] = r_str_newf ( ""__end_%d_%d_%d"" , egg -> lang . nfunctions , CTX - 1 , egg -> lang . nestedi [ CTX - 1 ] - 1 )"		4780048	0		=			
ANR	4780947	ArrayIndexing	egg -> lang . ifelse_table [ CTX - 1 ] [ egg -> lang . nestedi [ CTX - 1 ] - 1 ]		4780048	0					
ANR	4780948	ArrayIndexing	egg -> lang . ifelse_table [ CTX - 1 ]		4780048	0					
ANR	4780949	MemberAccess	egg -> lang . ifelse_table		4780048	0					
ANR	4780950	PtrMemberAccess	egg -> lang		4780048	0					
ANR	4780951	Identifier	egg		4780048	0					
ANR	4780952	Identifier	lang		4780048	1					
ANR	4780953	Identifier	ifelse_table		4780048	1					
ANR	4780954	AdditiveExpression	CTX - 1		4780048	1		-			
ANR	4780955	Identifier	CTX		4780048	0					
ANR	4780956	PrimaryExpression	1		4780048	1					
ANR	4780957	AdditiveExpression	egg -> lang . nestedi [ CTX - 1 ] - 1		4780048	1		-			
ANR	4780958	ArrayIndexing	egg -> lang . nestedi [ CTX - 1 ]		4780048	0					
ANR	4780959	MemberAccess	egg -> lang . nestedi		4780048	0					
ANR	4780960	PtrMemberAccess	egg -> lang		4780048	0					
ANR	4780961	Identifier	egg		4780048	0					
ANR	4780962	Identifier	lang		4780048	1					
ANR	4780963	Identifier	nestedi		4780048	1					
ANR	4780964	AdditiveExpression	CTX - 1		4780048	1		-			
ANR	4780965	Identifier	CTX		4780048	0					
ANR	4780966	PrimaryExpression	1		4780048	1					
ANR	4780967	PrimaryExpression	1		4780048	1					
ANR	4780968	CallExpression	"r_str_newf ( ""__end_%d_%d_%d"" , egg -> lang . nfunctions , CTX - 1 , egg -> lang . nestedi [ CTX - 1 ] - 1 )"		4780048	1					
ANR	4780969	Callee	r_str_newf		4780048	0					
ANR	4780970	Identifier	r_str_newf		4780048	0					
ANR	4780971	ArgumentList	"""__end_%d_%d_%d"""		4780048	1					
ANR	4780972	Argument	"""__end_%d_%d_%d"""		4780048	0					
ANR	4780973	PrimaryExpression	"""__end_%d_%d_%d"""		4780048	0					
ANR	4780974	Argument	egg -> lang . nfunctions		4780048	1					
ANR	4780975	MemberAccess	egg -> lang . nfunctions		4780048	0					
ANR	4780976	PtrMemberAccess	egg -> lang		4780048	0					
ANR	4780977	Identifier	egg		4780048	0					
ANR	4780978	Identifier	lang		4780048	1					
ANR	4780979	Identifier	nfunctions		4780048	1					
ANR	4780980	Argument	CTX - 1		4780048	2					
ANR	4780981	AdditiveExpression	CTX - 1		4780048	0		-			
ANR	4780982	Identifier	CTX		4780048	0					
ANR	4780983	PrimaryExpression	1		4780048	1					
ANR	4780984	Argument	egg -> lang . nestedi [ CTX - 1 ] - 1		4780048	3					
ANR	4780985	AdditiveExpression	egg -> lang . nestedi [ CTX - 1 ] - 1		4780048	0		-			
ANR	4780986	ArrayIndexing	egg -> lang . nestedi [ CTX - 1 ]		4780048	0					
ANR	4780987	MemberAccess	egg -> lang . nestedi		4780048	0					
ANR	4780988	PtrMemberAccess	egg -> lang		4780048	0					
ANR	4780989	Identifier	egg		4780048	0					
ANR	4780990	Identifier	lang		4780048	1					
ANR	4780991	Identifier	nestedi		4780048	1					
ANR	4780992	AdditiveExpression	CTX - 1		4780048	1		-			
ANR	4780993	Identifier	CTX		4780048	0					
ANR	4780994	PrimaryExpression	1		4780048	1					
ANR	4780995	PrimaryExpression	1		4780048	1					
ANR	4780996	ExpressionStatement	"r_egg_printf ( egg , ""  __end_%d_%d_%d:\\n"" , egg -> lang . nfunctions , CTX - 1 , egg -> lang . nestedi [ CTX - 1 ] - 1 )"	1356:4:36867:36976	4780048	1	True				
ANR	4780997	CallExpression	"r_egg_printf ( egg , ""  __end_%d_%d_%d:\\n"" , egg -> lang . nfunctions , CTX - 1 , egg -> lang . nestedi [ CTX - 1 ] - 1 )"		4780048	0					
ANR	4780998	Callee	r_egg_printf		4780048	0					
ANR	4780999	Identifier	r_egg_printf		4780048	0					
ANR	4781000	ArgumentList	egg		4780048	1					
ANR	4781001	Argument	egg		4780048	0					
ANR	4781002	Identifier	egg		4780048	0					
ANR	4781003	Argument	"""  __end_%d_%d_%d:\\n"""		4780048	1					
ANR	4781004	PrimaryExpression	"""  __end_%d_%d_%d:\\n"""		4780048	0					
ANR	4781005	Argument	egg -> lang . nfunctions		4780048	2					
ANR	4781006	MemberAccess	egg -> lang . nfunctions		4780048	0					
ANR	4781007	PtrMemberAccess	egg -> lang		4780048	0					
ANR	4781008	Identifier	egg		4780048	0					
ANR	4781009	Identifier	lang		4780048	1					
ANR	4781010	Identifier	nfunctions		4780048	1					
ANR	4781011	Argument	CTX - 1		4780048	3					
ANR	4781012	AdditiveExpression	CTX - 1		4780048	0		-			
ANR	4781013	Identifier	CTX		4780048	0					
ANR	4781014	PrimaryExpression	1		4780048	1					
ANR	4781015	Argument	egg -> lang . nestedi [ CTX - 1 ] - 1		4780048	4					
ANR	4781016	AdditiveExpression	egg -> lang . nestedi [ CTX - 1 ] - 1		4780048	0		-			
ANR	4781017	ArrayIndexing	egg -> lang . nestedi [ CTX - 1 ]		4780048	0					
ANR	4781018	MemberAccess	egg -> lang . nestedi		4780048	0					
ANR	4781019	PtrMemberAccess	egg -> lang		4780048	0					
ANR	4781020	Identifier	egg		4780048	0					
ANR	4781021	Identifier	lang		4780048	1					
ANR	4781022	Identifier	nestedi		4780048	1					
ANR	4781023	AdditiveExpression	CTX - 1		4780048	1		-			
ANR	4781024	Identifier	CTX		4780048	0					
ANR	4781025	PrimaryExpression	1		4780048	1					
ANR	4781026	PrimaryExpression	1		4780048	1					
ANR	4781027	IfStatement	if ( CTX > 0 )		4780048	18					
ANR	4781028	Condition	CTX > 0	1361:7:37034:37040	4780048	0	True				
ANR	4781029	RelationalExpression	CTX > 0		4780048	0		>			
ANR	4781030	Identifier	CTX		4780048	0					
ANR	4781031	PrimaryExpression	0		4780048	1					
ANR	4781032	CompoundStatement		141:16:3930:3930	4780048	1					
ANR	4781033	ExpressionStatement	egg -> lang . nbrackets ++	1362:4:37049:37070	4780048	0	True				
ANR	4781034	PostIncDecOperationExpression	egg -> lang . nbrackets ++		4780048	0					
ANR	4781035	MemberAccess	egg -> lang . nbrackets		4780048	0					
ANR	4781036	PtrMemberAccess	egg -> lang		4780048	0					
ANR	4781037	Identifier	egg		4780048	0					
ANR	4781038	Identifier	lang		4780048	1					
ANR	4781039	Identifier	nbrackets		4780048	1					
ANR	4781040	IncDec	++		4780048	1					
ANR	4781041	ExpressionStatement	"rcc_context ( egg , - 1 )"	1364:3:37080:37101	4780048	19	True				
ANR	4781042	CallExpression	"rcc_context ( egg , - 1 )"		4780048	0					
ANR	4781043	Callee	rcc_context		4780048	0					
ANR	4781044	Identifier	rcc_context		4780048	0					
ANR	4781045	ArgumentList	egg		4780048	1					
ANR	4781046	Argument	egg		4780048	0					
ANR	4781047	Identifier	egg		4780048	0					
ANR	4781048	Argument	- 1		4780048	1					
ANR	4781049	UnaryOperationExpression	- 1		4780048	0					
ANR	4781050	UnaryOperator	-		4780048	0					
ANR	4781051	PrimaryExpression	1		4780048	1					
ANR	4781052	IfStatement	if ( CTX == 0 )		4780048	20					
ANR	4781053	Condition	CTX == 0	1365:7:37110:37117	4780048	0	True				
ANR	4781054	EqualityExpression	CTX == 0		4780048	0		==			
ANR	4781055	Identifier	CTX		4780048	0					
ANR	4781056	PrimaryExpression	0		4780048	1					
ANR	4781057	CompoundStatement		145:17:4007:4007	4780048	1					
ANR	4781058	ExpressionStatement	"r_egg_printf ( egg , ""\\n"" )"	1366:4:37126:37150	4780048	0	True				
ANR	4781059	CallExpression	"r_egg_printf ( egg , ""\\n"" )"		4780048	0					
ANR	4781060	Callee	r_egg_printf		4780048	0					
ANR	4781061	Identifier	r_egg_printf		4780048	0					
ANR	4781062	ArgumentList	egg		4780048	1					
ANR	4781063	Argument	egg		4780048	0					
ANR	4781064	Identifier	egg		4780048	0					
ANR	4781065	Argument	"""\\n"""		4780048	1					
ANR	4781066	PrimaryExpression	"""\\n"""		4780048	0					
ANR	4781067	ForStatement	for ( i = 0 ; i < 32 ; i ++ )		4780048	1					
ANR	4781068	ForInit	i = 0 ;	1370:9:37296:37301	4780048	0	True				
ANR	4781069	AssignmentExpression	i = 0		4780048	0		=			
ANR	4781070	Identifier	i		4780048	0					
ANR	4781071	PrimaryExpression	0		4780048	1					
ANR	4781072	Condition	i < 32	1370:16:37303:37308	4780048	1	True				
ANR	4781073	RelationalExpression	i < 32		4780048	0		<			
ANR	4781074	Identifier	i		4780048	0					
ANR	4781075	PrimaryExpression	32		4780048	1					
ANR	4781076	PostIncDecOperationExpression	i ++	1370:24:37311:37313	4780048	2	True				
ANR	4781077	Identifier	i		4780048	0					
ANR	4781078	IncDec	++		4780048	1					
ANR	4781079	CompoundStatement		150:29:4203:4203	4780048	3					
ANR	4781080	ForStatement	for ( j = 0 ; j < egg -> lang . nestedi [ i ] && j < 32 ; j ++ )		4780048	0					
ANR	4781081	ForInit	j = 0 ;	1371:10:37328:37333	4780048	0	True				
ANR	4781082	AssignmentExpression	j = 0		4780048	0		=			
ANR	4781083	Identifier	j		4780048	0					
ANR	4781084	PrimaryExpression	0		4780048	1					
ANR	4781085	Condition	j < egg -> lang . nestedi [ i ] && j < 32	1371:17:37335:37368	4780048	1	True				
ANR	4781086	AndExpression	j < egg -> lang . nestedi [ i ] && j < 32		4780048	0		&&			
ANR	4781087	RelationalExpression	j < egg -> lang . nestedi [ i ]		4780048	0		<			
ANR	4781088	Identifier	j		4780048	0					
ANR	4781089	ArrayIndexing	egg -> lang . nestedi [ i ]		4780048	1					
ANR	4781090	MemberAccess	egg -> lang . nestedi		4780048	0					
ANR	4781091	PtrMemberAccess	egg -> lang		4780048	0					
ANR	4781092	Identifier	egg		4780048	0					
ANR	4781093	Identifier	lang		4780048	1					
ANR	4781094	Identifier	nestedi		4780048	1					
ANR	4781095	Identifier	i		4780048	1					
ANR	4781096	RelationalExpression	j < 32		4780048	1		<			
ANR	4781097	Identifier	j		4780048	0					
ANR	4781098	PrimaryExpression	32		4780048	1					
ANR	4781099	PostIncDecOperationExpression	j ++	1371:53:37371:37373	4780048	2	True				
ANR	4781100	Identifier	j		4780048	0					
ANR	4781101	IncDec	++		4780048	1					
ANR	4781102	CompoundStatement		151:58:4263:4263	4780048	3					
ANR	4781103	IfStatement	if ( egg -> lang . ifelse_table [ i ] [ j ] )		4780048	0					
ANR	4781104	Condition	egg -> lang . ifelse_table [ i ] [ j ]	1372:10:37388:37415	4780048	0	True				
ANR	4781105	ArrayIndexing	egg -> lang . ifelse_table [ i ] [ j ]		4780048	0					
ANR	4781106	ArrayIndexing	egg -> lang . ifelse_table [ i ]		4780048	0					
ANR	4781107	MemberAccess	egg -> lang . ifelse_table		4780048	0					
ANR	4781108	PtrMemberAccess	egg -> lang		4780048	0					
ANR	4781109	Identifier	egg		4780048	0					
ANR	4781110	Identifier	lang		4780048	1					
ANR	4781111	Identifier	ifelse_table		4780048	1					
ANR	4781112	Identifier	i		4780048	1					
ANR	4781113	Identifier	j		4780048	1					
ANR	4781114	CompoundStatement		152:40:4305:4305	4780048	1					
ANR	4781115	ExpressionStatement	"r_egg_printf ( egg , ""  __ifelse_%d_%d:\\n"" , i , j )"	1373:7:37427:37474	4780048	0	True				
ANR	4781116	CallExpression	"r_egg_printf ( egg , ""  __ifelse_%d_%d:\\n"" , i , j )"		4780048	0					
ANR	4781117	Callee	r_egg_printf		4780048	0					
ANR	4781118	Identifier	r_egg_printf		4780048	0					
ANR	4781119	ArgumentList	egg		4780048	1					
ANR	4781120	Argument	egg		4780048	0					
ANR	4781121	Identifier	egg		4780048	0					
ANR	4781122	Argument	"""  __ifelse_%d_%d:\\n"""		4780048	1					
ANR	4781123	PrimaryExpression	"""  __ifelse_%d_%d:\\n"""		4780048	0					
ANR	4781124	Argument	i		4780048	2					
ANR	4781125	Identifier	i		4780048	0					
ANR	4781126	Argument	j		4780048	3					
ANR	4781127	Identifier	j		4780048	0					
ANR	4781128	ExpressionStatement	"e -> jmp ( egg , egg -> lang . ifelse_table [ i ] [ j ] , 0 )"	1374:7:37483:37528	4780048	1	True				
ANR	4781129	CallExpression	"e -> jmp ( egg , egg -> lang . ifelse_table [ i ] [ j ] , 0 )"		4780048	0					
ANR	4781130	Callee	e -> jmp		4780048	0					
ANR	4781131	PtrMemberAccess	e -> jmp		4780048	0					
ANR	4781132	Identifier	e		4780048	0					
ANR	4781133	Identifier	jmp		4780048	1					
ANR	4781134	ArgumentList	egg		4780048	1					
ANR	4781135	Argument	egg		4780048	0					
ANR	4781136	Identifier	egg		4780048	0					
ANR	4781137	Argument	egg -> lang . ifelse_table [ i ] [ j ]		4780048	1					
ANR	4781138	ArrayIndexing	egg -> lang . ifelse_table [ i ] [ j ]		4780048	0					
ANR	4781139	ArrayIndexing	egg -> lang . ifelse_table [ i ]		4780048	0					
ANR	4781140	MemberAccess	egg -> lang . ifelse_table		4780048	0					
ANR	4781141	PtrMemberAccess	egg -> lang		4780048	0					
ANR	4781142	Identifier	egg		4780048	0					
ANR	4781143	Identifier	lang		4780048	1					
ANR	4781144	Identifier	ifelse_table		4780048	1					
ANR	4781145	Identifier	i		4780048	1					
ANR	4781146	Identifier	j		4780048	1					
ANR	4781147	Argument	0		4780048	2					
ANR	4781148	PrimaryExpression	0		4780048	0					
ANR	4781149	ExpressionStatement	R_FREE ( egg -> lang . ifelse_table [ i ] [ j ] )	1375:7:37537:37574	4780048	2	True				
ANR	4781150	CallExpression	R_FREE ( egg -> lang . ifelse_table [ i ] [ j ] )		4780048	0					
ANR	4781151	Callee	R_FREE		4780048	0					
ANR	4781152	Identifier	R_FREE		4780048	0					
ANR	4781153	ArgumentList	egg -> lang . ifelse_table [ i ] [ j ]		4780048	1					
ANR	4781154	Argument	egg -> lang . ifelse_table [ i ] [ j ]		4780048	0					
ANR	4781155	ArrayIndexing	egg -> lang . ifelse_table [ i ] [ j ]		4780048	0					
ANR	4781156	ArrayIndexing	egg -> lang . ifelse_table [ i ]		4780048	0					
ANR	4781157	MemberAccess	egg -> lang . ifelse_table		4780048	0					
ANR	4781158	PtrMemberAccess	egg -> lang		4780048	0					
ANR	4781159	Identifier	egg		4780048	0					
ANR	4781160	Identifier	lang		4780048	1					
ANR	4781161	Identifier	ifelse_table		4780048	1					
ANR	4781162	Identifier	i		4780048	1					
ANR	4781163	Identifier	j		4780048	1					
ANR	4781164	ExpressionStatement	egg -> lang . nbrackets = 0	1381:4:37715:37738	4780048	2	True				
ANR	4781165	AssignmentExpression	egg -> lang . nbrackets = 0		4780048	0		=			
ANR	4781166	MemberAccess	egg -> lang . nbrackets		4780048	0					
ANR	4781167	PtrMemberAccess	egg -> lang		4780048	0					
ANR	4781168	Identifier	egg		4780048	0					
ANR	4781169	Identifier	lang		4780048	1					
ANR	4781170	Identifier	nbrackets		4780048	1					
ANR	4781171	PrimaryExpression	0		4780048	1					
ANR	4781172	ExpressionStatement	egg -> lang . nfunctions ++	1382:4:37744:37766	4780048	3	True				
ANR	4781173	PostIncDecOperationExpression	egg -> lang . nfunctions ++		4780048	0					
ANR	4781174	MemberAccess	egg -> lang . nfunctions		4780048	0					
ANR	4781175	PtrMemberAccess	egg -> lang		4780048	0					
ANR	4781176	Identifier	egg		4780048	0					
ANR	4781177	Identifier	lang		4780048	1					
ANR	4781178	Identifier	nfunctions		4780048	1					
ANR	4781179	IncDec	++		4780048	1					
ANR	4781180	BreakStatement	break ;	1384:3:37776:37781	4780048	21	True				
ANR	4781181	Label	case ':' :	1385:2:37785:37793	4780048	22	True				
ANR	4781182	IfStatement	if ( egg -> lang . oc == '\\n' || egg -> lang . oc == '}' )		4780048	23					
ANR	4781183	Condition	egg -> lang . oc == '\\n' || egg -> lang . oc == '}'	1386:7:37802:37844	4780048	0	True				
ANR	4781184	OrExpression	egg -> lang . oc == '\\n' || egg -> lang . oc == '}'		4780048	0		||			
ANR	4781185	EqualityExpression	egg -> lang . oc == '\\n'		4780048	0		==			
ANR	4781186	MemberAccess	egg -> lang . oc		4780048	0					
ANR	4781187	PtrMemberAccess	egg -> lang		4780048	0					
ANR	4781188	Identifier	egg		4780048	0					
ANR	4781189	Identifier	lang		4780048	1					
ANR	4781190	Identifier	oc		4780048	1					
ANR	4781191	PrimaryExpression	'\\n'		4780048	1					
ANR	4781192	EqualityExpression	egg -> lang . oc == '}'		4780048	1		==			
ANR	4781193	MemberAccess	egg -> lang . oc		4780048	0					
ANR	4781194	PtrMemberAccess	egg -> lang		4780048	0					
ANR	4781195	Identifier	egg		4780048	0					
ANR	4781196	Identifier	lang		4780048	1					
ANR	4781197	Identifier	oc		4780048	1					
ANR	4781198	PrimaryExpression	'}'		4780048	1					
ANR	4781199	CompoundStatement		166:52:4734:4734	4780048	1					
ANR	4781200	ExpressionStatement	egg -> lang . quoteline = '\\n'	1387:4:37853:37879	4780048	0	True				
ANR	4781201	AssignmentExpression	egg -> lang . quoteline = '\\n'		4780048	0		=			
ANR	4781202	MemberAccess	egg -> lang . quoteline		4780048	0					
ANR	4781203	PtrMemberAccess	egg -> lang		4780048	0					
ANR	4781204	Identifier	egg		4780048	0					
ANR	4781205	Identifier	lang		4780048	1					
ANR	4781206	Identifier	quoteline		4780048	1					
ANR	4781207	PrimaryExpression	'\\n'		4780048	1					
ANR	4781208	ElseStatement	else		4780048	0					
ANR	4781209	CompoundStatement		168:10:4778:4778	4780048	0					
ANR	4781210	ExpressionStatement	egg -> lang . elem [ egg -> lang . elem_n ++ ] = c	1389:4:37897:37935	4780048	0	True				
ANR	4781211	AssignmentExpression	egg -> lang . elem [ egg -> lang . elem_n ++ ] = c		4780048	0		=			
ANR	4781212	ArrayIndexing	egg -> lang . elem [ egg -> lang . elem_n ++ ]		4780048	0					
ANR	4781213	MemberAccess	egg -> lang . elem		4780048	0					
ANR	4781214	PtrMemberAccess	egg -> lang		4780048	0					
ANR	4781215	Identifier	egg		4780048	0					
ANR	4781216	Identifier	lang		4780048	1					
ANR	4781217	Identifier	elem		4780048	1					
ANR	4781218	PostIncDecOperationExpression	egg -> lang . elem_n ++		4780048	1					
ANR	4781219	MemberAccess	egg -> lang . elem_n		4780048	0					
ANR	4781220	PtrMemberAccess	egg -> lang		4780048	0					
ANR	4781221	Identifier	egg		4780048	0					
ANR	4781222	Identifier	lang		4780048	1					
ANR	4781223	Identifier	elem_n		4780048	1					
ANR	4781224	IncDec	++		4780048	1					
ANR	4781225	Identifier	c		4780048	1					
ANR	4781226	BreakStatement	break ;	1391:3:37945:37950	4780048	24	True				
ANR	4781227	Label	case '#' :	1392:2:37954:37962	4780048	25	True				
ANR	4781228	IfStatement	if ( egg -> lang . oc == '\\n' )		4780048	26					
ANR	4781229	Condition	egg -> lang . oc == '\\n'	1393:7:37971:37990	4780048	0	True				
ANR	4781230	EqualityExpression	egg -> lang . oc == '\\n'		4780048	0		==			
ANR	4781231	MemberAccess	egg -> lang . oc		4780048	0					
ANR	4781232	PtrMemberAccess	egg -> lang		4780048	0					
ANR	4781233	Identifier	egg		4780048	0					
ANR	4781234	Identifier	lang		4780048	1					
ANR	4781235	Identifier	oc		4780048	1					
ANR	4781236	PrimaryExpression	'\\n'		4780048	1					
ANR	4781237	CompoundStatement		173:29:4880:4880	4780048	1					
ANR	4781238	ExpressionStatement	egg -> lang . skipline = 1	1394:4:37999:38021	4780048	0	True				
ANR	4781239	AssignmentExpression	egg -> lang . skipline = 1		4780048	0		=			
ANR	4781240	MemberAccess	egg -> lang . skipline		4780048	0					
ANR	4781241	PtrMemberAccess	egg -> lang		4780048	0					
ANR	4781242	Identifier	egg		4780048	0					
ANR	4781243	Identifier	lang		4780048	1					
ANR	4781244	Identifier	skipline		4780048	1					
ANR	4781245	PrimaryExpression	1		4780048	1					
ANR	4781246	BreakStatement	break ;	1396:3:38031:38036	4780048	27	True				
ANR	4781247	Label	case '/' :	1397:2:38040:38048	4780048	28	True				
ANR	4781248	IfStatement	if ( egg -> lang . oc == '/' )		4780048	29					
ANR	4781249	Condition	egg -> lang . oc == '/'	1398:7:38057:38075	4780048	0	True				
ANR	4781250	EqualityExpression	egg -> lang . oc == '/'		4780048	0		==			
ANR	4781251	MemberAccess	egg -> lang . oc		4780048	0					
ANR	4781252	PtrMemberAccess	egg -> lang		4780048	0					
ANR	4781253	Identifier	egg		4780048	0					
ANR	4781254	Identifier	lang		4780048	1					
ANR	4781255	Identifier	oc		4780048	1					
ANR	4781256	PrimaryExpression	'/'		4780048	1					
ANR	4781257	CompoundStatement		178:28:4965:4965	4780048	1					
ANR	4781258	ExpressionStatement	egg -> lang . skipline = 1	1399:4:38084:38106	4780048	0	True				
ANR	4781259	AssignmentExpression	egg -> lang . skipline = 1		4780048	0		=			
ANR	4781260	MemberAccess	egg -> lang . skipline		4780048	0					
ANR	4781261	PtrMemberAccess	egg -> lang		4780048	0					
ANR	4781262	Identifier	egg		4780048	0					
ANR	4781263	Identifier	lang		4780048	1					
ANR	4781264	Identifier	skipline		4780048	1					
ANR	4781265	PrimaryExpression	1		4780048	1					
ANR	4781266	ElseStatement	else		4780048	0					
ANR	4781267	CompoundStatement		180:10:5005:5005	4780048	0					
ANR	4781268	ExpressionStatement	egg -> lang . elem [ egg -> lang . elem_n ++ ] = c	1401:4:38124:38162	4780048	0	True				
ANR	4781269	AssignmentExpression	egg -> lang . elem [ egg -> lang . elem_n ++ ] = c		4780048	0		=			
ANR	4781270	ArrayIndexing	egg -> lang . elem [ egg -> lang . elem_n ++ ]		4780048	0					
ANR	4781271	MemberAccess	egg -> lang . elem		4780048	0					
ANR	4781272	PtrMemberAccess	egg -> lang		4780048	0					
ANR	4781273	Identifier	egg		4780048	0					
ANR	4781274	Identifier	lang		4780048	1					
ANR	4781275	Identifier	elem		4780048	1					
ANR	4781276	PostIncDecOperationExpression	egg -> lang . elem_n ++		4780048	1					
ANR	4781277	MemberAccess	egg -> lang . elem_n		4780048	0					
ANR	4781278	PtrMemberAccess	egg -> lang		4780048	0					
ANR	4781279	Identifier	egg		4780048	0					
ANR	4781280	Identifier	lang		4780048	1					
ANR	4781281	Identifier	elem_n		4780048	1					
ANR	4781282	IncDec	++		4780048	1					
ANR	4781283	Identifier	c		4780048	1					
ANR	4781284	BreakStatement	break ;	1403:3:38172:38177	4780048	30	True				
ANR	4781285	Label	default :	1404:2:38181:38188	4780048	31	True				
ANR	4781286	Identifier	default		4780048	0					
ANR	4781287	ExpressionStatement	egg -> lang . elem [ egg -> lang . elem_n ++ ] = c	1405:3:38193:38231	4780048	32	True				
ANR	4781288	AssignmentExpression	egg -> lang . elem [ egg -> lang . elem_n ++ ] = c		4780048	0		=			
ANR	4781289	ArrayIndexing	egg -> lang . elem [ egg -> lang . elem_n ++ ]		4780048	0					
ANR	4781290	MemberAccess	egg -> lang . elem		4780048	0					
ANR	4781291	PtrMemberAccess	egg -> lang		4780048	0					
ANR	4781292	Identifier	egg		4780048	0					
ANR	4781293	Identifier	lang		4780048	1					
ANR	4781294	Identifier	elem		4780048	1					
ANR	4781295	PostIncDecOperationExpression	egg -> lang . elem_n ++		4780048	1					
ANR	4781296	MemberAccess	egg -> lang . elem_n		4780048	0					
ANR	4781297	PtrMemberAccess	egg -> lang		4780048	0					
ANR	4781298	Identifier	egg		4780048	0					
ANR	4781299	Identifier	lang		4780048	1					
ANR	4781300	Identifier	elem_n		4780048	1					
ANR	4781301	IncDec	++		4780048	1					
ANR	4781302	Identifier	c		4780048	1					
ANR	4781303	IfStatement	if ( egg -> lang . slurp )		4780048	1					
ANR	4781304	Condition	egg -> lang . slurp	1407:6:38243:38257	4780048	0	True				
ANR	4781305	MemberAccess	egg -> lang . slurp		4780048	0					
ANR	4781306	PtrMemberAccess	egg -> lang		4780048	0					
ANR	4781307	Identifier	egg		4780048	0					
ANR	4781308	Identifier	lang		4780048	1					
ANR	4781309	Identifier	slurp		4780048	1					
ANR	4781310	CompoundStatement		187:23:5147:5147	4780048	1					
ANR	4781311	IfStatement	if ( egg -> lang . elem_n )		4780048	0					
ANR	4781312	Condition	egg -> lang . elem_n	1408:7:38269:38284	4780048	0	True				
ANR	4781313	MemberAccess	egg -> lang . elem_n		4780048	0					
ANR	4781314	PtrMemberAccess	egg -> lang		4780048	0					
ANR	4781315	Identifier	egg		4780048	0					
ANR	4781316	Identifier	lang		4780048	1					
ANR	4781317	Identifier	elem_n		4780048	1					
ANR	4781318	CompoundStatement		188:25:5174:5174	4780048	1					
ANR	4781319	ExpressionStatement	ptr = egg -> lang . elem	1409:4:38293:38313	4780048	0	True				
ANR	4781320	AssignmentExpression	ptr = egg -> lang . elem		4780048	0		=			
ANR	4781321	Identifier	ptr		4780048	0					
ANR	4781322	MemberAccess	egg -> lang . elem		4780048	1					
ANR	4781323	PtrMemberAccess	egg -> lang		4780048	0					
ANR	4781324	Identifier	egg		4780048	0					
ANR	4781325	Identifier	lang		4780048	1					
ANR	4781326	Identifier	elem		4780048	1					
ANR	4781327	ExpressionStatement	egg -> lang . elem [ egg -> lang . elem_n ] = '\\0'	1410:4:38319:38358	4780048	1	True				
ANR	4781328	AssignmentExpression	egg -> lang . elem [ egg -> lang . elem_n ] = '\\0'		4780048	0		=			
ANR	4781329	ArrayIndexing	egg -> lang . elem [ egg -> lang . elem_n ]		4780048	0					
ANR	4781330	MemberAccess	egg -> lang . elem		4780048	0					
ANR	4781331	PtrMemberAccess	egg -> lang		4780048	0					
ANR	4781332	Identifier	egg		4780048	0					
ANR	4781333	Identifier	lang		4780048	1					
ANR	4781334	Identifier	elem		4780048	1					
ANR	4781335	MemberAccess	egg -> lang . elem_n		4780048	1					
ANR	4781336	PtrMemberAccess	egg -> lang		4780048	0					
ANR	4781337	Identifier	egg		4780048	0					
ANR	4781338	Identifier	lang		4780048	1					
ANR	4781339	Identifier	elem_n		4780048	1					
ANR	4781340	PrimaryExpression	'\\0'		4780048	1					
ANR	4781341	WhileStatement	while ( is_space ( * ptr ) )		4780048	2					
ANR	4781342	Condition	is_space ( * ptr )	1411:11:38371:38385	4780048	0	True				
ANR	4781343	CallExpression	is_space ( * ptr )		4780048	0					
ANR	4781344	Callee	is_space		4780048	0					
ANR	4781345	Identifier	is_space		4780048	0					
ANR	4781346	ArgumentList	* ptr		4780048	1					
ANR	4781347	Argument	* ptr		4780048	0					
ANR	4781348	UnaryOperationExpression	* ptr		4780048	0					
ANR	4781349	UnaryOperator	*		4780048	0					
ANR	4781350	Identifier	ptr		4780048	1					
ANR	4781351	CompoundStatement		191:28:5275:5275	4780048	1					
ANR	4781352	ExpressionStatement	ptr ++	1412:5:38395:38400	4780048	0	True				
ANR	4781353	PostIncDecOperationExpression	ptr ++		4780048	0					
ANR	4781354	Identifier	ptr		4780048	0					
ANR	4781355	IncDec	++		4780048	1					
ANR	4781356	ExpressionStatement	"rcc_fun ( egg , ptr )"	1414:4:38412:38430	4780048	3	True				
ANR	4781357	CallExpression	"rcc_fun ( egg , ptr )"		4780048	0					
ANR	4781358	Callee	rcc_fun		4780048	0					
ANR	4781359	Identifier	rcc_fun		4780048	0					
ANR	4781360	ArgumentList	egg		4780048	1					
ANR	4781361	Argument	egg		4780048	0					
ANR	4781362	Identifier	egg		4780048	0					
ANR	4781363	Argument	ptr		4780048	1					
ANR	4781364	Identifier	ptr		4780048	0					
ANR	4781365	ExpressionStatement	egg -> lang . elem_n = 0	1416:3:38440:38460	4780048	1	True				
ANR	4781366	AssignmentExpression	egg -> lang . elem_n = 0		4780048	0		=			
ANR	4781367	MemberAccess	egg -> lang . elem_n		4780048	0					
ANR	4781368	PtrMemberAccess	egg -> lang		4780048	0					
ANR	4781369	Identifier	egg		4780048	0					
ANR	4781370	Identifier	lang		4780048	1					
ANR	4781371	Identifier	elem_n		4780048	1					
ANR	4781372	PrimaryExpression	0		4780048	1					
ANR	4781373	IfStatement	if ( c != '\\t' && c != ' ' )		4780048	10					
ANR	4781374	Condition	c != '\\t' && c != ' '	1419:5:38474:38494	4780048	0	True				
ANR	4781375	AndExpression	c != '\\t' && c != ' '		4780048	0		&&			
ANR	4781376	EqualityExpression	c != '\\t'		4780048	0		!=			
ANR	4781377	Identifier	c		4780048	0					
ANR	4781378	PrimaryExpression	'\\t'		4780048	1					
ANR	4781379	EqualityExpression	c != ' '		4780048	1		!=			
ANR	4781380	Identifier	c		4780048	0					
ANR	4781381	PrimaryExpression	' '		4780048	1					
ANR	4781382	CompoundStatement		199:28:5384:5384	4780048	1					
ANR	4781383	ExpressionStatement	egg -> lang . oc = c	1420:2:38501:38517	4780048	0	True				
ANR	4781384	AssignmentExpression	egg -> lang . oc = c		4780048	0		=			
ANR	4781385	MemberAccess	egg -> lang . oc		4780048	0					
ANR	4781386	PtrMemberAccess	egg -> lang		4780048	0					
ANR	4781387	Identifier	egg		4780048	0					
ANR	4781388	Identifier	lang		4780048	1					
ANR	4781389	Identifier	oc		4780048	1					
ANR	4781390	Identifier	c		4780048	1					
ANR	4781391	ReturnStatement	return 0 ;	1422:1:38523:38531	4780048	11	True				
ANR	4781392	PrimaryExpression	0		4780048	0					
ANR	4781393	ReturnType	R_API int		4780048	1					
ANR	4781394	Identifier	r_egg_lang_parsechar		4780048	2					
ANR	4781395	ParameterList	"REgg * egg , char c"		4780048	3					
ANR	4781396	Parameter	REgg * egg	1221:31:33093:33101	4780048	0	True				
ANR	4781397	ParameterType	REgg *		4780048	0					
ANR	4781398	Identifier	egg		4780048	1					
ANR	4781399	Parameter	char c	1221:42:33104:33109	4780048	1	True				
ANR	4781400	ParameterType	char		4780048	0					
ANR	4781401	Identifier	c		4780048	1					
ANR	4781402	CFGEntryNode	ENTRY		4780048		True				
ANR	4781403	CFGExitNode	EXIT		4780048		True				
ANR	4781404	Symbol	* * * egg		4780048						
ANR	4781405	Symbol	egg		4780048						
ANR	4781406	Symbol	egg -> lang . slurpin		4780048						
ANR	4781407	Symbol	CTX		4780048						
ANR	4781408	Symbol	* egg -> lang		4780048						
ANR	4781409	Symbol	egg -> lang . endframe		4780048						
ANR	4781410	Symbol	egg -> lang . ifelse_table		4780048						
ANR	4781411	Symbol	parsedatachar		4780048						
ANR	4781412	Symbol	eprintf		4780048						
ANR	4781413	Symbol	* egg -> lang . nestedi		4780048						
ANR	4781414	Symbol	egg -> lang . quotelinevar		4780048						
ANR	4781415	Symbol	* ptr		4780048						
ANR	4781416	Symbol	INLINE		4780048						
ANR	4781417	Symbol	r_egg_mkvar		4780048						
ANR	4781418	Symbol	* * i		4780048						
ANR	4781419	Symbol	NULL		4780048						
ANR	4781420	Symbol	egg -> lang . nested_callname		4780048						
ANR	4781421	Symbol	egg -> lang . nested		4780048						
ANR	4781422	Symbol	* egg -> lang . elem		4780048						
ANR	4781423	Symbol	egg -> lang . nbrackets		4780048						
ANR	4781424	Symbol	parseinlinechar		4780048						
ANR	4781425	Symbol	egg -> lang . commentmode		4780048						
ANR	4781426	Symbol	egg -> lang . mode		4780048						
ANR	4781427	Symbol	str		4780048						
ANR	4781428	Symbol	DATA		4780048						
ANR	4781429	Symbol	egg -> lang . slurp		4780048						
ANR	4781430	Symbol	strstr		4780048						
ANR	4781431	Symbol	* egg -> lang . elem_n		4780048						
ANR	4781432	Symbol	* egg -> lang . ifelse_table		4780048						
ANR	4781433	Symbol	egg -> lang . quoteline		4780048						
ANR	4781434	Symbol	* * egg -> lang . ifelse_table		4780048						
ANR	4781435	Symbol	egg -> lang . elem		4780048						
ANR	4781436	Symbol	r_str_newf		4780048						
ANR	4781437	Symbol	egg -> remit		4780048						
ANR	4781438	Symbol	egg -> lang		4780048						
ANR	4781439	Symbol	* CTX		4780048						
ANR	4781440	Symbol	* egg -> lang . nested		4780048						
ANR	4781441	Symbol	* egg		4780048						
ANR	4781442	Symbol	egg -> lang . file		4780048						
ANR	4781443	Symbol	egg -> lang . line		4780048						
ANR	4781444	Symbol	* * egg		4780048						
ANR	4781445	Symbol	* * CTX		4780048						
ANR	4781446	Symbol	is_space		4780048						
ANR	4781447	Symbol	* * egg -> lang . nestedi		4780048						
ANR	4781448	Symbol	c		4780048						
ANR	4781449	Symbol	* egg -> lang . nested_callname		4780048						
ANR	4781450	Symbol	e		4780048						
ANR	4781451	Symbol	i		4780048						
ANR	4781452	Symbol	egg -> lang . nfunctions		4780048						
ANR	4781453	Symbol	j		4780048						
ANR	4781454	Symbol	* * egg -> lang		4780048						
ANR	4781455	Symbol	tmp_ptr		4780048						
ANR	4781456	Symbol	egg -> lang . elem_n		4780048						
ANR	4781457	Symbol	ptr		4780048						
ANR	4781458	Symbol	egg -> lang . oc		4780048						
ANR	4781459	Symbol	* i		4780048						
ANR	4781460	Symbol	* j		4780048						
ANR	4781461	Symbol	x00		4780048						
ANR	4781462	Symbol	egg -> lang . skipline		4780048						
ANR	4781463	Symbol	egg -> lang . nestedi		4780048						
