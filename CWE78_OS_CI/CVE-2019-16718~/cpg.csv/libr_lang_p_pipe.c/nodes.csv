command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	4934470	File	data/converged/CVE-2019-16718~_radare2/libr_lang_p_pipe.c								
ANR	4934471	DeclStmt									
ANR	4934472	Decl							int	"int ( RLang * lang , const char * code , int len )"	lang_pipe_run
ANR	4934473	Function	lang_pipe_file	14:0:266:365							
ANR	4934474	FunctionDef	"lang_pipe_file (RLang * lang , const char * file)"		4934473	0					
ANR	4934475	CompoundStatement		14:57:323:365	4934473	0					
ANR	4934476	ReturnStatement	"return lang_pipe_run ( lang , file , - 1 ) ;"	15:1:326:363	4934473	0	True				
ANR	4934477	CallExpression	"lang_pipe_run ( lang , file , - 1 )"		4934473	0					
ANR	4934478	Callee	lang_pipe_run		4934473	0					
ANR	4934479	Identifier	lang_pipe_run		4934473	0					
ANR	4934480	ArgumentList	lang		4934473	1					
ANR	4934481	Argument	lang		4934473	0					
ANR	4934482	Identifier	lang		4934473	0					
ANR	4934483	Argument	file		4934473	1					
ANR	4934484	Identifier	file		4934473	0					
ANR	4934485	Argument	- 1		4934473	2					
ANR	4934486	UnaryOperationExpression	- 1		4934473	0					
ANR	4934487	UnaryOperator	-		4934473	0					
ANR	4934488	PrimaryExpression	1		4934473	1					
ANR	4934489	ReturnType	static int		4934473	1					
ANR	4934490	Identifier	lang_pipe_file		4934473	2					
ANR	4934491	ParameterList	"RLang * lang , const char * file"		4934473	3					
ANR	4934492	Parameter	RLang * lang	14:26:292:302	4934473	0	True				
ANR	4934493	ParameterType	RLang *		4934473	0					
ANR	4934494	Identifier	lang		4934473	1					
ANR	4934495	Parameter	const char * file	14:39:305:320	4934473	1	True				
ANR	4934496	ParameterType	const char *		4934473	0					
ANR	4934497	Identifier	file		4934473	1					
ANR	4934498	CFGEntryNode	ENTRY		4934473		True				
ANR	4934499	CFGExitNode	EXIT		4934473		True				
ANR	4934500	Symbol	lang_pipe_run		4934473						
ANR	4934501	Symbol	file		4934473						
ANR	4934502	Symbol	lang		4934473						
ANR	4934503	DeclStmt									
ANR	4934504	Decl							HANDLE	HANDLE	pipe
ANR	4934505	Function	myCreateChildProcess	20:0:408:1394							
ANR	4934506	FunctionDef	myCreateChildProcess (const char * szCmdline)		4934505	0					
ANR	4934507	CompoundStatement		20:60:468:1394	4934505	0					
ANR	4934508	IdentifierDeclStatement	PROCESS_INFORMATION piProcInfo = { 0 } ;	21:1:471:507	4934505	0	True				
ANR	4934509	IdentifierDecl	piProcInfo = { 0 }		4934505	0					
ANR	4934510	IdentifierDeclType	PROCESS_INFORMATION		4934505	0					
ANR	4934511	Identifier	piProcInfo		4934505	1					
ANR	4934512	AssignmentExpression	piProcInfo = { 0 }		4934505	2		=			
ANR	4934513	Identifier	piProcInfo		4934505	0					
ANR	4934514	InitializerList	0		4934505	1					
ANR	4934515	PrimaryExpression	0		4934505	0					
ANR	4934516	IdentifierDeclStatement	STARTUPINFO siStartInfo = { 0 } ;	22:1:510:539	4934505	1	True				
ANR	4934517	IdentifierDecl	siStartInfo = { 0 }		4934505	0					
ANR	4934518	IdentifierDeclType	STARTUPINFO		4934505	0					
ANR	4934519	Identifier	siStartInfo		4934505	1					
ANR	4934520	AssignmentExpression	siStartInfo = { 0 }		4934505	2		=			
ANR	4934521	Identifier	siStartInfo		4934505	0					
ANR	4934522	InitializerList	0		4934505	1					
ANR	4934523	PrimaryExpression	0		4934505	0					
ANR	4934524	IdentifierDeclStatement	BOOL bSuccess = FALSE ;	23:1:542:563	4934505	2	True				
ANR	4934525	IdentifierDecl	bSuccess = FALSE		4934505	0					
ANR	4934526	IdentifierDeclType	BOOL		4934505	0					
ANR	4934527	Identifier	bSuccess		4934505	1					
ANR	4934528	AssignmentExpression	bSuccess = FALSE		4934505	2		=			
ANR	4934529	Identifier	FALSE		4934505	0					
ANR	4934530	Identifier	FALSE		4934505	1					
ANR	4934531	ExpressionStatement	siStartInfo . cb = sizeof ( STARTUPINFO )	24:1:566:603	4934505	3	True				
ANR	4934532	AssignmentExpression	siStartInfo . cb = sizeof ( STARTUPINFO )		4934505	0		=			
ANR	4934533	MemberAccess	siStartInfo . cb		4934505	0					
ANR	4934534	Identifier	siStartInfo		4934505	0					
ANR	4934535	Identifier	cb		4934505	1					
ANR	4934536	SizeofExpression	sizeof ( STARTUPINFO )		4934505	1					
ANR	4934537	Sizeof	sizeof		4934505	0					
ANR	4934538	SizeofOperand	STARTUPINFO		4934505	1					
ANR	4934539	ExpressionStatement	siStartInfo . dwFlags |= STARTF_USESTDHANDLES	25:1:606:649	4934505	4	True				
ANR	4934540	AssignmentExpression	siStartInfo . dwFlags |= STARTF_USESTDHANDLES		4934505	0		|=			
ANR	4934541	MemberAccess	siStartInfo . dwFlags		4934505	0					
ANR	4934542	Identifier	siStartInfo		4934505	0					
ANR	4934543	Identifier	dwFlags		4934505	1					
ANR	4934544	Identifier	STARTF_USESTDHANDLES		4934505	1					
ANR	4934545	IdentifierDeclStatement	SECURITY_ATTRIBUTES saAttr ;	27:1:653:679	4934505	5	True				
ANR	4934546	IdentifierDecl	saAttr		4934505	0					
ANR	4934547	IdentifierDeclType	SECURITY_ATTRIBUTES		4934505	0					
ANR	4934548	Identifier	saAttr		4934505	1					
ANR	4934549	ExpressionStatement	saAttr . nLength = sizeof ( SECURITY_ATTRIBUTES )	28:1:682:727	4934505	6	True				
ANR	4934550	AssignmentExpression	saAttr . nLength = sizeof ( SECURITY_ATTRIBUTES )		4934505	0		=			
ANR	4934551	MemberAccess	saAttr . nLength		4934505	0					
ANR	4934552	Identifier	saAttr		4934505	0					
ANR	4934553	Identifier	nLength		4934505	1					
ANR	4934554	SizeofExpression	sizeof ( SECURITY_ATTRIBUTES )		4934505	1					
ANR	4934555	Sizeof	sizeof		4934505	0					
ANR	4934556	SizeofOperand	SECURITY_ATTRIBUTES		4934505	1					
ANR	4934557	ExpressionStatement	saAttr . bInheritHandle = TRUE	29:1:730:758	4934505	7	True				
ANR	4934558	AssignmentExpression	saAttr . bInheritHandle = TRUE		4934505	0		=			
ANR	4934559	MemberAccess	saAttr . bInheritHandle		4934505	0					
ANR	4934560	Identifier	saAttr		4934505	0					
ANR	4934561	Identifier	bInheritHandle		4934505	1					
ANR	4934562	Identifier	TRUE		4934505	1					
ANR	4934563	ExpressionStatement	saAttr . lpSecurityDescriptor = NULL	30:1:761:795	4934505	8	True				
ANR	4934564	AssignmentExpression	saAttr . lpSecurityDescriptor = NULL		4934505	0		=			
ANR	4934565	MemberAccess	saAttr . lpSecurityDescriptor		4934505	0					
ANR	4934566	Identifier	saAttr		4934505	0					
ANR	4934567	Identifier	lpSecurityDescriptor		4934505	1					
ANR	4934568	Identifier	NULL		4934505	1					
ANR	4934569	IdentifierDeclStatement	"LPTSTR pipeName = calloc ( 128 , sizeof ( TCHAR ) ) ;"	31:1:798:844	4934505	9	True				
ANR	4934570	IdentifierDecl	"pipeName = calloc ( 128 , sizeof ( TCHAR ) )"		4934505	0					
ANR	4934571	IdentifierDeclType	LPTSTR		4934505	0					
ANR	4934572	Identifier	pipeName		4934505	1					
ANR	4934573	AssignmentExpression	"pipeName = calloc ( 128 , sizeof ( TCHAR ) )"		4934505	2		=			
ANR	4934574	Identifier	pipeName		4934505	0					
ANR	4934575	CallExpression	"calloc ( 128 , sizeof ( TCHAR ) )"		4934505	1					
ANR	4934576	Callee	calloc		4934505	0					
ANR	4934577	Identifier	calloc		4934505	0					
ANR	4934578	ArgumentList	128		4934505	1					
ANR	4934579	Argument	128		4934505	0					
ANR	4934580	PrimaryExpression	128		4934505	0					
ANR	4934581	Argument	sizeof ( TCHAR )		4934505	1					
ANR	4934582	SizeofExpression	sizeof ( TCHAR )		4934505	0					
ANR	4934583	Sizeof	sizeof		4934505	0					
ANR	4934584	SizeofOperand	TCHAR		4934505	1					
ANR	4934585	ExpressionStatement	"GetEnvironmentVariable ( TEXT ( ""R2PIPE_PATH"" ) , pipeName , 128 )"	32:1:848:908	4934505	10	True				
ANR	4934586	CallExpression	"GetEnvironmentVariable ( TEXT ( ""R2PIPE_PATH"" ) , pipeName , 128 )"		4934505	0					
ANR	4934587	Callee	GetEnvironmentVariable		4934505	0					
ANR	4934588	Identifier	GetEnvironmentVariable		4934505	0					
ANR	4934589	ArgumentList	"TEXT ( ""R2PIPE_PATH"" )"		4934505	1					
ANR	4934590	Argument	"TEXT ( ""R2PIPE_PATH"" )"		4934505	0					
ANR	4934591	CallExpression	"TEXT ( ""R2PIPE_PATH"" )"		4934505	0					
ANR	4934592	Callee	TEXT		4934505	0					
ANR	4934593	Identifier	TEXT		4934505	0					
ANR	4934594	ArgumentList	"""R2PIPE_PATH"""		4934505	1					
ANR	4934595	Argument	"""R2PIPE_PATH"""		4934505	0					
ANR	4934596	PrimaryExpression	"""R2PIPE_PATH"""		4934505	0					
ANR	4934597	Argument	pipeName		4934505	1					
ANR	4934598	Identifier	pipeName		4934505	0					
ANR	4934599	Argument	128		4934505	2					
ANR	4934600	PrimaryExpression	128		4934505	0					
ANR	4934601	ExpressionStatement	"pipe = CreateFile ( pipeName , GENERIC_READ | GENERIC_WRITE , FILE_SHARE_DELETE | FILE_SHARE_READ | FILE_SHARE_WRITE , & saAttr , OPEN_EXISTING , 0 , NULL )"	34:1:912:1071	4934505	11	True				
ANR	4934602	AssignmentExpression	"pipe = CreateFile ( pipeName , GENERIC_READ | GENERIC_WRITE , FILE_SHARE_DELETE | FILE_SHARE_READ | FILE_SHARE_WRITE , & saAttr , OPEN_EXISTING , 0 , NULL )"		4934505	0		=			
ANR	4934603	Identifier	pipe		4934505	0					
ANR	4934604	CallExpression	"CreateFile ( pipeName , GENERIC_READ | GENERIC_WRITE , FILE_SHARE_DELETE | FILE_SHARE_READ | FILE_SHARE_WRITE , & saAttr , OPEN_EXISTING , 0 , NULL )"		4934505	1					
ANR	4934605	Callee	CreateFile		4934505	0					
ANR	4934606	Identifier	CreateFile		4934505	0					
ANR	4934607	ArgumentList	pipeName		4934505	1					
ANR	4934608	Argument	pipeName		4934505	0					
ANR	4934609	Identifier	pipeName		4934505	0					
ANR	4934610	Argument	GENERIC_READ | GENERIC_WRITE		4934505	1					
ANR	4934611	InclusiveOrExpression	GENERIC_READ | GENERIC_WRITE		4934505	0		|			
ANR	4934612	Identifier	GENERIC_READ		4934505	0					
ANR	4934613	Identifier	GENERIC_WRITE		4934505	1					
ANR	4934614	Argument	FILE_SHARE_DELETE | FILE_SHARE_READ | FILE_SHARE_WRITE		4934505	2					
ANR	4934615	InclusiveOrExpression	FILE_SHARE_DELETE | FILE_SHARE_READ | FILE_SHARE_WRITE		4934505	0		|			
ANR	4934616	Identifier	FILE_SHARE_DELETE		4934505	0					
ANR	4934617	InclusiveOrExpression	FILE_SHARE_READ | FILE_SHARE_WRITE		4934505	1		|			
ANR	4934618	Identifier	FILE_SHARE_READ		4934505	0					
ANR	4934619	Identifier	FILE_SHARE_WRITE		4934505	1					
ANR	4934620	Argument	& saAttr		4934505	3					
ANR	4934621	UnaryOperationExpression	& saAttr		4934505	0					
ANR	4934622	UnaryOperator	&		4934505	0					
ANR	4934623	Identifier	saAttr		4934505	1					
ANR	4934624	Argument	OPEN_EXISTING		4934505	4					
ANR	4934625	Identifier	OPEN_EXISTING		4934505	0					
ANR	4934626	Argument	0		4934505	5					
ANR	4934627	PrimaryExpression	0		4934505	0					
ANR	4934628	Argument	NULL		4934505	6					
ANR	4934629	Identifier	NULL		4934505	0					
ANR	4934630	ExpressionStatement	siStartInfo . hStdOutput = pipe	39:1:1075:1104	4934505	12	True				
ANR	4934631	AssignmentExpression	siStartInfo . hStdOutput = pipe		4934505	0		=			
ANR	4934632	MemberAccess	siStartInfo . hStdOutput		4934505	0					
ANR	4934633	Identifier	siStartInfo		4934505	0					
ANR	4934634	Identifier	hStdOutput		4934505	1					
ANR	4934635	Identifier	pipe		4934505	1					
ANR	4934636	ExpressionStatement	siStartInfo . hStdInput = pipe	40:1:1107:1135	4934505	13	True				
ANR	4934637	AssignmentExpression	siStartInfo . hStdInput = pipe		4934505	0		=			
ANR	4934638	MemberAccess	siStartInfo . hStdInput		4934505	0					
ANR	4934639	Identifier	siStartInfo		4934505	0					
ANR	4934640	Identifier	hStdInput		4934505	1					
ANR	4934641	Identifier	pipe		4934505	1					
ANR	4934642	ExpressionStatement	siStartInfo . hStdError = pipe	41:1:1138:1166	4934505	14	True				
ANR	4934643	AssignmentExpression	siStartInfo . hStdError = pipe		4934505	0		=			
ANR	4934644	MemberAccess	siStartInfo . hStdError		4934505	0					
ANR	4934645	Identifier	siStartInfo		4934505	0					
ANR	4934646	Identifier	hStdError		4934505	1					
ANR	4934647	Identifier	pipe		4934505	1					
ANR	4934648	IdentifierDeclStatement	LPTSTR cmdline_ = r_sys_conv_utf8_to_win ( szCmdline ) ;	42:1:1169:1221	4934505	15	True				
ANR	4934649	IdentifierDecl	cmdline_ = r_sys_conv_utf8_to_win ( szCmdline )		4934505	0					
ANR	4934650	IdentifierDeclType	LPTSTR		4934505	0					
ANR	4934651	Identifier	cmdline_		4934505	1					
ANR	4934652	AssignmentExpression	cmdline_ = r_sys_conv_utf8_to_win ( szCmdline )		4934505	2		=			
ANR	4934653	Identifier	cmdline_		4934505	0					
ANR	4934654	CallExpression	r_sys_conv_utf8_to_win ( szCmdline )		4934505	1					
ANR	4934655	Callee	r_sys_conv_utf8_to_win		4934505	0					
ANR	4934656	Identifier	r_sys_conv_utf8_to_win		4934505	0					
ANR	4934657	ArgumentList	szCmdline		4934505	1					
ANR	4934658	Argument	szCmdline		4934505	0					
ANR	4934659	Identifier	szCmdline		4934505	0					
ANR	4934660	ExpressionStatement	"bSuccess = CreateProcess ( NULL , cmdline_ , NULL , NULL , TRUE , 0 , NULL , NULL , & siStartInfo , & piProcInfo )"	43:1:1224:1327	4934505	16	True				
ANR	4934661	AssignmentExpression	"bSuccess = CreateProcess ( NULL , cmdline_ , NULL , NULL , TRUE , 0 , NULL , NULL , & siStartInfo , & piProcInfo )"		4934505	0		=			
ANR	4934662	Identifier	bSuccess		4934505	0					
ANR	4934663	CallExpression	"CreateProcess ( NULL , cmdline_ , NULL , NULL , TRUE , 0 , NULL , NULL , & siStartInfo , & piProcInfo )"		4934505	1					
ANR	4934664	Callee	CreateProcess		4934505	0					
ANR	4934665	Identifier	CreateProcess		4934505	0					
ANR	4934666	ArgumentList	NULL		4934505	1					
ANR	4934667	Argument	NULL		4934505	0					
ANR	4934668	Identifier	NULL		4934505	0					
ANR	4934669	Argument	cmdline_		4934505	1					
ANR	4934670	Identifier	cmdline_		4934505	0					
ANR	4934671	Argument	NULL		4934505	2					
ANR	4934672	Identifier	NULL		4934505	0					
ANR	4934673	Argument	NULL		4934505	3					
ANR	4934674	Identifier	NULL		4934505	0					
ANR	4934675	Argument	TRUE		4934505	4					
ANR	4934676	Identifier	TRUE		4934505	0					
ANR	4934677	Argument	0		4934505	5					
ANR	4934678	PrimaryExpression	0		4934505	0					
ANR	4934679	Argument	NULL		4934505	6					
ANR	4934680	Identifier	NULL		4934505	0					
ANR	4934681	Argument	NULL		4934505	7					
ANR	4934682	Identifier	NULL		4934505	0					
ANR	4934683	Argument	& siStartInfo		4934505	8					
ANR	4934684	UnaryOperationExpression	& siStartInfo		4934505	0					
ANR	4934685	UnaryOperator	&		4934505	0					
ANR	4934686	Identifier	siStartInfo		4934505	1					
ANR	4934687	Argument	& piProcInfo		4934505	9					
ANR	4934688	UnaryOperationExpression	& piProcInfo		4934505	0					
ANR	4934689	UnaryOperator	&		4934505	0					
ANR	4934690	Identifier	piProcInfo		4934505	1					
ANR	4934691	ExpressionStatement	free ( cmdline_ )	45:1:1330:1345	4934505	17	True				
ANR	4934692	CallExpression	free ( cmdline_ )		4934505	0					
ANR	4934693	Callee	free		4934505	0					
ANR	4934694	Identifier	free		4934505	0					
ANR	4934695	ArgumentList	cmdline_		4934505	1					
ANR	4934696	Argument	cmdline_		4934505	0					
ANR	4934697	Identifier	cmdline_		4934505	0					
ANR	4934698	ReturnStatement	return bSuccess ? piProcInfo . hProcess : NULL ;	46:1:1348:1392	4934505	18	True				
ANR	4934699	ConditionalExpression	bSuccess ? piProcInfo . hProcess : NULL		4934505	0					
ANR	4934700	Condition	bSuccess		4934505	0					
ANR	4934701	Identifier	bSuccess		4934505	0					
ANR	4934702	MemberAccess	piProcInfo . hProcess		4934505	1					
ANR	4934703	Identifier	piProcInfo		4934505	0					
ANR	4934704	Identifier	hProcess		4934505	1					
ANR	4934705	Identifier	NULL		4934505	2					
ANR	4934706	ReturnType	static HANDLE		4934505	1					
ANR	4934707	Identifier	myCreateChildProcess		4934505	2					
ANR	4934708	ParameterList	const char * szCmdline		4934505	3					
ANR	4934709	Parameter	const char * szCmdline	20:36:444:465	4934505	0	True				
ANR	4934710	ParameterType	const char *		4934505	0					
ANR	4934711	Identifier	szCmdline		4934505	1					
ANR	4934712	CFGEntryNode	ENTRY		4934505		True				
ANR	4934713	CFGExitNode	EXIT		4934505		True				
ANR	4934714	Symbol	FILE_SHARE_READ		4934505						
ANR	4934715	Symbol	siStartInfo . hStdInput		4934505						
ANR	4934716	Symbol	szCmdline		4934505						
ANR	4934717	Symbol	& siStartInfo		4934505						
ANR	4934718	Symbol	siStartInfo . hStdError		4934505						
ANR	4934719	Symbol	siStartInfo . cb		4934505						
ANR	4934720	Symbol	siStartInfo . dwFlags		4934505						
ANR	4934721	Symbol	TEXT		4934505						
ANR	4934722	Symbol	calloc		4934505						
ANR	4934723	Symbol	FILE_SHARE_WRITE		4934505						
ANR	4934724	Symbol	CreateFile		4934505						
ANR	4934725	Symbol	STARTF_USESTDHANDLES		4934505						
ANR	4934726	Symbol	cmdline_		4934505						
ANR	4934727	Symbol	GENERIC_WRITE		4934505						
ANR	4934728	Symbol	siStartInfo . hStdOutput		4934505						
ANR	4934729	Symbol	pipe		4934505						
ANR	4934730	Symbol	OPEN_EXISTING		4934505						
ANR	4934731	Symbol	pipeName		4934505						
ANR	4934732	Symbol	piProcInfo . hProcess		4934505						
ANR	4934733	Symbol	bSuccess		4934505						
ANR	4934734	Symbol	CreateProcess		4934505						
ANR	4934735	Symbol	FILE_SHARE_DELETE		4934505						
ANR	4934736	Symbol	NULL		4934505						
ANR	4934737	Symbol	siStartInfo		4934505						
ANR	4934738	Symbol	GENERIC_READ		4934505						
ANR	4934739	Symbol	saAttr . bInheritHandle		4934505						
ANR	4934740	Symbol	TRUE		4934505						
ANR	4934741	Symbol	piProcInfo		4934505						
ANR	4934742	Symbol	saAttr		4934505						
ANR	4934743	Symbol	saAttr . nLength		4934505						
ANR	4934744	Symbol	saAttr . lpSecurityDescriptor		4934505						
ANR	4934745	Symbol	FALSE		4934505						
ANR	4934746	Symbol	& piProcInfo		4934505						
ANR	4934747	Symbol	& saAttr		4934505						
ANR	4934748	Symbol	r_sys_conv_utf8_to_win		4934505						
ANR	4934749	DeclStmt									
ANR	4934750	Decl							BOOL	BOOL	bStopPipeLoop
ANR	4934751	DeclStmt									
ANR	4934752	Decl							HANDLE	HANDLE	hPipeInOut
ANR	4934753	DeclStmt									
ANR	4934754	Decl							HANDLE	HANDLE	hproc
ANR	4934755	Function	WaitForProcThread	54:0:1521:1650							
ANR	4934756	FunctionDef	WaitForProcThread (LPVOID lParam)		4934755	0					
ANR	4934757	CompoundStatement		54:53:1574:1650	4934755	0					
ANR	4934758	ExpressionStatement	"WaitForSingleObject ( hproc , INFINITE )"	55:1:1577:1614	4934755	0	True				
ANR	4934759	CallExpression	"WaitForSingleObject ( hproc , INFINITE )"		4934755	0					
ANR	4934760	Callee	WaitForSingleObject		4934755	0					
ANR	4934761	Identifier	WaitForSingleObject		4934755	0					
ANR	4934762	ArgumentList	hproc		4934755	1					
ANR	4934763	Argument	hproc		4934755	0					
ANR	4934764	Identifier	hproc		4934755	0					
ANR	4934765	Argument	INFINITE		4934755	1					
ANR	4934766	Identifier	INFINITE		4934755	0					
ANR	4934767	ExpressionStatement	bStopPipeLoop = TRUE	56:1:1617:1637	4934755	1	True				
ANR	4934768	AssignmentExpression	bStopPipeLoop = TRUE		4934755	0		=			
ANR	4934769	Identifier	bStopPipeLoop		4934755	0					
ANR	4934770	Identifier	TRUE		4934755	1					
ANR	4934771	ReturnStatement	return 0 ;	57:1:1640:1648	4934755	2	True				
ANR	4934772	PrimaryExpression	0		4934755	0					
ANR	4934773	ReturnType	static DWORD WINAPI		4934755	1					
ANR	4934774	Identifier	WaitForProcThread		4934755	2					
ANR	4934775	ParameterList	LPVOID lParam		4934755	3					
ANR	4934776	Parameter	LPVOID lParam	54:38:1559:1571	4934755	0	True				
ANR	4934777	ParameterType	LPVOID		4934755	0					
ANR	4934778	Identifier	lParam		4934755	1					
ANR	4934779	CFGEntryNode	ENTRY		4934755		True				
ANR	4934780	CFGExitNode	EXIT		4934755		True				
ANR	4934781	Symbol	hproc		4934755						
ANR	4934782	Symbol	lParam		4934755						
ANR	4934783	Symbol	TRUE		4934755						
ANR	4934784	Symbol	INFINITE		4934755						
ANR	4934785	Symbol	bStopPipeLoop		4934755						
ANR	4934786	Function	lang_pipe_run_win	59:0:1652:3213							
ANR	4934787	FunctionDef	lang_pipe_run_win (RLang * lang)		4934786	0					
ANR	4934788	CompoundStatement		59:43:1695:3213	4934786	0					
ANR	4934789	IdentifierDeclStatement	CHAR buf [ PIPE_BUF_SIZE ] ;	60:1:1698:1721	4934786	0	True				
ANR	4934790	IdentifierDecl	buf [ PIPE_BUF_SIZE ]		4934786	0					
ANR	4934791	IdentifierDeclType	CHAR [ PIPE_BUF_SIZE ]		4934786	0					
ANR	4934792	Identifier	buf		4934786	1					
ANR	4934793	Identifier	PIPE_BUF_SIZE		4934786	2					
ANR	4934794	IdentifierDeclStatement	BOOL bSuccess = TRUE ;	61:1:1724:1744	4934786	1	True				
ANR	4934795	IdentifierDecl	bSuccess = TRUE		4934786	0					
ANR	4934796	IdentifierDeclType	BOOL		4934786	0					
ANR	4934797	Identifier	bSuccess		4934786	1					
ANR	4934798	AssignmentExpression	bSuccess = TRUE		4934786	2		=			
ANR	4934799	Identifier	TRUE		4934786	0					
ANR	4934800	Identifier	TRUE		4934786	1					
ANR	4934801	IdentifierDeclStatement	"int i , res = 0 ;"	62:1:1747:1761	4934786	2	True				
ANR	4934802	IdentifierDecl	i		4934786	0					
ANR	4934803	IdentifierDeclType	int		4934786	0					
ANR	4934804	Identifier	i		4934786	1					
ANR	4934805	IdentifierDecl	res = 0		4934786	1					
ANR	4934806	IdentifierDeclType	int		4934786	0					
ANR	4934807	Identifier	res		4934786	1					
ANR	4934808	AssignmentExpression	res = 0		4934786	2		=			
ANR	4934809	Identifier	res		4934786	0					
ANR	4934810	PrimaryExpression	0		4934786	1					
ANR	4934811	IdentifierDeclStatement	"DWORD dwRead = 0 , dwWritten = 0 , dwLeft = 1 ;"	63:1:1764:1807	4934786	3	True				
ANR	4934812	IdentifierDecl	dwRead = 0		4934786	0					
ANR	4934813	IdentifierDeclType	DWORD		4934786	0					
ANR	4934814	Identifier	dwRead		4934786	1					
ANR	4934815	AssignmentExpression	dwRead = 0		4934786	2		=			
ANR	4934816	Identifier	dwRead		4934786	0					
ANR	4934817	PrimaryExpression	0		4934786	1					
ANR	4934818	IdentifierDecl	dwWritten = 0		4934786	1					
ANR	4934819	IdentifierDeclType	DWORD		4934786	0					
ANR	4934820	Identifier	dwWritten		4934786	1					
ANR	4934821	AssignmentExpression	dwWritten = 0		4934786	2		=			
ANR	4934822	Identifier	dwWritten		4934786	0					
ANR	4934823	PrimaryExpression	0		4934786	1					
ANR	4934824	IdentifierDecl	dwLeft = 1		4934786	2					
ANR	4934825	IdentifierDeclType	DWORD		4934786	0					
ANR	4934826	Identifier	dwLeft		4934786	1					
ANR	4934827	AssignmentExpression	dwLeft = 1		4934786	2		=			
ANR	4934828	Identifier	dwLeft		4934786	0					
ANR	4934829	PrimaryExpression	1		4934786	1					
ANR	4934830	ExpressionStatement	"r_cons_break_push ( NULL , NULL )"	64:1:1810:1840	4934786	4	True				
ANR	4934831	CallExpression	"r_cons_break_push ( NULL , NULL )"		4934786	0					
ANR	4934832	Callee	r_cons_break_push		4934786	0					
ANR	4934833	Identifier	r_cons_break_push		4934786	0					
ANR	4934834	ArgumentList	NULL		4934786	1					
ANR	4934835	Argument	NULL		4934786	0					
ANR	4934836	Identifier	NULL		4934786	0					
ANR	4934837	Argument	NULL		4934786	1					
ANR	4934838	Identifier	NULL		4934786	0					
ANR	4934839	DoStatement	do		4934786	5					
ANR	4934840	CompoundStatement		7:4:150:150	4934786	0					
ANR	4934841	IfStatement	if ( r_cons_is_breaked ( ) )		4934786	0					
ANR	4934842	Condition	r_cons_is_breaked ( )	66:6:1854:1873	4934786	0	True				
ANR	4934843	CallExpression	r_cons_is_breaked ( )		4934786	0					
ANR	4934844	Callee	r_cons_is_breaked		4934786	0					
ANR	4934845	Identifier	r_cons_is_breaked		4934786	0					
ANR	4934846	ArgumentList			4934786	1					
ANR	4934847	CompoundStatement		8:28:180:180	4934786	1					
ANR	4934848	ExpressionStatement	"TerminateProcess ( hproc , 0 )"	67:3:1881:1908	4934786	0	True				
ANR	4934849	CallExpression	"TerminateProcess ( hproc , 0 )"		4934786	0					
ANR	4934850	Callee	TerminateProcess		4934786	0					
ANR	4934851	Identifier	TerminateProcess		4934786	0					
ANR	4934852	ArgumentList	hproc		4934786	1					
ANR	4934853	Argument	hproc		4934786	0					
ANR	4934854	Identifier	hproc		4934786	0					
ANR	4934855	Argument	0		4934786	1					
ANR	4934856	PrimaryExpression	0		4934786	0					
ANR	4934857	BreakStatement	break ;	68:3:1913:1918	4934786	1	True				
ANR	4934858	ExpressionStatement	"memset ( buf , 0 , PIPE_BUF_SIZE )"	70:2:1926:1956	4934786	1	True				
ANR	4934859	CallExpression	"memset ( buf , 0 , PIPE_BUF_SIZE )"		4934786	0					
ANR	4934860	Callee	memset		4934786	0					
ANR	4934861	Identifier	memset		4934786	0					
ANR	4934862	ArgumentList	buf		4934786	1					
ANR	4934863	Argument	buf		4934786	0					
ANR	4934864	Identifier	buf		4934786	0					
ANR	4934865	Argument	0		4934786	1					
ANR	4934866	PrimaryExpression	0		4934786	0					
ANR	4934867	Argument	PIPE_BUF_SIZE		4934786	2					
ANR	4934868	Identifier	PIPE_BUF_SIZE		4934786	0					
ANR	4934869	WhileStatement	while ( bSuccess && ( ! dwLeft || ! dwRead ) )		4934786	2					
ANR	4934870	Condition	bSuccess && ( ! dwLeft || ! dwRead )	71:9:1967:1998	4934786	0	True				
ANR	4934871	AndExpression	bSuccess && ( ! dwLeft || ! dwRead )		4934786	0		&&			
ANR	4934872	Identifier	bSuccess		4934786	0					
ANR	4934873	OrExpression	! dwLeft || ! dwRead		4934786	1		||			
ANR	4934874	UnaryOperationExpression	! dwLeft		4934786	0					
ANR	4934875	UnaryOperator	!		4934786	0					
ANR	4934876	Identifier	dwLeft		4934786	1					
ANR	4934877	UnaryOperationExpression	! dwRead		4934786	1					
ANR	4934878	UnaryOperator	!		4934786	0					
ANR	4934879	Identifier	dwRead		4934786	1					
ANR	4934880	CompoundStatement		13:43:305:305	4934786	1					
ANR	4934881	ExpressionStatement	"bSuccess = PeekNamedPipe ( hPipeInOut , buf , PIPE_BUF_SIZE , & dwRead , NULL , & dwLeft )"	72:3:2006:2087	4934786	0	True				
ANR	4934882	AssignmentExpression	"bSuccess = PeekNamedPipe ( hPipeInOut , buf , PIPE_BUF_SIZE , & dwRead , NULL , & dwLeft )"		4934786	0		=			
ANR	4934883	Identifier	bSuccess		4934786	0					
ANR	4934884	CallExpression	"PeekNamedPipe ( hPipeInOut , buf , PIPE_BUF_SIZE , & dwRead , NULL , & dwLeft )"		4934786	1					
ANR	4934885	Callee	PeekNamedPipe		4934786	0					
ANR	4934886	Identifier	PeekNamedPipe		4934786	0					
ANR	4934887	ArgumentList	hPipeInOut		4934786	1					
ANR	4934888	Argument	hPipeInOut		4934786	0					
ANR	4934889	Identifier	hPipeInOut		4934786	0					
ANR	4934890	Argument	buf		4934786	1					
ANR	4934891	Identifier	buf		4934786	0					
ANR	4934892	Argument	PIPE_BUF_SIZE		4934786	2					
ANR	4934893	Identifier	PIPE_BUF_SIZE		4934786	0					
ANR	4934894	Argument	& dwRead		4934786	3					
ANR	4934895	UnaryOperationExpression	& dwRead		4934786	0					
ANR	4934896	UnaryOperator	&		4934786	0					
ANR	4934897	Identifier	dwRead		4934786	1					
ANR	4934898	Argument	NULL		4934786	4					
ANR	4934899	Identifier	NULL		4934786	0					
ANR	4934900	Argument	& dwLeft		4934786	5					
ANR	4934901	UnaryOperationExpression	& dwLeft		4934786	0					
ANR	4934902	UnaryOperator	&		4934786	0					
ANR	4934903	Identifier	dwLeft		4934786	1					
ANR	4934904	IfStatement	if ( bStopPipeLoop && ( ! dwLeft || ! dwRead ) )		4934786	1					
ANR	4934905	Condition	bStopPipeLoop && ( ! dwLeft || ! dwRead )	73:7:2096:2132	4934786	0	True				
ANR	4934906	AndExpression	bStopPipeLoop && ( ! dwLeft || ! dwRead )		4934786	0		&&			
ANR	4934907	Identifier	bStopPipeLoop		4934786	0					
ANR	4934908	OrExpression	! dwLeft || ! dwRead		4934786	1		||			
ANR	4934909	UnaryOperationExpression	! dwLeft		4934786	0					
ANR	4934910	UnaryOperator	!		4934786	0					
ANR	4934911	Identifier	dwLeft		4934786	1					
ANR	4934912	UnaryOperationExpression	! dwRead		4934786	1					
ANR	4934913	UnaryOperator	!		4934786	0					
ANR	4934914	Identifier	dwRead		4934786	1					
ANR	4934915	CompoundStatement		15:46:439:439	4934786	1					
ANR	4934916	BreakStatement	break ;	74:4:2141:2146	4934786	0	True				
ANR	4934917	IfStatement	if ( bSuccess && ( dwRead || dwLeft ) )		4934786	3					
ANR	4934918	Condition	bSuccess && ( dwRead || dwLeft )	77:6:2163:2192	4934786	0	True				
ANR	4934919	AndExpression	bSuccess && ( dwRead || dwLeft )		4934786	0		&&			
ANR	4934920	Identifier	bSuccess		4934786	0					
ANR	4934921	OrExpression	dwRead || dwLeft		4934786	1		||			
ANR	4934922	Identifier	dwRead		4934786	0					
ANR	4934923	Identifier	dwLeft		4934786	1					
ANR	4934924	CompoundStatement		19:38:499:499	4934786	1					
ANR	4934925	ExpressionStatement	"bSuccess = ReadFile ( hPipeInOut , buf , PIPE_BUF_SIZE , & dwRead , NULL )"	78:3:2200:2267	4934786	0	True				
ANR	4934926	AssignmentExpression	"bSuccess = ReadFile ( hPipeInOut , buf , PIPE_BUF_SIZE , & dwRead , NULL )"		4934786	0		=			
ANR	4934927	Identifier	bSuccess		4934786	0					
ANR	4934928	CallExpression	"ReadFile ( hPipeInOut , buf , PIPE_BUF_SIZE , & dwRead , NULL )"		4934786	1					
ANR	4934929	Callee	ReadFile		4934786	0					
ANR	4934930	Identifier	ReadFile		4934786	0					
ANR	4934931	ArgumentList	hPipeInOut		4934786	1					
ANR	4934932	Argument	hPipeInOut		4934786	0					
ANR	4934933	Identifier	hPipeInOut		4934786	0					
ANR	4934934	Argument	buf		4934786	1					
ANR	4934935	Identifier	buf		4934786	0					
ANR	4934936	Argument	PIPE_BUF_SIZE		4934786	2					
ANR	4934937	Identifier	PIPE_BUF_SIZE		4934786	0					
ANR	4934938	Argument	& dwRead		4934786	3					
ANR	4934939	UnaryOperationExpression	& dwRead		4934786	0					
ANR	4934940	UnaryOperator	&		4934786	0					
ANR	4934941	Identifier	dwRead		4934786	1					
ANR	4934942	Argument	NULL		4934786	4					
ANR	4934943	Identifier	NULL		4934786	0					
ANR	4934944	IfStatement	if ( bSuccess && dwRead > 0 )		4934786	4					
ANR	4934945	Condition	bSuccess && dwRead > 0	80:6:2279:2300	4934786	0	True				
ANR	4934946	AndExpression	bSuccess && dwRead > 0		4934786	0		&&			
ANR	4934947	Identifier	bSuccess		4934786	0					
ANR	4934948	RelationalExpression	dwRead > 0		4934786	1		>			
ANR	4934949	Identifier	dwRead		4934786	0					
ANR	4934950	PrimaryExpression	0		4934786	1					
ANR	4934951	CompoundStatement		24:3:642:693	4934786	1					
ANR	4934952	ExpressionStatement	buf [ sizeof ( buf ) - 1 ] = 0	81:3:2308:2333	4934786	0	True				
ANR	4934953	AssignmentExpression	buf [ sizeof ( buf ) - 1 ] = 0		4934786	0		=			
ANR	4934954	ArrayIndexing	buf [ sizeof ( buf ) - 1 ]		4934786	0					
ANR	4934955	Identifier	buf		4934786	0					
ANR	4934956	AdditiveExpression	sizeof ( buf ) - 1		4934786	1		-			
ANR	4934957	SizeofExpression	sizeof ( buf )		4934786	0					
ANR	4934958	Sizeof	sizeof		4934786	0					
ANR	4934959	SizeofOperand	buf		4934786	1					
ANR	4934960	PrimaryExpression	1		4934786	1					
ANR	4934961	PrimaryExpression	0		4934786	1					
ANR	4934962	IdentifierDeclStatement	"char * res = lang -> cmd_str ( ( RCore * ) lang -> user , buf ) ;"	82:3:2338:2389	4934786	1	True				
ANR	4934963	IdentifierDecl	"* res = lang -> cmd_str ( ( RCore * ) lang -> user , buf )"		4934786	0					
ANR	4934964	IdentifierDeclType	char *		4934786	0					
ANR	4934965	Identifier	res		4934786	1					
ANR	4934966	AssignmentExpression	"* res = lang -> cmd_str ( ( RCore * ) lang -> user , buf )"		4934786	2		=			
ANR	4934967	Identifier	res		4934786	0					
ANR	4934968	CallExpression	"lang -> cmd_str ( ( RCore * ) lang -> user , buf )"		4934786	1					
ANR	4934969	Callee	lang -> cmd_str		4934786	0					
ANR	4934970	PtrMemberAccess	lang -> cmd_str		4934786	0					
ANR	4934971	Identifier	lang		4934786	0					
ANR	4934972	Identifier	cmd_str		4934786	1					
ANR	4934973	ArgumentList	( RCore * ) lang -> user		4934786	1					
ANR	4934974	Argument	( RCore * ) lang -> user		4934786	0					
ANR	4934975	CastExpression	( RCore * ) lang -> user		4934786	0					
ANR	4934976	CastTarget	RCore *		4934786	0					
ANR	4934977	PtrMemberAccess	lang -> user		4934786	1					
ANR	4934978	Identifier	lang		4934786	0					
ANR	4934979	Identifier	user		4934786	1					
ANR	4934980	Argument	buf		4934786	1					
ANR	4934981	Identifier	buf		4934786	0					
ANR	4934982	IfStatement	if ( res )		4934786	2					
ANR	4934983	Condition	res	83:7:2398:2400	4934786	0	True				
ANR	4934984	Identifier	res		4934786	0					
ANR	4934985	CompoundStatement		26:4:713:743	4934786	1					
ANR	4934986	IdentifierDeclStatement	int res_len = strlen ( res ) + 1 ;	84:4:2409:2439	4934786	0	True				
ANR	4934987	IdentifierDecl	res_len = strlen ( res ) + 1		4934786	0					
ANR	4934988	IdentifierDeclType	int		4934786	0					
ANR	4934989	Identifier	res_len		4934786	1					
ANR	4934990	AssignmentExpression	res_len = strlen ( res ) + 1		4934786	2		=			
ANR	4934991	Identifier	res_len		4934786	0					
ANR	4934992	AdditiveExpression	strlen ( res ) + 1		4934786	1		+			
ANR	4934993	CallExpression	strlen ( res )		4934786	0					
ANR	4934994	Callee	strlen		4934786	0					
ANR	4934995	Identifier	strlen		4934786	0					
ANR	4934996	ArgumentList	res		4934786	1					
ANR	4934997	Argument	res		4934786	0					
ANR	4934998	Identifier	res		4934786	0					
ANR	4934999	PrimaryExpression	1		4934786	1					
ANR	4935000	ForStatement	for ( i = 0 ; i < res_len ; i ++ )		4934786	1					
ANR	4935001	ForInit	i = 0 ;	85:9:2450:2455	4934786	0	True				
ANR	4935002	AssignmentExpression	i = 0		4934786	0		=			
ANR	4935003	Identifier	i		4934786	0					
ANR	4935004	PrimaryExpression	0		4934786	1					
ANR	4935005	Condition	i < res_len	85:16:2457:2467	4934786	1	True				
ANR	4935006	RelationalExpression	i < res_len		4934786	0		<			
ANR	4935007	Identifier	i		4934786	0					
ANR	4935008	Identifier	res_len		4934786	1					
ANR	4935009	PostIncDecOperationExpression	i ++	85:29:2470:2472	4934786	2	True				
ANR	4935010	Identifier	i		4934786	0					
ANR	4935011	IncDec	++		4934786	1					
ANR	4935012	CompoundStatement		31:5:876:984	4934786	3					
ANR	4935013	ExpressionStatement	"memset ( buf , 0 , PIPE_BUF_SIZE )"	86:5:2482:2512	4934786	0	True				
ANR	4935014	CallExpression	"memset ( buf , 0 , PIPE_BUF_SIZE )"		4934786	0					
ANR	4935015	Callee	memset		4934786	0					
ANR	4935016	Identifier	memset		4934786	0					
ANR	4935017	ArgumentList	buf		4934786	1					
ANR	4935018	Argument	buf		4934786	0					
ANR	4935019	Identifier	buf		4934786	0					
ANR	4935020	Argument	0		4934786	1					
ANR	4935021	PrimaryExpression	0		4934786	0					
ANR	4935022	Argument	PIPE_BUF_SIZE		4934786	2					
ANR	4935023	Identifier	PIPE_BUF_SIZE		4934786	0					
ANR	4935024	ExpressionStatement	dwWritten = 0	87:5:2519:2532	4934786	1	True				
ANR	4935025	AssignmentExpression	dwWritten = 0		4934786	0		=			
ANR	4935026	Identifier	dwWritten		4934786	0					
ANR	4935027	PrimaryExpression	0		4934786	1					
ANR	4935028	IdentifierDeclStatement	int writelen = res_len - i ;	88:5:2539:2565	4934786	2	True				
ANR	4935029	IdentifierDecl	writelen = res_len - i		4934786	0					
ANR	4935030	IdentifierDeclType	int		4934786	0					
ANR	4935031	Identifier	writelen		4934786	1					
ANR	4935032	AssignmentExpression	writelen = res_len - i		4934786	2		=			
ANR	4935033	Identifier	writelen		4934786	0					
ANR	4935034	AdditiveExpression	res_len - i		4934786	1		-			
ANR	4935035	Identifier	res_len		4934786	0					
ANR	4935036	Identifier	i		4934786	1					
ANR	4935037	IdentifierDeclStatement	"int rc = WriteFile ( hPipeInOut , res + i , writelen > PIPE_BUF_SIZE ? PIPE_BUF_SIZE : writelen , & dwWritten , 0 ) ;"	89:5:2572:2680	4934786	3	True				
ANR	4935038	IdentifierDecl	"rc = WriteFile ( hPipeInOut , res + i , writelen > PIPE_BUF_SIZE ? PIPE_BUF_SIZE : writelen , & dwWritten , 0 )"		4934786	0					
ANR	4935039	IdentifierDeclType	int		4934786	0					
ANR	4935040	Identifier	rc		4934786	1					
ANR	4935041	AssignmentExpression	"rc = WriteFile ( hPipeInOut , res + i , writelen > PIPE_BUF_SIZE ? PIPE_BUF_SIZE : writelen , & dwWritten , 0 )"		4934786	2		=			
ANR	4935042	Identifier	rc		4934786	0					
ANR	4935043	CallExpression	"WriteFile ( hPipeInOut , res + i , writelen > PIPE_BUF_SIZE ? PIPE_BUF_SIZE : writelen , & dwWritten , 0 )"		4934786	1					
ANR	4935044	Callee	WriteFile		4934786	0					
ANR	4935045	Identifier	WriteFile		4934786	0					
ANR	4935046	ArgumentList	hPipeInOut		4934786	1					
ANR	4935047	Argument	hPipeInOut		4934786	0					
ANR	4935048	Identifier	hPipeInOut		4934786	0					
ANR	4935049	Argument	res + i		4934786	1					
ANR	4935050	AdditiveExpression	res + i		4934786	0		+			
ANR	4935051	Identifier	res		4934786	0					
ANR	4935052	Identifier	i		4934786	1					
ANR	4935053	Argument	writelen > PIPE_BUF_SIZE ? PIPE_BUF_SIZE : writelen		4934786	2					
ANR	4935054	ConditionalExpression	writelen > PIPE_BUF_SIZE ? PIPE_BUF_SIZE : writelen		4934786	0					
ANR	4935055	Condition	writelen > PIPE_BUF_SIZE		4934786	0					
ANR	4935056	RelationalExpression	writelen > PIPE_BUF_SIZE		4934786	0		>			
ANR	4935057	Identifier	writelen		4934786	0					
ANR	4935058	Identifier	PIPE_BUF_SIZE		4934786	1					
ANR	4935059	Identifier	PIPE_BUF_SIZE		4934786	1					
ANR	4935060	Identifier	writelen		4934786	2					
ANR	4935061	Argument	& dwWritten		4934786	3					
ANR	4935062	UnaryOperationExpression	& dwWritten		4934786	0					
ANR	4935063	UnaryOperator	&		4934786	0					
ANR	4935064	Identifier	dwWritten		4934786	1					
ANR	4935065	Argument	0		4934786	4					
ANR	4935066	PrimaryExpression	0		4934786	0					
ANR	4935067	IfStatement	if ( bStopPipeLoop )		4934786	4					
ANR	4935068	Condition	bStopPipeLoop	90:9:2691:2703	4934786	0	True				
ANR	4935069	Identifier	bStopPipeLoop		4934786	0					
ANR	4935070	CompoundStatement		32:24:1010:1010	4934786	1					
ANR	4935071	BreakStatement	break ;	91:6:2714:2719	4934786	0	True				
ANR	4935072	IfStatement	if ( ! rc )		4934786	5					
ANR	4935073	Condition	! rc	93:9:2737:2739	4934786	0	True				
ANR	4935074	UnaryOperationExpression	! rc		4934786	0					
ANR	4935075	UnaryOperator	!		4934786	0					
ANR	4935076	Identifier	rc		4934786	1					
ANR	4935077	CompoundStatement		35:14:1046:1046	4934786	1					
ANR	4935078	ExpressionStatement	"eprintf ( ""WriteFile: failed 0x%x\\n"" , ( int ) GetLastError ( ) )"	94:6:2750:2808	4934786	0	True				
ANR	4935079	CallExpression	"eprintf ( ""WriteFile: failed 0x%x\\n"" , ( int ) GetLastError ( ) )"		4934786	0					
ANR	4935080	Callee	eprintf		4934786	0					
ANR	4935081	Identifier	eprintf		4934786	0					
ANR	4935082	ArgumentList	"""WriteFile: failed 0x%x\\n"""		4934786	1					
ANR	4935083	Argument	"""WriteFile: failed 0x%x\\n"""		4934786	0					
ANR	4935084	PrimaryExpression	"""WriteFile: failed 0x%x\\n"""		4934786	0					
ANR	4935085	Argument	( int ) GetLastError ( )		4934786	1					
ANR	4935086	CastExpression	( int ) GetLastError ( )		4934786	0					
ANR	4935087	CastTarget	int		4934786	0					
ANR	4935088	CallExpression	GetLastError ( )		4934786	1					
ANR	4935089	Callee	GetLastError		4934786	0					
ANR	4935090	Identifier	GetLastError		4934786	0					
ANR	4935091	ArgumentList			4934786	1					
ANR	4935092	IfStatement	if ( dwWritten > 0 )		4934786	6					
ANR	4935093	Condition	dwWritten > 0	96:9:2826:2838	4934786	0	True				
ANR	4935094	RelationalExpression	dwWritten > 0		4934786	0		>			
ANR	4935095	Identifier	dwWritten		4934786	0					
ANR	4935096	PrimaryExpression	0		4934786	1					
ANR	4935097	CompoundStatement		38:24:1145:1145	4934786	1					
ANR	4935098	ExpressionStatement	i += dwWritten - 1	97:6:2849:2867	4934786	0	True				
ANR	4935099	AssignmentExpression	i += dwWritten - 1		4934786	0		+=			
ANR	4935100	Identifier	i		4934786	0					
ANR	4935101	AdditiveExpression	dwWritten - 1		4934786	1		-			
ANR	4935102	Identifier	dwWritten		4934786	0					
ANR	4935103	PrimaryExpression	1		4934786	1					
ANR	4935104	ElseStatement	else		4934786	0					
ANR	4935105	CompoundStatement		40:12:1185:1185	4934786	0					
ANR	4935106	ExpressionStatement	"eprintf ( ""w32-lang-pipe: 0x%x\\n"" , ( ut32 ) GetLastError ( ) )"	100:6:2931:2987	4934786	0	True				
ANR	4935107	CallExpression	"eprintf ( ""w32-lang-pipe: 0x%x\\n"" , ( ut32 ) GetLastError ( ) )"		4934786	0					
ANR	4935108	Callee	eprintf		4934786	0					
ANR	4935109	Identifier	eprintf		4934786	0					
ANR	4935110	ArgumentList	"""w32-lang-pipe: 0x%x\\n"""		4934786	1					
ANR	4935111	Argument	"""w32-lang-pipe: 0x%x\\n"""		4934786	0					
ANR	4935112	PrimaryExpression	"""w32-lang-pipe: 0x%x\\n"""		4934786	0					
ANR	4935113	Argument	( ut32 ) GetLastError ( )		4934786	1					
ANR	4935114	CastExpression	( ut32 ) GetLastError ( )		4934786	0					
ANR	4935115	CastTarget	ut32		4934786	0					
ANR	4935116	CallExpression	GetLastError ( )		4934786	1					
ANR	4935117	Callee	GetLastError		4934786	0					
ANR	4935118	Identifier	GetLastError		4934786	0					
ANR	4935119	ArgumentList			4934786	1					
ANR	4935120	ExpressionStatement	free ( res )	105:4:3078:3088	4934786	2	True				
ANR	4935121	CallExpression	free ( res )		4934786	0					
ANR	4935122	Callee	free		4934786	0					
ANR	4935123	Identifier	free		4934786	0					
ANR	4935124	ArgumentList	res		4934786	1					
ANR	4935125	Argument	res		4934786	0					
ANR	4935126	Identifier	res		4934786	0					
ANR	4935127	ElseStatement	else		4934786	0					
ANR	4935128	CompoundStatement		48:10:1404:1404	4934786	0					
ANR	4935129	ExpressionStatement	"WriteFile ( hPipeInOut , """" , 1 , & dwWritten , NULL )"	107:4:3106:3153	4934786	0	True				
ANR	4935130	CallExpression	"WriteFile ( hPipeInOut , """" , 1 , & dwWritten , NULL )"		4934786	0					
ANR	4935131	Callee	WriteFile		4934786	0					
ANR	4935132	Identifier	WriteFile		4934786	0					
ANR	4935133	ArgumentList	hPipeInOut		4934786	1					
ANR	4935134	Argument	hPipeInOut		4934786	0					
ANR	4935135	Identifier	hPipeInOut		4934786	0					
ANR	4935136	Argument	""""""		4934786	1					
ANR	4935137	PrimaryExpression	""""""		4934786	0					
ANR	4935138	Argument	1		4934786	2					
ANR	4935139	PrimaryExpression	1		4934786	0					
ANR	4935140	Argument	& dwWritten		4934786	3					
ANR	4935141	UnaryOperationExpression	& dwWritten		4934786	0					
ANR	4935142	UnaryOperator	&		4934786	0					
ANR	4935143	Identifier	dwWritten		4934786	1					
ANR	4935144	Argument	NULL		4934786	4					
ANR	4935145	Identifier	NULL		4934786	0					
ANR	4935146	Condition	! bStopPipeLoop	110:10:3174:3187	4934786	1	True				
ANR	4935147	UnaryOperationExpression	! bStopPipeLoop		4934786	0					
ANR	4935148	UnaryOperator	!		4934786	0					
ANR	4935149	Identifier	bStopPipeLoop		4934786	1					
ANR	4935150	ExpressionStatement	r_cons_break_pop ( )	111:1:3192:3211	4934786	6	True				
ANR	4935151	CallExpression	r_cons_break_pop ( )		4934786	0					
ANR	4935152	Callee	r_cons_break_pop		4934786	0					
ANR	4935153	Identifier	r_cons_break_pop		4934786	0					
ANR	4935154	ArgumentList			4934786	1					
ANR	4935155	ReturnType	static void		4934786	1					
ANR	4935156	Identifier	lang_pipe_run_win		4934786	2					
ANR	4935157	ParameterList	RLang * lang		4934786	3					
ANR	4935158	Parameter	RLang * lang	59:30:1682:1692	4934786	0	True				
ANR	4935159	ParameterType	RLang *		4934786	0					
ANR	4935160	Identifier	lang		4934786	1					
ANR	4935161	CFGEntryNode	ENTRY		4934786		True				
ANR	4935162	CFGExitNode	EXIT		4934786		True				
ANR	4935163	Symbol	WriteFile		4934786						
ANR	4935164	Symbol	* lang		4934786						
ANR	4935165	Symbol	& dwWritten		4934786						
ANR	4935166	Symbol	PIPE_BUF_SIZE		4934786						
ANR	4935167	Symbol	hPipeInOut		4934786						
ANR	4935168	Symbol	ReadFile		4934786						
ANR	4935169	Symbol	& dwRead		4934786						
ANR	4935170	Symbol	hproc		4934786						
ANR	4935171	Symbol	dwRead		4934786						
ANR	4935172	Symbol	strlen		4934786						
ANR	4935173	Symbol	r_cons_is_breaked		4934786						
ANR	4935174	Symbol	res_len		4934786						
ANR	4935175	Symbol	lang		4934786						
ANR	4935176	Symbol	bStopPipeLoop		4934786						
ANR	4935177	Symbol	bSuccess		4934786						
ANR	4935178	Symbol	lang -> cmd_str		4934786						
ANR	4935179	Symbol	res		4934786						
ANR	4935180	Symbol	* buf		4934786						
ANR	4935181	Symbol	NULL		4934786						
ANR	4935182	Symbol	PeekNamedPipe		4934786						
ANR	4935183	Symbol	writelen		4934786						
ANR	4935184	Symbol	TRUE		4934786						
ANR	4935185	Symbol	i		4934786						
ANR	4935186	Symbol	dwLeft		4934786						
ANR	4935187	Symbol	dwWritten		4934786						
ANR	4935188	Symbol	rc		4934786						
ANR	4935189	Symbol	buf		4934786						
ANR	4935190	Symbol	GetLastError		4934786						
ANR	4935191	Symbol	& dwLeft		4934786						
ANR	4935192	Symbol	lang -> user		4934786						
ANR	4935193	Function	env	114:0:3221:3357							
ANR	4935194	FunctionDef	"env (const char * s , int f)"		4935193	0					
ANR	4935195	CompoundStatement		114:38:3259:3357	4935193	0					
ANR	4935196	IdentifierDeclStatement	"char * a = r_str_newf ( ""%d"" , f ) ;"	115:1:3262:3292	4935193	0	True				
ANR	4935197	IdentifierDecl	"* a = r_str_newf ( ""%d"" , f )"		4935193	0					
ANR	4935198	IdentifierDeclType	char *		4935193	0					
ANR	4935199	Identifier	a		4935193	1					
ANR	4935200	AssignmentExpression	"* a = r_str_newf ( ""%d"" , f )"		4935193	2		=			
ANR	4935201	Identifier	a		4935193	0					
ANR	4935202	CallExpression	"r_str_newf ( ""%d"" , f )"		4935193	1					
ANR	4935203	Callee	r_str_newf		4935193	0					
ANR	4935204	Identifier	r_str_newf		4935193	0					
ANR	4935205	ArgumentList	"""%d"""		4935193	1					
ANR	4935206	Argument	"""%d"""		4935193	0					
ANR	4935207	PrimaryExpression	"""%d"""		4935193	0					
ANR	4935208	Argument	f		4935193	1					
ANR	4935209	Identifier	f		4935193	0					
ANR	4935210	ExpressionStatement	"r_sys_setenv ( s , a )"	116:1:3295:3314	4935193	1	True				
ANR	4935211	CallExpression	"r_sys_setenv ( s , a )"		4935193	0					
ANR	4935212	Callee	r_sys_setenv		4935193	0					
ANR	4935213	Identifier	r_sys_setenv		4935193	0					
ANR	4935214	ArgumentList	s		4935193	1					
ANR	4935215	Argument	s		4935193	0					
ANR	4935216	Identifier	s		4935193	0					
ANR	4935217	Argument	a		4935193	1					
ANR	4935218	Identifier	a		4935193	0					
ANR	4935219	ExpressionStatement	free ( a )	118:1:3347:3355	4935193	2	True				
ANR	4935220	CallExpression	free ( a )		4935193	0					
ANR	4935221	Callee	free		4935193	0					
ANR	4935222	Identifier	free		4935193	0					
ANR	4935223	ArgumentList	a		4935193	1					
ANR	4935224	Argument	a		4935193	0					
ANR	4935225	Identifier	a		4935193	0					
ANR	4935226	ReturnType	static void		4935193	1					
ANR	4935227	Identifier	env		4935193	2					
ANR	4935228	ParameterList	"const char * s , int f"		4935193	3					
ANR	4935229	Parameter	const char * s	114:16:3237:3249	4935193	0	True				
ANR	4935230	ParameterType	const char *		4935193	0					
ANR	4935231	Identifier	s		4935193	1					
ANR	4935232	Parameter	int f	114:31:3252:3256	4935193	1	True				
ANR	4935233	ParameterType	int		4935193	0					
ANR	4935234	Identifier	f		4935193	1					
ANR	4935235	CFGEntryNode	ENTRY		4935193		True				
ANR	4935236	CFGExitNode	EXIT		4935193		True				
ANR	4935237	Symbol	a		4935193						
ANR	4935238	Symbol	s		4935193						
ANR	4935239	Symbol	f		4935193						
ANR	4935240	Symbol	r_str_newf		4935193						
ANR	4935241	Function	lang_pipe_run	122:0:3367:6577							
ANR	4935242	FunctionDef	"lang_pipe_run (RLang * lang , const char * code , int len)"		4935241	0					
ANR	4935243	CompoundStatement		122:65:3432:6577	4935241	0					
ANR	4935244	IdentifierDeclStatement	int safe_in = dup ( 0 ) ;	124:1:3448:3469	4935241	0	True				
ANR	4935245	IdentifierDecl	safe_in = dup ( 0 )		4935241	0					
ANR	4935246	IdentifierDeclType	int		4935241	0					
ANR	4935247	Identifier	safe_in		4935241	1					
ANR	4935248	AssignmentExpression	safe_in = dup ( 0 )		4935241	2		=			
ANR	4935249	Identifier	safe_in		4935241	0					
ANR	4935250	CallExpression	dup ( 0 )		4935241	1					
ANR	4935251	Callee	dup		4935241	0					
ANR	4935252	Identifier	dup		4935241	0					
ANR	4935253	ArgumentList	0		4935241	1					
ANR	4935254	Argument	0		4935241	0					
ANR	4935255	PrimaryExpression	0		4935241	0					
ANR	4935256	IdentifierDeclStatement	"int child , ret ;"	125:1:3472:3486	4935241	1	True				
ANR	4935257	IdentifierDecl	child		4935241	0					
ANR	4935258	IdentifierDeclType	int		4935241	0					
ANR	4935259	Identifier	child		4935241	1					
ANR	4935260	IdentifierDecl	ret		4935241	1					
ANR	4935261	IdentifierDeclType	int		4935241	0					
ANR	4935262	Identifier	ret		4935241	1					
ANR	4935263	IdentifierDeclStatement	int input [ 2 ] ;	126:1:3489:3501	4935241	2	True				
ANR	4935264	IdentifierDecl	input [ 2 ]		4935241	0					
ANR	4935265	IdentifierDeclType	int [ 2 ]		4935241	0					
ANR	4935266	Identifier	input		4935241	1					
ANR	4935267	PrimaryExpression	2		4935241	2					
ANR	4935268	IdentifierDeclStatement	int output [ 2 ] ;	127:1:3504:3517	4935241	3	True				
ANR	4935269	IdentifierDecl	output [ 2 ]		4935241	0					
ANR	4935270	IdentifierDeclType	int [ 2 ]		4935241	0					
ANR	4935271	Identifier	output		4935241	1					
ANR	4935272	PrimaryExpression	2		4935241	2					
ANR	4935273	IfStatement	if ( pipe ( input ) != 0 )		4935241	4					
ANR	4935274	Condition	pipe ( input ) != 0	129:5:3525:3541	4935241	0	True				
ANR	4935275	EqualityExpression	pipe ( input ) != 0		4935241	0		!=			
ANR	4935276	CallExpression	pipe ( input )		4935241	0					
ANR	4935277	Callee	pipe		4935241	0					
ANR	4935278	Identifier	pipe		4935241	0					
ANR	4935279	ArgumentList	input		4935241	1					
ANR	4935280	Argument	input		4935241	0					
ANR	4935281	Identifier	input		4935241	0					
ANR	4935282	PrimaryExpression	0		4935241	1					
ANR	4935283	CompoundStatement		8:24:111:111	4935241	1					
ANR	4935284	ExpressionStatement	"eprintf ( ""r_lang_pipe: pipe failed on input\\n"" )"	130:2:3548:3595	4935241	0	True				
ANR	4935285	CallExpression	"eprintf ( ""r_lang_pipe: pipe failed on input\\n"" )"		4935241	0					
ANR	4935286	Callee	eprintf		4935241	0					
ANR	4935287	Identifier	eprintf		4935241	0					
ANR	4935288	ArgumentList	"""r_lang_pipe: pipe failed on input\\n"""		4935241	1					
ANR	4935289	Argument	"""r_lang_pipe: pipe failed on input\\n"""		4935241	0					
ANR	4935290	PrimaryExpression	"""r_lang_pipe: pipe failed on input\\n"""		4935241	0					
ANR	4935291	IfStatement	if ( safe_in != - 1 )		4935241	1					
ANR	4935292	Condition	safe_in != - 1	131:6:3603:3615	4935241	0	True				
ANR	4935293	EqualityExpression	safe_in != - 1		4935241	0		!=			
ANR	4935294	Identifier	safe_in		4935241	0					
ANR	4935295	UnaryOperationExpression	- 1		4935241	1					
ANR	4935296	UnaryOperator	-		4935241	0					
ANR	4935297	PrimaryExpression	1		4935241	1					
ANR	4935298	CompoundStatement		10:21:185:185	4935241	1					
ANR	4935299	ExpressionStatement	close ( safe_in )	132:3:3623:3638	4935241	0	True				
ANR	4935300	CallExpression	close ( safe_in )		4935241	0					
ANR	4935301	Callee	close		4935241	0					
ANR	4935302	Identifier	close		4935241	0					
ANR	4935303	ArgumentList	safe_in		4935241	1					
ANR	4935304	Argument	safe_in		4935241	0					
ANR	4935305	Identifier	safe_in		4935241	0					
ANR	4935306	ReturnStatement	return false ;	134:2:3646:3658	4935241	2	True				
ANR	4935307	Identifier	false		4935241	0					
ANR	4935308	IfStatement	if ( pipe ( output ) != 0 )		4935241	5					
ANR	4935309	Condition	pipe ( output ) != 0	136:5:3668:3685	4935241	0	True				
ANR	4935310	EqualityExpression	pipe ( output ) != 0		4935241	0		!=			
ANR	4935311	CallExpression	pipe ( output )		4935241	0					
ANR	4935312	Callee	pipe		4935241	0					
ANR	4935313	Identifier	pipe		4935241	0					
ANR	4935314	ArgumentList	output		4935241	1					
ANR	4935315	Argument	output		4935241	0					
ANR	4935316	Identifier	output		4935241	0					
ANR	4935317	PrimaryExpression	0		4935241	1					
ANR	4935318	CompoundStatement		15:25:255:255	4935241	1					
ANR	4935319	ExpressionStatement	"eprintf ( ""r_lang_pipe: pipe failed on output\\n"" )"	137:2:3692:3740	4935241	0	True				
ANR	4935320	CallExpression	"eprintf ( ""r_lang_pipe: pipe failed on output\\n"" )"		4935241	0					
ANR	4935321	Callee	eprintf		4935241	0					
ANR	4935322	Identifier	eprintf		4935241	0					
ANR	4935323	ArgumentList	"""r_lang_pipe: pipe failed on output\\n"""		4935241	1					
ANR	4935324	Argument	"""r_lang_pipe: pipe failed on output\\n"""		4935241	0					
ANR	4935325	PrimaryExpression	"""r_lang_pipe: pipe failed on output\\n"""		4935241	0					
ANR	4935326	IfStatement	if ( safe_in != - 1 )		4935241	1					
ANR	4935327	Condition	safe_in != - 1	138:6:3748:3760	4935241	0	True				
ANR	4935328	EqualityExpression	safe_in != - 1		4935241	0		!=			
ANR	4935329	Identifier	safe_in		4935241	0					
ANR	4935330	UnaryOperationExpression	- 1		4935241	1					
ANR	4935331	UnaryOperator	-		4935241	0					
ANR	4935332	PrimaryExpression	1		4935241	1					
ANR	4935333	CompoundStatement		17:21:330:330	4935241	1					
ANR	4935334	ExpressionStatement	close ( safe_in )	139:3:3768:3783	4935241	0	True				
ANR	4935335	CallExpression	close ( safe_in )		4935241	0					
ANR	4935336	Callee	close		4935241	0					
ANR	4935337	Identifier	close		4935241	0					
ANR	4935338	ArgumentList	safe_in		4935241	1					
ANR	4935339	Argument	safe_in		4935241	0					
ANR	4935340	Identifier	safe_in		4935241	0					
ANR	4935341	ReturnStatement	return false ;	141:2:3791:3803	4935241	2	True				
ANR	4935342	Identifier	false		4935241	0					
ANR	4935343	ExpressionStatement	"env ( ""R2PIPE_IN"" , input [ 0 ] )"	144:1:3811:3838	4935241	6	True				
ANR	4935344	CallExpression	"env ( ""R2PIPE_IN"" , input [ 0 ] )"		4935241	0					
ANR	4935345	Callee	env		4935241	0					
ANR	4935346	Identifier	env		4935241	0					
ANR	4935347	ArgumentList	"""R2PIPE_IN"""		4935241	1					
ANR	4935348	Argument	"""R2PIPE_IN"""		4935241	0					
ANR	4935349	PrimaryExpression	"""R2PIPE_IN"""		4935241	0					
ANR	4935350	Argument	input [ 0 ]		4935241	1					
ANR	4935351	ArrayIndexing	input [ 0 ]		4935241	0					
ANR	4935352	Identifier	input		4935241	0					
ANR	4935353	PrimaryExpression	0		4935241	1					
ANR	4935354	ExpressionStatement	"env ( ""R2PIPE_OUT"" , output [ 1 ] )"	145:1:3841:3870	4935241	7	True				
ANR	4935355	CallExpression	"env ( ""R2PIPE_OUT"" , output [ 1 ] )"		4935241	0					
ANR	4935356	Callee	env		4935241	0					
ANR	4935357	Identifier	env		4935241	0					
ANR	4935358	ArgumentList	"""R2PIPE_OUT"""		4935241	1					
ANR	4935359	Argument	"""R2PIPE_OUT"""		4935241	0					
ANR	4935360	PrimaryExpression	"""R2PIPE_OUT"""		4935241	0					
ANR	4935361	Argument	output [ 1 ]		4935241	1					
ANR	4935362	ArrayIndexing	output [ 1 ]		4935241	0					
ANR	4935363	Identifier	output		4935241	0					
ANR	4935364	PrimaryExpression	1		4935241	1					
ANR	4935365	ExpressionStatement	child = r_sys_fork ( )	147:1:3874:3895	4935241	8	True				
ANR	4935366	AssignmentExpression	child = r_sys_fork ( )		4935241	0		=			
ANR	4935367	Identifier	child		4935241	0					
ANR	4935368	CallExpression	r_sys_fork ( )		4935241	1					
ANR	4935369	Callee	r_sys_fork		4935241	0					
ANR	4935370	Identifier	r_sys_fork		4935241	0					
ANR	4935371	ArgumentList			4935241	1					
ANR	4935372	IfStatement	if ( child == - 1 )		4935241	9					
ANR	4935373	Condition	child == - 1	148:5:3902:3912	4935241	0	True				
ANR	4935374	EqualityExpression	child == - 1		4935241	0		==			
ANR	4935375	Identifier	child		4935241	0					
ANR	4935376	UnaryOperationExpression	- 1		4935241	1					
ANR	4935377	UnaryOperator	-		4935241	0					
ANR	4935378	PrimaryExpression	1		4935241	1					
ANR	4935379	CompoundStatement		27:18:482:482	4935241	1					
ANR	4935380	ExpressionStatement	"perror ( ""pipe run"" )"	150:2:3933:3952	4935241	0	True				
ANR	4935381	CallExpression	"perror ( ""pipe run"" )"		4935241	0					
ANR	4935382	Callee	perror		4935241	0					
ANR	4935383	Identifier	perror		4935241	0					
ANR	4935384	ArgumentList	"""pipe run"""		4935241	1					
ANR	4935385	Argument	"""pipe run"""		4935241	0					
ANR	4935386	PrimaryExpression	"""pipe run"""		4935241	0					
ANR	4935387	ElseStatement	else		4935241	0					
ANR	4935388	IfStatement	if ( ! child )		4935241	0					
ANR	4935389	Condition	! child	151:12:3966:3971	4935241	0	True				
ANR	4935390	UnaryOperationExpression	! child		4935241	0					
ANR	4935391	UnaryOperator	!		4935241	0					
ANR	4935392	Identifier	child		4935241	1					
ANR	4935393	CompoundStatement		30:20:541:541	4935241	1					
ANR	4935394	ExpressionStatement	"r_sandbox_system ( code , 1 )"	153:2:3995:4021	4935241	0	True				
ANR	4935395	CallExpression	"r_sandbox_system ( code , 1 )"		4935241	0					
ANR	4935396	Callee	r_sandbox_system		4935241	0					
ANR	4935397	Identifier	r_sandbox_system		4935241	0					
ANR	4935398	ArgumentList	code		4935241	1					
ANR	4935399	Argument	code		4935241	0					
ANR	4935400	Identifier	code		4935241	0					
ANR	4935401	Argument	1		4935241	1					
ANR	4935402	PrimaryExpression	1		4935241	0					
ANR	4935403	ExpressionStatement	"write ( input [ 1 ] , """" , 1 )"	154:2:4025:4048	4935241	1	True				
ANR	4935404	CallExpression	"write ( input [ 1 ] , """" , 1 )"		4935241	0					
ANR	4935405	Callee	write		4935241	0					
ANR	4935406	Identifier	write		4935241	0					
ANR	4935407	ArgumentList	input [ 1 ]		4935241	1					
ANR	4935408	Argument	input [ 1 ]		4935241	0					
ANR	4935409	ArrayIndexing	input [ 1 ]		4935241	0					
ANR	4935410	Identifier	input		4935241	0					
ANR	4935411	PrimaryExpression	1		4935241	1					
ANR	4935412	Argument	""""""		4935241	1					
ANR	4935413	PrimaryExpression	""""""		4935241	0					
ANR	4935414	Argument	1		4935241	2					
ANR	4935415	PrimaryExpression	1		4935241	0					
ANR	4935416	ExpressionStatement	close ( input [ 0 ] )	155:2:4052:4068	4935241	2	True				
ANR	4935417	CallExpression	close ( input [ 0 ] )		4935241	0					
ANR	4935418	Callee	close		4935241	0					
ANR	4935419	Identifier	close		4935241	0					
ANR	4935420	ArgumentList	input [ 0 ]		4935241	1					
ANR	4935421	Argument	input [ 0 ]		4935241	0					
ANR	4935422	ArrayIndexing	input [ 0 ]		4935241	0					
ANR	4935423	Identifier	input		4935241	0					
ANR	4935424	PrimaryExpression	0		4935241	1					
ANR	4935425	ExpressionStatement	close ( input [ 1 ] )	156:2:4072:4088	4935241	3	True				
ANR	4935426	CallExpression	close ( input [ 1 ] )		4935241	0					
ANR	4935427	Callee	close		4935241	0					
ANR	4935428	Identifier	close		4935241	0					
ANR	4935429	ArgumentList	input [ 1 ]		4935241	1					
ANR	4935430	Argument	input [ 1 ]		4935241	0					
ANR	4935431	ArrayIndexing	input [ 1 ]		4935241	0					
ANR	4935432	Identifier	input		4935241	0					
ANR	4935433	PrimaryExpression	1		4935241	1					
ANR	4935434	ExpressionStatement	close ( output [ 0 ] )	157:2:4092:4109	4935241	4	True				
ANR	4935435	CallExpression	close ( output [ 0 ] )		4935241	0					
ANR	4935436	Callee	close		4935241	0					
ANR	4935437	Identifier	close		4935241	0					
ANR	4935438	ArgumentList	output [ 0 ]		4935241	1					
ANR	4935439	Argument	output [ 0 ]		4935241	0					
ANR	4935440	ArrayIndexing	output [ 0 ]		4935241	0					
ANR	4935441	Identifier	output		4935241	0					
ANR	4935442	PrimaryExpression	0		4935241	1					
ANR	4935443	ExpressionStatement	close ( output [ 1 ] )	158:2:4113:4130	4935241	5	True				
ANR	4935444	CallExpression	close ( output [ 1 ] )		4935241	0					
ANR	4935445	Callee	close		4935241	0					
ANR	4935446	Identifier	close		4935241	0					
ANR	4935447	ArgumentList	output [ 1 ]		4935241	1					
ANR	4935448	Argument	output [ 1 ]		4935241	0					
ANR	4935449	ArrayIndexing	output [ 1 ]		4935241	0					
ANR	4935450	Identifier	output		4935241	0					
ANR	4935451	PrimaryExpression	1		4935241	1					
ANR	4935452	ExpressionStatement	fflush ( stdout )	159:2:4134:4149	4935241	6	True				
ANR	4935453	CallExpression	fflush ( stdout )		4935241	0					
ANR	4935454	Callee	fflush		4935241	0					
ANR	4935455	Identifier	fflush		4935241	0					
ANR	4935456	ArgumentList	stdout		4935241	1					
ANR	4935457	Argument	stdout		4935241	0					
ANR	4935458	Identifier	stdout		4935241	0					
ANR	4935459	ExpressionStatement	fflush ( stderr )	160:2:4153:4168	4935241	7	True				
ANR	4935460	CallExpression	fflush ( stderr )		4935241	0					
ANR	4935461	Callee	fflush		4935241	0					
ANR	4935462	Identifier	fflush		4935241	0					
ANR	4935463	ArgumentList	stderr		4935241	1					
ANR	4935464	Argument	stderr		4935241	0					
ANR	4935465	Identifier	stderr		4935241	0					
ANR	4935466	ExpressionStatement	"r_sys_exit ( 0 , true )"	161:2:4172:4192	4935241	8	True				
ANR	4935467	CallExpression	"r_sys_exit ( 0 , true )"		4935241	0					
ANR	4935468	Callee	r_sys_exit		4935241	0					
ANR	4935469	Identifier	r_sys_exit		4935241	0					
ANR	4935470	ArgumentList	0		4935241	1					
ANR	4935471	Argument	0		4935241	0					
ANR	4935472	PrimaryExpression	0		4935241	0					
ANR	4935473	Argument	true		4935241	1					
ANR	4935474	Identifier	true		4935241	0					
ANR	4935475	ReturnStatement	return false ;	162:2:4196:4208	4935241	9	True				
ANR	4935476	Identifier	false		4935241	0					
ANR	4935477	ElseStatement	else		4935241	0					
ANR	4935478	CompoundStatement		44:2:804:824	4935241	0					
ANR	4935479	IdentifierDeclStatement	"char * res , buf [ 8192 ] ;"	165:2:4237:4257	4935241	0	True				
ANR	4935480	IdentifierDecl	* res		4935241	0					
ANR	4935481	IdentifierDeclType	char *		4935241	0					
ANR	4935482	Identifier	res		4935241	1					
ANR	4935483	IdentifierDecl	buf [ 8192 ]		4935241	1					
ANR	4935484	IdentifierDeclType	char [ 8192 ]		4935241	0					
ANR	4935485	Identifier	buf		4935241	1					
ANR	4935486	PrimaryExpression	8192		4935241	2					
ANR	4935487	ExpressionStatement	close ( output [ 1 ] )	167:2:4335:4352	4935241	1	True				
ANR	4935488	CallExpression	close ( output [ 1 ] )		4935241	0					
ANR	4935489	Callee	close		4935241	0					
ANR	4935490	Identifier	close		4935241	0					
ANR	4935491	ArgumentList	output [ 1 ]		4935241	1					
ANR	4935492	Argument	output [ 1 ]		4935241	0					
ANR	4935493	ArrayIndexing	output [ 1 ]		4935241	0					
ANR	4935494	Identifier	output		4935241	0					
ANR	4935495	PrimaryExpression	1		4935241	1					
ANR	4935496	ExpressionStatement	close ( input [ 0 ] )	168:2:4356:4372	4935241	2	True				
ANR	4935497	CallExpression	close ( input [ 0 ] )		4935241	0					
ANR	4935498	Callee	close		4935241	0					
ANR	4935499	Identifier	close		4935241	0					
ANR	4935500	ArgumentList	input [ 0 ]		4935241	1					
ANR	4935501	Argument	input [ 0 ]		4935241	0					
ANR	4935502	ArrayIndexing	input [ 0 ]		4935241	0					
ANR	4935503	Identifier	input		4935241	0					
ANR	4935504	PrimaryExpression	0		4935241	1					
ANR	4935505	ExpressionStatement	"r_cons_break_push ( NULL , NULL )"	169:2:4376:4406	4935241	3	True				
ANR	4935506	CallExpression	"r_cons_break_push ( NULL , NULL )"		4935241	0					
ANR	4935507	Callee	r_cons_break_push		4935241	0					
ANR	4935508	Identifier	r_cons_break_push		4935241	0					
ANR	4935509	ArgumentList	NULL		4935241	1					
ANR	4935510	Argument	NULL		4935241	0					
ANR	4935511	Identifier	NULL		4935241	0					
ANR	4935512	Argument	NULL		4935241	1					
ANR	4935513	Identifier	NULL		4935241	0					
ANR	4935514	ForStatement	for ( ; ; )		4935241	4					
ANR	4935515	CompoundStatement		54:3:1072:1105	4935241	0					
ANR	4935516	IfStatement	if ( r_cons_is_breaked ( ) )		4935241	0					
ANR	4935517	Condition	r_cons_is_breaked ( )	171:7:4428:4447	4935241	0	True				
ANR	4935518	CallExpression	r_cons_is_breaked ( )		4935241	0					
ANR	4935519	Callee	r_cons_is_breaked		4935241	0					
ANR	4935520	Identifier	r_cons_is_breaked		4935241	0					
ANR	4935521	ArgumentList			4935241	1					
ANR	4935522	CompoundStatement		50:29:1017:1017	4935241	1					
ANR	4935523	BreakStatement	break ;	172:4:4456:4461	4935241	0	True				
ANR	4935524	ExpressionStatement	"memset ( buf , 0 , sizeof ( buf ) )"	174:3:4471:4500	4935241	1	True				
ANR	4935525	CallExpression	"memset ( buf , 0 , sizeof ( buf ) )"		4935241	0					
ANR	4935526	Callee	memset		4935241	0					
ANR	4935527	Identifier	memset		4935241	0					
ANR	4935528	ArgumentList	buf		4935241	1					
ANR	4935529	Argument	buf		4935241	0					
ANR	4935530	Identifier	buf		4935241	0					
ANR	4935531	Argument	0		4935241	1					
ANR	4935532	PrimaryExpression	0		4935241	0					
ANR	4935533	Argument	sizeof ( buf )		4935241	2					
ANR	4935534	SizeofExpression	sizeof ( buf )		4935241	0					
ANR	4935535	Sizeof	sizeof		4935241	0					
ANR	4935536	SizeofOperand	buf		4935241	1					
ANR	4935537	IdentifierDeclStatement	void * bed = r_cons_sleep_begin ( ) ;	175:3:4505:4538	4935241	2	True				
ANR	4935538	IdentifierDecl	* bed = r_cons_sleep_begin ( )		4935241	0					
ANR	4935539	IdentifierDeclType	void *		4935241	0					
ANR	4935540	Identifier	bed		4935241	1					
ANR	4935541	AssignmentExpression	* bed = r_cons_sleep_begin ( )		4935241	2		=			
ANR	4935542	Identifier	bed		4935241	0					
ANR	4935543	CallExpression	r_cons_sleep_begin ( )		4935241	1					
ANR	4935544	Callee	r_cons_sleep_begin		4935241	0					
ANR	4935545	Identifier	r_cons_sleep_begin		4935241	0					
ANR	4935546	ArgumentList			4935241	1					
ANR	4935547	ExpressionStatement	"ret = read ( output [ 0 ] , buf , sizeof ( buf ) - 1 )"	176:3:4543:4588	4935241	3	True				
ANR	4935548	AssignmentExpression	"ret = read ( output [ 0 ] , buf , sizeof ( buf ) - 1 )"		4935241	0		=			
ANR	4935549	Identifier	ret		4935241	0					
ANR	4935550	CallExpression	"read ( output [ 0 ] , buf , sizeof ( buf ) - 1 )"		4935241	1					
ANR	4935551	Callee	read		4935241	0					
ANR	4935552	Identifier	read		4935241	0					
ANR	4935553	ArgumentList	output [ 0 ]		4935241	1					
ANR	4935554	Argument	output [ 0 ]		4935241	0					
ANR	4935555	ArrayIndexing	output [ 0 ]		4935241	0					
ANR	4935556	Identifier	output		4935241	0					
ANR	4935557	PrimaryExpression	0		4935241	1					
ANR	4935558	Argument	buf		4935241	1					
ANR	4935559	Identifier	buf		4935241	0					
ANR	4935560	Argument	sizeof ( buf ) - 1		4935241	2					
ANR	4935561	AdditiveExpression	sizeof ( buf ) - 1		4935241	0		-			
ANR	4935562	SizeofExpression	sizeof ( buf )		4935241	0					
ANR	4935563	Sizeof	sizeof		4935241	0					
ANR	4935564	SizeofOperand	buf		4935241	1					
ANR	4935565	PrimaryExpression	1		4935241	1					
ANR	4935566	ExpressionStatement	r_cons_sleep_end ( bed )	177:3:4593:4615	4935241	4	True				
ANR	4935567	CallExpression	r_cons_sleep_end ( bed )		4935241	0					
ANR	4935568	Callee	r_cons_sleep_end		4935241	0					
ANR	4935569	Identifier	r_cons_sleep_end		4935241	0					
ANR	4935570	ArgumentList	bed		4935241	1					
ANR	4935571	Argument	bed		4935241	0					
ANR	4935572	Identifier	bed		4935241	0					
ANR	4935573	IfStatement	if ( ret < 1 )		4935241	5					
ANR	4935574	Condition	ret < 1	178:7:4624:4630	4935241	0	True				
ANR	4935575	RelationalExpression	ret < 1		4935241	0		<			
ANR	4935576	Identifier	ret		4935241	0					
ANR	4935577	PrimaryExpression	1		4935241	1					
ANR	4935578	CompoundStatement		57:16:1200:1200	4935241	1					
ANR	4935579	BreakStatement	break ;	179:4:4639:4644	4935241	0	True				
ANR	4935580	IfStatement	if ( ! buf [ 0 ] )		4935241	6					
ANR	4935581	Condition	! buf [ 0 ]	181:7:4658:4664	4935241	0	True				
ANR	4935582	UnaryOperationExpression	! buf [ 0 ]		4935241	0					
ANR	4935583	UnaryOperator	!		4935241	0					
ANR	4935584	ArrayIndexing	buf [ 0 ]		4935241	1					
ANR	4935585	Identifier	buf		4935241	0					
ANR	4935586	PrimaryExpression	0		4935241	1					
ANR	4935587	CompoundStatement		60:16:1234:1234	4935241	1					
ANR	4935588	ContinueStatement	continue ;	182:4:4673:4681	4935241	0	True				
ANR	4935589	ExpressionStatement	buf [ sizeof ( buf ) - 1 ] = 0	184:3:4691:4716	4935241	7	True				
ANR	4935590	AssignmentExpression	buf [ sizeof ( buf ) - 1 ] = 0		4935241	0		=			
ANR	4935591	ArrayIndexing	buf [ sizeof ( buf ) - 1 ]		4935241	0					
ANR	4935592	Identifier	buf		4935241	0					
ANR	4935593	AdditiveExpression	sizeof ( buf ) - 1		4935241	1		-			
ANR	4935594	SizeofExpression	sizeof ( buf )		4935241	0					
ANR	4935595	Sizeof	sizeof		4935241	0					
ANR	4935596	SizeofOperand	buf		4935241	1					
ANR	4935597	PrimaryExpression	1		4935241	1					
ANR	4935598	PrimaryExpression	0		4935241	1					
ANR	4935599	ExpressionStatement	"res = lang -> cmd_str ( ( RCore * ) lang -> user , buf )"	185:3:4721:4766	4935241	8	True				
ANR	4935600	AssignmentExpression	"res = lang -> cmd_str ( ( RCore * ) lang -> user , buf )"		4935241	0		=			
ANR	4935601	Identifier	res		4935241	0					
ANR	4935602	CallExpression	"lang -> cmd_str ( ( RCore * ) lang -> user , buf )"		4935241	1					
ANR	4935603	Callee	lang -> cmd_str		4935241	0					
ANR	4935604	PtrMemberAccess	lang -> cmd_str		4935241	0					
ANR	4935605	Identifier	lang		4935241	0					
ANR	4935606	Identifier	cmd_str		4935241	1					
ANR	4935607	ArgumentList	( RCore * ) lang -> user		4935241	1					
ANR	4935608	Argument	( RCore * ) lang -> user		4935241	0					
ANR	4935609	CastExpression	( RCore * ) lang -> user		4935241	0					
ANR	4935610	CastTarget	RCore *		4935241	0					
ANR	4935611	PtrMemberAccess	lang -> user		4935241	1					
ANR	4935612	Identifier	lang		4935241	0					
ANR	4935613	Identifier	user		4935241	1					
ANR	4935614	Argument	buf		4935241	1					
ANR	4935615	Identifier	buf		4935241	0					
ANR	4935616	IfStatement	if ( res )		4935241	9					
ANR	4935617	Condition	res	187:7:4811:4813	4935241	0	True				
ANR	4935618	Identifier	res		4935241	0					
ANR	4935619	CompoundStatement		66:12:1383:1383	4935241	1					
ANR	4935620	ExpressionStatement	"write ( input [ 1 ] , res , strlen ( res ) + 1 )"	188:4:4822:4861	4935241	0	True				
ANR	4935621	CallExpression	"write ( input [ 1 ] , res , strlen ( res ) + 1 )"		4935241	0					
ANR	4935622	Callee	write		4935241	0					
ANR	4935623	Identifier	write		4935241	0					
ANR	4935624	ArgumentList	input [ 1 ]		4935241	1					
ANR	4935625	Argument	input [ 1 ]		4935241	0					
ANR	4935626	ArrayIndexing	input [ 1 ]		4935241	0					
ANR	4935627	Identifier	input		4935241	0					
ANR	4935628	PrimaryExpression	1		4935241	1					
ANR	4935629	Argument	res		4935241	1					
ANR	4935630	Identifier	res		4935241	0					
ANR	4935631	Argument	strlen ( res ) + 1		4935241	2					
ANR	4935632	AdditiveExpression	strlen ( res ) + 1		4935241	0		+			
ANR	4935633	CallExpression	strlen ( res )		4935241	0					
ANR	4935634	Callee	strlen		4935241	0					
ANR	4935635	Identifier	strlen		4935241	0					
ANR	4935636	ArgumentList	res		4935241	1					
ANR	4935637	Argument	res		4935241	0					
ANR	4935638	Identifier	res		4935241	0					
ANR	4935639	PrimaryExpression	1		4935241	1					
ANR	4935640	ExpressionStatement	free ( res )	189:4:4867:4877	4935241	1	True				
ANR	4935641	CallExpression	free ( res )		4935241	0					
ANR	4935642	Callee	free		4935241	0					
ANR	4935643	Identifier	free		4935241	0					
ANR	4935644	ArgumentList	res		4935241	1					
ANR	4935645	Argument	res		4935241	0					
ANR	4935646	Identifier	res		4935241	0					
ANR	4935647	ElseStatement	else		4935241	0					
ANR	4935648	CompoundStatement		69:10:1456:1456	4935241	0					
ANR	4935649	ExpressionStatement	"eprintf ( ""r_lang_pipe: NULL reply for (%s)\\n"" , buf )"	191:4:4895:4946	4935241	0	True				
ANR	4935650	CallExpression	"eprintf ( ""r_lang_pipe: NULL reply for (%s)\\n"" , buf )"		4935241	0					
ANR	4935651	Callee	eprintf		4935241	0					
ANR	4935652	Identifier	eprintf		4935241	0					
ANR	4935653	ArgumentList	"""r_lang_pipe: NULL reply for (%s)\\n"""		4935241	1					
ANR	4935654	Argument	"""r_lang_pipe: NULL reply for (%s)\\n"""		4935241	0					
ANR	4935655	PrimaryExpression	"""r_lang_pipe: NULL reply for (%s)\\n"""		4935241	0					
ANR	4935656	Argument	buf		4935241	1					
ANR	4935657	Identifier	buf		4935241	0					
ANR	4935658	ExpressionStatement	"write ( input [ 1 ] , """" , 1 )"	192:4:4952:4975	4935241	1	True				
ANR	4935659	CallExpression	"write ( input [ 1 ] , """" , 1 )"		4935241	0					
ANR	4935660	Callee	write		4935241	0					
ANR	4935661	Identifier	write		4935241	0					
ANR	4935662	ArgumentList	input [ 1 ]		4935241	1					
ANR	4935663	Argument	input [ 1 ]		4935241	0					
ANR	4935664	ArrayIndexing	input [ 1 ]		4935241	0					
ANR	4935665	Identifier	input		4935241	0					
ANR	4935666	PrimaryExpression	1		4935241	1					
ANR	4935667	Argument	""""""		4935241	1					
ANR	4935668	PrimaryExpression	""""""		4935241	0					
ANR	4935669	Argument	1		4935241	2					
ANR	4935670	PrimaryExpression	1		4935241	0					
ANR	4935671	ExpressionStatement	r_cons_break_pop ( )	195:2:5001:5020	4935241	5	True				
ANR	4935672	CallExpression	r_cons_break_pop ( )		4935241	0					
ANR	4935673	Callee	r_cons_break_pop		4935241	0					
ANR	4935674	Identifier	r_cons_break_pop		4935241	0					
ANR	4935675	ArgumentList			4935241	1					
ANR	4935676	IfStatement	if ( safe_in != - 1 )		4935241	6					
ANR	4935677	Condition	safe_in != - 1	197:6:5069:5081	4935241	0	True				
ANR	4935678	EqualityExpression	safe_in != - 1		4935241	0		!=			
ANR	4935679	Identifier	safe_in		4935241	0					
ANR	4935680	UnaryOperationExpression	- 1		4935241	1					
ANR	4935681	UnaryOperator	-		4935241	0					
ANR	4935682	PrimaryExpression	1		4935241	1					
ANR	4935683	CompoundStatement		76:21:1651:1651	4935241	1					
ANR	4935684	ExpressionStatement	close ( safe_in )	198:3:5089:5104	4935241	0	True				
ANR	4935685	CallExpression	close ( safe_in )		4935241	0					
ANR	4935686	Callee	close		4935241	0					
ANR	4935687	Identifier	close		4935241	0					
ANR	4935688	ArgumentList	safe_in		4935241	1					
ANR	4935689	Argument	safe_in		4935241	0					
ANR	4935690	Identifier	safe_in		4935241	0					
ANR	4935691	ExpressionStatement	"safe_in = open ( ttyname ( 0 ) , O_RDONLY )"	200:2:5112:5149	4935241	7	True				
ANR	4935692	AssignmentExpression	"safe_in = open ( ttyname ( 0 ) , O_RDONLY )"		4935241	0		=			
ANR	4935693	Identifier	safe_in		4935241	0					
ANR	4935694	CallExpression	"open ( ttyname ( 0 ) , O_RDONLY )"		4935241	1					
ANR	4935695	Callee	open		4935241	0					
ANR	4935696	Identifier	open		4935241	0					
ANR	4935697	ArgumentList	ttyname ( 0 )		4935241	1					
ANR	4935698	Argument	ttyname ( 0 )		4935241	0					
ANR	4935699	CallExpression	ttyname ( 0 )		4935241	0					
ANR	4935700	Callee	ttyname		4935241	0					
ANR	4935701	Identifier	ttyname		4935241	0					
ANR	4935702	ArgumentList	0		4935241	1					
ANR	4935703	Argument	0		4935241	0					
ANR	4935704	PrimaryExpression	0		4935241	0					
ANR	4935705	Argument	O_RDONLY		4935241	1					
ANR	4935706	Identifier	O_RDONLY		4935241	0					
ANR	4935707	IfStatement	if ( safe_in != - 1 )		4935241	8					
ANR	4935708	Condition	safe_in != - 1	201:6:5157:5169	4935241	0	True				
ANR	4935709	EqualityExpression	safe_in != - 1		4935241	0		!=			
ANR	4935710	Identifier	safe_in		4935241	0					
ANR	4935711	UnaryOperationExpression	- 1		4935241	1					
ANR	4935712	UnaryOperator	-		4935241	0					
ANR	4935713	PrimaryExpression	1		4935241	1					
ANR	4935714	CompoundStatement		80:21:1739:1739	4935241	1					
ANR	4935715	ExpressionStatement	"dup2 ( safe_in , 0 )"	202:3:5177:5194	4935241	0	True				
ANR	4935716	CallExpression	"dup2 ( safe_in , 0 )"		4935241	0					
ANR	4935717	Callee	dup2		4935241	0					
ANR	4935718	Identifier	dup2		4935241	0					
ANR	4935719	ArgumentList	safe_in		4935241	1					
ANR	4935720	Argument	safe_in		4935241	0					
ANR	4935721	Identifier	safe_in		4935241	0					
ANR	4935722	Argument	0		4935241	1					
ANR	4935723	PrimaryExpression	0		4935241	0					
ANR	4935724	ElseStatement	else		4935241	0					
ANR	4935725	CompoundStatement		82:9:1772:1772	4935241	0					
ANR	4935726	ExpressionStatement	"eprintf ( ""Cannot open ttyname(0) %s\\n"" , ttyname ( 0 ) )"	204:3:5210:5261	4935241	0	True				
ANR	4935727	CallExpression	"eprintf ( ""Cannot open ttyname(0) %s\\n"" , ttyname ( 0 ) )"		4935241	0					
ANR	4935728	Callee	eprintf		4935241	0					
ANR	4935729	Identifier	eprintf		4935241	0					
ANR	4935730	ArgumentList	"""Cannot open ttyname(0) %s\\n"""		4935241	1					
ANR	4935731	Argument	"""Cannot open ttyname(0) %s\\n"""		4935241	0					
ANR	4935732	PrimaryExpression	"""Cannot open ttyname(0) %s\\n"""		4935241	0					
ANR	4935733	Argument	ttyname ( 0 )		4935241	1					
ANR	4935734	CallExpression	ttyname ( 0 )		4935241	0					
ANR	4935735	Callee	ttyname		4935241	0					
ANR	4935736	Identifier	ttyname		4935241	0					
ANR	4935737	ArgumentList	0		4935241	1					
ANR	4935738	Argument	0		4935241	0					
ANR	4935739	PrimaryExpression	0		4935241	0					
ANR	4935740	ExpressionStatement	close ( input [ 0 ] )	208:1:5272:5288	4935241	10	True				
ANR	4935741	CallExpression	close ( input [ 0 ] )		4935241	0					
ANR	4935742	Callee	close		4935241	0					
ANR	4935743	Identifier	close		4935241	0					
ANR	4935744	ArgumentList	input [ 0 ]		4935241	1					
ANR	4935745	Argument	input [ 0 ]		4935241	0					
ANR	4935746	ArrayIndexing	input [ 0 ]		4935241	0					
ANR	4935747	Identifier	input		4935241	0					
ANR	4935748	PrimaryExpression	0		4935241	1					
ANR	4935749	ExpressionStatement	close ( input [ 1 ] )	209:1:5291:5307	4935241	11	True				
ANR	4935750	CallExpression	close ( input [ 1 ] )		4935241	0					
ANR	4935751	Callee	close		4935241	0					
ANR	4935752	Identifier	close		4935241	0					
ANR	4935753	ArgumentList	input [ 1 ]		4935241	1					
ANR	4935754	Argument	input [ 1 ]		4935241	0					
ANR	4935755	ArrayIndexing	input [ 1 ]		4935241	0					
ANR	4935756	Identifier	input		4935241	0					
ANR	4935757	PrimaryExpression	1		4935241	1					
ANR	4935758	ExpressionStatement	close ( output [ 0 ] )	210:1:5310:5327	4935241	12	True				
ANR	4935759	CallExpression	close ( output [ 0 ] )		4935241	0					
ANR	4935760	Callee	close		4935241	0					
ANR	4935761	Identifier	close		4935241	0					
ANR	4935762	ArgumentList	output [ 0 ]		4935241	1					
ANR	4935763	Argument	output [ 0 ]		4935241	0					
ANR	4935764	ArrayIndexing	output [ 0 ]		4935241	0					
ANR	4935765	Identifier	output		4935241	0					
ANR	4935766	PrimaryExpression	0		4935241	1					
ANR	4935767	ExpressionStatement	close ( output [ 1 ] )	211:1:5330:5347	4935241	13	True				
ANR	4935768	CallExpression	close ( output [ 1 ] )		4935241	0					
ANR	4935769	Callee	close		4935241	0					
ANR	4935770	Identifier	close		4935241	0					
ANR	4935771	ArgumentList	output [ 1 ]		4935241	1					
ANR	4935772	Argument	output [ 1 ]		4935241	0					
ANR	4935773	ArrayIndexing	output [ 1 ]		4935241	0					
ANR	4935774	Identifier	output		4935241	0					
ANR	4935775	PrimaryExpression	1		4935241	1					
ANR	4935776	IfStatement	if ( safe_in != - 1 )		4935241	14					
ANR	4935777	Condition	safe_in != - 1	212:5:5354:5366	4935241	0	True				
ANR	4935778	EqualityExpression	safe_in != - 1		4935241	0		!=			
ANR	4935779	Identifier	safe_in		4935241	0					
ANR	4935780	UnaryOperationExpression	- 1		4935241	1					
ANR	4935781	UnaryOperator	-		4935241	0					
ANR	4935782	PrimaryExpression	1		4935241	1					
ANR	4935783	CompoundStatement		91:20:1936:1936	4935241	1					
ANR	4935784	ExpressionStatement	close ( safe_in )	213:2:5373:5388	4935241	0	True				
ANR	4935785	CallExpression	close ( safe_in )		4935241	0					
ANR	4935786	Callee	close		4935241	0					
ANR	4935787	Identifier	close		4935241	0					
ANR	4935788	ArgumentList	safe_in		4935241	1					
ANR	4935789	Argument	safe_in		4935241	0					
ANR	4935790	Identifier	safe_in		4935241	0					
ANR	4935791	ExpressionStatement	"waitpid ( child , NULL , WNOHANG )"	215:1:5394:5424	4935241	15	True				
ANR	4935792	CallExpression	"waitpid ( child , NULL , WNOHANG )"		4935241	0					
ANR	4935793	Callee	waitpid		4935241	0					
ANR	4935794	Identifier	waitpid		4935241	0					
ANR	4935795	ArgumentList	child		4935241	1					
ANR	4935796	Argument	child		4935241	0					
ANR	4935797	Identifier	child		4935241	0					
ANR	4935798	Argument	NULL		4935241	1					
ANR	4935799	Identifier	NULL		4935241	0					
ANR	4935800	Argument	WNOHANG		4935241	2					
ANR	4935801	Identifier	WNOHANG		4935241	0					
ANR	4935802	ReturnStatement	return true ;	216:1:5427:5438	4935241	16	True				
ANR	4935803	Identifier	true		4935241	0					
ANR	4935804	ReturnType	static int		4935241	1					
ANR	4935805	Identifier	lang_pipe_run		4935241	2					
ANR	4935806	ParameterList	"RLang * lang , const char * code , int len"		4935241	3					
ANR	4935807	Parameter	RLang * lang	122:25:3392:3402	4935241	0	True				
ANR	4935808	ParameterType	RLang *		4935241	0					
ANR	4935809	Identifier	lang		4935241	1					
ANR	4935810	Parameter	const char * code	122:38:3405:3420	4935241	1	True				
ANR	4935811	ParameterType	const char *		4935241	0					
ANR	4935812	Identifier	code		4935241	1					
ANR	4935813	Parameter	int len	122:56:3423:3429	4935241	2	True				
ANR	4935814	ParameterType	int		4935241	0					
ANR	4935815	Identifier	len		4935241	1					
ANR	4935816	CFGEntryNode	ENTRY		4935241		True				
ANR	4935817	CFGExitNode	EXIT		4935241		True				
ANR	4935818	InfiniteForNode	true		4935241		True				
ANR	4935819	Symbol	bed		4935241						
ANR	4935820	Symbol	code		4935241						
ANR	4935821	Symbol	stdout		4935241						
ANR	4935822	Symbol	* lang		4935241						
ANR	4935823	Symbol	* input		4935241						
ANR	4935824	Symbol	output		4935241						
ANR	4935825	Symbol	strlen		4935241						
ANR	4935826	Symbol	r_cons_is_breaked		4935241						
ANR	4935827	Symbol	len		4935241						
ANR	4935828	Symbol	WNOHANG		4935241						
ANR	4935829	Symbol	pipe		4935241						
ANR	4935830	Symbol	r_sys_fork		4935241						
ANR	4935831	Symbol	lang		4935241						
ANR	4935832	Symbol	ret		4935241						
ANR	4935833	Symbol	lang -> cmd_str		4935241						
ANR	4935834	Symbol	res		4935241						
ANR	4935835	Symbol	* buf		4935241						
ANR	4935836	Symbol	NULL		4935241						
ANR	4935837	Symbol	read		4935241						
ANR	4935838	Symbol	ttyname		4935241						
ANR	4935839	Symbol	safe_in		4935241						
ANR	4935840	Symbol	false		4935241						
ANR	4935841	Symbol	stderr		4935241						
ANR	4935842	Symbol	input		4935241						
ANR	4935843	Symbol	buf		4935241						
ANR	4935844	Symbol	O_RDONLY		4935241						
ANR	4935845	Symbol	true		4935241						
ANR	4935846	Symbol	r_cons_sleep_begin		4935241						
ANR	4935847	Symbol	lang -> user		4935241						
ANR	4935848	Symbol	dup		4935241						
ANR	4935849	Symbol	* output		4935241						
ANR	4935850	Symbol	open		4935241						
ANR	4935851	Symbol	child		4935241						
ANR	4935852	DeclStmt									
ANR	4935853	Decl							RLangPlugin	RLangPlugin	r_lang_plugin_pipe
