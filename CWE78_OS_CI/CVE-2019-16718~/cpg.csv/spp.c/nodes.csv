command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	6237139	File	data/converged/CVE-2019-16718~_radare2/spp.c								
ANR	6237140	Function	spp_run	7:0:115:1057							
ANR	6237141	FunctionDef	"spp_run (char * buf , Output * out)"		6237140	0					
ANR	6237142	CompoundStatement		7:42:157:1057	6237140	0					
ANR	6237143	IdentifierDeclStatement	"int i , ret = 0 ;"	8:1:160:174	6237140	0	True				
ANR	6237144	IdentifierDecl	i		6237140	0					
ANR	6237145	IdentifierDeclType	int		6237140	0					
ANR	6237146	Identifier	i		6237140	1					
ANR	6237147	IdentifierDecl	ret = 0		6237140	1					
ANR	6237148	IdentifierDeclType	int		6237140	0					
ANR	6237149	Identifier	ret		6237140	1					
ANR	6237150	AssignmentExpression	ret = 0		6237140	2		=			
ANR	6237151	Identifier	ret		6237140	0					
ANR	6237152	PrimaryExpression	0		6237140	1					
ANR	6237153	IdentifierDeclStatement	char * tok ;	9:1:177:186	6237140	1	True				
ANR	6237154	IdentifierDecl	* tok		6237140	0					
ANR	6237155	IdentifierDeclType	char *		6237140	0					
ANR	6237156	Identifier	tok		6237140	1					
ANR	6237157	IdentifierDeclStatement	"D fprintf ( stderr , ""SPP_RUN(%s)\\n"" , buf ) ;"	11:1:190:230	6237140	2	True				
ANR	6237158	IdentifierDecl	"fprintf ( stderr , ""SPP_RUN(%s)\\n"" , buf )"		6237140	0					
ANR	6237159	IdentifierDeclType	D		6237140	0					
ANR	6237160	Identifier	fprintf		6237140	1					
ANR	6237161	Expression	"stderr , ""SPP_RUN(%s)\\n"" , buf"		6237140	2					
ANR	6237162	Identifier	stderr		6237140	0					
ANR	6237163	Expression	"""SPP_RUN(%s)\\n"" , buf"		6237140	1					
ANR	6237164	PrimaryExpression	"""SPP_RUN(%s)\\n"""		6237140	0					
ANR	6237165	Identifier	buf		6237140	1					
ANR	6237166	IfStatement	if ( proc -> chop )		6237140	3					
ANR	6237167	Condition	proc -> chop	12:5:237:246	6237140	0	True				
ANR	6237168	PtrMemberAccess	proc -> chop		6237140	0					
ANR	6237169	Identifier	proc		6237140	0					
ANR	6237170	Identifier	chop		6237140	1					
ANR	6237171	CompoundStatement		8:2:129:154	6237140	1					
ANR	6237172	ForStatement	for ( ; IS_SPACE ( * buf ) ; buf ++ )		6237140	0					
ANR	6237173	Condition	IS_SPACE ( * buf )	13:9:260:274	6237140	0	True				
ANR	6237174	CallExpression	IS_SPACE ( * buf )		6237140	0					
ANR	6237175	Callee	IS_SPACE		6237140	0					
ANR	6237176	Identifier	IS_SPACE		6237140	0					
ANR	6237177	ArgumentList	* buf		6237140	1					
ANR	6237178	Argument	* buf		6237140	0					
ANR	6237179	UnaryOperationExpression	* buf		6237140	0					
ANR	6237180	UnaryOperator	*		6237140	0					
ANR	6237181	Identifier	buf		6237140	1					
ANR	6237182	PostIncDecOperationExpression	buf ++	13:26:277:281	6237140	1	True				
ANR	6237183	Identifier	buf		6237140	0					
ANR	6237184	IncDec	++		6237140	1					
ANR	6237185	ExpressionStatement		13:32:283:283	6237140	2	True				
ANR	6237186	IdentifierDeclStatement	int buflen = strlen ( buf ) ;	14:2:287:312	6237140	1	True				
ANR	6237187	IdentifierDecl	buflen = strlen ( buf )		6237140	0					
ANR	6237188	IdentifierDeclType	int		6237140	0					
ANR	6237189	Identifier	buflen		6237140	1					
ANR	6237190	AssignmentExpression	buflen = strlen ( buf )		6237140	2		=			
ANR	6237191	Identifier	buflen		6237140	0					
ANR	6237192	CallExpression	strlen ( buf )		6237140	1					
ANR	6237193	Callee	strlen		6237140	0					
ANR	6237194	Identifier	strlen		6237140	0					
ANR	6237195	ArgumentList	buf		6237140	1					
ANR	6237196	Argument	buf		6237140	0					
ANR	6237197	Identifier	buf		6237140	0					
ANR	6237198	ForStatement	for ( tok = buf + ( buflen ? buflen - 1 : 0 ) ; IS_SPACE ( * tok ) ; tok -- )		6237140	2					
ANR	6237199	ForInit	tok = buf + ( buflen ? buflen - 1 : 0 ) ;	15:7:321:356	6237140	0	True				
ANR	6237200	AssignmentExpression	tok = buf + ( buflen ? buflen - 1 : 0 )		6237140	0		=			
ANR	6237201	Identifier	tok		6237140	0					
ANR	6237202	AdditiveExpression	buf + ( buflen ? buflen - 1 : 0 )		6237140	1		+			
ANR	6237203	Identifier	buf		6237140	0					
ANR	6237204	ConditionalExpression	buflen ? buflen - 1 : 0		6237140	1					
ANR	6237205	Condition	buflen		6237140	0					
ANR	6237206	Identifier	buflen		6237140	0					
ANR	6237207	AdditiveExpression	buflen - 1		6237140	1		-			
ANR	6237208	Identifier	buflen		6237140	0					
ANR	6237209	PrimaryExpression	1		6237140	1					
ANR	6237210	PrimaryExpression	0		6237140	2					
ANR	6237211	Condition	IS_SPACE ( * tok )	15:44:358:372	6237140	1	True				
ANR	6237212	CallExpression	IS_SPACE ( * tok )		6237140	0					
ANR	6237213	Callee	IS_SPACE		6237140	0					
ANR	6237214	Identifier	IS_SPACE		6237140	0					
ANR	6237215	ArgumentList	* tok		6237140	1					
ANR	6237216	Argument	* tok		6237140	0					
ANR	6237217	UnaryOperationExpression	* tok		6237140	0					
ANR	6237218	UnaryOperator	*		6237140	0					
ANR	6237219	Identifier	tok		6237140	1					
ANR	6237220	PostIncDecOperationExpression	tok --	15:61:375:379	6237140	2	True				
ANR	6237221	Identifier	tok		6237140	0					
ANR	6237222	IncDec	--		6237140	1					
ANR	6237223	CompoundStatement		9:68:224:224	6237140	3					
ANR	6237224	ExpressionStatement	* tok = '\\0'	16:3:387:398	6237140	0	True				
ANR	6237225	AssignmentExpression	* tok = '\\0'		6237140	0		=			
ANR	6237226	UnaryOperationExpression	* tok		6237140	0					
ANR	6237227	UnaryOperator	*		6237140	0					
ANR	6237228	Identifier	tok		6237140	1					
ANR	6237229	PrimaryExpression	'\\0'		6237140	1					
ANR	6237230	IfStatement	if ( proc -> token )		6237140	4					
ANR	6237231	Condition	proc -> token	20:5:413:423	6237140	0	True				
ANR	6237232	PtrMemberAccess	proc -> token		6237140	0					
ANR	6237233	Identifier	proc		6237140	0					
ANR	6237234	Identifier	token		6237140	1					
ANR	6237235	CompoundStatement		14:18:268:268	6237140	1					
ANR	6237236	ExpressionStatement	"tok = strstr ( buf , proc -> token )"	21:2:430:461	6237140	0	True				
ANR	6237237	AssignmentExpression	"tok = strstr ( buf , proc -> token )"		6237140	0		=			
ANR	6237238	Identifier	tok		6237140	0					
ANR	6237239	CallExpression	"strstr ( buf , proc -> token )"		6237140	1					
ANR	6237240	Callee	strstr		6237140	0					
ANR	6237241	Identifier	strstr		6237140	0					
ANR	6237242	ArgumentList	buf		6237140	1					
ANR	6237243	Argument	buf		6237140	0					
ANR	6237244	Identifier	buf		6237140	0					
ANR	6237245	Argument	proc -> token		6237140	1					
ANR	6237246	PtrMemberAccess	proc -> token		6237140	0					
ANR	6237247	Identifier	proc		6237140	0					
ANR	6237248	Identifier	token		6237140	1					
ANR	6237249	IfStatement	if ( tok )		6237140	1					
ANR	6237250	Condition	tok	22:6:469:471	6237140	0	True				
ANR	6237251	Identifier	tok		6237140	0					
ANR	6237252	CompoundStatement		16:11:316:316	6237140	1					
ANR	6237253	ExpressionStatement	* tok = '\\0'	23:3:479:490	6237140	0	True				
ANR	6237254	AssignmentExpression	* tok = '\\0'		6237140	0		=			
ANR	6237255	UnaryOperationExpression	* tok		6237140	0					
ANR	6237256	UnaryOperator	*		6237140	0					
ANR	6237257	Identifier	tok		6237140	1					
ANR	6237258	PrimaryExpression	'\\0'		6237140	1					
ANR	6237259	ExpressionStatement	tok = tok + 1	24:3:495:508	6237140	1	True				
ANR	6237260	AssignmentExpression	tok = tok + 1		6237140	0		=			
ANR	6237261	Identifier	tok		6237140	0					
ANR	6237262	AdditiveExpression	tok + 1		6237140	1		+			
ANR	6237263	Identifier	tok		6237140	0					
ANR	6237264	PrimaryExpression	1		6237140	1					
ANR	6237265	ElseStatement	else		6237140	0					
ANR	6237266	CompoundStatement		19:9:361:361	6237140	0					
ANR	6237267	ExpressionStatement	tok = buf	26:3:524:533	6237140	0	True				
ANR	6237268	AssignmentExpression	tok = buf		6237140	0		=			
ANR	6237269	Identifier	tok		6237140	0					
ANR	6237270	Identifier	buf		6237140	1					
ANR	6237271	ElseStatement	else		6237140	0					
ANR	6237272	CompoundStatement		22:8:389:389	6237140	0					
ANR	6237273	ExpressionStatement	tok = buf	29:2:551:560	6237140	0	True				
ANR	6237274	AssignmentExpression	tok = buf		6237140	0		=			
ANR	6237275	Identifier	tok		6237140	0					
ANR	6237276	Identifier	buf		6237140	1					
ANR	6237277	ForStatement	for ( i = 0 ; tags [ i ] . callback ; i ++ )		6237140	5					
ANR	6237278	ForInit	i = 0 ;	31:6:571:576	6237140	0	True				
ANR	6237279	AssignmentExpression	i = 0		6237140	0		=			
ANR	6237280	Identifier	i		6237140	0					
ANR	6237281	PrimaryExpression	0		6237140	1					
ANR	6237282	Condition	tags [ i ] . callback	31:13:578:593	6237140	1	True				
ANR	6237283	MemberAccess	tags [ i ] . callback		6237140	0					
ANR	6237284	ArrayIndexing	tags [ i ]		6237140	0					
ANR	6237285	Identifier	tags		6237140	0					
ANR	6237286	Identifier	i		6237140	1					
ANR	6237287	Identifier	callback		6237140	1					
ANR	6237288	PostIncDecOperationExpression	i ++	31:31:596:598	6237140	2	True				
ANR	6237289	Identifier	i		6237140	0					
ANR	6237290	IncDec	++		6237140	1					
ANR	6237291	CompoundStatement		26:2:447:485	6237140	3					
ANR	6237292	IdentifierDeclStatement	"D fprintf ( stderr , ""NAME=(%s)\\n"" , tok ) ;"	32:2:605:643	6237140	0	True				
ANR	6237293	IdentifierDecl	"fprintf ( stderr , ""NAME=(%s)\\n"" , tok )"		6237140	0					
ANR	6237294	IdentifierDeclType	D		6237140	0					
ANR	6237295	Identifier	fprintf		6237140	1					
ANR	6237296	Expression	"stderr , ""NAME=(%s)\\n"" , tok"		6237140	2					
ANR	6237297	Identifier	stderr		6237140	0					
ANR	6237298	Expression	"""NAME=(%s)\\n"" , tok"		6237140	1					
ANR	6237299	PrimaryExpression	"""NAME=(%s)\\n"""		6237140	0					
ANR	6237300	Identifier	tok		6237140	1					
ANR	6237301	IfStatement	"if ( ( ! tags [ i ] . name ) || ( ! strcmp ( buf , tags [ i ] . name ) ) )"		6237140	1					
ANR	6237302	Condition	"( ! tags [ i ] . name ) || ( ! strcmp ( buf , tags [ i ] . name ) )"	33:6:651:698	6237140	0	True				
ANR	6237303	OrExpression	"( ! tags [ i ] . name ) || ( ! strcmp ( buf , tags [ i ] . name ) )"		6237140	0		||			
ANR	6237304	UnaryOperationExpression	! tags [ i ] . name		6237140	0					
ANR	6237305	UnaryOperator	!		6237140	0					
ANR	6237306	MemberAccess	tags [ i ] . name		6237140	1					
ANR	6237307	ArrayIndexing	tags [ i ]		6237140	0					
ANR	6237308	Identifier	tags		6237140	0					
ANR	6237309	Identifier	i		6237140	1					
ANR	6237310	Identifier	name		6237140	1					
ANR	6237311	UnaryOperationExpression	"! strcmp ( buf , tags [ i ] . name )"		6237140	1					
ANR	6237312	UnaryOperator	!		6237140	0					
ANR	6237313	CallExpression	"strcmp ( buf , tags [ i ] . name )"		6237140	1					
ANR	6237314	Callee	strcmp		6237140	0					
ANR	6237315	Identifier	strcmp		6237140	0					
ANR	6237316	ArgumentList	buf		6237140	1					
ANR	6237317	Argument	buf		6237140	0					
ANR	6237318	Identifier	buf		6237140	0					
ANR	6237319	Argument	tags [ i ] . name		6237140	1					
ANR	6237320	MemberAccess	tags [ i ] . name		6237140	0					
ANR	6237321	ArrayIndexing	tags [ i ]		6237140	0					
ANR	6237322	Identifier	tags		6237140	0					
ANR	6237323	Identifier	i		6237140	1					
ANR	6237324	Identifier	name		6237140	1					
ANR	6237325	CompoundStatement		27:56:543:543	6237140	1					
ANR	6237326	IfStatement	if ( out -> fout )		6237140	0					
ANR	6237327	Condition	out -> fout	34:7:710:718	6237140	0	True				
ANR	6237328	PtrMemberAccess	out -> fout		6237140	0					
ANR	6237329	Identifier	out		6237140	0					
ANR	6237330	Identifier	fout		6237140	1					
ANR	6237331	CompoundStatement		28:18:563:563	6237140	1					
ANR	6237332	ExpressionStatement	fflush ( out -> fout )	35:4:727:745	6237140	0	True				
ANR	6237333	CallExpression	fflush ( out -> fout )		6237140	0					
ANR	6237334	Callee	fflush		6237140	0					
ANR	6237335	Identifier	fflush		6237140	0					
ANR	6237336	ArgumentList	out -> fout		6237140	1					
ANR	6237337	Argument	out -> fout		6237140	0					
ANR	6237338	PtrMemberAccess	out -> fout		6237140	0					
ANR	6237339	Identifier	out		6237140	0					
ANR	6237340	Identifier	fout		6237140	1					
ANR	6237341	ExpressionStatement	"ret = tags [ i ] . callback ( & proc -> state , out , tok )"	37:3:755:802	6237140	1	True				
ANR	6237342	AssignmentExpression	"ret = tags [ i ] . callback ( & proc -> state , out , tok )"		6237140	0		=			
ANR	6237343	Identifier	ret		6237140	0					
ANR	6237344	CallExpression	"tags [ i ] . callback ( & proc -> state , out , tok )"		6237140	1					
ANR	6237345	Callee	tags [ i ] . callback		6237140	0					
ANR	6237346	MemberAccess	tags [ i ] . callback		6237140	0					
ANR	6237347	ArrayIndexing	tags [ i ]		6237140	0					
ANR	6237348	Identifier	tags		6237140	0					
ANR	6237349	Identifier	i		6237140	1					
ANR	6237350	Identifier	callback		6237140	1					
ANR	6237351	ArgumentList	& proc -> state		6237140	1					
ANR	6237352	Argument	& proc -> state		6237140	0					
ANR	6237353	UnaryOperationExpression	& proc -> state		6237140	0					
ANR	6237354	UnaryOperator	&		6237140	0					
ANR	6237355	PtrMemberAccess	proc -> state		6237140	1					
ANR	6237356	Identifier	proc		6237140	0					
ANR	6237357	Identifier	state		6237140	1					
ANR	6237358	Argument	out		6237140	1					
ANR	6237359	Identifier	out		6237140	0					
ANR	6237360	Argument	tok		6237140	2					
ANR	6237361	Identifier	tok		6237140	0					
ANR	6237362	ExpressionStatement	proc -> state . ifl += ret	38:3:807:829	6237140	2	True				
ANR	6237363	AssignmentExpression	proc -> state . ifl += ret		6237140	0		+=			
ANR	6237364	MemberAccess	proc -> state . ifl		6237140	0					
ANR	6237365	PtrMemberAccess	proc -> state		6237140	0					
ANR	6237366	Identifier	proc		6237140	0					
ANR	6237367	Identifier	state		6237140	1					
ANR	6237368	Identifier	ifl		6237140	1					
ANR	6237369	Identifier	ret		6237140	1					
ANR	6237370	IfStatement	if ( ret == - 1 )		6237140	3					
ANR	6237371	Condition	ret == - 1	39:7:838:846	6237140	0	True				
ANR	6237372	EqualityExpression	ret == - 1		6237140	0		==			
ANR	6237373	Identifier	ret		6237140	0					
ANR	6237374	UnaryOperationExpression	- 1		6237140	1					
ANR	6237375	UnaryOperator	-		6237140	0					
ANR	6237376	PrimaryExpression	1		6237140	1					
ANR	6237377	CompoundStatement		33:18:691:691	6237140	1					
ANR	6237378	BreakStatement	break ;	40:4:855:860	6237140	0	True				
ANR	6237379	IfStatement	if ( ret )		6237140	4					
ANR	6237380	Condition	ret	42:7:874:876	6237140	0	True				
ANR	6237381	Identifier	ret		6237140	0					
ANR	6237382	CompoundStatement		36:12:721:721	6237140	1					
ANR	6237383	IfStatement	if ( proc -> state . ifl < 0 || proc -> state . ifl >= MAXIFL )		6237140	0					
ANR	6237384	Condition	proc -> state . ifl < 0 || proc -> state . ifl >= MAXIFL	43:8:889:936	6237140	0	True				
ANR	6237385	OrExpression	proc -> state . ifl < 0 || proc -> state . ifl >= MAXIFL		6237140	0		||			
ANR	6237386	RelationalExpression	proc -> state . ifl < 0		6237140	0		<			
ANR	6237387	MemberAccess	proc -> state . ifl		6237140	0					
ANR	6237388	PtrMemberAccess	proc -> state		6237140	0					
ANR	6237389	Identifier	proc		6237140	0					
ANR	6237390	Identifier	state		6237140	1					
ANR	6237391	Identifier	ifl		6237140	1					
ANR	6237392	PrimaryExpression	0		6237140	1					
ANR	6237393	RelationalExpression	proc -> state . ifl >= MAXIFL		6237140	1		>=			
ANR	6237394	MemberAccess	proc -> state . ifl		6237140	0					
ANR	6237395	PtrMemberAccess	proc -> state		6237140	0					
ANR	6237396	Identifier	proc		6237140	0					
ANR	6237397	Identifier	state		6237140	1					
ANR	6237398	Identifier	ifl		6237140	1					
ANR	6237399	Identifier	MAXIFL		6237140	1					
ANR	6237400	CompoundStatement		37:58:781:781	6237140	1					
ANR	6237401	ExpressionStatement	"fprintf ( stderr , ""Nested conditionals parsing error.\\n"" )"	44:5:946:1002	6237140	0	True				
ANR	6237402	CallExpression	"fprintf ( stderr , ""Nested conditionals parsing error.\\n"" )"		6237140	0					
ANR	6237403	Callee	fprintf		6237140	0					
ANR	6237404	Identifier	fprintf		6237140	0					
ANR	6237405	ArgumentList	stderr		6237140	1					
ANR	6237406	Argument	stderr		6237140	0					
ANR	6237407	Identifier	stderr		6237140	0					
ANR	6237408	Argument	"""Nested conditionals parsing error.\\n"""		6237140	1					
ANR	6237409	PrimaryExpression	"""Nested conditionals parsing error.\\n"""		6237140	0					
ANR	6237410	BreakStatement	break ;	45:5:1009:1014	6237140	1	True				
ANR	6237411	BreakStatement	break ;	48:3:1030:1035	6237140	5	True				
ANR	6237412	ReturnStatement	return ret ;	51:1:1045:1055	6237140	6	True				
ANR	6237413	Identifier	ret		6237140	0					
ANR	6237414	ReturnType	S_API int		6237140	1					
ANR	6237415	Identifier	spp_run		6237140	2					
ANR	6237416	ParameterList	"char * buf , Output * out"		6237140	3					
ANR	6237417	Parameter	char * buf	7:18:133:141	6237140	0	True				
ANR	6237418	ParameterType	char *		6237140	0					
ANR	6237419	Identifier	buf		6237140	1					
ANR	6237420	Parameter	Output * out	7:29:144:154	6237140	1	True				
ANR	6237421	ParameterType	Output *		6237140	0					
ANR	6237422	Identifier	out		6237140	1					
ANR	6237423	CFGEntryNode	ENTRY		6237140		True				
ANR	6237424	CFGExitNode	EXIT		6237140		True				
ANR	6237425	Symbol	proc -> token		6237140						
ANR	6237426	Symbol	out		6237140						
ANR	6237427	Symbol	tok		6237140						
ANR	6237428	Symbol	strlen		6237140						
ANR	6237429	Symbol	tags [ i ] . callback		6237140						
ANR	6237430	Symbol	buflen		6237140						
ANR	6237431	Symbol	ret		6237140						
ANR	6237432	Symbol	strcmp		6237140						
ANR	6237433	Symbol	proc		6237140						
ANR	6237434	Symbol	* buf		6237140						
ANR	6237435	Symbol	proc -> state		6237140						
ANR	6237436	Symbol	& proc -> state		6237140						
ANR	6237437	Symbol	proc -> state . ifl		6237140						
ANR	6237438	Symbol	i		6237140						
ANR	6237439	Symbol	MAXIFL		6237140						
ANR	6237440	Symbol	* tags		6237140						
ANR	6237441	Symbol	stderr		6237140						
ANR	6237442	Symbol	fprintf		6237140						
ANR	6237443	Symbol	* proc		6237140						
ANR	6237444	Symbol	tags		6237140						
ANR	6237445	Symbol	proc -> chop		6237140						
ANR	6237446	Symbol	buf		6237140						
ANR	6237447	Symbol	* i		6237140						
ANR	6237448	Symbol	strstr		6237140						
ANR	6237449	Symbol	tags [ i ] . name		6237140						
ANR	6237450	Symbol	* out		6237140						
ANR	6237451	Symbol	* tok		6237140						
ANR	6237452	Symbol	out -> fout		6237140						
ANR	6237453	Symbol	IS_SPACE		6237140						
ANR	6237454	Function	spp_run_str	54:0:1060:1313							
ANR	6237455	FunctionDef	"spp_run_str (char * buf , int * rv)"		6237454	0					
ANR	6237456	CompoundStatement		54:45:1105:1313	6237454	0					
ANR	6237457	IdentifierDeclStatement	char * b ;	55:1:1108:1115	6237454	0	True				
ANR	6237458	IdentifierDecl	* b		6237454	0					
ANR	6237459	IdentifierDeclType	char *		6237454	0					
ANR	6237460	Identifier	b		6237454	1					
ANR	6237461	IdentifierDeclStatement	Output tmp ;	56:1:1118:1128	6237454	1	True				
ANR	6237462	IdentifierDecl	tmp		6237454	0					
ANR	6237463	IdentifierDeclType	Output		6237454	0					
ANR	6237464	Identifier	tmp		6237454	1					
ANR	6237465	ExpressionStatement	tmp . fout = NULL	57:1:1131:1146	6237454	2	True				
ANR	6237466	AssignmentExpression	tmp . fout = NULL		6237454	0		=			
ANR	6237467	MemberAccess	tmp . fout		6237454	0					
ANR	6237468	Identifier	tmp		6237454	0					
ANR	6237469	Identifier	fout		6237454	1					
ANR	6237470	Identifier	NULL		6237454	1					
ANR	6237471	ExpressionStatement	"tmp . cout = r_strbuf_new ( """" )"	58:1:1149:1177	6237454	3	True				
ANR	6237472	AssignmentExpression	"tmp . cout = r_strbuf_new ( """" )"		6237454	0		=			
ANR	6237473	MemberAccess	tmp . cout		6237454	0					
ANR	6237474	Identifier	tmp		6237454	0					
ANR	6237475	Identifier	cout		6237454	1					
ANR	6237476	CallExpression	"r_strbuf_new ( """" )"		6237454	1					
ANR	6237477	Callee	r_strbuf_new		6237454	0					
ANR	6237478	Identifier	r_strbuf_new		6237454	0					
ANR	6237479	ArgumentList	""""""		6237454	1					
ANR	6237480	Argument	""""""		6237454	0					
ANR	6237481	PrimaryExpression	""""""		6237454	0					
ANR	6237482	IdentifierDeclStatement	"int rc = spp_run ( buf , & tmp ) ;"	59:1:1180:1208	6237454	4	True				
ANR	6237483	IdentifierDecl	"rc = spp_run ( buf , & tmp )"		6237454	0					
ANR	6237484	IdentifierDeclType	int		6237454	0					
ANR	6237485	Identifier	rc		6237454	1					
ANR	6237486	AssignmentExpression	"rc = spp_run ( buf , & tmp )"		6237454	2		=			
ANR	6237487	Identifier	rc		6237454	0					
ANR	6237488	CallExpression	"spp_run ( buf , & tmp )"		6237454	1					
ANR	6237489	Callee	spp_run		6237454	0					
ANR	6237490	Identifier	spp_run		6237454	0					
ANR	6237491	ArgumentList	buf		6237454	1					
ANR	6237492	Argument	buf		6237454	0					
ANR	6237493	Identifier	buf		6237454	0					
ANR	6237494	Argument	& tmp		6237454	1					
ANR	6237495	UnaryOperationExpression	& tmp		6237454	0					
ANR	6237496	UnaryOperator	&		6237454	0					
ANR	6237497	Identifier	tmp		6237454	1					
ANR	6237498	ExpressionStatement	b = strdup ( r_strbuf_get ( tmp . cout ) )	60:1:1211:1247	6237454	5	True				
ANR	6237499	AssignmentExpression	b = strdup ( r_strbuf_get ( tmp . cout ) )		6237454	0		=			
ANR	6237500	Identifier	b		6237454	0					
ANR	6237501	CallExpression	strdup ( r_strbuf_get ( tmp . cout ) )		6237454	1					
ANR	6237502	Callee	strdup		6237454	0					
ANR	6237503	Identifier	strdup		6237454	0					
ANR	6237504	ArgumentList	r_strbuf_get ( tmp . cout )		6237454	1					
ANR	6237505	Argument	r_strbuf_get ( tmp . cout )		6237454	0					
ANR	6237506	CallExpression	r_strbuf_get ( tmp . cout )		6237454	0					
ANR	6237507	Callee	r_strbuf_get		6237454	0					
ANR	6237508	Identifier	r_strbuf_get		6237454	0					
ANR	6237509	ArgumentList	tmp . cout		6237454	1					
ANR	6237510	Argument	tmp . cout		6237454	0					
ANR	6237511	MemberAccess	tmp . cout		6237454	0					
ANR	6237512	Identifier	tmp		6237454	0					
ANR	6237513	Identifier	cout		6237454	1					
ANR	6237514	ExpressionStatement	r_strbuf_free ( tmp . cout )	61:1:1250:1274	6237454	6	True				
ANR	6237515	CallExpression	r_strbuf_free ( tmp . cout )		6237454	0					
ANR	6237516	Callee	r_strbuf_free		6237454	0					
ANR	6237517	Identifier	r_strbuf_free		6237454	0					
ANR	6237518	ArgumentList	tmp . cout		6237454	1					
ANR	6237519	Argument	tmp . cout		6237454	0					
ANR	6237520	MemberAccess	tmp . cout		6237454	0					
ANR	6237521	Identifier	tmp		6237454	0					
ANR	6237522	Identifier	cout		6237454	1					
ANR	6237523	IfStatement	if ( rv )		6237454	7					
ANR	6237524	Condition	rv	62:5:1281:1282	6237454	0	True				
ANR	6237525	Identifier	rv		6237454	0					
ANR	6237526	CompoundStatement		9:9:179:179	6237454	1					
ANR	6237527	ExpressionStatement	* rv = rc	63:2:1289:1297	6237454	0	True				
ANR	6237528	AssignmentExpression	* rv = rc		6237454	0		=			
ANR	6237529	UnaryOperationExpression	* rv		6237454	0					
ANR	6237530	UnaryOperator	*		6237454	0					
ANR	6237531	Identifier	rv		6237454	1					
ANR	6237532	Identifier	rc		6237454	1					
ANR	6237533	ReturnStatement	return b ;	65:1:1303:1311	6237454	8	True				
ANR	6237534	Identifier	b		6237454	0					
ANR	6237535	ReturnType	static char *		6237454	1					
ANR	6237536	Identifier	spp_run_str		6237454	2					
ANR	6237537	ParameterList	"char * buf , int * rv"		6237454	3					
ANR	6237538	Parameter	char * buf	54:25:1085:1093	6237454	0	True				
ANR	6237539	ParameterType	char *		6237454	0					
ANR	6237540	Identifier	buf		6237454	1					
ANR	6237541	Parameter	int * rv	54:36:1096:1102	6237454	1	True				
ANR	6237542	ParameterType	int *		6237454	0					
ANR	6237543	Identifier	rv		6237454	1					
ANR	6237544	CFGEntryNode	ENTRY		6237454		True				
ANR	6237545	CFGExitNode	EXIT		6237454		True				
ANR	6237546	Symbol	tmp . cout		6237454						
ANR	6237547	Symbol	b		6237454						
ANR	6237548	Symbol	NULL		6237454						
ANR	6237549	Symbol	r_strbuf_new		6237454						
ANR	6237550	Symbol	rv		6237454						
ANR	6237551	Symbol	tmp . fout		6237454						
ANR	6237552	Symbol	* rv		6237454						
ANR	6237553	Symbol	rc		6237454						
ANR	6237554	Symbol	buf		6237454						
ANR	6237555	Symbol	r_strbuf_get		6237454						
ANR	6237556	Symbol	tmp		6237454						
ANR	6237557	Symbol	& tmp		6237454						
ANR	6237558	Symbol	strdup		6237454						
ANR	6237559	Symbol	spp_run		6237454						
ANR	6237560	Function	lbuf_strcat	68:0:1316:1665							
ANR	6237561	FunctionDef	"lbuf_strcat (SppBuf * dst , char * src)"		6237560	0					
ANR	6237562	CompoundStatement		68:41:1357:1665	6237560	0					
ANR	6237563	IdentifierDeclStatement	int len = strlen ( src ) ;	69:1:1360:1382	6237560	0	True				
ANR	6237564	IdentifierDecl	len = strlen ( src )		6237560	0					
ANR	6237565	IdentifierDeclType	int		6237560	0					
ANR	6237566	Identifier	len		6237560	1					
ANR	6237567	AssignmentExpression	len = strlen ( src )		6237560	2		=			
ANR	6237568	Identifier	len		6237560	0					
ANR	6237569	CallExpression	strlen ( src )		6237560	1					
ANR	6237570	Callee	strlen		6237560	0					
ANR	6237571	Identifier	strlen		6237560	0					
ANR	6237572	ArgumentList	src		6237560	1					
ANR	6237573	Argument	src		6237560	0					
ANR	6237574	Identifier	src		6237560	0					
ANR	6237575	IdentifierDeclStatement	char * nbuf ;	70:1:1385:1395	6237560	1	True				
ANR	6237576	IdentifierDecl	* nbuf		6237560	0					
ANR	6237577	IdentifierDeclType	char *		6237560	0					
ANR	6237578	Identifier	nbuf		6237560	1					
ANR	6237579	IfStatement	if ( ! dst -> lbuf || ( len + dst -> lbuf_n ) > dst -> lbuf_s )		6237560	2					
ANR	6237580	Condition	! dst -> lbuf || ( len + dst -> lbuf_n ) > dst -> lbuf_s	71:5:1402:1448	6237560	0	True				
ANR	6237581	OrExpression	! dst -> lbuf || ( len + dst -> lbuf_n ) > dst -> lbuf_s		6237560	0		||			
ANR	6237582	UnaryOperationExpression	! dst -> lbuf		6237560	0					
ANR	6237583	UnaryOperator	!		6237560	0					
ANR	6237584	PtrMemberAccess	dst -> lbuf		6237560	1					
ANR	6237585	Identifier	dst		6237560	0					
ANR	6237586	Identifier	lbuf		6237560	1					
ANR	6237587	RelationalExpression	( len + dst -> lbuf_n ) > dst -> lbuf_s		6237560	1		>			
ANR	6237588	AdditiveExpression	len + dst -> lbuf_n		6237560	0		+			
ANR	6237589	Identifier	len		6237560	0					
ANR	6237590	PtrMemberAccess	dst -> lbuf_n		6237560	1					
ANR	6237591	Identifier	dst		6237560	0					
ANR	6237592	Identifier	lbuf_n		6237560	1					
ANR	6237593	PtrMemberAccess	dst -> lbuf_s		6237560	1					
ANR	6237594	Identifier	dst		6237560	0					
ANR	6237595	Identifier	lbuf_s		6237560	1					
ANR	6237596	CompoundStatement		4:54:93:93	6237560	1					
ANR	6237597	ExpressionStatement	"nbuf = realloc ( dst -> lbuf , dst -> lbuf_s << 1 )"	72:2:1455:1499	6237560	0	True				
ANR	6237598	AssignmentExpression	"nbuf = realloc ( dst -> lbuf , dst -> lbuf_s << 1 )"		6237560	0		=			
ANR	6237599	Identifier	nbuf		6237560	0					
ANR	6237600	CallExpression	"realloc ( dst -> lbuf , dst -> lbuf_s << 1 )"		6237560	1					
ANR	6237601	Callee	realloc		6237560	0					
ANR	6237602	Identifier	realloc		6237560	0					
ANR	6237603	ArgumentList	dst -> lbuf		6237560	1					
ANR	6237604	Argument	dst -> lbuf		6237560	0					
ANR	6237605	PtrMemberAccess	dst -> lbuf		6237560	0					
ANR	6237606	Identifier	dst		6237560	0					
ANR	6237607	Identifier	lbuf		6237560	1					
ANR	6237608	Argument	dst -> lbuf_s << 1		6237560	1					
ANR	6237609	ShiftExpression	dst -> lbuf_s << 1		6237560	0		<<			
ANR	6237610	PtrMemberAccess	dst -> lbuf_s		6237560	0					
ANR	6237611	Identifier	dst		6237560	0					
ANR	6237612	Identifier	lbuf_s		6237560	1					
ANR	6237613	PrimaryExpression	1		6237560	1					
ANR	6237614	IfStatement	if ( ! nbuf )		6237560	1					
ANR	6237615	Condition	! nbuf	73:6:1507:1511	6237560	0	True				
ANR	6237616	UnaryOperationExpression	! nbuf		6237560	0					
ANR	6237617	UnaryOperator	!		6237560	0					
ANR	6237618	Identifier	nbuf		6237560	1					
ANR	6237619	CompoundStatement		6:13:156:156	6237560	1					
ANR	6237620	ExpressionStatement	"fprintf ( stderr , ""Out of memory.\\n"" )"	74:3:1519:1555	6237560	0	True				
ANR	6237621	CallExpression	"fprintf ( stderr , ""Out of memory.\\n"" )"		6237560	0					
ANR	6237622	Callee	fprintf		6237560	0					
ANR	6237623	Identifier	fprintf		6237560	0					
ANR	6237624	ArgumentList	stderr		6237560	1					
ANR	6237625	Argument	stderr		6237560	0					
ANR	6237626	Identifier	stderr		6237560	0					
ANR	6237627	Argument	"""Out of memory.\\n"""		6237560	1					
ANR	6237628	PrimaryExpression	"""Out of memory.\\n"""		6237560	0					
ANR	6237629	ReturnStatement	return ;	75:3:1560:1566	6237560	1	True				
ANR	6237630	ExpressionStatement	dst -> lbuf = nbuf	77:2:1574:1590	6237560	2	True				
ANR	6237631	AssignmentExpression	dst -> lbuf = nbuf		6237560	0		=			
ANR	6237632	PtrMemberAccess	dst -> lbuf		6237560	0					
ANR	6237633	Identifier	dst		6237560	0					
ANR	6237634	Identifier	lbuf		6237560	1					
ANR	6237635	Identifier	nbuf		6237560	1					
ANR	6237636	ExpressionStatement	"memcpy ( dst -> lbuf + dst -> lbuf_n , src , len + 1 )"	79:1:1596:1642	6237560	3	True				
ANR	6237637	CallExpression	"memcpy ( dst -> lbuf + dst -> lbuf_n , src , len + 1 )"		6237560	0					
ANR	6237638	Callee	memcpy		6237560	0					
ANR	6237639	Identifier	memcpy		6237560	0					
ANR	6237640	ArgumentList	dst -> lbuf + dst -> lbuf_n		6237560	1					
ANR	6237641	Argument	dst -> lbuf + dst -> lbuf_n		6237560	0					
ANR	6237642	AdditiveExpression	dst -> lbuf + dst -> lbuf_n		6237560	0		+			
ANR	6237643	PtrMemberAccess	dst -> lbuf		6237560	0					
ANR	6237644	Identifier	dst		6237560	0					
ANR	6237645	Identifier	lbuf		6237560	1					
ANR	6237646	PtrMemberAccess	dst -> lbuf_n		6237560	1					
ANR	6237647	Identifier	dst		6237560	0					
ANR	6237648	Identifier	lbuf_n		6237560	1					
ANR	6237649	Argument	src		6237560	1					
ANR	6237650	Identifier	src		6237560	0					
ANR	6237651	Argument	len + 1		6237560	2					
ANR	6237652	AdditiveExpression	len + 1		6237560	0		+			
ANR	6237653	Identifier	len		6237560	0					
ANR	6237654	PrimaryExpression	1		6237560	1					
ANR	6237655	ExpressionStatement	dst -> lbuf_n += len	80:1:1645:1663	6237560	4	True				
ANR	6237656	AssignmentExpression	dst -> lbuf_n += len		6237560	0		+=			
ANR	6237657	PtrMemberAccess	dst -> lbuf_n		6237560	0					
ANR	6237658	Identifier	dst		6237560	0					
ANR	6237659	Identifier	lbuf_n		6237560	1					
ANR	6237660	Identifier	len		6237560	1					
ANR	6237661	ReturnType	void		6237560	1					
ANR	6237662	Identifier	lbuf_strcat		6237560	2					
ANR	6237663	ParameterList	"SppBuf * dst , char * src"		6237560	3					
ANR	6237664	Parameter	SppBuf * dst	68:17:1333:1343	6237560	0	True				
ANR	6237665	ParameterType	SppBuf *		6237560	0					
ANR	6237666	Identifier	dst		6237560	1					
ANR	6237667	Parameter	char * src	68:30:1346:1354	6237560	1	True				
ANR	6237668	ParameterType	char *		6237560	0					
ANR	6237669	Identifier	src		6237560	1					
ANR	6237670	CFGEntryNode	ENTRY		6237560		True				
ANR	6237671	CFGExitNode	EXIT		6237560		True				
ANR	6237672	Symbol	* dst		6237560						
ANR	6237673	Symbol	strlen		6237560						
ANR	6237674	Symbol	dst -> lbuf_n		6237560						
ANR	6237675	Symbol	dst		6237560						
ANR	6237676	Symbol	len		6237560						
ANR	6237677	Symbol	src		6237560						
ANR	6237678	Symbol	nbuf		6237560						
ANR	6237679	Symbol	dst -> lbuf_s		6237560						
ANR	6237680	Symbol	realloc		6237560						
ANR	6237681	Symbol	stderr		6237560						
ANR	6237682	Symbol	dst -> lbuf		6237560						
ANR	6237683	Function	do_fputs	83:0:1668:1998							
ANR	6237684	FunctionDef	"do_fputs (Output * out , char * str)"		6237683	0					
ANR	6237685	CompoundStatement		83:37:1705:1998	6237683	0					
ANR	6237686	IdentifierDeclStatement	int i ;	84:1:1708:1713	6237683	0	True				
ANR	6237687	IdentifierDecl	i		6237683	0					
ANR	6237688	IdentifierDeclType	int		6237683	0					
ANR	6237689	Identifier	i		6237683	1					
ANR	6237690	IdentifierDeclStatement	int printed = 0 ;	85:1:1716:1731	6237683	1	True				
ANR	6237691	IdentifierDecl	printed = 0		6237683	0					
ANR	6237692	IdentifierDeclType	int		6237683	0					
ANR	6237693	Identifier	printed		6237683	1					
ANR	6237694	AssignmentExpression	printed = 0		6237683	2		=			
ANR	6237695	Identifier	printed		6237683	0					
ANR	6237696	PrimaryExpression	0		6237683	1					
ANR	6237697	ForStatement	for ( i = 0 ; i <= proc -> state . ifl ; i ++ )		6237683	2					
ANR	6237698	ForInit	i = 0 ;	86:6:1739:1744	6237683	0	True				
ANR	6237699	AssignmentExpression	i = 0		6237683	0		=			
ANR	6237700	Identifier	i		6237683	0					
ANR	6237701	PrimaryExpression	0		6237683	1					
ANR	6237702	Condition	i <= proc -> state . ifl	86:13:1746:1765	6237683	1	True				
ANR	6237703	RelationalExpression	i <= proc -> state . ifl		6237683	0		<=			
ANR	6237704	Identifier	i		6237683	0					
ANR	6237705	MemberAccess	proc -> state . ifl		6237683	1					
ANR	6237706	PtrMemberAccess	proc -> state		6237683	0					
ANR	6237707	Identifier	proc		6237683	0					
ANR	6237708	Identifier	state		6237683	1					
ANR	6237709	Identifier	ifl		6237683	1					
ANR	6237710	PostIncDecOperationExpression	i ++	86:35:1768:1770	6237683	2	True				
ANR	6237711	Identifier	i		6237683	0					
ANR	6237712	IncDec	++		6237683	1					
ANR	6237713	CompoundStatement		4:40:67:67	6237683	3					
ANR	6237714	IfStatement	if ( ! proc -> state . echo [ i ] )		6237683	0					
ANR	6237715	Condition	! proc -> state . echo [ i ]	87:6:1781:1800	6237683	0	True				
ANR	6237716	UnaryOperationExpression	! proc -> state . echo [ i ]		6237683	0					
ANR	6237717	UnaryOperator	!		6237683	0					
ANR	6237718	ArrayIndexing	proc -> state . echo [ i ]		6237683	1					
ANR	6237719	MemberAccess	proc -> state . echo		6237683	0					
ANR	6237720	PtrMemberAccess	proc -> state		6237683	0					
ANR	6237721	Identifier	proc		6237683	0					
ANR	6237722	Identifier	state		6237683	1					
ANR	6237723	Identifier	echo		6237683	1					
ANR	6237724	Identifier	i		6237683	1					
ANR	6237725	CompoundStatement		5:28:97:97	6237683	1					
ANR	6237726	ReturnStatement	return printed ;	88:3:1808:1822	6237683	0	True				
ANR	6237727	Identifier	printed		6237683	0					
ANR	6237728	IfStatement	if ( str [ 0 ] )		6237683	3					
ANR	6237729	Condition	str [ 0 ]	91:5:1836:1841	6237683	0	True				
ANR	6237730	ArrayIndexing	str [ 0 ]		6237683	0					
ANR	6237731	Identifier	str		6237683	0					
ANR	6237732	PrimaryExpression	0		6237683	1					
ANR	6237733	CompoundStatement		9:13:138:138	6237683	1					
ANR	6237734	ExpressionStatement	printed = 1	92:2:1848:1859	6237683	0	True				
ANR	6237735	AssignmentExpression	printed = 1		6237683	0		=			
ANR	6237736	Identifier	printed		6237683	0					
ANR	6237737	PrimaryExpression	1		6237683	1					
ANR	6237738	IfStatement	if ( proc -> fputs )		6237683	4					
ANR	6237739	Condition	proc -> fputs	94:5:1869:1879	6237683	0	True				
ANR	6237740	PtrMemberAccess	proc -> fputs		6237683	0					
ANR	6237741	Identifier	proc		6237683	0					
ANR	6237742	Identifier	fputs		6237683	1					
ANR	6237743	CompoundStatement		12:18:176:176	6237683	1					
ANR	6237744	ExpressionStatement	"proc -> fputs ( out , str )"	95:2:1886:1908	6237683	0	True				
ANR	6237745	CallExpression	"proc -> fputs ( out , str )"		6237683	0					
ANR	6237746	Callee	proc -> fputs		6237683	0					
ANR	6237747	PtrMemberAccess	proc -> fputs		6237683	0					
ANR	6237748	Identifier	proc		6237683	0					
ANR	6237749	Identifier	fputs		6237683	1					
ANR	6237750	ArgumentList	out		6237683	1					
ANR	6237751	Argument	out		6237683	0					
ANR	6237752	Identifier	out		6237683	0					
ANR	6237753	Argument	str		6237683	1					
ANR	6237754	Identifier	str		6237683	0					
ANR	6237755	ElseStatement	else		6237683	0					
ANR	6237756	CompoundStatement		14:8:212:212	6237683	0					
ANR	6237757	IfStatement	if ( out -> fout )		6237683	0					
ANR	6237758	Condition	out -> fout	97:6:1926:1934	6237683	0	True				
ANR	6237759	PtrMemberAccess	out -> fout		6237683	0					
ANR	6237760	Identifier	out		6237683	0					
ANR	6237761	Identifier	fout		6237683	1					
ANR	6237762	CompoundStatement		15:17:231:231	6237683	1					
ANR	6237763	ExpressionStatement	"fprintf ( out -> fout , ""%s"" , str )"	98:3:1942:1972	6237683	0	True				
ANR	6237764	CallExpression	"fprintf ( out -> fout , ""%s"" , str )"		6237683	0					
ANR	6237765	Callee	fprintf		6237683	0					
ANR	6237766	Identifier	fprintf		6237683	0					
ANR	6237767	ArgumentList	out -> fout		6237683	1					
ANR	6237768	Argument	out -> fout		6237683	0					
ANR	6237769	PtrMemberAccess	out -> fout		6237683	0					
ANR	6237770	Identifier	out		6237683	0					
ANR	6237771	Identifier	fout		6237683	1					
ANR	6237772	Argument	"""%s"""		6237683	1					
ANR	6237773	PrimaryExpression	"""%s"""		6237683	0					
ANR	6237774	Argument	str		6237683	2					
ANR	6237775	Identifier	str		6237683	0					
ANR	6237776	ReturnStatement	return printed ;	101:1:1982:1996	6237683	5	True				
ANR	6237777	Identifier	printed		6237683	0					
ANR	6237778	ReturnType	int		6237683	1					
ANR	6237779	Identifier	do_fputs		6237683	2					
ANR	6237780	ParameterList	"Output * out , char * str"		6237683	3					
ANR	6237781	Parameter	Output * out	83:13:1681:1691	6237683	0	True				
ANR	6237782	ParameterType	Output *		6237683	0					
ANR	6237783	Identifier	out		6237683	1					
ANR	6237784	Parameter	char * str	83:26:1694:1702	6237683	1	True				
ANR	6237785	ParameterType	char *		6237683	0					
ANR	6237786	Identifier	str		6237683	1					
ANR	6237787	CFGEntryNode	ENTRY		6237683		True				
ANR	6237788	CFGExitNode	EXIT		6237683		True				
ANR	6237789	Symbol	proc		6237683						
ANR	6237790	Symbol	proc -> state		6237683						
ANR	6237791	Symbol	* proc -> state . echo		6237683						
ANR	6237792	Symbol	proc -> state . ifl		6237683						
ANR	6237793	Symbol	i		6237683						
ANR	6237794	Symbol	out		6237683						
ANR	6237795	Symbol	* proc		6237683						
ANR	6237796	Symbol	str		6237683						
ANR	6237797	Symbol	printed		6237683						
ANR	6237798	Symbol	* i		6237683						
ANR	6237799	Symbol	proc -> state . echo		6237683						
ANR	6237800	Symbol	* proc -> state		6237683						
ANR	6237801	Symbol	proc -> fputs		6237683						
ANR	6237802	Symbol	* out		6237683						
ANR	6237803	Symbol	* * proc		6237683						
ANR	6237804	Symbol	* str		6237683						
ANR	6237805	Symbol	out -> fout		6237683						
ANR	6237806	Function	spp_eval	104:0:2001:4542							
ANR	6237807	FunctionDef	"spp_eval (char * buf , Output * out)"		6237806	0					
ANR	6237808	CompoundStatement		104:44:2045:4542	6237806	0					
ANR	6237809	IdentifierDeclStatement	"char * ptr , * ptr2 ;"	105:1:2048:2064	6237806	0	True				
ANR	6237810	IdentifierDecl	* ptr		6237806	0					
ANR	6237811	IdentifierDeclType	char *		6237806	0					
ANR	6237812	Identifier	ptr		6237806	1					
ANR	6237813	IdentifierDecl	* ptr2		6237806	1					
ANR	6237814	IdentifierDeclType	char *		6237806	0					
ANR	6237815	Identifier	ptr2		6237806	1					
ANR	6237816	IdentifierDeclStatement	char * ptrr = NULL ;	106:1:2067:2084	6237806	1	True				
ANR	6237817	IdentifierDecl	* ptrr = NULL		6237806	0					
ANR	6237818	IdentifierDeclType	char *		6237806	0					
ANR	6237819	Identifier	ptrr		6237806	1					
ANR	6237820	AssignmentExpression	* ptrr = NULL		6237806	2		=			
ANR	6237821	Identifier	NULL		6237806	0					
ANR	6237822	Identifier	NULL		6237806	1					
ANR	6237823	IdentifierDeclStatement	int delta ;	107:1:2087:2096	6237806	2	True				
ANR	6237824	IdentifierDecl	delta		6237806	0					
ANR	6237825	IdentifierDeclType	int		6237806	0					
ANR	6237826	Identifier	delta		6237806	1					
ANR	6237827	IdentifierDeclStatement	int printed = 0 ;	108:1:2099:2114	6237806	3	True				
ANR	6237828	IdentifierDecl	printed = 0		6237806	0					
ANR	6237829	IdentifierDeclType	int		6237806	0					
ANR	6237830	Identifier	printed		6237806	1					
ANR	6237831	AssignmentExpression	printed = 0		6237806	2		=			
ANR	6237832	Identifier	printed		6237806	0					
ANR	6237833	PrimaryExpression	0		6237806	1					
ANR	6237834	Label	retry :	109:0:2116:2121	6237806	4	True				
ANR	6237835	Identifier	retry		6237806	0					
ANR	6237836	IfStatement	if ( ! proc -> tag_pre && proc -> token )		6237806	5					
ANR	6237837	Condition	! proc -> tag_pre && proc -> token	111:5:2144:2172	6237806	0	True				
ANR	6237838	AndExpression	! proc -> tag_pre && proc -> token		6237806	0		&&			
ANR	6237839	UnaryOperationExpression	! proc -> tag_pre		6237806	0					
ANR	6237840	UnaryOperator	!		6237806	0					
ANR	6237841	PtrMemberAccess	proc -> tag_pre		6237806	1					
ANR	6237842	Identifier	proc		6237806	0					
ANR	6237843	Identifier	tag_pre		6237806	1					
ANR	6237844	PtrMemberAccess	proc -> token		6237806	1					
ANR	6237845	Identifier	proc		6237806	0					
ANR	6237846	Identifier	token		6237806	1					
ANR	6237847	CompoundStatement		8:36:129:129	6237806	1					
ANR	6237848	DoStatement	do		6237806	0					
ANR	6237849	CompoundStatement		9:5:136:136	6237806	0					
ANR	6237850	ExpressionStatement	"ptr = strstr ( buf , proc -> token )"	113:3:2187:2218	6237806	0	True				
ANR	6237851	AssignmentExpression	"ptr = strstr ( buf , proc -> token )"		6237806	0		=			
ANR	6237852	Identifier	ptr		6237806	0					
ANR	6237853	CallExpression	"strstr ( buf , proc -> token )"		6237806	1					
ANR	6237854	Callee	strstr		6237806	0					
ANR	6237855	Identifier	strstr		6237806	0					
ANR	6237856	ArgumentList	buf		6237806	1					
ANR	6237857	Argument	buf		6237806	0					
ANR	6237858	Identifier	buf		6237806	0					
ANR	6237859	Argument	proc -> token		6237806	1					
ANR	6237860	PtrMemberAccess	proc -> token		6237806	0					
ANR	6237861	Identifier	proc		6237806	0					
ANR	6237862	Identifier	token		6237806	1					
ANR	6237863	IfStatement	if ( ptr )		6237806	1					
ANR	6237864	Condition	ptr	114:7:2227:2229	6237806	0	True				
ANR	6237865	Identifier	ptr		6237806	0					
ANR	6237866	CompoundStatement		11:12:186:186	6237806	1					
ANR	6237867	ExpressionStatement	* ptr = '\\0'	115:4:2238:2249	6237806	0	True				
ANR	6237868	AssignmentExpression	* ptr = '\\0'		6237806	0		=			
ANR	6237869	UnaryOperationExpression	* ptr		6237806	0					
ANR	6237870	UnaryOperator	*		6237806	0					
ANR	6237871	Identifier	ptr		6237806	1					
ANR	6237872	PrimaryExpression	'\\0'		6237806	1					
ANR	6237873	ExpressionStatement	delta = strlen ( buf ) - 1	117:3:2259:2283	6237806	2	True				
ANR	6237874	AssignmentExpression	delta = strlen ( buf ) - 1		6237806	0		=			
ANR	6237875	Identifier	delta		6237806	0					
ANR	6237876	AdditiveExpression	strlen ( buf ) - 1		6237806	1		-			
ANR	6237877	CallExpression	strlen ( buf )		6237806	0					
ANR	6237878	Callee	strlen		6237806	0					
ANR	6237879	Identifier	strlen		6237806	0					
ANR	6237880	ArgumentList	buf		6237806	1					
ANR	6237881	Argument	buf		6237806	0					
ANR	6237882	Identifier	buf		6237806	0					
ANR	6237883	PrimaryExpression	1		6237806	1					
ANR	6237884	IfStatement	if ( buf [ delta ] == '\\n' )		6237806	3					
ANR	6237885	Condition	buf [ delta ] == '\\n'	118:7:2292:2309	6237806	0	True				
ANR	6237886	EqualityExpression	buf [ delta ] == '\\n'		6237806	0		==			
ANR	6237887	ArrayIndexing	buf [ delta ]		6237806	0					
ANR	6237888	Identifier	buf		6237806	0					
ANR	6237889	Identifier	delta		6237806	1					
ANR	6237890	PrimaryExpression	'\\n'		6237806	1					
ANR	6237891	CompoundStatement		15:27:266:266	6237806	1					
ANR	6237892	ExpressionStatement	buf [ delta ] = '\\0'	119:4:2318:2335	6237806	0	True				
ANR	6237893	AssignmentExpression	buf [ delta ] = '\\0'		6237806	0		=			
ANR	6237894	ArrayIndexing	buf [ delta ]		6237806	0					
ANR	6237895	Identifier	buf		6237806	0					
ANR	6237896	Identifier	delta		6237806	1					
ANR	6237897	PrimaryExpression	'\\0'		6237806	1					
ANR	6237898	IfStatement	if ( * buf )		6237806	4					
ANR	6237899	Condition	* buf	121:7:2349:2352	6237806	0	True				
ANR	6237900	UnaryOperationExpression	* buf		6237806	0					
ANR	6237901	UnaryOperator	*		6237806	0					
ANR	6237902	Identifier	buf		6237806	1					
ANR	6237903	CompoundStatement		18:13:309:309	6237806	1					
ANR	6237904	ExpressionStatement	"spp_run ( buf , out )"	122:4:2361:2379	6237806	0	True				
ANR	6237905	CallExpression	"spp_run ( buf , out )"		6237806	0					
ANR	6237906	Callee	spp_run		6237806	0					
ANR	6237907	Identifier	spp_run		6237806	0					
ANR	6237908	ArgumentList	buf		6237806	1					
ANR	6237909	Argument	buf		6237806	0					
ANR	6237910	Identifier	buf		6237806	0					
ANR	6237911	Argument	out		6237806	1					
ANR	6237912	Identifier	out		6237806	0					
ANR	6237913	ExpressionStatement	buf = ptr + 1	124:3:2389:2402	6237806	5	True				
ANR	6237914	AssignmentExpression	buf = ptr + 1		6237806	0		=			
ANR	6237915	Identifier	buf		6237806	0					
ANR	6237916	AdditiveExpression	ptr + 1		6237806	1		+			
ANR	6237917	Identifier	ptr		6237806	0					
ANR	6237918	PrimaryExpression	1		6237806	1					
ANR	6237919	Condition	ptr	125:11:2415:2417	6237806	1	True				
ANR	6237920	Identifier	ptr		6237806	0					
ANR	6237921	ReturnStatement	return ;	126:2:2423:2429	6237806	1	True				
ANR	6237922	IfStatement	if ( ! proc -> tag_post )		6237806	6					
ANR	6237923	Condition	! proc -> tag_post	129:5:2440:2454	6237806	0	True				
ANR	6237924	UnaryOperationExpression	! proc -> tag_post		6237806	0					
ANR	6237925	UnaryOperator	!		6237806	0					
ANR	6237926	PtrMemberAccess	proc -> tag_post		6237806	1					
ANR	6237927	Identifier	proc		6237806	0					
ANR	6237928	Identifier	tag_post		6237806	1					
ANR	6237929	CompoundStatement		26:22:411:411	6237806	1					
ANR	6237930	ReturnStatement	return ;	131:2:2492:2498	6237806	0	True				
ANR	6237931	ExpressionStatement	delta = strlen ( proc -> tag_post )	135:1:2531:2562	6237806	7	True				
ANR	6237932	AssignmentExpression	delta = strlen ( proc -> tag_post )		6237806	0		=			
ANR	6237933	Identifier	delta		6237806	0					
ANR	6237934	CallExpression	strlen ( proc -> tag_post )		6237806	1					
ANR	6237935	Callee	strlen		6237806	0					
ANR	6237936	Identifier	strlen		6237806	0					
ANR	6237937	ArgumentList	proc -> tag_post		6237806	1					
ANR	6237938	Argument	proc -> tag_post		6237806	0					
ANR	6237939	PtrMemberAccess	proc -> tag_post		6237806	0					
ANR	6237940	Identifier	proc		6237806	0					
ANR	6237941	Identifier	tag_post		6237806	1					
ANR	6237942	ExpressionStatement	"ptr = proc -> tag_pre ? strstr ( buf , proc -> tag_pre ) : NULL"	138:1:2583:2637	6237806	8	True				
ANR	6237943	AssignmentExpression	"ptr = proc -> tag_pre ? strstr ( buf , proc -> tag_pre ) : NULL"		6237806	0		=			
ANR	6237944	Identifier	ptr		6237806	0					
ANR	6237945	ConditionalExpression	"proc -> tag_pre ? strstr ( buf , proc -> tag_pre ) : NULL"		6237806	1					
ANR	6237946	Condition	proc -> tag_pre		6237806	0					
ANR	6237947	PtrMemberAccess	proc -> tag_pre		6237806	0					
ANR	6237948	Identifier	proc		6237806	0					
ANR	6237949	Identifier	tag_pre		6237806	1					
ANR	6237950	CallExpression	"strstr ( buf , proc -> tag_pre )"		6237806	1					
ANR	6237951	Callee	strstr		6237806	0					
ANR	6237952	Identifier	strstr		6237806	0					
ANR	6237953	ArgumentList	buf		6237806	1					
ANR	6237954	Argument	buf		6237806	0					
ANR	6237955	Identifier	buf		6237806	0					
ANR	6237956	Argument	proc -> tag_pre		6237806	1					
ANR	6237957	PtrMemberAccess	proc -> tag_pre		6237806	0					
ANR	6237958	Identifier	proc		6237806	0					
ANR	6237959	Identifier	tag_pre		6237806	1					
ANR	6237960	Identifier	NULL		6237806	2					
ANR	6237961	IfStatement	if ( ptr )		6237806	9					
ANR	6237962	Condition	ptr	139:5:2644:2646	6237806	0	True				
ANR	6237963	Identifier	ptr		6237806	0					
ANR	6237964	CompoundStatement		37:2:607:639	6237806	1					
ANR	6237965	IdentifierDeclStatement	"D printf ( ""==> 0.0 (%s)\\n"" , ptr ) ;"	140:2:2653:2685	6237806	0	True				
ANR	6237966	IdentifierDecl	"printf ( ""==> 0.0 (%s)\\n"" , ptr )"		6237806	0					
ANR	6237967	IdentifierDeclType	D		6237806	0					
ANR	6237968	Identifier	printf		6237806	1					
ANR	6237969	Expression	"""==> 0.0 (%s)\\n"" , ptr"		6237806	2					
ANR	6237970	PrimaryExpression	"""==> 0.0 (%s)\\n"""		6237806	0					
ANR	6237971	Identifier	ptr		6237806	1					
ANR	6237972	IfStatement	if ( ! proc -> tag_begin || ( proc -> tag_begin && ptr == buf ) )		6237806	1					
ANR	6237973	Condition	! proc -> tag_begin || ( proc -> tag_begin && ptr == buf )	141:6:2693:2743	6237806	0	True				
ANR	6237974	OrExpression	! proc -> tag_begin || ( proc -> tag_begin && ptr == buf )		6237806	0		||			
ANR	6237975	UnaryOperationExpression	! proc -> tag_begin		6237806	0					
ANR	6237976	UnaryOperator	!		6237806	0					
ANR	6237977	PtrMemberAccess	proc -> tag_begin		6237806	1					
ANR	6237978	Identifier	proc		6237806	0					
ANR	6237979	Identifier	tag_begin		6237806	1					
ANR	6237980	AndExpression	proc -> tag_begin && ptr == buf		6237806	1		&&			
ANR	6237981	PtrMemberAccess	proc -> tag_begin		6237806	0					
ANR	6237982	Identifier	proc		6237806	0					
ANR	6237983	Identifier	tag_begin		6237806	1					
ANR	6237984	EqualityExpression	ptr == buf		6237806	1		==			
ANR	6237985	Identifier	ptr		6237806	0					
ANR	6237986	Identifier	buf		6237806	1					
ANR	6237987	CompoundStatement		44:3:812:842	6237806	1					
ANR	6237988	ExpressionStatement	* ptr = '\\0'	142:3:2751:2762	6237806	0	True				
ANR	6237989	AssignmentExpression	* ptr = '\\0'		6237806	0		=			
ANR	6237990	UnaryOperationExpression	* ptr		6237806	0					
ANR	6237991	UnaryOperator	*		6237806	0					
ANR	6237992	Identifier	ptr		6237806	1					
ANR	6237993	PrimaryExpression	'\\0'		6237806	1					
ANR	6237994	ExpressionStatement	ptr = ptr + strlen ( proc -> tag_pre )	143:3:2767:2801	6237806	1	True				
ANR	6237995	AssignmentExpression	ptr = ptr + strlen ( proc -> tag_pre )		6237806	0		=			
ANR	6237996	Identifier	ptr		6237806	0					
ANR	6237997	AdditiveExpression	ptr + strlen ( proc -> tag_pre )		6237806	1		+			
ANR	6237998	Identifier	ptr		6237806	0					
ANR	6237999	CallExpression	strlen ( proc -> tag_pre )		6237806	1					
ANR	6238000	Callee	strlen		6237806	0					
ANR	6238001	Identifier	strlen		6237806	0					
ANR	6238002	ArgumentList	proc -> tag_pre		6237806	1					
ANR	6238003	Argument	proc -> tag_pre		6237806	0					
ANR	6238004	PtrMemberAccess	proc -> tag_pre		6237806	0					
ANR	6238005	Identifier	proc		6237806	0					
ANR	6238006	Identifier	tag_pre		6237806	1					
ANR	6238007	IfStatement	"if ( do_fputs ( out , buf ) )"		6237806	2					
ANR	6238008	Condition	"do_fputs ( out , buf )"	144:7:2810:2828	6237806	0	True				
ANR	6238009	CallExpression	"do_fputs ( out , buf )"		6237806	0					
ANR	6238010	Callee	do_fputs		6237806	0					
ANR	6238011	Identifier	do_fputs		6237806	0					
ANR	6238012	ArgumentList	out		6237806	1					
ANR	6238013	Argument	out		6237806	0					
ANR	6238014	Identifier	out		6237806	0					
ANR	6238015	Argument	buf		6237806	1					
ANR	6238016	Identifier	buf		6237806	0					
ANR	6238017	CompoundStatement		41:28:785:785	6237806	1					
ANR	6238018	ExpressionStatement	printed = 1	145:4:2837:2848	6237806	0	True				
ANR	6238019	AssignmentExpression	printed = 1		6237806	0		=			
ANR	6238020	Identifier	printed		6237806	0					
ANR	6238021	PrimaryExpression	1		6237806	1					
ANR	6238022	IdentifierDeclStatement	"D printf ( ""==> 0 (%s)\\n"" , ptr ) ;"	147:3:2858:2888	6237806	3	True				
ANR	6238023	IdentifierDecl	"printf ( ""==> 0 (%s)\\n"" , ptr )"		6237806	0					
ANR	6238024	IdentifierDeclType	D		6237806	0					
ANR	6238025	Identifier	printf		6237806	1					
ANR	6238026	Expression	"""==> 0 (%s)\\n"" , ptr"		6237806	2					
ANR	6238027	PrimaryExpression	"""==> 0 (%s)\\n"""		6237806	0					
ANR	6238028	Identifier	ptr		6237806	1					
ANR	6238029	ExpressionStatement	"ptrr = strstr ( ptr + strlen ( proc -> tag_pre ) , proc -> tag_pre )"	149:2:2896:2955	6237806	2	True				
ANR	6238030	AssignmentExpression	"ptrr = strstr ( ptr + strlen ( proc -> tag_pre ) , proc -> tag_pre )"		6237806	0		=			
ANR	6238031	Identifier	ptrr		6237806	0					
ANR	6238032	CallExpression	"strstr ( ptr + strlen ( proc -> tag_pre ) , proc -> tag_pre )"		6237806	1					
ANR	6238033	Callee	strstr		6237806	0					
ANR	6238034	Identifier	strstr		6237806	0					
ANR	6238035	ArgumentList	ptr + strlen ( proc -> tag_pre )		6237806	1					
ANR	6238036	Argument	ptr + strlen ( proc -> tag_pre )		6237806	0					
ANR	6238037	AdditiveExpression	ptr + strlen ( proc -> tag_pre )		6237806	0		+			
ANR	6238038	Identifier	ptr		6237806	0					
ANR	6238039	CallExpression	strlen ( proc -> tag_pre )		6237806	1					
ANR	6238040	Callee	strlen		6237806	0					
ANR	6238041	Identifier	strlen		6237806	0					
ANR	6238042	ArgumentList	proc -> tag_pre		6237806	1					
ANR	6238043	Argument	proc -> tag_pre		6237806	0					
ANR	6238044	PtrMemberAccess	proc -> tag_pre		6237806	0					
ANR	6238045	Identifier	proc		6237806	0					
ANR	6238046	Identifier	tag_pre		6237806	1					
ANR	6238047	Argument	proc -> tag_pre		6237806	1					
ANR	6238048	PtrMemberAccess	proc -> tag_pre		6237806	0					
ANR	6238049	Identifier	proc		6237806	0					
ANR	6238050	Identifier	tag_pre		6237806	1					
ANR	6238051	IfStatement	if ( ! ptr )		6237806	10					
ANR	6238052	Condition	! ptr	153:5:2984:2987	6237806	0	True				
ANR	6238053	UnaryOperationExpression	! ptr		6237806	0					
ANR	6238054	UnaryOperator	!		6237806	0					
ANR	6238055	Identifier	ptr		6237806	1					
ANR	6238056	CompoundStatement		50:11:944:944	6237806	1					
ANR	6238057	IfStatement	"if ( do_fputs ( out , buf ) )"		6237806	0					
ANR	6238058	Condition	"do_fputs ( out , buf )"	154:6:2998:3016	6237806	0	True				
ANR	6238059	CallExpression	"do_fputs ( out , buf )"		6237806	0					
ANR	6238060	Callee	do_fputs		6237806	0					
ANR	6238061	Identifier	do_fputs		6237806	0					
ANR	6238062	ArgumentList	out		6237806	1					
ANR	6238063	Argument	out		6237806	0					
ANR	6238064	Identifier	out		6237806	0					
ANR	6238065	Argument	buf		6237806	1					
ANR	6238066	Identifier	buf		6237806	0					
ANR	6238067	CompoundStatement		51:27:973:973	6237806	1					
ANR	6238068	ExpressionStatement	printed = 1	155:3:3024:3035	6237806	0	True				
ANR	6238069	AssignmentExpression	printed = 1		6237806	0		=			
ANR	6238070	Identifier	printed		6237806	0					
ANR	6238071	PrimaryExpression	1		6237806	1					
ANR	6238072	ReturnStatement	return ;	157:2:3043:3049	6237806	1	True				
ANR	6238073	ExpressionStatement	"ptr2 = strstr ( ptr , proc -> tag_post )"	159:1:3055:3090	6237806	11	True				
ANR	6238074	AssignmentExpression	"ptr2 = strstr ( ptr , proc -> tag_post )"		6237806	0		=			
ANR	6238075	Identifier	ptr2		6237806	0					
ANR	6238076	CallExpression	"strstr ( ptr , proc -> tag_post )"		6237806	1					
ANR	6238077	Callee	strstr		6237806	0					
ANR	6238078	Identifier	strstr		6237806	0					
ANR	6238079	ArgumentList	ptr		6237806	1					
ANR	6238080	Argument	ptr		6237806	0					
ANR	6238081	Identifier	ptr		6237806	0					
ANR	6238082	Argument	proc -> tag_post		6237806	1					
ANR	6238083	PtrMemberAccess	proc -> tag_post		6237806	0					
ANR	6238084	Identifier	proc		6237806	0					
ANR	6238085	Identifier	tag_post		6237806	1					
ANR	6238086	IfStatement	if ( ptr2 )		6237806	12					
ANR	6238087	Condition	ptr2	160:5:3097:3100	6237806	0	True				
ANR	6238088	Identifier	ptr2		6237806	0					
ANR	6238089	CompoundStatement		57:11:1057:1057	6237806	1					
ANR	6238090	ExpressionStatement	* ptr2 = '\\0'	161:2:3107:3119	6237806	0	True				
ANR	6238091	AssignmentExpression	* ptr2 = '\\0'		6237806	0		=			
ANR	6238092	UnaryOperationExpression	* ptr2		6237806	0					
ANR	6238093	UnaryOperator	*		6237806	0					
ANR	6238094	Identifier	ptr2		6237806	1					
ANR	6238095	PrimaryExpression	'\\0'		6237806	1					
ANR	6238096	IfStatement	if ( ptrr )		6237806	1					
ANR	6238097	Condition	ptrr	162:6:3127:3130	6237806	0	True				
ANR	6238098	Identifier	ptrr		6237806	0					
ANR	6238099	CompoundStatement		59:12:1087:1087	6237806	1					
ANR	6238100	IfStatement	if ( ptrr < ptr2 )		6237806	0					
ANR	6238101	Condition	ptrr < ptr2	163:7:3142:3152	6237806	0	True				
ANR	6238102	RelationalExpression	ptrr < ptr2		6237806	0		<			
ANR	6238103	Identifier	ptrr		6237806	0					
ANR	6238104	Identifier	ptr2		6237806	1					
ANR	6238105	CompoundStatement		71:4:1456:1498	6237806	1					
ANR	6238106	IdentifierDeclStatement	char * p = strdup ( ptr2 + 2 ) ;	164:4:3161:3188	6237806	0	True				
ANR	6238107	IdentifierDecl	* p = strdup ( ptr2 + 2 )		6237806	0					
ANR	6238108	IdentifierDeclType	char *		6237806	0					
ANR	6238109	Identifier	p		6237806	1					
ANR	6238110	AssignmentExpression	* p = strdup ( ptr2 + 2 )		6237806	2		=			
ANR	6238111	Identifier	p		6237806	0					
ANR	6238112	CallExpression	strdup ( ptr2 + 2 )		6237806	1					
ANR	6238113	Callee	strdup		6237806	0					
ANR	6238114	Identifier	strdup		6237806	0					
ANR	6238115	ArgumentList	ptr2 + 2		6237806	1					
ANR	6238116	Argument	ptr2 + 2		6237806	0					
ANR	6238117	AdditiveExpression	ptr2 + 2		6237806	0		+			
ANR	6238118	Identifier	ptr2		6237806	0					
ANR	6238119	PrimaryExpression	2		6237806	1					
ANR	6238120	IdentifierDeclStatement	"char * s = spp_run_str ( ptrr + strlen ( proc -> tag_pre ) , NULL ) ;"	165:4:3194:3253	6237806	1	True				
ANR	6238121	IdentifierDecl	"* s = spp_run_str ( ptrr + strlen ( proc -> tag_pre ) , NULL )"		6237806	0					
ANR	6238122	IdentifierDeclType	char *		6237806	0					
ANR	6238123	Identifier	s		6237806	1					
ANR	6238124	AssignmentExpression	"* s = spp_run_str ( ptrr + strlen ( proc -> tag_pre ) , NULL )"		6237806	2		=			
ANR	6238125	Identifier	s		6237806	0					
ANR	6238126	CallExpression	"spp_run_str ( ptrr + strlen ( proc -> tag_pre ) , NULL )"		6237806	1					
ANR	6238127	Callee	spp_run_str		6237806	0					
ANR	6238128	Identifier	spp_run_str		6237806	0					
ANR	6238129	ArgumentList	ptrr + strlen ( proc -> tag_pre )		6237806	1					
ANR	6238130	Argument	ptrr + strlen ( proc -> tag_pre )		6237806	0					
ANR	6238131	AdditiveExpression	ptrr + strlen ( proc -> tag_pre )		6237806	0		+			
ANR	6238132	Identifier	ptrr		6237806	0					
ANR	6238133	CallExpression	strlen ( proc -> tag_pre )		6237806	1					
ANR	6238134	Callee	strlen		6237806	0					
ANR	6238135	Identifier	strlen		6237806	0					
ANR	6238136	ArgumentList	proc -> tag_pre		6237806	1					
ANR	6238137	Argument	proc -> tag_pre		6237806	0					
ANR	6238138	PtrMemberAccess	proc -> tag_pre		6237806	0					
ANR	6238139	Identifier	proc		6237806	0					
ANR	6238140	Identifier	tag_pre		6237806	1					
ANR	6238141	Argument	NULL		6237806	1					
ANR	6238142	Identifier	NULL		6237806	0					
ANR	6238143	IdentifierDeclStatement	"D fprintf ( stderr , ""strcpy(%s)(%s)\\n"" , ptrr , s ) ;"	166:4:3259:3306	6237806	2	True				
ANR	6238144	IdentifierDecl	"fprintf ( stderr , ""strcpy(%s)(%s)\\n"" , ptrr , s )"		6237806	0					
ANR	6238145	IdentifierDeclType	D		6237806	0					
ANR	6238146	Identifier	fprintf		6237806	1					
ANR	6238147	Expression	"stderr , ""strcpy(%s)(%s)\\n"" , ptrr , s"		6237806	2					
ANR	6238148	Identifier	stderr		6237806	0					
ANR	6238149	Expression	"""strcpy(%s)(%s)\\n"" , ptrr , s"		6237806	1					
ANR	6238150	PrimaryExpression	"""strcpy(%s)(%s)\\n"""		6237806	0					
ANR	6238151	Expression	"ptrr , s"		6237806	1					
ANR	6238152	Identifier	ptrr		6237806	0					
ANR	6238153	Identifier	s		6237806	1					
ANR	6238154	ExpressionStatement	"strcpy ( ptrr , s )"	167:4:3312:3328	6237806	3	True				
ANR	6238155	CallExpression	"strcpy ( ptrr , s )"		6237806	0					
ANR	6238156	Callee	strcpy		6237806	0					
ANR	6238157	Identifier	strcpy		6237806	0					
ANR	6238158	ArgumentList	ptrr		6237806	1					
ANR	6238159	Argument	ptrr		6237806	0					
ANR	6238160	Identifier	ptrr		6237806	0					
ANR	6238161	Argument	s		6237806	1					
ANR	6238162	Identifier	s		6237806	0					
ANR	6238163	ExpressionStatement	free ( s )	168:4:3334:3342	6237806	4	True				
ANR	6238164	CallExpression	free ( s )		6237806	0					
ANR	6238165	Callee	free		6237806	0					
ANR	6238166	Identifier	free		6237806	0					
ANR	6238167	ArgumentList	s		6237806	1					
ANR	6238168	Argument	s		6237806	0					
ANR	6238169	Identifier	s		6237806	0					
ANR	6238170	ExpressionStatement	ptr [ - 2 ] = proc -> tag_pre [ 0 ]	169:4:3348:3374	6237806	5	True				
ANR	6238171	AssignmentExpression	ptr [ - 2 ] = proc -> tag_pre [ 0 ]		6237806	0		=			
ANR	6238172	ArrayIndexing	ptr [ - 2 ]		6237806	0					
ANR	6238173	Identifier	ptr		6237806	0					
ANR	6238174	UnaryOperationExpression	- 2		6237806	1					
ANR	6238175	UnaryOperator	-		6237806	0					
ANR	6238176	PrimaryExpression	2		6237806	1					
ANR	6238177	ArrayIndexing	proc -> tag_pre [ 0 ]		6237806	1					
ANR	6238178	PtrMemberAccess	proc -> tag_pre		6237806	0					
ANR	6238179	Identifier	proc		6237806	0					
ANR	6238180	Identifier	tag_pre		6237806	1					
ANR	6238181	PrimaryExpression	0		6237806	1					
ANR	6238182	IdentifierDeclStatement	"D fprintf ( stderr , ""strcat(%s)(%s)\\n"" , ptrr , p ) ;"	171:4:3408:3455	6237806	6	True				
ANR	6238183	IdentifierDecl	"fprintf ( stderr , ""strcat(%s)(%s)\\n"" , ptrr , p )"		6237806	0					
ANR	6238184	IdentifierDeclType	D		6237806	0					
ANR	6238185	Identifier	fprintf		6237806	1					
ANR	6238186	Expression	"stderr , ""strcat(%s)(%s)\\n"" , ptrr , p"		6237806	2					
ANR	6238187	Identifier	stderr		6237806	0					
ANR	6238188	Expression	"""strcat(%s)(%s)\\n"" , ptrr , p"		6237806	1					
ANR	6238189	PrimaryExpression	"""strcat(%s)(%s)\\n"""		6237806	0					
ANR	6238190	Expression	"ptrr , p"		6237806	1					
ANR	6238191	Identifier	ptrr		6237806	0					
ANR	6238192	Identifier	p		6237806	1					
ANR	6238193	ExpressionStatement	"strcat ( ptrr , p )"	172:4:3461:3477	6237806	7	True				
ANR	6238194	CallExpression	"strcat ( ptrr , p )"		6237806	0					
ANR	6238195	Callee	strcat		6237806	0					
ANR	6238196	Identifier	strcat		6237806	0					
ANR	6238197	ArgumentList	ptrr		6237806	1					
ANR	6238198	Argument	ptrr		6237806	0					
ANR	6238199	Identifier	ptrr		6237806	0					
ANR	6238200	Argument	p		6237806	1					
ANR	6238201	Identifier	p		6237806	0					
ANR	6238202	ExpressionStatement	buf = ptr - 2	173:4:3483:3496	6237806	8	True				
ANR	6238203	AssignmentExpression	buf = ptr - 2		6237806	0		=			
ANR	6238204	Identifier	buf		6237806	0					
ANR	6238205	AdditiveExpression	ptr - 2		6237806	1		-			
ANR	6238206	Identifier	ptr		6237806	0					
ANR	6238207	PrimaryExpression	2		6237806	1					
ANR	6238208	IdentifierDeclStatement	"D fprintf ( stderr , ""CONTINUE (%s)\\n"" , buf ) ;"	174:4:3502:3544	6237806	9	True				
ANR	6238209	IdentifierDecl	"fprintf ( stderr , ""CONTINUE (%s)\\n"" , buf )"		6237806	0					
ANR	6238210	IdentifierDeclType	D		6237806	0					
ANR	6238211	Identifier	fprintf		6237806	1					
ANR	6238212	Expression	"stderr , ""CONTINUE (%s)\\n"" , buf"		6237806	2					
ANR	6238213	Identifier	stderr		6237806	0					
ANR	6238214	Expression	"""CONTINUE (%s)\\n"" , buf"		6237806	1					
ANR	6238215	PrimaryExpression	"""CONTINUE (%s)\\n"""		6237806	0					
ANR	6238216	Identifier	buf		6237806	1					
ANR	6238217	ExpressionStatement	free ( p )	175:4:3550:3558	6237806	10	True				
ANR	6238218	CallExpression	free ( p )		6237806	0					
ANR	6238219	Callee	free		6237806	0					
ANR	6238220	Identifier	free		6237806	0					
ANR	6238221	ArgumentList	p		6237806	1					
ANR	6238222	Argument	p		6237806	0					
ANR	6238223	Identifier	p		6237806	0					
ANR	6238224	ExpressionStatement	ptrr = NULL	176:4:3564:3575	6237806	11	True				
ANR	6238225	AssignmentExpression	ptrr = NULL		6237806	0		=			
ANR	6238226	Identifier	ptrr		6237806	0					
ANR	6238227	Identifier	NULL		6237806	1					
ANR	6238228	GotoStatement	goto retry ;	177:4:3581:3591	6237806	12	True				
ANR	6238229	Identifier	retry		6237806	0					
ANR	6238230	IfStatement	if ( proc -> buf . lbuf && proc -> buf . lbuf [ 0 ] )		6237806	2					
ANR	6238231	Condition	proc -> buf . lbuf && proc -> buf . lbuf [ 0 ]	180:6:3608:3642	6237806	0	True				
ANR	6238232	AndExpression	proc -> buf . lbuf && proc -> buf . lbuf [ 0 ]		6237806	0		&&			
ANR	6238233	MemberAccess	proc -> buf . lbuf		6237806	0					
ANR	6238234	PtrMemberAccess	proc -> buf		6237806	0					
ANR	6238235	Identifier	proc		6237806	0					
ANR	6238236	Identifier	buf		6237806	1					
ANR	6238237	Identifier	lbuf		6237806	1					
ANR	6238238	ArrayIndexing	proc -> buf . lbuf [ 0 ]		6237806	1					
ANR	6238239	MemberAccess	proc -> buf . lbuf		6237806	0					
ANR	6238240	PtrMemberAccess	proc -> buf		6237806	0					
ANR	6238241	Identifier	proc		6237806	0					
ANR	6238242	Identifier	buf		6237806	1					
ANR	6238243	Identifier	lbuf		6237806	1					
ANR	6238244	PrimaryExpression	0		6237806	1					
ANR	6238245	CompoundStatement		78:3:1604:1644	6237806	1					
ANR	6238246	IdentifierDeclStatement	"D printf ( ""==> 1 (%s)\\n"" , proc -> buf . lbuf ) ;"	181:3:3650:3690	6237806	0	True				
ANR	6238247	IdentifierDecl	"printf ( ""==> 1 (%s)\\n"" , proc -> buf . lbuf )"		6237806	0					
ANR	6238248	IdentifierDeclType	D		6237806	0					
ANR	6238249	Identifier	printf		6237806	1					
ANR	6238250	Expression	"""==> 1 (%s)\\n"" , proc -> buf . lbuf"		6237806	2					
ANR	6238251	PrimaryExpression	"""==> 1 (%s)\\n"""		6237806	0					
ANR	6238252	MemberAccess	proc -> buf . lbuf		6237806	1					
ANR	6238253	PtrMemberAccess	proc -> buf		6237806	0					
ANR	6238254	Identifier	proc		6237806	0					
ANR	6238255	Identifier	buf		6237806	1					
ANR	6238256	Identifier	lbuf		6237806	1					
ANR	6238257	IfStatement	if ( ptr )		6237806	1					
ANR	6238258	Condition	ptr	182:7:3699:3701	6237806	0	True				
ANR	6238259	Identifier	ptr		6237806	0					
ANR	6238260	CompoundStatement		79:12:1658:1658	6237806	1					
ANR	6238261	ExpressionStatement	"lbuf_strcat ( & proc -> buf , buf )"	183:4:3710:3739	6237806	0	True				
ANR	6238262	CallExpression	"lbuf_strcat ( & proc -> buf , buf )"		6237806	0					
ANR	6238263	Callee	lbuf_strcat		6237806	0					
ANR	6238264	Identifier	lbuf_strcat		6237806	0					
ANR	6238265	ArgumentList	& proc -> buf		6237806	1					
ANR	6238266	Argument	& proc -> buf		6237806	0					
ANR	6238267	UnaryOperationExpression	& proc -> buf		6237806	0					
ANR	6238268	UnaryOperator	&		6237806	0					
ANR	6238269	PtrMemberAccess	proc -> buf		6237806	1					
ANR	6238270	Identifier	proc		6237806	0					
ANR	6238271	Identifier	buf		6237806	1					
ANR	6238272	Argument	buf		6237806	1					
ANR	6238273	Identifier	buf		6237806	0					
ANR	6238274	IfStatement	"if ( do_fputs ( out , buf ) )"		6237806	1					
ANR	6238275	Condition	"do_fputs ( out , buf )"	184:8:3749:3767	6237806	0	True				
ANR	6238276	CallExpression	"do_fputs ( out , buf )"		6237806	0					
ANR	6238277	Callee	do_fputs		6237806	0					
ANR	6238278	Identifier	do_fputs		6237806	0					
ANR	6238279	ArgumentList	out		6237806	1					
ANR	6238280	Argument	out		6237806	0					
ANR	6238281	Identifier	out		6237806	0					
ANR	6238282	Argument	buf		6237806	1					
ANR	6238283	Identifier	buf		6237806	0					
ANR	6238284	CompoundStatement		81:29:1724:1724	6237806	1					
ANR	6238285	ExpressionStatement	printed = 1	185:5:3777:3788	6237806	0	True				
ANR	6238286	AssignmentExpression	printed = 1		6237806	0		=			
ANR	6238287	Identifier	printed		6237806	0					
ANR	6238288	PrimaryExpression	1		6237806	1					
ANR	6238289	ExpressionStatement	"spp_run ( ptr , out )"	187:4:3800:3818	6237806	2	True				
ANR	6238290	CallExpression	"spp_run ( ptr , out )"		6237806	0					
ANR	6238291	Callee	spp_run		6237806	0					
ANR	6238292	Identifier	spp_run		6237806	0					
ANR	6238293	ArgumentList	ptr		6237806	1					
ANR	6238294	Argument	ptr		6237806	0					
ANR	6238295	Identifier	ptr		6237806	0					
ANR	6238296	Argument	out		6237806	1					
ANR	6238297	Identifier	out		6237806	0					
ANR	6238298	ElseStatement	else		6237806	0					
ANR	6238299	CompoundStatement		89:4:1923:1972	6237806	0					
ANR	6238300	ExpressionStatement	"lbuf_strcat ( & proc -> buf , buf )"	189:4:3836:3865	6237806	0	True				
ANR	6238301	CallExpression	"lbuf_strcat ( & proc -> buf , buf )"		6237806	0					
ANR	6238302	Callee	lbuf_strcat		6237806	0					
ANR	6238303	Identifier	lbuf_strcat		6237806	0					
ANR	6238304	ArgumentList	& proc -> buf		6237806	1					
ANR	6238305	Argument	& proc -> buf		6237806	0					
ANR	6238306	UnaryOperationExpression	& proc -> buf		6237806	0					
ANR	6238307	UnaryOperator	&		6237806	0					
ANR	6238308	PtrMemberAccess	proc -> buf		6237806	1					
ANR	6238309	Identifier	proc		6237806	0					
ANR	6238310	Identifier	buf		6237806	1					
ANR	6238311	Argument	buf		6237806	1					
ANR	6238312	Identifier	buf		6237806	0					
ANR	6238313	IdentifierDeclStatement	"D printf ( ""=(1)=> spp_run(%s)\\n"" , proc -> buf . lbuf ) ;"	190:4:3871:3920	6237806	1	True				
ANR	6238314	IdentifierDecl	"printf ( ""=(1)=> spp_run(%s)\\n"" , proc -> buf . lbuf )"		6237806	0					
ANR	6238315	IdentifierDeclType	D		6237806	0					
ANR	6238316	Identifier	printf		6237806	1					
ANR	6238317	Expression	"""=(1)=> spp_run(%s)\\n"" , proc -> buf . lbuf"		6237806	2					
ANR	6238318	PrimaryExpression	"""=(1)=> spp_run(%s)\\n"""		6237806	0					
ANR	6238319	MemberAccess	proc -> buf . lbuf		6237806	1					
ANR	6238320	PtrMemberAccess	proc -> buf		6237806	0					
ANR	6238321	Identifier	proc		6237806	0					
ANR	6238322	Identifier	buf		6237806	1					
ANR	6238323	Identifier	lbuf		6237806	1					
ANR	6238324	ExpressionStatement	"spp_run ( proc -> buf . lbuf + delta , out )"	191:4:3926:3963	6237806	2	True				
ANR	6238325	CallExpression	"spp_run ( proc -> buf . lbuf + delta , out )"		6237806	0					
ANR	6238326	Callee	spp_run		6237806	0					
ANR	6238327	Identifier	spp_run		6237806	0					
ANR	6238328	ArgumentList	proc -> buf . lbuf + delta		6237806	1					
ANR	6238329	Argument	proc -> buf . lbuf + delta		6237806	0					
ANR	6238330	AdditiveExpression	proc -> buf . lbuf + delta		6237806	0		+			
ANR	6238331	MemberAccess	proc -> buf . lbuf		6237806	0					
ANR	6238332	PtrMemberAccess	proc -> buf		6237806	0					
ANR	6238333	Identifier	proc		6237806	0					
ANR	6238334	Identifier	buf		6237806	1					
ANR	6238335	Identifier	lbuf		6237806	1					
ANR	6238336	Identifier	delta		6237806	1					
ANR	6238337	Argument	out		6237806	1					
ANR	6238338	Identifier	out		6237806	0					
ANR	6238339	IdentifierDeclStatement	"D printf ( ""=(1)=> spp_run(%s)\\n"" , proc -> buf . lbuf ) ;"	192:4:3969:4018	6237806	3	True				
ANR	6238340	IdentifierDecl	"printf ( ""=(1)=> spp_run(%s)\\n"" , proc -> buf . lbuf )"		6237806	0					
ANR	6238341	IdentifierDeclType	D		6237806	0					
ANR	6238342	Identifier	printf		6237806	1					
ANR	6238343	Expression	"""=(1)=> spp_run(%s)\\n"" , proc -> buf . lbuf"		6237806	2					
ANR	6238344	PrimaryExpression	"""=(1)=> spp_run(%s)\\n"""		6237806	0					
ANR	6238345	MemberAccess	proc -> buf . lbuf		6237806	1					
ANR	6238346	PtrMemberAccess	proc -> buf		6237806	0					
ANR	6238347	Identifier	proc		6237806	0					
ANR	6238348	Identifier	buf		6237806	1					
ANR	6238349	Identifier	lbuf		6237806	1					
ANR	6238350	ExpressionStatement	proc -> buf . lbuf [ 0 ] = '\\0'	194:3:4028:4050	6237806	2	True				
ANR	6238351	AssignmentExpression	proc -> buf . lbuf [ 0 ] = '\\0'		6237806	0		=			
ANR	6238352	ArrayIndexing	proc -> buf . lbuf [ 0 ]		6237806	0					
ANR	6238353	MemberAccess	proc -> buf . lbuf		6237806	0					
ANR	6238354	PtrMemberAccess	proc -> buf		6237806	0					
ANR	6238355	Identifier	proc		6237806	0					
ANR	6238356	Identifier	buf		6237806	1					
ANR	6238357	Identifier	lbuf		6237806	1					
ANR	6238358	PrimaryExpression	0		6237806	1					
ANR	6238359	PrimaryExpression	'\\0'		6237806	1					
ANR	6238360	ExpressionStatement	proc -> buf . lbuf_n = 0	195:3:4055:4075	6237806	3	True				
ANR	6238361	AssignmentExpression	proc -> buf . lbuf_n = 0		6237806	0		=			
ANR	6238362	MemberAccess	proc -> buf . lbuf_n		6237806	0					
ANR	6238363	PtrMemberAccess	proc -> buf		6237806	0					
ANR	6238364	Identifier	proc		6237806	0					
ANR	6238365	Identifier	buf		6237806	1					
ANR	6238366	Identifier	lbuf_n		6237806	1					
ANR	6238367	PrimaryExpression	0		6237806	1					
ANR	6238368	ElseStatement	else		6237806	0					
ANR	6238369	CompoundStatement		94:3:2045:2075	6237806	0					
ANR	6238370	IdentifierDeclStatement	"D printf ( ""==> 2 (%s)\\n"" , ptr ) ;"	197:3:4091:4121	6237806	0	True				
ANR	6238371	IdentifierDecl	"printf ( ""==> 2 (%s)\\n"" , ptr )"		6237806	0					
ANR	6238372	IdentifierDeclType	D		6237806	0					
ANR	6238373	Identifier	printf		6237806	1					
ANR	6238374	Expression	"""==> 2 (%s)\\n"" , ptr"		6237806	2					
ANR	6238375	PrimaryExpression	"""==> 2 (%s)\\n"""		6237806	0					
ANR	6238376	Identifier	ptr		6237806	1					
ANR	6238377	IfStatement	if ( ptr )		6237806	1					
ANR	6238378	Condition	ptr	198:7:4130:4132	6237806	0	True				
ANR	6238379	Identifier	ptr		6237806	0					
ANR	6238380	CompoundStatement		102:4:2241:2283	6237806	1					
ANR	6238381	IdentifierDeclStatement	"D printf ( "" ==> 2.1: run(%s)\\n"" , ptr ) ;"	199:4:4141:4178	6237806	0	True				
ANR	6238382	IdentifierDecl	"printf ( "" ==> 2.1: run(%s)\\n"" , ptr )"		6237806	0					
ANR	6238383	IdentifierDeclType	D		6237806	0					
ANR	6238384	Identifier	printf		6237806	1					
ANR	6238385	Expression	""" ==> 2.1: run(%s)\\n"" , ptr"		6237806	2					
ANR	6238386	PrimaryExpression	""" ==> 2.1: run(%s)\\n"""		6237806	0					
ANR	6238387	Identifier	ptr		6237806	1					
ANR	6238388	ExpressionStatement	"spp_run ( ptr , out )"	200:4:4184:4202	6237806	1	True				
ANR	6238389	CallExpression	"spp_run ( ptr , out )"		6237806	0					
ANR	6238390	Callee	spp_run		6237806	0					
ANR	6238391	Identifier	spp_run		6237806	0					
ANR	6238392	ArgumentList	ptr		6237806	1					
ANR	6238393	Argument	ptr		6237806	0					
ANR	6238394	Identifier	ptr		6237806	0					
ANR	6238395	Argument	out		6237806	1					
ANR	6238396	Identifier	out		6237806	0					
ANR	6238397	ExpressionStatement	buf = ptr2 + delta	201:4:4208:4226	6237806	2	True				
ANR	6238398	AssignmentExpression	buf = ptr2 + delta		6237806	0		=			
ANR	6238399	Identifier	buf		6237806	0					
ANR	6238400	AdditiveExpression	ptr2 + delta		6237806	1		+			
ANR	6238401	Identifier	ptr2		6237806	0					
ANR	6238402	Identifier	delta		6237806	1					
ANR	6238403	IfStatement	if ( buf [ 0 ] == '\\n' && printed )		6237806	3					
ANR	6238404	Condition	buf [ 0 ] == '\\n' && printed	202:8:4236:4260	6237806	0	True				
ANR	6238405	AndExpression	buf [ 0 ] == '\\n' && printed		6237806	0		&&			
ANR	6238406	EqualityExpression	buf [ 0 ] == '\\n'		6237806	0		==			
ANR	6238407	ArrayIndexing	buf [ 0 ]		6237806	0					
ANR	6238408	Identifier	buf		6237806	0					
ANR	6238409	PrimaryExpression	0		6237806	1					
ANR	6238410	PrimaryExpression	'\\n'		6237806	1					
ANR	6238411	Identifier	printed		6237806	1					
ANR	6238412	CompoundStatement		99:35:2217:2217	6237806	1					
ANR	6238413	ExpressionStatement	buf ++	203:5:4270:4275	6237806	0	True				
ANR	6238414	PostIncDecOperationExpression	buf ++		6237806	0					
ANR	6238415	Identifier	buf		6237806	0					
ANR	6238416	IncDec	++		6237806	1					
ANR	6238417	IdentifierDeclStatement	"D printf ( "" ==> 2.1: continue(%s)\\n"" , buf ) ;"	205:4:4287:4329	6237806	4	True				
ANR	6238418	IdentifierDecl	"printf ( "" ==> 2.1: continue(%s)\\n"" , buf )"		6237806	0					
ANR	6238419	IdentifierDeclType	D		6237806	0					
ANR	6238420	Identifier	printf		6237806	1					
ANR	6238421	Expression	""" ==> 2.1: continue(%s)\\n"" , buf"		6237806	2					
ANR	6238422	PrimaryExpression	""" ==> 2.1: continue(%s)\\n"""		6237806	0					
ANR	6238423	Identifier	buf		6237806	1					
ANR	6238424	GotoStatement	goto retry ;	206:4:4335:4345	6237806	5	True				
ANR	6238425	Identifier	retry		6237806	0					
ANR	6238426	ElseStatement	else		6237806	0					
ANR	6238427	CompoundStatement		104:10:2311:2311	6237806	0					
ANR	6238428	IfStatement	"if ( do_fputs ( out , buf ) )"		6237806	0					
ANR	6238429	Condition	"do_fputs ( out , buf )"	208:8:4367:4385	6237806	0	True				
ANR	6238430	CallExpression	"do_fputs ( out , buf )"		6237806	0					
ANR	6238431	Callee	do_fputs		6237806	0					
ANR	6238432	Identifier	do_fputs		6237806	0					
ANR	6238433	ArgumentList	out		6237806	1					
ANR	6238434	Argument	out		6237806	0					
ANR	6238435	Identifier	out		6237806	0					
ANR	6238436	Argument	buf		6237806	1					
ANR	6238437	Identifier	buf		6237806	0					
ANR	6238438	CompoundStatement		105:29:2342:2342	6237806	1					
ANR	6238439	ExpressionStatement	printed = 1	209:5:4395:4406	6237806	0	True				
ANR	6238440	AssignmentExpression	printed = 1		6237806	0		=			
ANR	6238441	Identifier	printed		6237806	0					
ANR	6238442	PrimaryExpression	1		6237806	1					
ANR	6238443	IfStatement	"if ( do_fputs ( out , buf ) )"		6237806	3					
ANR	6238444	Condition	"do_fputs ( out , buf )"	213:6:4429:4447	6237806	0	True				
ANR	6238445	CallExpression	"do_fputs ( out , buf )"		6237806	0					
ANR	6238446	Callee	do_fputs		6237806	0					
ANR	6238447	Identifier	do_fputs		6237806	0					
ANR	6238448	ArgumentList	out		6237806	1					
ANR	6238449	Argument	out		6237806	0					
ANR	6238450	Identifier	out		6237806	0					
ANR	6238451	Argument	buf		6237806	1					
ANR	6238452	Identifier	buf		6237806	0					
ANR	6238453	CompoundStatement		110:27:2404:2404	6237806	1					
ANR	6238454	ExpressionStatement	printed = 1	214:3:4455:4466	6237806	0	True				
ANR	6238455	AssignmentExpression	printed = 1		6237806	0		=			
ANR	6238456	Identifier	printed		6237806	0					
ANR	6238457	PrimaryExpression	1		6237806	1					
ANR	6238458	ElseStatement	else		6237806	0					
ANR	6238459	CompoundStatement		114:2:2438:2458	6237806	0					
ANR	6238460	IdentifierDeclStatement	"D printf ( ""==> 3\\n"" ) ;"	217:2:4484:4504	6237806	0	True				
ANR	6238461	IdentifierDecl	"printf ( ""==> 3\\n"" )"		6237806	0					
ANR	6238462	IdentifierDeclType	D		6237806	0					
ANR	6238463	Identifier	printf		6237806	1					
ANR	6238464	PrimaryExpression	"""==> 3\\n"""		6237806	2					
ANR	6238465	ExpressionStatement	"lbuf_strcat ( & proc -> buf , ptr )"	218:2:4508:4537	6237806	1	True				
ANR	6238466	CallExpression	"lbuf_strcat ( & proc -> buf , ptr )"		6237806	0					
ANR	6238467	Callee	lbuf_strcat		6237806	0					
ANR	6238468	Identifier	lbuf_strcat		6237806	0					
ANR	6238469	ArgumentList	& proc -> buf		6237806	1					
ANR	6238470	Argument	& proc -> buf		6237806	0					
ANR	6238471	UnaryOperationExpression	& proc -> buf		6237806	0					
ANR	6238472	UnaryOperator	&		6237806	0					
ANR	6238473	PtrMemberAccess	proc -> buf		6237806	1					
ANR	6238474	Identifier	proc		6237806	0					
ANR	6238475	Identifier	buf		6237806	1					
ANR	6238476	Argument	ptr		6237806	1					
ANR	6238477	Identifier	ptr		6237806	0					
ANR	6238478	ReturnType	S_API void		6237806	1					
ANR	6238479	Identifier	spp_eval		6237806	2					
ANR	6238480	ParameterList	"char * buf , Output * out"		6237806	3					
ANR	6238481	Parameter	char * buf	104:20:2021:2029	6237806	0	True				
ANR	6238482	ParameterType	char *		6237806	0					
ANR	6238483	Identifier	buf		6237806	1					
ANR	6238484	Parameter	Output * out	104:31:2032:2042	6237806	1	True				
ANR	6238485	ParameterType	Output *		6237806	0					
ANR	6238486	Identifier	out		6237806	1					
ANR	6238487	CFGEntryNode	ENTRY		6237806		True				
ANR	6238488	CFGExitNode	EXIT		6237806		True				
ANR	6238489	Symbol	proc -> buf		6237806						
ANR	6238490	Symbol	proc -> token		6237806						
ANR	6238491	Symbol	do_fputs		6237806						
ANR	6238492	Symbol	delta		6237806						
ANR	6238493	Symbol	proc -> buf . lbuf		6237806						
ANR	6238494	Symbol	out		6237806						
ANR	6238495	Symbol	printf		6237806						
ANR	6238496	Symbol	strlen		6237806						
ANR	6238497	Symbol	* delta		6237806						
ANR	6238498	Symbol	* ptr		6237806						
ANR	6238499	Symbol	* ptr2		6237806						
ANR	6238500	Symbol	* * proc		6237806						
ANR	6238501	Symbol	* proc -> buf		6237806						
ANR	6238502	Symbol	proc -> tag_begin		6237806						
ANR	6238503	Symbol	* proc -> buf . lbuf		6237806						
ANR	6238504	Symbol	& proc -> buf		6237806						
ANR	6238505	Symbol	proc		6237806						
ANR	6238506	Symbol	* buf		6237806						
ANR	6238507	Symbol	NULL		6237806						
ANR	6238508	Symbol	* proc -> tag_pre		6237806						
ANR	6238509	Symbol	fprintf		6237806						
ANR	6238510	Symbol	ptr		6237806						
ANR	6238511	Symbol	* proc		6237806						
ANR	6238512	Symbol	ptr2		6237806						
ANR	6238513	Symbol	ptrr		6237806						
ANR	6238514	Symbol	p		6237806						
ANR	6238515	Symbol	printed		6237806						
ANR	6238516	Symbol	buf		6237806						
ANR	6238517	Symbol	s		6237806						
ANR	6238518	Symbol	strstr		6237806						
ANR	6238519	Symbol	proc -> tag_pre		6237806						
ANR	6238520	Symbol	spp_run_str		6237806						
ANR	6238521	Symbol	proc -> tag_post		6237806						
ANR	6238522	Symbol	proc -> buf . lbuf_n		6237806						
ANR	6238523	Symbol	strdup		6237806						
ANR	6238524	Function	spp_io	223:0:4572:5543							
ANR	6238525	FunctionDef	"spp_io (FILE * in , Output * out)"		6238524	0					
ANR	6238526	CompoundStatement		223:41:4613:5543	6238524	0					
ANR	6238527	IdentifierDeclStatement	char buf [ 4096 ] ;	224:1:4616:4630	6238524	0	True				
ANR	6238528	IdentifierDecl	buf [ 4096 ]		6238524	0					
ANR	6238529	IdentifierDeclType	char [ 4096 ]		6238524	0					
ANR	6238530	Identifier	buf		6238524	1					
ANR	6238531	PrimaryExpression	4096		6238524	2					
ANR	6238532	IdentifierDeclStatement	int lines ;	225:1:4633:4642	6238524	1	True				
ANR	6238533	IdentifierDecl	lines		6238524	0					
ANR	6238534	IdentifierDeclType	int		6238524	0					
ANR	6238535	Identifier	lines		6238524	1					
ANR	6238536	IfStatement	if ( ! proc -> buf . lbuf )		6238524	2					
ANR	6238537	Condition	! proc -> buf . lbuf	226:5:4649:4663	6238524	0	True				
ANR	6238538	UnaryOperationExpression	! proc -> buf . lbuf		6238524	0					
ANR	6238539	UnaryOperator	!		6238524	0					
ANR	6238540	MemberAccess	proc -> buf . lbuf		6238524	1					
ANR	6238541	PtrMemberAccess	proc -> buf		6238524	0					
ANR	6238542	Identifier	proc		6238524	0					
ANR	6238543	Identifier	buf		6238524	1					
ANR	6238544	Identifier	lbuf		6238524	1					
ANR	6238545	CompoundStatement		4:22:52:52	6238524	1					
ANR	6238546	ExpressionStatement	"proc -> buf . lbuf = calloc ( 1 , 4096 )"	227:2:4670:4703	6238524	0	True				
ANR	6238547	AssignmentExpression	"proc -> buf . lbuf = calloc ( 1 , 4096 )"		6238524	0		=			
ANR	6238548	MemberAccess	proc -> buf . lbuf		6238524	0					
ANR	6238549	PtrMemberAccess	proc -> buf		6238524	0					
ANR	6238550	Identifier	proc		6238524	0					
ANR	6238551	Identifier	buf		6238524	1					
ANR	6238552	Identifier	lbuf		6238524	1					
ANR	6238553	CallExpression	"calloc ( 1 , 4096 )"		6238524	1					
ANR	6238554	Callee	calloc		6238524	0					
ANR	6238555	Identifier	calloc		6238524	0					
ANR	6238556	ArgumentList	1		6238524	1					
ANR	6238557	Argument	1		6238524	0					
ANR	6238558	PrimaryExpression	1		6238524	0					
ANR	6238559	Argument	4096		6238524	1					
ANR	6238560	PrimaryExpression	4096		6238524	0					
ANR	6238561	IfStatement	if ( ! proc -> buf . lbuf )		6238524	3					
ANR	6238562	Condition	! proc -> buf . lbuf	229:5:4713:4727	6238524	0	True				
ANR	6238563	UnaryOperationExpression	! proc -> buf . lbuf		6238524	0					
ANR	6238564	UnaryOperator	!		6238524	0					
ANR	6238565	MemberAccess	proc -> buf . lbuf		6238524	1					
ANR	6238566	PtrMemberAccess	proc -> buf		6238524	0					
ANR	6238567	Identifier	proc		6238524	0					
ANR	6238568	Identifier	buf		6238524	1					
ANR	6238569	Identifier	lbuf		6238524	1					
ANR	6238570	CompoundStatement		7:22:116:116	6238524	1					
ANR	6238571	ExpressionStatement	"fprintf ( stderr , ""Out of memory.\\n"" )"	230:2:4734:4770	6238524	0	True				
ANR	6238572	CallExpression	"fprintf ( stderr , ""Out of memory.\\n"" )"		6238524	0					
ANR	6238573	Callee	fprintf		6238524	0					
ANR	6238574	Identifier	fprintf		6238524	0					
ANR	6238575	ArgumentList	stderr		6238524	1					
ANR	6238576	Argument	stderr		6238524	0					
ANR	6238577	Identifier	stderr		6238524	0					
ANR	6238578	Argument	"""Out of memory.\\n"""		6238524	1					
ANR	6238579	PrimaryExpression	"""Out of memory.\\n"""		6238524	0					
ANR	6238580	ReturnStatement	return ;	231:2:4774:4780	6238524	1	True				
ANR	6238581	ExpressionStatement	proc -> buf . lbuf [ 0 ] = '\\0'	233:1:4786:4810	6238524	4	True				
ANR	6238582	AssignmentExpression	proc -> buf . lbuf [ 0 ] = '\\0'		6238524	0		=			
ANR	6238583	ArrayIndexing	proc -> buf . lbuf [ 0 ]		6238524	0					
ANR	6238584	MemberAccess	proc -> buf . lbuf		6238524	0					
ANR	6238585	PtrMemberAccess	proc -> buf		6238524	0					
ANR	6238586	Identifier	proc		6238524	0					
ANR	6238587	Identifier	buf		6238524	1					
ANR	6238588	Identifier	lbuf		6238524	1					
ANR	6238589	PrimaryExpression	0		6238524	1					
ANR	6238590	PrimaryExpression	'\\0'		6238524	1					
ANR	6238591	ExpressionStatement	proc -> buf . lbuf_s = 1024	234:1:4813:4836	6238524	5	True				
ANR	6238592	AssignmentExpression	proc -> buf . lbuf_s = 1024		6238524	0		=			
ANR	6238593	MemberAccess	proc -> buf . lbuf_s		6238524	0					
ANR	6238594	PtrMemberAccess	proc -> buf		6238524	0					
ANR	6238595	Identifier	proc		6238524	0					
ANR	6238596	Identifier	buf		6238524	1					
ANR	6238597	Identifier	lbuf_s		6238524	1					
ANR	6238598	PrimaryExpression	1024		6238524	1					
ANR	6238599	WhileStatement	while ( ! feof ( in ) )		6238524	6					
ANR	6238600	Condition	! feof ( in )	235:8:4846:4855	6238524	0	True				
ANR	6238601	UnaryOperationExpression	! feof ( in )		6238524	0					
ANR	6238602	UnaryOperator	!		6238524	0					
ANR	6238603	CallExpression	feof ( in )		6238524	1					
ANR	6238604	Callee	feof		6238524	0					
ANR	6238605	Identifier	feof		6238524	0					
ANR	6238606	ArgumentList	in		6238524	1					
ANR	6238607	Argument	in		6238524	0					
ANR	6238608	Identifier	in		6238524	0					
ANR	6238609	CompoundStatement		13:20:244:244	6238524	1					
ANR	6238610	ExpressionStatement	buf [ 0 ] = '\\0'	236:2:4862:4875	6238524	0	True				
ANR	6238611	AssignmentExpression	buf [ 0 ] = '\\0'		6238524	0		=			
ANR	6238612	ArrayIndexing	buf [ 0 ]		6238524	0					
ANR	6238613	Identifier	buf		6238524	0					
ANR	6238614	PrimaryExpression	0		6238524	1					
ANR	6238615	PrimaryExpression	'\\0'		6238524	1					
ANR	6238616	IfStatement	"if ( ! fgets ( buf , sizeof ( buf ) - 1 , in ) )"		6238524	1					
ANR	6238617	Condition	"! fgets ( buf , sizeof ( buf ) - 1 , in )"	237:6:4890:4923	6238524	0	True				
ANR	6238618	UnaryOperationExpression	"! fgets ( buf , sizeof ( buf ) - 1 , in )"		6238524	0					
ANR	6238619	UnaryOperator	!		6238524	0					
ANR	6238620	CallExpression	"fgets ( buf , sizeof ( buf ) - 1 , in )"		6238524	1					
ANR	6238621	Callee	fgets		6238524	0					
ANR	6238622	Identifier	fgets		6238524	0					
ANR	6238623	ArgumentList	buf		6238524	1					
ANR	6238624	Argument	buf		6238524	0					
ANR	6238625	Identifier	buf		6238524	0					
ANR	6238626	Argument	sizeof ( buf ) - 1		6238524	1					
ANR	6238627	AdditiveExpression	sizeof ( buf ) - 1		6238524	0		-			
ANR	6238628	SizeofExpression	sizeof ( buf )		6238524	0					
ANR	6238629	Sizeof	sizeof		6238524	0					
ANR	6238630	SizeofOperand	buf		6238524	1					
ANR	6238631	PrimaryExpression	1		6238524	1					
ANR	6238632	Argument	in		6238524	2					
ANR	6238633	Identifier	in		6238524	0					
ANR	6238634	CompoundStatement		15:42:312:312	6238524	1					
ANR	6238635	BreakStatement	break ;	238:3:4931:4936	6238524	0	True				
ANR	6238636	IfStatement	if ( feof ( in ) )		6238524	2					
ANR	6238637	Condition	feof ( in )	240:6:4948:4956	6238524	0	True				
ANR	6238638	CallExpression	feof ( in )		6238524	0					
ANR	6238639	Callee	feof		6238524	0					
ANR	6238640	Identifier	feof		6238524	0					
ANR	6238641	ArgumentList	in		6238524	1					
ANR	6238642	Argument	in		6238524	0					
ANR	6238643	Identifier	in		6238524	0					
ANR	6238644	BreakStatement	break ;	240:17:4959:4964	6238524	1	True				
ANR	6238645	ExpressionStatement	lines = 1	241:2:4968:4977	6238524	3	True				
ANR	6238646	AssignmentExpression	lines = 1		6238524	0		=			
ANR	6238647	Identifier	lines		6238524	0					
ANR	6238648	PrimaryExpression	1		6238524	1					
ANR	6238649	IfStatement	"if ( ! memcmp ( buf , ""#!"" , 2 ) )"		6238524	4					
ANR	6238650	Condition	"! memcmp ( buf , ""#!"" , 2 )"	242:6:4985:5006	6238524	0	True				
ANR	6238651	UnaryOperationExpression	"! memcmp ( buf , ""#!"" , 2 )"		6238524	0					
ANR	6238652	UnaryOperator	!		6238524	0					
ANR	6238653	CallExpression	"memcmp ( buf , ""#!"" , 2 )"		6238524	1					
ANR	6238654	Callee	memcmp		6238524	0					
ANR	6238655	Identifier	memcmp		6238524	0					
ANR	6238656	ArgumentList	buf		6238524	1					
ANR	6238657	Argument	buf		6238524	0					
ANR	6238658	Identifier	buf		6238524	0					
ANR	6238659	Argument	"""#!"""		6238524	1					
ANR	6238660	PrimaryExpression	"""#!"""		6238524	0					
ANR	6238661	Argument	2		6238524	2					
ANR	6238662	PrimaryExpression	2		6238524	0					
ANR	6238663	CompoundStatement		20:30:395:395	6238524	1					
ANR	6238664	IfStatement	"if ( ! fgets ( buf , sizeof ( buf ) - 1 , in ) || feof ( in ) )"		6238524	0					
ANR	6238665	Condition	"! fgets ( buf , sizeof ( buf ) - 1 , in ) || feof ( in )"	243:7:5018:5064	6238524	0	True				
ANR	6238666	OrExpression	"! fgets ( buf , sizeof ( buf ) - 1 , in ) || feof ( in )"		6238524	0		||			
ANR	6238667	UnaryOperationExpression	"! fgets ( buf , sizeof ( buf ) - 1 , in )"		6238524	0					
ANR	6238668	UnaryOperator	!		6238524	0					
ANR	6238669	CallExpression	"fgets ( buf , sizeof ( buf ) - 1 , in )"		6238524	1					
ANR	6238670	Callee	fgets		6238524	0					
ANR	6238671	Identifier	fgets		6238524	0					
ANR	6238672	ArgumentList	buf		6238524	1					
ANR	6238673	Argument	buf		6238524	0					
ANR	6238674	Identifier	buf		6238524	0					
ANR	6238675	Argument	sizeof ( buf ) - 1		6238524	1					
ANR	6238676	AdditiveExpression	sizeof ( buf ) - 1		6238524	0		-			
ANR	6238677	SizeofExpression	sizeof ( buf )		6238524	0					
ANR	6238678	Sizeof	sizeof		6238524	0					
ANR	6238679	SizeofOperand	buf		6238524	1					
ANR	6238680	PrimaryExpression	1		6238524	1					
ANR	6238681	Argument	in		6238524	2					
ANR	6238682	Identifier	in		6238524	0					
ANR	6238683	CallExpression	feof ( in )		6238524	1					
ANR	6238684	Callee	feof		6238524	0					
ANR	6238685	Identifier	feof		6238524	0					
ANR	6238686	ArgumentList	in		6238524	1					
ANR	6238687	Argument	in		6238524	0					
ANR	6238688	Identifier	in		6238524	0					
ANR	6238689	CompoundStatement		21:56:453:453	6238524	1					
ANR	6238690	BreakStatement	break ;	244:4:5073:5078	6238524	0	True				
ANR	6238691	ExpressionStatement	lines ++	246:3:5088:5095	6238524	1	True				
ANR	6238692	PostIncDecOperationExpression	lines ++		6238524	0					
ANR	6238693	Identifier	lines		6238524	0					
ANR	6238694	IncDec	++		6238524	1					
ANR	6238695	IfStatement	if ( proc -> multiline )		6238524	5					
ANR	6238696	Condition	proc -> multiline	248:6:5107:5121	6238524	0	True				
ANR	6238697	PtrMemberAccess	proc -> multiline		6238524	0					
ANR	6238698	Identifier	proc		6238524	0					
ANR	6238699	Identifier	multiline		6238524	1					
ANR	6238700	CompoundStatement		26:23:510:510	6238524	1					
ANR	6238701	WhileStatement	while ( 1 )		6238524	0					
ANR	6238702	Condition	1	249:10:5136:5136	6238524	0	True				
ANR	6238703	PrimaryExpression	1		6238524	0					
ANR	6238704	CompoundStatement		28:4:531:588	6238524	1					
ANR	6238705	IdentifierDeclStatement	char * eol = buf + strlen ( buf ) - strlen ( proc -> multiline ) ;	250:4:5145:5202	6238524	0	True				
ANR	6238706	IdentifierDecl	* eol = buf + strlen ( buf ) - strlen ( proc -> multiline )		6238524	0					
ANR	6238707	IdentifierDeclType	char *		6238524	0					
ANR	6238708	Identifier	eol		6238524	1					
ANR	6238709	AssignmentExpression	* eol = buf + strlen ( buf ) - strlen ( proc -> multiline )		6238524	2		=			
ANR	6238710	Identifier	eol		6238524	0					
ANR	6238711	AdditiveExpression	buf + strlen ( buf ) - strlen ( proc -> multiline )		6238524	1		+			
ANR	6238712	Identifier	buf		6238524	0					
ANR	6238713	AdditiveExpression	strlen ( buf ) - strlen ( proc -> multiline )		6238524	1		-			
ANR	6238714	CallExpression	strlen ( buf )		6238524	0					
ANR	6238715	Callee	strlen		6238524	0					
ANR	6238716	Identifier	strlen		6238524	0					
ANR	6238717	ArgumentList	buf		6238524	1					
ANR	6238718	Argument	buf		6238524	0					
ANR	6238719	Identifier	buf		6238524	0					
ANR	6238720	CallExpression	strlen ( proc -> multiline )		6238524	1					
ANR	6238721	Callee	strlen		6238524	0					
ANR	6238722	Identifier	strlen		6238524	0					
ANR	6238723	ArgumentList	proc -> multiline		6238524	1					
ANR	6238724	Argument	proc -> multiline		6238524	0					
ANR	6238725	PtrMemberAccess	proc -> multiline		6238524	0					
ANR	6238726	Identifier	proc		6238524	0					
ANR	6238727	Identifier	multiline		6238524	1					
ANR	6238728	IfStatement	"if ( ! strcmp ( eol , proc -> multiline ) )"		6238524	1					
ANR	6238729	Condition	"! strcmp ( eol , proc -> multiline )"	251:8:5212:5241	6238524	0	True				
ANR	6238730	UnaryOperationExpression	"! strcmp ( eol , proc -> multiline )"		6238524	0					
ANR	6238731	UnaryOperator	!		6238524	0					
ANR	6238732	CallExpression	"strcmp ( eol , proc -> multiline )"		6238524	1					
ANR	6238733	Callee	strcmp		6238524	0					
ANR	6238734	Identifier	strcmp		6238524	0					
ANR	6238735	ArgumentList	eol		6238524	1					
ANR	6238736	Argument	eol		6238524	0					
ANR	6238737	Identifier	eol		6238524	0					
ANR	6238738	Argument	proc -> multiline		6238524	1					
ANR	6238739	PtrMemberAccess	proc -> multiline		6238524	0					
ANR	6238740	Identifier	proc		6238524	0					
ANR	6238741	Identifier	multiline		6238524	1					
ANR	6238742	CompoundStatement		30:5:637:680	6238524	1					
ANR	6238743	IdentifierDeclStatement	"D fprintf ( stderr , ""Multiline detected!\\n"" ) ;"	252:5:5251:5294	6238524	0	True				
ANR	6238744	IdentifierDecl	"fprintf ( stderr , ""Multiline detected!\\n"" )"		6238524	0					
ANR	6238745	IdentifierDeclType	D		6238524	0					
ANR	6238746	Identifier	fprintf		6238524	1					
ANR	6238747	Expression	"stderr , ""Multiline detected!\\n"""		6238524	2					
ANR	6238748	Identifier	stderr		6238524	0					
ANR	6238749	PrimaryExpression	"""Multiline detected!\\n"""		6238524	1					
ANR	6238750	IfStatement	"if ( ! fgets ( eol , 1023 , in ) )"		6238524	1					
ANR	6238751	Condition	"! fgets ( eol , 1023 , in )"	253:9:5305:5326	6238524	0	True				
ANR	6238752	UnaryOperationExpression	"! fgets ( eol , 1023 , in )"		6238524	0					
ANR	6238753	UnaryOperator	!		6238524	0					
ANR	6238754	CallExpression	"fgets ( eol , 1023 , in )"		6238524	1					
ANR	6238755	Callee	fgets		6238524	0					
ANR	6238756	Identifier	fgets		6238524	0					
ANR	6238757	ArgumentList	eol		6238524	1					
ANR	6238758	Argument	eol		6238524	0					
ANR	6238759	Identifier	eol		6238524	0					
ANR	6238760	Argument	1023		6238524	1					
ANR	6238761	PrimaryExpression	1023		6238524	0					
ANR	6238762	Argument	in		6238524	2					
ANR	6238763	Identifier	in		6238524	0					
ANR	6238764	CompoundStatement		31:33:715:715	6238524	1					
ANR	6238765	BreakStatement	break ;	254:6:5337:5342	6238524	0	True				
ANR	6238766	IfStatement	if ( feof ( in ) )		6238524	2					
ANR	6238767	Condition	feof ( in )	256:9:5360:5368	6238524	0	True				
ANR	6238768	CallExpression	feof ( in )		6238524	0					
ANR	6238769	Callee	feof		6238524	0					
ANR	6238770	Identifier	feof		6238524	0					
ANR	6238771	ArgumentList	in		6238524	1					
ANR	6238772	Argument	in		6238524	0					
ANR	6238773	Identifier	in		6238524	0					
ANR	6238774	CompoundStatement		34:20:757:757	6238524	1					
ANR	6238775	BreakStatement	break ;	257:6:5379:5384	6238524	0	True				
ANR	6238776	ExpressionStatement	lines ++	259:5:5398:5405	6238524	3	True				
ANR	6238777	PostIncDecOperationExpression	lines ++		6238524	0					
ANR	6238778	Identifier	lines		6238524	0					
ANR	6238779	IncDec	++		6238524	1					
ANR	6238780	ElseStatement	else		6238524	0					
ANR	6238781	CompoundStatement		38:11:804:804	6238524	0					
ANR	6238782	BreakStatement	break ;	261:5:5425:5430	6238524	0	True				
ANR	6238783	ExpressionStatement	"spp_eval ( buf , out )"	265:2:5449:5468	6238524	6	True				
ANR	6238784	CallExpression	"spp_eval ( buf , out )"		6238524	0					
ANR	6238785	Callee	spp_eval		6238524	0					
ANR	6238786	Identifier	spp_eval		6238524	0					
ANR	6238787	ArgumentList	buf		6238524	1					
ANR	6238788	Argument	buf		6238524	0					
ANR	6238789	Identifier	buf		6238524	0					
ANR	6238790	Argument	out		6238524	1					
ANR	6238791	Identifier	out		6238524	0					
ANR	6238792	ExpressionStatement	proc -> state . lineno += lines	266:2:5472:5499	6238524	7	True				
ANR	6238793	AssignmentExpression	proc -> state . lineno += lines		6238524	0		+=			
ANR	6238794	MemberAccess	proc -> state . lineno		6238524	0					
ANR	6238795	PtrMemberAccess	proc -> state		6238524	0					
ANR	6238796	Identifier	proc		6238524	0					
ANR	6238797	Identifier	state		6238524	1					
ANR	6238798	Identifier	lineno		6238524	1					
ANR	6238799	Identifier	lines		6238524	1					
ANR	6238800	ExpressionStatement	"( void ) do_fputs ( out , proc -> buf . lbuf )"	268:1:5505:5541	6238524	7	True				
ANR	6238801	CastExpression	"( void ) do_fputs ( out , proc -> buf . lbuf )"		6238524	0					
ANR	6238802	CastTarget	void		6238524	0					
ANR	6238803	CallExpression	"do_fputs ( out , proc -> buf . lbuf )"		6238524	1					
ANR	6238804	Callee	do_fputs		6238524	0					
ANR	6238805	Identifier	do_fputs		6238524	0					
ANR	6238806	ArgumentList	out		6238524	1					
ANR	6238807	Argument	out		6238524	0					
ANR	6238808	Identifier	out		6238524	0					
ANR	6238809	Argument	proc -> buf . lbuf		6238524	1					
ANR	6238810	MemberAccess	proc -> buf . lbuf		6238524	0					
ANR	6238811	PtrMemberAccess	proc -> buf		6238524	0					
ANR	6238812	Identifier	proc		6238524	0					
ANR	6238813	Identifier	buf		6238524	1					
ANR	6238814	Identifier	lbuf		6238524	1					
ANR	6238815	ReturnType	S_API void		6238524	1					
ANR	6238816	Identifier	spp_io		6238524	2					
ANR	6238817	ParameterList	"FILE * in , Output * out"		6238524	3					
ANR	6238818	Parameter	FILE * in	223:18:4590:4597	6238524	0	True				
ANR	6238819	ParameterType	FILE *		6238524	0					
ANR	6238820	Identifier	in		6238524	1					
ANR	6238821	Parameter	Output * out	223:28:4600:4610	6238524	1	True				
ANR	6238822	ParameterType	Output *		6238524	0					
ANR	6238823	Identifier	out		6238524	1					
ANR	6238824	CFGEntryNode	ENTRY		6238524		True				
ANR	6238825	CFGExitNode	EXIT		6238524		True				
ANR	6238826	Symbol	proc -> buf		6238524						
ANR	6238827	Symbol	eol		6238524						
ANR	6238828	Symbol	calloc		6238524						
ANR	6238829	Symbol	proc -> buf . lbuf		6238524						
ANR	6238830	Symbol	fgets		6238524						
ANR	6238831	Symbol	out		6238524						
ANR	6238832	Symbol	strlen		6238524						
ANR	6238833	Symbol	memcmp		6238524						
ANR	6238834	Symbol	* * proc		6238524						
ANR	6238835	Symbol	* proc -> buf		6238524						
ANR	6238836	Symbol	lines		6238524						
ANR	6238837	Symbol	* proc -> buf . lbuf		6238524						
ANR	6238838	Symbol	proc -> state . lineno		6238524						
ANR	6238839	Symbol	strcmp		6238524						
ANR	6238840	Symbol	proc		6238524						
ANR	6238841	Symbol	* buf		6238524						
ANR	6238842	Symbol	in		6238524						
ANR	6238843	Symbol	proc -> state		6238524						
ANR	6238844	Symbol	stderr		6238524						
ANR	6238845	Symbol	fprintf		6238524						
ANR	6238846	Symbol	* proc		6238524						
ANR	6238847	Symbol	buf		6238524						
ANR	6238848	Symbol	feof		6238524						
ANR	6238849	Symbol	proc -> multiline		6238524						
ANR	6238850	Symbol	proc -> buf . lbuf_s		6238524						
ANR	6238851	Function	spp_file	271:0:5546:5793							
ANR	6238852	FunctionDef	"spp_file (const char * file , Output * out)"		6238851	0					
ANR	6238853	CompoundStatement		271:50:5596:5793	6238851	0					
ANR	6238854	IdentifierDeclStatement	"FILE * in = fopen ( file , ""r"" ) ;"	272:1:5599:5627	6238851	0	True				
ANR	6238855	IdentifierDecl	"* in = fopen ( file , ""r"" )"		6238851	0					
ANR	6238856	IdentifierDeclType	FILE *		6238851	0					
ANR	6238857	Identifier	in		6238851	1					
ANR	6238858	AssignmentExpression	"* in = fopen ( file , ""r"" )"		6238851	2		=			
ANR	6238859	Identifier	in		6238851	0					
ANR	6238860	CallExpression	"fopen ( file , ""r"" )"		6238851	1					
ANR	6238861	Callee	fopen		6238851	0					
ANR	6238862	Identifier	fopen		6238851	0					
ANR	6238863	ArgumentList	file		6238851	1					
ANR	6238864	Argument	file		6238851	0					
ANR	6238865	Identifier	file		6238851	0					
ANR	6238866	Argument	"""r"""		6238851	1					
ANR	6238867	PrimaryExpression	"""r"""		6238851	0					
ANR	6238868	IdentifierDeclStatement	"D fprintf ( stderr , ""SPP-FILE(%s)\\n"" , file ) ;"	273:1:5630:5672	6238851	1	True				
ANR	6238869	IdentifierDecl	"fprintf ( stderr , ""SPP-FILE(%s)\\n"" , file )"		6238851	0					
ANR	6238870	IdentifierDeclType	D		6238851	0					
ANR	6238871	Identifier	fprintf		6238851	1					
ANR	6238872	Expression	"stderr , ""SPP-FILE(%s)\\n"" , file"		6238851	2					
ANR	6238873	Identifier	stderr		6238851	0					
ANR	6238874	Expression	"""SPP-FILE(%s)\\n"" , file"		6238851	1					
ANR	6238875	PrimaryExpression	"""SPP-FILE(%s)\\n"""		6238851	0					
ANR	6238876	Identifier	file		6238851	1					
ANR	6238877	IfStatement	if ( in )		6238851	2					
ANR	6238878	Condition	in	274:5:5679:5680	6238851	0	True				
ANR	6238879	Identifier	in		6238851	0					
ANR	6238880	CompoundStatement		4:9:86:86	6238851	1					
ANR	6238881	ExpressionStatement	"spp_io ( in , out )"	275:2:5687:5703	6238851	0	True				
ANR	6238882	CallExpression	"spp_io ( in , out )"		6238851	0					
ANR	6238883	Callee	spp_io		6238851	0					
ANR	6238884	Identifier	spp_io		6238851	0					
ANR	6238885	ArgumentList	in		6238851	1					
ANR	6238886	Argument	in		6238851	0					
ANR	6238887	Identifier	in		6238851	0					
ANR	6238888	Argument	out		6238851	1					
ANR	6238889	Identifier	out		6238851	0					
ANR	6238890	ExpressionStatement	fclose ( in )	276:2:5707:5718	6238851	1	True				
ANR	6238891	CallExpression	fclose ( in )		6238851	0					
ANR	6238892	Callee	fclose		6238851	0					
ANR	6238893	Identifier	fclose		6238851	0					
ANR	6238894	ArgumentList	in		6238851	1					
ANR	6238895	Argument	in		6238851	0					
ANR	6238896	Identifier	in		6238851	0					
ANR	6238897	ReturnStatement	return 1 ;	277:2:5722:5730	6238851	2	True				
ANR	6238898	PrimaryExpression	1		6238851	0					
ANR	6238899	ExpressionStatement	"fprintf ( stderr , ""Cannot find '%s'\\n"" , file )"	279:1:5736:5780	6238851	3	True				
ANR	6238900	CallExpression	"fprintf ( stderr , ""Cannot find '%s'\\n"" , file )"		6238851	0					
ANR	6238901	Callee	fprintf		6238851	0					
ANR	6238902	Identifier	fprintf		6238851	0					
ANR	6238903	ArgumentList	stderr		6238851	1					
ANR	6238904	Argument	stderr		6238851	0					
ANR	6238905	Identifier	stderr		6238851	0					
ANR	6238906	Argument	"""Cannot find '%s'\\n"""		6238851	1					
ANR	6238907	PrimaryExpression	"""Cannot find '%s'\\n"""		6238851	0					
ANR	6238908	Argument	file		6238851	2					
ANR	6238909	Identifier	file		6238851	0					
ANR	6238910	ReturnStatement	return 0 ;	280:1:5783:5791	6238851	4	True				
ANR	6238911	PrimaryExpression	0		6238851	0					
ANR	6238912	ReturnType	S_API int		6238851	1					
ANR	6238913	Identifier	spp_file		6238851	2					
ANR	6238914	ParameterList	"const char * file , Output * out"		6238851	3					
ANR	6238915	Parameter	const char * file	271:19:5565:5580	6238851	0	True				
ANR	6238916	ParameterType	const char *		6238851	0					
ANR	6238917	Identifier	file		6238851	1					
ANR	6238918	Parameter	Output * out	271:37:5583:5593	6238851	1	True				
ANR	6238919	ParameterType	Output *		6238851	0					
ANR	6238920	Identifier	out		6238851	1					
ANR	6238921	CFGEntryNode	ENTRY		6238851		True				
ANR	6238922	CFGExitNode	EXIT		6238851		True				
ANR	6238923	Symbol	fopen		6238851						
ANR	6238924	Symbol	file		6238851						
ANR	6238925	Symbol	in		6238851						
ANR	6238926	Symbol	stderr		6238851						
ANR	6238927	Symbol	fprintf		6238851						
ANR	6238928	Symbol	out		6238851						
ANR	6238929	Function	spp_proc_list_kw	283:0:5796:5906							
ANR	6238930	FunctionDef	spp_proc_list_kw ()		6238929	0					
ANR	6238931	CompoundStatement		283:30:5826:5906	6238929	0					
ANR	6238932	IdentifierDeclStatement	int i ;	284:1:5829:5834	6238929	0	True				
ANR	6238933	IdentifierDecl	i		6238929	0					
ANR	6238934	IdentifierDeclType	int		6238929	0					
ANR	6238935	Identifier	i		6238929	1					
ANR	6238936	ForStatement	for ( i = 0 ; tags [ i ] . name ; i ++ )		6238929	1					
ANR	6238937	ForInit	i = 0 ;	285:6:5842:5847	6238929	0	True				
ANR	6238938	AssignmentExpression	i = 0		6238929	0		=			
ANR	6238939	Identifier	i		6238929	0					
ANR	6238940	PrimaryExpression	0		6238929	1					
ANR	6238941	Condition	tags [ i ] . name	285:13:5849:5860	6238929	1	True				
ANR	6238942	MemberAccess	tags [ i ] . name		6238929	0					
ANR	6238943	ArrayIndexing	tags [ i ]		6238929	0					
ANR	6238944	Identifier	tags		6238929	0					
ANR	6238945	Identifier	i		6238929	1					
ANR	6238946	Identifier	name		6238929	1					
ANR	6238947	PostIncDecOperationExpression	i ++	285:27:5863:5865	6238929	2	True				
ANR	6238948	Identifier	i		6238929	0					
ANR	6238949	IncDec	++		6238929	1					
ANR	6238950	CompoundStatement		3:32:41:41	6238929	3					
ANR	6238951	ExpressionStatement	"printf ( ""%s\\n"" , tags [ i ] . name )"	286:2:5872:5901	6238929	0	True				
ANR	6238952	CallExpression	"printf ( ""%s\\n"" , tags [ i ] . name )"		6238929	0					
ANR	6238953	Callee	printf		6238929	0					
ANR	6238954	Identifier	printf		6238929	0					
ANR	6238955	ArgumentList	"""%s\\n"""		6238929	1					
ANR	6238956	Argument	"""%s\\n"""		6238929	0					
ANR	6238957	PrimaryExpression	"""%s\\n"""		6238929	0					
ANR	6238958	Argument	tags [ i ] . name		6238929	1					
ANR	6238959	MemberAccess	tags [ i ] . name		6238929	0					
ANR	6238960	ArrayIndexing	tags [ i ]		6238929	0					
ANR	6238961	Identifier	tags		6238929	0					
ANR	6238962	Identifier	i		6238929	1					
ANR	6238963	Identifier	name		6238929	1					
ANR	6238964	ReturnType	S_API void		6238929	1					
ANR	6238965	Identifier	spp_proc_list_kw		6238929	2					
ANR	6238966	ParameterList			6238929	3					
ANR	6238967	CFGEntryNode	ENTRY		6238929		True				
ANR	6238968	CFGExitNode	EXIT		6238929		True				
ANR	6238969	Symbol	* i		6238929						
ANR	6238970	Symbol	tags [ i ] . name		6238929						
ANR	6238971	Symbol	i		6238929						
ANR	6238972	Symbol	* tags		6238929						
ANR	6238973	Symbol	tags		6238929						
ANR	6238974	Function	spp_proc_list	290:0:5909:6012							
ANR	6238975	FunctionDef	spp_proc_list ()		6238974	0					
ANR	6238976	CompoundStatement		290:27:5936:6012	6238974	0					
ANR	6238977	IdentifierDeclStatement	int i ;	291:1:5939:5944	6238974	0	True				
ANR	6238978	IdentifierDecl	i		6238974	0					
ANR	6238979	IdentifierDeclType	int		6238974	0					
ANR	6238980	Identifier	i		6238974	1					
ANR	6238981	ForStatement	for ( i = 0 ; procs [ i ] ; i ++ )		6238974	1					
ANR	6238982	ForInit	i = 0 ;	292:6:5952:5955	6238974	0	True				
ANR	6238983	AssignmentExpression	i = 0		6238974	0		=			
ANR	6238984	Identifier	i		6238974	0					
ANR	6238985	PrimaryExpression	0		6238974	1					
ANR	6238986	Condition	procs [ i ]	292:11:5957:5964	6238974	1	True				
ANR	6238987	ArrayIndexing	procs [ i ]		6238974	0					
ANR	6238988	Identifier	procs		6238974	0					
ANR	6238989	Identifier	i		6238974	1					
ANR	6238990	PostIncDecOperationExpression	i ++	292:21:5967:5969	6238974	2	True				
ANR	6238991	Identifier	i		6238974	0					
ANR	6238992	IncDec	++		6238974	1					
ANR	6238993	CompoundStatement		3:26:35:35	6238974	3					
ANR	6238994	ExpressionStatement	"printf ( ""%s\\n"" , procs [ i ] -> name )"	293:2:5976:6007	6238974	0	True				
ANR	6238995	CallExpression	"printf ( ""%s\\n"" , procs [ i ] -> name )"		6238974	0					
ANR	6238996	Callee	printf		6238974	0					
ANR	6238997	Identifier	printf		6238974	0					
ANR	6238998	ArgumentList	"""%s\\n"""		6238974	1					
ANR	6238999	Argument	"""%s\\n"""		6238974	0					
ANR	6239000	PrimaryExpression	"""%s\\n"""		6238974	0					
ANR	6239001	Argument	procs [ i ] -> name		6238974	1					
ANR	6239002	PtrMemberAccess	procs [ i ] -> name		6238974	0					
ANR	6239003	ArrayIndexing	procs [ i ]		6238974	0					
ANR	6239004	Identifier	procs		6238974	0					
ANR	6239005	Identifier	i		6238974	1					
ANR	6239006	Identifier	name		6238974	1					
ANR	6239007	ReturnType	S_API void		6238974	1					
ANR	6239008	Identifier	spp_proc_list		6238974	2					
ANR	6239009	ParameterList			6238974	3					
ANR	6239010	CFGEntryNode	ENTRY		6238974		True				
ANR	6239011	CFGExitNode	EXIT		6238974		True				
ANR	6239012	Symbol	* * procs		6238974						
ANR	6239013	Symbol	procs		6238974						
ANR	6239014	Symbol	* * i		6238974						
ANR	6239015	Symbol	* i		6238974						
ANR	6239016	Symbol	procs [ i ] -> name		6238974						
ANR	6239017	Symbol	* procs		6238974						
ANR	6239018	Symbol	i		6238974						
ANR	6239019	Function	spp_proc_set	297:0:6015:6620							
ANR	6239020	FunctionDef	"spp_proc_set (struct Proc * p , char * arg , int fail)"		6239019	0					
ANR	6239021	CompoundStatement		297:61:6076:6620	6239019	0					
ANR	6239022	IdentifierDeclStatement	"int i , j ;"	298:1:6079:6087	6239019	0	True				
ANR	6239023	IdentifierDecl	i		6239019	0					
ANR	6239024	IdentifierDeclType	int		6239019	0					
ANR	6239025	Identifier	i		6239019	1					
ANR	6239026	IdentifierDecl	j		6239019	1					
ANR	6239027	IdentifierDeclType	int		6239019	0					
ANR	6239028	Identifier	j		6239019	1					
ANR	6239029	IfStatement	if ( arg )		6239019	1					
ANR	6239030	Condition	arg	299:5:6094:6096	6239019	0	True				
ANR	6239031	Identifier	arg		6239019	0					
ANR	6239032	ForStatement	for ( j = 0 ; procs [ j ] ; j ++ )		6239019	1					
ANR	6239033	ForInit	j = 0 ;	300:6:6105:6110	6239019	0	True				
ANR	6239034	AssignmentExpression	j = 0		6239019	0		=			
ANR	6239035	Identifier	j		6239019	0					
ANR	6239036	PrimaryExpression	0		6239019	1					
ANR	6239037	Condition	procs [ j ]	300:13:6112:6119	6239019	1	True				
ANR	6239038	ArrayIndexing	procs [ j ]		6239019	0					
ANR	6239039	Identifier	procs		6239019	0					
ANR	6239040	Identifier	j		6239019	1					
ANR	6239041	PostIncDecOperationExpression	j ++	300:23:6122:6124	6239019	2	True				
ANR	6239042	Identifier	j		6239019	0					
ANR	6239043	IncDec	++		6239019	1					
ANR	6239044	CompoundStatement		4:28:50:50	6239019	3					
ANR	6239045	IfStatement	"if ( ! strcmp ( procs [ j ] -> name , arg ) )"		6239019	0					
ANR	6239046	Condition	"! strcmp ( procs [ j ] -> name , arg )"	301:6:6135:6163	6239019	0	True				
ANR	6239047	UnaryOperationExpression	"! strcmp ( procs [ j ] -> name , arg )"		6239019	0					
ANR	6239048	UnaryOperator	!		6239019	0					
ANR	6239049	CallExpression	"strcmp ( procs [ j ] -> name , arg )"		6239019	1					
ANR	6239050	Callee	strcmp		6239019	0					
ANR	6239051	Identifier	strcmp		6239019	0					
ANR	6239052	ArgumentList	procs [ j ] -> name		6239019	1					
ANR	6239053	Argument	procs [ j ] -> name		6239019	0					
ANR	6239054	PtrMemberAccess	procs [ j ] -> name		6239019	0					
ANR	6239055	ArrayIndexing	procs [ j ]		6239019	0					
ANR	6239056	Identifier	procs		6239019	0					
ANR	6239057	Identifier	j		6239019	1					
ANR	6239058	Identifier	name		6239019	1					
ANR	6239059	Argument	arg		6239019	1					
ANR	6239060	Identifier	arg		6239019	0					
ANR	6239061	CompoundStatement		7:3:114:163	6239019	1					
ANR	6239062	ExpressionStatement	proc = procs [ j ]	302:3:6171:6186	6239019	0	True				
ANR	6239063	AssignmentExpression	proc = procs [ j ]		6239019	0		=			
ANR	6239064	Identifier	proc		6239019	0					
ANR	6239065	ArrayIndexing	procs [ j ]		6239019	1					
ANR	6239066	Identifier	procs		6239019	0					
ANR	6239067	Identifier	j		6239019	1					
ANR	6239068	IdentifierDeclStatement	"D printf ( ""SET PROC:(%s)(%s)\\n"" , arg , proc -> name ) ;"	303:3:6191:6240	6239019	1	True				
ANR	6239069	IdentifierDecl	"printf ( ""SET PROC:(%s)(%s)\\n"" , arg , proc -> name )"		6239019	0					
ANR	6239070	IdentifierDeclType	D		6239019	0					
ANR	6239071	Identifier	printf		6239019	1					
ANR	6239072	Expression	"""SET PROC:(%s)(%s)\\n"" , arg , proc -> name"		6239019	2					
ANR	6239073	PrimaryExpression	"""SET PROC:(%s)(%s)\\n"""		6239019	0					
ANR	6239074	Expression	"arg , proc -> name"		6239019	1					
ANR	6239075	Identifier	arg		6239019	0					
ANR	6239076	PtrMemberAccess	proc -> name		6239019	1					
ANR	6239077	Identifier	proc		6239019	0					
ANR	6239078	Identifier	name		6239019	1					
ANR	6239079	BreakStatement	break ;	304:3:6245:6250	6239019	2	True				
ANR	6239080	IfStatement	if ( arg && * arg && ! procs [ j ] && fail )		6239019	2					
ANR	6239081	Condition	arg && * arg && ! procs [ j ] && fail	307:5:6264:6295	6239019	0	True				
ANR	6239082	AndExpression	arg && * arg && ! procs [ j ] && fail		6239019	0		&&			
ANR	6239083	Identifier	arg		6239019	0					
ANR	6239084	AndExpression	* arg && ! procs [ j ] && fail		6239019	1		&&			
ANR	6239085	UnaryOperationExpression	* arg		6239019	0					
ANR	6239086	UnaryOperator	*		6239019	0					
ANR	6239087	Identifier	arg		6239019	1					
ANR	6239088	AndExpression	! procs [ j ] && fail		6239019	1		&&			
ANR	6239089	UnaryOperationExpression	! procs [ j ]		6239019	0					
ANR	6239090	UnaryOperator	!		6239019	0					
ANR	6239091	ArrayIndexing	procs [ j ]		6239019	1					
ANR	6239092	Identifier	procs		6239019	0					
ANR	6239093	Identifier	j		6239019	1					
ANR	6239094	Identifier	fail		6239019	1					
ANR	6239095	CompoundStatement		11:39:221:221	6239019	1					
ANR	6239096	ExpressionStatement	"fprintf ( stderr , ""Invalid preprocessor name '%s'\\n"" , arg )"	308:2:6302:6359	6239019	0	True				
ANR	6239097	CallExpression	"fprintf ( stderr , ""Invalid preprocessor name '%s'\\n"" , arg )"		6239019	0					
ANR	6239098	Callee	fprintf		6239019	0					
ANR	6239099	Identifier	fprintf		6239019	0					
ANR	6239100	ArgumentList	stderr		6239019	1					
ANR	6239101	Argument	stderr		6239019	0					
ANR	6239102	Identifier	stderr		6239019	0					
ANR	6239103	Argument	"""Invalid preprocessor name '%s'\\n"""		6239019	1					
ANR	6239104	PrimaryExpression	"""Invalid preprocessor name '%s'\\n"""		6239019	0					
ANR	6239105	Argument	arg		6239019	2					
ANR	6239106	Identifier	arg		6239019	0					
ANR	6239107	ReturnStatement	return ;	309:2:6363:6369	6239019	1	True				
ANR	6239108	IfStatement	if ( ! proc )		6239019	3					
ANR	6239109	Condition	! proc	311:5:6379:6383	6239019	0	True				
ANR	6239110	UnaryOperationExpression	! proc		6239019	0					
ANR	6239111	UnaryOperator	!		6239019	0					
ANR	6239112	Identifier	proc		6239019	1					
ANR	6239113	CompoundStatement		15:12:309:309	6239019	1					
ANR	6239114	ExpressionStatement	proc = p	312:2:6390:6398	6239019	0	True				
ANR	6239115	AssignmentExpression	proc = p		6239019	0		=			
ANR	6239116	Identifier	proc		6239019	0					
ANR	6239117	Identifier	p		6239019	1					
ANR	6239118	IfStatement	if ( proc )		6239019	4					
ANR	6239119	Condition	proc	314:5:6408:6411	6239019	0	True				
ANR	6239120	Identifier	proc		6239019	0					
ANR	6239121	CompoundStatement		18:11:337:337	6239019	1					
ANR	6239122	ExpressionStatement	proc -> state . lineno = 1	315:2:6418:6440	6239019	0	True				
ANR	6239123	AssignmentExpression	proc -> state . lineno = 1		6239019	0		=			
ANR	6239124	MemberAccess	proc -> state . lineno		6239019	0					
ANR	6239125	PtrMemberAccess	proc -> state		6239019	0					
ANR	6239126	Identifier	proc		6239019	0					
ANR	6239127	Identifier	state		6239019	1					
ANR	6239128	Identifier	lineno		6239019	1					
ANR	6239129	PrimaryExpression	1		6239019	1					
ANR	6239130	ExpressionStatement	proc -> state . ifl = 0	316:2:6444:6463	6239019	1	True				
ANR	6239131	AssignmentExpression	proc -> state . ifl = 0		6239019	0		=			
ANR	6239132	MemberAccess	proc -> state . ifl		6239019	0					
ANR	6239133	PtrMemberAccess	proc -> state		6239019	0					
ANR	6239134	Identifier	proc		6239019	0					
ANR	6239135	Identifier	state		6239019	1					
ANR	6239136	Identifier	ifl		6239019	1					
ANR	6239137	PrimaryExpression	0		6239019	1					
ANR	6239138	ForStatement	for ( i = 0 ; i < MAXIFL ; i ++ )		6239019	2					
ANR	6239139	ForInit	i = 0 ;	317:7:6472:6477	6239019	0	True				
ANR	6239140	AssignmentExpression	i = 0		6239019	0		=			
ANR	6239141	Identifier	i		6239019	0					
ANR	6239142	PrimaryExpression	0		6239019	1					
ANR	6239143	Condition	i < MAXIFL	317:14:6479:6488	6239019	1	True				
ANR	6239144	RelationalExpression	i < MAXIFL		6239019	0		<			
ANR	6239145	Identifier	i		6239019	0					
ANR	6239146	Identifier	MAXIFL		6239019	1					
ANR	6239147	PostIncDecOperationExpression	i ++	317:26:6491:6493	6239019	2	True				
ANR	6239148	Identifier	i		6239019	0					
ANR	6239149	IncDec	++		6239019	1					
ANR	6239150	CompoundStatement		21:31:419:419	6239019	3					
ANR	6239151	ExpressionStatement	proc -> state . echo [ i ] = proc -> default_echo	318:3:6501:6541	6239019	0	True				
ANR	6239152	AssignmentExpression	proc -> state . echo [ i ] = proc -> default_echo		6239019	0		=			
ANR	6239153	ArrayIndexing	proc -> state . echo [ i ]		6239019	0					
ANR	6239154	MemberAccess	proc -> state . echo		6239019	0					
ANR	6239155	PtrMemberAccess	proc -> state		6239019	0					
ANR	6239156	Identifier	proc		6239019	0					
ANR	6239157	Identifier	state		6239019	1					
ANR	6239158	Identifier	echo		6239019	1					
ANR	6239159	Identifier	i		6239019	1					
ANR	6239160	PtrMemberAccess	proc -> default_echo		6239019	1					
ANR	6239161	Identifier	proc		6239019	0					
ANR	6239162	Identifier	default_echo		6239019	1					
ANR	6239163	ExpressionStatement	tags = ( struct Tag * ) proc -> tags	321:2:6585:6615	6239019	3	True				
ANR	6239164	AssignmentExpression	tags = ( struct Tag * ) proc -> tags		6239019	0		=			
ANR	6239165	Identifier	tags		6239019	0					
ANR	6239166	CastExpression	( struct Tag * ) proc -> tags		6239019	1					
ANR	6239167	CastTarget	struct Tag *		6239019	0					
ANR	6239168	PtrMemberAccess	proc -> tags		6239019	1					
ANR	6239169	Identifier	proc		6239019	0					
ANR	6239170	Identifier	tags		6239019	1					
ANR	6239171	ReturnType	S_API void		6239019	1					
ANR	6239172	Identifier	spp_proc_set		6239019	2					
ANR	6239173	ParameterList	"struct Proc * p , char * arg , int fail"		6239019	3					
ANR	6239174	Parameter	struct Proc * p	297:24:6039:6052	6239019	0	True				
ANR	6239175	ParameterType	struct Proc *		6239019	0					
ANR	6239176	Identifier	p		6239019	1					
ANR	6239177	Parameter	char * arg	297:40:6055:6063	6239019	1	True				
ANR	6239178	ParameterType	char *		6239019	0					
ANR	6239179	Identifier	arg		6239019	1					
ANR	6239180	Parameter	int fail	297:51:6066:6073	6239019	2	True				
ANR	6239181	ParameterType	int		6239019	0					
ANR	6239182	Identifier	fail		6239019	1					
ANR	6239183	CFGEntryNode	ENTRY		6239019		True				
ANR	6239184	CFGExitNode	EXIT		6239019		True				
ANR	6239185	Symbol	procs		6239019						
ANR	6239186	Symbol	printf		6239019						
ANR	6239187	Symbol	* * procs		6239019						
ANR	6239188	Symbol	proc -> state . echo		6239019						
ANR	6239189	Symbol	proc -> default_echo		6239019						
ANR	6239190	Symbol	arg		6239019						
ANR	6239191	Symbol	procs [ j ] -> name		6239019						
ANR	6239192	Symbol	* * proc		6239019						
ANR	6239193	Symbol	proc -> tags		6239019						
ANR	6239194	Symbol	proc -> state . lineno		6239019						
ANR	6239195	Symbol	strcmp		6239019						
ANR	6239196	Symbol	* * j		6239019						
ANR	6239197	Symbol	proc		6239019						
ANR	6239198	Symbol	proc -> state		6239019						
ANR	6239199	Symbol	* proc -> state . echo		6239019						
ANR	6239200	Symbol	* procs		6239019						
ANR	6239201	Symbol	proc -> state . ifl		6239019						
ANR	6239202	Symbol	i		6239019						
ANR	6239203	Symbol	MAXIFL		6239019						
ANR	6239204	Symbol	j		6239019						
ANR	6239205	Symbol	stderr		6239019						
ANR	6239206	Symbol	* proc		6239019						
ANR	6239207	Symbol	tags		6239019						
ANR	6239208	Symbol	p		6239019						
ANR	6239209	Symbol	fail		6239019						
ANR	6239210	Symbol	* i		6239019						
ANR	6239211	Symbol	* j		6239019						
ANR	6239212	Symbol	* proc -> state		6239019						
ANR	6239213	Symbol	* arg		6239019						
ANR	6239214	Function	out_printf	325:0:6623:6907							
ANR	6239215	FunctionDef	"out_printf (Output * out , char * str)"		6239214	0					
ANR	6239216	CompoundStatement		325:45:6668:6907	6239214	0					
ANR	6239217	IdentifierDeclStatement	va_list ap ;	326:1:6671:6681	6239214	0	True				
ANR	6239218	IdentifierDecl	ap		6239214	0					
ANR	6239219	IdentifierDeclType	va_list		6239214	0					
ANR	6239220	Identifier	ap		6239214	1					
ANR	6239221	ExpressionStatement	"va_start ( ap , str )"	327:1:6684:6702	6239214	1	True				
ANR	6239222	CallExpression	"va_start ( ap , str )"		6239214	0					
ANR	6239223	Callee	va_start		6239214	0					
ANR	6239224	Identifier	va_start		6239214	0					
ANR	6239225	ArgumentList	ap		6239214	1					
ANR	6239226	Argument	ap		6239214	0					
ANR	6239227	Identifier	ap		6239214	0					
ANR	6239228	Argument	str		6239214	1					
ANR	6239229	Identifier	str		6239214	0					
ANR	6239230	IfStatement	if ( out -> fout )		6239214	2					
ANR	6239231	Condition	out -> fout	328:5:6709:6717	6239214	0	True				
ANR	6239232	PtrMemberAccess	out -> fout		6239214	0					
ANR	6239233	Identifier	out		6239214	0					
ANR	6239234	Identifier	fout		6239214	1					
ANR	6239235	CompoundStatement		4:16:51:51	6239214	1					
ANR	6239236	ExpressionStatement	"vfprintf ( out -> fout , str , ap )"	329:2:6724:6753	6239214	0	True				
ANR	6239237	CallExpression	"vfprintf ( out -> fout , str , ap )"		6239214	0					
ANR	6239238	Callee	vfprintf		6239214	0					
ANR	6239239	Identifier	vfprintf		6239214	0					
ANR	6239240	ArgumentList	out -> fout		6239214	1					
ANR	6239241	Argument	out -> fout		6239214	0					
ANR	6239242	PtrMemberAccess	out -> fout		6239214	0					
ANR	6239243	Identifier	out		6239214	0					
ANR	6239244	Identifier	fout		6239214	1					
ANR	6239245	Argument	str		6239214	1					
ANR	6239246	Identifier	str		6239214	0					
ANR	6239247	Argument	ap		6239214	2					
ANR	6239248	Identifier	ap		6239214	0					
ANR	6239249	ElseStatement	else		6239214	0					
ANR	6239250	CompoundStatement		7:2:98:112	6239214	0					
ANR	6239251	IdentifierDeclStatement	char tmp [ 4096 ] ;	331:2:6767:6781	6239214	0	True				
ANR	6239252	IdentifierDecl	tmp [ 4096 ]		6239214	0					
ANR	6239253	IdentifierDeclType	char [ 4096 ]		6239214	0					
ANR	6239254	Identifier	tmp		6239214	1					
ANR	6239255	PrimaryExpression	4096		6239214	2					
ANR	6239256	ExpressionStatement	"vsnprintf ( tmp , sizeof ( tmp ) , str , ap )"	332:2:6785:6823	6239214	1	True				
ANR	6239257	CallExpression	"vsnprintf ( tmp , sizeof ( tmp ) , str , ap )"		6239214	0					
ANR	6239258	Callee	vsnprintf		6239214	0					
ANR	6239259	Identifier	vsnprintf		6239214	0					
ANR	6239260	ArgumentList	tmp		6239214	1					
ANR	6239261	Argument	tmp		6239214	0					
ANR	6239262	Identifier	tmp		6239214	0					
ANR	6239263	Argument	sizeof ( tmp )		6239214	1					
ANR	6239264	SizeofExpression	sizeof ( tmp )		6239214	0					
ANR	6239265	Sizeof	sizeof		6239214	0					
ANR	6239266	SizeofOperand	tmp		6239214	1					
ANR	6239267	Argument	str		6239214	2					
ANR	6239268	Identifier	str		6239214	0					
ANR	6239269	Argument	ap		6239214	3					
ANR	6239270	Identifier	ap		6239214	0					
ANR	6239271	ExpressionStatement	tmp [ sizeof ( tmp ) - 1 ] = 0	333:2:6827:6852	6239214	2	True				
ANR	6239272	AssignmentExpression	tmp [ sizeof ( tmp ) - 1 ] = 0		6239214	0		=			
ANR	6239273	ArrayIndexing	tmp [ sizeof ( tmp ) - 1 ]		6239214	0					
ANR	6239274	Identifier	tmp		6239214	0					
ANR	6239275	AdditiveExpression	sizeof ( tmp ) - 1		6239214	1		-			
ANR	6239276	SizeofExpression	sizeof ( tmp )		6239214	0					
ANR	6239277	Sizeof	sizeof		6239214	0					
ANR	6239278	SizeofOperand	tmp		6239214	1					
ANR	6239279	PrimaryExpression	1		6239214	1					
ANR	6239280	PrimaryExpression	0		6239214	1					
ANR	6239281	ExpressionStatement	"r_strbuf_append ( out -> cout , tmp )"	334:2:6856:6888	6239214	3	True				
ANR	6239282	CallExpression	"r_strbuf_append ( out -> cout , tmp )"		6239214	0					
ANR	6239283	Callee	r_strbuf_append		6239214	0					
ANR	6239284	Identifier	r_strbuf_append		6239214	0					
ANR	6239285	ArgumentList	out -> cout		6239214	1					
ANR	6239286	Argument	out -> cout		6239214	0					
ANR	6239287	PtrMemberAccess	out -> cout		6239214	0					
ANR	6239288	Identifier	out		6239214	0					
ANR	6239289	Identifier	cout		6239214	1					
ANR	6239290	Argument	tmp		6239214	1					
ANR	6239291	Identifier	tmp		6239214	0					
ANR	6239292	ExpressionStatement	va_end ( ap )	336:1:6894:6905	6239214	3	True				
ANR	6239293	CallExpression	va_end ( ap )		6239214	0					
ANR	6239294	Callee	va_end		6239214	0					
ANR	6239295	Identifier	va_end		6239214	0					
ANR	6239296	ArgumentList	ap		6239214	1					
ANR	6239297	Argument	ap		6239214	0					
ANR	6239298	Identifier	ap		6239214	0					
ANR	6239299	ReturnType	void		6239214	1					
ANR	6239300	Identifier	out_printf		6239214	2					
ANR	6239301	ParameterList	"Output * out , char * str"		6239214	3					
ANR	6239302	Parameter	Output * out	325:16:6639:6649	6239214	0	True				
ANR	6239303	ParameterType	Output *		6239214	0					
ANR	6239304	Identifier	out		6239214	1					
ANR	6239305	Parameter	char * str	325:29:6652:6660	6239214	1	True				
ANR	6239306	ParameterType	char *		6239214	0					
ANR	6239307	Identifier	str		6239214	1					
ANR	6239308	CFGEntryNode	ENTRY		6239214		True				
ANR	6239309	CFGExitNode	EXIT		6239214		True				
ANR	6239310	Symbol	str		6239214						
ANR	6239311	Symbol	out -> cout		6239214						
ANR	6239312	Symbol	* tmp		6239214						
ANR	6239313	Symbol	tmp		6239214						
ANR	6239314	Symbol	* out		6239214						
ANR	6239315	Symbol	out -> fout		6239214						
ANR	6239316	Symbol	out		6239214						
ANR	6239317	Symbol	ap		6239214						
