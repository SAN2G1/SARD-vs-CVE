command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	2669019	File	data/converged/CVE-2019-16718~_radare2/libr_asm_arch_arm_gnu_arm-dis.c								
ANR	2669020	ClassDef	map_type	56:0:1772:1823							
ANR	2669021	ClassDef	arm_private_data	63:0:1827:2303							
ANR	2669022	DeclStmt									
ANR	2669023	Decl							arm_feature_set	arm_feature_set	features
ANR	2669024	DeclStmt									
ANR	2669025	Decl							int	int	has_mapping_symbols
ANR	2669026	DeclStmt									
ANR	2669027	Decl							enum map_type	enum map_type	last_type
ANR	2669028	DeclStmt									
ANR	2669029	Decl							int	int	last_mapping_sym
ANR	2669030	DeclStmt									
ANR	2669031	Decl							bfd_vma	bfd_vma	last_mapping_addr
ANR	2669032	ClassDef	opcode32	80:0:2307:2594							
ANR	2669033	DeclStmt									
ANR	2669034	Decl							arm_feature_set	arm_feature_set	arch
ANR	2669035	DeclStmt									
ANR	2669036	Decl							unsigned long	unsigned long	value
ANR	2669037	DeclStmt									
ANR	2669038	Decl							unsigned long	unsigned long	mask
ANR	2669039	DeclStmt									
ANR	2669040	Decl							const char	const char *	assembler
ANR	2669041	ClassDef	opcode16	88:0:2598:2820							
ANR	2669042	DeclStmt									
ANR	2669043	Decl							arm_feature_set	arm_feature_set	arch
ANR	2669044	DeclStmt									
ANR	2669045	Decl							unsigned short	unsigned short	value
ANR	2669046	Decl							unsigned short	unsigned short	mask
ANR	2669047	DeclStmt									
ANR	2669048	Decl							const char	const char *	assembler
ANR	2669049	ClassDef	opcode_sentinel_enum	146:0:5134:5257							
ANR	2669050	DeclStmt									
ANR	2669051	Decl							opcode_sentinel_enum	opcode_sentinel_enum	opcode_sentinels
ANR	2669052	DeclStmt									
ANR	2669053	Decl							const struct opcode32	const struct opcode32 [ ]	coprocessor_opcodes
ANR	2669054	DeclStmt									
ANR	2669055	Decl							const struct opcode32	const struct opcode32 [ ]	neon_opcodes
ANR	2669056	DeclStmt									
ANR	2669057	Decl							const struct opcode32	const struct opcode32 [ ]	arm_opcodes
ANR	2669058	DeclStmt									
ANR	2669059	Decl							const struct opcode16	const struct opcode16 [ ]	thumb_opcodes
ANR	2669060	DeclStmt									
ANR	2669061	Decl							const struct opcode32	const struct opcode32 [ ]	thumb32_opcodes
ANR	2669062	ClassDef	<unnamed>	3198:8:155386:155484							
ANR	2669063	DeclStmt									
ANR	2669064	Decl							const char	const char *	name
ANR	2669065	DeclStmt									
ANR	2669066	Decl							const char	const char *	description
ANR	2669067	DeclStmt									
ANR	2669068	Decl							const char	const char * [ 16 ]	reg_names
ANR	2669069	DeclStmt									
ANR	2669070	Decl									arm_regname
ANR	2669071	DeclStmt									
ANR	2669072	Decl							const arm_regname	const arm_regname [ ]	regnames
ANR	2669073	DeclStmt									
ANR	2669074	Decl							unsigned int	unsigned int	regname_selected
ANR	2669075	DeclStmt									
ANR	2669076	Decl							bfd_boolean	bfd_boolean	force_thumb
ANR	2669077	DeclStmt									
ANR	2669078	Decl							unsigned int	unsigned int	ifthen_state
ANR	2669079	DeclStmt									
ANR	2669080	Decl							unsigned int	unsigned int	ifthen_next_state
ANR	2669081	DeclStmt									
ANR	2669082	Decl							bfd_vma	bfd_vma	ifthen_address
ANR	2669083	Function	arm_decode_bitfield	3272:0:158365:159144							
ANR	2669084	FunctionDef	"arm_decode_bitfield (const char * ptr , unsigned long insn , unsigned long * valuep , int * widthp)"		2669083	0					
ANR	2669085	CompoundStatement		3277:0:158500:159144	2669083	0					
ANR	2669086	IdentifierDeclStatement	unsigned long value = 0 ;	3278:2:158504:158527	2669083	0	True				
ANR	2669087	IdentifierDecl	value = 0		2669083	0					
ANR	2669088	IdentifierDeclType	unsigned long		2669083	0					
ANR	2669089	Identifier	value		2669083	1					
ANR	2669090	AssignmentExpression	value = 0		2669083	2		=			
ANR	2669091	Identifier	value		2669083	0					
ANR	2669092	PrimaryExpression	0		2669083	1					
ANR	2669093	IdentifierDeclStatement	int width = 0 ;	3279:2:158531:158544	2669083	1	True				
ANR	2669094	IdentifierDecl	width = 0		2669083	0					
ANR	2669095	IdentifierDeclType	int		2669083	0					
ANR	2669096	Identifier	width		2669083	1					
ANR	2669097	AssignmentExpression	width = 0		2669083	2		=			
ANR	2669098	Identifier	width		2669083	0					
ANR	2669099	PrimaryExpression	0		2669083	1					
ANR	2669100	DoStatement	do		2669083	2					
ANR	2669101	CompoundStatement		8:6:85:93	2669083	0					
ANR	2669102	IdentifierDeclStatement	"int start , end ;"	3283:6:158564:158578	2669083	0	True				
ANR	2669103	IdentifierDecl	start		2669083	0					
ANR	2669104	IdentifierDeclType	int		2669083	0					
ANR	2669105	Identifier	start		2669083	1					
ANR	2669106	IdentifierDecl	end		2669083	1					
ANR	2669107	IdentifierDeclType	int		2669083	0					
ANR	2669108	Identifier	end		2669083	1					
ANR	2669109	IdentifierDeclStatement	int bits ;	3284:6:158586:158594	2669083	1	True				
ANR	2669110	IdentifierDecl	bits		2669083	0					
ANR	2669111	IdentifierDeclType	int		2669083	0					
ANR	2669112	Identifier	bits		2669083	1					
ANR	2669113	ForStatement	for ( start = 0 ; * ptr >= '0' && * ptr <= '9' ; ptr ++ )		2669083	2					
ANR	2669114	ForInit	start = 0 ;	3286:11:158608:158617	2669083	0	True				
ANR	2669115	AssignmentExpression	start = 0		2669083	0		=			
ANR	2669116	Identifier	start		2669083	0					
ANR	2669117	PrimaryExpression	0		2669083	1					
ANR	2669118	Condition	* ptr >= '0' && * ptr <= '9'	3286:22:158619:158644	2669083	1	True				
ANR	2669119	AndExpression	* ptr >= '0' && * ptr <= '9'		2669083	0		&&			
ANR	2669120	RelationalExpression	* ptr >= '0'		2669083	0		>=			
ANR	2669121	UnaryOperationExpression	* ptr		2669083	0					
ANR	2669122	UnaryOperator	*		2669083	0					
ANR	2669123	Identifier	ptr		2669083	1					
ANR	2669124	PrimaryExpression	'0'		2669083	1					
ANR	2669125	RelationalExpression	* ptr <= '9'		2669083	1		<=			
ANR	2669126	UnaryOperationExpression	* ptr		2669083	0					
ANR	2669127	UnaryOperator	*		2669083	0					
ANR	2669128	Identifier	ptr		2669083	1					
ANR	2669129	PrimaryExpression	'9'		2669083	1					
ANR	2669130	PostIncDecOperationExpression	ptr ++	3286:50:158647:158651	2669083	2	True				
ANR	2669131	Identifier	ptr		2669083	0					
ANR	2669132	IncDec	++		2669083	1					
ANR	2669133	CompoundStatement		10:57:153:153	2669083	3					
ANR	2669134	ExpressionStatement	start = start * 10 + * ptr - '0'	3287:7:158663:158694	2669083	0	True				
ANR	2669135	AssignmentExpression	start = start * 10 + * ptr - '0'		2669083	0		=			
ANR	2669136	Identifier	start		2669083	0					
ANR	2669137	AdditiveExpression	start * 10 + * ptr - '0'		2669083	1		+			
ANR	2669138	MultiplicativeExpression	start * 10		2669083	0		*			
ANR	2669139	Identifier	start		2669083	0					
ANR	2669140	PrimaryExpression	10		2669083	1					
ANR	2669141	AdditiveExpression	* ptr - '0'		2669083	1		-			
ANR	2669142	UnaryOperationExpression	* ptr		2669083	0					
ANR	2669143	UnaryOperator	*		2669083	0					
ANR	2669144	Identifier	ptr		2669083	1					
ANR	2669145	PrimaryExpression	'0'		2669083	1					
ANR	2669146	IfStatement	if ( * ptr == '-' )		2669083	3					
ANR	2669147	Condition	* ptr == '-'	3289:10:158714:158724	2669083	0	True				
ANR	2669148	EqualityExpression	* ptr == '-'		2669083	0		==			
ANR	2669149	UnaryOperationExpression	* ptr		2669083	0					
ANR	2669150	UnaryOperator	*		2669083	0					
ANR	2669151	Identifier	ptr		2669083	1					
ANR	2669152	PrimaryExpression	'-'		2669083	1					
ANR	2669153	CompoundStatement		13:23:226:226	2669083	1					
ANR	2669154	ForStatement	"for ( end = 0 , ptr ++ ; * ptr >= '0' && * ptr <= '9' ; ptr ++ )"		2669083	0					
ANR	2669155	ForInit	"end = 0 , ptr ++ ;"	3290:12:158741:158755	2669083	0	True				
ANR	2669156	Expression	"end = 0 , ptr ++"		2669083	0					
ANR	2669157	AssignmentExpression	end = 0		2669083	0		=			
ANR	2669158	Identifier	end		2669083	0					
ANR	2669159	PrimaryExpression	0		2669083	1					
ANR	2669160	PostIncDecOperationExpression	ptr ++		2669083	1					
ANR	2669161	Identifier	ptr		2669083	0					
ANR	2669162	IncDec	++		2669083	1					
ANR	2669163	Condition	* ptr >= '0' && * ptr <= '9'	3290:28:158757:158782	2669083	1	True				
ANR	2669164	AndExpression	* ptr >= '0' && * ptr <= '9'		2669083	0		&&			
ANR	2669165	RelationalExpression	* ptr >= '0'		2669083	0		>=			
ANR	2669166	UnaryOperationExpression	* ptr		2669083	0					
ANR	2669167	UnaryOperator	*		2669083	0					
ANR	2669168	Identifier	ptr		2669083	1					
ANR	2669169	PrimaryExpression	'0'		2669083	1					
ANR	2669170	RelationalExpression	* ptr <= '9'		2669083	1		<=			
ANR	2669171	UnaryOperationExpression	* ptr		2669083	0					
ANR	2669172	UnaryOperator	*		2669083	0					
ANR	2669173	Identifier	ptr		2669083	1					
ANR	2669174	PrimaryExpression	'9'		2669083	1					
ANR	2669175	PostIncDecOperationExpression	ptr ++	3290:56:158785:158789	2669083	2	True				
ANR	2669176	Identifier	ptr		2669083	0					
ANR	2669177	IncDec	++		2669083	1					
ANR	2669178	CompoundStatement		14:63:291:291	2669083	3					
ANR	2669179	ExpressionStatement	end = end * 10 + * ptr - '0'	3291:8:158802:158829	2669083	0	True				
ANR	2669180	AssignmentExpression	end = end * 10 + * ptr - '0'		2669083	0		=			
ANR	2669181	Identifier	end		2669083	0					
ANR	2669182	AdditiveExpression	end * 10 + * ptr - '0'		2669083	1		+			
ANR	2669183	MultiplicativeExpression	end * 10		2669083	0		*			
ANR	2669184	Identifier	end		2669083	0					
ANR	2669185	PrimaryExpression	10		2669083	1					
ANR	2669186	AdditiveExpression	* ptr - '0'		2669083	1		-			
ANR	2669187	UnaryOperationExpression	* ptr		2669083	0					
ANR	2669188	UnaryOperator	*		2669083	0					
ANR	2669189	Identifier	ptr		2669083	1					
ANR	2669190	PrimaryExpression	'0'		2669083	1					
ANR	2669191	ElseStatement	else		2669083	0					
ANR	2669192	CompoundStatement		17:13:352:352	2669083	0					
ANR	2669193	ExpressionStatement	end = start	3294:7:158862:158873	2669083	0	True				
ANR	2669194	AssignmentExpression	end = start		2669083	0		=			
ANR	2669195	Identifier	end		2669083	0					
ANR	2669196	Identifier	start		2669083	1					
ANR	2669197	ExpressionStatement	bits = end - start	3296:6:158889:158907	2669083	4	True				
ANR	2669198	AssignmentExpression	bits = end - start		2669083	0		=			
ANR	2669199	Identifier	bits		2669083	0					
ANR	2669200	AdditiveExpression	end - start		2669083	1		-			
ANR	2669201	Identifier	end		2669083	0					
ANR	2669202	Identifier	start		2669083	1					
ANR	2669203	IfStatement	if ( bits < 0 )		2669083	5					
ANR	2669204	Condition	bits < 0	3297:10:158919:158926	2669083	0	True				
ANR	2669205	RelationalExpression	bits < 0		2669083	0		<			
ANR	2669206	Identifier	bits		2669083	0					
ANR	2669207	PrimaryExpression	0		2669083	1					
ANR	2669208	CompoundStatement		21:20:428:428	2669083	1					
ANR	2669209	ReturnStatement	return NULL ;	3298:0:158931:158942	2669083	0	True				
ANR	2669210	Identifier	NULL		2669083	0					
ANR	2669211	ExpressionStatement	value |= ( ( insn >> start ) & ( ( 2ul << bits ) - 1 ) ) << width	3300:6:158952:159009	2669083	6	True				
ANR	2669212	AssignmentExpression	value |= ( ( insn >> start ) & ( ( 2ul << bits ) - 1 ) ) << width		2669083	0		|=			
ANR	2669213	Identifier	value		2669083	0					
ANR	2669214	ShiftExpression	( ( insn >> start ) & ( ( 2ul << bits ) - 1 ) ) << width		2669083	1		<<			
ANR	2669215	BitAndExpression	( insn >> start ) & ( ( 2ul << bits ) - 1 )		2669083	0		&			
ANR	2669216	ShiftExpression	insn >> start		2669083	0		>>			
ANR	2669217	Identifier	insn		2669083	0					
ANR	2669218	Identifier	start		2669083	1					
ANR	2669219	AdditiveExpression	( 2ul << bits ) - 1		2669083	1		-			
ANR	2669220	ShiftExpression	2ul << bits		2669083	0		<<			
ANR	2669221	PrimaryExpression	2ul		2669083	0					
ANR	2669222	Identifier	bits		2669083	1					
ANR	2669223	PrimaryExpression	1		2669083	1					
ANR	2669224	Identifier	width		2669083	1					
ANR	2669225	ExpressionStatement	width += bits + 1	3301:6:159017:159034	2669083	7	True				
ANR	2669226	AssignmentExpression	width += bits + 1		2669083	0		+=			
ANR	2669227	Identifier	width		2669083	0					
ANR	2669228	AdditiveExpression	bits + 1		2669083	1		+			
ANR	2669229	Identifier	bits		2669083	0					
ANR	2669230	PrimaryExpression	1		2669083	1					
ANR	2669231	Condition	"* ptr ++ == ','"	3303:9:159051:159063	2669083	1	True				
ANR	2669232	EqualityExpression	"* ptr ++ == ','"		2669083	0		==			
ANR	2669233	UnaryOperationExpression	* ptr ++		2669083	0					
ANR	2669234	UnaryOperator	*		2669083	0					
ANR	2669235	PostIncDecOperationExpression	ptr ++		2669083	1					
ANR	2669236	Identifier	ptr		2669083	0					
ANR	2669237	IncDec	++		2669083	1					
ANR	2669238	PrimaryExpression	"','"		2669083	1					
ANR	2669239	ExpressionStatement	* valuep = value	3304:2:159069:159084	2669083	3	True				
ANR	2669240	AssignmentExpression	* valuep = value		2669083	0		=			
ANR	2669241	UnaryOperationExpression	* valuep		2669083	0					
ANR	2669242	UnaryOperator	*		2669083	0					
ANR	2669243	Identifier	valuep		2669083	1					
ANR	2669244	Identifier	value		2669083	1					
ANR	2669245	IfStatement	if ( widthp )		2669083	4					
ANR	2669246	Condition	widthp	3305:6:159092:159097	2669083	0	True				
ANR	2669247	Identifier	widthp		2669083	0					
ANR	2669248	CompoundStatement		29:14:599:599	2669083	1					
ANR	2669249	ExpressionStatement	* widthp = width	3306:3:159105:159120	2669083	0	True				
ANR	2669250	AssignmentExpression	* widthp = width		2669083	0		=			
ANR	2669251	UnaryOperationExpression	* widthp		2669083	0					
ANR	2669252	UnaryOperator	*		2669083	0					
ANR	2669253	Identifier	widthp		2669083	1					
ANR	2669254	Identifier	width		2669083	1					
ANR	2669255	ReturnStatement	return ptr - 1 ;	3308:2:159128:159142	2669083	5	True				
ANR	2669256	AdditiveExpression	ptr - 1		2669083	0		-			
ANR	2669257	Identifier	ptr		2669083	0					
ANR	2669258	PrimaryExpression	1		2669083	1					
ANR	2669259	ReturnType	static const char *		2669083	1					
ANR	2669260	Identifier	arm_decode_bitfield		2669083	2					
ANR	2669261	ParameterList	"const char * ptr , unsigned long insn , unsigned long * valuep , int * widthp"		2669083	3					
ANR	2669262	Parameter	const char * ptr	3273:21:158406:158420	2669083	0	True				
ANR	2669263	ParameterType	const char *		2669083	0					
ANR	2669264	Identifier	ptr		2669083	1					
ANR	2669265	Parameter	unsigned long insn	3274:7:158430:158447	2669083	1	True				
ANR	2669266	ParameterType	unsigned long		2669083	0					
ANR	2669267	Identifier	insn		2669083	1					
ANR	2669268	Parameter	unsigned long * valuep	3275:7:158457:158477	2669083	2	True				
ANR	2669269	ParameterType	unsigned long *		2669083	0					
ANR	2669270	Identifier	valuep		2669083	1					
ANR	2669271	Parameter	int * widthp	3276:7:158487:158497	2669083	3	True				
ANR	2669272	ParameterType	int *		2669083	0					
ANR	2669273	Identifier	widthp		2669083	1					
ANR	2669274	CFGEntryNode	ENTRY		2669083		True				
ANR	2669275	CFGExitNode	EXIT		2669083		True				
ANR	2669276	Symbol	* widthp		2669083						
ANR	2669277	Symbol	NULL		2669083						
ANR	2669278	Symbol	* ptr ++		2669083						
ANR	2669279	Symbol	start		2669083						
ANR	2669280	Symbol	bits		2669083						
ANR	2669281	Symbol	* valuep		2669083						
ANR	2669282	Symbol	widthp		2669083						
ANR	2669283	Symbol	ptr		2669083						
ANR	2669284	Symbol	insn		2669083						
ANR	2669285	Symbol	width		2669083						
ANR	2669286	Symbol	* ptr		2669083						
ANR	2669287	Symbol	valuep		2669083						
ANR	2669288	Symbol	end		2669083						
ANR	2669289	Symbol	value		2669083						
ANR	2669290	Function	arm_decode_shift	3311:0:159147:160048							
ANR	2669291	FunctionDef	"arm_decode_shift (long given , fprintf_ftype func , void * stream , bfd_boolean print_shift)"		2669290	0					
ANR	2669292	CompoundStatement		3314:0:159252:160048	2669290	0					
ANR	2669293	ExpressionStatement	"func ( stream , ""%s"" , arm_regnames [ given & 0xf ] )"	3315:2:159256:159302	2669290	0	True				
ANR	2669294	CallExpression	"func ( stream , ""%s"" , arm_regnames [ given & 0xf ] )"		2669290	0					
ANR	2669295	Callee	func		2669290	0					
ANR	2669296	Identifier	func		2669290	0					
ANR	2669297	ArgumentList	stream		2669290	1					
ANR	2669298	Argument	stream		2669290	0					
ANR	2669299	Identifier	stream		2669290	0					
ANR	2669300	Argument	"""%s"""		2669290	1					
ANR	2669301	PrimaryExpression	"""%s"""		2669290	0					
ANR	2669302	Argument	arm_regnames [ given & 0xf ]		2669290	2					
ANR	2669303	ArrayIndexing	arm_regnames [ given & 0xf ]		2669290	0					
ANR	2669304	Identifier	arm_regnames		2669290	0					
ANR	2669305	BitAndExpression	given & 0xf		2669290	1		&			
ANR	2669306	Identifier	given		2669290	0					
ANR	2669307	PrimaryExpression	0xf		2669290	1					
ANR	2669308	IfStatement	if ( ( given & 0xff0 ) != 0 )		2669290	1					
ANR	2669309	Condition	( given & 0xff0 ) != 0	3317:6:159311:159330	2669290	0	True				
ANR	2669310	EqualityExpression	( given & 0xff0 ) != 0		2669290	0		!=			
ANR	2669311	BitAndExpression	given & 0xff0		2669290	0		&			
ANR	2669312	Identifier	given		2669290	0					
ANR	2669313	PrimaryExpression	0xff0		2669290	1					
ANR	2669314	PrimaryExpression	0		2669290	1					
ANR	2669315	CompoundStatement		5:4:84:84	2669290	1					
ANR	2669316	IfStatement	if ( ( given & 0x10 ) == 0 )		2669290	0					
ANR	2669317	Condition	( given & 0x10 ) == 0	3319:10:159349:159367	2669290	0	True				
ANR	2669318	EqualityExpression	( given & 0x10 ) == 0		2669290	0		==			
ANR	2669319	BitAndExpression	given & 0x10		2669290	0		&			
ANR	2669320	Identifier	given		2669290	0					
ANR	2669321	PrimaryExpression	0x10		2669290	1					
ANR	2669322	PrimaryExpression	0		2669290	1					
ANR	2669323	CompoundStatement		9:3:161:192	2669290	1					
ANR	2669324	IdentifierDeclStatement	int amount = ( given & 0xf80 ) >> 7 ;	3321:3:159376:159409	2669290	0	True				
ANR	2669325	IdentifierDecl	amount = ( given & 0xf80 ) >> 7		2669290	0					
ANR	2669326	IdentifierDeclType	int		2669290	0					
ANR	2669327	Identifier	amount		2669290	1					
ANR	2669328	AssignmentExpression	amount = ( given & 0xf80 ) >> 7		2669290	2		=			
ANR	2669329	Identifier	amount		2669290	0					
ANR	2669330	ShiftExpression	( given & 0xf80 ) >> 7		2669290	1		>>			
ANR	2669331	BitAndExpression	given & 0xf80		2669290	0		&			
ANR	2669332	Identifier	given		2669290	0					
ANR	2669333	PrimaryExpression	0xf80		2669290	1					
ANR	2669334	PrimaryExpression	7		2669290	1					
ANR	2669335	IdentifierDeclStatement	int shift = ( given & 0x60 ) >> 5 ;	3322:3:159414:159445	2669290	1	True				
ANR	2669336	IdentifierDecl	shift = ( given & 0x60 ) >> 5		2669290	0					
ANR	2669337	IdentifierDeclType	int		2669290	0					
ANR	2669338	Identifier	shift		2669290	1					
ANR	2669339	AssignmentExpression	shift = ( given & 0x60 ) >> 5		2669290	2		=			
ANR	2669340	Identifier	shift		2669290	0					
ANR	2669341	ShiftExpression	( given & 0x60 ) >> 5		2669290	1		>>			
ANR	2669342	BitAndExpression	given & 0x60		2669290	0		&			
ANR	2669343	Identifier	given		2669290	0					
ANR	2669344	PrimaryExpression	0x60		2669290	1					
ANR	2669345	PrimaryExpression	5		2669290	1					
ANR	2669346	IfStatement	if ( amount == 0 )		2669290	2					
ANR	2669347	Condition	amount == 0	3324:7:159455:159465	2669290	0	True				
ANR	2669348	EqualityExpression	amount == 0		2669290	0		==			
ANR	2669349	Identifier	amount		2669290	0					
ANR	2669350	PrimaryExpression	0		2669290	1					
ANR	2669351	CompoundStatement		12:5:220:220	2669290	1					
ANR	2669352	IfStatement	if ( shift == 3 )		2669290	0					
ANR	2669353	Condition	shift == 3	3326:11:159486:159495	2669290	0	True				
ANR	2669354	EqualityExpression	shift == 3		2669290	0		==			
ANR	2669355	Identifier	shift		2669290	0					
ANR	2669356	PrimaryExpression	3		2669290	1					
ANR	2669357	CompoundStatement		14:2:247:247	2669290	1					
ANR	2669358	ExpressionStatement	"func ( stream , "", rrx"" )"	3328:4:159506:159528	2669290	0	True				
ANR	2669359	CallExpression	"func ( stream , "", rrx"" )"		2669290	0					
ANR	2669360	Callee	func		2669290	0					
ANR	2669361	Identifier	func		2669290	0					
ANR	2669362	ArgumentList	stream		2669290	1					
ANR	2669363	Argument	stream		2669290	0					
ANR	2669364	Identifier	stream		2669290	0					
ANR	2669365	Argument	""", rrx"""		2669290	1					
ANR	2669366	PrimaryExpression	""", rrx"""		2669290	0					
ANR	2669367	ReturnStatement	return ;	3329:4:159534:159540	2669290	1	True				
ANR	2669368	ExpressionStatement	amount = 32	3332:7:159554:159565	2669290	1	True				
ANR	2669369	AssignmentExpression	amount = 32		2669290	0		=			
ANR	2669370	Identifier	amount		2669290	0					
ANR	2669371	PrimaryExpression	32		2669290	1					
ANR	2669372	IfStatement	if ( print_shift )		2669290	3					
ANR	2669373	Condition	print_shift	3335:9:159584:159594	2669290	0	True				
ANR	2669374	Identifier	print_shift		2669290	0					
ANR	2669375	CompoundStatement		22:22:344:344	2669290	1					
ANR	2669376	ExpressionStatement	"func ( stream , "", %s %d"" , arm_shift [ shift ] , amount )"	3336:6:159605:159655	2669290	0	True				
ANR	2669377	CallExpression	"func ( stream , "", %s %d"" , arm_shift [ shift ] , amount )"		2669290	0					
ANR	2669378	Callee	func		2669290	0					
ANR	2669379	Identifier	func		2669290	0					
ANR	2669380	ArgumentList	stream		2669290	1					
ANR	2669381	Argument	stream		2669290	0					
ANR	2669382	Identifier	stream		2669290	0					
ANR	2669383	Argument	""", %s %d"""		2669290	1					
ANR	2669384	PrimaryExpression	""", %s %d"""		2669290	0					
ANR	2669385	Argument	arm_shift [ shift ]		2669290	2					
ANR	2669386	ArrayIndexing	arm_shift [ shift ]		2669290	0					
ANR	2669387	Identifier	arm_shift		2669290	0					
ANR	2669388	Identifier	shift		2669290	1					
ANR	2669389	Argument	amount		2669290	3					
ANR	2669390	Identifier	amount		2669290	0					
ANR	2669391	ElseStatement	else		2669290	0					
ANR	2669392	CompoundStatement		24:12:416:416	2669290	0					
ANR	2669393	ExpressionStatement	"func ( stream , "", %d"" , amount )"	3338:6:159677:159706	2669290	0	True				
ANR	2669394	CallExpression	"func ( stream , "", %d"" , amount )"		2669290	0					
ANR	2669395	Callee	func		2669290	0					
ANR	2669396	Identifier	func		2669290	0					
ANR	2669397	ArgumentList	stream		2669290	1					
ANR	2669398	Argument	stream		2669290	0					
ANR	2669399	Identifier	stream		2669290	0					
ANR	2669400	Argument	""", %d"""		2669290	1					
ANR	2669401	PrimaryExpression	""", %d"""		2669290	0					
ANR	2669402	Argument	amount		2669290	2					
ANR	2669403	Identifier	amount		2669290	0					
ANR	2669404	ElseStatement	else		2669290	0					
ANR	2669405	IfStatement	if ( ( given & 0x80 ) == 0x80 )		2669290	0					
ANR	2669406	Condition	( given & 0x80 ) == 0x80	3340:17:159732:159753	2669290	0	True				
ANR	2669407	EqualityExpression	( given & 0x80 ) == 0x80		2669290	0		==			
ANR	2669408	BitAndExpression	given & 0x80		2669290	0		&			
ANR	2669409	Identifier	given		2669290	0					
ANR	2669410	PrimaryExpression	0x80		2669290	1					
ANR	2669411	PrimaryExpression	0x80		2669290	1					
ANR	2669412	CompoundStatement		27:41:503:503	2669290	1					
ANR	2669413	ExpressionStatement	"func ( stream , "" ; <illegal shifter operand>"" )"	3341:7:159765:159810	2669290	0	True				
ANR	2669414	CallExpression	"func ( stream , "" ; <illegal shifter operand>"" )"		2669290	0					
ANR	2669415	Callee	func		2669290	0					
ANR	2669416	Identifier	func		2669290	0					
ANR	2669417	ArgumentList	stream		2669290	1					
ANR	2669418	Argument	stream		2669290	0					
ANR	2669419	Identifier	stream		2669290	0					
ANR	2669420	Argument	""" ; <illegal shifter operand>"""		2669290	1					
ANR	2669421	PrimaryExpression	""" ; <illegal shifter operand>"""		2669290	0					
ANR	2669422	ElseStatement	else		2669290	0					
ANR	2669423	IfStatement	if ( print_shift )		2669290	0					
ANR	2669424	Condition	print_shift	3342:17:159829:159839	2669290	0	True				
ANR	2669425	Identifier	print_shift		2669290	0					
ANR	2669426	CompoundStatement		29:30:589:589	2669290	1					
ANR	2669427	ExpressionStatement	"func ( stream , "", %s %s"" , arm_shift [ ( given & 0x60 ) >> 5 ] , arm_regnames [ ( given & 0xf00 ) >> 8 ] )"	3343:7:159851:159951	2669290	0	True				
ANR	2669428	CallExpression	"func ( stream , "", %s %s"" , arm_shift [ ( given & 0x60 ) >> 5 ] , arm_regnames [ ( given & 0xf00 ) >> 8 ] )"		2669290	0					
ANR	2669429	Callee	func		2669290	0					
ANR	2669430	Identifier	func		2669290	0					
ANR	2669431	ArgumentList	stream		2669290	1					
ANR	2669432	Argument	stream		2669290	0					
ANR	2669433	Identifier	stream		2669290	0					
ANR	2669434	Argument	""", %s %s"""		2669290	1					
ANR	2669435	PrimaryExpression	""", %s %s"""		2669290	0					
ANR	2669436	Argument	arm_shift [ ( given & 0x60 ) >> 5 ]		2669290	2					
ANR	2669437	ArrayIndexing	arm_shift [ ( given & 0x60 ) >> 5 ]		2669290	0					
ANR	2669438	Identifier	arm_shift		2669290	0					
ANR	2669439	ShiftExpression	( given & 0x60 ) >> 5		2669290	1		>>			
ANR	2669440	BitAndExpression	given & 0x60		2669290	0		&			
ANR	2669441	Identifier	given		2669290	0					
ANR	2669442	PrimaryExpression	0x60		2669290	1					
ANR	2669443	PrimaryExpression	5		2669290	1					
ANR	2669444	Argument	arm_regnames [ ( given & 0xf00 ) >> 8 ]		2669290	3					
ANR	2669445	ArrayIndexing	arm_regnames [ ( given & 0xf00 ) >> 8 ]		2669290	0					
ANR	2669446	Identifier	arm_regnames		2669290	0					
ANR	2669447	ShiftExpression	( given & 0xf00 ) >> 8		2669290	1		>>			
ANR	2669448	BitAndExpression	given & 0xf00		2669290	0		&			
ANR	2669449	Identifier	given		2669290	0					
ANR	2669450	PrimaryExpression	0xf00		2669290	1					
ANR	2669451	PrimaryExpression	8		2669290	1					
ANR	2669452	ElseStatement	else		2669290	0					
ANR	2669453	CompoundStatement		32:13:713:713	2669290	0					
ANR	2669454	ExpressionStatement	"func ( stream , "", %s"" , arm_regnames [ ( given & 0xf00 ) >> 8 ] )"	3346:7:159975:160032	2669290	0	True				
ANR	2669455	CallExpression	"func ( stream , "", %s"" , arm_regnames [ ( given & 0xf00 ) >> 8 ] )"		2669290	0					
ANR	2669456	Callee	func		2669290	0					
ANR	2669457	Identifier	func		2669290	0					
ANR	2669458	ArgumentList	stream		2669290	1					
ANR	2669459	Argument	stream		2669290	0					
ANR	2669460	Identifier	stream		2669290	0					
ANR	2669461	Argument	""", %s"""		2669290	1					
ANR	2669462	PrimaryExpression	""", %s"""		2669290	0					
ANR	2669463	Argument	arm_regnames [ ( given & 0xf00 ) >> 8 ]		2669290	2					
ANR	2669464	ArrayIndexing	arm_regnames [ ( given & 0xf00 ) >> 8 ]		2669290	0					
ANR	2669465	Identifier	arm_regnames		2669290	0					
ANR	2669466	ShiftExpression	( given & 0xf00 ) >> 8		2669290	1		>>			
ANR	2669467	BitAndExpression	given & 0xf00		2669290	0		&			
ANR	2669468	Identifier	given		2669290	0					
ANR	2669469	PrimaryExpression	0xf00		2669290	1					
ANR	2669470	PrimaryExpression	8		2669290	1					
ANR	2669471	ReturnType	static void		2669290	1					
ANR	2669472	Identifier	arm_decode_shift		2669290	2					
ANR	2669473	ParameterList	"long given , fprintf_ftype func , void * stream , bfd_boolean print_shift"		2669290	3					
ANR	2669474	Parameter	long given	3312:18:159177:159186	2669290	0	True				
ANR	2669475	ParameterType	long		2669290	0					
ANR	2669476	Identifier	given		2669290	1					
ANR	2669477	Parameter	fprintf_ftype func	3312:30:159189:159206	2669290	1	True				
ANR	2669478	ParameterType	fprintf_ftype		2669290	0					
ANR	2669479	Identifier	func		2669290	1					
ANR	2669480	Parameter	void * stream	3312:50:159209:159220	2669290	2	True				
ANR	2669481	ParameterType	void *		2669290	0					
ANR	2669482	Identifier	stream		2669290	1					
ANR	2669483	Parameter	bfd_boolean print_shift	3313:4:159227:159249	2669290	3	True				
ANR	2669484	ParameterType	bfd_boolean		2669290	0					
ANR	2669485	Identifier	print_shift		2669290	1					
ANR	2669486	CFGEntryNode	ENTRY		2669290		True				
ANR	2669487	CFGExitNode	EXIT		2669290		True				
ANR	2669488	Symbol	given		2669290						
ANR	2669489	Symbol	* arm_regnames		2669290						
ANR	2669490	Symbol	amount		2669290						
ANR	2669491	Symbol	arm_shift		2669290						
ANR	2669492	Symbol	func		2669290						
ANR	2669493	Symbol	stream		2669290						
ANR	2669494	Symbol	shift		2669290						
ANR	2669495	Symbol	* arm_shift		2669290						
ANR	2669496	Symbol	print_shift		2669290						
ANR	2669497	Symbol	* given		2669290						
ANR	2669498	Symbol	* shift		2669290						
ANR	2669499	Symbol	arm_regnames		2669290						
ANR	2669500	Function	print_insn_coprocessor	3365:0:160494:175144							
ANR	2669501	FunctionDef	"print_insn_coprocessor (bfd_vma pc , struct disassemble_info * info , long given , bfd_boolean thumb)"		2669500	0					
ANR	2669502	CompoundStatement		3370:0:160620:175144	2669500	0					
ANR	2669503	IdentifierDeclStatement	const struct opcode32 * insn ;	3371:2:160624:160651	2669500	0	True				
ANR	2669504	IdentifierDecl	* insn		2669500	0					
ANR	2669505	IdentifierDeclType	const struct opcode32 *		2669500	0					
ANR	2669506	Identifier	insn		2669500	1					
ANR	2669507	IdentifierDeclStatement	void * stream = info -> stream ;	3372:2:160655:160682	2669500	1	True				
ANR	2669508	IdentifierDecl	* stream = info -> stream		2669500	0					
ANR	2669509	IdentifierDeclType	void *		2669500	0					
ANR	2669510	Identifier	stream		2669500	1					
ANR	2669511	AssignmentExpression	* stream = info -> stream		2669500	2		=			
ANR	2669512	Identifier	stream		2669500	0					
ANR	2669513	PtrMemberAccess	info -> stream		2669500	1					
ANR	2669514	Identifier	info		2669500	0					
ANR	2669515	Identifier	stream		2669500	1					
ANR	2669516	IdentifierDeclStatement	fprintf_ftype func = info -> fprintf_func ;	3373:2:160686:160725	2669500	2	True				
ANR	2669517	IdentifierDecl	func = info -> fprintf_func		2669500	0					
ANR	2669518	IdentifierDeclType	fprintf_ftype		2669500	0					
ANR	2669519	Identifier	func		2669500	1					
ANR	2669520	AssignmentExpression	func = info -> fprintf_func		2669500	2		=			
ANR	2669521	Identifier	func		2669500	0					
ANR	2669522	PtrMemberAccess	info -> fprintf_func		2669500	1					
ANR	2669523	Identifier	info		2669500	0					
ANR	2669524	Identifier	fprintf_func		2669500	1					
ANR	2669525	IdentifierDeclStatement	unsigned long mask ;	3374:2:160729:160747	2669500	3	True				
ANR	2669526	IdentifierDecl	mask		2669500	0					
ANR	2669527	IdentifierDeclType	unsigned long		2669500	0					
ANR	2669528	Identifier	mask		2669500	1					
ANR	2669529	IdentifierDeclStatement	unsigned long value = 0 ;	3375:2:160751:160774	2669500	4	True				
ANR	2669530	IdentifierDecl	value = 0		2669500	0					
ANR	2669531	IdentifierDeclType	unsigned long		2669500	0					
ANR	2669532	Identifier	value		2669500	1					
ANR	2669533	AssignmentExpression	value = 0		2669500	2		=			
ANR	2669534	Identifier	value		2669500	0					
ANR	2669535	PrimaryExpression	0		2669500	1					
ANR	2669536	IdentifierDeclStatement	int cond ;	3376:2:160778:160786	2669500	5	True				
ANR	2669537	IdentifierDecl	cond		2669500	0					
ANR	2669538	IdentifierDeclType	int		2669500	0					
ANR	2669539	Identifier	cond		2669500	1					
ANR	2669540	IdentifierDeclStatement	int cp_num ;	3377:2:160790:160800	2669500	6	True				
ANR	2669541	IdentifierDecl	cp_num		2669500	0					
ANR	2669542	IdentifierDeclType	int		2669500	0					
ANR	2669543	Identifier	cp_num		2669500	1					
ANR	2669544	IdentifierDeclStatement	struct arm_private_data * private_data = info -> private_data ;	3378:2:160804:160862	2669500	7	True				
ANR	2669545	IdentifierDecl	* private_data = info -> private_data		2669500	0					
ANR	2669546	IdentifierDeclType	struct arm_private_data *		2669500	0					
ANR	2669547	Identifier	private_data		2669500	1					
ANR	2669548	AssignmentExpression	* private_data = info -> private_data		2669500	2		=			
ANR	2669549	Identifier	private_data		2669500	0					
ANR	2669550	PtrMemberAccess	info -> private_data		2669500	1					
ANR	2669551	Identifier	info		2669500	0					
ANR	2669552	Identifier	private_data		2669500	1					
ANR	2669553	IdentifierDeclStatement	arm_feature_set allowed_arches = ARM_ARCH_NONE ;	3379:2:160866:160912	2669500	8	True				
ANR	2669554	IdentifierDecl	allowed_arches = ARM_ARCH_NONE		2669500	0					
ANR	2669555	IdentifierDeclType	arm_feature_set		2669500	0					
ANR	2669556	Identifier	allowed_arches		2669500	1					
ANR	2669557	AssignmentExpression	allowed_arches = ARM_ARCH_NONE		2669500	2		=			
ANR	2669558	Identifier	ARM_ARCH_NONE		2669500	0					
ANR	2669559	Identifier	ARM_ARCH_NONE		2669500	1					
ANR	2669560	ExpressionStatement	"ARM_FEATURE_COPY ( allowed_arches , private_data -> features )"	3381:2:160917:160974	2669500	9	True				
ANR	2669561	CallExpression	"ARM_FEATURE_COPY ( allowed_arches , private_data -> features )"		2669500	0					
ANR	2669562	Callee	ARM_FEATURE_COPY		2669500	0					
ANR	2669563	Identifier	ARM_FEATURE_COPY		2669500	0					
ANR	2669564	ArgumentList	allowed_arches		2669500	1					
ANR	2669565	Argument	allowed_arches		2669500	0					
ANR	2669566	Identifier	allowed_arches		2669500	0					
ANR	2669567	Argument	private_data -> features		2669500	1					
ANR	2669568	PtrMemberAccess	private_data -> features		2669500	0					
ANR	2669569	Identifier	private_data		2669500	0					
ANR	2669570	Identifier	features		2669500	1					
ANR	2669571	ForStatement	for ( insn = coprocessor_opcodes ; insn -> assembler ; insn ++ )		2669500	10					
ANR	2669572	ForInit	insn = coprocessor_opcodes ;	3383:7:160984:161010	2669500	0	True				
ANR	2669573	AssignmentExpression	insn = coprocessor_opcodes		2669500	0		=			
ANR	2669574	Identifier	insn		2669500	0					
ANR	2669575	Identifier	coprocessor_opcodes		2669500	1					
ANR	2669576	Condition	insn -> assembler	3383:35:161012:161026	2669500	1	True				
ANR	2669577	PtrMemberAccess	insn -> assembler		2669500	0					
ANR	2669578	Identifier	insn		2669500	0					
ANR	2669579	Identifier	assembler		2669500	1					
ANR	2669580	PostIncDecOperationExpression	insn ++	3383:52:161029:161034	2669500	2	True				
ANR	2669581	Identifier	insn		2669500	0					
ANR	2669582	IncDec	++		2669500	1					
ANR	2669583	CompoundStatement		19:6:540:553	2669500	3					
ANR	2669584	IdentifierDeclStatement	unsigned long u_reg = 16 ;	3385:6:161049:161073	2669500	0	True				
ANR	2669585	IdentifierDecl	u_reg = 16		2669500	0					
ANR	2669586	IdentifierDeclType	unsigned long		2669500	0					
ANR	2669587	Identifier	u_reg		2669500	1					
ANR	2669588	AssignmentExpression	u_reg = 16		2669500	2		=			
ANR	2669589	Identifier	u_reg		2669500	0					
ANR	2669590	PrimaryExpression	16		2669500	1					
ANR	2669591	IdentifierDeclStatement	bfd_boolean is_unpredictable = FALSE ;	3386:6:161081:161117	2669500	1	True				
ANR	2669592	IdentifierDecl	is_unpredictable = FALSE		2669500	0					
ANR	2669593	IdentifierDeclType	bfd_boolean		2669500	0					
ANR	2669594	Identifier	is_unpredictable		2669500	1					
ANR	2669595	AssignmentExpression	is_unpredictable = FALSE		2669500	2		=			
ANR	2669596	Identifier	FALSE		2669500	0					
ANR	2669597	Identifier	FALSE		2669500	1					
ANR	2669598	IdentifierDeclStatement	const char * c ;	3388:6:161161:161174	2669500	2	True				
ANR	2669599	IdentifierDecl	* c		2669500	0					
ANR	2669600	IdentifierDeclType	const char *		2669500	0					
ANR	2669601	Identifier	c		2669500	1					
ANR	2669602	IfStatement	if ( ARM_FEATURE_ZERO ( insn -> arch ) )		2669500	3					
ANR	2669603	Condition	ARM_FEATURE_ZERO ( insn -> arch )	3390:10:161187:161215	2669500	0	True				
ANR	2669604	CallExpression	ARM_FEATURE_ZERO ( insn -> arch )		2669500	0					
ANR	2669605	Callee	ARM_FEATURE_ZERO		2669500	0					
ANR	2669606	Identifier	ARM_FEATURE_ZERO		2669500	0					
ANR	2669607	ArgumentList	insn -> arch		2669500	1					
ANR	2669608	Argument	insn -> arch		2669500	0					
ANR	2669609	PtrMemberAccess	insn -> arch		2669500	0					
ANR	2669610	Identifier	insn		2669500	0					
ANR	2669611	Identifier	arch		2669500	1					
ANR	2669612	CompoundStatement		21:41:597:597	2669500	1					
ANR	2669613	SwitchStatement	switch ( insn -> value )		2669500	0					
ANR	2669614	Condition	insn -> value	3391:15:161235:161245	2669500	0	True				
ANR	2669615	PtrMemberAccess	insn -> value		2669500	0					
ANR	2669616	Identifier	insn		2669500	0					
ANR	2669617	Identifier	value		2669500	1					
ANR	2669618	CompoundStatement		22:28:627:627	2669500	1					
ANR	2669619	Label	case SENTINEL_IWMMXT_START :	3392:7:161257:161283	2669500	0	True				
ANR	2669620	Identifier	SENTINEL_IWMMXT_START		2669500	0					
ANR	2669621	IfStatement	if ( info -> mach != bfd_mach_arm_XScale && info -> mach != bfd_mach_arm_iWMMXt && info -> mach != bfd_mach_arm_iWMMXt2 )		2669500	1					
ANR	2669622	Condition	info -> mach != bfd_mach_arm_XScale && info -> mach != bfd_mach_arm_iWMMXt && info -> mach != bfd_mach_arm_iWMMXt2	3393:12:161297:161404	2669500	0	True				
ANR	2669623	AndExpression	info -> mach != bfd_mach_arm_XScale && info -> mach != bfd_mach_arm_iWMMXt && info -> mach != bfd_mach_arm_iWMMXt2		2669500	0		&&			
ANR	2669624	EqualityExpression	info -> mach != bfd_mach_arm_XScale		2669500	0		!=			
ANR	2669625	PtrMemberAccess	info -> mach		2669500	0					
ANR	2669626	Identifier	info		2669500	0					
ANR	2669627	Identifier	mach		2669500	1					
ANR	2669628	Identifier	bfd_mach_arm_XScale		2669500	1					
ANR	2669629	AndExpression	info -> mach != bfd_mach_arm_iWMMXt && info -> mach != bfd_mach_arm_iWMMXt2		2669500	1		&&			
ANR	2669630	EqualityExpression	info -> mach != bfd_mach_arm_iWMMXt		2669500	0		!=			
ANR	2669631	PtrMemberAccess	info -> mach		2669500	0					
ANR	2669632	Identifier	info		2669500	0					
ANR	2669633	Identifier	mach		2669500	1					
ANR	2669634	Identifier	bfd_mach_arm_iWMMXt		2669500	1					
ANR	2669635	EqualityExpression	info -> mach != bfd_mach_arm_iWMMXt2		2669500	1		!=			
ANR	2669636	PtrMemberAccess	info -> mach		2669500	0					
ANR	2669637	Identifier	info		2669500	0					
ANR	2669638	Identifier	mach		2669500	1					
ANR	2669639	Identifier	bfd_mach_arm_iWMMXt2		2669500	1					
ANR	2669640	CompoundStatement		24:122:786:786	2669500	1					
ANR	2669641	DoStatement	do		2669500	0					
ANR	2669642	CompoundStatement		25:12:800:800	2669500	0					
ANR	2669643	ExpressionStatement	insn ++	3395:10:161433:161439	2669500	0	True				
ANR	2669644	PostIncDecOperationExpression	insn ++		2669500	0					
ANR	2669645	Identifier	insn		2669500	0					
ANR	2669646	IncDec	++		2669500	1					
ANR	2669647	Condition	( ! ARM_FEATURE_ZERO ( insn -> arch ) ) && insn -> value != SENTINEL_IWMMXT_END	3396:18:161459:161528	2669500	1	True				
ANR	2669648	AndExpression	( ! ARM_FEATURE_ZERO ( insn -> arch ) ) && insn -> value != SENTINEL_IWMMXT_END		2669500	0		&&			
ANR	2669649	UnaryOperationExpression	! ARM_FEATURE_ZERO ( insn -> arch )		2669500	0					
ANR	2669650	UnaryOperator	!		2669500	0					
ANR	2669651	CallExpression	ARM_FEATURE_ZERO ( insn -> arch )		2669500	1					
ANR	2669652	Callee	ARM_FEATURE_ZERO		2669500	0					
ANR	2669653	Identifier	ARM_FEATURE_ZERO		2669500	0					
ANR	2669654	ArgumentList	insn -> arch		2669500	1					
ANR	2669655	Argument	insn -> arch		2669500	0					
ANR	2669656	PtrMemberAccess	insn -> arch		2669500	0					
ANR	2669657	Identifier	insn		2669500	0					
ANR	2669658	Identifier	arch		2669500	1					
ANR	2669659	EqualityExpression	insn -> value != SENTINEL_IWMMXT_END		2669500	1		!=			
ANR	2669660	PtrMemberAccess	insn -> value		2669500	0					
ANR	2669661	Identifier	insn		2669500	0					
ANR	2669662	Identifier	value		2669500	1					
ANR	2669663	Identifier	SENTINEL_IWMMXT_END		2669500	1					
ANR	2669664	ContinueStatement	continue ;	3398:8:161550:161558	2669500	2	True				
ANR	2669665	Label	case SENTINEL_IWMMXT_END :	3400:7:161568:161592	2669500	3	True				
ANR	2669666	Identifier	SENTINEL_IWMMXT_END		2669500	0					
ANR	2669667	ContinueStatement	continue ;	3401:8:161602:161610	2669500	4	True				
ANR	2669668	Label	case SENTINEL_GENERIC_START :	3403:7:161620:161647	2669500	5	True				
ANR	2669669	Identifier	SENTINEL_GENERIC_START		2669500	0					
ANR	2669670	ExpressionStatement	"ARM_FEATURE_COPY ( allowed_arches , private_data -> features )"	3404:8:161657:161714	2669500	6	True				
ANR	2669671	CallExpression	"ARM_FEATURE_COPY ( allowed_arches , private_data -> features )"		2669500	0					
ANR	2669672	Callee	ARM_FEATURE_COPY		2669500	0					
ANR	2669673	Identifier	ARM_FEATURE_COPY		2669500	0					
ANR	2669674	ArgumentList	allowed_arches		2669500	1					
ANR	2669675	Argument	allowed_arches		2669500	0					
ANR	2669676	Identifier	allowed_arches		2669500	0					
ANR	2669677	Argument	private_data -> features		2669500	1					
ANR	2669678	PtrMemberAccess	private_data -> features		2669500	0					
ANR	2669679	Identifier	private_data		2669500	0					
ANR	2669680	Identifier	features		2669500	1					
ANR	2669681	ContinueStatement	continue ;	3405:8:161724:161732	2669500	7	True				
ANR	2669682	ExpressionStatement	mask = insn -> mask	3409:6:161758:161775	2669500	4	True				
ANR	2669683	AssignmentExpression	mask = insn -> mask		2669500	0		=			
ANR	2669684	Identifier	mask		2669500	0					
ANR	2669685	PtrMemberAccess	insn -> mask		2669500	1					
ANR	2669686	Identifier	insn		2669500	0					
ANR	2669687	Identifier	mask		2669500	1					
ANR	2669688	ExpressionStatement	value = insn -> value	3410:6:161783:161802	2669500	5	True				
ANR	2669689	AssignmentExpression	value = insn -> value		2669500	0		=			
ANR	2669690	Identifier	value		2669500	0					
ANR	2669691	PtrMemberAccess	insn -> value		2669500	1					
ANR	2669692	Identifier	insn		2669500	0					
ANR	2669693	Identifier	value		2669500	1					
ANR	2669694	ExpressionStatement	cp_num = ( given >> 8 ) & 0xf	3411:6:161810:161837	2669500	6	True				
ANR	2669695	AssignmentExpression	cp_num = ( given >> 8 ) & 0xf		2669500	0		=			
ANR	2669696	Identifier	cp_num		2669500	0					
ANR	2669697	BitAndExpression	( given >> 8 ) & 0xf		2669500	1		&			
ANR	2669698	ShiftExpression	given >> 8		2669500	0		>>			
ANR	2669699	Identifier	given		2669500	0					
ANR	2669700	PrimaryExpression	8		2669500	1					
ANR	2669701	PrimaryExpression	0xf		2669500	1					
ANR	2669702	IfStatement	if ( thumb )		2669500	7					
ANR	2669703	Condition	thumb	3413:10:161850:161854	2669500	0	True				
ANR	2669704	Identifier	thumb		2669500	0					
ANR	2669705	CompoundStatement		45:1:1237:1237	2669500	1					
ANR	2669706	ExpressionStatement	mask |= 0xf0000000	3418:3:162026:162044	2669500	0	True				
ANR	2669707	AssignmentExpression	mask |= 0xf0000000		2669500	0		|=			
ANR	2669708	Identifier	mask		2669500	0					
ANR	2669709	PrimaryExpression	0xf0000000		2669500	1					
ANR	2669710	ExpressionStatement	value |= 0xe0000000	3419:3:162049:162068	2669500	1	True				
ANR	2669711	AssignmentExpression	value |= 0xe0000000		2669500	0		|=			
ANR	2669712	Identifier	value		2669500	0					
ANR	2669713	PrimaryExpression	0xe0000000		2669500	1					
ANR	2669714	IfStatement	if ( ifthen_state )		2669500	2					
ANR	2669715	Condition	ifthen_state	3420:7:162077:162088	2669500	0	True				
ANR	2669716	Identifier	ifthen_state		2669500	0					
ANR	2669717	CompoundStatement		51:21:1470:1470	2669500	1					
ANR	2669718	ExpressionStatement	cond = IFTHEN_COND	3421:4:162097:162115	2669500	0	True				
ANR	2669719	AssignmentExpression	cond = IFTHEN_COND		2669500	0		=			
ANR	2669720	Identifier	cond		2669500	0					
ANR	2669721	Identifier	IFTHEN_COND		2669500	1					
ANR	2669722	ElseStatement	else		2669500	0					
ANR	2669723	CompoundStatement		53:10:1506:1506	2669500	0					
ANR	2669724	ExpressionStatement	cond = COND_UNCOND	3423:4:162133:162151	2669500	0	True				
ANR	2669725	AssignmentExpression	cond = COND_UNCOND		2669500	0		=			
ANR	2669726	Identifier	cond		2669500	0					
ANR	2669727	Identifier	COND_UNCOND		2669500	1					
ANR	2669728	ElseStatement	else		2669500	0					
ANR	2669729	CompoundStatement		58:1:1552:1552	2669500	0					
ANR	2669730	IfStatement	if ( ( given & 0xf0000000 ) == 0xf0000000 )		2669500	0					
ANR	2669731	Condition	( given & 0xf0000000 ) == 0xf0000000	3430:7:162267:162300	2669500	0	True				
ANR	2669732	EqualityExpression	( given & 0xf0000000 ) == 0xf0000000		2669500	0		==			
ANR	2669733	BitAndExpression	given & 0xf0000000		2669500	0		&			
ANR	2669734	Identifier	given		2669500	0					
ANR	2669735	PrimaryExpression	0xf0000000		2669500	1					
ANR	2669736	PrimaryExpression	0xf0000000		2669500	1					
ANR	2669737	CompoundStatement		62:5:1687:1687	2669500	1					
ANR	2669738	ExpressionStatement	mask |= 0xf0000000	3432:7:162317:162335	2669500	0	True				
ANR	2669739	AssignmentExpression	mask |= 0xf0000000		2669500	0		|=			
ANR	2669740	Identifier	mask		2669500	0					
ANR	2669741	PrimaryExpression	0xf0000000		2669500	1					
ANR	2669742	ExpressionStatement	cond = COND_UNCOND	3433:7:162344:162362	2669500	1	True				
ANR	2669743	AssignmentExpression	cond = COND_UNCOND		2669500	0		=			
ANR	2669744	Identifier	cond		2669500	0					
ANR	2669745	Identifier	COND_UNCOND		2669500	1					
ANR	2669746	ElseStatement	else		2669500	0					
ANR	2669747	CompoundStatement		67:5:1763:1763	2669500	0					
ANR	2669748	ExpressionStatement	cond = ( given >> 28 ) & 0xf	3437:7:162393:162419	2669500	0	True				
ANR	2669749	AssignmentExpression	cond = ( given >> 28 ) & 0xf		2669500	0		=			
ANR	2669750	Identifier	cond		2669500	0					
ANR	2669751	BitAndExpression	( given >> 28 ) & 0xf		2669500	1		&			
ANR	2669752	ShiftExpression	given >> 28		2669500	0		>>			
ANR	2669753	Identifier	given		2669500	0					
ANR	2669754	PrimaryExpression	28		2669500	1					
ANR	2669755	PrimaryExpression	0xf		2669500	1					
ANR	2669756	IfStatement	if ( cond == 0xe )		2669500	1					
ANR	2669757	Condition	cond == 0xe	3438:11:162432:162442	2669500	0	True				
ANR	2669758	EqualityExpression	cond == 0xe		2669500	0		==			
ANR	2669759	Identifier	cond		2669500	0					
ANR	2669760	PrimaryExpression	0xe		2669500	1					
ANR	2669761	CompoundStatement		69:24:1824:1824	2669500	1					
ANR	2669762	ExpressionStatement	cond = COND_UNCOND	3439:8:162455:162473	2669500	0	True				
ANR	2669763	AssignmentExpression	cond = COND_UNCOND		2669500	0		=			
ANR	2669764	Identifier	cond		2669500	0					
ANR	2669765	Identifier	COND_UNCOND		2669500	1					
ANR	2669766	IfStatement	if ( ( given & mask ) != value )		2669500	8					
ANR	2669767	Condition	( given & mask ) != value	3444:5:162500:162522	2669500	0	True				
ANR	2669768	EqualityExpression	( given & mask ) != value		2669500	0		!=			
ANR	2669769	BitAndExpression	given & mask		2669500	0		&			
ANR	2669770	Identifier	given		2669500	0					
ANR	2669771	Identifier	mask		2669500	1					
ANR	2669772	Identifier	value		2669500	1					
ANR	2669773	CompoundStatement		75:30:1904:1904	2669500	1					
ANR	2669774	ContinueStatement	continue ;	3445:2:162529:162537	2669500	0	True				
ANR	2669775	IfStatement	"if ( ! ARM_CPU_HAS_FEATURE ( insn -> arch , allowed_arches ) )"		2669500	9					
ANR	2669776	Condition	"! ARM_CPU_HAS_FEATURE ( insn -> arch , allowed_arches )"	3448:5:162548:162596	2669500	0	True				
ANR	2669777	UnaryOperationExpression	"! ARM_CPU_HAS_FEATURE ( insn -> arch , allowed_arches )"		2669500	0					
ANR	2669778	UnaryOperator	!		2669500	0					
ANR	2669779	CallExpression	"ARM_CPU_HAS_FEATURE ( insn -> arch , allowed_arches )"		2669500	1					
ANR	2669780	Callee	ARM_CPU_HAS_FEATURE		2669500	0					
ANR	2669781	Identifier	ARM_CPU_HAS_FEATURE		2669500	0					
ANR	2669782	ArgumentList	insn -> arch		2669500	1					
ANR	2669783	Argument	insn -> arch		2669500	0					
ANR	2669784	PtrMemberAccess	insn -> arch		2669500	0					
ANR	2669785	Identifier	insn		2669500	0					
ANR	2669786	Identifier	arch		2669500	1					
ANR	2669787	Argument	allowed_arches		2669500	1					
ANR	2669788	Identifier	allowed_arches		2669500	0					
ANR	2669789	CompoundStatement		79:56:1978:1978	2669500	1					
ANR	2669790	ContinueStatement	continue ;	3449:2:162603:162611	2669500	0	True				
ANR	2669791	IfStatement	if ( insn -> value == 0xfe000010 || insn -> value == 0xfe100010 || insn -> value == 0xfc100000 || insn -> value == 0xfc000000 )		2669500	10					
ANR	2669792	Condition	insn -> value == 0xfe000010 || insn -> value == 0xfe100010 || insn -> value == 0xfc100000 || insn -> value == 0xfc000000	3452:5:162622:162778	2669500	0	True				
ANR	2669793	OrExpression	insn -> value == 0xfe000010 || insn -> value == 0xfe100010 || insn -> value == 0xfc100000 || insn -> value == 0xfc000000		2669500	0		||			
ANR	2669794	EqualityExpression	insn -> value == 0xfe000010		2669500	0		==			
ANR	2669795	PtrMemberAccess	insn -> value		2669500	0					
ANR	2669796	Identifier	insn		2669500	0					
ANR	2669797	Identifier	value		2669500	1					
ANR	2669798	PrimaryExpression	0xfe000010		2669500	1					
ANR	2669799	OrExpression	insn -> value == 0xfe100010 || insn -> value == 0xfc100000 || insn -> value == 0xfc000000		2669500	1		||			
ANR	2669800	EqualityExpression	insn -> value == 0xfe100010		2669500	0		==			
ANR	2669801	PtrMemberAccess	insn -> value		2669500	0					
ANR	2669802	Identifier	insn		2669500	0					
ANR	2669803	Identifier	value		2669500	1					
ANR	2669804	PrimaryExpression	0xfe100010		2669500	1					
ANR	2669805	OrExpression	insn -> value == 0xfc100000 || insn -> value == 0xfc000000		2669500	1		||			
ANR	2669806	EqualityExpression	insn -> value == 0xfc100000		2669500	0		==			
ANR	2669807	PtrMemberAccess	insn -> value		2669500	0					
ANR	2669808	Identifier	insn		2669500	0					
ANR	2669809	Identifier	value		2669500	1					
ANR	2669810	PrimaryExpression	0xfc100000		2669500	1					
ANR	2669811	EqualityExpression	insn -> value == 0xfc000000		2669500	1		==			
ANR	2669812	PtrMemberAccess	insn -> value		2669500	0					
ANR	2669813	Identifier	insn		2669500	0					
ANR	2669814	Identifier	value		2669500	1					
ANR	2669815	PrimaryExpression	0xfc000000		2669500	1					
ANR	2669816	CompoundStatement		87:1:2173:2173	2669500	1					
ANR	2669817	IfStatement	if ( cp_num == 9 || cp_num == 10 || cp_num == 11 )		2669500	0					
ANR	2669818	Condition	cp_num == 9 || cp_num == 10 || cp_num == 11	3457:6:162802:162844	2669500	0	True				
ANR	2669819	OrExpression	cp_num == 9 || cp_num == 10 || cp_num == 11		2669500	0		||			
ANR	2669820	EqualityExpression	cp_num == 9		2669500	0		==			
ANR	2669821	Identifier	cp_num		2669500	0					
ANR	2669822	PrimaryExpression	9		2669500	1					
ANR	2669823	OrExpression	cp_num == 10 || cp_num == 11		2669500	1		||			
ANR	2669824	EqualityExpression	cp_num == 10		2669500	0		==			
ANR	2669825	Identifier	cp_num		2669500	0					
ANR	2669826	PrimaryExpression	10		2669500	1					
ANR	2669827	EqualityExpression	cp_num == 11		2669500	1		==			
ANR	2669828	Identifier	cp_num		2669500	0					
ANR	2669829	PrimaryExpression	11		2669500	1					
ANR	2669830	CompoundStatement		88:51:2226:2226	2669500	1					
ANR	2669831	ExpressionStatement	is_unpredictable = TRUE	3458:3:162852:162875	2669500	0	True				
ANR	2669832	AssignmentExpression	is_unpredictable = TRUE		2669500	0		=			
ANR	2669833	Identifier	is_unpredictable		2669500	0					
ANR	2669834	Identifier	TRUE		2669500	1					
ANR	2669835	ElseStatement	else		2669500	0					
ANR	2669836	IfStatement	if ( insn -> value == 0x0e000000 || insn -> value == 0xfe000000 || insn -> value == 0x0e000010 || insn -> value == 0x0e100010 || insn -> value == 0x0c100000 || insn -> value == 0x0c000000 )		2669500	0					
ANR	2669837	Condition	insn -> value == 0x0e000000 || insn -> value == 0xfe000000 || insn -> value == 0x0e000010 || insn -> value == 0x0e100010 || insn -> value == 0x0c100000 || insn -> value == 0x0c000000	3461:15:162899:163172	2669500	0	True				
ANR	2669838	OrExpression	insn -> value == 0x0e000000 || insn -> value == 0xfe000000 || insn -> value == 0x0e000010 || insn -> value == 0x0e100010 || insn -> value == 0x0c100000 || insn -> value == 0x0c000000		2669500	0		||			
ANR	2669839	EqualityExpression	insn -> value == 0x0e000000		2669500	0		==			
ANR	2669840	PtrMemberAccess	insn -> value		2669500	0					
ANR	2669841	Identifier	insn		2669500	0					
ANR	2669842	Identifier	value		2669500	1					
ANR	2669843	PrimaryExpression	0x0e000000		2669500	1					
ANR	2669844	OrExpression	insn -> value == 0xfe000000 || insn -> value == 0x0e000010 || insn -> value == 0x0e100010 || insn -> value == 0x0c100000 || insn -> value == 0x0c000000		2669500	1		||			
ANR	2669845	EqualityExpression	insn -> value == 0xfe000000		2669500	0		==			
ANR	2669846	PtrMemberAccess	insn -> value		2669500	0					
ANR	2669847	Identifier	insn		2669500	0					
ANR	2669848	Identifier	value		2669500	1					
ANR	2669849	PrimaryExpression	0xfe000000		2669500	1					
ANR	2669850	OrExpression	insn -> value == 0x0e000010 || insn -> value == 0x0e100010 || insn -> value == 0x0c100000 || insn -> value == 0x0c000000		2669500	1		||			
ANR	2669851	EqualityExpression	insn -> value == 0x0e000010		2669500	0		==			
ANR	2669852	PtrMemberAccess	insn -> value		2669500	0					
ANR	2669853	Identifier	insn		2669500	0					
ANR	2669854	Identifier	value		2669500	1					
ANR	2669855	PrimaryExpression	0x0e000010		2669500	1					
ANR	2669856	OrExpression	insn -> value == 0x0e100010 || insn -> value == 0x0c100000 || insn -> value == 0x0c000000		2669500	1		||			
ANR	2669857	EqualityExpression	insn -> value == 0x0e100010		2669500	0		==			
ANR	2669858	PtrMemberAccess	insn -> value		2669500	0					
ANR	2669859	Identifier	insn		2669500	0					
ANR	2669860	Identifier	value		2669500	1					
ANR	2669861	PrimaryExpression	0x0e100010		2669500	1					
ANR	2669862	OrExpression	insn -> value == 0x0c100000 || insn -> value == 0x0c000000		2669500	1		||			
ANR	2669863	EqualityExpression	insn -> value == 0x0c100000		2669500	0		==			
ANR	2669864	PtrMemberAccess	insn -> value		2669500	0					
ANR	2669865	Identifier	insn		2669500	0					
ANR	2669866	Identifier	value		2669500	1					
ANR	2669867	PrimaryExpression	0x0c100000		2669500	1					
ANR	2669868	EqualityExpression	insn -> value == 0x0c000000		2669500	1		==			
ANR	2669869	PtrMemberAccess	insn -> value		2669500	0					
ANR	2669870	Identifier	insn		2669500	0					
ANR	2669871	Identifier	value		2669500	1					
ANR	2669872	PrimaryExpression	0x0c000000		2669500	1					
ANR	2669873	CompoundStatement		98:1:2566:2566	2669500	1					
ANR	2669874	IfStatement	if ( cp_num == 9 || cp_num == 10 || cp_num == 11 )		2669500	0					
ANR	2669875	Condition	cp_num == 9 || cp_num == 10 || cp_num == 11	3469:7:163235:163277	2669500	0	True				
ANR	2669876	OrExpression	cp_num == 9 || cp_num == 10 || cp_num == 11		2669500	0		||			
ANR	2669877	EqualityExpression	cp_num == 9		2669500	0		==			
ANR	2669878	Identifier	cp_num		2669500	0					
ANR	2669879	PrimaryExpression	9		2669500	1					
ANR	2669880	OrExpression	cp_num == 10 || cp_num == 11		2669500	1		||			
ANR	2669881	EqualityExpression	cp_num == 10		2669500	0		==			
ANR	2669882	Identifier	cp_num		2669500	0					
ANR	2669883	PrimaryExpression	10		2669500	1					
ANR	2669884	EqualityExpression	cp_num == 11		2669500	1		==			
ANR	2669885	Identifier	cp_num		2669500	0					
ANR	2669886	PrimaryExpression	11		2669500	1					
ANR	2669887	CompoundStatement		100:52:2659:2659	2669500	1					
ANR	2669888	ContinueStatement	continue ;	3470:4:163286:163294	2669500	0	True				
ANR	2669889	ForStatement	for ( c = insn -> assembler ; * c ; c ++ )		2669500	11					
ANR	2669890	ForInit	c = insn -> assembler ;	3474:11:163316:163335	2669500	0	True				
ANR	2669891	AssignmentExpression	c = insn -> assembler		2669500	0		=			
ANR	2669892	Identifier	c		2669500	0					
ANR	2669893	PtrMemberAccess	insn -> assembler		2669500	1					
ANR	2669894	Identifier	insn		2669500	0					
ANR	2669895	Identifier	assembler		2669500	1					
ANR	2669896	Condition	* c	3474:32:163337:163338	2669500	1	True				
ANR	2669897	UnaryOperationExpression	* c		2669500	0					
ANR	2669898	UnaryOperator	*		2669500	0					
ANR	2669899	Identifier	c		2669500	1					
ANR	2669900	PostIncDecOperationExpression	c ++	3474:36:163341:163343	2669500	2	True				
ANR	2669901	Identifier	c		2669500	0					
ANR	2669902	IncDec	++		2669500	1					
ANR	2669903	CompoundStatement		106:1:2726:2726	2669500	3					
ANR	2669904	IfStatement	if ( * c == '%' )		2669500	0					
ANR	2669905	Condition	* c == '%'	3476:7:163356:163364	2669500	0	True				
ANR	2669906	EqualityExpression	* c == '%'		2669500	0		==			
ANR	2669907	UnaryOperationExpression	* c		2669500	0					
ANR	2669908	UnaryOperator	*		2669500	0					
ANR	2669909	Identifier	c		2669500	1					
ANR	2669910	PrimaryExpression	'%'		2669500	1					
ANR	2669911	CompoundStatement		108:5:2751:2751	2669500	1					
ANR	2669912	SwitchStatement	switch ( * ++ c )		2669500	0					
ANR	2669913	Condition	* ++ c	3478:15:163389:163392	2669500	0	True				
ANR	2669914	UnaryOperationExpression	* ++ c		2669500	0					
ANR	2669915	UnaryOperator	*		2669500	0					
ANR	2669916	UnaryExpression	++ c		2669500	1					
ANR	2669917	IncDec	++		2669500	0					
ANR	2669918	Identifier	c		2669500	1					
ANR	2669919	CompoundStatement		110:2:2776:2776	2669500	1					
ANR	2669920	Label	case '%' :	3480:2:163401:163409	2669500	0	True				
ANR	2669921	ExpressionStatement	"func ( stream , ""%%"" )"	3481:4:163415:163434	2669500	1	True				
ANR	2669922	CallExpression	"func ( stream , ""%%"" )"		2669500	0					
ANR	2669923	Callee	func		2669500	0					
ANR	2669924	Identifier	func		2669500	0					
ANR	2669925	ArgumentList	stream		2669500	1					
ANR	2669926	Argument	stream		2669500	0					
ANR	2669927	Identifier	stream		2669500	0					
ANR	2669928	Argument	"""%%"""		2669500	1					
ANR	2669929	PrimaryExpression	"""%%"""		2669500	0					
ANR	2669930	BreakStatement	break ;	3482:4:163440:163445	2669500	2	True				
ANR	2669931	Label	case 'A' :	3484:2:163450:163458	2669500	3	True				
ANR	2669932	CompoundStatement		118:6:2887:2916	2669500	4					
ANR	2669933	IdentifierDeclStatement	int rn = ( given >> 16 ) & 0xf ;	3486:6:163472:163500	2669500	0	True				
ANR	2669934	IdentifierDecl	rn = ( given >> 16 ) & 0xf		2669500	0					
ANR	2669935	IdentifierDeclType	int		2669500	0					
ANR	2669936	Identifier	rn		2669500	1					
ANR	2669937	AssignmentExpression	rn = ( given >> 16 ) & 0xf		2669500	2		=			
ANR	2669938	Identifier	rn		2669500	0					
ANR	2669939	BitAndExpression	( given >> 16 ) & 0xf		2669500	1		&			
ANR	2669940	ShiftExpression	given >> 16		2669500	0		>>			
ANR	2669941	Identifier	given		2669500	0					
ANR	2669942	PrimaryExpression	16		2669500	1					
ANR	2669943	PrimaryExpression	0xf		2669500	1					
ANR	2669944	IdentifierDeclStatement	bfd_vma offset = given & 0xff ;	3487:6:163508:163537	2669500	1	True				
ANR	2669945	IdentifierDecl	offset = given & 0xff		2669500	0					
ANR	2669946	IdentifierDeclType	bfd_vma		2669500	0					
ANR	2669947	Identifier	offset		2669500	1					
ANR	2669948	AssignmentExpression	offset = given & 0xff		2669500	2		=			
ANR	2669949	Identifier	offset		2669500	0					
ANR	2669950	BitAndExpression	given & 0xff		2669500	1		&			
ANR	2669951	Identifier	given		2669500	0					
ANR	2669952	PrimaryExpression	0xff		2669500	1					
ANR	2669953	ExpressionStatement	"func ( stream , ""[%s"" , arm_regnames [ ( given >> 16 ) & 0xf ] )"	3489:6:163546:163602	2669500	2	True				
ANR	2669954	CallExpression	"func ( stream , ""[%s"" , arm_regnames [ ( given >> 16 ) & 0xf ] )"		2669500	0					
ANR	2669955	Callee	func		2669500	0					
ANR	2669956	Identifier	func		2669500	0					
ANR	2669957	ArgumentList	stream		2669500	1					
ANR	2669958	Argument	stream		2669500	0					
ANR	2669959	Identifier	stream		2669500	0					
ANR	2669960	Argument	"""[%s"""		2669500	1					
ANR	2669961	PrimaryExpression	"""[%s"""		2669500	0					
ANR	2669962	Argument	arm_regnames [ ( given >> 16 ) & 0xf ]		2669500	2					
ANR	2669963	ArrayIndexing	arm_regnames [ ( given >> 16 ) & 0xf ]		2669500	0					
ANR	2669964	Identifier	arm_regnames		2669500	0					
ANR	2669965	BitAndExpression	( given >> 16 ) & 0xf		2669500	1		&			
ANR	2669966	ShiftExpression	given >> 16		2669500	0		>>			
ANR	2669967	Identifier	given		2669500	0					
ANR	2669968	PrimaryExpression	16		2669500	1					
ANR	2669969	PrimaryExpression	0xf		2669500	1					
ANR	2669970	IfStatement	if ( PRE_BIT_SET || WRITEBACK_BIT_SET )		2669500	3					
ANR	2669971	Condition	PRE_BIT_SET || WRITEBACK_BIT_SET	3491:10:163615:163646	2669500	0	True				
ANR	2669972	OrExpression	PRE_BIT_SET || WRITEBACK_BIT_SET		2669500	0		||			
ANR	2669973	Identifier	PRE_BIT_SET		2669500	0					
ANR	2669974	Identifier	WRITEBACK_BIT_SET		2669500	1					
ANR	2669975	CompoundStatement		123:8:3036:3036	2669500	1					
ANR	2669976	IfStatement	if ( cp_num == 9 )		2669500	0					
ANR	2669977	Condition	cp_num == 9	3494:7:163714:163724	2669500	0	True				
ANR	2669978	EqualityExpression	cp_num == 9		2669500	0		==			
ANR	2669979	Identifier	cp_num		2669500	0					
ANR	2669980	PrimaryExpression	9		2669500	1					
ANR	2669981	CompoundStatement		125:20:3106:3106	2669500	1					
ANR	2669982	ExpressionStatement	offset = offset * 2	3497:4:163811:163830	2669500	0	True				
ANR	2669983	AssignmentExpression	offset = offset * 2		2669500	0		=			
ANR	2669984	Identifier	offset		2669500	0					
ANR	2669985	MultiplicativeExpression	offset * 2		2669500	1		*			
ANR	2669986	Identifier	offset		2669500	0					
ANR	2669987	PrimaryExpression	2		2669500	1					
ANR	2669988	ElseStatement	else		2669500	0					
ANR	2669989	CompoundStatement		129:10:3221:3221	2669500	0					
ANR	2669990	ExpressionStatement	offset = offset * 4	3499:4:163848:163867	2669500	0	True				
ANR	2669991	AssignmentExpression	offset = offset * 4		2669500	0		=			
ANR	2669992	Identifier	offset		2669500	0					
ANR	2669993	MultiplicativeExpression	offset * 4		2669500	1		*			
ANR	2669994	Identifier	offset		2669500	0					
ANR	2669995	PrimaryExpression	4		2669500	1					
ANR	2669996	IfStatement	if ( NEGATIVE_BIT_SET )		2669500	1					
ANR	2669997	Condition	NEGATIVE_BIT_SET	3502:7:163882:163897	2669500	0	True				
ANR	2669998	Identifier	NEGATIVE_BIT_SET		2669500	0					
ANR	2669999	CompoundStatement		133:25:3279:3279	2669500	1					
ANR	2670000	ExpressionStatement	offset = - offset	3503:4:163906:163922	2669500	0	True				
ANR	2670001	AssignmentExpression	offset = - offset		2669500	0		=			
ANR	2670002	Identifier	offset		2669500	0					
ANR	2670003	UnaryOperationExpression	- offset		2669500	1					
ANR	2670004	UnaryOperator	-		2669500	0					
ANR	2670005	Identifier	offset		2669500	1					
ANR	2670006	IfStatement	if ( PRE_BIT_SET )		2669500	4					
ANR	2670007	Condition	PRE_BIT_SET	3509:10:164003:164013	2669500	0	True				
ANR	2670008	Identifier	PRE_BIT_SET		2669500	0					
ANR	2670009	CompoundStatement		141:8:3403:3403	2669500	1					
ANR	2670010	IfStatement	if ( offset )		2669500	0					
ANR	2670011	Condition	offset	3511:11:164037:164042	2669500	0	True				
ANR	2670012	Identifier	offset		2669500	0					
ANR	2670013	CompoundStatement		142:19:3424:3424	2669500	1					
ANR	2670014	ExpressionStatement	"func ( stream , "", 0x%x]%s"" , ( int ) offset , WRITEBACK_BIT_SET ? ""!"" : """" )"	3512:8:164055:164142	2669500	0	True				
ANR	2670015	CallExpression	"func ( stream , "", 0x%x]%s"" , ( int ) offset , WRITEBACK_BIT_SET ? ""!"" : """" )"		2669500	0					
ANR	2670016	Callee	func		2669500	0					
ANR	2670017	Identifier	func		2669500	0					
ANR	2670018	ArgumentList	stream		2669500	1					
ANR	2670019	Argument	stream		2669500	0					
ANR	2670020	Identifier	stream		2669500	0					
ANR	2670021	Argument	""", 0x%x]%s"""		2669500	1					
ANR	2670022	PrimaryExpression	""", 0x%x]%s"""		2669500	0					
ANR	2670023	Argument	( int ) offset		2669500	2					
ANR	2670024	CastExpression	( int ) offset		2669500	0					
ANR	2670025	CastTarget	int		2669500	0					
ANR	2670026	Identifier	offset		2669500	1					
ANR	2670027	Argument	"WRITEBACK_BIT_SET ? ""!"" : """""		2669500	3					
ANR	2670028	ConditionalExpression	"WRITEBACK_BIT_SET ? ""!"" : """""		2669500	0					
ANR	2670029	Condition	WRITEBACK_BIT_SET		2669500	0					
ANR	2670030	Identifier	WRITEBACK_BIT_SET		2669500	0					
ANR	2670031	PrimaryExpression	"""!"""		2669500	1					
ANR	2670032	PrimaryExpression	""""""		2669500	2					
ANR	2670033	ElseStatement	else		2669500	0					
ANR	2670034	IfStatement	if ( NEGATIVE_BIT_SET )		2669500	0					
ANR	2670035	Condition	NEGATIVE_BIT_SET	3515:18:164162:164177	2669500	0	True				
ANR	2670036	Identifier	NEGATIVE_BIT_SET		2669500	0					
ANR	2670037	CompoundStatement		146:36:3559:3559	2669500	1					
ANR	2670038	ExpressionStatement	"func ( stream , "", #-0]"" )"	3516:8:164190:164213	2669500	0	True				
ANR	2670039	CallExpression	"func ( stream , "", #-0]"" )"		2669500	0					
ANR	2670040	Callee	func		2669500	0					
ANR	2670041	Identifier	func		2669500	0					
ANR	2670042	ArgumentList	stream		2669500	1					
ANR	2670043	Argument	stream		2669500	0					
ANR	2670044	Identifier	stream		2669500	0					
ANR	2670045	Argument	""", #-0]"""		2669500	1					
ANR	2670046	PrimaryExpression	""", #-0]"""		2669500	0					
ANR	2670047	ElseStatement	else		2669500	0					
ANR	2670048	CompoundStatement		148:14:3608:3608	2669500	0					
ANR	2670049	ExpressionStatement	"func ( stream , ""]"" )"	3518:8:164239:164257	2669500	0	True				
ANR	2670050	CallExpression	"func ( stream , ""]"" )"		2669500	0					
ANR	2670051	Callee	func		2669500	0					
ANR	2670052	Identifier	func		2669500	0					
ANR	2670053	ArgumentList	stream		2669500	1					
ANR	2670054	Argument	stream		2669500	0					
ANR	2670055	Identifier	stream		2669500	0					
ANR	2670056	Argument	"""]"""		2669500	1					
ANR	2670057	PrimaryExpression	"""]"""		2669500	0					
ANR	2670058	ElseStatement	else		2669500	0					
ANR	2670059	CompoundStatement		153:8:3676:3676	2669500	0					
ANR	2670060	ExpressionStatement	"func ( stream , ""]"" )"	3523:3:164302:164320	2669500	0	True				
ANR	2670061	CallExpression	"func ( stream , ""]"" )"		2669500	0					
ANR	2670062	Callee	func		2669500	0					
ANR	2670063	Identifier	func		2669500	0					
ANR	2670064	ArgumentList	stream		2669500	1					
ANR	2670065	Argument	stream		2669500	0					
ANR	2670066	Identifier	stream		2669500	0					
ANR	2670067	Argument	"""]"""		2669500	1					
ANR	2670068	PrimaryExpression	"""]"""		2669500	0					
ANR	2670069	IfStatement	if ( WRITEBACK_BIT_SET )		2669500	1					
ANR	2670070	Condition	WRITEBACK_BIT_SET	3525:7:164330:164346	2669500	0	True				
ANR	2670071	Identifier	WRITEBACK_BIT_SET		2669500	0					
ANR	2670072	CompoundStatement		157:5:3733:3733	2669500	1					
ANR	2670073	IfStatement	if ( offset )		2669500	0					
ANR	2670074	Condition	offset	3527:8:164364:164369	2669500	0	True				
ANR	2670075	Identifier	offset		2669500	0					
ANR	2670076	CompoundStatement		158:16:3751:3751	2669500	1					
ANR	2670077	ExpressionStatement	"func ( stream , "", 0x%x"" , ( int ) offset )"	3528:5:164379:164415	2669500	0	True				
ANR	2670078	CallExpression	"func ( stream , "", 0x%x"" , ( int ) offset )"		2669500	0					
ANR	2670079	Callee	func		2669500	0					
ANR	2670080	Identifier	func		2669500	0					
ANR	2670081	ArgumentList	stream		2669500	1					
ANR	2670082	Argument	stream		2669500	0					
ANR	2670083	Identifier	stream		2669500	0					
ANR	2670084	Argument	""", 0x%x"""		2669500	1					
ANR	2670085	PrimaryExpression	""", 0x%x"""		2669500	0					
ANR	2670086	Argument	( int ) offset		2669500	2					
ANR	2670087	CastExpression	( int ) offset		2669500	0					
ANR	2670088	CastTarget	int		2669500	0					
ANR	2670089	Identifier	offset		2669500	1					
ANR	2670090	ElseStatement	else		2669500	0					
ANR	2670091	IfStatement	if ( NEGATIVE_BIT_SET )		2669500	0					
ANR	2670092	Condition	NEGATIVE_BIT_SET	3529:15:164432:164447	2669500	0	True				
ANR	2670093	Identifier	NEGATIVE_BIT_SET		2669500	0					
ANR	2670094	CompoundStatement		160:33:3829:3829	2669500	1					
ANR	2670095	ExpressionStatement	"func ( stream , "", #-0"" )"	3530:5:164457:164479	2669500	0	True				
ANR	2670096	CallExpression	"func ( stream , "", #-0"" )"		2669500	0					
ANR	2670097	Callee	func		2669500	0					
ANR	2670098	Identifier	func		2669500	0					
ANR	2670099	ArgumentList	stream		2669500	1					
ANR	2670100	Argument	stream		2669500	0					
ANR	2670101	Identifier	stream		2669500	0					
ANR	2670102	Argument	""", #-0"""		2669500	1					
ANR	2670103	PrimaryExpression	""", #-0"""		2669500	0					
ANR	2670104	ElseStatement	else		2669500	0					
ANR	2670105	CompoundStatement		165:5:3886:3886	2669500	0					
ANR	2670106	ExpressionStatement	"func ( stream , "", {%s%d}"" , ( NEGATIVE_BIT_SET && ! offset ) ? ""-"" : """" , ( int ) offset )"	3535:7:164516:164609	2669500	0	True				
ANR	2670107	CallExpression	"func ( stream , "", {%s%d}"" , ( NEGATIVE_BIT_SET && ! offset ) ? ""-"" : """" , ( int ) offset )"		2669500	0					
ANR	2670108	Callee	func		2669500	0					
ANR	2670109	Identifier	func		2669500	0					
ANR	2670110	ArgumentList	stream		2669500	1					
ANR	2670111	Argument	stream		2669500	0					
ANR	2670112	Identifier	stream		2669500	0					
ANR	2670113	Argument	""", {%s%d}"""		2669500	1					
ANR	2670114	PrimaryExpression	""", {%s%d}"""		2669500	0					
ANR	2670115	Argument	"( NEGATIVE_BIT_SET && ! offset ) ? ""-"" : """""		2669500	2					
ANR	2670116	ConditionalExpression	"( NEGATIVE_BIT_SET && ! offset ) ? ""-"" : """""		2669500	0					
ANR	2670117	Condition	NEGATIVE_BIT_SET && ! offset		2669500	0					
ANR	2670118	AndExpression	NEGATIVE_BIT_SET && ! offset		2669500	0		&&			
ANR	2670119	Identifier	NEGATIVE_BIT_SET		2669500	0					
ANR	2670120	UnaryOperationExpression	! offset		2669500	1					
ANR	2670121	UnaryOperator	!		2669500	0					
ANR	2670122	Identifier	offset		2669500	1					
ANR	2670123	PrimaryExpression	"""-"""		2669500	1					
ANR	2670124	PrimaryExpression	""""""		2669500	2					
ANR	2670125	Argument	( int ) offset		2669500	3					
ANR	2670126	CastExpression	( int ) offset		2669500	0					
ANR	2670127	CastTarget	int		2669500	0					
ANR	2670128	Identifier	offset		2669500	1					
ANR	2670129	IfStatement	if ( rn == 15 && ( PRE_BIT_SET || WRITEBACK_BIT_SET ) )		2669500	5					
ANR	2670130	Condition	rn == 15 && ( PRE_BIT_SET || WRITEBACK_BIT_SET )	3541:10:164674:164719	2669500	0	True				
ANR	2670131	AndExpression	rn == 15 && ( PRE_BIT_SET || WRITEBACK_BIT_SET )		2669500	0		&&			
ANR	2670132	EqualityExpression	rn == 15		2669500	0		==			
ANR	2670133	Identifier	rn		2669500	0					
ANR	2670134	PrimaryExpression	15		2669500	1					
ANR	2670135	OrExpression	PRE_BIT_SET || WRITEBACK_BIT_SET		2669500	1		||			
ANR	2670136	Identifier	PRE_BIT_SET		2669500	0					
ANR	2670137	Identifier	WRITEBACK_BIT_SET		2669500	1					
ANR	2670138	CompoundStatement		173:8:4109:4109	2669500	1					
ANR	2670139	ExpressionStatement	"func ( stream , "" ; "" )"	3543:3:164735:164755	2669500	0	True				
ANR	2670140	CallExpression	"func ( stream , "" ; "" )"		2669500	0					
ANR	2670141	Callee	func		2669500	0					
ANR	2670142	Identifier	func		2669500	0					
ANR	2670143	ArgumentList	stream		2669500	1					
ANR	2670144	Argument	stream		2669500	0					
ANR	2670145	Identifier	stream		2669500	0					
ANR	2670146	Argument	""" ; """		2669500	1					
ANR	2670147	PrimaryExpression	""" ; """		2669500	0					
ANR	2670148	ExpressionStatement	"info -> print_address_func ( offset + pc + info -> bytes_per_chunk * 2 - ( pc & 3 ) , info )"	3546:3:164830:164938	2669500	1	True				
ANR	2670149	CallExpression	"info -> print_address_func ( offset + pc + info -> bytes_per_chunk * 2 - ( pc & 3 ) , info )"		2669500	0					
ANR	2670150	Callee	info -> print_address_func		2669500	0					
ANR	2670151	PtrMemberAccess	info -> print_address_func		2669500	0					
ANR	2670152	Identifier	info		2669500	0					
ANR	2670153	Identifier	print_address_func		2669500	1					
ANR	2670154	ArgumentList	offset + pc + info -> bytes_per_chunk * 2 - ( pc & 3 )		2669500	1					
ANR	2670155	Argument	offset + pc + info -> bytes_per_chunk * 2 - ( pc & 3 )		2669500	0					
ANR	2670156	AdditiveExpression	offset + pc + info -> bytes_per_chunk * 2 - ( pc & 3 )		2669500	0		+			
ANR	2670157	Identifier	offset		2669500	0					
ANR	2670158	AdditiveExpression	pc + info -> bytes_per_chunk * 2 - ( pc & 3 )		2669500	1		+			
ANR	2670159	Identifier	pc		2669500	0					
ANR	2670160	AdditiveExpression	info -> bytes_per_chunk * 2 - ( pc & 3 )		2669500	1		-			
ANR	2670161	MultiplicativeExpression	info -> bytes_per_chunk * 2		2669500	0		*			
ANR	2670162	PtrMemberAccess	info -> bytes_per_chunk		2669500	0					
ANR	2670163	Identifier	info		2669500	0					
ANR	2670164	Identifier	bytes_per_chunk		2669500	1					
ANR	2670165	PrimaryExpression	2		2669500	1					
ANR	2670166	BitAndExpression	pc & 3		2669500	1		&			
ANR	2670167	Identifier	pc		2669500	0					
ANR	2670168	PrimaryExpression	3		2669500	1					
ANR	2670169	Argument	info		2669500	1					
ANR	2670170	Identifier	info		2669500	0					
ANR	2670171	BreakStatement	break ;	3552:4:164960:164965	2669500	5	True				
ANR	2670172	Label	case 'B' :	3554:2:164970:164978	2669500	6	True				
ANR	2670173	CompoundStatement		188:6:4443:4475	2669500	7					
ANR	2670174	IdentifierDeclStatement	int regno = ( ( given >> 12 ) & 0xf ) | ( ( given >> ( 22 - 4 ) ) & 0x10 ) ;	3556:6:164992:165056	2669500	0	True				
ANR	2670175	IdentifierDecl	regno = ( ( given >> 12 ) & 0xf ) | ( ( given >> ( 22 - 4 ) ) & 0x10 )		2669500	0					
ANR	2670176	IdentifierDeclType	int		2669500	0					
ANR	2670177	Identifier	regno		2669500	1					
ANR	2670178	AssignmentExpression	regno = ( ( given >> 12 ) & 0xf ) | ( ( given >> ( 22 - 4 ) ) & 0x10 )		2669500	2		=			
ANR	2670179	Identifier	regno		2669500	0					
ANR	2670180	InclusiveOrExpression	( ( given >> 12 ) & 0xf ) | ( ( given >> ( 22 - 4 ) ) & 0x10 )		2669500	1		|			
ANR	2670181	BitAndExpression	( given >> 12 ) & 0xf		2669500	0		&			
ANR	2670182	ShiftExpression	given >> 12		2669500	0		>>			
ANR	2670183	Identifier	given		2669500	0					
ANR	2670184	PrimaryExpression	12		2669500	1					
ANR	2670185	PrimaryExpression	0xf		2669500	1					
ANR	2670186	BitAndExpression	( given >> ( 22 - 4 ) ) & 0x10		2669500	1		&			
ANR	2670187	ShiftExpression	given >> ( 22 - 4 )		2669500	0		>>			
ANR	2670188	Identifier	given		2669500	0					
ANR	2670189	AdditiveExpression	22 - 4		2669500	1		-			
ANR	2670190	PrimaryExpression	22		2669500	0					
ANR	2670191	PrimaryExpression	4		2669500	1					
ANR	2670192	PrimaryExpression	0x10		2669500	1					
ANR	2670193	IdentifierDeclStatement	int offset = ( given >> 1 ) & 0x3f ;	3557:6:165064:165096	2669500	1	True				
ANR	2670194	IdentifierDecl	offset = ( given >> 1 ) & 0x3f		2669500	0					
ANR	2670195	IdentifierDeclType	int		2669500	0					
ANR	2670196	Identifier	offset		2669500	1					
ANR	2670197	AssignmentExpression	offset = ( given >> 1 ) & 0x3f		2669500	2		=			
ANR	2670198	Identifier	offset		2669500	0					
ANR	2670199	BitAndExpression	( given >> 1 ) & 0x3f		2669500	1		&			
ANR	2670200	ShiftExpression	given >> 1		2669500	0		>>			
ANR	2670201	Identifier	given		2669500	0					
ANR	2670202	PrimaryExpression	1		2669500	1					
ANR	2670203	PrimaryExpression	0x3f		2669500	1					
ANR	2670204	IfStatement	if ( offset == 1 )		2669500	2					
ANR	2670205	Condition	offset == 1	3559:10:165109:165119	2669500	0	True				
ANR	2670206	EqualityExpression	offset == 1		2669500	0		==			
ANR	2670207	Identifier	offset		2669500	0					
ANR	2670208	PrimaryExpression	1		2669500	1					
ANR	2670209	CompoundStatement		190:23:4501:4501	2669500	1					
ANR	2670210	ExpressionStatement	"func ( stream , ""{d%d}"" , regno )"	3560:7:165131:165160	2669500	0	True				
ANR	2670211	CallExpression	"func ( stream , ""{d%d}"" , regno )"		2669500	0					
ANR	2670212	Callee	func		2669500	0					
ANR	2670213	Identifier	func		2669500	0					
ANR	2670214	ArgumentList	stream		2669500	1					
ANR	2670215	Argument	stream		2669500	0					
ANR	2670216	Identifier	stream		2669500	0					
ANR	2670217	Argument	"""{d%d}"""		2669500	1					
ANR	2670218	PrimaryExpression	"""{d%d}"""		2669500	0					
ANR	2670219	Argument	regno		2669500	2					
ANR	2670220	Identifier	regno		2669500	0					
ANR	2670221	ElseStatement	else		2669500	0					
ANR	2670222	IfStatement	if ( regno + offset > 32 )		2669500	0					
ANR	2670223	Condition	regno + offset > 32	3561:17:165179:165197	2669500	0	True				
ANR	2670224	RelationalExpression	regno + offset > 32		2669500	0		>			
ANR	2670225	AdditiveExpression	regno + offset		2669500	0		+			
ANR	2670226	Identifier	regno		2669500	0					
ANR	2670227	Identifier	offset		2669500	1					
ANR	2670228	PrimaryExpression	32		2669500	1					
ANR	2670229	CompoundStatement		192:38:4579:4579	2669500	1					
ANR	2670230	ExpressionStatement	"func ( stream , ""{d%d-<overflow reg d%d>}"" , regno , regno + offset - 1 )"	3562:7:165209:165277	2669500	0	True				
ANR	2670231	CallExpression	"func ( stream , ""{d%d-<overflow reg d%d>}"" , regno , regno + offset - 1 )"		2669500	0					
ANR	2670232	Callee	func		2669500	0					
ANR	2670233	Identifier	func		2669500	0					
ANR	2670234	ArgumentList	stream		2669500	1					
ANR	2670235	Argument	stream		2669500	0					
ANR	2670236	Identifier	stream		2669500	0					
ANR	2670237	Argument	"""{d%d-<overflow reg d%d>}"""		2669500	1					
ANR	2670238	PrimaryExpression	"""{d%d-<overflow reg d%d>}"""		2669500	0					
ANR	2670239	Argument	regno		2669500	2					
ANR	2670240	Identifier	regno		2669500	0					
ANR	2670241	Argument	regno + offset - 1		2669500	3					
ANR	2670242	AdditiveExpression	regno + offset - 1		2669500	0		+			
ANR	2670243	Identifier	regno		2669500	0					
ANR	2670244	AdditiveExpression	offset - 1		2669500	1		-			
ANR	2670245	Identifier	offset		2669500	0					
ANR	2670246	PrimaryExpression	1		2669500	1					
ANR	2670247	ElseStatement	else		2669500	0					
ANR	2670248	CompoundStatement		194:13:4671:4671	2669500	0					
ANR	2670249	ExpressionStatement	"func ( stream , ""{d%d-d%d}"" , regno , regno + offset - 1 )"	3564:7:165301:165354	2669500	0	True				
ANR	2670250	CallExpression	"func ( stream , ""{d%d-d%d}"" , regno , regno + offset - 1 )"		2669500	0					
ANR	2670251	Callee	func		2669500	0					
ANR	2670252	Identifier	func		2669500	0					
ANR	2670253	ArgumentList	stream		2669500	1					
ANR	2670254	Argument	stream		2669500	0					
ANR	2670255	Identifier	stream		2669500	0					
ANR	2670256	Argument	"""{d%d-d%d}"""		2669500	1					
ANR	2670257	PrimaryExpression	"""{d%d-d%d}"""		2669500	0					
ANR	2670258	Argument	regno		2669500	2					
ANR	2670259	Identifier	regno		2669500	0					
ANR	2670260	Argument	regno + offset - 1		2669500	3					
ANR	2670261	AdditiveExpression	regno + offset - 1		2669500	0		+			
ANR	2670262	Identifier	regno		2669500	0					
ANR	2670263	AdditiveExpression	offset - 1		2669500	1		-			
ANR	2670264	Identifier	offset		2669500	0					
ANR	2670265	PrimaryExpression	1		2669500	1					
ANR	2670266	BreakStatement	break ;	3567:4:165374:165379	2669500	8	True				
ANR	2670267	Label	case 'u' :	3569:2:165384:165392	2669500	9	True				
ANR	2670268	IfStatement	if ( cond != COND_UNCOND )		2669500	10					
ANR	2670269	Condition	cond != COND_UNCOND	3570:7:165401:165419	2669500	0	True				
ANR	2670270	EqualityExpression	cond != COND_UNCOND		2669500	0		!=			
ANR	2670271	Identifier	cond		2669500	0					
ANR	2670272	Identifier	COND_UNCOND		2669500	1					
ANR	2670273	CompoundStatement		201:28:4801:4801	2669500	1					
ANR	2670274	ExpressionStatement	is_unpredictable = TRUE	3571:4:165428:165451	2669500	0	True				
ANR	2670275	AssignmentExpression	is_unpredictable = TRUE		2669500	0		=			
ANR	2670276	Identifier	is_unpredictable		2669500	0					
ANR	2670277	Identifier	TRUE		2669500	1					
ANR	2670278	Label	case 'c' :	3575:2:165485:165493	2669500	11	True				
ANR	2670279	IfStatement	if ( cond != COND_UNCOND && cp_num == 9 )		2669500	12					
ANR	2670280	Condition	cond != COND_UNCOND && cp_num == 9	3576:7:165502:165535	2669500	0	True				
ANR	2670281	AndExpression	cond != COND_UNCOND && cp_num == 9		2669500	0		&&			
ANR	2670282	EqualityExpression	cond != COND_UNCOND		2669500	0		!=			
ANR	2670283	Identifier	cond		2669500	0					
ANR	2670284	Identifier	COND_UNCOND		2669500	1					
ANR	2670285	EqualityExpression	cp_num == 9		2669500	1		==			
ANR	2670286	Identifier	cp_num		2669500	0					
ANR	2670287	PrimaryExpression	9		2669500	1					
ANR	2670288	CompoundStatement		207:43:4917:4917	2669500	1					
ANR	2670289	ExpressionStatement	is_unpredictable = TRUE	3577:4:165544:165567	2669500	0	True				
ANR	2670290	AssignmentExpression	is_unpredictable = TRUE		2669500	0		=			
ANR	2670291	Identifier	is_unpredictable		2669500	0					
ANR	2670292	Identifier	TRUE		2669500	1					
ANR	2670293	ExpressionStatement	"func ( stream , ""%s"" , arm_conditional [ cond ] )"	3580:3:165578:165620	2669500	13	True				
ANR	2670294	CallExpression	"func ( stream , ""%s"" , arm_conditional [ cond ] )"		2669500	0					
ANR	2670295	Callee	func		2669500	0					
ANR	2670296	Identifier	func		2669500	0					
ANR	2670297	ArgumentList	stream		2669500	1					
ANR	2670298	Argument	stream		2669500	0					
ANR	2670299	Identifier	stream		2669500	0					
ANR	2670300	Argument	"""%s"""		2669500	1					
ANR	2670301	PrimaryExpression	"""%s"""		2669500	0					
ANR	2670302	Argument	arm_conditional [ cond ]		2669500	2					
ANR	2670303	ArrayIndexing	arm_conditional [ cond ]		2669500	0					
ANR	2670304	Identifier	arm_conditional		2669500	0					
ANR	2670305	Identifier	cond		2669500	1					
ANR	2670306	BreakStatement	break ;	3581:3:165625:165630	2669500	14	True				
ANR	2670307	Label	case 'I' :	3583:2:165635:165643	2669500	15	True				
ANR	2670308	CompoundStatement		220:6:5216:5223	2669500	16					
ANR	2670309	IdentifierDeclStatement	int imm ;	3589:6:165837:165844	2669500	0	True				
ANR	2670310	IdentifierDecl	imm		2669500	0					
ANR	2670311	IdentifierDeclType	int		2669500	0					
ANR	2670312	Identifier	imm		2669500	1					
ANR	2670313	ExpressionStatement	imm = ( given & 0xf ) | ( ( given & 0xe0 ) >> 1 )	3591:6:165853:165896	2669500	1	True				
ANR	2670314	AssignmentExpression	imm = ( given & 0xf ) | ( ( given & 0xe0 ) >> 1 )		2669500	0		=			
ANR	2670315	Identifier	imm		2669500	0					
ANR	2670316	InclusiveOrExpression	( given & 0xf ) | ( ( given & 0xe0 ) >> 1 )		2669500	1		|			
ANR	2670317	BitAndExpression	given & 0xf		2669500	0		&			
ANR	2670318	Identifier	given		2669500	0					
ANR	2670319	PrimaryExpression	0xf		2669500	1					
ANR	2670320	ShiftExpression	( given & 0xe0 ) >> 1		2669500	1		>>			
ANR	2670321	BitAndExpression	given & 0xe0		2669500	0		&			
ANR	2670322	Identifier	given		2669500	0					
ANR	2670323	PrimaryExpression	0xe0		2669500	1					
ANR	2670324	PrimaryExpression	1		2669500	1					
ANR	2670325	IfStatement	if ( imm & 0x40 )		2669500	2					
ANR	2670326	Condition	imm & 0x40	3594:10:165952:165961	2669500	0	True				
ANR	2670327	BitAndExpression	imm & 0x40		2669500	0		&			
ANR	2670328	Identifier	imm		2669500	0					
ANR	2670329	PrimaryExpression	0x40		2669500	1					
ANR	2670330	CompoundStatement		225:22:5343:5343	2669500	1					
ANR	2670331	ExpressionStatement	imm -= 0x80	3595:7:165973:165984	2669500	0	True				
ANR	2670332	AssignmentExpression	imm -= 0x80		2669500	0		-=			
ANR	2670333	Identifier	imm		2669500	0					
ANR	2670334	PrimaryExpression	0x80		2669500	1					
ANR	2670335	ExpressionStatement	"func ( stream , ""%d"" , imm )"	3598:6:166001:166025	2669500	3	True				
ANR	2670336	CallExpression	"func ( stream , ""%d"" , imm )"		2669500	0					
ANR	2670337	Callee	func		2669500	0					
ANR	2670338	Identifier	func		2669500	0					
ANR	2670339	ArgumentList	stream		2669500	1					
ANR	2670340	Argument	stream		2669500	0					
ANR	2670341	Identifier	stream		2669500	0					
ANR	2670342	Argument	"""%d"""		2669500	1					
ANR	2670343	PrimaryExpression	"""%d"""		2669500	0					
ANR	2670344	Argument	imm		2669500	2					
ANR	2670345	Identifier	imm		2669500	0					
ANR	2670346	BreakStatement	break ;	3601:4:166038:166043	2669500	17	True				
ANR	2670347	Label	case 'F' :	3603:2:166048:166056	2669500	18	True				
ANR	2670348	SwitchStatement	switch ( given & 0x00408000 )		2669500	19					
ANR	2670349	Condition	given & 0x00408000	3604:12:166070:166087	2669500	0	True				
ANR	2670350	BitAndExpression	given & 0x00408000		2669500	0		&			
ANR	2670351	Identifier	given		2669500	0					
ANR	2670352	PrimaryExpression	0x00408000		2669500	1					
ANR	2670353	CompoundStatement		236:6:5475:5475	2669500	1					
ANR	2670354	Label	case 0 :	3606:6:166104:166110	2669500	0	True				
ANR	2670355	ExpressionStatement	"func ( stream , ""4"" )"	3607:8:166120:166138	2669500	1	True				
ANR	2670356	CallExpression	"func ( stream , ""4"" )"		2669500	0					
ANR	2670357	Callee	func		2669500	0					
ANR	2670358	Identifier	func		2669500	0					
ANR	2670359	ArgumentList	stream		2669500	1					
ANR	2670360	Argument	stream		2669500	0					
ANR	2670361	Identifier	stream		2669500	0					
ANR	2670362	Argument	"""4"""		2669500	1					
ANR	2670363	PrimaryExpression	"""4"""		2669500	0					
ANR	2670364	BreakStatement	break ;	3608:8:166148:166153	2669500	2	True				
ANR	2670365	Label	case 0x8000 :	3609:6:166161:166172	2669500	3	True				
ANR	2670366	ExpressionStatement	"func ( stream , ""1"" )"	3610:8:166182:166200	2669500	4	True				
ANR	2670367	CallExpression	"func ( stream , ""1"" )"		2669500	0					
ANR	2670368	Callee	func		2669500	0					
ANR	2670369	Identifier	func		2669500	0					
ANR	2670370	ArgumentList	stream		2669500	1					
ANR	2670371	Argument	stream		2669500	0					
ANR	2670372	Identifier	stream		2669500	0					
ANR	2670373	Argument	"""1"""		2669500	1					
ANR	2670374	PrimaryExpression	"""1"""		2669500	0					
ANR	2670375	BreakStatement	break ;	3611:8:166210:166215	2669500	5	True				
ANR	2670376	Label	case 0x00400000 :	3612:6:166223:166238	2669500	6	True				
ANR	2670377	ExpressionStatement	"func ( stream , ""2"" )"	3613:8:166248:166266	2669500	7	True				
ANR	2670378	CallExpression	"func ( stream , ""2"" )"		2669500	0					
ANR	2670379	Callee	func		2669500	0					
ANR	2670380	Identifier	func		2669500	0					
ANR	2670381	ArgumentList	stream		2669500	1					
ANR	2670382	Argument	stream		2669500	0					
ANR	2670383	Identifier	stream		2669500	0					
ANR	2670384	Argument	"""2"""		2669500	1					
ANR	2670385	PrimaryExpression	"""2"""		2669500	0					
ANR	2670386	BreakStatement	break ;	3614:8:166276:166281	2669500	8	True				
ANR	2670387	Label	default :	3615:6:166289:166296	2669500	9	True				
ANR	2670388	Identifier	default		2669500	0					
ANR	2670389	ExpressionStatement	"func ( stream , ""3"" )"	3616:8:166306:166324	2669500	10	True				
ANR	2670390	CallExpression	"func ( stream , ""3"" )"		2669500	0					
ANR	2670391	Callee	func		2669500	0					
ANR	2670392	Identifier	func		2669500	0					
ANR	2670393	ArgumentList	stream		2669500	1					
ANR	2670394	Argument	stream		2669500	0					
ANR	2670395	Identifier	stream		2669500	0					
ANR	2670396	Argument	"""3"""		2669500	1					
ANR	2670397	PrimaryExpression	"""3"""		2669500	0					
ANR	2670398	BreakStatement	break ;	3618:4:166338:166343	2669500	20	True				
ANR	2670399	Label	case 'P' :	3620:2:166348:166356	2669500	21	True				
ANR	2670400	SwitchStatement	switch ( given & 0x00080080 )		2669500	22					
ANR	2670401	Condition	given & 0x00080080	3621:12:166370:166387	2669500	0	True				
ANR	2670402	BitAndExpression	given & 0x00080080		2669500	0		&			
ANR	2670403	Identifier	given		2669500	0					
ANR	2670404	PrimaryExpression	0x00080080		2669500	1					
ANR	2670405	CompoundStatement		253:6:5775:5775	2669500	1					
ANR	2670406	Label	case 0 :	3623:6:166404:166410	2669500	0	True				
ANR	2670407	ExpressionStatement	"func ( stream , ""s"" )"	3624:8:166420:166438	2669500	1	True				
ANR	2670408	CallExpression	"func ( stream , ""s"" )"		2669500	0					
ANR	2670409	Callee	func		2669500	0					
ANR	2670410	Identifier	func		2669500	0					
ANR	2670411	ArgumentList	stream		2669500	1					
ANR	2670412	Argument	stream		2669500	0					
ANR	2670413	Identifier	stream		2669500	0					
ANR	2670414	Argument	"""s"""		2669500	1					
ANR	2670415	PrimaryExpression	"""s"""		2669500	0					
ANR	2670416	BreakStatement	break ;	3625:8:166448:166453	2669500	2	True				
ANR	2670417	Label	case 0x80 :	3626:6:166461:166470	2669500	3	True				
ANR	2670418	ExpressionStatement	"func ( stream , ""d"" )"	3627:8:166480:166498	2669500	4	True				
ANR	2670419	CallExpression	"func ( stream , ""d"" )"		2669500	0					
ANR	2670420	Callee	func		2669500	0					
ANR	2670421	Identifier	func		2669500	0					
ANR	2670422	ArgumentList	stream		2669500	1					
ANR	2670423	Argument	stream		2669500	0					
ANR	2670424	Identifier	stream		2669500	0					
ANR	2670425	Argument	"""d"""		2669500	1					
ANR	2670426	PrimaryExpression	"""d"""		2669500	0					
ANR	2670427	BreakStatement	break ;	3628:8:166508:166513	2669500	5	True				
ANR	2670428	Label	case 0x00080000 :	3629:6:166521:166536	2669500	6	True				
ANR	2670429	ExpressionStatement	"func ( stream , ""e"" )"	3630:8:166546:166564	2669500	7	True				
ANR	2670430	CallExpression	"func ( stream , ""e"" )"		2669500	0					
ANR	2670431	Callee	func		2669500	0					
ANR	2670432	Identifier	func		2669500	0					
ANR	2670433	ArgumentList	stream		2669500	1					
ANR	2670434	Argument	stream		2669500	0					
ANR	2670435	Identifier	stream		2669500	0					
ANR	2670436	Argument	"""e"""		2669500	1					
ANR	2670437	PrimaryExpression	"""e"""		2669500	0					
ANR	2670438	BreakStatement	break ;	3631:8:166574:166579	2669500	8	True				
ANR	2670439	Label	default :	3632:6:166587:166594	2669500	9	True				
ANR	2670440	Identifier	default		2669500	0					
ANR	2670441	ExpressionStatement	"func ( stream , _ ( ""<illegal precision>"" ) )"	3633:8:166604:166643	2669500	10	True				
ANR	2670442	CallExpression	"func ( stream , _ ( ""<illegal precision>"" ) )"		2669500	0					
ANR	2670443	Callee	func		2669500	0					
ANR	2670444	Identifier	func		2669500	0					
ANR	2670445	ArgumentList	stream		2669500	1					
ANR	2670446	Argument	stream		2669500	0					
ANR	2670447	Identifier	stream		2669500	0					
ANR	2670448	Argument	"_ ( ""<illegal precision>"" )"		2669500	1					
ANR	2670449	CallExpression	"_ ( ""<illegal precision>"" )"		2669500	0					
ANR	2670450	Callee	_		2669500	0					
ANR	2670451	Identifier	_		2669500	0					
ANR	2670452	ArgumentList	"""<illegal precision>"""		2669500	1					
ANR	2670453	Argument	"""<illegal precision>"""		2669500	0					
ANR	2670454	PrimaryExpression	"""<illegal precision>"""		2669500	0					
ANR	2670455	BreakStatement	break ;	3634:8:166653:166658	2669500	11	True				
ANR	2670456	BreakStatement	break ;	3636:4:166672:166677	2669500	23	True				
ANR	2670457	Label	case 'Q' :	3638:2:166682:166690	2669500	24	True				
ANR	2670458	SwitchStatement	switch ( given & 0x00408000 )		2669500	25					
ANR	2670459	Condition	given & 0x00408000	3639:12:166704:166721	2669500	0	True				
ANR	2670460	BitAndExpression	given & 0x00408000		2669500	0		&			
ANR	2670461	Identifier	given		2669500	0					
ANR	2670462	PrimaryExpression	0x00408000		2669500	1					
ANR	2670463	CompoundStatement		271:6:6109:6109	2669500	1					
ANR	2670464	Label	case 0 :	3641:6:166738:166744	2669500	0	True				
ANR	2670465	ExpressionStatement	"func ( stream , ""s"" )"	3642:8:166754:166772	2669500	1	True				
ANR	2670466	CallExpression	"func ( stream , ""s"" )"		2669500	0					
ANR	2670467	Callee	func		2669500	0					
ANR	2670468	Identifier	func		2669500	0					
ANR	2670469	ArgumentList	stream		2669500	1					
ANR	2670470	Argument	stream		2669500	0					
ANR	2670471	Identifier	stream		2669500	0					
ANR	2670472	Argument	"""s"""		2669500	1					
ANR	2670473	PrimaryExpression	"""s"""		2669500	0					
ANR	2670474	BreakStatement	break ;	3643:8:166782:166787	2669500	2	True				
ANR	2670475	Label	case 0x8000 :	3644:6:166795:166806	2669500	3	True				
ANR	2670476	ExpressionStatement	"func ( stream , ""d"" )"	3645:8:166816:166834	2669500	4	True				
ANR	2670477	CallExpression	"func ( stream , ""d"" )"		2669500	0					
ANR	2670478	Callee	func		2669500	0					
ANR	2670479	Identifier	func		2669500	0					
ANR	2670480	ArgumentList	stream		2669500	1					
ANR	2670481	Argument	stream		2669500	0					
ANR	2670482	Identifier	stream		2669500	0					
ANR	2670483	Argument	"""d"""		2669500	1					
ANR	2670484	PrimaryExpression	"""d"""		2669500	0					
ANR	2670485	BreakStatement	break ;	3646:8:166844:166849	2669500	5	True				
ANR	2670486	Label	case 0x00400000 :	3647:6:166857:166872	2669500	6	True				
ANR	2670487	ExpressionStatement	"func ( stream , ""e"" )"	3648:8:166882:166900	2669500	7	True				
ANR	2670488	CallExpression	"func ( stream , ""e"" )"		2669500	0					
ANR	2670489	Callee	func		2669500	0					
ANR	2670490	Identifier	func		2669500	0					
ANR	2670491	ArgumentList	stream		2669500	1					
ANR	2670492	Argument	stream		2669500	0					
ANR	2670493	Identifier	stream		2669500	0					
ANR	2670494	Argument	"""e"""		2669500	1					
ANR	2670495	PrimaryExpression	"""e"""		2669500	0					
ANR	2670496	BreakStatement	break ;	3649:8:166910:166915	2669500	8	True				
ANR	2670497	Label	default :	3650:6:166923:166930	2669500	9	True				
ANR	2670498	Identifier	default		2669500	0					
ANR	2670499	ExpressionStatement	"func ( stream , ""p"" )"	3651:8:166940:166958	2669500	10	True				
ANR	2670500	CallExpression	"func ( stream , ""p"" )"		2669500	0					
ANR	2670501	Callee	func		2669500	0					
ANR	2670502	Identifier	func		2669500	0					
ANR	2670503	ArgumentList	stream		2669500	1					
ANR	2670504	Argument	stream		2669500	0					
ANR	2670505	Identifier	stream		2669500	0					
ANR	2670506	Argument	"""p"""		2669500	1					
ANR	2670507	PrimaryExpression	"""p"""		2669500	0					
ANR	2670508	BreakStatement	break ;	3652:8:166968:166973	2669500	11	True				
ANR	2670509	BreakStatement	break ;	3654:4:166987:166992	2669500	26	True				
ANR	2670510	Label	case 'R' :	3656:2:166997:167005	2669500	27	True				
ANR	2670511	SwitchStatement	switch ( given & 0x60 )		2669500	28					
ANR	2670512	Condition	given & 0x60	3657:12:167019:167030	2669500	0	True				
ANR	2670513	BitAndExpression	given & 0x60		2669500	0		&			
ANR	2670514	Identifier	given		2669500	0					
ANR	2670515	PrimaryExpression	0x60		2669500	1					
ANR	2670516	CompoundStatement		289:6:6418:6418	2669500	1					
ANR	2670517	Label	case 0 :	3659:6:167047:167053	2669500	0	True				
ANR	2670518	BreakStatement	break ;	3660:8:167063:167068	2669500	1	True				
ANR	2670519	Label	case 0x20 :	3661:6:167076:167085	2669500	2	True				
ANR	2670520	ExpressionStatement	"func ( stream , ""p"" )"	3662:8:167095:167113	2669500	3	True				
ANR	2670521	CallExpression	"func ( stream , ""p"" )"		2669500	0					
ANR	2670522	Callee	func		2669500	0					
ANR	2670523	Identifier	func		2669500	0					
ANR	2670524	ArgumentList	stream		2669500	1					
ANR	2670525	Argument	stream		2669500	0					
ANR	2670526	Identifier	stream		2669500	0					
ANR	2670527	Argument	"""p"""		2669500	1					
ANR	2670528	PrimaryExpression	"""p"""		2669500	0					
ANR	2670529	BreakStatement	break ;	3663:8:167123:167128	2669500	4	True				
ANR	2670530	Label	case 0x40 :	3664:6:167136:167145	2669500	5	True				
ANR	2670531	ExpressionStatement	"func ( stream , ""m"" )"	3665:8:167155:167173	2669500	6	True				
ANR	2670532	CallExpression	"func ( stream , ""m"" )"		2669500	0					
ANR	2670533	Callee	func		2669500	0					
ANR	2670534	Identifier	func		2669500	0					
ANR	2670535	ArgumentList	stream		2669500	1					
ANR	2670536	Argument	stream		2669500	0					
ANR	2670537	Identifier	stream		2669500	0					
ANR	2670538	Argument	"""m"""		2669500	1					
ANR	2670539	PrimaryExpression	"""m"""		2669500	0					
ANR	2670540	BreakStatement	break ;	3666:8:167183:167188	2669500	7	True				
ANR	2670541	Label	default :	3667:6:167196:167203	2669500	8	True				
ANR	2670542	Identifier	default		2669500	0					
ANR	2670543	ExpressionStatement	"func ( stream , ""z"" )"	3668:8:167213:167231	2669500	9	True				
ANR	2670544	CallExpression	"func ( stream , ""z"" )"		2669500	0					
ANR	2670545	Callee	func		2669500	0					
ANR	2670546	Identifier	func		2669500	0					
ANR	2670547	ArgumentList	stream		2669500	1					
ANR	2670548	Argument	stream		2669500	0					
ANR	2670549	Identifier	stream		2669500	0					
ANR	2670550	Argument	"""z"""		2669500	1					
ANR	2670551	PrimaryExpression	"""z"""		2669500	0					
ANR	2670552	BreakStatement	break ;	3669:8:167241:167246	2669500	10	True				
ANR	2670553	BreakStatement	break ;	3671:4:167260:167265	2669500	29	True				
ANR	2670554	Label	case '0' :	3673:2:167270:167278	2669500	30	True				
ANR	2670555	Label	case '1' :	3673:12:167280:167288	2669500	31	True				
ANR	2670556	Label	case '2' :	3673:22:167290:167298	2669500	32	True				
ANR	2670557	Label	case '3' :	3673:32:167300:167308	2669500	33	True				
ANR	2670558	Label	case '4' :	3673:42:167310:167318	2669500	34	True				
ANR	2670559	Label	case '5' :	3674:2:167322:167330	2669500	35	True				
ANR	2670560	Label	case '6' :	3674:12:167332:167340	2669500	36	True				
ANR	2670561	Label	case '7' :	3674:22:167342:167350	2669500	37	True				
ANR	2670562	Label	case '8' :	3674:32:167352:167360	2669500	38	True				
ANR	2670563	Label	case '9' :	3674:42:167362:167370	2669500	39	True				
ANR	2670564	CompoundStatement		307:6:6763:6772	2669500	40					
ANR	2670565	IdentifierDeclStatement	int width ;	3676:6:167384:167393	2669500	0	True				
ANR	2670566	IdentifierDecl	width		2669500	0					
ANR	2670567	IdentifierDeclType	int		2669500	0					
ANR	2670568	Identifier	width		2669500	1					
ANR	2670569	ExpressionStatement	"c = arm_decode_bitfield ( c , given , & value , & width )"	3678:6:167402:167452	2669500	1	True				
ANR	2670570	AssignmentExpression	"c = arm_decode_bitfield ( c , given , & value , & width )"		2669500	0		=			
ANR	2670571	Identifier	c		2669500	0					
ANR	2670572	CallExpression	"arm_decode_bitfield ( c , given , & value , & width )"		2669500	1					
ANR	2670573	Callee	arm_decode_bitfield		2669500	0					
ANR	2670574	Identifier	arm_decode_bitfield		2669500	0					
ANR	2670575	ArgumentList	c		2669500	1					
ANR	2670576	Argument	c		2669500	0					
ANR	2670577	Identifier	c		2669500	0					
ANR	2670578	Argument	given		2669500	1					
ANR	2670579	Identifier	given		2669500	0					
ANR	2670580	Argument	& value		2669500	2					
ANR	2670581	UnaryOperationExpression	& value		2669500	0					
ANR	2670582	UnaryOperator	&		2669500	0					
ANR	2670583	Identifier	value		2669500	1					
ANR	2670584	Argument	& width		2669500	3					
ANR	2670585	UnaryOperationExpression	& width		2669500	0					
ANR	2670586	UnaryOperator	&		2669500	0					
ANR	2670587	Identifier	width		2669500	1					
ANR	2670588	SwitchStatement	switch ( * c )		2669500	2					
ANR	2670589	Condition	* c	3680:14:167469:167470	2669500	0	True				
ANR	2670590	UnaryOperationExpression	* c		2669500	0					
ANR	2670591	UnaryOperator	*		2669500	0					
ANR	2670592	Identifier	c		2669500	1					
ANR	2670593	CompoundStatement		312:8:6860:6860	2669500	1					
ANR	2670594	Label	case 'R' :	3682:8:167491:167499	2669500	0	True				
ANR	2670595	IfStatement	if ( value == 15 )		2669500	1					
ANR	2670596	Condition	value == 15	3683:13:167514:167524	2669500	0	True				
ANR	2670597	EqualityExpression	value == 15		2669500	0		==			
ANR	2670598	Identifier	value		2669500	0					
ANR	2670599	PrimaryExpression	15		2669500	1					
ANR	2670600	CompoundStatement		314:26:6906:6906	2669500	1					
ANR	2670601	ExpressionStatement	is_unpredictable = TRUE	3684:10:167539:167562	2669500	0	True				
ANR	2670602	AssignmentExpression	is_unpredictable = TRUE		2669500	0		=			
ANR	2670603	Identifier	is_unpredictable		2669500	0					
ANR	2670604	Identifier	TRUE		2669500	1					
ANR	2670605	Label	case 'r' :	3687:8:167613:167621	2669500	2	True				
ANR	2670606	IfStatement	if ( c [ 1 ] == 'u' )		2669500	3					
ANR	2670607	Condition	c [ 1 ] == 'u'	3688:7:167630:167640	2669500	0	True				
ANR	2670608	EqualityExpression	c [ 1 ] == 'u'		2669500	0		==			
ANR	2670609	ArrayIndexing	c [ 1 ]		2669500	0					
ANR	2670610	Identifier	c		2669500	0					
ANR	2670611	PrimaryExpression	1		2669500	1					
ANR	2670612	PrimaryExpression	'u'		2669500	1					
ANR	2670613	CompoundStatement		320:5:7027:7027	2669500	1					
ANR	2670614	ExpressionStatement	++ c	3691:7:167694:167698	2669500	0	True				
ANR	2670615	UnaryExpression	++ c		2669500	0					
ANR	2670616	IncDec	++		2669500	0					
ANR	2670617	Identifier	c		2669500	1					
ANR	2670618	IfStatement	if ( u_reg == value )		2669500	1					
ANR	2670619	Condition	u_reg == value	3693:11:167712:167725	2669500	0	True				
ANR	2670620	EqualityExpression	u_reg == value		2669500	0		==			
ANR	2670621	Identifier	u_reg		2669500	0					
ANR	2670622	Identifier	value		2669500	1					
ANR	2670623	CompoundStatement		324:27:7107:7107	2669500	1					
ANR	2670624	ExpressionStatement	is_unpredictable = TRUE	3694:8:167738:167761	2669500	0	True				
ANR	2670625	AssignmentExpression	is_unpredictable = TRUE		2669500	0		=			
ANR	2670626	Identifier	is_unpredictable		2669500	0					
ANR	2670627	Identifier	TRUE		2669500	1					
ANR	2670628	ExpressionStatement	u_reg = value	3696:7:167779:167792	2669500	2	True				
ANR	2670629	AssignmentExpression	u_reg = value		2669500	0		=			
ANR	2670630	Identifier	u_reg		2669500	0					
ANR	2670631	Identifier	value		2669500	1					
ANR	2670632	ExpressionStatement	"func ( stream , ""%s"" , arm_regnames [ value & 0xf ] )"	3698:24:167825:167872	2669500	4	True				
ANR	2670633	CallExpression	"func ( stream , ""%s"" , arm_regnames [ value & 0xf ] )"		2669500	0					
ANR	2670634	Callee	func		2669500	0					
ANR	2670635	Identifier	func		2669500	0					
ANR	2670636	ArgumentList	stream		2669500	1					
ANR	2670637	Argument	stream		2669500	0					
ANR	2670638	Identifier	stream		2669500	0					
ANR	2670639	Argument	"""%s"""		2669500	1					
ANR	2670640	PrimaryExpression	"""%s"""		2669500	0					
ANR	2670641	Argument	arm_regnames [ value & 0xf ]		2669500	2					
ANR	2670642	ArrayIndexing	arm_regnames [ value & 0xf ]		2669500	0					
ANR	2670643	Identifier	arm_regnames		2669500	0					
ANR	2670644	BitAndExpression	value & 0xf		2669500	1		&			
ANR	2670645	Identifier	value		2669500	0					
ANR	2670646	PrimaryExpression	0xf		2669500	1					
ANR	2670647	BreakStatement	break ;	3700:3:167878:167883	2669500	5	True				
ANR	2670648	Label	case 'V' :	3701:8:167893:167901	2669500	6	True				
ANR	2670649	IfStatement	if ( given & ( 1 << 6 ) )		2669500	7					
ANR	2670650	Condition	given & ( 1 << 6 )	3702:13:167916:167931	2669500	0	True				
ANR	2670651	BitAndExpression	given & ( 1 << 6 )		2669500	0		&			
ANR	2670652	Identifier	given		2669500	0					
ANR	2670653	ShiftExpression	1 << 6		2669500	1		<<			
ANR	2670654	PrimaryExpression	1		2669500	0					
ANR	2670655	PrimaryExpression	6		2669500	1					
ANR	2670656	CompoundStatement		333:31:7313:7313	2669500	1					
ANR	2670657	GotoStatement	goto Q ;	3703:10:167946:167952	2669500	0	True				
ANR	2670658	Identifier	Q		2669500	0					
ANR	2670659	Label	case 'D' :	3706:8:168000:168008	2669500	8	True				
ANR	2670660	ExpressionStatement	"func ( stream , ""d%ld"" , value )"	3707:3:168013:168041	2669500	9	True				
ANR	2670661	CallExpression	"func ( stream , ""d%ld"" , value )"		2669500	0					
ANR	2670662	Callee	func		2669500	0					
ANR	2670663	Identifier	func		2669500	0					
ANR	2670664	ArgumentList	stream		2669500	1					
ANR	2670665	Argument	stream		2669500	0					
ANR	2670666	Identifier	stream		2669500	0					
ANR	2670667	Argument	"""d%ld"""		2669500	1					
ANR	2670668	PrimaryExpression	"""d%ld"""		2669500	0					
ANR	2670669	Argument	value		2669500	2					
ANR	2670670	Identifier	value		2669500	0					
ANR	2670671	BreakStatement	break ;	3708:3:168046:168051	2669500	10	True				
ANR	2670672	Label	case 'Q' :	3709:8:168061:168069	2669500	11	True				
ANR	2670673	Label	Q :	3710:8:168079:168080	2669500	12	True				
ANR	2670674	Identifier	Q		2669500	0					
ANR	2670675	IfStatement	if ( value & 1 )		2669500	13					
ANR	2670676	Condition	value & 1	3711:13:168095:168103	2669500	0	True				
ANR	2670677	BitAndExpression	value & 1		2669500	0		&			
ANR	2670678	Identifier	value		2669500	0					
ANR	2670679	PrimaryExpression	1		2669500	1					
ANR	2670680	CompoundStatement		342:24:7485:7485	2669500	1					
ANR	2670681	ExpressionStatement	"func ( stream , ""<illegal reg q%ld.5>"" , value >> 1 )"	3712:10:168118:168167	2669500	0	True				
ANR	2670682	CallExpression	"func ( stream , ""<illegal reg q%ld.5>"" , value >> 1 )"		2669500	0					
ANR	2670683	Callee	func		2669500	0					
ANR	2670684	Identifier	func		2669500	0					
ANR	2670685	ArgumentList	stream		2669500	1					
ANR	2670686	Argument	stream		2669500	0					
ANR	2670687	Identifier	stream		2669500	0					
ANR	2670688	Argument	"""<illegal reg q%ld.5>"""		2669500	1					
ANR	2670689	PrimaryExpression	"""<illegal reg q%ld.5>"""		2669500	0					
ANR	2670690	Argument	value >> 1		2669500	2					
ANR	2670691	ShiftExpression	value >> 1		2669500	0		>>			
ANR	2670692	Identifier	value		2669500	0					
ANR	2670693	PrimaryExpression	1		2669500	1					
ANR	2670694	ElseStatement	else		2669500	0					
ANR	2670695	CompoundStatement		344:16:7564:7564	2669500	0					
ANR	2670696	ExpressionStatement	"func ( stream , ""q%ld"" , value >> 1 )"	3714:10:168197:168230	2669500	0	True				
ANR	2670697	CallExpression	"func ( stream , ""q%ld"" , value >> 1 )"		2669500	0					
ANR	2670698	Callee	func		2669500	0					
ANR	2670699	Identifier	func		2669500	0					
ANR	2670700	ArgumentList	stream		2669500	1					
ANR	2670701	Argument	stream		2669500	0					
ANR	2670702	Identifier	stream		2669500	0					
ANR	2670703	Argument	"""q%ld"""		2669500	1					
ANR	2670704	PrimaryExpression	"""q%ld"""		2669500	0					
ANR	2670705	Argument	value >> 1		2669500	2					
ANR	2670706	ShiftExpression	value >> 1		2669500	0		>>			
ANR	2670707	Identifier	value		2669500	0					
ANR	2670708	PrimaryExpression	1		2669500	1					
ANR	2670709	BreakStatement	break ;	3716:9:168252:168257	2669500	14	True				
ANR	2670710	Label	case 'd' :	3717:8:168267:168275	2669500	15	True				
ANR	2670711	ExpressionStatement	"func ( stream , ""%ld"" , value )"	3718:3:168280:168307	2669500	16	True				
ANR	2670712	CallExpression	"func ( stream , ""%ld"" , value )"		2669500	0					
ANR	2670713	Callee	func		2669500	0					
ANR	2670714	Identifier	func		2669500	0					
ANR	2670715	ArgumentList	stream		2669500	1					
ANR	2670716	Argument	stream		2669500	0					
ANR	2670717	Identifier	stream		2669500	0					
ANR	2670718	Argument	"""%ld"""		2669500	1					
ANR	2670719	PrimaryExpression	"""%ld"""		2669500	0					
ANR	2670720	Argument	value		2669500	2					
ANR	2670721	Identifier	value		2669500	0					
ANR	2670722	BreakStatement	break ;	3720:3:168344:168349	2669500	17	True				
ANR	2670723	Label	case 'E' :	3721:8:168359:168367	2669500	18	True				
ANR	2670724	CompoundStatement		362:5:8134:8233	2669500	19					
ANR	2670725	IdentifierDeclStatement	unsigned floatVal = ( value & 0x80 ) << 24 | ( value & 0x3F ) << 19 | ( ( value & 0x40 ) ? ( 0xF8 << 22 ) : ( 1 << 30 ) ) ;	3724:5:168458:168581	2669500	0	True				
ANR	2670726	IdentifierDecl	floatVal = ( value & 0x80 ) << 24 | ( value & 0x3F ) << 19 | ( ( value & 0x40 ) ? ( 0xF8 << 22 ) : ( 1 << 30 ) )		2669500	0					
ANR	2670727	IdentifierDeclType	unsigned		2669500	0					
ANR	2670728	Identifier	floatVal		2669500	1					
ANR	2670729	AssignmentExpression	floatVal = ( value & 0x80 ) << 24 | ( value & 0x3F ) << 19 | ( ( value & 0x40 ) ? ( 0xF8 << 22 ) : ( 1 << 30 ) )		2669500	2		=			
ANR	2670730	Identifier	floatVal		2669500	0					
ANR	2670731	InclusiveOrExpression	( value & 0x80 ) << 24 | ( value & 0x3F ) << 19 | ( ( value & 0x40 ) ? ( 0xF8 << 22 ) : ( 1 << 30 ) )		2669500	1		|			
ANR	2670732	ShiftExpression	( value & 0x80 ) << 24		2669500	0		<<			
ANR	2670733	BitAndExpression	value & 0x80		2669500	0		&			
ANR	2670734	Identifier	value		2669500	0					
ANR	2670735	PrimaryExpression	0x80		2669500	1					
ANR	2670736	PrimaryExpression	24		2669500	1					
ANR	2670737	InclusiveOrExpression	( value & 0x3F ) << 19 | ( ( value & 0x40 ) ? ( 0xF8 << 22 ) : ( 1 << 30 ) )		2669500	1		|			
ANR	2670738	ShiftExpression	( value & 0x3F ) << 19		2669500	0		<<			
ANR	2670739	BitAndExpression	value & 0x3F		2669500	0		&			
ANR	2670740	Identifier	value		2669500	0					
ANR	2670741	PrimaryExpression	0x3F		2669500	1					
ANR	2670742	PrimaryExpression	19		2669500	1					
ANR	2670743	ConditionalExpression	( value & 0x40 ) ? ( 0xF8 << 22 ) : ( 1 << 30 )		2669500	1					
ANR	2670744	Condition	value & 0x40		2669500	0					
ANR	2670745	BitAndExpression	value & 0x40		2669500	0		&			
ANR	2670746	Identifier	value		2669500	0					
ANR	2670747	PrimaryExpression	0x40		2669500	1					
ANR	2670748	ShiftExpression	0xF8 << 22		2669500	1		<<			
ANR	2670749	PrimaryExpression	0xF8		2669500	0					
ANR	2670750	PrimaryExpression	22		2669500	1					
ANR	2670751	ShiftExpression	1 << 30		2669500	2		<<			
ANR	2670752	PrimaryExpression	1		2669500	0					
ANR	2670753	PrimaryExpression	30		2669500	1					
ANR	2670754	IdentifierDeclStatement	unsigned decVal = ( 78125 << ( ( ( floatVal >> 23 ) & 0xFF ) - 124 ) ) * ( 16 + ( value & 0xF ) ) ;	3731:5:168755:168854	2669500	1	True				
ANR	2670755	IdentifierDecl	decVal = ( 78125 << ( ( ( floatVal >> 23 ) & 0xFF ) - 124 ) ) * ( 16 + ( value & 0xF ) )		2669500	0					
ANR	2670756	IdentifierDeclType	unsigned		2669500	0					
ANR	2670757	Identifier	decVal		2669500	1					
ANR	2670758	AssignmentExpression	decVal = ( 78125 << ( ( ( floatVal >> 23 ) & 0xFF ) - 124 ) ) * ( 16 + ( value & 0xF ) )		2669500	2		=			
ANR	2670759	Identifier	decVal		2669500	0					
ANR	2670760	MultiplicativeExpression	( 78125 << ( ( ( floatVal >> 23 ) & 0xFF ) - 124 ) ) * ( 16 + ( value & 0xF ) )		2669500	1		*			
ANR	2670761	ShiftExpression	78125 << ( ( ( floatVal >> 23 ) & 0xFF ) - 124 )		2669500	0		<<			
ANR	2670762	PrimaryExpression	78125		2669500	0					
ANR	2670763	AdditiveExpression	( ( floatVal >> 23 ) & 0xFF ) - 124		2669500	1		-			
ANR	2670764	BitAndExpression	( floatVal >> 23 ) & 0xFF		2669500	0		&			
ANR	2670765	ShiftExpression	floatVal >> 23		2669500	0		>>			
ANR	2670766	Identifier	floatVal		2669500	0					
ANR	2670767	PrimaryExpression	23		2669500	1					
ANR	2670768	PrimaryExpression	0xFF		2669500	1					
ANR	2670769	PrimaryExpression	124		2669500	1					
ANR	2670770	AdditiveExpression	16 + ( value & 0xF )		2669500	1		+			
ANR	2670771	PrimaryExpression	16		2669500	0					
ANR	2670772	BitAndExpression	value & 0xF		2669500	1		&			
ANR	2670773	Identifier	value		2669500	0					
ANR	2670774	PrimaryExpression	0xF		2669500	1					
ANR	2670775	IfStatement	if ( ! ( decVal % 1000000 ) )		2669500	2					
ANR	2670776	Condition	! ( decVal % 1000000 )	3735:9:168866:168884	2669500	0	True				
ANR	2670777	UnaryOperationExpression	! ( decVal % 1000000 )		2669500	0					
ANR	2670778	UnaryOperator	!		2669500	0					
ANR	2670779	MultiplicativeExpression	decVal % 1000000		2669500	1		%			
ANR	2670780	Identifier	decVal		2669500	0					
ANR	2670781	PrimaryExpression	1000000		2669500	1					
ANR	2670782	CompoundStatement		366:30:8266:8266	2669500	1					
ANR	2670783	ExpressionStatement	"func ( stream , ""%ld ; 0x%08x %c%u.%01u"" , value , floatVal , value & 0x80 ? '-' : ' ' , decVal / 10000000 , decVal % 10000000 / 1000000 )"	3736:6:168895:169046	2669500	0	True				
ANR	2670784	CallExpression	"func ( stream , ""%ld ; 0x%08x %c%u.%01u"" , value , floatVal , value & 0x80 ? '-' : ' ' , decVal / 10000000 , decVal % 10000000 / 1000000 )"		2669500	0					
ANR	2670785	Callee	func		2669500	0					
ANR	2670786	Identifier	func		2669500	0					
ANR	2670787	ArgumentList	stream		2669500	1					
ANR	2670788	Argument	stream		2669500	0					
ANR	2670789	Identifier	stream		2669500	0					
ANR	2670790	Argument	"""%ld ; 0x%08x %c%u.%01u"""		2669500	1					
ANR	2670791	PrimaryExpression	"""%ld ; 0x%08x %c%u.%01u"""		2669500	0					
ANR	2670792	Argument	value		2669500	2					
ANR	2670793	Identifier	value		2669500	0					
ANR	2670794	Argument	floatVal		2669500	3					
ANR	2670795	Identifier	floatVal		2669500	0					
ANR	2670796	Argument	value & 0x80 ? '-' : ' '		2669500	4					
ANR	2670797	ConditionalExpression	value & 0x80 ? '-' : ' '		2669500	0					
ANR	2670798	Condition	value & 0x80		2669500	0					
ANR	2670799	BitAndExpression	value & 0x80		2669500	0		&			
ANR	2670800	Identifier	value		2669500	0					
ANR	2670801	PrimaryExpression	0x80		2669500	1					
ANR	2670802	PrimaryExpression	'-'		2669500	1					
ANR	2670803	PrimaryExpression	' '		2669500	2					
ANR	2670804	Argument	decVal / 10000000		2669500	5					
ANR	2670805	MultiplicativeExpression	decVal / 10000000		2669500	0		/			
ANR	2670806	Identifier	decVal		2669500	0					
ANR	2670807	PrimaryExpression	10000000		2669500	1					
ANR	2670808	Argument	decVal % 10000000 / 1000000		2669500	6					
ANR	2670809	MultiplicativeExpression	decVal % 10000000 / 1000000		2669500	0		%			
ANR	2670810	Identifier	decVal		2669500	0					
ANR	2670811	MultiplicativeExpression	10000000 / 1000000		2669500	1		/			
ANR	2670812	PrimaryExpression	10000000		2669500	0					
ANR	2670813	PrimaryExpression	1000000		2669500	1					
ANR	2670814	ElseStatement	else		2669500	0					
ANR	2670815	IfStatement	if ( ! ( decVal % 10000 ) )		2669500	0					
ANR	2670816	Condition	! ( decVal % 10000 )	3740:16:169064:169080	2669500	0	True				
ANR	2670817	UnaryOperationExpression	! ( decVal % 10000 )		2669500	0					
ANR	2670818	UnaryOperator	!		2669500	0					
ANR	2670819	MultiplicativeExpression	decVal % 10000		2669500	1		%			
ANR	2670820	Identifier	decVal		2669500	0					
ANR	2670821	PrimaryExpression	10000		2669500	1					
ANR	2670822	CompoundStatement		371:35:8462:8462	2669500	1					
ANR	2670823	ExpressionStatement	"func ( stream , ""%ld ; 0x%08x %c%u.%03u"" , value , floatVal , value & 0x80 ? '-' : ' ' , decVal / 10000000 , decVal % 10000000 / 10000 )"	3741:6:169091:169240	2669500	0	True				
ANR	2670824	CallExpression	"func ( stream , ""%ld ; 0x%08x %c%u.%03u"" , value , floatVal , value & 0x80 ? '-' : ' ' , decVal / 10000000 , decVal % 10000000 / 10000 )"		2669500	0					
ANR	2670825	Callee	func		2669500	0					
ANR	2670826	Identifier	func		2669500	0					
ANR	2670827	ArgumentList	stream		2669500	1					
ANR	2670828	Argument	stream		2669500	0					
ANR	2670829	Identifier	stream		2669500	0					
ANR	2670830	Argument	"""%ld ; 0x%08x %c%u.%03u"""		2669500	1					
ANR	2670831	PrimaryExpression	"""%ld ; 0x%08x %c%u.%03u"""		2669500	0					
ANR	2670832	Argument	value		2669500	2					
ANR	2670833	Identifier	value		2669500	0					
ANR	2670834	Argument	floatVal		2669500	3					
ANR	2670835	Identifier	floatVal		2669500	0					
ANR	2670836	Argument	value & 0x80 ? '-' : ' '		2669500	4					
ANR	2670837	ConditionalExpression	value & 0x80 ? '-' : ' '		2669500	0					
ANR	2670838	Condition	value & 0x80		2669500	0					
ANR	2670839	BitAndExpression	value & 0x80		2669500	0		&			
ANR	2670840	Identifier	value		2669500	0					
ANR	2670841	PrimaryExpression	0x80		2669500	1					
ANR	2670842	PrimaryExpression	'-'		2669500	1					
ANR	2670843	PrimaryExpression	' '		2669500	2					
ANR	2670844	Argument	decVal / 10000000		2669500	5					
ANR	2670845	MultiplicativeExpression	decVal / 10000000		2669500	0		/			
ANR	2670846	Identifier	decVal		2669500	0					
ANR	2670847	PrimaryExpression	10000000		2669500	1					
ANR	2670848	Argument	decVal % 10000000 / 10000		2669500	6					
ANR	2670849	MultiplicativeExpression	decVal % 10000000 / 10000		2669500	0		%			
ANR	2670850	Identifier	decVal		2669500	0					
ANR	2670851	MultiplicativeExpression	10000000 / 10000		2669500	1		/			
ANR	2670852	PrimaryExpression	10000000		2669500	0					
ANR	2670853	PrimaryExpression	10000		2669500	1					
ANR	2670854	ElseStatement	else		2669500	0					
ANR	2670855	CompoundStatement		376:12:8633:8633	2669500	0					
ANR	2670856	ExpressionStatement	"func ( stream , ""%ld ; 0x%08x %c%u.%07u"" , value , floatVal , value & 0x80 ? '-' : ' ' , decVal / 10000000 , decVal % 10000000 )"	3746:6:169262:169396	2669500	0	True				
ANR	2670857	CallExpression	"func ( stream , ""%ld ; 0x%08x %c%u.%07u"" , value , floatVal , value & 0x80 ? '-' : ' ' , decVal / 10000000 , decVal % 10000000 )"		2669500	0					
ANR	2670858	Callee	func		2669500	0					
ANR	2670859	Identifier	func		2669500	0					
ANR	2670860	ArgumentList	stream		2669500	1					
ANR	2670861	Argument	stream		2669500	0					
ANR	2670862	Identifier	stream		2669500	0					
ANR	2670863	Argument	"""%ld ; 0x%08x %c%u.%07u"""		2669500	1					
ANR	2670864	PrimaryExpression	"""%ld ; 0x%08x %c%u.%07u"""		2669500	0					
ANR	2670865	Argument	value		2669500	2					
ANR	2670866	Identifier	value		2669500	0					
ANR	2670867	Argument	floatVal		2669500	3					
ANR	2670868	Identifier	floatVal		2669500	0					
ANR	2670869	Argument	value & 0x80 ? '-' : ' '		2669500	4					
ANR	2670870	ConditionalExpression	value & 0x80 ? '-' : ' '		2669500	0					
ANR	2670871	Condition	value & 0x80		2669500	0					
ANR	2670872	BitAndExpression	value & 0x80		2669500	0		&			
ANR	2670873	Identifier	value		2669500	0					
ANR	2670874	PrimaryExpression	0x80		2669500	1					
ANR	2670875	PrimaryExpression	'-'		2669500	1					
ANR	2670876	PrimaryExpression	' '		2669500	2					
ANR	2670877	Argument	decVal / 10000000		2669500	5					
ANR	2670878	MultiplicativeExpression	decVal / 10000000		2669500	0		/			
ANR	2670879	Identifier	decVal		2669500	0					
ANR	2670880	PrimaryExpression	10000000		2669500	1					
ANR	2670881	Argument	decVal % 10000000		2669500	6					
ANR	2670882	MultiplicativeExpression	decVal % 10000000		2669500	0		%			
ANR	2670883	Identifier	decVal		2669500	0					
ANR	2670884	PrimaryExpression	10000000		2669500	1					
ANR	2670885	BreakStatement	break ;	3750:5:169410:169415	2669500	3	True				
ANR	2670886	Label	case 'k' :	3752:8:169430:169438	2669500	20	True				
ANR	2670887	CompoundStatement		385:5:8829:8868	2669500	21					
ANR	2670888	IdentifierDeclStatement	int from = ( given & ( 1 << 7 ) ) ? 32 : 16 ;	3754:5:169450:169489	2669500	0	True				
ANR	2670889	IdentifierDecl	from = ( given & ( 1 << 7 ) ) ? 32 : 16		2669500	0					
ANR	2670890	IdentifierDeclType	int		2669500	0					
ANR	2670891	Identifier	from		2669500	1					
ANR	2670892	AssignmentExpression	from = ( given & ( 1 << 7 ) ) ? 32 : 16		2669500	2		=			
ANR	2670893	Identifier	from		2669500	0					
ANR	2670894	ConditionalExpression	( given & ( 1 << 7 ) ) ? 32 : 16		2669500	1					
ANR	2670895	Condition	given & ( 1 << 7 )		2669500	0					
ANR	2670896	BitAndExpression	given & ( 1 << 7 )		2669500	0		&			
ANR	2670897	Identifier	given		2669500	0					
ANR	2670898	ShiftExpression	1 << 7		2669500	1		<<			
ANR	2670899	PrimaryExpression	1		2669500	0					
ANR	2670900	PrimaryExpression	7		2669500	1					
ANR	2670901	PrimaryExpression	32		2669500	1					
ANR	2670902	PrimaryExpression	16		2669500	2					
ANR	2670903	ExpressionStatement	"func ( stream , ""%ld"" , from - value )"	3755:5:169496:169530	2669500	1	True				
ANR	2670904	CallExpression	"func ( stream , ""%ld"" , from - value )"		2669500	0					
ANR	2670905	Callee	func		2669500	0					
ANR	2670906	Identifier	func		2669500	0					
ANR	2670907	ArgumentList	stream		2669500	1					
ANR	2670908	Argument	stream		2669500	0					
ANR	2670909	Identifier	stream		2669500	0					
ANR	2670910	Argument	"""%ld"""		2669500	1					
ANR	2670911	PrimaryExpression	"""%ld"""		2669500	0					
ANR	2670912	Argument	from - value		2669500	2					
ANR	2670913	AdditiveExpression	from - value		2669500	0		-			
ANR	2670914	Identifier	from		2669500	0					
ANR	2670915	Identifier	value		2669500	1					
ANR	2670916	BreakStatement	break ;	3757:3:169540:169545	2669500	22	True				
ANR	2670917	Label	case 'f' :	3759:8:169556:169564	2669500	23	True				
ANR	2670918	IfStatement	if ( value > 7 )		2669500	24					
ANR	2670919	Condition	value > 7	3760:13:169579:169587	2669500	0	True				
ANR	2670920	RelationalExpression	value > 7		2669500	0		>			
ANR	2670921	Identifier	value		2669500	0					
ANR	2670922	PrimaryExpression	7		2669500	1					
ANR	2670923	CompoundStatement		391:24:8969:8969	2669500	1					
ANR	2670924	ExpressionStatement	"func ( stream , ""%s"" , arm_fp_const [ value & 7 ] )"	3761:10:169602:169646	2669500	0	True				
ANR	2670925	CallExpression	"func ( stream , ""%s"" , arm_fp_const [ value & 7 ] )"		2669500	0					
ANR	2670926	Callee	func		2669500	0					
ANR	2670927	Identifier	func		2669500	0					
ANR	2670928	ArgumentList	stream		2669500	1					
ANR	2670929	Argument	stream		2669500	0					
ANR	2670930	Identifier	stream		2669500	0					
ANR	2670931	Argument	"""%s"""		2669500	1					
ANR	2670932	PrimaryExpression	"""%s"""		2669500	0					
ANR	2670933	Argument	arm_fp_const [ value & 7 ]		2669500	2					
ANR	2670934	ArrayIndexing	arm_fp_const [ value & 7 ]		2669500	0					
ANR	2670935	Identifier	arm_fp_const		2669500	0					
ANR	2670936	BitAndExpression	value & 7		2669500	1		&			
ANR	2670937	Identifier	value		2669500	0					
ANR	2670938	PrimaryExpression	7		2669500	1					
ANR	2670939	ElseStatement	else		2669500	0					
ANR	2670940	CompoundStatement		393:16:9043:9043	2669500	0					
ANR	2670941	ExpressionStatement	"func ( stream , ""f%ld"" , value )"	3763:10:169676:169704	2669500	0	True				
ANR	2670942	CallExpression	"func ( stream , ""f%ld"" , value )"		2669500	0					
ANR	2670943	Callee	func		2669500	0					
ANR	2670944	Identifier	func		2669500	0					
ANR	2670945	ArgumentList	stream		2669500	1					
ANR	2670946	Argument	stream		2669500	0					
ANR	2670947	Identifier	stream		2669500	0					
ANR	2670948	Argument	"""f%ld"""		2669500	1					
ANR	2670949	PrimaryExpression	"""f%ld"""		2669500	0					
ANR	2670950	Argument	value		2669500	2					
ANR	2670951	Identifier	value		2669500	0					
ANR	2670952	BreakStatement	break ;	3765:9:169726:169731	2669500	25	True				
ANR	2670953	Label	case 'w' :	3767:8:169742:169750	2669500	26	True				
ANR	2670954	IfStatement	if ( width == 2 )		2669500	27					
ANR	2670955	Condition	width == 2	3768:13:169765:169774	2669500	0	True				
ANR	2670956	EqualityExpression	width == 2		2669500	0		==			
ANR	2670957	Identifier	width		2669500	0					
ANR	2670958	PrimaryExpression	2		2669500	1					
ANR	2670959	CompoundStatement		399:25:9156:9156	2669500	1					
ANR	2670960	ExpressionStatement	"func ( stream , ""%s"" , iwmmxt_wwnames [ value ] )"	3769:10:169789:169831	2669500	0	True				
ANR	2670961	CallExpression	"func ( stream , ""%s"" , iwmmxt_wwnames [ value ] )"		2669500	0					
ANR	2670962	Callee	func		2669500	0					
ANR	2670963	Identifier	func		2669500	0					
ANR	2670964	ArgumentList	stream		2669500	1					
ANR	2670965	Argument	stream		2669500	0					
ANR	2670966	Identifier	stream		2669500	0					
ANR	2670967	Argument	"""%s"""		2669500	1					
ANR	2670968	PrimaryExpression	"""%s"""		2669500	0					
ANR	2670969	Argument	iwmmxt_wwnames [ value ]		2669500	2					
ANR	2670970	ArrayIndexing	iwmmxt_wwnames [ value ]		2669500	0					
ANR	2670971	Identifier	iwmmxt_wwnames		2669500	0					
ANR	2670972	Identifier	value		2669500	1					
ANR	2670973	ElseStatement	else		2669500	0					
ANR	2670974	CompoundStatement		401:16:9228:9228	2669500	0					
ANR	2670975	ExpressionStatement	"func ( stream , ""%s"" , iwmmxt_wwssnames [ value ] )"	3771:10:169861:169905	2669500	0	True				
ANR	2670976	CallExpression	"func ( stream , ""%s"" , iwmmxt_wwssnames [ value ] )"		2669500	0					
ANR	2670977	Callee	func		2669500	0					
ANR	2670978	Identifier	func		2669500	0					
ANR	2670979	ArgumentList	stream		2669500	1					
ANR	2670980	Argument	stream		2669500	0					
ANR	2670981	Identifier	stream		2669500	0					
ANR	2670982	Argument	"""%s"""		2669500	1					
ANR	2670983	PrimaryExpression	"""%s"""		2669500	0					
ANR	2670984	Argument	iwmmxt_wwssnames [ value ]		2669500	2					
ANR	2670985	ArrayIndexing	iwmmxt_wwssnames [ value ]		2669500	0					
ANR	2670986	Identifier	iwmmxt_wwssnames		2669500	0					
ANR	2670987	Identifier	value		2669500	1					
ANR	2670988	BreakStatement	break ;	3773:9:169927:169932	2669500	28	True				
ANR	2670989	Label	case 'g' :	3775:8:169943:169951	2669500	29	True				
ANR	2670990	ExpressionStatement	"func ( stream , ""%s"" , iwmmxt_regnames [ value ] )"	3776:3:169956:169999	2669500	30	True				
ANR	2670991	CallExpression	"func ( stream , ""%s"" , iwmmxt_regnames [ value ] )"		2669500	0					
ANR	2670992	Callee	func		2669500	0					
ANR	2670993	Identifier	func		2669500	0					
ANR	2670994	ArgumentList	stream		2669500	1					
ANR	2670995	Argument	stream		2669500	0					
ANR	2670996	Identifier	stream		2669500	0					
ANR	2670997	Argument	"""%s"""		2669500	1					
ANR	2670998	PrimaryExpression	"""%s"""		2669500	0					
ANR	2670999	Argument	iwmmxt_regnames [ value ]		2669500	2					
ANR	2671000	ArrayIndexing	iwmmxt_regnames [ value ]		2669500	0					
ANR	2671001	Identifier	iwmmxt_regnames		2669500	0					
ANR	2671002	Identifier	value		2669500	1					
ANR	2671003	BreakStatement	break ;	3777:3:170004:170009	2669500	31	True				
ANR	2671004	Label	case 'G' :	3778:8:170019:170027	2669500	32	True				
ANR	2671005	ExpressionStatement	"func ( stream , ""%s"" , iwmmxt_cregnames [ value ] )"	3779:3:170032:170076	2669500	33	True				
ANR	2671006	CallExpression	"func ( stream , ""%s"" , iwmmxt_cregnames [ value ] )"		2669500	0					
ANR	2671007	Callee	func		2669500	0					
ANR	2671008	Identifier	func		2669500	0					
ANR	2671009	ArgumentList	stream		2669500	1					
ANR	2671010	Argument	stream		2669500	0					
ANR	2671011	Identifier	stream		2669500	0					
ANR	2671012	Argument	"""%s"""		2669500	1					
ANR	2671013	PrimaryExpression	"""%s"""		2669500	0					
ANR	2671014	Argument	iwmmxt_cregnames [ value ]		2669500	2					
ANR	2671015	ArrayIndexing	iwmmxt_cregnames [ value ]		2669500	0					
ANR	2671016	Identifier	iwmmxt_cregnames		2669500	0					
ANR	2671017	Identifier	value		2669500	1					
ANR	2671018	BreakStatement	break ;	3780:3:170081:170086	2669500	34	True				
ANR	2671019	Label	case 'x' :	3782:8:170097:170105	2669500	35	True				
ANR	2671020	ExpressionStatement	"func ( stream , ""0x%lx"" , ( value & 0xffffffffUL ) )"	3783:3:170110:170156	2669500	36	True				
ANR	2671021	CallExpression	"func ( stream , ""0x%lx"" , ( value & 0xffffffffUL ) )"		2669500	0					
ANR	2671022	Callee	func		2669500	0					
ANR	2671023	Identifier	func		2669500	0					
ANR	2671024	ArgumentList	stream		2669500	1					
ANR	2671025	Argument	stream		2669500	0					
ANR	2671026	Identifier	stream		2669500	0					
ANR	2671027	Argument	"""0x%lx"""		2669500	1					
ANR	2671028	PrimaryExpression	"""0x%lx"""		2669500	0					
ANR	2671029	Argument	value & 0xffffffffUL		2669500	2					
ANR	2671030	BitAndExpression	value & 0xffffffffUL		2669500	0		&			
ANR	2671031	Identifier	value		2669500	0					
ANR	2671032	PrimaryExpression	0xffffffffUL		2669500	1					
ANR	2671033	BreakStatement	break ;	3784:3:170161:170166	2669500	37	True				
ANR	2671034	Label	case 'c' :	3786:8:170177:170185	2669500	38	True				
ANR	2671035	SwitchStatement	switch ( value )		2669500	39					
ANR	2671036	Condition	value	3787:11:170198:170202	2669500	0	True				
ANR	2671037	Identifier	value		2669500	0					
ANR	2671038	CompoundStatement		419:5:9589:9589	2669500	1					
ANR	2671039	Label	case 0 :	3789:5:170217:170223	2669500	0	True				
ANR	2671040	ExpressionStatement	"func ( stream , ""eq"" )"	3790:7:170232:170251	2669500	1	True				
ANR	2671041	CallExpression	"func ( stream , ""eq"" )"		2669500	0					
ANR	2671042	Callee	func		2669500	0					
ANR	2671043	Identifier	func		2669500	0					
ANR	2671044	ArgumentList	stream		2669500	1					
ANR	2671045	Argument	stream		2669500	0					
ANR	2671046	Identifier	stream		2669500	0					
ANR	2671047	Argument	"""eq"""		2669500	1					
ANR	2671048	PrimaryExpression	"""eq"""		2669500	0					
ANR	2671049	BreakStatement	break ;	3791:7:170260:170265	2669500	2	True				
ANR	2671050	Label	case 1 :	3793:5:170273:170279	2669500	3	True				
ANR	2671051	ExpressionStatement	"func ( stream , ""vs"" )"	3794:7:170288:170307	2669500	4	True				
ANR	2671052	CallExpression	"func ( stream , ""vs"" )"		2669500	0					
ANR	2671053	Callee	func		2669500	0					
ANR	2671054	Identifier	func		2669500	0					
ANR	2671055	ArgumentList	stream		2669500	1					
ANR	2671056	Argument	stream		2669500	0					
ANR	2671057	Identifier	stream		2669500	0					
ANR	2671058	Argument	"""vs"""		2669500	1					
ANR	2671059	PrimaryExpression	"""vs"""		2669500	0					
ANR	2671060	BreakStatement	break ;	3795:7:170316:170321	2669500	5	True				
ANR	2671061	Label	case 2 :	3797:5:170329:170335	2669500	6	True				
ANR	2671062	ExpressionStatement	"func ( stream , ""ge"" )"	3798:7:170344:170363	2669500	7	True				
ANR	2671063	CallExpression	"func ( stream , ""ge"" )"		2669500	0					
ANR	2671064	Callee	func		2669500	0					
ANR	2671065	Identifier	func		2669500	0					
ANR	2671066	ArgumentList	stream		2669500	1					
ANR	2671067	Argument	stream		2669500	0					
ANR	2671068	Identifier	stream		2669500	0					
ANR	2671069	Argument	"""ge"""		2669500	1					
ANR	2671070	PrimaryExpression	"""ge"""		2669500	0					
ANR	2671071	BreakStatement	break ;	3799:7:170372:170377	2669500	8	True				
ANR	2671072	Label	case 3 :	3801:5:170385:170391	2669500	9	True				
ANR	2671073	ExpressionStatement	"func ( stream , ""gt"" )"	3802:7:170400:170419	2669500	10	True				
ANR	2671074	CallExpression	"func ( stream , ""gt"" )"		2669500	0					
ANR	2671075	Callee	func		2669500	0					
ANR	2671076	Identifier	func		2669500	0					
ANR	2671077	ArgumentList	stream		2669500	1					
ANR	2671078	Argument	stream		2669500	0					
ANR	2671079	Identifier	stream		2669500	0					
ANR	2671080	Argument	"""gt"""		2669500	1					
ANR	2671081	PrimaryExpression	"""gt"""		2669500	0					
ANR	2671082	BreakStatement	break ;	3803:7:170428:170433	2669500	11	True				
ANR	2671083	Label	default :	3805:5:170441:170448	2669500	12	True				
ANR	2671084	Identifier	default		2669500	0					
ANR	2671085	ExpressionStatement	"func ( stream , ""??"" )"	3806:7:170457:170476	2669500	13	True				
ANR	2671086	CallExpression	"func ( stream , ""??"" )"		2669500	0					
ANR	2671087	Callee	func		2669500	0					
ANR	2671088	Identifier	func		2669500	0					
ANR	2671089	ArgumentList	stream		2669500	1					
ANR	2671090	Argument	stream		2669500	0					
ANR	2671091	Identifier	stream		2669500	0					
ANR	2671092	Argument	"""??"""		2669500	1					
ANR	2671093	PrimaryExpression	"""??"""		2669500	0					
ANR	2671094	BreakStatement	break ;	3807:7:170485:170490	2669500	14	True				
ANR	2671095	BreakStatement	break ;	3809:3:170502:170507	2669500	40	True				
ANR	2671096	Label	case '`' :	3811:8:170518:170526	2669500	41	True				
ANR	2671097	ExpressionStatement	c ++	3812:3:170531:170534	2669500	42	True				
ANR	2671098	PostIncDecOperationExpression	c ++		2669500	0					
ANR	2671099	Identifier	c		2669500	0					
ANR	2671100	IncDec	++		2669500	1					
ANR	2671101	IfStatement	if ( value == 0 )		2669500	43					
ANR	2671102	Condition	value == 0	3813:7:170543:170552	2669500	0	True				
ANR	2671103	EqualityExpression	value == 0		2669500	0		==			
ANR	2671104	Identifier	value		2669500	0					
ANR	2671105	PrimaryExpression	0		2669500	1					
ANR	2671106	CompoundStatement		444:19:9934:9934	2669500	1					
ANR	2671107	ExpressionStatement	"func ( stream , ""%c"" , * c )"	3814:4:170561:170584	2669500	0	True				
ANR	2671108	CallExpression	"func ( stream , ""%c"" , * c )"		2669500	0					
ANR	2671109	Callee	func		2669500	0					
ANR	2671110	Identifier	func		2669500	0					
ANR	2671111	ArgumentList	stream		2669500	1					
ANR	2671112	Argument	stream		2669500	0					
ANR	2671113	Identifier	stream		2669500	0					
ANR	2671114	Argument	"""%c"""		2669500	1					
ANR	2671115	PrimaryExpression	"""%c"""		2669500	0					
ANR	2671116	Argument	* c		2669500	2					
ANR	2671117	UnaryOperationExpression	* c		2669500	0					
ANR	2671118	UnaryOperator	*		2669500	0					
ANR	2671119	Identifier	c		2669500	1					
ANR	2671120	BreakStatement	break ;	3816:3:170594:170599	2669500	44	True				
ANR	2671121	Label	case '\\'' :	3817:8:170609:170618	2669500	45	True				
ANR	2671122	ExpressionStatement	c ++	3818:3:170623:170626	2669500	46	True				
ANR	2671123	PostIncDecOperationExpression	c ++		2669500	0					
ANR	2671124	Identifier	c		2669500	0					
ANR	2671125	IncDec	++		2669500	1					
ANR	2671126	IfStatement	if ( value == ( ( 1ul << width ) - 1 ) )		2669500	47					
ANR	2671127	Condition	value == ( ( 1ul << width ) - 1 )	3819:7:170635:170663	2669500	0	True				
ANR	2671128	EqualityExpression	value == ( ( 1ul << width ) - 1 )		2669500	0		==			
ANR	2671129	Identifier	value		2669500	0					
ANR	2671130	AdditiveExpression	( 1ul << width ) - 1		2669500	1		-			
ANR	2671131	ShiftExpression	1ul << width		2669500	0		<<			
ANR	2671132	PrimaryExpression	1ul		2669500	0					
ANR	2671133	Identifier	width		2669500	1					
ANR	2671134	PrimaryExpression	1		2669500	1					
ANR	2671135	CompoundStatement		450:38:10045:10045	2669500	1					
ANR	2671136	ExpressionStatement	"func ( stream , ""%c"" , * c )"	3820:4:170672:170695	2669500	0	True				
ANR	2671137	CallExpression	"func ( stream , ""%c"" , * c )"		2669500	0					
ANR	2671138	Callee	func		2669500	0					
ANR	2671139	Identifier	func		2669500	0					
ANR	2671140	ArgumentList	stream		2669500	1					
ANR	2671141	Argument	stream		2669500	0					
ANR	2671142	Identifier	stream		2669500	0					
ANR	2671143	Argument	"""%c"""		2669500	1					
ANR	2671144	PrimaryExpression	"""%c"""		2669500	0					
ANR	2671145	Argument	* c		2669500	2					
ANR	2671146	UnaryOperationExpression	* c		2669500	0					
ANR	2671147	UnaryOperator	*		2669500	0					
ANR	2671148	Identifier	c		2669500	1					
ANR	2671149	BreakStatement	break ;	3822:3:170705:170710	2669500	48	True				
ANR	2671150	Label	case '?' :	3823:8:170720:170728	2669500	49	True				
ANR	2671151	ExpressionStatement	"func ( stream , ""%c"" , c [ ( 1 << width ) - ( int ) value ] )"	3824:3:170733:170783	2669500	50	True				
ANR	2671152	CallExpression	"func ( stream , ""%c"" , c [ ( 1 << width ) - ( int ) value ] )"		2669500	0					
ANR	2671153	Callee	func		2669500	0					
ANR	2671154	Identifier	func		2669500	0					
ANR	2671155	ArgumentList	stream		2669500	1					
ANR	2671156	Argument	stream		2669500	0					
ANR	2671157	Identifier	stream		2669500	0					
ANR	2671158	Argument	"""%c"""		2669500	1					
ANR	2671159	PrimaryExpression	"""%c"""		2669500	0					
ANR	2671160	Argument	c [ ( 1 << width ) - ( int ) value ]		2669500	2					
ANR	2671161	ArrayIndexing	c [ ( 1 << width ) - ( int ) value ]		2669500	0					
ANR	2671162	Identifier	c		2669500	0					
ANR	2671163	AdditiveExpression	( 1 << width ) - ( int ) value		2669500	1		-			
ANR	2671164	ShiftExpression	1 << width		2669500	0		<<			
ANR	2671165	PrimaryExpression	1		2669500	0					
ANR	2671166	Identifier	width		2669500	1					
ANR	2671167	CastExpression	( int ) value		2669500	1					
ANR	2671168	CastTarget	int		2669500	0					
ANR	2671169	Identifier	value		2669500	1					
ANR	2671170	ExpressionStatement	c += 1 << width	3825:3:170788:170803	2669500	51	True				
ANR	2671171	AssignmentExpression	c += 1 << width		2669500	0		+=			
ANR	2671172	Identifier	c		2669500	0					
ANR	2671173	ShiftExpression	1 << width		2669500	1		<<			
ANR	2671174	PrimaryExpression	1		2669500	0					
ANR	2671175	Identifier	width		2669500	1					
ANR	2671176	BreakStatement	break ;	3826:3:170808:170813	2669500	52	True				
ANR	2671177	Label	default :	3827:8:170823:170830	2669500	53	True				
ANR	2671178	Identifier	default		2669500	0					
ANR	2671179	ReturnStatement	return 0 ;	3828:3:170835:170843	2669500	54	True				
ANR	2671180	PrimaryExpression	0		2669500	0					
ANR	2671181	BreakStatement	break ;	3830:6:170861:170866	2669500	3	True				
ANR	2671182	Label	case 'y' :	3832:4:170873:170881	2669500	4	True				
ANR	2671183	Label	case 'z' :	3833:4:170887:170895	2669500	5	True				
ANR	2671184	CompoundStatement		467:8:10326:10335	2669500	6					
ANR	2671185	IdentifierDeclStatement	int single = * c ++ == 'y' ;	3835:8:170913:170937	2669500	0	True				
ANR	2671186	IdentifierDecl	single = * c ++ == 'y'		2669500	0					
ANR	2671187	IdentifierDeclType	int		2669500	0					
ANR	2671188	Identifier	single		2669500	1					
ANR	2671189	AssignmentExpression	single = * c ++ == 'y'		2669500	2		=			
ANR	2671190	Identifier	single		2669500	0					
ANR	2671191	EqualityExpression	* c ++ == 'y'		2669500	1		==			
ANR	2671192	UnaryOperationExpression	* c ++		2669500	0					
ANR	2671193	UnaryOperator	*		2669500	0					
ANR	2671194	PostIncDecOperationExpression	c ++		2669500	1					
ANR	2671195	Identifier	c		2669500	0					
ANR	2671196	IncDec	++		2669500	1					
ANR	2671197	PrimaryExpression	'y'		2669500	1					
ANR	2671198	IdentifierDeclStatement	int regno ;	3836:8:170947:170956	2669500	1	True				
ANR	2671199	IdentifierDecl	regno		2669500	0					
ANR	2671200	IdentifierDeclType	int		2669500	0					
ANR	2671201	Identifier	regno		2669500	1					
ANR	2671202	SwitchStatement	switch ( * c )		2669500	2					
ANR	2671203	Condition	* c	3838:16:170975:170976	2669500	0	True				
ANR	2671204	UnaryOperationExpression	* c		2669500	0					
ANR	2671205	UnaryOperator	*		2669500	0					
ANR	2671206	Identifier	c		2669500	1					
ANR	2671207	CompoundStatement		470:3:10361:10361	2669500	1					
ANR	2671208	Label	case '4' :	3840:3:170987:170995	2669500	0	True				
ANR	2671209	Label	case '0' :	3841:3:171014:171022	2669500	1	True				
ANR	2671210	ExpressionStatement	regno = given & 0x0000000f	3842:5:171042:171068	2669500	2	True				
ANR	2671211	AssignmentExpression	regno = given & 0x0000000f		2669500	0		=			
ANR	2671212	Identifier	regno		2669500	0					
ANR	2671213	BitAndExpression	given & 0x0000000f		2669500	1		&			
ANR	2671214	Identifier	given		2669500	0					
ANR	2671215	PrimaryExpression	0x0000000f		2669500	1					
ANR	2671216	IfStatement	if ( single )		2669500	3					
ANR	2671217	Condition	single	3843:9:171079:171084	2669500	0	True				
ANR	2671218	Identifier	single		2669500	0					
ANR	2671219	CompoundStatement		475:7:10473:10473	2669500	1					
ANR	2671220	ExpressionStatement	regno <<= 1	3845:9:171105:171116	2669500	0	True				
ANR	2671221	AssignmentExpression	regno <<= 1		2669500	0		<<=			
ANR	2671222	Identifier	regno		2669500	0					
ANR	2671223	PrimaryExpression	1		2669500	1					
ANR	2671224	ExpressionStatement	regno += ( given >> 5 ) & 1	3846:9:171127:171152	2669500	1	True				
ANR	2671225	AssignmentExpression	regno += ( given >> 5 ) & 1		2669500	0		+=			
ANR	2671226	Identifier	regno		2669500	0					
ANR	2671227	BitAndExpression	( given >> 5 ) & 1		2669500	1		&			
ANR	2671228	ShiftExpression	given >> 5		2669500	0		>>			
ANR	2671229	Identifier	given		2669500	0					
ANR	2671230	PrimaryExpression	5		2669500	1					
ANR	2671231	PrimaryExpression	1		2669500	1					
ANR	2671232	ElseStatement	else		2669500	0					
ANR	2671233	CompoundStatement		478:12:10545:10545	2669500	0					
ANR	2671234	ExpressionStatement	regno += ( ( given >> 5 ) & 1 ) << 4	3848:6:171174:171206	2669500	0	True				
ANR	2671235	AssignmentExpression	regno += ( ( given >> 5 ) & 1 ) << 4		2669500	0		+=			
ANR	2671236	Identifier	regno		2669500	0					
ANR	2671237	ShiftExpression	( ( given >> 5 ) & 1 ) << 4		2669500	1		<<			
ANR	2671238	BitAndExpression	( given >> 5 ) & 1		2669500	0		&			
ANR	2671239	ShiftExpression	given >> 5		2669500	0		>>			
ANR	2671240	Identifier	given		2669500	0					
ANR	2671241	PrimaryExpression	5		2669500	1					
ANR	2671242	PrimaryExpression	1		2669500	1					
ANR	2671243	PrimaryExpression	4		2669500	1					
ANR	2671244	BreakStatement	break ;	3850:5:171220:171225	2669500	4	True				
ANR	2671245	Label	case '1' :	3852:3:171231:171239	2669500	5	True				
ANR	2671246	ExpressionStatement	regno = ( given >> 12 ) & 0x0000000f	3853:5:171259:171293	2669500	6	True				
ANR	2671247	AssignmentExpression	regno = ( given >> 12 ) & 0x0000000f		2669500	0		=			
ANR	2671248	Identifier	regno		2669500	0					
ANR	2671249	BitAndExpression	( given >> 12 ) & 0x0000000f		2669500	1		&			
ANR	2671250	ShiftExpression	given >> 12		2669500	0		>>			
ANR	2671251	Identifier	given		2669500	0					
ANR	2671252	PrimaryExpression	12		2669500	1					
ANR	2671253	PrimaryExpression	0x0000000f		2669500	1					
ANR	2671254	IfStatement	if ( single )		2669500	7					
ANR	2671255	Condition	single	3854:9:171304:171309	2669500	0	True				
ANR	2671256	Identifier	single		2669500	0					
ANR	2671257	CompoundStatement		486:7:10698:10698	2669500	1					
ANR	2671258	ExpressionStatement	regno <<= 1	3856:9:171330:171341	2669500	0	True				
ANR	2671259	AssignmentExpression	regno <<= 1		2669500	0		<<=			
ANR	2671260	Identifier	regno		2669500	0					
ANR	2671261	PrimaryExpression	1		2669500	1					
ANR	2671262	ExpressionStatement	regno += ( given >> 22 ) & 1	3857:9:171352:171378	2669500	1	True				
ANR	2671263	AssignmentExpression	regno += ( given >> 22 ) & 1		2669500	0		+=			
ANR	2671264	Identifier	regno		2669500	0					
ANR	2671265	BitAndExpression	( given >> 22 ) & 1		2669500	1		&			
ANR	2671266	ShiftExpression	given >> 22		2669500	0		>>			
ANR	2671267	Identifier	given		2669500	0					
ANR	2671268	PrimaryExpression	22		2669500	1					
ANR	2671269	PrimaryExpression	1		2669500	1					
ANR	2671270	ElseStatement	else		2669500	0					
ANR	2671271	CompoundStatement		489:12:10771:10771	2669500	0					
ANR	2671272	ExpressionStatement	regno += ( ( given >> 22 ) & 1 ) << 4	3859:6:171400:171433	2669500	0	True				
ANR	2671273	AssignmentExpression	regno += ( ( given >> 22 ) & 1 ) << 4		2669500	0		+=			
ANR	2671274	Identifier	regno		2669500	0					
ANR	2671275	ShiftExpression	( ( given >> 22 ) & 1 ) << 4		2669500	1		<<			
ANR	2671276	BitAndExpression	( given >> 22 ) & 1		2669500	0		&			
ANR	2671277	ShiftExpression	given >> 22		2669500	0		>>			
ANR	2671278	Identifier	given		2669500	0					
ANR	2671279	PrimaryExpression	22		2669500	1					
ANR	2671280	PrimaryExpression	1		2669500	1					
ANR	2671281	PrimaryExpression	4		2669500	1					
ANR	2671282	BreakStatement	break ;	3861:5:171447:171452	2669500	8	True				
ANR	2671283	Label	case '2' :	3863:3:171458:171466	2669500	9	True				
ANR	2671284	ExpressionStatement	regno = ( given >> 16 ) & 0x0000000f	3864:5:171486:171520	2669500	10	True				
ANR	2671285	AssignmentExpression	regno = ( given >> 16 ) & 0x0000000f		2669500	0		=			
ANR	2671286	Identifier	regno		2669500	0					
ANR	2671287	BitAndExpression	( given >> 16 ) & 0x0000000f		2669500	1		&			
ANR	2671288	ShiftExpression	given >> 16		2669500	0		>>			
ANR	2671289	Identifier	given		2669500	0					
ANR	2671290	PrimaryExpression	16		2669500	1					
ANR	2671291	PrimaryExpression	0x0000000f		2669500	1					
ANR	2671292	IfStatement	if ( single )		2669500	11					
ANR	2671293	Condition	single	3865:9:171531:171536	2669500	0	True				
ANR	2671294	Identifier	single		2669500	0					
ANR	2671295	CompoundStatement		497:7:10925:10925	2669500	1					
ANR	2671296	ExpressionStatement	regno <<= 1	3867:9:171557:171568	2669500	0	True				
ANR	2671297	AssignmentExpression	regno <<= 1		2669500	0		<<=			
ANR	2671298	Identifier	regno		2669500	0					
ANR	2671299	PrimaryExpression	1		2669500	1					
ANR	2671300	ExpressionStatement	regno += ( given >> 7 ) & 1	3868:9:171579:171604	2669500	1	True				
ANR	2671301	AssignmentExpression	regno += ( given >> 7 ) & 1		2669500	0		+=			
ANR	2671302	Identifier	regno		2669500	0					
ANR	2671303	BitAndExpression	( given >> 7 ) & 1		2669500	1		&			
ANR	2671304	ShiftExpression	given >> 7		2669500	0		>>			
ANR	2671305	Identifier	given		2669500	0					
ANR	2671306	PrimaryExpression	7		2669500	1					
ANR	2671307	PrimaryExpression	1		2669500	1					
ANR	2671308	ElseStatement	else		2669500	0					
ANR	2671309	CompoundStatement		500:12:10997:10997	2669500	0					
ANR	2671310	ExpressionStatement	regno += ( ( given >> 7 ) & 1 ) << 4	3870:6:171626:171658	2669500	0	True				
ANR	2671311	AssignmentExpression	regno += ( ( given >> 7 ) & 1 ) << 4		2669500	0		+=			
ANR	2671312	Identifier	regno		2669500	0					
ANR	2671313	ShiftExpression	( ( given >> 7 ) & 1 ) << 4		2669500	1		<<			
ANR	2671314	BitAndExpression	( given >> 7 ) & 1		2669500	0		&			
ANR	2671315	ShiftExpression	given >> 7		2669500	0		>>			
ANR	2671316	Identifier	given		2669500	0					
ANR	2671317	PrimaryExpression	7		2669500	1					
ANR	2671318	PrimaryExpression	1		2669500	1					
ANR	2671319	PrimaryExpression	4		2669500	1					
ANR	2671320	BreakStatement	break ;	3872:5:171672:171677	2669500	12	True				
ANR	2671321	Label	case '3' :	3874:3:171683:171691	2669500	13	True				
ANR	2671322	ExpressionStatement	"func ( stream , ""{"" )"	3875:5:171709:171727	2669500	14	True				
ANR	2671323	CallExpression	"func ( stream , ""{"" )"		2669500	0					
ANR	2671324	Callee	func		2669500	0					
ANR	2671325	Identifier	func		2669500	0					
ANR	2671326	ArgumentList	stream		2669500	1					
ANR	2671327	Argument	stream		2669500	0					
ANR	2671328	Identifier	stream		2669500	0					
ANR	2671329	Argument	"""{"""		2669500	1					
ANR	2671330	PrimaryExpression	"""{"""		2669500	0					
ANR	2671331	ExpressionStatement	regno = ( given >> 12 ) & 0x0000000f	3876:5:171734:171768	2669500	15	True				
ANR	2671332	AssignmentExpression	regno = ( given >> 12 ) & 0x0000000f		2669500	0		=			
ANR	2671333	Identifier	regno		2669500	0					
ANR	2671334	BitAndExpression	( given >> 12 ) & 0x0000000f		2669500	1		&			
ANR	2671335	ShiftExpression	given >> 12		2669500	0		>>			
ANR	2671336	Identifier	given		2669500	0					
ANR	2671337	PrimaryExpression	12		2669500	1					
ANR	2671338	PrimaryExpression	0x0000000f		2669500	1					
ANR	2671339	IfStatement	if ( single )		2669500	16					
ANR	2671340	Condition	single	3877:9:171779:171784	2669500	0	True				
ANR	2671341	Identifier	single		2669500	0					
ANR	2671342	CompoundStatement		509:7:11173:11173	2669500	1					
ANR	2671343	ExpressionStatement	regno <<= 1	3879:9:171805:171816	2669500	0	True				
ANR	2671344	AssignmentExpression	regno <<= 1		2669500	0		<<=			
ANR	2671345	Identifier	regno		2669500	0					
ANR	2671346	PrimaryExpression	1		2669500	1					
ANR	2671347	ExpressionStatement	regno += ( given >> 22 ) & 1	3880:9:171827:171853	2669500	1	True				
ANR	2671348	AssignmentExpression	regno += ( given >> 22 ) & 1		2669500	0		+=			
ANR	2671349	Identifier	regno		2669500	0					
ANR	2671350	BitAndExpression	( given >> 22 ) & 1		2669500	1		&			
ANR	2671351	ShiftExpression	given >> 22		2669500	0		>>			
ANR	2671352	Identifier	given		2669500	0					
ANR	2671353	PrimaryExpression	22		2669500	1					
ANR	2671354	PrimaryExpression	1		2669500	1					
ANR	2671355	ElseStatement	else		2669500	0					
ANR	2671356	CompoundStatement		512:12:11246:11246	2669500	0					
ANR	2671357	ExpressionStatement	regno += ( ( given >> 22 ) & 1 ) << 4	3882:6:171875:171908	2669500	0	True				
ANR	2671358	AssignmentExpression	regno += ( ( given >> 22 ) & 1 ) << 4		2669500	0		+=			
ANR	2671359	Identifier	regno		2669500	0					
ANR	2671360	ShiftExpression	( ( given >> 22 ) & 1 ) << 4		2669500	1		<<			
ANR	2671361	BitAndExpression	( given >> 22 ) & 1		2669500	0		&			
ANR	2671362	ShiftExpression	given >> 22		2669500	0		>>			
ANR	2671363	Identifier	given		2669500	0					
ANR	2671364	PrimaryExpression	22		2669500	1					
ANR	2671365	PrimaryExpression	1		2669500	1					
ANR	2671366	PrimaryExpression	4		2669500	1					
ANR	2671367	BreakStatement	break ;	3884:5:171922:171927	2669500	17	True				
ANR	2671368	Label	default :	3886:3:171933:171940	2669500	18	True				
ANR	2671369	Identifier	default		2669500	0					
ANR	2671370	ReturnStatement	return 0 ;	3887:5:171947:171955	2669500	19	True				
ANR	2671371	PrimaryExpression	0		2669500	0					
ANR	2671372	ExpressionStatement	"func ( stream , ""%c%d"" , single ? 's' : 'd' , regno )"	3890:8:171971:172019	2669500	3	True				
ANR	2671373	CallExpression	"func ( stream , ""%c%d"" , single ? 's' : 'd' , regno )"		2669500	0					
ANR	2671374	Callee	func		2669500	0					
ANR	2671375	Identifier	func		2669500	0					
ANR	2671376	ArgumentList	stream		2669500	1					
ANR	2671377	Argument	stream		2669500	0					
ANR	2671378	Identifier	stream		2669500	0					
ANR	2671379	Argument	"""%c%d"""		2669500	1					
ANR	2671380	PrimaryExpression	"""%c%d"""		2669500	0					
ANR	2671381	Argument	single ? 's' : 'd'		2669500	2					
ANR	2671382	ConditionalExpression	single ? 's' : 'd'		2669500	0					
ANR	2671383	Condition	single		2669500	0					
ANR	2671384	Identifier	single		2669500	0					
ANR	2671385	PrimaryExpression	's'		2669500	1					
ANR	2671386	PrimaryExpression	'd'		2669500	2					
ANR	2671387	Argument	regno		2669500	3					
ANR	2671388	Identifier	regno		2669500	0					
ANR	2671389	IfStatement	if ( * c == '3' )		2669500	4					
ANR	2671390	Condition	* c == '3'	3892:12:172034:172042	2669500	0	True				
ANR	2671391	EqualityExpression	* c == '3'		2669500	0		==			
ANR	2671392	UnaryOperationExpression	* c		2669500	0					
ANR	2671393	UnaryOperator	*		2669500	0					
ANR	2671394	Identifier	c		2669500	1					
ANR	2671395	PrimaryExpression	'3'		2669500	1					
ANR	2671396	CompoundStatement		525:5:11434:11458	2669500	1					
ANR	2671397	IdentifierDeclStatement	int count = given & 0xff ;	3894:5:172055:172079	2669500	0	True				
ANR	2671398	IdentifierDecl	count = given & 0xff		2669500	0					
ANR	2671399	IdentifierDeclType	int		2669500	0					
ANR	2671400	Identifier	count		2669500	1					
ANR	2671401	AssignmentExpression	count = given & 0xff		2669500	2		=			
ANR	2671402	Identifier	count		2669500	0					
ANR	2671403	BitAndExpression	given & 0xff		2669500	1		&			
ANR	2671404	Identifier	given		2669500	0					
ANR	2671405	PrimaryExpression	0xff		2669500	1					
ANR	2671406	IfStatement	if ( single == 0 )		2669500	1					
ANR	2671407	Condition	single == 0	3896:9:172091:172101	2669500	0	True				
ANR	2671408	EqualityExpression	single == 0		2669500	0		==			
ANR	2671409	Identifier	single		2669500	0					
ANR	2671410	PrimaryExpression	0		2669500	1					
ANR	2671411	CompoundStatement		527:22:11483:11483	2669500	1					
ANR	2671412	ExpressionStatement	count >>= 1	3897:6:172112:172123	2669500	0	True				
ANR	2671413	AssignmentExpression	count >>= 1		2669500	0		>>=			
ANR	2671414	Identifier	count		2669500	0					
ANR	2671415	PrimaryExpression	1		2669500	1					
ANR	2671416	IfStatement	if ( -- count )		2669500	2					
ANR	2671417	Condition	-- count	3900:9:172142:172148	2669500	0	True				
ANR	2671418	UnaryExpression	-- count		2669500	0					
ANR	2671419	IncDec	--		2669500	0					
ANR	2671420	Identifier	count		2669500	1					
ANR	2671421	CompoundStatement		532:7:11537:11537	2669500	1					
ANR	2671422	ExpressionStatement	"func ( stream , ""-%c%d"" , single ? 's' : 'd' , regno + count )"	3902:9:172169:172242	2669500	0	True				
ANR	2671423	CallExpression	"func ( stream , ""-%c%d"" , single ? 's' : 'd' , regno + count )"		2669500	0					
ANR	2671424	Callee	func		2669500	0					
ANR	2671425	Identifier	func		2669500	0					
ANR	2671426	ArgumentList	stream		2669500	1					
ANR	2671427	Argument	stream		2669500	0					
ANR	2671428	Identifier	stream		2669500	0					
ANR	2671429	Argument	"""-%c%d"""		2669500	1					
ANR	2671430	PrimaryExpression	"""-%c%d"""		2669500	0					
ANR	2671431	Argument	single ? 's' : 'd'		2669500	2					
ANR	2671432	ConditionalExpression	single ? 's' : 'd'		2669500	0					
ANR	2671433	Condition	single		2669500	0					
ANR	2671434	Identifier	single		2669500	0					
ANR	2671435	PrimaryExpression	's'		2669500	1					
ANR	2671436	PrimaryExpression	'd'		2669500	2					
ANR	2671437	Argument	regno + count		2669500	3					
ANR	2671438	AdditiveExpression	regno + count		2669500	0		+			
ANR	2671439	Identifier	regno		2669500	0					
ANR	2671440	Identifier	count		2669500	1					
ANR	2671441	ExpressionStatement	"func ( stream , ""}"" )"	3907:5:172259:172277	2669500	3	True				
ANR	2671442	CallExpression	"func ( stream , ""}"" )"		2669500	0					
ANR	2671443	Callee	func		2669500	0					
ANR	2671444	Identifier	func		2669500	0					
ANR	2671445	ArgumentList	stream		2669500	1					
ANR	2671446	Argument	stream		2669500	0					
ANR	2671447	Identifier	stream		2669500	0					
ANR	2671448	Argument	"""}"""		2669500	1					
ANR	2671449	PrimaryExpression	"""}"""		2669500	0					
ANR	2671450	ElseStatement	else		2669500	0					
ANR	2671451	IfStatement	if ( * c == '4' )		2669500	0					
ANR	2671452	Condition	* c == '4'	3908:19:172298:172306	2669500	0	True				
ANR	2671453	EqualityExpression	* c == '4'		2669500	0		==			
ANR	2671454	UnaryOperationExpression	* c		2669500	0					
ANR	2671455	UnaryOperator	*		2669500	0					
ANR	2671456	Identifier	c		2669500	1					
ANR	2671457	PrimaryExpression	'4'		2669500	1					
ANR	2671458	CompoundStatement		539:30:11688:11688	2669500	1					
ANR	2671459	ExpressionStatement	"func ( stream , "", %c%d"" , single ? 's' : 'd' , regno + 1 )"	3909:9:172320:172384	2669500	0	True				
ANR	2671460	CallExpression	"func ( stream , "", %c%d"" , single ? 's' : 'd' , regno + 1 )"		2669500	0					
ANR	2671461	Callee	func		2669500	0					
ANR	2671462	Identifier	func		2669500	0					
ANR	2671463	ArgumentList	stream		2669500	1					
ANR	2671464	Argument	stream		2669500	0					
ANR	2671465	Identifier	stream		2669500	0					
ANR	2671466	Argument	""", %c%d"""		2669500	1					
ANR	2671467	PrimaryExpression	""", %c%d"""		2669500	0					
ANR	2671468	Argument	single ? 's' : 'd'		2669500	2					
ANR	2671469	ConditionalExpression	single ? 's' : 'd'		2669500	0					
ANR	2671470	Condition	single		2669500	0					
ANR	2671471	Identifier	single		2669500	0					
ANR	2671472	PrimaryExpression	's'		2669500	1					
ANR	2671473	PrimaryExpression	'd'		2669500	2					
ANR	2671474	Argument	regno + 1		2669500	3					
ANR	2671475	AdditiveExpression	regno + 1		2669500	0		+			
ANR	2671476	Identifier	regno		2669500	0					
ANR	2671477	PrimaryExpression	1		2669500	1					
ANR	2671478	BreakStatement	break ;	3913:6:172410:172415	2669500	7	True				
ANR	2671479	Label	case 'L' :	3915:4:172422:172430	2669500	8	True				
ANR	2671480	SwitchStatement	switch ( given & 0x00400100 )		2669500	9					
ANR	2671481	Condition	given & 0x00400100	3916:14:172446:172463	2669500	0	True				
ANR	2671482	BitAndExpression	given & 0x00400100		2669500	0		&			
ANR	2671483	Identifier	given		2669500	0					
ANR	2671484	PrimaryExpression	0x00400100		2669500	1					
ANR	2671485	CompoundStatement		548:8:11853:11853	2669500	1					
ANR	2671486	Label	case 0x00000000 :	3918:8:172484:172499	2669500	0	True				
ANR	2671487	ExpressionStatement	"func ( stream , ""b"" )"	3918:25:172501:172519	2669500	1	True				
ANR	2671488	CallExpression	"func ( stream , ""b"" )"		2669500	0					
ANR	2671489	Callee	func		2669500	0					
ANR	2671490	Identifier	func		2669500	0					
ANR	2671491	ArgumentList	stream		2669500	1					
ANR	2671492	Argument	stream		2669500	0					
ANR	2671493	Identifier	stream		2669500	0					
ANR	2671494	Argument	"""b"""		2669500	1					
ANR	2671495	PrimaryExpression	"""b"""		2669500	0					
ANR	2671496	BreakStatement	break ;	3918:45:172521:172526	2669500	2	True				
ANR	2671497	Label	case 0x00400000 :	3919:8:172536:172551	2669500	3	True				
ANR	2671498	ExpressionStatement	"func ( stream , ""h"" )"	3919:25:172553:172571	2669500	4	True				
ANR	2671499	CallExpression	"func ( stream , ""h"" )"		2669500	0					
ANR	2671500	Callee	func		2669500	0					
ANR	2671501	Identifier	func		2669500	0					
ANR	2671502	ArgumentList	stream		2669500	1					
ANR	2671503	Argument	stream		2669500	0					
ANR	2671504	Identifier	stream		2669500	0					
ANR	2671505	Argument	"""h"""		2669500	1					
ANR	2671506	PrimaryExpression	"""h"""		2669500	0					
ANR	2671507	BreakStatement	break ;	3919:45:172573:172578	2669500	5	True				
ANR	2671508	Label	case 0x00000100 :	3920:8:172588:172603	2669500	6	True				
ANR	2671509	ExpressionStatement	"func ( stream , ""w"" )"	3920:25:172605:172623	2669500	7	True				
ANR	2671510	CallExpression	"func ( stream , ""w"" )"		2669500	0					
ANR	2671511	Callee	func		2669500	0					
ANR	2671512	Identifier	func		2669500	0					
ANR	2671513	ArgumentList	stream		2669500	1					
ANR	2671514	Argument	stream		2669500	0					
ANR	2671515	Identifier	stream		2669500	0					
ANR	2671516	Argument	"""w"""		2669500	1					
ANR	2671517	PrimaryExpression	"""w"""		2669500	0					
ANR	2671518	BreakStatement	break ;	3920:45:172625:172630	2669500	8	True				
ANR	2671519	Label	case 0x00400100 :	3921:8:172640:172655	2669500	9	True				
ANR	2671520	ExpressionStatement	"func ( stream , ""d"" )"	3921:25:172657:172675	2669500	10	True				
ANR	2671521	CallExpression	"func ( stream , ""d"" )"		2669500	0					
ANR	2671522	Callee	func		2669500	0					
ANR	2671523	Identifier	func		2669500	0					
ANR	2671524	ArgumentList	stream		2669500	1					
ANR	2671525	Argument	stream		2669500	0					
ANR	2671526	Identifier	stream		2669500	0					
ANR	2671527	Argument	"""d"""		2669500	1					
ANR	2671528	PrimaryExpression	"""d"""		2669500	0					
ANR	2671529	BreakStatement	break ;	3921:45:172677:172682	2669500	11	True				
ANR	2671530	Label	default :	3922:8:172692:172699	2669500	12	True				
ANR	2671531	Identifier	default		2669500	0					
ANR	2671532	BreakStatement	break ;	3923:3:172704:172709	2669500	13	True				
ANR	2671533	BreakStatement	break ;	3925:6:172727:172732	2669500	10	True				
ANR	2671534	Label	case 'Z' :	3927:4:172739:172747	2669500	11	True				
ANR	2671535	CompoundStatement		559:6:12134:12134	2669500	12					
ANR	2671536	ExpressionStatement	value = ( ( given >> 16 ) & 0xf0 ) | ( given & 0xf )	3930:8:172809:172855	2669500	0	True				
ANR	2671537	AssignmentExpression	value = ( ( given >> 16 ) & 0xf0 ) | ( given & 0xf )		2669500	0		=			
ANR	2671538	Identifier	value		2669500	0					
ANR	2671539	InclusiveOrExpression	( ( given >> 16 ) & 0xf0 ) | ( given & 0xf )		2669500	1		|			
ANR	2671540	BitAndExpression	( given >> 16 ) & 0xf0		2669500	0		&			
ANR	2671541	ShiftExpression	given >> 16		2669500	0		>>			
ANR	2671542	Identifier	given		2669500	0					
ANR	2671543	PrimaryExpression	16		2669500	1					
ANR	2671544	PrimaryExpression	0xf0		2669500	1					
ANR	2671545	BitAndExpression	given & 0xf		2669500	1		&			
ANR	2671546	Identifier	given		2669500	0					
ANR	2671547	PrimaryExpression	0xf		2669500	1					
ANR	2671548	ExpressionStatement	"func ( stream , ""%d"" , ( int ) value )"	3931:8:172865:172897	2669500	1	True				
ANR	2671549	CallExpression	"func ( stream , ""%d"" , ( int ) value )"		2669500	0					
ANR	2671550	Callee	func		2669500	0					
ANR	2671551	Identifier	func		2669500	0					
ANR	2671552	ArgumentList	stream		2669500	1					
ANR	2671553	Argument	stream		2669500	0					
ANR	2671554	Identifier	stream		2669500	0					
ANR	2671555	Argument	"""%d"""		2669500	1					
ANR	2671556	PrimaryExpression	"""%d"""		2669500	0					
ANR	2671557	Argument	( int ) value		2669500	2					
ANR	2671558	CastExpression	( int ) value		2669500	0					
ANR	2671559	CastTarget	int		2669500	0					
ANR	2671560	Identifier	value		2669500	1					
ANR	2671561	BreakStatement	break ;	3933:6:172913:172918	2669500	13	True				
ANR	2671562	Label	case 'l' :	3935:4:172925:172933	2669500	14	True				
ANR	2671563	CompoundStatement		572:8:12516:12561	2669500	15					
ANR	2671564	IdentifierDeclStatement	int offset = given & 0xff ;	3940:8:173102:173127	2669500	0	True				
ANR	2671565	IdentifierDecl	offset = given & 0xff		2669500	0					
ANR	2671566	IdentifierDeclType	int		2669500	0					
ANR	2671567	Identifier	offset		2669500	1					
ANR	2671568	AssignmentExpression	offset = given & 0xff		2669500	2		=			
ANR	2671569	Identifier	offset		2669500	0					
ANR	2671570	BitAndExpression	given & 0xff		2669500	1		&			
ANR	2671571	Identifier	given		2669500	0					
ANR	2671572	PrimaryExpression	0xff		2669500	1					
ANR	2671573	IdentifierDeclStatement	int multiplier = ( given & 0x00000100 ) ? 4 : 1 ;	3941:8:173137:173182	2669500	1	True				
ANR	2671574	IdentifierDecl	multiplier = ( given & 0x00000100 ) ? 4 : 1		2669500	0					
ANR	2671575	IdentifierDeclType	int		2669500	0					
ANR	2671576	Identifier	multiplier		2669500	1					
ANR	2671577	AssignmentExpression	multiplier = ( given & 0x00000100 ) ? 4 : 1		2669500	2		=			
ANR	2671578	Identifier	multiplier		2669500	0					
ANR	2671579	ConditionalExpression	( given & 0x00000100 ) ? 4 : 1		2669500	1					
ANR	2671580	Condition	given & 0x00000100		2669500	0					
ANR	2671581	BitAndExpression	given & 0x00000100		2669500	0		&			
ANR	2671582	Identifier	given		2669500	0					
ANR	2671583	PrimaryExpression	0x00000100		2669500	1					
ANR	2671584	PrimaryExpression	4		2669500	1					
ANR	2671585	PrimaryExpression	1		2669500	2					
ANR	2671586	ExpressionStatement	"func ( stream , ""[%s"" , arm_regnames [ ( given >> 16 ) & 0xf ] )"	3943:8:173193:173249	2669500	2	True				
ANR	2671587	CallExpression	"func ( stream , ""[%s"" , arm_regnames [ ( given >> 16 ) & 0xf ] )"		2669500	0					
ANR	2671588	Callee	func		2669500	0					
ANR	2671589	Identifier	func		2669500	0					
ANR	2671590	ArgumentList	stream		2669500	1					
ANR	2671591	Argument	stream		2669500	0					
ANR	2671592	Identifier	stream		2669500	0					
ANR	2671593	Argument	"""[%s"""		2669500	1					
ANR	2671594	PrimaryExpression	"""[%s"""		2669500	0					
ANR	2671595	Argument	arm_regnames [ ( given >> 16 ) & 0xf ]		2669500	2					
ANR	2671596	ArrayIndexing	arm_regnames [ ( given >> 16 ) & 0xf ]		2669500	0					
ANR	2671597	Identifier	arm_regnames		2669500	0					
ANR	2671598	BitAndExpression	( given >> 16 ) & 0xf		2669500	1		&			
ANR	2671599	ShiftExpression	given >> 16		2669500	0		>>			
ANR	2671600	Identifier	given		2669500	0					
ANR	2671601	PrimaryExpression	16		2669500	1					
ANR	2671602	PrimaryExpression	0xf		2669500	1					
ANR	2671603	IfStatement	if ( multiplier > 1 )		2669500	3					
ANR	2671604	Condition	multiplier > 1	3946:12:173270:173283	2669500	0	True				
ANR	2671605	RelationalExpression	multiplier > 1		2669500	0		>			
ANR	2671606	Identifier	multiplier		2669500	0					
ANR	2671607	PrimaryExpression	1		2669500	1					
ANR	2671608	CompoundStatement		578:3:12668:12668	2669500	1					
ANR	2671609	ExpressionStatement	value_in_comment = offset * multiplier	3948:5:173296:173334	2669500	0	True				
ANR	2671610	AssignmentExpression	value_in_comment = offset * multiplier		2669500	0		=			
ANR	2671611	Identifier	value_in_comment		2669500	0					
ANR	2671612	MultiplicativeExpression	offset * multiplier		2669500	1		*			
ANR	2671613	Identifier	offset		2669500	0					
ANR	2671614	Identifier	multiplier		2669500	1					
ANR	2671615	IfStatement	if ( NEGATIVE_BIT_SET )		2669500	1					
ANR	2671616	Condition	NEGATIVE_BIT_SET	3949:9:173345:173360	2669500	0	True				
ANR	2671617	Identifier	NEGATIVE_BIT_SET		2669500	0					
ANR	2671618	ExpressionStatement	value_in_comment = - value_in_comment	3950:7:173370:173406	2669500	1	True				
ANR	2671619	AssignmentExpression	value_in_comment = - value_in_comment		2669500	0		=			
ANR	2671620	Identifier	value_in_comment		2669500	0					
ANR	2671621	UnaryOperationExpression	- value_in_comment		2669500	1					
ANR	2671622	UnaryOperator	-		2669500	0					
ANR	2671623	Identifier	value_in_comment		2669500	1					
ANR	2671624	IfStatement	if ( offset )		2669500	4					
ANR	2671625	Condition	offset	3954:12:173433:173438	2669500	0	True				
ANR	2671626	Identifier	offset		2669500	0					
ANR	2671627	CompoundStatement		586:3:12823:12823	2669500	1					
ANR	2671628	IfStatement	if ( PRE_BIT_SET )		2669500	0					
ANR	2671629	Condition	PRE_BIT_SET	3956:13:173459:173469	2669500	0	True				
ANR	2671630	Identifier	PRE_BIT_SET		2669500	0					
ANR	2671631	CompoundStatement		587:26:12851:12851	2669500	1					
ANR	2671632	ExpressionStatement	"func ( stream , "", %s%d]%s"" , NEGATIVE_BIT_SET ? ""-"" : """" , offset * multiplier , WRITEBACK_BIT_SET ? ""!"" : """" )"	3957:10:173484:173623	2669500	0	True				
ANR	2671633	CallExpression	"func ( stream , "", %s%d]%s"" , NEGATIVE_BIT_SET ? ""-"" : """" , offset * multiplier , WRITEBACK_BIT_SET ? ""!"" : """" )"		2669500	0					
ANR	2671634	Callee	func		2669500	0					
ANR	2671635	Identifier	func		2669500	0					
ANR	2671636	ArgumentList	stream		2669500	1					
ANR	2671637	Argument	stream		2669500	0					
ANR	2671638	Identifier	stream		2669500	0					
ANR	2671639	Argument	""", %s%d]%s"""		2669500	1					
ANR	2671640	PrimaryExpression	""", %s%d]%s"""		2669500	0					
ANR	2671641	Argument	"NEGATIVE_BIT_SET ? ""-"" : """""		2669500	2					
ANR	2671642	ConditionalExpression	"NEGATIVE_BIT_SET ? ""-"" : """""		2669500	0					
ANR	2671643	Condition	NEGATIVE_BIT_SET		2669500	0					
ANR	2671644	Identifier	NEGATIVE_BIT_SET		2669500	0					
ANR	2671645	PrimaryExpression	"""-"""		2669500	1					
ANR	2671646	PrimaryExpression	""""""		2669500	2					
ANR	2671647	Argument	offset * multiplier		2669500	3					
ANR	2671648	MultiplicativeExpression	offset * multiplier		2669500	0		*			
ANR	2671649	Identifier	offset		2669500	0					
ANR	2671650	Identifier	multiplier		2669500	1					
ANR	2671651	Argument	"WRITEBACK_BIT_SET ? ""!"" : """""		2669500	4					
ANR	2671652	ConditionalExpression	"WRITEBACK_BIT_SET ? ""!"" : """""		2669500	0					
ANR	2671653	Condition	WRITEBACK_BIT_SET		2669500	0					
ANR	2671654	Identifier	WRITEBACK_BIT_SET		2669500	0					
ANR	2671655	PrimaryExpression	"""!"""		2669500	1					
ANR	2671656	PrimaryExpression	""""""		2669500	2					
ANR	2671657	ElseStatement	else		2669500	0					
ANR	2671658	CompoundStatement		592:16:13020:13020	2669500	0					
ANR	2671659	ExpressionStatement	"func ( stream , ""], %s%d"" , NEGATIVE_BIT_SET ? ""-"" : """" , offset * multiplier )"	3962:10:173653:173749	2669500	0	True				
ANR	2671660	CallExpression	"func ( stream , ""], %s%d"" , NEGATIVE_BIT_SET ? ""-"" : """" , offset * multiplier )"		2669500	0					
ANR	2671661	Callee	func		2669500	0					
ANR	2671662	Identifier	func		2669500	0					
ANR	2671663	ArgumentList	stream		2669500	1					
ANR	2671664	Argument	stream		2669500	0					
ANR	2671665	Identifier	stream		2669500	0					
ANR	2671666	Argument	"""], %s%d"""		2669500	1					
ANR	2671667	PrimaryExpression	"""], %s%d"""		2669500	0					
ANR	2671668	Argument	"NEGATIVE_BIT_SET ? ""-"" : """""		2669500	2					
ANR	2671669	ConditionalExpression	"NEGATIVE_BIT_SET ? ""-"" : """""		2669500	0					
ANR	2671670	Condition	NEGATIVE_BIT_SET		2669500	0					
ANR	2671671	Identifier	NEGATIVE_BIT_SET		2669500	0					
ANR	2671672	PrimaryExpression	"""-"""		2669500	1					
ANR	2671673	PrimaryExpression	""""""		2669500	2					
ANR	2671674	Argument	offset * multiplier		2669500	3					
ANR	2671675	MultiplicativeExpression	offset * multiplier		2669500	0		*			
ANR	2671676	Identifier	offset		2669500	0					
ANR	2671677	Identifier	multiplier		2669500	1					
ANR	2671678	ElseStatement	else		2669500	0					
ANR	2671679	CompoundStatement		597:15:13156:13156	2669500	0					
ANR	2671680	ExpressionStatement	"func ( stream , ""]"" )"	3967:9:173788:173806	2669500	0	True				
ANR	2671681	CallExpression	"func ( stream , ""]"" )"		2669500	0					
ANR	2671682	Callee	func		2669500	0					
ANR	2671683	Identifier	func		2669500	0					
ANR	2671684	ArgumentList	stream		2669500	1					
ANR	2671685	Argument	stream		2669500	0					
ANR	2671686	Identifier	stream		2669500	0					
ANR	2671687	Argument	"""]"""		2669500	1					
ANR	2671688	PrimaryExpression	"""]"""		2669500	0					
ANR	2671689	BreakStatement	break ;	3970:6:173832:173837	2669500	16	True				
ANR	2671690	Label	case 'r' :	3972:4:173844:173852	2669500	17	True				
ANR	2671691	CompoundStatement		609:8:13449:13500	2669500	18					
ANR	2671692	IdentifierDeclStatement	int imm4 = ( given >> 4 ) & 0xf ;	3974:8:173870:173899	2669500	0	True				
ANR	2671693	IdentifierDecl	imm4 = ( given >> 4 ) & 0xf		2669500	0					
ANR	2671694	IdentifierDeclType	int		2669500	0					
ANR	2671695	Identifier	imm4		2669500	1					
ANR	2671696	AssignmentExpression	imm4 = ( given >> 4 ) & 0xf		2669500	2		=			
ANR	2671697	Identifier	imm4		2669500	0					
ANR	2671698	BitAndExpression	( given >> 4 ) & 0xf		2669500	1		&			
ANR	2671699	ShiftExpression	given >> 4		2669500	0		>>			
ANR	2671700	Identifier	given		2669500	0					
ANR	2671701	PrimaryExpression	4		2669500	1					
ANR	2671702	PrimaryExpression	0xf		2669500	1					
ANR	2671703	IdentifierDeclStatement	int puw_bits = ( ( given >> 22 ) & 6 ) | ( ( given >> W_BIT ) & 1 ) ;	3975:8:173909:173968	2669500	1	True				
ANR	2671704	IdentifierDecl	puw_bits = ( ( given >> 22 ) & 6 ) | ( ( given >> W_BIT ) & 1 )		2669500	0					
ANR	2671705	IdentifierDeclType	int		2669500	0					
ANR	2671706	Identifier	puw_bits		2669500	1					
ANR	2671707	AssignmentExpression	puw_bits = ( ( given >> 22 ) & 6 ) | ( ( given >> W_BIT ) & 1 )		2669500	2		=			
ANR	2671708	Identifier	puw_bits		2669500	0					
ANR	2671709	InclusiveOrExpression	( ( given >> 22 ) & 6 ) | ( ( given >> W_BIT ) & 1 )		2669500	1		|			
ANR	2671710	BitAndExpression	( given >> 22 ) & 6		2669500	0		&			
ANR	2671711	ShiftExpression	given >> 22		2669500	0		>>			
ANR	2671712	Identifier	given		2669500	0					
ANR	2671713	PrimaryExpression	22		2669500	1					
ANR	2671714	PrimaryExpression	6		2669500	1					
ANR	2671715	BitAndExpression	( given >> W_BIT ) & 1		2669500	1		&			
ANR	2671716	ShiftExpression	given >> W_BIT		2669500	0		>>			
ANR	2671717	Identifier	given		2669500	0					
ANR	2671718	Identifier	W_BIT		2669500	1					
ANR	2671719	PrimaryExpression	1		2669500	1					
ANR	2671720	IdentifierDeclStatement	int ubit = ! NEGATIVE_BIT_SET ;	3976:8:173978:174007	2669500	2	True				
ANR	2671721	IdentifierDecl	ubit = ! NEGATIVE_BIT_SET		2669500	0					
ANR	2671722	IdentifierDeclType	int		2669500	0					
ANR	2671723	Identifier	ubit		2669500	1					
ANR	2671724	AssignmentExpression	ubit = ! NEGATIVE_BIT_SET		2669500	2		=			
ANR	2671725	Identifier	ubit		2669500	0					
ANR	2671726	UnaryOperationExpression	! NEGATIVE_BIT_SET		2669500	1					
ANR	2671727	UnaryOperator	!		2669500	0					
ANR	2671728	Identifier	NEGATIVE_BIT_SET		2669500	1					
ANR	2671729	IdentifierDeclStatement	const char * rm = arm_regnames [ given & 0xf ] ;	3977:8:174017:174060	2669500	3	True				
ANR	2671730	IdentifierDecl	* rm = arm_regnames [ given & 0xf ]		2669500	0					
ANR	2671731	IdentifierDeclType	const char *		2669500	0					
ANR	2671732	Identifier	rm		2669500	1					
ANR	2671733	AssignmentExpression	* rm = arm_regnames [ given & 0xf ]		2669500	2		=			
ANR	2671734	Identifier	rm		2669500	0					
ANR	2671735	ArrayIndexing	arm_regnames [ given & 0xf ]		2669500	1					
ANR	2671736	Identifier	arm_regnames		2669500	0					
ANR	2671737	BitAndExpression	given & 0xf		2669500	1		&			
ANR	2671738	Identifier	given		2669500	0					
ANR	2671739	PrimaryExpression	0xf		2669500	1					
ANR	2671740	IdentifierDeclStatement	const char * rn = arm_regnames [ ( given >> 16 ) & 0xf ] ;	3978:8:174070:174121	2669500	4	True				
ANR	2671741	IdentifierDecl	* rn = arm_regnames [ ( given >> 16 ) & 0xf ]		2669500	0					
ANR	2671742	IdentifierDeclType	const char *		2669500	0					
ANR	2671743	Identifier	rn		2669500	1					
ANR	2671744	AssignmentExpression	* rn = arm_regnames [ ( given >> 16 ) & 0xf ]		2669500	2		=			
ANR	2671745	Identifier	rn		2669500	0					
ANR	2671746	ArrayIndexing	arm_regnames [ ( given >> 16 ) & 0xf ]		2669500	1					
ANR	2671747	Identifier	arm_regnames		2669500	0					
ANR	2671748	BitAndExpression	( given >> 16 ) & 0xf		2669500	1		&			
ANR	2671749	ShiftExpression	given >> 16		2669500	0		>>			
ANR	2671750	Identifier	given		2669500	0					
ANR	2671751	PrimaryExpression	16		2669500	1					
ANR	2671752	PrimaryExpression	0xf		2669500	1					
ANR	2671753	SwitchStatement	switch ( puw_bits )		2669500	5					
ANR	2671754	Condition	puw_bits	3980:16:174140:174147	2669500	0	True				
ANR	2671755	Identifier	puw_bits		2669500	0					
ANR	2671756	CompoundStatement		612:3:13532:13532	2669500	1					
ANR	2671757	Label	case 1 :	3982:3:174158:174164	2669500	0	True				
ANR	2671758	Label	case 3 :	3983:3:174169:174175	2669500	1	True				
ANR	2671759	ExpressionStatement	"func ( stream , ""[%s], %c%s"" , rn , ubit ? '+' : '-' , rm )"	3984:5:174182:174235	2669500	2	True				
ANR	2671760	CallExpression	"func ( stream , ""[%s], %c%s"" , rn , ubit ? '+' : '-' , rm )"		2669500	0					
ANR	2671761	Callee	func		2669500	0					
ANR	2671762	Identifier	func		2669500	0					
ANR	2671763	ArgumentList	stream		2669500	1					
ANR	2671764	Argument	stream		2669500	0					
ANR	2671765	Identifier	stream		2669500	0					
ANR	2671766	Argument	"""[%s], %c%s"""		2669500	1					
ANR	2671767	PrimaryExpression	"""[%s], %c%s"""		2669500	0					
ANR	2671768	Argument	rn		2669500	2					
ANR	2671769	Identifier	rn		2669500	0					
ANR	2671770	Argument	ubit ? '+' : '-'		2669500	3					
ANR	2671771	ConditionalExpression	ubit ? '+' : '-'		2669500	0					
ANR	2671772	Condition	ubit		2669500	0					
ANR	2671773	Identifier	ubit		2669500	0					
ANR	2671774	PrimaryExpression	'+'		2669500	1					
ANR	2671775	PrimaryExpression	'-'		2669500	2					
ANR	2671776	Argument	rm		2669500	4					
ANR	2671777	Identifier	rm		2669500	0					
ANR	2671778	IfStatement	if ( imm4 )		2669500	3					
ANR	2671779	Condition	imm4	3985:9:174246:174249	2669500	0	True				
ANR	2671780	Identifier	imm4		2669500	0					
ANR	2671781	CompoundStatement		616:15:13631:13631	2669500	1					
ANR	2671782	ExpressionStatement	"func ( stream , "", lsl %d"" , imm4 )"	3986:6:174260:174291	2669500	0	True				
ANR	2671783	CallExpression	"func ( stream , "", lsl %d"" , imm4 )"		2669500	0					
ANR	2671784	Callee	func		2669500	0					
ANR	2671785	Identifier	func		2669500	0					
ANR	2671786	ArgumentList	stream		2669500	1					
ANR	2671787	Argument	stream		2669500	0					
ANR	2671788	Identifier	stream		2669500	0					
ANR	2671789	Argument	""", lsl %d"""		2669500	1					
ANR	2671790	PrimaryExpression	""", lsl %d"""		2669500	0					
ANR	2671791	Argument	imm4		2669500	2					
ANR	2671792	Identifier	imm4		2669500	0					
ANR	2671793	BreakStatement	break ;	3988:5:174305:174310	2669500	4	True				
ANR	2671794	Label	case 4 :	3990:3:174316:174322	2669500	5	True				
ANR	2671795	Label	case 5 :	3991:3:174327:174333	2669500	6	True				
ANR	2671796	Label	case 6 :	3992:3:174338:174344	2669500	7	True				
ANR	2671797	Label	case 7 :	3993:3:174349:174355	2669500	8	True				
ANR	2671798	ExpressionStatement	"func ( stream , ""[%s, %c%s"" , rn , ubit ? '+' : '-' , rm )"	3994:5:174362:174414	2669500	9	True				
ANR	2671799	CallExpression	"func ( stream , ""[%s, %c%s"" , rn , ubit ? '+' : '-' , rm )"		2669500	0					
ANR	2671800	Callee	func		2669500	0					
ANR	2671801	Identifier	func		2669500	0					
ANR	2671802	ArgumentList	stream		2669500	1					
ANR	2671803	Argument	stream		2669500	0					
ANR	2671804	Identifier	stream		2669500	0					
ANR	2671805	Argument	"""[%s, %c%s"""		2669500	1					
ANR	2671806	PrimaryExpression	"""[%s, %c%s"""		2669500	0					
ANR	2671807	Argument	rn		2669500	2					
ANR	2671808	Identifier	rn		2669500	0					
ANR	2671809	Argument	ubit ? '+' : '-'		2669500	3					
ANR	2671810	ConditionalExpression	ubit ? '+' : '-'		2669500	0					
ANR	2671811	Condition	ubit		2669500	0					
ANR	2671812	Identifier	ubit		2669500	0					
ANR	2671813	PrimaryExpression	'+'		2669500	1					
ANR	2671814	PrimaryExpression	'-'		2669500	2					
ANR	2671815	Argument	rm		2669500	4					
ANR	2671816	Identifier	rm		2669500	0					
ANR	2671817	IfStatement	if ( imm4 > 0 )		2669500	10					
ANR	2671818	Condition	imm4 > 0	3995:9:174425:174432	2669500	0	True				
ANR	2671819	RelationalExpression	imm4 > 0		2669500	0		>			
ANR	2671820	Identifier	imm4		2669500	0					
ANR	2671821	PrimaryExpression	0		2669500	1					
ANR	2671822	CompoundStatement		626:19:13814:13814	2669500	1					
ANR	2671823	ExpressionStatement	"func ( stream , "", lsl %d"" , imm4 )"	3996:6:174443:174474	2669500	0	True				
ANR	2671824	CallExpression	"func ( stream , "", lsl %d"" , imm4 )"		2669500	0					
ANR	2671825	Callee	func		2669500	0					
ANR	2671826	Identifier	func		2669500	0					
ANR	2671827	ArgumentList	stream		2669500	1					
ANR	2671828	Argument	stream		2669500	0					
ANR	2671829	Identifier	stream		2669500	0					
ANR	2671830	Argument	""", lsl %d"""		2669500	1					
ANR	2671831	PrimaryExpression	""", lsl %d"""		2669500	0					
ANR	2671832	Argument	imm4		2669500	2					
ANR	2671833	Identifier	imm4		2669500	0					
ANR	2671834	ExpressionStatement	"func ( stream , ""]"" )"	3998:5:174488:174506	2669500	11	True				
ANR	2671835	CallExpression	"func ( stream , ""]"" )"		2669500	0					
ANR	2671836	Callee	func		2669500	0					
ANR	2671837	Identifier	func		2669500	0					
ANR	2671838	ArgumentList	stream		2669500	1					
ANR	2671839	Argument	stream		2669500	0					
ANR	2671840	Identifier	stream		2669500	0					
ANR	2671841	Argument	"""]"""		2669500	1					
ANR	2671842	PrimaryExpression	"""]"""		2669500	0					
ANR	2671843	IfStatement	if ( puw_bits == 5 || puw_bits == 7 )		2669500	12					
ANR	2671844	Condition	puw_bits == 5 || puw_bits == 7	3999:9:174517:174546	2669500	0	True				
ANR	2671845	OrExpression	puw_bits == 5 || puw_bits == 7		2669500	0		||			
ANR	2671846	EqualityExpression	puw_bits == 5		2669500	0		==			
ANR	2671847	Identifier	puw_bits		2669500	0					
ANR	2671848	PrimaryExpression	5		2669500	1					
ANR	2671849	EqualityExpression	puw_bits == 7		2669500	1		==			
ANR	2671850	Identifier	puw_bits		2669500	0					
ANR	2671851	PrimaryExpression	7		2669500	1					
ANR	2671852	CompoundStatement		630:41:13928:13928	2669500	1					
ANR	2671853	ExpressionStatement	"func ( stream , ""!"" )"	4000:6:174557:174575	2669500	0	True				
ANR	2671854	CallExpression	"func ( stream , ""!"" )"		2669500	0					
ANR	2671855	Callee	func		2669500	0					
ANR	2671856	Identifier	func		2669500	0					
ANR	2671857	ArgumentList	stream		2669500	1					
ANR	2671858	Argument	stream		2669500	0					
ANR	2671859	Identifier	stream		2669500	0					
ANR	2671860	Argument	"""!"""		2669500	1					
ANR	2671861	PrimaryExpression	"""!"""		2669500	0					
ANR	2671862	BreakStatement	break ;	4002:5:174589:174594	2669500	13	True				
ANR	2671863	Label	default :	4004:3:174600:174607	2669500	14	True				
ANR	2671864	Identifier	default		2669500	0					
ANR	2671865	ExpressionStatement	"func ( stream , ""INVALID"" )"	4005:5:174614:174638	2669500	15	True				
ANR	2671866	CallExpression	"func ( stream , ""INVALID"" )"		2669500	0					
ANR	2671867	Callee	func		2669500	0					
ANR	2671868	Identifier	func		2669500	0					
ANR	2671869	ArgumentList	stream		2669500	1					
ANR	2671870	Argument	stream		2669500	0					
ANR	2671871	Identifier	stream		2669500	0					
ANR	2671872	Argument	"""INVALID"""		2669500	1					
ANR	2671873	PrimaryExpression	"""INVALID"""		2669500	0					
ANR	2671874	BreakStatement	break ;	4008:6:174659:174664	2669500	19	True				
ANR	2671875	Label	case 'i' :	4010:4:174671:174679	2669500	20	True				
ANR	2671876	CompoundStatement		643:8:14076:14085	2669500	21					
ANR	2671877	IdentifierDeclStatement	long imm5 ;	4012:8:174697:174706	2669500	0	True				
ANR	2671878	IdentifierDecl	imm5		2669500	0					
ANR	2671879	IdentifierDeclType	long		2669500	0					
ANR	2671880	Identifier	imm5		2669500	1					
ANR	2671881	ExpressionStatement	imm5 = ( ( given & 0x100 ) >> 4 ) | ( given & 0xf )	4013:8:174716:174761	2669500	1	True				
ANR	2671882	AssignmentExpression	imm5 = ( ( given & 0x100 ) >> 4 ) | ( given & 0xf )		2669500	0		=			
ANR	2671883	Identifier	imm5		2669500	0					
ANR	2671884	InclusiveOrExpression	( ( given & 0x100 ) >> 4 ) | ( given & 0xf )		2669500	1		|			
ANR	2671885	ShiftExpression	( given & 0x100 ) >> 4		2669500	0		>>			
ANR	2671886	BitAndExpression	given & 0x100		2669500	0		&			
ANR	2671887	Identifier	given		2669500	0					
ANR	2671888	PrimaryExpression	0x100		2669500	1					
ANR	2671889	PrimaryExpression	4		2669500	1					
ANR	2671890	BitAndExpression	given & 0xf		2669500	1		&			
ANR	2671891	Identifier	given		2669500	0					
ANR	2671892	PrimaryExpression	0xf		2669500	1					
ANR	2671893	ExpressionStatement	"func ( stream , ""%ld"" , ( imm5 == 0 ) ? 32 : imm5 )"	4014:8:174771:174816	2669500	2	True				
ANR	2671894	CallExpression	"func ( stream , ""%ld"" , ( imm5 == 0 ) ? 32 : imm5 )"		2669500	0					
ANR	2671895	Callee	func		2669500	0					
ANR	2671896	Identifier	func		2669500	0					
ANR	2671897	ArgumentList	stream		2669500	1					
ANR	2671898	Argument	stream		2669500	0					
ANR	2671899	Identifier	stream		2669500	0					
ANR	2671900	Argument	"""%ld"""		2669500	1					
ANR	2671901	PrimaryExpression	"""%ld"""		2669500	0					
ANR	2671902	Argument	( imm5 == 0 ) ? 32 : imm5		2669500	2					
ANR	2671903	ConditionalExpression	( imm5 == 0 ) ? 32 : imm5		2669500	0					
ANR	2671904	Condition	imm5 == 0		2669500	0					
ANR	2671905	EqualityExpression	imm5 == 0		2669500	0		==			
ANR	2671906	Identifier	imm5		2669500	0					
ANR	2671907	PrimaryExpression	0		2669500	1					
ANR	2671908	PrimaryExpression	32		2669500	1					
ANR	2671909	Identifier	imm5		2669500	2					
ANR	2671910	BreakStatement	break ;	4016:6:174832:174837	2669500	22	True				
ANR	2671911	ElseStatement	else		2669500	0					
ANR	2671912	CompoundStatement		650:10:14238:14238	2669500	0					
ANR	2671913	ExpressionStatement	"func ( stream , ""%c"" , * c )"	4020:4:174865:174888	2669500	0	True				
ANR	2671914	CallExpression	"func ( stream , ""%c"" , * c )"		2669500	0					
ANR	2671915	Callee	func		2669500	0					
ANR	2671916	Identifier	func		2669500	0					
ANR	2671917	ArgumentList	stream		2669500	1					
ANR	2671918	Argument	stream		2669500	0					
ANR	2671919	Identifier	stream		2669500	0					
ANR	2671920	Argument	"""%c"""		2669500	1					
ANR	2671921	PrimaryExpression	"""%c"""		2669500	0					
ANR	2671922	Argument	* c		2669500	2					
ANR	2671923	UnaryOperationExpression	* c		2669500	0					
ANR	2671924	UnaryOperator	*		2669500	0					
ANR	2671925	Identifier	c		2669500	1					
ANR	2671926	IfStatement	if ( value_in_comment > 32 || value_in_comment < - 16 )		2669500	12					
ANR	2671927	Condition	value_in_comment > 32 || value_in_comment < - 16	4025:10:174915:174961	2669500	0	True				
ANR	2671928	OrExpression	value_in_comment > 32 || value_in_comment < - 16		2669500	0		||			
ANR	2671929	RelationalExpression	value_in_comment > 32		2669500	0		>			
ANR	2671930	Identifier	value_in_comment		2669500	0					
ANR	2671931	PrimaryExpression	32		2669500	1					
ANR	2671932	RelationalExpression	value_in_comment < - 16		2669500	1		<			
ANR	2671933	Identifier	value_in_comment		2669500	0					
ANR	2671934	UnaryOperationExpression	- 16		2669500	1					
ANR	2671935	UnaryOperator	-		2669500	0					
ANR	2671936	PrimaryExpression	16		2669500	1					
ANR	2671937	ExpressionStatement	"func ( stream , "" ; 0x%lx"" , ( value_in_comment & 0xffffffffUL ) )"	4026:1:174965:175025	2669500	1	True				
ANR	2671938	CallExpression	"func ( stream , "" ; 0x%lx"" , ( value_in_comment & 0xffffffffUL ) )"		2669500	0					
ANR	2671939	Callee	func		2669500	0					
ANR	2671940	Identifier	func		2669500	0					
ANR	2671941	ArgumentList	stream		2669500	1					
ANR	2671942	Argument	stream		2669500	0					
ANR	2671943	Identifier	stream		2669500	0					
ANR	2671944	Argument	""" ; 0x%lx"""		2669500	1					
ANR	2671945	PrimaryExpression	""" ; 0x%lx"""		2669500	0					
ANR	2671946	Argument	value_in_comment & 0xffffffffUL		2669500	2					
ANR	2671947	BitAndExpression	value_in_comment & 0xffffffffUL		2669500	0		&			
ANR	2671948	Identifier	value_in_comment		2669500	0					
ANR	2671949	PrimaryExpression	0xffffffffUL		2669500	1					
ANR	2671950	IfStatement	if ( is_unpredictable )		2669500	13					
ANR	2671951	Condition	is_unpredictable	4029:5:175040:175055	2669500	0	True				
ANR	2671952	Identifier	is_unpredictable		2669500	0					
ANR	2671953	CompoundStatement		660:23:14437:14437	2669500	1					
ANR	2671954	ExpressionStatement	"func ( stream , UNPREDICTABLE_INSTRUCTION )"	4030:2:175062:175102	2669500	0	True				
ANR	2671955	CallExpression	"func ( stream , UNPREDICTABLE_INSTRUCTION )"		2669500	0					
ANR	2671956	Callee	func		2669500	0					
ANR	2671957	Identifier	func		2669500	0					
ANR	2671958	ArgumentList	stream		2669500	1					
ANR	2671959	Argument	stream		2669500	0					
ANR	2671960	Identifier	stream		2669500	0					
ANR	2671961	Argument	UNPREDICTABLE_INSTRUCTION		2669500	1					
ANR	2671962	Identifier	UNPREDICTABLE_INSTRUCTION		2669500	0					
ANR	2671963	ReturnStatement	return TRUE ;	4033:1:175109:175120	2669500	14	True				
ANR	2671964	Identifier	TRUE		2669500	0					
ANR	2671965	ReturnStatement	return FALSE ;	4035:2:175130:175142	2669500	11	True				
ANR	2671966	Identifier	FALSE		2669500	0					
ANR	2671967	ReturnType	static bfd_boolean		2669500	1					
ANR	2671968	Identifier	print_insn_coprocessor		2669500	2					
ANR	2671969	ParameterList	"bfd_vma pc , struct disassemble_info * info , long given , bfd_boolean thumb"		2669500	3					
ANR	2671970	Parameter	bfd_vma pc	3366:24:160537:160546	2669500	0	True				
ANR	2671971	ParameterType	bfd_vma		2669500	0					
ANR	2671972	Identifier	pc		2669500	1					
ANR	2671973	Parameter	struct disassemble_info * info	3367:3:160552:160580	2669500	1	True				
ANR	2671974	ParameterType	struct disassemble_info *		2669500	0					
ANR	2671975	Identifier	info		2669500	1					
ANR	2671976	Parameter	long given	3368:3:160586:160595	2669500	2	True				
ANR	2671977	ParameterType	long		2669500	0					
ANR	2671978	Identifier	given		2669500	1					
ANR	2671979	Parameter	bfd_boolean thumb	3369:3:160601:160617	2669500	3	True				
ANR	2671980	ParameterType	bfd_boolean		2669500	0					
ANR	2671981	Identifier	thumb		2669500	1					
ANR	2671982	CFGEntryNode	ENTRY		2669500		True				
ANR	2671983	CFGExitNode	EXIT		2669500		True				
ANR	2671984	Symbol	& value		2669500						
ANR	2671985	Symbol	UNPREDICTABLE_INSTRUCTION		2669500						
ANR	2671986	Symbol	ARM_FEATURE_ZERO		2669500						
ANR	2671987	Symbol	ARM_ARCH_NONE		2669500						
ANR	2671988	Symbol	* iwmmxt_regnames		2669500						
ANR	2671989	Symbol	cond		2669500						
ANR	2671990	Symbol	PRE_BIT_SET		2669500						
ANR	2671991	Symbol	info -> fprintf_func		2669500						
ANR	2671992	Symbol	IFTHEN_COND		2669500						
ANR	2671993	Symbol	allowed_arches		2669500						
ANR	2671994	Symbol	* arm_conditional		2669500						
ANR	2671995	Symbol	from		2669500						
ANR	2671996	Symbol	info		2669500						
ANR	2671997	Symbol	regno		2669500						
ANR	2671998	Symbol	given		2669500						
ANR	2671999	Symbol	iwmmxt_cregnames		2669500						
ANR	2672000	Symbol	NEGATIVE_BIT_SET		2669500						
ANR	2672001	Symbol	arm_decode_bitfield		2669500						
ANR	2672002	Symbol	SENTINEL_IWMMXT_END		2669500						
ANR	2672003	Symbol	offset		2669500						
ANR	2672004	Symbol	puw_bits		2669500						
ANR	2672005	Symbol	* iwmmxt_wwnames		2669500						
ANR	2672006	Symbol	multiplier		2669500						
ANR	2672007	Symbol	insn -> value		2669500						
ANR	2672008	Symbol	count		2669500						
ANR	2672009	Symbol	TRUE		2669500						
ANR	2672010	Symbol	is_unpredictable		2669500						
ANR	2672011	Symbol	* arm_fp_const		2669500						
ANR	2672012	Symbol	info -> bytes_per_chunk		2669500						
ANR	2672013	Symbol	arm_fp_const		2669500						
ANR	2672014	Symbol	ifthen_state		2669500						
ANR	2672015	Symbol	* iwmmxt_wwssnames		2669500						
ANR	2672016	Symbol	* given		2669500						
ANR	2672017	Symbol	imm4		2669500						
ANR	2672018	Symbol	rm		2669500						
ANR	2672019	Symbol	rn		2669500						
ANR	2672020	Symbol	arm_conditional		2669500						
ANR	2672021	Symbol	imm5		2669500						
ANR	2672022	Symbol	iwmmxt_wwssnames		2669500						
ANR	2672023	Symbol	* arm_regnames		2669500						
ANR	2672024	Symbol	private_data		2669500						
ANR	2672025	Symbol	coprocessor_opcodes		2669500						
ANR	2672026	Symbol	thumb		2669500						
ANR	2672027	Symbol	* cond		2669500						
ANR	2672028	Symbol	iwmmxt_wwnames		2669500						
ANR	2672029	Symbol	imm		2669500						
ANR	2672030	Symbol	& width		2669500						
ANR	2672031	Symbol	info -> stream		2669500						
ANR	2672032	Symbol	bfd_mach_arm_iWMMXt		2669500						
ANR	2672033	Symbol	* width		2669500						
ANR	2672034	Symbol	ubit		2669500						
ANR	2672035	Symbol	WRITEBACK_BIT_SET		2669500						
ANR	2672036	Symbol	value_in_comment		2669500						
ANR	2672037	Symbol	ARM_CPU_HAS_FEATURE		2669500						
ANR	2672038	Symbol	stream		2669500						
ANR	2672039	Symbol	u_reg		2669500						
ANR	2672040	Symbol	* ++ c		2669500						
ANR	2672041	Symbol	arm_regnames		2669500						
ANR	2672042	Symbol	value		2669500						
ANR	2672043	Symbol	decVal		2669500						
ANR	2672044	Symbol	mask		2669500						
ANR	2672045	Symbol	_		2669500						
ANR	2672046	Symbol	c		2669500						
ANR	2672047	Symbol	bfd_mach_arm_iWMMXt2		2669500						
ANR	2672048	Symbol	info -> private_data		2669500						
ANR	2672049	Symbol	insn -> arch		2669500						
ANR	2672050	Symbol	info -> mach		2669500						
ANR	2672051	Symbol	* c ++		2669500						
ANR	2672052	Symbol	* insn		2669500						
ANR	2672053	Symbol	floatVal		2669500						
ANR	2672054	Symbol	COND_UNCOND		2669500						
ANR	2672055	Symbol	* c		2669500						
ANR	2672056	Symbol	single		2669500						
ANR	2672057	Symbol	insn		2669500						
ANR	2672058	Symbol	cp_num		2669500						
ANR	2672059	Symbol	pc		2669500						
ANR	2672060	Symbol	W_BIT		2669500						
ANR	2672061	Symbol	func		2669500						
ANR	2672062	Symbol	bfd_mach_arm_XScale		2669500						
ANR	2672063	Symbol	* value		2669500						
ANR	2672064	Symbol	iwmmxt_regnames		2669500						
ANR	2672065	Symbol	* iwmmxt_cregnames		2669500						
ANR	2672066	Symbol	width		2669500						
ANR	2672067	Symbol	* private_data		2669500						
ANR	2672068	Symbol	FALSE		2669500						
ANR	2672069	Symbol	* info		2669500						
ANR	2672070	Symbol	insn -> mask		2669500						
ANR	2672071	Symbol	insn -> assembler		2669500						
ANR	2672072	Symbol	private_data -> features		2669500						
ANR	2672073	Function	print_arm_address	4043:0:175369:177544							
ANR	2672074	FunctionDef	"print_arm_address (bfd_vma pc , struct disassemble_info * info , long given)"		2672073	0					
ANR	2672075	CompoundStatement		4045:0:175462:177544	2672073	0					
ANR	2672076	IdentifierDeclStatement	void * stream = info -> stream ;	4046:2:175466:175493	2672073	0	True				
ANR	2672077	IdentifierDecl	* stream = info -> stream		2672073	0					
ANR	2672078	IdentifierDeclType	void *		2672073	0					
ANR	2672079	Identifier	stream		2672073	1					
ANR	2672080	AssignmentExpression	* stream = info -> stream		2672073	2		=			
ANR	2672081	Identifier	stream		2672073	0					
ANR	2672082	PtrMemberAccess	info -> stream		2672073	1					
ANR	2672083	Identifier	info		2672073	0					
ANR	2672084	Identifier	stream		2672073	1					
ANR	2672085	IdentifierDeclStatement	fprintf_ftype func = info -> fprintf_func ;	4047:2:175497:175536	2672073	1	True				
ANR	2672086	IdentifierDecl	func = info -> fprintf_func		2672073	0					
ANR	2672087	IdentifierDeclType	fprintf_ftype		2672073	0					
ANR	2672088	Identifier	func		2672073	1					
ANR	2672089	AssignmentExpression	func = info -> fprintf_func		2672073	2		=			
ANR	2672090	Identifier	func		2672073	0					
ANR	2672091	PtrMemberAccess	info -> fprintf_func		2672073	1					
ANR	2672092	Identifier	info		2672073	0					
ANR	2672093	Identifier	fprintf_func		2672073	1					
ANR	2672094	IdentifierDeclStatement	bfd_vma offset = 0 ;	4048:2:175540:175558	2672073	2	True				
ANR	2672095	IdentifierDecl	offset = 0		2672073	0					
ANR	2672096	IdentifierDeclType	bfd_vma		2672073	0					
ANR	2672097	Identifier	offset		2672073	1					
ANR	2672098	AssignmentExpression	offset = 0		2672073	2		=			
ANR	2672099	Identifier	offset		2672073	0					
ANR	2672100	PrimaryExpression	0		2672073	1					
ANR	2672101	IfStatement	if ( ( ( given & 0x000f0000 ) == 0x000f0000 ) && ( ( given & 0x02000000 ) == 0 ) )		2672073	3					
ANR	2672102	Condition	( ( given & 0x000f0000 ) == 0x000f0000 ) && ( ( given & 0x02000000 ) == 0 )	4050:6:175567:175639	2672073	0	True				
ANR	2672103	AndExpression	( ( given & 0x000f0000 ) == 0x000f0000 ) && ( ( given & 0x02000000 ) == 0 )		2672073	0		&&			
ANR	2672104	EqualityExpression	( given & 0x000f0000 ) == 0x000f0000		2672073	0		==			
ANR	2672105	BitAndExpression	given & 0x000f0000		2672073	0		&			
ANR	2672106	Identifier	given		2672073	0					
ANR	2672107	PrimaryExpression	0x000f0000		2672073	1					
ANR	2672108	PrimaryExpression	0x000f0000		2672073	1					
ANR	2672109	EqualityExpression	( given & 0x02000000 ) == 0		2672073	1		==			
ANR	2672110	BitAndExpression	given & 0x02000000		2672073	0		&			
ANR	2672111	Identifier	given		2672073	0					
ANR	2672112	PrimaryExpression	0x02000000		2672073	1					
ANR	2672113	PrimaryExpression	0		2672073	1					
ANR	2672114	CompoundStatement		8:4:183:183	2672073	1					
ANR	2672115	ExpressionStatement	offset = given & 0xfff	4053:6:175654:175676	2672073	0	True				
ANR	2672116	AssignmentExpression	offset = given & 0xfff		2672073	0		=			
ANR	2672117	Identifier	offset		2672073	0					
ANR	2672118	BitAndExpression	given & 0xfff		2672073	1		&			
ANR	2672119	Identifier	given		2672073	0					
ANR	2672120	PrimaryExpression	0xfff		2672073	1					
ANR	2672121	ExpressionStatement	"func ( stream , ""[pc"" )"	4055:6:175685:175705	2672073	1	True				
ANR	2672122	CallExpression	"func ( stream , ""[pc"" )"		2672073	0					
ANR	2672123	Callee	func		2672073	0					
ANR	2672124	Identifier	func		2672073	0					
ANR	2672125	ArgumentList	stream		2672073	1					
ANR	2672126	Argument	stream		2672073	0					
ANR	2672127	Identifier	stream		2672073	0					
ANR	2672128	Argument	"""[pc"""		2672073	1					
ANR	2672129	PrimaryExpression	"""[pc"""		2672073	0					
ANR	2672130	IfStatement	if ( PRE_BIT_SET )		2672073	2					
ANR	2672131	Condition	PRE_BIT_SET	4057:10:175718:175728	2672073	0	True				
ANR	2672132	Identifier	PRE_BIT_SET		2672073	0					
ANR	2672133	CompoundStatement		14:1:269:269	2672073	1					
ANR	2672134	IfStatement	if ( WRITEBACK_BIT_SET || NEGATIVE_BIT_SET || offset )		2672073	0					
ANR	2672135	Condition	WRITEBACK_BIT_SET || NEGATIVE_BIT_SET || offset	4061:7:175821:175867	2672073	0	True				
ANR	2672136	OrExpression	WRITEBACK_BIT_SET || NEGATIVE_BIT_SET || offset		2672073	0		||			
ANR	2672137	Identifier	WRITEBACK_BIT_SET		2672073	0					
ANR	2672138	OrExpression	NEGATIVE_BIT_SET || offset		2672073	1		||			
ANR	2672139	Identifier	NEGATIVE_BIT_SET		2672073	0					
ANR	2672140	Identifier	offset		2672073	1					
ANR	2672141	CompoundStatement		17:56:407:407	2672073	1					
ANR	2672142	ExpressionStatement	"func ( stream , "", %s%d"" , NEGATIVE_BIT_SET ? ""-"" : """" , ( int ) offset )"	4062:4:175876:175941	2672073	0	True				
ANR	2672143	CallExpression	"func ( stream , "", %s%d"" , NEGATIVE_BIT_SET ? ""-"" : """" , ( int ) offset )"		2672073	0					
ANR	2672144	Callee	func		2672073	0					
ANR	2672145	Identifier	func		2672073	0					
ANR	2672146	ArgumentList	stream		2672073	1					
ANR	2672147	Argument	stream		2672073	0					
ANR	2672148	Identifier	stream		2672073	0					
ANR	2672149	Argument	""", %s%d"""		2672073	1					
ANR	2672150	PrimaryExpression	""", %s%d"""		2672073	0					
ANR	2672151	Argument	"NEGATIVE_BIT_SET ? ""-"" : """""		2672073	2					
ANR	2672152	ConditionalExpression	"NEGATIVE_BIT_SET ? ""-"" : """""		2672073	0					
ANR	2672153	Condition	NEGATIVE_BIT_SET		2672073	0					
ANR	2672154	Identifier	NEGATIVE_BIT_SET		2672073	0					
ANR	2672155	PrimaryExpression	"""-"""		2672073	1					
ANR	2672156	PrimaryExpression	""""""		2672073	2					
ANR	2672157	Argument	( int ) offset		2672073	3					
ANR	2672158	CastExpression	( int ) offset		2672073	0					
ANR	2672159	CastTarget	int		2672073	0					
ANR	2672160	Identifier	offset		2672073	1					
ANR	2672161	IfStatement	if ( NEGATIVE_BIT_SET )		2672073	1					
ANR	2672162	Condition	NEGATIVE_BIT_SET	4065:7:175956:175971	2672073	0	True				
ANR	2672163	Identifier	NEGATIVE_BIT_SET		2672073	0					
ANR	2672164	CompoundStatement		21:25:511:511	2672073	1					
ANR	2672165	ExpressionStatement	offset = - offset	4066:4:175980:175996	2672073	0	True				
ANR	2672166	AssignmentExpression	offset = - offset		2672073	0		=			
ANR	2672167	Identifier	offset		2672073	0					
ANR	2672168	UnaryOperationExpression	- offset		2672073	1					
ANR	2672169	UnaryOperator	-		2672073	0					
ANR	2672170	Identifier	offset		2672073	1					
ANR	2672171	ExpressionStatement	offset += pc + 8	4069:3:176007:176023	2672073	2	True				
ANR	2672172	AssignmentExpression	offset += pc + 8		2672073	0		+=			
ANR	2672173	Identifier	offset		2672073	0					
ANR	2672174	AdditiveExpression	pc + 8		2672073	1		+			
ANR	2672175	Identifier	pc		2672073	0					
ANR	2672176	PrimaryExpression	8		2672073	1					
ANR	2672177	ExpressionStatement	"func ( stream , ""]%s"" , WRITEBACK_BIT_SET ? ""!"" : """" )"	4075:3:176194:176244	2672073	3	True				
ANR	2672178	CallExpression	"func ( stream , ""]%s"" , WRITEBACK_BIT_SET ? ""!"" : """" )"		2672073	0					
ANR	2672179	Callee	func		2672073	0					
ANR	2672180	Identifier	func		2672073	0					
ANR	2672181	ArgumentList	stream		2672073	1					
ANR	2672182	Argument	stream		2672073	0					
ANR	2672183	Identifier	stream		2672073	0					
ANR	2672184	Argument	"""]%s"""		2672073	1					
ANR	2672185	PrimaryExpression	"""]%s"""		2672073	0					
ANR	2672186	Argument	"WRITEBACK_BIT_SET ? ""!"" : """""		2672073	2					
ANR	2672187	ConditionalExpression	"WRITEBACK_BIT_SET ? ""!"" : """""		2672073	0					
ANR	2672188	Condition	WRITEBACK_BIT_SET		2672073	0					
ANR	2672189	Identifier	WRITEBACK_BIT_SET		2672073	0					
ANR	2672190	PrimaryExpression	"""!"""		2672073	1					
ANR	2672191	PrimaryExpression	""""""		2672073	2					
ANR	2672192	ElseStatement	else		2672073	0					
ANR	2672193	CompoundStatement		34:1:820:820	2672073	0					
ANR	2672194	ExpressionStatement	"func ( stream , ""], %s%d"" , NEGATIVE_BIT_SET ? ""-"" : """" , ( int ) offset )"	4079:3:176288:176355	2672073	0	True				
ANR	2672195	CallExpression	"func ( stream , ""], %s%d"" , NEGATIVE_BIT_SET ? ""-"" : """" , ( int ) offset )"		2672073	0					
ANR	2672196	Callee	func		2672073	0					
ANR	2672197	Identifier	func		2672073	0					
ANR	2672198	ArgumentList	stream		2672073	1					
ANR	2672199	Argument	stream		2672073	0					
ANR	2672200	Identifier	stream		2672073	0					
ANR	2672201	Argument	"""], %s%d"""		2672073	1					
ANR	2672202	PrimaryExpression	"""], %s%d"""		2672073	0					
ANR	2672203	Argument	"NEGATIVE_BIT_SET ? ""-"" : """""		2672073	2					
ANR	2672204	ConditionalExpression	"NEGATIVE_BIT_SET ? ""-"" : """""		2672073	0					
ANR	2672205	Condition	NEGATIVE_BIT_SET		2672073	0					
ANR	2672206	Identifier	NEGATIVE_BIT_SET		2672073	0					
ANR	2672207	PrimaryExpression	"""-"""		2672073	1					
ANR	2672208	PrimaryExpression	""""""		2672073	2					
ANR	2672209	Argument	( int ) offset		2672073	3					
ANR	2672210	CastExpression	( int ) offset		2672073	0					
ANR	2672211	CastTarget	int		2672073	0					
ANR	2672212	Identifier	offset		2672073	1					
ANR	2672213	ExpressionStatement	offset = pc + 8	4082:3:176393:176408	2672073	1	True				
ANR	2672214	AssignmentExpression	offset = pc + 8		2672073	0		=			
ANR	2672215	Identifier	offset		2672073	0					
ANR	2672216	AdditiveExpression	pc + 8		2672073	1		+			
ANR	2672217	Identifier	pc		2672073	0					
ANR	2672218	PrimaryExpression	8		2672073	1					
ANR	2672219	ExpressionStatement	"func ( stream , "" ; "" )"	4085:6:176420:176440	2672073	3	True				
ANR	2672220	CallExpression	"func ( stream , "" ; "" )"		2672073	0					
ANR	2672221	Callee	func		2672073	0					
ANR	2672222	Identifier	func		2672073	0					
ANR	2672223	ArgumentList	stream		2672073	1					
ANR	2672224	Argument	stream		2672073	0					
ANR	2672225	Identifier	stream		2672073	0					
ANR	2672226	Argument	""" ; """		2672073	1					
ANR	2672227	PrimaryExpression	""" ; """		2672073	0					
ANR	2672228	ExpressionStatement	"info -> print_address_func ( offset , info )"	4086:6:176448:176487	2672073	4	True				
ANR	2672229	CallExpression	"info -> print_address_func ( offset , info )"		2672073	0					
ANR	2672230	Callee	info -> print_address_func		2672073	0					
ANR	2672231	PtrMemberAccess	info -> print_address_func		2672073	0					
ANR	2672232	Identifier	info		2672073	0					
ANR	2672233	Identifier	print_address_func		2672073	1					
ANR	2672234	ArgumentList	offset		2672073	1					
ANR	2672235	Argument	offset		2672073	0					
ANR	2672236	Identifier	offset		2672073	0					
ANR	2672237	Argument	info		2672073	1					
ANR	2672238	Identifier	info		2672073	0					
ANR	2672239	ExpressionStatement	offset = 0	4087:6:176495:176505	2672073	5	True				
ANR	2672240	AssignmentExpression	offset = 0		2672073	0		=			
ANR	2672241	Identifier	offset		2672073	0					
ANR	2672242	PrimaryExpression	0		2672073	1					
ANR	2672243	ElseStatement	else		2672073	0					
ANR	2672244	CompoundStatement		46:4:1061:1061	2672073	0					
ANR	2672245	ExpressionStatement	"func ( stream , ""[%s"" , arm_regnames [ ( given >> 16 ) & 0xf ] )"	4091:6:176532:176592	2672073	0	True				
ANR	2672246	CallExpression	"func ( stream , ""[%s"" , arm_regnames [ ( given >> 16 ) & 0xf ] )"		2672073	0					
ANR	2672247	Callee	func		2672073	0					
ANR	2672248	Identifier	func		2672073	0					
ANR	2672249	ArgumentList	stream		2672073	1					
ANR	2672250	Argument	stream		2672073	0					
ANR	2672251	Identifier	stream		2672073	0					
ANR	2672252	Argument	"""[%s"""		2672073	1					
ANR	2672253	PrimaryExpression	"""[%s"""		2672073	0					
ANR	2672254	Argument	arm_regnames [ ( given >> 16 ) & 0xf ]		2672073	2					
ANR	2672255	ArrayIndexing	arm_regnames [ ( given >> 16 ) & 0xf ]		2672073	0					
ANR	2672256	Identifier	arm_regnames		2672073	0					
ANR	2672257	BitAndExpression	( given >> 16 ) & 0xf		2672073	1		&			
ANR	2672258	ShiftExpression	given >> 16		2672073	0		>>			
ANR	2672259	Identifier	given		2672073	0					
ANR	2672260	PrimaryExpression	16		2672073	1					
ANR	2672261	PrimaryExpression	0xf		2672073	1					
ANR	2672262	IfStatement	if ( PRE_BIT_SET )		2672073	1					
ANR	2672263	Condition	PRE_BIT_SET	4094:10:176605:176615	2672073	0	True				
ANR	2672264	Identifier	PRE_BIT_SET		2672073	0					
ANR	2672265	CompoundStatement		51:1:1156:1156	2672073	1					
ANR	2672266	IfStatement	if ( ( given & 0x02000000 ) == 0 )		2672073	0					
ANR	2672267	Condition	( given & 0x02000000 ) == 0	4096:7:176628:176652	2672073	0	True				
ANR	2672268	EqualityExpression	( given & 0x02000000 ) == 0		2672073	0		==			
ANR	2672269	BitAndExpression	given & 0x02000000		2672073	0		&			
ANR	2672270	Identifier	given		2672073	0					
ANR	2672271	PrimaryExpression	0x02000000		2672073	1					
ANR	2672272	PrimaryExpression	0		2672073	1					
ANR	2672273	CompoundStatement		53:5:1197:1197	2672073	1					
ANR	2672274	ExpressionStatement	offset = given & 0xfff	4099:7:176733:176755	2672073	0	True				
ANR	2672275	AssignmentExpression	offset = given & 0xfff		2672073	0		=			
ANR	2672276	Identifier	offset		2672073	0					
ANR	2672277	BitAndExpression	given & 0xfff		2672073	1		&			
ANR	2672278	Identifier	given		2672073	0					
ANR	2672279	PrimaryExpression	0xfff		2672073	1					
ANR	2672280	IfStatement	if ( WRITEBACK_BIT_SET || NEGATIVE_BIT_SET || offset )		2672073	1					
ANR	2672281	Condition	WRITEBACK_BIT_SET || NEGATIVE_BIT_SET || offset	4100:11:176768:176814	2672073	0	True				
ANR	2672282	OrExpression	WRITEBACK_BIT_SET || NEGATIVE_BIT_SET || offset		2672073	0		||			
ANR	2672283	Identifier	WRITEBACK_BIT_SET		2672073	0					
ANR	2672284	OrExpression	NEGATIVE_BIT_SET || offset		2672073	1		||			
ANR	2672285	Identifier	NEGATIVE_BIT_SET		2672073	0					
ANR	2672286	Identifier	offset		2672073	1					
ANR	2672287	CompoundStatement		56:60:1354:1354	2672073	1					
ANR	2672288	ExpressionStatement	"func ( stream , "", %s%d"" , NEGATIVE_BIT_SET ? ""-"" : """" , ( int ) offset )"	4101:8:176827:176892	2672073	0	True				
ANR	2672289	CallExpression	"func ( stream , "", %s%d"" , NEGATIVE_BIT_SET ? ""-"" : """" , ( int ) offset )"		2672073	0					
ANR	2672290	Callee	func		2672073	0					
ANR	2672291	Identifier	func		2672073	0					
ANR	2672292	ArgumentList	stream		2672073	1					
ANR	2672293	Argument	stream		2672073	0					
ANR	2672294	Identifier	stream		2672073	0					
ANR	2672295	Argument	""", %s%d"""		2672073	1					
ANR	2672296	PrimaryExpression	""", %s%d"""		2672073	0					
ANR	2672297	Argument	"NEGATIVE_BIT_SET ? ""-"" : """""		2672073	2					
ANR	2672298	ConditionalExpression	"NEGATIVE_BIT_SET ? ""-"" : """""		2672073	0					
ANR	2672299	Condition	NEGATIVE_BIT_SET		2672073	0					
ANR	2672300	Identifier	NEGATIVE_BIT_SET		2672073	0					
ANR	2672301	PrimaryExpression	"""-"""		2672073	1					
ANR	2672302	PrimaryExpression	""""""		2672073	2					
ANR	2672303	Argument	( int ) offset		2672073	3					
ANR	2672304	CastExpression	( int ) offset		2672073	0					
ANR	2672305	CastTarget	int		2672073	0					
ANR	2672306	Identifier	offset		2672073	1					
ANR	2672307	ElseStatement	else		2672073	0					
ANR	2672308	CompoundStatement		61:5:1460:1460	2672073	0					
ANR	2672309	ExpressionStatement	"func ( stream , "", %s"" , NEGATIVE_BIT_SET ? ""-"" : """" )"	4106:7:176932:176982	2672073	0	True				
ANR	2672310	CallExpression	"func ( stream , "", %s"" , NEGATIVE_BIT_SET ? ""-"" : """" )"		2672073	0					
ANR	2672311	Callee	func		2672073	0					
ANR	2672312	Identifier	func		2672073	0					
ANR	2672313	ArgumentList	stream		2672073	1					
ANR	2672314	Argument	stream		2672073	0					
ANR	2672315	Identifier	stream		2672073	0					
ANR	2672316	Argument	""", %s"""		2672073	1					
ANR	2672317	PrimaryExpression	""", %s"""		2672073	0					
ANR	2672318	Argument	"NEGATIVE_BIT_SET ? ""-"" : """""		2672073	2					
ANR	2672319	ConditionalExpression	"NEGATIVE_BIT_SET ? ""-"" : """""		2672073	0					
ANR	2672320	Condition	NEGATIVE_BIT_SET		2672073	0					
ANR	2672321	Identifier	NEGATIVE_BIT_SET		2672073	0					
ANR	2672322	PrimaryExpression	"""-"""		2672073	1					
ANR	2672323	PrimaryExpression	""""""		2672073	2					
ANR	2672324	ExpressionStatement	"arm_decode_shift ( given , func , stream , TRUE )"	4107:7:176991:177035	2672073	1	True				
ANR	2672325	CallExpression	"arm_decode_shift ( given , func , stream , TRUE )"		2672073	0					
ANR	2672326	Callee	arm_decode_shift		2672073	0					
ANR	2672327	Identifier	arm_decode_shift		2672073	0					
ANR	2672328	ArgumentList	given		2672073	1					
ANR	2672329	Argument	given		2672073	0					
ANR	2672330	Identifier	given		2672073	0					
ANR	2672331	Argument	func		2672073	1					
ANR	2672332	Identifier	func		2672073	0					
ANR	2672333	Argument	stream		2672073	2					
ANR	2672334	Identifier	stream		2672073	0					
ANR	2672335	Argument	TRUE		2672073	3					
ANR	2672336	Identifier	TRUE		2672073	0					
ANR	2672337	ExpressionStatement	"func ( stream , ""]%s"" , WRITEBACK_BIT_SET ? ""!"" : """" )"	4110:3:177048:177100	2672073	1	True				
ANR	2672338	CallExpression	"func ( stream , ""]%s"" , WRITEBACK_BIT_SET ? ""!"" : """" )"		2672073	0					
ANR	2672339	Callee	func		2672073	0					
ANR	2672340	Identifier	func		2672073	0					
ANR	2672341	ArgumentList	stream		2672073	1					
ANR	2672342	Argument	stream		2672073	0					
ANR	2672343	Identifier	stream		2672073	0					
ANR	2672344	Argument	"""]%s"""		2672073	1					
ANR	2672345	PrimaryExpression	"""]%s"""		2672073	0					
ANR	2672346	Argument	"WRITEBACK_BIT_SET ? ""!"" : """""		2672073	2					
ANR	2672347	ConditionalExpression	"WRITEBACK_BIT_SET ? ""!"" : """""		2672073	0					
ANR	2672348	Condition	WRITEBACK_BIT_SET		2672073	0					
ANR	2672349	Identifier	WRITEBACK_BIT_SET		2672073	0					
ANR	2672350	PrimaryExpression	"""!"""		2672073	1					
ANR	2672351	PrimaryExpression	""""""		2672073	2					
ANR	2672352	ElseStatement	else		2672073	0					
ANR	2672353	CompoundStatement		70:1:1654:1654	2672073	0					
ANR	2672354	IfStatement	if ( ( given & 0x02000000 ) == 0 )		2672073	0					
ANR	2672355	Condition	( given & 0x02000000 ) == 0	4115:7:177126:177150	2672073	0	True				
ANR	2672356	EqualityExpression	( given & 0x02000000 ) == 0		2672073	0		==			
ANR	2672357	BitAndExpression	given & 0x02000000		2672073	0		&			
ANR	2672358	Identifier	given		2672073	0					
ANR	2672359	PrimaryExpression	0x02000000		2672073	1					
ANR	2672360	PrimaryExpression	0		2672073	1					
ANR	2672361	CompoundStatement		72:5:1695:1695	2672073	1					
ANR	2672362	ExpressionStatement	offset = given & 0xfff	4118:7:177201:177223	2672073	0	True				
ANR	2672363	AssignmentExpression	offset = given & 0xfff		2672073	0		=			
ANR	2672364	Identifier	offset		2672073	0					
ANR	2672365	BitAndExpression	given & 0xfff		2672073	1		&			
ANR	2672366	Identifier	given		2672073	0					
ANR	2672367	PrimaryExpression	0xfff		2672073	1					
ANR	2672368	ExpressionStatement	"func ( stream , ""], %s%d"" , NEGATIVE_BIT_SET ? ""-"" : """" , ( int ) offset )"	4119:7:177232:177305	2672073	1	True				
ANR	2672369	CallExpression	"func ( stream , ""], %s%d"" , NEGATIVE_BIT_SET ? ""-"" : """" , ( int ) offset )"		2672073	0					
ANR	2672370	Callee	func		2672073	0					
ANR	2672371	Identifier	func		2672073	0					
ANR	2672372	ArgumentList	stream		2672073	1					
ANR	2672373	Argument	stream		2672073	0					
ANR	2672374	Identifier	stream		2672073	0					
ANR	2672375	Argument	"""], %s%d"""		2672073	1					
ANR	2672376	PrimaryExpression	"""], %s%d"""		2672073	0					
ANR	2672377	Argument	"NEGATIVE_BIT_SET ? ""-"" : """""		2672073	2					
ANR	2672378	ConditionalExpression	"NEGATIVE_BIT_SET ? ""-"" : """""		2672073	0					
ANR	2672379	Condition	NEGATIVE_BIT_SET		2672073	0					
ANR	2672380	Identifier	NEGATIVE_BIT_SET		2672073	0					
ANR	2672381	PrimaryExpression	"""-"""		2672073	1					
ANR	2672382	PrimaryExpression	""""""		2672073	2					
ANR	2672383	Argument	( int ) offset		2672073	3					
ANR	2672384	CastExpression	( int ) offset		2672073	0					
ANR	2672385	CastTarget	int		2672073	0					
ANR	2672386	Identifier	offset		2672073	1					
ANR	2672387	ElseStatement	else		2672073	0					
ANR	2672388	CompoundStatement		79:5:1864:1864	2672073	0					
ANR	2672389	ExpressionStatement	"func ( stream , ""], %s"" , NEGATIVE_BIT_SET ? ""-"" : """" )"	4124:7:177336:177393	2672073	0	True				
ANR	2672390	CallExpression	"func ( stream , ""], %s"" , NEGATIVE_BIT_SET ? ""-"" : """" )"		2672073	0					
ANR	2672391	Callee	func		2672073	0					
ANR	2672392	Identifier	func		2672073	0					
ANR	2672393	ArgumentList	stream		2672073	1					
ANR	2672394	Argument	stream		2672073	0					
ANR	2672395	Identifier	stream		2672073	0					
ANR	2672396	Argument	"""], %s"""		2672073	1					
ANR	2672397	PrimaryExpression	"""], %s"""		2672073	0					
ANR	2672398	Argument	"NEGATIVE_BIT_SET ? ""-"" : """""		2672073	2					
ANR	2672399	ConditionalExpression	"NEGATIVE_BIT_SET ? ""-"" : """""		2672073	0					
ANR	2672400	Condition	NEGATIVE_BIT_SET		2672073	0					
ANR	2672401	Identifier	NEGATIVE_BIT_SET		2672073	0					
ANR	2672402	PrimaryExpression	"""-"""		2672073	1					
ANR	2672403	PrimaryExpression	""""""		2672073	2					
ANR	2672404	ExpressionStatement	"arm_decode_shift ( given , func , stream , TRUE )"	4126:7:177402:177446	2672073	1	True				
ANR	2672405	CallExpression	"arm_decode_shift ( given , func , stream , TRUE )"		2672073	0					
ANR	2672406	Callee	arm_decode_shift		2672073	0					
ANR	2672407	Identifier	arm_decode_shift		2672073	0					
ANR	2672408	ArgumentList	given		2672073	1					
ANR	2672409	Argument	given		2672073	0					
ANR	2672410	Identifier	given		2672073	0					
ANR	2672411	Argument	func		2672073	1					
ANR	2672412	Identifier	func		2672073	0					
ANR	2672413	Argument	stream		2672073	2					
ANR	2672414	Identifier	stream		2672073	0					
ANR	2672415	Argument	TRUE		2672073	3					
ANR	2672416	Identifier	TRUE		2672073	0					
ANR	2672417	IfStatement	if ( NEGATIVE_BIT_SET )		2672073	2					
ANR	2672418	Condition	NEGATIVE_BIT_SET	4129:5:177463:177478	2672073	0	True				
ANR	2672419	Identifier	NEGATIVE_BIT_SET		2672073	0					
ANR	2672420	CompoundStatement		85:23:2018:2018	2672073	1					
ANR	2672421	ExpressionStatement	offset = - offset	4130:2:177485:177501	2672073	0	True				
ANR	2672422	AssignmentExpression	offset = - offset		2672073	0		=			
ANR	2672423	Identifier	offset		2672073	0					
ANR	2672424	UnaryOperationExpression	- offset		2672073	1					
ANR	2672425	UnaryOperator	-		2672073	0					
ANR	2672426	Identifier	offset		2672073	1					
ANR	2672427	ReturnStatement	return ( signed long ) offset ;	4134:2:177515:177542	2672073	4	True				
ANR	2672428	CastExpression	( signed long ) offset		2672073	0					
ANR	2672429	CastTarget	signed long		2672073	0					
ANR	2672430	Identifier	offset		2672073	1					
ANR	2672431	ReturnType	static signed long		2672073	1					
ANR	2672432	Identifier	print_arm_address		2672073	2					
ANR	2672433	ParameterList	"bfd_vma pc , struct disassemble_info * info , long given"		2672073	3					
ANR	2672434	Parameter	bfd_vma pc	4044:19:175407:175416	2672073	0	True				
ANR	2672435	ParameterType	bfd_vma		2672073	0					
ANR	2672436	Identifier	pc		2672073	1					
ANR	2672437	Parameter	struct disassemble_info * info	4044:31:175419:175447	2672073	1	True				
ANR	2672438	ParameterType	struct disassemble_info *		2672073	0					
ANR	2672439	Identifier	info		2672073	1					
ANR	2672440	Parameter	long given	4044:62:175450:175459	2672073	2	True				
ANR	2672441	ParameterType	long		2672073	0					
ANR	2672442	Identifier	given		2672073	1					
ANR	2672443	CFGEntryNode	ENTRY		2672073		True				
ANR	2672444	CFGExitNode	EXIT		2672073		True				
ANR	2672445	Symbol	given		2672073						
ANR	2672446	Symbol	NEGATIVE_BIT_SET		2672073						
ANR	2672447	Symbol	* arm_regnames		2672073						
ANR	2672448	Symbol	offset		2672073						
ANR	2672449	Symbol	TRUE		2672073						
ANR	2672450	Symbol	info -> stream		2672073						
ANR	2672451	Symbol	PRE_BIT_SET		2672073						
ANR	2672452	Symbol	info -> fprintf_func		2672073						
ANR	2672453	Symbol	WRITEBACK_BIT_SET		2672073						
ANR	2672454	Symbol	pc		2672073						
ANR	2672455	Symbol	func		2672073						
ANR	2672456	Symbol	stream		2672073						
ANR	2672457	Symbol	* given		2672073						
ANR	2672458	Symbol	* info		2672073						
ANR	2672459	Symbol	arm_regnames		2672073						
ANR	2672460	Symbol	info		2672073						
ANR	2672461	Function	print_insn_neon	4141:0:177696:190369							
ANR	2672462	FunctionDef	"print_insn_neon (struct disassemble_info * info , long given , bfd_boolean thumb)"		2672461	0					
ANR	2672463	CompoundStatement		4143:0:177794:190369	2672461	0					
ANR	2672464	IdentifierDeclStatement	const struct opcode32 * insn ;	4144:2:177798:177825	2672461	0	True				
ANR	2672465	IdentifierDecl	* insn		2672461	0					
ANR	2672466	IdentifierDeclType	const struct opcode32 *		2672461	0					
ANR	2672467	Identifier	insn		2672461	1					
ANR	2672468	IdentifierDeclStatement	void * stream = info -> stream ;	4145:2:177829:177856	2672461	1	True				
ANR	2672469	IdentifierDecl	* stream = info -> stream		2672461	0					
ANR	2672470	IdentifierDeclType	void *		2672461	0					
ANR	2672471	Identifier	stream		2672461	1					
ANR	2672472	AssignmentExpression	* stream = info -> stream		2672461	2		=			
ANR	2672473	Identifier	stream		2672461	0					
ANR	2672474	PtrMemberAccess	info -> stream		2672461	1					
ANR	2672475	Identifier	info		2672461	0					
ANR	2672476	Identifier	stream		2672461	1					
ANR	2672477	IdentifierDeclStatement	fprintf_ftype func = info -> fprintf_func ;	4146:2:177860:177899	2672461	2	True				
ANR	2672478	IdentifierDecl	func = info -> fprintf_func		2672461	0					
ANR	2672479	IdentifierDeclType	fprintf_ftype		2672461	0					
ANR	2672480	Identifier	func		2672461	1					
ANR	2672481	AssignmentExpression	func = info -> fprintf_func		2672461	2		=			
ANR	2672482	Identifier	func		2672461	0					
ANR	2672483	PtrMemberAccess	info -> fprintf_func		2672461	1					
ANR	2672484	Identifier	info		2672461	0					
ANR	2672485	Identifier	fprintf_func		2672461	1					
ANR	2672486	IfStatement	if ( thumb )		2672461	3					
ANR	2672487	Condition	thumb	4148:6:177908:177912	2672461	0	True				
ANR	2672488	Identifier	thumb		2672461	0					
ANR	2672489	CompoundStatement		7:4:124:124	2672461	1					
ANR	2672490	IfStatement	if ( ( given & 0xef000000 ) == 0xef000000 )		2672461	0					
ANR	2672491	Condition	( given & 0xef000000 ) == 0xef000000	4150:10:177931:177964	2672461	0	True				
ANR	2672492	EqualityExpression	( given & 0xef000000 ) == 0xef000000		2672461	0		==			
ANR	2672493	BitAndExpression	given & 0xef000000		2672461	0		&			
ANR	2672494	Identifier	given		2672461	0					
ANR	2672495	PrimaryExpression	0xef000000		2672461	1					
ANR	2672496	PrimaryExpression	0xef000000		2672461	1					
ANR	2672497	CompoundStatement		11:3:247:286	2672461	1					
ANR	2672498	IdentifierDeclStatement	unsigned long bit28 = given & ( 1 << 28 ) ;	4153:3:178042:178081	2672461	0	True				
ANR	2672499	IdentifierDecl	bit28 = given & ( 1 << 28 )		2672461	0					
ANR	2672500	IdentifierDeclType	unsigned long		2672461	0					
ANR	2672501	Identifier	bit28		2672461	1					
ANR	2672502	AssignmentExpression	bit28 = given & ( 1 << 28 )		2672461	2		=			
ANR	2672503	Identifier	bit28		2672461	0					
ANR	2672504	BitAndExpression	given & ( 1 << 28 )		2672461	1		&			
ANR	2672505	Identifier	given		2672461	0					
ANR	2672506	ShiftExpression	1 << 28		2672461	1		<<			
ANR	2672507	PrimaryExpression	1		2672461	0					
ANR	2672508	PrimaryExpression	28		2672461	1					
ANR	2672509	ExpressionStatement	given &= 0x00ffffff	4155:3:178087:178106	2672461	1	True				
ANR	2672510	AssignmentExpression	given &= 0x00ffffff		2672461	0		&=			
ANR	2672511	Identifier	given		2672461	0					
ANR	2672512	PrimaryExpression	0x00ffffff		2672461	1					
ANR	2672513	IfStatement	if ( bit28 )		2672461	2					
ANR	2672514	Condition	bit28	4156:7:178115:178119	2672461	0	True				
ANR	2672515	Identifier	bit28		2672461	0					
ANR	2672516	CompoundStatement		14:14:327:327	2672461	1					
ANR	2672517	ExpressionStatement	given |= 0xf3000000	4157:4:178128:178147	2672461	0	True				
ANR	2672518	AssignmentExpression	given |= 0xf3000000		2672461	0		|=			
ANR	2672519	Identifier	given		2672461	0					
ANR	2672520	PrimaryExpression	0xf3000000		2672461	1					
ANR	2672521	ElseStatement	else		2672461	0					
ANR	2672522	CompoundStatement		16:10:364:364	2672461	0					
ANR	2672523	ExpressionStatement	given |= 0xf2000000	4159:4:178165:178184	2672461	0	True				
ANR	2672524	AssignmentExpression	given |= 0xf2000000		2672461	0		|=			
ANR	2672525	Identifier	given		2672461	0					
ANR	2672526	PrimaryExpression	0xf2000000		2672461	1					
ANR	2672527	ElseStatement	else		2672461	0					
ANR	2672528	IfStatement	if ( ( given & 0xff000000 ) == 0xf9000000 )		2672461	0					
ANR	2672529	Condition	( given & 0xff000000 ) == 0xf9000000	4161:17:178208:178241	2672461	0	True				
ANR	2672530	EqualityExpression	( given & 0xff000000 ) == 0xf9000000		2672461	0		==			
ANR	2672531	BitAndExpression	given & 0xff000000		2672461	0		&			
ANR	2672532	Identifier	given		2672461	0					
ANR	2672533	PrimaryExpression	0xff000000		2672461	1					
ANR	2672534	PrimaryExpression	0xf9000000		2672461	1					
ANR	2672535	CompoundStatement		19:53:449:449	2672461	1					
ANR	2672536	ExpressionStatement	given ^= 0xf9000000 ^ 0xf4000000	4162:7:178253:178285	2672461	0	True				
ANR	2672537	AssignmentExpression	given ^= 0xf9000000 ^ 0xf4000000		2672461	0		^=			
ANR	2672538	Identifier	given		2672461	0					
ANR	2672539	ExclusiveOrExpression	0xf9000000 ^ 0xf4000000		2672461	1		^			
ANR	2672540	PrimaryExpression	0xf9000000		2672461	0					
ANR	2672541	PrimaryExpression	0xf4000000		2672461	1					
ANR	2672542	ElseStatement	else		2672461	0					
ANR	2672543	CompoundStatement		21:13:505:505	2672461	0					
ANR	2672544	ReturnStatement	return FALSE ;	4164:7:178309:178321	2672461	0	True				
ANR	2672545	Identifier	FALSE		2672461	0					
ANR	2672546	ForStatement	for ( insn = neon_opcodes ; insn -> assembler ; insn ++ )		2672461	4					
ANR	2672547	ForInit	insn = neon_opcodes ;	4168:7:178345:178364	2672461	0	True				
ANR	2672548	AssignmentExpression	insn = neon_opcodes		2672461	0		=			
ANR	2672549	Identifier	insn		2672461	0					
ANR	2672550	Identifier	neon_opcodes		2672461	1					
ANR	2672551	Condition	insn -> assembler	4168:28:178366:178380	2672461	1	True				
ANR	2672552	PtrMemberAccess	insn -> assembler		2672461	0					
ANR	2672553	Identifier	insn		2672461	0					
ANR	2672554	Identifier	assembler		2672461	1					
ANR	2672555	PostIncDecOperationExpression	insn ++	4168:45:178383:178388	2672461	2	True				
ANR	2672556	Identifier	insn		2672461	0					
ANR	2672557	IncDec	++		2672461	1					
ANR	2672558	CompoundStatement		27:4:600:600	2672461	3					
ANR	2672559	IfStatement	if ( ( given & insn -> mask ) == insn -> value )		2672461	0					
ANR	2672560	Condition	( given & insn -> mask ) == insn -> value	4170:10:178407:178441	2672461	0	True				
ANR	2672561	EqualityExpression	( given & insn -> mask ) == insn -> value		2672461	0		==			
ANR	2672562	BitAndExpression	given & insn -> mask		2672461	0		&			
ANR	2672563	Identifier	given		2672461	0					
ANR	2672564	PtrMemberAccess	insn -> mask		2672461	1					
ANR	2672565	Identifier	insn		2672461	0					
ANR	2672566	Identifier	mask		2672461	1					
ANR	2672567	PtrMemberAccess	insn -> value		2672461	1					
ANR	2672568	Identifier	insn		2672461	0					
ANR	2672569	Identifier	value		2672461	1					
ANR	2672570	CompoundStatement		32:3:736:749	2672461	1					
ANR	2672571	IdentifierDeclStatement	bfd_boolean is_unpredictable = FALSE ;	4173:3:178490:178526	2672461	0	True				
ANR	2672572	IdentifierDecl	is_unpredictable = FALSE		2672461	0					
ANR	2672573	IdentifierDeclType	bfd_boolean		2672461	0					
ANR	2672574	Identifier	is_unpredictable		2672461	1					
ANR	2672575	AssignmentExpression	is_unpredictable = FALSE		2672461	2		=			
ANR	2672576	Identifier	FALSE		2672461	0					
ANR	2672577	Identifier	FALSE		2672461	1					
ANR	2672578	IdentifierDeclStatement	const char * c ;	4174:3:178531:178544	2672461	1	True				
ANR	2672579	IdentifierDecl	* c		2672461	0					
ANR	2672580	IdentifierDeclType	const char *		2672461	0					
ANR	2672581	Identifier	c		2672461	1					
ANR	2672582	ForStatement	for ( c = insn -> assembler ; * c ; c ++ )		2672461	2					
ANR	2672583	ForInit	c = insn -> assembler ;	4176:8:178555:178574	2672461	0	True				
ANR	2672584	AssignmentExpression	c = insn -> assembler		2672461	0		=			
ANR	2672585	Identifier	c		2672461	0					
ANR	2672586	PtrMemberAccess	insn -> assembler		2672461	1					
ANR	2672587	Identifier	insn		2672461	0					
ANR	2672588	Identifier	assembler		2672461	1					
ANR	2672589	Condition	* c	4176:29:178576:178577	2672461	1	True				
ANR	2672590	UnaryOperationExpression	* c		2672461	0					
ANR	2672591	UnaryOperator	*		2672461	0					
ANR	2672592	Identifier	c		2672461	1					
ANR	2672593	PostIncDecOperationExpression	c ++	4176:33:178580:178582	2672461	2	True				
ANR	2672594	Identifier	c		2672461	0					
ANR	2672595	IncDec	++		2672461	1					
ANR	2672596	CompoundStatement		35:5:795:795	2672461	3					
ANR	2672597	IfStatement	if ( * c == '%' )		2672461	0					
ANR	2672598	Condition	* c == '%'	4178:11:178603:178611	2672461	0	True				
ANR	2672599	EqualityExpression	* c == '%'		2672461	0		==			
ANR	2672600	UnaryOperationExpression	* c		2672461	0					
ANR	2672601	UnaryOperator	*		2672461	0					
ANR	2672602	Identifier	c		2672461	1					
ANR	2672603	PrimaryExpression	'%'		2672461	1					
ANR	2672604	CompoundStatement		37:2:821:821	2672461	1					
ANR	2672605	SwitchStatement	switch ( * ++ c )		2672461	0					
ANR	2672606	Condition	* ++ c	4180:12:178630:178633	2672461	0	True				
ANR	2672607	UnaryOperationExpression	* ++ c		2672461	0					
ANR	2672608	UnaryOperator	*		2672461	0					
ANR	2672609	UnaryExpression	++ c		2672461	1					
ANR	2672610	IncDec	++		2672461	0					
ANR	2672611	Identifier	c		2672461	1					
ANR	2672612	CompoundStatement		39:6:847:847	2672461	1					
ANR	2672613	Label	case '%' :	4182:6:178650:178658	2672461	0	True				
ANR	2672614	ExpressionStatement	"func ( stream , ""%%"" )"	4183:8:178668:178687	2672461	1	True				
ANR	2672615	CallExpression	"func ( stream , ""%%"" )"		2672461	0					
ANR	2672616	Callee	func		2672461	0					
ANR	2672617	Identifier	func		2672461	0					
ANR	2672618	ArgumentList	stream		2672461	1					
ANR	2672619	Argument	stream		2672461	0					
ANR	2672620	Identifier	stream		2672461	0					
ANR	2672621	Argument	"""%%"""		2672461	1					
ANR	2672622	PrimaryExpression	"""%%"""		2672461	0					
ANR	2672623	BreakStatement	break ;	4184:8:178697:178702	2672461	2	True				
ANR	2672624	Label	case 'u' :	4186:6:178711:178719	2672461	3	True				
ANR	2672625	IfStatement	if ( thumb && ifthen_state )		2672461	4					
ANR	2672626	Condition	thumb && ifthen_state	4187:11:178732:178752	2672461	0	True				
ANR	2672627	AndExpression	thumb && ifthen_state		2672461	0		&&			
ANR	2672628	Identifier	thumb		2672461	0					
ANR	2672629	Identifier	ifthen_state		2672461	1					
ANR	2672630	CompoundStatement		45:34:960:960	2672461	1					
ANR	2672631	ExpressionStatement	is_unpredictable = TRUE	4188:8:178765:178788	2672461	0	True				
ANR	2672632	AssignmentExpression	is_unpredictable = TRUE		2672461	0		=			
ANR	2672633	Identifier	is_unpredictable		2672461	0					
ANR	2672634	Identifier	TRUE		2672461	1					
ANR	2672635	Label	case 'c' :	4192:6:178834:178842	2672461	5	True				
ANR	2672636	IfStatement	if ( thumb && ifthen_state )		2672461	6					
ANR	2672637	Condition	thumb && ifthen_state	4193:11:178855:178875	2672461	0	True				
ANR	2672638	AndExpression	thumb && ifthen_state		2672461	0		&&			
ANR	2672639	Identifier	thumb		2672461	0					
ANR	2672640	Identifier	ifthen_state		2672461	1					
ANR	2672641	CompoundStatement		51:34:1083:1083	2672461	1					
ANR	2672642	ExpressionStatement	"func ( stream , ""%s"" , arm_conditional [ IFTHEN_COND ] )"	4194:8:178888:178937	2672461	0	True				
ANR	2672643	CallExpression	"func ( stream , ""%s"" , arm_conditional [ IFTHEN_COND ] )"		2672461	0					
ANR	2672644	Callee	func		2672461	0					
ANR	2672645	Identifier	func		2672461	0					
ANR	2672646	ArgumentList	stream		2672461	1					
ANR	2672647	Argument	stream		2672461	0					
ANR	2672648	Identifier	stream		2672461	0					
ANR	2672649	Argument	"""%s"""		2672461	1					
ANR	2672650	PrimaryExpression	"""%s"""		2672461	0					
ANR	2672651	Argument	arm_conditional [ IFTHEN_COND ]		2672461	2					
ANR	2672652	ArrayIndexing	arm_conditional [ IFTHEN_COND ]		2672461	0					
ANR	2672653	Identifier	arm_conditional		2672461	0					
ANR	2672654	Identifier	IFTHEN_COND		2672461	1					
ANR	2672655	BreakStatement	break ;	4196:7:178955:178960	2672461	7	True				
ANR	2672656	Label	case 'A' :	4198:6:178969:178977	2672461	8	True				
ANR	2672657	CompoundStatement		79:3:1770:1776	2672461	9					
ANR	2672658	Statement	static	4200:3:178992:178997	2672461	0	True				
ANR	2672659	IdentifierDeclStatement	"const unsigned char enc [ 16 ] = { 0x4 , 0x14 , 0x4 , 0x4 , 0x3 , 0x13 , 0x3 , 0x1 , 0x2 , 0x12 , 0x2 , 0 , 0 , 0 , 0 , 0 } ;"	4200:10:178999:179288	2672461	1	True				
ANR	2672660	IdentifierDecl	"enc [ 16 ] = { 0x4 , 0x14 , 0x4 , 0x4 , 0x3 , 0x13 , 0x3 , 0x1 , 0x2 , 0x12 , 0x2 , 0 , 0 , 0 , 0 , 0 }"		2672461	0					
ANR	2672661	IdentifierDeclType	const unsigned char [ 16 ]		2672461	0					
ANR	2672662	Identifier	enc		2672461	1					
ANR	2672663	PrimaryExpression	16		2672461	2					
ANR	2672664	AssignmentExpression	"enc [ 16 ] = { 0x4 , 0x14 , 0x4 , 0x4 , 0x3 , 0x13 , 0x3 , 0x1 , 0x2 , 0x12 , 0x2 , 0 , 0 , 0 , 0 , 0 }"		2672461	3		=			
ANR	2672665	Identifier	enc		2672461	0					
ANR	2672666	InitializerList	0x4		2672461	1					
ANR	2672667	PrimaryExpression	0x4		2672461	0					
ANR	2672668	PrimaryExpression	0x14		2672461	1					
ANR	2672669	PrimaryExpression	0x4		2672461	2					
ANR	2672670	PrimaryExpression	0x4		2672461	3					
ANR	2672671	PrimaryExpression	0x3		2672461	4					
ANR	2672672	PrimaryExpression	0x13		2672461	5					
ANR	2672673	PrimaryExpression	0x3		2672461	6					
ANR	2672674	PrimaryExpression	0x1		2672461	7					
ANR	2672675	PrimaryExpression	0x2		2672461	8					
ANR	2672676	PrimaryExpression	0x12		2672461	9					
ANR	2672677	PrimaryExpression	0x2		2672461	10					
ANR	2672678	PrimaryExpression	0		2672461	11					
ANR	2672679	PrimaryExpression	0		2672461	12					
ANR	2672680	PrimaryExpression	0		2672461	13					
ANR	2672681	PrimaryExpression	0		2672461	14					
ANR	2672682	PrimaryExpression	0		2672461	15					
ANR	2672683	IdentifierDeclStatement	int rd = ( ( given >> 12 ) & 0xf ) | ( ( ( given >> 22 ) & 1 ) << 4 ) ;	4214:3:179293:179352	2672461	2	True				
ANR	2672684	IdentifierDecl	rd = ( ( given >> 12 ) & 0xf ) | ( ( ( given >> 22 ) & 1 ) << 4 )		2672461	0					
ANR	2672685	IdentifierDeclType	int		2672461	0					
ANR	2672686	Identifier	rd		2672461	1					
ANR	2672687	AssignmentExpression	rd = ( ( given >> 12 ) & 0xf ) | ( ( ( given >> 22 ) & 1 ) << 4 )		2672461	2		=			
ANR	2672688	Identifier	rd		2672461	0					
ANR	2672689	InclusiveOrExpression	( ( given >> 12 ) & 0xf ) | ( ( ( given >> 22 ) & 1 ) << 4 )		2672461	1		|			
ANR	2672690	BitAndExpression	( given >> 12 ) & 0xf		2672461	0		&			
ANR	2672691	ShiftExpression	given >> 12		2672461	0		>>			
ANR	2672692	Identifier	given		2672461	0					
ANR	2672693	PrimaryExpression	12		2672461	1					
ANR	2672694	PrimaryExpression	0xf		2672461	1					
ANR	2672695	ShiftExpression	( ( given >> 22 ) & 1 ) << 4		2672461	1		<<			
ANR	2672696	BitAndExpression	( given >> 22 ) & 1		2672461	0		&			
ANR	2672697	ShiftExpression	given >> 22		2672461	0		>>			
ANR	2672698	Identifier	given		2672461	0					
ANR	2672699	PrimaryExpression	22		2672461	1					
ANR	2672700	PrimaryExpression	1		2672461	1					
ANR	2672701	PrimaryExpression	4		2672461	1					
ANR	2672702	IdentifierDeclStatement	int rn = ( ( given >> 16 ) & 0xf ) ;	4215:3:179357:179387	2672461	3	True				
ANR	2672703	IdentifierDecl	rn = ( ( given >> 16 ) & 0xf )		2672461	0					
ANR	2672704	IdentifierDeclType	int		2672461	0					
ANR	2672705	Identifier	rn		2672461	1					
ANR	2672706	AssignmentExpression	rn = ( ( given >> 16 ) & 0xf )		2672461	2		=			
ANR	2672707	Identifier	rn		2672461	0					
ANR	2672708	BitAndExpression	( given >> 16 ) & 0xf		2672461	1		&			
ANR	2672709	ShiftExpression	given >> 16		2672461	0		>>			
ANR	2672710	Identifier	given		2672461	0					
ANR	2672711	PrimaryExpression	16		2672461	1					
ANR	2672712	PrimaryExpression	0xf		2672461	1					
ANR	2672713	IdentifierDeclStatement	int rm = ( ( given >> 0 ) & 0xf ) ;	4216:3:179392:179421	2672461	4	True				
ANR	2672714	IdentifierDecl	rm = ( ( given >> 0 ) & 0xf )		2672461	0					
ANR	2672715	IdentifierDeclType	int		2672461	0					
ANR	2672716	Identifier	rm		2672461	1					
ANR	2672717	AssignmentExpression	rm = ( ( given >> 0 ) & 0xf )		2672461	2		=			
ANR	2672718	Identifier	rm		2672461	0					
ANR	2672719	BitAndExpression	( given >> 0 ) & 0xf		2672461	1		&			
ANR	2672720	ShiftExpression	given >> 0		2672461	0		>>			
ANR	2672721	Identifier	given		2672461	0					
ANR	2672722	PrimaryExpression	0		2672461	1					
ANR	2672723	PrimaryExpression	0xf		2672461	1					
ANR	2672724	IdentifierDeclStatement	int align = ( ( given >> 4 ) & 0x3 ) ;	4217:3:179426:179458	2672461	5	True				
ANR	2672725	IdentifierDecl	align = ( ( given >> 4 ) & 0x3 )		2672461	0					
ANR	2672726	IdentifierDeclType	int		2672461	0					
ANR	2672727	Identifier	align		2672461	1					
ANR	2672728	AssignmentExpression	align = ( ( given >> 4 ) & 0x3 )		2672461	2		=			
ANR	2672729	Identifier	align		2672461	0					
ANR	2672730	BitAndExpression	( given >> 4 ) & 0x3		2672461	1		&			
ANR	2672731	ShiftExpression	given >> 4		2672461	0		>>			
ANR	2672732	Identifier	given		2672461	0					
ANR	2672733	PrimaryExpression	4		2672461	1					
ANR	2672734	PrimaryExpression	0x3		2672461	1					
ANR	2672735	IdentifierDeclStatement	int type = ( ( given >> 8 ) & 0xf ) ;	4218:3:179463:179494	2672461	6	True				
ANR	2672736	IdentifierDecl	type = ( ( given >> 8 ) & 0xf )		2672461	0					
ANR	2672737	IdentifierDeclType	int		2672461	0					
ANR	2672738	Identifier	type		2672461	1					
ANR	2672739	AssignmentExpression	type = ( ( given >> 8 ) & 0xf )		2672461	2		=			
ANR	2672740	Identifier	type		2672461	0					
ANR	2672741	BitAndExpression	( given >> 8 ) & 0xf		2672461	1		&			
ANR	2672742	ShiftExpression	given >> 8		2672461	0		>>			
ANR	2672743	Identifier	given		2672461	0					
ANR	2672744	PrimaryExpression	8		2672461	1					
ANR	2672745	PrimaryExpression	0xf		2672461	1					
ANR	2672746	IdentifierDeclStatement	int n = enc [ type ] & 0xf ;	4219:3:179499:179522	2672461	7	True				
ANR	2672747	IdentifierDecl	n = enc [ type ] & 0xf		2672461	0					
ANR	2672748	IdentifierDeclType	int		2672461	0					
ANR	2672749	Identifier	n		2672461	1					
ANR	2672750	AssignmentExpression	n = enc [ type ] & 0xf		2672461	2		=			
ANR	2672751	Identifier	n		2672461	0					
ANR	2672752	BitAndExpression	enc [ type ] & 0xf		2672461	1		&			
ANR	2672753	ArrayIndexing	enc [ type ]		2672461	0					
ANR	2672754	Identifier	enc		2672461	0					
ANR	2672755	Identifier	type		2672461	1					
ANR	2672756	PrimaryExpression	0xf		2672461	1					
ANR	2672757	IdentifierDeclStatement	int stride = ( enc [ type ] >> 4 ) + 1 ;	4220:3:179527:179560	2672461	8	True				
ANR	2672758	IdentifierDecl	stride = ( enc [ type ] >> 4 ) + 1		2672461	0					
ANR	2672759	IdentifierDeclType	int		2672461	0					
ANR	2672760	Identifier	stride		2672461	1					
ANR	2672761	AssignmentExpression	stride = ( enc [ type ] >> 4 ) + 1		2672461	2		=			
ANR	2672762	Identifier	stride		2672461	0					
ANR	2672763	AdditiveExpression	( enc [ type ] >> 4 ) + 1		2672461	1		+			
ANR	2672764	ShiftExpression	enc [ type ] >> 4		2672461	0		>>			
ANR	2672765	ArrayIndexing	enc [ type ]		2672461	0					
ANR	2672766	Identifier	enc		2672461	0					
ANR	2672767	Identifier	type		2672461	1					
ANR	2672768	PrimaryExpression	4		2672461	1					
ANR	2672769	PrimaryExpression	1		2672461	1					
ANR	2672770	IdentifierDeclStatement	int ix ;	4221:3:179565:179571	2672461	9	True				
ANR	2672771	IdentifierDecl	ix		2672461	0					
ANR	2672772	IdentifierDeclType	int		2672461	0					
ANR	2672773	Identifier	ix		2672461	1					
ANR	2672774	ExpressionStatement	"func ( stream , ""{"" )"	4223:3:179577:179595	2672461	10	True				
ANR	2672775	CallExpression	"func ( stream , ""{"" )"		2672461	0					
ANR	2672776	Callee	func		2672461	0					
ANR	2672777	Identifier	func		2672461	0					
ANR	2672778	ArgumentList	stream		2672461	1					
ANR	2672779	Argument	stream		2672461	0					
ANR	2672780	Identifier	stream		2672461	0					
ANR	2672781	Argument	"""{"""		2672461	1					
ANR	2672782	PrimaryExpression	"""{"""		2672461	0					
ANR	2672783	IfStatement	if ( stride > 1 )		2672461	11					
ANR	2672784	Condition	stride > 1	4224:7:179604:179613	2672461	0	True				
ANR	2672785	RelationalExpression	stride > 1		2672461	0		>			
ANR	2672786	Identifier	stride		2672461	0					
ANR	2672787	PrimaryExpression	1		2672461	1					
ANR	2672788	CompoundStatement		82:19:1821:1821	2672461	1					
ANR	2672789	ForStatement	for ( ix = 0 ; ix != n ; ix ++ )		2672461	0					
ANR	2672790	ForInit	ix = 0 ;	4225:9:179627:179633	2672461	0	True				
ANR	2672791	AssignmentExpression	ix = 0		2672461	0		=			
ANR	2672792	Identifier	ix		2672461	0					
ANR	2672793	PrimaryExpression	0		2672461	1					
ANR	2672794	Condition	ix != n	4225:17:179635:179641	2672461	1	True				
ANR	2672795	EqualityExpression	ix != n		2672461	0		!=			
ANR	2672796	Identifier	ix		2672461	0					
ANR	2672797	Identifier	n		2672461	1					
ANR	2672798	PostIncDecOperationExpression	ix ++	4225:26:179644:179647	2672461	2	True				
ANR	2672799	Identifier	ix		2672461	0					
ANR	2672800	IncDec	++		2672461	1					
ANR	2672801	CompoundStatement		83:32:1855:1855	2672461	3					
ANR	2672802	ExpressionStatement	"func ( stream , ""%sd%d"" , ix ? "","" : """" , rd + ix * stride )"	4226:5:179657:179712	2672461	0	True				
ANR	2672803	CallExpression	"func ( stream , ""%sd%d"" , ix ? "","" : """" , rd + ix * stride )"		2672461	0					
ANR	2672804	Callee	func		2672461	0					
ANR	2672805	Identifier	func		2672461	0					
ANR	2672806	ArgumentList	stream		2672461	1					
ANR	2672807	Argument	stream		2672461	0					
ANR	2672808	Identifier	stream		2672461	0					
ANR	2672809	Argument	"""%sd%d"""		2672461	1					
ANR	2672810	PrimaryExpression	"""%sd%d"""		2672461	0					
ANR	2672811	Argument	"ix ? "","" : """""		2672461	2					
ANR	2672812	ConditionalExpression	"ix ? "","" : """""		2672461	0					
ANR	2672813	Condition	ix		2672461	0					
ANR	2672814	Identifier	ix		2672461	0					
ANR	2672815	PrimaryExpression	""","""		2672461	1					
ANR	2672816	PrimaryExpression	""""""		2672461	2					
ANR	2672817	Argument	rd + ix * stride		2672461	3					
ANR	2672818	AdditiveExpression	rd + ix * stride		2672461	0		+			
ANR	2672819	Identifier	rd		2672461	0					
ANR	2672820	MultiplicativeExpression	ix * stride		2672461	1		*			
ANR	2672821	Identifier	ix		2672461	0					
ANR	2672822	Identifier	stride		2672461	1					
ANR	2672823	ElseStatement	else		2672461	0					
ANR	2672824	IfStatement	if ( n == 1 )		2672461	0					
ANR	2672825	Condition	n == 1	4228:14:179734:179739	2672461	0	True				
ANR	2672826	EqualityExpression	n == 1		2672461	0		==			
ANR	2672827	Identifier	n		2672461	0					
ANR	2672828	PrimaryExpression	1		2672461	1					
ANR	2672829	CompoundStatement		86:22:1947:1947	2672461	1					
ANR	2672830	ExpressionStatement	"func ( stream , ""d%d"" , rd )"	4229:4:179748:179772	2672461	0	True				
ANR	2672831	CallExpression	"func ( stream , ""d%d"" , rd )"		2672461	0					
ANR	2672832	Callee	func		2672461	0					
ANR	2672833	Identifier	func		2672461	0					
ANR	2672834	ArgumentList	stream		2672461	1					
ANR	2672835	Argument	stream		2672461	0					
ANR	2672836	Identifier	stream		2672461	0					
ANR	2672837	Argument	"""d%d"""		2672461	1					
ANR	2672838	PrimaryExpression	"""d%d"""		2672461	0					
ANR	2672839	Argument	rd		2672461	2					
ANR	2672840	Identifier	rd		2672461	0					
ANR	2672841	ElseStatement	else		2672461	0					
ANR	2672842	CompoundStatement		88:10:1989:1989	2672461	0					
ANR	2672843	ExpressionStatement	"func ( stream , ""d%d-d%d"" , rd , rd + n - 1 )"	4231:4:179790:179830	2672461	0	True				
ANR	2672844	CallExpression	"func ( stream , ""d%d-d%d"" , rd , rd + n - 1 )"		2672461	0					
ANR	2672845	Callee	func		2672461	0					
ANR	2672846	Identifier	func		2672461	0					
ANR	2672847	ArgumentList	stream		2672461	1					
ANR	2672848	Argument	stream		2672461	0					
ANR	2672849	Identifier	stream		2672461	0					
ANR	2672850	Argument	"""d%d-d%d"""		2672461	1					
ANR	2672851	PrimaryExpression	"""d%d-d%d"""		2672461	0					
ANR	2672852	Argument	rd		2672461	2					
ANR	2672853	Identifier	rd		2672461	0					
ANR	2672854	Argument	rd + n - 1		2672461	3					
ANR	2672855	AdditiveExpression	rd + n - 1		2672461	0		+			
ANR	2672856	Identifier	rd		2672461	0					
ANR	2672857	AdditiveExpression	n - 1		2672461	1		-			
ANR	2672858	Identifier	n		2672461	0					
ANR	2672859	PrimaryExpression	1		2672461	1					
ANR	2672860	ExpressionStatement	"func ( stream , ""}, [%s"" , arm_regnames [ rn ] )"	4233:3:179840:179881	2672461	12	True				
ANR	2672861	CallExpression	"func ( stream , ""}, [%s"" , arm_regnames [ rn ] )"		2672461	0					
ANR	2672862	Callee	func		2672461	0					
ANR	2672863	Identifier	func		2672461	0					
ANR	2672864	ArgumentList	stream		2672461	1					
ANR	2672865	Argument	stream		2672461	0					
ANR	2672866	Identifier	stream		2672461	0					
ANR	2672867	Argument	"""}, [%s"""		2672461	1					
ANR	2672868	PrimaryExpression	"""}, [%s"""		2672461	0					
ANR	2672869	Argument	arm_regnames [ rn ]		2672461	2					
ANR	2672870	ArrayIndexing	arm_regnames [ rn ]		2672461	0					
ANR	2672871	Identifier	arm_regnames		2672461	0					
ANR	2672872	Identifier	rn		2672461	1					
ANR	2672873	IfStatement	if ( align )		2672461	13					
ANR	2672874	Condition	align	4234:7:179890:179894	2672461	0	True				
ANR	2672875	Identifier	align		2672461	0					
ANR	2672876	CompoundStatement		92:14:2102:2102	2672461	1					
ANR	2672877	ExpressionStatement	"func ( stream , "" :%d"" , 32 << align )"	4235:4:179903:179937	2672461	0	True				
ANR	2672878	CallExpression	"func ( stream , "" :%d"" , 32 << align )"		2672461	0					
ANR	2672879	Callee	func		2672461	0					
ANR	2672880	Identifier	func		2672461	0					
ANR	2672881	ArgumentList	stream		2672461	1					
ANR	2672882	Argument	stream		2672461	0					
ANR	2672883	Identifier	stream		2672461	0					
ANR	2672884	Argument	""" :%d"""		2672461	1					
ANR	2672885	PrimaryExpression	""" :%d"""		2672461	0					
ANR	2672886	Argument	32 << align		2672461	2					
ANR	2672887	ShiftExpression	32 << align		2672461	0		<<			
ANR	2672888	PrimaryExpression	32		2672461	0					
ANR	2672889	Identifier	align		2672461	1					
ANR	2672890	ExpressionStatement	"func ( stream , ""]"" )"	4237:3:179947:179965	2672461	14	True				
ANR	2672891	CallExpression	"func ( stream , ""]"" )"		2672461	0					
ANR	2672892	Callee	func		2672461	0					
ANR	2672893	Identifier	func		2672461	0					
ANR	2672894	ArgumentList	stream		2672461	1					
ANR	2672895	Argument	stream		2672461	0					
ANR	2672896	Identifier	stream		2672461	0					
ANR	2672897	Argument	"""]"""		2672461	1					
ANR	2672898	PrimaryExpression	"""]"""		2672461	0					
ANR	2672899	IfStatement	if ( rm == 0xd )		2672461	15					
ANR	2672900	Condition	rm == 0xd	4238:7:179974:179982	2672461	0	True				
ANR	2672901	EqualityExpression	rm == 0xd		2672461	0		==			
ANR	2672902	Identifier	rm		2672461	0					
ANR	2672903	PrimaryExpression	0xd		2672461	1					
ANR	2672904	CompoundStatement		96:18:2190:2190	2672461	1					
ANR	2672905	ExpressionStatement	"func ( stream , ""!"" )"	4239:4:179991:180009	2672461	0	True				
ANR	2672906	CallExpression	"func ( stream , ""!"" )"		2672461	0					
ANR	2672907	Callee	func		2672461	0					
ANR	2672908	Identifier	func		2672461	0					
ANR	2672909	ArgumentList	stream		2672461	1					
ANR	2672910	Argument	stream		2672461	0					
ANR	2672911	Identifier	stream		2672461	0					
ANR	2672912	Argument	"""!"""		2672461	1					
ANR	2672913	PrimaryExpression	"""!"""		2672461	0					
ANR	2672914	ElseStatement	else		2672461	0					
ANR	2672915	IfStatement	if ( rm != 0xf )		2672461	0					
ANR	2672916	Condition	rm != 0xf	4240:14:180025:180033	2672461	0	True				
ANR	2672917	EqualityExpression	rm != 0xf		2672461	0		!=			
ANR	2672918	Identifier	rm		2672461	0					
ANR	2672919	PrimaryExpression	0xf		2672461	1					
ANR	2672920	CompoundStatement		98:25:2241:2241	2672461	1					
ANR	2672921	ExpressionStatement	"func ( stream , "", %s"" , arm_regnames [ rm ] )"	4241:4:180042:180081	2672461	0	True				
ANR	2672922	CallExpression	"func ( stream , "", %s"" , arm_regnames [ rm ] )"		2672461	0					
ANR	2672923	Callee	func		2672461	0					
ANR	2672924	Identifier	func		2672461	0					
ANR	2672925	ArgumentList	stream		2672461	1					
ANR	2672926	Argument	stream		2672461	0					
ANR	2672927	Identifier	stream		2672461	0					
ANR	2672928	Argument	""", %s"""		2672461	1					
ANR	2672929	PrimaryExpression	""", %s"""		2672461	0					
ANR	2672930	Argument	arm_regnames [ rm ]		2672461	2					
ANR	2672931	ArrayIndexing	arm_regnames [ rm ]		2672461	0					
ANR	2672932	Identifier	arm_regnames		2672461	0					
ANR	2672933	Identifier	rm		2672461	1					
ANR	2672934	BreakStatement	break ;	4244:8:180106:180111	2672461	10	True				
ANR	2672935	Label	case 'B' :	4246:6:180120:180128	2672461	11	True				
ANR	2672936	CompoundStatement		115:24:2758:2763	2672461	12					
ANR	2672937	IdentifierDeclStatement	int rd = ( ( given >> 12 ) & 0xf ) | ( ( ( given >> 22 ) & 1 ) << 4 ) ;	4248:3:180143:180202	2672461	0	True				
ANR	2672938	IdentifierDecl	rd = ( ( given >> 12 ) & 0xf ) | ( ( ( given >> 22 ) & 1 ) << 4 )		2672461	0					
ANR	2672939	IdentifierDeclType	int		2672461	0					
ANR	2672940	Identifier	rd		2672461	1					
ANR	2672941	AssignmentExpression	rd = ( ( given >> 12 ) & 0xf ) | ( ( ( given >> 22 ) & 1 ) << 4 )		2672461	2		=			
ANR	2672942	Identifier	rd		2672461	0					
ANR	2672943	InclusiveOrExpression	( ( given >> 12 ) & 0xf ) | ( ( ( given >> 22 ) & 1 ) << 4 )		2672461	1		|			
ANR	2672944	BitAndExpression	( given >> 12 ) & 0xf		2672461	0		&			
ANR	2672945	ShiftExpression	given >> 12		2672461	0		>>			
ANR	2672946	Identifier	given		2672461	0					
ANR	2672947	PrimaryExpression	12		2672461	1					
ANR	2672948	PrimaryExpression	0xf		2672461	1					
ANR	2672949	ShiftExpression	( ( given >> 22 ) & 1 ) << 4		2672461	1		<<			
ANR	2672950	BitAndExpression	( given >> 22 ) & 1		2672461	0		&			
ANR	2672951	ShiftExpression	given >> 22		2672461	0		>>			
ANR	2672952	Identifier	given		2672461	0					
ANR	2672953	PrimaryExpression	22		2672461	1					
ANR	2672954	PrimaryExpression	1		2672461	1					
ANR	2672955	PrimaryExpression	4		2672461	1					
ANR	2672956	IdentifierDeclStatement	int rn = ( ( given >> 16 ) & 0xf ) ;	4249:3:180207:180237	2672461	1	True				
ANR	2672957	IdentifierDecl	rn = ( ( given >> 16 ) & 0xf )		2672461	0					
ANR	2672958	IdentifierDeclType	int		2672461	0					
ANR	2672959	Identifier	rn		2672461	1					
ANR	2672960	AssignmentExpression	rn = ( ( given >> 16 ) & 0xf )		2672461	2		=			
ANR	2672961	Identifier	rn		2672461	0					
ANR	2672962	BitAndExpression	( given >> 16 ) & 0xf		2672461	1		&			
ANR	2672963	ShiftExpression	given >> 16		2672461	0		>>			
ANR	2672964	Identifier	given		2672461	0					
ANR	2672965	PrimaryExpression	16		2672461	1					
ANR	2672966	PrimaryExpression	0xf		2672461	1					
ANR	2672967	IdentifierDeclStatement	int rm = ( ( given >> 0 ) & 0xf ) ;	4250:3:180242:180271	2672461	2	True				
ANR	2672968	IdentifierDecl	rm = ( ( given >> 0 ) & 0xf )		2672461	0					
ANR	2672969	IdentifierDeclType	int		2672461	0					
ANR	2672970	Identifier	rm		2672461	1					
ANR	2672971	AssignmentExpression	rm = ( ( given >> 0 ) & 0xf )		2672461	2		=			
ANR	2672972	Identifier	rm		2672461	0					
ANR	2672973	BitAndExpression	( given >> 0 ) & 0xf		2672461	1		&			
ANR	2672974	ShiftExpression	given >> 0		2672461	0		>>			
ANR	2672975	Identifier	given		2672461	0					
ANR	2672976	PrimaryExpression	0		2672461	1					
ANR	2672977	PrimaryExpression	0xf		2672461	1					
ANR	2672978	IdentifierDeclStatement	int idx_align = ( ( given >> 4 ) & 0xf ) ;	4251:3:180276:180312	2672461	3	True				
ANR	2672979	IdentifierDecl	idx_align = ( ( given >> 4 ) & 0xf )		2672461	0					
ANR	2672980	IdentifierDeclType	int		2672461	0					
ANR	2672981	Identifier	idx_align		2672461	1					
ANR	2672982	AssignmentExpression	idx_align = ( ( given >> 4 ) & 0xf )		2672461	2		=			
ANR	2672983	Identifier	idx_align		2672461	0					
ANR	2672984	BitAndExpression	( given >> 4 ) & 0xf		2672461	1		&			
ANR	2672985	ShiftExpression	given >> 4		2672461	0		>>			
ANR	2672986	Identifier	given		2672461	0					
ANR	2672987	PrimaryExpression	4		2672461	1					
ANR	2672988	PrimaryExpression	0xf		2672461	1					
ANR	2672989	IdentifierDeclStatement	int align = 0 ;	4252:24:180338:180351	2672461	4	True				
ANR	2672990	IdentifierDecl	align = 0		2672461	0					
ANR	2672991	IdentifierDeclType	int		2672461	0					
ANR	2672992	Identifier	align		2672461	1					
ANR	2672993	AssignmentExpression	align = 0		2672461	2		=			
ANR	2672994	Identifier	align		2672461	0					
ANR	2672995	PrimaryExpression	0		2672461	1					
ANR	2672996	IdentifierDeclStatement	int size = ( ( given >> 10 ) & 0x3 ) ;	4253:3:180356:180388	2672461	5	True				
ANR	2672997	IdentifierDecl	size = ( ( given >> 10 ) & 0x3 )		2672461	0					
ANR	2672998	IdentifierDeclType	int		2672461	0					
ANR	2672999	Identifier	size		2672461	1					
ANR	2673000	AssignmentExpression	size = ( ( given >> 10 ) & 0x3 )		2672461	2		=			
ANR	2673001	Identifier	size		2672461	0					
ANR	2673002	BitAndExpression	( given >> 10 ) & 0x3		2672461	1		&			
ANR	2673003	ShiftExpression	given >> 10		2672461	0		>>			
ANR	2673004	Identifier	given		2672461	0					
ANR	2673005	PrimaryExpression	10		2672461	1					
ANR	2673006	PrimaryExpression	0x3		2672461	1					
ANR	2673007	IdentifierDeclStatement	int idx = idx_align >> ( size + 1 ) ;	4254:3:180393:180426	2672461	6	True				
ANR	2673008	IdentifierDecl	idx = idx_align >> ( size + 1 )		2672461	0					
ANR	2673009	IdentifierDeclType	int		2672461	0					
ANR	2673010	Identifier	idx		2672461	1					
ANR	2673011	AssignmentExpression	idx = idx_align >> ( size + 1 )		2672461	2		=			
ANR	2673012	Identifier	idx		2672461	0					
ANR	2673013	ShiftExpression	idx_align >> ( size + 1 )		2672461	1		>>			
ANR	2673014	Identifier	idx_align		2672461	0					
ANR	2673015	AdditiveExpression	size + 1		2672461	1		+			
ANR	2673016	Identifier	size		2672461	0					
ANR	2673017	PrimaryExpression	1		2672461	1					
ANR	2673018	IdentifierDeclStatement	int length = ( ( given >> 8 ) & 3 ) + 1 ;	4255:24:180452:180487	2672461	7	True				
ANR	2673019	IdentifierDecl	length = ( ( given >> 8 ) & 3 ) + 1		2672461	0					
ANR	2673020	IdentifierDeclType	int		2672461	0					
ANR	2673021	Identifier	length		2672461	1					
ANR	2673022	AssignmentExpression	length = ( ( given >> 8 ) & 3 ) + 1		2672461	2		=			
ANR	2673023	Identifier	length		2672461	0					
ANR	2673024	AdditiveExpression	( ( given >> 8 ) & 3 ) + 1		2672461	1		+			
ANR	2673025	BitAndExpression	( given >> 8 ) & 3		2672461	0		&			
ANR	2673026	ShiftExpression	given >> 8		2672461	0		>>			
ANR	2673027	Identifier	given		2672461	0					
ANR	2673028	PrimaryExpression	8		2672461	1					
ANR	2673029	PrimaryExpression	3		2672461	1					
ANR	2673030	PrimaryExpression	1		2672461	1					
ANR	2673031	IdentifierDeclStatement	int stride = 1 ;	4256:24:180513:180527	2672461	8	True				
ANR	2673032	IdentifierDecl	stride = 1		2672461	0					
ANR	2673033	IdentifierDeclType	int		2672461	0					
ANR	2673034	Identifier	stride		2672461	1					
ANR	2673035	AssignmentExpression	stride = 1		2672461	2		=			
ANR	2673036	Identifier	stride		2672461	0					
ANR	2673037	PrimaryExpression	1		2672461	1					
ANR	2673038	IdentifierDeclStatement	int i ;	4257:24:180553:180558	2672461	9	True				
ANR	2673039	IdentifierDecl	i		2672461	0					
ANR	2673040	IdentifierDeclType	int		2672461	0					
ANR	2673041	Identifier	i		2672461	1					
ANR	2673042	IfStatement	if ( length > 1 && size > 0 )		2672461	10					
ANR	2673043	Condition	length > 1 && size > 0	4259:7:180568:180589	2672461	0	True				
ANR	2673044	AndExpression	length > 1 && size > 0		2672461	0		&&			
ANR	2673045	RelationalExpression	length > 1		2672461	0		>			
ANR	2673046	Identifier	length		2672461	0					
ANR	2673047	PrimaryExpression	1		2672461	1					
ANR	2673048	RelationalExpression	size > 0		2672461	1		>			
ANR	2673049	Identifier	size		2672461	0					
ANR	2673050	PrimaryExpression	0		2672461	1					
ANR	2673051	CompoundStatement		117:31:2797:2797	2672461	1					
ANR	2673052	ExpressionStatement	stride = ( idx_align & ( 1 << size ) ) ? 2 : 1	4260:4:180598:180640	2672461	0	True				
ANR	2673053	AssignmentExpression	stride = ( idx_align & ( 1 << size ) ) ? 2 : 1		2672461	0		=			
ANR	2673054	Identifier	stride		2672461	0					
ANR	2673055	ConditionalExpression	( idx_align & ( 1 << size ) ) ? 2 : 1		2672461	1					
ANR	2673056	Condition	idx_align & ( 1 << size )		2672461	0					
ANR	2673057	BitAndExpression	idx_align & ( 1 << size )		2672461	0		&			
ANR	2673058	Identifier	idx_align		2672461	0					
ANR	2673059	ShiftExpression	1 << size		2672461	1		<<			
ANR	2673060	PrimaryExpression	1		2672461	0					
ANR	2673061	Identifier	size		2672461	1					
ANR	2673062	PrimaryExpression	2		2672461	1					
ANR	2673063	PrimaryExpression	1		2672461	2					
ANR	2673064	SwitchStatement	switch ( length )		2672461	11					
ANR	2673065	Condition	length	4263:11:180659:180664	2672461	0	True				
ANR	2673066	Identifier	length		2672461	0					
ANR	2673067	CompoundStatement		122:26:2898:2898	2672461	1					
ANR	2673068	Label	case 1 :	4265:26:180721:180727	2672461	0	True				
ANR	2673069	CompoundStatement		125:30:2994:3021	2672461	1					
ANR	2673070	IdentifierDeclStatement	int amask = ( 1 << size ) - 1 ;	4267:30:180789:180816	2672461	0	True				
ANR	2673071	IdentifierDecl	amask = ( 1 << size ) - 1		2672461	0					
ANR	2673072	IdentifierDeclType	int		2672461	0					
ANR	2673073	Identifier	amask		2672461	1					
ANR	2673074	AssignmentExpression	amask = ( 1 << size ) - 1		2672461	2		=			
ANR	2673075	Identifier	amask		2672461	0					
ANR	2673076	AdditiveExpression	( 1 << size ) - 1		2672461	1		-			
ANR	2673077	ShiftExpression	1 << size		2672461	0		<<			
ANR	2673078	PrimaryExpression	1		2672461	0					
ANR	2673079	Identifier	size		2672461	1					
ANR	2673080	PrimaryExpression	1		2672461	1					
ANR	2673081	IfStatement	if ( ( idx_align & ( 1 << size ) ) != 0 )		2672461	1					
ANR	2673082	Condition	( idx_align & ( 1 << size ) ) != 0	4268:13:180831:180860	2672461	0	True				
ANR	2673083	EqualityExpression	( idx_align & ( 1 << size ) ) != 0		2672461	0		!=			
ANR	2673084	BitAndExpression	idx_align & ( 1 << size )		2672461	0		&			
ANR	2673085	Identifier	idx_align		2672461	0					
ANR	2673086	ShiftExpression	1 << size		2672461	1		<<			
ANR	2673087	PrimaryExpression	1		2672461	0					
ANR	2673088	Identifier	size		2672461	1					
ANR	2673089	PrimaryExpression	0		2672461	1					
ANR	2673090	CompoundStatement		126:45:3068:3068	2672461	1					
ANR	2673091	ReturnStatement	return FALSE ;	4269:10:180875:180887	2672461	0	True				
ANR	2673092	Identifier	FALSE		2672461	0					
ANR	2673093	IfStatement	if ( size > 0 )		2672461	2					
ANR	2673094	Condition	size > 0	4271:13:180913:180920	2672461	0	True				
ANR	2673095	RelationalExpression	size > 0		2672461	0		>			
ANR	2673096	Identifier	size		2672461	0					
ANR	2673097	PrimaryExpression	0		2672461	1					
ANR	2673098	CompoundStatement		130:32:3160:3160	2672461	1					
ANR	2673099	IfStatement	if ( ( idx_align & amask ) == amask )		2672461	0					
ANR	2673100	Condition	( idx_align & amask ) == amask	4273:14:180971:180998	2672461	0	True				
ANR	2673101	EqualityExpression	( idx_align & amask ) == amask		2672461	0		==			
ANR	2673102	BitAndExpression	idx_align & amask		2672461	0		&			
ANR	2673103	Identifier	idx_align		2672461	0					
ANR	2673104	Identifier	amask		2672461	1					
ANR	2673105	Identifier	amask		2672461	1					
ANR	2673106	CompoundStatement		131:44:3206:3206	2672461	1					
ANR	2673107	ExpressionStatement	align = 8 << size	4274:11:181014:181031	2672461	0	True				
ANR	2673108	AssignmentExpression	align = 8 << size		2672461	0		=			
ANR	2673109	Identifier	align		2672461	0					
ANR	2673110	ShiftExpression	8 << size		2672461	1		<<			
ANR	2673111	PrimaryExpression	8		2672461	0					
ANR	2673112	Identifier	size		2672461	1					
ANR	2673113	ElseStatement	else		2672461	0					
ANR	2673114	IfStatement	if ( ( idx_align & amask ) != 0 )		2672461	0					
ANR	2673115	Condition	( idx_align & amask ) != 0	4275:21:181054:181077	2672461	0	True				
ANR	2673116	EqualityExpression	( idx_align & amask ) != 0		2672461	0		!=			
ANR	2673117	BitAndExpression	idx_align & amask		2672461	0		&			
ANR	2673118	Identifier	idx_align		2672461	0					
ANR	2673119	Identifier	amask		2672461	1					
ANR	2673120	PrimaryExpression	0		2672461	1					
ANR	2673121	CompoundStatement		133:47:3285:3285	2672461	1					
ANR	2673122	ReturnStatement	return FALSE ;	4276:11:181093:181105	2672461	0	True				
ANR	2673123	Identifier	FALSE		2672461	0					
ANR	2673124	BreakStatement	break ;	4280:28:181185:181190	2672461	2	True				
ANR	2673125	Label	case 2 :	4282:26:181219:181225	2672461	3	True				
ANR	2673126	IfStatement	if ( size == 2 && ( idx_align & 2 ) != 0 )		2672461	4					
ANR	2673127	Condition	size == 2 && ( idx_align & 2 ) != 0	4283:10:181237:181269	2672461	0	True				
ANR	2673128	AndExpression	size == 2 && ( idx_align & 2 ) != 0		2672461	0		&&			
ANR	2673129	EqualityExpression	size == 2		2672461	0		==			
ANR	2673130	Identifier	size		2672461	0					
ANR	2673131	PrimaryExpression	2		2672461	1					
ANR	2673132	EqualityExpression	( idx_align & 2 ) != 0		2672461	1		!=			
ANR	2673133	BitAndExpression	idx_align & 2		2672461	0		&			
ANR	2673134	Identifier	idx_align		2672461	0					
ANR	2673135	PrimaryExpression	2		2672461	1					
ANR	2673136	PrimaryExpression	0		2672461	1					
ANR	2673137	CompoundStatement		141:45:3477:3477	2672461	1					
ANR	2673138	ReturnStatement	return FALSE ;	4284:7:181281:181293	2672461	0	True				
ANR	2673139	Identifier	FALSE		2672461	0					
ANR	2673140	ExpressionStatement	align = ( idx_align & 1 ) ? 16 << size : 0	4286:6:181309:181349	2672461	5	True				
ANR	2673141	AssignmentExpression	align = ( idx_align & 1 ) ? 16 << size : 0		2672461	0		=			
ANR	2673142	Identifier	align		2672461	0					
ANR	2673143	ConditionalExpression	( idx_align & 1 ) ? 16 << size : 0		2672461	1					
ANR	2673144	Condition	idx_align & 1		2672461	0					
ANR	2673145	BitAndExpression	idx_align & 1		2672461	0		&			
ANR	2673146	Identifier	idx_align		2672461	0					
ANR	2673147	PrimaryExpression	1		2672461	1					
ANR	2673148	ShiftExpression	16 << size		2672461	1		<<			
ANR	2673149	PrimaryExpression	16		2672461	0					
ANR	2673150	Identifier	size		2672461	1					
ANR	2673151	PrimaryExpression	0		2672461	2					
ANR	2673152	BreakStatement	break ;	4287:6:181357:181362	2672461	6	True				
ANR	2673153	Label	case 3 :	4289:26:181391:181397	2672461	7	True				
ANR	2673154	IfStatement	if ( ( size == 2 && ( idx_align & 3 ) != 0 ) || ( idx_align & 1 ) != 0 )		2672461	8					
ANR	2673155	Condition	( size == 2 && ( idx_align & 3 ) != 0 ) || ( idx_align & 1 ) != 0	4290:10:181409:181467	2672461	0	True				
ANR	2673156	OrExpression	( size == 2 && ( idx_align & 3 ) != 0 ) || ( idx_align & 1 ) != 0		2672461	0		||			
ANR	2673157	AndExpression	size == 2 && ( idx_align & 3 ) != 0		2672461	0		&&			
ANR	2673158	EqualityExpression	size == 2		2672461	0		==			
ANR	2673159	Identifier	size		2672461	0					
ANR	2673160	PrimaryExpression	2		2672461	1					
ANR	2673161	EqualityExpression	( idx_align & 3 ) != 0		2672461	1		!=			
ANR	2673162	BitAndExpression	idx_align & 3		2672461	0		&			
ANR	2673163	Identifier	idx_align		2672461	0					
ANR	2673164	PrimaryExpression	3		2672461	1					
ANR	2673165	PrimaryExpression	0		2672461	1					
ANR	2673166	EqualityExpression	( idx_align & 1 ) != 0		2672461	1		!=			
ANR	2673167	BitAndExpression	idx_align & 1		2672461	0		&			
ANR	2673168	Identifier	idx_align		2672461	0					
ANR	2673169	PrimaryExpression	1		2672461	1					
ANR	2673170	PrimaryExpression	0		2672461	1					
ANR	2673171	CompoundStatement		148:71:3675:3675	2672461	1					
ANR	2673172	ReturnStatement	return FALSE ;	4291:7:181479:181491	2672461	0	True				
ANR	2673173	Identifier	FALSE		2672461	0					
ANR	2673174	BreakStatement	break ;	4293:6:181507:181512	2672461	9	True				
ANR	2673175	Label	case 4 :	4295:26:181541:181547	2672461	10	True				
ANR	2673176	IfStatement	if ( size == 2 )		2672461	11					
ANR	2673177	Condition	size == 2	4296:32:181581:181589	2672461	0	True				
ANR	2673178	EqualityExpression	size == 2		2672461	0		==			
ANR	2673179	Identifier	size		2672461	0					
ANR	2673180	PrimaryExpression	2		2672461	1					
ANR	2673181	CompoundStatement		155:30:3827:3827	2672461	1					
ANR	2673182	IfStatement	if ( ( idx_align & 3 ) == 3 )		2672461	0					
ANR	2673183	Condition	( idx_align & 3 ) == 3	4298:12:181636:181655	2672461	0	True				
ANR	2673184	EqualityExpression	( idx_align & 3 ) == 3		2672461	0		==			
ANR	2673185	BitAndExpression	idx_align & 3		2672461	0		&			
ANR	2673186	Identifier	idx_align		2672461	0					
ANR	2673187	PrimaryExpression	3		2672461	1					
ANR	2673188	PrimaryExpression	3		2672461	1					
ANR	2673189	CompoundStatement		156:34:3863:3863	2672461	1					
ANR	2673190	ReturnStatement	return FALSE ;	4299:9:181669:181681	2672461	0	True				
ANR	2673191	Identifier	FALSE		2672461	0					
ANR	2673192	ExpressionStatement	align = ( idx_align & 3 ) * 64	4301:8:181701:181729	2672461	1	True				
ANR	2673193	AssignmentExpression	align = ( idx_align & 3 ) * 64		2672461	0		=			
ANR	2673194	Identifier	align		2672461	0					
ANR	2673195	MultiplicativeExpression	( idx_align & 3 ) * 64		2672461	1		*			
ANR	2673196	BitAndExpression	idx_align & 3		2672461	0		&			
ANR	2673197	Identifier	idx_align		2672461	0					
ANR	2673198	PrimaryExpression	3		2672461	1					
ANR	2673199	PrimaryExpression	64		2672461	1					
ANR	2673200	ElseStatement	else		2672461	0					
ANR	2673201	CompoundStatement		160:14:3950:3950	2672461	0					
ANR	2673202	ExpressionStatement	align = ( idx_align & 1 ) ? 32 << size : 0	4303:8:181755:181795	2672461	0	True				
ANR	2673203	AssignmentExpression	align = ( idx_align & 1 ) ? 32 << size : 0		2672461	0		=			
ANR	2673204	Identifier	align		2672461	0					
ANR	2673205	ConditionalExpression	( idx_align & 1 ) ? 32 << size : 0		2672461	1					
ANR	2673206	Condition	idx_align & 1		2672461	0					
ANR	2673207	BitAndExpression	idx_align & 1		2672461	0		&			
ANR	2673208	Identifier	idx_align		2672461	0					
ANR	2673209	PrimaryExpression	1		2672461	1					
ANR	2673210	ShiftExpression	32 << size		2672461	1		<<			
ANR	2673211	PrimaryExpression	32		2672461	0					
ANR	2673212	Identifier	size		2672461	1					
ANR	2673213	PrimaryExpression	0		2672461	2					
ANR	2673214	BreakStatement	break ;	4305:7:181813:181818	2672461	12	True				
ANR	2673215	ExpressionStatement	"func ( stream , ""{"" )"	4308:3:181852:181870	2672461	12	True				
ANR	2673216	CallExpression	"func ( stream , ""{"" )"		2672461	0					
ANR	2673217	Callee	func		2672461	0					
ANR	2673218	Identifier	func		2672461	0					
ANR	2673219	ArgumentList	stream		2672461	1					
ANR	2673220	Argument	stream		2672461	0					
ANR	2673221	Identifier	stream		2672461	0					
ANR	2673222	Argument	"""{"""		2672461	1					
ANR	2673223	PrimaryExpression	"""{"""		2672461	0					
ANR	2673224	ForStatement	for ( i = 0 ; i < length ; i ++ )		2672461	13					
ANR	2673225	ForInit	i = 0 ;	4309:8:181880:181885	2672461	0	True				
ANR	2673226	AssignmentExpression	i = 0		2672461	0		=			
ANR	2673227	Identifier	i		2672461	0					
ANR	2673228	PrimaryExpression	0		2672461	1					
ANR	2673229	Condition	i < length	4309:15:181887:181896	2672461	1	True				
ANR	2673230	RelationalExpression	i < length		2672461	0		<			
ANR	2673231	Identifier	i		2672461	0					
ANR	2673232	Identifier	length		2672461	1					
ANR	2673233	PostIncDecOperationExpression	i ++	4309:27:181899:181901	2672461	2	True				
ANR	2673234	Identifier	i		2672461	0					
ANR	2673235	IncDec	++		2672461	1					
ANR	2673236	CompoundStatement		167:32:4109:4109	2672461	3					
ANR	2673237	ExpressionStatement	"func ( stream , ""%sd%d[%d]"" , ( i == 0 ) ? """" : "","" , rd + i * stride , idx )"	4310:4:181910:181984	2672461	0	True				
ANR	2673238	CallExpression	"func ( stream , ""%sd%d[%d]"" , ( i == 0 ) ? """" : "","" , rd + i * stride , idx )"		2672461	0					
ANR	2673239	Callee	func		2672461	0					
ANR	2673240	Identifier	func		2672461	0					
ANR	2673241	ArgumentList	stream		2672461	1					
ANR	2673242	Argument	stream		2672461	0					
ANR	2673243	Identifier	stream		2672461	0					
ANR	2673244	Argument	"""%sd%d[%d]"""		2672461	1					
ANR	2673245	PrimaryExpression	"""%sd%d[%d]"""		2672461	0					
ANR	2673246	Argument	"( i == 0 ) ? """" : "","""		2672461	2					
ANR	2673247	ConditionalExpression	"( i == 0 ) ? """" : "","""		2672461	0					
ANR	2673248	Condition	i == 0		2672461	0					
ANR	2673249	EqualityExpression	i == 0		2672461	0		==			
ANR	2673250	Identifier	i		2672461	0					
ANR	2673251	PrimaryExpression	0		2672461	1					
ANR	2673252	PrimaryExpression	""""""		2672461	1					
ANR	2673253	PrimaryExpression	""","""		2672461	2					
ANR	2673254	Argument	rd + i * stride		2672461	3					
ANR	2673255	AdditiveExpression	rd + i * stride		2672461	0		+			
ANR	2673256	Identifier	rd		2672461	0					
ANR	2673257	MultiplicativeExpression	i * stride		2672461	1		*			
ANR	2673258	Identifier	i		2672461	0					
ANR	2673259	Identifier	stride		2672461	1					
ANR	2673260	Argument	idx		2672461	4					
ANR	2673261	Identifier	idx		2672461	0					
ANR	2673262	ExpressionStatement	"func ( stream , ""}, [%s"" , arm_regnames [ rn ] )"	4313:3:181994:182035	2672461	14	True				
ANR	2673263	CallExpression	"func ( stream , ""}, [%s"" , arm_regnames [ rn ] )"		2672461	0					
ANR	2673264	Callee	func		2672461	0					
ANR	2673265	Identifier	func		2672461	0					
ANR	2673266	ArgumentList	stream		2672461	1					
ANR	2673267	Argument	stream		2672461	0					
ANR	2673268	Identifier	stream		2672461	0					
ANR	2673269	Argument	"""}, [%s"""		2672461	1					
ANR	2673270	PrimaryExpression	"""}, [%s"""		2672461	0					
ANR	2673271	Argument	arm_regnames [ rn ]		2672461	2					
ANR	2673272	ArrayIndexing	arm_regnames [ rn ]		2672461	0					
ANR	2673273	Identifier	arm_regnames		2672461	0					
ANR	2673274	Identifier	rn		2672461	1					
ANR	2673275	IfStatement	if ( align )		2672461	15					
ANR	2673276	Condition	align	4314:7:182044:182048	2672461	0	True				
ANR	2673277	Identifier	align		2672461	0					
ANR	2673278	CompoundStatement		172:14:4256:4256	2672461	1					
ANR	2673279	ExpressionStatement	"func ( stream , "" :%d"" , align )"	4315:4:182057:182085	2672461	0	True				
ANR	2673280	CallExpression	"func ( stream , "" :%d"" , align )"		2672461	0					
ANR	2673281	Callee	func		2672461	0					
ANR	2673282	Identifier	func		2672461	0					
ANR	2673283	ArgumentList	stream		2672461	1					
ANR	2673284	Argument	stream		2672461	0					
ANR	2673285	Identifier	stream		2672461	0					
ANR	2673286	Argument	""" :%d"""		2672461	1					
ANR	2673287	PrimaryExpression	""" :%d"""		2672461	0					
ANR	2673288	Argument	align		2672461	2					
ANR	2673289	Identifier	align		2672461	0					
ANR	2673290	ExpressionStatement	"func ( stream , ""]"" )"	4317:3:182095:182113	2672461	16	True				
ANR	2673291	CallExpression	"func ( stream , ""]"" )"		2672461	0					
ANR	2673292	Callee	func		2672461	0					
ANR	2673293	Identifier	func		2672461	0					
ANR	2673294	ArgumentList	stream		2672461	1					
ANR	2673295	Argument	stream		2672461	0					
ANR	2673296	Identifier	stream		2672461	0					
ANR	2673297	Argument	"""]"""		2672461	1					
ANR	2673298	PrimaryExpression	"""]"""		2672461	0					
ANR	2673299	IfStatement	if ( rm == 0xd )		2672461	17					
ANR	2673300	Condition	rm == 0xd	4318:7:182122:182130	2672461	0	True				
ANR	2673301	EqualityExpression	rm == 0xd		2672461	0		==			
ANR	2673302	Identifier	rm		2672461	0					
ANR	2673303	PrimaryExpression	0xd		2672461	1					
ANR	2673304	CompoundStatement		176:18:4338:4338	2672461	1					
ANR	2673305	ExpressionStatement	"func ( stream , ""!"" )"	4319:4:182139:182157	2672461	0	True				
ANR	2673306	CallExpression	"func ( stream , ""!"" )"		2672461	0					
ANR	2673307	Callee	func		2672461	0					
ANR	2673308	Identifier	func		2672461	0					
ANR	2673309	ArgumentList	stream		2672461	1					
ANR	2673310	Argument	stream		2672461	0					
ANR	2673311	Identifier	stream		2672461	0					
ANR	2673312	Argument	"""!"""		2672461	1					
ANR	2673313	PrimaryExpression	"""!"""		2672461	0					
ANR	2673314	ElseStatement	else		2672461	0					
ANR	2673315	IfStatement	if ( rm != 0xf )		2672461	0					
ANR	2673316	Condition	rm != 0xf	4320:14:182173:182181	2672461	0	True				
ANR	2673317	EqualityExpression	rm != 0xf		2672461	0		!=			
ANR	2673318	Identifier	rm		2672461	0					
ANR	2673319	PrimaryExpression	0xf		2672461	1					
ANR	2673320	CompoundStatement		178:25:4389:4389	2672461	1					
ANR	2673321	ExpressionStatement	"func ( stream , "", %s"" , arm_regnames [ rm ] )"	4321:4:182190:182229	2672461	0	True				
ANR	2673322	CallExpression	"func ( stream , "", %s"" , arm_regnames [ rm ] )"		2672461	0					
ANR	2673323	Callee	func		2672461	0					
ANR	2673324	Identifier	func		2672461	0					
ANR	2673325	ArgumentList	stream		2672461	1					
ANR	2673326	Argument	stream		2672461	0					
ANR	2673327	Identifier	stream		2672461	0					
ANR	2673328	Argument	""", %s"""		2672461	1					
ANR	2673329	PrimaryExpression	""", %s"""		2672461	0					
ANR	2673330	Argument	arm_regnames [ rm ]		2672461	2					
ANR	2673331	ArrayIndexing	arm_regnames [ rm ]		2672461	0					
ANR	2673332	Identifier	arm_regnames		2672461	0					
ANR	2673333	Identifier	rm		2672461	1					
ANR	2673334	BreakStatement	break ;	4324:8:182254:182259	2672461	13	True				
ANR	2673335	Label	case 'C' :	4326:6:182268:182276	2672461	14	True				
ANR	2673336	CompoundStatement		194:3:4797:4803	2672461	15					
ANR	2673337	IdentifierDeclStatement	int rd = ( ( given >> 12 ) & 0xf ) | ( ( ( given >> 22 ) & 1 ) << 4 ) ;	4328:3:182291:182350	2672461	0	True				
ANR	2673338	IdentifierDecl	rd = ( ( given >> 12 ) & 0xf ) | ( ( ( given >> 22 ) & 1 ) << 4 )		2672461	0					
ANR	2673339	IdentifierDeclType	int		2672461	0					
ANR	2673340	Identifier	rd		2672461	1					
ANR	2673341	AssignmentExpression	rd = ( ( given >> 12 ) & 0xf ) | ( ( ( given >> 22 ) & 1 ) << 4 )		2672461	2		=			
ANR	2673342	Identifier	rd		2672461	0					
ANR	2673343	InclusiveOrExpression	( ( given >> 12 ) & 0xf ) | ( ( ( given >> 22 ) & 1 ) << 4 )		2672461	1		|			
ANR	2673344	BitAndExpression	( given >> 12 ) & 0xf		2672461	0		&			
ANR	2673345	ShiftExpression	given >> 12		2672461	0		>>			
ANR	2673346	Identifier	given		2672461	0					
ANR	2673347	PrimaryExpression	12		2672461	1					
ANR	2673348	PrimaryExpression	0xf		2672461	1					
ANR	2673349	ShiftExpression	( ( given >> 22 ) & 1 ) << 4		2672461	1		<<			
ANR	2673350	BitAndExpression	( given >> 22 ) & 1		2672461	0		&			
ANR	2673351	ShiftExpression	given >> 22		2672461	0		>>			
ANR	2673352	Identifier	given		2672461	0					
ANR	2673353	PrimaryExpression	22		2672461	1					
ANR	2673354	PrimaryExpression	1		2672461	1					
ANR	2673355	PrimaryExpression	4		2672461	1					
ANR	2673356	IdentifierDeclStatement	int rn = ( ( given >> 16 ) & 0xf ) ;	4329:3:182355:182385	2672461	1	True				
ANR	2673357	IdentifierDecl	rn = ( ( given >> 16 ) & 0xf )		2672461	0					
ANR	2673358	IdentifierDeclType	int		2672461	0					
ANR	2673359	Identifier	rn		2672461	1					
ANR	2673360	AssignmentExpression	rn = ( ( given >> 16 ) & 0xf )		2672461	2		=			
ANR	2673361	Identifier	rn		2672461	0					
ANR	2673362	BitAndExpression	( given >> 16 ) & 0xf		2672461	1		&			
ANR	2673363	ShiftExpression	given >> 16		2672461	0		>>			
ANR	2673364	Identifier	given		2672461	0					
ANR	2673365	PrimaryExpression	16		2672461	1					
ANR	2673366	PrimaryExpression	0xf		2672461	1					
ANR	2673367	IdentifierDeclStatement	int rm = ( ( given >> 0 ) & 0xf ) ;	4330:3:182390:182419	2672461	2	True				
ANR	2673368	IdentifierDecl	rm = ( ( given >> 0 ) & 0xf )		2672461	0					
ANR	2673369	IdentifierDeclType	int		2672461	0					
ANR	2673370	Identifier	rm		2672461	1					
ANR	2673371	AssignmentExpression	rm = ( ( given >> 0 ) & 0xf )		2672461	2		=			
ANR	2673372	Identifier	rm		2672461	0					
ANR	2673373	BitAndExpression	( given >> 0 ) & 0xf		2672461	1		&			
ANR	2673374	ShiftExpression	given >> 0		2672461	0		>>			
ANR	2673375	Identifier	given		2672461	0					
ANR	2673376	PrimaryExpression	0		2672461	1					
ANR	2673377	PrimaryExpression	0xf		2672461	1					
ANR	2673378	IdentifierDeclStatement	int align = ( ( given >> 4 ) & 0x1 ) ;	4331:3:182424:182456	2672461	3	True				
ANR	2673379	IdentifierDecl	align = ( ( given >> 4 ) & 0x1 )		2672461	0					
ANR	2673380	IdentifierDeclType	int		2672461	0					
ANR	2673381	Identifier	align		2672461	1					
ANR	2673382	AssignmentExpression	align = ( ( given >> 4 ) & 0x1 )		2672461	2		=			
ANR	2673383	Identifier	align		2672461	0					
ANR	2673384	BitAndExpression	( given >> 4 ) & 0x1		2672461	1		&			
ANR	2673385	ShiftExpression	given >> 4		2672461	0		>>			
ANR	2673386	Identifier	given		2672461	0					
ANR	2673387	PrimaryExpression	4		2672461	1					
ANR	2673388	PrimaryExpression	0x1		2672461	1					
ANR	2673389	IdentifierDeclStatement	int size = ( ( given >> 6 ) & 0x3 ) ;	4332:3:182461:182492	2672461	4	True				
ANR	2673390	IdentifierDecl	size = ( ( given >> 6 ) & 0x3 )		2672461	0					
ANR	2673391	IdentifierDeclType	int		2672461	0					
ANR	2673392	Identifier	size		2672461	1					
ANR	2673393	AssignmentExpression	size = ( ( given >> 6 ) & 0x3 )		2672461	2		=			
ANR	2673394	Identifier	size		2672461	0					
ANR	2673395	BitAndExpression	( given >> 6 ) & 0x3		2672461	1		&			
ANR	2673396	ShiftExpression	given >> 6		2672461	0		>>			
ANR	2673397	Identifier	given		2672461	0					
ANR	2673398	PrimaryExpression	6		2672461	1					
ANR	2673399	PrimaryExpression	0x3		2672461	1					
ANR	2673400	IdentifierDeclStatement	int type = ( ( given >> 8 ) & 0x3 ) ;	4333:3:182497:182528	2672461	5	True				
ANR	2673401	IdentifierDecl	type = ( ( given >> 8 ) & 0x3 )		2672461	0					
ANR	2673402	IdentifierDeclType	int		2672461	0					
ANR	2673403	Identifier	type		2672461	1					
ANR	2673404	AssignmentExpression	type = ( ( given >> 8 ) & 0x3 )		2672461	2		=			
ANR	2673405	Identifier	type		2672461	0					
ANR	2673406	BitAndExpression	( given >> 8 ) & 0x3		2672461	1		&			
ANR	2673407	ShiftExpression	given >> 8		2672461	0		>>			
ANR	2673408	Identifier	given		2672461	0					
ANR	2673409	PrimaryExpression	8		2672461	1					
ANR	2673410	PrimaryExpression	0x3		2672461	1					
ANR	2673411	IdentifierDeclStatement	int n = type + 1 ;	4334:3:182533:182549	2672461	6	True				
ANR	2673412	IdentifierDecl	n = type + 1		2672461	0					
ANR	2673413	IdentifierDeclType	int		2672461	0					
ANR	2673414	Identifier	n		2672461	1					
ANR	2673415	AssignmentExpression	n = type + 1		2672461	2		=			
ANR	2673416	Identifier	n		2672461	0					
ANR	2673417	AdditiveExpression	type + 1		2672461	1		+			
ANR	2673418	Identifier	type		2672461	0					
ANR	2673419	PrimaryExpression	1		2672461	1					
ANR	2673420	IdentifierDeclStatement	int stride = ( ( given >> 5 ) & 0x1 ) ;	4335:3:182554:182587	2672461	7	True				
ANR	2673421	IdentifierDecl	stride = ( ( given >> 5 ) & 0x1 )		2672461	0					
ANR	2673422	IdentifierDeclType	int		2672461	0					
ANR	2673423	Identifier	stride		2672461	1					
ANR	2673424	AssignmentExpression	stride = ( ( given >> 5 ) & 0x1 )		2672461	2		=			
ANR	2673425	Identifier	stride		2672461	0					
ANR	2673426	BitAndExpression	( given >> 5 ) & 0x1		2672461	1		&			
ANR	2673427	ShiftExpression	given >> 5		2672461	0		>>			
ANR	2673428	Identifier	given		2672461	0					
ANR	2673429	PrimaryExpression	5		2672461	1					
ANR	2673430	PrimaryExpression	0x1		2672461	1					
ANR	2673431	IdentifierDeclStatement	int ix ;	4336:3:182592:182598	2672461	8	True				
ANR	2673432	IdentifierDecl	ix		2672461	0					
ANR	2673433	IdentifierDeclType	int		2672461	0					
ANR	2673434	Identifier	ix		2672461	1					
ANR	2673435	IfStatement	if ( stride && ( n == 1 ) )		2672461	9					
ANR	2673436	Condition	stride && ( n == 1 )	4338:7:182608:182625	2672461	0	True				
ANR	2673437	AndExpression	stride && ( n == 1 )		2672461	0		&&			
ANR	2673438	Identifier	stride		2672461	0					
ANR	2673439	EqualityExpression	n == 1		2672461	1		==			
ANR	2673440	Identifier	n		2672461	0					
ANR	2673441	PrimaryExpression	1		2672461	1					
ANR	2673442	CompoundStatement		196:27:4833:4833	2672461	1					
ANR	2673443	ExpressionStatement	n ++	4339:4:182634:182637	2672461	0	True				
ANR	2673444	PostIncDecOperationExpression	n ++		2672461	0					
ANR	2673445	Identifier	n		2672461	0					
ANR	2673446	IncDec	++		2672461	1					
ANR	2673447	ElseStatement	else		2672461	0					
ANR	2673448	CompoundStatement		198:10:4854:4854	2672461	0					
ANR	2673449	ExpressionStatement	stride ++	4341:4:182655:182663	2672461	0	True				
ANR	2673450	PostIncDecOperationExpression	stride ++		2672461	0					
ANR	2673451	Identifier	stride		2672461	0					
ANR	2673452	IncDec	++		2672461	1					
ANR	2673453	ExpressionStatement	"func ( stream , ""{"" )"	4344:3:182674:182692	2672461	10	True				
ANR	2673454	CallExpression	"func ( stream , ""{"" )"		2672461	0					
ANR	2673455	Callee	func		2672461	0					
ANR	2673456	Identifier	func		2672461	0					
ANR	2673457	ArgumentList	stream		2672461	1					
ANR	2673458	Argument	stream		2672461	0					
ANR	2673459	Identifier	stream		2672461	0					
ANR	2673460	Argument	"""{"""		2672461	1					
ANR	2673461	PrimaryExpression	"""{"""		2672461	0					
ANR	2673462	IfStatement	if ( stride > 1 )		2672461	11					
ANR	2673463	Condition	stride > 1	4345:7:182701:182710	2672461	0	True				
ANR	2673464	RelationalExpression	stride > 1		2672461	0		>			
ANR	2673465	Identifier	stride		2672461	0					
ANR	2673466	PrimaryExpression	1		2672461	1					
ANR	2673467	CompoundStatement		203:19:4918:4918	2672461	1					
ANR	2673468	ForStatement	for ( ix = 0 ; ix != n ; ix ++ )		2672461	0					
ANR	2673469	ForInit	ix = 0 ;	4346:9:182724:182730	2672461	0	True				
ANR	2673470	AssignmentExpression	ix = 0		2672461	0		=			
ANR	2673471	Identifier	ix		2672461	0					
ANR	2673472	PrimaryExpression	0		2672461	1					
ANR	2673473	Condition	ix != n	4346:17:182732:182738	2672461	1	True				
ANR	2673474	EqualityExpression	ix != n		2672461	0		!=			
ANR	2673475	Identifier	ix		2672461	0					
ANR	2673476	Identifier	n		2672461	1					
ANR	2673477	PostIncDecOperationExpression	ix ++	4346:26:182741:182744	2672461	2	True				
ANR	2673478	Identifier	ix		2672461	0					
ANR	2673479	IncDec	++		2672461	1					
ANR	2673480	CompoundStatement		204:32:4952:4952	2672461	3					
ANR	2673481	ExpressionStatement	"func ( stream , ""%sd%d[]"" , ix ? "","" : """" , rd + ix * stride )"	4347:5:182754:182811	2672461	0	True				
ANR	2673482	CallExpression	"func ( stream , ""%sd%d[]"" , ix ? "","" : """" , rd + ix * stride )"		2672461	0					
ANR	2673483	Callee	func		2672461	0					
ANR	2673484	Identifier	func		2672461	0					
ANR	2673485	ArgumentList	stream		2672461	1					
ANR	2673486	Argument	stream		2672461	0					
ANR	2673487	Identifier	stream		2672461	0					
ANR	2673488	Argument	"""%sd%d[]"""		2672461	1					
ANR	2673489	PrimaryExpression	"""%sd%d[]"""		2672461	0					
ANR	2673490	Argument	"ix ? "","" : """""		2672461	2					
ANR	2673491	ConditionalExpression	"ix ? "","" : """""		2672461	0					
ANR	2673492	Condition	ix		2672461	0					
ANR	2673493	Identifier	ix		2672461	0					
ANR	2673494	PrimaryExpression	""","""		2672461	1					
ANR	2673495	PrimaryExpression	""""""		2672461	2					
ANR	2673496	Argument	rd + ix * stride		2672461	3					
ANR	2673497	AdditiveExpression	rd + ix * stride		2672461	0		+			
ANR	2673498	Identifier	rd		2672461	0					
ANR	2673499	MultiplicativeExpression	ix * stride		2672461	1		*			
ANR	2673500	Identifier	ix		2672461	0					
ANR	2673501	Identifier	stride		2672461	1					
ANR	2673502	ElseStatement	else		2672461	0					
ANR	2673503	IfStatement	if ( n == 1 )		2672461	0					
ANR	2673504	Condition	n == 1	4349:14:182833:182838	2672461	0	True				
ANR	2673505	EqualityExpression	n == 1		2672461	0		==			
ANR	2673506	Identifier	n		2672461	0					
ANR	2673507	PrimaryExpression	1		2672461	1					
ANR	2673508	CompoundStatement		207:22:5046:5046	2672461	1					
ANR	2673509	ExpressionStatement	"func ( stream , ""d%d[]"" , rd )"	4350:4:182847:182873	2672461	0	True				
ANR	2673510	CallExpression	"func ( stream , ""d%d[]"" , rd )"		2672461	0					
ANR	2673511	Callee	func		2672461	0					
ANR	2673512	Identifier	func		2672461	0					
ANR	2673513	ArgumentList	stream		2672461	1					
ANR	2673514	Argument	stream		2672461	0					
ANR	2673515	Identifier	stream		2672461	0					
ANR	2673516	Argument	"""d%d[]"""		2672461	1					
ANR	2673517	PrimaryExpression	"""d%d[]"""		2672461	0					
ANR	2673518	Argument	rd		2672461	2					
ANR	2673519	Identifier	rd		2672461	0					
ANR	2673520	ElseStatement	else		2672461	0					
ANR	2673521	CompoundStatement		209:10:5090:5090	2672461	0					
ANR	2673522	ExpressionStatement	"func ( stream , ""d%d[]-d%d[]"" , rd , rd + n - 1 )"	4352:4:182891:182935	2672461	0	True				
ANR	2673523	CallExpression	"func ( stream , ""d%d[]-d%d[]"" , rd , rd + n - 1 )"		2672461	0					
ANR	2673524	Callee	func		2672461	0					
ANR	2673525	Identifier	func		2672461	0					
ANR	2673526	ArgumentList	stream		2672461	1					
ANR	2673527	Argument	stream		2672461	0					
ANR	2673528	Identifier	stream		2672461	0					
ANR	2673529	Argument	"""d%d[]-d%d[]"""		2672461	1					
ANR	2673530	PrimaryExpression	"""d%d[]-d%d[]"""		2672461	0					
ANR	2673531	Argument	rd		2672461	2					
ANR	2673532	Identifier	rd		2672461	0					
ANR	2673533	Argument	rd + n - 1		2672461	3					
ANR	2673534	AdditiveExpression	rd + n - 1		2672461	0		+			
ANR	2673535	Identifier	rd		2672461	0					
ANR	2673536	AdditiveExpression	n - 1		2672461	1		-			
ANR	2673537	Identifier	n		2672461	0					
ANR	2673538	PrimaryExpression	1		2672461	1					
ANR	2673539	ExpressionStatement	"func ( stream , ""}, [%s"" , arm_regnames [ rn ] )"	4354:3:182945:182986	2672461	12	True				
ANR	2673540	CallExpression	"func ( stream , ""}, [%s"" , arm_regnames [ rn ] )"		2672461	0					
ANR	2673541	Callee	func		2672461	0					
ANR	2673542	Identifier	func		2672461	0					
ANR	2673543	ArgumentList	stream		2672461	1					
ANR	2673544	Argument	stream		2672461	0					
ANR	2673545	Identifier	stream		2672461	0					
ANR	2673546	Argument	"""}, [%s"""		2672461	1					
ANR	2673547	PrimaryExpression	"""}, [%s"""		2672461	0					
ANR	2673548	Argument	arm_regnames [ rn ]		2672461	2					
ANR	2673549	ArrayIndexing	arm_regnames [ rn ]		2672461	0					
ANR	2673550	Identifier	arm_regnames		2672461	0					
ANR	2673551	Identifier	rn		2672461	1					
ANR	2673552	IfStatement	if ( align )		2672461	13					
ANR	2673553	Condition	align	4355:7:182995:182999	2672461	0	True				
ANR	2673554	Identifier	align		2672461	0					
ANR	2673555	CompoundStatement		214:5:5212:5212	2672461	1					
ANR	2673556	ExpressionStatement	align = ( 8 * ( type + 1 ) ) << size	4357:28:183037:183069	2672461	0	True				
ANR	2673557	AssignmentExpression	align = ( 8 * ( type + 1 ) ) << size		2672461	0		=			
ANR	2673558	Identifier	align		2672461	0					
ANR	2673559	ShiftExpression	( 8 * ( type + 1 ) ) << size		2672461	1		<<			
ANR	2673560	MultiplicativeExpression	8 * ( type + 1 )		2672461	0		*			
ANR	2673561	PrimaryExpression	8		2672461	0					
ANR	2673562	AdditiveExpression	type + 1		2672461	1		+			
ANR	2673563	Identifier	type		2672461	0					
ANR	2673564	PrimaryExpression	1		2672461	1					
ANR	2673565	Identifier	size		2672461	1					
ANR	2673566	IfStatement	if ( type == 3 )		2672461	1					
ANR	2673567	Condition	type == 3	4358:11:183082:183090	2672461	0	True				
ANR	2673568	EqualityExpression	type == 3		2672461	0		==			
ANR	2673569	Identifier	type		2672461	0					
ANR	2673570	PrimaryExpression	3		2672461	1					
ANR	2673571	CompoundStatement		216:22:5298:5298	2672461	1					
ANR	2673572	ExpressionStatement	align = ( size > 1 ) ? align >> 1 : align	4359:8:183103:183142	2672461	0	True				
ANR	2673573	AssignmentExpression	align = ( size > 1 ) ? align >> 1 : align		2672461	0		=			
ANR	2673574	Identifier	align		2672461	0					
ANR	2673575	ConditionalExpression	( size > 1 ) ? align >> 1 : align		2672461	1					
ANR	2673576	Condition	size > 1		2672461	0					
ANR	2673577	RelationalExpression	size > 1		2672461	0		>			
ANR	2673578	Identifier	size		2672461	0					
ANR	2673579	PrimaryExpression	1		2672461	1					
ANR	2673580	ShiftExpression	align >> 1		2672461	1		>>			
ANR	2673581	Identifier	align		2672461	0					
ANR	2673582	PrimaryExpression	1		2672461	1					
ANR	2673583	Identifier	align		2672461	2					
ANR	2673584	IfStatement	if ( type == 2 || ( type == 0 && ! size ) )		2672461	2					
ANR	2673585	Condition	type == 2 || ( type == 0 && ! size )	4361:11:183164:183196	2672461	0	True				
ANR	2673586	OrExpression	type == 2 || ( type == 0 && ! size )		2672461	0		||			
ANR	2673587	EqualityExpression	type == 2		2672461	0		==			
ANR	2673588	Identifier	type		2672461	0					
ANR	2673589	PrimaryExpression	2		2672461	1					
ANR	2673590	AndExpression	type == 0 && ! size		2672461	1		&&			
ANR	2673591	EqualityExpression	type == 0		2672461	0		==			
ANR	2673592	Identifier	type		2672461	0					
ANR	2673593	PrimaryExpression	0		2672461	1					
ANR	2673594	UnaryOperationExpression	! size		2672461	1					
ANR	2673595	UnaryOperator	!		2672461	0					
ANR	2673596	Identifier	size		2672461	1					
ANR	2673597	CompoundStatement		219:46:5404:5404	2672461	1					
ANR	2673598	ExpressionStatement	"func ( stream , "" :<bad align %d>"" , align )"	4362:8:183209:183249	2672461	0	True				
ANR	2673599	CallExpression	"func ( stream , "" :<bad align %d>"" , align )"		2672461	0					
ANR	2673600	Callee	func		2672461	0					
ANR	2673601	Identifier	func		2672461	0					
ANR	2673602	ArgumentList	stream		2672461	1					
ANR	2673603	Argument	stream		2672461	0					
ANR	2673604	Identifier	stream		2672461	0					
ANR	2673605	Argument	""" :<bad align %d>"""		2672461	1					
ANR	2673606	PrimaryExpression	""" :<bad align %d>"""		2672461	0					
ANR	2673607	Argument	align		2672461	2					
ANR	2673608	Identifier	align		2672461	0					
ANR	2673609	ElseStatement	else		2672461	0					
ANR	2673610	CompoundStatement		221:14:5470:5470	2672461	0					
ANR	2673611	ExpressionStatement	"func ( stream , "" :%d"" , align )"	4364:8:183275:183303	2672461	0	True				
ANR	2673612	CallExpression	"func ( stream , "" :%d"" , align )"		2672461	0					
ANR	2673613	Callee	func		2672461	0					
ANR	2673614	Identifier	func		2672461	0					
ANR	2673615	ArgumentList	stream		2672461	1					
ANR	2673616	Argument	stream		2672461	0					
ANR	2673617	Identifier	stream		2672461	0					
ANR	2673618	Argument	""" :%d"""		2672461	1					
ANR	2673619	PrimaryExpression	""" :%d"""		2672461	0					
ANR	2673620	Argument	align		2672461	2					
ANR	2673621	Identifier	align		2672461	0					
ANR	2673622	ExpressionStatement	"func ( stream , ""]"" )"	4367:3:183324:183342	2672461	14	True				
ANR	2673623	CallExpression	"func ( stream , ""]"" )"		2672461	0					
ANR	2673624	Callee	func		2672461	0					
ANR	2673625	Identifier	func		2672461	0					
ANR	2673626	ArgumentList	stream		2672461	1					
ANR	2673627	Argument	stream		2672461	0					
ANR	2673628	Identifier	stream		2672461	0					
ANR	2673629	Argument	"""]"""		2672461	1					
ANR	2673630	PrimaryExpression	"""]"""		2672461	0					
ANR	2673631	IfStatement	if ( rm == 0xd )		2672461	15					
ANR	2673632	Condition	rm == 0xd	4368:7:183351:183359	2672461	0	True				
ANR	2673633	EqualityExpression	rm == 0xd		2672461	0		==			
ANR	2673634	Identifier	rm		2672461	0					
ANR	2673635	PrimaryExpression	0xd		2672461	1					
ANR	2673636	CompoundStatement		226:18:5567:5567	2672461	1					
ANR	2673637	ExpressionStatement	"func ( stream , ""!"" )"	4369:4:183368:183386	2672461	0	True				
ANR	2673638	CallExpression	"func ( stream , ""!"" )"		2672461	0					
ANR	2673639	Callee	func		2672461	0					
ANR	2673640	Identifier	func		2672461	0					
ANR	2673641	ArgumentList	stream		2672461	1					
ANR	2673642	Argument	stream		2672461	0					
ANR	2673643	Identifier	stream		2672461	0					
ANR	2673644	Argument	"""!"""		2672461	1					
ANR	2673645	PrimaryExpression	"""!"""		2672461	0					
ANR	2673646	ElseStatement	else		2672461	0					
ANR	2673647	IfStatement	if ( rm != 0xf )		2672461	0					
ANR	2673648	Condition	rm != 0xf	4370:14:183402:183410	2672461	0	True				
ANR	2673649	EqualityExpression	rm != 0xf		2672461	0		!=			
ANR	2673650	Identifier	rm		2672461	0					
ANR	2673651	PrimaryExpression	0xf		2672461	1					
ANR	2673652	CompoundStatement		228:25:5618:5618	2672461	1					
ANR	2673653	ExpressionStatement	"func ( stream , "", %s"" , arm_regnames [ rm ] )"	4371:4:183419:183458	2672461	0	True				
ANR	2673654	CallExpression	"func ( stream , "", %s"" , arm_regnames [ rm ] )"		2672461	0					
ANR	2673655	Callee	func		2672461	0					
ANR	2673656	Identifier	func		2672461	0					
ANR	2673657	ArgumentList	stream		2672461	1					
ANR	2673658	Argument	stream		2672461	0					
ANR	2673659	Identifier	stream		2672461	0					
ANR	2673660	Argument	""", %s"""		2672461	1					
ANR	2673661	PrimaryExpression	""", %s"""		2672461	0					
ANR	2673662	Argument	arm_regnames [ rm ]		2672461	2					
ANR	2673663	ArrayIndexing	arm_regnames [ rm ]		2672461	0					
ANR	2673664	Identifier	arm_regnames		2672461	0					
ANR	2673665	Identifier	rm		2672461	1					
ANR	2673666	BreakStatement	break ;	4374:8:183483:183488	2672461	16	True				
ANR	2673667	Label	case 'D' :	4376:6:183497:183505	2672461	17	True				
ANR	2673668	CompoundStatement		239:3:5856:5885	2672461	18					
ANR	2673669	IdentifierDeclStatement	int raw_reg = ( given & 0xf ) | ( ( given >> 1 ) & 0x10 ) ;	4378:3:183520:183571	2672461	0	True				
ANR	2673670	IdentifierDecl	raw_reg = ( given & 0xf ) | ( ( given >> 1 ) & 0x10 )		2672461	0					
ANR	2673671	IdentifierDeclType	int		2672461	0					
ANR	2673672	Identifier	raw_reg		2672461	1					
ANR	2673673	AssignmentExpression	raw_reg = ( given & 0xf ) | ( ( given >> 1 ) & 0x10 )		2672461	2		=			
ANR	2673674	Identifier	raw_reg		2672461	0					
ANR	2673675	InclusiveOrExpression	( given & 0xf ) | ( ( given >> 1 ) & 0x10 )		2672461	1		|			
ANR	2673676	BitAndExpression	given & 0xf		2672461	0		&			
ANR	2673677	Identifier	given		2672461	0					
ANR	2673678	PrimaryExpression	0xf		2672461	1					
ANR	2673679	BitAndExpression	( given >> 1 ) & 0x10		2672461	1		&			
ANR	2673680	ShiftExpression	given >> 1		2672461	0		>>			
ANR	2673681	Identifier	given		2672461	0					
ANR	2673682	PrimaryExpression	1		2672461	1					
ANR	2673683	PrimaryExpression	0x10		2672461	1					
ANR	2673684	IdentifierDeclStatement	int size = ( given >> 20 ) & 3 ;	4379:3:183576:183604	2672461	1	True				
ANR	2673685	IdentifierDecl	size = ( given >> 20 ) & 3		2672461	0					
ANR	2673686	IdentifierDeclType	int		2672461	0					
ANR	2673687	Identifier	size		2672461	1					
ANR	2673688	AssignmentExpression	size = ( given >> 20 ) & 3		2672461	2		=			
ANR	2673689	Identifier	size		2672461	0					
ANR	2673690	BitAndExpression	( given >> 20 ) & 3		2672461	1		&			
ANR	2673691	ShiftExpression	given >> 20		2672461	0		>>			
ANR	2673692	Identifier	given		2672461	0					
ANR	2673693	PrimaryExpression	20		2672461	1					
ANR	2673694	PrimaryExpression	3		2672461	1					
ANR	2673695	IdentifierDeclStatement	int reg = raw_reg & ( ( 4 << size ) - 1 ) ;	4380:3:183609:183646	2672461	2	True				
ANR	2673696	IdentifierDecl	reg = raw_reg & ( ( 4 << size ) - 1 )		2672461	0					
ANR	2673697	IdentifierDeclType	int		2672461	0					
ANR	2673698	Identifier	reg		2672461	1					
ANR	2673699	AssignmentExpression	reg = raw_reg & ( ( 4 << size ) - 1 )		2672461	2		=			
ANR	2673700	Identifier	reg		2672461	0					
ANR	2673701	BitAndExpression	raw_reg & ( ( 4 << size ) - 1 )		2672461	1		&			
ANR	2673702	Identifier	raw_reg		2672461	0					
ANR	2673703	AdditiveExpression	( 4 << size ) - 1		2672461	1		-			
ANR	2673704	ShiftExpression	4 << size		2672461	0		<<			
ANR	2673705	PrimaryExpression	4		2672461	0					
ANR	2673706	Identifier	size		2672461	1					
ANR	2673707	PrimaryExpression	1		2672461	1					
ANR	2673708	IdentifierDeclStatement	int ix = raw_reg >> size >> 2 ;	4381:3:183651:183680	2672461	3	True				
ANR	2673709	IdentifierDecl	ix = raw_reg >> size >> 2		2672461	0					
ANR	2673710	IdentifierDeclType	int		2672461	0					
ANR	2673711	Identifier	ix		2672461	1					
ANR	2673712	AssignmentExpression	ix = raw_reg >> size >> 2		2672461	2		=			
ANR	2673713	Identifier	ix		2672461	0					
ANR	2673714	ShiftExpression	raw_reg >> size >> 2		2672461	1		>>			
ANR	2673715	Identifier	raw_reg		2672461	0					
ANR	2673716	ShiftExpression	size >> 2		2672461	1		>>			
ANR	2673717	Identifier	size		2672461	0					
ANR	2673718	PrimaryExpression	2		2672461	1					
ANR	2673719	ExpressionStatement	"func ( stream , ""d%d[%d]"" , reg , ix )"	4383:3:183686:183719	2672461	4	True				
ANR	2673720	CallExpression	"func ( stream , ""d%d[%d]"" , reg , ix )"		2672461	0					
ANR	2673721	Callee	func		2672461	0					
ANR	2673722	Identifier	func		2672461	0					
ANR	2673723	ArgumentList	stream		2672461	1					
ANR	2673724	Argument	stream		2672461	0					
ANR	2673725	Identifier	stream		2672461	0					
ANR	2673726	Argument	"""d%d[%d]"""		2672461	1					
ANR	2673727	PrimaryExpression	"""d%d[%d]"""		2672461	0					
ANR	2673728	Argument	reg		2672461	2					
ANR	2673729	Identifier	reg		2672461	0					
ANR	2673730	Argument	ix		2672461	3					
ANR	2673731	Identifier	ix		2672461	0					
ANR	2673732	BreakStatement	break ;	4385:8:183739:183744	2672461	19	True				
ANR	2673733	Label	case 'E' :	4387:6:183753:183761	2672461	20	True				
ANR	2673734	CompoundStatement		254:24:6245:6260	2672461	21					
ANR	2673735	IdentifierDeclStatement	int bits = 0 ;	4390:3:183839:183851	2672461	0	True				
ANR	2673736	IdentifierDecl	bits = 0		2672461	0					
ANR	2673737	IdentifierDeclType	int		2672461	0					
ANR	2673738	Identifier	bits		2672461	1					
ANR	2673739	AssignmentExpression	bits = 0		2672461	2		=			
ANR	2673740	Identifier	bits		2672461	0					
ANR	2673741	PrimaryExpression	0		2672461	1					
ANR	2673742	IdentifierDeclStatement	int cmode = ( given >> 8 ) & 0xf ;	4391:3:183856:183886	2672461	1	True				
ANR	2673743	IdentifierDecl	cmode = ( given >> 8 ) & 0xf		2672461	0					
ANR	2673744	IdentifierDeclType	int		2672461	0					
ANR	2673745	Identifier	cmode		2672461	1					
ANR	2673746	AssignmentExpression	cmode = ( given >> 8 ) & 0xf		2672461	2		=			
ANR	2673747	Identifier	cmode		2672461	0					
ANR	2673748	BitAndExpression	( given >> 8 ) & 0xf		2672461	1		&			
ANR	2673749	ShiftExpression	given >> 8		2672461	0		>>			
ANR	2673750	Identifier	given		2672461	0					
ANR	2673751	PrimaryExpression	8		2672461	1					
ANR	2673752	PrimaryExpression	0xf		2672461	1					
ANR	2673753	IdentifierDeclStatement	int op = ( given >> 5 ) & 0x1 ;	4392:3:183891:183918	2672461	2	True				
ANR	2673754	IdentifierDecl	op = ( given >> 5 ) & 0x1		2672461	0					
ANR	2673755	IdentifierDeclType	int		2672461	0					
ANR	2673756	Identifier	op		2672461	1					
ANR	2673757	AssignmentExpression	op = ( given >> 5 ) & 0x1		2672461	2		=			
ANR	2673758	Identifier	op		2672461	0					
ANR	2673759	BitAndExpression	( given >> 5 ) & 0x1		2672461	1		&			
ANR	2673760	ShiftExpression	given >> 5		2672461	0		>>			
ANR	2673761	Identifier	given		2672461	0					
ANR	2673762	PrimaryExpression	5		2672461	1					
ANR	2673763	PrimaryExpression	0x1		2672461	1					
ANR	2673764	IdentifierDeclStatement	"unsigned long value = 0 , hival = 0 ;"	4393:3:183923:183957	2672461	3	True				
ANR	2673765	IdentifierDecl	value = 0		2672461	0					
ANR	2673766	IdentifierDeclType	unsigned long		2672461	0					
ANR	2673767	Identifier	value		2672461	1					
ANR	2673768	AssignmentExpression	value = 0		2672461	2		=			
ANR	2673769	Identifier	value		2672461	0					
ANR	2673770	PrimaryExpression	0		2672461	1					
ANR	2673771	IdentifierDecl	hival = 0		2672461	1					
ANR	2673772	IdentifierDeclType	unsigned long		2672461	0					
ANR	2673773	Identifier	hival		2672461	1					
ANR	2673774	AssignmentExpression	hival = 0		2672461	2		=			
ANR	2673775	Identifier	hival		2672461	0					
ANR	2673776	PrimaryExpression	0		2672461	1					
ANR	2673777	IdentifierDeclStatement	unsigned shift ;	4394:3:183962:183976	2672461	4	True				
ANR	2673778	IdentifierDecl	shift		2672461	0					
ANR	2673779	IdentifierDeclType	unsigned		2672461	0					
ANR	2673780	Identifier	shift		2672461	1					
ANR	2673781	IdentifierDeclStatement	int size = 0 ;	4395:24:184002:184014	2672461	5	True				
ANR	2673782	IdentifierDecl	size = 0		2672461	0					
ANR	2673783	IdentifierDeclType	int		2672461	0					
ANR	2673784	Identifier	size		2672461	1					
ANR	2673785	AssignmentExpression	size = 0		2672461	2		=			
ANR	2673786	Identifier	size		2672461	0					
ANR	2673787	PrimaryExpression	0		2672461	1					
ANR	2673788	IdentifierDeclStatement	int isfloat = 0 ;	4396:24:184040:184055	2672461	6	True				
ANR	2673789	IdentifierDecl	isfloat = 0		2672461	0					
ANR	2673790	IdentifierDeclType	int		2672461	0					
ANR	2673791	Identifier	isfloat		2672461	1					
ANR	2673792	AssignmentExpression	isfloat = 0		2672461	2		=			
ANR	2673793	Identifier	isfloat		2672461	0					
ANR	2673794	PrimaryExpression	0		2672461	1					
ANR	2673795	ExpressionStatement	bits |= ( ( given >> 24 ) & 1 ) << 7	4398:3:184061:184093	2672461	7	True				
ANR	2673796	AssignmentExpression	bits |= ( ( given >> 24 ) & 1 ) << 7		2672461	0		|=			
ANR	2673797	Identifier	bits		2672461	0					
ANR	2673798	ShiftExpression	( ( given >> 24 ) & 1 ) << 7		2672461	1		<<			
ANR	2673799	BitAndExpression	( given >> 24 ) & 1		2672461	0		&			
ANR	2673800	ShiftExpression	given >> 24		2672461	0		>>			
ANR	2673801	Identifier	given		2672461	0					
ANR	2673802	PrimaryExpression	24		2672461	1					
ANR	2673803	PrimaryExpression	1		2672461	1					
ANR	2673804	PrimaryExpression	7		2672461	1					
ANR	2673805	ExpressionStatement	bits |= ( ( given >> 16 ) & 7 ) << 4	4399:3:184098:184130	2672461	8	True				
ANR	2673806	AssignmentExpression	bits |= ( ( given >> 16 ) & 7 ) << 4		2672461	0		|=			
ANR	2673807	Identifier	bits		2672461	0					
ANR	2673808	ShiftExpression	( ( given >> 16 ) & 7 ) << 4		2672461	1		<<			
ANR	2673809	BitAndExpression	( given >> 16 ) & 7		2672461	0		&			
ANR	2673810	ShiftExpression	given >> 16		2672461	0		>>			
ANR	2673811	Identifier	given		2672461	0					
ANR	2673812	PrimaryExpression	16		2672461	1					
ANR	2673813	PrimaryExpression	7		2672461	1					
ANR	2673814	PrimaryExpression	4		2672461	1					
ANR	2673815	ExpressionStatement	bits |= ( ( given >> 0 ) & 15 ) << 0	4400:3:184135:184167	2672461	9	True				
ANR	2673816	AssignmentExpression	bits |= ( ( given >> 0 ) & 15 ) << 0		2672461	0		|=			
ANR	2673817	Identifier	bits		2672461	0					
ANR	2673818	ShiftExpression	( ( given >> 0 ) & 15 ) << 0		2672461	1		<<			
ANR	2673819	BitAndExpression	( given >> 0 ) & 15		2672461	0		&			
ANR	2673820	ShiftExpression	given >> 0		2672461	0		>>			
ANR	2673821	Identifier	given		2672461	0					
ANR	2673822	PrimaryExpression	0		2672461	1					
ANR	2673823	PrimaryExpression	15		2672461	1					
ANR	2673824	PrimaryExpression	0		2672461	1					
ANR	2673825	IfStatement	if ( cmode < 8 )		2672461	10					
ANR	2673826	Condition	cmode < 8	4402:7:184177:184185	2672461	0	True				
ANR	2673827	RelationalExpression	cmode < 8		2672461	0		<			
ANR	2673828	Identifier	cmode		2672461	0					
ANR	2673829	PrimaryExpression	8		2672461	1					
ANR	2673830	CompoundStatement		261:5:6398:6398	2672461	1					
ANR	2673831	ExpressionStatement	shift = ( cmode >> 1 ) & 3	4404:7:184202:184226	2672461	0	True				
ANR	2673832	AssignmentExpression	shift = ( cmode >> 1 ) & 3		2672461	0		=			
ANR	2673833	Identifier	shift		2672461	0					
ANR	2673834	BitAndExpression	( cmode >> 1 ) & 3		2672461	1		&			
ANR	2673835	ShiftExpression	cmode >> 1		2672461	0		>>			
ANR	2673836	Identifier	cmode		2672461	0					
ANR	2673837	PrimaryExpression	1		2672461	1					
ANR	2673838	PrimaryExpression	3		2672461	1					
ANR	2673839	ExpressionStatement	value = ( unsigned long ) bits << ( 8 * shift )	4405:7:184235:184278	2672461	1	True				
ANR	2673840	AssignmentExpression	value = ( unsigned long ) bits << ( 8 * shift )		2672461	0		=			
ANR	2673841	Identifier	value		2672461	0					
ANR	2673842	ShiftExpression	( unsigned long ) bits << ( 8 * shift )		2672461	1		<<			
ANR	2673843	CastExpression	( unsigned long ) bits		2672461	0					
ANR	2673844	CastTarget	unsigned long		2672461	0					
ANR	2673845	Identifier	bits		2672461	1					
ANR	2673846	MultiplicativeExpression	8 * shift		2672461	1		*			
ANR	2673847	PrimaryExpression	8		2672461	0					
ANR	2673848	Identifier	shift		2672461	1					
ANR	2673849	ExpressionStatement	size = 32	4406:28:184308:184317	2672461	2	True				
ANR	2673850	AssignmentExpression	size = 32		2672461	0		=			
ANR	2673851	Identifier	size		2672461	0					
ANR	2673852	PrimaryExpression	32		2672461	1					
ANR	2673853	ElseStatement	else		2672461	0					
ANR	2673854	IfStatement	if ( cmode < 12 )		2672461	0					
ANR	2673855	Condition	cmode < 12	4408:12:184338:184347	2672461	0	True				
ANR	2673856	RelationalExpression	cmode < 12		2672461	0		<			
ANR	2673857	Identifier	cmode		2672461	0					
ANR	2673858	PrimaryExpression	12		2672461	1					
ANR	2673859	CompoundStatement		267:5:6560:6560	2672461	1					
ANR	2673860	ExpressionStatement	shift = ( cmode >> 1 ) & 1	4410:7:184364:184388	2672461	0	True				
ANR	2673861	AssignmentExpression	shift = ( cmode >> 1 ) & 1		2672461	0		=			
ANR	2673862	Identifier	shift		2672461	0					
ANR	2673863	BitAndExpression	( cmode >> 1 ) & 1		2672461	1		&			
ANR	2673864	ShiftExpression	cmode >> 1		2672461	0		>>			
ANR	2673865	Identifier	cmode		2672461	0					
ANR	2673866	PrimaryExpression	1		2672461	1					
ANR	2673867	PrimaryExpression	1		2672461	1					
ANR	2673868	ExpressionStatement	value = ( unsigned long ) bits << ( 8 * shift )	4411:7:184397:184440	2672461	1	True				
ANR	2673869	AssignmentExpression	value = ( unsigned long ) bits << ( 8 * shift )		2672461	0		=			
ANR	2673870	Identifier	value		2672461	0					
ANR	2673871	ShiftExpression	( unsigned long ) bits << ( 8 * shift )		2672461	1		<<			
ANR	2673872	CastExpression	( unsigned long ) bits		2672461	0					
ANR	2673873	CastTarget	unsigned long		2672461	0					
ANR	2673874	Identifier	bits		2672461	1					
ANR	2673875	MultiplicativeExpression	8 * shift		2672461	1		*			
ANR	2673876	PrimaryExpression	8		2672461	0					
ANR	2673877	Identifier	shift		2672461	1					
ANR	2673878	ExpressionStatement	size = 16	4412:28:184470:184479	2672461	2	True				
ANR	2673879	AssignmentExpression	size = 16		2672461	0		=			
ANR	2673880	Identifier	size		2672461	0					
ANR	2673881	PrimaryExpression	16		2672461	1					
ANR	2673882	ElseStatement	else		2672461	0					
ANR	2673883	IfStatement	if ( cmode < 14 )		2672461	0					
ANR	2673884	Condition	cmode < 14	4414:12:184500:184509	2672461	0	True				
ANR	2673885	RelationalExpression	cmode < 14		2672461	0		<			
ANR	2673886	Identifier	cmode		2672461	0					
ANR	2673887	PrimaryExpression	14		2672461	1					
ANR	2673888	CompoundStatement		273:5:6722:6722	2672461	1					
ANR	2673889	ExpressionStatement	shift = ( cmode & 1 ) + 1	4416:7:184526:184549	2672461	0	True				
ANR	2673890	AssignmentExpression	shift = ( cmode & 1 ) + 1		2672461	0		=			
ANR	2673891	Identifier	shift		2672461	0					
ANR	2673892	AdditiveExpression	( cmode & 1 ) + 1		2672461	1		+			
ANR	2673893	BitAndExpression	cmode & 1		2672461	0		&			
ANR	2673894	Identifier	cmode		2672461	0					
ANR	2673895	PrimaryExpression	1		2672461	1					
ANR	2673896	PrimaryExpression	1		2672461	1					
ANR	2673897	ExpressionStatement	value = ( unsigned long ) bits << ( 8 * shift )	4417:7:184558:184601	2672461	1	True				
ANR	2673898	AssignmentExpression	value = ( unsigned long ) bits << ( 8 * shift )		2672461	0		=			
ANR	2673899	Identifier	value		2672461	0					
ANR	2673900	ShiftExpression	( unsigned long ) bits << ( 8 * shift )		2672461	1		<<			
ANR	2673901	CastExpression	( unsigned long ) bits		2672461	0					
ANR	2673902	CastTarget	unsigned long		2672461	0					
ANR	2673903	Identifier	bits		2672461	1					
ANR	2673904	MultiplicativeExpression	8 * shift		2672461	1		*			
ANR	2673905	PrimaryExpression	8		2672461	0					
ANR	2673906	Identifier	shift		2672461	1					
ANR	2673907	ExpressionStatement	value |= ( 1ul << ( 8 * shift ) ) - 1	4418:7:184610:184643	2672461	2	True				
ANR	2673908	AssignmentExpression	value |= ( 1ul << ( 8 * shift ) ) - 1		2672461	0		|=			
ANR	2673909	Identifier	value		2672461	0					
ANR	2673910	AdditiveExpression	( 1ul << ( 8 * shift ) ) - 1		2672461	1		-			
ANR	2673911	ShiftExpression	1ul << ( 8 * shift )		2672461	0		<<			
ANR	2673912	PrimaryExpression	1ul		2672461	0					
ANR	2673913	MultiplicativeExpression	8 * shift		2672461	1		*			
ANR	2673914	PrimaryExpression	8		2672461	0					
ANR	2673915	Identifier	shift		2672461	1					
ANR	2673916	PrimaryExpression	1		2672461	1					
ANR	2673917	ExpressionStatement	size = 32	4419:28:184673:184682	2672461	3	True				
ANR	2673918	AssignmentExpression	size = 32		2672461	0		=			
ANR	2673919	Identifier	size		2672461	0					
ANR	2673920	PrimaryExpression	32		2672461	1					
ANR	2673921	ElseStatement	else		2672461	0					
ANR	2673922	IfStatement	if ( cmode == 14 )		2672461	0					
ANR	2673923	Condition	cmode == 14	4421:12:184703:184713	2672461	0	True				
ANR	2673924	EqualityExpression	cmode == 14		2672461	0		==			
ANR	2673925	Identifier	cmode		2672461	0					
ANR	2673926	PrimaryExpression	14		2672461	1					
ANR	2673927	CompoundStatement		280:5:6926:6926	2672461	1					
ANR	2673928	IfStatement	if ( op )		2672461	0					
ANR	2673929	Condition	op	4423:11:184734:184735	2672461	0	True				
ANR	2673930	Identifier	op		2672461	0					
ANR	2673931	CompoundStatement		285:4:7009:7027	2672461	1					
ANR	2673932	IdentifierDeclStatement	int ix ;	4426:4:184792:184798	2672461	0	True				
ANR	2673933	IdentifierDecl	ix		2672461	0					
ANR	2673934	IdentifierDeclType	int		2672461	0					
ANR	2673935	Identifier	ix		2672461	1					
ANR	2673936	IdentifierDeclStatement	unsigned long mask ;	4427:4:184804:184822	2672461	1	True				
ANR	2673937	IdentifierDecl	mask		2672461	0					
ANR	2673938	IdentifierDeclType	unsigned long		2672461	0					
ANR	2673939	Identifier	mask		2672461	1					
ANR	2673940	ExpressionStatement	value = 0	4429:4:184829:184838	2672461	2	True				
ANR	2673941	AssignmentExpression	value = 0		2672461	0		=			
ANR	2673942	Identifier	value		2672461	0					
ANR	2673943	PrimaryExpression	0		2672461	1					
ANR	2673944	ExpressionStatement	hival = 0	4430:32:184872:184881	2672461	3	True				
ANR	2673945	AssignmentExpression	hival = 0		2672461	0		=			
ANR	2673946	Identifier	hival		2672461	0					
ANR	2673947	PrimaryExpression	0		2672461	1					
ANR	2673948	ForStatement	for ( ix = 7 ; ix >= 0 ; ix -- )		2672461	4					
ANR	2673949	ForInit	ix = 7 ;	4431:9:184892:184898	2672461	0	True				
ANR	2673950	AssignmentExpression	ix = 7		2672461	0		=			
ANR	2673951	Identifier	ix		2672461	0					
ANR	2673952	PrimaryExpression	7		2672461	1					
ANR	2673953	Condition	ix >= 0	4431:17:184900:184906	2672461	1	True				
ANR	2673954	RelationalExpression	ix >= 0		2672461	0		>=			
ANR	2673955	Identifier	ix		2672461	0					
ANR	2673956	PrimaryExpression	0		2672461	1					
ANR	2673957	PostIncDecOperationExpression	ix --	4431:26:184909:184912	2672461	2	True				
ANR	2673958	Identifier	ix		2672461	0					
ANR	2673959	IncDec	--		2672461	1					
ANR	2673960	CompoundStatement		290:6:7126:7126	2672461	3					
ANR	2673961	ExpressionStatement	mask = ( ( bits >> ix ) & 1 ) ? 0xff : 0	4433:8:184931:184967	2672461	0	True				
ANR	2673962	AssignmentExpression	mask = ( ( bits >> ix ) & 1 ) ? 0xff : 0		2672461	0		=			
ANR	2673963	Identifier	mask		2672461	0					
ANR	2673964	ConditionalExpression	( ( bits >> ix ) & 1 ) ? 0xff : 0		2672461	1					
ANR	2673965	Condition	( bits >> ix ) & 1		2672461	0					
ANR	2673966	BitAndExpression	( bits >> ix ) & 1		2672461	0		&			
ANR	2673967	ShiftExpression	bits >> ix		2672461	0		>>			
ANR	2673968	Identifier	bits		2672461	0					
ANR	2673969	Identifier	ix		2672461	1					
ANR	2673970	PrimaryExpression	1		2672461	1					
ANR	2673971	PrimaryExpression	0xff		2672461	1					
ANR	2673972	PrimaryExpression	0		2672461	2					
ANR	2673973	IfStatement	if ( ix <= 3 )		2672461	1					
ANR	2673974	Condition	ix <= 3	4434:12:184981:184987	2672461	0	True				
ANR	2673975	RelationalExpression	ix <= 3		2672461	0		<=			
ANR	2673976	Identifier	ix		2672461	0					
ANR	2673977	PrimaryExpression	3		2672461	1					
ANR	2673978	CompoundStatement		292:21:7195:7195	2672461	1					
ANR	2673979	ExpressionStatement	value = ( value << 8 ) | mask	4435:9:185001:185028	2672461	0	True				
ANR	2673980	AssignmentExpression	value = ( value << 8 ) | mask		2672461	0		=			
ANR	2673981	Identifier	value		2672461	0					
ANR	2673982	InclusiveOrExpression	( value << 8 ) | mask		2672461	1		|			
ANR	2673983	ShiftExpression	value << 8		2672461	0		<<			
ANR	2673984	Identifier	value		2672461	0					
ANR	2673985	PrimaryExpression	8		2672461	1					
ANR	2673986	Identifier	mask		2672461	1					
ANR	2673987	ElseStatement	else		2672461	0					
ANR	2673988	CompoundStatement		294:15:7250:7250	2672461	0					
ANR	2673989	ExpressionStatement	hival = ( hival << 8 ) | mask	4437:9:185056:185083	2672461	0	True				
ANR	2673990	AssignmentExpression	hival = ( hival << 8 ) | mask		2672461	0		=			
ANR	2673991	Identifier	hival		2672461	0					
ANR	2673992	InclusiveOrExpression	( hival << 8 ) | mask		2672461	1		|			
ANR	2673993	ShiftExpression	hival << 8		2672461	0		<<			
ANR	2673994	Identifier	hival		2672461	0					
ANR	2673995	PrimaryExpression	8		2672461	1					
ANR	2673996	Identifier	mask		2672461	1					
ANR	2673997	ExpressionStatement	size = 64	4440:32:185135:185144	2672461	5	True				
ANR	2673998	AssignmentExpression	size = 64		2672461	0		=			
ANR	2673999	Identifier	size		2672461	0					
ANR	2674000	PrimaryExpression	64		2672461	1					
ANR	2674001	ElseStatement	else		2672461	0					
ANR	2674002	CompoundStatement		301:30:7425:7425	2672461	0					
ANR	2674003	ExpressionStatement	value = ( unsigned long ) bits	4445:32:185311:185339	2672461	0	True				
ANR	2674004	AssignmentExpression	value = ( unsigned long ) bits		2672461	0		=			
ANR	2674005	Identifier	value		2672461	0					
ANR	2674006	CastExpression	( unsigned long ) bits		2672461	1					
ANR	2674007	CastTarget	unsigned long		2672461	0					
ANR	2674008	Identifier	bits		2672461	1					
ANR	2674009	ExpressionStatement	size = 8	4446:32:185373:185381	2672461	1	True				
ANR	2674010	AssignmentExpression	size = 8		2672461	0		=			
ANR	2674011	Identifier	size		2672461	0					
ANR	2674012	PrimaryExpression	8		2672461	1					
ANR	2674013	ElseStatement	else		2672461	0					
ANR	2674014	IfStatement	if ( ! op )		2672461	0					
ANR	2674015	Condition	! op	4449:12:185434:185436	2672461	0	True				
ANR	2674016	UnaryOperationExpression	! op		2672461	0					
ANR	2674017	UnaryOperator	!		2672461	0					
ANR	2674018	Identifier	op		2672461	1					
ANR	2674019	CompoundStatement		310:7:7697:7704	2672461	1					
ANR	2674020	IdentifierDeclStatement	int tmp ;	4452:7:185492:185499	2672461	0	True				
ANR	2674021	IdentifierDecl	tmp		2672461	0					
ANR	2674022	IdentifierDeclType	int		2672461	0					
ANR	2674023	Identifier	tmp		2672461	1					
ANR	2674024	ExpressionStatement	value = ( unsigned long ) ( bits & 0x7f ) << 19	4454:7:185509:185553	2672461	1	True				
ANR	2674025	AssignmentExpression	value = ( unsigned long ) ( bits & 0x7f ) << 19		2672461	0		=			
ANR	2674026	Identifier	value		2672461	0					
ANR	2674027	ShiftExpression	( unsigned long ) ( bits & 0x7f ) << 19		2672461	1		<<			
ANR	2674028	CastExpression	( unsigned long ) ( bits & 0x7f )		2672461	0					
ANR	2674029	CastTarget	unsigned long		2672461	0					
ANR	2674030	BitAndExpression	bits & 0x7f		2672461	1		&			
ANR	2674031	Identifier	bits		2672461	0					
ANR	2674032	PrimaryExpression	0x7f		2672461	1					
ANR	2674033	PrimaryExpression	19		2672461	1					
ANR	2674034	ExpressionStatement	value |= ( unsigned long ) ( bits & 0x80 ) << 24	4455:7:185562:185606	2672461	2	True				
ANR	2674035	AssignmentExpression	value |= ( unsigned long ) ( bits & 0x80 ) << 24		2672461	0		|=			
ANR	2674036	Identifier	value		2672461	0					
ANR	2674037	ShiftExpression	( unsigned long ) ( bits & 0x80 ) << 24		2672461	1		<<			
ANR	2674038	CastExpression	( unsigned long ) ( bits & 0x80 )		2672461	0					
ANR	2674039	CastTarget	unsigned long		2672461	0					
ANR	2674040	BitAndExpression	bits & 0x80		2672461	1		&			
ANR	2674041	Identifier	bits		2672461	0					
ANR	2674042	PrimaryExpression	0x80		2672461	1					
ANR	2674043	PrimaryExpression	24		2672461	1					
ANR	2674044	ExpressionStatement	tmp = bits & 0x40 ? 0x3c : 0x40	4456:7:185615:185646	2672461	3	True				
ANR	2674045	AssignmentExpression	tmp = bits & 0x40 ? 0x3c : 0x40		2672461	0		=			
ANR	2674046	Identifier	tmp		2672461	0					
ANR	2674047	ConditionalExpression	bits & 0x40 ? 0x3c : 0x40		2672461	1					
ANR	2674048	Condition	bits & 0x40		2672461	0					
ANR	2674049	BitAndExpression	bits & 0x40		2672461	0		&			
ANR	2674050	Identifier	bits		2672461	0					
ANR	2674051	PrimaryExpression	0x40		2672461	1					
ANR	2674052	PrimaryExpression	0x3c		2672461	1					
ANR	2674053	PrimaryExpression	0x40		2672461	2					
ANR	2674054	ExpressionStatement	value |= ( unsigned long ) tmp << 24	4457:7:185655:185689	2672461	4	True				
ANR	2674055	AssignmentExpression	value |= ( unsigned long ) tmp << 24		2672461	0		|=			
ANR	2674056	Identifier	value		2672461	0					
ANR	2674057	ShiftExpression	( unsigned long ) tmp << 24		2672461	1		<<			
ANR	2674058	CastExpression	( unsigned long ) tmp		2672461	0					
ANR	2674059	CastTarget	unsigned long		2672461	0					
ANR	2674060	Identifier	tmp		2672461	1					
ANR	2674061	PrimaryExpression	24		2672461	1					
ANR	2674062	ExpressionStatement	size = 32	4458:28:185719:185728	2672461	5	True				
ANR	2674063	AssignmentExpression	size = 32		2672461	0		=			
ANR	2674064	Identifier	size		2672461	0					
ANR	2674065	PrimaryExpression	32		2672461	1					
ANR	2674066	ExpressionStatement	isfloat = 1	4459:28:185758:185769	2672461	6	True				
ANR	2674067	AssignmentExpression	isfloat = 1		2672461	0		=			
ANR	2674068	Identifier	isfloat		2672461	0					
ANR	2674069	PrimaryExpression	1		2672461	1					
ANR	2674070	ElseStatement	else		2672461	0					
ANR	2674071	CompoundStatement		320:5:7996:7996	2672461	0					
ANR	2674072	ExpressionStatement	"func ( stream , ""<illegal constant %.8x:%x:%x>"" , bits , cmode , op )"	4463:7:185800:185897	2672461	0	True				
ANR	2674073	CallExpression	"func ( stream , ""<illegal constant %.8x:%x:%x>"" , bits , cmode , op )"		2672461	0					
ANR	2674074	Callee	func		2672461	0					
ANR	2674075	Identifier	func		2672461	0					
ANR	2674076	ArgumentList	stream		2672461	1					
ANR	2674077	Argument	stream		2672461	0					
ANR	2674078	Identifier	stream		2672461	0					
ANR	2674079	Argument	"""<illegal constant %.8x:%x:%x>"""		2672461	1					
ANR	2674080	PrimaryExpression	"""<illegal constant %.8x:%x:%x>"""		2672461	0					
ANR	2674081	Argument	bits		2672461	2					
ANR	2674082	Identifier	bits		2672461	0					
ANR	2674083	Argument	cmode		2672461	3					
ANR	2674084	Identifier	cmode		2672461	0					
ANR	2674085	Argument	op		2672461	4					
ANR	2674086	Identifier	op		2672461	0					
ANR	2674087	ExpressionStatement	size = 32	4465:28:185927:185936	2672461	1	True				
ANR	2674088	AssignmentExpression	size = 32		2672461	0		=			
ANR	2674089	Identifier	size		2672461	0					
ANR	2674090	PrimaryExpression	32		2672461	1					
ANR	2674091	BreakStatement	break ;	4466:7:185945:185950	2672461	2	True				
ANR	2674092	SwitchStatement	switch ( size )		2672461	11					
ANR	2674093	Condition	size	4468:32:185991:185994	2672461	0	True				
ANR	2674094	Identifier	size		2672461	0					
ANR	2674095	CompoundStatement		327:26:8228:8228	2672461	1					
ANR	2674096	Label	case 8 :	4470:26:186051:186057	2672461	0	True				
ANR	2674097	ExpressionStatement	"func ( stream , ""%ld"" , value )"	4472:7:186122:186149	2672461	1	True				
ANR	2674098	CallExpression	"func ( stream , ""%ld"" , value )"		2672461	0					
ANR	2674099	Callee	func		2672461	0					
ANR	2674100	Identifier	func		2672461	0					
ANR	2674101	ArgumentList	stream		2672461	1					
ANR	2674102	Argument	stream		2672461	0					
ANR	2674103	Identifier	stream		2672461	0					
ANR	2674104	Argument	"""%ld"""		2672461	1					
ANR	2674105	PrimaryExpression	"""%ld"""		2672461	0					
ANR	2674106	Argument	value		2672461	2					
ANR	2674107	Identifier	value		2672461	0					
ANR	2674108	BreakStatement	break ;	4473:28:186179:186184	2672461	2	True				
ANR	2674109	Label	case 16 :	4475:26:186213:186220	2672461	3	True				
ANR	2674110	ExpressionStatement	"func ( stream , ""%ld"" , value )"	4477:28:186327:186354	2672461	4	True				
ANR	2674111	CallExpression	"func ( stream , ""%ld"" , value )"		2672461	0					
ANR	2674112	Callee	func		2672461	0					
ANR	2674113	Identifier	func		2672461	0					
ANR	2674114	ArgumentList	stream		2672461	1					
ANR	2674115	Argument	stream		2672461	0					
ANR	2674116	Identifier	stream		2672461	0					
ANR	2674117	Argument	"""%ld"""		2672461	1					
ANR	2674118	PrimaryExpression	"""%ld"""		2672461	0					
ANR	2674119	Argument	value		2672461	2					
ANR	2674120	Identifier	value		2672461	0					
ANR	2674121	BreakStatement	break ;	4478:28:186384:186389	2672461	5	True				
ANR	2674122	Label	case 32 :	4480:26:186418:186425	2672461	6	True				
ANR	2674123	IfStatement	if ( isfloat )		2672461	7					
ANR	2674124	Condition	isfloat	4481:32:186459:186465	2672461	0	True				
ANR	2674125	Identifier	isfloat		2672461	0					
ANR	2674126	CompoundStatement		342:32:8796:8809	2672461	1					
ANR	2674127	IdentifierDeclStatement	unsigned char valbytes [ 4 ] ;	4483:32:186532:186557	2672461	0	True				
ANR	2674128	IdentifierDecl	valbytes [ 4 ]		2672461	0					
ANR	2674129	IdentifierDeclType	unsigned char [ 4 ]		2672461	0					
ANR	2674130	Identifier	valbytes		2672461	1					
ANR	2674131	PrimaryExpression	4		2672461	2					
ANR	2674132	IdentifierDeclStatement	double fvalue ;	4484:32:186591:186604	2672461	1	True				
ANR	2674133	IdentifierDecl	fvalue		2672461	0					
ANR	2674134	IdentifierDeclType	double		2672461	0					
ANR	2674135	Identifier	fvalue		2672461	1					
ANR	2674136	ExpressionStatement	valbytes [ 0 ] = value & 0xff	4488:32:186793:186819	2672461	2	True				
ANR	2674137	AssignmentExpression	valbytes [ 0 ] = value & 0xff		2672461	0		=			
ANR	2674138	ArrayIndexing	valbytes [ 0 ]		2672461	0					
ANR	2674139	Identifier	valbytes		2672461	0					
ANR	2674140	PrimaryExpression	0		2672461	1					
ANR	2674141	BitAndExpression	value & 0xff		2672461	1		&			
ANR	2674142	Identifier	value		2672461	0					
ANR	2674143	PrimaryExpression	0xff		2672461	1					
ANR	2674144	ExpressionStatement	valbytes [ 1 ] = ( value >> 8 ) & 0xff	4489:32:186853:186886	2672461	3	True				
ANR	2674145	AssignmentExpression	valbytes [ 1 ] = ( value >> 8 ) & 0xff		2672461	0		=			
ANR	2674146	ArrayIndexing	valbytes [ 1 ]		2672461	0					
ANR	2674147	Identifier	valbytes		2672461	0					
ANR	2674148	PrimaryExpression	1		2672461	1					
ANR	2674149	BitAndExpression	( value >> 8 ) & 0xff		2672461	1		&			
ANR	2674150	ShiftExpression	value >> 8		2672461	0		>>			
ANR	2674151	Identifier	value		2672461	0					
ANR	2674152	PrimaryExpression	8		2672461	1					
ANR	2674153	PrimaryExpression	0xff		2672461	1					
ANR	2674154	ExpressionStatement	valbytes [ 2 ] = ( value >> 16 ) & 0xff	4490:32:186920:186954	2672461	4	True				
ANR	2674155	AssignmentExpression	valbytes [ 2 ] = ( value >> 16 ) & 0xff		2672461	0		=			
ANR	2674156	ArrayIndexing	valbytes [ 2 ]		2672461	0					
ANR	2674157	Identifier	valbytes		2672461	0					
ANR	2674158	PrimaryExpression	2		2672461	1					
ANR	2674159	BitAndExpression	( value >> 16 ) & 0xff		2672461	1		&			
ANR	2674160	ShiftExpression	value >> 16		2672461	0		>>			
ANR	2674161	Identifier	value		2672461	0					
ANR	2674162	PrimaryExpression	16		2672461	1					
ANR	2674163	PrimaryExpression	0xff		2672461	1					
ANR	2674164	ExpressionStatement	valbytes [ 3 ] = ( value >> 24 ) & 0xff	4491:32:186988:187022	2672461	5	True				
ANR	2674165	AssignmentExpression	valbytes [ 3 ] = ( value >> 24 ) & 0xff		2672461	0		=			
ANR	2674166	ArrayIndexing	valbytes [ 3 ]		2672461	0					
ANR	2674167	Identifier	valbytes		2672461	0					
ANR	2674168	PrimaryExpression	3		2672461	1					
ANR	2674169	BitAndExpression	( value >> 24 ) & 0xff		2672461	1		&			
ANR	2674170	ShiftExpression	value >> 24		2672461	0		>>			
ANR	2674171	Identifier	value		2672461	0					
ANR	2674172	PrimaryExpression	24		2672461	1					
ANR	2674173	PrimaryExpression	0xff		2672461	1					
ANR	2674174	ExpressionStatement	"floatformat_to_double ( & floatformat_ieee_single_little , valbytes , & fvalue )"	4493:32:187057:187201	2672461	6	True				
ANR	2674175	CallExpression	"floatformat_to_double ( & floatformat_ieee_single_little , valbytes , & fvalue )"		2672461	0					
ANR	2674176	Callee	floatformat_to_double		2672461	0					
ANR	2674177	Identifier	floatformat_to_double		2672461	0					
ANR	2674178	ArgumentList	& floatformat_ieee_single_little		2672461	1					
ANR	2674179	Argument	& floatformat_ieee_single_little		2672461	0					
ANR	2674180	UnaryOperationExpression	& floatformat_ieee_single_little		2672461	0					
ANR	2674181	UnaryOperator	&		2672461	0					
ANR	2674182	Identifier	floatformat_ieee_single_little		2672461	1					
ANR	2674183	Argument	valbytes		2672461	1					
ANR	2674184	Identifier	valbytes		2672461	0					
ANR	2674185	Argument	& fvalue		2672461	2					
ANR	2674186	UnaryOperationExpression	& fvalue		2672461	0					
ANR	2674187	UnaryOperator	&		2672461	0					
ANR	2674188	Identifier	fvalue		2672461	1					
ANR	2674189	ExpressionStatement	"func ( stream , ""%.7g ; 0x%.8lx"" , fvalue , value )"	4497:32:187236:187320	2672461	7	True				
ANR	2674190	CallExpression	"func ( stream , ""%.7g ; 0x%.8lx"" , fvalue , value )"		2672461	0					
ANR	2674191	Callee	func		2672461	0					
ANR	2674192	Identifier	func		2672461	0					
ANR	2674193	ArgumentList	stream		2672461	1					
ANR	2674194	Argument	stream		2672461	0					
ANR	2674195	Identifier	stream		2672461	0					
ANR	2674196	Argument	"""%.7g ; 0x%.8lx"""		2672461	1					
ANR	2674197	PrimaryExpression	"""%.7g ; 0x%.8lx"""		2672461	0					
ANR	2674198	Argument	fvalue		2672461	2					
ANR	2674199	Identifier	fvalue		2672461	0					
ANR	2674200	Argument	value		2672461	3					
ANR	2674201	Identifier	value		2672461	0					
ANR	2674202	ElseStatement	else		2672461	0					
ANR	2674203	CompoundStatement		357:14:9541:9541	2672461	0					
ANR	2674204	ExpressionStatement	"func ( stream , ""%ld ; 0x%.8lx"" , ( long ) ( ( ( value & 0x80000000L ) != 0 ) ? value | ~0xffffffffL : value ) , value )"	4500:8:187346:187492	2672461	0	True				
ANR	2674205	CallExpression	"func ( stream , ""%ld ; 0x%.8lx"" , ( long ) ( ( ( value & 0x80000000L ) != 0 ) ? value | ~0xffffffffL : value ) , value )"		2672461	0					
ANR	2674206	Callee	func		2672461	0					
ANR	2674207	Identifier	func		2672461	0					
ANR	2674208	ArgumentList	stream		2672461	1					
ANR	2674209	Argument	stream		2672461	0					
ANR	2674210	Identifier	stream		2672461	0					
ANR	2674211	Argument	"""%ld ; 0x%.8lx"""		2672461	1					
ANR	2674212	PrimaryExpression	"""%ld ; 0x%.8lx"""		2672461	0					
ANR	2674213	Argument	( long ) ( ( ( value & 0x80000000L ) != 0 ) ? value | ~0xffffffffL : value )		2672461	2					
ANR	2674214	CastExpression	( long ) ( ( ( value & 0x80000000L ) != 0 ) ? value | ~0xffffffffL : value )		2672461	0					
ANR	2674215	CastTarget	long		2672461	0					
ANR	2674216	ConditionalExpression	( ( value & 0x80000000L ) != 0 ) ? value | ~0xffffffffL : value		2672461	1					
ANR	2674217	Condition	( value & 0x80000000L ) != 0		2672461	0					
ANR	2674218	EqualityExpression	( value & 0x80000000L ) != 0		2672461	0		!=			
ANR	2674219	BitAndExpression	value & 0x80000000L		2672461	0		&			
ANR	2674220	Identifier	value		2672461	0					
ANR	2674221	PrimaryExpression	0x80000000L		2672461	1					
ANR	2674222	PrimaryExpression	0		2672461	1					
ANR	2674223	InclusiveOrExpression	value | ~0xffffffffL		2672461	1		|			
ANR	2674224	Identifier	value		2672461	0					
ANR	2674225	Identifier	~0xffffffffL		2672461	1					
ANR	2674226	Identifier	value		2672461	2					
ANR	2674227	Argument	value		2672461	3					
ANR	2674228	Identifier	value		2672461	0					
ANR	2674229	BreakStatement	break ;	4506:7:187510:187515	2672461	8	True				
ANR	2674230	Label	case 64 :	4508:26:187544:187551	2672461	9	True				
ANR	2674231	ExpressionStatement	"func ( stream , ""#0x%.8lx%.8lx"" , hival , value )"	4509:28:187581:187625	2672461	10	True				
ANR	2674232	CallExpression	"func ( stream , ""#0x%.8lx%.8lx"" , hival , value )"		2672461	0					
ANR	2674233	Callee	func		2672461	0					
ANR	2674234	Identifier	func		2672461	0					
ANR	2674235	ArgumentList	stream		2672461	1					
ANR	2674236	Argument	stream		2672461	0					
ANR	2674237	Identifier	stream		2672461	0					
ANR	2674238	Argument	"""#0x%.8lx%.8lx"""		2672461	1					
ANR	2674239	PrimaryExpression	"""#0x%.8lx%.8lx"""		2672461	0					
ANR	2674240	Argument	hival		2672461	2					
ANR	2674241	Identifier	hival		2672461	0					
ANR	2674242	Argument	value		2672461	3					
ANR	2674243	Identifier	value		2672461	0					
ANR	2674244	BreakStatement	break ;	4510:28:187655:187660	2672461	11	True				
ANR	2674245	BreakStatement	break ;	4513:8:187708:187713	2672461	22	True				
ANR	2674246	Label	case 'F' :	4515:6:187722:187730	2672461	23	True				
ANR	2674247	CompoundStatement		376:3:10018:10046	2672461	24					
ANR	2674248	IdentifierDeclStatement	int regno = ( ( given >> 16 ) & 0xf ) | ( ( given >> ( 7 - 4 ) ) & 0x10 ) ;	4517:3:187745:187808	2672461	0	True				
ANR	2674249	IdentifierDecl	regno = ( ( given >> 16 ) & 0xf ) | ( ( given >> ( 7 - 4 ) ) & 0x10 )		2672461	0					
ANR	2674250	IdentifierDeclType	int		2672461	0					
ANR	2674251	Identifier	regno		2672461	1					
ANR	2674252	AssignmentExpression	regno = ( ( given >> 16 ) & 0xf ) | ( ( given >> ( 7 - 4 ) ) & 0x10 )		2672461	2		=			
ANR	2674253	Identifier	regno		2672461	0					
ANR	2674254	InclusiveOrExpression	( ( given >> 16 ) & 0xf ) | ( ( given >> ( 7 - 4 ) ) & 0x10 )		2672461	1		|			
ANR	2674255	BitAndExpression	( given >> 16 ) & 0xf		2672461	0		&			
ANR	2674256	ShiftExpression	given >> 16		2672461	0		>>			
ANR	2674257	Identifier	given		2672461	0					
ANR	2674258	PrimaryExpression	16		2672461	1					
ANR	2674259	PrimaryExpression	0xf		2672461	1					
ANR	2674260	BitAndExpression	( given >> ( 7 - 4 ) ) & 0x10		2672461	1		&			
ANR	2674261	ShiftExpression	given >> ( 7 - 4 )		2672461	0		>>			
ANR	2674262	Identifier	given		2672461	0					
ANR	2674263	AdditiveExpression	7 - 4		2672461	1		-			
ANR	2674264	PrimaryExpression	7		2672461	0					
ANR	2674265	PrimaryExpression	4		2672461	1					
ANR	2674266	PrimaryExpression	0x10		2672461	1					
ANR	2674267	IdentifierDeclStatement	int num = ( given >> 8 ) & 0x3 ;	4518:3:187813:187841	2672461	1	True				
ANR	2674268	IdentifierDecl	num = ( given >> 8 ) & 0x3		2672461	0					
ANR	2674269	IdentifierDeclType	int		2672461	0					
ANR	2674270	Identifier	num		2672461	1					
ANR	2674271	AssignmentExpression	num = ( given >> 8 ) & 0x3		2672461	2		=			
ANR	2674272	Identifier	num		2672461	0					
ANR	2674273	BitAndExpression	( given >> 8 ) & 0x3		2672461	1		&			
ANR	2674274	ShiftExpression	given >> 8		2672461	0		>>			
ANR	2674275	Identifier	given		2672461	0					
ANR	2674276	PrimaryExpression	8		2672461	1					
ANR	2674277	PrimaryExpression	0x3		2672461	1					
ANR	2674278	IfStatement	if ( ! num )		2672461	2					
ANR	2674279	Condition	! num	4520:7:187851:187854	2672461	0	True				
ANR	2674280	UnaryOperationExpression	! num		2672461	0					
ANR	2674281	UnaryOperator	!		2672461	0					
ANR	2674282	Identifier	num		2672461	1					
ANR	2674283	CompoundStatement		378:13:10062:10062	2672461	1					
ANR	2674284	ExpressionStatement	"func ( stream , ""{d%d}"" , regno )"	4521:4:187863:187892	2672461	0	True				
ANR	2674285	CallExpression	"func ( stream , ""{d%d}"" , regno )"		2672461	0					
ANR	2674286	Callee	func		2672461	0					
ANR	2674287	Identifier	func		2672461	0					
ANR	2674288	ArgumentList	stream		2672461	1					
ANR	2674289	Argument	stream		2672461	0					
ANR	2674290	Identifier	stream		2672461	0					
ANR	2674291	Argument	"""{d%d}"""		2672461	1					
ANR	2674292	PrimaryExpression	"""{d%d}"""		2672461	0					
ANR	2674293	Argument	regno		2672461	2					
ANR	2674294	Identifier	regno		2672461	0					
ANR	2674295	ElseStatement	else		2672461	0					
ANR	2674296	IfStatement	if ( num + regno >= 32 )		2672461	0					
ANR	2674297	Condition	num + regno >= 32	4522:14:187908:187924	2672461	0	True				
ANR	2674298	RelationalExpression	num + regno >= 32		2672461	0		>=			
ANR	2674299	AdditiveExpression	num + regno		2672461	0		+			
ANR	2674300	Identifier	num		2672461	0					
ANR	2674301	Identifier	regno		2672461	1					
ANR	2674302	PrimaryExpression	32		2672461	1					
ANR	2674303	CompoundStatement		380:33:10132:10132	2672461	1					
ANR	2674304	ExpressionStatement	"func ( stream , ""{d%d-<overflow reg d%d}"" , regno , regno + num )"	4523:4:187933:187993	2672461	0	True				
ANR	2674305	CallExpression	"func ( stream , ""{d%d-<overflow reg d%d}"" , regno , regno + num )"		2672461	0					
ANR	2674306	Callee	func		2672461	0					
ANR	2674307	Identifier	func		2672461	0					
ANR	2674308	ArgumentList	stream		2672461	1					
ANR	2674309	Argument	stream		2672461	0					
ANR	2674310	Identifier	stream		2672461	0					
ANR	2674311	Argument	"""{d%d-<overflow reg d%d}"""		2672461	1					
ANR	2674312	PrimaryExpression	"""{d%d-<overflow reg d%d}"""		2672461	0					
ANR	2674313	Argument	regno		2672461	2					
ANR	2674314	Identifier	regno		2672461	0					
ANR	2674315	Argument	regno + num		2672461	3					
ANR	2674316	AdditiveExpression	regno + num		2672461	0		+			
ANR	2674317	Identifier	regno		2672461	0					
ANR	2674318	Identifier	num		2672461	1					
ANR	2674319	ElseStatement	else		2672461	0					
ANR	2674320	CompoundStatement		382:10:10210:10210	2672461	0					
ANR	2674321	ExpressionStatement	"func ( stream , ""{d%d-d%d}"" , regno , regno + num )"	4525:4:188011:188057	2672461	0	True				
ANR	2674322	CallExpression	"func ( stream , ""{d%d-d%d}"" , regno , regno + num )"		2672461	0					
ANR	2674323	Callee	func		2672461	0					
ANR	2674324	Identifier	func		2672461	0					
ANR	2674325	ArgumentList	stream		2672461	1					
ANR	2674326	Argument	stream		2672461	0					
ANR	2674327	Identifier	stream		2672461	0					
ANR	2674328	Argument	"""{d%d-d%d}"""		2672461	1					
ANR	2674329	PrimaryExpression	"""{d%d-d%d}"""		2672461	0					
ANR	2674330	Argument	regno		2672461	2					
ANR	2674331	Identifier	regno		2672461	0					
ANR	2674332	Argument	regno + num		2672461	3					
ANR	2674333	AdditiveExpression	regno + num		2672461	0		+			
ANR	2674334	Identifier	regno		2672461	0					
ANR	2674335	Identifier	num		2672461	1					
ANR	2674336	BreakStatement	break ;	4528:8:188082:188087	2672461	25	True				
ANR	2674337	Label	case '0' :	4531:6:188097:188105	2672461	26	True				
ANR	2674338	Label	case '1' :	4531:16:188107:188115	2672461	27	True				
ANR	2674339	Label	case '2' :	4531:26:188117:188125	2672461	28	True				
ANR	2674340	Label	case '3' :	4531:36:188127:188135	2672461	29	True				
ANR	2674341	Label	case '4' :	4531:46:188137:188145	2672461	30	True				
ANR	2674342	Label	case '5' :	4532:6:188153:188161	2672461	31	True				
ANR	2674343	Label	case '6' :	4532:16:188163:188171	2672461	32	True				
ANR	2674344	Label	case '7' :	4532:26:188173:188181	2672461	33	True				
ANR	2674345	Label	case '8' :	4532:36:188183:188191	2672461	34	True				
ANR	2674346	Label	case '9' :	4532:46:188193:188201	2672461	35	True				
ANR	2674347	CompoundStatement		393:3:10435:10454	2672461	36					
ANR	2674348	IdentifierDeclStatement	int width ;	4534:3:188216:188225	2672461	0	True				
ANR	2674349	IdentifierDecl	width		2672461	0					
ANR	2674350	IdentifierDeclType	int		2672461	0					
ANR	2674351	Identifier	width		2672461	1					
ANR	2674352	IdentifierDeclStatement	unsigned long value ;	4535:3:188230:188249	2672461	1	True				
ANR	2674353	IdentifierDecl	value		2672461	0					
ANR	2674354	IdentifierDeclType	unsigned long		2672461	0					
ANR	2674355	Identifier	value		2672461	1					
ANR	2674356	ExpressionStatement	"c = arm_decode_bitfield ( c , given , & value , & width )"	4537:3:188255:188305	2672461	2	True				
ANR	2674357	AssignmentExpression	"c = arm_decode_bitfield ( c , given , & value , & width )"		2672461	0		=			
ANR	2674358	Identifier	c		2672461	0					
ANR	2674359	CallExpression	"arm_decode_bitfield ( c , given , & value , & width )"		2672461	1					
ANR	2674360	Callee	arm_decode_bitfield		2672461	0					
ANR	2674361	Identifier	arm_decode_bitfield		2672461	0					
ANR	2674362	ArgumentList	c		2672461	1					
ANR	2674363	Argument	c		2672461	0					
ANR	2674364	Identifier	c		2672461	0					
ANR	2674365	Argument	given		2672461	1					
ANR	2674366	Identifier	given		2672461	0					
ANR	2674367	Argument	& value		2672461	2					
ANR	2674368	UnaryOperationExpression	& value		2672461	0					
ANR	2674369	UnaryOperator	&		2672461	0					
ANR	2674370	Identifier	value		2672461	1					
ANR	2674371	Argument	& width		2672461	3					
ANR	2674372	UnaryOperationExpression	& width		2672461	0					
ANR	2674373	UnaryOperator	&		2672461	0					
ANR	2674374	Identifier	width		2672461	1					
ANR	2674375	SwitchStatement	switch ( * c )		2672461	3					
ANR	2674376	Condition	* c	4539:11:188319:188320	2672461	0	True				
ANR	2674377	UnaryOperationExpression	* c		2672461	0					
ANR	2674378	UnaryOperator	*		2672461	0					
ANR	2674379	Identifier	c		2672461	1					
ANR	2674380	CompoundStatement		398:5:10533:10533	2672461	1					
ANR	2674381	Label	case 'r' :	4541:5:188335:188343	2672461	0	True				
ANR	2674382	ExpressionStatement	"func ( stream , ""%s"" , arm_regnames [ value ] )"	4542:7:188352:188392	2672461	1	True				
ANR	2674383	CallExpression	"func ( stream , ""%s"" , arm_regnames [ value ] )"		2672461	0					
ANR	2674384	Callee	func		2672461	0					
ANR	2674385	Identifier	func		2672461	0					
ANR	2674386	ArgumentList	stream		2672461	1					
ANR	2674387	Argument	stream		2672461	0					
ANR	2674388	Identifier	stream		2672461	0					
ANR	2674389	Argument	"""%s"""		2672461	1					
ANR	2674390	PrimaryExpression	"""%s"""		2672461	0					
ANR	2674391	Argument	arm_regnames [ value ]		2672461	2					
ANR	2674392	ArrayIndexing	arm_regnames [ value ]		2672461	0					
ANR	2674393	Identifier	arm_regnames		2672461	0					
ANR	2674394	Identifier	value		2672461	1					
ANR	2674395	BreakStatement	break ;	4543:7:188401:188406	2672461	2	True				
ANR	2674396	Label	case 'd' :	4544:5:188413:188421	2672461	3	True				
ANR	2674397	ExpressionStatement	"func ( stream , ""%ld"" , value )"	4545:7:188430:188457	2672461	4	True				
ANR	2674398	CallExpression	"func ( stream , ""%ld"" , value )"		2672461	0					
ANR	2674399	Callee	func		2672461	0					
ANR	2674400	Identifier	func		2672461	0					
ANR	2674401	ArgumentList	stream		2672461	1					
ANR	2674402	Argument	stream		2672461	0					
ANR	2674403	Identifier	stream		2672461	0					
ANR	2674404	Argument	"""%ld"""		2672461	1					
ANR	2674405	PrimaryExpression	"""%ld"""		2672461	0					
ANR	2674406	Argument	value		2672461	2					
ANR	2674407	Identifier	value		2672461	0					
ANR	2674408	BreakStatement	break ;	4547:7:188502:188507	2672461	5	True				
ANR	2674409	Label	case 'e' :	4548:5:188514:188522	2672461	6	True				
ANR	2674410	ExpressionStatement	"func ( stream , ""%ld"" , ( 1ul << width ) - value )"	4549:7:188531:188575	2672461	7	True				
ANR	2674411	CallExpression	"func ( stream , ""%ld"" , ( 1ul << width ) - value )"		2672461	0					
ANR	2674412	Callee	func		2672461	0					
ANR	2674413	Identifier	func		2672461	0					
ANR	2674414	ArgumentList	stream		2672461	1					
ANR	2674415	Argument	stream		2672461	0					
ANR	2674416	Identifier	stream		2672461	0					
ANR	2674417	Argument	"""%ld"""		2672461	1					
ANR	2674418	PrimaryExpression	"""%ld"""		2672461	0					
ANR	2674419	Argument	( 1ul << width ) - value		2672461	2					
ANR	2674420	AdditiveExpression	( 1ul << width ) - value		2672461	0		-			
ANR	2674421	ShiftExpression	1ul << width		2672461	0		<<			
ANR	2674422	PrimaryExpression	1ul		2672461	0					
ANR	2674423	Identifier	width		2672461	1					
ANR	2674424	Identifier	value		2672461	1					
ANR	2674425	BreakStatement	break ;	4550:7:188584:188589	2672461	8	True				
ANR	2674426	Label	case 'S' :	4552:5:188597:188605	2672461	9	True				
ANR	2674427	Label	case 'T' :	4553:5:188612:188620	2672461	10	True				
ANR	2674428	Label	case 'U' :	4554:5:188627:188635	2672461	11	True				
ANR	2674429	CompoundStatement		417:9:10973:10991	2672461	12					
ANR	2674430	IdentifierDeclStatement	int base = 8 << ( * c - 'S' ) ;	4557:9:188694:188720	2672461	0	True				
ANR	2674431	IdentifierDecl	base = 8 << ( * c - 'S' )		2672461	0					
ANR	2674432	IdentifierDeclType	int		2672461	0					
ANR	2674433	Identifier	base		2672461	1					
ANR	2674434	AssignmentExpression	base = 8 << ( * c - 'S' )		2672461	2		=			
ANR	2674435	Identifier	base		2672461	0					
ANR	2674436	ShiftExpression	8 << ( * c - 'S' )		2672461	1		<<			
ANR	2674437	PrimaryExpression	8		2672461	0					
ANR	2674438	AdditiveExpression	* c - 'S'		2672461	1		-			
ANR	2674439	UnaryOperationExpression	* c		2672461	0					
ANR	2674440	UnaryOperator	*		2672461	0					
ANR	2674441	Identifier	c		2672461	1					
ANR	2674442	PrimaryExpression	'S'		2672461	1					
ANR	2674443	IdentifierDeclStatement	int limit ;	4558:9:188748:188757	2672461	1	True				
ANR	2674444	IdentifierDecl	limit		2672461	0					
ANR	2674445	IdentifierDeclType	int		2672461	0					
ANR	2674446	Identifier	limit		2672461	1					
ANR	2674447	IdentifierDeclStatement	"unsigned low , high ;"	4559:9:188768:188786	2672461	2	True				
ANR	2674448	IdentifierDecl	low		2672461	0					
ANR	2674449	IdentifierDeclType	unsigned		2672461	0					
ANR	2674450	Identifier	low		2672461	1					
ANR	2674451	IdentifierDecl	high		2672461	1					
ANR	2674452	IdentifierDeclType	unsigned		2672461	0					
ANR	2674453	Identifier	high		2672461	1					
ANR	2674454	ExpressionStatement	c ++	4561:9:188798:188801	2672461	3	True				
ANR	2674455	PostIncDecOperationExpression	c ++		2672461	0					
ANR	2674456	Identifier	c		2672461	0					
ANR	2674457	IncDec	++		2672461	1					
ANR	2674458	IfStatement	if ( * c >= '0' && * c <= '9' )		2672461	4					
ANR	2674459	Condition	* c >= '0' && * c <= '9'	4562:13:188816:188837	2672461	0	True				
ANR	2674460	AndExpression	* c >= '0' && * c <= '9'		2672461	0		&&			
ANR	2674461	RelationalExpression	* c >= '0'		2672461	0		>=			
ANR	2674462	UnaryOperationExpression	* c		2672461	0					
ANR	2674463	UnaryOperator	*		2672461	0					
ANR	2674464	Identifier	c		2672461	1					
ANR	2674465	PrimaryExpression	'0'		2672461	1					
ANR	2674466	RelationalExpression	* c <= '9'		2672461	1		<=			
ANR	2674467	UnaryOperationExpression	* c		2672461	0					
ANR	2674468	UnaryOperator	*		2672461	0					
ANR	2674469	Identifier	c		2672461	1					
ANR	2674470	PrimaryExpression	'9'		2672461	1					
ANR	2674471	CompoundStatement		420:37:11045:11045	2672461	1					
ANR	2674472	ExpressionStatement	limit = * c - '0'	4563:10:188852:188868	2672461	0	True				
ANR	2674473	AssignmentExpression	limit = * c - '0'		2672461	0		=			
ANR	2674474	Identifier	limit		2672461	0					
ANR	2674475	AdditiveExpression	* c - '0'		2672461	1		-			
ANR	2674476	UnaryOperationExpression	* c		2672461	0					
ANR	2674477	UnaryOperator	*		2672461	0					
ANR	2674478	Identifier	c		2672461	1					
ANR	2674479	PrimaryExpression	'0'		2672461	1					
ANR	2674480	ElseStatement	else		2672461	0					
ANR	2674481	IfStatement	if ( * c >= 'a' && * c <= 'f' )		2672461	0					
ANR	2674482	Condition	* c >= 'a' && * c <= 'f'	4564:20:188890:188911	2672461	0	True				
ANR	2674483	AndExpression	* c >= 'a' && * c <= 'f'		2672461	0		&&			
ANR	2674484	RelationalExpression	* c >= 'a'		2672461	0		>=			
ANR	2674485	UnaryOperationExpression	* c		2672461	0					
ANR	2674486	UnaryOperator	*		2672461	0					
ANR	2674487	Identifier	c		2672461	1					
ANR	2674488	PrimaryExpression	'a'		2672461	1					
ANR	2674489	RelationalExpression	* c <= 'f'		2672461	1		<=			
ANR	2674490	UnaryOperationExpression	* c		2672461	0					
ANR	2674491	UnaryOperator	*		2672461	0					
ANR	2674492	Identifier	c		2672461	1					
ANR	2674493	PrimaryExpression	'f'		2672461	1					
ANR	2674494	CompoundStatement		422:44:11119:11119	2672461	1					
ANR	2674495	ExpressionStatement	limit = * c - 'a' + 10	4565:10:188926:188947	2672461	0	True				
ANR	2674496	AssignmentExpression	limit = * c - 'a' + 10		2672461	0		=			
ANR	2674497	Identifier	limit		2672461	0					
ANR	2674498	AdditiveExpression	* c - 'a' + 10		2672461	1		-			
ANR	2674499	UnaryOperationExpression	* c		2672461	0					
ANR	2674500	UnaryOperator	*		2672461	0					
ANR	2674501	Identifier	c		2672461	1					
ANR	2674502	AdditiveExpression	'a' + 10		2672461	1		+			
ANR	2674503	PrimaryExpression	'a'		2672461	0					
ANR	2674504	PrimaryExpression	10		2672461	1					
ANR	2674505	ElseStatement	else		2672461	0					
ANR	2674506	CompoundStatement		424:16:11170:11170	2672461	0					
ANR	2674507	ReturnStatement	return FALSE ;	4567:10:188977:188989	2672461	0	True				
ANR	2674508	Identifier	FALSE		2672461	0					
ANR	2674509	ExpressionStatement	low = limit >> 2	4569:9:189011:189027	2672461	5	True				
ANR	2674510	AssignmentExpression	low = limit >> 2		2672461	0		=			
ANR	2674511	Identifier	low		2672461	0					
ANR	2674512	ShiftExpression	limit >> 2		2672461	1		>>			
ANR	2674513	Identifier	limit		2672461	0					
ANR	2674514	PrimaryExpression	2		2672461	1					
ANR	2674515	ExpressionStatement	high = limit & 3	4570:9:189038:189054	2672461	6	True				
ANR	2674516	AssignmentExpression	high = limit & 3		2672461	0		=			
ANR	2674517	Identifier	high		2672461	0					
ANR	2674518	BitAndExpression	limit & 3		2672461	1		&			
ANR	2674519	Identifier	limit		2672461	0					
ANR	2674520	PrimaryExpression	3		2672461	1					
ANR	2674521	IfStatement	if ( value < low || value > high )		2672461	7					
ANR	2674522	Condition	value < low || value > high	4572:13:189070:189096	2672461	0	True				
ANR	2674523	OrExpression	value < low || value > high		2672461	0		||			
ANR	2674524	RelationalExpression	value < low		2672461	0		<			
ANR	2674525	Identifier	value		2672461	0					
ANR	2674526	Identifier	low		2672461	1					
ANR	2674527	RelationalExpression	value > high		2672461	1		>			
ANR	2674528	Identifier	value		2672461	0					
ANR	2674529	Identifier	high		2672461	1					
ANR	2674530	CompoundStatement		430:42:11304:11304	2672461	1					
ANR	2674531	ExpressionStatement	"func ( stream , ""<illegal width %d>"" , base << value )"	4573:10:189111:189161	2672461	0	True				
ANR	2674532	CallExpression	"func ( stream , ""<illegal width %d>"" , base << value )"		2672461	0					
ANR	2674533	Callee	func		2672461	0					
ANR	2674534	Identifier	func		2672461	0					
ANR	2674535	ArgumentList	stream		2672461	1					
ANR	2674536	Argument	stream		2672461	0					
ANR	2674537	Identifier	stream		2672461	0					
ANR	2674538	Argument	"""<illegal width %d>"""		2672461	1					
ANR	2674539	PrimaryExpression	"""<illegal width %d>"""		2672461	0					
ANR	2674540	Argument	base << value		2672461	2					
ANR	2674541	ShiftExpression	base << value		2672461	0		<<			
ANR	2674542	Identifier	base		2672461	0					
ANR	2674543	Identifier	value		2672461	1					
ANR	2674544	ElseStatement	else		2672461	0					
ANR	2674545	CompoundStatement		432:16:11384:11384	2672461	0					
ANR	2674546	ExpressionStatement	"func ( stream , ""%d"" , base << value )"	4575:10:189191:189225	2672461	0	True				
ANR	2674547	CallExpression	"func ( stream , ""%d"" , base << value )"		2672461	0					
ANR	2674548	Callee	func		2672461	0					
ANR	2674549	Identifier	func		2672461	0					
ANR	2674550	ArgumentList	stream		2672461	1					
ANR	2674551	Argument	stream		2672461	0					
ANR	2674552	Identifier	stream		2672461	0					
ANR	2674553	Argument	"""%d"""		2672461	1					
ANR	2674554	PrimaryExpression	"""%d"""		2672461	0					
ANR	2674555	Argument	base << value		2672461	2					
ANR	2674556	ShiftExpression	base << value		2672461	0		<<			
ANR	2674557	Identifier	base		2672461	0					
ANR	2674558	Identifier	value		2672461	1					
ANR	2674559	BreakStatement	break ;	4578:7:189254:189259	2672461	13	True				
ANR	2674560	Label	case 'R' :	4579:5:189266:189274	2672461	14	True				
ANR	2674561	IfStatement	if ( given & ( 1 << 6 ) )		2672461	15					
ANR	2674562	Condition	given & ( 1 << 6 )	4580:10:189286:189301	2672461	0	True				
ANR	2674563	BitAndExpression	given & ( 1 << 6 )		2672461	0		&			
ANR	2674564	Identifier	given		2672461	0					
ANR	2674565	ShiftExpression	1 << 6		2672461	1		<<			
ANR	2674566	PrimaryExpression	1		2672461	0					
ANR	2674567	PrimaryExpression	6		2672461	1					
ANR	2674568	CompoundStatement		438:28:11509:11509	2672461	1					
ANR	2674569	GotoStatement	goto Q ;	4581:7:189313:189319	2672461	0	True				
ANR	2674570	Identifier	Q		2672461	0					
ANR	2674571	Label	case 'D' :	4584:5:189358:189366	2672461	16	True				
ANR	2674572	ExpressionStatement	"func ( stream , ""d%ld"" , value )"	4585:7:189375:189403	2672461	17	True				
ANR	2674573	CallExpression	"func ( stream , ""d%ld"" , value )"		2672461	0					
ANR	2674574	Callee	func		2672461	0					
ANR	2674575	Identifier	func		2672461	0					
ANR	2674576	ArgumentList	stream		2672461	1					
ANR	2674577	Argument	stream		2672461	0					
ANR	2674578	Identifier	stream		2672461	0					
ANR	2674579	Argument	"""d%ld"""		2672461	1					
ANR	2674580	PrimaryExpression	"""d%ld"""		2672461	0					
ANR	2674581	Argument	value		2672461	2					
ANR	2674582	Identifier	value		2672461	0					
ANR	2674583	BreakStatement	break ;	4586:7:189412:189417	2672461	18	True				
ANR	2674584	Label	case 'Q' :	4587:5:189424:189432	2672461	19	True				
ANR	2674585	Label	Q :	4588:5:189439:189440	2672461	20	True				
ANR	2674586	Identifier	Q		2672461	0					
ANR	2674587	IfStatement	if ( value & 1 )		2672461	21					
ANR	2674588	Condition	value & 1	4589:10:189452:189460	2672461	0	True				
ANR	2674589	BitAndExpression	value & 1		2672461	0		&			
ANR	2674590	Identifier	value		2672461	0					
ANR	2674591	PrimaryExpression	1		2672461	1					
ANR	2674592	CompoundStatement		447:21:11668:11668	2672461	1					
ANR	2674593	ExpressionStatement	"func ( stream , ""<illegal reg q%ld.5>"" , value >> 1 )"	4590:7:189472:189521	2672461	0	True				
ANR	2674594	CallExpression	"func ( stream , ""<illegal reg q%ld.5>"" , value >> 1 )"		2672461	0					
ANR	2674595	Callee	func		2672461	0					
ANR	2674596	Identifier	func		2672461	0					
ANR	2674597	ArgumentList	stream		2672461	1					
ANR	2674598	Argument	stream		2672461	0					
ANR	2674599	Identifier	stream		2672461	0					
ANR	2674600	Argument	"""<illegal reg q%ld.5>"""		2672461	1					
ANR	2674601	PrimaryExpression	"""<illegal reg q%ld.5>"""		2672461	0					
ANR	2674602	Argument	value >> 1		2672461	2					
ANR	2674603	ShiftExpression	value >> 1		2672461	0		>>			
ANR	2674604	Identifier	value		2672461	0					
ANR	2674605	PrimaryExpression	1		2672461	1					
ANR	2674606	ElseStatement	else		2672461	0					
ANR	2674607	CompoundStatement		449:13:11741:11741	2672461	0					
ANR	2674608	ExpressionStatement	"func ( stream , ""q%ld"" , value >> 1 )"	4592:7:189545:189578	2672461	0	True				
ANR	2674609	CallExpression	"func ( stream , ""q%ld"" , value >> 1 )"		2672461	0					
ANR	2674610	Callee	func		2672461	0					
ANR	2674611	Identifier	func		2672461	0					
ANR	2674612	ArgumentList	stream		2672461	1					
ANR	2674613	Argument	stream		2672461	0					
ANR	2674614	Identifier	stream		2672461	0					
ANR	2674615	Argument	"""q%ld"""		2672461	1					
ANR	2674616	PrimaryExpression	"""q%ld"""		2672461	0					
ANR	2674617	Argument	value >> 1		2672461	2					
ANR	2674618	ShiftExpression	value >> 1		2672461	0		>>			
ANR	2674619	Identifier	value		2672461	0					
ANR	2674620	PrimaryExpression	1		2672461	1					
ANR	2674621	BreakStatement	break ;	4594:6:189594:189599	2672461	22	True				
ANR	2674622	Label	case '`' :	4596:5:189607:189615	2672461	23	True				
ANR	2674623	ExpressionStatement	c ++	4597:7:189624:189627	2672461	24	True				
ANR	2674624	PostIncDecOperationExpression	c ++		2672461	0					
ANR	2674625	Identifier	c		2672461	0					
ANR	2674626	IncDec	++		2672461	1					
ANR	2674627	IfStatement	if ( value == 0 )		2672461	25					
ANR	2674628	Condition	value == 0	4598:11:189640:189649	2672461	0	True				
ANR	2674629	EqualityExpression	value == 0		2672461	0		==			
ANR	2674630	Identifier	value		2672461	0					
ANR	2674631	PrimaryExpression	0		2672461	1					
ANR	2674632	CompoundStatement		456:23:11857:11857	2672461	1					
ANR	2674633	ExpressionStatement	"func ( stream , ""%c"" , * c )"	4599:8:189662:189685	2672461	0	True				
ANR	2674634	CallExpression	"func ( stream , ""%c"" , * c )"		2672461	0					
ANR	2674635	Callee	func		2672461	0					
ANR	2674636	Identifier	func		2672461	0					
ANR	2674637	ArgumentList	stream		2672461	1					
ANR	2674638	Argument	stream		2672461	0					
ANR	2674639	Identifier	stream		2672461	0					
ANR	2674640	Argument	"""%c"""		2672461	1					
ANR	2674641	PrimaryExpression	"""%c"""		2672461	0					
ANR	2674642	Argument	* c		2672461	2					
ANR	2674643	UnaryOperationExpression	* c		2672461	0					
ANR	2674644	UnaryOperator	*		2672461	0					
ANR	2674645	Identifier	c		2672461	1					
ANR	2674646	BreakStatement	break ;	4601:7:189703:189708	2672461	26	True				
ANR	2674647	Label	case '\\'' :	4602:5:189715:189724	2672461	27	True				
ANR	2674648	ExpressionStatement	c ++	4603:7:189733:189736	2672461	28	True				
ANR	2674649	PostIncDecOperationExpression	c ++		2672461	0					
ANR	2674650	Identifier	c		2672461	0					
ANR	2674651	IncDec	++		2672461	1					
ANR	2674652	IfStatement	if ( value == ( ( 1ul << width ) - 1 ) )		2672461	29					
ANR	2674653	Condition	value == ( ( 1ul << width ) - 1 )	4604:11:189749:189777	2672461	0	True				
ANR	2674654	EqualityExpression	value == ( ( 1ul << width ) - 1 )		2672461	0		==			
ANR	2674655	Identifier	value		2672461	0					
ANR	2674656	AdditiveExpression	( 1ul << width ) - 1		2672461	1		-			
ANR	2674657	ShiftExpression	1ul << width		2672461	0		<<			
ANR	2674658	PrimaryExpression	1ul		2672461	0					
ANR	2674659	Identifier	width		2672461	1					
ANR	2674660	PrimaryExpression	1		2672461	1					
ANR	2674661	CompoundStatement		462:42:11985:11985	2672461	1					
ANR	2674662	ExpressionStatement	"func ( stream , ""%c"" , * c )"	4605:8:189790:189813	2672461	0	True				
ANR	2674663	CallExpression	"func ( stream , ""%c"" , * c )"		2672461	0					
ANR	2674664	Callee	func		2672461	0					
ANR	2674665	Identifier	func		2672461	0					
ANR	2674666	ArgumentList	stream		2672461	1					
ANR	2674667	Argument	stream		2672461	0					
ANR	2674668	Identifier	stream		2672461	0					
ANR	2674669	Argument	"""%c"""		2672461	1					
ANR	2674670	PrimaryExpression	"""%c"""		2672461	0					
ANR	2674671	Argument	* c		2672461	2					
ANR	2674672	UnaryOperationExpression	* c		2672461	0					
ANR	2674673	UnaryOperator	*		2672461	0					
ANR	2674674	Identifier	c		2672461	1					
ANR	2674675	BreakStatement	break ;	4607:7:189831:189836	2672461	30	True				
ANR	2674676	Label	case '?' :	4608:5:189843:189851	2672461	31	True				
ANR	2674677	ExpressionStatement	"func ( stream , ""%c"" , c [ ( 1 << width ) - ( int ) value ] )"	4609:7:189860:189910	2672461	32	True				
ANR	2674678	CallExpression	"func ( stream , ""%c"" , c [ ( 1 << width ) - ( int ) value ] )"		2672461	0					
ANR	2674679	Callee	func		2672461	0					
ANR	2674680	Identifier	func		2672461	0					
ANR	2674681	ArgumentList	stream		2672461	1					
ANR	2674682	Argument	stream		2672461	0					
ANR	2674683	Identifier	stream		2672461	0					
ANR	2674684	Argument	"""%c"""		2672461	1					
ANR	2674685	PrimaryExpression	"""%c"""		2672461	0					
ANR	2674686	Argument	c [ ( 1 << width ) - ( int ) value ]		2672461	2					
ANR	2674687	ArrayIndexing	c [ ( 1 << width ) - ( int ) value ]		2672461	0					
ANR	2674688	Identifier	c		2672461	0					
ANR	2674689	AdditiveExpression	( 1 << width ) - ( int ) value		2672461	1		-			
ANR	2674690	ShiftExpression	1 << width		2672461	0		<<			
ANR	2674691	PrimaryExpression	1		2672461	0					
ANR	2674692	Identifier	width		2672461	1					
ANR	2674693	CastExpression	( int ) value		2672461	1					
ANR	2674694	CastTarget	int		2672461	0					
ANR	2674695	Identifier	value		2672461	1					
ANR	2674696	ExpressionStatement	c += 1 << width	4610:7:189919:189934	2672461	33	True				
ANR	2674697	AssignmentExpression	c += 1 << width		2672461	0		+=			
ANR	2674698	Identifier	c		2672461	0					
ANR	2674699	ShiftExpression	1 << width		2672461	1		<<			
ANR	2674700	PrimaryExpression	1		2672461	0					
ANR	2674701	Identifier	width		2672461	1					
ANR	2674702	BreakStatement	break ;	4611:7:189943:189948	2672461	34	True				
ANR	2674703	Label	default :	4612:5:189955:189962	2672461	35	True				
ANR	2674704	Identifier	default		2672461	0					
ANR	2674705	ReturnStatement	return FALSE ;	4613:7:189971:189983	2672461	36	True				
ANR	2674706	Identifier	FALSE		2672461	0					
ANR	2674707	BreakStatement	break ;	4615:3:189995:190000	2672461	4	True				
ANR	2674708	Label	default :	4617:8:190011:190018	2672461	5	True				
ANR	2674709	Identifier	default		2672461	0					
ANR	2674710	ReturnStatement	return FALSE ;	4618:3:190023:190035	2672461	6	True				
ANR	2674711	Identifier	FALSE		2672461	0					
ANR	2674712	ElseStatement	else		2672461	0					
ANR	2674713	CompoundStatement		479:14:12274:12274	2672461	0					
ANR	2674714	ExpressionStatement	"func ( stream , ""%c"" , * c )"	4622:8:190079:190102	2672461	0	True				
ANR	2674715	CallExpression	"func ( stream , ""%c"" , * c )"		2672461	0					
ANR	2674716	Callee	func		2672461	0					
ANR	2674717	Identifier	func		2672461	0					
ANR	2674718	ArgumentList	stream		2672461	1					
ANR	2674719	Argument	stream		2672461	0					
ANR	2674720	Identifier	stream		2672461	0					
ANR	2674721	Argument	"""%c"""		2672461	1					
ANR	2674722	PrimaryExpression	"""%c"""		2672461	0					
ANR	2674723	Argument	* c		2672461	2					
ANR	2674724	UnaryOperationExpression	* c		2672461	0					
ANR	2674725	UnaryOperator	*		2672461	0					
ANR	2674726	Identifier	c		2672461	1					
ANR	2674727	IfStatement	if ( value_in_comment > 32 || value_in_comment < - 16 )		2672461	3					
ANR	2674728	Condition	value_in_comment > 32 || value_in_comment < - 16	4627:7:190134:190180	2672461	0	True				
ANR	2674729	OrExpression	value_in_comment > 32 || value_in_comment < - 16		2672461	0		||			
ANR	2674730	RelationalExpression	value_in_comment > 32		2672461	0		>			
ANR	2674731	Identifier	value_in_comment		2672461	0					
ANR	2674732	PrimaryExpression	32		2672461	1					
ANR	2674733	RelationalExpression	value_in_comment < - 16		2672461	1		<			
ANR	2674734	Identifier	value_in_comment		2672461	0					
ANR	2674735	UnaryOperationExpression	- 16		2672461	1					
ANR	2674736	UnaryOperator	-		2672461	0					
ANR	2674737	PrimaryExpression	16		2672461	1					
ANR	2674738	ExpressionStatement	"func ( stream , "" ; 0x%lx"" , value_in_comment )"	4628:5:190188:190231	2672461	1	True				
ANR	2674739	CallExpression	"func ( stream , "" ; 0x%lx"" , value_in_comment )"		2672461	0					
ANR	2674740	Callee	func		2672461	0					
ANR	2674741	Identifier	func		2672461	0					
ANR	2674742	ArgumentList	stream		2672461	1					
ANR	2674743	Argument	stream		2672461	0					
ANR	2674744	Identifier	stream		2672461	0					
ANR	2674745	Argument	""" ; 0x%lx"""		2672461	1					
ANR	2674746	PrimaryExpression	""" ; 0x%lx"""		2672461	0					
ANR	2674747	Argument	value_in_comment		2672461	2					
ANR	2674748	Identifier	value_in_comment		2672461	0					
ANR	2674749	IfStatement	if ( is_unpredictable )		2672461	4					
ANR	2674750	Condition	is_unpredictable	4631:9:190250:190265	2672461	0	True				
ANR	2674751	Identifier	is_unpredictable		2672461	0					
ANR	2674752	CompoundStatement		489:27:12473:12473	2672461	1					
ANR	2674753	ExpressionStatement	"func ( stream , UNPREDICTABLE_INSTRUCTION )"	4632:6:190276:190316	2672461	0	True				
ANR	2674754	CallExpression	"func ( stream , UNPREDICTABLE_INSTRUCTION )"		2672461	0					
ANR	2674755	Callee	func		2672461	0					
ANR	2674756	Identifier	func		2672461	0					
ANR	2674757	ArgumentList	stream		2672461	1					
ANR	2674758	Argument	stream		2672461	0					
ANR	2674759	Identifier	stream		2672461	0					
ANR	2674760	Argument	UNPREDICTABLE_INSTRUCTION		2672461	1					
ANR	2674761	Identifier	UNPREDICTABLE_INSTRUCTION		2672461	0					
ANR	2674762	ReturnStatement	return TRUE ;	4635:5:190331:190342	2672461	5	True				
ANR	2674763	Identifier	TRUE		2672461	0					
ANR	2674764	ReturnStatement	return FALSE ;	4638:2:190355:190367	2672461	5	True				
ANR	2674765	Identifier	FALSE		2672461	0					
ANR	2674766	ReturnType	static bfd_boolean		2672461	1					
ANR	2674767	Identifier	print_insn_neon		2672461	2					
ANR	2674768	ParameterList	"struct disassemble_info * info , long given , bfd_boolean thumb"		2672461	3					
ANR	2674769	Parameter	struct disassemble_info * info	4142:17:177732:177760	2672461	0	True				
ANR	2674770	ParameterType	struct disassemble_info *		2672461	0					
ANR	2674771	Identifier	info		2672461	1					
ANR	2674772	Parameter	long given	4142:48:177763:177772	2672461	1	True				
ANR	2674773	ParameterType	long		2672461	0					
ANR	2674774	Identifier	given		2672461	1					
ANR	2674775	Parameter	bfd_boolean thumb	4142:60:177775:177791	2672461	2	True				
ANR	2674776	ParameterType	bfd_boolean		2672461	0					
ANR	2674777	Identifier	thumb		2672461	1					
ANR	2674778	CFGEntryNode	ENTRY		2672461		True				
ANR	2674779	CFGExitNode	EXIT		2672461		True				
ANR	2674780	Symbol	& value		2672461						
ANR	2674781	Symbol	neon_opcodes		2672461						
ANR	2674782	Symbol	bit28		2672461						
ANR	2674783	Symbol	UNPREDICTABLE_INSTRUCTION		2672461						
ANR	2674784	Symbol	shift		2672461						
ANR	2674785	Symbol	num		2672461						
ANR	2674786	Symbol	isfloat		2672461						
ANR	2674787	Symbol	align		2672461						
ANR	2674788	Symbol	type		2672461						
ANR	2674789	Symbol	stride		2672461						
ANR	2674790	Symbol	info -> fprintf_func		2672461						
ANR	2674791	Symbol	IFTHEN_COND		2672461						
ANR	2674792	Symbol	high		2672461						
ANR	2674793	Symbol	* arm_conditional		2672461						
ANR	2674794	Symbol	reg		2672461						
ANR	2674795	Symbol	tmp		2672461						
ANR	2674796	Symbol	~0xffffffffL		2672461						
ANR	2674797	Symbol	limit		2672461						
ANR	2674798	Symbol	valbytes		2672461						
ANR	2674799	Symbol	idx_align		2672461						
ANR	2674800	Symbol	info		2672461						
ANR	2674801	Symbol	cmode		2672461						
ANR	2674802	Symbol	regno		2672461						
ANR	2674803	Symbol	given		2672461						
ANR	2674804	Symbol	arm_decode_bitfield		2672461						
ANR	2674805	Symbol	insn -> value		2672461						
ANR	2674806	Symbol	bits		2672461						
ANR	2674807	Symbol	TRUE		2672461						
ANR	2674808	Symbol	is_unpredictable		2672461						
ANR	2674809	Symbol	* valbytes		2672461						
ANR	2674810	Symbol	ix		2672461						
ANR	2674811	Symbol	rd		2672461						
ANR	2674812	Symbol	size		2672461						
ANR	2674813	Symbol	ifthen_state		2672461						
ANR	2674814	Symbol	rm		2672461						
ANR	2674815	Symbol	* enc		2672461						
ANR	2674816	Symbol	raw_reg		2672461						
ANR	2674817	Symbol	arm_conditional		2672461						
ANR	2674818	Symbol	rn		2672461						
ANR	2674819	Symbol	idx		2672461						
ANR	2674820	Symbol	* arm_regnames		2672461						
ANR	2674821	Symbol	amask		2672461						
ANR	2674822	Symbol	thumb		2672461						
ANR	2674823	Symbol	& width		2672461						
ANR	2674824	Symbol	info -> stream		2672461						
ANR	2674825	Symbol	* width		2672461						
ANR	2674826	Symbol	value_in_comment		2672461						
ANR	2674827	Symbol	stream		2672461						
ANR	2674828	Symbol	* type		2672461						
ANR	2674829	Symbol	low		2672461						
ANR	2674830	Symbol	* IFTHEN_COND		2672461						
ANR	2674831	Symbol	* ++ c		2672461						
ANR	2674832	Symbol	enc		2672461						
ANR	2674833	Symbol	arm_regnames		2672461						
ANR	2674834	Symbol	value		2672461						
ANR	2674835	Symbol	mask		2672461						
ANR	2674836	Symbol	* rn		2672461						
ANR	2674837	Symbol	op		2672461						
ANR	2674838	Symbol	* rm		2672461						
ANR	2674839	Symbol	c		2672461						
ANR	2674840	Symbol	length		2672461						
ANR	2674841	Symbol	* insn		2672461						
ANR	2674842	Symbol	i		2672461						
ANR	2674843	Symbol	hival		2672461						
ANR	2674844	Symbol	& fvalue		2672461						
ANR	2674845	Symbol	* c		2672461						
ANR	2674846	Symbol	n		2672461						
ANR	2674847	Symbol	insn		2672461						
ANR	2674848	Symbol	fvalue		2672461						
ANR	2674849	Symbol	func		2672461						
ANR	2674850	Symbol	* value		2672461						
ANR	2674851	Symbol	width		2672461						
ANR	2674852	Symbol	FALSE		2672461						
ANR	2674853	Symbol	* info		2672461						
ANR	2674854	Symbol	& floatformat_ieee_single_little		2672461						
ANR	2674855	Symbol	insn -> mask		2672461						
ANR	2674856	Symbol	insn -> assembler		2672461						
ANR	2674857	Symbol	base		2672461						
ANR	2674858	Function	banked_regname	4643:0:190423:191674							
ANR	2674859	FunctionDef	banked_regname (unsigned reg)		2674858	0					
ANR	2674860	CompoundStatement		4645:0:190473:191674	2674858	0					
ANR	2674861	SwitchStatement	switch ( reg )		2674858	0					
ANR	2674862	Condition	reg	4646:10:190485:190487	2674858	0	True				
ANR	2674863	Identifier	reg		2674858	0					
ANR	2674864	CompoundStatement		3:4:20:20	2674858	1					
ANR	2674865	Label	case 15 :	4648:6:190502:190509	2674858	0	True				
ANR	2674866	ReturnStatement	"return ""CPSR"" ;"	4648:15:190511:190524	2674858	1	True				
ANR	2674867	PrimaryExpression	"""CPSR"""		2674858	0					
ANR	2674868	Label	case 32 :	4649:6:190532:190539	2674858	2	True				
ANR	2674869	ReturnStatement	"return ""R8_usr"" ;"	4649:15:190541:190556	2674858	3	True				
ANR	2674870	PrimaryExpression	"""R8_usr"""		2674858	0					
ANR	2674871	Label	case 33 :	4650:6:190564:190571	2674858	4	True				
ANR	2674872	ReturnStatement	"return ""R9_usr"" ;"	4650:15:190573:190588	2674858	5	True				
ANR	2674873	PrimaryExpression	"""R9_usr"""		2674858	0					
ANR	2674874	Label	case 34 :	4651:6:190596:190603	2674858	6	True				
ANR	2674875	ReturnStatement	"return ""R10_usr"" ;"	4651:15:190605:190621	2674858	7	True				
ANR	2674876	PrimaryExpression	"""R10_usr"""		2674858	0					
ANR	2674877	Label	case 35 :	4652:6:190629:190636	2674858	8	True				
ANR	2674878	ReturnStatement	"return ""R11_usr"" ;"	4652:15:190638:190654	2674858	9	True				
ANR	2674879	PrimaryExpression	"""R11_usr"""		2674858	0					
ANR	2674880	Label	case 36 :	4653:6:190662:190669	2674858	10	True				
ANR	2674881	ReturnStatement	"return ""R12_usr"" ;"	4653:15:190671:190687	2674858	11	True				
ANR	2674882	PrimaryExpression	"""R12_usr"""		2674858	0					
ANR	2674883	Label	case 37 :	4654:6:190695:190702	2674858	12	True				
ANR	2674884	ReturnStatement	"return ""SP_usr"" ;"	4654:15:190704:190719	2674858	13	True				
ANR	2674885	PrimaryExpression	"""SP_usr"""		2674858	0					
ANR	2674886	Label	case 38 :	4655:6:190727:190734	2674858	14	True				
ANR	2674887	ReturnStatement	"return ""LR_usr"" ;"	4655:15:190736:190751	2674858	15	True				
ANR	2674888	PrimaryExpression	"""LR_usr"""		2674858	0					
ANR	2674889	Label	case 40 :	4656:6:190759:190766	2674858	16	True				
ANR	2674890	ReturnStatement	"return ""R8_fiq"" ;"	4656:15:190768:190783	2674858	17	True				
ANR	2674891	PrimaryExpression	"""R8_fiq"""		2674858	0					
ANR	2674892	Label	case 41 :	4657:6:190791:190798	2674858	18	True				
ANR	2674893	ReturnStatement	"return ""R9_fiq"" ;"	4657:15:190800:190815	2674858	19	True				
ANR	2674894	PrimaryExpression	"""R9_fiq"""		2674858	0					
ANR	2674895	Label	case 42 :	4658:6:190823:190830	2674858	20	True				
ANR	2674896	ReturnStatement	"return ""R10_fiq"" ;"	4658:15:190832:190848	2674858	21	True				
ANR	2674897	PrimaryExpression	"""R10_fiq"""		2674858	0					
ANR	2674898	Label	case 43 :	4659:6:190856:190863	2674858	22	True				
ANR	2674899	ReturnStatement	"return ""R11_fiq"" ;"	4659:15:190865:190881	2674858	23	True				
ANR	2674900	PrimaryExpression	"""R11_fiq"""		2674858	0					
ANR	2674901	Label	case 44 :	4660:6:190889:190896	2674858	24	True				
ANR	2674902	ReturnStatement	"return ""R12_fiq"" ;"	4660:15:190898:190914	2674858	25	True				
ANR	2674903	PrimaryExpression	"""R12_fiq"""		2674858	0					
ANR	2674904	Label	case 45 :	4661:6:190922:190929	2674858	26	True				
ANR	2674905	ReturnStatement	"return ""SP_fiq"" ;"	4661:15:190931:190946	2674858	27	True				
ANR	2674906	PrimaryExpression	"""SP_fiq"""		2674858	0					
ANR	2674907	Label	case 46 :	4662:6:190954:190961	2674858	28	True				
ANR	2674908	ReturnStatement	"return ""LR_fiq"" ;"	4662:15:190963:190978	2674858	29	True				
ANR	2674909	PrimaryExpression	"""LR_fiq"""		2674858	0					
ANR	2674910	Label	case 48 :	4663:6:190986:190993	2674858	30	True				
ANR	2674911	ReturnStatement	"return ""LR_irq"" ;"	4663:15:190995:191010	2674858	31	True				
ANR	2674912	PrimaryExpression	"""LR_irq"""		2674858	0					
ANR	2674913	Label	case 49 :	4664:6:191018:191025	2674858	32	True				
ANR	2674914	ReturnStatement	"return ""SP_irq"" ;"	4664:15:191027:191042	2674858	33	True				
ANR	2674915	PrimaryExpression	"""SP_irq"""		2674858	0					
ANR	2674916	Label	case 50 :	4665:6:191050:191057	2674858	34	True				
ANR	2674917	ReturnStatement	"return ""LR_svc"" ;"	4665:15:191059:191074	2674858	35	True				
ANR	2674918	PrimaryExpression	"""LR_svc"""		2674858	0					
ANR	2674919	Label	case 51 :	4666:6:191082:191089	2674858	36	True				
ANR	2674920	ReturnStatement	"return ""SP_svc"" ;"	4666:15:191091:191106	2674858	37	True				
ANR	2674921	PrimaryExpression	"""SP_svc"""		2674858	0					
ANR	2674922	Label	case 52 :	4667:6:191114:191121	2674858	38	True				
ANR	2674923	ReturnStatement	"return ""LR_abt"" ;"	4667:15:191123:191138	2674858	39	True				
ANR	2674924	PrimaryExpression	"""LR_abt"""		2674858	0					
ANR	2674925	Label	case 53 :	4668:6:191146:191153	2674858	40	True				
ANR	2674926	ReturnStatement	"return ""SP_abt"" ;"	4668:15:191155:191170	2674858	41	True				
ANR	2674927	PrimaryExpression	"""SP_abt"""		2674858	0					
ANR	2674928	Label	case 54 :	4669:6:191178:191185	2674858	42	True				
ANR	2674929	ReturnStatement	"return ""LR_und"" ;"	4669:15:191187:191202	2674858	43	True				
ANR	2674930	PrimaryExpression	"""LR_und"""		2674858	0					
ANR	2674931	Label	case 55 :	4670:6:191210:191217	2674858	44	True				
ANR	2674932	ReturnStatement	"return ""SP_und"" ;"	4670:15:191219:191234	2674858	45	True				
ANR	2674933	PrimaryExpression	"""SP_und"""		2674858	0					
ANR	2674934	Label	case 60 :	4671:6:191242:191249	2674858	46	True				
ANR	2674935	ReturnStatement	"return ""LR_mon"" ;"	4671:15:191251:191266	2674858	47	True				
ANR	2674936	PrimaryExpression	"""LR_mon"""		2674858	0					
ANR	2674937	Label	case 61 :	4672:6:191274:191281	2674858	48	True				
ANR	2674938	ReturnStatement	"return ""SP_mon"" ;"	4672:15:191283:191298	2674858	49	True				
ANR	2674939	PrimaryExpression	"""SP_mon"""		2674858	0					
ANR	2674940	Label	case 62 :	4673:6:191306:191313	2674858	50	True				
ANR	2674941	ReturnStatement	"return ""ELR_hyp"" ;"	4673:15:191315:191331	2674858	51	True				
ANR	2674942	PrimaryExpression	"""ELR_hyp"""		2674858	0					
ANR	2674943	Label	case 63 :	4674:6:191339:191346	2674858	52	True				
ANR	2674944	ReturnStatement	"return ""SP_hyp"" ;"	4674:15:191348:191363	2674858	53	True				
ANR	2674945	PrimaryExpression	"""SP_hyp"""		2674858	0					
ANR	2674946	Label	case 79 :	4675:6:191371:191378	2674858	54	True				
ANR	2674947	ReturnStatement	"return ""SPSR"" ;"	4675:15:191380:191393	2674858	55	True				
ANR	2674948	PrimaryExpression	"""SPSR"""		2674858	0					
ANR	2674949	Label	case 110 :	4676:6:191401:191409	2674858	56	True				
ANR	2674950	ReturnStatement	"return ""SPSR_fiq"" ;"	4676:16:191411:191428	2674858	57	True				
ANR	2674951	PrimaryExpression	"""SPSR_fiq"""		2674858	0					
ANR	2674952	Label	case 112 :	4677:6:191436:191444	2674858	58	True				
ANR	2674953	ReturnStatement	"return ""SPSR_irq"" ;"	4677:16:191446:191463	2674858	59	True				
ANR	2674954	PrimaryExpression	"""SPSR_irq"""		2674858	0					
ANR	2674955	Label	case 114 :	4678:6:191471:191479	2674858	60	True				
ANR	2674956	ReturnStatement	"return ""SPSR_svc"" ;"	4678:16:191481:191498	2674858	61	True				
ANR	2674957	PrimaryExpression	"""SPSR_svc"""		2674858	0					
ANR	2674958	Label	case 116 :	4679:6:191506:191514	2674858	62	True				
ANR	2674959	ReturnStatement	"return ""SPSR_abt"" ;"	4679:16:191516:191533	2674858	63	True				
ANR	2674960	PrimaryExpression	"""SPSR_abt"""		2674858	0					
ANR	2674961	Label	case 118 :	4680:6:191541:191549	2674858	64	True				
ANR	2674962	ReturnStatement	"return ""SPSR_und"" ;"	4680:16:191551:191568	2674858	65	True				
ANR	2674963	PrimaryExpression	"""SPSR_und"""		2674858	0					
ANR	2674964	Label	case 124 :	4681:6:191576:191584	2674858	66	True				
ANR	2674965	ReturnStatement	"return ""SPSR_mon"" ;"	4681:16:191586:191603	2674858	67	True				
ANR	2674966	PrimaryExpression	"""SPSR_mon"""		2674858	0					
ANR	2674967	Label	case 126 :	4682:6:191611:191619	2674858	68	True				
ANR	2674968	ReturnStatement	"return ""SPSR_hyp"" ;"	4682:16:191621:191638	2674858	69	True				
ANR	2674969	PrimaryExpression	"""SPSR_hyp"""		2674858	0					
ANR	2674970	Label	default :	4683:6:191646:191653	2674858	70	True				
ANR	2674971	Identifier	default		2674858	0					
ANR	2674972	ReturnStatement	return NULL ;	4683:15:191655:191666	2674858	71	True				
ANR	2674973	Identifier	NULL		2674858	0					
ANR	2674974	ReturnType	static const char *		2674858	1					
ANR	2674975	Identifier	banked_regname		2674858	2					
ANR	2674976	ParameterList	unsigned reg		2674858	3					
ANR	2674977	Parameter	unsigned reg	4644:16:190459:190470	2674858	0	True				
ANR	2674978	ParameterType	unsigned		2674858	0					
ANR	2674979	Identifier	reg		2674858	1					
ANR	2674980	CFGEntryNode	ENTRY		2674858		True				
ANR	2674981	CFGExitNode	EXIT		2674858		True				
ANR	2674982	Symbol	NULL		2674858						
ANR	2674983	Symbol	reg		2674858						
ANR	2674984	Function	data_barrier_option	4688:0:191723:192189							
ANR	2674985	FunctionDef	data_barrier_option (unsigned option)		2674984	0					
ANR	2674986	CompoundStatement		4690:0:191781:192189	2674984	0					
ANR	2674987	SwitchStatement	switch ( option & 0xf )		2674984	0					
ANR	2674988	Condition	option & 0xf	4691:10:191793:191804	2674984	0	True				
ANR	2674989	BitAndExpression	option & 0xf		2674984	0		&			
ANR	2674990	Identifier	option		2674984	0					
ANR	2674991	PrimaryExpression	0xf		2674984	1					
ANR	2674992	CompoundStatement		3:4:29:29	2674984	1					
ANR	2674993	Label	case 0xf :	4693:4:191817:191825	2674984	0	True				
ANR	2674994	ReturnStatement	"return ""sy"" ;"	4693:14:191827:191838	2674984	1	True				
ANR	2674995	PrimaryExpression	"""sy"""		2674984	0					
ANR	2674996	Label	case 0xe :	4694:4:191844:191852	2674984	2	True				
ANR	2674997	ReturnStatement	"return ""st"" ;"	4694:14:191854:191865	2674984	3	True				
ANR	2674998	PrimaryExpression	"""st"""		2674984	0					
ANR	2674999	Label	case 0xd :	4695:4:191871:191879	2674984	4	True				
ANR	2675000	ReturnStatement	"return ""ld"" ;"	4695:14:191881:191892	2674984	5	True				
ANR	2675001	PrimaryExpression	"""ld"""		2674984	0					
ANR	2675002	Label	case 0xb :	4696:4:191898:191906	2674984	6	True				
ANR	2675003	ReturnStatement	"return ""ish"" ;"	4696:14:191908:191920	2674984	7	True				
ANR	2675004	PrimaryExpression	"""ish"""		2674984	0					
ANR	2675005	Label	case 0xa :	4697:4:191926:191934	2674984	8	True				
ANR	2675006	ReturnStatement	"return ""ishst"" ;"	4697:14:191936:191950	2674984	9	True				
ANR	2675007	PrimaryExpression	"""ishst"""		2674984	0					
ANR	2675008	Label	case 0x9 :	4698:4:191956:191964	2674984	10	True				
ANR	2675009	ReturnStatement	"return ""ishld"" ;"	4698:14:191966:191980	2674984	11	True				
ANR	2675010	PrimaryExpression	"""ishld"""		2674984	0					
ANR	2675011	Label	case 0x7 :	4699:4:191986:191994	2674984	12	True				
ANR	2675012	ReturnStatement	"return ""un"" ;"	4699:14:191996:192007	2674984	13	True				
ANR	2675013	PrimaryExpression	"""un"""		2674984	0					
ANR	2675014	Label	case 0x6 :	4700:4:192013:192021	2674984	14	True				
ANR	2675015	ReturnStatement	"return ""unst"" ;"	4700:14:192023:192036	2674984	15	True				
ANR	2675016	PrimaryExpression	"""unst"""		2674984	0					
ANR	2675017	Label	case 0x5 :	4701:4:192042:192050	2674984	16	True				
ANR	2675018	ReturnStatement	"return ""nshld"" ;"	4701:14:192052:192066	2674984	17	True				
ANR	2675019	PrimaryExpression	"""nshld"""		2674984	0					
ANR	2675020	Label	case 0x3 :	4702:4:192072:192080	2674984	18	True				
ANR	2675021	ReturnStatement	"return ""osh"" ;"	4702:14:192082:192094	2674984	19	True				
ANR	2675022	PrimaryExpression	"""osh"""		2674984	0					
ANR	2675023	Label	case 0x2 :	4703:4:192100:192108	2674984	20	True				
ANR	2675024	ReturnStatement	"return ""oshst"" ;"	4703:14:192110:192124	2674984	21	True				
ANR	2675025	PrimaryExpression	"""oshst"""		2674984	0					
ANR	2675026	Label	case 0x1 :	4704:4:192130:192138	2674984	22	True				
ANR	2675027	ReturnStatement	"return ""oshld"" ;"	4704:14:192140:192154	2674984	23	True				
ANR	2675028	PrimaryExpression	"""oshld"""		2674984	0					
ANR	2675029	Label	default :	4705:4:192160:192167	2674984	24	True				
ANR	2675030	Identifier	default		2674984	0					
ANR	2675031	ReturnStatement	return NULL ;	4705:14:192170:192181	2674984	25	True				
ANR	2675032	Identifier	NULL		2674984	0					
ANR	2675033	ReturnType	static const char *		2674984	1					
ANR	2675034	Identifier	data_barrier_option		2674984	2					
ANR	2675035	ParameterList	unsigned option		2674984	3					
ANR	2675036	Parameter	unsigned option	4689:21:191764:191778	2674984	0	True				
ANR	2675037	ParameterType	unsigned		2674984	0					
ANR	2675038	Identifier	option		2674984	1					
ANR	2675039	CFGEntryNode	ENTRY		2674984		True				
ANR	2675040	CFGExitNode	EXIT		2674984		True				
ANR	2675041	Symbol	NULL		2674984						
ANR	2675042	Symbol	option		2674984						
ANR	2675043	Function	print_insn_arm	4711:0:192251:205787							
ANR	2675044	FunctionDef	"print_insn_arm (bfd_vma pc , struct disassemble_info * info , long given)"		2675043	0					
ANR	2675045	CompoundStatement		4713:0:192334:205787	2675043	0					
ANR	2675046	IdentifierDeclStatement	const struct opcode32 * insn ;	4714:2:192338:192365	2675043	0	True				
ANR	2675047	IdentifierDecl	* insn		2675043	0					
ANR	2675048	IdentifierDeclType	const struct opcode32 *		2675043	0					
ANR	2675049	Identifier	insn		2675043	1					
ANR	2675050	IdentifierDeclStatement	void * stream = info -> stream ;	4715:2:192369:192396	2675043	1	True				
ANR	2675051	IdentifierDecl	* stream = info -> stream		2675043	0					
ANR	2675052	IdentifierDeclType	void *		2675043	0					
ANR	2675053	Identifier	stream		2675043	1					
ANR	2675054	AssignmentExpression	* stream = info -> stream		2675043	2		=			
ANR	2675055	Identifier	stream		2675043	0					
ANR	2675056	PtrMemberAccess	info -> stream		2675043	1					
ANR	2675057	Identifier	info		2675043	0					
ANR	2675058	Identifier	stream		2675043	1					
ANR	2675059	IdentifierDeclStatement	fprintf_ftype func = info -> fprintf_func ;	4716:2:192400:192439	2675043	2	True				
ANR	2675060	IdentifierDecl	func = info -> fprintf_func		2675043	0					
ANR	2675061	IdentifierDeclType	fprintf_ftype		2675043	0					
ANR	2675062	Identifier	func		2675043	1					
ANR	2675063	AssignmentExpression	func = info -> fprintf_func		2675043	2		=			
ANR	2675064	Identifier	func		2675043	0					
ANR	2675065	PtrMemberAccess	info -> fprintf_func		2675043	1					
ANR	2675066	Identifier	info		2675043	0					
ANR	2675067	Identifier	fprintf_func		2675043	1					
ANR	2675068	IdentifierDeclStatement	struct arm_private_data * private_data = info -> private_data ;	4717:2:192443:192501	2675043	3	True				
ANR	2675069	IdentifierDecl	* private_data = info -> private_data		2675043	0					
ANR	2675070	IdentifierDeclType	struct arm_private_data *		2675043	0					
ANR	2675071	Identifier	private_data		2675043	1					
ANR	2675072	AssignmentExpression	* private_data = info -> private_data		2675043	2		=			
ANR	2675073	Identifier	private_data		2675043	0					
ANR	2675074	PtrMemberAccess	info -> private_data		2675043	1					
ANR	2675075	Identifier	info		2675043	0					
ANR	2675076	Identifier	private_data		2675043	1					
ANR	2675077	IfStatement	"if ( print_insn_coprocessor ( pc , info , given , FALSE ) )"		2675043	4					
ANR	2675078	Condition	"print_insn_coprocessor ( pc , info , given , FALSE )"	4719:6:192510:192556	2675043	0	True				
ANR	2675079	CallExpression	"print_insn_coprocessor ( pc , info , given , FALSE )"		2675043	0					
ANR	2675080	Callee	print_insn_coprocessor		2675043	0					
ANR	2675081	Identifier	print_insn_coprocessor		2675043	0					
ANR	2675082	ArgumentList	pc		2675043	1					
ANR	2675083	Argument	pc		2675043	0					
ANR	2675084	Identifier	pc		2675043	0					
ANR	2675085	Argument	info		2675043	1					
ANR	2675086	Identifier	info		2675043	0					
ANR	2675087	Argument	given		2675043	2					
ANR	2675088	Identifier	given		2675043	0					
ANR	2675089	Argument	FALSE		2675043	3					
ANR	2675090	Identifier	FALSE		2675043	0					
ANR	2675091	CompoundStatement		7:55:224:224	2675043	1					
ANR	2675092	ReturnStatement	return ;	4720:3:192564:192570	2675043	0	True				
ANR	2675093	IfStatement	"if ( print_insn_neon ( info , given , FALSE ) )"		2675043	5					
ANR	2675094	Condition	"print_insn_neon ( info , given , FALSE )"	4723:6:192583:192618	2675043	0	True				
ANR	2675095	CallExpression	"print_insn_neon ( info , given , FALSE )"		2675043	0					
ANR	2675096	Callee	print_insn_neon		2675043	0					
ANR	2675097	Identifier	print_insn_neon		2675043	0					
ANR	2675098	ArgumentList	info		2675043	1					
ANR	2675099	Argument	info		2675043	0					
ANR	2675100	Identifier	info		2675043	0					
ANR	2675101	Argument	given		2675043	1					
ANR	2675102	Identifier	given		2675043	0					
ANR	2675103	Argument	FALSE		2675043	2					
ANR	2675104	Identifier	FALSE		2675043	0					
ANR	2675105	CompoundStatement		11:44:286:286	2675043	1					
ANR	2675106	ReturnStatement	return ;	4724:3:192626:192632	2675043	0	True				
ANR	2675107	ForStatement	for ( insn = arm_opcodes ; insn -> assembler ; insn ++ )		2675043	6					
ANR	2675108	ForInit	insn = arm_opcodes ;	4727:7:192646:192664	2675043	0	True				
ANR	2675109	AssignmentExpression	insn = arm_opcodes		2675043	0		=			
ANR	2675110	Identifier	insn		2675043	0					
ANR	2675111	Identifier	arm_opcodes		2675043	1					
ANR	2675112	Condition	insn -> assembler	4727:27:192666:192680	2675043	1	True				
ANR	2675113	PtrMemberAccess	insn -> assembler		2675043	0					
ANR	2675114	Identifier	insn		2675043	0					
ANR	2675115	Identifier	assembler		2675043	1					
ANR	2675116	PostIncDecOperationExpression	insn ++	4727:44:192683:192688	2675043	2	True				
ANR	2675117	Identifier	insn		2675043	0					
ANR	2675118	IncDec	++		2675043	1					
ANR	2675119	CompoundStatement		16:4:360:360	2675043	3					
ANR	2675120	IfStatement	if ( ( given & insn -> mask ) != insn -> value )		2675043	0					
ANR	2675121	Condition	( given & insn -> mask ) != insn -> value	4729:7:192704:192738	2675043	0	True				
ANR	2675122	EqualityExpression	( given & insn -> mask ) != insn -> value		2675043	0		!=			
ANR	2675123	BitAndExpression	given & insn -> mask		2675043	0		&			
ANR	2675124	Identifier	given		2675043	0					
ANR	2675125	PtrMemberAccess	insn -> mask		2675043	1					
ANR	2675126	Identifier	insn		2675043	0					
ANR	2675127	Identifier	mask		2675043	1					
ANR	2675128	PtrMemberAccess	insn -> value		2675043	1					
ANR	2675129	Identifier	insn		2675043	0					
ANR	2675130	Identifier	value		2675043	1					
ANR	2675131	CompoundStatement		17:44:406:406	2675043	1					
ANR	2675132	ContinueStatement	continue ;	4730:4:192747:192755	2675043	0	True				
ANR	2675133	IfStatement	"if ( ! ARM_CPU_HAS_FEATURE ( insn -> arch , private_data -> features ) )"		2675043	1					
ANR	2675134	Condition	"! ARM_CPU_HAS_FEATURE ( insn -> arch , private_data -> features )"	4733:7:192770:192826	2675043	0	True				
ANR	2675135	UnaryOperationExpression	"! ARM_CPU_HAS_FEATURE ( insn -> arch , private_data -> features )"		2675043	0					
ANR	2675136	UnaryOperator	!		2675043	0					
ANR	2675137	CallExpression	"ARM_CPU_HAS_FEATURE ( insn -> arch , private_data -> features )"		2675043	1					
ANR	2675138	Callee	ARM_CPU_HAS_FEATURE		2675043	0					
ANR	2675139	Identifier	ARM_CPU_HAS_FEATURE		2675043	0					
ANR	2675140	ArgumentList	insn -> arch		2675043	1					
ANR	2675141	Argument	insn -> arch		2675043	0					
ANR	2675142	PtrMemberAccess	insn -> arch		2675043	0					
ANR	2675143	Identifier	insn		2675043	0					
ANR	2675144	Identifier	arch		2675043	1					
ANR	2675145	Argument	private_data -> features		2675043	1					
ANR	2675146	PtrMemberAccess	private_data -> features		2675043	0					
ANR	2675147	Identifier	private_data		2675043	0					
ANR	2675148	Identifier	features		2675043	1					
ANR	2675149	CompoundStatement		21:66:494:494	2675043	1					
ANR	2675150	ContinueStatement	continue ;	4734:4:192835:192843	2675043	0	True				
ANR	2675151	IfStatement	if ( ( given & 0xF0000000 ) != 0xF0000000 || ( insn -> mask & 0xF0000000 ) == 0xF0000000 || ( insn -> mask == 0 && insn -> value == 0 ) )		2675043	2					
ANR	2675152	Condition	( given & 0xF0000000 ) != 0xF0000000 || ( insn -> mask & 0xF0000000 ) == 0xF0000000 || ( insn -> mask == 0 && insn -> value == 0 )	4740:7:193057:193174	2675043	0	True				
ANR	2675153	OrExpression	( given & 0xF0000000 ) != 0xF0000000 || ( insn -> mask & 0xF0000000 ) == 0xF0000000 || ( insn -> mask == 0 && insn -> value == 0 )		2675043	0		||			
ANR	2675154	EqualityExpression	( given & 0xF0000000 ) != 0xF0000000		2675043	0		!=			
ANR	2675155	BitAndExpression	given & 0xF0000000		2675043	0		&			
ANR	2675156	Identifier	given		2675043	0					
ANR	2675157	PrimaryExpression	0xF0000000		2675043	1					
ANR	2675158	PrimaryExpression	0xF0000000		2675043	1					
ANR	2675159	OrExpression	( insn -> mask & 0xF0000000 ) == 0xF0000000 || ( insn -> mask == 0 && insn -> value == 0 )		2675043	1		||			
ANR	2675160	EqualityExpression	( insn -> mask & 0xF0000000 ) == 0xF0000000		2675043	0		==			
ANR	2675161	BitAndExpression	insn -> mask & 0xF0000000		2675043	0		&			
ANR	2675162	PtrMemberAccess	insn -> mask		2675043	0					
ANR	2675163	Identifier	insn		2675043	0					
ANR	2675164	Identifier	mask		2675043	1					
ANR	2675165	PrimaryExpression	0xF0000000		2675043	1					
ANR	2675166	PrimaryExpression	0xF0000000		2675043	1					
ANR	2675167	AndExpression	insn -> mask == 0 && insn -> value == 0		2675043	1		&&			
ANR	2675168	EqualityExpression	insn -> mask == 0		2675043	0		==			
ANR	2675169	PtrMemberAccess	insn -> mask		2675043	0					
ANR	2675170	Identifier	insn		2675043	0					
ANR	2675171	Identifier	mask		2675043	1					
ANR	2675172	PrimaryExpression	0		2675043	1					
ANR	2675173	EqualityExpression	insn -> value == 0		2675043	1		==			
ANR	2675174	PtrMemberAccess	insn -> value		2675043	0					
ANR	2675175	Identifier	insn		2675043	0					
ANR	2675176	Identifier	value		2675043	1					
ANR	2675177	PrimaryExpression	0		2675043	1					
ANR	2675178	CompoundStatement		33:4:988:1001	2675043	1					
ANR	2675179	IdentifierDeclStatement	unsigned long u_reg = 16 ;	4741:4:193183:193207	2675043	0	True				
ANR	2675180	IdentifierDecl	u_reg = 16		2675043	0					
ANR	2675181	IdentifierDeclType	unsigned long		2675043	0					
ANR	2675182	Identifier	u_reg		2675043	1					
ANR	2675183	AssignmentExpression	u_reg = 16		2675043	2		=			
ANR	2675184	Identifier	u_reg		2675043	0					
ANR	2675185	PrimaryExpression	16		2675043	1					
ANR	2675186	IdentifierDeclStatement	unsigned long U_reg = 16 ;	4742:4:193213:193237	2675043	1	True				
ANR	2675187	IdentifierDecl	U_reg = 16		2675043	0					
ANR	2675188	IdentifierDeclType	unsigned long		2675043	0					
ANR	2675189	Identifier	U_reg		2675043	1					
ANR	2675190	AssignmentExpression	U_reg = 16		2675043	2		=			
ANR	2675191	Identifier	U_reg		2675043	0					
ANR	2675192	PrimaryExpression	16		2675043	1					
ANR	2675193	IdentifierDeclStatement	bfd_boolean is_unpredictable = FALSE ;	4743:4:193243:193279	2675043	2	True				
ANR	2675194	IdentifierDecl	is_unpredictable = FALSE		2675043	0					
ANR	2675195	IdentifierDeclType	bfd_boolean		2675043	0					
ANR	2675196	Identifier	is_unpredictable		2675043	1					
ANR	2675197	AssignmentExpression	is_unpredictable = FALSE		2675043	2		=			
ANR	2675198	Identifier	FALSE		2675043	0					
ANR	2675199	Identifier	FALSE		2675043	1					
ANR	2675200	IdentifierDeclStatement	signed long value_in_comment = 0 ;	4744:4:193285:193317	2675043	3	True				
ANR	2675201	IdentifierDecl	value_in_comment = 0		2675043	0					
ANR	2675202	IdentifierDeclType	signed long		2675043	0					
ANR	2675203	Identifier	value_in_comment		2675043	1					
ANR	2675204	AssignmentExpression	value_in_comment = 0		2675043	2		=			
ANR	2675205	Identifier	value_in_comment		2675043	0					
ANR	2675206	PrimaryExpression	0		2675043	1					
ANR	2675207	IdentifierDeclStatement	const char * c ;	4745:4:193323:193336	2675043	4	True				
ANR	2675208	IdentifierDecl	* c		2675043	0					
ANR	2675209	IdentifierDeclType	const char *		2675043	0					
ANR	2675210	Identifier	c		2675043	1					
ANR	2675211	ForStatement	for ( c = insn -> assembler ; * c ; c ++ )		2675043	5					
ANR	2675212	ForInit	c = insn -> assembler ;	4747:9:193348:193367	2675043	0	True				
ANR	2675213	AssignmentExpression	c = insn -> assembler		2675043	0		=			
ANR	2675214	Identifier	c		2675043	0					
ANR	2675215	PtrMemberAccess	insn -> assembler		2675043	1					
ANR	2675216	Identifier	insn		2675043	0					
ANR	2675217	Identifier	assembler		2675043	1					
ANR	2675218	Condition	* c	4747:30:193369:193370	2675043	1	True				
ANR	2675219	UnaryOperationExpression	* c		2675043	0					
ANR	2675220	UnaryOperator	*		2675043	0					
ANR	2675221	Identifier	c		2675043	1					
ANR	2675222	PostIncDecOperationExpression	c ++	4747:34:193373:193375	2675043	2	True				
ANR	2675223	Identifier	c		2675043	0					
ANR	2675224	IncDec	++		2675043	1					
ANR	2675225	CompoundStatement		35:39:1043:1043	2675043	3					
ANR	2675226	IfStatement	if ( * c == '%' )		2675043	0					
ANR	2675227	Condition	* c == '%'	4748:9:193389:193397	2675043	0	True				
ANR	2675228	EqualityExpression	* c == '%'		2675043	0		==			
ANR	2675229	UnaryOperationExpression	* c		2675043	0					
ANR	2675230	UnaryOperator	*		2675043	0					
ANR	2675231	Identifier	c		2675043	1					
ANR	2675232	PrimaryExpression	'%'		2675043	1					
ANR	2675233	CompoundStatement		37:6:1073:1112	2675043	1					
ANR	2675234	IdentifierDeclStatement	bfd_boolean allow_unpredictable = FALSE ;	4749:6:193408:193447	2675043	0	True				
ANR	2675235	IdentifierDecl	allow_unpredictable = FALSE		2675043	0					
ANR	2675236	IdentifierDeclType	bfd_boolean		2675043	0					
ANR	2675237	Identifier	allow_unpredictable		2675043	1					
ANR	2675238	AssignmentExpression	allow_unpredictable = FALSE		2675043	2		=			
ANR	2675239	Identifier	FALSE		2675043	0					
ANR	2675240	Identifier	FALSE		2675043	1					
ANR	2675241	SwitchStatement	switch ( * ++ c )		2675043	1					
ANR	2675242	Condition	* ++ c	4751:14:193464:193467	2675043	0	True				
ANR	2675243	UnaryOperationExpression	* ++ c		2675043	0					
ANR	2675244	UnaryOperator	*		2675043	0					
ANR	2675245	UnaryExpression	++ c		2675043	1					
ANR	2675246	IncDec	++		2675043	0					
ANR	2675247	Identifier	c		2675043	1					
ANR	2675248	CompoundStatement		39:20:1135:1135	2675043	1					
ANR	2675249	Label	case '%' :	4752:6:193478:193486	2675043	0	True				
ANR	2675250	ExpressionStatement	"func ( stream , ""%%"" )"	4753:7:193495:193514	2675043	1	True				
ANR	2675251	CallExpression	"func ( stream , ""%%"" )"		2675043	0					
ANR	2675252	Callee	func		2675043	0					
ANR	2675253	Identifier	func		2675043	0					
ANR	2675254	ArgumentList	stream		2675043	1					
ANR	2675255	Argument	stream		2675043	0					
ANR	2675256	Identifier	stream		2675043	0					
ANR	2675257	Argument	"""%%"""		2675043	1					
ANR	2675258	PrimaryExpression	"""%%"""		2675043	0					
ANR	2675259	BreakStatement	break ;	4754:7:193523:193528	2675043	2	True				
ANR	2675260	Label	case 'a' :	4756:6:193537:193545	2675043	3	True				
ANR	2675261	ExpressionStatement	"value_in_comment = print_arm_address ( pc , info , given )"	4757:7:193554:193608	2675043	4	True				
ANR	2675262	AssignmentExpression	"value_in_comment = print_arm_address ( pc , info , given )"		2675043	0		=			
ANR	2675263	Identifier	value_in_comment		2675043	0					
ANR	2675264	CallExpression	"print_arm_address ( pc , info , given )"		2675043	1					
ANR	2675265	Callee	print_arm_address		2675043	0					
ANR	2675266	Identifier	print_arm_address		2675043	0					
ANR	2675267	ArgumentList	pc		2675043	1					
ANR	2675268	Argument	pc		2675043	0					
ANR	2675269	Identifier	pc		2675043	0					
ANR	2675270	Argument	info		2675043	1					
ANR	2675271	Identifier	info		2675043	0					
ANR	2675272	Argument	given		2675043	2					
ANR	2675273	Identifier	given		2675043	0					
ANR	2675274	BreakStatement	break ;	4758:7:193617:193622	2675043	5	True				
ANR	2675275	Label	case 'P' :	4760:6:193631:193639	2675043	6	True				
ANR	2675276	ExpressionStatement	"value_in_comment = print_arm_address ( pc , info , given | ( 1 << P_BIT ) )"	4763:7:193725:193794	2675043	7	True				
ANR	2675277	AssignmentExpression	"value_in_comment = print_arm_address ( pc , info , given | ( 1 << P_BIT ) )"		2675043	0		=			
ANR	2675278	Identifier	value_in_comment		2675043	0					
ANR	2675279	CallExpression	"print_arm_address ( pc , info , given | ( 1 << P_BIT ) )"		2675043	1					
ANR	2675280	Callee	print_arm_address		2675043	0					
ANR	2675281	Identifier	print_arm_address		2675043	0					
ANR	2675282	ArgumentList	pc		2675043	1					
ANR	2675283	Argument	pc		2675043	0					
ANR	2675284	Identifier	pc		2675043	0					
ANR	2675285	Argument	info		2675043	1					
ANR	2675286	Identifier	info		2675043	0					
ANR	2675287	Argument	given | ( 1 << P_BIT )		2675043	2					
ANR	2675288	InclusiveOrExpression	given | ( 1 << P_BIT )		2675043	0		|			
ANR	2675289	Identifier	given		2675043	0					
ANR	2675290	ShiftExpression	1 << P_BIT		2675043	1		<<			
ANR	2675291	PrimaryExpression	1		2675043	0					
ANR	2675292	Identifier	P_BIT		2675043	1					
ANR	2675293	BreakStatement	break ;	4764:7:193803:193808	2675043	8	True				
ANR	2675294	Label	case 'S' :	4766:6:193817:193825	2675043	9	True				
ANR	2675295	ExpressionStatement	allow_unpredictable = TRUE	4767:7:193834:193860	2675043	10	True				
ANR	2675296	AssignmentExpression	allow_unpredictable = TRUE		2675043	0		=			
ANR	2675297	Identifier	allow_unpredictable		2675043	0					
ANR	2675298	Identifier	TRUE		2675043	1					
ANR	2675299	Label	case 's' :	4769:6:193896:193904	2675043	11	True				
ANR	2675300	IfStatement	if ( ( given & 0x004f0000 ) == 0x004f0000 )		2675043	12					
ANR	2675301	Condition	( given & 0x004f0000 ) == 0x004f0000	4770:11:193917:193950	2675043	0	True				
ANR	2675302	EqualityExpression	( given & 0x004f0000 ) == 0x004f0000		2675043	0		==			
ANR	2675303	BitAndExpression	given & 0x004f0000		2675043	0		&			
ANR	2675304	Identifier	given		2675043	0					
ANR	2675305	PrimaryExpression	0x004f0000		2675043	1					
ANR	2675306	PrimaryExpression	0x004f0000		2675043	1					
ANR	2675307	CompoundStatement		60:8:1678:1733	2675043	1					
ANR	2675308	IdentifierDeclStatement	bfd_vma offset = ( ( given & 0xf00 ) >> 4 ) | ( given & 0xf ) ;	4772:8:194013:194068	2675043	0	True				
ANR	2675309	IdentifierDecl	offset = ( ( given & 0xf00 ) >> 4 ) | ( given & 0xf )		2675043	0					
ANR	2675310	IdentifierDeclType	bfd_vma		2675043	0					
ANR	2675311	Identifier	offset		2675043	1					
ANR	2675312	AssignmentExpression	offset = ( ( given & 0xf00 ) >> 4 ) | ( given & 0xf )		2675043	2		=			
ANR	2675313	Identifier	offset		2675043	0					
ANR	2675314	InclusiveOrExpression	( ( given & 0xf00 ) >> 4 ) | ( given & 0xf )		2675043	1		|			
ANR	2675315	ShiftExpression	( given & 0xf00 ) >> 4		2675043	0		>>			
ANR	2675316	BitAndExpression	given & 0xf00		2675043	0		&			
ANR	2675317	Identifier	given		2675043	0					
ANR	2675318	PrimaryExpression	0xf00		2675043	1					
ANR	2675319	PrimaryExpression	4		2675043	1					
ANR	2675320	BitAndExpression	given & 0xf		2675043	1		&			
ANR	2675321	Identifier	given		2675043	0					
ANR	2675322	PrimaryExpression	0xf		2675043	1					
ANR	2675323	IfStatement	if ( PRE_BIT_SET )		2675043	1					
ANR	2675324	Condition	PRE_BIT_SET	4774:12:194083:194093	2675043	0	True				
ANR	2675325	Identifier	PRE_BIT_SET		2675043	0					
ANR	2675326	CompoundStatement		62:25:1761:1761	2675043	1					
ANR	2675327	IfStatement	if ( offset || NEGATIVE_BIT_SET )		2675043	0					
ANR	2675328	Condition	offset || NEGATIVE_BIT_SET	4776:13:194155:194180	2675043	0	True				
ANR	2675329	OrExpression	offset || NEGATIVE_BIT_SET		2675043	0		||			
ANR	2675330	Identifier	offset		2675043	0					
ANR	2675331	Identifier	NEGATIVE_BIT_SET		2675043	1					
ANR	2675332	CompoundStatement		64:41:1848:1848	2675043	1					
ANR	2675333	ExpressionStatement	"func ( stream , ""[pc, %s%d] ; "" , NEGATIVE_BIT_SET ? ""-"" : """" , ( int ) offset )"	4777:10:194195:194278	2675043	0	True				
ANR	2675334	CallExpression	"func ( stream , ""[pc, %s%d] ; "" , NEGATIVE_BIT_SET ? ""-"" : """" , ( int ) offset )"		2675043	0					
ANR	2675335	Callee	func		2675043	0					
ANR	2675336	Identifier	func		2675043	0					
ANR	2675337	ArgumentList	stream		2675043	1					
ANR	2675338	Argument	stream		2675043	0					
ANR	2675339	Identifier	stream		2675043	0					
ANR	2675340	Argument	"""[pc, %s%d] ; """		2675043	1					
ANR	2675341	PrimaryExpression	"""[pc, %s%d] ; """		2675043	0					
ANR	2675342	Argument	"NEGATIVE_BIT_SET ? ""-"" : """""		2675043	2					
ANR	2675343	ConditionalExpression	"NEGATIVE_BIT_SET ? ""-"" : """""		2675043	0					
ANR	2675344	Condition	NEGATIVE_BIT_SET		2675043	0					
ANR	2675345	Identifier	NEGATIVE_BIT_SET		2675043	0					
ANR	2675346	PrimaryExpression	"""-"""		2675043	1					
ANR	2675347	PrimaryExpression	""""""		2675043	2					
ANR	2675348	Argument	( int ) offset		2675043	3					
ANR	2675349	CastExpression	( int ) offset		2675043	0					
ANR	2675350	CastTarget	int		2675043	0					
ANR	2675351	Identifier	offset		2675043	1					
ANR	2675352	ElseStatement	else		2675043	0					
ANR	2675353	CompoundStatement		67:16:1961:1961	2675043	0					
ANR	2675354	ExpressionStatement	"func ( stream , ""[pc] ; "" )"	4780:10:194308:194332	2675043	0	True				
ANR	2675355	CallExpression	"func ( stream , ""[pc] ; "" )"		2675043	0					
ANR	2675356	Callee	func		2675043	0					
ANR	2675357	Identifier	func		2675043	0					
ANR	2675358	ArgumentList	stream		2675043	1					
ANR	2675359	Argument	stream		2675043	0					
ANR	2675360	Identifier	stream		2675043	0					
ANR	2675361	Argument	"""[pc] ; """		2675043	1					
ANR	2675362	PrimaryExpression	"""[pc] ; """		2675043	0					
ANR	2675363	IfStatement	if ( NEGATIVE_BIT_SET )		2675043	1					
ANR	2675364	Condition	NEGATIVE_BIT_SET	4782:13:194358:194373	2675043	0	True				
ANR	2675365	Identifier	NEGATIVE_BIT_SET		2675043	0					
ANR	2675366	CompoundStatement		70:31:2041:2041	2675043	1					
ANR	2675367	ExpressionStatement	offset = - offset	4783:10:194388:194404	2675043	0	True				
ANR	2675368	AssignmentExpression	offset = - offset		2675043	0		=			
ANR	2675369	Identifier	offset		2675043	0					
ANR	2675370	UnaryOperationExpression	- offset		2675043	1					
ANR	2675371	UnaryOperator	-		2675043	0					
ANR	2675372	Identifier	offset		2675043	1					
ANR	2675373	ExpressionStatement	"info -> print_address_func ( offset + pc + 8 , info )"	4785:9:194426:194474	2675043	2	True				
ANR	2675374	CallExpression	"info -> print_address_func ( offset + pc + 8 , info )"		2675043	0					
ANR	2675375	Callee	info -> print_address_func		2675043	0					
ANR	2675376	PtrMemberAccess	info -> print_address_func		2675043	0					
ANR	2675377	Identifier	info		2675043	0					
ANR	2675378	Identifier	print_address_func		2675043	1					
ANR	2675379	ArgumentList	offset + pc + 8		2675043	1					
ANR	2675380	Argument	offset + pc + 8		2675043	0					
ANR	2675381	AdditiveExpression	offset + pc + 8		2675043	0		+			
ANR	2675382	Identifier	offset		2675043	0					
ANR	2675383	AdditiveExpression	pc + 8		2675043	1		+			
ANR	2675384	Identifier	pc		2675043	0					
ANR	2675385	PrimaryExpression	8		2675043	1					
ANR	2675386	Argument	info		2675043	1					
ANR	2675387	Identifier	info		2675043	0					
ANR	2675388	ElseStatement	else		2675043	0					
ANR	2675389	CompoundStatement		74:15:2156:2156	2675043	0					
ANR	2675390	ExpressionStatement	"func ( stream , ""[pc], %s%d"" , NEGATIVE_BIT_SET ? ""-"" : """" , ( int ) offset )"	4788:9:194542:194621	2675043	0	True				
ANR	2675391	CallExpression	"func ( stream , ""[pc], %s%d"" , NEGATIVE_BIT_SET ? ""-"" : """" , ( int ) offset )"		2675043	0					
ANR	2675392	Callee	func		2675043	0					
ANR	2675393	Identifier	func		2675043	0					
ANR	2675394	ArgumentList	stream		2675043	1					
ANR	2675395	Argument	stream		2675043	0					
ANR	2675396	Identifier	stream		2675043	0					
ANR	2675397	Argument	"""[pc], %s%d"""		2675043	1					
ANR	2675398	PrimaryExpression	"""[pc], %s%d"""		2675043	0					
ANR	2675399	Argument	"NEGATIVE_BIT_SET ? ""-"" : """""		2675043	2					
ANR	2675400	ConditionalExpression	"NEGATIVE_BIT_SET ? ""-"" : """""		2675043	0					
ANR	2675401	Condition	NEGATIVE_BIT_SET		2675043	0					
ANR	2675402	Identifier	NEGATIVE_BIT_SET		2675043	0					
ANR	2675403	PrimaryExpression	"""-"""		2675043	1					
ANR	2675404	PrimaryExpression	""""""		2675043	2					
ANR	2675405	Argument	( int ) offset		2675043	3					
ANR	2675406	CastExpression	( int ) offset		2675043	0					
ANR	2675407	CastTarget	int		2675043	0					
ANR	2675408	Identifier	offset		2675043	1					
ANR	2675409	IfStatement	if ( ! allow_unpredictable )		2675043	1					
ANR	2675410	Condition	! allow_unpredictable	4790:13:194636:194655	2675043	0	True				
ANR	2675411	UnaryOperationExpression	! allow_unpredictable		2675043	0					
ANR	2675412	UnaryOperator	!		2675043	0					
ANR	2675413	Identifier	allow_unpredictable		2675043	1					
ANR	2675414	CompoundStatement		78:35:2323:2323	2675043	1					
ANR	2675415	ExpressionStatement	is_unpredictable = TRUE	4791:10:194670:194693	2675043	0	True				
ANR	2675416	AssignmentExpression	is_unpredictable = TRUE		2675043	0		=			
ANR	2675417	Identifier	is_unpredictable		2675043	0					
ANR	2675418	Identifier	TRUE		2675043	1					
ANR	2675419	ElseStatement	else		2675043	0					
ANR	2675420	CompoundStatement		83:8:2405:2456	2675043	0					
ANR	2675421	IdentifierDeclStatement	int offset = ( ( given & 0xf00 ) >> 4 ) | ( given & 0xf ) ;	4795:8:194740:194791	2675043	0	True				
ANR	2675422	IdentifierDecl	offset = ( ( given & 0xf00 ) >> 4 ) | ( given & 0xf )		2675043	0					
ANR	2675423	IdentifierDeclType	int		2675043	0					
ANR	2675424	Identifier	offset		2675043	1					
ANR	2675425	AssignmentExpression	offset = ( ( given & 0xf00 ) >> 4 ) | ( given & 0xf )		2675043	2		=			
ANR	2675426	Identifier	offset		2675043	0					
ANR	2675427	InclusiveOrExpression	( ( given & 0xf00 ) >> 4 ) | ( given & 0xf )		2675043	1		|			
ANR	2675428	ShiftExpression	( given & 0xf00 ) >> 4		2675043	0		>>			
ANR	2675429	BitAndExpression	given & 0xf00		2675043	0		&			
ANR	2675430	Identifier	given		2675043	0					
ANR	2675431	PrimaryExpression	0xf00		2675043	1					
ANR	2675432	PrimaryExpression	4		2675043	1					
ANR	2675433	BitAndExpression	given & 0xf		2675043	1		&			
ANR	2675434	Identifier	given		2675043	0					
ANR	2675435	PrimaryExpression	0xf		2675043	1					
ANR	2675436	ExpressionStatement	"func ( stream , ""[%s"" , arm_regnames [ ( given >> 16 ) & 0xf ] )"	4797:8:194802:194866	2675043	1	True				
ANR	2675437	CallExpression	"func ( stream , ""[%s"" , arm_regnames [ ( given >> 16 ) & 0xf ] )"		2675043	0					
ANR	2675438	Callee	func		2675043	0					
ANR	2675439	Identifier	func		2675043	0					
ANR	2675440	ArgumentList	stream		2675043	1					
ANR	2675441	Argument	stream		2675043	0					
ANR	2675442	Identifier	stream		2675043	0					
ANR	2675443	Argument	"""[%s"""		2675043	1					
ANR	2675444	PrimaryExpression	"""[%s"""		2675043	0					
ANR	2675445	Argument	arm_regnames [ ( given >> 16 ) & 0xf ]		2675043	2					
ANR	2675446	ArrayIndexing	arm_regnames [ ( given >> 16 ) & 0xf ]		2675043	0					
ANR	2675447	Identifier	arm_regnames		2675043	0					
ANR	2675448	BitAndExpression	( given >> 16 ) & 0xf		2675043	1		&			
ANR	2675449	ShiftExpression	given >> 16		2675043	0		>>			
ANR	2675450	Identifier	given		2675043	0					
ANR	2675451	PrimaryExpression	16		2675043	1					
ANR	2675452	PrimaryExpression	0xf		2675043	1					
ANR	2675453	IfStatement	if ( PRE_BIT_SET )		2675043	2					
ANR	2675454	Condition	PRE_BIT_SET	4800:12:194881:194891	2675043	0	True				
ANR	2675455	Identifier	PRE_BIT_SET		2675043	0					
ANR	2675456	CompoundStatement		88:25:2559:2559	2675043	1					
ANR	2675457	IfStatement	if ( IMMEDIATE_BIT_SET )		2675043	0					
ANR	2675458	Condition	IMMEDIATE_BIT_SET	4801:13:194909:194925	2675043	0	True				
ANR	2675459	Identifier	IMMEDIATE_BIT_SET		2675043	0					
ANR	2675460	CompoundStatement		89:32:2593:2593	2675043	1					
ANR	2675461	IfStatement	if ( WRITEBACK_BIT_SET || NEGATIVE_BIT_SET || offset )		2675043	0					
ANR	2675462	Condition	WRITEBACK_BIT_SET || NEGATIVE_BIT_SET || offset	4804:14:195016:195062	2675043	0	True				
ANR	2675463	OrExpression	WRITEBACK_BIT_SET || NEGATIVE_BIT_SET || offset		2675043	0		||			
ANR	2675464	Identifier	WRITEBACK_BIT_SET		2675043	0					
ANR	2675465	OrExpression	NEGATIVE_BIT_SET || offset		2675043	1		||			
ANR	2675466	Identifier	NEGATIVE_BIT_SET		2675043	0					
ANR	2675467	Identifier	offset		2675043	1					
ANR	2675468	CompoundStatement		92:63:2730:2730	2675043	1					
ANR	2675469	ExpressionStatement	"func ( stream , "", %s%d"" , NEGATIVE_BIT_SET ? ""-"" : """" , offset )"	4805:11:195078:195150	2675043	0	True				
ANR	2675470	CallExpression	"func ( stream , "", %s%d"" , NEGATIVE_BIT_SET ? ""-"" : """" , offset )"		2675043	0					
ANR	2675471	Callee	func		2675043	0					
ANR	2675472	Identifier	func		2675043	0					
ANR	2675473	ArgumentList	stream		2675043	1					
ANR	2675474	Argument	stream		2675043	0					
ANR	2675475	Identifier	stream		2675043	0					
ANR	2675476	Argument	""", %s%d"""		2675043	1					
ANR	2675477	PrimaryExpression	""", %s%d"""		2675043	0					
ANR	2675478	Argument	"NEGATIVE_BIT_SET ? ""-"" : """""		2675043	2					
ANR	2675479	ConditionalExpression	"NEGATIVE_BIT_SET ? ""-"" : """""		2675043	0					
ANR	2675480	Condition	NEGATIVE_BIT_SET		2675043	0					
ANR	2675481	Identifier	NEGATIVE_BIT_SET		2675043	0					
ANR	2675482	PrimaryExpression	"""-"""		2675043	1					
ANR	2675483	PrimaryExpression	""""""		2675043	2					
ANR	2675484	Argument	offset		2675043	3					
ANR	2675485	Identifier	offset		2675043	0					
ANR	2675486	IfStatement	if ( NEGATIVE_BIT_SET )		2675043	1					
ANR	2675487	Condition	NEGATIVE_BIT_SET	4809:14:195179:195194	2675043	0	True				
ANR	2675488	Identifier	NEGATIVE_BIT_SET		2675043	0					
ANR	2675489	CompoundStatement		97:32:2862:2862	2675043	1					
ANR	2675490	ExpressionStatement	offset = - offset	4810:11:195210:195226	2675043	0	True				
ANR	2675491	AssignmentExpression	offset = - offset		2675043	0		=			
ANR	2675492	Identifier	offset		2675043	0					
ANR	2675493	UnaryOperationExpression	- offset		2675043	1					
ANR	2675494	UnaryOperator	-		2675043	0					
ANR	2675495	Identifier	offset		2675043	1					
ANR	2675496	ExpressionStatement	value_in_comment = offset	4813:10:195251:195276	2675043	2	True				
ANR	2675497	AssignmentExpression	value_in_comment = offset		2675043	0		=			
ANR	2675498	Identifier	value_in_comment		2675043	0					
ANR	2675499	Identifier	offset		2675043	1					
ANR	2675500	ElseStatement	else		2675043	0					
ANR	2675501	CompoundStatement		102:16:2959:2959	2675043	0					
ANR	2675502	ExpressionStatement	"func ( stream , "", %s%s"" , NEGATIVE_BIT_SET ? ""-"" : """" , arm_regnames [ given & 0xf ] )"	4816:10:195364:195465	2675043	0	True				
ANR	2675503	CallExpression	"func ( stream , "", %s%s"" , NEGATIVE_BIT_SET ? ""-"" : """" , arm_regnames [ given & 0xf ] )"		2675043	0					
ANR	2675504	Callee	func		2675043	0					
ANR	2675505	Identifier	func		2675043	0					
ANR	2675506	ArgumentList	stream		2675043	1					
ANR	2675507	Argument	stream		2675043	0					
ANR	2675508	Identifier	stream		2675043	0					
ANR	2675509	Argument	""", %s%s"""		2675043	1					
ANR	2675510	PrimaryExpression	""", %s%s"""		2675043	0					
ANR	2675511	Argument	"NEGATIVE_BIT_SET ? ""-"" : """""		2675043	2					
ANR	2675512	ConditionalExpression	"NEGATIVE_BIT_SET ? ""-"" : """""		2675043	0					
ANR	2675513	Condition	NEGATIVE_BIT_SET		2675043	0					
ANR	2675514	Identifier	NEGATIVE_BIT_SET		2675043	0					
ANR	2675515	PrimaryExpression	"""-"""		2675043	1					
ANR	2675516	PrimaryExpression	""""""		2675043	2					
ANR	2675517	Argument	arm_regnames [ given & 0xf ]		2675043	3					
ANR	2675518	ArrayIndexing	arm_regnames [ given & 0xf ]		2675043	0					
ANR	2675519	Identifier	arm_regnames		2675043	0					
ANR	2675520	BitAndExpression	given & 0xf		2675043	1		&			
ANR	2675521	Identifier	given		2675043	0					
ANR	2675522	PrimaryExpression	0xf		2675043	1					
ANR	2675523	IfStatement	if ( ! allow_unpredictable && WRITEBACK_BIT_SET && ( ( given & 0xf ) == ( ( given >> 12 ) & 0xf ) ) )		2675043	1					
ANR	2675524	Condition	! allow_unpredictable && WRITEBACK_BIT_SET && ( ( given & 0xf ) == ( ( given >> 12 ) & 0xf ) )	4822:14:195605:195689	2675043	0	True				
ANR	2675525	AndExpression	! allow_unpredictable && WRITEBACK_BIT_SET && ( ( given & 0xf ) == ( ( given >> 12 ) & 0xf ) )		2675043	0		&&			
ANR	2675526	UnaryOperationExpression	! allow_unpredictable		2675043	0					
ANR	2675527	UnaryOperator	!		2675043	0					
ANR	2675528	Identifier	allow_unpredictable		2675043	1					
ANR	2675529	AndExpression	WRITEBACK_BIT_SET && ( ( given & 0xf ) == ( ( given >> 12 ) & 0xf ) )		2675043	1		&&			
ANR	2675530	Identifier	WRITEBACK_BIT_SET		2675043	0					
ANR	2675531	EqualityExpression	( given & 0xf ) == ( ( given >> 12 ) & 0xf )		2675043	1		==			
ANR	2675532	BitAndExpression	given & 0xf		2675043	0		&			
ANR	2675533	Identifier	given		2675043	0					
ANR	2675534	PrimaryExpression	0xf		2675043	1					
ANR	2675535	BitAndExpression	( given >> 12 ) & 0xf		2675043	1		&			
ANR	2675536	ShiftExpression	given >> 12		2675043	0		>>			
ANR	2675537	Identifier	given		2675043	0					
ANR	2675538	PrimaryExpression	12		2675043	1					
ANR	2675539	PrimaryExpression	0xf		2675043	1					
ANR	2675540	CompoundStatement		110:101:3357:3357	2675043	1					
ANR	2675541	ExpressionStatement	is_unpredictable = TRUE	4823:11:195705:195728	2675043	0	True				
ANR	2675542	AssignmentExpression	is_unpredictable = TRUE		2675043	0		=			
ANR	2675543	Identifier	is_unpredictable		2675043	0					
ANR	2675544	Identifier	TRUE		2675043	1					
ANR	2675545	ExpressionStatement	"func ( stream , ""]%s"" , WRITEBACK_BIT_SET ? ""!"" : """" )"	4827:9:195763:195823	2675043	1	True				
ANR	2675546	CallExpression	"func ( stream , ""]%s"" , WRITEBACK_BIT_SET ? ""!"" : """" )"		2675043	0					
ANR	2675547	Callee	func		2675043	0					
ANR	2675548	Identifier	func		2675043	0					
ANR	2675549	ArgumentList	stream		2675043	1					
ANR	2675550	Argument	stream		2675043	0					
ANR	2675551	Identifier	stream		2675043	0					
ANR	2675552	Argument	"""]%s"""		2675043	1					
ANR	2675553	PrimaryExpression	"""]%s"""		2675043	0					
ANR	2675554	Argument	"WRITEBACK_BIT_SET ? ""!"" : """""		2675043	2					
ANR	2675555	ConditionalExpression	"WRITEBACK_BIT_SET ? ""!"" : """""		2675043	0					
ANR	2675556	Condition	WRITEBACK_BIT_SET		2675043	0					
ANR	2675557	Identifier	WRITEBACK_BIT_SET		2675043	0					
ANR	2675558	PrimaryExpression	"""!"""		2675043	1					
ANR	2675559	PrimaryExpression	""""""		2675043	2					
ANR	2675560	ElseStatement	else		2675043	0					
ANR	2675561	CompoundStatement		117:15:3505:3505	2675043	0					
ANR	2675562	IfStatement	if ( IMMEDIATE_BIT_SET )		2675043	0					
ANR	2675563	Condition	IMMEDIATE_BIT_SET	4830:13:195855:195871	2675043	0	True				
ANR	2675564	Identifier	IMMEDIATE_BIT_SET		2675043	0					
ANR	2675565	CompoundStatement		118:32:3539:3539	2675043	1					
ANR	2675566	ExpressionStatement	"func ( stream , ""], %s%d"" , NEGATIVE_BIT_SET ? ""-"" : """" , offset )"	4833:10:195998:196070	2675043	0	True				
ANR	2675567	CallExpression	"func ( stream , ""], %s%d"" , NEGATIVE_BIT_SET ? ""-"" : """" , offset )"		2675043	0					
ANR	2675568	Callee	func		2675043	0					
ANR	2675569	Identifier	func		2675043	0					
ANR	2675570	ArgumentList	stream		2675043	1					
ANR	2675571	Argument	stream		2675043	0					
ANR	2675572	Identifier	stream		2675043	0					
ANR	2675573	Argument	"""], %s%d"""		2675043	1					
ANR	2675574	PrimaryExpression	"""], %s%d"""		2675043	0					
ANR	2675575	Argument	"NEGATIVE_BIT_SET ? ""-"" : """""		2675043	2					
ANR	2675576	ConditionalExpression	"NEGATIVE_BIT_SET ? ""-"" : """""		2675043	0					
ANR	2675577	Condition	NEGATIVE_BIT_SET		2675043	0					
ANR	2675578	Identifier	NEGATIVE_BIT_SET		2675043	0					
ANR	2675579	PrimaryExpression	"""-"""		2675043	1					
ANR	2675580	PrimaryExpression	""""""		2675043	2					
ANR	2675581	Argument	offset		2675043	3					
ANR	2675582	Identifier	offset		2675043	0					
ANR	2675583	IfStatement	if ( NEGATIVE_BIT_SET )		2675043	1					
ANR	2675584	Condition	NEGATIVE_BIT_SET	4835:14:196086:196101	2675043	0	True				
ANR	2675585	Identifier	NEGATIVE_BIT_SET		2675043	0					
ANR	2675586	CompoundStatement		123:32:3769:3769	2675043	1					
ANR	2675587	ExpressionStatement	offset = - offset	4836:11:196117:196133	2675043	0	True				
ANR	2675588	AssignmentExpression	offset = - offset		2675043	0		=			
ANR	2675589	Identifier	offset		2675043	0					
ANR	2675590	UnaryOperationExpression	- offset		2675043	1					
ANR	2675591	UnaryOperator	-		2675043	0					
ANR	2675592	Identifier	offset		2675043	1					
ANR	2675593	ExpressionStatement	value_in_comment = offset	4838:10:196157:196182	2675043	2	True				
ANR	2675594	AssignmentExpression	value_in_comment = offset		2675043	0		=			
ANR	2675595	Identifier	value_in_comment		2675043	0					
ANR	2675596	Identifier	offset		2675043	1					
ANR	2675597	ElseStatement	else		2675043	0					
ANR	2675598	CompoundStatement		127:16:3865:3865	2675043	0					
ANR	2675599	ExpressionStatement	"func ( stream , ""], %s%s"" , NEGATIVE_BIT_SET ? ""-"" : """" , arm_regnames [ given & 0xf ] )"	4841:10:196252:196354	2675043	0	True				
ANR	2675600	CallExpression	"func ( stream , ""], %s%s"" , NEGATIVE_BIT_SET ? ""-"" : """" , arm_regnames [ given & 0xf ] )"		2675043	0					
ANR	2675601	Callee	func		2675043	0					
ANR	2675602	Identifier	func		2675043	0					
ANR	2675603	ArgumentList	stream		2675043	1					
ANR	2675604	Argument	stream		2675043	0					
ANR	2675605	Identifier	stream		2675043	0					
ANR	2675606	Argument	"""], %s%s"""		2675043	1					
ANR	2675607	PrimaryExpression	"""], %s%s"""		2675043	0					
ANR	2675608	Argument	"NEGATIVE_BIT_SET ? ""-"" : """""		2675043	2					
ANR	2675609	ConditionalExpression	"NEGATIVE_BIT_SET ? ""-"" : """""		2675043	0					
ANR	2675610	Condition	NEGATIVE_BIT_SET		2675043	0					
ANR	2675611	Identifier	NEGATIVE_BIT_SET		2675043	0					
ANR	2675612	PrimaryExpression	"""-"""		2675043	1					
ANR	2675613	PrimaryExpression	""""""		2675043	2					
ANR	2675614	Argument	arm_regnames [ given & 0xf ]		2675043	3					
ANR	2675615	ArrayIndexing	arm_regnames [ given & 0xf ]		2675043	0					
ANR	2675616	Identifier	arm_regnames		2675043	0					
ANR	2675617	BitAndExpression	given & 0xf		2675043	1		&			
ANR	2675618	Identifier	given		2675043	0					
ANR	2675619	PrimaryExpression	0xf		2675043	1					
ANR	2675620	IfStatement	if ( ! allow_unpredictable && ( given & 0xf ) == ( ( given >> 12 ) & 0xf ) )		2675043	1					
ANR	2675621	Condition	! allow_unpredictable && ( given & 0xf ) == ( ( given >> 12 ) & 0xf )	4847:14:196494:196555	2675043	0	True				
ANR	2675622	AndExpression	! allow_unpredictable && ( given & 0xf ) == ( ( given >> 12 ) & 0xf )		2675043	0		&&			
ANR	2675623	UnaryOperationExpression	! allow_unpredictable		2675043	0					
ANR	2675624	UnaryOperator	!		2675043	0					
ANR	2675625	Identifier	allow_unpredictable		2675043	1					
ANR	2675626	EqualityExpression	( given & 0xf ) == ( ( given >> 12 ) & 0xf )		2675043	1		==			
ANR	2675627	BitAndExpression	given & 0xf		2675043	0		&			
ANR	2675628	Identifier	given		2675043	0					
ANR	2675629	PrimaryExpression	0xf		2675043	1					
ANR	2675630	BitAndExpression	( given >> 12 ) & 0xf		2675043	1		&			
ANR	2675631	ShiftExpression	given >> 12		2675043	0		>>			
ANR	2675632	Identifier	given		2675043	0					
ANR	2675633	PrimaryExpression	12		2675043	1					
ANR	2675634	PrimaryExpression	0xf		2675043	1					
ANR	2675635	CompoundStatement		135:78:4223:4223	2675043	1					
ANR	2675636	ExpressionStatement	is_unpredictable = TRUE	4848:11:196571:196594	2675043	0	True				
ANR	2675637	AssignmentExpression	is_unpredictable = TRUE		2675043	0		=			
ANR	2675638	Identifier	is_unpredictable		2675043	0					
ANR	2675639	Identifier	TRUE		2675043	1					
ANR	2675640	IfStatement	if ( ! allow_unpredictable )		2675043	1					
ANR	2675641	Condition	! allow_unpredictable	4852:13:196633:196652	2675043	0	True				
ANR	2675642	UnaryOperationExpression	! allow_unpredictable		2675043	0					
ANR	2675643	UnaryOperator	!		2675043	0					
ANR	2675644	Identifier	allow_unpredictable		2675043	1					
ANR	2675645	CompoundStatement		140:35:4320:4320	2675043	1					
ANR	2675646	IfStatement	if ( WRITEBACK_BIT_SET || ( ! IMMEDIATE_BIT_SET && ( ( given & 0xf ) == 0xf ) ) )		2675043	0					
ANR	2675647	Condition	WRITEBACK_BIT_SET || ( ! IMMEDIATE_BIT_SET && ( ( given & 0xf ) == 0xf ) )	4856:14:196838:197019	2675043	0	True				
ANR	2675648	OrExpression	WRITEBACK_BIT_SET || ( ! IMMEDIATE_BIT_SET && ( ( given & 0xf ) == 0xf ) )		2675043	0		||			
ANR	2675649	Identifier	WRITEBACK_BIT_SET		2675043	0					
ANR	2675650	AndExpression	! IMMEDIATE_BIT_SET && ( ( given & 0xf ) == 0xf )		2675043	1		&&			
ANR	2675651	UnaryOperationExpression	! IMMEDIATE_BIT_SET		2675043	0					
ANR	2675652	UnaryOperator	!		2675043	0					
ANR	2675653	Identifier	IMMEDIATE_BIT_SET		2675043	1					
ANR	2675654	EqualityExpression	( given & 0xf ) == 0xf		2675043	1		==			
ANR	2675655	BitAndExpression	given & 0xf		2675043	0		&			
ANR	2675656	Identifier	given		2675043	0					
ANR	2675657	PrimaryExpression	0xf		2675043	1					
ANR	2675658	PrimaryExpression	0xf		2675043	1					
ANR	2675659	CompoundStatement		147:62:4687:4687	2675043	1					
ANR	2675660	ExpressionStatement	is_unpredictable = TRUE	4860:11:197035:197058	2675043	0	True				
ANR	2675661	AssignmentExpression	is_unpredictable = TRUE		2675043	0		=			
ANR	2675662	Identifier	is_unpredictable		2675043	0					
ANR	2675663	Identifier	TRUE		2675043	1					
ANR	2675664	BreakStatement	break ;	4865:7:197109:197114	2675043	13	True				
ANR	2675665	Label	case 'b' :	4867:6:197123:197131	2675043	14	True				
ANR	2675666	CompoundStatement		156:7:4807:4866	2675043	15					
ANR	2675667	IdentifierDeclStatement	bfd_vma disp = ( ( ( given & 0xffffff ) ^ 0x800000 ) - 0x800000 ) ;	4868:7:197142:197201	2675043	0	True				
ANR	2675668	IdentifierDecl	disp = ( ( ( given & 0xffffff ) ^ 0x800000 ) - 0x800000 )		2675043	0					
ANR	2675669	IdentifierDeclType	bfd_vma		2675043	0					
ANR	2675670	Identifier	disp		2675043	1					
ANR	2675671	AssignmentExpression	disp = ( ( ( given & 0xffffff ) ^ 0x800000 ) - 0x800000 )		2675043	2		=			
ANR	2675672	Identifier	disp		2675043	0					
ANR	2675673	AdditiveExpression	( ( given & 0xffffff ) ^ 0x800000 ) - 0x800000		2675043	1		-			
ANR	2675674	ExclusiveOrExpression	( given & 0xffffff ) ^ 0x800000		2675043	0		^			
ANR	2675675	BitAndExpression	given & 0xffffff		2675043	0		&			
ANR	2675676	Identifier	given		2675043	0					
ANR	2675677	PrimaryExpression	0xffffff		2675043	1					
ANR	2675678	PrimaryExpression	0x800000		2675043	1					
ANR	2675679	PrimaryExpression	0x800000		2675043	1					
ANR	2675680	ExpressionStatement	"info -> print_address_func ( disp * 4 + pc + 8 , info )"	4869:7:197210:197260	2675043	1	True				
ANR	2675681	CallExpression	"info -> print_address_func ( disp * 4 + pc + 8 , info )"		2675043	0					
ANR	2675682	Callee	info -> print_address_func		2675043	0					
ANR	2675683	PtrMemberAccess	info -> print_address_func		2675043	0					
ANR	2675684	Identifier	info		2675043	0					
ANR	2675685	Identifier	print_address_func		2675043	1					
ANR	2675686	ArgumentList	disp * 4 + pc + 8		2675043	1					
ANR	2675687	Argument	disp * 4 + pc + 8		2675043	0					
ANR	2675688	AdditiveExpression	disp * 4 + pc + 8		2675043	0		+			
ANR	2675689	MultiplicativeExpression	disp * 4		2675043	0		*			
ANR	2675690	Identifier	disp		2675043	0					
ANR	2675691	PrimaryExpression	4		2675043	1					
ANR	2675692	AdditiveExpression	pc + 8		2675043	1		+			
ANR	2675693	Identifier	pc		2675043	0					
ANR	2675694	PrimaryExpression	8		2675043	1					
ANR	2675695	Argument	info		2675043	1					
ANR	2675696	Identifier	info		2675043	0					
ANR	2675697	BreakStatement	break ;	4870:8:197270:197275	2675043	16	True				
ANR	2675698	Label	case 'c' :	4872:6:197284:197292	2675043	17	True				
ANR	2675699	IfStatement	if ( ( ( given >> 28 ) & 0xf ) != 0xe )		2675043	18					
ANR	2675700	Condition	( ( given >> 28 ) & 0xf ) != 0xe	4873:11:197305:197332	2675043	0	True				
ANR	2675701	EqualityExpression	( ( given >> 28 ) & 0xf ) != 0xe		2675043	0		!=			
ANR	2675702	BitAndExpression	( given >> 28 ) & 0xf		2675043	0		&			
ANR	2675703	ShiftExpression	given >> 28		2675043	0		>>			
ANR	2675704	Identifier	given		2675043	0					
ANR	2675705	PrimaryExpression	28		2675043	1					
ANR	2675706	PrimaryExpression	0xf		2675043	1					
ANR	2675707	PrimaryExpression	0xe		2675043	1					
ANR	2675708	CompoundStatement		161:41:5000:5000	2675043	1					
ANR	2675709	ExpressionStatement	"func ( stream , ""%s"" , arm_conditional [ ( given >> 28 ) & 0xf ] )"	4874:8:197345:197411	2675043	0	True				
ANR	2675710	CallExpression	"func ( stream , ""%s"" , arm_conditional [ ( given >> 28 ) & 0xf ] )"		2675043	0					
ANR	2675711	Callee	func		2675043	0					
ANR	2675712	Identifier	func		2675043	0					
ANR	2675713	ArgumentList	stream		2675043	1					
ANR	2675714	Argument	stream		2675043	0					
ANR	2675715	Identifier	stream		2675043	0					
ANR	2675716	Argument	"""%s"""		2675043	1					
ANR	2675717	PrimaryExpression	"""%s"""		2675043	0					
ANR	2675718	Argument	arm_conditional [ ( given >> 28 ) & 0xf ]		2675043	2					
ANR	2675719	ArrayIndexing	arm_conditional [ ( given >> 28 ) & 0xf ]		2675043	0					
ANR	2675720	Identifier	arm_conditional		2675043	0					
ANR	2675721	BitAndExpression	( given >> 28 ) & 0xf		2675043	1		&			
ANR	2675722	ShiftExpression	given >> 28		2675043	0		>>			
ANR	2675723	Identifier	given		2675043	0					
ANR	2675724	PrimaryExpression	28		2675043	1					
ANR	2675725	PrimaryExpression	0xf		2675043	1					
ANR	2675726	BreakStatement	break ;	4877:7:197429:197434	2675043	19	True				
ANR	2675727	Label	case 'm' :	4879:6:197443:197451	2675043	20	True				
ANR	2675728	CompoundStatement		169:7:5151:5158	2675043	21					
ANR	2675729	IdentifierDeclStatement	int started = 0 ;	4880:7:197462:197477	2675043	0	True				
ANR	2675730	IdentifierDecl	started = 0		2675043	0					
ANR	2675731	IdentifierDeclType	int		2675043	0					
ANR	2675732	Identifier	started		2675043	1					
ANR	2675733	AssignmentExpression	started = 0		2675043	2		=			
ANR	2675734	Identifier	started		2675043	0					
ANR	2675735	PrimaryExpression	0		2675043	1					
ANR	2675736	IdentifierDeclStatement	int reg ;	4881:7:197486:197493	2675043	1	True				
ANR	2675737	IdentifierDecl	reg		2675043	0					
ANR	2675738	IdentifierDeclType	int		2675043	0					
ANR	2675739	Identifier	reg		2675043	1					
ANR	2675740	ExpressionStatement	"func ( stream , ""{"" )"	4883:7:197503:197521	2675043	2	True				
ANR	2675741	CallExpression	"func ( stream , ""{"" )"		2675043	0					
ANR	2675742	Callee	func		2675043	0					
ANR	2675743	Identifier	func		2675043	0					
ANR	2675744	ArgumentList	stream		2675043	1					
ANR	2675745	Argument	stream		2675043	0					
ANR	2675746	Identifier	stream		2675043	0					
ANR	2675747	Argument	"""{"""		2675043	1					
ANR	2675748	PrimaryExpression	"""{"""		2675043	0					
ANR	2675749	ForStatement	for ( reg = 0 ; reg < 16 ; reg ++ )		2675043	3					
ANR	2675750	ForInit	reg = 0 ;	4884:12:197535:197542	2675043	0	True				
ANR	2675751	AssignmentExpression	reg = 0		2675043	0		=			
ANR	2675752	Identifier	reg		2675043	0					
ANR	2675753	PrimaryExpression	0		2675043	1					
ANR	2675754	Condition	reg < 16	4884:21:197544:197551	2675043	1	True				
ANR	2675755	RelationalExpression	reg < 16		2675043	0		<			
ANR	2675756	Identifier	reg		2675043	0					
ANR	2675757	PrimaryExpression	16		2675043	1					
ANR	2675758	PostIncDecOperationExpression	reg ++	4884:31:197554:197558	2675043	2	True				
ANR	2675759	Identifier	reg		2675043	0					
ANR	2675760	IncDec	++		2675043	1					
ANR	2675761	CompoundStatement		172:38:5226:5226	2675043	3					
ANR	2675762	IfStatement	if ( ( given & ( 1 << reg ) ) != 0 )		2675043	0					
ANR	2675763	Condition	( given & ( 1 << reg ) ) != 0	4885:12:197575:197599	2675043	0	True				
ANR	2675764	EqualityExpression	( given & ( 1 << reg ) ) != 0		2675043	0		!=			
ANR	2675765	BitAndExpression	given & ( 1 << reg )		2675043	0		&			
ANR	2675766	Identifier	given		2675043	0					
ANR	2675767	ShiftExpression	1 << reg		2675043	1		<<			
ANR	2675768	PrimaryExpression	1		2675043	0					
ANR	2675769	Identifier	reg		2675043	1					
ANR	2675770	PrimaryExpression	0		2675043	1					
ANR	2675771	CompoundStatement		173:39:5267:5267	2675043	1					
ANR	2675772	IfStatement	if ( started )		2675043	0					
ANR	2675773	Condition	started	4886:13:197617:197623	2675043	0	True				
ANR	2675774	Identifier	started		2675043	0					
ANR	2675775	CompoundStatement		174:22:5291:5291	2675043	1					
ANR	2675776	ExpressionStatement	"func ( stream , "", "" )"	4887:10:197638:197657	2675043	0	True				
ANR	2675777	CallExpression	"func ( stream , "", "" )"		2675043	0					
ANR	2675778	Callee	func		2675043	0					
ANR	2675779	Identifier	func		2675043	0					
ANR	2675780	ArgumentList	stream		2675043	1					
ANR	2675781	Argument	stream		2675043	0					
ANR	2675782	Identifier	stream		2675043	0					
ANR	2675783	Argument	""", """		2675043	1					
ANR	2675784	PrimaryExpression	""", """		2675043	0					
ANR	2675785	ExpressionStatement	started = 1	4889:9:197679:197690	2675043	1	True				
ANR	2675786	AssignmentExpression	started = 1		2675043	0		=			
ANR	2675787	Identifier	started		2675043	0					
ANR	2675788	PrimaryExpression	1		2675043	1					
ANR	2675789	ExpressionStatement	"func ( stream , ""%s"" , arm_regnames [ reg ] )"	4890:9:197701:197739	2675043	2	True				
ANR	2675790	CallExpression	"func ( stream , ""%s"" , arm_regnames [ reg ] )"		2675043	0					
ANR	2675791	Callee	func		2675043	0					
ANR	2675792	Identifier	func		2675043	0					
ANR	2675793	ArgumentList	stream		2675043	1					
ANR	2675794	Argument	stream		2675043	0					
ANR	2675795	Identifier	stream		2675043	0					
ANR	2675796	Argument	"""%s"""		2675043	1					
ANR	2675797	PrimaryExpression	"""%s"""		2675043	0					
ANR	2675798	Argument	arm_regnames [ reg ]		2675043	2					
ANR	2675799	ArrayIndexing	arm_regnames [ reg ]		2675043	0					
ANR	2675800	Identifier	arm_regnames		2675043	0					
ANR	2675801	Identifier	reg		2675043	1					
ANR	2675802	ExpressionStatement	"func ( stream , ""}"" )"	4893:7:197767:197785	2675043	4	True				
ANR	2675803	CallExpression	"func ( stream , ""}"" )"		2675043	0					
ANR	2675804	Callee	func		2675043	0					
ANR	2675805	Identifier	func		2675043	0					
ANR	2675806	ArgumentList	stream		2675043	1					
ANR	2675807	Argument	stream		2675043	0					
ANR	2675808	Identifier	stream		2675043	0					
ANR	2675809	Argument	"""}"""		2675043	1					
ANR	2675810	PrimaryExpression	"""}"""		2675043	0					
ANR	2675811	IfStatement	if ( ! started )		2675043	5					
ANR	2675812	Condition	! started	4894:11:197798:197805	2675043	0	True				
ANR	2675813	UnaryOperationExpression	! started		2675043	0					
ANR	2675814	UnaryOperator	!		2675043	0					
ANR	2675815	Identifier	started		2675043	1					
ANR	2675816	CompoundStatement		182:21:5473:5473	2675043	1					
ANR	2675817	ExpressionStatement	is_unpredictable = TRUE	4895:8:197818:197841	2675043	0	True				
ANR	2675818	AssignmentExpression	is_unpredictable = TRUE		2675043	0		=			
ANR	2675819	Identifier	is_unpredictable		2675043	0					
ANR	2675820	Identifier	TRUE		2675043	1					
ANR	2675821	BreakStatement	break ;	4897:8:197860:197865	2675043	22	True				
ANR	2675822	Label	case 'q' :	4899:6:197874:197882	2675043	23	True				
ANR	2675823	ExpressionStatement	"arm_decode_shift ( given , func , stream , FALSE )"	4900:7:197891:197936	2675043	24	True				
ANR	2675824	CallExpression	"arm_decode_shift ( given , func , stream , FALSE )"		2675043	0					
ANR	2675825	Callee	arm_decode_shift		2675043	0					
ANR	2675826	Identifier	arm_decode_shift		2675043	0					
ANR	2675827	ArgumentList	given		2675043	1					
ANR	2675828	Argument	given		2675043	0					
ANR	2675829	Identifier	given		2675043	0					
ANR	2675830	Argument	func		2675043	1					
ANR	2675831	Identifier	func		2675043	0					
ANR	2675832	Argument	stream		2675043	2					
ANR	2675833	Identifier	stream		2675043	0					
ANR	2675834	Argument	FALSE		2675043	3					
ANR	2675835	Identifier	FALSE		2675043	0					
ANR	2675836	BreakStatement	break ;	4901:7:197945:197950	2675043	25	True				
ANR	2675837	Label	case 'o' :	4903:6:197959:197967	2675043	26	True				
ANR	2675838	IfStatement	if ( ( given & 0x02000000 ) != 0 )		2675043	27					
ANR	2675839	Condition	( given & 0x02000000 ) != 0	4904:11:197980:198004	2675043	0	True				
ANR	2675840	EqualityExpression	( given & 0x02000000 ) != 0		2675043	0		!=			
ANR	2675841	BitAndExpression	given & 0x02000000		2675043	0		&			
ANR	2675842	Identifier	given		2675043	0					
ANR	2675843	PrimaryExpression	0x02000000		2675043	1					
ANR	2675844	PrimaryExpression	0		2675043	1					
ANR	2675845	CompoundStatement		195:8:5779:5796	2675043	1					
ANR	2675846	IdentifierDeclStatement	unsigned int rotate = ( given & 0xf00 ) >> 7 ;	4905:8:198017:198059	2675043	0	True				
ANR	2675847	IdentifierDecl	rotate = ( given & 0xf00 ) >> 7		2675043	0					
ANR	2675848	IdentifierDeclType	unsigned int		2675043	0					
ANR	2675849	Identifier	rotate		2675043	1					
ANR	2675850	AssignmentExpression	rotate = ( given & 0xf00 ) >> 7		2675043	2		=			
ANR	2675851	Identifier	rotate		2675043	0					
ANR	2675852	ShiftExpression	( given & 0xf00 ) >> 7		2675043	1		>>			
ANR	2675853	BitAndExpression	given & 0xf00		2675043	0		&			
ANR	2675854	Identifier	given		2675043	0					
ANR	2675855	PrimaryExpression	0xf00		2675043	1					
ANR	2675856	PrimaryExpression	7		2675043	1					
ANR	2675857	IdentifierDeclStatement	unsigned int immed = ( given & 0xff ) ;	4906:8:198069:198104	2675043	1	True				
ANR	2675858	IdentifierDecl	immed = ( given & 0xff )		2675043	0					
ANR	2675859	IdentifierDeclType	unsigned int		2675043	0					
ANR	2675860	Identifier	immed		2675043	1					
ANR	2675861	AssignmentExpression	immed = ( given & 0xff )		2675043	2		=			
ANR	2675862	Identifier	immed		2675043	0					
ANR	2675863	BitAndExpression	given & 0xff		2675043	1		&			
ANR	2675864	Identifier	given		2675043	0					
ANR	2675865	PrimaryExpression	0xff		2675043	1					
ANR	2675866	IdentifierDeclStatement	"unsigned int a , i ;"	4907:8:198114:198131	2675043	2	True				
ANR	2675867	IdentifierDecl	a		2675043	0					
ANR	2675868	IdentifierDeclType	unsigned int		2675043	0					
ANR	2675869	Identifier	a		2675043	1					
ANR	2675870	IdentifierDecl	i		2675043	1					
ANR	2675871	IdentifierDeclType	unsigned int		2675043	0					
ANR	2675872	Identifier	i		2675043	1					
ANR	2675873	ExpressionStatement	a = ( ( ( immed << ( 32 - rotate ) ) | ( immed >> rotate ) ) & 0xffffffff )	4909:8:198142:198207	2675043	3	True				
ANR	2675874	AssignmentExpression	a = ( ( ( immed << ( 32 - rotate ) ) | ( immed >> rotate ) ) & 0xffffffff )		2675043	0		=			
ANR	2675875	Identifier	a		2675043	0					
ANR	2675876	BitAndExpression	( ( immed << ( 32 - rotate ) ) | ( immed >> rotate ) ) & 0xffffffff		2675043	1		&			
ANR	2675877	InclusiveOrExpression	( immed << ( 32 - rotate ) ) | ( immed >> rotate )		2675043	0		|			
ANR	2675878	ShiftExpression	immed << ( 32 - rotate )		2675043	0		<<			
ANR	2675879	Identifier	immed		2675043	0					
ANR	2675880	AdditiveExpression	32 - rotate		2675043	1		-			
ANR	2675881	PrimaryExpression	32		2675043	0					
ANR	2675882	Identifier	rotate		2675043	1					
ANR	2675883	ShiftExpression	immed >> rotate		2675043	1		>>			
ANR	2675884	Identifier	immed		2675043	0					
ANR	2675885	Identifier	rotate		2675043	1					
ANR	2675886	PrimaryExpression	0xffffffff		2675043	1					
ANR	2675887	ForStatement	for ( i = 0 ; i < 32 ; i += 2 )		2675043	4					
ANR	2675888	ForInit	i = 0 ;	4912:13:198336:198341	2675043	0	True				
ANR	2675889	AssignmentExpression	i = 0		2675043	0		=			
ANR	2675890	Identifier	i		2675043	0					
ANR	2675891	PrimaryExpression	0		2675043	1					
ANR	2675892	Condition	i < 32	4912:20:198343:198348	2675043	1	True				
ANR	2675893	RelationalExpression	i < 32		2675043	0		<			
ANR	2675894	Identifier	i		2675043	0					
ANR	2675895	PrimaryExpression	32		2675043	1					
ANR	2675896	AssignmentExpression	i += 2	4912:28:198351:198356	2675043	2	True	+=			
ANR	2675897	Identifier	i		2675043	0					
ANR	2675898	PrimaryExpression	2		2675043	1					
ANR	2675899	CompoundStatement		200:36:6024:6024	2675043	3					
ANR	2675900	IfStatement	if ( ( a << i | a >> ( 32 - i ) ) <= 0xff )		2675043	0					
ANR	2675901	Condition	( a << i | a >> ( 32 - i ) ) <= 0xff	4913:13:198374:198405	2675043	0	True				
ANR	2675902	RelationalExpression	( a << i | a >> ( 32 - i ) ) <= 0xff		2675043	0		<=			
ANR	2675903	InclusiveOrExpression	a << i | a >> ( 32 - i )		2675043	0		|			
ANR	2675904	ShiftExpression	a << i		2675043	0		<<			
ANR	2675905	Identifier	a		2675043	0					
ANR	2675906	Identifier	i		2675043	1					
ANR	2675907	ShiftExpression	a >> ( 32 - i )		2675043	1		>>			
ANR	2675908	Identifier	a		2675043	0					
ANR	2675909	AdditiveExpression	32 - i		2675043	1		-			
ANR	2675910	PrimaryExpression	32		2675043	0					
ANR	2675911	Identifier	i		2675043	1					
ANR	2675912	PrimaryExpression	0xff		2675043	1					
ANR	2675913	CompoundStatement		201:47:6073:6073	2675043	1					
ANR	2675914	BreakStatement	break ;	4914:10:198420:198425	2675043	0	True				
ANR	2675915	IfStatement	if ( i != rotate )		2675043	5					
ANR	2675916	Condition	i != rotate	4918:12:198461:198471	2675043	0	True				
ANR	2675917	EqualityExpression	i != rotate		2675043	0		!=			
ANR	2675918	Identifier	i		2675043	0					
ANR	2675919	Identifier	rotate		2675043	1					
ANR	2675920	CompoundStatement		206:25:6139:6139	2675043	1					
ANR	2675921	ExpressionStatement	"func ( stream , ""%d, %d"" , immed , rotate )"	4919:9:198485:198523	2675043	0	True				
ANR	2675922	CallExpression	"func ( stream , ""%d, %d"" , immed , rotate )"		2675043	0					
ANR	2675923	Callee	func		2675043	0					
ANR	2675924	Identifier	func		2675043	0					
ANR	2675925	ArgumentList	stream		2675043	1					
ANR	2675926	Argument	stream		2675043	0					
ANR	2675927	Identifier	stream		2675043	0					
ANR	2675928	Argument	"""%d, %d"""		2675043	1					
ANR	2675929	PrimaryExpression	"""%d, %d"""		2675043	0					
ANR	2675930	Argument	immed		2675043	2					
ANR	2675931	Identifier	immed		2675043	0					
ANR	2675932	Argument	rotate		2675043	3					
ANR	2675933	Identifier	rotate		2675043	0					
ANR	2675934	ElseStatement	else		2675043	0					
ANR	2675935	CompoundStatement		208:15:6205:6205	2675043	0					
ANR	2675936	ExpressionStatement	"func ( stream , ""%d"" , a )"	4921:9:198551:198573	2675043	0	True				
ANR	2675937	CallExpression	"func ( stream , ""%d"" , a )"		2675043	0					
ANR	2675938	Callee	func		2675043	0					
ANR	2675939	Identifier	func		2675043	0					
ANR	2675940	ArgumentList	stream		2675043	1					
ANR	2675941	Argument	stream		2675043	0					
ANR	2675942	Identifier	stream		2675043	0					
ANR	2675943	Argument	"""%d"""		2675043	1					
ANR	2675944	PrimaryExpression	"""%d"""		2675043	0					
ANR	2675945	Argument	a		2675043	2					
ANR	2675946	Identifier	a		2675043	0					
ANR	2675947	ExpressionStatement	value_in_comment = a	4923:8:198593:198613	2675043	6	True				
ANR	2675948	AssignmentExpression	value_in_comment = a		2675043	0		=			
ANR	2675949	Identifier	value_in_comment		2675043	0					
ANR	2675950	Identifier	a		2675043	1					
ANR	2675951	ElseStatement	else		2675043	0					
ANR	2675952	CompoundStatement		212:14:6294:6294	2675043	0					
ANR	2675953	ExpressionStatement	"arm_decode_shift ( given , func , stream , TRUE )"	4925:8:198639:198683	2675043	0	True				
ANR	2675954	CallExpression	"arm_decode_shift ( given , func , stream , TRUE )"		2675043	0					
ANR	2675955	Callee	arm_decode_shift		2675043	0					
ANR	2675956	Identifier	arm_decode_shift		2675043	0					
ANR	2675957	ArgumentList	given		2675043	1					
ANR	2675958	Argument	given		2675043	0					
ANR	2675959	Identifier	given		2675043	0					
ANR	2675960	Argument	func		2675043	1					
ANR	2675961	Identifier	func		2675043	0					
ANR	2675962	Argument	stream		2675043	2					
ANR	2675963	Identifier	stream		2675043	0					
ANR	2675964	Argument	TRUE		2675043	3					
ANR	2675965	Identifier	TRUE		2675043	0					
ANR	2675966	BreakStatement	break ;	4927:7:198701:198706	2675043	28	True				
ANR	2675967	Label	case 'p' :	4929:6:198715:198723	2675043	29	True				
ANR	2675968	IfStatement	if ( ( given & 0x0000f000 ) == 0x0000f000 )		2675043	30					
ANR	2675969	Condition	( given & 0x0000f000 ) == 0x0000f000	4930:11:198736:198769	2675043	0	True				
ANR	2675970	EqualityExpression	( given & 0x0000f000 ) == 0x0000f000		2675043	0		==			
ANR	2675971	BitAndExpression	given & 0x0000f000		2675043	0		&			
ANR	2675972	Identifier	given		2675043	0					
ANR	2675973	PrimaryExpression	0x0000f000		2675043	1					
ANR	2675974	PrimaryExpression	0x0000f000		2675043	1					
ANR	2675975	CompoundStatement		219:8:6447:6518	2675043	1					
ANR	2675976	IdentifierDeclStatement	arm_feature_set arm_ext_v6 = ARM_FEATURE_CORE_LOW ( ARM_EXT_V6 ) ;	4931:8:198782:198853	2675043	0	True				
ANR	2675977	IdentifierDecl	arm_ext_v6 = ARM_FEATURE_CORE_LOW ( ARM_EXT_V6 )		2675043	0					
ANR	2675978	IdentifierDeclType	arm_feature_set		2675043	0					
ANR	2675979	Identifier	arm_ext_v6		2675043	1					
ANR	2675980	AssignmentExpression	arm_ext_v6 = ARM_FEATURE_CORE_LOW ( ARM_EXT_V6 )		2675043	2		=			
ANR	2675981	Identifier	arm_ext_v6		2675043	0					
ANR	2675982	CallExpression	ARM_FEATURE_CORE_LOW ( ARM_EXT_V6 )		2675043	1					
ANR	2675983	Callee	ARM_FEATURE_CORE_LOW		2675043	0					
ANR	2675984	Identifier	ARM_FEATURE_CORE_LOW		2675043	0					
ANR	2675985	ArgumentList	ARM_EXT_V6		2675043	1					
ANR	2675986	Argument	ARM_EXT_V6		2675043	0					
ANR	2675987	Identifier	ARM_EXT_V6		2675043	0					
ANR	2675988	IfStatement	"if ( ! ARM_CPU_HAS_FEATURE ( private_data -> features , arm_ext_v6 ) )"		2675043	1					
ANR	2675989	Condition	"! ARM_CPU_HAS_FEATURE ( private_data -> features , arm_ext_v6 )"	4937:12:199019:199088	2675043	0	True				
ANR	2675990	UnaryOperationExpression	"! ARM_CPU_HAS_FEATURE ( private_data -> features , arm_ext_v6 )"		2675043	0					
ANR	2675991	UnaryOperator	!		2675043	0					
ANR	2675992	CallExpression	"ARM_CPU_HAS_FEATURE ( private_data -> features , arm_ext_v6 )"		2675043	1					
ANR	2675993	Callee	ARM_CPU_HAS_FEATURE		2675043	0					
ANR	2675994	Identifier	ARM_CPU_HAS_FEATURE		2675043	0					
ANR	2675995	ArgumentList	private_data -> features		2675043	1					
ANR	2675996	Argument	private_data -> features		2675043	0					
ANR	2675997	PtrMemberAccess	private_data -> features		2675043	0					
ANR	2675998	Identifier	private_data		2675043	0					
ANR	2675999	Identifier	features		2675043	1					
ANR	2676000	Argument	arm_ext_v6		2675043	1					
ANR	2676001	Identifier	arm_ext_v6		2675043	0					
ANR	2676002	CompoundStatement		226:26:6756:6756	2675043	1					
ANR	2676003	ExpressionStatement	"func ( stream , ""p"" )"	4939:9:199102:199120	2675043	0	True				
ANR	2676004	CallExpression	"func ( stream , ""p"" )"		2675043	0					
ANR	2676005	Callee	func		2675043	0					
ANR	2676006	Identifier	func		2675043	0					
ANR	2676007	ArgumentList	stream		2675043	1					
ANR	2676008	Argument	stream		2675043	0					
ANR	2676009	Identifier	stream		2675043	0					
ANR	2676010	Argument	"""p"""		2675043	1					
ANR	2676011	PrimaryExpression	"""p"""		2675043	0					
ANR	2676012	ElseStatement	else		2675043	0					
ANR	2676013	CompoundStatement		228:15:6802:6802	2675043	0					
ANR	2676014	ExpressionStatement	is_unpredictable = TRUE	4941:9:199148:199171	2675043	0	True				
ANR	2676015	AssignmentExpression	is_unpredictable = TRUE		2675043	0		=			
ANR	2676016	Identifier	is_unpredictable		2675043	0					
ANR	2676017	Identifier	TRUE		2675043	1					
ANR	2676018	BreakStatement	break ;	4944:7:199199:199204	2675043	31	True				
ANR	2676019	Label	case 't' :	4946:6:199213:199221	2675043	32	True				
ANR	2676020	IfStatement	if ( ( given & 0x01200000 ) == 0x00200000 )		2675043	33					
ANR	2676021	Condition	( given & 0x01200000 ) == 0x00200000	4947:11:199234:199267	2675043	0	True				
ANR	2676022	EqualityExpression	( given & 0x01200000 ) == 0x00200000		2675043	0		==			
ANR	2676023	BitAndExpression	given & 0x01200000		2675043	0		&			
ANR	2676024	Identifier	given		2675043	0					
ANR	2676025	PrimaryExpression	0x01200000		2675043	1					
ANR	2676026	PrimaryExpression	0x00200000		2675043	1					
ANR	2676027	CompoundStatement		235:47:6935:6935	2675043	1					
ANR	2676028	ExpressionStatement	"func ( stream , ""t"" )"	4948:8:199280:199298	2675043	0	True				
ANR	2676029	CallExpression	"func ( stream , ""t"" )"		2675043	0					
ANR	2676030	Callee	func		2675043	0					
ANR	2676031	Identifier	func		2675043	0					
ANR	2676032	ArgumentList	stream		2675043	1					
ANR	2676033	Argument	stream		2675043	0					
ANR	2676034	Identifier	stream		2675043	0					
ANR	2676035	Argument	"""t"""		2675043	1					
ANR	2676036	PrimaryExpression	"""t"""		2675043	0					
ANR	2676037	BreakStatement	break ;	4950:7:199316:199321	2675043	34	True				
ANR	2676038	Label	case 'A' :	4952:6:199330:199338	2675043	35	True				
ANR	2676039	CompoundStatement		241:7:7014:7039	2675043	36					
ANR	2676040	IdentifierDeclStatement	int offset = given & 0xff ;	4953:7:199349:199374	2675043	0	True				
ANR	2676041	IdentifierDecl	offset = given & 0xff		2675043	0					
ANR	2676042	IdentifierDeclType	int		2675043	0					
ANR	2676043	Identifier	offset		2675043	1					
ANR	2676044	AssignmentExpression	offset = given & 0xff		2675043	2		=			
ANR	2676045	Identifier	offset		2675043	0					
ANR	2676046	BitAndExpression	given & 0xff		2675043	1		&			
ANR	2676047	Identifier	given		2675043	0					
ANR	2676048	PrimaryExpression	0xff		2675043	1					
ANR	2676049	ExpressionStatement	value_in_comment = offset * 4	4955:7:199384:199413	2675043	1	True				
ANR	2676050	AssignmentExpression	value_in_comment = offset * 4		2675043	0		=			
ANR	2676051	Identifier	value_in_comment		2675043	0					
ANR	2676052	MultiplicativeExpression	offset * 4		2675043	1		*			
ANR	2676053	Identifier	offset		2675043	0					
ANR	2676054	PrimaryExpression	4		2675043	1					
ANR	2676055	IfStatement	if ( NEGATIVE_BIT_SET )		2675043	2					
ANR	2676056	Condition	NEGATIVE_BIT_SET	4956:11:199426:199441	2675043	0	True				
ANR	2676057	Identifier	NEGATIVE_BIT_SET		2675043	0					
ANR	2676058	CompoundStatement		244:29:7109:7109	2675043	1					
ANR	2676059	ExpressionStatement	value_in_comment = - value_in_comment	4957:8:199454:199490	2675043	0	True				
ANR	2676060	AssignmentExpression	value_in_comment = - value_in_comment		2675043	0		=			
ANR	2676061	Identifier	value_in_comment		2675043	0					
ANR	2676062	UnaryOperationExpression	- value_in_comment		2675043	1					
ANR	2676063	UnaryOperator	-		2675043	0					
ANR	2676064	Identifier	value_in_comment		2675043	1					
ANR	2676065	ExpressionStatement	"func ( stream , ""[%s"" , arm_regnames [ ( given >> 16 ) & 0xf ] )"	4960:7:199509:199564	2675043	3	True				
ANR	2676066	CallExpression	"func ( stream , ""[%s"" , arm_regnames [ ( given >> 16 ) & 0xf ] )"		2675043	0					
ANR	2676067	Callee	func		2675043	0					
ANR	2676068	Identifier	func		2675043	0					
ANR	2676069	ArgumentList	stream		2675043	1					
ANR	2676070	Argument	stream		2675043	0					
ANR	2676071	Identifier	stream		2675043	0					
ANR	2676072	Argument	"""[%s"""		2675043	1					
ANR	2676073	PrimaryExpression	"""[%s"""		2675043	0					
ANR	2676074	Argument	arm_regnames [ ( given >> 16 ) & 0xf ]		2675043	2					
ANR	2676075	ArrayIndexing	arm_regnames [ ( given >> 16 ) & 0xf ]		2675043	0					
ANR	2676076	Identifier	arm_regnames		2675043	0					
ANR	2676077	BitAndExpression	( given >> 16 ) & 0xf		2675043	1		&			
ANR	2676078	ShiftExpression	given >> 16		2675043	0		>>			
ANR	2676079	Identifier	given		2675043	0					
ANR	2676080	PrimaryExpression	16		2675043	1					
ANR	2676081	PrimaryExpression	0xf		2675043	1					
ANR	2676082	IfStatement	if ( PRE_BIT_SET )		2675043	4					
ANR	2676083	Condition	PRE_BIT_SET	4962:11:199578:199588	2675043	0	True				
ANR	2676084	Identifier	PRE_BIT_SET		2675043	0					
ANR	2676085	CompoundStatement		250:24:7256:7256	2675043	1					
ANR	2676086	IfStatement	if ( offset )		2675043	0					
ANR	2676087	Condition	offset	4963:12:199605:199610	2675043	0	True				
ANR	2676088	Identifier	offset		2675043	0					
ANR	2676089	CompoundStatement		251:20:7278:7278	2675043	1					
ANR	2676090	ExpressionStatement	"func ( stream , "", %d]%s"" , ( int ) value_in_comment , WRITEBACK_BIT_SET ? ""!"" : """" )"	4964:9:199624:199721	2675043	0	True				
ANR	2676091	CallExpression	"func ( stream , "", %d]%s"" , ( int ) value_in_comment , WRITEBACK_BIT_SET ? ""!"" : """" )"		2675043	0					
ANR	2676092	Callee	func		2675043	0					
ANR	2676093	Identifier	func		2675043	0					
ANR	2676094	ArgumentList	stream		2675043	1					
ANR	2676095	Argument	stream		2675043	0					
ANR	2676096	Identifier	stream		2675043	0					
ANR	2676097	Argument	""", %d]%s"""		2675043	1					
ANR	2676098	PrimaryExpression	""", %d]%s"""		2675043	0					
ANR	2676099	Argument	( int ) value_in_comment		2675043	2					
ANR	2676100	CastExpression	( int ) value_in_comment		2675043	0					
ANR	2676101	CastTarget	int		2675043	0					
ANR	2676102	Identifier	value_in_comment		2675043	1					
ANR	2676103	Argument	"WRITEBACK_BIT_SET ? ""!"" : """""		2675043	3					
ANR	2676104	ConditionalExpression	"WRITEBACK_BIT_SET ? ""!"" : """""		2675043	0					
ANR	2676105	Condition	WRITEBACK_BIT_SET		2675043	0					
ANR	2676106	Identifier	WRITEBACK_BIT_SET		2675043	0					
ANR	2676107	PrimaryExpression	"""!"""		2675043	1					
ANR	2676108	PrimaryExpression	""""""		2675043	2					
ANR	2676109	ElseStatement	else		2675043	0					
ANR	2676110	CompoundStatement		255:15:7403:7403	2675043	0					
ANR	2676111	ExpressionStatement	"func ( stream , ""]"" )"	4968:9:199749:199767	2675043	0	True				
ANR	2676112	CallExpression	"func ( stream , ""]"" )"		2675043	0					
ANR	2676113	Callee	func		2675043	0					
ANR	2676114	Identifier	func		2675043	0					
ANR	2676115	ArgumentList	stream		2675043	1					
ANR	2676116	Argument	stream		2675043	0					
ANR	2676117	Identifier	stream		2675043	0					
ANR	2676118	Argument	"""]"""		2675043	1					
ANR	2676119	PrimaryExpression	"""]"""		2675043	0					
ANR	2676120	ElseStatement	else		2675043	0					
ANR	2676121	CompoundStatement		258:14:7458:7458	2675043	0					
ANR	2676122	ExpressionStatement	"func ( stream , ""]"" )"	4971:8:199803:199821	2675043	0	True				
ANR	2676123	CallExpression	"func ( stream , ""]"" )"		2675043	0					
ANR	2676124	Callee	func		2675043	0					
ANR	2676125	Identifier	func		2675043	0					
ANR	2676126	ArgumentList	stream		2675043	1					
ANR	2676127	Argument	stream		2675043	0					
ANR	2676128	Identifier	stream		2675043	0					
ANR	2676129	Argument	"""]"""		2675043	1					
ANR	2676130	PrimaryExpression	"""]"""		2675043	0					
ANR	2676131	IfStatement	if ( WRITEBACK_BIT_SET )		2675043	1					
ANR	2676132	Condition	WRITEBACK_BIT_SET	4973:12:199836:199852	2675043	0	True				
ANR	2676133	Identifier	WRITEBACK_BIT_SET		2675043	0					
ANR	2676134	CompoundStatement		261:31:7520:7520	2675043	1					
ANR	2676135	IfStatement	if ( offset )		2675043	0					
ANR	2676136	Condition	offset	4974:13:199870:199875	2675043	0	True				
ANR	2676137	Identifier	offset		2675043	0					
ANR	2676138	CompoundStatement		262:21:7543:7543	2675043	1					
ANR	2676139	ExpressionStatement	"func ( stream , "", %d"" , ( int ) value_in_comment )"	4975:10:199890:199934	2675043	0	True				
ANR	2676140	CallExpression	"func ( stream , "", %d"" , ( int ) value_in_comment )"		2675043	0					
ANR	2676141	Callee	func		2675043	0					
ANR	2676142	Identifier	func		2675043	0					
ANR	2676143	ArgumentList	stream		2675043	1					
ANR	2676144	Argument	stream		2675043	0					
ANR	2676145	Identifier	stream		2675043	0					
ANR	2676146	Argument	""", %d"""		2675043	1					
ANR	2676147	PrimaryExpression	""", %d"""		2675043	0					
ANR	2676148	Argument	( int ) value_in_comment		2675043	2					
ANR	2676149	CastExpression	( int ) value_in_comment		2675043	0					
ANR	2676150	CastTarget	int		2675043	0					
ANR	2676151	Identifier	value_in_comment		2675043	1					
ANR	2676152	ElseStatement	else		2675043	0					
ANR	2676153	CompoundStatement		265:15:7627:7627	2675043	0					
ANR	2676154	ExpressionStatement	"func ( stream , "", {%d}"" , ( int ) offset )"	4978:9:199973:200009	2675043	0	True				
ANR	2676155	CallExpression	"func ( stream , "", {%d}"" , ( int ) offset )"		2675043	0					
ANR	2676156	Callee	func		2675043	0					
ANR	2676157	Identifier	func		2675043	0					
ANR	2676158	ArgumentList	stream		2675043	1					
ANR	2676159	Argument	stream		2675043	0					
ANR	2676160	Identifier	stream		2675043	0					
ANR	2676161	Argument	""", {%d}"""		2675043	1					
ANR	2676162	PrimaryExpression	""", {%d}"""		2675043	0					
ANR	2676163	Argument	( int ) offset		2675043	2					
ANR	2676164	CastExpression	( int ) offset		2675043	0					
ANR	2676165	CastTarget	int		2675043	0					
ANR	2676166	Identifier	offset		2675043	1					
ANR	2676167	ExpressionStatement	value_in_comment = offset	4979:9:200020:200045	2675043	1	True				
ANR	2676168	AssignmentExpression	value_in_comment = offset		2675043	0		=			
ANR	2676169	Identifier	value_in_comment		2675043	0					
ANR	2676170	Identifier	offset		2675043	1					
ANR	2676171	BreakStatement	break ;	4982:8:200074:200079	2675043	37	True				
ANR	2676172	Label	case 'B' :	4984:6:200088:200096	2675043	38	True				
ANR	2676173	CompoundStatement		276:8:7860:7878	2675043	39					
ANR	2676174	IdentifierDeclStatement	bfd_vma address ;	4987:8:200170:200185	2675043	0	True				
ANR	2676175	IdentifierDecl	address		2675043	0					
ANR	2676176	IdentifierDeclType	bfd_vma		2675043	0					
ANR	2676177	Identifier	address		2675043	1					
ANR	2676178	IdentifierDeclStatement	bfd_vma offset = 0 ;	4988:8:200195:200213	2675043	1	True				
ANR	2676179	IdentifierDecl	offset = 0		2675043	0					
ANR	2676180	IdentifierDeclType	bfd_vma		2675043	0					
ANR	2676181	Identifier	offset		2675043	1					
ANR	2676182	AssignmentExpression	offset = 0		2675043	2		=			
ANR	2676183	Identifier	offset		2675043	0					
ANR	2676184	PrimaryExpression	0		2675043	1					
ANR	2676185	IfStatement	if ( ! NEGATIVE_BIT_SET )		2675043	2					
ANR	2676186	Condition	! NEGATIVE_BIT_SET	4990:12:200228:200244	2675043	0	True				
ANR	2676187	UnaryOperationExpression	! NEGATIVE_BIT_SET		2675043	0					
ANR	2676188	UnaryOperator	!		2675043	0					
ANR	2676189	Identifier	NEGATIVE_BIT_SET		2675043	1					
ANR	2676190	CompoundStatement		278:31:7912:7912	2675043	1					
ANR	2676191	ExpressionStatement	offset = ( - 1 ) ^ 0x00ffffff	4992:9:200309:200335	2675043	0	True				
ANR	2676192	AssignmentExpression	offset = ( - 1 ) ^ 0x00ffffff		2675043	0		=			
ANR	2676193	Identifier	offset		2675043	0					
ANR	2676194	ExclusiveOrExpression	( - 1 ) ^ 0x00ffffff		2675043	1		^			
ANR	2676195	UnaryOperationExpression	- 1		2675043	0					
ANR	2676196	UnaryOperator	-		2675043	0					
ANR	2676197	PrimaryExpression	1		2675043	1					
ANR	2676198	PrimaryExpression	0x00ffffff		2675043	1					
ANR	2676199	ExpressionStatement	offset += given & 0x00ffffff	4996:8:200412:200440	2675043	3	True				
ANR	2676200	AssignmentExpression	offset += given & 0x00ffffff		2675043	0		+=			
ANR	2676201	Identifier	offset		2675043	0					
ANR	2676202	BitAndExpression	given & 0x00ffffff		2675043	1		&			
ANR	2676203	Identifier	given		2675043	0					
ANR	2676204	PrimaryExpression	0x00ffffff		2675043	1					
ANR	2676205	ExpressionStatement	offset <<= 2	4997:8:200450:200462	2675043	4	True				
ANR	2676206	AssignmentExpression	offset <<= 2		2675043	0		<<=			
ANR	2676207	Identifier	offset		2675043	0					
ANR	2676208	PrimaryExpression	2		2675043	1					
ANR	2676209	ExpressionStatement	address = offset + pc + 8	4998:8:200472:200497	2675043	5	True				
ANR	2676210	AssignmentExpression	address = offset + pc + 8		2675043	0		=			
ANR	2676211	Identifier	address		2675043	0					
ANR	2676212	AdditiveExpression	offset + pc + 8		2675043	1		+			
ANR	2676213	Identifier	offset		2675043	0					
ANR	2676214	AdditiveExpression	pc + 8		2675043	1		+			
ANR	2676215	Identifier	pc		2675043	0					
ANR	2676216	PrimaryExpression	8		2675043	1					
ANR	2676217	IfStatement	if ( given & 0x01000000 )		2675043	6					
ANR	2676218	Condition	given & 0x01000000	5000:12:200512:200529	2675043	0	True				
ANR	2676219	BitAndExpression	given & 0x01000000		2675043	0		&			
ANR	2676220	Identifier	given		2675043	0					
ANR	2676221	PrimaryExpression	0x01000000		2675043	1					
ANR	2676222	CompoundStatement		288:32:8197:8197	2675043	1					
ANR	2676223	ExpressionStatement	address += 2	5002:9:200605:200617	2675043	0	True				
ANR	2676224	AssignmentExpression	address += 2		2675043	0		+=			
ANR	2676225	Identifier	address		2675043	0					
ANR	2676226	PrimaryExpression	2		2675043	1					
ANR	2676227	ExpressionStatement	"info -> print_address_func ( address , info )"	5005:8:200638:200678	2675043	7	True				
ANR	2676228	CallExpression	"info -> print_address_func ( address , info )"		2675043	0					
ANR	2676229	Callee	info -> print_address_func		2675043	0					
ANR	2676230	PtrMemberAccess	info -> print_address_func		2675043	0					
ANR	2676231	Identifier	info		2675043	0					
ANR	2676232	Identifier	print_address_func		2675043	1					
ANR	2676233	ArgumentList	address		2675043	1					
ANR	2676234	Argument	address		2675043	0					
ANR	2676235	Identifier	address		2675043	0					
ANR	2676236	Argument	info		2675043	1					
ANR	2676237	Identifier	info		2675043	0					
ANR	2676238	BreakStatement	break ;	5007:7:200696:200701	2675043	40	True				
ANR	2676239	Label	case 'C' :	5009:6:200710:200718	2675043	41	True				
ANR	2676240	IfStatement	if ( ( given & 0x02000200 ) == 0x200 )		2675043	42					
ANR	2676241	Condition	( given & 0x02000200 ) == 0x200	5010:11:200731:200759	2675043	0	True				
ANR	2676242	EqualityExpression	( given & 0x02000200 ) == 0x200		2675043	0		==			
ANR	2676243	BitAndExpression	given & 0x02000200		2675043	0		&			
ANR	2676244	Identifier	given		2675043	0					
ANR	2676245	PrimaryExpression	0x02000200		2675043	1					
ANR	2676246	PrimaryExpression	0x200		2675043	1					
ANR	2676247	CompoundStatement		300:8:8463:8505	2675043	1					
ANR	2676248	IdentifierDeclStatement	const char * name ;	5011:8:200772:200788	2675043	0	True				
ANR	2676249	IdentifierDecl	* name		2675043	0					
ANR	2676250	IdentifierDeclType	const char *		2675043	0					
ANR	2676251	Identifier	name		2675043	1					
ANR	2676252	IdentifierDeclStatement	unsigned sysm = ( given & 0x004f0000 ) >> 16 ;	5012:8:200798:200840	2675043	1	True				
ANR	2676253	IdentifierDecl	sysm = ( given & 0x004f0000 ) >> 16		2675043	0					
ANR	2676254	IdentifierDeclType	unsigned		2675043	0					
ANR	2676255	Identifier	sysm		2675043	1					
ANR	2676256	AssignmentExpression	sysm = ( given & 0x004f0000 ) >> 16		2675043	2		=			
ANR	2676257	Identifier	sysm		2675043	0					
ANR	2676258	ShiftExpression	( given & 0x004f0000 ) >> 16		2675043	1		>>			
ANR	2676259	BitAndExpression	given & 0x004f0000		2675043	0		&			
ANR	2676260	Identifier	given		2675043	0					
ANR	2676261	PrimaryExpression	0x004f0000		2675043	1					
ANR	2676262	PrimaryExpression	16		2675043	1					
ANR	2676263	ExpressionStatement	sysm |= ( given & 0x300 ) >> 4	5014:8:200851:200879	2675043	2	True				
ANR	2676264	AssignmentExpression	sysm |= ( given & 0x300 ) >> 4		2675043	0		|=			
ANR	2676265	Identifier	sysm		2675043	0					
ANR	2676266	ShiftExpression	( given & 0x300 ) >> 4		2675043	1		>>			
ANR	2676267	BitAndExpression	given & 0x300		2675043	0		&			
ANR	2676268	Identifier	given		2675043	0					
ANR	2676269	PrimaryExpression	0x300		2675043	1					
ANR	2676270	PrimaryExpression	4		2675043	1					
ANR	2676271	ExpressionStatement	name = banked_regname ( sysm )	5015:8:200889:200917	2675043	3	True				
ANR	2676272	AssignmentExpression	name = banked_regname ( sysm )		2675043	0		=			
ANR	2676273	Identifier	name		2675043	0					
ANR	2676274	CallExpression	banked_regname ( sysm )		2675043	1					
ANR	2676275	Callee	banked_regname		2675043	0					
ANR	2676276	Identifier	banked_regname		2675043	0					
ANR	2676277	ArgumentList	sysm		2675043	1					
ANR	2676278	Argument	sysm		2675043	0					
ANR	2676279	Identifier	sysm		2675043	0					
ANR	2676280	IfStatement	if ( name != NULL )		2675043	4					
ANR	2676281	Condition	name != NULL	5017:12:200932:200943	2675043	0	True				
ANR	2676282	EqualityExpression	name != NULL		2675043	0		!=			
ANR	2676283	Identifier	name		2675043	0					
ANR	2676284	Identifier	NULL		2675043	1					
ANR	2676285	CompoundStatement		305:26:8611:8611	2675043	1					
ANR	2676286	ExpressionStatement	"func ( stream , ""%s"" , name )"	5018:9:200957:200982	2675043	0	True				
ANR	2676287	CallExpression	"func ( stream , ""%s"" , name )"		2675043	0					
ANR	2676288	Callee	func		2675043	0					
ANR	2676289	Identifier	func		2675043	0					
ANR	2676290	ArgumentList	stream		2675043	1					
ANR	2676291	Argument	stream		2675043	0					
ANR	2676292	Identifier	stream		2675043	0					
ANR	2676293	Argument	"""%s"""		2675043	1					
ANR	2676294	PrimaryExpression	"""%s"""		2675043	0					
ANR	2676295	Argument	name		2675043	2					
ANR	2676296	Identifier	name		2675043	0					
ANR	2676297	ElseStatement	else		2675043	0					
ANR	2676298	CompoundStatement		307:15:8664:8664	2675043	0					
ANR	2676299	ExpressionStatement	"func ( stream , ""(UNDEF: %lu)"" , ( unsigned long ) sysm )"	5020:9:201010:201060	2675043	0	True				
ANR	2676300	CallExpression	"func ( stream , ""(UNDEF: %lu)"" , ( unsigned long ) sysm )"		2675043	0					
ANR	2676301	Callee	func		2675043	0					
ANR	2676302	Identifier	func		2675043	0					
ANR	2676303	ArgumentList	stream		2675043	1					
ANR	2676304	Argument	stream		2675043	0					
ANR	2676305	Identifier	stream		2675043	0					
ANR	2676306	Argument	"""(UNDEF: %lu)"""		2675043	1					
ANR	2676307	PrimaryExpression	"""(UNDEF: %lu)"""		2675043	0					
ANR	2676308	Argument	( unsigned long ) sysm		2675043	2					
ANR	2676309	CastExpression	( unsigned long ) sysm		2675043	0					
ANR	2676310	CastTarget	unsigned long		2675043	0					
ANR	2676311	Identifier	sysm		2675043	1					
ANR	2676312	ElseStatement	else		2675043	0					
ANR	2676313	CompoundStatement		310:14:8751:8751	2675043	0					
ANR	2676314	ExpressionStatement	"func ( stream , ""%cPSR_"" , ( given & 0x00400000 ) ? 'S' : 'C' )"	5023:8:201096:201162	2675043	0	True				
ANR	2676315	CallExpression	"func ( stream , ""%cPSR_"" , ( given & 0x00400000 ) ? 'S' : 'C' )"		2675043	0					
ANR	2676316	Callee	func		2675043	0					
ANR	2676317	Identifier	func		2675043	0					
ANR	2676318	ArgumentList	stream		2675043	1					
ANR	2676319	Argument	stream		2675043	0					
ANR	2676320	Identifier	stream		2675043	0					
ANR	2676321	Argument	"""%cPSR_"""		2675043	1					
ANR	2676322	PrimaryExpression	"""%cPSR_"""		2675043	0					
ANR	2676323	Argument	( given & 0x00400000 ) ? 'S' : 'C'		2675043	2					
ANR	2676324	ConditionalExpression	( given & 0x00400000 ) ? 'S' : 'C'		2675043	0					
ANR	2676325	Condition	given & 0x00400000		2675043	0					
ANR	2676326	BitAndExpression	given & 0x00400000		2675043	0		&			
ANR	2676327	Identifier	given		2675043	0					
ANR	2676328	PrimaryExpression	0x00400000		2675043	1					
ANR	2676329	PrimaryExpression	'S'		2675043	1					
ANR	2676330	PrimaryExpression	'C'		2675043	2					
ANR	2676331	IfStatement	if ( given & 0x80000 )		2675043	1					
ANR	2676332	Condition	given & 0x80000	5025:12:201176:201190	2675043	0	True				
ANR	2676333	BitAndExpression	given & 0x80000		2675043	0		&			
ANR	2676334	Identifier	given		2675043	0					
ANR	2676335	PrimaryExpression	0x80000		2675043	1					
ANR	2676336	CompoundStatement		313:29:8858:8858	2675043	1					
ANR	2676337	ExpressionStatement	"func ( stream , ""f"" )"	5026:9:201204:201222	2675043	0	True				
ANR	2676338	CallExpression	"func ( stream , ""f"" )"		2675043	0					
ANR	2676339	Callee	func		2675043	0					
ANR	2676340	Identifier	func		2675043	0					
ANR	2676341	ArgumentList	stream		2675043	1					
ANR	2676342	Argument	stream		2675043	0					
ANR	2676343	Identifier	stream		2675043	0					
ANR	2676344	Argument	"""f"""		2675043	1					
ANR	2676345	PrimaryExpression	"""f"""		2675043	0					
ANR	2676346	IfStatement	if ( given & 0x40000 )		2675043	2					
ANR	2676347	Condition	given & 0x40000	5028:12:201246:201260	2675043	0	True				
ANR	2676348	BitAndExpression	given & 0x40000		2675043	0		&			
ANR	2676349	Identifier	given		2675043	0					
ANR	2676350	PrimaryExpression	0x40000		2675043	1					
ANR	2676351	CompoundStatement		316:29:8928:8928	2675043	1					
ANR	2676352	ExpressionStatement	"func ( stream , ""s"" )"	5029:9:201274:201292	2675043	0	True				
ANR	2676353	CallExpression	"func ( stream , ""s"" )"		2675043	0					
ANR	2676354	Callee	func		2675043	0					
ANR	2676355	Identifier	func		2675043	0					
ANR	2676356	ArgumentList	stream		2675043	1					
ANR	2676357	Argument	stream		2675043	0					
ANR	2676358	Identifier	stream		2675043	0					
ANR	2676359	Argument	"""s"""		2675043	1					
ANR	2676360	PrimaryExpression	"""s"""		2675043	0					
ANR	2676361	IfStatement	if ( given & 0x20000 )		2675043	3					
ANR	2676362	Condition	given & 0x20000	5031:12:201316:201330	2675043	0	True				
ANR	2676363	BitAndExpression	given & 0x20000		2675043	0		&			
ANR	2676364	Identifier	given		2675043	0					
ANR	2676365	PrimaryExpression	0x20000		2675043	1					
ANR	2676366	CompoundStatement		319:29:8998:8998	2675043	1					
ANR	2676367	ExpressionStatement	"func ( stream , ""x"" )"	5032:9:201344:201362	2675043	0	True				
ANR	2676368	CallExpression	"func ( stream , ""x"" )"		2675043	0					
ANR	2676369	Callee	func		2675043	0					
ANR	2676370	Identifier	func		2675043	0					
ANR	2676371	ArgumentList	stream		2675043	1					
ANR	2676372	Argument	stream		2675043	0					
ANR	2676373	Identifier	stream		2675043	0					
ANR	2676374	Argument	"""x"""		2675043	1					
ANR	2676375	PrimaryExpression	"""x"""		2675043	0					
ANR	2676376	IfStatement	if ( given & 0x10000 )		2675043	4					
ANR	2676377	Condition	given & 0x10000	5034:12:201386:201400	2675043	0	True				
ANR	2676378	BitAndExpression	given & 0x10000		2675043	0		&			
ANR	2676379	Identifier	given		2675043	0					
ANR	2676380	PrimaryExpression	0x10000		2675043	1					
ANR	2676381	CompoundStatement		322:29:9068:9068	2675043	1					
ANR	2676382	ExpressionStatement	"func ( stream , ""c"" )"	5035:9:201414:201432	2675043	0	True				
ANR	2676383	CallExpression	"func ( stream , ""c"" )"		2675043	0					
ANR	2676384	Callee	func		2675043	0					
ANR	2676385	Identifier	func		2675043	0					
ANR	2676386	ArgumentList	stream		2675043	1					
ANR	2676387	Argument	stream		2675043	0					
ANR	2676388	Identifier	stream		2675043	0					
ANR	2676389	Argument	"""c"""		2675043	1					
ANR	2676390	PrimaryExpression	"""c"""		2675043	0					
ANR	2676391	BreakStatement	break ;	5038:7:201460:201465	2675043	43	True				
ANR	2676392	Label	case 'U' :	5040:6:201474:201482	2675043	44	True				
ANR	2676393	IfStatement	if ( ( given & 0xf0 ) == 0x60 )		2675043	45					
ANR	2676394	Condition	( given & 0xf0 ) == 0x60	5041:11:201495:201516	2675043	0	True				
ANR	2676395	EqualityExpression	( given & 0xf0 ) == 0x60		2675043	0		==			
ANR	2676396	BitAndExpression	given & 0xf0		2675043	0		&			
ANR	2676397	Identifier	given		2675043	0					
ANR	2676398	PrimaryExpression	0xf0		2675043	1					
ANR	2676399	PrimaryExpression	0x60		2675043	1					
ANR	2676400	CompoundStatement		329:35:9184:9184	2675043	1					
ANR	2676401	SwitchStatement	switch ( given & 0xf )		2675043	0					
ANR	2676402	Condition	given & 0xf	5042:16:201537:201547	2675043	0	True				
ANR	2676403	BitAndExpression	given & 0xf		2675043	0		&			
ANR	2676404	Identifier	given		2675043	0					
ANR	2676405	PrimaryExpression	0xf		2675043	1					
ANR	2676406	CompoundStatement		330:29:9215:9215	2675043	1					
ANR	2676407	Label	case 0xf :	5043:8:201560:201568	2675043	0	True				
ANR	2676408	ExpressionStatement	"func ( stream , ""sy"" )"	5043:18:201570:201589	2675043	1	True				
ANR	2676409	CallExpression	"func ( stream , ""sy"" )"		2675043	0					
ANR	2676410	Callee	func		2675043	0					
ANR	2676411	Identifier	func		2675043	0					
ANR	2676412	ArgumentList	stream		2675043	1					
ANR	2676413	Argument	stream		2675043	0					
ANR	2676414	Identifier	stream		2675043	0					
ANR	2676415	Argument	"""sy"""		2675043	1					
ANR	2676416	PrimaryExpression	"""sy"""		2675043	0					
ANR	2676417	BreakStatement	break ;	5043:39:201591:201596	2675043	2	True				
ANR	2676418	Label	default :	5044:8:201606:201613	2675043	3	True				
ANR	2676419	Identifier	default		2675043	0					
ANR	2676420	ExpressionStatement	"func ( stream , ""%d"" , ( int ) given & 0xf )"	5045:9:201624:201661	2675043	4	True				
ANR	2676421	CallExpression	"func ( stream , ""%d"" , ( int ) given & 0xf )"		2675043	0					
ANR	2676422	Callee	func		2675043	0					
ANR	2676423	Identifier	func		2675043	0					
ANR	2676424	ArgumentList	stream		2675043	1					
ANR	2676425	Argument	stream		2675043	0					
ANR	2676426	Identifier	stream		2675043	0					
ANR	2676427	Argument	"""%d"""		2675043	1					
ANR	2676428	PrimaryExpression	"""%d"""		2675043	0					
ANR	2676429	Argument	( int ) given & 0xf		2675043	2					
ANR	2676430	BitAndExpression	( int ) given & 0xf		2675043	0		&			
ANR	2676431	CastExpression	( int ) given		2675043	0					
ANR	2676432	CastTarget	int		2675043	0					
ANR	2676433	Identifier	given		2675043	1					
ANR	2676434	PrimaryExpression	0xf		2675043	1					
ANR	2676435	BreakStatement	break ;	5046:9:201672:201677	2675043	5	True				
ANR	2676436	ElseStatement	else		2675043	0					
ANR	2676437	CompoundStatement		337:8:9378:9429	2675043	0					
ANR	2676438	IdentifierDeclStatement	const char * opt = data_barrier_option ( given & 0xf ) ;	5049:8:201713:201764	2675043	0	True				
ANR	2676439	IdentifierDecl	* opt = data_barrier_option ( given & 0xf )		2675043	0					
ANR	2676440	IdentifierDeclType	const char *		2675043	0					
ANR	2676441	Identifier	opt		2675043	1					
ANR	2676442	AssignmentExpression	* opt = data_barrier_option ( given & 0xf )		2675043	2		=			
ANR	2676443	Identifier	opt		2675043	0					
ANR	2676444	CallExpression	data_barrier_option ( given & 0xf )		2675043	1					
ANR	2676445	Callee	data_barrier_option		2675043	0					
ANR	2676446	Identifier	data_barrier_option		2675043	0					
ANR	2676447	ArgumentList	given & 0xf		2675043	1					
ANR	2676448	Argument	given & 0xf		2675043	0					
ANR	2676449	BitAndExpression	given & 0xf		2675043	0		&			
ANR	2676450	Identifier	given		2675043	0					
ANR	2676451	PrimaryExpression	0xf		2675043	1					
ANR	2676452	IfStatement	if ( opt != NULL )		2675043	1					
ANR	2676453	Condition	opt != NULL	5050:12:201778:201788	2675043	0	True				
ANR	2676454	EqualityExpression	opt != NULL		2675043	0		!=			
ANR	2676455	Identifier	opt		2675043	0					
ANR	2676456	Identifier	NULL		2675043	1					
ANR	2676457	CompoundStatement		338:25:9456:9456	2675043	1					
ANR	2676458	ExpressionStatement	"func ( stream , ""%s"" , opt )"	5051:9:201802:201826	2675043	0	True				
ANR	2676459	CallExpression	"func ( stream , ""%s"" , opt )"		2675043	0					
ANR	2676460	Callee	func		2675043	0					
ANR	2676461	Identifier	func		2675043	0					
ANR	2676462	ArgumentList	stream		2675043	1					
ANR	2676463	Argument	stream		2675043	0					
ANR	2676464	Identifier	stream		2675043	0					
ANR	2676465	Argument	"""%s"""		2675043	1					
ANR	2676466	PrimaryExpression	"""%s"""		2675043	0					
ANR	2676467	Argument	opt		2675043	2					
ANR	2676468	Identifier	opt		2675043	0					
ANR	2676469	ElseStatement	else		2675043	0					
ANR	2676470	CompoundStatement		340:15:9508:9508	2675043	0					
ANR	2676471	ExpressionStatement	"func ( stream , ""%d"" , ( int ) given & 0xf )"	5053:9:201854:201891	2675043	0	True				
ANR	2676472	CallExpression	"func ( stream , ""%d"" , ( int ) given & 0xf )"		2675043	0					
ANR	2676473	Callee	func		2675043	0					
ANR	2676474	Identifier	func		2675043	0					
ANR	2676475	ArgumentList	stream		2675043	1					
ANR	2676476	Argument	stream		2675043	0					
ANR	2676477	Identifier	stream		2675043	0					
ANR	2676478	Argument	"""%d"""		2675043	1					
ANR	2676479	PrimaryExpression	"""%d"""		2675043	0					
ANR	2676480	Argument	( int ) given & 0xf		2675043	2					
ANR	2676481	BitAndExpression	( int ) given & 0xf		2675043	0		&			
ANR	2676482	CastExpression	( int ) given		2675043	0					
ANR	2676483	CastTarget	int		2675043	0					
ANR	2676484	Identifier	given		2675043	1					
ANR	2676485	PrimaryExpression	0xf		2675043	1					
ANR	2676486	BreakStatement	break ;	5056:7:201919:201924	2675043	46	True				
ANR	2676487	Label	case '0' :	5058:6:201933:201941	2675043	47	True				
ANR	2676488	Label	case '1' :	5059:6:201949:201957	2675043	48	True				
ANR	2676489	Label	case '2' :	5060:6:201965:201973	2675043	49	True				
ANR	2676490	Label	case '3' :	5061:6:201981:201989	2675043	50	True				
ANR	2676491	Label	case '4' :	5062:6:201997:202005	2675043	51	True				
ANR	2676492	Label	case '5' :	5063:6:202013:202021	2675043	52	True				
ANR	2676493	Label	case '6' :	5064:6:202029:202037	2675043	53	True				
ANR	2676494	Label	case '7' :	5065:6:202045:202053	2675043	54	True				
ANR	2676495	Label	case '8' :	5066:6:202061:202069	2675043	55	True				
ANR	2676496	Label	case '9' :	5067:6:202077:202085	2675043	56	True				
ANR	2676497	CompoundStatement		357:7:9779:9798	2675043	57					
ANR	2676498	IdentifierDeclStatement	int width ;	5068:7:202096:202105	2675043	0	True				
ANR	2676499	IdentifierDecl	width		2675043	0					
ANR	2676500	IdentifierDeclType	int		2675043	0					
ANR	2676501	Identifier	width		2675043	1					
ANR	2676502	IdentifierDeclStatement	unsigned long value ;	5069:7:202114:202133	2675043	1	True				
ANR	2676503	IdentifierDecl	value		2675043	0					
ANR	2676504	IdentifierDeclType	unsigned long		2675043	0					
ANR	2676505	Identifier	value		2675043	1					
ANR	2676506	ExpressionStatement	"c = arm_decode_bitfield ( c , given , & value , & width )"	5071:7:202143:202193	2675043	2	True				
ANR	2676507	AssignmentExpression	"c = arm_decode_bitfield ( c , given , & value , & width )"		2675043	0		=			
ANR	2676508	Identifier	c		2675043	0					
ANR	2676509	CallExpression	"arm_decode_bitfield ( c , given , & value , & width )"		2675043	1					
ANR	2676510	Callee	arm_decode_bitfield		2675043	0					
ANR	2676511	Identifier	arm_decode_bitfield		2675043	0					
ANR	2676512	ArgumentList	c		2675043	1					
ANR	2676513	Argument	c		2675043	0					
ANR	2676514	Identifier	c		2675043	0					
ANR	2676515	Argument	given		2675043	1					
ANR	2676516	Identifier	given		2675043	0					
ANR	2676517	Argument	& value		2675043	2					
ANR	2676518	UnaryOperationExpression	& value		2675043	0					
ANR	2676519	UnaryOperator	&		2675043	0					
ANR	2676520	Identifier	value		2675043	1					
ANR	2676521	Argument	& width		2675043	3					
ANR	2676522	UnaryOperationExpression	& width		2675043	0					
ANR	2676523	UnaryOperator	&		2675043	0					
ANR	2676524	Identifier	width		2675043	1					
ANR	2676525	SwitchStatement	switch ( * c )		2675043	3					
ANR	2676526	Condition	* c	5073:15:202211:202212	2675043	0	True				
ANR	2676527	UnaryOperationExpression	* c		2675043	0					
ANR	2676528	UnaryOperator	*		2675043	0					
ANR	2676529	Identifier	c		2675043	1					
ANR	2676530	CompoundStatement		361:19:9880:9880	2675043	1					
ANR	2676531	Label	case 'R' :	5074:7:202224:202232	2675043	0	True				
ANR	2676532	IfStatement	if ( value == 15 )		2675043	1					
ANR	2676533	Condition	value == 15	5075:12:202246:202256	2675043	0	True				
ANR	2676534	EqualityExpression	value == 15		2675043	0		==			
ANR	2676535	Identifier	value		2675043	0					
ANR	2676536	PrimaryExpression	15		2675043	1					
ANR	2676537	CompoundStatement		363:25:9924:9924	2675043	1					
ANR	2676538	ExpressionStatement	is_unpredictable = TRUE	5076:9:202270:202293	2675043	0	True				
ANR	2676539	AssignmentExpression	is_unpredictable = TRUE		2675043	0		=			
ANR	2676540	Identifier	is_unpredictable		2675043	0					
ANR	2676541	Identifier	TRUE		2675043	1					
ANR	2676542	Label	case 'r' :	5079:7:202341:202349	2675043	2	True				
ANR	2676543	Label	case 'T' :	5080:7:202358:202366	2675043	3	True				
ANR	2676544	IfStatement	if ( * c == 'T' )		2675043	4					
ANR	2676545	Condition	* c == 'T'	5082:12:202433:202441	2675043	0	True				
ANR	2676546	EqualityExpression	* c == 'T'		2675043	0		==			
ANR	2676547	UnaryOperationExpression	* c		2675043	0					
ANR	2676548	UnaryOperator	*		2675043	0					
ANR	2676549	Identifier	c		2675043	1					
ANR	2676550	PrimaryExpression	'T'		2675043	1					
ANR	2676551	CompoundStatement		370:23:10109:10109	2675043	1					
ANR	2676552	ExpressionStatement	++ value	5083:9:202455:202462	2675043	0	True				
ANR	2676553	UnaryExpression	++ value		2675043	0					
ANR	2676554	IncDec	++		2675043	0					
ANR	2676555	Identifier	value		2675043	1					
ANR	2676556	IfStatement	if ( c [ 1 ] == 'u' )		2675043	5					
ANR	2676557	Condition	c [ 1 ] == 'u'	5086:12:202487:202497	2675043	0	True				
ANR	2676558	EqualityExpression	c [ 1 ] == 'u'		2675043	0		==			
ANR	2676559	ArrayIndexing	c [ 1 ]		2675043	0					
ANR	2676560	Identifier	c		2675043	0					
ANR	2676561	PrimaryExpression	1		2675043	1					
ANR	2676562	PrimaryExpression	'u'		2675043	1					
ANR	2676563	CompoundStatement		374:25:10165:10165	2675043	1					
ANR	2676564	ExpressionStatement	++ c	5088:9:202550:202553	2675043	0	True				
ANR	2676565	UnaryExpression	++ c		2675043	0					
ANR	2676566	IncDec	++		2675043	0					
ANR	2676567	Identifier	c		2675043	1					
ANR	2676568	IfStatement	if ( u_reg == value )		2675043	1					
ANR	2676569	Condition	u_reg == value	5090:13:202569:202582	2675043	0	True				
ANR	2676570	EqualityExpression	u_reg == value		2675043	0		==			
ANR	2676571	Identifier	u_reg		2675043	0					
ANR	2676572	Identifier	value		2675043	1					
ANR	2676573	CompoundStatement		378:29:10250:10250	2675043	1					
ANR	2676574	ExpressionStatement	is_unpredictable = TRUE	5091:10:202597:202620	2675043	0	True				
ANR	2676575	AssignmentExpression	is_unpredictable = TRUE		2675043	0		=			
ANR	2676576	Identifier	is_unpredictable		2675043	0					
ANR	2676577	Identifier	TRUE		2675043	1					
ANR	2676578	ExpressionStatement	u_reg = value	5093:9:202642:202655	2675043	2	True				
ANR	2676579	AssignmentExpression	u_reg = value		2675043	0		=			
ANR	2676580	Identifier	u_reg		2675043	0					
ANR	2676581	Identifier	value		2675043	1					
ANR	2676582	IfStatement	if ( c [ 1 ] == 'U' )		2675043	6					
ANR	2676583	Condition	c [ 1 ] == 'U'	5095:12:202679:202689	2675043	0	True				
ANR	2676584	EqualityExpression	c [ 1 ] == 'U'		2675043	0		==			
ANR	2676585	ArrayIndexing	c [ 1 ]		2675043	0					
ANR	2676586	Identifier	c		2675043	0					
ANR	2676587	PrimaryExpression	1		2675043	1					
ANR	2676588	PrimaryExpression	'U'		2675043	1					
ANR	2676589	CompoundStatement		383:25:10357:10357	2675043	1					
ANR	2676590	ExpressionStatement	++ c	5097:9:202742:202745	2675043	0	True				
ANR	2676591	UnaryExpression	++ c		2675043	0					
ANR	2676592	IncDec	++		2675043	0					
ANR	2676593	Identifier	c		2675043	1					
ANR	2676594	IfStatement	if ( U_reg == value )		2675043	1					
ANR	2676595	Condition	U_reg == value	5099:13:202761:202774	2675043	0	True				
ANR	2676596	EqualityExpression	U_reg == value		2675043	0		==			
ANR	2676597	Identifier	U_reg		2675043	0					
ANR	2676598	Identifier	value		2675043	1					
ANR	2676599	CompoundStatement		387:29:10442:10442	2675043	1					
ANR	2676600	ExpressionStatement	is_unpredictable = TRUE	5100:10:202789:202812	2675043	0	True				
ANR	2676601	AssignmentExpression	is_unpredictable = TRUE		2675043	0		=			
ANR	2676602	Identifier	is_unpredictable		2675043	0					
ANR	2676603	Identifier	TRUE		2675043	1					
ANR	2676604	ExpressionStatement	U_reg = value	5102:9:202834:202847	2675043	2	True				
ANR	2676605	AssignmentExpression	U_reg = value		2675043	0		=			
ANR	2676606	Identifier	U_reg		2675043	0					
ANR	2676607	Identifier	value		2675043	1					
ANR	2676608	ExpressionStatement	"func ( stream , ""%s"" , arm_regnames [ value ] )"	5104:8:202867:202907	2675043	7	True				
ANR	2676609	CallExpression	"func ( stream , ""%s"" , arm_regnames [ value ] )"		2675043	0					
ANR	2676610	Callee	func		2675043	0					
ANR	2676611	Identifier	func		2675043	0					
ANR	2676612	ArgumentList	stream		2675043	1					
ANR	2676613	Argument	stream		2675043	0					
ANR	2676614	Identifier	stream		2675043	0					
ANR	2676615	Argument	"""%s"""		2675043	1					
ANR	2676616	PrimaryExpression	"""%s"""		2675043	0					
ANR	2676617	Argument	arm_regnames [ value ]		2675043	2					
ANR	2676618	ArrayIndexing	arm_regnames [ value ]		2675043	0					
ANR	2676619	Identifier	arm_regnames		2675043	0					
ANR	2676620	Identifier	value		2675043	1					
ANR	2676621	BreakStatement	break ;	5105:8:202917:202922	2675043	8	True				
ANR	2676622	Label	case 'd' :	5106:7:202931:202939	2675043	9	True				
ANR	2676623	ExpressionStatement	"func ( stream , ""%ld"" , value )"	5107:8:202949:202976	2675043	10	True				
ANR	2676624	CallExpression	"func ( stream , ""%ld"" , value )"		2675043	0					
ANR	2676625	Callee	func		2675043	0					
ANR	2676626	Identifier	func		2675043	0					
ANR	2676627	ArgumentList	stream		2675043	1					
ANR	2676628	Argument	stream		2675043	0					
ANR	2676629	Identifier	stream		2675043	0					
ANR	2676630	Argument	"""%ld"""		2675043	1					
ANR	2676631	PrimaryExpression	"""%ld"""		2675043	0					
ANR	2676632	Argument	value		2675043	2					
ANR	2676633	Identifier	value		2675043	0					
ANR	2676634	ExpressionStatement	value_in_comment = value	5108:8:202986:203010	2675043	11	True				
ANR	2676635	AssignmentExpression	value_in_comment = value		2675043	0		=			
ANR	2676636	Identifier	value_in_comment		2675043	0					
ANR	2676637	Identifier	value		2675043	1					
ANR	2676638	BreakStatement	break ;	5109:8:203020:203025	2675043	12	True				
ANR	2676639	Label	case 'b' :	5110:7:203034:203042	2675043	13	True				
ANR	2676640	ExpressionStatement	"func ( stream , ""%ld"" , value * 8 )"	5111:8:203052:203083	2675043	14	True				
ANR	2676641	CallExpression	"func ( stream , ""%ld"" , value * 8 )"		2675043	0					
ANR	2676642	Callee	func		2675043	0					
ANR	2676643	Identifier	func		2675043	0					
ANR	2676644	ArgumentList	stream		2675043	1					
ANR	2676645	Argument	stream		2675043	0					
ANR	2676646	Identifier	stream		2675043	0					
ANR	2676647	Argument	"""%ld"""		2675043	1					
ANR	2676648	PrimaryExpression	"""%ld"""		2675043	0					
ANR	2676649	Argument	value * 8		2675043	2					
ANR	2676650	MultiplicativeExpression	value * 8		2675043	0		*			
ANR	2676651	Identifier	value		2675043	0					
ANR	2676652	PrimaryExpression	8		2675043	1					
ANR	2676653	ExpressionStatement	value_in_comment = value * 8	5112:8:203093:203121	2675043	15	True				
ANR	2676654	AssignmentExpression	value_in_comment = value * 8		2675043	0		=			
ANR	2676655	Identifier	value_in_comment		2675043	0					
ANR	2676656	MultiplicativeExpression	value * 8		2675043	1		*			
ANR	2676657	Identifier	value		2675043	0					
ANR	2676658	PrimaryExpression	8		2675043	1					
ANR	2676659	BreakStatement	break ;	5113:8:203131:203136	2675043	16	True				
ANR	2676660	Label	case 'W' :	5114:7:203145:203153	2675043	17	True				
ANR	2676661	ExpressionStatement	"func ( stream , ""%ld"" , value + 1 )"	5115:8:203163:203194	2675043	18	True				
ANR	2676662	CallExpression	"func ( stream , ""%ld"" , value + 1 )"		2675043	0					
ANR	2676663	Callee	func		2675043	0					
ANR	2676664	Identifier	func		2675043	0					
ANR	2676665	ArgumentList	stream		2675043	1					
ANR	2676666	Argument	stream		2675043	0					
ANR	2676667	Identifier	stream		2675043	0					
ANR	2676668	Argument	"""%ld"""		2675043	1					
ANR	2676669	PrimaryExpression	"""%ld"""		2675043	0					
ANR	2676670	Argument	value + 1		2675043	2					
ANR	2676671	AdditiveExpression	value + 1		2675043	0		+			
ANR	2676672	Identifier	value		2675043	0					
ANR	2676673	PrimaryExpression	1		2675043	1					
ANR	2676674	ExpressionStatement	value_in_comment = value + 1	5116:8:203204:203232	2675043	19	True				
ANR	2676675	AssignmentExpression	value_in_comment = value + 1		2675043	0		=			
ANR	2676676	Identifier	value_in_comment		2675043	0					
ANR	2676677	AdditiveExpression	value + 1		2675043	1		+			
ANR	2676678	Identifier	value		2675043	0					
ANR	2676679	PrimaryExpression	1		2675043	1					
ANR	2676680	BreakStatement	break ;	5117:8:203242:203247	2675043	20	True				
ANR	2676681	Label	case 'x' :	5118:7:203256:203264	2675043	21	True				
ANR	2676682	ExpressionStatement	"func ( stream , ""0x%08lx"" , value )"	5119:8:203274:203305	2675043	22	True				
ANR	2676683	CallExpression	"func ( stream , ""0x%08lx"" , value )"		2675043	0					
ANR	2676684	Callee	func		2675043	0					
ANR	2676685	Identifier	func		2675043	0					
ANR	2676686	ArgumentList	stream		2675043	1					
ANR	2676687	Argument	stream		2675043	0					
ANR	2676688	Identifier	stream		2675043	0					
ANR	2676689	Argument	"""0x%08lx"""		2675043	1					
ANR	2676690	PrimaryExpression	"""0x%08lx"""		2675043	0					
ANR	2676691	Argument	value		2675043	2					
ANR	2676692	Identifier	value		2675043	0					
ANR	2676693	IfStatement	if ( ( given & 0x0fffffff ) == 0x0FF00000 )		2675043	23					
ANR	2676694	Condition	( given & 0x0fffffff ) == 0x0FF00000	5123:12:203390:203423	2675043	0	True				
ANR	2676695	EqualityExpression	( given & 0x0fffffff ) == 0x0FF00000		2675043	0		==			
ANR	2676696	BitAndExpression	given & 0x0fffffff		2675043	0		&			
ANR	2676697	Identifier	given		2675043	0					
ANR	2676698	PrimaryExpression	0x0fffffff		2675043	1					
ANR	2676699	PrimaryExpression	0x0FF00000		2675043	1					
ANR	2676700	CompoundStatement		411:48:11091:11091	2675043	1					
ANR	2676701	ExpressionStatement	"func ( stream , "" ; IMB"" )"	5124:9:203437:203460	2675043	0	True				
ANR	2676702	CallExpression	"func ( stream , "" ; IMB"" )"		2675043	0					
ANR	2676703	Callee	func		2675043	0					
ANR	2676704	Identifier	func		2675043	0					
ANR	2676705	ArgumentList	stream		2675043	1					
ANR	2676706	Argument	stream		2675043	0					
ANR	2676707	Identifier	stream		2675043	0					
ANR	2676708	Argument	""" ; IMB"""		2675043	1					
ANR	2676709	PrimaryExpression	""" ; IMB"""		2675043	0					
ANR	2676710	ElseStatement	else		2675043	0					
ANR	2676711	IfStatement	if ( ( given & 0x0fffffff ) == 0x0FF00001 )		2675043	0					
ANR	2676712	Condition	( given & 0x0fffffff ) == 0x0FF00001	5125:19:203481:203514	2675043	0	True				
ANR	2676713	EqualityExpression	( given & 0x0fffffff ) == 0x0FF00001		2675043	0		==			
ANR	2676714	BitAndExpression	given & 0x0fffffff		2675043	0		&			
ANR	2676715	Identifier	given		2675043	0					
ANR	2676716	PrimaryExpression	0x0fffffff		2675043	1					
ANR	2676717	PrimaryExpression	0x0FF00001		2675043	1					
ANR	2676718	CompoundStatement		413:55:11182:11182	2675043	1					
ANR	2676719	ExpressionStatement	"func ( stream , "" ; IMBRange"" )"	5126:9:203528:203556	2675043	0	True				
ANR	2676720	CallExpression	"func ( stream , "" ; IMBRange"" )"		2675043	0					
ANR	2676721	Callee	func		2675043	0					
ANR	2676722	Identifier	func		2675043	0					
ANR	2676723	ArgumentList	stream		2675043	1					
ANR	2676724	Argument	stream		2675043	0					
ANR	2676725	Identifier	stream		2675043	0					
ANR	2676726	Argument	""" ; IMBRange"""		2675043	1					
ANR	2676727	PrimaryExpression	""" ; IMBRange"""		2675043	0					
ANR	2676728	BreakStatement	break ;	5128:8:203576:203581	2675043	24	True				
ANR	2676729	Label	case 'X' :	5129:7:203590:203598	2675043	25	True				
ANR	2676730	ExpressionStatement	"func ( stream , ""%01lx"" , value & 0xf )"	5130:8:203608:203643	2675043	26	True				
ANR	2676731	CallExpression	"func ( stream , ""%01lx"" , value & 0xf )"		2675043	0					
ANR	2676732	Callee	func		2675043	0					
ANR	2676733	Identifier	func		2675043	0					
ANR	2676734	ArgumentList	stream		2675043	1					
ANR	2676735	Argument	stream		2675043	0					
ANR	2676736	Identifier	stream		2675043	0					
ANR	2676737	Argument	"""%01lx"""		2675043	1					
ANR	2676738	PrimaryExpression	"""%01lx"""		2675043	0					
ANR	2676739	Argument	value & 0xf		2675043	2					
ANR	2676740	BitAndExpression	value & 0xf		2675043	0		&			
ANR	2676741	Identifier	value		2675043	0					
ANR	2676742	PrimaryExpression	0xf		2675043	1					
ANR	2676743	ExpressionStatement	value_in_comment = value	5131:8:203653:203677	2675043	27	True				
ANR	2676744	AssignmentExpression	value_in_comment = value		2675043	0		=			
ANR	2676745	Identifier	value_in_comment		2675043	0					
ANR	2676746	Identifier	value		2675043	1					
ANR	2676747	BreakStatement	break ;	5132:8:203687:203692	2675043	28	True				
ANR	2676748	Label	case '`' :	5133:7:203701:203709	2675043	29	True				
ANR	2676749	ExpressionStatement	c ++	5134:8:203719:203722	2675043	30	True				
ANR	2676750	PostIncDecOperationExpression	c ++		2675043	0					
ANR	2676751	Identifier	c		2675043	0					
ANR	2676752	IncDec	++		2675043	1					
ANR	2676753	IfStatement	if ( value == 0 )		2675043	31					
ANR	2676754	Condition	value == 0	5135:12:203736:203745	2675043	0	True				
ANR	2676755	EqualityExpression	value == 0		2675043	0		==			
ANR	2676756	Identifier	value		2675043	0					
ANR	2676757	PrimaryExpression	0		2675043	1					
ANR	2676758	CompoundStatement		423:24:11413:11413	2675043	1					
ANR	2676759	ExpressionStatement	"func ( stream , ""%c"" , * c )"	5136:9:203759:203782	2675043	0	True				
ANR	2676760	CallExpression	"func ( stream , ""%c"" , * c )"		2675043	0					
ANR	2676761	Callee	func		2675043	0					
ANR	2676762	Identifier	func		2675043	0					
ANR	2676763	ArgumentList	stream		2675043	1					
ANR	2676764	Argument	stream		2675043	0					
ANR	2676765	Identifier	stream		2675043	0					
ANR	2676766	Argument	"""%c"""		2675043	1					
ANR	2676767	PrimaryExpression	"""%c"""		2675043	0					
ANR	2676768	Argument	* c		2675043	2					
ANR	2676769	UnaryOperationExpression	* c		2675043	0					
ANR	2676770	UnaryOperator	*		2675043	0					
ANR	2676771	Identifier	c		2675043	1					
ANR	2676772	BreakStatement	break ;	5138:8:203802:203807	2675043	32	True				
ANR	2676773	Label	case '\\'' :	5139:7:203816:203825	2675043	33	True				
ANR	2676774	ExpressionStatement	c ++	5140:8:203835:203838	2675043	34	True				
ANR	2676775	PostIncDecOperationExpression	c ++		2675043	0					
ANR	2676776	Identifier	c		2675043	0					
ANR	2676777	IncDec	++		2675043	1					
ANR	2676778	IfStatement	if ( value == ( ( 1ul << width ) - 1 ) )		2675043	35					
ANR	2676779	Condition	value == ( ( 1ul << width ) - 1 )	5141:12:203852:203880	2675043	0	True				
ANR	2676780	EqualityExpression	value == ( ( 1ul << width ) - 1 )		2675043	0		==			
ANR	2676781	Identifier	value		2675043	0					
ANR	2676782	AdditiveExpression	( 1ul << width ) - 1		2675043	1		-			
ANR	2676783	ShiftExpression	1ul << width		2675043	0		<<			
ANR	2676784	PrimaryExpression	1ul		2675043	0					
ANR	2676785	Identifier	width		2675043	1					
ANR	2676786	PrimaryExpression	1		2675043	1					
ANR	2676787	CompoundStatement		429:43:11548:11548	2675043	1					
ANR	2676788	ExpressionStatement	"func ( stream , ""%c"" , * c )"	5142:9:203894:203917	2675043	0	True				
ANR	2676789	CallExpression	"func ( stream , ""%c"" , * c )"		2675043	0					
ANR	2676790	Callee	func		2675043	0					
ANR	2676791	Identifier	func		2675043	0					
ANR	2676792	ArgumentList	stream		2675043	1					
ANR	2676793	Argument	stream		2675043	0					
ANR	2676794	Identifier	stream		2675043	0					
ANR	2676795	Argument	"""%c"""		2675043	1					
ANR	2676796	PrimaryExpression	"""%c"""		2675043	0					
ANR	2676797	Argument	* c		2675043	2					
ANR	2676798	UnaryOperationExpression	* c		2675043	0					
ANR	2676799	UnaryOperator	*		2675043	0					
ANR	2676800	Identifier	c		2675043	1					
ANR	2676801	BreakStatement	break ;	5144:8:203937:203942	2675043	36	True				
ANR	2676802	Label	case '?' :	5145:7:203951:203959	2675043	37	True				
ANR	2676803	ExpressionStatement	"func ( stream , ""%c"" , c [ ( 1 << width ) - ( int ) value ] )"	5146:8:203969:204018	2675043	38	True				
ANR	2676804	CallExpression	"func ( stream , ""%c"" , c [ ( 1 << width ) - ( int ) value ] )"		2675043	0					
ANR	2676805	Callee	func		2675043	0					
ANR	2676806	Identifier	func		2675043	0					
ANR	2676807	ArgumentList	stream		2675043	1					
ANR	2676808	Argument	stream		2675043	0					
ANR	2676809	Identifier	stream		2675043	0					
ANR	2676810	Argument	"""%c"""		2675043	1					
ANR	2676811	PrimaryExpression	"""%c"""		2675043	0					
ANR	2676812	Argument	c [ ( 1 << width ) - ( int ) value ]		2675043	2					
ANR	2676813	ArrayIndexing	c [ ( 1 << width ) - ( int ) value ]		2675043	0					
ANR	2676814	Identifier	c		2675043	0					
ANR	2676815	AdditiveExpression	( 1 << width ) - ( int ) value		2675043	1		-			
ANR	2676816	ShiftExpression	1 << width		2675043	0		<<			
ANR	2676817	PrimaryExpression	1		2675043	0					
ANR	2676818	Identifier	width		2675043	1					
ANR	2676819	CastExpression	( int ) value		2675043	1					
ANR	2676820	CastTarget	int		2675043	0					
ANR	2676821	Identifier	value		2675043	1					
ANR	2676822	ExpressionStatement	c += 1 << width	5147:8:204028:204043	2675043	39	True				
ANR	2676823	AssignmentExpression	c += 1 << width		2675043	0		+=			
ANR	2676824	Identifier	c		2675043	0					
ANR	2676825	ShiftExpression	1 << width		2675043	1		<<			
ANR	2676826	PrimaryExpression	1		2675043	0					
ANR	2676827	Identifier	width		2675043	1					
ANR	2676828	BreakStatement	break ;	5148:8:204053:204058	2675043	40	True				
ANR	2676829	Label	default :	5149:7:204067:204074	2675043	41	True				
ANR	2676830	Identifier	default		2675043	0					
ANR	2676831	ReturnStatement	return ;	5150:8:204084:204090	2675043	42	True				
ANR	2676832	BreakStatement	break ;	5152:7:204108:204113	2675043	4	True				
ANR	2676833	Label	case 'e' :	5154:6:204122:204130	2675043	5	True				
ANR	2676834	CompoundStatement		443:7:11806:11813	2675043	6					
ANR	2676835	IdentifierDeclStatement	int imm ;	5155:7:204141:204148	2675043	0	True				
ANR	2676836	IdentifierDecl	imm		2675043	0					
ANR	2676837	IdentifierDeclType	int		2675043	0					
ANR	2676838	Identifier	imm		2675043	1					
ANR	2676839	ExpressionStatement	imm = ( given & 0xf ) | ( ( given & 0xfff00 ) >> 4 )	5157:7:204158:204204	2675043	1	True				
ANR	2676840	AssignmentExpression	imm = ( given & 0xf ) | ( ( given & 0xfff00 ) >> 4 )		2675043	0		=			
ANR	2676841	Identifier	imm		2675043	0					
ANR	2676842	InclusiveOrExpression	( given & 0xf ) | ( ( given & 0xfff00 ) >> 4 )		2675043	1		|			
ANR	2676843	BitAndExpression	given & 0xf		2675043	0		&			
ANR	2676844	Identifier	given		2675043	0					
ANR	2676845	PrimaryExpression	0xf		2675043	1					
ANR	2676846	ShiftExpression	( given & 0xfff00 ) >> 4		2675043	1		>>			
ANR	2676847	BitAndExpression	given & 0xfff00		2675043	0		&			
ANR	2676848	Identifier	given		2675043	0					
ANR	2676849	PrimaryExpression	0xfff00		2675043	1					
ANR	2676850	PrimaryExpression	4		2675043	1					
ANR	2676851	ExpressionStatement	"func ( stream , ""%d"" , imm )"	5158:7:204213:204237	2675043	2	True				
ANR	2676852	CallExpression	"func ( stream , ""%d"" , imm )"		2675043	0					
ANR	2676853	Callee	func		2675043	0					
ANR	2676854	Identifier	func		2675043	0					
ANR	2676855	ArgumentList	stream		2675043	1					
ANR	2676856	Argument	stream		2675043	0					
ANR	2676857	Identifier	stream		2675043	0					
ANR	2676858	Argument	"""%d"""		2675043	1					
ANR	2676859	PrimaryExpression	"""%d"""		2675043	0					
ANR	2676860	Argument	imm		2675043	2					
ANR	2676861	Identifier	imm		2675043	0					
ANR	2676862	ExpressionStatement	value_in_comment = imm	5159:7:204246:204268	2675043	3	True				
ANR	2676863	AssignmentExpression	value_in_comment = imm		2675043	0		=			
ANR	2676864	Identifier	value_in_comment		2675043	0					
ANR	2676865	Identifier	imm		2675043	1					
ANR	2676866	BreakStatement	break ;	5160:8:204278:204283	2675043	7	True				
ANR	2676867	Label	case 'E' :	5162:6:204292:204300	2675043	8	True				
ANR	2676868	CompoundStatement		456:8:12189:12211	2675043	9					
ANR	2676869	IdentifierDeclStatement	long msb = ( given & 0x001f0000 ) >> 16 ;	5166:8:204431:204468	2675043	0	True				
ANR	2676870	IdentifierDecl	msb = ( given & 0x001f0000 ) >> 16		2675043	0					
ANR	2676871	IdentifierDeclType	long		2675043	0					
ANR	2676872	Identifier	msb		2675043	1					
ANR	2676873	AssignmentExpression	msb = ( given & 0x001f0000 ) >> 16		2675043	2		=			
ANR	2676874	Identifier	msb		2675043	0					
ANR	2676875	ShiftExpression	( given & 0x001f0000 ) >> 16		2675043	1		>>			
ANR	2676876	BitAndExpression	given & 0x001f0000		2675043	0		&			
ANR	2676877	Identifier	given		2675043	0					
ANR	2676878	PrimaryExpression	0x001f0000		2675043	1					
ANR	2676879	PrimaryExpression	16		2675043	1					
ANR	2676880	IdentifierDeclStatement	long lsb = ( given & 0x00000f80 ) >> 7 ;	5167:8:204478:204514	2675043	1	True				
ANR	2676881	IdentifierDecl	lsb = ( given & 0x00000f80 ) >> 7		2675043	0					
ANR	2676882	IdentifierDeclType	long		2675043	0					
ANR	2676883	Identifier	lsb		2675043	1					
ANR	2676884	AssignmentExpression	lsb = ( given & 0x00000f80 ) >> 7		2675043	2		=			
ANR	2676885	Identifier	lsb		2675043	0					
ANR	2676886	ShiftExpression	( given & 0x00000f80 ) >> 7		2675043	1		>>			
ANR	2676887	BitAndExpression	given & 0x00000f80		2675043	0		&			
ANR	2676888	Identifier	given		2675043	0					
ANR	2676889	PrimaryExpression	0x00000f80		2675043	1					
ANR	2676890	PrimaryExpression	7		2675043	1					
ANR	2676891	IdentifierDeclStatement	long w = msb - lsb + 1 ;	5168:8:204524:204546	2675043	2	True				
ANR	2676892	IdentifierDecl	w = msb - lsb + 1		2675043	0					
ANR	2676893	IdentifierDeclType	long		2675043	0					
ANR	2676894	Identifier	w		2675043	1					
ANR	2676895	AssignmentExpression	w = msb - lsb + 1		2675043	2		=			
ANR	2676896	Identifier	w		2675043	0					
ANR	2676897	AdditiveExpression	msb - lsb + 1		2675043	1		-			
ANR	2676898	Identifier	msb		2675043	0					
ANR	2676899	AdditiveExpression	lsb + 1		2675043	1		+			
ANR	2676900	Identifier	lsb		2675043	0					
ANR	2676901	PrimaryExpression	1		2675043	1					
ANR	2676902	IfStatement	if ( w > 0 )		2675043	3					
ANR	2676903	Condition	w > 0	5170:12:204561:204565	2675043	0	True				
ANR	2676904	RelationalExpression	w > 0		2675043	0		>			
ANR	2676905	Identifier	w		2675043	0					
ANR	2676906	PrimaryExpression	0		2675043	1					
ANR	2676907	CompoundStatement		458:19:12233:12233	2675043	1					
ANR	2676908	ExpressionStatement	"func ( stream , ""%lu, %lu"" , lsb , w )"	5171:9:204579:204612	2675043	0	True				
ANR	2676909	CallExpression	"func ( stream , ""%lu, %lu"" , lsb , w )"		2675043	0					
ANR	2676910	Callee	func		2675043	0					
ANR	2676911	Identifier	func		2675043	0					
ANR	2676912	ArgumentList	stream		2675043	1					
ANR	2676913	Argument	stream		2675043	0					
ANR	2676914	Identifier	stream		2675043	0					
ANR	2676915	Argument	"""%lu, %lu"""		2675043	1					
ANR	2676916	PrimaryExpression	"""%lu, %lu"""		2675043	0					
ANR	2676917	Argument	lsb		2675043	2					
ANR	2676918	Identifier	lsb		2675043	0					
ANR	2676919	Argument	w		2675043	3					
ANR	2676920	Identifier	w		2675043	0					
ANR	2676921	ElseStatement	else		2675043	0					
ANR	2676922	CompoundStatement		460:15:12294:12294	2675043	0					
ANR	2676923	ExpressionStatement	"func ( stream , ""(invalid: %lu:%lu)"" , lsb , msb )"	5173:9:204640:204685	2675043	0	True				
ANR	2676924	CallExpression	"func ( stream , ""(invalid: %lu:%lu)"" , lsb , msb )"		2675043	0					
ANR	2676925	Callee	func		2675043	0					
ANR	2676926	Identifier	func		2675043	0					
ANR	2676927	ArgumentList	stream		2675043	1					
ANR	2676928	Argument	stream		2675043	0					
ANR	2676929	Identifier	stream		2675043	0					
ANR	2676930	Argument	"""(invalid: %lu:%lu)"""		2675043	1					
ANR	2676931	PrimaryExpression	"""(invalid: %lu:%lu)"""		2675043	0					
ANR	2676932	Argument	lsb		2675043	2					
ANR	2676933	Identifier	lsb		2675043	0					
ANR	2676934	Argument	msb		2675043	3					
ANR	2676935	Identifier	msb		2675043	0					
ANR	2676936	BreakStatement	break ;	5176:7:204713:204718	2675043	10	True				
ANR	2676937	Label	case 'R' :	5178:6:204727:204735	2675043	11	True				
ANR	2676938	CompoundStatement		470:8:12493:12535	2675043	12					
ANR	2676939	IdentifierDeclStatement	const char * name ;	5181:8:204802:204818	2675043	0	True				
ANR	2676940	IdentifierDecl	* name		2675043	0					
ANR	2676941	IdentifierDeclType	const char *		2675043	0					
ANR	2676942	Identifier	name		2675043	1					
ANR	2676943	IdentifierDeclStatement	unsigned sysm = ( given & 0x004f0000 ) >> 16 ;	5182:8:204828:204870	2675043	1	True				
ANR	2676944	IdentifierDecl	sysm = ( given & 0x004f0000 ) >> 16		2675043	0					
ANR	2676945	IdentifierDeclType	unsigned		2675043	0					
ANR	2676946	Identifier	sysm		2675043	1					
ANR	2676947	AssignmentExpression	sysm = ( given & 0x004f0000 ) >> 16		2675043	2		=			
ANR	2676948	Identifier	sysm		2675043	0					
ANR	2676949	ShiftExpression	( given & 0x004f0000 ) >> 16		2675043	1		>>			
ANR	2676950	BitAndExpression	given & 0x004f0000		2675043	0		&			
ANR	2676951	Identifier	given		2675043	0					
ANR	2676952	PrimaryExpression	0x004f0000		2675043	1					
ANR	2676953	PrimaryExpression	16		2675043	1					
ANR	2676954	ExpressionStatement	sysm |= ( given & 0x300 ) >> 4	5184:8:204881:204909	2675043	2	True				
ANR	2676955	AssignmentExpression	sysm |= ( given & 0x300 ) >> 4		2675043	0		|=			
ANR	2676956	Identifier	sysm		2675043	0					
ANR	2676957	ShiftExpression	( given & 0x300 ) >> 4		2675043	1		>>			
ANR	2676958	BitAndExpression	given & 0x300		2675043	0		&			
ANR	2676959	Identifier	given		2675043	0					
ANR	2676960	PrimaryExpression	0x300		2675043	1					
ANR	2676961	PrimaryExpression	4		2675043	1					
ANR	2676962	ExpressionStatement	name = banked_regname ( sysm )	5185:8:204919:204947	2675043	3	True				
ANR	2676963	AssignmentExpression	name = banked_regname ( sysm )		2675043	0		=			
ANR	2676964	Identifier	name		2675043	0					
ANR	2676965	CallExpression	banked_regname ( sysm )		2675043	1					
ANR	2676966	Callee	banked_regname		2675043	0					
ANR	2676967	Identifier	banked_regname		2675043	0					
ANR	2676968	ArgumentList	sysm		2675043	1					
ANR	2676969	Argument	sysm		2675043	0					
ANR	2676970	Identifier	sysm		2675043	0					
ANR	2676971	IfStatement	if ( name != NULL )		2675043	4					
ANR	2676972	Condition	name != NULL	5187:12:204962:204973	2675043	0	True				
ANR	2676973	EqualityExpression	name != NULL		2675043	0		!=			
ANR	2676974	Identifier	name		2675043	0					
ANR	2676975	Identifier	NULL		2675043	1					
ANR	2676976	CompoundStatement		475:26:12641:12641	2675043	1					
ANR	2676977	ExpressionStatement	"func ( stream , ""%s"" , name )"	5188:9:204987:205012	2675043	0	True				
ANR	2676978	CallExpression	"func ( stream , ""%s"" , name )"		2675043	0					
ANR	2676979	Callee	func		2675043	0					
ANR	2676980	Identifier	func		2675043	0					
ANR	2676981	ArgumentList	stream		2675043	1					
ANR	2676982	Argument	stream		2675043	0					
ANR	2676983	Identifier	stream		2675043	0					
ANR	2676984	Argument	"""%s"""		2675043	1					
ANR	2676985	PrimaryExpression	"""%s"""		2675043	0					
ANR	2676986	Argument	name		2675043	2					
ANR	2676987	Identifier	name		2675043	0					
ANR	2676988	ElseStatement	else		2675043	0					
ANR	2676989	CompoundStatement		477:15:12694:12694	2675043	0					
ANR	2676990	ExpressionStatement	"func ( stream , ""(UNDEF: %lu)"" , ( unsigned long ) sysm )"	5190:9:205040:205090	2675043	0	True				
ANR	2676991	CallExpression	"func ( stream , ""(UNDEF: %lu)"" , ( unsigned long ) sysm )"		2675043	0					
ANR	2676992	Callee	func		2675043	0					
ANR	2676993	Identifier	func		2675043	0					
ANR	2676994	ArgumentList	stream		2675043	1					
ANR	2676995	Argument	stream		2675043	0					
ANR	2676996	Identifier	stream		2675043	0					
ANR	2676997	Argument	"""(UNDEF: %lu)"""		2675043	1					
ANR	2676998	PrimaryExpression	"""(UNDEF: %lu)"""		2675043	0					
ANR	2676999	Argument	( unsigned long ) sysm		2675043	2					
ANR	2677000	CastExpression	( unsigned long ) sysm		2675043	0					
ANR	2677001	CastTarget	unsigned long		2675043	0					
ANR	2677002	Identifier	sysm		2675043	1					
ANR	2677003	BreakStatement	break ;	5193:7:205118:205123	2675043	13	True				
ANR	2677004	Label	case 'V' :	5195:6:205132:205140	2675043	14	True				
ANR	2677005	CompoundStatement		489:8:13020:13040	2675043	15					
ANR	2677006	IdentifierDeclStatement	long hi = ( given & 0x000f0000 ) >> 4 ;	5199:8:205270:205305	2675043	0	True				
ANR	2677007	IdentifierDecl	hi = ( given & 0x000f0000 ) >> 4		2675043	0					
ANR	2677008	IdentifierDeclType	long		2675043	0					
ANR	2677009	Identifier	hi		2675043	1					
ANR	2677010	AssignmentExpression	hi = ( given & 0x000f0000 ) >> 4		2675043	2		=			
ANR	2677011	Identifier	hi		2675043	0					
ANR	2677012	ShiftExpression	( given & 0x000f0000 ) >> 4		2675043	1		>>			
ANR	2677013	BitAndExpression	given & 0x000f0000		2675043	0		&			
ANR	2677014	Identifier	given		2675043	0					
ANR	2677015	PrimaryExpression	0x000f0000		2675043	1					
ANR	2677016	PrimaryExpression	4		2675043	1					
ANR	2677017	IdentifierDeclStatement	long lo = ( given & 0x00000fff ) ;	5200:8:205315:205345	2675043	1	True				
ANR	2677018	IdentifierDecl	lo = ( given & 0x00000fff )		2675043	0					
ANR	2677019	IdentifierDeclType	long		2675043	0					
ANR	2677020	Identifier	lo		2675043	1					
ANR	2677021	AssignmentExpression	lo = ( given & 0x00000fff )		2675043	2		=			
ANR	2677022	Identifier	lo		2675043	0					
ANR	2677023	BitAndExpression	given & 0x00000fff		2675043	1		&			
ANR	2677024	Identifier	given		2675043	0					
ANR	2677025	PrimaryExpression	0x00000fff		2675043	1					
ANR	2677026	IdentifierDeclStatement	long imm16 = hi | lo ;	5201:8:205355:205375	2675043	2	True				
ANR	2677027	IdentifierDecl	imm16 = hi | lo		2675043	0					
ANR	2677028	IdentifierDeclType	long		2675043	0					
ANR	2677029	Identifier	imm16		2675043	1					
ANR	2677030	AssignmentExpression	imm16 = hi | lo		2675043	2		=			
ANR	2677031	Identifier	imm16		2675043	0					
ANR	2677032	InclusiveOrExpression	hi | lo		2675043	1		|			
ANR	2677033	Identifier	hi		2675043	0					
ANR	2677034	Identifier	lo		2675043	1					
ANR	2677035	ExpressionStatement	"func ( stream , ""%lu"" , imm16 )"	5203:8:205386:205413	2675043	3	True				
ANR	2677036	CallExpression	"func ( stream , ""%lu"" , imm16 )"		2675043	0					
ANR	2677037	Callee	func		2675043	0					
ANR	2677038	Identifier	func		2675043	0					
ANR	2677039	ArgumentList	stream		2675043	1					
ANR	2677040	Argument	stream		2675043	0					
ANR	2677041	Identifier	stream		2675043	0					
ANR	2677042	Argument	"""%lu"""		2675043	1					
ANR	2677043	PrimaryExpression	"""%lu"""		2675043	0					
ANR	2677044	Argument	imm16		2675043	2					
ANR	2677045	Identifier	imm16		2675043	0					
ANR	2677046	ExpressionStatement	value_in_comment = imm16	5204:8:205423:205447	2675043	4	True				
ANR	2677047	AssignmentExpression	value_in_comment = imm16		2675043	0		=			
ANR	2677048	Identifier	value_in_comment		2675043	0					
ANR	2677049	Identifier	imm16		2675043	1					
ANR	2677050	BreakStatement	break ;	5206:7:205465:205470	2675043	16	True				
ANR	2677051	ElseStatement	else		2675043	0					
ANR	2677052	CompoundStatement		497:12:13165:13165	2675043	0					
ANR	2677053	ExpressionStatement	"func ( stream , ""%c"" , * c )"	5210:6:205508:205531	2675043	0	True				
ANR	2677054	CallExpression	"func ( stream , ""%c"" , * c )"		2675043	0					
ANR	2677055	Callee	func		2675043	0					
ANR	2677056	Identifier	func		2675043	0					
ANR	2677057	ArgumentList	stream		2675043	1					
ANR	2677058	Argument	stream		2675043	0					
ANR	2677059	Identifier	stream		2675043	0					
ANR	2677060	Argument	"""%c"""		2675043	1					
ANR	2677061	PrimaryExpression	"""%c"""		2675043	0					
ANR	2677062	Argument	* c		2675043	2					
ANR	2677063	UnaryOperationExpression	* c		2675043	0					
ANR	2677064	UnaryOperator	*		2675043	0					
ANR	2677065	Identifier	c		2675043	1					
ANR	2677066	IfStatement	if ( value_in_comment > 32 || value_in_comment < - 16 )		2675043	6					
ANR	2677067	Condition	value_in_comment > 32 || value_in_comment < - 16	5215:7:205560:205606	2675043	0	True				
ANR	2677068	OrExpression	value_in_comment > 32 || value_in_comment < - 16		2675043	0		||			
ANR	2677069	RelationalExpression	value_in_comment > 32		2675043	0		>			
ANR	2677070	Identifier	value_in_comment		2675043	0					
ANR	2677071	PrimaryExpression	32		2675043	1					
ANR	2677072	RelationalExpression	value_in_comment < - 16		2675043	1		<			
ANR	2677073	Identifier	value_in_comment		2675043	0					
ANR	2677074	UnaryOperationExpression	- 16		2675043	1					
ANR	2677075	UnaryOperator	-		2675043	0					
ANR	2677076	PrimaryExpression	16		2675043	1					
ANR	2677077	ExpressionStatement	"func ( stream , "" ; 0x%lx"" , ( value_in_comment & 0xffffffffUL ) )"	5216:5:205614:205674	2675043	1	True				
ANR	2677078	CallExpression	"func ( stream , "" ; 0x%lx"" , ( value_in_comment & 0xffffffffUL ) )"		2675043	0					
ANR	2677079	Callee	func		2675043	0					
ANR	2677080	Identifier	func		2675043	0					
ANR	2677081	ArgumentList	stream		2675043	1					
ANR	2677082	Argument	stream		2675043	0					
ANR	2677083	Identifier	stream		2675043	0					
ANR	2677084	Argument	""" ; 0x%lx"""		2675043	1					
ANR	2677085	PrimaryExpression	""" ; 0x%lx"""		2675043	0					
ANR	2677086	Argument	value_in_comment & 0xffffffffUL		2675043	2					
ANR	2677087	BitAndExpression	value_in_comment & 0xffffffffUL		2675043	0		&			
ANR	2677088	Identifier	value_in_comment		2675043	0					
ANR	2677089	PrimaryExpression	0xffffffffUL		2675043	1					
ANR	2677090	IfStatement	if ( is_unpredictable )		2675043	7					
ANR	2677091	Condition	is_unpredictable	5219:8:205692:205707	2675043	0	True				
ANR	2677092	Identifier	is_unpredictable		2675043	0					
ANR	2677093	CompoundStatement		507:26:13375:13375	2675043	1					
ANR	2677094	ExpressionStatement	"func ( stream , UNPREDICTABLE_INSTRUCTION )"	5220:5:205717:205757	2675043	0	True				
ANR	2677095	CallExpression	"func ( stream , UNPREDICTABLE_INSTRUCTION )"		2675043	0					
ANR	2677096	Callee	func		2675043	0					
ANR	2677097	Identifier	func		2675043	0					
ANR	2677098	ArgumentList	stream		2675043	1					
ANR	2677099	Argument	stream		2675043	0					
ANR	2677100	Identifier	stream		2675043	0					
ANR	2677101	Argument	UNPREDICTABLE_INSTRUCTION		2675043	1					
ANR	2677102	Identifier	UNPREDICTABLE_INSTRUCTION		2675043	0					
ANR	2677103	ReturnStatement	return ;	5223:4:205770:205776	2675043	8	True				
ANR	2677104	ReturnType	static void		2675043	1					
ANR	2677105	Identifier	print_insn_arm		2675043	2					
ANR	2677106	ParameterList	"bfd_vma pc , struct disassemble_info * info , long given"		2675043	3					
ANR	2677107	Parameter	bfd_vma pc	4712:16:192279:192288	2675043	0	True				
ANR	2677108	ParameterType	bfd_vma		2675043	0					
ANR	2677109	Identifier	pc		2675043	1					
ANR	2677110	Parameter	struct disassemble_info * info	4712:28:192291:192319	2675043	1	True				
ANR	2677111	ParameterType	struct disassemble_info *		2675043	0					
ANR	2677112	Identifier	info		2675043	1					
ANR	2677113	Parameter	long given	4712:59:192322:192331	2675043	2	True				
ANR	2677114	ParameterType	long		2675043	0					
ANR	2677115	Identifier	given		2675043	1					
ANR	2677116	CFGEntryNode	ENTRY		2675043		True				
ANR	2677117	CFGExitNode	EXIT		2675043		True				
ANR	2677118	Symbol	rotate		2675043						
ANR	2677119	Symbol	hi		2675043						
ANR	2677120	Symbol	& value		2675043						
ANR	2677121	Symbol	lo		2675043						
ANR	2677122	Symbol	UNPREDICTABLE_INSTRUCTION		2675043						
ANR	2677123	Symbol	PRE_BIT_SET		2675043						
ANR	2677124	Symbol	info -> fprintf_func		2675043						
ANR	2677125	Symbol	disp		2675043						
ANR	2677126	Symbol	* arm_conditional		2675043						
ANR	2677127	Symbol	reg		2675043						
ANR	2677128	Symbol	info		2675043						
ANR	2677129	Symbol	given		2675043						
ANR	2677130	Symbol	print_insn_coprocessor		2675043						
ANR	2677131	Symbol	NEGATIVE_BIT_SET		2675043						
ANR	2677132	Symbol	arm_decode_bitfield		2675043						
ANR	2677133	Symbol	NULL		2675043						
ANR	2677134	Symbol	offset		2675043						
ANR	2677135	Symbol	insn -> value		2675043						
ANR	2677136	Symbol	allow_unpredictable		2675043						
ANR	2677137	Symbol	TRUE		2675043						
ANR	2677138	Symbol	arm_opcodes		2675043						
ANR	2677139	Symbol	is_unpredictable		2675043						
ANR	2677140	Symbol	data_barrier_option		2675043						
ANR	2677141	Symbol	opt		2675043						
ANR	2677142	Symbol	IMMEDIATE_BIT_SET		2675043						
ANR	2677143	Symbol	ARM_FEATURE_CORE_LOW		2675043						
ANR	2677144	Symbol	name		2675043						
ANR	2677145	Symbol	* given		2675043						
ANR	2677146	Symbol	lsb		2675043						
ANR	2677147	Symbol	arm_conditional		2675043						
ANR	2677148	Symbol	banked_regname		2675043						
ANR	2677149	Symbol	* arm_regnames		2675043						
ANR	2677150	Symbol	private_data		2675043						
ANR	2677151	Symbol	imm		2675043						
ANR	2677152	Symbol	& width		2675043						
ANR	2677153	Symbol	info -> stream		2675043						
ANR	2677154	Symbol	* width		2675043						
ANR	2677155	Symbol	value_in_comment		2675043						
ANR	2677156	Symbol	WRITEBACK_BIT_SET		2675043						
ANR	2677157	Symbol	ARM_CPU_HAS_FEATURE		2675043						
ANR	2677158	Symbol	immed		2675043						
ANR	2677159	Symbol	imm16		2675043						
ANR	2677160	Symbol	stream		2675043						
ANR	2677161	Symbol	u_reg		2675043						
ANR	2677162	Symbol	* ++ c		2675043						
ANR	2677163	Symbol	arm_regnames		2675043						
ANR	2677164	Symbol	value		2675043						
ANR	2677165	Symbol	a		2675043						
ANR	2677166	Symbol	c		2675043						
ANR	2677167	Symbol	address		2675043						
ANR	2677168	Symbol	info -> private_data		2675043						
ANR	2677169	Symbol	insn -> arch		2675043						
ANR	2677170	Symbol	* insn		2675043						
ANR	2677171	Symbol	i		2675043						
ANR	2677172	Symbol	arm_ext_v6		2675043						
ANR	2677173	Symbol	started		2675043						
ANR	2677174	Symbol	* c		2675043						
ANR	2677175	Symbol	P_BIT		2675043						
ANR	2677176	Symbol	U_reg		2675043						
ANR	2677177	Symbol	insn		2675043						
ANR	2677178	Symbol	pc		2675043						
ANR	2677179	Symbol	func		2675043						
ANR	2677180	Symbol	sysm		2675043						
ANR	2677181	Symbol	* value		2675043						
ANR	2677182	Symbol	w		2675043						
ANR	2677183	Symbol	ARM_EXT_V6		2675043						
ANR	2677184	Symbol	width		2675043						
ANR	2677185	Symbol	FALSE		2675043						
ANR	2677186	Symbol	print_insn_neon		2675043						
ANR	2677187	Symbol	* private_data		2675043						
ANR	2677188	Symbol	* info		2675043						
ANR	2677189	Symbol	insn -> mask		2675043						
ANR	2677190	Symbol	print_arm_address		2675043						
ANR	2677191	Symbol	insn -> assembler		2675043						
ANR	2677192	Symbol	msb		2675043						
ANR	2677193	Symbol	private_data -> features		2675043						
ANR	2677194	Symbol	* reg		2675043						
ANR	2677195	Function	print_insn_thumb16	5230:0:205858:211564							
ANR	2677196	FunctionDef	"print_insn_thumb16 (bfd_vma pc , struct disassemble_info * info , long given)"		2677195	0					
ANR	2677197	CompoundStatement		5232:0:205945:211564	2677195	0					
ANR	2677198	IdentifierDeclStatement	const struct opcode16 * insn ;	5233:2:205949:205976	2677195	0	True				
ANR	2677199	IdentifierDecl	* insn		2677195	0					
ANR	2677200	IdentifierDeclType	const struct opcode16 *		2677195	0					
ANR	2677201	Identifier	insn		2677195	1					
ANR	2677202	IdentifierDeclStatement	void * stream = info -> stream ;	5234:2:205980:206007	2677195	1	True				
ANR	2677203	IdentifierDecl	* stream = info -> stream		2677195	0					
ANR	2677204	IdentifierDeclType	void *		2677195	0					
ANR	2677205	Identifier	stream		2677195	1					
ANR	2677206	AssignmentExpression	* stream = info -> stream		2677195	2		=			
ANR	2677207	Identifier	stream		2677195	0					
ANR	2677208	PtrMemberAccess	info -> stream		2677195	1					
ANR	2677209	Identifier	info		2677195	0					
ANR	2677210	Identifier	stream		2677195	1					
ANR	2677211	IdentifierDeclStatement	fprintf_ftype func = info -> fprintf_func ;	5235:2:206011:206050	2677195	2	True				
ANR	2677212	IdentifierDecl	func = info -> fprintf_func		2677195	0					
ANR	2677213	IdentifierDeclType	fprintf_ftype		2677195	0					
ANR	2677214	Identifier	func		2677195	1					
ANR	2677215	AssignmentExpression	func = info -> fprintf_func		2677195	2		=			
ANR	2677216	Identifier	func		2677195	0					
ANR	2677217	PtrMemberAccess	info -> fprintf_func		2677195	1					
ANR	2677218	Identifier	info		2677195	0					
ANR	2677219	Identifier	fprintf_func		2677195	1					
ANR	2677220	ForStatement	for ( insn = thumb_opcodes ; insn -> assembler ; insn ++ )		2677195	3					
ANR	2677221	ForInit	insn = thumb_opcodes ;	5237:7:206060:206080	2677195	0	True				
ANR	2677222	AssignmentExpression	insn = thumb_opcodes		2677195	0		=			
ANR	2677223	Identifier	insn		2677195	0					
ANR	2677224	Identifier	thumb_opcodes		2677195	1					
ANR	2677225	Condition	insn -> assembler	5237:29:206082:206096	2677195	1	True				
ANR	2677226	PtrMemberAccess	insn -> assembler		2677195	0					
ANR	2677227	Identifier	insn		2677195	0					
ANR	2677228	Identifier	assembler		2677195	1					
ANR	2677229	PostIncDecOperationExpression	insn ++	5237:46:206099:206104	2677195	2	True				
ANR	2677230	Identifier	insn		2677195	0					
ANR	2677231	IncDec	++		2677195	1					
ANR	2677232	CompoundStatement		6:54:161:161	2677195	3					
ANR	2677233	IfStatement	if ( ( given & insn -> mask ) == insn -> value )		2677195	0					
ANR	2677234	Condition	( given & insn -> mask ) == insn -> value	5238:7:206116:206150	2677195	0	True				
ANR	2677235	EqualityExpression	( given & insn -> mask ) == insn -> value		2677195	0		==			
ANR	2677236	BitAndExpression	given & insn -> mask		2677195	0		&			
ANR	2677237	Identifier	given		2677195	0					
ANR	2677238	PtrMemberAccess	insn -> mask		2677195	1					
ANR	2677239	Identifier	insn		2677195	0					
ANR	2677240	Identifier	mask		2677195	1					
ANR	2677241	PtrMemberAccess	insn -> value		2677195	1					
ANR	2677242	Identifier	insn		2677195	0					
ANR	2677243	Identifier	value		2677195	1					
ANR	2677244	CompoundStatement		9:4:254:285	2677195	1					
ANR	2677245	IdentifierDeclStatement	const char * c = insn -> assembler ;	5240:4:206200:206231	2677195	0	True				
ANR	2677246	IdentifierDecl	* c = insn -> assembler		2677195	0					
ANR	2677247	IdentifierDeclType	const char *		2677195	0					
ANR	2677248	Identifier	c		2677195	1					
ANR	2677249	AssignmentExpression	* c = insn -> assembler		2677195	2		=			
ANR	2677250	Identifier	c		2677195	0					
ANR	2677251	PtrMemberAccess	insn -> assembler		2677195	1					
ANR	2677252	Identifier	insn		2677195	0					
ANR	2677253	Identifier	assembler		2677195	1					
ANR	2677254	ForStatement	for ( ; * c ; c ++ )		2677195	1					
ANR	2677255	Condition	* c	5242:11:206245:206246	2677195	0	True				
ANR	2677256	UnaryOperationExpression	* c		2677195	0					
ANR	2677257	UnaryOperator	*		2677195	0					
ANR	2677258	Identifier	c		2677195	1					
ANR	2677259	PostIncDecOperationExpression	c ++	5242:15:206249:206251	2677195	1	True				
ANR	2677260	Identifier	c		2677195	0					
ANR	2677261	IncDec	++		2677195	1					
ANR	2677262	CompoundStatement		13:5:338:354	2677195	2					
ANR	2677263	IdentifierDeclStatement	int domaskpc = 0 ;	5243:5:206261:206277	2677195	0	True				
ANR	2677264	IdentifierDecl	domaskpc = 0		2677195	0					
ANR	2677265	IdentifierDeclType	int		2677195	0					
ANR	2677266	Identifier	domaskpc		2677195	1					
ANR	2677267	AssignmentExpression	domaskpc = 0		2677195	2		=			
ANR	2677268	Identifier	domaskpc		2677195	0					
ANR	2677269	PrimaryExpression	0		2677195	1					
ANR	2677270	IdentifierDeclStatement	int domasklr = 0 ;	5244:5:206284:206300	2677195	1	True				
ANR	2677271	IdentifierDecl	domasklr = 0		2677195	0					
ANR	2677272	IdentifierDeclType	int		2677195	0					
ANR	2677273	Identifier	domasklr		2677195	1					
ANR	2677274	AssignmentExpression	domasklr = 0		2677195	2		=			
ANR	2677275	Identifier	domasklr		2677195	0					
ANR	2677276	PrimaryExpression	0		2677195	1					
ANR	2677277	IfStatement	if ( * c != '%' )		2677195	2					
ANR	2677278	Condition	* c != '%'	5246:9:206312:206320	2677195	0	True				
ANR	2677279	EqualityExpression	* c != '%'		2677195	0		!=			
ANR	2677280	UnaryOperationExpression	* c		2677195	0					
ANR	2677281	UnaryOperator	*		2677195	0					
ANR	2677282	Identifier	c		2677195	1					
ANR	2677283	PrimaryExpression	'%'		2677195	1					
ANR	2677284	CompoundStatement		15:20:377:377	2677195	1					
ANR	2677285	ExpressionStatement	"func ( stream , ""%c"" , * c )"	5247:6:206331:206354	2677195	0	True				
ANR	2677286	CallExpression	"func ( stream , ""%c"" , * c )"		2677195	0					
ANR	2677287	Callee	func		2677195	0					
ANR	2677288	Identifier	func		2677195	0					
ANR	2677289	ArgumentList	stream		2677195	1					
ANR	2677290	Argument	stream		2677195	0					
ANR	2677291	Identifier	stream		2677195	0					
ANR	2677292	Argument	"""%c"""		2677195	1					
ANR	2677293	PrimaryExpression	"""%c"""		2677195	0					
ANR	2677294	Argument	* c		2677195	2					
ANR	2677295	UnaryOperationExpression	* c		2677195	0					
ANR	2677296	UnaryOperator	*		2677195	0					
ANR	2677297	Identifier	c		2677195	1					
ANR	2677298	ContinueStatement	continue ;	5248:6:206362:206370	2677195	1	True				
ANR	2677299	SwitchStatement	switch ( * ++ c )		2677195	3					
ANR	2677300	Condition	* ++ c	5251:13:206393:206396	2677195	0	True				
ANR	2677301	UnaryOperationExpression	* ++ c		2677195	0					
ANR	2677302	UnaryOperator	*		2677195	0					
ANR	2677303	UnaryExpression	++ c		2677195	1					
ANR	2677304	IncDec	++		2677195	0					
ANR	2677305	Identifier	c		2677195	1					
ANR	2677306	CompoundStatement		20:19:453:453	2677195	1					
ANR	2677307	Label	case '%' :	5252:5:206406:206414	2677195	0	True				
ANR	2677308	ExpressionStatement	"func ( stream , ""%%"" )"	5253:6:206422:206441	2677195	1	True				
ANR	2677309	CallExpression	"func ( stream , ""%%"" )"		2677195	0					
ANR	2677310	Callee	func		2677195	0					
ANR	2677311	Identifier	func		2677195	0					
ANR	2677312	ArgumentList	stream		2677195	1					
ANR	2677313	Argument	stream		2677195	0					
ANR	2677314	Identifier	stream		2677195	0					
ANR	2677315	Argument	"""%%"""		2677195	1					
ANR	2677316	PrimaryExpression	"""%%"""		2677195	0					
ANR	2677317	BreakStatement	break ;	5254:6:206449:206454	2677195	2	True				
ANR	2677318	Label	case 'c' :	5256:5:206462:206470	2677195	3	True				
ANR	2677319	IfStatement	if ( ifthen_state )		2677195	4					
ANR	2677320	Condition	ifthen_state	5257:10:206482:206493	2677195	0	True				
ANR	2677321	Identifier	ifthen_state		2677195	0					
ANR	2677322	CompoundStatement		26:24:550:550	2677195	1					
ANR	2677323	ExpressionStatement	"func ( stream , ""%s"" , arm_conditional [ IFTHEN_COND ] )"	5258:7:206505:206554	2677195	0	True				
ANR	2677324	CallExpression	"func ( stream , ""%s"" , arm_conditional [ IFTHEN_COND ] )"		2677195	0					
ANR	2677325	Callee	func		2677195	0					
ANR	2677326	Identifier	func		2677195	0					
ANR	2677327	ArgumentList	stream		2677195	1					
ANR	2677328	Argument	stream		2677195	0					
ANR	2677329	Identifier	stream		2677195	0					
ANR	2677330	Argument	"""%s"""		2677195	1					
ANR	2677331	PrimaryExpression	"""%s"""		2677195	0					
ANR	2677332	Argument	arm_conditional [ IFTHEN_COND ]		2677195	2					
ANR	2677333	ArrayIndexing	arm_conditional [ IFTHEN_COND ]		2677195	0					
ANR	2677334	Identifier	arm_conditional		2677195	0					
ANR	2677335	Identifier	IFTHEN_COND		2677195	1					
ANR	2677336	BreakStatement	break ;	5260:6:206570:206575	2677195	5	True				
ANR	2677337	Label	case 'C' :	5262:5:206583:206591	2677195	6	True				
ANR	2677338	IfStatement	if ( ifthen_state )		2677195	7					
ANR	2677339	Condition	ifthen_state	5263:10:206603:206614	2677195	0	True				
ANR	2677340	Identifier	ifthen_state		2677195	0					
ANR	2677341	CompoundStatement		32:24:671:671	2677195	1					
ANR	2677342	ExpressionStatement	"func ( stream , ""%s"" , arm_conditional [ IFTHEN_COND ] )"	5264:7:206626:206675	2677195	0	True				
ANR	2677343	CallExpression	"func ( stream , ""%s"" , arm_conditional [ IFTHEN_COND ] )"		2677195	0					
ANR	2677344	Callee	func		2677195	0					
ANR	2677345	Identifier	func		2677195	0					
ANR	2677346	ArgumentList	stream		2677195	1					
ANR	2677347	Argument	stream		2677195	0					
ANR	2677348	Identifier	stream		2677195	0					
ANR	2677349	Argument	"""%s"""		2677195	1					
ANR	2677350	PrimaryExpression	"""%s"""		2677195	0					
ANR	2677351	Argument	arm_conditional [ IFTHEN_COND ]		2677195	2					
ANR	2677352	ArrayIndexing	arm_conditional [ IFTHEN_COND ]		2677195	0					
ANR	2677353	Identifier	arm_conditional		2677195	0					
ANR	2677354	Identifier	IFTHEN_COND		2677195	1					
ANR	2677355	ElseStatement	else		2677195	0					
ANR	2677356	CompoundStatement		34:13:744:744	2677195	0					
ANR	2677357	ExpressionStatement	"func ( stream , ""s"" )"	5266:7:206699:206717	2677195	0	True				
ANR	2677358	CallExpression	"func ( stream , ""s"" )"		2677195	0					
ANR	2677359	Callee	func		2677195	0					
ANR	2677360	Identifier	func		2677195	0					
ANR	2677361	ArgumentList	stream		2677195	1					
ANR	2677362	Argument	stream		2677195	0					
ANR	2677363	Identifier	stream		2677195	0					
ANR	2677364	Argument	"""s"""		2677195	1					
ANR	2677365	PrimaryExpression	"""s"""		2677195	0					
ANR	2677366	BreakStatement	break ;	5268:6:206733:206738	2677195	8	True				
ANR	2677367	Label	case 'I' :	5270:5:206746:206754	2677195	9	True				
ANR	2677368	CompoundStatement		40:6:818:834	2677195	10					
ANR	2677369	IdentifierDeclStatement	unsigned int tmp ;	5271:6:206764:206780	2677195	0	True				
ANR	2677370	IdentifierDecl	tmp		2677195	0					
ANR	2677371	IdentifierDeclType	unsigned int		2677195	0					
ANR	2677372	Identifier	tmp		2677195	1					
ANR	2677373	ExpressionStatement	ifthen_next_state = given & 0xff	5273:6:206789:206821	2677195	1	True				
ANR	2677374	AssignmentExpression	ifthen_next_state = given & 0xff		2677195	0		=			
ANR	2677375	Identifier	ifthen_next_state		2677195	0					
ANR	2677376	BitAndExpression	given & 0xff		2677195	1		&			
ANR	2677377	Identifier	given		2677195	0					
ANR	2677378	PrimaryExpression	0xff		2677195	1					
ANR	2677379	ForStatement	for ( tmp = given << 1 ; tmp & 0xf ; tmp <<= 1 )		2677195	2					
ANR	2677380	ForInit	tmp = given << 1 ;	5274:11:206834:206850	2677195	0	True				
ANR	2677381	AssignmentExpression	tmp = given << 1		2677195	0		=			
ANR	2677382	Identifier	tmp		2677195	0					
ANR	2677383	ShiftExpression	given << 1		2677195	1		<<			
ANR	2677384	Identifier	given		2677195	0					
ANR	2677385	PrimaryExpression	1		2677195	1					
ANR	2677386	Condition	tmp & 0xf	5274:29:206852:206860	2677195	1	True				
ANR	2677387	BitAndExpression	tmp & 0xf		2677195	0		&			
ANR	2677388	Identifier	tmp		2677195	0					
ANR	2677389	PrimaryExpression	0xf		2677195	1					
ANR	2677390	AssignmentExpression	tmp <<= 1	5274:40:206863:206871	2677195	2	True	<<=			
ANR	2677391	Identifier	tmp		2677195	0					
ANR	2677392	PrimaryExpression	1		2677195	1					
ANR	2677393	CompoundStatement		43:51:928:928	2677195	3					
ANR	2677394	ExpressionStatement	"func ( stream , ( ( given ^ tmp ) & 0x10 ) ? ""e"" : ""t"" )"	5275:7:206883:206932	2677195	0	True				
ANR	2677395	CallExpression	"func ( stream , ( ( given ^ tmp ) & 0x10 ) ? ""e"" : ""t"" )"		2677195	0					
ANR	2677396	Callee	func		2677195	0					
ANR	2677397	Identifier	func		2677195	0					
ANR	2677398	ArgumentList	stream		2677195	1					
ANR	2677399	Argument	stream		2677195	0					
ANR	2677400	Identifier	stream		2677195	0					
ANR	2677401	Argument	"( ( given ^ tmp ) & 0x10 ) ? ""e"" : ""t"""		2677195	1					
ANR	2677402	ConditionalExpression	"( ( given ^ tmp ) & 0x10 ) ? ""e"" : ""t"""		2677195	0					
ANR	2677403	Condition	( given ^ tmp ) & 0x10		2677195	0					
ANR	2677404	BitAndExpression	( given ^ tmp ) & 0x10		2677195	0		&			
ANR	2677405	ExclusiveOrExpression	given ^ tmp		2677195	0		^			
ANR	2677406	Identifier	given		2677195	0					
ANR	2677407	Identifier	tmp		2677195	1					
ANR	2677408	PrimaryExpression	0x10		2677195	1					
ANR	2677409	PrimaryExpression	"""e"""		2677195	1					
ANR	2677410	PrimaryExpression	"""t"""		2677195	2					
ANR	2677411	ExpressionStatement	"func ( stream , "" %s"" , arm_conditional [ ( given >> 4 ) & 0xf ] )"	5277:6:206948:207005	2677195	3	True				
ANR	2677412	CallExpression	"func ( stream , "" %s"" , arm_conditional [ ( given >> 4 ) & 0xf ] )"		2677195	0					
ANR	2677413	Callee	func		2677195	0					
ANR	2677414	Identifier	func		2677195	0					
ANR	2677415	ArgumentList	stream		2677195	1					
ANR	2677416	Argument	stream		2677195	0					
ANR	2677417	Identifier	stream		2677195	0					
ANR	2677418	Argument	""" %s"""		2677195	1					
ANR	2677419	PrimaryExpression	""" %s"""		2677195	0					
ANR	2677420	Argument	arm_conditional [ ( given >> 4 ) & 0xf ]		2677195	2					
ANR	2677421	ArrayIndexing	arm_conditional [ ( given >> 4 ) & 0xf ]		2677195	0					
ANR	2677422	Identifier	arm_conditional		2677195	0					
ANR	2677423	BitAndExpression	( given >> 4 ) & 0xf		2677195	1		&			
ANR	2677424	ShiftExpression	given >> 4		2677195	0		>>			
ANR	2677425	Identifier	given		2677195	0					
ANR	2677426	PrimaryExpression	4		2677195	1					
ANR	2677427	PrimaryExpression	0xf		2677195	1					
ANR	2677428	BreakStatement	break ;	5278:7:207014:207019	2677195	11	True				
ANR	2677429	Label	case 'x' :	5280:5:207027:207035	2677195	12	True				
ANR	2677430	IfStatement	if ( ifthen_next_state )		2677195	13					
ANR	2677431	Condition	ifthen_next_state	5281:10:207047:207063	2677195	0	True				
ANR	2677432	Identifier	ifthen_next_state		2677195	0					
ANR	2677433	CompoundStatement		50:29:1120:1120	2677195	1					
ANR	2677434	ExpressionStatement	"func ( stream , "" ; unpredictable branch in IT block\\n"" )"	5282:7:207075:207129	2677195	0	True				
ANR	2677435	CallExpression	"func ( stream , "" ; unpredictable branch in IT block\\n"" )"		2677195	0					
ANR	2677436	Callee	func		2677195	0					
ANR	2677437	Identifier	func		2677195	0					
ANR	2677438	ArgumentList	stream		2677195	1					
ANR	2677439	Argument	stream		2677195	0					
ANR	2677440	Identifier	stream		2677195	0					
ANR	2677441	Argument	""" ; unpredictable branch in IT block\\n"""		2677195	1					
ANR	2677442	PrimaryExpression	""" ; unpredictable branch in IT block\\n"""		2677195	0					
ANR	2677443	BreakStatement	break ;	5284:6:207145:207150	2677195	14	True				
ANR	2677444	Label	case 'X' :	5286:5:207158:207166	2677195	15	True				
ANR	2677445	IfStatement	if ( ifthen_state )		2677195	16					
ANR	2677446	Condition	ifthen_state	5287:10:207178:207189	2677195	0	True				
ANR	2677447	Identifier	ifthen_state		2677195	0					
ANR	2677448	CompoundStatement		56:24:1246:1246	2677195	1					
ANR	2677449	ExpressionStatement	"func ( stream , "" ; unpredictable <IT:%s>"" , arm_conditional [ IFTHEN_COND ] )"	5288:7:207201:207280	2677195	0	True				
ANR	2677450	CallExpression	"func ( stream , "" ; unpredictable <IT:%s>"" , arm_conditional [ IFTHEN_COND ] )"		2677195	0					
ANR	2677451	Callee	func		2677195	0					
ANR	2677452	Identifier	func		2677195	0					
ANR	2677453	ArgumentList	stream		2677195	1					
ANR	2677454	Argument	stream		2677195	0					
ANR	2677455	Identifier	stream		2677195	0					
ANR	2677456	Argument	""" ; unpredictable <IT:%s>"""		2677195	1					
ANR	2677457	PrimaryExpression	""" ; unpredictable <IT:%s>"""		2677195	0					
ANR	2677458	Argument	arm_conditional [ IFTHEN_COND ]		2677195	2					
ANR	2677459	ArrayIndexing	arm_conditional [ IFTHEN_COND ]		2677195	0					
ANR	2677460	Identifier	arm_conditional		2677195	0					
ANR	2677461	Identifier	IFTHEN_COND		2677195	1					
ANR	2677462	BreakStatement	break ;	5291:6:207296:207301	2677195	17	True				
ANR	2677463	Label	case 'S' :	5293:5:207309:207317	2677195	18	True				
ANR	2677464	CompoundStatement		63:6:1381:1389	2677195	19					
ANR	2677465	IdentifierDeclStatement	long reg ;	5294:6:207327:207335	2677195	0	True				
ANR	2677466	IdentifierDecl	reg		2677195	0					
ANR	2677467	IdentifierDeclType	long		2677195	0					
ANR	2677468	Identifier	reg		2677195	1					
ANR	2677469	ExpressionStatement	reg = ( given >> 3 ) & 0x7	5296:6:207344:207368	2677195	1	True				
ANR	2677470	AssignmentExpression	reg = ( given >> 3 ) & 0x7		2677195	0		=			
ANR	2677471	Identifier	reg		2677195	0					
ANR	2677472	BitAndExpression	( given >> 3 ) & 0x7		2677195	1		&			
ANR	2677473	ShiftExpression	given >> 3		2677195	0		>>			
ANR	2677474	Identifier	given		2677195	0					
ANR	2677475	PrimaryExpression	3		2677195	1					
ANR	2677476	PrimaryExpression	0x7		2677195	1					
ANR	2677477	IfStatement	if ( given & ( 1 << 6 ) )		2677195	2					
ANR	2677478	Condition	given & ( 1 << 6 )	5297:10:207380:207395	2677195	0	True				
ANR	2677479	BitAndExpression	given & ( 1 << 6 )		2677195	0		&			
ANR	2677480	Identifier	given		2677195	0					
ANR	2677481	ShiftExpression	1 << 6		2677195	1		<<			
ANR	2677482	PrimaryExpression	1		2677195	0					
ANR	2677483	PrimaryExpression	6		2677195	1					
ANR	2677484	CompoundStatement		66:28:1452:1452	2677195	1					
ANR	2677485	ExpressionStatement	reg += 8	5298:7:207407:207415	2677195	0	True				
ANR	2677486	AssignmentExpression	reg += 8		2677195	0		+=			
ANR	2677487	Identifier	reg		2677195	0					
ANR	2677488	PrimaryExpression	8		2677195	1					
ANR	2677489	ExpressionStatement	"func ( stream , ""%s"" , arm_regnames [ reg ] )"	5301:6:207432:207470	2677195	3	True				
ANR	2677490	CallExpression	"func ( stream , ""%s"" , arm_regnames [ reg ] )"		2677195	0					
ANR	2677491	Callee	func		2677195	0					
ANR	2677492	Identifier	func		2677195	0					
ANR	2677493	ArgumentList	stream		2677195	1					
ANR	2677494	Argument	stream		2677195	0					
ANR	2677495	Identifier	stream		2677195	0					
ANR	2677496	Argument	"""%s"""		2677195	1					
ANR	2677497	PrimaryExpression	"""%s"""		2677195	0					
ANR	2677498	Argument	arm_regnames [ reg ]		2677195	2					
ANR	2677499	ArrayIndexing	arm_regnames [ reg ]		2677195	0					
ANR	2677500	Identifier	arm_regnames		2677195	0					
ANR	2677501	Identifier	reg		2677195	1					
ANR	2677502	BreakStatement	break ;	5302:7:207479:207484	2677195	20	True				
ANR	2677503	Label	case 'D' :	5304:5:207492:207500	2677195	21	True				
ANR	2677504	CompoundStatement		74:6:1564:1572	2677195	22					
ANR	2677505	IdentifierDeclStatement	long reg ;	5305:6:207510:207518	2677195	0	True				
ANR	2677506	IdentifierDecl	reg		2677195	0					
ANR	2677507	IdentifierDeclType	long		2677195	0					
ANR	2677508	Identifier	reg		2677195	1					
ANR	2677509	ExpressionStatement	reg = given & 0x7	5307:6:207527:207544	2677195	1	True				
ANR	2677510	AssignmentExpression	reg = given & 0x7		2677195	0		=			
ANR	2677511	Identifier	reg		2677195	0					
ANR	2677512	BitAndExpression	given & 0x7		2677195	1		&			
ANR	2677513	Identifier	given		2677195	0					
ANR	2677514	PrimaryExpression	0x7		2677195	1					
ANR	2677515	IfStatement	if ( given & ( 1 << 7 ) )		2677195	2					
ANR	2677516	Condition	given & ( 1 << 7 )	5308:10:207556:207571	2677195	0	True				
ANR	2677517	BitAndExpression	given & ( 1 << 7 )		2677195	0		&			
ANR	2677518	Identifier	given		2677195	0					
ANR	2677519	ShiftExpression	1 << 7		2677195	1		<<			
ANR	2677520	PrimaryExpression	1		2677195	0					
ANR	2677521	PrimaryExpression	7		2677195	1					
ANR	2677522	CompoundStatement		77:28:1628:1628	2677195	1					
ANR	2677523	ExpressionStatement	reg += 8	5309:7:207583:207591	2677195	0	True				
ANR	2677524	AssignmentExpression	reg += 8		2677195	0		+=			
ANR	2677525	Identifier	reg		2677195	0					
ANR	2677526	PrimaryExpression	8		2677195	1					
ANR	2677527	ExpressionStatement	"func ( stream , ""%s"" , arm_regnames [ reg ] )"	5312:6:207608:207646	2677195	3	True				
ANR	2677528	CallExpression	"func ( stream , ""%s"" , arm_regnames [ reg ] )"		2677195	0					
ANR	2677529	Callee	func		2677195	0					
ANR	2677530	Identifier	func		2677195	0					
ANR	2677531	ArgumentList	stream		2677195	1					
ANR	2677532	Argument	stream		2677195	0					
ANR	2677533	Identifier	stream		2677195	0					
ANR	2677534	Argument	"""%s"""		2677195	1					
ANR	2677535	PrimaryExpression	"""%s"""		2677195	0					
ANR	2677536	Argument	arm_regnames [ reg ]		2677195	2					
ANR	2677537	ArrayIndexing	arm_regnames [ reg ]		2677195	0					
ANR	2677538	Identifier	arm_regnames		2677195	0					
ANR	2677539	Identifier	reg		2677195	1					
ANR	2677540	BreakStatement	break ;	5313:7:207655:207660	2677195	23	True				
ANR	2677541	Label	case 'N' :	5315:5:207668:207676	2677195	24	True				
ANR	2677542	IfStatement	if ( given & ( 1 << 8 ) )		2677195	25					
ANR	2677543	Condition	given & ( 1 << 8 )	5316:10:207688:207703	2677195	0	True				
ANR	2677544	BitAndExpression	given & ( 1 << 8 )		2677195	0		&			
ANR	2677545	Identifier	given		2677195	0					
ANR	2677546	ShiftExpression	1 << 8		2677195	1		<<			
ANR	2677547	PrimaryExpression	1		2677195	0					
ANR	2677548	PrimaryExpression	8		2677195	1					
ANR	2677549	CompoundStatement		85:28:1760:1760	2677195	1					
ANR	2677550	ExpressionStatement	domasklr = 1	5317:7:207715:207727	2677195	0	True				
ANR	2677551	AssignmentExpression	domasklr = 1		2677195	0		=			
ANR	2677552	Identifier	domasklr		2677195	0					
ANR	2677553	PrimaryExpression	1		2677195	1					
ANR	2677554	Label	case 'O' :	5320:5:207769:207777	2677195	26	True				
ANR	2677555	IfStatement	if ( * c == 'O' && ( given & ( 1 << 8 ) ) )		2677195	27					
ANR	2677556	Condition	* c == 'O' && ( given & ( 1 << 8 ) )	5321:10:207789:207819	2677195	0	True				
ANR	2677557	AndExpression	* c == 'O' && ( given & ( 1 << 8 ) )		2677195	0		&&			
ANR	2677558	EqualityExpression	* c == 'O'		2677195	0		==			
ANR	2677559	UnaryOperationExpression	* c		2677195	0					
ANR	2677560	UnaryOperator	*		2677195	0					
ANR	2677561	Identifier	c		2677195	1					
ANR	2677562	PrimaryExpression	'O'		2677195	1					
ANR	2677563	BitAndExpression	given & ( 1 << 8 )		2677195	1		&			
ANR	2677564	Identifier	given		2677195	0					
ANR	2677565	ShiftExpression	1 << 8		2677195	1		<<			
ANR	2677566	PrimaryExpression	1		2677195	0					
ANR	2677567	PrimaryExpression	8		2677195	1					
ANR	2677568	CompoundStatement		90:43:1876:1876	2677195	1					
ANR	2677569	ExpressionStatement	domaskpc = 1	5322:7:207831:207843	2677195	0	True				
ANR	2677570	AssignmentExpression	domaskpc = 1		2677195	0		=			
ANR	2677571	Identifier	domaskpc		2677195	0					
ANR	2677572	PrimaryExpression	1		2677195	1					
ANR	2677573	Label	case 'M' :	5325:5:207885:207893	2677195	28	True				
ANR	2677574	CompoundStatement		96:6:1980:1987	2677195	29					
ANR	2677575	IdentifierDeclStatement	int started = 0 ;	5326:6:207903:207918	2677195	0	True				
ANR	2677576	IdentifierDecl	started = 0		2677195	0					
ANR	2677577	IdentifierDeclType	int		2677195	0					
ANR	2677578	Identifier	started		2677195	1					
ANR	2677579	AssignmentExpression	started = 0		2677195	2		=			
ANR	2677580	Identifier	started		2677195	0					
ANR	2677581	PrimaryExpression	0		2677195	1					
ANR	2677582	IdentifierDeclStatement	int reg ;	5327:6:207926:207933	2677195	1	True				
ANR	2677583	IdentifierDecl	reg		2677195	0					
ANR	2677584	IdentifierDeclType	int		2677195	0					
ANR	2677585	Identifier	reg		2677195	1					
ANR	2677586	ExpressionStatement	"func ( stream , ""{"" )"	5329:6:207942:207960	2677195	2	True				
ANR	2677587	CallExpression	"func ( stream , ""{"" )"		2677195	0					
ANR	2677588	Callee	func		2677195	0					
ANR	2677589	Identifier	func		2677195	0					
ANR	2677590	ArgumentList	stream		2677195	1					
ANR	2677591	Argument	stream		2677195	0					
ANR	2677592	Identifier	stream		2677195	0					
ANR	2677593	Argument	"""{"""		2677195	1					
ANR	2677594	PrimaryExpression	"""{"""		2677195	0					
ANR	2677595	ForStatement	for ( reg = 0 ; ( reg < 8 ) ; reg ++ )		2677195	3					
ANR	2677596	ForInit	reg = 0 ;	5333:11:208066:208073	2677195	0	True				
ANR	2677597	AssignmentExpression	reg = 0		2677195	0		=			
ANR	2677598	Identifier	reg		2677195	0					
ANR	2677599	PrimaryExpression	0		2677195	1					
ANR	2677600	Condition	reg < 8	5333:20:208075:208083	2677195	1	True				
ANR	2677601	RelationalExpression	reg < 8		2677195	0		<			
ANR	2677602	Identifier	reg		2677195	0					
ANR	2677603	PrimaryExpression	8		2677195	1					
ANR	2677604	PostIncDecOperationExpression	reg ++	5333:31:208086:208090	2677195	2	True				
ANR	2677605	Identifier	reg		2677195	0					
ANR	2677606	IncDec	++		2677195	1					
ANR	2677607	CompoundStatement		102:38:2147:2147	2677195	3					
ANR	2677608	IfStatement	if ( ( given & ( 1 << reg ) ) != 0 )		2677195	0					
ANR	2677609	Condition	( given & ( 1 << reg ) ) != 0	5334:11:208106:208130	2677195	0	True				
ANR	2677610	EqualityExpression	( given & ( 1 << reg ) ) != 0		2677195	0		!=			
ANR	2677611	BitAndExpression	given & ( 1 << reg )		2677195	0		&			
ANR	2677612	Identifier	given		2677195	0					
ANR	2677613	ShiftExpression	1 << reg		2677195	1		<<			
ANR	2677614	PrimaryExpression	1		2677195	0					
ANR	2677615	Identifier	reg		2677195	1					
ANR	2677616	PrimaryExpression	0		2677195	1					
ANR	2677617	CompoundStatement		103:38:2187:2187	2677195	1					
ANR	2677618	IfStatement	if ( started )		2677195	0					
ANR	2677619	Condition	started	5335:12:208147:208153	2677195	0	True				
ANR	2677620	Identifier	started		2677195	0					
ANR	2677621	CompoundStatement		104:21:2210:2210	2677195	1					
ANR	2677622	ExpressionStatement	"func ( stream , "", "" )"	5336:9:208167:208186	2677195	0	True				
ANR	2677623	CallExpression	"func ( stream , "", "" )"		2677195	0					
ANR	2677624	Callee	func		2677195	0					
ANR	2677625	Identifier	func		2677195	0					
ANR	2677626	ArgumentList	stream		2677195	1					
ANR	2677627	Argument	stream		2677195	0					
ANR	2677628	Identifier	stream		2677195	0					
ANR	2677629	Argument	""", """		2677195	1					
ANR	2677630	PrimaryExpression	""", """		2677195	0					
ANR	2677631	ExpressionStatement	started = 1	5338:8:208206:208217	2677195	1	True				
ANR	2677632	AssignmentExpression	started = 1		2677195	0		=			
ANR	2677633	Identifier	started		2677195	0					
ANR	2677634	PrimaryExpression	1		2677195	1					
ANR	2677635	ExpressionStatement	"func ( stream , ""%s"" , arm_regnames [ reg ] )"	5339:8:208227:208265	2677195	2	True				
ANR	2677636	CallExpression	"func ( stream , ""%s"" , arm_regnames [ reg ] )"		2677195	0					
ANR	2677637	Callee	func		2677195	0					
ANR	2677638	Identifier	func		2677195	0					
ANR	2677639	ArgumentList	stream		2677195	1					
ANR	2677640	Argument	stream		2677195	0					
ANR	2677641	Identifier	stream		2677195	0					
ANR	2677642	Argument	"""%s"""		2677195	1					
ANR	2677643	PrimaryExpression	"""%s"""		2677195	0					
ANR	2677644	Argument	arm_regnames [ reg ]		2677195	2					
ANR	2677645	ArrayIndexing	arm_regnames [ reg ]		2677195	0					
ANR	2677646	Identifier	arm_regnames		2677195	0					
ANR	2677647	Identifier	reg		2677195	1					
ANR	2677648	IfStatement	if ( domasklr )		2677195	4					
ANR	2677649	Condition	domasklr	5343:10:208295:208302	2677195	0	True				
ANR	2677650	Identifier	domasklr		2677195	0					
ANR	2677651	CompoundStatement		112:20:2359:2359	2677195	1					
ANR	2677652	IfStatement	if ( started )		2677195	0					
ANR	2677653	Condition	started	5344:11:208318:208324	2677195	0	True				
ANR	2677654	Identifier	started		2677195	0					
ANR	2677655	CompoundStatement		113:20:2381:2381	2677195	1					
ANR	2677656	ExpressionStatement	"func ( stream , "", "" )"	5345:8:208337:208356	2677195	0	True				
ANR	2677657	CallExpression	"func ( stream , "", "" )"		2677195	0					
ANR	2677658	Callee	func		2677195	0					
ANR	2677659	Identifier	func		2677195	0					
ANR	2677660	ArgumentList	stream		2677195	1					
ANR	2677661	Argument	stream		2677195	0					
ANR	2677662	Identifier	stream		2677195	0					
ANR	2677663	Argument	""", """		2677195	1					
ANR	2677664	PrimaryExpression	""", """		2677195	0					
ANR	2677665	ExpressionStatement	started = 1	5347:7:208374:208385	2677195	1	True				
ANR	2677666	AssignmentExpression	started = 1		2677195	0		=			
ANR	2677667	Identifier	started		2677195	0					
ANR	2677668	PrimaryExpression	1		2677195	1					
ANR	2677669	ExpressionStatement	"func ( stream , ""%s"" , arm_regnames [ 14 ] )"	5348:7:208394:208442	2677195	2	True				
ANR	2677670	CallExpression	"func ( stream , ""%s"" , arm_regnames [ 14 ] )"		2677195	0					
ANR	2677671	Callee	func		2677195	0					
ANR	2677672	Identifier	func		2677195	0					
ANR	2677673	ArgumentList	stream		2677195	1					
ANR	2677674	Argument	stream		2677195	0					
ANR	2677675	Identifier	stream		2677195	0					
ANR	2677676	Argument	"""%s"""		2677195	1					
ANR	2677677	PrimaryExpression	"""%s"""		2677195	0					
ANR	2677678	Argument	arm_regnames [ 14 ]		2677195	2					
ANR	2677679	ArrayIndexing	arm_regnames [ 14 ]		2677195	0					
ANR	2677680	Identifier	arm_regnames		2677195	0					
ANR	2677681	PrimaryExpression	14		2677195	1					
ANR	2677682	IfStatement	if ( domaskpc )		2677195	5					
ANR	2677683	Condition	domaskpc	5351:10:208463:208470	2677195	0	True				
ANR	2677684	Identifier	domaskpc		2677195	0					
ANR	2677685	CompoundStatement		120:20:2527:2527	2677195	1					
ANR	2677686	IfStatement	if ( started )		2677195	0					
ANR	2677687	Condition	started	5352:11:208486:208492	2677195	0	True				
ANR	2677688	Identifier	started		2677195	0					
ANR	2677689	CompoundStatement		121:20:2549:2549	2677195	1					
ANR	2677690	ExpressionStatement	"func ( stream , "", "" )"	5353:8:208505:208524	2677195	0	True				
ANR	2677691	CallExpression	"func ( stream , "", "" )"		2677195	0					
ANR	2677692	Callee	func		2677195	0					
ANR	2677693	Identifier	func		2677195	0					
ANR	2677694	ArgumentList	stream		2677195	1					
ANR	2677695	Argument	stream		2677195	0					
ANR	2677696	Identifier	stream		2677195	0					
ANR	2677697	Argument	""", """		2677195	1					
ANR	2677698	PrimaryExpression	""", """		2677195	0					
ANR	2677699	ExpressionStatement	"func ( stream , ""%s"" , arm_regnames [ 15 ] )"	5355:7:208542:208590	2677195	1	True				
ANR	2677700	CallExpression	"func ( stream , ""%s"" , arm_regnames [ 15 ] )"		2677195	0					
ANR	2677701	Callee	func		2677195	0					
ANR	2677702	Identifier	func		2677195	0					
ANR	2677703	ArgumentList	stream		2677195	1					
ANR	2677704	Argument	stream		2677195	0					
ANR	2677705	Identifier	stream		2677195	0					
ANR	2677706	Argument	"""%s"""		2677195	1					
ANR	2677707	PrimaryExpression	"""%s"""		2677195	0					
ANR	2677708	Argument	arm_regnames [ 15 ]		2677195	2					
ANR	2677709	ArrayIndexing	arm_regnames [ 15 ]		2677195	0					
ANR	2677710	Identifier	arm_regnames		2677195	0					
ANR	2677711	PrimaryExpression	15		2677195	1					
ANR	2677712	ExpressionStatement	"func ( stream , ""}"" )"	5358:6:208607:208625	2677195	6	True				
ANR	2677713	CallExpression	"func ( stream , ""}"" )"		2677195	0					
ANR	2677714	Callee	func		2677195	0					
ANR	2677715	Identifier	func		2677195	0					
ANR	2677716	ArgumentList	stream		2677195	1					
ANR	2677717	Argument	stream		2677195	0					
ANR	2677718	Identifier	stream		2677195	0					
ANR	2677719	Argument	"""}"""		2677195	1					
ANR	2677720	PrimaryExpression	"""}"""		2677195	0					
ANR	2677721	BreakStatement	break ;	5359:7:208634:208639	2677195	30	True				
ANR	2677722	Label	case 'W' :	5361:5:208647:208655	2677195	31	True				
ANR	2677723	IfStatement	if ( ( given & ( 1 << ( ( given & 0x0700 ) >> 8 ) ) ) == 0 )		2677195	32					
ANR	2677724	Condition	( given & ( 1 << ( ( given & 0x0700 ) >> 8 ) ) ) == 0	5365:10:208805:208849	2677195	0	True				
ANR	2677725	EqualityExpression	( given & ( 1 << ( ( given & 0x0700 ) >> 8 ) ) ) == 0		2677195	0		==			
ANR	2677726	BitAndExpression	given & ( 1 << ( ( given & 0x0700 ) >> 8 ) )		2677195	0		&			
ANR	2677727	Identifier	given		2677195	0					
ANR	2677728	ShiftExpression	1 << ( ( given & 0x0700 ) >> 8 )		2677195	1		<<			
ANR	2677729	PrimaryExpression	1		2677195	0					
ANR	2677730	ShiftExpression	( given & 0x0700 ) >> 8		2677195	1		>>			
ANR	2677731	BitAndExpression	given & 0x0700		2677195	0		&			
ANR	2677732	Identifier	given		2677195	0					
ANR	2677733	PrimaryExpression	0x0700		2677195	1					
ANR	2677734	PrimaryExpression	8		2677195	1					
ANR	2677735	PrimaryExpression	0		2677195	1					
ANR	2677736	CompoundStatement		134:57:2906:2906	2677195	1					
ANR	2677737	ExpressionStatement	"func ( stream , ""!"" )"	5366:7:208861:208879	2677195	0	True				
ANR	2677738	CallExpression	"func ( stream , ""!"" )"		2677195	0					
ANR	2677739	Callee	func		2677195	0					
ANR	2677740	Identifier	func		2677195	0					
ANR	2677741	ArgumentList	stream		2677195	1					
ANR	2677742	Argument	stream		2677195	0					
ANR	2677743	Identifier	stream		2677195	0					
ANR	2677744	Argument	"""!"""		2677195	1					
ANR	2677745	PrimaryExpression	"""!"""		2677195	0					
ANR	2677746	BreakStatement	break ;	5368:6:208895:208900	2677195	33	True				
ANR	2677747	Label	case 'b' :	5370:5:208908:208916	2677195	34	True				
ANR	2677748	CompoundStatement		142:7:3041:3119	2677195	35					
ANR	2677749	IdentifierDeclStatement	bfd_vma address = ( pc + 4 + ( ( given & 0x00f8 ) >> 2 ) + ( ( given & 0x0200 ) >> 3 ) ) ;	5373:7:208987:209065	2677195	0	True				
ANR	2677750	IdentifierDecl	address = ( pc + 4 + ( ( given & 0x00f8 ) >> 2 ) + ( ( given & 0x0200 ) >> 3 ) )		2677195	0					
ANR	2677751	IdentifierDeclType	bfd_vma		2677195	0					
ANR	2677752	Identifier	address		2677195	1					
ANR	2677753	AssignmentExpression	address = ( pc + 4 + ( ( given & 0x00f8 ) >> 2 ) + ( ( given & 0x0200 ) >> 3 ) )		2677195	2		=			
ANR	2677754	Identifier	address		2677195	0					
ANR	2677755	AdditiveExpression	pc + 4 + ( ( given & 0x00f8 ) >> 2 ) + ( ( given & 0x0200 ) >> 3 )		2677195	1		+			
ANR	2677756	Identifier	pc		2677195	0					
ANR	2677757	AdditiveExpression	4 + ( ( given & 0x00f8 ) >> 2 ) + ( ( given & 0x0200 ) >> 3 )		2677195	1		+			
ANR	2677758	PrimaryExpression	4		2677195	0					
ANR	2677759	AdditiveExpression	( ( given & 0x00f8 ) >> 2 ) + ( ( given & 0x0200 ) >> 3 )		2677195	1		+			
ANR	2677760	ShiftExpression	( given & 0x00f8 ) >> 2		2677195	0		>>			
ANR	2677761	BitAndExpression	given & 0x00f8		2677195	0		&			
ANR	2677762	Identifier	given		2677195	0					
ANR	2677763	PrimaryExpression	0x00f8		2677195	1					
ANR	2677764	PrimaryExpression	2		2677195	1					
ANR	2677765	ShiftExpression	( given & 0x0200 ) >> 3		2677195	1		>>			
ANR	2677766	BitAndExpression	given & 0x0200		2677195	0		&			
ANR	2677767	Identifier	given		2677195	0					
ANR	2677768	PrimaryExpression	0x0200		2677195	1					
ANR	2677769	PrimaryExpression	3		2677195	1					
ANR	2677770	ExpressionStatement	"info -> print_address_func ( address , info )"	5374:7:209074:209114	2677195	1	True				
ANR	2677771	CallExpression	"info -> print_address_func ( address , info )"		2677195	0					
ANR	2677772	Callee	info -> print_address_func		2677195	0					
ANR	2677773	PtrMemberAccess	info -> print_address_func		2677195	0					
ANR	2677774	Identifier	info		2677195	0					
ANR	2677775	Identifier	print_address_func		2677195	1					
ANR	2677776	ArgumentList	address		2677195	1					
ANR	2677777	Argument	address		2677195	0					
ANR	2677778	Identifier	address		2677195	0					
ANR	2677779	Argument	info		2677195	1					
ANR	2677780	Identifier	info		2677195	0					
ANR	2677781	BreakStatement	break ;	5376:6:209130:209135	2677195	36	True				
ANR	2677782	Label	case 's' :	5378:5:209143:209151	2677195	37	True				
ANR	2677783	CompoundStatement		151:7:3319:3351	2677195	38					
ANR	2677784	IdentifierDeclStatement	long imm = ( given & 0x07c0 ) >> 6 ;	5382:7:209265:209297	2677195	0	True				
ANR	2677785	IdentifierDecl	imm = ( given & 0x07c0 ) >> 6		2677195	0					
ANR	2677786	IdentifierDeclType	long		2677195	0					
ANR	2677787	Identifier	imm		2677195	1					
ANR	2677788	AssignmentExpression	imm = ( given & 0x07c0 ) >> 6		2677195	2		=			
ANR	2677789	Identifier	imm		2677195	0					
ANR	2677790	ShiftExpression	( given & 0x07c0 ) >> 6		2677195	1		>>			
ANR	2677791	BitAndExpression	given & 0x07c0		2677195	0		&			
ANR	2677792	Identifier	given		2677195	0					
ANR	2677793	PrimaryExpression	0x07c0		2677195	1					
ANR	2677794	PrimaryExpression	6		2677195	1					
ANR	2677795	IfStatement	if ( imm == 0 )		2677195	1					
ANR	2677796	Condition	imm == 0	5383:11:209310:209317	2677195	0	True				
ANR	2677797	EqualityExpression	imm == 0		2677195	0		==			
ANR	2677798	Identifier	imm		2677195	0					
ANR	2677799	PrimaryExpression	0		2677195	1					
ANR	2677800	CompoundStatement		152:21:3374:3374	2677195	1					
ANR	2677801	ExpressionStatement	imm = 32	5384:8:209330:209338	2677195	0	True				
ANR	2677802	AssignmentExpression	imm = 32		2677195	0		=			
ANR	2677803	Identifier	imm		2677195	0					
ANR	2677804	PrimaryExpression	32		2677195	1					
ANR	2677805	ExpressionStatement	"func ( stream , ""%ld"" , imm )"	5386:7:209356:209381	2677195	2	True				
ANR	2677806	CallExpression	"func ( stream , ""%ld"" , imm )"		2677195	0					
ANR	2677807	Callee	func		2677195	0					
ANR	2677808	Identifier	func		2677195	0					
ANR	2677809	ArgumentList	stream		2677195	1					
ANR	2677810	Argument	stream		2677195	0					
ANR	2677811	Identifier	stream		2677195	0					
ANR	2677812	Argument	"""%ld"""		2677195	1					
ANR	2677813	PrimaryExpression	"""%ld"""		2677195	0					
ANR	2677814	Argument	imm		2677195	2					
ANR	2677815	Identifier	imm		2677195	0					
ANR	2677816	BreakStatement	break ;	5388:6:209397:209402	2677195	39	True				
ANR	2677817	Label	case '0' :	5390:5:209410:209418	2677195	40	True				
ANR	2677818	Label	case '1' :	5391:5:209425:209433	2677195	41	True				
ANR	2677819	Label	case '2' :	5392:5:209440:209448	2677195	42	True				
ANR	2677820	Label	case '3' :	5393:5:209455:209463	2677195	43	True				
ANR	2677821	Label	case '4' :	5394:5:209470:209478	2677195	44	True				
ANR	2677822	Label	case '5' :	5395:5:209485:209493	2677195	45	True				
ANR	2677823	Label	case '6' :	5396:5:209500:209508	2677195	46	True				
ANR	2677824	Label	case '7' :	5397:5:209515:209523	2677195	47	True				
ANR	2677825	Label	case '8' :	5398:5:209530:209538	2677195	48	True				
ANR	2677826	Label	case '9' :	5399:5:209545:209553	2677195	49	True				
ANR	2677827	CompoundStatement		170:6:3650:3664	2677195	50					
ANR	2677828	IdentifierDeclStatement	int bitstart = * c ++ - '0' ;	5400:6:209563:209588	2677195	0	True				
ANR	2677829	IdentifierDecl	bitstart = * c ++ - '0'		2677195	0					
ANR	2677830	IdentifierDeclType	int		2677195	0					
ANR	2677831	Identifier	bitstart		2677195	1					
ANR	2677832	AssignmentExpression	bitstart = * c ++ - '0'		2677195	2		=			
ANR	2677833	Identifier	bitstart		2677195	0					
ANR	2677834	AdditiveExpression	* c ++ - '0'		2677195	1		-			
ANR	2677835	UnaryOperationExpression	* c ++		2677195	0					
ANR	2677836	UnaryOperator	*		2677195	0					
ANR	2677837	PostIncDecOperationExpression	c ++		2677195	1					
ANR	2677838	Identifier	c		2677195	0					
ANR	2677839	IncDec	++		2677195	1					
ANR	2677840	PrimaryExpression	'0'		2677195	1					
ANR	2677841	IdentifierDeclStatement	int bitend = 0 ;	5401:6:209596:209610	2677195	1	True				
ANR	2677842	IdentifierDecl	bitend = 0		2677195	0					
ANR	2677843	IdentifierDeclType	int		2677195	0					
ANR	2677844	Identifier	bitend		2677195	1					
ANR	2677845	AssignmentExpression	bitend = 0		2677195	2		=			
ANR	2677846	Identifier	bitend		2677195	0					
ANR	2677847	PrimaryExpression	0		2677195	1					
ANR	2677848	WhileStatement	while ( * c >= '0' && * c <= '9' )		2677195	2					
ANR	2677849	Condition	* c >= '0' && * c <= '9'	5403:13:209626:209647	2677195	0	True				
ANR	2677850	AndExpression	* c >= '0' && * c <= '9'		2677195	0		&&			
ANR	2677851	RelationalExpression	* c >= '0'		2677195	0		>=			
ANR	2677852	UnaryOperationExpression	* c		2677195	0					
ANR	2677853	UnaryOperator	*		2677195	0					
ANR	2677854	Identifier	c		2677195	1					
ANR	2677855	PrimaryExpression	'0'		2677195	1					
ANR	2677856	RelationalExpression	* c <= '9'		2677195	1		<=			
ANR	2677857	UnaryOperationExpression	* c		2677195	0					
ANR	2677858	UnaryOperator	*		2677195	0					
ANR	2677859	Identifier	c		2677195	1					
ANR	2677860	PrimaryExpression	'9'		2677195	1					
ANR	2677861	CompoundStatement		172:37:3704:3704	2677195	1					
ANR	2677862	ExpressionStatement	bitstart = ( bitstart * 10 ) + * c ++ - '0'	5404:7:209659:209698	2677195	0	True				
ANR	2677863	AssignmentExpression	bitstart = ( bitstart * 10 ) + * c ++ - '0'		2677195	0		=			
ANR	2677864	Identifier	bitstart		2677195	0					
ANR	2677865	AdditiveExpression	( bitstart * 10 ) + * c ++ - '0'		2677195	1		+			
ANR	2677866	MultiplicativeExpression	bitstart * 10		2677195	0		*			
ANR	2677867	Identifier	bitstart		2677195	0					
ANR	2677868	PrimaryExpression	10		2677195	1					
ANR	2677869	AdditiveExpression	* c ++ - '0'		2677195	1		-			
ANR	2677870	UnaryOperationExpression	* c ++		2677195	0					
ANR	2677871	UnaryOperator	*		2677195	0					
ANR	2677872	PostIncDecOperationExpression	c ++		2677195	1					
ANR	2677873	Identifier	c		2677195	0					
ANR	2677874	IncDec	++		2677195	1					
ANR	2677875	PrimaryExpression	'0'		2677195	1					
ANR	2677876	SwitchStatement	switch ( * c )		2677195	3					
ANR	2677877	Condition	* c	5407:14:209723:209724	2677195	0	True				
ANR	2677878	UnaryOperationExpression	* c		2677195	0					
ANR	2677879	UnaryOperator	*		2677195	0					
ANR	2677880	Identifier	c		2677195	1					
ANR	2677881	CompoundStatement		176:18:3781:3781	2677195	1					
ANR	2677882	Label	case '-' :	5408:6:209735:209743	2677195	0	True				
ANR	2677883	CompoundStatement		178:7:3808:3819	2677195	1					
ANR	2677884	IdentifierDeclStatement	bfd_vma reg ;	5409:7:209754:209765	2677195	0	True				
ANR	2677885	IdentifierDecl	reg		2677195	0					
ANR	2677886	IdentifierDeclType	bfd_vma		2677195	0					
ANR	2677887	Identifier	reg		2677195	1					
ANR	2677888	ExpressionStatement	c ++	5411:7:209775:209778	2677195	1	True				
ANR	2677889	PostIncDecOperationExpression	c ++		2677195	0					
ANR	2677890	Identifier	c		2677195	0					
ANR	2677891	IncDec	++		2677195	1					
ANR	2677892	WhileStatement	while ( * c >= '0' && * c <= '9' )		2677195	2					
ANR	2677893	Condition	* c >= '0' && * c <= '9'	5412:14:209794:209815	2677195	0	True				
ANR	2677894	AndExpression	* c >= '0' && * c <= '9'		2677195	0		&&			
ANR	2677895	RelationalExpression	* c >= '0'		2677195	0		>=			
ANR	2677896	UnaryOperationExpression	* c		2677195	0					
ANR	2677897	UnaryOperator	*		2677195	0					
ANR	2677898	Identifier	c		2677195	1					
ANR	2677899	PrimaryExpression	'0'		2677195	1					
ANR	2677900	RelationalExpression	* c <= '9'		2677195	1		<=			
ANR	2677901	UnaryOperationExpression	* c		2677195	0					
ANR	2677902	UnaryOperator	*		2677195	0					
ANR	2677903	Identifier	c		2677195	1					
ANR	2677904	PrimaryExpression	'9'		2677195	1					
ANR	2677905	CompoundStatement		181:38:3872:3872	2677195	1					
ANR	2677906	ExpressionStatement	bitend = ( bitend * 10 ) + * c ++ - '0'	5413:8:209828:209863	2677195	0	True				
ANR	2677907	AssignmentExpression	bitend = ( bitend * 10 ) + * c ++ - '0'		2677195	0		=			
ANR	2677908	Identifier	bitend		2677195	0					
ANR	2677909	AdditiveExpression	( bitend * 10 ) + * c ++ - '0'		2677195	1		+			
ANR	2677910	MultiplicativeExpression	bitend * 10		2677195	0		*			
ANR	2677911	Identifier	bitend		2677195	0					
ANR	2677912	PrimaryExpression	10		2677195	1					
ANR	2677913	AdditiveExpression	* c ++ - '0'		2677195	1		-			
ANR	2677914	UnaryOperationExpression	* c ++		2677195	0					
ANR	2677915	UnaryOperator	*		2677195	0					
ANR	2677916	PostIncDecOperationExpression	c ++		2677195	1					
ANR	2677917	Identifier	c		2677195	0					
ANR	2677918	IncDec	++		2677195	1					
ANR	2677919	PrimaryExpression	'0'		2677195	1					
ANR	2677920	IfStatement	if ( ! bitend )		2677195	3					
ANR	2677921	Condition	! bitend	5415:11:209885:209891	2677195	0	True				
ANR	2677922	UnaryOperationExpression	! bitend		2677195	0					
ANR	2677923	UnaryOperator	!		2677195	0					
ANR	2677924	Identifier	bitend		2677195	1					
ANR	2677925	CompoundStatement		184:20:3948:3948	2677195	1					
ANR	2677926	ReturnStatement	return ;	5416:8:209904:209910	2677195	0	True				
ANR	2677927	ExpressionStatement	reg = given >> bitstart	5418:7:209928:209951	2677195	4	True				
ANR	2677928	AssignmentExpression	reg = given >> bitstart		2677195	0		=			
ANR	2677929	Identifier	reg		2677195	0					
ANR	2677930	ShiftExpression	given >> bitstart		2677195	1		>>			
ANR	2677931	Identifier	given		2677195	0					
ANR	2677932	Identifier	bitstart		2677195	1					
ANR	2677933	ExpressionStatement	reg &= ( 2 << ( bitend - bitstart ) ) - 1	5419:7:209960:209997	2677195	5	True				
ANR	2677934	AssignmentExpression	reg &= ( 2 << ( bitend - bitstart ) ) - 1		2677195	0		&=			
ANR	2677935	Identifier	reg		2677195	0					
ANR	2677936	AdditiveExpression	( 2 << ( bitend - bitstart ) ) - 1		2677195	1		-			
ANR	2677937	ShiftExpression	2 << ( bitend - bitstart )		2677195	0		<<			
ANR	2677938	PrimaryExpression	2		2677195	0					
ANR	2677939	AdditiveExpression	bitend - bitstart		2677195	1		-			
ANR	2677940	Identifier	bitend		2677195	0					
ANR	2677941	Identifier	bitstart		2677195	1					
ANR	2677942	PrimaryExpression	1		2677195	1					
ANR	2677943	SwitchStatement	switch ( * c )		2677195	6					
ANR	2677944	Condition	* c	5421:15:210015:210016	2677195	0	True				
ANR	2677945	UnaryOperationExpression	* c		2677195	0					
ANR	2677946	UnaryOperator	*		2677195	0					
ANR	2677947	Identifier	c		2677195	1					
ANR	2677948	CompoundStatement		190:19:4073:4073	2677195	1					
ANR	2677949	Label	case 'r' :	5422:7:210028:210036	2677195	0	True				
ANR	2677950	ExpressionStatement	"func ( stream , ""%s"" , arm_regnames [ reg ] )"	5423:8:210046:210084	2677195	1	True				
ANR	2677951	CallExpression	"func ( stream , ""%s"" , arm_regnames [ reg ] )"		2677195	0					
ANR	2677952	Callee	func		2677195	0					
ANR	2677953	Identifier	func		2677195	0					
ANR	2677954	ArgumentList	stream		2677195	1					
ANR	2677955	Argument	stream		2677195	0					
ANR	2677956	Identifier	stream		2677195	0					
ANR	2677957	Argument	"""%s"""		2677195	1					
ANR	2677958	PrimaryExpression	"""%s"""		2677195	0					
ANR	2677959	Argument	arm_regnames [ reg ]		2677195	2					
ANR	2677960	ArrayIndexing	arm_regnames [ reg ]		2677195	0					
ANR	2677961	Identifier	arm_regnames		2677195	0					
ANR	2677962	Identifier	reg		2677195	1					
ANR	2677963	BreakStatement	break ;	5424:8:210094:210099	2677195	2	True				
ANR	2677964	Label	case 'd' :	5426:7:210109:210117	2677195	3	True				
ANR	2677965	ExpressionStatement	"func ( stream , ""%ld"" , ( long ) reg )"	5427:8:210127:210158	2677195	4	True				
ANR	2677966	CallExpression	"func ( stream , ""%ld"" , ( long ) reg )"		2677195	0					
ANR	2677967	Callee	func		2677195	0					
ANR	2677968	Identifier	func		2677195	0					
ANR	2677969	ArgumentList	stream		2677195	1					
ANR	2677970	Argument	stream		2677195	0					
ANR	2677971	Identifier	stream		2677195	0					
ANR	2677972	Argument	"""%ld"""		2677195	1					
ANR	2677973	PrimaryExpression	"""%ld"""		2677195	0					
ANR	2677974	Argument	( long ) reg		2677195	2					
ANR	2677975	CastExpression	( long ) reg		2677195	0					
ANR	2677976	CastTarget	long		2677195	0					
ANR	2677977	Identifier	reg		2677195	1					
ANR	2677978	BreakStatement	break ;	5429:8:210203:210208	2677195	5	True				
ANR	2677979	Label	case 'H' :	5431:7:210218:210226	2677195	6	True				
ANR	2677980	ExpressionStatement	"func ( stream , ""%ld"" , ( long ) ( reg << 1 ) )"	5432:8:210236:210274	2677195	7	True				
ANR	2677981	CallExpression	"func ( stream , ""%ld"" , ( long ) ( reg << 1 ) )"		2677195	0					
ANR	2677982	Callee	func		2677195	0					
ANR	2677983	Identifier	func		2677195	0					
ANR	2677984	ArgumentList	stream		2677195	1					
ANR	2677985	Argument	stream		2677195	0					
ANR	2677986	Identifier	stream		2677195	0					
ANR	2677987	Argument	"""%ld"""		2677195	1					
ANR	2677988	PrimaryExpression	"""%ld"""		2677195	0					
ANR	2677989	Argument	( long ) ( reg << 1 )		2677195	2					
ANR	2677990	CastExpression	( long ) ( reg << 1 )		2677195	0					
ANR	2677991	CastTarget	long		2677195	0					
ANR	2677992	ShiftExpression	reg << 1		2677195	1		<<			
ANR	2677993	Identifier	reg		2677195	0					
ANR	2677994	PrimaryExpression	1		2677195	1					
ANR	2677995	BreakStatement	break ;	5434:8:210324:210329	2677195	8	True				
ANR	2677996	Label	case 'W' :	5436:7:210339:210347	2677195	9	True				
ANR	2677997	ExpressionStatement	"func ( stream , ""%ld"" , ( long ) ( reg << 2 ) )"	5437:8:210357:210395	2677195	10	True				
ANR	2677998	CallExpression	"func ( stream , ""%ld"" , ( long ) ( reg << 2 ) )"		2677195	0					
ANR	2677999	Callee	func		2677195	0					
ANR	2678000	Identifier	func		2677195	0					
ANR	2678001	ArgumentList	stream		2677195	1					
ANR	2678002	Argument	stream		2677195	0					
ANR	2678003	Identifier	stream		2677195	0					
ANR	2678004	Argument	"""%ld"""		2677195	1					
ANR	2678005	PrimaryExpression	"""%ld"""		2677195	0					
ANR	2678006	Argument	( long ) ( reg << 2 )		2677195	2					
ANR	2678007	CastExpression	( long ) ( reg << 2 )		2677195	0					
ANR	2678008	CastTarget	long		2677195	0					
ANR	2678009	ShiftExpression	reg << 2		2677195	1		<<			
ANR	2678010	Identifier	reg		2677195	0					
ANR	2678011	PrimaryExpression	2		2677195	1					
ANR	2678012	BreakStatement	break ;	5439:8:210445:210450	2677195	11	True				
ANR	2678013	Label	case 'a' :	5441:7:210460:210468	2677195	12	True				
ANR	2678014	ExpressionStatement	"info -> print_address_func ( ( ( pc + 4 ) & ~3 ) + ( reg << 2 ) , info )"	5445:8:210607:210668	2677195	13	True				
ANR	2678015	CallExpression	"info -> print_address_func ( ( ( pc + 4 ) & ~3 ) + ( reg << 2 ) , info )"		2677195	0					
ANR	2678016	Callee	info -> print_address_func		2677195	0					
ANR	2678017	PtrMemberAccess	info -> print_address_func		2677195	0					
ANR	2678018	Identifier	info		2677195	0					
ANR	2678019	Identifier	print_address_func		2677195	1					
ANR	2678020	ArgumentList	( ( pc + 4 ) & ~3 ) + ( reg << 2 )		2677195	1					
ANR	2678021	Argument	( ( pc + 4 ) & ~3 ) + ( reg << 2 )		2677195	0					
ANR	2678022	AdditiveExpression	( ( pc + 4 ) & ~3 ) + ( reg << 2 )		2677195	0		+			
ANR	2678023	BitAndExpression	( pc + 4 ) & ~3		2677195	0		&			
ANR	2678024	AdditiveExpression	pc + 4		2677195	0		+			
ANR	2678025	Identifier	pc		2677195	0					
ANR	2678026	PrimaryExpression	4		2677195	1					
ANR	2678027	Identifier	~3		2677195	1					
ANR	2678028	ShiftExpression	reg << 2		2677195	1		<<			
ANR	2678029	Identifier	reg		2677195	0					
ANR	2678030	PrimaryExpression	2		2677195	1					
ANR	2678031	Argument	info		2677195	1					
ANR	2678032	Identifier	info		2677195	0					
ANR	2678033	BreakStatement	break ;	5447:8:210710:210715	2677195	14	True				
ANR	2678034	Label	case 'x' :	5449:7:210725:210733	2677195	15	True				
ANR	2678035	ExpressionStatement	"func ( stream , ""0x%04lx"" , ( long ) reg )"	5450:8:210743:210778	2677195	16	True				
ANR	2678036	CallExpression	"func ( stream , ""0x%04lx"" , ( long ) reg )"		2677195	0					
ANR	2678037	Callee	func		2677195	0					
ANR	2678038	Identifier	func		2677195	0					
ANR	2678039	ArgumentList	stream		2677195	1					
ANR	2678040	Argument	stream		2677195	0					
ANR	2678041	Identifier	stream		2677195	0					
ANR	2678042	Argument	"""0x%04lx"""		2677195	1					
ANR	2678043	PrimaryExpression	"""0x%04lx"""		2677195	0					
ANR	2678044	Argument	( long ) reg		2677195	2					
ANR	2678045	CastExpression	( long ) reg		2677195	0					
ANR	2678046	CastTarget	long		2677195	0					
ANR	2678047	Identifier	reg		2677195	1					
ANR	2678048	BreakStatement	break ;	5451:8:210788:210793	2677195	17	True				
ANR	2678049	Label	case 'B' :	5453:7:210803:210811	2677195	18	True				
ANR	2678050	ExpressionStatement	reg = ( ( reg ^ ( 1 << bitend ) ) - ( 1 << bitend ) )	5454:8:210821:210866	2677195	19	True				
ANR	2678051	AssignmentExpression	reg = ( ( reg ^ ( 1 << bitend ) ) - ( 1 << bitend ) )		2677195	0		=			
ANR	2678052	Identifier	reg		2677195	0					
ANR	2678053	AdditiveExpression	( reg ^ ( 1 << bitend ) ) - ( 1 << bitend )		2677195	1		-			
ANR	2678054	ExclusiveOrExpression	reg ^ ( 1 << bitend )		2677195	0		^			
ANR	2678055	Identifier	reg		2677195	0					
ANR	2678056	ShiftExpression	1 << bitend		2677195	1		<<			
ANR	2678057	PrimaryExpression	1		2677195	0					
ANR	2678058	Identifier	bitend		2677195	1					
ANR	2678059	ShiftExpression	1 << bitend		2677195	1		<<			
ANR	2678060	PrimaryExpression	1		2677195	0					
ANR	2678061	Identifier	bitend		2677195	1					
ANR	2678062	ExpressionStatement	"info -> print_address_func ( reg * 2 + pc + 4 , info )"	5455:8:210876:210925	2677195	20	True				
ANR	2678063	CallExpression	"info -> print_address_func ( reg * 2 + pc + 4 , info )"		2677195	0					
ANR	2678064	Callee	info -> print_address_func		2677195	0					
ANR	2678065	PtrMemberAccess	info -> print_address_func		2677195	0					
ANR	2678066	Identifier	info		2677195	0					
ANR	2678067	Identifier	print_address_func		2677195	1					
ANR	2678068	ArgumentList	reg * 2 + pc + 4		2677195	1					
ANR	2678069	Argument	reg * 2 + pc + 4		2677195	0					
ANR	2678070	AdditiveExpression	reg * 2 + pc + 4		2677195	0		+			
ANR	2678071	MultiplicativeExpression	reg * 2		2677195	0		*			
ANR	2678072	Identifier	reg		2677195	0					
ANR	2678073	PrimaryExpression	2		2677195	1					
ANR	2678074	AdditiveExpression	pc + 4		2677195	1		+			
ANR	2678075	Identifier	pc		2677195	0					
ANR	2678076	PrimaryExpression	4		2677195	1					
ANR	2678077	Argument	info		2677195	1					
ANR	2678078	Identifier	info		2677195	0					
ANR	2678079	BreakStatement	break ;	5457:8:210967:210972	2677195	21	True				
ANR	2678080	Label	case 'c' :	5459:7:210982:210990	2677195	22	True				
ANR	2678081	ExpressionStatement	"func ( stream , ""%s"" , arm_conditional [ reg ] )"	5460:8:211000:211041	2677195	23	True				
ANR	2678082	CallExpression	"func ( stream , ""%s"" , arm_conditional [ reg ] )"		2677195	0					
ANR	2678083	Callee	func		2677195	0					
ANR	2678084	Identifier	func		2677195	0					
ANR	2678085	ArgumentList	stream		2677195	1					
ANR	2678086	Argument	stream		2677195	0					
ANR	2678087	Identifier	stream		2677195	0					
ANR	2678088	Argument	"""%s"""		2677195	1					
ANR	2678089	PrimaryExpression	"""%s"""		2677195	0					
ANR	2678090	Argument	arm_conditional [ reg ]		2677195	2					
ANR	2678091	ArrayIndexing	arm_conditional [ reg ]		2677195	0					
ANR	2678092	Identifier	arm_conditional		2677195	0					
ANR	2678093	Identifier	reg		2677195	1					
ANR	2678094	BreakStatement	break ;	5461:8:211051:211056	2677195	24	True				
ANR	2678095	BreakStatement	break ;	5463:8:211075:211080	2677195	2	True				
ANR	2678096	Label	case '\\'' :	5465:6:211089:211098	2677195	3	True				
ANR	2678097	ExpressionStatement	c ++	5466:7:211107:211110	2677195	4	True				
ANR	2678098	PostIncDecOperationExpression	c ++		2677195	0					
ANR	2678099	Identifier	c		2677195	0					
ANR	2678100	IncDec	++		2677195	1					
ANR	2678101	IfStatement	if ( ( given & ( 1 << bitstart ) ) != 0 )		2677195	5					
ANR	2678102	Condition	( given & ( 1 << bitstart ) ) != 0	5467:11:211123:211152	2677195	0	True				
ANR	2678103	EqualityExpression	( given & ( 1 << bitstart ) ) != 0		2677195	0		!=			
ANR	2678104	BitAndExpression	given & ( 1 << bitstart )		2677195	0		&			
ANR	2678105	Identifier	given		2677195	0					
ANR	2678106	ShiftExpression	1 << bitstart		2677195	1		<<			
ANR	2678107	PrimaryExpression	1		2677195	0					
ANR	2678108	Identifier	bitstart		2677195	1					
ANR	2678109	PrimaryExpression	0		2677195	1					
ANR	2678110	CompoundStatement		236:43:5209:5209	2677195	1					
ANR	2678111	ExpressionStatement	"func ( stream , ""%c"" , * c )"	5468:8:211165:211188	2677195	0	True				
ANR	2678112	CallExpression	"func ( stream , ""%c"" , * c )"		2677195	0					
ANR	2678113	Callee	func		2677195	0					
ANR	2678114	Identifier	func		2677195	0					
ANR	2678115	ArgumentList	stream		2677195	1					
ANR	2678116	Argument	stream		2677195	0					
ANR	2678117	Identifier	stream		2677195	0					
ANR	2678118	Argument	"""%c"""		2677195	1					
ANR	2678119	PrimaryExpression	"""%c"""		2677195	0					
ANR	2678120	Argument	* c		2677195	2					
ANR	2678121	UnaryOperationExpression	* c		2677195	0					
ANR	2678122	UnaryOperator	*		2677195	0					
ANR	2678123	Identifier	c		2677195	1					
ANR	2678124	BreakStatement	break ;	5470:7:211206:211211	2677195	6	True				
ANR	2678125	Label	case '?' :	5472:6:211220:211228	2677195	7	True				
ANR	2678126	ExpressionStatement	++ c	5473:7:211237:211240	2677195	8	True				
ANR	2678127	UnaryExpression	++ c		2677195	0					
ANR	2678128	IncDec	++		2677195	0					
ANR	2678129	Identifier	c		2677195	1					
ANR	2678130	IfStatement	if ( ( given & ( 1 << bitstart ) ) != 0 )		2677195	9					
ANR	2678131	Condition	( given & ( 1 << bitstart ) ) != 0	5474:11:211253:211282	2677195	0	True				
ANR	2678132	EqualityExpression	( given & ( 1 << bitstart ) ) != 0		2677195	0		!=			
ANR	2678133	BitAndExpression	given & ( 1 << bitstart )		2677195	0		&			
ANR	2678134	Identifier	given		2677195	0					
ANR	2678135	ShiftExpression	1 << bitstart		2677195	1		<<			
ANR	2678136	PrimaryExpression	1		2677195	0					
ANR	2678137	Identifier	bitstart		2677195	1					
ANR	2678138	PrimaryExpression	0		2677195	1					
ANR	2678139	CompoundStatement		243:43:5339:5339	2677195	1					
ANR	2678140	ExpressionStatement	"func ( stream , ""%c"" , * c ++ )"	5475:8:211295:211320	2677195	0	True				
ANR	2678141	CallExpression	"func ( stream , ""%c"" , * c ++ )"		2677195	0					
ANR	2678142	Callee	func		2677195	0					
ANR	2678143	Identifier	func		2677195	0					
ANR	2678144	ArgumentList	stream		2677195	1					
ANR	2678145	Argument	stream		2677195	0					
ANR	2678146	Identifier	stream		2677195	0					
ANR	2678147	Argument	"""%c"""		2677195	1					
ANR	2678148	PrimaryExpression	"""%c"""		2677195	0					
ANR	2678149	Argument	* c ++		2677195	2					
ANR	2678150	UnaryOperationExpression	* c ++		2677195	0					
ANR	2678151	UnaryOperator	*		2677195	0					
ANR	2678152	PostIncDecOperationExpression	c ++		2677195	1					
ANR	2678153	Identifier	c		2677195	0					
ANR	2678154	IncDec	++		2677195	1					
ANR	2678155	ElseStatement	else		2677195	0					
ANR	2678156	CompoundStatement		245:14:5390:5390	2677195	0					
ANR	2678157	ExpressionStatement	"func ( stream , ""%c"" , * ++ c )"	5477:8:211346:211371	2677195	0	True				
ANR	2678158	CallExpression	"func ( stream , ""%c"" , * ++ c )"		2677195	0					
ANR	2678159	Callee	func		2677195	0					
ANR	2678160	Identifier	func		2677195	0					
ANR	2678161	ArgumentList	stream		2677195	1					
ANR	2678162	Argument	stream		2677195	0					
ANR	2678163	Identifier	stream		2677195	0					
ANR	2678164	Argument	"""%c"""		2677195	1					
ANR	2678165	PrimaryExpression	"""%c"""		2677195	0					
ANR	2678166	Argument	* ++ c		2677195	2					
ANR	2678167	UnaryOperationExpression	* ++ c		2677195	0					
ANR	2678168	UnaryOperator	*		2677195	0					
ANR	2678169	UnaryExpression	++ c		2677195	1					
ANR	2678170	IncDec	++		2677195	0					
ANR	2678171	Identifier	c		2677195	1					
ANR	2678172	BreakStatement	break ;	5479:7:211389:211394	2677195	10	True				
ANR	2678173	BreakStatement	break ;	5481:7:211411:211416	2677195	51	True				
ANR	2678174	IfStatement	if ( value_in_comment > 32 || value_in_comment < - 16 )		2677195	2					
ANR	2678175	Condition	value_in_comment > 32 || value_in_comment < - 16	5485:5:211442:211488	2677195	0	True				
ANR	2678176	OrExpression	value_in_comment > 32 || value_in_comment < - 16		2677195	0		||			
ANR	2678177	RelationalExpression	value_in_comment > 32		2677195	0		>			
ANR	2678178	Identifier	value_in_comment		2677195	0					
ANR	2678179	PrimaryExpression	32		2677195	1					
ANR	2678180	RelationalExpression	value_in_comment < - 16		2677195	1		<			
ANR	2678181	Identifier	value_in_comment		2677195	0					
ANR	2678182	UnaryOperationExpression	- 16		2677195	1					
ANR	2678183	UnaryOperator	-		2677195	0					
ANR	2678184	PrimaryExpression	16		2677195	1					
ANR	2678185	ExpressionStatement	"func ( stream , "" ; 0x%lx"" , value_in_comment )"	5486:3:211494:211537	2677195	1	True				
ANR	2678186	CallExpression	"func ( stream , "" ; 0x%lx"" , value_in_comment )"		2677195	0					
ANR	2678187	Callee	func		2677195	0					
ANR	2678188	Identifier	func		2677195	0					
ANR	2678189	ArgumentList	stream		2677195	1					
ANR	2678190	Argument	stream		2677195	0					
ANR	2678191	Identifier	stream		2677195	0					
ANR	2678192	Argument	""" ; 0x%lx"""		2677195	1					
ANR	2678193	PrimaryExpression	""" ; 0x%lx"""		2677195	0					
ANR	2678194	Argument	value_in_comment		2677195	2					
ANR	2678195	Identifier	value_in_comment		2677195	0					
ANR	2678196	ReturnStatement	return ;	5488:1:211547:211553	2677195	3	True				
ANR	2678197	ReturnType	static void		2677195	1					
ANR	2678198	Identifier	print_insn_thumb16		2677195	2					
ANR	2678199	ParameterList	"bfd_vma pc , struct disassemble_info * info , long given"		2677195	3					
ANR	2678200	Parameter	bfd_vma pc	5231:20:205890:205899	2677195	0	True				
ANR	2678201	ParameterType	bfd_vma		2677195	0					
ANR	2678202	Identifier	pc		2677195	1					
ANR	2678203	Parameter	struct disassemble_info * info	5231:32:205902:205930	2677195	1	True				
ANR	2678204	ParameterType	struct disassemble_info *		2677195	0					
ANR	2678205	Identifier	info		2677195	1					
ANR	2678206	Parameter	long given	5231:63:205933:205942	2677195	2	True				
ANR	2678207	ParameterType	long		2677195	0					
ANR	2678208	Identifier	given		2677195	1					
ANR	2678209	CFGEntryNode	ENTRY		2677195		True				
ANR	2678210	CFGExitNode	EXIT		2677195		True				
ANR	2678211	Symbol	* arm_regnames		2677195						
ANR	2678212	Symbol	imm		2677195						
ANR	2678213	Symbol	info -> stream		2677195						
ANR	2678214	Symbol	thumb_opcodes		2677195						
ANR	2678215	Symbol	info -> fprintf_func		2677195						
ANR	2678216	Symbol	IFTHEN_COND		2677195						
ANR	2678217	Symbol	value_in_comment		2677195						
ANR	2678218	Symbol	* arm_conditional		2677195						
ANR	2678219	Symbol	stream		2677195						
ANR	2678220	Symbol	reg		2677195						
ANR	2678221	Symbol	tmp		2677195						
ANR	2678222	Symbol	bitend		2677195						
ANR	2678223	Symbol	* IFTHEN_COND		2677195						
ANR	2678224	Symbol	* ++ c		2677195						
ANR	2678225	Symbol	arm_regnames		2677195						
ANR	2678226	Symbol	info		2677195						
ANR	2678227	Symbol	ifthen_next_state		2677195						
ANR	2678228	Symbol	given		2677195						
ANR	2678229	Symbol	c		2677195						
ANR	2678230	Symbol	address		2677195						
ANR	2678231	Symbol	insn -> value		2677195						
ANR	2678232	Symbol	* c ++		2677195						
ANR	2678233	Symbol	* insn		2677195						
ANR	2678234	Symbol	started		2677195						
ANR	2678235	Symbol	domasklr		2677195						
ANR	2678236	Symbol	bitstart		2677195						
ANR	2678237	Symbol	* c		2677195						
ANR	2678238	Symbol	insn		2677195						
ANR	2678239	Symbol	pc		2677195						
ANR	2678240	Symbol	func		2677195						
ANR	2678241	Symbol	~3		2677195						
ANR	2678242	Symbol	ifthen_state		2677195						
ANR	2678243	Symbol	* given		2677195						
ANR	2678244	Symbol	* info		2677195						
ANR	2678245	Symbol	insn -> mask		2677195						
ANR	2678246	Symbol	domaskpc		2677195						
ANR	2678247	Symbol	arm_conditional		2677195						
ANR	2678248	Symbol	insn -> assembler		2677195						
ANR	2678249	Symbol	* reg		2677195						
ANR	2678250	Function	psr_name	5495:0:211619:212529							
ANR	2678251	FunctionDef	psr_name (int regno)		2678250	0					
ANR	2678252	CompoundStatement		5497:0:211660:212529	2678250	0					
ANR	2678253	SwitchStatement	switch ( regno )		2678250	0					
ANR	2678254	Condition	regno	5498:10:211672:211676	2678250	0	True				
ANR	2678255	Identifier	regno		2678250	0					
ANR	2678256	CompoundStatement		3:4:22:22	2678250	1					
ANR	2678257	Label	case 0x0 :	5500:4:211689:211697	2678250	0	True				
ANR	2678258	ReturnStatement	"return ""APSR"" ;"	5500:14:211699:211712	2678250	1	True				
ANR	2678259	PrimaryExpression	"""APSR"""		2678250	0					
ANR	2678260	Label	case 0x1 :	5501:4:211718:211726	2678250	2	True				
ANR	2678261	ReturnStatement	"return ""IAPSR"" ;"	5501:14:211728:211742	2678250	3	True				
ANR	2678262	PrimaryExpression	"""IAPSR"""		2678250	0					
ANR	2678263	Label	case 0x2 :	5502:4:211748:211756	2678250	4	True				
ANR	2678264	ReturnStatement	"return ""EAPSR"" ;"	5502:14:211758:211772	2678250	5	True				
ANR	2678265	PrimaryExpression	"""EAPSR"""		2678250	0					
ANR	2678266	Label	case 0x3 :	5503:4:211778:211786	2678250	6	True				
ANR	2678267	ReturnStatement	"return ""PSR"" ;"	5503:14:211788:211800	2678250	7	True				
ANR	2678268	PrimaryExpression	"""PSR"""		2678250	0					
ANR	2678269	Label	case 0x5 :	5504:4:211806:211814	2678250	8	True				
ANR	2678270	ReturnStatement	"return ""IPSR"" ;"	5504:14:211816:211829	2678250	9	True				
ANR	2678271	PrimaryExpression	"""IPSR"""		2678250	0					
ANR	2678272	Label	case 0x6 :	5505:4:211835:211843	2678250	10	True				
ANR	2678273	ReturnStatement	"return ""EPSR"" ;"	5505:14:211845:211858	2678250	11	True				
ANR	2678274	PrimaryExpression	"""EPSR"""		2678250	0					
ANR	2678275	Label	case 0x7 :	5506:4:211864:211872	2678250	12	True				
ANR	2678276	ReturnStatement	"return ""IEPSR"" ;"	5506:14:211874:211888	2678250	13	True				
ANR	2678277	PrimaryExpression	"""IEPSR"""		2678250	0					
ANR	2678278	Label	case 0x8 :	5507:4:211894:211902	2678250	14	True				
ANR	2678279	ReturnStatement	"return ""MSP"" ;"	5507:14:211904:211916	2678250	15	True				
ANR	2678280	PrimaryExpression	"""MSP"""		2678250	0					
ANR	2678281	Label	case 0x9 :	5508:4:211922:211930	2678250	16	True				
ANR	2678282	ReturnStatement	"return ""PSP"" ;"	5508:14:211932:211944	2678250	17	True				
ANR	2678283	PrimaryExpression	"""PSP"""		2678250	0					
ANR	2678284	Label	case 0xa :	5509:4:211950:211958	2678250	18	True				
ANR	2678285	ReturnStatement	"return ""MSPLIM"" ;"	5509:14:211960:211975	2678250	19	True				
ANR	2678286	PrimaryExpression	"""MSPLIM"""		2678250	0					
ANR	2678287	Label	case 0xb :	5510:4:211981:211989	2678250	20	True				
ANR	2678288	ReturnStatement	"return ""PSPLIM"" ;"	5510:14:211991:212006	2678250	21	True				
ANR	2678289	PrimaryExpression	"""PSPLIM"""		2678250	0					
ANR	2678290	Label	case 0x10 :	5511:4:212012:212021	2678250	22	True				
ANR	2678291	ReturnStatement	"return ""PRIMASK"" ;"	5511:15:212023:212039	2678250	23	True				
ANR	2678292	PrimaryExpression	"""PRIMASK"""		2678250	0					
ANR	2678293	Label	case 0x11 :	5512:4:212045:212054	2678250	24	True				
ANR	2678294	ReturnStatement	"return ""BASEPRI"" ;"	5512:15:212056:212072	2678250	25	True				
ANR	2678295	PrimaryExpression	"""BASEPRI"""		2678250	0					
ANR	2678296	Label	case 0x12 :	5513:4:212078:212087	2678250	26	True				
ANR	2678297	ReturnStatement	"return ""BASEPRI_MAX"" ;"	5513:15:212089:212109	2678250	27	True				
ANR	2678298	PrimaryExpression	"""BASEPRI_MAX"""		2678250	0					
ANR	2678299	Label	case 0x13 :	5514:4:212115:212124	2678250	28	True				
ANR	2678300	ReturnStatement	"return ""FAULTMASK"" ;"	5514:15:212126:212144	2678250	29	True				
ANR	2678301	PrimaryExpression	"""FAULTMASK"""		2678250	0					
ANR	2678302	Label	case 0x14 :	5515:4:212150:212159	2678250	30	True				
ANR	2678303	ReturnStatement	"return ""CONTROL"" ;"	5515:15:212161:212177	2678250	31	True				
ANR	2678304	PrimaryExpression	"""CONTROL"""		2678250	0					
ANR	2678305	Label	case 0x88 :	5516:4:212183:212192	2678250	32	True				
ANR	2678306	ReturnStatement	"return ""MSP_NS"" ;"	5516:15:212194:212209	2678250	33	True				
ANR	2678307	PrimaryExpression	"""MSP_NS"""		2678250	0					
ANR	2678308	Label	case 0x89 :	5517:4:212215:212224	2678250	34	True				
ANR	2678309	ReturnStatement	"return ""PSP_NS"" ;"	5517:15:212226:212241	2678250	35	True				
ANR	2678310	PrimaryExpression	"""PSP_NS"""		2678250	0					
ANR	2678311	Label	case 0x8a :	5518:4:212247:212256	2678250	36	True				
ANR	2678312	ReturnStatement	"return ""MSPLIM_NS"" ;"	5518:15:212258:212276	2678250	37	True				
ANR	2678313	PrimaryExpression	"""MSPLIM_NS"""		2678250	0					
ANR	2678314	Label	case 0x8b :	5519:4:212282:212291	2678250	38	True				
ANR	2678315	ReturnStatement	"return ""PSPLIM_NS"" ;"	5519:15:212293:212311	2678250	39	True				
ANR	2678316	PrimaryExpression	"""PSPLIM_NS"""		2678250	0					
ANR	2678317	Label	case 0x90 :	5520:4:212317:212326	2678250	40	True				
ANR	2678318	ReturnStatement	"return ""PRIMASK_NS"" ;"	5520:15:212328:212347	2678250	41	True				
ANR	2678319	PrimaryExpression	"""PRIMASK_NS"""		2678250	0					
ANR	2678320	Label	case 0x91 :	5521:4:212353:212362	2678250	42	True				
ANR	2678321	ReturnStatement	"return ""BASEPRI_NS"" ;"	5521:15:212364:212383	2678250	43	True				
ANR	2678322	PrimaryExpression	"""BASEPRI_NS"""		2678250	0					
ANR	2678323	Label	case 0x93 :	5522:4:212389:212398	2678250	44	True				
ANR	2678324	ReturnStatement	"return ""FAULTMASK_NS"" ;"	5522:15:212400:212421	2678250	45	True				
ANR	2678325	PrimaryExpression	"""FAULTMASK_NS"""		2678250	0					
ANR	2678326	Label	case 0x94 :	5523:4:212427:212436	2678250	46	True				
ANR	2678327	ReturnStatement	"return ""CONTROL_NS"" ;"	5523:15:212438:212457	2678250	47	True				
ANR	2678328	PrimaryExpression	"""CONTROL_NS"""		2678250	0					
ANR	2678329	Label	case 0x98 :	5524:4:212463:212472	2678250	48	True				
ANR	2678330	ReturnStatement	"return ""SP_NS"" ;"	5524:15:212474:212488	2678250	49	True				
ANR	2678331	PrimaryExpression	"""SP_NS"""		2678250	0					
ANR	2678332	Label	default :	5525:4:212494:212501	2678250	50	True				
ANR	2678333	Identifier	default		2678250	0					
ANR	2678334	ReturnStatement	"return ""<unknown>"" ;"	5525:13:212503:212521	2678250	51	True				
ANR	2678335	PrimaryExpression	"""<unknown>"""		2678250	0					
ANR	2678336	ReturnType	static const char *		2678250	1					
ANR	2678337	Identifier	psr_name		2678250	2					
ANR	2678338	ParameterList	int regno		2678250	3					
ANR	2678339	Parameter	int regno	5496:10:211649:211657	2678250	0	True				
ANR	2678340	ParameterType	int		2678250	0					
ANR	2678341	Identifier	regno		2678250	1					
ANR	2678342	CFGEntryNode	ENTRY		2678250		True				
ANR	2678343	CFGExitNode	EXIT		2678250		True				
ANR	2678344	Symbol	regno		2678250						
ANR	2678345	Function	print_insn_thumb32	5531:0:212600:225986							
ANR	2678346	FunctionDef	"print_insn_thumb32 (bfd_vma pc , struct disassemble_info * info , long given)"		2678345	0					
ANR	2678347	CompoundStatement		5533:0:212687:225986	2678345	0					
ANR	2678348	IdentifierDeclStatement	const struct opcode32 * insn ;	5534:2:212691:212718	2678345	0	True				
ANR	2678349	IdentifierDecl	* insn		2678345	0					
ANR	2678350	IdentifierDeclType	const struct opcode32 *		2678345	0					
ANR	2678351	Identifier	insn		2678345	1					
ANR	2678352	IdentifierDeclStatement	void * stream = info -> stream ;	5535:2:212722:212749	2678345	1	True				
ANR	2678353	IdentifierDecl	* stream = info -> stream		2678345	0					
ANR	2678354	IdentifierDeclType	void *		2678345	0					
ANR	2678355	Identifier	stream		2678345	1					
ANR	2678356	AssignmentExpression	* stream = info -> stream		2678345	2		=			
ANR	2678357	Identifier	stream		2678345	0					
ANR	2678358	PtrMemberAccess	info -> stream		2678345	1					
ANR	2678359	Identifier	info		2678345	0					
ANR	2678360	Identifier	stream		2678345	1					
ANR	2678361	IdentifierDeclStatement	fprintf_ftype func = info -> fprintf_func ;	5536:2:212753:212792	2678345	2	True				
ANR	2678362	IdentifierDecl	func = info -> fprintf_func		2678345	0					
ANR	2678363	IdentifierDeclType	fprintf_ftype		2678345	0					
ANR	2678364	Identifier	func		2678345	1					
ANR	2678365	AssignmentExpression	func = info -> fprintf_func		2678345	2		=			
ANR	2678366	Identifier	func		2678345	0					
ANR	2678367	PtrMemberAccess	info -> fprintf_func		2678345	1					
ANR	2678368	Identifier	info		2678345	0					
ANR	2678369	Identifier	fprintf_func		2678345	1					
ANR	2678370	IfStatement	"if ( print_insn_coprocessor ( pc , info , given , TRUE ) )"		2678345	3					
ANR	2678371	Condition	"print_insn_coprocessor ( pc , info , given , TRUE )"	5538:6:212801:212846	2678345	0	True				
ANR	2678372	CallExpression	"print_insn_coprocessor ( pc , info , given , TRUE )"		2678345	0					
ANR	2678373	Callee	print_insn_coprocessor		2678345	0					
ANR	2678374	Identifier	print_insn_coprocessor		2678345	0					
ANR	2678375	ArgumentList	pc		2678345	1					
ANR	2678376	Argument	pc		2678345	0					
ANR	2678377	Identifier	pc		2678345	0					
ANR	2678378	Argument	info		2678345	1					
ANR	2678379	Identifier	info		2678345	0					
ANR	2678380	Argument	given		2678345	2					
ANR	2678381	Identifier	given		2678345	0					
ANR	2678382	Argument	TRUE		2678345	3					
ANR	2678383	Identifier	TRUE		2678345	0					
ANR	2678384	CompoundStatement		6:54:161:161	2678345	1					
ANR	2678385	ReturnStatement	return ;	5539:3:212854:212860	2678345	0	True				
ANR	2678386	IfStatement	"if ( print_insn_neon ( info , given , TRUE ) )"		2678345	4					
ANR	2678387	Condition	"print_insn_neon ( info , given , TRUE )"	5542:6:212873:212907	2678345	0	True				
ANR	2678388	CallExpression	"print_insn_neon ( info , given , TRUE )"		2678345	0					
ANR	2678389	Callee	print_insn_neon		2678345	0					
ANR	2678390	Identifier	print_insn_neon		2678345	0					
ANR	2678391	ArgumentList	info		2678345	1					
ANR	2678392	Argument	info		2678345	0					
ANR	2678393	Identifier	info		2678345	0					
ANR	2678394	Argument	given		2678345	1					
ANR	2678395	Identifier	given		2678345	0					
ANR	2678396	Argument	TRUE		2678345	2					
ANR	2678397	Identifier	TRUE		2678345	0					
ANR	2678398	CompoundStatement		10:43:222:222	2678345	1					
ANR	2678399	ReturnStatement	return ;	5543:3:212915:212921	2678345	0	True				
ANR	2678400	ForStatement	for ( insn = thumb32_opcodes ; insn -> assembler ; insn ++ )		2678345	5					
ANR	2678401	ForInit	insn = thumb32_opcodes ;	5546:7:212935:212957	2678345	0	True				
ANR	2678402	AssignmentExpression	insn = thumb32_opcodes		2678345	0		=			
ANR	2678403	Identifier	insn		2678345	0					
ANR	2678404	Identifier	thumb32_opcodes		2678345	1					
ANR	2678405	Condition	insn -> assembler	5546:31:212959:212973	2678345	1	True				
ANR	2678406	PtrMemberAccess	insn -> assembler		2678345	0					
ANR	2678407	Identifier	insn		2678345	0					
ANR	2678408	Identifier	assembler		2678345	1					
ANR	2678409	PostIncDecOperationExpression	insn ++	5546:48:212976:212981	2678345	2	True				
ANR	2678410	Identifier	insn		2678345	0					
ANR	2678411	IncDec	++		2678345	1					
ANR	2678412	CompoundStatement		14:56:296:296	2678345	3					
ANR	2678413	IfStatement	if ( ( given & insn -> mask ) == insn -> value )		2678345	0					
ANR	2678414	Condition	( given & insn -> mask ) == insn -> value	5547:7:212993:213027	2678345	0	True				
ANR	2678415	EqualityExpression	( given & insn -> mask ) == insn -> value		2678345	0		==			
ANR	2678416	BitAndExpression	given & insn -> mask		2678345	0		&			
ANR	2678417	Identifier	given		2678345	0					
ANR	2678418	PtrMemberAccess	insn -> mask		2678345	1					
ANR	2678419	Identifier	insn		2678345	0					
ANR	2678420	Identifier	mask		2678345	1					
ANR	2678421	PtrMemberAccess	insn -> value		2678345	1					
ANR	2678422	Identifier	insn		2678345	0					
ANR	2678423	Identifier	value		2678345	1					
ANR	2678424	CompoundStatement		18:4:431:462	2678345	1					
ANR	2678425	IdentifierDeclStatement	bfd_boolean is_unpredictable = FALSE ;	5548:4:213036:213072	2678345	0	True				
ANR	2678426	IdentifierDecl	is_unpredictable = FALSE		2678345	0					
ANR	2678427	IdentifierDeclType	bfd_boolean		2678345	0					
ANR	2678428	Identifier	is_unpredictable		2678345	1					
ANR	2678429	AssignmentExpression	is_unpredictable = FALSE		2678345	2		=			
ANR	2678430	Identifier	FALSE		2678345	0					
ANR	2678431	Identifier	FALSE		2678345	1					
ANR	2678432	IdentifierDeclStatement	const char * c = insn -> assembler ;	5550:4:213119:213150	2678345	1	True				
ANR	2678433	IdentifierDecl	* c = insn -> assembler		2678345	0					
ANR	2678434	IdentifierDeclType	const char *		2678345	0					
ANR	2678435	Identifier	c		2678345	1					
ANR	2678436	AssignmentExpression	* c = insn -> assembler		2678345	2		=			
ANR	2678437	Identifier	c		2678345	0					
ANR	2678438	PtrMemberAccess	insn -> assembler		2678345	1					
ANR	2678439	Identifier	insn		2678345	0					
ANR	2678440	Identifier	assembler		2678345	1					
ANR	2678441	ForStatement	for ( ; * c ; c ++ )		2678345	2					
ANR	2678442	Condition	* c	5552:11:213164:213165	2678345	0	True				
ANR	2678443	UnaryOperationExpression	* c		2678345	0					
ANR	2678444	UnaryOperator	*		2678345	0					
ANR	2678445	Identifier	c		2678345	1					
ANR	2678446	PostIncDecOperationExpression	c ++	5552:15:213168:213170	2678345	1	True				
ANR	2678447	Identifier	c		2678345	0					
ANR	2678448	IncDec	++		2678345	1					
ANR	2678449	CompoundStatement		20:20:485:485	2678345	2					
ANR	2678450	IfStatement	if ( * c != '%' )		2678345	0					
ANR	2678451	Condition	* c != '%'	5553:9:213184:213192	2678345	0	True				
ANR	2678452	EqualityExpression	* c != '%'		2678345	0		!=			
ANR	2678453	UnaryOperationExpression	* c		2678345	0					
ANR	2678454	UnaryOperator	*		2678345	0					
ANR	2678455	Identifier	c		2678345	1					
ANR	2678456	PrimaryExpression	'%'		2678345	1					
ANR	2678457	CompoundStatement		21:20:507:507	2678345	1					
ANR	2678458	ExpressionStatement	"func ( stream , ""%c"" , * c )"	5554:6:213203:213226	2678345	0	True				
ANR	2678459	CallExpression	"func ( stream , ""%c"" , * c )"		2678345	0					
ANR	2678460	Callee	func		2678345	0					
ANR	2678461	Identifier	func		2678345	0					
ANR	2678462	ArgumentList	stream		2678345	1					
ANR	2678463	Argument	stream		2678345	0					
ANR	2678464	Identifier	stream		2678345	0					
ANR	2678465	Argument	"""%c"""		2678345	1					
ANR	2678466	PrimaryExpression	"""%c"""		2678345	0					
ANR	2678467	Argument	* c		2678345	2					
ANR	2678468	UnaryOperationExpression	* c		2678345	0					
ANR	2678469	UnaryOperator	*		2678345	0					
ANR	2678470	Identifier	c		2678345	1					
ANR	2678471	ContinueStatement	continue ;	5555:6:213234:213242	2678345	1	True				
ANR	2678472	SwitchStatement	switch ( * ++ c )		2678345	1					
ANR	2678473	Condition	* ++ c	5558:13:213265:213268	2678345	0	True				
ANR	2678474	UnaryOperationExpression	* ++ c		2678345	0					
ANR	2678475	UnaryOperator	*		2678345	0					
ANR	2678476	UnaryExpression	++ c		2678345	1					
ANR	2678477	IncDec	++		2678345	0					
ANR	2678478	Identifier	c		2678345	1					
ANR	2678479	CompoundStatement		26:19:583:583	2678345	1					
ANR	2678480	Label	case '%' :	5559:5:213278:213286	2678345	0	True				
ANR	2678481	ExpressionStatement	"func ( stream , ""%%"" )"	5560:6:213294:213313	2678345	1	True				
ANR	2678482	CallExpression	"func ( stream , ""%%"" )"		2678345	0					
ANR	2678483	Callee	func		2678345	0					
ANR	2678484	Identifier	func		2678345	0					
ANR	2678485	ArgumentList	stream		2678345	1					
ANR	2678486	Argument	stream		2678345	0					
ANR	2678487	Identifier	stream		2678345	0					
ANR	2678488	Argument	"""%%"""		2678345	1					
ANR	2678489	PrimaryExpression	"""%%"""		2678345	0					
ANR	2678490	BreakStatement	break ;	5561:6:213321:213326	2678345	2	True				
ANR	2678491	Label	case 'c' :	5563:5:213334:213342	2678345	3	True				
ANR	2678492	IfStatement	if ( ifthen_state )		2678345	4					
ANR	2678493	Condition	ifthen_state	5564:10:213354:213365	2678345	0	True				
ANR	2678494	Identifier	ifthen_state		2678345	0					
ANR	2678495	CompoundStatement		32:24:680:680	2678345	1					
ANR	2678496	ExpressionStatement	"func ( stream , ""%s"" , arm_conditional [ IFTHEN_COND ] )"	5565:7:213377:213426	2678345	0	True				
ANR	2678497	CallExpression	"func ( stream , ""%s"" , arm_conditional [ IFTHEN_COND ] )"		2678345	0					
ANR	2678498	Callee	func		2678345	0					
ANR	2678499	Identifier	func		2678345	0					
ANR	2678500	ArgumentList	stream		2678345	1					
ANR	2678501	Argument	stream		2678345	0					
ANR	2678502	Identifier	stream		2678345	0					
ANR	2678503	Argument	"""%s"""		2678345	1					
ANR	2678504	PrimaryExpression	"""%s"""		2678345	0					
ANR	2678505	Argument	arm_conditional [ IFTHEN_COND ]		2678345	2					
ANR	2678506	ArrayIndexing	arm_conditional [ IFTHEN_COND ]		2678345	0					
ANR	2678507	Identifier	arm_conditional		2678345	0					
ANR	2678508	Identifier	IFTHEN_COND		2678345	1					
ANR	2678509	BreakStatement	break ;	5567:6:213442:213447	2678345	5	True				
ANR	2678510	Label	case 'x' :	5569:5:213455:213463	2678345	6	True				
ANR	2678511	IfStatement	if ( ifthen_next_state )		2678345	7					
ANR	2678512	Condition	ifthen_next_state	5570:10:213475:213491	2678345	0	True				
ANR	2678513	Identifier	ifthen_next_state		2678345	0					
ANR	2678514	CompoundStatement		38:29:806:806	2678345	1					
ANR	2678515	ExpressionStatement	"func ( stream , "" ; unpredictable branch in IT block\\n"" )"	5571:7:213503:213557	2678345	0	True				
ANR	2678516	CallExpression	"func ( stream , "" ; unpredictable branch in IT block\\n"" )"		2678345	0					
ANR	2678517	Callee	func		2678345	0					
ANR	2678518	Identifier	func		2678345	0					
ANR	2678519	ArgumentList	stream		2678345	1					
ANR	2678520	Argument	stream		2678345	0					
ANR	2678521	Identifier	stream		2678345	0					
ANR	2678522	Argument	""" ; unpredictable branch in IT block\\n"""		2678345	1					
ANR	2678523	PrimaryExpression	""" ; unpredictable branch in IT block\\n"""		2678345	0					
ANR	2678524	BreakStatement	break ;	5573:6:213573:213578	2678345	8	True				
ANR	2678525	Label	case 'X' :	5575:5:213586:213594	2678345	9	True				
ANR	2678526	IfStatement	if ( ifthen_state )		2678345	10					
ANR	2678527	Condition	ifthen_state	5576:10:213606:213617	2678345	0	True				
ANR	2678528	Identifier	ifthen_state		2678345	0					
ANR	2678529	CompoundStatement		44:24:932:932	2678345	1					
ANR	2678530	ExpressionStatement	"func ( stream , "" ; unpredictable <IT:%s>"" , arm_conditional [ IFTHEN_COND ] )"	5577:7:213629:213708	2678345	0	True				
ANR	2678531	CallExpression	"func ( stream , "" ; unpredictable <IT:%s>"" , arm_conditional [ IFTHEN_COND ] )"		2678345	0					
ANR	2678532	Callee	func		2678345	0					
ANR	2678533	Identifier	func		2678345	0					
ANR	2678534	ArgumentList	stream		2678345	1					
ANR	2678535	Argument	stream		2678345	0					
ANR	2678536	Identifier	stream		2678345	0					
ANR	2678537	Argument	""" ; unpredictable <IT:%s>"""		2678345	1					
ANR	2678538	PrimaryExpression	""" ; unpredictable <IT:%s>"""		2678345	0					
ANR	2678539	Argument	arm_conditional [ IFTHEN_COND ]		2678345	2					
ANR	2678540	ArrayIndexing	arm_conditional [ IFTHEN_COND ]		2678345	0					
ANR	2678541	Identifier	arm_conditional		2678345	0					
ANR	2678542	Identifier	IFTHEN_COND		2678345	1					
ANR	2678543	BreakStatement	break ;	5580:6:213724:213729	2678345	11	True				
ANR	2678544	Label	case 'I' :	5582:5:213737:213745	2678345	12	True				
ANR	2678545	CompoundStatement		51:6:1067:1089	2678345	13					
ANR	2678546	IdentifierDeclStatement	unsigned int imm12 = 0 ;	5583:6:213755:213777	2678345	0	True				
ANR	2678547	IdentifierDecl	imm12 = 0		2678345	0					
ANR	2678548	IdentifierDeclType	unsigned int		2678345	0					
ANR	2678549	Identifier	imm12		2678345	1					
ANR	2678550	AssignmentExpression	imm12 = 0		2678345	2		=			
ANR	2678551	Identifier	imm12		2678345	0					
ANR	2678552	PrimaryExpression	0		2678345	1					
ANR	2678553	ExpressionStatement	imm12 |= ( given & 0x000000ffu )	5585:6:213786:213816	2678345	1	True				
ANR	2678554	AssignmentExpression	imm12 |= ( given & 0x000000ffu )		2678345	0		|=			
ANR	2678555	Identifier	imm12		2678345	0					
ANR	2678556	BitAndExpression	given & 0x000000ffu		2678345	1		&			
ANR	2678557	Identifier	given		2678345	0					
ANR	2678558	PrimaryExpression	0x000000ffu		2678345	1					
ANR	2678559	ExpressionStatement	imm12 |= ( given & 0x00007000u ) >> 4	5586:6:213824:213859	2678345	2	True				
ANR	2678560	AssignmentExpression	imm12 |= ( given & 0x00007000u ) >> 4		2678345	0		|=			
ANR	2678561	Identifier	imm12		2678345	0					
ANR	2678562	ShiftExpression	( given & 0x00007000u ) >> 4		2678345	1		>>			
ANR	2678563	BitAndExpression	given & 0x00007000u		2678345	0		&			
ANR	2678564	Identifier	given		2678345	0					
ANR	2678565	PrimaryExpression	0x00007000u		2678345	1					
ANR	2678566	PrimaryExpression	4		2678345	1					
ANR	2678567	ExpressionStatement	imm12 |= ( given & 0x04000000u ) >> 15	5587:6:213867:213903	2678345	3	True				
ANR	2678568	AssignmentExpression	imm12 |= ( given & 0x04000000u ) >> 15		2678345	0		|=			
ANR	2678569	Identifier	imm12		2678345	0					
ANR	2678570	ShiftExpression	( given & 0x04000000u ) >> 15		2678345	1		>>			
ANR	2678571	BitAndExpression	given & 0x04000000u		2678345	0		&			
ANR	2678572	Identifier	given		2678345	0					
ANR	2678573	PrimaryExpression	0x04000000u		2678345	1					
ANR	2678574	PrimaryExpression	15		2678345	1					
ANR	2678575	ExpressionStatement	"func ( stream , ""%u"" , imm12 )"	5588:6:213911:213937	2678345	4	True				
ANR	2678576	CallExpression	"func ( stream , ""%u"" , imm12 )"		2678345	0					
ANR	2678577	Callee	func		2678345	0					
ANR	2678578	Identifier	func		2678345	0					
ANR	2678579	ArgumentList	stream		2678345	1					
ANR	2678580	Argument	stream		2678345	0					
ANR	2678581	Identifier	stream		2678345	0					
ANR	2678582	Argument	"""%u"""		2678345	1					
ANR	2678583	PrimaryExpression	"""%u"""		2678345	0					
ANR	2678584	Argument	imm12		2678345	2					
ANR	2678585	Identifier	imm12		2678345	0					
ANR	2678586	BreakStatement	break ;	5590:7:213980:213985	2678345	14	True				
ANR	2678587	Label	case 'M' :	5592:5:213993:214001	2678345	15	True				
ANR	2678588	CompoundStatement		61:6:1323:1360	2678345	16					
ANR	2678589	IdentifierDeclStatement	"unsigned int bits = 0 , imm , imm8 , mod ;"	5593:6:214011:214048	2678345	0	True				
ANR	2678590	IdentifierDecl	bits = 0		2678345	0					
ANR	2678591	IdentifierDeclType	unsigned int		2678345	0					
ANR	2678592	Identifier	bits		2678345	1					
ANR	2678593	AssignmentExpression	bits = 0		2678345	2		=			
ANR	2678594	Identifier	bits		2678345	0					
ANR	2678595	PrimaryExpression	0		2678345	1					
ANR	2678596	IdentifierDecl	imm		2678345	1					
ANR	2678597	IdentifierDeclType	unsigned int		2678345	0					
ANR	2678598	Identifier	imm		2678345	1					
ANR	2678599	IdentifierDecl	imm8		2678345	2					
ANR	2678600	IdentifierDeclType	unsigned int		2678345	0					
ANR	2678601	Identifier	imm8		2678345	1					
ANR	2678602	IdentifierDecl	mod		2678345	3					
ANR	2678603	IdentifierDeclType	unsigned int		2678345	0					
ANR	2678604	Identifier	mod		2678345	1					
ANR	2678605	ExpressionStatement	bits |= ( given & 0x000000ffu )	5595:6:214057:214086	2678345	1	True				
ANR	2678606	AssignmentExpression	bits |= ( given & 0x000000ffu )		2678345	0		|=			
ANR	2678607	Identifier	bits		2678345	0					
ANR	2678608	BitAndExpression	given & 0x000000ffu		2678345	1		&			
ANR	2678609	Identifier	given		2678345	0					
ANR	2678610	PrimaryExpression	0x000000ffu		2678345	1					
ANR	2678611	ExpressionStatement	bits |= ( given & 0x00007000u ) >> 4	5596:6:214094:214128	2678345	2	True				
ANR	2678612	AssignmentExpression	bits |= ( given & 0x00007000u ) >> 4		2678345	0		|=			
ANR	2678613	Identifier	bits		2678345	0					
ANR	2678614	ShiftExpression	( given & 0x00007000u ) >> 4		2678345	1		>>			
ANR	2678615	BitAndExpression	given & 0x00007000u		2678345	0		&			
ANR	2678616	Identifier	given		2678345	0					
ANR	2678617	PrimaryExpression	0x00007000u		2678345	1					
ANR	2678618	PrimaryExpression	4		2678345	1					
ANR	2678619	ExpressionStatement	bits |= ( given & 0x04000000u ) >> 15	5597:6:214136:214171	2678345	3	True				
ANR	2678620	AssignmentExpression	bits |= ( given & 0x04000000u ) >> 15		2678345	0		|=			
ANR	2678621	Identifier	bits		2678345	0					
ANR	2678622	ShiftExpression	( given & 0x04000000u ) >> 15		2678345	1		>>			
ANR	2678623	BitAndExpression	given & 0x04000000u		2678345	0		&			
ANR	2678624	Identifier	given		2678345	0					
ANR	2678625	PrimaryExpression	0x04000000u		2678345	1					
ANR	2678626	PrimaryExpression	15		2678345	1					
ANR	2678627	ExpressionStatement	imm8 = ( bits & 0x0ff )	5598:6:214179:214200	2678345	4	True				
ANR	2678628	AssignmentExpression	imm8 = ( bits & 0x0ff )		2678345	0		=			
ANR	2678629	Identifier	imm8		2678345	0					
ANR	2678630	BitAndExpression	bits & 0x0ff		2678345	1		&			
ANR	2678631	Identifier	bits		2678345	0					
ANR	2678632	PrimaryExpression	0x0ff		2678345	1					
ANR	2678633	ExpressionStatement	mod = ( bits & 0xf00 ) >> 8	5599:6:214208:214233	2678345	5	True				
ANR	2678634	AssignmentExpression	mod = ( bits & 0xf00 ) >> 8		2678345	0		=			
ANR	2678635	Identifier	mod		2678345	0					
ANR	2678636	ShiftExpression	( bits & 0xf00 ) >> 8		2678345	1		>>			
ANR	2678637	BitAndExpression	bits & 0xf00		2678345	0		&			
ANR	2678638	Identifier	bits		2678345	0					
ANR	2678639	PrimaryExpression	0xf00		2678345	1					
ANR	2678640	PrimaryExpression	8		2678345	1					
ANR	2678641	SwitchStatement	switch ( mod )		2678345	6					
ANR	2678642	Condition	mod	5600:14:214249:214251	2678345	0	True				
ANR	2678643	Identifier	mod		2678345	0					
ANR	2678644	CompoundStatement		68:19:1566:1566	2678345	1					
ANR	2678645	Label	case 0 :	5601:6:214262:214268	2678345	0	True				
ANR	2678646	ExpressionStatement	imm = imm8	5601:14:214270:214280	2678345	1	True				
ANR	2678647	AssignmentExpression	imm = imm8		2678345	0		=			
ANR	2678648	Identifier	imm		2678345	0					
ANR	2678649	Identifier	imm8		2678345	1					
ANR	2678650	BreakStatement	break ;	5601:26:214282:214287	2678345	2	True				
ANR	2678651	Label	case 1 :	5602:6:214295:214301	2678345	3	True				
ANR	2678652	ExpressionStatement	imm = ( ( imm8 << 16 ) | imm8 )	5602:14:214303:214330	2678345	4	True				
ANR	2678653	AssignmentExpression	imm = ( ( imm8 << 16 ) | imm8 )		2678345	0		=			
ANR	2678654	Identifier	imm		2678345	0					
ANR	2678655	InclusiveOrExpression	( imm8 << 16 ) | imm8		2678345	1		|			
ANR	2678656	ShiftExpression	imm8 << 16		2678345	0		<<			
ANR	2678657	Identifier	imm8		2678345	0					
ANR	2678658	PrimaryExpression	16		2678345	1					
ANR	2678659	Identifier	imm8		2678345	1					
ANR	2678660	BreakStatement	break ;	5602:43:214332:214337	2678345	5	True				
ANR	2678661	Label	case 2 :	5603:6:214345:214351	2678345	6	True				
ANR	2678662	ExpressionStatement	imm = ( ( imm8 << 24 ) | ( imm8 << 8 ) )	5603:14:214353:214387	2678345	7	True				
ANR	2678663	AssignmentExpression	imm = ( ( imm8 << 24 ) | ( imm8 << 8 ) )		2678345	0		=			
ANR	2678664	Identifier	imm		2678345	0					
ANR	2678665	InclusiveOrExpression	( imm8 << 24 ) | ( imm8 << 8 )		2678345	1		|			
ANR	2678666	ShiftExpression	imm8 << 24		2678345	0		<<			
ANR	2678667	Identifier	imm8		2678345	0					
ANR	2678668	PrimaryExpression	24		2678345	1					
ANR	2678669	ShiftExpression	imm8 << 8		2678345	1		<<			
ANR	2678670	Identifier	imm8		2678345	0					
ANR	2678671	PrimaryExpression	8		2678345	1					
ANR	2678672	BreakStatement	break ;	5603:50:214389:214394	2678345	8	True				
ANR	2678673	Label	case 3 :	5604:6:214402:214408	2678345	9	True				
ANR	2678674	ExpressionStatement	imm = ( ( imm8 << 24 ) | ( imm8 << 16 ) | ( imm8 << 8 ) | imm8 )	5604:14:214410:214466	2678345	10	True				
ANR	2678675	AssignmentExpression	imm = ( ( imm8 << 24 ) | ( imm8 << 16 ) | ( imm8 << 8 ) | imm8 )		2678345	0		=			
ANR	2678676	Identifier	imm		2678345	0					
ANR	2678677	InclusiveOrExpression	( imm8 << 24 ) | ( imm8 << 16 ) | ( imm8 << 8 ) | imm8		2678345	1		|			
ANR	2678678	ShiftExpression	imm8 << 24		2678345	0		<<			
ANR	2678679	Identifier	imm8		2678345	0					
ANR	2678680	PrimaryExpression	24		2678345	1					
ANR	2678681	InclusiveOrExpression	( imm8 << 16 ) | ( imm8 << 8 ) | imm8		2678345	1		|			
ANR	2678682	ShiftExpression	imm8 << 16		2678345	0		<<			
ANR	2678683	Identifier	imm8		2678345	0					
ANR	2678684	PrimaryExpression	16		2678345	1					
ANR	2678685	InclusiveOrExpression	( imm8 << 8 ) | imm8		2678345	1		|			
ANR	2678686	ShiftExpression	imm8 << 8		2678345	0		<<			
ANR	2678687	Identifier	imm8		2678345	0					
ANR	2678688	PrimaryExpression	8		2678345	1					
ANR	2678689	Identifier	imm8		2678345	1					
ANR	2678690	BreakStatement	break ;	5604:72:214468:214473	2678345	11	True				
ANR	2678691	Label	default :	5605:6:214481:214488	2678345	12	True				
ANR	2678692	Identifier	default		2678345	0					
ANR	2678693	ExpressionStatement	mod = ( bits & 0xf80 ) >> 7	5606:7:214497:214522	2678345	13	True				
ANR	2678694	AssignmentExpression	mod = ( bits & 0xf80 ) >> 7		2678345	0		=			
ANR	2678695	Identifier	mod		2678345	0					
ANR	2678696	ShiftExpression	( bits & 0xf80 ) >> 7		2678345	1		>>			
ANR	2678697	BitAndExpression	bits & 0xf80		2678345	0		&			
ANR	2678698	Identifier	bits		2678345	0					
ANR	2678699	PrimaryExpression	0xf80		2678345	1					
ANR	2678700	PrimaryExpression	7		2678345	1					
ANR	2678701	ExpressionStatement	imm8 = ( bits & 0x07f ) | 0x80	5607:7:214531:214559	2678345	14	True				
ANR	2678702	AssignmentExpression	imm8 = ( bits & 0x07f ) | 0x80		2678345	0		=			
ANR	2678703	Identifier	imm8		2678345	0					
ANR	2678704	InclusiveOrExpression	( bits & 0x07f ) | 0x80		2678345	1		|			
ANR	2678705	BitAndExpression	bits & 0x07f		2678345	0		&			
ANR	2678706	Identifier	bits		2678345	0					
ANR	2678707	PrimaryExpression	0x07f		2678345	1					
ANR	2678708	PrimaryExpression	0x80		2678345	1					
ANR	2678709	ExpressionStatement	imm = ( ( ( imm8 << ( 32 - mod ) ) | ( imm8 >> mod ) ) & 0xffffffff )	5608:7:214568:214627	2678345	15	True				
ANR	2678710	AssignmentExpression	imm = ( ( ( imm8 << ( 32 - mod ) ) | ( imm8 >> mod ) ) & 0xffffffff )		2678345	0		=			
ANR	2678711	Identifier	imm		2678345	0					
ANR	2678712	BitAndExpression	( ( imm8 << ( 32 - mod ) ) | ( imm8 >> mod ) ) & 0xffffffff		2678345	1		&			
ANR	2678713	InclusiveOrExpression	( imm8 << ( 32 - mod ) ) | ( imm8 >> mod )		2678345	0		|			
ANR	2678714	ShiftExpression	imm8 << ( 32 - mod )		2678345	0		<<			
ANR	2678715	Identifier	imm8		2678345	0					
ANR	2678716	AdditiveExpression	32 - mod		2678345	1		-			
ANR	2678717	PrimaryExpression	32		2678345	0					
ANR	2678718	Identifier	mod		2678345	1					
ANR	2678719	ShiftExpression	imm8 >> mod		2678345	1		>>			
ANR	2678720	Identifier	imm8		2678345	0					
ANR	2678721	Identifier	mod		2678345	1					
ANR	2678722	PrimaryExpression	0xffffffff		2678345	1					
ANR	2678723	ExpressionStatement	"func ( stream , ""%u"" , imm )"	5610:6:214643:214667	2678345	7	True				
ANR	2678724	CallExpression	"func ( stream , ""%u"" , imm )"		2678345	0					
ANR	2678725	Callee	func		2678345	0					
ANR	2678726	Identifier	func		2678345	0					
ANR	2678727	ArgumentList	stream		2678345	1					
ANR	2678728	Argument	stream		2678345	0					
ANR	2678729	Identifier	stream		2678345	0					
ANR	2678730	Argument	"""%u"""		2678345	1					
ANR	2678731	PrimaryExpression	"""%u"""		2678345	0					
ANR	2678732	Argument	imm		2678345	2					
ANR	2678733	Identifier	imm		2678345	0					
ANR	2678734	BreakStatement	break ;	5612:7:214708:214713	2678345	17	True				
ANR	2678735	Label	case 'J' :	5614:5:214721:214729	2678345	18	True				
ANR	2678736	CompoundStatement		83:6:2051:2071	2678345	19					
ANR	2678737	IdentifierDeclStatement	unsigned int imm = 0 ;	5615:6:214739:214759	2678345	0	True				
ANR	2678738	IdentifierDecl	imm = 0		2678345	0					
ANR	2678739	IdentifierDeclType	unsigned int		2678345	0					
ANR	2678740	Identifier	imm		2678345	1					
ANR	2678741	AssignmentExpression	imm = 0		2678345	2		=			
ANR	2678742	Identifier	imm		2678345	0					
ANR	2678743	PrimaryExpression	0		2678345	1					
ANR	2678744	ExpressionStatement	imm |= ( given & 0x000000ffu )	5617:6:214768:214796	2678345	1	True				
ANR	2678745	AssignmentExpression	imm |= ( given & 0x000000ffu )		2678345	0		|=			
ANR	2678746	Identifier	imm		2678345	0					
ANR	2678747	BitAndExpression	given & 0x000000ffu		2678345	1		&			
ANR	2678748	Identifier	given		2678345	0					
ANR	2678749	PrimaryExpression	0x000000ffu		2678345	1					
ANR	2678750	ExpressionStatement	imm |= ( given & 0x00007000u ) >> 4	5618:6:214804:214837	2678345	2	True				
ANR	2678751	AssignmentExpression	imm |= ( given & 0x00007000u ) >> 4		2678345	0		|=			
ANR	2678752	Identifier	imm		2678345	0					
ANR	2678753	ShiftExpression	( given & 0x00007000u ) >> 4		2678345	1		>>			
ANR	2678754	BitAndExpression	given & 0x00007000u		2678345	0		&			
ANR	2678755	Identifier	given		2678345	0					
ANR	2678756	PrimaryExpression	0x00007000u		2678345	1					
ANR	2678757	PrimaryExpression	4		2678345	1					
ANR	2678758	ExpressionStatement	imm |= ( given & 0x04000000u ) >> 15	5619:6:214845:214879	2678345	3	True				
ANR	2678759	AssignmentExpression	imm |= ( given & 0x04000000u ) >> 15		2678345	0		|=			
ANR	2678760	Identifier	imm		2678345	0					
ANR	2678761	ShiftExpression	( given & 0x04000000u ) >> 15		2678345	1		>>			
ANR	2678762	BitAndExpression	given & 0x04000000u		2678345	0		&			
ANR	2678763	Identifier	given		2678345	0					
ANR	2678764	PrimaryExpression	0x04000000u		2678345	1					
ANR	2678765	PrimaryExpression	15		2678345	1					
ANR	2678766	ExpressionStatement	imm |= ( given & 0x000f0000u ) >> 4	5620:6:214887:214920	2678345	4	True				
ANR	2678767	AssignmentExpression	imm |= ( given & 0x000f0000u ) >> 4		2678345	0		|=			
ANR	2678768	Identifier	imm		2678345	0					
ANR	2678769	ShiftExpression	( given & 0x000f0000u ) >> 4		2678345	1		>>			
ANR	2678770	BitAndExpression	given & 0x000f0000u		2678345	0		&			
ANR	2678771	Identifier	given		2678345	0					
ANR	2678772	PrimaryExpression	0x000f0000u		2678345	1					
ANR	2678773	PrimaryExpression	4		2678345	1					
ANR	2678774	ExpressionStatement	"func ( stream , ""%u"" , imm )"	5621:6:214928:214952	2678345	5	True				
ANR	2678775	CallExpression	"func ( stream , ""%u"" , imm )"		2678345	0					
ANR	2678776	Callee	func		2678345	0					
ANR	2678777	Identifier	func		2678345	0					
ANR	2678778	ArgumentList	stream		2678345	1					
ANR	2678779	Argument	stream		2678345	0					
ANR	2678780	Identifier	stream		2678345	0					
ANR	2678781	Argument	"""%u"""		2678345	1					
ANR	2678782	PrimaryExpression	"""%u"""		2678345	0					
ANR	2678783	Argument	imm		2678345	2					
ANR	2678784	Identifier	imm		2678345	0					
ANR	2678785	BreakStatement	break ;	5623:7:214993:214998	2678345	20	True				
ANR	2678786	Label	case 'K' :	5625:5:215006:215014	2678345	21	True				
ANR	2678787	CompoundStatement		94:6:2336:2356	2678345	22					
ANR	2678788	IdentifierDeclStatement	unsigned int imm = 0 ;	5626:6:215024:215044	2678345	0	True				
ANR	2678789	IdentifierDecl	imm = 0		2678345	0					
ANR	2678790	IdentifierDeclType	unsigned int		2678345	0					
ANR	2678791	Identifier	imm		2678345	1					
ANR	2678792	AssignmentExpression	imm = 0		2678345	2		=			
ANR	2678793	Identifier	imm		2678345	0					
ANR	2678794	PrimaryExpression	0		2678345	1					
ANR	2678795	ExpressionStatement	imm |= ( given & 0x000f0000u ) >> 16	5628:6:215053:215087	2678345	1	True				
ANR	2678796	AssignmentExpression	imm |= ( given & 0x000f0000u ) >> 16		2678345	0		|=			
ANR	2678797	Identifier	imm		2678345	0					
ANR	2678798	ShiftExpression	( given & 0x000f0000u ) >> 16		2678345	1		>>			
ANR	2678799	BitAndExpression	given & 0x000f0000u		2678345	0		&			
ANR	2678800	Identifier	given		2678345	0					
ANR	2678801	PrimaryExpression	0x000f0000u		2678345	1					
ANR	2678802	PrimaryExpression	16		2678345	1					
ANR	2678803	ExpressionStatement	imm |= ( given & 0x00000ff0u ) >> 0	5629:6:215095:215128	2678345	2	True				
ANR	2678804	AssignmentExpression	imm |= ( given & 0x00000ff0u ) >> 0		2678345	0		|=			
ANR	2678805	Identifier	imm		2678345	0					
ANR	2678806	ShiftExpression	( given & 0x00000ff0u ) >> 0		2678345	1		>>			
ANR	2678807	BitAndExpression	given & 0x00000ff0u		2678345	0		&			
ANR	2678808	Identifier	given		2678345	0					
ANR	2678809	PrimaryExpression	0x00000ff0u		2678345	1					
ANR	2678810	PrimaryExpression	0		2678345	1					
ANR	2678811	ExpressionStatement	imm |= ( given & 0x0000000fu ) << 12	5630:6:215136:215170	2678345	3	True				
ANR	2678812	AssignmentExpression	imm |= ( given & 0x0000000fu ) << 12		2678345	0		|=			
ANR	2678813	Identifier	imm		2678345	0					
ANR	2678814	ShiftExpression	( given & 0x0000000fu ) << 12		2678345	1		<<			
ANR	2678815	BitAndExpression	given & 0x0000000fu		2678345	0		&			
ANR	2678816	Identifier	given		2678345	0					
ANR	2678817	PrimaryExpression	0x0000000fu		2678345	1					
ANR	2678818	PrimaryExpression	12		2678345	1					
ANR	2678819	ExpressionStatement	"func ( stream , ""%u"" , imm )"	5631:6:215178:215202	2678345	4	True				
ANR	2678820	CallExpression	"func ( stream , ""%u"" , imm )"		2678345	0					
ANR	2678821	Callee	func		2678345	0					
ANR	2678822	Identifier	func		2678345	0					
ANR	2678823	ArgumentList	stream		2678345	1					
ANR	2678824	Argument	stream		2678345	0					
ANR	2678825	Identifier	stream		2678345	0					
ANR	2678826	Argument	"""%u"""		2678345	1					
ANR	2678827	PrimaryExpression	"""%u"""		2678345	0					
ANR	2678828	Argument	imm		2678345	2					
ANR	2678829	Identifier	imm		2678345	0					
ANR	2678830	BreakStatement	break ;	5633:7:215243:215248	2678345	23	True				
ANR	2678831	Label	case 'H' :	5635:5:215256:215264	2678345	24	True				
ANR	2678832	CompoundStatement		104:6:2586:2606	2678345	25					
ANR	2678833	IdentifierDeclStatement	unsigned int imm = 0 ;	5636:6:215274:215294	2678345	0	True				
ANR	2678834	IdentifierDecl	imm = 0		2678345	0					
ANR	2678835	IdentifierDeclType	unsigned int		2678345	0					
ANR	2678836	Identifier	imm		2678345	1					
ANR	2678837	AssignmentExpression	imm = 0		2678345	2		=			
ANR	2678838	Identifier	imm		2678345	0					
ANR	2678839	PrimaryExpression	0		2678345	1					
ANR	2678840	ExpressionStatement	imm |= ( given & 0x000f0000u ) >> 4	5638:6:215303:215336	2678345	1	True				
ANR	2678841	AssignmentExpression	imm |= ( given & 0x000f0000u ) >> 4		2678345	0		|=			
ANR	2678842	Identifier	imm		2678345	0					
ANR	2678843	ShiftExpression	( given & 0x000f0000u ) >> 4		2678345	1		>>			
ANR	2678844	BitAndExpression	given & 0x000f0000u		2678345	0		&			
ANR	2678845	Identifier	given		2678345	0					
ANR	2678846	PrimaryExpression	0x000f0000u		2678345	1					
ANR	2678847	PrimaryExpression	4		2678345	1					
ANR	2678848	ExpressionStatement	imm |= ( given & 0x00000fffu ) >> 0	5639:6:215344:215377	2678345	2	True				
ANR	2678849	AssignmentExpression	imm |= ( given & 0x00000fffu ) >> 0		2678345	0		|=			
ANR	2678850	Identifier	imm		2678345	0					
ANR	2678851	ShiftExpression	( given & 0x00000fffu ) >> 0		2678345	1		>>			
ANR	2678852	BitAndExpression	given & 0x00000fffu		2678345	0		&			
ANR	2678853	Identifier	given		2678345	0					
ANR	2678854	PrimaryExpression	0x00000fffu		2678345	1					
ANR	2678855	PrimaryExpression	0		2678345	1					
ANR	2678856	ExpressionStatement	"func ( stream , ""%u"" , imm )"	5640:6:215385:215409	2678345	3	True				
ANR	2678857	CallExpression	"func ( stream , ""%u"" , imm )"		2678345	0					
ANR	2678858	Callee	func		2678345	0					
ANR	2678859	Identifier	func		2678345	0					
ANR	2678860	ArgumentList	stream		2678345	1					
ANR	2678861	Argument	stream		2678345	0					
ANR	2678862	Identifier	stream		2678345	0					
ANR	2678863	Argument	"""%u"""		2678345	1					
ANR	2678864	PrimaryExpression	"""%u"""		2678345	0					
ANR	2678865	Argument	imm		2678345	2					
ANR	2678866	Identifier	imm		2678345	0					
ANR	2678867	BreakStatement	break ;	5642:7:215450:215455	2678345	26	True				
ANR	2678868	Label	case 'V' :	5644:5:215463:215471	2678345	27	True				
ANR	2678869	CompoundStatement		113:6:2793:2813	2678345	28					
ANR	2678870	IdentifierDeclStatement	unsigned int imm = 0 ;	5645:6:215481:215501	2678345	0	True				
ANR	2678871	IdentifierDecl	imm = 0		2678345	0					
ANR	2678872	IdentifierDeclType	unsigned int		2678345	0					
ANR	2678873	Identifier	imm		2678345	1					
ANR	2678874	AssignmentExpression	imm = 0		2678345	2		=			
ANR	2678875	Identifier	imm		2678345	0					
ANR	2678876	PrimaryExpression	0		2678345	1					
ANR	2678877	ExpressionStatement	imm |= ( given & 0x00000fffu )	5647:6:215510:215538	2678345	1	True				
ANR	2678878	AssignmentExpression	imm |= ( given & 0x00000fffu )		2678345	0		|=			
ANR	2678879	Identifier	imm		2678345	0					
ANR	2678880	BitAndExpression	given & 0x00000fffu		2678345	1		&			
ANR	2678881	Identifier	given		2678345	0					
ANR	2678882	PrimaryExpression	0x00000fffu		2678345	1					
ANR	2678883	ExpressionStatement	imm |= ( given & 0x000f0000u ) >> 4	5648:6:215546:215579	2678345	2	True				
ANR	2678884	AssignmentExpression	imm |= ( given & 0x000f0000u ) >> 4		2678345	0		|=			
ANR	2678885	Identifier	imm		2678345	0					
ANR	2678886	ShiftExpression	( given & 0x000f0000u ) >> 4		2678345	1		>>			
ANR	2678887	BitAndExpression	given & 0x000f0000u		2678345	0		&			
ANR	2678888	Identifier	given		2678345	0					
ANR	2678889	PrimaryExpression	0x000f0000u		2678345	1					
ANR	2678890	PrimaryExpression	4		2678345	1					
ANR	2678891	ExpressionStatement	"func ( stream , ""%u"" , imm )"	5649:6:215587:215611	2678345	3	True				
ANR	2678892	CallExpression	"func ( stream , ""%u"" , imm )"		2678345	0					
ANR	2678893	Callee	func		2678345	0					
ANR	2678894	Identifier	func		2678345	0					
ANR	2678895	ArgumentList	stream		2678345	1					
ANR	2678896	Argument	stream		2678345	0					
ANR	2678897	Identifier	stream		2678345	0					
ANR	2678898	Argument	"""%u"""		2678345	1					
ANR	2678899	PrimaryExpression	"""%u"""		2678345	0					
ANR	2678900	Argument	imm		2678345	2					
ANR	2678901	Identifier	imm		2678345	0					
ANR	2678902	BreakStatement	break ;	5651:7:215652:215657	2678345	29	True				
ANR	2678903	Label	case 'S' :	5653:5:215665:215673	2678345	30	True				
ANR	2678904	CompoundStatement		124:6:3096:3116	2678345	31					
ANR	2678905	IdentifierDeclStatement	unsigned int reg = ( given & 0x0000000fu ) ;	5654:6:215683:215723	2678345	0	True				
ANR	2678906	IdentifierDecl	reg = ( given & 0x0000000fu )		2678345	0					
ANR	2678907	IdentifierDeclType	unsigned int		2678345	0					
ANR	2678908	Identifier	reg		2678345	1					
ANR	2678909	AssignmentExpression	reg = ( given & 0x0000000fu )		2678345	2		=			
ANR	2678910	Identifier	reg		2678345	0					
ANR	2678911	BitAndExpression	given & 0x0000000fu		2678345	1		&			
ANR	2678912	Identifier	given		2678345	0					
ANR	2678913	PrimaryExpression	0x0000000fu		2678345	1					
ANR	2678914	IdentifierDeclStatement	unsigned int stp = ( given & 0x00000030u ) >> 4 ;	5655:6:215731:215776	2678345	1	True				
ANR	2678915	IdentifierDecl	stp = ( given & 0x00000030u ) >> 4		2678345	0					
ANR	2678916	IdentifierDeclType	unsigned int		2678345	0					
ANR	2678917	Identifier	stp		2678345	1					
ANR	2678918	AssignmentExpression	stp = ( given & 0x00000030u ) >> 4		2678345	2		=			
ANR	2678919	Identifier	stp		2678345	0					
ANR	2678920	ShiftExpression	( given & 0x00000030u ) >> 4		2678345	1		>>			
ANR	2678921	BitAndExpression	given & 0x00000030u		2678345	0		&			
ANR	2678922	Identifier	given		2678345	0					
ANR	2678923	PrimaryExpression	0x00000030u		2678345	1					
ANR	2678924	PrimaryExpression	4		2678345	1					
ANR	2678925	IdentifierDeclStatement	unsigned int imm = 0 ;	5656:6:215784:215804	2678345	2	True				
ANR	2678926	IdentifierDecl	imm = 0		2678345	0					
ANR	2678927	IdentifierDeclType	unsigned int		2678345	0					
ANR	2678928	Identifier	imm		2678345	1					
ANR	2678929	AssignmentExpression	imm = 0		2678345	2		=			
ANR	2678930	Identifier	imm		2678345	0					
ANR	2678931	PrimaryExpression	0		2678345	1					
ANR	2678932	ExpressionStatement	imm |= ( given & 0x000000c0u ) >> 6	5657:6:215812:215845	2678345	3	True				
ANR	2678933	AssignmentExpression	imm |= ( given & 0x000000c0u ) >> 6		2678345	0		|=			
ANR	2678934	Identifier	imm		2678345	0					
ANR	2678935	ShiftExpression	( given & 0x000000c0u ) >> 6		2678345	1		>>			
ANR	2678936	BitAndExpression	given & 0x000000c0u		2678345	0		&			
ANR	2678937	Identifier	given		2678345	0					
ANR	2678938	PrimaryExpression	0x000000c0u		2678345	1					
ANR	2678939	PrimaryExpression	6		2678345	1					
ANR	2678940	ExpressionStatement	imm |= ( given & 0x00007000u ) >> 10	5658:6:215853:215887	2678345	4	True				
ANR	2678941	AssignmentExpression	imm |= ( given & 0x00007000u ) >> 10		2678345	0		|=			
ANR	2678942	Identifier	imm		2678345	0					
ANR	2678943	ShiftExpression	( given & 0x00007000u ) >> 10		2678345	1		>>			
ANR	2678944	BitAndExpression	given & 0x00007000u		2678345	0		&			
ANR	2678945	Identifier	given		2678345	0					
ANR	2678946	PrimaryExpression	0x00007000u		2678345	1					
ANR	2678947	PrimaryExpression	10		2678345	1					
ANR	2678948	ExpressionStatement	"func ( stream , ""%s"" , arm_regnames [ reg ] )"	5660:6:215896:215934	2678345	5	True				
ANR	2678949	CallExpression	"func ( stream , ""%s"" , arm_regnames [ reg ] )"		2678345	0					
ANR	2678950	Callee	func		2678345	0					
ANR	2678951	Identifier	func		2678345	0					
ANR	2678952	ArgumentList	stream		2678345	1					
ANR	2678953	Argument	stream		2678345	0					
ANR	2678954	Identifier	stream		2678345	0					
ANR	2678955	Argument	"""%s"""		2678345	1					
ANR	2678956	PrimaryExpression	"""%s"""		2678345	0					
ANR	2678957	Argument	arm_regnames [ reg ]		2678345	2					
ANR	2678958	ArrayIndexing	arm_regnames [ reg ]		2678345	0					
ANR	2678959	Identifier	arm_regnames		2678345	0					
ANR	2678960	Identifier	reg		2678345	1					
ANR	2678961	SwitchStatement	switch ( stp )		2678345	6					
ANR	2678962	Condition	stp	5661:14:215950:215952	2678345	0	True				
ANR	2678963	Identifier	stp		2678345	0					
ANR	2678964	CompoundStatement		129:19:3267:3267	2678345	1					
ANR	2678965	Label	case 0 :	5662:6:215963:215969	2678345	0	True				
ANR	2678966	IfStatement	if ( imm > 0 )		2678345	1					
ANR	2678967	Condition	imm > 0	5663:11:215982:215988	2678345	0	True				
ANR	2678968	RelationalExpression	imm > 0		2678345	0		>			
ANR	2678969	Identifier	imm		2678345	0					
ANR	2678970	PrimaryExpression	0		2678345	1					
ANR	2678971	CompoundStatement		131:20:3303:3303	2678345	1					
ANR	2678972	ExpressionStatement	"func ( stream , "", lsl %u"" , imm )"	5664:8:216001:216031	2678345	0	True				
ANR	2678973	CallExpression	"func ( stream , "", lsl %u"" , imm )"		2678345	0					
ANR	2678974	Callee	func		2678345	0					
ANR	2678975	Identifier	func		2678345	0					
ANR	2678976	ArgumentList	stream		2678345	1					
ANR	2678977	Argument	stream		2678345	0					
ANR	2678978	Identifier	stream		2678345	0					
ANR	2678979	Argument	""", lsl %u"""		2678345	1					
ANR	2678980	PrimaryExpression	""", lsl %u"""		2678345	0					
ANR	2678981	Argument	imm		2678345	2					
ANR	2678982	Identifier	imm		2678345	0					
ANR	2678983	BreakStatement	break ;	5666:7:216049:216054	2678345	2	True				
ANR	2678984	Label	case 1 :	5668:6:216063:216069	2678345	3	True				
ANR	2678985	IfStatement	if ( imm == 0 )		2678345	4					
ANR	2678986	Condition	imm == 0	5669:11:216082:216089	2678345	0	True				
ANR	2678987	EqualityExpression	imm == 0		2678345	0		==			
ANR	2678988	Identifier	imm		2678345	0					
ANR	2678989	PrimaryExpression	0		2678345	1					
ANR	2678990	CompoundStatement		137:21:3404:3404	2678345	1					
ANR	2678991	ExpressionStatement	imm = 32	5670:8:216102:216110	2678345	0	True				
ANR	2678992	AssignmentExpression	imm = 32		2678345	0		=			
ANR	2678993	Identifier	imm		2678345	0					
ANR	2678994	PrimaryExpression	32		2678345	1					
ANR	2678995	ExpressionStatement	"func ( stream , "", lsr %u"" , imm )"	5672:7:216128:216158	2678345	5	True				
ANR	2678996	CallExpression	"func ( stream , "", lsr %u"" , imm )"		2678345	0					
ANR	2678997	Callee	func		2678345	0					
ANR	2678998	Identifier	func		2678345	0					
ANR	2678999	ArgumentList	stream		2678345	1					
ANR	2679000	Argument	stream		2678345	0					
ANR	2679001	Identifier	stream		2678345	0					
ANR	2679002	Argument	""", lsr %u"""		2678345	1					
ANR	2679003	PrimaryExpression	""", lsr %u"""		2678345	0					
ANR	2679004	Argument	imm		2678345	2					
ANR	2679005	Identifier	imm		2678345	0					
ANR	2679006	BreakStatement	break ;	5673:7:216167:216172	2678345	6	True				
ANR	2679007	Label	case 2 :	5675:6:216181:216187	2678345	7	True				
ANR	2679008	IfStatement	if ( imm == 0 )		2678345	8					
ANR	2679009	Condition	imm == 0	5676:11:216200:216207	2678345	0	True				
ANR	2679010	EqualityExpression	imm == 0		2678345	0		==			
ANR	2679011	Identifier	imm		2678345	0					
ANR	2679012	PrimaryExpression	0		2678345	1					
ANR	2679013	CompoundStatement		144:21:3522:3522	2678345	1					
ANR	2679014	ExpressionStatement	imm = 32	5677:8:216220:216228	2678345	0	True				
ANR	2679015	AssignmentExpression	imm = 32		2678345	0		=			
ANR	2679016	Identifier	imm		2678345	0					
ANR	2679017	PrimaryExpression	32		2678345	1					
ANR	2679018	ExpressionStatement	"func ( stream , "", asr %u"" , imm )"	5679:7:216246:216276	2678345	9	True				
ANR	2679019	CallExpression	"func ( stream , "", asr %u"" , imm )"		2678345	0					
ANR	2679020	Callee	func		2678345	0					
ANR	2679021	Identifier	func		2678345	0					
ANR	2679022	ArgumentList	stream		2678345	1					
ANR	2679023	Argument	stream		2678345	0					
ANR	2679024	Identifier	stream		2678345	0					
ANR	2679025	Argument	""", asr %u"""		2678345	1					
ANR	2679026	PrimaryExpression	""", asr %u"""		2678345	0					
ANR	2679027	Argument	imm		2678345	2					
ANR	2679028	Identifier	imm		2678345	0					
ANR	2679029	BreakStatement	break ;	5680:7:216285:216290	2678345	10	True				
ANR	2679030	Label	case 3 :	5682:6:216299:216305	2678345	11	True				
ANR	2679031	IfStatement	if ( imm == 0 )		2678345	12					
ANR	2679032	Condition	imm == 0	5683:11:216318:216325	2678345	0	True				
ANR	2679033	EqualityExpression	imm == 0		2678345	0		==			
ANR	2679034	Identifier	imm		2678345	0					
ANR	2679035	PrimaryExpression	0		2678345	1					
ANR	2679036	CompoundStatement		151:21:3640:3640	2678345	1					
ANR	2679037	ExpressionStatement	"func ( stream , "", rrx"" )"	5684:8:216338:216360	2678345	0	True				
ANR	2679038	CallExpression	"func ( stream , "", rrx"" )"		2678345	0					
ANR	2679039	Callee	func		2678345	0					
ANR	2679040	Identifier	func		2678345	0					
ANR	2679041	ArgumentList	stream		2678345	1					
ANR	2679042	Argument	stream		2678345	0					
ANR	2679043	Identifier	stream		2678345	0					
ANR	2679044	Argument	""", rrx"""		2678345	1					
ANR	2679045	PrimaryExpression	""", rrx"""		2678345	0					
ANR	2679046	ElseStatement	else		2678345	0					
ANR	2679047	CompoundStatement		153:14:3688:3688	2678345	0					
ANR	2679048	ExpressionStatement	"func ( stream , "", ror %u"" , imm )"	5686:8:216386:216416	2678345	0	True				
ANR	2679049	CallExpression	"func ( stream , "", ror %u"" , imm )"		2678345	0					
ANR	2679050	Callee	func		2678345	0					
ANR	2679051	Identifier	func		2678345	0					
ANR	2679052	ArgumentList	stream		2678345	1					
ANR	2679053	Argument	stream		2678345	0					
ANR	2679054	Identifier	stream		2678345	0					
ANR	2679055	Argument	""", ror %u"""		2678345	1					
ANR	2679056	PrimaryExpression	""", ror %u"""		2678345	0					
ANR	2679057	Argument	imm		2678345	2					
ANR	2679058	Identifier	imm		2678345	0					
ANR	2679059	BreakStatement	break ;	5689:7:216442:216447	2678345	32	True				
ANR	2679060	Label	case 'a' :	5691:5:216455:216463	2678345	33	True				
ANR	2679061	CompoundStatement		166:6:4077:4095	2678345	34					
ANR	2679062	IdentifierDeclStatement	unsigned int Rn = ( given & 0x000f0000 ) >> 16 ;	5692:6:216473:216517	2678345	0	True				
ANR	2679063	IdentifierDecl	Rn = ( given & 0x000f0000 ) >> 16		2678345	0					
ANR	2679064	IdentifierDeclType	unsigned int		2678345	0					
ANR	2679065	Identifier	Rn		2678345	1					
ANR	2679066	AssignmentExpression	Rn = ( given & 0x000f0000 ) >> 16		2678345	2		=			
ANR	2679067	Identifier	Rn		2678345	0					
ANR	2679068	ShiftExpression	( given & 0x000f0000 ) >> 16		2678345	1		>>			
ANR	2679069	BitAndExpression	given & 0x000f0000		2678345	0		&			
ANR	2679070	Identifier	given		2678345	0					
ANR	2679071	PrimaryExpression	0x000f0000		2678345	1					
ANR	2679072	PrimaryExpression	16		2678345	1					
ANR	2679073	IdentifierDeclStatement	unsigned int U = ! NEGATIVE_BIT_SET ;	5693:6:216525:216559	2678345	1	True				
ANR	2679074	IdentifierDecl	U = ! NEGATIVE_BIT_SET		2678345	0					
ANR	2679075	IdentifierDeclType	unsigned int		2678345	0					
ANR	2679076	Identifier	U		2678345	1					
ANR	2679077	AssignmentExpression	U = ! NEGATIVE_BIT_SET		2678345	2		=			
ANR	2679078	Identifier	U		2678345	0					
ANR	2679079	UnaryOperationExpression	! NEGATIVE_BIT_SET		2678345	1					
ANR	2679080	UnaryOperator	!		2678345	0					
ANR	2679081	Identifier	NEGATIVE_BIT_SET		2678345	1					
ANR	2679082	IdentifierDeclStatement	unsigned int op = ( given & 0x00000f00 ) >> 8 ;	5694:6:216567:216610	2678345	2	True				
ANR	2679083	IdentifierDecl	op = ( given & 0x00000f00 ) >> 8		2678345	0					
ANR	2679084	IdentifierDeclType	unsigned int		2678345	0					
ANR	2679085	Identifier	op		2678345	1					
ANR	2679086	AssignmentExpression	op = ( given & 0x00000f00 ) >> 8		2678345	2		=			
ANR	2679087	Identifier	op		2678345	0					
ANR	2679088	ShiftExpression	( given & 0x00000f00 ) >> 8		2678345	1		>>			
ANR	2679089	BitAndExpression	given & 0x00000f00		2678345	0		&			
ANR	2679090	Identifier	given		2678345	0					
ANR	2679091	PrimaryExpression	0x00000f00		2678345	1					
ANR	2679092	PrimaryExpression	8		2678345	1					
ANR	2679093	IdentifierDeclStatement	unsigned int i12 = ( given & 0x00000fff ) ;	5695:6:216618:216657	2678345	3	True				
ANR	2679094	IdentifierDecl	i12 = ( given & 0x00000fff )		2678345	0					
ANR	2679095	IdentifierDeclType	unsigned int		2678345	0					
ANR	2679096	Identifier	i12		2678345	1					
ANR	2679097	AssignmentExpression	i12 = ( given & 0x00000fff )		2678345	2		=			
ANR	2679098	Identifier	i12		2678345	0					
ANR	2679099	BitAndExpression	given & 0x00000fff		2678345	1		&			
ANR	2679100	Identifier	given		2678345	0					
ANR	2679101	PrimaryExpression	0x00000fff		2678345	1					
ANR	2679102	IdentifierDeclStatement	unsigned int i8 = ( given & 0x000000ff ) ;	5696:6:216665:216703	2678345	4	True				
ANR	2679103	IdentifierDecl	i8 = ( given & 0x000000ff )		2678345	0					
ANR	2679104	IdentifierDeclType	unsigned int		2678345	0					
ANR	2679105	Identifier	i8		2678345	1					
ANR	2679106	AssignmentExpression	i8 = ( given & 0x000000ff )		2678345	2		=			
ANR	2679107	Identifier	i8		2678345	0					
ANR	2679108	BitAndExpression	given & 0x000000ff		2678345	1		&			
ANR	2679109	Identifier	given		2678345	0					
ANR	2679110	PrimaryExpression	0x000000ff		2678345	1					
ANR	2679111	IdentifierDeclStatement	"bfd_boolean writeback = FALSE , postind = FALSE ;"	5697:6:216711:216757	2678345	5	True				
ANR	2679112	IdentifierDecl	writeback = FALSE		2678345	0					
ANR	2679113	IdentifierDeclType	bfd_boolean		2678345	0					
ANR	2679114	Identifier	writeback		2678345	1					
ANR	2679115	AssignmentExpression	writeback = FALSE		2678345	2		=			
ANR	2679116	Identifier	FALSE		2678345	0					
ANR	2679117	Identifier	FALSE		2678345	1					
ANR	2679118	IdentifierDecl	postind = FALSE		2678345	1					
ANR	2679119	IdentifierDeclType	bfd_boolean		2678345	0					
ANR	2679120	Identifier	postind		2678345	1					
ANR	2679121	AssignmentExpression	postind = FALSE		2678345	2		=			
ANR	2679122	Identifier	FALSE		2678345	0					
ANR	2679123	Identifier	FALSE		2678345	1					
ANR	2679124	IdentifierDeclStatement	bfd_vma offset = 0 ;	5698:6:216765:216783	2678345	6	True				
ANR	2679125	IdentifierDecl	offset = 0		2678345	0					
ANR	2679126	IdentifierDeclType	bfd_vma		2678345	0					
ANR	2679127	Identifier	offset		2678345	1					
ANR	2679128	AssignmentExpression	offset = 0		2678345	2		=			
ANR	2679129	Identifier	offset		2678345	0					
ANR	2679130	PrimaryExpression	0		2678345	1					
ANR	2679131	ExpressionStatement	"func ( stream , ""[%s"" , arm_regnames [ Rn ] )"	5700:6:216792:216830	2678345	7	True				
ANR	2679132	CallExpression	"func ( stream , ""[%s"" , arm_regnames [ Rn ] )"		2678345	0					
ANR	2679133	Callee	func		2678345	0					
ANR	2679134	Identifier	func		2678345	0					
ANR	2679135	ArgumentList	stream		2678345	1					
ANR	2679136	Argument	stream		2678345	0					
ANR	2679137	Identifier	stream		2678345	0					
ANR	2679138	Argument	"""[%s"""		2678345	1					
ANR	2679139	PrimaryExpression	"""[%s"""		2678345	0					
ANR	2679140	Argument	arm_regnames [ Rn ]		2678345	2					
ANR	2679141	ArrayIndexing	arm_regnames [ Rn ]		2678345	0					
ANR	2679142	Identifier	arm_regnames		2678345	0					
ANR	2679143	Identifier	Rn		2678345	1					
ANR	2679144	IfStatement	if ( U )		2678345	8					
ANR	2679145	Condition	U	5701:10:216842:216842	2678345	0	True				
ANR	2679146	Identifier	U		2678345	0					
ANR	2679147	CompoundStatement		170:6:4204:4204	2678345	1					
ANR	2679148	ExpressionStatement	offset = i12	5703:7:216901:216913	2678345	0	True				
ANR	2679149	AssignmentExpression	offset = i12		2678345	0		=			
ANR	2679150	Identifier	offset		2678345	0					
ANR	2679151	Identifier	i12		2678345	1					
ANR	2679152	IfStatement	if ( Rn != 15 )		2678345	1					
ANR	2679153	Condition	Rn != 15	5704:11:216926:216933	2678345	0	True				
ANR	2679154	EqualityExpression	Rn != 15		2678345	0		!=			
ANR	2679155	Identifier	Rn		2678345	0					
ANR	2679156	PrimaryExpression	15		2678345	1					
ANR	2679157	CompoundStatement		172:21:4248:4248	2678345	1					
ANR	2679158	ElseStatement	else		2678345	0					
ANR	2679159	IfStatement	if ( Rn == 15 )		2678345	0					
ANR	2679160	Condition	Rn == 15	5707:17:217004:217011	2678345	0	True				
ANR	2679161	EqualityExpression	Rn == 15		2678345	0		==			
ANR	2679162	Identifier	Rn		2678345	0					
ANR	2679163	PrimaryExpression	15		2678345	1					
ANR	2679164	CompoundStatement		175:27:4326:4326	2678345	1					
ANR	2679165	ExpressionStatement	offset = - ( int ) i12	5708:7:217064:217082	2678345	0	True				
ANR	2679166	AssignmentExpression	offset = - ( int ) i12		2678345	0		=			
ANR	2679167	Identifier	offset		2678345	0					
ANR	2679168	UnaryOperationExpression	- ( int ) i12		2678345	1					
ANR	2679169	UnaryOperator	-		2678345	0					
ANR	2679170	CastExpression	( int ) i12		2678345	1					
ANR	2679171	CastTarget	int		2678345	0					
ANR	2679172	Identifier	i12		2678345	1					
ANR	2679173	ElseStatement	else		2678345	0					
ANR	2679174	IfStatement	if ( op == 0x0 )		2678345	0					
ANR	2679175	Condition	op == 0x0	5709:17:217101:217109	2678345	0	True				
ANR	2679176	EqualityExpression	op == 0x0		2678345	0		==			
ANR	2679177	Identifier	op		2678345	0					
ANR	2679178	PrimaryExpression	0x0		2678345	1					
ANR	2679179	CompoundStatement		180:7:4509:4543	2678345	1					
ANR	2679180	IdentifierDeclStatement	unsigned int Rm = ( i8 & 0x0f ) ;	5711:7:217159:217188	2678345	0	True				
ANR	2679181	IdentifierDecl	Rm = ( i8 & 0x0f )		2678345	0					
ANR	2679182	IdentifierDeclType	unsigned int		2678345	0					
ANR	2679183	Identifier	Rm		2678345	1					
ANR	2679184	AssignmentExpression	Rm = ( i8 & 0x0f )		2678345	2		=			
ANR	2679185	Identifier	Rm		2678345	0					
ANR	2679186	BitAndExpression	i8 & 0x0f		2678345	1		&			
ANR	2679187	Identifier	i8		2678345	0					
ANR	2679188	PrimaryExpression	0x0f		2678345	1					
ANR	2679189	IdentifierDeclStatement	unsigned int sh = ( i8 & 0x30 ) >> 4 ;	5712:7:217197:217231	2678345	1	True				
ANR	2679190	IdentifierDecl	sh = ( i8 & 0x30 ) >> 4		2678345	0					
ANR	2679191	IdentifierDeclType	unsigned int		2678345	0					
ANR	2679192	Identifier	sh		2678345	1					
ANR	2679193	AssignmentExpression	sh = ( i8 & 0x30 ) >> 4		2678345	2		=			
ANR	2679194	Identifier	sh		2678345	0					
ANR	2679195	ShiftExpression	( i8 & 0x30 ) >> 4		2678345	1		>>			
ANR	2679196	BitAndExpression	i8 & 0x30		2678345	0		&			
ANR	2679197	Identifier	i8		2678345	0					
ANR	2679198	PrimaryExpression	0x30		2678345	1					
ANR	2679199	PrimaryExpression	4		2678345	1					
ANR	2679200	ExpressionStatement	"func ( stream , "", %s"" , arm_regnames [ Rm ] )"	5714:7:217241:217280	2678345	2	True				
ANR	2679201	CallExpression	"func ( stream , "", %s"" , arm_regnames [ Rm ] )"		2678345	0					
ANR	2679202	Callee	func		2678345	0					
ANR	2679203	Identifier	func		2678345	0					
ANR	2679204	ArgumentList	stream		2678345	1					
ANR	2679205	Argument	stream		2678345	0					
ANR	2679206	Identifier	stream		2678345	0					
ANR	2679207	Argument	""", %s"""		2678345	1					
ANR	2679208	PrimaryExpression	""", %s"""		2678345	0					
ANR	2679209	Argument	arm_regnames [ Rm ]		2678345	2					
ANR	2679210	ArrayIndexing	arm_regnames [ Rm ]		2678345	0					
ANR	2679211	Identifier	arm_regnames		2678345	0					
ANR	2679212	Identifier	Rm		2678345	1					
ANR	2679213	IfStatement	if ( sh )		2678345	3					
ANR	2679214	Condition	sh	5715:11:217293:217294	2678345	0	True				
ANR	2679215	Identifier	sh		2678345	0					
ANR	2679216	CompoundStatement		183:15:4609:4609	2678345	1					
ANR	2679217	ExpressionStatement	"func ( stream , "", lsl %u"" , sh )"	5716:8:217307:217336	2678345	0	True				
ANR	2679218	CallExpression	"func ( stream , "", lsl %u"" , sh )"		2678345	0					
ANR	2679219	Callee	func		2678345	0					
ANR	2679220	Identifier	func		2678345	0					
ANR	2679221	ArgumentList	stream		2678345	1					
ANR	2679222	Argument	stream		2678345	0					
ANR	2679223	Identifier	stream		2678345	0					
ANR	2679224	Argument	""", lsl %u"""		2678345	1					
ANR	2679225	PrimaryExpression	""", lsl %u"""		2678345	0					
ANR	2679226	Argument	sh		2678345	2					
ANR	2679227	Identifier	sh		2678345	0					
ANR	2679228	ExpressionStatement	"func ( stream , ""]"" )"	5718:7:217354:217372	2678345	4	True				
ANR	2679229	CallExpression	"func ( stream , ""]"" )"		2678345	0					
ANR	2679230	Callee	func		2678345	0					
ANR	2679231	Identifier	func		2678345	0					
ANR	2679232	ArgumentList	stream		2678345	1					
ANR	2679233	Argument	stream		2678345	0					
ANR	2679234	Identifier	stream		2678345	0					
ANR	2679235	Argument	"""]"""		2678345	1					
ANR	2679236	PrimaryExpression	"""]"""		2678345	0					
ANR	2679237	BreakStatement	break ;	5719:7:217381:217386	2678345	5	True				
ANR	2679238	ElseStatement	else		2678345	0					
ANR	2679239	CompoundStatement		188:13:4713:4713	2678345	0					
ANR	2679240	SwitchStatement	switch ( op )		2678345	0					
ANR	2679241	Condition	op	5721:15:217418:217419	2678345	0	True				
ANR	2679242	Identifier	op		2678345	0					
ANR	2679243	CompoundStatement		189:19:4734:4734	2678345	1					
ANR	2679244	Label	case 0xE :	5722:7:217431:217439	2678345	0	True				
ANR	2679245	ExpressionStatement	offset = i8	5723:8:217489:217500	2678345	1	True				
ANR	2679246	AssignmentExpression	offset = i8		2678345	0		=			
ANR	2679247	Identifier	offset		2678345	0					
ANR	2679248	Identifier	i8		2678345	1					
ANR	2679249	BreakStatement	break ;	5724:8:217510:217515	2678345	2	True				
ANR	2679250	Label	case 0xC :	5726:7:217525:217533	2678345	3	True				
ANR	2679251	ExpressionStatement	offset = - i8	5727:8:217583:217595	2678345	4	True				
ANR	2679252	AssignmentExpression	offset = - i8		2678345	0		=			
ANR	2679253	Identifier	offset		2678345	0					
ANR	2679254	UnaryOperationExpression	- i8		2678345	1					
ANR	2679255	UnaryOperator	-		2678345	0					
ANR	2679256	Identifier	i8		2678345	1					
ANR	2679257	BreakStatement	break ;	5728:8:217605:217610	2678345	5	True				
ANR	2679258	Label	case 0xF :	5730:7:217620:217628	2678345	6	True				
ANR	2679259	ExpressionStatement	offset = i8	5731:8:217671:217682	2678345	7	True				
ANR	2679260	AssignmentExpression	offset = i8		2678345	0		=			
ANR	2679261	Identifier	offset		2678345	0					
ANR	2679262	Identifier	i8		2678345	1					
ANR	2679263	ExpressionStatement	writeback = TRUE	5732:8:217692:217708	2678345	8	True				
ANR	2679264	AssignmentExpression	writeback = TRUE		2678345	0		=			
ANR	2679265	Identifier	writeback		2678345	0					
ANR	2679266	Identifier	TRUE		2678345	1					
ANR	2679267	BreakStatement	break ;	5733:8:217718:217723	2678345	9	True				
ANR	2679268	Label	case 0xD :	5735:7:217733:217741	2678345	10	True				
ANR	2679269	ExpressionStatement	offset = - i8	5736:8:217784:217796	2678345	11	True				
ANR	2679270	AssignmentExpression	offset = - i8		2678345	0		=			
ANR	2679271	Identifier	offset		2678345	0					
ANR	2679272	UnaryOperationExpression	- i8		2678345	1					
ANR	2679273	UnaryOperator	-		2678345	0					
ANR	2679274	Identifier	i8		2678345	1					
ANR	2679275	ExpressionStatement	writeback = TRUE	5737:8:217806:217822	2678345	12	True				
ANR	2679276	AssignmentExpression	writeback = TRUE		2678345	0		=			
ANR	2679277	Identifier	writeback		2678345	0					
ANR	2679278	Identifier	TRUE		2678345	1					
ANR	2679279	BreakStatement	break ;	5738:8:217832:217837	2678345	13	True				
ANR	2679280	Label	case 0xB :	5740:7:217847:217855	2678345	14	True				
ANR	2679281	ExpressionStatement	offset = i8	5741:8:217891:217902	2678345	15	True				
ANR	2679282	AssignmentExpression	offset = i8		2678345	0		=			
ANR	2679283	Identifier	offset		2678345	0					
ANR	2679284	Identifier	i8		2678345	1					
ANR	2679285	ExpressionStatement	postind = TRUE	5742:8:217912:217926	2678345	16	True				
ANR	2679286	AssignmentExpression	postind = TRUE		2678345	0		=			
ANR	2679287	Identifier	postind		2678345	0					
ANR	2679288	Identifier	TRUE		2678345	1					
ANR	2679289	BreakStatement	break ;	5743:8:217936:217941	2678345	17	True				
ANR	2679290	Label	case 0x9 :	5745:7:217951:217959	2678345	18	True				
ANR	2679291	ExpressionStatement	offset = - i8	5746:8:217995:218007	2678345	19	True				
ANR	2679292	AssignmentExpression	offset = - i8		2678345	0		=			
ANR	2679293	Identifier	offset		2678345	0					
ANR	2679294	UnaryOperationExpression	- i8		2678345	1					
ANR	2679295	UnaryOperator	-		2678345	0					
ANR	2679296	Identifier	i8		2678345	1					
ANR	2679297	ExpressionStatement	postind = TRUE	5747:8:218017:218031	2678345	20	True				
ANR	2679298	AssignmentExpression	postind = TRUE		2678345	0		=			
ANR	2679299	Identifier	postind		2678345	0					
ANR	2679300	Identifier	TRUE		2678345	1					
ANR	2679301	BreakStatement	break ;	5748:8:218041:218046	2678345	21	True				
ANR	2679302	Label	default :	5750:7:218056:218063	2678345	22	True				
ANR	2679303	Identifier	default		2678345	0					
ANR	2679304	ExpressionStatement	"func ( stream , "", <undefined>]"" )"	5751:8:218073:218104	2678345	23	True				
ANR	2679305	CallExpression	"func ( stream , "", <undefined>]"" )"		2678345	0					
ANR	2679306	Callee	func		2678345	0					
ANR	2679307	Identifier	func		2678345	0					
ANR	2679308	ArgumentList	stream		2678345	1					
ANR	2679309	Argument	stream		2678345	0					
ANR	2679310	Identifier	stream		2678345	0					
ANR	2679311	Argument	""", <undefined>]"""		2678345	1					
ANR	2679312	PrimaryExpression	""", <undefined>]"""		2678345	0					
ANR	2679313	GotoStatement	goto skip ;	5752:8:218114:218123	2678345	24	True				
ANR	2679314	Identifier	skip		2678345	0					
ANR	2679315	IfStatement	if ( postind )		2678345	9					
ANR	2679316	Condition	postind	5756:10:218153:218159	2678345	0	True				
ANR	2679317	Identifier	postind		2678345	0					
ANR	2679318	CompoundStatement		224:19:5474:5474	2678345	1					
ANR	2679319	ExpressionStatement	"func ( stream , ""], %d"" , ( int ) offset )"	5757:7:218171:218206	2678345	0	True				
ANR	2679320	CallExpression	"func ( stream , ""], %d"" , ( int ) offset )"		2678345	0					
ANR	2679321	Callee	func		2678345	0					
ANR	2679322	Identifier	func		2678345	0					
ANR	2679323	ArgumentList	stream		2678345	1					
ANR	2679324	Argument	stream		2678345	0					
ANR	2679325	Identifier	stream		2678345	0					
ANR	2679326	Argument	"""], %d"""		2678345	1					
ANR	2679327	PrimaryExpression	"""], %d"""		2678345	0					
ANR	2679328	Argument	( int ) offset		2678345	2					
ANR	2679329	CastExpression	( int ) offset		2678345	0					
ANR	2679330	CastTarget	int		2678345	0					
ANR	2679331	Identifier	offset		2678345	1					
ANR	2679332	ElseStatement	else		2678345	0					
ANR	2679333	CompoundStatement		226:13:5533:5533	2678345	0					
ANR	2679334	IfStatement	if ( offset )		2678345	0					
ANR	2679335	Condition	offset	5759:11:218234:218239	2678345	0	True				
ANR	2679336	Identifier	offset		2678345	0					
ANR	2679337	CompoundStatement		227:19:5554:5554	2678345	1					
ANR	2679338	ExpressionStatement	"func ( stream , "", %d"" , ( int ) offset )"	5760:8:218252:218286	2678345	0	True				
ANR	2679339	CallExpression	"func ( stream , "", %d"" , ( int ) offset )"		2678345	0					
ANR	2679340	Callee	func		2678345	0					
ANR	2679341	Identifier	func		2678345	0					
ANR	2679342	ArgumentList	stream		2678345	1					
ANR	2679343	Argument	stream		2678345	0					
ANR	2679344	Identifier	stream		2678345	0					
ANR	2679345	Argument	""", %d"""		2678345	1					
ANR	2679346	PrimaryExpression	""", %d"""		2678345	0					
ANR	2679347	Argument	( int ) offset		2678345	2					
ANR	2679348	CastExpression	( int ) offset		2678345	0					
ANR	2679349	CastTarget	int		2678345	0					
ANR	2679350	Identifier	offset		2678345	1					
ANR	2679351	ExpressionStatement	"func ( stream , writeback ? ""]!"" : ""]"" )"	5762:7:218304:218341	2678345	1	True				
ANR	2679352	CallExpression	"func ( stream , writeback ? ""]!"" : ""]"" )"		2678345	0					
ANR	2679353	Callee	func		2678345	0					
ANR	2679354	Identifier	func		2678345	0					
ANR	2679355	ArgumentList	stream		2678345	1					
ANR	2679356	Argument	stream		2678345	0					
ANR	2679357	Identifier	stream		2678345	0					
ANR	2679358	Argument	"writeback ? ""]!"" : ""]"""		2678345	1					
ANR	2679359	ConditionalExpression	"writeback ? ""]!"" : ""]"""		2678345	0					
ANR	2679360	Condition	writeback		2678345	0					
ANR	2679361	Identifier	writeback		2678345	0					
ANR	2679362	PrimaryExpression	"""]!"""		2678345	1					
ANR	2679363	PrimaryExpression	"""]"""		2678345	2					
ANR	2679364	IfStatement	if ( Rn == 15 )		2678345	10					
ANR	2679365	Condition	Rn == 15	5765:10:218362:218369	2678345	0	True				
ANR	2679366	EqualityExpression	Rn == 15		2678345	0		==			
ANR	2679367	Identifier	Rn		2678345	0					
ANR	2679368	PrimaryExpression	15		2678345	1					
ANR	2679369	CompoundStatement		233:20:5684:5684	2678345	1					
ANR	2679370	ExpressionStatement	"func ( stream , "" ; "" )"	5766:7:218381:218401	2678345	0	True				
ANR	2679371	CallExpression	"func ( stream , "" ; "" )"		2678345	0					
ANR	2679372	Callee	func		2678345	0					
ANR	2679373	Identifier	func		2678345	0					
ANR	2679374	ArgumentList	stream		2678345	1					
ANR	2679375	Argument	stream		2678345	0					
ANR	2679376	Identifier	stream		2678345	0					
ANR	2679377	Argument	""" ; """		2678345	1					
ANR	2679378	PrimaryExpression	""" ; """		2678345	0					
ANR	2679379	ExpressionStatement	"info -> print_address_func ( ( ( pc + 4 ) & ~3 ) + offset , info )"	5767:7:218410:218467	2678345	1	True				
ANR	2679380	CallExpression	"info -> print_address_func ( ( ( pc + 4 ) & ~3 ) + offset , info )"		2678345	0					
ANR	2679381	Callee	info -> print_address_func		2678345	0					
ANR	2679382	PtrMemberAccess	info -> print_address_func		2678345	0					
ANR	2679383	Identifier	info		2678345	0					
ANR	2679384	Identifier	print_address_func		2678345	1					
ANR	2679385	ArgumentList	( ( pc + 4 ) & ~3 ) + offset		2678345	1					
ANR	2679386	Argument	( ( pc + 4 ) & ~3 ) + offset		2678345	0					
ANR	2679387	AdditiveExpression	( ( pc + 4 ) & ~3 ) + offset		2678345	0		+			
ANR	2679388	BitAndExpression	( pc + 4 ) & ~3		2678345	0		&			
ANR	2679389	AdditiveExpression	pc + 4		2678345	0		+			
ANR	2679390	Identifier	pc		2678345	0					
ANR	2679391	PrimaryExpression	4		2678345	1					
ANR	2679392	Identifier	~3		2678345	1					
ANR	2679393	Identifier	offset		2678345	1					
ANR	2679394	Argument	info		2678345	1					
ANR	2679395	Identifier	info		2678345	0					
ANR	2679396	Label	skip :	5770:5:218489:218493	2678345	35	True				
ANR	2679397	Identifier	skip		2678345	0					
ANR	2679398	BreakStatement	break ;	5771:6:218501:218506	2678345	36	True				
ANR	2679399	Label	case 'A' :	5773:5:218514:218522	2678345	37	True				
ANR	2679400	CompoundStatement		245:6:5980:6019	2678345	38					
ANR	2679401	IdentifierDeclStatement	unsigned int U = ! NEGATIVE_BIT_SET ;	5774:6:218532:218566	2678345	0	True				
ANR	2679402	IdentifierDecl	U = ! NEGATIVE_BIT_SET		2678345	0					
ANR	2679403	IdentifierDeclType	unsigned int		2678345	0					
ANR	2679404	Identifier	U		2678345	1					
ANR	2679405	AssignmentExpression	U = ! NEGATIVE_BIT_SET		2678345	2		=			
ANR	2679406	Identifier	U		2678345	0					
ANR	2679407	UnaryOperationExpression	! NEGATIVE_BIT_SET		2678345	1					
ANR	2679408	UnaryOperator	!		2678345	0					
ANR	2679409	Identifier	NEGATIVE_BIT_SET		2678345	1					
ANR	2679410	IdentifierDeclStatement	unsigned int W = WRITEBACK_BIT_SET ;	5775:6:218574:218608	2678345	1	True				
ANR	2679411	IdentifierDecl	W = WRITEBACK_BIT_SET		2678345	0					
ANR	2679412	IdentifierDeclType	unsigned int		2678345	0					
ANR	2679413	Identifier	W		2678345	1					
ANR	2679414	AssignmentExpression	W = WRITEBACK_BIT_SET		2678345	2		=			
ANR	2679415	Identifier	WRITEBACK_BIT_SET		2678345	0					
ANR	2679416	Identifier	WRITEBACK_BIT_SET		2678345	1					
ANR	2679417	IdentifierDeclStatement	unsigned int Rn = ( given & 0x000f0000 ) >> 16 ;	5776:6:218616:218660	2678345	2	True				
ANR	2679418	IdentifierDecl	Rn = ( given & 0x000f0000 ) >> 16		2678345	0					
ANR	2679419	IdentifierDeclType	unsigned int		2678345	0					
ANR	2679420	Identifier	Rn		2678345	1					
ANR	2679421	AssignmentExpression	Rn = ( given & 0x000f0000 ) >> 16		2678345	2		=			
ANR	2679422	Identifier	Rn		2678345	0					
ANR	2679423	ShiftExpression	( given & 0x000f0000 ) >> 16		2678345	1		>>			
ANR	2679424	BitAndExpression	given & 0x000f0000		2678345	0		&			
ANR	2679425	Identifier	given		2678345	0					
ANR	2679426	PrimaryExpression	0x000f0000		2678345	1					
ANR	2679427	PrimaryExpression	16		2678345	1					
ANR	2679428	IdentifierDeclStatement	unsigned int off = ( given & 0x000000ff ) ;	5777:6:218668:218707	2678345	3	True				
ANR	2679429	IdentifierDecl	off = ( given & 0x000000ff )		2678345	0					
ANR	2679430	IdentifierDeclType	unsigned int		2678345	0					
ANR	2679431	Identifier	off		2678345	1					
ANR	2679432	AssignmentExpression	off = ( given & 0x000000ff )		2678345	2		=			
ANR	2679433	Identifier	off		2678345	0					
ANR	2679434	BitAndExpression	given & 0x000000ff		2678345	1		&			
ANR	2679435	Identifier	given		2678345	0					
ANR	2679436	PrimaryExpression	0x000000ff		2678345	1					
ANR	2679437	ExpressionStatement	"func ( stream , ""[%s"" , arm_regnames [ Rn ] )"	5779:6:218716:218754	2678345	4	True				
ANR	2679438	CallExpression	"func ( stream , ""[%s"" , arm_regnames [ Rn ] )"		2678345	0					
ANR	2679439	Callee	func		2678345	0					
ANR	2679440	Identifier	func		2678345	0					
ANR	2679441	ArgumentList	stream		2678345	1					
ANR	2679442	Argument	stream		2678345	0					
ANR	2679443	Identifier	stream		2678345	0					
ANR	2679444	Argument	"""[%s"""		2678345	1					
ANR	2679445	PrimaryExpression	"""[%s"""		2678345	0					
ANR	2679446	Argument	arm_regnames [ Rn ]		2678345	2					
ANR	2679447	ArrayIndexing	arm_regnames [ Rn ]		2678345	0					
ANR	2679448	Identifier	arm_regnames		2678345	0					
ANR	2679449	Identifier	Rn		2678345	1					
ANR	2679450	IfStatement	if ( PRE_BIT_SET )		2678345	5					
ANR	2679451	Condition	PRE_BIT_SET	5781:10:218767:218777	2678345	0	True				
ANR	2679452	Identifier	PRE_BIT_SET		2678345	0					
ANR	2679453	CompoundStatement		249:23:6092:6092	2678345	1					
ANR	2679454	IfStatement	if ( off || ! U )		2678345	0					
ANR	2679455	Condition	off || ! U	5782:11:218793:218801	2678345	0	True				
ANR	2679456	OrExpression	off || ! U		2678345	0		||			
ANR	2679457	Identifier	off		2678345	0					
ANR	2679458	UnaryOperationExpression	! U		2678345	1					
ANR	2679459	UnaryOperator	!		2678345	0					
ANR	2679460	Identifier	U		2678345	1					
ANR	2679461	CompoundStatement		250:22:6116:6116	2678345	1					
ANR	2679462	ExpressionStatement	"func ( stream , "", %c%u"" , U ? '+' : '-' , off * 4 )"	5783:8:218814:218861	2678345	0	True				
ANR	2679463	CallExpression	"func ( stream , "", %c%u"" , U ? '+' : '-' , off * 4 )"		2678345	0					
ANR	2679464	Callee	func		2678345	0					
ANR	2679465	Identifier	func		2678345	0					
ANR	2679466	ArgumentList	stream		2678345	1					
ANR	2679467	Argument	stream		2678345	0					
ANR	2679468	Identifier	stream		2678345	0					
ANR	2679469	Argument	""", %c%u"""		2678345	1					
ANR	2679470	PrimaryExpression	""", %c%u"""		2678345	0					
ANR	2679471	Argument	U ? '+' : '-'		2678345	2					
ANR	2679472	ConditionalExpression	U ? '+' : '-'		2678345	0					
ANR	2679473	Condition	U		2678345	0					
ANR	2679474	Identifier	U		2678345	0					
ANR	2679475	PrimaryExpression	'+'		2678345	1					
ANR	2679476	PrimaryExpression	'-'		2678345	2					
ANR	2679477	Argument	off * 4		2678345	3					
ANR	2679478	MultiplicativeExpression	off * 4		2678345	0		*			
ANR	2679479	Identifier	off		2678345	0					
ANR	2679480	PrimaryExpression	4		2678345	1					
ANR	2679481	ExpressionStatement	"func ( stream , ""]"" )"	5786:7:218929:218947	2678345	1	True				
ANR	2679482	CallExpression	"func ( stream , ""]"" )"		2678345	0					
ANR	2679483	Callee	func		2678345	0					
ANR	2679484	Identifier	func		2678345	0					
ANR	2679485	ArgumentList	stream		2678345	1					
ANR	2679486	Argument	stream		2678345	0					
ANR	2679487	Identifier	stream		2678345	0					
ANR	2679488	Argument	"""]"""		2678345	1					
ANR	2679489	PrimaryExpression	"""]"""		2678345	0					
ANR	2679490	IfStatement	if ( W )		2678345	2					
ANR	2679491	Condition	W	5787:11:218960:218960	2678345	0	True				
ANR	2679492	Identifier	W		2678345	0					
ANR	2679493	CompoundStatement		255:14:6275:6275	2678345	1					
ANR	2679494	ExpressionStatement	"func ( stream , ""!"" )"	5788:8:218973:218991	2678345	0	True				
ANR	2679495	CallExpression	"func ( stream , ""!"" )"		2678345	0					
ANR	2679496	Callee	func		2678345	0					
ANR	2679497	Identifier	func		2678345	0					
ANR	2679498	ArgumentList	stream		2678345	1					
ANR	2679499	Argument	stream		2678345	0					
ANR	2679500	Identifier	stream		2678345	0					
ANR	2679501	Argument	"""!"""		2678345	1					
ANR	2679502	PrimaryExpression	"""!"""		2678345	0					
ANR	2679503	ElseStatement	else		2678345	0					
ANR	2679504	CompoundStatement		258:13:6327:6327	2678345	0					
ANR	2679505	ExpressionStatement	"func ( stream , ""], "" )"	5791:7:219024:219044	2678345	0	True				
ANR	2679506	CallExpression	"func ( stream , ""], "" )"		2678345	0					
ANR	2679507	Callee	func		2678345	0					
ANR	2679508	Identifier	func		2678345	0					
ANR	2679509	ArgumentList	stream		2678345	1					
ANR	2679510	Argument	stream		2678345	0					
ANR	2679511	Identifier	stream		2678345	0					
ANR	2679512	Argument	"""], """		2678345	1					
ANR	2679513	PrimaryExpression	"""], """		2678345	0					
ANR	2679514	IfStatement	if ( W )		2678345	1					
ANR	2679515	Condition	W	5792:11:219057:219057	2678345	0	True				
ANR	2679516	Identifier	W		2678345	0					
ANR	2679517	CompoundStatement		260:14:6372:6372	2678345	1					
ANR	2679518	ExpressionStatement	"func ( stream , ""%c%u"" , U ? '+' : '-' , off * 4 )"	5793:8:219070:219115	2678345	0	True				
ANR	2679519	CallExpression	"func ( stream , ""%c%u"" , U ? '+' : '-' , off * 4 )"		2678345	0					
ANR	2679520	Callee	func		2678345	0					
ANR	2679521	Identifier	func		2678345	0					
ANR	2679522	ArgumentList	stream		2678345	1					
ANR	2679523	Argument	stream		2678345	0					
ANR	2679524	Identifier	stream		2678345	0					
ANR	2679525	Argument	"""%c%u"""		2678345	1					
ANR	2679526	PrimaryExpression	"""%c%u"""		2678345	0					
ANR	2679527	Argument	U ? '+' : '-'		2678345	2					
ANR	2679528	ConditionalExpression	U ? '+' : '-'		2678345	0					
ANR	2679529	Condition	U		2678345	0					
ANR	2679530	Identifier	U		2678345	0					
ANR	2679531	PrimaryExpression	'+'		2678345	1					
ANR	2679532	PrimaryExpression	'-'		2678345	2					
ANR	2679533	Argument	off * 4		2678345	3					
ANR	2679534	MultiplicativeExpression	off * 4		2678345	0		*			
ANR	2679535	Identifier	off		2678345	0					
ANR	2679536	PrimaryExpression	4		2678345	1					
ANR	2679537	ElseStatement	else		2678345	0					
ANR	2679538	CompoundStatement		263:14:6493:6493	2678345	0					
ANR	2679539	ExpressionStatement	"func ( stream , ""{%u}"" , off )"	5796:8:219191:219217	2678345	0	True				
ANR	2679540	CallExpression	"func ( stream , ""{%u}"" , off )"		2678345	0					
ANR	2679541	Callee	func		2678345	0					
ANR	2679542	Identifier	func		2678345	0					
ANR	2679543	ArgumentList	stream		2678345	1					
ANR	2679544	Argument	stream		2678345	0					
ANR	2679545	Identifier	stream		2678345	0					
ANR	2679546	Argument	"""{%u}"""		2678345	1					
ANR	2679547	PrimaryExpression	"""{%u}"""		2678345	0					
ANR	2679548	Argument	off		2678345	2					
ANR	2679549	Identifier	off		2678345	0					
ANR	2679550	BreakStatement	break ;	5800:7:219278:219283	2678345	39	True				
ANR	2679551	Label	case 'w' :	5802:5:219291:219299	2678345	40	True				
ANR	2679552	CompoundStatement		272:6:6675:6721	2678345	41					
ANR	2679553	IdentifierDeclStatement	unsigned int Sbit = ( given & 0x01000000 ) >> 24 ;	5803:6:219309:219355	2678345	0	True				
ANR	2679554	IdentifierDecl	Sbit = ( given & 0x01000000 ) >> 24		2678345	0					
ANR	2679555	IdentifierDeclType	unsigned int		2678345	0					
ANR	2679556	Identifier	Sbit		2678345	1					
ANR	2679557	AssignmentExpression	Sbit = ( given & 0x01000000 ) >> 24		2678345	2		=			
ANR	2679558	Identifier	Sbit		2678345	0					
ANR	2679559	ShiftExpression	( given & 0x01000000 ) >> 24		2678345	1		>>			
ANR	2679560	BitAndExpression	given & 0x01000000		2678345	0		&			
ANR	2679561	Identifier	given		2678345	0					
ANR	2679562	PrimaryExpression	0x01000000		2678345	1					
ANR	2679563	PrimaryExpression	24		2678345	1					
ANR	2679564	IdentifierDeclStatement	unsigned int type = ( given & 0x00600000 ) >> 21 ;	5804:6:219363:219409	2678345	1	True				
ANR	2679565	IdentifierDecl	type = ( given & 0x00600000 ) >> 21		2678345	0					
ANR	2679566	IdentifierDeclType	unsigned int		2678345	0					
ANR	2679567	Identifier	type		2678345	1					
ANR	2679568	AssignmentExpression	type = ( given & 0x00600000 ) >> 21		2678345	2		=			
ANR	2679569	Identifier	type		2678345	0					
ANR	2679570	ShiftExpression	( given & 0x00600000 ) >> 21		2678345	1		>>			
ANR	2679571	BitAndExpression	given & 0x00600000		2678345	0		&			
ANR	2679572	Identifier	given		2678345	0					
ANR	2679573	PrimaryExpression	0x00600000		2678345	1					
ANR	2679574	PrimaryExpression	21		2678345	1					
ANR	2679575	SwitchStatement	switch ( type )		2678345	2					
ANR	2679576	Condition	type	5806:14:219426:219429	2678345	0	True				
ANR	2679577	Identifier	type		2678345	0					
ANR	2679578	CompoundStatement		274:20:6744:6744	2678345	1					
ANR	2679579	Label	case 0 :	5807:6:219440:219446	2678345	0	True				
ANR	2679580	ExpressionStatement	"func ( stream , Sbit ? ""sb"" : ""b"" )"	5807:14:219448:219480	2678345	1	True				
ANR	2679581	CallExpression	"func ( stream , Sbit ? ""sb"" : ""b"" )"		2678345	0					
ANR	2679582	Callee	func		2678345	0					
ANR	2679583	Identifier	func		2678345	0					
ANR	2679584	ArgumentList	stream		2678345	1					
ANR	2679585	Argument	stream		2678345	0					
ANR	2679586	Identifier	stream		2678345	0					
ANR	2679587	Argument	"Sbit ? ""sb"" : ""b"""		2678345	1					
ANR	2679588	ConditionalExpression	"Sbit ? ""sb"" : ""b"""		2678345	0					
ANR	2679589	Condition	Sbit		2678345	0					
ANR	2679590	Identifier	Sbit		2678345	0					
ANR	2679591	PrimaryExpression	"""sb"""		2678345	1					
ANR	2679592	PrimaryExpression	"""b"""		2678345	2					
ANR	2679593	BreakStatement	break ;	5807:48:219482:219487	2678345	2	True				
ANR	2679594	Label	case 1 :	5808:6:219495:219501	2678345	3	True				
ANR	2679595	ExpressionStatement	"func ( stream , Sbit ? ""sh"" : ""h"" )"	5808:14:219503:219535	2678345	4	True				
ANR	2679596	CallExpression	"func ( stream , Sbit ? ""sh"" : ""h"" )"		2678345	0					
ANR	2679597	Callee	func		2678345	0					
ANR	2679598	Identifier	func		2678345	0					
ANR	2679599	ArgumentList	stream		2678345	1					
ANR	2679600	Argument	stream		2678345	0					
ANR	2679601	Identifier	stream		2678345	0					
ANR	2679602	Argument	"Sbit ? ""sh"" : ""h"""		2678345	1					
ANR	2679603	ConditionalExpression	"Sbit ? ""sh"" : ""h"""		2678345	0					
ANR	2679604	Condition	Sbit		2678345	0					
ANR	2679605	Identifier	Sbit		2678345	0					
ANR	2679606	PrimaryExpression	"""sh"""		2678345	1					
ANR	2679607	PrimaryExpression	"""h"""		2678345	2					
ANR	2679608	BreakStatement	break ;	5808:48:219537:219542	2678345	5	True				
ANR	2679609	Label	case 2 :	5809:6:219550:219556	2678345	6	True				
ANR	2679610	IfStatement	if ( Sbit )		2678345	7					
ANR	2679611	Condition	Sbit	5810:11:219569:219572	2678345	0	True				
ANR	2679612	Identifier	Sbit		2678345	0					
ANR	2679613	CompoundStatement		278:17:6887:6887	2678345	1					
ANR	2679614	ExpressionStatement	"func ( stream , ""??"" )"	5811:8:219585:219604	2678345	0	True				
ANR	2679615	CallExpression	"func ( stream , ""??"" )"		2678345	0					
ANR	2679616	Callee	func		2678345	0					
ANR	2679617	Identifier	func		2678345	0					
ANR	2679618	ArgumentList	stream		2678345	1					
ANR	2679619	Argument	stream		2678345	0					
ANR	2679620	Identifier	stream		2678345	0					
ANR	2679621	Argument	"""??"""		2678345	1					
ANR	2679622	PrimaryExpression	"""??"""		2678345	0					
ANR	2679623	BreakStatement	break ;	5813:7:219622:219627	2678345	8	True				
ANR	2679624	Label	case 3 :	5814:6:219635:219641	2678345	9	True				
ANR	2679625	ExpressionStatement	"func ( stream , ""??"" )"	5815:7:219650:219669	2678345	10	True				
ANR	2679626	CallExpression	"func ( stream , ""??"" )"		2678345	0					
ANR	2679627	Callee	func		2678345	0					
ANR	2679628	Identifier	func		2678345	0					
ANR	2679629	ArgumentList	stream		2678345	1					
ANR	2679630	Argument	stream		2678345	0					
ANR	2679631	Identifier	stream		2678345	0					
ANR	2679632	Argument	"""??"""		2678345	1					
ANR	2679633	PrimaryExpression	"""??"""		2678345	0					
ANR	2679634	BreakStatement	break ;	5816:7:219678:219683	2678345	11	True				
ANR	2679635	BreakStatement	break ;	5818:7:219700:219705	2678345	42	True				
ANR	2679636	Label	case 'm' :	5820:5:219713:219721	2678345	43	True				
ANR	2679637	CompoundStatement		290:6:7066:7073	2678345	44					
ANR	2679638	IdentifierDeclStatement	int started = 0 ;	5821:6:219731:219746	2678345	0	True				
ANR	2679639	IdentifierDecl	started = 0		2678345	0					
ANR	2679640	IdentifierDeclType	int		2678345	0					
ANR	2679641	Identifier	started		2678345	1					
ANR	2679642	AssignmentExpression	started = 0		2678345	2		=			
ANR	2679643	Identifier	started		2678345	0					
ANR	2679644	PrimaryExpression	0		2678345	1					
ANR	2679645	IdentifierDeclStatement	int reg ;	5822:6:219754:219761	2678345	1	True				
ANR	2679646	IdentifierDecl	reg		2678345	0					
ANR	2679647	IdentifierDeclType	int		2678345	0					
ANR	2679648	Identifier	reg		2678345	1					
ANR	2679649	ExpressionStatement	"func ( stream , ""{"" )"	5824:6:219770:219788	2678345	2	True				
ANR	2679650	CallExpression	"func ( stream , ""{"" )"		2678345	0					
ANR	2679651	Callee	func		2678345	0					
ANR	2679652	Identifier	func		2678345	0					
ANR	2679653	ArgumentList	stream		2678345	1					
ANR	2679654	Argument	stream		2678345	0					
ANR	2679655	Identifier	stream		2678345	0					
ANR	2679656	Argument	"""{"""		2678345	1					
ANR	2679657	PrimaryExpression	"""{"""		2678345	0					
ANR	2679658	ForStatement	for ( reg = 0 ; reg < 16 ; reg ++ )		2678345	3					
ANR	2679659	ForInit	reg = 0 ;	5825:11:219801:219808	2678345	0	True				
ANR	2679660	AssignmentExpression	reg = 0		2678345	0		=			
ANR	2679661	Identifier	reg		2678345	0					
ANR	2679662	PrimaryExpression	0		2678345	1					
ANR	2679663	Condition	reg < 16	5825:20:219810:219817	2678345	1	True				
ANR	2679664	RelationalExpression	reg < 16		2678345	0		<			
ANR	2679665	Identifier	reg		2678345	0					
ANR	2679666	PrimaryExpression	16		2678345	1					
ANR	2679667	PostIncDecOperationExpression	reg ++	5825:30:219820:219824	2678345	2	True				
ANR	2679668	Identifier	reg		2678345	0					
ANR	2679669	IncDec	++		2678345	1					
ANR	2679670	CompoundStatement		293:37:7139:7139	2678345	3					
ANR	2679671	IfStatement	if ( ( given & ( 1 << reg ) ) != 0 )		2678345	0					
ANR	2679672	Condition	( given & ( 1 << reg ) ) != 0	5826:11:219840:219864	2678345	0	True				
ANR	2679673	EqualityExpression	( given & ( 1 << reg ) ) != 0		2678345	0		!=			
ANR	2679674	BitAndExpression	given & ( 1 << reg )		2678345	0		&			
ANR	2679675	Identifier	given		2678345	0					
ANR	2679676	ShiftExpression	1 << reg		2678345	1		<<			
ANR	2679677	PrimaryExpression	1		2678345	0					
ANR	2679678	Identifier	reg		2678345	1					
ANR	2679679	PrimaryExpression	0		2678345	1					
ANR	2679680	CompoundStatement		294:38:7179:7179	2678345	1					
ANR	2679681	IfStatement	if ( started )		2678345	0					
ANR	2679682	Condition	started	5827:12:219881:219887	2678345	0	True				
ANR	2679683	Identifier	started		2678345	0					
ANR	2679684	CompoundStatement		295:21:7202:7202	2678345	1					
ANR	2679685	ExpressionStatement	"func ( stream , "", "" )"	5828:9:219901:219920	2678345	0	True				
ANR	2679686	CallExpression	"func ( stream , "", "" )"		2678345	0					
ANR	2679687	Callee	func		2678345	0					
ANR	2679688	Identifier	func		2678345	0					
ANR	2679689	ArgumentList	stream		2678345	1					
ANR	2679690	Argument	stream		2678345	0					
ANR	2679691	Identifier	stream		2678345	0					
ANR	2679692	Argument	""", """		2678345	1					
ANR	2679693	PrimaryExpression	""", """		2678345	0					
ANR	2679694	ExpressionStatement	started = 1	5830:8:219940:219951	2678345	1	True				
ANR	2679695	AssignmentExpression	started = 1		2678345	0		=			
ANR	2679696	Identifier	started		2678345	0					
ANR	2679697	PrimaryExpression	1		2678345	1					
ANR	2679698	ExpressionStatement	"func ( stream , ""%s"" , arm_regnames [ reg ] )"	5831:8:219961:219999	2678345	2	True				
ANR	2679699	CallExpression	"func ( stream , ""%s"" , arm_regnames [ reg ] )"		2678345	0					
ANR	2679700	Callee	func		2678345	0					
ANR	2679701	Identifier	func		2678345	0					
ANR	2679702	ArgumentList	stream		2678345	1					
ANR	2679703	Argument	stream		2678345	0					
ANR	2679704	Identifier	stream		2678345	0					
ANR	2679705	Argument	"""%s"""		2678345	1					
ANR	2679706	PrimaryExpression	"""%s"""		2678345	0					
ANR	2679707	Argument	arm_regnames [ reg ]		2678345	2					
ANR	2679708	ArrayIndexing	arm_regnames [ reg ]		2678345	0					
ANR	2679709	Identifier	arm_regnames		2678345	0					
ANR	2679710	Identifier	reg		2678345	1					
ANR	2679711	ExpressionStatement	"func ( stream , ""}"" )"	5834:6:220024:220042	2678345	4	True				
ANR	2679712	CallExpression	"func ( stream , ""}"" )"		2678345	0					
ANR	2679713	Callee	func		2678345	0					
ANR	2679714	Identifier	func		2678345	0					
ANR	2679715	ArgumentList	stream		2678345	1					
ANR	2679716	Argument	stream		2678345	0					
ANR	2679717	Identifier	stream		2678345	0					
ANR	2679718	Argument	"""}"""		2678345	1					
ANR	2679719	PrimaryExpression	"""}"""		2678345	0					
ANR	2679720	BreakStatement	break ;	5835:7:220051:220056	2678345	45	True				
ANR	2679721	Label	case 'E' :	5837:5:220064:220072	2678345	46	True				
ANR	2679722	CompoundStatement		307:6:7441:7461	2678345	47					
ANR	2679723	IdentifierDeclStatement	unsigned int msb = ( given & 0x0000001f ) ;	5838:6:220082:220121	2678345	0	True				
ANR	2679724	IdentifierDecl	msb = ( given & 0x0000001f )		2678345	0					
ANR	2679725	IdentifierDeclType	unsigned int		2678345	0					
ANR	2679726	Identifier	msb		2678345	1					
ANR	2679727	AssignmentExpression	msb = ( given & 0x0000001f )		2678345	2		=			
ANR	2679728	Identifier	msb		2678345	0					
ANR	2679729	BitAndExpression	given & 0x0000001f		2678345	1		&			
ANR	2679730	Identifier	given		2678345	0					
ANR	2679731	PrimaryExpression	0x0000001f		2678345	1					
ANR	2679732	IdentifierDeclStatement	unsigned int lsb = 0 ;	5839:6:220129:220149	2678345	1	True				
ANR	2679733	IdentifierDecl	lsb = 0		2678345	0					
ANR	2679734	IdentifierDeclType	unsigned int		2678345	0					
ANR	2679735	Identifier	lsb		2678345	1					
ANR	2679736	AssignmentExpression	lsb = 0		2678345	2		=			
ANR	2679737	Identifier	lsb		2678345	0					
ANR	2679738	PrimaryExpression	0		2678345	1					
ANR	2679739	ExpressionStatement	lsb |= ( given & 0x000000c0u ) >> 6	5841:6:220158:220191	2678345	2	True				
ANR	2679740	AssignmentExpression	lsb |= ( given & 0x000000c0u ) >> 6		2678345	0		|=			
ANR	2679741	Identifier	lsb		2678345	0					
ANR	2679742	ShiftExpression	( given & 0x000000c0u ) >> 6		2678345	1		>>			
ANR	2679743	BitAndExpression	given & 0x000000c0u		2678345	0		&			
ANR	2679744	Identifier	given		2678345	0					
ANR	2679745	PrimaryExpression	0x000000c0u		2678345	1					
ANR	2679746	PrimaryExpression	6		2678345	1					
ANR	2679747	ExpressionStatement	lsb |= ( given & 0x00007000u ) >> 10	5842:6:220199:220233	2678345	3	True				
ANR	2679748	AssignmentExpression	lsb |= ( given & 0x00007000u ) >> 10		2678345	0		|=			
ANR	2679749	Identifier	lsb		2678345	0					
ANR	2679750	ShiftExpression	( given & 0x00007000u ) >> 10		2678345	1		>>			
ANR	2679751	BitAndExpression	given & 0x00007000u		2678345	0		&			
ANR	2679752	Identifier	given		2678345	0					
ANR	2679753	PrimaryExpression	0x00007000u		2678345	1					
ANR	2679754	PrimaryExpression	10		2678345	1					
ANR	2679755	ExpressionStatement	"func ( stream , ""%u, %u"" , lsb , msb - lsb + 1 )"	5843:6:220241:220284	2678345	4	True				
ANR	2679756	CallExpression	"func ( stream , ""%u, %u"" , lsb , msb - lsb + 1 )"		2678345	0					
ANR	2679757	Callee	func		2678345	0					
ANR	2679758	Identifier	func		2678345	0					
ANR	2679759	ArgumentList	stream		2678345	1					
ANR	2679760	Argument	stream		2678345	0					
ANR	2679761	Identifier	stream		2678345	0					
ANR	2679762	Argument	"""%u, %u"""		2678345	1					
ANR	2679763	PrimaryExpression	"""%u, %u"""		2678345	0					
ANR	2679764	Argument	lsb		2678345	2					
ANR	2679765	Identifier	lsb		2678345	0					
ANR	2679766	Argument	msb - lsb + 1		2678345	3					
ANR	2679767	AdditiveExpression	msb - lsb + 1		2678345	0		-			
ANR	2679768	Identifier	msb		2678345	0					
ANR	2679769	AdditiveExpression	lsb + 1		2678345	1		+			
ANR	2679770	Identifier	lsb		2678345	0					
ANR	2679771	PrimaryExpression	1		2678345	1					
ANR	2679772	BreakStatement	break ;	5844:7:220293:220298	2678345	48	True				
ANR	2679773	Label	case 'F' :	5846:5:220306:220314	2678345	49	True				
ANR	2679774	CompoundStatement		316:6:7689:7709	2678345	50					
ANR	2679775	IdentifierDeclStatement	unsigned int width = ( given & 0x0000001f ) + 1 ;	5847:6:220324:220369	2678345	0	True				
ANR	2679776	IdentifierDecl	width = ( given & 0x0000001f ) + 1		2678345	0					
ANR	2679777	IdentifierDeclType	unsigned int		2678345	0					
ANR	2679778	Identifier	width		2678345	1					
ANR	2679779	AssignmentExpression	width = ( given & 0x0000001f ) + 1		2678345	2		=			
ANR	2679780	Identifier	width		2678345	0					
ANR	2679781	AdditiveExpression	( given & 0x0000001f ) + 1		2678345	1		+			
ANR	2679782	BitAndExpression	given & 0x0000001f		2678345	0		&			
ANR	2679783	Identifier	given		2678345	0					
ANR	2679784	PrimaryExpression	0x0000001f		2678345	1					
ANR	2679785	PrimaryExpression	1		2678345	1					
ANR	2679786	IdentifierDeclStatement	unsigned int lsb = 0 ;	5848:6:220377:220397	2678345	1	True				
ANR	2679787	IdentifierDecl	lsb = 0		2678345	0					
ANR	2679788	IdentifierDeclType	unsigned int		2678345	0					
ANR	2679789	Identifier	lsb		2678345	1					
ANR	2679790	AssignmentExpression	lsb = 0		2678345	2		=			
ANR	2679791	Identifier	lsb		2678345	0					
ANR	2679792	PrimaryExpression	0		2678345	1					
ANR	2679793	ExpressionStatement	lsb |= ( given & 0x000000c0u ) >> 6	5850:6:220406:220439	2678345	2	True				
ANR	2679794	AssignmentExpression	lsb |= ( given & 0x000000c0u ) >> 6		2678345	0		|=			
ANR	2679795	Identifier	lsb		2678345	0					
ANR	2679796	ShiftExpression	( given & 0x000000c0u ) >> 6		2678345	1		>>			
ANR	2679797	BitAndExpression	given & 0x000000c0u		2678345	0		&			
ANR	2679798	Identifier	given		2678345	0					
ANR	2679799	PrimaryExpression	0x000000c0u		2678345	1					
ANR	2679800	PrimaryExpression	6		2678345	1					
ANR	2679801	ExpressionStatement	lsb |= ( given & 0x00007000u ) >> 10	5851:6:220447:220481	2678345	3	True				
ANR	2679802	AssignmentExpression	lsb |= ( given & 0x00007000u ) >> 10		2678345	0		|=			
ANR	2679803	Identifier	lsb		2678345	0					
ANR	2679804	ShiftExpression	( given & 0x00007000u ) >> 10		2678345	1		>>			
ANR	2679805	BitAndExpression	given & 0x00007000u		2678345	0		&			
ANR	2679806	Identifier	given		2678345	0					
ANR	2679807	PrimaryExpression	0x00007000u		2678345	1					
ANR	2679808	PrimaryExpression	10		2678345	1					
ANR	2679809	ExpressionStatement	"func ( stream , ""%u, %u"" , lsb , width )"	5852:6:220489:220524	2678345	4	True				
ANR	2679810	CallExpression	"func ( stream , ""%u, %u"" , lsb , width )"		2678345	0					
ANR	2679811	Callee	func		2678345	0					
ANR	2679812	Identifier	func		2678345	0					
ANR	2679813	ArgumentList	stream		2678345	1					
ANR	2679814	Argument	stream		2678345	0					
ANR	2679815	Identifier	stream		2678345	0					
ANR	2679816	Argument	"""%u, %u"""		2678345	1					
ANR	2679817	PrimaryExpression	"""%u, %u"""		2678345	0					
ANR	2679818	Argument	lsb		2678345	2					
ANR	2679819	Identifier	lsb		2678345	0					
ANR	2679820	Argument	width		2678345	3					
ANR	2679821	Identifier	width		2678345	0					
ANR	2679822	BreakStatement	break ;	5853:7:220533:220538	2678345	51	True				
ANR	2679823	Label	case 'b' :	5855:5:220546:220554	2678345	52	True				
ANR	2679824	CompoundStatement		327:6:8034:8052	2678345	53					
ANR	2679825	IdentifierDeclStatement	unsigned int S = ( given & 0x04000000u ) >> 26 ;	5856:6:220564:220608	2678345	0	True				
ANR	2679826	IdentifierDecl	S = ( given & 0x04000000u ) >> 26		2678345	0					
ANR	2679827	IdentifierDeclType	unsigned int		2678345	0					
ANR	2679828	Identifier	S		2678345	1					
ANR	2679829	AssignmentExpression	S = ( given & 0x04000000u ) >> 26		2678345	2		=			
ANR	2679830	Identifier	S		2678345	0					
ANR	2679831	ShiftExpression	( given & 0x04000000u ) >> 26		2678345	1		>>			
ANR	2679832	BitAndExpression	given & 0x04000000u		2678345	0		&			
ANR	2679833	Identifier	given		2678345	0					
ANR	2679834	PrimaryExpression	0x04000000u		2678345	1					
ANR	2679835	PrimaryExpression	26		2678345	1					
ANR	2679836	IdentifierDeclStatement	unsigned int J1 = ( given & 0x00002000u ) >> 13 ;	5857:6:220616:220661	2678345	1	True				
ANR	2679837	IdentifierDecl	J1 = ( given & 0x00002000u ) >> 13		2678345	0					
ANR	2679838	IdentifierDeclType	unsigned int		2678345	0					
ANR	2679839	Identifier	J1		2678345	1					
ANR	2679840	AssignmentExpression	J1 = ( given & 0x00002000u ) >> 13		2678345	2		=			
ANR	2679841	Identifier	J1		2678345	0					
ANR	2679842	ShiftExpression	( given & 0x00002000u ) >> 13		2678345	1		>>			
ANR	2679843	BitAndExpression	given & 0x00002000u		2678345	0		&			
ANR	2679844	Identifier	given		2678345	0					
ANR	2679845	PrimaryExpression	0x00002000u		2678345	1					
ANR	2679846	PrimaryExpression	13		2678345	1					
ANR	2679847	IdentifierDeclStatement	unsigned int J2 = ( given & 0x00000800u ) >> 11 ;	5858:6:220669:220714	2678345	2	True				
ANR	2679848	IdentifierDecl	J2 = ( given & 0x00000800u ) >> 11		2678345	0					
ANR	2679849	IdentifierDeclType	unsigned int		2678345	0					
ANR	2679850	Identifier	J2		2678345	1					
ANR	2679851	AssignmentExpression	J2 = ( given & 0x00000800u ) >> 11		2678345	2		=			
ANR	2679852	Identifier	J2		2678345	0					
ANR	2679853	ShiftExpression	( given & 0x00000800u ) >> 11		2678345	1		>>			
ANR	2679854	BitAndExpression	given & 0x00000800u		2678345	0		&			
ANR	2679855	Identifier	given		2678345	0					
ANR	2679856	PrimaryExpression	0x00000800u		2678345	1					
ANR	2679857	PrimaryExpression	11		2678345	1					
ANR	2679858	IdentifierDeclStatement	bfd_vma offset = 0 ;	5859:6:220722:220740	2678345	3	True				
ANR	2679859	IdentifierDecl	offset = 0		2678345	0					
ANR	2679860	IdentifierDeclType	bfd_vma		2678345	0					
ANR	2679861	Identifier	offset		2678345	1					
ANR	2679862	AssignmentExpression	offset = 0		2678345	2		=			
ANR	2679863	Identifier	offset		2678345	0					
ANR	2679864	PrimaryExpression	0		2678345	1					
ANR	2679865	ExpressionStatement	offset |= ! S << 20	5861:6:220749:220767	2678345	4	True				
ANR	2679866	AssignmentExpression	offset |= ! S << 20		2678345	0		|=			
ANR	2679867	Identifier	offset		2678345	0					
ANR	2679868	ShiftExpression	! S << 20		2678345	1		<<			
ANR	2679869	UnaryOperationExpression	! S		2678345	0					
ANR	2679870	UnaryOperator	!		2678345	0					
ANR	2679871	Identifier	S		2678345	1					
ANR	2679872	PrimaryExpression	20		2678345	1					
ANR	2679873	ExpressionStatement	offset |= J2 << 19	5862:6:220775:220793	2678345	5	True				
ANR	2679874	AssignmentExpression	offset |= J2 << 19		2678345	0		|=			
ANR	2679875	Identifier	offset		2678345	0					
ANR	2679876	ShiftExpression	J2 << 19		2678345	1		<<			
ANR	2679877	Identifier	J2		2678345	0					
ANR	2679878	PrimaryExpression	19		2678345	1					
ANR	2679879	ExpressionStatement	offset |= J1 << 18	5863:6:220801:220819	2678345	6	True				
ANR	2679880	AssignmentExpression	offset |= J1 << 18		2678345	0		|=			
ANR	2679881	Identifier	offset		2678345	0					
ANR	2679882	ShiftExpression	J1 << 18		2678345	1		<<			
ANR	2679883	Identifier	J1		2678345	0					
ANR	2679884	PrimaryExpression	18		2678345	1					
ANR	2679885	ExpressionStatement	offset |= ( given & 0x003f0000 ) >> 4	5864:6:220827:220862	2678345	7	True				
ANR	2679886	AssignmentExpression	offset |= ( given & 0x003f0000 ) >> 4		2678345	0		|=			
ANR	2679887	Identifier	offset		2678345	0					
ANR	2679888	ShiftExpression	( given & 0x003f0000 ) >> 4		2678345	1		>>			
ANR	2679889	BitAndExpression	given & 0x003f0000		2678345	0		&			
ANR	2679890	Identifier	given		2678345	0					
ANR	2679891	PrimaryExpression	0x003f0000		2678345	1					
ANR	2679892	PrimaryExpression	4		2678345	1					
ANR	2679893	ExpressionStatement	offset |= ( given & 0x000007ff ) << 1	5865:6:220870:220905	2678345	8	True				
ANR	2679894	AssignmentExpression	offset |= ( given & 0x000007ff ) << 1		2678345	0		|=			
ANR	2679895	Identifier	offset		2678345	0					
ANR	2679896	ShiftExpression	( given & 0x000007ff ) << 1		2678345	1		<<			
ANR	2679897	BitAndExpression	given & 0x000007ff		2678345	0		&			
ANR	2679898	Identifier	given		2678345	0					
ANR	2679899	PrimaryExpression	0x000007ff		2678345	1					
ANR	2679900	PrimaryExpression	1		2678345	1					
ANR	2679901	ExpressionStatement	offset -= ( 1 << 20 )	5866:6:220913:220932	2678345	9	True				
ANR	2679902	AssignmentExpression	offset -= ( 1 << 20 )		2678345	0		-=			
ANR	2679903	Identifier	offset		2678345	0					
ANR	2679904	ShiftExpression	1 << 20		2678345	1		<<			
ANR	2679905	PrimaryExpression	1		2678345	0					
ANR	2679906	PrimaryExpression	20		2678345	1					
ANR	2679907	ExpressionStatement	"info -> print_address_func ( pc + 4 + offset , info )"	5868:6:220941:220989	2678345	10	True				
ANR	2679908	CallExpression	"info -> print_address_func ( pc + 4 + offset , info )"		2678345	0					
ANR	2679909	Callee	info -> print_address_func		2678345	0					
ANR	2679910	PtrMemberAccess	info -> print_address_func		2678345	0					
ANR	2679911	Identifier	info		2678345	0					
ANR	2679912	Identifier	print_address_func		2678345	1					
ANR	2679913	ArgumentList	pc + 4 + offset		2678345	1					
ANR	2679914	Argument	pc + 4 + offset		2678345	0					
ANR	2679915	AdditiveExpression	pc + 4 + offset		2678345	0		+			
ANR	2679916	Identifier	pc		2678345	0					
ANR	2679917	AdditiveExpression	4 + offset		2678345	1		+			
ANR	2679918	PrimaryExpression	4		2678345	0					
ANR	2679919	Identifier	offset		2678345	1					
ANR	2679920	Argument	info		2678345	1					
ANR	2679921	Identifier	info		2678345	0					
ANR	2679922	BreakStatement	break ;	5869:7:220998:221003	2678345	54	True				
ANR	2679923	Label	case 'B' :	5871:5:221011:221019	2678345	55	True				
ANR	2679924	CompoundStatement		343:6:8499:8517	2678345	56					
ANR	2679925	IdentifierDeclStatement	unsigned int S = ( given & 0x04000000u ) >> 26 ;	5872:6:221029:221073	2678345	0	True				
ANR	2679926	IdentifierDecl	S = ( given & 0x04000000u ) >> 26		2678345	0					
ANR	2679927	IdentifierDeclType	unsigned int		2678345	0					
ANR	2679928	Identifier	S		2678345	1					
ANR	2679929	AssignmentExpression	S = ( given & 0x04000000u ) >> 26		2678345	2		=			
ANR	2679930	Identifier	S		2678345	0					
ANR	2679931	ShiftExpression	( given & 0x04000000u ) >> 26		2678345	1		>>			
ANR	2679932	BitAndExpression	given & 0x04000000u		2678345	0		&			
ANR	2679933	Identifier	given		2678345	0					
ANR	2679934	PrimaryExpression	0x04000000u		2678345	1					
ANR	2679935	PrimaryExpression	26		2678345	1					
ANR	2679936	IdentifierDeclStatement	unsigned int I1 = ( given & 0x00002000u ) >> 13 ;	5873:6:221081:221126	2678345	1	True				
ANR	2679937	IdentifierDecl	I1 = ( given & 0x00002000u ) >> 13		2678345	0					
ANR	2679938	IdentifierDeclType	unsigned int		2678345	0					
ANR	2679939	Identifier	I1		2678345	1					
ANR	2679940	AssignmentExpression	I1 = ( given & 0x00002000u ) >> 13		2678345	2		=			
ANR	2679941	Identifier	I1		2678345	0					
ANR	2679942	ShiftExpression	( given & 0x00002000u ) >> 13		2678345	1		>>			
ANR	2679943	BitAndExpression	given & 0x00002000u		2678345	0		&			
ANR	2679944	Identifier	given		2678345	0					
ANR	2679945	PrimaryExpression	0x00002000u		2678345	1					
ANR	2679946	PrimaryExpression	13		2678345	1					
ANR	2679947	IdentifierDeclStatement	unsigned int I2 = ( given & 0x00000800u ) >> 11 ;	5874:6:221134:221179	2678345	2	True				
ANR	2679948	IdentifierDecl	I2 = ( given & 0x00000800u ) >> 11		2678345	0					
ANR	2679949	IdentifierDeclType	unsigned int		2678345	0					
ANR	2679950	Identifier	I2		2678345	1					
ANR	2679951	AssignmentExpression	I2 = ( given & 0x00000800u ) >> 11		2678345	2		=			
ANR	2679952	Identifier	I2		2678345	0					
ANR	2679953	ShiftExpression	( given & 0x00000800u ) >> 11		2678345	1		>>			
ANR	2679954	BitAndExpression	given & 0x00000800u		2678345	0		&			
ANR	2679955	Identifier	given		2678345	0					
ANR	2679956	PrimaryExpression	0x00000800u		2678345	1					
ANR	2679957	PrimaryExpression	11		2678345	1					
ANR	2679958	IdentifierDeclStatement	bfd_vma offset = 0 ;	5875:6:221187:221205	2678345	3	True				
ANR	2679959	IdentifierDecl	offset = 0		2678345	0					
ANR	2679960	IdentifierDeclType	bfd_vma		2678345	0					
ANR	2679961	Identifier	offset		2678345	1					
ANR	2679962	AssignmentExpression	offset = 0		2678345	2		=			
ANR	2679963	Identifier	offset		2678345	0					
ANR	2679964	PrimaryExpression	0		2678345	1					
ANR	2679965	ExpressionStatement	offset |= ! S << 24	5877:6:221214:221232	2678345	4	True				
ANR	2679966	AssignmentExpression	offset |= ! S << 24		2678345	0		|=			
ANR	2679967	Identifier	offset		2678345	0					
ANR	2679968	ShiftExpression	! S << 24		2678345	1		<<			
ANR	2679969	UnaryOperationExpression	! S		2678345	0					
ANR	2679970	UnaryOperator	!		2678345	0					
ANR	2679971	Identifier	S		2678345	1					
ANR	2679972	PrimaryExpression	24		2678345	1					
ANR	2679973	ExpressionStatement	offset |= ! ( I1 ^ S ) << 23	5878:6:221240:221265	2678345	5	True				
ANR	2679974	AssignmentExpression	offset |= ! ( I1 ^ S ) << 23		2678345	0		|=			
ANR	2679975	Identifier	offset		2678345	0					
ANR	2679976	ShiftExpression	! ( I1 ^ S ) << 23		2678345	1		<<			
ANR	2679977	UnaryOperationExpression	! ( I1 ^ S )		2678345	0					
ANR	2679978	UnaryOperator	!		2678345	0					
ANR	2679979	ExclusiveOrExpression	I1 ^ S		2678345	1		^			
ANR	2679980	Identifier	I1		2678345	0					
ANR	2679981	Identifier	S		2678345	1					
ANR	2679982	PrimaryExpression	23		2678345	1					
ANR	2679983	ExpressionStatement	offset |= ! ( I2 ^ S ) << 22	5879:6:221273:221298	2678345	6	True				
ANR	2679984	AssignmentExpression	offset |= ! ( I2 ^ S ) << 22		2678345	0		|=			
ANR	2679985	Identifier	offset		2678345	0					
ANR	2679986	ShiftExpression	! ( I2 ^ S ) << 22		2678345	1		<<			
ANR	2679987	UnaryOperationExpression	! ( I2 ^ S )		2678345	0					
ANR	2679988	UnaryOperator	!		2678345	0					
ANR	2679989	ExclusiveOrExpression	I2 ^ S		2678345	1		^			
ANR	2679990	Identifier	I2		2678345	0					
ANR	2679991	Identifier	S		2678345	1					
ANR	2679992	PrimaryExpression	22		2678345	1					
ANR	2679993	ExpressionStatement	offset |= ( given & 0x03ff0000u ) >> 4	5880:6:221306:221342	2678345	7	True				
ANR	2679994	AssignmentExpression	offset |= ( given & 0x03ff0000u ) >> 4		2678345	0		|=			
ANR	2679995	Identifier	offset		2678345	0					
ANR	2679996	ShiftExpression	( given & 0x03ff0000u ) >> 4		2678345	1		>>			
ANR	2679997	BitAndExpression	given & 0x03ff0000u		2678345	0		&			
ANR	2679998	Identifier	given		2678345	0					
ANR	2679999	PrimaryExpression	0x03ff0000u		2678345	1					
ANR	2680000	PrimaryExpression	4		2678345	1					
ANR	2680001	ExpressionStatement	offset |= ( given & 0x000007ffu ) << 1	5881:6:221350:221386	2678345	8	True				
ANR	2680002	AssignmentExpression	offset |= ( given & 0x000007ffu ) << 1		2678345	0		|=			
ANR	2680003	Identifier	offset		2678345	0					
ANR	2680004	ShiftExpression	( given & 0x000007ffu ) << 1		2678345	1		<<			
ANR	2680005	BitAndExpression	given & 0x000007ffu		2678345	0		&			
ANR	2680006	Identifier	given		2678345	0					
ANR	2680007	PrimaryExpression	0x000007ffu		2678345	1					
ANR	2680008	PrimaryExpression	1		2678345	1					
ANR	2680009	ExpressionStatement	offset -= ( 1 << 24 )	5882:6:221394:221413	2678345	9	True				
ANR	2680010	AssignmentExpression	offset -= ( 1 << 24 )		2678345	0		-=			
ANR	2680011	Identifier	offset		2678345	0					
ANR	2680012	ShiftExpression	1 << 24		2678345	1		<<			
ANR	2680013	PrimaryExpression	1		2678345	0					
ANR	2680014	PrimaryExpression	24		2678345	1					
ANR	2680015	ExpressionStatement	offset += pc + 4	5883:6:221421:221437	2678345	10	True				
ANR	2680016	AssignmentExpression	offset += pc + 4		2678345	0		+=			
ANR	2680017	Identifier	offset		2678345	0					
ANR	2680018	AdditiveExpression	pc + 4		2678345	1		+			
ANR	2680019	Identifier	pc		2678345	0					
ANR	2680020	PrimaryExpression	4		2678345	1					
ANR	2680021	IfStatement	if ( ( given & 0x00001000u ) == 0 )		2678345	11					
ANR	2680022	Condition	( given & 0x00001000u ) == 0	5886:10:221509:221534	2678345	0	True				
ANR	2680023	EqualityExpression	( given & 0x00001000u ) == 0		2678345	0		==			
ANR	2680024	BitAndExpression	given & 0x00001000u		2678345	0		&			
ANR	2680025	Identifier	given		2678345	0					
ANR	2680026	PrimaryExpression	0x00001000u		2678345	1					
ANR	2680027	PrimaryExpression	0		2678345	1					
ANR	2680028	CompoundStatement		354:38:8849:8849	2678345	1					
ANR	2680029	ExpressionStatement	offset &= ~2u	5887:7:221546:221559	2678345	0	True				
ANR	2680030	AssignmentExpression	offset &= ~2u		2678345	0		&=			
ANR	2680031	Identifier	offset		2678345	0					
ANR	2680032	Identifier	~2u		2678345	1					
ANR	2680033	ExpressionStatement	"info -> print_address_func ( offset , info )"	5890:6:221576:221615	2678345	12	True				
ANR	2680034	CallExpression	"info -> print_address_func ( offset , info )"		2678345	0					
ANR	2680035	Callee	info -> print_address_func		2678345	0					
ANR	2680036	PtrMemberAccess	info -> print_address_func		2678345	0					
ANR	2680037	Identifier	info		2678345	0					
ANR	2680038	Identifier	print_address_func		2678345	1					
ANR	2680039	ArgumentList	offset		2678345	1					
ANR	2680040	Argument	offset		2678345	0					
ANR	2680041	Identifier	offset		2678345	0					
ANR	2680042	Argument	info		2678345	1					
ANR	2680043	Identifier	info		2678345	0					
ANR	2680044	BreakStatement	break ;	5891:7:221624:221629	2678345	57	True				
ANR	2680045	Label	case 's' :	5893:5:221637:221645	2678345	58	True				
ANR	2680046	CompoundStatement		362:6:8967:8989	2678345	59					
ANR	2680047	IdentifierDeclStatement	unsigned int shift = 0 ;	5894:6:221655:221677	2678345	0	True				
ANR	2680048	IdentifierDecl	shift = 0		2678345	0					
ANR	2680049	IdentifierDeclType	unsigned int		2678345	0					
ANR	2680050	Identifier	shift		2678345	1					
ANR	2680051	AssignmentExpression	shift = 0		2678345	2		=			
ANR	2680052	Identifier	shift		2678345	0					
ANR	2680053	PrimaryExpression	0		2678345	1					
ANR	2680054	ExpressionStatement	shift |= ( given & 0x000000c0u ) >> 6	5896:6:221686:221721	2678345	1	True				
ANR	2680055	AssignmentExpression	shift |= ( given & 0x000000c0u ) >> 6		2678345	0		|=			
ANR	2680056	Identifier	shift		2678345	0					
ANR	2680057	ShiftExpression	( given & 0x000000c0u ) >> 6		2678345	1		>>			
ANR	2680058	BitAndExpression	given & 0x000000c0u		2678345	0		&			
ANR	2680059	Identifier	given		2678345	0					
ANR	2680060	PrimaryExpression	0x000000c0u		2678345	1					
ANR	2680061	PrimaryExpression	6		2678345	1					
ANR	2680062	ExpressionStatement	shift |= ( given & 0x00007000u ) >> 10	5897:6:221729:221765	2678345	2	True				
ANR	2680063	AssignmentExpression	shift |= ( given & 0x00007000u ) >> 10		2678345	0		|=			
ANR	2680064	Identifier	shift		2678345	0					
ANR	2680065	ShiftExpression	( given & 0x00007000u ) >> 10		2678345	1		>>			
ANR	2680066	BitAndExpression	given & 0x00007000u		2678345	0		&			
ANR	2680067	Identifier	given		2678345	0					
ANR	2680068	PrimaryExpression	0x00007000u		2678345	1					
ANR	2680069	PrimaryExpression	10		2678345	1					
ANR	2680070	IfStatement	if ( WRITEBACK_BIT_SET )		2678345	3					
ANR	2680071	Condition	WRITEBACK_BIT_SET	5898:10:221777:221793	2678345	0	True				
ANR	2680072	Identifier	WRITEBACK_BIT_SET		2678345	0					
ANR	2680073	CompoundStatement		366:29:9108:9108	2678345	1					
ANR	2680074	ExpressionStatement	"func ( stream , "", asr %u"" , shift )"	5899:7:221805:221837	2678345	0	True				
ANR	2680075	CallExpression	"func ( stream , "", asr %u"" , shift )"		2678345	0					
ANR	2680076	Callee	func		2678345	0					
ANR	2680077	Identifier	func		2678345	0					
ANR	2680078	ArgumentList	stream		2678345	1					
ANR	2680079	Argument	stream		2678345	0					
ANR	2680080	Identifier	stream		2678345	0					
ANR	2680081	Argument	""", asr %u"""		2678345	1					
ANR	2680082	PrimaryExpression	""", asr %u"""		2678345	0					
ANR	2680083	Argument	shift		2678345	2					
ANR	2680084	Identifier	shift		2678345	0					
ANR	2680085	ElseStatement	else		2678345	0					
ANR	2680086	IfStatement	if ( shift )		2678345	0					
ANR	2680087	Condition	shift	5900:17:221856:221860	2678345	0	True				
ANR	2680088	Identifier	shift		2678345	0					
ANR	2680089	CompoundStatement		368:24:9175:9175	2678345	1					
ANR	2680090	ExpressionStatement	"func ( stream , "", lsl %u"" , shift )"	5901:7:221872:221904	2678345	0	True				
ANR	2680091	CallExpression	"func ( stream , "", lsl %u"" , shift )"		2678345	0					
ANR	2680092	Callee	func		2678345	0					
ANR	2680093	Identifier	func		2678345	0					
ANR	2680094	ArgumentList	stream		2678345	1					
ANR	2680095	Argument	stream		2678345	0					
ANR	2680096	Identifier	stream		2678345	0					
ANR	2680097	Argument	""", lsl %u"""		2678345	1					
ANR	2680098	PrimaryExpression	""", lsl %u"""		2678345	0					
ANR	2680099	Argument	shift		2678345	2					
ANR	2680100	Identifier	shift		2678345	0					
ANR	2680101	BreakStatement	break ;	5904:7:221961:221966	2678345	60	True				
ANR	2680102	Label	case 'R' :	5906:5:221974:221982	2678345	61	True				
ANR	2680103	CompoundStatement		375:6:9304:9348	2678345	62					
ANR	2680104	IdentifierDeclStatement	unsigned int rot = ( given & 0x00000030 ) >> 4 ;	5907:6:221992:222036	2678345	0	True				
ANR	2680105	IdentifierDecl	rot = ( given & 0x00000030 ) >> 4		2678345	0					
ANR	2680106	IdentifierDeclType	unsigned int		2678345	0					
ANR	2680107	Identifier	rot		2678345	1					
ANR	2680108	AssignmentExpression	rot = ( given & 0x00000030 ) >> 4		2678345	2		=			
ANR	2680109	Identifier	rot		2678345	0					
ANR	2680110	ShiftExpression	( given & 0x00000030 ) >> 4		2678345	1		>>			
ANR	2680111	BitAndExpression	given & 0x00000030		2678345	0		&			
ANR	2680112	Identifier	given		2678345	0					
ANR	2680113	PrimaryExpression	0x00000030		2678345	1					
ANR	2680114	PrimaryExpression	4		2678345	1					
ANR	2680115	IfStatement	if ( rot )		2678345	1					
ANR	2680116	Condition	rot	5909:10:222049:222051	2678345	0	True				
ANR	2680117	Identifier	rot		2678345	0					
ANR	2680118	CompoundStatement		377:15:9366:9366	2678345	1					
ANR	2680119	ExpressionStatement	"func ( stream , "", ror %u"" , rot * 8 )"	5910:7:222063:222097	2678345	0	True				
ANR	2680120	CallExpression	"func ( stream , "", ror %u"" , rot * 8 )"		2678345	0					
ANR	2680121	Callee	func		2678345	0					
ANR	2680122	Identifier	func		2678345	0					
ANR	2680123	ArgumentList	stream		2678345	1					
ANR	2680124	Argument	stream		2678345	0					
ANR	2680125	Identifier	stream		2678345	0					
ANR	2680126	Argument	""", ror %u"""		2678345	1					
ANR	2680127	PrimaryExpression	""", ror %u"""		2678345	0					
ANR	2680128	Argument	rot * 8		2678345	2					
ANR	2680129	MultiplicativeExpression	rot * 8		2678345	0		*			
ANR	2680130	Identifier	rot		2678345	0					
ANR	2680131	PrimaryExpression	8		2678345	1					
ANR	2680132	BreakStatement	break ;	5912:7:222114:222119	2678345	63	True				
ANR	2680133	Label	case 'U' :	5914:5:222127:222135	2678345	64	True				
ANR	2680134	IfStatement	if ( ( given & 0xf0 ) == 0x60 )		2678345	65					
ANR	2680135	Condition	( given & 0xf0 ) == 0x60	5915:10:222147:222168	2678345	0	True				
ANR	2680136	EqualityExpression	( given & 0xf0 ) == 0x60		2678345	0		==			
ANR	2680137	BitAndExpression	given & 0xf0		2678345	0		&			
ANR	2680138	Identifier	given		2678345	0					
ANR	2680139	PrimaryExpression	0xf0		2678345	1					
ANR	2680140	PrimaryExpression	0x60		2678345	1					
ANR	2680141	CompoundStatement		383:34:9483:9483	2678345	1					
ANR	2680142	SwitchStatement	switch ( given & 0xf )		2678345	0					
ANR	2680143	Condition	given & 0xf	5916:15:222188:222198	2678345	0	True				
ANR	2680144	BitAndExpression	given & 0xf		2678345	0		&			
ANR	2680145	Identifier	given		2678345	0					
ANR	2680146	PrimaryExpression	0xf		2678345	1					
ANR	2680147	CompoundStatement		384:28:9513:9513	2678345	1					
ANR	2680148	Label	case 0xf :	5917:7:222210:222218	2678345	0	True				
ANR	2680149	ExpressionStatement	"func ( stream , ""sy"" )"	5917:17:222220:222239	2678345	1	True				
ANR	2680150	CallExpression	"func ( stream , ""sy"" )"		2678345	0					
ANR	2680151	Callee	func		2678345	0					
ANR	2680152	Identifier	func		2678345	0					
ANR	2680153	ArgumentList	stream		2678345	1					
ANR	2680154	Argument	stream		2678345	0					
ANR	2680155	Identifier	stream		2678345	0					
ANR	2680156	Argument	"""sy"""		2678345	1					
ANR	2680157	PrimaryExpression	"""sy"""		2678345	0					
ANR	2680158	BreakStatement	break ;	5917:38:222241:222246	2678345	2	True				
ANR	2680159	Label	default :	5918:7:222255:222262	2678345	3	True				
ANR	2680160	Identifier	default		2678345	0					
ANR	2680161	ExpressionStatement	"func ( stream , ""%d"" , ( int ) given & 0xf )"	5919:8:222272:222309	2678345	4	True				
ANR	2680162	CallExpression	"func ( stream , ""%d"" , ( int ) given & 0xf )"		2678345	0					
ANR	2680163	Callee	func		2678345	0					
ANR	2680164	Identifier	func		2678345	0					
ANR	2680165	ArgumentList	stream		2678345	1					
ANR	2680166	Argument	stream		2678345	0					
ANR	2680167	Identifier	stream		2678345	0					
ANR	2680168	Argument	"""%d"""		2678345	1					
ANR	2680169	PrimaryExpression	"""%d"""		2678345	0					
ANR	2680170	Argument	( int ) given & 0xf		2678345	2					
ANR	2680171	BitAndExpression	( int ) given & 0xf		2678345	0		&			
ANR	2680172	CastExpression	( int ) given		2678345	0					
ANR	2680173	CastTarget	int		2678345	0					
ANR	2680174	Identifier	given		2678345	1					
ANR	2680175	PrimaryExpression	0xf		2678345	1					
ANR	2680176	BreakStatement	break ;	5920:8:222319:222324	2678345	5	True				
ANR	2680177	ElseStatement	else		2678345	0					
ANR	2680178	CompoundStatement		391:7:9669:9720	2678345	0					
ANR	2680179	IdentifierDeclStatement	const char * opt = data_barrier_option ( given & 0xf ) ;	5923:7:222357:222408	2678345	0	True				
ANR	2680180	IdentifierDecl	* opt = data_barrier_option ( given & 0xf )		2678345	0					
ANR	2680181	IdentifierDeclType	const char *		2678345	0					
ANR	2680182	Identifier	opt		2678345	1					
ANR	2680183	AssignmentExpression	* opt = data_barrier_option ( given & 0xf )		2678345	2		=			
ANR	2680184	Identifier	opt		2678345	0					
ANR	2680185	CallExpression	data_barrier_option ( given & 0xf )		2678345	1					
ANR	2680186	Callee	data_barrier_option		2678345	0					
ANR	2680187	Identifier	data_barrier_option		2678345	0					
ANR	2680188	ArgumentList	given & 0xf		2678345	1					
ANR	2680189	Argument	given & 0xf		2678345	0					
ANR	2680190	BitAndExpression	given & 0xf		2678345	0		&			
ANR	2680191	Identifier	given		2678345	0					
ANR	2680192	PrimaryExpression	0xf		2678345	1					
ANR	2680193	IfStatement	if ( opt != NULL )		2678345	1					
ANR	2680194	Condition	opt != NULL	5924:11:222421:222431	2678345	0	True				
ANR	2680195	EqualityExpression	opt != NULL		2678345	0		!=			
ANR	2680196	Identifier	opt		2678345	0					
ANR	2680197	Identifier	NULL		2678345	1					
ANR	2680198	CompoundStatement		392:24:9746:9746	2678345	1					
ANR	2680199	ExpressionStatement	"func ( stream , ""%s"" , opt )"	5925:8:222444:222468	2678345	0	True				
ANR	2680200	CallExpression	"func ( stream , ""%s"" , opt )"		2678345	0					
ANR	2680201	Callee	func		2678345	0					
ANR	2680202	Identifier	func		2678345	0					
ANR	2680203	ArgumentList	stream		2678345	1					
ANR	2680204	Argument	stream		2678345	0					
ANR	2680205	Identifier	stream		2678345	0					
ANR	2680206	Argument	"""%s"""		2678345	1					
ANR	2680207	PrimaryExpression	"""%s"""		2678345	0					
ANR	2680208	Argument	opt		2678345	2					
ANR	2680209	Identifier	opt		2678345	0					
ANR	2680210	ElseStatement	else		2678345	0					
ANR	2680211	CompoundStatement		394:14:9796:9796	2678345	0					
ANR	2680212	ExpressionStatement	"func ( stream , ""%d"" , ( int ) given & 0xf )"	5927:8:222494:222531	2678345	0	True				
ANR	2680213	CallExpression	"func ( stream , ""%d"" , ( int ) given & 0xf )"		2678345	0					
ANR	2680214	Callee	func		2678345	0					
ANR	2680215	Identifier	func		2678345	0					
ANR	2680216	ArgumentList	stream		2678345	1					
ANR	2680217	Argument	stream		2678345	0					
ANR	2680218	Identifier	stream		2678345	0					
ANR	2680219	Argument	"""%d"""		2678345	1					
ANR	2680220	PrimaryExpression	"""%d"""		2678345	0					
ANR	2680221	Argument	( int ) given & 0xf		2678345	2					
ANR	2680222	BitAndExpression	( int ) given & 0xf		2678345	0		&			
ANR	2680223	CastExpression	( int ) given		2678345	0					
ANR	2680224	CastTarget	int		2678345	0					
ANR	2680225	Identifier	given		2678345	1					
ANR	2680226	PrimaryExpression	0xf		2678345	1					
ANR	2680227	BreakStatement	break ;	5930:6:222556:222561	2678345	66	True				
ANR	2680228	Label	case 'C' :	5932:5:222569:222577	2678345	67	True				
ANR	2680229	IfStatement	if ( ( given & 0xff ) == 0 )		2678345	68					
ANR	2680230	Condition	( given & 0xff ) == 0	5933:10:222589:222607	2678345	0	True				
ANR	2680231	EqualityExpression	( given & 0xff ) == 0		2678345	0		==			
ANR	2680232	BitAndExpression	given & 0xff		2678345	0		&			
ANR	2680233	Identifier	given		2678345	0					
ANR	2680234	PrimaryExpression	0xff		2678345	1					
ANR	2680235	PrimaryExpression	0		2678345	1					
ANR	2680236	CompoundStatement		401:31:9922:9922	2678345	1					
ANR	2680237	ExpressionStatement	"func ( stream , ""%cPSR_"" , ( given & 0x100000 ) ? 'S' : 'C' )"	5934:7:222619:222674	2678345	0	True				
ANR	2680238	CallExpression	"func ( stream , ""%cPSR_"" , ( given & 0x100000 ) ? 'S' : 'C' )"		2678345	0					
ANR	2680239	Callee	func		2678345	0					
ANR	2680240	Identifier	func		2678345	0					
ANR	2680241	ArgumentList	stream		2678345	1					
ANR	2680242	Argument	stream		2678345	0					
ANR	2680243	Identifier	stream		2678345	0					
ANR	2680244	Argument	"""%cPSR_"""		2678345	1					
ANR	2680245	PrimaryExpression	"""%cPSR_"""		2678345	0					
ANR	2680246	Argument	( given & 0x100000 ) ? 'S' : 'C'		2678345	2					
ANR	2680247	ConditionalExpression	( given & 0x100000 ) ? 'S' : 'C'		2678345	0					
ANR	2680248	Condition	given & 0x100000		2678345	0					
ANR	2680249	BitAndExpression	given & 0x100000		2678345	0		&			
ANR	2680250	Identifier	given		2678345	0					
ANR	2680251	PrimaryExpression	0x100000		2678345	1					
ANR	2680252	PrimaryExpression	'S'		2678345	1					
ANR	2680253	PrimaryExpression	'C'		2678345	2					
ANR	2680254	IfStatement	if ( given & 0x800 )		2678345	1					
ANR	2680255	Condition	given & 0x800	5935:11:222687:222699	2678345	0	True				
ANR	2680256	BitAndExpression	given & 0x800		2678345	0		&			
ANR	2680257	Identifier	given		2678345	0					
ANR	2680258	PrimaryExpression	0x800		2678345	1					
ANR	2680259	CompoundStatement		403:26:10014:10014	2678345	1					
ANR	2680260	ExpressionStatement	"func ( stream , ""f"" )"	5936:8:222712:222730	2678345	0	True				
ANR	2680261	CallExpression	"func ( stream , ""f"" )"		2678345	0					
ANR	2680262	Callee	func		2678345	0					
ANR	2680263	Identifier	func		2678345	0					
ANR	2680264	ArgumentList	stream		2678345	1					
ANR	2680265	Argument	stream		2678345	0					
ANR	2680266	Identifier	stream		2678345	0					
ANR	2680267	Argument	"""f"""		2678345	1					
ANR	2680268	PrimaryExpression	"""f"""		2678345	0					
ANR	2680269	IfStatement	if ( given & 0x400 )		2678345	2					
ANR	2680270	Condition	given & 0x400	5938:11:222752:222764	2678345	0	True				
ANR	2680271	BitAndExpression	given & 0x400		2678345	0		&			
ANR	2680272	Identifier	given		2678345	0					
ANR	2680273	PrimaryExpression	0x400		2678345	1					
ANR	2680274	CompoundStatement		406:26:10079:10079	2678345	1					
ANR	2680275	ExpressionStatement	"func ( stream , ""s"" )"	5939:8:222777:222795	2678345	0	True				
ANR	2680276	CallExpression	"func ( stream , ""s"" )"		2678345	0					
ANR	2680277	Callee	func		2678345	0					
ANR	2680278	Identifier	func		2678345	0					
ANR	2680279	ArgumentList	stream		2678345	1					
ANR	2680280	Argument	stream		2678345	0					
ANR	2680281	Identifier	stream		2678345	0					
ANR	2680282	Argument	"""s"""		2678345	1					
ANR	2680283	PrimaryExpression	"""s"""		2678345	0					
ANR	2680284	IfStatement	if ( given & 0x200 )		2678345	3					
ANR	2680285	Condition	given & 0x200	5941:11:222817:222829	2678345	0	True				
ANR	2680286	BitAndExpression	given & 0x200		2678345	0		&			
ANR	2680287	Identifier	given		2678345	0					
ANR	2680288	PrimaryExpression	0x200		2678345	1					
ANR	2680289	CompoundStatement		409:26:10144:10144	2678345	1					
ANR	2680290	ExpressionStatement	"func ( stream , ""x"" )"	5942:8:222842:222860	2678345	0	True				
ANR	2680291	CallExpression	"func ( stream , ""x"" )"		2678345	0					
ANR	2680292	Callee	func		2678345	0					
ANR	2680293	Identifier	func		2678345	0					
ANR	2680294	ArgumentList	stream		2678345	1					
ANR	2680295	Argument	stream		2678345	0					
ANR	2680296	Identifier	stream		2678345	0					
ANR	2680297	Argument	"""x"""		2678345	1					
ANR	2680298	PrimaryExpression	"""x"""		2678345	0					
ANR	2680299	IfStatement	if ( given & 0x100 )		2678345	4					
ANR	2680300	Condition	given & 0x100	5944:11:222882:222894	2678345	0	True				
ANR	2680301	BitAndExpression	given & 0x100		2678345	0		&			
ANR	2680302	Identifier	given		2678345	0					
ANR	2680303	PrimaryExpression	0x100		2678345	1					
ANR	2680304	CompoundStatement		412:26:10209:10209	2678345	1					
ANR	2680305	ExpressionStatement	"func ( stream , ""c"" )"	5945:8:222907:222925	2678345	0	True				
ANR	2680306	CallExpression	"func ( stream , ""c"" )"		2678345	0					
ANR	2680307	Callee	func		2678345	0					
ANR	2680308	Identifier	func		2678345	0					
ANR	2680309	ArgumentList	stream		2678345	1					
ANR	2680310	Argument	stream		2678345	0					
ANR	2680311	Identifier	stream		2678345	0					
ANR	2680312	Argument	"""c"""		2678345	1					
ANR	2680313	PrimaryExpression	"""c"""		2678345	0					
ANR	2680314	ElseStatement	else		2678345	0					
ANR	2680315	IfStatement	if ( ( given & 0x20 ) == 0x20 )		2678345	0					
ANR	2680316	Condition	( given & 0x20 ) == 0x20	5947:17:222953:222974	2678345	0	True				
ANR	2680317	EqualityExpression	( given & 0x20 ) == 0x20		2678345	0		==			
ANR	2680318	BitAndExpression	given & 0x20		2678345	0		&			
ANR	2680319	Identifier	given		2678345	0					
ANR	2680320	PrimaryExpression	0x20		2678345	1					
ANR	2680321	PrimaryExpression	0x20		2678345	1					
ANR	2680322	CompoundStatement		417:7:10323:10359	2678345	1					
ANR	2680323	IdentifierDeclStatement	char const * name ;	5948:7:222986:223002	2678345	0	True				
ANR	2680324	IdentifierDecl	* name		2678345	0					
ANR	2680325	IdentifierDeclType	char const *		2678345	0					
ANR	2680326	Identifier	name		2678345	1					
ANR	2680327	IdentifierDeclStatement	unsigned sysm = ( given & 0xf00 ) >> 8 ;	5949:7:223011:223047	2678345	1	True				
ANR	2680328	IdentifierDecl	sysm = ( given & 0xf00 ) >> 8		2678345	0					
ANR	2680329	IdentifierDeclType	unsigned		2678345	0					
ANR	2680330	Identifier	sysm		2678345	1					
ANR	2680331	AssignmentExpression	sysm = ( given & 0xf00 ) >> 8		2678345	2		=			
ANR	2680332	Identifier	sysm		2678345	0					
ANR	2680333	ShiftExpression	( given & 0xf00 ) >> 8		2678345	1		>>			
ANR	2680334	BitAndExpression	given & 0xf00		2678345	0		&			
ANR	2680335	Identifier	given		2678345	0					
ANR	2680336	PrimaryExpression	0xf00		2678345	1					
ANR	2680337	PrimaryExpression	8		2678345	1					
ANR	2680338	ExpressionStatement	sysm |= ( given & 0x30 )	5951:7:223057:223079	2678345	2	True				
ANR	2680339	AssignmentExpression	sysm |= ( given & 0x30 )		2678345	0		|=			
ANR	2680340	Identifier	sysm		2678345	0					
ANR	2680341	BitAndExpression	given & 0x30		2678345	1		&			
ANR	2680342	Identifier	given		2678345	0					
ANR	2680343	PrimaryExpression	0x30		2678345	1					
ANR	2680344	ExpressionStatement	sysm |= ( given & 0x00100000 ) >> 14	5952:7:223088:223122	2678345	3	True				
ANR	2680345	AssignmentExpression	sysm |= ( given & 0x00100000 ) >> 14		2678345	0		|=			
ANR	2680346	Identifier	sysm		2678345	0					
ANR	2680347	ShiftExpression	( given & 0x00100000 ) >> 14		2678345	1		>>			
ANR	2680348	BitAndExpression	given & 0x00100000		2678345	0		&			
ANR	2680349	Identifier	given		2678345	0					
ANR	2680350	PrimaryExpression	0x00100000		2678345	1					
ANR	2680351	PrimaryExpression	14		2678345	1					
ANR	2680352	ExpressionStatement	name = banked_regname ( sysm )	5953:7:223131:223159	2678345	4	True				
ANR	2680353	AssignmentExpression	name = banked_regname ( sysm )		2678345	0		=			
ANR	2680354	Identifier	name		2678345	0					
ANR	2680355	CallExpression	banked_regname ( sysm )		2678345	1					
ANR	2680356	Callee	banked_regname		2678345	0					
ANR	2680357	Identifier	banked_regname		2678345	0					
ANR	2680358	ArgumentList	sysm		2678345	1					
ANR	2680359	Argument	sysm		2678345	0					
ANR	2680360	Identifier	sysm		2678345	0					
ANR	2680361	IfStatement	if ( name != NULL )		2678345	5					
ANR	2680362	Condition	name != NULL	5955:11:223173:223184	2678345	0	True				
ANR	2680363	EqualityExpression	name != NULL		2678345	0		!=			
ANR	2680364	Identifier	name		2678345	0					
ANR	2680365	Identifier	NULL		2678345	1					
ANR	2680366	CompoundStatement		423:25:10499:10499	2678345	1					
ANR	2680367	ExpressionStatement	"func ( stream , ""%s"" , name )"	5956:8:223197:223222	2678345	0	True				
ANR	2680368	CallExpression	"func ( stream , ""%s"" , name )"		2678345	0					
ANR	2680369	Callee	func		2678345	0					
ANR	2680370	Identifier	func		2678345	0					
ANR	2680371	ArgumentList	stream		2678345	1					
ANR	2680372	Argument	stream		2678345	0					
ANR	2680373	Identifier	stream		2678345	0					
ANR	2680374	Argument	"""%s"""		2678345	1					
ANR	2680375	PrimaryExpression	"""%s"""		2678345	0					
ANR	2680376	Argument	name		2678345	2					
ANR	2680377	Identifier	name		2678345	0					
ANR	2680378	ElseStatement	else		2678345	0					
ANR	2680379	CompoundStatement		425:14:10550:10550	2678345	0					
ANR	2680380	ExpressionStatement	"func ( stream , ""(UNDEF: %lu)"" , ( unsigned long ) sysm )"	5958:8:223248:223298	2678345	0	True				
ANR	2680381	CallExpression	"func ( stream , ""(UNDEF: %lu)"" , ( unsigned long ) sysm )"		2678345	0					
ANR	2680382	Callee	func		2678345	0					
ANR	2680383	Identifier	func		2678345	0					
ANR	2680384	ArgumentList	stream		2678345	1					
ANR	2680385	Argument	stream		2678345	0					
ANR	2680386	Identifier	stream		2678345	0					
ANR	2680387	Argument	"""(UNDEF: %lu)"""		2678345	1					
ANR	2680388	PrimaryExpression	"""(UNDEF: %lu)"""		2678345	0					
ANR	2680389	Argument	( unsigned long ) sysm		2678345	2					
ANR	2680390	CastExpression	( unsigned long ) sysm		2678345	0					
ANR	2680391	CastTarget	unsigned long		2678345	0					
ANR	2680392	Identifier	sysm		2678345	1					
ANR	2680393	ElseStatement	else		2678345	0					
ANR	2680394	CompoundStatement		428:13:10634:10634	2678345	0					
ANR	2680395	ExpressionStatement	"func ( stream , ""%s"" , psr_name ( given & 0xff ) )"	5961:7:223331:223375	2678345	0	True				
ANR	2680396	CallExpression	"func ( stream , ""%s"" , psr_name ( given & 0xff ) )"		2678345	0					
ANR	2680397	Callee	func		2678345	0					
ANR	2680398	Identifier	func		2678345	0					
ANR	2680399	ArgumentList	stream		2678345	1					
ANR	2680400	Argument	stream		2678345	0					
ANR	2680401	Identifier	stream		2678345	0					
ANR	2680402	Argument	"""%s"""		2678345	1					
ANR	2680403	PrimaryExpression	"""%s"""		2678345	0					
ANR	2680404	Argument	psr_name ( given & 0xff )		2678345	2					
ANR	2680405	CallExpression	psr_name ( given & 0xff )		2678345	0					
ANR	2680406	Callee	psr_name		2678345	0					
ANR	2680407	Identifier	psr_name		2678345	0					
ANR	2680408	ArgumentList	given & 0xff		2678345	1					
ANR	2680409	Argument	given & 0xff		2678345	0					
ANR	2680410	BitAndExpression	given & 0xff		2678345	0		&			
ANR	2680411	Identifier	given		2678345	0					
ANR	2680412	PrimaryExpression	0xff		2678345	1					
ANR	2680413	BreakStatement	break ;	5963:6:223391:223396	2678345	69	True				
ANR	2680414	Label	case 'D' :	5965:5:223404:223412	2678345	70	True				
ANR	2680415	IfStatement	if ( ( ( given & 0xff ) == 0 ) || ( ( given & 0x20 ) == 0x20 ) )		2678345	71					
ANR	2680416	Condition	( ( given & 0xff ) == 0 ) || ( ( given & 0x20 ) == 0x20 )	5966:10:223424:223472	2678345	0	True				
ANR	2680417	OrExpression	( ( given & 0xff ) == 0 ) || ( ( given & 0x20 ) == 0x20 )		2678345	0		||			
ANR	2680418	EqualityExpression	( given & 0xff ) == 0		2678345	0		==			
ANR	2680419	BitAndExpression	given & 0xff		2678345	0		&			
ANR	2680420	Identifier	given		2678345	0					
ANR	2680421	PrimaryExpression	0xff		2678345	1					
ANR	2680422	PrimaryExpression	0		2678345	1					
ANR	2680423	EqualityExpression	( given & 0x20 ) == 0x20		2678345	1		==			
ANR	2680424	BitAndExpression	given & 0x20		2678345	0		&			
ANR	2680425	Identifier	given		2678345	0					
ANR	2680426	PrimaryExpression	0x20		2678345	1					
ANR	2680427	PrimaryExpression	0x20		2678345	1					
ANR	2680428	CompoundStatement		436:7:10821:10858	2678345	1					
ANR	2680429	IdentifierDeclStatement	char const * name ;	5967:7:223484:223500	2678345	0	True				
ANR	2680430	IdentifierDecl	* name		2678345	0					
ANR	2680431	IdentifierDeclType	char const *		2678345	0					
ANR	2680432	Identifier	name		2678345	1					
ANR	2680433	IdentifierDeclStatement	unsigned sm = ( given & 0xf0000 ) >> 16 ;	5968:7:223509:223546	2678345	1	True				
ANR	2680434	IdentifierDecl	sm = ( given & 0xf0000 ) >> 16		2678345	0					
ANR	2680435	IdentifierDeclType	unsigned		2678345	0					
ANR	2680436	Identifier	sm		2678345	1					
ANR	2680437	AssignmentExpression	sm = ( given & 0xf0000 ) >> 16		2678345	2		=			
ANR	2680438	Identifier	sm		2678345	0					
ANR	2680439	ShiftExpression	( given & 0xf0000 ) >> 16		2678345	1		>>			
ANR	2680440	BitAndExpression	given & 0xf0000		2678345	0		&			
ANR	2680441	Identifier	given		2678345	0					
ANR	2680442	PrimaryExpression	0xf0000		2678345	1					
ANR	2680443	PrimaryExpression	16		2678345	1					
ANR	2680444	ExpressionStatement	sm |= ( given & 0x30 )	5970:7:223556:223576	2678345	2	True				
ANR	2680445	AssignmentExpression	sm |= ( given & 0x30 )		2678345	0		|=			
ANR	2680446	Identifier	sm		2678345	0					
ANR	2680447	BitAndExpression	given & 0x30		2678345	1		&			
ANR	2680448	Identifier	given		2678345	0					
ANR	2680449	PrimaryExpression	0x30		2678345	1					
ANR	2680450	ExpressionStatement	sm |= ( given & 0x00100000 ) >> 14	5971:7:223585:223617	2678345	3	True				
ANR	2680451	AssignmentExpression	sm |= ( given & 0x00100000 ) >> 14		2678345	0		|=			
ANR	2680452	Identifier	sm		2678345	0					
ANR	2680453	ShiftExpression	( given & 0x00100000 ) >> 14		2678345	1		>>			
ANR	2680454	BitAndExpression	given & 0x00100000		2678345	0		&			
ANR	2680455	Identifier	given		2678345	0					
ANR	2680456	PrimaryExpression	0x00100000		2678345	1					
ANR	2680457	PrimaryExpression	14		2678345	1					
ANR	2680458	ExpressionStatement	name = banked_regname ( sm )	5972:7:223626:223652	2678345	4	True				
ANR	2680459	AssignmentExpression	name = banked_regname ( sm )		2678345	0		=			
ANR	2680460	Identifier	name		2678345	0					
ANR	2680461	CallExpression	banked_regname ( sm )		2678345	1					
ANR	2680462	Callee	banked_regname		2678345	0					
ANR	2680463	Identifier	banked_regname		2678345	0					
ANR	2680464	ArgumentList	sm		2678345	1					
ANR	2680465	Argument	sm		2678345	0					
ANR	2680466	Identifier	sm		2678345	0					
ANR	2680467	IfStatement	if ( name != NULL )		2678345	5					
ANR	2680468	Condition	name != NULL	5974:11:223666:223677	2678345	0	True				
ANR	2680469	EqualityExpression	name != NULL		2678345	0		!=			
ANR	2680470	Identifier	name		2678345	0					
ANR	2680471	Identifier	NULL		2678345	1					
ANR	2680472	CompoundStatement		442:25:10992:10992	2678345	1					
ANR	2680473	ExpressionStatement	"func ( stream , ""%s"" , name )"	5975:8:223690:223715	2678345	0	True				
ANR	2680474	CallExpression	"func ( stream , ""%s"" , name )"		2678345	0					
ANR	2680475	Callee	func		2678345	0					
ANR	2680476	Identifier	func		2678345	0					
ANR	2680477	ArgumentList	stream		2678345	1					
ANR	2680478	Argument	stream		2678345	0					
ANR	2680479	Identifier	stream		2678345	0					
ANR	2680480	Argument	"""%s"""		2678345	1					
ANR	2680481	PrimaryExpression	"""%s"""		2678345	0					
ANR	2680482	Argument	name		2678345	2					
ANR	2680483	Identifier	name		2678345	0					
ANR	2680484	ElseStatement	else		2678345	0					
ANR	2680485	CompoundStatement		444:14:11043:11043	2678345	0					
ANR	2680486	ExpressionStatement	"func ( stream , ""(UNDEF: %lu)"" , ( unsigned long ) sm )"	5977:8:223741:223789	2678345	0	True				
ANR	2680487	CallExpression	"func ( stream , ""(UNDEF: %lu)"" , ( unsigned long ) sm )"		2678345	0					
ANR	2680488	Callee	func		2678345	0					
ANR	2680489	Identifier	func		2678345	0					
ANR	2680490	ArgumentList	stream		2678345	1					
ANR	2680491	Argument	stream		2678345	0					
ANR	2680492	Identifier	stream		2678345	0					
ANR	2680493	Argument	"""(UNDEF: %lu)"""		2678345	1					
ANR	2680494	PrimaryExpression	"""(UNDEF: %lu)"""		2678345	0					
ANR	2680495	Argument	( unsigned long ) sm		2678345	2					
ANR	2680496	CastExpression	( unsigned long ) sm		2678345	0					
ANR	2680497	CastTarget	unsigned long		2678345	0					
ANR	2680498	Identifier	sm		2678345	1					
ANR	2680499	ElseStatement	else		2678345	0					
ANR	2680500	CompoundStatement		447:13:11125:11125	2678345	0					
ANR	2680501	ExpressionStatement	"func ( stream , ""%s"" , psr_name ( given & 0xff ) )"	5980:7:223822:223866	2678345	0	True				
ANR	2680502	CallExpression	"func ( stream , ""%s"" , psr_name ( given & 0xff ) )"		2678345	0					
ANR	2680503	Callee	func		2678345	0					
ANR	2680504	Identifier	func		2678345	0					
ANR	2680505	ArgumentList	stream		2678345	1					
ANR	2680506	Argument	stream		2678345	0					
ANR	2680507	Identifier	stream		2678345	0					
ANR	2680508	Argument	"""%s"""		2678345	1					
ANR	2680509	PrimaryExpression	"""%s"""		2678345	0					
ANR	2680510	Argument	psr_name ( given & 0xff )		2678345	2					
ANR	2680511	CallExpression	psr_name ( given & 0xff )		2678345	0					
ANR	2680512	Callee	psr_name		2678345	0					
ANR	2680513	Identifier	psr_name		2678345	0					
ANR	2680514	ArgumentList	given & 0xff		2678345	1					
ANR	2680515	Argument	given & 0xff		2678345	0					
ANR	2680516	BitAndExpression	given & 0xff		2678345	0		&			
ANR	2680517	Identifier	given		2678345	0					
ANR	2680518	PrimaryExpression	0xff		2678345	1					
ANR	2680519	BreakStatement	break ;	5982:6:223882:223887	2678345	72	True				
ANR	2680520	Label	case '0' :	5984:5:223895:223903	2678345	73	True				
ANR	2680521	Label	case '1' :	5985:5:223910:223918	2678345	74	True				
ANR	2680522	Label	case '2' :	5986:5:223925:223933	2678345	75	True				
ANR	2680523	Label	case '3' :	5987:5:223940:223948	2678345	76	True				
ANR	2680524	Label	case '4' :	5988:5:223955:223963	2678345	77	True				
ANR	2680525	Label	case '5' :	5989:5:223970:223978	2678345	78	True				
ANR	2680526	Label	case '6' :	5990:5:223985:223993	2678345	79	True				
ANR	2680527	Label	case '7' :	5991:5:224000:224008	2678345	80	True				
ANR	2680528	Label	case '8' :	5992:5:224015:224023	2678345	81	True				
ANR	2680529	Label	case '9' :	5993:5:224030:224038	2678345	82	True				
ANR	2680530	CompoundStatement		463:6:11377:11394	2678345	83					
ANR	2680531	IdentifierDeclStatement	int width ;	5994:6:224048:224057	2678345	0	True				
ANR	2680532	IdentifierDecl	width		2678345	0					
ANR	2680533	IdentifierDeclType	int		2678345	0					
ANR	2680534	Identifier	width		2678345	1					
ANR	2680535	IdentifierDeclStatement	unsigned long val ;	5995:6:224065:224082	2678345	1	True				
ANR	2680536	IdentifierDecl	val		2678345	0					
ANR	2680537	IdentifierDeclType	unsigned long		2678345	0					
ANR	2680538	Identifier	val		2678345	1					
ANR	2680539	ExpressionStatement	"c = arm_decode_bitfield ( c , given , & val , & width )"	5997:6:224091:224139	2678345	2	True				
ANR	2680540	AssignmentExpression	"c = arm_decode_bitfield ( c , given , & val , & width )"		2678345	0		=			
ANR	2680541	Identifier	c		2678345	0					
ANR	2680542	CallExpression	"arm_decode_bitfield ( c , given , & val , & width )"		2678345	1					
ANR	2680543	Callee	arm_decode_bitfield		2678345	0					
ANR	2680544	Identifier	arm_decode_bitfield		2678345	0					
ANR	2680545	ArgumentList	c		2678345	1					
ANR	2680546	Argument	c		2678345	0					
ANR	2680547	Identifier	c		2678345	0					
ANR	2680548	Argument	given		2678345	1					
ANR	2680549	Identifier	given		2678345	0					
ANR	2680550	Argument	& val		2678345	2					
ANR	2680551	UnaryOperationExpression	& val		2678345	0					
ANR	2680552	UnaryOperator	&		2678345	0					
ANR	2680553	Identifier	val		2678345	1					
ANR	2680554	Argument	& width		2678345	3					
ANR	2680555	UnaryOperationExpression	& width		2678345	0					
ANR	2680556	UnaryOperator	&		2678345	0					
ANR	2680557	Identifier	width		2678345	1					
ANR	2680558	SwitchStatement	switch ( * c )		2678345	3					
ANR	2680559	Condition	* c	5999:14:224156:224157	2678345	0	True				
ANR	2680560	UnaryOperationExpression	* c		2678345	0					
ANR	2680561	UnaryOperator	*		2678345	0					
ANR	2680562	Identifier	c		2678345	1					
ANR	2680563	CompoundStatement		467:18:11472:11472	2678345	1					
ANR	2680564	Label	case 'd' :	6000:6:224168:224176	2678345	0	True				
ANR	2680565	ExpressionStatement	"func ( stream , ""%lu"" , val )"	6001:7:224185:224210	2678345	1	True				
ANR	2680566	CallExpression	"func ( stream , ""%lu"" , val )"		2678345	0					
ANR	2680567	Callee	func		2678345	0					
ANR	2680568	Identifier	func		2678345	0					
ANR	2680569	ArgumentList	stream		2678345	1					
ANR	2680570	Argument	stream		2678345	0					
ANR	2680571	Identifier	stream		2678345	0					
ANR	2680572	Argument	"""%lu"""		2678345	1					
ANR	2680573	PrimaryExpression	"""%lu"""		2678345	0					
ANR	2680574	Argument	val		2678345	2					
ANR	2680575	Identifier	val		2678345	0					
ANR	2680576	BreakStatement	break ;	6003:7:224252:224257	2678345	2	True				
ANR	2680577	Label	case 'D' :	6005:6:224266:224274	2678345	3	True				
ANR	2680578	ExpressionStatement	"func ( stream , ""%lu"" , val + 1 )"	6006:7:224283:224312	2678345	4	True				
ANR	2680579	CallExpression	"func ( stream , ""%lu"" , val + 1 )"		2678345	0					
ANR	2680580	Callee	func		2678345	0					
ANR	2680581	Identifier	func		2678345	0					
ANR	2680582	ArgumentList	stream		2678345	1					
ANR	2680583	Argument	stream		2678345	0					
ANR	2680584	Identifier	stream		2678345	0					
ANR	2680585	Argument	"""%lu"""		2678345	1					
ANR	2680586	PrimaryExpression	"""%lu"""		2678345	0					
ANR	2680587	Argument	val + 1		2678345	2					
ANR	2680588	AdditiveExpression	val + 1		2678345	0		+			
ANR	2680589	Identifier	val		2678345	0					
ANR	2680590	PrimaryExpression	1		2678345	1					
ANR	2680591	BreakStatement	break ;	6008:7:224359:224364	2678345	5	True				
ANR	2680592	Label	case 'W' :	6010:6:224373:224381	2678345	6	True				
ANR	2680593	ExpressionStatement	"func ( stream , ""%lu"" , val * 4 )"	6011:7:224390:224419	2678345	7	True				
ANR	2680594	CallExpression	"func ( stream , ""%lu"" , val * 4 )"		2678345	0					
ANR	2680595	Callee	func		2678345	0					
ANR	2680596	Identifier	func		2678345	0					
ANR	2680597	ArgumentList	stream		2678345	1					
ANR	2680598	Argument	stream		2678345	0					
ANR	2680599	Identifier	stream		2678345	0					
ANR	2680600	Argument	"""%lu"""		2678345	1					
ANR	2680601	PrimaryExpression	"""%lu"""		2678345	0					
ANR	2680602	Argument	val * 4		2678345	2					
ANR	2680603	MultiplicativeExpression	val * 4		2678345	0		*			
ANR	2680604	Identifier	val		2678345	0					
ANR	2680605	PrimaryExpression	4		2678345	1					
ANR	2680606	BreakStatement	break ;	6013:7:224466:224471	2678345	8	True				
ANR	2680607	Label	case 'S' :	6015:6:224480:224488	2678345	9	True				
ANR	2680608	IfStatement	if ( val == 13 )		2678345	10					
ANR	2680609	Condition	val == 13	6016:11:224501:224509	2678345	0	True				
ANR	2680610	EqualityExpression	val == 13		2678345	0		==			
ANR	2680611	Identifier	val		2678345	0					
ANR	2680612	PrimaryExpression	13		2678345	1					
ANR	2680613	CompoundStatement		484:22:11824:11824	2678345	1					
ANR	2680614	ExpressionStatement	is_unpredictable = TRUE	6017:8:224522:224545	2678345	0	True				
ANR	2680615	AssignmentExpression	is_unpredictable = TRUE		2678345	0		=			
ANR	2680616	Identifier	is_unpredictable		2678345	0					
ANR	2680617	Identifier	TRUE		2678345	1					
ANR	2680618	Label	case 'R' :	6020:6:224590:224598	2678345	11	True				
ANR	2680619	IfStatement	if ( val == 15 )		2678345	12					
ANR	2680620	Condition	val == 15	6021:11:224611:224619	2678345	0	True				
ANR	2680621	EqualityExpression	val == 15		2678345	0		==			
ANR	2680622	Identifier	val		2678345	0					
ANR	2680623	PrimaryExpression	15		2678345	1					
ANR	2680624	CompoundStatement		489:22:11934:11934	2678345	1					
ANR	2680625	ExpressionStatement	is_unpredictable = TRUE	6022:8:224632:224655	2678345	0	True				
ANR	2680626	AssignmentExpression	is_unpredictable = TRUE		2678345	0		=			
ANR	2680627	Identifier	is_unpredictable		2678345	0					
ANR	2680628	Identifier	TRUE		2678345	1					
ANR	2680629	Label	case 'r' :	6025:6:224700:224708	2678345	13	True				
ANR	2680630	ExpressionStatement	"func ( stream , ""%s"" , arm_regnames [ val ] )"	6026:7:224717:224755	2678345	14	True				
ANR	2680631	CallExpression	"func ( stream , ""%s"" , arm_regnames [ val ] )"		2678345	0					
ANR	2680632	Callee	func		2678345	0					
ANR	2680633	Identifier	func		2678345	0					
ANR	2680634	ArgumentList	stream		2678345	1					
ANR	2680635	Argument	stream		2678345	0					
ANR	2680636	Identifier	stream		2678345	0					
ANR	2680637	Argument	"""%s"""		2678345	1					
ANR	2680638	PrimaryExpression	"""%s"""		2678345	0					
ANR	2680639	Argument	arm_regnames [ val ]		2678345	2					
ANR	2680640	ArrayIndexing	arm_regnames [ val ]		2678345	0					
ANR	2680641	Identifier	arm_regnames		2678345	0					
ANR	2680642	Identifier	val		2678345	1					
ANR	2680643	BreakStatement	break ;	6027:7:224764:224769	2678345	15	True				
ANR	2680644	Label	case 'c' :	6029:6:224778:224786	2678345	16	True				
ANR	2680645	ExpressionStatement	"func ( stream , ""%s"" , arm_conditional [ val ] )"	6030:7:224795:224836	2678345	17	True				
ANR	2680646	CallExpression	"func ( stream , ""%s"" , arm_conditional [ val ] )"		2678345	0					
ANR	2680647	Callee	func		2678345	0					
ANR	2680648	Identifier	func		2678345	0					
ANR	2680649	ArgumentList	stream		2678345	1					
ANR	2680650	Argument	stream		2678345	0					
ANR	2680651	Identifier	stream		2678345	0					
ANR	2680652	Argument	"""%s"""		2678345	1					
ANR	2680653	PrimaryExpression	"""%s"""		2678345	0					
ANR	2680654	Argument	arm_conditional [ val ]		2678345	2					
ANR	2680655	ArrayIndexing	arm_conditional [ val ]		2678345	0					
ANR	2680656	Identifier	arm_conditional		2678345	0					
ANR	2680657	Identifier	val		2678345	1					
ANR	2680658	BreakStatement	break ;	6031:7:224845:224850	2678345	18	True				
ANR	2680659	Label	case '\\'' :	6033:6:224859:224868	2678345	19	True				
ANR	2680660	ExpressionStatement	c ++	6034:7:224877:224880	2678345	20	True				
ANR	2680661	PostIncDecOperationExpression	c ++		2678345	0					
ANR	2680662	Identifier	c		2678345	0					
ANR	2680663	IncDec	++		2678345	1					
ANR	2680664	IfStatement	if ( val == ( ( 1ul << width ) - 1 ) )		2678345	21					
ANR	2680665	Condition	val == ( ( 1ul << width ) - 1 )	6035:11:224893:224919	2678345	0	True				
ANR	2680666	EqualityExpression	val == ( ( 1ul << width ) - 1 )		2678345	0		==			
ANR	2680667	Identifier	val		2678345	0					
ANR	2680668	AdditiveExpression	( 1ul << width ) - 1		2678345	1		-			
ANR	2680669	ShiftExpression	1ul << width		2678345	0		<<			
ANR	2680670	PrimaryExpression	1ul		2678345	0					
ANR	2680671	Identifier	width		2678345	1					
ANR	2680672	PrimaryExpression	1		2678345	1					
ANR	2680673	CompoundStatement		503:40:12234:12234	2678345	1					
ANR	2680674	ExpressionStatement	"func ( stream , ""%c"" , * c )"	6036:8:224932:224955	2678345	0	True				
ANR	2680675	CallExpression	"func ( stream , ""%c"" , * c )"		2678345	0					
ANR	2680676	Callee	func		2678345	0					
ANR	2680677	Identifier	func		2678345	0					
ANR	2680678	ArgumentList	stream		2678345	1					
ANR	2680679	Argument	stream		2678345	0					
ANR	2680680	Identifier	stream		2678345	0					
ANR	2680681	Argument	"""%c"""		2678345	1					
ANR	2680682	PrimaryExpression	"""%c"""		2678345	0					
ANR	2680683	Argument	* c		2678345	2					
ANR	2680684	UnaryOperationExpression	* c		2678345	0					
ANR	2680685	UnaryOperator	*		2678345	0					
ANR	2680686	Identifier	c		2678345	1					
ANR	2680687	BreakStatement	break ;	6038:7:224973:224978	2678345	22	True				
ANR	2680688	Label	case '`' :	6040:6:224987:224995	2678345	23	True				
ANR	2680689	ExpressionStatement	c ++	6041:7:225004:225007	2678345	24	True				
ANR	2680690	PostIncDecOperationExpression	c ++		2678345	0					
ANR	2680691	Identifier	c		2678345	0					
ANR	2680692	IncDec	++		2678345	1					
ANR	2680693	IfStatement	if ( val == 0 )		2678345	25					
ANR	2680694	Condition	val == 0	6042:11:225020:225027	2678345	0	True				
ANR	2680695	EqualityExpression	val == 0		2678345	0		==			
ANR	2680696	Identifier	val		2678345	0					
ANR	2680697	PrimaryExpression	0		2678345	1					
ANR	2680698	CompoundStatement		510:21:12342:12342	2678345	1					
ANR	2680699	ExpressionStatement	"func ( stream , ""%c"" , * c )"	6043:8:225040:225063	2678345	0	True				
ANR	2680700	CallExpression	"func ( stream , ""%c"" , * c )"		2678345	0					
ANR	2680701	Callee	func		2678345	0					
ANR	2680702	Identifier	func		2678345	0					
ANR	2680703	ArgumentList	stream		2678345	1					
ANR	2680704	Argument	stream		2678345	0					
ANR	2680705	Identifier	stream		2678345	0					
ANR	2680706	Argument	"""%c"""		2678345	1					
ANR	2680707	PrimaryExpression	"""%c"""		2678345	0					
ANR	2680708	Argument	* c		2678345	2					
ANR	2680709	UnaryOperationExpression	* c		2678345	0					
ANR	2680710	UnaryOperator	*		2678345	0					
ANR	2680711	Identifier	c		2678345	1					
ANR	2680712	BreakStatement	break ;	6045:7:225081:225086	2678345	26	True				
ANR	2680713	Label	case '?' :	6047:6:225095:225103	2678345	27	True				
ANR	2680714	ExpressionStatement	"func ( stream , ""%c"" , c [ ( 1 << width ) - ( int ) val ] )"	6048:7:225112:225159	2678345	28	True				
ANR	2680715	CallExpression	"func ( stream , ""%c"" , c [ ( 1 << width ) - ( int ) val ] )"		2678345	0					
ANR	2680716	Callee	func		2678345	0					
ANR	2680717	Identifier	func		2678345	0					
ANR	2680718	ArgumentList	stream		2678345	1					
ANR	2680719	Argument	stream		2678345	0					
ANR	2680720	Identifier	stream		2678345	0					
ANR	2680721	Argument	"""%c"""		2678345	1					
ANR	2680722	PrimaryExpression	"""%c"""		2678345	0					
ANR	2680723	Argument	c [ ( 1 << width ) - ( int ) val ]		2678345	2					
ANR	2680724	ArrayIndexing	c [ ( 1 << width ) - ( int ) val ]		2678345	0					
ANR	2680725	Identifier	c		2678345	0					
ANR	2680726	AdditiveExpression	( 1 << width ) - ( int ) val		2678345	1		-			
ANR	2680727	ShiftExpression	1 << width		2678345	0		<<			
ANR	2680728	PrimaryExpression	1		2678345	0					
ANR	2680729	Identifier	width		2678345	1					
ANR	2680730	CastExpression	( int ) val		2678345	1					
ANR	2680731	CastTarget	int		2678345	0					
ANR	2680732	Identifier	val		2678345	1					
ANR	2680733	ExpressionStatement	c += 1 << width	6049:7:225168:225183	2678345	29	True				
ANR	2680734	AssignmentExpression	c += 1 << width		2678345	0		+=			
ANR	2680735	Identifier	c		2678345	0					
ANR	2680736	ShiftExpression	1 << width		2678345	1		<<			
ANR	2680737	PrimaryExpression	1		2678345	0					
ANR	2680738	Identifier	width		2678345	1					
ANR	2680739	BreakStatement	break ;	6050:7:225192:225197	2678345	30	True				
ANR	2680740	Label	case 'x' :	6052:6:225206:225214	2678345	31	True				
ANR	2680741	ExpressionStatement	"func ( stream , ""0x%lx"" , val & 0xffffffffUL )"	6053:7:225223:225265	2678345	32	True				
ANR	2680742	CallExpression	"func ( stream , ""0x%lx"" , val & 0xffffffffUL )"		2678345	0					
ANR	2680743	Callee	func		2678345	0					
ANR	2680744	Identifier	func		2678345	0					
ANR	2680745	ArgumentList	stream		2678345	1					
ANR	2680746	Argument	stream		2678345	0					
ANR	2680747	Identifier	stream		2678345	0					
ANR	2680748	Argument	"""0x%lx"""		2678345	1					
ANR	2680749	PrimaryExpression	"""0x%lx"""		2678345	0					
ANR	2680750	Argument	val & 0xffffffffUL		2678345	2					
ANR	2680751	BitAndExpression	val & 0xffffffffUL		2678345	0		&			
ANR	2680752	Identifier	val		2678345	0					
ANR	2680753	PrimaryExpression	0xffffffffUL		2678345	1					
ANR	2680754	BreakStatement	break ;	6054:7:225274:225279	2678345	33	True				
ANR	2680755	BreakStatement	break ;	6056:7:225296:225301	2678345	84	True				
ANR	2680756	Label	case 'L' :	6058:5:225309:225317	2678345	85	True				
ANR	2680757	IfStatement	if ( ( ( given >> 16 ) & 0xf ) == 0xf )		2678345	86					
ANR	2680758	Condition	( ( given >> 16 ) & 0xf ) == 0xf	6062:10:225468:225495	2678345	0	True				
ANR	2680759	EqualityExpression	( ( given >> 16 ) & 0xf ) == 0xf		2678345	0		==			
ANR	2680760	BitAndExpression	( given >> 16 ) & 0xf		2678345	0		&			
ANR	2680761	ShiftExpression	given >> 16		2678345	0		>>			
ANR	2680762	Identifier	given		2678345	0					
ANR	2680763	PrimaryExpression	16		2678345	1					
ANR	2680764	PrimaryExpression	0xf		2678345	1					
ANR	2680765	PrimaryExpression	0xf		2678345	1					
ANR	2680766	CompoundStatement		531:7:12819:12854	2678345	1					
ANR	2680767	IdentifierDeclStatement	bfd_vma offset = ( given & 0xff ) * 4 ;	6063:7:225507:225542	2678345	0	True				
ANR	2680768	IdentifierDecl	offset = ( given & 0xff ) * 4		2678345	0					
ANR	2680769	IdentifierDeclType	bfd_vma		2678345	0					
ANR	2680770	Identifier	offset		2678345	1					
ANR	2680771	AssignmentExpression	offset = ( given & 0xff ) * 4		2678345	2		=			
ANR	2680772	Identifier	offset		2678345	0					
ANR	2680773	MultiplicativeExpression	( given & 0xff ) * 4		2678345	1		*			
ANR	2680774	BitAndExpression	given & 0xff		2678345	0		&			
ANR	2680775	Identifier	given		2678345	0					
ANR	2680776	PrimaryExpression	0xff		2678345	1					
ANR	2680777	PrimaryExpression	4		2678345	1					
ANR	2680778	IfStatement	if ( ( given & ( 1 << 23 ) ) == 0 )		2678345	1					
ANR	2680779	Condition	( given & ( 1 << 23 ) ) == 0	6065:11:225556:225579	2678345	0	True				
ANR	2680780	EqualityExpression	( given & ( 1 << 23 ) ) == 0		2678345	0		==			
ANR	2680781	BitAndExpression	given & ( 1 << 23 )		2678345	0		&			
ANR	2680782	Identifier	given		2678345	0					
ANR	2680783	ShiftExpression	1 << 23		2678345	1		<<			
ANR	2680784	PrimaryExpression	1		2678345	0					
ANR	2680785	PrimaryExpression	23		2678345	1					
ANR	2680786	PrimaryExpression	0		2678345	1					
ANR	2680787	CompoundStatement		533:37:12894:12894	2678345	1					
ANR	2680788	ExpressionStatement	offset = - offset	6066:8:225592:225608	2678345	0	True				
ANR	2680789	AssignmentExpression	offset = - offset		2678345	0		=			
ANR	2680790	Identifier	offset		2678345	0					
ANR	2680791	UnaryOperationExpression	- offset		2678345	1					
ANR	2680792	UnaryOperator	-		2678345	0					
ANR	2680793	Identifier	offset		2678345	1					
ANR	2680794	ExpressionStatement	"func ( stream , "" ; "" )"	6068:7:225626:225646	2678345	2	True				
ANR	2680795	CallExpression	"func ( stream , "" ; "" )"		2678345	0					
ANR	2680796	Callee	func		2678345	0					
ANR	2680797	Identifier	func		2678345	0					
ANR	2680798	ArgumentList	stream		2678345	1					
ANR	2680799	Argument	stream		2678345	0					
ANR	2680800	Identifier	stream		2678345	0					
ANR	2680801	Argument	""" ; """		2678345	1					
ANR	2680802	PrimaryExpression	""" ; """		2678345	0					
ANR	2680803	ExpressionStatement	"info -> print_address_func ( ( pc & ~3 ) + 4 + offset , info )"	6069:7:225655:225710	2678345	3	True				
ANR	2680804	CallExpression	"info -> print_address_func ( ( pc & ~3 ) + 4 + offset , info )"		2678345	0					
ANR	2680805	Callee	info -> print_address_func		2678345	0					
ANR	2680806	PtrMemberAccess	info -> print_address_func		2678345	0					
ANR	2680807	Identifier	info		2678345	0					
ANR	2680808	Identifier	print_address_func		2678345	1					
ANR	2680809	ArgumentList	( pc & ~3 ) + 4 + offset		2678345	1					
ANR	2680810	Argument	( pc & ~3 ) + 4 + offset		2678345	0					
ANR	2680811	AdditiveExpression	( pc & ~3 ) + 4 + offset		2678345	0		+			
ANR	2680812	BitAndExpression	pc & ~3		2678345	0		&			
ANR	2680813	Identifier	pc		2678345	0					
ANR	2680814	Identifier	~3		2678345	1					
ANR	2680815	AdditiveExpression	4 + offset		2678345	1		+			
ANR	2680816	PrimaryExpression	4		2678345	0					
ANR	2680817	Identifier	offset		2678345	1					
ANR	2680818	Argument	info		2678345	1					
ANR	2680819	Identifier	info		2678345	0					
ANR	2680820	BreakStatement	break ;	6071:6:225726:225731	2678345	87	True				
ANR	2680821	IfStatement	if ( value_in_comment > 32 || value_in_comment < - 16 )		2678345	3					
ANR	2680822	Condition	value_in_comment > 32 || value_in_comment < - 16	6076:5:225758:225804	2678345	0	True				
ANR	2680823	OrExpression	value_in_comment > 32 || value_in_comment < - 16		2678345	0		||			
ANR	2680824	RelationalExpression	value_in_comment > 32		2678345	0		>			
ANR	2680825	Identifier	value_in_comment		2678345	0					
ANR	2680826	PrimaryExpression	32		2678345	1					
ANR	2680827	RelationalExpression	value_in_comment < - 16		2678345	1		<			
ANR	2680828	Identifier	value_in_comment		2678345	0					
ANR	2680829	UnaryOperationExpression	- 16		2678345	1					
ANR	2680830	UnaryOperator	-		2678345	0					
ANR	2680831	PrimaryExpression	16		2678345	1					
ANR	2680832	ExpressionStatement	"func ( stream , "" ; 0x%lx"" , value_in_comment )"	6077:3:225810:225853	2678345	1	True				
ANR	2680833	CallExpression	"func ( stream , "" ; 0x%lx"" , value_in_comment )"		2678345	0					
ANR	2680834	Callee	func		2678345	0					
ANR	2680835	Identifier	func		2678345	0					
ANR	2680836	ArgumentList	stream		2678345	1					
ANR	2680837	Argument	stream		2678345	0					
ANR	2680838	Identifier	stream		2678345	0					
ANR	2680839	Argument	""" ; 0x%lx"""		2678345	1					
ANR	2680840	PrimaryExpression	""" ; 0x%lx"""		2678345	0					
ANR	2680841	Argument	value_in_comment		2678345	2					
ANR	2680842	Identifier	value_in_comment		2678345	0					
ANR	2680843	IfStatement	if ( is_unpredictable )		2678345	4					
ANR	2680844	Condition	is_unpredictable	6080:8:225871:225886	2678345	0	True				
ANR	2680845	Identifier	is_unpredictable		2678345	0					
ANR	2680846	CompoundStatement		548:26:13201:13201	2678345	1					
ANR	2680847	ExpressionStatement	"func ( stream , UNPREDICTABLE_INSTRUCTION )"	6081:5:225896:225936	2678345	0	True				
ANR	2680848	CallExpression	"func ( stream , UNPREDICTABLE_INSTRUCTION )"		2678345	0					
ANR	2680849	Callee	func		2678345	0					
ANR	2680850	Identifier	func		2678345	0					
ANR	2680851	ArgumentList	stream		2678345	1					
ANR	2680852	Argument	stream		2678345	0					
ANR	2680853	Identifier	stream		2678345	0					
ANR	2680854	Argument	UNPREDICTABLE_INSTRUCTION		2678345	1					
ANR	2680855	Identifier	UNPREDICTABLE_INSTRUCTION		2678345	0					
ANR	2680856	ReturnStatement	return ;	6084:4:225949:225955	2678345	5	True				
ANR	2680857	ReturnType	static void		2678345	1					
ANR	2680858	Identifier	print_insn_thumb32		2678345	2					
ANR	2680859	ParameterList	"bfd_vma pc , struct disassemble_info * info , long given"		2678345	3					
ANR	2680860	Parameter	bfd_vma pc	5532:20:212632:212641	2678345	0	True				
ANR	2680861	ParameterType	bfd_vma		2678345	0					
ANR	2680862	Identifier	pc		2678345	1					
ANR	2680863	Parameter	struct disassemble_info * info	5532:32:212644:212672	2678345	1	True				
ANR	2680864	ParameterType	struct disassemble_info *		2678345	0					
ANR	2680865	Identifier	info		2678345	1					
ANR	2680866	Parameter	long given	5532:63:212675:212684	2678345	2	True				
ANR	2680867	ParameterType	long		2678345	0					
ANR	2680868	Identifier	given		2678345	1					
ANR	2680869	CFGEntryNode	ENTRY		2678345		True				
ANR	2680870	CFGExitNode	EXIT		2678345		True				
ANR	2680871	Symbol	~2u		2678345						
ANR	2680872	Symbol	& val		2678345						
ANR	2680873	Symbol	* Rn		2678345						
ANR	2680874	Symbol	* Rm		2678345						
ANR	2680875	Symbol	mod		2678345						
ANR	2680876	Symbol	UNPREDICTABLE_INSTRUCTION		2678345						
ANR	2680877	Symbol	shift		2678345						
ANR	2680878	Symbol	I1		2678345						
ANR	2680879	Symbol	I2		2678345						
ANR	2680880	Symbol	PRE_BIT_SET		2678345						
ANR	2680881	Symbol	type		2678345						
ANR	2680882	Symbol	info -> fprintf_func		2678345						
ANR	2680883	Symbol	IFTHEN_COND		2678345						
ANR	2680884	Symbol	postind		2678345						
ANR	2680885	Symbol	* arm_conditional		2678345						
ANR	2680886	Symbol	reg		2678345						
ANR	2680887	Symbol	thumb32_opcodes		2678345						
ANR	2680888	Symbol	psr_name		2678345						
ANR	2680889	Symbol	info		2678345						
ANR	2680890	Symbol	ifthen_next_state		2678345						
ANR	2680891	Symbol	val		2678345						
ANR	2680892	Symbol	given		2678345						
ANR	2680893	Symbol	print_insn_coprocessor		2678345						
ANR	2680894	Symbol	NEGATIVE_BIT_SET		2678345						
ANR	2680895	Symbol	arm_decode_bitfield		2678345						
ANR	2680896	Symbol	NULL		2678345						
ANR	2680897	Symbol	offset		2678345						
ANR	2680898	Symbol	J1		2678345						
ANR	2680899	Symbol	insn -> value		2678345						
ANR	2680900	Symbol	bits		2678345						
ANR	2680901	Symbol	J2		2678345						
ANR	2680902	Symbol	TRUE		2678345						
ANR	2680903	Symbol	is_unpredictable		2678345						
ANR	2680904	Symbol	data_barrier_option		2678345						
ANR	2680905	Symbol	stp		2678345						
ANR	2680906	Symbol	opt		2678345						
ANR	2680907	Symbol	ifthen_state		2678345						
ANR	2680908	Symbol	name		2678345						
ANR	2680909	Symbol	lsb		2678345						
ANR	2680910	Symbol	arm_conditional		2678345						
ANR	2680911	Symbol	imm8		2678345						
ANR	2680912	Symbol	banked_regname		2678345						
ANR	2680913	Symbol	* arm_regnames		2678345						
ANR	2680914	Symbol	imm		2678345						
ANR	2680915	Symbol	& width		2678345						
ANR	2680916	Symbol	i12		2678345						
ANR	2680917	Symbol	* val		2678345						
ANR	2680918	Symbol	info -> stream		2678345						
ANR	2680919	Symbol	* width		2678345						
ANR	2680920	Symbol	imm12		2678345						
ANR	2680921	Symbol	WRITEBACK_BIT_SET		2678345						
ANR	2680922	Symbol	value_in_comment		2678345						
ANR	2680923	Symbol	S		2678345						
ANR	2680924	Symbol	stream		2678345						
ANR	2680925	Symbol	U		2678345						
ANR	2680926	Symbol	sh		2678345						
ANR	2680927	Symbol	rot		2678345						
ANR	2680928	Symbol	W		2678345						
ANR	2680929	Symbol	* IFTHEN_COND		2678345						
ANR	2680930	Symbol	sm		2678345						
ANR	2680931	Symbol	* ++ c		2678345						
ANR	2680932	Symbol	Rm		2678345						
ANR	2680933	Symbol	arm_regnames		2678345						
ANR	2680934	Symbol	Rn		2678345						
ANR	2680935	Symbol	op		2678345						
ANR	2680936	Symbol	c		2678345						
ANR	2680937	Symbol	* insn		2678345						
ANR	2680938	Symbol	started		2678345						
ANR	2680939	Symbol	* c		2678345						
ANR	2680940	Symbol	off		2678345						
ANR	2680941	Symbol	i8		2678345						
ANR	2680942	Symbol	insn		2678345						
ANR	2680943	Symbol	pc		2678345						
ANR	2680944	Symbol	func		2678345						
ANR	2680945	Symbol	writeback		2678345						
ANR	2680946	Symbol	~3		2678345						
ANR	2680947	Symbol	sysm		2678345						
ANR	2680948	Symbol	width		2678345						
ANR	2680949	Symbol	print_insn_neon		2678345						
ANR	2680950	Symbol	FALSE		2678345						
ANR	2680951	Symbol	* info		2678345						
ANR	2680952	Symbol	insn -> mask		2678345						
ANR	2680953	Symbol	insn -> assembler		2678345						
ANR	2680954	Symbol	Sbit		2678345						
ANR	2680955	Symbol	msb		2678345						
ANR	2680956	Symbol	* reg		2678345						
ANR	2680957	Function	print_insn_data	6093:0:226031:226456							
ANR	2680958	FunctionDef	"print_insn_data (bfd_vma pc ATTRIBUTE_UNUSED , struct disassemble_info * info , long given)"		2680957	0					
ANR	2680959	CompoundStatement		6097:0:226138:226456	2680957	0					
ANR	2680960	SwitchStatement	switch ( info -> bytes_per_chunk )		2680957	0					
ANR	2680961	Condition	info -> bytes_per_chunk	6098:10:226150:226170	2680957	0	True				
ANR	2680962	PtrMemberAccess	info -> bytes_per_chunk		2680957	0					
ANR	2680963	Identifier	info		2680957	0					
ANR	2680964	Identifier	bytes_per_chunk		2680957	1					
ANR	2680965	CompoundStatement		3:4:38:38	2680957	1					
ANR	2680966	Label	case 1 :	6100:4:226183:226189	2680957	0	True				
ANR	2680967	ExpressionStatement	"info -> fprintf_func ( info -> stream , "".byte 0x%02lx"" , given )"	6101:6:226197:226254	2680957	1	True				
ANR	2680968	CallExpression	"info -> fprintf_func ( info -> stream , "".byte 0x%02lx"" , given )"		2680957	0					
ANR	2680969	Callee	info -> fprintf_func		2680957	0					
ANR	2680970	PtrMemberAccess	info -> fprintf_func		2680957	0					
ANR	2680971	Identifier	info		2680957	0					
ANR	2680972	Identifier	fprintf_func		2680957	1					
ANR	2680973	ArgumentList	info -> stream		2680957	1					
ANR	2680974	Argument	info -> stream		2680957	0					
ANR	2680975	PtrMemberAccess	info -> stream		2680957	0					
ANR	2680976	Identifier	info		2680957	0					
ANR	2680977	Identifier	stream		2680957	1					
ANR	2680978	Argument	""".byte 0x%02lx"""		2680957	1					
ANR	2680979	PrimaryExpression	""".byte 0x%02lx"""		2680957	0					
ANR	2680980	Argument	given		2680957	2					
ANR	2680981	Identifier	given		2680957	0					
ANR	2680982	BreakStatement	break ;	6102:6:226262:226267	2680957	2	True				
ANR	2680983	Label	case 2 :	6103:4:226273:226279	2680957	3	True				
ANR	2680984	ExpressionStatement	"info -> fprintf_func ( info -> stream , "".short 0x%04lx"" , given )"	6104:6:226287:226345	2680957	4	True				
ANR	2680985	CallExpression	"info -> fprintf_func ( info -> stream , "".short 0x%04lx"" , given )"		2680957	0					
ANR	2680986	Callee	info -> fprintf_func		2680957	0					
ANR	2680987	PtrMemberAccess	info -> fprintf_func		2680957	0					
ANR	2680988	Identifier	info		2680957	0					
ANR	2680989	Identifier	fprintf_func		2680957	1					
ANR	2680990	ArgumentList	info -> stream		2680957	1					
ANR	2680991	Argument	info -> stream		2680957	0					
ANR	2680992	PtrMemberAccess	info -> stream		2680957	0					
ANR	2680993	Identifier	info		2680957	0					
ANR	2680994	Identifier	stream		2680957	1					
ANR	2680995	Argument	""".short 0x%04lx"""		2680957	1					
ANR	2680996	PrimaryExpression	""".short 0x%04lx"""		2680957	0					
ANR	2680997	Argument	given		2680957	2					
ANR	2680998	Identifier	given		2680957	0					
ANR	2680999	BreakStatement	break ;	6105:6:226353:226358	2680957	5	True				
ANR	2681000	Label	case 4 :	6106:4:226364:226370	2680957	6	True				
ANR	2681001	ExpressionStatement	"info -> fprintf_func ( info -> stream , "".word 0x%08lx"" , given )"	6107:6:226378:226435	2680957	7	True				
ANR	2681002	CallExpression	"info -> fprintf_func ( info -> stream , "".word 0x%08lx"" , given )"		2680957	0					
ANR	2681003	Callee	info -> fprintf_func		2680957	0					
ANR	2681004	PtrMemberAccess	info -> fprintf_func		2680957	0					
ANR	2681005	Identifier	info		2680957	0					
ANR	2681006	Identifier	fprintf_func		2680957	1					
ANR	2681007	ArgumentList	info -> stream		2680957	1					
ANR	2681008	Argument	info -> stream		2680957	0					
ANR	2681009	PtrMemberAccess	info -> stream		2680957	0					
ANR	2681010	Identifier	info		2680957	0					
ANR	2681011	Identifier	stream		2680957	1					
ANR	2681012	Argument	""".word 0x%08lx"""		2680957	1					
ANR	2681013	PrimaryExpression	""".word 0x%08lx"""		2680957	0					
ANR	2681014	Argument	given		2680957	2					
ANR	2681015	Identifier	given		2680957	0					
ANR	2681016	BreakStatement	break ;	6108:6:226443:226448	2680957	8	True				
ANR	2681017	ReturnType	static void		2680957	1					
ANR	2681018	Identifier	print_insn_data		2680957	2					
ANR	2681019	ParameterList	"bfd_vma pc ATTRIBUTE_UNUSED , struct disassemble_info * info , long given"		2680957	3					
ANR	2681020	Parameter	bfd_vma pc ATTRIBUTE_UNUSED	6094:17:226060:226086	2680957	0	True				
ANR	2681021	ParameterType	bfd_vma pc		2680957	0					
ANR	2681022	Identifier	ATTRIBUTE_UNUSED		2680957	1					
ANR	2681023	Parameter	struct disassemble_info * info	6095:3:226092:226120	2680957	1	True				
ANR	2681024	ParameterType	struct disassemble_info *		2680957	0					
ANR	2681025	Identifier	info		2680957	1					
ANR	2681026	Parameter	long given	6096:3:226126:226135	2680957	2	True				
ANR	2681027	ParameterType	long		2680957	0					
ANR	2681028	Identifier	given		2680957	1					
ANR	2681029	CFGEntryNode	ENTRY		2680957		True				
ANR	2681030	CFGExitNode	EXIT		2680957		True				
ANR	2681031	Symbol	given		2680957						
ANR	2681032	Symbol	ATTRIBUTE_UNUSED		2680957						
ANR	2681033	Symbol	info -> bytes_per_chunk		2680957						
ANR	2681034	Symbol	* info		2680957						
ANR	2681035	Symbol	info -> stream		2680957						
ANR	2681036	Symbol	info		2680957						
ANR	2681037	DeclStmt									
ANR	2681038	Decl							const char	const char *	name
ANR	2681039	Function	disassembler_options_cmp	6138:0:227119:227485							
ANR	2681040	FunctionDef	"disassembler_options_cmp (const char * s1 , const char * s2)"		2681039	0					
ANR	2681041	CompoundStatement		6140:0:227181:227485	2681039	0					
ANR	2681042	IdentifierDeclStatement	"unsigned char c1 , c2 ;"	6141:2:227185:227205	2681039	0	True				
ANR	2681043	IdentifierDecl	c1		2681039	0					
ANR	2681044	IdentifierDeclType	unsigned char		2681039	0					
ANR	2681045	Identifier	c1		2681039	1					
ANR	2681046	IdentifierDecl	c2		2681039	1					
ANR	2681047	IdentifierDeclType	unsigned char		2681039	0					
ANR	2681048	Identifier	c2		2681039	1					
ANR	2681049	DoStatement	do		2681039	1					
ANR	2681050	CompoundStatement		5:4:35:35	2681039	0					
ANR	2681051	ExpressionStatement	c1 = ( unsigned char ) * s1 ++	6145:6:227225:227251	2681039	0	True				
ANR	2681052	AssignmentExpression	c1 = ( unsigned char ) * s1 ++		2681039	0		=			
ANR	2681053	Identifier	c1		2681039	0					
ANR	2681054	CastExpression	( unsigned char ) * s1 ++		2681039	1					
ANR	2681055	CastTarget	unsigned char		2681039	0					
ANR	2681056	UnaryOperationExpression	* s1 ++		2681039	1					
ANR	2681057	UnaryOperator	*		2681039	0					
ANR	2681058	PostIncDecOperationExpression	s1 ++		2681039	1					
ANR	2681059	Identifier	s1		2681039	0					
ANR	2681060	IncDec	++		2681039	1					
ANR	2681061	IfStatement	"if ( c1 == ',' )"		2681039	1					
ANR	2681062	Condition	"c1 == ','"	6146:10:227263:227271	2681039	0	True				
ANR	2681063	EqualityExpression	"c1 == ','"		2681039	0		==			
ANR	2681064	Identifier	c1		2681039	0					
ANR	2681065	PrimaryExpression	"','"		2681039	1					
ANR	2681066	CompoundStatement		7:21:92:92	2681039	1					
ANR	2681067	ExpressionStatement	c1 = '\\0'	6147:7:227283:227292	2681039	0	True				
ANR	2681068	AssignmentExpression	c1 = '\\0'		2681039	0		=			
ANR	2681069	Identifier	c1		2681039	0					
ANR	2681070	PrimaryExpression	'\\0'		2681039	1					
ANR	2681071	ExpressionStatement	c2 = ( unsigned char ) * s2 ++	6149:6:227308:227334	2681039	2	True				
ANR	2681072	AssignmentExpression	c2 = ( unsigned char ) * s2 ++		2681039	0		=			
ANR	2681073	Identifier	c2		2681039	0					
ANR	2681074	CastExpression	( unsigned char ) * s2 ++		2681039	1					
ANR	2681075	CastTarget	unsigned char		2681039	0					
ANR	2681076	UnaryOperationExpression	* s2 ++		2681039	1					
ANR	2681077	UnaryOperator	*		2681039	0					
ANR	2681078	PostIncDecOperationExpression	s2 ++		2681039	1					
ANR	2681079	Identifier	s2		2681039	0					
ANR	2681080	IncDec	++		2681039	1					
ANR	2681081	IfStatement	"if ( c2 == ',' )"		2681039	3					
ANR	2681082	Condition	"c2 == ','"	6150:10:227346:227354	2681039	0	True				
ANR	2681083	EqualityExpression	"c2 == ','"		2681039	0		==			
ANR	2681084	Identifier	c2		2681039	0					
ANR	2681085	PrimaryExpression	"','"		2681039	1					
ANR	2681086	CompoundStatement		11:21:175:175	2681039	1					
ANR	2681087	ExpressionStatement	c2 = '\\0'	6151:7:227366:227375	2681039	0	True				
ANR	2681088	AssignmentExpression	c2 = '\\0'		2681039	0		=			
ANR	2681089	Identifier	c2		2681039	0					
ANR	2681090	PrimaryExpression	'\\0'		2681039	1					
ANR	2681091	IfStatement	if ( c1 == '\\0' )		2681039	4					
ANR	2681092	Condition	c1 == '\\0'	6153:10:227395:227404	2681039	0	True				
ANR	2681093	EqualityExpression	c1 == '\\0'		2681039	0		==			
ANR	2681094	Identifier	c1		2681039	0					
ANR	2681095	PrimaryExpression	'\\0'		2681039	1					
ANR	2681096	CompoundStatement		14:22:225:225	2681039	1					
ANR	2681097	ReturnStatement	return c1 - c2 ;	6154:7:227416:227430	2681039	0	True				
ANR	2681098	AdditiveExpression	c1 - c2		2681039	0		-			
ANR	2681099	Identifier	c1		2681039	0					
ANR	2681100	Identifier	c2		2681039	1					
ANR	2681101	Condition	c1 == c2	6157:9:227455:227462	2681039	1	True				
ANR	2681102	EqualityExpression	c1 == c2		2681039	0		==			
ANR	2681103	Identifier	c1		2681039	0					
ANR	2681104	Identifier	c2		2681039	1					
ANR	2681105	ReturnStatement	return c1 - c2 ;	6159:2:227469:227483	2681039	2	True				
ANR	2681106	AdditiveExpression	c1 - c2		2681039	0		-			
ANR	2681107	Identifier	c1		2681039	0					
ANR	2681108	Identifier	c2		2681039	1					
ANR	2681109	ReturnType	int		2681039	1					
ANR	2681110	Identifier	disassembler_options_cmp		2681039	2					
ANR	2681111	ParameterList	"const char * s1 , const char * s2"		2681039	3					
ANR	2681112	Parameter	const char * s1	6139:26:227149:227162	2681039	0	True				
ANR	2681113	ParameterType	const char *		2681039	0					
ANR	2681114	Identifier	s1		2681039	1					
ANR	2681115	Parameter	const char * s2	6139:42:227165:227178	2681039	1	True				
ANR	2681116	ParameterType	const char *		2681039	0					
ANR	2681117	Identifier	s2		2681039	1					
ANR	2681118	CFGEntryNode	ENTRY		2681039		True				
ANR	2681119	CFGExitNode	EXIT		2681039		True				
ANR	2681120	Symbol	* s1 ++		2681039						
ANR	2681121	Symbol	* s2 ++		2681039						
ANR	2681122	Symbol	s1		2681039						
ANR	2681123	Symbol	c1		2681039						
ANR	2681124	Symbol	s2		2681039						
ANR	2681125	Symbol	c2		2681039						
ANR	2681126	Function	parse_arm_disassembler_options	6162:0:227488:228222							
ANR	2681127	FunctionDef	parse_arm_disassembler_options (char * options)		2681126	0					
ANR	2681128	CompoundStatement		6164:0:227547:228222	2681126	0					
ANR	2681129	IdentifierDeclStatement	char * opt ;	6165:2:227551:227560	2681126	0	True				
ANR	2681130	IdentifierDecl	* opt		2681126	0					
ANR	2681131	IdentifierDeclType	char *		2681126	0					
ANR	2681132	Identifier	opt		2681126	1					
ANR	2681133	Statement	FOR_EACH_DISASSEMBLER_OPTION	6167:2:227565:227592	2681126	1	True				
ANR	2681134	Statement	(	6167:31:227594:227594	2681126	2	True				
ANR	2681135	Statement	opt	6167:32:227595:227597	2681126	3	True				
ANR	2681136	Statement	","	6167:35:227598:227598	2681126	4	True				
ANR	2681137	Statement	options	6167:37:227600:227606	2681126	5	True				
ANR	2681138	Statement	)	6167:44:227607:227607	2681126	6	True				
ANR	2681139	CompoundStatement		5:4:65:65	2681126	7					
ANR	2681140	IfStatement	"if ( CONST_STRNEQ ( opt , ""reg-names-"" ) )"		2681126	0					
ANR	2681141	Condition	"CONST_STRNEQ ( opt , ""reg-names-"" )"	6169:10:227625:227656	2681126	0	True				
ANR	2681142	CallExpression	"CONST_STRNEQ ( opt , ""reg-names-"" )"		2681126	0					
ANR	2681143	Callee	CONST_STRNEQ		2681126	0					
ANR	2681144	Identifier	CONST_STRNEQ		2681126	0					
ANR	2681145	ArgumentList	opt		2681126	1					
ANR	2681146	Argument	opt		2681126	0					
ANR	2681147	Identifier	opt		2681126	0					
ANR	2681148	Argument	"""reg-names-"""		2681126	1					
ANR	2681149	PrimaryExpression	"""reg-names-"""		2681126	0					
ANR	2681150	CompoundStatement		8:3:117:131	2681126	1					
ANR	2681151	IdentifierDeclStatement	unsigned int i ;	6171:3:227665:227679	2681126	0	True				
ANR	2681152	IdentifierDecl	i		2681126	0					
ANR	2681153	IdentifierDeclType	unsigned int		2681126	0					
ANR	2681154	Identifier	i		2681126	1					
ANR	2681155	ForStatement	for ( i = 0 ; i < NUM_ARM_OPTIONS ; i ++ )		2681126	1					
ANR	2681156	ForInit	i = 0 ;	6172:8:227689:227694	2681126	0	True				
ANR	2681157	AssignmentExpression	i = 0		2681126	0		=			
ANR	2681158	Identifier	i		2681126	0					
ANR	2681159	PrimaryExpression	0		2681126	1					
ANR	2681160	Condition	i < NUM_ARM_OPTIONS	6172:15:227696:227714	2681126	1	True				
ANR	2681161	RelationalExpression	i < NUM_ARM_OPTIONS		2681126	0		<			
ANR	2681162	Identifier	i		2681126	0					
ANR	2681163	Identifier	NUM_ARM_OPTIONS		2681126	1					
ANR	2681164	PostIncDecOperationExpression	i ++	6172:36:227717:227719	2681126	2	True				
ANR	2681165	Identifier	i		2681126	0					
ANR	2681166	IncDec	++		2681126	1					
ANR	2681167	CompoundStatement		9:41:174:174	2681126	3					
ANR	2681168	IfStatement	"if ( disassembler_options_cmp ( opt , regnames [ i ] . name ) == 0 )"		2681126	0					
ANR	2681169	Condition	"disassembler_options_cmp ( opt , regnames [ i ] . name ) == 0"	6173:8:227732:227784	2681126	0	True				
ANR	2681170	EqualityExpression	"disassembler_options_cmp ( opt , regnames [ i ] . name ) == 0"		2681126	0		==			
ANR	2681171	CallExpression	"disassembler_options_cmp ( opt , regnames [ i ] . name )"		2681126	0					
ANR	2681172	Callee	disassembler_options_cmp		2681126	0					
ANR	2681173	Identifier	disassembler_options_cmp		2681126	0					
ANR	2681174	ArgumentList	opt		2681126	1					
ANR	2681175	Argument	opt		2681126	0					
ANR	2681176	Identifier	opt		2681126	0					
ANR	2681177	Argument	regnames [ i ] . name		2681126	1					
ANR	2681178	MemberAccess	regnames [ i ] . name		2681126	0					
ANR	2681179	ArrayIndexing	regnames [ i ]		2681126	0					
ANR	2681180	Identifier	regnames		2681126	0					
ANR	2681181	Identifier	i		2681126	1					
ANR	2681182	Identifier	name		2681126	1					
ANR	2681183	PrimaryExpression	0		2681126	1					
ANR	2681184	CompoundStatement		10:63:239:239	2681126	1					
ANR	2681185	ExpressionStatement	regname_selected = i	6174:5:227794:227814	2681126	0	True				
ANR	2681186	AssignmentExpression	regname_selected = i		2681126	0		=			
ANR	2681187	Identifier	regname_selected		2681126	0					
ANR	2681188	Identifier	i		2681126	1					
ANR	2681189	BreakStatement	break ;	6175:5:227821:227826	2681126	1	True				
ANR	2681190	IfStatement	if ( i >= NUM_ARM_OPTIONS )		2681126	2					
ANR	2681191	Condition	i >= NUM_ARM_OPTIONS	6179:7:227847:227866	2681126	0	True				
ANR	2681192	RelationalExpression	i >= NUM_ARM_OPTIONS		2681126	0		>=			
ANR	2681193	Identifier	i		2681126	0					
ANR	2681194	Identifier	NUM_ARM_OPTIONS		2681126	1					
ANR	2681195	CompoundStatement		16:29:321:321	2681126	1					
ANR	2681196	ExpressionStatement	"fprintf ( stderr , _ ( ""Unrecognised register name set: %s\\n"" ) , opt )"	6180:4:227875:227940	2681126	0	True				
ANR	2681197	CallExpression	"fprintf ( stderr , _ ( ""Unrecognised register name set: %s\\n"" ) , opt )"		2681126	0					
ANR	2681198	Callee	fprintf		2681126	0					
ANR	2681199	Identifier	fprintf		2681126	0					
ANR	2681200	ArgumentList	stderr		2681126	1					
ANR	2681201	Argument	stderr		2681126	0					
ANR	2681202	Identifier	stderr		2681126	0					
ANR	2681203	Argument	"_ ( ""Unrecognised register name set: %s\\n"" )"		2681126	1					
ANR	2681204	CallExpression	"_ ( ""Unrecognised register name set: %s\\n"" )"		2681126	0					
ANR	2681205	Callee	_		2681126	0					
ANR	2681206	Identifier	_		2681126	0					
ANR	2681207	ArgumentList	"""Unrecognised register name set: %s\\n"""		2681126	1					
ANR	2681208	Argument	"""Unrecognised register name set: %s\\n"""		2681126	0					
ANR	2681209	PrimaryExpression	"""Unrecognised register name set: %s\\n"""		2681126	0					
ANR	2681210	Argument	opt		2681126	2					
ANR	2681211	Identifier	opt		2681126	0					
ANR	2681212	ElseStatement	else		2681126	0					
ANR	2681213	IfStatement	"if ( CONST_STRNEQ ( opt , ""force-thumb"" ) )"		2681126	0					
ANR	2681214	Condition	"CONST_STRNEQ ( opt , ""force-thumb"" )"	6182:17:227964:227996	2681126	0	True				
ANR	2681215	CallExpression	"CONST_STRNEQ ( opt , ""force-thumb"" )"		2681126	0					
ANR	2681216	Callee	CONST_STRNEQ		2681126	0					
ANR	2681217	Identifier	CONST_STRNEQ		2681126	0					
ANR	2681218	ArgumentList	opt		2681126	1					
ANR	2681219	Argument	opt		2681126	0					
ANR	2681220	Identifier	opt		2681126	0					
ANR	2681221	Argument	"""force-thumb"""		2681126	1					
ANR	2681222	PrimaryExpression	"""force-thumb"""		2681126	0					
ANR	2681223	CompoundStatement		19:52:451:451	2681126	1					
ANR	2681224	ExpressionStatement	force_thumb = 1	6183:7:228008:228023	2681126	0	True				
ANR	2681225	AssignmentExpression	force_thumb = 1		2681126	0		=			
ANR	2681226	Identifier	force_thumb		2681126	0					
ANR	2681227	PrimaryExpression	1		2681126	1					
ANR	2681228	ElseStatement	else		2681126	0					
ANR	2681229	IfStatement	"if ( CONST_STRNEQ ( opt , ""no-force-thumb"" ) )"		2681126	0					
ANR	2681230	Condition	"CONST_STRNEQ ( opt , ""no-force-thumb"" )"	6184:17:228042:228077	2681126	0	True				
ANR	2681231	CallExpression	"CONST_STRNEQ ( opt , ""no-force-thumb"" )"		2681126	0					
ANR	2681232	Callee	CONST_STRNEQ		2681126	0					
ANR	2681233	Identifier	CONST_STRNEQ		2681126	0					
ANR	2681234	ArgumentList	opt		2681126	1					
ANR	2681235	Argument	opt		2681126	0					
ANR	2681236	Identifier	opt		2681126	0					
ANR	2681237	Argument	"""no-force-thumb"""		2681126	1					
ANR	2681238	PrimaryExpression	"""no-force-thumb"""		2681126	0					
ANR	2681239	CompoundStatement		21:55:532:532	2681126	1					
ANR	2681240	ExpressionStatement	force_thumb = 0	6185:7:228089:228104	2681126	0	True				
ANR	2681241	AssignmentExpression	force_thumb = 0		2681126	0		=			
ANR	2681242	Identifier	force_thumb		2681126	0					
ANR	2681243	PrimaryExpression	0		2681126	1					
ANR	2681244	ElseStatement	else		2681126	0					
ANR	2681245	CompoundStatement		23:13:571:571	2681126	0					
ANR	2681246	ExpressionStatement	"fprintf ( stderr , _ ( ""Unrecognised disassembler option: %s\\n"" ) , opt )"	6187:7:228128:228195	2681126	0	True				
ANR	2681247	CallExpression	"fprintf ( stderr , _ ( ""Unrecognised disassembler option: %s\\n"" ) , opt )"		2681126	0					
ANR	2681248	Callee	fprintf		2681126	0					
ANR	2681249	Identifier	fprintf		2681126	0					
ANR	2681250	ArgumentList	stderr		2681126	1					
ANR	2681251	Argument	stderr		2681126	0					
ANR	2681252	Identifier	stderr		2681126	0					
ANR	2681253	Argument	"_ ( ""Unrecognised disassembler option: %s\\n"" )"		2681126	1					
ANR	2681254	CallExpression	"_ ( ""Unrecognised disassembler option: %s\\n"" )"		2681126	0					
ANR	2681255	Callee	_		2681126	0					
ANR	2681256	Identifier	_		2681126	0					
ANR	2681257	ArgumentList	"""Unrecognised disassembler option: %s\\n"""		2681126	1					
ANR	2681258	Argument	"""Unrecognised disassembler option: %s\\n"""		2681126	0					
ANR	2681259	PrimaryExpression	"""Unrecognised disassembler option: %s\\n"""		2681126	0					
ANR	2681260	Argument	opt		2681126	2					
ANR	2681261	Identifier	opt		2681126	0					
ANR	2681262	ReturnStatement	return ;	6191:2:228214:228220	2681126	8	True				
ANR	2681263	ReturnType	static void		2681126	1					
ANR	2681264	Identifier	parse_arm_disassembler_options		2681126	2					
ANR	2681265	ParameterList	char * options		2681126	3					
ANR	2681266	Parameter	char * options	6163:32:227532:227544	2681126	0	True				
ANR	2681267	ParameterType	char *		2681126	0					
ANR	2681268	Identifier	options		2681126	1					
ANR	2681269	CFGEntryNode	ENTRY		2681126		True				
ANR	2681270	CFGExitNode	EXIT		2681126		True				
ANR	2681271	Symbol	NUM_ARM_OPTIONS		2681126						
ANR	2681272	Symbol	disassembler_options_cmp		2681126						
ANR	2681273	Symbol	force_thumb		2681126						
ANR	2681274	Symbol	i		2681126						
ANR	2681275	Symbol	stderr		2681126						
ANR	2681276	Symbol	regnames		2681126						
ANR	2681277	Symbol	opt		2681126						
ANR	2681278	Symbol	* i		2681126						
ANR	2681279	Symbol	options		2681126						
ANR	2681280	Symbol	CONST_STRNEQ		2681126						
ANR	2681281	Symbol	regname_selected		2681126						
ANR	2681282	Symbol	regnames [ i ] . name		2681126						
ANR	2681283	Symbol	* regnames		2681126						
ANR	2681284	Symbol	_		2681126						
ANR	2681285	DeclStmt									
ANR	2681286	Decl							bfd_boolean	"bfd_boolean ( bfd_vma pc , struct disassemble_info * info , enum map_type * map_symbol )"	mapping_symbol_for_insn
ANR	2681287	Function	find_ifthen_state	6201:0:228452:230593							
ANR	2681288	FunctionDef	"find_ifthen_state (bfd_vma pc , struct disassemble_info * info , bfd_boolean little)"		2681287	0					
ANR	2681289	CompoundStatement		6205:0:228556:230593	2681287	0					
ANR	2681290	IdentifierDeclStatement	unsigned char b [ 2 ] ;	6206:2:228560:228578	2681287	0	True				
ANR	2681291	IdentifierDecl	b [ 2 ]		2681287	0					
ANR	2681292	IdentifierDeclType	unsigned char [ 2 ]		2681287	0					
ANR	2681293	Identifier	b		2681287	1					
ANR	2681294	PrimaryExpression	2		2681287	2					
ANR	2681295	IdentifierDeclStatement	unsigned int insn ;	6207:2:228582:228599	2681287	1	True				
ANR	2681296	IdentifierDecl	insn		2681287	0					
ANR	2681297	IdentifierDeclType	unsigned int		2681287	0					
ANR	2681298	Identifier	insn		2681287	1					
ANR	2681299	IdentifierDeclStatement	int status ;	6208:2:228603:228613	2681287	2	True				
ANR	2681300	IdentifierDecl	status		2681287	0					
ANR	2681301	IdentifierDeclType	int		2681287	0					
ANR	2681302	Identifier	status		2681287	1					
ANR	2681303	IdentifierDeclStatement	int count ;	6211:2:228739:228748	2681287	3	True				
ANR	2681304	IdentifierDecl	count		2681287	0					
ANR	2681305	IdentifierDeclType	int		2681287	0					
ANR	2681306	Identifier	count		2681287	1					
ANR	2681307	IdentifierDeclStatement	int it_count ;	6212:2:228752:228764	2681287	4	True				
ANR	2681308	IdentifierDecl	it_count		2681287	0					
ANR	2681309	IdentifierDeclType	int		2681287	0					
ANR	2681310	Identifier	it_count		2681287	1					
ANR	2681311	IdentifierDeclStatement	unsigned int seen_it ;	6213:2:228768:228788	2681287	5	True				
ANR	2681312	IdentifierDecl	seen_it		2681287	0					
ANR	2681313	IdentifierDeclType	unsigned int		2681287	0					
ANR	2681314	Identifier	seen_it		2681287	1					
ANR	2681315	IdentifierDeclStatement	bfd_vma addr ;	6214:2:228792:228804	2681287	6	True				
ANR	2681316	IdentifierDecl	addr		2681287	0					
ANR	2681317	IdentifierDeclType	bfd_vma		2681287	0					
ANR	2681318	Identifier	addr		2681287	1					
ANR	2681319	ExpressionStatement	ifthen_address = pc	6216:2:228809:228828	2681287	7	True				
ANR	2681320	AssignmentExpression	ifthen_address = pc		2681287	0		=			
ANR	2681321	Identifier	ifthen_address		2681287	0					
ANR	2681322	Identifier	pc		2681287	1					
ANR	2681323	ExpressionStatement	ifthen_state = 0	6217:2:228832:228848	2681287	8	True				
ANR	2681324	AssignmentExpression	ifthen_state = 0		2681287	0		=			
ANR	2681325	Identifier	ifthen_state		2681287	0					
ANR	2681326	PrimaryExpression	0		2681287	1					
ANR	2681327	ExpressionStatement	addr = pc	6219:2:228853:228862	2681287	9	True				
ANR	2681328	AssignmentExpression	addr = pc		2681287	0		=			
ANR	2681329	Identifier	addr		2681287	0					
ANR	2681330	Identifier	pc		2681287	1					
ANR	2681331	ExpressionStatement	count = 1	6220:2:228866:228875	2681287	10	True				
ANR	2681332	AssignmentExpression	count = 1		2681287	0		=			
ANR	2681333	Identifier	count		2681287	0					
ANR	2681334	PrimaryExpression	1		2681287	1					
ANR	2681335	ExpressionStatement	it_count = 0	6221:2:228879:228891	2681287	11	True				
ANR	2681336	AssignmentExpression	it_count = 0		2681287	0		=			
ANR	2681337	Identifier	it_count		2681287	0					
ANR	2681338	PrimaryExpression	0		2681287	1					
ANR	2681339	ExpressionStatement	seen_it = 0	6222:2:228895:228906	2681287	12	True				
ANR	2681340	AssignmentExpression	seen_it = 0		2681287	0		=			
ANR	2681341	Identifier	seen_it		2681287	0					
ANR	2681342	PrimaryExpression	0		2681287	1					
ANR	2681343	ForStatement	for ( ; ; )		2681287	13					
ANR	2681344	CompoundStatement		23:4:585:585	2681287	0					
ANR	2681345	IfStatement	"if ( addr == 0 || info -> symbol_at_address_func ( addr , info ) )"		2681287	0					
ANR	2681346	Condition	"addr == 0 || info -> symbol_at_address_func ( addr , info )"	6228:10:229154:229207	2681287	0	True				
ANR	2681347	OrExpression	"addr == 0 || info -> symbol_at_address_func ( addr , info )"		2681287	0		||			
ANR	2681348	EqualityExpression	addr == 0		2681287	0		==			
ANR	2681349	Identifier	addr		2681287	0					
ANR	2681350	PrimaryExpression	0		2681287	1					
ANR	2681351	CallExpression	"info -> symbol_at_address_func ( addr , info )"		2681287	1					
ANR	2681352	Callee	info -> symbol_at_address_func		2681287	0					
ANR	2681353	PtrMemberAccess	info -> symbol_at_address_func		2681287	0					
ANR	2681354	Identifier	info		2681287	0					
ANR	2681355	Identifier	symbol_at_address_func		2681287	1					
ANR	2681356	ArgumentList	addr		2681287	1					
ANR	2681357	Argument	addr		2681287	0					
ANR	2681358	Identifier	addr		2681287	0					
ANR	2681359	Argument	info		2681287	1					
ANR	2681360	Identifier	info		2681287	0					
ANR	2681361	CompoundStatement		25:1:654:654	2681287	1					
ANR	2681362	IfStatement	if ( seen_it && ( count & 1 ) )		2681287	0					
ANR	2681363	Condition	seen_it && ( count & 1 )	6232:7:229317:229338	2681287	0	True				
ANR	2681364	AndExpression	seen_it && ( count & 1 )		2681287	0		&&			
ANR	2681365	Identifier	seen_it		2681287	0					
ANR	2681366	BitAndExpression	count & 1		2681287	1		&			
ANR	2681367	Identifier	count		2681287	0					
ANR	2681368	PrimaryExpression	1		2681287	1					
ANR	2681369	CompoundStatement		28:31:784:784	2681287	1					
ANR	2681370	BreakStatement	break ;	6233:4:229347:229352	2681287	0	True				
ANR	2681371	ReturnStatement	return ;	6236:3:229363:229369	2681287	1	True				
ANR	2681372	ExpressionStatement	addr -= 2	6238:6:229380:229389	2681287	1	True				
ANR	2681373	AssignmentExpression	addr -= 2		2681287	0		-=			
ANR	2681374	Identifier	addr		2681287	0					
ANR	2681375	PrimaryExpression	2		2681287	1					
ANR	2681376	ExpressionStatement	"status = info -> read_memory_func ( addr , ( bfd_byte * ) b , 2 , info )"	6239:6:229397:229460	2681287	2	True				
ANR	2681377	AssignmentExpression	"status = info -> read_memory_func ( addr , ( bfd_byte * ) b , 2 , info )"		2681287	0		=			
ANR	2681378	Identifier	status		2681287	0					
ANR	2681379	CallExpression	"info -> read_memory_func ( addr , ( bfd_byte * ) b , 2 , info )"		2681287	1					
ANR	2681380	Callee	info -> read_memory_func		2681287	0					
ANR	2681381	PtrMemberAccess	info -> read_memory_func		2681287	0					
ANR	2681382	Identifier	info		2681287	0					
ANR	2681383	Identifier	read_memory_func		2681287	1					
ANR	2681384	ArgumentList	addr		2681287	1					
ANR	2681385	Argument	addr		2681287	0					
ANR	2681386	Identifier	addr		2681287	0					
ANR	2681387	Argument	( bfd_byte * ) b		2681287	1					
ANR	2681388	CastExpression	( bfd_byte * ) b		2681287	0					
ANR	2681389	CastTarget	bfd_byte *		2681287	0					
ANR	2681390	Identifier	b		2681287	1					
ANR	2681391	Argument	2		2681287	2					
ANR	2681392	PrimaryExpression	2		2681287	0					
ANR	2681393	Argument	info		2681287	3					
ANR	2681394	Identifier	info		2681287	0					
ANR	2681395	IfStatement	if ( status )		2681287	3					
ANR	2681396	Condition	status	6240:10:229472:229477	2681287	0	True				
ANR	2681397	Identifier	status		2681287	0					
ANR	2681398	CompoundStatement		36:18:923:923	2681287	1					
ANR	2681399	ReturnStatement	return ;	6241:7:229489:229495	2681287	0	True				
ANR	2681400	IfStatement	if ( little )		2681287	4					
ANR	2681401	Condition	little	6244:10:229516:229521	2681287	0	True				
ANR	2681402	Identifier	little		2681287	0					
ANR	2681403	CompoundStatement		40:18:967:967	2681287	1					
ANR	2681404	ExpressionStatement	insn = ( b [ 0 ] ) | ( b [ 1 ] << 8 )	6245:7:229533:229560	2681287	0	True				
ANR	2681405	AssignmentExpression	insn = ( b [ 0 ] ) | ( b [ 1 ] << 8 )		2681287	0		=			
ANR	2681406	Identifier	insn		2681287	0					
ANR	2681407	InclusiveOrExpression	( b [ 0 ] ) | ( b [ 1 ] << 8 )		2681287	1		|			
ANR	2681408	ArrayIndexing	b [ 0 ]		2681287	0					
ANR	2681409	Identifier	b		2681287	0					
ANR	2681410	PrimaryExpression	0		2681287	1					
ANR	2681411	ShiftExpression	b [ 1 ] << 8		2681287	1		<<			
ANR	2681412	ArrayIndexing	b [ 1 ]		2681287	0					
ANR	2681413	Identifier	b		2681287	0					
ANR	2681414	PrimaryExpression	1		2681287	1					
ANR	2681415	PrimaryExpression	8		2681287	1					
ANR	2681416	ElseStatement	else		2681287	0					
ANR	2681417	CompoundStatement		42:13:1018:1018	2681287	0					
ANR	2681418	ExpressionStatement	insn = ( b [ 1 ] ) | ( b [ 0 ] << 8 )	6247:7:229584:229611	2681287	0	True				
ANR	2681419	AssignmentExpression	insn = ( b [ 1 ] ) | ( b [ 0 ] << 8 )		2681287	0		=			
ANR	2681420	Identifier	insn		2681287	0					
ANR	2681421	InclusiveOrExpression	( b [ 1 ] ) | ( b [ 0 ] << 8 )		2681287	1		|			
ANR	2681422	ArrayIndexing	b [ 1 ]		2681287	0					
ANR	2681423	Identifier	b		2681287	0					
ANR	2681424	PrimaryExpression	1		2681287	1					
ANR	2681425	ShiftExpression	b [ 0 ] << 8		2681287	1		<<			
ANR	2681426	ArrayIndexing	b [ 0 ]		2681287	0					
ANR	2681427	Identifier	b		2681287	0					
ANR	2681428	PrimaryExpression	0		2681287	1					
ANR	2681429	PrimaryExpression	8		2681287	1					
ANR	2681430	IfStatement	if ( seen_it )		2681287	5					
ANR	2681431	Condition	seen_it	6249:10:229631:229637	2681287	0	True				
ANR	2681432	Identifier	seen_it		2681287	0					
ANR	2681433	CompoundStatement		46:1:1084:1084	2681287	1					
ANR	2681434	IfStatement	if ( ( insn & 0xf800 ) < 0xe800 )		2681287	0					
ANR	2681435	Condition	( insn & 0xf800 ) < 0xe800	6251:7:229650:229673	2681287	0	True				
ANR	2681436	RelationalExpression	( insn & 0xf800 ) < 0xe800		2681287	0		<			
ANR	2681437	BitAndExpression	insn & 0xf800		2681287	0		&			
ANR	2681438	Identifier	insn		2681287	0					
ANR	2681439	PrimaryExpression	0xf800		2681287	1					
ANR	2681440	PrimaryExpression	0xe800		2681287	1					
ANR	2681441	CompoundStatement		48:5:1124:1124	2681287	1					
ANR	2681442	IfStatement	if ( count & 1 )		2681287	0					
ANR	2681443	Condition	count & 1	6256:11:229849:229857	2681287	0	True				
ANR	2681444	BitAndExpression	count & 1		2681287	0		&			
ANR	2681445	Identifier	count		2681287	0					
ANR	2681446	PrimaryExpression	1		2681287	1					
ANR	2681447	CompoundStatement		52:22:1303:1303	2681287	1					
ANR	2681448	BreakStatement	break ;	6257:8:229870:229875	2681287	0	True				
ANR	2681449	ExpressionStatement	seen_it = 0	6259:7:229893:229904	2681287	1	True				
ANR	2681450	AssignmentExpression	seen_it = 0		2681287	0		=			
ANR	2681451	Identifier	seen_it		2681287	0					
ANR	2681452	PrimaryExpression	0		2681287	1					
ANR	2681453	IfStatement	if ( ( insn & 0xff00 ) == 0xbf00 && ( insn & 0xf ) != 0 )		2681287	6					
ANR	2681454	Condition	( insn & 0xff00 ) == 0xbf00 && ( insn & 0xf ) != 0	6262:10:229926:229971	2681287	0	True				
ANR	2681455	AndExpression	( insn & 0xff00 ) == 0xbf00 && ( insn & 0xf ) != 0		2681287	0		&&			
ANR	2681456	EqualityExpression	( insn & 0xff00 ) == 0xbf00		2681287	0		==			
ANR	2681457	BitAndExpression	insn & 0xff00		2681287	0		&			
ANR	2681458	Identifier	insn		2681287	0					
ANR	2681459	PrimaryExpression	0xff00		2681287	1					
ANR	2681460	PrimaryExpression	0xbf00		2681287	1					
ANR	2681461	EqualityExpression	( insn & 0xf ) != 0		2681287	1		!=			
ANR	2681462	BitAndExpression	insn & 0xf		2681287	0		&			
ANR	2681463	Identifier	insn		2681287	0					
ANR	2681464	PrimaryExpression	0xf		2681287	1					
ANR	2681465	PrimaryExpression	0		2681287	1					
ANR	2681466	CompoundStatement		61:3:1456:1519	2681287	1					
ANR	2681467	IdentifierDeclStatement	enum map_type type = MAP_ARM ;	6264:3:229980:230008	2681287	0	True				
ANR	2681468	IdentifierDecl	type = MAP_ARM		2681287	0					
ANR	2681469	IdentifierDeclType	enum map_type		2681287	0					
ANR	2681470	Identifier	type		2681287	1					
ANR	2681471	AssignmentExpression	type = MAP_ARM		2681287	2		=			
ANR	2681472	Identifier	MAP_ARM		2681287	0					
ANR	2681473	Identifier	MAP_ARM		2681287	1					
ANR	2681474	IdentifierDeclStatement	"bfd_boolean found = mapping_symbol_for_insn ( addr , info , & type ) ;"	6265:3:230013:230076	2681287	1	True				
ANR	2681475	IdentifierDecl	"found = mapping_symbol_for_insn ( addr , info , & type )"		2681287	0					
ANR	2681476	IdentifierDeclType	bfd_boolean		2681287	0					
ANR	2681477	Identifier	found		2681287	1					
ANR	2681478	AssignmentExpression	"found = mapping_symbol_for_insn ( addr , info , & type )"		2681287	2		=			
ANR	2681479	Identifier	found		2681287	0					
ANR	2681480	CallExpression	"mapping_symbol_for_insn ( addr , info , & type )"		2681287	1					
ANR	2681481	Callee	mapping_symbol_for_insn		2681287	0					
ANR	2681482	Identifier	mapping_symbol_for_insn		2681287	0					
ANR	2681483	ArgumentList	addr		2681287	1					
ANR	2681484	Argument	addr		2681287	0					
ANR	2681485	Identifier	addr		2681287	0					
ANR	2681486	Argument	info		2681287	1					
ANR	2681487	Identifier	info		2681287	0					
ANR	2681488	Argument	& type		2681287	2					
ANR	2681489	UnaryOperationExpression	& type		2681287	0					
ANR	2681490	UnaryOperator	&		2681287	0					
ANR	2681491	Identifier	type		2681287	1					
ANR	2681492	IfStatement	if ( ! found || ( found && type == MAP_THUMB ) )		2681287	2					
ANR	2681493	Condition	! found || ( found && type == MAP_THUMB )	6267:7:230086:230123	2681287	0	True				
ANR	2681494	OrExpression	! found || ( found && type == MAP_THUMB )		2681287	0		||			
ANR	2681495	UnaryOperationExpression	! found		2681287	0					
ANR	2681496	UnaryOperator	!		2681287	0					
ANR	2681497	Identifier	found		2681287	1					
ANR	2681498	AndExpression	found && type == MAP_THUMB		2681287	1		&&			
ANR	2681499	Identifier	found		2681287	0					
ANR	2681500	EqualityExpression	type == MAP_THUMB		2681287	1		==			
ANR	2681501	Identifier	type		2681287	0					
ANR	2681502	Identifier	MAP_THUMB		2681287	1					
ANR	2681503	CompoundStatement		64:5:1574:1574	2681287	1					
ANR	2681504	ExpressionStatement	seen_it = insn	6270:7:230187:230201	2681287	0	True				
ANR	2681505	AssignmentExpression	seen_it = insn		2681287	0		=			
ANR	2681506	Identifier	seen_it		2681287	0					
ANR	2681507	Identifier	insn		2681287	1					
ANR	2681508	ExpressionStatement	it_count = count >> 1	6271:7:230210:230231	2681287	1	True				
ANR	2681509	AssignmentExpression	it_count = count >> 1		2681287	0		=			
ANR	2681510	Identifier	it_count		2681287	0					
ANR	2681511	ShiftExpression	count >> 1		2681287	1		>>			
ANR	2681512	Identifier	count		2681287	0					
ANR	2681513	PrimaryExpression	1		2681287	1					
ANR	2681514	IfStatement	if ( ( insn & 0xf800 ) >= 0xe800 )		2681287	7					
ANR	2681515	Condition	( insn & 0xf800 ) >= 0xe800	6274:5:230248:230272	2681287	0	True				
ANR	2681516	RelationalExpression	( insn & 0xf800 ) >= 0xe800		2681287	0		>=			
ANR	2681517	BitAndExpression	insn & 0xf800		2681287	0		&			
ANR	2681518	Identifier	insn		2681287	0					
ANR	2681519	PrimaryExpression	0xf800		2681287	1					
ANR	2681520	PrimaryExpression	0xe800		2681287	1					
ANR	2681521	CompoundStatement		70:32:1718:1718	2681287	1					
ANR	2681522	ExpressionStatement	count ++	6275:2:230279:230286	2681287	0	True				
ANR	2681523	PostIncDecOperationExpression	count ++		2681287	0					
ANR	2681524	Identifier	count		2681287	0					
ANR	2681525	IncDec	++		2681287	1					
ANR	2681526	ElseStatement	else		2681287	0					
ANR	2681527	CompoundStatement		72:8:1739:1739	2681287	0					
ANR	2681528	ExpressionStatement	count = ( count + 2 ) | 1	6277:2:230300:230323	2681287	0	True				
ANR	2681529	AssignmentExpression	count = ( count + 2 ) | 1		2681287	0		=			
ANR	2681530	Identifier	count		2681287	0					
ANR	2681531	InclusiveOrExpression	( count + 2 ) | 1		2681287	1		|			
ANR	2681532	AdditiveExpression	count + 2		2681287	0		+			
ANR	2681533	Identifier	count		2681287	0					
ANR	2681534	PrimaryExpression	2		2681287	1					
ANR	2681535	PrimaryExpression	1		2681287	1					
ANR	2681536	IfStatement	if ( count >= 8 && ! seen_it )		2681287	8					
ANR	2681537	Condition	count >= 8 && ! seen_it	6280:5:230383:230404	2681287	0	True				
ANR	2681538	AndExpression	count >= 8 && ! seen_it		2681287	0		&&			
ANR	2681539	RelationalExpression	count >= 8		2681287	0		>=			
ANR	2681540	Identifier	count		2681287	0					
ANR	2681541	PrimaryExpression	8		2681287	1					
ANR	2681542	UnaryOperationExpression	! seen_it		2681287	1					
ANR	2681543	UnaryOperator	!		2681287	0					
ANR	2681544	Identifier	seen_it		2681287	1					
ANR	2681545	CompoundStatement		76:29:1850:1850	2681287	1					
ANR	2681546	ReturnStatement	return ;	6281:2:230411:230417	2681287	0	True				
ANR	2681547	ExpressionStatement	ifthen_state = ( seen_it & 0xe0 ) | ( ( seen_it << it_count ) & 0x1f )	6285:2:230467:230531	2681287	14	True				
ANR	2681548	AssignmentExpression	ifthen_state = ( seen_it & 0xe0 ) | ( ( seen_it << it_count ) & 0x1f )		2681287	0		=			
ANR	2681549	Identifier	ifthen_state		2681287	0					
ANR	2681550	InclusiveOrExpression	( seen_it & 0xe0 ) | ( ( seen_it << it_count ) & 0x1f )		2681287	1		|			
ANR	2681551	BitAndExpression	seen_it & 0xe0		2681287	0		&			
ANR	2681552	Identifier	seen_it		2681287	0					
ANR	2681553	PrimaryExpression	0xe0		2681287	1					
ANR	2681554	BitAndExpression	( seen_it << it_count ) & 0x1f		2681287	1		&			
ANR	2681555	ShiftExpression	seen_it << it_count		2681287	0		<<			
ANR	2681556	Identifier	seen_it		2681287	0					
ANR	2681557	Identifier	it_count		2681287	1					
ANR	2681558	PrimaryExpression	0x1f		2681287	1					
ANR	2681559	IfStatement	if ( ( ifthen_state & 0xf ) == 0 )		2681287	15					
ANR	2681560	Condition	( ifthen_state & 0xf ) == 0	6286:6:230539:230563	2681287	0	True				
ANR	2681561	EqualityExpression	( ifthen_state & 0xf ) == 0		2681287	0		==			
ANR	2681562	BitAndExpression	ifthen_state & 0xf		2681287	0		&			
ANR	2681563	Identifier	ifthen_state		2681287	0					
ANR	2681564	PrimaryExpression	0xf		2681287	1					
ANR	2681565	PrimaryExpression	0		2681287	1					
ANR	2681566	CompoundStatement		82:33:2009:2009	2681287	1					
ANR	2681567	ExpressionStatement	ifthen_state = 0	6287:3:230571:230587	2681287	0	True				
ANR	2681568	AssignmentExpression	ifthen_state = 0		2681287	0		=			
ANR	2681569	Identifier	ifthen_state		2681287	0					
ANR	2681570	PrimaryExpression	0		2681287	1					
ANR	2681571	ReturnType	static void		2681287	1					
ANR	2681572	Identifier	find_ifthen_state		2681287	2					
ANR	2681573	ParameterList	"bfd_vma pc , struct disassemble_info * info , bfd_boolean little"		2681287	3					
ANR	2681574	Parameter	bfd_vma pc	6202:19:228483:228492	2681287	0	True				
ANR	2681575	ParameterType	bfd_vma		2681287	0					
ANR	2681576	Identifier	pc		2681287	1					
ANR	2681577	Parameter	struct disassemble_info * info	6203:5:228500:228528	2681287	1	True				
ANR	2681578	ParameterType	struct disassemble_info *		2681287	0					
ANR	2681579	Identifier	info		2681287	1					
ANR	2681580	Parameter	bfd_boolean little	6204:5:228536:228553	2681287	2	True				
ANR	2681581	ParameterType	bfd_boolean		2681287	0					
ANR	2681582	Identifier	little		2681287	1					
ANR	2681583	CFGEntryNode	ENTRY		2681287		True				
ANR	2681584	CFGExitNode	EXIT		2681287		True				
ANR	2681585	InfiniteForNode	true		2681287		True				
ANR	2681586	Symbol	MAP_THUMB		2681287						
ANR	2681587	Symbol	b		2681287						
ANR	2681588	Symbol	mapping_symbol_for_insn		2681287						
ANR	2681589	Symbol	& type		2681287						
ANR	2681590	Symbol	seen_it		2681287						
ANR	2681591	Symbol	MAP_ARM		2681287						
ANR	2681592	Symbol	count		2681287						
ANR	2681593	Symbol	it_count		2681287						
ANR	2681594	Symbol	info -> symbol_at_address_func		2681287						
ANR	2681595	Symbol	* b		2681287						
ANR	2681596	Symbol	type		2681287						
ANR	2681597	Symbol	insn		2681287						
ANR	2681598	Symbol	pc		2681287						
ANR	2681599	Symbol	ifthen_address		2681287						
ANR	2681600	Symbol	found		2681287						
ANR	2681601	Symbol	ifthen_state		2681287						
ANR	2681602	Symbol	info -> read_memory_func		2681287						
ANR	2681603	Symbol	* info		2681287						
ANR	2681604	Symbol	addr		2681287						
ANR	2681605	Symbol	info		2681287						
ANR	2681606	Symbol	little		2681287						
ANR	2681607	Symbol	status		2681287						
ANR	2681608	Function	is_mapping_symbol	6294:0:230682:231116							
ANR	2681609	FunctionDef	"is_mapping_symbol (struct disassemble_info * info , int n , enum map_type * map_type)"		2681608	0					
ANR	2681610	CompoundStatement		6297:0:230780:231116	2681608	0					
ANR	2681611	IdentifierDeclStatement	const char * name ;	6298:2:230784:230800	2681608	0	True				
ANR	2681612	IdentifierDecl	* name		2681608	0					
ANR	2681613	IdentifierDeclType	const char *		2681608	0					
ANR	2681614	Identifier	name		2681608	1					
ANR	2681615	ExpressionStatement	name = bfd_asymbol_name ( info -> symtab [ n ] )	6300:2:230805:230846	2681608	1	True				
ANR	2681616	AssignmentExpression	name = bfd_asymbol_name ( info -> symtab [ n ] )		2681608	0		=			
ANR	2681617	Identifier	name		2681608	0					
ANR	2681618	CallExpression	bfd_asymbol_name ( info -> symtab [ n ] )		2681608	1					
ANR	2681619	Callee	bfd_asymbol_name		2681608	0					
ANR	2681620	Identifier	bfd_asymbol_name		2681608	0					
ANR	2681621	ArgumentList	info -> symtab [ n ]		2681608	1					
ANR	2681622	Argument	info -> symtab [ n ]		2681608	0					
ANR	2681623	ArrayIndexing	info -> symtab [ n ]		2681608	0					
ANR	2681624	PtrMemberAccess	info -> symtab		2681608	0					
ANR	2681625	Identifier	info		2681608	0					
ANR	2681626	Identifier	symtab		2681608	1					
ANR	2681627	Identifier	n		2681608	1					
ANR	2681628	IfStatement	if ( name [ 0 ] == '$' && ( name [ 1 ] == 'a' || name [ 1 ] == 't' || name [ 1 ] == 'd' ) && ( name [ 2 ] == 0 || name [ 2 ] == '.' ) )		2681608	2					
ANR	2681629	Condition	name [ 0 ] == '$' && ( name [ 1 ] == 'a' || name [ 1 ] == 't' || name [ 1 ] == 'd' ) && ( name [ 2 ] == 0 || name [ 2 ] == '.' )	6301:6:230854:230965	2681608	0	True				
ANR	2681630	AndExpression	name [ 0 ] == '$' && ( name [ 1 ] == 'a' || name [ 1 ] == 't' || name [ 1 ] == 'd' ) && ( name [ 2 ] == 0 || name [ 2 ] == '.' )		2681608	0		&&			
ANR	2681631	EqualityExpression	name [ 0 ] == '$'		2681608	0		==			
ANR	2681632	ArrayIndexing	name [ 0 ]		2681608	0					
ANR	2681633	Identifier	name		2681608	0					
ANR	2681634	PrimaryExpression	0		2681608	1					
ANR	2681635	PrimaryExpression	'$'		2681608	1					
ANR	2681636	AndExpression	( name [ 1 ] == 'a' || name [ 1 ] == 't' || name [ 1 ] == 'd' ) && ( name [ 2 ] == 0 || name [ 2 ] == '.' )		2681608	1		&&			
ANR	2681637	OrExpression	name [ 1 ] == 'a' || name [ 1 ] == 't' || name [ 1 ] == 'd'		2681608	0		||			
ANR	2681638	EqualityExpression	name [ 1 ] == 'a'		2681608	0		==			
ANR	2681639	ArrayIndexing	name [ 1 ]		2681608	0					
ANR	2681640	Identifier	name		2681608	0					
ANR	2681641	PrimaryExpression	1		2681608	1					
ANR	2681642	PrimaryExpression	'a'		2681608	1					
ANR	2681643	OrExpression	name [ 1 ] == 't' || name [ 1 ] == 'd'		2681608	1		||			
ANR	2681644	EqualityExpression	name [ 1 ] == 't'		2681608	0		==			
ANR	2681645	ArrayIndexing	name [ 1 ]		2681608	0					
ANR	2681646	Identifier	name		2681608	0					
ANR	2681647	PrimaryExpression	1		2681608	1					
ANR	2681648	PrimaryExpression	't'		2681608	1					
ANR	2681649	EqualityExpression	name [ 1 ] == 'd'		2681608	1		==			
ANR	2681650	ArrayIndexing	name [ 1 ]		2681608	0					
ANR	2681651	Identifier	name		2681608	0					
ANR	2681652	PrimaryExpression	1		2681608	1					
ANR	2681653	PrimaryExpression	'd'		2681608	1					
ANR	2681654	OrExpression	name [ 2 ] == 0 || name [ 2 ] == '.'		2681608	1		||			
ANR	2681655	EqualityExpression	name [ 2 ] == 0		2681608	0		==			
ANR	2681656	ArrayIndexing	name [ 2 ]		2681608	0					
ANR	2681657	Identifier	name		2681608	0					
ANR	2681658	PrimaryExpression	2		2681608	1					
ANR	2681659	PrimaryExpression	0		2681608	1					
ANR	2681660	EqualityExpression	name [ 2 ] == '.'		2681608	1		==			
ANR	2681661	ArrayIndexing	name [ 2 ]		2681608	0					
ANR	2681662	Identifier	name		2681608	0					
ANR	2681663	PrimaryExpression	2		2681608	1					
ANR	2681664	PrimaryExpression	'.'		2681608	1					
ANR	2681665	CompoundStatement		7:4:191:191	2681608	1					
ANR	2681666	ExpressionStatement	* map_type = ( ( name [ 1 ] == 'a' ) ? MAP_ARM : ( name [ 1 ] == 't' ) ? MAP_THUMB : MAP_DATA )	6304:6:230980:231072	2681608	0	True				
ANR	2681667	AssignmentExpression	* map_type = ( ( name [ 1 ] == 'a' ) ? MAP_ARM : ( name [ 1 ] == 't' ) ? MAP_THUMB : MAP_DATA )		2681608	0		=			
ANR	2681668	UnaryOperationExpression	* map_type		2681608	0					
ANR	2681669	UnaryOperator	*		2681608	0					
ANR	2681670	Identifier	map_type		2681608	1					
ANR	2681671	ConditionalExpression	( name [ 1 ] == 'a' ) ? MAP_ARM : ( name [ 1 ] == 't' ) ? MAP_THUMB : MAP_DATA		2681608	1					
ANR	2681672	Condition	name [ 1 ] == 'a'		2681608	0					
ANR	2681673	EqualityExpression	name [ 1 ] == 'a'		2681608	0		==			
ANR	2681674	ArrayIndexing	name [ 1 ]		2681608	0					
ANR	2681675	Identifier	name		2681608	0					
ANR	2681676	PrimaryExpression	1		2681608	1					
ANR	2681677	PrimaryExpression	'a'		2681608	1					
ANR	2681678	Identifier	MAP_ARM		2681608	1					
ANR	2681679	ConditionalExpression	( name [ 1 ] == 't' ) ? MAP_THUMB : MAP_DATA		2681608	2					
ANR	2681680	Condition	name [ 1 ] == 't'		2681608	0					
ANR	2681681	EqualityExpression	name [ 1 ] == 't'		2681608	0		==			
ANR	2681682	ArrayIndexing	name [ 1 ]		2681608	0					
ANR	2681683	Identifier	name		2681608	0					
ANR	2681684	PrimaryExpression	1		2681608	1					
ANR	2681685	PrimaryExpression	't'		2681608	1					
ANR	2681686	Identifier	MAP_THUMB		2681608	1					
ANR	2681687	Identifier	MAP_DATA		2681608	2					
ANR	2681688	ReturnStatement	return TRUE ;	6307:6:231080:231091	2681608	1	True				
ANR	2681689	Identifier	TRUE		2681608	0					
ANR	2681690	ReturnStatement	return FALSE ;	6310:2:231102:231114	2681608	3	True				
ANR	2681691	Identifier	FALSE		2681608	0					
ANR	2681692	ReturnType	static int		2681608	1					
ANR	2681693	Identifier	is_mapping_symbol		2681608	2					
ANR	2681694	ParameterList	"struct disassemble_info * info , int n , enum map_type * map_type"		2681608	3					
ANR	2681695	Parameter	struct disassemble_info * info	6295:19:230712:230740	2681608	0	True				
ANR	2681696	ParameterType	struct disassemble_info *		2681608	0					
ANR	2681697	Identifier	info		2681608	1					
ANR	2681698	Parameter	int n	6295:50:230743:230747	2681608	1	True				
ANR	2681699	ParameterType	int		2681608	0					
ANR	2681700	Identifier	n		2681608	1					
ANR	2681701	Parameter	enum map_type * map_type	6296:5:230755:230777	2681608	2	True				
ANR	2681702	ParameterType	enum map_type *		2681608	0					
ANR	2681703	Identifier	map_type		2681608	1					
ANR	2681704	CFGEntryNode	ENTRY		2681608		True				
ANR	2681705	CFGExitNode	EXIT		2681608		True				
ANR	2681706	Symbol	* name		2681608						
ANR	2681707	Symbol	MAP_DATA		2681608						
ANR	2681708	Symbol	MAP_THUMB		2681608						
ANR	2681709	Symbol	* * info		2681608						
ANR	2681710	Symbol	MAP_ARM		2681608						
ANR	2681711	Symbol	TRUE		2681608						
ANR	2681712	Symbol	n		2681608						
ANR	2681713	Symbol	* info -> symtab		2681608						
ANR	2681714	Symbol	map_type		2681608						
ANR	2681715	Symbol	* map_type		2681608						
ANR	2681716	Symbol	name		2681608						
ANR	2681717	Symbol	* n		2681608						
ANR	2681718	Symbol	FALSE		2681608						
ANR	2681719	Symbol	* info		2681608						
ANR	2681720	Symbol	bfd_asymbol_name		2681608						
ANR	2681721	Symbol	info -> symtab		2681608						
ANR	2681722	Symbol	info		2681608						
ANR	2681723	Function	get_map_sym_type	6316:0:231233:231542							
ANR	2681724	FunctionDef	"get_map_sym_type (struct disassemble_info * info , int n , enum map_type * map_type)"		2681723	0					
ANR	2681725	CompoundStatement		6320:0:231333:231542	2681723	0					
ANR	2681726	IfStatement	if ( info -> section != NULL && info -> section != info -> symtab [ n ] -> section )		2681723	0					
ANR	2681727	Condition	info -> section != NULL && info -> section != info -> symtab [ n ] -> section	6322:6:231402:231467	2681723	0	True				
ANR	2681728	AndExpression	info -> section != NULL && info -> section != info -> symtab [ n ] -> section		2681723	0		&&			
ANR	2681729	EqualityExpression	info -> section != NULL		2681723	0		!=			
ANR	2681730	PtrMemberAccess	info -> section		2681723	0					
ANR	2681731	Identifier	info		2681723	0					
ANR	2681732	Identifier	section		2681723	1					
ANR	2681733	Identifier	NULL		2681723	1					
ANR	2681734	EqualityExpression	info -> section != info -> symtab [ n ] -> section		2681723	1		!=			
ANR	2681735	PtrMemberAccess	info -> section		2681723	0					
ANR	2681736	Identifier	info		2681723	0					
ANR	2681737	Identifier	section		2681723	1					
ANR	2681738	PtrMemberAccess	info -> symtab [ n ] -> section		2681723	1					
ANR	2681739	ArrayIndexing	info -> symtab [ n ]		2681723	0					
ANR	2681740	PtrMemberAccess	info -> symtab		2681723	0					
ANR	2681741	Identifier	info		2681723	0					
ANR	2681742	Identifier	symtab		2681723	1					
ANR	2681743	Identifier	n		2681723	1					
ANR	2681744	Identifier	section		2681723	1					
ANR	2681745	CompoundStatement		3:74:136:136	2681723	1					
ANR	2681746	ReturnStatement	return FALSE ;	6323:3:231475:231487	2681723	0	True				
ANR	2681747	Identifier	FALSE		2681723	0					
ANR	2681748	ReturnStatement	"return is_mapping_symbol ( info , n , map_type ) ;"	6326:2:231496:231540	2681723	1	True				
ANR	2681749	CallExpression	"is_mapping_symbol ( info , n , map_type )"		2681723	0					
ANR	2681750	Callee	is_mapping_symbol		2681723	0					
ANR	2681751	Identifier	is_mapping_symbol		2681723	0					
ANR	2681752	ArgumentList	info		2681723	1					
ANR	2681753	Argument	info		2681723	0					
ANR	2681754	Identifier	info		2681723	0					
ANR	2681755	Argument	n		2681723	1					
ANR	2681756	Identifier	n		2681723	0					
ANR	2681757	Argument	map_type		2681723	2					
ANR	2681758	Identifier	map_type		2681723	0					
ANR	2681759	ReturnType	static int		2681723	1					
ANR	2681760	Identifier	get_map_sym_type		2681723	2					
ANR	2681761	ParameterList	"struct disassemble_info * info , int n , enum map_type * map_type"		2681723	3					
ANR	2681762	Parameter	struct disassemble_info * info	6317:18:231262:231290	2681723	0	True				
ANR	2681763	ParameterType	struct disassemble_info *		2681723	0					
ANR	2681764	Identifier	info		2681723	1					
ANR	2681765	Parameter	int n	6318:4:231297:231301	2681723	1	True				
ANR	2681766	ParameterType	int		2681723	0					
ANR	2681767	Identifier	n		2681723	1					
ANR	2681768	Parameter	enum map_type * map_type	6319:4:231308:231330	2681723	2	True				
ANR	2681769	ParameterType	enum map_type *		2681723	0					
ANR	2681770	Identifier	map_type		2681723	1					
ANR	2681771	CFGEntryNode	ENTRY		2681723		True				
ANR	2681772	CFGExitNode	EXIT		2681723		True				
ANR	2681773	Symbol	* * info		2681723						
ANR	2681774	Symbol	* * * info		2681723						
ANR	2681775	Symbol	NULL		2681723						
ANR	2681776	Symbol	info -> section		2681723						
ANR	2681777	Symbol	* * info -> symtab		2681723						
ANR	2681778	Symbol	n		2681723						
ANR	2681779	Symbol	* info -> symtab		2681723						
ANR	2681780	Symbol	map_type		2681723						
ANR	2681781	Symbol	* n		2681723						
ANR	2681782	Symbol	FALSE		2681723						
ANR	2681783	Symbol	* info		2681723						
ANR	2681784	Symbol	info -> symtab [ n ] -> section		2681723						
ANR	2681785	Symbol	* * n		2681723						
ANR	2681786	Symbol	is_mapping_symbol		2681723						
ANR	2681787	Symbol	info -> symtab		2681723						
ANR	2681788	Symbol	info		2681723						
ANR	2681789	Function	get_sym_code_type	6332:0:231663:232408							
ANR	2681790	FunctionDef	"get_sym_code_type (struct disassemble_info * info , int n , enum map_type * map_type)"		2681789	0					
ANR	2681791	CompoundStatement		6336:0:231766:232408	2681789	0					
ANR	2681792	ReturnStatement	return FALSE ;	6337:0:231768:231780	2681789	0	True				
ANR	2681793	Identifier	FALSE		2681789	0					
ANR	2681794	IdentifierDeclStatement	elf_symbol_type * es ;	6339:2:231790:231809	2681789	1	True				
ANR	2681795	IdentifierDecl	* es		2681789	0					
ANR	2681796	IdentifierDeclType	elf_symbol_type *		2681789	0					
ANR	2681797	Identifier	es		2681789	1					
ANR	2681798	IdentifierDeclStatement	unsigned int type ;	6340:2:231813:231830	2681789	2	True				
ANR	2681799	IdentifierDecl	type		2681789	0					
ANR	2681800	IdentifierDeclType	unsigned int		2681789	0					
ANR	2681801	Identifier	type		2681789	1					
ANR	2681802	IfStatement	if ( info -> section != NULL && info -> section != info -> symtab [ n ] -> section )		2681789	3					
ANR	2681803	Condition	info -> section != NULL && info -> section != info -> symtab [ n ] -> section	6343:6:231900:231965	2681789	0	True				
ANR	2681804	AndExpression	info -> section != NULL && info -> section != info -> symtab [ n ] -> section		2681789	0		&&			
ANR	2681805	EqualityExpression	info -> section != NULL		2681789	0		!=			
ANR	2681806	PtrMemberAccess	info -> section		2681789	0					
ANR	2681807	Identifier	info		2681789	0					
ANR	2681808	Identifier	section		2681789	1					
ANR	2681809	Identifier	NULL		2681789	1					
ANR	2681810	EqualityExpression	info -> section != info -> symtab [ n ] -> section		2681789	1		!=			
ANR	2681811	PtrMemberAccess	info -> section		2681789	0					
ANR	2681812	Identifier	info		2681789	0					
ANR	2681813	Identifier	section		2681789	1					
ANR	2681814	PtrMemberAccess	info -> symtab [ n ] -> section		2681789	1					
ANR	2681815	ArrayIndexing	info -> symtab [ n ]		2681789	0					
ANR	2681816	PtrMemberAccess	info -> symtab		2681789	0					
ANR	2681817	Identifier	info		2681789	0					
ANR	2681818	Identifier	symtab		2681789	1					
ANR	2681819	Identifier	n		2681789	1					
ANR	2681820	Identifier	section		2681789	1					
ANR	2681821	ReturnStatement	return FALSE ;	6344:4:231972:231984	2681789	1	True				
ANR	2681822	Identifier	FALSE		2681789	0					
ANR	2681823	ExpressionStatement	es = * ( elf_symbol_type * * ) ( info -> symtab + n )	6346:2:231989:232033	2681789	4	True				
ANR	2681824	AssignmentExpression	es = * ( elf_symbol_type * * ) ( info -> symtab + n )		2681789	0		=			
ANR	2681825	Identifier	es		2681789	0					
ANR	2681826	UnaryOperationExpression	* ( elf_symbol_type * * ) ( info -> symtab + n )		2681789	1					
ANR	2681827	UnaryOperator	*		2681789	0					
ANR	2681828	CastExpression	( elf_symbol_type * * ) ( info -> symtab + n )		2681789	1					
ANR	2681829	CastTarget	elf_symbol_type * *		2681789	0					
ANR	2681830	AdditiveExpression	info -> symtab + n		2681789	1		+			
ANR	2681831	PtrMemberAccess	info -> symtab		2681789	0					
ANR	2681832	Identifier	info		2681789	0					
ANR	2681833	Identifier	symtab		2681789	1					
ANR	2681834	Identifier	n		2681789	1					
ANR	2681835	ExpressionStatement	type = ELF_ST_TYPE ( es -> internal_elf_sym . st_info )	6347:2:232037:232086	2681789	5	True				
ANR	2681836	AssignmentExpression	type = ELF_ST_TYPE ( es -> internal_elf_sym . st_info )		2681789	0		=			
ANR	2681837	Identifier	type		2681789	0					
ANR	2681838	CallExpression	ELF_ST_TYPE ( es -> internal_elf_sym . st_info )		2681789	1					
ANR	2681839	Callee	ELF_ST_TYPE		2681789	0					
ANR	2681840	Identifier	ELF_ST_TYPE		2681789	0					
ANR	2681841	ArgumentList	es -> internal_elf_sym . st_info		2681789	1					
ANR	2681842	Argument	es -> internal_elf_sym . st_info		2681789	0					
ANR	2681843	MemberAccess	es -> internal_elf_sym . st_info		2681789	0					
ANR	2681844	PtrMemberAccess	es -> internal_elf_sym		2681789	0					
ANR	2681845	Identifier	es		2681789	0					
ANR	2681846	Identifier	internal_elf_sym		2681789	1					
ANR	2681847	Identifier	st_info		2681789	1					
ANR	2681848	IfStatement	if ( type == STT_FUNC || type == STT_GNU_IFUNC )		2681789	6					
ANR	2681849	Condition	type == STT_FUNC || type == STT_GNU_IFUNC	6350:6:232151:232191	2681789	0	True				
ANR	2681850	OrExpression	type == STT_FUNC || type == STT_GNU_IFUNC		2681789	0		||			
ANR	2681851	EqualityExpression	type == STT_FUNC		2681789	0		==			
ANR	2681852	Identifier	type		2681789	0					
ANR	2681853	Identifier	STT_FUNC		2681789	1					
ANR	2681854	EqualityExpression	type == STT_GNU_IFUNC		2681789	1		==			
ANR	2681855	Identifier	type		2681789	0					
ANR	2681856	Identifier	STT_GNU_IFUNC		2681789	1					
ANR	2681857	CompoundStatement		16:4:431:431	2681789	1					
ANR	2681858	IfStatement	if ( ARM_GET_SYM_BRANCH_TYPE ( es -> internal_elf_sym . st_target_internal ) == ST_BRANCH_TO_THUMB )		2681789	0					
ANR	2681859	Condition	ARM_GET_SYM_BRANCH_TYPE ( es -> internal_elf_sym . st_target_internal ) == ST_BRANCH_TO_THUMB	6352:10:232210:232299	2681789	0	True				
ANR	2681860	EqualityExpression	ARM_GET_SYM_BRANCH_TYPE ( es -> internal_elf_sym . st_target_internal ) == ST_BRANCH_TO_THUMB		2681789	0		==			
ANR	2681861	CallExpression	ARM_GET_SYM_BRANCH_TYPE ( es -> internal_elf_sym . st_target_internal )		2681789	0					
ANR	2681862	Callee	ARM_GET_SYM_BRANCH_TYPE		2681789	0					
ANR	2681863	Identifier	ARM_GET_SYM_BRANCH_TYPE		2681789	0					
ANR	2681864	ArgumentList	es -> internal_elf_sym . st_target_internal		2681789	1					
ANR	2681865	Argument	es -> internal_elf_sym . st_target_internal		2681789	0					
ANR	2681866	MemberAccess	es -> internal_elf_sym . st_target_internal		2681789	0					
ANR	2681867	PtrMemberAccess	es -> internal_elf_sym		2681789	0					
ANR	2681868	Identifier	es		2681789	0					
ANR	2681869	Identifier	internal_elf_sym		2681789	1					
ANR	2681870	Identifier	st_target_internal		2681789	1					
ANR	2681871	Identifier	ST_BRANCH_TO_THUMB		2681789	1					
ANR	2681872	ExpressionStatement	* map_type = MAP_THUMB	6354:1:232303:232324	2681789	1	True				
ANR	2681873	AssignmentExpression	* map_type = MAP_THUMB		2681789	0		=			
ANR	2681874	UnaryOperationExpression	* map_type		2681789	0					
ANR	2681875	UnaryOperator	*		2681789	0					
ANR	2681876	Identifier	map_type		2681789	1					
ANR	2681877	Identifier	MAP_THUMB		2681789	1					
ANR	2681878	ElseStatement	else		2681789	0					
ANR	2681879	ExpressionStatement	* map_type = MAP_ARM	6356:1:232338:232357	2681789	0	True				
ANR	2681880	AssignmentExpression	* map_type = MAP_ARM		2681789	0		=			
ANR	2681881	UnaryOperationExpression	* map_type		2681789	0					
ANR	2681882	UnaryOperator	*		2681789	0					
ANR	2681883	Identifier	map_type		2681789	1					
ANR	2681884	Identifier	MAP_ARM		2681789	1					
ANR	2681885	ReturnStatement	return TRUE ;	6357:6:232365:232376	2681789	1	True				
ANR	2681886	Identifier	TRUE		2681789	0					
ANR	2681887	ReturnStatement	return FALSE ;	6360:2:232387:232399	2681789	7	True				
ANR	2681888	Identifier	FALSE		2681789	0					
ANR	2681889	ReturnType	static int		2681789	1					
ANR	2681890	Identifier	get_sym_code_type		2681789	2					
ANR	2681891	ParameterList	"struct disassemble_info * info , int n , enum map_type * map_type"		2681789	3					
ANR	2681892	Parameter	struct disassemble_info * info	6333:19:231693:231721	2681789	0	True				
ANR	2681893	ParameterType	struct disassemble_info *		2681789	0					
ANR	2681894	Identifier	info		2681789	1					
ANR	2681895	Parameter	int n	6334:5:231729:231733	2681789	1	True				
ANR	2681896	ParameterType	int		2681789	0					
ANR	2681897	Identifier	n		2681789	1					
ANR	2681898	Parameter	enum map_type * map_type	6335:5:231741:231763	2681789	2	True				
ANR	2681899	ParameterType	enum map_type *		2681789	0					
ANR	2681900	Identifier	map_type		2681789	1					
ANR	2681901	CFGEntryNode	ENTRY		2681789		True				
ANR	2681902	CFGExitNode	EXIT		2681789		True				
ANR	2681903	Symbol	* * info		2681789						
ANR	2681904	Symbol	info -> section		2681789						
ANR	2681905	Symbol	MAP_ARM		2681789						
ANR	2681906	Symbol	type		2681789						
ANR	2681907	Symbol	ELF_ST_TYPE		2681789						
ANR	2681908	Symbol	STT_FUNC		2681789						
ANR	2681909	Symbol	map_type		2681789						
ANR	2681910	Symbol	es -> internal_elf_sym		2681789						
ANR	2681911	Symbol	es -> internal_elf_sym . st_info		2681789						
ANR	2681912	Symbol	* ( elf_symbol_type * * ) ( info -> symtab + n )		2681789						
ANR	2681913	Symbol	* * n		2681789						
ANR	2681914	Symbol	info -> symtab		2681789						
ANR	2681915	Symbol	info		2681789						
ANR	2681916	Symbol	MAP_THUMB		2681789						
ANR	2681917	Symbol	* * * info		2681789						
ANR	2681918	Symbol	NULL		2681789						
ANR	2681919	Symbol	TRUE		2681789						
ANR	2681920	Symbol	* * info -> symtab		2681789						
ANR	2681921	Symbol	STT_GNU_IFUNC		2681789						
ANR	2681922	Symbol	n		2681789						
ANR	2681923	Symbol	es		2681789						
ANR	2681924	Symbol	ARM_GET_SYM_BRANCH_TYPE		2681789						
ANR	2681925	Symbol	es -> internal_elf_sym . st_target_internal		2681789						
ANR	2681926	Symbol	* info -> symtab		2681789						
ANR	2681927	Symbol	ST_BRANCH_TO_THUMB		2681789						
ANR	2681928	Symbol	* map_type		2681789						
ANR	2681929	Symbol	* es		2681789						
ANR	2681930	Symbol	* n		2681789						
ANR	2681931	Symbol	FALSE		2681789						
ANR	2681932	Symbol	* info		2681789						
ANR	2681933	Symbol	info -> symtab [ n ] -> section		2681789						
ANR	2681934	Function	mapping_symbol_for_insn	6374:0:232841:234132							
ANR	2681935	FunctionDef	"mapping_symbol_for_insn (bfd_vma pc , struct disassemble_info * info , enum map_type * map_symbol)"		2681934	0					
ANR	2681936	CompoundStatement		6377:0:232959:234132	2681934	0					
ANR	2681937	IdentifierDeclStatement	bfd_vma addr ;	6378:2:232963:232975	2681934	0	True				
ANR	2681938	IdentifierDecl	addr		2681934	0					
ANR	2681939	IdentifierDeclType	bfd_vma		2681934	0					
ANR	2681940	Identifier	addr		2681934	1					
ANR	2681941	IdentifierDeclStatement	"int n , start = 0 ;"	6379:2:232979:232995	2681934	1	True				
ANR	2681942	IdentifierDecl	n		2681934	0					
ANR	2681943	IdentifierDeclType	int		2681934	0					
ANR	2681944	Identifier	n		2681934	1					
ANR	2681945	IdentifierDecl	start = 0		2681934	1					
ANR	2681946	IdentifierDeclType	int		2681934	0					
ANR	2681947	Identifier	start		2681934	1					
ANR	2681948	AssignmentExpression	start = 0		2681934	2		=			
ANR	2681949	Identifier	start		2681934	0					
ANR	2681950	PrimaryExpression	0		2681934	1					
ANR	2681951	IdentifierDeclStatement	bfd_boolean found = FALSE ;	6380:2:232999:233024	2681934	2	True				
ANR	2681952	IdentifierDecl	found = FALSE		2681934	0					
ANR	2681953	IdentifierDeclType	bfd_boolean		2681934	0					
ANR	2681954	Identifier	found		2681934	1					
ANR	2681955	AssignmentExpression	found = FALSE		2681934	2		=			
ANR	2681956	Identifier	FALSE		2681934	0					
ANR	2681957	Identifier	FALSE		2681934	1					
ANR	2681958	IdentifierDeclStatement	enum map_type type = MAP_ARM ;	6381:2:233028:233056	2681934	3	True				
ANR	2681959	IdentifierDecl	type = MAP_ARM		2681934	0					
ANR	2681960	IdentifierDeclType	enum map_type		2681934	0					
ANR	2681961	Identifier	type		2681934	1					
ANR	2681962	AssignmentExpression	type = MAP_ARM		2681934	2		=			
ANR	2681963	Identifier	MAP_ARM		2681934	0					
ANR	2681964	Identifier	MAP_ARM		2681934	1					
ANR	2681965	IdentifierDeclStatement	struct arm_private_data * private_data ;	6382:2:233060:233097	2681934	4	True				
ANR	2681966	IdentifierDecl	* private_data		2681934	0					
ANR	2681967	IdentifierDeclType	struct arm_private_data *		2681934	0					
ANR	2681968	Identifier	private_data		2681934	1					
ANR	2681969	IfStatement	if ( info -> private_data == NULL || info -> symtab_size == 0 || bfd_asymbol_flavour ( * info -> symtab ) != bfd_target_elf_flavour )		2681934	5					
ANR	2681970	Condition	info -> private_data == NULL || info -> symtab_size == 0 || bfd_asymbol_flavour ( * info -> symtab ) != bfd_target_elf_flavour	6384:6:233106:233222	2681934	0	True				
ANR	2681971	OrExpression	info -> private_data == NULL || info -> symtab_size == 0 || bfd_asymbol_flavour ( * info -> symtab ) != bfd_target_elf_flavour		2681934	0		||			
ANR	2681972	EqualityExpression	info -> private_data == NULL		2681934	0		==			
ANR	2681973	PtrMemberAccess	info -> private_data		2681934	0					
ANR	2681974	Identifier	info		2681934	0					
ANR	2681975	Identifier	private_data		2681934	1					
ANR	2681976	Identifier	NULL		2681934	1					
ANR	2681977	OrExpression	info -> symtab_size == 0 || bfd_asymbol_flavour ( * info -> symtab ) != bfd_target_elf_flavour		2681934	1		||			
ANR	2681978	EqualityExpression	info -> symtab_size == 0		2681934	0		==			
ANR	2681979	PtrMemberAccess	info -> symtab_size		2681934	0					
ANR	2681980	Identifier	info		2681934	0					
ANR	2681981	Identifier	symtab_size		2681934	1					
ANR	2681982	PrimaryExpression	0		2681934	1					
ANR	2681983	EqualityExpression	bfd_asymbol_flavour ( * info -> symtab ) != bfd_target_elf_flavour		2681934	1		!=			
ANR	2681984	CallExpression	bfd_asymbol_flavour ( * info -> symtab )		2681934	0					
ANR	2681985	Callee	bfd_asymbol_flavour		2681934	0					
ANR	2681986	Identifier	bfd_asymbol_flavour		2681934	0					
ANR	2681987	ArgumentList	* info -> symtab		2681934	1					
ANR	2681988	Argument	* info -> symtab		2681934	0					
ANR	2681989	UnaryOperationExpression	* info -> symtab		2681934	0					
ANR	2681990	UnaryOperator	*		2681934	0					
ANR	2681991	PtrMemberAccess	info -> symtab		2681934	1					
ANR	2681992	Identifier	info		2681934	0					
ANR	2681993	Identifier	symtab		2681934	1					
ANR	2681994	Identifier	bfd_target_elf_flavour		2681934	1					
ANR	2681995	CompoundStatement		8:125:265:265	2681934	1					
ANR	2681996	ReturnStatement	return FALSE ;	6385:3:233230:233242	2681934	0	True				
ANR	2681997	Identifier	FALSE		2681934	0					
ANR	2681998	ExpressionStatement	private_data = info -> private_data	6388:2:233251:233284	2681934	6	True				
ANR	2681999	AssignmentExpression	private_data = info -> private_data		2681934	0		=			
ANR	2682000	Identifier	private_data		2681934	0					
ANR	2682001	PtrMemberAccess	info -> private_data		2681934	1					
ANR	2682002	Identifier	info		2681934	0					
ANR	2682003	Identifier	private_data		2681934	1					
ANR	2682004	IfStatement	if ( pc == 0 )		2681934	7					
ANR	2682005	Condition	pc == 0	6389:6:233292:233298	2681934	0	True				
ANR	2682006	EqualityExpression	pc == 0		2681934	0		==			
ANR	2682007	Identifier	pc		2681934	0					
ANR	2682008	PrimaryExpression	0		2681934	1					
ANR	2682009	CompoundStatement		13:15:341:341	2681934	1					
ANR	2682010	ExpressionStatement	start = 0	6390:3:233306:233315	2681934	0	True				
ANR	2682011	AssignmentExpression	start = 0		2681934	0		=			
ANR	2682012	Identifier	start		2681934	0					
ANR	2682013	PrimaryExpression	0		2681934	1					
ANR	2682014	ElseStatement	else		2681934	0					
ANR	2682015	CompoundStatement		15:9:366:366	2681934	0					
ANR	2682016	ExpressionStatement	start = private_data -> last_mapping_sym	6392:3:233331:233369	2681934	0	True				
ANR	2682017	AssignmentExpression	start = private_data -> last_mapping_sym		2681934	0		=			
ANR	2682018	Identifier	start		2681934	0					
ANR	2682019	PtrMemberAccess	private_data -> last_mapping_sym		2681934	1					
ANR	2682020	Identifier	private_data		2681934	0					
ANR	2682021	Identifier	last_mapping_sym		2681934	1					
ANR	2682022	ExpressionStatement	start = ( start == - 1 ) ? 0 : start	6395:2:233378:233410	2681934	8	True				
ANR	2682023	AssignmentExpression	start = ( start == - 1 ) ? 0 : start		2681934	0		=			
ANR	2682024	Identifier	start		2681934	0					
ANR	2682025	ConditionalExpression	( start == - 1 ) ? 0 : start		2681934	1					
ANR	2682026	Condition	start == - 1		2681934	0					
ANR	2682027	EqualityExpression	start == - 1		2681934	0		==			
ANR	2682028	Identifier	start		2681934	0					
ANR	2682029	UnaryOperationExpression	- 1		2681934	1					
ANR	2682030	UnaryOperator	-		2681934	0					
ANR	2682031	PrimaryExpression	1		2681934	1					
ANR	2682032	PrimaryExpression	0		2681934	1					
ANR	2682033	Identifier	start		2681934	2					
ANR	2682034	ExpressionStatement	addr = bfd_asymbol_value ( info -> symtab [ start ] )	6396:2:233414:233460	2681934	9	True				
ANR	2682035	AssignmentExpression	addr = bfd_asymbol_value ( info -> symtab [ start ] )		2681934	0		=			
ANR	2682036	Identifier	addr		2681934	0					
ANR	2682037	CallExpression	bfd_asymbol_value ( info -> symtab [ start ] )		2681934	1					
ANR	2682038	Callee	bfd_asymbol_value		2681934	0					
ANR	2682039	Identifier	bfd_asymbol_value		2681934	0					
ANR	2682040	ArgumentList	info -> symtab [ start ]		2681934	1					
ANR	2682041	Argument	info -> symtab [ start ]		2681934	0					
ANR	2682042	ArrayIndexing	info -> symtab [ start ]		2681934	0					
ANR	2682043	PtrMemberAccess	info -> symtab		2681934	0					
ANR	2682044	Identifier	info		2681934	0					
ANR	2682045	Identifier	symtab		2681934	1					
ANR	2682046	Identifier	start		2681934	1					
ANR	2682047	IfStatement	if ( pc >= addr )		2681934	10					
ANR	2682048	Condition	pc >= addr	6398:6:233469:233478	2681934	0	True				
ANR	2682049	RelationalExpression	pc >= addr		2681934	0		>=			
ANR	2682050	Identifier	pc		2681934	0					
ANR	2682051	Identifier	addr		2681934	1					
ANR	2682052	CompoundStatement		23:4:525:525	2681934	1					
ANR	2682053	IfStatement	"if ( get_map_sym_type ( info , start , & type ) )"		2681934	0					
ANR	2682054	Condition	"get_map_sym_type ( info , start , & type )"	6400:7:233494:233530	2681934	0	True				
ANR	2682055	CallExpression	"get_map_sym_type ( info , start , & type )"		2681934	0					
ANR	2682056	Callee	get_map_sym_type		2681934	0					
ANR	2682057	Identifier	get_map_sym_type		2681934	0					
ANR	2682058	ArgumentList	info		2681934	1					
ANR	2682059	Argument	info		2681934	0					
ANR	2682060	Identifier	info		2681934	0					
ANR	2682061	Argument	start		2681934	1					
ANR	2682062	Identifier	start		2681934	0					
ANR	2682063	Argument	& type		2681934	2					
ANR	2682064	UnaryOperationExpression	& type		2681934	0					
ANR	2682065	UnaryOperator	&		2681934	0					
ANR	2682066	Identifier	type		2681934	1					
ANR	2682067	CompoundStatement		24:46:573:573	2681934	1					
ANR	2682068	ExpressionStatement	found = TRUE	6401:4:233539:233551	2681934	0	True				
ANR	2682069	AssignmentExpression	found = TRUE		2681934	0		=			
ANR	2682070	Identifier	found		2681934	0					
ANR	2682071	Identifier	TRUE		2681934	1					
ANR	2682072	ElseStatement	else		2681934	0					
ANR	2682073	CompoundStatement		29:4:615:615	2681934	0					
ANR	2682074	ForStatement	for ( n = start - 1 ; n >= 0 ; n -- )		2681934	0					
ANR	2682075	ForInit	n = start - 1 ;	6406:11:233588:233601	2681934	0	True				
ANR	2682076	AssignmentExpression	n = start - 1		2681934	0		=			
ANR	2682077	Identifier	n		2681934	0					
ANR	2682078	AdditiveExpression	start - 1		2681934	1		-			
ANR	2682079	Identifier	start		2681934	0					
ANR	2682080	PrimaryExpression	1		2681934	1					
ANR	2682081	Condition	n >= 0	6406:26:233603:233608	2681934	1	True				
ANR	2682082	RelationalExpression	n >= 0		2681934	0		>=			
ANR	2682083	Identifier	n		2681934	0					
ANR	2682084	PrimaryExpression	0		2681934	1					
ANR	2682085	PostIncDecOperationExpression	n --	6406:34:233611:233613	2681934	2	True				
ANR	2682086	Identifier	n		2681934	0					
ANR	2682087	IncDec	--		2681934	1					
ANR	2682088	CompoundStatement		31:1:657:657	2681934	3					
ANR	2682089	IfStatement	"if ( get_map_sym_type ( info , n , & type ) )"		2681934	0					
ANR	2682090	Condition	"get_map_sym_type ( info , n , & type )"	6408:7:233626:233658	2681934	0	True				
ANR	2682091	CallExpression	"get_map_sym_type ( info , n , & type )"		2681934	0					
ANR	2682092	Callee	get_map_sym_type		2681934	0					
ANR	2682093	Identifier	get_map_sym_type		2681934	0					
ANR	2682094	ArgumentList	info		2681934	1					
ANR	2682095	Argument	info		2681934	0					
ANR	2682096	Identifier	info		2681934	0					
ANR	2682097	Argument	n		2681934	1					
ANR	2682098	Identifier	n		2681934	0					
ANR	2682099	Argument	& type		2681934	2					
ANR	2682100	UnaryOperationExpression	& type		2681934	0					
ANR	2682101	UnaryOperator	&		2681934	0					
ANR	2682102	Identifier	type		2681934	1					
ANR	2682103	CompoundStatement		33:5:706:706	2681934	1					
ANR	2682104	ExpressionStatement	found = TRUE	6410:7:233675:233687	2681934	0	True				
ANR	2682105	AssignmentExpression	found = TRUE		2681934	0		=			
ANR	2682106	Identifier	found		2681934	0					
ANR	2682107	Identifier	TRUE		2681934	1					
ANR	2682108	BreakStatement	break ;	6411:7:233696:233701	2681934	1	True				
ANR	2682109	IfStatement	if ( ! found && private_data -> has_mapping_symbols == 1 )		2681934	11					
ANR	2682110	Condition	! found && private_data -> has_mapping_symbols == 1	6421:6:233988:234035	2681934	0	True				
ANR	2682111	AndExpression	! found && private_data -> has_mapping_symbols == 1		2681934	0		&&			
ANR	2682112	UnaryOperationExpression	! found		2681934	0					
ANR	2682113	UnaryOperator	!		2681934	0					
ANR	2682114	Identifier	found		2681934	1					
ANR	2682115	EqualityExpression	private_data -> has_mapping_symbols == 1		2681934	1		==			
ANR	2682116	PtrMemberAccess	private_data -> has_mapping_symbols		2681934	0					
ANR	2682117	Identifier	private_data		2681934	0					
ANR	2682118	Identifier	has_mapping_symbols		2681934	1					
ANR	2682119	PrimaryExpression	1		2681934	1					
ANR	2682120	CompoundStatement		46:4:1082:1082	2681934	1					
ANR	2682121	ExpressionStatement	type = MAP_DATA	6423:6:234050:234065	2681934	0	True				
ANR	2682122	AssignmentExpression	type = MAP_DATA		2681934	0		=			
ANR	2682123	Identifier	type		2681934	0					
ANR	2682124	Identifier	MAP_DATA		2681934	1					
ANR	2682125	ExpressionStatement	found = TRUE	6424:6:234073:234085	2681934	1	True				
ANR	2682126	AssignmentExpression	found = TRUE		2681934	0		=			
ANR	2682127	Identifier	found		2681934	0					
ANR	2682128	Identifier	TRUE		2681934	1					
ANR	2682129	ExpressionStatement	* map_symbol = type	6427:2:234096:234114	2681934	12	True				
ANR	2682130	AssignmentExpression	* map_symbol = type		2681934	0		=			
ANR	2682131	UnaryOperationExpression	* map_symbol		2681934	0					
ANR	2682132	UnaryOperator	*		2681934	0					
ANR	2682133	Identifier	map_symbol		2681934	1					
ANR	2682134	Identifier	type		2681934	1					
ANR	2682135	ReturnStatement	return found ;	6428:2:234118:234130	2681934	13	True				
ANR	2682136	Identifier	found		2681934	0					
ANR	2682137	ReturnType	static bfd_boolean		2681934	1					
ANR	2682138	Identifier	mapping_symbol_for_insn		2681934	2					
ANR	2682139	ParameterList	"bfd_vma pc , struct disassemble_info * info , enum map_type * map_symbol"		2681934	3					
ANR	2682140	Parameter	bfd_vma pc	6375:25:232885:232894	2681934	0	True				
ANR	2682141	ParameterType	bfd_vma		2681934	0					
ANR	2682142	Identifier	pc		2681934	1					
ANR	2682143	Parameter	struct disassemble_info * info	6375:37:232897:232925	2681934	1	True				
ANR	2682144	ParameterType	struct disassemble_info *		2681934	0					
ANR	2682145	Identifier	info		2681934	1					
ANR	2682146	Parameter	enum map_type * map_symbol	6376:4:232932:232956	2681934	2	True				
ANR	2682147	ParameterType	enum map_type *		2681934	0					
ANR	2682148	Identifier	map_symbol		2681934	1					
ANR	2682149	CFGEntryNode	ENTRY		2681934		True				
ANR	2682150	CFGExitNode	EXIT		2681934		True				
ANR	2682151	Symbol	MAP_DATA		2681934						
ANR	2682152	Symbol	* * info		2681934						
ANR	2682153	Symbol	private_data		2681934						
ANR	2682154	Symbol	MAP_ARM		2681934						
ANR	2682155	Symbol	* start		2681934						
ANR	2682156	Symbol	type		2681934						
ANR	2682157	Symbol	found		2681934						
ANR	2682158	Symbol	bfd_target_elf_flavour		2681934						
ANR	2682159	Symbol	bfd_asymbol_flavour		2681934						
ANR	2682160	Symbol	map_symbol		2681934						
ANR	2682161	Symbol	addr		2681934						
ANR	2682162	Symbol	info -> symtab		2681934						
ANR	2682163	Symbol	info		2681934						
ANR	2682164	Symbol	get_map_sym_type		2681934						
ANR	2682165	Symbol	NULL		2681934						
ANR	2682166	Symbol	& type		2681934						
ANR	2682167	Symbol	info -> private_data		2681934						
ANR	2682168	Symbol	start		2681934						
ANR	2682169	Symbol	TRUE		2681934						
ANR	2682170	Symbol	info -> symtab_size		2681934						
ANR	2682171	Symbol	* map_symbol		2681934						
ANR	2682172	Symbol	n		2681934						
ANR	2682173	Symbol	* info -> symtab		2681934						
ANR	2682174	Symbol	pc		2681934						
ANR	2682175	Symbol	bfd_asymbol_value		2681934						
ANR	2682176	Symbol	private_data -> last_mapping_sym		2681934						
ANR	2682177	Symbol	FALSE		2681934						
ANR	2682178	Symbol	* private_data		2681934						
ANR	2682179	Symbol	* info		2681934						
ANR	2682180	Symbol	private_data -> has_mapping_symbols		2681934						
ANR	2682181	Function	select_arm_features	6446:0:234723:236690							
ANR	2682182	FunctionDef	"select_arm_features (unsigned long mach , arm_feature_set * features)"		2682181	0					
ANR	2682183	CompoundStatement		6449:0:234811:236690	2682181	0					
ANR	2682184	Statement	undef	6450:1:234814:234818	2682181	0	True				
ANR	2682185	Statement	ARM_SET_FEATURES2	6450:7:234820:234836	2682181	1	True				
ANR	2682186	Statement	define	6452:1:234884:234889	2682181	2	True				
ANR	2682187	Statement	ARM_SET_FEATURES2	6452:8:234891:234907	2682181	3	True				
ANR	2682188	Statement	(	6452:25:234908:234908	2682181	4	True				
ANR	2682189	Statement	FSET	6452:26:234909:234912	2682181	5	True				
ANR	2682190	Statement	)	6452:30:234913:234913	2682181	6	True				
ANR	2682191	CompoundStatement		7:4:164:204	2682181	7					
ANR	2682192	IdentifierDeclStatement	const arm_feature_set fset = FSET ;	6454:4:234933:234966	2682181	0	True				
ANR	2682193	IdentifierDecl	fset = FSET		2682181	0					
ANR	2682194	IdentifierDeclType	const arm_feature_set		2682181	0					
ANR	2682195	Identifier	fset		2682181	1					
ANR	2682196	AssignmentExpression	fset = FSET		2682181	2		=			
ANR	2682197	Identifier	FSET		2682181	0					
ANR	2682198	Identifier	FSET		2682181	1					
ANR	2682199	IdentifierDeclStatement	arm_feature_set tmp = FPU_ARCH_VFP_V4D16 ;	6455:4:234976:235016	2682181	1	True				
ANR	2682200	IdentifierDecl	tmp = FPU_ARCH_VFP_V4D16		2682181	0					
ANR	2682201	IdentifierDeclType	arm_feature_set		2682181	0					
ANR	2682202	Identifier	tmp		2682181	1					
ANR	2682203	AssignmentExpression	tmp = FPU_ARCH_VFP_V4D16		2682181	2		=			
ANR	2682204	Identifier	FPU_ARCH_VFP_V4D16		2682181	0					
ANR	2682205	Identifier	FPU_ARCH_VFP_V4D16		2682181	1					
ANR	2682206	ExpressionStatement	"ARM_MERGE_FEATURE_SETS ( * features , tmp , fset )"	6456:4:235024:235069	2682181	2	True				
ANR	2682207	CallExpression	"ARM_MERGE_FEATURE_SETS ( * features , tmp , fset )"		2682181	0					
ANR	2682208	Callee	ARM_MERGE_FEATURE_SETS		2682181	0					
ANR	2682209	Identifier	ARM_MERGE_FEATURE_SETS		2682181	0					
ANR	2682210	ArgumentList	* features		2682181	1					
ANR	2682211	Argument	* features		2682181	0					
ANR	2682212	UnaryOperationExpression	* features		2682181	0					
ANR	2682213	UnaryOperator	*		2682181	0					
ANR	2682214	Identifier	features		2682181	1					
ANR	2682215	Argument	tmp		2682181	1					
ANR	2682216	Identifier	tmp		2682181	0					
ANR	2682217	Argument	fset		2682181	2					
ANR	2682218	Identifier	fset		2682181	0					
ANR	2682219	Statement	undef	6458:1:235078:235082	2682181	8	True				
ANR	2682220	Statement	ARM_SET_FEATURES	6458:7:235084:235099	2682181	9	True				
ANR	2682221	Statement	define	6459:1:235102:235107	2682181	10	True				
ANR	2682222	Statement	ARM_SET_FEATURES	6459:8:235109:235124	2682181	11	True				
ANR	2682223	Statement	(	6459:24:235125:235125	2682181	12	True				
ANR	2682224	Statement	FSET	6459:25:235126:235129	2682181	13	True				
ANR	2682225	Statement	)	6459:29:235130:235130	2682181	14	True				
ANR	2682226	CompoundStatement		14:4:381:431	2682181	15					
ANR	2682227	IdentifierDeclStatement	const arm_feature_set fset = FSET ;	6461:4:235150:235183	2682181	0	True				
ANR	2682228	IdentifierDecl	fset = FSET		2682181	0					
ANR	2682229	IdentifierDeclType	const arm_feature_set		2682181	0					
ANR	2682230	Identifier	fset		2682181	1					
ANR	2682231	AssignmentExpression	fset = FSET		2682181	2		=			
ANR	2682232	Identifier	FSET		2682181	0					
ANR	2682233	Identifier	FSET		2682181	1					
ANR	2682234	IdentifierDeclStatement	"arm_feature_set tmp = ARM_FEATURE ( 0 , 0 , FPU_FPA ) ;"	6462:4:235193:235243	2682181	1	True				
ANR	2682235	IdentifierDecl	"tmp = ARM_FEATURE ( 0 , 0 , FPU_FPA )"		2682181	0					
ANR	2682236	IdentifierDeclType	arm_feature_set		2682181	0					
ANR	2682237	Identifier	tmp		2682181	1					
ANR	2682238	AssignmentExpression	"tmp = ARM_FEATURE ( 0 , 0 , FPU_FPA )"		2682181	2		=			
ANR	2682239	Identifier	tmp		2682181	0					
ANR	2682240	CallExpression	"ARM_FEATURE ( 0 , 0 , FPU_FPA )"		2682181	1					
ANR	2682241	Callee	ARM_FEATURE		2682181	0					
ANR	2682242	Identifier	ARM_FEATURE		2682181	0					
ANR	2682243	ArgumentList	0		2682181	1					
ANR	2682244	Argument	0		2682181	0					
ANR	2682245	PrimaryExpression	0		2682181	0					
ANR	2682246	Argument	0		2682181	1					
ANR	2682247	PrimaryExpression	0		2682181	0					
ANR	2682248	Argument	FPU_FPA		2682181	2					
ANR	2682249	Identifier	FPU_FPA		2682181	0					
ANR	2682250	ExpressionStatement	"ARM_MERGE_FEATURE_SETS ( * features , tmp , fset )"	6463:4:235251:235296	2682181	2	True				
ANR	2682251	CallExpression	"ARM_MERGE_FEATURE_SETS ( * features , tmp , fset )"		2682181	0					
ANR	2682252	Callee	ARM_MERGE_FEATURE_SETS		2682181	0					
ANR	2682253	Identifier	ARM_MERGE_FEATURE_SETS		2682181	0					
ANR	2682254	ArgumentList	* features		2682181	1					
ANR	2682255	Argument	* features		2682181	0					
ANR	2682256	UnaryOperationExpression	* features		2682181	0					
ANR	2682257	UnaryOperator	*		2682181	0					
ANR	2682258	Identifier	features		2682181	1					
ANR	2682259	Argument	tmp		2682181	1					
ANR	2682260	Identifier	tmp		2682181	0					
ANR	2682261	Argument	fset		2682181	2					
ANR	2682262	Identifier	fset		2682181	0					
ANR	2682263	ExpressionStatement	ARM_SET_FEATURES2 ( ARM_ARCH_V7EM )	6468:0:235353:235385	2682181	16	True				
ANR	2682264	CallExpression	ARM_SET_FEATURES2 ( ARM_ARCH_V7EM )		2682181	0					
ANR	2682265	Callee	ARM_SET_FEATURES2		2682181	0					
ANR	2682266	Identifier	ARM_SET_FEATURES2		2682181	0					
ANR	2682267	ArgumentList	ARM_ARCH_V7EM		2682181	1					
ANR	2682268	Argument	ARM_ARCH_V7EM		2682181	0					
ANR	2682269	Identifier	ARM_ARCH_V7EM		2682181	0					
ANR	2682270	ReturnStatement	return ;	6469:0:235412:235418	2682181	17	True				
ANR	2682271	Statement	FPU_ARCH_VFP_V4D16	6471:0:235426:235443	2682181	18	True				
ANR	2682272	ReturnStatement	return ;	6472:0:235445:235451	2682181	19	True				
ANR	2682273	SwitchStatement	switch ( mach )		2682181	20					
ANR	2682274	Condition	mach	6476:10:235478:235481	2682181	0	True				
ANR	2682275	Identifier	mach		2682181	0					
ANR	2682276	CompoundStatement		29:4:676:676	2682181	1					
ANR	2682277	Label	case bfd_mach_arm_2 :	6478:4:235494:235513	2682181	0	True				
ANR	2682278	Identifier	bfd_mach_arm_2		2682181	0					
ANR	2682279	ExpressionStatement	ARM_SET_FEATURES ( ARM_ARCH_V2 )	6478:31:235521:235551	2682181	1	True				
ANR	2682280	CallExpression	ARM_SET_FEATURES ( ARM_ARCH_V2 )		2682181	0					
ANR	2682281	Callee	ARM_SET_FEATURES		2682181	0					
ANR	2682282	Identifier	ARM_SET_FEATURES		2682181	0					
ANR	2682283	ArgumentList	ARM_ARCH_V2		2682181	1					
ANR	2682284	Argument	ARM_ARCH_V2		2682181	0					
ANR	2682285	Identifier	ARM_ARCH_V2		2682181	0					
ANR	2682286	BreakStatement	break ;	6478:63:235553:235558	2682181	2	True				
ANR	2682287	Label	case bfd_mach_arm_2a :	6479:4:235564:235584	2682181	3	True				
ANR	2682288	Identifier	bfd_mach_arm_2a		2682181	0					
ANR	2682289	ExpressionStatement	ARM_SET_FEATURES ( ARM_ARCH_V2S )	6479:31:235591:235622	2682181	4	True				
ANR	2682290	CallExpression	ARM_SET_FEATURES ( ARM_ARCH_V2S )		2682181	0					
ANR	2682291	Callee	ARM_SET_FEATURES		2682181	0					
ANR	2682292	Identifier	ARM_SET_FEATURES		2682181	0					
ANR	2682293	ArgumentList	ARM_ARCH_V2S		2682181	1					
ANR	2682294	Argument	ARM_ARCH_V2S		2682181	0					
ANR	2682295	Identifier	ARM_ARCH_V2S		2682181	0					
ANR	2682296	BreakStatement	break ;	6479:64:235624:235629	2682181	5	True				
ANR	2682297	Label	case bfd_mach_arm_3 :	6480:4:235635:235654	2682181	6	True				
ANR	2682298	Identifier	bfd_mach_arm_3		2682181	0					
ANR	2682299	ExpressionStatement	ARM_SET_FEATURES ( ARM_ARCH_V3 )	6480:31:235662:235692	2682181	7	True				
ANR	2682300	CallExpression	ARM_SET_FEATURES ( ARM_ARCH_V3 )		2682181	0					
ANR	2682301	Callee	ARM_SET_FEATURES		2682181	0					
ANR	2682302	Identifier	ARM_SET_FEATURES		2682181	0					
ANR	2682303	ArgumentList	ARM_ARCH_V3		2682181	1					
ANR	2682304	Argument	ARM_ARCH_V3		2682181	0					
ANR	2682305	Identifier	ARM_ARCH_V3		2682181	0					
ANR	2682306	BreakStatement	break ;	6480:63:235694:235699	2682181	8	True				
ANR	2682307	Label	case bfd_mach_arm_3M :	6481:4:235705:235725	2682181	9	True				
ANR	2682308	Identifier	bfd_mach_arm_3M		2682181	0					
ANR	2682309	ExpressionStatement	ARM_SET_FEATURES ( ARM_ARCH_V3M )	6481:31:235732:235763	2682181	10	True				
ANR	2682310	CallExpression	ARM_SET_FEATURES ( ARM_ARCH_V3M )		2682181	0					
ANR	2682311	Callee	ARM_SET_FEATURES		2682181	0					
ANR	2682312	Identifier	ARM_SET_FEATURES		2682181	0					
ANR	2682313	ArgumentList	ARM_ARCH_V3M		2682181	1					
ANR	2682314	Argument	ARM_ARCH_V3M		2682181	0					
ANR	2682315	Identifier	ARM_ARCH_V3M		2682181	0					
ANR	2682316	BreakStatement	break ;	6481:64:235765:235770	2682181	11	True				
ANR	2682317	Label	case bfd_mach_arm_4 :	6482:4:235776:235795	2682181	12	True				
ANR	2682318	Identifier	bfd_mach_arm_4		2682181	0					
ANR	2682319	ExpressionStatement	ARM_SET_FEATURES ( ARM_ARCH_V4 )	6482:31:235803:235833	2682181	13	True				
ANR	2682320	CallExpression	ARM_SET_FEATURES ( ARM_ARCH_V4 )		2682181	0					
ANR	2682321	Callee	ARM_SET_FEATURES		2682181	0					
ANR	2682322	Identifier	ARM_SET_FEATURES		2682181	0					
ANR	2682323	ArgumentList	ARM_ARCH_V4		2682181	1					
ANR	2682324	Argument	ARM_ARCH_V4		2682181	0					
ANR	2682325	Identifier	ARM_ARCH_V4		2682181	0					
ANR	2682326	BreakStatement	break ;	6482:63:235835:235840	2682181	14	True				
ANR	2682327	Label	case bfd_mach_arm_4T :	6483:4:235846:235866	2682181	15	True				
ANR	2682328	Identifier	bfd_mach_arm_4T		2682181	0					
ANR	2682329	ExpressionStatement	ARM_SET_FEATURES ( ARM_ARCH_V4T )	6483:31:235873:235904	2682181	16	True				
ANR	2682330	CallExpression	ARM_SET_FEATURES ( ARM_ARCH_V4T )		2682181	0					
ANR	2682331	Callee	ARM_SET_FEATURES		2682181	0					
ANR	2682332	Identifier	ARM_SET_FEATURES		2682181	0					
ANR	2682333	ArgumentList	ARM_ARCH_V4T		2682181	1					
ANR	2682334	Argument	ARM_ARCH_V4T		2682181	0					
ANR	2682335	Identifier	ARM_ARCH_V4T		2682181	0					
ANR	2682336	BreakStatement	break ;	6483:64:235906:235911	2682181	17	True				
ANR	2682337	Label	case bfd_mach_arm_5 :	6484:4:235917:235936	2682181	18	True				
ANR	2682338	Identifier	bfd_mach_arm_5		2682181	0					
ANR	2682339	ExpressionStatement	ARM_SET_FEATURES ( ARM_ARCH_V5 )	6484:31:235944:235974	2682181	19	True				
ANR	2682340	CallExpression	ARM_SET_FEATURES ( ARM_ARCH_V5 )		2682181	0					
ANR	2682341	Callee	ARM_SET_FEATURES		2682181	0					
ANR	2682342	Identifier	ARM_SET_FEATURES		2682181	0					
ANR	2682343	ArgumentList	ARM_ARCH_V5		2682181	1					
ANR	2682344	Argument	ARM_ARCH_V5		2682181	0					
ANR	2682345	Identifier	ARM_ARCH_V5		2682181	0					
ANR	2682346	BreakStatement	break ;	6484:63:235976:235981	2682181	20	True				
ANR	2682347	Label	case bfd_mach_arm_5T :	6485:4:235987:236007	2682181	21	True				
ANR	2682348	Identifier	bfd_mach_arm_5T		2682181	0					
ANR	2682349	ExpressionStatement	ARM_SET_FEATURES ( ARM_ARCH_V5T )	6485:31:236014:236045	2682181	22	True				
ANR	2682350	CallExpression	ARM_SET_FEATURES ( ARM_ARCH_V5T )		2682181	0					
ANR	2682351	Callee	ARM_SET_FEATURES		2682181	0					
ANR	2682352	Identifier	ARM_SET_FEATURES		2682181	0					
ANR	2682353	ArgumentList	ARM_ARCH_V5T		2682181	1					
ANR	2682354	Argument	ARM_ARCH_V5T		2682181	0					
ANR	2682355	Identifier	ARM_ARCH_V5T		2682181	0					
ANR	2682356	BreakStatement	break ;	6485:64:236047:236052	2682181	23	True				
ANR	2682357	Label	case bfd_mach_arm_5TE :	6486:4:236058:236079	2682181	24	True				
ANR	2682358	Identifier	bfd_mach_arm_5TE		2682181	0					
ANR	2682359	ExpressionStatement	ARM_SET_FEATURES ( ARM_ARCH_V5TE )	6486:31:236085:236117	2682181	25	True				
ANR	2682360	CallExpression	ARM_SET_FEATURES ( ARM_ARCH_V5TE )		2682181	0					
ANR	2682361	Callee	ARM_SET_FEATURES		2682181	0					
ANR	2682362	Identifier	ARM_SET_FEATURES		2682181	0					
ANR	2682363	ArgumentList	ARM_ARCH_V5TE		2682181	1					
ANR	2682364	Argument	ARM_ARCH_V5TE		2682181	0					
ANR	2682365	Identifier	ARM_ARCH_V5TE		2682181	0					
ANR	2682366	BreakStatement	break ;	6486:65:236119:236124	2682181	26	True				
ANR	2682367	Label	case bfd_mach_arm_XScale :	6487:4:236130:236154	2682181	27	True				
ANR	2682368	Identifier	bfd_mach_arm_XScale		2682181	0					
ANR	2682369	ExpressionStatement	ARM_SET_FEATURES ( ARM_ARCH_XSCALE )	6487:31:236157:236191	2682181	28	True				
ANR	2682370	CallExpression	ARM_SET_FEATURES ( ARM_ARCH_XSCALE )		2682181	0					
ANR	2682371	Callee	ARM_SET_FEATURES		2682181	0					
ANR	2682372	Identifier	ARM_SET_FEATURES		2682181	0					
ANR	2682373	ArgumentList	ARM_ARCH_XSCALE		2682181	1					
ANR	2682374	Argument	ARM_ARCH_XSCALE		2682181	0					
ANR	2682375	Identifier	ARM_ARCH_XSCALE		2682181	0					
ANR	2682376	BreakStatement	break ;	6487:67:236193:236198	2682181	29	True				
ANR	2682377	Label	case bfd_mach_arm_ep9312 :	6488:4:236204:236228	2682181	30	True				
ANR	2682378	Identifier	bfd_mach_arm_ep9312		2682181	0					
ANR	2682379	ExpressionStatement	"ARM_SET_FEATURES ( ARM_FEATURE_LOW ( ARM_AEXT_V4T , ARM_CEXT_MAVERICK | FPU_MAVERICK ) )"	6489:6:236236:236325	2682181	31	True				
ANR	2682380	CallExpression	"ARM_SET_FEATURES ( ARM_FEATURE_LOW ( ARM_AEXT_V4T , ARM_CEXT_MAVERICK | FPU_MAVERICK ) )"		2682181	0					
ANR	2682381	Callee	ARM_SET_FEATURES		2682181	0					
ANR	2682382	Identifier	ARM_SET_FEATURES		2682181	0					
ANR	2682383	ArgumentList	"ARM_FEATURE_LOW ( ARM_AEXT_V4T , ARM_CEXT_MAVERICK | FPU_MAVERICK )"		2682181	1					
ANR	2682384	Argument	"ARM_FEATURE_LOW ( ARM_AEXT_V4T , ARM_CEXT_MAVERICK | FPU_MAVERICK )"		2682181	0					
ANR	2682385	CallExpression	"ARM_FEATURE_LOW ( ARM_AEXT_V4T , ARM_CEXT_MAVERICK | FPU_MAVERICK )"		2682181	0					
ANR	2682386	Callee	ARM_FEATURE_LOW		2682181	0					
ANR	2682387	Identifier	ARM_FEATURE_LOW		2682181	0					
ANR	2682388	ArgumentList	ARM_AEXT_V4T		2682181	1					
ANR	2682389	Argument	ARM_AEXT_V4T		2682181	0					
ANR	2682390	Identifier	ARM_AEXT_V4T		2682181	0					
ANR	2682391	Argument	ARM_CEXT_MAVERICK | FPU_MAVERICK		2682181	1					
ANR	2682392	InclusiveOrExpression	ARM_CEXT_MAVERICK | FPU_MAVERICK		2682181	0		|			
ANR	2682393	Identifier	ARM_CEXT_MAVERICK		2682181	0					
ANR	2682394	Identifier	FPU_MAVERICK		2682181	1					
ANR	2682395	BreakStatement	break ;	6491:7:236334:236339	2682181	32	True				
ANR	2682396	Label	case bfd_mach_arm_iWMMXt :	6492:4:236345:236369	2682181	33	True				
ANR	2682397	Identifier	bfd_mach_arm_iWMMXt		2682181	0					
ANR	2682398	ExpressionStatement	ARM_SET_FEATURES ( ARM_ARCH_IWMMXT )	6492:31:236372:236406	2682181	34	True				
ANR	2682399	CallExpression	ARM_SET_FEATURES ( ARM_ARCH_IWMMXT )		2682181	0					
ANR	2682400	Callee	ARM_SET_FEATURES		2682181	0					
ANR	2682401	Identifier	ARM_SET_FEATURES		2682181	0					
ANR	2682402	ArgumentList	ARM_ARCH_IWMMXT		2682181	1					
ANR	2682403	Argument	ARM_ARCH_IWMMXT		2682181	0					
ANR	2682404	Identifier	ARM_ARCH_IWMMXT		2682181	0					
ANR	2682405	BreakStatement	break ;	6492:67:236408:236413	2682181	35	True				
ANR	2682406	Label	case bfd_mach_arm_iWMMXt2 :	6493:4:236419:236444	2682181	36	True				
ANR	2682407	Identifier	bfd_mach_arm_iWMMXt2		2682181	0					
ANR	2682408	ExpressionStatement	ARM_SET_FEATURES ( ARM_ARCH_IWMMXT2 )	6493:31:236446:236481	2682181	37	True				
ANR	2682409	CallExpression	ARM_SET_FEATURES ( ARM_ARCH_IWMMXT2 )		2682181	0					
ANR	2682410	Callee	ARM_SET_FEATURES		2682181	0					
ANR	2682411	Identifier	ARM_SET_FEATURES		2682181	0					
ANR	2682412	ArgumentList	ARM_ARCH_IWMMXT2		2682181	1					
ANR	2682413	Argument	ARM_ARCH_IWMMXT2		2682181	0					
ANR	2682414	Identifier	ARM_ARCH_IWMMXT2		2682181	0					
ANR	2682415	BreakStatement	break ;	6493:68:236483:236488	2682181	38	True				
ANR	2682416	Label	case bfd_mach_arm_unknown :	6496:4:236589:236614	2682181	39	True				
ANR	2682417	Identifier	bfd_mach_arm_unknown		2682181	0					
ANR	2682418	ExpressionStatement	ARM_SET_FEATURES ( ARM_FEATURE_ALL )	6496:31:236616:236650	2682181	40	True				
ANR	2682419	CallExpression	ARM_SET_FEATURES ( ARM_FEATURE_ALL )		2682181	0					
ANR	2682420	Callee	ARM_SET_FEATURES		2682181	0					
ANR	2682421	Identifier	ARM_SET_FEATURES		2682181	0					
ANR	2682422	ArgumentList	ARM_FEATURE_ALL		2682181	1					
ANR	2682423	Argument	ARM_FEATURE_ALL		2682181	0					
ANR	2682424	Identifier	ARM_FEATURE_ALL		2682181	0					
ANR	2682425	BreakStatement	break ;	6496:67:236652:236657	2682181	41	True				
ANR	2682426	Statement	undef	6499:1:236667:236671	2682181	21	True				
ANR	2682427	Statement	ARM_SET_FEATURES	6499:7:236673:236688	2682181	22	True				
ANR	2682428	ReturnType	static void		2682181	1					
ANR	2682429	Identifier	select_arm_features		2682181	2					
ANR	2682430	ParameterList	"unsigned long mach , arm_feature_set * features"		2682181	3					
ANR	2682431	Parameter	unsigned long mach	6447:21:234756:234773	2682181	0	True				
ANR	2682432	ParameterType	unsigned long		2682181	0					
ANR	2682433	Identifier	mach		2682181	1					
ANR	2682434	Parameter	arm_feature_set * features	6448:7:234783:234808	2682181	1	True				
ANR	2682435	ParameterType	arm_feature_set *		2682181	0					
ANR	2682436	Identifier	features		2682181	1					
ANR	2682437	CFGEntryNode	ENTRY		2682181		True				
ANR	2682438	CFGExitNode	EXIT		2682181		True				
ANR	2682439	Symbol	mach		2682181						
ANR	2682440	Symbol	ARM_ARCH_V2S		2682181						
ANR	2682441	Symbol	ARM_ARCH_V4T		2682181						
ANR	2682442	Symbol	ARM_ARCH_IWMMXT		2682181						
ANR	2682443	Symbol	fset		2682181						
ANR	2682444	Symbol	ARM_FEATURE_LOW		2682181						
ANR	2682445	Symbol	features		2682181						
ANR	2682446	Symbol	ARM_FEATURE_ALL		2682181						
ANR	2682447	Symbol	FPU_FPA		2682181						
ANR	2682448	Symbol	ARM_ARCH_V3		2682181						
ANR	2682449	Symbol	ARM_ARCH_V2		2682181						
ANR	2682450	Symbol	ARM_ARCH_V5		2682181						
ANR	2682451	Symbol	ARM_ARCH_V4		2682181						
ANR	2682452	Symbol	tmp		2682181						
ANR	2682453	Symbol	FPU_ARCH_VFP_V4D16		2682181						
ANR	2682454	Symbol	FSET		2682181						
ANR	2682455	Symbol	ARM_ARCH_V5TE		2682181						
ANR	2682456	Symbol	FPU_MAVERICK		2682181						
ANR	2682457	Symbol	ARM_ARCH_IWMMXT2		2682181						
ANR	2682458	Symbol	ARM_ARCH_XSCALE		2682181						
ANR	2682459	Symbol	ARM_ARCH_V3M		2682181						
ANR	2682460	Symbol	ARM_CEXT_MAVERICK		2682181						
ANR	2682461	Symbol	ARM_AEXT_V4T		2682181						
ANR	2682462	Symbol	* features		2682181						
ANR	2682463	Symbol	ARM_ARCH_V5T		2682181						
ANR	2682464	Symbol	ARM_ARCH_V7EM		2682181						
ANR	2682465	Symbol	ARM_FEATURE		2682181						
ANR	2682466	Function	print_insn	6506:0:236795:246752							
ANR	2682467	FunctionDef	"print_insn (bfd_vma pc , struct disassemble_info * info , bfd_boolean little)"		2682466	0					
ANR	2682468	CompoundStatement		6508:0:236881:246752	2682466	0					
ANR	2682469	IdentifierDeclStatement	unsigned char b [ 4 ] ;	6509:2:236885:236903	2682466	0	True				
ANR	2682470	IdentifierDecl	b [ 4 ]		2682466	0					
ANR	2682471	IdentifierDeclType	unsigned char [ 4 ]		2682466	0					
ANR	2682472	Identifier	b		2682466	1					
ANR	2682473	PrimaryExpression	4		2682466	2					
ANR	2682474	IdentifierDeclStatement	long given ;	6510:2:236907:236918	2682466	1	True				
ANR	2682475	IdentifierDecl	given		2682466	0					
ANR	2682476	IdentifierDeclType	long		2682466	0					
ANR	2682477	Identifier	given		2682466	1					
ANR	2682478	IdentifierDeclStatement	int status ;	6511:2:236922:236942	2682466	2	True				
ANR	2682479	IdentifierDecl	status		2682466	0					
ANR	2682480	IdentifierDeclType	int		2682466	0					
ANR	2682481	Identifier	status		2682466	1					
ANR	2682482	IdentifierDeclStatement	int is_thumb = FALSE ;	6512:2:236946:236976	2682466	3	True				
ANR	2682483	IdentifierDecl	is_thumb = FALSE		2682466	0					
ANR	2682484	IdentifierDeclType	int		2682466	0					
ANR	2682485	Identifier	is_thumb		2682466	1					
ANR	2682486	AssignmentExpression	is_thumb = FALSE		2682466	2		=			
ANR	2682487	Identifier	FALSE		2682466	0					
ANR	2682488	Identifier	FALSE		2682466	1					
ANR	2682489	IdentifierDeclStatement	int is_data = FALSE ;	6513:2:236980:237009	2682466	4	True				
ANR	2682490	IdentifierDecl	is_data = FALSE		2682466	0					
ANR	2682491	IdentifierDeclType	int		2682466	0					
ANR	2682492	Identifier	is_data		2682466	1					
ANR	2682493	AssignmentExpression	is_data = FALSE		2682466	2		=			
ANR	2682494	Identifier	FALSE		2682466	0					
ANR	2682495	Identifier	FALSE		2682466	1					
ANR	2682496	IdentifierDeclStatement	int little_code ;	6514:2:237013:237038	2682466	5	True				
ANR	2682497	IdentifierDecl	little_code		2682466	0					
ANR	2682498	IdentifierDeclType	int		2682466	0					
ANR	2682499	Identifier	little_code		2682466	1					
ANR	2682500	IdentifierDeclStatement	unsigned int size = 4 ;	6515:2:237042:237063	2682466	6	True				
ANR	2682501	IdentifierDecl	size = 4		2682466	0					
ANR	2682502	IdentifierDeclType	unsigned int		2682466	0					
ANR	2682503	Identifier	size		2682466	1					
ANR	2682504	AssignmentExpression	size = 4		2682466	2		=			
ANR	2682505	Identifier	size		2682466	0					
ANR	2682506	PrimaryExpression	4		2682466	1					
ANR	2682507	IdentifierDeclStatement	"void ( * printer ) ( bfd_vma , struct disassemble_info * , long ) ;"	6516:2:237067:237127	2682466	7	True				
ANR	2682508	IdentifierDecl	"( * printer ) ( bfd_vma , struct disassemble_info * , long )"		2682466	0					
ANR	2682509	IdentifierDeclType	"void ( * ) ( bfd_vma , struct disassemble_info * , long )"		2682466	0					
ANR	2682510	Identifier	printer		2682466	1					
ANR	2682511	IdentifierDeclStatement	bfd_boolean found = FALSE ;	6517:2:237131:237158	2682466	8	True				
ANR	2682512	IdentifierDecl	found = FALSE		2682466	0					
ANR	2682513	IdentifierDeclType	bfd_boolean		2682466	0					
ANR	2682514	Identifier	found		2682466	1					
ANR	2682515	AssignmentExpression	found = FALSE		2682466	2		=			
ANR	2682516	Identifier	FALSE		2682466	0					
ANR	2682517	Identifier	FALSE		2682466	1					
ANR	2682518	IdentifierDeclStatement	struct arm_private_data * private_data ;	6518:2:237162:237199	2682466	9	True				
ANR	2682519	IdentifierDecl	* private_data		2682466	0					
ANR	2682520	IdentifierDeclType	struct arm_private_data *		2682466	0					
ANR	2682521	Identifier	private_data		2682466	1					
ANR	2682522	IfStatement	if ( info -> disassembler_options )		2682466	10					
ANR	2682523	Condition	info -> disassembler_options	6520:6:237208:237233	2682466	0	True				
ANR	2682524	PtrMemberAccess	info -> disassembler_options		2682466	0					
ANR	2682525	Identifier	info		2682466	0					
ANR	2682526	Identifier	disassembler_options		2682466	1					
ANR	2682527	CompoundStatement		14:4:358:358	2682466	1					
ANR	2682528	ExpressionStatement	parse_arm_disassembler_options ( info -> disassembler_options )	6522:6:237248:237307	2682466	0	True				
ANR	2682529	CallExpression	parse_arm_disassembler_options ( info -> disassembler_options )		2682466	0					
ANR	2682530	Callee	parse_arm_disassembler_options		2682466	0					
ANR	2682531	Identifier	parse_arm_disassembler_options		2682466	0					
ANR	2682532	ArgumentList	info -> disassembler_options		2682466	1					
ANR	2682533	Argument	info -> disassembler_options		2682466	0					
ANR	2682534	PtrMemberAccess	info -> disassembler_options		2682466	0					
ANR	2682535	Identifier	info		2682466	0					
ANR	2682536	Identifier	disassembler_options		2682466	1					
ANR	2682537	ExpressionStatement	info -> disassembler_options = NULL	6525:6:237394:237427	2682466	1	True				
ANR	2682538	AssignmentExpression	info -> disassembler_options = NULL		2682466	0		=			
ANR	2682539	PtrMemberAccess	info -> disassembler_options		2682466	0					
ANR	2682540	Identifier	info		2682466	0					
ANR	2682541	Identifier	disassembler_options		2682466	1					
ANR	2682542	Identifier	NULL		2682466	1					
ANR	2682543	IfStatement	if ( info -> private_data == NULL )		2682466	11					
ANR	2682544	Condition	info -> private_data == NULL	6529:6:237510:237535	2682466	0	True				
ANR	2682545	EqualityExpression	info -> private_data == NULL		2682466	0		==			
ANR	2682546	PtrMemberAccess	info -> private_data		2682466	0					
ANR	2682547	Identifier	info		2682466	0					
ANR	2682548	Identifier	private_data		2682466	1					
ANR	2682549	Identifier	NULL		2682466	1					
ANR	2682550	CompoundStatement		24:13:675:706	2682466	1					
ANR	2682551	Statement	static	6531:6:237550:237555	2682466	0	True				
ANR	2682552	IdentifierDeclStatement	struct arm_private_data private ;	6531:13:237557:237588	2682466	1	True				
ANR	2682553	IdentifierDecl	private		2682466	0					
ANR	2682554	IdentifierDeclType	struct arm_private_data		2682466	0					
ANR	2682555	Identifier	private		2682466	1					
ANR	2682556	IfStatement	if ( ( info -> flags & USER_SPECIFIED_MACHINE_TYPE ) == 0 )		2682466	2					
ANR	2682557	Condition	( info -> flags & USER_SPECIFIED_MACHINE_TYPE ) == 0	6533:10:237601:237648	2682466	0	True				
ANR	2682558	EqualityExpression	( info -> flags & USER_SPECIFIED_MACHINE_TYPE ) == 0		2682466	0		==			
ANR	2682559	BitAndExpression	info -> flags & USER_SPECIFIED_MACHINE_TYPE		2682466	0		&			
ANR	2682560	PtrMemberAccess	info -> flags		2682466	0					
ANR	2682561	Identifier	info		2682466	0					
ANR	2682562	Identifier	flags		2682466	1					
ANR	2682563	Identifier	USER_SPECIFIED_MACHINE_TYPE		2682466	1					
ANR	2682564	PrimaryExpression	0		2682466	1					
ANR	2682565	CompoundStatement		26:60:769:769	2682466	1					
ANR	2682566	ExpressionStatement	info -> mach = bfd_mach_arm_unknown	6552:7:238659:238692	2682466	0	True				
ANR	2682567	AssignmentExpression	info -> mach = bfd_mach_arm_unknown		2682466	0		=			
ANR	2682568	PtrMemberAccess	info -> mach		2682466	0					
ANR	2682569	Identifier	info		2682466	0					
ANR	2682570	Identifier	mach		2682466	1					
ANR	2682571	Identifier	bfd_mach_arm_unknown		2682466	1					
ANR	2682572	ExpressionStatement	"select_arm_features ( info -> mach , & private . features )"	6558:6:238866:238918	2682466	3	True				
ANR	2682573	CallExpression	"select_arm_features ( info -> mach , & private . features )"		2682466	0					
ANR	2682574	Callee	select_arm_features		2682466	0					
ANR	2682575	Identifier	select_arm_features		2682466	0					
ANR	2682576	ArgumentList	info -> mach		2682466	1					
ANR	2682577	Argument	info -> mach		2682466	0					
ANR	2682578	PtrMemberAccess	info -> mach		2682466	0					
ANR	2682579	Identifier	info		2682466	0					
ANR	2682580	Identifier	mach		2682466	1					
ANR	2682581	Argument	& private . features		2682466	1					
ANR	2682582	UnaryOperationExpression	& private . features		2682466	0					
ANR	2682583	UnaryOperator	&		2682466	0					
ANR	2682584	MemberAccess	private . features		2682466	1					
ANR	2682585	Identifier	private		2682466	0					
ANR	2682586	Identifier	features		2682466	1					
ANR	2682587	ExpressionStatement	private . has_mapping_symbols = - 1	6560:6:238927:238959	2682466	4	True				
ANR	2682588	AssignmentExpression	private . has_mapping_symbols = - 1		2682466	0		=			
ANR	2682589	MemberAccess	private . has_mapping_symbols		2682466	0					
ANR	2682590	Identifier	private		2682466	0					
ANR	2682591	Identifier	has_mapping_symbols		2682466	1					
ANR	2682592	UnaryOperationExpression	- 1		2682466	1					
ANR	2682593	UnaryOperator	-		2682466	0					
ANR	2682594	PrimaryExpression	1		2682466	1					
ANR	2682595	ExpressionStatement	private . last_mapping_sym = - 1	6561:6:238967:238996	2682466	5	True				
ANR	2682596	AssignmentExpression	private . last_mapping_sym = - 1		2682466	0		=			
ANR	2682597	MemberAccess	private . last_mapping_sym		2682466	0					
ANR	2682598	Identifier	private		2682466	0					
ANR	2682599	Identifier	last_mapping_sym		2682466	1					
ANR	2682600	UnaryOperationExpression	- 1		2682466	1					
ANR	2682601	UnaryOperator	-		2682466	0					
ANR	2682602	PrimaryExpression	1		2682466	1					
ANR	2682603	ExpressionStatement	private . last_mapping_addr = 0	6562:6:239004:239033	2682466	6	True				
ANR	2682604	AssignmentExpression	private . last_mapping_addr = 0		2682466	0		=			
ANR	2682605	MemberAccess	private . last_mapping_addr		2682466	0					
ANR	2682606	Identifier	private		2682466	0					
ANR	2682607	Identifier	last_mapping_addr		2682466	1					
ANR	2682608	PrimaryExpression	0		2682466	1					
ANR	2682609	ExpressionStatement	info -> private_data = & private	6564:6:239042:239072	2682466	7	True				
ANR	2682610	AssignmentExpression	info -> private_data = & private		2682466	0		=			
ANR	2682611	PtrMemberAccess	info -> private_data		2682466	0					
ANR	2682612	Identifier	info		2682466	0					
ANR	2682613	Identifier	private_data		2682466	1					
ANR	2682614	UnaryOperationExpression	& private		2682466	1					
ANR	2682615	UnaryOperator	&		2682466	0					
ANR	2682616	Identifier	private		2682466	1					
ANR	2682617	ExpressionStatement	private_data = info -> private_data	6567:2:239083:239116	2682466	12	True				
ANR	2682618	AssignmentExpression	private_data = info -> private_data		2682466	0		=			
ANR	2682619	Identifier	private_data		2682466	0					
ANR	2682620	PtrMemberAccess	info -> private_data		2682466	1					
ANR	2682621	Identifier	info		2682466	0					
ANR	2682622	Identifier	private_data		2682466	1					
ANR	2682623	ExpressionStatement	little_code = ( ( info -> endian_code == BFD_ENDIAN_LITTLE ) || little )	6571:2:239230:239296	2682466	13	True				
ANR	2682624	AssignmentExpression	little_code = ( ( info -> endian_code == BFD_ENDIAN_LITTLE ) || little )		2682466	0		=			
ANR	2682625	Identifier	little_code		2682466	0					
ANR	2682626	OrExpression	( info -> endian_code == BFD_ENDIAN_LITTLE ) || little		2682466	1		||			
ANR	2682627	EqualityExpression	info -> endian_code == BFD_ENDIAN_LITTLE		2682466	0		==			
ANR	2682628	PtrMemberAccess	info -> endian_code		2682466	0					
ANR	2682629	Identifier	info		2682466	0					
ANR	2682630	Identifier	endian_code		2682466	1					
ANR	2682631	Identifier	BFD_ENDIAN_LITTLE		2682466	1					
ANR	2682632	Identifier	little		2682466	1					
ANR	2682633	IfStatement	if ( info -> symtab_size != 0 && bfd_asymbol_flavour ( * info -> symtab ) == bfd_target_elf_flavour )		2682466	14					
ANR	2682634	Condition	info -> symtab_size != 0 && bfd_asymbol_flavour ( * info -> symtab ) == bfd_target_elf_flavour	6575:6:239401:239493	2682466	0	True				
ANR	2682635	AndExpression	info -> symtab_size != 0 && bfd_asymbol_flavour ( * info -> symtab ) == bfd_target_elf_flavour		2682466	0		&&			
ANR	2682636	EqualityExpression	info -> symtab_size != 0		2682466	0		!=			
ANR	2682637	PtrMemberAccess	info -> symtab_size		2682466	0					
ANR	2682638	Identifier	info		2682466	0					
ANR	2682639	Identifier	symtab_size		2682466	1					
ANR	2682640	PrimaryExpression	0		2682466	1					
ANR	2682641	EqualityExpression	bfd_asymbol_flavour ( * info -> symtab ) == bfd_target_elf_flavour		2682466	1		==			
ANR	2682642	CallExpression	bfd_asymbol_flavour ( * info -> symtab )		2682466	0					
ANR	2682643	Callee	bfd_asymbol_flavour		2682466	0					
ANR	2682644	Identifier	bfd_asymbol_flavour		2682466	0					
ANR	2682645	ArgumentList	* info -> symtab		2682466	1					
ANR	2682646	Argument	* info -> symtab		2682466	0					
ANR	2682647	UnaryOperationExpression	* info -> symtab		2682466	0					
ANR	2682648	UnaryOperator	*		2682466	0					
ANR	2682649	PtrMemberAccess	info -> symtab		2682466	1					
ANR	2682650	Identifier	info		2682466	0					
ANR	2682651	Identifier	symtab		2682466	1					
ANR	2682652	Identifier	bfd_target_elf_flavour		2682466	1					
ANR	2682653	CompoundStatement		74:6:2691:2719	2682466	1					
ANR	2682654	IdentifierDeclStatement	bfd_vma addr ;	6578:6:239508:239520	2682466	0	True				
ANR	2682655	IdentifierDecl	addr		2682466	0					
ANR	2682656	IdentifierDeclType	bfd_vma		2682466	0					
ANR	2682657	Identifier	addr		2682466	1					
ANR	2682658	IdentifierDeclStatement	"int n , start ;"	6579:6:239528:239540	2682466	1	True				
ANR	2682659	IdentifierDecl	n		2682466	0					
ANR	2682660	IdentifierDeclType	int		2682466	0					
ANR	2682661	Identifier	n		2682466	1					
ANR	2682662	IdentifierDecl	start		2682466	1					
ANR	2682663	IdentifierDeclType	int		2682466	0					
ANR	2682664	Identifier	start		2682466	1					
ANR	2682665	IdentifierDeclStatement	int last_sym = - 1 ;	6580:6:239548:239565	2682466	2	True				
ANR	2682666	IdentifierDecl	last_sym = - 1		2682466	0					
ANR	2682667	IdentifierDeclType	int		2682466	0					
ANR	2682668	Identifier	last_sym		2682466	1					
ANR	2682669	AssignmentExpression	last_sym = - 1		2682466	2		=			
ANR	2682670	Identifier	last_sym		2682466	0					
ANR	2682671	UnaryOperationExpression	- 1		2682466	1					
ANR	2682672	UnaryOperator	-		2682466	0					
ANR	2682673	PrimaryExpression	1		2682466	1					
ANR	2682674	IdentifierDeclStatement	enum map_type type = MAP_ARM ;	6581:6:239573:239601	2682466	3	True				
ANR	2682675	IdentifierDecl	type = MAP_ARM		2682466	0					
ANR	2682676	IdentifierDeclType	enum map_type		2682466	0					
ANR	2682677	Identifier	type		2682466	1					
ANR	2682678	AssignmentExpression	type = MAP_ARM		2682466	2		=			
ANR	2682679	Identifier	MAP_ARM		2682466	0					
ANR	2682680	Identifier	MAP_ARM		2682466	1					
ANR	2682681	IfStatement	if ( pc == 0 )		2682466	4					
ANR	2682682	Condition	pc == 0	6590:10:240020:240026	2682466	0	True				
ANR	2682683	EqualityExpression	pc == 0		2682466	0		==			
ANR	2682684	Identifier	pc		2682466	0					
ANR	2682685	PrimaryExpression	0		2682466	1					
ANR	2682686	CompoundStatement		83:19:3147:3147	2682466	1					
ANR	2682687	ExpressionStatement	start = 0	6591:7:240038:240047	2682466	0	True				
ANR	2682688	AssignmentExpression	start = 0		2682466	0		=			
ANR	2682689	Identifier	start		2682466	0					
ANR	2682690	PrimaryExpression	0		2682466	1					
ANR	2682691	ElseStatement	else		2682466	0					
ANR	2682692	CompoundStatement		85:13:3180:3180	2682466	0					
ANR	2682693	ExpressionStatement	start = info -> symtab_pos + 1	6593:7:240071:240099	2682466	0	True				
ANR	2682694	AssignmentExpression	start = info -> symtab_pos + 1		2682466	0		=			
ANR	2682695	Identifier	start		2682466	0					
ANR	2682696	AdditiveExpression	info -> symtab_pos + 1		2682466	1		+			
ANR	2682697	PtrMemberAccess	info -> symtab_pos		2682466	0					
ANR	2682698	Identifier	info		2682466	0					
ANR	2682699	Identifier	symtab_pos		2682466	1					
ANR	2682700	PrimaryExpression	1		2682466	1					
ANR	2682701	IfStatement	if ( start < private_data -> last_mapping_sym )		2682466	1					
ANR	2682702	Condition	start < private_data -> last_mapping_sym	6594:11:240112:240149	2682466	0	True				
ANR	2682703	RelationalExpression	start < private_data -> last_mapping_sym		2682466	0		<			
ANR	2682704	Identifier	start		2682466	0					
ANR	2682705	PtrMemberAccess	private_data -> last_mapping_sym		2682466	1					
ANR	2682706	Identifier	private_data		2682466	0					
ANR	2682707	Identifier	last_mapping_sym		2682466	1					
ANR	2682708	CompoundStatement		87:51:3270:3270	2682466	1					
ANR	2682709	ExpressionStatement	start = private_data -> last_mapping_sym	6595:8:240162:240200	2682466	0	True				
ANR	2682710	AssignmentExpression	start = private_data -> last_mapping_sym		2682466	0		=			
ANR	2682711	Identifier	start		2682466	0					
ANR	2682712	PtrMemberAccess	private_data -> last_mapping_sym		2682466	1					
ANR	2682713	Identifier	private_data		2682466	0					
ANR	2682714	Identifier	last_mapping_sym		2682466	1					
ANR	2682715	ExpressionStatement	found = FALSE	6598:6:240220:240233	2682466	5	True				
ANR	2682716	AssignmentExpression	found = FALSE		2682466	0		=			
ANR	2682717	Identifier	found		2682466	0					
ANR	2682718	Identifier	FALSE		2682466	1					
ANR	2682719	IfStatement	if ( private_data -> has_mapping_symbols != 0 )		2682466	6					
ANR	2682720	Condition	private_data -> has_mapping_symbols != 0	6601:10:240292:240329	2682466	0	True				
ANR	2682721	EqualityExpression	private_data -> has_mapping_symbols != 0		2682466	0		!=			
ANR	2682722	PtrMemberAccess	private_data -> has_mapping_symbols		2682466	0					
ANR	2682723	Identifier	private_data		2682466	0					
ANR	2682724	Identifier	has_mapping_symbols		2682466	1					
ANR	2682725	PrimaryExpression	0		2682466	1					
ANR	2682726	CompoundStatement		95:1:3451:3451	2682466	1					
ANR	2682727	ForStatement	for ( n = start ; n < info -> symtab_size ; n ++ )		2682466	0					
ANR	2682728	ForInit	n = start ;	6604:8:240397:240406	2682466	0	True				
ANR	2682729	AssignmentExpression	n = start		2682466	0		=			
ANR	2682730	Identifier	n		2682466	0					
ANR	2682731	Identifier	start		2682466	1					
ANR	2682732	Condition	n < info -> symtab_size	6604:19:240408:240428	2682466	1	True				
ANR	2682733	RelationalExpression	n < info -> symtab_size		2682466	0		<			
ANR	2682734	Identifier	n		2682466	0					
ANR	2682735	PtrMemberAccess	info -> symtab_size		2682466	1					
ANR	2682736	Identifier	info		2682466	0					
ANR	2682737	Identifier	symtab_size		2682466	1					
ANR	2682738	PostIncDecOperationExpression	n ++	6604:42:240431:240433	2682466	2	True				
ANR	2682739	Identifier	n		2682466	0					
ANR	2682740	IncDec	++		2682466	1					
ANR	2682741	CompoundStatement		98:5:3559:3559	2682466	3					
ANR	2682742	ExpressionStatement	addr = bfd_asymbol_value ( info -> symtab [ n ] )	6606:7:240450:240492	2682466	0	True				
ANR	2682743	AssignmentExpression	addr = bfd_asymbol_value ( info -> symtab [ n ] )		2682466	0		=			
ANR	2682744	Identifier	addr		2682466	0					
ANR	2682745	CallExpression	bfd_asymbol_value ( info -> symtab [ n ] )		2682466	1					
ANR	2682746	Callee	bfd_asymbol_value		2682466	0					
ANR	2682747	Identifier	bfd_asymbol_value		2682466	0					
ANR	2682748	ArgumentList	info -> symtab [ n ]		2682466	1					
ANR	2682749	Argument	info -> symtab [ n ]		2682466	0					
ANR	2682750	ArrayIndexing	info -> symtab [ n ]		2682466	0					
ANR	2682751	PtrMemberAccess	info -> symtab		2682466	0					
ANR	2682752	Identifier	info		2682466	0					
ANR	2682753	Identifier	symtab		2682466	1					
ANR	2682754	Identifier	n		2682466	1					
ANR	2682755	IfStatement	if ( addr > pc )		2682466	1					
ANR	2682756	Condition	addr > pc	6607:11:240505:240513	2682466	0	True				
ANR	2682757	RelationalExpression	addr > pc		2682466	0		>			
ANR	2682758	Identifier	addr		2682466	0					
ANR	2682759	Identifier	pc		2682466	1					
ANR	2682760	CompoundStatement		100:22:3634:3634	2682466	1					
ANR	2682761	BreakStatement	break ;	6608:8:240526:240531	2682466	0	True				
ANR	2682762	IfStatement	"if ( get_map_sym_type ( info , n , & type ) )"		2682466	2					
ANR	2682763	Condition	"get_map_sym_type ( info , n , & type )"	6610:11:240553:240585	2682466	0	True				
ANR	2682764	CallExpression	"get_map_sym_type ( info , n , & type )"		2682466	0					
ANR	2682765	Callee	get_map_sym_type		2682466	0					
ANR	2682766	Identifier	get_map_sym_type		2682466	0					
ANR	2682767	ArgumentList	info		2682466	1					
ANR	2682768	Argument	info		2682466	0					
ANR	2682769	Identifier	info		2682466	0					
ANR	2682770	Argument	n		2682466	1					
ANR	2682771	Identifier	n		2682466	0					
ANR	2682772	Argument	& type		2682466	2					
ANR	2682773	UnaryOperationExpression	& type		2682466	0					
ANR	2682774	UnaryOperator	&		2682466	0					
ANR	2682775	Identifier	type		2682466	1					
ANR	2682776	CompoundStatement		104:2:3708:3708	2682466	1					
ANR	2682777	ExpressionStatement	last_sym = n	6612:4:240596:240608	2682466	0	True				
ANR	2682778	AssignmentExpression	last_sym = n		2682466	0		=			
ANR	2682779	Identifier	last_sym		2682466	0					
ANR	2682780	Identifier	n		2682466	1					
ANR	2682781	ExpressionStatement	found = TRUE	6613:4:240614:240626	2682466	1	True				
ANR	2682782	AssignmentExpression	found = TRUE		2682466	0		=			
ANR	2682783	Identifier	found		2682466	0					
ANR	2682784	Identifier	TRUE		2682466	1					
ANR	2682785	IfStatement	if ( ! found )		2682466	1					
ANR	2682786	Condition	! found	6617:7:240647:240652	2682466	0	True				
ANR	2682787	UnaryOperationExpression	! found		2682466	0					
ANR	2682788	UnaryOperator	!		2682466	0					
ANR	2682789	Identifier	found		2682466	1					
ANR	2682790	CompoundStatement		111:5:3778:3778	2682466	1					
ANR	2682791	ForStatement	for ( n = start - 1 ; n >= 0 ; n -- )		2682466	0					
ANR	2682792	ForInit	n = start - 1 ;	6621:12:240769:240782	2682466	0	True				
ANR	2682793	AssignmentExpression	n = start - 1		2682466	0		=			
ANR	2682794	Identifier	n		2682466	0					
ANR	2682795	AdditiveExpression	start - 1		2682466	1		-			
ANR	2682796	Identifier	start		2682466	0					
ANR	2682797	PrimaryExpression	1		2682466	1					
ANR	2682798	Condition	n >= 0	6621:27:240784:240789	2682466	1	True				
ANR	2682799	RelationalExpression	n >= 0		2682466	0		>=			
ANR	2682800	Identifier	n		2682466	0					
ANR	2682801	PrimaryExpression	0		2682466	1					
ANR	2682802	PostIncDecOperationExpression	n --	6621:35:240792:240794	2682466	2	True				
ANR	2682803	Identifier	n		2682466	0					
ANR	2682804	IncDec	--		2682466	1					
ANR	2682805	CompoundStatement		115:2:3917:3917	2682466	3					
ANR	2682806	IfStatement	"if ( get_map_sym_type ( info , n , & type ) )"		2682466	0					
ANR	2682807	Condition	"get_map_sym_type ( info , n , & type )"	6623:8:240809:240841	2682466	0	True				
ANR	2682808	CallExpression	"get_map_sym_type ( info , n , & type )"		2682466	0					
ANR	2682809	Callee	get_map_sym_type		2682466	0					
ANR	2682810	Identifier	get_map_sym_type		2682466	0					
ANR	2682811	ArgumentList	info		2682466	1					
ANR	2682812	Argument	info		2682466	0					
ANR	2682813	Identifier	info		2682466	0					
ANR	2682814	Argument	n		2682466	1					
ANR	2682815	Identifier	n		2682466	0					
ANR	2682816	Argument	& type		2682466	2					
ANR	2682817	UnaryOperationExpression	& type		2682466	0					
ANR	2682818	UnaryOperator	&		2682466	0					
ANR	2682819	Identifier	type		2682466	1					
ANR	2682820	CompoundStatement		117:6:3968:3968	2682466	1					
ANR	2682821	ExpressionStatement	last_sym = n	6625:8:240860:240872	2682466	0	True				
ANR	2682822	AssignmentExpression	last_sym = n		2682466	0		=			
ANR	2682823	Identifier	last_sym		2682466	0					
ANR	2682824	Identifier	n		2682466	1					
ANR	2682825	ExpressionStatement	found = TRUE	6626:8:240882:240894	2682466	1	True				
ANR	2682826	AssignmentExpression	found = TRUE		2682466	0		=			
ANR	2682827	Identifier	found		2682466	0					
ANR	2682828	Identifier	TRUE		2682466	1					
ANR	2682829	BreakStatement	break ;	6627:8:240904:240909	2682466	2	True				
ANR	2682830	IfStatement	if ( found )		2682466	2					
ANR	2682831	Condition	found	6632:9:240940:240944	2682466	0	True				
ANR	2682832	Identifier	found		2682466	0					
ANR	2682833	CompoundStatement		125:16:4065:4065	2682466	1					
ANR	2682834	ExpressionStatement	private_data -> has_mapping_symbols = 1	6633:6:240955:240992	2682466	0	True				
ANR	2682835	AssignmentExpression	private_data -> has_mapping_symbols = 1		2682466	0		=			
ANR	2682836	PtrMemberAccess	private_data -> has_mapping_symbols		2682466	0					
ANR	2682837	Identifier	private_data		2682466	0					
ANR	2682838	Identifier	has_mapping_symbols		2682466	1					
ANR	2682839	PrimaryExpression	1		2682466	1					
ANR	2682840	IfStatement	if ( ! found && private_data -> has_mapping_symbols == - 1 )		2682466	3					
ANR	2682841	Condition	! found && private_data -> has_mapping_symbols == - 1	6641:9:241280:241328	2682466	0	True				
ANR	2682842	AndExpression	! found && private_data -> has_mapping_symbols == - 1		2682466	0		&&			
ANR	2682843	UnaryOperationExpression	! found		2682466	0					
ANR	2682844	UnaryOperator	!		2682466	0					
ANR	2682845	Identifier	found		2682466	1					
ANR	2682846	EqualityExpression	private_data -> has_mapping_symbols == - 1		2682466	1		==			
ANR	2682847	PtrMemberAccess	private_data -> has_mapping_symbols		2682466	0					
ANR	2682848	Identifier	private_data		2682466	0					
ANR	2682849	Identifier	has_mapping_symbols		2682466	1					
ANR	2682850	UnaryOperationExpression	- 1		2682466	1					
ANR	2682851	UnaryOperator	-		2682466	0					
ANR	2682852	PrimaryExpression	1		2682466	1					
ANR	2682853	CompoundStatement		134:60:4449:4449	2682466	1					
ANR	2682854	ForStatement	for ( n = 0 ; n < info -> symtab_size ; n ++ )		2682466	0					
ANR	2682855	ForInit	n = 0 ;	6643:11:241399:241404	2682466	0	True				
ANR	2682856	AssignmentExpression	n = 0		2682466	0		=			
ANR	2682857	Identifier	n		2682466	0					
ANR	2682858	PrimaryExpression	0		2682466	1					
ANR	2682859	Condition	n < info -> symtab_size	6643:18:241406:241426	2682466	1	True				
ANR	2682860	RelationalExpression	n < info -> symtab_size		2682466	0		<			
ANR	2682861	Identifier	n		2682466	0					
ANR	2682862	PtrMemberAccess	info -> symtab_size		2682466	1					
ANR	2682863	Identifier	info		2682466	0					
ANR	2682864	Identifier	symtab_size		2682466	1					
ANR	2682865	PostIncDecOperationExpression	n ++	6643:41:241429:241431	2682466	2	True				
ANR	2682866	Identifier	n		2682466	0					
ANR	2682867	IncDec	++		2682466	1					
ANR	2682868	CompoundStatement		136:46:4552:4552	2682466	3					
ANR	2682869	IfStatement	"if ( is_mapping_symbol ( info , n , & type ) )"		2682466	0					
ANR	2682870	Condition	"is_mapping_symbol ( info , n , & type )"	6644:11:241447:241480	2682466	0	True				
ANR	2682871	CallExpression	"is_mapping_symbol ( info , n , & type )"		2682466	0					
ANR	2682872	Callee	is_mapping_symbol		2682466	0					
ANR	2682873	Identifier	is_mapping_symbol		2682466	0					
ANR	2682874	ArgumentList	info		2682466	1					
ANR	2682875	Argument	info		2682466	0					
ANR	2682876	Identifier	info		2682466	0					
ANR	2682877	Argument	n		2682466	1					
ANR	2682878	Identifier	n		2682466	0					
ANR	2682879	Argument	& type		2682466	2					
ANR	2682880	UnaryOperationExpression	& type		2682466	0					
ANR	2682881	UnaryOperator	&		2682466	0					
ANR	2682882	Identifier	type		2682466	1					
ANR	2682883	CompoundStatement		137:47:4601:4601	2682466	1					
ANR	2682884	ExpressionStatement	private_data -> has_mapping_symbols = 1	6645:8:241493:241530	2682466	0	True				
ANR	2682885	AssignmentExpression	private_data -> has_mapping_symbols = 1		2682466	0		=			
ANR	2682886	PtrMemberAccess	private_data -> has_mapping_symbols		2682466	0					
ANR	2682887	Identifier	private_data		2682466	0					
ANR	2682888	Identifier	has_mapping_symbols		2682466	1					
ANR	2682889	PrimaryExpression	1		2682466	1					
ANR	2682890	BreakStatement	break ;	6646:8:241540:241545	2682466	1	True				
ANR	2682891	IfStatement	if ( private_data -> has_mapping_symbols == - 1 )		2682466	1					
ANR	2682892	Condition	private_data -> has_mapping_symbols == - 1	6649:10:241574:241612	2682466	0	True				
ANR	2682893	EqualityExpression	private_data -> has_mapping_symbols == - 1		2682466	0		==			
ANR	2682894	PtrMemberAccess	private_data -> has_mapping_symbols		2682466	0					
ANR	2682895	Identifier	private_data		2682466	0					
ANR	2682896	Identifier	has_mapping_symbols		2682466	1					
ANR	2682897	UnaryOperationExpression	- 1		2682466	1					
ANR	2682898	UnaryOperator	-		2682466	0					
ANR	2682899	PrimaryExpression	1		2682466	1					
ANR	2682900	CompoundStatement		142:51:4733:4733	2682466	1					
ANR	2682901	ExpressionStatement	private_data -> has_mapping_symbols = 0	6650:7:241624:241661	2682466	0	True				
ANR	2682902	AssignmentExpression	private_data -> has_mapping_symbols = 0		2682466	0		=			
ANR	2682903	PtrMemberAccess	private_data -> has_mapping_symbols		2682466	0					
ANR	2682904	Identifier	private_data		2682466	0					
ANR	2682905	Identifier	has_mapping_symbols		2682466	1					
ANR	2682906	PrimaryExpression	0		2682466	1					
ANR	2682907	IfStatement	if ( ! found && private_data -> has_mapping_symbols == 1 )		2682466	4					
ANR	2682908	Condition	! found && private_data -> has_mapping_symbols == 1	6654:7:241686:241733	2682466	0	True				
ANR	2682909	AndExpression	! found && private_data -> has_mapping_symbols == 1		2682466	0		&&			
ANR	2682910	UnaryOperationExpression	! found		2682466	0					
ANR	2682911	UnaryOperator	!		2682466	0					
ANR	2682912	Identifier	found		2682466	1					
ANR	2682913	EqualityExpression	private_data -> has_mapping_symbols == 1		2682466	1		==			
ANR	2682914	PtrMemberAccess	private_data -> has_mapping_symbols		2682466	0					
ANR	2682915	Identifier	private_data		2682466	0					
ANR	2682916	Identifier	has_mapping_symbols		2682466	1					
ANR	2682917	PrimaryExpression	1		2682466	1					
ANR	2682918	CompoundStatement		148:5:4859:4859	2682466	1					
ANR	2682919	ExpressionStatement	type = MAP_DATA	6656:7:241750:241765	2682466	0	True				
ANR	2682920	AssignmentExpression	type = MAP_DATA		2682466	0		=			
ANR	2682921	Identifier	type		2682466	0					
ANR	2682922	Identifier	MAP_DATA		2682466	1					
ANR	2682923	ExpressionStatement	found = TRUE	6657:7:241774:241786	2682466	1	True				
ANR	2682924	AssignmentExpression	found = TRUE		2682466	0		=			
ANR	2682925	Identifier	found		2682466	0					
ANR	2682926	Identifier	TRUE		2682466	1					
ANR	2682927	IfStatement	if ( ! found )		2682466	7					
ANR	2682928	Condition	! found	6663:10:241921:241926	2682466	0	True				
ANR	2682929	UnaryOperationExpression	! found		2682466	0					
ANR	2682930	UnaryOperator	!		2682466	0					
ANR	2682931	Identifier	found		2682466	1					
ANR	2682932	CompoundStatement		157:1:5048:5048	2682466	1					
ANR	2682933	ForStatement	for ( n = start ; n < info -> symtab_size ; n ++ )		2682466	0					
ANR	2682934	ForInit	n = start ;	6666:8:241994:242003	2682466	0	True				
ANR	2682935	AssignmentExpression	n = start		2682466	0		=			
ANR	2682936	Identifier	n		2682466	0					
ANR	2682937	Identifier	start		2682466	1					
ANR	2682938	Condition	n < info -> symtab_size	6666:19:242005:242025	2682466	1	True				
ANR	2682939	RelationalExpression	n < info -> symtab_size		2682466	0		<			
ANR	2682940	Identifier	n		2682466	0					
ANR	2682941	PtrMemberAccess	info -> symtab_size		2682466	1					
ANR	2682942	Identifier	info		2682466	0					
ANR	2682943	Identifier	symtab_size		2682466	1					
ANR	2682944	PostIncDecOperationExpression	n ++	6666:42:242028:242030	2682466	2	True				
ANR	2682945	Identifier	n		2682466	0					
ANR	2682946	IncDec	++		2682466	1					
ANR	2682947	CompoundStatement		160:5:5156:5156	2682466	3					
ANR	2682948	ExpressionStatement	addr = bfd_asymbol_value ( info -> symtab [ n ] )	6668:7:242047:242089	2682466	0	True				
ANR	2682949	AssignmentExpression	addr = bfd_asymbol_value ( info -> symtab [ n ] )		2682466	0		=			
ANR	2682950	Identifier	addr		2682466	0					
ANR	2682951	CallExpression	bfd_asymbol_value ( info -> symtab [ n ] )		2682466	1					
ANR	2682952	Callee	bfd_asymbol_value		2682466	0					
ANR	2682953	Identifier	bfd_asymbol_value		2682466	0					
ANR	2682954	ArgumentList	info -> symtab [ n ]		2682466	1					
ANR	2682955	Argument	info -> symtab [ n ]		2682466	0					
ANR	2682956	ArrayIndexing	info -> symtab [ n ]		2682466	0					
ANR	2682957	PtrMemberAccess	info -> symtab		2682466	0					
ANR	2682958	Identifier	info		2682466	0					
ANR	2682959	Identifier	symtab		2682466	1					
ANR	2682960	Identifier	n		2682466	1					
ANR	2682961	IfStatement	if ( addr > pc )		2682466	1					
ANR	2682962	Condition	addr > pc	6669:11:242102:242110	2682466	0	True				
ANR	2682963	RelationalExpression	addr > pc		2682466	0		>			
ANR	2682964	Identifier	addr		2682466	0					
ANR	2682965	Identifier	pc		2682466	1					
ANR	2682966	CompoundStatement		162:22:5231:5231	2682466	1					
ANR	2682967	BreakStatement	break ;	6670:8:242123:242128	2682466	0	True				
ANR	2682968	IfStatement	"if ( get_sym_code_type ( info , n , & type ) )"		2682466	2					
ANR	2682969	Condition	"get_sym_code_type ( info , n , & type )"	6672:11:242150:242183	2682466	0	True				
ANR	2682970	CallExpression	"get_sym_code_type ( info , n , & type )"		2682466	0					
ANR	2682971	Callee	get_sym_code_type		2682466	0					
ANR	2682972	Identifier	get_sym_code_type		2682466	0					
ANR	2682973	ArgumentList	info		2682466	1					
ANR	2682974	Argument	info		2682466	0					
ANR	2682975	Identifier	info		2682466	0					
ANR	2682976	Argument	n		2682466	1					
ANR	2682977	Identifier	n		2682466	0					
ANR	2682978	Argument	& type		2682466	2					
ANR	2682979	UnaryOperationExpression	& type		2682466	0					
ANR	2682980	UnaryOperator	&		2682466	0					
ANR	2682981	Identifier	type		2682466	1					
ANR	2682982	CompoundStatement		166:2:5306:5306	2682466	1					
ANR	2682983	ExpressionStatement	last_sym = n	6674:4:242194:242206	2682466	0	True				
ANR	2682984	AssignmentExpression	last_sym = n		2682466	0		=			
ANR	2682985	Identifier	last_sym		2682466	0					
ANR	2682986	Identifier	n		2682466	1					
ANR	2682987	ExpressionStatement	found = TRUE	6675:4:242212:242224	2682466	1	True				
ANR	2682988	AssignmentExpression	found = TRUE		2682466	0		=			
ANR	2682989	Identifier	found		2682466	0					
ANR	2682990	Identifier	TRUE		2682466	1					
ANR	2682991	IfStatement	if ( ! found )		2682466	1					
ANR	2682992	Condition	! found	6679:7:242245:242250	2682466	0	True				
ANR	2682993	UnaryOperationExpression	! found		2682466	0					
ANR	2682994	UnaryOperator	!		2682466	0					
ANR	2682995	Identifier	found		2682466	1					
ANR	2682996	CompoundStatement		173:5:5376:5376	2682466	1					
ANR	2682997	ForStatement	for ( n = start - 1 ; n >= 0 ; n -- )		2682466	0					
ANR	2682998	ForInit	n = start - 1 ;	6683:12:242367:242380	2682466	0	True				
ANR	2682999	AssignmentExpression	n = start - 1		2682466	0		=			
ANR	2683000	Identifier	n		2682466	0					
ANR	2683001	AdditiveExpression	start - 1		2682466	1		-			
ANR	2683002	Identifier	start		2682466	0					
ANR	2683003	PrimaryExpression	1		2682466	1					
ANR	2683004	Condition	n >= 0	6683:27:242382:242387	2682466	1	True				
ANR	2683005	RelationalExpression	n >= 0		2682466	0		>=			
ANR	2683006	Identifier	n		2682466	0					
ANR	2683007	PrimaryExpression	0		2682466	1					
ANR	2683008	PostIncDecOperationExpression	n --	6683:35:242390:242392	2682466	2	True				
ANR	2683009	Identifier	n		2682466	0					
ANR	2683010	IncDec	--		2682466	1					
ANR	2683011	CompoundStatement		177:2:5515:5515	2682466	3					
ANR	2683012	IfStatement	"if ( get_sym_code_type ( info , n , & type ) )"		2682466	0					
ANR	2683013	Condition	"get_sym_code_type ( info , n , & type )"	6685:8:242407:242440	2682466	0	True				
ANR	2683014	CallExpression	"get_sym_code_type ( info , n , & type )"		2682466	0					
ANR	2683015	Callee	get_sym_code_type		2682466	0					
ANR	2683016	Identifier	get_sym_code_type		2682466	0					
ANR	2683017	ArgumentList	info		2682466	1					
ANR	2683018	Argument	info		2682466	0					
ANR	2683019	Identifier	info		2682466	0					
ANR	2683020	Argument	n		2682466	1					
ANR	2683021	Identifier	n		2682466	0					
ANR	2683022	Argument	& type		2682466	2					
ANR	2683023	UnaryOperationExpression	& type		2682466	0					
ANR	2683024	UnaryOperator	&		2682466	0					
ANR	2683025	Identifier	type		2682466	1					
ANR	2683026	CompoundStatement		179:6:5567:5567	2682466	1					
ANR	2683027	ExpressionStatement	last_sym = n	6687:8:242459:242471	2682466	0	True				
ANR	2683028	AssignmentExpression	last_sym = n		2682466	0		=			
ANR	2683029	Identifier	last_sym		2682466	0					
ANR	2683030	Identifier	n		2682466	1					
ANR	2683031	ExpressionStatement	found = TRUE	6688:8:242481:242493	2682466	1	True				
ANR	2683032	AssignmentExpression	found = TRUE		2682466	0		=			
ANR	2683033	Identifier	found		2682466	0					
ANR	2683034	Identifier	TRUE		2682466	1					
ANR	2683035	BreakStatement	break ;	6689:8:242503:242508	2682466	2	True				
ANR	2683036	ExpressionStatement	private_data -> last_mapping_sym = last_sym	6695:6:242539:242580	2682466	8	True				
ANR	2683037	AssignmentExpression	private_data -> last_mapping_sym = last_sym		2682466	0		=			
ANR	2683038	PtrMemberAccess	private_data -> last_mapping_sym		2682466	0					
ANR	2683039	Identifier	private_data		2682466	0					
ANR	2683040	Identifier	last_mapping_sym		2682466	1					
ANR	2683041	Identifier	last_sym		2682466	1					
ANR	2683042	ExpressionStatement	private_data -> last_type = type	6696:6:242588:242618	2682466	9	True				
ANR	2683043	AssignmentExpression	private_data -> last_type = type		2682466	0		=			
ANR	2683044	PtrMemberAccess	private_data -> last_type		2682466	0					
ANR	2683045	Identifier	private_data		2682466	0					
ANR	2683046	Identifier	last_type		2682466	1					
ANR	2683047	Identifier	type		2682466	1					
ANR	2683048	ExpressionStatement	is_thumb = ( private_data -> last_type == MAP_THUMB )	6697:6:242626:242675	2682466	10	True				
ANR	2683049	AssignmentExpression	is_thumb = ( private_data -> last_type == MAP_THUMB )		2682466	0		=			
ANR	2683050	Identifier	is_thumb		2682466	0					
ANR	2683051	EqualityExpression	private_data -> last_type == MAP_THUMB		2682466	1		==			
ANR	2683052	PtrMemberAccess	private_data -> last_type		2682466	0					
ANR	2683053	Identifier	private_data		2682466	0					
ANR	2683054	Identifier	last_type		2682466	1					
ANR	2683055	Identifier	MAP_THUMB		2682466	1					
ANR	2683056	ExpressionStatement	is_data = ( private_data -> last_type == MAP_DATA )	6698:6:242683:242730	2682466	11	True				
ANR	2683057	AssignmentExpression	is_data = ( private_data -> last_type == MAP_DATA )		2682466	0		=			
ANR	2683058	Identifier	is_data		2682466	0					
ANR	2683059	EqualityExpression	private_data -> last_type == MAP_DATA		2682466	1		==			
ANR	2683060	PtrMemberAccess	private_data -> last_type		2682466	0					
ANR	2683061	Identifier	private_data		2682466	0					
ANR	2683062	Identifier	last_type		2682466	1					
ANR	2683063	Identifier	MAP_DATA		2682466	1					
ANR	2683064	IfStatement	if ( is_data )		2682466	12					
ANR	2683065	Condition	is_data	6704:10:242926:242932	2682466	0	True				
ANR	2683066	Identifier	is_data		2682466	0					
ANR	2683067	CompoundStatement		198:1:6054:6054	2682466	1					
ANR	2683068	ExpressionStatement	size = 4 - ( pc & 3 )	6706:3:242941:242960	2682466	0	True				
ANR	2683069	AssignmentExpression	size = 4 - ( pc & 3 )		2682466	0		=			
ANR	2683070	Identifier	size		2682466	0					
ANR	2683071	AdditiveExpression	4 - ( pc & 3 )		2682466	1		-			
ANR	2683072	PrimaryExpression	4		2682466	0					
ANR	2683073	BitAndExpression	pc & 3		2682466	1		&			
ANR	2683074	Identifier	pc		2682466	0					
ANR	2683075	PrimaryExpression	3		2682466	1					
ANR	2683076	ForStatement	for ( n = last_sym + 1 ; n < info -> symtab_size ; n ++ )		2682466	1					
ANR	2683077	ForInit	n = last_sym + 1 ;	6707:8:242970:242986	2682466	0	True				
ANR	2683078	AssignmentExpression	n = last_sym + 1		2682466	0		=			
ANR	2683079	Identifier	n		2682466	0					
ANR	2683080	AdditiveExpression	last_sym + 1		2682466	1		+			
ANR	2683081	Identifier	last_sym		2682466	0					
ANR	2683082	PrimaryExpression	1		2682466	1					
ANR	2683083	Condition	n < info -> symtab_size	6707:26:242988:243008	2682466	1	True				
ANR	2683084	RelationalExpression	n < info -> symtab_size		2682466	0		<			
ANR	2683085	Identifier	n		2682466	0					
ANR	2683086	PtrMemberAccess	info -> symtab_size		2682466	1					
ANR	2683087	Identifier	info		2682466	0					
ANR	2683088	Identifier	symtab_size		2682466	1					
ANR	2683089	PostIncDecOperationExpression	n ++	6707:49:243011:243013	2682466	2	True				
ANR	2683090	Identifier	n		2682466	0					
ANR	2683091	IncDec	++		2682466	1					
ANR	2683092	CompoundStatement		201:5:6139:6139	2682466	3					
ANR	2683093	ExpressionStatement	addr = bfd_asymbol_value ( info -> symtab [ n ] )	6709:7:243030:243072	2682466	0	True				
ANR	2683094	AssignmentExpression	addr = bfd_asymbol_value ( info -> symtab [ n ] )		2682466	0		=			
ANR	2683095	Identifier	addr		2682466	0					
ANR	2683096	CallExpression	bfd_asymbol_value ( info -> symtab [ n ] )		2682466	1					
ANR	2683097	Callee	bfd_asymbol_value		2682466	0					
ANR	2683098	Identifier	bfd_asymbol_value		2682466	0					
ANR	2683099	ArgumentList	info -> symtab [ n ]		2682466	1					
ANR	2683100	Argument	info -> symtab [ n ]		2682466	0					
ANR	2683101	ArrayIndexing	info -> symtab [ n ]		2682466	0					
ANR	2683102	PtrMemberAccess	info -> symtab		2682466	0					
ANR	2683103	Identifier	info		2682466	0					
ANR	2683104	Identifier	symtab		2682466	1					
ANR	2683105	Identifier	n		2682466	1					
ANR	2683106	IfStatement	if ( addr > pc && ( info -> section == NULL || info -> section == info -> symtab [ n ] -> section ) )		2682466	1					
ANR	2683107	Condition	addr > pc && ( info -> section == NULL || info -> section == info -> symtab [ n ] -> section )	6710:11:243085:243177	2682466	0	True				
ANR	2683108	AndExpression	addr > pc && ( info -> section == NULL || info -> section == info -> symtab [ n ] -> section )		2682466	0		&&			
ANR	2683109	RelationalExpression	addr > pc		2682466	0		>			
ANR	2683110	Identifier	addr		2682466	0					
ANR	2683111	Identifier	pc		2682466	1					
ANR	2683112	OrExpression	info -> section == NULL || info -> section == info -> symtab [ n ] -> section		2682466	1		||			
ANR	2683113	EqualityExpression	info -> section == NULL		2682466	0		==			
ANR	2683114	PtrMemberAccess	info -> section		2682466	0					
ANR	2683115	Identifier	info		2682466	0					
ANR	2683116	Identifier	section		2682466	1					
ANR	2683117	Identifier	NULL		2682466	1					
ANR	2683118	EqualityExpression	info -> section == info -> symtab [ n ] -> section		2682466	1		==			
ANR	2683119	PtrMemberAccess	info -> section		2682466	0					
ANR	2683120	Identifier	info		2682466	0					
ANR	2683121	Identifier	section		2682466	1					
ANR	2683122	PtrMemberAccess	info -> symtab [ n ] -> section		2682466	1					
ANR	2683123	ArrayIndexing	info -> symtab [ n ]		2682466	0					
ANR	2683124	PtrMemberAccess	info -> symtab		2682466	0					
ANR	2683125	Identifier	info		2682466	0					
ANR	2683126	Identifier	symtab		2682466	1					
ANR	2683127	Identifier	n		2682466	1					
ANR	2683128	Identifier	section		2682466	1					
ANR	2683129	CompoundStatement		206:2:6300:6300	2682466	1					
ANR	2683130	IfStatement	if ( addr - pc < size )		2682466	0					
ANR	2683131	Condition	addr - pc < size	6714:12:243196:243211	2682466	0	True				
ANR	2683132	RelationalExpression	addr - pc < size		2682466	0		<			
ANR	2683133	AdditiveExpression	addr - pc		2682466	0		-			
ANR	2683134	Identifier	addr		2682466	0					
ANR	2683135	Identifier	pc		2682466	1					
ANR	2683136	Identifier	size		2682466	1					
ANR	2683137	CompoundStatement		207:30:6332:6332	2682466	1					
ANR	2683138	ExpressionStatement	size = addr - pc	6715:9:243225:243241	2682466	0	True				
ANR	2683139	AssignmentExpression	size = addr - pc		2682466	0		=			
ANR	2683140	Identifier	size		2682466	0					
ANR	2683141	AdditiveExpression	addr - pc		2682466	1		-			
ANR	2683142	Identifier	addr		2682466	0					
ANR	2683143	Identifier	pc		2682466	1					
ANR	2683144	BreakStatement	break ;	6717:8:243261:243266	2682466	1	True				
ANR	2683145	IfStatement	if ( size == 3 )		2682466	2					
ANR	2683146	Condition	size == 3	6723:9:243434:243442	2682466	0	True				
ANR	2683147	EqualityExpression	size == 3		2682466	0		==			
ANR	2683148	Identifier	size		2682466	0					
ANR	2683149	PrimaryExpression	3		2682466	1					
ANR	2683150	CompoundStatement		216:20:6563:6563	2682466	1					
ANR	2683151	ExpressionStatement	size = ( pc & 1 ) ? 1 : 2	6724:6:243453:243476	2682466	0	True				
ANR	2683152	AssignmentExpression	size = ( pc & 1 ) ? 1 : 2		2682466	0		=			
ANR	2683153	Identifier	size		2682466	0					
ANR	2683154	ConditionalExpression	( pc & 1 ) ? 1 : 2		2682466	1					
ANR	2683155	Condition	pc & 1		2682466	0					
ANR	2683156	BitAndExpression	pc & 1		2682466	0		&			
ANR	2683157	Identifier	pc		2682466	0					
ANR	2683158	PrimaryExpression	1		2682466	1					
ANR	2683159	PrimaryExpression	1		2682466	1					
ANR	2683160	PrimaryExpression	2		2682466	2					
ANR	2683161	IfStatement	if ( force_thumb )		2682466	15					
ANR	2683162	Condition	force_thumb	6729:8:243503:243513	2682466	0	True				
ANR	2683163	Identifier	force_thumb		2682466	0					
ANR	2683164	CompoundStatement		222:21:6634:6634	2682466	1					
ANR	2683165	ExpressionStatement	is_thumb = TRUE	6730:5:243523:243538	2682466	0	True				
ANR	2683166	AssignmentExpression	is_thumb = TRUE		2682466	0		=			
ANR	2683167	Identifier	is_thumb		2682466	0					
ANR	2683168	Identifier	TRUE		2682466	1					
ANR	2683169	IfStatement	if ( is_data )		2682466	16					
ANR	2683170	Condition	is_data	6733:8:243555:243561	2682466	0	True				
ANR	2683171	Identifier	is_data		2682466	0					
ANR	2683172	CompoundStatement		226:17:6682:6682	2682466	1					
ANR	2683173	ExpressionStatement	info -> display_endian = little ? BFD_ENDIAN_LITTLE : BFD_ENDIAN_BIG	6734:5:243571:243637	2682466	0	True				
ANR	2683174	AssignmentExpression	info -> display_endian = little ? BFD_ENDIAN_LITTLE : BFD_ENDIAN_BIG		2682466	0		=			
ANR	2683175	PtrMemberAccess	info -> display_endian		2682466	0					
ANR	2683176	Identifier	info		2682466	0					
ANR	2683177	Identifier	display_endian		2682466	1					
ANR	2683178	ConditionalExpression	little ? BFD_ENDIAN_LITTLE : BFD_ENDIAN_BIG		2682466	1					
ANR	2683179	Condition	little		2682466	0					
ANR	2683180	Identifier	little		2682466	0					
ANR	2683181	Identifier	BFD_ENDIAN_LITTLE		2682466	1					
ANR	2683182	Identifier	BFD_ENDIAN_BIG		2682466	2					
ANR	2683183	ElseStatement	else		2682466	0					
ANR	2683184	CompoundStatement		228:11:6768:6768	2682466	0					
ANR	2683185	ExpressionStatement	info -> display_endian = little_code ? BFD_ENDIAN_LITTLE : BFD_ENDIAN_BIG	6736:5:243657:243728	2682466	0	True				
ANR	2683186	AssignmentExpression	info -> display_endian = little_code ? BFD_ENDIAN_LITTLE : BFD_ENDIAN_BIG		2682466	0		=			
ANR	2683187	PtrMemberAccess	info -> display_endian		2682466	0					
ANR	2683188	Identifier	info		2682466	0					
ANR	2683189	Identifier	display_endian		2682466	1					
ANR	2683190	ConditionalExpression	little_code ? BFD_ENDIAN_LITTLE : BFD_ENDIAN_BIG		2682466	1					
ANR	2683191	Condition	little_code		2682466	0					
ANR	2683192	Identifier	little_code		2682466	0					
ANR	2683193	Identifier	BFD_ENDIAN_LITTLE		2682466	1					
ANR	2683194	Identifier	BFD_ENDIAN_BIG		2682466	2					
ANR	2683195	ExpressionStatement	info -> bytes_per_line = 4	6739:4:243741:243765	2682466	17	True				
ANR	2683196	AssignmentExpression	info -> bytes_per_line = 4		2682466	0		=			
ANR	2683197	PtrMemberAccess	info -> bytes_per_line		2682466	0					
ANR	2683198	Identifier	info		2682466	0					
ANR	2683199	Identifier	bytes_per_line		2682466	1					
ANR	2683200	PrimaryExpression	4		2682466	1					
ANR	2683201	IfStatement	if ( is_data && ( ( info -> flags & DISASSEMBLE_DATA ) == 0 ) )		2682466	18					
ANR	2683202	Condition	is_data && ( ( info -> flags & DISASSEMBLE_DATA ) == 0 )	6742:8:243849:243898	2682466	0	True				
ANR	2683203	AndExpression	is_data && ( ( info -> flags & DISASSEMBLE_DATA ) == 0 )		2682466	0		&&			
ANR	2683204	Identifier	is_data		2682466	0					
ANR	2683205	EqualityExpression	( info -> flags & DISASSEMBLE_DATA ) == 0		2682466	1		==			
ANR	2683206	BitAndExpression	info -> flags & DISASSEMBLE_DATA		2682466	0		&			
ANR	2683207	PtrMemberAccess	info -> flags		2682466	0					
ANR	2683208	Identifier	info		2682466	0					
ANR	2683209	Identifier	flags		2682466	1					
ANR	2683210	Identifier	DISASSEMBLE_DATA		2682466	1					
ANR	2683211	PrimaryExpression	0		2682466	1					
ANR	2683212	CompoundStatement		236:5:7026:7031	2682466	1					
ANR	2683213	IdentifierDeclStatement	int i ;	6743:5:243908:243913	2682466	0	True				
ANR	2683214	IdentifierDecl	i		2682466	0					
ANR	2683215	IdentifierDeclType	int		2682466	0					
ANR	2683216	Identifier	i		2682466	1					
ANR	2683217	ExpressionStatement	info -> bytes_per_chunk = size	6746:5:243961:243989	2682466	1	True				
ANR	2683218	AssignmentExpression	info -> bytes_per_chunk = size		2682466	0		=			
ANR	2683219	PtrMemberAccess	info -> bytes_per_chunk		2682466	0					
ANR	2683220	Identifier	info		2682466	0					
ANR	2683221	Identifier	bytes_per_chunk		2682466	1					
ANR	2683222	Identifier	size		2682466	1					
ANR	2683223	ExpressionStatement	printer = print_insn_data	6747:5:243996:244021	2682466	2	True				
ANR	2683224	AssignmentExpression	printer = print_insn_data		2682466	0		=			
ANR	2683225	Identifier	printer		2682466	0					
ANR	2683226	Identifier	print_insn_data		2682466	1					
ANR	2683227	ExpressionStatement	"status = info -> read_memory_func ( pc , ( bfd_byte * ) b , size , info )"	6749:5:244029:244092	2682466	3	True				
ANR	2683228	AssignmentExpression	"status = info -> read_memory_func ( pc , ( bfd_byte * ) b , size , info )"		2682466	0		=			
ANR	2683229	Identifier	status		2682466	0					
ANR	2683230	CallExpression	"info -> read_memory_func ( pc , ( bfd_byte * ) b , size , info )"		2682466	1					
ANR	2683231	Callee	info -> read_memory_func		2682466	0					
ANR	2683232	PtrMemberAccess	info -> read_memory_func		2682466	0					
ANR	2683233	Identifier	info		2682466	0					
ANR	2683234	Identifier	read_memory_func		2682466	1					
ANR	2683235	ArgumentList	pc		2682466	1					
ANR	2683236	Argument	pc		2682466	0					
ANR	2683237	Identifier	pc		2682466	0					
ANR	2683238	Argument	( bfd_byte * ) b		2682466	1					
ANR	2683239	CastExpression	( bfd_byte * ) b		2682466	0					
ANR	2683240	CastTarget	bfd_byte *		2682466	0					
ANR	2683241	Identifier	b		2682466	1					
ANR	2683242	Argument	size		2682466	2					
ANR	2683243	Identifier	size		2682466	0					
ANR	2683244	Argument	info		2682466	3					
ANR	2683245	Identifier	info		2682466	0					
ANR	2683246	ExpressionStatement	given = 0	6750:5:244099:244108	2682466	4	True				
ANR	2683247	AssignmentExpression	given = 0		2682466	0		=			
ANR	2683248	Identifier	given		2682466	0					
ANR	2683249	PrimaryExpression	0		2682466	1					
ANR	2683250	IfStatement	if ( little )		2682466	5					
ANR	2683251	Condition	little	6751:9:244119:244124	2682466	0	True				
ANR	2683252	Identifier	little		2682466	0					
ANR	2683253	CompoundStatement		244:17:7245:7245	2682466	1					
ANR	2683254	ForStatement	for ( i = size - 1 ; i >= 0 ; i -- )		2682466	0					
ANR	2683255	ForInit	i = size - 1 ;	6752:11:244140:244152	2682466	0	True				
ANR	2683256	AssignmentExpression	i = size - 1		2682466	0		=			
ANR	2683257	Identifier	i		2682466	0					
ANR	2683258	AdditiveExpression	size - 1		2682466	1		-			
ANR	2683259	Identifier	size		2682466	0					
ANR	2683260	PrimaryExpression	1		2682466	1					
ANR	2683261	Condition	i >= 0	6752:25:244154:244159	2682466	1	True				
ANR	2683262	RelationalExpression	i >= 0		2682466	0		>=			
ANR	2683263	Identifier	i		2682466	0					
ANR	2683264	PrimaryExpression	0		2682466	1					
ANR	2683265	PostIncDecOperationExpression	i --	6752:33:244162:244164	2682466	2	True				
ANR	2683266	Identifier	i		2682466	0					
ANR	2683267	IncDec	--		2682466	1					
ANR	2683268	CompoundStatement		245:38:7285:7285	2682466	3					
ANR	2683269	ExpressionStatement	given = b [ i ] | ( given << 8 )	6753:7:244176:244203	2682466	0	True				
ANR	2683270	AssignmentExpression	given = b [ i ] | ( given << 8 )		2682466	0		=			
ANR	2683271	Identifier	given		2682466	0					
ANR	2683272	InclusiveOrExpression	b [ i ] | ( given << 8 )		2682466	1		|			
ANR	2683273	ArrayIndexing	b [ i ]		2682466	0					
ANR	2683274	Identifier	b		2682466	0					
ANR	2683275	Identifier	i		2682466	1					
ANR	2683276	ShiftExpression	given << 8		2682466	1		<<			
ANR	2683277	Identifier	given		2682466	0					
ANR	2683278	PrimaryExpression	8		2682466	1					
ANR	2683279	ElseStatement	else		2682466	0					
ANR	2683280	CompoundStatement		248:12:7343:7343	2682466	0					
ANR	2683281	ForStatement	for ( i = 0 ; i < ( int ) size ; i ++ )		2682466	0					
ANR	2683282	ForInit	i = 0 ;	6756:11:244238:244243	2682466	0	True				
ANR	2683283	AssignmentExpression	i = 0		2682466	0		=			
ANR	2683284	Identifier	i		2682466	0					
ANR	2683285	PrimaryExpression	0		2682466	1					
ANR	2683286	Condition	i < ( int ) size	6756:18:244245:244257	2682466	1	True				
ANR	2683287	RelationalExpression	i < ( int ) size		2682466	0		<			
ANR	2683288	Identifier	i		2682466	0					
ANR	2683289	CastExpression	( int ) size		2682466	1					
ANR	2683290	CastTarget	int		2682466	0					
ANR	2683291	Identifier	size		2682466	1					
ANR	2683292	PostIncDecOperationExpression	i ++	6756:33:244260:244262	2682466	2	True				
ANR	2683293	Identifier	i		2682466	0					
ANR	2683294	IncDec	++		2682466	1					
ANR	2683295	CompoundStatement		249:38:7383:7383	2682466	3					
ANR	2683296	ExpressionStatement	given = b [ i ] | ( given << 8 )	6757:7:244274:244301	2682466	0	True				
ANR	2683297	AssignmentExpression	given = b [ i ] | ( given << 8 )		2682466	0		=			
ANR	2683298	Identifier	given		2682466	0					
ANR	2683299	InclusiveOrExpression	b [ i ] | ( given << 8 )		2682466	1		|			
ANR	2683300	ArrayIndexing	b [ i ]		2682466	0					
ANR	2683301	Identifier	b		2682466	0					
ANR	2683302	Identifier	i		2682466	1					
ANR	2683303	ShiftExpression	given << 8		2682466	1		<<			
ANR	2683304	Identifier	given		2682466	0					
ANR	2683305	PrimaryExpression	8		2682466	1					
ANR	2683306	ElseStatement	else		2682466	0					
ANR	2683307	IfStatement	if ( ! is_thumb )		2682466	0					
ANR	2683308	Condition	! is_thumb	6761:11:244335:244343	2682466	0	True				
ANR	2683309	UnaryOperationExpression	! is_thumb		2682466	0					
ANR	2683310	UnaryOperator	!		2682466	0					
ANR	2683311	Identifier	is_thumb		2682466	1					
ANR	2683312	CompoundStatement		255:4:7468:7468	2682466	1					
ANR	2683313	ExpressionStatement	printer = print_insn_arm	6765:6:244495:244519	2682466	0	True				
ANR	2683314	AssignmentExpression	printer = print_insn_arm		2682466	0		=			
ANR	2683315	Identifier	printer		2682466	0					
ANR	2683316	Identifier	print_insn_arm		2682466	1					
ANR	2683317	ExpressionStatement	info -> bytes_per_chunk = 4	6766:6:244527:244552	2682466	1	True				
ANR	2683318	AssignmentExpression	info -> bytes_per_chunk = 4		2682466	0		=			
ANR	2683319	PtrMemberAccess	info -> bytes_per_chunk		2682466	0					
ANR	2683320	Identifier	info		2682466	0					
ANR	2683321	Identifier	bytes_per_chunk		2682466	1					
ANR	2683322	PrimaryExpression	4		2682466	1					
ANR	2683323	ExpressionStatement	size = 4	6767:6:244560:244568	2682466	2	True				
ANR	2683324	AssignmentExpression	size = 4		2682466	0		=			
ANR	2683325	Identifier	size		2682466	0					
ANR	2683326	PrimaryExpression	4		2682466	1					
ANR	2683327	ExpressionStatement	"status = info -> read_memory_func ( pc , ( bfd_byte * ) b , 4 , info )"	6769:6:244577:244638	2682466	3	True				
ANR	2683328	AssignmentExpression	"status = info -> read_memory_func ( pc , ( bfd_byte * ) b , 4 , info )"		2682466	0		=			
ANR	2683329	Identifier	status		2682466	0					
ANR	2683330	CallExpression	"info -> read_memory_func ( pc , ( bfd_byte * ) b , 4 , info )"		2682466	1					
ANR	2683331	Callee	info -> read_memory_func		2682466	0					
ANR	2683332	PtrMemberAccess	info -> read_memory_func		2682466	0					
ANR	2683333	Identifier	info		2682466	0					
ANR	2683334	Identifier	read_memory_func		2682466	1					
ANR	2683335	ArgumentList	pc		2682466	1					
ANR	2683336	Argument	pc		2682466	0					
ANR	2683337	Identifier	pc		2682466	0					
ANR	2683338	Argument	( bfd_byte * ) b		2682466	1					
ANR	2683339	CastExpression	( bfd_byte * ) b		2682466	0					
ANR	2683340	CastTarget	bfd_byte *		2682466	0					
ANR	2683341	Identifier	b		2682466	1					
ANR	2683342	Argument	4		2682466	2					
ANR	2683343	PrimaryExpression	4		2682466	0					
ANR	2683344	Argument	info		2682466	3					
ANR	2683345	Identifier	info		2682466	0					
ANR	2683346	Statement	define	6770:1:244641:244646	2682466	4	True				
ANR	2683347	Statement	N	6770:8:244648:244648	2682466	5	True				
ANR	2683348	Statement	(	6770:9:244649:244649	2682466	6	True				
ANR	2683349	Statement	x	6770:10:244650:244650	2682466	7	True				
ANR	2683350	Statement	)	6770:11:244651:244651	2682466	8	True				
ANR	2683351	Statement	(	6770:13:244653:244653	2682466	9	True				
ANR	2683352	Statement	(	6770:14:244654:244654	2682466	10	True				
ANR	2683353	Statement	(	6770:15:244655:244655	2682466	11	True				
ANR	2683354	Statement	unsigned	6770:16:244656:244663	2682466	12	True				
ANR	2683355	Statement	long	6770:25:244665:244668	2682466	13	True				
ANR	2683356	Statement	long	6770:30:244670:244673	2682466	14	True				
ANR	2683357	Statement	)	6770:35:244675:244675	2682466	15	True				
ANR	2683358	Statement	(	6770:36:244676:244676	2682466	16	True				
ANR	2683359	Statement	b	6770:37:244677:244677	2682466	17	True				
ANR	2683360	Statement	[	6770:38:244678:244678	2682466	18	True				
ANR	2683361	Statement	x	6770:39:244679:244679	2682466	19	True				
ANR	2683362	Statement	]	6770:40:244680:244680	2682466	20	True				
ANR	2683363	Statement	)	6770:41:244681:244681	2682466	21	True				
ANR	2683364	Statement	)	6770:42:244682:244682	2682466	22	True				
ANR	2683365	Statement	&	6770:44:244684:244684	2682466	23	True				
ANR	2683366	Statement	0xff	6770:46:244686:244689	2682466	24	True				
ANR	2683367	Statement	)	6770:50:244690:244690	2682466	25	True				
ANR	2683368	IfStatement	if ( little_code )		2682466	26					
ANR	2683369	Condition	little_code	6771:10:244702:244712	2682466	0	True				
ANR	2683370	Identifier	little_code		2682466	0					
ANR	2683371	CompoundStatement		264:23:7833:7833	2682466	1					
ANR	2683372	ExpressionStatement	given = N ( 0 ) | N ( 1 ) << 8 | N ( 2 ) << 16 | N ( 3 ) << 24	6772:7:244724:244773	2682466	0	True				
ANR	2683373	AssignmentExpression	given = N ( 0 ) | N ( 1 ) << 8 | N ( 2 ) << 16 | N ( 3 ) << 24		2682466	0		=			
ANR	2683374	Identifier	given		2682466	0					
ANR	2683375	InclusiveOrExpression	N ( 0 ) | N ( 1 ) << 8 | N ( 2 ) << 16 | N ( 3 ) << 24		2682466	1		|			
ANR	2683376	CallExpression	N ( 0 )		2682466	0					
ANR	2683377	Callee	N		2682466	0					
ANR	2683378	Identifier	N		2682466	0					
ANR	2683379	ArgumentList	0		2682466	1					
ANR	2683380	Argument	0		2682466	0					
ANR	2683381	PrimaryExpression	0		2682466	0					
ANR	2683382	InclusiveOrExpression	N ( 1 ) << 8 | N ( 2 ) << 16 | N ( 3 ) << 24		2682466	1		|			
ANR	2683383	ShiftExpression	N ( 1 ) << 8		2682466	0		<<			
ANR	2683384	CallExpression	N ( 1 )		2682466	0					
ANR	2683385	Callee	N		2682466	0					
ANR	2683386	Identifier	N		2682466	0					
ANR	2683387	ArgumentList	1		2682466	1					
ANR	2683388	Argument	1		2682466	0					
ANR	2683389	PrimaryExpression	1		2682466	0					
ANR	2683390	PrimaryExpression	8		2682466	1					
ANR	2683391	InclusiveOrExpression	N ( 2 ) << 16 | N ( 3 ) << 24		2682466	1		|			
ANR	2683392	ShiftExpression	N ( 2 ) << 16		2682466	0		<<			
ANR	2683393	CallExpression	N ( 2 )		2682466	0					
ANR	2683394	Callee	N		2682466	0					
ANR	2683395	Identifier	N		2682466	0					
ANR	2683396	ArgumentList	2		2682466	1					
ANR	2683397	Argument	2		2682466	0					
ANR	2683398	PrimaryExpression	2		2682466	0					
ANR	2683399	PrimaryExpression	16		2682466	1					
ANR	2683400	ShiftExpression	N ( 3 ) << 24		2682466	1		<<			
ANR	2683401	CallExpression	N ( 3 )		2682466	0					
ANR	2683402	Callee	N		2682466	0					
ANR	2683403	Identifier	N		2682466	0					
ANR	2683404	ArgumentList	3		2682466	1					
ANR	2683405	Argument	3		2682466	0					
ANR	2683406	PrimaryExpression	3		2682466	0					
ANR	2683407	PrimaryExpression	24		2682466	1					
ANR	2683408	ElseStatement	else		2682466	0					
ANR	2683409	CompoundStatement		266:13:7906:7906	2682466	0					
ANR	2683410	ExpressionStatement	given = N ( 3 ) | N ( 2 ) << 8 | N ( 1 ) << 16 | N ( 0 ) << 24	6774:7:244797:244846	2682466	0	True				
ANR	2683411	AssignmentExpression	given = N ( 3 ) | N ( 2 ) << 8 | N ( 1 ) << 16 | N ( 0 ) << 24		2682466	0		=			
ANR	2683412	Identifier	given		2682466	0					
ANR	2683413	InclusiveOrExpression	N ( 3 ) | N ( 2 ) << 8 | N ( 1 ) << 16 | N ( 0 ) << 24		2682466	1		|			
ANR	2683414	CallExpression	N ( 3 )		2682466	0					
ANR	2683415	Callee	N		2682466	0					
ANR	2683416	Identifier	N		2682466	0					
ANR	2683417	ArgumentList	3		2682466	1					
ANR	2683418	Argument	3		2682466	0					
ANR	2683419	PrimaryExpression	3		2682466	0					
ANR	2683420	InclusiveOrExpression	N ( 2 ) << 8 | N ( 1 ) << 16 | N ( 0 ) << 24		2682466	1		|			
ANR	2683421	ShiftExpression	N ( 2 ) << 8		2682466	0		<<			
ANR	2683422	CallExpression	N ( 2 )		2682466	0					
ANR	2683423	Callee	N		2682466	0					
ANR	2683424	Identifier	N		2682466	0					
ANR	2683425	ArgumentList	2		2682466	1					
ANR	2683426	Argument	2		2682466	0					
ANR	2683427	PrimaryExpression	2		2682466	0					
ANR	2683428	PrimaryExpression	8		2682466	1					
ANR	2683429	InclusiveOrExpression	N ( 1 ) << 16 | N ( 0 ) << 24		2682466	1		|			
ANR	2683430	ShiftExpression	N ( 1 ) << 16		2682466	0		<<			
ANR	2683431	CallExpression	N ( 1 )		2682466	0					
ANR	2683432	Callee	N		2682466	0					
ANR	2683433	Identifier	N		2682466	0					
ANR	2683434	ArgumentList	1		2682466	1					
ANR	2683435	Argument	1		2682466	0					
ANR	2683436	PrimaryExpression	1		2682466	0					
ANR	2683437	PrimaryExpression	16		2682466	1					
ANR	2683438	ShiftExpression	N ( 0 ) << 24		2682466	1		<<			
ANR	2683439	CallExpression	N ( 0 )		2682466	0					
ANR	2683440	Callee	N		2682466	0					
ANR	2683441	Identifier	N		2682466	0					
ANR	2683442	ArgumentList	0		2682466	1					
ANR	2683443	Argument	0		2682466	0					
ANR	2683444	PrimaryExpression	0		2682466	0					
ANR	2683445	PrimaryExpression	24		2682466	1					
ANR	2683446	ElseStatement	else		2682466	0					
ANR	2683447	CompoundStatement		271:4:7991:7991	2682466	0					
ANR	2683448	ExpressionStatement	printer = print_insn_thumb16	6783:6:245096:245124	2682466	0	True				
ANR	2683449	AssignmentExpression	printer = print_insn_thumb16		2682466	0		=			
ANR	2683450	Identifier	printer		2682466	0					
ANR	2683451	Identifier	print_insn_thumb16		2682466	1					
ANR	2683452	ExpressionStatement	info -> bytes_per_chunk = 2	6784:6:245132:245157	2682466	1	True				
ANR	2683453	AssignmentExpression	info -> bytes_per_chunk = 2		2682466	0		=			
ANR	2683454	PtrMemberAccess	info -> bytes_per_chunk		2682466	0					
ANR	2683455	Identifier	info		2682466	0					
ANR	2683456	Identifier	bytes_per_chunk		2682466	1					
ANR	2683457	PrimaryExpression	2		2682466	1					
ANR	2683458	ExpressionStatement	size = 2	6785:6:245165:245173	2682466	2	True				
ANR	2683459	AssignmentExpression	size = 2		2682466	0		=			
ANR	2683460	Identifier	size		2682466	0					
ANR	2683461	PrimaryExpression	2		2682466	1					
ANR	2683462	ExpressionStatement	"status = info -> read_memory_func ( pc , ( bfd_byte * ) b , 2 , info )"	6787:6:245182:245243	2682466	3	True				
ANR	2683463	AssignmentExpression	"status = info -> read_memory_func ( pc , ( bfd_byte * ) b , 2 , info )"		2682466	0		=			
ANR	2683464	Identifier	status		2682466	0					
ANR	2683465	CallExpression	"info -> read_memory_func ( pc , ( bfd_byte * ) b , 2 , info )"		2682466	1					
ANR	2683466	Callee	info -> read_memory_func		2682466	0					
ANR	2683467	PtrMemberAccess	info -> read_memory_func		2682466	0					
ANR	2683468	Identifier	info		2682466	0					
ANR	2683469	Identifier	read_memory_func		2682466	1					
ANR	2683470	ArgumentList	pc		2682466	1					
ANR	2683471	Argument	pc		2682466	0					
ANR	2683472	Identifier	pc		2682466	0					
ANR	2683473	Argument	( bfd_byte * ) b		2682466	1					
ANR	2683474	CastExpression	( bfd_byte * ) b		2682466	0					
ANR	2683475	CastTarget	bfd_byte *		2682466	0					
ANR	2683476	Identifier	b		2682466	1					
ANR	2683477	Argument	2		2682466	2					
ANR	2683478	PrimaryExpression	2		2682466	0					
ANR	2683479	Argument	info		2682466	3					
ANR	2683480	Identifier	info		2682466	0					
ANR	2683481	IfStatement	if ( little_code )		2682466	4					
ANR	2683482	Condition	little_code	6788:10:245255:245265	2682466	0	True				
ANR	2683483	Identifier	little_code		2682466	0					
ANR	2683484	CompoundStatement		281:23:8386:8386	2682466	1					
ANR	2683485	ExpressionStatement	given = ( b [ 0 ] ) | ( b [ 1 ] << 8 )	6789:7:245277:245305	2682466	0	True				
ANR	2683486	AssignmentExpression	given = ( b [ 0 ] ) | ( b [ 1 ] << 8 )		2682466	0		=			
ANR	2683487	Identifier	given		2682466	0					
ANR	2683488	InclusiveOrExpression	( b [ 0 ] ) | ( b [ 1 ] << 8 )		2682466	1		|			
ANR	2683489	ArrayIndexing	b [ 0 ]		2682466	0					
ANR	2683490	Identifier	b		2682466	0					
ANR	2683491	PrimaryExpression	0		2682466	1					
ANR	2683492	ShiftExpression	b [ 1 ] << 8		2682466	1		<<			
ANR	2683493	ArrayIndexing	b [ 1 ]		2682466	0					
ANR	2683494	Identifier	b		2682466	0					
ANR	2683495	PrimaryExpression	1		2682466	1					
ANR	2683496	PrimaryExpression	8		2682466	1					
ANR	2683497	ElseStatement	else		2682466	0					
ANR	2683498	CompoundStatement		283:13:8438:8438	2682466	0					
ANR	2683499	ExpressionStatement	given = ( b [ 1 ] ) | ( b [ 0 ] << 8 )	6791:7:245329:245357	2682466	0	True				
ANR	2683500	AssignmentExpression	given = ( b [ 1 ] ) | ( b [ 0 ] << 8 )		2682466	0		=			
ANR	2683501	Identifier	given		2682466	0					
ANR	2683502	InclusiveOrExpression	( b [ 1 ] ) | ( b [ 0 ] << 8 )		2682466	1		|			
ANR	2683503	ArrayIndexing	b [ 1 ]		2682466	0					
ANR	2683504	Identifier	b		2682466	0					
ANR	2683505	PrimaryExpression	1		2682466	1					
ANR	2683506	ShiftExpression	b [ 0 ] << 8		2682466	1		<<			
ANR	2683507	ArrayIndexing	b [ 0 ]		2682466	0					
ANR	2683508	Identifier	b		2682466	0					
ANR	2683509	PrimaryExpression	0		2682466	1					
ANR	2683510	PrimaryExpression	8		2682466	1					
ANR	2683511	IfStatement	if ( ! status )		2682466	5					
ANR	2683512	Condition	! status	6794:10:245378:245384	2682466	0	True				
ANR	2683513	UnaryOperationExpression	! status		2682466	0					
ANR	2683514	UnaryOperator	!		2682466	0					
ANR	2683515	Identifier	status		2682466	1					
ANR	2683516	CompoundStatement		288:1:8506:8506	2682466	1					
ANR	2683517	IfStatement	if ( ( given & 0xF800 ) == 0xF800 || ( given & 0xF800 ) == 0xF000 || ( given & 0xF800 ) == 0xE800 )		2682466	0					
ANR	2683518	Condition	( given & 0xF800 ) == 0xF800 || ( given & 0xF800 ) == 0xF000 || ( given & 0xF800 ) == 0xE800	6798:7:245470:245569	2682466	0	True				
ANR	2683519	OrExpression	( given & 0xF800 ) == 0xF800 || ( given & 0xF800 ) == 0xF000 || ( given & 0xF800 ) == 0xE800		2682466	0		||			
ANR	2683520	EqualityExpression	( given & 0xF800 ) == 0xF800		2682466	0		==			
ANR	2683521	BitAndExpression	given & 0xF800		2682466	0		&			
ANR	2683522	Identifier	given		2682466	0					
ANR	2683523	PrimaryExpression	0xF800		2682466	1					
ANR	2683524	PrimaryExpression	0xF800		2682466	1					
ANR	2683525	OrExpression	( given & 0xF800 ) == 0xF000 || ( given & 0xF800 ) == 0xE800		2682466	1		||			
ANR	2683526	EqualityExpression	( given & 0xF800 ) == 0xF000		2682466	0		==			
ANR	2683527	BitAndExpression	given & 0xF800		2682466	0		&			
ANR	2683528	Identifier	given		2682466	0					
ANR	2683529	PrimaryExpression	0xF800		2682466	1					
ANR	2683530	PrimaryExpression	0xF000		2682466	1					
ANR	2683531	EqualityExpression	( given & 0xF800 ) == 0xE800		2682466	1		==			
ANR	2683532	BitAndExpression	given & 0xF800		2682466	0		&			
ANR	2683533	Identifier	given		2682466	0					
ANR	2683534	PrimaryExpression	0xF800		2682466	1					
ANR	2683535	PrimaryExpression	0xE800		2682466	1					
ANR	2683536	CompoundStatement		294:5:8695:8695	2682466	1					
ANR	2683537	ExpressionStatement	"status = info -> read_memory_func ( pc + 2 , ( bfd_byte * ) b , 2 , info )"	6802:7:245586:245651	2682466	0	True				
ANR	2683538	AssignmentExpression	"status = info -> read_memory_func ( pc + 2 , ( bfd_byte * ) b , 2 , info )"		2682466	0		=			
ANR	2683539	Identifier	status		2682466	0					
ANR	2683540	CallExpression	"info -> read_memory_func ( pc + 2 , ( bfd_byte * ) b , 2 , info )"		2682466	1					
ANR	2683541	Callee	info -> read_memory_func		2682466	0					
ANR	2683542	PtrMemberAccess	info -> read_memory_func		2682466	0					
ANR	2683543	Identifier	info		2682466	0					
ANR	2683544	Identifier	read_memory_func		2682466	1					
ANR	2683545	ArgumentList	pc + 2		2682466	1					
ANR	2683546	Argument	pc + 2		2682466	0					
ANR	2683547	AdditiveExpression	pc + 2		2682466	0		+			
ANR	2683548	Identifier	pc		2682466	0					
ANR	2683549	PrimaryExpression	2		2682466	1					
ANR	2683550	Argument	( bfd_byte * ) b		2682466	1					
ANR	2683551	CastExpression	( bfd_byte * ) b		2682466	0					
ANR	2683552	CastTarget	bfd_byte *		2682466	0					
ANR	2683553	Identifier	b		2682466	1					
ANR	2683554	Argument	2		2682466	2					
ANR	2683555	PrimaryExpression	2		2682466	0					
ANR	2683556	Argument	info		2682466	3					
ANR	2683557	Identifier	info		2682466	0					
ANR	2683558	IfStatement	if ( little_code )		2682466	1					
ANR	2683559	Condition	little_code	6803:11:245664:245674	2682466	0	True				
ANR	2683560	Identifier	little_code		2682466	0					
ANR	2683561	CompoundStatement		296:24:8795:8795	2682466	1					
ANR	2683562	ExpressionStatement	given = ( b [ 0 ] ) | ( b [ 1 ] << 8 ) | ( given << 16 )	6804:8:245687:245731	2682466	0	True				
ANR	2683563	AssignmentExpression	given = ( b [ 0 ] ) | ( b [ 1 ] << 8 ) | ( given << 16 )		2682466	0		=			
ANR	2683564	Identifier	given		2682466	0					
ANR	2683565	InclusiveOrExpression	( b [ 0 ] ) | ( b [ 1 ] << 8 ) | ( given << 16 )		2682466	1		|			
ANR	2683566	ArrayIndexing	b [ 0 ]		2682466	0					
ANR	2683567	Identifier	b		2682466	0					
ANR	2683568	PrimaryExpression	0		2682466	1					
ANR	2683569	InclusiveOrExpression	( b [ 1 ] << 8 ) | ( given << 16 )		2682466	1		|			
ANR	2683570	ShiftExpression	b [ 1 ] << 8		2682466	0		<<			
ANR	2683571	ArrayIndexing	b [ 1 ]		2682466	0					
ANR	2683572	Identifier	b		2682466	0					
ANR	2683573	PrimaryExpression	1		2682466	1					
ANR	2683574	PrimaryExpression	8		2682466	1					
ANR	2683575	ShiftExpression	given << 16		2682466	1		<<			
ANR	2683576	Identifier	given		2682466	0					
ANR	2683577	PrimaryExpression	16		2682466	1					
ANR	2683578	ElseStatement	else		2682466	0					
ANR	2683579	CompoundStatement		298:14:8865:8865	2682466	0					
ANR	2683580	ExpressionStatement	given = ( b [ 1 ] ) | ( b [ 0 ] << 8 ) | ( given << 16 )	6806:8:245757:245801	2682466	0	True				
ANR	2683581	AssignmentExpression	given = ( b [ 1 ] ) | ( b [ 0 ] << 8 ) | ( given << 16 )		2682466	0		=			
ANR	2683582	Identifier	given		2682466	0					
ANR	2683583	InclusiveOrExpression	( b [ 1 ] ) | ( b [ 0 ] << 8 ) | ( given << 16 )		2682466	1		|			
ANR	2683584	ArrayIndexing	b [ 1 ]		2682466	0					
ANR	2683585	Identifier	b		2682466	0					
ANR	2683586	PrimaryExpression	1		2682466	1					
ANR	2683587	InclusiveOrExpression	( b [ 0 ] << 8 ) | ( given << 16 )		2682466	1		|			
ANR	2683588	ShiftExpression	b [ 0 ] << 8		2682466	0		<<			
ANR	2683589	ArrayIndexing	b [ 0 ]		2682466	0					
ANR	2683590	Identifier	b		2682466	0					
ANR	2683591	PrimaryExpression	0		2682466	1					
ANR	2683592	PrimaryExpression	8		2682466	1					
ANR	2683593	ShiftExpression	given << 16		2682466	1		<<			
ANR	2683594	Identifier	given		2682466	0					
ANR	2683595	PrimaryExpression	16		2682466	1					
ANR	2683596	ExpressionStatement	printer = print_insn_thumb32	6809:7:245820:245848	2682466	2	True				
ANR	2683597	AssignmentExpression	printer = print_insn_thumb32		2682466	0		=			
ANR	2683598	Identifier	printer		2682466	0					
ANR	2683599	Identifier	print_insn_thumb32		2682466	1					
ANR	2683600	ExpressionStatement	size = 4	6810:7:245857:245865	2682466	3	True				
ANR	2683601	AssignmentExpression	size = 4		2682466	0		=			
ANR	2683602	Identifier	size		2682466	0					
ANR	2683603	PrimaryExpression	4		2682466	1					
ANR	2683604	IfStatement	if ( ifthen_address != pc )		2682466	6					
ANR	2683605	Condition	ifthen_address != pc	6814:5:245883:245902	2682466	0	True				
ANR	2683606	EqualityExpression	ifthen_address != pc		2682466	0		!=			
ANR	2683607	Identifier	ifthen_address		2682466	0					
ANR	2683608	Identifier	pc		2682466	1					
ANR	2683609	CompoundStatement		307:27:9023:9023	2682466	1					
ANR	2683610	ExpressionStatement	"find_ifthen_state ( pc , info , little_code )"	6815:2:245909:245950	2682466	0	True				
ANR	2683611	CallExpression	"find_ifthen_state ( pc , info , little_code )"		2682466	0					
ANR	2683612	Callee	find_ifthen_state		2682466	0					
ANR	2683613	Identifier	find_ifthen_state		2682466	0					
ANR	2683614	ArgumentList	pc		2682466	1					
ANR	2683615	Argument	pc		2682466	0					
ANR	2683616	Identifier	pc		2682466	0					
ANR	2683617	Argument	info		2682466	1					
ANR	2683618	Identifier	info		2682466	0					
ANR	2683619	Argument	little_code		2682466	2					
ANR	2683620	Identifier	little_code		2682466	0					
ANR	2683621	IfStatement	if ( ifthen_state )		2682466	7					
ANR	2683622	Condition	ifthen_state	6818:5:245961:245972	2682466	0	True				
ANR	2683623	Identifier	ifthen_state		2682466	0					
ANR	2683624	CompoundStatement		311:19:9093:9093	2682466	1					
ANR	2683625	IfStatement	if ( ( ifthen_state & 0xf ) == 0x8 )		2682466	0					
ANR	2683626	Condition	( ifthen_state & 0xf ) == 0x8	6819:6:245983:246009	2682466	0	True				
ANR	2683627	EqualityExpression	( ifthen_state & 0xf ) == 0x8		2682466	0		==			
ANR	2683628	BitAndExpression	ifthen_state & 0xf		2682466	0		&			
ANR	2683629	Identifier	ifthen_state		2682466	0					
ANR	2683630	PrimaryExpression	0xf		2682466	1					
ANR	2683631	PrimaryExpression	0x8		2682466	1					
ANR	2683632	CompoundStatement		312:35:9130:9130	2682466	1					
ANR	2683633	ExpressionStatement	ifthen_next_state = 0	6820:3:246017:246038	2682466	0	True				
ANR	2683634	AssignmentExpression	ifthen_next_state = 0		2682466	0		=			
ANR	2683635	Identifier	ifthen_next_state		2682466	0					
ANR	2683636	PrimaryExpression	0		2682466	1					
ANR	2683637	ElseStatement	else		2682466	0					
ANR	2683638	CompoundStatement		314:9:9167:9167	2682466	0					
ANR	2683639	ExpressionStatement	ifthen_next_state = ( ifthen_state & 0xe0 ) | ( ( ifthen_state & 0xf ) << 1 )	6822:3:246054:246125	2682466	0	True				
ANR	2683640	AssignmentExpression	ifthen_next_state = ( ifthen_state & 0xe0 ) | ( ( ifthen_state & 0xf ) << 1 )		2682466	0		=			
ANR	2683641	Identifier	ifthen_next_state		2682466	0					
ANR	2683642	InclusiveOrExpression	( ifthen_state & 0xe0 ) | ( ( ifthen_state & 0xf ) << 1 )		2682466	1		|			
ANR	2683643	BitAndExpression	ifthen_state & 0xe0		2682466	0		&			
ANR	2683644	Identifier	ifthen_state		2682466	0					
ANR	2683645	PrimaryExpression	0xe0		2682466	1					
ANR	2683646	ShiftExpression	( ifthen_state & 0xf ) << 1		2682466	1		<<			
ANR	2683647	BitAndExpression	ifthen_state & 0xf		2682466	0		&			
ANR	2683648	Identifier	ifthen_state		2682466	0					
ANR	2683649	PrimaryExpression	0xf		2682466	1					
ANR	2683650	PrimaryExpression	1		2682466	1					
ANR	2683651	IfStatement	if ( status )		2682466	19					
ANR	2683652	Condition	status	6827:6:246147:246152	2682466	0	True				
ANR	2683653	Identifier	status		2682466	0					
ANR	2683654	CompoundStatement		321:4:9277:9277	2682466	1					
ANR	2683655	ExpressionStatement	"info -> memory_error_func ( status , pc , info )"	6829:6:246167:246209	2682466	0	True				
ANR	2683656	CallExpression	"info -> memory_error_func ( status , pc , info )"		2682466	0					
ANR	2683657	Callee	info -> memory_error_func		2682466	0					
ANR	2683658	PtrMemberAccess	info -> memory_error_func		2682466	0					
ANR	2683659	Identifier	info		2682466	0					
ANR	2683660	Identifier	memory_error_func		2682466	1					
ANR	2683661	ArgumentList	status		2682466	1					
ANR	2683662	Argument	status		2682466	0					
ANR	2683663	Identifier	status		2682466	0					
ANR	2683664	Argument	pc		2682466	1					
ANR	2683665	Identifier	pc		2682466	0					
ANR	2683666	Argument	info		2682466	2					
ANR	2683667	Identifier	info		2682466	0					
ANR	2683668	ReturnStatement	return - 1 ;	6830:6:246217:246226	2682466	1	True				
ANR	2683669	UnaryOperationExpression	- 1		2682466	0					
ANR	2683670	UnaryOperator	-		2682466	0					
ANR	2683671	PrimaryExpression	1		2682466	1					
ANR	2683672	IfStatement	if ( info -> flags & INSN_HAS_RELOC )		2682466	20					
ANR	2683673	Condition	info -> flags & INSN_HAS_RELOC	6832:8:246242:246269	2682466	0	True				
ANR	2683674	BitAndExpression	info -> flags & INSN_HAS_RELOC		2682466	0		&			
ANR	2683675	PtrMemberAccess	info -> flags		2682466	0					
ANR	2683676	Identifier	info		2682466	0					
ANR	2683677	Identifier	flags		2682466	1					
ANR	2683678	Identifier	INSN_HAS_RELOC		2682466	1					
ANR	2683679	CompoundStatement		325:38:9390:9390	2682466	1					
ANR	2683680	ExpressionStatement	pc = 0	6838:5:246596:246602	2682466	0	True				
ANR	2683681	AssignmentExpression	pc = 0		2682466	0		=			
ANR	2683682	Identifier	pc		2682466	0					
ANR	2683683	PrimaryExpression	0		2682466	1					
ANR	2683684	ExpressionStatement	"printer ( pc , info , given )"	6841:4:246615:246640	2682466	21	True				
ANR	2683685	CallExpression	"printer ( pc , info , given )"		2682466	0					
ANR	2683686	Callee	printer		2682466	0					
ANR	2683687	Identifier	printer		2682466	0					
ANR	2683688	ArgumentList	pc		2682466	1					
ANR	2683689	Argument	pc		2682466	0					
ANR	2683690	Identifier	pc		2682466	0					
ANR	2683691	Argument	info		2682466	1					
ANR	2683692	Identifier	info		2682466	0					
ANR	2683693	Argument	given		2682466	2					
ANR	2683694	Identifier	given		2682466	0					
ANR	2683695	IfStatement	if ( is_thumb )		2682466	22					
ANR	2683696	Condition	is_thumb	6843:8:246651:246658	2682466	0	True				
ANR	2683697	Identifier	is_thumb		2682466	0					
ANR	2683698	CompoundStatement		336:18:9779:9779	2682466	1					
ANR	2683699	ExpressionStatement	ifthen_state = ifthen_next_state	6844:5:246668:246700	2682466	0	True				
ANR	2683700	AssignmentExpression	ifthen_state = ifthen_next_state		2682466	0		=			
ANR	2683701	Identifier	ifthen_state		2682466	0					
ANR	2683702	Identifier	ifthen_next_state		2682466	1					
ANR	2683703	ExpressionStatement	ifthen_address += size	6845:5:246707:246729	2682466	1	True				
ANR	2683704	AssignmentExpression	ifthen_address += size		2682466	0		+=			
ANR	2683705	Identifier	ifthen_address		2682466	0					
ANR	2683706	Identifier	size		2682466	1					
ANR	2683707	ReturnStatement	return size ;	6847:2:246739:246750	2682466	23	True				
ANR	2683708	Identifier	size		2682466	0					
ANR	2683709	ReturnType	static int		2682466	1					
ANR	2683710	Identifier	print_insn		2682466	2					
ANR	2683711	ParameterList	"bfd_vma pc , struct disassemble_info * info , bfd_boolean little"		2682466	3					
ANR	2683712	Parameter	bfd_vma pc	6507:12:236818:236827	2682466	0	True				
ANR	2683713	ParameterType	bfd_vma		2682466	0					
ANR	2683714	Identifier	pc		2682466	1					
ANR	2683715	Parameter	struct disassemble_info * info	6507:24:236830:236858	2682466	1	True				
ANR	2683716	ParameterType	struct disassemble_info *		2682466	0					
ANR	2683717	Identifier	info		2682466	1					
ANR	2683718	Parameter	bfd_boolean little	6507:55:236861:236878	2682466	2	True				
ANR	2683719	ParameterType	bfd_boolean		2682466	0					
ANR	2683720	Identifier	little		2682466	1					
ANR	2683721	CFGEntryNode	ENTRY		2682466		True				
ANR	2683722	CFGExitNode	EXIT		2682466		True				
ANR	2683723	Symbol	info -> section		2682466						
ANR	2683724	Symbol	& private		2682466						
ANR	2683725	Symbol	MAP_ARM		2682466						
ANR	2683726	Symbol	force_thumb		2682466						
ANR	2683727	Symbol	is_data		2682466						
ANR	2683728	Symbol	type		2682466						
ANR	2683729	Symbol	info -> bytes_per_line		2682466						
ANR	2683730	Symbol	bfd_target_elf_flavour		2682466						
ANR	2683731	Symbol	last_sym		2682466						
ANR	2683732	Symbol	private . has_mapping_symbols		2682466						
ANR	2683733	Symbol	info -> symtab		2682466						
ANR	2683734	Symbol	info		2682466						
ANR	2683735	Symbol	little_code		2682466						
ANR	2683736	Symbol	ifthen_next_state		2682466						
ANR	2683737	Symbol	given		2682466						
ANR	2683738	Symbol	print_insn_data		2682466						
ANR	2683739	Symbol	NULL		2682466						
ANR	2683740	Symbol	* * * info		2682466						
ANR	2683741	Symbol	& private . features		2682466						
ANR	2683742	Symbol	& type		2682466						
ANR	2683743	Symbol	printer		2682466						
ANR	2683744	Symbol	TRUE		2682466						
ANR	2683745	Symbol	info -> symtab_size		2682466						
ANR	2683746	Symbol	* info -> symtab		2682466						
ANR	2683747	Symbol	size		2682466						
ANR	2683748	Symbol	bfd_asymbol_value		2682466						
ANR	2683749	Symbol	BFD_ENDIAN_LITTLE		2682466						
ANR	2683750	Symbol	info -> bytes_per_chunk		2682466						
ANR	2683751	Symbol	info -> read_memory_func		2682466						
ANR	2683752	Symbol	ifthen_state		2682466						
ANR	2683753	Symbol	private_data -> last_type		2682466						
ANR	2683754	Symbol	private . last_mapping_addr		2682466						
ANR	2683755	Symbol	info -> symtab [ n ] -> section		2682466						
ANR	2683756	Symbol	little		2682466						
ANR	2683757	Symbol	status		2682466						
ANR	2683758	Symbol	print_insn_thumb32		2682466						
ANR	2683759	Symbol	MAP_DATA		2682466						
ANR	2683760	Symbol	private		2682466						
ANR	2683761	Symbol	* * info		2682466						
ANR	2683762	Symbol	private_data		2682466						
ANR	2683763	Symbol	info -> endian_code		2682466						
ANR	2683764	Symbol	INSN_HAS_RELOC		2682466						
ANR	2683765	Symbol	get_sym_code_type		2682466						
ANR	2683766	Symbol	N		2682466						
ANR	2683767	Symbol	info -> flags		2682466						
ANR	2683768	Symbol	found		2682466						
ANR	2683769	Symbol	BFD_ENDIAN_BIG		2682466						
ANR	2683770	Symbol	DISASSEMBLE_DATA		2682466						
ANR	2683771	Symbol	bfd_asymbol_flavour		2682466						
ANR	2683772	Symbol	addr		2682466						
ANR	2683773	Symbol	* * n		2682466						
ANR	2683774	Symbol	print_insn_arm		2682466						
ANR	2683775	Symbol	MAP_THUMB		2682466						
ANR	2683776	Symbol	b		2682466						
ANR	2683777	Symbol	info -> disassembler_options		2682466						
ANR	2683778	Symbol	get_map_sym_type		2682466						
ANR	2683779	Symbol	USER_SPECIFIED_MACHINE_TYPE		2682466						
ANR	2683780	Symbol	info -> private_data		2682466						
ANR	2683781	Symbol	info -> mach		2682466						
ANR	2683782	Symbol	start		2682466						
ANR	2683783	Symbol	i		2682466						
ANR	2683784	Symbol	* * info -> symtab		2682466						
ANR	2683785	Symbol	* b		2682466						
ANR	2683786	Symbol	n		2682466						
ANR	2683787	Symbol	pc		2682466						
ANR	2683788	Symbol	info -> symtab_pos		2682466						
ANR	2683789	Symbol	* i		2682466						
ANR	2683790	Symbol	ifthen_address		2682466						
ANR	2683791	Symbol	private_data -> last_mapping_sym		2682466						
ANR	2683792	Symbol	info -> display_endian		2682466						
ANR	2683793	Symbol	* n		2682466						
ANR	2683794	Symbol	is_thumb		2682466						
ANR	2683795	Symbol	print_insn_thumb16		2682466						
ANR	2683796	Symbol	FALSE		2682466						
ANR	2683797	Symbol	* private_data		2682466						
ANR	2683798	Symbol	* info		2682466						
ANR	2683799	Symbol	private . last_mapping_sym		2682466						
ANR	2683800	Symbol	bfd_mach_arm_unknown		2682466						
ANR	2683801	Symbol	private_data -> has_mapping_symbols		2682466						
ANR	2683802	Symbol	is_mapping_symbol		2682466						
ANR	2683803	Function	print_insn_big_arm	6850:0:246755:247133							
ANR	2683804	FunctionDef	"print_insn_big_arm (bfd_vma pc , struct disassemble_info * info)"		2683803	0					
ANR	2683805	CompoundStatement		6852:0:246822:247133	2683803	0					
ANR	2683806	IfStatement	if ( info -> flavour == bfd_target_elf_flavour && info -> section != NULL && ( elf_elfheader ( info -> section -> owner ) -> e_flags & EF_ARM_BE8 ) )		2683803	0					
ANR	2683807	Condition	info -> flavour == bfd_target_elf_flavour && info -> section != NULL && ( elf_elfheader ( info -> section -> owner ) -> e_flags & EF_ARM_BE8 )	6855:6:246901:247040	2683803	0	True				
ANR	2683808	AndExpression	info -> flavour == bfd_target_elf_flavour && info -> section != NULL && ( elf_elfheader ( info -> section -> owner ) -> e_flags & EF_ARM_BE8 )		2683803	0		&&			
ANR	2683809	EqualityExpression	info -> flavour == bfd_target_elf_flavour		2683803	0		==			
ANR	2683810	PtrMemberAccess	info -> flavour		2683803	0					
ANR	2683811	Identifier	info		2683803	0					
ANR	2683812	Identifier	flavour		2683803	1					
ANR	2683813	Identifier	bfd_target_elf_flavour		2683803	1					
ANR	2683814	AndExpression	info -> section != NULL && ( elf_elfheader ( info -> section -> owner ) -> e_flags & EF_ARM_BE8 )		2683803	1		&&			
ANR	2683815	EqualityExpression	info -> section != NULL		2683803	0		!=			
ANR	2683816	PtrMemberAccess	info -> section		2683803	0					
ANR	2683817	Identifier	info		2683803	0					
ANR	2683818	Identifier	section		2683803	1					
ANR	2683819	Identifier	NULL		2683803	1					
ANR	2683820	BitAndExpression	elf_elfheader ( info -> section -> owner ) -> e_flags & EF_ARM_BE8		2683803	1		&			
ANR	2683821	PtrMemberAccess	elf_elfheader ( info -> section -> owner ) -> e_flags		2683803	0					
ANR	2683822	CallExpression	elf_elfheader ( info -> section -> owner )		2683803	0					
ANR	2683823	Callee	elf_elfheader		2683803	0					
ANR	2683824	Identifier	elf_elfheader		2683803	0					
ANR	2683825	ArgumentList	info -> section -> owner		2683803	1					
ANR	2683826	Argument	info -> section -> owner		2683803	0					
ANR	2683827	PtrMemberAccess	info -> section -> owner		2683803	0					
ANR	2683828	PtrMemberAccess	info -> section		2683803	0					
ANR	2683829	Identifier	info		2683803	0					
ANR	2683830	Identifier	section		2683803	1					
ANR	2683831	Identifier	owner		2683803	1					
ANR	2683832	Identifier	e_flags		2683803	1					
ANR	2683833	Identifier	EF_ARM_BE8		2683803	1					
ANR	2683834	ExpressionStatement	info -> endian_code = BFD_ENDIAN_LITTLE	6858:4:247047:247084	2683803	1	True				
ANR	2683835	AssignmentExpression	info -> endian_code = BFD_ENDIAN_LITTLE		2683803	0		=			
ANR	2683836	PtrMemberAccess	info -> endian_code		2683803	0					
ANR	2683837	Identifier	info		2683803	0					
ANR	2683838	Identifier	endian_code		2683803	1					
ANR	2683839	Identifier	BFD_ENDIAN_LITTLE		2683803	1					
ANR	2683840	ReturnStatement	"return print_insn ( pc , info , FALSE ) ;"	6861:2:247096:247131	2683803	1	True				
ANR	2683841	CallExpression	"print_insn ( pc , info , FALSE )"		2683803	0					
ANR	2683842	Callee	print_insn		2683803	0					
ANR	2683843	Identifier	print_insn		2683803	0					
ANR	2683844	ArgumentList	pc		2683803	1					
ANR	2683845	Argument	pc		2683803	0					
ANR	2683846	Identifier	pc		2683803	0					
ANR	2683847	Argument	info		2683803	1					
ANR	2683848	Identifier	info		2683803	0					
ANR	2683849	Argument	FALSE		2683803	2					
ANR	2683850	Identifier	FALSE		2683803	0					
ANR	2683851	ReturnType	int		2683803	1					
ANR	2683852	Identifier	print_insn_big_arm		2683803	2					
ANR	2683853	ParameterList	"bfd_vma pc , struct disassemble_info * info"		2683803	3					
ANR	2683854	Parameter	bfd_vma pc	6851:20:246779:246788	2683803	0	True				
ANR	2683855	ParameterType	bfd_vma		2683803	0					
ANR	2683856	Identifier	pc		2683803	1					
ANR	2683857	Parameter	struct disassemble_info * info	6851:32:246791:246819	2683803	1	True				
ANR	2683858	ParameterType	struct disassemble_info *		2683803	0					
ANR	2683859	Identifier	info		2683803	1					
ANR	2683860	CFGEntryNode	ENTRY		2683803		True				
ANR	2683861	CFGExitNode	EXIT		2683803		True				
ANR	2683862	Symbol	* * info		2683803						
ANR	2683863	Symbol	NULL		2683803						
ANR	2683864	Symbol	info -> section		2683803						
ANR	2683865	Symbol	info -> flavour		2683803						
ANR	2683866	Symbol	info -> endian_code		2683803						
ANR	2683867	Symbol	EF_ARM_BE8		2683803						
ANR	2683868	Symbol	info -> section -> owner		2683803						
ANR	2683869	Symbol	elf_elfheader ( info -> section -> owner ) -> e_flags		2683803						
ANR	2683870	Symbol	print_insn		2683803						
ANR	2683871	Symbol	pc		2683803						
ANR	2683872	Symbol	* info -> section		2683803						
ANR	2683873	Symbol	BFD_ENDIAN_LITTLE		2683803						
ANR	2683874	Symbol	bfd_target_elf_flavour		2683803						
ANR	2683875	Symbol	FALSE		2683803						
ANR	2683876	Symbol	* info		2683803						
ANR	2683877	Symbol	* elf_elfheader		2683803						
ANR	2683878	Symbol	elf_elfheader		2683803						
ANR	2683879	Symbol	info		2683803						
ANR	2683880	Function	print_insn_little_arm	6864:0:247136:247246							
ANR	2683881	FunctionDef	"print_insn_little_arm (bfd_vma pc , struct disassemble_info * info)"		2683880	0					
ANR	2683882	CompoundStatement		6866:0:247206:247246	2683880	0					
ANR	2683883	ReturnStatement	"return print_insn ( pc , info , TRUE ) ;"	6867:2:247210:247244	2683880	0	True				
ANR	2683884	CallExpression	"print_insn ( pc , info , TRUE )"		2683880	0					
ANR	2683885	Callee	print_insn		2683880	0					
ANR	2683886	Identifier	print_insn		2683880	0					
ANR	2683887	ArgumentList	pc		2683880	1					
ANR	2683888	Argument	pc		2683880	0					
ANR	2683889	Identifier	pc		2683880	0					
ANR	2683890	Argument	info		2683880	1					
ANR	2683891	Identifier	info		2683880	0					
ANR	2683892	Argument	TRUE		2683880	2					
ANR	2683893	Identifier	TRUE		2683880	0					
ANR	2683894	ReturnType	int		2683880	1					
ANR	2683895	Identifier	print_insn_little_arm		2683880	2					
ANR	2683896	ParameterList	"bfd_vma pc , struct disassemble_info * info"		2683880	3					
ANR	2683897	Parameter	bfd_vma pc	6865:23:247163:247172	2683880	0	True				
ANR	2683898	ParameterType	bfd_vma		2683880	0					
ANR	2683899	Identifier	pc		2683880	1					
ANR	2683900	Parameter	struct disassemble_info * info	6865:35:247175:247203	2683880	1	True				
ANR	2683901	ParameterType	struct disassemble_info *		2683880	0					
ANR	2683902	Identifier	info		2683880	1					
ANR	2683903	CFGEntryNode	ENTRY		2683880		True				
ANR	2683904	CFGExitNode	EXIT		2683880		True				
ANR	2683905	Symbol	print_insn		2683880						
ANR	2683906	Symbol	pc		2683880						
ANR	2683907	Symbol	TRUE		2683880						
ANR	2683908	Symbol	info		2683880						
ANR	2683909	Function	disassembler_options_arm	6870:0:247249:247948							
ANR	2683910	FunctionDef	disassembler_options_arm ()		2683909	0					
ANR	2683911	CompoundStatement		6872:0:247306:247948	2683909	0					
ANR	2683912	Statement	static	6873:2:247310:247315	2683909	0	True				
ANR	2683913	IdentifierDeclStatement	disasm_options_t * opts = NULL ;	6873:9:247317:247346	2683909	1	True				
ANR	2683914	IdentifierDecl	* opts = NULL		2683909	0					
ANR	2683915	IdentifierDeclType	disasm_options_t *		2683909	0					
ANR	2683916	Identifier	opts		2683909	1					
ANR	2683917	AssignmentExpression	* opts = NULL		2683909	2		=			
ANR	2683918	Identifier	NULL		2683909	0					
ANR	2683919	Identifier	NULL		2683909	1					
ANR	2683920	IfStatement	if ( opts == NULL )		2683909	2					
ANR	2683921	Condition	opts == NULL	6875:6:247355:247366	2683909	0	True				
ANR	2683922	EqualityExpression	opts == NULL		2683909	0		==			
ANR	2683923	Identifier	opts		2683909	0					
ANR	2683924	Identifier	NULL		2683909	1					
ANR	2683925	CompoundStatement		6:6:74:88	2683909	1					
ANR	2683926	IdentifierDeclStatement	unsigned int i ;	6877:6:247381:247395	2683909	0	True				
ANR	2683927	IdentifierDecl	i		2683909	0					
ANR	2683928	IdentifierDeclType	unsigned int		2683909	0					
ANR	2683929	Identifier	i		2683909	1					
ANR	2683930	ExpressionStatement	opts = XNEW ( disasm_options_t )	6878:6:247403:247433	2683909	1	True				
ANR	2683931	AssignmentExpression	opts = XNEW ( disasm_options_t )		2683909	0		=			
ANR	2683932	Identifier	opts		2683909	0					
ANR	2683933	CallExpression	XNEW ( disasm_options_t )		2683909	1					
ANR	2683934	Callee	XNEW		2683909	0					
ANR	2683935	Identifier	XNEW		2683909	0					
ANR	2683936	ArgumentList	disasm_options_t		2683909	1					
ANR	2683937	Argument	disasm_options_t		2683909	0					
ANR	2683938	Identifier	disasm_options_t		2683909	0					
ANR	2683939	Statement	opts	6879:6:247441:247444	2683909	2	True				
ANR	2683940	Statement	->	6879:10:247445:247446	2683909	3	True				
ANR	2683941	Statement	name	6879:12:247447:247450	2683909	4	True				
ANR	2683942	Statement	=	6879:17:247452:247452	2683909	5	True				
ANR	2683943	Statement	XNEWVEC	6879:19:247454:247460	2683909	6	True				
ANR	2683944	Statement	(	6879:27:247462:247462	2683909	7	True				
ANR	2683945	Statement	const	6879:28:247463:247467	2683909	8	True				
ANR	2683946	Statement	char	6879:34:247469:247472	2683909	9	True				
ANR	2683947	Statement	*	6879:39:247474:247474	2683909	10	True				
ANR	2683948	Statement	","	6879:40:247475:247475	2683909	11	True				
ANR	2683949	Statement	NUM_ARM_OPTIONS	6879:42:247477:247491	2683909	12	True				
ANR	2683950	Statement	+	6879:58:247493:247493	2683909	13	True				
ANR	2683951	Statement	1	6879:60:247495:247495	2683909	14	True				
ANR	2683952	Statement	)	6879:61:247496:247496	2683909	15	True				
ANR	2683953	ExpressionStatement		6879:62:247497:247497	2683909	16	True				
ANR	2683954	Statement	opts	6880:6:247505:247508	2683909	17	True				
ANR	2683955	Statement	->	6880:10:247509:247510	2683909	18	True				
ANR	2683956	Statement	description	6880:12:247511:247521	2683909	19	True				
ANR	2683957	Statement	=	6880:24:247523:247523	2683909	20	True				
ANR	2683958	Statement	XNEWVEC	6880:26:247525:247531	2683909	21	True				
ANR	2683959	Statement	(	6880:34:247533:247533	2683909	22	True				
ANR	2683960	Statement	const	6880:35:247534:247538	2683909	23	True				
ANR	2683961	Statement	char	6880:41:247540:247543	2683909	24	True				
ANR	2683962	Statement	*	6880:46:247545:247545	2683909	25	True				
ANR	2683963	Statement	","	6880:47:247546:247546	2683909	26	True				
ANR	2683964	Statement	NUM_ARM_OPTIONS	6880:49:247548:247562	2683909	27	True				
ANR	2683965	Statement	+	6880:65:247564:247564	2683909	28	True				
ANR	2683966	Statement	1	6880:67:247566:247566	2683909	29	True				
ANR	2683967	Statement	)	6880:68:247567:247567	2683909	30	True				
ANR	2683968	ExpressionStatement		6880:69:247568:247568	2683909	31	True				
ANR	2683969	ForStatement	for ( i = 0 ; i < NUM_ARM_OPTIONS ; i ++ )		2683909	32					
ANR	2683970	ForInit	i = 0 ;	6881:11:247581:247586	2683909	0	True				
ANR	2683971	AssignmentExpression	i = 0		2683909	0		=			
ANR	2683972	Identifier	i		2683909	0					
ANR	2683973	PrimaryExpression	0		2683909	1					
ANR	2683974	Condition	i < NUM_ARM_OPTIONS	6881:18:247588:247606	2683909	1	True				
ANR	2683975	RelationalExpression	i < NUM_ARM_OPTIONS		2683909	0		<			
ANR	2683976	Identifier	i		2683909	0					
ANR	2683977	Identifier	NUM_ARM_OPTIONS		2683909	1					
ANR	2683978	PostIncDecOperationExpression	i ++	6881:39:247609:247611	2683909	2	True				
ANR	2683979	Identifier	i		2683909	0					
ANR	2683980	IncDec	++		2683909	1					
ANR	2683981	CompoundStatement		11:1:308:308	2683909	3					
ANR	2683982	ExpressionStatement	opts -> name [ i ] = regnames [ i ] . name	6883:3:247620:247652	2683909	0	True				
ANR	2683983	AssignmentExpression	opts -> name [ i ] = regnames [ i ] . name		2683909	0		=			
ANR	2683984	ArrayIndexing	opts -> name [ i ]		2683909	0					
ANR	2683985	PtrMemberAccess	opts -> name		2683909	0					
ANR	2683986	Identifier	opts		2683909	0					
ANR	2683987	Identifier	name		2683909	1					
ANR	2683988	Identifier	i		2683909	1					
ANR	2683989	MemberAccess	regnames [ i ] . name		2683909	1					
ANR	2683990	ArrayIndexing	regnames [ i ]		2683909	0					
ANR	2683991	Identifier	regnames		2683909	0					
ANR	2683992	Identifier	i		2683909	1					
ANR	2683993	Identifier	name		2683909	1					
ANR	2683994	IfStatement	if ( regnames [ i ] . description != NULL )		2683909	1					
ANR	2683995	Condition	regnames [ i ] . description != NULL	6884:7:247661:247691	2683909	0	True				
ANR	2683996	EqualityExpression	regnames [ i ] . description != NULL		2683909	0		!=			
ANR	2683997	MemberAccess	regnames [ i ] . description		2683909	0					
ANR	2683998	ArrayIndexing	regnames [ i ]		2683909	0					
ANR	2683999	Identifier	regnames		2683909	0					
ANR	2684000	Identifier	i		2683909	1					
ANR	2684001	Identifier	description		2683909	1					
ANR	2684002	Identifier	NULL		2683909	1					
ANR	2684003	CompoundStatement		13:40:387:387	2683909	1					
ANR	2684004	ExpressionStatement	opts -> description [ i ] = _ ( regnames [ i ] . description )	6885:4:247700:247750	2683909	0	True				
ANR	2684005	AssignmentExpression	opts -> description [ i ] = _ ( regnames [ i ] . description )		2683909	0		=			
ANR	2684006	ArrayIndexing	opts -> description [ i ]		2683909	0					
ANR	2684007	PtrMemberAccess	opts -> description		2683909	0					
ANR	2684008	Identifier	opts		2683909	0					
ANR	2684009	Identifier	description		2683909	1					
ANR	2684010	Identifier	i		2683909	1					
ANR	2684011	CallExpression	_ ( regnames [ i ] . description )		2683909	1					
ANR	2684012	Callee	_		2683909	0					
ANR	2684013	Identifier	_		2683909	0					
ANR	2684014	ArgumentList	regnames [ i ] . description		2683909	1					
ANR	2684015	Argument	regnames [ i ] . description		2683909	0					
ANR	2684016	MemberAccess	regnames [ i ] . description		2683909	0					
ANR	2684017	ArrayIndexing	regnames [ i ]		2683909	0					
ANR	2684018	Identifier	regnames		2683909	0					
ANR	2684019	Identifier	i		2683909	1					
ANR	2684020	Identifier	description		2683909	1					
ANR	2684021	ElseStatement	else		2683909	0					
ANR	2684022	CompoundStatement		15:10:455:455	2683909	0					
ANR	2684023	ExpressionStatement	opts -> description [ i ] = NULL	6887:4:247768:247795	2683909	0	True				
ANR	2684024	AssignmentExpression	opts -> description [ i ] = NULL		2683909	0		=			
ANR	2684025	ArrayIndexing	opts -> description [ i ]		2683909	0					
ANR	2684026	PtrMemberAccess	opts -> description		2683909	0					
ANR	2684027	Identifier	opts		2683909	0					
ANR	2684028	Identifier	description		2683909	1					
ANR	2684029	Identifier	i		2683909	1					
ANR	2684030	Identifier	NULL		2683909	1					
ANR	2684031	ExpressionStatement	opts -> name [ i ] = NULL	6891:6:247869:247889	2683909	33	True				
ANR	2684032	AssignmentExpression	opts -> name [ i ] = NULL		2683909	0		=			
ANR	2684033	ArrayIndexing	opts -> name [ i ]		2683909	0					
ANR	2684034	PtrMemberAccess	opts -> name		2683909	0					
ANR	2684035	Identifier	opts		2683909	0					
ANR	2684036	Identifier	name		2683909	1					
ANR	2684037	Identifier	i		2683909	1					
ANR	2684038	Identifier	NULL		2683909	1					
ANR	2684039	ExpressionStatement	opts -> description [ i ] = NULL	6892:6:247897:247924	2683909	34	True				
ANR	2684040	AssignmentExpression	opts -> description [ i ] = NULL		2683909	0		=			
ANR	2684041	ArrayIndexing	opts -> description [ i ]		2683909	0					
ANR	2684042	PtrMemberAccess	opts -> description		2683909	0					
ANR	2684043	Identifier	opts		2683909	0					
ANR	2684044	Identifier	description		2683909	1					
ANR	2684045	Identifier	i		2683909	1					
ANR	2684046	Identifier	NULL		2683909	1					
ANR	2684047	ReturnStatement	return opts ;	6895:2:247935:247946	2683909	3	True				
ANR	2684048	Identifier	opts		2683909	0					
ANR	2684049	ReturnType	const disasm_options_t *		2683909	1					
ANR	2684050	Identifier	disassembler_options_arm		2683909	2					
ANR	2684051	ParameterList			2683909	3					
ANR	2684052	CFGEntryNode	ENTRY		2683909		True				
ANR	2684053	CFGExitNode	EXIT		2683909		True				
ANR	2684054	Symbol	NUM_ARM_OPTIONS		2683909						
ANR	2684055	Symbol	opts -> name		2683909						
ANR	2684056	Symbol	XNEW		2683909						
ANR	2684057	Symbol	* opts -> description		2683909						
ANR	2684058	Symbol	NULL		2683909						
ANR	2684059	Symbol	i		2683909						
ANR	2684060	Symbol	* opts -> name		2683909						
ANR	2684061	Symbol	regnames		2683909						
ANR	2684062	Symbol	disasm_options_t		2683909						
ANR	2684063	Symbol	opts -> description		2683909						
ANR	2684064	Symbol	* i		2683909						
ANR	2684065	Symbol	opts		2683909						
ANR	2684066	Symbol	* opts		2683909						
ANR	2684067	Symbol	* * opts		2683909						
ANR	2684068	Symbol	regnames [ i ] . name		2683909						
ANR	2684069	Symbol	regnames [ i ] . description		2683909						
ANR	2684070	Symbol	* regnames		2683909						
ANR	2684071	Symbol	_		2683909						
ANR	2684072	Function	print_arm_disassembler_options	6898:0:247951:248537							
ANR	2684073	FunctionDef	print_arm_disassembler_options (FILE * stream)		2684072	0					
ANR	2684074	CompoundStatement		6900:0:248002:248537	2684072	0					
ANR	2684075	IdentifierDeclStatement	"unsigned int i , max_len = 0 ;"	6901:2:248006:248033	2684072	0	True				
ANR	2684076	IdentifierDecl	i		2684072	0					
ANR	2684077	IdentifierDeclType	unsigned int		2684072	0					
ANR	2684078	Identifier	i		2684072	1					
ANR	2684079	IdentifierDecl	max_len = 0		2684072	1					
ANR	2684080	IdentifierDeclType	unsigned int		2684072	0					
ANR	2684081	Identifier	max_len		2684072	1					
ANR	2684082	AssignmentExpression	max_len = 0		2684072	2		=			
ANR	2684083	Identifier	max_len		2684072	0					
ANR	2684084	PrimaryExpression	0		2684072	1					
ANR	2684085	ExpressionStatement	"fprintf ( stream , _ ( ""\\n\\\\nThe following ARM specific disassembler options are supported for use with\\n\\\\nthe -M switch:\\n"" ) )"	6902:2:248037:248158	2684072	1	True				
ANR	2684086	CallExpression	"fprintf ( stream , _ ( ""\\n\\\\nThe following ARM specific disassembler options are supported for use with\\n\\\\nthe -M switch:\\n"" ) )"		2684072	0					
ANR	2684087	Callee	fprintf		2684072	0					
ANR	2684088	Identifier	fprintf		2684072	0					
ANR	2684089	ArgumentList	stream		2684072	1					
ANR	2684090	Argument	stream		2684072	0					
ANR	2684091	Identifier	stream		2684072	0					
ANR	2684092	Argument	"_ ( ""\\n\\\\nThe following ARM specific disassembler options are supported for use with\\n\\\\nthe -M switch:\\n"" )"		2684072	1					
ANR	2684093	CallExpression	"_ ( ""\\n\\\\nThe following ARM specific disassembler options are supported for use with\\n\\\\nthe -M switch:\\n"" )"		2684072	0					
ANR	2684094	Callee	_		2684072	0					
ANR	2684095	Identifier	_		2684072	0					
ANR	2684096	ArgumentList	"""\\n\\\\nThe following ARM specific disassembler options are supported for use with\\n\\\\nthe -M switch:\\n"""		2684072	1					
ANR	2684097	Argument	"""\\n\\\\nThe following ARM specific disassembler options are supported for use with\\n\\\\nthe -M switch:\\n"""		2684072	0					
ANR	2684098	PrimaryExpression	"""\\n\\\\nThe following ARM specific disassembler options are supported for use with\\n\\\\nthe -M switch:\\n"""		2684072	0					
ANR	2684099	ForStatement	for ( i = 0 ; i < NUM_ARM_OPTIONS ; i ++ )		2684072	2					
ANR	2684100	ForInit	i = 0 ;	6906:7:248168:248173	2684072	0	True				
ANR	2684101	AssignmentExpression	i = 0		2684072	0		=			
ANR	2684102	Identifier	i		2684072	0					
ANR	2684103	PrimaryExpression	0		2684072	1					
ANR	2684104	Condition	i < NUM_ARM_OPTIONS	6906:14:248175:248193	2684072	1	True				
ANR	2684105	RelationalExpression	i < NUM_ARM_OPTIONS		2684072	0		<			
ANR	2684106	Identifier	i		2684072	0					
ANR	2684107	Identifier	NUM_ARM_OPTIONS		2684072	1					
ANR	2684108	PostIncDecOperationExpression	i ++	6906:35:248196:248198	2684072	2	True				
ANR	2684109	Identifier	i		2684072	0					
ANR	2684110	IncDec	++		2684072	1					
ANR	2684111	CompoundStatement		9:6:210:254	2684072	3					
ANR	2684112	IdentifierDeclStatement	unsigned int len = strlen ( regnames [ i ] . name ) ;	6908:6:248213:248257	2684072	0	True				
ANR	2684113	IdentifierDecl	len = strlen ( regnames [ i ] . name )		2684072	0					
ANR	2684114	IdentifierDeclType	unsigned int		2684072	0					
ANR	2684115	Identifier	len		2684072	1					
ANR	2684116	AssignmentExpression	len = strlen ( regnames [ i ] . name )		2684072	2		=			
ANR	2684117	Identifier	len		2684072	0					
ANR	2684118	CallExpression	strlen ( regnames [ i ] . name )		2684072	1					
ANR	2684119	Callee	strlen		2684072	0					
ANR	2684120	Identifier	strlen		2684072	0					
ANR	2684121	ArgumentList	regnames [ i ] . name		2684072	1					
ANR	2684122	Argument	regnames [ i ] . name		2684072	0					
ANR	2684123	MemberAccess	regnames [ i ] . name		2684072	0					
ANR	2684124	ArrayIndexing	regnames [ i ]		2684072	0					
ANR	2684125	Identifier	regnames		2684072	0					
ANR	2684126	Identifier	i		2684072	1					
ANR	2684127	Identifier	name		2684072	1					
ANR	2684128	IfStatement	if ( max_len < len )		2684072	1					
ANR	2684129	Condition	max_len < len	6909:10:248269:248281	2684072	0	True				
ANR	2684130	RelationalExpression	max_len < len		2684072	0		<			
ANR	2684131	Identifier	max_len		2684072	0					
ANR	2684132	Identifier	len		2684072	1					
ANR	2684133	CompoundStatement		10:25:281:281	2684072	1					
ANR	2684134	ExpressionStatement	max_len = len	6910:7:248293:248306	2684072	0	True				
ANR	2684135	AssignmentExpression	max_len = len		2684072	0		=			
ANR	2684136	Identifier	max_len		2684072	0					
ANR	2684137	Identifier	len		2684072	1					
ANR	2684138	ForStatement	"for ( i = 0 , max_len ++ ; i < NUM_ARM_OPTIONS ; i ++ )"		2684072	3					
ANR	2684139	ForInit	"i = 0 , max_len ++ ;"	6914:9:248332:248348	2684072	0	True				
ANR	2684140	Expression	"i = 0 , max_len ++"		2684072	0					
ANR	2684141	AssignmentExpression	i = 0		2684072	0		=			
ANR	2684142	Identifier	i		2684072	0					
ANR	2684143	PrimaryExpression	0		2684072	1					
ANR	2684144	PostIncDecOperationExpression	max_len ++		2684072	1					
ANR	2684145	Identifier	max_len		2684072	0					
ANR	2684146	IncDec	++		2684072	1					
ANR	2684147	Condition	i < NUM_ARM_OPTIONS	6914:27:248350:248368	2684072	1	True				
ANR	2684148	RelationalExpression	i < NUM_ARM_OPTIONS		2684072	0		<			
ANR	2684149	Identifier	i		2684072	0					
ANR	2684150	Identifier	NUM_ARM_OPTIONS		2684072	1					
ANR	2684151	PostIncDecOperationExpression	i ++	6914:48:248371:248373	2684072	2	True				
ANR	2684152	Identifier	i		2684072	0					
ANR	2684153	IncDec	++		2684072	1					
ANR	2684154	CompoundStatement		15:53:373:373	2684072	3					
ANR	2684155	ExpressionStatement	"fprintf ( stream , ""  %s%*c %s\\n"" , regnames [ i ] . name , ( int ) ( max_len - strlen ( regnames [ i ] . name ) ) , ' ' , _ ( regnames [ i ] . description ) )"	6915:5:248383:248529	2684072	0	True				
ANR	2684156	CallExpression	"fprintf ( stream , ""  %s%*c %s\\n"" , regnames [ i ] . name , ( int ) ( max_len - strlen ( regnames [ i ] . name ) ) , ' ' , _ ( regnames [ i ] . description ) )"		2684072	0					
ANR	2684157	Callee	fprintf		2684072	0					
ANR	2684158	Identifier	fprintf		2684072	0					
ANR	2684159	ArgumentList	stream		2684072	1					
ANR	2684160	Argument	stream		2684072	0					
ANR	2684161	Identifier	stream		2684072	0					
ANR	2684162	Argument	"""  %s%*c %s\\n"""		2684072	1					
ANR	2684163	PrimaryExpression	"""  %s%*c %s\\n"""		2684072	0					
ANR	2684164	Argument	regnames [ i ] . name		2684072	2					
ANR	2684165	MemberAccess	regnames [ i ] . name		2684072	0					
ANR	2684166	ArrayIndexing	regnames [ i ]		2684072	0					
ANR	2684167	Identifier	regnames		2684072	0					
ANR	2684168	Identifier	i		2684072	1					
ANR	2684169	Identifier	name		2684072	1					
ANR	2684170	Argument	( int ) ( max_len - strlen ( regnames [ i ] . name ) )		2684072	3					
ANR	2684171	CastExpression	( int ) ( max_len - strlen ( regnames [ i ] . name ) )		2684072	0					
ANR	2684172	CastTarget	int		2684072	0					
ANR	2684173	AdditiveExpression	max_len - strlen ( regnames [ i ] . name )		2684072	1		-			
ANR	2684174	Identifier	max_len		2684072	0					
ANR	2684175	CallExpression	strlen ( regnames [ i ] . name )		2684072	1					
ANR	2684176	Callee	strlen		2684072	0					
ANR	2684177	Identifier	strlen		2684072	0					
ANR	2684178	ArgumentList	regnames [ i ] . name		2684072	1					
ANR	2684179	Argument	regnames [ i ] . name		2684072	0					
ANR	2684180	MemberAccess	regnames [ i ] . name		2684072	0					
ANR	2684181	ArrayIndexing	regnames [ i ]		2684072	0					
ANR	2684182	Identifier	regnames		2684072	0					
ANR	2684183	Identifier	i		2684072	1					
ANR	2684184	Identifier	name		2684072	1					
ANR	2684185	Argument	' '		2684072	4					
ANR	2684186	PrimaryExpression	' '		2684072	0					
ANR	2684187	Argument	_ ( regnames [ i ] . description )		2684072	5					
ANR	2684188	CallExpression	_ ( regnames [ i ] . description )		2684072	0					
ANR	2684189	Callee	_		2684072	0					
ANR	2684190	Identifier	_		2684072	0					
ANR	2684191	ArgumentList	regnames [ i ] . description		2684072	1					
ANR	2684192	Argument	regnames [ i ] . description		2684072	0					
ANR	2684193	MemberAccess	regnames [ i ] . description		2684072	0					
ANR	2684194	ArrayIndexing	regnames [ i ]		2684072	0					
ANR	2684195	Identifier	regnames		2684072	0					
ANR	2684196	Identifier	i		2684072	1					
ANR	2684197	Identifier	description		2684072	1					
ANR	2684198	ReturnType	void		2684072	1					
ANR	2684199	Identifier	print_arm_disassembler_options		2684072	2					
ANR	2684200	ParameterList	FILE * stream		2684072	3					
ANR	2684201	Parameter	FILE * stream	6899:32:247988:247999	2684072	0	True				
ANR	2684202	ParameterType	FILE *		2684072	0					
ANR	2684203	Identifier	stream		2684072	1					
ANR	2684204	CFGEntryNode	ENTRY		2684072		True				
ANR	2684205	CFGExitNode	EXIT		2684072		True				
ANR	2684206	Symbol	NUM_ARM_OPTIONS		2684072						
ANR	2684207	Symbol	strlen		2684072						
ANR	2684208	Symbol	* i		2684072						
ANR	2684209	Symbol	len		2684072						
ANR	2684210	Symbol	stream		2684072						
ANR	2684211	Symbol	i		2684072						
ANR	2684212	Symbol	regnames [ i ] . name		2684072						
ANR	2684213	Symbol	regnames [ i ] . description		2684072						
ANR	2684214	Symbol	* regnames		2684072						
ANR	2684215	Symbol	regnames		2684072						
ANR	2684216	Symbol	max_len		2684072						
ANR	2684217	Symbol	_		2684072						
