command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	1503105	File	data/converged/CVE-2019-16718~_radare2/fortune.c								
ANR	1503106	DeclStmt									
ANR	1503107	Decl							const char	const char * [ ]	fortunes
ANR	1503108	Function	getFortuneFile	9:0:146:308							
ANR	1503109	FunctionDef	"getFortuneFile (RCore * core , const char * type)"		1503108	0					
ANR	1503110	CompoundStatement		9:59:205:308	1503108	0					
ANR	1503111	ReturnStatement	"return r_str_newf ( R_JOIN_3_PATHS ( ""%s"" , R2_FORTUNES , ""fortunes.%s"" ) , r_sys_prefix ( NULL ) , type ) ;"	10:1:208:306	1503108	0	True				
ANR	1503112	CallExpression	"r_str_newf ( R_JOIN_3_PATHS ( ""%s"" , R2_FORTUNES , ""fortunes.%s"" ) , r_sys_prefix ( NULL ) , type )"		1503108	0					
ANR	1503113	Callee	r_str_newf		1503108	0					
ANR	1503114	Identifier	r_str_newf		1503108	0					
ANR	1503115	ArgumentList	"R_JOIN_3_PATHS ( ""%s"" , R2_FORTUNES , ""fortunes.%s"" )"		1503108	1					
ANR	1503116	Argument	"R_JOIN_3_PATHS ( ""%s"" , R2_FORTUNES , ""fortunes.%s"" )"		1503108	0					
ANR	1503117	CallExpression	"R_JOIN_3_PATHS ( ""%s"" , R2_FORTUNES , ""fortunes.%s"" )"		1503108	0					
ANR	1503118	Callee	R_JOIN_3_PATHS		1503108	0					
ANR	1503119	Identifier	R_JOIN_3_PATHS		1503108	0					
ANR	1503120	ArgumentList	"""%s"""		1503108	1					
ANR	1503121	Argument	"""%s"""		1503108	0					
ANR	1503122	PrimaryExpression	"""%s"""		1503108	0					
ANR	1503123	Argument	R2_FORTUNES		1503108	1					
ANR	1503124	Identifier	R2_FORTUNES		1503108	0					
ANR	1503125	Argument	"""fortunes.%s"""		1503108	2					
ANR	1503126	PrimaryExpression	"""fortunes.%s"""		1503108	0					
ANR	1503127	Argument	r_sys_prefix ( NULL )		1503108	1					
ANR	1503128	CallExpression	r_sys_prefix ( NULL )		1503108	0					
ANR	1503129	Callee	r_sys_prefix		1503108	0					
ANR	1503130	Identifier	r_sys_prefix		1503108	0					
ANR	1503131	ArgumentList	NULL		1503108	1					
ANR	1503132	Argument	NULL		1503108	0					
ANR	1503133	Identifier	NULL		1503108	0					
ANR	1503134	Argument	type		1503108	2					
ANR	1503135	Identifier	type		1503108	0					
ANR	1503136	ReturnType	static char *		1503108	1					
ANR	1503137	Identifier	getFortuneFile		1503108	2					
ANR	1503138	ParameterList	"RCore * core , const char * type"		1503108	3					
ANR	1503139	Parameter	RCore * core	9:28:174:184	1503108	0	True				
ANR	1503140	ParameterType	RCore *		1503108	0					
ANR	1503141	Identifier	core		1503108	1					
ANR	1503142	Parameter	const char * type	9:41:187:202	1503108	1	True				
ANR	1503143	ParameterType	const char *		1503108	0					
ANR	1503144	Identifier	type		1503108	1					
ANR	1503145	CFGEntryNode	ENTRY		1503108		True				
ANR	1503146	CFGExitNode	EXIT		1503108		True				
ANR	1503147	Symbol	core		1503108						
ANR	1503148	Symbol	R2_FORTUNES		1503108						
ANR	1503149	Symbol	NULL		1503108						
ANR	1503150	Symbol	R_JOIN_3_PATHS		1503108						
ANR	1503151	Symbol	r_str_newf		1503108						
ANR	1503152	Symbol	type		1503108						
ANR	1503153	Symbol	r_sys_prefix		1503108						
ANR	1503154	Function	r_core_fortune_list_types	14:0:311:455							
ANR	1503155	FunctionDef	r_core_fortune_list_types ()		1503154	0					
ANR	1503156	CompoundStatement		14:43:354:455	1503154	0					
ANR	1503157	IdentifierDeclStatement	int i ;	15:1:357:362	1503154	0	True				
ANR	1503158	IdentifierDecl	i		1503154	0					
ANR	1503159	IdentifierDeclType	int		1503154	0					
ANR	1503160	Identifier	i		1503154	1					
ANR	1503161	ForStatement	for ( i = 0 ; i < R_ARRAY_SIZE ( fortunes ) ; i ++ )		1503154	1					
ANR	1503162	ForInit	i = 0 ;	16:6:370:375	1503154	0	True				
ANR	1503163	AssignmentExpression	i = 0		1503154	0		=			
ANR	1503164	Identifier	i		1503154	0					
ANR	1503165	PrimaryExpression	0		1503154	1					
ANR	1503166	Condition	i < R_ARRAY_SIZE ( fortunes )	16:13:377:403	1503154	1	True				
ANR	1503167	RelationalExpression	i < R_ARRAY_SIZE ( fortunes )		1503154	0		<			
ANR	1503168	Identifier	i		1503154	0					
ANR	1503169	CallExpression	R_ARRAY_SIZE ( fortunes )		1503154	1					
ANR	1503170	Callee	R_ARRAY_SIZE		1503154	0					
ANR	1503171	Identifier	R_ARRAY_SIZE		1503154	0					
ANR	1503172	ArgumentList	fortunes		1503154	1					
ANR	1503173	Argument	fortunes		1503154	0					
ANR	1503174	Identifier	fortunes		1503154	0					
ANR	1503175	PostIncDecOperationExpression	i ++	16:42:406:408	1503154	2	True				
ANR	1503176	Identifier	i		1503154	0					
ANR	1503177	IncDec	++		1503154	1					
ANR	1503178	CompoundStatement		3:47:56:56	1503154	3					
ANR	1503179	ExpressionStatement	"r_cons_printf ( ""%s\\n"" , fortunes [ i ] )"	17:2:415:450	1503154	0	True				
ANR	1503180	CallExpression	"r_cons_printf ( ""%s\\n"" , fortunes [ i ] )"		1503154	0					
ANR	1503181	Callee	r_cons_printf		1503154	0					
ANR	1503182	Identifier	r_cons_printf		1503154	0					
ANR	1503183	ArgumentList	"""%s\\n"""		1503154	1					
ANR	1503184	Argument	"""%s\\n"""		1503154	0					
ANR	1503185	PrimaryExpression	"""%s\\n"""		1503154	0					
ANR	1503186	Argument	fortunes [ i ]		1503154	1					
ANR	1503187	ArrayIndexing	fortunes [ i ]		1503154	0					
ANR	1503188	Identifier	fortunes		1503154	0					
ANR	1503189	Identifier	i		1503154	1					
ANR	1503190	ReturnType	R_API void		1503154	1					
ANR	1503191	Identifier	r_core_fortune_list_types		1503154	2					
ANR	1503192	ParameterList			1503154	3					
ANR	1503193	CFGEntryNode	ENTRY		1503154		True				
ANR	1503194	CFGExitNode	EXIT		1503154		True				
ANR	1503195	Symbol	* i		1503154						
ANR	1503196	Symbol	R_ARRAY_SIZE		1503154						
ANR	1503197	Symbol	i		1503154						
ANR	1503198	Symbol	fortunes		1503154						
ANR	1503199	Symbol	* fortunes		1503154						
ANR	1503200	Function	r_core_fortune_list	21:0:458:1043							
ANR	1503201	FunctionDef	r_core_fortune_list (RCore * core)		1503200	0					
ANR	1503202	CompoundStatement		21:44:502:1043	1503200	0					
ANR	1503203	IdentifierDeclStatement	"const char * types = ( char * ) r_config_get ( core -> config , ""cfg.fortunes.type"" ) ;"	23:1:569:645	1503200	0	True				
ANR	1503204	IdentifierDecl	"* types = ( char * ) r_config_get ( core -> config , ""cfg.fortunes.type"" )"		1503200	0					
ANR	1503205	IdentifierDeclType	const char *		1503200	0					
ANR	1503206	Identifier	types		1503200	1					
ANR	1503207	AssignmentExpression	"* types = ( char * ) r_config_get ( core -> config , ""cfg.fortunes.type"" )"		1503200	2		=			
ANR	1503208	Identifier	types		1503200	0					
ANR	1503209	CastExpression	"( char * ) r_config_get ( core -> config , ""cfg.fortunes.type"" )"		1503200	1					
ANR	1503210	CastTarget	char *		1503200	0					
ANR	1503211	CallExpression	"r_config_get ( core -> config , ""cfg.fortunes.type"" )"		1503200	1					
ANR	1503212	Callee	r_config_get		1503200	0					
ANR	1503213	Identifier	r_config_get		1503200	0					
ANR	1503214	ArgumentList	core -> config		1503200	1					
ANR	1503215	Argument	core -> config		1503200	0					
ANR	1503216	PtrMemberAccess	core -> config		1503200	0					
ANR	1503217	Identifier	core		1503200	0					
ANR	1503218	Identifier	config		1503200	1					
ANR	1503219	Argument	"""cfg.fortunes.type"""		1503200	1					
ANR	1503220	PrimaryExpression	"""cfg.fortunes.type"""		1503200	0					
ANR	1503221	IdentifierDeclStatement	"int i , j ;"	24:1:648:656	1503200	1	True				
ANR	1503222	IdentifierDecl	i		1503200	0					
ANR	1503223	IdentifierDeclType	int		1503200	0					
ANR	1503224	Identifier	i		1503200	1					
ANR	1503225	IdentifierDecl	j		1503200	1					
ANR	1503226	IdentifierDeclType	int		1503200	0					
ANR	1503227	Identifier	j		1503200	1					
ANR	1503228	ForStatement	for ( i = 0 ; i < R_ARRAY_SIZE ( fortunes ) ; i ++ )		1503200	2					
ANR	1503229	ForInit	i = 0 ;	25:6:664:669	1503200	0	True				
ANR	1503230	AssignmentExpression	i = 0		1503200	0		=			
ANR	1503231	Identifier	i		1503200	0					
ANR	1503232	PrimaryExpression	0		1503200	1					
ANR	1503233	Condition	i < R_ARRAY_SIZE ( fortunes )	25:13:671:697	1503200	1	True				
ANR	1503234	RelationalExpression	i < R_ARRAY_SIZE ( fortunes )		1503200	0		<			
ANR	1503235	Identifier	i		1503200	0					
ANR	1503236	CallExpression	R_ARRAY_SIZE ( fortunes )		1503200	1					
ANR	1503237	Callee	R_ARRAY_SIZE		1503200	0					
ANR	1503238	Identifier	R_ARRAY_SIZE		1503200	0					
ANR	1503239	ArgumentList	fortunes		1503200	1					
ANR	1503240	Argument	fortunes		1503200	0					
ANR	1503241	Identifier	fortunes		1503200	0					
ANR	1503242	PostIncDecOperationExpression	i ++	25:42:700:702	1503200	2	True				
ANR	1503243	Identifier	i		1503200	0					
ANR	1503244	IncDec	++		1503200	1					
ANR	1503245	CompoundStatement		5:47:202:202	1503200	3					
ANR	1503246	IfStatement	"if ( strstr ( types , fortunes [ i ] ) )"		1503200	0					
ANR	1503247	Condition	"strstr ( types , fortunes [ i ] )"	26:6:713:739	1503200	0	True				
ANR	1503248	CallExpression	"strstr ( types , fortunes [ i ] )"		1503200	0					
ANR	1503249	Callee	strstr		1503200	0					
ANR	1503250	Identifier	strstr		1503200	0					
ANR	1503251	ArgumentList	types		1503200	1					
ANR	1503252	Argument	types		1503200	0					
ANR	1503253	Identifier	types		1503200	0					
ANR	1503254	Argument	fortunes [ i ]		1503200	1					
ANR	1503255	ArrayIndexing	fortunes [ i ]		1503200	0					
ANR	1503256	Identifier	fortunes		1503200	0					
ANR	1503257	Identifier	i		1503200	1					
ANR	1503258	CompoundStatement		8:3:295:332	1503200	1					
ANR	1503259	IdentifierDeclStatement	"char * file = getFortuneFile ( core , fortunes [ i ] ) ;"	27:3:747:793	1503200	0	True				
ANR	1503260	IdentifierDecl	"* file = getFortuneFile ( core , fortunes [ i ] )"		1503200	0					
ANR	1503261	IdentifierDeclType	char *		1503200	0					
ANR	1503262	Identifier	file		1503200	1					
ANR	1503263	AssignmentExpression	"* file = getFortuneFile ( core , fortunes [ i ] )"		1503200	2		=			
ANR	1503264	Identifier	file		1503200	0					
ANR	1503265	CallExpression	"getFortuneFile ( core , fortunes [ i ] )"		1503200	1					
ANR	1503266	Callee	getFortuneFile		1503200	0					
ANR	1503267	Identifier	getFortuneFile		1503200	0					
ANR	1503268	ArgumentList	core		1503200	1					
ANR	1503269	Argument	core		1503200	0					
ANR	1503270	Identifier	core		1503200	0					
ANR	1503271	Argument	fortunes [ i ]		1503200	1					
ANR	1503272	ArrayIndexing	fortunes [ i ]		1503200	0					
ANR	1503273	Identifier	fortunes		1503200	0					
ANR	1503274	Identifier	i		1503200	1					
ANR	1503275	IdentifierDeclStatement	"char * str = r_file_slurp ( file , NULL ) ;"	28:3:798:835	1503200	1	True				
ANR	1503276	IdentifierDecl	"* str = r_file_slurp ( file , NULL )"		1503200	0					
ANR	1503277	IdentifierDeclType	char *		1503200	0					
ANR	1503278	Identifier	str		1503200	1					
ANR	1503279	AssignmentExpression	"* str = r_file_slurp ( file , NULL )"		1503200	2		=			
ANR	1503280	Identifier	str		1503200	0					
ANR	1503281	CallExpression	"r_file_slurp ( file , NULL )"		1503200	1					
ANR	1503282	Callee	r_file_slurp		1503200	0					
ANR	1503283	Identifier	r_file_slurp		1503200	0					
ANR	1503284	ArgumentList	file		1503200	1					
ANR	1503285	Argument	file		1503200	0					
ANR	1503286	Identifier	file		1503200	0					
ANR	1503287	Argument	NULL		1503200	1					
ANR	1503288	Identifier	NULL		1503200	0					
ANR	1503289	ForStatement	for ( j = 0 ; str [ j ] ; j ++ )		1503200	2					
ANR	1503290	ForInit	j = 0 ;	29:8:845:850	1503200	0	True				
ANR	1503291	AssignmentExpression	j = 0		1503200	0		=			
ANR	1503292	Identifier	j		1503200	0					
ANR	1503293	PrimaryExpression	0		1503200	1					
ANR	1503294	Condition	str [ j ]	29:15:852:857	1503200	1	True				
ANR	1503295	ArrayIndexing	str [ j ]		1503200	0					
ANR	1503296	Identifier	str		1503200	0					
ANR	1503297	Identifier	j		1503200	1					
ANR	1503298	PostIncDecOperationExpression	j ++	29:23:860:862	1503200	2	True				
ANR	1503299	Identifier	j		1503200	0					
ANR	1503300	IncDec	++		1503200	1					
ANR	1503301	CompoundStatement		9:28:362:362	1503200	3					
ANR	1503302	IfStatement	if ( str [ j ] == '\\n' )		1503200	0					
ANR	1503303	Condition	str [ j ] == '\\n'	30:8:875:888	1503200	0	True				
ANR	1503304	EqualityExpression	str [ j ] == '\\n'		1503200	0		==			
ANR	1503305	ArrayIndexing	str [ j ]		1503200	0					
ANR	1503306	Identifier	str		1503200	0					
ANR	1503307	Identifier	j		1503200	1					
ANR	1503308	PrimaryExpression	'\\n'		1503200	1					
ANR	1503309	CompoundStatement		10:24:388:388	1503200	1					
ANR	1503310	IfStatement	if ( i < j )		1503200	0					
ANR	1503311	Condition	i < j	31:9:902:906	1503200	0	True				
ANR	1503312	RelationalExpression	i < j		1503200	0		<			
ANR	1503313	Identifier	i		1503200	0					
ANR	1503314	Identifier	j		1503200	1					
ANR	1503315	CompoundStatement		11:16:406:406	1503200	1					
ANR	1503316	ExpressionStatement	str [ j ] = '\\0'	32:6:917:930	1503200	0	True				
ANR	1503317	AssignmentExpression	str [ j ] = '\\0'		1503200	0		=			
ANR	1503318	ArrayIndexing	str [ j ]		1503200	0					
ANR	1503319	Identifier	str		1503200	0					
ANR	1503320	Identifier	j		1503200	1					
ANR	1503321	PrimaryExpression	'\\0'		1503200	1					
ANR	1503322	ExpressionStatement	"r_cons_printf ( ""%s\\n"" , str + i )"	33:6:938:969	1503200	1	True				
ANR	1503323	CallExpression	"r_cons_printf ( ""%s\\n"" , str + i )"		1503200	0					
ANR	1503324	Callee	r_cons_printf		1503200	0					
ANR	1503325	Identifier	r_cons_printf		1503200	0					
ANR	1503326	ArgumentList	"""%s\\n"""		1503200	1					
ANR	1503327	Argument	"""%s\\n"""		1503200	0					
ANR	1503328	PrimaryExpression	"""%s\\n"""		1503200	0					
ANR	1503329	Argument	str + i		1503200	1					
ANR	1503330	AdditiveExpression	str + i		1503200	0		+			
ANR	1503331	Identifier	str		1503200	0					
ANR	1503332	Identifier	i		1503200	1					
ANR	1503333	ExpressionStatement	i = j + 1	35:5:983:992	1503200	1	True				
ANR	1503334	AssignmentExpression	i = j + 1		1503200	0		=			
ANR	1503335	Identifier	i		1503200	0					
ANR	1503336	AdditiveExpression	j + 1		1503200	1		+			
ANR	1503337	Identifier	j		1503200	0					
ANR	1503338	PrimaryExpression	1		1503200	1					
ANR	1503339	ExpressionStatement	free ( str )	38:3:1008:1018	1503200	3	True				
ANR	1503340	CallExpression	free ( str )		1503200	0					
ANR	1503341	Callee	free		1503200	0					
ANR	1503342	Identifier	free		1503200	0					
ANR	1503343	ArgumentList	str		1503200	1					
ANR	1503344	Argument	str		1503200	0					
ANR	1503345	Identifier	str		1503200	0					
ANR	1503346	ExpressionStatement	free ( file )	39:3:1023:1034	1503200	4	True				
ANR	1503347	CallExpression	free ( file )		1503200	0					
ANR	1503348	Callee	free		1503200	0					
ANR	1503349	Identifier	free		1503200	0					
ANR	1503350	ArgumentList	file		1503200	1					
ANR	1503351	Argument	file		1503200	0					
ANR	1503352	Identifier	file		1503200	0					
ANR	1503353	ReturnType	R_API void		1503200	1					
ANR	1503354	Identifier	r_core_fortune_list		1503200	2					
ANR	1503355	ParameterList	RCore * core		1503200	3					
ANR	1503356	Parameter	RCore * core	21:31:489:499	1503200	0	True				
ANR	1503357	ParameterType	RCore *		1503200	0					
ANR	1503358	Identifier	core		1503200	1					
ANR	1503359	CFGEntryNode	ENTRY		1503200		True				
ANR	1503360	CFGExitNode	EXIT		1503200		True				
ANR	1503361	Symbol	core -> config		1503200						
ANR	1503362	Symbol	types		1503200						
ANR	1503363	Symbol	r_file_slurp		1503200						
ANR	1503364	Symbol	NULL		1503200						
ANR	1503365	Symbol	* core		1503200						
ANR	1503366	Symbol	r_config_get		1503200						
ANR	1503367	Symbol	i		1503200						
ANR	1503368	Symbol	getFortuneFile		1503200						
ANR	1503369	Symbol	j		1503200						
ANR	1503370	Symbol	* fortunes		1503200						
ANR	1503371	Symbol	str		1503200						
ANR	1503372	Symbol	core		1503200						
ANR	1503373	Symbol	* i		1503200						
ANR	1503374	Symbol	file		1503200						
ANR	1503375	Symbol	* j		1503200						
ANR	1503376	Symbol	strstr		1503200						
ANR	1503377	Symbol	R_ARRAY_SIZE		1503200						
ANR	1503378	Symbol	* str		1503200						
ANR	1503379	Symbol	fortunes		1503200						
ANR	1503380	Function	getrandomline	44:0:1046:1527							
ANR	1503381	FunctionDef	getrandomline (RCore * core)		1503380	0					
ANR	1503382	CompoundStatement		44:40:1086:1527	1503380	0					
ANR	1503383	IdentifierDeclStatement	"int i , lines = 0 ;"	45:1:1089:1105	1503380	0	True				
ANR	1503384	IdentifierDecl	i		1503380	0					
ANR	1503385	IdentifierDeclType	int		1503380	0					
ANR	1503386	Identifier	i		1503380	1					
ANR	1503387	IdentifierDecl	lines = 0		1503380	1					
ANR	1503388	IdentifierDeclType	int		1503380	0					
ANR	1503389	Identifier	lines		1503380	1					
ANR	1503390	AssignmentExpression	lines = 0		1503380	2		=			
ANR	1503391	Identifier	lines		1503380	0					
ANR	1503392	PrimaryExpression	0		1503380	1					
ANR	1503393	IdentifierDeclStatement	"const char * types = ( char * ) r_config_get ( core -> config , ""cfg.fortunes.type"" ) ;"	46:1:1108:1184	1503380	1	True				
ANR	1503394	IdentifierDecl	"* types = ( char * ) r_config_get ( core -> config , ""cfg.fortunes.type"" )"		1503380	0					
ANR	1503395	IdentifierDeclType	const char *		1503380	0					
ANR	1503396	Identifier	types		1503380	1					
ANR	1503397	AssignmentExpression	"* types = ( char * ) r_config_get ( core -> config , ""cfg.fortunes.type"" )"		1503380	2		=			
ANR	1503398	Identifier	types		1503380	0					
ANR	1503399	CastExpression	"( char * ) r_config_get ( core -> config , ""cfg.fortunes.type"" )"		1503380	1					
ANR	1503400	CastTarget	char *		1503380	0					
ANR	1503401	CallExpression	"r_config_get ( core -> config , ""cfg.fortunes.type"" )"		1503380	1					
ANR	1503402	Callee	r_config_get		1503380	0					
ANR	1503403	Identifier	r_config_get		1503380	0					
ANR	1503404	ArgumentList	core -> config		1503380	1					
ANR	1503405	Argument	core -> config		1503380	0					
ANR	1503406	PtrMemberAccess	core -> config		1503380	0					
ANR	1503407	Identifier	core		1503380	0					
ANR	1503408	Identifier	config		1503380	1					
ANR	1503409	Argument	"""cfg.fortunes.type"""		1503380	1					
ANR	1503410	PrimaryExpression	"""cfg.fortunes.type"""		1503380	0					
ANR	1503411	IdentifierDeclStatement	"char * line = NULL , * templine ;"	47:1:1187:1215	1503380	2	True				
ANR	1503412	IdentifierDecl	* line = NULL		1503380	0					
ANR	1503413	IdentifierDeclType	char *		1503380	0					
ANR	1503414	Identifier	line		1503380	1					
ANR	1503415	AssignmentExpression	* line = NULL		1503380	2		=			
ANR	1503416	Identifier	NULL		1503380	0					
ANR	1503417	Identifier	NULL		1503380	1					
ANR	1503418	IdentifierDecl	* templine		1503380	1					
ANR	1503419	IdentifierDeclType	char *		1503380	0					
ANR	1503420	Identifier	templine		1503380	1					
ANR	1503421	ForStatement	for ( i = 0 ; i < R_ARRAY_SIZE ( fortunes ) ; i ++ )		1503380	3					
ANR	1503422	ForInit	i = 0 ;	48:6:1223:1228	1503380	0	True				
ANR	1503423	AssignmentExpression	i = 0		1503380	0		=			
ANR	1503424	Identifier	i		1503380	0					
ANR	1503425	PrimaryExpression	0		1503380	1					
ANR	1503426	Condition	i < R_ARRAY_SIZE ( fortunes )	48:13:1230:1256	1503380	1	True				
ANR	1503427	RelationalExpression	i < R_ARRAY_SIZE ( fortunes )		1503380	0		<			
ANR	1503428	Identifier	i		1503380	0					
ANR	1503429	CallExpression	R_ARRAY_SIZE ( fortunes )		1503380	1					
ANR	1503430	Callee	R_ARRAY_SIZE		1503380	0					
ANR	1503431	Identifier	R_ARRAY_SIZE		1503380	0					
ANR	1503432	ArgumentList	fortunes		1503380	1					
ANR	1503433	Argument	fortunes		1503380	0					
ANR	1503434	Identifier	fortunes		1503380	0					
ANR	1503435	PostIncDecOperationExpression	i ++	48:42:1259:1261	1503380	2	True				
ANR	1503436	Identifier	i		1503380	0					
ANR	1503437	IncDec	++		1503380	1					
ANR	1503438	CompoundStatement		5:47:177:177	1503380	3					
ANR	1503439	IfStatement	"if ( strstr ( types , fortunes [ i ] ) )"		1503380	0					
ANR	1503440	Condition	"strstr ( types , fortunes [ i ] )"	49:6:1272:1298	1503380	0	True				
ANR	1503441	CallExpression	"strstr ( types , fortunes [ i ] )"		1503380	0					
ANR	1503442	Callee	strstr		1503380	0					
ANR	1503443	Identifier	strstr		1503380	0					
ANR	1503444	ArgumentList	types		1503380	1					
ANR	1503445	Argument	types		1503380	0					
ANR	1503446	Identifier	types		1503380	0					
ANR	1503447	Argument	fortunes [ i ]		1503380	1					
ANR	1503448	ArrayIndexing	fortunes [ i ]		1503380	0					
ANR	1503449	Identifier	fortunes		1503380	0					
ANR	1503450	Identifier	i		1503380	1					
ANR	1503451	CompoundStatement		7:3:219:265	1503380	1					
ANR	1503452	IdentifierDeclStatement	"char * file = getFortuneFile ( core , fortunes [ i ] ) ;"	50:3:1306:1352	1503380	0	True				
ANR	1503453	IdentifierDecl	"* file = getFortuneFile ( core , fortunes [ i ] )"		1503380	0					
ANR	1503454	IdentifierDeclType	char *		1503380	0					
ANR	1503455	Identifier	file		1503380	1					
ANR	1503456	AssignmentExpression	"* file = getFortuneFile ( core , fortunes [ i ] )"		1503380	2		=			
ANR	1503457	Identifier	file		1503380	0					
ANR	1503458	CallExpression	"getFortuneFile ( core , fortunes [ i ] )"		1503380	1					
ANR	1503459	Callee	getFortuneFile		1503380	0					
ANR	1503460	Identifier	getFortuneFile		1503380	0					
ANR	1503461	ArgumentList	core		1503380	1					
ANR	1503462	Argument	core		1503380	0					
ANR	1503463	Identifier	core		1503380	0					
ANR	1503464	Argument	fortunes [ i ]		1503380	1					
ANR	1503465	ArrayIndexing	fortunes [ i ]		1503380	0					
ANR	1503466	Identifier	fortunes		1503380	0					
ANR	1503467	Identifier	i		1503380	1					
ANR	1503468	ExpressionStatement	"templine = r_file_slurp_random_line_count ( file , & lines )"	51:3:1357:1413	1503380	1	True				
ANR	1503469	AssignmentExpression	"templine = r_file_slurp_random_line_count ( file , & lines )"		1503380	0		=			
ANR	1503470	Identifier	templine		1503380	0					
ANR	1503471	CallExpression	"r_file_slurp_random_line_count ( file , & lines )"		1503380	1					
ANR	1503472	Callee	r_file_slurp_random_line_count		1503380	0					
ANR	1503473	Identifier	r_file_slurp_random_line_count		1503380	0					
ANR	1503474	ArgumentList	file		1503380	1					
ANR	1503475	Argument	file		1503380	0					
ANR	1503476	Identifier	file		1503380	0					
ANR	1503477	Argument	& lines		1503380	1					
ANR	1503478	UnaryOperationExpression	& lines		1503380	0					
ANR	1503479	UnaryOperator	&		1503380	0					
ANR	1503480	Identifier	lines		1503380	1					
ANR	1503481	IfStatement	if ( templine && * templine )		1503380	2					
ANR	1503482	Condition	templine && * templine	52:7:1422:1442	1503380	0	True				
ANR	1503483	AndExpression	templine && * templine		1503380	0		&&			
ANR	1503484	Identifier	templine		1503380	0					
ANR	1503485	UnaryOperationExpression	* templine		1503380	1					
ANR	1503486	UnaryOperator	*		1503380	0					
ANR	1503487	Identifier	templine		1503380	1					
ANR	1503488	CompoundStatement		9:30:358:358	1503380	1					
ANR	1503489	ExpressionStatement	free ( line )	53:4:1451:1462	1503380	0	True				
ANR	1503490	CallExpression	free ( line )		1503380	0					
ANR	1503491	Callee	free		1503380	0					
ANR	1503492	Identifier	free		1503380	0					
ANR	1503493	ArgumentList	line		1503380	1					
ANR	1503494	Argument	line		1503380	0					
ANR	1503495	Identifier	line		1503380	0					
ANR	1503496	ExpressionStatement	line = templine	54:4:1468:1483	1503380	1	True				
ANR	1503497	AssignmentExpression	line = templine		1503380	0		=			
ANR	1503498	Identifier	line		1503380	0					
ANR	1503499	Identifier	templine		1503380	1					
ANR	1503500	ExpressionStatement	free ( file )	56:3:1493:1504	1503380	3	True				
ANR	1503501	CallExpression	free ( file )		1503380	0					
ANR	1503502	Callee	free		1503380	0					
ANR	1503503	Identifier	free		1503380	0					
ANR	1503504	ArgumentList	file		1503380	1					
ANR	1503505	Argument	file		1503380	0					
ANR	1503506	Identifier	file		1503380	0					
ANR	1503507	ReturnStatement	return line ;	59:1:1514:1525	1503380	4	True				
ANR	1503508	Identifier	line		1503380	0					
ANR	1503509	ReturnType	static char *		1503380	1					
ANR	1503510	Identifier	getrandomline		1503380	2					
ANR	1503511	ParameterList	RCore * core		1503380	3					
ANR	1503512	Parameter	RCore * core	44:27:1073:1083	1503380	0	True				
ANR	1503513	ParameterType	RCore *		1503380	0					
ANR	1503514	Identifier	core		1503380	1					
ANR	1503515	CFGEntryNode	ENTRY		1503380		True				
ANR	1503516	CFGExitNode	EXIT		1503380		True				
ANR	1503517	Symbol	core -> config		1503380						
ANR	1503518	Symbol	types		1503380						
ANR	1503519	Symbol	NULL		1503380						
ANR	1503520	Symbol	line		1503380						
ANR	1503521	Symbol	* core		1503380						
ANR	1503522	Symbol	r_config_get		1503380						
ANR	1503523	Symbol	i		1503380						
ANR	1503524	Symbol	getFortuneFile		1503380						
ANR	1503525	Symbol	* templine		1503380						
ANR	1503526	Symbol	r_file_slurp_random_line_count		1503380						
ANR	1503527	Symbol	& lines		1503380						
ANR	1503528	Symbol	* fortunes		1503380						
ANR	1503529	Symbol	core		1503380						
ANR	1503530	Symbol	templine		1503380						
ANR	1503531	Symbol	* i		1503380						
ANR	1503532	Symbol	file		1503380						
ANR	1503533	Symbol	strstr		1503380						
ANR	1503534	Symbol	R_ARRAY_SIZE		1503380						
ANR	1503535	Symbol	lines		1503380						
ANR	1503536	Symbol	fortunes		1503380						
ANR	1503537	Function	r_core_fortune_print_random	62:0:1530:1992							
ANR	1503538	FunctionDef	r_core_fortune_print_random (RCore * core)		1503537	0					
ANR	1503539	CompoundStatement		62:52:1582:1992	1503537	0					
ANR	1503540	IdentifierDeclStatement	char * line = getrandomline ( core ) ;	64:1:1649:1682	1503537	0	True				
ANR	1503541	IdentifierDecl	* line = getrandomline ( core )		1503537	0					
ANR	1503542	IdentifierDeclType	char *		1503537	0					
ANR	1503543	Identifier	line		1503537	1					
ANR	1503544	AssignmentExpression	* line = getrandomline ( core )		1503537	2		=			
ANR	1503545	Identifier	line		1503537	0					
ANR	1503546	CallExpression	getrandomline ( core )		1503537	1					
ANR	1503547	Callee	getrandomline		1503537	0					
ANR	1503548	Identifier	getrandomline		1503537	0					
ANR	1503549	ArgumentList	core		1503537	1					
ANR	1503550	Argument	core		1503537	0					
ANR	1503551	Identifier	core		1503537	0					
ANR	1503552	IfStatement	if ( ! line )		1503537	1					
ANR	1503553	Condition	! line	65:5:1689:1693	1503537	0	True				
ANR	1503554	UnaryOperationExpression	! line		1503537	0					
ANR	1503555	UnaryOperator	!		1503537	0					
ANR	1503556	Identifier	line		1503537	1					
ANR	1503557	CompoundStatement		4:12:113:113	1503537	1					
ANR	1503558	ExpressionStatement	line = getrandomline ( core )	66:2:1700:1727	1503537	0	True				
ANR	1503559	AssignmentExpression	line = getrandomline ( core )		1503537	0		=			
ANR	1503560	Identifier	line		1503537	0					
ANR	1503561	CallExpression	getrandomline ( core )		1503537	1					
ANR	1503562	Callee	getrandomline		1503537	0					
ANR	1503563	Identifier	getrandomline		1503537	0					
ANR	1503564	ArgumentList	core		1503537	1					
ANR	1503565	Argument	core		1503537	0					
ANR	1503566	Identifier	core		1503537	0					
ANR	1503567	IfStatement	if ( line )		1503537	2					
ANR	1503568	Condition	line	68:5:1737:1740	1503537	0	True				
ANR	1503569	Identifier	line		1503537	0					
ANR	1503570	CompoundStatement		7:11:160:160	1503537	1					
ANR	1503571	IfStatement	"if ( r_config_get_i ( core -> config , ""cfg.fortunes.clippy"" ) )"		1503537	0					
ANR	1503572	Condition	"r_config_get_i ( core -> config , ""cfg.fortunes.clippy"" )"	69:6:1751:1802	1503537	0	True				
ANR	1503573	CallExpression	"r_config_get_i ( core -> config , ""cfg.fortunes.clippy"" )"		1503537	0					
ANR	1503574	Callee	r_config_get_i		1503537	0					
ANR	1503575	Identifier	r_config_get_i		1503537	0					
ANR	1503576	ArgumentList	core -> config		1503537	1					
ANR	1503577	Argument	core -> config		1503537	0					
ANR	1503578	PtrMemberAccess	core -> config		1503537	0					
ANR	1503579	Identifier	core		1503537	0					
ANR	1503580	Identifier	config		1503537	1					
ANR	1503581	Argument	"""cfg.fortunes.clippy"""		1503537	1					
ANR	1503582	PrimaryExpression	"""cfg.fortunes.clippy"""		1503537	0					
ANR	1503583	CompoundStatement		8:60:222:222	1503537	1					
ANR	1503584	ExpressionStatement	r_core_clippy ( line )	70:3:1810:1830	1503537	0	True				
ANR	1503585	CallExpression	r_core_clippy ( line )		1503537	0					
ANR	1503586	Callee	r_core_clippy		1503537	0					
ANR	1503587	Identifier	r_core_clippy		1503537	0					
ANR	1503588	ArgumentList	line		1503537	1					
ANR	1503589	Argument	line		1503537	0					
ANR	1503590	Identifier	line		1503537	0					
ANR	1503591	ElseStatement	else		1503537	0					
ANR	1503592	CompoundStatement		10:9:258:258	1503537	0					
ANR	1503593	ExpressionStatement	"r_cons_printf ( "" -- %s\\n"" , line )"	72:3:1846:1878	1503537	0	True				
ANR	1503594	CallExpression	"r_cons_printf ( "" -- %s\\n"" , line )"		1503537	0					
ANR	1503595	Callee	r_cons_printf		1503537	0					
ANR	1503596	Identifier	r_cons_printf		1503537	0					
ANR	1503597	ArgumentList	""" -- %s\\n"""		1503537	1					
ANR	1503598	Argument	""" -- %s\\n"""		1503537	0					
ANR	1503599	PrimaryExpression	""" -- %s\\n"""		1503537	0					
ANR	1503600	Argument	line		1503537	1					
ANR	1503601	Identifier	line		1503537	0					
ANR	1503602	IfStatement	"if ( r_config_get_i ( core -> config , ""cfg.fortunes.tts"" ) )"		1503537	1					
ANR	1503603	Condition	"r_config_get_i ( core -> config , ""cfg.fortunes.tts"" )"	74:6:1890:1938	1503537	0	True				
ANR	1503604	CallExpression	"r_config_get_i ( core -> config , ""cfg.fortunes.tts"" )"		1503537	0					
ANR	1503605	Callee	r_config_get_i		1503537	0					
ANR	1503606	Identifier	r_config_get_i		1503537	0					
ANR	1503607	ArgumentList	core -> config		1503537	1					
ANR	1503608	Argument	core -> config		1503537	0					
ANR	1503609	PtrMemberAccess	core -> config		1503537	0					
ANR	1503610	Identifier	core		1503537	0					
ANR	1503611	Identifier	config		1503537	1					
ANR	1503612	Argument	"""cfg.fortunes.tts"""		1503537	1					
ANR	1503613	PrimaryExpression	"""cfg.fortunes.tts"""		1503537	0					
ANR	1503614	CompoundStatement		13:57:358:358	1503537	1					
ANR	1503615	ExpressionStatement	"r_sys_tts ( line , true )"	75:3:1946:1968	1503537	0	True				
ANR	1503616	CallExpression	"r_sys_tts ( line , true )"		1503537	0					
ANR	1503617	Callee	r_sys_tts		1503537	0					
ANR	1503618	Identifier	r_sys_tts		1503537	0					
ANR	1503619	ArgumentList	line		1503537	1					
ANR	1503620	Argument	line		1503537	0					
ANR	1503621	Identifier	line		1503537	0					
ANR	1503622	Argument	true		1503537	1					
ANR	1503623	Identifier	true		1503537	0					
ANR	1503624	ExpressionStatement	free ( line )	77:2:1976:1987	1503537	2	True				
ANR	1503625	CallExpression	free ( line )		1503537	0					
ANR	1503626	Callee	free		1503537	0					
ANR	1503627	Identifier	free		1503537	0					
ANR	1503628	ArgumentList	line		1503537	1					
ANR	1503629	Argument	line		1503537	0					
ANR	1503630	Identifier	line		1503537	0					
ANR	1503631	ReturnType	R_API void		1503537	1					
ANR	1503632	Identifier	r_core_fortune_print_random		1503537	2					
ANR	1503633	ParameterList	RCore * core		1503537	3					
ANR	1503634	Parameter	RCore * core	62:39:1569:1579	1503537	0	True				
ANR	1503635	ParameterType	RCore *		1503537	0					
ANR	1503636	Identifier	core		1503537	1					
ANR	1503637	CFGEntryNode	ENTRY		1503537		True				
ANR	1503638	CFGExitNode	EXIT		1503537		True				
ANR	1503639	Symbol	core -> config		1503537						
ANR	1503640	Symbol	core		1503537						
ANR	1503641	Symbol	getrandomline		1503537						
ANR	1503642	Symbol	line		1503537						
ANR	1503643	Symbol	r_config_get_i		1503537						
ANR	1503644	Symbol	* core		1503537						
ANR	1503645	Symbol	true		1503537						
