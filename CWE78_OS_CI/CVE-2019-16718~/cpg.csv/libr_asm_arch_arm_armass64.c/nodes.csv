command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	2661414	File	data/converged/CVE-2019-16718~_radare2/libr_asm_arch_arm_armass64.c								
ANR	2661415	ClassDef	optype_t	9:8:160:265							
ANR	2661416	DeclStmt									
ANR	2661417	Decl							optype_t	optype_t	OpType
ANR	2661418	ClassDef	regtype_t	17:8:276:396							
ANR	2661419	DeclStmt									
ANR	2661420	Decl							regtype_t	regtype_t	RegType
ANR	2661421	ClassDef	shifttype_t	26:8:407:498							
ANR	2661422	DeclStmt									
ANR	2661423	Decl							shifttype_t	shifttype_t	ShiftType
ANR	2661424	ClassDef	operand_t	33:8:509:771							
ANR	2661425	DeclStmt									
ANR	2661426	Decl							OpType	OpType	type
ANR	2661427	ClassDef	<unnamed>	35:1:543:759							
ANR	2661428	ClassDef	<unnamed>	36:2:553:613							
ANR	2661429	DeclStmt									
ANR	2661430	Decl							int	int	reg
ANR	2661431	DeclStmt									
ANR	2661432	Decl							RegType	RegType	reg_type
ANR	2661433	DeclStmt									
ANR	2661434	Decl							ut16	ut16	sp_val
ANR	2661435	ClassDef	<unnamed>	41:2:618:661							
ANR	2661436	DeclStmt									
ANR	2661437	Decl							ut64	ut64	immediate
ANR	2661438	DeclStmt									
ANR	2661439	Decl							int	int	sign
ANR	2661440	ClassDef	<unnamed>	45:2:666:719							
ANR	2661441	DeclStmt									
ANR	2661442	Decl							ut64	ut64	shift_amount
ANR	2661443	DeclStmt									
ANR	2661444	Decl							ShiftType	ShiftType	shift
ANR	2661445	ClassDef	<unnamed>	49:2:724:755							
ANR	2661446	DeclStmt									
ANR	2661447	Decl							ut32	ut32	mem_option
ANR	2661448	DeclStmt									
ANR	2661449	Decl							operand_t	operand_t	Operand
ANR	2661450	ClassDef	Opcode_t	57:8:806:947							
ANR	2661451	DeclStmt									
ANR	2661452	Decl							char	char *	mnemonic
ANR	2661453	DeclStmt									
ANR	2661454	Decl							ut32	ut32 [ 3 ]	op
ANR	2661455	DeclStmt									
ANR	2661456	Decl							size_t	size_t	op_len
ANR	2661457	DeclStmt									
ANR	2661458	Decl							ut8	ut8 [ 3 ]	opcode
ANR	2661459	DeclStmt									
ANR	2661460	Decl							int	int	operands_count
ANR	2661461	DeclStmt									
ANR	2661462	Decl							Operand	Operand [ MAX_OPERANDS ]	operands
ANR	2661463	DeclStmt									
ANR	2661464	Decl							Opcode_t	Opcode_t	ArmOp
ANR	2661465	Function	get_mem_option	66:0:950:1359							
ANR	2661466	FunctionDef	get_mem_option (char * token)		2661465	0					
ANR	2661467	CompoundStatement		66:39:989:1359	2661465	0					
ANR	2661468	IdentifierDeclStatement	"const char * options [ ] = { ""sy"" , ""st"" , ""ld"" , ""xxx"" , ""ish"" , ""ishst"" , ""ishld"" , ""xxx"" , ""nsh"" , ""nshst"" , ""nshld"" , ""xxx"" , ""osh"" , ""oshst"" , ""oshld"" , NULL } ;"	68:1:1039:1235	2661465	0	True				
ANR	2661469	IdentifierDecl	"* options [ ] = { ""sy"" , ""st"" , ""ld"" , ""xxx"" , ""ish"" , ""ishst"" , ""ishld"" , ""xxx"" , ""nsh"" , ""nshst"" , ""nshld"" , ""xxx"" , ""osh"" , ""oshst"" , ""oshld"" , NULL }"		2661465	0					
ANR	2661470	IdentifierDeclType	const char * [ ]		2661465	0					
ANR	2661471	Identifier	options		2661465	1					
ANR	2661472	AssignmentExpression	"* options [ ] = { ""sy"" , ""st"" , ""ld"" , ""xxx"" , ""ish"" , ""ishst"" , ""ishld"" , ""xxx"" , ""nsh"" , ""nshst"" , ""nshld"" , ""xxx"" , ""osh"" , ""oshst"" , ""oshld"" , NULL }"		2661465	2		=			
ANR	2661473	Identifier	options		2661465	0					
ANR	2661474	InitializerList	"""sy"""		2661465	1					
ANR	2661475	PrimaryExpression	"""sy"""		2661465	0					
ANR	2661476	PrimaryExpression	"""st"""		2661465	1					
ANR	2661477	PrimaryExpression	"""ld"""		2661465	2					
ANR	2661478	PrimaryExpression	"""xxx"""		2661465	3					
ANR	2661479	PrimaryExpression	"""ish"""		2661465	4					
ANR	2661480	PrimaryExpression	"""ishst"""		2661465	5					
ANR	2661481	PrimaryExpression	"""ishld"""		2661465	6					
ANR	2661482	PrimaryExpression	"""xxx"""		2661465	7					
ANR	2661483	PrimaryExpression	"""nsh"""		2661465	8					
ANR	2661484	PrimaryExpression	"""nshst"""		2661465	9					
ANR	2661485	PrimaryExpression	"""nshld"""		2661465	10					
ANR	2661486	PrimaryExpression	"""xxx"""		2661465	11					
ANR	2661487	PrimaryExpression	"""osh"""		2661465	12					
ANR	2661488	PrimaryExpression	"""oshst"""		2661465	13					
ANR	2661489	PrimaryExpression	"""oshld"""		2661465	14					
ANR	2661490	Identifier	NULL		2661465	15					
ANR	2661491	IdentifierDeclStatement	int i = 0 ;	71:1:1238:1247	2661465	1	True				
ANR	2661492	IdentifierDecl	i = 0		2661465	0					
ANR	2661493	IdentifierDeclType	int		2661465	0					
ANR	2661494	Identifier	i		2661465	1					
ANR	2661495	AssignmentExpression	i = 0		2661465	2		=			
ANR	2661496	Identifier	i		2661465	0					
ANR	2661497	PrimaryExpression	0		2661465	1					
ANR	2661498	WhileStatement	while ( options [ i ] )		2661465	2					
ANR	2661499	Condition	options [ i ]	72:8:1257:1266	2661465	0	True				
ANR	2661500	ArrayIndexing	options [ i ]		2661465	0					
ANR	2661501	Identifier	options		2661465	0					
ANR	2661502	Identifier	i		2661465	1					
ANR	2661503	CompoundStatement		7:20:279:279	2661465	1					
ANR	2661504	IfStatement	"if ( ! r_str_casecmp ( token , options [ i ] ) )"		2661465	0					
ANR	2661505	Condition	"! r_str_casecmp ( token , options [ i ] )"	73:6:1277:1310	2661465	0	True				
ANR	2661506	UnaryOperationExpression	"! r_str_casecmp ( token , options [ i ] )"		2661465	0					
ANR	2661507	UnaryOperator	!		2661465	0					
ANR	2661508	CallExpression	"r_str_casecmp ( token , options [ i ] )"		2661465	1					
ANR	2661509	Callee	r_str_casecmp		2661465	0					
ANR	2661510	Identifier	r_str_casecmp		2661465	0					
ANR	2661511	ArgumentList	token		2661465	1					
ANR	2661512	Argument	token		2661465	0					
ANR	2661513	Identifier	token		2661465	0					
ANR	2661514	Argument	options [ i ]		2661465	1					
ANR	2661515	ArrayIndexing	options [ i ]		2661465	0					
ANR	2661516	Identifier	options		2661465	0					
ANR	2661517	Identifier	i		2661465	1					
ANR	2661518	CompoundStatement		8:42:323:323	2661465	1					
ANR	2661519	ReturnStatement	return 15 - i ;	74:3:1318:1331	2661465	0	True				
ANR	2661520	AdditiveExpression	15 - i		2661465	0		-			
ANR	2661521	PrimaryExpression	15		2661465	0					
ANR	2661522	Identifier	i		2661465	1					
ANR	2661523	ExpressionStatement	i ++	76:2:1339:1342	2661465	1	True				
ANR	2661524	PostIncDecOperationExpression	i ++		2661465	0					
ANR	2661525	Identifier	i		2661465	0					
ANR	2661526	IncDec	++		2661465	1					
ANR	2661527	ReturnStatement	return - 1 ;	78:1:1348:1357	2661465	3	True				
ANR	2661528	UnaryOperationExpression	- 1		2661465	0					
ANR	2661529	UnaryOperator	-		2661465	0					
ANR	2661530	PrimaryExpression	1		2661465	1					
ANR	2661531	ReturnType	static int		2661465	1					
ANR	2661532	Identifier	get_mem_option		2661465	2					
ANR	2661533	ParameterList	char * token		2661465	3					
ANR	2661534	Parameter	char * token	66:26:976:986	2661465	0	True				
ANR	2661535	ParameterType	char *		2661465	0					
ANR	2661536	Identifier	token		2661465	1					
ANR	2661537	CFGEntryNode	ENTRY		2661465		True				
ANR	2661538	CFGExitNode	EXIT		2661465		True				
ANR	2661539	Symbol	NULL		2661465						
ANR	2661540	Symbol	* i		2661465						
ANR	2661541	Symbol	options		2661465						
ANR	2661542	Symbol	i		2661465						
ANR	2661543	Symbol	* options		2661465						
ANR	2661544	Symbol	token		2661465						
ANR	2661545	Symbol	r_str_casecmp		2661465						
ANR	2661546	Function	countLeadingZeros	81:0:1362:1470							
ANR	2661547	FunctionDef	countLeadingZeros (ut32 x)		2661546	0					
ANR	2661548	CompoundStatement		81:37:1399:1470	2661546	0					
ANR	2661549	IdentifierDeclStatement	int count = 0 ;	82:1:1402:1415	2661546	0	True				
ANR	2661550	IdentifierDecl	count = 0		2661546	0					
ANR	2661551	IdentifierDeclType	int		2661546	0					
ANR	2661552	Identifier	count		2661546	1					
ANR	2661553	AssignmentExpression	count = 0		2661546	2		=			
ANR	2661554	Identifier	count		2661546	0					
ANR	2661555	PrimaryExpression	0		2661546	1					
ANR	2661556	WhileStatement	while ( x )		2661546	1					
ANR	2661557	Condition	x	83:8:1425:1425	2661546	0	True				
ANR	2661558	Identifier	x		2661546	0					
ANR	2661559	CompoundStatement		3:11:28:28	2661546	1					
ANR	2661560	ExpressionStatement	x >>= 1	84:2:1432:1439	2661546	0	True				
ANR	2661561	AssignmentExpression	x >>= 1		2661546	0		>>=			
ANR	2661562	Identifier	x		2661546	0					
ANR	2661563	PrimaryExpression	1		2661546	1					
ANR	2661564	ExpressionStatement	-- count	85:2:1443:1450	2661546	1	True				
ANR	2661565	UnaryExpression	-- count		2661546	0					
ANR	2661566	IncDec	--		2661546	0					
ANR	2661567	Identifier	count		2661546	1					
ANR	2661568	ReturnStatement	return count ;	87:1:1456:1468	2661546	2	True				
ANR	2661569	Identifier	count		2661546	0					
ANR	2661570	ReturnType	static int		2661546	1					
ANR	2661571	Identifier	countLeadingZeros		2661546	2					
ANR	2661572	ParameterList	ut32 x		2661546	3					
ANR	2661573	Parameter	ut32 x	81:29:1391:1396	2661546	0	True				
ANR	2661574	ParameterType	ut32		2661546	0					
ANR	2661575	Identifier	x		2661546	1					
ANR	2661576	CFGEntryNode	ENTRY		2661546		True				
ANR	2661577	CFGExitNode	EXIT		2661546		True				
ANR	2661578	Symbol	x		2661546						
ANR	2661579	Symbol	count		2661546						
ANR	2661580	Function	countTrailingZeros	90:0:1473:1639							
ANR	2661581	FunctionDef	countTrailingZeros (ut32 x)		2661580	0					
ANR	2661582	CompoundStatement		90:38:1511:1639	2661580	0					
ANR	2661583	IdentifierDeclStatement	int count = 0 ;	91:1:1514:1527	2661580	0	True				
ANR	2661584	IdentifierDecl	count = 0		2661580	0					
ANR	2661585	IdentifierDeclType	int		2661580	0					
ANR	2661586	Identifier	count		2661580	1					
ANR	2661587	AssignmentExpression	count = 0		2661580	2		=			
ANR	2661588	Identifier	count		2661580	0					
ANR	2661589	PrimaryExpression	0		2661580	1					
ANR	2661590	WhileStatement	while ( x > 0 )		2661580	1					
ANR	2661591	Condition	x > 0	92:8:1537:1541	2661580	0	True				
ANR	2661592	RelationalExpression	x > 0		2661580	0		>			
ANR	2661593	Identifier	x		2661580	0					
ANR	2661594	PrimaryExpression	0		2661580	1					
ANR	2661595	CompoundStatement		3:15:32:32	2661580	1					
ANR	2661596	IfStatement	if ( ( x & 1 ) == 1 )		2661580	0					
ANR	2661597	Condition	( x & 1 ) == 1	93:6:1552:1563	2661580	0	True				
ANR	2661598	EqualityExpression	( x & 1 ) == 1		2661580	0		==			
ANR	2661599	BitAndExpression	x & 1		2661580	0		&			
ANR	2661600	Identifier	x		2661580	0					
ANR	2661601	PrimaryExpression	1		2661580	1					
ANR	2661602	PrimaryExpression	1		2661580	1					
ANR	2661603	CompoundStatement		4:20:54:54	2661580	1					
ANR	2661604	BreakStatement	break ;	94:3:1571:1576	2661580	0	True				
ANR	2661605	ElseStatement	else		2661580	0					
ANR	2661606	CompoundStatement		6:9:75:75	2661580	0					
ANR	2661607	ExpressionStatement	count ++	96:3:1592:1600	2661580	0	True				
ANR	2661608	PostIncDecOperationExpression	count ++		2661580	0					
ANR	2661609	Identifier	count		2661580	0					
ANR	2661610	IncDec	++		2661580	1					
ANR	2661611	ExpressionStatement	x = x >> 1	97:3:1605:1615	2661580	1	True				
ANR	2661612	AssignmentExpression	x = x >> 1		2661580	0		=			
ANR	2661613	Identifier	x		2661580	0					
ANR	2661614	ShiftExpression	x >> 1		2661580	1		>>			
ANR	2661615	Identifier	x		2661580	0					
ANR	2661616	PrimaryExpression	1		2661580	1					
ANR	2661617	ReturnStatement	return count ;	100:1:1625:1637	2661580	2	True				
ANR	2661618	Identifier	count		2661580	0					
ANR	2661619	ReturnType	static int		2661580	1					
ANR	2661620	Identifier	countTrailingZeros		2661580	2					
ANR	2661621	ParameterList	ut32 x		2661580	3					
ANR	2661622	Parameter	ut32 x	90:30:1503:1508	2661580	0	True				
ANR	2661623	ParameterType	ut32		2661580	0					
ANR	2661624	Identifier	x		2661580	1					
ANR	2661625	CFGEntryNode	ENTRY		2661580		True				
ANR	2661626	CFGExitNode	EXIT		2661580		True				
ANR	2661627	Symbol	x		2661580						
ANR	2661628	Symbol	count		2661580						
ANR	2661629	Function	calcNegOffset	103:0:1642:2012							
ANR	2661630	FunctionDef	"calcNegOffset (int n , int shift)"		2661629	0					
ANR	2661631	CompoundStatement		103:43:1685:2012	2661629	0					
ANR	2661632	IdentifierDeclStatement	int a = n >> shift ;	104:1:1688:1706	2661629	0	True				
ANR	2661633	IdentifierDecl	a = n >> shift		2661629	0					
ANR	2661634	IdentifierDeclType	int		2661629	0					
ANR	2661635	Identifier	a		2661629	1					
ANR	2661636	AssignmentExpression	a = n >> shift		2661629	2		=			
ANR	2661637	Identifier	a		2661629	0					
ANR	2661638	ShiftExpression	n >> shift		2661629	1		>>			
ANR	2661639	Identifier	n		2661629	0					
ANR	2661640	Identifier	shift		2661629	1					
ANR	2661641	IfStatement	if ( a == 0 )		2661629	1					
ANR	2661642	Condition	a == 0	105:5:1713:1718	2661629	0	True				
ANR	2661643	EqualityExpression	a == 0		2661629	0		==			
ANR	2661644	Identifier	a		2661629	0					
ANR	2661645	PrimaryExpression	0		2661629	1					
ANR	2661646	CompoundStatement		3:13:35:35	2661629	1					
ANR	2661647	ReturnStatement	return 0xff ;	106:2:1725:1736	2661629	0	True				
ANR	2661648	PrimaryExpression	0xff		2661629	0					
ANR	2661649	IdentifierDeclStatement	int t = 0x400 ;	110:1:1806:1819	2661629	2	True				
ANR	2661650	IdentifierDecl	t = 0x400		2661629	0					
ANR	2661651	IdentifierDeclType	int		2661629	0					
ANR	2661652	Identifier	t		2661629	1					
ANR	2661653	AssignmentExpression	t = 0x400		2661629	2		=			
ANR	2661654	Identifier	t		2661629	0					
ANR	2661655	PrimaryExpression	0x400		2661629	1					
ANR	2661656	WhileStatement	while ( ! ( t & a ) && a != 0 && t != 0 )		2661629	3					
ANR	2661657	Condition	! ( t & a ) && a != 0 && t != 0	111:8:1829:1856	2661629	0	True				
ANR	2661658	AndExpression	! ( t & a ) && a != 0 && t != 0		2661629	0		&&			
ANR	2661659	UnaryOperationExpression	! ( t & a )		2661629	0					
ANR	2661660	UnaryOperator	!		2661629	0					
ANR	2661661	BitAndExpression	t & a		2661629	1		&			
ANR	2661662	Identifier	t		2661629	0					
ANR	2661663	Identifier	a		2661629	1					
ANR	2661664	AndExpression	a != 0 && t != 0		2661629	1		&&			
ANR	2661665	EqualityExpression	a != 0		2661629	0		!=			
ANR	2661666	Identifier	a		2661629	0					
ANR	2661667	PrimaryExpression	0		2661629	1					
ANR	2661668	EqualityExpression	t != 0		2661629	1		!=			
ANR	2661669	Identifier	t		2661629	0					
ANR	2661670	PrimaryExpression	0		2661629	1					
ANR	2661671	CompoundStatement		9:38:173:173	2661629	1					
ANR	2661672	ExpressionStatement	t = t >> 1	112:2:1863:1873	2661629	0	True				
ANR	2661673	AssignmentExpression	t = t >> 1		2661629	0		=			
ANR	2661674	Identifier	t		2661629	0					
ANR	2661675	ShiftExpression	t >> 1		2661629	1		>>			
ANR	2661676	Identifier	t		2661629	0					
ANR	2661677	PrimaryExpression	1		2661629	1					
ANR	2661678	ExpressionStatement	t = t & ( t - 1 )	114:1:1879:1894	2661629	4	True				
ANR	2661679	AssignmentExpression	t = t & ( t - 1 )		2661629	0		=			
ANR	2661680	Identifier	t		2661629	0					
ANR	2661681	BitAndExpression	t & ( t - 1 )		2661629	1		&			
ANR	2661682	Identifier	t		2661629	0					
ANR	2661683	AdditiveExpression	t - 1		2661629	1		-			
ANR	2661684	Identifier	t		2661629	0					
ANR	2661685	PrimaryExpression	1		2661629	1					
ANR	2661686	ExpressionStatement	a = a ^ t	115:1:1897:1906	2661629	5	True				
ANR	2661687	AssignmentExpression	a = a ^ t		2661629	0		=			
ANR	2661688	Identifier	a		2661629	0					
ANR	2661689	ExclusiveOrExpression	a ^ t		2661629	1		^			
ANR	2661690	Identifier	a		2661629	0					
ANR	2661691	Identifier	t		2661629	1					
ANR	2661692	IfStatement	if ( countTrailingZeros ( n ) > shift )		2661629	6					
ANR	2661693	Condition	countTrailingZeros ( n ) > shift	117:5:1942:1970	2661629	0	True				
ANR	2661694	RelationalExpression	countTrailingZeros ( n ) > shift		2661629	0		>			
ANR	2661695	CallExpression	countTrailingZeros ( n )		2661629	0					
ANR	2661696	Callee	countTrailingZeros		2661629	0					
ANR	2661697	Identifier	countTrailingZeros		2661629	0					
ANR	2661698	ArgumentList	n		2661629	1					
ANR	2661699	Argument	n		2661629	0					
ANR	2661700	Identifier	n		2661629	0					
ANR	2661701	Identifier	shift		2661629	1					
ANR	2661702	CompoundStatement		15:36:287:287	2661629	1					
ANR	2661703	ExpressionStatement	a --	118:2:1977:1980	2661629	0	True				
ANR	2661704	PostIncDecOperationExpression	a --		2661629	0					
ANR	2661705	Identifier	a		2661629	0					
ANR	2661706	IncDec	--		2661629	1					
ANR	2661707	ReturnStatement	return 0xff & ( 0xff - a ) ;	120:1:1986:2010	2661629	7	True				
ANR	2661708	BitAndExpression	0xff & ( 0xff - a )		2661629	0		&			
ANR	2661709	PrimaryExpression	0xff		2661629	0					
ANR	2661710	AdditiveExpression	0xff - a		2661629	1		-			
ANR	2661711	PrimaryExpression	0xff		2661629	0					
ANR	2661712	Identifier	a		2661629	1					
ANR	2661713	ReturnType	static int		2661629	1					
ANR	2661714	Identifier	calcNegOffset		2661629	2					
ANR	2661715	ParameterList	"int n , int shift"		2661629	3					
ANR	2661716	Parameter	int n	103:25:1667:1671	2661629	0	True				
ANR	2661717	ParameterType	int		2661629	0					
ANR	2661718	Identifier	n		2661629	1					
ANR	2661719	Parameter	int shift	103:32:1674:1682	2661629	1	True				
ANR	2661720	ParameterType	int		2661629	0					
ANR	2661721	Identifier	shift		2661629	1					
ANR	2661722	CFGEntryNode	ENTRY		2661629		True				
ANR	2661723	CFGExitNode	EXIT		2661629		True				
ANR	2661724	Symbol	a		2661629						
ANR	2661725	Symbol	countTrailingZeros		2661629						
ANR	2661726	Symbol	t		2661629						
ANR	2661727	Symbol	shift		2661629						
ANR	2661728	Symbol	n		2661629						
ANR	2661729	Function	countLeadingOnes	123:0:2015:2085							
ANR	2661730	FunctionDef	countLeadingOnes (ut32 x)		2661729	0					
ANR	2661731	CompoundStatement		123:36:2051:2085	2661729	0					
ANR	2661732	ReturnStatement	return countLeadingZeros ( ~x ) ;	124:1:2054:2083	2661729	0	True				
ANR	2661733	CallExpression	countLeadingZeros ( ~x )		2661729	0					
ANR	2661734	Callee	countLeadingZeros		2661729	0					
ANR	2661735	Identifier	countLeadingZeros		2661729	0					
ANR	2661736	ArgumentList	~x		2661729	1					
ANR	2661737	Argument	~x		2661729	0					
ANR	2661738	Identifier	~x		2661729	0					
ANR	2661739	ReturnType	static int		2661729	1					
ANR	2661740	Identifier	countLeadingOnes		2661729	2					
ANR	2661741	ParameterList	ut32 x		2661729	3					
ANR	2661742	Parameter	ut32 x	123:28:2043:2048	2661729	0	True				
ANR	2661743	ParameterType	ut32		2661729	0					
ANR	2661744	Identifier	x		2661729	1					
ANR	2661745	CFGEntryNode	ENTRY		2661729		True				
ANR	2661746	CFGExitNode	EXIT		2661729		True				
ANR	2661747	Symbol	x		2661729						
ANR	2661748	Symbol	~x		2661729						
ANR	2661749	Symbol	countLeadingZeros		2661729						
ANR	2661750	Function	countTrailingOnes	127:0:2088:2160							
ANR	2661751	FunctionDef	countTrailingOnes (ut32 x)		2661750	0					
ANR	2661752	CompoundStatement		127:37:2125:2160	2661750	0					
ANR	2661753	ReturnStatement	return countTrailingZeros ( ~x ) ;	128:1:2128:2158	2661750	0	True				
ANR	2661754	CallExpression	countTrailingZeros ( ~x )		2661750	0					
ANR	2661755	Callee	countTrailingZeros		2661750	0					
ANR	2661756	Identifier	countTrailingZeros		2661750	0					
ANR	2661757	ArgumentList	~x		2661750	1					
ANR	2661758	Argument	~x		2661750	0					
ANR	2661759	Identifier	~x		2661750	0					
ANR	2661760	ReturnType	static int		2661750	1					
ANR	2661761	Identifier	countTrailingOnes		2661750	2					
ANR	2661762	ParameterList	ut32 x		2661750	3					
ANR	2661763	Parameter	ut32 x	127:29:2117:2122	2661750	0	True				
ANR	2661764	ParameterType	ut32		2661750	0					
ANR	2661765	Identifier	x		2661750	1					
ANR	2661766	CFGEntryNode	ENTRY		2661750		True				
ANR	2661767	CFGExitNode	EXIT		2661750		True				
ANR	2661768	Symbol	countTrailingZeros		2661750						
ANR	2661769	Symbol	x		2661750						
ANR	2661770	Symbol	~x		2661750						
ANR	2661771	Function	isMask	131:0:2163:2242							
ANR	2661772	FunctionDef	isMask (ut32 value)		2661771	0					
ANR	2661773	CompoundStatement		131:31:2194:2242	2661771	0					
ANR	2661774	ReturnStatement	return value && ( ( value + 1 ) & value ) == 0 ;	132:2:2198:2240	2661771	0	True				
ANR	2661775	AndExpression	value && ( ( value + 1 ) & value ) == 0		2661771	0		&&			
ANR	2661776	Identifier	value		2661771	0					
ANR	2661777	EqualityExpression	( ( value + 1 ) & value ) == 0		2661771	1		==			
ANR	2661778	BitAndExpression	( value + 1 ) & value		2661771	0		&			
ANR	2661779	AdditiveExpression	value + 1		2661771	0		+			
ANR	2661780	Identifier	value		2661771	0					
ANR	2661781	PrimaryExpression	1		2661771	1					
ANR	2661782	Identifier	value		2661771	1					
ANR	2661783	PrimaryExpression	0		2661771	1					
ANR	2661784	ReturnType	static bool		2661771	1					
ANR	2661785	Identifier	isMask		2661771	2					
ANR	2661786	ParameterList	ut32 value		2661771	3					
ANR	2661787	Parameter	ut32 value	131:19:2182:2191	2661771	0	True				
ANR	2661788	ParameterType	ut32		2661771	0					
ANR	2661789	Identifier	value		2661771	1					
ANR	2661790	CFGEntryNode	ENTRY		2661771		True				
ANR	2661791	CFGExitNode	EXIT		2661771		True				
ANR	2661792	Symbol	value		2661771						
ANR	2661793	Function	isShiftedMask	135:0:2245:2334							
ANR	2661794	FunctionDef	isShiftedMask (ut32 value)		2661793	0					
ANR	2661795	CompoundStatement		135:39:2284:2334	2661793	0					
ANR	2661796	ReturnStatement	return value && isMask ( ( value - 1 ) | value ) ;	136:2:2288:2332	2661793	0	True				
ANR	2661797	AndExpression	value && isMask ( ( value - 1 ) | value )		2661793	0		&&			
ANR	2661798	Identifier	value		2661793	0					
ANR	2661799	CallExpression	isMask ( ( value - 1 ) | value )		2661793	1					
ANR	2661800	Callee	isMask		2661793	0					
ANR	2661801	Identifier	isMask		2661793	0					
ANR	2661802	ArgumentList	( value - 1 ) | value		2661793	1					
ANR	2661803	Argument	( value - 1 ) | value		2661793	0					
ANR	2661804	InclusiveOrExpression	( value - 1 ) | value		2661793	0		|			
ANR	2661805	AdditiveExpression	value - 1		2661793	0		-			
ANR	2661806	Identifier	value		2661793	0					
ANR	2661807	PrimaryExpression	1		2661793	1					
ANR	2661808	Identifier	value		2661793	1					
ANR	2661809	ReturnType	static bool		2661793	1					
ANR	2661810	Identifier	isShiftedMask		2661793	2					
ANR	2661811	ParameterList	ut32 value		2661793	3					
ANR	2661812	Parameter	ut32 value	135:27:2272:2281	2661793	0	True				
ANR	2661813	ParameterType	ut32		2661793	0					
ANR	2661814	Identifier	value		2661793	1					
ANR	2661815	CFGEntryNode	ENTRY		2661793		True				
ANR	2661816	CFGExitNode	EXIT		2661793		True				
ANR	2661817	Symbol	isMask		2661793						
ANR	2661818	Symbol	value		2661793						
ANR	2661819	Function	decodeBitMasks	139:0:2337:3427							
ANR	2661820	FunctionDef	decodeBitMasks (ut32 imm)		2661819	0					
ANR	2661821	CompoundStatement		139:37:2374:3427	2661819	0					
ANR	2661822	IdentifierDeclStatement	int size = 32 ;	141:1:2398:2411	2661819	0	True				
ANR	2661823	IdentifierDecl	size = 32		2661819	0					
ANR	2661824	IdentifierDeclType	int		2661819	0					
ANR	2661825	Identifier	size		2661819	1					
ANR	2661826	AssignmentExpression	size = 32		2661819	2		=			
ANR	2661827	Identifier	size		2661819	0					
ANR	2661828	PrimaryExpression	32		2661819	1					
ANR	2661829	IdentifierDeclStatement	"ut32 cto , i ;"	143:1:2459:2470	2661819	1	True				
ANR	2661830	IdentifierDecl	cto		2661819	0					
ANR	2661831	IdentifierDeclType	ut32		2661819	0					
ANR	2661832	Identifier	cto		2661819	1					
ANR	2661833	IdentifierDecl	i		2661819	1					
ANR	2661834	IdentifierDeclType	ut32		2661819	0					
ANR	2661835	Identifier	i		2661819	1					
ANR	2661836	Statement	ut32	144:1:2473:2476	2661819	2	True				
ANR	2661837	Statement	mask	144:6:2478:2481	2661819	3	True				
ANR	2661838	Statement	=	144:11:2483:2483	2661819	4	True				
ANR	2661839	Statement	(	144:13:2485:2485	2661819	5	True				
ANR	2661840	Statement	(	144:14:2486:2486	2661819	6	True				
ANR	2661841	Statement	ut64	144:15:2487:2490	2661819	7	True				
ANR	2661842	Statement	)	144:19:2491:2491	2661819	8	True				
ANR	2661843	Statement	-	144:21:2493:2493	2661819	9	True				
ANR	2661844	Statement	1L	144:23:2495:2496	2661819	10	True				
ANR	2661845	Statement	L	144:25:2497:2497	2661819	11	True				
ANR	2661846	Statement	)	144:26:2498:2498	2661819	12	True				
ANR	2661847	Statement	>>	144:28:2500:2501	2661819	13	True				
ANR	2661848	ExpressionStatement	64 - size	144:31:2503:2514	2661819	14	True				
ANR	2661849	AdditiveExpression	64 - size		2661819	0		-			
ANR	2661850	PrimaryExpression	64		2661819	0					
ANR	2661851	Identifier	size		2661819	1					
ANR	2661852	IfStatement	if ( isShiftedMask ( imm ) )		2661819	15					
ANR	2661853	Condition	isShiftedMask ( imm )	146:5:2522:2540	2661819	0	True				
ANR	2661854	CallExpression	isShiftedMask ( imm )		2661819	0					
ANR	2661855	Callee	isShiftedMask		2661819	0					
ANR	2661856	Identifier	isShiftedMask		2661819	0					
ANR	2661857	ArgumentList	imm		2661819	1					
ANR	2661858	Argument	imm		2661819	0					
ANR	2661859	Identifier	imm		2661819	0					
ANR	2661860	CompoundStatement		8:26:168:168	2661819	1					
ANR	2661861	ExpressionStatement	i = countTrailingZeros ( imm )	147:2:2547:2575	2661819	0	True				
ANR	2661862	AssignmentExpression	i = countTrailingZeros ( imm )		2661819	0		=			
ANR	2661863	Identifier	i		2661819	0					
ANR	2661864	CallExpression	countTrailingZeros ( imm )		2661819	1					
ANR	2661865	Callee	countTrailingZeros		2661819	0					
ANR	2661866	Identifier	countTrailingZeros		2661819	0					
ANR	2661867	ArgumentList	imm		2661819	1					
ANR	2661868	Argument	imm		2661819	0					
ANR	2661869	Identifier	imm		2661819	0					
ANR	2661870	ExpressionStatement	cto = countTrailingOnes ( imm >> i )	148:2:2579:2613	2661819	1	True				
ANR	2661871	AssignmentExpression	cto = countTrailingOnes ( imm >> i )		2661819	0		=			
ANR	2661872	Identifier	cto		2661819	0					
ANR	2661873	CallExpression	countTrailingOnes ( imm >> i )		2661819	1					
ANR	2661874	Callee	countTrailingOnes		2661819	0					
ANR	2661875	Identifier	countTrailingOnes		2661819	0					
ANR	2661876	ArgumentList	imm >> i		2661819	1					
ANR	2661877	Argument	imm >> i		2661819	0					
ANR	2661878	ShiftExpression	imm >> i		2661819	0		>>			
ANR	2661879	Identifier	imm		2661819	0					
ANR	2661880	Identifier	i		2661819	1					
ANR	2661881	ElseStatement	else		2661819	0					
ANR	2661882	CompoundStatement		17:2:323:356	2661819	0					
ANR	2661883	ExpressionStatement	imm |= ~mask	150:2:2627:2639	2661819	0	True				
ANR	2661884	AssignmentExpression	imm |= ~mask		2661819	0		|=			
ANR	2661885	Identifier	imm		2661819	0					
ANR	2661886	Identifier	~mask		2661819	1					
ANR	2661887	IfStatement	if ( ! isShiftedMask ( imm ) )		2661819	1					
ANR	2661888	Condition	! isShiftedMask ( imm )	151:6:2647:2666	2661819	0	True				
ANR	2661889	UnaryOperationExpression	! isShiftedMask ( imm )		2661819	0					
ANR	2661890	UnaryOperator	!		2661819	0					
ANR	2661891	CallExpression	isShiftedMask ( imm )		2661819	1					
ANR	2661892	Callee	isShiftedMask		2661819	0					
ANR	2661893	Identifier	isShiftedMask		2661819	0					
ANR	2661894	ArgumentList	imm		2661819	1					
ANR	2661895	Argument	imm		2661819	0					
ANR	2661896	Identifier	imm		2661819	0					
ANR	2661897	CompoundStatement		13:28:294:294	2661819	1					
ANR	2661898	ReturnStatement	return UT32_MAX ;	152:3:2674:2689	2661819	0	True				
ANR	2661899	Identifier	UT32_MAX		2661819	0					
ANR	2661900	IdentifierDeclStatement	ut32 clo = countLeadingOnes ( imm ) ;	155:2:2698:2731	2661819	2	True				
ANR	2661901	IdentifierDecl	clo = countLeadingOnes ( imm )		2661819	0					
ANR	2661902	IdentifierDeclType	ut32		2661819	0					
ANR	2661903	Identifier	clo		2661819	1					
ANR	2661904	AssignmentExpression	clo = countLeadingOnes ( imm )		2661819	2		=			
ANR	2661905	Identifier	clo		2661819	0					
ANR	2661906	CallExpression	countLeadingOnes ( imm )		2661819	1					
ANR	2661907	Callee	countLeadingOnes		2661819	0					
ANR	2661908	Identifier	countLeadingOnes		2661819	0					
ANR	2661909	ArgumentList	imm		2661819	1					
ANR	2661910	Argument	imm		2661819	0					
ANR	2661911	Identifier	imm		2661819	0					
ANR	2661912	ExpressionStatement	i = 64 - clo	156:2:2735:2747	2661819	3	True				
ANR	2661913	AssignmentExpression	i = 64 - clo		2661819	0		=			
ANR	2661914	Identifier	i		2661819	0					
ANR	2661915	AdditiveExpression	64 - clo		2661819	1		-			
ANR	2661916	PrimaryExpression	64		2661819	0					
ANR	2661917	Identifier	clo		2661819	1					
ANR	2661918	ExpressionStatement	cto = clo + countTrailingOnes ( imm ) - ( 64 - size )	157:2:2751:2800	2661819	4	True				
ANR	2661919	AssignmentExpression	cto = clo + countTrailingOnes ( imm ) - ( 64 - size )		2661819	0		=			
ANR	2661920	Identifier	cto		2661819	0					
ANR	2661921	AdditiveExpression	clo + countTrailingOnes ( imm ) - ( 64 - size )		2661819	1		+			
ANR	2661922	Identifier	clo		2661819	0					
ANR	2661923	AdditiveExpression	countTrailingOnes ( imm ) - ( 64 - size )		2661819	1		-			
ANR	2661924	CallExpression	countTrailingOnes ( imm )		2661819	0					
ANR	2661925	Callee	countTrailingOnes		2661819	0					
ANR	2661926	Identifier	countTrailingOnes		2661819	0					
ANR	2661927	ArgumentList	imm		2661819	1					
ANR	2661928	Argument	imm		2661819	0					
ANR	2661929	Identifier	imm		2661819	0					
ANR	2661930	AdditiveExpression	64 - size		2661819	1		-			
ANR	2661931	PrimaryExpression	64		2661819	0					
ANR	2661932	Identifier	size		2661819	1					
ANR	2661933	IdentifierDeclStatement	ut32 immr = ( size - i ) & ( size - 1 ) ;	163:1:2969:3004	2661819	16	True				
ANR	2661934	IdentifierDecl	immr = ( size - i ) & ( size - 1 )		2661819	0					
ANR	2661935	IdentifierDeclType	ut32		2661819	0					
ANR	2661936	Identifier	immr		2661819	1					
ANR	2661937	AssignmentExpression	immr = ( size - i ) & ( size - 1 )		2661819	2		=			
ANR	2661938	Identifier	immr		2661819	0					
ANR	2661939	BitAndExpression	( size - i ) & ( size - 1 )		2661819	1		&			
ANR	2661940	AdditiveExpression	size - i		2661819	0		-			
ANR	2661941	Identifier	size		2661819	0					
ANR	2661942	Identifier	i		2661819	1					
ANR	2661943	AdditiveExpression	size - 1		2661819	1		-			
ANR	2661944	Identifier	size		2661819	0					
ANR	2661945	PrimaryExpression	1		2661819	1					
ANR	2661946	IdentifierDeclStatement	ut64 nimms = ~ ( size - 1 ) << 1 ;	166:1:3115:3144	2661819	17	True				
ANR	2661947	IdentifierDecl	nimms = ~ ( size - 1 ) << 1		2661819	0					
ANR	2661948	IdentifierDeclType	ut64		2661819	0					
ANR	2661949	Identifier	nimms		2661819	1					
ANR	2661950	AssignmentExpression	nimms = ~ ( size - 1 ) << 1		2661819	2		=			
ANR	2661951	Identifier	nimms		2661819	0					
ANR	2661952	ShiftExpression	~ ( size - 1 ) << 1		2661819	1		<<			
ANR	2661953	UnaryOperationExpression	~ ( size - 1 )		2661819	0					
ANR	2661954	UnaryOperator	~		2661819	0					
ANR	2661955	AdditiveExpression	size - 1		2661819	1		-			
ANR	2661956	Identifier	size		2661819	0					
ANR	2661957	PrimaryExpression	1		2661819	1					
ANR	2661958	PrimaryExpression	1		2661819	1					
ANR	2661959	ExpressionStatement	nimms |= ( cto - 1 )	169:1:3244:3262	2661819	18	True				
ANR	2661960	AssignmentExpression	nimms |= ( cto - 1 )		2661819	0		|=			
ANR	2661961	Identifier	nimms		2661819	0					
ANR	2661962	AdditiveExpression	cto - 1		2661819	1		-			
ANR	2661963	Identifier	cto		2661819	0					
ANR	2661964	PrimaryExpression	1		2661819	1					
ANR	2661965	IdentifierDeclStatement	ut32 n = ( ( nimms >> 6 ) & 1 ) ^ 1 ;	171:1:3317:3348	2661819	19	True				
ANR	2661966	IdentifierDecl	n = ( ( nimms >> 6 ) & 1 ) ^ 1		2661819	0					
ANR	2661967	IdentifierDeclType	ut32		2661819	0					
ANR	2661968	Identifier	n		2661819	1					
ANR	2661969	AssignmentExpression	n = ( ( nimms >> 6 ) & 1 ) ^ 1		2661819	2		=			
ANR	2661970	Identifier	n		2661819	0					
ANR	2661971	ExclusiveOrExpression	( ( nimms >> 6 ) & 1 ) ^ 1		2661819	1		^			
ANR	2661972	BitAndExpression	( nimms >> 6 ) & 1		2661819	0		&			
ANR	2661973	ShiftExpression	nimms >> 6		2661819	0		>>			
ANR	2661974	Identifier	nimms		2661819	0					
ANR	2661975	PrimaryExpression	6		2661819	1					
ANR	2661976	PrimaryExpression	1		2661819	1					
ANR	2661977	PrimaryExpression	1		2661819	1					
ANR	2661978	IdentifierDeclStatement	ut64 encoding = ( n << 12 ) | ( immr << 6 ) | ( nimms & 0x3f ) ;	172:1:3351:3407	2661819	20	True				
ANR	2661979	IdentifierDecl	encoding = ( n << 12 ) | ( immr << 6 ) | ( nimms & 0x3f )		2661819	0					
ANR	2661980	IdentifierDeclType	ut64		2661819	0					
ANR	2661981	Identifier	encoding		2661819	1					
ANR	2661982	AssignmentExpression	encoding = ( n << 12 ) | ( immr << 6 ) | ( nimms & 0x3f )		2661819	2		=			
ANR	2661983	Identifier	encoding		2661819	0					
ANR	2661984	InclusiveOrExpression	( n << 12 ) | ( immr << 6 ) | ( nimms & 0x3f )		2661819	1		|			
ANR	2661985	ShiftExpression	n << 12		2661819	0		<<			
ANR	2661986	Identifier	n		2661819	0					
ANR	2661987	PrimaryExpression	12		2661819	1					
ANR	2661988	InclusiveOrExpression	( immr << 6 ) | ( nimms & 0x3f )		2661819	1		|			
ANR	2661989	ShiftExpression	immr << 6		2661819	0		<<			
ANR	2661990	Identifier	immr		2661819	0					
ANR	2661991	PrimaryExpression	6		2661819	1					
ANR	2661992	BitAndExpression	nimms & 0x3f		2661819	1		&			
ANR	2661993	Identifier	nimms		2661819	0					
ANR	2661994	PrimaryExpression	0x3f		2661819	1					
ANR	2661995	ReturnStatement	return encoding ;	173:1:3410:3425	2661819	21	True				
ANR	2661996	Identifier	encoding		2661819	0					
ANR	2661997	ReturnType	static ut32		2661819	1					
ANR	2661998	Identifier	decodeBitMasks		2661819	2					
ANR	2661999	ParameterList	ut32 imm		2661819	3					
ANR	2662000	Parameter	ut32 imm	139:27:2364:2371	2661819	0	True				
ANR	2662001	ParameterType	ut32		2661819	0					
ANR	2662002	Identifier	imm		2661819	1					
ANR	2662003	CFGEntryNode	ENTRY		2661819		True				
ANR	2662004	CFGExitNode	EXIT		2661819		True				
ANR	2662005	Symbol	UT32_MAX		2661819						
ANR	2662006	Symbol	isShiftedMask		2661819						
ANR	2662007	Symbol	countTrailingOnes		2661819						
ANR	2662008	Symbol	clo		2661819						
ANR	2662009	Symbol	nimms		2661819						
ANR	2662010	Symbol	imm		2661819						
ANR	2662011	Symbol	~mask		2661819						
ANR	2662012	Symbol	i		2661819						
ANR	2662013	Symbol	encoding		2661819						
ANR	2662014	Symbol	n		2661819						
ANR	2662015	Symbol	countLeadingOnes		2661819						
ANR	2662016	Symbol	countTrailingZeros		2661819						
ANR	2662017	Symbol	size		2661819						
ANR	2662018	Symbol	immr		2661819						
ANR	2662019	Symbol	cto		2661819						
ANR	2662020	Function	mov	176:0:3430:4848							
ANR	2662021	FunctionDef	mov (ArmOp * op)		2662020	0					
ANR	2662022	CompoundStatement		176:27:3457:4848	2662020	0					
ANR	2662023	IdentifierDeclStatement	int k = 0 ;	177:1:3460:3469	2662020	0	True				
ANR	2662024	IdentifierDecl	k = 0		2662020	0					
ANR	2662025	IdentifierDeclType	int		2662020	0					
ANR	2662026	Identifier	k		2662020	1					
ANR	2662027	AssignmentExpression	k = 0		2662020	2		=			
ANR	2662028	Identifier	k		2662020	0					
ANR	2662029	PrimaryExpression	0		2662020	1					
ANR	2662030	IdentifierDeclStatement	ut32 data = UT32_MAX ;	178:1:3472:3492	2662020	1	True				
ANR	2662031	IdentifierDecl	data = UT32_MAX		2662020	0					
ANR	2662032	IdentifierDeclType	ut32		2662020	0					
ANR	2662033	Identifier	data		2662020	1					
ANR	2662034	AssignmentExpression	data = UT32_MAX		2662020	2		=			
ANR	2662035	Identifier	UT32_MAX		2662020	0					
ANR	2662036	Identifier	UT32_MAX		2662020	1					
ANR	2662037	IfStatement	"if ( ! strncmp ( op -> mnemonic , ""movz"" , 4 ) )"		2662020	2					
ANR	2662038	Condition	"! strncmp ( op -> mnemonic , ""movz"" , 4 )"	179:5:3499:3532	2662020	0	True				
ANR	2662039	UnaryOperationExpression	"! strncmp ( op -> mnemonic , ""movz"" , 4 )"		2662020	0					
ANR	2662040	UnaryOperator	!		2662020	0					
ANR	2662041	CallExpression	"strncmp ( op -> mnemonic , ""movz"" , 4 )"		2662020	1					
ANR	2662042	Callee	strncmp		2662020	0					
ANR	2662043	Identifier	strncmp		2662020	0					
ANR	2662044	ArgumentList	op -> mnemonic		2662020	1					
ANR	2662045	Argument	op -> mnemonic		2662020	0					
ANR	2662046	PtrMemberAccess	op -> mnemonic		2662020	0					
ANR	2662047	Identifier	op		2662020	0					
ANR	2662048	Identifier	mnemonic		2662020	1					
ANR	2662049	Argument	"""movz"""		2662020	1					
ANR	2662050	PrimaryExpression	"""movz"""		2662020	0					
ANR	2662051	Argument	4		2662020	2					
ANR	2662052	PrimaryExpression	4		2662020	0					
ANR	2662053	CompoundStatement		4:41:77:77	2662020	1					
ANR	2662054	IfStatement	if ( op -> operands [ 0 ] . reg_type & ARM_REG64 )		2662020	0					
ANR	2662055	Condition	op -> operands [ 0 ] . reg_type & ARM_REG64	180:6:3543:3578	2662020	0	True				
ANR	2662056	BitAndExpression	op -> operands [ 0 ] . reg_type & ARM_REG64		2662020	0		&			
ANR	2662057	MemberAccess	op -> operands [ 0 ] . reg_type		2662020	0					
ANR	2662058	ArrayIndexing	op -> operands [ 0 ]		2662020	0					
ANR	2662059	PtrMemberAccess	op -> operands		2662020	0					
ANR	2662060	Identifier	op		2662020	0					
ANR	2662061	Identifier	operands		2662020	1					
ANR	2662062	PrimaryExpression	0		2662020	1					
ANR	2662063	Identifier	reg_type		2662020	1					
ANR	2662064	Identifier	ARM_REG64		2662020	1					
ANR	2662065	CompoundStatement		5:44:123:123	2662020	1					
ANR	2662066	ExpressionStatement	k = 0x80d2	181:3:3586:3596	2662020	0	True				
ANR	2662067	AssignmentExpression	k = 0x80d2		2662020	0		=			
ANR	2662068	Identifier	k		2662020	0					
ANR	2662069	PrimaryExpression	0x80d2		2662020	1					
ANR	2662070	ElseStatement	else		2662020	0					
ANR	2662071	IfStatement	if ( op -> operands [ 0 ] . reg_type & ARM_REG32 )		2662020	0					
ANR	2662072	Condition	op -> operands [ 0 ] . reg_type & ARM_REG32	182:13:3611:3646	2662020	0	True				
ANR	2662073	BitAndExpression	op -> operands [ 0 ] . reg_type & ARM_REG32		2662020	0		&			
ANR	2662074	MemberAccess	op -> operands [ 0 ] . reg_type		2662020	0					
ANR	2662075	ArrayIndexing	op -> operands [ 0 ]		2662020	0					
ANR	2662076	PtrMemberAccess	op -> operands		2662020	0					
ANR	2662077	Identifier	op		2662020	0					
ANR	2662078	Identifier	operands		2662020	1					
ANR	2662079	PrimaryExpression	0		2662020	1					
ANR	2662080	Identifier	reg_type		2662020	1					
ANR	2662081	Identifier	ARM_REG32		2662020	1					
ANR	2662082	CompoundStatement		7:51:191:191	2662020	1					
ANR	2662083	ExpressionStatement	k = 0x8052	183:3:3654:3664	2662020	0	True				
ANR	2662084	AssignmentExpression	k = 0x8052		2662020	0		=			
ANR	2662085	Identifier	k		2662020	0					
ANR	2662086	PrimaryExpression	0x8052		2662020	1					
ANR	2662087	ElseStatement	else		2662020	0					
ANR	2662088	IfStatement	"if ( ! strncmp ( op -> mnemonic , ""movk"" , 4 ) )"		2662020	0					
ANR	2662089	Condition	"! strncmp ( op -> mnemonic , ""movk"" , 4 )"	185:12:3682:3715	2662020	0	True				
ANR	2662090	UnaryOperationExpression	"! strncmp ( op -> mnemonic , ""movk"" , 4 )"		2662020	0					
ANR	2662091	UnaryOperator	!		2662020	0					
ANR	2662092	CallExpression	"strncmp ( op -> mnemonic , ""movk"" , 4 )"		2662020	1					
ANR	2662093	Callee	strncmp		2662020	0					
ANR	2662094	Identifier	strncmp		2662020	0					
ANR	2662095	ArgumentList	op -> mnemonic		2662020	1					
ANR	2662096	Argument	op -> mnemonic		2662020	0					
ANR	2662097	PtrMemberAccess	op -> mnemonic		2662020	0					
ANR	2662098	Identifier	op		2662020	0					
ANR	2662099	Identifier	mnemonic		2662020	1					
ANR	2662100	Argument	"""movk"""		2662020	1					
ANR	2662101	PrimaryExpression	"""movk"""		2662020	0					
ANR	2662102	Argument	4		2662020	2					
ANR	2662103	PrimaryExpression	4		2662020	0					
ANR	2662104	CompoundStatement		10:48:260:260	2662020	1					
ANR	2662105	IfStatement	if ( op -> operands [ 0 ] . reg_type & ARM_REG32 )		2662020	0					
ANR	2662106	Condition	op -> operands [ 0 ] . reg_type & ARM_REG32	186:6:3726:3761	2662020	0	True				
ANR	2662107	BitAndExpression	op -> operands [ 0 ] . reg_type & ARM_REG32		2662020	0		&			
ANR	2662108	MemberAccess	op -> operands [ 0 ] . reg_type		2662020	0					
ANR	2662109	ArrayIndexing	op -> operands [ 0 ]		2662020	0					
ANR	2662110	PtrMemberAccess	op -> operands		2662020	0					
ANR	2662111	Identifier	op		2662020	0					
ANR	2662112	Identifier	operands		2662020	1					
ANR	2662113	PrimaryExpression	0		2662020	1					
ANR	2662114	Identifier	reg_type		2662020	1					
ANR	2662115	Identifier	ARM_REG32		2662020	1					
ANR	2662116	CompoundStatement		11:44:306:306	2662020	1					
ANR	2662117	ExpressionStatement	k = 0x8072	187:3:3769:3779	2662020	0	True				
ANR	2662118	AssignmentExpression	k = 0x8072		2662020	0		=			
ANR	2662119	Identifier	k		2662020	0					
ANR	2662120	PrimaryExpression	0x8072		2662020	1					
ANR	2662121	ElseStatement	else		2662020	0					
ANR	2662122	IfStatement	if ( op -> operands [ 0 ] . reg_type & ARM_REG64 )		2662020	0					
ANR	2662123	Condition	op -> operands [ 0 ] . reg_type & ARM_REG64	188:13:3794:3829	2662020	0	True				
ANR	2662124	BitAndExpression	op -> operands [ 0 ] . reg_type & ARM_REG64		2662020	0		&			
ANR	2662125	MemberAccess	op -> operands [ 0 ] . reg_type		2662020	0					
ANR	2662126	ArrayIndexing	op -> operands [ 0 ]		2662020	0					
ANR	2662127	PtrMemberAccess	op -> operands		2662020	0					
ANR	2662128	Identifier	op		2662020	0					
ANR	2662129	Identifier	operands		2662020	1					
ANR	2662130	PrimaryExpression	0		2662020	1					
ANR	2662131	Identifier	reg_type		2662020	1					
ANR	2662132	Identifier	ARM_REG64		2662020	1					
ANR	2662133	CompoundStatement		13:51:374:374	2662020	1					
ANR	2662134	ExpressionStatement	k = 0x80f2	189:3:3837:3847	2662020	0	True				
ANR	2662135	AssignmentExpression	k = 0x80f2		2662020	0		=			
ANR	2662136	Identifier	k		2662020	0					
ANR	2662137	PrimaryExpression	0x80f2		2662020	1					
ANR	2662138	ElseStatement	else		2662020	0					
ANR	2662139	IfStatement	"if ( ! strncmp ( op -> mnemonic , ""movn"" , 4 ) )"		2662020	0					
ANR	2662140	Condition	"! strncmp ( op -> mnemonic , ""movn"" , 4 )"	191:12:3865:3898	2662020	0	True				
ANR	2662141	UnaryOperationExpression	"! strncmp ( op -> mnemonic , ""movn"" , 4 )"		2662020	0					
ANR	2662142	UnaryOperator	!		2662020	0					
ANR	2662143	CallExpression	"strncmp ( op -> mnemonic , ""movn"" , 4 )"		2662020	1					
ANR	2662144	Callee	strncmp		2662020	0					
ANR	2662145	Identifier	strncmp		2662020	0					
ANR	2662146	ArgumentList	op -> mnemonic		2662020	1					
ANR	2662147	Argument	op -> mnemonic		2662020	0					
ANR	2662148	PtrMemberAccess	op -> mnemonic		2662020	0					
ANR	2662149	Identifier	op		2662020	0					
ANR	2662150	Identifier	mnemonic		2662020	1					
ANR	2662151	Argument	"""movn"""		2662020	1					
ANR	2662152	PrimaryExpression	"""movn"""		2662020	0					
ANR	2662153	Argument	4		2662020	2					
ANR	2662154	PrimaryExpression	4		2662020	0					
ANR	2662155	CompoundStatement		16:48:443:443	2662020	1					
ANR	2662156	IfStatement	if ( op -> operands [ 0 ] . reg_type & ARM_REG32 )		2662020	0					
ANR	2662157	Condition	op -> operands [ 0 ] . reg_type & ARM_REG32	192:6:3909:3944	2662020	0	True				
ANR	2662158	BitAndExpression	op -> operands [ 0 ] . reg_type & ARM_REG32		2662020	0		&			
ANR	2662159	MemberAccess	op -> operands [ 0 ] . reg_type		2662020	0					
ANR	2662160	ArrayIndexing	op -> operands [ 0 ]		2662020	0					
ANR	2662161	PtrMemberAccess	op -> operands		2662020	0					
ANR	2662162	Identifier	op		2662020	0					
ANR	2662163	Identifier	operands		2662020	1					
ANR	2662164	PrimaryExpression	0		2662020	1					
ANR	2662165	Identifier	reg_type		2662020	1					
ANR	2662166	Identifier	ARM_REG32		2662020	1					
ANR	2662167	CompoundStatement		17:44:489:489	2662020	1					
ANR	2662168	ExpressionStatement	k = 0x8012	193:3:3952:3962	2662020	0	True				
ANR	2662169	AssignmentExpression	k = 0x8012		2662020	0		=			
ANR	2662170	Identifier	k		2662020	0					
ANR	2662171	PrimaryExpression	0x8012		2662020	1					
ANR	2662172	ElseStatement	else		2662020	0					
ANR	2662173	IfStatement	if ( op -> operands [ 0 ] . reg_type & ARM_REG64 )		2662020	0					
ANR	2662174	Condition	op -> operands [ 0 ] . reg_type & ARM_REG64	194:13:3977:4012	2662020	0	True				
ANR	2662175	BitAndExpression	op -> operands [ 0 ] . reg_type & ARM_REG64		2662020	0		&			
ANR	2662176	MemberAccess	op -> operands [ 0 ] . reg_type		2662020	0					
ANR	2662177	ArrayIndexing	op -> operands [ 0 ]		2662020	0					
ANR	2662178	PtrMemberAccess	op -> operands		2662020	0					
ANR	2662179	Identifier	op		2662020	0					
ANR	2662180	Identifier	operands		2662020	1					
ANR	2662181	PrimaryExpression	0		2662020	1					
ANR	2662182	Identifier	reg_type		2662020	1					
ANR	2662183	Identifier	ARM_REG64		2662020	1					
ANR	2662184	CompoundStatement		19:51:557:557	2662020	1					
ANR	2662185	ExpressionStatement	k = 0x8092	195:3:4020:4030	2662020	0	True				
ANR	2662186	AssignmentExpression	k = 0x8092		2662020	0		=			
ANR	2662187	Identifier	k		2662020	0					
ANR	2662188	PrimaryExpression	0x8092		2662020	1					
ANR	2662189	ElseStatement	else		2662020	0					
ANR	2662190	IfStatement	"if ( ! strncmp ( op -> mnemonic , ""mov"" , 3 ) )"		2662020	0					
ANR	2662191	Condition	"! strncmp ( op -> mnemonic , ""mov"" , 3 )"	197:12:4048:4080	2662020	0	True				
ANR	2662192	UnaryOperationExpression	"! strncmp ( op -> mnemonic , ""mov"" , 3 )"		2662020	0					
ANR	2662193	UnaryOperator	!		2662020	0					
ANR	2662194	CallExpression	"strncmp ( op -> mnemonic , ""mov"" , 3 )"		2662020	1					
ANR	2662195	Callee	strncmp		2662020	0					
ANR	2662196	Identifier	strncmp		2662020	0					
ANR	2662197	ArgumentList	op -> mnemonic		2662020	1					
ANR	2662198	Argument	op -> mnemonic		2662020	0					
ANR	2662199	PtrMemberAccess	op -> mnemonic		2662020	0					
ANR	2662200	Identifier	op		2662020	0					
ANR	2662201	Identifier	mnemonic		2662020	1					
ANR	2662202	Argument	"""mov"""		2662020	1					
ANR	2662203	PrimaryExpression	"""mov"""		2662020	0					
ANR	2662204	Argument	3		2662020	2					
ANR	2662205	PrimaryExpression	3		2662020	0					
ANR	2662206	CompoundStatement		22:47:625:625	2662020	1					
ANR	2662207	IfStatement	if ( op -> operands [ 0 ] . type & ARM_GPR )		2662020	0					
ANR	2662208	Condition	op -> operands [ 0 ] . type & ARM_GPR	199:6:4175:4204	2662020	0	True				
ANR	2662209	BitAndExpression	op -> operands [ 0 ] . type & ARM_GPR		2662020	0		&			
ANR	2662210	MemberAccess	op -> operands [ 0 ] . type		2662020	0					
ANR	2662211	ArrayIndexing	op -> operands [ 0 ]		2662020	0					
ANR	2662212	PtrMemberAccess	op -> operands		2662020	0					
ANR	2662213	Identifier	op		2662020	0					
ANR	2662214	Identifier	operands		2662020	1					
ANR	2662215	PrimaryExpression	0		2662020	1					
ANR	2662216	Identifier	type		2662020	1					
ANR	2662217	Identifier	ARM_GPR		2662020	1					
ANR	2662218	CompoundStatement		24:38:749:749	2662020	1					
ANR	2662219	IfStatement	if ( op -> operands [ 1 ] . type & ARM_GPR )		2662020	0					
ANR	2662220	Condition	op -> operands [ 1 ] . type & ARM_GPR	200:7:4216:4245	2662020	0	True				
ANR	2662221	BitAndExpression	op -> operands [ 1 ] . type & ARM_GPR		2662020	0		&			
ANR	2662222	MemberAccess	op -> operands [ 1 ] . type		2662020	0					
ANR	2662223	ArrayIndexing	op -> operands [ 1 ]		2662020	0					
ANR	2662224	PtrMemberAccess	op -> operands		2662020	0					
ANR	2662225	Identifier	op		2662020	0					
ANR	2662226	Identifier	operands		2662020	1					
ANR	2662227	PrimaryExpression	1		2662020	1					
ANR	2662228	Identifier	type		2662020	1					
ANR	2662229	Identifier	ARM_GPR		2662020	1					
ANR	2662230	CompoundStatement		25:39:790:790	2662020	1					
ANR	2662231	IfStatement	if ( op -> operands [ 1 ] . reg_type & ARM_REG64 )		2662020	0					
ANR	2662232	Condition	op -> operands [ 1 ] . reg_type & ARM_REG64	201:8:4258:4293	2662020	0	True				
ANR	2662233	BitAndExpression	op -> operands [ 1 ] . reg_type & ARM_REG64		2662020	0		&			
ANR	2662234	MemberAccess	op -> operands [ 1 ] . reg_type		2662020	0					
ANR	2662235	ArrayIndexing	op -> operands [ 1 ]		2662020	0					
ANR	2662236	PtrMemberAccess	op -> operands		2662020	0					
ANR	2662237	Identifier	op		2662020	0					
ANR	2662238	Identifier	operands		2662020	1					
ANR	2662239	PrimaryExpression	1		2662020	1					
ANR	2662240	Identifier	reg_type		2662020	1					
ANR	2662241	Identifier	ARM_REG64		2662020	1					
ANR	2662242	CompoundStatement		26:46:838:838	2662020	1					
ANR	2662243	ExpressionStatement	k = 0xe00300aa	202:5:4303:4317	2662020	0	True				
ANR	2662244	AssignmentExpression	k = 0xe00300aa		2662020	0		=			
ANR	2662245	Identifier	k		2662020	0					
ANR	2662246	PrimaryExpression	0xe00300aa		2662020	1					
ANR	2662247	ElseStatement	else		2662020	0					
ANR	2662248	CompoundStatement		28:11:872:872	2662020	0					
ANR	2662249	ExpressionStatement	k = 0xe003002a	204:5:4337:4351	2662020	0	True				
ANR	2662250	AssignmentExpression	k = 0xe003002a		2662020	0		=			
ANR	2662251	Identifier	k		2662020	0					
ANR	2662252	PrimaryExpression	0xe003002a		2662020	1					
ANR	2662253	ExpressionStatement	data = k | op -> operands [ 1 ] . reg << 8	206:4:4363:4398	2662020	1	True				
ANR	2662254	AssignmentExpression	data = k | op -> operands [ 1 ] . reg << 8		2662020	0		=			
ANR	2662255	Identifier	data		2662020	0					
ANR	2662256	InclusiveOrExpression	k | op -> operands [ 1 ] . reg << 8		2662020	1		|			
ANR	2662257	Identifier	k		2662020	0					
ANR	2662258	ShiftExpression	op -> operands [ 1 ] . reg << 8		2662020	1		<<			
ANR	2662259	MemberAccess	op -> operands [ 1 ] . reg		2662020	0					
ANR	2662260	ArrayIndexing	op -> operands [ 1 ]		2662020	0					
ANR	2662261	PtrMemberAccess	op -> operands		2662020	0					
ANR	2662262	Identifier	op		2662020	0					
ANR	2662263	Identifier	operands		2662020	1					
ANR	2662264	PrimaryExpression	1		2662020	1					
ANR	2662265	Identifier	reg		2662020	1					
ANR	2662266	PrimaryExpression	8		2662020	1					
ANR	2662267	ElseStatement	else		2662020	0					
ANR	2662268	IfStatement	if ( op -> operands [ 1 ] . type & ARM_CONSTANT )		2662020	0					
ANR	2662269	Condition	op -> operands [ 1 ] . type & ARM_CONSTANT	207:14:4414:4448	2662020	0	True				
ANR	2662270	BitAndExpression	op -> operands [ 1 ] . type & ARM_CONSTANT		2662020	0		&			
ANR	2662271	MemberAccess	op -> operands [ 1 ] . type		2662020	0					
ANR	2662272	ArrayIndexing	op -> operands [ 1 ]		2662020	0					
ANR	2662273	PtrMemberAccess	op -> operands		2662020	0					
ANR	2662274	Identifier	op		2662020	0					
ANR	2662275	Identifier	operands		2662020	1					
ANR	2662276	PrimaryExpression	1		2662020	1					
ANR	2662277	Identifier	type		2662020	1					
ANR	2662278	Identifier	ARM_CONSTANT		2662020	1					
ANR	2662279	CompoundStatement		32:51:993:993	2662020	1					
ANR	2662280	ExpressionStatement	k = 0x80d2	208:4:4457:4467	2662020	0	True				
ANR	2662281	AssignmentExpression	k = 0x80d2		2662020	0		=			
ANR	2662282	Identifier	k		2662020	0					
ANR	2662283	PrimaryExpression	0x80d2		2662020	1					
ANR	2662284	ExpressionStatement	data = k | op -> operands [ 1 ] . immediate << 29	209:4:4473:4515	2662020	1	True				
ANR	2662285	AssignmentExpression	data = k | op -> operands [ 1 ] . immediate << 29		2662020	0		=			
ANR	2662286	Identifier	data		2662020	0					
ANR	2662287	InclusiveOrExpression	k | op -> operands [ 1 ] . immediate << 29		2662020	1		|			
ANR	2662288	Identifier	k		2662020	0					
ANR	2662289	ShiftExpression	op -> operands [ 1 ] . immediate << 29		2662020	1		<<			
ANR	2662290	MemberAccess	op -> operands [ 1 ] . immediate		2662020	0					
ANR	2662291	ArrayIndexing	op -> operands [ 1 ]		2662020	0					
ANR	2662292	PtrMemberAccess	op -> operands		2662020	0					
ANR	2662293	Identifier	op		2662020	0					
ANR	2662294	Identifier	operands		2662020	1					
ANR	2662295	PrimaryExpression	1		2662020	1					
ANR	2662296	Identifier	immediate		2662020	1					
ANR	2662297	PrimaryExpression	29		2662020	1					
ANR	2662298	ExpressionStatement	data |= op -> operands [ 0 ] . reg << 24	211:3:4525:4559	2662020	1	True				
ANR	2662299	AssignmentExpression	data |= op -> operands [ 0 ] . reg << 24		2662020	0		|=			
ANR	2662300	Identifier	data		2662020	0					
ANR	2662301	ShiftExpression	op -> operands [ 0 ] . reg << 24		2662020	1		<<			
ANR	2662302	MemberAccess	op -> operands [ 0 ] . reg		2662020	0					
ANR	2662303	ArrayIndexing	op -> operands [ 0 ]		2662020	0					
ANR	2662304	PtrMemberAccess	op -> operands		2662020	0					
ANR	2662305	Identifier	op		2662020	0					
ANR	2662306	Identifier	operands		2662020	1					
ANR	2662307	PrimaryExpression	0		2662020	1					
ANR	2662308	Identifier	reg		2662020	1					
ANR	2662309	PrimaryExpression	24		2662020	1					
ANR	2662310	ReturnStatement	return data ;	213:2:4567:4578	2662020	1	True				
ANR	2662311	Identifier	data		2662020	0					
ANR	2662312	ExpressionStatement	data = k	216:1:4585:4593	2662020	3	True				
ANR	2662313	AssignmentExpression	data = k		2662020	0		=			
ANR	2662314	Identifier	data		2662020	0					
ANR	2662315	Identifier	k		2662020	1					
ANR	2662316	ExpressionStatement	data |= ( op -> operands [ 0 ] . reg << 24 )	217:1:4596:4631	2662020	4	True				
ANR	2662317	AssignmentExpression	data |= ( op -> operands [ 0 ] . reg << 24 )		2662020	0		|=			
ANR	2662318	Identifier	data		2662020	0					
ANR	2662319	ShiftExpression	op -> operands [ 0 ] . reg << 24		2662020	1		<<			
ANR	2662320	MemberAccess	op -> operands [ 0 ] . reg		2662020	0					
ANR	2662321	ArrayIndexing	op -> operands [ 0 ]		2662020	0					
ANR	2662322	PtrMemberAccess	op -> operands		2662020	0					
ANR	2662323	Identifier	op		2662020	0					
ANR	2662324	Identifier	operands		2662020	1					
ANR	2662325	PrimaryExpression	0		2662020	1					
ANR	2662326	Identifier	reg		2662020	1					
ANR	2662327	PrimaryExpression	24		2662020	1					
ANR	2662328	ExpressionStatement	data |= ( ( op -> operands [ 1 ] . immediate & 7 ) << 29 )	218:1:4644:4691	2662020	5	True				
ANR	2662329	AssignmentExpression	data |= ( ( op -> operands [ 1 ] . immediate & 7 ) << 29 )		2662020	0		|=			
ANR	2662330	Identifier	data		2662020	0					
ANR	2662331	ShiftExpression	( op -> operands [ 1 ] . immediate & 7 ) << 29		2662020	1		<<			
ANR	2662332	BitAndExpression	op -> operands [ 1 ] . immediate & 7		2662020	0		&			
ANR	2662333	MemberAccess	op -> operands [ 1 ] . immediate		2662020	0					
ANR	2662334	ArrayIndexing	op -> operands [ 1 ]		2662020	0					
ANR	2662335	PtrMemberAccess	op -> operands		2662020	0					
ANR	2662336	Identifier	op		2662020	0					
ANR	2662337	Identifier	operands		2662020	1					
ANR	2662338	PrimaryExpression	1		2662020	1					
ANR	2662339	Identifier	immediate		2662020	1					
ANR	2662340	PrimaryExpression	7		2662020	1					
ANR	2662341	PrimaryExpression	29		2662020	1					
ANR	2662342	ExpressionStatement	data |= ( ( ( op -> operands [ 1 ] . immediate >> 3 ) & 0xff ) << 16 )	219:1:4704:4761	2662020	6	True				
ANR	2662343	AssignmentExpression	data |= ( ( ( op -> operands [ 1 ] . immediate >> 3 ) & 0xff ) << 16 )		2662020	0		|=			
ANR	2662344	Identifier	data		2662020	0					
ANR	2662345	ShiftExpression	( ( op -> operands [ 1 ] . immediate >> 3 ) & 0xff ) << 16		2662020	1		<<			
ANR	2662346	BitAndExpression	( op -> operands [ 1 ] . immediate >> 3 ) & 0xff		2662020	0		&			
ANR	2662347	ShiftExpression	op -> operands [ 1 ] . immediate >> 3		2662020	0		>>			
ANR	2662348	MemberAccess	op -> operands [ 1 ] . immediate		2662020	0					
ANR	2662349	ArrayIndexing	op -> operands [ 1 ]		2662020	0					
ANR	2662350	PtrMemberAccess	op -> operands		2662020	0					
ANR	2662351	Identifier	op		2662020	0					
ANR	2662352	Identifier	operands		2662020	1					
ANR	2662353	PrimaryExpression	1		2662020	1					
ANR	2662354	Identifier	immediate		2662020	1					
ANR	2662355	PrimaryExpression	3		2662020	1					
ANR	2662356	PrimaryExpression	0xff		2662020	1					
ANR	2662357	PrimaryExpression	16		2662020	1					
ANR	2662358	ExpressionStatement	data |= ( ( op -> operands [ 1 ] . immediate >> 10 ) << 7 )	220:1:4774:4822	2662020	7	True				
ANR	2662359	AssignmentExpression	data |= ( ( op -> operands [ 1 ] . immediate >> 10 ) << 7 )		2662020	0		|=			
ANR	2662360	Identifier	data		2662020	0					
ANR	2662361	ShiftExpression	( op -> operands [ 1 ] . immediate >> 10 ) << 7		2662020	1		<<			
ANR	2662362	ShiftExpression	op -> operands [ 1 ] . immediate >> 10		2662020	0		>>			
ANR	2662363	MemberAccess	op -> operands [ 1 ] . immediate		2662020	0					
ANR	2662364	ArrayIndexing	op -> operands [ 1 ]		2662020	0					
ANR	2662365	PtrMemberAccess	op -> operands		2662020	0					
ANR	2662366	Identifier	op		2662020	0					
ANR	2662367	Identifier	operands		2662020	1					
ANR	2662368	PrimaryExpression	1		2662020	1					
ANR	2662369	Identifier	immediate		2662020	1					
ANR	2662370	PrimaryExpression	10		2662020	1					
ANR	2662371	PrimaryExpression	7		2662020	1					
ANR	2662372	ReturnStatement	return data ;	221:1:4835:4846	2662020	8	True				
ANR	2662373	Identifier	data		2662020	0					
ANR	2662374	ReturnType	static ut32		2662020	1					
ANR	2662375	Identifier	mov		2662020	2					
ANR	2662376	ParameterList	ArmOp * op		2662020	3					
ANR	2662377	Parameter	ArmOp * op	176:16:3446:3454	2662020	0	True				
ANR	2662378	ParameterType	ArmOp *		2662020	0					
ANR	2662379	Identifier	op		2662020	1					
ANR	2662380	CFGEntryNode	ENTRY		2662020		True				
ANR	2662381	CFGExitNode	EXIT		2662020		True				
ANR	2662382	Symbol	UT32_MAX		2662020						
ANR	2662383	Symbol	op		2662020						
ANR	2662384	Symbol	ARM_CONSTANT		2662020						
ANR	2662385	Symbol	data		2662020						
ANR	2662386	Symbol	* op		2662020						
ANR	2662387	Symbol	op -> operands [ 1 ] . reg		2662020						
ANR	2662388	Symbol	op -> mnemonic		2662020						
ANR	2662389	Symbol	op -> operands [ 1 ] . reg_type		2662020						
ANR	2662390	Symbol	op -> operands [ 1 ] . immediate		2662020						
ANR	2662391	Symbol	k		2662020						
ANR	2662392	Symbol	op -> operands [ 0 ] . reg_type		2662020						
ANR	2662393	Symbol	ARM_GPR		2662020						
ANR	2662394	Symbol	ARM_REG64		2662020						
ANR	2662395	Symbol	* * op		2662020						
ANR	2662396	Symbol	ARM_REG32		2662020						
ANR	2662397	Symbol	strncmp		2662020						
ANR	2662398	Symbol	* op -> operands		2662020						
ANR	2662399	Symbol	op -> operands [ 1 ] . type		2662020						
ANR	2662400	Symbol	op -> operands [ 0 ] . type		2662020						
ANR	2662401	Symbol	op -> operands [ 0 ] . reg		2662020						
ANR	2662402	Symbol	op -> operands		2662020						
ANR	2662403	Function	cmp	224:0:4851:5473							
ANR	2662404	FunctionDef	cmp (ArmOp * op)		2662403	0					
ANR	2662405	CompoundStatement		224:27:4878:5473	2662403	0					
ANR	2662406	IdentifierDeclStatement	ut32 data = UT32_MAX ;	225:1:4881:4901	2662403	0	True				
ANR	2662407	IdentifierDecl	data = UT32_MAX		2662403	0					
ANR	2662408	IdentifierDeclType	ut32		2662403	0					
ANR	2662409	Identifier	data		2662403	1					
ANR	2662410	AssignmentExpression	data = UT32_MAX		2662403	2		=			
ANR	2662411	Identifier	UT32_MAX		2662403	0					
ANR	2662412	Identifier	UT32_MAX		2662403	1					
ANR	2662413	IdentifierDeclStatement	int k = 0 ;	226:1:4904:4913	2662403	1	True				
ANR	2662414	IdentifierDecl	k = 0		2662403	0					
ANR	2662415	IdentifierDeclType	int		2662403	0					
ANR	2662416	Identifier	k		2662403	1					
ANR	2662417	AssignmentExpression	k = 0		2662403	2		=			
ANR	2662418	Identifier	k		2662403	0					
ANR	2662419	PrimaryExpression	0		2662403	1					
ANR	2662420	IfStatement	if ( op -> operands [ 0 ] . reg_type & ARM_REG64 && op -> operands [ 1 ] . reg_type & ARM_REG64 )		2662403	2					
ANR	2662421	Condition	op -> operands [ 0 ] . reg_type & ARM_REG64 && op -> operands [ 1 ] . reg_type & ARM_REG64	227:5:4920:4995	2662403	0	True				
ANR	2662422	AndExpression	op -> operands [ 0 ] . reg_type & ARM_REG64 && op -> operands [ 1 ] . reg_type & ARM_REG64		2662403	0		&&			
ANR	2662423	BitAndExpression	op -> operands [ 0 ] . reg_type & ARM_REG64		2662403	0		&			
ANR	2662424	MemberAccess	op -> operands [ 0 ] . reg_type		2662403	0					
ANR	2662425	ArrayIndexing	op -> operands [ 0 ]		2662403	0					
ANR	2662426	PtrMemberAccess	op -> operands		2662403	0					
ANR	2662427	Identifier	op		2662403	0					
ANR	2662428	Identifier	operands		2662403	1					
ANR	2662429	PrimaryExpression	0		2662403	1					
ANR	2662430	Identifier	reg_type		2662403	1					
ANR	2662431	Identifier	ARM_REG64		2662403	1					
ANR	2662432	BitAndExpression	op -> operands [ 1 ] . reg_type & ARM_REG64		2662403	1		&			
ANR	2662433	MemberAccess	op -> operands [ 1 ] . reg_type		2662403	0					
ANR	2662434	ArrayIndexing	op -> operands [ 1 ]		2662403	0					
ANR	2662435	PtrMemberAccess	op -> operands		2662403	0					
ANR	2662436	Identifier	op		2662403	0					
ANR	2662437	Identifier	operands		2662403	1					
ANR	2662438	PrimaryExpression	1		2662403	1					
ANR	2662439	Identifier	reg_type		2662403	1					
ANR	2662440	Identifier	ARM_REG64		2662403	1					
ANR	2662441	CompoundStatement		4:83:119:119	2662403	1					
ANR	2662442	ExpressionStatement	k = 0x1f0000eb	228:2:5002:5017	2662403	0	True				
ANR	2662443	AssignmentExpression	k = 0x1f0000eb		2662403	0		=			
ANR	2662444	Identifier	k		2662403	0					
ANR	2662445	PrimaryExpression	0x1f0000eb		2662403	1					
ANR	2662446	ElseStatement	else		2662403	0					
ANR	2662447	IfStatement	if ( op -> operands [ 0 ] . reg_type & ARM_REG32 && op -> operands [ 1 ] . reg_type & ARM_REG32 )		2662403	0					
ANR	2662448	Condition	op -> operands [ 0 ] . reg_type & ARM_REG32 && op -> operands [ 1 ] . reg_type & ARM_REG32	229:12:5031:5106	2662403	0	True				
ANR	2662449	AndExpression	op -> operands [ 0 ] . reg_type & ARM_REG32 && op -> operands [ 1 ] . reg_type & ARM_REG32		2662403	0		&&			
ANR	2662450	BitAndExpression	op -> operands [ 0 ] . reg_type & ARM_REG32		2662403	0		&			
ANR	2662451	MemberAccess	op -> operands [ 0 ] . reg_type		2662403	0					
ANR	2662452	ArrayIndexing	op -> operands [ 0 ]		2662403	0					
ANR	2662453	PtrMemberAccess	op -> operands		2662403	0					
ANR	2662454	Identifier	op		2662403	0					
ANR	2662455	Identifier	operands		2662403	1					
ANR	2662456	PrimaryExpression	0		2662403	1					
ANR	2662457	Identifier	reg_type		2662403	1					
ANR	2662458	Identifier	ARM_REG32		2662403	1					
ANR	2662459	BitAndExpression	op -> operands [ 1 ] . reg_type & ARM_REG32		2662403	1		&			
ANR	2662460	MemberAccess	op -> operands [ 1 ] . reg_type		2662403	0					
ANR	2662461	ArrayIndexing	op -> operands [ 1 ]		2662403	0					
ANR	2662462	PtrMemberAccess	op -> operands		2662403	0					
ANR	2662463	Identifier	op		2662403	0					
ANR	2662464	Identifier	operands		2662403	1					
ANR	2662465	PrimaryExpression	1		2662403	1					
ANR	2662466	Identifier	reg_type		2662403	1					
ANR	2662467	Identifier	ARM_REG32		2662403	1					
ANR	2662468	CompoundStatement		6:90:230:230	2662403	1					
ANR	2662469	IfStatement	if ( op -> operands [ 2 ] . shift_amount > 31 )		2662403	0					
ANR	2662470	Condition	op -> operands [ 2 ] . shift_amount > 31	230:6:5117:5149	2662403	0	True				
ANR	2662471	RelationalExpression	op -> operands [ 2 ] . shift_amount > 31		2662403	0		>			
ANR	2662472	MemberAccess	op -> operands [ 2 ] . shift_amount		2662403	0					
ANR	2662473	ArrayIndexing	op -> operands [ 2 ]		2662403	0					
ANR	2662474	PtrMemberAccess	op -> operands		2662403	0					
ANR	2662475	Identifier	op		2662403	0					
ANR	2662476	Identifier	operands		2662403	1					
ANR	2662477	PrimaryExpression	2		2662403	1					
ANR	2662478	Identifier	shift_amount		2662403	1					
ANR	2662479	PrimaryExpression	31		2662403	1					
ANR	2662480	CompoundStatement		7:41:273:273	2662403	1					
ANR	2662481	ReturnStatement	return UT32_MAX ;	231:3:5157:5172	2662403	0	True				
ANR	2662482	Identifier	UT32_MAX		2662403	0					
ANR	2662483	ExpressionStatement	k = 0x1f00006b	233:2:5180:5195	2662403	1	True				
ANR	2662484	AssignmentExpression	k = 0x1f00006b		2662403	0		=			
ANR	2662485	Identifier	k		2662403	0					
ANR	2662486	PrimaryExpression	0x1f00006b		2662403	1					
ANR	2662487	ElseStatement	else		2662403	0					
ANR	2662488	CompoundStatement		11:8:326:326	2662403	0					
ANR	2662489	ReturnStatement	return UT32_MAX ;	235:2:5209:5224	2662403	0	True				
ANR	2662490	Identifier	UT32_MAX		2662403	0					
ANR	2662491	ExpressionStatement	data = k | ( op -> operands [ 0 ] . reg & 0x18 ) << 13 | op -> operands [ 0 ] . reg << 29 | op -> operands [ 1 ] . reg << 8	238:1:5231:5331	2662403	3	True				
ANR	2662492	AssignmentExpression	data = k | ( op -> operands [ 0 ] . reg & 0x18 ) << 13 | op -> operands [ 0 ] . reg << 29 | op -> operands [ 1 ] . reg << 8		2662403	0		=			
ANR	2662493	Identifier	data		2662403	0					
ANR	2662494	InclusiveOrExpression	k | ( op -> operands [ 0 ] . reg & 0x18 ) << 13 | op -> operands [ 0 ] . reg << 29 | op -> operands [ 1 ] . reg << 8		2662403	1		|			
ANR	2662495	Identifier	k		2662403	0					
ANR	2662496	InclusiveOrExpression	( op -> operands [ 0 ] . reg & 0x18 ) << 13 | op -> operands [ 0 ] . reg << 29 | op -> operands [ 1 ] . reg << 8		2662403	1		|			
ANR	2662497	ShiftExpression	( op -> operands [ 0 ] . reg & 0x18 ) << 13		2662403	0		<<			
ANR	2662498	BitAndExpression	op -> operands [ 0 ] . reg & 0x18		2662403	0		&			
ANR	2662499	MemberAccess	op -> operands [ 0 ] . reg		2662403	0					
ANR	2662500	ArrayIndexing	op -> operands [ 0 ]		2662403	0					
ANR	2662501	PtrMemberAccess	op -> operands		2662403	0					
ANR	2662502	Identifier	op		2662403	0					
ANR	2662503	Identifier	operands		2662403	1					
ANR	2662504	PrimaryExpression	0		2662403	1					
ANR	2662505	Identifier	reg		2662403	1					
ANR	2662506	PrimaryExpression	0x18		2662403	1					
ANR	2662507	PrimaryExpression	13		2662403	1					
ANR	2662508	InclusiveOrExpression	op -> operands [ 0 ] . reg << 29 | op -> operands [ 1 ] . reg << 8		2662403	1		|			
ANR	2662509	ShiftExpression	op -> operands [ 0 ] . reg << 29		2662403	0		<<			
ANR	2662510	MemberAccess	op -> operands [ 0 ] . reg		2662403	0					
ANR	2662511	ArrayIndexing	op -> operands [ 0 ]		2662403	0					
ANR	2662512	PtrMemberAccess	op -> operands		2662403	0					
ANR	2662513	Identifier	op		2662403	0					
ANR	2662514	Identifier	operands		2662403	1					
ANR	2662515	PrimaryExpression	0		2662403	1					
ANR	2662516	Identifier	reg		2662403	1					
ANR	2662517	PrimaryExpression	29		2662403	1					
ANR	2662518	ShiftExpression	op -> operands [ 1 ] . reg << 8		2662403	1		<<			
ANR	2662519	MemberAccess	op -> operands [ 1 ] . reg		2662403	0					
ANR	2662520	ArrayIndexing	op -> operands [ 1 ]		2662403	0					
ANR	2662521	PtrMemberAccess	op -> operands		2662403	0					
ANR	2662522	Identifier	op		2662403	0					
ANR	2662523	Identifier	operands		2662403	1					
ANR	2662524	PrimaryExpression	1		2662403	1					
ANR	2662525	Identifier	reg		2662403	1					
ANR	2662526	PrimaryExpression	8		2662403	1					
ANR	2662527	IfStatement	if ( op -> operands [ 2 ] . shift != ARM_NO_SHIFT )		2662403	4					
ANR	2662528	Condition	op -> operands [ 2 ] . shift != ARM_NO_SHIFT	240:5:5339:5375	2662403	0	True				
ANR	2662529	EqualityExpression	op -> operands [ 2 ] . shift != ARM_NO_SHIFT		2662403	0		!=			
ANR	2662530	MemberAccess	op -> operands [ 2 ] . shift		2662403	0					
ANR	2662531	ArrayIndexing	op -> operands [ 2 ]		2662403	0					
ANR	2662532	PtrMemberAccess	op -> operands		2662403	0					
ANR	2662533	Identifier	op		2662403	0					
ANR	2662534	Identifier	operands		2662403	1					
ANR	2662535	PrimaryExpression	2		2662403	1					
ANR	2662536	Identifier	shift		2662403	1					
ANR	2662537	Identifier	ARM_NO_SHIFT		2662403	1					
ANR	2662538	CompoundStatement		17:44:499:499	2662403	1					
ANR	2662539	ExpressionStatement	data |= op -> operands [ 2 ] . shift_amount << 18 | op -> operands [ 2 ] . shift << 14	241:2:5382:5454	2662403	0	True				
ANR	2662540	AssignmentExpression	data |= op -> operands [ 2 ] . shift_amount << 18 | op -> operands [ 2 ] . shift << 14		2662403	0		|=			
ANR	2662541	Identifier	data		2662403	0					
ANR	2662542	InclusiveOrExpression	op -> operands [ 2 ] . shift_amount << 18 | op -> operands [ 2 ] . shift << 14		2662403	1		|			
ANR	2662543	ShiftExpression	op -> operands [ 2 ] . shift_amount << 18		2662403	0		<<			
ANR	2662544	MemberAccess	op -> operands [ 2 ] . shift_amount		2662403	0					
ANR	2662545	ArrayIndexing	op -> operands [ 2 ]		2662403	0					
ANR	2662546	PtrMemberAccess	op -> operands		2662403	0					
ANR	2662547	Identifier	op		2662403	0					
ANR	2662548	Identifier	operands		2662403	1					
ANR	2662549	PrimaryExpression	2		2662403	1					
ANR	2662550	Identifier	shift_amount		2662403	1					
ANR	2662551	PrimaryExpression	18		2662403	1					
ANR	2662552	ShiftExpression	op -> operands [ 2 ] . shift << 14		2662403	1		<<			
ANR	2662553	MemberAccess	op -> operands [ 2 ] . shift		2662403	0					
ANR	2662554	ArrayIndexing	op -> operands [ 2 ]		2662403	0					
ANR	2662555	PtrMemberAccess	op -> operands		2662403	0					
ANR	2662556	Identifier	op		2662403	0					
ANR	2662557	Identifier	operands		2662403	1					
ANR	2662558	PrimaryExpression	2		2662403	1					
ANR	2662559	Identifier	shift		2662403	1					
ANR	2662560	PrimaryExpression	14		2662403	1					
ANR	2662561	ReturnStatement	return data ;	243:1:5460:5471	2662403	5	True				
ANR	2662562	Identifier	data		2662403	0					
ANR	2662563	ReturnType	static ut32		2662403	1					
ANR	2662564	Identifier	cmp		2662403	2					
ANR	2662565	ParameterList	ArmOp * op		2662403	3					
ANR	2662566	Parameter	ArmOp * op	224:16:4867:4875	2662403	0	True				
ANR	2662567	ParameterType	ArmOp *		2662403	0					
ANR	2662568	Identifier	op		2662403	1					
ANR	2662569	CFGEntryNode	ENTRY		2662403		True				
ANR	2662570	CFGExitNode	EXIT		2662403		True				
ANR	2662571	Symbol	UT32_MAX		2662403						
ANR	2662572	Symbol	op		2662403						
ANR	2662573	Symbol	data		2662403						
ANR	2662574	Symbol	* op		2662403						
ANR	2662575	Symbol	op -> operands [ 1 ] . reg		2662403						
ANR	2662576	Symbol	op -> operands [ 1 ] . reg_type		2662403						
ANR	2662577	Symbol	k		2662403						
ANR	2662578	Symbol	op -> operands [ 0 ] . reg_type		2662403						
ANR	2662579	Symbol	* * op		2662403						
ANR	2662580	Symbol	ARM_REG64		2662403						
ANR	2662581	Symbol	op -> operands [ 2 ] . shift_amount		2662403						
ANR	2662582	Symbol	ARM_REG32		2662403						
ANR	2662583	Symbol	* op -> operands		2662403						
ANR	2662584	Symbol	op -> operands [ 2 ] . shift		2662403						
ANR	2662585	Symbol	ARM_NO_SHIFT		2662403						
ANR	2662586	Symbol	op -> operands [ 0 ] . reg		2662403						
ANR	2662587	Symbol	op -> operands		2662403						
ANR	2662588	Function	regsluop	247:0:5477:6299							
ANR	2662589	FunctionDef	"regsluop (ArmOp * op , int k)"		2662588	0					
ANR	2662590	CompoundStatement		247:39:5516:6299	2662588	0					
ANR	2662591	IdentifierDeclStatement	ut32 data = UT32_MAX ;	248:1:5519:5539	2662588	0	True				
ANR	2662592	IdentifierDecl	data = UT32_MAX		2662588	0					
ANR	2662593	IdentifierDeclType	ut32		2662588	0					
ANR	2662594	Identifier	data		2662588	1					
ANR	2662595	AssignmentExpression	data = UT32_MAX		2662588	2		=			
ANR	2662596	Identifier	UT32_MAX		2662588	0					
ANR	2662597	Identifier	UT32_MAX		2662588	1					
ANR	2662598	IfStatement	if ( op -> operands [ 1 ] . reg_type & ARM_REG32 )		2662588	1					
ANR	2662599	Condition	op -> operands [ 1 ] . reg_type & ARM_REG32	250:5:5547:5582	2662588	0	True				
ANR	2662600	BitAndExpression	op -> operands [ 1 ] . reg_type & ARM_REG32		2662588	0		&			
ANR	2662601	MemberAccess	op -> operands [ 1 ] . reg_type		2662588	0					
ANR	2662602	ArrayIndexing	op -> operands [ 1 ]		2662588	0					
ANR	2662603	PtrMemberAccess	op -> operands		2662588	0					
ANR	2662604	Identifier	op		2662588	0					
ANR	2662605	Identifier	operands		2662588	1					
ANR	2662606	PrimaryExpression	1		2662588	1					
ANR	2662607	Identifier	reg_type		2662588	1					
ANR	2662608	Identifier	ARM_REG32		2662588	1					
ANR	2662609	CompoundStatement		4:43:68:68	2662588	1					
ANR	2662610	ReturnStatement	return data ;	251:2:5589:5600	2662588	0	True				
ANR	2662611	Identifier	data		2662588	0					
ANR	2662612	IfStatement	if ( op -> operands [ 0 ] . reg_type & ARM_REG32 )		2662588	2					
ANR	2662613	Condition	op -> operands [ 0 ] . reg_type & ARM_REG32	253:5:5610:5645	2662588	0	True				
ANR	2662614	BitAndExpression	op -> operands [ 0 ] . reg_type & ARM_REG32		2662588	0		&			
ANR	2662615	MemberAccess	op -> operands [ 0 ] . reg_type		2662588	0					
ANR	2662616	ArrayIndexing	op -> operands [ 0 ]		2662588	0					
ANR	2662617	PtrMemberAccess	op -> operands		2662588	0					
ANR	2662618	Identifier	op		2662588	0					
ANR	2662619	Identifier	operands		2662588	1					
ANR	2662620	PrimaryExpression	0		2662588	1					
ANR	2662621	Identifier	reg_type		2662588	1					
ANR	2662622	Identifier	ARM_REG32		2662588	1					
ANR	2662623	CompoundStatement		7:43:131:131	2662588	1					
ANR	2662624	ExpressionStatement	k -= 0x40	254:2:5652:5661	2662588	0	True				
ANR	2662625	AssignmentExpression	k -= 0x40		2662588	0		-=			
ANR	2662626	Identifier	k		2662588	0					
ANR	2662627	PrimaryExpression	0x40		2662588	1					
ANR	2662628	IfStatement	if ( op -> operands [ 2 ] . type & ARM_GPR )		2662588	3					
ANR	2662629	Condition	op -> operands [ 2 ] . type & ARM_GPR	256:5:5671:5700	2662588	0	True				
ANR	2662630	BitAndExpression	op -> operands [ 2 ] . type & ARM_GPR		2662588	0		&			
ANR	2662631	MemberAccess	op -> operands [ 2 ] . type		2662588	0					
ANR	2662632	ArrayIndexing	op -> operands [ 2 ]		2662588	0					
ANR	2662633	PtrMemberAccess	op -> operands		2662588	0					
ANR	2662634	Identifier	op		2662588	0					
ANR	2662635	Identifier	operands		2662588	1					
ANR	2662636	PrimaryExpression	2		2662588	1					
ANR	2662637	Identifier	type		2662588	1					
ANR	2662638	Identifier	ARM_GPR		2662588	1					
ANR	2662639	CompoundStatement		10:37:186:186	2662588	1					
ANR	2662640	ReturnStatement	return data ;	257:2:5707:5718	2662588	0	True				
ANR	2662641	Identifier	data		2662588	0					
ANR	2662642	IdentifierDeclStatement	int n = op -> operands [ 2 ] . immediate ;	260:1:5725:5758	2662588	4	True				
ANR	2662643	IdentifierDecl	n = op -> operands [ 2 ] . immediate		2662588	0					
ANR	2662644	IdentifierDeclType	int		2662588	0					
ANR	2662645	Identifier	n		2662588	1					
ANR	2662646	AssignmentExpression	n = op -> operands [ 2 ] . immediate		2662588	2		=			
ANR	2662647	Identifier	n		2662588	0					
ANR	2662648	MemberAccess	op -> operands [ 2 ] . immediate		2662588	1					
ANR	2662649	ArrayIndexing	op -> operands [ 2 ]		2662588	0					
ANR	2662650	PtrMemberAccess	op -> operands		2662588	0					
ANR	2662651	Identifier	op		2662588	0					
ANR	2662652	Identifier	operands		2662588	1					
ANR	2662653	PrimaryExpression	2		2662588	1					
ANR	2662654	Identifier	immediate		2662588	1					
ANR	2662655	IfStatement	if ( n > 0xff || n < - 0x100 )		2662588	5					
ANR	2662656	Condition	n > 0xff || n < - 0x100	261:5:5765:5786	2662588	0	True				
ANR	2662657	OrExpression	n > 0xff || n < - 0x100		2662588	0		||			
ANR	2662658	RelationalExpression	n > 0xff		2662588	0		>			
ANR	2662659	Identifier	n		2662588	0					
ANR	2662660	PrimaryExpression	0xff		2662588	1					
ANR	2662661	RelationalExpression	n < - 0x100		2662588	1		<			
ANR	2662662	Identifier	n		2662588	0					
ANR	2662663	UnaryOperationExpression	- 0x100		2662588	1					
ANR	2662664	UnaryOperator	-		2662588	0					
ANR	2662665	PrimaryExpression	0x100		2662588	1					
ANR	2662666	CompoundStatement		15:29:272:272	2662588	1					
ANR	2662667	ReturnStatement	return data ;	262:2:5793:5804	2662588	0	True				
ANR	2662668	Identifier	data		2662588	0					
ANR	2662669	ExpressionStatement	data = k | op -> operands [ 0 ] . reg << 24 | op -> operands [ 1 ] . reg << 29 | ( op -> operands [ 1 ] . reg & 56 ) << 13	265:1:5811:5910	2662588	6	True				
ANR	2662670	AssignmentExpression	data = k | op -> operands [ 0 ] . reg << 24 | op -> operands [ 1 ] . reg << 29 | ( op -> operands [ 1 ] . reg & 56 ) << 13		2662588	0		=			
ANR	2662671	Identifier	data		2662588	0					
ANR	2662672	InclusiveOrExpression	k | op -> operands [ 0 ] . reg << 24 | op -> operands [ 1 ] . reg << 29 | ( op -> operands [ 1 ] . reg & 56 ) << 13		2662588	1		|			
ANR	2662673	Identifier	k		2662588	0					
ANR	2662674	InclusiveOrExpression	op -> operands [ 0 ] . reg << 24 | op -> operands [ 1 ] . reg << 29 | ( op -> operands [ 1 ] . reg & 56 ) << 13		2662588	1		|			
ANR	2662675	ShiftExpression	op -> operands [ 0 ] . reg << 24		2662588	0		<<			
ANR	2662676	MemberAccess	op -> operands [ 0 ] . reg		2662588	0					
ANR	2662677	ArrayIndexing	op -> operands [ 0 ]		2662588	0					
ANR	2662678	PtrMemberAccess	op -> operands		2662588	0					
ANR	2662679	Identifier	op		2662588	0					
ANR	2662680	Identifier	operands		2662588	1					
ANR	2662681	PrimaryExpression	0		2662588	1					
ANR	2662682	Identifier	reg		2662588	1					
ANR	2662683	PrimaryExpression	24		2662588	1					
ANR	2662684	InclusiveOrExpression	op -> operands [ 1 ] . reg << 29 | ( op -> operands [ 1 ] . reg & 56 ) << 13		2662588	1		|			
ANR	2662685	ShiftExpression	op -> operands [ 1 ] . reg << 29		2662588	0		<<			
ANR	2662686	MemberAccess	op -> operands [ 1 ] . reg		2662588	0					
ANR	2662687	ArrayIndexing	op -> operands [ 1 ]		2662588	0					
ANR	2662688	PtrMemberAccess	op -> operands		2662588	0					
ANR	2662689	Identifier	op		2662588	0					
ANR	2662690	Identifier	operands		2662588	1					
ANR	2662691	PrimaryExpression	1		2662588	1					
ANR	2662692	Identifier	reg		2662588	1					
ANR	2662693	PrimaryExpression	29		2662588	1					
ANR	2662694	ShiftExpression	( op -> operands [ 1 ] . reg & 56 ) << 13		2662588	1		<<			
ANR	2662695	BitAndExpression	op -> operands [ 1 ] . reg & 56		2662588	0		&			
ANR	2662696	MemberAccess	op -> operands [ 1 ] . reg		2662588	0					
ANR	2662697	ArrayIndexing	op -> operands [ 1 ]		2662588	0					
ANR	2662698	PtrMemberAccess	op -> operands		2662588	0					
ANR	2662699	Identifier	op		2662588	0					
ANR	2662700	Identifier	operands		2662588	1					
ANR	2662701	PrimaryExpression	1		2662588	1					
ANR	2662702	Identifier	reg		2662588	1					
ANR	2662703	PrimaryExpression	56		2662588	1					
ANR	2662704	PrimaryExpression	13		2662588	1					
ANR	2662705	IfStatement	if ( n < 0 )		2662588	7					
ANR	2662706	Condition	n < 0	267:5:5918:5922	2662588	0	True				
ANR	2662707	RelationalExpression	n < 0		2662588	0		<			
ANR	2662708	Identifier	n		2662588	0					
ANR	2662709	PrimaryExpression	0		2662588	1					
ANR	2662710	CompoundStatement		21:12:408:408	2662588	1					
ANR	2662711	ExpressionStatement	n *= - 1	268:2:5929:5936	2662588	0	True				
ANR	2662712	AssignmentExpression	n *= - 1		2662588	0		*=			
ANR	2662713	Identifier	n		2662588	0					
ANR	2662714	UnaryOperationExpression	- 1		2662588	1					
ANR	2662715	UnaryOperator	-		2662588	0					
ANR	2662716	PrimaryExpression	1		2662588	1					
ANR	2662717	ExpressionStatement	data |= ( 0xf & ( 0xf - ( n - 1 ) ) ) << 20	269:2:5940:5979	2662588	1	True				
ANR	2662718	AssignmentExpression	data |= ( 0xf & ( 0xf - ( n - 1 ) ) ) << 20		2662588	0		|=			
ANR	2662719	Identifier	data		2662588	0					
ANR	2662720	ShiftExpression	( 0xf & ( 0xf - ( n - 1 ) ) ) << 20		2662588	1		<<			
ANR	2662721	BitAndExpression	0xf & ( 0xf - ( n - 1 ) )		2662588	0		&			
ANR	2662722	PrimaryExpression	0xf		2662588	0					
ANR	2662723	AdditiveExpression	0xf - ( n - 1 )		2662588	1		-			
ANR	2662724	PrimaryExpression	0xf		2662588	0					
ANR	2662725	AdditiveExpression	n - 1		2662588	1		-			
ANR	2662726	Identifier	n		2662588	0					
ANR	2662727	PrimaryExpression	1		2662588	1					
ANR	2662728	PrimaryExpression	20		2662588	1					
ANR	2662729	IfStatement	if ( countTrailingZeros ( n ) > 3 )		2662588	2					
ANR	2662730	Condition	countTrailingZeros ( n ) > 3	271:6:5988:6012	2662588	0	True				
ANR	2662731	RelationalExpression	countTrailingZeros ( n ) > 3		2662588	0		>			
ANR	2662732	CallExpression	countTrailingZeros ( n )		2662588	0					
ANR	2662733	Callee	countTrailingZeros		2662588	0					
ANR	2662734	Identifier	countTrailingZeros		2662588	0					
ANR	2662735	ArgumentList	n		2662588	1					
ANR	2662736	Argument	n		2662588	0					
ANR	2662737	Identifier	n		2662588	0					
ANR	2662738	PrimaryExpression	3		2662588	1					
ANR	2662739	CompoundStatement		25:33:498:498	2662588	1					
ANR	2662740	ExpressionStatement	data |= ( 0x1f - ( ( n >> 4 ) - 1 ) ) << 8	272:3:6020:6056	2662588	0	True				
ANR	2662741	AssignmentExpression	data |= ( 0x1f - ( ( n >> 4 ) - 1 ) ) << 8		2662588	0		|=			
ANR	2662742	Identifier	data		2662588	0					
ANR	2662743	ShiftExpression	( 0x1f - ( ( n >> 4 ) - 1 ) ) << 8		2662588	1		<<			
ANR	2662744	AdditiveExpression	0x1f - ( ( n >> 4 ) - 1 )		2662588	0		-			
ANR	2662745	PrimaryExpression	0x1f		2662588	0					
ANR	2662746	AdditiveExpression	( n >> 4 ) - 1		2662588	1		-			
ANR	2662747	ShiftExpression	n >> 4		2662588	0		>>			
ANR	2662748	Identifier	n		2662588	0					
ANR	2662749	PrimaryExpression	4		2662588	1					
ANR	2662750	PrimaryExpression	1		2662588	1					
ANR	2662751	PrimaryExpression	8		2662588	1					
ANR	2662752	ElseStatement	else		2662588	0					
ANR	2662753	CompoundStatement		27:9:550:550	2662588	0					
ANR	2662754	ExpressionStatement	data |= ( 0x1f - ( n >> 4 ) ) << 8	274:3:6072:6102	2662588	0	True				
ANR	2662755	AssignmentExpression	data |= ( 0x1f - ( n >> 4 ) ) << 8		2662588	0		|=			
ANR	2662756	Identifier	data		2662588	0					
ANR	2662757	ShiftExpression	( 0x1f - ( n >> 4 ) ) << 8		2662588	1		<<			
ANR	2662758	AdditiveExpression	0x1f - ( n >> 4 )		2662588	0		-			
ANR	2662759	PrimaryExpression	0x1f		2662588	0					
ANR	2662760	ShiftExpression	n >> 4		2662588	1		>>			
ANR	2662761	Identifier	n		2662588	0					
ANR	2662762	PrimaryExpression	4		2662588	1					
ANR	2662763	PrimaryExpression	8		2662588	1					
ANR	2662764	ElseStatement	else		2662588	0					
ANR	2662765	CompoundStatement		30:8:599:599	2662588	0					
ANR	2662766	ExpressionStatement	data |= ( 0xf & ( n & 63 ) ) << 20	277:2:6120:6150	2662588	0	True				
ANR	2662767	AssignmentExpression	data |= ( 0xf & ( n & 63 ) ) << 20		2662588	0		|=			
ANR	2662768	Identifier	data		2662588	0					
ANR	2662769	ShiftExpression	( 0xf & ( n & 63 ) ) << 20		2662588	1		<<			
ANR	2662770	BitAndExpression	0xf & ( n & 63 )		2662588	0		&			
ANR	2662771	PrimaryExpression	0xf		2662588	0					
ANR	2662772	BitAndExpression	n & 63		2662588	1		&			
ANR	2662773	Identifier	n		2662588	0					
ANR	2662774	PrimaryExpression	63		2662588	1					
ANR	2662775	PrimaryExpression	20		2662588	1					
ANR	2662776	IfStatement	if ( countTrailingZeros ( n ) < 4 )		2662588	1					
ANR	2662777	Condition	countTrailingZeros ( n ) < 4	278:6:6158:6182	2662588	0	True				
ANR	2662778	RelationalExpression	countTrailingZeros ( n ) < 4		2662588	0		<			
ANR	2662779	CallExpression	countTrailingZeros ( n )		2662588	0					
ANR	2662780	Callee	countTrailingZeros		2662588	0					
ANR	2662781	Identifier	countTrailingZeros		2662588	0					
ANR	2662782	ArgumentList	n		2662588	1					
ANR	2662783	Argument	n		2662588	0					
ANR	2662784	Identifier	n		2662588	0					
ANR	2662785	PrimaryExpression	4		2662588	1					
ANR	2662786	CompoundStatement		32:33:668:668	2662588	1					
ANR	2662787	ExpressionStatement	data |= ( n >> 4 ) << 8	279:3:6190:6211	2662588	0	True				
ANR	2662788	AssignmentExpression	data |= ( n >> 4 ) << 8		2662588	0		|=			
ANR	2662789	Identifier	data		2662588	0					
ANR	2662790	ShiftExpression	( n >> 4 ) << 8		2662588	1		<<			
ANR	2662791	ShiftExpression	n >> 4		2662588	0		>>			
ANR	2662792	Identifier	n		2662588	0					
ANR	2662793	PrimaryExpression	4		2662588	1					
ANR	2662794	PrimaryExpression	8		2662588	1					
ANR	2662795	ElseStatement	else		2662588	0					
ANR	2662796	CompoundStatement		34:9:705:705	2662588	0					
ANR	2662797	ExpressionStatement	data |= ( 0xff & n ) << 4	281:3:6227:6250	2662588	0	True				
ANR	2662798	AssignmentExpression	data |= ( 0xff & n ) << 4		2662588	0		|=			
ANR	2662799	Identifier	data		2662588	0					
ANR	2662800	ShiftExpression	( 0xff & n ) << 4		2662588	1		<<			
ANR	2662801	BitAndExpression	0xff & n		2662588	0		&			
ANR	2662802	PrimaryExpression	0xff		2662588	0					
ANR	2662803	Identifier	n		2662588	1					
ANR	2662804	PrimaryExpression	4		2662588	1					
ANR	2662805	ExpressionStatement	data |= ( n >> 8 ) << 8	283:2:6258:6279	2662588	2	True				
ANR	2662806	AssignmentExpression	data |= ( n >> 8 ) << 8		2662588	0		|=			
ANR	2662807	Identifier	data		2662588	0					
ANR	2662808	ShiftExpression	( n >> 8 ) << 8		2662588	1		<<			
ANR	2662809	ShiftExpression	n >> 8		2662588	0		>>			
ANR	2662810	Identifier	n		2662588	0					
ANR	2662811	PrimaryExpression	8		2662588	1					
ANR	2662812	PrimaryExpression	8		2662588	1					
ANR	2662813	ReturnStatement	return data ;	286:1:6286:6297	2662588	8	True				
ANR	2662814	Identifier	data		2662588	0					
ANR	2662815	ReturnType	static ut32		2662588	1					
ANR	2662816	Identifier	regsluop		2662588	2					
ANR	2662817	ParameterList	"ArmOp * op , int k"		2662588	3					
ANR	2662818	Parameter	ArmOp * op	247:21:5498:5506	2662588	0	True				
ANR	2662819	ParameterType	ArmOp *		2662588	0					
ANR	2662820	Identifier	op		2662588	1					
ANR	2662821	Parameter	int k	247:32:5509:5513	2662588	1	True				
ANR	2662822	ParameterType	int		2662588	0					
ANR	2662823	Identifier	k		2662588	1					
ANR	2662824	CFGEntryNode	ENTRY		2662588		True				
ANR	2662825	CFGExitNode	EXIT		2662588		True				
ANR	2662826	Symbol	UT32_MAX		2662588						
ANR	2662827	Symbol	op -> operands [ 2 ] . immediate		2662588						
ANR	2662828	Symbol	op		2662588						
ANR	2662829	Symbol	data		2662588						
ANR	2662830	Symbol	* op		2662588						
ANR	2662831	Symbol	op -> operands [ 1 ] . reg		2662588						
ANR	2662832	Symbol	op -> operands [ 1 ] . reg_type		2662588						
ANR	2662833	Symbol	k		2662588						
ANR	2662834	Symbol	op -> operands [ 0 ] . reg_type		2662588						
ANR	2662835	Symbol	op -> operands [ 2 ] . type		2662588						
ANR	2662836	Symbol	ARM_GPR		2662588						
ANR	2662837	Symbol	n		2662588						
ANR	2662838	Symbol	* * op		2662588						
ANR	2662839	Symbol	ARM_REG32		2662588						
ANR	2662840	Symbol	* op -> operands		2662588						
ANR	2662841	Symbol	countTrailingZeros		2662588						
ANR	2662842	Symbol	op -> operands [ 0 ] . reg		2662588						
ANR	2662843	Symbol	op -> operands		2662588						
ANR	2662844	Function	reglsop	290:0:6329:7664							
ANR	2662845	FunctionDef	"reglsop (ArmOp * op , int k)"		2662844	0					
ANR	2662846	CompoundStatement		290:38:6367:7664	2662844	0					
ANR	2662847	IdentifierDeclStatement	ut32 data = UT32_MAX ;	291:1:6370:6390	2662844	0	True				
ANR	2662848	IdentifierDecl	data = UT32_MAX		2662844	0					
ANR	2662849	IdentifierDeclType	ut32		2662844	0					
ANR	2662850	Identifier	data		2662844	1					
ANR	2662851	AssignmentExpression	data = UT32_MAX		2662844	2		=			
ANR	2662852	Identifier	UT32_MAX		2662844	0					
ANR	2662853	Identifier	UT32_MAX		2662844	1					
ANR	2662854	IfStatement	if ( op -> operands [ 1 ] . reg_type & ARM_REG32 )		2662844	1					
ANR	2662855	Condition	op -> operands [ 1 ] . reg_type & ARM_REG32	293:5:6398:6433	2662844	0	True				
ANR	2662856	BitAndExpression	op -> operands [ 1 ] . reg_type & ARM_REG32		2662844	0		&			
ANR	2662857	MemberAccess	op -> operands [ 1 ] . reg_type		2662844	0					
ANR	2662858	ArrayIndexing	op -> operands [ 1 ]		2662844	0					
ANR	2662859	PtrMemberAccess	op -> operands		2662844	0					
ANR	2662860	Identifier	op		2662844	0					
ANR	2662861	Identifier	operands		2662844	1					
ANR	2662862	PrimaryExpression	1		2662844	1					
ANR	2662863	Identifier	reg_type		2662844	1					
ANR	2662864	Identifier	ARM_REG32		2662844	1					
ANR	2662865	CompoundStatement		4:43:68:68	2662844	1					
ANR	2662866	ReturnStatement	return data ;	294:2:6440:6451	2662844	0	True				
ANR	2662867	Identifier	data		2662844	0					
ANR	2662868	IfStatement	if ( op -> operands [ 0 ] . reg_type & ARM_REG32 )		2662844	2					
ANR	2662869	Condition	op -> operands [ 0 ] . reg_type & ARM_REG32	296:5:6461:6496	2662844	0	True				
ANR	2662870	BitAndExpression	op -> operands [ 0 ] . reg_type & ARM_REG32		2662844	0		&			
ANR	2662871	MemberAccess	op -> operands [ 0 ] . reg_type		2662844	0					
ANR	2662872	ArrayIndexing	op -> operands [ 0 ]		2662844	0					
ANR	2662873	PtrMemberAccess	op -> operands		2662844	0					
ANR	2662874	Identifier	op		2662844	0					
ANR	2662875	Identifier	operands		2662844	1					
ANR	2662876	PrimaryExpression	0		2662844	1					
ANR	2662877	Identifier	reg_type		2662844	1					
ANR	2662878	Identifier	ARM_REG32		2662844	1					
ANR	2662879	CompoundStatement		7:43:131:131	2662844	1					
ANR	2662880	ExpressionStatement	k -= 0x40	297:2:6503:6512	2662844	0	True				
ANR	2662881	AssignmentExpression	k -= 0x40		2662844	0		-=			
ANR	2662882	Identifier	k		2662844	0					
ANR	2662883	PrimaryExpression	0x40		2662844	1					
ANR	2662884	IfStatement	if ( op -> operands [ 2 ] . type & ARM_GPR )		2662844	3					
ANR	2662885	Condition	op -> operands [ 2 ] . type & ARM_GPR	299:5:6522:6551	2662844	0	True				
ANR	2662886	BitAndExpression	op -> operands [ 2 ] . type & ARM_GPR		2662844	0		&			
ANR	2662887	MemberAccess	op -> operands [ 2 ] . type		2662844	0					
ANR	2662888	ArrayIndexing	op -> operands [ 2 ]		2662844	0					
ANR	2662889	PtrMemberAccess	op -> operands		2662844	0					
ANR	2662890	Identifier	op		2662844	0					
ANR	2662891	Identifier	operands		2662844	1					
ANR	2662892	PrimaryExpression	2		2662844	1					
ANR	2662893	Identifier	type		2662844	1					
ANR	2662894	Identifier	ARM_GPR		2662844	1					
ANR	2662895	CompoundStatement		10:37:186:186	2662844	1					
ANR	2662896	ExpressionStatement	k += 0x00682000	300:2:6558:6573	2662844	0	True				
ANR	2662897	AssignmentExpression	k += 0x00682000		2662844	0		+=			
ANR	2662898	Identifier	k		2662844	0					
ANR	2662899	PrimaryExpression	0x00682000		2662844	1					
ANR	2662900	ExpressionStatement	data = k | op -> operands [ 0 ] . reg << 24 | op -> operands [ 1 ] . reg << 29 | ( op -> operands [ 1 ] . reg & 56 ) << 13	301:2:6577:6676	2662844	1	True				
ANR	2662901	AssignmentExpression	data = k | op -> operands [ 0 ] . reg << 24 | op -> operands [ 1 ] . reg << 29 | ( op -> operands [ 1 ] . reg & 56 ) << 13		2662844	0		=			
ANR	2662902	Identifier	data		2662844	0					
ANR	2662903	InclusiveOrExpression	k | op -> operands [ 0 ] . reg << 24 | op -> operands [ 1 ] . reg << 29 | ( op -> operands [ 1 ] . reg & 56 ) << 13		2662844	1		|			
ANR	2662904	Identifier	k		2662844	0					
ANR	2662905	InclusiveOrExpression	op -> operands [ 0 ] . reg << 24 | op -> operands [ 1 ] . reg << 29 | ( op -> operands [ 1 ] . reg & 56 ) << 13		2662844	1		|			
ANR	2662906	ShiftExpression	op -> operands [ 0 ] . reg << 24		2662844	0		<<			
ANR	2662907	MemberAccess	op -> operands [ 0 ] . reg		2662844	0					
ANR	2662908	ArrayIndexing	op -> operands [ 0 ]		2662844	0					
ANR	2662909	PtrMemberAccess	op -> operands		2662844	0					
ANR	2662910	Identifier	op		2662844	0					
ANR	2662911	Identifier	operands		2662844	1					
ANR	2662912	PrimaryExpression	0		2662844	1					
ANR	2662913	Identifier	reg		2662844	1					
ANR	2662914	PrimaryExpression	24		2662844	1					
ANR	2662915	InclusiveOrExpression	op -> operands [ 1 ] . reg << 29 | ( op -> operands [ 1 ] . reg & 56 ) << 13		2662844	1		|			
ANR	2662916	ShiftExpression	op -> operands [ 1 ] . reg << 29		2662844	0		<<			
ANR	2662917	MemberAccess	op -> operands [ 1 ] . reg		2662844	0					
ANR	2662918	ArrayIndexing	op -> operands [ 1 ]		2662844	0					
ANR	2662919	PtrMemberAccess	op -> operands		2662844	0					
ANR	2662920	Identifier	op		2662844	0					
ANR	2662921	Identifier	operands		2662844	1					
ANR	2662922	PrimaryExpression	1		2662844	1					
ANR	2662923	Identifier	reg		2662844	1					
ANR	2662924	PrimaryExpression	29		2662844	1					
ANR	2662925	ShiftExpression	( op -> operands [ 1 ] . reg & 56 ) << 13		2662844	1		<<			
ANR	2662926	BitAndExpression	op -> operands [ 1 ] . reg & 56		2662844	0		&			
ANR	2662927	MemberAccess	op -> operands [ 1 ] . reg		2662844	0					
ANR	2662928	ArrayIndexing	op -> operands [ 1 ]		2662844	0					
ANR	2662929	PtrMemberAccess	op -> operands		2662844	0					
ANR	2662930	Identifier	op		2662844	0					
ANR	2662931	Identifier	operands		2662844	1					
ANR	2662932	PrimaryExpression	1		2662844	1					
ANR	2662933	Identifier	reg		2662844	1					
ANR	2662934	PrimaryExpression	56		2662844	1					
ANR	2662935	PrimaryExpression	13		2662844	1					
ANR	2662936	ExpressionStatement	data |= op -> operands [ 2 ] . reg << 8	302:2:6680:6712	2662844	2	True				
ANR	2662937	AssignmentExpression	data |= op -> operands [ 2 ] . reg << 8		2662844	0		|=			
ANR	2662938	Identifier	data		2662844	0					
ANR	2662939	ShiftExpression	op -> operands [ 2 ] . reg << 8		2662844	1		<<			
ANR	2662940	MemberAccess	op -> operands [ 2 ] . reg		2662844	0					
ANR	2662941	ArrayIndexing	op -> operands [ 2 ]		2662844	0					
ANR	2662942	PtrMemberAccess	op -> operands		2662844	0					
ANR	2662943	Identifier	op		2662844	0					
ANR	2662944	Identifier	operands		2662844	1					
ANR	2662945	PrimaryExpression	2		2662844	1					
ANR	2662946	Identifier	reg		2662844	1					
ANR	2662947	PrimaryExpression	8		2662844	1					
ANR	2662948	ElseStatement	else		2662844	0					
ANR	2662949	CompoundStatement		15:2:358:391	2662844	0					
ANR	2662950	IdentifierDeclStatement	int n = op -> operands [ 2 ] . immediate ;	304:2:6726:6759	2662844	0	True				
ANR	2662951	IdentifierDecl	n = op -> operands [ 2 ] . immediate		2662844	0					
ANR	2662952	IdentifierDeclType	int		2662844	0					
ANR	2662953	Identifier	n		2662844	1					
ANR	2662954	AssignmentExpression	n = op -> operands [ 2 ] . immediate		2662844	2		=			
ANR	2662955	Identifier	n		2662844	0					
ANR	2662956	MemberAccess	op -> operands [ 2 ] . immediate		2662844	1					
ANR	2662957	ArrayIndexing	op -> operands [ 2 ]		2662844	0					
ANR	2662958	PtrMemberAccess	op -> operands		2662844	0					
ANR	2662959	Identifier	op		2662844	0					
ANR	2662960	Identifier	operands		2662844	1					
ANR	2662961	PrimaryExpression	2		2662844	1					
ANR	2662962	Identifier	immediate		2662844	1					
ANR	2662963	IfStatement	if ( n > 0x100 || n < - 0x100 )		2662844	1					
ANR	2662964	Condition	n > 0x100 || n < - 0x100	305:6:6767:6789	2662844	0	True				
ANR	2662965	OrExpression	n > 0x100 || n < - 0x100		2662844	0		||			
ANR	2662966	RelationalExpression	n > 0x100		2662844	0		>			
ANR	2662967	Identifier	n		2662844	0					
ANR	2662968	PrimaryExpression	0x100		2662844	1					
ANR	2662969	RelationalExpression	n < - 0x100		2662844	1		<			
ANR	2662970	Identifier	n		2662844	0					
ANR	2662971	UnaryOperationExpression	- 0x100		2662844	1					
ANR	2662972	UnaryOperator	-		2662844	0					
ANR	2662973	PrimaryExpression	0x100		2662844	1					
ANR	2662974	CompoundStatement		16:31:424:424	2662844	1					
ANR	2662975	ReturnStatement	return UT32_MAX ;	306:3:6797:6812	2662844	0	True				
ANR	2662976	Identifier	UT32_MAX		2662844	0					
ANR	2662977	IfStatement	if ( n == 0 || ( n > 0 && countTrailingZeros ( n ) >= 4 ) )		2662844	2					
ANR	2662978	Condition	n == 0 || ( n > 0 && countTrailingZeros ( n ) >= 4 )	309:6:6825:6871	2662844	0	True				
ANR	2662979	OrExpression	n == 0 || ( n > 0 && countTrailingZeros ( n ) >= 4 )		2662844	0		||			
ANR	2662980	EqualityExpression	n == 0		2662844	0		==			
ANR	2662981	Identifier	n		2662844	0					
ANR	2662982	PrimaryExpression	0		2662844	1					
ANR	2662983	AndExpression	n > 0 && countTrailingZeros ( n ) >= 4		2662844	1		&&			
ANR	2662984	RelationalExpression	n > 0		2662844	0		>			
ANR	2662985	Identifier	n		2662844	0					
ANR	2662986	PrimaryExpression	0		2662844	1					
ANR	2662987	RelationalExpression	countTrailingZeros ( n ) >= 4		2662844	1		>=			
ANR	2662988	CallExpression	countTrailingZeros ( n )		2662844	0					
ANR	2662989	Callee	countTrailingZeros		2662844	0					
ANR	2662990	Identifier	countTrailingZeros		2662844	0					
ANR	2662991	ArgumentList	n		2662844	1					
ANR	2662992	Argument	n		2662844	0					
ANR	2662993	Identifier	n		2662844	0					
ANR	2662994	PrimaryExpression	4		2662844	1					
ANR	2662995	CompoundStatement		20:55:506:506	2662844	1					
ANR	2662996	ExpressionStatement	k ++	310:3:6879:6883	2662844	0	True				
ANR	2662997	PostIncDecOperationExpression	k ++		2662844	0					
ANR	2662998	Identifier	k		2662844	0					
ANR	2662999	IncDec	++		2662844	1					
ANR	2663000	ExpressionStatement	data = k | op -> operands [ 0 ] . reg << 24 | op -> operands [ 1 ] . reg << 29 | ( op -> operands [ 1 ] . reg & 56 ) << 13	312:2:6891:6990	2662844	3	True				
ANR	2663001	AssignmentExpression	data = k | op -> operands [ 0 ] . reg << 24 | op -> operands [ 1 ] . reg << 29 | ( op -> operands [ 1 ] . reg & 56 ) << 13		2662844	0		=			
ANR	2663002	Identifier	data		2662844	0					
ANR	2663003	InclusiveOrExpression	k | op -> operands [ 0 ] . reg << 24 | op -> operands [ 1 ] . reg << 29 | ( op -> operands [ 1 ] . reg & 56 ) << 13		2662844	1		|			
ANR	2663004	Identifier	k		2662844	0					
ANR	2663005	InclusiveOrExpression	op -> operands [ 0 ] . reg << 24 | op -> operands [ 1 ] . reg << 29 | ( op -> operands [ 1 ] . reg & 56 ) << 13		2662844	1		|			
ANR	2663006	ShiftExpression	op -> operands [ 0 ] . reg << 24		2662844	0		<<			
ANR	2663007	MemberAccess	op -> operands [ 0 ] . reg		2662844	0					
ANR	2663008	ArrayIndexing	op -> operands [ 0 ]		2662844	0					
ANR	2663009	PtrMemberAccess	op -> operands		2662844	0					
ANR	2663010	Identifier	op		2662844	0					
ANR	2663011	Identifier	operands		2662844	1					
ANR	2663012	PrimaryExpression	0		2662844	1					
ANR	2663013	Identifier	reg		2662844	1					
ANR	2663014	PrimaryExpression	24		2662844	1					
ANR	2663015	InclusiveOrExpression	op -> operands [ 1 ] . reg << 29 | ( op -> operands [ 1 ] . reg & 56 ) << 13		2662844	1		|			
ANR	2663016	ShiftExpression	op -> operands [ 1 ] . reg << 29		2662844	0		<<			
ANR	2663017	MemberAccess	op -> operands [ 1 ] . reg		2662844	0					
ANR	2663018	ArrayIndexing	op -> operands [ 1 ]		2662844	0					
ANR	2663019	PtrMemberAccess	op -> operands		2662844	0					
ANR	2663020	Identifier	op		2662844	0					
ANR	2663021	Identifier	operands		2662844	1					
ANR	2663022	PrimaryExpression	1		2662844	1					
ANR	2663023	Identifier	reg		2662844	1					
ANR	2663024	PrimaryExpression	29		2662844	1					
ANR	2663025	ShiftExpression	( op -> operands [ 1 ] . reg & 56 ) << 13		2662844	1		<<			
ANR	2663026	BitAndExpression	op -> operands [ 1 ] . reg & 56		2662844	0		&			
ANR	2663027	MemberAccess	op -> operands [ 1 ] . reg		2662844	0					
ANR	2663028	ArrayIndexing	op -> operands [ 1 ]		2662844	0					
ANR	2663029	PtrMemberAccess	op -> operands		2662844	0					
ANR	2663030	Identifier	op		2662844	0					
ANR	2663031	Identifier	operands		2662844	1					
ANR	2663032	PrimaryExpression	1		2662844	1					
ANR	2663033	Identifier	reg		2662844	1					
ANR	2663034	PrimaryExpression	56		2662844	1					
ANR	2663035	PrimaryExpression	13		2662844	1					
ANR	2663036	IfStatement	if ( n < 0 )		2662844	4					
ANR	2663037	Condition	n < 0	314:6:6999:7003	2662844	0	True				
ANR	2663038	RelationalExpression	n < 0		2662844	0		<			
ANR	2663039	Identifier	n		2662844	0					
ANR	2663040	PrimaryExpression	0		2662844	1					
ANR	2663041	CompoundStatement		25:13:638:638	2662844	1					
ANR	2663042	ExpressionStatement	n *= - 1	315:3:7011:7018	2662844	0	True				
ANR	2663043	AssignmentExpression	n *= - 1		2662844	0		*=			
ANR	2663044	Identifier	n		2662844	0					
ANR	2663045	UnaryOperationExpression	- 1		2662844	1					
ANR	2663046	UnaryOperator	-		2662844	0					
ANR	2663047	PrimaryExpression	1		2662844	1					
ANR	2663048	ExpressionStatement	data |= ( 0xf & ( 0xf - ( n - 1 ) ) ) << 20	316:3:7023:7062	2662844	1	True				
ANR	2663049	AssignmentExpression	data |= ( 0xf & ( 0xf - ( n - 1 ) ) ) << 20		2662844	0		|=			
ANR	2663050	Identifier	data		2662844	0					
ANR	2663051	ShiftExpression	( 0xf & ( 0xf - ( n - 1 ) ) ) << 20		2662844	1		<<			
ANR	2663052	BitAndExpression	0xf & ( 0xf - ( n - 1 ) )		2662844	0		&			
ANR	2663053	PrimaryExpression	0xf		2662844	0					
ANR	2663054	AdditiveExpression	0xf - ( n - 1 )		2662844	1		-			
ANR	2663055	PrimaryExpression	0xf		2662844	0					
ANR	2663056	AdditiveExpression	n - 1		2662844	1		-			
ANR	2663057	Identifier	n		2662844	0					
ANR	2663058	PrimaryExpression	1		2662844	1					
ANR	2663059	PrimaryExpression	20		2662844	1					
ANR	2663060	IfStatement	if ( countTrailingZeros ( n ) > 3 )		2662844	2					
ANR	2663061	Condition	countTrailingZeros ( n ) > 3	317:7:7071:7095	2662844	0	True				
ANR	2663062	RelationalExpression	countTrailingZeros ( n ) > 3		2662844	0		>			
ANR	2663063	CallExpression	countTrailingZeros ( n )		2662844	0					
ANR	2663064	Callee	countTrailingZeros		2662844	0					
ANR	2663065	Identifier	countTrailingZeros		2662844	0					
ANR	2663066	ArgumentList	n		2662844	1					
ANR	2663067	Argument	n		2662844	0					
ANR	2663068	Identifier	n		2662844	0					
ANR	2663069	PrimaryExpression	3		2662844	1					
ANR	2663070	CompoundStatement		28:34:730:730	2662844	1					
ANR	2663071	ExpressionStatement	data |= ( 0x1f - ( ( n >> 4 ) - 1 ) ) << 8	318:4:7104:7140	2662844	0	True				
ANR	2663072	AssignmentExpression	data |= ( 0x1f - ( ( n >> 4 ) - 1 ) ) << 8		2662844	0		|=			
ANR	2663073	Identifier	data		2662844	0					
ANR	2663074	ShiftExpression	( 0x1f - ( ( n >> 4 ) - 1 ) ) << 8		2662844	1		<<			
ANR	2663075	AdditiveExpression	0x1f - ( ( n >> 4 ) - 1 )		2662844	0		-			
ANR	2663076	PrimaryExpression	0x1f		2662844	0					
ANR	2663077	AdditiveExpression	( n >> 4 ) - 1		2662844	1		-			
ANR	2663078	ShiftExpression	n >> 4		2662844	0		>>			
ANR	2663079	Identifier	n		2662844	0					
ANR	2663080	PrimaryExpression	4		2662844	1					
ANR	2663081	PrimaryExpression	1		2662844	1					
ANR	2663082	PrimaryExpression	8		2662844	1					
ANR	2663083	ElseStatement	else		2662844	0					
ANR	2663084	CompoundStatement		30:10:784:784	2662844	0					
ANR	2663085	ExpressionStatement	data |= ( 0x1f - ( n >> 4 ) ) << 8	320:4:7158:7188	2662844	0	True				
ANR	2663086	AssignmentExpression	data |= ( 0x1f - ( n >> 4 ) ) << 8		2662844	0		|=			
ANR	2663087	Identifier	data		2662844	0					
ANR	2663088	ShiftExpression	( 0x1f - ( n >> 4 ) ) << 8		2662844	1		<<			
ANR	2663089	AdditiveExpression	0x1f - ( n >> 4 )		2662844	0		-			
ANR	2663090	PrimaryExpression	0x1f		2662844	0					
ANR	2663091	ShiftExpression	n >> 4		2662844	1		>>			
ANR	2663092	Identifier	n		2662844	0					
ANR	2663093	PrimaryExpression	4		2662844	1					
ANR	2663094	PrimaryExpression	8		2662844	1					
ANR	2663095	ElseStatement	else		2662844	0					
ANR	2663096	CompoundStatement		33:9:836:836	2662844	0					
ANR	2663097	IfStatement	if ( op -> operands [ 0 ] . reg_type & ARM_REG32 )		2662844	0					
ANR	2663098	Condition	op -> operands [ 0 ] . reg_type & ARM_REG32	323:7:7213:7248	2662844	0	True				
ANR	2663099	BitAndExpression	op -> operands [ 0 ] . reg_type & ARM_REG32		2662844	0		&			
ANR	2663100	MemberAccess	op -> operands [ 0 ] . reg_type		2662844	0					
ANR	2663101	ArrayIndexing	op -> operands [ 0 ]		2662844	0					
ANR	2663102	PtrMemberAccess	op -> operands		2662844	0					
ANR	2663103	Identifier	op		2662844	0					
ANR	2663104	Identifier	operands		2662844	1					
ANR	2663105	PrimaryExpression	0		2662844	1					
ANR	2663106	Identifier	reg_type		2662844	1					
ANR	2663107	Identifier	ARM_REG32		2662844	1					
ANR	2663108	CompoundStatement		34:45:883:883	2662844	1					
ANR	2663109	IfStatement	if ( countTrailingZeros ( n ) < 2 )		2662844	0					
ANR	2663110	Condition	countTrailingZeros ( n ) < 2	324:8:7261:7285	2662844	0	True				
ANR	2663111	RelationalExpression	countTrailingZeros ( n ) < 2		2662844	0		<			
ANR	2663112	CallExpression	countTrailingZeros ( n )		2662844	0					
ANR	2663113	Callee	countTrailingZeros		2662844	0					
ANR	2663114	Identifier	countTrailingZeros		2662844	0					
ANR	2663115	ArgumentList	n		2662844	1					
ANR	2663116	Argument	n		2662844	0					
ANR	2663117	Identifier	n		2662844	0					
ANR	2663118	PrimaryExpression	2		2662844	1					
ANR	2663119	CompoundStatement		35:35:920:920	2662844	1					
ANR	2663120	ExpressionStatement	data |= ( 0xf & ( n & 63 ) ) << 20	325:5:7295:7325	2662844	0	True				
ANR	2663121	AssignmentExpression	data |= ( 0xf & ( n & 63 ) ) << 20		2662844	0		|=			
ANR	2663122	Identifier	data		2662844	0					
ANR	2663123	ShiftExpression	( 0xf & ( n & 63 ) ) << 20		2662844	1		<<			
ANR	2663124	BitAndExpression	0xf & ( n & 63 )		2662844	0		&			
ANR	2663125	PrimaryExpression	0xf		2662844	0					
ANR	2663126	BitAndExpression	n & 63		2662844	1		&			
ANR	2663127	Identifier	n		2662844	0					
ANR	2663128	PrimaryExpression	63		2662844	1					
ANR	2663129	PrimaryExpression	20		2662844	1					
ANR	2663130	ExpressionStatement	data |= ( n >> 4 ) << 8	326:5:7332:7353	2662844	1	True				
ANR	2663131	AssignmentExpression	data |= ( n >> 4 ) << 8		2662844	0		|=			
ANR	2663132	Identifier	data		2662844	0					
ANR	2663133	ShiftExpression	( n >> 4 ) << 8		2662844	1		<<			
ANR	2663134	ShiftExpression	n >> 4		2662844	0		>>			
ANR	2663135	Identifier	n		2662844	0					
ANR	2663136	PrimaryExpression	4		2662844	1					
ANR	2663137	PrimaryExpression	8		2662844	1					
ANR	2663138	ElseStatement	else		2662844	0					
ANR	2663139	CompoundStatement		38:11:998:998	2662844	0					
ANR	2663140	ExpressionStatement	data ++	328:6:7374:7380	2662844	0	True				
ANR	2663141	PostIncDecOperationExpression	data ++		2662844	0					
ANR	2663142	Identifier	data		2662844	0					
ANR	2663143	IncDec	++		2662844	1					
ANR	2663144	ExpressionStatement	data |= ( 0xff & n ) << 16	329:6:7388:7412	2662844	1	True				
ANR	2663145	AssignmentExpression	data |= ( 0xff & n ) << 16		2662844	0		|=			
ANR	2663146	Identifier	data		2662844	0					
ANR	2663147	ShiftExpression	( 0xff & n ) << 16		2662844	1		<<			
ANR	2663148	BitAndExpression	0xff & n		2662844	0		&			
ANR	2663149	PrimaryExpression	0xff		2662844	0					
ANR	2663150	Identifier	n		2662844	1					
ANR	2663151	PrimaryExpression	16		2662844	1					
ANR	2663152	ExpressionStatement	data |= ( n >> 8 ) << 8	331:4:7424:7445	2662844	1	True				
ANR	2663153	AssignmentExpression	data |= ( n >> 8 ) << 8		2662844	0		|=			
ANR	2663154	Identifier	data		2662844	0					
ANR	2663155	ShiftExpression	( n >> 8 ) << 8		2662844	1		<<			
ANR	2663156	ShiftExpression	n >> 8		2662844	0		>>			
ANR	2663157	Identifier	n		2662844	0					
ANR	2663158	PrimaryExpression	8		2662844	1					
ANR	2663159	PrimaryExpression	8		2662844	1					
ANR	2663160	ElseStatement	else		2662844	0					
ANR	2663161	CompoundStatement		43:10:1089:1089	2662844	0					
ANR	2663162	ExpressionStatement	data |= ( 0xf & ( n & 63 ) ) << 20	333:4:7463:7493	2662844	0	True				
ANR	2663163	AssignmentExpression	data |= ( 0xf & ( n & 63 ) ) << 20		2662844	0		|=			
ANR	2663164	Identifier	data		2662844	0					
ANR	2663165	ShiftExpression	( 0xf & ( n & 63 ) ) << 20		2662844	1		<<			
ANR	2663166	BitAndExpression	0xf & ( n & 63 )		2662844	0		&			
ANR	2663167	PrimaryExpression	0xf		2662844	0					
ANR	2663168	BitAndExpression	n & 63		2662844	1		&			
ANR	2663169	Identifier	n		2662844	0					
ANR	2663170	PrimaryExpression	63		2662844	1					
ANR	2663171	PrimaryExpression	20		2662844	1					
ANR	2663172	IfStatement	if ( countTrailingZeros ( n ) < 4 )		2662844	1					
ANR	2663173	Condition	countTrailingZeros ( n ) < 4	334:8:7503:7527	2662844	0	True				
ANR	2663174	RelationalExpression	countTrailingZeros ( n ) < 4		2662844	0		<			
ANR	2663175	CallExpression	countTrailingZeros ( n )		2662844	0					
ANR	2663176	Callee	countTrailingZeros		2662844	0					
ANR	2663177	Identifier	countTrailingZeros		2662844	0					
ANR	2663178	ArgumentList	n		2662844	1					
ANR	2663179	Argument	n		2662844	0					
ANR	2663180	Identifier	n		2662844	0					
ANR	2663181	PrimaryExpression	4		2662844	1					
ANR	2663182	CompoundStatement		45:35:1162:1162	2662844	1					
ANR	2663183	ExpressionStatement	data |= ( n >> 4 ) << 8	335:5:7537:7558	2662844	0	True				
ANR	2663184	AssignmentExpression	data |= ( n >> 4 ) << 8		2662844	0		|=			
ANR	2663185	Identifier	data		2662844	0					
ANR	2663186	ShiftExpression	( n >> 4 ) << 8		2662844	1		<<			
ANR	2663187	ShiftExpression	n >> 4		2662844	0		>>			
ANR	2663188	Identifier	n		2662844	0					
ANR	2663189	PrimaryExpression	4		2662844	1					
ANR	2663190	PrimaryExpression	8		2662844	1					
ANR	2663191	ElseStatement	else		2662844	0					
ANR	2663192	CompoundStatement		47:11:1203:1203	2662844	0					
ANR	2663193	ExpressionStatement	data |= ( 0xff & n ) << 15	337:5:7578:7602	2662844	0	True				
ANR	2663194	AssignmentExpression	data |= ( 0xff & n ) << 15		2662844	0		|=			
ANR	2663195	Identifier	data		2662844	0					
ANR	2663196	ShiftExpression	( 0xff & n ) << 15		2662844	1		<<			
ANR	2663197	BitAndExpression	0xff & n		2662844	0		&			
ANR	2663198	PrimaryExpression	0xff		2662844	0					
ANR	2663199	Identifier	n		2662844	1					
ANR	2663200	PrimaryExpression	15		2662844	1					
ANR	2663201	ExpressionStatement	data |= ( n >> 8 ) << 23	339:4:7614:7636	2662844	2	True				
ANR	2663202	AssignmentExpression	data |= ( n >> 8 ) << 23		2662844	0		|=			
ANR	2663203	Identifier	data		2662844	0					
ANR	2663204	ShiftExpression	( n >> 8 ) << 23		2662844	1		<<			
ANR	2663205	ShiftExpression	n >> 8		2662844	0		>>			
ANR	2663206	Identifier	n		2662844	0					
ANR	2663207	PrimaryExpression	8		2662844	1					
ANR	2663208	PrimaryExpression	23		2662844	1					
ANR	2663209	ReturnStatement	return data ;	343:1:7651:7662	2662844	4	True				
ANR	2663210	Identifier	data		2662844	0					
ANR	2663211	ReturnType	static ut32		2662844	1					
ANR	2663212	Identifier	reglsop		2662844	2					
ANR	2663213	ParameterList	"ArmOp * op , int k"		2662844	3					
ANR	2663214	Parameter	ArmOp * op	290:20:6349:6357	2662844	0	True				
ANR	2663215	ParameterType	ArmOp *		2662844	0					
ANR	2663216	Identifier	op		2662844	1					
ANR	2663217	Parameter	int k	290:31:6360:6364	2662844	1	True				
ANR	2663218	ParameterType	int		2662844	0					
ANR	2663219	Identifier	k		2662844	1					
ANR	2663220	CFGEntryNode	ENTRY		2662844		True				
ANR	2663221	CFGExitNode	EXIT		2662844		True				
ANR	2663222	Symbol	UT32_MAX		2662844						
ANR	2663223	Symbol	op -> operands [ 2 ] . reg		2662844						
ANR	2663224	Symbol	op -> operands [ 2 ] . immediate		2662844						
ANR	2663225	Symbol	op		2662844						
ANR	2663226	Symbol	data		2662844						
ANR	2663227	Symbol	* op		2662844						
ANR	2663228	Symbol	op -> operands [ 1 ] . reg		2662844						
ANR	2663229	Symbol	op -> operands [ 1 ] . reg_type		2662844						
ANR	2663230	Symbol	k		2662844						
ANR	2663231	Symbol	op -> operands [ 0 ] . reg_type		2662844						
ANR	2663232	Symbol	ARM_GPR		2662844						
ANR	2663233	Symbol	op -> operands [ 2 ] . type		2662844						
ANR	2663234	Symbol	n		2662844						
ANR	2663235	Symbol	* * op		2662844						
ANR	2663236	Symbol	ARM_REG32		2662844						
ANR	2663237	Symbol	* op -> operands		2662844						
ANR	2663238	Symbol	countTrailingZeros		2662844						
ANR	2663239	Symbol	op -> operands [ 0 ] . reg		2662844						
ANR	2663240	Symbol	op -> operands		2662844						
ANR	2663241	Function	bytelsop	347:0:7690:9182							
ANR	2663242	FunctionDef	"bytelsop (ArmOp * op , int k)"		2663241	0					
ANR	2663243	CompoundStatement		347:39:7729:9182	2663241	0					
ANR	2663244	IdentifierDeclStatement	ut32 data = UT32_MAX ;	348:1:7732:7752	2663241	0	True				
ANR	2663245	IdentifierDecl	data = UT32_MAX		2663241	0					
ANR	2663246	IdentifierDeclType	ut32		2663241	0					
ANR	2663247	Identifier	data		2663241	1					
ANR	2663248	AssignmentExpression	data = UT32_MAX		2663241	2		=			
ANR	2663249	Identifier	UT32_MAX		2663241	0					
ANR	2663250	Identifier	UT32_MAX		2663241	1					
ANR	2663251	IfStatement	if ( op -> operands [ 0 ] . reg_type & ARM_REG64 )		2663241	1					
ANR	2663252	Condition	op -> operands [ 0 ] . reg_type & ARM_REG64	350:5:7760:7795	2663241	0	True				
ANR	2663253	BitAndExpression	op -> operands [ 0 ] . reg_type & ARM_REG64		2663241	0		&			
ANR	2663254	MemberAccess	op -> operands [ 0 ] . reg_type		2663241	0					
ANR	2663255	ArrayIndexing	op -> operands [ 0 ]		2663241	0					
ANR	2663256	PtrMemberAccess	op -> operands		2663241	0					
ANR	2663257	Identifier	op		2663241	0					
ANR	2663258	Identifier	operands		2663241	1					
ANR	2663259	PrimaryExpression	0		2663241	1					
ANR	2663260	Identifier	reg_type		2663241	1					
ANR	2663261	Identifier	ARM_REG64		2663241	1					
ANR	2663262	CompoundStatement		4:43:68:68	2663241	1					
ANR	2663263	ReturnStatement	return data ;	351:2:7802:7813	2663241	0	True				
ANR	2663264	Identifier	data		2663241	0					
ANR	2663265	IfStatement	if ( op -> operands [ 1 ] . reg_type & ARM_REG32 )		2663241	2					
ANR	2663266	Condition	op -> operands [ 1 ] . reg_type & ARM_REG32	353:5:7823:7858	2663241	0	True				
ANR	2663267	BitAndExpression	op -> operands [ 1 ] . reg_type & ARM_REG32		2663241	0		&			
ANR	2663268	MemberAccess	op -> operands [ 1 ] . reg_type		2663241	0					
ANR	2663269	ArrayIndexing	op -> operands [ 1 ]		2663241	0					
ANR	2663270	PtrMemberAccess	op -> operands		2663241	0					
ANR	2663271	Identifier	op		2663241	0					
ANR	2663272	Identifier	operands		2663241	1					
ANR	2663273	PrimaryExpression	1		2663241	1					
ANR	2663274	Identifier	reg_type		2663241	1					
ANR	2663275	Identifier	ARM_REG32		2663241	1					
ANR	2663276	CompoundStatement		7:43:131:131	2663241	1					
ANR	2663277	ReturnStatement	return data ;	354:2:7865:7876	2663241	0	True				
ANR	2663278	Identifier	data		2663241	0					
ANR	2663279	IfStatement	if ( op -> operands [ 2 ] . type & ARM_GPR )		2663241	3					
ANR	2663280	Condition	op -> operands [ 2 ] . type & ARM_GPR	356:5:7886:7915	2663241	0	True				
ANR	2663281	BitAndExpression	op -> operands [ 2 ] . type & ARM_GPR		2663241	0		&			
ANR	2663282	MemberAccess	op -> operands [ 2 ] . type		2663241	0					
ANR	2663283	ArrayIndexing	op -> operands [ 2 ]		2663241	0					
ANR	2663284	PtrMemberAccess	op -> operands		2663241	0					
ANR	2663285	Identifier	op		2663241	0					
ANR	2663286	Identifier	operands		2663241	1					
ANR	2663287	PrimaryExpression	2		2663241	1					
ANR	2663288	Identifier	type		2663241	1					
ANR	2663289	Identifier	ARM_GPR		2663241	1					
ANR	2663290	CompoundStatement		10:37:188:188	2663241	1					
ANR	2663291	IfStatement	if ( ( k & 0xf ) != 8 )		2663241	0					
ANR	2663292	Condition	( k & 0xf ) != 8	357:6:7926:7939	2663241	0	True				
ANR	2663293	EqualityExpression	( k & 0xf ) != 8		2663241	0		!=			
ANR	2663294	BitAndExpression	k & 0xf		2663241	0		&			
ANR	2663295	Identifier	k		2663241	0					
ANR	2663296	PrimaryExpression	0xf		2663241	1					
ANR	2663297	PrimaryExpression	8		2663241	1					
ANR	2663298	CompoundStatement		11:22:212:212	2663241	1					
ANR	2663299	ExpressionStatement	k --	358:3:7947:7950	2663241	0	True				
ANR	2663300	PostIncDecOperationExpression	k --		2663241	0					
ANR	2663301	Identifier	k		2663241	0					
ANR	2663302	IncDec	--		2663241	1					
ANR	2663303	ExpressionStatement	k += 0x00682000	360:2:7958:7973	2663241	1	True				
ANR	2663304	AssignmentExpression	k += 0x00682000		2663241	0		+=			
ANR	2663305	Identifier	k		2663241	0					
ANR	2663306	PrimaryExpression	0x00682000		2663241	1					
ANR	2663307	ExpressionStatement	data = k | op -> operands [ 0 ] . reg << 24 | op -> operands [ 1 ] . reg << 29 | ( op -> operands [ 1 ] . reg & 56 ) << 13	361:2:7977:8076	2663241	2	True				
ANR	2663308	AssignmentExpression	data = k | op -> operands [ 0 ] . reg << 24 | op -> operands [ 1 ] . reg << 29 | ( op -> operands [ 1 ] . reg & 56 ) << 13		2663241	0		=			
ANR	2663309	Identifier	data		2663241	0					
ANR	2663310	InclusiveOrExpression	k | op -> operands [ 0 ] . reg << 24 | op -> operands [ 1 ] . reg << 29 | ( op -> operands [ 1 ] . reg & 56 ) << 13		2663241	1		|			
ANR	2663311	Identifier	k		2663241	0					
ANR	2663312	InclusiveOrExpression	op -> operands [ 0 ] . reg << 24 | op -> operands [ 1 ] . reg << 29 | ( op -> operands [ 1 ] . reg & 56 ) << 13		2663241	1		|			
ANR	2663313	ShiftExpression	op -> operands [ 0 ] . reg << 24		2663241	0		<<			
ANR	2663314	MemberAccess	op -> operands [ 0 ] . reg		2663241	0					
ANR	2663315	ArrayIndexing	op -> operands [ 0 ]		2663241	0					
ANR	2663316	PtrMemberAccess	op -> operands		2663241	0					
ANR	2663317	Identifier	op		2663241	0					
ANR	2663318	Identifier	operands		2663241	1					
ANR	2663319	PrimaryExpression	0		2663241	1					
ANR	2663320	Identifier	reg		2663241	1					
ANR	2663321	PrimaryExpression	24		2663241	1					
ANR	2663322	InclusiveOrExpression	op -> operands [ 1 ] . reg << 29 | ( op -> operands [ 1 ] . reg & 56 ) << 13		2663241	1		|			
ANR	2663323	ShiftExpression	op -> operands [ 1 ] . reg << 29		2663241	0		<<			
ANR	2663324	MemberAccess	op -> operands [ 1 ] . reg		2663241	0					
ANR	2663325	ArrayIndexing	op -> operands [ 1 ]		2663241	0					
ANR	2663326	PtrMemberAccess	op -> operands		2663241	0					
ANR	2663327	Identifier	op		2663241	0					
ANR	2663328	Identifier	operands		2663241	1					
ANR	2663329	PrimaryExpression	1		2663241	1					
ANR	2663330	Identifier	reg		2663241	1					
ANR	2663331	PrimaryExpression	29		2663241	1					
ANR	2663332	ShiftExpression	( op -> operands [ 1 ] . reg & 56 ) << 13		2663241	1		<<			
ANR	2663333	BitAndExpression	op -> operands [ 1 ] . reg & 56		2663241	0		&			
ANR	2663334	MemberAccess	op -> operands [ 1 ] . reg		2663241	0					
ANR	2663335	ArrayIndexing	op -> operands [ 1 ]		2663241	0					
ANR	2663336	PtrMemberAccess	op -> operands		2663241	0					
ANR	2663337	Identifier	op		2663241	0					
ANR	2663338	Identifier	operands		2663241	1					
ANR	2663339	PrimaryExpression	1		2663241	1					
ANR	2663340	Identifier	reg		2663241	1					
ANR	2663341	PrimaryExpression	56		2663241	1					
ANR	2663342	PrimaryExpression	13		2663241	1					
ANR	2663343	ExpressionStatement	data |= op -> operands [ 2 ] . reg << 8	362:2:8080:8112	2663241	3	True				
ANR	2663344	AssignmentExpression	data |= op -> operands [ 2 ] . reg << 8		2663241	0		|=			
ANR	2663345	Identifier	data		2663241	0					
ANR	2663346	ShiftExpression	op -> operands [ 2 ] . reg << 8		2663241	1		<<			
ANR	2663347	MemberAccess	op -> operands [ 2 ] . reg		2663241	0					
ANR	2663348	ArrayIndexing	op -> operands [ 2 ]		2663241	0					
ANR	2663349	PtrMemberAccess	op -> operands		2663241	0					
ANR	2663350	Identifier	op		2663241	0					
ANR	2663351	Identifier	operands		2663241	1					
ANR	2663352	PrimaryExpression	2		2663241	1					
ANR	2663353	Identifier	reg		2663241	1					
ANR	2663354	PrimaryExpression	8		2663241	1					
ANR	2663355	ReturnStatement	return data ;	363:2:8116:8127	2663241	4	True				
ANR	2663356	Identifier	data		2663241	0					
ANR	2663357	IdentifierDeclStatement	int n = op -> operands [ 2 ] . immediate ;	366:1:8134:8167	2663241	4	True				
ANR	2663358	IdentifierDecl	n = op -> operands [ 2 ] . immediate		2663241	0					
ANR	2663359	IdentifierDeclType	int		2663241	0					
ANR	2663360	Identifier	n		2663241	1					
ANR	2663361	AssignmentExpression	n = op -> operands [ 2 ] . immediate		2663241	2		=			
ANR	2663362	Identifier	n		2663241	0					
ANR	2663363	MemberAccess	op -> operands [ 2 ] . immediate		2663241	1					
ANR	2663364	ArrayIndexing	op -> operands [ 2 ]		2663241	0					
ANR	2663365	PtrMemberAccess	op -> operands		2663241	0					
ANR	2663366	Identifier	op		2663241	0					
ANR	2663367	Identifier	operands		2663241	1					
ANR	2663368	PrimaryExpression	2		2663241	1					
ANR	2663369	Identifier	immediate		2663241	1					
ANR	2663370	IfStatement	if ( n > 0xfff || n < - 0x100 )		2663241	5					
ANR	2663371	Condition	n > 0xfff || n < - 0x100	367:5:8174:8196	2663241	0	True				
ANR	2663372	OrExpression	n > 0xfff || n < - 0x100		2663241	0		||			
ANR	2663373	RelationalExpression	n > 0xfff		2663241	0		>			
ANR	2663374	Identifier	n		2663241	0					
ANR	2663375	PrimaryExpression	0xfff		2663241	1					
ANR	2663376	RelationalExpression	n < - 0x100		2663241	1		<			
ANR	2663377	Identifier	n		2663241	0					
ANR	2663378	UnaryOperationExpression	- 0x100		2663241	1					
ANR	2663379	UnaryOperator	-		2663241	0					
ANR	2663380	PrimaryExpression	0x100		2663241	1					
ANR	2663381	CompoundStatement		21:30:469:469	2663241	1					
ANR	2663382	ReturnStatement	return UT32_MAX ;	368:2:8203:8218	2663241	0	True				
ANR	2663383	Identifier	UT32_MAX		2663241	0					
ANR	2663384	IdentifierDeclStatement	int halfop = false ;	371:1:8237:8255	2663241	6	True				
ANR	2663385	IdentifierDecl	halfop = false		2663241	0					
ANR	2663386	IdentifierDeclType	int		2663241	0					
ANR	2663387	Identifier	halfop		2663241	1					
ANR	2663388	AssignmentExpression	halfop = false		2663241	2		=			
ANR	2663389	Identifier	false		2663241	0					
ANR	2663390	Identifier	false		2663241	1					
ANR	2663391	IfStatement	if ( ( k & 0xf ) == 8 )		2663241	7					
ANR	2663392	Condition	( k & 0xf ) == 8	372:5:8262:8275	2663241	0	True				
ANR	2663393	EqualityExpression	( k & 0xf ) == 8		2663241	0		==			
ANR	2663394	BitAndExpression	k & 0xf		2663241	0		&			
ANR	2663395	Identifier	k		2663241	0					
ANR	2663396	PrimaryExpression	0xf		2663241	1					
ANR	2663397	PrimaryExpression	8		2663241	1					
ANR	2663398	CompoundStatement		26:21:548:548	2663241	1					
ANR	2663399	ExpressionStatement	halfop = true	373:2:8282:8295	2663241	0	True				
ANR	2663400	AssignmentExpression	halfop = true		2663241	0		=			
ANR	2663401	Identifier	halfop		2663241	0					
ANR	2663402	Identifier	true		2663241	1					
ANR	2663403	IfStatement	if ( n == 0 || ( countTrailingZeros ( n ) && n > 0 ) )		2663241	1					
ANR	2663404	Condition	n == 0 || ( countTrailingZeros ( n ) && n > 0 )	374:6:8303:8344	2663241	0	True				
ANR	2663405	OrExpression	n == 0 || ( countTrailingZeros ( n ) && n > 0 )		2663241	0		||			
ANR	2663406	EqualityExpression	n == 0		2663241	0		==			
ANR	2663407	Identifier	n		2663241	0					
ANR	2663408	PrimaryExpression	0		2663241	1					
ANR	2663409	AndExpression	countTrailingZeros ( n ) && n > 0		2663241	1		&&			
ANR	2663410	CallExpression	countTrailingZeros ( n )		2663241	0					
ANR	2663411	Callee	countTrailingZeros		2663241	0					
ANR	2663412	Identifier	countTrailingZeros		2663241	0					
ANR	2663413	ArgumentList	n		2663241	1					
ANR	2663414	Argument	n		2663241	0					
ANR	2663415	Identifier	n		2663241	0					
ANR	2663416	RelationalExpression	n > 0		2663241	1		>			
ANR	2663417	Identifier	n		2663241	0					
ANR	2663418	PrimaryExpression	0		2663241	1					
ANR	2663419	CompoundStatement		28:50:617:617	2663241	1					
ANR	2663420	ExpressionStatement	k ++	375:3:8352:8355	2663241	0	True				
ANR	2663421	PostIncDecOperationExpression	k ++		2663241	0					
ANR	2663422	Identifier	k		2663241	0					
ANR	2663423	IncDec	++		2663241	1					
ANR	2663424	ElseStatement	else		2663241	0					
ANR	2663425	CompoundStatement		31:8:639:639	2663241	0					
ANR	2663426	IfStatement	if ( n < 0 )		2663241	0					
ANR	2663427	Condition	n < 0	378:6:8377:8381	2663241	0	True				
ANR	2663428	RelationalExpression	n < 0		2663241	0		<			
ANR	2663429	Identifier	n		2663241	0					
ANR	2663430	PrimaryExpression	0		2663241	1					
ANR	2663431	CompoundStatement		32:13:654:654	2663241	1					
ANR	2663432	ExpressionStatement	k --	379:3:8389:8392	2663241	0	True				
ANR	2663433	PostIncDecOperationExpression	k --		2663241	0					
ANR	2663434	Identifier	k		2663241	0					
ANR	2663435	IncDec	--		2663241	1					
ANR	2663436	ExpressionStatement	data = k | op -> operands [ 0 ] . reg << 24 | op -> operands [ 1 ] . reg << 29 | ( op -> operands [ 1 ] . reg & 56 ) << 13	383:1:8403:8502	2663241	8	True				
ANR	2663437	AssignmentExpression	data = k | op -> operands [ 0 ] . reg << 24 | op -> operands [ 1 ] . reg << 29 | ( op -> operands [ 1 ] . reg & 56 ) << 13		2663241	0		=			
ANR	2663438	Identifier	data		2663241	0					
ANR	2663439	InclusiveOrExpression	k | op -> operands [ 0 ] . reg << 24 | op -> operands [ 1 ] . reg << 29 | ( op -> operands [ 1 ] . reg & 56 ) << 13		2663241	1		|			
ANR	2663440	Identifier	k		2663241	0					
ANR	2663441	InclusiveOrExpression	op -> operands [ 0 ] . reg << 24 | op -> operands [ 1 ] . reg << 29 | ( op -> operands [ 1 ] . reg & 56 ) << 13		2663241	1		|			
ANR	2663442	ShiftExpression	op -> operands [ 0 ] . reg << 24		2663241	0		<<			
ANR	2663443	MemberAccess	op -> operands [ 0 ] . reg		2663241	0					
ANR	2663444	ArrayIndexing	op -> operands [ 0 ]		2663241	0					
ANR	2663445	PtrMemberAccess	op -> operands		2663241	0					
ANR	2663446	Identifier	op		2663241	0					
ANR	2663447	Identifier	operands		2663241	1					
ANR	2663448	PrimaryExpression	0		2663241	1					
ANR	2663449	Identifier	reg		2663241	1					
ANR	2663450	PrimaryExpression	24		2663241	1					
ANR	2663451	InclusiveOrExpression	op -> operands [ 1 ] . reg << 29 | ( op -> operands [ 1 ] . reg & 56 ) << 13		2663241	1		|			
ANR	2663452	ShiftExpression	op -> operands [ 1 ] . reg << 29		2663241	0		<<			
ANR	2663453	MemberAccess	op -> operands [ 1 ] . reg		2663241	0					
ANR	2663454	ArrayIndexing	op -> operands [ 1 ]		2663241	0					
ANR	2663455	PtrMemberAccess	op -> operands		2663241	0					
ANR	2663456	Identifier	op		2663241	0					
ANR	2663457	Identifier	operands		2663241	1					
ANR	2663458	PrimaryExpression	1		2663241	1					
ANR	2663459	Identifier	reg		2663241	1					
ANR	2663460	PrimaryExpression	29		2663241	1					
ANR	2663461	ShiftExpression	( op -> operands [ 1 ] . reg & 56 ) << 13		2663241	1		<<			
ANR	2663462	BitAndExpression	op -> operands [ 1 ] . reg & 56		2663241	0		&			
ANR	2663463	MemberAccess	op -> operands [ 1 ] . reg		2663241	0					
ANR	2663464	ArrayIndexing	op -> operands [ 1 ]		2663241	0					
ANR	2663465	PtrMemberAccess	op -> operands		2663241	0					
ANR	2663466	Identifier	op		2663241	0					
ANR	2663467	Identifier	operands		2663241	1					
ANR	2663468	PrimaryExpression	1		2663241	1					
ANR	2663469	Identifier	reg		2663241	1					
ANR	2663470	PrimaryExpression	56		2663241	1					
ANR	2663471	PrimaryExpression	13		2663241	1					
ANR	2663472	IdentifierDeclStatement	int imm = n ;	385:1:8506:8517	2663241	9	True				
ANR	2663473	IdentifierDecl	imm = n		2663241	0					
ANR	2663474	IdentifierDeclType	int		2663241	0					
ANR	2663475	Identifier	imm		2663241	1					
ANR	2663476	AssignmentExpression	imm = n		2663241	2		=			
ANR	2663477	Identifier	n		2663241	0					
ANR	2663478	Identifier	n		2663241	1					
ANR	2663479	IdentifierDeclStatement	int low_shift = 20 ;	386:1:8520:8538	2663241	10	True				
ANR	2663480	IdentifierDecl	low_shift = 20		2663241	0					
ANR	2663481	IdentifierDeclType	int		2663241	0					
ANR	2663482	Identifier	low_shift		2663241	1					
ANR	2663483	AssignmentExpression	low_shift = 20		2663241	2		=			
ANR	2663484	Identifier	low_shift		2663241	0					
ANR	2663485	PrimaryExpression	20		2663241	1					
ANR	2663486	IdentifierDeclStatement	int high_shift = 8 ;	387:1:8541:8559	2663241	11	True				
ANR	2663487	IdentifierDecl	high_shift = 8		2663241	0					
ANR	2663488	IdentifierDeclType	int		2663241	0					
ANR	2663489	Identifier	high_shift		2663241	1					
ANR	2663490	AssignmentExpression	high_shift = 8		2663241	2		=			
ANR	2663491	Identifier	high_shift		2663241	0					
ANR	2663492	PrimaryExpression	8		2663241	1					
ANR	2663493	IdentifierDeclStatement	int top_shift = 10 ;	388:1:8562:8580	2663241	12	True				
ANR	2663494	IdentifierDecl	top_shift = 10		2663241	0					
ANR	2663495	IdentifierDeclType	int		2663241	0					
ANR	2663496	Identifier	top_shift		2663241	1					
ANR	2663497	AssignmentExpression	top_shift = 10		2663241	2		=			
ANR	2663498	Identifier	top_shift		2663241	0					
ANR	2663499	PrimaryExpression	10		2663241	1					
ANR	2663500	IfStatement	if ( n < 0 )		2663241	13					
ANR	2663501	Condition	n < 0	389:5:8587:8591	2663241	0	True				
ANR	2663502	RelationalExpression	n < 0		2663241	0		<			
ANR	2663503	Identifier	n		2663241	0					
ANR	2663504	PrimaryExpression	0		2663241	1					
ANR	2663505	CompoundStatement		43:12:864:864	2663241	1					
ANR	2663506	ExpressionStatement	imm = 0xfff + ( n + 1 )	390:2:8598:8619	2663241	0	True				
ANR	2663507	AssignmentExpression	imm = 0xfff + ( n + 1 )		2663241	0		=			
ANR	2663508	Identifier	imm		2663241	0					
ANR	2663509	AdditiveExpression	0xfff + ( n + 1 )		2663241	1		+			
ANR	2663510	PrimaryExpression	0xfff		2663241	0					
ANR	2663511	AdditiveExpression	n + 1		2663241	1		+			
ANR	2663512	Identifier	n		2663241	0					
ANR	2663513	PrimaryExpression	1		2663241	1					
ANR	2663514	IfStatement	if ( halfop )		2663241	14					
ANR	2663515	Condition	halfop	392:5:8629:8634	2663241	0	True				
ANR	2663516	Identifier	halfop		2663241	0					
ANR	2663517	CompoundStatement		46:13:907:907	2663241	1					
ANR	2663518	IfStatement	if ( imm & 0x1 || n < 0 )		2663241	0					
ANR	2663519	Condition	imm & 0x1 || n < 0	393:6:8645:8662	2663241	0	True				
ANR	2663520	OrExpression	imm & 0x1 || n < 0		2663241	0		||			
ANR	2663521	BitAndExpression	imm & 0x1		2663241	0		&			
ANR	2663522	Identifier	imm		2663241	0					
ANR	2663523	PrimaryExpression	0x1		2663241	1					
ANR	2663524	RelationalExpression	n < 0		2663241	1		<			
ANR	2663525	Identifier	n		2663241	0					
ANR	2663526	PrimaryExpression	0		2663241	1					
ANR	2663527	CompoundStatement		47:26:935:935	2663241	1					
ANR	2663528	ExpressionStatement	data |= ( 0xf & imm ) << low_shift	394:3:8670:8703	2663241	0	True				
ANR	2663529	AssignmentExpression	data |= ( 0xf & imm ) << low_shift		2663241	0		|=			
ANR	2663530	Identifier	data		2663241	0					
ANR	2663531	ShiftExpression	( 0xf & imm ) << low_shift		2663241	1		<<			
ANR	2663532	BitAndExpression	0xf & imm		2663241	0		&			
ANR	2663533	PrimaryExpression	0xf		2663241	0					
ANR	2663534	Identifier	imm		2663241	1					
ANR	2663535	Identifier	low_shift		2663241	1					
ANR	2663536	ExpressionStatement	data |= ( 0x7 & ( imm >> 4 ) ) << high_shift	395:3:8708:8748	2663241	1	True				
ANR	2663537	AssignmentExpression	data |= ( 0x7 & ( imm >> 4 ) ) << high_shift		2663241	0		|=			
ANR	2663538	Identifier	data		2663241	0					
ANR	2663539	ShiftExpression	( 0x7 & ( imm >> 4 ) ) << high_shift		2663241	1		<<			
ANR	2663540	BitAndExpression	0x7 & ( imm >> 4 )		2663241	0		&			
ANR	2663541	PrimaryExpression	0x7		2663241	0					
ANR	2663542	ShiftExpression	imm >> 4		2663241	1		>>			
ANR	2663543	Identifier	imm		2663241	0					
ANR	2663544	PrimaryExpression	4		2663241	1					
ANR	2663545	Identifier	high_shift		2663241	1					
ANR	2663546	ExpressionStatement	data |= ( 0x7 & ( imm >> 6 ) ) << top_shift	396:3:8753:8792	2663241	2	True				
ANR	2663547	AssignmentExpression	data |= ( 0x7 & ( imm >> 6 ) ) << top_shift		2663241	0		|=			
ANR	2663548	Identifier	data		2663241	0					
ANR	2663549	ShiftExpression	( 0x7 & ( imm >> 6 ) ) << top_shift		2663241	1		<<			
ANR	2663550	BitAndExpression	0x7 & ( imm >> 6 )		2663241	0		&			
ANR	2663551	PrimaryExpression	0x7		2663241	0					
ANR	2663552	ShiftExpression	imm >> 6		2663241	1		>>			
ANR	2663553	Identifier	imm		2663241	0					
ANR	2663554	PrimaryExpression	6		2663241	1					
ANR	2663555	Identifier	top_shift		2663241	1					
ANR	2663556	ElseStatement	else		2663241	0					
ANR	2663557	CompoundStatement		51:9:1073:1073	2663241	0					
ANR	2663558	ExpressionStatement	data |= ( 0xf & imm ) << ( low_shift - 3 )	398:3:8808:8846	2663241	0	True				
ANR	2663559	AssignmentExpression	data |= ( 0xf & imm ) << ( low_shift - 3 )		2663241	0		|=			
ANR	2663560	Identifier	data		2663241	0					
ANR	2663561	ShiftExpression	( 0xf & imm ) << ( low_shift - 3 )		2663241	1		<<			
ANR	2663562	BitAndExpression	0xf & imm		2663241	0		&			
ANR	2663563	PrimaryExpression	0xf		2663241	0					
ANR	2663564	Identifier	imm		2663241	1					
ANR	2663565	AdditiveExpression	low_shift - 3		2663241	1		-			
ANR	2663566	Identifier	low_shift		2663241	0					
ANR	2663567	PrimaryExpression	3		2663241	1					
ANR	2663568	ExpressionStatement	data |= ( 0x7 & ( imm >> 4 ) ) << ( high_shift + 13 )	399:3:8851:8898	2663241	1	True				
ANR	2663569	AssignmentExpression	data |= ( 0x7 & ( imm >> 4 ) ) << ( high_shift + 13 )		2663241	0		|=			
ANR	2663570	Identifier	data		2663241	0					
ANR	2663571	ShiftExpression	( 0x7 & ( imm >> 4 ) ) << ( high_shift + 13 )		2663241	1		<<			
ANR	2663572	BitAndExpression	0x7 & ( imm >> 4 )		2663241	0		&			
ANR	2663573	PrimaryExpression	0x7		2663241	0					
ANR	2663574	ShiftExpression	imm >> 4		2663241	1		>>			
ANR	2663575	Identifier	imm		2663241	0					
ANR	2663576	PrimaryExpression	4		2663241	1					
ANR	2663577	AdditiveExpression	high_shift + 13		2663241	1		+			
ANR	2663578	Identifier	high_shift		2663241	0					
ANR	2663579	PrimaryExpression	13		2663241	1					
ANR	2663580	ExpressionStatement	data |= ( 0x7 & ( imm >> 7 ) ) << ( top_shift - 2 )	400:3:8903:8949	2663241	2	True				
ANR	2663581	AssignmentExpression	data |= ( 0x7 & ( imm >> 7 ) ) << ( top_shift - 2 )		2663241	0		|=			
ANR	2663582	Identifier	data		2663241	0					
ANR	2663583	ShiftExpression	( 0x7 & ( imm >> 7 ) ) << ( top_shift - 2 )		2663241	1		<<			
ANR	2663584	BitAndExpression	0x7 & ( imm >> 7 )		2663241	0		&			
ANR	2663585	PrimaryExpression	0x7		2663241	0					
ANR	2663586	ShiftExpression	imm >> 7		2663241	1		>>			
ANR	2663587	Identifier	imm		2663241	0					
ANR	2663588	PrimaryExpression	7		2663241	1					
ANR	2663589	AdditiveExpression	top_shift - 2		2663241	1		-			
ANR	2663590	Identifier	top_shift		2663241	0					
ANR	2663591	PrimaryExpression	2		2663241	1					
ANR	2663592	ElseStatement	else		2663241	0					
ANR	2663593	CompoundStatement		56:8:1233:1233	2663241	0					
ANR	2663594	IfStatement	if ( n < 0 )		2663241	0					
ANR	2663595	Condition	n < 0	403:6:8971:8975	2663241	0	True				
ANR	2663596	RelationalExpression	n < 0		2663241	0		<			
ANR	2663597	Identifier	n		2663241	0					
ANR	2663598	PrimaryExpression	0		2663241	1					
ANR	2663599	CompoundStatement		57:13:1248:1248	2663241	1					
ANR	2663600	ExpressionStatement	data |= ( 0xf & imm ) << 20	404:3:8983:9008	2663241	0	True				
ANR	2663601	AssignmentExpression	data |= ( 0xf & imm ) << 20		2663241	0		|=			
ANR	2663602	Identifier	data		2663241	0					
ANR	2663603	ShiftExpression	( 0xf & imm ) << 20		2663241	1		<<			
ANR	2663604	BitAndExpression	0xf & imm		2663241	0		&			
ANR	2663605	PrimaryExpression	0xf		2663241	0					
ANR	2663606	Identifier	imm		2663241	1					
ANR	2663607	PrimaryExpression	20		2663241	1					
ANR	2663608	ExpressionStatement	data |= ( 0x1f & ( imm >> 4 ) ) << 8	405:3:9013:9045	2663241	1	True				
ANR	2663609	AssignmentExpression	data |= ( 0x1f & ( imm >> 4 ) ) << 8		2663241	0		|=			
ANR	2663610	Identifier	data		2663241	0					
ANR	2663611	ShiftExpression	( 0x1f & ( imm >> 4 ) ) << 8		2663241	1		<<			
ANR	2663612	BitAndExpression	0x1f & ( imm >> 4 )		2663241	0		&			
ANR	2663613	PrimaryExpression	0x1f		2663241	0					
ANR	2663614	ShiftExpression	imm >> 4		2663241	1		>>			
ANR	2663615	Identifier	imm		2663241	0					
ANR	2663616	PrimaryExpression	4		2663241	1					
ANR	2663617	PrimaryExpression	8		2663241	1					
ANR	2663618	ElseStatement	else		2663241	0					
ANR	2663619	CompoundStatement		60:9:1326:1326	2663241	0					
ANR	2663620	ExpressionStatement	data |= ( 0xf & imm ) << 18	407:3:9061:9086	2663241	0	True				
ANR	2663621	AssignmentExpression	data |= ( 0xf & imm ) << 18		2663241	0		|=			
ANR	2663622	Identifier	data		2663241	0					
ANR	2663623	ShiftExpression	( 0xf & imm ) << 18		2663241	1		<<			
ANR	2663624	BitAndExpression	0xf & imm		2663241	0		&			
ANR	2663625	PrimaryExpression	0xf		2663241	0					
ANR	2663626	Identifier	imm		2663241	1					
ANR	2663627	PrimaryExpression	18		2663241	1					
ANR	2663628	ExpressionStatement	data |= ( 0x3 & ( imm >> 4 ) ) << 22	408:3:9091:9123	2663241	1	True				
ANR	2663629	AssignmentExpression	data |= ( 0x3 & ( imm >> 4 ) ) << 22		2663241	0		|=			
ANR	2663630	Identifier	data		2663241	0					
ANR	2663631	ShiftExpression	( 0x3 & ( imm >> 4 ) ) << 22		2663241	1		<<			
ANR	2663632	BitAndExpression	0x3 & ( imm >> 4 )		2663241	0		&			
ANR	2663633	PrimaryExpression	0x3		2663241	0					
ANR	2663634	ShiftExpression	imm >> 4		2663241	1		>>			
ANR	2663635	Identifier	imm		2663241	0					
ANR	2663636	PrimaryExpression	4		2663241	1					
ANR	2663637	PrimaryExpression	22		2663241	1					
ANR	2663638	ExpressionStatement	data |= ( 0x7 & ( imm >> 6 ) ) << 8	409:3:9128:9159	2663241	2	True				
ANR	2663639	AssignmentExpression	data |= ( 0x7 & ( imm >> 6 ) ) << 8		2663241	0		|=			
ANR	2663640	Identifier	data		2663241	0					
ANR	2663641	ShiftExpression	( 0x7 & ( imm >> 6 ) ) << 8		2663241	1		<<			
ANR	2663642	BitAndExpression	0x7 & ( imm >> 6 )		2663241	0		&			
ANR	2663643	PrimaryExpression	0x7		2663241	0					
ANR	2663644	ShiftExpression	imm >> 6		2663241	1		>>			
ANR	2663645	Identifier	imm		2663241	0					
ANR	2663646	PrimaryExpression	6		2663241	1					
ANR	2663647	PrimaryExpression	8		2663241	1					
ANR	2663648	ReturnStatement	return data ;	412:1:9169:9180	2663241	15	True				
ANR	2663649	Identifier	data		2663241	0					
ANR	2663650	ReturnType	static ut32		2663241	1					
ANR	2663651	Identifier	bytelsop		2663241	2					
ANR	2663652	ParameterList	"ArmOp * op , int k"		2663241	3					
ANR	2663653	Parameter	ArmOp * op	347:21:7711:7719	2663241	0	True				
ANR	2663654	ParameterType	ArmOp *		2663241	0					
ANR	2663655	Identifier	op		2663241	1					
ANR	2663656	Parameter	int k	347:32:7722:7726	2663241	1	True				
ANR	2663657	ParameterType	int		2663241	0					
ANR	2663658	Identifier	k		2663241	1					
ANR	2663659	CFGEntryNode	ENTRY		2663241		True				
ANR	2663660	CFGExitNode	EXIT		2663241		True				
ANR	2663661	Symbol	UT32_MAX		2663241						
ANR	2663662	Symbol	data		2663241						
ANR	2663663	Symbol	* op		2663241						
ANR	2663664	Symbol	op -> operands [ 1 ] . reg_type		2663241						
ANR	2663665	Symbol	imm		2663241						
ANR	2663666	Symbol	op -> operands [ 0 ] . reg_type		2663241						
ANR	2663667	Symbol	ARM_GPR		2663241						
ANR	2663668	Symbol	* * op		2663241						
ANR	2663669	Symbol	high_shift		2663241						
ANR	2663670	Symbol	ARM_REG32		2663241						
ANR	2663671	Symbol	* op -> operands		2663241						
ANR	2663672	Symbol	halfop		2663241						
ANR	2663673	Symbol	top_shift		2663241						
ANR	2663674	Symbol	op -> operands [ 0 ] . reg		2663241						
ANR	2663675	Symbol	op -> operands [ 2 ] . reg		2663241						
ANR	2663676	Symbol	op -> operands [ 2 ] . immediate		2663241						
ANR	2663677	Symbol	op		2663241						
ANR	2663678	Symbol	op -> operands [ 1 ] . reg		2663241						
ANR	2663679	Symbol	false		2663241						
ANR	2663680	Symbol	k		2663241						
ANR	2663681	Symbol	op -> operands [ 2 ] . type		2663241						
ANR	2663682	Symbol	n		2663241						
ANR	2663683	Symbol	ARM_REG64		2663241						
ANR	2663684	Symbol	countTrailingZeros		2663241						
ANR	2663685	Symbol	true		2663241						
ANR	2663686	Symbol	op -> operands		2663241						
ANR	2663687	Symbol	low_shift		2663241						
ANR	2663688	Function	branch	415:0:9185:9867							
ANR	2663689	FunctionDef	"branch (ArmOp * op , ut64 addr , int k)"		2663688	0					
ANR	2663690	CompoundStatement		415:48:9233:9867	2663688	0					
ANR	2663691	IdentifierDeclStatement	ut32 data = UT32_MAX ;	416:1:9236:9256	2663688	0	True				
ANR	2663692	IdentifierDecl	data = UT32_MAX		2663688	0					
ANR	2663693	IdentifierDeclType	ut32		2663688	0					
ANR	2663694	Identifier	data		2663688	1					
ANR	2663695	AssignmentExpression	data = UT32_MAX		2663688	2		=			
ANR	2663696	Identifier	UT32_MAX		2663688	0					
ANR	2663697	Identifier	UT32_MAX		2663688	1					
ANR	2663698	IdentifierDeclStatement	int n = 0 ;	417:1:9259:9268	2663688	1	True				
ANR	2663699	IdentifierDecl	n = 0		2663688	0					
ANR	2663700	IdentifierDeclType	int		2663688	0					
ANR	2663701	Identifier	n		2663688	1					
ANR	2663702	AssignmentExpression	n = 0		2663688	2		=			
ANR	2663703	Identifier	n		2663688	0					
ANR	2663704	PrimaryExpression	0		2663688	1					
ANR	2663705	IfStatement	if ( op -> operands [ 0 ] . type & ARM_CONSTANT )		2663688	2					
ANR	2663706	Condition	op -> operands [ 0 ] . type & ARM_CONSTANT	418:5:9275:9309	2663688	0	True				
ANR	2663707	BitAndExpression	op -> operands [ 0 ] . type & ARM_CONSTANT		2663688	0		&			
ANR	2663708	MemberAccess	op -> operands [ 0 ] . type		2663688	0					
ANR	2663709	ArrayIndexing	op -> operands [ 0 ]		2663688	0					
ANR	2663710	PtrMemberAccess	op -> operands		2663688	0					
ANR	2663711	Identifier	op		2663688	0					
ANR	2663712	Identifier	operands		2663688	1					
ANR	2663713	PrimaryExpression	0		2663688	1					
ANR	2663714	Identifier	type		2663688	1					
ANR	2663715	Identifier	ARM_CONSTANT		2663688	1					
ANR	2663716	CompoundStatement		4:42:78:78	2663688	1					
ANR	2663717	ExpressionStatement	n = op -> operands [ 0 ] . immediate	419:2:9316:9345	2663688	0	True				
ANR	2663718	AssignmentExpression	n = op -> operands [ 0 ] . immediate		2663688	0		=			
ANR	2663719	Identifier	n		2663688	0					
ANR	2663720	MemberAccess	op -> operands [ 0 ] . immediate		2663688	1					
ANR	2663721	ArrayIndexing	op -> operands [ 0 ]		2663688	0					
ANR	2663722	PtrMemberAccess	op -> operands		2663688	0					
ANR	2663723	Identifier	op		2663688	0					
ANR	2663724	Identifier	operands		2663688	1					
ANR	2663725	PrimaryExpression	0		2663688	1					
ANR	2663726	Identifier	immediate		2663688	1					
ANR	2663727	IfStatement	if ( ! ( n & 0x3 || n > 0x7ffffff ) )		2663688	1					
ANR	2663728	Condition	! ( n & 0x3 || n > 0x7ffffff )	420:6:9353:9379	2663688	0	True				
ANR	2663729	UnaryOperationExpression	! ( n & 0x3 || n > 0x7ffffff )		2663688	0					
ANR	2663730	UnaryOperator	!		2663688	0					
ANR	2663731	OrExpression	n & 0x3 || n > 0x7ffffff		2663688	1		||			
ANR	2663732	BitAndExpression	n & 0x3		2663688	0		&			
ANR	2663733	Identifier	n		2663688	0					
ANR	2663734	PrimaryExpression	0x3		2663688	1					
ANR	2663735	RelationalExpression	n > 0x7ffffff		2663688	1		>			
ANR	2663736	Identifier	n		2663688	0					
ANR	2663737	PrimaryExpression	0x7ffffff		2663688	1					
ANR	2663738	CompoundStatement		17:3:310:335	2663688	1					
ANR	2663739	IfStatement	if ( n >= addr )		2663688	0					
ANR	2663740	Condition	n >= addr	421:7:9391:9399	2663688	0	True				
ANR	2663741	RelationalExpression	n >= addr		2663688	0		>=			
ANR	2663742	Identifier	n		2663688	0					
ANR	2663743	Identifier	addr		2663688	1					
ANR	2663744	CompoundStatement		7:18:168:168	2663688	1					
ANR	2663745	ExpressionStatement	n -= addr	422:4:9408:9417	2663688	0	True				
ANR	2663746	AssignmentExpression	n -= addr		2663688	0		-=			
ANR	2663747	Identifier	n		2663688	0					
ANR	2663748	Identifier	addr		2663688	1					
ANR	2663749	ElseStatement	else		2663688	0					
ANR	2663750	CompoundStatement		9:10:195:195	2663688	0					
ANR	2663751	ExpressionStatement	n -= addr	424:4:9435:9444	2663688	0	True				
ANR	2663752	AssignmentExpression	n -= addr		2663688	0		-=			
ANR	2663753	Identifier	n		2663688	0					
ANR	2663754	Identifier	addr		2663688	1					
ANR	2663755	ExpressionStatement	n = n & 0xfffffff	425:4:9450:9467	2663688	1	True				
ANR	2663756	AssignmentExpression	n = n & 0xfffffff		2663688	0		=			
ANR	2663757	Identifier	n		2663688	0					
ANR	2663758	BitAndExpression	n & 0xfffffff		2663688	1		&			
ANR	2663759	Identifier	n		2663688	0					
ANR	2663760	PrimaryExpression	0xfffffff		2663688	1					
ANR	2663761	ExpressionStatement	k |= 3	426:4:9473:9479	2663688	2	True				
ANR	2663762	AssignmentExpression	k |= 3		2663688	0		|=			
ANR	2663763	Identifier	k		2663688	0					
ANR	2663764	PrimaryExpression	3		2663688	1					
ANR	2663765	ExpressionStatement	n = n >> 2	428:3:9489:9499	2663688	1	True				
ANR	2663766	AssignmentExpression	n = n >> 2		2663688	0		=			
ANR	2663767	Identifier	n		2663688	0					
ANR	2663768	ShiftExpression	n >> 2		2663688	1		>>			
ANR	2663769	Identifier	n		2663688	0					
ANR	2663770	PrimaryExpression	2		2663688	1					
ANR	2663771	IdentifierDeclStatement	int t = n >> 24 ;	429:3:9504:9519	2663688	2	True				
ANR	2663772	IdentifierDecl	t = n >> 24		2663688	0					
ANR	2663773	IdentifierDeclType	int		2663688	0					
ANR	2663774	Identifier	t		2663688	1					
ANR	2663775	AssignmentExpression	t = n >> 24		2663688	2		=			
ANR	2663776	Identifier	t		2663688	0					
ANR	2663777	ShiftExpression	n >> 24		2663688	1		>>			
ANR	2663778	Identifier	n		2663688	0					
ANR	2663779	PrimaryExpression	24		2663688	1					
ANR	2663780	IdentifierDeclStatement	int h = n >> 16 ;	430:3:9524:9539	2663688	3	True				
ANR	2663781	IdentifierDecl	h = n >> 16		2663688	0					
ANR	2663782	IdentifierDeclType	int		2663688	0					
ANR	2663783	Identifier	h		2663688	1					
ANR	2663784	AssignmentExpression	h = n >> 16		2663688	2		=			
ANR	2663785	Identifier	h		2663688	0					
ANR	2663786	ShiftExpression	n >> 16		2663688	1		>>			
ANR	2663787	Identifier	n		2663688	0					
ANR	2663788	PrimaryExpression	16		2663688	1					
ANR	2663789	IdentifierDeclStatement	int m = ( n & 0xff00 ) >> 8 ;	431:3:9544:9569	2663688	4	True				
ANR	2663790	IdentifierDecl	m = ( n & 0xff00 ) >> 8		2663688	0					
ANR	2663791	IdentifierDeclType	int		2663688	0					
ANR	2663792	Identifier	m		2663688	1					
ANR	2663793	AssignmentExpression	m = ( n & 0xff00 ) >> 8		2663688	2		=			
ANR	2663794	Identifier	m		2663688	0					
ANR	2663795	ShiftExpression	( n & 0xff00 ) >> 8		2663688	1		>>			
ANR	2663796	BitAndExpression	n & 0xff00		2663688	0		&			
ANR	2663797	Identifier	n		2663688	0					
ANR	2663798	PrimaryExpression	0xff00		2663688	1					
ANR	2663799	PrimaryExpression	8		2663688	1					
ANR	2663800	ExpressionStatement	n &= 0xff	432:3:9574:9583	2663688	5	True				
ANR	2663801	AssignmentExpression	n &= 0xff		2663688	0		&=			
ANR	2663802	Identifier	n		2663688	0					
ANR	2663803	PrimaryExpression	0xff		2663688	1					
ANR	2663804	ExpressionStatement	data = k	433:3:9588:9596	2663688	6	True				
ANR	2663805	AssignmentExpression	data = k		2663688	0		=			
ANR	2663806	Identifier	data		2663688	0					
ANR	2663807	Identifier	k		2663688	1					
ANR	2663808	ExpressionStatement	data |= n << 24	434:3:9601:9616	2663688	7	True				
ANR	2663809	AssignmentExpression	data |= n << 24		2663688	0		|=			
ANR	2663810	Identifier	data		2663688	0					
ANR	2663811	ShiftExpression	n << 24		2663688	1		<<			
ANR	2663812	Identifier	n		2663688	0					
ANR	2663813	PrimaryExpression	24		2663688	1					
ANR	2663814	ExpressionStatement	data |= m << 16	435:3:9621:9636	2663688	8	True				
ANR	2663815	AssignmentExpression	data |= m << 16		2663688	0		|=			
ANR	2663816	Identifier	data		2663688	0					
ANR	2663817	ShiftExpression	m << 16		2663688	1		<<			
ANR	2663818	Identifier	m		2663688	0					
ANR	2663819	PrimaryExpression	16		2663688	1					
ANR	2663820	ExpressionStatement	data |= h << 8	436:3:9641:9655	2663688	9	True				
ANR	2663821	AssignmentExpression	data |= h << 8		2663688	0		|=			
ANR	2663822	Identifier	data		2663688	0					
ANR	2663823	ShiftExpression	h << 8		2663688	1		<<			
ANR	2663824	Identifier	h		2663688	0					
ANR	2663825	PrimaryExpression	8		2663688	1					
ANR	2663826	ExpressionStatement	data |= t	437:3:9660:9669	2663688	10	True				
ANR	2663827	AssignmentExpression	data |= t		2663688	0		|=			
ANR	2663828	Identifier	data		2663688	0					
ANR	2663829	Identifier	t		2663688	1					
ANR	2663830	ElseStatement	else		2663688	0					
ANR	2663831	CompoundStatement		31:2:537:551	2663688	0					
ANR	2663832	ExpressionStatement	n = op -> operands [ 0 ] . reg	440:2:9687:9710	2663688	0	True				
ANR	2663833	AssignmentExpression	n = op -> operands [ 0 ] . reg		2663688	0		=			
ANR	2663834	Identifier	n		2663688	0					
ANR	2663835	MemberAccess	op -> operands [ 0 ] . reg		2663688	1					
ANR	2663836	ArrayIndexing	op -> operands [ 0 ]		2663688	0					
ANR	2663837	PtrMemberAccess	op -> operands		2663688	0					
ANR	2663838	Identifier	op		2663688	0					
ANR	2663839	Identifier	operands		2663688	1					
ANR	2663840	PrimaryExpression	0		2663688	1					
ANR	2663841	Identifier	reg		2663688	1					
ANR	2663842	IfStatement	if ( n < 0 || n > 31 )		2663688	1					
ANR	2663843	Condition	n < 0 || n > 31	441:6:9718:9732	2663688	0	True				
ANR	2663844	OrExpression	n < 0 || n > 31		2663688	0		||			
ANR	2663845	RelationalExpression	n < 0		2663688	0		<			
ANR	2663846	Identifier	n		2663688	0					
ANR	2663847	PrimaryExpression	0		2663688	1					
ANR	2663848	RelationalExpression	n > 31		2663688	1		>			
ANR	2663849	Identifier	n		2663688	0					
ANR	2663850	PrimaryExpression	31		2663688	1					
ANR	2663851	CompoundStatement		27:23:501:501	2663688	1					
ANR	2663852	ReturnStatement	return - 1 ;	442:3:9740:9749	2663688	0	True				
ANR	2663853	UnaryOperationExpression	- 1		2663688	0					
ANR	2663854	UnaryOperator	-		2663688	0					
ANR	2663855	PrimaryExpression	1		2663688	1					
ANR	2663856	ExpressionStatement	n = n << 5	444:2:9757:9767	2663688	2	True				
ANR	2663857	AssignmentExpression	n = n << 5		2663688	0		=			
ANR	2663858	Identifier	n		2663688	0					
ANR	2663859	ShiftExpression	n << 5		2663688	1		<<			
ANR	2663860	Identifier	n		2663688	0					
ANR	2663861	PrimaryExpression	5		2663688	1					
ANR	2663862	IdentifierDeclStatement	int h = n >> 8 ;	445:2:9771:9785	2663688	3	True				
ANR	2663863	IdentifierDecl	h = n >> 8		2663688	0					
ANR	2663864	IdentifierDeclType	int		2663688	0					
ANR	2663865	Identifier	h		2663688	1					
ANR	2663866	AssignmentExpression	h = n >> 8		2663688	2		=			
ANR	2663867	Identifier	h		2663688	0					
ANR	2663868	ShiftExpression	n >> 8		2663688	1		>>			
ANR	2663869	Identifier	n		2663688	0					
ANR	2663870	PrimaryExpression	8		2663688	1					
ANR	2663871	ExpressionStatement	n &= 0xff	446:2:9789:9798	2663688	4	True				
ANR	2663872	AssignmentExpression	n &= 0xff		2663688	0		&=			
ANR	2663873	Identifier	n		2663688	0					
ANR	2663874	PrimaryExpression	0xff		2663688	1					
ANR	2663875	ExpressionStatement	data = k	447:2:9802:9810	2663688	5	True				
ANR	2663876	AssignmentExpression	data = k		2663688	0		=			
ANR	2663877	Identifier	data		2663688	0					
ANR	2663878	Identifier	k		2663688	1					
ANR	2663879	ExpressionStatement	data |= n << 24	448:2:9814:9829	2663688	6	True				
ANR	2663880	AssignmentExpression	data |= n << 24		2663688	0		|=			
ANR	2663881	Identifier	data		2663688	0					
ANR	2663882	ShiftExpression	n << 24		2663688	1		<<			
ANR	2663883	Identifier	n		2663688	0					
ANR	2663884	PrimaryExpression	24		2663688	1					
ANR	2663885	ExpressionStatement	data |= h << 16	449:2:9833:9848	2663688	7	True				
ANR	2663886	AssignmentExpression	data |= h << 16		2663688	0		|=			
ANR	2663887	Identifier	data		2663688	0					
ANR	2663888	ShiftExpression	h << 16		2663688	1		<<			
ANR	2663889	Identifier	h		2663688	0					
ANR	2663890	PrimaryExpression	16		2663688	1					
ANR	2663891	ReturnStatement	return data ;	451:1:9854:9865	2663688	3	True				
ANR	2663892	Identifier	data		2663688	0					
ANR	2663893	ReturnType	static ut32		2663688	1					
ANR	2663894	Identifier	branch		2663688	2					
ANR	2663895	ParameterList	"ArmOp * op , ut64 addr , int k"		2663688	3					
ANR	2663896	Parameter	ArmOp * op	415:19:9204:9212	2663688	0	True				
ANR	2663897	ParameterType	ArmOp *		2663688	0					
ANR	2663898	Identifier	op		2663688	1					
ANR	2663899	Parameter	ut64 addr	415:30:9215:9223	2663688	1	True				
ANR	2663900	ParameterType	ut64		2663688	0					
ANR	2663901	Identifier	addr		2663688	1					
ANR	2663902	Parameter	int k	415:41:9226:9230	2663688	2	True				
ANR	2663903	ParameterType	int		2663688	0					
ANR	2663904	Identifier	k		2663688	1					
ANR	2663905	CFGEntryNode	ENTRY		2663688		True				
ANR	2663906	CFGExitNode	EXIT		2663688		True				
ANR	2663907	Symbol	UT32_MAX		2663688						
ANR	2663908	Symbol	op		2663688						
ANR	2663909	Symbol	ARM_CONSTANT		2663688						
ANR	2663910	Symbol	data		2663688						
ANR	2663911	Symbol	* op		2663688						
ANR	2663912	Symbol	h		2663688						
ANR	2663913	Symbol	k		2663688						
ANR	2663914	Symbol	op -> operands [ 0 ] . immediate		2663688						
ANR	2663915	Symbol	m		2663688						
ANR	2663916	Symbol	n		2663688						
ANR	2663917	Symbol	* * op		2663688						
ANR	2663918	Symbol	* op -> operands		2663688						
ANR	2663919	Symbol	t		2663688						
ANR	2663920	Symbol	op -> operands [ 0 ] . type		2663688						
ANR	2663921	Symbol	op -> operands [ 0 ] . reg		2663688						
ANR	2663922	Symbol	addr		2663688						
ANR	2663923	Symbol	op -> operands		2663688						
ANR	2663924	Function	bdot	454:0:9870:10489							
ANR	2663925	FunctionDef	"bdot (ArmOp * op , ut64 addr , int k)"		2663924	0					
ANR	2663926	CompoundStatement		454:46:9916:10489	2663924	0					
ANR	2663927	IdentifierDeclStatement	ut32 data = UT32_MAX ;	455:1:9919:9939	2663924	0	True				
ANR	2663928	IdentifierDecl	data = UT32_MAX		2663924	0					
ANR	2663929	IdentifierDeclType	ut32		2663924	0					
ANR	2663930	Identifier	data		2663924	1					
ANR	2663931	AssignmentExpression	data = UT32_MAX		2663924	2		=			
ANR	2663932	Identifier	UT32_MAX		2663924	0					
ANR	2663933	Identifier	UT32_MAX		2663924	1					
ANR	2663934	IdentifierDeclStatement	int n = 0 ;	456:1:9942:9951	2663924	1	True				
ANR	2663935	IdentifierDecl	n = 0		2663924	0					
ANR	2663936	IdentifierDeclType	int		2663924	0					
ANR	2663937	Identifier	n		2663924	1					
ANR	2663938	AssignmentExpression	n = 0		2663924	2		=			
ANR	2663939	Identifier	n		2663924	0					
ANR	2663940	PrimaryExpression	0		2663924	1					
ANR	2663941	IdentifierDeclStatement	int a = 0 ;	457:1:9954:9963	2663924	2	True				
ANR	2663942	IdentifierDecl	a = 0		2663924	0					
ANR	2663943	IdentifierDeclType	int		2663924	0					
ANR	2663944	Identifier	a		2663924	1					
ANR	2663945	AssignmentExpression	a = 0		2663924	2		=			
ANR	2663946	Identifier	a		2663924	0					
ANR	2663947	PrimaryExpression	0		2663924	1					
ANR	2663948	ExpressionStatement	n = op -> operands [ 0 ] . immediate	458:1:9966:9995	2663924	3	True				
ANR	2663949	AssignmentExpression	n = op -> operands [ 0 ] . immediate		2663924	0		=			
ANR	2663950	Identifier	n		2663924	0					
ANR	2663951	MemberAccess	op -> operands [ 0 ] . immediate		2663924	1					
ANR	2663952	ArrayIndexing	op -> operands [ 0 ]		2663924	0					
ANR	2663953	PtrMemberAccess	op -> operands		2663924	0					
ANR	2663954	Identifier	op		2663924	0					
ANR	2663955	Identifier	operands		2663924	1					
ANR	2663956	PrimaryExpression	0		2663924	1					
ANR	2663957	Identifier	immediate		2663924	1					
ANR	2663958	IfStatement	if ( ! ( n & 0x3 || n > 0x7ffffff ) )		2663924	4					
ANR	2663959	Condition	! ( n & 0x3 || n > 0x7ffffff )	461:5:10126:10152	2663924	0	True				
ANR	2663960	UnaryOperationExpression	! ( n & 0x3 || n > 0x7ffffff )		2663924	0					
ANR	2663961	UnaryOperator	!		2663924	0					
ANR	2663962	OrExpression	n & 0x3 || n > 0x7ffffff		2663924	1		||			
ANR	2663963	BitAndExpression	n & 0x3		2663924	0		&			
ANR	2663964	Identifier	n		2663924	0					
ANR	2663965	PrimaryExpression	0x3		2663924	1					
ANR	2663966	RelationalExpression	n > 0x7ffffff		2663924	1		>			
ANR	2663967	Identifier	n		2663924	0					
ANR	2663968	PrimaryExpression	0x7ffffff		2663924	1					
ANR	2663969	CompoundStatement		8:34:238:238	2663924	1					
ANR	2663970	ExpressionStatement	n -= addr	462:2:10159:10168	2663924	0	True				
ANR	2663971	AssignmentExpression	n -= addr		2663924	0		-=			
ANR	2663972	Identifier	n		2663924	0					
ANR	2663973	Identifier	addr		2663924	1					
ANR	2663974	ExpressionStatement	data = k	463:2:10172:10180	2663924	1	True				
ANR	2663975	AssignmentExpression	data = k		2663924	0		=			
ANR	2663976	Identifier	data		2663924	0					
ANR	2663977	Identifier	k		2663924	1					
ANR	2663978	IfStatement	if ( n < 0 )		2663924	2					
ANR	2663979	Condition	n < 0	464:6:10188:10192	2663924	0	True				
ANR	2663980	RelationalExpression	n < 0		2663924	0		<			
ANR	2663981	Identifier	n		2663924	0					
ANR	2663982	PrimaryExpression	0		2663924	1					
ANR	2663983	CompoundStatement		11:13:278:278	2663924	1					
ANR	2663984	ExpressionStatement	n *= - 1	465:3:10200:10207	2663924	0	True				
ANR	2663985	AssignmentExpression	n *= - 1		2663924	0		*=			
ANR	2663986	Identifier	n		2663924	0					
ANR	2663987	UnaryOperationExpression	- 1		2663924	1					
ANR	2663988	UnaryOperator	-		2663924	0					
ANR	2663989	PrimaryExpression	1		2663924	1					
ANR	2663990	ExpressionStatement	a = ( n << 3 ) - 1	466:3:10212:10228	2663924	1	True				
ANR	2663991	AssignmentExpression	a = ( n << 3 ) - 1		2663924	0		=			
ANR	2663992	Identifier	a		2663924	0					
ANR	2663993	AdditiveExpression	( n << 3 ) - 1		2663924	1		-			
ANR	2663994	ShiftExpression	n << 3		2663924	0		<<			
ANR	2663995	Identifier	n		2663924	0					
ANR	2663996	PrimaryExpression	3		2663924	1					
ANR	2663997	PrimaryExpression	1		2663924	1					
ANR	2663998	ExpressionStatement	data |= ( 0xff - a ) << 24	467:3:10233:10257	2663924	2	True				
ANR	2663999	AssignmentExpression	data |= ( 0xff - a ) << 24		2663924	0		|=			
ANR	2664000	Identifier	data		2663924	0					
ANR	2664001	ShiftExpression	( 0xff - a ) << 24		2663924	1		<<			
ANR	2664002	AdditiveExpression	0xff - a		2663924	0		-			
ANR	2664003	PrimaryExpression	0xff		2663924	0					
ANR	2664004	Identifier	a		2663924	1					
ANR	2664005	PrimaryExpression	24		2663924	1					
ANR	2664006	ExpressionStatement	"a = calcNegOffset ( n , 5 )"	469:3:10263:10286	2663924	3	True				
ANR	2664007	AssignmentExpression	"a = calcNegOffset ( n , 5 )"		2663924	0		=			
ANR	2664008	Identifier	a		2663924	0					
ANR	2664009	CallExpression	"calcNegOffset ( n , 5 )"		2663924	1					
ANR	2664010	Callee	calcNegOffset		2663924	0					
ANR	2664011	Identifier	calcNegOffset		2663924	0					
ANR	2664012	ArgumentList	n		2663924	1					
ANR	2664013	Argument	n		2663924	0					
ANR	2664014	Identifier	n		2663924	0					
ANR	2664015	Argument	5		2663924	1					
ANR	2664016	PrimaryExpression	5		2663924	0					
ANR	2664017	ExpressionStatement	data |= a << 16	470:3:10291:10306	2663924	4	True				
ANR	2664018	AssignmentExpression	data |= a << 16		2663924	0		|=			
ANR	2664019	Identifier	data		2663924	0					
ANR	2664020	ShiftExpression	a << 16		2663924	1		<<			
ANR	2664021	Identifier	a		2663924	0					
ANR	2664022	PrimaryExpression	16		2663924	1					
ANR	2664023	ExpressionStatement	"a = calcNegOffset ( n , 13 )"	472:3:10312:10336	2663924	5	True				
ANR	2664024	AssignmentExpression	"a = calcNegOffset ( n , 13 )"		2663924	0		=			
ANR	2664025	Identifier	a		2663924	0					
ANR	2664026	CallExpression	"calcNegOffset ( n , 13 )"		2663924	1					
ANR	2664027	Callee	calcNegOffset		2663924	0					
ANR	2664028	Identifier	calcNegOffset		2663924	0					
ANR	2664029	ArgumentList	n		2663924	1					
ANR	2664030	Argument	n		2663924	0					
ANR	2664031	Identifier	n		2663924	0					
ANR	2664032	Argument	13		2663924	1					
ANR	2664033	PrimaryExpression	13		2663924	0					
ANR	2664034	ExpressionStatement	data |= a << 8	473:3:10341:10355	2663924	6	True				
ANR	2664035	AssignmentExpression	data |= a << 8		2663924	0		|=			
ANR	2664036	Identifier	data		2663924	0					
ANR	2664037	ShiftExpression	a << 8		2663924	1		<<			
ANR	2664038	Identifier	a		2663924	0					
ANR	2664039	PrimaryExpression	8		2663924	1					
ANR	2664040	ElseStatement	else		2663924	0					
ANR	2664041	CompoundStatement		21:9:449:449	2663924	0					
ANR	2664042	ExpressionStatement	data |= ( n & 31 ) << 27	475:3:10371:10393	2663924	0	True				
ANR	2664043	AssignmentExpression	data |= ( n & 31 ) << 27		2663924	0		|=			
ANR	2664044	Identifier	data		2663924	0					
ANR	2664045	ShiftExpression	( n & 31 ) << 27		2663924	1		<<			
ANR	2664046	BitAndExpression	n & 31		2663924	0		&			
ANR	2664047	Identifier	n		2663924	0					
ANR	2664048	PrimaryExpression	31		2663924	1					
ANR	2664049	PrimaryExpression	27		2663924	1					
ANR	2664050	ExpressionStatement	data |= ( 0xff & ( n >> 5 ) ) << 16	476:3:10398:10429	2663924	1	True				
ANR	2664051	AssignmentExpression	data |= ( 0xff & ( n >> 5 ) ) << 16		2663924	0		|=			
ANR	2664052	Identifier	data		2663924	0					
ANR	2664053	ShiftExpression	( 0xff & ( n >> 5 ) ) << 16		2663924	1		<<			
ANR	2664054	BitAndExpression	0xff & ( n >> 5 )		2663924	0		&			
ANR	2664055	PrimaryExpression	0xff		2663924	0					
ANR	2664056	ShiftExpression	n >> 5		2663924	1		>>			
ANR	2664057	Identifier	n		2663924	0					
ANR	2664058	PrimaryExpression	5		2663924	1					
ANR	2664059	PrimaryExpression	16		2663924	1					
ANR	2664060	ExpressionStatement	data |= ( 0xff & ( n >> 13 ) ) << 8	477:3:10434:10465	2663924	2	True				
ANR	2664061	AssignmentExpression	data |= ( 0xff & ( n >> 13 ) ) << 8		2663924	0		|=			
ANR	2664062	Identifier	data		2663924	0					
ANR	2664063	ShiftExpression	( 0xff & ( n >> 13 ) ) << 8		2663924	1		<<			
ANR	2664064	BitAndExpression	0xff & ( n >> 13 )		2663924	0		&			
ANR	2664065	PrimaryExpression	0xff		2663924	0					
ANR	2664066	ShiftExpression	n >> 13		2663924	1		>>			
ANR	2664067	Identifier	n		2663924	0					
ANR	2664068	PrimaryExpression	13		2663924	1					
ANR	2664069	PrimaryExpression	8		2663924	1					
ANR	2664070	ReturnStatement	return data ;	481:1:10476:10487	2663924	5	True				
ANR	2664071	Identifier	data		2663924	0					
ANR	2664072	ReturnType	static ut32		2663924	1					
ANR	2664073	Identifier	bdot		2663924	2					
ANR	2664074	ParameterList	"ArmOp * op , ut64 addr , int k"		2663924	3					
ANR	2664075	Parameter	ArmOp * op	454:17:9887:9895	2663924	0	True				
ANR	2664076	ParameterType	ArmOp *		2663924	0					
ANR	2664077	Identifier	op		2663924	1					
ANR	2664078	Parameter	ut64 addr	454:28:9898:9906	2663924	1	True				
ANR	2664079	ParameterType	ut64		2663924	0					
ANR	2664080	Identifier	addr		2663924	1					
ANR	2664081	Parameter	int k	454:39:9909:9913	2663924	2	True				
ANR	2664082	ParameterType	int		2663924	0					
ANR	2664083	Identifier	k		2663924	1					
ANR	2664084	CFGEntryNode	ENTRY		2663924		True				
ANR	2664085	CFGExitNode	EXIT		2663924		True				
ANR	2664086	Symbol	UT32_MAX		2663924						
ANR	2664087	Symbol	op		2663924						
ANR	2664088	Symbol	a		2663924						
ANR	2664089	Symbol	calcNegOffset		2663924						
ANR	2664090	Symbol	data		2663924						
ANR	2664091	Symbol	* op		2663924						
ANR	2664092	Symbol	k		2663924						
ANR	2664093	Symbol	op -> operands [ 0 ] . immediate		2663924						
ANR	2664094	Symbol	n		2663924						
ANR	2664095	Symbol	* * op		2663924						
ANR	2664096	Symbol	* op -> operands		2663924						
ANR	2664097	Symbol	addr		2663924						
ANR	2664098	Symbol	op -> operands		2663924						
ANR	2664099	Function	mem_barrier	484:0:10492:10987							
ANR	2664100	FunctionDef	"mem_barrier (ArmOp * op , ut64 addr , int k)"		2664099	0					
ANR	2664101	CompoundStatement		484:54:10546:10987	2664099	0					
ANR	2664102	IdentifierDeclStatement	ut32 data = UT32_MAX ;	485:1:10549:10569	2664099	0	True				
ANR	2664103	IdentifierDecl	data = UT32_MAX		2664099	0					
ANR	2664104	IdentifierDeclType	ut32		2664099	0					
ANR	2664105	Identifier	data		2664099	1					
ANR	2664106	AssignmentExpression	data = UT32_MAX		2664099	2		=			
ANR	2664107	Identifier	UT32_MAX		2664099	0					
ANR	2664108	Identifier	UT32_MAX		2664099	1					
ANR	2664109	ExpressionStatement	data = k	486:1:10572:10580	2664099	1	True				
ANR	2664110	AssignmentExpression	data = k		2664099	0		=			
ANR	2664111	Identifier	data		2664099	0					
ANR	2664112	Identifier	k		2664099	1					
ANR	2664113	IfStatement	"if ( ! strncmp ( op -> mnemonic , ""isb"" , 3 ) )"		2664099	2					
ANR	2664114	Condition	"! strncmp ( op -> mnemonic , ""isb"" , 3 )"	487:5:10587:10619	2664099	0	True				
ANR	2664115	UnaryOperationExpression	"! strncmp ( op -> mnemonic , ""isb"" , 3 )"		2664099	0					
ANR	2664116	UnaryOperator	!		2664099	0					
ANR	2664117	CallExpression	"strncmp ( op -> mnemonic , ""isb"" , 3 )"		2664099	1					
ANR	2664118	Callee	strncmp		2664099	0					
ANR	2664119	Identifier	strncmp		2664099	0					
ANR	2664120	ArgumentList	op -> mnemonic		2664099	1					
ANR	2664121	Argument	op -> mnemonic		2664099	0					
ANR	2664122	PtrMemberAccess	op -> mnemonic		2664099	0					
ANR	2664123	Identifier	op		2664099	0					
ANR	2664124	Identifier	mnemonic		2664099	1					
ANR	2664125	Argument	"""isb"""		2664099	1					
ANR	2664126	PrimaryExpression	"""isb"""		2664099	0					
ANR	2664127	Argument	3		2664099	2					
ANR	2664128	PrimaryExpression	3		2664099	0					
ANR	2664129	CompoundStatement		4:40:75:75	2664099	1					
ANR	2664130	IfStatement	if ( op -> operands [ 0 ] . mem_option == 15 || op -> operands [ 0 ] . type == ARM_NOTYPE )		2664099	0					
ANR	2664131	Condition	op -> operands [ 0 ] . mem_option == 15 || op -> operands [ 0 ] . type == ARM_NOTYPE	488:6:10630:10699	2664099	0	True				
ANR	2664132	OrExpression	op -> operands [ 0 ] . mem_option == 15 || op -> operands [ 0 ] . type == ARM_NOTYPE		2664099	0		||			
ANR	2664133	EqualityExpression	op -> operands [ 0 ] . mem_option == 15		2664099	0		==			
ANR	2664134	MemberAccess	op -> operands [ 0 ] . mem_option		2664099	0					
ANR	2664135	ArrayIndexing	op -> operands [ 0 ]		2664099	0					
ANR	2664136	PtrMemberAccess	op -> operands		2664099	0					
ANR	2664137	Identifier	op		2664099	0					
ANR	2664138	Identifier	operands		2664099	1					
ANR	2664139	PrimaryExpression	0		2664099	1					
ANR	2664140	Identifier	mem_option		2664099	1					
ANR	2664141	PrimaryExpression	15		2664099	1					
ANR	2664142	EqualityExpression	op -> operands [ 0 ] . type == ARM_NOTYPE		2664099	1		==			
ANR	2664143	MemberAccess	op -> operands [ 0 ] . type		2664099	0					
ANR	2664144	ArrayIndexing	op -> operands [ 0 ]		2664099	0					
ANR	2664145	PtrMemberAccess	op -> operands		2664099	0					
ANR	2664146	Identifier	op		2664099	0					
ANR	2664147	Identifier	operands		2664099	1					
ANR	2664148	PrimaryExpression	0		2664099	1					
ANR	2664149	Identifier	type		2664099	1					
ANR	2664150	Identifier	ARM_NOTYPE		2664099	1					
ANR	2664151	CompoundStatement		5:78:155:155	2664099	1					
ANR	2664152	ReturnStatement	return data ;	489:3:10707:10718	2664099	0	True				
ANR	2664153	Identifier	data		2664099	0					
ANR	2664154	ElseStatement	else		2664099	0					
ANR	2664155	CompoundStatement		7:9:182:182	2664099	0					
ANR	2664156	ReturnStatement	return UT32_MAX ;	491:3:10734:10749	2664099	0	True				
ANR	2664157	Identifier	UT32_MAX		2664099	0					
ANR	2664158	IfStatement	if ( op -> operands [ 0 ] . type == ARM_MEM_OPT )		2664099	3					
ANR	2664159	Condition	op -> operands [ 0 ] . type == ARM_MEM_OPT	494:5:10763:10797	2664099	0	True				
ANR	2664160	EqualityExpression	op -> operands [ 0 ] . type == ARM_MEM_OPT		2664099	0		==			
ANR	2664161	MemberAccess	op -> operands [ 0 ] . type		2664099	0					
ANR	2664162	ArrayIndexing	op -> operands [ 0 ]		2664099	0					
ANR	2664163	PtrMemberAccess	op -> operands		2664099	0					
ANR	2664164	Identifier	op		2664099	0					
ANR	2664165	Identifier	operands		2664099	1					
ANR	2664166	PrimaryExpression	0		2664099	1					
ANR	2664167	Identifier	type		2664099	1					
ANR	2664168	Identifier	ARM_MEM_OPT		2664099	1					
ANR	2664169	CompoundStatement		11:42:253:253	2664099	1					
ANR	2664170	ExpressionStatement	data |= op -> operands [ 0 ] . mem_option << 16	495:2:10804:10844	2664099	0	True				
ANR	2664171	AssignmentExpression	data |= op -> operands [ 0 ] . mem_option << 16		2664099	0		|=			
ANR	2664172	Identifier	data		2664099	0					
ANR	2664173	ShiftExpression	op -> operands [ 0 ] . mem_option << 16		2664099	1		<<			
ANR	2664174	MemberAccess	op -> operands [ 0 ] . mem_option		2664099	0					
ANR	2664175	ArrayIndexing	op -> operands [ 0 ]		2664099	0					
ANR	2664176	PtrMemberAccess	op -> operands		2664099	0					
ANR	2664177	Identifier	op		2664099	0					
ANR	2664178	Identifier	operands		2664099	1					
ANR	2664179	PrimaryExpression	0		2664099	1					
ANR	2664180	Identifier	mem_option		2664099	1					
ANR	2664181	PrimaryExpression	16		2664099	1					
ANR	2664182	ElseStatement	else		2664099	0					
ANR	2664183	IfStatement	if ( op -> operands_count == 1 && op -> operands [ 0 ] . type == ARM_CONSTANT )		2664099	0					
ANR	2664184	Condition	op -> operands_count == 1 && op -> operands [ 0 ] . type == ARM_CONSTANT	496:12:10858:10920	2664099	0	True				
ANR	2664185	AndExpression	op -> operands_count == 1 && op -> operands [ 0 ] . type == ARM_CONSTANT		2664099	0		&&			
ANR	2664186	EqualityExpression	op -> operands_count == 1		2664099	0		==			
ANR	2664187	PtrMemberAccess	op -> operands_count		2664099	0					
ANR	2664188	Identifier	op		2664099	0					
ANR	2664189	Identifier	operands_count		2664099	1					
ANR	2664190	PrimaryExpression	1		2664099	1					
ANR	2664191	EqualityExpression	op -> operands [ 0 ] . type == ARM_CONSTANT		2664099	1		==			
ANR	2664192	MemberAccess	op -> operands [ 0 ] . type		2664099	0					
ANR	2664193	ArrayIndexing	op -> operands [ 0 ]		2664099	0					
ANR	2664194	PtrMemberAccess	op -> operands		2664099	0					
ANR	2664195	Identifier	op		2664099	0					
ANR	2664196	Identifier	operands		2664099	1					
ANR	2664197	PrimaryExpression	0		2664099	1					
ANR	2664198	Identifier	type		2664099	1					
ANR	2664199	Identifier	ARM_CONSTANT		2664099	1					
ANR	2664200	CompoundStatement		13:77:376:376	2664099	1					
ANR	2664201	ExpressionStatement	data |= ( op -> operands [ 0 ] . immediate << 16 )	497:2:10927:10968	2664099	0	True				
ANR	2664202	AssignmentExpression	data |= ( op -> operands [ 0 ] . immediate << 16 )		2664099	0		|=			
ANR	2664203	Identifier	data		2664099	0					
ANR	2664204	ShiftExpression	op -> operands [ 0 ] . immediate << 16		2664099	1		<<			
ANR	2664205	MemberAccess	op -> operands [ 0 ] . immediate		2664099	0					
ANR	2664206	ArrayIndexing	op -> operands [ 0 ]		2664099	0					
ANR	2664207	PtrMemberAccess	op -> operands		2664099	0					
ANR	2664208	Identifier	op		2664099	0					
ANR	2664209	Identifier	operands		2664099	1					
ANR	2664210	PrimaryExpression	0		2664099	1					
ANR	2664211	Identifier	immediate		2664099	1					
ANR	2664212	PrimaryExpression	16		2664099	1					
ANR	2664213	ReturnStatement	return data ;	499:1:10974:10985	2664099	4	True				
ANR	2664214	Identifier	data		2664099	0					
ANR	2664215	ReturnType	static ut32		2664099	1					
ANR	2664216	Identifier	mem_barrier		2664099	2					
ANR	2664217	ParameterList	"ArmOp * op , ut64 addr , int k"		2664099	3					
ANR	2664218	Parameter	ArmOp * op	484:25:10517:10525	2664099	0	True				
ANR	2664219	ParameterType	ArmOp *		2664099	0					
ANR	2664220	Identifier	op		2664099	1					
ANR	2664221	Parameter	ut64 addr	484:36:10528:10536	2664099	1	True				
ANR	2664222	ParameterType	ut64		2664099	0					
ANR	2664223	Identifier	addr		2664099	1					
ANR	2664224	Parameter	int k	484:47:10539:10543	2664099	2	True				
ANR	2664225	ParameterType	int		2664099	0					
ANR	2664226	Identifier	k		2664099	1					
ANR	2664227	CFGEntryNode	ENTRY		2664099		True				
ANR	2664228	CFGExitNode	EXIT		2664099		True				
ANR	2664229	Symbol	UT32_MAX		2664099						
ANR	2664230	Symbol	op		2664099						
ANR	2664231	Symbol	ARM_CONSTANT		2664099						
ANR	2664232	Symbol	ARM_MEM_OPT		2664099						
ANR	2664233	Symbol	data		2664099						
ANR	2664234	Symbol	* op		2664099						
ANR	2664235	Symbol	op -> mnemonic		2664099						
ANR	2664236	Symbol	ARM_NOTYPE		2664099						
ANR	2664237	Symbol	k		2664099						
ANR	2664238	Symbol	op -> operands [ 0 ] . immediate		2664099						
ANR	2664239	Symbol	op -> operands [ 0 ] . mem_option		2664099						
ANR	2664240	Symbol	* * op		2664099						
ANR	2664241	Symbol	strncmp		2664099						
ANR	2664242	Symbol	* op -> operands		2664099						
ANR	2664243	Symbol	op -> operands_count		2664099						
ANR	2664244	Symbol	op -> operands [ 0 ] . type		2664099						
ANR	2664245	Symbol	addr		2664099						
ANR	2664246	Symbol	op -> operands		2664099						
ANR	2664247	Function	msr	504:0:11019:12863							
ANR	2664248	FunctionDef	"msr (ArmOp * op , int w)"		2664247	0					
ANR	2664249	CompoundStatement		504:34:11053:12863	2664247	0					
ANR	2664250	IdentifierDeclStatement	ut32 data = UT32_MAX ;	505:1:11056:11076	2664247	0	True				
ANR	2664251	IdentifierDecl	data = UT32_MAX		2664247	0					
ANR	2664252	IdentifierDeclType	ut32		2664247	0					
ANR	2664253	Identifier	data		2664247	1					
ANR	2664254	AssignmentExpression	data = UT32_MAX		2664247	2		=			
ANR	2664255	Identifier	UT32_MAX		2664247	0					
ANR	2664256	Identifier	UT32_MAX		2664247	1					
ANR	2664257	IdentifierDeclStatement	ut32 seq_data = UT32_MAX ;	506:1:11079:11103	2664247	1	True				
ANR	2664258	IdentifierDecl	seq_data = UT32_MAX		2664247	0					
ANR	2664259	IdentifierDeclType	ut32		2664247	0					
ANR	2664260	Identifier	seq_data		2664247	1					
ANR	2664261	AssignmentExpression	seq_data = UT32_MAX		2664247	2		=			
ANR	2664262	Identifier	UT32_MAX		2664247	0					
ANR	2664263	Identifier	UT32_MAX		2664247	1					
ANR	2664264	IdentifierDeclStatement	int is_immediate = 0 ;	507:1:11106:11126	2664247	2	True				
ANR	2664265	IdentifierDecl	is_immediate = 0		2664247	0					
ANR	2664266	IdentifierDeclType	int		2664247	0					
ANR	2664267	Identifier	is_immediate		2664247	1					
ANR	2664268	AssignmentExpression	is_immediate = 0		2664247	2		=			
ANR	2664269	Identifier	is_immediate		2664247	0					
ANR	2664270	PrimaryExpression	0		2664247	1					
ANR	2664271	IdentifierDeclStatement	int i ;	508:1:11129:11134	2664247	3	True				
ANR	2664272	IdentifierDecl	i		2664247	0					
ANR	2664273	IdentifierDeclType	int		2664247	0					
ANR	2664274	Identifier	i		2664247	1					
ANR	2664275	IdentifierDeclStatement	"ut32 r , b ;"	509:1:11137:11146	2664247	4	True				
ANR	2664276	IdentifierDecl	r		2664247	0					
ANR	2664277	IdentifierDeclType	ut32		2664247	0					
ANR	2664278	Identifier	r		2664247	1					
ANR	2664279	IdentifierDecl	b		2664247	1					
ANR	2664280	IdentifierDeclType	ut32		2664247	0					
ANR	2664281	Identifier	b		2664247	1					
ANR	2664282	IfStatement	if ( w )		2664247	5					
ANR	2664283	Condition	w	511:5:11180:11180	2664247	0	True				
ANR	2664284	Identifier	w		2664247	0					
ANR	2664285	CompoundStatement		8:8:129:129	2664247	1					
ANR	2664286	IfStatement	if ( op -> operands [ 1 ] . reg_type != ( ARM_REG64 | ARM_SP ) )		2664247	0					
ANR	2664287	Condition	op -> operands [ 1 ] . reg_type != ( ARM_REG64 | ARM_SP )	512:6:11191:11238	2664247	0	True				
ANR	2664288	EqualityExpression	op -> operands [ 1 ] . reg_type != ( ARM_REG64 | ARM_SP )		2664247	0		!=			
ANR	2664289	MemberAccess	op -> operands [ 1 ] . reg_type		2664247	0					
ANR	2664290	ArrayIndexing	op -> operands [ 1 ]		2664247	0					
ANR	2664291	PtrMemberAccess	op -> operands		2664247	0					
ANR	2664292	Identifier	op		2664247	0					
ANR	2664293	Identifier	operands		2664247	1					
ANR	2664294	PrimaryExpression	1		2664247	1					
ANR	2664295	Identifier	reg_type		2664247	1					
ANR	2664296	InclusiveOrExpression	ARM_REG64 | ARM_SP		2664247	1		|			
ANR	2664297	Identifier	ARM_REG64		2664247	0					
ANR	2664298	Identifier	ARM_SP		2664247	1					
ANR	2664299	CompoundStatement		9:56:187:187	2664247	1					
ANR	2664300	IfStatement	if ( op -> operands [ 1 ] . type == ARM_CONSTANT )		2664247	0					
ANR	2664301	Condition	op -> operands [ 1 ] . type == ARM_CONSTANT	513:7:11250:11285	2664247	0	True				
ANR	2664302	EqualityExpression	op -> operands [ 1 ] . type == ARM_CONSTANT		2664247	0		==			
ANR	2664303	MemberAccess	op -> operands [ 1 ] . type		2664247	0					
ANR	2664304	ArrayIndexing	op -> operands [ 1 ]		2664247	0					
ANR	2664305	PtrMemberAccess	op -> operands		2664247	0					
ANR	2664306	Identifier	op		2664247	0					
ANR	2664307	Identifier	operands		2664247	1					
ANR	2664308	PrimaryExpression	1		2664247	1					
ANR	2664309	Identifier	type		2664247	1					
ANR	2664310	Identifier	ARM_CONSTANT		2664247	1					
ANR	2664311	CompoundStatement		10:45:234:234	2664247	1					
ANR	2664312	ForStatement	for ( i = 0 ; msr_const [ i ] . name ; i ++ )		2664247	0					
ANR	2664313	ForInit	i = 0 ;	514:9:11299:11304	2664247	0	True				
ANR	2664314	AssignmentExpression	i = 0		2664247	0		=			
ANR	2664315	Identifier	i		2664247	0					
ANR	2664316	PrimaryExpression	0		2664247	1					
ANR	2664317	Condition	msr_const [ i ] . name	514:16:11306:11322	2664247	1	True				
ANR	2664318	MemberAccess	msr_const [ i ] . name		2664247	0					
ANR	2664319	ArrayIndexing	msr_const [ i ]		2664247	0					
ANR	2664320	Identifier	msr_const		2664247	0					
ANR	2664321	Identifier	i		2664247	1					
ANR	2664322	Identifier	name		2664247	1					
ANR	2664323	PostIncDecOperationExpression	i ++	514:35:11325:11327	2664247	2	True				
ANR	2664324	Identifier	i		2664247	0					
ANR	2664325	IncDec	++		2664247	1					
ANR	2664326	CompoundStatement		11:40:276:276	2664247	3					
ANR	2664327	IfStatement	if ( op -> operands [ 1 ] . immediate == msr_const [ i ] . val )		2664247	0					
ANR	2664328	Condition	op -> operands [ 1 ] . immediate == msr_const [ i ] . val	515:9:11341:11385	2664247	0	True				
ANR	2664329	EqualityExpression	op -> operands [ 1 ] . immediate == msr_const [ i ] . val		2664247	0		==			
ANR	2664330	MemberAccess	op -> operands [ 1 ] . immediate		2664247	0					
ANR	2664331	ArrayIndexing	op -> operands [ 1 ]		2664247	0					
ANR	2664332	PtrMemberAccess	op -> operands		2664247	0					
ANR	2664333	Identifier	op		2664247	0					
ANR	2664334	Identifier	operands		2664247	1					
ANR	2664335	PrimaryExpression	1		2664247	1					
ANR	2664336	Identifier	immediate		2664247	1					
ANR	2664337	MemberAccess	msr_const [ i ] . val		2664247	1					
ANR	2664338	ArrayIndexing	msr_const [ i ]		2664247	0					
ANR	2664339	Identifier	msr_const		2664247	0					
ANR	2664340	Identifier	i		2664247	1					
ANR	2664341	Identifier	val		2664247	1					
ANR	2664342	CompoundStatement		12:56:334:334	2664247	1					
ANR	2664343	ExpressionStatement	op -> operands [ 1 ] . sp_val = msr_const [ i ] . val	516:6:11396:11437	2664247	0	True				
ANR	2664344	AssignmentExpression	op -> operands [ 1 ] . sp_val = msr_const [ i ] . val		2664247	0		=			
ANR	2664345	MemberAccess	op -> operands [ 1 ] . sp_val		2664247	0					
ANR	2664346	ArrayIndexing	op -> operands [ 1 ]		2664247	0					
ANR	2664347	PtrMemberAccess	op -> operands		2664247	0					
ANR	2664348	Identifier	op		2664247	0					
ANR	2664349	Identifier	operands		2664247	1					
ANR	2664350	PrimaryExpression	1		2664247	1					
ANR	2664351	Identifier	sp_val		2664247	1					
ANR	2664352	MemberAccess	msr_const [ i ] . val		2664247	1					
ANR	2664353	ArrayIndexing	msr_const [ i ]		2664247	0					
ANR	2664354	Identifier	msr_const		2664247	0					
ANR	2664355	Identifier	i		2664247	1					
ANR	2664356	Identifier	val		2664247	1					
ANR	2664357	ExpressionStatement	op -> operands [ 1 ] . reg = op -> operands [ 1 ] . immediate	517:6:11445:11492	2664247	1	True				
ANR	2664358	AssignmentExpression	op -> operands [ 1 ] . reg = op -> operands [ 1 ] . immediate		2664247	0		=			
ANR	2664359	MemberAccess	op -> operands [ 1 ] . reg		2664247	0					
ANR	2664360	ArrayIndexing	op -> operands [ 1 ]		2664247	0					
ANR	2664361	PtrMemberAccess	op -> operands		2664247	0					
ANR	2664362	Identifier	op		2664247	0					
ANR	2664363	Identifier	operands		2664247	1					
ANR	2664364	PrimaryExpression	1		2664247	1					
ANR	2664365	Identifier	reg		2664247	1					
ANR	2664366	MemberAccess	op -> operands [ 1 ] . immediate		2664247	1					
ANR	2664367	ArrayIndexing	op -> operands [ 1 ]		2664247	0					
ANR	2664368	PtrMemberAccess	op -> operands		2664247	0					
ANR	2664369	Identifier	op		2664247	0					
ANR	2664370	Identifier	operands		2664247	1					
ANR	2664371	PrimaryExpression	1		2664247	1					
ANR	2664372	Identifier	immediate		2664247	1					
ANR	2664373	BreakStatement	break ;	518:6:11500:11505	2664247	2	True				
ANR	2664374	ElseStatement	else		2664247	0					
ANR	2664375	CompoundStatement		18:10:476:476	2664247	0					
ANR	2664376	ReturnStatement	return data ;	522:4:11536:11547	2664247	0	True				
ANR	2664377	Identifier	data		2664247	0					
ANR	2664378	ExpressionStatement	r = op -> operands [ 0 ] . reg	525:2:11560:11583	2664247	1	True				
ANR	2664379	AssignmentExpression	r = op -> operands [ 0 ] . reg		2664247	0		=			
ANR	2664380	Identifier	r		2664247	0					
ANR	2664381	MemberAccess	op -> operands [ 0 ] . reg		2664247	1					
ANR	2664382	ArrayIndexing	op -> operands [ 0 ]		2664247	0					
ANR	2664383	PtrMemberAccess	op -> operands		2664247	0					
ANR	2664384	Identifier	op		2664247	0					
ANR	2664385	Identifier	operands		2664247	1					
ANR	2664386	PrimaryExpression	0		2664247	1					
ANR	2664387	Identifier	reg		2664247	1					
ANR	2664388	ExpressionStatement	b = op -> operands [ 1 ] . sp_val	526:2:11587:11613	2664247	2	True				
ANR	2664389	AssignmentExpression	b = op -> operands [ 1 ] . sp_val		2664247	0		=			
ANR	2664390	Identifier	b		2664247	0					
ANR	2664391	MemberAccess	op -> operands [ 1 ] . sp_val		2664247	1					
ANR	2664392	ArrayIndexing	op -> operands [ 1 ]		2664247	0					
ANR	2664393	PtrMemberAccess	op -> operands		2664247	0					
ANR	2664394	Identifier	op		2664247	0					
ANR	2664395	Identifier	operands		2664247	1					
ANR	2664396	PrimaryExpression	1		2664247	1					
ANR	2664397	Identifier	sp_val		2664247	1					
ANR	2664398	ElseStatement	else		2664247	0					
ANR	2664399	CompoundStatement		24:8:569:569	2664247	0					
ANR	2664400	IfStatement	if ( op -> operands [ 0 ] . reg_type != ( ARM_REG64 | ARM_SP ) )		2664247	0					
ANR	2664401	Condition	op -> operands [ 0 ] . reg_type != ( ARM_REG64 | ARM_SP )	528:6:11631:11678	2664247	0	True				
ANR	2664402	EqualityExpression	op -> operands [ 0 ] . reg_type != ( ARM_REG64 | ARM_SP )		2664247	0		!=			
ANR	2664403	MemberAccess	op -> operands [ 0 ] . reg_type		2664247	0					
ANR	2664404	ArrayIndexing	op -> operands [ 0 ]		2664247	0					
ANR	2664405	PtrMemberAccess	op -> operands		2664247	0					
ANR	2664406	Identifier	op		2664247	0					
ANR	2664407	Identifier	operands		2664247	1					
ANR	2664408	PrimaryExpression	0		2664247	1					
ANR	2664409	Identifier	reg_type		2664247	1					
ANR	2664410	InclusiveOrExpression	ARM_REG64 | ARM_SP		2664247	1		|			
ANR	2664411	Identifier	ARM_REG64		2664247	0					
ANR	2664412	Identifier	ARM_SP		2664247	1					
ANR	2664413	CompoundStatement		25:56:627:627	2664247	1					
ANR	2664414	IfStatement	if ( op -> operands [ 0 ] . type == ARM_CONSTANT )		2664247	0					
ANR	2664415	Condition	op -> operands [ 0 ] . type == ARM_CONSTANT	529:7:11690:11725	2664247	0	True				
ANR	2664416	EqualityExpression	op -> operands [ 0 ] . type == ARM_CONSTANT		2664247	0		==			
ANR	2664417	MemberAccess	op -> operands [ 0 ] . type		2664247	0					
ANR	2664418	ArrayIndexing	op -> operands [ 0 ]		2664247	0					
ANR	2664419	PtrMemberAccess	op -> operands		2664247	0					
ANR	2664420	Identifier	op		2664247	0					
ANR	2664421	Identifier	operands		2664247	1					
ANR	2664422	PrimaryExpression	0		2664247	1					
ANR	2664423	Identifier	type		2664247	1					
ANR	2664424	Identifier	ARM_CONSTANT		2664247	1					
ANR	2664425	CompoundStatement		26:45:674:674	2664247	1					
ANR	2664426	ForStatement	for ( i = 0 ; msr_const [ i ] . name ; i ++ )		2664247	0					
ANR	2664427	ForInit	i = 0 ;	530:9:11739:11744	2664247	0	True				
ANR	2664428	AssignmentExpression	i = 0		2664247	0		=			
ANR	2664429	Identifier	i		2664247	0					
ANR	2664430	PrimaryExpression	0		2664247	1					
ANR	2664431	Condition	msr_const [ i ] . name	530:16:11746:11762	2664247	1	True				
ANR	2664432	MemberAccess	msr_const [ i ] . name		2664247	0					
ANR	2664433	ArrayIndexing	msr_const [ i ]		2664247	0					
ANR	2664434	Identifier	msr_const		2664247	0					
ANR	2664435	Identifier	i		2664247	1					
ANR	2664436	Identifier	name		2664247	1					
ANR	2664437	PostIncDecOperationExpression	i ++	530:35:11765:11767	2664247	2	True				
ANR	2664438	Identifier	i		2664247	0					
ANR	2664439	IncDec	++		2664247	1					
ANR	2664440	CompoundStatement		27:40:716:716	2664247	3					
ANR	2664441	IfStatement	if ( op -> operands [ 0 ] . immediate == msr_const [ i ] . val )		2664247	0					
ANR	2664442	Condition	op -> operands [ 0 ] . immediate == msr_const [ i ] . val	531:9:11781:11825	2664247	0	True				
ANR	2664443	EqualityExpression	op -> operands [ 0 ] . immediate == msr_const [ i ] . val		2664247	0		==			
ANR	2664444	MemberAccess	op -> operands [ 0 ] . immediate		2664247	0					
ANR	2664445	ArrayIndexing	op -> operands [ 0 ]		2664247	0					
ANR	2664446	PtrMemberAccess	op -> operands		2664247	0					
ANR	2664447	Identifier	op		2664247	0					
ANR	2664448	Identifier	operands		2664247	1					
ANR	2664449	PrimaryExpression	0		2664247	1					
ANR	2664450	Identifier	immediate		2664247	1					
ANR	2664451	MemberAccess	msr_const [ i ] . val		2664247	1					
ANR	2664452	ArrayIndexing	msr_const [ i ]		2664247	0					
ANR	2664453	Identifier	msr_const		2664247	0					
ANR	2664454	Identifier	i		2664247	1					
ANR	2664455	Identifier	val		2664247	1					
ANR	2664456	CompoundStatement		28:56:774:774	2664247	1					
ANR	2664457	ExpressionStatement	op -> operands [ 0 ] . sp_val = msr_const [ i ] . val	532:6:11836:11877	2664247	0	True				
ANR	2664458	AssignmentExpression	op -> operands [ 0 ] . sp_val = msr_const [ i ] . val		2664247	0		=			
ANR	2664459	MemberAccess	op -> operands [ 0 ] . sp_val		2664247	0					
ANR	2664460	ArrayIndexing	op -> operands [ 0 ]		2664247	0					
ANR	2664461	PtrMemberAccess	op -> operands		2664247	0					
ANR	2664462	Identifier	op		2664247	0					
ANR	2664463	Identifier	operands		2664247	1					
ANR	2664464	PrimaryExpression	0		2664247	1					
ANR	2664465	Identifier	sp_val		2664247	1					
ANR	2664466	MemberAccess	msr_const [ i ] . val		2664247	1					
ANR	2664467	ArrayIndexing	msr_const [ i ]		2664247	0					
ANR	2664468	Identifier	msr_const		2664247	0					
ANR	2664469	Identifier	i		2664247	1					
ANR	2664470	Identifier	val		2664247	1					
ANR	2664471	ExpressionStatement	op -> operands [ 0 ] . reg = op -> operands [ 0 ] . immediate	533:6:11885:11932	2664247	1	True				
ANR	2664472	AssignmentExpression	op -> operands [ 0 ] . reg = op -> operands [ 0 ] . immediate		2664247	0		=			
ANR	2664473	MemberAccess	op -> operands [ 0 ] . reg		2664247	0					
ANR	2664474	ArrayIndexing	op -> operands [ 0 ]		2664247	0					
ANR	2664475	PtrMemberAccess	op -> operands		2664247	0					
ANR	2664476	Identifier	op		2664247	0					
ANR	2664477	Identifier	operands		2664247	1					
ANR	2664478	PrimaryExpression	0		2664247	1					
ANR	2664479	Identifier	reg		2664247	1					
ANR	2664480	MemberAccess	op -> operands [ 0 ] . immediate		2664247	1					
ANR	2664481	ArrayIndexing	op -> operands [ 0 ]		2664247	0					
ANR	2664482	PtrMemberAccess	op -> operands		2664247	0					
ANR	2664483	Identifier	op		2664247	0					
ANR	2664484	Identifier	operands		2664247	1					
ANR	2664485	PrimaryExpression	0		2664247	1					
ANR	2664486	Identifier	immediate		2664247	1					
ANR	2664487	BreakStatement	break ;	534:6:11940:11945	2664247	2	True				
ANR	2664488	ElseStatement	else		2664247	0					
ANR	2664489	CompoundStatement		34:10:916:916	2664247	0					
ANR	2664490	ReturnStatement	return data ;	538:4:11976:11987	2664247	0	True				
ANR	2664491	Identifier	data		2664247	0					
ANR	2664492	ExpressionStatement	r = op -> operands [ 1 ] . reg	541:2:12000:12023	2664247	1	True				
ANR	2664493	AssignmentExpression	r = op -> operands [ 1 ] . reg		2664247	0		=			
ANR	2664494	Identifier	r		2664247	0					
ANR	2664495	MemberAccess	op -> operands [ 1 ] . reg		2664247	1					
ANR	2664496	ArrayIndexing	op -> operands [ 1 ]		2664247	0					
ANR	2664497	PtrMemberAccess	op -> operands		2664247	0					
ANR	2664498	Identifier	op		2664247	0					
ANR	2664499	Identifier	operands		2664247	1					
ANR	2664500	PrimaryExpression	1		2664247	1					
ANR	2664501	Identifier	reg		2664247	1					
ANR	2664502	IfStatement	if ( op -> operands [ 1 ] . sp_val == 0xfffe )		2664247	2					
ANR	2664503	Condition	op -> operands [ 1 ] . sp_val == 0xfffe	542:7:12032:12063	2664247	0	True				
ANR	2664504	EqualityExpression	op -> operands [ 1 ] . sp_val == 0xfffe		2664247	0		==			
ANR	2664505	MemberAccess	op -> operands [ 1 ] . sp_val		2664247	0					
ANR	2664506	ArrayIndexing	op -> operands [ 1 ]		2664247	0					
ANR	2664507	PtrMemberAccess	op -> operands		2664247	0					
ANR	2664508	Identifier	op		2664247	0					
ANR	2664509	Identifier	operands		2664247	1					
ANR	2664510	PrimaryExpression	1		2664247	1					
ANR	2664511	Identifier	sp_val		2664247	1					
ANR	2664512	PrimaryExpression	0xfffe		2664247	1					
ANR	2664513	CompoundStatement		39:42:1013:1013	2664247	1					
ANR	2664514	ExpressionStatement	is_immediate = 1	543:3:12072:12088	2664247	0	True				
ANR	2664515	AssignmentExpression	is_immediate = 1		2664247	0		=			
ANR	2664516	Identifier	is_immediate		2664247	0					
ANR	2664517	PrimaryExpression	1		2664247	1					
ANR	2664518	ExpressionStatement	r = op -> operands [ 1 ] . immediate	544:3:12093:12122	2664247	1	True				
ANR	2664519	AssignmentExpression	r = op -> operands [ 1 ] . immediate		2664247	0		=			
ANR	2664520	Identifier	r		2664247	0					
ANR	2664521	MemberAccess	op -> operands [ 1 ] . immediate		2664247	1					
ANR	2664522	ArrayIndexing	op -> operands [ 1 ]		2664247	0					
ANR	2664523	PtrMemberAccess	op -> operands		2664247	0					
ANR	2664524	Identifier	op		2664247	0					
ANR	2664525	Identifier	operands		2664247	1					
ANR	2664526	PrimaryExpression	1		2664247	1					
ANR	2664527	Identifier	immediate		2664247	1					
ANR	2664528	ExpressionStatement	b = op -> operands [ 0 ] . sp_val	546:2:12130:12156	2664247	3	True				
ANR	2664529	AssignmentExpression	b = op -> operands [ 0 ] . sp_val		2664247	0		=			
ANR	2664530	Identifier	b		2664247	0					
ANR	2664531	MemberAccess	op -> operands [ 0 ] . sp_val		2664247	1					
ANR	2664532	ArrayIndexing	op -> operands [ 0 ]		2664247	0					
ANR	2664533	PtrMemberAccess	op -> operands		2664247	0					
ANR	2664534	Identifier	op		2664247	0					
ANR	2664535	Identifier	operands		2664247	1					
ANR	2664536	PrimaryExpression	0		2664247	1					
ANR	2664537	Identifier	sp_val		2664247	1					
ANR	2664538	ExpressionStatement	data = 0x00000000	548:1:12162:12179	2664247	6	True				
ANR	2664539	AssignmentExpression	data = 0x00000000		2664247	0		=			
ANR	2664540	Identifier	data		2664247	0					
ANR	2664541	PrimaryExpression	0x00000000		2664247	1					
ANR	2664542	IfStatement	if ( is_immediate )		2664247	7					
ANR	2664543	Condition	is_immediate	550:5:12187:12198	2664247	0	True				
ANR	2664544	Identifier	is_immediate		2664247	0					
ANR	2664545	CompoundStatement		47:19:1147:1147	2664247	1					
ANR	2664546	ExpressionStatement	data = 0xd500401f	552:2:12237:12254	2664247	0	True				
ANR	2664547	AssignmentExpression	data = 0xd500401f		2664247	0		=			
ANR	2664548	Identifier	data		2664247	0					
ANR	2664549	PrimaryExpression	0xd500401f		2664247	1					
ANR	2664550	IfStatement	if ( b == 0xc210 )		2664247	1					
ANR	2664551	Condition	b == 0xc210	553:6:12262:12272	2664247	0	True				
ANR	2664552	EqualityExpression	b == 0xc210		2664247	0		==			
ANR	2664553	Identifier	b		2664247	0					
ANR	2664554	PrimaryExpression	0xc210		2664247	1					
ANR	2664555	CompoundStatement		50:19:1221:1221	2664247	1					
ANR	2664556	ExpressionStatement	b = 0x05	554:3:12295:12303	2664247	0	True				
ANR	2664557	AssignmentExpression	b = 0x05		2664247	0		=			
ANR	2664558	Identifier	b		2664247	0					
ANR	2664559	PrimaryExpression	0x05		2664247	1					
ANR	2664560	ExpressionStatement	data |= ( b & 0xf0 ) << 12	557:2:12345:12369	2664247	2	True				
ANR	2664561	AssignmentExpression	data |= ( b & 0xf0 ) << 12		2664247	0		|=			
ANR	2664562	Identifier	data		2664247	0					
ANR	2664563	ShiftExpression	( b & 0xf0 ) << 12		2664247	1		<<			
ANR	2664564	BitAndExpression	b & 0xf0		2664247	0		&			
ANR	2664565	Identifier	b		2664247	0					
ANR	2664566	PrimaryExpression	0xf0		2664247	1					
ANR	2664567	PrimaryExpression	12		2664247	1					
ANR	2664568	ExpressionStatement	data |= ( b & 0x0f ) << 5	558:2:12379:12402	2664247	3	True				
ANR	2664569	AssignmentExpression	data |= ( b & 0x0f ) << 5		2664247	0		|=			
ANR	2664570	Identifier	data		2664247	0					
ANR	2664571	ShiftExpression	( b & 0x0f ) << 5		2664247	1		<<			
ANR	2664572	BitAndExpression	b & 0x0f		2664247	0		&			
ANR	2664573	Identifier	b		2664247	0					
ANR	2664574	PrimaryExpression	0x0f		2664247	1					
ANR	2664575	PrimaryExpression	5		2664247	1					
ANR	2664576	ExpressionStatement	data |= ( r & 0xf ) << 8	559:2:12412:12434	2664247	4	True				
ANR	2664577	AssignmentExpression	data |= ( r & 0xf ) << 8		2664247	0		|=			
ANR	2664578	Identifier	data		2664247	0					
ANR	2664579	ShiftExpression	( r & 0xf ) << 8		2664247	1		<<			
ANR	2664580	BitAndExpression	r & 0xf		2664247	0		&			
ANR	2664581	Identifier	r		2664247	0					
ANR	2664582	PrimaryExpression	0xf		2664247	1					
ANR	2664583	PrimaryExpression	8		2664247	1					
ANR	2664584	ElseStatement	else		2664247	0					
ANR	2664585	CompoundStatement		58:8:1403:1403	2664247	0					
ANR	2664586	IfStatement	if ( w )		2664247	0					
ANR	2664587	Condition	w	562:6:12465:12465	2664247	0	True				
ANR	2664588	Identifier	w		2664247	0					
ANR	2664589	CompoundStatement		59:9:1414:1414	2664247	1					
ANR	2664590	ExpressionStatement	data |= 0xd5200000	564:3:12486:12504	2664247	0	True				
ANR	2664591	AssignmentExpression	data |= 0xd5200000		2664247	0		|=			
ANR	2664592	Identifier	data		2664247	0					
ANR	2664593	PrimaryExpression	0xd5200000		2664247	1					
ANR	2664594	ElseStatement	else		2664247	0					
ANR	2664595	CompoundStatement		62:9:1461:1461	2664247	0					
ANR	2664596	ExpressionStatement	data |= 0xd5000000	566:3:12520:12538	2664247	0	True				
ANR	2664597	AssignmentExpression	data |= 0xd5000000		2664247	0		|=			
ANR	2664598	Identifier	data		2664247	0					
ANR	2664599	PrimaryExpression	0xd5000000		2664247	1					
ANR	2664600	ExpressionStatement	data |= b << 5	568:2:12546:12560	2664247	1	True				
ANR	2664601	AssignmentExpression	data |= b << 5		2664247	0		|=			
ANR	2664602	Identifier	data		2664247	0					
ANR	2664603	ShiftExpression	b << 5		2664247	1		<<			
ANR	2664604	Identifier	b		2664247	0					
ANR	2664605	PrimaryExpression	5		2664247	1					
ANR	2664606	ExpressionStatement	data |= r	569:2:12564:12573	2664247	2	True				
ANR	2664607	AssignmentExpression	data |= r		2664247	0		|=			
ANR	2664608	Identifier	data		2664247	0					
ANR	2664609	Identifier	r		2664247	1					
ANR	2664610	ExpressionStatement	seq_data = 0x00000000	571:1:12579:12600	2664247	8	True				
ANR	2664611	AssignmentExpression	seq_data = 0x00000000		2664247	0		=			
ANR	2664612	Identifier	seq_data		2664247	0					
ANR	2664613	PrimaryExpression	0x00000000		2664247	1					
ANR	2664614	ExpressionStatement	seq_data |= ( data & 0xff ) << 8 * 3	572:1:12603:12635	2664247	9	True				
ANR	2664615	AssignmentExpression	seq_data |= ( data & 0xff ) << 8 * 3		2664247	0		|=			
ANR	2664616	Identifier	seq_data		2664247	0					
ANR	2664617	ShiftExpression	( data & 0xff ) << 8 * 3		2664247	1		<<			
ANR	2664618	BitAndExpression	data & 0xff		2664247	0		&			
ANR	2664619	Identifier	data		2664247	0					
ANR	2664620	PrimaryExpression	0xff		2664247	1					
ANR	2664621	MultiplicativeExpression	8 * 3		2664247	1		*			
ANR	2664622	PrimaryExpression	8		2664247	0					
ANR	2664623	PrimaryExpression	3		2664247	1					
ANR	2664624	ExpressionStatement	seq_data |= ( data & 0xff00 ) << 8 * 1	573:1:12638:12672	2664247	10	True				
ANR	2664625	AssignmentExpression	seq_data |= ( data & 0xff00 ) << 8 * 1		2664247	0		|=			
ANR	2664626	Identifier	seq_data		2664247	0					
ANR	2664627	ShiftExpression	( data & 0xff00 ) << 8 * 1		2664247	1		<<			
ANR	2664628	BitAndExpression	data & 0xff00		2664247	0		&			
ANR	2664629	Identifier	data		2664247	0					
ANR	2664630	PrimaryExpression	0xff00		2664247	1					
ANR	2664631	MultiplicativeExpression	8 * 1		2664247	1		*			
ANR	2664632	PrimaryExpression	8		2664247	0					
ANR	2664633	PrimaryExpression	1		2664247	1					
ANR	2664634	ExpressionStatement	seq_data |= ( data & 0xff0000 ) >> 8 * 1	574:1:12675:12711	2664247	11	True				
ANR	2664635	AssignmentExpression	seq_data |= ( data & 0xff0000 ) >> 8 * 1		2664247	0		|=			
ANR	2664636	Identifier	seq_data		2664247	0					
ANR	2664637	ShiftExpression	( data & 0xff0000 ) >> 8 * 1		2664247	1		>>			
ANR	2664638	BitAndExpression	data & 0xff0000		2664247	0		&			
ANR	2664639	Identifier	data		2664247	0					
ANR	2664640	PrimaryExpression	0xff0000		2664247	1					
ANR	2664641	MultiplicativeExpression	8 * 1		2664247	1		*			
ANR	2664642	PrimaryExpression	8		2664247	0					
ANR	2664643	PrimaryExpression	1		2664247	1					
ANR	2664644	ExpressionStatement	seq_data |= ( data & 0xff000000 ) >> 8 * 3	575:1:12714:12752	2664247	12	True				
ANR	2664645	AssignmentExpression	seq_data |= ( data & 0xff000000 ) >> 8 * 3		2664247	0		|=			
ANR	2664646	Identifier	seq_data		2664247	0					
ANR	2664647	ShiftExpression	( data & 0xff000000 ) >> 8 * 3		2664247	1		>>			
ANR	2664648	BitAndExpression	data & 0xff000000		2664247	0		&			
ANR	2664649	Identifier	data		2664247	0					
ANR	2664650	PrimaryExpression	0xff000000		2664247	1					
ANR	2664651	MultiplicativeExpression	8 * 3		2664247	1		*			
ANR	2664652	PrimaryExpression	8		2664247	0					
ANR	2664653	PrimaryExpression	3		2664247	1					
ANR	2664654	ReturnStatement	return seq_data ;	581:1:12846:12861	2664247	13	True				
ANR	2664655	Identifier	seq_data		2664247	0					
ANR	2664656	ReturnType	static ut32		2664247	1					
ANR	2664657	Identifier	msr		2664247	2					
ANR	2664658	ParameterList	"ArmOp * op , int w"		2664247	3					
ANR	2664659	Parameter	ArmOp * op	504:16:11035:11043	2664247	0	True				
ANR	2664660	ParameterType	ArmOp *		2664247	0					
ANR	2664661	Identifier	op		2664247	1					
ANR	2664662	Parameter	int w	504:27:11046:11050	2664247	1	True				
ANR	2664663	ParameterType	int		2664247	0					
ANR	2664664	Identifier	w		2664247	1					
ANR	2664665	CFGEntryNode	ENTRY		2664247		True				
ANR	2664666	CFGExitNode	EXIT		2664247		True				
ANR	2664667	Symbol	UT32_MAX		2664247						
ANR	2664668	Symbol	is_immediate		2664247						
ANR	2664669	Symbol	data		2664247						
ANR	2664670	Symbol	* op		2664247						
ANR	2664671	Symbol	op -> operands [ 1 ] . reg_type		2664247						
ANR	2664672	Symbol	op -> operands [ 1 ] . immediate		2664247						
ANR	2664673	Symbol	msr_const [ i ] . val		2664247						
ANR	2664674	Symbol	op -> operands [ 0 ] . reg_type		2664247						
ANR	2664675	Symbol	* * op		2664247						
ANR	2664676	Symbol	* op -> operands		2664247						
ANR	2664677	Symbol	ARM_SP		2664247						
ANR	2664678	Symbol	op -> operands [ 0 ] . type		2664247						
ANR	2664679	Symbol	msr_const [ i ] . name		2664247						
ANR	2664680	Symbol	op -> operands [ 0 ] . reg		2664247						
ANR	2664681	Symbol	op -> operands [ 0 ] . sp_val		2664247						
ANR	2664682	Symbol	op		2664247						
ANR	2664683	Symbol	ARM_CONSTANT		2664247						
ANR	2664684	Symbol	b		2664247						
ANR	2664685	Symbol	msr_const		2664247						
ANR	2664686	Symbol	op -> operands [ 1 ] . reg		2664247						
ANR	2664687	Symbol	op -> operands [ 1 ] . sp_val		2664247						
ANR	2664688	Symbol	i		2664247						
ANR	2664689	Symbol	op -> operands [ 0 ] . immediate		2664247						
ANR	2664690	Symbol	ARM_REG64		2664247						
ANR	2664691	Symbol	r		2664247						
ANR	2664692	Symbol	seq_data		2664247						
ANR	2664693	Symbol	* i		2664247						
ANR	2664694	Symbol	op -> operands [ 1 ] . type		2664247						
ANR	2664695	Symbol	w		2664247						
ANR	2664696	Symbol	op -> operands		2664247						
ANR	2664697	Symbol	* msr_const		2664247						
ANR	2664698	Function	orr	584:0:12866:14179							
ANR	2664699	FunctionDef	"orr (ArmOp * op , int addr)"		2664698	0					
ANR	2664700	CompoundStatement		584:37:12903:14179	2664698	0					
ANR	2664701	IdentifierDeclStatement	ut32 data = UT32_MAX ;	585:1:12906:12926	2664698	0	True				
ANR	2664702	IdentifierDecl	data = UT32_MAX		2664698	0					
ANR	2664703	IdentifierDeclType	ut32		2664698	0					
ANR	2664704	Identifier	data		2664698	1					
ANR	2664705	AssignmentExpression	data = UT32_MAX		2664698	2		=			
ANR	2664706	Identifier	UT32_MAX		2664698	0					
ANR	2664707	Identifier	UT32_MAX		2664698	1					
ANR	2664708	IfStatement	if ( op -> operands [ 2 ] . type & ARM_GPR )		2664698	1					
ANR	2664709	Condition	op -> operands [ 2 ] . type & ARM_GPR	587:5:12934:12963	2664698	0	True				
ANR	2664710	BitAndExpression	op -> operands [ 2 ] . type & ARM_GPR		2664698	0		&			
ANR	2664711	MemberAccess	op -> operands [ 2 ] . type		2664698	0					
ANR	2664712	ArrayIndexing	op -> operands [ 2 ]		2664698	0					
ANR	2664713	PtrMemberAccess	op -> operands		2664698	0					
ANR	2664714	Identifier	op		2664698	0					
ANR	2664715	Identifier	operands		2664698	1					
ANR	2664716	PrimaryExpression	2		2664698	1					
ANR	2664717	Identifier	type		2664698	1					
ANR	2664718	Identifier	ARM_GPR		2664698	1					
ANR	2664719	CompoundStatement		4:37:62:62	2664698	1					
ANR	2664720	IfStatement	if ( ! ( op -> operands [ 0 ] . reg_type == op -> operands [ 1 ] . reg_type && op -> operands [ 1 ] . reg_type == op -> operands [ 2 ] . reg_type ) )		2664698	0					
ANR	2664721	Condition	! ( op -> operands [ 0 ] . reg_type == op -> operands [ 1 ] . reg_type && op -> operands [ 1 ] . reg_type == op -> operands [ 2 ] . reg_type )	589:6:13012:13129	2664698	0	True				
ANR	2664722	UnaryOperationExpression	! ( op -> operands [ 0 ] . reg_type == op -> operands [ 1 ] . reg_type && op -> operands [ 1 ] . reg_type == op -> operands [ 2 ] . reg_type )		2664698	0					
ANR	2664723	UnaryOperator	!		2664698	0					
ANR	2664724	AndExpression	op -> operands [ 0 ] . reg_type == op -> operands [ 1 ] . reg_type && op -> operands [ 1 ] . reg_type == op -> operands [ 2 ] . reg_type		2664698	1		&&			
ANR	2664725	EqualityExpression	op -> operands [ 0 ] . reg_type == op -> operands [ 1 ] . reg_type		2664698	0		==			
ANR	2664726	MemberAccess	op -> operands [ 0 ] . reg_type		2664698	0					
ANR	2664727	ArrayIndexing	op -> operands [ 0 ]		2664698	0					
ANR	2664728	PtrMemberAccess	op -> operands		2664698	0					
ANR	2664729	Identifier	op		2664698	0					
ANR	2664730	Identifier	operands		2664698	1					
ANR	2664731	PrimaryExpression	0		2664698	1					
ANR	2664732	Identifier	reg_type		2664698	1					
ANR	2664733	MemberAccess	op -> operands [ 1 ] . reg_type		2664698	1					
ANR	2664734	ArrayIndexing	op -> operands [ 1 ]		2664698	0					
ANR	2664735	PtrMemberAccess	op -> operands		2664698	0					
ANR	2664736	Identifier	op		2664698	0					
ANR	2664737	Identifier	operands		2664698	1					
ANR	2664738	PrimaryExpression	1		2664698	1					
ANR	2664739	Identifier	reg_type		2664698	1					
ANR	2664740	EqualityExpression	op -> operands [ 1 ] . reg_type == op -> operands [ 2 ] . reg_type		2664698	1		==			
ANR	2664741	MemberAccess	op -> operands [ 1 ] . reg_type		2664698	0					
ANR	2664742	ArrayIndexing	op -> operands [ 1 ]		2664698	0					
ANR	2664743	PtrMemberAccess	op -> operands		2664698	0					
ANR	2664744	Identifier	op		2664698	0					
ANR	2664745	Identifier	operands		2664698	1					
ANR	2664746	PrimaryExpression	1		2664698	1					
ANR	2664747	Identifier	reg_type		2664698	1					
ANR	2664748	MemberAccess	op -> operands [ 2 ] . reg_type		2664698	1					
ANR	2664749	ArrayIndexing	op -> operands [ 2 ]		2664698	0					
ANR	2664750	PtrMemberAccess	op -> operands		2664698	0					
ANR	2664751	Identifier	op		2664698	0					
ANR	2664752	Identifier	operands		2664698	1					
ANR	2664753	PrimaryExpression	2		2664698	1					
ANR	2664754	Identifier	reg_type		2664698	1					
ANR	2664755	CompoundStatement		7:62:228:228	2664698	1					
ANR	2664756	ReturnStatement	return data ;	591:7:13141:13152	2664698	0	True				
ANR	2664757	Identifier	data		2664698	0					
ANR	2664758	IfStatement	if ( op -> operands [ 0 ] . reg_type & ARM_REG64 )		2664698	1					
ANR	2664759	Condition	op -> operands [ 0 ] . reg_type & ARM_REG64	593:6:13164:13199	2664698	0	True				
ANR	2664760	BitAndExpression	op -> operands [ 0 ] . reg_type & ARM_REG64		2664698	0		&			
ANR	2664761	MemberAccess	op -> operands [ 0 ] . reg_type		2664698	0					
ANR	2664762	ArrayIndexing	op -> operands [ 0 ]		2664698	0					
ANR	2664763	PtrMemberAccess	op -> operands		2664698	0					
ANR	2664764	Identifier	op		2664698	0					
ANR	2664765	Identifier	operands		2664698	1					
ANR	2664766	PrimaryExpression	0		2664698	1					
ANR	2664767	Identifier	reg_type		2664698	1					
ANR	2664768	Identifier	ARM_REG64		2664698	1					
ANR	2664769	CompoundStatement		10:44:298:298	2664698	1					
ANR	2664770	ExpressionStatement	data = 0x000000aa	594:3:13207:13224	2664698	0	True				
ANR	2664771	AssignmentExpression	data = 0x000000aa		2664698	0		=			
ANR	2664772	Identifier	data		2664698	0					
ANR	2664773	PrimaryExpression	0x000000aa		2664698	1					
ANR	2664774	ElseStatement	else		2664698	0					
ANR	2664775	CompoundStatement		12:9:331:331	2664698	0					
ANR	2664776	ExpressionStatement	data = 0x0000002a	596:3:13240:13257	2664698	0	True				
ANR	2664777	AssignmentExpression	data = 0x0000002a		2664698	0		=			
ANR	2664778	Identifier	data		2664698	0					
ANR	2664779	PrimaryExpression	0x0000002a		2664698	1					
ANR	2664780	ExpressionStatement	data += op -> operands [ 0 ] . reg << 24	598:2:13265:13298	2664698	2	True				
ANR	2664781	AssignmentExpression	data += op -> operands [ 0 ] . reg << 24		2664698	0		+=			
ANR	2664782	Identifier	data		2664698	0					
ANR	2664783	ShiftExpression	op -> operands [ 0 ] . reg << 24		2664698	1		<<			
ANR	2664784	MemberAccess	op -> operands [ 0 ] . reg		2664698	0					
ANR	2664785	ArrayIndexing	op -> operands [ 0 ]		2664698	0					
ANR	2664786	PtrMemberAccess	op -> operands		2664698	0					
ANR	2664787	Identifier	op		2664698	0					
ANR	2664788	Identifier	operands		2664698	1					
ANR	2664789	PrimaryExpression	0		2664698	1					
ANR	2664790	Identifier	reg		2664698	1					
ANR	2664791	PrimaryExpression	24		2664698	1					
ANR	2664792	ExpressionStatement	data += op -> operands [ 1 ] . reg << 29	599:2:13302:13335	2664698	3	True				
ANR	2664793	AssignmentExpression	data += op -> operands [ 1 ] . reg << 29		2664698	0		+=			
ANR	2664794	Identifier	data		2664698	0					
ANR	2664795	ShiftExpression	op -> operands [ 1 ] . reg << 29		2664698	1		<<			
ANR	2664796	MemberAccess	op -> operands [ 1 ] . reg		2664698	0					
ANR	2664797	ArrayIndexing	op -> operands [ 1 ]		2664698	0					
ANR	2664798	PtrMemberAccess	op -> operands		2664698	0					
ANR	2664799	Identifier	op		2664698	0					
ANR	2664800	Identifier	operands		2664698	1					
ANR	2664801	PrimaryExpression	1		2664698	1					
ANR	2664802	Identifier	reg		2664698	1					
ANR	2664803	PrimaryExpression	29		2664698	1					
ANR	2664804	ExpressionStatement	data += ( op -> operands [ 1 ] . reg >> 3 ) << 16	600:2:13339:13380	2664698	4	True				
ANR	2664805	AssignmentExpression	data += ( op -> operands [ 1 ] . reg >> 3 ) << 16		2664698	0		+=			
ANR	2664806	Identifier	data		2664698	0					
ANR	2664807	ShiftExpression	( op -> operands [ 1 ] . reg >> 3 ) << 16		2664698	1		<<			
ANR	2664808	ShiftExpression	op -> operands [ 1 ] . reg >> 3		2664698	0		>>			
ANR	2664809	MemberAccess	op -> operands [ 1 ] . reg		2664698	0					
ANR	2664810	ArrayIndexing	op -> operands [ 1 ]		2664698	0					
ANR	2664811	PtrMemberAccess	op -> operands		2664698	0					
ANR	2664812	Identifier	op		2664698	0					
ANR	2664813	Identifier	operands		2664698	1					
ANR	2664814	PrimaryExpression	1		2664698	1					
ANR	2664815	Identifier	reg		2664698	1					
ANR	2664816	PrimaryExpression	3		2664698	1					
ANR	2664817	PrimaryExpression	16		2664698	1					
ANR	2664818	ExpressionStatement	data += op -> operands [ 2 ] . reg << 8	601:2:13384:13416	2664698	5	True				
ANR	2664819	AssignmentExpression	data += op -> operands [ 2 ] . reg << 8		2664698	0		+=			
ANR	2664820	Identifier	data		2664698	0					
ANR	2664821	ShiftExpression	op -> operands [ 2 ] . reg << 8		2664698	1		<<			
ANR	2664822	MemberAccess	op -> operands [ 2 ] . reg		2664698	0					
ANR	2664823	ArrayIndexing	op -> operands [ 2 ]		2664698	0					
ANR	2664824	PtrMemberAccess	op -> operands		2664698	0					
ANR	2664825	Identifier	op		2664698	0					
ANR	2664826	Identifier	operands		2664698	1					
ANR	2664827	PrimaryExpression	2		2664698	1					
ANR	2664828	Identifier	reg		2664698	1					
ANR	2664829	PrimaryExpression	8		2664698	1					
ANR	2664830	ElseStatement	else		2664698	0					
ANR	2664831	IfStatement	if ( op -> operands [ 2 ] . type & ARM_CONSTANT )		2664698	0					
ANR	2664832	Condition	op -> operands [ 2 ] . type & ARM_CONSTANT	602:12:13430:13464	2664698	0	True				
ANR	2664833	BitAndExpression	op -> operands [ 2 ] . type & ARM_CONSTANT		2664698	0		&			
ANR	2664834	MemberAccess	op -> operands [ 2 ] . type		2664698	0					
ANR	2664835	ArrayIndexing	op -> operands [ 2 ]		2664698	0					
ANR	2664836	PtrMemberAccess	op -> operands		2664698	0					
ANR	2664837	Identifier	op		2664698	0					
ANR	2664838	Identifier	operands		2664698	1					
ANR	2664839	PrimaryExpression	2		2664698	1					
ANR	2664840	Identifier	type		2664698	1					
ANR	2664841	Identifier	ARM_CONSTANT		2664698	1					
ANR	2664842	CompoundStatement		38:2:1002:1021	2664698	1					
ANR	2664843	IfStatement	if ( ! ( op -> operands [ 0 ] . reg_type == op -> operands [ 1 ] . reg_type ) )		2664698	0					
ANR	2664844	Condition	! ( op -> operands [ 0 ] . reg_type == op -> operands [ 1 ] . reg_type )	604:6:13504:13558	2664698	0	True				
ANR	2664845	UnaryOperationExpression	! ( op -> operands [ 0 ] . reg_type == op -> operands [ 1 ] . reg_type )		2664698	0					
ANR	2664846	UnaryOperator	!		2664698	0					
ANR	2664847	EqualityExpression	op -> operands [ 0 ] . reg_type == op -> operands [ 1 ] . reg_type		2664698	1		==			
ANR	2664848	MemberAccess	op -> operands [ 0 ] . reg_type		2664698	0					
ANR	2664849	ArrayIndexing	op -> operands [ 0 ]		2664698	0					
ANR	2664850	PtrMemberAccess	op -> operands		2664698	0					
ANR	2664851	Identifier	op		2664698	0					
ANR	2664852	Identifier	operands		2664698	1					
ANR	2664853	PrimaryExpression	0		2664698	1					
ANR	2664854	Identifier	reg_type		2664698	1					
ANR	2664855	MemberAccess	op -> operands [ 1 ] . reg_type		2664698	1					
ANR	2664856	ArrayIndexing	op -> operands [ 1 ]		2664698	0					
ANR	2664857	PtrMemberAccess	op -> operands		2664698	0					
ANR	2664858	Identifier	op		2664698	0					
ANR	2664859	Identifier	operands		2664698	1					
ANR	2664860	PrimaryExpression	1		2664698	1					
ANR	2664861	Identifier	reg_type		2664698	1					
ANR	2664862	CompoundStatement		21:63:657:657	2664698	1					
ANR	2664863	ReturnStatement	return data ;	605:3:13566:13577	2664698	0	True				
ANR	2664864	Identifier	data		2664698	0					
ANR	2664865	IfStatement	if ( op -> operands [ 0 ] . reg_type & ARM_REG64 )		2664698	1					
ANR	2664866	Condition	op -> operands [ 0 ] . reg_type & ARM_REG64	607:6:13589:13624	2664698	0	True				
ANR	2664867	BitAndExpression	op -> operands [ 0 ] . reg_type & ARM_REG64		2664698	0		&			
ANR	2664868	MemberAccess	op -> operands [ 0 ] . reg_type		2664698	0					
ANR	2664869	ArrayIndexing	op -> operands [ 0 ]		2664698	0					
ANR	2664870	PtrMemberAccess	op -> operands		2664698	0					
ANR	2664871	Identifier	op		2664698	0					
ANR	2664872	Identifier	operands		2664698	1					
ANR	2664873	PrimaryExpression	0		2664698	1					
ANR	2664874	Identifier	reg_type		2664698	1					
ANR	2664875	Identifier	ARM_REG64		2664698	1					
ANR	2664876	CompoundStatement		24:44:723:723	2664698	1					
ANR	2664877	ExpressionStatement	data = 0x000040b2	608:3:13632:13649	2664698	0	True				
ANR	2664878	AssignmentExpression	data = 0x000040b2		2664698	0		=			
ANR	2664879	Identifier	data		2664698	0					
ANR	2664880	PrimaryExpression	0x000040b2		2664698	1					
ANR	2664881	ElseStatement	else		2664698	0					
ANR	2664882	CompoundStatement		26:9:756:756	2664698	0					
ANR	2664883	ExpressionStatement	data = 0x00000032	610:3:13665:13682	2664698	0	True				
ANR	2664884	AssignmentExpression	data = 0x00000032		2664698	0		=			
ANR	2664885	Identifier	data		2664698	0					
ANR	2664886	PrimaryExpression	0x00000032		2664698	1					
ANR	2664887	ExpressionStatement	data += op -> operands [ 0 ] . reg << 24	613:2:13691:13724	2664698	2	True				
ANR	2664888	AssignmentExpression	data += op -> operands [ 0 ] . reg << 24		2664698	0		+=			
ANR	2664889	Identifier	data		2664698	0					
ANR	2664890	ShiftExpression	op -> operands [ 0 ] . reg << 24		2664698	1		<<			
ANR	2664891	MemberAccess	op -> operands [ 0 ] . reg		2664698	0					
ANR	2664892	ArrayIndexing	op -> operands [ 0 ]		2664698	0					
ANR	2664893	PtrMemberAccess	op -> operands		2664698	0					
ANR	2664894	Identifier	op		2664698	0					
ANR	2664895	Identifier	operands		2664698	1					
ANR	2664896	PrimaryExpression	0		2664698	1					
ANR	2664897	Identifier	reg		2664698	1					
ANR	2664898	PrimaryExpression	24		2664698	1					
ANR	2664899	ExpressionStatement	data += op -> operands [ 1 ] . reg << 29	614:2:13728:13761	2664698	3	True				
ANR	2664900	AssignmentExpression	data += op -> operands [ 1 ] . reg << 29		2664698	0		+=			
ANR	2664901	Identifier	data		2664698	0					
ANR	2664902	ShiftExpression	op -> operands [ 1 ] . reg << 29		2664698	1		<<			
ANR	2664903	MemberAccess	op -> operands [ 1 ] . reg		2664698	0					
ANR	2664904	ArrayIndexing	op -> operands [ 1 ]		2664698	0					
ANR	2664905	PtrMemberAccess	op -> operands		2664698	0					
ANR	2664906	Identifier	op		2664698	0					
ANR	2664907	Identifier	operands		2664698	1					
ANR	2664908	PrimaryExpression	1		2664698	1					
ANR	2664909	Identifier	reg		2664698	1					
ANR	2664910	PrimaryExpression	29		2664698	1					
ANR	2664911	ExpressionStatement	data += ( op -> operands [ 1 ] . reg >> 3 ) << 16	615:2:13765:13806	2664698	4	True				
ANR	2664912	AssignmentExpression	data += ( op -> operands [ 1 ] . reg >> 3 ) << 16		2664698	0		+=			
ANR	2664913	Identifier	data		2664698	0					
ANR	2664914	ShiftExpression	( op -> operands [ 1 ] . reg >> 3 ) << 16		2664698	1		<<			
ANR	2664915	ShiftExpression	op -> operands [ 1 ] . reg >> 3		2664698	0		>>			
ANR	2664916	MemberAccess	op -> operands [ 1 ] . reg		2664698	0					
ANR	2664917	ArrayIndexing	op -> operands [ 1 ]		2664698	0					
ANR	2664918	PtrMemberAccess	op -> operands		2664698	0					
ANR	2664919	Identifier	op		2664698	0					
ANR	2664920	Identifier	operands		2664698	1					
ANR	2664921	PrimaryExpression	1		2664698	1					
ANR	2664922	Identifier	reg		2664698	1					
ANR	2664923	PrimaryExpression	3		2664698	1					
ANR	2664924	PrimaryExpression	16		2664698	1					
ANR	2664925	IdentifierDeclStatement	ut32 imm = decodeBitMasks ( op -> operands [ 2 ] . immediate ) ;	617:2:13811:13864	2664698	5	True				
ANR	2664926	IdentifierDecl	imm = decodeBitMasks ( op -> operands [ 2 ] . immediate )		2664698	0					
ANR	2664927	IdentifierDeclType	ut32		2664698	0					
ANR	2664928	Identifier	imm		2664698	1					
ANR	2664929	AssignmentExpression	imm = decodeBitMasks ( op -> operands [ 2 ] . immediate )		2664698	2		=			
ANR	2664930	Identifier	imm		2664698	0					
ANR	2664931	CallExpression	decodeBitMasks ( op -> operands [ 2 ] . immediate )		2664698	1					
ANR	2664932	Callee	decodeBitMasks		2664698	0					
ANR	2664933	Identifier	decodeBitMasks		2664698	0					
ANR	2664934	ArgumentList	op -> operands [ 2 ] . immediate		2664698	1					
ANR	2664935	Argument	op -> operands [ 2 ] . immediate		2664698	0					
ANR	2664936	MemberAccess	op -> operands [ 2 ] . immediate		2664698	0					
ANR	2664937	ArrayIndexing	op -> operands [ 2 ]		2664698	0					
ANR	2664938	PtrMemberAccess	op -> operands		2664698	0					
ANR	2664939	Identifier	op		2664698	0					
ANR	2664940	Identifier	operands		2664698	1					
ANR	2664941	PrimaryExpression	2		2664698	1					
ANR	2664942	Identifier	immediate		2664698	1					
ANR	2664943	IfStatement	if ( imm == - 1 )		2664698	6					
ANR	2664944	Condition	imm == - 1	618:6:13872:13880	2664698	0	True				
ANR	2664945	EqualityExpression	imm == - 1		2664698	0		==			
ANR	2664946	Identifier	imm		2664698	0					
ANR	2664947	UnaryOperationExpression	- 1		2664698	1					
ANR	2664948	UnaryOperator	-		2664698	0					
ANR	2664949	PrimaryExpression	1		2664698	1					
ANR	2664950	CompoundStatement		35:17:979:979	2664698	1					
ANR	2664951	ReturnStatement	return imm ;	619:3:13888:13898	2664698	0	True				
ANR	2664952	Identifier	imm		2664698	0					
ANR	2664953	IdentifierDeclStatement	int low = imm & 0xF ;	621:2:13906:13925	2664698	7	True				
ANR	2664954	IdentifierDecl	low = imm & 0xF		2664698	0					
ANR	2664955	IdentifierDeclType	int		2664698	0					
ANR	2664956	Identifier	low		2664698	1					
ANR	2664957	AssignmentExpression	low = imm & 0xF		2664698	2		=			
ANR	2664958	Identifier	low		2664698	0					
ANR	2664959	BitAndExpression	imm & 0xF		2664698	1		&			
ANR	2664960	Identifier	imm		2664698	0					
ANR	2664961	PrimaryExpression	0xF		2664698	1					
ANR	2664962	IfStatement	if ( op -> operands [ 0 ] . reg_type & ARM_REG64 )		2664698	8					
ANR	2664963	Condition	op -> operands [ 0 ] . reg_type & ARM_REG64	622:6:13933:13968	2664698	0	True				
ANR	2664964	BitAndExpression	op -> operands [ 0 ] . reg_type & ARM_REG64		2664698	0		&			
ANR	2664965	MemberAccess	op -> operands [ 0 ] . reg_type		2664698	0					
ANR	2664966	ArrayIndexing	op -> operands [ 0 ]		2664698	0					
ANR	2664967	PtrMemberAccess	op -> operands		2664698	0					
ANR	2664968	Identifier	op		2664698	0					
ANR	2664969	Identifier	operands		2664698	1					
ANR	2664970	PrimaryExpression	0		2664698	1					
ANR	2664971	Identifier	reg_type		2664698	1					
ANR	2664972	Identifier	ARM_REG64		2664698	1					
ANR	2664973	CompoundStatement		39:44:1067:1067	2664698	1					
ANR	2664974	ExpressionStatement	imm = ( ( imm >> 6 ) | 0x78 )	623:3:13976:14001	2664698	0	True				
ANR	2664975	AssignmentExpression	imm = ( ( imm >> 6 ) | 0x78 )		2664698	0		=			
ANR	2664976	Identifier	imm		2664698	0					
ANR	2664977	InclusiveOrExpression	( imm >> 6 ) | 0x78		2664698	1		|			
ANR	2664978	ShiftExpression	imm >> 6		2664698	0		>>			
ANR	2664979	Identifier	imm		2664698	0					
ANR	2664980	PrimaryExpression	6		2664698	1					
ANR	2664981	PrimaryExpression	0x78		2664698	1					
ANR	2664982	IfStatement	if ( imm > 120 )		2664698	1					
ANR	2664983	Condition	imm > 120	624:7:14010:14018	2664698	0	True				
ANR	2664984	RelationalExpression	imm > 120		2664698	0		>			
ANR	2664985	Identifier	imm		2664698	0					
ANR	2664986	PrimaryExpression	120		2664698	1					
ANR	2664987	CompoundStatement		41:18:1117:1117	2664698	1					
ANR	2664988	ExpressionStatement	data |= imm << 8	625:4:14027:14043	2664698	0	True				
ANR	2664989	AssignmentExpression	data |= imm << 8		2664698	0		|=			
ANR	2664990	Identifier	data		2664698	0					
ANR	2664991	ShiftExpression	imm << 8		2664698	1		<<			
ANR	2664992	Identifier	imm		2664698	0					
ANR	2664993	PrimaryExpression	8		2664698	1					
ANR	2664994	ElseStatement	else		2664698	0					
ANR	2664995	CompoundStatement		44:9:1155:1155	2664698	0					
ANR	2664996	ExpressionStatement	imm = ( ( imm >> 2 ) )	628:3:14064:14082	2664698	0	True				
ANR	2664997	AssignmentExpression	imm = ( ( imm >> 2 ) )		2664698	0		=			
ANR	2664998	Identifier	imm		2664698	0					
ANR	2664999	ShiftExpression	imm >> 2		2664698	1		>>			
ANR	2665000	Identifier	imm		2664698	0					
ANR	2665001	PrimaryExpression	2		2664698	1					
ANR	2665002	IfStatement	if ( imm > 120 )		2664698	1					
ANR	2665003	Condition	imm > 120	629:7:14091:14099	2664698	0	True				
ANR	2665004	RelationalExpression	imm > 120		2664698	0		>			
ANR	2665005	Identifier	imm		2664698	0					
ANR	2665006	PrimaryExpression	120		2664698	1					
ANR	2665007	CompoundStatement		46:18:1198:1198	2664698	1					
ANR	2665008	ExpressionStatement	data |= imm << 4	630:4:14108:14124	2664698	0	True				
ANR	2665009	AssignmentExpression	data |= imm << 4		2664698	0		|=			
ANR	2665010	Identifier	data		2664698	0					
ANR	2665011	ShiftExpression	imm << 4		2664698	1		<<			
ANR	2665012	Identifier	imm		2664698	0					
ANR	2665013	PrimaryExpression	4		2664698	1					
ANR	2665014	ExpressionStatement	data |= ( 4 * low ) << 16	633:2:14137:14160	2664698	9	True				
ANR	2665015	AssignmentExpression	data |= ( 4 * low ) << 16		2664698	0		|=			
ANR	2665016	Identifier	data		2664698	0					
ANR	2665017	ShiftExpression	( 4 * low ) << 16		2664698	1		<<			
ANR	2665018	MultiplicativeExpression	4 * low		2664698	0		*			
ANR	2665019	PrimaryExpression	4		2664698	0					
ANR	2665020	Identifier	low		2664698	1					
ANR	2665021	PrimaryExpression	16		2664698	1					
ANR	2665022	ReturnStatement	return data ;	635:1:14166:14177	2664698	2	True				
ANR	2665023	Identifier	data		2664698	0					
ANR	2665024	ReturnType	static ut32		2664698	1					
ANR	2665025	Identifier	orr		2664698	2					
ANR	2665026	ParameterList	"ArmOp * op , int addr"		2664698	3					
ANR	2665027	Parameter	ArmOp * op	584:16:12882:12890	2664698	0	True				
ANR	2665028	ParameterType	ArmOp *		2664698	0					
ANR	2665029	Identifier	op		2664698	1					
ANR	2665030	Parameter	int addr	584:27:12893:12900	2664698	1	True				
ANR	2665031	ParameterType	int		2664698	0					
ANR	2665032	Identifier	addr		2664698	1					
ANR	2665033	CFGEntryNode	ENTRY		2664698		True				
ANR	2665034	CFGExitNode	EXIT		2664698		True				
ANR	2665035	Symbol	UT32_MAX		2664698						
ANR	2665036	Symbol	op -> operands [ 2 ] . reg		2664698						
ANR	2665037	Symbol	op -> operands [ 2 ] . immediate		2664698						
ANR	2665038	Symbol	op		2664698						
ANR	2665039	Symbol	ARM_CONSTANT		2664698						
ANR	2665040	Symbol	data		2664698						
ANR	2665041	Symbol	* op		2664698						
ANR	2665042	Symbol	op -> operands [ 1 ] . reg		2664698						
ANR	2665043	Symbol	op -> operands [ 1 ] . reg_type		2664698						
ANR	2665044	Symbol	imm		2664698						
ANR	2665045	Symbol	op -> operands [ 2 ] . reg_type		2664698						
ANR	2665046	Symbol	op -> operands [ 0 ] . reg_type		2664698						
ANR	2665047	Symbol	op -> operands [ 2 ] . type		2664698						
ANR	2665048	Symbol	ARM_GPR		2664698						
ANR	2665049	Symbol	* * op		2664698						
ANR	2665050	Symbol	ARM_REG64		2664698						
ANR	2665051	Symbol	decodeBitMasks		2664698						
ANR	2665052	Symbol	* op -> operands		2664698						
ANR	2665053	Symbol	low		2664698						
ANR	2665054	Symbol	op -> operands [ 0 ] . reg		2664698						
ANR	2665055	Symbol	addr		2664698						
ANR	2665056	Symbol	op -> operands		2664698						
ANR	2665057	Function	adrp	638:0:14182:14849							
ANR	2665058	FunctionDef	"adrp (ArmOp * op , ut64 addr , ut32 k)"		2665057	0					
ANR	2665059	CompoundStatement		638:47:14229:14849	2665057	0					
ANR	2665060	Statement	ut64	639:1:14257:14260	2665057	0	True				
ANR	2665061	Statement	at	639:6:14262:14263	2665057	1	True				
ANR	2665062	Statement	=	639:9:14265:14265	2665057	2	True				
ANR	2665063	Statement	0L	639:11:14267:14268	2665057	3	True				
ANR	2665064	ExpressionStatement	L	639:13:14269:14270	2665057	4	True				
ANR	2665065	Identifier	L		2665057	0					
ANR	2665066	IdentifierDeclStatement	ut32 data = k ;	640:1:14273:14286	2665057	5	True				
ANR	2665067	IdentifierDecl	data = k		2665057	0					
ANR	2665068	IdentifierDeclType	ut32		2665057	0					
ANR	2665069	Identifier	data		2665057	1					
ANR	2665070	AssignmentExpression	data = k		2665057	2		=			
ANR	2665071	Identifier	k		2665057	0					
ANR	2665072	Identifier	k		2665057	1					
ANR	2665073	IfStatement	if ( op -> operands [ 0 ] . type == ARM_GPR )		2665057	6					
ANR	2665074	Condition	op -> operands [ 0 ] . type == ARM_GPR	641:5:14293:14323	2665057	0	True				
ANR	2665075	EqualityExpression	op -> operands [ 0 ] . type == ARM_GPR		2665057	0		==			
ANR	2665076	MemberAccess	op -> operands [ 0 ] . type		2665057	0					
ANR	2665077	ArrayIndexing	op -> operands [ 0 ]		2665057	0					
ANR	2665078	PtrMemberAccess	op -> operands		2665057	0					
ANR	2665079	Identifier	op		2665057	0					
ANR	2665080	Identifier	operands		2665057	1					
ANR	2665081	PrimaryExpression	0		2665057	1					
ANR	2665082	Identifier	type		2665057	1					
ANR	2665083	Identifier	ARM_GPR		2665057	1					
ANR	2665084	CompoundStatement		4:38:96:96	2665057	1					
ANR	2665085	ExpressionStatement	data += ( ( op -> operands [ 0 ] . reg & 0xff ) << 24 )	642:2:14330:14374	2665057	0	True				
ANR	2665086	AssignmentExpression	data += ( ( op -> operands [ 0 ] . reg & 0xff ) << 24 )		2665057	0		+=			
ANR	2665087	Identifier	data		2665057	0					
ANR	2665088	ShiftExpression	( op -> operands [ 0 ] . reg & 0xff ) << 24		2665057	1		<<			
ANR	2665089	BitAndExpression	op -> operands [ 0 ] . reg & 0xff		2665057	0		&			
ANR	2665090	MemberAccess	op -> operands [ 0 ] . reg		2665057	0					
ANR	2665091	ArrayIndexing	op -> operands [ 0 ]		2665057	0					
ANR	2665092	PtrMemberAccess	op -> operands		2665057	0					
ANR	2665093	Identifier	op		2665057	0					
ANR	2665094	Identifier	operands		2665057	1					
ANR	2665095	PrimaryExpression	0		2665057	1					
ANR	2665096	Identifier	reg		2665057	1					
ANR	2665097	PrimaryExpression	0xff		2665057	1					
ANR	2665098	PrimaryExpression	24		2665057	1					
ANR	2665099	ElseStatement	else		2665057	0					
ANR	2665100	CompoundStatement		6:8:154:154	2665057	0					
ANR	2665101	ExpressionStatement	"eprintf ( ""Usage: adrp x0, addr\\n"" )"	644:2:14388:14422	2665057	0	True				
ANR	2665102	CallExpression	"eprintf ( ""Usage: adrp x0, addr\\n"" )"		2665057	0					
ANR	2665103	Callee	eprintf		2665057	0					
ANR	2665104	Identifier	eprintf		2665057	0					
ANR	2665105	ArgumentList	"""Usage: adrp x0, addr\\n"""		2665057	1					
ANR	2665106	Argument	"""Usage: adrp x0, addr\\n"""		2665057	0					
ANR	2665107	PrimaryExpression	"""Usage: adrp x0, addr\\n"""		2665057	0					
ANR	2665108	ReturnStatement	return UT32_MAX ;	645:2:14426:14441	2665057	1	True				
ANR	2665109	Identifier	UT32_MAX		2665057	0					
ANR	2665110	IfStatement	if ( op -> operands [ 1 ] . type == ARM_CONSTANT )		2665057	7					
ANR	2665111	Condition	op -> operands [ 1 ] . type == ARM_CONSTANT	647:5:14451:14486	2665057	0	True				
ANR	2665112	EqualityExpression	op -> operands [ 1 ] . type == ARM_CONSTANT		2665057	0		==			
ANR	2665113	MemberAccess	op -> operands [ 1 ] . type		2665057	0					
ANR	2665114	ArrayIndexing	op -> operands [ 1 ]		2665057	0					
ANR	2665115	PtrMemberAccess	op -> operands		2665057	0					
ANR	2665116	Identifier	op		2665057	0					
ANR	2665117	Identifier	operands		2665057	1					
ANR	2665118	PrimaryExpression	1		2665057	1					
ANR	2665119	Identifier	type		2665057	1					
ANR	2665120	Identifier	ARM_CONSTANT		2665057	1					
ANR	2665121	CompoundStatement		10:43:259:259	2665057	1					
ANR	2665122	ExpressionStatement	at = op -> operands [ 1 ] . immediate - addr	649:2:14530:14567	2665057	0	True				
ANR	2665123	AssignmentExpression	at = op -> operands [ 1 ] . immediate - addr		2665057	0		=			
ANR	2665124	Identifier	at		2665057	0					
ANR	2665125	AdditiveExpression	op -> operands [ 1 ] . immediate - addr		2665057	1		-			
ANR	2665126	MemberAccess	op -> operands [ 1 ] . immediate		2665057	0					
ANR	2665127	ArrayIndexing	op -> operands [ 1 ]		2665057	0					
ANR	2665128	PtrMemberAccess	op -> operands		2665057	0					
ANR	2665129	Identifier	op		2665057	0					
ANR	2665130	Identifier	operands		2665057	1					
ANR	2665131	PrimaryExpression	1		2665057	1					
ANR	2665132	Identifier	immediate		2665057	1					
ANR	2665133	Identifier	addr		2665057	1					
ANR	2665134	ExpressionStatement	at /= 4	650:2:14571:14578	2665057	1	True				
ANR	2665135	AssignmentExpression	at /= 4		2665057	0		/=			
ANR	2665136	Identifier	at		2665057	0					
ANR	2665137	PrimaryExpression	4		2665057	1					
ANR	2665138	ElseStatement	else		2665057	0					
ANR	2665139	CompoundStatement		14:8:358:358	2665057	0					
ANR	2665140	ExpressionStatement	"eprintf ( ""Usage: adrp, x0, addr\\n"" )"	652:2:14592:14627	2665057	0	True				
ANR	2665141	CallExpression	"eprintf ( ""Usage: adrp, x0, addr\\n"" )"		2665057	0					
ANR	2665142	Callee	eprintf		2665057	0					
ANR	2665143	Identifier	eprintf		2665057	0					
ANR	2665144	ArgumentList	"""Usage: adrp, x0, addr\\n"""		2665057	1					
ANR	2665145	Argument	"""Usage: adrp, x0, addr\\n"""		2665057	0					
ANR	2665146	PrimaryExpression	"""Usage: adrp, x0, addr\\n"""		2665057	0					
ANR	2665147	ReturnStatement	return UT32_MAX ;	653:2:14631:14646	2665057	1	True				
ANR	2665148	Identifier	UT32_MAX		2665057	0					
ANR	2665149	IdentifierDeclStatement	ut8 b0 = at ;	655:1:14652:14663	2665057	8	True				
ANR	2665150	IdentifierDecl	b0 = at		2665057	0					
ANR	2665151	IdentifierDeclType	ut8		2665057	0					
ANR	2665152	Identifier	b0		2665057	1					
ANR	2665153	AssignmentExpression	b0 = at		2665057	2		=			
ANR	2665154	Identifier	at		2665057	0					
ANR	2665155	Identifier	at		2665057	1					
ANR	2665156	IdentifierDeclStatement	ut8 b1 = ( at >> 3 ) & 0xff ;	656:1:14666:14691	2665057	9	True				
ANR	2665157	IdentifierDecl	b1 = ( at >> 3 ) & 0xff		2665057	0					
ANR	2665158	IdentifierDeclType	ut8		2665057	0					
ANR	2665159	Identifier	b1		2665057	1					
ANR	2665160	AssignmentExpression	b1 = ( at >> 3 ) & 0xff		2665057	2		=			
ANR	2665161	Identifier	b1		2665057	0					
ANR	2665162	BitAndExpression	( at >> 3 ) & 0xff		2665057	1		&			
ANR	2665163	ShiftExpression	at >> 3		2665057	0		>>			
ANR	2665164	Identifier	at		2665057	0					
ANR	2665165	PrimaryExpression	3		2665057	1					
ANR	2665166	PrimaryExpression	0xff		2665057	1					
ANR	2665167	IdentifierDeclStatement	ut8 b2 = ( at >> ( 8 + 7 ) ) & 0xff ;	659:1:14701:14732	2665057	10	True				
ANR	2665168	IdentifierDecl	b2 = ( at >> ( 8 + 7 ) ) & 0xff		2665057	0					
ANR	2665169	IdentifierDeclType	ut8		2665057	0					
ANR	2665170	Identifier	b2		2665057	1					
ANR	2665171	AssignmentExpression	b2 = ( at >> ( 8 + 7 ) ) & 0xff		2665057	2		=			
ANR	2665172	Identifier	b2		2665057	0					
ANR	2665173	BitAndExpression	( at >> ( 8 + 7 ) ) & 0xff		2665057	1		&			
ANR	2665174	ShiftExpression	at >> ( 8 + 7 )		2665057	0		>>			
ANR	2665175	Identifier	at		2665057	0					
ANR	2665176	AdditiveExpression	8 + 7		2665057	1		+			
ANR	2665177	PrimaryExpression	8		2665057	0					
ANR	2665178	PrimaryExpression	7		2665057	1					
ANR	2665179	PrimaryExpression	0xff		2665057	1					
ANR	2665180	ExpressionStatement	data += b0 << 29	660:1:14735:14751	2665057	11	True				
ANR	2665181	AssignmentExpression	data += b0 << 29		2665057	0		+=			
ANR	2665182	Identifier	data		2665057	0					
ANR	2665183	ShiftExpression	b0 << 29		2665057	1		<<			
ANR	2665184	Identifier	b0		2665057	0					
ANR	2665185	PrimaryExpression	29		2665057	1					
ANR	2665186	ExpressionStatement	data += b1 << 16	661:1:14754:14770	2665057	12	True				
ANR	2665187	AssignmentExpression	data += b1 << 16		2665057	0		+=			
ANR	2665188	Identifier	data		2665057	0					
ANR	2665189	ShiftExpression	b1 << 16		2665057	1		<<			
ANR	2665190	Identifier	b1		2665057	0					
ANR	2665191	PrimaryExpression	16		2665057	1					
ANR	2665192	ExpressionStatement	data += b2 << 24	662:1:14773:14789	2665057	13	True				
ANR	2665193	AssignmentExpression	data += b2 << 24		2665057	0		+=			
ANR	2665194	Identifier	data		2665057	0					
ANR	2665195	ShiftExpression	b2 << 24		2665057	1		<<			
ANR	2665196	Identifier	b2		2665057	0					
ANR	2665197	PrimaryExpression	24		2665057	1					
ANR	2665198	ExpressionStatement	data += b0 << 16	664:1:14799:14815	2665057	14	True				
ANR	2665199	AssignmentExpression	data += b0 << 16		2665057	0		+=			
ANR	2665200	Identifier	data		2665057	0					
ANR	2665201	ShiftExpression	b0 << 16		2665057	1		<<			
ANR	2665202	Identifier	b0		2665057	0					
ANR	2665203	PrimaryExpression	16		2665057	1					
ANR	2665204	ExpressionStatement	data += b1 << 8	665:1:14818:14833	2665057	15	True				
ANR	2665205	AssignmentExpression	data += b1 << 8		2665057	0		+=			
ANR	2665206	Identifier	data		2665057	0					
ANR	2665207	ShiftExpression	b1 << 8		2665057	1		<<			
ANR	2665208	Identifier	b1		2665057	0					
ANR	2665209	PrimaryExpression	8		2665057	1					
ANR	2665210	ReturnStatement	return data ;	666:1:14836:14847	2665057	16	True				
ANR	2665211	Identifier	data		2665057	0					
ANR	2665212	ReturnType	static ut32		2665057	1					
ANR	2665213	Identifier	adrp		2665057	2					
ANR	2665214	ParameterList	"ArmOp * op , ut64 addr , ut32 k"		2665057	3					
ANR	2665215	Parameter	ArmOp * op	638:17:14199:14207	2665057	0	True				
ANR	2665216	ParameterType	ArmOp *		2665057	0					
ANR	2665217	Identifier	op		2665057	1					
ANR	2665218	Parameter	ut64 addr	638:28:14210:14218	2665057	1	True				
ANR	2665219	ParameterType	ut64		2665057	0					
ANR	2665220	Identifier	addr		2665057	1					
ANR	2665221	Parameter	ut32 k	638:39:14221:14226	2665057	2	True				
ANR	2665222	ParameterType	ut32		2665057	0					
ANR	2665223	Identifier	k		2665057	1					
ANR	2665224	CFGEntryNode	ENTRY		2665057		True				
ANR	2665225	CFGExitNode	EXIT		2665057		True				
ANR	2665226	Symbol	UT32_MAX		2665057						
ANR	2665227	Symbol	op		2665057						
ANR	2665228	Symbol	ARM_CONSTANT		2665057						
ANR	2665229	Symbol	data		2665057						
ANR	2665230	Symbol	* op		2665057						
ANR	2665231	Symbol	op -> operands [ 1 ] . immediate		2665057						
ANR	2665232	Symbol	k		2665057						
ANR	2665233	Symbol	ARM_GPR		2665057						
ANR	2665234	Symbol	b0		2665057						
ANR	2665235	Symbol	* * op		2665057						
ANR	2665236	Symbol	b1		2665057						
ANR	2665237	Symbol	b2		2665057						
ANR	2665238	Symbol	* op -> operands		2665057						
ANR	2665239	Symbol	at		2665057						
ANR	2665240	Symbol	op -> operands [ 1 ] . type		2665057						
ANR	2665241	Symbol	op -> operands [ 0 ] . type		2665057						
ANR	2665242	Symbol	op -> operands [ 0 ] . reg		2665057						
ANR	2665243	Symbol	addr		2665057						
ANR	2665244	Symbol	op -> operands		2665057						
ANR	2665245	Function	adr	669:0:14852:15277							
ANR	2665246	FunctionDef	"adr (ArmOp * op , int addr)"		2665245	0					
ANR	2665247	CompoundStatement		669:37:14889:15277	2665245	0					
ANR	2665248	IdentifierDeclStatement	ut32 data = UT32_MAX ;	670:1:14892:14912	2665245	0	True				
ANR	2665249	IdentifierDecl	data = UT32_MAX		2665245	0					
ANR	2665250	IdentifierDeclType	ut32		2665245	0					
ANR	2665251	Identifier	data		2665245	1					
ANR	2665252	AssignmentExpression	data = UT32_MAX		2665245	2		=			
ANR	2665253	Identifier	UT32_MAX		2665245	0					
ANR	2665254	Identifier	UT32_MAX		2665245	1					
ANR	2665255	Statement	ut64	671:1:14915:14918	2665245	1	True				
ANR	2665256	Statement	at	671:6:14920:14921	2665245	2	True				
ANR	2665257	Statement	=	671:9:14923:14923	2665245	3	True				
ANR	2665258	Statement	0L	671:11:14925:14926	2665245	4	True				
ANR	2665259	ExpressionStatement	L	671:13:14927:14928	2665245	5	True				
ANR	2665260	Identifier	L		2665245	0					
ANR	2665261	IfStatement	if ( op -> operands [ 1 ] . type & ARM_CONSTANT )		2665245	6					
ANR	2665262	Condition	op -> operands [ 1 ] . type & ARM_CONSTANT	673:5:14936:14970	2665245	0	True				
ANR	2665263	BitAndExpression	op -> operands [ 1 ] . type & ARM_CONSTANT		2665245	0		&			
ANR	2665264	MemberAccess	op -> operands [ 1 ] . type		2665245	0					
ANR	2665265	ArrayIndexing	op -> operands [ 1 ]		2665245	0					
ANR	2665266	PtrMemberAccess	op -> operands		2665245	0					
ANR	2665267	Identifier	op		2665245	0					
ANR	2665268	Identifier	operands		2665245	1					
ANR	2665269	PrimaryExpression	1		2665245	1					
ANR	2665270	Identifier	type		2665245	1					
ANR	2665271	Identifier	ARM_CONSTANT		2665245	1					
ANR	2665272	CompoundStatement		5:42:83:83	2665245	1					
ANR	2665273	ExpressionStatement	at = op -> operands [ 1 ] . immediate - addr	675:2:15014:15051	2665245	0	True				
ANR	2665274	AssignmentExpression	at = op -> operands [ 1 ] . immediate - addr		2665245	0		=			
ANR	2665275	Identifier	at		2665245	0					
ANR	2665276	AdditiveExpression	op -> operands [ 1 ] . immediate - addr		2665245	1		-			
ANR	2665277	MemberAccess	op -> operands [ 1 ] . immediate		2665245	0					
ANR	2665278	ArrayIndexing	op -> operands [ 1 ]		2665245	0					
ANR	2665279	PtrMemberAccess	op -> operands		2665245	0					
ANR	2665280	Identifier	op		2665245	0					
ANR	2665281	Identifier	operands		2665245	1					
ANR	2665282	PrimaryExpression	1		2665245	1					
ANR	2665283	Identifier	immediate		2665245	1					
ANR	2665284	Identifier	addr		2665245	1					
ANR	2665285	ExpressionStatement	at /= 4	676:2:15055:15062	2665245	1	True				
ANR	2665286	AssignmentExpression	at /= 4		2665245	0		/=			
ANR	2665287	Identifier	at		2665245	0					
ANR	2665288	PrimaryExpression	4		2665245	1					
ANR	2665289	ExpressionStatement	data = 0x00000030	678:1:15068:15085	2665245	7	True				
ANR	2665290	AssignmentExpression	data = 0x00000030		2665245	0		=			
ANR	2665291	Identifier	data		2665245	0					
ANR	2665292	PrimaryExpression	0x00000030		2665245	1					
ANR	2665293	ExpressionStatement	data += 0x01000000 * op -> operands [ 0 ] . reg	679:1:15088:15128	2665245	8	True				
ANR	2665294	AssignmentExpression	data += 0x01000000 * op -> operands [ 0 ] . reg		2665245	0		+=			
ANR	2665295	Identifier	data		2665245	0					
ANR	2665296	MultiplicativeExpression	0x01000000 * op -> operands [ 0 ] . reg		2665245	1		*			
ANR	2665297	PrimaryExpression	0x01000000		2665245	0					
ANR	2665298	MemberAccess	op -> operands [ 0 ] . reg		2665245	1					
ANR	2665299	ArrayIndexing	op -> operands [ 0 ]		2665245	0					
ANR	2665300	PtrMemberAccess	op -> operands		2665245	0					
ANR	2665301	Identifier	op		2665245	0					
ANR	2665302	Identifier	operands		2665245	1					
ANR	2665303	PrimaryExpression	0		2665245	1					
ANR	2665304	Identifier	reg		2665245	1					
ANR	2665305	IdentifierDeclStatement	ut8 b0 = at ;	680:1:15131:15142	2665245	9	True				
ANR	2665306	IdentifierDecl	b0 = at		2665245	0					
ANR	2665307	IdentifierDeclType	ut8		2665245	0					
ANR	2665308	Identifier	b0		2665245	1					
ANR	2665309	AssignmentExpression	b0 = at		2665245	2		=			
ANR	2665310	Identifier	at		2665245	0					
ANR	2665311	Identifier	at		2665245	1					
ANR	2665312	IdentifierDeclStatement	ut8 b1 = ( at >> 3 ) & 0xff ;	681:1:15145:15170	2665245	10	True				
ANR	2665313	IdentifierDecl	b1 = ( at >> 3 ) & 0xff		2665245	0					
ANR	2665314	IdentifierDeclType	ut8		2665245	0					
ANR	2665315	Identifier	b1		2665245	1					
ANR	2665316	AssignmentExpression	b1 = ( at >> 3 ) & 0xff		2665245	2		=			
ANR	2665317	Identifier	b1		2665245	0					
ANR	2665318	BitAndExpression	( at >> 3 ) & 0xff		2665245	1		&			
ANR	2665319	ShiftExpression	at >> 3		2665245	0		>>			
ANR	2665320	Identifier	at		2665245	0					
ANR	2665321	PrimaryExpression	3		2665245	1					
ANR	2665322	PrimaryExpression	0xff		2665245	1					
ANR	2665323	IdentifierDeclStatement	ut8 b2 = ( at >> ( 8 + 7 ) ) & 0xff ;	682:1:15173:15204	2665245	11	True				
ANR	2665324	IdentifierDecl	b2 = ( at >> ( 8 + 7 ) ) & 0xff		2665245	0					
ANR	2665325	IdentifierDeclType	ut8		2665245	0					
ANR	2665326	Identifier	b2		2665245	1					
ANR	2665327	AssignmentExpression	b2 = ( at >> ( 8 + 7 ) ) & 0xff		2665245	2		=			
ANR	2665328	Identifier	b2		2665245	0					
ANR	2665329	BitAndExpression	( at >> ( 8 + 7 ) ) & 0xff		2665245	1		&			
ANR	2665330	ShiftExpression	at >> ( 8 + 7 )		2665245	0		>>			
ANR	2665331	Identifier	at		2665245	0					
ANR	2665332	AdditiveExpression	8 + 7		2665245	1		+			
ANR	2665333	PrimaryExpression	8		2665245	0					
ANR	2665334	PrimaryExpression	7		2665245	1					
ANR	2665335	PrimaryExpression	0xff		2665245	1					
ANR	2665336	ExpressionStatement	data += b0 << 29	683:1:15207:15223	2665245	12	True				
ANR	2665337	AssignmentExpression	data += b0 << 29		2665245	0		+=			
ANR	2665338	Identifier	data		2665245	0					
ANR	2665339	ShiftExpression	b0 << 29		2665245	1		<<			
ANR	2665340	Identifier	b0		2665245	0					
ANR	2665341	PrimaryExpression	29		2665245	1					
ANR	2665342	ExpressionStatement	data += b1 << 16	684:1:15226:15242	2665245	13	True				
ANR	2665343	AssignmentExpression	data += b1 << 16		2665245	0		+=			
ANR	2665344	Identifier	data		2665245	0					
ANR	2665345	ShiftExpression	b1 << 16		2665245	1		<<			
ANR	2665346	Identifier	b1		2665245	0					
ANR	2665347	PrimaryExpression	16		2665245	1					
ANR	2665348	ExpressionStatement	data += b2 << 24	685:1:15245:15261	2665245	14	True				
ANR	2665349	AssignmentExpression	data += b2 << 24		2665245	0		+=			
ANR	2665350	Identifier	data		2665245	0					
ANR	2665351	ShiftExpression	b2 << 24		2665245	1		<<			
ANR	2665352	Identifier	b2		2665245	0					
ANR	2665353	PrimaryExpression	24		2665245	1					
ANR	2665354	ReturnStatement	return data ;	686:1:15264:15275	2665245	15	True				
ANR	2665355	Identifier	data		2665245	0					
ANR	2665356	ReturnType	static ut32		2665245	1					
ANR	2665357	Identifier	adr		2665245	2					
ANR	2665358	ParameterList	"ArmOp * op , int addr"		2665245	3					
ANR	2665359	Parameter	ArmOp * op	669:16:14868:14876	2665245	0	True				
ANR	2665360	ParameterType	ArmOp *		2665245	0					
ANR	2665361	Identifier	op		2665245	1					
ANR	2665362	Parameter	int addr	669:27:14879:14886	2665245	1	True				
ANR	2665363	ParameterType	int		2665245	0					
ANR	2665364	Identifier	addr		2665245	1					
ANR	2665365	CFGEntryNode	ENTRY		2665245		True				
ANR	2665366	CFGExitNode	EXIT		2665245		True				
ANR	2665367	Symbol	UT32_MAX		2665245						
ANR	2665368	Symbol	op		2665245						
ANR	2665369	Symbol	ARM_CONSTANT		2665245						
ANR	2665370	Symbol	data		2665245						
ANR	2665371	Symbol	* op		2665245						
ANR	2665372	Symbol	op -> operands [ 1 ] . immediate		2665245						
ANR	2665373	Symbol	b0		2665245						
ANR	2665374	Symbol	* * op		2665245						
ANR	2665375	Symbol	b1		2665245						
ANR	2665376	Symbol	b2		2665245						
ANR	2665377	Symbol	* op -> operands		2665245						
ANR	2665378	Symbol	at		2665245						
ANR	2665379	Symbol	op -> operands [ 1 ] . type		2665245						
ANR	2665380	Symbol	op -> operands [ 0 ] . reg		2665245						
ANR	2665381	Symbol	addr		2665245						
ANR	2665382	Symbol	op -> operands		2665245						
ANR	2665383	Function	stp	689:0:15280:15771							
ANR	2665384	FunctionDef	"stp (ArmOp * op , int k)"		2665383	0					
ANR	2665385	CompoundStatement		689:34:15314:15771	2665383	0					
ANR	2665386	IdentifierDeclStatement	ut32 data = UT32_MAX ;	690:1:15317:15337	2665383	0	True				
ANR	2665387	IdentifierDecl	data = UT32_MAX		2665383	0					
ANR	2665388	IdentifierDeclType	ut32		2665383	0					
ANR	2665389	Identifier	data		2665383	1					
ANR	2665390	AssignmentExpression	data = UT32_MAX		2665383	2		=			
ANR	2665391	Identifier	UT32_MAX		2665383	0					
ANR	2665392	Identifier	UT32_MAX		2665383	1					
ANR	2665393	IfStatement	if ( op -> operands [ 3 ] . immediate & 0x7 )		2665383	1					
ANR	2665394	Condition	op -> operands [ 3 ] . immediate & 0x7	692:5:15345:15375	2665383	0	True				
ANR	2665395	BitAndExpression	op -> operands [ 3 ] . immediate & 0x7		2665383	0		&			
ANR	2665396	MemberAccess	op -> operands [ 3 ] . immediate		2665383	0					
ANR	2665397	ArrayIndexing	op -> operands [ 3 ]		2665383	0					
ANR	2665398	PtrMemberAccess	op -> operands		2665383	0					
ANR	2665399	Identifier	op		2665383	0					
ANR	2665400	Identifier	operands		2665383	1					
ANR	2665401	PrimaryExpression	3		2665383	1					
ANR	2665402	Identifier	immediate		2665383	1					
ANR	2665403	PrimaryExpression	0x7		2665383	1					
ANR	2665404	CompoundStatement		4:38:63:63	2665383	1					
ANR	2665405	ReturnStatement	return data ;	693:2:15382:15393	2665383	0	True				
ANR	2665406	Identifier	data		2665383	0					
ANR	2665407	IfStatement	if ( k == 0x000040a9 && ( op -> operands [ 0 ] . reg == op -> operands [ 1 ] . reg ) )		2665383	2					
ANR	2665408	Condition	k == 0x000040a9 && ( op -> operands [ 0 ] . reg == op -> operands [ 1 ] . reg )	695:5:15403:15465	2665383	0	True				
ANR	2665409	AndExpression	k == 0x000040a9 && ( op -> operands [ 0 ] . reg == op -> operands [ 1 ] . reg )		2665383	0		&&			
ANR	2665410	EqualityExpression	k == 0x000040a9		2665383	0		==			
ANR	2665411	Identifier	k		2665383	0					
ANR	2665412	PrimaryExpression	0x000040a9		2665383	1					
ANR	2665413	EqualityExpression	op -> operands [ 0 ] . reg == op -> operands [ 1 ] . reg		2665383	1		==			
ANR	2665414	MemberAccess	op -> operands [ 0 ] . reg		2665383	0					
ANR	2665415	ArrayIndexing	op -> operands [ 0 ]		2665383	0					
ANR	2665416	PtrMemberAccess	op -> operands		2665383	0					
ANR	2665417	Identifier	op		2665383	0					
ANR	2665418	Identifier	operands		2665383	1					
ANR	2665419	PrimaryExpression	0		2665383	1					
ANR	2665420	Identifier	reg		2665383	1					
ANR	2665421	MemberAccess	op -> operands [ 1 ] . reg		2665383	1					
ANR	2665422	ArrayIndexing	op -> operands [ 1 ]		2665383	0					
ANR	2665423	PtrMemberAccess	op -> operands		2665383	0					
ANR	2665424	Identifier	op		2665383	0					
ANR	2665425	Identifier	operands		2665383	1					
ANR	2665426	PrimaryExpression	1		2665383	1					
ANR	2665427	Identifier	reg		2665383	1					
ANR	2665428	CompoundStatement		7:70:153:153	2665383	1					
ANR	2665429	ReturnStatement	return data ;	696:2:15472:15483	2665383	0	True				
ANR	2665430	Identifier	data		2665383	0					
ANR	2665431	ExpressionStatement	data = k	699:1:15490:15498	2665383	3	True				
ANR	2665432	AssignmentExpression	data = k		2665383	0		=			
ANR	2665433	Identifier	data		2665383	0					
ANR	2665434	Identifier	k		2665383	1					
ANR	2665435	ExpressionStatement	data += op -> operands [ 0 ] . reg << 24	700:1:15501:15534	2665383	4	True				
ANR	2665436	AssignmentExpression	data += op -> operands [ 0 ] . reg << 24		2665383	0		+=			
ANR	2665437	Identifier	data		2665383	0					
ANR	2665438	ShiftExpression	op -> operands [ 0 ] . reg << 24		2665383	1		<<			
ANR	2665439	MemberAccess	op -> operands [ 0 ] . reg		2665383	0					
ANR	2665440	ArrayIndexing	op -> operands [ 0 ]		2665383	0					
ANR	2665441	PtrMemberAccess	op -> operands		2665383	0					
ANR	2665442	Identifier	op		2665383	0					
ANR	2665443	Identifier	operands		2665383	1					
ANR	2665444	PrimaryExpression	0		2665383	1					
ANR	2665445	Identifier	reg		2665383	1					
ANR	2665446	PrimaryExpression	24		2665383	1					
ANR	2665447	ExpressionStatement	data += op -> operands [ 1 ] . reg << 18	701:1:15537:15570	2665383	5	True				
ANR	2665448	AssignmentExpression	data += op -> operands [ 1 ] . reg << 18		2665383	0		+=			
ANR	2665449	Identifier	data		2665383	0					
ANR	2665450	ShiftExpression	op -> operands [ 1 ] . reg << 18		2665383	1		<<			
ANR	2665451	MemberAccess	op -> operands [ 1 ] . reg		2665383	0					
ANR	2665452	ArrayIndexing	op -> operands [ 1 ]		2665383	0					
ANR	2665453	PtrMemberAccess	op -> operands		2665383	0					
ANR	2665454	Identifier	op		2665383	0					
ANR	2665455	Identifier	operands		2665383	1					
ANR	2665456	PrimaryExpression	1		2665383	1					
ANR	2665457	Identifier	reg		2665383	1					
ANR	2665458	PrimaryExpression	18		2665383	1					
ANR	2665459	ExpressionStatement	data += ( op -> operands [ 2 ] . reg & 0x7 ) << 29	702:1:15573:15614	2665383	6	True				
ANR	2665460	AssignmentExpression	data += ( op -> operands [ 2 ] . reg & 0x7 ) << 29		2665383	0		+=			
ANR	2665461	Identifier	data		2665383	0					
ANR	2665462	ShiftExpression	( op -> operands [ 2 ] . reg & 0x7 ) << 29		2665383	1		<<			
ANR	2665463	BitAndExpression	op -> operands [ 2 ] . reg & 0x7		2665383	0		&			
ANR	2665464	MemberAccess	op -> operands [ 2 ] . reg		2665383	0					
ANR	2665465	ArrayIndexing	op -> operands [ 2 ]		2665383	0					
ANR	2665466	PtrMemberAccess	op -> operands		2665383	0					
ANR	2665467	Identifier	op		2665383	0					
ANR	2665468	Identifier	operands		2665383	1					
ANR	2665469	PrimaryExpression	2		2665383	1					
ANR	2665470	Identifier	reg		2665383	1					
ANR	2665471	PrimaryExpression	0x7		2665383	1					
ANR	2665472	PrimaryExpression	29		2665383	1					
ANR	2665473	ExpressionStatement	data += ( op -> operands [ 2 ] . reg >> 3 ) << 16	703:1:15617:15657	2665383	7	True				
ANR	2665474	AssignmentExpression	data += ( op -> operands [ 2 ] . reg >> 3 ) << 16		2665383	0		+=			
ANR	2665475	Identifier	data		2665383	0					
ANR	2665476	ShiftExpression	( op -> operands [ 2 ] . reg >> 3 ) << 16		2665383	1		<<			
ANR	2665477	ShiftExpression	op -> operands [ 2 ] . reg >> 3		2665383	0		>>			
ANR	2665478	MemberAccess	op -> operands [ 2 ] . reg		2665383	0					
ANR	2665479	ArrayIndexing	op -> operands [ 2 ]		2665383	0					
ANR	2665480	PtrMemberAccess	op -> operands		2665383	0					
ANR	2665481	Identifier	op		2665383	0					
ANR	2665482	Identifier	operands		2665383	1					
ANR	2665483	PrimaryExpression	2		2665383	1					
ANR	2665484	Identifier	reg		2665383	1					
ANR	2665485	PrimaryExpression	3		2665383	1					
ANR	2665486	PrimaryExpression	16		2665383	1					
ANR	2665487	ExpressionStatement	data += ( op -> operands [ 3 ] . immediate & 0x8 ) << 20	704:1:15660:15707	2665383	8	True				
ANR	2665488	AssignmentExpression	data += ( op -> operands [ 3 ] . immediate & 0x8 ) << 20		2665383	0		+=			
ANR	2665489	Identifier	data		2665383	0					
ANR	2665490	ShiftExpression	( op -> operands [ 3 ] . immediate & 0x8 ) << 20		2665383	1		<<			
ANR	2665491	BitAndExpression	op -> operands [ 3 ] . immediate & 0x8		2665383	0		&			
ANR	2665492	MemberAccess	op -> operands [ 3 ] . immediate		2665383	0					
ANR	2665493	ArrayIndexing	op -> operands [ 3 ]		2665383	0					
ANR	2665494	PtrMemberAccess	op -> operands		2665383	0					
ANR	2665495	Identifier	op		2665383	0					
ANR	2665496	Identifier	operands		2665383	1					
ANR	2665497	PrimaryExpression	3		2665383	1					
ANR	2665498	Identifier	immediate		2665383	1					
ANR	2665499	PrimaryExpression	0x8		2665383	1					
ANR	2665500	PrimaryExpression	20		2665383	1					
ANR	2665501	ExpressionStatement	data += ( op -> operands [ 3 ] . immediate >> 4 ) << 8	705:1:15710:15755	2665383	9	True				
ANR	2665502	AssignmentExpression	data += ( op -> operands [ 3 ] . immediate >> 4 ) << 8		2665383	0		+=			
ANR	2665503	Identifier	data		2665383	0					
ANR	2665504	ShiftExpression	( op -> operands [ 3 ] . immediate >> 4 ) << 8		2665383	1		<<			
ANR	2665505	ShiftExpression	op -> operands [ 3 ] . immediate >> 4		2665383	0		>>			
ANR	2665506	MemberAccess	op -> operands [ 3 ] . immediate		2665383	0					
ANR	2665507	ArrayIndexing	op -> operands [ 3 ]		2665383	0					
ANR	2665508	PtrMemberAccess	op -> operands		2665383	0					
ANR	2665509	Identifier	op		2665383	0					
ANR	2665510	Identifier	operands		2665383	1					
ANR	2665511	PrimaryExpression	3		2665383	1					
ANR	2665512	Identifier	immediate		2665383	1					
ANR	2665513	PrimaryExpression	4		2665383	1					
ANR	2665514	PrimaryExpression	8		2665383	1					
ANR	2665515	ReturnStatement	return data ;	706:1:15758:15769	2665383	10	True				
ANR	2665516	Identifier	data		2665383	0					
ANR	2665517	ReturnType	static ut32		2665383	1					
ANR	2665518	Identifier	stp		2665383	2					
ANR	2665519	ParameterList	"ArmOp * op , int k"		2665383	3					
ANR	2665520	Parameter	ArmOp * op	689:16:15296:15304	2665383	0	True				
ANR	2665521	ParameterType	ArmOp *		2665383	0					
ANR	2665522	Identifier	op		2665383	1					
ANR	2665523	Parameter	int k	689:27:15307:15311	2665383	1	True				
ANR	2665524	ParameterType	int		2665383	0					
ANR	2665525	Identifier	k		2665383	1					
ANR	2665526	CFGEntryNode	ENTRY		2665383		True				
ANR	2665527	CFGExitNode	EXIT		2665383		True				
ANR	2665528	Symbol	UT32_MAX		2665383						
ANR	2665529	Symbol	op -> operands [ 2 ] . reg		2665383						
ANR	2665530	Symbol	op		2665383						
ANR	2665531	Symbol	* op -> operands		2665383						
ANR	2665532	Symbol	data		2665383						
ANR	2665533	Symbol	* op		2665383						
ANR	2665534	Symbol	op -> operands [ 1 ] . reg		2665383						
ANR	2665535	Symbol	op -> operands [ 0 ] . reg		2665383						
ANR	2665536	Symbol	k		2665383						
ANR	2665537	Symbol	op -> operands [ 3 ] . immediate		2665383						
ANR	2665538	Symbol	op -> operands		2665383						
ANR	2665539	Symbol	* * op		2665383						
ANR	2665540	Function	exception	709:0:15774:16025							
ANR	2665541	FunctionDef	"exception (ArmOp * op , ut32 k)"		2665540	0					
ANR	2665542	CompoundStatement		709:41:15815:16025	2665540	0					
ANR	2665543	IdentifierDeclStatement	ut32 data = UT32_MAX ;	710:1:15818:15838	2665540	0	True				
ANR	2665544	IdentifierDecl	data = UT32_MAX		2665540	0					
ANR	2665545	IdentifierDeclType	ut32		2665540	0					
ANR	2665546	Identifier	data		2665540	1					
ANR	2665547	AssignmentExpression	data = UT32_MAX		2665540	2		=			
ANR	2665548	Identifier	UT32_MAX		2665540	0					
ANR	2665549	Identifier	UT32_MAX		2665540	1					
ANR	2665550	IfStatement	if ( op -> operands [ 0 ] . type == ARM_CONSTANT )		2665540	1					
ANR	2665551	Condition	op -> operands [ 0 ] . type == ARM_CONSTANT	712:5:15846:15881	2665540	0	True				
ANR	2665552	EqualityExpression	op -> operands [ 0 ] . type == ARM_CONSTANT		2665540	0		==			
ANR	2665553	MemberAccess	op -> operands [ 0 ] . type		2665540	0					
ANR	2665554	ArrayIndexing	op -> operands [ 0 ]		2665540	0					
ANR	2665555	PtrMemberAccess	op -> operands		2665540	0					
ANR	2665556	Identifier	op		2665540	0					
ANR	2665557	Identifier	operands		2665540	1					
ANR	2665558	PrimaryExpression	0		2665540	1					
ANR	2665559	Identifier	type		2665540	1					
ANR	2665560	Identifier	ARM_CONSTANT		2665540	1					
ANR	2665561	CompoundStatement		5:2:72:105	2665540	1					
ANR	2665562	IdentifierDeclStatement	int n = op -> operands [ 0 ] . immediate ;	713:2:15888:15921	2665540	0	True				
ANR	2665563	IdentifierDecl	n = op -> operands [ 0 ] . immediate		2665540	0					
ANR	2665564	IdentifierDeclType	int		2665540	0					
ANR	2665565	Identifier	n		2665540	1					
ANR	2665566	AssignmentExpression	n = op -> operands [ 0 ] . immediate		2665540	2		=			
ANR	2665567	Identifier	n		2665540	0					
ANR	2665568	MemberAccess	op -> operands [ 0 ] . immediate		2665540	1					
ANR	2665569	ArrayIndexing	op -> operands [ 0 ]		2665540	0					
ANR	2665570	PtrMemberAccess	op -> operands		2665540	0					
ANR	2665571	Identifier	op		2665540	0					
ANR	2665572	Identifier	operands		2665540	1					
ANR	2665573	PrimaryExpression	0		2665540	1					
ANR	2665574	Identifier	immediate		2665540	1					
ANR	2665575	ExpressionStatement	data = k	714:2:15925:15933	2665540	1	True				
ANR	2665576	AssignmentExpression	data = k		2665540	0		=			
ANR	2665577	Identifier	data		2665540	0					
ANR	2665578	Identifier	k		2665540	1					
ANR	2665579	ExpressionStatement	data += ( ( ( n / 8 ) & 0xff ) << 16 )	715:2:15937:15969	2665540	2	True				
ANR	2665580	AssignmentExpression	data += ( ( ( n / 8 ) & 0xff ) << 16 )		2665540	0		+=			
ANR	2665581	Identifier	data		2665540	0					
ANR	2665582	ShiftExpression	( ( n / 8 ) & 0xff ) << 16		2665540	1		<<			
ANR	2665583	BitAndExpression	( n / 8 ) & 0xff		2665540	0		&			
ANR	2665584	MultiplicativeExpression	n / 8		2665540	0		/			
ANR	2665585	Identifier	n		2665540	0					
ANR	2665586	PrimaryExpression	8		2665540	1					
ANR	2665587	PrimaryExpression	0xff		2665540	1					
ANR	2665588	PrimaryExpression	16		2665540	1					
ANR	2665589	ExpressionStatement	data += n << 29	716:2:15973:15988	2665540	3	True				
ANR	2665590	AssignmentExpression	data += n << 29		2665540	0		+=			
ANR	2665591	Identifier	data		2665540	0					
ANR	2665592	ShiftExpression	n << 29		2665540	1		<<			
ANR	2665593	Identifier	n		2665540	0					
ANR	2665594	PrimaryExpression	29		2665540	1					
ANR	2665595	ReturnStatement	return data ;	718:1:16012:16023	2665540	2	True				
ANR	2665596	Identifier	data		2665540	0					
ANR	2665597	ReturnType	static ut32		2665540	1					
ANR	2665598	Identifier	exception		2665540	2					
ANR	2665599	ParameterList	"ArmOp * op , ut32 k"		2665540	3					
ANR	2665600	Parameter	ArmOp * op	709:22:15796:15804	2665540	0	True				
ANR	2665601	ParameterType	ArmOp *		2665540	0					
ANR	2665602	Identifier	op		2665540	1					
ANR	2665603	Parameter	ut32 k	709:33:15807:15812	2665540	1	True				
ANR	2665604	ParameterType	ut32		2665540	0					
ANR	2665605	Identifier	k		2665540	1					
ANR	2665606	CFGEntryNode	ENTRY		2665540		True				
ANR	2665607	CFGExitNode	EXIT		2665540		True				
ANR	2665608	Symbol	UT32_MAX		2665540						
ANR	2665609	Symbol	op		2665540						
ANR	2665610	Symbol	ARM_CONSTANT		2665540						
ANR	2665611	Symbol	* op -> operands		2665540						
ANR	2665612	Symbol	data		2665540						
ANR	2665613	Symbol	* op		2665540						
ANR	2665614	Symbol	op -> operands [ 0 ] . type		2665540						
ANR	2665615	Symbol	k		2665540						
ANR	2665616	Symbol	op -> operands		2665540						
ANR	2665617	Symbol	op -> operands [ 0 ] . immediate		2665540						
ANR	2665618	Symbol	n		2665540						
ANR	2665619	Symbol	* * op		2665540						
ANR	2665620	Function	arithmetic	721:0:16028:16628							
ANR	2665621	FunctionDef	"arithmetic (ArmOp * op , int k)"		2665620	0					
ANR	2665622	CompoundStatement		721:42:16070:16628	2665620	0					
ANR	2665623	IdentifierDeclStatement	ut32 data = UT32_MAX ;	722:1:16073:16093	2665620	0	True				
ANR	2665624	IdentifierDecl	data = UT32_MAX		2665620	0					
ANR	2665625	IdentifierDeclType	ut32		2665620	0					
ANR	2665626	Identifier	data		2665620	1					
ANR	2665627	AssignmentExpression	data = UT32_MAX		2665620	2		=			
ANR	2665628	Identifier	UT32_MAX		2665620	0					
ANR	2665629	Identifier	UT32_MAX		2665620	1					
ANR	2665630	IfStatement	if ( op -> operands_count < 3 )		2665620	1					
ANR	2665631	Condition	op -> operands_count < 3	723:5:16100:16121	2665620	0	True				
ANR	2665632	RelationalExpression	op -> operands_count < 3		2665620	0		<			
ANR	2665633	PtrMemberAccess	op -> operands_count		2665620	0					
ANR	2665634	Identifier	op		2665620	0					
ANR	2665635	Identifier	operands_count		2665620	1					
ANR	2665636	PrimaryExpression	3		2665620	1					
ANR	2665637	CompoundStatement		3:29:53:53	2665620	1					
ANR	2665638	ReturnStatement	return data ;	724:2:16128:16139	2665620	0	True				
ANR	2665639	Identifier	data		2665620	0					
ANR	2665640	IfStatement	if ( ! ( op -> operands [ 0 ] . type & ARM_GPR && op -> operands [ 1 ] . type & ARM_GPR ) )		2665620	2					
ANR	2665641	Condition	! ( op -> operands [ 0 ] . type & ARM_GPR && op -> operands [ 1 ] . type & ARM_GPR )	727:5:16150:16223	2665620	0	True				
ANR	2665642	UnaryOperationExpression	! ( op -> operands [ 0 ] . type & ARM_GPR && op -> operands [ 1 ] . type & ARM_GPR )		2665620	0					
ANR	2665643	UnaryOperator	!		2665620	0					
ANR	2665644	AndExpression	op -> operands [ 0 ] . type & ARM_GPR && op -> operands [ 1 ] . type & ARM_GPR		2665620	1		&&			
ANR	2665645	BitAndExpression	op -> operands [ 0 ] . type & ARM_GPR		2665620	0		&			
ANR	2665646	MemberAccess	op -> operands [ 0 ] . type		2665620	0					
ANR	2665647	ArrayIndexing	op -> operands [ 0 ]		2665620	0					
ANR	2665648	PtrMemberAccess	op -> operands		2665620	0					
ANR	2665649	Identifier	op		2665620	0					
ANR	2665650	Identifier	operands		2665620	1					
ANR	2665651	PrimaryExpression	0		2665620	1					
ANR	2665652	Identifier	type		2665620	1					
ANR	2665653	Identifier	ARM_GPR		2665620	1					
ANR	2665654	BitAndExpression	op -> operands [ 1 ] . type & ARM_GPR		2665620	1		&			
ANR	2665655	MemberAccess	op -> operands [ 1 ] . type		2665620	0					
ANR	2665656	ArrayIndexing	op -> operands [ 1 ]		2665620	0					
ANR	2665657	PtrMemberAccess	op -> operands		2665620	0					
ANR	2665658	Identifier	op		2665620	0					
ANR	2665659	Identifier	operands		2665620	1					
ANR	2665660	PrimaryExpression	1		2665620	1					
ANR	2665661	Identifier	type		2665620	1					
ANR	2665662	Identifier	ARM_GPR		2665620	1					
ANR	2665663	CompoundStatement		8:40:155:155	2665620	1					
ANR	2665664	ReturnStatement	return data ;	729:2:16230:16241	2665620	0	True				
ANR	2665665	Identifier	data		2665620	0					
ANR	2665666	IfStatement	if ( op -> operands [ 2 ] . type & ARM_GPR )		2665620	3					
ANR	2665667	Condition	op -> operands [ 2 ] . type & ARM_GPR	731:5:16251:16280	2665620	0	True				
ANR	2665668	BitAndExpression	op -> operands [ 2 ] . type & ARM_GPR		2665620	0		&			
ANR	2665669	MemberAccess	op -> operands [ 2 ] . type		2665620	0					
ANR	2665670	ArrayIndexing	op -> operands [ 2 ]		2665620	0					
ANR	2665671	PtrMemberAccess	op -> operands		2665620	0					
ANR	2665672	Identifier	op		2665620	0					
ANR	2665673	Identifier	operands		2665620	1					
ANR	2665674	PrimaryExpression	2		2665620	1					
ANR	2665675	Identifier	type		2665620	1					
ANR	2665676	Identifier	ARM_GPR		2665620	1					
ANR	2665677	CompoundStatement		11:37:212:212	2665620	1					
ANR	2665678	ExpressionStatement	k -= 6	732:2:16287:16293	2665620	0	True				
ANR	2665679	AssignmentExpression	k -= 6		2665620	0		-=			
ANR	2665680	Identifier	k		2665620	0					
ANR	2665681	PrimaryExpression	6		2665620	1					
ANR	2665682	ExpressionStatement	data = k	735:1:16300:16308	2665620	4	True				
ANR	2665683	AssignmentExpression	data = k		2665620	0		=			
ANR	2665684	Identifier	data		2665620	0					
ANR	2665685	Identifier	k		2665620	1					
ANR	2665686	ExpressionStatement	data += op -> operands [ 0 ] . reg << 24	736:1:16311:16344	2665620	5	True				
ANR	2665687	AssignmentExpression	data += op -> operands [ 0 ] . reg << 24		2665620	0		+=			
ANR	2665688	Identifier	data		2665620	0					
ANR	2665689	ShiftExpression	op -> operands [ 0 ] . reg << 24		2665620	1		<<			
ANR	2665690	MemberAccess	op -> operands [ 0 ] . reg		2665620	0					
ANR	2665691	ArrayIndexing	op -> operands [ 0 ]		2665620	0					
ANR	2665692	PtrMemberAccess	op -> operands		2665620	0					
ANR	2665693	Identifier	op		2665620	0					
ANR	2665694	Identifier	operands		2665620	1					
ANR	2665695	PrimaryExpression	0		2665620	1					
ANR	2665696	Identifier	reg		2665620	1					
ANR	2665697	PrimaryExpression	24		2665620	1					
ANR	2665698	ExpressionStatement	data += ( op -> operands [ 1 ] . reg & 7 ) << ( 24 + 5 )	737:1:16347:16392	2665620	6	True				
ANR	2665699	AssignmentExpression	data += ( op -> operands [ 1 ] . reg & 7 ) << ( 24 + 5 )		2665620	0		+=			
ANR	2665700	Identifier	data		2665620	0					
ANR	2665701	ShiftExpression	( op -> operands [ 1 ] . reg & 7 ) << ( 24 + 5 )		2665620	1		<<			
ANR	2665702	BitAndExpression	op -> operands [ 1 ] . reg & 7		2665620	0		&			
ANR	2665703	MemberAccess	op -> operands [ 1 ] . reg		2665620	0					
ANR	2665704	ArrayIndexing	op -> operands [ 1 ]		2665620	0					
ANR	2665705	PtrMemberAccess	op -> operands		2665620	0					
ANR	2665706	Identifier	op		2665620	0					
ANR	2665707	Identifier	operands		2665620	1					
ANR	2665708	PrimaryExpression	1		2665620	1					
ANR	2665709	Identifier	reg		2665620	1					
ANR	2665710	PrimaryExpression	7		2665620	1					
ANR	2665711	AdditiveExpression	24 + 5		2665620	1		+			
ANR	2665712	PrimaryExpression	24		2665620	0					
ANR	2665713	PrimaryExpression	5		2665620	1					
ANR	2665714	ExpressionStatement	data += ( op -> operands [ 1 ] . reg >> 3 ) << 16	738:1:16395:16435	2665620	7	True				
ANR	2665715	AssignmentExpression	data += ( op -> operands [ 1 ] . reg >> 3 ) << 16		2665620	0		+=			
ANR	2665716	Identifier	data		2665620	0					
ANR	2665717	ShiftExpression	( op -> operands [ 1 ] . reg >> 3 ) << 16		2665620	1		<<			
ANR	2665718	ShiftExpression	op -> operands [ 1 ] . reg >> 3		2665620	0		>>			
ANR	2665719	MemberAccess	op -> operands [ 1 ] . reg		2665620	0					
ANR	2665720	ArrayIndexing	op -> operands [ 1 ]		2665620	0					
ANR	2665721	PtrMemberAccess	op -> operands		2665620	0					
ANR	2665722	Identifier	op		2665620	0					
ANR	2665723	Identifier	operands		2665620	1					
ANR	2665724	PrimaryExpression	1		2665620	1					
ANR	2665725	Identifier	reg		2665620	1					
ANR	2665726	PrimaryExpression	3		2665620	1					
ANR	2665727	PrimaryExpression	16		2665620	1					
ANR	2665728	IfStatement	if ( op -> operands [ 2 ] . type & ARM_GPR )		2665620	8					
ANR	2665729	Condition	op -> operands [ 2 ] . type & ARM_GPR	739:5:16442:16471	2665620	0	True				
ANR	2665730	BitAndExpression	op -> operands [ 2 ] . type & ARM_GPR		2665620	0		&			
ANR	2665731	MemberAccess	op -> operands [ 2 ] . type		2665620	0					
ANR	2665732	ArrayIndexing	op -> operands [ 2 ]		2665620	0					
ANR	2665733	PtrMemberAccess	op -> operands		2665620	0					
ANR	2665734	Identifier	op		2665620	0					
ANR	2665735	Identifier	operands		2665620	1					
ANR	2665736	PrimaryExpression	2		2665620	1					
ANR	2665737	Identifier	type		2665620	1					
ANR	2665738	Identifier	ARM_GPR		2665620	1					
ANR	2665739	CompoundStatement		19:37:403:403	2665620	1					
ANR	2665740	ExpressionStatement	data += op -> operands [ 2 ] . reg << 8	740:2:16478:16510	2665620	0	True				
ANR	2665741	AssignmentExpression	data += op -> operands [ 2 ] . reg << 8		2665620	0		+=			
ANR	2665742	Identifier	data		2665620	0					
ANR	2665743	ShiftExpression	op -> operands [ 2 ] . reg << 8		2665620	1		<<			
ANR	2665744	MemberAccess	op -> operands [ 2 ] . reg		2665620	0					
ANR	2665745	ArrayIndexing	op -> operands [ 2 ]		2665620	0					
ANR	2665746	PtrMemberAccess	op -> operands		2665620	0					
ANR	2665747	Identifier	op		2665620	0					
ANR	2665748	Identifier	operands		2665620	1					
ANR	2665749	PrimaryExpression	2		2665620	1					
ANR	2665750	Identifier	reg		2665620	1					
ANR	2665751	PrimaryExpression	8		2665620	1					
ANR	2665752	ElseStatement	else		2665620	0					
ANR	2665753	CompoundStatement		21:8:449:449	2665620	0					
ANR	2665754	ExpressionStatement	data += ( op -> operands [ 2 ] . reg & 0x3f ) << 18	742:2:16524:16566	2665620	0	True				
ANR	2665755	AssignmentExpression	data += ( op -> operands [ 2 ] . reg & 0x3f ) << 18		2665620	0		+=			
ANR	2665756	Identifier	data		2665620	0					
ANR	2665757	ShiftExpression	( op -> operands [ 2 ] . reg & 0x3f ) << 18		2665620	1		<<			
ANR	2665758	BitAndExpression	op -> operands [ 2 ] . reg & 0x3f		2665620	0		&			
ANR	2665759	MemberAccess	op -> operands [ 2 ] . reg		2665620	0					
ANR	2665760	ArrayIndexing	op -> operands [ 2 ]		2665620	0					
ANR	2665761	PtrMemberAccess	op -> operands		2665620	0					
ANR	2665762	Identifier	op		2665620	0					
ANR	2665763	Identifier	operands		2665620	1					
ANR	2665764	PrimaryExpression	2		2665620	1					
ANR	2665765	Identifier	reg		2665620	1					
ANR	2665766	PrimaryExpression	0x3f		2665620	1					
ANR	2665767	PrimaryExpression	18		2665620	1					
ANR	2665768	ExpressionStatement	data += ( op -> operands [ 2 ] . reg >> 6 ) << 8	743:2:16570:16609	2665620	1	True				
ANR	2665769	AssignmentExpression	data += ( op -> operands [ 2 ] . reg >> 6 ) << 8		2665620	0		+=			
ANR	2665770	Identifier	data		2665620	0					
ANR	2665771	ShiftExpression	( op -> operands [ 2 ] . reg >> 6 ) << 8		2665620	1		<<			
ANR	2665772	ShiftExpression	op -> operands [ 2 ] . reg >> 6		2665620	0		>>			
ANR	2665773	MemberAccess	op -> operands [ 2 ] . reg		2665620	0					
ANR	2665774	ArrayIndexing	op -> operands [ 2 ]		2665620	0					
ANR	2665775	PtrMemberAccess	op -> operands		2665620	0					
ANR	2665776	Identifier	op		2665620	0					
ANR	2665777	Identifier	operands		2665620	1					
ANR	2665778	PrimaryExpression	2		2665620	1					
ANR	2665779	Identifier	reg		2665620	1					
ANR	2665780	PrimaryExpression	6		2665620	1					
ANR	2665781	PrimaryExpression	8		2665620	1					
ANR	2665782	ReturnStatement	return data ;	745:1:16615:16626	2665620	9	True				
ANR	2665783	Identifier	data		2665620	0					
ANR	2665784	ReturnType	static ut32		2665620	1					
ANR	2665785	Identifier	arithmetic		2665620	2					
ANR	2665786	ParameterList	"ArmOp * op , int k"		2665620	3					
ANR	2665787	Parameter	ArmOp * op	721:24:16052:16060	2665620	0	True				
ANR	2665788	ParameterType	ArmOp *		2665620	0					
ANR	2665789	Identifier	op		2665620	1					
ANR	2665790	Parameter	int k	721:35:16063:16067	2665620	1	True				
ANR	2665791	ParameterType	int		2665620	0					
ANR	2665792	Identifier	k		2665620	1					
ANR	2665793	CFGEntryNode	ENTRY		2665620		True				
ANR	2665794	CFGExitNode	EXIT		2665620		True				
ANR	2665795	Symbol	UT32_MAX		2665620						
ANR	2665796	Symbol	op -> operands [ 2 ] . reg		2665620						
ANR	2665797	Symbol	op		2665620						
ANR	2665798	Symbol	data		2665620						
ANR	2665799	Symbol	* op		2665620						
ANR	2665800	Symbol	op -> operands [ 1 ] . reg		2665620						
ANR	2665801	Symbol	k		2665620						
ANR	2665802	Symbol	ARM_GPR		2665620						
ANR	2665803	Symbol	op -> operands [ 2 ] . type		2665620						
ANR	2665804	Symbol	* * op		2665620						
ANR	2665805	Symbol	* op -> operands		2665620						
ANR	2665806	Symbol	op -> operands [ 1 ] . type		2665620						
ANR	2665807	Symbol	op -> operands_count		2665620						
ANR	2665808	Symbol	op -> operands [ 0 ] . type		2665620						
ANR	2665809	Symbol	op -> operands [ 0 ] . reg		2665620						
ANR	2665810	Symbol	op -> operands		2665620						
ANR	2665811	Function	neg	748:0:16631:16855							
ANR	2665812	FunctionDef	neg (ArmOp * op)		2665811	0					
ANR	2665813	CompoundStatement		748:27:16658:16855	2665811	0					
ANR	2665814	IfStatement	if ( op -> operands_count < 2 )		2665811	0					
ANR	2665815	Condition	op -> operands_count < 2	749:5:16665:16686	2665811	0	True				
ANR	2665816	RelationalExpression	op -> operands_count < 2		2665811	0		<			
ANR	2665817	PtrMemberAccess	op -> operands_count		2665811	0					
ANR	2665818	Identifier	op		2665811	0					
ANR	2665819	Identifier	operands_count		2665811	1					
ANR	2665820	PrimaryExpression	2		2665811	1					
ANR	2665821	CompoundStatement		2:29:30:30	2665811	1					
ANR	2665822	ReturnStatement	return - 1 ;	750:2:16693:16702	2665811	0	True				
ANR	2665823	UnaryOperationExpression	- 1		2665811	0					
ANR	2665824	UnaryOperator	-		2665811	0					
ANR	2665825	PrimaryExpression	1		2665811	1					
ANR	2665826	ExpressionStatement	op -> operands_count ++	752:1:16708:16728	2665811	1	True				
ANR	2665827	PostIncDecOperationExpression	op -> operands_count ++		2665811	0					
ANR	2665828	PtrMemberAccess	op -> operands_count		2665811	0					
ANR	2665829	Identifier	op		2665811	0					
ANR	2665830	Identifier	operands_count		2665811	1					
ANR	2665831	IncDec	++		2665811	1					
ANR	2665832	ExpressionStatement	op -> operands [ 2 ] = op -> operands [ 1 ]	753:1:16731:16764	2665811	2	True				
ANR	2665833	AssignmentExpression	op -> operands [ 2 ] = op -> operands [ 1 ]		2665811	0		=			
ANR	2665834	ArrayIndexing	op -> operands [ 2 ]		2665811	0					
ANR	2665835	PtrMemberAccess	op -> operands		2665811	0					
ANR	2665836	Identifier	op		2665811	0					
ANR	2665837	Identifier	operands		2665811	1					
ANR	2665838	PrimaryExpression	2		2665811	1					
ANR	2665839	ArrayIndexing	op -> operands [ 1 ]		2665811	1					
ANR	2665840	PtrMemberAccess	op -> operands		2665811	0					
ANR	2665841	Identifier	op		2665811	0					
ANR	2665842	Identifier	operands		2665811	1					
ANR	2665843	PrimaryExpression	1		2665811	1					
ANR	2665844	ExpressionStatement	op -> operands [ 1 ] . reg = 31	754:1:16767:16791	2665811	3	True				
ANR	2665845	AssignmentExpression	op -> operands [ 1 ] . reg = 31		2665811	0		=			
ANR	2665846	MemberAccess	op -> operands [ 1 ] . reg		2665811	0					
ANR	2665847	ArrayIndexing	op -> operands [ 1 ]		2665811	0					
ANR	2665848	PtrMemberAccess	op -> operands		2665811	0					
ANR	2665849	Identifier	op		2665811	0					
ANR	2665850	Identifier	operands		2665811	1					
ANR	2665851	PrimaryExpression	1		2665811	1					
ANR	2665852	Identifier	reg		2665811	1					
ANR	2665853	PrimaryExpression	31		2665811	1					
ANR	2665854	ReturnStatement	"return arithmetic ( op , 0xd1 ) ;"	756:1:16802:16830	2665811	4	True				
ANR	2665855	CallExpression	"arithmetic ( op , 0xd1 )"		2665811	0					
ANR	2665856	Callee	arithmetic		2665811	0					
ANR	2665857	Identifier	arithmetic		2665811	0					
ANR	2665858	ArgumentList	op		2665811	1					
ANR	2665859	Argument	op		2665811	0					
ANR	2665860	Identifier	op		2665811	0					
ANR	2665861	Argument	0xd1		2665811	1					
ANR	2665862	PrimaryExpression	0xd1		2665811	0					
ANR	2665863	ReturnType	static ut32		2665811	1					
ANR	2665864	Identifier	neg		2665811	2					
ANR	2665865	ParameterList	ArmOp * op		2665811	3					
ANR	2665866	Parameter	ArmOp * op	748:16:16647:16655	2665811	0	True				
ANR	2665867	ParameterType	ArmOp *		2665811	0					
ANR	2665868	Identifier	op		2665811	1					
ANR	2665869	CFGEntryNode	ENTRY		2665811		True				
ANR	2665870	CFGExitNode	EXIT		2665811		True				
ANR	2665871	Symbol	op		2665811						
ANR	2665872	Symbol	* op -> operands		2665811						
ANR	2665873	Symbol	* op		2665811						
ANR	2665874	Symbol	op -> operands [ 1 ] . reg		2665811						
ANR	2665875	Symbol	op -> operands_count		2665811						
ANR	2665876	Symbol	arithmetic		2665811						
ANR	2665877	Symbol	op -> operands		2665811						
ANR	2665878	Symbol	* * op		2665811						
ANR	2665879	Function	parseOperands	759:0:16858:21609							
ANR	2665880	FunctionDef	"parseOperands (char * str , ArmOp * op)"		2665879	0					
ANR	2665881	CompoundStatement		759:48:16906:21609	2665879	0					
ANR	2665882	IdentifierDeclStatement	char * t = strdup ( str ) ;	760:1:16909:16931	2665879	0	True				
ANR	2665883	IdentifierDecl	* t = strdup ( str )		2665879	0					
ANR	2665884	IdentifierDeclType	char *		2665879	0					
ANR	2665885	Identifier	t		2665879	1					
ANR	2665886	AssignmentExpression	* t = strdup ( str )		2665879	2		=			
ANR	2665887	Identifier	t		2665879	0					
ANR	2665888	CallExpression	strdup ( str )		2665879	1					
ANR	2665889	Callee	strdup		2665879	0					
ANR	2665890	Identifier	strdup		2665879	0					
ANR	2665891	ArgumentList	str		2665879	1					
ANR	2665892	Argument	str		2665879	0					
ANR	2665893	Identifier	str		2665879	0					
ANR	2665894	IdentifierDeclStatement	int operand = 0 ;	761:1:16934:16949	2665879	1	True				
ANR	2665895	IdentifierDecl	operand = 0		2665879	0					
ANR	2665896	IdentifierDeclType	int		2665879	0					
ANR	2665897	Identifier	operand		2665879	1					
ANR	2665898	AssignmentExpression	operand = 0		2665879	2		=			
ANR	2665899	Identifier	operand		2665879	0					
ANR	2665900	PrimaryExpression	0		2665879	1					
ANR	2665901	IdentifierDeclStatement	char * token = t ;	762:1:16952:16967	2665879	2	True				
ANR	2665902	IdentifierDecl	* token = t		2665879	0					
ANR	2665903	IdentifierDeclType	char *		2665879	0					
ANR	2665904	Identifier	token		2665879	1					
ANR	2665905	AssignmentExpression	* token = t		2665879	2		=			
ANR	2665906	Identifier	t		2665879	0					
ANR	2665907	Identifier	t		2665879	1					
ANR	2665908	IdentifierDeclStatement	char * x ;	763:1:16970:16977	2665879	3	True				
ANR	2665909	IdentifierDecl	* x		2665879	0					
ANR	2665910	IdentifierDeclType	char *		2665879	0					
ANR	2665911	Identifier	x		2665879	1					
ANR	2665912	IdentifierDeclStatement	int imm_count = 0 ;	764:1:16980:16997	2665879	4	True				
ANR	2665913	IdentifierDecl	imm_count = 0		2665879	0					
ANR	2665914	IdentifierDeclType	int		2665879	0					
ANR	2665915	Identifier	imm_count		2665879	1					
ANR	2665916	AssignmentExpression	imm_count = 0		2665879	2		=			
ANR	2665917	Identifier	imm_count		2665879	0					
ANR	2665918	PrimaryExpression	0		2665879	1					
ANR	2665919	IdentifierDeclStatement	int mem_opt = 0 ;	765:1:17000:17015	2665879	5	True				
ANR	2665920	IdentifierDecl	mem_opt = 0		2665879	0					
ANR	2665921	IdentifierDeclType	int		2665879	0					
ANR	2665922	Identifier	mem_opt		2665879	1					
ANR	2665923	AssignmentExpression	mem_opt = 0		2665879	2		=			
ANR	2665924	Identifier	mem_opt		2665879	0					
ANR	2665925	PrimaryExpression	0		2665879	1					
ANR	2665926	IdentifierDeclStatement	int msr_op_index = 0 ;	766:1:17018:17038	2665879	6	True				
ANR	2665927	IdentifierDecl	msr_op_index = 0		2665879	0					
ANR	2665928	IdentifierDeclType	int		2665879	0					
ANR	2665929	Identifier	msr_op_index		2665879	1					
ANR	2665930	AssignmentExpression	msr_op_index = 0		2665879	2		=			
ANR	2665931	Identifier	msr_op_index		2665879	0					
ANR	2665932	PrimaryExpression	0		2665879	1					
ANR	2665933	IfStatement	if ( ! token )		2665879	7					
ANR	2665934	Condition	! token	767:5:17045:17050	2665879	0	True				
ANR	2665935	UnaryOperationExpression	! token		2665879	0					
ANR	2665936	UnaryOperator	!		2665879	0					
ANR	2665937	Identifier	token		2665879	1					
ANR	2665938	CompoundStatement		9:13:146:146	2665879	1					
ANR	2665939	ReturnStatement	return false ;	768:2:17057:17069	2665879	0	True				
ANR	2665940	Identifier	false		2665879	0					
ANR	2665941	WhileStatement	while ( token )		2665879	8					
ANR	2665942	Condition	token	771:8:17083:17087	2665879	0	True				
ANR	2665943	Identifier	token		2665879	0					
ANR	2665944	CompoundStatement		14:2:187:219	2665879	1					
ANR	2665945	IdentifierDeclStatement	"char * next = strchr ( token , ',' ) ;"	772:2:17094:17126	2665879	0	True				
ANR	2665946	IdentifierDecl	"* next = strchr ( token , ',' )"		2665879	0					
ANR	2665947	IdentifierDeclType	char *		2665879	0					
ANR	2665948	Identifier	next		2665879	1					
ANR	2665949	AssignmentExpression	"* next = strchr ( token , ',' )"		2665879	2		=			
ANR	2665950	Identifier	next		2665879	0					
ANR	2665951	CallExpression	"strchr ( token , ',' )"		2665879	1					
ANR	2665952	Callee	strchr		2665879	0					
ANR	2665953	Identifier	strchr		2665879	0					
ANR	2665954	ArgumentList	token		2665879	1					
ANR	2665955	Argument	token		2665879	0					
ANR	2665956	Identifier	token		2665879	0					
ANR	2665957	Argument	"','"		2665879	1					
ANR	2665958	PrimaryExpression	"','"		2665879	0					
ANR	2665959	IfStatement	if ( next )		2665879	1					
ANR	2665960	Condition	next	773:6:17134:17137	2665879	0	True				
ANR	2665961	Identifier	next		2665879	0					
ANR	2665962	CompoundStatement		15:12:233:233	2665879	1					
ANR	2665963	ExpressionStatement	* next ++ = '\\0'	776:3:17231:17245	2665879	0	True				
ANR	2665964	AssignmentExpression	* next ++ = '\\0'		2665879	0		=			
ANR	2665965	UnaryOperationExpression	* next ++		2665879	0					
ANR	2665966	UnaryOperator	*		2665879	0					
ANR	2665967	PostIncDecOperationExpression	next ++		2665879	1					
ANR	2665968	Identifier	next		2665879	0					
ANR	2665969	IncDec	++		2665879	1					
ANR	2665970	PrimaryExpression	'\\0'		2665879	1					
ANR	2665971	WhileStatement	while ( token [ 0 ] == ' ' )		2665879	2					
ANR	2665972	Condition	token [ 0 ] == ' '	778:9:17260:17274	2665879	0	True				
ANR	2665973	EqualityExpression	token [ 0 ] == ' '		2665879	0		==			
ANR	2665974	ArrayIndexing	token [ 0 ]		2665879	0					
ANR	2665975	Identifier	token		2665879	0					
ANR	2665976	PrimaryExpression	0		2665879	1					
ANR	2665977	PrimaryExpression	' '		2665879	1					
ANR	2665978	CompoundStatement		20:26:370:370	2665879	1					
ANR	2665979	ExpressionStatement	token ++	779:3:17282:17289	2665879	0	True				
ANR	2665980	PostIncDecOperationExpression	token ++		2665879	0					
ANR	2665981	Identifier	token		2665879	0					
ANR	2665982	IncDec	++		2665879	1					
ANR	2665983	IfStatement	if ( operand >= MAX_OPERANDS )		2665879	3					
ANR	2665984	Condition	operand >= MAX_OPERANDS	781:6:17301:17323	2665879	0	True				
ANR	2665985	RelationalExpression	operand >= MAX_OPERANDS		2665879	0		>=			
ANR	2665986	Identifier	operand		2665879	0					
ANR	2665987	Identifier	MAX_OPERANDS		2665879	1					
ANR	2665988	CompoundStatement		23:31:419:419	2665879	1					
ANR	2665989	ExpressionStatement	"eprintf ( ""Too many operands\\n"" )"	782:3:17331:17362	2665879	0	True				
ANR	2665990	CallExpression	"eprintf ( ""Too many operands\\n"" )"		2665879	0					
ANR	2665991	Callee	eprintf		2665879	0					
ANR	2665992	Identifier	eprintf		2665879	0					
ANR	2665993	ArgumentList	"""Too many operands\\n"""		2665879	1					
ANR	2665994	Argument	"""Too many operands\\n"""		2665879	0					
ANR	2665995	PrimaryExpression	"""Too many operands\\n"""		2665879	0					
ANR	2665996	ReturnStatement	return false ;	783:3:17367:17379	2665879	1	True				
ANR	2665997	Identifier	false		2665879	0					
ANR	2665998	ExpressionStatement	op -> operands [ operand ] . type = ARM_NOTYPE	785:2:17387:17426	2665879	4	True				
ANR	2665999	AssignmentExpression	op -> operands [ operand ] . type = ARM_NOTYPE		2665879	0		=			
ANR	2666000	MemberAccess	op -> operands [ operand ] . type		2665879	0					
ANR	2666001	ArrayIndexing	op -> operands [ operand ]		2665879	0					
ANR	2666002	PtrMemberAccess	op -> operands		2665879	0					
ANR	2666003	Identifier	op		2665879	0					
ANR	2666004	Identifier	operands		2665879	1					
ANR	2666005	Identifier	operand		2665879	1					
ANR	2666006	Identifier	type		2665879	1					
ANR	2666007	Identifier	ARM_NOTYPE		2665879	1					
ANR	2666008	ExpressionStatement	op -> operands [ operand ] . reg_type = ARM_UNDEFINED	786:2:17430:17476	2665879	5	True				
ANR	2666009	AssignmentExpression	op -> operands [ operand ] . reg_type = ARM_UNDEFINED		2665879	0		=			
ANR	2666010	MemberAccess	op -> operands [ operand ] . reg_type		2665879	0					
ANR	2666011	ArrayIndexing	op -> operands [ operand ]		2665879	0					
ANR	2666012	PtrMemberAccess	op -> operands		2665879	0					
ANR	2666013	Identifier	op		2665879	0					
ANR	2666014	Identifier	operands		2665879	1					
ANR	2666015	Identifier	operand		2665879	1					
ANR	2666016	Identifier	reg_type		2665879	1					
ANR	2666017	Identifier	ARM_UNDEFINED		2665879	1					
ANR	2666018	ExpressionStatement	op -> operands [ operand ] . shift = ARM_NO_SHIFT	787:2:17480:17522	2665879	6	True				
ANR	2666019	AssignmentExpression	op -> operands [ operand ] . shift = ARM_NO_SHIFT		2665879	0		=			
ANR	2666020	MemberAccess	op -> operands [ operand ] . shift		2665879	0					
ANR	2666021	ArrayIndexing	op -> operands [ operand ]		2665879	0					
ANR	2666022	PtrMemberAccess	op -> operands		2665879	0					
ANR	2666023	Identifier	op		2665879	0					
ANR	2666024	Identifier	operands		2665879	1					
ANR	2666025	Identifier	operand		2665879	1					
ANR	2666026	Identifier	shift		2665879	1					
ANR	2666027	Identifier	ARM_NO_SHIFT		2665879	1					
ANR	2666028	IfStatement	"if ( strcmp ( op -> mnemonic , ""msr"" ) == 0 && operand == 1 )"		2665879	7					
ANR	2666029	Condition	"strcmp ( op -> mnemonic , ""msr"" ) == 0 && operand == 1"	790:6:17567:17615	2665879	0	True				
ANR	2666030	AndExpression	"strcmp ( op -> mnemonic , ""msr"" ) == 0 && operand == 1"		2665879	0		&&			
ANR	2666031	EqualityExpression	"strcmp ( op -> mnemonic , ""msr"" ) == 0"		2665879	0		==			
ANR	2666032	CallExpression	"strcmp ( op -> mnemonic , ""msr"" )"		2665879	0					
ANR	2666033	Callee	strcmp		2665879	0					
ANR	2666034	Identifier	strcmp		2665879	0					
ANR	2666035	ArgumentList	op -> mnemonic		2665879	1					
ANR	2666036	Argument	op -> mnemonic		2665879	0					
ANR	2666037	PtrMemberAccess	op -> mnemonic		2665879	0					
ANR	2666038	Identifier	op		2665879	0					
ANR	2666039	Identifier	mnemonic		2665879	1					
ANR	2666040	Argument	"""msr"""		2665879	1					
ANR	2666041	PrimaryExpression	"""msr"""		2665879	0					
ANR	2666042	PrimaryExpression	0		2665879	1					
ANR	2666043	EqualityExpression	operand == 1		2665879	1		==			
ANR	2666044	Identifier	operand		2665879	0					
ANR	2666045	PrimaryExpression	1		2665879	1					
ANR	2666046	CompoundStatement		32:57:711:711	2665879	1					
ANR	2666047	IfStatement	if ( token [ 0 ] == '#' || ( token [ 0 ] >= '0' && token [ 0 ] <= '9' ) )		2665879	0					
ANR	2666048	Condition	token [ 0 ] == '#' || ( token [ 0 ] >= '0' && token [ 0 ] <= '9' )	793:8:17664:17718	2665879	0	True				
ANR	2666049	OrExpression	token [ 0 ] == '#' || ( token [ 0 ] >= '0' && token [ 0 ] <= '9' )		2665879	0		||			
ANR	2666050	EqualityExpression	token [ 0 ] == '#'		2665879	0		==			
ANR	2666051	ArrayIndexing	token [ 0 ]		2665879	0					
ANR	2666052	Identifier	token		2665879	0					
ANR	2666053	PrimaryExpression	0		2665879	1					
ANR	2666054	PrimaryExpression	'#'		2665879	1					
ANR	2666055	AndExpression	token [ 0 ] >= '0' && token [ 0 ] <= '9'		2665879	1		&&			
ANR	2666056	RelationalExpression	token [ 0 ] >= '0'		2665879	0		>=			
ANR	2666057	ArrayIndexing	token [ 0 ]		2665879	0					
ANR	2666058	Identifier	token		2665879	0					
ANR	2666059	PrimaryExpression	0		2665879	1					
ANR	2666060	PrimaryExpression	'0'		2665879	1					
ANR	2666061	RelationalExpression	token [ 0 ] <= '9'		2665879	1		<=			
ANR	2666062	ArrayIndexing	token [ 0 ]		2665879	0					
ANR	2666063	Identifier	token		2665879	0					
ANR	2666064	PrimaryExpression	0		2665879	1					
ANR	2666065	PrimaryExpression	'9'		2665879	1					
ANR	2666066	CompoundStatement		35:65:814:814	2665879	1					
ANR	2666067	ExpressionStatement	op -> operands [ operand ] . sp_val = 0xfffe	795:4:17758:17795	2665879	0	True				
ANR	2666068	AssignmentExpression	op -> operands [ operand ] . sp_val = 0xfffe		2665879	0		=			
ANR	2666069	MemberAccess	op -> operands [ operand ] . sp_val		2665879	0					
ANR	2666070	ArrayIndexing	op -> operands [ operand ]		2665879	0					
ANR	2666071	PtrMemberAccess	op -> operands		2665879	0					
ANR	2666072	Identifier	op		2665879	0					
ANR	2666073	Identifier	operands		2665879	1					
ANR	2666074	Identifier	operand		2665879	1					
ANR	2666075	Identifier	sp_val		2665879	1					
ANR	2666076	PrimaryExpression	0xfffe		2665879	1					
ANR	2666077	ExpressionStatement	"op -> operands [ operand ] . immediate = r_num_math ( NULL , token [ 0 ] == '#' ? token + 1 : token )"	796:4:17832:17912	2665879	1	True				
ANR	2666078	AssignmentExpression	"op -> operands [ operand ] . immediate = r_num_math ( NULL , token [ 0 ] == '#' ? token + 1 : token )"		2665879	0		=			
ANR	2666079	MemberAccess	op -> operands [ operand ] . immediate		2665879	0					
ANR	2666080	ArrayIndexing	op -> operands [ operand ]		2665879	0					
ANR	2666081	PtrMemberAccess	op -> operands		2665879	0					
ANR	2666082	Identifier	op		2665879	0					
ANR	2666083	Identifier	operands		2665879	1					
ANR	2666084	Identifier	operand		2665879	1					
ANR	2666085	Identifier	immediate		2665879	1					
ANR	2666086	CallExpression	"r_num_math ( NULL , token [ 0 ] == '#' ? token + 1 : token )"		2665879	1					
ANR	2666087	Callee	r_num_math		2665879	0					
ANR	2666088	Identifier	r_num_math		2665879	0					
ANR	2666089	ArgumentList	NULL		2665879	1					
ANR	2666090	Argument	NULL		2665879	0					
ANR	2666091	Identifier	NULL		2665879	0					
ANR	2666092	Argument	token [ 0 ] == '#' ? token + 1 : token		2665879	1					
ANR	2666093	ConditionalExpression	token [ 0 ] == '#' ? token + 1 : token		2665879	0					
ANR	2666094	Condition	token [ 0 ] == '#'		2665879	0					
ANR	2666095	EqualityExpression	token [ 0 ] == '#'		2665879	0		==			
ANR	2666096	ArrayIndexing	token [ 0 ]		2665879	0					
ANR	2666097	Identifier	token		2665879	0					
ANR	2666098	PrimaryExpression	0		2665879	1					
ANR	2666099	PrimaryExpression	'#'		2665879	1					
ANR	2666100	AdditiveExpression	token + 1		2665879	1		+			
ANR	2666101	Identifier	token		2665879	0					
ANR	2666102	PrimaryExpression	1		2665879	1					
ANR	2666103	Identifier	token		2665879	2					
ANR	2666104	ExpressionStatement	operand ++	797:4:17918:17928	2665879	2	True				
ANR	2666105	PostIncDecOperationExpression	operand ++		2665879	0					
ANR	2666106	Identifier	operand		2665879	0					
ANR	2666107	IncDec	++		2665879	1					
ANR	2666108	ExpressionStatement	token = next	798:4:17934:17946	2665879	3	True				
ANR	2666109	AssignmentExpression	token = next		2665879	0		=			
ANR	2666110	Identifier	token		2665879	0					
ANR	2666111	Identifier	next		2665879	1					
ANR	2666112	ContinueStatement	continue ;	799:4:17952:17960	2665879	4	True				
ANR	2666113	IfStatement	"if ( ( strcmp ( op -> mnemonic , ""mrs"" ) == 0 && operand == 1 ) || ( strcmp ( op -> mnemonic , ""msr"" ) == 0 && operand == 0 ) )"		2665879	8					
ANR	2666114	Condition	"( strcmp ( op -> mnemonic , ""mrs"" ) == 0 && operand == 1 ) || ( strcmp ( op -> mnemonic , ""msr"" ) == 0 && operand == 0 )"	804:6:18005:18110	2665879	0	True				
ANR	2666115	OrExpression	"( strcmp ( op -> mnemonic , ""mrs"" ) == 0 && operand == 1 ) || ( strcmp ( op -> mnemonic , ""msr"" ) == 0 && operand == 0 )"		2665879	0		||			
ANR	2666116	AndExpression	"strcmp ( op -> mnemonic , ""mrs"" ) == 0 && operand == 1"		2665879	0		&&			
ANR	2666117	EqualityExpression	"strcmp ( op -> mnemonic , ""mrs"" ) == 0"		2665879	0		==			
ANR	2666118	CallExpression	"strcmp ( op -> mnemonic , ""mrs"" )"		2665879	0					
ANR	2666119	Callee	strcmp		2665879	0					
ANR	2666120	Identifier	strcmp		2665879	0					
ANR	2666121	ArgumentList	op -> mnemonic		2665879	1					
ANR	2666122	Argument	op -> mnemonic		2665879	0					
ANR	2666123	PtrMemberAccess	op -> mnemonic		2665879	0					
ANR	2666124	Identifier	op		2665879	0					
ANR	2666125	Identifier	mnemonic		2665879	1					
ANR	2666126	Argument	"""mrs"""		2665879	1					
ANR	2666127	PrimaryExpression	"""mrs"""		2665879	0					
ANR	2666128	PrimaryExpression	0		2665879	1					
ANR	2666129	EqualityExpression	operand == 1		2665879	1		==			
ANR	2666130	Identifier	operand		2665879	0					
ANR	2666131	PrimaryExpression	1		2665879	1					
ANR	2666132	AndExpression	"strcmp ( op -> mnemonic , ""msr"" ) == 0 && operand == 0"		2665879	1		&&			
ANR	2666133	EqualityExpression	"strcmp ( op -> mnemonic , ""msr"" ) == 0"		2665879	0		==			
ANR	2666134	CallExpression	"strcmp ( op -> mnemonic , ""msr"" )"		2665879	0					
ANR	2666135	Callee	strcmp		2665879	0					
ANR	2666136	Identifier	strcmp		2665879	0					
ANR	2666137	ArgumentList	op -> mnemonic		2665879	1					
ANR	2666138	Argument	op -> mnemonic		2665879	0					
ANR	2666139	PtrMemberAccess	op -> mnemonic		2665879	0					
ANR	2666140	Identifier	op		2665879	0					
ANR	2666141	Identifier	mnemonic		2665879	1					
ANR	2666142	Argument	"""msr"""		2665879	1					
ANR	2666143	PrimaryExpression	"""msr"""		2665879	0					
ANR	2666144	PrimaryExpression	0		2665879	1					
ANR	2666145	EqualityExpression	operand == 0		2665879	1		==			
ANR	2666146	Identifier	operand		2665879	0					
ANR	2666147	PrimaryExpression	0		2665879	1					
ANR	2666148	CompoundStatement		46:114:1206:1206	2665879	1					
ANR	2666149	ForStatement	for ( msr_op_index = 0 ; msr_const [ msr_op_index ] . name ; msr_op_index ++ )		2665879	0					
ANR	2666150	ForInit	msr_op_index = 0 ;	805:7:18122:18138	2665879	0	True				
ANR	2666151	AssignmentExpression	msr_op_index = 0		2665879	0		=			
ANR	2666152	Identifier	msr_op_index		2665879	0					
ANR	2666153	PrimaryExpression	0		2665879	1					
ANR	2666154	Condition	msr_const [ msr_op_index ] . name	805:25:18140:18167	2665879	1	True				
ANR	2666155	MemberAccess	msr_const [ msr_op_index ] . name		2665879	0					
ANR	2666156	ArrayIndexing	msr_const [ msr_op_index ]		2665879	0					
ANR	2666157	Identifier	msr_const		2665879	0					
ANR	2666158	Identifier	msr_op_index		2665879	1					
ANR	2666159	Identifier	name		2665879	1					
ANR	2666160	PostIncDecOperationExpression	msr_op_index ++	805:55:18170:18183	2665879	2	True				
ANR	2666161	Identifier	msr_op_index		2665879	0					
ANR	2666162	IncDec	++		2665879	1					
ANR	2666163	CompoundStatement		47:71:1279:1279	2665879	3					
ANR	2666164	IfStatement	"if ( strcasecmp ( token , msr_const [ msr_op_index ] . name ) == 0 )"		2665879	0					
ANR	2666165	Condition	"strcasecmp ( token , msr_const [ msr_op_index ] . name ) == 0"	806:8:18196:18248	2665879	0	True				
ANR	2666166	EqualityExpression	"strcasecmp ( token , msr_const [ msr_op_index ] . name ) == 0"		2665879	0		==			
ANR	2666167	CallExpression	"strcasecmp ( token , msr_const [ msr_op_index ] . name )"		2665879	0					
ANR	2666168	Callee	strcasecmp		2665879	0					
ANR	2666169	Identifier	strcasecmp		2665879	0					
ANR	2666170	ArgumentList	token		2665879	1					
ANR	2666171	Argument	token		2665879	0					
ANR	2666172	Identifier	token		2665879	0					
ANR	2666173	Argument	msr_const [ msr_op_index ] . name		2665879	1					
ANR	2666174	MemberAccess	msr_const [ msr_op_index ] . name		2665879	0					
ANR	2666175	ArrayIndexing	msr_const [ msr_op_index ]		2665879	0					
ANR	2666176	Identifier	msr_const		2665879	0					
ANR	2666177	Identifier	msr_op_index		2665879	1					
ANR	2666178	Identifier	name		2665879	1					
ANR	2666179	PrimaryExpression	0		2665879	1					
ANR	2666180	CompoundStatement		48:63:1344:1344	2665879	1					
ANR	2666181	ExpressionStatement	op -> operands_count ++	807:5:18258:18279	2665879	0	True				
ANR	2666182	PostIncDecOperationExpression	op -> operands_count ++		2665879	0					
ANR	2666183	PtrMemberAccess	op -> operands_count		2665879	0					
ANR	2666184	Identifier	op		2665879	0					
ANR	2666185	Identifier	operands_count		2665879	1					
ANR	2666186	IncDec	++		2665879	1					
ANR	2666187	ExpressionStatement	op -> operands [ operand ] . type = ARM_CONSTANT	808:5:18286:18327	2665879	1	True				
ANR	2666188	AssignmentExpression	op -> operands [ operand ] . type = ARM_CONSTANT		2665879	0		=			
ANR	2666189	MemberAccess	op -> operands [ operand ] . type		2665879	0					
ANR	2666190	ArrayIndexing	op -> operands [ operand ]		2665879	0					
ANR	2666191	PtrMemberAccess	op -> operands		2665879	0					
ANR	2666192	Identifier	op		2665879	0					
ANR	2666193	Identifier	operands		2665879	1					
ANR	2666194	Identifier	operand		2665879	1					
ANR	2666195	Identifier	type		2665879	1					
ANR	2666196	Identifier	ARM_CONSTANT		2665879	1					
ANR	2666197	ExpressionStatement	op -> operands [ operand ] . immediate = msr_const [ msr_op_index ] . val	809:5:18334:18395	2665879	2	True				
ANR	2666198	AssignmentExpression	op -> operands [ operand ] . immediate = msr_const [ msr_op_index ] . val		2665879	0		=			
ANR	2666199	MemberAccess	op -> operands [ operand ] . immediate		2665879	0					
ANR	2666200	ArrayIndexing	op -> operands [ operand ]		2665879	0					
ANR	2666201	PtrMemberAccess	op -> operands		2665879	0					
ANR	2666202	Identifier	op		2665879	0					
ANR	2666203	Identifier	operands		2665879	1					
ANR	2666204	Identifier	operand		2665879	1					
ANR	2666205	Identifier	immediate		2665879	1					
ANR	2666206	MemberAccess	msr_const [ msr_op_index ] . val		2665879	1					
ANR	2666207	ArrayIndexing	msr_const [ msr_op_index ]		2665879	0					
ANR	2666208	Identifier	msr_const		2665879	0					
ANR	2666209	Identifier	msr_op_index		2665879	1					
ANR	2666210	Identifier	val		2665879	1					
ANR	2666211	ExpressionStatement	imm_count ++	810:5:18402:18413	2665879	3	True				
ANR	2666212	PostIncDecOperationExpression	imm_count ++		2665879	0					
ANR	2666213	Identifier	imm_count		2665879	0					
ANR	2666214	IncDec	++		2665879	1					
ANR	2666215	BreakStatement	break ;	811:5:18420:18425	2665879	4	True				
ANR	2666216	IfStatement	if ( msr_const [ msr_op_index ] . name )		2665879	1					
ANR	2666217	Condition	msr_const [ msr_op_index ] . name	814:7:18445:18472	2665879	0	True				
ANR	2666218	MemberAccess	msr_const [ msr_op_index ] . name		2665879	0					
ANR	2666219	ArrayIndexing	msr_const [ msr_op_index ]		2665879	0					
ANR	2666220	Identifier	msr_const		2665879	0					
ANR	2666221	Identifier	msr_op_index		2665879	1					
ANR	2666222	Identifier	name		2665879	1					
ANR	2666223	CompoundStatement		56:37:1568:1568	2665879	1					
ANR	2666224	ExpressionStatement	operand ++	815:4:18481:18491	2665879	0	True				
ANR	2666225	PostIncDecOperationExpression	operand ++		2665879	0					
ANR	2666226	Identifier	operand		2665879	0					
ANR	2666227	IncDec	++		2665879	1					
ANR	2666228	ExpressionStatement	token = next	816:4:18497:18509	2665879	1	True				
ANR	2666229	AssignmentExpression	token = next		2665879	0		=			
ANR	2666230	Identifier	token		2665879	0					
ANR	2666231	Identifier	next		2665879	1					
ANR	2666232	ContinueStatement	continue ;	817:4:18515:18523	2665879	2	True				
ANR	2666233	WhileStatement	while ( token [ 0 ] == ' ' || token [ 0 ] == '[' || token [ 0 ] == ']' )		2665879	9					
ANR	2666234	Condition	token [ 0 ] == ' ' || token [ 0 ] == '[' || token [ 0 ] == ']'	821:9:18544:18596	2665879	0	True				
ANR	2666235	OrExpression	token [ 0 ] == ' ' || token [ 0 ] == '[' || token [ 0 ] == ']'		2665879	0		||			
ANR	2666236	EqualityExpression	token [ 0 ] == ' '		2665879	0		==			
ANR	2666237	ArrayIndexing	token [ 0 ]		2665879	0					
ANR	2666238	Identifier	token		2665879	0					
ANR	2666239	PrimaryExpression	0		2665879	1					
ANR	2666240	PrimaryExpression	' '		2665879	1					
ANR	2666241	OrExpression	token [ 0 ] == '[' || token [ 0 ] == ']'		2665879	1		||			
ANR	2666242	EqualityExpression	token [ 0 ] == '['		2665879	0		==			
ANR	2666243	ArrayIndexing	token [ 0 ]		2665879	0					
ANR	2666244	Identifier	token		2665879	0					
ANR	2666245	PrimaryExpression	0		2665879	1					
ANR	2666246	PrimaryExpression	'['		2665879	1					
ANR	2666247	EqualityExpression	token [ 0 ] == ']'		2665879	1		==			
ANR	2666248	ArrayIndexing	token [ 0 ]		2665879	0					
ANR	2666249	Identifier	token		2665879	0					
ANR	2666250	PrimaryExpression	0		2665879	1					
ANR	2666251	PrimaryExpression	']'		2665879	1					
ANR	2666252	CompoundStatement		63:64:1692:1692	2665879	1					
ANR	2666253	ExpressionStatement	token ++	822:3:18604:18612	2665879	0	True				
ANR	2666254	PostIncDecOperationExpression	token ++		2665879	0					
ANR	2666255	Identifier	token		2665879	0					
ANR	2666256	IncDec	++		2665879	1					
ANR	2666257	IfStatement	"if ( ! strncmp ( token , ""lsl"" , 3 ) )"		2665879	10					
ANR	2666258	Condition	"! strncmp ( token , ""lsl"" , 3 )"	825:6:18625:18650	2665879	0	True				
ANR	2666259	UnaryOperationExpression	"! strncmp ( token , ""lsl"" , 3 )"		2665879	0					
ANR	2666260	UnaryOperator	!		2665879	0					
ANR	2666261	CallExpression	"strncmp ( token , ""lsl"" , 3 )"		2665879	1					
ANR	2666262	Callee	strncmp		2665879	0					
ANR	2666263	Identifier	strncmp		2665879	0					
ANR	2666264	ArgumentList	token		2665879	1					
ANR	2666265	Argument	token		2665879	0					
ANR	2666266	Identifier	token		2665879	0					
ANR	2666267	Argument	"""lsl"""		2665879	1					
ANR	2666268	PrimaryExpression	"""lsl"""		2665879	0					
ANR	2666269	Argument	3		2665879	2					
ANR	2666270	PrimaryExpression	3		2665879	0					
ANR	2666271	CompoundStatement		67:34:1746:1746	2665879	1					
ANR	2666272	ExpressionStatement	op -> operands [ operand ] . shift = ARM_LSL	826:3:18658:18695	2665879	0	True				
ANR	2666273	AssignmentExpression	op -> operands [ operand ] . shift = ARM_LSL		2665879	0		=			
ANR	2666274	MemberAccess	op -> operands [ operand ] . shift		2665879	0					
ANR	2666275	ArrayIndexing	op -> operands [ operand ]		2665879	0					
ANR	2666276	PtrMemberAccess	op -> operands		2665879	0					
ANR	2666277	Identifier	op		2665879	0					
ANR	2666278	Identifier	operands		2665879	1					
ANR	2666279	Identifier	operand		2665879	1					
ANR	2666280	Identifier	shift		2665879	1					
ANR	2666281	Identifier	ARM_LSL		2665879	1					
ANR	2666282	ElseStatement	else		2665879	0					
ANR	2666283	IfStatement	"if ( ! strncmp ( token , ""lsr"" , 3 ) )"		2665879	0					
ANR	2666284	Condition	"! strncmp ( token , ""lsr"" , 3 )"	827:13:18710:18735	2665879	0	True				
ANR	2666285	UnaryOperationExpression	"! strncmp ( token , ""lsr"" , 3 )"		2665879	0					
ANR	2666286	UnaryOperator	!		2665879	0					
ANR	2666287	CallExpression	"strncmp ( token , ""lsr"" , 3 )"		2665879	1					
ANR	2666288	Callee	strncmp		2665879	0					
ANR	2666289	Identifier	strncmp		2665879	0					
ANR	2666290	ArgumentList	token		2665879	1					
ANR	2666291	Argument	token		2665879	0					
ANR	2666292	Identifier	token		2665879	0					
ANR	2666293	Argument	"""lsr"""		2665879	1					
ANR	2666294	PrimaryExpression	"""lsr"""		2665879	0					
ANR	2666295	Argument	3		2665879	2					
ANR	2666296	PrimaryExpression	3		2665879	0					
ANR	2666297	CompoundStatement		69:41:1831:1831	2665879	1					
ANR	2666298	ExpressionStatement	op -> operands [ operand ] . shift = ARM_LSR	828:3:18743:18780	2665879	0	True				
ANR	2666299	AssignmentExpression	op -> operands [ operand ] . shift = ARM_LSR		2665879	0		=			
ANR	2666300	MemberAccess	op -> operands [ operand ] . shift		2665879	0					
ANR	2666301	ArrayIndexing	op -> operands [ operand ]		2665879	0					
ANR	2666302	PtrMemberAccess	op -> operands		2665879	0					
ANR	2666303	Identifier	op		2665879	0					
ANR	2666304	Identifier	operands		2665879	1					
ANR	2666305	Identifier	operand		2665879	1					
ANR	2666306	Identifier	shift		2665879	1					
ANR	2666307	Identifier	ARM_LSR		2665879	1					
ANR	2666308	ElseStatement	else		2665879	0					
ANR	2666309	IfStatement	"if ( ! strncmp ( token , ""asr"" , 3 ) )"		2665879	0					
ANR	2666310	Condition	"! strncmp ( token , ""asr"" , 3 )"	829:13:18795:18820	2665879	0	True				
ANR	2666311	UnaryOperationExpression	"! strncmp ( token , ""asr"" , 3 )"		2665879	0					
ANR	2666312	UnaryOperator	!		2665879	0					
ANR	2666313	CallExpression	"strncmp ( token , ""asr"" , 3 )"		2665879	1					
ANR	2666314	Callee	strncmp		2665879	0					
ANR	2666315	Identifier	strncmp		2665879	0					
ANR	2666316	ArgumentList	token		2665879	1					
ANR	2666317	Argument	token		2665879	0					
ANR	2666318	Identifier	token		2665879	0					
ANR	2666319	Argument	"""asr"""		2665879	1					
ANR	2666320	PrimaryExpression	"""asr"""		2665879	0					
ANR	2666321	Argument	3		2665879	2					
ANR	2666322	PrimaryExpression	3		2665879	0					
ANR	2666323	CompoundStatement		71:41:1916:1916	2665879	1					
ANR	2666324	ExpressionStatement	op -> operands [ operand ] . shift = ARM_ASR	830:3:18828:18865	2665879	0	True				
ANR	2666325	AssignmentExpression	op -> operands [ operand ] . shift = ARM_ASR		2665879	0		=			
ANR	2666326	MemberAccess	op -> operands [ operand ] . shift		2665879	0					
ANR	2666327	ArrayIndexing	op -> operands [ operand ]		2665879	0					
ANR	2666328	PtrMemberAccess	op -> operands		2665879	0					
ANR	2666329	Identifier	op		2665879	0					
ANR	2666330	Identifier	operands		2665879	1					
ANR	2666331	Identifier	operand		2665879	1					
ANR	2666332	Identifier	shift		2665879	1					
ANR	2666333	Identifier	ARM_ASR		2665879	1					
ANR	2666334	IfStatement	if ( strlen ( token ) > 4 && op -> operands [ operand ] . shift != ARM_NO_SHIFT )		2665879	11					
ANR	2666335	Condition	strlen ( token ) > 4 && op -> operands [ operand ] . shift != ARM_NO_SHIFT	832:6:18877:18941	2665879	0	True				
ANR	2666336	AndExpression	strlen ( token ) > 4 && op -> operands [ operand ] . shift != ARM_NO_SHIFT		2665879	0		&&			
ANR	2666337	RelationalExpression	strlen ( token ) > 4		2665879	0		>			
ANR	2666338	CallExpression	strlen ( token )		2665879	0					
ANR	2666339	Callee	strlen		2665879	0					
ANR	2666340	Identifier	strlen		2665879	0					
ANR	2666341	ArgumentList	token		2665879	1					
ANR	2666342	Argument	token		2665879	0					
ANR	2666343	Identifier	token		2665879	0					
ANR	2666344	PrimaryExpression	4		2665879	1					
ANR	2666345	EqualityExpression	op -> operands [ operand ] . shift != ARM_NO_SHIFT		2665879	1		!=			
ANR	2666346	MemberAccess	op -> operands [ operand ] . shift		2665879	0					
ANR	2666347	ArrayIndexing	op -> operands [ operand ]		2665879	0					
ANR	2666348	PtrMemberAccess	op -> operands		2665879	0					
ANR	2666349	Identifier	op		2665879	0					
ANR	2666350	Identifier	operands		2665879	1					
ANR	2666351	Identifier	operand		2665879	1					
ANR	2666352	Identifier	shift		2665879	1					
ANR	2666353	Identifier	ARM_NO_SHIFT		2665879	1					
ANR	2666354	CompoundStatement		74:73:2037:2037	2665879	1					
ANR	2666355	ExpressionStatement	op -> operands_count ++	833:3:18949:18970	2665879	0	True				
ANR	2666356	PostIncDecOperationExpression	op -> operands_count ++		2665879	0					
ANR	2666357	PtrMemberAccess	op -> operands_count		2665879	0					
ANR	2666358	Identifier	op		2665879	0					
ANR	2666359	Identifier	operands_count		2665879	1					
ANR	2666360	IncDec	++		2665879	1					
ANR	2666361	ExpressionStatement	"op -> operands [ operand ] . shift_amount = r_num_math ( NULL , token + 4 )"	834:3:18975:19040	2665879	1	True				
ANR	2666362	AssignmentExpression	"op -> operands [ operand ] . shift_amount = r_num_math ( NULL , token + 4 )"		2665879	0		=			
ANR	2666363	MemberAccess	op -> operands [ operand ] . shift_amount		2665879	0					
ANR	2666364	ArrayIndexing	op -> operands [ operand ]		2665879	0					
ANR	2666365	PtrMemberAccess	op -> operands		2665879	0					
ANR	2666366	Identifier	op		2665879	0					
ANR	2666367	Identifier	operands		2665879	1					
ANR	2666368	Identifier	operand		2665879	1					
ANR	2666369	Identifier	shift_amount		2665879	1					
ANR	2666370	CallExpression	"r_num_math ( NULL , token + 4 )"		2665879	1					
ANR	2666371	Callee	r_num_math		2665879	0					
ANR	2666372	Identifier	r_num_math		2665879	0					
ANR	2666373	ArgumentList	NULL		2665879	1					
ANR	2666374	Argument	NULL		2665879	0					
ANR	2666375	Identifier	NULL		2665879	0					
ANR	2666376	Argument	token + 4		2665879	1					
ANR	2666377	AdditiveExpression	token + 4		2665879	0		+			
ANR	2666378	Identifier	token		2665879	0					
ANR	2666379	PrimaryExpression	4		2665879	1					
ANR	2666380	IfStatement	if ( op -> operands [ operand ] . shift_amount > 63 )		2665879	2					
ANR	2666381	Condition	op -> operands [ operand ] . shift_amount > 63	835:7:19049:19087	2665879	0	True				
ANR	2666382	RelationalExpression	op -> operands [ operand ] . shift_amount > 63		2665879	0		>			
ANR	2666383	MemberAccess	op -> operands [ operand ] . shift_amount		2665879	0					
ANR	2666384	ArrayIndexing	op -> operands [ operand ]		2665879	0					
ANR	2666385	PtrMemberAccess	op -> operands		2665879	0					
ANR	2666386	Identifier	op		2665879	0					
ANR	2666387	Identifier	operands		2665879	1					
ANR	2666388	Identifier	operand		2665879	1					
ANR	2666389	Identifier	shift_amount		2665879	1					
ANR	2666390	PrimaryExpression	63		2665879	1					
ANR	2666391	CompoundStatement		77:48:2183:2183	2665879	1					
ANR	2666392	ExpressionStatement	free ( t )	836:4:19096:19104	2665879	0	True				
ANR	2666393	CallExpression	free ( t )		2665879	0					
ANR	2666394	Callee	free		2665879	0					
ANR	2666395	Identifier	free		2665879	0					
ANR	2666396	ArgumentList	t		2665879	1					
ANR	2666397	Argument	t		2665879	0					
ANR	2666398	Identifier	t		2665879	0					
ANR	2666399	ReturnStatement	return false ;	837:4:19110:19122	2665879	1	True				
ANR	2666400	Identifier	false		2665879	0					
ANR	2666401	ExpressionStatement	operand ++	839:3:19132:19142	2665879	3	True				
ANR	2666402	PostIncDecOperationExpression	operand ++		2665879	0					
ANR	2666403	Identifier	operand		2665879	0					
ANR	2666404	IncDec	++		2665879	1					
ANR	2666405	ExpressionStatement	token = next	840:3:19147:19159	2665879	4	True				
ANR	2666406	AssignmentExpression	token = next		2665879	0		=			
ANR	2666407	Identifier	token		2665879	0					
ANR	2666408	Identifier	next		2665879	1					
ANR	2666409	ContinueStatement	continue ;	841:3:19164:19172	2665879	5	True				
ANR	2666410	SwitchStatement	switch ( token [ 0 ] )		2665879	12					
ANR	2666411	Condition	token [ 0 ]	844:10:19189:19196	2665879	0	True				
ANR	2666412	ArrayIndexing	token [ 0 ]		2665879	0					
ANR	2666413	Identifier	token		2665879	0					
ANR	2666414	PrimaryExpression	0		2665879	1					
ANR	2666415	CompoundStatement		86:20:2292:2292	2665879	1					
ANR	2666416	Label	case 'x' :	845:2:19203:19211	2665879	0	True				
ANR	2666417	ExpressionStatement	"x = strchr ( token , ',' )"	846:3:19216:19239	2665879	1	True				
ANR	2666418	AssignmentExpression	"x = strchr ( token , ',' )"		2665879	0		=			
ANR	2666419	Identifier	x		2665879	0					
ANR	2666420	CallExpression	"strchr ( token , ',' )"		2665879	1					
ANR	2666421	Callee	strchr		2665879	0					
ANR	2666422	Identifier	strchr		2665879	0					
ANR	2666423	ArgumentList	token		2665879	1					
ANR	2666424	Argument	token		2665879	0					
ANR	2666425	Identifier	token		2665879	0					
ANR	2666426	Argument	"','"		2665879	1					
ANR	2666427	PrimaryExpression	"','"		2665879	0					
ANR	2666428	IfStatement	if ( x )		2665879	2					
ANR	2666429	Condition	x	847:7:19248:19248	2665879	0	True				
ANR	2666430	Identifier	x		2665879	0					
ANR	2666431	CompoundStatement		89:10:2344:2344	2665879	1					
ANR	2666432	ExpressionStatement	x [ 0 ] = '\\0'	848:4:19257:19268	2665879	0	True				
ANR	2666433	AssignmentExpression	x [ 0 ] = '\\0'		2665879	0		=			
ANR	2666434	ArrayIndexing	x [ 0 ]		2665879	0					
ANR	2666435	Identifier	x		2665879	0					
ANR	2666436	PrimaryExpression	0		2665879	1					
ANR	2666437	PrimaryExpression	'\\0'		2665879	1					
ANR	2666438	ExpressionStatement	op -> operands_count ++	850:3:19278:19299	2665879	3	True				
ANR	2666439	PostIncDecOperationExpression	op -> operands_count ++		2665879	0					
ANR	2666440	PtrMemberAccess	op -> operands_count		2665879	0					
ANR	2666441	Identifier	op		2665879	0					
ANR	2666442	Identifier	operands_count		2665879	1					
ANR	2666443	IncDec	++		2665879	1					
ANR	2666444	ExpressionStatement	op -> operands [ operand ] . type = ARM_GPR	851:3:19304:19340	2665879	4	True				
ANR	2666445	AssignmentExpression	op -> operands [ operand ] . type = ARM_GPR		2665879	0		=			
ANR	2666446	MemberAccess	op -> operands [ operand ] . type		2665879	0					
ANR	2666447	ArrayIndexing	op -> operands [ operand ]		2665879	0					
ANR	2666448	PtrMemberAccess	op -> operands		2665879	0					
ANR	2666449	Identifier	op		2665879	0					
ANR	2666450	Identifier	operands		2665879	1					
ANR	2666451	Identifier	operand		2665879	1					
ANR	2666452	Identifier	type		2665879	1					
ANR	2666453	Identifier	ARM_GPR		2665879	1					
ANR	2666454	ExpressionStatement	op -> operands [ operand ] . reg_type = ARM_REG64	852:3:19345:19387	2665879	5	True				
ANR	2666455	AssignmentExpression	op -> operands [ operand ] . reg_type = ARM_REG64		2665879	0		=			
ANR	2666456	MemberAccess	op -> operands [ operand ] . reg_type		2665879	0					
ANR	2666457	ArrayIndexing	op -> operands [ operand ]		2665879	0					
ANR	2666458	PtrMemberAccess	op -> operands		2665879	0					
ANR	2666459	Identifier	op		2665879	0					
ANR	2666460	Identifier	operands		2665879	1					
ANR	2666461	Identifier	operand		2665879	1					
ANR	2666462	Identifier	reg_type		2665879	1					
ANR	2666463	Identifier	ARM_REG64		2665879	1					
ANR	2666464	IfStatement	"if ( ! strncmp ( token + 1 , ""zr"" , 2 ) )"		2665879	6					
ANR	2666465	Condition	"! strncmp ( token + 1 , ""zr"" , 2 )"	854:7:19397:19424	2665879	0	True				
ANR	2666466	UnaryOperationExpression	"! strncmp ( token + 1 , ""zr"" , 2 )"		2665879	0					
ANR	2666467	UnaryOperator	!		2665879	0					
ANR	2666468	CallExpression	"strncmp ( token + 1 , ""zr"" , 2 )"		2665879	1					
ANR	2666469	Callee	strncmp		2665879	0					
ANR	2666470	Identifier	strncmp		2665879	0					
ANR	2666471	ArgumentList	token + 1		2665879	1					
ANR	2666472	Argument	token + 1		2665879	0					
ANR	2666473	AdditiveExpression	token + 1		2665879	0		+			
ANR	2666474	Identifier	token		2665879	0					
ANR	2666475	PrimaryExpression	1		2665879	1					
ANR	2666476	Argument	"""zr"""		2665879	1					
ANR	2666477	PrimaryExpression	"""zr"""		2665879	0					
ANR	2666478	Argument	2		2665879	2					
ANR	2666479	PrimaryExpression	2		2665879	0					
ANR	2666480	CompoundStatement		96:37:2520:2520	2665879	1					
ANR	2666481	ExpressionStatement	op -> operands [ operand ] . reg = 31	856:4:19444:19474	2665879	0	True				
ANR	2666482	AssignmentExpression	op -> operands [ operand ] . reg = 31		2665879	0		=			
ANR	2666483	MemberAccess	op -> operands [ operand ] . reg		2665879	0					
ANR	2666484	ArrayIndexing	op -> operands [ operand ]		2665879	0					
ANR	2666485	PtrMemberAccess	op -> operands		2665879	0					
ANR	2666486	Identifier	op		2665879	0					
ANR	2666487	Identifier	operands		2665879	1					
ANR	2666488	Identifier	operand		2665879	1					
ANR	2666489	Identifier	reg		2665879	1					
ANR	2666490	PrimaryExpression	31		2665879	1					
ANR	2666491	ElseStatement	else		2665879	0					
ANR	2666492	CompoundStatement		99:10:2579:2579	2665879	0					
ANR	2666493	ExpressionStatement	"op -> operands [ operand ] . reg = r_num_math ( NULL , token + 1 )"	858:4:19492:19548	2665879	0	True				
ANR	2666494	AssignmentExpression	"op -> operands [ operand ] . reg = r_num_math ( NULL , token + 1 )"		2665879	0		=			
ANR	2666495	MemberAccess	op -> operands [ operand ] . reg		2665879	0					
ANR	2666496	ArrayIndexing	op -> operands [ operand ]		2665879	0					
ANR	2666497	PtrMemberAccess	op -> operands		2665879	0					
ANR	2666498	Identifier	op		2665879	0					
ANR	2666499	Identifier	operands		2665879	1					
ANR	2666500	Identifier	operand		2665879	1					
ANR	2666501	Identifier	reg		2665879	1					
ANR	2666502	CallExpression	"r_num_math ( NULL , token + 1 )"		2665879	1					
ANR	2666503	Callee	r_num_math		2665879	0					
ANR	2666504	Identifier	r_num_math		2665879	0					
ANR	2666505	ArgumentList	NULL		2665879	1					
ANR	2666506	Argument	NULL		2665879	0					
ANR	2666507	Identifier	NULL		2665879	0					
ANR	2666508	Argument	token + 1		2665879	1					
ANR	2666509	AdditiveExpression	token + 1		2665879	0		+			
ANR	2666510	Identifier	token		2665879	0					
ANR	2666511	PrimaryExpression	1		2665879	1					
ANR	2666512	IfStatement	if ( op -> operands [ operand ] . reg > 31 )		2665879	7					
ANR	2666513	Condition	op -> operands [ operand ] . reg > 31	861:7:19563:19592	2665879	0	True				
ANR	2666514	RelationalExpression	op -> operands [ operand ] . reg > 31		2665879	0		>			
ANR	2666515	MemberAccess	op -> operands [ operand ] . reg		2665879	0					
ANR	2666516	ArrayIndexing	op -> operands [ operand ]		2665879	0					
ANR	2666517	PtrMemberAccess	op -> operands		2665879	0					
ANR	2666518	Identifier	op		2665879	0					
ANR	2666519	Identifier	operands		2665879	1					
ANR	2666520	Identifier	operand		2665879	1					
ANR	2666521	Identifier	reg		2665879	1					
ANR	2666522	PrimaryExpression	31		2665879	1					
ANR	2666523	CompoundStatement		103:39:2688:2688	2665879	1					
ANR	2666524	ExpressionStatement	free ( t )	862:4:19601:19609	2665879	0	True				
ANR	2666525	CallExpression	free ( t )		2665879	0					
ANR	2666526	Callee	free		2665879	0					
ANR	2666527	Identifier	free		2665879	0					
ANR	2666528	ArgumentList	t		2665879	1					
ANR	2666529	Argument	t		2665879	0					
ANR	2666530	Identifier	t		2665879	0					
ANR	2666531	ReturnStatement	return false ;	863:4:19615:19627	2665879	1	True				
ANR	2666532	Identifier	false		2665879	0					
ANR	2666533	BreakStatement	break ;	865:3:19637:19642	2665879	8	True				
ANR	2666534	Label	case 'w' :	866:2:19646:19654	2665879	9	True				
ANR	2666535	ExpressionStatement	op -> operands_count ++	867:3:19659:19680	2665879	10	True				
ANR	2666536	PostIncDecOperationExpression	op -> operands_count ++		2665879	0					
ANR	2666537	PtrMemberAccess	op -> operands_count		2665879	0					
ANR	2666538	Identifier	op		2665879	0					
ANR	2666539	Identifier	operands_count		2665879	1					
ANR	2666540	IncDec	++		2665879	1					
ANR	2666541	ExpressionStatement	op -> operands [ operand ] . type = ARM_GPR	868:3:19685:19721	2665879	11	True				
ANR	2666542	AssignmentExpression	op -> operands [ operand ] . type = ARM_GPR		2665879	0		=			
ANR	2666543	MemberAccess	op -> operands [ operand ] . type		2665879	0					
ANR	2666544	ArrayIndexing	op -> operands [ operand ]		2665879	0					
ANR	2666545	PtrMemberAccess	op -> operands		2665879	0					
ANR	2666546	Identifier	op		2665879	0					
ANR	2666547	Identifier	operands		2665879	1					
ANR	2666548	Identifier	operand		2665879	1					
ANR	2666549	Identifier	type		2665879	1					
ANR	2666550	Identifier	ARM_GPR		2665879	1					
ANR	2666551	ExpressionStatement	op -> operands [ operand ] . reg_type = ARM_REG32	869:3:19726:19768	2665879	12	True				
ANR	2666552	AssignmentExpression	op -> operands [ operand ] . reg_type = ARM_REG32		2665879	0		=			
ANR	2666553	MemberAccess	op -> operands [ operand ] . reg_type		2665879	0					
ANR	2666554	ArrayIndexing	op -> operands [ operand ]		2665879	0					
ANR	2666555	PtrMemberAccess	op -> operands		2665879	0					
ANR	2666556	Identifier	op		2665879	0					
ANR	2666557	Identifier	operands		2665879	1					
ANR	2666558	Identifier	operand		2665879	1					
ANR	2666559	Identifier	reg_type		2665879	1					
ANR	2666560	Identifier	ARM_REG32		2665879	1					
ANR	2666561	IfStatement	"if ( ! strncmp ( token + 1 , ""zr"" , 2 ) )"		2665879	13					
ANR	2666562	Condition	"! strncmp ( token + 1 , ""zr"" , 2 )"	871:7:19778:19805	2665879	0	True				
ANR	2666563	UnaryOperationExpression	"! strncmp ( token + 1 , ""zr"" , 2 )"		2665879	0					
ANR	2666564	UnaryOperator	!		2665879	0					
ANR	2666565	CallExpression	"strncmp ( token + 1 , ""zr"" , 2 )"		2665879	1					
ANR	2666566	Callee	strncmp		2665879	0					
ANR	2666567	Identifier	strncmp		2665879	0					
ANR	2666568	ArgumentList	token + 1		2665879	1					
ANR	2666569	Argument	token + 1		2665879	0					
ANR	2666570	AdditiveExpression	token + 1		2665879	0		+			
ANR	2666571	Identifier	token		2665879	0					
ANR	2666572	PrimaryExpression	1		2665879	1					
ANR	2666573	Argument	"""zr"""		2665879	1					
ANR	2666574	PrimaryExpression	"""zr"""		2665879	0					
ANR	2666575	Argument	2		2665879	2					
ANR	2666576	PrimaryExpression	2		2665879	0					
ANR	2666577	CompoundStatement		113:37:2901:2901	2665879	1					
ANR	2666578	ExpressionStatement	op -> operands [ operand ] . reg = 31	873:4:19825:19855	2665879	0	True				
ANR	2666579	AssignmentExpression	op -> operands [ operand ] . reg = 31		2665879	0		=			
ANR	2666580	MemberAccess	op -> operands [ operand ] . reg		2665879	0					
ANR	2666581	ArrayIndexing	op -> operands [ operand ]		2665879	0					
ANR	2666582	PtrMemberAccess	op -> operands		2665879	0					
ANR	2666583	Identifier	op		2665879	0					
ANR	2666584	Identifier	operands		2665879	1					
ANR	2666585	Identifier	operand		2665879	1					
ANR	2666586	Identifier	reg		2665879	1					
ANR	2666587	PrimaryExpression	31		2665879	1					
ANR	2666588	ElseStatement	else		2665879	0					
ANR	2666589	IfStatement	"if ( ! strncmp ( token + 1 , ""sp"" , 2 ) )"		2665879	0					
ANR	2666590	Condition	"! strncmp ( token + 1 , ""sp"" , 2 )"	874:14:19871:19898	2665879	0	True				
ANR	2666591	UnaryOperationExpression	"! strncmp ( token + 1 , ""sp"" , 2 )"		2665879	0					
ANR	2666592	UnaryOperator	!		2665879	0					
ANR	2666593	CallExpression	"strncmp ( token + 1 , ""sp"" , 2 )"		2665879	1					
ANR	2666594	Callee	strncmp		2665879	0					
ANR	2666595	Identifier	strncmp		2665879	0					
ANR	2666596	ArgumentList	token + 1		2665879	1					
ANR	2666597	Argument	token + 1		2665879	0					
ANR	2666598	AdditiveExpression	token + 1		2665879	0		+			
ANR	2666599	Identifier	token		2665879	0					
ANR	2666600	PrimaryExpression	1		2665879	1					
ANR	2666601	Argument	"""sp"""		2665879	1					
ANR	2666602	PrimaryExpression	"""sp"""		2665879	0					
ANR	2666603	Argument	2		2665879	2					
ANR	2666604	PrimaryExpression	2		2665879	0					
ANR	2666605	CompoundStatement		116:44:2994:2994	2665879	1					
ANR	2666606	ExpressionStatement	op -> operands [ operand ] . reg = 31	876:4:19918:19948	2665879	0	True				
ANR	2666607	AssignmentExpression	op -> operands [ operand ] . reg = 31		2665879	0		=			
ANR	2666608	MemberAccess	op -> operands [ operand ] . reg		2665879	0					
ANR	2666609	ArrayIndexing	op -> operands [ operand ]		2665879	0					
ANR	2666610	PtrMemberAccess	op -> operands		2665879	0					
ANR	2666611	Identifier	op		2665879	0					
ANR	2666612	Identifier	operands		2665879	1					
ANR	2666613	Identifier	operand		2665879	1					
ANR	2666614	Identifier	reg		2665879	1					
ANR	2666615	PrimaryExpression	31		2665879	1					
ANR	2666616	ElseStatement	else		2665879	0					
ANR	2666617	CompoundStatement		119:10:3053:3053	2665879	0					
ANR	2666618	ExpressionStatement	"op -> operands [ operand ] . reg = r_num_math ( NULL , token + 1 )"	878:4:19966:20022	2665879	0	True				
ANR	2666619	AssignmentExpression	"op -> operands [ operand ] . reg = r_num_math ( NULL , token + 1 )"		2665879	0		=			
ANR	2666620	MemberAccess	op -> operands [ operand ] . reg		2665879	0					
ANR	2666621	ArrayIndexing	op -> operands [ operand ]		2665879	0					
ANR	2666622	PtrMemberAccess	op -> operands		2665879	0					
ANR	2666623	Identifier	op		2665879	0					
ANR	2666624	Identifier	operands		2665879	1					
ANR	2666625	Identifier	operand		2665879	1					
ANR	2666626	Identifier	reg		2665879	1					
ANR	2666627	CallExpression	"r_num_math ( NULL , token + 1 )"		2665879	1					
ANR	2666628	Callee	r_num_math		2665879	0					
ANR	2666629	Identifier	r_num_math		2665879	0					
ANR	2666630	ArgumentList	NULL		2665879	1					
ANR	2666631	Argument	NULL		2665879	0					
ANR	2666632	Identifier	NULL		2665879	0					
ANR	2666633	Argument	token + 1		2665879	1					
ANR	2666634	AdditiveExpression	token + 1		2665879	0		+			
ANR	2666635	Identifier	token		2665879	0					
ANR	2666636	PrimaryExpression	1		2665879	1					
ANR	2666637	IfStatement	if ( op -> operands [ operand ] . reg > 31 )		2665879	14					
ANR	2666638	Condition	op -> operands [ operand ] . reg > 31	881:7:20037:20066	2665879	0	True				
ANR	2666639	RelationalExpression	op -> operands [ operand ] . reg > 31		2665879	0		>			
ANR	2666640	MemberAccess	op -> operands [ operand ] . reg		2665879	0					
ANR	2666641	ArrayIndexing	op -> operands [ operand ]		2665879	0					
ANR	2666642	PtrMemberAccess	op -> operands		2665879	0					
ANR	2666643	Identifier	op		2665879	0					
ANR	2666644	Identifier	operands		2665879	1					
ANR	2666645	Identifier	operand		2665879	1					
ANR	2666646	Identifier	reg		2665879	1					
ANR	2666647	PrimaryExpression	31		2665879	1					
ANR	2666648	CompoundStatement		123:39:3162:3162	2665879	1					
ANR	2666649	ExpressionStatement	free ( t )	882:4:20075:20083	2665879	0	True				
ANR	2666650	CallExpression	free ( t )		2665879	0					
ANR	2666651	Callee	free		2665879	0					
ANR	2666652	Identifier	free		2665879	0					
ANR	2666653	ArgumentList	t		2665879	1					
ANR	2666654	Argument	t		2665879	0					
ANR	2666655	Identifier	t		2665879	0					
ANR	2666656	ReturnStatement	return false ;	883:4:20089:20101	2665879	1	True				
ANR	2666657	Identifier	false		2665879	0					
ANR	2666658	BreakStatement	break ;	885:3:20111:20116	2665879	15	True				
ANR	2666659	Label	case 'v' :	886:2:20120:20128	2665879	16	True				
ANR	2666660	ExpressionStatement	op -> operands_count ++	887:3:20133:20154	2665879	17	True				
ANR	2666661	PostIncDecOperationExpression	op -> operands_count ++		2665879	0					
ANR	2666662	PtrMemberAccess	op -> operands_count		2665879	0					
ANR	2666663	Identifier	op		2665879	0					
ANR	2666664	Identifier	operands_count		2665879	1					
ANR	2666665	IncDec	++		2665879	1					
ANR	2666666	ExpressionStatement	op -> operands [ operand ] . type = ARM_FP	888:3:20159:20194	2665879	18	True				
ANR	2666667	AssignmentExpression	op -> operands [ operand ] . type = ARM_FP		2665879	0		=			
ANR	2666668	MemberAccess	op -> operands [ operand ] . type		2665879	0					
ANR	2666669	ArrayIndexing	op -> operands [ operand ]		2665879	0					
ANR	2666670	PtrMemberAccess	op -> operands		2665879	0					
ANR	2666671	Identifier	op		2665879	0					
ANR	2666672	Identifier	operands		2665879	1					
ANR	2666673	Identifier	operand		2665879	1					
ANR	2666674	Identifier	type		2665879	1					
ANR	2666675	Identifier	ARM_FP		2665879	1					
ANR	2666676	ExpressionStatement	"op -> operands [ operand ] . reg = r_num_math ( NULL , token + 1 )"	889:3:20199:20255	2665879	19	True				
ANR	2666677	AssignmentExpression	"op -> operands [ operand ] . reg = r_num_math ( NULL , token + 1 )"		2665879	0		=			
ANR	2666678	MemberAccess	op -> operands [ operand ] . reg		2665879	0					
ANR	2666679	ArrayIndexing	op -> operands [ operand ]		2665879	0					
ANR	2666680	PtrMemberAccess	op -> operands		2665879	0					
ANR	2666681	Identifier	op		2665879	0					
ANR	2666682	Identifier	operands		2665879	1					
ANR	2666683	Identifier	operand		2665879	1					
ANR	2666684	Identifier	reg		2665879	1					
ANR	2666685	CallExpression	"r_num_math ( NULL , token + 1 )"		2665879	1					
ANR	2666686	Callee	r_num_math		2665879	0					
ANR	2666687	Identifier	r_num_math		2665879	0					
ANR	2666688	ArgumentList	NULL		2665879	1					
ANR	2666689	Argument	NULL		2665879	0					
ANR	2666690	Identifier	NULL		2665879	0					
ANR	2666691	Argument	token + 1		2665879	1					
ANR	2666692	AdditiveExpression	token + 1		2665879	0		+			
ANR	2666693	Identifier	token		2665879	0					
ANR	2666694	PrimaryExpression	1		2665879	1					
ANR	2666695	BreakStatement	break ;	890:3:20260:20265	2665879	20	True				
ANR	2666696	Label	case 's' :	891:2:20269:20277	2665879	21	True				
ANR	2666697	Label	case 'S' :	892:2:20281:20289	2665879	22	True				
ANR	2666698	IfStatement	if ( token [ 1 ] == 'P' || token [ 1 ] == 'p' )		2665879	23					
ANR	2666699	Condition	token [ 1 ] == 'P' || token [ 1 ] == 'p'	893:7:20298:20332	2665879	0	True				
ANR	2666700	OrExpression	token [ 1 ] == 'P' || token [ 1 ] == 'p'		2665879	0		||			
ANR	2666701	EqualityExpression	token [ 1 ] == 'P'		2665879	0		==			
ANR	2666702	ArrayIndexing	token [ 1 ]		2665879	0					
ANR	2666703	Identifier	token		2665879	0					
ANR	2666704	PrimaryExpression	1		2665879	1					
ANR	2666705	PrimaryExpression	'P'		2665879	1					
ANR	2666706	EqualityExpression	token [ 1 ] == 'p'		2665879	1		==			
ANR	2666707	ArrayIndexing	token [ 1 ]		2665879	0					
ANR	2666708	Identifier	token		2665879	0					
ANR	2666709	PrimaryExpression	1		2665879	1					
ANR	2666710	PrimaryExpression	'p'		2665879	1					
ANR	2666711	CompoundStatement		136:4:3434:3439	2665879	1					
ANR	2666712	IdentifierDeclStatement	int i ;	894:4:20341:20346	2665879	0	True				
ANR	2666713	IdentifierDecl	i		2665879	0					
ANR	2666714	IdentifierDeclType	int		2665879	0					
ANR	2666715	Identifier	i		2665879	1					
ANR	2666716	ForStatement	for ( i = 0 ; msr_const [ i ] . name ; i ++ )		2665879	1					
ANR	2666717	ForInit	i = 0 ;	895:9:20357:20362	2665879	0	True				
ANR	2666718	AssignmentExpression	i = 0		2665879	0		=			
ANR	2666719	Identifier	i		2665879	0					
ANR	2666720	PrimaryExpression	0		2665879	1					
ANR	2666721	Condition	msr_const [ i ] . name	895:16:20364:20380	2665879	1	True				
ANR	2666722	MemberAccess	msr_const [ i ] . name		2665879	0					
ANR	2666723	ArrayIndexing	msr_const [ i ]		2665879	0					
ANR	2666724	Identifier	msr_const		2665879	0					
ANR	2666725	Identifier	i		2665879	1					
ANR	2666726	Identifier	name		2665879	1					
ANR	2666727	PostIncDecOperationExpression	i ++	895:35:20383:20385	2665879	2	True				
ANR	2666728	Identifier	i		2665879	0					
ANR	2666729	IncDec	++		2665879	1					
ANR	2666730	CompoundStatement		137:40:3481:3481	2665879	3					
ANR	2666731	IfStatement	"if ( ! r_str_ncasecmp ( token , msr_const [ i ] . name , strlen ( msr_const [ i ] . name ) ) )"		2665879	0					
ANR	2666732	Condition	"! r_str_ncasecmp ( token , msr_const [ i ] . name , strlen ( msr_const [ i ] . name ) )"	896:9:20399:20468	2665879	0	True				
ANR	2666733	UnaryOperationExpression	"! r_str_ncasecmp ( token , msr_const [ i ] . name , strlen ( msr_const [ i ] . name ) )"		2665879	0					
ANR	2666734	UnaryOperator	!		2665879	0					
ANR	2666735	CallExpression	"r_str_ncasecmp ( token , msr_const [ i ] . name , strlen ( msr_const [ i ] . name ) )"		2665879	1					
ANR	2666736	Callee	r_str_ncasecmp		2665879	0					
ANR	2666737	Identifier	r_str_ncasecmp		2665879	0					
ANR	2666738	ArgumentList	token		2665879	1					
ANR	2666739	Argument	token		2665879	0					
ANR	2666740	Identifier	token		2665879	0					
ANR	2666741	Argument	msr_const [ i ] . name		2665879	1					
ANR	2666742	MemberAccess	msr_const [ i ] . name		2665879	0					
ANR	2666743	ArrayIndexing	msr_const [ i ]		2665879	0					
ANR	2666744	Identifier	msr_const		2665879	0					
ANR	2666745	Identifier	i		2665879	1					
ANR	2666746	Identifier	name		2665879	1					
ANR	2666747	Argument	strlen ( msr_const [ i ] . name )		2665879	2					
ANR	2666748	CallExpression	strlen ( msr_const [ i ] . name )		2665879	0					
ANR	2666749	Callee	strlen		2665879	0					
ANR	2666750	Identifier	strlen		2665879	0					
ANR	2666751	ArgumentList	msr_const [ i ] . name		2665879	1					
ANR	2666752	Argument	msr_const [ i ] . name		2665879	0					
ANR	2666753	MemberAccess	msr_const [ i ] . name		2665879	0					
ANR	2666754	ArrayIndexing	msr_const [ i ]		2665879	0					
ANR	2666755	Identifier	msr_const		2665879	0					
ANR	2666756	Identifier	i		2665879	1					
ANR	2666757	Identifier	name		2665879	1					
ANR	2666758	CompoundStatement		138:81:3564:3564	2665879	1					
ANR	2666759	ExpressionStatement	op -> operands [ operand ] . sp_val = msr_const [ i ] . val	897:6:20479:20526	2665879	0	True				
ANR	2666760	AssignmentExpression	op -> operands [ operand ] . sp_val = msr_const [ i ] . val		2665879	0		=			
ANR	2666761	MemberAccess	op -> operands [ operand ] . sp_val		2665879	0					
ANR	2666762	ArrayIndexing	op -> operands [ operand ]		2665879	0					
ANR	2666763	PtrMemberAccess	op -> operands		2665879	0					
ANR	2666764	Identifier	op		2665879	0					
ANR	2666765	Identifier	operands		2665879	1					
ANR	2666766	Identifier	operand		2665879	1					
ANR	2666767	Identifier	sp_val		2665879	1					
ANR	2666768	MemberAccess	msr_const [ i ] . val		2665879	1					
ANR	2666769	ArrayIndexing	msr_const [ i ]		2665879	0					
ANR	2666770	Identifier	msr_const		2665879	0					
ANR	2666771	Identifier	i		2665879	1					
ANR	2666772	Identifier	val		2665879	1					
ANR	2666773	BreakStatement	break ;	898:6:20534:20539	2665879	1	True				
ANR	2666774	ExpressionStatement	op -> operands_count ++	901:4:20558:20579	2665879	2	True				
ANR	2666775	PostIncDecOperationExpression	op -> operands_count ++		2665879	0					
ANR	2666776	PtrMemberAccess	op -> operands_count		2665879	0					
ANR	2666777	Identifier	op		2665879	0					
ANR	2666778	Identifier	operands_count		2665879	1					
ANR	2666779	IncDec	++		2665879	1					
ANR	2666780	ExpressionStatement	op -> operands [ operand ] . type = ARM_GPR	902:4:20585:20621	2665879	3	True				
ANR	2666781	AssignmentExpression	op -> operands [ operand ] . type = ARM_GPR		2665879	0		=			
ANR	2666782	MemberAccess	op -> operands [ operand ] . type		2665879	0					
ANR	2666783	ArrayIndexing	op -> operands [ operand ]		2665879	0					
ANR	2666784	PtrMemberAccess	op -> operands		2665879	0					
ANR	2666785	Identifier	op		2665879	0					
ANR	2666786	Identifier	operands		2665879	1					
ANR	2666787	Identifier	operand		2665879	1					
ANR	2666788	Identifier	type		2665879	1					
ANR	2666789	Identifier	ARM_GPR		2665879	1					
ANR	2666790	ExpressionStatement	op -> operands [ operand ] . reg_type = ARM_SP | ARM_REG64	903:4:20627:20678	2665879	4	True				
ANR	2666791	AssignmentExpression	op -> operands [ operand ] . reg_type = ARM_SP | ARM_REG64		2665879	0		=			
ANR	2666792	MemberAccess	op -> operands [ operand ] . reg_type		2665879	0					
ANR	2666793	ArrayIndexing	op -> operands [ operand ]		2665879	0					
ANR	2666794	PtrMemberAccess	op -> operands		2665879	0					
ANR	2666795	Identifier	op		2665879	0					
ANR	2666796	Identifier	operands		2665879	1					
ANR	2666797	Identifier	operand		2665879	1					
ANR	2666798	Identifier	reg_type		2665879	1					
ANR	2666799	InclusiveOrExpression	ARM_SP | ARM_REG64		2665879	1		|			
ANR	2666800	Identifier	ARM_SP		2665879	0					
ANR	2666801	Identifier	ARM_REG64		2665879	1					
ANR	2666802	ExpressionStatement	op -> operands [ operand ] . reg = 31	904:4:20684:20714	2665879	5	True				
ANR	2666803	AssignmentExpression	op -> operands [ operand ] . reg = 31		2665879	0		=			
ANR	2666804	MemberAccess	op -> operands [ operand ] . reg		2665879	0					
ANR	2666805	ArrayIndexing	op -> operands [ operand ]		2665879	0					
ANR	2666806	PtrMemberAccess	op -> operands		2665879	0					
ANR	2666807	Identifier	op		2665879	0					
ANR	2666808	Identifier	operands		2665879	1					
ANR	2666809	Identifier	operand		2665879	1					
ANR	2666810	Identifier	reg		2665879	1					
ANR	2666811	PrimaryExpression	31		2665879	1					
ANR	2666812	BreakStatement	break ;	905:4:20720:20725	2665879	6	True				
ANR	2666813	ExpressionStatement	mem_opt = get_mem_option ( token )	907:3:20735:20767	2665879	24	True				
ANR	2666814	AssignmentExpression	mem_opt = get_mem_option ( token )		2665879	0		=			
ANR	2666815	Identifier	mem_opt		2665879	0					
ANR	2666816	CallExpression	get_mem_option ( token )		2665879	1					
ANR	2666817	Callee	get_mem_option		2665879	0					
ANR	2666818	Identifier	get_mem_option		2665879	0					
ANR	2666819	ArgumentList	token		2665879	1					
ANR	2666820	Argument	token		2665879	0					
ANR	2666821	Identifier	token		2665879	0					
ANR	2666822	IfStatement	if ( mem_opt != - 1 )		2665879	25					
ANR	2666823	Condition	mem_opt != - 1	908:7:20776:20788	2665879	0	True				
ANR	2666824	EqualityExpression	mem_opt != - 1		2665879	0		!=			
ANR	2666825	Identifier	mem_opt		2665879	0					
ANR	2666826	UnaryOperationExpression	- 1		2665879	1					
ANR	2666827	UnaryOperator	-		2665879	0					
ANR	2666828	PrimaryExpression	1		2665879	1					
ANR	2666829	CompoundStatement		150:22:3884:3884	2665879	1					
ANR	2666830	ExpressionStatement	op -> operands_count ++	909:4:20797:20818	2665879	0	True				
ANR	2666831	PostIncDecOperationExpression	op -> operands_count ++		2665879	0					
ANR	2666832	PtrMemberAccess	op -> operands_count		2665879	0					
ANR	2666833	Identifier	op		2665879	0					
ANR	2666834	Identifier	operands_count		2665879	1					
ANR	2666835	IncDec	++		2665879	1					
ANR	2666836	ExpressionStatement	op -> operands [ operand ] . type = ARM_MEM_OPT	910:4:20824:20864	2665879	1	True				
ANR	2666837	AssignmentExpression	op -> operands [ operand ] . type = ARM_MEM_OPT		2665879	0		=			
ANR	2666838	MemberAccess	op -> operands [ operand ] . type		2665879	0					
ANR	2666839	ArrayIndexing	op -> operands [ operand ]		2665879	0					
ANR	2666840	PtrMemberAccess	op -> operands		2665879	0					
ANR	2666841	Identifier	op		2665879	0					
ANR	2666842	Identifier	operands		2665879	1					
ANR	2666843	Identifier	operand		2665879	1					
ANR	2666844	Identifier	type		2665879	1					
ANR	2666845	Identifier	ARM_MEM_OPT		2665879	1					
ANR	2666846	ExpressionStatement	op -> operands [ operand ] . mem_option = mem_opt	911:4:20870:20912	2665879	2	True				
ANR	2666847	AssignmentExpression	op -> operands [ operand ] . mem_option = mem_opt		2665879	0		=			
ANR	2666848	MemberAccess	op -> operands [ operand ] . mem_option		2665879	0					
ANR	2666849	ArrayIndexing	op -> operands [ operand ]		2665879	0					
ANR	2666850	PtrMemberAccess	op -> operands		2665879	0					
ANR	2666851	Identifier	op		2665879	0					
ANR	2666852	Identifier	operands		2665879	1					
ANR	2666853	Identifier	operand		2665879	1					
ANR	2666854	Identifier	mem_option		2665879	1					
ANR	2666855	Identifier	mem_opt		2665879	1					
ANR	2666856	BreakStatement	break ;	913:3:20922:20927	2665879	26	True				
ANR	2666857	Label	case 'L' :	914:2:20931:20939	2665879	27	True				
ANR	2666858	Label	case 'l' :	915:2:20943:20951	2665879	28	True				
ANR	2666859	Label	case 'I' :	916:2:20955:20963	2665879	29	True				
ANR	2666860	Label	case 'i' :	917:2:20967:20975	2665879	30	True				
ANR	2666861	Label	case 'N' :	918:2:20979:20987	2665879	31	True				
ANR	2666862	Label	case 'n' :	919:2:20991:20999	2665879	32	True				
ANR	2666863	Label	case 'O' :	920:2:21003:21011	2665879	33	True				
ANR	2666864	Label	case 'o' :	921:2:21015:21023	2665879	34	True				
ANR	2666865	Label	case 'p' :	922:2:21027:21035	2665879	35	True				
ANR	2666866	Label	case 'P' :	923:2:21039:21047	2665879	36	True				
ANR	2666867	ExpressionStatement	mem_opt = get_mem_option ( token )	924:3:21052:21084	2665879	37	True				
ANR	2666868	AssignmentExpression	mem_opt = get_mem_option ( token )		2665879	0		=			
ANR	2666869	Identifier	mem_opt		2665879	0					
ANR	2666870	CallExpression	get_mem_option ( token )		2665879	1					
ANR	2666871	Callee	get_mem_option		2665879	0					
ANR	2666872	Identifier	get_mem_option		2665879	0					
ANR	2666873	ArgumentList	token		2665879	1					
ANR	2666874	Argument	token		2665879	0					
ANR	2666875	Identifier	token		2665879	0					
ANR	2666876	IfStatement	if ( mem_opt != - 1 )		2665879	38					
ANR	2666877	Condition	mem_opt != - 1	925:7:21093:21105	2665879	0	True				
ANR	2666878	EqualityExpression	mem_opt != - 1		2665879	0		!=			
ANR	2666879	Identifier	mem_opt		2665879	0					
ANR	2666880	UnaryOperationExpression	- 1		2665879	1					
ANR	2666881	UnaryOperator	-		2665879	0					
ANR	2666882	PrimaryExpression	1		2665879	1					
ANR	2666883	CompoundStatement		167:22:4201:4201	2665879	1					
ANR	2666884	ExpressionStatement	op -> operands_count ++	926:4:21114:21135	2665879	0	True				
ANR	2666885	PostIncDecOperationExpression	op -> operands_count ++		2665879	0					
ANR	2666886	PtrMemberAccess	op -> operands_count		2665879	0					
ANR	2666887	Identifier	op		2665879	0					
ANR	2666888	Identifier	operands_count		2665879	1					
ANR	2666889	IncDec	++		2665879	1					
ANR	2666890	ExpressionStatement	op -> operands [ operand ] . type = ARM_MEM_OPT	927:4:21141:21181	2665879	1	True				
ANR	2666891	AssignmentExpression	op -> operands [ operand ] . type = ARM_MEM_OPT		2665879	0		=			
ANR	2666892	MemberAccess	op -> operands [ operand ] . type		2665879	0					
ANR	2666893	ArrayIndexing	op -> operands [ operand ]		2665879	0					
ANR	2666894	PtrMemberAccess	op -> operands		2665879	0					
ANR	2666895	Identifier	op		2665879	0					
ANR	2666896	Identifier	operands		2665879	1					
ANR	2666897	Identifier	operand		2665879	1					
ANR	2666898	Identifier	type		2665879	1					
ANR	2666899	Identifier	ARM_MEM_OPT		2665879	1					
ANR	2666900	ExpressionStatement	op -> operands [ operand ] . mem_option = mem_opt	928:4:21187:21229	2665879	2	True				
ANR	2666901	AssignmentExpression	op -> operands [ operand ] . mem_option = mem_opt		2665879	0		=			
ANR	2666902	MemberAccess	op -> operands [ operand ] . mem_option		2665879	0					
ANR	2666903	ArrayIndexing	op -> operands [ operand ]		2665879	0					
ANR	2666904	PtrMemberAccess	op -> operands		2665879	0					
ANR	2666905	Identifier	op		2665879	0					
ANR	2666906	Identifier	operands		2665879	1					
ANR	2666907	Identifier	operand		2665879	1					
ANR	2666908	Identifier	mem_option		2665879	1					
ANR	2666909	Identifier	mem_opt		2665879	1					
ANR	2666910	BreakStatement	break ;	930:3:21239:21244	2665879	39	True				
ANR	2666911	Label	case '-' :	931:2:21248:21256	2665879	40	True				
ANR	2666912	ExpressionStatement	op -> operands [ operand ] . sign = - 1	932:3:21261:21292	2665879	41	True				
ANR	2666913	AssignmentExpression	op -> operands [ operand ] . sign = - 1		2665879	0		=			
ANR	2666914	MemberAccess	op -> operands [ operand ] . sign		2665879	0					
ANR	2666915	ArrayIndexing	op -> operands [ operand ]		2665879	0					
ANR	2666916	PtrMemberAccess	op -> operands		2665879	0					
ANR	2666917	Identifier	op		2665879	0					
ANR	2666918	Identifier	operands		2665879	1					
ANR	2666919	Identifier	operand		2665879	1					
ANR	2666920	Identifier	sign		2665879	1					
ANR	2666921	UnaryOperationExpression	- 1		2665879	1					
ANR	2666922	UnaryOperator	-		2665879	0					
ANR	2666923	PrimaryExpression	1		2665879	1					
ANR	2666924	Label	default :	934:2:21310:21317	2665879	42	True				
ANR	2666925	Identifier	default		2665879	0					
ANR	2666926	ExpressionStatement	op -> operands_count ++	935:3:21322:21343	2665879	43	True				
ANR	2666927	PostIncDecOperationExpression	op -> operands_count ++		2665879	0					
ANR	2666928	PtrMemberAccess	op -> operands_count		2665879	0					
ANR	2666929	Identifier	op		2665879	0					
ANR	2666930	Identifier	operands_count		2665879	1					
ANR	2666931	IncDec	++		2665879	1					
ANR	2666932	ExpressionStatement	op -> operands [ operand ] . type = ARM_CONSTANT	936:3:21348:21389	2665879	44	True				
ANR	2666933	AssignmentExpression	op -> operands [ operand ] . type = ARM_CONSTANT		2665879	0		=			
ANR	2666934	MemberAccess	op -> operands [ operand ] . type		2665879	0					
ANR	2666935	ArrayIndexing	op -> operands [ operand ]		2665879	0					
ANR	2666936	PtrMemberAccess	op -> operands		2665879	0					
ANR	2666937	Identifier	op		2665879	0					
ANR	2666938	Identifier	operands		2665879	1					
ANR	2666939	Identifier	operand		2665879	1					
ANR	2666940	Identifier	type		2665879	1					
ANR	2666941	Identifier	ARM_CONSTANT		2665879	1					
ANR	2666942	ExpressionStatement	"op -> operands [ operand ] . immediate = r_num_math ( NULL , token )"	937:3:21394:21452	2665879	45	True				
ANR	2666943	AssignmentExpression	"op -> operands [ operand ] . immediate = r_num_math ( NULL , token )"		2665879	0		=			
ANR	2666944	MemberAccess	op -> operands [ operand ] . immediate		2665879	0					
ANR	2666945	ArrayIndexing	op -> operands [ operand ]		2665879	0					
ANR	2666946	PtrMemberAccess	op -> operands		2665879	0					
ANR	2666947	Identifier	op		2665879	0					
ANR	2666948	Identifier	operands		2665879	1					
ANR	2666949	Identifier	operand		2665879	1					
ANR	2666950	Identifier	immediate		2665879	1					
ANR	2666951	CallExpression	"r_num_math ( NULL , token )"		2665879	1					
ANR	2666952	Callee	r_num_math		2665879	0					
ANR	2666953	Identifier	r_num_math		2665879	0					
ANR	2666954	ArgumentList	NULL		2665879	1					
ANR	2666955	Argument	NULL		2665879	0					
ANR	2666956	Identifier	NULL		2665879	0					
ANR	2666957	Argument	token		2665879	1					
ANR	2666958	Identifier	token		2665879	0					
ANR	2666959	ExpressionStatement	imm_count ++	938:3:21457:21468	2665879	46	True				
ANR	2666960	PostIncDecOperationExpression	imm_count ++		2665879	0					
ANR	2666961	Identifier	imm_count		2665879	0					
ANR	2666962	IncDec	++		2665879	1					
ANR	2666963	BreakStatement	break ;	939:3:21473:21478	2665879	47	True				
ANR	2666964	ExpressionStatement	token = next	941:2:21486:21498	2665879	13	True				
ANR	2666965	AssignmentExpression	token = next		2665879	0		=			
ANR	2666966	Identifier	token		2665879	0					
ANR	2666967	Identifier	next		2665879	1					
ANR	2666968	ExpressionStatement	operand ++	943:2:21503:21513	2665879	14	True				
ANR	2666969	PostIncDecOperationExpression	operand ++		2665879	0					
ANR	2666970	Identifier	operand		2665879	0					
ANR	2666971	IncDec	++		2665879	1					
ANR	2666972	IfStatement	if ( operand > MAX_OPERANDS )		2665879	15					
ANR	2666973	Condition	operand > MAX_OPERANDS	944:6:21521:21542	2665879	0	True				
ANR	2666974	RelationalExpression	operand > MAX_OPERANDS		2665879	0		>			
ANR	2666975	Identifier	operand		2665879	0					
ANR	2666976	Identifier	MAX_OPERANDS		2665879	1					
ANR	2666977	CompoundStatement		186:30:4638:4638	2665879	1					
ANR	2666978	ExpressionStatement	free ( t )	945:3:21550:21558	2665879	0	True				
ANR	2666979	CallExpression	free ( t )		2665879	0					
ANR	2666980	Callee	free		2665879	0					
ANR	2666981	Identifier	free		2665879	0					
ANR	2666982	ArgumentList	t		2665879	1					
ANR	2666983	Argument	t		2665879	0					
ANR	2666984	Identifier	t		2665879	0					
ANR	2666985	ReturnStatement	return false ;	946:3:21563:21575	2665879	1	True				
ANR	2666986	Identifier	false		2665879	0					
ANR	2666987	ExpressionStatement	free ( t )	949:1:21585:21593	2665879	9	True				
ANR	2666988	CallExpression	free ( t )		2665879	0					
ANR	2666989	Callee	free		2665879	0					
ANR	2666990	Identifier	free		2665879	0					
ANR	2666991	ArgumentList	t		2665879	1					
ANR	2666992	Argument	t		2665879	0					
ANR	2666993	Identifier	t		2665879	0					
ANR	2666994	ReturnStatement	return true ;	950:1:21596:21607	2665879	10	True				
ANR	2666995	Identifier	true		2665879	0					
ANR	2666996	ReturnType	static bool		2665879	1					
ANR	2666997	Identifier	parseOperands		2665879	2					
ANR	2666998	ParameterList	"char * str , ArmOp * op"		2665879	3					
ANR	2666999	Parameter	char * str	759:26:16884:16892	2665879	0	True				
ANR	2667000	ParameterType	char *		2665879	0					
ANR	2667001	Identifier	str		2665879	1					
ANR	2667002	Parameter	ArmOp * op	759:37:16895:16903	2665879	1	True				
ANR	2667003	ParameterType	ArmOp *		2665879	0					
ANR	2667004	Identifier	op		2665879	1					
ANR	2667005	CFGEntryNode	ENTRY		2665879		True				
ANR	2667006	CFGExitNode	EXIT		2665879		True				
ANR	2667007	Symbol	ARM_UNDEFINED		2665879						
ANR	2667008	Symbol	op -> operands [ operand ] . sp_val		2665879						
ANR	2667009	Symbol	* x		2665879						
ANR	2667010	Symbol	get_mem_option		2665879						
ANR	2667011	Symbol	* op		2665879						
ANR	2667012	Symbol	op -> mnemonic		2665879						
ANR	2667013	Symbol	ARM_NOTYPE		2665879						
ANR	2667014	Symbol	strchr		2665879						
ANR	2667015	Symbol	msr_const [ i ] . val		2665879						
ANR	2667016	Symbol	msr_const [ msr_op_index ] . val		2665879						
ANR	2667017	Symbol	ARM_REG32		2665879						
ANR	2667018	Symbol	MAX_OPERANDS		2665879						
ANR	2667019	Symbol	strncmp		2665879						
ANR	2667020	Symbol	strlen		2665879						
ANR	2667021	Symbol	* op -> operands		2665879						
ANR	2667022	Symbol	ARM_ASR		2665879						
ANR	2667023	Symbol	op -> operands [ operand ] . reg_type		2665879						
ANR	2667024	Symbol	strcasecmp		2665879						
ANR	2667025	Symbol	strcmp		2665879						
ANR	2667026	Symbol	ARM_MEM_OPT		2665879						
ANR	2667027	Symbol	NULL		2665879						
ANR	2667028	Symbol	imm_count		2665879						
ANR	2667029	Symbol	msr_op_index		2665879						
ANR	2667030	Symbol	str		2665879						
ANR	2667031	Symbol	op -> operands [ operand ] . immediate		2665879						
ANR	2667032	Symbol	msr_const [ msr_op_index ] . name		2665879						
ANR	2667033	Symbol	true		2665879						
ANR	2667034	Symbol	* msr_const		2665879						
ANR	2667035	Symbol	ARM_FP		2665879						
ANR	2667036	Symbol	next		2665879						
ANR	2667037	Symbol	* next ++		2665879						
ANR	2667038	Symbol	mem_opt		2665879						
ANR	2667039	Symbol	* operand		2665879						
ANR	2667040	Symbol	* msr_op_index		2665879						
ANR	2667041	Symbol	ARM_GPR		2665879						
ANR	2667042	Symbol	* * op		2665879						
ANR	2667043	Symbol	r_num_math		2665879						
ANR	2667044	Symbol	ARM_SP		2665879						
ANR	2667045	Symbol	ARM_NO_SHIFT		2665879						
ANR	2667046	Symbol	msr_const [ i ] . name		2665879						
ANR	2667047	Symbol	op -> operands [ operand ] . shift		2665879						
ANR	2667048	Symbol	op -> operands [ operand ] . mem_option		2665879						
ANR	2667049	Symbol	r_str_ncasecmp		2665879						
ANR	2667050	Symbol	op -> operands [ operand ] . reg		2665879						
ANR	2667051	Symbol	op		2665879						
ANR	2667052	Symbol	ARM_CONSTANT		2665879						
ANR	2667053	Symbol	ARM_LSR		2665879						
ANR	2667054	Symbol	msr_const		2665879						
ANR	2667055	Symbol	false		2665879						
ANR	2667056	Symbol	op -> operands [ operand ] . sign		2665879						
ANR	2667057	Symbol	ARM_LSL		2665879						
ANR	2667058	Symbol	i		2665879						
ANR	2667059	Symbol	op -> operands [ operand ] . type		2665879						
ANR	2667060	Symbol	token		2665879						
ANR	2667061	Symbol	ARM_REG64		2665879						
ANR	2667062	Symbol	* i		2665879						
ANR	2667063	Symbol	t		2665879						
ANR	2667064	Symbol	* token		2665879						
ANR	2667065	Symbol	op -> operands_count		2665879						
ANR	2667066	Symbol	x		2665879						
ANR	2667067	Symbol	strdup		2665879						
ANR	2667068	Symbol	op -> operands [ operand ] . shift_amount		2665879						
ANR	2667069	Symbol	op -> operands		2665879						
ANR	2667070	Symbol	operand		2665879						
ANR	2667071	Function	parseOpcode	953:0:21612:21901							
ANR	2667072	FunctionDef	"parseOpcode (const char * str , ArmOp * op)"		2667071	0					
ANR	2667073	CompoundStatement		953:52:21664:21901	2667071	0					
ANR	2667074	IdentifierDeclStatement	char * in = strdup ( str ) ;	954:1:21667:21690	2667071	0	True				
ANR	2667075	IdentifierDecl	* in = strdup ( str )		2667071	0					
ANR	2667076	IdentifierDeclType	char *		2667071	0					
ANR	2667077	Identifier	in		2667071	1					
ANR	2667078	AssignmentExpression	* in = strdup ( str )		2667071	2		=			
ANR	2667079	Identifier	in		2667071	0					
ANR	2667080	CallExpression	strdup ( str )		2667071	1					
ANR	2667081	Callee	strdup		2667071	0					
ANR	2667082	Identifier	strdup		2667071	0					
ANR	2667083	ArgumentList	str		2667071	1					
ANR	2667084	Argument	str		2667071	0					
ANR	2667085	Identifier	str		2667071	0					
ANR	2667086	IdentifierDeclStatement	"char * space = strchr ( in , ' ' ) ;"	955:1:21693:21723	2667071	1	True				
ANR	2667087	IdentifierDecl	"* space = strchr ( in , ' ' )"		2667071	0					
ANR	2667088	IdentifierDeclType	char *		2667071	0					
ANR	2667089	Identifier	space		2667071	1					
ANR	2667090	AssignmentExpression	"* space = strchr ( in , ' ' )"		2667071	2		=			
ANR	2667091	Identifier	space		2667071	0					
ANR	2667092	CallExpression	"strchr ( in , ' ' )"		2667071	1					
ANR	2667093	Callee	strchr		2667071	0					
ANR	2667094	Identifier	strchr		2667071	0					
ANR	2667095	ArgumentList	in		2667071	1					
ANR	2667096	Argument	in		2667071	0					
ANR	2667097	Identifier	in		2667071	0					
ANR	2667098	Argument	' '		2667071	1					
ANR	2667099	PrimaryExpression	' '		2667071	0					
ANR	2667100	IfStatement	if ( ! space )		2667071	2					
ANR	2667101	Condition	! space	956:5:21730:21735	2667071	0	True				
ANR	2667102	UnaryOperationExpression	! space		2667071	0					
ANR	2667103	UnaryOperator	!		2667071	0					
ANR	2667104	Identifier	space		2667071	1					
ANR	2667105	CompoundStatement		4:13:73:73	2667071	1					
ANR	2667106	ExpressionStatement	op -> operands [ 0 ] . type = ARM_NOTYPE	957:2:21742:21775	2667071	0	True				
ANR	2667107	AssignmentExpression	op -> operands [ 0 ] . type = ARM_NOTYPE		2667071	0		=			
ANR	2667108	MemberAccess	op -> operands [ 0 ] . type		2667071	0					
ANR	2667109	ArrayIndexing	op -> operands [ 0 ]		2667071	0					
ANR	2667110	PtrMemberAccess	op -> operands		2667071	0					
ANR	2667111	Identifier	op		2667071	0					
ANR	2667112	Identifier	operands		2667071	1					
ANR	2667113	PrimaryExpression	0		2667071	1					
ANR	2667114	Identifier	type		2667071	1					
ANR	2667115	Identifier	ARM_NOTYPE		2667071	1					
ANR	2667116	ExpressionStatement	op -> mnemonic = in	958:2:21779:21796	2667071	1	True				
ANR	2667117	AssignmentExpression	op -> mnemonic = in		2667071	0		=			
ANR	2667118	PtrMemberAccess	op -> mnemonic		2667071	0					
ANR	2667119	Identifier	op		2667071	0					
ANR	2667120	Identifier	mnemonic		2667071	1					
ANR	2667121	Identifier	in		2667071	1					
ANR	2667122	ReturnStatement	return true ;	959:3:21801:21812	2667071	2	True				
ANR	2667123	Identifier	true		2667071	0					
ANR	2667124	ExpressionStatement	space [ 0 ] = '\\0'	961:1:21818:21833	2667071	3	True				
ANR	2667125	AssignmentExpression	space [ 0 ] = '\\0'		2667071	0		=			
ANR	2667126	ArrayIndexing	space [ 0 ]		2667071	0					
ANR	2667127	Identifier	space		2667071	0					
ANR	2667128	PrimaryExpression	0		2667071	1					
ANR	2667129	PrimaryExpression	'\\0'		2667071	1					
ANR	2667130	ExpressionStatement	op -> mnemonic = in	962:1:21836:21853	2667071	4	True				
ANR	2667131	AssignmentExpression	op -> mnemonic = in		2667071	0		=			
ANR	2667132	PtrMemberAccess	op -> mnemonic		2667071	0					
ANR	2667133	Identifier	op		2667071	0					
ANR	2667134	Identifier	mnemonic		2667071	1					
ANR	2667135	Identifier	in		2667071	1					
ANR	2667136	ExpressionStatement	space ++	963:1:21856:21864	2667071	5	True				
ANR	2667137	PostIncDecOperationExpression	space ++		2667071	0					
ANR	2667138	Identifier	space		2667071	0					
ANR	2667139	IncDec	++		2667071	1					
ANR	2667140	ReturnStatement	"return parseOperands ( space , op ) ;"	964:1:21867:21899	2667071	6	True				
ANR	2667141	CallExpression	"parseOperands ( space , op )"		2667071	0					
ANR	2667142	Callee	parseOperands		2667071	0					
ANR	2667143	Identifier	parseOperands		2667071	0					
ANR	2667144	ArgumentList	space		2667071	1					
ANR	2667145	Argument	space		2667071	0					
ANR	2667146	Identifier	space		2667071	0					
ANR	2667147	Argument	op		2667071	1					
ANR	2667148	Identifier	op		2667071	0					
ANR	2667149	ReturnType	static bool		2667071	1					
ANR	2667150	Identifier	parseOpcode		2667071	2					
ANR	2667151	ParameterList	"const char * str , ArmOp * op"		2667071	3					
ANR	2667152	Parameter	const char * str	953:24:21636:21650	2667071	0	True				
ANR	2667153	ParameterType	const char *		2667071	0					
ANR	2667154	Identifier	str		2667071	1					
ANR	2667155	Parameter	ArmOp * op	953:41:21653:21661	2667071	1	True				
ANR	2667156	ParameterType	ArmOp *		2667071	0					
ANR	2667157	Identifier	op		2667071	1					
ANR	2667158	CFGEntryNode	ENTRY		2667071		True				
ANR	2667159	CFGExitNode	EXIT		2667071		True				
ANR	2667160	Symbol	op		2667071						
ANR	2667161	Symbol	parseOperands		2667071						
ANR	2667162	Symbol	* op		2667071						
ANR	2667163	Symbol	in		2667071						
ANR	2667164	Symbol	op -> mnemonic		2667071						
ANR	2667165	Symbol	ARM_NOTYPE		2667071						
ANR	2667166	Symbol	strchr		2667071						
ANR	2667167	Symbol	space		2667071						
ANR	2667168	Symbol	* * op		2667071						
ANR	2667169	Symbol	str		2667071						
ANR	2667170	Symbol	* op -> operands		2667071						
ANR	2667171	Symbol	op -> operands [ 0 ] . type		2667071						
ANR	2667172	Symbol	true		2667071						
ANR	2667173	Symbol	* space		2667071						
ANR	2667174	Symbol	strdup		2667071						
ANR	2667175	Symbol	op -> operands		2667071						
ANR	2667176	Function	handlePAC	967:0:21904:22603							
ANR	2667177	FunctionDef	"handlePAC (ut32 * op , const char * str)"		2667176	0					
ANR	2667178	CompoundStatement		967:49:21953:22603	2667176	0					
ANR	2667179	IfStatement	"if ( ! strcmp ( str , ""autiasp"" ) )"		2667176	0					
ANR	2667180	Condition	"! strcmp ( str , ""autiasp"" )"	968:5:21960:21983	2667176	0	True				
ANR	2667181	UnaryOperationExpression	"! strcmp ( str , ""autiasp"" )"		2667176	0					
ANR	2667182	UnaryOperator	!		2667176	0					
ANR	2667183	CallExpression	"strcmp ( str , ""autiasp"" )"		2667176	1					
ANR	2667184	Callee	strcmp		2667176	0					
ANR	2667185	Identifier	strcmp		2667176	0					
ANR	2667186	ArgumentList	str		2667176	1					
ANR	2667187	Argument	str		2667176	0					
ANR	2667188	Identifier	str		2667176	0					
ANR	2667189	Argument	"""autiasp"""		2667176	1					
ANR	2667190	PrimaryExpression	"""autiasp"""		2667176	0					
ANR	2667191	CompoundStatement		2:31:32:32	2667176	1					
ANR	2667192	ExpressionStatement	* op = 0xbf2303d5	969:2:21990:22006	2667176	0	True				
ANR	2667193	AssignmentExpression	* op = 0xbf2303d5		2667176	0		=			
ANR	2667194	UnaryOperationExpression	* op		2667176	0					
ANR	2667195	UnaryOperator	*		2667176	0					
ANR	2667196	Identifier	op		2667176	1					
ANR	2667197	PrimaryExpression	0xbf2303d5		2667176	1					
ANR	2667198	ReturnStatement	return true ;	970:2:22010:22021	2667176	1	True				
ANR	2667199	Identifier	true		2667176	0					
ANR	2667200	IfStatement	"if ( ! strcmp ( str , ""autiaz"" ) )"		2667176	1					
ANR	2667201	Condition	"! strcmp ( str , ""autiaz"" )"	972:5:22031:22053	2667176	0	True				
ANR	2667202	UnaryOperationExpression	"! strcmp ( str , ""autiaz"" )"		2667176	0					
ANR	2667203	UnaryOperator	!		2667176	0					
ANR	2667204	CallExpression	"strcmp ( str , ""autiaz"" )"		2667176	1					
ANR	2667205	Callee	strcmp		2667176	0					
ANR	2667206	Identifier	strcmp		2667176	0					
ANR	2667207	ArgumentList	str		2667176	1					
ANR	2667208	Argument	str		2667176	0					
ANR	2667209	Identifier	str		2667176	0					
ANR	2667210	Argument	"""autiaz"""		2667176	1					
ANR	2667211	PrimaryExpression	"""autiaz"""		2667176	0					
ANR	2667212	CompoundStatement		6:30:102:102	2667176	1					
ANR	2667213	ExpressionStatement	* op = 0x9f2303d5	973:2:22060:22076	2667176	0	True				
ANR	2667214	AssignmentExpression	* op = 0x9f2303d5		2667176	0		=			
ANR	2667215	UnaryOperationExpression	* op		2667176	0					
ANR	2667216	UnaryOperator	*		2667176	0					
ANR	2667217	Identifier	op		2667176	1					
ANR	2667218	PrimaryExpression	0x9f2303d5		2667176	1					
ANR	2667219	ReturnStatement	return true ;	974:2:22080:22091	2667176	1	True				
ANR	2667220	Identifier	true		2667176	0					
ANR	2667221	IfStatement	"if ( ! strcmp ( str , ""autibsp"" ) )"		2667176	2					
ANR	2667222	Condition	"! strcmp ( str , ""autibsp"" )"	976:5:22101:22124	2667176	0	True				
ANR	2667223	UnaryOperationExpression	"! strcmp ( str , ""autibsp"" )"		2667176	0					
ANR	2667224	UnaryOperator	!		2667176	0					
ANR	2667225	CallExpression	"strcmp ( str , ""autibsp"" )"		2667176	1					
ANR	2667226	Callee	strcmp		2667176	0					
ANR	2667227	Identifier	strcmp		2667176	0					
ANR	2667228	ArgumentList	str		2667176	1					
ANR	2667229	Argument	str		2667176	0					
ANR	2667230	Identifier	str		2667176	0					
ANR	2667231	Argument	"""autibsp"""		2667176	1					
ANR	2667232	PrimaryExpression	"""autibsp"""		2667176	0					
ANR	2667233	CompoundStatement		10:31:173:173	2667176	1					
ANR	2667234	ExpressionStatement	* op = 0xff2303d5	977:2:22131:22147	2667176	0	True				
ANR	2667235	AssignmentExpression	* op = 0xff2303d5		2667176	0		=			
ANR	2667236	UnaryOperationExpression	* op		2667176	0					
ANR	2667237	UnaryOperator	*		2667176	0					
ANR	2667238	Identifier	op		2667176	1					
ANR	2667239	PrimaryExpression	0xff2303d5		2667176	1					
ANR	2667240	ReturnStatement	return true ;	978:2:22151:22162	2667176	1	True				
ANR	2667241	Identifier	true		2667176	0					
ANR	2667242	IfStatement	"if ( ! strcmp ( str , ""autibz"" ) )"		2667176	3					
ANR	2667243	Condition	"! strcmp ( str , ""autibz"" )"	980:5:22172:22194	2667176	0	True				
ANR	2667244	UnaryOperationExpression	"! strcmp ( str , ""autibz"" )"		2667176	0					
ANR	2667245	UnaryOperator	!		2667176	0					
ANR	2667246	CallExpression	"strcmp ( str , ""autibz"" )"		2667176	1					
ANR	2667247	Callee	strcmp		2667176	0					
ANR	2667248	Identifier	strcmp		2667176	0					
ANR	2667249	ArgumentList	str		2667176	1					
ANR	2667250	Argument	str		2667176	0					
ANR	2667251	Identifier	str		2667176	0					
ANR	2667252	Argument	"""autibz"""		2667176	1					
ANR	2667253	PrimaryExpression	"""autibz"""		2667176	0					
ANR	2667254	CompoundStatement		14:30:243:243	2667176	1					
ANR	2667255	ExpressionStatement	* op = 0xdf2303d5	981:2:22201:22217	2667176	0	True				
ANR	2667256	AssignmentExpression	* op = 0xdf2303d5		2667176	0		=			
ANR	2667257	UnaryOperationExpression	* op		2667176	0					
ANR	2667258	UnaryOperator	*		2667176	0					
ANR	2667259	Identifier	op		2667176	1					
ANR	2667260	PrimaryExpression	0xdf2303d5		2667176	1					
ANR	2667261	ReturnStatement	return true ;	982:2:22221:22232	2667176	1	True				
ANR	2667262	Identifier	true		2667176	0					
ANR	2667263	IfStatement	"if ( ! strcmp ( str , ""paciaz"" ) )"		2667176	4					
ANR	2667264	Condition	"! strcmp ( str , ""paciaz"" )"	984:5:22242:22264	2667176	0	True				
ANR	2667265	UnaryOperationExpression	"! strcmp ( str , ""paciaz"" )"		2667176	0					
ANR	2667266	UnaryOperator	!		2667176	0					
ANR	2667267	CallExpression	"strcmp ( str , ""paciaz"" )"		2667176	1					
ANR	2667268	Callee	strcmp		2667176	0					
ANR	2667269	Identifier	strcmp		2667176	0					
ANR	2667270	ArgumentList	str		2667176	1					
ANR	2667271	Argument	str		2667176	0					
ANR	2667272	Identifier	str		2667176	0					
ANR	2667273	Argument	"""paciaz"""		2667176	1					
ANR	2667274	PrimaryExpression	"""paciaz"""		2667176	0					
ANR	2667275	CompoundStatement		18:30:313:313	2667176	1					
ANR	2667276	ExpressionStatement	* op = 0x1f2303d5	985:2:22271:22287	2667176	0	True				
ANR	2667277	AssignmentExpression	* op = 0x1f2303d5		2667176	0		=			
ANR	2667278	UnaryOperationExpression	* op		2667176	0					
ANR	2667279	UnaryOperator	*		2667176	0					
ANR	2667280	Identifier	op		2667176	1					
ANR	2667281	PrimaryExpression	0x1f2303d5		2667176	1					
ANR	2667282	ReturnStatement	return true ;	986:2:22291:22302	2667176	1	True				
ANR	2667283	Identifier	true		2667176	0					
ANR	2667284	IfStatement	"if ( ! strcmp ( str , ""pacibz"" ) )"		2667176	5					
ANR	2667285	Condition	"! strcmp ( str , ""pacibz"" )"	988:5:22312:22334	2667176	0	True				
ANR	2667286	UnaryOperationExpression	"! strcmp ( str , ""pacibz"" )"		2667176	0					
ANR	2667287	UnaryOperator	!		2667176	0					
ANR	2667288	CallExpression	"strcmp ( str , ""pacibz"" )"		2667176	1					
ANR	2667289	Callee	strcmp		2667176	0					
ANR	2667290	Identifier	strcmp		2667176	0					
ANR	2667291	ArgumentList	str		2667176	1					
ANR	2667292	Argument	str		2667176	0					
ANR	2667293	Identifier	str		2667176	0					
ANR	2667294	Argument	"""pacibz"""		2667176	1					
ANR	2667295	PrimaryExpression	"""pacibz"""		2667176	0					
ANR	2667296	CompoundStatement		22:30:383:383	2667176	1					
ANR	2667297	ExpressionStatement	* op = 0x5f2303d5	989:2:22341:22357	2667176	0	True				
ANR	2667298	AssignmentExpression	* op = 0x5f2303d5		2667176	0		=			
ANR	2667299	UnaryOperationExpression	* op		2667176	0					
ANR	2667300	UnaryOperator	*		2667176	0					
ANR	2667301	Identifier	op		2667176	1					
ANR	2667302	PrimaryExpression	0x5f2303d5		2667176	1					
ANR	2667303	ReturnStatement	return true ;	990:2:22361:22372	2667176	1	True				
ANR	2667304	Identifier	true		2667176	0					
ANR	2667305	IfStatement	"if ( ! strcmp ( str , ""paciasp"" ) )"		2667176	6					
ANR	2667306	Condition	"! strcmp ( str , ""paciasp"" )"	992:5:22382:22405	2667176	0	True				
ANR	2667307	UnaryOperationExpression	"! strcmp ( str , ""paciasp"" )"		2667176	0					
ANR	2667308	UnaryOperator	!		2667176	0					
ANR	2667309	CallExpression	"strcmp ( str , ""paciasp"" )"		2667176	1					
ANR	2667310	Callee	strcmp		2667176	0					
ANR	2667311	Identifier	strcmp		2667176	0					
ANR	2667312	ArgumentList	str		2667176	1					
ANR	2667313	Argument	str		2667176	0					
ANR	2667314	Identifier	str		2667176	0					
ANR	2667315	Argument	"""paciasp"""		2667176	1					
ANR	2667316	PrimaryExpression	"""paciasp"""		2667176	0					
ANR	2667317	CompoundStatement		26:31:454:454	2667176	1					
ANR	2667318	ExpressionStatement	* op = 0x3f2303d5	993:2:22412:22428	2667176	0	True				
ANR	2667319	AssignmentExpression	* op = 0x3f2303d5		2667176	0		=			
ANR	2667320	UnaryOperationExpression	* op		2667176	0					
ANR	2667321	UnaryOperator	*		2667176	0					
ANR	2667322	Identifier	op		2667176	1					
ANR	2667323	PrimaryExpression	0x3f2303d5		2667176	1					
ANR	2667324	ReturnStatement	return true ;	994:2:22432:22443	2667176	1	True				
ANR	2667325	Identifier	true		2667176	0					
ANR	2667326	IfStatement	"if ( ! strcmp ( str , ""pacibsp"" ) )"		2667176	7					
ANR	2667327	Condition	"! strcmp ( str , ""pacibsp"" )"	996:5:22453:22476	2667176	0	True				
ANR	2667328	UnaryOperationExpression	"! strcmp ( str , ""pacibsp"" )"		2667176	0					
ANR	2667329	UnaryOperator	!		2667176	0					
ANR	2667330	CallExpression	"strcmp ( str , ""pacibsp"" )"		2667176	1					
ANR	2667331	Callee	strcmp		2667176	0					
ANR	2667332	Identifier	strcmp		2667176	0					
ANR	2667333	ArgumentList	str		2667176	1					
ANR	2667334	Argument	str		2667176	0					
ANR	2667335	Identifier	str		2667176	0					
ANR	2667336	Argument	"""pacibsp"""		2667176	1					
ANR	2667337	PrimaryExpression	"""pacibsp"""		2667176	0					
ANR	2667338	CompoundStatement		30:31:525:525	2667176	1					
ANR	2667339	ExpressionStatement	* op = 0x7f2303d5	997:2:22483:22499	2667176	0	True				
ANR	2667340	AssignmentExpression	* op = 0x7f2303d5		2667176	0		=			
ANR	2667341	UnaryOperationExpression	* op		2667176	0					
ANR	2667342	UnaryOperator	*		2667176	0					
ANR	2667343	Identifier	op		2667176	1					
ANR	2667344	PrimaryExpression	0x7f2303d5		2667176	1					
ANR	2667345	ReturnStatement	return true ;	998:2:22503:22514	2667176	1	True				
ANR	2667346	Identifier	true		2667176	0					
ANR	2667347	IfStatement	"if ( ! strcmp ( str , ""retab"" ) )"		2667176	8					
ANR	2667348	Condition	"! strcmp ( str , ""retab"" )"	1000:5:22524:22545	2667176	0	True				
ANR	2667349	UnaryOperationExpression	"! strcmp ( str , ""retab"" )"		2667176	0					
ANR	2667350	UnaryOperator	!		2667176	0					
ANR	2667351	CallExpression	"strcmp ( str , ""retab"" )"		2667176	1					
ANR	2667352	Callee	strcmp		2667176	0					
ANR	2667353	Identifier	strcmp		2667176	0					
ANR	2667354	ArgumentList	str		2667176	1					
ANR	2667355	Argument	str		2667176	0					
ANR	2667356	Identifier	str		2667176	0					
ANR	2667357	Argument	"""retab"""		2667176	1					
ANR	2667358	PrimaryExpression	"""retab"""		2667176	0					
ANR	2667359	CompoundStatement		34:29:594:594	2667176	1					
ANR	2667360	ExpressionStatement	* op = 0xff0f5fd6	1001:2:22552:22568	2667176	0	True				
ANR	2667361	AssignmentExpression	* op = 0xff0f5fd6		2667176	0		=			
ANR	2667362	UnaryOperationExpression	* op		2667176	0					
ANR	2667363	UnaryOperator	*		2667176	0					
ANR	2667364	Identifier	op		2667176	1					
ANR	2667365	PrimaryExpression	0xff0f5fd6		2667176	1					
ANR	2667366	ReturnStatement	return true ;	1002:2:22572:22583	2667176	1	True				
ANR	2667367	Identifier	true		2667176	0					
ANR	2667368	ReturnStatement	return false ;	1004:1:22589:22601	2667176	9	True				
ANR	2667369	Identifier	false		2667176	0					
ANR	2667370	ReturnType	static bool		2667176	1					
ANR	2667371	Identifier	handlePAC		2667176	2					
ANR	2667372	ParameterList	"ut32 * op , const char * str"		2667176	3					
ANR	2667373	Parameter	ut32 * op	967:22:21926:21933	2667176	0	True				
ANR	2667374	ParameterType	ut32 *		2667176	0					
ANR	2667375	Identifier	op		2667176	1					
ANR	2667376	Parameter	const char * str	967:32:21936:21950	2667176	1	True				
ANR	2667377	ParameterType	const char *		2667176	0					
ANR	2667378	Identifier	str		2667176	1					
ANR	2667379	CFGEntryNode	ENTRY		2667176		True				
ANR	2667380	CFGExitNode	EXIT		2667176		True				
ANR	2667381	Symbol	str		2667176						
ANR	2667382	Symbol	strcmp		2667176						
ANR	2667383	Symbol	op		2667176						
ANR	2667384	Symbol	* op		2667176						
ANR	2667385	Symbol	true		2667176						
ANR	2667386	Symbol	false		2667176						
ANR	2667387	Function	arm64ass	1007:0:22606:26740							
ANR	2667388	FunctionDef	"arm64ass (const char * str , ut64 addr , ut32 * op)"		2667387	0					
ANR	2667389	CompoundStatement		1007:52:22658:26740	2667387	0					
ANR	2667390	IdentifierDeclStatement	ArmOp ops = { 0 } ;	1008:1:22661:22676	2667387	0	True				
ANR	2667391	IdentifierDecl	ops = { 0 }		2667387	0					
ANR	2667392	IdentifierDeclType	ArmOp		2667387	0					
ANR	2667393	Identifier	ops		2667387	1					
ANR	2667394	AssignmentExpression	ops = { 0 }		2667387	2		=			
ANR	2667395	Identifier	ops		2667387	0					
ANR	2667396	InitializerList	0		2667387	1					
ANR	2667397	PrimaryExpression	0		2667387	0					
ANR	2667398	IfStatement	"if ( ! parseOpcode ( str , & ops ) )"		2667387	1					
ANR	2667399	Condition	"! parseOpcode ( str , & ops )"	1009:5:22683:22706	2667387	0	True				
ANR	2667400	UnaryOperationExpression	"! parseOpcode ( str , & ops )"		2667387	0					
ANR	2667401	UnaryOperator	!		2667387	0					
ANR	2667402	CallExpression	"parseOpcode ( str , & ops )"		2667387	1					
ANR	2667403	Callee	parseOpcode		2667387	0					
ANR	2667404	Identifier	parseOpcode		2667387	0					
ANR	2667405	ArgumentList	str		2667387	1					
ANR	2667406	Argument	str		2667387	0					
ANR	2667407	Identifier	str		2667387	0					
ANR	2667408	Argument	& ops		2667387	1					
ANR	2667409	UnaryOperationExpression	& ops		2667387	0					
ANR	2667410	UnaryOperator	&		2667387	0					
ANR	2667411	Identifier	ops		2667387	1					
ANR	2667412	CompoundStatement		3:31:50:50	2667387	1					
ANR	2667413	ReturnStatement	return false ;	1010:2:22713:22725	2667387	0	True				
ANR	2667414	Identifier	false		2667387	0					
ANR	2667415	IfStatement	"if ( ! strncmp ( str , ""mov"" , 3 ) )"		2667387	2					
ANR	2667416	Condition	"! strncmp ( str , ""mov"" , 3 )"	1013:5:22813:22836	2667387	0	True				
ANR	2667417	UnaryOperationExpression	"! strncmp ( str , ""mov"" , 3 )"		2667387	0					
ANR	2667418	UnaryOperator	!		2667387	0					
ANR	2667419	CallExpression	"strncmp ( str , ""mov"" , 3 )"		2667387	1					
ANR	2667420	Callee	strncmp		2667387	0					
ANR	2667421	Identifier	strncmp		2667387	0					
ANR	2667422	ArgumentList	str		2667387	1					
ANR	2667423	Argument	str		2667387	0					
ANR	2667424	Identifier	str		2667387	0					
ANR	2667425	Argument	"""mov"""		2667387	1					
ANR	2667426	PrimaryExpression	"""mov"""		2667387	0					
ANR	2667427	Argument	3		2667387	2					
ANR	2667428	PrimaryExpression	3		2667387	0					
ANR	2667429	CompoundStatement		7:31:180:180	2667387	1					
ANR	2667430	ExpressionStatement	* op = mov ( & ops )	1014:2:22843:22859	2667387	0	True				
ANR	2667431	AssignmentExpression	* op = mov ( & ops )		2667387	0		=			
ANR	2667432	UnaryOperationExpression	* op		2667387	0					
ANR	2667433	UnaryOperator	*		2667387	0					
ANR	2667434	Identifier	op		2667387	1					
ANR	2667435	CallExpression	mov ( & ops )		2667387	1					
ANR	2667436	Callee	mov		2667387	0					
ANR	2667437	Identifier	mov		2667387	0					
ANR	2667438	ArgumentList	& ops		2667387	1					
ANR	2667439	Argument	& ops		2667387	0					
ANR	2667440	UnaryOperationExpression	& ops		2667387	0					
ANR	2667441	UnaryOperator	&		2667387	0					
ANR	2667442	Identifier	ops		2667387	1					
ANR	2667443	ReturnStatement	return * op != - 1 ;	1015:2:22863:22879	2667387	1	True				
ANR	2667444	EqualityExpression	* op != - 1		2667387	0		!=			
ANR	2667445	UnaryOperationExpression	* op		2667387	0					
ANR	2667446	UnaryOperator	*		2667387	0					
ANR	2667447	Identifier	op		2667387	1					
ANR	2667448	UnaryOperationExpression	- 1		2667387	1					
ANR	2667449	UnaryOperator	-		2667387	0					
ANR	2667450	PrimaryExpression	1		2667387	1					
ANR	2667451	IfStatement	"if ( ! strncmp ( str , ""cmp"" , 3 ) )"		2667387	3					
ANR	2667452	Condition	"! strncmp ( str , ""cmp"" , 3 )"	1017:5:22889:22912	2667387	0	True				
ANR	2667453	UnaryOperationExpression	"! strncmp ( str , ""cmp"" , 3 )"		2667387	0					
ANR	2667454	UnaryOperator	!		2667387	0					
ANR	2667455	CallExpression	"strncmp ( str , ""cmp"" , 3 )"		2667387	1					
ANR	2667456	Callee	strncmp		2667387	0					
ANR	2667457	Identifier	strncmp		2667387	0					
ANR	2667458	ArgumentList	str		2667387	1					
ANR	2667459	Argument	str		2667387	0					
ANR	2667460	Identifier	str		2667387	0					
ANR	2667461	Argument	"""cmp"""		2667387	1					
ANR	2667462	PrimaryExpression	"""cmp"""		2667387	0					
ANR	2667463	Argument	3		2667387	2					
ANR	2667464	PrimaryExpression	3		2667387	0					
ANR	2667465	CompoundStatement		11:31:256:256	2667387	1					
ANR	2667466	ExpressionStatement	* op = cmp ( & ops )	1018:2:22919:22935	2667387	0	True				
ANR	2667467	AssignmentExpression	* op = cmp ( & ops )		2667387	0		=			
ANR	2667468	UnaryOperationExpression	* op		2667387	0					
ANR	2667469	UnaryOperator	*		2667387	0					
ANR	2667470	Identifier	op		2667387	1					
ANR	2667471	CallExpression	cmp ( & ops )		2667387	1					
ANR	2667472	Callee	cmp		2667387	0					
ANR	2667473	Identifier	cmp		2667387	0					
ANR	2667474	ArgumentList	& ops		2667387	1					
ANR	2667475	Argument	& ops		2667387	0					
ANR	2667476	UnaryOperationExpression	& ops		2667387	0					
ANR	2667477	UnaryOperator	&		2667387	0					
ANR	2667478	Identifier	ops		2667387	1					
ANR	2667479	ReturnStatement	return * op != - 1 ;	1019:2:22939:22955	2667387	1	True				
ANR	2667480	EqualityExpression	* op != - 1		2667387	0		!=			
ANR	2667481	UnaryOperationExpression	* op		2667387	0					
ANR	2667482	UnaryOperator	*		2667387	0					
ANR	2667483	Identifier	op		2667387	1					
ANR	2667484	UnaryOperationExpression	- 1		2667387	1					
ANR	2667485	UnaryOperator	-		2667387	0					
ANR	2667486	PrimaryExpression	1		2667387	1					
ANR	2667487	IfStatement	"if ( ! strncmp ( str , ""ldrb"" , 4 ) )"		2667387	4					
ANR	2667488	Condition	"! strncmp ( str , ""ldrb"" , 4 )"	1021:5:22965:22989	2667387	0	True				
ANR	2667489	UnaryOperationExpression	"! strncmp ( str , ""ldrb"" , 4 )"		2667387	0					
ANR	2667490	UnaryOperator	!		2667387	0					
ANR	2667491	CallExpression	"strncmp ( str , ""ldrb"" , 4 )"		2667387	1					
ANR	2667492	Callee	strncmp		2667387	0					
ANR	2667493	Identifier	strncmp		2667387	0					
ANR	2667494	ArgumentList	str		2667387	1					
ANR	2667495	Argument	str		2667387	0					
ANR	2667496	Identifier	str		2667387	0					
ANR	2667497	Argument	"""ldrb"""		2667387	1					
ANR	2667498	PrimaryExpression	"""ldrb"""		2667387	0					
ANR	2667499	Argument	4		2667387	2					
ANR	2667500	PrimaryExpression	4		2667387	0					
ANR	2667501	CompoundStatement		15:32:333:333	2667387	1					
ANR	2667502	ExpressionStatement	"* op = bytelsop ( & ops , 0x00004039 )"	1022:2:22996:23029	2667387	0	True				
ANR	2667503	AssignmentExpression	"* op = bytelsop ( & ops , 0x00004039 )"		2667387	0		=			
ANR	2667504	UnaryOperationExpression	* op		2667387	0					
ANR	2667505	UnaryOperator	*		2667387	0					
ANR	2667506	Identifier	op		2667387	1					
ANR	2667507	CallExpression	"bytelsop ( & ops , 0x00004039 )"		2667387	1					
ANR	2667508	Callee	bytelsop		2667387	0					
ANR	2667509	Identifier	bytelsop		2667387	0					
ANR	2667510	ArgumentList	& ops		2667387	1					
ANR	2667511	Argument	& ops		2667387	0					
ANR	2667512	UnaryOperationExpression	& ops		2667387	0					
ANR	2667513	UnaryOperator	&		2667387	0					
ANR	2667514	Identifier	ops		2667387	1					
ANR	2667515	Argument	0x00004039		2667387	1					
ANR	2667516	PrimaryExpression	0x00004039		2667387	0					
ANR	2667517	ReturnStatement	return * op != - 1 ;	1023:2:23033:23049	2667387	1	True				
ANR	2667518	EqualityExpression	* op != - 1		2667387	0		!=			
ANR	2667519	UnaryOperationExpression	* op		2667387	0					
ANR	2667520	UnaryOperator	*		2667387	0					
ANR	2667521	Identifier	op		2667387	1					
ANR	2667522	UnaryOperationExpression	- 1		2667387	1					
ANR	2667523	UnaryOperator	-		2667387	0					
ANR	2667524	PrimaryExpression	1		2667387	1					
ANR	2667525	IfStatement	"if ( ! strncmp ( str , ""ldrh"" , 4 ) )"		2667387	5					
ANR	2667526	Condition	"! strncmp ( str , ""ldrh"" , 4 )"	1025:5:23059:23083	2667387	0	True				
ANR	2667527	UnaryOperationExpression	"! strncmp ( str , ""ldrh"" , 4 )"		2667387	0					
ANR	2667528	UnaryOperator	!		2667387	0					
ANR	2667529	CallExpression	"strncmp ( str , ""ldrh"" , 4 )"		2667387	1					
ANR	2667530	Callee	strncmp		2667387	0					
ANR	2667531	Identifier	strncmp		2667387	0					
ANR	2667532	ArgumentList	str		2667387	1					
ANR	2667533	Argument	str		2667387	0					
ANR	2667534	Identifier	str		2667387	0					
ANR	2667535	Argument	"""ldrh"""		2667387	1					
ANR	2667536	PrimaryExpression	"""ldrh"""		2667387	0					
ANR	2667537	Argument	4		2667387	2					
ANR	2667538	PrimaryExpression	4		2667387	0					
ANR	2667539	CompoundStatement		19:32:427:427	2667387	1					
ANR	2667540	ExpressionStatement	"* op = bytelsop ( & ops , 0x00004078 )"	1026:2:23090:23123	2667387	0	True				
ANR	2667541	AssignmentExpression	"* op = bytelsop ( & ops , 0x00004078 )"		2667387	0		=			
ANR	2667542	UnaryOperationExpression	* op		2667387	0					
ANR	2667543	UnaryOperator	*		2667387	0					
ANR	2667544	Identifier	op		2667387	1					
ANR	2667545	CallExpression	"bytelsop ( & ops , 0x00004078 )"		2667387	1					
ANR	2667546	Callee	bytelsop		2667387	0					
ANR	2667547	Identifier	bytelsop		2667387	0					
ANR	2667548	ArgumentList	& ops		2667387	1					
ANR	2667549	Argument	& ops		2667387	0					
ANR	2667550	UnaryOperationExpression	& ops		2667387	0					
ANR	2667551	UnaryOperator	&		2667387	0					
ANR	2667552	Identifier	ops		2667387	1					
ANR	2667553	Argument	0x00004078		2667387	1					
ANR	2667554	PrimaryExpression	0x00004078		2667387	0					
ANR	2667555	ReturnStatement	return * op != - 1 ;	1027:2:23127:23143	2667387	1	True				
ANR	2667556	EqualityExpression	* op != - 1		2667387	0		!=			
ANR	2667557	UnaryOperationExpression	* op		2667387	0					
ANR	2667558	UnaryOperator	*		2667387	0					
ANR	2667559	Identifier	op		2667387	1					
ANR	2667560	UnaryOperationExpression	- 1		2667387	1					
ANR	2667561	UnaryOperator	-		2667387	0					
ANR	2667562	PrimaryExpression	1		2667387	1					
ANR	2667563	IfStatement	"if ( ! strncmp ( str , ""ldrsh"" , 5 ) )"		2667387	6					
ANR	2667564	Condition	"! strncmp ( str , ""ldrsh"" , 5 )"	1029:5:23153:23178	2667387	0	True				
ANR	2667565	UnaryOperationExpression	"! strncmp ( str , ""ldrsh"" , 5 )"		2667387	0					
ANR	2667566	UnaryOperator	!		2667387	0					
ANR	2667567	CallExpression	"strncmp ( str , ""ldrsh"" , 5 )"		2667387	1					
ANR	2667568	Callee	strncmp		2667387	0					
ANR	2667569	Identifier	strncmp		2667387	0					
ANR	2667570	ArgumentList	str		2667387	1					
ANR	2667571	Argument	str		2667387	0					
ANR	2667572	Identifier	str		2667387	0					
ANR	2667573	Argument	"""ldrsh"""		2667387	1					
ANR	2667574	PrimaryExpression	"""ldrsh"""		2667387	0					
ANR	2667575	Argument	5		2667387	2					
ANR	2667576	PrimaryExpression	5		2667387	0					
ANR	2667577	CompoundStatement		23:33:522:522	2667387	1					
ANR	2667578	ExpressionStatement	"* op = bytelsop ( & ops , 0x0000c078 )"	1030:2:23185:23218	2667387	0	True				
ANR	2667579	AssignmentExpression	"* op = bytelsop ( & ops , 0x0000c078 )"		2667387	0		=			
ANR	2667580	UnaryOperationExpression	* op		2667387	0					
ANR	2667581	UnaryOperator	*		2667387	0					
ANR	2667582	Identifier	op		2667387	1					
ANR	2667583	CallExpression	"bytelsop ( & ops , 0x0000c078 )"		2667387	1					
ANR	2667584	Callee	bytelsop		2667387	0					
ANR	2667585	Identifier	bytelsop		2667387	0					
ANR	2667586	ArgumentList	& ops		2667387	1					
ANR	2667587	Argument	& ops		2667387	0					
ANR	2667588	UnaryOperationExpression	& ops		2667387	0					
ANR	2667589	UnaryOperator	&		2667387	0					
ANR	2667590	Identifier	ops		2667387	1					
ANR	2667591	Argument	0x0000c078		2667387	1					
ANR	2667592	PrimaryExpression	0x0000c078		2667387	0					
ANR	2667593	ReturnStatement	return * op != - 1 ;	1031:2:23222:23238	2667387	1	True				
ANR	2667594	EqualityExpression	* op != - 1		2667387	0		!=			
ANR	2667595	UnaryOperationExpression	* op		2667387	0					
ANR	2667596	UnaryOperator	*		2667387	0					
ANR	2667597	Identifier	op		2667387	1					
ANR	2667598	UnaryOperationExpression	- 1		2667387	1					
ANR	2667599	UnaryOperator	-		2667387	0					
ANR	2667600	PrimaryExpression	1		2667387	1					
ANR	2667601	IfStatement	"if ( ! strncmp ( str , ""ldrsw"" , 5 ) )"		2667387	7					
ANR	2667602	Condition	"! strncmp ( str , ""ldrsw"" , 5 )"	1033:5:23248:23273	2667387	0	True				
ANR	2667603	UnaryOperationExpression	"! strncmp ( str , ""ldrsw"" , 5 )"		2667387	0					
ANR	2667604	UnaryOperator	!		2667387	0					
ANR	2667605	CallExpression	"strncmp ( str , ""ldrsw"" , 5 )"		2667387	1					
ANR	2667606	Callee	strncmp		2667387	0					
ANR	2667607	Identifier	strncmp		2667387	0					
ANR	2667608	ArgumentList	str		2667387	1					
ANR	2667609	Argument	str		2667387	0					
ANR	2667610	Identifier	str		2667387	0					
ANR	2667611	Argument	"""ldrsw"""		2667387	1					
ANR	2667612	PrimaryExpression	"""ldrsw"""		2667387	0					
ANR	2667613	Argument	5		2667387	2					
ANR	2667614	PrimaryExpression	5		2667387	0					
ANR	2667615	CompoundStatement		27:33:617:617	2667387	1					
ANR	2667616	ExpressionStatement	"* op = bytelsop ( & ops , 0x000080b8 )"	1034:2:23280:23313	2667387	0	True				
ANR	2667617	AssignmentExpression	"* op = bytelsop ( & ops , 0x000080b8 )"		2667387	0		=			
ANR	2667618	UnaryOperationExpression	* op		2667387	0					
ANR	2667619	UnaryOperator	*		2667387	0					
ANR	2667620	Identifier	op		2667387	1					
ANR	2667621	CallExpression	"bytelsop ( & ops , 0x000080b8 )"		2667387	1					
ANR	2667622	Callee	bytelsop		2667387	0					
ANR	2667623	Identifier	bytelsop		2667387	0					
ANR	2667624	ArgumentList	& ops		2667387	1					
ANR	2667625	Argument	& ops		2667387	0					
ANR	2667626	UnaryOperationExpression	& ops		2667387	0					
ANR	2667627	UnaryOperator	&		2667387	0					
ANR	2667628	Identifier	ops		2667387	1					
ANR	2667629	Argument	0x000080b8		2667387	1					
ANR	2667630	PrimaryExpression	0x000080b8		2667387	0					
ANR	2667631	ReturnStatement	return * op != - 1 ;	1035:2:23317:23333	2667387	1	True				
ANR	2667632	EqualityExpression	* op != - 1		2667387	0		!=			
ANR	2667633	UnaryOperationExpression	* op		2667387	0					
ANR	2667634	UnaryOperator	*		2667387	0					
ANR	2667635	Identifier	op		2667387	1					
ANR	2667636	UnaryOperationExpression	- 1		2667387	1					
ANR	2667637	UnaryOperator	-		2667387	0					
ANR	2667638	PrimaryExpression	1		2667387	1					
ANR	2667639	IfStatement	"if ( ! strncmp ( str , ""ldrsb"" , 5 ) )"		2667387	8					
ANR	2667640	Condition	"! strncmp ( str , ""ldrsb"" , 5 )"	1037:5:23343:23368	2667387	0	True				
ANR	2667641	UnaryOperationExpression	"! strncmp ( str , ""ldrsb"" , 5 )"		2667387	0					
ANR	2667642	UnaryOperator	!		2667387	0					
ANR	2667643	CallExpression	"strncmp ( str , ""ldrsb"" , 5 )"		2667387	1					
ANR	2667644	Callee	strncmp		2667387	0					
ANR	2667645	Identifier	strncmp		2667387	0					
ANR	2667646	ArgumentList	str		2667387	1					
ANR	2667647	Argument	str		2667387	0					
ANR	2667648	Identifier	str		2667387	0					
ANR	2667649	Argument	"""ldrsb"""		2667387	1					
ANR	2667650	PrimaryExpression	"""ldrsb"""		2667387	0					
ANR	2667651	Argument	5		2667387	2					
ANR	2667652	PrimaryExpression	5		2667387	0					
ANR	2667653	CompoundStatement		31:33:712:712	2667387	1					
ANR	2667654	ExpressionStatement	"* op = bytelsop ( & ops , 0x0000c039 )"	1038:2:23375:23408	2667387	0	True				
ANR	2667655	AssignmentExpression	"* op = bytelsop ( & ops , 0x0000c039 )"		2667387	0		=			
ANR	2667656	UnaryOperationExpression	* op		2667387	0					
ANR	2667657	UnaryOperator	*		2667387	0					
ANR	2667658	Identifier	op		2667387	1					
ANR	2667659	CallExpression	"bytelsop ( & ops , 0x0000c039 )"		2667387	1					
ANR	2667660	Callee	bytelsop		2667387	0					
ANR	2667661	Identifier	bytelsop		2667387	0					
ANR	2667662	ArgumentList	& ops		2667387	1					
ANR	2667663	Argument	& ops		2667387	0					
ANR	2667664	UnaryOperationExpression	& ops		2667387	0					
ANR	2667665	UnaryOperator	&		2667387	0					
ANR	2667666	Identifier	ops		2667387	1					
ANR	2667667	Argument	0x0000c039		2667387	1					
ANR	2667668	PrimaryExpression	0x0000c039		2667387	0					
ANR	2667669	ReturnStatement	return * op != - 1 ;	1039:2:23412:23428	2667387	1	True				
ANR	2667670	EqualityExpression	* op != - 1		2667387	0		!=			
ANR	2667671	UnaryOperationExpression	* op		2667387	0					
ANR	2667672	UnaryOperator	*		2667387	0					
ANR	2667673	Identifier	op		2667387	1					
ANR	2667674	UnaryOperationExpression	- 1		2667387	1					
ANR	2667675	UnaryOperator	-		2667387	0					
ANR	2667676	PrimaryExpression	1		2667387	1					
ANR	2667677	IfStatement	"if ( ! strncmp ( str , ""strb"" , 4 ) )"		2667387	9					
ANR	2667678	Condition	"! strncmp ( str , ""strb"" , 4 )"	1041:5:23438:23462	2667387	0	True				
ANR	2667679	UnaryOperationExpression	"! strncmp ( str , ""strb"" , 4 )"		2667387	0					
ANR	2667680	UnaryOperator	!		2667387	0					
ANR	2667681	CallExpression	"strncmp ( str , ""strb"" , 4 )"		2667387	1					
ANR	2667682	Callee	strncmp		2667387	0					
ANR	2667683	Identifier	strncmp		2667387	0					
ANR	2667684	ArgumentList	str		2667387	1					
ANR	2667685	Argument	str		2667387	0					
ANR	2667686	Identifier	str		2667387	0					
ANR	2667687	Argument	"""strb"""		2667387	1					
ANR	2667688	PrimaryExpression	"""strb"""		2667387	0					
ANR	2667689	Argument	4		2667387	2					
ANR	2667690	PrimaryExpression	4		2667387	0					
ANR	2667691	CompoundStatement		35:32:806:806	2667387	1					
ANR	2667692	ExpressionStatement	"* op = bytelsop ( & ops , 0x00000039 )"	1042:2:23469:23502	2667387	0	True				
ANR	2667693	AssignmentExpression	"* op = bytelsop ( & ops , 0x00000039 )"		2667387	0		=			
ANR	2667694	UnaryOperationExpression	* op		2667387	0					
ANR	2667695	UnaryOperator	*		2667387	0					
ANR	2667696	Identifier	op		2667387	1					
ANR	2667697	CallExpression	"bytelsop ( & ops , 0x00000039 )"		2667387	1					
ANR	2667698	Callee	bytelsop		2667387	0					
ANR	2667699	Identifier	bytelsop		2667387	0					
ANR	2667700	ArgumentList	& ops		2667387	1					
ANR	2667701	Argument	& ops		2667387	0					
ANR	2667702	UnaryOperationExpression	& ops		2667387	0					
ANR	2667703	UnaryOperator	&		2667387	0					
ANR	2667704	Identifier	ops		2667387	1					
ANR	2667705	Argument	0x00000039		2667387	1					
ANR	2667706	PrimaryExpression	0x00000039		2667387	0					
ANR	2667707	ReturnStatement	return * op != - 1 ;	1043:2:23506:23522	2667387	1	True				
ANR	2667708	EqualityExpression	* op != - 1		2667387	0		!=			
ANR	2667709	UnaryOperationExpression	* op		2667387	0					
ANR	2667710	UnaryOperator	*		2667387	0					
ANR	2667711	Identifier	op		2667387	1					
ANR	2667712	UnaryOperationExpression	- 1		2667387	1					
ANR	2667713	UnaryOperator	-		2667387	0					
ANR	2667714	PrimaryExpression	1		2667387	1					
ANR	2667715	IfStatement	"if ( ! strncmp ( str , ""strh"" , 4 ) )"		2667387	10					
ANR	2667716	Condition	"! strncmp ( str , ""strh"" , 4 )"	1045:5:23532:23556	2667387	0	True				
ANR	2667717	UnaryOperationExpression	"! strncmp ( str , ""strh"" , 4 )"		2667387	0					
ANR	2667718	UnaryOperator	!		2667387	0					
ANR	2667719	CallExpression	"strncmp ( str , ""strh"" , 4 )"		2667387	1					
ANR	2667720	Callee	strncmp		2667387	0					
ANR	2667721	Identifier	strncmp		2667387	0					
ANR	2667722	ArgumentList	str		2667387	1					
ANR	2667723	Argument	str		2667387	0					
ANR	2667724	Identifier	str		2667387	0					
ANR	2667725	Argument	"""strh"""		2667387	1					
ANR	2667726	PrimaryExpression	"""strh"""		2667387	0					
ANR	2667727	Argument	4		2667387	2					
ANR	2667728	PrimaryExpression	4		2667387	0					
ANR	2667729	CompoundStatement		39:32:900:900	2667387	1					
ANR	2667730	ExpressionStatement	"* op = bytelsop ( & ops , 0x00000078 )"	1046:2:23563:23596	2667387	0	True				
ANR	2667731	AssignmentExpression	"* op = bytelsop ( & ops , 0x00000078 )"		2667387	0		=			
ANR	2667732	UnaryOperationExpression	* op		2667387	0					
ANR	2667733	UnaryOperator	*		2667387	0					
ANR	2667734	Identifier	op		2667387	1					
ANR	2667735	CallExpression	"bytelsop ( & ops , 0x00000078 )"		2667387	1					
ANR	2667736	Callee	bytelsop		2667387	0					
ANR	2667737	Identifier	bytelsop		2667387	0					
ANR	2667738	ArgumentList	& ops		2667387	1					
ANR	2667739	Argument	& ops		2667387	0					
ANR	2667740	UnaryOperationExpression	& ops		2667387	0					
ANR	2667741	UnaryOperator	&		2667387	0					
ANR	2667742	Identifier	ops		2667387	1					
ANR	2667743	Argument	0x00000078		2667387	1					
ANR	2667744	PrimaryExpression	0x00000078		2667387	0					
ANR	2667745	ReturnStatement	return * op != - 1 ;	1047:2:23600:23616	2667387	1	True				
ANR	2667746	EqualityExpression	* op != - 1		2667387	0		!=			
ANR	2667747	UnaryOperationExpression	* op		2667387	0					
ANR	2667748	UnaryOperator	*		2667387	0					
ANR	2667749	Identifier	op		2667387	1					
ANR	2667750	UnaryOperationExpression	- 1		2667387	1					
ANR	2667751	UnaryOperator	-		2667387	0					
ANR	2667752	PrimaryExpression	1		2667387	1					
ANR	2667753	IfStatement	"if ( ! strncmp ( str , ""ldr"" , 3 ) )"		2667387	11					
ANR	2667754	Condition	"! strncmp ( str , ""ldr"" , 3 )"	1049:5:23626:23649	2667387	0	True				
ANR	2667755	UnaryOperationExpression	"! strncmp ( str , ""ldr"" , 3 )"		2667387	0					
ANR	2667756	UnaryOperator	!		2667387	0					
ANR	2667757	CallExpression	"strncmp ( str , ""ldr"" , 3 )"		2667387	1					
ANR	2667758	Callee	strncmp		2667387	0					
ANR	2667759	Identifier	strncmp		2667387	0					
ANR	2667760	ArgumentList	str		2667387	1					
ANR	2667761	Argument	str		2667387	0					
ANR	2667762	Identifier	str		2667387	0					
ANR	2667763	Argument	"""ldr"""		2667387	1					
ANR	2667764	PrimaryExpression	"""ldr"""		2667387	0					
ANR	2667765	Argument	3		2667387	2					
ANR	2667766	PrimaryExpression	3		2667387	0					
ANR	2667767	CompoundStatement		43:31:993:993	2667387	1					
ANR	2667768	ExpressionStatement	"* op = reglsop ( & ops , 0x000040f8 )"	1050:2:23656:23688	2667387	0	True				
ANR	2667769	AssignmentExpression	"* op = reglsop ( & ops , 0x000040f8 )"		2667387	0		=			
ANR	2667770	UnaryOperationExpression	* op		2667387	0					
ANR	2667771	UnaryOperator	*		2667387	0					
ANR	2667772	Identifier	op		2667387	1					
ANR	2667773	CallExpression	"reglsop ( & ops , 0x000040f8 )"		2667387	1					
ANR	2667774	Callee	reglsop		2667387	0					
ANR	2667775	Identifier	reglsop		2667387	0					
ANR	2667776	ArgumentList	& ops		2667387	1					
ANR	2667777	Argument	& ops		2667387	0					
ANR	2667778	UnaryOperationExpression	& ops		2667387	0					
ANR	2667779	UnaryOperator	&		2667387	0					
ANR	2667780	Identifier	ops		2667387	1					
ANR	2667781	Argument	0x000040f8		2667387	1					
ANR	2667782	PrimaryExpression	0x000040f8		2667387	0					
ANR	2667783	ReturnStatement	return * op != - 1 ;	1051:2:23692:23708	2667387	1	True				
ANR	2667784	EqualityExpression	* op != - 1		2667387	0		!=			
ANR	2667785	UnaryOperationExpression	* op		2667387	0					
ANR	2667786	UnaryOperator	*		2667387	0					
ANR	2667787	Identifier	op		2667387	1					
ANR	2667788	UnaryOperationExpression	- 1		2667387	1					
ANR	2667789	UnaryOperator	-		2667387	0					
ANR	2667790	PrimaryExpression	1		2667387	1					
ANR	2667791	IfStatement	"if ( ! strncmp ( str , ""stur"" , 4 ) )"		2667387	12					
ANR	2667792	Condition	"! strncmp ( str , ""stur"" , 4 )"	1053:5:23718:23742	2667387	0	True				
ANR	2667793	UnaryOperationExpression	"! strncmp ( str , ""stur"" , 4 )"		2667387	0					
ANR	2667794	UnaryOperator	!		2667387	0					
ANR	2667795	CallExpression	"strncmp ( str , ""stur"" , 4 )"		2667387	1					
ANR	2667796	Callee	strncmp		2667387	0					
ANR	2667797	Identifier	strncmp		2667387	0					
ANR	2667798	ArgumentList	str		2667387	1					
ANR	2667799	Argument	str		2667387	0					
ANR	2667800	Identifier	str		2667387	0					
ANR	2667801	Argument	"""stur"""		2667387	1					
ANR	2667802	PrimaryExpression	"""stur"""		2667387	0					
ANR	2667803	Argument	4		2667387	2					
ANR	2667804	PrimaryExpression	4		2667387	0					
ANR	2667805	CompoundStatement		47:32:1086:1086	2667387	1					
ANR	2667806	ExpressionStatement	"* op = regsluop ( & ops , 0x000000f8 )"	1054:2:23749:23782	2667387	0	True				
ANR	2667807	AssignmentExpression	"* op = regsluop ( & ops , 0x000000f8 )"		2667387	0		=			
ANR	2667808	UnaryOperationExpression	* op		2667387	0					
ANR	2667809	UnaryOperator	*		2667387	0					
ANR	2667810	Identifier	op		2667387	1					
ANR	2667811	CallExpression	"regsluop ( & ops , 0x000000f8 )"		2667387	1					
ANR	2667812	Callee	regsluop		2667387	0					
ANR	2667813	Identifier	regsluop		2667387	0					
ANR	2667814	ArgumentList	& ops		2667387	1					
ANR	2667815	Argument	& ops		2667387	0					
ANR	2667816	UnaryOperationExpression	& ops		2667387	0					
ANR	2667817	UnaryOperator	&		2667387	0					
ANR	2667818	Identifier	ops		2667387	1					
ANR	2667819	Argument	0x000000f8		2667387	1					
ANR	2667820	PrimaryExpression	0x000000f8		2667387	0					
ANR	2667821	ReturnStatement	return * op != - 1 ;	1055:2:23786:23802	2667387	1	True				
ANR	2667822	EqualityExpression	* op != - 1		2667387	0		!=			
ANR	2667823	UnaryOperationExpression	* op		2667387	0					
ANR	2667824	UnaryOperator	*		2667387	0					
ANR	2667825	Identifier	op		2667387	1					
ANR	2667826	UnaryOperationExpression	- 1		2667387	1					
ANR	2667827	UnaryOperator	-		2667387	0					
ANR	2667828	PrimaryExpression	1		2667387	1					
ANR	2667829	IfStatement	"if ( ! strncmp ( str , ""ldur"" , 4 ) )"		2667387	13					
ANR	2667830	Condition	"! strncmp ( str , ""ldur"" , 4 )"	1057:5:23812:23836	2667387	0	True				
ANR	2667831	UnaryOperationExpression	"! strncmp ( str , ""ldur"" , 4 )"		2667387	0					
ANR	2667832	UnaryOperator	!		2667387	0					
ANR	2667833	CallExpression	"strncmp ( str , ""ldur"" , 4 )"		2667387	1					
ANR	2667834	Callee	strncmp		2667387	0					
ANR	2667835	Identifier	strncmp		2667387	0					
ANR	2667836	ArgumentList	str		2667387	1					
ANR	2667837	Argument	str		2667387	0					
ANR	2667838	Identifier	str		2667387	0					
ANR	2667839	Argument	"""ldur"""		2667387	1					
ANR	2667840	PrimaryExpression	"""ldur"""		2667387	0					
ANR	2667841	Argument	4		2667387	2					
ANR	2667842	PrimaryExpression	4		2667387	0					
ANR	2667843	CompoundStatement		51:32:1180:1180	2667387	1					
ANR	2667844	ExpressionStatement	"* op = regsluop ( & ops , 0x000040f8 )"	1058:2:23843:23876	2667387	0	True				
ANR	2667845	AssignmentExpression	"* op = regsluop ( & ops , 0x000040f8 )"		2667387	0		=			
ANR	2667846	UnaryOperationExpression	* op		2667387	0					
ANR	2667847	UnaryOperator	*		2667387	0					
ANR	2667848	Identifier	op		2667387	1					
ANR	2667849	CallExpression	"regsluop ( & ops , 0x000040f8 )"		2667387	1					
ANR	2667850	Callee	regsluop		2667387	0					
ANR	2667851	Identifier	regsluop		2667387	0					
ANR	2667852	ArgumentList	& ops		2667387	1					
ANR	2667853	Argument	& ops		2667387	0					
ANR	2667854	UnaryOperationExpression	& ops		2667387	0					
ANR	2667855	UnaryOperator	&		2667387	0					
ANR	2667856	Identifier	ops		2667387	1					
ANR	2667857	Argument	0x000040f8		2667387	1					
ANR	2667858	PrimaryExpression	0x000040f8		2667387	0					
ANR	2667859	ReturnStatement	return * op != - 1 ;	1059:2:23880:23896	2667387	1	True				
ANR	2667860	EqualityExpression	* op != - 1		2667387	0		!=			
ANR	2667861	UnaryOperationExpression	* op		2667387	0					
ANR	2667862	UnaryOperator	*		2667387	0					
ANR	2667863	Identifier	op		2667387	1					
ANR	2667864	UnaryOperationExpression	- 1		2667387	1					
ANR	2667865	UnaryOperator	-		2667387	0					
ANR	2667866	PrimaryExpression	1		2667387	1					
ANR	2667867	IfStatement	"if ( ! strncmp ( str , ""str"" , 3 ) )"		2667387	14					
ANR	2667868	Condition	"! strncmp ( str , ""str"" , 3 )"	1061:5:23906:23929	2667387	0	True				
ANR	2667869	UnaryOperationExpression	"! strncmp ( str , ""str"" , 3 )"		2667387	0					
ANR	2667870	UnaryOperator	!		2667387	0					
ANR	2667871	CallExpression	"strncmp ( str , ""str"" , 3 )"		2667387	1					
ANR	2667872	Callee	strncmp		2667387	0					
ANR	2667873	Identifier	strncmp		2667387	0					
ANR	2667874	ArgumentList	str		2667387	1					
ANR	2667875	Argument	str		2667387	0					
ANR	2667876	Identifier	str		2667387	0					
ANR	2667877	Argument	"""str"""		2667387	1					
ANR	2667878	PrimaryExpression	"""str"""		2667387	0					
ANR	2667879	Argument	3		2667387	2					
ANR	2667880	PrimaryExpression	3		2667387	0					
ANR	2667881	CompoundStatement		55:31:1273:1273	2667387	1					
ANR	2667882	ExpressionStatement	"* op = reglsop ( & ops , 0x000000f8 )"	1062:2:23936:23968	2667387	0	True				
ANR	2667883	AssignmentExpression	"* op = reglsop ( & ops , 0x000000f8 )"		2667387	0		=			
ANR	2667884	UnaryOperationExpression	* op		2667387	0					
ANR	2667885	UnaryOperator	*		2667387	0					
ANR	2667886	Identifier	op		2667387	1					
ANR	2667887	CallExpression	"reglsop ( & ops , 0x000000f8 )"		2667387	1					
ANR	2667888	Callee	reglsop		2667387	0					
ANR	2667889	Identifier	reglsop		2667387	0					
ANR	2667890	ArgumentList	& ops		2667387	1					
ANR	2667891	Argument	& ops		2667387	0					
ANR	2667892	UnaryOperationExpression	& ops		2667387	0					
ANR	2667893	UnaryOperator	&		2667387	0					
ANR	2667894	Identifier	ops		2667387	1					
ANR	2667895	Argument	0x000000f8		2667387	1					
ANR	2667896	PrimaryExpression	0x000000f8		2667387	0					
ANR	2667897	ReturnStatement	return * op != - 1 ;	1063:2:23972:23988	2667387	1	True				
ANR	2667898	EqualityExpression	* op != - 1		2667387	0		!=			
ANR	2667899	UnaryOperationExpression	* op		2667387	0					
ANR	2667900	UnaryOperator	*		2667387	0					
ANR	2667901	Identifier	op		2667387	1					
ANR	2667902	UnaryOperationExpression	- 1		2667387	1					
ANR	2667903	UnaryOperator	-		2667387	0					
ANR	2667904	PrimaryExpression	1		2667387	1					
ANR	2667905	IfStatement	"if ( ! strncmp ( str , ""stp"" , 3 ) )"		2667387	15					
ANR	2667906	Condition	"! strncmp ( str , ""stp"" , 3 )"	1065:5:23998:24021	2667387	0	True				
ANR	2667907	UnaryOperationExpression	"! strncmp ( str , ""stp"" , 3 )"		2667387	0					
ANR	2667908	UnaryOperator	!		2667387	0					
ANR	2667909	CallExpression	"strncmp ( str , ""stp"" , 3 )"		2667387	1					
ANR	2667910	Callee	strncmp		2667387	0					
ANR	2667911	Identifier	strncmp		2667387	0					
ANR	2667912	ArgumentList	str		2667387	1					
ANR	2667913	Argument	str		2667387	0					
ANR	2667914	Identifier	str		2667387	0					
ANR	2667915	Argument	"""stp"""		2667387	1					
ANR	2667916	PrimaryExpression	"""stp"""		2667387	0					
ANR	2667917	Argument	3		2667387	2					
ANR	2667918	PrimaryExpression	3		2667387	0					
ANR	2667919	CompoundStatement		59:31:1365:1365	2667387	1					
ANR	2667920	ExpressionStatement	"* op = stp ( & ops , 0x000000a9 )"	1066:2:24028:24056	2667387	0	True				
ANR	2667921	AssignmentExpression	"* op = stp ( & ops , 0x000000a9 )"		2667387	0		=			
ANR	2667922	UnaryOperationExpression	* op		2667387	0					
ANR	2667923	UnaryOperator	*		2667387	0					
ANR	2667924	Identifier	op		2667387	1					
ANR	2667925	CallExpression	"stp ( & ops , 0x000000a9 )"		2667387	1					
ANR	2667926	Callee	stp		2667387	0					
ANR	2667927	Identifier	stp		2667387	0					
ANR	2667928	ArgumentList	& ops		2667387	1					
ANR	2667929	Argument	& ops		2667387	0					
ANR	2667930	UnaryOperationExpression	& ops		2667387	0					
ANR	2667931	UnaryOperator	&		2667387	0					
ANR	2667932	Identifier	ops		2667387	1					
ANR	2667933	Argument	0x000000a9		2667387	1					
ANR	2667934	PrimaryExpression	0x000000a9		2667387	0					
ANR	2667935	ReturnStatement	return * op != - 1 ;	1067:2:24060:24076	2667387	1	True				
ANR	2667936	EqualityExpression	* op != - 1		2667387	0		!=			
ANR	2667937	UnaryOperationExpression	* op		2667387	0					
ANR	2667938	UnaryOperator	*		2667387	0					
ANR	2667939	Identifier	op		2667387	1					
ANR	2667940	UnaryOperationExpression	- 1		2667387	1					
ANR	2667941	UnaryOperator	-		2667387	0					
ANR	2667942	PrimaryExpression	1		2667387	1					
ANR	2667943	IfStatement	"if ( ! strncmp ( str , ""ldp"" , 3 ) )"		2667387	16					
ANR	2667944	Condition	"! strncmp ( str , ""ldp"" , 3 )"	1069:5:24086:24109	2667387	0	True				
ANR	2667945	UnaryOperationExpression	"! strncmp ( str , ""ldp"" , 3 )"		2667387	0					
ANR	2667946	UnaryOperator	!		2667387	0					
ANR	2667947	CallExpression	"strncmp ( str , ""ldp"" , 3 )"		2667387	1					
ANR	2667948	Callee	strncmp		2667387	0					
ANR	2667949	Identifier	strncmp		2667387	0					
ANR	2667950	ArgumentList	str		2667387	1					
ANR	2667951	Argument	str		2667387	0					
ANR	2667952	Identifier	str		2667387	0					
ANR	2667953	Argument	"""ldp"""		2667387	1					
ANR	2667954	PrimaryExpression	"""ldp"""		2667387	0					
ANR	2667955	Argument	3		2667387	2					
ANR	2667956	PrimaryExpression	3		2667387	0					
ANR	2667957	CompoundStatement		63:31:1453:1453	2667387	1					
ANR	2667958	ExpressionStatement	"* op = stp ( & ops , 0x000040a9 )"	1070:2:24116:24144	2667387	0	True				
ANR	2667959	AssignmentExpression	"* op = stp ( & ops , 0x000040a9 )"		2667387	0		=			
ANR	2667960	UnaryOperationExpression	* op		2667387	0					
ANR	2667961	UnaryOperator	*		2667387	0					
ANR	2667962	Identifier	op		2667387	1					
ANR	2667963	CallExpression	"stp ( & ops , 0x000040a9 )"		2667387	1					
ANR	2667964	Callee	stp		2667387	0					
ANR	2667965	Identifier	stp		2667387	0					
ANR	2667966	ArgumentList	& ops		2667387	1					
ANR	2667967	Argument	& ops		2667387	0					
ANR	2667968	UnaryOperationExpression	& ops		2667387	0					
ANR	2667969	UnaryOperator	&		2667387	0					
ANR	2667970	Identifier	ops		2667387	1					
ANR	2667971	Argument	0x000040a9		2667387	1					
ANR	2667972	PrimaryExpression	0x000040a9		2667387	0					
ANR	2667973	ReturnStatement	return * op != - 1 ;	1071:2:24148:24164	2667387	1	True				
ANR	2667974	EqualityExpression	* op != - 1		2667387	0		!=			
ANR	2667975	UnaryOperationExpression	* op		2667387	0					
ANR	2667976	UnaryOperator	*		2667387	0					
ANR	2667977	Identifier	op		2667387	1					
ANR	2667978	UnaryOperationExpression	- 1		2667387	1					
ANR	2667979	UnaryOperator	-		2667387	0					
ANR	2667980	PrimaryExpression	1		2667387	1					
ANR	2667981	IfStatement	"if ( ! strncmp ( str , ""sub"" , 3 ) )"		2667387	17					
ANR	2667982	Condition	"! strncmp ( str , ""sub"" , 3 )"	1073:5:24174:24197	2667387	0	True				
ANR	2667983	UnaryOperationExpression	"! strncmp ( str , ""sub"" , 3 )"		2667387	0					
ANR	2667984	UnaryOperator	!		2667387	0					
ANR	2667985	CallExpression	"strncmp ( str , ""sub"" , 3 )"		2667387	1					
ANR	2667986	Callee	strncmp		2667387	0					
ANR	2667987	Identifier	strncmp		2667387	0					
ANR	2667988	ArgumentList	str		2667387	1					
ANR	2667989	Argument	str		2667387	0					
ANR	2667990	Identifier	str		2667387	0					
ANR	2667991	Argument	"""sub"""		2667387	1					
ANR	2667992	PrimaryExpression	"""sub"""		2667387	0					
ANR	2667993	Argument	3		2667387	2					
ANR	2667994	PrimaryExpression	3		2667387	0					
ANR	2667995	CompoundStatement		67:31:1541:1541	2667387	1					
ANR	2667996	ExpressionStatement	"* op = arithmetic ( & ops , 0xd1 )"	1074:2:24209:24238	2667387	0	True				
ANR	2667997	AssignmentExpression	"* op = arithmetic ( & ops , 0xd1 )"		2667387	0		=			
ANR	2667998	UnaryOperationExpression	* op		2667387	0					
ANR	2667999	UnaryOperator	*		2667387	0					
ANR	2668000	Identifier	op		2667387	1					
ANR	2668001	CallExpression	"arithmetic ( & ops , 0xd1 )"		2667387	1					
ANR	2668002	Callee	arithmetic		2667387	0					
ANR	2668003	Identifier	arithmetic		2667387	0					
ANR	2668004	ArgumentList	& ops		2667387	1					
ANR	2668005	Argument	& ops		2667387	0					
ANR	2668006	UnaryOperationExpression	& ops		2667387	0					
ANR	2668007	UnaryOperator	&		2667387	0					
ANR	2668008	Identifier	ops		2667387	1					
ANR	2668009	Argument	0xd1		2667387	1					
ANR	2668010	PrimaryExpression	0xd1		2667387	0					
ANR	2668011	ReturnStatement	return * op != - 1 ;	1075:2:24242:24258	2667387	1	True				
ANR	2668012	EqualityExpression	* op != - 1		2667387	0		!=			
ANR	2668013	UnaryOperationExpression	* op		2667387	0					
ANR	2668014	UnaryOperator	*		2667387	0					
ANR	2668015	Identifier	op		2667387	1					
ANR	2668016	UnaryOperationExpression	- 1		2667387	1					
ANR	2668017	UnaryOperator	-		2667387	0					
ANR	2668018	PrimaryExpression	1		2667387	1					
ANR	2668019	IfStatement	"if ( ! strncmp ( str , ""add x"" , 5 ) )"		2667387	18					
ANR	2668020	Condition	"! strncmp ( str , ""add x"" , 5 )"	1077:5:24268:24293	2667387	0	True				
ANR	2668021	UnaryOperationExpression	"! strncmp ( str , ""add x"" , 5 )"		2667387	0					
ANR	2668022	UnaryOperator	!		2667387	0					
ANR	2668023	CallExpression	"strncmp ( str , ""add x"" , 5 )"		2667387	1					
ANR	2668024	Callee	strncmp		2667387	0					
ANR	2668025	Identifier	strncmp		2667387	0					
ANR	2668026	ArgumentList	str		2667387	1					
ANR	2668027	Argument	str		2667387	0					
ANR	2668028	Identifier	str		2667387	0					
ANR	2668029	Argument	"""add x"""		2667387	1					
ANR	2668030	PrimaryExpression	"""add x"""		2667387	0					
ANR	2668031	Argument	5		2667387	2					
ANR	2668032	PrimaryExpression	5		2667387	0					
ANR	2668033	CompoundStatement		71:33:1637:1637	2667387	1					
ANR	2668034	ExpressionStatement	"* op = arithmetic ( & ops , 0x91 )"	1078:2:24300:24329	2667387	0	True				
ANR	2668035	AssignmentExpression	"* op = arithmetic ( & ops , 0x91 )"		2667387	0		=			
ANR	2668036	UnaryOperationExpression	* op		2667387	0					
ANR	2668037	UnaryOperator	*		2667387	0					
ANR	2668038	Identifier	op		2667387	1					
ANR	2668039	CallExpression	"arithmetic ( & ops , 0x91 )"		2667387	1					
ANR	2668040	Callee	arithmetic		2667387	0					
ANR	2668041	Identifier	arithmetic		2667387	0					
ANR	2668042	ArgumentList	& ops		2667387	1					
ANR	2668043	Argument	& ops		2667387	0					
ANR	2668044	UnaryOperationExpression	& ops		2667387	0					
ANR	2668045	UnaryOperator	&		2667387	0					
ANR	2668046	Identifier	ops		2667387	1					
ANR	2668047	Argument	0x91		2667387	1					
ANR	2668048	PrimaryExpression	0x91		2667387	0					
ANR	2668049	ReturnStatement	return * op != - 1 ;	1079:2:24333:24349	2667387	1	True				
ANR	2668050	EqualityExpression	* op != - 1		2667387	0		!=			
ANR	2668051	UnaryOperationExpression	* op		2667387	0					
ANR	2668052	UnaryOperator	*		2667387	0					
ANR	2668053	Identifier	op		2667387	1					
ANR	2668054	UnaryOperationExpression	- 1		2667387	1					
ANR	2668055	UnaryOperator	-		2667387	0					
ANR	2668056	PrimaryExpression	1		2667387	1					
ANR	2668057	IfStatement	"if ( ! strncmp ( str , ""add w"" , 5 ) )"		2667387	19					
ANR	2668058	Condition	"! strncmp ( str , ""add w"" , 5 )"	1081:5:24359:24384	2667387	0	True				
ANR	2668059	UnaryOperationExpression	"! strncmp ( str , ""add w"" , 5 )"		2667387	0					
ANR	2668060	UnaryOperator	!		2667387	0					
ANR	2668061	CallExpression	"strncmp ( str , ""add w"" , 5 )"		2667387	1					
ANR	2668062	Callee	strncmp		2667387	0					
ANR	2668063	Identifier	strncmp		2667387	0					
ANR	2668064	ArgumentList	str		2667387	1					
ANR	2668065	Argument	str		2667387	0					
ANR	2668066	Identifier	str		2667387	0					
ANR	2668067	Argument	"""add w"""		2667387	1					
ANR	2668068	PrimaryExpression	"""add w"""		2667387	0					
ANR	2668069	Argument	5		2667387	2					
ANR	2668070	PrimaryExpression	5		2667387	0					
ANR	2668071	CompoundStatement		75:33:1728:1728	2667387	1					
ANR	2668072	ExpressionStatement	"* op = arithmetic ( & ops , 0x11 )"	1082:2:24391:24420	2667387	0	True				
ANR	2668073	AssignmentExpression	"* op = arithmetic ( & ops , 0x11 )"		2667387	0		=			
ANR	2668074	UnaryOperationExpression	* op		2667387	0					
ANR	2668075	UnaryOperator	*		2667387	0					
ANR	2668076	Identifier	op		2667387	1					
ANR	2668077	CallExpression	"arithmetic ( & ops , 0x11 )"		2667387	1					
ANR	2668078	Callee	arithmetic		2667387	0					
ANR	2668079	Identifier	arithmetic		2667387	0					
ANR	2668080	ArgumentList	& ops		2667387	1					
ANR	2668081	Argument	& ops		2667387	0					
ANR	2668082	UnaryOperationExpression	& ops		2667387	0					
ANR	2668083	UnaryOperator	&		2667387	0					
ANR	2668084	Identifier	ops		2667387	1					
ANR	2668085	Argument	0x11		2667387	1					
ANR	2668086	PrimaryExpression	0x11		2667387	0					
ANR	2668087	ReturnStatement	return * op != - 1 ;	1083:2:24424:24440	2667387	1	True				
ANR	2668088	EqualityExpression	* op != - 1		2667387	0		!=			
ANR	2668089	UnaryOperationExpression	* op		2667387	0					
ANR	2668090	UnaryOperator	*		2667387	0					
ANR	2668091	Identifier	op		2667387	1					
ANR	2668092	UnaryOperationExpression	- 1		2667387	1					
ANR	2668093	UnaryOperator	-		2667387	0					
ANR	2668094	PrimaryExpression	1		2667387	1					
ANR	2668095	IfStatement	"if ( ! strncmp ( str , ""adr x"" , 5 ) )"		2667387	20					
ANR	2668096	Condition	"! strncmp ( str , ""adr x"" , 5 )"	1085:5:24450:24475	2667387	0	True				
ANR	2668097	UnaryOperationExpression	"! strncmp ( str , ""adr x"" , 5 )"		2667387	0					
ANR	2668098	UnaryOperator	!		2667387	0					
ANR	2668099	CallExpression	"strncmp ( str , ""adr x"" , 5 )"		2667387	1					
ANR	2668100	Callee	strncmp		2667387	0					
ANR	2668101	Identifier	strncmp		2667387	0					
ANR	2668102	ArgumentList	str		2667387	1					
ANR	2668103	Argument	str		2667387	0					
ANR	2668104	Identifier	str		2667387	0					
ANR	2668105	Argument	"""adr x"""		2667387	1					
ANR	2668106	PrimaryExpression	"""adr x"""		2667387	0					
ANR	2668107	Argument	5		2667387	2					
ANR	2668108	PrimaryExpression	5		2667387	0					
ANR	2668109	CompoundStatement		79:33:1819:1819	2667387	1					
ANR	2668110	ExpressionStatement	"* op = adr ( & ops , addr )"	1086:2:24487:24509	2667387	0	True				
ANR	2668111	AssignmentExpression	"* op = adr ( & ops , addr )"		2667387	0		=			
ANR	2668112	UnaryOperationExpression	* op		2667387	0					
ANR	2668113	UnaryOperator	*		2667387	0					
ANR	2668114	Identifier	op		2667387	1					
ANR	2668115	CallExpression	"adr ( & ops , addr )"		2667387	1					
ANR	2668116	Callee	adr		2667387	0					
ANR	2668117	Identifier	adr		2667387	0					
ANR	2668118	ArgumentList	& ops		2667387	1					
ANR	2668119	Argument	& ops		2667387	0					
ANR	2668120	UnaryOperationExpression	& ops		2667387	0					
ANR	2668121	UnaryOperator	&		2667387	0					
ANR	2668122	Identifier	ops		2667387	1					
ANR	2668123	Argument	addr		2667387	1					
ANR	2668124	Identifier	addr		2667387	0					
ANR	2668125	ReturnStatement	return * op != - 1 ;	1087:2:24513:24529	2667387	1	True				
ANR	2668126	EqualityExpression	* op != - 1		2667387	0		!=			
ANR	2668127	UnaryOperationExpression	* op		2667387	0					
ANR	2668128	UnaryOperator	*		2667387	0					
ANR	2668129	Identifier	op		2667387	1					
ANR	2668130	UnaryOperationExpression	- 1		2667387	1					
ANR	2668131	UnaryOperator	-		2667387	0					
ANR	2668132	PrimaryExpression	1		2667387	1					
ANR	2668133	IfStatement	"if ( ! strncmp ( str , ""adrp x"" , 6 ) )"		2667387	21					
ANR	2668134	Condition	"! strncmp ( str , ""adrp x"" , 6 )"	1089:5:24539:24565	2667387	0	True				
ANR	2668135	UnaryOperationExpression	"! strncmp ( str , ""adrp x"" , 6 )"		2667387	0					
ANR	2668136	UnaryOperator	!		2667387	0					
ANR	2668137	CallExpression	"strncmp ( str , ""adrp x"" , 6 )"		2667387	1					
ANR	2668138	Callee	strncmp		2667387	0					
ANR	2668139	Identifier	strncmp		2667387	0					
ANR	2668140	ArgumentList	str		2667387	1					
ANR	2668141	Argument	str		2667387	0					
ANR	2668142	Identifier	str		2667387	0					
ANR	2668143	Argument	"""adrp x"""		2667387	1					
ANR	2668144	PrimaryExpression	"""adrp x"""		2667387	0					
ANR	2668145	Argument	6		2667387	2					
ANR	2668146	PrimaryExpression	6		2667387	0					
ANR	2668147	CompoundStatement		83:34:1909:1909	2667387	1					
ANR	2668148	ExpressionStatement	"* op = adrp ( & ops , addr , 0x00000090 )"	1090:2:24572:24607	2667387	0	True				
ANR	2668149	AssignmentExpression	"* op = adrp ( & ops , addr , 0x00000090 )"		2667387	0		=			
ANR	2668150	UnaryOperationExpression	* op		2667387	0					
ANR	2668151	UnaryOperator	*		2667387	0					
ANR	2668152	Identifier	op		2667387	1					
ANR	2668153	CallExpression	"adrp ( & ops , addr , 0x00000090 )"		2667387	1					
ANR	2668154	Callee	adrp		2667387	0					
ANR	2668155	Identifier	adrp		2667387	0					
ANR	2668156	ArgumentList	& ops		2667387	1					
ANR	2668157	Argument	& ops		2667387	0					
ANR	2668158	UnaryOperationExpression	& ops		2667387	0					
ANR	2668159	UnaryOperator	&		2667387	0					
ANR	2668160	Identifier	ops		2667387	1					
ANR	2668161	Argument	addr		2667387	1					
ANR	2668162	Identifier	addr		2667387	0					
ANR	2668163	Argument	0x00000090		2667387	2					
ANR	2668164	PrimaryExpression	0x00000090		2667387	0					
ANR	2668165	ReturnStatement	return * op != - 1 ;	1091:2:24611:24627	2667387	1	True				
ANR	2668166	EqualityExpression	* op != - 1		2667387	0		!=			
ANR	2668167	UnaryOperationExpression	* op		2667387	0					
ANR	2668168	UnaryOperator	*		2667387	0					
ANR	2668169	Identifier	op		2667387	1					
ANR	2668170	UnaryOperationExpression	- 1		2667387	1					
ANR	2668171	UnaryOperator	-		2667387	0					
ANR	2668172	PrimaryExpression	1		2667387	1					
ANR	2668173	IfStatement	"if ( ! strncmp ( str , ""neg"" , 3 ) )"		2667387	22					
ANR	2668174	Condition	"! strncmp ( str , ""neg"" , 3 )"	1093:5:24637:24660	2667387	0	True				
ANR	2668175	UnaryOperationExpression	"! strncmp ( str , ""neg"" , 3 )"		2667387	0					
ANR	2668176	UnaryOperator	!		2667387	0					
ANR	2668177	CallExpression	"strncmp ( str , ""neg"" , 3 )"		2667387	1					
ANR	2668178	Callee	strncmp		2667387	0					
ANR	2668179	Identifier	strncmp		2667387	0					
ANR	2668180	ArgumentList	str		2667387	1					
ANR	2668181	Argument	str		2667387	0					
ANR	2668182	Identifier	str		2667387	0					
ANR	2668183	Argument	"""neg"""		2667387	1					
ANR	2668184	PrimaryExpression	"""neg"""		2667387	0					
ANR	2668185	Argument	3		2667387	2					
ANR	2668186	PrimaryExpression	3		2667387	0					
ANR	2668187	CompoundStatement		87:31:2004:2004	2667387	1					
ANR	2668188	ExpressionStatement	* op = neg ( & ops )	1094:2:24667:24683	2667387	0	True				
ANR	2668189	AssignmentExpression	* op = neg ( & ops )		2667387	0		=			
ANR	2668190	UnaryOperationExpression	* op		2667387	0					
ANR	2668191	UnaryOperator	*		2667387	0					
ANR	2668192	Identifier	op		2667387	1					
ANR	2668193	CallExpression	neg ( & ops )		2667387	1					
ANR	2668194	Callee	neg		2667387	0					
ANR	2668195	Identifier	neg		2667387	0					
ANR	2668196	ArgumentList	& ops		2667387	1					
ANR	2668197	Argument	& ops		2667387	0					
ANR	2668198	UnaryOperationExpression	& ops		2667387	0					
ANR	2668199	UnaryOperator	&		2667387	0					
ANR	2668200	Identifier	ops		2667387	1					
ANR	2668201	ReturnStatement	return * op != - 1 ;	1095:2:24687:24703	2667387	1	True				
ANR	2668202	EqualityExpression	* op != - 1		2667387	0		!=			
ANR	2668203	UnaryOperationExpression	* op		2667387	0					
ANR	2668204	UnaryOperator	*		2667387	0					
ANR	2668205	Identifier	op		2667387	1					
ANR	2668206	UnaryOperationExpression	- 1		2667387	1					
ANR	2668207	UnaryOperator	-		2667387	0					
ANR	2668208	PrimaryExpression	1		2667387	1					
ANR	2668209	IfStatement	"if ( ! strcmp ( str , ""isb"" ) )"		2667387	23					
ANR	2668210	Condition	"! strcmp ( str , ""isb"" )"	1097:5:24713:24732	2667387	0	True				
ANR	2668211	UnaryOperationExpression	"! strcmp ( str , ""isb"" )"		2667387	0					
ANR	2668212	UnaryOperator	!		2667387	0					
ANR	2668213	CallExpression	"strcmp ( str , ""isb"" )"		2667387	1					
ANR	2668214	Callee	strcmp		2667387	0					
ANR	2668215	Identifier	strcmp		2667387	0					
ANR	2668216	ArgumentList	str		2667387	1					
ANR	2668217	Argument	str		2667387	0					
ANR	2668218	Identifier	str		2667387	0					
ANR	2668219	Argument	"""isb"""		2667387	1					
ANR	2668220	PrimaryExpression	"""isb"""		2667387	0					
ANR	2668221	CompoundStatement		91:27:2076:2076	2667387	1					
ANR	2668222	ExpressionStatement	* op = 0xdf3f03d5	1098:2:24739:24755	2667387	0	True				
ANR	2668223	AssignmentExpression	* op = 0xdf3f03d5		2667387	0		=			
ANR	2668224	UnaryOperationExpression	* op		2667387	0					
ANR	2668225	UnaryOperator	*		2667387	0					
ANR	2668226	Identifier	op		2667387	1					
ANR	2668227	PrimaryExpression	0xdf3f03d5		2667387	1					
ANR	2668228	ReturnStatement	return * op != - 1 ;	1099:2:24759:24775	2667387	1	True				
ANR	2668229	EqualityExpression	* op != - 1		2667387	0		!=			
ANR	2668230	UnaryOperationExpression	* op		2667387	0					
ANR	2668231	UnaryOperator	*		2667387	0					
ANR	2668232	Identifier	op		2667387	1					
ANR	2668233	UnaryOperationExpression	- 1		2667387	1					
ANR	2668234	UnaryOperator	-		2667387	0					
ANR	2668235	PrimaryExpression	1		2667387	1					
ANR	2668236	IfStatement	"if ( handlePAC ( op , str ) )"		2667387	24					
ANR	2668237	Condition	"handlePAC ( op , str )"	1102:5:24793:24811	2667387	0	True				
ANR	2668238	CallExpression	"handlePAC ( op , str )"		2667387	0					
ANR	2668239	Callee	handlePAC		2667387	0					
ANR	2668240	Identifier	handlePAC		2667387	0					
ANR	2668241	ArgumentList	op		2667387	1					
ANR	2668242	Argument	op		2667387	0					
ANR	2668243	Identifier	op		2667387	0					
ANR	2668244	Argument	str		2667387	1					
ANR	2668245	Identifier	str		2667387	0					
ANR	2668246	CompoundStatement		96:26:2155:2155	2667387	1					
ANR	2668247	ReturnStatement	return true ;	1103:2:24818:24829	2667387	0	True				
ANR	2668248	Identifier	true		2667387	0					
ANR	2668249	IfStatement	"if ( ! strcmp ( str , ""nop"" ) )"		2667387	25					
ANR	2668250	Condition	"! strcmp ( str , ""nop"" )"	1105:5:24839:24858	2667387	0	True				
ANR	2668251	UnaryOperationExpression	"! strcmp ( str , ""nop"" )"		2667387	0					
ANR	2668252	UnaryOperator	!		2667387	0					
ANR	2668253	CallExpression	"strcmp ( str , ""nop"" )"		2667387	1					
ANR	2668254	Callee	strcmp		2667387	0					
ANR	2668255	Identifier	strcmp		2667387	0					
ANR	2668256	ArgumentList	str		2667387	1					
ANR	2668257	Argument	str		2667387	0					
ANR	2668258	Identifier	str		2667387	0					
ANR	2668259	Argument	"""nop"""		2667387	1					
ANR	2668260	PrimaryExpression	"""nop"""		2667387	0					
ANR	2668261	CompoundStatement		99:27:2202:2202	2667387	1					
ANR	2668262	ExpressionStatement	* op = 0x1f2003d5	1106:2:24865:24881	2667387	0	True				
ANR	2668263	AssignmentExpression	* op = 0x1f2003d5		2667387	0		=			
ANR	2668264	UnaryOperationExpression	* op		2667387	0					
ANR	2668265	UnaryOperator	*		2667387	0					
ANR	2668266	Identifier	op		2667387	1					
ANR	2668267	PrimaryExpression	0x1f2003d5		2667387	1					
ANR	2668268	ReturnStatement	return * op != - 1 ;	1107:2:24885:24901	2667387	1	True				
ANR	2668269	EqualityExpression	* op != - 1		2667387	0		!=			
ANR	2668270	UnaryOperationExpression	* op		2667387	0					
ANR	2668271	UnaryOperator	*		2667387	0					
ANR	2668272	Identifier	op		2667387	1					
ANR	2668273	UnaryOperationExpression	- 1		2667387	1					
ANR	2668274	UnaryOperator	-		2667387	0					
ANR	2668275	PrimaryExpression	1		2667387	1					
ANR	2668276	IfStatement	"if ( ! strcmp ( str , ""ret"" ) )"		2667387	26					
ANR	2668277	Condition	"! strcmp ( str , ""ret"" )"	1109:5:24911:24930	2667387	0	True				
ANR	2668278	UnaryOperationExpression	"! strcmp ( str , ""ret"" )"		2667387	0					
ANR	2668279	UnaryOperator	!		2667387	0					
ANR	2668280	CallExpression	"strcmp ( str , ""ret"" )"		2667387	1					
ANR	2668281	Callee	strcmp		2667387	0					
ANR	2668282	Identifier	strcmp		2667387	0					
ANR	2668283	ArgumentList	str		2667387	1					
ANR	2668284	Argument	str		2667387	0					
ANR	2668285	Identifier	str		2667387	0					
ANR	2668286	Argument	"""ret"""		2667387	1					
ANR	2668287	PrimaryExpression	"""ret"""		2667387	0					
ANR	2668288	CompoundStatement		103:27:2274:2274	2667387	1					
ANR	2668289	ExpressionStatement	* op = 0xc0035fd6	1110:2:24937:24953	2667387	0	True				
ANR	2668290	AssignmentExpression	* op = 0xc0035fd6		2667387	0		=			
ANR	2668291	UnaryOperationExpression	* op		2667387	0					
ANR	2668292	UnaryOperator	*		2667387	0					
ANR	2668293	Identifier	op		2667387	1					
ANR	2668294	PrimaryExpression	0xc0035fd6		2667387	1					
ANR	2668295	ReturnStatement	return true ;	1111:2:24957:24968	2667387	1	True				
ANR	2668296	Identifier	true		2667387	0					
ANR	2668297	IfStatement	"if ( ! strncmp ( str , ""msr "" , 4 ) )"		2667387	27					
ANR	2668298	Condition	"! strncmp ( str , ""msr "" , 4 )"	1113:5:24978:25002	2667387	0	True				
ANR	2668299	UnaryOperationExpression	"! strncmp ( str , ""msr "" , 4 )"		2667387	0					
ANR	2668300	UnaryOperator	!		2667387	0					
ANR	2668301	CallExpression	"strncmp ( str , ""msr "" , 4 )"		2667387	1					
ANR	2668302	Callee	strncmp		2667387	0					
ANR	2668303	Identifier	strncmp		2667387	0					
ANR	2668304	ArgumentList	str		2667387	1					
ANR	2668305	Argument	str		2667387	0					
ANR	2668306	Identifier	str		2667387	0					
ANR	2668307	Argument	"""msr """		2667387	1					
ANR	2668308	PrimaryExpression	"""msr """		2667387	0					
ANR	2668309	Argument	4		2667387	2					
ANR	2668310	PrimaryExpression	4		2667387	0					
ANR	2668311	CompoundStatement		107:32:2346:2346	2667387	1					
ANR	2668312	ExpressionStatement	"* op = msr ( & ops , 0 )"	1114:2:25009:25028	2667387	0	True				
ANR	2668313	AssignmentExpression	"* op = msr ( & ops , 0 )"		2667387	0		=			
ANR	2668314	UnaryOperationExpression	* op		2667387	0					
ANR	2668315	UnaryOperator	*		2667387	0					
ANR	2668316	Identifier	op		2667387	1					
ANR	2668317	CallExpression	"msr ( & ops , 0 )"		2667387	1					
ANR	2668318	Callee	msr		2667387	0					
ANR	2668319	Identifier	msr		2667387	0					
ANR	2668320	ArgumentList	& ops		2667387	1					
ANR	2668321	Argument	& ops		2667387	0					
ANR	2668322	UnaryOperationExpression	& ops		2667387	0					
ANR	2668323	UnaryOperator	&		2667387	0					
ANR	2668324	Identifier	ops		2667387	1					
ANR	2668325	Argument	0		2667387	1					
ANR	2668326	PrimaryExpression	0		2667387	0					
ANR	2668327	IfStatement	if ( * op != UT32_MAX )		2667387	1					
ANR	2668328	Condition	* op != UT32_MAX	1115:6:25036:25050	2667387	0	True				
ANR	2668329	EqualityExpression	* op != UT32_MAX		2667387	0		!=			
ANR	2668330	UnaryOperationExpression	* op		2667387	0					
ANR	2668331	UnaryOperator	*		2667387	0					
ANR	2668332	Identifier	op		2667387	1					
ANR	2668333	Identifier	UT32_MAX		2667387	1					
ANR	2668334	CompoundStatement		109:23:2394:2394	2667387	1					
ANR	2668335	ReturnStatement	return true ;	1116:3:25058:25069	2667387	0	True				
ANR	2668336	Identifier	true		2667387	0					
ANR	2668337	IfStatement	"if ( ! strncmp ( str , ""mrs "" , 4 ) )"		2667387	28					
ANR	2668338	Condition	"! strncmp ( str , ""mrs "" , 4 )"	1119:5:25083:25107	2667387	0	True				
ANR	2668339	UnaryOperationExpression	"! strncmp ( str , ""mrs "" , 4 )"		2667387	0					
ANR	2668340	UnaryOperator	!		2667387	0					
ANR	2668341	CallExpression	"strncmp ( str , ""mrs "" , 4 )"		2667387	1					
ANR	2668342	Callee	strncmp		2667387	0					
ANR	2668343	Identifier	strncmp		2667387	0					
ANR	2668344	ArgumentList	str		2667387	1					
ANR	2668345	Argument	str		2667387	0					
ANR	2668346	Identifier	str		2667387	0					
ANR	2668347	Argument	"""mrs """		2667387	1					
ANR	2668348	PrimaryExpression	"""mrs """		2667387	0					
ANR	2668349	Argument	4		2667387	2					
ANR	2668350	PrimaryExpression	4		2667387	0					
ANR	2668351	CompoundStatement		113:32:2451:2451	2667387	1					
ANR	2668352	ExpressionStatement	"* op = msr ( & ops , 1 )"	1120:2:25114:25133	2667387	0	True				
ANR	2668353	AssignmentExpression	"* op = msr ( & ops , 1 )"		2667387	0		=			
ANR	2668354	UnaryOperationExpression	* op		2667387	0					
ANR	2668355	UnaryOperator	*		2667387	0					
ANR	2668356	Identifier	op		2667387	1					
ANR	2668357	CallExpression	"msr ( & ops , 1 )"		2667387	1					
ANR	2668358	Callee	msr		2667387	0					
ANR	2668359	Identifier	msr		2667387	0					
ANR	2668360	ArgumentList	& ops		2667387	1					
ANR	2668361	Argument	& ops		2667387	0					
ANR	2668362	UnaryOperationExpression	& ops		2667387	0					
ANR	2668363	UnaryOperator	&		2667387	0					
ANR	2668364	Identifier	ops		2667387	1					
ANR	2668365	Argument	1		2667387	1					
ANR	2668366	PrimaryExpression	1		2667387	0					
ANR	2668367	IfStatement	if ( * op != UT32_MAX )		2667387	1					
ANR	2668368	Condition	* op != UT32_MAX	1121:6:25141:25155	2667387	0	True				
ANR	2668369	EqualityExpression	* op != UT32_MAX		2667387	0		!=			
ANR	2668370	UnaryOperationExpression	* op		2667387	0					
ANR	2668371	UnaryOperator	*		2667387	0					
ANR	2668372	Identifier	op		2667387	1					
ANR	2668373	Identifier	UT32_MAX		2667387	1					
ANR	2668374	CompoundStatement		115:23:2499:2499	2667387	1					
ANR	2668375	ReturnStatement	return true ;	1122:3:25163:25174	2667387	0	True				
ANR	2668376	Identifier	true		2667387	0					
ANR	2668377	IfStatement	"if ( ! strncmp ( str , ""orr "" , 4 ) )"		2667387	29					
ANR	2668378	Condition	"! strncmp ( str , ""orr "" , 4 )"	1125:5:25188:25212	2667387	0	True				
ANR	2668379	UnaryOperationExpression	"! strncmp ( str , ""orr "" , 4 )"		2667387	0					
ANR	2668380	UnaryOperator	!		2667387	0					
ANR	2668381	CallExpression	"strncmp ( str , ""orr "" , 4 )"		2667387	1					
ANR	2668382	Callee	strncmp		2667387	0					
ANR	2668383	Identifier	strncmp		2667387	0					
ANR	2668384	ArgumentList	str		2667387	1					
ANR	2668385	Argument	str		2667387	0					
ANR	2668386	Identifier	str		2667387	0					
ANR	2668387	Argument	"""orr """		2667387	1					
ANR	2668388	PrimaryExpression	"""orr """		2667387	0					
ANR	2668389	Argument	4		2667387	2					
ANR	2668390	PrimaryExpression	4		2667387	0					
ANR	2668391	CompoundStatement		119:32:2556:2556	2667387	1					
ANR	2668392	ExpressionStatement	"* op = orr ( & ops , addr )"	1126:2:25219:25241	2667387	0	True				
ANR	2668393	AssignmentExpression	"* op = orr ( & ops , addr )"		2667387	0		=			
ANR	2668394	UnaryOperationExpression	* op		2667387	0					
ANR	2668395	UnaryOperator	*		2667387	0					
ANR	2668396	Identifier	op		2667387	1					
ANR	2668397	CallExpression	"orr ( & ops , addr )"		2667387	1					
ANR	2668398	Callee	orr		2667387	0					
ANR	2668399	Identifier	orr		2667387	0					
ANR	2668400	ArgumentList	& ops		2667387	1					
ANR	2668401	Argument	& ops		2667387	0					
ANR	2668402	UnaryOperationExpression	& ops		2667387	0					
ANR	2668403	UnaryOperator	&		2667387	0					
ANR	2668404	Identifier	ops		2667387	1					
ANR	2668405	Argument	addr		2667387	1					
ANR	2668406	Identifier	addr		2667387	0					
ANR	2668407	ReturnStatement	return * op != UT32_MAX ;	1127:2:25245:25267	2667387	1	True				
ANR	2668408	EqualityExpression	* op != UT32_MAX		2667387	0		!=			
ANR	2668409	UnaryOperationExpression	* op		2667387	0					
ANR	2668410	UnaryOperator	*		2667387	0					
ANR	2668411	Identifier	op		2667387	1					
ANR	2668412	Identifier	UT32_MAX		2667387	1					
ANR	2668413	IfStatement	"if ( ! strncmp ( str , ""svc "" , 4 ) )"		2667387	30					
ANR	2668414	Condition	"! strncmp ( str , ""svc "" , 4 )"	1129:5:25277:25301	2667387	0	True				
ANR	2668415	UnaryOperationExpression	"! strncmp ( str , ""svc "" , 4 )"		2667387	0					
ANR	2668416	UnaryOperator	!		2667387	0					
ANR	2668417	CallExpression	"strncmp ( str , ""svc "" , 4 )"		2667387	1					
ANR	2668418	Callee	strncmp		2667387	0					
ANR	2668419	Identifier	strncmp		2667387	0					
ANR	2668420	ArgumentList	str		2667387	1					
ANR	2668421	Argument	str		2667387	0					
ANR	2668422	Identifier	str		2667387	0					
ANR	2668423	Argument	"""svc """		2667387	1					
ANR	2668424	PrimaryExpression	"""svc """		2667387	0					
ANR	2668425	Argument	4		2667387	2					
ANR	2668426	PrimaryExpression	4		2667387	0					
ANR	2668427	CompoundStatement		123:32:2645:2645	2667387	1					
ANR	2668428	ExpressionStatement	"* op = exception ( & ops , 0x010000d4 )"	1130:2:25334:25368	2667387	0	True				
ANR	2668429	AssignmentExpression	"* op = exception ( & ops , 0x010000d4 )"		2667387	0		=			
ANR	2668430	UnaryOperationExpression	* op		2667387	0					
ANR	2668431	UnaryOperator	*		2667387	0					
ANR	2668432	Identifier	op		2667387	1					
ANR	2668433	CallExpression	"exception ( & ops , 0x010000d4 )"		2667387	1					
ANR	2668434	Callee	exception		2667387	0					
ANR	2668435	Identifier	exception		2667387	0					
ANR	2668436	ArgumentList	& ops		2667387	1					
ANR	2668437	Argument	& ops		2667387	0					
ANR	2668438	UnaryOperationExpression	& ops		2667387	0					
ANR	2668439	UnaryOperator	&		2667387	0					
ANR	2668440	Identifier	ops		2667387	1					
ANR	2668441	Argument	0x010000d4		2667387	1					
ANR	2668442	PrimaryExpression	0x010000d4		2667387	0					
ANR	2668443	ReturnStatement	return * op != - 1 ;	1131:2:25372:25388	2667387	1	True				
ANR	2668444	EqualityExpression	* op != - 1		2667387	0		!=			
ANR	2668445	UnaryOperationExpression	* op		2667387	0					
ANR	2668446	UnaryOperator	*		2667387	0					
ANR	2668447	Identifier	op		2667387	1					
ANR	2668448	UnaryOperationExpression	- 1		2667387	1					
ANR	2668449	UnaryOperator	-		2667387	0					
ANR	2668450	PrimaryExpression	1		2667387	1					
ANR	2668451	IfStatement	"if ( ! strncmp ( str , ""hvc "" , 4 ) )"		2667387	31					
ANR	2668452	Condition	"! strncmp ( str , ""hvc "" , 4 )"	1133:5:25398:25422	2667387	0	True				
ANR	2668453	UnaryOperationExpression	"! strncmp ( str , ""hvc "" , 4 )"		2667387	0					
ANR	2668454	UnaryOperator	!		2667387	0					
ANR	2668455	CallExpression	"strncmp ( str , ""hvc "" , 4 )"		2667387	1					
ANR	2668456	Callee	strncmp		2667387	0					
ANR	2668457	Identifier	strncmp		2667387	0					
ANR	2668458	ArgumentList	str		2667387	1					
ANR	2668459	Argument	str		2667387	0					
ANR	2668460	Identifier	str		2667387	0					
ANR	2668461	Argument	"""hvc """		2667387	1					
ANR	2668462	PrimaryExpression	"""hvc """		2667387	0					
ANR	2668463	Argument	4		2667387	2					
ANR	2668464	PrimaryExpression	4		2667387	0					
ANR	2668465	CompoundStatement		127:32:2766:2766	2667387	1					
ANR	2668466	ExpressionStatement	"* op = exception ( & ops , 0x020000d4 )"	1134:2:25459:25493	2667387	0	True				
ANR	2668467	AssignmentExpression	"* op = exception ( & ops , 0x020000d4 )"		2667387	0		=			
ANR	2668468	UnaryOperationExpression	* op		2667387	0					
ANR	2668469	UnaryOperator	*		2667387	0					
ANR	2668470	Identifier	op		2667387	1					
ANR	2668471	CallExpression	"exception ( & ops , 0x020000d4 )"		2667387	1					
ANR	2668472	Callee	exception		2667387	0					
ANR	2668473	Identifier	exception		2667387	0					
ANR	2668474	ArgumentList	& ops		2667387	1					
ANR	2668475	Argument	& ops		2667387	0					
ANR	2668476	UnaryOperationExpression	& ops		2667387	0					
ANR	2668477	UnaryOperator	&		2667387	0					
ANR	2668478	Identifier	ops		2667387	1					
ANR	2668479	Argument	0x020000d4		2667387	1					
ANR	2668480	PrimaryExpression	0x020000d4		2667387	0					
ANR	2668481	ReturnStatement	return * op != - 1 ;	1135:2:25497:25513	2667387	1	True				
ANR	2668482	EqualityExpression	* op != - 1		2667387	0		!=			
ANR	2668483	UnaryOperationExpression	* op		2667387	0					
ANR	2668484	UnaryOperator	*		2667387	0					
ANR	2668485	Identifier	op		2667387	1					
ANR	2668486	UnaryOperationExpression	- 1		2667387	1					
ANR	2668487	UnaryOperator	-		2667387	0					
ANR	2668488	PrimaryExpression	1		2667387	1					
ANR	2668489	IfStatement	"if ( ! strncmp ( str , ""smc "" , 4 ) )"		2667387	32					
ANR	2668490	Condition	"! strncmp ( str , ""smc "" , 4 )"	1137:5:25523:25547	2667387	0	True				
ANR	2668491	UnaryOperationExpression	"! strncmp ( str , ""smc "" , 4 )"		2667387	0					
ANR	2668492	UnaryOperator	!		2667387	0					
ANR	2668493	CallExpression	"strncmp ( str , ""smc "" , 4 )"		2667387	1					
ANR	2668494	Callee	strncmp		2667387	0					
ANR	2668495	Identifier	strncmp		2667387	0					
ANR	2668496	ArgumentList	str		2667387	1					
ANR	2668497	Argument	str		2667387	0					
ANR	2668498	Identifier	str		2667387	0					
ANR	2668499	Argument	"""smc """		2667387	1					
ANR	2668500	PrimaryExpression	"""smc """		2667387	0					
ANR	2668501	Argument	4		2667387	2					
ANR	2668502	PrimaryExpression	4		2667387	0					
ANR	2668503	CompoundStatement		131:32:2891:2891	2667387	1					
ANR	2668504	ExpressionStatement	"* op = exception ( & ops , 0x030000d4 )"	1138:2:25582:25616	2667387	0	True				
ANR	2668505	AssignmentExpression	"* op = exception ( & ops , 0x030000d4 )"		2667387	0		=			
ANR	2668506	UnaryOperationExpression	* op		2667387	0					
ANR	2668507	UnaryOperator	*		2667387	0					
ANR	2668508	Identifier	op		2667387	1					
ANR	2668509	CallExpression	"exception ( & ops , 0x030000d4 )"		2667387	1					
ANR	2668510	Callee	exception		2667387	0					
ANR	2668511	Identifier	exception		2667387	0					
ANR	2668512	ArgumentList	& ops		2667387	1					
ANR	2668513	Argument	& ops		2667387	0					
ANR	2668514	UnaryOperationExpression	& ops		2667387	0					
ANR	2668515	UnaryOperator	&		2667387	0					
ANR	2668516	Identifier	ops		2667387	1					
ANR	2668517	Argument	0x030000d4		2667387	1					
ANR	2668518	PrimaryExpression	0x030000d4		2667387	0					
ANR	2668519	ReturnStatement	return * op != - 1 ;	1139:2:25620:25636	2667387	1	True				
ANR	2668520	EqualityExpression	* op != - 1		2667387	0		!=			
ANR	2668521	UnaryOperationExpression	* op		2667387	0					
ANR	2668522	UnaryOperator	*		2667387	0					
ANR	2668523	Identifier	op		2667387	1					
ANR	2668524	UnaryOperationExpression	- 1		2667387	1					
ANR	2668525	UnaryOperator	-		2667387	0					
ANR	2668526	PrimaryExpression	1		2667387	1					
ANR	2668527	IfStatement	"if ( ! strncmp ( str , ""brk "" , 4 ) )"		2667387	33					
ANR	2668528	Condition	"! strncmp ( str , ""brk "" , 4 )"	1141:5:25646:25670	2667387	0	True				
ANR	2668529	UnaryOperationExpression	"! strncmp ( str , ""brk "" , 4 )"		2667387	0					
ANR	2668530	UnaryOperator	!		2667387	0					
ANR	2668531	CallExpression	"strncmp ( str , ""brk "" , 4 )"		2667387	1					
ANR	2668532	Callee	strncmp		2667387	0					
ANR	2668533	Identifier	strncmp		2667387	0					
ANR	2668534	ArgumentList	str		2667387	1					
ANR	2668535	Argument	str		2667387	0					
ANR	2668536	Identifier	str		2667387	0					
ANR	2668537	Argument	"""brk """		2667387	1					
ANR	2668538	PrimaryExpression	"""brk """		2667387	0					
ANR	2668539	Argument	4		2667387	2					
ANR	2668540	PrimaryExpression	4		2667387	0					
ANR	2668541	CompoundStatement		135:32:3014:3014	2667387	1					
ANR	2668542	ExpressionStatement	"* op = exception ( & ops , 0x000020d4 )"	1142:2:25691:25725	2667387	0	True				
ANR	2668543	AssignmentExpression	"* op = exception ( & ops , 0x000020d4 )"		2667387	0		=			
ANR	2668544	UnaryOperationExpression	* op		2667387	0					
ANR	2668545	UnaryOperator	*		2667387	0					
ANR	2668546	Identifier	op		2667387	1					
ANR	2668547	CallExpression	"exception ( & ops , 0x000020d4 )"		2667387	1					
ANR	2668548	Callee	exception		2667387	0					
ANR	2668549	Identifier	exception		2667387	0					
ANR	2668550	ArgumentList	& ops		2667387	1					
ANR	2668551	Argument	& ops		2667387	0					
ANR	2668552	UnaryOperationExpression	& ops		2667387	0					
ANR	2668553	UnaryOperator	&		2667387	0					
ANR	2668554	Identifier	ops		2667387	1					
ANR	2668555	Argument	0x000020d4		2667387	1					
ANR	2668556	PrimaryExpression	0x000020d4		2667387	0					
ANR	2668557	ReturnStatement	return * op != - 1 ;	1143:2:25729:25745	2667387	1	True				
ANR	2668558	EqualityExpression	* op != - 1		2667387	0		!=			
ANR	2668559	UnaryOperationExpression	* op		2667387	0					
ANR	2668560	UnaryOperator	*		2667387	0					
ANR	2668561	Identifier	op		2667387	1					
ANR	2668562	UnaryOperationExpression	- 1		2667387	1					
ANR	2668563	UnaryOperator	-		2667387	0					
ANR	2668564	PrimaryExpression	1		2667387	1					
ANR	2668565	IfStatement	"if ( ! strncmp ( str , ""hlt "" , 4 ) )"		2667387	34					
ANR	2668566	Condition	"! strncmp ( str , ""hlt "" , 4 )"	1145:5:25755:25779	2667387	0	True				
ANR	2668567	UnaryOperationExpression	"! strncmp ( str , ""hlt "" , 4 )"		2667387	0					
ANR	2668568	UnaryOperator	!		2667387	0					
ANR	2668569	CallExpression	"strncmp ( str , ""hlt "" , 4 )"		2667387	1					
ANR	2668570	Callee	strncmp		2667387	0					
ANR	2668571	Identifier	strncmp		2667387	0					
ANR	2668572	ArgumentList	str		2667387	1					
ANR	2668573	Argument	str		2667387	0					
ANR	2668574	Identifier	str		2667387	0					
ANR	2668575	Argument	"""hlt """		2667387	1					
ANR	2668576	PrimaryExpression	"""hlt """		2667387	0					
ANR	2668577	Argument	4		2667387	2					
ANR	2668578	PrimaryExpression	4		2667387	0					
ANR	2668579	CompoundStatement		139:32:3123:3123	2667387	1					
ANR	2668580	ExpressionStatement	"* op = exception ( & ops , 0x000040d4 )"	1146:2:25794:25828	2667387	0	True				
ANR	2668581	AssignmentExpression	"* op = exception ( & ops , 0x000040d4 )"		2667387	0		=			
ANR	2668582	UnaryOperationExpression	* op		2667387	0					
ANR	2668583	UnaryOperator	*		2667387	0					
ANR	2668584	Identifier	op		2667387	1					
ANR	2668585	CallExpression	"exception ( & ops , 0x000040d4 )"		2667387	1					
ANR	2668586	Callee	exception		2667387	0					
ANR	2668587	Identifier	exception		2667387	0					
ANR	2668588	ArgumentList	& ops		2667387	1					
ANR	2668589	Argument	& ops		2667387	0					
ANR	2668590	UnaryOperationExpression	& ops		2667387	0					
ANR	2668591	UnaryOperator	&		2667387	0					
ANR	2668592	Identifier	ops		2667387	1					
ANR	2668593	Argument	0x000040d4		2667387	1					
ANR	2668594	PrimaryExpression	0x000040d4		2667387	0					
ANR	2668595	ReturnStatement	return * op != - 1 ;	1147:2:25832:25848	2667387	1	True				
ANR	2668596	EqualityExpression	* op != - 1		2667387	0		!=			
ANR	2668597	UnaryOperationExpression	* op		2667387	0					
ANR	2668598	UnaryOperator	*		2667387	0					
ANR	2668599	Identifier	op		2667387	1					
ANR	2668600	UnaryOperationExpression	- 1		2667387	1					
ANR	2668601	UnaryOperator	-		2667387	0					
ANR	2668602	PrimaryExpression	1		2667387	1					
ANR	2668603	IfStatement	"if ( ! strncmp ( str , ""b "" , 2 ) )"		2667387	35					
ANR	2668604	Condition	"! strncmp ( str , ""b "" , 2 )"	1149:5:25858:25880	2667387	0	True				
ANR	2668605	UnaryOperationExpression	"! strncmp ( str , ""b "" , 2 )"		2667387	0					
ANR	2668606	UnaryOperator	!		2667387	0					
ANR	2668607	CallExpression	"strncmp ( str , ""b "" , 2 )"		2667387	1					
ANR	2668608	Callee	strncmp		2667387	0					
ANR	2668609	Identifier	strncmp		2667387	0					
ANR	2668610	ArgumentList	str		2667387	1					
ANR	2668611	Argument	str		2667387	0					
ANR	2668612	Identifier	str		2667387	0					
ANR	2668613	Argument	"""b """		2667387	1					
ANR	2668614	PrimaryExpression	"""b """		2667387	0					
ANR	2668615	Argument	2		2667387	2					
ANR	2668616	PrimaryExpression	2		2667387	0					
ANR	2668617	CompoundStatement		143:30:3224:3224	2667387	1					
ANR	2668618	ExpressionStatement	"* op = branch ( & ops , addr , 0x14 )"	1150:2:25887:25918	2667387	0	True				
ANR	2668619	AssignmentExpression	"* op = branch ( & ops , addr , 0x14 )"		2667387	0		=			
ANR	2668620	UnaryOperationExpression	* op		2667387	0					
ANR	2668621	UnaryOperator	*		2667387	0					
ANR	2668622	Identifier	op		2667387	1					
ANR	2668623	CallExpression	"branch ( & ops , addr , 0x14 )"		2667387	1					
ANR	2668624	Callee	branch		2667387	0					
ANR	2668625	Identifier	branch		2667387	0					
ANR	2668626	ArgumentList	& ops		2667387	1					
ANR	2668627	Argument	& ops		2667387	0					
ANR	2668628	UnaryOperationExpression	& ops		2667387	0					
ANR	2668629	UnaryOperator	&		2667387	0					
ANR	2668630	Identifier	ops		2667387	1					
ANR	2668631	Argument	addr		2667387	1					
ANR	2668632	Identifier	addr		2667387	0					
ANR	2668633	Argument	0x14		2667387	2					
ANR	2668634	PrimaryExpression	0x14		2667387	0					
ANR	2668635	ReturnStatement	return * op != - 1 ;	1151:2:25922:25938	2667387	1	True				
ANR	2668636	EqualityExpression	* op != - 1		2667387	0		!=			
ANR	2668637	UnaryOperationExpression	* op		2667387	0					
ANR	2668638	UnaryOperator	*		2667387	0					
ANR	2668639	Identifier	op		2667387	1					
ANR	2668640	UnaryOperationExpression	- 1		2667387	1					
ANR	2668641	UnaryOperator	-		2667387	0					
ANR	2668642	PrimaryExpression	1		2667387	1					
ANR	2668643	IfStatement	"if ( ! strncmp ( str , ""b.eq "" , 5 ) )"		2667387	36					
ANR	2668644	Condition	"! strncmp ( str , ""b.eq "" , 5 )"	1153:5:25948:25973	2667387	0	True				
ANR	2668645	UnaryOperationExpression	"! strncmp ( str , ""b.eq "" , 5 )"		2667387	0					
ANR	2668646	UnaryOperator	!		2667387	0					
ANR	2668647	CallExpression	"strncmp ( str , ""b.eq "" , 5 )"		2667387	1					
ANR	2668648	Callee	strncmp		2667387	0					
ANR	2668649	Identifier	strncmp		2667387	0					
ANR	2668650	ArgumentList	str		2667387	1					
ANR	2668651	Argument	str		2667387	0					
ANR	2668652	Identifier	str		2667387	0					
ANR	2668653	Argument	"""b.eq """		2667387	1					
ANR	2668654	PrimaryExpression	"""b.eq """		2667387	0					
ANR	2668655	Argument	5		2667387	2					
ANR	2668656	PrimaryExpression	5		2667387	0					
ANR	2668657	CompoundStatement		147:33:3317:3317	2667387	1					
ANR	2668658	ExpressionStatement	"* op = bdot ( & ops , addr , 0x00000054 )"	1154:2:25980:26015	2667387	0	True				
ANR	2668659	AssignmentExpression	"* op = bdot ( & ops , addr , 0x00000054 )"		2667387	0		=			
ANR	2668660	UnaryOperationExpression	* op		2667387	0					
ANR	2668661	UnaryOperator	*		2667387	0					
ANR	2668662	Identifier	op		2667387	1					
ANR	2668663	CallExpression	"bdot ( & ops , addr , 0x00000054 )"		2667387	1					
ANR	2668664	Callee	bdot		2667387	0					
ANR	2668665	Identifier	bdot		2667387	0					
ANR	2668666	ArgumentList	& ops		2667387	1					
ANR	2668667	Argument	& ops		2667387	0					
ANR	2668668	UnaryOperationExpression	& ops		2667387	0					
ANR	2668669	UnaryOperator	&		2667387	0					
ANR	2668670	Identifier	ops		2667387	1					
ANR	2668671	Argument	addr		2667387	1					
ANR	2668672	Identifier	addr		2667387	0					
ANR	2668673	Argument	0x00000054		2667387	2					
ANR	2668674	PrimaryExpression	0x00000054		2667387	0					
ANR	2668675	ReturnStatement	return * op != - 1 ;	1155:2:26019:26035	2667387	1	True				
ANR	2668676	EqualityExpression	* op != - 1		2667387	0		!=			
ANR	2668677	UnaryOperationExpression	* op		2667387	0					
ANR	2668678	UnaryOperator	*		2667387	0					
ANR	2668679	Identifier	op		2667387	1					
ANR	2668680	UnaryOperationExpression	- 1		2667387	1					
ANR	2668681	UnaryOperator	-		2667387	0					
ANR	2668682	PrimaryExpression	1		2667387	1					
ANR	2668683	IfStatement	"if ( ! strncmp ( str , ""b.hs "" , 5 ) )"		2667387	37					
ANR	2668684	Condition	"! strncmp ( str , ""b.hs "" , 5 )"	1157:5:26045:26070	2667387	0	True				
ANR	2668685	UnaryOperationExpression	"! strncmp ( str , ""b.hs "" , 5 )"		2667387	0					
ANR	2668686	UnaryOperator	!		2667387	0					
ANR	2668687	CallExpression	"strncmp ( str , ""b.hs "" , 5 )"		2667387	1					
ANR	2668688	Callee	strncmp		2667387	0					
ANR	2668689	Identifier	strncmp		2667387	0					
ANR	2668690	ArgumentList	str		2667387	1					
ANR	2668691	Argument	str		2667387	0					
ANR	2668692	Identifier	str		2667387	0					
ANR	2668693	Argument	"""b.hs """		2667387	1					
ANR	2668694	PrimaryExpression	"""b.hs """		2667387	0					
ANR	2668695	Argument	5		2667387	2					
ANR	2668696	PrimaryExpression	5		2667387	0					
ANR	2668697	CompoundStatement		151:33:3414:3414	2667387	1					
ANR	2668698	ExpressionStatement	"* op = bdot ( & ops , addr , 0x02000054 )"	1158:2:26077:26112	2667387	0	True				
ANR	2668699	AssignmentExpression	"* op = bdot ( & ops , addr , 0x02000054 )"		2667387	0		=			
ANR	2668700	UnaryOperationExpression	* op		2667387	0					
ANR	2668701	UnaryOperator	*		2667387	0					
ANR	2668702	Identifier	op		2667387	1					
ANR	2668703	CallExpression	"bdot ( & ops , addr , 0x02000054 )"		2667387	1					
ANR	2668704	Callee	bdot		2667387	0					
ANR	2668705	Identifier	bdot		2667387	0					
ANR	2668706	ArgumentList	& ops		2667387	1					
ANR	2668707	Argument	& ops		2667387	0					
ANR	2668708	UnaryOperationExpression	& ops		2667387	0					
ANR	2668709	UnaryOperator	&		2667387	0					
ANR	2668710	Identifier	ops		2667387	1					
ANR	2668711	Argument	addr		2667387	1					
ANR	2668712	Identifier	addr		2667387	0					
ANR	2668713	Argument	0x02000054		2667387	2					
ANR	2668714	PrimaryExpression	0x02000054		2667387	0					
ANR	2668715	ReturnStatement	return * op != - 1 ;	1159:2:26116:26132	2667387	1	True				
ANR	2668716	EqualityExpression	* op != - 1		2667387	0		!=			
ANR	2668717	UnaryOperationExpression	* op		2667387	0					
ANR	2668718	UnaryOperator	*		2667387	0					
ANR	2668719	Identifier	op		2667387	1					
ANR	2668720	UnaryOperationExpression	- 1		2667387	1					
ANR	2668721	UnaryOperator	-		2667387	0					
ANR	2668722	PrimaryExpression	1		2667387	1					
ANR	2668723	IfStatement	"if ( ! strncmp ( str , ""bl "" , 3 ) )"		2667387	38					
ANR	2668724	Condition	"! strncmp ( str , ""bl "" , 3 )"	1161:5:26142:26165	2667387	0	True				
ANR	2668725	UnaryOperationExpression	"! strncmp ( str , ""bl "" , 3 )"		2667387	0					
ANR	2668726	UnaryOperator	!		2667387	0					
ANR	2668727	CallExpression	"strncmp ( str , ""bl "" , 3 )"		2667387	1					
ANR	2668728	Callee	strncmp		2667387	0					
ANR	2668729	Identifier	strncmp		2667387	0					
ANR	2668730	ArgumentList	str		2667387	1					
ANR	2668731	Argument	str		2667387	0					
ANR	2668732	Identifier	str		2667387	0					
ANR	2668733	Argument	"""bl """		2667387	1					
ANR	2668734	PrimaryExpression	"""bl """		2667387	0					
ANR	2668735	Argument	3		2667387	2					
ANR	2668736	PrimaryExpression	3		2667387	0					
ANR	2668737	CompoundStatement		155:31:3509:3509	2667387	1					
ANR	2668738	ExpressionStatement	"* op = branch ( & ops , addr , 0x94 )"	1162:2:26172:26203	2667387	0	True				
ANR	2668739	AssignmentExpression	"* op = branch ( & ops , addr , 0x94 )"		2667387	0		=			
ANR	2668740	UnaryOperationExpression	* op		2667387	0					
ANR	2668741	UnaryOperator	*		2667387	0					
ANR	2668742	Identifier	op		2667387	1					
ANR	2668743	CallExpression	"branch ( & ops , addr , 0x94 )"		2667387	1					
ANR	2668744	Callee	branch		2667387	0					
ANR	2668745	Identifier	branch		2667387	0					
ANR	2668746	ArgumentList	& ops		2667387	1					
ANR	2668747	Argument	& ops		2667387	0					
ANR	2668748	UnaryOperationExpression	& ops		2667387	0					
ANR	2668749	UnaryOperator	&		2667387	0					
ANR	2668750	Identifier	ops		2667387	1					
ANR	2668751	Argument	addr		2667387	1					
ANR	2668752	Identifier	addr		2667387	0					
ANR	2668753	Argument	0x94		2667387	2					
ANR	2668754	PrimaryExpression	0x94		2667387	0					
ANR	2668755	ReturnStatement	return * op != - 1 ;	1163:2:26207:26223	2667387	1	True				
ANR	2668756	EqualityExpression	* op != - 1		2667387	0		!=			
ANR	2668757	UnaryOperationExpression	* op		2667387	0					
ANR	2668758	UnaryOperator	*		2667387	0					
ANR	2668759	Identifier	op		2667387	1					
ANR	2668760	UnaryOperationExpression	- 1		2667387	1					
ANR	2668761	UnaryOperator	-		2667387	0					
ANR	2668762	PrimaryExpression	1		2667387	1					
ANR	2668763	IfStatement	"if ( ! strncmp ( str , ""br x"" , 4 ) )"		2667387	39					
ANR	2668764	Condition	"! strncmp ( str , ""br x"" , 4 )"	1165:5:26233:26257	2667387	0	True				
ANR	2668765	UnaryOperationExpression	"! strncmp ( str , ""br x"" , 4 )"		2667387	0					
ANR	2668766	UnaryOperator	!		2667387	0					
ANR	2668767	CallExpression	"strncmp ( str , ""br x"" , 4 )"		2667387	1					
ANR	2668768	Callee	strncmp		2667387	0					
ANR	2668769	Identifier	strncmp		2667387	0					
ANR	2668770	ArgumentList	str		2667387	1					
ANR	2668771	Argument	str		2667387	0					
ANR	2668772	Identifier	str		2667387	0					
ANR	2668773	Argument	"""br x"""		2667387	1					
ANR	2668774	PrimaryExpression	"""br x"""		2667387	0					
ANR	2668775	Argument	4		2667387	2					
ANR	2668776	PrimaryExpression	4		2667387	0					
ANR	2668777	CompoundStatement		159:32:3601:3601	2667387	1					
ANR	2668778	ExpressionStatement	"* op = branch ( & ops , addr , 0x1fd6 )"	1166:2:26264:26297	2667387	0	True				
ANR	2668779	AssignmentExpression	"* op = branch ( & ops , addr , 0x1fd6 )"		2667387	0		=			
ANR	2668780	UnaryOperationExpression	* op		2667387	0					
ANR	2668781	UnaryOperator	*		2667387	0					
ANR	2668782	Identifier	op		2667387	1					
ANR	2668783	CallExpression	"branch ( & ops , addr , 0x1fd6 )"		2667387	1					
ANR	2668784	Callee	branch		2667387	0					
ANR	2668785	Identifier	branch		2667387	0					
ANR	2668786	ArgumentList	& ops		2667387	1					
ANR	2668787	Argument	& ops		2667387	0					
ANR	2668788	UnaryOperationExpression	& ops		2667387	0					
ANR	2668789	UnaryOperator	&		2667387	0					
ANR	2668790	Identifier	ops		2667387	1					
ANR	2668791	Argument	addr		2667387	1					
ANR	2668792	Identifier	addr		2667387	0					
ANR	2668793	Argument	0x1fd6		2667387	2					
ANR	2668794	PrimaryExpression	0x1fd6		2667387	0					
ANR	2668795	ReturnStatement	return * op != - 1 ;	1167:2:26301:26317	2667387	1	True				
ANR	2668796	EqualityExpression	* op != - 1		2667387	0		!=			
ANR	2668797	UnaryOperationExpression	* op		2667387	0					
ANR	2668798	UnaryOperator	*		2667387	0					
ANR	2668799	Identifier	op		2667387	1					
ANR	2668800	UnaryOperationExpression	- 1		2667387	1					
ANR	2668801	UnaryOperator	-		2667387	0					
ANR	2668802	PrimaryExpression	1		2667387	1					
ANR	2668803	IfStatement	"if ( ! strncmp ( str , ""blr x"" , 5 ) )"		2667387	40					
ANR	2668804	Condition	"! strncmp ( str , ""blr x"" , 5 )"	1169:5:26327:26352	2667387	0	True				
ANR	2668805	UnaryOperationExpression	"! strncmp ( str , ""blr x"" , 5 )"		2667387	0					
ANR	2668806	UnaryOperator	!		2667387	0					
ANR	2668807	CallExpression	"strncmp ( str , ""blr x"" , 5 )"		2667387	1					
ANR	2668808	Callee	strncmp		2667387	0					
ANR	2668809	Identifier	strncmp		2667387	0					
ANR	2668810	ArgumentList	str		2667387	1					
ANR	2668811	Argument	str		2667387	0					
ANR	2668812	Identifier	str		2667387	0					
ANR	2668813	Argument	"""blr x"""		2667387	1					
ANR	2668814	PrimaryExpression	"""blr x"""		2667387	0					
ANR	2668815	Argument	5		2667387	2					
ANR	2668816	PrimaryExpression	5		2667387	0					
ANR	2668817	CompoundStatement		163:33:3696:3696	2667387	1					
ANR	2668818	ExpressionStatement	"* op = branch ( & ops , addr , 0x3fd6 )"	1170:2:26359:26392	2667387	0	True				
ANR	2668819	AssignmentExpression	"* op = branch ( & ops , addr , 0x3fd6 )"		2667387	0		=			
ANR	2668820	UnaryOperationExpression	* op		2667387	0					
ANR	2668821	UnaryOperator	*		2667387	0					
ANR	2668822	Identifier	op		2667387	1					
ANR	2668823	CallExpression	"branch ( & ops , addr , 0x3fd6 )"		2667387	1					
ANR	2668824	Callee	branch		2667387	0					
ANR	2668825	Identifier	branch		2667387	0					
ANR	2668826	ArgumentList	& ops		2667387	1					
ANR	2668827	Argument	& ops		2667387	0					
ANR	2668828	UnaryOperationExpression	& ops		2667387	0					
ANR	2668829	UnaryOperator	&		2667387	0					
ANR	2668830	Identifier	ops		2667387	1					
ANR	2668831	Argument	addr		2667387	1					
ANR	2668832	Identifier	addr		2667387	0					
ANR	2668833	Argument	0x3fd6		2667387	2					
ANR	2668834	PrimaryExpression	0x3fd6		2667387	0					
ANR	2668835	ReturnStatement	return * op != - 1 ;	1171:2:26396:26412	2667387	1	True				
ANR	2668836	EqualityExpression	* op != - 1		2667387	0		!=			
ANR	2668837	UnaryOperationExpression	* op		2667387	0					
ANR	2668838	UnaryOperator	*		2667387	0					
ANR	2668839	Identifier	op		2667387	1					
ANR	2668840	UnaryOperationExpression	- 1		2667387	1					
ANR	2668841	UnaryOperator	-		2667387	0					
ANR	2668842	PrimaryExpression	1		2667387	1					
ANR	2668843	IfStatement	"if ( ! strncmp ( str , ""dmb "" , 4 ) )"		2667387	41					
ANR	2668844	Condition	"! strncmp ( str , ""dmb "" , 4 )"	1173:5:26422:26446	2667387	0	True				
ANR	2668845	UnaryOperationExpression	"! strncmp ( str , ""dmb "" , 4 )"		2667387	0					
ANR	2668846	UnaryOperator	!		2667387	0					
ANR	2668847	CallExpression	"strncmp ( str , ""dmb "" , 4 )"		2667387	1					
ANR	2668848	Callee	strncmp		2667387	0					
ANR	2668849	Identifier	strncmp		2667387	0					
ANR	2668850	ArgumentList	str		2667387	1					
ANR	2668851	Argument	str		2667387	0					
ANR	2668852	Identifier	str		2667387	0					
ANR	2668853	Argument	"""dmb """		2667387	1					
ANR	2668854	PrimaryExpression	"""dmb """		2667387	0					
ANR	2668855	Argument	4		2667387	2					
ANR	2668856	PrimaryExpression	4		2667387	0					
ANR	2668857	CompoundStatement		167:32:3790:3790	2667387	1					
ANR	2668858	ExpressionStatement	"* op = mem_barrier ( & ops , addr , 0xbf3003d5 )"	1174:2:26453:26495	2667387	0	True				
ANR	2668859	AssignmentExpression	"* op = mem_barrier ( & ops , addr , 0xbf3003d5 )"		2667387	0		=			
ANR	2668860	UnaryOperationExpression	* op		2667387	0					
ANR	2668861	UnaryOperator	*		2667387	0					
ANR	2668862	Identifier	op		2667387	1					
ANR	2668863	CallExpression	"mem_barrier ( & ops , addr , 0xbf3003d5 )"		2667387	1					
ANR	2668864	Callee	mem_barrier		2667387	0					
ANR	2668865	Identifier	mem_barrier		2667387	0					
ANR	2668866	ArgumentList	& ops		2667387	1					
ANR	2668867	Argument	& ops		2667387	0					
ANR	2668868	UnaryOperationExpression	& ops		2667387	0					
ANR	2668869	UnaryOperator	&		2667387	0					
ANR	2668870	Identifier	ops		2667387	1					
ANR	2668871	Argument	addr		2667387	1					
ANR	2668872	Identifier	addr		2667387	0					
ANR	2668873	Argument	0xbf3003d5		2667387	2					
ANR	2668874	PrimaryExpression	0xbf3003d5		2667387	0					
ANR	2668875	ReturnStatement	return * op != - 1 ;	1175:2:26499:26515	2667387	1	True				
ANR	2668876	EqualityExpression	* op != - 1		2667387	0		!=			
ANR	2668877	UnaryOperationExpression	* op		2667387	0					
ANR	2668878	UnaryOperator	*		2667387	0					
ANR	2668879	Identifier	op		2667387	1					
ANR	2668880	UnaryOperationExpression	- 1		2667387	1					
ANR	2668881	UnaryOperator	-		2667387	0					
ANR	2668882	PrimaryExpression	1		2667387	1					
ANR	2668883	IfStatement	"if ( ! strncmp ( str , ""dsb "" , 4 ) )"		2667387	42					
ANR	2668884	Condition	"! strncmp ( str , ""dsb "" , 4 )"	1177:5:26525:26549	2667387	0	True				
ANR	2668885	UnaryOperationExpression	"! strncmp ( str , ""dsb "" , 4 )"		2667387	0					
ANR	2668886	UnaryOperator	!		2667387	0					
ANR	2668887	CallExpression	"strncmp ( str , ""dsb "" , 4 )"		2667387	1					
ANR	2668888	Callee	strncmp		2667387	0					
ANR	2668889	Identifier	strncmp		2667387	0					
ANR	2668890	ArgumentList	str		2667387	1					
ANR	2668891	Argument	str		2667387	0					
ANR	2668892	Identifier	str		2667387	0					
ANR	2668893	Argument	"""dsb """		2667387	1					
ANR	2668894	PrimaryExpression	"""dsb """		2667387	0					
ANR	2668895	Argument	4		2667387	2					
ANR	2668896	PrimaryExpression	4		2667387	0					
ANR	2668897	CompoundStatement		171:32:3893:3893	2667387	1					
ANR	2668898	ExpressionStatement	"* op = mem_barrier ( & ops , addr , 0x9f3003d5 )"	1178:2:26556:26598	2667387	0	True				
ANR	2668899	AssignmentExpression	"* op = mem_barrier ( & ops , addr , 0x9f3003d5 )"		2667387	0		=			
ANR	2668900	UnaryOperationExpression	* op		2667387	0					
ANR	2668901	UnaryOperator	*		2667387	0					
ANR	2668902	Identifier	op		2667387	1					
ANR	2668903	CallExpression	"mem_barrier ( & ops , addr , 0x9f3003d5 )"		2667387	1					
ANR	2668904	Callee	mem_barrier		2667387	0					
ANR	2668905	Identifier	mem_barrier		2667387	0					
ANR	2668906	ArgumentList	& ops		2667387	1					
ANR	2668907	Argument	& ops		2667387	0					
ANR	2668908	UnaryOperationExpression	& ops		2667387	0					
ANR	2668909	UnaryOperator	&		2667387	0					
ANR	2668910	Identifier	ops		2667387	1					
ANR	2668911	Argument	addr		2667387	1					
ANR	2668912	Identifier	addr		2667387	0					
ANR	2668913	Argument	0x9f3003d5		2667387	2					
ANR	2668914	PrimaryExpression	0x9f3003d5		2667387	0					
ANR	2668915	ReturnStatement	return * op != - 1 ;	1179:2:26602:26618	2667387	1	True				
ANR	2668916	EqualityExpression	* op != - 1		2667387	0		!=			
ANR	2668917	UnaryOperationExpression	* op		2667387	0					
ANR	2668918	UnaryOperator	*		2667387	0					
ANR	2668919	Identifier	op		2667387	1					
ANR	2668920	UnaryOperationExpression	- 1		2667387	1					
ANR	2668921	UnaryOperator	-		2667387	0					
ANR	2668922	PrimaryExpression	1		2667387	1					
ANR	2668923	IfStatement	"if ( ! strncmp ( str , ""isb"" , 3 ) )"		2667387	43					
ANR	2668924	Condition	"! strncmp ( str , ""isb"" , 3 )"	1181:5:26628:26651	2667387	0	True				
ANR	2668925	UnaryOperationExpression	"! strncmp ( str , ""isb"" , 3 )"		2667387	0					
ANR	2668926	UnaryOperator	!		2667387	0					
ANR	2668927	CallExpression	"strncmp ( str , ""isb"" , 3 )"		2667387	1					
ANR	2668928	Callee	strncmp		2667387	0					
ANR	2668929	Identifier	strncmp		2667387	0					
ANR	2668930	ArgumentList	str		2667387	1					
ANR	2668931	Argument	str		2667387	0					
ANR	2668932	Identifier	str		2667387	0					
ANR	2668933	Argument	"""isb"""		2667387	1					
ANR	2668934	PrimaryExpression	"""isb"""		2667387	0					
ANR	2668935	Argument	3		2667387	2					
ANR	2668936	PrimaryExpression	3		2667387	0					
ANR	2668937	CompoundStatement		175:31:3995:3995	2667387	1					
ANR	2668938	ExpressionStatement	"* op = mem_barrier ( & ops , addr , 0xdf3f03d5 )"	1182:2:26658:26700	2667387	0	True				
ANR	2668939	AssignmentExpression	"* op = mem_barrier ( & ops , addr , 0xdf3f03d5 )"		2667387	0		=			
ANR	2668940	UnaryOperationExpression	* op		2667387	0					
ANR	2668941	UnaryOperator	*		2667387	0					
ANR	2668942	Identifier	op		2667387	1					
ANR	2668943	CallExpression	"mem_barrier ( & ops , addr , 0xdf3f03d5 )"		2667387	1					
ANR	2668944	Callee	mem_barrier		2667387	0					
ANR	2668945	Identifier	mem_barrier		2667387	0					
ANR	2668946	ArgumentList	& ops		2667387	1					
ANR	2668947	Argument	& ops		2667387	0					
ANR	2668948	UnaryOperationExpression	& ops		2667387	0					
ANR	2668949	UnaryOperator	&		2667387	0					
ANR	2668950	Identifier	ops		2667387	1					
ANR	2668951	Argument	addr		2667387	1					
ANR	2668952	Identifier	addr		2667387	0					
ANR	2668953	Argument	0xdf3f03d5		2667387	2					
ANR	2668954	PrimaryExpression	0xdf3f03d5		2667387	0					
ANR	2668955	ReturnStatement	return * op != - 1 ;	1183:2:26704:26720	2667387	1	True				
ANR	2668956	EqualityExpression	* op != - 1		2667387	0		!=			
ANR	2668957	UnaryOperationExpression	* op		2667387	0					
ANR	2668958	UnaryOperator	*		2667387	0					
ANR	2668959	Identifier	op		2667387	1					
ANR	2668960	UnaryOperationExpression	- 1		2667387	1					
ANR	2668961	UnaryOperator	-		2667387	0					
ANR	2668962	PrimaryExpression	1		2667387	1					
ANR	2668963	ReturnStatement	return false ;	1185:1:26726:26738	2667387	44	True				
ANR	2668964	Identifier	false		2667387	0					
ANR	2668965	ReturnType	bool		2667387	1					
ANR	2668966	Identifier	arm64ass		2667387	2					
ANR	2668967	ParameterList	"const char * str , ut64 addr , ut32 * op"		2667387	3					
ANR	2668968	Parameter	const char * str	1007:14:22620:22634	2667387	0	True				
ANR	2668969	ParameterType	const char *		2667387	0					
ANR	2668970	Identifier	str		2667387	1					
ANR	2668971	Parameter	ut64 addr	1007:31:22637:22645	2667387	1	True				
ANR	2668972	ParameterType	ut64		2667387	0					
ANR	2668973	Identifier	addr		2667387	1					
ANR	2668974	Parameter	ut32 * op	1007:42:22648:22655	2667387	2	True				
ANR	2668975	ParameterType	ut32 *		2667387	0					
ANR	2668976	Identifier	op		2667387	1					
ANR	2668977	CFGEntryNode	ENTRY		2667387		True				
ANR	2668978	CFGExitNode	EXIT		2667387		True				
ANR	2668979	Symbol	UT32_MAX		2667387						
ANR	2668980	Symbol	exception		2667387						
ANR	2668981	Symbol	reglsop		2667387						
ANR	2668982	Symbol	* op		2667387						
ANR	2668983	Symbol	cmp		2667387						
ANR	2668984	Symbol	bytelsop		2667387						
ANR	2668985	Symbol	arithmetic		2667387						
ANR	2668986	Symbol	bdot		2667387						
ANR	2668987	Symbol	adrp		2667387						
ANR	2668988	Symbol	msr		2667387						
ANR	2668989	Symbol	branch		2667387						
ANR	2668990	Symbol	strncmp		2667387						
ANR	2668991	Symbol	neg		2667387						
ANR	2668992	Symbol	mov		2667387						
ANR	2668993	Symbol	handlePAC		2667387						
ANR	2668994	Symbol	addr		2667387						
ANR	2668995	Symbol	parseOpcode		2667387						
ANR	2668996	Symbol	& ops		2667387						
ANR	2668997	Symbol	strcmp		2667387						
ANR	2668998	Symbol	op		2667387						
ANR	2668999	Symbol	false		2667387						
ANR	2669000	Symbol	regsluop		2667387						
ANR	2669001	Symbol	stp		2667387						
ANR	2669002	Symbol	adr		2667387						
ANR	2669003	Symbol	orr		2667387						
ANR	2669004	Symbol	str		2667387						
ANR	2669005	Symbol	ops		2667387						
ANR	2669006	Symbol	true		2667387						
ANR	2669007	Symbol	mem_barrier		2667387						
