command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	5184484	File	data/converged/CVE-2019-16718~_radare2/libr_util_punycode.c								
ANR	5184485	Function	utf32len	14:0:201:287							
ANR	5184486	FunctionDef	utf32len (ut32 * input)		5184485	0					
ANR	5184487	CompoundStatement		14:27:228:287	5184485	0					
ANR	5184488	IdentifierDeclStatement	int i = 0 ;	15:1:231:240	5184485	0	True				
ANR	5184489	IdentifierDecl	i = 0		5184485	0					
ANR	5184490	IdentifierDeclType	int		5184485	0					
ANR	5184491	Identifier	i		5184485	1					
ANR	5184492	AssignmentExpression	i = 0		5184485	2		=			
ANR	5184493	Identifier	i		5184485	0					
ANR	5184494	PrimaryExpression	0		5184485	1					
ANR	5184495	WhileStatement	while ( * ( input + i ) )		5184485	1					
ANR	5184496	Condition	* ( input + i )	16:8:250:261	5184485	0	True				
ANR	5184497	UnaryOperationExpression	* ( input + i )		5184485	0					
ANR	5184498	UnaryOperator	*		5184485	0					
ANR	5184499	AdditiveExpression	input + i		5184485	1		+			
ANR	5184500	Identifier	input		5184485	0					
ANR	5184501	Identifier	i		5184485	1					
ANR	5184502	CompoundStatement		3:22:35:35	5184485	1					
ANR	5184503	ExpressionStatement	i ++	17:2:268:271	5184485	0	True				
ANR	5184504	PostIncDecOperationExpression	i ++		5184485	0					
ANR	5184505	Identifier	i		5184485	0					
ANR	5184506	IncDec	++		5184485	1					
ANR	5184507	ReturnStatement	return i ;	19:1:277:285	5184485	2	True				
ANR	5184508	Identifier	i		5184485	0					
ANR	5184509	ReturnType	int		5184485	1					
ANR	5184510	Identifier	utf32len		5184485	2					
ANR	5184511	ParameterList	ut32 * input		5184485	3					
ANR	5184512	Parameter	ut32 * input	14:14:215:225	5184485	0	True				
ANR	5184513	ParameterType	ut32 *		5184485	0					
ANR	5184514	Identifier	input		5184485	1					
ANR	5184515	CFGEntryNode	ENTRY		5184485		True				
ANR	5184516	CFGExitNode	EXIT		5184485		True				
ANR	5184517	Symbol	input		5184485						
ANR	5184518	Symbol	* ( input + i )		5184485						
ANR	5184519	Symbol	* i		5184485						
ANR	5184520	Symbol	* input		5184485						
ANR	5184521	Symbol	i		5184485						
ANR	5184522	Function	utf32toutf8	22:0:290:1364							
ANR	5184523	FunctionDef	utf32toutf8 (ut32 * input)		5184522	0					
ANR	5184524	CompoundStatement		22:31:321:1364	5184522	0					
ANR	5184525	IfStatement	if ( ! input )		5184522	0					
ANR	5184526	Condition	! input	23:5:328:333	5184522	0	True				
ANR	5184527	UnaryOperationExpression	! input		5184522	0					
ANR	5184528	UnaryOperator	!		5184522	0					
ANR	5184529	Identifier	input		5184522	1					
ANR	5184530	CompoundStatement		2:13:14:14	5184522	1					
ANR	5184531	ExpressionStatement	"eprintf ( ""ERROR input is null\\n"" )"	24:2:340:373	5184522	0	True				
ANR	5184532	CallExpression	"eprintf ( ""ERROR input is null\\n"" )"		5184522	0					
ANR	5184533	Callee	eprintf		5184522	0					
ANR	5184534	Identifier	eprintf		5184522	0					
ANR	5184535	ArgumentList	"""ERROR input is null\\n"""		5184522	1					
ANR	5184536	Argument	"""ERROR input is null\\n"""		5184522	0					
ANR	5184537	PrimaryExpression	"""ERROR input is null\\n"""		5184522	0					
ANR	5184538	ReturnStatement	return NULL ;	25:2:377:388	5184522	1	True				
ANR	5184539	Identifier	NULL		5184522	0					
ANR	5184540	IdentifierDeclStatement	int i = 0 ;	28:1:395:404	5184522	1	True				
ANR	5184541	IdentifierDecl	i = 0		5184522	0					
ANR	5184542	IdentifierDeclType	int		5184522	0					
ANR	5184543	Identifier	i		5184522	1					
ANR	5184544	AssignmentExpression	i = 0		5184522	2		=			
ANR	5184545	Identifier	i		5184522	0					
ANR	5184546	PrimaryExpression	0		5184522	1					
ANR	5184547	IdentifierDeclStatement	int j = 0 ;	29:1:407:416	5184522	2	True				
ANR	5184548	IdentifierDecl	j = 0		5184522	0					
ANR	5184549	IdentifierDeclType	int		5184522	0					
ANR	5184550	Identifier	j		5184522	1					
ANR	5184551	AssignmentExpression	j = 0		5184522	2		=			
ANR	5184552	Identifier	j		5184522	0					
ANR	5184553	PrimaryExpression	0		5184522	1					
ANR	5184554	IdentifierDeclStatement	int len = utf32len ( input ) ;	30:1:419:445	5184522	3	True				
ANR	5184555	IdentifierDecl	len = utf32len ( input )		5184522	0					
ANR	5184556	IdentifierDeclType	int		5184522	0					
ANR	5184557	Identifier	len		5184522	1					
ANR	5184558	AssignmentExpression	len = utf32len ( input )		5184522	2		=			
ANR	5184559	Identifier	len		5184522	0					
ANR	5184560	CallExpression	utf32len ( input )		5184522	1					
ANR	5184561	Callee	utf32len		5184522	0					
ANR	5184562	Identifier	utf32len		5184522	0					
ANR	5184563	ArgumentList	input		5184522	1					
ANR	5184564	Argument	input		5184522	0					
ANR	5184565	Identifier	input		5184522	0					
ANR	5184566	IdentifierDeclStatement	"ut8 * result = calloc ( 4 , len + 1 ) ;"	31:1:448:481	5184522	4	True				
ANR	5184567	IdentifierDecl	"* result = calloc ( 4 , len + 1 )"		5184522	0					
ANR	5184568	IdentifierDeclType	ut8 *		5184522	0					
ANR	5184569	Identifier	result		5184522	1					
ANR	5184570	AssignmentExpression	"* result = calloc ( 4 , len + 1 )"		5184522	2		=			
ANR	5184571	Identifier	result		5184522	0					
ANR	5184572	CallExpression	"calloc ( 4 , len + 1 )"		5184522	1					
ANR	5184573	Callee	calloc		5184522	0					
ANR	5184574	Identifier	calloc		5184522	0					
ANR	5184575	ArgumentList	4		5184522	1					
ANR	5184576	Argument	4		5184522	0					
ANR	5184577	PrimaryExpression	4		5184522	0					
ANR	5184578	Argument	len + 1		5184522	1					
ANR	5184579	AdditiveExpression	len + 1		5184522	0		+			
ANR	5184580	Identifier	len		5184522	0					
ANR	5184581	PrimaryExpression	1		5184522	1					
ANR	5184582	IfStatement	if ( ! result )		5184522	5					
ANR	5184583	Condition	! result	32:5:488:494	5184522	0	True				
ANR	5184584	UnaryOperationExpression	! result		5184522	0					
ANR	5184585	UnaryOperator	!		5184522	0					
ANR	5184586	Identifier	result		5184522	1					
ANR	5184587	CompoundStatement		11:14:175:175	5184522	1					
ANR	5184588	ExpressionStatement	"eprintf ( ""ERROR: out of memory\\n"" )"	33:2:501:535	5184522	0	True				
ANR	5184589	CallExpression	"eprintf ( ""ERROR: out of memory\\n"" )"		5184522	0					
ANR	5184590	Callee	eprintf		5184522	0					
ANR	5184591	Identifier	eprintf		5184522	0					
ANR	5184592	ArgumentList	"""ERROR: out of memory\\n"""		5184522	1					
ANR	5184593	Argument	"""ERROR: out of memory\\n"""		5184522	0					
ANR	5184594	PrimaryExpression	"""ERROR: out of memory\\n"""		5184522	0					
ANR	5184595	ReturnStatement	return NULL ;	34:2:539:550	5184522	1	True				
ANR	5184596	Identifier	NULL		5184522	0					
ANR	5184597	ForStatement	for ( i = 0 ; i < len ; i ++ )		5184522	6					
ANR	5184598	ForInit	i = 0 ;	37:6:562:567	5184522	0	True				
ANR	5184599	AssignmentExpression	i = 0		5184522	0		=			
ANR	5184600	Identifier	i		5184522	0					
ANR	5184601	PrimaryExpression	0		5184522	1					
ANR	5184602	Condition	i < len	37:13:569:575	5184522	1	True				
ANR	5184603	RelationalExpression	i < len		5184522	0		<			
ANR	5184604	Identifier	i		5184522	0					
ANR	5184605	Identifier	len		5184522	1					
ANR	5184606	PostIncDecOperationExpression	i ++	37:22:578:580	5184522	2	True				
ANR	5184607	Identifier	i		5184522	0					
ANR	5184608	IncDec	++		5184522	1					
ANR	5184609	CompoundStatement		16:27:261:261	5184522	3					
ANR	5184610	IfStatement	if ( input [ i ] < 0x80 )		5184522	0					
ANR	5184611	Condition	input [ i ] < 0x80	38:6:591:605	5184522	0	True				
ANR	5184612	RelationalExpression	input [ i ] < 0x80		5184522	0		<			
ANR	5184613	ArrayIndexing	input [ i ]		5184522	0					
ANR	5184614	Identifier	input		5184522	0					
ANR	5184615	Identifier	i		5184522	1					
ANR	5184616	PrimaryExpression	0x80		5184522	1					
ANR	5184617	CompoundStatement		17:23:286:286	5184522	1					
ANR	5184618	ExpressionStatement	result [ j ] = input [ i ]	39:3:613:633	5184522	0	True				
ANR	5184619	AssignmentExpression	result [ j ] = input [ i ]		5184522	0		=			
ANR	5184620	ArrayIndexing	result [ j ]		5184522	0					
ANR	5184621	Identifier	result		5184522	0					
ANR	5184622	Identifier	j		5184522	1					
ANR	5184623	ArrayIndexing	input [ i ]		5184522	1					
ANR	5184624	Identifier	input		5184522	0					
ANR	5184625	Identifier	i		5184522	1					
ANR	5184626	ExpressionStatement	j ++	40:3:638:641	5184522	1	True				
ANR	5184627	PostIncDecOperationExpression	j ++		5184522	0					
ANR	5184628	Identifier	j		5184522	0					
ANR	5184629	IncDec	++		5184522	1					
ANR	5184630	ElseStatement	else		5184522	0					
ANR	5184631	IfStatement	if ( input [ i ] < 0x800 )		5184522	0					
ANR	5184632	Condition	input [ i ] < 0x800	41:13:656:671	5184522	0	True				
ANR	5184633	RelationalExpression	input [ i ] < 0x800		5184522	0		<			
ANR	5184634	ArrayIndexing	input [ i ]		5184522	0					
ANR	5184635	Identifier	input		5184522	0					
ANR	5184636	Identifier	i		5184522	1					
ANR	5184637	PrimaryExpression	0x800		5184522	1					
ANR	5184638	CompoundStatement		20:31:352:352	5184522	1					
ANR	5184639	ExpressionStatement	result [ j + 1 ] = 0x80 | ( input [ i ] & 0x3f )	42:3:679:719	5184522	0	True				
ANR	5184640	AssignmentExpression	result [ j + 1 ] = 0x80 | ( input [ i ] & 0x3f )		5184522	0		=			
ANR	5184641	ArrayIndexing	result [ j + 1 ]		5184522	0					
ANR	5184642	Identifier	result		5184522	0					
ANR	5184643	AdditiveExpression	j + 1		5184522	1		+			
ANR	5184644	Identifier	j		5184522	0					
ANR	5184645	PrimaryExpression	1		5184522	1					
ANR	5184646	InclusiveOrExpression	0x80 | ( input [ i ] & 0x3f )		5184522	1		|			
ANR	5184647	PrimaryExpression	0x80		5184522	0					
ANR	5184648	BitAndExpression	input [ i ] & 0x3f		5184522	1		&			
ANR	5184649	ArrayIndexing	input [ i ]		5184522	0					
ANR	5184650	Identifier	input		5184522	0					
ANR	5184651	Identifier	i		5184522	1					
ANR	5184652	PrimaryExpression	0x3f		5184522	1					
ANR	5184653	ExpressionStatement	result [ j ] = 0xc0 | ( ( input [ i ] >> 6 ) & 0x1f )	43:3:724:767	5184522	1	True				
ANR	5184654	AssignmentExpression	result [ j ] = 0xc0 | ( ( input [ i ] >> 6 ) & 0x1f )		5184522	0		=			
ANR	5184655	ArrayIndexing	result [ j ]		5184522	0					
ANR	5184656	Identifier	result		5184522	0					
ANR	5184657	Identifier	j		5184522	1					
ANR	5184658	InclusiveOrExpression	0xc0 | ( ( input [ i ] >> 6 ) & 0x1f )		5184522	1		|			
ANR	5184659	PrimaryExpression	0xc0		5184522	0					
ANR	5184660	BitAndExpression	( input [ i ] >> 6 ) & 0x1f		5184522	1		&			
ANR	5184661	ShiftExpression	input [ i ] >> 6		5184522	0		>>			
ANR	5184662	ArrayIndexing	input [ i ]		5184522	0					
ANR	5184663	Identifier	input		5184522	0					
ANR	5184664	Identifier	i		5184522	1					
ANR	5184665	PrimaryExpression	6		5184522	1					
ANR	5184666	PrimaryExpression	0x1f		5184522	1					
ANR	5184667	ExpressionStatement	j += 2	44:3:772:778	5184522	2	True				
ANR	5184668	AssignmentExpression	j += 2		5184522	0		+=			
ANR	5184669	Identifier	j		5184522	0					
ANR	5184670	PrimaryExpression	2		5184522	1					
ANR	5184671	ElseStatement	else		5184522	0					
ANR	5184672	IfStatement	if ( input [ i ] < 0x10000 )		5184522	0					
ANR	5184673	Condition	input [ i ] < 0x10000	45:13:793:810	5184522	0	True				
ANR	5184674	RelationalExpression	input [ i ] < 0x10000		5184522	0		<			
ANR	5184675	ArrayIndexing	input [ i ]		5184522	0					
ANR	5184676	Identifier	input		5184522	0					
ANR	5184677	Identifier	i		5184522	1					
ANR	5184678	PrimaryExpression	0x10000		5184522	1					
ANR	5184679	CompoundStatement		24:33:491:491	5184522	1					
ANR	5184680	ExpressionStatement	result [ j + 2 ] = 0x80 | ( input [ i ] & 0x3f )	46:3:818:858	5184522	0	True				
ANR	5184681	AssignmentExpression	result [ j + 2 ] = 0x80 | ( input [ i ] & 0x3f )		5184522	0		=			
ANR	5184682	ArrayIndexing	result [ j + 2 ]		5184522	0					
ANR	5184683	Identifier	result		5184522	0					
ANR	5184684	AdditiveExpression	j + 2		5184522	1		+			
ANR	5184685	Identifier	j		5184522	0					
ANR	5184686	PrimaryExpression	2		5184522	1					
ANR	5184687	InclusiveOrExpression	0x80 | ( input [ i ] & 0x3f )		5184522	1		|			
ANR	5184688	PrimaryExpression	0x80		5184522	0					
ANR	5184689	BitAndExpression	input [ i ] & 0x3f		5184522	1		&			
ANR	5184690	ArrayIndexing	input [ i ]		5184522	0					
ANR	5184691	Identifier	input		5184522	0					
ANR	5184692	Identifier	i		5184522	1					
ANR	5184693	PrimaryExpression	0x3f		5184522	1					
ANR	5184694	ExpressionStatement	result [ j + 1 ] = 0x80 | ( ( input [ i ] >> 6 ) & 0x3f )	47:3:863:910	5184522	1	True				
ANR	5184695	AssignmentExpression	result [ j + 1 ] = 0x80 | ( ( input [ i ] >> 6 ) & 0x3f )		5184522	0		=			
ANR	5184696	ArrayIndexing	result [ j + 1 ]		5184522	0					
ANR	5184697	Identifier	result		5184522	0					
ANR	5184698	AdditiveExpression	j + 1		5184522	1		+			
ANR	5184699	Identifier	j		5184522	0					
ANR	5184700	PrimaryExpression	1		5184522	1					
ANR	5184701	InclusiveOrExpression	0x80 | ( ( input [ i ] >> 6 ) & 0x3f )		5184522	1		|			
ANR	5184702	PrimaryExpression	0x80		5184522	0					
ANR	5184703	BitAndExpression	( input [ i ] >> 6 ) & 0x3f		5184522	1		&			
ANR	5184704	ShiftExpression	input [ i ] >> 6		5184522	0		>>			
ANR	5184705	ArrayIndexing	input [ i ]		5184522	0					
ANR	5184706	Identifier	input		5184522	0					
ANR	5184707	Identifier	i		5184522	1					
ANR	5184708	PrimaryExpression	6		5184522	1					
ANR	5184709	PrimaryExpression	0x3f		5184522	1					
ANR	5184710	ExpressionStatement	result [ j ] = 0xe0 | ( ( input [ i ] >> 12 ) & 0xf )	48:3:915:958	5184522	2	True				
ANR	5184711	AssignmentExpression	result [ j ] = 0xe0 | ( ( input [ i ] >> 12 ) & 0xf )		5184522	0		=			
ANR	5184712	ArrayIndexing	result [ j ]		5184522	0					
ANR	5184713	Identifier	result		5184522	0					
ANR	5184714	Identifier	j		5184522	1					
ANR	5184715	InclusiveOrExpression	0xe0 | ( ( input [ i ] >> 12 ) & 0xf )		5184522	1		|			
ANR	5184716	PrimaryExpression	0xe0		5184522	0					
ANR	5184717	BitAndExpression	( input [ i ] >> 12 ) & 0xf		5184522	1		&			
ANR	5184718	ShiftExpression	input [ i ] >> 12		5184522	0		>>			
ANR	5184719	ArrayIndexing	input [ i ]		5184522	0					
ANR	5184720	Identifier	input		5184522	0					
ANR	5184721	Identifier	i		5184522	1					
ANR	5184722	PrimaryExpression	12		5184522	1					
ANR	5184723	PrimaryExpression	0xf		5184522	1					
ANR	5184724	ExpressionStatement	j += 3	49:3:963:969	5184522	3	True				
ANR	5184725	AssignmentExpression	j += 3		5184522	0		+=			
ANR	5184726	Identifier	j		5184522	0					
ANR	5184727	PrimaryExpression	3		5184522	1					
ANR	5184728	ElseStatement	else		5184522	0					
ANR	5184729	IfStatement	if ( input [ i ] < 0x200000 )		5184522	0					
ANR	5184730	Condition	input [ i ] < 0x200000	50:13:984:1002	5184522	0	True				
ANR	5184731	RelationalExpression	input [ i ] < 0x200000		5184522	0		<			
ANR	5184732	ArrayIndexing	input [ i ]		5184522	0					
ANR	5184733	Identifier	input		5184522	0					
ANR	5184734	Identifier	i		5184522	1					
ANR	5184735	PrimaryExpression	0x200000		5184522	1					
ANR	5184736	CompoundStatement		29:34:683:683	5184522	1					
ANR	5184737	ExpressionStatement	result [ j + 3 ] = 0x80 | ( input [ i ] & 0x3f )	51:3:1010:1050	5184522	0	True				
ANR	5184738	AssignmentExpression	result [ j + 3 ] = 0x80 | ( input [ i ] & 0x3f )		5184522	0		=			
ANR	5184739	ArrayIndexing	result [ j + 3 ]		5184522	0					
ANR	5184740	Identifier	result		5184522	0					
ANR	5184741	AdditiveExpression	j + 3		5184522	1		+			
ANR	5184742	Identifier	j		5184522	0					
ANR	5184743	PrimaryExpression	3		5184522	1					
ANR	5184744	InclusiveOrExpression	0x80 | ( input [ i ] & 0x3f )		5184522	1		|			
ANR	5184745	PrimaryExpression	0x80		5184522	0					
ANR	5184746	BitAndExpression	input [ i ] & 0x3f		5184522	1		&			
ANR	5184747	ArrayIndexing	input [ i ]		5184522	0					
ANR	5184748	Identifier	input		5184522	0					
ANR	5184749	Identifier	i		5184522	1					
ANR	5184750	PrimaryExpression	0x3f		5184522	1					
ANR	5184751	ExpressionStatement	result [ j + 2 ] = 0x80 | ( ( input [ i ] >> 6 ) & 0x3f )	52:3:1055:1102	5184522	1	True				
ANR	5184752	AssignmentExpression	result [ j + 2 ] = 0x80 | ( ( input [ i ] >> 6 ) & 0x3f )		5184522	0		=			
ANR	5184753	ArrayIndexing	result [ j + 2 ]		5184522	0					
ANR	5184754	Identifier	result		5184522	0					
ANR	5184755	AdditiveExpression	j + 2		5184522	1		+			
ANR	5184756	Identifier	j		5184522	0					
ANR	5184757	PrimaryExpression	2		5184522	1					
ANR	5184758	InclusiveOrExpression	0x80 | ( ( input [ i ] >> 6 ) & 0x3f )		5184522	1		|			
ANR	5184759	PrimaryExpression	0x80		5184522	0					
ANR	5184760	BitAndExpression	( input [ i ] >> 6 ) & 0x3f		5184522	1		&			
ANR	5184761	ShiftExpression	input [ i ] >> 6		5184522	0		>>			
ANR	5184762	ArrayIndexing	input [ i ]		5184522	0					
ANR	5184763	Identifier	input		5184522	0					
ANR	5184764	Identifier	i		5184522	1					
ANR	5184765	PrimaryExpression	6		5184522	1					
ANR	5184766	PrimaryExpression	0x3f		5184522	1					
ANR	5184767	ExpressionStatement	result [ j + 1 ] = 0x80 | ( ( input [ i ] >> 12 ) & 0x3f )	53:3:1107:1155	5184522	2	True				
ANR	5184768	AssignmentExpression	result [ j + 1 ] = 0x80 | ( ( input [ i ] >> 12 ) & 0x3f )		5184522	0		=			
ANR	5184769	ArrayIndexing	result [ j + 1 ]		5184522	0					
ANR	5184770	Identifier	result		5184522	0					
ANR	5184771	AdditiveExpression	j + 1		5184522	1		+			
ANR	5184772	Identifier	j		5184522	0					
ANR	5184773	PrimaryExpression	1		5184522	1					
ANR	5184774	InclusiveOrExpression	0x80 | ( ( input [ i ] >> 12 ) & 0x3f )		5184522	1		|			
ANR	5184775	PrimaryExpression	0x80		5184522	0					
ANR	5184776	BitAndExpression	( input [ i ] >> 12 ) & 0x3f		5184522	1		&			
ANR	5184777	ShiftExpression	input [ i ] >> 12		5184522	0		>>			
ANR	5184778	ArrayIndexing	input [ i ]		5184522	0					
ANR	5184779	Identifier	input		5184522	0					
ANR	5184780	Identifier	i		5184522	1					
ANR	5184781	PrimaryExpression	12		5184522	1					
ANR	5184782	PrimaryExpression	0x3f		5184522	1					
ANR	5184783	ExpressionStatement	result [ j ] = 0xf0 | ( ( input [ i ] >> 18 ) & 0x7 )	54:3:1160:1203	5184522	3	True				
ANR	5184784	AssignmentExpression	result [ j ] = 0xf0 | ( ( input [ i ] >> 18 ) & 0x7 )		5184522	0		=			
ANR	5184785	ArrayIndexing	result [ j ]		5184522	0					
ANR	5184786	Identifier	result		5184522	0					
ANR	5184787	Identifier	j		5184522	1					
ANR	5184788	InclusiveOrExpression	0xf0 | ( ( input [ i ] >> 18 ) & 0x7 )		5184522	1		|			
ANR	5184789	PrimaryExpression	0xf0		5184522	0					
ANR	5184790	BitAndExpression	( input [ i ] >> 18 ) & 0x7		5184522	1		&			
ANR	5184791	ShiftExpression	input [ i ] >> 18		5184522	0		>>			
ANR	5184792	ArrayIndexing	input [ i ]		5184522	0					
ANR	5184793	Identifier	input		5184522	0					
ANR	5184794	Identifier	i		5184522	1					
ANR	5184795	PrimaryExpression	18		5184522	1					
ANR	5184796	PrimaryExpression	0x7		5184522	1					
ANR	5184797	ExpressionStatement	j += 4	55:3:1208:1214	5184522	4	True				
ANR	5184798	AssignmentExpression	j += 4		5184522	0		+=			
ANR	5184799	Identifier	j		5184522	0					
ANR	5184800	PrimaryExpression	4		5184522	1					
ANR	5184801	ElseStatement	else		5184522	0					
ANR	5184802	CompoundStatement		35:9:903:903	5184522	0					
ANR	5184803	ExpressionStatement	"eprintf ( ""ERROR in toutf8. Seems like input is invalid\\n"" )"	57:3:1230:1288	5184522	0	True				
ANR	5184804	CallExpression	"eprintf ( ""ERROR in toutf8. Seems like input is invalid\\n"" )"		5184522	0					
ANR	5184805	Callee	eprintf		5184522	0					
ANR	5184806	Identifier	eprintf		5184522	0					
ANR	5184807	ArgumentList	"""ERROR in toutf8. Seems like input is invalid\\n"""		5184522	1					
ANR	5184808	Argument	"""ERROR in toutf8. Seems like input is invalid\\n"""		5184522	0					
ANR	5184809	PrimaryExpression	"""ERROR in toutf8. Seems like input is invalid\\n"""		5184522	0					
ANR	5184810	ExpressionStatement	free ( result )	58:3:1293:1306	5184522	1	True				
ANR	5184811	CallExpression	free ( result )		5184522	0					
ANR	5184812	Callee	free		5184522	0					
ANR	5184813	Identifier	free		5184522	0					
ANR	5184814	ArgumentList	result		5184522	1					
ANR	5184815	Argument	result		5184522	0					
ANR	5184816	Identifier	result		5184522	0					
ANR	5184817	ReturnStatement	return NULL ;	59:3:1311:1322	5184522	2	True				
ANR	5184818	Identifier	NULL		5184522	0					
ANR	5184819	ExpressionStatement	result [ j ] = 0	63:1:1333:1346	5184522	7	True				
ANR	5184820	AssignmentExpression	result [ j ] = 0		5184522	0		=			
ANR	5184821	ArrayIndexing	result [ j ]		5184522	0					
ANR	5184822	Identifier	result		5184522	0					
ANR	5184823	Identifier	j		5184522	1					
ANR	5184824	PrimaryExpression	0		5184522	1					
ANR	5184825	ReturnStatement	return result ;	64:1:1349:1362	5184522	8	True				
ANR	5184826	Identifier	result		5184522	0					
ANR	5184827	ReturnType	ut8 *		5184522	1					
ANR	5184828	Identifier	utf32toutf8		5184522	2					
ANR	5184829	ParameterList	ut32 * input		5184522	3					
ANR	5184830	Parameter	ut32 * input	22:18:308:318	5184522	0	True				
ANR	5184831	ParameterType	ut32 *		5184522	0					
ANR	5184832	Identifier	input		5184522	1					
ANR	5184833	CFGEntryNode	ENTRY		5184522		True				
ANR	5184834	CFGExitNode	EXIT		5184522		True				
ANR	5184835	Symbol	result		5184522						
ANR	5184836	Symbol	input		5184522						
ANR	5184837	Symbol	NULL		5184522						
ANR	5184838	Symbol	* i		5184522						
ANR	5184839	Symbol	len		5184522						
ANR	5184840	Symbol	* j		5184522						
ANR	5184841	Symbol	* result		5184522						
ANR	5184842	Symbol	* input		5184522						
ANR	5184843	Symbol	i		5184522						
ANR	5184844	Symbol	j		5184522						
ANR	5184845	Symbol	calloc		5184522						
ANR	5184846	Symbol	utf32len		5184522						
ANR	5184847	Function	utf8toutf32	67:0:1367:2436							
ANR	5184848	FunctionDef	utf8toutf32 (const ut8 * input)		5184847	0					
ANR	5184849	CompoundStatement		67:37:1404:2436	5184847	0					
ANR	5184850	IfStatement	if ( ! input )		5184847	0					
ANR	5184851	Condition	! input	68:5:1411:1416	5184847	0	True				
ANR	5184852	UnaryOperationExpression	! input		5184847	0					
ANR	5184853	UnaryOperator	!		5184847	0					
ANR	5184854	Identifier	input		5184847	1					
ANR	5184855	CompoundStatement		2:13:14:14	5184847	1					
ANR	5184856	ExpressionStatement	"eprintf ( ""ERROR input is null\\n"" )"	69:2:1423:1456	5184847	0	True				
ANR	5184857	CallExpression	"eprintf ( ""ERROR input is null\\n"" )"		5184847	0					
ANR	5184858	Callee	eprintf		5184847	0					
ANR	5184859	Identifier	eprintf		5184847	0					
ANR	5184860	ArgumentList	"""ERROR input is null\\n"""		5184847	1					
ANR	5184861	Argument	"""ERROR input is null\\n"""		5184847	0					
ANR	5184862	PrimaryExpression	"""ERROR input is null\\n"""		5184847	0					
ANR	5184863	ReturnStatement	return NULL ;	70:2:1460:1471	5184847	1	True				
ANR	5184864	Identifier	NULL		5184847	0					
ANR	5184865	IdentifierDeclStatement	int i = 0 ;	73:1:1478:1487	5184847	1	True				
ANR	5184866	IdentifierDecl	i = 0		5184847	0					
ANR	5184867	IdentifierDeclType	int		5184847	0					
ANR	5184868	Identifier	i		5184847	1					
ANR	5184869	AssignmentExpression	i = 0		5184847	2		=			
ANR	5184870	Identifier	i		5184847	0					
ANR	5184871	PrimaryExpression	0		5184847	1					
ANR	5184872	IdentifierDeclStatement	int j = 0 ;	74:1:1490:1499	5184847	2	True				
ANR	5184873	IdentifierDecl	j = 0		5184847	0					
ANR	5184874	IdentifierDeclType	int		5184847	0					
ANR	5184875	Identifier	j		5184847	1					
ANR	5184876	AssignmentExpression	j = 0		5184847	2		=			
ANR	5184877	Identifier	j		5184847	0					
ANR	5184878	PrimaryExpression	0		5184847	1					
ANR	5184879	IdentifierDeclStatement	int val = 0 ;	75:1:1502:1513	5184847	3	True				
ANR	5184880	IdentifierDecl	val = 0		5184847	0					
ANR	5184881	IdentifierDeclType	int		5184847	0					
ANR	5184882	Identifier	val		5184847	1					
ANR	5184883	AssignmentExpression	val = 0		5184847	2		=			
ANR	5184884	Identifier	val		5184847	0					
ANR	5184885	PrimaryExpression	0		5184847	1					
ANR	5184886	IdentifierDeclStatement	int len = strlen ( ( const char * ) input ) ;	76:1:1516:1555	5184847	4	True				
ANR	5184887	IdentifierDecl	len = strlen ( ( const char * ) input )		5184847	0					
ANR	5184888	IdentifierDeclType	int		5184847	0					
ANR	5184889	Identifier	len		5184847	1					
ANR	5184890	AssignmentExpression	len = strlen ( ( const char * ) input )		5184847	2		=			
ANR	5184891	Identifier	len		5184847	0					
ANR	5184892	CallExpression	strlen ( ( const char * ) input )		5184847	1					
ANR	5184893	Callee	strlen		5184847	0					
ANR	5184894	Identifier	strlen		5184847	0					
ANR	5184895	ArgumentList	( const char * ) input		5184847	1					
ANR	5184896	Argument	( const char * ) input		5184847	0					
ANR	5184897	CastExpression	( const char * ) input		5184847	0					
ANR	5184898	CastTarget	const char *		5184847	0					
ANR	5184899	Identifier	input		5184847	1					
ANR	5184900	IdentifierDeclStatement	"ut32 * result = calloc ( strlen ( ( const char * ) input ) + 1 , 4 ) ;"	77:1:1558:1618	5184847	5	True				
ANR	5184901	IdentifierDecl	"* result = calloc ( strlen ( ( const char * ) input ) + 1 , 4 )"		5184847	0					
ANR	5184902	IdentifierDeclType	ut32 *		5184847	0					
ANR	5184903	Identifier	result		5184847	1					
ANR	5184904	AssignmentExpression	"* result = calloc ( strlen ( ( const char * ) input ) + 1 , 4 )"		5184847	2		=			
ANR	5184905	Identifier	result		5184847	0					
ANR	5184906	CallExpression	"calloc ( strlen ( ( const char * ) input ) + 1 , 4 )"		5184847	1					
ANR	5184907	Callee	calloc		5184847	0					
ANR	5184908	Identifier	calloc		5184847	0					
ANR	5184909	ArgumentList	strlen ( ( const char * ) input ) + 1		5184847	1					
ANR	5184910	Argument	strlen ( ( const char * ) input ) + 1		5184847	0					
ANR	5184911	AdditiveExpression	strlen ( ( const char * ) input ) + 1		5184847	0		+			
ANR	5184912	CallExpression	strlen ( ( const char * ) input )		5184847	0					
ANR	5184913	Callee	strlen		5184847	0					
ANR	5184914	Identifier	strlen		5184847	0					
ANR	5184915	ArgumentList	( const char * ) input		5184847	1					
ANR	5184916	Argument	( const char * ) input		5184847	0					
ANR	5184917	CastExpression	( const char * ) input		5184847	0					
ANR	5184918	CastTarget	const char *		5184847	0					
ANR	5184919	Identifier	input		5184847	1					
ANR	5184920	PrimaryExpression	1		5184847	1					
ANR	5184921	Argument	4		5184847	1					
ANR	5184922	PrimaryExpression	4		5184847	0					
ANR	5184923	IfStatement	if ( ! result )		5184847	6					
ANR	5184924	Condition	! result	79:5:1626:1632	5184847	0	True				
ANR	5184925	UnaryOperationExpression	! result		5184847	0					
ANR	5184926	UnaryOperator	!		5184847	0					
ANR	5184927	Identifier	result		5184847	1					
ANR	5184928	CompoundStatement		13:14:230:230	5184847	1					
ANR	5184929	ExpressionStatement	"eprintf ( ""ERROR: out of memory\\n"" )"	80:2:1639:1673	5184847	0	True				
ANR	5184930	CallExpression	"eprintf ( ""ERROR: out of memory\\n"" )"		5184847	0					
ANR	5184931	Callee	eprintf		5184847	0					
ANR	5184932	Identifier	eprintf		5184847	0					
ANR	5184933	ArgumentList	"""ERROR: out of memory\\n"""		5184847	1					
ANR	5184934	Argument	"""ERROR: out of memory\\n"""		5184847	0					
ANR	5184935	PrimaryExpression	"""ERROR: out of memory\\n"""		5184847	0					
ANR	5184936	ReturnStatement	return NULL ;	81:2:1677:1688	5184847	1	True				
ANR	5184937	Identifier	NULL		5184847	0					
ANR	5184938	WhileStatement	while ( i < len )		5184847	7					
ANR	5184939	Condition	i < len	84:8:1702:1708	5184847	0	True				
ANR	5184940	RelationalExpression	i < len		5184847	0		<			
ANR	5184941	Identifier	i		5184847	0					
ANR	5184942	Identifier	len		5184847	1					
ANR	5184943	CompoundStatement		18:17:306:306	5184847	1					
ANR	5184944	IfStatement	if ( input [ i ] >> 7 == 0 )		5184847	0					
ANR	5184945	Condition	input [ i ] >> 7 == 0	85:6:1719:1736	5184847	0	True				
ANR	5184946	EqualityExpression	input [ i ] >> 7 == 0		5184847	0		==			
ANR	5184947	ShiftExpression	input [ i ] >> 7		5184847	0		>>			
ANR	5184948	ArrayIndexing	input [ i ]		5184847	0					
ANR	5184949	Identifier	input		5184847	0					
ANR	5184950	Identifier	i		5184847	1					
ANR	5184951	PrimaryExpression	7		5184847	1					
ANR	5184952	PrimaryExpression	0		5184847	1					
ANR	5184953	CompoundStatement		19:26:334:334	5184847	1					
ANR	5184954	ExpressionStatement	val = input [ i ]	86:3:1744:1758	5184847	0	True				
ANR	5184955	AssignmentExpression	val = input [ i ]		5184847	0		=			
ANR	5184956	Identifier	val		5184847	0					
ANR	5184957	ArrayIndexing	input [ i ]		5184847	1					
ANR	5184958	Identifier	input		5184847	0					
ANR	5184959	Identifier	i		5184847	1					
ANR	5184960	ExpressionStatement	i += 1	87:3:1763:1769	5184847	1	True				
ANR	5184961	AssignmentExpression	i += 1		5184847	0		+=			
ANR	5184962	Identifier	i		5184847	0					
ANR	5184963	PrimaryExpression	1		5184847	1					
ANR	5184964	ElseStatement	else		5184847	0					
ANR	5184965	IfStatement	if ( input [ i ] >> 5 == 0x6 )		5184847	0					
ANR	5184966	Condition	input [ i ] >> 5 == 0x6	88:13:1784:1803	5184847	0	True				
ANR	5184967	EqualityExpression	input [ i ] >> 5 == 0x6		5184847	0		==			
ANR	5184968	ShiftExpression	input [ i ] >> 5		5184847	0		>>			
ANR	5184969	ArrayIndexing	input [ i ]		5184847	0					
ANR	5184970	Identifier	input		5184847	0					
ANR	5184971	Identifier	i		5184847	1					
ANR	5184972	PrimaryExpression	5		5184847	1					
ANR	5184973	PrimaryExpression	0x6		5184847	1					
ANR	5184974	CompoundStatement		22:35:401:401	5184847	1					
ANR	5184975	ExpressionStatement	val = ( ( ( input [ i ] & 0x1f ) << 6 ) & 0xfc0 ) | ( input [ i + 1 ] & 0x3f )	89:3:1811:1878	5184847	0	True				
ANR	5184976	AssignmentExpression	val = ( ( ( input [ i ] & 0x1f ) << 6 ) & 0xfc0 ) | ( input [ i + 1 ] & 0x3f )		5184847	0		=			
ANR	5184977	Identifier	val		5184847	0					
ANR	5184978	InclusiveOrExpression	( ( ( input [ i ] & 0x1f ) << 6 ) & 0xfc0 ) | ( input [ i + 1 ] & 0x3f )		5184847	1		|			
ANR	5184979	BitAndExpression	( ( input [ i ] & 0x1f ) << 6 ) & 0xfc0		5184847	0		&			
ANR	5184980	ShiftExpression	( input [ i ] & 0x1f ) << 6		5184847	0		<<			
ANR	5184981	BitAndExpression	input [ i ] & 0x1f		5184847	0		&			
ANR	5184982	ArrayIndexing	input [ i ]		5184847	0					
ANR	5184983	Identifier	input		5184847	0					
ANR	5184984	Identifier	i		5184847	1					
ANR	5184985	PrimaryExpression	0x1f		5184847	1					
ANR	5184986	PrimaryExpression	6		5184847	1					
ANR	5184987	PrimaryExpression	0xfc0		5184847	1					
ANR	5184988	BitAndExpression	input [ i + 1 ] & 0x3f		5184847	1		&			
ANR	5184989	ArrayIndexing	input [ i + 1 ]		5184847	0					
ANR	5184990	Identifier	input		5184847	0					
ANR	5184991	AdditiveExpression	i + 1		5184847	1		+			
ANR	5184992	Identifier	i		5184847	0					
ANR	5184993	PrimaryExpression	1		5184847	1					
ANR	5184994	PrimaryExpression	0x3f		5184847	1					
ANR	5184995	ExpressionStatement	i += 2	91:3:1883:1889	5184847	1	True				
ANR	5184996	AssignmentExpression	i += 2		5184847	0		+=			
ANR	5184997	Identifier	i		5184847	0					
ANR	5184998	PrimaryExpression	2		5184847	1					
ANR	5184999	ElseStatement	else		5184847	0					
ANR	5185000	IfStatement	if ( input [ i ] >> 4 == 0xe )		5184847	0					
ANR	5185001	Condition	input [ i ] >> 4 == 0xe	92:13:1904:1923	5184847	0	True				
ANR	5185002	EqualityExpression	input [ i ] >> 4 == 0xe		5184847	0		==			
ANR	5185003	ShiftExpression	input [ i ] >> 4		5184847	0		>>			
ANR	5185004	ArrayIndexing	input [ i ]		5184847	0					
ANR	5185005	Identifier	input		5184847	0					
ANR	5185006	Identifier	i		5184847	1					
ANR	5185007	PrimaryExpression	4		5184847	1					
ANR	5185008	PrimaryExpression	0xe		5184847	1					
ANR	5185009	CompoundStatement		26:35:521:521	5184847	1					
ANR	5185010	ExpressionStatement	val = ( ( ( input [ i ] & 0xf ) << 12 ) & 0xf000 ) | ( ( ( input [ i + 1 ] & 0x3f ) << 6 ) & 0xffc0 ) | ( input [ i + 2 ] & 0x3f )	93:3:1931:2044	5184847	0	True				
ANR	5185011	AssignmentExpression	val = ( ( ( input [ i ] & 0xf ) << 12 ) & 0xf000 ) | ( ( ( input [ i + 1 ] & 0x3f ) << 6 ) & 0xffc0 ) | ( input [ i + 2 ] & 0x3f )		5184847	0		=			
ANR	5185012	Identifier	val		5184847	0					
ANR	5185013	InclusiveOrExpression	( ( ( input [ i ] & 0xf ) << 12 ) & 0xf000 ) | ( ( ( input [ i + 1 ] & 0x3f ) << 6 ) & 0xffc0 ) | ( input [ i + 2 ] & 0x3f )		5184847	1		|			
ANR	5185014	BitAndExpression	( ( input [ i ] & 0xf ) << 12 ) & 0xf000		5184847	0		&			
ANR	5185015	ShiftExpression	( input [ i ] & 0xf ) << 12		5184847	0		<<			
ANR	5185016	BitAndExpression	input [ i ] & 0xf		5184847	0		&			
ANR	5185017	ArrayIndexing	input [ i ]		5184847	0					
ANR	5185018	Identifier	input		5184847	0					
ANR	5185019	Identifier	i		5184847	1					
ANR	5185020	PrimaryExpression	0xf		5184847	1					
ANR	5185021	PrimaryExpression	12		5184847	1					
ANR	5185022	PrimaryExpression	0xf000		5184847	1					
ANR	5185023	InclusiveOrExpression	( ( ( input [ i + 1 ] & 0x3f ) << 6 ) & 0xffc0 ) | ( input [ i + 2 ] & 0x3f )		5184847	1		|			
ANR	5185024	BitAndExpression	( ( input [ i + 1 ] & 0x3f ) << 6 ) & 0xffc0		5184847	0		&			
ANR	5185025	ShiftExpression	( input [ i + 1 ] & 0x3f ) << 6		5184847	0		<<			
ANR	5185026	BitAndExpression	input [ i + 1 ] & 0x3f		5184847	0		&			
ANR	5185027	ArrayIndexing	input [ i + 1 ]		5184847	0					
ANR	5185028	Identifier	input		5184847	0					
ANR	5185029	AdditiveExpression	i + 1		5184847	1		+			
ANR	5185030	Identifier	i		5184847	0					
ANR	5185031	PrimaryExpression	1		5184847	1					
ANR	5185032	PrimaryExpression	0x3f		5184847	1					
ANR	5185033	PrimaryExpression	6		5184847	1					
ANR	5185034	PrimaryExpression	0xffc0		5184847	1					
ANR	5185035	BitAndExpression	input [ i + 2 ] & 0x3f		5184847	1		&			
ANR	5185036	ArrayIndexing	input [ i + 2 ]		5184847	0					
ANR	5185037	Identifier	input		5184847	0					
ANR	5185038	AdditiveExpression	i + 2		5184847	1		+			
ANR	5185039	Identifier	i		5184847	0					
ANR	5185040	PrimaryExpression	2		5184847	1					
ANR	5185041	PrimaryExpression	0x3f		5184847	1					
ANR	5185042	ExpressionStatement	i += 3	96:3:2049:2055	5184847	1	True				
ANR	5185043	AssignmentExpression	i += 3		5184847	0		+=			
ANR	5185044	Identifier	i		5184847	0					
ANR	5185045	PrimaryExpression	3		5184847	1					
ANR	5185046	ElseStatement	else		5184847	0					
ANR	5185047	IfStatement	if ( input [ i ] >> 3 == 0x1e )		5184847	0					
ANR	5185048	Condition	input [ i ] >> 3 == 0x1e	97:13:2070:2090	5184847	0	True				
ANR	5185049	EqualityExpression	input [ i ] >> 3 == 0x1e		5184847	0		==			
ANR	5185050	ShiftExpression	input [ i ] >> 3		5184847	0		>>			
ANR	5185051	ArrayIndexing	input [ i ]		5184847	0					
ANR	5185052	Identifier	input		5184847	0					
ANR	5185053	Identifier	i		5184847	1					
ANR	5185054	PrimaryExpression	3		5184847	1					
ANR	5185055	PrimaryExpression	0x1e		5184847	1					
ANR	5185056	CompoundStatement		31:36:688:688	5184847	1					
ANR	5185057	ExpressionStatement	val = ( ( ( input [ i ] & 0xf ) << 18 ) & 0x1c0000 ) | ( ( ( input [ i + 1 ] & 0x3f ) << 12 ) & 0x1ff000 ) | ( ( ( input [ i + 2 ] & 0x3f ) << 6 ) & 0x1fffc0 ) | ( input [ i + 3 ] & 0x3f )	98:3:2098:2263	5184847	0	True				
ANR	5185058	AssignmentExpression	val = ( ( ( input [ i ] & 0xf ) << 18 ) & 0x1c0000 ) | ( ( ( input [ i + 1 ] & 0x3f ) << 12 ) & 0x1ff000 ) | ( ( ( input [ i + 2 ] & 0x3f ) << 6 ) & 0x1fffc0 ) | ( input [ i + 3 ] & 0x3f )		5184847	0		=			
ANR	5185059	Identifier	val		5184847	0					
ANR	5185060	InclusiveOrExpression	( ( ( input [ i ] & 0xf ) << 18 ) & 0x1c0000 ) | ( ( ( input [ i + 1 ] & 0x3f ) << 12 ) & 0x1ff000 ) | ( ( ( input [ i + 2 ] & 0x3f ) << 6 ) & 0x1fffc0 ) | ( input [ i + 3 ] & 0x3f )		5184847	1		|			
ANR	5185061	BitAndExpression	( ( input [ i ] & 0xf ) << 18 ) & 0x1c0000		5184847	0		&			
ANR	5185062	ShiftExpression	( input [ i ] & 0xf ) << 18		5184847	0		<<			
ANR	5185063	BitAndExpression	input [ i ] & 0xf		5184847	0		&			
ANR	5185064	ArrayIndexing	input [ i ]		5184847	0					
ANR	5185065	Identifier	input		5184847	0					
ANR	5185066	Identifier	i		5184847	1					
ANR	5185067	PrimaryExpression	0xf		5184847	1					
ANR	5185068	PrimaryExpression	18		5184847	1					
ANR	5185069	PrimaryExpression	0x1c0000		5184847	1					
ANR	5185070	InclusiveOrExpression	( ( ( input [ i + 1 ] & 0x3f ) << 12 ) & 0x1ff000 ) | ( ( ( input [ i + 2 ] & 0x3f ) << 6 ) & 0x1fffc0 ) | ( input [ i + 3 ] & 0x3f )		5184847	1		|			
ANR	5185071	BitAndExpression	( ( input [ i + 1 ] & 0x3f ) << 12 ) & 0x1ff000		5184847	0		&			
ANR	5185072	ShiftExpression	( input [ i + 1 ] & 0x3f ) << 12		5184847	0		<<			
ANR	5185073	BitAndExpression	input [ i + 1 ] & 0x3f		5184847	0		&			
ANR	5185074	ArrayIndexing	input [ i + 1 ]		5184847	0					
ANR	5185075	Identifier	input		5184847	0					
ANR	5185076	AdditiveExpression	i + 1		5184847	1		+			
ANR	5185077	Identifier	i		5184847	0					
ANR	5185078	PrimaryExpression	1		5184847	1					
ANR	5185079	PrimaryExpression	0x3f		5184847	1					
ANR	5185080	PrimaryExpression	12		5184847	1					
ANR	5185081	PrimaryExpression	0x1ff000		5184847	1					
ANR	5185082	InclusiveOrExpression	( ( ( input [ i + 2 ] & 0x3f ) << 6 ) & 0x1fffc0 ) | ( input [ i + 3 ] & 0x3f )		5184847	1		|			
ANR	5185083	BitAndExpression	( ( input [ i + 2 ] & 0x3f ) << 6 ) & 0x1fffc0		5184847	0		&			
ANR	5185084	ShiftExpression	( input [ i + 2 ] & 0x3f ) << 6		5184847	0		<<			
ANR	5185085	BitAndExpression	input [ i + 2 ] & 0x3f		5184847	0		&			
ANR	5185086	ArrayIndexing	input [ i + 2 ]		5184847	0					
ANR	5185087	Identifier	input		5184847	0					
ANR	5185088	AdditiveExpression	i + 2		5184847	1		+			
ANR	5185089	Identifier	i		5184847	0					
ANR	5185090	PrimaryExpression	2		5184847	1					
ANR	5185091	PrimaryExpression	0x3f		5184847	1					
ANR	5185092	PrimaryExpression	6		5184847	1					
ANR	5185093	PrimaryExpression	0x1fffc0		5184847	1					
ANR	5185094	BitAndExpression	input [ i + 3 ] & 0x3f		5184847	1		&			
ANR	5185095	ArrayIndexing	input [ i + 3 ]		5184847	0					
ANR	5185096	Identifier	input		5184847	0					
ANR	5185097	AdditiveExpression	i + 3		5184847	1		+			
ANR	5185098	Identifier	i		5184847	0					
ANR	5185099	PrimaryExpression	3		5184847	1					
ANR	5185100	PrimaryExpression	0x3f		5184847	1					
ANR	5185101	ExpressionStatement	i += 4	102:3:2268:2274	5184847	1	True				
ANR	5185102	AssignmentExpression	i += 4		5184847	0		+=			
ANR	5185103	Identifier	i		5184847	0					
ANR	5185104	PrimaryExpression	4		5184847	1					
ANR	5185105	ElseStatement	else		5184847	0					
ANR	5185106	CompoundStatement		37:9:880:880	5184847	0					
ANR	5185107	ExpressionStatement	"eprintf ( ""ERROR in toutf32. Seems like input is invalid.\\n"" )"	104:3:2290:2350	5184847	0	True				
ANR	5185108	CallExpression	"eprintf ( ""ERROR in toutf32. Seems like input is invalid.\\n"" )"		5184847	0					
ANR	5185109	Callee	eprintf		5184847	0					
ANR	5185110	Identifier	eprintf		5184847	0					
ANR	5185111	ArgumentList	"""ERROR in toutf32. Seems like input is invalid.\\n"""		5184847	1					
ANR	5185112	Argument	"""ERROR in toutf32. Seems like input is invalid.\\n"""		5184847	0					
ANR	5185113	PrimaryExpression	"""ERROR in toutf32. Seems like input is invalid.\\n"""		5184847	0					
ANR	5185114	ExpressionStatement	free ( result )	105:3:2355:2368	5184847	1	True				
ANR	5185115	CallExpression	free ( result )		5184847	0					
ANR	5185116	Callee	free		5184847	0					
ANR	5185117	Identifier	free		5184847	0					
ANR	5185118	ArgumentList	result		5184847	1					
ANR	5185119	Argument	result		5184847	0					
ANR	5185120	Identifier	result		5184847	0					
ANR	5185121	ReturnStatement	return NULL ;	106:3:2373:2384	5184847	2	True				
ANR	5185122	Identifier	NULL		5184847	0					
ANR	5185123	ExpressionStatement	result [ j ] = val	108:2:2392:2407	5184847	1	True				
ANR	5185124	AssignmentExpression	result [ j ] = val		5184847	0		=			
ANR	5185125	ArrayIndexing	result [ j ]		5184847	0					
ANR	5185126	Identifier	result		5184847	0					
ANR	5185127	Identifier	j		5184847	1					
ANR	5185128	Identifier	val		5184847	1					
ANR	5185129	ExpressionStatement	j ++	109:2:2411:2414	5184847	2	True				
ANR	5185130	PostIncDecOperationExpression	j ++		5184847	0					
ANR	5185131	Identifier	j		5184847	0					
ANR	5185132	IncDec	++		5184847	1					
ANR	5185133	ReturnStatement	return result ;	112:1:2421:2434	5184847	8	True				
ANR	5185134	Identifier	result		5184847	0					
ANR	5185135	ReturnType	ut32 *		5184847	1					
ANR	5185136	Identifier	utf8toutf32		5184847	2					
ANR	5185137	ParameterList	const ut8 * input		5184847	3					
ANR	5185138	Parameter	const ut8 * input	67:19:1386:1401	5184847	0	True				
ANR	5185139	ParameterType	const ut8 *		5184847	0					
ANR	5185140	Identifier	input		5184847	1					
ANR	5185141	CFGEntryNode	ENTRY		5184847		True				
ANR	5185142	CFGExitNode	EXIT		5184847		True				
ANR	5185143	Symbol	val		5184847						
ANR	5185144	Symbol	NULL		5184847						
ANR	5185145	Symbol	* input		5184847						
ANR	5185146	Symbol	i		5184847						
ANR	5185147	Symbol	j		5184847						
ANR	5185148	Symbol	calloc		5184847						
ANR	5185149	Symbol	result		5184847						
ANR	5185150	Symbol	input		5184847						
ANR	5185151	Symbol	strlen		5184847						
ANR	5185152	Symbol	* i		5184847						
ANR	5185153	Symbol	len		5184847						
ANR	5185154	Symbol	* j		5184847						
ANR	5185155	Symbol	* result		5184847						
ANR	5185156	Function	adapt_bias	116:0:2440:2723							
ANR	5185157	FunctionDef	"adapt_bias (ut32 delta , unsigned n_points , int is_first)"		5185156	0					
ANR	5185158	CompoundStatement		116:61:2501:2723	5185156	0					
ANR	5185159	IdentifierDeclStatement	ut32 k = 0 ;	117:1:2504:2514	5185156	0	True				
ANR	5185160	IdentifierDecl	k = 0		5185156	0					
ANR	5185161	IdentifierDeclType	ut32		5185156	0					
ANR	5185162	Identifier	k		5185156	1					
ANR	5185163	AssignmentExpression	k = 0		5185156	2		=			
ANR	5185164	Identifier	k		5185156	0					
ANR	5185165	PrimaryExpression	0		5185156	1					
ANR	5185166	ExpressionStatement	delta /= is_first ? DAMP : 2	118:1:2517:2543	5185156	1	True				
ANR	5185167	AssignmentExpression	delta /= is_first ? DAMP : 2		5185156	0		/=			
ANR	5185168	Identifier	delta		5185156	0					
ANR	5185169	ConditionalExpression	is_first ? DAMP : 2		5185156	1					
ANR	5185170	Condition	is_first		5185156	0					
ANR	5185171	Identifier	is_first		5185156	0					
ANR	5185172	Identifier	DAMP		5185156	1					
ANR	5185173	PrimaryExpression	2		5185156	2					
ANR	5185174	ExpressionStatement	delta += delta / n_points	119:1:2546:2571	5185156	2	True				
ANR	5185175	AssignmentExpression	delta += delta / n_points		5185156	0		+=			
ANR	5185176	Identifier	delta		5185156	0					
ANR	5185177	MultiplicativeExpression	delta / n_points		5185156	1		/			
ANR	5185178	Identifier	delta		5185156	0					
ANR	5185179	Identifier	n_points		5185156	1					
ANR	5185180	WhileStatement	while ( delta > ( ( BASE - TMIN ) * TMAX ) / 2 )		5185156	3					
ANR	5185181	Condition	delta > ( ( BASE - TMIN ) * TMAX ) / 2	121:8:2582:2615	5185156	0	True				
ANR	5185182	RelationalExpression	delta > ( ( BASE - TMIN ) * TMAX ) / 2		5185156	0		>			
ANR	5185183	Identifier	delta		5185156	0					
ANR	5185184	MultiplicativeExpression	( ( BASE - TMIN ) * TMAX ) / 2		5185156	1		/			
ANR	5185185	MultiplicativeExpression	( BASE - TMIN ) * TMAX		5185156	0		*			
ANR	5185186	AdditiveExpression	BASE - TMIN		5185156	0		-			
ANR	5185187	Identifier	BASE		5185156	0					
ANR	5185188	Identifier	TMIN		5185156	1					
ANR	5185189	Identifier	TMAX		5185156	1					
ANR	5185190	PrimaryExpression	2		5185156	1					
ANR	5185191	CompoundStatement		6:44:116:116	5185156	1					
ANR	5185192	ExpressionStatement	delta /= ( BASE - TMIN )	122:2:2622:2644	5185156	0	True				
ANR	5185193	AssignmentExpression	delta /= ( BASE - TMIN )		5185156	0		/=			
ANR	5185194	Identifier	delta		5185156	0					
ANR	5185195	AdditiveExpression	BASE - TMIN		5185156	1		-			
ANR	5185196	Identifier	BASE		5185156	0					
ANR	5185197	Identifier	TMIN		5185156	1					
ANR	5185198	ExpressionStatement	k += BASE	123:2:2648:2657	5185156	1	True				
ANR	5185199	AssignmentExpression	k += BASE		5185156	0		+=			
ANR	5185200	Identifier	k		5185156	0					
ANR	5185201	Identifier	BASE		5185156	1					
ANR	5185202	ReturnStatement	return k + ( ( ( BASE - TMIN + 1 ) * delta ) / ( delta + SKEW ) ) ;	126:1:2664:2721	5185156	4	True				
ANR	5185203	AdditiveExpression	k + ( ( ( BASE - TMIN + 1 ) * delta ) / ( delta + SKEW ) )		5185156	0		+			
ANR	5185204	Identifier	k		5185156	0					
ANR	5185205	MultiplicativeExpression	( ( BASE - TMIN + 1 ) * delta ) / ( delta + SKEW )		5185156	1		/			
ANR	5185206	MultiplicativeExpression	( BASE - TMIN + 1 ) * delta		5185156	0		*			
ANR	5185207	AdditiveExpression	BASE - TMIN + 1		5185156	0		-			
ANR	5185208	Identifier	BASE		5185156	0					
ANR	5185209	AdditiveExpression	TMIN + 1		5185156	1		+			
ANR	5185210	Identifier	TMIN		5185156	0					
ANR	5185211	PrimaryExpression	1		5185156	1					
ANR	5185212	Identifier	delta		5185156	1					
ANR	5185213	AdditiveExpression	delta + SKEW		5185156	1		+			
ANR	5185214	Identifier	delta		5185156	0					
ANR	5185215	Identifier	SKEW		5185156	1					
ANR	5185216	ReturnType	ut32		5185156	1					
ANR	5185217	Identifier	adapt_bias		5185156	2					
ANR	5185218	ParameterList	"ut32 delta , unsigned n_points , int is_first"		5185156	3					
ANR	5185219	Parameter	ut32 delta	116:16:2456:2465	5185156	0	True				
ANR	5185220	ParameterType	ut32		5185156	0					
ANR	5185221	Identifier	delta		5185156	1					
ANR	5185222	Parameter	unsigned n_points	116:28:2468:2484	5185156	1	True				
ANR	5185223	ParameterType	unsigned		5185156	0					
ANR	5185224	Identifier	n_points		5185156	1					
ANR	5185225	Parameter	int is_first	116:47:2487:2498	5185156	2	True				
ANR	5185226	ParameterType	int		5185156	0					
ANR	5185227	Identifier	is_first		5185156	1					
ANR	5185228	CFGEntryNode	ENTRY		5185156		True				
ANR	5185229	CFGExitNode	EXIT		5185156		True				
ANR	5185230	Symbol	TMAX		5185156						
ANR	5185231	Symbol	delta		5185156						
ANR	5185232	Symbol	is_first		5185156						
ANR	5185233	Symbol	n_points		5185156						
ANR	5185234	Symbol	TMIN		5185156						
ANR	5185235	Symbol	k		5185156						
ANR	5185236	Symbol	SKEW		5185156						
ANR	5185237	Symbol	DAMP		5185156						
ANR	5185238	Symbol	BASE		5185156						
ANR	5185239	Function	encode_digit	129:0:2726:2845							
ANR	5185240	FunctionDef	encode_digit (int c)		5185239	0					
ANR	5185241	CompoundStatement		129:25:2751:2845	5185239	0					
ANR	5185242	IfStatement	if ( c > 25 )		5185239	0					
ANR	5185243	Condition	c > 25	131:5:2798:2803	5185239	0	True				
ANR	5185244	RelationalExpression	c > 25		5185239	0		>			
ANR	5185245	Identifier	c		5185239	0					
ANR	5185246	PrimaryExpression	25		5185239	1					
ANR	5185247	CompoundStatement		3:13:54:54	5185239	1					
ANR	5185248	ReturnStatement	return c + 22 ;	132:2:2810:2823	5185239	0	True				
ANR	5185249	AdditiveExpression	c + 22		5185239	0		+			
ANR	5185250	Identifier	c		5185239	0					
ANR	5185251	PrimaryExpression	22		5185239	1					
ANR	5185252	ReturnStatement	return c + 'a' ;	134:1:2829:2843	5185239	1	True				
ANR	5185253	AdditiveExpression	c + 'a'		5185239	0		+			
ANR	5185254	Identifier	c		5185239	0					
ANR	5185255	PrimaryExpression	'a'		5185239	1					
ANR	5185256	ReturnType	char		5185239	1					
ANR	5185257	Identifier	encode_digit		5185239	2					
ANR	5185258	ParameterList	int c		5185239	3					
ANR	5185259	Parameter	int c	129:18:2744:2748	5185239	0	True				
ANR	5185260	ParameterType	int		5185239	0					
ANR	5185261	Identifier	c		5185239	1					
ANR	5185262	CFGEntryNode	ENTRY		5185239		True				
ANR	5185263	CFGExitNode	EXIT		5185239		True				
ANR	5185264	Symbol	c		5185239						
ANR	5185265	Function	encode_var_int	137:0:2848:3272							
ANR	5185266	FunctionDef	"encode_var_int (const ut32 bias , const ut32 delta , char * dst)"		5185265	0					
ANR	5185267	CompoundStatement		137:73:2921:3272	5185265	0					
ANR	5185268	IdentifierDeclStatement	"ut32 i , k , q , t ;"	138:1:2924:2939	5185265	0	True				
ANR	5185269	IdentifierDecl	i		5185265	0					
ANR	5185270	IdentifierDeclType	ut32		5185265	0					
ANR	5185271	Identifier	i		5185265	1					
ANR	5185272	IdentifierDecl	k		5185265	1					
ANR	5185273	IdentifierDeclType	ut32		5185265	0					
ANR	5185274	Identifier	k		5185265	1					
ANR	5185275	IdentifierDecl	q		5185265	2					
ANR	5185276	IdentifierDeclType	ut32		5185265	0					
ANR	5185277	Identifier	q		5185265	1					
ANR	5185278	IdentifierDecl	t		5185265	3					
ANR	5185279	IdentifierDeclType	ut32		5185265	0					
ANR	5185280	Identifier	t		5185265	1					
ANR	5185281	ExpressionStatement	i = 0	139:1:2942:2947	5185265	1	True				
ANR	5185282	AssignmentExpression	i = 0		5185265	0		=			
ANR	5185283	Identifier	i		5185265	0					
ANR	5185284	PrimaryExpression	0		5185265	1					
ANR	5185285	ExpressionStatement	k = BASE	140:1:2950:2958	5185265	2	True				
ANR	5185286	AssignmentExpression	k = BASE		5185265	0		=			
ANR	5185287	Identifier	k		5185265	0					
ANR	5185288	Identifier	BASE		5185265	1					
ANR	5185289	ExpressionStatement	q = delta	141:1:2961:2970	5185265	3	True				
ANR	5185290	AssignmentExpression	q = delta		5185265	0		=			
ANR	5185291	Identifier	q		5185265	0					
ANR	5185292	Identifier	delta		5185265	1					
ANR	5185293	WhileStatement	while ( true )		5185265	4					
ANR	5185294	Condition	true	143:8:2981:2984	5185265	0	True				
ANR	5185295	Identifier	true		5185265	0					
ANR	5185296	CompoundStatement		7:14:65:65	5185265	1					
ANR	5185297	IfStatement	if ( k <= bias )		5185265	0					
ANR	5185298	Condition	k <= bias	144:6:2995:3003	5185265	0	True				
ANR	5185299	RelationalExpression	k <= bias		5185265	0		<=			
ANR	5185300	Identifier	k		5185265	0					
ANR	5185301	Identifier	bias		5185265	1					
ANR	5185302	CompoundStatement		8:17:84:84	5185265	1					
ANR	5185303	ExpressionStatement	t = TMIN	145:3:3011:3019	5185265	0	True				
ANR	5185304	AssignmentExpression	t = TMIN		5185265	0		=			
ANR	5185305	Identifier	t		5185265	0					
ANR	5185306	Identifier	TMIN		5185265	1					
ANR	5185307	ElseStatement	else		5185265	0					
ANR	5185308	IfStatement	if ( k >= bias + TMAX )		5185265	0					
ANR	5185309	Condition	k >= bias + TMAX	146:13:3034:3049	5185265	0	True				
ANR	5185310	RelationalExpression	k >= bias + TMAX		5185265	0		>=			
ANR	5185311	Identifier	k		5185265	0					
ANR	5185312	AdditiveExpression	bias + TMAX		5185265	1		+			
ANR	5185313	Identifier	bias		5185265	0					
ANR	5185314	Identifier	TMAX		5185265	1					
ANR	5185315	CompoundStatement		10:31:130:130	5185265	1					
ANR	5185316	ExpressionStatement	t = TMAX	147:3:3057:3065	5185265	0	True				
ANR	5185317	AssignmentExpression	t = TMAX		5185265	0		=			
ANR	5185318	Identifier	t		5185265	0					
ANR	5185319	Identifier	TMAX		5185265	1					
ANR	5185320	ElseStatement	else		5185265	0					
ANR	5185321	CompoundStatement		12:9:154:154	5185265	0					
ANR	5185322	ExpressionStatement	t = k - bias	149:3:3081:3093	5185265	0	True				
ANR	5185323	AssignmentExpression	t = k - bias		5185265	0		=			
ANR	5185324	Identifier	t		5185265	0					
ANR	5185325	AdditiveExpression	k - bias		5185265	1		-			
ANR	5185326	Identifier	k		5185265	0					
ANR	5185327	Identifier	bias		5185265	1					
ANR	5185328	IfStatement	if ( q < t )		5185265	1					
ANR	5185329	Condition	q < t	152:6:3106:3110	5185265	0	True				
ANR	5185330	RelationalExpression	q < t		5185265	0		<			
ANR	5185331	Identifier	q		5185265	0					
ANR	5185332	Identifier	t		5185265	1					
ANR	5185333	CompoundStatement		16:13:191:191	5185265	1					
ANR	5185334	BreakStatement	break ;	153:3:3118:3123	5185265	0	True				
ANR	5185335	ExpressionStatement	dst [ i ++ ] = encode_digit ( t + ( q - t ) % ( BASE - t ) )	156:2:3132:3182	5185265	2	True				
ANR	5185336	AssignmentExpression	dst [ i ++ ] = encode_digit ( t + ( q - t ) % ( BASE - t ) )		5185265	0		=			
ANR	5185337	ArrayIndexing	dst [ i ++ ]		5185265	0					
ANR	5185338	Identifier	dst		5185265	0					
ANR	5185339	PostIncDecOperationExpression	i ++		5185265	1					
ANR	5185340	Identifier	i		5185265	0					
ANR	5185341	IncDec	++		5185265	1					
ANR	5185342	CallExpression	encode_digit ( t + ( q - t ) % ( BASE - t ) )		5185265	1					
ANR	5185343	Callee	encode_digit		5185265	0					
ANR	5185344	Identifier	encode_digit		5185265	0					
ANR	5185345	ArgumentList	t + ( q - t ) % ( BASE - t )		5185265	1					
ANR	5185346	Argument	t + ( q - t ) % ( BASE - t )		5185265	0					
ANR	5185347	AdditiveExpression	t + ( q - t ) % ( BASE - t )		5185265	0		+			
ANR	5185348	Identifier	t		5185265	0					
ANR	5185349	MultiplicativeExpression	( q - t ) % ( BASE - t )		5185265	1		%			
ANR	5185350	AdditiveExpression	q - t		5185265	0		-			
ANR	5185351	Identifier	q		5185265	0					
ANR	5185352	Identifier	t		5185265	1					
ANR	5185353	AdditiveExpression	BASE - t		5185265	1		-			
ANR	5185354	Identifier	BASE		5185265	0					
ANR	5185355	Identifier	t		5185265	1					
ANR	5185356	ExpressionStatement	q = ( q - t ) / ( BASE - t )	158:2:3187:3211	5185265	3	True				
ANR	5185357	AssignmentExpression	q = ( q - t ) / ( BASE - t )		5185265	0		=			
ANR	5185358	Identifier	q		5185265	0					
ANR	5185359	MultiplicativeExpression	( q - t ) / ( BASE - t )		5185265	1		/			
ANR	5185360	AdditiveExpression	q - t		5185265	0		-			
ANR	5185361	Identifier	q		5185265	0					
ANR	5185362	Identifier	t		5185265	1					
ANR	5185363	AdditiveExpression	BASE - t		5185265	1		-			
ANR	5185364	Identifier	BASE		5185265	0					
ANR	5185365	Identifier	t		5185265	1					
ANR	5185366	ExpressionStatement	k += BASE	159:2:3215:3224	5185265	4	True				
ANR	5185367	AssignmentExpression	k += BASE		5185265	0		+=			
ANR	5185368	Identifier	k		5185265	0					
ANR	5185369	Identifier	BASE		5185265	1					
ANR	5185370	ExpressionStatement	dst [ i ++ ] = encode_digit ( q )	162:1:3231:3258	5185265	5	True				
ANR	5185371	AssignmentExpression	dst [ i ++ ] = encode_digit ( q )		5185265	0		=			
ANR	5185372	ArrayIndexing	dst [ i ++ ]		5185265	0					
ANR	5185373	Identifier	dst		5185265	0					
ANR	5185374	PostIncDecOperationExpression	i ++		5185265	1					
ANR	5185375	Identifier	i		5185265	0					
ANR	5185376	IncDec	++		5185265	1					
ANR	5185377	CallExpression	encode_digit ( q )		5185265	1					
ANR	5185378	Callee	encode_digit		5185265	0					
ANR	5185379	Identifier	encode_digit		5185265	0					
ANR	5185380	ArgumentList	q		5185265	1					
ANR	5185381	Argument	q		5185265	0					
ANR	5185382	Identifier	q		5185265	0					
ANR	5185383	ReturnStatement	return i ;	164:1:3262:3270	5185265	6	True				
ANR	5185384	Identifier	i		5185265	0					
ANR	5185385	ReturnType	static ut32		5185265	1					
ANR	5185386	Identifier	encode_var_int		5185265	2					
ANR	5185387	ParameterList	"const ut32 bias , const ut32 delta , char * dst"		5185265	3					
ANR	5185388	Parameter	const ut32 bias	137:27:2875:2889	5185265	0	True				
ANR	5185389	ParameterType	const ut32		5185265	0					
ANR	5185390	Identifier	bias		5185265	1					
ANR	5185391	Parameter	const ut32 delta	137:44:2892:2907	5185265	1	True				
ANR	5185392	ParameterType	const ut32		5185265	0					
ANR	5185393	Identifier	delta		5185265	1					
ANR	5185394	Parameter	char * dst	137:62:2910:2918	5185265	2	True				
ANR	5185395	ParameterType	char *		5185265	0					
ANR	5185396	Identifier	dst		5185265	1					
ANR	5185397	CFGEntryNode	ENTRY		5185265		True				
ANR	5185398	CFGExitNode	EXIT		5185265		True				
ANR	5185399	Symbol	encode_digit		5185265						
ANR	5185400	Symbol	dst		5185265						
ANR	5185401	Symbol	delta		5185265						
ANR	5185402	Symbol	i		5185265						
ANR	5185403	Symbol	k		5185265						
ANR	5185404	Symbol	BASE		5185265						
ANR	5185405	Symbol	* dst		5185265						
ANR	5185406	Symbol	q		5185265						
ANR	5185407	Symbol	t		5185265						
ANR	5185408	Symbol	bias		5185265						
ANR	5185409	Symbol	TMAX		5185265						
ANR	5185410	Symbol	true		5185265						
ANR	5185411	Symbol	TMIN		5185265						
ANR	5185412	Function	decode_digit	167:0:3275:3469							
ANR	5185413	FunctionDef	decode_digit (ut32 v)		5185412	0					
ANR	5185414	CompoundStatement		167:33:3308:3469	5185412	0					
ANR	5185415	IfStatement	if ( IS_DIGIT ( v ) )		5185412	0					
ANR	5185416	Condition	IS_DIGIT ( v )	168:5:3315:3326	5185412	0	True				
ANR	5185417	CallExpression	IS_DIGIT ( v )		5185412	0					
ANR	5185418	Callee	IS_DIGIT		5185412	0					
ANR	5185419	Identifier	IS_DIGIT		5185412	0					
ANR	5185420	ArgumentList	v		5185412	1					
ANR	5185421	Argument	v		5185412	0					
ANR	5185422	Identifier	v		5185412	0					
ANR	5185423	CompoundStatement		2:19:20:20	5185412	1					
ANR	5185424	ReturnStatement	return v - 22 ;	169:2:3333:3346	5185412	0	True				
ANR	5185425	AdditiveExpression	v - 22		5185412	0		-			
ANR	5185426	Identifier	v		5185412	0					
ANR	5185427	PrimaryExpression	22		5185412	1					
ANR	5185428	IfStatement	if ( v >= 'a' && v <= 'z' )		5185412	1					
ANR	5185429	Condition	v >= 'a' && v <= 'z'	171:5:3356:3375	5185412	0	True				
ANR	5185430	AndExpression	v >= 'a' && v <= 'z'		5185412	0		&&			
ANR	5185431	RelationalExpression	v >= 'a'		5185412	0		>=			
ANR	5185432	Identifier	v		5185412	0					
ANR	5185433	PrimaryExpression	'a'		5185412	1					
ANR	5185434	RelationalExpression	v <= 'z'		5185412	1		<=			
ANR	5185435	Identifier	v		5185412	0					
ANR	5185436	PrimaryExpression	'z'		5185412	1					
ANR	5185437	CompoundStatement		5:27:69:69	5185412	1					
ANR	5185438	ReturnStatement	return v - 'a' ;	172:2:3382:3396	5185412	0	True				
ANR	5185439	AdditiveExpression	v - 'a'		5185412	0		-			
ANR	5185440	Identifier	v		5185412	0					
ANR	5185441	PrimaryExpression	'a'		5185412	1					
ANR	5185442	IfStatement	if ( v >= 'A' && v <= 'Z' )		5185412	2					
ANR	5185443	Condition	v >= 'A' && v <= 'Z'	174:5:3406:3425	5185412	0	True				
ANR	5185444	AndExpression	v >= 'A' && v <= 'Z'		5185412	0		&&			
ANR	5185445	RelationalExpression	v >= 'A'		5185412	0		>=			
ANR	5185446	Identifier	v		5185412	0					
ANR	5185447	PrimaryExpression	'A'		5185412	1					
ANR	5185448	RelationalExpression	v <= 'Z'		5185412	1		<=			
ANR	5185449	Identifier	v		5185412	0					
ANR	5185450	PrimaryExpression	'Z'		5185412	1					
ANR	5185451	CompoundStatement		8:27:119:119	5185412	1					
ANR	5185452	ReturnStatement	return v - 'A' ;	175:2:3432:3446	5185412	0	True				
ANR	5185453	AdditiveExpression	v - 'A'		5185412	0		-			
ANR	5185454	Identifier	v		5185412	0					
ANR	5185455	PrimaryExpression	'A'		5185412	1					
ANR	5185456	ReturnStatement	return UT32_MAX ;	177:1:3452:3467	5185412	3	True				
ANR	5185457	Identifier	UT32_MAX		5185412	0					
ANR	5185458	ReturnType	static ut32		5185412	1					
ANR	5185459	Identifier	decode_digit		5185412	2					
ANR	5185460	ParameterList	ut32 v		5185412	3					
ANR	5185461	Parameter	ut32 v	167:25:3300:3305	5185412	0	True				
ANR	5185462	ParameterType	ut32		5185412	0					
ANR	5185463	Identifier	v		5185412	1					
ANR	5185464	CFGEntryNode	ENTRY		5185412		True				
ANR	5185465	CFGExitNode	EXIT		5185412		True				
ANR	5185466	Symbol	UT32_MAX		5185412						
ANR	5185467	Symbol	v		5185412						
ANR	5185468	Symbol	IS_DIGIT		5185412						
ANR	5185469	Function	r_punycode_encode	180:0:3472:4787							
ANR	5185470	FunctionDef	"r_punycode_encode (const ut8 * src , int srclen , int * dstlen)"		5185469	0					
ANR	5185471	CompoundStatement		180:71:3543:4787	5185469	0					
ANR	5185472	IdentifierDeclStatement	"ut32 m , n ;"	181:1:3546:3555	5185469	0	True				
ANR	5185473	IdentifierDecl	m		5185469	0					
ANR	5185474	IdentifierDeclType	ut32		5185469	0					
ANR	5185475	Identifier	m		5185469	1					
ANR	5185476	IdentifierDecl	n		5185469	1					
ANR	5185477	IdentifierDeclType	ut32		5185469	0					
ANR	5185478	Identifier	n		5185469	1					
ANR	5185479	IdentifierDeclStatement	"ut32 b , h ;"	182:1:3558:3567	5185469	1	True				
ANR	5185480	IdentifierDecl	b		5185469	0					
ANR	5185481	IdentifierDeclType	ut32		5185469	0					
ANR	5185482	Identifier	b		5185469	1					
ANR	5185483	IdentifierDecl	h		5185469	1					
ANR	5185484	IdentifierDeclType	ut32		5185469	0					
ANR	5185485	Identifier	h		5185469	1					
ANR	5185486	IdentifierDeclStatement	"ut32 si , di ;"	183:1:3570:3581	5185469	2	True				
ANR	5185487	IdentifierDecl	si		5185469	0					
ANR	5185488	IdentifierDeclType	ut32		5185469	0					
ANR	5185489	Identifier	si		5185469	1					
ANR	5185490	IdentifierDecl	di		5185469	1					
ANR	5185491	IdentifierDeclType	ut32		5185469	0					
ANR	5185492	Identifier	di		5185469	1					
ANR	5185493	IdentifierDeclStatement	"ut32 delta , bias ;"	184:1:3584:3600	5185469	3	True				
ANR	5185494	IdentifierDecl	delta		5185469	0					
ANR	5185495	IdentifierDeclType	ut32		5185469	0					
ANR	5185496	Identifier	delta		5185469	1					
ANR	5185497	IdentifierDecl	bias		5185469	1					
ANR	5185498	IdentifierDeclType	ut32		5185469	0					
ANR	5185499	Identifier	bias		5185469	1					
ANR	5185500	IdentifierDeclStatement	ut32 * actualsrc = NULL ;	185:1:3603:3625	5185469	4	True				
ANR	5185501	IdentifierDecl	* actualsrc = NULL		5185469	0					
ANR	5185502	IdentifierDeclType	ut32 *		5185469	0					
ANR	5185503	Identifier	actualsrc		5185469	1					
ANR	5185504	AssignmentExpression	* actualsrc = NULL		5185469	2		=			
ANR	5185505	Identifier	NULL		5185469	0					
ANR	5185506	Identifier	NULL		5185469	1					
ANR	5185507	IdentifierDeclStatement	ut32 len = 0 ;	186:1:3628:3640	5185469	5	True				
ANR	5185508	IdentifierDecl	len = 0		5185469	0					
ANR	5185509	IdentifierDeclType	ut32		5185469	0					
ANR	5185510	Identifier	len		5185469	1					
ANR	5185511	AssignmentExpression	len = 0		5185469	2		=			
ANR	5185512	Identifier	len		5185469	0					
ANR	5185513	PrimaryExpression	0		5185469	1					
ANR	5185514	IdentifierDeclStatement	char * dst = NULL ;	187:1:3643:3659	5185469	6	True				
ANR	5185515	IdentifierDecl	* dst = NULL		5185469	0					
ANR	5185516	IdentifierDeclType	char *		5185469	0					
ANR	5185517	Identifier	dst		5185469	1					
ANR	5185518	AssignmentExpression	* dst = NULL		5185469	2		=			
ANR	5185519	Identifier	NULL		5185469	0					
ANR	5185520	Identifier	NULL		5185469	1					
ANR	5185521	ExpressionStatement	* dstlen = 0	189:1:3663:3674	5185469	7	True				
ANR	5185522	AssignmentExpression	* dstlen = 0		5185469	0		=			
ANR	5185523	UnaryOperationExpression	* dstlen		5185469	0					
ANR	5185524	UnaryOperator	*		5185469	0					
ANR	5185525	Identifier	dstlen		5185469	1					
ANR	5185526	PrimaryExpression	0		5185469	1					
ANR	5185527	IfStatement	if ( ! src || srclen < 1 )		5185469	8					
ANR	5185528	Condition	! src || srclen < 1	191:5:3682:3699	5185469	0	True				
ANR	5185529	OrExpression	! src || srclen < 1		5185469	0		||			
ANR	5185530	UnaryOperationExpression	! src		5185469	0					
ANR	5185531	UnaryOperator	!		5185469	0					
ANR	5185532	Identifier	src		5185469	1					
ANR	5185533	RelationalExpression	srclen < 1		5185469	1		<			
ANR	5185534	Identifier	srclen		5185469	0					
ANR	5185535	PrimaryExpression	1		5185469	1					
ANR	5185536	CompoundStatement		12:25:158:158	5185469	1					
ANR	5185537	ReturnStatement	return NULL ;	192:2:3706:3717	5185469	0	True				
ANR	5185538	Identifier	NULL		5185469	0					
ANR	5185539	ExpressionStatement	actualsrc = utf8toutf32 ( src )	195:1:3724:3753	5185469	9	True				
ANR	5185540	AssignmentExpression	actualsrc = utf8toutf32 ( src )		5185469	0		=			
ANR	5185541	Identifier	actualsrc		5185469	0					
ANR	5185542	CallExpression	utf8toutf32 ( src )		5185469	1					
ANR	5185543	Callee	utf8toutf32		5185469	0					
ANR	5185544	Identifier	utf8toutf32		5185469	0					
ANR	5185545	ArgumentList	src		5185469	1					
ANR	5185546	Argument	src		5185469	0					
ANR	5185547	Identifier	src		5185469	0					
ANR	5185548	IfStatement	if ( ! actualsrc )		5185469	10					
ANR	5185549	Condition	! actualsrc	196:5:3760:3769	5185469	0	True				
ANR	5185550	UnaryOperationExpression	! actualsrc		5185469	0					
ANR	5185551	UnaryOperator	!		5185469	0					
ANR	5185552	Identifier	actualsrc		5185469	1					
ANR	5185553	CompoundStatement		17:17:228:228	5185469	1					
ANR	5185554	ReturnStatement	return NULL ;	197:2:3776:3787	5185469	0	True				
ANR	5185555	Identifier	NULL		5185469	0					
ANR	5185556	ExpressionStatement	len = utf32len ( actualsrc )	200:1:3794:3820	5185469	11	True				
ANR	5185557	AssignmentExpression	len = utf32len ( actualsrc )		5185469	0		=			
ANR	5185558	Identifier	len		5185469	0					
ANR	5185559	CallExpression	utf32len ( actualsrc )		5185469	1					
ANR	5185560	Callee	utf32len		5185469	0					
ANR	5185561	Identifier	utf32len		5185469	0					
ANR	5185562	ArgumentList	actualsrc		5185469	1					
ANR	5185563	Argument	actualsrc		5185469	0					
ANR	5185564	Identifier	actualsrc		5185469	0					
ANR	5185565	ExpressionStatement	"dst = calloc ( 2 * len + 10 , 1 )"	202:1:3824:3854	5185469	12	True				
ANR	5185566	AssignmentExpression	"dst = calloc ( 2 * len + 10 , 1 )"		5185469	0		=			
ANR	5185567	Identifier	dst		5185469	0					
ANR	5185568	CallExpression	"calloc ( 2 * len + 10 , 1 )"		5185469	1					
ANR	5185569	Callee	calloc		5185469	0					
ANR	5185570	Identifier	calloc		5185469	0					
ANR	5185571	ArgumentList	2 * len + 10		5185469	1					
ANR	5185572	Argument	2 * len + 10		5185469	0					
ANR	5185573	AdditiveExpression	2 * len + 10		5185469	0		+			
ANR	5185574	MultiplicativeExpression	2 * len		5185469	0		*			
ANR	5185575	PrimaryExpression	2		5185469	0					
ANR	5185576	Identifier	len		5185469	1					
ANR	5185577	PrimaryExpression	10		5185469	1					
ANR	5185578	Argument	1		5185469	1					
ANR	5185579	PrimaryExpression	1		5185469	0					
ANR	5185580	IfStatement	if ( ! dst )		5185469	13					
ANR	5185581	Condition	! dst	203:5:3861:3864	5185469	0	True				
ANR	5185582	UnaryOperationExpression	! dst		5185469	0					
ANR	5185583	UnaryOperator	!		5185469	0					
ANR	5185584	Identifier	dst		5185469	1					
ANR	5185585	CompoundStatement		24:11:323:323	5185469	1					
ANR	5185586	ExpressionStatement	free ( actualsrc )	204:2:3871:3887	5185469	0	True				
ANR	5185587	CallExpression	free ( actualsrc )		5185469	0					
ANR	5185588	Callee	free		5185469	0					
ANR	5185589	Identifier	free		5185469	0					
ANR	5185590	ArgumentList	actualsrc		5185469	1					
ANR	5185591	Argument	actualsrc		5185469	0					
ANR	5185592	Identifier	actualsrc		5185469	0					
ANR	5185593	ReturnStatement	return NULL ;	205:2:3891:3902	5185469	1	True				
ANR	5185594	Identifier	NULL		5185469	0					
ANR	5185595	ForStatement	"for ( si = 0 , di = 0 ; si < len ; si ++ )"		5185469	14					
ANR	5185596	ForInit	"si = 0 , di = 0 ;"	208:6:3914:3928	5185469	0	True				
ANR	5185597	Expression	"si = 0 , di = 0"		5185469	0					
ANR	5185598	AssignmentExpression	si = 0		5185469	0		=			
ANR	5185599	Identifier	si		5185469	0					
ANR	5185600	PrimaryExpression	0		5185469	1					
ANR	5185601	AssignmentExpression	di = 0		5185469	1		=			
ANR	5185602	Identifier	di		5185469	0					
ANR	5185603	PrimaryExpression	0		5185469	1					
ANR	5185604	Condition	si < len	208:22:3930:3937	5185469	1	True				
ANR	5185605	RelationalExpression	si < len		5185469	0		<			
ANR	5185606	Identifier	si		5185469	0					
ANR	5185607	Identifier	len		5185469	1					
ANR	5185608	PostIncDecOperationExpression	si ++	208:32:3940:3943	5185469	2	True				
ANR	5185609	Identifier	si		5185469	0					
ANR	5185610	IncDec	++		5185469	1					
ANR	5185611	CompoundStatement		29:38:402:402	5185469	3					
ANR	5185612	IfStatement	if ( actualsrc [ si ] < 128 )		5185469	0					
ANR	5185613	Condition	actualsrc [ si ] < 128	209:6:3954:3972	5185469	0	True				
ANR	5185614	RelationalExpression	actualsrc [ si ] < 128		5185469	0		<			
ANR	5185615	ArrayIndexing	actualsrc [ si ]		5185469	0					
ANR	5185616	Identifier	actualsrc		5185469	0					
ANR	5185617	Identifier	si		5185469	1					
ANR	5185618	PrimaryExpression	128		5185469	1					
ANR	5185619	CompoundStatement		30:27:431:431	5185469	1					
ANR	5185620	ExpressionStatement	dst [ di ++ ] = actualsrc [ si ]	210:3:3980:4005	5185469	0	True				
ANR	5185621	AssignmentExpression	dst [ di ++ ] = actualsrc [ si ]		5185469	0		=			
ANR	5185622	ArrayIndexing	dst [ di ++ ]		5185469	0					
ANR	5185623	Identifier	dst		5185469	0					
ANR	5185624	PostIncDecOperationExpression	di ++		5185469	1					
ANR	5185625	Identifier	di		5185469	0					
ANR	5185626	IncDec	++		5185469	1					
ANR	5185627	ArrayIndexing	actualsrc [ si ]		5185469	1					
ANR	5185628	Identifier	actualsrc		5185469	0					
ANR	5185629	Identifier	si		5185469	1					
ANR	5185630	ExpressionStatement	b = h = di	214:1:4016:4026	5185469	15	True				
ANR	5185631	AssignmentExpression	b = h = di		5185469	0		=			
ANR	5185632	Identifier	b		5185469	0					
ANR	5185633	AssignmentExpression	h = di		5185469	1		=			
ANR	5185634	Identifier	h		5185469	0					
ANR	5185635	Identifier	di		5185469	1					
ANR	5185636	IfStatement	if ( di > 0 )		5185469	16					
ANR	5185637	Condition	di > 0	216:5:4034:4039	5185469	0	True				
ANR	5185638	RelationalExpression	di > 0		5185469	0		>			
ANR	5185639	Identifier	di		5185469	0					
ANR	5185640	PrimaryExpression	0		5185469	1					
ANR	5185641	CompoundStatement		37:13:498:498	5185469	1					
ANR	5185642	ExpressionStatement	dst [ di ++ ] = '-'	217:2:4046:4061	5185469	0	True				
ANR	5185643	AssignmentExpression	dst [ di ++ ] = '-'		5185469	0		=			
ANR	5185644	ArrayIndexing	dst [ di ++ ]		5185469	0					
ANR	5185645	Identifier	dst		5185469	0					
ANR	5185646	PostIncDecOperationExpression	di ++		5185469	1					
ANR	5185647	Identifier	di		5185469	0					
ANR	5185648	IncDec	++		5185469	1					
ANR	5185649	PrimaryExpression	'-'		5185469	1					
ANR	5185650	ExpressionStatement	n = INITIAL_N	220:1:4068:4081	5185469	17	True				
ANR	5185651	AssignmentExpression	n = INITIAL_N		5185469	0		=			
ANR	5185652	Identifier	n		5185469	0					
ANR	5185653	Identifier	INITIAL_N		5185469	1					
ANR	5185654	ExpressionStatement	bias = INITIAL_BIAS	221:1:4084:4103	5185469	18	True				
ANR	5185655	AssignmentExpression	bias = INITIAL_BIAS		5185469	0		=			
ANR	5185656	Identifier	bias		5185469	0					
ANR	5185657	Identifier	INITIAL_BIAS		5185469	1					
ANR	5185658	ForStatement	"for ( delta = 0 ; h < len ; n ++ , delta ++ )"		5185469	19					
ANR	5185659	ForInit	delta = 0 ;	223:6:4112:4121	5185469	0	True				
ANR	5185660	AssignmentExpression	delta = 0		5185469	0		=			
ANR	5185661	Identifier	delta		5185469	0					
ANR	5185662	PrimaryExpression	0		5185469	1					
ANR	5185663	Condition	h < len	223:17:4123:4129	5185469	1	True				
ANR	5185664	RelationalExpression	h < len		5185469	0		<			
ANR	5185665	Identifier	h		5185469	0					
ANR	5185666	Identifier	len		5185469	1					
ANR	5185667	Expression	"n ++ , delta ++"	223:26:4132:4143	5185469	2	True				
ANR	5185668	PostIncDecOperationExpression	n ++		5185469	0					
ANR	5185669	Identifier	n		5185469	0					
ANR	5185670	IncDec	++		5185469	1					
ANR	5185671	PostIncDecOperationExpression	delta ++		5185469	1					
ANR	5185672	Identifier	delta		5185469	0					
ANR	5185673	IncDec	++		5185469	1					
ANR	5185674	CompoundStatement		44:40:602:602	5185469	3					
ANR	5185675	ForStatement	"for ( m = UT32_MAX , si = 0 ; si < len ; si ++ )"		5185469	0					
ANR	5185676	ForInit	"m = UT32_MAX , si = 0 ;"	224:7:4155:4175	5185469	0	True				
ANR	5185677	Expression	"m = UT32_MAX , si = 0"		5185469	0					
ANR	5185678	AssignmentExpression	m = UT32_MAX		5185469	0		=			
ANR	5185679	Identifier	m		5185469	0					
ANR	5185680	Identifier	UT32_MAX		5185469	1					
ANR	5185681	AssignmentExpression	si = 0		5185469	1		=			
ANR	5185682	Identifier	si		5185469	0					
ANR	5185683	PrimaryExpression	0		5185469	1					
ANR	5185684	Condition	si < len	224:29:4177:4184	5185469	1	True				
ANR	5185685	RelationalExpression	si < len		5185469	0		<			
ANR	5185686	Identifier	si		5185469	0					
ANR	5185687	Identifier	len		5185469	1					
ANR	5185688	PostIncDecOperationExpression	si ++	224:39:4187:4190	5185469	2	True				
ANR	5185689	Identifier	si		5185469	0					
ANR	5185690	IncDec	++		5185469	1					
ANR	5185691	CompoundStatement		45:45:649:649	5185469	3					
ANR	5185692	IfStatement	if ( actualsrc [ si ] >= n && actualsrc [ si ] < m )		5185469	0					
ANR	5185693	Condition	actualsrc [ si ] >= n && actualsrc [ si ] < m	225:7:4202:4240	5185469	0	True				
ANR	5185694	AndExpression	actualsrc [ si ] >= n && actualsrc [ si ] < m		5185469	0		&&			
ANR	5185695	RelationalExpression	actualsrc [ si ] >= n		5185469	0		>=			
ANR	5185696	ArrayIndexing	actualsrc [ si ]		5185469	0					
ANR	5185697	Identifier	actualsrc		5185469	0					
ANR	5185698	Identifier	si		5185469	1					
ANR	5185699	Identifier	n		5185469	1					
ANR	5185700	RelationalExpression	actualsrc [ si ] < m		5185469	1		<			
ANR	5185701	ArrayIndexing	actualsrc [ si ]		5185469	0					
ANR	5185702	Identifier	actualsrc		5185469	0					
ANR	5185703	Identifier	si		5185469	1					
ANR	5185704	Identifier	m		5185469	1					
ANR	5185705	CompoundStatement		46:48:699:699	5185469	1					
ANR	5185706	ExpressionStatement	m = actualsrc [ si ]	226:4:4249:4266	5185469	0	True				
ANR	5185707	AssignmentExpression	m = actualsrc [ si ]		5185469	0		=			
ANR	5185708	Identifier	m		5185469	0					
ANR	5185709	ArrayIndexing	actualsrc [ si ]		5185469	1					
ANR	5185710	Identifier	actualsrc		5185469	0					
ANR	5185711	Identifier	si		5185469	1					
ANR	5185712	IfStatement	if ( ( m - n ) > ( UT32_MAX - delta ) / ( h + 1 ) )		5185469	1					
ANR	5185713	Condition	( m - n ) > ( UT32_MAX - delta ) / ( h + 1 )	230:6:4284:4321	5185469	0	True				
ANR	5185714	RelationalExpression	( m - n ) > ( UT32_MAX - delta ) / ( h + 1 )		5185469	0		>			
ANR	5185715	AdditiveExpression	m - n		5185469	0		-			
ANR	5185716	Identifier	m		5185469	0					
ANR	5185717	Identifier	n		5185469	1					
ANR	5185718	MultiplicativeExpression	( UT32_MAX - delta ) / ( h + 1 )		5185469	1		/			
ANR	5185719	AdditiveExpression	UT32_MAX - delta		5185469	0		-			
ANR	5185720	Identifier	UT32_MAX		5185469	0					
ANR	5185721	Identifier	delta		5185469	1					
ANR	5185722	AdditiveExpression	h + 1		5185469	1		+			
ANR	5185723	Identifier	h		5185469	0					
ANR	5185724	PrimaryExpression	1		5185469	1					
ANR	5185725	CompoundStatement		51:46:780:780	5185469	1					
ANR	5185726	ExpressionStatement	free ( actualsrc )	231:3:4329:4345	5185469	0	True				
ANR	5185727	CallExpression	free ( actualsrc )		5185469	0					
ANR	5185728	Callee	free		5185469	0					
ANR	5185729	Identifier	free		5185469	0					
ANR	5185730	ArgumentList	actualsrc		5185469	1					
ANR	5185731	Argument	actualsrc		5185469	0					
ANR	5185732	Identifier	actualsrc		5185469	0					
ANR	5185733	ExpressionStatement	free ( dst )	232:3:4350:4360	5185469	1	True				
ANR	5185734	CallExpression	free ( dst )		5185469	0					
ANR	5185735	Callee	free		5185469	0					
ANR	5185736	Identifier	free		5185469	0					
ANR	5185737	ArgumentList	dst		5185469	1					
ANR	5185738	Argument	dst		5185469	0					
ANR	5185739	Identifier	dst		5185469	0					
ANR	5185740	ReturnStatement	return NULL ;	233:3:4365:4376	5185469	2	True				
ANR	5185741	Identifier	NULL		5185469	0					
ANR	5185742	ExpressionStatement	delta += ( m - n ) * ( h + 1 )	236:2:4385:4411	5185469	2	True				
ANR	5185743	AssignmentExpression	delta += ( m - n ) * ( h + 1 )		5185469	0		+=			
ANR	5185744	Identifier	delta		5185469	0					
ANR	5185745	MultiplicativeExpression	( m - n ) * ( h + 1 )		5185469	1		*			
ANR	5185746	AdditiveExpression	m - n		5185469	0		-			
ANR	5185747	Identifier	m		5185469	0					
ANR	5185748	Identifier	n		5185469	1					
ANR	5185749	AdditiveExpression	h + 1		5185469	1		+			
ANR	5185750	Identifier	h		5185469	0					
ANR	5185751	PrimaryExpression	1		5185469	1					
ANR	5185752	ExpressionStatement	n = m	237:2:4415:4420	5185469	3	True				
ANR	5185753	AssignmentExpression	n = m		5185469	0		=			
ANR	5185754	Identifier	n		5185469	0					
ANR	5185755	Identifier	m		5185469	1					
ANR	5185756	ForStatement	for ( si = 0 ; si < len ; si ++ )		5185469	4					
ANR	5185757	ForInit	si = 0 ;	239:7:4430:4436	5185469	0	True				
ANR	5185758	AssignmentExpression	si = 0		5185469	0		=			
ANR	5185759	Identifier	si		5185469	0					
ANR	5185760	PrimaryExpression	0		5185469	1					
ANR	5185761	Condition	si < len	239:15:4438:4445	5185469	1	True				
ANR	5185762	RelationalExpression	si < len		5185469	0		<			
ANR	5185763	Identifier	si		5185469	0					
ANR	5185764	Identifier	len		5185469	1					
ANR	5185765	PostIncDecOperationExpression	si ++	239:25:4448:4451	5185469	2	True				
ANR	5185766	Identifier	si		5185469	0					
ANR	5185767	IncDec	++		5185469	1					
ANR	5185768	CompoundStatement		60:31:910:910	5185469	3					
ANR	5185769	IfStatement	if ( actualsrc [ si ] < n )		5185469	0					
ANR	5185770	Condition	actualsrc [ si ] < n	240:7:4463:4479	5185469	0	True				
ANR	5185771	RelationalExpression	actualsrc [ si ] < n		5185469	0		<			
ANR	5185772	ArrayIndexing	actualsrc [ si ]		5185469	0					
ANR	5185773	Identifier	actualsrc		5185469	0					
ANR	5185774	Identifier	si		5185469	1					
ANR	5185775	Identifier	n		5185469	1					
ANR	5185776	CompoundStatement		61:26:938:938	5185469	1					
ANR	5185777	IfStatement	if ( ++ delta == 0 )		5185469	0					
ANR	5185778	Condition	++ delta == 0	241:8:4492:4503	5185469	0	True				
ANR	5185779	EqualityExpression	++ delta == 0		5185469	0		==			
ANR	5185780	UnaryExpression	++ delta		5185469	0					
ANR	5185781	IncDec	++		5185469	0					
ANR	5185782	Identifier	delta		5185469	1					
ANR	5185783	PrimaryExpression	0		5185469	1					
ANR	5185784	CompoundStatement		62:22:962:962	5185469	1					
ANR	5185785	ExpressionStatement	free ( actualsrc )	242:5:4513:4529	5185469	0	True				
ANR	5185786	CallExpression	free ( actualsrc )		5185469	0					
ANR	5185787	Callee	free		5185469	0					
ANR	5185788	Identifier	free		5185469	0					
ANR	5185789	ArgumentList	actualsrc		5185469	1					
ANR	5185790	Argument	actualsrc		5185469	0					
ANR	5185791	Identifier	actualsrc		5185469	0					
ANR	5185792	ExpressionStatement	free ( dst )	243:5:4536:4546	5185469	1	True				
ANR	5185793	CallExpression	free ( dst )		5185469	0					
ANR	5185794	Callee	free		5185469	0					
ANR	5185795	Identifier	free		5185469	0					
ANR	5185796	ArgumentList	dst		5185469	1					
ANR	5185797	Argument	dst		5185469	0					
ANR	5185798	Identifier	dst		5185469	0					
ANR	5185799	ReturnStatement	return NULL ;	244:5:4553:4564	5185469	2	True				
ANR	5185800	Identifier	NULL		5185469	0					
ANR	5185801	ElseStatement	else		5185469	0					
ANR	5185802	IfStatement	if ( actualsrc [ si ] == n )		5185469	0					
ANR	5185803	Condition	actualsrc [ si ] == n	246:14:4586:4603	5185469	0	True				
ANR	5185804	EqualityExpression	actualsrc [ si ] == n		5185469	0		==			
ANR	5185805	ArrayIndexing	actualsrc [ si ]		5185469	0					
ANR	5185806	Identifier	actualsrc		5185469	0					
ANR	5185807	Identifier	si		5185469	1					
ANR	5185808	Identifier	n		5185469	1					
ANR	5185809	CompoundStatement		67:34:1062:1062	5185469	1					
ANR	5185810	ExpressionStatement	"di += encode_var_int ( bias , delta , & dst [ di ] )"	247:4:4612:4656	5185469	0	True				
ANR	5185811	AssignmentExpression	"di += encode_var_int ( bias , delta , & dst [ di ] )"		5185469	0		+=			
ANR	5185812	Identifier	di		5185469	0					
ANR	5185813	CallExpression	"encode_var_int ( bias , delta , & dst [ di ] )"		5185469	1					
ANR	5185814	Callee	encode_var_int		5185469	0					
ANR	5185815	Identifier	encode_var_int		5185469	0					
ANR	5185816	ArgumentList	bias		5185469	1					
ANR	5185817	Argument	bias		5185469	0					
ANR	5185818	Identifier	bias		5185469	0					
ANR	5185819	Argument	delta		5185469	1					
ANR	5185820	Identifier	delta		5185469	0					
ANR	5185821	Argument	& dst [ di ]		5185469	2					
ANR	5185822	UnaryOperationExpression	& dst [ di ]		5185469	0					
ANR	5185823	UnaryOperator	&		5185469	0					
ANR	5185824	ArrayIndexing	dst [ di ]		5185469	1					
ANR	5185825	Identifier	dst		5185469	0					
ANR	5185826	Identifier	di		5185469	1					
ANR	5185827	ExpressionStatement	"bias = adapt_bias ( delta , h + 1 , h == b )"	248:4:4662:4702	5185469	1	True				
ANR	5185828	AssignmentExpression	"bias = adapt_bias ( delta , h + 1 , h == b )"		5185469	0		=			
ANR	5185829	Identifier	bias		5185469	0					
ANR	5185830	CallExpression	"adapt_bias ( delta , h + 1 , h == b )"		5185469	1					
ANR	5185831	Callee	adapt_bias		5185469	0					
ANR	5185832	Identifier	adapt_bias		5185469	0					
ANR	5185833	ArgumentList	delta		5185469	1					
ANR	5185834	Argument	delta		5185469	0					
ANR	5185835	Identifier	delta		5185469	0					
ANR	5185836	Argument	h + 1		5185469	1					
ANR	5185837	AdditiveExpression	h + 1		5185469	0		+			
ANR	5185838	Identifier	h		5185469	0					
ANR	5185839	PrimaryExpression	1		5185469	1					
ANR	5185840	Argument	h == b		5185469	2					
ANR	5185841	EqualityExpression	h == b		5185469	0		==			
ANR	5185842	Identifier	h		5185469	0					
ANR	5185843	Identifier	b		5185469	1					
ANR	5185844	ExpressionStatement	delta = 0	249:4:4708:4717	5185469	2	True				
ANR	5185845	AssignmentExpression	delta = 0		5185469	0		=			
ANR	5185846	Identifier	delta		5185469	0					
ANR	5185847	PrimaryExpression	0		5185469	1					
ANR	5185848	ExpressionStatement	h ++	250:4:4723:4726	5185469	3	True				
ANR	5185849	PostIncDecOperationExpression	h ++		5185469	0					
ANR	5185850	Identifier	h		5185469	0					
ANR	5185851	IncDec	++		5185469	1					
ANR	5185852	ExpressionStatement	* dstlen = di	254:1:4741:4753	5185469	20	True				
ANR	5185853	AssignmentExpression	* dstlen = di		5185469	0		=			
ANR	5185854	UnaryOperationExpression	* dstlen		5185469	0					
ANR	5185855	UnaryOperator	*		5185469	0					
ANR	5185856	Identifier	dstlen		5185469	1					
ANR	5185857	Identifier	di		5185469	1					
ANR	5185858	ExpressionStatement	free ( actualsrc )	255:1:4756:4772	5185469	21	True				
ANR	5185859	CallExpression	free ( actualsrc )		5185469	0					
ANR	5185860	Callee	free		5185469	0					
ANR	5185861	Identifier	free		5185469	0					
ANR	5185862	ArgumentList	actualsrc		5185469	1					
ANR	5185863	Argument	actualsrc		5185469	0					
ANR	5185864	Identifier	actualsrc		5185469	0					
ANR	5185865	ReturnStatement	return dst ;	256:1:4775:4785	5185469	22	True				
ANR	5185866	Identifier	dst		5185469	0					
ANR	5185867	ReturnType	R_API char *		5185469	1					
ANR	5185868	Identifier	r_punycode_encode		5185469	2					
ANR	5185869	ParameterList	"const ut8 * src , int srclen , int * dstlen"		5185469	3					
ANR	5185870	Parameter	const ut8 * src	180:30:3502:3515	5185469	0	True				
ANR	5185871	ParameterType	const ut8 *		5185469	0					
ANR	5185872	Identifier	src		5185469	1					
ANR	5185873	Parameter	int srclen	180:46:3518:3527	5185469	1	True				
ANR	5185874	ParameterType	int		5185469	0					
ANR	5185875	Identifier	srclen		5185469	1					
ANR	5185876	Parameter	int * dstlen	180:58:3530:3540	5185469	2	True				
ANR	5185877	ParameterType	int *		5185469	0					
ANR	5185878	Identifier	dstlen		5185469	1					
ANR	5185879	CFGEntryNode	ENTRY		5185469		True				
ANR	5185880	CFGExitNode	EXIT		5185469		True				
ANR	5185881	Symbol	UT32_MAX		5185469						
ANR	5185882	Symbol	adapt_bias		5185469						
ANR	5185883	Symbol	srclen		5185469						
ANR	5185884	Symbol	dst		5185469						
ANR	5185885	Symbol	di		5185469						
ANR	5185886	Symbol	INITIAL_BIAS		5185469						
ANR	5185887	Symbol	delta		5185469						
ANR	5185888	Symbol	calloc		5185469						
ANR	5185889	Symbol	* dstlen		5185469						
ANR	5185890	Symbol	actualsrc		5185469						
ANR	5185891	Symbol	* dst		5185469						
ANR	5185892	Symbol	len		5185469						
ANR	5185893	Symbol	si		5185469						
ANR	5185894	Symbol	bias		5185469						
ANR	5185895	Symbol	* actualsrc		5185469						
ANR	5185896	Symbol	dstlen		5185469						
ANR	5185897	Symbol	* si		5185469						
ANR	5185898	Symbol	b		5185469						
ANR	5185899	Symbol	NULL		5185469						
ANR	5185900	Symbol	src		5185469						
ANR	5185901	Symbol	h		5185469						
ANR	5185902	Symbol	utf8toutf32		5185469						
ANR	5185903	Symbol	encode_var_int		5185469						
ANR	5185904	Symbol	m		5185469						
ANR	5185905	Symbol	n		5185469						
ANR	5185906	Symbol	INITIAL_N		5185469						
ANR	5185907	Symbol	utf32len		5185469						
ANR	5185908	Function	r_punycode_decode	259:0:4790:6423							
ANR	5185909	FunctionDef	"r_punycode_decode (const char * src , int srclen , int * dstlen)"		5185908	0					
ANR	5185910	CompoundStatement		259:72:4862:6423	5185908	0					
ANR	5185911	IdentifierDeclStatement	const char * p ;	260:1:4865:4878	5185908	0	True				
ANR	5185912	IdentifierDecl	* p		5185908	0					
ANR	5185913	IdentifierDeclType	const char *		5185908	0					
ANR	5185914	Identifier	p		5185908	1					
ANR	5185915	IdentifierDeclStatement	"ut32 si , di ;"	261:1:4881:4892	5185908	1	True				
ANR	5185916	IdentifierDecl	si		5185908	0					
ANR	5185917	IdentifierDeclType	ut32		5185908	0					
ANR	5185918	Identifier	si		5185908	1					
ANR	5185919	IdentifierDecl	di		5185908	1					
ANR	5185920	IdentifierDeclType	ut32		5185908	0					
ANR	5185921	Identifier	di		5185908	1					
ANR	5185922	IdentifierDeclStatement	"ut32 b , n , t , i , k , w ;"	262:1:4895:4916	5185908	2	True				
ANR	5185923	IdentifierDecl	b		5185908	0					
ANR	5185924	IdentifierDeclType	ut32		5185908	0					
ANR	5185925	Identifier	b		5185908	1					
ANR	5185926	IdentifierDecl	n		5185908	1					
ANR	5185927	IdentifierDeclType	ut32		5185908	0					
ANR	5185928	Identifier	n		5185908	1					
ANR	5185929	IdentifierDecl	t		5185908	2					
ANR	5185930	IdentifierDeclType	ut32		5185908	0					
ANR	5185931	Identifier	t		5185908	1					
ANR	5185932	IdentifierDecl	i		5185908	3					
ANR	5185933	IdentifierDeclType	ut32		5185908	0					
ANR	5185934	Identifier	i		5185908	1					
ANR	5185935	IdentifierDecl	k		5185908	4					
ANR	5185936	IdentifierDeclType	ut32		5185908	0					
ANR	5185937	Identifier	k		5185908	1					
ANR	5185938	IdentifierDecl	w		5185908	5					
ANR	5185939	IdentifierDeclType	ut32		5185908	0					
ANR	5185940	Identifier	w		5185908	1					
ANR	5185941	IdentifierDeclStatement	"ut32 digit , org_i , bias ;"	263:1:4919:4942	5185908	3	True				
ANR	5185942	IdentifierDecl	digit		5185908	0					
ANR	5185943	IdentifierDeclType	ut32		5185908	0					
ANR	5185944	Identifier	digit		5185908	1					
ANR	5185945	IdentifierDecl	org_i		5185908	1					
ANR	5185946	IdentifierDeclType	ut32		5185908	0					
ANR	5185947	Identifier	org_i		5185908	1					
ANR	5185948	IdentifierDecl	bias		5185908	2					
ANR	5185949	IdentifierDeclType	ut32		5185908	0					
ANR	5185950	Identifier	bias		5185908	1					
ANR	5185951	IdentifierDeclStatement	ut32 * dst = NULL ;	264:1:4945:4961	5185908	4	True				
ANR	5185952	IdentifierDecl	* dst = NULL		5185908	0					
ANR	5185953	IdentifierDeclType	ut32 *		5185908	0					
ANR	5185954	Identifier	dst		5185908	1					
ANR	5185955	AssignmentExpression	* dst = NULL		5185908	2		=			
ANR	5185956	Identifier	NULL		5185908	0					
ANR	5185957	Identifier	NULL		5185908	1					
ANR	5185958	IdentifierDeclStatement	ut8 * finaldst = NULL ;	265:1:4964:4984	5185908	5	True				
ANR	5185959	IdentifierDecl	* finaldst = NULL		5185908	0					
ANR	5185960	IdentifierDeclType	ut8 *		5185908	0					
ANR	5185961	Identifier	finaldst		5185908	1					
ANR	5185962	AssignmentExpression	* finaldst = NULL		5185908	2		=			
ANR	5185963	Identifier	NULL		5185908	0					
ANR	5185964	Identifier	NULL		5185908	1					
ANR	5185965	ExpressionStatement	* dstlen = 0	267:1:4988:4999	5185908	6	True				
ANR	5185966	AssignmentExpression	* dstlen = 0		5185908	0		=			
ANR	5185967	UnaryOperationExpression	* dstlen		5185908	0					
ANR	5185968	UnaryOperator	*		5185908	0					
ANR	5185969	Identifier	dstlen		5185908	1					
ANR	5185970	PrimaryExpression	0		5185908	1					
ANR	5185971	IfStatement	if ( ! src || srclen < 1 )		5185908	7					
ANR	5185972	Condition	! src || srclen < 1	268:5:5006:5023	5185908	0	True				
ANR	5185973	OrExpression	! src || srclen < 1		5185908	0		||			
ANR	5185974	UnaryOperationExpression	! src		5185908	0					
ANR	5185975	UnaryOperator	!		5185908	0					
ANR	5185976	Identifier	src		5185908	1					
ANR	5185977	RelationalExpression	srclen < 1		5185908	1		<			
ANR	5185978	Identifier	srclen		5185908	0					
ANR	5185979	PrimaryExpression	1		5185908	1					
ANR	5185980	CompoundStatement		10:25:163:163	5185908	1					
ANR	5185981	ReturnStatement	return NULL ;	269:2:5030:5041	5185908	0	True				
ANR	5185982	Identifier	NULL		5185908	0					
ANR	5185983	ExpressionStatement	"dst = calloc ( 2 * srclen + 10 , 4 )"	272:1:5048:5081	5185908	8	True				
ANR	5185984	AssignmentExpression	"dst = calloc ( 2 * srclen + 10 , 4 )"		5185908	0		=			
ANR	5185985	Identifier	dst		5185908	0					
ANR	5185986	CallExpression	"calloc ( 2 * srclen + 10 , 4 )"		5185908	1					
ANR	5185987	Callee	calloc		5185908	0					
ANR	5185988	Identifier	calloc		5185908	0					
ANR	5185989	ArgumentList	2 * srclen + 10		5185908	1					
ANR	5185990	Argument	2 * srclen + 10		5185908	0					
ANR	5185991	AdditiveExpression	2 * srclen + 10		5185908	0		+			
ANR	5185992	MultiplicativeExpression	2 * srclen		5185908	0		*			
ANR	5185993	PrimaryExpression	2		5185908	0					
ANR	5185994	Identifier	srclen		5185908	1					
ANR	5185995	PrimaryExpression	10		5185908	1					
ANR	5185996	Argument	4		5185908	1					
ANR	5185997	PrimaryExpression	4		5185908	0					
ANR	5185998	IfStatement	if ( ! dst )		5185908	9					
ANR	5185999	Condition	! dst	273:5:5088:5091	5185908	0	True				
ANR	5186000	UnaryOperationExpression	! dst		5185908	0					
ANR	5186001	UnaryOperator	!		5185908	0					
ANR	5186002	Identifier	dst		5185908	1					
ANR	5186003	CompoundStatement		15:11:231:231	5185908	1					
ANR	5186004	ReturnStatement	return NULL ;	274:2:5098:5109	5185908	0	True				
ANR	5186005	Identifier	NULL		5185908	0					
ANR	5186006	ForStatement	for ( si = 0 ; si < srclen ; si ++ )		5185908	10					
ANR	5186007	ForInit	si = 0 ;	277:6:5121:5127	5185908	0	True				
ANR	5186008	AssignmentExpression	si = 0		5185908	0		=			
ANR	5186009	Identifier	si		5185908	0					
ANR	5186010	PrimaryExpression	0		5185908	1					
ANR	5186011	Condition	si < srclen	277:14:5129:5139	5185908	1	True				
ANR	5186012	RelationalExpression	si < srclen		5185908	0		<			
ANR	5186013	Identifier	si		5185908	0					
ANR	5186014	Identifier	srclen		5185908	1					
ANR	5186015	PostIncDecOperationExpression	si ++	277:27:5142:5145	5185908	2	True				
ANR	5186016	Identifier	si		5185908	0					
ANR	5186017	IncDec	++		5185908	1					
ANR	5186018	CompoundStatement		19:33:285:285	5185908	3					
ANR	5186019	IfStatement	if ( src [ si ] & 0x80 )		5185908	0					
ANR	5186020	Condition	src [ si ] & 0x80	278:6:5156:5169	5185908	0	True				
ANR	5186021	BitAndExpression	src [ si ] & 0x80		5185908	0		&			
ANR	5186022	ArrayIndexing	src [ si ]		5185908	0					
ANR	5186023	Identifier	src		5185908	0					
ANR	5186024	Identifier	si		5185908	1					
ANR	5186025	PrimaryExpression	0x80		5185908	1					
ANR	5186026	CompoundStatement		20:22:309:309	5185908	1					
ANR	5186027	ExpressionStatement	free ( dst )	279:3:5177:5187	5185908	0	True				
ANR	5186028	CallExpression	free ( dst )		5185908	0					
ANR	5186029	Callee	free		5185908	0					
ANR	5186030	Identifier	free		5185908	0					
ANR	5186031	ArgumentList	dst		5185908	1					
ANR	5186032	Argument	dst		5185908	0					
ANR	5186033	Identifier	dst		5185908	0					
ANR	5186034	ReturnStatement	return NULL ;	280:3:5192:5203	5185908	1	True				
ANR	5186035	Identifier	NULL		5185908	0					
ANR	5186036	ForStatement	for ( p = src + srclen - 1 ; p > src && * p != '-' ; p -- )		5185908	11					
ANR	5186037	ForInit	p = src + srclen - 1 ;	284:6:5244:5264	5185908	0	True				
ANR	5186038	AssignmentExpression	p = src + srclen - 1		5185908	0		=			
ANR	5186039	Identifier	p		5185908	0					
ANR	5186040	AdditiveExpression	src + srclen - 1		5185908	1		+			
ANR	5186041	Identifier	src		5185908	0					
ANR	5186042	AdditiveExpression	srclen - 1		5185908	1		-			
ANR	5186043	Identifier	srclen		5185908	0					
ANR	5186044	PrimaryExpression	1		5185908	1					
ANR	5186045	Condition	p > src && * p != '-'	284:28:5266:5285	5185908	1	True				
ANR	5186046	AndExpression	p > src && * p != '-'		5185908	0		&&			
ANR	5186047	RelationalExpression	p > src		5185908	0		>			
ANR	5186048	Identifier	p		5185908	0					
ANR	5186049	Identifier	src		5185908	1					
ANR	5186050	EqualityExpression	* p != '-'		5185908	1		!=			
ANR	5186051	UnaryOperationExpression	* p		5185908	0					
ANR	5186052	UnaryOperator	*		5185908	0					
ANR	5186053	Identifier	p		5185908	1					
ANR	5186054	PrimaryExpression	'-'		5185908	1					
ANR	5186055	PostIncDecOperationExpression	p --	284:50:5288:5290	5185908	2	True				
ANR	5186056	Identifier	p		5185908	0					
ANR	5186057	IncDec	--		5185908	1					
ANR	5186058	CompoundStatement		26:55:430:430	5185908	3					
ANR	5186059	ExpressionStatement		285:2:5297:5297	5185908	0	True				
ANR	5186060	ExpressionStatement	b = p - src	287:1:5303:5314	5185908	12	True				
ANR	5186061	AssignmentExpression	b = p - src		5185908	0		=			
ANR	5186062	Identifier	b		5185908	0					
ANR	5186063	AdditiveExpression	p - src		5185908	1		-			
ANR	5186064	Identifier	p		5185908	0					
ANR	5186065	Identifier	src		5185908	1					
ANR	5186066	ExpressionStatement	di = b	289:1:5318:5324	5185908	13	True				
ANR	5186067	AssignmentExpression	di = b		5185908	0		=			
ANR	5186068	Identifier	di		5185908	0					
ANR	5186069	Identifier	b		5185908	1					
ANR	5186070	ForStatement	for ( i = 0 ; i < di ; i ++ )		5185908	14					
ANR	5186071	ForInit	i = 0 ;	290:6:5332:5337	5185908	0	True				
ANR	5186072	AssignmentExpression	i = 0		5185908	0		=			
ANR	5186073	Identifier	i		5185908	0					
ANR	5186074	PrimaryExpression	0		5185908	1					
ANR	5186075	Condition	i < di	290:13:5339:5344	5185908	1	True				
ANR	5186076	RelationalExpression	i < di		5185908	0		<			
ANR	5186077	Identifier	i		5185908	0					
ANR	5186078	Identifier	di		5185908	1					
ANR	5186079	PostIncDecOperationExpression	i ++	290:21:5347:5349	5185908	2	True				
ANR	5186080	Identifier	i		5185908	0					
ANR	5186081	IncDec	++		5185908	1					
ANR	5186082	CompoundStatement		32:26:489:489	5185908	3					
ANR	5186083	ExpressionStatement	dst [ i ] = src [ i ]	291:2:5356:5371	5185908	0	True				
ANR	5186084	AssignmentExpression	dst [ i ] = src [ i ]		5185908	0		=			
ANR	5186085	ArrayIndexing	dst [ i ]		5185908	0					
ANR	5186086	Identifier	dst		5185908	0					
ANR	5186087	Identifier	i		5185908	1					
ANR	5186088	ArrayIndexing	src [ i ]		5185908	1					
ANR	5186089	Identifier	src		5185908	0					
ANR	5186090	Identifier	i		5185908	1					
ANR	5186091	ExpressionStatement	i = 0	294:1:5378:5383	5185908	15	True				
ANR	5186092	AssignmentExpression	i = 0		5185908	0		=			
ANR	5186093	Identifier	i		5185908	0					
ANR	5186094	PrimaryExpression	0		5185908	1					
ANR	5186095	ExpressionStatement	n = INITIAL_N	295:1:5386:5399	5185908	16	True				
ANR	5186096	AssignmentExpression	n = INITIAL_N		5185908	0		=			
ANR	5186097	Identifier	n		5185908	0					
ANR	5186098	Identifier	INITIAL_N		5185908	1					
ANR	5186099	ExpressionStatement	bias = INITIAL_BIAS	296:1:5402:5421	5185908	17	True				
ANR	5186100	AssignmentExpression	bias = INITIAL_BIAS		5185908	0		=			
ANR	5186101	Identifier	bias		5185908	0					
ANR	5186102	Identifier	INITIAL_BIAS		5185908	1					
ANR	5186103	ForStatement	for ( si = b + ( b > 0 ) ; si < srclen ; di ++ )		5185908	18					
ANR	5186104	ForInit	si = b + ( b > 0 ) ;	298:6:5430:5446	5185908	0	True				
ANR	5186105	AssignmentExpression	si = b + ( b > 0 )		5185908	0		=			
ANR	5186106	Identifier	si		5185908	0					
ANR	5186107	AdditiveExpression	b + ( b > 0 )		5185908	1		+			
ANR	5186108	Identifier	b		5185908	0					
ANR	5186109	RelationalExpression	b > 0		5185908	1		>			
ANR	5186110	Identifier	b		5185908	0					
ANR	5186111	PrimaryExpression	0		5185908	1					
ANR	5186112	Condition	si < srclen	298:24:5448:5458	5185908	1	True				
ANR	5186113	RelationalExpression	si < srclen		5185908	0		<			
ANR	5186114	Identifier	si		5185908	0					
ANR	5186115	Identifier	srclen		5185908	1					
ANR	5186116	PostIncDecOperationExpression	di ++	298:37:5461:5464	5185908	2	True				
ANR	5186117	Identifier	di		5185908	0					
ANR	5186118	IncDec	++		5185908	1					
ANR	5186119	CompoundStatement		40:43:604:604	5185908	3					
ANR	5186120	ExpressionStatement	org_i = i	299:2:5471:5480	5185908	0	True				
ANR	5186121	AssignmentExpression	org_i = i		5185908	0		=			
ANR	5186122	Identifier	org_i		5185908	0					
ANR	5186123	Identifier	i		5185908	1					
ANR	5186124	ForStatement	"for ( w = 1 , k = BASE ; ; k += BASE )"		5185908	1					
ANR	5186125	ForInit	"w = 1 , k = BASE ;"	301:7:5490:5505	5185908	0	True				
ANR	5186126	Expression	"w = 1 , k = BASE"		5185908	0					
ANR	5186127	AssignmentExpression	w = 1		5185908	0		=			
ANR	5186128	Identifier	w		5185908	0					
ANR	5186129	PrimaryExpression	1		5185908	1					
ANR	5186130	AssignmentExpression	k = BASE		5185908	1		=			
ANR	5186131	Identifier	k		5185908	0					
ANR	5186132	Identifier	BASE		5185908	1					
ANR	5186133	AssignmentExpression	k += BASE	301:25:5508:5516	5185908	1	True	+=			
ANR	5186134	Identifier	k		5185908	0					
ANR	5186135	Identifier	BASE		5185908	1					
ANR	5186136	CompoundStatement		43:36:656:656	5185908	2					
ANR	5186137	ExpressionStatement	digit = decode_digit ( src [ si ++ ] )	302:3:5524:5556	5185908	0	True				
ANR	5186138	AssignmentExpression	digit = decode_digit ( src [ si ++ ] )		5185908	0		=			
ANR	5186139	Identifier	digit		5185908	0					
ANR	5186140	CallExpression	decode_digit ( src [ si ++ ] )		5185908	1					
ANR	5186141	Callee	decode_digit		5185908	0					
ANR	5186142	Identifier	decode_digit		5185908	0					
ANR	5186143	ArgumentList	src [ si ++ ]		5185908	1					
ANR	5186144	Argument	src [ si ++ ]		5185908	0					
ANR	5186145	ArrayIndexing	src [ si ++ ]		5185908	0					
ANR	5186146	Identifier	src		5185908	0					
ANR	5186147	PostIncDecOperationExpression	si ++		5185908	1					
ANR	5186148	Identifier	si		5185908	0					
ANR	5186149	IncDec	++		5185908	1					
ANR	5186150	IfStatement	if ( digit == UT32_MAX )		5185908	1					
ANR	5186151	Condition	digit == UT32_MAX	304:7:5566:5582	5185908	0	True				
ANR	5186152	EqualityExpression	digit == UT32_MAX		5185908	0		==			
ANR	5186153	Identifier	digit		5185908	0					
ANR	5186154	Identifier	UT32_MAX		5185908	1					
ANR	5186155	CompoundStatement		46:26:722:722	5185908	1					
ANR	5186156	ExpressionStatement	free ( dst )	305:4:5591:5601	5185908	0	True				
ANR	5186157	CallExpression	free ( dst )		5185908	0					
ANR	5186158	Callee	free		5185908	0					
ANR	5186159	Identifier	free		5185908	0					
ANR	5186160	ArgumentList	dst		5185908	1					
ANR	5186161	Argument	dst		5185908	0					
ANR	5186162	Identifier	dst		5185908	0					
ANR	5186163	ReturnStatement	return NULL ;	306:4:5607:5618	5185908	1	True				
ANR	5186164	Identifier	NULL		5185908	0					
ANR	5186165	IfStatement	if ( digit > ( UT32_MAX - i ) / w )		5185908	2					
ANR	5186166	Condition	digit > ( UT32_MAX - i ) / w	309:7:5633:5658	5185908	0	True				
ANR	5186167	RelationalExpression	digit > ( UT32_MAX - i ) / w		5185908	0		>			
ANR	5186168	Identifier	digit		5185908	0					
ANR	5186169	MultiplicativeExpression	( UT32_MAX - i ) / w		5185908	1		/			
ANR	5186170	AdditiveExpression	UT32_MAX - i		5185908	0		-			
ANR	5186171	Identifier	UT32_MAX		5185908	0					
ANR	5186172	Identifier	i		5185908	1					
ANR	5186173	Identifier	w		5185908	1					
ANR	5186174	CompoundStatement		51:35:798:798	5185908	1					
ANR	5186175	ExpressionStatement	free ( dst )	310:4:5667:5677	5185908	0	True				
ANR	5186176	CallExpression	free ( dst )		5185908	0					
ANR	5186177	Callee	free		5185908	0					
ANR	5186178	Identifier	free		5185908	0					
ANR	5186179	ArgumentList	dst		5185908	1					
ANR	5186180	Argument	dst		5185908	0					
ANR	5186181	Identifier	dst		5185908	0					
ANR	5186182	ReturnStatement	return NULL ;	311:4:5683:5694	5185908	1	True				
ANR	5186183	Identifier	NULL		5185908	0					
ANR	5186184	ExpressionStatement	i += digit * w	314:3:5705:5719	5185908	3	True				
ANR	5186185	AssignmentExpression	i += digit * w		5185908	0		+=			
ANR	5186186	Identifier	i		5185908	0					
ANR	5186187	MultiplicativeExpression	digit * w		5185908	1		*			
ANR	5186188	Identifier	digit		5185908	0					
ANR	5186189	Identifier	w		5185908	1					
ANR	5186190	IfStatement	if ( k <= bias )		5185908	4					
ANR	5186191	Condition	k <= bias	316:7:5729:5737	5185908	0	True				
ANR	5186192	RelationalExpression	k <= bias		5185908	0		<=			
ANR	5186193	Identifier	k		5185908	0					
ANR	5186194	Identifier	bias		5185908	1					
ANR	5186195	CompoundStatement		58:18:877:877	5185908	1					
ANR	5186196	ExpressionStatement	t = TMIN	317:4:5746:5754	5185908	0	True				
ANR	5186197	AssignmentExpression	t = TMIN		5185908	0		=			
ANR	5186198	Identifier	t		5185908	0					
ANR	5186199	Identifier	TMIN		5185908	1					
ANR	5186200	ElseStatement	else		5185908	0					
ANR	5186201	IfStatement	if ( k >= bias + TMAX )		5185908	0					
ANR	5186202	Condition	k >= bias + TMAX	318:14:5770:5785	5185908	0	True				
ANR	5186203	RelationalExpression	k >= bias + TMAX		5185908	0		>=			
ANR	5186204	Identifier	k		5185908	0					
ANR	5186205	AdditiveExpression	bias + TMAX		5185908	1		+			
ANR	5186206	Identifier	bias		5185908	0					
ANR	5186207	Identifier	TMAX		5185908	1					
ANR	5186208	CompoundStatement		60:32:925:925	5185908	1					
ANR	5186209	ExpressionStatement	t = TMAX	319:4:5794:5802	5185908	0	True				
ANR	5186210	AssignmentExpression	t = TMAX		5185908	0		=			
ANR	5186211	Identifier	t		5185908	0					
ANR	5186212	Identifier	TMAX		5185908	1					
ANR	5186213	ElseStatement	else		5185908	0					
ANR	5186214	CompoundStatement		62:10:951:951	5185908	0					
ANR	5186215	ExpressionStatement	t = k - bias	321:4:5820:5832	5185908	0	True				
ANR	5186216	AssignmentExpression	t = k - bias		5185908	0		=			
ANR	5186217	Identifier	t		5185908	0					
ANR	5186218	AdditiveExpression	k - bias		5185908	1		-			
ANR	5186219	Identifier	k		5185908	0					
ANR	5186220	Identifier	bias		5185908	1					
ANR	5186221	IfStatement	if ( digit < t )		5185908	5					
ANR	5186222	Condition	digit < t	324:7:5847:5855	5185908	0	True				
ANR	5186223	RelationalExpression	digit < t		5185908	0		<			
ANR	5186224	Identifier	digit		5185908	0					
ANR	5186225	Identifier	t		5185908	1					
ANR	5186226	CompoundStatement		66:18:995:995	5185908	1					
ANR	5186227	BreakStatement	break ;	325:4:5864:5869	5185908	0	True				
ANR	5186228	IfStatement	if ( w > UT32_MAX / ( BASE - t ) )		5185908	6					
ANR	5186229	Condition	w > UT32_MAX / ( BASE - t )	328:7:5884:5908	5185908	0	True				
ANR	5186230	RelationalExpression	w > UT32_MAX / ( BASE - t )		5185908	0		>			
ANR	5186231	Identifier	w		5185908	0					
ANR	5186232	MultiplicativeExpression	UT32_MAX / ( BASE - t )		5185908	1		/			
ANR	5186233	Identifier	UT32_MAX		5185908	0					
ANR	5186234	AdditiveExpression	BASE - t		5185908	1		-			
ANR	5186235	Identifier	BASE		5185908	0					
ANR	5186236	Identifier	t		5185908	1					
ANR	5186237	CompoundStatement		70:34:1048:1048	5185908	1					
ANR	5186238	ExpressionStatement	free ( dst )	329:4:5917:5927	5185908	0	True				
ANR	5186239	CallExpression	free ( dst )		5185908	0					
ANR	5186240	Callee	free		5185908	0					
ANR	5186241	Identifier	free		5185908	0					
ANR	5186242	ArgumentList	dst		5185908	1					
ANR	5186243	Argument	dst		5185908	0					
ANR	5186244	Identifier	dst		5185908	0					
ANR	5186245	ReturnStatement	return NULL ;	330:4:5933:5944	5185908	1	True				
ANR	5186246	Identifier	NULL		5185908	0					
ANR	5186247	ExpressionStatement	w *= BASE - t	333:3:5955:5968	5185908	7	True				
ANR	5186248	AssignmentExpression	w *= BASE - t		5185908	0		*=			
ANR	5186249	Identifier	w		5185908	0					
ANR	5186250	AdditiveExpression	BASE - t		5185908	1		-			
ANR	5186251	Identifier	BASE		5185908	0					
ANR	5186252	Identifier	t		5185908	1					
ANR	5186253	ExpressionStatement	"bias = adapt_bias ( i - org_i , di + 1 , org_i == 0 )"	336:2:5977:6026	5185908	2	True				
ANR	5186254	AssignmentExpression	"bias = adapt_bias ( i - org_i , di + 1 , org_i == 0 )"		5185908	0		=			
ANR	5186255	Identifier	bias		5185908	0					
ANR	5186256	CallExpression	"adapt_bias ( i - org_i , di + 1 , org_i == 0 )"		5185908	1					
ANR	5186257	Callee	adapt_bias		5185908	0					
ANR	5186258	Identifier	adapt_bias		5185908	0					
ANR	5186259	ArgumentList	i - org_i		5185908	1					
ANR	5186260	Argument	i - org_i		5185908	0					
ANR	5186261	AdditiveExpression	i - org_i		5185908	0		-			
ANR	5186262	Identifier	i		5185908	0					
ANR	5186263	Identifier	org_i		5185908	1					
ANR	5186264	Argument	di + 1		5185908	1					
ANR	5186265	AdditiveExpression	di + 1		5185908	0		+			
ANR	5186266	Identifier	di		5185908	0					
ANR	5186267	PrimaryExpression	1		5185908	1					
ANR	5186268	Argument	org_i == 0		5185908	2					
ANR	5186269	EqualityExpression	org_i == 0		5185908	0		==			
ANR	5186270	Identifier	org_i		5185908	0					
ANR	5186271	PrimaryExpression	0		5185908	1					
ANR	5186272	IfStatement	if ( i / ( di + 1 ) > UT32_MAX - n )		5185908	3					
ANR	5186273	Condition	i / ( di + 1 ) > UT32_MAX - n	338:6:6035:6061	5185908	0	True				
ANR	5186274	RelationalExpression	i / ( di + 1 ) > UT32_MAX - n		5185908	0		>			
ANR	5186275	MultiplicativeExpression	i / ( di + 1 )		5185908	0		/			
ANR	5186276	Identifier	i		5185908	0					
ANR	5186277	AdditiveExpression	di + 1		5185908	1		+			
ANR	5186278	Identifier	di		5185908	0					
ANR	5186279	PrimaryExpression	1		5185908	1					
ANR	5186280	AdditiveExpression	UT32_MAX - n		5185908	1		-			
ANR	5186281	Identifier	UT32_MAX		5185908	0					
ANR	5186282	Identifier	n		5185908	1					
ANR	5186283	CompoundStatement		80:35:1201:1201	5185908	1					
ANR	5186284	ExpressionStatement	free ( dst )	339:3:6069:6079	5185908	0	True				
ANR	5186285	CallExpression	free ( dst )		5185908	0					
ANR	5186286	Callee	free		5185908	0					
ANR	5186287	Identifier	free		5185908	0					
ANR	5186288	ArgumentList	dst		5185908	1					
ANR	5186289	Argument	dst		5185908	0					
ANR	5186290	Identifier	dst		5185908	0					
ANR	5186291	ReturnStatement	return NULL ;	340:3:6084:6095	5185908	1	True				
ANR	5186292	Identifier	NULL		5185908	0					
ANR	5186293	ExpressionStatement	n += i / ( di + 1 )	343:2:6104:6121	5185908	4	True				
ANR	5186294	AssignmentExpression	n += i / ( di + 1 )		5185908	0		+=			
ANR	5186295	Identifier	n		5185908	0					
ANR	5186296	MultiplicativeExpression	i / ( di + 1 )		5185908	1		/			
ANR	5186297	Identifier	i		5185908	0					
ANR	5186298	AdditiveExpression	di + 1		5185908	1		+			
ANR	5186299	Identifier	di		5185908	0					
ANR	5186300	PrimaryExpression	1		5185908	1					
ANR	5186301	ExpressionStatement	i %= ( di + 1 )	344:2:6125:6138	5185908	5	True				
ANR	5186302	AssignmentExpression	i %= ( di + 1 )		5185908	0		%=			
ANR	5186303	Identifier	i		5185908	0					
ANR	5186304	AdditiveExpression	di + 1		5185908	1		+			
ANR	5186305	Identifier	di		5185908	0					
ANR	5186306	PrimaryExpression	1		5185908	1					
ANR	5186307	ExpressionStatement	"memmove ( dst + i + 1 , dst + i , ( di - i ) * sizeof ( ut32 ) )"	346:2:6143:6198	5185908	6	True				
ANR	5186308	CallExpression	"memmove ( dst + i + 1 , dst + i , ( di - i ) * sizeof ( ut32 ) )"		5185908	0					
ANR	5186309	Callee	memmove		5185908	0					
ANR	5186310	Identifier	memmove		5185908	0					
ANR	5186311	ArgumentList	dst + i + 1		5185908	1					
ANR	5186312	Argument	dst + i + 1		5185908	0					
ANR	5186313	AdditiveExpression	dst + i + 1		5185908	0		+			
ANR	5186314	Identifier	dst		5185908	0					
ANR	5186315	AdditiveExpression	i + 1		5185908	1		+			
ANR	5186316	Identifier	i		5185908	0					
ANR	5186317	PrimaryExpression	1		5185908	1					
ANR	5186318	Argument	dst + i		5185908	1					
ANR	5186319	AdditiveExpression	dst + i		5185908	0		+			
ANR	5186320	Identifier	dst		5185908	0					
ANR	5186321	Identifier	i		5185908	1					
ANR	5186322	Argument	( di - i ) * sizeof ( ut32 )		5185908	2					
ANR	5186323	MultiplicativeExpression	( di - i ) * sizeof ( ut32 )		5185908	0		*			
ANR	5186324	AdditiveExpression	di - i		5185908	0		-			
ANR	5186325	Identifier	di		5185908	0					
ANR	5186326	Identifier	i		5185908	1					
ANR	5186327	SizeofExpression	sizeof ( ut32 )		5185908	1					
ANR	5186328	Sizeof	sizeof		5185908	0					
ANR	5186329	SizeofOperand	ut32		5185908	1					
ANR	5186330	ExpressionStatement	dst [ i ++ ] = n	347:2:6202:6214	5185908	7	True				
ANR	5186331	AssignmentExpression	dst [ i ++ ] = n		5185908	0		=			
ANR	5186332	ArrayIndexing	dst [ i ++ ]		5185908	0					
ANR	5186333	Identifier	dst		5185908	0					
ANR	5186334	PostIncDecOperationExpression	i ++		5185908	1					
ANR	5186335	Identifier	i		5185908	0					
ANR	5186336	IncDec	++		5185908	1					
ANR	5186337	Identifier	n		5185908	1					
ANR	5186338	ExpressionStatement	finaldst = utf32toutf8 ( dst )	350:1:6221:6249	5185908	19	True				
ANR	5186339	AssignmentExpression	finaldst = utf32toutf8 ( dst )		5185908	0		=			
ANR	5186340	Identifier	finaldst		5185908	0					
ANR	5186341	CallExpression	utf32toutf8 ( dst )		5185908	1					
ANR	5186342	Callee	utf32toutf8		5185908	0					
ANR	5186343	Identifier	utf32toutf8		5185908	0					
ANR	5186344	ArgumentList	dst		5185908	1					
ANR	5186345	Argument	dst		5185908	0					
ANR	5186346	Identifier	dst		5185908	0					
ANR	5186347	ExpressionStatement	free ( dst )	351:1:6252:6262	5185908	20	True				
ANR	5186348	CallExpression	free ( dst )		5185908	0					
ANR	5186349	Callee	free		5185908	0					
ANR	5186350	Identifier	free		5185908	0					
ANR	5186351	ArgumentList	dst		5185908	1					
ANR	5186352	Argument	dst		5185908	0					
ANR	5186353	Identifier	dst		5185908	0					
ANR	5186354	IfStatement	if ( finaldst )		5185908	21					
ANR	5186355	Condition	finaldst	352:5:6269:6276	5185908	0	True				
ANR	5186356	Identifier	finaldst		5185908	0					
ANR	5186357	CompoundStatement		94:15:1416:1416	5185908	1					
ANR	5186358	ExpressionStatement	* dstlen = strlen ( ( const char * ) finaldst )	353:2:6283:6325	5185908	0	True				
ANR	5186359	AssignmentExpression	* dstlen = strlen ( ( const char * ) finaldst )		5185908	0		=			
ANR	5186360	UnaryOperationExpression	* dstlen		5185908	0					
ANR	5186361	UnaryOperator	*		5185908	0					
ANR	5186362	Identifier	dstlen		5185908	1					
ANR	5186363	CallExpression	strlen ( ( const char * ) finaldst )		5185908	1					
ANR	5186364	Callee	strlen		5185908	0					
ANR	5186365	Identifier	strlen		5185908	0					
ANR	5186366	ArgumentList	( const char * ) finaldst		5185908	1					
ANR	5186367	Argument	( const char * ) finaldst		5185908	0					
ANR	5186368	CastExpression	( const char * ) finaldst		5185908	0					
ANR	5186369	CastTarget	const char *		5185908	0					
ANR	5186370	Identifier	finaldst		5185908	1					
ANR	5186371	ElseStatement	else		5185908	0					
ANR	5186372	CompoundStatement		96:8:1472:1472	5185908	0					
ANR	5186373	ExpressionStatement	"eprintf ( ""ERROR: finaldst is null\\n"" )"	355:2:6339:6376	5185908	0	True				
ANR	5186374	CallExpression	"eprintf ( ""ERROR: finaldst is null\\n"" )"		5185908	0					
ANR	5186375	Callee	eprintf		5185908	0					
ANR	5186376	Identifier	eprintf		5185908	0					
ANR	5186377	ArgumentList	"""ERROR: finaldst is null\\n"""		5185908	1					
ANR	5186378	Argument	"""ERROR: finaldst is null\\n"""		5185908	0					
ANR	5186379	PrimaryExpression	"""ERROR: finaldst is null\\n"""		5185908	0					
ANR	5186380	ReturnStatement	return NULL ;	356:2:6380:6391	5185908	1	True				
ANR	5186381	Identifier	NULL		5185908	0					
ANR	5186382	ReturnStatement	return ( char * ) finaldst ;	358:1:6397:6421	5185908	22	True				
ANR	5186383	CastExpression	( char * ) finaldst		5185908	0					
ANR	5186384	CastTarget	char *		5185908	0					
ANR	5186385	Identifier	finaldst		5185908	1					
ANR	5186386	ReturnType	R_API char *		5185908	1					
ANR	5186387	Identifier	r_punycode_decode		5185908	2					
ANR	5186388	ParameterList	"const char * src , int srclen , int * dstlen"		5185908	3					
ANR	5186389	Parameter	const char * src	259:30:4820:4834	5185908	0	True				
ANR	5186390	ParameterType	const char *		5185908	0					
ANR	5186391	Identifier	src		5185908	1					
ANR	5186392	Parameter	int srclen	259:47:4837:4846	5185908	1	True				
ANR	5186393	ParameterType	int		5185908	0					
ANR	5186394	Identifier	srclen		5185908	1					
ANR	5186395	Parameter	int * dstlen	259:59:4849:4859	5185908	2	True				
ANR	5186396	ParameterType	int *		5185908	0					
ANR	5186397	Identifier	dstlen		5185908	1					
ANR	5186398	CFGEntryNode	ENTRY		5185908		True				
ANR	5186399	CFGExitNode	EXIT		5185908		True				
ANR	5186400	InfiniteForNode	true		5185908		True				
ANR	5186401	Symbol	UT32_MAX		5185908						
ANR	5186402	Symbol	adapt_bias		5185908						
ANR	5186403	Symbol	srclen		5185908						
ANR	5186404	Symbol	dst		5185908						
ANR	5186405	Symbol	di		5185908						
ANR	5186406	Symbol	INITIAL_BIAS		5185908						
ANR	5186407	Symbol	calloc		5185908						
ANR	5186408	Symbol	* dstlen		5185908						
ANR	5186409	Symbol	* src		5185908						
ANR	5186410	Symbol	BASE		5185908						
ANR	5186411	Symbol	* dst		5185908						
ANR	5186412	Symbol	strlen		5185908						
ANR	5186413	Symbol	si		5185908						
ANR	5186414	Symbol	bias		5185908						
ANR	5186415	Symbol	decode_digit		5185908						
ANR	5186416	Symbol	TMAX		5185908						
ANR	5186417	Symbol	utf32toutf8		5185908						
ANR	5186418	Symbol	dstlen		5185908						
ANR	5186419	Symbol	digit		5185908						
ANR	5186420	Symbol	org_i		5185908						
ANR	5186421	Symbol	* si		5185908						
ANR	5186422	Symbol	b		5185908						
ANR	5186423	Symbol	NULL		5185908						
ANR	5186424	Symbol	src		5185908						
ANR	5186425	Symbol	i		5185908						
ANR	5186426	Symbol	k		5185908						
ANR	5186427	Symbol	finaldst		5185908						
ANR	5186428	Symbol	n		5185908						
ANR	5186429	Symbol	p		5185908						
ANR	5186430	Symbol	* i		5185908						
ANR	5186431	Symbol	INITIAL_N		5185908						
ANR	5186432	Symbol	t		5185908						
ANR	5186433	Symbol	w		5185908						
ANR	5186434	Symbol	TMIN		5185908						
ANR	5186435	Symbol	* p		5185908						
