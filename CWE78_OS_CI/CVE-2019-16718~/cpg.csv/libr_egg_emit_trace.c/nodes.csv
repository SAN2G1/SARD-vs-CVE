command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	4783144	File	data/converged/CVE-2019-16718~_radare2/libr_egg_emit_trace.c								
ANR	4783145	DeclStmt									
ANR	4783146	Decl							char	char * [ ]	regs
ANR	4783147	Function	emit_init	19:0:347:395							
ANR	4783148	FunctionDef	emit_init (REgg * egg)		4783147	0					
ANR	4783149	CompoundStatement		19:34:381:395	4783147	0					
ANR	4783150	ReturnType	static void		4783147	1					
ANR	4783151	Identifier	emit_init		4783147	2					
ANR	4783152	ParameterList	REgg * egg		4783147	3					
ANR	4783153	Parameter	REgg * egg	19:23:370:378	4783147	0	True				
ANR	4783154	ParameterType	REgg *		4783147	0					
ANR	4783155	Identifier	egg		4783147	1					
ANR	4783156	CFGEntryNode	ENTRY		4783147		True				
ANR	4783157	CFGExitNode	EXIT		4783147		True				
ANR	4783158	Symbol	egg		4783147						
ANR	4783159	Function	emit_syscall	23:0:398:538							
ANR	4783160	FunctionDef	"emit_syscall (REgg * egg , int num)"		4783159	0					
ANR	4783161	CompoundStatement		23:47:445:538	4783159	0					
ANR	4783162	IdentifierDeclStatement	char buf [ 32 ] ;	24:1:448:460	4783159	0	True				
ANR	4783163	IdentifierDecl	buf [ 32 ]		4783159	0					
ANR	4783164	IdentifierDeclType	char [ 32 ]		4783159	0					
ANR	4783165	Identifier	buf		4783159	1					
ANR	4783166	PrimaryExpression	32		4783159	2					
ANR	4783167	ExpressionStatement	"snprintf ( buf , sizeof ( buf ) , ""syscall (%d)\\n"" , num )"	25:1:463:514	4783159	1	True				
ANR	4783168	CallExpression	"snprintf ( buf , sizeof ( buf ) , ""syscall (%d)\\n"" , num )"		4783159	0					
ANR	4783169	Callee	snprintf		4783159	0					
ANR	4783170	Identifier	snprintf		4783159	0					
ANR	4783171	ArgumentList	buf		4783159	1					
ANR	4783172	Argument	buf		4783159	0					
ANR	4783173	Identifier	buf		4783159	0					
ANR	4783174	Argument	sizeof ( buf )		4783159	1					
ANR	4783175	SizeofExpression	sizeof ( buf )		4783159	0					
ANR	4783176	Sizeof	sizeof		4783159	0					
ANR	4783177	SizeofOperand	buf		4783159	1					
ANR	4783178	Argument	"""syscall (%d)\\n"""		4783159	2					
ANR	4783179	PrimaryExpression	"""syscall (%d)\\n"""		4783159	0					
ANR	4783180	Argument	num		4783159	3					
ANR	4783181	Identifier	num		4783159	0					
ANR	4783182	ReturnStatement	return strdup ( buf ) ;	26:1:517:536	4783159	2	True				
ANR	4783183	CallExpression	strdup ( buf )		4783159	0					
ANR	4783184	Callee	strdup		4783159	0					
ANR	4783185	Identifier	strdup		4783159	0					
ANR	4783186	ArgumentList	buf		4783159	1					
ANR	4783187	Argument	buf		4783159	0					
ANR	4783188	Identifier	buf		4783159	0					
ANR	4783189	ReturnType	static char *		4783159	1					
ANR	4783190	Identifier	emit_syscall		4783159	2					
ANR	4783191	ParameterList	"REgg * egg , int num"		4783159	3					
ANR	4783192	Parameter	REgg * egg	23:27:425:433	4783159	0	True				
ANR	4783193	ParameterType	REgg *		4783159	0					
ANR	4783194	Identifier	egg		4783159	1					
ANR	4783195	Parameter	int num	23:38:436:442	4783159	1	True				
ANR	4783196	ParameterType	int		4783159	0					
ANR	4783197	Identifier	num		4783159	1					
ANR	4783198	CFGEntryNode	ENTRY		4783159		True				
ANR	4783199	CFGExitNode	EXIT		4783159		True				
ANR	4783200	Symbol	buf		4783159						
ANR	4783201	Symbol	egg		4783159						
ANR	4783202	Symbol	num		4783159						
ANR	4783203	Symbol	strdup		4783159						
ANR	4783204	Function	emit_frame	29:0:541:627							
ANR	4783205	FunctionDef	"emit_frame (REgg * egg , int sz)"		4783204	0					
ANR	4783206	CompoundStatement		29:43:584:627	4783204	0					
ANR	4783207	ExpressionStatement	"r_egg_printf ( egg , ""frame (%d)\\n"" , sz )"	30:1:587:625	4783204	0	True				
ANR	4783208	CallExpression	"r_egg_printf ( egg , ""frame (%d)\\n"" , sz )"		4783204	0					
ANR	4783209	Callee	r_egg_printf		4783204	0					
ANR	4783210	Identifier	r_egg_printf		4783204	0					
ANR	4783211	ArgumentList	egg		4783204	1					
ANR	4783212	Argument	egg		4783204	0					
ANR	4783213	Identifier	egg		4783204	0					
ANR	4783214	Argument	"""frame (%d)\\n"""		4783204	1					
ANR	4783215	PrimaryExpression	"""frame (%d)\\n"""		4783204	0					
ANR	4783216	Argument	sz		4783204	2					
ANR	4783217	Identifier	sz		4783204	0					
ANR	4783218	ReturnType	static void		4783204	1					
ANR	4783219	Identifier	emit_frame		4783204	2					
ANR	4783220	ParameterList	"REgg * egg , int sz"		4783204	3					
ANR	4783221	Parameter	REgg * egg	29:24:565:573	4783204	0	True				
ANR	4783222	ParameterType	REgg *		4783204	0					
ANR	4783223	Identifier	egg		4783204	1					
ANR	4783224	Parameter	int sz	29:35:576:581	4783204	1	True				
ANR	4783225	ParameterType	int		4783204	0					
ANR	4783226	Identifier	sz		4783204	1					
ANR	4783227	CFGEntryNode	ENTRY		4783204		True				
ANR	4783228	CFGExitNode	EXIT		4783204		True				
ANR	4783229	Symbol	egg		4783204						
ANR	4783230	Symbol	sz		4783204						
ANR	4783231	Function	emit_frame_end	33:0:630:742							
ANR	4783232	FunctionDef	"emit_frame_end (REgg * egg , int sz , int ctx)"		4783231	0					
ANR	4783233	CompoundStatement		33:56:686:742	4783231	0					
ANR	4783234	ExpressionStatement	"r_egg_printf ( egg , ""frame_end (%d, %d)\\n"" , sz , ctx )"	34:1:689:740	4783231	0	True				
ANR	4783235	CallExpression	"r_egg_printf ( egg , ""frame_end (%d, %d)\\n"" , sz , ctx )"		4783231	0					
ANR	4783236	Callee	r_egg_printf		4783231	0					
ANR	4783237	Identifier	r_egg_printf		4783231	0					
ANR	4783238	ArgumentList	egg		4783231	1					
ANR	4783239	Argument	egg		4783231	0					
ANR	4783240	Identifier	egg		4783231	0					
ANR	4783241	Argument	"""frame_end (%d, %d)\\n"""		4783231	1					
ANR	4783242	PrimaryExpression	"""frame_end (%d, %d)\\n"""		4783231	0					
ANR	4783243	Argument	sz		4783231	2					
ANR	4783244	Identifier	sz		4783231	0					
ANR	4783245	Argument	ctx		4783231	3					
ANR	4783246	Identifier	ctx		4783231	0					
ANR	4783247	ReturnType	static void		4783231	1					
ANR	4783248	Identifier	emit_frame_end		4783231	2					
ANR	4783249	ParameterList	"REgg * egg , int sz , int ctx"		4783231	3					
ANR	4783250	Parameter	REgg * egg	33:28:658:666	4783231	0	True				
ANR	4783251	ParameterType	REgg *		4783231	0					
ANR	4783252	Identifier	egg		4783231	1					
ANR	4783253	Parameter	int sz	33:39:669:674	4783231	1	True				
ANR	4783254	ParameterType	int		4783231	0					
ANR	4783255	Identifier	sz		4783231	1					
ANR	4783256	Parameter	int ctx	33:47:677:683	4783231	2	True				
ANR	4783257	ParameterType	int		4783231	0					
ANR	4783258	Identifier	ctx		4783231	1					
ANR	4783259	CFGEntryNode	ENTRY		4783231		True				
ANR	4783260	CFGExitNode	EXIT		4783231		True				
ANR	4783261	Symbol	egg		4783231						
ANR	4783262	Symbol	ctx		4783231						
ANR	4783263	Symbol	sz		4783231						
ANR	4783264	Function	emit_comment	37:0:745:947							
ANR	4783265	FunctionDef	"emit_comment (REgg * egg , const char * fmt)"		4783264	0					
ANR	4783266	CompoundStatement		37:58:803:947	4783264	0					
ANR	4783267	IdentifierDeclStatement	va_list ap ;	38:1:806:816	4783264	0	True				
ANR	4783268	IdentifierDecl	ap		4783264	0					
ANR	4783269	IdentifierDeclType	va_list		4783264	0					
ANR	4783270	Identifier	ap		4783264	1					
ANR	4783271	IdentifierDeclStatement	char buf [ 1024 ] ;	39:1:819:833	4783264	1	True				
ANR	4783272	IdentifierDecl	buf [ 1024 ]		4783264	0					
ANR	4783273	IdentifierDeclType	char [ 1024 ]		4783264	0					
ANR	4783274	Identifier	buf		4783264	1					
ANR	4783275	PrimaryExpression	1024		4783264	2					
ANR	4783276	ExpressionStatement	"va_start ( ap , fmt )"	40:1:836:854	4783264	2	True				
ANR	4783277	CallExpression	"va_start ( ap , fmt )"		4783264	0					
ANR	4783278	Callee	va_start		4783264	0					
ANR	4783279	Identifier	va_start		4783264	0					
ANR	4783280	ArgumentList	ap		4783264	1					
ANR	4783281	Argument	ap		4783264	0					
ANR	4783282	Identifier	ap		4783264	0					
ANR	4783283	Argument	fmt		4783264	1					
ANR	4783284	Identifier	fmt		4783264	0					
ANR	4783285	ExpressionStatement	"vsnprintf ( buf , sizeof ( buf ) , fmt , ap )"	41:1:857:895	4783264	3	True				
ANR	4783286	CallExpression	"vsnprintf ( buf , sizeof ( buf ) , fmt , ap )"		4783264	0					
ANR	4783287	Callee	vsnprintf		4783264	0					
ANR	4783288	Identifier	vsnprintf		4783264	0					
ANR	4783289	ArgumentList	buf		4783264	1					
ANR	4783290	Argument	buf		4783264	0					
ANR	4783291	Identifier	buf		4783264	0					
ANR	4783292	Argument	sizeof ( buf )		4783264	1					
ANR	4783293	SizeofExpression	sizeof ( buf )		4783264	0					
ANR	4783294	Sizeof	sizeof		4783264	0					
ANR	4783295	SizeofOperand	buf		4783264	1					
ANR	4783296	Argument	fmt		4783264	2					
ANR	4783297	Identifier	fmt		4783264	0					
ANR	4783298	Argument	ap		4783264	3					
ANR	4783299	Identifier	ap		4783264	0					
ANR	4783300	ExpressionStatement	"r_egg_printf ( egg , ""# %s\\n"" , buf )"	42:1:898:931	4783264	4	True				
ANR	4783301	CallExpression	"r_egg_printf ( egg , ""# %s\\n"" , buf )"		4783264	0					
ANR	4783302	Callee	r_egg_printf		4783264	0					
ANR	4783303	Identifier	r_egg_printf		4783264	0					
ANR	4783304	ArgumentList	egg		4783264	1					
ANR	4783305	Argument	egg		4783264	0					
ANR	4783306	Identifier	egg		4783264	0					
ANR	4783307	Argument	"""# %s\\n"""		4783264	1					
ANR	4783308	PrimaryExpression	"""# %s\\n"""		4783264	0					
ANR	4783309	Argument	buf		4783264	2					
ANR	4783310	Identifier	buf		4783264	0					
ANR	4783311	ExpressionStatement	va_end ( ap )	43:1:934:945	4783264	5	True				
ANR	4783312	CallExpression	va_end ( ap )		4783264	0					
ANR	4783313	Callee	va_end		4783264	0					
ANR	4783314	Identifier	va_end		4783264	0					
ANR	4783315	ArgumentList	ap		4783264	1					
ANR	4783316	Argument	ap		4783264	0					
ANR	4783317	Identifier	ap		4783264	0					
ANR	4783318	ReturnType	static void		4783264	1					
ANR	4783319	Identifier	emit_comment		4783264	2					
ANR	4783320	ParameterList	"REgg * egg , const char * fmt"		4783264	3					
ANR	4783321	Parameter	REgg * egg	37:25:770:778	4783264	0	True				
ANR	4783322	ParameterType	REgg *		4783264	0					
ANR	4783323	Identifier	egg		4783264	1					
ANR	4783324	Parameter	const char * fmt	37:36:781:795	4783264	1	True				
ANR	4783325	ParameterType	const char *		4783264	0					
ANR	4783326	Identifier	fmt		4783264	1					
ANR	4783327	CFGEntryNode	ENTRY		4783264		True				
ANR	4783328	CFGExitNode	EXIT		4783264		True				
ANR	4783329	Symbol	buf		4783264						
ANR	4783330	Symbol	egg		4783264						
ANR	4783331	Symbol	fmt		4783264						
ANR	4783332	Symbol	ap		4783264						
ANR	4783333	Function	emit_equ	46:0:950:1072							
ANR	4783334	FunctionDef	"emit_equ (REgg * egg , const char * key , const char * value)"		4783333	0					
ANR	4783335	CompoundStatement		46:69:1019:1072	4783333	0					
ANR	4783336	ExpressionStatement	"r_egg_printf ( egg , ""equ (%s, %s)\\n"" , key , value )"	47:1:1022:1070	4783333	0	True				
ANR	4783337	CallExpression	"r_egg_printf ( egg , ""equ (%s, %s)\\n"" , key , value )"		4783333	0					
ANR	4783338	Callee	r_egg_printf		4783333	0					
ANR	4783339	Identifier	r_egg_printf		4783333	0					
ANR	4783340	ArgumentList	egg		4783333	1					
ANR	4783341	Argument	egg		4783333	0					
ANR	4783342	Identifier	egg		4783333	0					
ANR	4783343	Argument	"""equ (%s, %s)\\n"""		4783333	1					
ANR	4783344	PrimaryExpression	"""equ (%s, %s)\\n"""		4783333	0					
ANR	4783345	Argument	key		4783333	2					
ANR	4783346	Identifier	key		4783333	0					
ANR	4783347	Argument	value		4783333	3					
ANR	4783348	Identifier	value		4783333	0					
ANR	4783349	ReturnType	static void		4783333	1					
ANR	4783350	Identifier	emit_equ		4783333	2					
ANR	4783351	ParameterList	"REgg * egg , const char * key , const char * value"		4783333	3					
ANR	4783352	Parameter	REgg * egg	46:22:972:980	4783333	0	True				
ANR	4783353	ParameterType	REgg *		4783333	0					
ANR	4783354	Identifier	egg		4783333	1					
ANR	4783355	Parameter	const char * key	46:33:983:997	4783333	1	True				
ANR	4783356	ParameterType	const char *		4783333	0					
ANR	4783357	Identifier	key		4783333	1					
ANR	4783358	Parameter	const char * value	46:50:1000:1016	4783333	2	True				
ANR	4783359	ParameterType	const char *		4783333	0					
ANR	4783360	Identifier	value		4783333	1					
ANR	4783361	CFGEntryNode	ENTRY		4783333		True				
ANR	4783362	CFGExitNode	EXIT		4783333		True				
ANR	4783363	Symbol	egg		4783333						
ANR	4783364	Symbol	value		4783333						
ANR	4783365	Symbol	key		4783333						
ANR	4783366	Function	emit_syscall_args	50:0:1075:1180							
ANR	4783367	FunctionDef	"emit_syscall_args (REgg * egg , int nargs)"		4783366	0					
ANR	4783368	CompoundStatement		50:52:1127:1180	4783366	0					
ANR	4783369	ExpressionStatement	"r_egg_printf ( egg , ""syscall_args (%d)\\n"" , nargs )"	51:1:1130:1178	4783366	0	True				
ANR	4783370	CallExpression	"r_egg_printf ( egg , ""syscall_args (%d)\\n"" , nargs )"		4783366	0					
ANR	4783371	Callee	r_egg_printf		4783366	0					
ANR	4783372	Identifier	r_egg_printf		4783366	0					
ANR	4783373	ArgumentList	egg		4783366	1					
ANR	4783374	Argument	egg		4783366	0					
ANR	4783375	Identifier	egg		4783366	0					
ANR	4783376	Argument	"""syscall_args (%d)\\n"""		4783366	1					
ANR	4783377	PrimaryExpression	"""syscall_args (%d)\\n"""		4783366	0					
ANR	4783378	Argument	nargs		4783366	2					
ANR	4783379	Identifier	nargs		4783366	0					
ANR	4783380	ReturnType	static void		4783366	1					
ANR	4783381	Identifier	emit_syscall_args		4783366	2					
ANR	4783382	ParameterList	"REgg * egg , int nargs"		4783366	3					
ANR	4783383	Parameter	REgg * egg	50:30:1105:1113	4783366	0	True				
ANR	4783384	ParameterType	REgg *		4783366	0					
ANR	4783385	Identifier	egg		4783366	1					
ANR	4783386	Parameter	int nargs	50:41:1116:1124	4783366	1	True				
ANR	4783387	ParameterType	int		4783366	0					
ANR	4783388	Identifier	nargs		4783366	1					
ANR	4783389	CFGEntryNode	ENTRY		4783366		True				
ANR	4783390	CFGExitNode	EXIT		4783366		True				
ANR	4783391	Symbol	nargs		4783366						
ANR	4783392	Symbol	egg		4783366						
ANR	4783393	Function	emit_set_string	54:0:1183:1350							
ANR	4783394	FunctionDef	"emit_set_string (REgg * egg , const char * dstvar , const char * str , int j)"		4783393	0					
ANR	4783395	CompoundStatement		54:83:1266:1350	4783393	0					
ANR	4783396	ExpressionStatement	"r_egg_printf ( egg , ""set (\\""%s\\"", \\""%s\\"", %d)\\n"" , dstvar , str , j )"	56:1:1284:1348	4783393	0	True				
ANR	4783397	CallExpression	"r_egg_printf ( egg , ""set (\\""%s\\"", \\""%s\\"", %d)\\n"" , dstvar , str , j )"		4783393	0					
ANR	4783398	Callee	r_egg_printf		4783393	0					
ANR	4783399	Identifier	r_egg_printf		4783393	0					
ANR	4783400	ArgumentList	egg		4783393	1					
ANR	4783401	Argument	egg		4783393	0					
ANR	4783402	Identifier	egg		4783393	0					
ANR	4783403	Argument	"""set (\\""%s\\"", \\""%s\\"", %d)\\n"""		4783393	1					
ANR	4783404	PrimaryExpression	"""set (\\""%s\\"", \\""%s\\"", %d)\\n"""		4783393	0					
ANR	4783405	Argument	dstvar		4783393	2					
ANR	4783406	Identifier	dstvar		4783393	0					
ANR	4783407	Argument	str		4783393	3					
ANR	4783408	Identifier	str		4783393	0					
ANR	4783409	Argument	j		4783393	4					
ANR	4783410	Identifier	j		4783393	0					
ANR	4783411	ReturnType	static void		4783393	1					
ANR	4783412	Identifier	emit_set_string		4783393	2					
ANR	4783413	ParameterList	"REgg * egg , const char * dstvar , const char * str , int j"		4783393	3					
ANR	4783414	Parameter	REgg * egg	54:28:1211:1219	4783393	0	True				
ANR	4783415	ParameterType	REgg *		4783393	0					
ANR	4783416	Identifier	egg		4783393	1					
ANR	4783417	Parameter	const char * dstvar	54:39:1222:1239	4783393	1	True				
ANR	4783418	ParameterType	const char *		4783393	0					
ANR	4783419	Identifier	dstvar		4783393	1					
ANR	4783420	Parameter	const char * str	54:59:1242:1256	4783393	2	True				
ANR	4783421	ParameterType	const char *		4783393	0					
ANR	4783422	Identifier	str		4783393	1					
ANR	4783423	Parameter	int j	54:76:1259:1263	4783393	3	True				
ANR	4783424	ParameterType	int		4783393	0					
ANR	4783425	Identifier	j		4783393	1					
ANR	4783426	CFGEntryNode	ENTRY		4783393		True				
ANR	4783427	CFGExitNode	EXIT		4783393		True				
ANR	4783428	Symbol	str		4783393						
ANR	4783429	Symbol	egg		4783393						
ANR	4783430	Symbol	j		4783393						
ANR	4783431	Symbol	dstvar		4783393						
ANR	4783432	Function	emit_call	59:0:1353:1525							
ANR	4783433	FunctionDef	"emit_call (REgg * egg , const char * str , int atr)"		4783432	0					
ANR	4783434	CompoundStatement		59:59:1412:1525	4783432	0					
ANR	4783435	IfStatement	if ( atr )		4783432	0					
ANR	4783436	Condition	atr	60:5:1419:1421	4783432	0	True				
ANR	4783437	Identifier	atr		4783432	0					
ANR	4783438	CompoundStatement		2:10:11:11	4783432	1					
ANR	4783439	ExpressionStatement	"r_egg_printf ( egg , ""call ([%s])\\n"" , str )"	61:2:1428:1468	4783432	0	True				
ANR	4783440	CallExpression	"r_egg_printf ( egg , ""call ([%s])\\n"" , str )"		4783432	0					
ANR	4783441	Callee	r_egg_printf		4783432	0					
ANR	4783442	Identifier	r_egg_printf		4783432	0					
ANR	4783443	ArgumentList	egg		4783432	1					
ANR	4783444	Argument	egg		4783432	0					
ANR	4783445	Identifier	egg		4783432	0					
ANR	4783446	Argument	"""call ([%s])\\n"""		4783432	1					
ANR	4783447	PrimaryExpression	"""call ([%s])\\n"""		4783432	0					
ANR	4783448	Argument	str		4783432	2					
ANR	4783449	Identifier	str		4783432	0					
ANR	4783450	ElseStatement	else		4783432	0					
ANR	4783451	CompoundStatement		4:8:65:65	4783432	0					
ANR	4783452	ExpressionStatement	"r_egg_printf ( egg , ""call (%s)\\n"" , str )"	63:2:1482:1520	4783432	0	True				
ANR	4783453	CallExpression	"r_egg_printf ( egg , ""call (%s)\\n"" , str )"		4783432	0					
ANR	4783454	Callee	r_egg_printf		4783432	0					
ANR	4783455	Identifier	r_egg_printf		4783432	0					
ANR	4783456	ArgumentList	egg		4783432	1					
ANR	4783457	Argument	egg		4783432	0					
ANR	4783458	Identifier	egg		4783432	0					
ANR	4783459	Argument	"""call (%s)\\n"""		4783432	1					
ANR	4783460	PrimaryExpression	"""call (%s)\\n"""		4783432	0					
ANR	4783461	Argument	str		4783432	2					
ANR	4783462	Identifier	str		4783432	0					
ANR	4783463	ReturnType	static void		4783432	1					
ANR	4783464	Identifier	emit_call		4783432	2					
ANR	4783465	ParameterList	"REgg * egg , const char * str , int atr"		4783432	3					
ANR	4783466	Parameter	REgg * egg	59:22:1375:1383	4783432	0	True				
ANR	4783467	ParameterType	REgg *		4783432	0					
ANR	4783468	Identifier	egg		4783432	1					
ANR	4783469	Parameter	const char * str	59:33:1386:1400	4783432	1	True				
ANR	4783470	ParameterType	const char *		4783432	0					
ANR	4783471	Identifier	str		4783432	1					
ANR	4783472	Parameter	int atr	59:50:1403:1409	4783432	2	True				
ANR	4783473	ParameterType	int		4783432	0					
ANR	4783474	Identifier	atr		4783432	1					
ANR	4783475	CFGEntryNode	ENTRY		4783432		True				
ANR	4783476	CFGExitNode	EXIT		4783432		True				
ANR	4783477	Symbol	str		4783432						
ANR	4783478	Symbol	egg		4783432						
ANR	4783479	Symbol	atr		4783432						
ANR	4783480	Function	emit_jmp	67:0:1528:1699							
ANR	4783481	FunctionDef	"emit_jmp (REgg * egg , const char * str , int atr)"		4783480	0					
ANR	4783482	CompoundStatement		67:58:1586:1699	4783480	0					
ANR	4783483	IfStatement	if ( atr )		4783480	0					
ANR	4783484	Condition	atr	68:5:1593:1595	4783480	0	True				
ANR	4783485	Identifier	atr		4783480	0					
ANR	4783486	CompoundStatement		2:10:11:11	4783480	1					
ANR	4783487	ExpressionStatement	"r_egg_printf ( egg , ""goto ([%s])\\n"" , str )"	69:2:1602:1642	4783480	0	True				
ANR	4783488	CallExpression	"r_egg_printf ( egg , ""goto ([%s])\\n"" , str )"		4783480	0					
ANR	4783489	Callee	r_egg_printf		4783480	0					
ANR	4783490	Identifier	r_egg_printf		4783480	0					
ANR	4783491	ArgumentList	egg		4783480	1					
ANR	4783492	Argument	egg		4783480	0					
ANR	4783493	Identifier	egg		4783480	0					
ANR	4783494	Argument	"""goto ([%s])\\n"""		4783480	1					
ANR	4783495	PrimaryExpression	"""goto ([%s])\\n"""		4783480	0					
ANR	4783496	Argument	str		4783480	2					
ANR	4783497	Identifier	str		4783480	0					
ANR	4783498	ElseStatement	else		4783480	0					
ANR	4783499	CompoundStatement		4:8:65:65	4783480	0					
ANR	4783500	ExpressionStatement	"r_egg_printf ( egg , ""goto (%s)\\n"" , str )"	71:2:1656:1694	4783480	0	True				
ANR	4783501	CallExpression	"r_egg_printf ( egg , ""goto (%s)\\n"" , str )"		4783480	0					
ANR	4783502	Callee	r_egg_printf		4783480	0					
ANR	4783503	Identifier	r_egg_printf		4783480	0					
ANR	4783504	ArgumentList	egg		4783480	1					
ANR	4783505	Argument	egg		4783480	0					
ANR	4783506	Identifier	egg		4783480	0					
ANR	4783507	Argument	"""goto (%s)\\n"""		4783480	1					
ANR	4783508	PrimaryExpression	"""goto (%s)\\n"""		4783480	0					
ANR	4783509	Argument	str		4783480	2					
ANR	4783510	Identifier	str		4783480	0					
ANR	4783511	ReturnType	static void		4783480	1					
ANR	4783512	Identifier	emit_jmp		4783480	2					
ANR	4783513	ParameterList	"REgg * egg , const char * str , int atr"		4783480	3					
ANR	4783514	Parameter	REgg * egg	67:21:1549:1557	4783480	0	True				
ANR	4783515	ParameterType	REgg *		4783480	0					
ANR	4783516	Identifier	egg		4783480	1					
ANR	4783517	Parameter	const char * str	67:32:1560:1574	4783480	1	True				
ANR	4783518	ParameterType	const char *		4783480	0					
ANR	4783519	Identifier	str		4783480	1					
ANR	4783520	Parameter	int atr	67:49:1577:1583	4783480	2	True				
ANR	4783521	ParameterType	int		4783480	0					
ANR	4783522	Identifier	atr		4783480	1					
ANR	4783523	CFGEntryNode	ENTRY		4783480		True				
ANR	4783524	CFGExitNode	EXIT		4783480		True				
ANR	4783525	Symbol	str		4783480						
ANR	4783526	Symbol	egg		4783480						
ANR	4783527	Symbol	atr		4783480						
ANR	4783528	Function	emit_arg	75:0:1702:1854							
ANR	4783529	FunctionDef	"emit_arg (REgg * egg , int xs , int num , const char * str)"		4783528	0					
ANR	4783530	CompoundStatement		75:67:1769:1854	4783528	0					
ANR	4783531	ExpressionStatement	"r_egg_printf ( egg , ""arg.%d.%d=%s\\n"" , xs , num , str )"	77:1:1802:1852	4783528	0	True				
ANR	4783532	CallExpression	"r_egg_printf ( egg , ""arg.%d.%d=%s\\n"" , xs , num , str )"		4783528	0					
ANR	4783533	Callee	r_egg_printf		4783528	0					
ANR	4783534	Identifier	r_egg_printf		4783528	0					
ANR	4783535	ArgumentList	egg		4783528	1					
ANR	4783536	Argument	egg		4783528	0					
ANR	4783537	Identifier	egg		4783528	0					
ANR	4783538	Argument	"""arg.%d.%d=%s\\n"""		4783528	1					
ANR	4783539	PrimaryExpression	"""arg.%d.%d=%s\\n"""		4783528	0					
ANR	4783540	Argument	xs		4783528	2					
ANR	4783541	Identifier	xs		4783528	0					
ANR	4783542	Argument	num		4783528	3					
ANR	4783543	Identifier	num		4783528	0					
ANR	4783544	Argument	str		4783528	4					
ANR	4783545	Identifier	str		4783528	0					
ANR	4783546	ReturnType	static void		4783528	1					
ANR	4783547	Identifier	emit_arg		4783528	2					
ANR	4783548	ParameterList	"REgg * egg , int xs , int num , const char * str"		4783528	3					
ANR	4783549	Parameter	REgg * egg	75:22:1724:1732	4783528	0	True				
ANR	4783550	ParameterType	REgg *		4783528	0					
ANR	4783551	Identifier	egg		4783528	1					
ANR	4783552	Parameter	int xs	75:33:1735:1740	4783528	1	True				
ANR	4783553	ParameterType	int		4783528	0					
ANR	4783554	Identifier	xs		4783528	1					
ANR	4783555	Parameter	int num	75:41:1743:1749	4783528	2	True				
ANR	4783556	ParameterType	int		4783528	0					
ANR	4783557	Identifier	num		4783528	1					
ANR	4783558	Parameter	const char * str	75:50:1752:1766	4783528	3	True				
ANR	4783559	ParameterType	const char *		4783528	0					
ANR	4783560	Identifier	str		4783528	1					
ANR	4783561	CFGEntryNode	ENTRY		4783528		True				
ANR	4783562	CFGExitNode	EXIT		4783528		True				
ANR	4783563	Symbol	str		4783528						
ANR	4783564	Symbol	egg		4783528						
ANR	4783565	Symbol	num		4783528						
ANR	4783566	Symbol	xs		4783528						
ANR	4783567	Function	emit_get_result	80:0:1857:1962							
ANR	4783568	FunctionDef	"emit_get_result (REgg * egg , const char * ocn)"		4783567	0					
ANR	4783569	CompoundStatement		80:56:1913:1962	4783567	0					
ANR	4783570	ExpressionStatement	"r_egg_printf ( egg , ""get_result (%s)\\n"" , ocn )"	81:1:1916:1960	4783567	0	True				
ANR	4783571	CallExpression	"r_egg_printf ( egg , ""get_result (%s)\\n"" , ocn )"		4783567	0					
ANR	4783572	Callee	r_egg_printf		4783567	0					
ANR	4783573	Identifier	r_egg_printf		4783567	0					
ANR	4783574	ArgumentList	egg		4783567	1					
ANR	4783575	Argument	egg		4783567	0					
ANR	4783576	Identifier	egg		4783567	0					
ANR	4783577	Argument	"""get_result (%s)\\n"""		4783567	1					
ANR	4783578	PrimaryExpression	"""get_result (%s)\\n"""		4783567	0					
ANR	4783579	Argument	ocn		4783567	2					
ANR	4783580	Identifier	ocn		4783567	0					
ANR	4783581	ReturnType	static void		4783567	1					
ANR	4783582	Identifier	emit_get_result		4783567	2					
ANR	4783583	ParameterList	"REgg * egg , const char * ocn"		4783567	3					
ANR	4783584	Parameter	REgg * egg	80:28:1885:1893	4783567	0	True				
ANR	4783585	ParameterType	REgg *		4783567	0					
ANR	4783586	Identifier	egg		4783567	1					
ANR	4783587	Parameter	const char * ocn	80:39:1896:1910	4783567	1	True				
ANR	4783588	ParameterType	const char *		4783567	0					
ANR	4783589	Identifier	ocn		4783567	1					
ANR	4783590	CFGEntryNode	ENTRY		4783567		True				
ANR	4783591	CFGExitNode	EXIT		4783567		True				
ANR	4783592	Symbol	egg		4783567						
ANR	4783593	Symbol	ocn		4783567						
ANR	4783594	Function	emit_restore_stack	84:0:1965:2182							
ANR	4783595	FunctionDef	"emit_restore_stack (REgg * egg , int size)"		4783594	0					
ANR	4783596	CompoundStatement		84:53:2018:2182	4783594	0					
ANR	4783597	ExpressionStatement	"r_egg_printf ( egg , ""restore_stack (%d)\\n"" , size )"	85:1:2021:2069	4783594	0	True				
ANR	4783598	CallExpression	"r_egg_printf ( egg , ""restore_stack (%d)\\n"" , size )"		4783594	0					
ANR	4783599	Callee	r_egg_printf		4783594	0					
ANR	4783600	Identifier	r_egg_printf		4783594	0					
ANR	4783601	ArgumentList	egg		4783594	1					
ANR	4783602	Argument	egg		4783594	0					
ANR	4783603	Identifier	egg		4783594	0					
ANR	4783604	Argument	"""restore_stack (%d)\\n"""		4783594	1					
ANR	4783605	PrimaryExpression	"""restore_stack (%d)\\n"""		4783594	0					
ANR	4783606	Argument	size		4783594	2					
ANR	4783607	Identifier	size		4783594	0					
ANR	4783608	ReturnType	static void		4783594	1					
ANR	4783609	Identifier	emit_restore_stack		4783594	2					
ANR	4783610	ParameterList	"REgg * egg , int size"		4783594	3					
ANR	4783611	Parameter	REgg * egg	84:32:1997:2005	4783594	0	True				
ANR	4783612	ParameterType	REgg *		4783594	0					
ANR	4783613	Identifier	egg		4783594	1					
ANR	4783614	Parameter	int size	84:43:2008:2015	4783594	1	True				
ANR	4783615	ParameterType	int		4783594	0					
ANR	4783616	Identifier	size		4783594	1					
ANR	4783617	CFGEntryNode	ENTRY		4783594		True				
ANR	4783618	CFGExitNode	EXIT		4783594		True				
ANR	4783619	Symbol	egg		4783594						
ANR	4783620	Symbol	size		4783594						
ANR	4783621	Function	emit_get_while_end	90:0:2185:2355							
ANR	4783622	FunctionDef	"emit_get_while_end (REgg * egg , char * str , const char * ctxpush , const char * label)"		4783621	0					
ANR	4783623	CompoundStatement		90:94:2279:2355	4783621	0					
ANR	4783624	ExpressionStatement	"r_egg_printf ( egg , ""get_while_end (%s, %s, %s)\\n"" , str , ctxpush , label )"	91:1:2282:2353	4783621	0	True				
ANR	4783625	CallExpression	"r_egg_printf ( egg , ""get_while_end (%s, %s, %s)\\n"" , str , ctxpush , label )"		4783621	0					
ANR	4783626	Callee	r_egg_printf		4783621	0					
ANR	4783627	Identifier	r_egg_printf		4783621	0					
ANR	4783628	ArgumentList	egg		4783621	1					
ANR	4783629	Argument	egg		4783621	0					
ANR	4783630	Identifier	egg		4783621	0					
ANR	4783631	Argument	"""get_while_end (%s, %s, %s)\\n"""		4783621	1					
ANR	4783632	PrimaryExpression	"""get_while_end (%s, %s, %s)\\n"""		4783621	0					
ANR	4783633	Argument	str		4783621	2					
ANR	4783634	Identifier	str		4783621	0					
ANR	4783635	Argument	ctxpush		4783621	3					
ANR	4783636	Identifier	ctxpush		4783621	0					
ANR	4783637	Argument	label		4783621	4					
ANR	4783638	Identifier	label		4783621	0					
ANR	4783639	ReturnType	static void		4783621	1					
ANR	4783640	Identifier	emit_get_while_end		4783621	2					
ANR	4783641	ParameterList	"REgg * egg , char * str , const char * ctxpush , const char * label"		4783621	3					
ANR	4783642	Parameter	REgg * egg	90:32:2217:2225	4783621	0	True				
ANR	4783643	ParameterType	REgg *		4783621	0					
ANR	4783644	Identifier	egg		4783621	1					
ANR	4783645	Parameter	char * str	90:43:2228:2236	4783621	1	True				
ANR	4783646	ParameterType	char *		4783621	0					
ANR	4783647	Identifier	str		4783621	1					
ANR	4783648	Parameter	const char * ctxpush	90:54:2239:2257	4783621	2	True				
ANR	4783649	ParameterType	const char *		4783621	0					
ANR	4783650	Identifier	ctxpush		4783621	1					
ANR	4783651	Parameter	const char * label	90:75:2260:2276	4783621	3	True				
ANR	4783652	ParameterType	const char *		4783621	0					
ANR	4783653	Identifier	label		4783621	1					
ANR	4783654	CFGEntryNode	ENTRY		4783621		True				
ANR	4783655	CFGExitNode	EXIT		4783621		True				
ANR	4783656	Symbol	str		4783621						
ANR	4783657	Symbol	egg		4783621						
ANR	4783658	Symbol	ctxpush		4783621						
ANR	4783659	Symbol	label		4783621						
ANR	4783660	Function	emit_while_end	94:0:2358:2474							
ANR	4783661	FunctionDef	"emit_while_end (REgg * egg , const char * labelback)"		4783660	0					
ANR	4783662	CompoundStatement		94:62:2420:2474	4783660	0					
ANR	4783663	ExpressionStatement	"r_egg_printf ( egg , ""while_end (%s)\\n"" , labelback )"	95:1:2423:2472	4783660	0	True				
ANR	4783664	CallExpression	"r_egg_printf ( egg , ""while_end (%s)\\n"" , labelback )"		4783660	0					
ANR	4783665	Callee	r_egg_printf		4783660	0					
ANR	4783666	Identifier	r_egg_printf		4783660	0					
ANR	4783667	ArgumentList	egg		4783660	1					
ANR	4783668	Argument	egg		4783660	0					
ANR	4783669	Identifier	egg		4783660	0					
ANR	4783670	Argument	"""while_end (%s)\\n"""		4783660	1					
ANR	4783671	PrimaryExpression	"""while_end (%s)\\n"""		4783660	0					
ANR	4783672	Argument	labelback		4783660	2					
ANR	4783673	Identifier	labelback		4783660	0					
ANR	4783674	ReturnType	static void		4783660	1					
ANR	4783675	Identifier	emit_while_end		4783660	2					
ANR	4783676	ParameterList	"REgg * egg , const char * labelback"		4783660	3					
ANR	4783677	Parameter	REgg * egg	94:28:2386:2394	4783660	0	True				
ANR	4783678	ParameterType	REgg *		4783660	0					
ANR	4783679	Identifier	egg		4783660	1					
ANR	4783680	Parameter	const char * labelback	94:39:2397:2417	4783660	1	True				
ANR	4783681	ParameterType	const char *		4783660	0					
ANR	4783682	Identifier	labelback		4783660	1					
ANR	4783683	CFGEntryNode	ENTRY		4783660		True				
ANR	4783684	CFGExitNode	EXIT		4783660		True				
ANR	4783685	Symbol	egg		4783660						
ANR	4783686	Symbol	labelback		4783660						
ANR	4783687	Function	emit_get_var	98:0:2477:2720							
ANR	4783688	FunctionDef	"emit_get_var (REgg * egg , int type , char * out , int idx)"		4783687	0					
ANR	4783689	CompoundStatement		98:67:2544:2720	4783687	0					
ANR	4783690	SwitchStatement	switch ( type )		4783687	0					
ANR	4783691	Condition	type	99:9:2555:2558	4783687	0	True				
ANR	4783692	Identifier	type		4783687	0					
ANR	4783693	CompoundStatement		2:15:16:16	4783687	1					
ANR	4783694	Label	case 0 :	100:1:2564:2570	4783687	0	True				
ANR	4783695	ExpressionStatement	"sprintf ( out , ""fp,$%d"" , - idx )"	100:9:2572:2601	4783687	1	True				
ANR	4783696	CallExpression	"sprintf ( out , ""fp,$%d"" , - idx )"		4783687	0					
ANR	4783697	Callee	sprintf		4783687	0					
ANR	4783698	Identifier	sprintf		4783687	0					
ANR	4783699	ArgumentList	out		4783687	1					
ANR	4783700	Argument	out		4783687	0					
ANR	4783701	Identifier	out		4783687	0					
ANR	4783702	Argument	"""fp,$%d"""		4783687	1					
ANR	4783703	PrimaryExpression	"""fp,$%d"""		4783687	0					
ANR	4783704	Argument	- idx		4783687	2					
ANR	4783705	UnaryOperationExpression	- idx		4783687	0					
ANR	4783706	UnaryOperator	-		4783687	0					
ANR	4783707	Identifier	idx		4783687	1					
ANR	4783708	BreakStatement	break ;	100:40:2603:2608	4783687	2	True				
ANR	4783709	Label	case 1 :	101:1:2626:2632	4783687	3	True				
ANR	4783710	ExpressionStatement	"sprintf ( out , ""sp,$%d"" , idx )"	101:9:2634:2662	4783687	4	True				
ANR	4783711	CallExpression	"sprintf ( out , ""sp,$%d"" , idx )"		4783687	0					
ANR	4783712	Callee	sprintf		4783687	0					
ANR	4783713	Identifier	sprintf		4783687	0					
ANR	4783714	ArgumentList	out		4783687	1					
ANR	4783715	Argument	out		4783687	0					
ANR	4783716	Identifier	out		4783687	0					
ANR	4783717	Argument	"""sp,$%d"""		4783687	1					
ANR	4783718	PrimaryExpression	"""sp,$%d"""		4783687	0					
ANR	4783719	Argument	idx		4783687	2					
ANR	4783720	Identifier	idx		4783687	0					
ANR	4783721	BreakStatement	break ;	101:39:2664:2669	4783687	5	True				
ANR	4783722	ReturnType	static void		4783687	1					
ANR	4783723	Identifier	emit_get_var		4783687	2					
ANR	4783724	ParameterList	"REgg * egg , int type , char * out , int idx"		4783687	3					
ANR	4783725	Parameter	REgg * egg	98:26:2503:2511	4783687	0	True				
ANR	4783726	ParameterType	REgg *		4783687	0					
ANR	4783727	Identifier	egg		4783687	1					
ANR	4783728	Parameter	int type	98:37:2514:2521	4783687	1	True				
ANR	4783729	ParameterType	int		4783687	0					
ANR	4783730	Identifier	type		4783687	1					
ANR	4783731	Parameter	char * out	98:47:2524:2532	4783687	2	True				
ANR	4783732	ParameterType	char *		4783687	0					
ANR	4783733	Identifier	out		4783687	1					
ANR	4783734	Parameter	int idx	98:58:2535:2541	4783687	3	True				
ANR	4783735	ParameterType	int		4783687	0					
ANR	4783736	Identifier	idx		4783687	1					
ANR	4783737	CFGEntryNode	ENTRY		4783687		True				
ANR	4783738	CFGExitNode	EXIT		4783687		True				
ANR	4783739	Symbol	egg		4783687						
ANR	4783740	Symbol	type		4783687						
ANR	4783741	Symbol	idx		4783687						
ANR	4783742	Symbol	out		4783687						
ANR	4783743	Function	emit_trap	105:0:2723:2790							
ANR	4783744	FunctionDef	emit_trap (REgg * egg)		4783743	0					
ANR	4783745	CompoundStatement		105:34:2757:2790	4783743	0					
ANR	4783746	ExpressionStatement	"r_egg_printf ( egg , ""trap\\n"" )"	106:1:2760:2788	4783743	0	True				
ANR	4783747	CallExpression	"r_egg_printf ( egg , ""trap\\n"" )"		4783743	0					
ANR	4783748	Callee	r_egg_printf		4783743	0					
ANR	4783749	Identifier	r_egg_printf		4783743	0					
ANR	4783750	ArgumentList	egg		4783743	1					
ANR	4783751	Argument	egg		4783743	0					
ANR	4783752	Identifier	egg		4783743	0					
ANR	4783753	Argument	"""trap\\n"""		4783743	1					
ANR	4783754	PrimaryExpression	"""trap\\n"""		4783743	0					
ANR	4783755	ReturnType	static void		4783743	1					
ANR	4783756	Identifier	emit_trap		4783743	2					
ANR	4783757	ParameterList	REgg * egg		4783743	3					
ANR	4783758	Parameter	REgg * egg	105:23:2746:2754	4783743	0	True				
ANR	4783759	ParameterType	REgg *		4783743	0					
ANR	4783760	Identifier	egg		4783743	1					
ANR	4783761	CFGEntryNode	ENTRY		4783743		True				
ANR	4783762	CFGExitNode	EXIT		4783743		True				
ANR	4783763	Symbol	egg		4783743						
ANR	4783764	Function	emit_load_ptr	110:0:2812:2912							
ANR	4783765	FunctionDef	"emit_load_ptr (REgg * egg , const char * dst)"		4783764	0					
ANR	4783766	CompoundStatement		110:54:2866:2912	4783764	0					
ANR	4783767	ExpressionStatement	"r_egg_printf ( egg , ""loadptr (%s)\\n"" , dst )"	111:1:2869:2910	4783764	0	True				
ANR	4783768	CallExpression	"r_egg_printf ( egg , ""loadptr (%s)\\n"" , dst )"		4783764	0					
ANR	4783769	Callee	r_egg_printf		4783764	0					
ANR	4783770	Identifier	r_egg_printf		4783764	0					
ANR	4783771	ArgumentList	egg		4783764	1					
ANR	4783772	Argument	egg		4783764	0					
ANR	4783773	Identifier	egg		4783764	0					
ANR	4783774	Argument	"""loadptr (%s)\\n"""		4783764	1					
ANR	4783775	PrimaryExpression	"""loadptr (%s)\\n"""		4783764	0					
ANR	4783776	Argument	dst		4783764	2					
ANR	4783777	Identifier	dst		4783764	0					
ANR	4783778	ReturnType	static void		4783764	1					
ANR	4783779	Identifier	emit_load_ptr		4783764	2					
ANR	4783780	ParameterList	"REgg * egg , const char * dst"		4783764	3					
ANR	4783781	Parameter	REgg * egg	110:26:2838:2846	4783764	0	True				
ANR	4783782	ParameterType	REgg *		4783764	0					
ANR	4783783	Identifier	egg		4783764	1					
ANR	4783784	Parameter	const char * dst	110:37:2849:2863	4783764	1	True				
ANR	4783785	ParameterType	const char *		4783764	0					
ANR	4783786	Identifier	dst		4783764	1					
ANR	4783787	CFGEntryNode	ENTRY		4783764		True				
ANR	4783788	CFGExitNode	EXIT		4783764		True				
ANR	4783789	Symbol	egg		4783764						
ANR	4783790	Symbol	dst		4783764						
ANR	4783791	Function	emit_branch	114:0:2915:3552							
ANR	4783792	FunctionDef	"emit_branch (REgg * egg , char * b , char * g , char * e , char * n , int sz , const char * dst)"		4783791	0					
ANR	4783793	CompoundStatement		114:96:3011:3552	4783791	0					
ANR	4783794	IdentifierDeclStatement	"char * p , str [ 64 ] ;"	116:1:3050:3066	4783791	0	True				
ANR	4783795	IdentifierDecl	* p		4783791	0					
ANR	4783796	IdentifierDeclType	char *		4783791	0					
ANR	4783797	Identifier	p		4783791	1					
ANR	4783798	IdentifierDecl	str [ 64 ]		4783791	1					
ANR	4783799	IdentifierDeclType	char [ 64 ]		4783791	0					
ANR	4783800	Identifier	str		4783791	1					
ANR	4783801	PrimaryExpression	64		4783791	2					
ANR	4783802	IdentifierDeclStatement	char * arg = NULL ;	117:1:3069:3085	4783791	1	True				
ANR	4783803	IdentifierDecl	* arg = NULL		4783791	0					
ANR	4783804	IdentifierDeclType	char *		4783791	0					
ANR	4783805	Identifier	arg		4783791	1					
ANR	4783806	AssignmentExpression	* arg = NULL		4783791	2		=			
ANR	4783807	Identifier	NULL		4783791	0					
ANR	4783808	Identifier	NULL		4783791	1					
ANR	4783809	IdentifierDeclStatement	"char * op = ""beq"" ;"	118:1:3088:3104	4783791	2	True				
ANR	4783810	IdentifierDecl	"* op = ""beq"""		4783791	0					
ANR	4783811	IdentifierDeclType	char *		4783791	0					
ANR	4783812	Identifier	op		4783791	1					
ANR	4783813	AssignmentExpression	"* op = ""beq"""		4783791	2		=			
ANR	4783814	Identifier	op		4783791	0					
ANR	4783815	PrimaryExpression	"""beq"""		4783791	1					
ANR	4783816	IfStatement	if ( b )		4783791	3					
ANR	4783817	Condition	b	120:5:3165:3165	4783791	0	True				
ANR	4783818	Identifier	b		4783791	0					
ANR	4783819	CompoundStatement		7:8:156:156	4783791	1					
ANR	4783820	ExpressionStatement	* b = '\\0'	121:2:3172:3181	4783791	0	True				
ANR	4783821	AssignmentExpression	* b = '\\0'		4783791	0		=			
ANR	4783822	UnaryOperationExpression	* b		4783791	0					
ANR	4783823	UnaryOperator	*		4783791	0					
ANR	4783824	Identifier	b		4783791	1					
ANR	4783825	PrimaryExpression	'\\0'		4783791	1					
ANR	4783826	ExpressionStatement	"op = e ? ""bge"" : ""bgt"""	122:2:3185:3203	4783791	1	True				
ANR	4783827	AssignmentExpression	"op = e ? ""bge"" : ""bgt"""		4783791	0		=			
ANR	4783828	Identifier	op		4783791	0					
ANR	4783829	ConditionalExpression	"e ? ""bge"" : ""bgt"""		4783791	1					
ANR	4783830	Condition	e		4783791	0					
ANR	4783831	Identifier	e		4783791	0					
ANR	4783832	PrimaryExpression	"""bge"""		4783791	1					
ANR	4783833	PrimaryExpression	"""bgt"""		4783791	2					
ANR	4783834	ExpressionStatement	arg = b + 1	123:2:3207:3216	4783791	2	True				
ANR	4783835	AssignmentExpression	arg = b + 1		4783791	0		=			
ANR	4783836	Identifier	arg		4783791	0					
ANR	4783837	AdditiveExpression	b + 1		4783791	1		+			
ANR	4783838	Identifier	b		4783791	0					
ANR	4783839	PrimaryExpression	1		4783791	1					
ANR	4783840	ElseStatement	else		4783791	0					
ANR	4783841	IfStatement	if ( g )		4783791	0					
ANR	4783842	Condition	g	125:5:3231:3231	4783791	0	True				
ANR	4783843	Identifier	g		4783791	0					
ANR	4783844	CompoundStatement		12:8:222:222	4783791	1					
ANR	4783845	ExpressionStatement	* g = '\\0'	126:2:3238:3247	4783791	0	True				
ANR	4783846	AssignmentExpression	* g = '\\0'		4783791	0		=			
ANR	4783847	UnaryOperationExpression	* g		4783791	0					
ANR	4783848	UnaryOperator	*		4783791	0					
ANR	4783849	Identifier	g		4783791	1					
ANR	4783850	PrimaryExpression	'\\0'		4783791	1					
ANR	4783851	ExpressionStatement	"op = e ? ""ble"" : ""blt"""	127:2:3251:3269	4783791	1	True				
ANR	4783852	AssignmentExpression	"op = e ? ""ble"" : ""blt"""		4783791	0		=			
ANR	4783853	Identifier	op		4783791	0					
ANR	4783854	ConditionalExpression	"e ? ""ble"" : ""blt"""		4783791	1					
ANR	4783855	Condition	e		4783791	0					
ANR	4783856	Identifier	e		4783791	0					
ANR	4783857	PrimaryExpression	"""ble"""		4783791	1					
ANR	4783858	PrimaryExpression	"""blt"""		4783791	2					
ANR	4783859	ExpressionStatement	arg = g + 1	128:2:3273:3282	4783791	2	True				
ANR	4783860	AssignmentExpression	arg = g + 1		4783791	0		=			
ANR	4783861	Identifier	arg		4783791	0					
ANR	4783862	AdditiveExpression	g + 1		4783791	1		+			
ANR	4783863	Identifier	g		4783791	0					
ANR	4783864	PrimaryExpression	1		4783791	1					
ANR	4783865	IfStatement	if ( ! arg )		4783791	4					
ANR	4783866	Condition	! arg	130:5:3292:3295	4783791	0	True				
ANR	4783867	UnaryOperationExpression	! arg		4783791	0					
ANR	4783868	UnaryOperator	!		4783791	0					
ANR	4783869	Identifier	arg		4783791	1					
ANR	4783870	CompoundStatement		17:11:286:286	4783791	1					
ANR	4783871	IfStatement	if ( e )		4783791	0					
ANR	4783872	Condition	e	131:6:3306:3306	4783791	0	True				
ANR	4783873	Identifier	e		4783791	0					
ANR	4783874	CompoundStatement		18:9:297:297	4783791	1					
ANR	4783875	ExpressionStatement	arg = e + 1	132:3:3314:3323	4783791	0	True				
ANR	4783876	AssignmentExpression	arg = e + 1		4783791	0		=			
ANR	4783877	Identifier	arg		4783791	0					
ANR	4783878	AdditiveExpression	e + 1		4783791	1		+			
ANR	4783879	Identifier	e		4783791	0					
ANR	4783880	PrimaryExpression	1		4783791	1					
ANR	4783881	ExpressionStatement	"op = ""bne"""	133:3:3328:3338	4783791	1	True				
ANR	4783882	AssignmentExpression	"op = ""bne"""		4783791	0		=			
ANR	4783883	Identifier	op		4783791	0					
ANR	4783884	PrimaryExpression	"""bne"""		4783791	1					
ANR	4783885	ElseStatement	else		4783791	0					
ANR	4783886	CompoundStatement		21:9:337:337	4783791	0					
ANR	4783887	ExpressionStatement	"arg = ""0"""	135:3:3354:3363	4783791	0	True				
ANR	4783888	AssignmentExpression	"arg = ""0"""		4783791	0		=			
ANR	4783889	Identifier	arg		4783791	0					
ANR	4783890	PrimaryExpression	"""0"""		4783791	1					
ANR	4783891	ExpressionStatement	"op = n ? ""bne"" : ""beq"""	136:3:3368:3386	4783791	1	True				
ANR	4783892	AssignmentExpression	"op = n ? ""bne"" : ""beq"""		4783791	0		=			
ANR	4783893	Identifier	op		4783791	0					
ANR	4783894	ConditionalExpression	"n ? ""bne"" : ""beq"""		4783791	1					
ANR	4783895	Condition	n		4783791	0					
ANR	4783896	Identifier	n		4783791	0					
ANR	4783897	PrimaryExpression	"""bne"""		4783791	1					
ANR	4783898	PrimaryExpression	"""beq"""		4783791	2					
ANR	4783899	IfStatement	if ( * arg == '=' )		4783791	5					
ANR	4783900	Condition	* arg == '='	140:5:3401:3411	4783791	0	True				
ANR	4783901	EqualityExpression	* arg == '='		4783791	0		==			
ANR	4783902	UnaryOperationExpression	* arg		4783791	0					
ANR	4783903	UnaryOperator	*		4783791	0					
ANR	4783904	Identifier	arg		4783791	1					
ANR	4783905	PrimaryExpression	'='		4783791	1					
ANR	4783906	CompoundStatement		27:18:402:402	4783791	1					
ANR	4783907	ExpressionStatement	arg ++	141:2:3418:3423	4783791	0	True				
ANR	4783908	PostIncDecOperationExpression	arg ++		4783791	0					
ANR	4783909	Identifier	arg		4783791	0					
ANR	4783910	IncDec	++		4783791	1					
ANR	4783911	ExpressionStatement	"p = r_egg_mkvar ( egg , str , arg , 0 )"	143:1:3451:3485	4783791	6	True				
ANR	4783912	AssignmentExpression	"p = r_egg_mkvar ( egg , str , arg , 0 )"		4783791	0		=			
ANR	4783913	Identifier	p		4783791	0					
ANR	4783914	CallExpression	"r_egg_mkvar ( egg , str , arg , 0 )"		4783791	1					
ANR	4783915	Callee	r_egg_mkvar		4783791	0					
ANR	4783916	Identifier	r_egg_mkvar		4783791	0					
ANR	4783917	ArgumentList	egg		4783791	1					
ANR	4783918	Argument	egg		4783791	0					
ANR	4783919	Identifier	egg		4783791	0					
ANR	4783920	Argument	str		4783791	1					
ANR	4783921	Identifier	str		4783791	0					
ANR	4783922	Argument	arg		4783791	2					
ANR	4783923	Identifier	arg		4783791	0					
ANR	4783924	Argument	0		4783791	3					
ANR	4783925	PrimaryExpression	0		4783791	0					
ANR	4783926	ExpressionStatement	"r_egg_printf ( egg , ""%s (%s) => (%s)\\n"" , op , p , dst )"	144:1:3488:3539	4783791	7	True				
ANR	4783927	CallExpression	"r_egg_printf ( egg , ""%s (%s) => (%s)\\n"" , op , p , dst )"		4783791	0					
ANR	4783928	Callee	r_egg_printf		4783791	0					
ANR	4783929	Identifier	r_egg_printf		4783791	0					
ANR	4783930	ArgumentList	egg		4783791	1					
ANR	4783931	Argument	egg		4783791	0					
ANR	4783932	Identifier	egg		4783791	0					
ANR	4783933	Argument	"""%s (%s) => (%s)\\n"""		4783791	1					
ANR	4783934	PrimaryExpression	"""%s (%s) => (%s)\\n"""		4783791	0					
ANR	4783935	Argument	op		4783791	2					
ANR	4783936	Identifier	op		4783791	0					
ANR	4783937	Argument	p		4783791	3					
ANR	4783938	Identifier	p		4783791	0					
ANR	4783939	Argument	dst		4783791	4					
ANR	4783940	Identifier	dst		4783791	0					
ANR	4783941	ExpressionStatement	free ( p )	145:1:3542:3550	4783791	8	True				
ANR	4783942	CallExpression	free ( p )		4783791	0					
ANR	4783943	Callee	free		4783791	0					
ANR	4783944	Identifier	free		4783791	0					
ANR	4783945	ArgumentList	p		4783791	1					
ANR	4783946	Argument	p		4783791	0					
ANR	4783947	Identifier	p		4783791	0					
ANR	4783948	ReturnType	static void		4783791	1					
ANR	4783949	Identifier	emit_branch		4783791	2					
ANR	4783950	ParameterList	"REgg * egg , char * b , char * g , char * e , char * n , int sz , const char * dst"		4783791	3					
ANR	4783951	Parameter	REgg * egg	114:24:2939:2947	4783791	0	True				
ANR	4783952	ParameterType	REgg *		4783791	0					
ANR	4783953	Identifier	egg		4783791	1					
ANR	4783954	Parameter	char * b	114:35:2950:2956	4783791	1	True				
ANR	4783955	ParameterType	char *		4783791	0					
ANR	4783956	Identifier	b		4783791	1					
ANR	4783957	Parameter	char * g	114:44:2959:2965	4783791	2	True				
ANR	4783958	ParameterType	char *		4783791	0					
ANR	4783959	Identifier	g		4783791	1					
ANR	4783960	Parameter	char * e	114:53:2968:2974	4783791	3	True				
ANR	4783961	ParameterType	char *		4783791	0					
ANR	4783962	Identifier	e		4783791	1					
ANR	4783963	Parameter	char * n	114:62:2977:2983	4783791	4	True				
ANR	4783964	ParameterType	char *		4783791	0					
ANR	4783965	Identifier	n		4783791	1					
ANR	4783966	Parameter	int sz	114:71:2986:2991	4783791	5	True				
ANR	4783967	ParameterType	int		4783791	0					
ANR	4783968	Identifier	sz		4783791	1					
ANR	4783969	Parameter	const char * dst	114:79:2994:3008	4783791	6	True				
ANR	4783970	ParameterType	const char *		4783791	0					
ANR	4783971	Identifier	dst		4783791	1					
ANR	4783972	CFGEntryNode	ENTRY		4783791		True				
ANR	4783973	CFGExitNode	EXIT		4783791		True				
ANR	4783974	Symbol	r_egg_mkvar		4783791						
ANR	4783975	Symbol	op		4783791						
ANR	4783976	Symbol	b		4783791						
ANR	4783977	Symbol	NULL		4783791						
ANR	4783978	Symbol	egg		4783791						
ANR	4783979	Symbol	dst		4783791						
ANR	4783980	Symbol	e		4783791						
ANR	4783981	Symbol	g		4783791						
ANR	4783982	Symbol	sz		4783791						
ANR	4783983	Symbol	* b		4783791						
ANR	4783984	Symbol	n		4783791						
ANR	4783985	Symbol	str		4783791						
ANR	4783986	Symbol	p		4783791						
ANR	4783987	Symbol	* g		4783791						
ANR	4783988	Symbol	arg		4783791						
ANR	4783989	Symbol	* arg		4783791						
ANR	4783990	Function	emit_load	149:0:3579:3692							
ANR	4783991	FunctionDef	"emit_load (REgg * egg , const char * dst , int sz)"		4783990	0					
ANR	4783992	CompoundStatement		149:58:3637:3692	4783990	0					
ANR	4783993	ExpressionStatement	"r_egg_printf ( egg , ""load (\\""%s\\"", %c)\\n"" , dst , sz )"	150:1:3640:3690	4783990	0	True				
ANR	4783994	CallExpression	"r_egg_printf ( egg , ""load (\\""%s\\"", %c)\\n"" , dst , sz )"		4783990	0					
ANR	4783995	Callee	r_egg_printf		4783990	0					
ANR	4783996	Identifier	r_egg_printf		4783990	0					
ANR	4783997	ArgumentList	egg		4783990	1					
ANR	4783998	Argument	egg		4783990	0					
ANR	4783999	Identifier	egg		4783990	0					
ANR	4784000	Argument	"""load (\\""%s\\"", %c)\\n"""		4783990	1					
ANR	4784001	PrimaryExpression	"""load (\\""%s\\"", %c)\\n"""		4783990	0					
ANR	4784002	Argument	dst		4783990	2					
ANR	4784003	Identifier	dst		4783990	0					
ANR	4784004	Argument	sz		4783990	3					
ANR	4784005	Identifier	sz		4783990	0					
ANR	4784006	ReturnType	static void		4783990	1					
ANR	4784007	Identifier	emit_load		4783990	2					
ANR	4784008	ParameterList	"REgg * egg , const char * dst , int sz"		4783990	3					
ANR	4784009	Parameter	REgg * egg	149:22:3601:3609	4783990	0	True				
ANR	4784010	ParameterType	REgg *		4783990	0					
ANR	4784011	Identifier	egg		4783990	1					
ANR	4784012	Parameter	const char * dst	149:33:3612:3626	4783990	1	True				
ANR	4784013	ParameterType	const char *		4783990	0					
ANR	4784014	Identifier	dst		4783990	1					
ANR	4784015	Parameter	int sz	149:50:3629:3634	4783990	2	True				
ANR	4784016	ParameterType	int		4783990	0					
ANR	4784017	Identifier	sz		4783990	1					
ANR	4784018	CFGEntryNode	ENTRY		4783990		True				
ANR	4784019	CFGExitNode	EXIT		4783990		True				
ANR	4784020	Symbol	egg		4783990						
ANR	4784021	Symbol	dst		4783990						
ANR	4784022	Symbol	sz		4783990						
ANR	4784023	Function	emit_mathop	153:0:3695:4396							
ANR	4784024	FunctionDef	"emit_mathop (REgg * egg , int ch , int vs , int type , const char * eq , const char * p)"		4784023	0					
ANR	4784025	CompoundStatement		153:92:3787:4396	4784023	0					
ANR	4784026	IdentifierDeclStatement	char * op ;	154:1:3790:3798	4784023	0	True				
ANR	4784027	IdentifierDecl	* op		4784023	0					
ANR	4784028	IdentifierDeclType	char *		4784023	0					
ANR	4784029	Identifier	op		4784023	1					
ANR	4784030	SwitchStatement	switch ( ch )		4784023	1					
ANR	4784031	Condition	ch	155:9:3809:3810	4784023	0	True				
ANR	4784032	Identifier	ch		4784023	0					
ANR	4784033	CompoundStatement		3:13:25:25	4784023	1					
ANR	4784034	Label	case '^' :	156:1:3816:3824	4784023	0	True				
ANR	4784035	ExpressionStatement	"op = ""eor"""	156:11:3826:3836	4784023	1	True				
ANR	4784036	AssignmentExpression	"op = ""eor"""		4784023	0		=			
ANR	4784037	Identifier	op		4784023	0					
ANR	4784038	PrimaryExpression	"""eor"""		4784023	1					
ANR	4784039	BreakStatement	break ;	156:23:3838:3843	4784023	2	True				
ANR	4784040	Label	case '&' :	157:1:3846:3854	4784023	3	True				
ANR	4784041	ExpressionStatement	"op = ""and"""	157:11:3856:3866	4784023	4	True				
ANR	4784042	AssignmentExpression	"op = ""and"""		4784023	0		=			
ANR	4784043	Identifier	op		4784023	0					
ANR	4784044	PrimaryExpression	"""and"""		4784023	1					
ANR	4784045	BreakStatement	break ;	157:23:3868:3873	4784023	5	True				
ANR	4784046	Label	case '|' :	158:1:3876:3884	4784023	6	True				
ANR	4784047	ExpressionStatement	"op = ""orr"""	158:11:3886:3896	4784023	7	True				
ANR	4784048	AssignmentExpression	"op = ""orr"""		4784023	0		=			
ANR	4784049	Identifier	op		4784023	0					
ANR	4784050	PrimaryExpression	"""orr"""		4784023	1					
ANR	4784051	BreakStatement	break ;	158:23:3898:3903	4784023	8	True				
ANR	4784052	Label	case '-' :	159:1:3906:3914	4784023	9	True				
ANR	4784053	ExpressionStatement	"op = ""sub"""	159:11:3916:3926	4784023	10	True				
ANR	4784054	AssignmentExpression	"op = ""sub"""		4784023	0		=			
ANR	4784055	Identifier	op		4784023	0					
ANR	4784056	PrimaryExpression	"""sub"""		4784023	1					
ANR	4784057	BreakStatement	break ;	159:23:3928:3933	4784023	11	True				
ANR	4784058	Label	case '+' :	160:1:3936:3944	4784023	12	True				
ANR	4784059	ExpressionStatement	"op = ""add"""	160:11:3946:3956	4784023	13	True				
ANR	4784060	AssignmentExpression	"op = ""add"""		4784023	0		=			
ANR	4784061	Identifier	op		4784023	0					
ANR	4784062	PrimaryExpression	"""add"""		4784023	1					
ANR	4784063	BreakStatement	break ;	160:23:3958:3963	4784023	14	True				
ANR	4784064	Label	case '*' :	161:1:3966:3974	4784023	15	True				
ANR	4784065	ExpressionStatement	"op = ""mul"""	161:11:3976:3986	4784023	16	True				
ANR	4784066	AssignmentExpression	"op = ""mul"""		4784023	0		=			
ANR	4784067	Identifier	op		4784023	0					
ANR	4784068	PrimaryExpression	"""mul"""		4784023	1					
ANR	4784069	BreakStatement	break ;	161:23:3988:3993	4784023	17	True				
ANR	4784070	Label	case '/' :	162:1:3996:4004	4784023	18	True				
ANR	4784071	ExpressionStatement	"op = ""div"""	162:11:4006:4016	4784023	19	True				
ANR	4784072	AssignmentExpression	"op = ""div"""		4784023	0		=			
ANR	4784073	Identifier	op		4784023	0					
ANR	4784074	PrimaryExpression	"""div"""		4784023	1					
ANR	4784075	BreakStatement	break ;	162:23:4018:4023	4784023	20	True				
ANR	4784076	Label	default :	163:1:4026:4033	4784023	21	True				
ANR	4784077	Identifier	default		4784023	0					
ANR	4784078	ExpressionStatement	"op = ""mov"""	163:11:4036:4046	4784023	22	True				
ANR	4784079	AssignmentExpression	"op = ""mov"""		4784023	0		=			
ANR	4784080	Identifier	op		4784023	0					
ANR	4784081	PrimaryExpression	"""mov"""		4784023	1					
ANR	4784082	BreakStatement	break ;	163:23:4048:4053	4784023	23	True				
ANR	4784083	IfStatement	if ( ! eq )		4784023	2					
ANR	4784084	Condition	! eq	165:5:4063:4065	4784023	0	True				
ANR	4784085	UnaryOperationExpression	! eq		4784023	0					
ANR	4784086	UnaryOperator	!		4784023	0					
ANR	4784087	Identifier	eq		4784023	1					
ANR	4784088	CompoundStatement		13:10:280:280	4784023	1					
ANR	4784089	ExpressionStatement	eq = R_AX	166:2:4072:4081	4784023	0	True				
ANR	4784090	AssignmentExpression	eq = R_AX		4784023	0		=			
ANR	4784091	Identifier	eq		4784023	0					
ANR	4784092	Identifier	R_AX		4784023	1					
ANR	4784093	IfStatement	if ( ! p )		4784023	3					
ANR	4784094	Condition	! p	168:5:4091:4092	4784023	0	True				
ANR	4784095	UnaryOperationExpression	! p		4784023	0					
ANR	4784096	UnaryOperator	!		4784023	0					
ANR	4784097	Identifier	p		4784023	1					
ANR	4784098	CompoundStatement		16:9:307:307	4784023	1					
ANR	4784099	ExpressionStatement	p = R_AX	169:2:4099:4107	4784023	0	True				
ANR	4784100	AssignmentExpression	p = R_AX		4784023	0		=			
ANR	4784101	Identifier	p		4784023	0					
ANR	4784102	Identifier	R_AX		4784023	1					
ANR	4784103	ExpressionStatement	"eprintf ( ""TYPE = %c\\n"" , type )"	173:1:4129:4158	4784023	4	True				
ANR	4784104	CallExpression	"eprintf ( ""TYPE = %c\\n"" , type )"		4784023	0					
ANR	4784105	Callee	eprintf		4784023	0					
ANR	4784106	Identifier	eprintf		4784023	0					
ANR	4784107	ArgumentList	"""TYPE = %c\\n"""		4784023	1					
ANR	4784108	Argument	"""TYPE = %c\\n"""		4784023	0					
ANR	4784109	PrimaryExpression	"""TYPE = %c\\n"""		4784023	0					
ANR	4784110	Argument	type		4784023	1					
ANR	4784111	Identifier	type		4784023	0					
ANR	4784112	ExpressionStatement	"eprintf ( ""  %s%c %c%s, %s\\n"" , op , vs , type , eq , p )"	174:1:4161:4211	4784023	5	True				
ANR	4784113	CallExpression	"eprintf ( ""  %s%c %c%s, %s\\n"" , op , vs , type , eq , p )"		4784023	0					
ANR	4784114	Callee	eprintf		4784023	0					
ANR	4784115	Identifier	eprintf		4784023	0					
ANR	4784116	ArgumentList	"""  %s%c %c%s, %s\\n"""		4784023	1					
ANR	4784117	Argument	"""  %s%c %c%s, %s\\n"""		4784023	0					
ANR	4784118	PrimaryExpression	"""  %s%c %c%s, %s\\n"""		4784023	0					
ANR	4784119	Argument	op		4784023	1					
ANR	4784120	Identifier	op		4784023	0					
ANR	4784121	Argument	vs		4784023	2					
ANR	4784122	Identifier	vs		4784023	0					
ANR	4784123	Argument	type		4784023	3					
ANR	4784124	Identifier	type		4784023	0					
ANR	4784125	Argument	eq		4784023	4					
ANR	4784126	Identifier	eq		4784023	0					
ANR	4784127	Argument	p		4784023	5					
ANR	4784128	Identifier	p		4784023	0					
ANR	4784129	ExpressionStatement	"eprintf ( ""  %s %s, [%s]\\n"" , op , p , eq )"	175:1:4214:4252	4784023	6	True				
ANR	4784130	CallExpression	"eprintf ( ""  %s %s, [%s]\\n"" , op , p , eq )"		4784023	0					
ANR	4784131	Callee	eprintf		4784023	0					
ANR	4784132	Identifier	eprintf		4784023	0					
ANR	4784133	ArgumentList	"""  %s %s, [%s]\\n"""		4784023	1					
ANR	4784134	Argument	"""  %s %s, [%s]\\n"""		4784023	0					
ANR	4784135	PrimaryExpression	"""  %s %s, [%s]\\n"""		4784023	0					
ANR	4784136	Argument	op		4784023	1					
ANR	4784137	Identifier	op		4784023	0					
ANR	4784138	Argument	p		4784023	2					
ANR	4784139	Identifier	p		4784023	0					
ANR	4784140	Argument	eq		4784023	3					
ANR	4784141	Identifier	eq		4784023	0					
ANR	4784142	IfStatement	if ( type == '*' )		4784023	7					
ANR	4784143	Condition	type == '*'	177:5:4266:4276	4784023	0	True				
ANR	4784144	EqualityExpression	type == '*'		4784023	0		==			
ANR	4784145	Identifier	type		4784023	0					
ANR	4784146	PrimaryExpression	'*'		4784023	1					
ANR	4784147	CompoundStatement		25:18:491:491	4784023	1					
ANR	4784148	ExpressionStatement	"r_egg_printf ( egg , ""%s (%s, [%s])\\n"" , op , p , eq )"	178:2:4283:4331	4784023	0	True				
ANR	4784149	CallExpression	"r_egg_printf ( egg , ""%s (%s, [%s])\\n"" , op , p , eq )"		4784023	0					
ANR	4784150	Callee	r_egg_printf		4784023	0					
ANR	4784151	Identifier	r_egg_printf		4784023	0					
ANR	4784152	ArgumentList	egg		4784023	1					
ANR	4784153	Argument	egg		4784023	0					
ANR	4784154	Identifier	egg		4784023	0					
ANR	4784155	Argument	"""%s (%s, [%s])\\n"""		4784023	1					
ANR	4784156	PrimaryExpression	"""%s (%s, [%s])\\n"""		4784023	0					
ANR	4784157	Argument	op		4784023	2					
ANR	4784158	Identifier	op		4784023	0					
ANR	4784159	Argument	p		4784023	3					
ANR	4784160	Identifier	p		4784023	0					
ANR	4784161	Argument	eq		4784023	4					
ANR	4784162	Identifier	eq		4784023	0					
ANR	4784163	ElseStatement	else		4784023	0					
ANR	4784164	CompoundStatement		27:8:553:553	4784023	0					
ANR	4784165	ExpressionStatement	"r_egg_printf ( egg , ""%s (%s, %s)\\n"" , op , p , eq )"	180:2:4345:4391	4784023	0	True				
ANR	4784166	CallExpression	"r_egg_printf ( egg , ""%s (%s, %s)\\n"" , op , p , eq )"		4784023	0					
ANR	4784167	Callee	r_egg_printf		4784023	0					
ANR	4784168	Identifier	r_egg_printf		4784023	0					
ANR	4784169	ArgumentList	egg		4784023	1					
ANR	4784170	Argument	egg		4784023	0					
ANR	4784171	Identifier	egg		4784023	0					
ANR	4784172	Argument	"""%s (%s, %s)\\n"""		4784023	1					
ANR	4784173	PrimaryExpression	"""%s (%s, %s)\\n"""		4784023	0					
ANR	4784174	Argument	op		4784023	2					
ANR	4784175	Identifier	op		4784023	0					
ANR	4784176	Argument	p		4784023	3					
ANR	4784177	Identifier	p		4784023	0					
ANR	4784178	Argument	eq		4784023	4					
ANR	4784179	Identifier	eq		4784023	0					
ANR	4784180	ReturnType	static void		4784023	1					
ANR	4784181	Identifier	emit_mathop		4784023	2					
ANR	4784182	ParameterList	"REgg * egg , int ch , int vs , int type , const char * eq , const char * p"		4784023	3					
ANR	4784183	Parameter	REgg * egg	153:24:3719:3727	4784023	0	True				
ANR	4784184	ParameterType	REgg *		4784023	0					
ANR	4784185	Identifier	egg		4784023	1					
ANR	4784186	Parameter	int ch	153:35:3730:3735	4784023	1	True				
ANR	4784187	ParameterType	int		4784023	0					
ANR	4784188	Identifier	ch		4784023	1					
ANR	4784189	Parameter	int vs	153:43:3738:3743	4784023	2	True				
ANR	4784190	ParameterType	int		4784023	0					
ANR	4784191	Identifier	vs		4784023	1					
ANR	4784192	Parameter	int type	153:51:3746:3753	4784023	3	True				
ANR	4784193	ParameterType	int		4784023	0					
ANR	4784194	Identifier	type		4784023	1					
ANR	4784195	Parameter	const char * eq	153:61:3756:3769	4784023	4	True				
ANR	4784196	ParameterType	const char *		4784023	0					
ANR	4784197	Identifier	eq		4784023	1					
ANR	4784198	Parameter	const char * p	153:77:3772:3784	4784023	5	True				
ANR	4784199	ParameterType	const char *		4784023	0					
ANR	4784200	Identifier	p		4784023	1					
ANR	4784201	CFGEntryNode	ENTRY		4784023		True				
ANR	4784202	CFGExitNode	EXIT		4784023		True				
ANR	4784203	Symbol	p		4784023						
ANR	4784204	Symbol	op		4784023						
ANR	4784205	Symbol	R_AX		4784023						
ANR	4784206	Symbol	egg		4784023						
ANR	4784207	Symbol	ch		4784023						
ANR	4784208	Symbol	type		4784023						
ANR	4784209	Symbol	eq		4784023						
ANR	4784210	Symbol	vs		4784023						
ANR	4784211	Function	emit_regs	184:0:4399:4475							
ANR	4784212	FunctionDef	"emit_regs (REgg * egg , int idx)"		4784211	0					
ANR	4784213	CompoundStatement		184:49:4448:4475	4784211	0					
ANR	4784214	ReturnStatement	return regs [ idx % R_NGP ] ;	185:1:4451:4473	4784211	0	True				
ANR	4784215	ArrayIndexing	regs [ idx % R_NGP ]		4784211	0					
ANR	4784216	Identifier	regs		4784211	0					
ANR	4784217	MultiplicativeExpression	idx % R_NGP		4784211	1		%			
ANR	4784218	Identifier	idx		4784211	0					
ANR	4784219	Identifier	R_NGP		4784211	1					
ANR	4784220	ReturnType	static const char *		4784211	1					
ANR	4784221	Identifier	emit_regs		4784211	2					
ANR	4784222	ParameterList	"REgg * egg , int idx"		4784211	3					
ANR	4784223	Parameter	REgg * egg	184:29:4428:4436	4784211	0	True				
ANR	4784224	ParameterType	REgg *		4784211	0					
ANR	4784225	Identifier	egg		4784211	1					
ANR	4784226	Parameter	int idx	184:40:4439:4445	4784211	1	True				
ANR	4784227	ParameterType	int		4784211	0					
ANR	4784228	Identifier	idx		4784211	1					
ANR	4784229	CFGEntryNode	ENTRY		4784211		True				
ANR	4784230	CFGExitNode	EXIT		4784211		True				
ANR	4784231	Symbol	egg		4784211						
ANR	4784232	Symbol	* R_NGP		4784211						
ANR	4784233	Symbol	R_NGP		4784211						
ANR	4784234	Symbol	* regs		4784211						
ANR	4784235	Symbol	* idx		4784211						
ANR	4784236	Symbol	regs		4784211						
ANR	4784237	Symbol	idx		4784211						
ANR	4784238	DeclStmt									
ANR	4784239	Decl							REggEmit	REggEmit	EMIT_NAME
