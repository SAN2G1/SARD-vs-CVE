command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	5061759	File	data/converged/CVE-2019-16718~_radare2/libr_socket_http_server.c								
ANR	5061760	DeclStmt									
ANR	5061761	Decl							bool	bool *	breaked
ANR	5061762	Function	r_socket_http_server_set_breaked	8:0:126:195							
ANR	5061763	FunctionDef	r_socket_http_server_set_breaked (bool * b)		5061762	0					
ANR	5061764	CompoundStatement		8:53:179:195	5061762	0					
ANR	5061765	ExpressionStatement	breaked = b	9:1:182:193	5061762	0	True				
ANR	5061766	AssignmentExpression	breaked = b		5061762	0		=			
ANR	5061767	Identifier	breaked		5061762	0					
ANR	5061768	Identifier	b		5061762	1					
ANR	5061769	ReturnType	R_API void		5061762	1					
ANR	5061770	Identifier	r_socket_http_server_set_breaked		5061762	2					
ANR	5061771	ParameterList	bool * b		5061762	3					
ANR	5061772	Parameter	bool * b	8:44:170:176	5061762	0	True				
ANR	5061773	ParameterType	bool *		5061762	0					
ANR	5061774	Identifier	b		5061762	1					
ANR	5061775	CFGEntryNode	ENTRY		5061762		True				
ANR	5061776	CFGExitNode	EXIT		5061762		True				
ANR	5061777	Symbol	b		5061762						
ANR	5061778	Symbol	breaked		5061762						
ANR	5061779	Function	r_socket_http_accept	12:0:198:2884							
ANR	5061780	FunctionDef	"r_socket_http_accept (RSocket * s , RSocketHTTPOptions * so)"		5061779	0					
ANR	5061781	CompoundStatement		12:84:282:2884	5061779	0					
ANR	5061782	IdentifierDeclStatement	"int content_length = 0 , xx , yy ;"	13:1:285:315	5061779	0	True				
ANR	5061783	IdentifierDecl	content_length = 0		5061779	0					
ANR	5061784	IdentifierDeclType	int		5061779	0					
ANR	5061785	Identifier	content_length		5061779	1					
ANR	5061786	AssignmentExpression	content_length = 0		5061779	2		=			
ANR	5061787	Identifier	content_length		5061779	0					
ANR	5061788	PrimaryExpression	0		5061779	1					
ANR	5061789	IdentifierDecl	xx		5061779	1					
ANR	5061790	IdentifierDeclType	int		5061779	0					
ANR	5061791	Identifier	xx		5061779	1					
ANR	5061792	IdentifierDecl	yy		5061779	2					
ANR	5061793	IdentifierDeclType	int		5061779	0					
ANR	5061794	Identifier	yy		5061779	1					
ANR	5061795	IdentifierDeclStatement	"int pxx = 1 , first = 0 ;"	14:1:318:340	5061779	1	True				
ANR	5061796	IdentifierDecl	pxx = 1		5061779	0					
ANR	5061797	IdentifierDeclType	int		5061779	0					
ANR	5061798	Identifier	pxx		5061779	1					
ANR	5061799	AssignmentExpression	pxx = 1		5061779	2		=			
ANR	5061800	Identifier	pxx		5061779	0					
ANR	5061801	PrimaryExpression	1		5061779	1					
ANR	5061802	IdentifierDecl	first = 0		5061779	1					
ANR	5061803	IdentifierDeclType	int		5061779	0					
ANR	5061804	Identifier	first		5061779	1					
ANR	5061805	AssignmentExpression	first = 0		5061779	2		=			
ANR	5061806	Identifier	first		5061779	0					
ANR	5061807	PrimaryExpression	0		5061779	1					
ANR	5061808	IdentifierDeclStatement	"char buf [ 1500 ] , * p , * q ;"	15:1:343:365	5061779	2	True				
ANR	5061809	IdentifierDecl	buf [ 1500 ]		5061779	0					
ANR	5061810	IdentifierDeclType	char [ 1500 ]		5061779	0					
ANR	5061811	Identifier	buf		5061779	1					
ANR	5061812	PrimaryExpression	1500		5061779	2					
ANR	5061813	IdentifierDecl	* p		5061779	1					
ANR	5061814	IdentifierDeclType	char *		5061779	0					
ANR	5061815	Identifier	p		5061779	1					
ANR	5061816	IdentifierDecl	* q		5061779	2					
ANR	5061817	IdentifierDeclType	char *		5061779	0					
ANR	5061818	Identifier	q		5061779	1					
ANR	5061819	IdentifierDeclStatement	RSocketHTTPRequest * hr = R_NEW0 ( RSocketHTTPRequest ) ;	16:1:368:420	5061779	3	True				
ANR	5061820	IdentifierDecl	* hr = R_NEW0 ( RSocketHTTPRequest )		5061779	0					
ANR	5061821	IdentifierDeclType	RSocketHTTPRequest *		5061779	0					
ANR	5061822	Identifier	hr		5061779	1					
ANR	5061823	AssignmentExpression	* hr = R_NEW0 ( RSocketHTTPRequest )		5061779	2		=			
ANR	5061824	Identifier	hr		5061779	0					
ANR	5061825	CallExpression	R_NEW0 ( RSocketHTTPRequest )		5061779	1					
ANR	5061826	Callee	R_NEW0		5061779	0					
ANR	5061827	Identifier	R_NEW0		5061779	0					
ANR	5061828	ArgumentList	RSocketHTTPRequest		5061779	1					
ANR	5061829	Argument	RSocketHTTPRequest		5061779	0					
ANR	5061830	Identifier	RSocketHTTPRequest		5061779	0					
ANR	5061831	IfStatement	if ( ! hr )		5061779	4					
ANR	5061832	Condition	! hr	17:5:427:429	5061779	0	True				
ANR	5061833	UnaryOperationExpression	! hr		5061779	0					
ANR	5061834	UnaryOperator	!		5061779	0					
ANR	5061835	Identifier	hr		5061779	1					
ANR	5061836	CompoundStatement		6:10:149:149	5061779	1					
ANR	5061837	ReturnStatement	return NULL ;	18:2:436:447	5061779	0	True				
ANR	5061838	Identifier	NULL		5061779	0					
ANR	5061839	IfStatement	if ( so -> accept_timeout )		5061779	5					
ANR	5061840	Condition	so -> accept_timeout	20:5:457:474	5061779	0	True				
ANR	5061841	PtrMemberAccess	so -> accept_timeout		5061779	0					
ANR	5061842	Identifier	so		5061779	0					
ANR	5061843	Identifier	accept_timeout		5061779	1					
ANR	5061844	CompoundStatement		9:25:194:194	5061779	1					
ANR	5061845	ExpressionStatement	"hr -> s = r_socket_accept_timeout ( s , 1 )"	21:2:481:519	5061779	0	True				
ANR	5061846	AssignmentExpression	"hr -> s = r_socket_accept_timeout ( s , 1 )"		5061779	0		=			
ANR	5061847	PtrMemberAccess	hr -> s		5061779	0					
ANR	5061848	Identifier	hr		5061779	0					
ANR	5061849	Identifier	s		5061779	1					
ANR	5061850	CallExpression	"r_socket_accept_timeout ( s , 1 )"		5061779	1					
ANR	5061851	Callee	r_socket_accept_timeout		5061779	0					
ANR	5061852	Identifier	r_socket_accept_timeout		5061779	0					
ANR	5061853	ArgumentList	s		5061779	1					
ANR	5061854	Argument	s		5061779	0					
ANR	5061855	Identifier	s		5061779	0					
ANR	5061856	Argument	1		5061779	1					
ANR	5061857	PrimaryExpression	1		5061779	0					
ANR	5061858	ElseStatement	else		5061779	0					
ANR	5061859	CompoundStatement		11:8:246:246	5061779	0					
ANR	5061860	ExpressionStatement	hr -> s = r_socket_accept ( s )	23:2:533:560	5061779	0	True				
ANR	5061861	AssignmentExpression	hr -> s = r_socket_accept ( s )		5061779	0		=			
ANR	5061862	PtrMemberAccess	hr -> s		5061779	0					
ANR	5061863	Identifier	hr		5061779	0					
ANR	5061864	Identifier	s		5061779	1					
ANR	5061865	CallExpression	r_socket_accept ( s )		5061779	1					
ANR	5061866	Callee	r_socket_accept		5061779	0					
ANR	5061867	Identifier	r_socket_accept		5061779	0					
ANR	5061868	ArgumentList	s		5061779	1					
ANR	5061869	Argument	s		5061779	0					
ANR	5061870	Identifier	s		5061779	0					
ANR	5061871	IfStatement	if ( ! hr -> s )		5061779	6					
ANR	5061872	Condition	! hr -> s	25:5:570:575	5061779	0	True				
ANR	5061873	UnaryOperationExpression	! hr -> s		5061779	0					
ANR	5061874	UnaryOperator	!		5061779	0					
ANR	5061875	PtrMemberAccess	hr -> s		5061779	1					
ANR	5061876	Identifier	hr		5061779	0					
ANR	5061877	Identifier	s		5061779	1					
ANR	5061878	CompoundStatement		14:13:295:295	5061779	1					
ANR	5061879	ExpressionStatement	free ( hr )	26:2:582:591	5061779	0	True				
ANR	5061880	CallExpression	free ( hr )		5061779	0					
ANR	5061881	Callee	free		5061779	0					
ANR	5061882	Identifier	free		5061779	0					
ANR	5061883	ArgumentList	hr		5061779	1					
ANR	5061884	Argument	hr		5061779	0					
ANR	5061885	Identifier	hr		5061779	0					
ANR	5061886	ReturnStatement	return NULL ;	27:2:595:606	5061779	1	True				
ANR	5061887	Identifier	NULL		5061779	0					
ANR	5061888	IfStatement	if ( so -> timeout > 0 )		5061779	7					
ANR	5061889	Condition	so -> timeout > 0	29:5:616:630	5061779	0	True				
ANR	5061890	RelationalExpression	so -> timeout > 0		5061779	0		>			
ANR	5061891	PtrMemberAccess	so -> timeout		5061779	0					
ANR	5061892	Identifier	so		5061779	0					
ANR	5061893	Identifier	timeout		5061779	1					
ANR	5061894	PrimaryExpression	0		5061779	1					
ANR	5061895	CompoundStatement		18:22:350:350	5061779	1					
ANR	5061896	ExpressionStatement	"r_socket_block_time ( hr -> s , 1 , so -> timeout , 0 )"	30:2:637:683	5061779	0	True				
ANR	5061897	CallExpression	"r_socket_block_time ( hr -> s , 1 , so -> timeout , 0 )"		5061779	0					
ANR	5061898	Callee	r_socket_block_time		5061779	0					
ANR	5061899	Identifier	r_socket_block_time		5061779	0					
ANR	5061900	ArgumentList	hr -> s		5061779	1					
ANR	5061901	Argument	hr -> s		5061779	0					
ANR	5061902	PtrMemberAccess	hr -> s		5061779	0					
ANR	5061903	Identifier	hr		5061779	0					
ANR	5061904	Identifier	s		5061779	1					
ANR	5061905	Argument	1		5061779	1					
ANR	5061906	PrimaryExpression	1		5061779	0					
ANR	5061907	Argument	so -> timeout		5061779	2					
ANR	5061908	PtrMemberAccess	so -> timeout		5061779	0					
ANR	5061909	Identifier	so		5061779	0					
ANR	5061910	Identifier	timeout		5061779	1					
ANR	5061911	Argument	0		5061779	3					
ANR	5061912	PrimaryExpression	0		5061779	0					
ANR	5061913	ExpressionStatement	hr -> auth = ! so -> httpauth	32:1:689:713	5061779	8	True				
ANR	5061914	AssignmentExpression	hr -> auth = ! so -> httpauth		5061779	0		=			
ANR	5061915	PtrMemberAccess	hr -> auth		5061779	0					
ANR	5061916	Identifier	hr		5061779	0					
ANR	5061917	Identifier	auth		5061779	1					
ANR	5061918	UnaryOperationExpression	! so -> httpauth		5061779	1					
ANR	5061919	UnaryOperator	!		5061779	0					
ANR	5061920	PtrMemberAccess	so -> httpauth		5061779	1					
ANR	5061921	Identifier	so		5061779	0					
ANR	5061922	Identifier	httpauth		5061779	1					
ANR	5061923	ForStatement	for ( ; ; )		5061779	9					
ANR	5061924	CompoundStatement		22:10:442:442	5061779	0					
ANR	5061925	IfStatement	if ( breaked && * breaked )		5061779	0					
ANR	5061926	Condition	breaked && * breaked	35:6:749:767	5061779	0	True				
ANR	5061927	AndExpression	breaked && * breaked		5061779	0		&&			
ANR	5061928	Identifier	breaked		5061779	0					
ANR	5061929	UnaryOperationExpression	* breaked		5061779	1					
ANR	5061930	UnaryOperator	*		5061779	0					
ANR	5061931	Identifier	breaked		5061779	1					
ANR	5061932	CompoundStatement		24:27:487:487	5061779	1					
ANR	5061933	ExpressionStatement	r_socket_http_close ( hr )	36:3:775:799	5061779	0	True				
ANR	5061934	CallExpression	r_socket_http_close ( hr )		5061779	0					
ANR	5061935	Callee	r_socket_http_close		5061779	0					
ANR	5061936	Identifier	r_socket_http_close		5061779	0					
ANR	5061937	ArgumentList	hr		5061779	1					
ANR	5061938	Argument	hr		5061779	0					
ANR	5061939	Identifier	hr		5061779	0					
ANR	5061940	ReturnStatement	return NULL ;	37:3:804:815	5061779	1	True				
ANR	5061941	Identifier	NULL		5061779	0					
ANR	5061942	ExpressionStatement	"memset ( buf , 0 , sizeof ( buf ) )"	40:2:830:859	5061779	1	True				
ANR	5061943	CallExpression	"memset ( buf , 0 , sizeof ( buf ) )"		5061779	0					
ANR	5061944	Callee	memset		5061779	0					
ANR	5061945	Identifier	memset		5061779	0					
ANR	5061946	ArgumentList	buf		5061779	1					
ANR	5061947	Argument	buf		5061779	0					
ANR	5061948	Identifier	buf		5061779	0					
ANR	5061949	Argument	0		5061779	1					
ANR	5061950	PrimaryExpression	0		5061779	0					
ANR	5061951	Argument	sizeof ( buf )		5061779	2					
ANR	5061952	SizeofExpression	sizeof ( buf )		5061779	0					
ANR	5061953	Sizeof	sizeof		5061779	0					
ANR	5061954	SizeofOperand	buf		5061779	1					
ANR	5061955	ExpressionStatement	"xx = r_socket_gets ( hr -> s , buf , sizeof ( buf ) )"	41:2:863:908	5061779	2	True				
ANR	5061956	AssignmentExpression	"xx = r_socket_gets ( hr -> s , buf , sizeof ( buf ) )"		5061779	0		=			
ANR	5061957	Identifier	xx		5061779	0					
ANR	5061958	CallExpression	"r_socket_gets ( hr -> s , buf , sizeof ( buf ) )"		5061779	1					
ANR	5061959	Callee	r_socket_gets		5061779	0					
ANR	5061960	Identifier	r_socket_gets		5061779	0					
ANR	5061961	ArgumentList	hr -> s		5061779	1					
ANR	5061962	Argument	hr -> s		5061779	0					
ANR	5061963	PtrMemberAccess	hr -> s		5061779	0					
ANR	5061964	Identifier	hr		5061779	0					
ANR	5061965	Identifier	s		5061779	1					
ANR	5061966	Argument	buf		5061779	1					
ANR	5061967	Identifier	buf		5061779	0					
ANR	5061968	Argument	sizeof ( buf )		5061779	2					
ANR	5061969	SizeofExpression	sizeof ( buf )		5061779	0					
ANR	5061970	Sizeof	sizeof		5061779	0					
ANR	5061971	SizeofOperand	buf		5061779	1					
ANR	5061972	ExpressionStatement	"yy = r_socket_ready ( hr -> s , 0 , 20 * 1000 )"	42:2:912:953	5061779	3	True				
ANR	5061973	AssignmentExpression	"yy = r_socket_ready ( hr -> s , 0 , 20 * 1000 )"		5061779	0		=			
ANR	5061974	Identifier	yy		5061779	0					
ANR	5061975	CallExpression	"r_socket_ready ( hr -> s , 0 , 20 * 1000 )"		5061779	1					
ANR	5061976	Callee	r_socket_ready		5061779	0					
ANR	5061977	Identifier	r_socket_ready		5061779	0					
ANR	5061978	ArgumentList	hr -> s		5061779	1					
ANR	5061979	Argument	hr -> s		5061779	0					
ANR	5061980	PtrMemberAccess	hr -> s		5061779	0					
ANR	5061981	Identifier	hr		5061779	0					
ANR	5061982	Identifier	s		5061779	1					
ANR	5061983	Argument	0		5061779	1					
ANR	5061984	PrimaryExpression	0		5061779	0					
ANR	5061985	Argument	20 * 1000		5061779	2					
ANR	5061986	MultiplicativeExpression	20 * 1000		5061779	0		*			
ANR	5061987	PrimaryExpression	20		5061779	0					
ANR	5061988	PrimaryExpression	1000		5061779	1					
ANR	5061989	IfStatement	if ( ! yy || ( ! xx && ! pxx ) )		5061779	4					
ANR	5061990	Condition	! yy || ( ! xx && ! pxx )	44:6:1054:1073	5061779	0	True				
ANR	5061991	OrExpression	! yy || ( ! xx && ! pxx )		5061779	0		||			
ANR	5061992	UnaryOperationExpression	! yy		5061779	0					
ANR	5061993	UnaryOperator	!		5061779	0					
ANR	5061994	Identifier	yy		5061779	1					
ANR	5061995	AndExpression	! xx && ! pxx		5061779	1		&&			
ANR	5061996	UnaryOperationExpression	! xx		5061779	0					
ANR	5061997	UnaryOperator	!		5061779	0					
ANR	5061998	Identifier	xx		5061779	1					
ANR	5061999	UnaryOperationExpression	! pxx		5061779	1					
ANR	5062000	UnaryOperator	!		5061779	0					
ANR	5062001	Identifier	pxx		5061779	1					
ANR	5062002	CompoundStatement		33:28:793:793	5061779	1					
ANR	5062003	BreakStatement	break ;	45:3:1081:1086	5061779	0	True				
ANR	5062004	ExpressionStatement	pxx = xx	47:2:1094:1102	5061779	5	True				
ANR	5062005	AssignmentExpression	pxx = xx		5061779	0		=			
ANR	5062006	Identifier	pxx		5061779	0					
ANR	5062007	Identifier	xx		5061779	1					
ANR	5062008	IfStatement	if ( first == 0 )		5061779	6					
ANR	5062009	Condition	first == 0	49:6:1111:1120	5061779	0	True				
ANR	5062010	EqualityExpression	first == 0		5061779	0		==			
ANR	5062011	Identifier	first		5061779	0					
ANR	5062012	PrimaryExpression	0		5061779	1					
ANR	5062013	CompoundStatement		38:18:840:840	5061779	1					
ANR	5062014	ExpressionStatement	first = 1	50:3:1128:1137	5061779	0	True				
ANR	5062015	AssignmentExpression	first = 1		5061779	0		=			
ANR	5062016	Identifier	first		5061779	0					
ANR	5062017	PrimaryExpression	1		5061779	1					
ANR	5062018	IfStatement	if ( strlen ( buf ) < 3 )		5061779	1					
ANR	5062019	Condition	strlen ( buf ) < 3	51:7:1146:1159	5061779	0	True				
ANR	5062020	RelationalExpression	strlen ( buf ) < 3		5061779	0		<			
ANR	5062021	CallExpression	strlen ( buf )		5061779	0					
ANR	5062022	Callee	strlen		5061779	0					
ANR	5062023	Identifier	strlen		5061779	0					
ANR	5062024	ArgumentList	buf		5061779	1					
ANR	5062025	Argument	buf		5061779	0					
ANR	5062026	Identifier	buf		5061779	0					
ANR	5062027	PrimaryExpression	3		5061779	1					
ANR	5062028	CompoundStatement		40:23:879:879	5061779	1					
ANR	5062029	ExpressionStatement	r_socket_http_close ( hr )	52:4:1168:1192	5061779	0	True				
ANR	5062030	CallExpression	r_socket_http_close ( hr )		5061779	0					
ANR	5062031	Callee	r_socket_http_close		5061779	0					
ANR	5062032	Identifier	r_socket_http_close		5061779	0					
ANR	5062033	ArgumentList	hr		5061779	1					
ANR	5062034	Argument	hr		5061779	0					
ANR	5062035	Identifier	hr		5061779	0					
ANR	5062036	ReturnStatement	return NULL ;	53:4:1198:1209	5061779	1	True				
ANR	5062037	Identifier	NULL		5061779	0					
ANR	5062038	ExpressionStatement	"p = strchr ( buf , ' ' )"	55:3:1219:1240	5061779	2	True				
ANR	5062039	AssignmentExpression	"p = strchr ( buf , ' ' )"		5061779	0		=			
ANR	5062040	Identifier	p		5061779	0					
ANR	5062041	CallExpression	"strchr ( buf , ' ' )"		5061779	1					
ANR	5062042	Callee	strchr		5061779	0					
ANR	5062043	Identifier	strchr		5061779	0					
ANR	5062044	ArgumentList	buf		5061779	1					
ANR	5062045	Argument	buf		5061779	0					
ANR	5062046	Identifier	buf		5061779	0					
ANR	5062047	Argument	' '		5061779	1					
ANR	5062048	PrimaryExpression	' '		5061779	0					
ANR	5062049	IfStatement	if ( p )		5061779	3					
ANR	5062050	Condition	p	56:7:1249:1249	5061779	0	True				
ANR	5062051	Identifier	p		5061779	0					
ANR	5062052	CompoundStatement		45:10:969:969	5061779	1					
ANR	5062053	ExpressionStatement	* p = 0	57:4:1258:1264	5061779	0	True				
ANR	5062054	AssignmentExpression	* p = 0		5061779	0		=			
ANR	5062055	UnaryOperationExpression	* p		5061779	0					
ANR	5062056	UnaryOperator	*		5061779	0					
ANR	5062057	Identifier	p		5061779	1					
ANR	5062058	PrimaryExpression	0		5061779	1					
ANR	5062059	ExpressionStatement	hr -> method = strdup ( buf )	59:3:1274:1299	5061779	4	True				
ANR	5062060	AssignmentExpression	hr -> method = strdup ( buf )		5061779	0		=			
ANR	5062061	PtrMemberAccess	hr -> method		5061779	0					
ANR	5062062	Identifier	hr		5061779	0					
ANR	5062063	Identifier	method		5061779	1					
ANR	5062064	CallExpression	strdup ( buf )		5061779	1					
ANR	5062065	Callee	strdup		5061779	0					
ANR	5062066	Identifier	strdup		5061779	0					
ANR	5062067	ArgumentList	buf		5061779	1					
ANR	5062068	Argument	buf		5061779	0					
ANR	5062069	Identifier	buf		5061779	0					
ANR	5062070	IfStatement	if ( p )		5061779	5					
ANR	5062071	Condition	p	60:7:1308:1308	5061779	0	True				
ANR	5062072	Identifier	p		5061779	0					
ANR	5062073	CompoundStatement		49:10:1028:1028	5061779	1					
ANR	5062074	ExpressionStatement	"q = strstr ( p + 1 , "" HTTP"" )"	61:4:1317:1342	5061779	0	True				
ANR	5062075	AssignmentExpression	"q = strstr ( p + 1 , "" HTTP"" )"		5061779	0		=			
ANR	5062076	Identifier	q		5061779	0					
ANR	5062077	CallExpression	"strstr ( p + 1 , "" HTTP"" )"		5061779	1					
ANR	5062078	Callee	strstr		5061779	0					
ANR	5062079	Identifier	strstr		5061779	0					
ANR	5062080	ArgumentList	p + 1		5061779	1					
ANR	5062081	Argument	p + 1		5061779	0					
ANR	5062082	AdditiveExpression	p + 1		5061779	0		+			
ANR	5062083	Identifier	p		5061779	0					
ANR	5062084	PrimaryExpression	1		5061779	1					
ANR	5062085	Argument	""" HTTP"""		5061779	1					
ANR	5062086	PrimaryExpression	""" HTTP"""		5061779	0					
ANR	5062087	IfStatement	if ( q )		5061779	1					
ANR	5062088	Condition	q	62:8:1373:1373	5061779	0	True				
ANR	5062089	Identifier	q		5061779	0					
ANR	5062090	CompoundStatement		51:11:1093:1093	5061779	1					
ANR	5062091	ExpressionStatement	* q = 0	63:5:1383:1389	5061779	0	True				
ANR	5062092	AssignmentExpression	* q = 0		5061779	0		=			
ANR	5062093	UnaryOperationExpression	* q		5061779	0					
ANR	5062094	UnaryOperator	*		5061779	0					
ANR	5062095	Identifier	q		5061779	1					
ANR	5062096	PrimaryExpression	0		5061779	1					
ANR	5062097	ExpressionStatement	hr -> path = strdup ( p + 1 )	65:4:1401:1424	5061779	2	True				
ANR	5062098	AssignmentExpression	hr -> path = strdup ( p + 1 )		5061779	0		=			
ANR	5062099	PtrMemberAccess	hr -> path		5061779	0					
ANR	5062100	Identifier	hr		5061779	0					
ANR	5062101	Identifier	path		5061779	1					
ANR	5062102	CallExpression	strdup ( p + 1 )		5061779	1					
ANR	5062103	Callee	strdup		5061779	0					
ANR	5062104	Identifier	strdup		5061779	0					
ANR	5062105	ArgumentList	p + 1		5061779	1					
ANR	5062106	Argument	p + 1		5061779	0					
ANR	5062107	AdditiveExpression	p + 1		5061779	0		+			
ANR	5062108	Identifier	p		5061779	0					
ANR	5062109	PrimaryExpression	1		5061779	1					
ANR	5062110	ElseStatement	else		5061779	0					
ANR	5062111	CompoundStatement		56:9:1157:1157	5061779	0					
ANR	5062112	IfStatement	"if ( ! hr -> referer && ! strncmp ( buf , ""Referer: "" , 9 ) )"		5061779	0					
ANR	5062113	Condition	"! hr -> referer && ! strncmp ( buf , ""Referer: "" , 9 )"	68:7:1449:1494	5061779	0	True				
ANR	5062114	AndExpression	"! hr -> referer && ! strncmp ( buf , ""Referer: "" , 9 )"		5061779	0		&&			
ANR	5062115	UnaryOperationExpression	! hr -> referer		5061779	0					
ANR	5062116	UnaryOperator	!		5061779	0					
ANR	5062117	PtrMemberAccess	hr -> referer		5061779	1					
ANR	5062118	Identifier	hr		5061779	0					
ANR	5062119	Identifier	referer		5061779	1					
ANR	5062120	UnaryOperationExpression	"! strncmp ( buf , ""Referer: "" , 9 )"		5061779	1					
ANR	5062121	UnaryOperator	!		5061779	0					
ANR	5062122	CallExpression	"strncmp ( buf , ""Referer: "" , 9 )"		5061779	1					
ANR	5062123	Callee	strncmp		5061779	0					
ANR	5062124	Identifier	strncmp		5061779	0					
ANR	5062125	ArgumentList	buf		5061779	1					
ANR	5062126	Argument	buf		5061779	0					
ANR	5062127	Identifier	buf		5061779	0					
ANR	5062128	Argument	"""Referer: """		5061779	1					
ANR	5062129	PrimaryExpression	"""Referer: """		5061779	0					
ANR	5062130	Argument	9		5061779	2					
ANR	5062131	PrimaryExpression	9		5061779	0					
ANR	5062132	CompoundStatement		57:55:1214:1214	5061779	1					
ANR	5062133	ExpressionStatement	hr -> referer = strdup ( buf + 9 )	69:4:1503:1533	5061779	0	True				
ANR	5062134	AssignmentExpression	hr -> referer = strdup ( buf + 9 )		5061779	0		=			
ANR	5062135	PtrMemberAccess	hr -> referer		5061779	0					
ANR	5062136	Identifier	hr		5061779	0					
ANR	5062137	Identifier	referer		5061779	1					
ANR	5062138	CallExpression	strdup ( buf + 9 )		5061779	1					
ANR	5062139	Callee	strdup		5061779	0					
ANR	5062140	Identifier	strdup		5061779	0					
ANR	5062141	ArgumentList	buf + 9		5061779	1					
ANR	5062142	Argument	buf + 9		5061779	0					
ANR	5062143	AdditiveExpression	buf + 9		5061779	0		+			
ANR	5062144	Identifier	buf		5061779	0					
ANR	5062145	PrimaryExpression	9		5061779	1					
ANR	5062146	ElseStatement	else		5061779	0					
ANR	5062147	IfStatement	"if ( ! hr -> agent && ! strncmp ( buf , ""User-Agent: "" , 12 ) )"		5061779	0					
ANR	5062148	Condition	"! hr -> agent && ! strncmp ( buf , ""User-Agent: "" , 12 )"	70:14:1549:1596	5061779	0	True				
ANR	5062149	AndExpression	"! hr -> agent && ! strncmp ( buf , ""User-Agent: "" , 12 )"		5061779	0		&&			
ANR	5062150	UnaryOperationExpression	! hr -> agent		5061779	0					
ANR	5062151	UnaryOperator	!		5061779	0					
ANR	5062152	PtrMemberAccess	hr -> agent		5061779	1					
ANR	5062153	Identifier	hr		5061779	0					
ANR	5062154	Identifier	agent		5061779	1					
ANR	5062155	UnaryOperationExpression	"! strncmp ( buf , ""User-Agent: "" , 12 )"		5061779	1					
ANR	5062156	UnaryOperator	!		5061779	0					
ANR	5062157	CallExpression	"strncmp ( buf , ""User-Agent: "" , 12 )"		5061779	1					
ANR	5062158	Callee	strncmp		5061779	0					
ANR	5062159	Identifier	strncmp		5061779	0					
ANR	5062160	ArgumentList	buf		5061779	1					
ANR	5062161	Argument	buf		5061779	0					
ANR	5062162	Identifier	buf		5061779	0					
ANR	5062163	Argument	"""User-Agent: """		5061779	1					
ANR	5062164	PrimaryExpression	"""User-Agent: """		5061779	0					
ANR	5062165	Argument	12		5061779	2					
ANR	5062166	PrimaryExpression	12		5061779	0					
ANR	5062167	CompoundStatement		59:64:1316:1316	5061779	1					
ANR	5062168	ExpressionStatement	hr -> agent = strdup ( buf + 12 )	71:4:1605:1634	5061779	0	True				
ANR	5062169	AssignmentExpression	hr -> agent = strdup ( buf + 12 )		5061779	0		=			
ANR	5062170	PtrMemberAccess	hr -> agent		5061779	0					
ANR	5062171	Identifier	hr		5061779	0					
ANR	5062172	Identifier	agent		5061779	1					
ANR	5062173	CallExpression	strdup ( buf + 12 )		5061779	1					
ANR	5062174	Callee	strdup		5061779	0					
ANR	5062175	Identifier	strdup		5061779	0					
ANR	5062176	ArgumentList	buf + 12		5061779	1					
ANR	5062177	Argument	buf + 12		5061779	0					
ANR	5062178	AdditiveExpression	buf + 12		5061779	0		+			
ANR	5062179	Identifier	buf		5061779	0					
ANR	5062180	PrimaryExpression	12		5061779	1					
ANR	5062181	ElseStatement	else		5061779	0					
ANR	5062182	IfStatement	"if ( ! hr -> host && ! strncmp ( buf , ""Host: "" , 6 ) )"		5061779	0					
ANR	5062183	Condition	"! hr -> host && ! strncmp ( buf , ""Host: "" , 6 )"	72:14:1650:1689	5061779	0	True				
ANR	5062184	AndExpression	"! hr -> host && ! strncmp ( buf , ""Host: "" , 6 )"		5061779	0		&&			
ANR	5062185	UnaryOperationExpression	! hr -> host		5061779	0					
ANR	5062186	UnaryOperator	!		5061779	0					
ANR	5062187	PtrMemberAccess	hr -> host		5061779	1					
ANR	5062188	Identifier	hr		5061779	0					
ANR	5062189	Identifier	host		5061779	1					
ANR	5062190	UnaryOperationExpression	"! strncmp ( buf , ""Host: "" , 6 )"		5061779	1					
ANR	5062191	UnaryOperator	!		5061779	0					
ANR	5062192	CallExpression	"strncmp ( buf , ""Host: "" , 6 )"		5061779	1					
ANR	5062193	Callee	strncmp		5061779	0					
ANR	5062194	Identifier	strncmp		5061779	0					
ANR	5062195	ArgumentList	buf		5061779	1					
ANR	5062196	Argument	buf		5061779	0					
ANR	5062197	Identifier	buf		5061779	0					
ANR	5062198	Argument	"""Host: """		5061779	1					
ANR	5062199	PrimaryExpression	"""Host: """		5061779	0					
ANR	5062200	Argument	6		5061779	2					
ANR	5062201	PrimaryExpression	6		5061779	0					
ANR	5062202	CompoundStatement		61:56:1409:1409	5061779	1					
ANR	5062203	ExpressionStatement	hr -> host = strdup ( buf + 6 )	73:4:1698:1725	5061779	0	True				
ANR	5062204	AssignmentExpression	hr -> host = strdup ( buf + 6 )		5061779	0		=			
ANR	5062205	PtrMemberAccess	hr -> host		5061779	0					
ANR	5062206	Identifier	hr		5061779	0					
ANR	5062207	Identifier	host		5061779	1					
ANR	5062208	CallExpression	strdup ( buf + 6 )		5061779	1					
ANR	5062209	Callee	strdup		5061779	0					
ANR	5062210	Identifier	strdup		5061779	0					
ANR	5062211	ArgumentList	buf + 6		5061779	1					
ANR	5062212	Argument	buf + 6		5061779	0					
ANR	5062213	AdditiveExpression	buf + 6		5061779	0		+			
ANR	5062214	Identifier	buf		5061779	0					
ANR	5062215	PrimaryExpression	6		5061779	1					
ANR	5062216	ElseStatement	else		5061779	0					
ANR	5062217	IfStatement	"if ( ! strncmp ( buf , ""Content-Length: "" , 16 ) )"		5061779	0					
ANR	5062218	Condition	"! strncmp ( buf , ""Content-Length: "" , 16 )"	74:14:1741:1778	5061779	0	True				
ANR	5062219	UnaryOperationExpression	"! strncmp ( buf , ""Content-Length: "" , 16 )"		5061779	0					
ANR	5062220	UnaryOperator	!		5061779	0					
ANR	5062221	CallExpression	"strncmp ( buf , ""Content-Length: "" , 16 )"		5061779	1					
ANR	5062222	Callee	strncmp		5061779	0					
ANR	5062223	Identifier	strncmp		5061779	0					
ANR	5062224	ArgumentList	buf		5061779	1					
ANR	5062225	Argument	buf		5061779	0					
ANR	5062226	Identifier	buf		5061779	0					
ANR	5062227	Argument	"""Content-Length: """		5061779	1					
ANR	5062228	PrimaryExpression	"""Content-Length: """		5061779	0					
ANR	5062229	Argument	16		5061779	2					
ANR	5062230	PrimaryExpression	16		5061779	0					
ANR	5062231	CompoundStatement		63:54:1498:1498	5061779	1					
ANR	5062232	ExpressionStatement	content_length = atoi ( buf + 16 )	75:4:1787:1819	5061779	0	True				
ANR	5062233	AssignmentExpression	content_length = atoi ( buf + 16 )		5061779	0		=			
ANR	5062234	Identifier	content_length		5061779	0					
ANR	5062235	CallExpression	atoi ( buf + 16 )		5061779	1					
ANR	5062236	Callee	atoi		5061779	0					
ANR	5062237	Identifier	atoi		5061779	0					
ANR	5062238	ArgumentList	buf + 16		5061779	1					
ANR	5062239	Argument	buf + 16		5061779	0					
ANR	5062240	AdditiveExpression	buf + 16		5061779	0		+			
ANR	5062241	Identifier	buf		5061779	0					
ANR	5062242	PrimaryExpression	16		5061779	1					
ANR	5062243	ElseStatement	else		5061779	0					
ANR	5062244	IfStatement	"if ( so -> httpauth && ! strncmp ( buf , ""Authorization: Basic "" , 21 ) )"		5061779	0					
ANR	5062245	Condition	"so -> httpauth && ! strncmp ( buf , ""Authorization: Basic "" , 21 )"	76:14:1835:1893	5061779	0	True				
ANR	5062246	AndExpression	"so -> httpauth && ! strncmp ( buf , ""Authorization: Basic "" , 21 )"		5061779	0		&&			
ANR	5062247	PtrMemberAccess	so -> httpauth		5061779	0					
ANR	5062248	Identifier	so		5061779	0					
ANR	5062249	Identifier	httpauth		5061779	1					
ANR	5062250	UnaryOperationExpression	"! strncmp ( buf , ""Authorization: Basic "" , 21 )"		5061779	1					
ANR	5062251	UnaryOperator	!		5061779	0					
ANR	5062252	CallExpression	"strncmp ( buf , ""Authorization: Basic "" , 21 )"		5061779	1					
ANR	5062253	Callee	strncmp		5061779	0					
ANR	5062254	Identifier	strncmp		5061779	0					
ANR	5062255	ArgumentList	buf		5061779	1					
ANR	5062256	Argument	buf		5061779	0					
ANR	5062257	Identifier	buf		5061779	0					
ANR	5062258	Argument	"""Authorization: Basic """		5061779	1					
ANR	5062259	PrimaryExpression	"""Authorization: Basic """		5061779	0					
ANR	5062260	Argument	21		5061779	2					
ANR	5062261	PrimaryExpression	21		5061779	0					
ANR	5062262	CompoundStatement		70:4:1737:1781	5061779	1					
ANR	5062263	IdentifierDeclStatement	char * authtoken = buf + 21 ;	77:4:1902:1928	5061779	0	True				
ANR	5062264	IdentifierDecl	* authtoken = buf + 21		5061779	0					
ANR	5062265	IdentifierDeclType	char *		5061779	0					
ANR	5062266	Identifier	authtoken		5061779	1					
ANR	5062267	AssignmentExpression	* authtoken = buf + 21		5061779	2		=			
ANR	5062268	Identifier	authtoken		5061779	0					
ANR	5062269	AdditiveExpression	buf + 21		5061779	1		+			
ANR	5062270	Identifier	buf		5061779	0					
ANR	5062271	PrimaryExpression	21		5061779	1					
ANR	5062272	IdentifierDeclStatement	size_t authlen = strlen ( authtoken ) ;	78:4:1934:1969	5061779	1	True				
ANR	5062273	IdentifierDecl	authlen = strlen ( authtoken )		5061779	0					
ANR	5062274	IdentifierDeclType	size_t		5061779	0					
ANR	5062275	Identifier	authlen		5061779	1					
ANR	5062276	AssignmentExpression	authlen = strlen ( authtoken )		5061779	2		=			
ANR	5062277	Identifier	authlen		5061779	0					
ANR	5062278	CallExpression	strlen ( authtoken )		5061779	1					
ANR	5062279	Callee	strlen		5061779	0					
ANR	5062280	Identifier	strlen		5061779	0					
ANR	5062281	ArgumentList	authtoken		5061779	1					
ANR	5062282	Argument	authtoken		5061779	0					
ANR	5062283	Identifier	authtoken		5061779	0					
ANR	5062284	IdentifierDeclStatement	char * curauthtoken ;	79:4:1975:1993	5061779	2	True				
ANR	5062285	IdentifierDecl	* curauthtoken		5061779	0					
ANR	5062286	IdentifierDeclType	char *		5061779	0					
ANR	5062287	Identifier	curauthtoken		5061779	1					
ANR	5062288	IdentifierDeclStatement	RListIter * iter ;	80:4:1999:2014	5061779	3	True				
ANR	5062289	IdentifierDecl	* iter		5061779	0					
ANR	5062290	IdentifierDeclType	RListIter *		5061779	0					
ANR	5062291	Identifier	iter		5061779	1					
ANR	5062292	IdentifierDeclStatement	"char * decauthtoken = calloc ( 4 , authlen + 1 ) ;"	81:4:2020:2064	5061779	4	True				
ANR	5062293	IdentifierDecl	"* decauthtoken = calloc ( 4 , authlen + 1 )"		5061779	0					
ANR	5062294	IdentifierDeclType	char *		5061779	0					
ANR	5062295	Identifier	decauthtoken		5061779	1					
ANR	5062296	AssignmentExpression	"* decauthtoken = calloc ( 4 , authlen + 1 )"		5061779	2		=			
ANR	5062297	Identifier	decauthtoken		5061779	0					
ANR	5062298	CallExpression	"calloc ( 4 , authlen + 1 )"		5061779	1					
ANR	5062299	Callee	calloc		5061779	0					
ANR	5062300	Identifier	calloc		5061779	0					
ANR	5062301	ArgumentList	4		5061779	1					
ANR	5062302	Argument	4		5061779	0					
ANR	5062303	PrimaryExpression	4		5061779	0					
ANR	5062304	Argument	authlen + 1		5061779	1					
ANR	5062305	AdditiveExpression	authlen + 1		5061779	0		+			
ANR	5062306	Identifier	authlen		5061779	0					
ANR	5062307	PrimaryExpression	1		5061779	1					
ANR	5062308	IfStatement	if ( ! decauthtoken )		5061779	5					
ANR	5062309	Condition	! decauthtoken	82:8:2074:2086	5061779	0	True				
ANR	5062310	UnaryOperationExpression	! decauthtoken		5061779	0					
ANR	5062311	UnaryOperator	!		5061779	0					
ANR	5062312	Identifier	decauthtoken		5061779	1					
ANR	5062313	CompoundStatement		71:23:1806:1806	5061779	1					
ANR	5062314	ExpressionStatement	"eprintf ( ""Could not allocate decoding buffer\\n"" )"	83:5:2096:2144	5061779	0	True				
ANR	5062315	CallExpression	"eprintf ( ""Could not allocate decoding buffer\\n"" )"		5061779	0					
ANR	5062316	Callee	eprintf		5061779	0					
ANR	5062317	Identifier	eprintf		5061779	0					
ANR	5062318	ArgumentList	"""Could not allocate decoding buffer\\n"""		5061779	1					
ANR	5062319	Argument	"""Could not allocate decoding buffer\\n"""		5061779	0					
ANR	5062320	PrimaryExpression	"""Could not allocate decoding buffer\\n"""		5061779	0					
ANR	5062321	ReturnStatement	return hr ;	84:5:2151:2160	5061779	1	True				
ANR	5062322	Identifier	hr		5061779	0					
ANR	5062323	IfStatement	"if ( r_base64_decode ( ( ut8 * ) decauthtoken , authtoken , authlen ) == - 1 )"		5061779	6					
ANR	5062324	Condition	"r_base64_decode ( ( ut8 * ) decauthtoken , authtoken , authlen ) == - 1"	87:8:2177:2239	5061779	0	True				
ANR	5062325	EqualityExpression	"r_base64_decode ( ( ut8 * ) decauthtoken , authtoken , authlen ) == - 1"		5061779	0		==			
ANR	5062326	CallExpression	"r_base64_decode ( ( ut8 * ) decauthtoken , authtoken , authlen )"		5061779	0					
ANR	5062327	Callee	r_base64_decode		5061779	0					
ANR	5062328	Identifier	r_base64_decode		5061779	0					
ANR	5062329	ArgumentList	( ut8 * ) decauthtoken		5061779	1					
ANR	5062330	Argument	( ut8 * ) decauthtoken		5061779	0					
ANR	5062331	CastExpression	( ut8 * ) decauthtoken		5061779	0					
ANR	5062332	CastTarget	ut8 *		5061779	0					
ANR	5062333	Identifier	decauthtoken		5061779	1					
ANR	5062334	Argument	authtoken		5061779	1					
ANR	5062335	Identifier	authtoken		5061779	0					
ANR	5062336	Argument	authlen		5061779	2					
ANR	5062337	Identifier	authlen		5061779	0					
ANR	5062338	UnaryOperationExpression	- 1		5061779	1					
ANR	5062339	UnaryOperator	-		5061779	0					
ANR	5062340	PrimaryExpression	1		5061779	1					
ANR	5062341	CompoundStatement		76:73:1959:1959	5061779	1					
ANR	5062342	ExpressionStatement	"eprintf ( ""Could not decode authorization token\\n"" )"	88:5:2249:2299	5061779	0	True				
ANR	5062343	CallExpression	"eprintf ( ""Could not decode authorization token\\n"" )"		5061779	0					
ANR	5062344	Callee	eprintf		5061779	0					
ANR	5062345	Identifier	eprintf		5061779	0					
ANR	5062346	ArgumentList	"""Could not decode authorization token\\n"""		5061779	1					
ANR	5062347	Argument	"""Could not decode authorization token\\n"""		5061779	0					
ANR	5062348	PrimaryExpression	"""Could not decode authorization token\\n"""		5061779	0					
ANR	5062349	ElseStatement	else		5061779	0					
ANR	5062350	CompoundStatement		78:11:2029:2029	5061779	0					
ANR	5062351	Statement	r_list_foreach	90:5:2319:2332	5061779	0	True				
ANR	5062352	Statement	(	90:20:2334:2334	5061779	1	True				
ANR	5062353	Statement	so	90:21:2335:2336	5061779	2	True				
ANR	5062354	Statement	->	90:23:2337:2338	5061779	3	True				
ANR	5062355	Statement	authtokens	90:25:2339:2348	5061779	4	True				
ANR	5062356	Statement	","	90:35:2349:2349	5061779	5	True				
ANR	5062357	Statement	iter	90:37:2351:2354	5061779	6	True				
ANR	5062358	Statement	","	90:41:2355:2355	5061779	7	True				
ANR	5062359	Statement	curauthtoken	90:43:2357:2368	5061779	8	True				
ANR	5062360	Statement	)	90:55:2369:2369	5061779	9	True				
ANR	5062361	CompoundStatement		79:57:2088:2088	5061779	10					
ANR	5062362	IfStatement	"if ( ! strcmp ( decauthtoken , curauthtoken ) )"		5061779	0					
ANR	5062363	Condition	"! strcmp ( decauthtoken , curauthtoken )"	91:10:2383:2418	5061779	0	True				
ANR	5062364	UnaryOperationExpression	"! strcmp ( decauthtoken , curauthtoken )"		5061779	0					
ANR	5062365	UnaryOperator	!		5061779	0					
ANR	5062366	CallExpression	"strcmp ( decauthtoken , curauthtoken )"		5061779	1					
ANR	5062367	Callee	strcmp		5061779	0					
ANR	5062368	Identifier	strcmp		5061779	0					
ANR	5062369	ArgumentList	decauthtoken		5061779	1					
ANR	5062370	Argument	decauthtoken		5061779	0					
ANR	5062371	Identifier	decauthtoken		5061779	0					
ANR	5062372	Argument	curauthtoken		5061779	1					
ANR	5062373	Identifier	curauthtoken		5061779	0					
ANR	5062374	CompoundStatement		80:48:2138:2138	5061779	1					
ANR	5062375	ExpressionStatement	hr -> auth = true	92:7:2430:2445	5061779	0	True				
ANR	5062376	AssignmentExpression	hr -> auth = true		5061779	0		=			
ANR	5062377	PtrMemberAccess	hr -> auth		5061779	0					
ANR	5062378	Identifier	hr		5061779	0					
ANR	5062379	Identifier	auth		5061779	1					
ANR	5062380	Identifier	true		5061779	1					
ANR	5062381	BreakStatement	break ;	93:7:2454:2459	5061779	1	True				
ANR	5062382	ExpressionStatement	free ( decauthtoken )	98:4:2487:2506	5061779	7	True				
ANR	5062383	CallExpression	free ( decauthtoken )		5061779	0					
ANR	5062384	Callee	free		5061779	0					
ANR	5062385	Identifier	free		5061779	0					
ANR	5062386	ArgumentList	decauthtoken		5061779	1					
ANR	5062387	Argument	decauthtoken		5061779	0					
ANR	5062388	Identifier	decauthtoken		5061779	0					
ANR	5062389	IfStatement	if ( ! hr -> auth )		5061779	8					
ANR	5062390	Condition	! hr -> auth	100:8:2517:2525	5061779	0	True				
ANR	5062391	UnaryOperationExpression	! hr -> auth		5061779	0					
ANR	5062392	UnaryOperator	!		5061779	0					
ANR	5062393	PtrMemberAccess	hr -> auth		5061779	1					
ANR	5062394	Identifier	hr		5061779	0					
ANR	5062395	Identifier	auth		5061779	1					
ANR	5062396	CompoundStatement		89:19:2245:2245	5061779	1					
ANR	5062397	ExpressionStatement	"eprintf ( ""Failed attempt login from '%s'\\n"" , hr -> host )"	101:5:2535:2589	5061779	0	True				
ANR	5062398	CallExpression	"eprintf ( ""Failed attempt login from '%s'\\n"" , hr -> host )"		5061779	0					
ANR	5062399	Callee	eprintf		5061779	0					
ANR	5062400	Identifier	eprintf		5061779	0					
ANR	5062401	ArgumentList	"""Failed attempt login from '%s'\\n"""		5061779	1					
ANR	5062402	Argument	"""Failed attempt login from '%s'\\n"""		5061779	0					
ANR	5062403	PrimaryExpression	"""Failed attempt login from '%s'\\n"""		5061779	0					
ANR	5062404	Argument	hr -> host		5061779	1					
ANR	5062405	PtrMemberAccess	hr -> host		5061779	0					
ANR	5062406	Identifier	hr		5061779	0					
ANR	5062407	Identifier	host		5061779	1					
ANR	5062408	IfStatement	if ( content_length > 0 )		5061779	10					
ANR	5062409	Condition	content_length > 0	106:5:2614:2629	5061779	0	True				
ANR	5062410	RelationalExpression	content_length > 0		5061779	0		>			
ANR	5062411	Identifier	content_length		5061779	0					
ANR	5062412	PrimaryExpression	0		5061779	1					
ANR	5062413	CompoundStatement		95:23:2349:2349	5061779	1					
ANR	5062414	ExpressionStatement	"r_socket_read_block ( hr -> s , ( ut8 * ) buf , 1 )"	107:2:2636:2677	5061779	0	True				
ANR	5062415	CallExpression	"r_socket_read_block ( hr -> s , ( ut8 * ) buf , 1 )"		5061779	0					
ANR	5062416	Callee	r_socket_read_block		5061779	0					
ANR	5062417	Identifier	r_socket_read_block		5061779	0					
ANR	5062418	ArgumentList	hr -> s		5061779	1					
ANR	5062419	Argument	hr -> s		5061779	0					
ANR	5062420	PtrMemberAccess	hr -> s		5061779	0					
ANR	5062421	Identifier	hr		5061779	0					
ANR	5062422	Identifier	s		5061779	1					
ANR	5062423	Argument	( ut8 * ) buf		5061779	1					
ANR	5062424	CastExpression	( ut8 * ) buf		5061779	0					
ANR	5062425	CastTarget	ut8 *		5061779	0					
ANR	5062426	Identifier	buf		5061779	1					
ANR	5062427	Argument	1		5061779	2					
ANR	5062428	PrimaryExpression	1		5061779	0					
ANR	5062429	ExpressionStatement	hr -> data = malloc ( content_length + 1 )	108:2:2705:2741	5061779	1	True				
ANR	5062430	AssignmentExpression	hr -> data = malloc ( content_length + 1 )		5061779	0		=			
ANR	5062431	PtrMemberAccess	hr -> data		5061779	0					
ANR	5062432	Identifier	hr		5061779	0					
ANR	5062433	Identifier	data		5061779	1					
ANR	5062434	CallExpression	malloc ( content_length + 1 )		5061779	1					
ANR	5062435	Callee	malloc		5061779	0					
ANR	5062436	Identifier	malloc		5061779	0					
ANR	5062437	ArgumentList	content_length + 1		5061779	1					
ANR	5062438	Argument	content_length + 1		5061779	0					
ANR	5062439	AdditiveExpression	content_length + 1		5061779	0		+			
ANR	5062440	Identifier	content_length		5061779	0					
ANR	5062441	PrimaryExpression	1		5061779	1					
ANR	5062442	ExpressionStatement	hr -> data_length = content_length	109:2:2745:2777	5061779	2	True				
ANR	5062443	AssignmentExpression	hr -> data_length = content_length		5061779	0		=			
ANR	5062444	PtrMemberAccess	hr -> data_length		5061779	0					
ANR	5062445	Identifier	hr		5061779	0					
ANR	5062446	Identifier	data_length		5061779	1					
ANR	5062447	Identifier	content_length		5061779	1					
ANR	5062448	ExpressionStatement	"r_socket_read_block ( hr -> s , hr -> data , hr -> data_length )"	110:2:2781:2835	5061779	3	True				
ANR	5062449	CallExpression	"r_socket_read_block ( hr -> s , hr -> data , hr -> data_length )"		5061779	0					
ANR	5062450	Callee	r_socket_read_block		5061779	0					
ANR	5062451	Identifier	r_socket_read_block		5061779	0					
ANR	5062452	ArgumentList	hr -> s		5061779	1					
ANR	5062453	Argument	hr -> s		5061779	0					
ANR	5062454	PtrMemberAccess	hr -> s		5061779	0					
ANR	5062455	Identifier	hr		5061779	0					
ANR	5062456	Identifier	s		5061779	1					
ANR	5062457	Argument	hr -> data		5061779	1					
ANR	5062458	PtrMemberAccess	hr -> data		5061779	0					
ANR	5062459	Identifier	hr		5061779	0					
ANR	5062460	Identifier	data		5061779	1					
ANR	5062461	Argument	hr -> data_length		5061779	2					
ANR	5062462	PtrMemberAccess	hr -> data_length		5061779	0					
ANR	5062463	Identifier	hr		5061779	0					
ANR	5062464	Identifier	data_length		5061779	1					
ANR	5062465	ExpressionStatement	hr -> data [ content_length ] = 0	111:2:2839:2867	5061779	4	True				
ANR	5062466	AssignmentExpression	hr -> data [ content_length ] = 0		5061779	0		=			
ANR	5062467	ArrayIndexing	hr -> data [ content_length ]		5061779	0					
ANR	5062468	PtrMemberAccess	hr -> data		5061779	0					
ANR	5062469	Identifier	hr		5061779	0					
ANR	5062470	Identifier	data		5061779	1					
ANR	5062471	Identifier	content_length		5061779	1					
ANR	5062472	PrimaryExpression	0		5061779	1					
ANR	5062473	ReturnStatement	return hr ;	113:1:2873:2882	5061779	11	True				
ANR	5062474	Identifier	hr		5061779	0					
ANR	5062475	ReturnType	R_API RSocketHTTPRequest *		5061779	1					
ANR	5062476	Identifier	r_socket_http_accept		5061779	2					
ANR	5062477	ParameterList	"RSocket * s , RSocketHTTPOptions * so"		5061779	3					
ANR	5062478	Parameter	RSocket * s	12:48:246:255	5061779	0	True				
ANR	5062479	ParameterType	RSocket *		5061779	0					
ANR	5062480	Identifier	s		5061779	1					
ANR	5062481	Parameter	RSocketHTTPOptions * so	12:60:258:279	5061779	1	True				
ANR	5062482	ParameterType	RSocketHTTPOptions *		5061779	0					
ANR	5062483	Identifier	so		5061779	1					
ANR	5062484	CFGEntryNode	ENTRY		5061779		True				
ANR	5062485	CFGExitNode	EXIT		5061779		True				
ANR	5062486	InfiniteForNode	true		5061779		True				
ANR	5062487	Symbol	xx		5061779						
ANR	5062488	Symbol	* so		5061779						
ANR	5062489	Symbol	hr -> agent		5061779						
ANR	5062490	Symbol	hr -> data		5061779						
ANR	5062491	Symbol	strchr		5061779						
ANR	5062492	Symbol	hr		5061779						
ANR	5062493	Symbol	hr -> auth		5061779						
ANR	5062494	Symbol	hr -> host		5061779						
ANR	5062495	Symbol	strlen		5061779						
ANR	5062496	Symbol	strncmp		5061779						
ANR	5062497	Symbol	r_socket_ready		5061779						
ANR	5062498	Symbol	authlen		5061779						
ANR	5062499	Symbol	content_length		5061779						
ANR	5062500	Symbol	yy		5061779						
ANR	5062501	Symbol	strcmp		5061779						
ANR	5062502	Symbol	NULL		5061779						
ANR	5062503	Symbol	iter		5061779						
ANR	5062504	Symbol	hr -> referer		5061779						
ANR	5062505	Symbol	* breaked		5061779						
ANR	5062506	Symbol	hr -> path		5061779						
ANR	5062507	Symbol	decauthtoken		5061779						
ANR	5062508	Symbol	R_NEW0		5061779						
ANR	5062509	Symbol	so -> httpauth		5061779						
ANR	5062510	Symbol	strstr		5061779						
ANR	5062511	Symbol	breaked		5061779						
ANR	5062512	Symbol	curauthtoken		5061779						
ANR	5062513	Symbol	true		5061779						
ANR	5062514	Symbol	* hr -> data		5061779						
ANR	5062515	Symbol	so -> accept_timeout		5061779						
ANR	5062516	Symbol	calloc		5061779						
ANR	5062517	Symbol	hr -> data_length		5061779						
ANR	5062518	Symbol	* hr		5061779						
ANR	5062519	Symbol	hr -> method		5061779						
ANR	5062520	Symbol	so		5061779						
ANR	5062521	Symbol	atoi		5061779						
ANR	5062522	Symbol	r_base64_decode		5061779						
ANR	5062523	Symbol	malloc		5061779						
ANR	5062524	Symbol	authtoken		5061779						
ANR	5062525	Symbol	* content_length		5061779						
ANR	5062526	Symbol	RSocketHTTPRequest		5061779						
ANR	5062527	Symbol	r_socket_accept_timeout		5061779						
ANR	5062528	Symbol	r_socket_accept		5061779						
ANR	5062529	Symbol	p		5061779						
ANR	5062530	Symbol	pxx		5061779						
ANR	5062531	Symbol	q		5061779						
ANR	5062532	Symbol	buf		5061779						
ANR	5062533	Symbol	hr -> s		5061779						
ANR	5062534	Symbol	s		5061779						
ANR	5062535	Symbol	* * hr		5061779						
ANR	5062536	Symbol	* p		5061779						
ANR	5062537	Symbol	strdup		5061779						
ANR	5062538	Symbol	* q		5061779						
ANR	5062539	Symbol	r_socket_gets		5061779						
ANR	5062540	Symbol	first		5061779						
ANR	5062541	Symbol	so -> timeout		5061779						
ANR	5062542	Function	r_socket_http_response	116:0:2887:3562							
ANR	5062543	FunctionDef	"r_socket_http_response (RSocketHTTPRequest * rs , int code , const char * out , int len , const char * headers)"		5062542	0					
ANR	5062544	CompoundStatement		116:116:3003:3562	5062542	0					
ANR	5062545	IdentifierDeclStatement	"const char * strcode = code == 200 ? ""ok"" : code == 301 ? ""Moved permanently"" : code == 302 ? ""Found"" : code == 401 ? ""Unauthorized"" : code == 403 ? ""Permission denied"" : code == 404 ? ""not found"" : ""UNKNOWN"" ;"	117:1:3006:3199	5062542	0	True				
ANR	5062546	IdentifierDecl	"* strcode = code == 200 ? ""ok"" : code == 301 ? ""Moved permanently"" : code == 302 ? ""Found"" : code == 401 ? ""Unauthorized"" : code == 403 ? ""Permission denied"" : code == 404 ? ""not found"" : ""UNKNOWN"""		5062542	0					
ANR	5062547	IdentifierDeclType	const char *		5062542	0					
ANR	5062548	Identifier	strcode		5062542	1					
ANR	5062549	AssignmentExpression	"* strcode = code == 200 ? ""ok"" : code == 301 ? ""Moved permanently"" : code == 302 ? ""Found"" : code == 401 ? ""Unauthorized"" : code == 403 ? ""Permission denied"" : code == 404 ? ""not found"" : ""UNKNOWN"""		5062542	2		=			
ANR	5062550	Identifier	strcode		5062542	0					
ANR	5062551	ConditionalExpression	"code == 200 ? ""ok"" : code == 301 ? ""Moved permanently"" : code == 302 ? ""Found"" : code == 401 ? ""Unauthorized"" : code == 403 ? ""Permission denied"" : code == 404 ? ""not found"" : ""UNKNOWN"""		5062542	1					
ANR	5062552	Condition	code == 200		5062542	0					
ANR	5062553	EqualityExpression	code == 200		5062542	0		==			
ANR	5062554	Identifier	code		5062542	0					
ANR	5062555	PrimaryExpression	200		5062542	1					
ANR	5062556	PrimaryExpression	"""ok"""		5062542	1					
ANR	5062557	ConditionalExpression	"code == 301 ? ""Moved permanently"" : code == 302 ? ""Found"" : code == 401 ? ""Unauthorized"" : code == 403 ? ""Permission denied"" : code == 404 ? ""not found"" : ""UNKNOWN"""		5062542	2					
ANR	5062558	Condition	code == 301		5062542	0					
ANR	5062559	EqualityExpression	code == 301		5062542	0		==			
ANR	5062560	Identifier	code		5062542	0					
ANR	5062561	PrimaryExpression	301		5062542	1					
ANR	5062562	PrimaryExpression	"""Moved permanently"""		5062542	1					
ANR	5062563	ConditionalExpression	"code == 302 ? ""Found"" : code == 401 ? ""Unauthorized"" : code == 403 ? ""Permission denied"" : code == 404 ? ""not found"" : ""UNKNOWN"""		5062542	2					
ANR	5062564	Condition	code == 302		5062542	0					
ANR	5062565	EqualityExpression	code == 302		5062542	0		==			
ANR	5062566	Identifier	code		5062542	0					
ANR	5062567	PrimaryExpression	302		5062542	1					
ANR	5062568	PrimaryExpression	"""Found"""		5062542	1					
ANR	5062569	ConditionalExpression	"code == 401 ? ""Unauthorized"" : code == 403 ? ""Permission denied"" : code == 404 ? ""not found"" : ""UNKNOWN"""		5062542	2					
ANR	5062570	Condition	code == 401		5062542	0					
ANR	5062571	EqualityExpression	code == 401		5062542	0		==			
ANR	5062572	Identifier	code		5062542	0					
ANR	5062573	PrimaryExpression	401		5062542	1					
ANR	5062574	PrimaryExpression	"""Unauthorized"""		5062542	1					
ANR	5062575	ConditionalExpression	"code == 403 ? ""Permission denied"" : code == 404 ? ""not found"" : ""UNKNOWN"""		5062542	2					
ANR	5062576	Condition	code == 403		5062542	0					
ANR	5062577	EqualityExpression	code == 403		5062542	0		==			
ANR	5062578	Identifier	code		5062542	0					
ANR	5062579	PrimaryExpression	403		5062542	1					
ANR	5062580	PrimaryExpression	"""Permission denied"""		5062542	1					
ANR	5062581	ConditionalExpression	"code == 404 ? ""not found"" : ""UNKNOWN"""		5062542	2					
ANR	5062582	Condition	code == 404		5062542	0					
ANR	5062583	EqualityExpression	code == 404		5062542	0		==			
ANR	5062584	Identifier	code		5062542	0					
ANR	5062585	PrimaryExpression	404		5062542	1					
ANR	5062586	PrimaryExpression	"""not found"""		5062542	1					
ANR	5062587	PrimaryExpression	"""UNKNOWN"""		5062542	2					
ANR	5062588	IfStatement	if ( len < 1 )		5062542	1					
ANR	5062589	Condition	len < 1	125:5:3206:3212	5062542	0	True				
ANR	5062590	RelationalExpression	len < 1		5062542	0		<			
ANR	5062591	Identifier	len		5062542	0					
ANR	5062592	PrimaryExpression	1		5062542	1					
ANR	5062593	CompoundStatement		10:14:211:211	5062542	1					
ANR	5062594	ExpressionStatement	len = out ? strlen ( out ) : 0	126:2:3219:3247	5062542	0	True				
ANR	5062595	AssignmentExpression	len = out ? strlen ( out ) : 0		5062542	0		=			
ANR	5062596	Identifier	len		5062542	0					
ANR	5062597	ConditionalExpression	out ? strlen ( out ) : 0		5062542	1					
ANR	5062598	Condition	out		5062542	0					
ANR	5062599	Identifier	out		5062542	0					
ANR	5062600	CallExpression	strlen ( out )		5062542	1					
ANR	5062601	Callee	strlen		5062542	0					
ANR	5062602	Identifier	strlen		5062542	0					
ANR	5062603	ArgumentList	out		5062542	1					
ANR	5062604	Argument	out		5062542	0					
ANR	5062605	Identifier	out		5062542	0					
ANR	5062606	PrimaryExpression	0		5062542	2					
ANR	5062607	IfStatement	if ( ! headers )		5062542	2					
ANR	5062608	Condition	! headers	128:5:3257:3264	5062542	0	True				
ANR	5062609	UnaryOperationExpression	! headers		5062542	0					
ANR	5062610	UnaryOperator	!		5062542	0					
ANR	5062611	Identifier	headers		5062542	1					
ANR	5062612	CompoundStatement		13:15:263:263	5062542	1					
ANR	5062613	ExpressionStatement	"headers = code == 401 ? ""WWW-Authenticate: Basic realm=\\""R2 Web UI Access\\""\\n"" : """""	129:2:3271:3354	5062542	0	True				
ANR	5062614	AssignmentExpression	"headers = code == 401 ? ""WWW-Authenticate: Basic realm=\\""R2 Web UI Access\\""\\n"" : """""		5062542	0		=			
ANR	5062615	Identifier	headers		5062542	0					
ANR	5062616	ConditionalExpression	"code == 401 ? ""WWW-Authenticate: Basic realm=\\""R2 Web UI Access\\""\\n"" : """""		5062542	1					
ANR	5062617	Condition	code == 401		5062542	0					
ANR	5062618	EqualityExpression	code == 401		5062542	0		==			
ANR	5062619	Identifier	code		5062542	0					
ANR	5062620	PrimaryExpression	401		5062542	1					
ANR	5062621	PrimaryExpression	"""WWW-Authenticate: Basic realm=\\""R2 Web UI Access\\""\\n"""		5062542	1					
ANR	5062622	PrimaryExpression	""""""		5062542	2					
ANR	5062623	Statement	r_socket_printf	131:1:3360:3374	5062542	3	True				
ANR	5062624	Statement	(	131:17:3376:3376	5062542	4	True				
ANR	5062625	Statement	rs	131:18:3377:3378	5062542	5	True				
ANR	5062626	Statement	->	131:20:3379:3380	5062542	6	True				
ANR	5062627	Statement	s	131:22:3381:3381	5062542	7	True				
ANR	5062628	Statement	","	131:23:3382:3382	5062542	8	True				
ANR	5062629	Statement	"""HTTP/1.0 %d %s\\r\\n%s"""	131:25:3384:3405	5062542	9	True				
ANR	5062630	Statement	"""Connection: close\\r\\nContent-Length: %d\\r\\n\\r\\n"""	132:2:3409:3457	5062542	10	True				
ANR	5062631	Statement	","	132:51:3458:3458	5062542	11	True				
ANR	5062632	Statement	code	133:2:3462:3465	5062542	12	True				
ANR	5062633	Statement	","	133:6:3466:3466	5062542	13	True				
ANR	5062634	Statement	strcode	133:8:3468:3474	5062542	14	True				
ANR	5062635	Statement	","	133:15:3475:3475	5062542	15	True				
ANR	5062636	Statement	headers	133:17:3477:3483	5062542	16	True				
ANR	5062637	Statement	","	133:24:3484:3484	5062542	17	True				
ANR	5062638	Statement	len	133:26:3486:3488	5062542	18	True				
ANR	5062639	Statement	)	133:29:3489:3489	5062542	19	True				
ANR	5062640	ExpressionStatement		133:30:3490:3490	5062542	20	True				
ANR	5062641	IfStatement	if ( out && len > 0 )		5062542	21					
ANR	5062642	Condition	out && len > 0	134:5:3497:3510	5062542	0	True				
ANR	5062643	AndExpression	out && len > 0		5062542	0		&&			
ANR	5062644	Identifier	out		5062542	0					
ANR	5062645	RelationalExpression	len > 0		5062542	1		>			
ANR	5062646	Identifier	len		5062542	0					
ANR	5062647	PrimaryExpression	0		5062542	1					
ANR	5062648	CompoundStatement		19:21:509:509	5062542	1					
ANR	5062649	ExpressionStatement	"r_socket_write ( rs -> s , ( void * ) out , len )"	135:2:3517:3557	5062542	0	True				
ANR	5062650	CallExpression	"r_socket_write ( rs -> s , ( void * ) out , len )"		5062542	0					
ANR	5062651	Callee	r_socket_write		5062542	0					
ANR	5062652	Identifier	r_socket_write		5062542	0					
ANR	5062653	ArgumentList	rs -> s		5062542	1					
ANR	5062654	Argument	rs -> s		5062542	0					
ANR	5062655	PtrMemberAccess	rs -> s		5062542	0					
ANR	5062656	Identifier	rs		5062542	0					
ANR	5062657	Identifier	s		5062542	1					
ANR	5062658	Argument	( void * ) out		5062542	1					
ANR	5062659	CastExpression	( void * ) out		5062542	0					
ANR	5062660	CastTarget	void *		5062542	0					
ANR	5062661	Identifier	out		5062542	1					
ANR	5062662	Argument	len		5062542	2					
ANR	5062663	Identifier	len		5062542	0					
ANR	5062664	ReturnType	R_API void		5062542	1					
ANR	5062665	Identifier	r_socket_http_response		5062542	2					
ANR	5062666	ParameterList	"RSocketHTTPRequest * rs , int code , const char * out , int len , const char * headers"		5062542	3					
ANR	5062667	Parameter	RSocketHTTPRequest * rs	116:35:2922:2943	5062542	0	True				
ANR	5062668	ParameterType	RSocketHTTPRequest *		5062542	0					
ANR	5062669	Identifier	rs		5062542	1					
ANR	5062670	Parameter	int code	116:59:2946:2953	5062542	1	True				
ANR	5062671	ParameterType	int		5062542	0					
ANR	5062672	Identifier	code		5062542	1					
ANR	5062673	Parameter	const char * out	116:69:2956:2970	5062542	2	True				
ANR	5062674	ParameterType	const char *		5062542	0					
ANR	5062675	Identifier	out		5062542	1					
ANR	5062676	Parameter	int len	116:86:2973:2979	5062542	3	True				
ANR	5062677	ParameterType	int		5062542	0					
ANR	5062678	Identifier	len		5062542	1					
ANR	5062679	Parameter	const char * headers	116:95:2982:3000	5062542	4	True				
ANR	5062680	ParameterType	const char *		5062542	0					
ANR	5062681	Identifier	headers		5062542	1					
ANR	5062682	CFGEntryNode	ENTRY		5062542		True				
ANR	5062683	CFGExitNode	EXIT		5062542		True				
ANR	5062684	Symbol	rs		5062542						
ANR	5062685	Symbol	headers		5062542						
ANR	5062686	Symbol	strlen		5062542						
ANR	5062687	Symbol	code		5062542						
ANR	5062688	Symbol	len		5062542						
ANR	5062689	Symbol	* rs		5062542						
ANR	5062690	Symbol	strcode		5062542						
ANR	5062691	Symbol	out		5062542						
ANR	5062692	Symbol	rs -> s		5062542						
ANR	5062693	Function	r_socket_http_handle_upload	139:0:3565:4508							
ANR	5062694	FunctionDef	"r_socket_http_handle_upload (const ut8 * str , int len , int * retlen)"		5062693	0					
ANR	5062695	CompoundStatement		139:77:3642:4508	5062693	0					
ANR	5062696	IfStatement	if ( retlen )		5062693	0					
ANR	5062697	Condition	retlen	140:5:3649:3654	5062693	0	True				
ANR	5062698	Identifier	retlen		5062693	0					
ANR	5062699	CompoundStatement		2:13:14:14	5062693	1					
ANR	5062700	ExpressionStatement	* retlen = 0	141:2:3661:3672	5062693	0	True				
ANR	5062701	AssignmentExpression	* retlen = 0		5062693	0		=			
ANR	5062702	UnaryOperationExpression	* retlen		5062693	0					
ANR	5062703	UnaryOperator	*		5062693	0					
ANR	5062704	Identifier	retlen		5062693	1					
ANR	5062705	PrimaryExpression	0		5062693	1					
ANR	5062706	IfStatement	"if ( ! strncmp ( ( const char * ) str , ""------------------------------"" , 10 ) )"		5062693	1					
ANR	5062707	Condition	"! strncmp ( ( const char * ) str , ""------------------------------"" , 10 )"	143:5:3682:3747	5062693	0	True				
ANR	5062708	UnaryOperationExpression	"! strncmp ( ( const char * ) str , ""------------------------------"" , 10 )"		5062693	0					
ANR	5062709	UnaryOperator	!		5062693	0					
ANR	5062710	CallExpression	"strncmp ( ( const char * ) str , ""------------------------------"" , 10 )"		5062693	1					
ANR	5062711	Callee	strncmp		5062693	0					
ANR	5062712	Identifier	strncmp		5062693	0					
ANR	5062713	ArgumentList	( const char * ) str		5062693	1					
ANR	5062714	Argument	( const char * ) str		5062693	0					
ANR	5062715	CastExpression	( const char * ) str		5062693	0					
ANR	5062716	CastTarget	const char *		5062693	0					
ANR	5062717	Identifier	str		5062693	1					
ANR	5062718	Argument	"""------------------------------"""		5062693	1					
ANR	5062719	PrimaryExpression	"""------------------------------"""		5062693	0					
ANR	5062720	Argument	10		5062693	2					
ANR	5062721	PrimaryExpression	10		5062693	0					
ANR	5062722	CompoundStatement		9:2:190:228	5062693	1					
ANR	5062723	IdentifierDeclStatement	int datalen ;	144:2:3754:3765	5062693	0	True				
ANR	5062724	IdentifierDecl	datalen		5062693	0					
ANR	5062725	IdentifierDeclType	int		5062693	0					
ANR	5062726	Identifier	datalen		5062693	1					
ANR	5062727	IdentifierDeclStatement	char * ret ;	145:2:3769:3778	5062693	1	True				
ANR	5062728	IdentifierDecl	* ret		5062693	0					
ANR	5062729	IdentifierDeclType	char *		5062693	0					
ANR	5062730	Identifier	ret		5062693	1					
ANR	5062731	IdentifierDeclStatement	"const char * data , * token = ( const char * ) str + 10 ;"	146:2:3782:3829	5062693	2	True				
ANR	5062732	IdentifierDecl	* data		5062693	0					
ANR	5062733	IdentifierDeclType	const char *		5062693	0					
ANR	5062734	Identifier	data		5062693	1					
ANR	5062735	IdentifierDecl	* token = ( const char * ) str + 10		5062693	1					
ANR	5062736	IdentifierDeclType	const char *		5062693	0					
ANR	5062737	Identifier	token		5062693	1					
ANR	5062738	AssignmentExpression	* token = ( const char * ) str + 10		5062693	2		=			
ANR	5062739	Identifier	token		5062693	0					
ANR	5062740	AdditiveExpression	( const char * ) str + 10		5062693	1		+			
ANR	5062741	CastExpression	( const char * ) str		5062693	0					
ANR	5062742	CastTarget	const char *		5062693	0					
ANR	5062743	Identifier	str		5062693	1					
ANR	5062744	PrimaryExpression	10		5062693	1					
ANR	5062745	IdentifierDeclStatement	"const char * end = strchr ( token , '\\n' ) ;"	147:2:3833:3871	5062693	3	True				
ANR	5062746	IdentifierDecl	"* end = strchr ( token , '\\n' )"		5062693	0					
ANR	5062747	IdentifierDeclType	const char *		5062693	0					
ANR	5062748	Identifier	end		5062693	1					
ANR	5062749	AssignmentExpression	"* end = strchr ( token , '\\n' )"		5062693	2		=			
ANR	5062750	Identifier	end		5062693	0					
ANR	5062751	CallExpression	"strchr ( token , '\\n' )"		5062693	1					
ANR	5062752	Callee	strchr		5062693	0					
ANR	5062753	Identifier	strchr		5062693	0					
ANR	5062754	ArgumentList	token		5062693	1					
ANR	5062755	Argument	token		5062693	0					
ANR	5062756	Identifier	token		5062693	0					
ANR	5062757	Argument	'\\n'		5062693	1					
ANR	5062758	PrimaryExpression	'\\n'		5062693	0					
ANR	5062759	IfStatement	if ( ! end )		5062693	4					
ANR	5062760	Condition	! end	148:6:3879:3882	5062693	0	True				
ANR	5062761	UnaryOperationExpression	! end		5062693	0					
ANR	5062762	UnaryOperator	!		5062693	0					
ANR	5062763	Identifier	end		5062693	1					
ANR	5062764	CompoundStatement		10:12:242:242	5062693	1					
ANR	5062765	ReturnStatement	return NULL ;	149:3:3890:3901	5062693	0	True				
ANR	5062766	Identifier	NULL		5062693	0					
ANR	5062767	ExpressionStatement	"data = strstr ( end , ""Content-Disposition: form-data; "" )"	151:2:3909:3964	5062693	5	True				
ANR	5062768	AssignmentExpression	"data = strstr ( end , ""Content-Disposition: form-data; "" )"		5062693	0		=			
ANR	5062769	Identifier	data		5062693	0					
ANR	5062770	CallExpression	"strstr ( end , ""Content-Disposition: form-data; "" )"		5062693	1					
ANR	5062771	Callee	strstr		5062693	0					
ANR	5062772	Identifier	strstr		5062693	0					
ANR	5062773	ArgumentList	end		5062693	1					
ANR	5062774	Argument	end		5062693	0					
ANR	5062775	Identifier	end		5062693	0					
ANR	5062776	Argument	"""Content-Disposition: form-data; """		5062693	1					
ANR	5062777	PrimaryExpression	"""Content-Disposition: form-data; """		5062693	0					
ANR	5062778	IfStatement	if ( data )		5062693	6					
ANR	5062779	Condition	data	152:6:3972:3975	5062693	0	True				
ANR	5062780	Identifier	data		5062693	0					
ANR	5062781	CompoundStatement		14:12:335:335	5062693	1					
ANR	5062782	ExpressionStatement	"data = strchr ( data , '\\n' )"	153:3:3983:4009	5062693	0	True				
ANR	5062783	AssignmentExpression	"data = strchr ( data , '\\n' )"		5062693	0		=			
ANR	5062784	Identifier	data		5062693	0					
ANR	5062785	CallExpression	"strchr ( data , '\\n' )"		5062693	1					
ANR	5062786	Callee	strchr		5062693	0					
ANR	5062787	Identifier	strchr		5062693	0					
ANR	5062788	ArgumentList	data		5062693	1					
ANR	5062789	Argument	data		5062693	0					
ANR	5062790	Identifier	data		5062693	0					
ANR	5062791	Argument	'\\n'		5062693	1					
ANR	5062792	PrimaryExpression	'\\n'		5062693	0					
ANR	5062793	IfStatement	if ( data )		5062693	1					
ANR	5062794	Condition	data	154:7:4018:4021	5062693	0	True				
ANR	5062795	Identifier	data		5062693	0					
ANR	5062796	CompoundStatement		16:13:381:381	5062693	1					
ANR	5062797	ExpressionStatement	"data = strchr ( data + 1 , '\\n' )"	155:4:4030:4060	5062693	0	True				
ANR	5062798	AssignmentExpression	"data = strchr ( data + 1 , '\\n' )"		5062693	0		=			
ANR	5062799	Identifier	data		5062693	0					
ANR	5062800	CallExpression	"strchr ( data + 1 , '\\n' )"		5062693	1					
ANR	5062801	Callee	strchr		5062693	0					
ANR	5062802	Identifier	strchr		5062693	0					
ANR	5062803	ArgumentList	data + 1		5062693	1					
ANR	5062804	Argument	data + 1		5062693	0					
ANR	5062805	AdditiveExpression	data + 1		5062693	0		+			
ANR	5062806	Identifier	data		5062693	0					
ANR	5062807	PrimaryExpression	1		5062693	1					
ANR	5062808	Argument	'\\n'		5062693	1					
ANR	5062809	PrimaryExpression	'\\n'		5062693	0					
ANR	5062810	IfStatement	if ( data )		5062693	7					
ANR	5062811	Condition	data	158:6:4077:4080	5062693	0	True				
ANR	5062812	Identifier	data		5062693	0					
ANR	5062813	CompoundStatement		20:12:440:440	5062693	1					
ANR	5062814	WhileStatement	while ( * data == 10 || * data == 13 )		5062693	0					
ANR	5062815	Condition	* data == 10 || * data == 13	159:10:4095:4120	5062693	0	True				
ANR	5062816	OrExpression	* data == 10 || * data == 13		5062693	0		||			
ANR	5062817	EqualityExpression	* data == 10		5062693	0		==			
ANR	5062818	UnaryOperationExpression	* data		5062693	0					
ANR	5062819	UnaryOperator	*		5062693	0					
ANR	5062820	Identifier	data		5062693	1					
ANR	5062821	PrimaryExpression	10		5062693	1					
ANR	5062822	EqualityExpression	* data == 13		5062693	1		==			
ANR	5062823	UnaryOperationExpression	* data		5062693	0					
ANR	5062824	UnaryOperator	*		5062693	0					
ANR	5062825	Identifier	data		5062693	1					
ANR	5062826	PrimaryExpression	13		5062693	1					
ANR	5062827	CompoundStatement		21:38:480:480	5062693	1					
ANR	5062828	ExpressionStatement	data ++	160:4:4129:4135	5062693	0	True				
ANR	5062829	PostIncDecOperationExpression	data ++		5062693	0					
ANR	5062830	Identifier	data		5062693	0					
ANR	5062831	IncDec	++		5062693	1					
ANR	5062832	ExpressionStatement	end = ( const char * ) str + len - 40	162:3:4145:4175	5062693	1	True				
ANR	5062833	AssignmentExpression	end = ( const char * ) str + len - 40		5062693	0		=			
ANR	5062834	Identifier	end		5062693	0					
ANR	5062835	AdditiveExpression	( const char * ) str + len - 40		5062693	1		+			
ANR	5062836	CastExpression	( const char * ) str		5062693	0					
ANR	5062837	CastTarget	const char *		5062693	0					
ANR	5062838	Identifier	str		5062693	1					
ANR	5062839	AdditiveExpression	len - 40		5062693	1		-			
ANR	5062840	Identifier	len		5062693	0					
ANR	5062841	PrimaryExpression	40		5062693	1					
ANR	5062842	WhileStatement	while ( * end == '-' )		5062693	2					
ANR	5062843	Condition	* end == '-'	163:10:4187:4197	5062693	0	True				
ANR	5062844	EqualityExpression	* end == '-'		5062693	0		==			
ANR	5062845	UnaryOperationExpression	* end		5062693	0					
ANR	5062846	UnaryOperator	*		5062693	0					
ANR	5062847	Identifier	end		5062693	1					
ANR	5062848	PrimaryExpression	'-'		5062693	1					
ANR	5062849	CompoundStatement		25:23:557:557	5062693	1					
ANR	5062850	ExpressionStatement	end --	164:4:4206:4211	5062693	0	True				
ANR	5062851	PostIncDecOperationExpression	end --		5062693	0					
ANR	5062852	Identifier	end		5062693	0					
ANR	5062853	IncDec	--		5062693	1					
ANR	5062854	IfStatement	if ( * end == 10 || * end == 13 )		5062693	3					
ANR	5062855	Condition	* end == 10 || * end == 13	166:7:4225:4248	5062693	0	True				
ANR	5062856	OrExpression	* end == 10 || * end == 13		5062693	0		||			
ANR	5062857	EqualityExpression	* end == 10		5062693	0		==			
ANR	5062858	UnaryOperationExpression	* end		5062693	0					
ANR	5062859	UnaryOperator	*		5062693	0					
ANR	5062860	Identifier	end		5062693	1					
ANR	5062861	PrimaryExpression	10		5062693	1					
ANR	5062862	EqualityExpression	* end == 13		5062693	1		==			
ANR	5062863	UnaryOperationExpression	* end		5062693	0					
ANR	5062864	UnaryOperator	*		5062693	0					
ANR	5062865	Identifier	end		5062693	1					
ANR	5062866	PrimaryExpression	13		5062693	1					
ANR	5062867	CompoundStatement		28:33:608:608	5062693	1					
ANR	5062868	ExpressionStatement	end --	167:4:4257:4262	5062693	0	True				
ANR	5062869	PostIncDecOperationExpression	end --		5062693	0					
ANR	5062870	Identifier	end		5062693	0					
ANR	5062871	IncDec	--		5062693	1					
ANR	5062872	ExpressionStatement	datalen = ( size_t ) ( end - data )	169:3:4272:4300	5062693	4	True				
ANR	5062873	AssignmentExpression	datalen = ( size_t ) ( end - data )		5062693	0		=			
ANR	5062874	Identifier	datalen		5062693	0					
ANR	5062875	CastExpression	( size_t ) ( end - data )		5062693	1					
ANR	5062876	CastTarget	size_t		5062693	0					
ANR	5062877	AdditiveExpression	end - data		5062693	1		-			
ANR	5062878	Identifier	end		5062693	0					
ANR	5062879	Identifier	data		5062693	1					
ANR	5062880	ExpressionStatement	ret = malloc ( datalen + 1 )	170:3:4305:4329	5062693	5	True				
ANR	5062881	AssignmentExpression	ret = malloc ( datalen + 1 )		5062693	0		=			
ANR	5062882	Identifier	ret		5062693	0					
ANR	5062883	CallExpression	malloc ( datalen + 1 )		5062693	1					
ANR	5062884	Callee	malloc		5062693	0					
ANR	5062885	Identifier	malloc		5062693	0					
ANR	5062886	ArgumentList	datalen + 1		5062693	1					
ANR	5062887	Argument	datalen + 1		5062693	0					
ANR	5062888	AdditiveExpression	datalen + 1		5062693	0		+			
ANR	5062889	Identifier	datalen		5062693	0					
ANR	5062890	PrimaryExpression	1		5062693	1					
ANR	5062891	IfStatement	if ( ! ret )		5062693	6					
ANR	5062892	Condition	! ret	171:7:4338:4341	5062693	0	True				
ANR	5062893	UnaryOperationExpression	! ret		5062693	0					
ANR	5062894	UnaryOperator	!		5062693	0					
ANR	5062895	Identifier	ret		5062693	1					
ANR	5062896	CompoundStatement		33:13:701:701	5062693	1					
ANR	5062897	ReturnStatement	return NULL ;	172:4:4350:4361	5062693	0	True				
ANR	5062898	Identifier	NULL		5062693	0					
ANR	5062899	ExpressionStatement	"memcpy ( ret , data , datalen )"	174:3:4371:4398	5062693	7	True				
ANR	5062900	CallExpression	"memcpy ( ret , data , datalen )"		5062693	0					
ANR	5062901	Callee	memcpy		5062693	0					
ANR	5062902	Identifier	memcpy		5062693	0					
ANR	5062903	ArgumentList	ret		5062693	1					
ANR	5062904	Argument	ret		5062693	0					
ANR	5062905	Identifier	ret		5062693	0					
ANR	5062906	Argument	data		5062693	1					
ANR	5062907	Identifier	data		5062693	0					
ANR	5062908	Argument	datalen		5062693	2					
ANR	5062909	Identifier	datalen		5062693	0					
ANR	5062910	ExpressionStatement	ret [ datalen ] = 0	175:3:4403:4419	5062693	8	True				
ANR	5062911	AssignmentExpression	ret [ datalen ] = 0		5062693	0		=			
ANR	5062912	ArrayIndexing	ret [ datalen ]		5062693	0					
ANR	5062913	Identifier	ret		5062693	0					
ANR	5062914	Identifier	datalen		5062693	1					
ANR	5062915	PrimaryExpression	0		5062693	1					
ANR	5062916	IfStatement	if ( retlen )		5062693	9					
ANR	5062917	Condition	retlen	176:7:4428:4433	5062693	0	True				
ANR	5062918	Identifier	retlen		5062693	0					
ANR	5062919	CompoundStatement		38:15:793:793	5062693	1					
ANR	5062920	ExpressionStatement	* retlen = datalen	177:4:4442:4459	5062693	0	True				
ANR	5062921	AssignmentExpression	* retlen = datalen		5062693	0		=			
ANR	5062922	UnaryOperationExpression	* retlen		5062693	0					
ANR	5062923	UnaryOperator	*		5062693	0					
ANR	5062924	Identifier	retlen		5062693	1					
ANR	5062925	Identifier	datalen		5062693	1					
ANR	5062926	ReturnStatement	return ( ut8 * ) ret ;	179:3:4469:4485	5062693	10	True				
ANR	5062927	CastExpression	( ut8 * ) ret		5062693	0					
ANR	5062928	CastTarget	ut8 *		5062693	0					
ANR	5062929	Identifier	ret		5062693	1					
ANR	5062930	ReturnStatement	return NULL ;	182:1:4495:4506	5062693	2	True				
ANR	5062931	Identifier	NULL		5062693	0					
ANR	5062932	ReturnType	R_API ut8 *		5062693	1					
ANR	5062933	Identifier	r_socket_http_handle_upload		5062693	2					
ANR	5062934	ParameterList	"const ut8 * str , int len , int * retlen"		5062693	3					
ANR	5062935	Parameter	const ut8 * str	139:39:3604:3617	5062693	0	True				
ANR	5062936	ParameterType	const ut8 *		5062693	0					
ANR	5062937	Identifier	str		5062693	1					
ANR	5062938	Parameter	int len	139:55:3620:3626	5062693	1	True				
ANR	5062939	ParameterType	int		5062693	0					
ANR	5062940	Identifier	len		5062693	1					
ANR	5062941	Parameter	int * retlen	139:64:3629:3639	5062693	2	True				
ANR	5062942	ParameterType	int *		5062693	0					
ANR	5062943	Identifier	retlen		5062693	1					
ANR	5062944	CFGEntryNode	ENTRY		5062693		True				
ANR	5062945	CFGExitNode	EXIT		5062693		True				
ANR	5062946	Symbol	ret		5062693						
ANR	5062947	Symbol	malloc		5062693						
ANR	5062948	Symbol	NULL		5062693						
ANR	5062949	Symbol	data		5062693						
ANR	5062950	Symbol	strchr		5062693						
ANR	5062951	Symbol	* ret		5062693						
ANR	5062952	Symbol	* retlen		5062693						
ANR	5062953	Symbol	datalen		5062693						
ANR	5062954	Symbol	token		5062693						
ANR	5062955	Symbol	str		5062693						
ANR	5062956	Symbol	* datalen		5062693						
ANR	5062957	Symbol	strncmp		5062693						
ANR	5062958	Symbol	len		5062693						
ANR	5062959	Symbol	strstr		5062693						
ANR	5062960	Symbol	retlen		5062693						
ANR	5062961	Symbol	end		5062693						
ANR	5062962	Symbol	* end		5062693						
ANR	5062963	Symbol	* data		5062693						
ANR	5062964	Function	r_socket_http_close	186:0:4553:4740							
ANR	5062965	FunctionDef	r_socket_http_close (RSocketHTTPRequest * rs)		5062964	0					
ANR	5062966	CompoundStatement		186:56:4609:4740	5062964	0					
ANR	5062967	ExpressionStatement	r_socket_free ( rs -> s )	187:1:4612:4633	5062964	0	True				
ANR	5062968	CallExpression	r_socket_free ( rs -> s )		5062964	0					
ANR	5062969	Callee	r_socket_free		5062964	0					
ANR	5062970	Identifier	r_socket_free		5062964	0					
ANR	5062971	ArgumentList	rs -> s		5062964	1					
ANR	5062972	Argument	rs -> s		5062964	0					
ANR	5062973	PtrMemberAccess	rs -> s		5062964	0					
ANR	5062974	Identifier	rs		5062964	0					
ANR	5062975	Identifier	s		5062964	1					
ANR	5062976	ExpressionStatement	free ( rs -> path )	188:1:4636:4651	5062964	1	True				
ANR	5062977	CallExpression	free ( rs -> path )		5062964	0					
ANR	5062978	Callee	free		5062964	0					
ANR	5062979	Identifier	free		5062964	0					
ANR	5062980	ArgumentList	rs -> path		5062964	1					
ANR	5062981	Argument	rs -> path		5062964	0					
ANR	5062982	PtrMemberAccess	rs -> path		5062964	0					
ANR	5062983	Identifier	rs		5062964	0					
ANR	5062984	Identifier	path		5062964	1					
ANR	5062985	ExpressionStatement	free ( rs -> host )	189:1:4654:4669	5062964	2	True				
ANR	5062986	CallExpression	free ( rs -> host )		5062964	0					
ANR	5062987	Callee	free		5062964	0					
ANR	5062988	Identifier	free		5062964	0					
ANR	5062989	ArgumentList	rs -> host		5062964	1					
ANR	5062990	Argument	rs -> host		5062964	0					
ANR	5062991	PtrMemberAccess	rs -> host		5062964	0					
ANR	5062992	Identifier	rs		5062964	0					
ANR	5062993	Identifier	host		5062964	1					
ANR	5062994	ExpressionStatement	free ( rs -> agent )	190:1:4672:4688	5062964	3	True				
ANR	5062995	CallExpression	free ( rs -> agent )		5062964	0					
ANR	5062996	Callee	free		5062964	0					
ANR	5062997	Identifier	free		5062964	0					
ANR	5062998	ArgumentList	rs -> agent		5062964	1					
ANR	5062999	Argument	rs -> agent		5062964	0					
ANR	5063000	PtrMemberAccess	rs -> agent		5062964	0					
ANR	5063001	Identifier	rs		5062964	0					
ANR	5063002	Identifier	agent		5062964	1					
ANR	5063003	ExpressionStatement	free ( rs -> method )	191:1:4691:4708	5062964	4	True				
ANR	5063004	CallExpression	free ( rs -> method )		5062964	0					
ANR	5063005	Callee	free		5062964	0					
ANR	5063006	Identifier	free		5062964	0					
ANR	5063007	ArgumentList	rs -> method		5062964	1					
ANR	5063008	Argument	rs -> method		5062964	0					
ANR	5063009	PtrMemberAccess	rs -> method		5062964	0					
ANR	5063010	Identifier	rs		5062964	0					
ANR	5063011	Identifier	method		5062964	1					
ANR	5063012	ExpressionStatement	free ( rs -> data )	192:1:4711:4726	5062964	5	True				
ANR	5063013	CallExpression	free ( rs -> data )		5062964	0					
ANR	5063014	Callee	free		5062964	0					
ANR	5063015	Identifier	free		5062964	0					
ANR	5063016	ArgumentList	rs -> data		5062964	1					
ANR	5063017	Argument	rs -> data		5062964	0					
ANR	5063018	PtrMemberAccess	rs -> data		5062964	0					
ANR	5063019	Identifier	rs		5062964	0					
ANR	5063020	Identifier	data		5062964	1					
ANR	5063021	ExpressionStatement	free ( rs )	193:1:4729:4738	5062964	6	True				
ANR	5063022	CallExpression	free ( rs )		5062964	0					
ANR	5063023	Callee	free		5062964	0					
ANR	5063024	Identifier	free		5062964	0					
ANR	5063025	ArgumentList	rs		5062964	1					
ANR	5063026	Argument	rs		5062964	0					
ANR	5063027	Identifier	rs		5062964	0					
ANR	5063028	ReturnType	R_API void		5062964	1					
ANR	5063029	Identifier	r_socket_http_close		5062964	2					
ANR	5063030	ParameterList	RSocketHTTPRequest * rs		5062964	3					
ANR	5063031	Parameter	RSocketHTTPRequest * rs	186:32:4585:4606	5062964	0	True				
ANR	5063032	ParameterType	RSocketHTTPRequest *		5062964	0					
ANR	5063033	Identifier	rs		5062964	1					
ANR	5063034	CFGEntryNode	ENTRY		5062964		True				
ANR	5063035	CFGExitNode	EXIT		5062964		True				
ANR	5063036	Symbol	rs		5062964						
ANR	5063037	Symbol	rs -> path		5062964						
ANR	5063038	Symbol	rs -> method		5062964						
ANR	5063039	Symbol	* rs		5062964						
ANR	5063040	Symbol	rs -> data		5062964						
ANR	5063041	Symbol	rs -> host		5062964						
ANR	5063042	Symbol	rs -> agent		5062964						
ANR	5063043	Symbol	rs -> s		5062964						
ANR	5063044	Function	main	197:0:4752:5610							
ANR	5063045	FunctionDef	main ()		5063044	0					
ANR	5063046	CompoundStatement		197:11:4763:5610	5063044	0					
ANR	5063047	IdentifierDeclStatement	RSocket * s = r_socket_new ( false ) ;	198:1:4766:4799	5063044	0	True				
ANR	5063048	IdentifierDecl	* s = r_socket_new ( false )		5063044	0					
ANR	5063049	IdentifierDeclType	RSocket *		5063044	0					
ANR	5063050	Identifier	s		5063044	1					
ANR	5063051	AssignmentExpression	* s = r_socket_new ( false )		5063044	2		=			
ANR	5063052	Identifier	s		5063044	0					
ANR	5063053	CallExpression	r_socket_new ( false )		5063044	1					
ANR	5063054	Callee	r_socket_new		5063044	0					
ANR	5063055	Identifier	r_socket_new		5063044	0					
ANR	5063056	ArgumentList	false		5063044	1					
ANR	5063057	Argument	false		5063044	0					
ANR	5063058	Identifier	false		5063044	0					
ANR	5063059	IfStatement	"if ( ! r_socket_listen ( s , ""8080"" , NULL ) )"		5063044	1					
ANR	5063060	Condition	"! r_socket_listen ( s , ""8080"" , NULL )"	199:5:4806:4839	5063044	0	True				
ANR	5063061	UnaryOperationExpression	"! r_socket_listen ( s , ""8080"" , NULL )"		5063044	0					
ANR	5063062	UnaryOperator	!		5063044	0					
ANR	5063063	CallExpression	"r_socket_listen ( s , ""8080"" , NULL )"		5063044	1					
ANR	5063064	Callee	r_socket_listen		5063044	0					
ANR	5063065	Identifier	r_socket_listen		5063044	0					
ANR	5063066	ArgumentList	s		5063044	1					
ANR	5063067	Argument	s		5063044	0					
ANR	5063068	Identifier	s		5063044	0					
ANR	5063069	Argument	"""8080"""		5063044	1					
ANR	5063070	PrimaryExpression	"""8080"""		5063044	0					
ANR	5063071	Argument	NULL		5063044	2					
ANR	5063072	Identifier	NULL		5063044	0					
ANR	5063073	CompoundStatement		3:41:78:78	5063044	1					
ANR	5063074	ExpressionStatement	"eprintf ( ""Cannot listen here\\n"" )"	200:2:4846:4878	5063044	0	True				
ANR	5063075	CallExpression	"eprintf ( ""Cannot listen here\\n"" )"		5063044	0					
ANR	5063076	Callee	eprintf		5063044	0					
ANR	5063077	Identifier	eprintf		5063044	0					
ANR	5063078	ArgumentList	"""Cannot listen here\\n"""		5063044	1					
ANR	5063079	Argument	"""Cannot listen here\\n"""		5063044	0					
ANR	5063080	PrimaryExpression	"""Cannot listen here\\n"""		5063044	0					
ANR	5063081	ReturnStatement	return 1 ;	201:2:4882:4890	5063044	1	True				
ANR	5063082	PrimaryExpression	1		5063044	0					
ANR	5063083	ForStatement	for ( ; ; )		5063044	2					
ANR	5063084	CompoundStatement		8:2:145:197	5063044	0					
ANR	5063085	IdentifierDeclStatement	"RSocketHTTPRequest * rs = r_socket_http_accept ( s , 0 ) ;"	204:2:4909:4961	5063044	0	True				
ANR	5063086	IdentifierDecl	"* rs = r_socket_http_accept ( s , 0 )"		5063044	0					
ANR	5063087	IdentifierDeclType	RSocketHTTPRequest *		5063044	0					
ANR	5063088	Identifier	rs		5063044	1					
ANR	5063089	AssignmentExpression	"* rs = r_socket_http_accept ( s , 0 )"		5063044	2		=			
ANR	5063090	Identifier	rs		5063044	0					
ANR	5063091	CallExpression	"r_socket_http_accept ( s , 0 )"		5063044	1					
ANR	5063092	Callee	r_socket_http_accept		5063044	0					
ANR	5063093	Identifier	r_socket_http_accept		5063044	0					
ANR	5063094	ArgumentList	s		5063044	1					
ANR	5063095	Argument	s		5063044	0					
ANR	5063096	Identifier	s		5063044	0					
ANR	5063097	Argument	0		5063044	1					
ANR	5063098	PrimaryExpression	0		5063044	0					
ANR	5063099	IfStatement	if ( ! rs )		5063044	1					
ANR	5063100	Condition	! rs	205:6:4969:4971	5063044	0	True				
ANR	5063101	UnaryOperationExpression	! rs		5063044	0					
ANR	5063102	UnaryOperator	!		5063044	0					
ANR	5063103	Identifier	rs		5063044	1					
ANR	5063104	ContinueStatement	continue ;	205:11:4974:4982	5063044	1	True				
ANR	5063105	IfStatement	"if ( ! strcmp ( rs -> method , ""GET"" ) )"		5063044	2					
ANR	5063106	Condition	"! strcmp ( rs -> method , ""GET"" )"	206:6:4990:5016	5063044	0	True				
ANR	5063107	UnaryOperationExpression	"! strcmp ( rs -> method , ""GET"" )"		5063044	0					
ANR	5063108	UnaryOperator	!		5063044	0					
ANR	5063109	CallExpression	"strcmp ( rs -> method , ""GET"" )"		5063044	1					
ANR	5063110	Callee	strcmp		5063044	0					
ANR	5063111	Identifier	strcmp		5063044	0					
ANR	5063112	ArgumentList	rs -> method		5063044	1					
ANR	5063113	Argument	rs -> method		5063044	0					
ANR	5063114	PtrMemberAccess	rs -> method		5063044	0					
ANR	5063115	Identifier	rs		5063044	0					
ANR	5063116	Identifier	method		5063044	1					
ANR	5063117	Argument	"""GET"""		5063044	1					
ANR	5063118	PrimaryExpression	"""GET"""		5063044	0					
ANR	5063119	CompoundStatement		10:35:255:255	5063044	1					
ANR	5063120	Statement	r_socket_http_response	207:3:5024:5045	5063044	0	True				
ANR	5063121	Statement	(	207:26:5047:5047	5063044	1	True				
ANR	5063122	Statement	rs	207:27:5048:5049	5063044	2	True				
ANR	5063123	Statement	","	207:29:5050:5050	5063044	3	True				
ANR	5063124	Statement	200	207:31:5052:5054	5063044	4	True				
ANR	5063125	Statement	","	207:34:5055:5055	5063044	5	True				
ANR	5063126	Statement	"""<html><body><form method=post action=/>"""	208:3:5060:5100	5063044	6	True				
ANR	5063127	Statement	"""<input name=a /><input type=button></form></body>"""	209:3:5105:5155	5063044	7	True				
ANR	5063128	Statement	)	209:54:5156:5156	5063044	8	True				
ANR	5063129	ExpressionStatement		209:55:5157:5157	5063044	9	True				
ANR	5063130	ElseStatement	else		5063044	0					
ANR	5063131	IfStatement	"if ( ! strcmp ( rs -> method , ""POST"" ) )"		5063044	0					
ANR	5063132	Condition	"! strcmp ( rs -> method , ""POST"" )"	211:6:5174:5201	5063044	0	True				
ANR	5063133	UnaryOperationExpression	"! strcmp ( rs -> method , ""POST"" )"		5063044	0					
ANR	5063134	UnaryOperator	!		5063044	0					
ANR	5063135	CallExpression	"strcmp ( rs -> method , ""POST"" )"		5063044	1					
ANR	5063136	Callee	strcmp		5063044	0					
ANR	5063137	Identifier	strcmp		5063044	0					
ANR	5063138	ArgumentList	rs -> method		5063044	1					
ANR	5063139	Argument	rs -> method		5063044	0					
ANR	5063140	PtrMemberAccess	rs -> method		5063044	0					
ANR	5063141	Identifier	rs		5063044	0					
ANR	5063142	Identifier	method		5063044	1					
ANR	5063143	Argument	"""POST"""		5063044	1					
ANR	5063144	PrimaryExpression	"""POST"""		5063044	0					
ANR	5063145	CompoundStatement		16:3:445:485	5063044	1					
ANR	5063146	IdentifierDeclStatement	char * buf = malloc ( rs -> data_length + 50 ) ;	212:3:5209:5249	5063044	0	True				
ANR	5063147	IdentifierDecl	* buf = malloc ( rs -> data_length + 50 )		5063044	0					
ANR	5063148	IdentifierDeclType	char *		5063044	0					
ANR	5063149	Identifier	buf		5063044	1					
ANR	5063150	AssignmentExpression	* buf = malloc ( rs -> data_length + 50 )		5063044	2		=			
ANR	5063151	Identifier	buf		5063044	0					
ANR	5063152	CallExpression	malloc ( rs -> data_length + 50 )		5063044	1					
ANR	5063153	Callee	malloc		5063044	0					
ANR	5063154	Identifier	malloc		5063044	0					
ANR	5063155	ArgumentList	rs -> data_length + 50		5063044	1					
ANR	5063156	Argument	rs -> data_length + 50		5063044	0					
ANR	5063157	AdditiveExpression	rs -> data_length + 50		5063044	0		+			
ANR	5063158	PtrMemberAccess	rs -> data_length		5063044	0					
ANR	5063159	Identifier	rs		5063044	0					
ANR	5063160	Identifier	data_length		5063044	1					
ANR	5063161	PrimaryExpression	50		5063044	1					
ANR	5063162	ExpressionStatement	"strcpy ( buf , ""<html><body><h2>XSS test</h2>\\n"" )"	213:3:5254:5301	5063044	1	True				
ANR	5063163	CallExpression	"strcpy ( buf , ""<html><body><h2>XSS test</h2>\\n"" )"		5063044	0					
ANR	5063164	Callee	strcpy		5063044	0					
ANR	5063165	Identifier	strcpy		5063044	0					
ANR	5063166	ArgumentList	buf		5063044	1					
ANR	5063167	Argument	buf		5063044	0					
ANR	5063168	Identifier	buf		5063044	0					
ANR	5063169	Argument	"""<html><body><h2>XSS test</h2>\\n"""		5063044	1					
ANR	5063170	PrimaryExpression	"""<html><body><h2>XSS test</h2>\\n"""		5063044	0					
ANR	5063171	ExpressionStatement	r_str_unescape ( rs -> data )	214:3:5306:5331	5063044	2	True				
ANR	5063172	CallExpression	r_str_unescape ( rs -> data )		5063044	0					
ANR	5063173	Callee	r_str_unescape		5063044	0					
ANR	5063174	Identifier	r_str_unescape		5063044	0					
ANR	5063175	ArgumentList	rs -> data		5063044	1					
ANR	5063176	Argument	rs -> data		5063044	0					
ANR	5063177	PtrMemberAccess	rs -> data		5063044	0					
ANR	5063178	Identifier	rs		5063044	0					
ANR	5063179	Identifier	data		5063044	1					
ANR	5063180	ExpressionStatement	"strcat ( buf , rs -> data )"	215:3:5336:5358	5063044	3	True				
ANR	5063181	CallExpression	"strcat ( buf , rs -> data )"		5063044	0					
ANR	5063182	Callee	strcat		5063044	0					
ANR	5063183	Identifier	strcat		5063044	0					
ANR	5063184	ArgumentList	buf		5063044	1					
ANR	5063185	Argument	buf		5063044	0					
ANR	5063186	Identifier	buf		5063044	0					
ANR	5063187	Argument	rs -> data		5063044	1					
ANR	5063188	PtrMemberAccess	rs -> data		5063044	0					
ANR	5063189	Identifier	rs		5063044	0					
ANR	5063190	Identifier	data		5063044	1					
ANR	5063191	ExpressionStatement	"r_socket_http_response ( rs , 200 , buf )"	216:3:5363:5400	5063044	4	True				
ANR	5063192	CallExpression	"r_socket_http_response ( rs , 200 , buf )"		5063044	0					
ANR	5063193	Callee	r_socket_http_response		5063044	0					
ANR	5063194	Identifier	r_socket_http_response		5063044	0					
ANR	5063195	ArgumentList	rs		5063044	1					
ANR	5063196	Argument	rs		5063044	0					
ANR	5063197	Identifier	rs		5063044	0					
ANR	5063198	Argument	200		5063044	1					
ANR	5063199	PrimaryExpression	200		5063044	0					
ANR	5063200	Argument	buf		5063044	2					
ANR	5063201	Identifier	buf		5063044	0					
ANR	5063202	ExpressionStatement	free ( buf )	217:3:5405:5415	5063044	5	True				
ANR	5063203	CallExpression	free ( buf )		5063044	0					
ANR	5063204	Callee	free		5063044	0					
ANR	5063205	Identifier	free		5063044	0					
ANR	5063206	ArgumentList	buf		5063044	1					
ANR	5063207	Argument	buf		5063044	0					
ANR	5063208	Identifier	buf		5063044	0					
ANR	5063209	ElseStatement	else		5063044	0					
ANR	5063210	IfStatement	"if ( ! strcmp ( rs -> method , ""OPTIONS"" ) )"		5063044	0					
ANR	5063211	Condition	"! strcmp ( rs -> method , ""OPTIONS"" )"	219:6:5432:5462	5063044	0	True				
ANR	5063212	UnaryOperationExpression	"! strcmp ( rs -> method , ""OPTIONS"" )"		5063044	0					
ANR	5063213	UnaryOperator	!		5063044	0					
ANR	5063214	CallExpression	"strcmp ( rs -> method , ""OPTIONS"" )"		5063044	1					
ANR	5063215	Callee	strcmp		5063044	0					
ANR	5063216	Identifier	strcmp		5063044	0					
ANR	5063217	ArgumentList	rs -> method		5063044	1					
ANR	5063218	Argument	rs -> method		5063044	0					
ANR	5063219	PtrMemberAccess	rs -> method		5063044	0					
ANR	5063220	Identifier	rs		5063044	0					
ANR	5063221	Identifier	method		5063044	1					
ANR	5063222	Argument	"""OPTIONS"""		5063044	1					
ANR	5063223	PrimaryExpression	"""OPTIONS"""		5063044	0					
ANR	5063224	CompoundStatement		23:39:701:701	5063044	1					
ANR	5063225	ExpressionStatement	"r_socket_http_response ( rs , 200 , """" )"	220:3:5470:5505	5063044	0	True				
ANR	5063226	CallExpression	"r_socket_http_response ( rs , 200 , """" )"		5063044	0					
ANR	5063227	Callee	r_socket_http_response		5063044	0					
ANR	5063228	Identifier	r_socket_http_response		5063044	0					
ANR	5063229	ArgumentList	rs		5063044	1					
ANR	5063230	Argument	rs		5063044	0					
ANR	5063231	Identifier	rs		5063044	0					
ANR	5063232	Argument	200		5063044	1					
ANR	5063233	PrimaryExpression	200		5063044	0					
ANR	5063234	Argument	""""""		5063044	2					
ANR	5063235	PrimaryExpression	""""""		5063044	0					
ANR	5063236	ElseStatement	else		5063044	0					
ANR	5063237	CompoundStatement		25:9:752:752	5063044	0					
ANR	5063238	ExpressionStatement	"r_socket_http_response ( rs , 404 , ""Invalid protocol"" )"	222:3:5521:5573	5063044	0	True				
ANR	5063239	CallExpression	"r_socket_http_response ( rs , 404 , ""Invalid protocol"" )"		5063044	0					
ANR	5063240	Callee	r_socket_http_response		5063044	0					
ANR	5063241	Identifier	r_socket_http_response		5063044	0					
ANR	5063242	ArgumentList	rs		5063044	1					
ANR	5063243	Argument	rs		5063044	0					
ANR	5063244	Identifier	rs		5063044	0					
ANR	5063245	Argument	404		5063044	1					
ANR	5063246	PrimaryExpression	404		5063044	0					
ANR	5063247	Argument	"""Invalid protocol"""		5063044	2					
ANR	5063248	PrimaryExpression	"""Invalid protocol"""		5063044	0					
ANR	5063249	ExpressionStatement	r_socket_http_close ( rs )	224:2:5581:5605	5063044	3	True				
ANR	5063250	CallExpression	r_socket_http_close ( rs )		5063044	0					
ANR	5063251	Callee	r_socket_http_close		5063044	0					
ANR	5063252	Identifier	r_socket_http_close		5063044	0					
ANR	5063253	ArgumentList	rs		5063044	1					
ANR	5063254	Argument	rs		5063044	0					
ANR	5063255	Identifier	rs		5063044	0					
ANR	5063256	ReturnType	int		5063044	1					
ANR	5063257	Identifier	main		5063044	2					
ANR	5063258	ParameterList			5063044	3					
ANR	5063259	CFGEntryNode	ENTRY		5063044		True				
ANR	5063260	CFGExitNode	EXIT		5063044		True				
ANR	5063261	InfiniteForNode	true		5063044		True				
ANR	5063262	Symbol	strcmp		5063044						
ANR	5063263	Symbol	rs		5063044						
ANR	5063264	Symbol	malloc		5063044						
ANR	5063265	Symbol	NULL		5063044						
ANR	5063266	Symbol	* rs		5063044						
ANR	5063267	Symbol	false		5063044						
ANR	5063268	Symbol	rs -> data_length		5063044						
ANR	5063269	Symbol	r_socket_listen		5063044						
ANR	5063270	Symbol	rs -> method		5063044						
ANR	5063271	Symbol	buf		5063044						
ANR	5063272	Symbol	s		5063044						
ANR	5063273	Symbol	r_socket_http_accept		5063044						
ANR	5063274	Symbol	rs -> data		5063044						
ANR	5063275	Symbol	r_socket_new		5063044						
