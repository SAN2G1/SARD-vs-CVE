command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	3565321	File	data/converged/CVE-2019-16718~_radare2/libr_bin_blang.c								
ANR	3565322	ClassDef	<unnamed>	5:8:82:171							
ANR	3565323	DeclStmt									
ANR	3565324	Decl							bool	bool	rust
ANR	3565325	DeclStmt									
ANR	3565326	Decl							bool	bool	objc
ANR	3565327	DeclStmt									
ANR	3565328	Decl							bool	bool	dlang
ANR	3565329	DeclStmt									
ANR	3565330	Decl							bool	bool	swift
ANR	3565331	DeclStmt									
ANR	3565332	Decl							bool	bool	cxx
ANR	3565333	DeclStmt									
ANR	3565334	Decl							bool	bool	msvc
ANR	3565335	DeclStmt									
ANR	3565336	Decl									Langs
ANR	3565337	Function	check_rust	14:0:174:273							
ANR	3565338	FunctionDef	check_rust (RBinSymbol * sym)		3565337	0					
ANR	3565339	CompoundStatement		14:47:221:273	3565337	0					
ANR	3565340	ReturnStatement	"return sym -> name && strstr ( sym -> name , ""_$LT$"" ) ;"	15:1:224:271	3565337	0	True				
ANR	3565341	AndExpression	"sym -> name && strstr ( sym -> name , ""_$LT$"" )"		3565337	0		&&			
ANR	3565342	PtrMemberAccess	sym -> name		3565337	0					
ANR	3565343	Identifier	sym		3565337	0					
ANR	3565344	Identifier	name		3565337	1					
ANR	3565345	CallExpression	"strstr ( sym -> name , ""_$LT$"" )"		3565337	1					
ANR	3565346	Callee	strstr		3565337	0					
ANR	3565347	Identifier	strstr		3565337	0					
ANR	3565348	ArgumentList	sym -> name		3565337	1					
ANR	3565349	Argument	sym -> name		3565337	0					
ANR	3565350	PtrMemberAccess	sym -> name		3565337	0					
ANR	3565351	Identifier	sym		3565337	0					
ANR	3565352	Identifier	name		3565337	1					
ANR	3565353	Argument	"""_$LT$"""		3565337	1					
ANR	3565354	PrimaryExpression	"""_$LT$"""		3565337	0					
ANR	3565355	ReturnType	static inline bool		3565337	1					
ANR	3565356	Identifier	check_rust		3565337	2					
ANR	3565357	ParameterList	RBinSymbol * sym		3565337	3					
ANR	3565358	Parameter	RBinSymbol * sym	14:30:204:218	3565337	0	True				
ANR	3565359	ParameterType	RBinSymbol *		3565337	0					
ANR	3565360	Identifier	sym		3565337	1					
ANR	3565361	CFGEntryNode	ENTRY		3565337		True				
ANR	3565362	CFGExitNode	EXIT		3565337		True				
ANR	3565363	Symbol	* sym		3565337						
ANR	3565364	Symbol	strstr		3565337						
ANR	3565365	Symbol	sym		3565337						
ANR	3565366	Symbol	sym -> name		3565337						
ANR	3565367	Function	check_objc	18:0:276:467							
ANR	3565368	FunctionDef	check_objc (RBinSymbol * sym)		3565367	0					
ANR	3565369	CompoundStatement		18:47:323:467	3565367	0					
ANR	3565370	IfStatement	"if ( sym -> name && ! strncmp ( sym -> name , ""_OBJC_"" , 6 ) )"		3565367	0					
ANR	3565371	Condition	"sym -> name && ! strncmp ( sym -> name , ""_OBJC_"" , 6 )"	19:5:330:375	3565367	0	True				
ANR	3565372	AndExpression	"sym -> name && ! strncmp ( sym -> name , ""_OBJC_"" , 6 )"		3565367	0		&&			
ANR	3565373	PtrMemberAccess	sym -> name		3565367	0					
ANR	3565374	Identifier	sym		3565367	0					
ANR	3565375	Identifier	name		3565367	1					
ANR	3565376	UnaryOperationExpression	"! strncmp ( sym -> name , ""_OBJC_"" , 6 )"		3565367	1					
ANR	3565377	UnaryOperator	!		3565367	0					
ANR	3565378	CallExpression	"strncmp ( sym -> name , ""_OBJC_"" , 6 )"		3565367	1					
ANR	3565379	Callee	strncmp		3565367	0					
ANR	3565380	Identifier	strncmp		3565367	0					
ANR	3565381	ArgumentList	sym -> name		3565367	1					
ANR	3565382	Argument	sym -> name		3565367	0					
ANR	3565383	PtrMemberAccess	sym -> name		3565367	0					
ANR	3565384	Identifier	sym		3565367	0					
ANR	3565385	Identifier	name		3565367	1					
ANR	3565386	Argument	"""_OBJC_"""		3565367	1					
ANR	3565387	PrimaryExpression	"""_OBJC_"""		3565367	0					
ANR	3565388	Argument	6		3565367	2					
ANR	3565389	PrimaryExpression	6		3565367	0					
ANR	3565390	CompoundStatement		2:53:54:54	3565367	1					
ANR	3565391	ReturnStatement	return true ;	21:2:436:447	3565367	0	True				
ANR	3565392	Identifier	true		3565367	0					
ANR	3565393	ReturnStatement	return false ;	23:1:453:465	3565367	1	True				
ANR	3565394	Identifier	false		3565367	0					
ANR	3565395	ReturnType	static inline bool		3565367	1					
ANR	3565396	Identifier	check_objc		3565367	2					
ANR	3565397	ParameterList	RBinSymbol * sym		3565367	3					
ANR	3565398	Parameter	RBinSymbol * sym	18:30:306:320	3565367	0	True				
ANR	3565399	ParameterType	RBinSymbol *		3565367	0					
ANR	3565400	Identifier	sym		3565367	1					
ANR	3565401	CFGEntryNode	ENTRY		3565367		True				
ANR	3565402	CFGExitNode	EXIT		3565367		True				
ANR	3565403	Symbol	* sym		3565367						
ANR	3565404	Symbol	strncmp		3565367						
ANR	3565405	Symbol	sym		3565367						
ANR	3565406	Symbol	sym -> name		3565367						
ANR	3565407	Symbol	true		3565367						
ANR	3565408	Symbol	false		3565367						
ANR	3565409	Function	check_dlang	26:0:470:642							
ANR	3565410	FunctionDef	check_dlang (RBinSymbol * sym)		3565409	0					
ANR	3565411	CompoundStatement		26:41:511:642	3565409	0					
ANR	3565412	IfStatement	"if ( ! strncmp ( sym -> name , ""_D2"" , 3 ) )"		3565409	0					
ANR	3565413	Condition	"! strncmp ( sym -> name , ""_D2"" , 3 )"	27:5:518:547	3565409	0	True				
ANR	3565414	UnaryOperationExpression	"! strncmp ( sym -> name , ""_D2"" , 3 )"		3565409	0					
ANR	3565415	UnaryOperator	!		3565409	0					
ANR	3565416	CallExpression	"strncmp ( sym -> name , ""_D2"" , 3 )"		3565409	1					
ANR	3565417	Callee	strncmp		3565409	0					
ANR	3565418	Identifier	strncmp		3565409	0					
ANR	3565419	ArgumentList	sym -> name		3565409	1					
ANR	3565420	Argument	sym -> name		3565409	0					
ANR	3565421	PtrMemberAccess	sym -> name		3565409	0					
ANR	3565422	Identifier	sym		3565409	0					
ANR	3565423	Identifier	name		3565409	1					
ANR	3565424	Argument	"""_D2"""		3565409	1					
ANR	3565425	PrimaryExpression	"""_D2"""		3565409	0					
ANR	3565426	Argument	3		3565409	2					
ANR	3565427	PrimaryExpression	3		3565409	0					
ANR	3565428	CompoundStatement		2:37:38:38	3565409	1					
ANR	3565429	ReturnStatement	return true ;	28:2:554:565	3565409	0	True				
ANR	3565430	Identifier	true		3565409	0					
ANR	3565431	IfStatement	"if ( ! strncmp ( sym -> name , ""_D4"" , 3 ) )"		3565409	1					
ANR	3565432	Condition	"! strncmp ( sym -> name , ""_D4"" , 3 )"	30:5:575:604	3565409	0	True				
ANR	3565433	UnaryOperationExpression	"! strncmp ( sym -> name , ""_D4"" , 3 )"		3565409	0					
ANR	3565434	UnaryOperator	!		3565409	0					
ANR	3565435	CallExpression	"strncmp ( sym -> name , ""_D4"" , 3 )"		3565409	1					
ANR	3565436	Callee	strncmp		3565409	0					
ANR	3565437	Identifier	strncmp		3565409	0					
ANR	3565438	ArgumentList	sym -> name		3565409	1					
ANR	3565439	Argument	sym -> name		3565409	0					
ANR	3565440	PtrMemberAccess	sym -> name		3565409	0					
ANR	3565441	Identifier	sym		3565409	0					
ANR	3565442	Identifier	name		3565409	1					
ANR	3565443	Argument	"""_D4"""		3565409	1					
ANR	3565444	PrimaryExpression	"""_D4"""		3565409	0					
ANR	3565445	Argument	3		3565409	2					
ANR	3565446	PrimaryExpression	3		3565409	0					
ANR	3565447	CompoundStatement		5:37:95:95	3565409	1					
ANR	3565448	ReturnStatement	return true ;	31:2:611:622	3565409	0	True				
ANR	3565449	Identifier	true		3565409	0					
ANR	3565450	ReturnStatement	return false ;	33:1:628:640	3565409	2	True				
ANR	3565451	Identifier	false		3565409	0					
ANR	3565452	ReturnType	static bool		3565409	1					
ANR	3565453	Identifier	check_dlang		3565409	2					
ANR	3565454	ParameterList	RBinSymbol * sym		3565409	3					
ANR	3565455	Parameter	RBinSymbol * sym	26:24:494:508	3565409	0	True				
ANR	3565456	ParameterType	RBinSymbol *		3565409	0					
ANR	3565457	Identifier	sym		3565409	1					
ANR	3565458	CFGEntryNode	ENTRY		3565409		True				
ANR	3565459	CFGExitNode	EXIT		3565409		True				
ANR	3565460	Symbol	* sym		3565409						
ANR	3565461	Symbol	strncmp		3565409						
ANR	3565462	Symbol	sym		3565409						
ANR	3565463	Symbol	sym -> name		3565409						
ANR	3565464	Symbol	true		3565409						
ANR	3565465	Symbol	false		3565409						
ANR	3565466	Function	check_swift	36:0:645:775							
ANR	3565467	FunctionDef	check_swift (RBinSymbol * sym)		3565466	0					
ANR	3565468	CompoundStatement		36:41:686:775	3565466	0					
ANR	3565469	IfStatement	"if ( sym -> name && strstr ( sym -> name , ""swift_once"" ) )"		3565466	0					
ANR	3565470	Condition	"sym -> name && strstr ( sym -> name , ""swift_once"" )"	37:5:693:737	3565466	0	True				
ANR	3565471	AndExpression	"sym -> name && strstr ( sym -> name , ""swift_once"" )"		3565466	0		&&			
ANR	3565472	PtrMemberAccess	sym -> name		3565466	0					
ANR	3565473	Identifier	sym		3565466	0					
ANR	3565474	Identifier	name		3565466	1					
ANR	3565475	CallExpression	"strstr ( sym -> name , ""swift_once"" )"		3565466	1					
ANR	3565476	Callee	strstr		3565466	0					
ANR	3565477	Identifier	strstr		3565466	0					
ANR	3565478	ArgumentList	sym -> name		3565466	1					
ANR	3565479	Argument	sym -> name		3565466	0					
ANR	3565480	PtrMemberAccess	sym -> name		3565466	0					
ANR	3565481	Identifier	sym		3565466	0					
ANR	3565482	Identifier	name		3565466	1					
ANR	3565483	Argument	"""swift_once"""		3565466	1					
ANR	3565484	PrimaryExpression	"""swift_once"""		3565466	0					
ANR	3565485	CompoundStatement		2:52:53:53	3565466	1					
ANR	3565486	ReturnStatement	return true ;	38:2:744:755	3565466	0	True				
ANR	3565487	Identifier	true		3565466	0					
ANR	3565488	ReturnStatement	return false ;	40:1:761:773	3565466	1	True				
ANR	3565489	Identifier	false		3565466	0					
ANR	3565490	ReturnType	static bool		3565466	1					
ANR	3565491	Identifier	check_swift		3565466	2					
ANR	3565492	ParameterList	RBinSymbol * sym		3565466	3					
ANR	3565493	Parameter	RBinSymbol * sym	36:24:669:683	3565466	0	True				
ANR	3565494	ParameterType	RBinSymbol *		3565466	0					
ANR	3565495	Identifier	sym		3565466	1					
ANR	3565496	CFGEntryNode	ENTRY		3565466		True				
ANR	3565497	CFGExitNode	EXIT		3565466		True				
ANR	3565498	Symbol	* sym		3565466						
ANR	3565499	Symbol	strstr		3565466						
ANR	3565500	Symbol	sym		3565466						
ANR	3565501	Symbol	sym -> name		3565466						
ANR	3565502	Symbol	true		3565466						
ANR	3565503	Symbol	false		3565466						
ANR	3565504	Function	is_cxx_symbol	43:0:778:987							
ANR	3565505	FunctionDef	is_cxx_symbol (const char * name)		3565504	0					
ANR	3565506	CompoundStatement		43:52:830:987	3565504	0					
ANR	3565507	ExpressionStatement	"r_return_val_if_fail ( name , false )"	44:1:833:867	3565504	0	True				
ANR	3565508	CallExpression	"r_return_val_if_fail ( name , false )"		3565504	0					
ANR	3565509	Callee	r_return_val_if_fail		3565504	0					
ANR	3565510	Identifier	r_return_val_if_fail		3565504	0					
ANR	3565511	ArgumentList	name		3565504	1					
ANR	3565512	Argument	name		3565504	0					
ANR	3565513	Identifier	name		3565504	0					
ANR	3565514	Argument	false		3565504	1					
ANR	3565515	Identifier	false		3565504	0					
ANR	3565516	IfStatement	"if ( ! strncmp ( name , ""_Z"" , 2 ) )"		3565504	1					
ANR	3565517	Condition	"! strncmp ( name , ""_Z"" , 2 )"	45:5:874:897	3565504	0	True				
ANR	3565518	UnaryOperationExpression	"! strncmp ( name , ""_Z"" , 2 )"		3565504	0					
ANR	3565519	UnaryOperator	!		3565504	0					
ANR	3565520	CallExpression	"strncmp ( name , ""_Z"" , 2 )"		3565504	1					
ANR	3565521	Callee	strncmp		3565504	0					
ANR	3565522	Identifier	strncmp		3565504	0					
ANR	3565523	ArgumentList	name		3565504	1					
ANR	3565524	Argument	name		3565504	0					
ANR	3565525	Identifier	name		3565504	0					
ANR	3565526	Argument	"""_Z"""		3565504	1					
ANR	3565527	PrimaryExpression	"""_Z"""		3565504	0					
ANR	3565528	Argument	2		3565504	2					
ANR	3565529	PrimaryExpression	2		3565504	0					
ANR	3565530	CompoundStatement		3:31:69:69	3565504	1					
ANR	3565531	ReturnStatement	return true ;	46:2:904:915	3565504	0	True				
ANR	3565532	Identifier	true		3565504	0					
ANR	3565533	IfStatement	"if ( ! strncmp ( name , ""__Z"" , 3 ) )"		3565504	2					
ANR	3565534	Condition	"! strncmp ( name , ""__Z"" , 3 )"	48:5:925:949	3565504	0	True				
ANR	3565535	UnaryOperationExpression	"! strncmp ( name , ""__Z"" , 3 )"		3565504	0					
ANR	3565536	UnaryOperator	!		3565504	0					
ANR	3565537	CallExpression	"strncmp ( name , ""__Z"" , 3 )"		3565504	1					
ANR	3565538	Callee	strncmp		3565504	0					
ANR	3565539	Identifier	strncmp		3565504	0					
ANR	3565540	ArgumentList	name		3565504	1					
ANR	3565541	Argument	name		3565504	0					
ANR	3565542	Identifier	name		3565504	0					
ANR	3565543	Argument	"""__Z"""		3565504	1					
ANR	3565544	PrimaryExpression	"""__Z"""		3565504	0					
ANR	3565545	Argument	3		3565504	2					
ANR	3565546	PrimaryExpression	3		3565504	0					
ANR	3565547	CompoundStatement		6:32:121:121	3565504	1					
ANR	3565548	ReturnStatement	return true ;	49:2:956:967	3565504	0	True				
ANR	3565549	Identifier	true		3565504	0					
ANR	3565550	ReturnStatement	return false ;	51:1:973:985	3565504	3	True				
ANR	3565551	Identifier	false		3565504	0					
ANR	3565552	ReturnType	static inline bool		3565504	1					
ANR	3565553	Identifier	is_cxx_symbol		3565504	2					
ANR	3565554	ParameterList	const char * name		3565504	3					
ANR	3565555	Parameter	const char * name	43:34:812:827	3565504	0	True				
ANR	3565556	ParameterType	const char *		3565504	0					
ANR	3565557	Identifier	name		3565504	1					
ANR	3565558	CFGEntryNode	ENTRY		3565504		True				
ANR	3565559	CFGExitNode	EXIT		3565504		True				
ANR	3565560	Symbol	strncmp		3565504						
ANR	3565561	Symbol	name		3565504						
ANR	3565562	Symbol	false		3565504						
ANR	3565563	Symbol	true		3565504						
ANR	3565564	Function	check_cxx	54:0:990:1066							
ANR	3565565	FunctionDef	check_cxx (RBinSymbol * sym)		3565564	0					
ANR	3565566	CompoundStatement		54:39:1029:1066	3565564	0					
ANR	3565567	ReturnStatement	return is_cxx_symbol ( sym -> name ) ;	55:1:1032:1064	3565564	0	True				
ANR	3565568	CallExpression	is_cxx_symbol ( sym -> name )		3565564	0					
ANR	3565569	Callee	is_cxx_symbol		3565564	0					
ANR	3565570	Identifier	is_cxx_symbol		3565564	0					
ANR	3565571	ArgumentList	sym -> name		3565564	1					
ANR	3565572	Argument	sym -> name		3565564	0					
ANR	3565573	PtrMemberAccess	sym -> name		3565564	0					
ANR	3565574	Identifier	sym		3565564	0					
ANR	3565575	Identifier	name		3565564	1					
ANR	3565576	ReturnType	static bool		3565564	1					
ANR	3565577	Identifier	check_cxx		3565564	2					
ANR	3565578	ParameterList	RBinSymbol * sym		3565564	3					
ANR	3565579	Parameter	RBinSymbol * sym	54:22:1012:1026	3565564	0	True				
ANR	3565580	ParameterType	RBinSymbol *		3565564	0					
ANR	3565581	Identifier	sym		3565564	1					
ANR	3565582	CFGEntryNode	ENTRY		3565564		True				
ANR	3565583	CFGExitNode	EXIT		3565564		True				
ANR	3565584	Symbol	* sym		3565564						
ANR	3565585	Symbol	is_cxx_symbol		3565564						
ANR	3565586	Symbol	sym		3565564						
ANR	3565587	Symbol	sym -> name		3565564						
ANR	3565588	Function	check_msvc	58:0:1069:1138							
ANR	3565589	FunctionDef	check_msvc (RBinSymbol * sym)		3565588	0					
ANR	3565590	CompoundStatement		58:40:1109:1138	3565588	0					
ANR	3565591	ReturnStatement	return * sym -> name == '?' ;	59:1:1112:1136	3565588	0	True				
ANR	3565592	EqualityExpression	* sym -> name == '?'		3565588	0		==			
ANR	3565593	UnaryOperationExpression	* sym -> name		3565588	0					
ANR	3565594	UnaryOperator	*		3565588	0					
ANR	3565595	PtrMemberAccess	sym -> name		3565588	1					
ANR	3565596	Identifier	sym		3565588	0					
ANR	3565597	Identifier	name		3565588	1					
ANR	3565598	PrimaryExpression	'?'		3565588	1					
ANR	3565599	ReturnType	static bool		3565588	1					
ANR	3565600	Identifier	check_msvc		3565588	2					
ANR	3565601	ParameterList	RBinSymbol * sym		3565588	3					
ANR	3565602	Parameter	RBinSymbol * sym	58:23:1092:1106	3565588	0	True				
ANR	3565603	ParameterType	RBinSymbol *		3565588	0					
ANR	3565604	Identifier	sym		3565588	1					
ANR	3565605	CFGEntryNode	ENTRY		3565588		True				
ANR	3565606	CFGExitNode	EXIT		3565588		True				
ANR	3565607	Symbol	* sym -> name		3565588						
ANR	3565608	Symbol	* sym		3565588						
ANR	3565609	Symbol	sym		3565588						
ANR	3565610	Symbol	sym -> name		3565588						
ANR	3565611	Symbol	* * sym		3565588						
ANR	3565612	Function	r_bin_load_languages	63:0:1207:3977							
ANR	3565613	FunctionDef	r_bin_load_languages (RBinFile * binfile)		3565612	0					
ANR	3565614	CompoundStatement		63:50:1257:3977	3565612	0					
ANR	3565615	ExpressionStatement	"r_return_val_if_fail ( binfile , R_BIN_NM_NONE )"	64:1:1260:1305	3565612	0	True				
ANR	3565616	CallExpression	"r_return_val_if_fail ( binfile , R_BIN_NM_NONE )"		3565612	0					
ANR	3565617	Callee	r_return_val_if_fail		3565612	0					
ANR	3565618	Identifier	r_return_val_if_fail		3565612	0					
ANR	3565619	ArgumentList	binfile		3565612	1					
ANR	3565620	Argument	binfile		3565612	0					
ANR	3565621	Identifier	binfile		3565612	0					
ANR	3565622	Argument	R_BIN_NM_NONE		3565612	1					
ANR	3565623	Identifier	R_BIN_NM_NONE		3565612	0					
ANR	3565624	ExpressionStatement	"r_return_val_if_fail ( binfile -> o , R_BIN_NM_NONE )"	65:1:1308:1356	3565612	1	True				
ANR	3565625	CallExpression	"r_return_val_if_fail ( binfile -> o , R_BIN_NM_NONE )"		3565612	0					
ANR	3565626	Callee	r_return_val_if_fail		3565612	0					
ANR	3565627	Identifier	r_return_val_if_fail		3565612	0					
ANR	3565628	ArgumentList	binfile -> o		3565612	1					
ANR	3565629	Argument	binfile -> o		3565612	0					
ANR	3565630	PtrMemberAccess	binfile -> o		3565612	0					
ANR	3565631	Identifier	binfile		3565612	0					
ANR	3565632	Identifier	o		3565612	1					
ANR	3565633	Argument	R_BIN_NM_NONE		3565612	1					
ANR	3565634	Identifier	R_BIN_NM_NONE		3565612	0					
ANR	3565635	ExpressionStatement	"r_return_val_if_fail ( binfile -> o -> info , R_BIN_NM_NONE )"	66:1:1359:1413	3565612	2	True				
ANR	3565636	CallExpression	"r_return_val_if_fail ( binfile -> o -> info , R_BIN_NM_NONE )"		3565612	0					
ANR	3565637	Callee	r_return_val_if_fail		3565612	0					
ANR	3565638	Identifier	r_return_val_if_fail		3565612	0					
ANR	3565639	ArgumentList	binfile -> o -> info		3565612	1					
ANR	3565640	Argument	binfile -> o -> info		3565612	0					
ANR	3565641	PtrMemberAccess	binfile -> o -> info		3565612	0					
ANR	3565642	PtrMemberAccess	binfile -> o		3565612	0					
ANR	3565643	Identifier	binfile		3565612	0					
ANR	3565644	Identifier	o		3565612	1					
ANR	3565645	Identifier	info		3565612	1					
ANR	3565646	Argument	R_BIN_NM_NONE		3565612	1					
ANR	3565647	Identifier	R_BIN_NM_NONE		3565612	0					
ANR	3565648	IdentifierDeclStatement	RBinObject * o = binfile -> o ;	67:1:1416:1442	3565612	3	True				
ANR	3565649	IdentifierDecl	* o = binfile -> o		3565612	0					
ANR	3565650	IdentifierDeclType	RBinObject *		3565612	0					
ANR	3565651	Identifier	o		3565612	1					
ANR	3565652	AssignmentExpression	* o = binfile -> o		3565612	2		=			
ANR	3565653	Identifier	o		3565612	0					
ANR	3565654	PtrMemberAccess	binfile -> o		3565612	1					
ANR	3565655	Identifier	binfile		3565612	0					
ANR	3565656	Identifier	o		3565612	1					
ANR	3565657	IdentifierDeclStatement	RBinInfo * info = o -> info ;	68:1:1445:1469	3565612	4	True				
ANR	3565658	IdentifierDecl	* info = o -> info		3565612	0					
ANR	3565659	IdentifierDeclType	RBinInfo *		3565612	0					
ANR	3565660	Identifier	info		3565612	1					
ANR	3565661	AssignmentExpression	* info = o -> info		3565612	2		=			
ANR	3565662	Identifier	info		3565612	0					
ANR	3565663	PtrMemberAccess	o -> info		3565612	1					
ANR	3565664	Identifier	o		3565612	0					
ANR	3565665	Identifier	info		3565612	1					
ANR	3565666	IdentifierDeclStatement	RBinSymbol * sym ;	69:1:1472:1487	3565612	5	True				
ANR	3565667	IdentifierDecl	* sym		3565612	0					
ANR	3565668	IdentifierDeclType	RBinSymbol *		3565612	0					
ANR	3565669	Identifier	sym		3565612	1					
ANR	3565670	IdentifierDeclStatement	"RListIter * iter , * iter2 ;"	70:1:1490:1513	3565612	6	True				
ANR	3565671	IdentifierDecl	* iter		3565612	0					
ANR	3565672	IdentifierDeclType	RListIter *		3565612	0					
ANR	3565673	Identifier	iter		3565612	1					
ANR	3565674	IdentifierDecl	* iter2		3565612	1					
ANR	3565675	IdentifierDeclType	RListIter *		3565612	0					
ANR	3565676	Identifier	iter2		3565612	1					
ANR	3565677	IdentifierDeclStatement	Langs cantbe = { 0 } ;	71:1:1516:1534	3565612	7	True				
ANR	3565678	IdentifierDecl	cantbe = { 0 }		3565612	0					
ANR	3565679	IdentifierDeclType	Langs		3565612	0					
ANR	3565680	Identifier	cantbe		3565612	1					
ANR	3565681	AssignmentExpression	cantbe = { 0 }		3565612	2		=			
ANR	3565682	Identifier	cantbe		3565612	0					
ANR	3565683	InitializerList	0		3565612	1					
ANR	3565684	PrimaryExpression	0		3565612	0					
ANR	3565685	IdentifierDeclStatement	bool phobosIsChecked = false ;	72:1:1537:1565	3565612	8	True				
ANR	3565686	IdentifierDecl	phobosIsChecked = false		3565612	0					
ANR	3565687	IdentifierDeclType	bool		3565612	0					
ANR	3565688	Identifier	phobosIsChecked		3565612	1					
ANR	3565689	AssignmentExpression	phobosIsChecked = false		3565612	2		=			
ANR	3565690	Identifier	false		3565612	0					
ANR	3565691	Identifier	false		3565612	1					
ANR	3565692	IdentifierDeclStatement	bool swiftIsChecked = false ;	73:1:1568:1595	3565612	9	True				
ANR	3565693	IdentifierDecl	swiftIsChecked = false		3565612	0					
ANR	3565694	IdentifierDeclType	bool		3565612	0					
ANR	3565695	Identifier	swiftIsChecked		3565612	1					
ANR	3565696	AssignmentExpression	swiftIsChecked = false		3565612	2		=			
ANR	3565697	Identifier	false		3565612	0					
ANR	3565698	Identifier	false		3565612	1					
ANR	3565699	IdentifierDeclStatement	bool canBeCxx = false ;	74:1:1598:1619	3565612	10	True				
ANR	3565700	IdentifierDecl	canBeCxx = false		3565612	0					
ANR	3565701	IdentifierDeclType	bool		3565612	0					
ANR	3565702	Identifier	canBeCxx		3565612	1					
ANR	3565703	AssignmentExpression	canBeCxx = false		3565612	2		=			
ANR	3565704	Identifier	false		3565612	0					
ANR	3565705	Identifier	false		3565612	1					
ANR	3565706	IdentifierDeclStatement	bool cxxIsChecked = false ;	75:1:1622:1647	3565612	11	True				
ANR	3565707	IdentifierDecl	cxxIsChecked = false		3565612	0					
ANR	3565708	IdentifierDeclType	bool		3565612	0					
ANR	3565709	Identifier	cxxIsChecked		3565612	1					
ANR	3565710	AssignmentExpression	cxxIsChecked = false		3565612	2		=			
ANR	3565711	Identifier	false		3565612	0					
ANR	3565712	Identifier	false		3565612	1					
ANR	3565713	IdentifierDeclStatement	bool isMsvc = false ;	76:1:1650:1669	3565612	12	True				
ANR	3565714	IdentifierDecl	isMsvc = false		3565612	0					
ANR	3565715	IdentifierDeclType	bool		3565612	0					
ANR	3565716	Identifier	isMsvc		3565612	1					
ANR	3565717	AssignmentExpression	isMsvc = false		3565612	2		=			
ANR	3565718	Identifier	false		3565612	0					
ANR	3565719	Identifier	false		3565612	1					
ANR	3565720	IdentifierDeclStatement	"char * ft = info -> rclass ? info -> rclass : """" ;"	78:1:1673:1714	3565612	13	True				
ANR	3565721	IdentifierDecl	"* ft = info -> rclass ? info -> rclass : """""		3565612	0					
ANR	3565722	IdentifierDeclType	char *		3565612	0					
ANR	3565723	Identifier	ft		3565612	1					
ANR	3565724	AssignmentExpression	"* ft = info -> rclass ? info -> rclass : """""		3565612	2		=			
ANR	3565725	Identifier	ft		3565612	0					
ANR	3565726	ConditionalExpression	"info -> rclass ? info -> rclass : """""		3565612	1					
ANR	3565727	Condition	info -> rclass		3565612	0					
ANR	3565728	PtrMemberAccess	info -> rclass		3565612	0					
ANR	3565729	Identifier	info		3565612	0					
ANR	3565730	Identifier	rclass		3565612	1					
ANR	3565731	PtrMemberAccess	info -> rclass		3565612	1					
ANR	3565732	Identifier	info		3565612	0					
ANR	3565733	Identifier	rclass		3565612	1					
ANR	3565734	PrimaryExpression	""""""		3565612	2					
ANR	3565735	IdentifierDeclStatement	bool unknownType = info -> rclass == NULL ;	79:1:1717:1756	3565612	14	True				
ANR	3565736	IdentifierDecl	unknownType = info -> rclass == NULL		3565612	0					
ANR	3565737	IdentifierDeclType	bool		3565612	0					
ANR	3565738	Identifier	unknownType		3565612	1					
ANR	3565739	AssignmentExpression	unknownType = info -> rclass == NULL		3565612	2		=			
ANR	3565740	Identifier	unknownType		3565612	0					
ANR	3565741	EqualityExpression	info -> rclass == NULL		3565612	1		==			
ANR	3565742	PtrMemberAccess	info -> rclass		3565612	0					
ANR	3565743	Identifier	info		3565612	0					
ANR	3565744	Identifier	rclass		3565612	1					
ANR	3565745	Identifier	NULL		3565612	1					
ANR	3565746	IdentifierDeclStatement	"bool isMacho = strstr ( ft , ""mach"" ) ;"	80:1:1759:1793	3565612	15	True				
ANR	3565747	IdentifierDecl	"isMacho = strstr ( ft , ""mach"" )"		3565612	0					
ANR	3565748	IdentifierDeclType	bool		3565612	0					
ANR	3565749	Identifier	isMacho		3565612	1					
ANR	3565750	AssignmentExpression	"isMacho = strstr ( ft , ""mach"" )"		3565612	2		=			
ANR	3565751	Identifier	isMacho		3565612	0					
ANR	3565752	CallExpression	"strstr ( ft , ""mach"" )"		3565612	1					
ANR	3565753	Callee	strstr		3565612	0					
ANR	3565754	Identifier	strstr		3565612	0					
ANR	3565755	ArgumentList	ft		3565612	1					
ANR	3565756	Argument	ft		3565612	0					
ANR	3565757	Identifier	ft		3565612	0					
ANR	3565758	Argument	"""mach"""		3565612	1					
ANR	3565759	PrimaryExpression	"""mach"""		3565612	0					
ANR	3565760	IdentifierDeclStatement	"bool isElf = strstr ( ft , ""elf"" ) ;"	81:1:1796:1827	3565612	16	True				
ANR	3565761	IdentifierDecl	"isElf = strstr ( ft , ""elf"" )"		3565612	0					
ANR	3565762	IdentifierDeclType	bool		3565612	0					
ANR	3565763	Identifier	isElf		3565612	1					
ANR	3565764	AssignmentExpression	"isElf = strstr ( ft , ""elf"" )"		3565612	2		=			
ANR	3565765	Identifier	isElf		3565612	0					
ANR	3565766	CallExpression	"strstr ( ft , ""elf"" )"		3565612	1					
ANR	3565767	Callee	strstr		3565612	0					
ANR	3565768	Identifier	strstr		3565612	0					
ANR	3565769	ArgumentList	ft		3565612	1					
ANR	3565770	Argument	ft		3565612	0					
ANR	3565771	Identifier	ft		3565612	0					
ANR	3565772	Argument	"""elf"""		3565612	1					
ANR	3565773	PrimaryExpression	"""elf"""		3565612	0					
ANR	3565774	IdentifierDeclStatement	"bool isPe = strstr ( ft , ""pe"" ) ;"	82:1:1830:1859	3565612	17	True				
ANR	3565775	IdentifierDecl	"isPe = strstr ( ft , ""pe"" )"		3565612	0					
ANR	3565776	IdentifierDeclType	bool		3565612	0					
ANR	3565777	Identifier	isPe		3565612	1					
ANR	3565778	AssignmentExpression	"isPe = strstr ( ft , ""pe"" )"		3565612	2		=			
ANR	3565779	Identifier	isPe		3565612	0					
ANR	3565780	CallExpression	"strstr ( ft , ""pe"" )"		3565612	1					
ANR	3565781	Callee	strstr		3565612	0					
ANR	3565782	Identifier	strstr		3565612	0					
ANR	3565783	ArgumentList	ft		3565612	1					
ANR	3565784	Argument	ft		3565612	0					
ANR	3565785	Identifier	ft		3565612	0					
ANR	3565786	Argument	"""pe"""		3565612	1					
ANR	3565787	PrimaryExpression	"""pe"""		3565612	0					
ANR	3565788	IdentifierDeclStatement	bool isBlocks = false ;	83:1:1862:1883	3565612	18	True				
ANR	3565789	IdentifierDecl	isBlocks = false		3565612	0					
ANR	3565790	IdentifierDeclType	bool		3565612	0					
ANR	3565791	Identifier	isBlocks		3565612	1					
ANR	3565792	AssignmentExpression	isBlocks = false		3565612	2		=			
ANR	3565793	Identifier	false		3565612	0					
ANR	3565794	Identifier	false		3565612	1					
ANR	3565795	IdentifierDeclStatement	bool isObjC = false ;	84:1:1886:1905	3565612	19	True				
ANR	3565796	IdentifierDecl	isObjC = false		3565612	0					
ANR	3565797	IdentifierDeclType	bool		3565612	0					
ANR	3565798	Identifier	isObjC		3565612	1					
ANR	3565799	AssignmentExpression	isObjC = false		3565612	2		=			
ANR	3565800	Identifier	false		3565612	0					
ANR	3565801	Identifier	false		3565612	1					
ANR	3565802	IfStatement	if ( unknownType || ! ( isMacho || isElf || isPe ) )		3565612	20					
ANR	3565803	Condition	unknownType || ! ( isMacho || isElf || isPe )	86:5:1913:1954	3565612	0	True				
ANR	3565804	OrExpression	unknownType || ! ( isMacho || isElf || isPe )		3565612	0		||			
ANR	3565805	Identifier	unknownType		3565612	0					
ANR	3565806	UnaryOperationExpression	! ( isMacho || isElf || isPe )		3565612	1					
ANR	3565807	UnaryOperator	!		3565612	0					
ANR	3565808	OrExpression	isMacho || isElf || isPe		3565612	1		||			
ANR	3565809	Identifier	isMacho		3565612	0					
ANR	3565810	OrExpression	isElf || isPe		3565612	1		||			
ANR	3565811	Identifier	isElf		3565612	0					
ANR	3565812	Identifier	isPe		3565612	1					
ANR	3565813	CompoundStatement		24:49:699:699	3565612	1					
ANR	3565814	ReturnStatement	return R_BIN_NM_NONE ;	87:2:1961:1981	3565612	0	True				
ANR	3565815	Identifier	R_BIN_NM_NONE		3565612	0					
ANR	3565816	Statement	r_list_foreach	91:1:2023:2036	3565612	21	True				
ANR	3565817	Statement	(	91:16:2038:2038	3565612	22	True				
ANR	3565818	Statement	o	91:17:2039:2039	3565612	23	True				
ANR	3565819	Statement	->	91:18:2040:2041	3565612	24	True				
ANR	3565820	Statement	imports	91:20:2042:2048	3565612	25	True				
ANR	3565821	Statement	","	91:27:2049:2049	3565612	26	True				
ANR	3565822	Statement	iter	91:29:2051:2054	3565612	27	True				
ANR	3565823	Statement	","	91:33:2055:2055	3565612	28	True				
ANR	3565824	Statement	sym	91:35:2057:2059	3565612	29	True				
ANR	3565825	Statement	)	91:38:2060:2060	3565612	30	True				
ANR	3565826	CompoundStatement		30:2:808:836	3565612	31					
ANR	3565827	IdentifierDeclStatement	const char * name = sym -> name ;	92:2:2066:2094	3565612	0	True				
ANR	3565828	IdentifierDecl	* name = sym -> name		3565612	0					
ANR	3565829	IdentifierDeclType	const char *		3565612	0					
ANR	3565830	Identifier	name		3565612	1					
ANR	3565831	AssignmentExpression	* name = sym -> name		3565612	2		=			
ANR	3565832	Identifier	name		3565612	0					
ANR	3565833	PtrMemberAccess	sym -> name		3565612	1					
ANR	3565834	Identifier	sym		3565612	0					
ANR	3565835	Identifier	name		3565612	1					
ANR	3565836	IfStatement	"if ( ! strcmp ( name , ""_NSConcreteGlobalBlock"" ) )"		3565612	1					
ANR	3565837	Condition	"! strcmp ( name , ""_NSConcreteGlobalBlock"" )"	93:6:2102:2141	3565612	0	True				
ANR	3565838	UnaryOperationExpression	"! strcmp ( name , ""_NSConcreteGlobalBlock"" )"		3565612	0					
ANR	3565839	UnaryOperator	!		3565612	0					
ANR	3565840	CallExpression	"strcmp ( name , ""_NSConcreteGlobalBlock"" )"		3565612	1					
ANR	3565841	Callee	strcmp		3565612	0					
ANR	3565842	Identifier	strcmp		3565612	0					
ANR	3565843	ArgumentList	name		3565612	1					
ANR	3565844	Argument	name		3565612	0					
ANR	3565845	Identifier	name		3565612	0					
ANR	3565846	Argument	"""_NSConcreteGlobalBlock"""		3565612	1					
ANR	3565847	PrimaryExpression	"""_NSConcreteGlobalBlock"""		3565612	0					
ANR	3565848	CompoundStatement		31:48:886:886	3565612	1					
ANR	3565849	ExpressionStatement	isBlocks = true	94:3:2149:2164	3565612	0	True				
ANR	3565850	AssignmentExpression	isBlocks = true		3565612	0		=			
ANR	3565851	Identifier	isBlocks		3565612	0					
ANR	3565852	Identifier	true		3565612	1					
ANR	3565853	ElseStatement	else		3565612	0					
ANR	3565854	IfStatement	"if ( ! strncmp ( name , ""objc_"" , 5 ) )"		3565612	0					
ANR	3565855	Condition	"! strncmp ( name , ""objc_"" , 5 )"	95:13:2179:2205	3565612	0	True				
ANR	3565856	UnaryOperationExpression	"! strncmp ( name , ""objc_"" , 5 )"		3565612	0					
ANR	3565857	UnaryOperator	!		3565612	0					
ANR	3565858	CallExpression	"strncmp ( name , ""objc_"" , 5 )"		3565612	1					
ANR	3565859	Callee	strncmp		3565612	0					
ANR	3565860	Identifier	strncmp		3565612	0					
ANR	3565861	ArgumentList	name		3565612	1					
ANR	3565862	Argument	name		3565612	0					
ANR	3565863	Identifier	name		3565612	0					
ANR	3565864	Argument	"""objc_"""		3565612	1					
ANR	3565865	PrimaryExpression	"""objc_"""		3565612	0					
ANR	3565866	Argument	5		3565612	2					
ANR	3565867	PrimaryExpression	5		3565612	0					
ANR	3565868	CompoundStatement		33:42:950:950	3565612	1					
ANR	3565869	ExpressionStatement	isObjC = true	96:3:2213:2226	3565612	0	True				
ANR	3565870	AssignmentExpression	isObjC = true		3565612	0		=			
ANR	3565871	Identifier	isObjC		3565612	0					
ANR	3565872	Identifier	true		3565612	1					
ANR	3565873	ExpressionStatement	cantbe . objc = true	97:3:2231:2249	3565612	1	True				
ANR	3565874	AssignmentExpression	cantbe . objc = true		3565612	0		=			
ANR	3565875	MemberAccess	cantbe . objc		3565612	0					
ANR	3565876	Identifier	cantbe		3565612	0					
ANR	3565877	Identifier	objc		3565612	1					
ANR	3565878	Identifier	true		3565612	1					
ANR	3565879	Statement	r_list_foreach	101:1:2260:2273	3565612	32	True				
ANR	3565880	Statement	(	101:16:2275:2275	3565612	33	True				
ANR	3565881	Statement	o	101:17:2276:2276	3565612	34	True				
ANR	3565882	Statement	->	101:18:2277:2278	3565612	35	True				
ANR	3565883	Statement	symbols	101:20:2279:2285	3565612	36	True				
ANR	3565884	Statement	","	101:27:2286:2286	3565612	37	True				
ANR	3565885	Statement	iter	101:29:2288:2291	3565612	38	True				
ANR	3565886	Statement	","	101:33:2292:2292	3565612	39	True				
ANR	3565887	Statement	sym	101:35:2294:2296	3565612	40	True				
ANR	3565888	Statement	)	101:38:2297:2297	3565612	41	True				
ANR	3565889	CompoundStatement		40:2:1045:1054	3565612	42					
ANR	3565890	IdentifierDeclStatement	char * lib ;	102:2:2303:2312	3565612	0	True				
ANR	3565891	IdentifierDecl	* lib		3565612	0					
ANR	3565892	IdentifierDeclType	char *		3565612	0					
ANR	3565893	Identifier	lib		3565612	1					
ANR	3565894	IfStatement	if ( ! cantbe . rust )		3565612	1					
ANR	3565895	Condition	! cantbe . rust	103:6:2320:2331	3565612	0	True				
ANR	3565896	UnaryOperationExpression	! cantbe . rust		3565612	0					
ANR	3565897	UnaryOperator	!		3565612	0					
ANR	3565898	MemberAccess	cantbe . rust		3565612	1					
ANR	3565899	Identifier	cantbe		3565612	0					
ANR	3565900	Identifier	rust		3565612	1					
ANR	3565901	CompoundStatement		41:20:1076:1076	3565612	1					
ANR	3565902	IfStatement	if ( check_rust ( sym ) )		3565612	0					
ANR	3565903	Condition	check_rust ( sym )	104:7:2343:2358	3565612	0	True				
ANR	3565904	CallExpression	check_rust ( sym )		3565612	0					
ANR	3565905	Callee	check_rust		3565612	0					
ANR	3565906	Identifier	check_rust		3565612	0					
ANR	3565907	ArgumentList	sym		3565612	1					
ANR	3565908	Argument	sym		3565612	0					
ANR	3565909	Identifier	sym		3565612	0					
ANR	3565910	CompoundStatement		42:25:1103:1103	3565612	1					
ANR	3565911	ExpressionStatement	"info -> lang = ""rust"""	105:4:2367:2386	3565612	0	True				
ANR	3565912	AssignmentExpression	"info -> lang = ""rust"""		3565612	0		=			
ANR	3565913	PtrMemberAccess	info -> lang		3565612	0					
ANR	3565914	Identifier	info		3565612	0					
ANR	3565915	Identifier	lang		3565612	1					
ANR	3565916	PrimaryExpression	"""rust"""		3565612	1					
ANR	3565917	ReturnStatement	return R_BIN_NM_RUST ;	106:4:2392:2412	3565612	1	True				
ANR	3565918	Identifier	R_BIN_NM_RUST		3565612	0					
ANR	3565919	IfStatement	if ( ! cantbe . swift )		3565612	2					
ANR	3565920	Condition	! cantbe . swift	109:6:2429:2441	3565612	0	True				
ANR	3565921	UnaryOperationExpression	! cantbe . swift		3565612	0					
ANR	3565922	UnaryOperator	!		3565612	0					
ANR	3565923	MemberAccess	cantbe . swift		3565612	1					
ANR	3565924	Identifier	cantbe		3565612	0					
ANR	3565925	Identifier	swift		3565612	1					
ANR	3565926	CompoundStatement		48:3:1191:1212	3565612	1					
ANR	3565927	IdentifierDeclStatement	bool hasswift = false ;	110:3:2449:2470	3565612	0	True				
ANR	3565928	IdentifierDecl	hasswift = false		3565612	0					
ANR	3565929	IdentifierDeclType	bool		3565612	0					
ANR	3565930	Identifier	hasswift		3565612	1					
ANR	3565931	AssignmentExpression	hasswift = false		3565612	2		=			
ANR	3565932	Identifier	false		3565612	0					
ANR	3565933	Identifier	false		3565612	1					
ANR	3565934	IfStatement	if ( ! swiftIsChecked )		3565612	1					
ANR	3565935	Condition	! swiftIsChecked	111:7:2479:2493	3565612	0	True				
ANR	3565936	UnaryOperationExpression	! swiftIsChecked		3565612	0					
ANR	3565937	UnaryOperator	!		3565612	0					
ANR	3565938	Identifier	swiftIsChecked		3565612	1					
ANR	3565939	CompoundStatement		49:24:1238:1238	3565612	1					
ANR	3565940	Statement	r_list_foreach	112:4:2502:2515	3565612	0	True				
ANR	3565941	Statement	(	112:19:2517:2517	3565612	1	True				
ANR	3565942	Statement	o	112:20:2518:2518	3565612	2	True				
ANR	3565943	Statement	->	112:21:2519:2520	3565612	3	True				
ANR	3565944	Statement	libs	112:23:2521:2524	3565612	4	True				
ANR	3565945	Statement	","	112:27:2525:2525	3565612	5	True				
ANR	3565946	Statement	iter2	112:29:2527:2531	3565612	6	True				
ANR	3565947	Statement	","	112:34:2532:2532	3565612	7	True				
ANR	3565948	Statement	lib	112:36:2534:2536	3565612	8	True				
ANR	3565949	Statement	)	112:39:2537:2537	3565612	9	True				
ANR	3565950	CompoundStatement		50:41:1281:1281	3565612	10					
ANR	3565951	IfStatement	"if ( strstr ( lib , ""swift"" ) )"		3565612	0					
ANR	3565952	Condition	"strstr ( lib , ""swift"" )"	113:9:2550:2570	3565612	0	True				
ANR	3565953	CallExpression	"strstr ( lib , ""swift"" )"		3565612	0					
ANR	3565954	Callee	strstr		3565612	0					
ANR	3565955	Identifier	strstr		3565612	0					
ANR	3565956	ArgumentList	lib		3565612	1					
ANR	3565957	Argument	lib		3565612	0					
ANR	3565958	Identifier	lib		3565612	0					
ANR	3565959	Argument	"""swift"""		3565612	1					
ANR	3565960	PrimaryExpression	"""swift"""		3565612	0					
ANR	3565961	CompoundStatement		51:32:1315:1315	3565612	1					
ANR	3565962	ExpressionStatement	hasswift = true	114:6:2581:2596	3565612	0	True				
ANR	3565963	AssignmentExpression	hasswift = true		3565612	0		=			
ANR	3565964	Identifier	hasswift		3565612	0					
ANR	3565965	Identifier	true		3565612	1					
ANR	3565966	BreakStatement	break ;	115:6:2604:2609	3565612	1	True				
ANR	3565967	ExpressionStatement	swiftIsChecked = true	118:4:2628:2649	3565612	11	True				
ANR	3565968	AssignmentExpression	swiftIsChecked = true		3565612	0		=			
ANR	3565969	Identifier	swiftIsChecked		3565612	0					
ANR	3565970	Identifier	true		3565612	1					
ANR	3565971	IfStatement	if ( hasswift || check_swift ( sym ) )		3565612	2					
ANR	3565972	Condition	hasswift || check_swift ( sym )	120:7:2663:2691	3565612	0	True				
ANR	3565973	OrExpression	hasswift || check_swift ( sym )		3565612	0		||			
ANR	3565974	Identifier	hasswift		3565612	0					
ANR	3565975	CallExpression	check_swift ( sym )		3565612	1					
ANR	3565976	Callee	check_swift		3565612	0					
ANR	3565977	Identifier	check_swift		3565612	0					
ANR	3565978	ArgumentList	sym		3565612	1					
ANR	3565979	Argument	sym		3565612	0					
ANR	3565980	Identifier	sym		3565612	0					
ANR	3565981	CompoundStatement		58:38:1436:1436	3565612	1					
ANR	3565982	ExpressionStatement	"info -> lang = ""swift"""	121:4:2700:2720	3565612	0	True				
ANR	3565983	AssignmentExpression	"info -> lang = ""swift"""		3565612	0		=			
ANR	3565984	PtrMemberAccess	info -> lang		3565612	0					
ANR	3565985	Identifier	info		3565612	0					
ANR	3565986	Identifier	lang		3565612	1					
ANR	3565987	PrimaryExpression	"""swift"""		3565612	1					
ANR	3565988	ReturnStatement	return R_BIN_NM_SWIFT ;	122:4:2726:2747	3565612	1	True				
ANR	3565989	Identifier	R_BIN_NM_SWIFT		3565612	0					
ANR	3565990	IfStatement	if ( ! cantbe . cxx )		3565612	3					
ANR	3565991	Condition	! cantbe . cxx	125:6:2764:2774	3565612	0	True				
ANR	3565992	UnaryOperationExpression	! cantbe . cxx		3565612	0					
ANR	3565993	UnaryOperator	!		3565612	0					
ANR	3565994	MemberAccess	cantbe . cxx		3565612	1					
ANR	3565995	Identifier	cantbe		3565612	0					
ANR	3565996	Identifier	cxx		3565612	1					
ANR	3565997	CompoundStatement		64:3:1524:1543	3565612	1					
ANR	3565998	IdentifierDeclStatement	bool hascxx = false ;	126:3:2782:2801	3565612	0	True				
ANR	3565999	IdentifierDecl	hascxx = false		3565612	0					
ANR	3566000	IdentifierDeclType	bool		3565612	0					
ANR	3566001	Identifier	hascxx		3565612	1					
ANR	3566002	AssignmentExpression	hascxx = false		3565612	2		=			
ANR	3566003	Identifier	false		3565612	0					
ANR	3566004	Identifier	false		3565612	1					
ANR	3566005	IfStatement	if ( ! cxxIsChecked )		3565612	1					
ANR	3566006	Condition	! cxxIsChecked	127:7:2810:2822	3565612	0	True				
ANR	3566007	UnaryOperationExpression	! cxxIsChecked		3565612	0					
ANR	3566008	UnaryOperator	!		3565612	0					
ANR	3566009	Identifier	cxxIsChecked		3565612	1					
ANR	3566010	CompoundStatement		65:22:1567:1567	3565612	1					
ANR	3566011	Statement	r_list_foreach	128:4:2831:2844	3565612	0	True				
ANR	3566012	Statement	(	128:19:2846:2846	3565612	1	True				
ANR	3566013	Statement	o	128:20:2847:2847	3565612	2	True				
ANR	3566014	Statement	->	128:21:2848:2849	3565612	3	True				
ANR	3566015	Statement	libs	128:23:2850:2853	3565612	4	True				
ANR	3566016	Statement	","	128:27:2854:2854	3565612	5	True				
ANR	3566017	Statement	iter2	128:29:2856:2860	3565612	6	True				
ANR	3566018	Statement	","	128:34:2861:2861	3565612	7	True				
ANR	3566019	Statement	lib	128:36:2863:2865	3565612	8	True				
ANR	3566020	Statement	)	128:39:2866:2866	3565612	9	True				
ANR	3566021	CompoundStatement		66:41:1610:1610	3565612	10					
ANR	3566022	IfStatement	"if ( strstr ( lib , ""stdc++"" ) || strstr ( lib , ""c++"" ) )"		3565612	0					
ANR	3566023	Condition	"strstr ( lib , ""stdc++"" ) || strstr ( lib , ""c++"" )"	129:9:2879:2932	3565612	0	True				
ANR	3566024	OrExpression	"strstr ( lib , ""stdc++"" ) || strstr ( lib , ""c++"" )"		3565612	0		||			
ANR	3566025	CallExpression	"strstr ( lib , ""stdc++"" )"		3565612	0					
ANR	3566026	Callee	strstr		3565612	0					
ANR	3566027	Identifier	strstr		3565612	0					
ANR	3566028	ArgumentList	lib		3565612	1					
ANR	3566029	Argument	lib		3565612	0					
ANR	3566030	Identifier	lib		3565612	0					
ANR	3566031	Argument	"""stdc++"""		3565612	1					
ANR	3566032	PrimaryExpression	"""stdc++"""		3565612	0					
ANR	3566033	CallExpression	"strstr ( lib , ""c++"" )"		3565612	1					
ANR	3566034	Callee	strstr		3565612	0					
ANR	3566035	Identifier	strstr		3565612	0					
ANR	3566036	ArgumentList	lib		3565612	1					
ANR	3566037	Argument	lib		3565612	0					
ANR	3566038	Identifier	lib		3565612	0					
ANR	3566039	Argument	"""c++"""		3565612	1					
ANR	3566040	PrimaryExpression	"""c++"""		3565612	0					
ANR	3566041	CompoundStatement		68:30:1677:1677	3565612	1					
ANR	3566042	ExpressionStatement	hascxx = true	131:6:2943:2956	3565612	0	True				
ANR	3566043	AssignmentExpression	hascxx = true		3565612	0		=			
ANR	3566044	Identifier	hascxx		3565612	0					
ANR	3566045	Identifier	true		3565612	1					
ANR	3566046	BreakStatement	break ;	132:6:2964:2969	3565612	1	True				
ANR	3566047	IfStatement	"if ( strstr ( lib , ""msvcp"" ) )"		3565612	1					
ANR	3566048	Condition	"strstr ( lib , ""msvcp"" )"	134:9:2987:3007	3565612	0	True				
ANR	3566049	CallExpression	"strstr ( lib , ""msvcp"" )"		3565612	0					
ANR	3566050	Callee	strstr		3565612	0					
ANR	3566051	Identifier	strstr		3565612	0					
ANR	3566052	ArgumentList	lib		3565612	1					
ANR	3566053	Argument	lib		3565612	0					
ANR	3566054	Identifier	lib		3565612	0					
ANR	3566055	Argument	"""msvcp"""		3565612	1					
ANR	3566056	PrimaryExpression	"""msvcp"""		3565612	0					
ANR	3566057	CompoundStatement		72:32:1752:1752	3565612	1					
ANR	3566058	ExpressionStatement	"info -> lang = ""msvc"""	135:6:3018:3037	3565612	0	True				
ANR	3566059	AssignmentExpression	"info -> lang = ""msvc"""		3565612	0		=			
ANR	3566060	PtrMemberAccess	info -> lang		3565612	0					
ANR	3566061	Identifier	info		3565612	0					
ANR	3566062	Identifier	lang		3565612	1					
ANR	3566063	PrimaryExpression	"""msvc"""		3565612	1					
ANR	3566064	ReturnStatement	return R_BIN_NM_MSVC ;	136:6:3045:3065	3565612	1	True				
ANR	3566065	Identifier	R_BIN_NM_MSVC		3565612	0					
ANR	3566066	ExpressionStatement	cxxIsChecked = true	139:4:3084:3103	3565612	11	True				
ANR	3566067	AssignmentExpression	cxxIsChecked = true		3565612	0		=			
ANR	3566068	Identifier	cxxIsChecked		3565612	0					
ANR	3566069	Identifier	true		3565612	1					
ANR	3566070	IfStatement	if ( hascxx || check_cxx ( sym ) )		3565612	2					
ANR	3566071	Condition	hascxx || check_cxx ( sym )	141:7:3117:3141	3565612	0	True				
ANR	3566072	OrExpression	hascxx || check_cxx ( sym )		3565612	0		||			
ANR	3566073	Identifier	hascxx		3565612	0					
ANR	3566074	CallExpression	check_cxx ( sym )		3565612	1					
ANR	3566075	Callee	check_cxx		3565612	0					
ANR	3566076	Identifier	check_cxx		3565612	0					
ANR	3566077	ArgumentList	sym		3565612	1					
ANR	3566078	Argument	sym		3565612	0					
ANR	3566079	Identifier	sym		3565612	0					
ANR	3566080	CompoundStatement		79:34:1886:1886	3565612	1					
ANR	3566081	ExpressionStatement	canBeCxx = true	142:4:3150:3165	3565612	0	True				
ANR	3566082	AssignmentExpression	canBeCxx = true		3565612	0		=			
ANR	3566083	Identifier	canBeCxx		3565612	0					
ANR	3566084	Identifier	true		3565612	1					
ANR	3566085	ExpressionStatement	cantbe . cxx = true	143:4:3171:3188	3565612	1	True				
ANR	3566086	AssignmentExpression	cantbe . cxx = true		3565612	0		=			
ANR	3566087	MemberAccess	cantbe . cxx		3565612	0					
ANR	3566088	Identifier	cantbe		3565612	0					
ANR	3566089	Identifier	cxx		3565612	1					
ANR	3566090	Identifier	true		3565612	1					
ANR	3566091	IfStatement	if ( ! cantbe . objc )		3565612	4					
ANR	3566092	Condition	! cantbe . objc	146:6:3205:3216	3565612	0	True				
ANR	3566093	UnaryOperationExpression	! cantbe . objc		3565612	0					
ANR	3566094	UnaryOperator	!		3565612	0					
ANR	3566095	MemberAccess	cantbe . objc		3565612	1					
ANR	3566096	Identifier	cantbe		3565612	0					
ANR	3566097	Identifier	objc		3565612	1					
ANR	3566098	CompoundStatement		84:20:1961:1961	3565612	1					
ANR	3566099	IfStatement	if ( check_objc ( sym ) )		3565612	0					
ANR	3566100	Condition	check_objc ( sym )	147:7:3228:3243	3565612	0	True				
ANR	3566101	CallExpression	check_objc ( sym )		3565612	0					
ANR	3566102	Callee	check_objc		3565612	0					
ANR	3566103	Identifier	check_objc		3565612	0					
ANR	3566104	ArgumentList	sym		3565612	1					
ANR	3566105	Argument	sym		3565612	0					
ANR	3566106	Identifier	sym		3565612	0					
ANR	3566107	CompoundStatement		85:25:1988:1988	3565612	1					
ANR	3566108	ExpressionStatement	"info -> lang = ""objc"""	148:4:3252:3271	3565612	0	True				
ANR	3566109	AssignmentExpression	"info -> lang = ""objc"""		3565612	0		=			
ANR	3566110	PtrMemberAccess	info -> lang		3565612	0					
ANR	3566111	Identifier	info		3565612	0					
ANR	3566112	Identifier	lang		3565612	1					
ANR	3566113	PrimaryExpression	"""objc"""		3565612	1					
ANR	3566114	ReturnStatement	return R_BIN_NM_OBJC ;	149:4:3277:3297	3565612	1	True				
ANR	3566115	Identifier	R_BIN_NM_OBJC		3565612	0					
ANR	3566116	IfStatement	if ( ! cantbe . dlang )		3565612	5					
ANR	3566117	Condition	! cantbe . dlang	152:6:3314:3326	3565612	0	True				
ANR	3566118	UnaryOperationExpression	! cantbe . dlang		3565612	0					
ANR	3566119	UnaryOperator	!		3565612	0					
ANR	3566120	MemberAccess	cantbe . dlang		3565612	1					
ANR	3566121	Identifier	cantbe		3565612	0					
ANR	3566122	Identifier	dlang		3565612	1					
ANR	3566123	CompoundStatement		91:3:2076:2097	3565612	1					
ANR	3566124	IdentifierDeclStatement	bool hasdlang = false ;	153:3:3334:3355	3565612	0	True				
ANR	3566125	IdentifierDecl	hasdlang = false		3565612	0					
ANR	3566126	IdentifierDeclType	bool		3565612	0					
ANR	3566127	Identifier	hasdlang		3565612	1					
ANR	3566128	AssignmentExpression	hasdlang = false		3565612	2		=			
ANR	3566129	Identifier	false		3565612	0					
ANR	3566130	Identifier	false		3565612	1					
ANR	3566131	IfStatement	if ( ! phobosIsChecked )		3565612	1					
ANR	3566132	Condition	! phobosIsChecked	154:7:3364:3379	3565612	0	True				
ANR	3566133	UnaryOperationExpression	! phobosIsChecked		3565612	0					
ANR	3566134	UnaryOperator	!		3565612	0					
ANR	3566135	Identifier	phobosIsChecked		3565612	1					
ANR	3566136	CompoundStatement		92:25:2124:2124	3565612	1					
ANR	3566137	Statement	r_list_foreach	155:4:3388:3401	3565612	0	True				
ANR	3566138	Statement	(	155:19:3403:3403	3565612	1	True				
ANR	3566139	Statement	o	155:20:3404:3404	3565612	2	True				
ANR	3566140	Statement	->	155:21:3405:3406	3565612	3	True				
ANR	3566141	Statement	libs	155:23:3407:3410	3565612	4	True				
ANR	3566142	Statement	","	155:27:3411:3411	3565612	5	True				
ANR	3566143	Statement	iter2	155:29:3413:3417	3565612	6	True				
ANR	3566144	Statement	","	155:34:3418:3418	3565612	7	True				
ANR	3566145	Statement	lib	155:36:3420:3422	3565612	8	True				
ANR	3566146	Statement	)	155:39:3423:3423	3565612	9	True				
ANR	3566147	CompoundStatement		93:41:2167:2167	3565612	10					
ANR	3566148	IfStatement	"if ( strstr ( lib , ""phobos"" ) )"		3565612	0					
ANR	3566149	Condition	"strstr ( lib , ""phobos"" )"	156:9:3436:3457	3565612	0	True				
ANR	3566150	CallExpression	"strstr ( lib , ""phobos"" )"		3565612	0					
ANR	3566151	Callee	strstr		3565612	0					
ANR	3566152	Identifier	strstr		3565612	0					
ANR	3566153	ArgumentList	lib		3565612	1					
ANR	3566154	Argument	lib		3565612	0					
ANR	3566155	Identifier	lib		3565612	0					
ANR	3566156	Argument	"""phobos"""		3565612	1					
ANR	3566157	PrimaryExpression	"""phobos"""		3565612	0					
ANR	3566158	CompoundStatement		94:33:2202:2202	3565612	1					
ANR	3566159	ExpressionStatement	hasdlang = true	157:6:3468:3483	3565612	0	True				
ANR	3566160	AssignmentExpression	hasdlang = true		3565612	0		=			
ANR	3566161	Identifier	hasdlang		3565612	0					
ANR	3566162	Identifier	true		3565612	1					
ANR	3566163	BreakStatement	break ;	158:6:3491:3496	3565612	1	True				
ANR	3566164	ExpressionStatement	phobosIsChecked = true	161:4:3515:3537	3565612	11	True				
ANR	3566165	AssignmentExpression	phobosIsChecked = true		3565612	0		=			
ANR	3566166	Identifier	phobosIsChecked		3565612	0					
ANR	3566167	Identifier	true		3565612	1					
ANR	3566168	IfStatement	if ( hasdlang || check_dlang ( sym ) )		3565612	2					
ANR	3566169	Condition	hasdlang || check_dlang ( sym )	163:7:3551:3579	3565612	0	True				
ANR	3566170	OrExpression	hasdlang || check_dlang ( sym )		3565612	0		||			
ANR	3566171	Identifier	hasdlang		3565612	0					
ANR	3566172	CallExpression	check_dlang ( sym )		3565612	1					
ANR	3566173	Callee	check_dlang		3565612	0					
ANR	3566174	Identifier	check_dlang		3565612	0					
ANR	3566175	ArgumentList	sym		3565612	1					
ANR	3566176	Argument	sym		3565612	0					
ANR	3566177	Identifier	sym		3565612	0					
ANR	3566178	CompoundStatement		101:38:2324:2324	3565612	1					
ANR	3566179	ExpressionStatement	"info -> lang = ""dlang"""	164:4:3588:3608	3565612	0	True				
ANR	3566180	AssignmentExpression	"info -> lang = ""dlang"""		3565612	0		=			
ANR	3566181	PtrMemberAccess	info -> lang		3565612	0					
ANR	3566182	Identifier	info		3565612	0					
ANR	3566183	Identifier	lang		3565612	1					
ANR	3566184	PrimaryExpression	"""dlang"""		3565612	1					
ANR	3566185	ReturnStatement	return R_BIN_NM_DLANG ;	165:4:3614:3635	3565612	1	True				
ANR	3566186	Identifier	R_BIN_NM_DLANG		3565612	0					
ANR	3566187	IfStatement	if ( ! cantbe . msvc )		3565612	6					
ANR	3566188	Condition	! cantbe . msvc	168:6:3652:3663	3565612	0	True				
ANR	3566189	UnaryOperationExpression	! cantbe . msvc		3565612	0					
ANR	3566190	UnaryOperator	!		3565612	0					
ANR	3566191	MemberAccess	cantbe . msvc		3565612	1					
ANR	3566192	Identifier	cantbe		3565612	0					
ANR	3566193	Identifier	msvc		3565612	1					
ANR	3566194	CompoundStatement		106:20:2408:2408	3565612	1					
ANR	3566195	IfStatement	if ( ! isMsvc && check_msvc ( sym ) )		3565612	0					
ANR	3566196	Condition	! isMsvc && check_msvc ( sym )	169:7:3675:3701	3565612	0	True				
ANR	3566197	AndExpression	! isMsvc && check_msvc ( sym )		3565612	0		&&			
ANR	3566198	UnaryOperationExpression	! isMsvc		3565612	0					
ANR	3566199	UnaryOperator	!		3565612	0					
ANR	3566200	Identifier	isMsvc		3565612	1					
ANR	3566201	CallExpression	check_msvc ( sym )		3565612	1					
ANR	3566202	Callee	check_msvc		3565612	0					
ANR	3566203	Identifier	check_msvc		3565612	0					
ANR	3566204	ArgumentList	sym		3565612	1					
ANR	3566205	Argument	sym		3565612	0					
ANR	3566206	Identifier	sym		3565612	0					
ANR	3566207	CompoundStatement		107:36:2446:2446	3565612	1					
ANR	3566208	ExpressionStatement	isMsvc = true	170:4:3710:3723	3565612	0	True				
ANR	3566209	AssignmentExpression	isMsvc = true		3565612	0		=			
ANR	3566210	Identifier	isMsvc		3565612	0					
ANR	3566211	Identifier	true		3565612	1					
ANR	3566212	IfStatement	if ( isObjC )		3565612	43					
ANR	3566213	Condition	isObjC	174:5:3742:3747	3565612	0	True				
ANR	3566214	Identifier	isObjC		3565612	0					
ANR	3566215	CompoundStatement		112:13:2492:2492	3565612	1					
ANR	3566216	ReturnStatement	return R_BIN_NM_OBJC | ( isBlocks ? R_BIN_NM_BLOCKS : 0 ) ;	175:2:3754:3805	3565612	0	True				
ANR	3566217	InclusiveOrExpression	R_BIN_NM_OBJC | ( isBlocks ? R_BIN_NM_BLOCKS : 0 )		3565612	0		|			
ANR	3566218	Identifier	R_BIN_NM_OBJC		3565612	0					
ANR	3566219	ConditionalExpression	isBlocks ? R_BIN_NM_BLOCKS : 0		3565612	1					
ANR	3566220	Condition	isBlocks		3565612	0					
ANR	3566221	Identifier	isBlocks		3565612	0					
ANR	3566222	Identifier	R_BIN_NM_BLOCKS		3565612	1					
ANR	3566223	PrimaryExpression	0		3565612	2					
ANR	3566224	IfStatement	if ( canBeCxx )		3565612	44					
ANR	3566225	Condition	canBeCxx	177:5:3815:3822	3565612	0	True				
ANR	3566226	Identifier	canBeCxx		3565612	0					
ANR	3566227	CompoundStatement		115:15:2567:2567	3565612	1					
ANR	3566228	ReturnStatement	return R_BIN_NM_CXX | ( isBlocks ? R_BIN_NM_BLOCKS : 0 ) ;	178:2:3829:3879	3565612	0	True				
ANR	3566229	InclusiveOrExpression	R_BIN_NM_CXX | ( isBlocks ? R_BIN_NM_BLOCKS : 0 )		3565612	0		|			
ANR	3566230	Identifier	R_BIN_NM_CXX		3565612	0					
ANR	3566231	ConditionalExpression	isBlocks ? R_BIN_NM_BLOCKS : 0		3565612	1					
ANR	3566232	Condition	isBlocks		3565612	0					
ANR	3566233	Identifier	isBlocks		3565612	0					
ANR	3566234	Identifier	R_BIN_NM_BLOCKS		3565612	1					
ANR	3566235	PrimaryExpression	0		3565612	2					
ANR	3566236	IfStatement	if ( isMsvc )		3565612	45					
ANR	3566237	Condition	isMsvc	180:5:3889:3894	3565612	0	True				
ANR	3566238	Identifier	isMsvc		3565612	0					
ANR	3566239	CompoundStatement		118:13:2639:2639	3565612	1					
ANR	3566240	ReturnStatement	return R_BIN_NM_MSVC ;	181:2:3901:3921	3565612	0	True				
ANR	3566241	Identifier	R_BIN_NM_MSVC		3565612	0					
ANR	3566242	ReturnStatement	return R_BIN_NM_C | ( isBlocks ? R_BIN_NM_BLOCKS : 0 ) ;	183:1:3927:3975	3565612	46	True				
ANR	3566243	InclusiveOrExpression	R_BIN_NM_C | ( isBlocks ? R_BIN_NM_BLOCKS : 0 )		3565612	0		|			
ANR	3566244	Identifier	R_BIN_NM_C		3565612	0					
ANR	3566245	ConditionalExpression	isBlocks ? R_BIN_NM_BLOCKS : 0		3565612	1					
ANR	3566246	Condition	isBlocks		3565612	0					
ANR	3566247	Identifier	isBlocks		3565612	0					
ANR	3566248	Identifier	R_BIN_NM_BLOCKS		3565612	1					
ANR	3566249	PrimaryExpression	0		3565612	2					
ANR	3566250	ReturnType	R_API int		3565612	1					
ANR	3566251	Identifier	r_bin_load_languages		3565612	2					
ANR	3566252	ParameterList	RBinFile * binfile		3565612	3					
ANR	3566253	Parameter	RBinFile * binfile	63:31:1238:1254	3565612	0	True				
ANR	3566254	ParameterType	RBinFile *		3565612	0					
ANR	3566255	Identifier	binfile		3565612	1					
ANR	3566256	CFGEntryNode	ENTRY		3565612		True				
ANR	3566257	CFGExitNode	EXIT		3565612		True				
ANR	3566258	CFGErrorNode	ERROR		3565612		True				
ANR	3566259	Symbol	lib		3565612						
ANR	3566260	Symbol	o -> info		3565612						
ANR	3566261	Symbol	binfile -> o -> info		3565612						
ANR	3566262	Symbol	binfile		3565612						
ANR	3566263	Symbol	isPe		3565612						
ANR	3566264	Symbol	strncmp		3565612						
ANR	3566265	Symbol	R_BIN_NM_MSVC		3565612						
ANR	3566266	Symbol	cantbe . msvc		3565612						
ANR	3566267	Symbol	isMacho		3565612						
ANR	3566268	Symbol	cantbe . objc		3565612						
ANR	3566269	Symbol	R_BIN_NM_DLANG		3565612						
ANR	3566270	Symbol	cantbe		3565612						
ANR	3566271	Symbol	info		3565612						
ANR	3566272	Symbol	cantbe . cxx		3565612						
ANR	3566273	Symbol	strcmp		3565612						
ANR	3566274	Symbol	cantbe . rust		3565612						
ANR	3566275	Symbol	check_rust		3565612						
ANR	3566276	Symbol	check_swift		3565612						
ANR	3566277	Symbol	NULL		3565612						
ANR	3566278	Symbol	swiftIsChecked		3565612						
ANR	3566279	Symbol	canBeCxx		3565612						
ANR	3566280	Symbol	R_BIN_NM_OBJC		3565612						
ANR	3566281	Symbol	iter		3565612						
ANR	3566282	Symbol	check_cxx		3565612						
ANR	3566283	Symbol	unknownType		3565612						
ANR	3566284	Symbol	R_BIN_NM_CXX		3565612						
ANR	3566285	Symbol	* sym		3565612						
ANR	3566286	Symbol	check_msvc		3565612						
ANR	3566287	Symbol	strstr		3565612						
ANR	3566288	Symbol	* * binfile		3565612						
ANR	3566289	Symbol	sym -> name		3565612						
ANR	3566290	Symbol	name		3565612						
ANR	3566291	Symbol	true		3565612						
ANR	3566292	Symbol	hasswift		3565612						
ANR	3566293	Symbol	isMsvc		3565612						
ANR	3566294	Symbol	check_objc		3565612						
ANR	3566295	Symbol	R_BIN_NM_SWIFT		3565612						
ANR	3566296	Symbol	check_dlang		3565612						
ANR	3566297	Symbol	R_BIN_NM_RUST		3565612						
ANR	3566298	Symbol	cantbe . swift		3565612						
ANR	3566299	Symbol	sym		3565612						
ANR	3566300	Symbol	info -> rclass		3565612						
ANR	3566301	Symbol	hascxx		3565612						
ANR	3566302	Symbol	ft		3565612						
ANR	3566303	Symbol	cxxIsChecked		3565612						
ANR	3566304	Symbol	isObjC		3565612						
ANR	3566305	Symbol	phobosIsChecked		3565612						
ANR	3566306	Symbol	isBlocks		3565612						
ANR	3566307	Symbol	hasdlang		3565612						
ANR	3566308	Symbol	* binfile		3565612						
ANR	3566309	Symbol	* binfile -> o		3565612						
ANR	3566310	Symbol	iter2		3565612						
ANR	3566311	Symbol	false		3565612						
ANR	3566312	Symbol	isElf		3565612						
ANR	3566313	Symbol	R_BIN_NM_NONE		3565612						
ANR	3566314	Symbol	R_BIN_NM_BLOCKS		3565612						
ANR	3566315	Symbol	o		3565612						
ANR	3566316	Symbol	R_BIN_NM_C		3565612						
ANR	3566317	Symbol	binfile -> o		3565612						
ANR	3566318	Symbol	cantbe . dlang		3565612						
ANR	3566319	Symbol	* o		3565612						
ANR	3566320	Symbol	* info		3565612						
ANR	3566321	Symbol	info -> lang		3565612						
ANR	3566322	Function	r_bin_lang_type	186:0:3980:4610							
ANR	3566323	FunctionDef	"r_bin_lang_type (RBinFile * binfile , const char * def , const char * sym)"		3566322	0					
ANR	3566324	CompoundStatement		186:79:4059:4610	3566322	0					
ANR	3566325	IdentifierDeclStatement	int type = 0 ;	187:1:4062:4074	3566322	0	True				
ANR	3566326	IdentifierDecl	type = 0		3566322	0					
ANR	3566327	IdentifierDeclType	int		3566322	0					
ANR	3566328	Identifier	type		3566322	1					
ANR	3566329	AssignmentExpression	type = 0		3566322	2		=			
ANR	3566330	Identifier	type		3566322	0					
ANR	3566331	PrimaryExpression	0		3566322	1					
ANR	3566332	IdentifierDeclStatement	RBinPlugin * plugin ;	188:1:4077:4095	3566322	1	True				
ANR	3566333	IdentifierDecl	* plugin		3566322	0					
ANR	3566334	IdentifierDeclType	RBinPlugin *		3566322	0					
ANR	3566335	Identifier	plugin		3566322	1					
ANR	3566336	IfStatement	if ( sym && sym [ 0 ] == sym [ 1 ] && sym [ 0 ] == '_' )		3566322	2					
ANR	3566337	Condition	sym && sym [ 0 ] == sym [ 1 ] && sym [ 0 ] == '_'	189:5:4102:4141	3566322	0	True				
ANR	3566338	AndExpression	sym && sym [ 0 ] == sym [ 1 ] && sym [ 0 ] == '_'		3566322	0		&&			
ANR	3566339	Identifier	sym		3566322	0					
ANR	3566340	AndExpression	sym [ 0 ] == sym [ 1 ] && sym [ 0 ] == '_'		3566322	1		&&			
ANR	3566341	EqualityExpression	sym [ 0 ] == sym [ 1 ]		3566322	0		==			
ANR	3566342	ArrayIndexing	sym [ 0 ]		3566322	0					
ANR	3566343	Identifier	sym		3566322	0					
ANR	3566344	PrimaryExpression	0		3566322	1					
ANR	3566345	ArrayIndexing	sym [ 1 ]		3566322	1					
ANR	3566346	Identifier	sym		3566322	0					
ANR	3566347	PrimaryExpression	1		3566322	1					
ANR	3566348	EqualityExpression	sym [ 0 ] == '_'		3566322	1		==			
ANR	3566349	ArrayIndexing	sym [ 0 ]		3566322	0					
ANR	3566350	Identifier	sym		3566322	0					
ANR	3566351	PrimaryExpression	0		3566322	1					
ANR	3566352	PrimaryExpression	'_'		3566322	1					
ANR	3566353	CompoundStatement		4:47:84:84	3566322	1					
ANR	3566354	ExpressionStatement	type = R_BIN_NM_CXX	190:2:4148:4167	3566322	0	True				
ANR	3566355	AssignmentExpression	type = R_BIN_NM_CXX		3566322	0		=			
ANR	3566356	Identifier	type		3566322	0					
ANR	3566357	Identifier	R_BIN_NM_CXX		3566322	1					
ANR	3566358	IfStatement	if ( def && * def )		3566322	3					
ANR	3566359	Condition	def && * def	192:5:4177:4187	3566322	0	True				
ANR	3566360	AndExpression	def && * def		3566322	0		&&			
ANR	3566361	Identifier	def		3566322	0					
ANR	3566362	UnaryOperationExpression	* def		3566322	1					
ANR	3566363	UnaryOperator	*		3566322	0					
ANR	3566364	Identifier	def		3566322	1					
ANR	3566365	CompoundStatement		7:18:130:130	3566322	1					
ANR	3566366	ExpressionStatement	type = r_bin_demangle_type ( def )	193:2:4194:4226	3566322	0	True				
ANR	3566367	AssignmentExpression	type = r_bin_demangle_type ( def )		3566322	0		=			
ANR	3566368	Identifier	type		3566322	0					
ANR	3566369	CallExpression	r_bin_demangle_type ( def )		3566322	1					
ANR	3566370	Callee	r_bin_demangle_type		3566322	0					
ANR	3566371	Identifier	r_bin_demangle_type		3566322	0					
ANR	3566372	ArgumentList	def		3566322	1					
ANR	3566373	Argument	def		3566322	0					
ANR	3566374	Identifier	def		3566322	0					
ANR	3566375	IfStatement	if ( type != R_BIN_NM_NONE )		3566322	1					
ANR	3566376	Condition	type != R_BIN_NM_NONE	194:6:4234:4254	3566322	0	True				
ANR	3566377	EqualityExpression	type != R_BIN_NM_NONE		3566322	0		!=			
ANR	3566378	Identifier	type		3566322	0					
ANR	3566379	Identifier	R_BIN_NM_NONE		3566322	1					
ANR	3566380	CompoundStatement		9:29:197:197	3566322	1					
ANR	3566381	ReturnStatement	return type ;	195:3:4262:4273	3566322	0	True				
ANR	3566382	Identifier	type		3566322	0					
ANR	3566383	ExpressionStatement	plugin = r_bin_file_cur_plugin ( binfile )	198:1:4283:4323	3566322	4	True				
ANR	3566384	AssignmentExpression	plugin = r_bin_file_cur_plugin ( binfile )		3566322	0		=			
ANR	3566385	Identifier	plugin		3566322	0					
ANR	3566386	CallExpression	r_bin_file_cur_plugin ( binfile )		3566322	1					
ANR	3566387	Callee	r_bin_file_cur_plugin		3566322	0					
ANR	3566388	Identifier	r_bin_file_cur_plugin		3566322	0					
ANR	3566389	ArgumentList	binfile		3566322	1					
ANR	3566390	Argument	binfile		3566322	0					
ANR	3566391	Identifier	binfile		3566322	0					
ANR	3566392	IfStatement	if ( plugin && plugin -> demangle_type )		3566322	5					
ANR	3566393	Condition	plugin && plugin -> demangle_type	199:5:4330:4360	3566322	0	True				
ANR	3566394	AndExpression	plugin && plugin -> demangle_type		3566322	0		&&			
ANR	3566395	Identifier	plugin		3566322	0					
ANR	3566396	PtrMemberAccess	plugin -> demangle_type		3566322	1					
ANR	3566397	Identifier	plugin		3566322	0					
ANR	3566398	Identifier	demangle_type		3566322	1					
ANR	3566399	CompoundStatement		14:38:303:303	3566322	1					
ANR	3566400	ExpressionStatement	type = plugin -> demangle_type ( def )	200:2:4367:4401	3566322	0	True				
ANR	3566401	AssignmentExpression	type = plugin -> demangle_type ( def )		3566322	0		=			
ANR	3566402	Identifier	type		3566322	0					
ANR	3566403	CallExpression	plugin -> demangle_type ( def )		3566322	1					
ANR	3566404	Callee	plugin -> demangle_type		3566322	0					
ANR	3566405	PtrMemberAccess	plugin -> demangle_type		3566322	0					
ANR	3566406	Identifier	plugin		3566322	0					
ANR	3566407	Identifier	demangle_type		3566322	1					
ANR	3566408	ArgumentList	def		3566322	1					
ANR	3566409	Argument	def		3566322	0					
ANR	3566410	Identifier	def		3566322	0					
ANR	3566411	ElseStatement	else		3566322	0					
ANR	3566412	CompoundStatement		16:8:351:351	3566322	0					
ANR	3566413	IfStatement	if ( binfile && binfile -> o && binfile -> o -> info )		3566322	0					
ANR	3566414	Condition	binfile && binfile -> o && binfile -> o -> info	202:6:4419:4459	3566322	0	True				
ANR	3566415	AndExpression	binfile && binfile -> o && binfile -> o -> info		3566322	0		&&			
ANR	3566416	Identifier	binfile		3566322	0					
ANR	3566417	AndExpression	binfile -> o && binfile -> o -> info		3566322	1		&&			
ANR	3566418	PtrMemberAccess	binfile -> o		3566322	0					
ANR	3566419	Identifier	binfile		3566322	0					
ANR	3566420	Identifier	o		3566322	1					
ANR	3566421	PtrMemberAccess	binfile -> o -> info		3566322	1					
ANR	3566422	PtrMemberAccess	binfile -> o		3566322	0					
ANR	3566423	Identifier	binfile		3566322	0					
ANR	3566424	Identifier	o		3566322	1					
ANR	3566425	Identifier	info		3566322	1					
ANR	3566426	CompoundStatement		17:49:402:402	3566322	1					
ANR	3566427	ExpressionStatement	type = r_bin_demangle_type ( binfile -> o -> info -> lang )	203:3:4467:4518	3566322	0	True				
ANR	3566428	AssignmentExpression	type = r_bin_demangle_type ( binfile -> o -> info -> lang )		3566322	0		=			
ANR	3566429	Identifier	type		3566322	0					
ANR	3566430	CallExpression	r_bin_demangle_type ( binfile -> o -> info -> lang )		3566322	1					
ANR	3566431	Callee	r_bin_demangle_type		3566322	0					
ANR	3566432	Identifier	r_bin_demangle_type		3566322	0					
ANR	3566433	ArgumentList	binfile -> o -> info -> lang		3566322	1					
ANR	3566434	Argument	binfile -> o -> info -> lang		3566322	0					
ANR	3566435	PtrMemberAccess	binfile -> o -> info -> lang		3566322	0					
ANR	3566436	PtrMemberAccess	binfile -> o -> info		3566322	0					
ANR	3566437	PtrMemberAccess	binfile -> o		3566322	0					
ANR	3566438	Identifier	binfile		3566322	0					
ANR	3566439	Identifier	o		3566322	1					
ANR	3566440	Identifier	info		3566322	1					
ANR	3566441	Identifier	lang		3566322	1					
ANR	3566442	IfStatement	if ( type == R_BIN_NM_NONE )		3566322	6					
ANR	3566443	Condition	type == R_BIN_NM_NONE	206:5:4532:4552	3566322	0	True				
ANR	3566444	EqualityExpression	type == R_BIN_NM_NONE		3566322	0		==			
ANR	3566445	Identifier	type		3566322	0					
ANR	3566446	Identifier	R_BIN_NM_NONE		3566322	1					
ANR	3566447	CompoundStatement		21:28:495:495	3566322	1					
ANR	3566448	ExpressionStatement	type = r_bin_demangle_type ( def )	207:2:4559:4591	3566322	0	True				
ANR	3566449	AssignmentExpression	type = r_bin_demangle_type ( def )		3566322	0		=			
ANR	3566450	Identifier	type		3566322	0					
ANR	3566451	CallExpression	r_bin_demangle_type ( def )		3566322	1					
ANR	3566452	Callee	r_bin_demangle_type		3566322	0					
ANR	3566453	Identifier	r_bin_demangle_type		3566322	0					
ANR	3566454	ArgumentList	def		3566322	1					
ANR	3566455	Argument	def		3566322	0					
ANR	3566456	Identifier	def		3566322	0					
ANR	3566457	ReturnStatement	return type ;	209:1:4597:4608	3566322	7	True				
ANR	3566458	Identifier	type		3566322	0					
ANR	3566459	ReturnType	R_IPI int		3566322	1					
ANR	3566460	Identifier	r_bin_lang_type		3566322	2					
ANR	3566461	ParameterList	"RBinFile * binfile , const char * def , const char * sym"		3566322	3					
ANR	3566462	Parameter	RBinFile * binfile	186:26:4006:4022	3566322	0	True				
ANR	3566463	ParameterType	RBinFile *		3566322	0					
ANR	3566464	Identifier	binfile		3566322	1					
ANR	3566465	Parameter	const char * def	186:45:4025:4039	3566322	1	True				
ANR	3566466	ParameterType	const char *		3566322	0					
ANR	3566467	Identifier	def		3566322	1					
ANR	3566468	Parameter	const char * sym	186:62:4042:4056	3566322	2	True				
ANR	3566469	ParameterType	const char *		3566322	0					
ANR	3566470	Identifier	sym		3566322	1					
ANR	3566471	CFGEntryNode	ENTRY		3566322		True				
ANR	3566472	CFGExitNode	EXIT		3566322		True				
ANR	3566473	Symbol	* binfile -> o		3566322						
ANR	3566474	Symbol	* binfile		3566322						
ANR	3566475	Symbol	def		3566322						
ANR	3566476	Symbol	sym		3566322						
ANR	3566477	Symbol	plugin -> demangle_type		3566322						
ANR	3566478	Symbol	* * binfile -> o		3566322						
ANR	3566479	Symbol	* plugin		3566322						
ANR	3566480	Symbol	binfile -> o -> info		3566322						
ANR	3566481	Symbol	type		3566322						
ANR	3566482	Symbol	R_BIN_NM_NONE		3566322						
ANR	3566483	Symbol	binfile		3566322						
ANR	3566484	Symbol	R_BIN_NM_CXX		3566322						
ANR	3566485	Symbol	* binfile -> o -> info		3566322						
ANR	3566486	Symbol	* def		3566322						
ANR	3566487	Symbol	* sym		3566322						
ANR	3566488	Symbol	binfile -> o -> info -> lang		3566322						
ANR	3566489	Symbol	binfile -> o		3566322						
ANR	3566490	Symbol	plugin		3566322						
ANR	3566491	Symbol	r_bin_file_cur_plugin		3566322						
ANR	3566492	Symbol	r_bin_demangle_type		3566322						
ANR	3566493	Symbol	* * * binfile		3566322						
ANR	3566494	Symbol	* * binfile		3566322						
ANR	3566495	Function	r_bin_lang_tostring	212:6:4619:5178							
ANR	3566496	FunctionDef	r_bin_lang_tostring (int lang)		3566495	0					
ANR	3566497	CompoundStatement		212:48:4661:5178	3566495	0					
ANR	3566498	SwitchStatement	switch ( lang & 0xffff )		3566495	0					
ANR	3566499	Condition	lang & 0xffff	213:9:4672:4684	3566495	0	True				
ANR	3566500	BitAndExpression	lang & 0xffff		3566495	0		&			
ANR	3566501	Identifier	lang		3566495	0					
ANR	3566502	PrimaryExpression	0xffff		3566495	1					
ANR	3566503	CompoundStatement		2:24:25:25	3566495	1					
ANR	3566504	Label	case R_BIN_NM_SWIFT :	214:1:4690:4709	3566495	0	True				
ANR	3566505	Identifier	R_BIN_NM_SWIFT		3566495	0					
ANR	3566506	ReturnStatement	"return ""swift"" ;"	215:2:4713:4727	3566495	1	True				
ANR	3566507	PrimaryExpression	"""swift"""		3566495	0					
ANR	3566508	Label	case R_BIN_NM_JAVA :	216:1:4730:4748	3566495	2	True				
ANR	3566509	Identifier	R_BIN_NM_JAVA		3566495	0					
ANR	3566510	ReturnStatement	"return ""java"" ;"	217:2:4752:4765	3566495	3	True				
ANR	3566511	PrimaryExpression	"""java"""		3566495	0					
ANR	3566512	Label	case R_BIN_NM_KOTLIN :	218:1:4768:4788	3566495	4	True				
ANR	3566513	Identifier	R_BIN_NM_KOTLIN		3566495	0					
ANR	3566514	ReturnStatement	"return ""kotlin"" ;"	219:2:4792:4807	3566495	5	True				
ANR	3566515	PrimaryExpression	"""kotlin"""		3566495	0					
ANR	3566516	Label	case R_BIN_NM_C :	220:1:4810:4825	3566495	6	True				
ANR	3566517	Identifier	R_BIN_NM_C		3566495	0					
ANR	3566518	ReturnStatement	"return ( lang & R_BIN_NM_BLOCKS ) ? ""c with blocks"" : ""c"" ;"	221:2:4829:4882	3566495	7	True				
ANR	3566519	ConditionalExpression	"( lang & R_BIN_NM_BLOCKS ) ? ""c with blocks"" : ""c"""		3566495	0					
ANR	3566520	Condition	lang & R_BIN_NM_BLOCKS		3566495	0					
ANR	3566521	BitAndExpression	lang & R_BIN_NM_BLOCKS		3566495	0		&			
ANR	3566522	Identifier	lang		3566495	0					
ANR	3566523	Identifier	R_BIN_NM_BLOCKS		3566495	1					
ANR	3566524	PrimaryExpression	"""c with blocks"""		3566495	1					
ANR	3566525	PrimaryExpression	"""c"""		3566495	2					
ANR	3566526	Label	case R_BIN_NM_CXX :	222:1:4885:4902	3566495	8	True				
ANR	3566527	Identifier	R_BIN_NM_CXX		3566495	0					
ANR	3566528	ReturnStatement	"return ( lang & R_BIN_NM_BLOCKS ) ? ""c++ with blocks"" : ""c++"" ;"	223:2:4906:4963	3566495	9	True				
ANR	3566529	ConditionalExpression	"( lang & R_BIN_NM_BLOCKS ) ? ""c++ with blocks"" : ""c++"""		3566495	0					
ANR	3566530	Condition	lang & R_BIN_NM_BLOCKS		3566495	0					
ANR	3566531	BitAndExpression	lang & R_BIN_NM_BLOCKS		3566495	0		&			
ANR	3566532	Identifier	lang		3566495	0					
ANR	3566533	Identifier	R_BIN_NM_BLOCKS		3566495	1					
ANR	3566534	PrimaryExpression	"""c++ with blocks"""		3566495	1					
ANR	3566535	PrimaryExpression	"""c++"""		3566495	2					
ANR	3566536	Label	case R_BIN_NM_DLANG :	224:1:4966:4985	3566495	10	True				
ANR	3566537	Identifier	R_BIN_NM_DLANG		3566495	0					
ANR	3566538	ReturnStatement	"return ""d"" ;"	225:2:4989:4999	3566495	11	True				
ANR	3566539	PrimaryExpression	"""d"""		3566495	0					
ANR	3566540	Label	case R_BIN_NM_OBJC :	226:1:5002:5020	3566495	12	True				
ANR	3566541	Identifier	R_BIN_NM_OBJC		3566495	0					
ANR	3566542	ReturnStatement	"return ( lang & R_BIN_NM_BLOCKS ) ? ""objc with blocks"" : ""objc"" ;"	227:2:5024:5083	3566495	13	True				
ANR	3566543	ConditionalExpression	"( lang & R_BIN_NM_BLOCKS ) ? ""objc with blocks"" : ""objc"""		3566495	0					
ANR	3566544	Condition	lang & R_BIN_NM_BLOCKS		3566495	0					
ANR	3566545	BitAndExpression	lang & R_BIN_NM_BLOCKS		3566495	0		&			
ANR	3566546	Identifier	lang		3566495	0					
ANR	3566547	Identifier	R_BIN_NM_BLOCKS		3566495	1					
ANR	3566548	PrimaryExpression	"""objc with blocks"""		3566495	1					
ANR	3566549	PrimaryExpression	"""objc"""		3566495	2					
ANR	3566550	Label	case R_BIN_NM_MSVC :	228:1:5086:5104	3566495	14	True				
ANR	3566551	Identifier	R_BIN_NM_MSVC		3566495	0					
ANR	3566552	ReturnStatement	"return ""msvc"" ;"	229:2:5108:5121	3566495	15	True				
ANR	3566553	PrimaryExpression	"""msvc"""		3566495	0					
ANR	3566554	Label	case R_BIN_NM_RUST :	230:1:5124:5142	3566495	16	True				
ANR	3566555	Identifier	R_BIN_NM_RUST		3566495	0					
ANR	3566556	ReturnStatement	"return ""rust"" ;"	231:2:5146:5159	3566495	17	True				
ANR	3566557	PrimaryExpression	"""rust"""		3566495	0					
ANR	3566558	ReturnStatement	return NULL ;	233:1:5165:5176	3566495	1	True				
ANR	3566559	Identifier	NULL		3566495	0					
ANR	3566560	ReturnType	const char *		3566495	1					
ANR	3566561	Identifier	r_bin_lang_tostring		3566495	2					
ANR	3566562	ParameterList	int lang		3566495	3					
ANR	3566563	Parameter	int lang	212:38:4651:4658	3566495	0	True				
ANR	3566564	ParameterType	int		3566495	0					
ANR	3566565	Identifier	lang		3566495	1					
ANR	3566566	CFGEntryNode	ENTRY		3566495		True				
ANR	3566567	CFGExitNode	EXIT		3566495		True				
ANR	3566568	Symbol	NULL		3566495						
ANR	3566569	Symbol	lang		3566495						
ANR	3566570	Symbol	R_BIN_NM_BLOCKS		3566495						
