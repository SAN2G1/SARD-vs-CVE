command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	5542890	File	data/converged/CVE-2019-16718~_radare2/parse_m68k_pseudo.c								
ANR	5542891	Function	can_replace	13:0:209:519							
ANR	5542892	FunctionDef	"can_replace (const char * str , int idx , int max_operands)"		5542891	0					
ANR	5542893	CompoundStatement		13:68:277:519	5542891	0					
ANR	5542894	IfStatement	if ( str [ idx ] > '9' || str [ idx ] < '1' )		5542891	0					
ANR	5542895	Condition	str [ idx ] > '9' || str [ idx ] < '1'	14:5:284:315	5542891	0	True				
ANR	5542896	OrExpression	str [ idx ] > '9' || str [ idx ] < '1'		5542891	0		||			
ANR	5542897	RelationalExpression	str [ idx ] > '9'		5542891	0		>			
ANR	5542898	ArrayIndexing	str [ idx ]		5542891	0					
ANR	5542899	Identifier	str		5542891	0					
ANR	5542900	Identifier	idx		5542891	1					
ANR	5542901	PrimaryExpression	'9'		5542891	1					
ANR	5542902	RelationalExpression	str [ idx ] < '1'		5542891	1		<			
ANR	5542903	ArrayIndexing	str [ idx ]		5542891	0					
ANR	5542904	Identifier	str		5542891	0					
ANR	5542905	Identifier	idx		5542891	1					
ANR	5542906	PrimaryExpression	'1'		5542891	1					
ANR	5542907	CompoundStatement		2:39:40:40	5542891	1					
ANR	5542908	ReturnStatement	return false ;	15:2:322:334	5542891	0	True				
ANR	5542909	Identifier	false		5542891	0					
ANR	5542910	IfStatement	if ( str [ idx + 1 ] != x00 && str [ idx + 1 ] <= '9' && str [ idx + 1 ] >= '1' )		5542891	1					
ANR	5542911	Condition	str [ idx + 1 ] != x00 && str [ idx + 1 ] <= '9' && str [ idx + 1 ] >= '1'	17:5:344:411	5542891	0	True				
ANR	5542912	AndExpression	str [ idx + 1 ] != x00 && str [ idx + 1 ] <= '9' && str [ idx + 1 ] >= '1'		5542891	0		&&			
ANR	5542913	EqualityExpression	str [ idx + 1 ] != x00		5542891	0		!=			
ANR	5542914	ArrayIndexing	str [ idx + 1 ]		5542891	0					
ANR	5542915	Identifier	str		5542891	0					
ANR	5542916	AdditiveExpression	idx + 1		5542891	1		+			
ANR	5542917	Identifier	idx		5542891	0					
ANR	5542918	PrimaryExpression	1		5542891	1					
ANR	5542919	Identifier	x00		5542891	1					
ANR	5542920	AndExpression	str [ idx + 1 ] <= '9' && str [ idx + 1 ] >= '1'		5542891	1		&&			
ANR	5542921	RelationalExpression	str [ idx + 1 ] <= '9'		5542891	0		<=			
ANR	5542922	ArrayIndexing	str [ idx + 1 ]		5542891	0					
ANR	5542923	Identifier	str		5542891	0					
ANR	5542924	AdditiveExpression	idx + 1		5542891	1		+			
ANR	5542925	Identifier	idx		5542891	0					
ANR	5542926	PrimaryExpression	1		5542891	1					
ANR	5542927	PrimaryExpression	'9'		5542891	1					
ANR	5542928	RelationalExpression	str [ idx + 1 ] >= '1'		5542891	1		>=			
ANR	5542929	ArrayIndexing	str [ idx + 1 ]		5542891	0					
ANR	5542930	Identifier	str		5542891	0					
ANR	5542931	AdditiveExpression	idx + 1		5542891	1		+			
ANR	5542932	Identifier	idx		5542891	0					
ANR	5542933	PrimaryExpression	1		5542891	1					
ANR	5542934	PrimaryExpression	'1'		5542891	1					
ANR	5542935	CompoundStatement		5:75:136:136	5542891	1					
ANR	5542936	ReturnStatement	return false ;	18:2:418:430	5542891	0	True				
ANR	5542937	Identifier	false		5542891	0					
ANR	5542938	IfStatement	if ( ( int ) ( ( int ) str [ idx ] - 0x30 ) > max_operands )		5542891	2					
ANR	5542939	Condition	( int ) ( ( int ) str [ idx ] - 0x30 ) > max_operands	20:5:440:481	5542891	0	True				
ANR	5542940	RelationalExpression	( int ) ( ( int ) str [ idx ] - 0x30 ) > max_operands		5542891	0		>			
ANR	5542941	CastExpression	( int ) ( ( int ) str [ idx ] - 0x30 )		5542891	0					
ANR	5542942	CastTarget	int		5542891	0					
ANR	5542943	AdditiveExpression	( int ) str [ idx ] - 0x30		5542891	1		-			
ANR	5542944	CastExpression	( int ) str [ idx ]		5542891	0					
ANR	5542945	CastTarget	int		5542891	0					
ANR	5542946	ArrayIndexing	str [ idx ]		5542891	1					
ANR	5542947	Identifier	str		5542891	0					
ANR	5542948	Identifier	idx		5542891	1					
ANR	5542949	PrimaryExpression	0x30		5542891	1					
ANR	5542950	Identifier	max_operands		5542891	1					
ANR	5542951	CompoundStatement		8:49:206:206	5542891	1					
ANR	5542952	ReturnStatement	return false ;	21:2:488:500	5542891	0	True				
ANR	5542953	Identifier	false		5542891	0					
ANR	5542954	ReturnStatement	return true ;	23:1:506:517	5542891	3	True				
ANR	5542955	Identifier	true		5542891	0					
ANR	5542956	ReturnType	static bool		5542891	1					
ANR	5542957	Identifier	can_replace		5542891	2					
ANR	5542958	ParameterList	"const char * str , int idx , int max_operands"		5542891	3					
ANR	5542959	Parameter	const char * str	13:24:233:247	5542891	0	True				
ANR	5542960	ParameterType	const char *		5542891	0					
ANR	5542961	Identifier	str		5542891	1					
ANR	5542962	Parameter	int idx	13:41:250:256	5542891	1	True				
ANR	5542963	ParameterType	int		5542891	0					
ANR	5542964	Identifier	idx		5542891	1					
ANR	5542965	Parameter	int max_operands	13:50:259:274	5542891	2	True				
ANR	5542966	ParameterType	int		5542891	0					
ANR	5542967	Identifier	max_operands		5542891	1					
ANR	5542968	CFGEntryNode	ENTRY		5542891		True				
ANR	5542969	CFGExitNode	EXIT		5542891		True				
ANR	5542970	Symbol	str		5542891						
ANR	5542971	Symbol	max_operands		5542891						
ANR	5542972	Symbol	* idx		5542891						
ANR	5542973	Symbol	false		5542891						
ANR	5542974	Symbol	true		5542891						
ANR	5542975	Symbol	x00		5542891						
ANR	5542976	Symbol	* str		5542891						
ANR	5542977	Symbol	idx		5542891						
ANR	5542978	Function	replace	26:0:522:2206							
ANR	5542979	FunctionDef	"replace (int argc , const char * argv [ ] , char * newstr)"		5542978	0					
ANR	5542980	CompoundStatement		26:63:585:2206	5542978	0					
ANR	5542981	IdentifierDeclStatement	"int i , j , k ;"	27:1:588:597	5542978	0	True				
ANR	5542982	IdentifierDecl	i		5542978	0					
ANR	5542983	IdentifierDeclType	int		5542978	0					
ANR	5542984	Identifier	i		5542978	1					
ANR	5542985	IdentifierDecl	j		5542978	1					
ANR	5542986	IdentifierDeclType	int		5542978	0					
ANR	5542987	Identifier	j		5542978	1					
ANR	5542988	IdentifierDecl	k		5542978	2					
ANR	5542989	IdentifierDeclType	int		5542978	0					
ANR	5542990	Identifier	k		5542978	1					
ANR	5542991	ClassDefStatement	"struct { char * op ; char * str ; int max_operands ; } ops [ ] = { { ""move"" , ""2 = 1"" , 2 } , { ""movea"" , ""2 = 1"" , 2 } , { ""moveq"" , ""2 = 1"" , 2 } , { ""movem"" , ""2 = 1"" , 2 } , { ""lea"" , ""2 = 1"" , 2 } , { ""bsr"" , ""1()"" , 1 } , { ""jsr"" , ""1()"" , 1 } , { ""beq"" , ""if (==) jmp 1"" , 1 } , { ""blt"" , ""if (<) jmp 1"" , 1 } , { ""ble"" , ""if (<=) jmp 1"" , 1 } , { ""bgt"" , ""if (>) jmp 1"" , 1 } , { ""bge"" , ""if (>=) jmp 1"" , 1 } , { ""bcs"" , ""if (cs) jmp 1"" , 1 } , { ""bcc"" , ""if (cc) jmp 1"" , 1 } , { ""bra"" , ""jmp 1"" , 1 } , { ""jmp"" , ""jmp 1"" , 1 } , { ""rts"" , ""ret"" , 2 } , { ""btst"" , ""1 == 2"" , 2 } , { ""cmp"" , ""1 == 2"" , 2 } , { ""cmpi"" , ""2 == 1"" , 2 } , { ""add"" , ""1 += 2"" , 2 } , { ""addi"" , ""1 += 2"" , 2 } , { ""adda"" , ""1 += 2"" , 2 } , { ""sub"" , ""1 += 2"" , 2 } , { ""subq"" , ""1 += 2"" , 2 } , { ""tst"" , ""1 == 2"" , 2 } , { ""ori"" , ""2 |= 1"" , 2 } , { ""or"" , ""2 |= 1"" , 2 } , { ""lsr"" , ""2 >>= 1"" , 2 } , { ""lsl"" , ""2 <<= 1"" , 2 } , { ""andi"" , ""2 &= 1"" , 2 } , { ""nop"" , """" } , { NULL } } ;"	28:1:600:1551	5542978	1	True				
ANR	5542992	IdentifierDecl	"ops [ ] = { { ""move"" , ""2 = 1"" , 2 } , { ""movea"" , ""2 = 1"" , 2 } , { ""moveq"" , ""2 = 1"" , 2 } , { ""movem"" , ""2 = 1"" , 2 } , { ""lea"" , ""2 = 1"" , 2 } , { ""bsr"" , ""1()"" , 1 } , { ""jsr"" , ""1()"" , 1 } , { ""beq"" , ""if (==) jmp 1"" , 1 } , { ""blt"" , ""if (<) jmp 1"" , 1 } , { ""ble"" , ""if (<=) jmp 1"" , 1 } , { ""bgt"" , ""if (>) jmp 1"" , 1 } , { ""bge"" , ""if (>=) jmp 1"" , 1 } , { ""bcs"" , ""if (cs) jmp 1"" , 1 } , { ""bcc"" , ""if (cc) jmp 1"" , 1 } , { ""bra"" , ""jmp 1"" , 1 } , { ""jmp"" , ""jmp 1"" , 1 } , { ""rts"" , ""ret"" , 2 } , { ""btst"" , ""1 == 2"" , 2 } , { ""cmp"" , ""1 == 2"" , 2 } , { ""cmpi"" , ""2 == 1"" , 2 } , { ""add"" , ""1 += 2"" , 2 } , { ""addi"" , ""1 += 2"" , 2 } , { ""adda"" , ""1 += 2"" , 2 } , { ""sub"" , ""1 += 2"" , 2 } , { ""subq"" , ""1 += 2"" , 2 } , { ""tst"" , ""1 == 2"" , 2 } , { ""ori"" , ""2 |= 1"" , 2 } , { ""or"" , ""2 |= 1"" , 2 } , { ""lsr"" , ""2 >>= 1"" , 2 } , { ""lsl"" , ""2 <<= 1"" , 2 } , { ""andi"" , ""2 &= 1"" , 2 } , { ""nop"" , """" } , { NULL } }"		5542978	0					
ANR	5542993	IdentifierDeclType	 [ ]		5542978	0					
ANR	5542994	Identifier	ops		5542978	1					
ANR	5542995	AssignmentExpression	"ops [ ] = { { ""move"" , ""2 = 1"" , 2 } , { ""movea"" , ""2 = 1"" , 2 } , { ""moveq"" , ""2 = 1"" , 2 } , { ""movem"" , ""2 = 1"" , 2 } , { ""lea"" , ""2 = 1"" , 2 } , { ""bsr"" , ""1()"" , 1 } , { ""jsr"" , ""1()"" , 1 } , { ""beq"" , ""if (==) jmp 1"" , 1 } , { ""blt"" , ""if (<) jmp 1"" , 1 } , { ""ble"" , ""if (<=) jmp 1"" , 1 } , { ""bgt"" , ""if (>) jmp 1"" , 1 } , { ""bge"" , ""if (>=) jmp 1"" , 1 } , { ""bcs"" , ""if (cs) jmp 1"" , 1 } , { ""bcc"" , ""if (cc) jmp 1"" , 1 } , { ""bra"" , ""jmp 1"" , 1 } , { ""jmp"" , ""jmp 1"" , 1 } , { ""rts"" , ""ret"" , 2 } , { ""btst"" , ""1 == 2"" , 2 } , { ""cmp"" , ""1 == 2"" , 2 } , { ""cmpi"" , ""2 == 1"" , 2 } , { ""add"" , ""1 += 2"" , 2 } , { ""addi"" , ""1 += 2"" , 2 } , { ""adda"" , ""1 += 2"" , 2 } , { ""sub"" , ""1 += 2"" , 2 } , { ""subq"" , ""1 += 2"" , 2 } , { ""tst"" , ""1 == 2"" , 2 } , { ""ori"" , ""2 |= 1"" , 2 } , { ""or"" , ""2 |= 1"" , 2 } , { ""lsr"" , ""2 >>= 1"" , 2 } , { ""lsl"" , ""2 <<= 1"" , 2 } , { ""andi"" , ""2 &= 1"" , 2 } , { ""nop"" , """" } , { NULL } }"		5542978	2		=			
ANR	5542996	Identifier	ops		5542978	0					
ANR	5542997	InitializerList	"""move"""		5542978	1					
ANR	5542998	InitializerList	"""move"""		5542978	0					
ANR	5542999	PrimaryExpression	"""move"""		5542978	0					
ANR	5543000	PrimaryExpression	"""2 = 1"""		5542978	1					
ANR	5543001	PrimaryExpression	2		5542978	2					
ANR	5543002	InitializerList	"""movea"""		5542978	1					
ANR	5543003	PrimaryExpression	"""movea"""		5542978	0					
ANR	5543004	PrimaryExpression	"""2 = 1"""		5542978	1					
ANR	5543005	PrimaryExpression	2		5542978	2					
ANR	5543006	InitializerList	"""moveq"""		5542978	2					
ANR	5543007	PrimaryExpression	"""moveq"""		5542978	0					
ANR	5543008	PrimaryExpression	"""2 = 1"""		5542978	1					
ANR	5543009	PrimaryExpression	2		5542978	2					
ANR	5543010	InitializerList	"""movem"""		5542978	3					
ANR	5543011	PrimaryExpression	"""movem"""		5542978	0					
ANR	5543012	PrimaryExpression	"""2 = 1"""		5542978	1					
ANR	5543013	PrimaryExpression	2		5542978	2					
ANR	5543014	InitializerList	"""lea"""		5542978	4					
ANR	5543015	PrimaryExpression	"""lea"""		5542978	0					
ANR	5543016	PrimaryExpression	"""2 = 1"""		5542978	1					
ANR	5543017	PrimaryExpression	2		5542978	2					
ANR	5543018	InitializerList	"""bsr"""		5542978	5					
ANR	5543019	PrimaryExpression	"""bsr"""		5542978	0					
ANR	5543020	PrimaryExpression	"""1()"""		5542978	1					
ANR	5543021	PrimaryExpression	1		5542978	2					
ANR	5543022	InitializerList	"""jsr"""		5542978	6					
ANR	5543023	PrimaryExpression	"""jsr"""		5542978	0					
ANR	5543024	PrimaryExpression	"""1()"""		5542978	1					
ANR	5543025	PrimaryExpression	1		5542978	2					
ANR	5543026	InitializerList	"""beq"""		5542978	7					
ANR	5543027	PrimaryExpression	"""beq"""		5542978	0					
ANR	5543028	PrimaryExpression	"""if (==) jmp 1"""		5542978	1					
ANR	5543029	PrimaryExpression	1		5542978	2					
ANR	5543030	InitializerList	"""blt"""		5542978	8					
ANR	5543031	PrimaryExpression	"""blt"""		5542978	0					
ANR	5543032	PrimaryExpression	"""if (<) jmp 1"""		5542978	1					
ANR	5543033	PrimaryExpression	1		5542978	2					
ANR	5543034	InitializerList	"""ble"""		5542978	9					
ANR	5543035	PrimaryExpression	"""ble"""		5542978	0					
ANR	5543036	PrimaryExpression	"""if (<=) jmp 1"""		5542978	1					
ANR	5543037	PrimaryExpression	1		5542978	2					
ANR	5543038	InitializerList	"""bgt"""		5542978	10					
ANR	5543039	PrimaryExpression	"""bgt"""		5542978	0					
ANR	5543040	PrimaryExpression	"""if (>) jmp 1"""		5542978	1					
ANR	5543041	PrimaryExpression	1		5542978	2					
ANR	5543042	InitializerList	"""bge"""		5542978	11					
ANR	5543043	PrimaryExpression	"""bge"""		5542978	0					
ANR	5543044	PrimaryExpression	"""if (>=) jmp 1"""		5542978	1					
ANR	5543045	PrimaryExpression	1		5542978	2					
ANR	5543046	InitializerList	"""bcs"""		5542978	12					
ANR	5543047	PrimaryExpression	"""bcs"""		5542978	0					
ANR	5543048	PrimaryExpression	"""if (cs) jmp 1"""		5542978	1					
ANR	5543049	PrimaryExpression	1		5542978	2					
ANR	5543050	InitializerList	"""bcc"""		5542978	13					
ANR	5543051	PrimaryExpression	"""bcc"""		5542978	0					
ANR	5543052	PrimaryExpression	"""if (cc) jmp 1"""		5542978	1					
ANR	5543053	PrimaryExpression	1		5542978	2					
ANR	5543054	InitializerList	"""bra"""		5542978	14					
ANR	5543055	PrimaryExpression	"""bra"""		5542978	0					
ANR	5543056	PrimaryExpression	"""jmp 1"""		5542978	1					
ANR	5543057	PrimaryExpression	1		5542978	2					
ANR	5543058	InitializerList	"""jmp"""		5542978	15					
ANR	5543059	PrimaryExpression	"""jmp"""		5542978	0					
ANR	5543060	PrimaryExpression	"""jmp 1"""		5542978	1					
ANR	5543061	PrimaryExpression	1		5542978	2					
ANR	5543062	InitializerList	"""rts"""		5542978	16					
ANR	5543063	PrimaryExpression	"""rts"""		5542978	0					
ANR	5543064	PrimaryExpression	"""ret"""		5542978	1					
ANR	5543065	PrimaryExpression	2		5542978	2					
ANR	5543066	InitializerList	"""btst"""		5542978	17					
ANR	5543067	PrimaryExpression	"""btst"""		5542978	0					
ANR	5543068	PrimaryExpression	"""1 == 2"""		5542978	1					
ANR	5543069	PrimaryExpression	2		5542978	2					
ANR	5543070	InitializerList	"""cmp"""		5542978	18					
ANR	5543071	PrimaryExpression	"""cmp"""		5542978	0					
ANR	5543072	PrimaryExpression	"""1 == 2"""		5542978	1					
ANR	5543073	PrimaryExpression	2		5542978	2					
ANR	5543074	InitializerList	"""cmpi"""		5542978	19					
ANR	5543075	PrimaryExpression	"""cmpi"""		5542978	0					
ANR	5543076	PrimaryExpression	"""2 == 1"""		5542978	1					
ANR	5543077	PrimaryExpression	2		5542978	2					
ANR	5543078	InitializerList	"""add"""		5542978	20					
ANR	5543079	PrimaryExpression	"""add"""		5542978	0					
ANR	5543080	PrimaryExpression	"""1 += 2"""		5542978	1					
ANR	5543081	PrimaryExpression	2		5542978	2					
ANR	5543082	InitializerList	"""addi"""		5542978	21					
ANR	5543083	PrimaryExpression	"""addi"""		5542978	0					
ANR	5543084	PrimaryExpression	"""1 += 2"""		5542978	1					
ANR	5543085	PrimaryExpression	2		5542978	2					
ANR	5543086	InitializerList	"""adda"""		5542978	22					
ANR	5543087	PrimaryExpression	"""adda"""		5542978	0					
ANR	5543088	PrimaryExpression	"""1 += 2"""		5542978	1					
ANR	5543089	PrimaryExpression	2		5542978	2					
ANR	5543090	InitializerList	"""sub"""		5542978	23					
ANR	5543091	PrimaryExpression	"""sub"""		5542978	0					
ANR	5543092	PrimaryExpression	"""1 += 2"""		5542978	1					
ANR	5543093	PrimaryExpression	2		5542978	2					
ANR	5543094	InitializerList	"""subq"""		5542978	24					
ANR	5543095	PrimaryExpression	"""subq"""		5542978	0					
ANR	5543096	PrimaryExpression	"""1 += 2"""		5542978	1					
ANR	5543097	PrimaryExpression	2		5542978	2					
ANR	5543098	InitializerList	"""tst"""		5542978	25					
ANR	5543099	PrimaryExpression	"""tst"""		5542978	0					
ANR	5543100	PrimaryExpression	"""1 == 2"""		5542978	1					
ANR	5543101	PrimaryExpression	2		5542978	2					
ANR	5543102	InitializerList	"""ori"""		5542978	26					
ANR	5543103	PrimaryExpression	"""ori"""		5542978	0					
ANR	5543104	PrimaryExpression	"""2 |= 1"""		5542978	1					
ANR	5543105	PrimaryExpression	2		5542978	2					
ANR	5543106	InitializerList	"""or"""		5542978	27					
ANR	5543107	PrimaryExpression	"""or"""		5542978	0					
ANR	5543108	PrimaryExpression	"""2 |= 1"""		5542978	1					
ANR	5543109	PrimaryExpression	2		5542978	2					
ANR	5543110	InitializerList	"""lsr"""		5542978	28					
ANR	5543111	PrimaryExpression	"""lsr"""		5542978	0					
ANR	5543112	PrimaryExpression	"""2 >>= 1"""		5542978	1					
ANR	5543113	PrimaryExpression	2		5542978	2					
ANR	5543114	InitializerList	"""lsl"""		5542978	29					
ANR	5543115	PrimaryExpression	"""lsl"""		5542978	0					
ANR	5543116	PrimaryExpression	"""2 <<= 1"""		5542978	1					
ANR	5543117	PrimaryExpression	2		5542978	2					
ANR	5543118	InitializerList	"""andi"""		5542978	30					
ANR	5543119	PrimaryExpression	"""andi"""		5542978	0					
ANR	5543120	PrimaryExpression	"""2 &= 1"""		5542978	1					
ANR	5543121	PrimaryExpression	2		5542978	2					
ANR	5543122	InitializerList	"""nop"""		5542978	31					
ANR	5543123	PrimaryExpression	"""nop"""		5542978	0					
ANR	5543124	PrimaryExpression	""""""		5542978	1					
ANR	5543125	InitializerList	NULL		5542978	32					
ANR	5543126	Identifier	NULL		5542978	0					
ANR	5543127	ForStatement	for ( i = 0 ; ops [ i ] . op != NULL ; i ++ )		5542978	2					
ANR	5543128	ForInit	i = 0 ;	69:6:1560:1563	5542978	0	True				
ANR	5543129	AssignmentExpression	i = 0		5542978	0		=			
ANR	5543130	Identifier	i		5542978	0					
ANR	5543131	PrimaryExpression	0		5542978	1					
ANR	5543132	Condition	ops [ i ] . op != NULL	69:11:1565:1581	5542978	1	True				
ANR	5543133	EqualityExpression	ops [ i ] . op != NULL		5542978	0		!=			
ANR	5543134	MemberAccess	ops [ i ] . op		5542978	0					
ANR	5543135	ArrayIndexing	ops [ i ]		5542978	0					
ANR	5543136	Identifier	ops		5542978	0					
ANR	5543137	Identifier	i		5542978	1					
ANR	5543138	Identifier	op		5542978	1					
ANR	5543139	Identifier	NULL		5542978	1					
ANR	5543140	PostIncDecOperationExpression	i ++	69:30:1584:1586	5542978	2	True				
ANR	5543141	Identifier	i		5542978	0					
ANR	5543142	IncDec	++		5542978	1					
ANR	5543143	CompoundStatement		44:35:1003:1003	5542978	3					
ANR	5543144	IfStatement	"if ( ! strcmp ( ops [ i ] . op , argv [ 0 ] ) )"		5542978	0					
ANR	5543145	Condition	"! strcmp ( ops [ i ] . op , argv [ 0 ] )"	70:6:1597:1624	5542978	0	True				
ANR	5543146	UnaryOperationExpression	"! strcmp ( ops [ i ] . op , argv [ 0 ] )"		5542978	0					
ANR	5543147	UnaryOperator	!		5542978	0					
ANR	5543148	CallExpression	"strcmp ( ops [ i ] . op , argv [ 0 ] )"		5542978	1					
ANR	5543149	Callee	strcmp		5542978	0					
ANR	5543150	Identifier	strcmp		5542978	0					
ANR	5543151	ArgumentList	ops [ i ] . op		5542978	1					
ANR	5543152	Argument	ops [ i ] . op		5542978	0					
ANR	5543153	MemberAccess	ops [ i ] . op		5542978	0					
ANR	5543154	ArrayIndexing	ops [ i ]		5542978	0					
ANR	5543155	Identifier	ops		5542978	0					
ANR	5543156	Identifier	i		5542978	1					
ANR	5543157	Identifier	op		5542978	1					
ANR	5543158	Argument	argv [ 0 ]		5542978	1					
ANR	5543159	ArrayIndexing	argv [ 0 ]		5542978	0					
ANR	5543160	Identifier	argv		5542978	0					
ANR	5543161	PrimaryExpression	0		5542978	1					
ANR	5543162	CompoundStatement		45:36:1041:1041	5542978	1					
ANR	5543163	IfStatement	if ( newstr != NULL )		5542978	0					
ANR	5543164	Condition	newstr != NULL	71:7:1636:1649	5542978	0	True				
ANR	5543165	EqualityExpression	newstr != NULL		5542978	0		!=			
ANR	5543166	Identifier	newstr		5542978	0					
ANR	5543167	Identifier	NULL		5542978	1					
ANR	5543168	CompoundStatement		46:23:1066:1066	5542978	1					
ANR	5543169	ForStatement	"for ( j = k = 0 ; ops [ i ] . str [ j ] != '\\0' ; j ++ , k ++ )"		5542978	0					
ANR	5543170	ForInit	j = k = 0 ;	72:9:1663:1668	5542978	0	True				
ANR	5543171	AssignmentExpression	j = k = 0		5542978	0		=			
ANR	5543172	Identifier	j		5542978	0					
ANR	5543173	AssignmentExpression	k = 0		5542978	1		=			
ANR	5543174	Identifier	k		5542978	0					
ANR	5543175	PrimaryExpression	0		5542978	1					
ANR	5543176	Condition	ops [ i ] . str [ j ] != '\\0'	72:15:1669:1687	5542978	1	True				
ANR	5543177	EqualityExpression	ops [ i ] . str [ j ] != '\\0'		5542978	0		!=			
ANR	5543178	ArrayIndexing	ops [ i ] . str [ j ]		5542978	0					
ANR	5543179	MemberAccess	ops [ i ] . str		5542978	0					
ANR	5543180	ArrayIndexing	ops [ i ]		5542978	0					
ANR	5543181	Identifier	ops		5542978	0					
ANR	5543182	Identifier	i		5542978	1					
ANR	5543183	Identifier	str		5542978	1					
ANR	5543184	Identifier	j		5542978	1					
ANR	5543185	PrimaryExpression	'\\0'		5542978	1					
ANR	5543186	Expression	"j ++ , k ++"	72:35:1689:1695	5542978	2	True				
ANR	5543187	PostIncDecOperationExpression	j ++		5542978	0					
ANR	5543188	Identifier	j		5542978	0					
ANR	5543189	IncDec	++		5542978	1					
ANR	5543190	PostIncDecOperationExpression	k ++		5542978	1					
ANR	5543191	Identifier	k		5542978	0					
ANR	5543192	IncDec	++		5542978	1					
ANR	5543193	CompoundStatement		47:44:1112:1112	5542978	3					
ANR	5543194	IfStatement	"if ( can_replace ( ops [ i ] . str , j , ops [ i ] . max_operands ) )"		5542978	0					
ANR	5543195	Condition	"can_replace ( ops [ i ] . str , j , ops [ i ] . max_operands )"	73:9:1709:1755	5542978	0	True				
ANR	5543196	CallExpression	"can_replace ( ops [ i ] . str , j , ops [ i ] . max_operands )"		5542978	0					
ANR	5543197	Callee	can_replace		5542978	0					
ANR	5543198	Identifier	can_replace		5542978	0					
ANR	5543199	ArgumentList	ops [ i ] . str		5542978	1					
ANR	5543200	Argument	ops [ i ] . str		5542978	0					
ANR	5543201	MemberAccess	ops [ i ] . str		5542978	0					
ANR	5543202	ArrayIndexing	ops [ i ]		5542978	0					
ANR	5543203	Identifier	ops		5542978	0					
ANR	5543204	Identifier	i		5542978	1					
ANR	5543205	Identifier	str		5542978	1					
ANR	5543206	Argument	j		5542978	1					
ANR	5543207	Identifier	j		5542978	0					
ANR	5543208	Argument	ops [ i ] . max_operands		5542978	2					
ANR	5543209	MemberAccess	ops [ i ] . max_operands		5542978	0					
ANR	5543210	ArrayIndexing	ops [ i ]		5542978	0					
ANR	5543211	Identifier	ops		5542978	0					
ANR	5543212	Identifier	i		5542978	1					
ANR	5543213	Identifier	max_operands		5542978	1					
ANR	5543214	CompoundStatement		49:6:1180:1221	5542978	1					
ANR	5543215	IdentifierDeclStatement	const char * w = argv [ ops [ i ] . str [ j ] - '0' ] ;	74:6:1766:1807	5542978	0	True				
ANR	5543216	IdentifierDecl	* w = argv [ ops [ i ] . str [ j ] - '0' ]		5542978	0					
ANR	5543217	IdentifierDeclType	const char *		5542978	0					
ANR	5543218	Identifier	w		5542978	1					
ANR	5543219	AssignmentExpression	* w = argv [ ops [ i ] . str [ j ] - '0' ]		5542978	2		=			
ANR	5543220	Identifier	w		5542978	0					
ANR	5543221	ArrayIndexing	argv [ ops [ i ] . str [ j ] - '0' ]		5542978	1					
ANR	5543222	Identifier	argv		5542978	0					
ANR	5543223	AdditiveExpression	ops [ i ] . str [ j ] - '0'		5542978	1		-			
ANR	5543224	ArrayIndexing	ops [ i ] . str [ j ]		5542978	0					
ANR	5543225	MemberAccess	ops [ i ] . str		5542978	0					
ANR	5543226	ArrayIndexing	ops [ i ]		5542978	0					
ANR	5543227	Identifier	ops		5542978	0					
ANR	5543228	Identifier	i		5542978	1					
ANR	5543229	Identifier	str		5542978	1					
ANR	5543230	Identifier	j		5542978	1					
ANR	5543231	PrimaryExpression	'0'		5542978	1					
ANR	5543232	IfStatement	if ( w != NULL )		5542978	1					
ANR	5543233	Condition	w != NULL	75:10:1819:1827	5542978	0	True				
ANR	5543234	EqualityExpression	w != NULL		5542978	0		!=			
ANR	5543235	Identifier	w		5542978	0					
ANR	5543236	Identifier	NULL		5542978	1					
ANR	5543237	CompoundStatement		50:21:1244:1244	5542978	1					
ANR	5543238	ExpressionStatement	"strcpy ( newstr + k , w )"	76:7:1839:1859	5542978	0	True				
ANR	5543239	CallExpression	"strcpy ( newstr + k , w )"		5542978	0					
ANR	5543240	Callee	strcpy		5542978	0					
ANR	5543241	Identifier	strcpy		5542978	0					
ANR	5543242	ArgumentList	newstr + k		5542978	1					
ANR	5543243	Argument	newstr + k		5542978	0					
ANR	5543244	AdditiveExpression	newstr + k		5542978	0		+			
ANR	5543245	Identifier	newstr		5542978	0					
ANR	5543246	Identifier	k		5542978	1					
ANR	5543247	Argument	w		5542978	1					
ANR	5543248	Identifier	w		5542978	0					
ANR	5543249	ExpressionStatement	k += strlen ( w ) - 1	77:7:1868:1884	5542978	1	True				
ANR	5543250	AssignmentExpression	k += strlen ( w ) - 1		5542978	0		+=			
ANR	5543251	Identifier	k		5542978	0					
ANR	5543252	AdditiveExpression	strlen ( w ) - 1		5542978	1		-			
ANR	5543253	CallExpression	strlen ( w )		5542978	0					
ANR	5543254	Callee	strlen		5542978	0					
ANR	5543255	Identifier	strlen		5542978	0					
ANR	5543256	ArgumentList	w		5542978	1					
ANR	5543257	Argument	w		5542978	0					
ANR	5543258	Identifier	w		5542978	0					
ANR	5543259	PrimaryExpression	1		5542978	1					
ANR	5543260	ElseStatement	else		5542978	0					
ANR	5543261	CompoundStatement		54:12:1320:1320	5542978	0					
ANR	5543262	ExpressionStatement	newstr [ k ] = ops [ i ] . str [ j ]	80:6:1914:1939	5542978	0	True				
ANR	5543263	AssignmentExpression	newstr [ k ] = ops [ i ] . str [ j ]		5542978	0		=			
ANR	5543264	ArrayIndexing	newstr [ k ]		5542978	0					
ANR	5543265	Identifier	newstr		5542978	0					
ANR	5543266	Identifier	k		5542978	1					
ANR	5543267	ArrayIndexing	ops [ i ] . str [ j ]		5542978	1					
ANR	5543268	MemberAccess	ops [ i ] . str		5542978	0					
ANR	5543269	ArrayIndexing	ops [ i ]		5542978	0					
ANR	5543270	Identifier	ops		5542978	0					
ANR	5543271	Identifier	i		5542978	1					
ANR	5543272	Identifier	str		5542978	1					
ANR	5543273	Identifier	j		5542978	1					
ANR	5543274	ExpressionStatement	newstr [ k ] = '\\0'	83:4:1958:1972	5542978	1	True				
ANR	5543275	AssignmentExpression	newstr [ k ] = '\\0'		5542978	0		=			
ANR	5543276	ArrayIndexing	newstr [ k ]		5542978	0					
ANR	5543277	Identifier	newstr		5542978	0					
ANR	5543278	Identifier	k		5542978	1					
ANR	5543279	PrimaryExpression	'\\0'		5542978	1					
ANR	5543280	ReturnStatement	return true ;	85:3:1982:1993	5542978	1	True				
ANR	5543281	Identifier	true		5542978	0					
ANR	5543282	IfStatement	if ( newstr != NULL )		5542978	3					
ANR	5543283	Condition	newstr != NULL	90:5:2034:2047	5542978	0	True				
ANR	5543284	EqualityExpression	newstr != NULL		5542978	0		!=			
ANR	5543285	Identifier	newstr		5542978	0					
ANR	5543286	Identifier	NULL		5542978	1					
ANR	5543287	CompoundStatement		65:21:1464:1464	5542978	1					
ANR	5543288	ExpressionStatement	newstr [ 0 ] = '\\0'	91:2:2054:2070	5542978	0	True				
ANR	5543289	AssignmentExpression	newstr [ 0 ] = '\\0'		5542978	0		=			
ANR	5543290	ArrayIndexing	newstr [ 0 ]		5542978	0					
ANR	5543291	Identifier	newstr		5542978	0					
ANR	5543292	PrimaryExpression	0		5542978	1					
ANR	5543293	PrimaryExpression	'\\0'		5542978	1					
ANR	5543294	ForStatement	for ( i = 0 ; i < argc ; i ++ )		5542978	1					
ANR	5543295	ForInit	i = 0 ;	92:7:2079:2082	5542978	0	True				
ANR	5543296	AssignmentExpression	i = 0		5542978	0		=			
ANR	5543297	Identifier	i		5542978	0					
ANR	5543298	PrimaryExpression	0		5542978	1					
ANR	5543299	Condition	i < argc	92:12:2084:2089	5542978	1	True				
ANR	5543300	RelationalExpression	i < argc		5542978	0		<			
ANR	5543301	Identifier	i		5542978	0					
ANR	5543302	Identifier	argc		5542978	1					
ANR	5543303	PostIncDecOperationExpression	i ++	92:20:2092:2094	5542978	2	True				
ANR	5543304	Identifier	i		5542978	0					
ANR	5543305	IncDec	++		5542978	1					
ANR	5543306	CompoundStatement		67:25:1511:1511	5542978	3					
ANR	5543307	ExpressionStatement	"strcat ( newstr , argv [ i ] )"	93:3:2102:2126	5542978	0	True				
ANR	5543308	CallExpression	"strcat ( newstr , argv [ i ] )"		5542978	0					
ANR	5543309	Callee	strcat		5542978	0					
ANR	5543310	Identifier	strcat		5542978	0					
ANR	5543311	ArgumentList	newstr		5542978	1					
ANR	5543312	Argument	newstr		5542978	0					
ANR	5543313	Identifier	newstr		5542978	0					
ANR	5543314	Argument	argv [ i ]		5542978	1					
ANR	5543315	ArrayIndexing	argv [ i ]		5542978	0					
ANR	5543316	Identifier	argv		5542978	0					
ANR	5543317	Identifier	i		5542978	1					
ANR	5543318	ExpressionStatement	"strcat ( newstr , ( i == 0 || i == argc - 1 ) ? "" "" : "", "" )"	94:3:2131:2181	5542978	1	True				
ANR	5543319	CallExpression	"strcat ( newstr , ( i == 0 || i == argc - 1 ) ? "" "" : "", "" )"		5542978	0					
ANR	5543320	Callee	strcat		5542978	0					
ANR	5543321	Identifier	strcat		5542978	0					
ANR	5543322	ArgumentList	newstr		5542978	1					
ANR	5543323	Argument	newstr		5542978	0					
ANR	5543324	Identifier	newstr		5542978	0					
ANR	5543325	Argument	"( i == 0 || i == argc - 1 ) ? "" "" : "", """		5542978	1					
ANR	5543326	ConditionalExpression	"( i == 0 || i == argc - 1 ) ? "" "" : "", """		5542978	0					
ANR	5543327	Condition	i == 0 || i == argc - 1		5542978	0					
ANR	5543328	OrExpression	i == 0 || i == argc - 1		5542978	0		||			
ANR	5543329	EqualityExpression	i == 0		5542978	0		==			
ANR	5543330	Identifier	i		5542978	0					
ANR	5543331	PrimaryExpression	0		5542978	1					
ANR	5543332	EqualityExpression	i == argc - 1		5542978	1		==			
ANR	5543333	Identifier	i		5542978	0					
ANR	5543334	AdditiveExpression	argc - 1		5542978	1		-			
ANR	5543335	Identifier	argc		5542978	0					
ANR	5543336	PrimaryExpression	1		5542978	1					
ANR	5543337	PrimaryExpression	""" """		5542978	1					
ANR	5543338	PrimaryExpression	""", """		5542978	2					
ANR	5543339	ReturnStatement	return false ;	98:1:2192:2204	5542978	4	True				
ANR	5543340	Identifier	false		5542978	0					
ANR	5543341	ReturnType	static int		5542978	1					
ANR	5543342	Identifier	replace		5542978	2					
ANR	5543343	ParameterList	"int argc , const char * argv [ ] , char * newstr"		5542978	3					
ANR	5543344	Parameter	int argc	26:19:541:548	5542978	0	True				
ANR	5543345	ParameterType	int		5542978	0					
ANR	5543346	Identifier	argc		5542978	1					
ANR	5543347	Parameter	const char * argv [ ]	26:29:551:568	5542978	1	True				
ANR	5543348	ParameterType	const char * [ ]		5542978	0					
ANR	5543349	Identifier	argv		5542978	1					
ANR	5543350	Parameter	char * newstr	26:49:571:582	5542978	2	True				
ANR	5543351	ParameterType	char *		5542978	0					
ANR	5543352	Identifier	newstr		5542978	1					
ANR	5543353	CFGEntryNode	ENTRY		5542978		True				
ANR	5543354	CFGExitNode	EXIT		5542978		True				
ANR	5543355	Symbol	* ops [ i ] . str		5542978						
ANR	5543356	Symbol	* * ops		5542978						
ANR	5543357	Symbol	* argv		5542978						
ANR	5543358	Symbol	argv		5542978						
ANR	5543359	Symbol	ops [ i ] . str		5542978						
ANR	5543360	Symbol	strlen		5542978						
ANR	5543361	Symbol	ops [ i ] . op		5542978						
ANR	5543362	Symbol	* ops		5542978						
ANR	5543363	Symbol	argc		5542978						
ANR	5543364	Symbol	strcmp		5542978						
ANR	5543365	Symbol	* * j		5542978						
ANR	5543366	Symbol	* * i		5542978						
ANR	5543367	Symbol	NULL		5542978						
ANR	5543368	Symbol	ops [ i ] . max_operands		5542978						
ANR	5543369	Symbol	* * ops [ i ] . str		5542978						
ANR	5543370	Symbol	false		5542978						
ANR	5543371	Symbol	i		5542978						
ANR	5543372	Symbol	j		5542978						
ANR	5543373	Symbol	k		5542978						
ANR	5543374	Symbol	newstr		5542978						
ANR	5543375	Symbol	* * * ops		5542978						
ANR	5543376	Symbol	ops		5542978						
ANR	5543377	Symbol	* i		5542978						
ANR	5543378	Symbol	* newstr		5542978						
ANR	5543379	Symbol	* j		5542978						
ANR	5543380	Symbol	* k		5542978						
ANR	5543381	Symbol	w		5542978						
ANR	5543382	Symbol	* * * i		5542978						
ANR	5543383	Symbol	true		5542978						
ANR	5543384	Symbol	can_replace		5542978						
ANR	5543385	Function	parse	102:0:2224:4029							
ANR	5543386	FunctionDef	"parse (RParse * p , const char * data , char * str)"		5543385	0					
ANR	5543387	CompoundStatement		102:57:2281:4029	5543385	0					
ANR	5543388	IdentifierDeclStatement	"int i , len = strlen ( data ) ;"	103:1:2284:2310	5543385	0	True				
ANR	5543389	IdentifierDecl	i		5543385	0					
ANR	5543390	IdentifierDeclType	int		5543385	0					
ANR	5543391	Identifier	i		5543385	1					
ANR	5543392	IdentifierDecl	len = strlen ( data )		5543385	1					
ANR	5543393	IdentifierDeclType	int		5543385	0					
ANR	5543394	Identifier	len		5543385	1					
ANR	5543395	AssignmentExpression	len = strlen ( data )		5543385	2		=			
ANR	5543396	Identifier	len		5543385	0					
ANR	5543397	CallExpression	strlen ( data )		5543385	1					
ANR	5543398	Callee	strlen		5543385	0					
ANR	5543399	Identifier	strlen		5543385	0					
ANR	5543400	ArgumentList	data		5543385	1					
ANR	5543401	Argument	data		5543385	0					
ANR	5543402	Identifier	data		5543385	0					
ANR	5543403	IdentifierDeclStatement	char w0 [ WSZ ] ;	104:1:2313:2325	5543385	1	True				
ANR	5543404	IdentifierDecl	w0 [ WSZ ]		5543385	0					
ANR	5543405	IdentifierDeclType	char [ WSZ ]		5543385	0					
ANR	5543406	Identifier	w0		5543385	1					
ANR	5543407	Identifier	WSZ		5543385	2					
ANR	5543408	IdentifierDeclStatement	char w1 [ WSZ ] ;	105:1:2328:2340	5543385	2	True				
ANR	5543409	IdentifierDecl	w1 [ WSZ ]		5543385	0					
ANR	5543410	IdentifierDeclType	char [ WSZ ]		5543385	0					
ANR	5543411	Identifier	w1		5543385	1					
ANR	5543412	Identifier	WSZ		5543385	2					
ANR	5543413	IdentifierDeclStatement	char w2 [ WSZ ] ;	106:1:2343:2355	5543385	3	True				
ANR	5543414	IdentifierDecl	w2 [ WSZ ]		5543385	0					
ANR	5543415	IdentifierDeclType	char [ WSZ ]		5543385	0					
ANR	5543416	Identifier	w2		5543385	1					
ANR	5543417	Identifier	WSZ		5543385	2					
ANR	5543418	IdentifierDeclStatement	char w3 [ WSZ ] ;	107:1:2358:2370	5543385	4	True				
ANR	5543419	IdentifierDecl	w3 [ WSZ ]		5543385	0					
ANR	5543420	IdentifierDeclType	char [ WSZ ]		5543385	0					
ANR	5543421	Identifier	w3		5543385	1					
ANR	5543422	Identifier	WSZ		5543385	2					
ANR	5543423	IdentifierDeclStatement	char w4 [ WSZ ] ;	108:1:2373:2385	5543385	5	True				
ANR	5543424	IdentifierDecl	w4 [ WSZ ]		5543385	0					
ANR	5543425	IdentifierDeclType	char [ WSZ ]		5543385	0					
ANR	5543426	Identifier	w4		5543385	1					
ANR	5543427	Identifier	WSZ		5543385	2					
ANR	5543428	IdentifierDeclStatement	"char * buf , * ptr , * optr ;"	109:1:2388:2410	5543385	6	True				
ANR	5543429	IdentifierDecl	* buf		5543385	0					
ANR	5543430	IdentifierDeclType	char *		5543385	0					
ANR	5543431	Identifier	buf		5543385	1					
ANR	5543432	IdentifierDecl	* ptr		5543385	1					
ANR	5543433	IdentifierDeclType	char *		5543385	0					
ANR	5543434	Identifier	ptr		5543385	1					
ANR	5543435	IdentifierDecl	* optr		5543385	2					
ANR	5543436	IdentifierDeclType	char *		5543385	0					
ANR	5543437	Identifier	optr		5543385	1					
ANR	5543438	IfStatement	"if ( ! strcmp ( data , ""jr ra"" ) )"		5543385	7					
ANR	5543439	Condition	"! strcmp ( data , ""jr ra"" )"	111:5:2418:2440	5543385	0	True				
ANR	5543440	UnaryOperationExpression	"! strcmp ( data , ""jr ra"" )"		5543385	0					
ANR	5543441	UnaryOperator	!		5543385	0					
ANR	5543442	CallExpression	"strcmp ( data , ""jr ra"" )"		5543385	1					
ANR	5543443	Callee	strcmp		5543385	0					
ANR	5543444	Identifier	strcmp		5543385	0					
ANR	5543445	ArgumentList	data		5543385	1					
ANR	5543446	Argument	data		5543385	0					
ANR	5543447	Identifier	data		5543385	0					
ANR	5543448	Argument	"""jr ra"""		5543385	1					
ANR	5543449	PrimaryExpression	"""jr ra"""		5543385	0					
ANR	5543450	CompoundStatement		10:30:161:161	5543385	1					
ANR	5543451	ExpressionStatement	"strcpy ( str , ""ret"" )"	112:2:2447:2466	5543385	0	True				
ANR	5543452	CallExpression	"strcpy ( str , ""ret"" )"		5543385	0					
ANR	5543453	Callee	strcpy		5543385	0					
ANR	5543454	Identifier	strcpy		5543385	0					
ANR	5543455	ArgumentList	str		5543385	1					
ANR	5543456	Argument	str		5543385	0					
ANR	5543457	Identifier	str		5543385	0					
ANR	5543458	Argument	"""ret"""		5543385	1					
ANR	5543459	PrimaryExpression	"""ret"""		5543385	0					
ANR	5543460	ReturnStatement	return true ;	113:2:2470:2481	5543385	1	True				
ANR	5543461	Identifier	true		5543385	0					
ANR	5543462	IfStatement	if ( ! ( buf = malloc ( len + 1 ) ) )		5543385	8					
ANR	5543463	Condition	! ( buf = malloc ( len + 1 ) )	117:5:2523:2547	5543385	0	True				
ANR	5543464	UnaryOperationExpression	! ( buf = malloc ( len + 1 ) )		5543385	0					
ANR	5543465	UnaryOperator	!		5543385	0					
ANR	5543466	AssignmentExpression	buf = malloc ( len + 1 )		5543385	1		=			
ANR	5543467	Identifier	buf		5543385	0					
ANR	5543468	CallExpression	malloc ( len + 1 )		5543385	1					
ANR	5543469	Callee	malloc		5543385	0					
ANR	5543470	Identifier	malloc		5543385	0					
ANR	5543471	ArgumentList	len + 1		5543385	1					
ANR	5543472	Argument	len + 1		5543385	0					
ANR	5543473	AdditiveExpression	len + 1		5543385	0		+			
ANR	5543474	Identifier	len		5543385	0					
ANR	5543475	PrimaryExpression	1		5543385	1					
ANR	5543476	CompoundStatement		16:32:268:268	5543385	1					
ANR	5543477	ReturnStatement	return false ;	118:2:2554:2566	5543385	0	True				
ANR	5543478	Identifier	false		5543385	0					
ANR	5543479	ExpressionStatement	"memcpy ( buf , data , len + 1 )"	120:1:2572:2597	5543385	9	True				
ANR	5543480	CallExpression	"memcpy ( buf , data , len + 1 )"		5543385	0					
ANR	5543481	Callee	memcpy		5543385	0					
ANR	5543482	Identifier	memcpy		5543385	0					
ANR	5543483	ArgumentList	buf		5543385	1					
ANR	5543484	Argument	buf		5543385	0					
ANR	5543485	Identifier	buf		5543385	0					
ANR	5543486	Argument	data		5543385	1					
ANR	5543487	Identifier	data		5543385	0					
ANR	5543488	Argument	len + 1		5543385	2					
ANR	5543489	AdditiveExpression	len + 1		5543385	0		+			
ANR	5543490	Identifier	len		5543385	0					
ANR	5543491	PrimaryExpression	1		5543385	1					
ANR	5543492	ExpressionStatement	"r_str_replace_in ( buf , len + 1 , "".l"" , """" , 1 )"	122:1:2601:2643	5543385	10	True				
ANR	5543493	CallExpression	"r_str_replace_in ( buf , len + 1 , "".l"" , """" , 1 )"		5543385	0					
ANR	5543494	Callee	r_str_replace_in		5543385	0					
ANR	5543495	Identifier	r_str_replace_in		5543385	0					
ANR	5543496	ArgumentList	buf		5543385	1					
ANR	5543497	Argument	buf		5543385	0					
ANR	5543498	Identifier	buf		5543385	0					
ANR	5543499	Argument	len + 1		5543385	1					
ANR	5543500	AdditiveExpression	len + 1		5543385	0		+			
ANR	5543501	Identifier	len		5543385	0					
ANR	5543502	PrimaryExpression	1		5543385	1					
ANR	5543503	Argument	""".l"""		5543385	2					
ANR	5543504	PrimaryExpression	""".l"""		5543385	0					
ANR	5543505	Argument	""""""		5543385	3					
ANR	5543506	PrimaryExpression	""""""		5543385	0					
ANR	5543507	Argument	1		5543385	4					
ANR	5543508	PrimaryExpression	1		5543385	0					
ANR	5543509	ExpressionStatement	"r_str_replace_in ( buf , len + 1 , "".w"" , """" , 1 )"	123:1:2646:2688	5543385	11	True				
ANR	5543510	CallExpression	"r_str_replace_in ( buf , len + 1 , "".w"" , """" , 1 )"		5543385	0					
ANR	5543511	Callee	r_str_replace_in		5543385	0					
ANR	5543512	Identifier	r_str_replace_in		5543385	0					
ANR	5543513	ArgumentList	buf		5543385	1					
ANR	5543514	Argument	buf		5543385	0					
ANR	5543515	Identifier	buf		5543385	0					
ANR	5543516	Argument	len + 1		5543385	1					
ANR	5543517	AdditiveExpression	len + 1		5543385	0		+			
ANR	5543518	Identifier	len		5543385	0					
ANR	5543519	PrimaryExpression	1		5543385	1					
ANR	5543520	Argument	""".w"""		5543385	2					
ANR	5543521	PrimaryExpression	""".w"""		5543385	0					
ANR	5543522	Argument	""""""		5543385	3					
ANR	5543523	PrimaryExpression	""""""		5543385	0					
ANR	5543524	Argument	1		5543385	4					
ANR	5543525	PrimaryExpression	1		5543385	0					
ANR	5543526	ExpressionStatement	"r_str_replace_in ( buf , len + 1 , "".d"" , """" , 1 )"	124:1:2691:2733	5543385	12	True				
ANR	5543527	CallExpression	"r_str_replace_in ( buf , len + 1 , "".d"" , """" , 1 )"		5543385	0					
ANR	5543528	Callee	r_str_replace_in		5543385	0					
ANR	5543529	Identifier	r_str_replace_in		5543385	0					
ANR	5543530	ArgumentList	buf		5543385	1					
ANR	5543531	Argument	buf		5543385	0					
ANR	5543532	Identifier	buf		5543385	0					
ANR	5543533	Argument	len + 1		5543385	1					
ANR	5543534	AdditiveExpression	len + 1		5543385	0		+			
ANR	5543535	Identifier	len		5543385	0					
ANR	5543536	PrimaryExpression	1		5543385	1					
ANR	5543537	Argument	""".d"""		5543385	2					
ANR	5543538	PrimaryExpression	""".d"""		5543385	0					
ANR	5543539	Argument	""""""		5543385	3					
ANR	5543540	PrimaryExpression	""""""		5543385	0					
ANR	5543541	Argument	1		5543385	4					
ANR	5543542	PrimaryExpression	1		5543385	0					
ANR	5543543	ExpressionStatement	"r_str_replace_in ( buf , len + 1 , "".b"" , """" , 1 )"	125:1:2736:2778	5543385	13	True				
ANR	5543544	CallExpression	"r_str_replace_in ( buf , len + 1 , "".b"" , """" , 1 )"		5543385	0					
ANR	5543545	Callee	r_str_replace_in		5543385	0					
ANR	5543546	Identifier	r_str_replace_in		5543385	0					
ANR	5543547	ArgumentList	buf		5543385	1					
ANR	5543548	Argument	buf		5543385	0					
ANR	5543549	Identifier	buf		5543385	0					
ANR	5543550	Argument	len + 1		5543385	1					
ANR	5543551	AdditiveExpression	len + 1		5543385	0		+			
ANR	5543552	Identifier	len		5543385	0					
ANR	5543553	PrimaryExpression	1		5543385	1					
ANR	5543554	Argument	""".b"""		5543385	2					
ANR	5543555	PrimaryExpression	""".b"""		5543385	0					
ANR	5543556	Argument	""""""		5543385	3					
ANR	5543557	PrimaryExpression	""""""		5543385	0					
ANR	5543558	Argument	1		5543385	4					
ANR	5543559	PrimaryExpression	1		5543385	0					
ANR	5543560	ExpressionStatement	r_str_trim ( buf )	126:1:2781:2797	5543385	14	True				
ANR	5543561	CallExpression	r_str_trim ( buf )		5543385	0					
ANR	5543562	Callee	r_str_trim		5543385	0					
ANR	5543563	Identifier	r_str_trim		5543385	0					
ANR	5543564	ArgumentList	buf		5543385	1					
ANR	5543565	Argument	buf		5543385	0					
ANR	5543566	Identifier	buf		5543385	0					
ANR	5543567	IfStatement	if ( * buf )		5543385	15					
ANR	5543568	Condition	* buf	128:5:2805:2808	5543385	0	True				
ANR	5543569	UnaryOperationExpression	* buf		5543385	0					
ANR	5543570	UnaryOperator	*		5543385	0					
ANR	5543571	Identifier	buf		5543385	1					
ANR	5543572	CompoundStatement		27:11:529:529	5543385	1					
ANR	5543573	ExpressionStatement	w0 [ 0 ] = '\\0'	129:2:2815:2825	5543385	0	True				
ANR	5543574	AssignmentExpression	w0 [ 0 ] = '\\0'		5543385	0		=			
ANR	5543575	ArrayIndexing	w0 [ 0 ]		5543385	0					
ANR	5543576	Identifier	w0		5543385	0					
ANR	5543577	PrimaryExpression	0		5543385	1					
ANR	5543578	PrimaryExpression	'\\0'		5543385	1					
ANR	5543579	ExpressionStatement	w1 [ 0 ] = '\\0'	130:2:2829:2839	5543385	1	True				
ANR	5543580	AssignmentExpression	w1 [ 0 ] = '\\0'		5543385	0		=			
ANR	5543581	ArrayIndexing	w1 [ 0 ]		5543385	0					
ANR	5543582	Identifier	w1		5543385	0					
ANR	5543583	PrimaryExpression	0		5543385	1					
ANR	5543584	PrimaryExpression	'\\0'		5543385	1					
ANR	5543585	ExpressionStatement	w2 [ 0 ] = '\\0'	131:2:2843:2853	5543385	2	True				
ANR	5543586	AssignmentExpression	w2 [ 0 ] = '\\0'		5543385	0		=			
ANR	5543587	ArrayIndexing	w2 [ 0 ]		5543385	0					
ANR	5543588	Identifier	w2		5543385	0					
ANR	5543589	PrimaryExpression	0		5543385	1					
ANR	5543590	PrimaryExpression	'\\0'		5543385	1					
ANR	5543591	ExpressionStatement	w3 [ 0 ] = '\\0'	132:2:2857:2867	5543385	3	True				
ANR	5543592	AssignmentExpression	w3 [ 0 ] = '\\0'		5543385	0		=			
ANR	5543593	ArrayIndexing	w3 [ 0 ]		5543385	0					
ANR	5543594	Identifier	w3		5543385	0					
ANR	5543595	PrimaryExpression	0		5543385	1					
ANR	5543596	PrimaryExpression	'\\0'		5543385	1					
ANR	5543597	ExpressionStatement	w4 [ 0 ] = '\\0'	133:2:2871:2881	5543385	4	True				
ANR	5543598	AssignmentExpression	w4 [ 0 ] = '\\0'		5543385	0		=			
ANR	5543599	ArrayIndexing	w4 [ 0 ]		5543385	0					
ANR	5543600	Identifier	w4		5543385	0					
ANR	5543601	PrimaryExpression	0		5543385	1					
ANR	5543602	PrimaryExpression	'\\0'		5543385	1					
ANR	5543603	ExpressionStatement	"ptr = strchr ( buf , ' ' )"	134:2:2885:2908	5543385	5	True				
ANR	5543604	AssignmentExpression	"ptr = strchr ( buf , ' ' )"		5543385	0		=			
ANR	5543605	Identifier	ptr		5543385	0					
ANR	5543606	CallExpression	"strchr ( buf , ' ' )"		5543385	1					
ANR	5543607	Callee	strchr		5543385	0					
ANR	5543608	Identifier	strchr		5543385	0					
ANR	5543609	ArgumentList	buf		5543385	1					
ANR	5543610	Argument	buf		5543385	0					
ANR	5543611	Identifier	buf		5543385	0					
ANR	5543612	Argument	' '		5543385	1					
ANR	5543613	PrimaryExpression	' '		5543385	0					
ANR	5543614	IfStatement	if ( ! ptr )		5543385	6					
ANR	5543615	Condition	! ptr	135:6:2916:2919	5543385	0	True				
ANR	5543616	UnaryOperationExpression	! ptr		5543385	0					
ANR	5543617	UnaryOperator	!		5543385	0					
ANR	5543618	Identifier	ptr		5543385	1					
ANR	5543619	CompoundStatement		34:12:640:640	5543385	1					
ANR	5543620	ExpressionStatement	"ptr = strchr ( buf , '\\t' )"	136:3:2927:2951	5543385	0	True				
ANR	5543621	AssignmentExpression	"ptr = strchr ( buf , '\\t' )"		5543385	0		=			
ANR	5543622	Identifier	ptr		5543385	0					
ANR	5543623	CallExpression	"strchr ( buf , '\\t' )"		5543385	1					
ANR	5543624	Callee	strchr		5543385	0					
ANR	5543625	Identifier	strchr		5543385	0					
ANR	5543626	ArgumentList	buf		5543385	1					
ANR	5543627	Argument	buf		5543385	0					
ANR	5543628	Identifier	buf		5543385	0					
ANR	5543629	Argument	'\\t'		5543385	1					
ANR	5543630	PrimaryExpression	'\\t'		5543385	0					
ANR	5543631	IfStatement	if ( ptr )		5543385	7					
ANR	5543632	Condition	ptr	138:6:2963:2965	5543385	0	True				
ANR	5543633	Identifier	ptr		5543385	0					
ANR	5543634	CompoundStatement		37:11:686:686	5543385	1					
ANR	5543635	ExpressionStatement	* ptr = '\\0'	139:3:2973:2984	5543385	0	True				
ANR	5543636	AssignmentExpression	* ptr = '\\0'		5543385	0		=			
ANR	5543637	UnaryOperationExpression	* ptr		5543385	0					
ANR	5543638	UnaryOperator	*		5543385	0					
ANR	5543639	Identifier	ptr		5543385	1					
ANR	5543640	PrimaryExpression	'\\0'		5543385	1					
ANR	5543641	ForStatement	for ( ++ ptr ; * ptr == ' ' ; ptr ++ )		5543385	1					
ANR	5543642	ForInit	++ ptr ;	140:8:2994:2999	5543385	0	True				
ANR	5543643	UnaryExpression	++ ptr		5543385	0					
ANR	5543644	IncDec	++		5543385	0					
ANR	5543645	Identifier	ptr		5543385	1					
ANR	5543646	Condition	* ptr == ' '	140:15:3001:3011	5543385	1	True				
ANR	5543647	EqualityExpression	* ptr == ' '		5543385	0		==			
ANR	5543648	UnaryOperationExpression	* ptr		5543385	0					
ANR	5543649	UnaryOperator	*		5543385	0					
ANR	5543650	Identifier	ptr		5543385	1					
ANR	5543651	PrimaryExpression	' '		5543385	1					
ANR	5543652	PostIncDecOperationExpression	ptr ++	140:28:3014:3018	5543385	2	True				
ANR	5543653	Identifier	ptr		5543385	0					
ANR	5543654	IncDec	++		5543385	1					
ANR	5543655	CompoundStatement		39:35:739:739	5543385	3					
ANR	5543656	ExpressionStatement		141:4:3027:3027	5543385	0	True				
ANR	5543657	ExpressionStatement	"strncpy ( w0 , buf , WSZ - 1 )"	143:3:3037:3063	5543385	2	True				
ANR	5543658	CallExpression	"strncpy ( w0 , buf , WSZ - 1 )"		5543385	0					
ANR	5543659	Callee	strncpy		5543385	0					
ANR	5543660	Identifier	strncpy		5543385	0					
ANR	5543661	ArgumentList	w0		5543385	1					
ANR	5543662	Argument	w0		5543385	0					
ANR	5543663	Identifier	w0		5543385	0					
ANR	5543664	Argument	buf		5543385	1					
ANR	5543665	Identifier	buf		5543385	0					
ANR	5543666	Argument	WSZ - 1		5543385	2					
ANR	5543667	AdditiveExpression	WSZ - 1		5543385	0		-			
ANR	5543668	Identifier	WSZ		5543385	0					
ANR	5543669	PrimaryExpression	1		5543385	1					
ANR	5543670	ExpressionStatement	"strncpy ( w1 , ptr , WSZ - 1 )"	144:3:3068:3094	5543385	3	True				
ANR	5543671	CallExpression	"strncpy ( w1 , ptr , WSZ - 1 )"		5543385	0					
ANR	5543672	Callee	strncpy		5543385	0					
ANR	5543673	Identifier	strncpy		5543385	0					
ANR	5543674	ArgumentList	w1		5543385	1					
ANR	5543675	Argument	w1		5543385	0					
ANR	5543676	Identifier	w1		5543385	0					
ANR	5543677	Argument	ptr		5543385	1					
ANR	5543678	Identifier	ptr		5543385	0					
ANR	5543679	Argument	WSZ - 1		5543385	2					
ANR	5543680	AdditiveExpression	WSZ - 1		5543385	0		-			
ANR	5543681	Identifier	WSZ		5543385	0					
ANR	5543682	PrimaryExpression	1		5543385	1					
ANR	5543683	ExpressionStatement	optr = ptr	146:3:3100:3108	5543385	4	True				
ANR	5543684	AssignmentExpression	optr = ptr		5543385	0		=			
ANR	5543685	Identifier	optr		5543385	0					
ANR	5543686	Identifier	ptr		5543385	1					
ANR	5543687	ExpressionStatement	"ptr = strchr ( ptr , ',' )"	147:3:3113:3136	5543385	5	True				
ANR	5543688	AssignmentExpression	"ptr = strchr ( ptr , ',' )"		5543385	0		=			
ANR	5543689	Identifier	ptr		5543385	0					
ANR	5543690	CallExpression	"strchr ( ptr , ',' )"		5543385	1					
ANR	5543691	Callee	strchr		5543385	0					
ANR	5543692	Identifier	strchr		5543385	0					
ANR	5543693	ArgumentList	ptr		5543385	1					
ANR	5543694	Argument	ptr		5543385	0					
ANR	5543695	Identifier	ptr		5543385	0					
ANR	5543696	Argument	"','"		5543385	1					
ANR	5543697	PrimaryExpression	"','"		5543385	0					
ANR	5543698	IfStatement	if ( ptr )		5543385	6					
ANR	5543699	Condition	ptr	148:7:3145:3147	5543385	0	True				
ANR	5543700	Identifier	ptr		5543385	0					
ANR	5543701	CompoundStatement		47:12:868:868	5543385	1					
ANR	5543702	ExpressionStatement	* ptr = '\\0'	149:4:3156:3167	5543385	0	True				
ANR	5543703	AssignmentExpression	* ptr = '\\0'		5543385	0		=			
ANR	5543704	UnaryOperationExpression	* ptr		5543385	0					
ANR	5543705	UnaryOperator	*		5543385	0					
ANR	5543706	Identifier	ptr		5543385	1					
ANR	5543707	PrimaryExpression	'\\0'		5543385	1					
ANR	5543708	ForStatement	for ( ++ ptr ; * ptr == ' ' ; ptr ++ )		5543385	1					
ANR	5543709	ForInit	++ ptr ;	150:9:3178:3183	5543385	0	True				
ANR	5543710	UnaryExpression	++ ptr		5543385	0					
ANR	5543711	IncDec	++		5543385	0					
ANR	5543712	Identifier	ptr		5543385	1					
ANR	5543713	Condition	* ptr == ' '	150:16:3185:3195	5543385	1	True				
ANR	5543714	EqualityExpression	* ptr == ' '		5543385	0		==			
ANR	5543715	UnaryOperationExpression	* ptr		5543385	0					
ANR	5543716	UnaryOperator	*		5543385	0					
ANR	5543717	Identifier	ptr		5543385	1					
ANR	5543718	PrimaryExpression	' '		5543385	1					
ANR	5543719	PostIncDecOperationExpression	ptr ++	150:29:3198:3202	5543385	2	True				
ANR	5543720	Identifier	ptr		5543385	0					
ANR	5543721	IncDec	++		5543385	1					
ANR	5543722	CompoundStatement		49:36:923:923	5543385	3					
ANR	5543723	ExpressionStatement		151:5:3212:3212	5543385	0	True				
ANR	5543724	ExpressionStatement	"strncpy ( w1 , optr , WSZ - 1 )"	153:4:3224:3251	5543385	2	True				
ANR	5543725	CallExpression	"strncpy ( w1 , optr , WSZ - 1 )"		5543385	0					
ANR	5543726	Callee	strncpy		5543385	0					
ANR	5543727	Identifier	strncpy		5543385	0					
ANR	5543728	ArgumentList	w1		5543385	1					
ANR	5543729	Argument	w1		5543385	0					
ANR	5543730	Identifier	w1		5543385	0					
ANR	5543731	Argument	optr		5543385	1					
ANR	5543732	Identifier	optr		5543385	0					
ANR	5543733	Argument	WSZ - 1		5543385	2					
ANR	5543734	AdditiveExpression	WSZ - 1		5543385	0		-			
ANR	5543735	Identifier	WSZ		5543385	0					
ANR	5543736	PrimaryExpression	1		5543385	1					
ANR	5543737	ExpressionStatement	"strncpy ( w2 , ptr , WSZ - 1 )"	154:4:3257:3283	5543385	3	True				
ANR	5543738	CallExpression	"strncpy ( w2 , ptr , WSZ - 1 )"		5543385	0					
ANR	5543739	Callee	strncpy		5543385	0					
ANR	5543740	Identifier	strncpy		5543385	0					
ANR	5543741	ArgumentList	w2		5543385	1					
ANR	5543742	Argument	w2		5543385	0					
ANR	5543743	Identifier	w2		5543385	0					
ANR	5543744	Argument	ptr		5543385	1					
ANR	5543745	Identifier	ptr		5543385	0					
ANR	5543746	Argument	WSZ - 1		5543385	2					
ANR	5543747	AdditiveExpression	WSZ - 1		5543385	0		-			
ANR	5543748	Identifier	WSZ		5543385	0					
ANR	5543749	PrimaryExpression	1		5543385	1					
ANR	5543750	ExpressionStatement	optr = ptr	155:4:3289:3297	5543385	4	True				
ANR	5543751	AssignmentExpression	optr = ptr		5543385	0		=			
ANR	5543752	Identifier	optr		5543385	0					
ANR	5543753	Identifier	ptr		5543385	1					
ANR	5543754	ExpressionStatement	"ptr = strchr ( ptr , ',' )"	156:4:3303:3326	5543385	5	True				
ANR	5543755	AssignmentExpression	"ptr = strchr ( ptr , ',' )"		5543385	0		=			
ANR	5543756	Identifier	ptr		5543385	0					
ANR	5543757	CallExpression	"strchr ( ptr , ',' )"		5543385	1					
ANR	5543758	Callee	strchr		5543385	0					
ANR	5543759	Identifier	strchr		5543385	0					
ANR	5543760	ArgumentList	ptr		5543385	1					
ANR	5543761	Argument	ptr		5543385	0					
ANR	5543762	Identifier	ptr		5543385	0					
ANR	5543763	Argument	"','"		5543385	1					
ANR	5543764	PrimaryExpression	"','"		5543385	0					
ANR	5543765	IfStatement	if ( ptr )		5543385	6					
ANR	5543766	Condition	ptr	157:8:3336:3338	5543385	0	True				
ANR	5543767	Identifier	ptr		5543385	0					
ANR	5543768	CompoundStatement		56:13:1059:1059	5543385	1					
ANR	5543769	ExpressionStatement	* ptr = '\\0'	158:5:3348:3359	5543385	0	True				
ANR	5543770	AssignmentExpression	* ptr = '\\0'		5543385	0		=			
ANR	5543771	UnaryOperationExpression	* ptr		5543385	0					
ANR	5543772	UnaryOperator	*		5543385	0					
ANR	5543773	Identifier	ptr		5543385	1					
ANR	5543774	PrimaryExpression	'\\0'		5543385	1					
ANR	5543775	ForStatement	for ( ++ ptr ; * ptr == ' ' ; ptr ++ )		5543385	1					
ANR	5543776	ForInit	++ ptr ;	159:10:3371:3376	5543385	0	True				
ANR	5543777	UnaryExpression	++ ptr		5543385	0					
ANR	5543778	IncDec	++		5543385	0					
ANR	5543779	Identifier	ptr		5543385	1					
ANR	5543780	Condition	* ptr == ' '	159:17:3378:3388	5543385	1	True				
ANR	5543781	EqualityExpression	* ptr == ' '		5543385	0		==			
ANR	5543782	UnaryOperationExpression	* ptr		5543385	0					
ANR	5543783	UnaryOperator	*		5543385	0					
ANR	5543784	Identifier	ptr		5543385	1					
ANR	5543785	PrimaryExpression	' '		5543385	1					
ANR	5543786	PostIncDecOperationExpression	ptr ++	159:30:3391:3395	5543385	2	True				
ANR	5543787	Identifier	ptr		5543385	0					
ANR	5543788	IncDec	++		5543385	1					
ANR	5543789	CompoundStatement		58:37:1116:1116	5543385	3					
ANR	5543790	ExpressionStatement		160:6:3406:3406	5543385	0	True				
ANR	5543791	ExpressionStatement	"strncpy ( w2 , optr , WSZ - 1 )"	162:5:3420:3447	5543385	2	True				
ANR	5543792	CallExpression	"strncpy ( w2 , optr , WSZ - 1 )"		5543385	0					
ANR	5543793	Callee	strncpy		5543385	0					
ANR	5543794	Identifier	strncpy		5543385	0					
ANR	5543795	ArgumentList	w2		5543385	1					
ANR	5543796	Argument	w2		5543385	0					
ANR	5543797	Identifier	w2		5543385	0					
ANR	5543798	Argument	optr		5543385	1					
ANR	5543799	Identifier	optr		5543385	0					
ANR	5543800	Argument	WSZ - 1		5543385	2					
ANR	5543801	AdditiveExpression	WSZ - 1		5543385	0		-			
ANR	5543802	Identifier	WSZ		5543385	0					
ANR	5543803	PrimaryExpression	1		5543385	1					
ANR	5543804	ExpressionStatement	"strncpy ( w3 , ptr , WSZ - 1 )"	163:5:3454:3480	5543385	3	True				
ANR	5543805	CallExpression	"strncpy ( w3 , ptr , WSZ - 1 )"		5543385	0					
ANR	5543806	Callee	strncpy		5543385	0					
ANR	5543807	Identifier	strncpy		5543385	0					
ANR	5543808	ArgumentList	w3		5543385	1					
ANR	5543809	Argument	w3		5543385	0					
ANR	5543810	Identifier	w3		5543385	0					
ANR	5543811	Argument	ptr		5543385	1					
ANR	5543812	Identifier	ptr		5543385	0					
ANR	5543813	Argument	WSZ - 1		5543385	2					
ANR	5543814	AdditiveExpression	WSZ - 1		5543385	0		-			
ANR	5543815	Identifier	WSZ		5543385	0					
ANR	5543816	PrimaryExpression	1		5543385	1					
ANR	5543817	ExpressionStatement	optr = ptr	164:5:3487:3495	5543385	4	True				
ANR	5543818	AssignmentExpression	optr = ptr		5543385	0		=			
ANR	5543819	Identifier	optr		5543385	0					
ANR	5543820	Identifier	ptr		5543385	1					
ANR	5543821	ExpressionStatement	"ptr = strchr ( ptr , ',' )"	166:5:3511:3534	5543385	5	True				
ANR	5543822	AssignmentExpression	"ptr = strchr ( ptr , ',' )"		5543385	0		=			
ANR	5543823	Identifier	ptr		5543385	0					
ANR	5543824	CallExpression	"strchr ( ptr , ',' )"		5543385	1					
ANR	5543825	Callee	strchr		5543385	0					
ANR	5543826	Identifier	strchr		5543385	0					
ANR	5543827	ArgumentList	ptr		5543385	1					
ANR	5543828	Argument	ptr		5543385	0					
ANR	5543829	Identifier	ptr		5543385	0					
ANR	5543830	Argument	"','"		5543385	1					
ANR	5543831	PrimaryExpression	"','"		5543385	0					
ANR	5543832	IfStatement	if ( ptr )		5543385	6					
ANR	5543833	Condition	ptr	167:9:3545:3547	5543385	0	True				
ANR	5543834	Identifier	ptr		5543385	0					
ANR	5543835	CompoundStatement		66:14:1268:1268	5543385	1					
ANR	5543836	ExpressionStatement	* ptr = '\\0'	168:6:3558:3569	5543385	0	True				
ANR	5543837	AssignmentExpression	* ptr = '\\0'		5543385	0		=			
ANR	5543838	UnaryOperationExpression	* ptr		5543385	0					
ANR	5543839	UnaryOperator	*		5543385	0					
ANR	5543840	Identifier	ptr		5543385	1					
ANR	5543841	PrimaryExpression	'\\0'		5543385	1					
ANR	5543842	ForStatement	for ( ++ ptr ; * ptr == ' ' ; ptr ++ )		5543385	1					
ANR	5543843	ForInit	++ ptr ;	169:11:3582:3587	5543385	0	True				
ANR	5543844	UnaryExpression	++ ptr		5543385	0					
ANR	5543845	IncDec	++		5543385	0					
ANR	5543846	Identifier	ptr		5543385	1					
ANR	5543847	Condition	* ptr == ' '	169:18:3589:3599	5543385	1	True				
ANR	5543848	EqualityExpression	* ptr == ' '		5543385	0		==			
ANR	5543849	UnaryOperationExpression	* ptr		5543385	0					
ANR	5543850	UnaryOperator	*		5543385	0					
ANR	5543851	Identifier	ptr		5543385	1					
ANR	5543852	PrimaryExpression	' '		5543385	1					
ANR	5543853	PostIncDecOperationExpression	ptr ++	169:31:3602:3606	5543385	2	True				
ANR	5543854	Identifier	ptr		5543385	0					
ANR	5543855	IncDec	++		5543385	1					
ANR	5543856	CompoundStatement		68:38:1327:1327	5543385	3					
ANR	5543857	ExpressionStatement		170:7:3618:3618	5543385	0	True				
ANR	5543858	ExpressionStatement	"strncpy ( w3 , optr , WSZ - 1 )"	172:6:3634:3661	5543385	2	True				
ANR	5543859	CallExpression	"strncpy ( w3 , optr , WSZ - 1 )"		5543385	0					
ANR	5543860	Callee	strncpy		5543385	0					
ANR	5543861	Identifier	strncpy		5543385	0					
ANR	5543862	ArgumentList	w3		5543385	1					
ANR	5543863	Argument	w3		5543385	0					
ANR	5543864	Identifier	w3		5543385	0					
ANR	5543865	Argument	optr		5543385	1					
ANR	5543866	Identifier	optr		5543385	0					
ANR	5543867	Argument	WSZ - 1		5543385	2					
ANR	5543868	AdditiveExpression	WSZ - 1		5543385	0		-			
ANR	5543869	Identifier	WSZ		5543385	0					
ANR	5543870	PrimaryExpression	1		5543385	1					
ANR	5543871	ExpressionStatement	"strncpy ( w4 , ptr , WSZ - 1 )"	173:6:3669:3695	5543385	3	True				
ANR	5543872	CallExpression	"strncpy ( w4 , ptr , WSZ - 1 )"		5543385	0					
ANR	5543873	Callee	strncpy		5543385	0					
ANR	5543874	Identifier	strncpy		5543385	0					
ANR	5543875	ArgumentList	w4		5543385	1					
ANR	5543876	Argument	w4		5543385	0					
ANR	5543877	Identifier	w4		5543385	0					
ANR	5543878	Argument	ptr		5543385	1					
ANR	5543879	Identifier	ptr		5543385	0					
ANR	5543880	Argument	WSZ - 1		5543385	2					
ANR	5543881	AdditiveExpression	WSZ - 1		5543385	0		-			
ANR	5543882	Identifier	WSZ		5543385	0					
ANR	5543883	PrimaryExpression	1		5543385	1					
ANR	5543884	CompoundStatement		79:3:1490:1500	5543385	8					
ANR	5543885	IdentifierDeclStatement	"const char * wa [ ] = { w0 , w1 , w2 , w3 , w4 } ;"	179:3:3726:3767	5543385	0	True				
ANR	5543886	IdentifierDecl	"* wa [ ] = { w0 , w1 , w2 , w3 , w4 }"		5543385	0					
ANR	5543887	IdentifierDeclType	const char * [ ]		5543385	0					
ANR	5543888	Identifier	wa		5543385	1					
ANR	5543889	AssignmentExpression	"* wa [ ] = { w0 , w1 , w2 , w3 , w4 }"		5543385	2		=			
ANR	5543890	Identifier	wa		5543385	0					
ANR	5543891	InitializerList	w0		5543385	1					
ANR	5543892	Identifier	w0		5543385	0					
ANR	5543893	Identifier	w1		5543385	1					
ANR	5543894	Identifier	w2		5543385	2					
ANR	5543895	Identifier	w3		5543385	3					
ANR	5543896	Identifier	w4		5543385	4					
ANR	5543897	IdentifierDeclStatement	int nw = 0 ;	180:3:3772:3782	5543385	1	True				
ANR	5543898	IdentifierDecl	nw = 0		5543385	0					
ANR	5543899	IdentifierDeclType	int		5543385	0					
ANR	5543900	Identifier	nw		5543385	1					
ANR	5543901	AssignmentExpression	nw = 0		5543385	2		=			
ANR	5543902	Identifier	nw		5543385	0					
ANR	5543903	PrimaryExpression	0		5543385	1					
ANR	5543904	ForStatement	for ( i = 0 ; i < 5 ; i ++ )		5543385	2					
ANR	5543905	ForInit	i = 0 ;	181:8:3792:3797	5543385	0	True				
ANR	5543906	AssignmentExpression	i = 0		5543385	0		=			
ANR	5543907	Identifier	i		5543385	0					
ANR	5543908	PrimaryExpression	0		5543385	1					
ANR	5543909	Condition	i < 5	181:15:3799:3803	5543385	1	True				
ANR	5543910	RelationalExpression	i < 5		5543385	0		<			
ANR	5543911	Identifier	i		5543385	0					
ANR	5543912	PrimaryExpression	5		5543385	1					
ANR	5543913	PostIncDecOperationExpression	i ++	181:22:3806:3808	5543385	2	True				
ANR	5543914	Identifier	i		5543385	0					
ANR	5543915	IncDec	++		5543385	1					
ANR	5543916	CompoundStatement		80:27:1529:1529	5543385	3					
ANR	5543917	IfStatement	if ( wa [ i ] [ 0 ] != '\\0' )		5543385	0					
ANR	5543918	Condition	wa [ i ] [ 0 ] != '\\0'	182:8:3821:3836	5543385	0	True				
ANR	5543919	EqualityExpression	wa [ i ] [ 0 ] != '\\0'		5543385	0		!=			
ANR	5543920	ArrayIndexing	wa [ i ] [ 0 ]		5543385	0					
ANR	5543921	ArrayIndexing	wa [ i ]		5543385	0					
ANR	5543922	Identifier	wa		5543385	0					
ANR	5543923	Identifier	i		5543385	1					
ANR	5543924	PrimaryExpression	0		5543385	1					
ANR	5543925	PrimaryExpression	'\\0'		5543385	1					
ANR	5543926	CompoundStatement		81:26:1557:1557	5543385	1					
ANR	5543927	ExpressionStatement	nw ++	183:5:3846:3850	5543385	0	True				
ANR	5543928	PostIncDecOperationExpression	nw ++		5543385	0					
ANR	5543929	Identifier	nw		5543385	0					
ANR	5543930	IncDec	++		5543385	1					
ANR	5543931	ExpressionStatement	"replace ( nw , wa , str )"	186:3:3866:3887	5543385	3	True				
ANR	5543932	CallExpression	"replace ( nw , wa , str )"		5543385	0					
ANR	5543933	Callee	replace		5543385	0					
ANR	5543934	Identifier	replace		5543385	0					
ANR	5543935	ArgumentList	nw		5543385	1					
ANR	5543936	Argument	nw		5543385	0					
ANR	5543937	Identifier	nw		5543385	0					
ANR	5543938	Argument	wa		5543385	1					
ANR	5543939	Identifier	wa		5543385	0					
ANR	5543940	Argument	str		5543385	2					
ANR	5543941	Identifier	str		5543385	0					
ANR	5543942	CompoundStatement		87:4:1616:1650	5543385	4					
ANR	5543943	IdentifierDeclStatement	"char * pluseq = strstr ( str , ""+ ="" ) ;"	188:4:3898:3932	5543385	0	True				
ANR	5543944	IdentifierDecl	"* pluseq = strstr ( str , ""+ ="" )"		5543385	0					
ANR	5543945	IdentifierDeclType	char *		5543385	0					
ANR	5543946	Identifier	pluseq		5543385	1					
ANR	5543947	AssignmentExpression	"* pluseq = strstr ( str , ""+ ="" )"		5543385	2		=			
ANR	5543948	Identifier	pluseq		5543385	0					
ANR	5543949	CallExpression	"strstr ( str , ""+ ="" )"		5543385	1					
ANR	5543950	Callee	strstr		5543385	0					
ANR	5543951	Identifier	strstr		5543385	0					
ANR	5543952	ArgumentList	str		5543385	1					
ANR	5543953	Argument	str		5543385	0					
ANR	5543954	Identifier	str		5543385	0					
ANR	5543955	Argument	"""+ ="""		5543385	1					
ANR	5543956	PrimaryExpression	"""+ ="""		5543385	0					
ANR	5543957	IfStatement	if ( pluseq )		5543385	1					
ANR	5543958	Condition	pluseq	189:8:3942:3947	5543385	0	True				
ANR	5543959	Identifier	pluseq		5543385	0					
ANR	5543960	CompoundStatement		88:16:1668:1668	5543385	1					
ANR	5543961	ExpressionStatement	"memcpy ( pluseq , "" +="" , 3 )"	190:5:3957:3982	5543385	0	True				
ANR	5543962	CallExpression	"memcpy ( pluseq , "" +="" , 3 )"		5543385	0					
ANR	5543963	Callee	memcpy		5543385	0					
ANR	5543964	Identifier	memcpy		5543385	0					
ANR	5543965	ArgumentList	pluseq		5543385	1					
ANR	5543966	Argument	pluseq		5543385	0					
ANR	5543967	Identifier	pluseq		5543385	0					
ANR	5543968	Argument	""" +="""		5543385	1					
ANR	5543969	PrimaryExpression	""" +="""		5543385	0					
ANR	5543970	Argument	3		5543385	2					
ANR	5543971	PrimaryExpression	3		5543385	0					
ANR	5543972	ExpressionStatement	free ( buf )	195:1:4003:4013	5543385	16	True				
ANR	5543973	CallExpression	free ( buf )		5543385	0					
ANR	5543974	Callee	free		5543385	0					
ANR	5543975	Identifier	free		5543385	0					
ANR	5543976	ArgumentList	buf		5543385	1					
ANR	5543977	Argument	buf		5543385	0					
ANR	5543978	Identifier	buf		5543385	0					
ANR	5543979	ReturnStatement	return true ;	196:1:4016:4027	5543385	17	True				
ANR	5543980	Identifier	true		5543385	0					
ANR	5543981	ReturnType	static int		5543385	1					
ANR	5543982	Identifier	parse		5543385	2					
ANR	5543983	ParameterList	"RParse * p , const char * data , char * str"		5543385	3					
ANR	5543984	Parameter	RParse * p	102:17:2241:2249	5543385	0	True				
ANR	5543985	ParameterType	RParse *		5543385	0					
ANR	5543986	Identifier	p		5543385	1					
ANR	5543987	Parameter	const char * data	102:28:2252:2267	5543385	1	True				
ANR	5543988	ParameterType	const char *		5543385	0					
ANR	5543989	Identifier	data		5543385	1					
ANR	5543990	Parameter	char * str	102:46:2270:2278	5543385	2	True				
ANR	5543991	ParameterType	char *		5543385	0					
ANR	5543992	Identifier	str		5543385	1					
ANR	5543993	CFGEntryNode	ENTRY		5543385		True				
ANR	5543994	CFGExitNode	EXIT		5543385		True				
ANR	5543995	Symbol	* w4		5543385						
ANR	5543996	Symbol	* w3		5543385						
ANR	5543997	Symbol	pluseq		5543385						
ANR	5543998	Symbol	* w2		5543385						
ANR	5543999	Symbol	* w1		5543385						
ANR	5544000	Symbol	data		5543385						
ANR	5544001	Symbol	strchr		5543385						
ANR	5544002	Symbol	nw		5543385						
ANR	5544003	Symbol	wa		5543385						
ANR	5544004	Symbol	strlen		5543385						
ANR	5544005	Symbol	* wa		5543385						
ANR	5544006	Symbol	len		5543385						
ANR	5544007	Symbol	* ptr		5543385						
ANR	5544008	Symbol	w0		5543385						
ANR	5544009	Symbol	w1		5543385						
ANR	5544010	Symbol	w2		5543385						
ANR	5544011	Symbol	w3		5543385						
ANR	5544012	Symbol	* w0		5543385						
ANR	5544013	Symbol	w4		5543385						
ANR	5544014	Symbol	strcmp		5543385						
ANR	5544015	Symbol	malloc		5543385						
ANR	5544016	Symbol	* buf		5543385						
ANR	5544017	Symbol	* * i		5543385						
ANR	5544018	Symbol	false		5543385						
ANR	5544019	Symbol	i		5543385						
ANR	5544020	Symbol	optr		5543385						
ANR	5544021	Symbol	ptr		5543385						
ANR	5544022	Symbol	p		5543385						
ANR	5544023	Symbol	str		5543385						
ANR	5544024	Symbol	buf		5543385						
ANR	5544025	Symbol	* i		5543385						
ANR	5544026	Symbol	* * wa		5543385						
ANR	5544027	Symbol	strstr		5543385						
ANR	5544028	Symbol	true		5543385						
ANR	5544029	Symbol	WSZ		5543385						
ANR	5544030	DeclStmt									
ANR	5544031	Decl							RParsePlugin	RParsePlugin	r_parse_plugin_m68k_pseudo
ANR	5544032	DeclStmt									
ANR	5544033	Decl							R_API RLibStruct	R_API RLibStruct	radare_plugin
