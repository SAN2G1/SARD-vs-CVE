command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	1390465	File	data/converged/CVE-2019-16718~_radare2/emit_trace.c								
ANR	1390466	DeclStmt									
ANR	1390467	Decl							char	char * [ ]	regs
ANR	1390468	Function	emit_init	19:0:347:395							
ANR	1390469	FunctionDef	emit_init (REgg * egg)		1390468	0					
ANR	1390470	CompoundStatement		19:34:381:395	1390468	0					
ANR	1390471	ReturnType	static void		1390468	1					
ANR	1390472	Identifier	emit_init		1390468	2					
ANR	1390473	ParameterList	REgg * egg		1390468	3					
ANR	1390474	Parameter	REgg * egg	19:23:370:378	1390468	0	True				
ANR	1390475	ParameterType	REgg *		1390468	0					
ANR	1390476	Identifier	egg		1390468	1					
ANR	1390477	CFGEntryNode	ENTRY		1390468		True				
ANR	1390478	CFGExitNode	EXIT		1390468		True				
ANR	1390479	Symbol	egg		1390468						
ANR	1390480	Function	emit_syscall	23:0:398:538							
ANR	1390481	FunctionDef	"emit_syscall (REgg * egg , int num)"		1390480	0					
ANR	1390482	CompoundStatement		23:47:445:538	1390480	0					
ANR	1390483	IdentifierDeclStatement	char buf [ 32 ] ;	24:1:448:460	1390480	0	True				
ANR	1390484	IdentifierDecl	buf [ 32 ]		1390480	0					
ANR	1390485	IdentifierDeclType	char [ 32 ]		1390480	0					
ANR	1390486	Identifier	buf		1390480	1					
ANR	1390487	PrimaryExpression	32		1390480	2					
ANR	1390488	ExpressionStatement	"snprintf ( buf , sizeof ( buf ) , ""syscall (%d)\\n"" , num )"	25:1:463:514	1390480	1	True				
ANR	1390489	CallExpression	"snprintf ( buf , sizeof ( buf ) , ""syscall (%d)\\n"" , num )"		1390480	0					
ANR	1390490	Callee	snprintf		1390480	0					
ANR	1390491	Identifier	snprintf		1390480	0					
ANR	1390492	ArgumentList	buf		1390480	1					
ANR	1390493	Argument	buf		1390480	0					
ANR	1390494	Identifier	buf		1390480	0					
ANR	1390495	Argument	sizeof ( buf )		1390480	1					
ANR	1390496	SizeofExpression	sizeof ( buf )		1390480	0					
ANR	1390497	Sizeof	sizeof		1390480	0					
ANR	1390498	SizeofOperand	buf		1390480	1					
ANR	1390499	Argument	"""syscall (%d)\\n"""		1390480	2					
ANR	1390500	PrimaryExpression	"""syscall (%d)\\n"""		1390480	0					
ANR	1390501	Argument	num		1390480	3					
ANR	1390502	Identifier	num		1390480	0					
ANR	1390503	ReturnStatement	return strdup ( buf ) ;	26:1:517:536	1390480	2	True				
ANR	1390504	CallExpression	strdup ( buf )		1390480	0					
ANR	1390505	Callee	strdup		1390480	0					
ANR	1390506	Identifier	strdup		1390480	0					
ANR	1390507	ArgumentList	buf		1390480	1					
ANR	1390508	Argument	buf		1390480	0					
ANR	1390509	Identifier	buf		1390480	0					
ANR	1390510	ReturnType	static char *		1390480	1					
ANR	1390511	Identifier	emit_syscall		1390480	2					
ANR	1390512	ParameterList	"REgg * egg , int num"		1390480	3					
ANR	1390513	Parameter	REgg * egg	23:27:425:433	1390480	0	True				
ANR	1390514	ParameterType	REgg *		1390480	0					
ANR	1390515	Identifier	egg		1390480	1					
ANR	1390516	Parameter	int num	23:38:436:442	1390480	1	True				
ANR	1390517	ParameterType	int		1390480	0					
ANR	1390518	Identifier	num		1390480	1					
ANR	1390519	CFGEntryNode	ENTRY		1390480		True				
ANR	1390520	CFGExitNode	EXIT		1390480		True				
ANR	1390521	Symbol	buf		1390480						
ANR	1390522	Symbol	egg		1390480						
ANR	1390523	Symbol	num		1390480						
ANR	1390524	Symbol	strdup		1390480						
ANR	1390525	Function	emit_frame	29:0:541:627							
ANR	1390526	FunctionDef	"emit_frame (REgg * egg , int sz)"		1390525	0					
ANR	1390527	CompoundStatement		29:43:584:627	1390525	0					
ANR	1390528	ExpressionStatement	"r_egg_printf ( egg , ""frame (%d)\\n"" , sz )"	30:1:587:625	1390525	0	True				
ANR	1390529	CallExpression	"r_egg_printf ( egg , ""frame (%d)\\n"" , sz )"		1390525	0					
ANR	1390530	Callee	r_egg_printf		1390525	0					
ANR	1390531	Identifier	r_egg_printf		1390525	0					
ANR	1390532	ArgumentList	egg		1390525	1					
ANR	1390533	Argument	egg		1390525	0					
ANR	1390534	Identifier	egg		1390525	0					
ANR	1390535	Argument	"""frame (%d)\\n"""		1390525	1					
ANR	1390536	PrimaryExpression	"""frame (%d)\\n"""		1390525	0					
ANR	1390537	Argument	sz		1390525	2					
ANR	1390538	Identifier	sz		1390525	0					
ANR	1390539	ReturnType	static void		1390525	1					
ANR	1390540	Identifier	emit_frame		1390525	2					
ANR	1390541	ParameterList	"REgg * egg , int sz"		1390525	3					
ANR	1390542	Parameter	REgg * egg	29:24:565:573	1390525	0	True				
ANR	1390543	ParameterType	REgg *		1390525	0					
ANR	1390544	Identifier	egg		1390525	1					
ANR	1390545	Parameter	int sz	29:35:576:581	1390525	1	True				
ANR	1390546	ParameterType	int		1390525	0					
ANR	1390547	Identifier	sz		1390525	1					
ANR	1390548	CFGEntryNode	ENTRY		1390525		True				
ANR	1390549	CFGExitNode	EXIT		1390525		True				
ANR	1390550	Symbol	egg		1390525						
ANR	1390551	Symbol	sz		1390525						
ANR	1390552	Function	emit_frame_end	33:0:630:742							
ANR	1390553	FunctionDef	"emit_frame_end (REgg * egg , int sz , int ctx)"		1390552	0					
ANR	1390554	CompoundStatement		33:56:686:742	1390552	0					
ANR	1390555	ExpressionStatement	"r_egg_printf ( egg , ""frame_end (%d, %d)\\n"" , sz , ctx )"	34:1:689:740	1390552	0	True				
ANR	1390556	CallExpression	"r_egg_printf ( egg , ""frame_end (%d, %d)\\n"" , sz , ctx )"		1390552	0					
ANR	1390557	Callee	r_egg_printf		1390552	0					
ANR	1390558	Identifier	r_egg_printf		1390552	0					
ANR	1390559	ArgumentList	egg		1390552	1					
ANR	1390560	Argument	egg		1390552	0					
ANR	1390561	Identifier	egg		1390552	0					
ANR	1390562	Argument	"""frame_end (%d, %d)\\n"""		1390552	1					
ANR	1390563	PrimaryExpression	"""frame_end (%d, %d)\\n"""		1390552	0					
ANR	1390564	Argument	sz		1390552	2					
ANR	1390565	Identifier	sz		1390552	0					
ANR	1390566	Argument	ctx		1390552	3					
ANR	1390567	Identifier	ctx		1390552	0					
ANR	1390568	ReturnType	static void		1390552	1					
ANR	1390569	Identifier	emit_frame_end		1390552	2					
ANR	1390570	ParameterList	"REgg * egg , int sz , int ctx"		1390552	3					
ANR	1390571	Parameter	REgg * egg	33:28:658:666	1390552	0	True				
ANR	1390572	ParameterType	REgg *		1390552	0					
ANR	1390573	Identifier	egg		1390552	1					
ANR	1390574	Parameter	int sz	33:39:669:674	1390552	1	True				
ANR	1390575	ParameterType	int		1390552	0					
ANR	1390576	Identifier	sz		1390552	1					
ANR	1390577	Parameter	int ctx	33:47:677:683	1390552	2	True				
ANR	1390578	ParameterType	int		1390552	0					
ANR	1390579	Identifier	ctx		1390552	1					
ANR	1390580	CFGEntryNode	ENTRY		1390552		True				
ANR	1390581	CFGExitNode	EXIT		1390552		True				
ANR	1390582	Symbol	egg		1390552						
ANR	1390583	Symbol	ctx		1390552						
ANR	1390584	Symbol	sz		1390552						
ANR	1390585	Function	emit_comment	37:0:745:947							
ANR	1390586	FunctionDef	"emit_comment (REgg * egg , const char * fmt)"		1390585	0					
ANR	1390587	CompoundStatement		37:58:803:947	1390585	0					
ANR	1390588	IdentifierDeclStatement	va_list ap ;	38:1:806:816	1390585	0	True				
ANR	1390589	IdentifierDecl	ap		1390585	0					
ANR	1390590	IdentifierDeclType	va_list		1390585	0					
ANR	1390591	Identifier	ap		1390585	1					
ANR	1390592	IdentifierDeclStatement	char buf [ 1024 ] ;	39:1:819:833	1390585	1	True				
ANR	1390593	IdentifierDecl	buf [ 1024 ]		1390585	0					
ANR	1390594	IdentifierDeclType	char [ 1024 ]		1390585	0					
ANR	1390595	Identifier	buf		1390585	1					
ANR	1390596	PrimaryExpression	1024		1390585	2					
ANR	1390597	ExpressionStatement	"va_start ( ap , fmt )"	40:1:836:854	1390585	2	True				
ANR	1390598	CallExpression	"va_start ( ap , fmt )"		1390585	0					
ANR	1390599	Callee	va_start		1390585	0					
ANR	1390600	Identifier	va_start		1390585	0					
ANR	1390601	ArgumentList	ap		1390585	1					
ANR	1390602	Argument	ap		1390585	0					
ANR	1390603	Identifier	ap		1390585	0					
ANR	1390604	Argument	fmt		1390585	1					
ANR	1390605	Identifier	fmt		1390585	0					
ANR	1390606	ExpressionStatement	"vsnprintf ( buf , sizeof ( buf ) , fmt , ap )"	41:1:857:895	1390585	3	True				
ANR	1390607	CallExpression	"vsnprintf ( buf , sizeof ( buf ) , fmt , ap )"		1390585	0					
ANR	1390608	Callee	vsnprintf		1390585	0					
ANR	1390609	Identifier	vsnprintf		1390585	0					
ANR	1390610	ArgumentList	buf		1390585	1					
ANR	1390611	Argument	buf		1390585	0					
ANR	1390612	Identifier	buf		1390585	0					
ANR	1390613	Argument	sizeof ( buf )		1390585	1					
ANR	1390614	SizeofExpression	sizeof ( buf )		1390585	0					
ANR	1390615	Sizeof	sizeof		1390585	0					
ANR	1390616	SizeofOperand	buf		1390585	1					
ANR	1390617	Argument	fmt		1390585	2					
ANR	1390618	Identifier	fmt		1390585	0					
ANR	1390619	Argument	ap		1390585	3					
ANR	1390620	Identifier	ap		1390585	0					
ANR	1390621	ExpressionStatement	"r_egg_printf ( egg , ""# %s\\n"" , buf )"	42:1:898:931	1390585	4	True				
ANR	1390622	CallExpression	"r_egg_printf ( egg , ""# %s\\n"" , buf )"		1390585	0					
ANR	1390623	Callee	r_egg_printf		1390585	0					
ANR	1390624	Identifier	r_egg_printf		1390585	0					
ANR	1390625	ArgumentList	egg		1390585	1					
ANR	1390626	Argument	egg		1390585	0					
ANR	1390627	Identifier	egg		1390585	0					
ANR	1390628	Argument	"""# %s\\n"""		1390585	1					
ANR	1390629	PrimaryExpression	"""# %s\\n"""		1390585	0					
ANR	1390630	Argument	buf		1390585	2					
ANR	1390631	Identifier	buf		1390585	0					
ANR	1390632	ExpressionStatement	va_end ( ap )	43:1:934:945	1390585	5	True				
ANR	1390633	CallExpression	va_end ( ap )		1390585	0					
ANR	1390634	Callee	va_end		1390585	0					
ANR	1390635	Identifier	va_end		1390585	0					
ANR	1390636	ArgumentList	ap		1390585	1					
ANR	1390637	Argument	ap		1390585	0					
ANR	1390638	Identifier	ap		1390585	0					
ANR	1390639	ReturnType	static void		1390585	1					
ANR	1390640	Identifier	emit_comment		1390585	2					
ANR	1390641	ParameterList	"REgg * egg , const char * fmt"		1390585	3					
ANR	1390642	Parameter	REgg * egg	37:25:770:778	1390585	0	True				
ANR	1390643	ParameterType	REgg *		1390585	0					
ANR	1390644	Identifier	egg		1390585	1					
ANR	1390645	Parameter	const char * fmt	37:36:781:795	1390585	1	True				
ANR	1390646	ParameterType	const char *		1390585	0					
ANR	1390647	Identifier	fmt		1390585	1					
ANR	1390648	CFGEntryNode	ENTRY		1390585		True				
ANR	1390649	CFGExitNode	EXIT		1390585		True				
ANR	1390650	Symbol	buf		1390585						
ANR	1390651	Symbol	egg		1390585						
ANR	1390652	Symbol	fmt		1390585						
ANR	1390653	Symbol	ap		1390585						
ANR	1390654	Function	emit_equ	46:0:950:1072							
ANR	1390655	FunctionDef	"emit_equ (REgg * egg , const char * key , const char * value)"		1390654	0					
ANR	1390656	CompoundStatement		46:69:1019:1072	1390654	0					
ANR	1390657	ExpressionStatement	"r_egg_printf ( egg , ""equ (%s, %s)\\n"" , key , value )"	47:1:1022:1070	1390654	0	True				
ANR	1390658	CallExpression	"r_egg_printf ( egg , ""equ (%s, %s)\\n"" , key , value )"		1390654	0					
ANR	1390659	Callee	r_egg_printf		1390654	0					
ANR	1390660	Identifier	r_egg_printf		1390654	0					
ANR	1390661	ArgumentList	egg		1390654	1					
ANR	1390662	Argument	egg		1390654	0					
ANR	1390663	Identifier	egg		1390654	0					
ANR	1390664	Argument	"""equ (%s, %s)\\n"""		1390654	1					
ANR	1390665	PrimaryExpression	"""equ (%s, %s)\\n"""		1390654	0					
ANR	1390666	Argument	key		1390654	2					
ANR	1390667	Identifier	key		1390654	0					
ANR	1390668	Argument	value		1390654	3					
ANR	1390669	Identifier	value		1390654	0					
ANR	1390670	ReturnType	static void		1390654	1					
ANR	1390671	Identifier	emit_equ		1390654	2					
ANR	1390672	ParameterList	"REgg * egg , const char * key , const char * value"		1390654	3					
ANR	1390673	Parameter	REgg * egg	46:22:972:980	1390654	0	True				
ANR	1390674	ParameterType	REgg *		1390654	0					
ANR	1390675	Identifier	egg		1390654	1					
ANR	1390676	Parameter	const char * key	46:33:983:997	1390654	1	True				
ANR	1390677	ParameterType	const char *		1390654	0					
ANR	1390678	Identifier	key		1390654	1					
ANR	1390679	Parameter	const char * value	46:50:1000:1016	1390654	2	True				
ANR	1390680	ParameterType	const char *		1390654	0					
ANR	1390681	Identifier	value		1390654	1					
ANR	1390682	CFGEntryNode	ENTRY		1390654		True				
ANR	1390683	CFGExitNode	EXIT		1390654		True				
ANR	1390684	Symbol	egg		1390654						
ANR	1390685	Symbol	value		1390654						
ANR	1390686	Symbol	key		1390654						
ANR	1390687	Function	emit_syscall_args	50:0:1075:1180							
ANR	1390688	FunctionDef	"emit_syscall_args (REgg * egg , int nargs)"		1390687	0					
ANR	1390689	CompoundStatement		50:52:1127:1180	1390687	0					
ANR	1390690	ExpressionStatement	"r_egg_printf ( egg , ""syscall_args (%d)\\n"" , nargs )"	51:1:1130:1178	1390687	0	True				
ANR	1390691	CallExpression	"r_egg_printf ( egg , ""syscall_args (%d)\\n"" , nargs )"		1390687	0					
ANR	1390692	Callee	r_egg_printf		1390687	0					
ANR	1390693	Identifier	r_egg_printf		1390687	0					
ANR	1390694	ArgumentList	egg		1390687	1					
ANR	1390695	Argument	egg		1390687	0					
ANR	1390696	Identifier	egg		1390687	0					
ANR	1390697	Argument	"""syscall_args (%d)\\n"""		1390687	1					
ANR	1390698	PrimaryExpression	"""syscall_args (%d)\\n"""		1390687	0					
ANR	1390699	Argument	nargs		1390687	2					
ANR	1390700	Identifier	nargs		1390687	0					
ANR	1390701	ReturnType	static void		1390687	1					
ANR	1390702	Identifier	emit_syscall_args		1390687	2					
ANR	1390703	ParameterList	"REgg * egg , int nargs"		1390687	3					
ANR	1390704	Parameter	REgg * egg	50:30:1105:1113	1390687	0	True				
ANR	1390705	ParameterType	REgg *		1390687	0					
ANR	1390706	Identifier	egg		1390687	1					
ANR	1390707	Parameter	int nargs	50:41:1116:1124	1390687	1	True				
ANR	1390708	ParameterType	int		1390687	0					
ANR	1390709	Identifier	nargs		1390687	1					
ANR	1390710	CFGEntryNode	ENTRY		1390687		True				
ANR	1390711	CFGExitNode	EXIT		1390687		True				
ANR	1390712	Symbol	nargs		1390687						
ANR	1390713	Symbol	egg		1390687						
ANR	1390714	Function	emit_set_string	54:0:1183:1350							
ANR	1390715	FunctionDef	"emit_set_string (REgg * egg , const char * dstvar , const char * str , int j)"		1390714	0					
ANR	1390716	CompoundStatement		54:83:1266:1350	1390714	0					
ANR	1390717	ExpressionStatement	"r_egg_printf ( egg , ""set (\\""%s\\"", \\""%s\\"", %d)\\n"" , dstvar , str , j )"	56:1:1284:1348	1390714	0	True				
ANR	1390718	CallExpression	"r_egg_printf ( egg , ""set (\\""%s\\"", \\""%s\\"", %d)\\n"" , dstvar , str , j )"		1390714	0					
ANR	1390719	Callee	r_egg_printf		1390714	0					
ANR	1390720	Identifier	r_egg_printf		1390714	0					
ANR	1390721	ArgumentList	egg		1390714	1					
ANR	1390722	Argument	egg		1390714	0					
ANR	1390723	Identifier	egg		1390714	0					
ANR	1390724	Argument	"""set (\\""%s\\"", \\""%s\\"", %d)\\n"""		1390714	1					
ANR	1390725	PrimaryExpression	"""set (\\""%s\\"", \\""%s\\"", %d)\\n"""		1390714	0					
ANR	1390726	Argument	dstvar		1390714	2					
ANR	1390727	Identifier	dstvar		1390714	0					
ANR	1390728	Argument	str		1390714	3					
ANR	1390729	Identifier	str		1390714	0					
ANR	1390730	Argument	j		1390714	4					
ANR	1390731	Identifier	j		1390714	0					
ANR	1390732	ReturnType	static void		1390714	1					
ANR	1390733	Identifier	emit_set_string		1390714	2					
ANR	1390734	ParameterList	"REgg * egg , const char * dstvar , const char * str , int j"		1390714	3					
ANR	1390735	Parameter	REgg * egg	54:28:1211:1219	1390714	0	True				
ANR	1390736	ParameterType	REgg *		1390714	0					
ANR	1390737	Identifier	egg		1390714	1					
ANR	1390738	Parameter	const char * dstvar	54:39:1222:1239	1390714	1	True				
ANR	1390739	ParameterType	const char *		1390714	0					
ANR	1390740	Identifier	dstvar		1390714	1					
ANR	1390741	Parameter	const char * str	54:59:1242:1256	1390714	2	True				
ANR	1390742	ParameterType	const char *		1390714	0					
ANR	1390743	Identifier	str		1390714	1					
ANR	1390744	Parameter	int j	54:76:1259:1263	1390714	3	True				
ANR	1390745	ParameterType	int		1390714	0					
ANR	1390746	Identifier	j		1390714	1					
ANR	1390747	CFGEntryNode	ENTRY		1390714		True				
ANR	1390748	CFGExitNode	EXIT		1390714		True				
ANR	1390749	Symbol	str		1390714						
ANR	1390750	Symbol	egg		1390714						
ANR	1390751	Symbol	j		1390714						
ANR	1390752	Symbol	dstvar		1390714						
ANR	1390753	Function	emit_call	59:0:1353:1525							
ANR	1390754	FunctionDef	"emit_call (REgg * egg , const char * str , int atr)"		1390753	0					
ANR	1390755	CompoundStatement		59:59:1412:1525	1390753	0					
ANR	1390756	IfStatement	if ( atr )		1390753	0					
ANR	1390757	Condition	atr	60:5:1419:1421	1390753	0	True				
ANR	1390758	Identifier	atr		1390753	0					
ANR	1390759	CompoundStatement		2:10:11:11	1390753	1					
ANR	1390760	ExpressionStatement	"r_egg_printf ( egg , ""call ([%s])\\n"" , str )"	61:2:1428:1468	1390753	0	True				
ANR	1390761	CallExpression	"r_egg_printf ( egg , ""call ([%s])\\n"" , str )"		1390753	0					
ANR	1390762	Callee	r_egg_printf		1390753	0					
ANR	1390763	Identifier	r_egg_printf		1390753	0					
ANR	1390764	ArgumentList	egg		1390753	1					
ANR	1390765	Argument	egg		1390753	0					
ANR	1390766	Identifier	egg		1390753	0					
ANR	1390767	Argument	"""call ([%s])\\n"""		1390753	1					
ANR	1390768	PrimaryExpression	"""call ([%s])\\n"""		1390753	0					
ANR	1390769	Argument	str		1390753	2					
ANR	1390770	Identifier	str		1390753	0					
ANR	1390771	ElseStatement	else		1390753	0					
ANR	1390772	CompoundStatement		4:8:65:65	1390753	0					
ANR	1390773	ExpressionStatement	"r_egg_printf ( egg , ""call (%s)\\n"" , str )"	63:2:1482:1520	1390753	0	True				
ANR	1390774	CallExpression	"r_egg_printf ( egg , ""call (%s)\\n"" , str )"		1390753	0					
ANR	1390775	Callee	r_egg_printf		1390753	0					
ANR	1390776	Identifier	r_egg_printf		1390753	0					
ANR	1390777	ArgumentList	egg		1390753	1					
ANR	1390778	Argument	egg		1390753	0					
ANR	1390779	Identifier	egg		1390753	0					
ANR	1390780	Argument	"""call (%s)\\n"""		1390753	1					
ANR	1390781	PrimaryExpression	"""call (%s)\\n"""		1390753	0					
ANR	1390782	Argument	str		1390753	2					
ANR	1390783	Identifier	str		1390753	0					
ANR	1390784	ReturnType	static void		1390753	1					
ANR	1390785	Identifier	emit_call		1390753	2					
ANR	1390786	ParameterList	"REgg * egg , const char * str , int atr"		1390753	3					
ANR	1390787	Parameter	REgg * egg	59:22:1375:1383	1390753	0	True				
ANR	1390788	ParameterType	REgg *		1390753	0					
ANR	1390789	Identifier	egg		1390753	1					
ANR	1390790	Parameter	const char * str	59:33:1386:1400	1390753	1	True				
ANR	1390791	ParameterType	const char *		1390753	0					
ANR	1390792	Identifier	str		1390753	1					
ANR	1390793	Parameter	int atr	59:50:1403:1409	1390753	2	True				
ANR	1390794	ParameterType	int		1390753	0					
ANR	1390795	Identifier	atr		1390753	1					
ANR	1390796	CFGEntryNode	ENTRY		1390753		True				
ANR	1390797	CFGExitNode	EXIT		1390753		True				
ANR	1390798	Symbol	str		1390753						
ANR	1390799	Symbol	egg		1390753						
ANR	1390800	Symbol	atr		1390753						
ANR	1390801	Function	emit_jmp	67:0:1528:1699							
ANR	1390802	FunctionDef	"emit_jmp (REgg * egg , const char * str , int atr)"		1390801	0					
ANR	1390803	CompoundStatement		67:58:1586:1699	1390801	0					
ANR	1390804	IfStatement	if ( atr )		1390801	0					
ANR	1390805	Condition	atr	68:5:1593:1595	1390801	0	True				
ANR	1390806	Identifier	atr		1390801	0					
ANR	1390807	CompoundStatement		2:10:11:11	1390801	1					
ANR	1390808	ExpressionStatement	"r_egg_printf ( egg , ""goto ([%s])\\n"" , str )"	69:2:1602:1642	1390801	0	True				
ANR	1390809	CallExpression	"r_egg_printf ( egg , ""goto ([%s])\\n"" , str )"		1390801	0					
ANR	1390810	Callee	r_egg_printf		1390801	0					
ANR	1390811	Identifier	r_egg_printf		1390801	0					
ANR	1390812	ArgumentList	egg		1390801	1					
ANR	1390813	Argument	egg		1390801	0					
ANR	1390814	Identifier	egg		1390801	0					
ANR	1390815	Argument	"""goto ([%s])\\n"""		1390801	1					
ANR	1390816	PrimaryExpression	"""goto ([%s])\\n"""		1390801	0					
ANR	1390817	Argument	str		1390801	2					
ANR	1390818	Identifier	str		1390801	0					
ANR	1390819	ElseStatement	else		1390801	0					
ANR	1390820	CompoundStatement		4:8:65:65	1390801	0					
ANR	1390821	ExpressionStatement	"r_egg_printf ( egg , ""goto (%s)\\n"" , str )"	71:2:1656:1694	1390801	0	True				
ANR	1390822	CallExpression	"r_egg_printf ( egg , ""goto (%s)\\n"" , str )"		1390801	0					
ANR	1390823	Callee	r_egg_printf		1390801	0					
ANR	1390824	Identifier	r_egg_printf		1390801	0					
ANR	1390825	ArgumentList	egg		1390801	1					
ANR	1390826	Argument	egg		1390801	0					
ANR	1390827	Identifier	egg		1390801	0					
ANR	1390828	Argument	"""goto (%s)\\n"""		1390801	1					
ANR	1390829	PrimaryExpression	"""goto (%s)\\n"""		1390801	0					
ANR	1390830	Argument	str		1390801	2					
ANR	1390831	Identifier	str		1390801	0					
ANR	1390832	ReturnType	static void		1390801	1					
ANR	1390833	Identifier	emit_jmp		1390801	2					
ANR	1390834	ParameterList	"REgg * egg , const char * str , int atr"		1390801	3					
ANR	1390835	Parameter	REgg * egg	67:21:1549:1557	1390801	0	True				
ANR	1390836	ParameterType	REgg *		1390801	0					
ANR	1390837	Identifier	egg		1390801	1					
ANR	1390838	Parameter	const char * str	67:32:1560:1574	1390801	1	True				
ANR	1390839	ParameterType	const char *		1390801	0					
ANR	1390840	Identifier	str		1390801	1					
ANR	1390841	Parameter	int atr	67:49:1577:1583	1390801	2	True				
ANR	1390842	ParameterType	int		1390801	0					
ANR	1390843	Identifier	atr		1390801	1					
ANR	1390844	CFGEntryNode	ENTRY		1390801		True				
ANR	1390845	CFGExitNode	EXIT		1390801		True				
ANR	1390846	Symbol	str		1390801						
ANR	1390847	Symbol	egg		1390801						
ANR	1390848	Symbol	atr		1390801						
ANR	1390849	Function	emit_arg	75:0:1702:1854							
ANR	1390850	FunctionDef	"emit_arg (REgg * egg , int xs , int num , const char * str)"		1390849	0					
ANR	1390851	CompoundStatement		75:67:1769:1854	1390849	0					
ANR	1390852	ExpressionStatement	"r_egg_printf ( egg , ""arg.%d.%d=%s\\n"" , xs , num , str )"	77:1:1802:1852	1390849	0	True				
ANR	1390853	CallExpression	"r_egg_printf ( egg , ""arg.%d.%d=%s\\n"" , xs , num , str )"		1390849	0					
ANR	1390854	Callee	r_egg_printf		1390849	0					
ANR	1390855	Identifier	r_egg_printf		1390849	0					
ANR	1390856	ArgumentList	egg		1390849	1					
ANR	1390857	Argument	egg		1390849	0					
ANR	1390858	Identifier	egg		1390849	0					
ANR	1390859	Argument	"""arg.%d.%d=%s\\n"""		1390849	1					
ANR	1390860	PrimaryExpression	"""arg.%d.%d=%s\\n"""		1390849	0					
ANR	1390861	Argument	xs		1390849	2					
ANR	1390862	Identifier	xs		1390849	0					
ANR	1390863	Argument	num		1390849	3					
ANR	1390864	Identifier	num		1390849	0					
ANR	1390865	Argument	str		1390849	4					
ANR	1390866	Identifier	str		1390849	0					
ANR	1390867	ReturnType	static void		1390849	1					
ANR	1390868	Identifier	emit_arg		1390849	2					
ANR	1390869	ParameterList	"REgg * egg , int xs , int num , const char * str"		1390849	3					
ANR	1390870	Parameter	REgg * egg	75:22:1724:1732	1390849	0	True				
ANR	1390871	ParameterType	REgg *		1390849	0					
ANR	1390872	Identifier	egg		1390849	1					
ANR	1390873	Parameter	int xs	75:33:1735:1740	1390849	1	True				
ANR	1390874	ParameterType	int		1390849	0					
ANR	1390875	Identifier	xs		1390849	1					
ANR	1390876	Parameter	int num	75:41:1743:1749	1390849	2	True				
ANR	1390877	ParameterType	int		1390849	0					
ANR	1390878	Identifier	num		1390849	1					
ANR	1390879	Parameter	const char * str	75:50:1752:1766	1390849	3	True				
ANR	1390880	ParameterType	const char *		1390849	0					
ANR	1390881	Identifier	str		1390849	1					
ANR	1390882	CFGEntryNode	ENTRY		1390849		True				
ANR	1390883	CFGExitNode	EXIT		1390849		True				
ANR	1390884	Symbol	str		1390849						
ANR	1390885	Symbol	egg		1390849						
ANR	1390886	Symbol	num		1390849						
ANR	1390887	Symbol	xs		1390849						
ANR	1390888	Function	emit_get_result	80:0:1857:1962							
ANR	1390889	FunctionDef	"emit_get_result (REgg * egg , const char * ocn)"		1390888	0					
ANR	1390890	CompoundStatement		80:56:1913:1962	1390888	0					
ANR	1390891	ExpressionStatement	"r_egg_printf ( egg , ""get_result (%s)\\n"" , ocn )"	81:1:1916:1960	1390888	0	True				
ANR	1390892	CallExpression	"r_egg_printf ( egg , ""get_result (%s)\\n"" , ocn )"		1390888	0					
ANR	1390893	Callee	r_egg_printf		1390888	0					
ANR	1390894	Identifier	r_egg_printf		1390888	0					
ANR	1390895	ArgumentList	egg		1390888	1					
ANR	1390896	Argument	egg		1390888	0					
ANR	1390897	Identifier	egg		1390888	0					
ANR	1390898	Argument	"""get_result (%s)\\n"""		1390888	1					
ANR	1390899	PrimaryExpression	"""get_result (%s)\\n"""		1390888	0					
ANR	1390900	Argument	ocn		1390888	2					
ANR	1390901	Identifier	ocn		1390888	0					
ANR	1390902	ReturnType	static void		1390888	1					
ANR	1390903	Identifier	emit_get_result		1390888	2					
ANR	1390904	ParameterList	"REgg * egg , const char * ocn"		1390888	3					
ANR	1390905	Parameter	REgg * egg	80:28:1885:1893	1390888	0	True				
ANR	1390906	ParameterType	REgg *		1390888	0					
ANR	1390907	Identifier	egg		1390888	1					
ANR	1390908	Parameter	const char * ocn	80:39:1896:1910	1390888	1	True				
ANR	1390909	ParameterType	const char *		1390888	0					
ANR	1390910	Identifier	ocn		1390888	1					
ANR	1390911	CFGEntryNode	ENTRY		1390888		True				
ANR	1390912	CFGExitNode	EXIT		1390888		True				
ANR	1390913	Symbol	egg		1390888						
ANR	1390914	Symbol	ocn		1390888						
ANR	1390915	Function	emit_restore_stack	84:0:1965:2182							
ANR	1390916	FunctionDef	"emit_restore_stack (REgg * egg , int size)"		1390915	0					
ANR	1390917	CompoundStatement		84:53:2018:2182	1390915	0					
ANR	1390918	ExpressionStatement	"r_egg_printf ( egg , ""restore_stack (%d)\\n"" , size )"	85:1:2021:2069	1390915	0	True				
ANR	1390919	CallExpression	"r_egg_printf ( egg , ""restore_stack (%d)\\n"" , size )"		1390915	0					
ANR	1390920	Callee	r_egg_printf		1390915	0					
ANR	1390921	Identifier	r_egg_printf		1390915	0					
ANR	1390922	ArgumentList	egg		1390915	1					
ANR	1390923	Argument	egg		1390915	0					
ANR	1390924	Identifier	egg		1390915	0					
ANR	1390925	Argument	"""restore_stack (%d)\\n"""		1390915	1					
ANR	1390926	PrimaryExpression	"""restore_stack (%d)\\n"""		1390915	0					
ANR	1390927	Argument	size		1390915	2					
ANR	1390928	Identifier	size		1390915	0					
ANR	1390929	ReturnType	static void		1390915	1					
ANR	1390930	Identifier	emit_restore_stack		1390915	2					
ANR	1390931	ParameterList	"REgg * egg , int size"		1390915	3					
ANR	1390932	Parameter	REgg * egg	84:32:1997:2005	1390915	0	True				
ANR	1390933	ParameterType	REgg *		1390915	0					
ANR	1390934	Identifier	egg		1390915	1					
ANR	1390935	Parameter	int size	84:43:2008:2015	1390915	1	True				
ANR	1390936	ParameterType	int		1390915	0					
ANR	1390937	Identifier	size		1390915	1					
ANR	1390938	CFGEntryNode	ENTRY		1390915		True				
ANR	1390939	CFGExitNode	EXIT		1390915		True				
ANR	1390940	Symbol	egg		1390915						
ANR	1390941	Symbol	size		1390915						
ANR	1390942	Function	emit_get_while_end	90:0:2185:2355							
ANR	1390943	FunctionDef	"emit_get_while_end (REgg * egg , char * str , const char * ctxpush , const char * label)"		1390942	0					
ANR	1390944	CompoundStatement		90:94:2279:2355	1390942	0					
ANR	1390945	ExpressionStatement	"r_egg_printf ( egg , ""get_while_end (%s, %s, %s)\\n"" , str , ctxpush , label )"	91:1:2282:2353	1390942	0	True				
ANR	1390946	CallExpression	"r_egg_printf ( egg , ""get_while_end (%s, %s, %s)\\n"" , str , ctxpush , label )"		1390942	0					
ANR	1390947	Callee	r_egg_printf		1390942	0					
ANR	1390948	Identifier	r_egg_printf		1390942	0					
ANR	1390949	ArgumentList	egg		1390942	1					
ANR	1390950	Argument	egg		1390942	0					
ANR	1390951	Identifier	egg		1390942	0					
ANR	1390952	Argument	"""get_while_end (%s, %s, %s)\\n"""		1390942	1					
ANR	1390953	PrimaryExpression	"""get_while_end (%s, %s, %s)\\n"""		1390942	0					
ANR	1390954	Argument	str		1390942	2					
ANR	1390955	Identifier	str		1390942	0					
ANR	1390956	Argument	ctxpush		1390942	3					
ANR	1390957	Identifier	ctxpush		1390942	0					
ANR	1390958	Argument	label		1390942	4					
ANR	1390959	Identifier	label		1390942	0					
ANR	1390960	ReturnType	static void		1390942	1					
ANR	1390961	Identifier	emit_get_while_end		1390942	2					
ANR	1390962	ParameterList	"REgg * egg , char * str , const char * ctxpush , const char * label"		1390942	3					
ANR	1390963	Parameter	REgg * egg	90:32:2217:2225	1390942	0	True				
ANR	1390964	ParameterType	REgg *		1390942	0					
ANR	1390965	Identifier	egg		1390942	1					
ANR	1390966	Parameter	char * str	90:43:2228:2236	1390942	1	True				
ANR	1390967	ParameterType	char *		1390942	0					
ANR	1390968	Identifier	str		1390942	1					
ANR	1390969	Parameter	const char * ctxpush	90:54:2239:2257	1390942	2	True				
ANR	1390970	ParameterType	const char *		1390942	0					
ANR	1390971	Identifier	ctxpush		1390942	1					
ANR	1390972	Parameter	const char * label	90:75:2260:2276	1390942	3	True				
ANR	1390973	ParameterType	const char *		1390942	0					
ANR	1390974	Identifier	label		1390942	1					
ANR	1390975	CFGEntryNode	ENTRY		1390942		True				
ANR	1390976	CFGExitNode	EXIT		1390942		True				
ANR	1390977	Symbol	str		1390942						
ANR	1390978	Symbol	egg		1390942						
ANR	1390979	Symbol	ctxpush		1390942						
ANR	1390980	Symbol	label		1390942						
ANR	1390981	Function	emit_while_end	94:0:2358:2474							
ANR	1390982	FunctionDef	"emit_while_end (REgg * egg , const char * labelback)"		1390981	0					
ANR	1390983	CompoundStatement		94:62:2420:2474	1390981	0					
ANR	1390984	ExpressionStatement	"r_egg_printf ( egg , ""while_end (%s)\\n"" , labelback )"	95:1:2423:2472	1390981	0	True				
ANR	1390985	CallExpression	"r_egg_printf ( egg , ""while_end (%s)\\n"" , labelback )"		1390981	0					
ANR	1390986	Callee	r_egg_printf		1390981	0					
ANR	1390987	Identifier	r_egg_printf		1390981	0					
ANR	1390988	ArgumentList	egg		1390981	1					
ANR	1390989	Argument	egg		1390981	0					
ANR	1390990	Identifier	egg		1390981	0					
ANR	1390991	Argument	"""while_end (%s)\\n"""		1390981	1					
ANR	1390992	PrimaryExpression	"""while_end (%s)\\n"""		1390981	0					
ANR	1390993	Argument	labelback		1390981	2					
ANR	1390994	Identifier	labelback		1390981	0					
ANR	1390995	ReturnType	static void		1390981	1					
ANR	1390996	Identifier	emit_while_end		1390981	2					
ANR	1390997	ParameterList	"REgg * egg , const char * labelback"		1390981	3					
ANR	1390998	Parameter	REgg * egg	94:28:2386:2394	1390981	0	True				
ANR	1390999	ParameterType	REgg *		1390981	0					
ANR	1391000	Identifier	egg		1390981	1					
ANR	1391001	Parameter	const char * labelback	94:39:2397:2417	1390981	1	True				
ANR	1391002	ParameterType	const char *		1390981	0					
ANR	1391003	Identifier	labelback		1390981	1					
ANR	1391004	CFGEntryNode	ENTRY		1390981		True				
ANR	1391005	CFGExitNode	EXIT		1390981		True				
ANR	1391006	Symbol	egg		1390981						
ANR	1391007	Symbol	labelback		1390981						
ANR	1391008	Function	emit_get_var	98:0:2477:2720							
ANR	1391009	FunctionDef	"emit_get_var (REgg * egg , int type , char * out , int idx)"		1391008	0					
ANR	1391010	CompoundStatement		98:67:2544:2720	1391008	0					
ANR	1391011	SwitchStatement	switch ( type )		1391008	0					
ANR	1391012	Condition	type	99:9:2555:2558	1391008	0	True				
ANR	1391013	Identifier	type		1391008	0					
ANR	1391014	CompoundStatement		2:15:16:16	1391008	1					
ANR	1391015	Label	case 0 :	100:1:2564:2570	1391008	0	True				
ANR	1391016	ExpressionStatement	"sprintf ( out , ""fp,$%d"" , - idx )"	100:9:2572:2601	1391008	1	True				
ANR	1391017	CallExpression	"sprintf ( out , ""fp,$%d"" , - idx )"		1391008	0					
ANR	1391018	Callee	sprintf		1391008	0					
ANR	1391019	Identifier	sprintf		1391008	0					
ANR	1391020	ArgumentList	out		1391008	1					
ANR	1391021	Argument	out		1391008	0					
ANR	1391022	Identifier	out		1391008	0					
ANR	1391023	Argument	"""fp,$%d"""		1391008	1					
ANR	1391024	PrimaryExpression	"""fp,$%d"""		1391008	0					
ANR	1391025	Argument	- idx		1391008	2					
ANR	1391026	UnaryOperationExpression	- idx		1391008	0					
ANR	1391027	UnaryOperator	-		1391008	0					
ANR	1391028	Identifier	idx		1391008	1					
ANR	1391029	BreakStatement	break ;	100:40:2603:2608	1391008	2	True				
ANR	1391030	Label	case 1 :	101:1:2626:2632	1391008	3	True				
ANR	1391031	ExpressionStatement	"sprintf ( out , ""sp,$%d"" , idx )"	101:9:2634:2662	1391008	4	True				
ANR	1391032	CallExpression	"sprintf ( out , ""sp,$%d"" , idx )"		1391008	0					
ANR	1391033	Callee	sprintf		1391008	0					
ANR	1391034	Identifier	sprintf		1391008	0					
ANR	1391035	ArgumentList	out		1391008	1					
ANR	1391036	Argument	out		1391008	0					
ANR	1391037	Identifier	out		1391008	0					
ANR	1391038	Argument	"""sp,$%d"""		1391008	1					
ANR	1391039	PrimaryExpression	"""sp,$%d"""		1391008	0					
ANR	1391040	Argument	idx		1391008	2					
ANR	1391041	Identifier	idx		1391008	0					
ANR	1391042	BreakStatement	break ;	101:39:2664:2669	1391008	5	True				
ANR	1391043	ReturnType	static void		1391008	1					
ANR	1391044	Identifier	emit_get_var		1391008	2					
ANR	1391045	ParameterList	"REgg * egg , int type , char * out , int idx"		1391008	3					
ANR	1391046	Parameter	REgg * egg	98:26:2503:2511	1391008	0	True				
ANR	1391047	ParameterType	REgg *		1391008	0					
ANR	1391048	Identifier	egg		1391008	1					
ANR	1391049	Parameter	int type	98:37:2514:2521	1391008	1	True				
ANR	1391050	ParameterType	int		1391008	0					
ANR	1391051	Identifier	type		1391008	1					
ANR	1391052	Parameter	char * out	98:47:2524:2532	1391008	2	True				
ANR	1391053	ParameterType	char *		1391008	0					
ANR	1391054	Identifier	out		1391008	1					
ANR	1391055	Parameter	int idx	98:58:2535:2541	1391008	3	True				
ANR	1391056	ParameterType	int		1391008	0					
ANR	1391057	Identifier	idx		1391008	1					
ANR	1391058	CFGEntryNode	ENTRY		1391008		True				
ANR	1391059	CFGExitNode	EXIT		1391008		True				
ANR	1391060	Symbol	egg		1391008						
ANR	1391061	Symbol	type		1391008						
ANR	1391062	Symbol	idx		1391008						
ANR	1391063	Symbol	out		1391008						
ANR	1391064	Function	emit_trap	105:0:2723:2790							
ANR	1391065	FunctionDef	emit_trap (REgg * egg)		1391064	0					
ANR	1391066	CompoundStatement		105:34:2757:2790	1391064	0					
ANR	1391067	ExpressionStatement	"r_egg_printf ( egg , ""trap\\n"" )"	106:1:2760:2788	1391064	0	True				
ANR	1391068	CallExpression	"r_egg_printf ( egg , ""trap\\n"" )"		1391064	0					
ANR	1391069	Callee	r_egg_printf		1391064	0					
ANR	1391070	Identifier	r_egg_printf		1391064	0					
ANR	1391071	ArgumentList	egg		1391064	1					
ANR	1391072	Argument	egg		1391064	0					
ANR	1391073	Identifier	egg		1391064	0					
ANR	1391074	Argument	"""trap\\n"""		1391064	1					
ANR	1391075	PrimaryExpression	"""trap\\n"""		1391064	0					
ANR	1391076	ReturnType	static void		1391064	1					
ANR	1391077	Identifier	emit_trap		1391064	2					
ANR	1391078	ParameterList	REgg * egg		1391064	3					
ANR	1391079	Parameter	REgg * egg	105:23:2746:2754	1391064	0	True				
ANR	1391080	ParameterType	REgg *		1391064	0					
ANR	1391081	Identifier	egg		1391064	1					
ANR	1391082	CFGEntryNode	ENTRY		1391064		True				
ANR	1391083	CFGExitNode	EXIT		1391064		True				
ANR	1391084	Symbol	egg		1391064						
ANR	1391085	Function	emit_load_ptr	110:0:2812:2912							
ANR	1391086	FunctionDef	"emit_load_ptr (REgg * egg , const char * dst)"		1391085	0					
ANR	1391087	CompoundStatement		110:54:2866:2912	1391085	0					
ANR	1391088	ExpressionStatement	"r_egg_printf ( egg , ""loadptr (%s)\\n"" , dst )"	111:1:2869:2910	1391085	0	True				
ANR	1391089	CallExpression	"r_egg_printf ( egg , ""loadptr (%s)\\n"" , dst )"		1391085	0					
ANR	1391090	Callee	r_egg_printf		1391085	0					
ANR	1391091	Identifier	r_egg_printf		1391085	0					
ANR	1391092	ArgumentList	egg		1391085	1					
ANR	1391093	Argument	egg		1391085	0					
ANR	1391094	Identifier	egg		1391085	0					
ANR	1391095	Argument	"""loadptr (%s)\\n"""		1391085	1					
ANR	1391096	PrimaryExpression	"""loadptr (%s)\\n"""		1391085	0					
ANR	1391097	Argument	dst		1391085	2					
ANR	1391098	Identifier	dst		1391085	0					
ANR	1391099	ReturnType	static void		1391085	1					
ANR	1391100	Identifier	emit_load_ptr		1391085	2					
ANR	1391101	ParameterList	"REgg * egg , const char * dst"		1391085	3					
ANR	1391102	Parameter	REgg * egg	110:26:2838:2846	1391085	0	True				
ANR	1391103	ParameterType	REgg *		1391085	0					
ANR	1391104	Identifier	egg		1391085	1					
ANR	1391105	Parameter	const char * dst	110:37:2849:2863	1391085	1	True				
ANR	1391106	ParameterType	const char *		1391085	0					
ANR	1391107	Identifier	dst		1391085	1					
ANR	1391108	CFGEntryNode	ENTRY		1391085		True				
ANR	1391109	CFGExitNode	EXIT		1391085		True				
ANR	1391110	Symbol	egg		1391085						
ANR	1391111	Symbol	dst		1391085						
ANR	1391112	Function	emit_branch	114:0:2915:3552							
ANR	1391113	FunctionDef	"emit_branch (REgg * egg , char * b , char * g , char * e , char * n , int sz , const char * dst)"		1391112	0					
ANR	1391114	CompoundStatement		114:96:3011:3552	1391112	0					
ANR	1391115	IdentifierDeclStatement	"char * p , str [ 64 ] ;"	116:1:3050:3066	1391112	0	True				
ANR	1391116	IdentifierDecl	* p		1391112	0					
ANR	1391117	IdentifierDeclType	char *		1391112	0					
ANR	1391118	Identifier	p		1391112	1					
ANR	1391119	IdentifierDecl	str [ 64 ]		1391112	1					
ANR	1391120	IdentifierDeclType	char [ 64 ]		1391112	0					
ANR	1391121	Identifier	str		1391112	1					
ANR	1391122	PrimaryExpression	64		1391112	2					
ANR	1391123	IdentifierDeclStatement	char * arg = NULL ;	117:1:3069:3085	1391112	1	True				
ANR	1391124	IdentifierDecl	* arg = NULL		1391112	0					
ANR	1391125	IdentifierDeclType	char *		1391112	0					
ANR	1391126	Identifier	arg		1391112	1					
ANR	1391127	AssignmentExpression	* arg = NULL		1391112	2		=			
ANR	1391128	Identifier	NULL		1391112	0					
ANR	1391129	Identifier	NULL		1391112	1					
ANR	1391130	IdentifierDeclStatement	"char * op = ""beq"" ;"	118:1:3088:3104	1391112	2	True				
ANR	1391131	IdentifierDecl	"* op = ""beq"""		1391112	0					
ANR	1391132	IdentifierDeclType	char *		1391112	0					
ANR	1391133	Identifier	op		1391112	1					
ANR	1391134	AssignmentExpression	"* op = ""beq"""		1391112	2		=			
ANR	1391135	Identifier	op		1391112	0					
ANR	1391136	PrimaryExpression	"""beq"""		1391112	1					
ANR	1391137	IfStatement	if ( b )		1391112	3					
ANR	1391138	Condition	b	120:5:3165:3165	1391112	0	True				
ANR	1391139	Identifier	b		1391112	0					
ANR	1391140	CompoundStatement		7:8:156:156	1391112	1					
ANR	1391141	ExpressionStatement	* b = '\\0'	121:2:3172:3181	1391112	0	True				
ANR	1391142	AssignmentExpression	* b = '\\0'		1391112	0		=			
ANR	1391143	UnaryOperationExpression	* b		1391112	0					
ANR	1391144	UnaryOperator	*		1391112	0					
ANR	1391145	Identifier	b		1391112	1					
ANR	1391146	PrimaryExpression	'\\0'		1391112	1					
ANR	1391147	ExpressionStatement	"op = e ? ""bge"" : ""bgt"""	122:2:3185:3203	1391112	1	True				
ANR	1391148	AssignmentExpression	"op = e ? ""bge"" : ""bgt"""		1391112	0		=			
ANR	1391149	Identifier	op		1391112	0					
ANR	1391150	ConditionalExpression	"e ? ""bge"" : ""bgt"""		1391112	1					
ANR	1391151	Condition	e		1391112	0					
ANR	1391152	Identifier	e		1391112	0					
ANR	1391153	PrimaryExpression	"""bge"""		1391112	1					
ANR	1391154	PrimaryExpression	"""bgt"""		1391112	2					
ANR	1391155	ExpressionStatement	arg = b + 1	123:2:3207:3216	1391112	2	True				
ANR	1391156	AssignmentExpression	arg = b + 1		1391112	0		=			
ANR	1391157	Identifier	arg		1391112	0					
ANR	1391158	AdditiveExpression	b + 1		1391112	1		+			
ANR	1391159	Identifier	b		1391112	0					
ANR	1391160	PrimaryExpression	1		1391112	1					
ANR	1391161	ElseStatement	else		1391112	0					
ANR	1391162	IfStatement	if ( g )		1391112	0					
ANR	1391163	Condition	g	125:5:3231:3231	1391112	0	True				
ANR	1391164	Identifier	g		1391112	0					
ANR	1391165	CompoundStatement		12:8:222:222	1391112	1					
ANR	1391166	ExpressionStatement	* g = '\\0'	126:2:3238:3247	1391112	0	True				
ANR	1391167	AssignmentExpression	* g = '\\0'		1391112	0		=			
ANR	1391168	UnaryOperationExpression	* g		1391112	0					
ANR	1391169	UnaryOperator	*		1391112	0					
ANR	1391170	Identifier	g		1391112	1					
ANR	1391171	PrimaryExpression	'\\0'		1391112	1					
ANR	1391172	ExpressionStatement	"op = e ? ""ble"" : ""blt"""	127:2:3251:3269	1391112	1	True				
ANR	1391173	AssignmentExpression	"op = e ? ""ble"" : ""blt"""		1391112	0		=			
ANR	1391174	Identifier	op		1391112	0					
ANR	1391175	ConditionalExpression	"e ? ""ble"" : ""blt"""		1391112	1					
ANR	1391176	Condition	e		1391112	0					
ANR	1391177	Identifier	e		1391112	0					
ANR	1391178	PrimaryExpression	"""ble"""		1391112	1					
ANR	1391179	PrimaryExpression	"""blt"""		1391112	2					
ANR	1391180	ExpressionStatement	arg = g + 1	128:2:3273:3282	1391112	2	True				
ANR	1391181	AssignmentExpression	arg = g + 1		1391112	0		=			
ANR	1391182	Identifier	arg		1391112	0					
ANR	1391183	AdditiveExpression	g + 1		1391112	1		+			
ANR	1391184	Identifier	g		1391112	0					
ANR	1391185	PrimaryExpression	1		1391112	1					
ANR	1391186	IfStatement	if ( ! arg )		1391112	4					
ANR	1391187	Condition	! arg	130:5:3292:3295	1391112	0	True				
ANR	1391188	UnaryOperationExpression	! arg		1391112	0					
ANR	1391189	UnaryOperator	!		1391112	0					
ANR	1391190	Identifier	arg		1391112	1					
ANR	1391191	CompoundStatement		17:11:286:286	1391112	1					
ANR	1391192	IfStatement	if ( e )		1391112	0					
ANR	1391193	Condition	e	131:6:3306:3306	1391112	0	True				
ANR	1391194	Identifier	e		1391112	0					
ANR	1391195	CompoundStatement		18:9:297:297	1391112	1					
ANR	1391196	ExpressionStatement	arg = e + 1	132:3:3314:3323	1391112	0	True				
ANR	1391197	AssignmentExpression	arg = e + 1		1391112	0		=			
ANR	1391198	Identifier	arg		1391112	0					
ANR	1391199	AdditiveExpression	e + 1		1391112	1		+			
ANR	1391200	Identifier	e		1391112	0					
ANR	1391201	PrimaryExpression	1		1391112	1					
ANR	1391202	ExpressionStatement	"op = ""bne"""	133:3:3328:3338	1391112	1	True				
ANR	1391203	AssignmentExpression	"op = ""bne"""		1391112	0		=			
ANR	1391204	Identifier	op		1391112	0					
ANR	1391205	PrimaryExpression	"""bne"""		1391112	1					
ANR	1391206	ElseStatement	else		1391112	0					
ANR	1391207	CompoundStatement		21:9:337:337	1391112	0					
ANR	1391208	ExpressionStatement	"arg = ""0"""	135:3:3354:3363	1391112	0	True				
ANR	1391209	AssignmentExpression	"arg = ""0"""		1391112	0		=			
ANR	1391210	Identifier	arg		1391112	0					
ANR	1391211	PrimaryExpression	"""0"""		1391112	1					
ANR	1391212	ExpressionStatement	"op = n ? ""bne"" : ""beq"""	136:3:3368:3386	1391112	1	True				
ANR	1391213	AssignmentExpression	"op = n ? ""bne"" : ""beq"""		1391112	0		=			
ANR	1391214	Identifier	op		1391112	0					
ANR	1391215	ConditionalExpression	"n ? ""bne"" : ""beq"""		1391112	1					
ANR	1391216	Condition	n		1391112	0					
ANR	1391217	Identifier	n		1391112	0					
ANR	1391218	PrimaryExpression	"""bne"""		1391112	1					
ANR	1391219	PrimaryExpression	"""beq"""		1391112	2					
ANR	1391220	IfStatement	if ( * arg == '=' )		1391112	5					
ANR	1391221	Condition	* arg == '='	140:5:3401:3411	1391112	0	True				
ANR	1391222	EqualityExpression	* arg == '='		1391112	0		==			
ANR	1391223	UnaryOperationExpression	* arg		1391112	0					
ANR	1391224	UnaryOperator	*		1391112	0					
ANR	1391225	Identifier	arg		1391112	1					
ANR	1391226	PrimaryExpression	'='		1391112	1					
ANR	1391227	CompoundStatement		27:18:402:402	1391112	1					
ANR	1391228	ExpressionStatement	arg ++	141:2:3418:3423	1391112	0	True				
ANR	1391229	PostIncDecOperationExpression	arg ++		1391112	0					
ANR	1391230	Identifier	arg		1391112	0					
ANR	1391231	IncDec	++		1391112	1					
ANR	1391232	ExpressionStatement	"p = r_egg_mkvar ( egg , str , arg , 0 )"	143:1:3451:3485	1391112	6	True				
ANR	1391233	AssignmentExpression	"p = r_egg_mkvar ( egg , str , arg , 0 )"		1391112	0		=			
ANR	1391234	Identifier	p		1391112	0					
ANR	1391235	CallExpression	"r_egg_mkvar ( egg , str , arg , 0 )"		1391112	1					
ANR	1391236	Callee	r_egg_mkvar		1391112	0					
ANR	1391237	Identifier	r_egg_mkvar		1391112	0					
ANR	1391238	ArgumentList	egg		1391112	1					
ANR	1391239	Argument	egg		1391112	0					
ANR	1391240	Identifier	egg		1391112	0					
ANR	1391241	Argument	str		1391112	1					
ANR	1391242	Identifier	str		1391112	0					
ANR	1391243	Argument	arg		1391112	2					
ANR	1391244	Identifier	arg		1391112	0					
ANR	1391245	Argument	0		1391112	3					
ANR	1391246	PrimaryExpression	0		1391112	0					
ANR	1391247	ExpressionStatement	"r_egg_printf ( egg , ""%s (%s) => (%s)\\n"" , op , p , dst )"	144:1:3488:3539	1391112	7	True				
ANR	1391248	CallExpression	"r_egg_printf ( egg , ""%s (%s) => (%s)\\n"" , op , p , dst )"		1391112	0					
ANR	1391249	Callee	r_egg_printf		1391112	0					
ANR	1391250	Identifier	r_egg_printf		1391112	0					
ANR	1391251	ArgumentList	egg		1391112	1					
ANR	1391252	Argument	egg		1391112	0					
ANR	1391253	Identifier	egg		1391112	0					
ANR	1391254	Argument	"""%s (%s) => (%s)\\n"""		1391112	1					
ANR	1391255	PrimaryExpression	"""%s (%s) => (%s)\\n"""		1391112	0					
ANR	1391256	Argument	op		1391112	2					
ANR	1391257	Identifier	op		1391112	0					
ANR	1391258	Argument	p		1391112	3					
ANR	1391259	Identifier	p		1391112	0					
ANR	1391260	Argument	dst		1391112	4					
ANR	1391261	Identifier	dst		1391112	0					
ANR	1391262	ExpressionStatement	free ( p )	145:1:3542:3550	1391112	8	True				
ANR	1391263	CallExpression	free ( p )		1391112	0					
ANR	1391264	Callee	free		1391112	0					
ANR	1391265	Identifier	free		1391112	0					
ANR	1391266	ArgumentList	p		1391112	1					
ANR	1391267	Argument	p		1391112	0					
ANR	1391268	Identifier	p		1391112	0					
ANR	1391269	ReturnType	static void		1391112	1					
ANR	1391270	Identifier	emit_branch		1391112	2					
ANR	1391271	ParameterList	"REgg * egg , char * b , char * g , char * e , char * n , int sz , const char * dst"		1391112	3					
ANR	1391272	Parameter	REgg * egg	114:24:2939:2947	1391112	0	True				
ANR	1391273	ParameterType	REgg *		1391112	0					
ANR	1391274	Identifier	egg		1391112	1					
ANR	1391275	Parameter	char * b	114:35:2950:2956	1391112	1	True				
ANR	1391276	ParameterType	char *		1391112	0					
ANR	1391277	Identifier	b		1391112	1					
ANR	1391278	Parameter	char * g	114:44:2959:2965	1391112	2	True				
ANR	1391279	ParameterType	char *		1391112	0					
ANR	1391280	Identifier	g		1391112	1					
ANR	1391281	Parameter	char * e	114:53:2968:2974	1391112	3	True				
ANR	1391282	ParameterType	char *		1391112	0					
ANR	1391283	Identifier	e		1391112	1					
ANR	1391284	Parameter	char * n	114:62:2977:2983	1391112	4	True				
ANR	1391285	ParameterType	char *		1391112	0					
ANR	1391286	Identifier	n		1391112	1					
ANR	1391287	Parameter	int sz	114:71:2986:2991	1391112	5	True				
ANR	1391288	ParameterType	int		1391112	0					
ANR	1391289	Identifier	sz		1391112	1					
ANR	1391290	Parameter	const char * dst	114:79:2994:3008	1391112	6	True				
ANR	1391291	ParameterType	const char *		1391112	0					
ANR	1391292	Identifier	dst		1391112	1					
ANR	1391293	CFGEntryNode	ENTRY		1391112		True				
ANR	1391294	CFGExitNode	EXIT		1391112		True				
ANR	1391295	Symbol	r_egg_mkvar		1391112						
ANR	1391296	Symbol	op		1391112						
ANR	1391297	Symbol	b		1391112						
ANR	1391298	Symbol	NULL		1391112						
ANR	1391299	Symbol	egg		1391112						
ANR	1391300	Symbol	dst		1391112						
ANR	1391301	Symbol	e		1391112						
ANR	1391302	Symbol	g		1391112						
ANR	1391303	Symbol	sz		1391112						
ANR	1391304	Symbol	* b		1391112						
ANR	1391305	Symbol	n		1391112						
ANR	1391306	Symbol	p		1391112						
ANR	1391307	Symbol	str		1391112						
ANR	1391308	Symbol	* g		1391112						
ANR	1391309	Symbol	arg		1391112						
ANR	1391310	Symbol	* arg		1391112						
ANR	1391311	Function	emit_load	149:0:3579:3692							
ANR	1391312	FunctionDef	"emit_load (REgg * egg , const char * dst , int sz)"		1391311	0					
ANR	1391313	CompoundStatement		149:58:3637:3692	1391311	0					
ANR	1391314	ExpressionStatement	"r_egg_printf ( egg , ""load (\\""%s\\"", %c)\\n"" , dst , sz )"	150:1:3640:3690	1391311	0	True				
ANR	1391315	CallExpression	"r_egg_printf ( egg , ""load (\\""%s\\"", %c)\\n"" , dst , sz )"		1391311	0					
ANR	1391316	Callee	r_egg_printf		1391311	0					
ANR	1391317	Identifier	r_egg_printf		1391311	0					
ANR	1391318	ArgumentList	egg		1391311	1					
ANR	1391319	Argument	egg		1391311	0					
ANR	1391320	Identifier	egg		1391311	0					
ANR	1391321	Argument	"""load (\\""%s\\"", %c)\\n"""		1391311	1					
ANR	1391322	PrimaryExpression	"""load (\\""%s\\"", %c)\\n"""		1391311	0					
ANR	1391323	Argument	dst		1391311	2					
ANR	1391324	Identifier	dst		1391311	0					
ANR	1391325	Argument	sz		1391311	3					
ANR	1391326	Identifier	sz		1391311	0					
ANR	1391327	ReturnType	static void		1391311	1					
ANR	1391328	Identifier	emit_load		1391311	2					
ANR	1391329	ParameterList	"REgg * egg , const char * dst , int sz"		1391311	3					
ANR	1391330	Parameter	REgg * egg	149:22:3601:3609	1391311	0	True				
ANR	1391331	ParameterType	REgg *		1391311	0					
ANR	1391332	Identifier	egg		1391311	1					
ANR	1391333	Parameter	const char * dst	149:33:3612:3626	1391311	1	True				
ANR	1391334	ParameterType	const char *		1391311	0					
ANR	1391335	Identifier	dst		1391311	1					
ANR	1391336	Parameter	int sz	149:50:3629:3634	1391311	2	True				
ANR	1391337	ParameterType	int		1391311	0					
ANR	1391338	Identifier	sz		1391311	1					
ANR	1391339	CFGEntryNode	ENTRY		1391311		True				
ANR	1391340	CFGExitNode	EXIT		1391311		True				
ANR	1391341	Symbol	egg		1391311						
ANR	1391342	Symbol	dst		1391311						
ANR	1391343	Symbol	sz		1391311						
ANR	1391344	Function	emit_mathop	153:0:3695:4396							
ANR	1391345	FunctionDef	"emit_mathop (REgg * egg , int ch , int vs , int type , const char * eq , const char * p)"		1391344	0					
ANR	1391346	CompoundStatement		153:92:3787:4396	1391344	0					
ANR	1391347	IdentifierDeclStatement	char * op ;	154:1:3790:3798	1391344	0	True				
ANR	1391348	IdentifierDecl	* op		1391344	0					
ANR	1391349	IdentifierDeclType	char *		1391344	0					
ANR	1391350	Identifier	op		1391344	1					
ANR	1391351	SwitchStatement	switch ( ch )		1391344	1					
ANR	1391352	Condition	ch	155:9:3809:3810	1391344	0	True				
ANR	1391353	Identifier	ch		1391344	0					
ANR	1391354	CompoundStatement		3:13:25:25	1391344	1					
ANR	1391355	Label	case '^' :	156:1:3816:3824	1391344	0	True				
ANR	1391356	ExpressionStatement	"op = ""eor"""	156:11:3826:3836	1391344	1	True				
ANR	1391357	AssignmentExpression	"op = ""eor"""		1391344	0		=			
ANR	1391358	Identifier	op		1391344	0					
ANR	1391359	PrimaryExpression	"""eor"""		1391344	1					
ANR	1391360	BreakStatement	break ;	156:23:3838:3843	1391344	2	True				
ANR	1391361	Label	case '&' :	157:1:3846:3854	1391344	3	True				
ANR	1391362	ExpressionStatement	"op = ""and"""	157:11:3856:3866	1391344	4	True				
ANR	1391363	AssignmentExpression	"op = ""and"""		1391344	0		=			
ANR	1391364	Identifier	op		1391344	0					
ANR	1391365	PrimaryExpression	"""and"""		1391344	1					
ANR	1391366	BreakStatement	break ;	157:23:3868:3873	1391344	5	True				
ANR	1391367	Label	case '|' :	158:1:3876:3884	1391344	6	True				
ANR	1391368	ExpressionStatement	"op = ""orr"""	158:11:3886:3896	1391344	7	True				
ANR	1391369	AssignmentExpression	"op = ""orr"""		1391344	0		=			
ANR	1391370	Identifier	op		1391344	0					
ANR	1391371	PrimaryExpression	"""orr"""		1391344	1					
ANR	1391372	BreakStatement	break ;	158:23:3898:3903	1391344	8	True				
ANR	1391373	Label	case '-' :	159:1:3906:3914	1391344	9	True				
ANR	1391374	ExpressionStatement	"op = ""sub"""	159:11:3916:3926	1391344	10	True				
ANR	1391375	AssignmentExpression	"op = ""sub"""		1391344	0		=			
ANR	1391376	Identifier	op		1391344	0					
ANR	1391377	PrimaryExpression	"""sub"""		1391344	1					
ANR	1391378	BreakStatement	break ;	159:23:3928:3933	1391344	11	True				
ANR	1391379	Label	case '+' :	160:1:3936:3944	1391344	12	True				
ANR	1391380	ExpressionStatement	"op = ""add"""	160:11:3946:3956	1391344	13	True				
ANR	1391381	AssignmentExpression	"op = ""add"""		1391344	0		=			
ANR	1391382	Identifier	op		1391344	0					
ANR	1391383	PrimaryExpression	"""add"""		1391344	1					
ANR	1391384	BreakStatement	break ;	160:23:3958:3963	1391344	14	True				
ANR	1391385	Label	case '*' :	161:1:3966:3974	1391344	15	True				
ANR	1391386	ExpressionStatement	"op = ""mul"""	161:11:3976:3986	1391344	16	True				
ANR	1391387	AssignmentExpression	"op = ""mul"""		1391344	0		=			
ANR	1391388	Identifier	op		1391344	0					
ANR	1391389	PrimaryExpression	"""mul"""		1391344	1					
ANR	1391390	BreakStatement	break ;	161:23:3988:3993	1391344	17	True				
ANR	1391391	Label	case '/' :	162:1:3996:4004	1391344	18	True				
ANR	1391392	ExpressionStatement	"op = ""div"""	162:11:4006:4016	1391344	19	True				
ANR	1391393	AssignmentExpression	"op = ""div"""		1391344	0		=			
ANR	1391394	Identifier	op		1391344	0					
ANR	1391395	PrimaryExpression	"""div"""		1391344	1					
ANR	1391396	BreakStatement	break ;	162:23:4018:4023	1391344	20	True				
ANR	1391397	Label	default :	163:1:4026:4033	1391344	21	True				
ANR	1391398	Identifier	default		1391344	0					
ANR	1391399	ExpressionStatement	"op = ""mov"""	163:11:4036:4046	1391344	22	True				
ANR	1391400	AssignmentExpression	"op = ""mov"""		1391344	0		=			
ANR	1391401	Identifier	op		1391344	0					
ANR	1391402	PrimaryExpression	"""mov"""		1391344	1					
ANR	1391403	BreakStatement	break ;	163:23:4048:4053	1391344	23	True				
ANR	1391404	IfStatement	if ( ! eq )		1391344	2					
ANR	1391405	Condition	! eq	165:5:4063:4065	1391344	0	True				
ANR	1391406	UnaryOperationExpression	! eq		1391344	0					
ANR	1391407	UnaryOperator	!		1391344	0					
ANR	1391408	Identifier	eq		1391344	1					
ANR	1391409	CompoundStatement		13:10:280:280	1391344	1					
ANR	1391410	ExpressionStatement	eq = R_AX	166:2:4072:4081	1391344	0	True				
ANR	1391411	AssignmentExpression	eq = R_AX		1391344	0		=			
ANR	1391412	Identifier	eq		1391344	0					
ANR	1391413	Identifier	R_AX		1391344	1					
ANR	1391414	IfStatement	if ( ! p )		1391344	3					
ANR	1391415	Condition	! p	168:5:4091:4092	1391344	0	True				
ANR	1391416	UnaryOperationExpression	! p		1391344	0					
ANR	1391417	UnaryOperator	!		1391344	0					
ANR	1391418	Identifier	p		1391344	1					
ANR	1391419	CompoundStatement		16:9:307:307	1391344	1					
ANR	1391420	ExpressionStatement	p = R_AX	169:2:4099:4107	1391344	0	True				
ANR	1391421	AssignmentExpression	p = R_AX		1391344	0		=			
ANR	1391422	Identifier	p		1391344	0					
ANR	1391423	Identifier	R_AX		1391344	1					
ANR	1391424	ExpressionStatement	"eprintf ( ""TYPE = %c\\n"" , type )"	173:1:4129:4158	1391344	4	True				
ANR	1391425	CallExpression	"eprintf ( ""TYPE = %c\\n"" , type )"		1391344	0					
ANR	1391426	Callee	eprintf		1391344	0					
ANR	1391427	Identifier	eprintf		1391344	0					
ANR	1391428	ArgumentList	"""TYPE = %c\\n"""		1391344	1					
ANR	1391429	Argument	"""TYPE = %c\\n"""		1391344	0					
ANR	1391430	PrimaryExpression	"""TYPE = %c\\n"""		1391344	0					
ANR	1391431	Argument	type		1391344	1					
ANR	1391432	Identifier	type		1391344	0					
ANR	1391433	ExpressionStatement	"eprintf ( ""  %s%c %c%s, %s\\n"" , op , vs , type , eq , p )"	174:1:4161:4211	1391344	5	True				
ANR	1391434	CallExpression	"eprintf ( ""  %s%c %c%s, %s\\n"" , op , vs , type , eq , p )"		1391344	0					
ANR	1391435	Callee	eprintf		1391344	0					
ANR	1391436	Identifier	eprintf		1391344	0					
ANR	1391437	ArgumentList	"""  %s%c %c%s, %s\\n"""		1391344	1					
ANR	1391438	Argument	"""  %s%c %c%s, %s\\n"""		1391344	0					
ANR	1391439	PrimaryExpression	"""  %s%c %c%s, %s\\n"""		1391344	0					
ANR	1391440	Argument	op		1391344	1					
ANR	1391441	Identifier	op		1391344	0					
ANR	1391442	Argument	vs		1391344	2					
ANR	1391443	Identifier	vs		1391344	0					
ANR	1391444	Argument	type		1391344	3					
ANR	1391445	Identifier	type		1391344	0					
ANR	1391446	Argument	eq		1391344	4					
ANR	1391447	Identifier	eq		1391344	0					
ANR	1391448	Argument	p		1391344	5					
ANR	1391449	Identifier	p		1391344	0					
ANR	1391450	ExpressionStatement	"eprintf ( ""  %s %s, [%s]\\n"" , op , p , eq )"	175:1:4214:4252	1391344	6	True				
ANR	1391451	CallExpression	"eprintf ( ""  %s %s, [%s]\\n"" , op , p , eq )"		1391344	0					
ANR	1391452	Callee	eprintf		1391344	0					
ANR	1391453	Identifier	eprintf		1391344	0					
ANR	1391454	ArgumentList	"""  %s %s, [%s]\\n"""		1391344	1					
ANR	1391455	Argument	"""  %s %s, [%s]\\n"""		1391344	0					
ANR	1391456	PrimaryExpression	"""  %s %s, [%s]\\n"""		1391344	0					
ANR	1391457	Argument	op		1391344	1					
ANR	1391458	Identifier	op		1391344	0					
ANR	1391459	Argument	p		1391344	2					
ANR	1391460	Identifier	p		1391344	0					
ANR	1391461	Argument	eq		1391344	3					
ANR	1391462	Identifier	eq		1391344	0					
ANR	1391463	IfStatement	if ( type == '*' )		1391344	7					
ANR	1391464	Condition	type == '*'	177:5:4266:4276	1391344	0	True				
ANR	1391465	EqualityExpression	type == '*'		1391344	0		==			
ANR	1391466	Identifier	type		1391344	0					
ANR	1391467	PrimaryExpression	'*'		1391344	1					
ANR	1391468	CompoundStatement		25:18:491:491	1391344	1					
ANR	1391469	ExpressionStatement	"r_egg_printf ( egg , ""%s (%s, [%s])\\n"" , op , p , eq )"	178:2:4283:4331	1391344	0	True				
ANR	1391470	CallExpression	"r_egg_printf ( egg , ""%s (%s, [%s])\\n"" , op , p , eq )"		1391344	0					
ANR	1391471	Callee	r_egg_printf		1391344	0					
ANR	1391472	Identifier	r_egg_printf		1391344	0					
ANR	1391473	ArgumentList	egg		1391344	1					
ANR	1391474	Argument	egg		1391344	0					
ANR	1391475	Identifier	egg		1391344	0					
ANR	1391476	Argument	"""%s (%s, [%s])\\n"""		1391344	1					
ANR	1391477	PrimaryExpression	"""%s (%s, [%s])\\n"""		1391344	0					
ANR	1391478	Argument	op		1391344	2					
ANR	1391479	Identifier	op		1391344	0					
ANR	1391480	Argument	p		1391344	3					
ANR	1391481	Identifier	p		1391344	0					
ANR	1391482	Argument	eq		1391344	4					
ANR	1391483	Identifier	eq		1391344	0					
ANR	1391484	ElseStatement	else		1391344	0					
ANR	1391485	CompoundStatement		27:8:553:553	1391344	0					
ANR	1391486	ExpressionStatement	"r_egg_printf ( egg , ""%s (%s, %s)\\n"" , op , p , eq )"	180:2:4345:4391	1391344	0	True				
ANR	1391487	CallExpression	"r_egg_printf ( egg , ""%s (%s, %s)\\n"" , op , p , eq )"		1391344	0					
ANR	1391488	Callee	r_egg_printf		1391344	0					
ANR	1391489	Identifier	r_egg_printf		1391344	0					
ANR	1391490	ArgumentList	egg		1391344	1					
ANR	1391491	Argument	egg		1391344	0					
ANR	1391492	Identifier	egg		1391344	0					
ANR	1391493	Argument	"""%s (%s, %s)\\n"""		1391344	1					
ANR	1391494	PrimaryExpression	"""%s (%s, %s)\\n"""		1391344	0					
ANR	1391495	Argument	op		1391344	2					
ANR	1391496	Identifier	op		1391344	0					
ANR	1391497	Argument	p		1391344	3					
ANR	1391498	Identifier	p		1391344	0					
ANR	1391499	Argument	eq		1391344	4					
ANR	1391500	Identifier	eq		1391344	0					
ANR	1391501	ReturnType	static void		1391344	1					
ANR	1391502	Identifier	emit_mathop		1391344	2					
ANR	1391503	ParameterList	"REgg * egg , int ch , int vs , int type , const char * eq , const char * p"		1391344	3					
ANR	1391504	Parameter	REgg * egg	153:24:3719:3727	1391344	0	True				
ANR	1391505	ParameterType	REgg *		1391344	0					
ANR	1391506	Identifier	egg		1391344	1					
ANR	1391507	Parameter	int ch	153:35:3730:3735	1391344	1	True				
ANR	1391508	ParameterType	int		1391344	0					
ANR	1391509	Identifier	ch		1391344	1					
ANR	1391510	Parameter	int vs	153:43:3738:3743	1391344	2	True				
ANR	1391511	ParameterType	int		1391344	0					
ANR	1391512	Identifier	vs		1391344	1					
ANR	1391513	Parameter	int type	153:51:3746:3753	1391344	3	True				
ANR	1391514	ParameterType	int		1391344	0					
ANR	1391515	Identifier	type		1391344	1					
ANR	1391516	Parameter	const char * eq	153:61:3756:3769	1391344	4	True				
ANR	1391517	ParameterType	const char *		1391344	0					
ANR	1391518	Identifier	eq		1391344	1					
ANR	1391519	Parameter	const char * p	153:77:3772:3784	1391344	5	True				
ANR	1391520	ParameterType	const char *		1391344	0					
ANR	1391521	Identifier	p		1391344	1					
ANR	1391522	CFGEntryNode	ENTRY		1391344		True				
ANR	1391523	CFGExitNode	EXIT		1391344		True				
ANR	1391524	Symbol	p		1391344						
ANR	1391525	Symbol	op		1391344						
ANR	1391526	Symbol	R_AX		1391344						
ANR	1391527	Symbol	egg		1391344						
ANR	1391528	Symbol	ch		1391344						
ANR	1391529	Symbol	type		1391344						
ANR	1391530	Symbol	eq		1391344						
ANR	1391531	Symbol	vs		1391344						
ANR	1391532	Function	emit_regs	184:0:4399:4475							
ANR	1391533	FunctionDef	"emit_regs (REgg * egg , int idx)"		1391532	0					
ANR	1391534	CompoundStatement		184:49:4448:4475	1391532	0					
ANR	1391535	ReturnStatement	return regs [ idx % R_NGP ] ;	185:1:4451:4473	1391532	0	True				
ANR	1391536	ArrayIndexing	regs [ idx % R_NGP ]		1391532	0					
ANR	1391537	Identifier	regs		1391532	0					
ANR	1391538	MultiplicativeExpression	idx % R_NGP		1391532	1		%			
ANR	1391539	Identifier	idx		1391532	0					
ANR	1391540	Identifier	R_NGP		1391532	1					
ANR	1391541	ReturnType	static const char *		1391532	1					
ANR	1391542	Identifier	emit_regs		1391532	2					
ANR	1391543	ParameterList	"REgg * egg , int idx"		1391532	3					
ANR	1391544	Parameter	REgg * egg	184:29:4428:4436	1391532	0	True				
ANR	1391545	ParameterType	REgg *		1391532	0					
ANR	1391546	Identifier	egg		1391532	1					
ANR	1391547	Parameter	int idx	184:40:4439:4445	1391532	1	True				
ANR	1391548	ParameterType	int		1391532	0					
ANR	1391549	Identifier	idx		1391532	1					
ANR	1391550	CFGEntryNode	ENTRY		1391532		True				
ANR	1391551	CFGExitNode	EXIT		1391532		True				
ANR	1391552	Symbol	egg		1391532						
ANR	1391553	Symbol	* R_NGP		1391532						
ANR	1391554	Symbol	R_NGP		1391532						
ANR	1391555	Symbol	* regs		1391532						
ANR	1391556	Symbol	* idx		1391532						
ANR	1391557	Symbol	regs		1391532						
ANR	1391558	Symbol	idx		1391532						
ANR	1391559	DeclStmt									
ANR	1391560	Decl							REggEmit	REggEmit	EMIT_NAME
