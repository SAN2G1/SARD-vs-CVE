command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	2550369	File	data/converged/CVE-2019-16718~_radare2/libr_asm_arch_arc_gnu_arc-ext.c								
ANR	2550370	ClassDef	ExtInstruction	71:0:2975:3157							
ANR	2550371	DeclStmt									
ANR	2550372	Decl							char	char	major
ANR	2550373	DeclStmt									
ANR	2550374	Decl							char	char	minor
ANR	2550375	DeclStmt									
ANR	2550376	Decl							char	char	flags
ANR	2550377	DeclStmt									
ANR	2550378	Decl							char	char *	name
ANR	2550379	DeclStmt									
ANR	2550380	Decl							struct ExtInstruction	struct ExtInstruction *	next
ANR	2550381	ClassDef	ExtAuxRegister	80:0:3161:3281							
ANR	2550382	DeclStmt									
ANR	2550383	Decl							long	long	address
ANR	2550384	DeclStmt									
ANR	2550385	Decl							char	char *	name
ANR	2550386	DeclStmt									
ANR	2550387	Decl							struct ExtAuxRegister	struct ExtAuxRegister *	next
ANR	2550388	ClassDef	ExtCoreRegister	87:0:3285:3388							
ANR	2550389	DeclStmt									
ANR	2550390	Decl							short	short	number
ANR	2550391	DeclStmt									
ANR	2550392	Decl							enum ExtReadWrite	enum ExtReadWrite	rw
ANR	2550393	DeclStmt									
ANR	2550394	Decl							char	char *	name
ANR	2550395	ClassDef	arcExtMap	94:0:3392:3609							
ANR	2550396	DeclStmt									
ANR	2550397	Decl							struct ExtAuxRegister	struct ExtAuxRegister *	auxRegisters
ANR	2550398	DeclStmt									
ANR	2550399	Decl							struct ExtInstruction	struct ExtInstruction * [ INST_HASH_SIZE ]	instructions
ANR	2550400	DeclStmt									
ANR	2550401	Decl							struct ExtCoreRegister	struct ExtCoreRegister [ NUM_EXT_CORE ]	coreRegisters
ANR	2550402	DeclStmt									
ANR	2550403	Decl							char	char * [ NUM_EXT_COND ]	condCodes
ANR	2550404	DeclStmt									
ANR	2550405	Decl							struct arcExtMap	struct arcExtMap	arc_extension_map
ANR	2550406	Function	create_map	124:0:4564:7463							
ANR	2550407	FunctionDef	"create_map (unsigned char * block , unsigned long length)"		2550406	0					
ANR	2550408	CompoundStatement		125:0:4631:7463	2550406	0					
ANR	2550409	IdentifierDeclStatement	unsigned char * p = block ;	126:2:4635:4659	2550406	0	True				
ANR	2550410	IdentifierDecl	* p = block		2550406	0					
ANR	2550411	IdentifierDeclType	unsigned char *		2550406	0					
ANR	2550412	Identifier	p		2550406	1					
ANR	2550413	AssignmentExpression	* p = block		2550406	2		=			
ANR	2550414	Identifier	block		2550406	0					
ANR	2550415	Identifier	block		2550406	1					
ANR	2550416	WhileStatement	while ( p && p < ( block + length ) )		2550406	1					
ANR	2550417	Condition	p && p < ( block + length )	130:9:4707:4731	2550406	0	True				
ANR	2550418	AndExpression	p && p < ( block + length )		2550406	0		&&			
ANR	2550419	Identifier	p		2550406	0					
ANR	2550420	RelationalExpression	p < ( block + length )		2550406	1		<			
ANR	2550421	Identifier	p		2550406	0					
ANR	2550422	AdditiveExpression	block + length		2550406	1		+			
ANR	2550423	Identifier	block		2550406	0					
ANR	2550424	Identifier	length		2550406	1					
ANR	2550425	CompoundStatement		7:4:106:106	2550406	1					
ANR	2550426	IfStatement	if ( p [ 0 ] == 0 )		2550406	0					
ANR	2550427	Condition	p [ 0 ] == 0	148:10:5181:5189	2550406	0	True				
ANR	2550428	EqualityExpression	p [ 0 ] == 0		2550406	0		==			
ANR	2550429	ArrayIndexing	p [ 0 ]		2550406	0					
ANR	2550430	Identifier	p		2550406	0					
ANR	2550431	PrimaryExpression	0		2550406	1					
ANR	2550432	PrimaryExpression	0		2550406	1					
ANR	2550433	BreakStatement	break ;	149:1:5193:5198	2550406	1	True				
ANR	2550434	SwitchStatement	switch ( p [ 1 ] )		2550406	1					
ANR	2550435	Condition	p [ 1 ]	153:14:5270:5273	2550406	0	True				
ANR	2550436	ArrayIndexing	p [ 1 ]		2550406	0					
ANR	2550437	Identifier	p		2550406	0					
ANR	2550438	PrimaryExpression	1		2550406	1					
ANR	2550439	CompoundStatement		30:1:645:645	2550406	1					
ANR	2550440	Label	case EXT_INSTRUCTION :	155:1:5291:5311	2550406	0	True				
ANR	2550441	Identifier	EXT_INSTRUCTION		2550406	0					
ANR	2550442	CompoundStatement		36:5:843:952	2550406	1					
ANR	2550443	Statement	struct	157:5:5323:5328	2550406	0	True				
ANR	2550444	Statement	ExtInstruction	157:12:5330:5343	2550406	1	True				
ANR	2550445	Statement	*	157:28:5346:5346	2550406	2	True				
ANR	2550446	Statement	insn	157:29:5347:5350	2550406	3	True				
ANR	2550447	Statement	=	157:34:5352:5352	2550406	4	True				
ANR	2550448	Statement	XNEW	157:36:5354:5357	2550406	5	True				
ANR	2550449	Statement	(	157:41:5359:5359	2550406	6	True				
ANR	2550450	Statement	struct	157:42:5360:5365	2550406	7	True				
ANR	2550451	Statement	ExtInstruction	157:49:5367:5380	2550406	8	True				
ANR	2550452	Statement	)	157:63:5381:5381	2550406	9	True				
ANR	2550453	ExpressionStatement		157:64:5382:5382	2550406	10	True				
ANR	2550454	IdentifierDeclStatement	int major = p [ 2 ] ;	158:5:5389:5425	2550406	11	True				
ANR	2550455	IdentifierDecl	major = p [ 2 ]		2550406	0					
ANR	2550456	IdentifierDeclType	int		2550406	0					
ANR	2550457	Identifier	major		2550406	1					
ANR	2550458	AssignmentExpression	major = p [ 2 ]		2550406	2		=			
ANR	2550459	Identifier	major		2550406	0					
ANR	2550460	ArrayIndexing	p [ 2 ]		2550406	1					
ANR	2550461	Identifier	p		2550406	0					
ANR	2550462	PrimaryExpression	2		2550406	1					
ANR	2550463	IdentifierDeclStatement	int minor = p [ 3 ] ;	159:5:5432:5468	2550406	12	True				
ANR	2550464	IdentifierDecl	minor = p [ 3 ]		2550406	0					
ANR	2550465	IdentifierDeclType	int		2550406	0					
ANR	2550466	Identifier	minor		2550406	1					
ANR	2550467	AssignmentExpression	minor = p [ 3 ]		2550406	2		=			
ANR	2550468	Identifier	minor		2550406	0					
ANR	2550469	ArrayIndexing	p [ 3 ]		2550406	1					
ANR	2550470	Identifier	p		2550406	0					
ANR	2550471	PrimaryExpression	3		2550406	1					
ANR	2550472	IdentifierDeclStatement	"struct ExtInstruction * * bucket = & arc_extension_map . instructions [ INST_HASH ( major , minor ) ] ;"	160:5:5475:5584	2550406	13	True				
ANR	2550473	IdentifierDecl	"* * bucket = & arc_extension_map . instructions [ INST_HASH ( major , minor ) ]"		2550406	0					
ANR	2550474	IdentifierDeclType	struct ExtInstruction * *		2550406	0					
ANR	2550475	Identifier	bucket		2550406	1					
ANR	2550476	AssignmentExpression	"* * bucket = & arc_extension_map . instructions [ INST_HASH ( major , minor ) ]"		2550406	2		=			
ANR	2550477	Identifier	bucket		2550406	0					
ANR	2550478	UnaryOperationExpression	"& arc_extension_map . instructions [ INST_HASH ( major , minor ) ]"		2550406	1					
ANR	2550479	UnaryOperator	&		2550406	0					
ANR	2550480	ArrayIndexing	"arc_extension_map . instructions [ INST_HASH ( major , minor ) ]"		2550406	1					
ANR	2550481	MemberAccess	arc_extension_map . instructions		2550406	0					
ANR	2550482	Identifier	arc_extension_map		2550406	0					
ANR	2550483	Identifier	instructions		2550406	1					
ANR	2550484	CallExpression	"INST_HASH ( major , minor )"		2550406	1					
ANR	2550485	Callee	INST_HASH		2550406	0					
ANR	2550486	Identifier	INST_HASH		2550406	0					
ANR	2550487	ArgumentList	major		2550406	1					
ANR	2550488	Argument	major		2550406	0					
ANR	2550489	Identifier	major		2550406	0					
ANR	2550490	Argument	minor		2550406	1					
ANR	2550491	Identifier	minor		2550406	0					
ANR	2550492	ExpressionStatement	insn -> name = strdup ( ( char * ) ( p + 5 ) )	163:5:5592:5629	2550406	14	True				
ANR	2550493	AssignmentExpression	insn -> name = strdup ( ( char * ) ( p + 5 ) )		2550406	0		=			
ANR	2550494	PtrMemberAccess	insn -> name		2550406	0					
ANR	2550495	Identifier	insn		2550406	0					
ANR	2550496	Identifier	name		2550406	1					
ANR	2550497	CallExpression	strdup ( ( char * ) ( p + 5 ) )		2550406	1					
ANR	2550498	Callee	strdup		2550406	0					
ANR	2550499	Identifier	strdup		2550406	0					
ANR	2550500	ArgumentList	( char * ) ( p + 5 )		2550406	1					
ANR	2550501	Argument	( char * ) ( p + 5 )		2550406	0					
ANR	2550502	CastExpression	( char * ) ( p + 5 )		2550406	0					
ANR	2550503	CastTarget	char *		2550406	0					
ANR	2550504	AdditiveExpression	p + 5		2550406	1		+			
ANR	2550505	Identifier	p		2550406	0					
ANR	2550506	PrimaryExpression	5		2550406	1					
ANR	2550507	ExpressionStatement	insn -> major = major	164:5:5636:5655	2550406	15	True				
ANR	2550508	AssignmentExpression	insn -> major = major		2550406	0		=			
ANR	2550509	PtrMemberAccess	insn -> major		2550406	0					
ANR	2550510	Identifier	insn		2550406	0					
ANR	2550511	Identifier	major		2550406	1					
ANR	2550512	Identifier	major		2550406	1					
ANR	2550513	ExpressionStatement	insn -> minor = minor	165:5:5662:5681	2550406	16	True				
ANR	2550514	AssignmentExpression	insn -> minor = minor		2550406	0		=			
ANR	2550515	PtrMemberAccess	insn -> minor		2550406	0					
ANR	2550516	Identifier	insn		2550406	0					
ANR	2550517	Identifier	minor		2550406	1					
ANR	2550518	Identifier	minor		2550406	1					
ANR	2550519	ExpressionStatement	insn -> flags = p [ 4 ]	166:5:5688:5706	2550406	17	True				
ANR	2550520	AssignmentExpression	insn -> flags = p [ 4 ]		2550406	0		=			
ANR	2550521	PtrMemberAccess	insn -> flags		2550406	0					
ANR	2550522	Identifier	insn		2550406	0					
ANR	2550523	Identifier	flags		2550406	1					
ANR	2550524	ArrayIndexing	p [ 4 ]		2550406	1					
ANR	2550525	Identifier	p		2550406	0					
ANR	2550526	PrimaryExpression	4		2550406	1					
ANR	2550527	ExpressionStatement	insn -> next = * bucket	167:5:5713:5734	2550406	18	True				
ANR	2550528	AssignmentExpression	insn -> next = * bucket		2550406	0		=			
ANR	2550529	PtrMemberAccess	insn -> next		2550406	0					
ANR	2550530	Identifier	insn		2550406	0					
ANR	2550531	Identifier	next		2550406	1					
ANR	2550532	UnaryOperationExpression	* bucket		2550406	1					
ANR	2550533	UnaryOperator	*		2550406	0					
ANR	2550534	Identifier	bucket		2550406	1					
ANR	2550535	ExpressionStatement	* bucket = insn	168:5:5741:5755	2550406	19	True				
ANR	2550536	AssignmentExpression	* bucket = insn		2550406	0		=			
ANR	2550537	UnaryOperationExpression	* bucket		2550406	0					
ANR	2550538	UnaryOperator	*		2550406	0					
ANR	2550539	Identifier	bucket		2550406	1					
ANR	2550540	Identifier	insn		2550406	1					
ANR	2550541	BreakStatement	break ;	169:5:5762:5767	2550406	20	True				
ANR	2550542	Label	case EXT_CORE_REGISTER :	172:1:5776:5798	2550406	2	True				
ANR	2550543	Identifier	EXT_CORE_REGISTER		2550406	0					
ANR	2550544	CompoundStatement		51:5:1212:1247	2550406	3					
ANR	2550545	IdentifierDeclStatement	unsigned char number = p [ 2 ] ;	174:5:5810:5837	2550406	0	True				
ANR	2550546	IdentifierDecl	number = p [ 2 ]		2550406	0					
ANR	2550547	IdentifierDeclType	unsigned char		2550406	0					
ANR	2550548	Identifier	number		2550406	1					
ANR	2550549	AssignmentExpression	number = p [ 2 ]		2550406	2		=			
ANR	2550550	Identifier	number		2550406	0					
ANR	2550551	ArrayIndexing	p [ 2 ]		2550406	1					
ANR	2550552	Identifier	p		2550406	0					
ANR	2550553	PrimaryExpression	2		2550406	1					
ANR	2550554	IdentifierDeclStatement	char * name = ( char * ) p + 3 ;	175:5:5844:5879	2550406	1	True				
ANR	2550555	IdentifierDecl	* name = ( char * ) p + 3		2550406	0					
ANR	2550556	IdentifierDeclType	char *		2550406	0					
ANR	2550557	Identifier	name		2550406	1					
ANR	2550558	AssignmentExpression	* name = ( char * ) p + 3		2550406	2		=			
ANR	2550559	Identifier	name		2550406	0					
ANR	2550560	AdditiveExpression	( char * ) p + 3		2550406	1		+			
ANR	2550561	CastExpression	( char * ) p		2550406	0					
ANR	2550562	CastTarget	char *		2550406	0					
ANR	2550563	Identifier	p		2550406	1					
ANR	2550564	PrimaryExpression	3		2550406	1					
ANR	2550565	ExpressionStatement	arc_extension_map . coreRegisters [ number - FIRST_EXTENSION_CORE_REGISTER ] . number = number	177:5:5887:5974	2550406	2	True				
ANR	2550566	AssignmentExpression	arc_extension_map . coreRegisters [ number - FIRST_EXTENSION_CORE_REGISTER ] . number = number		2550406	0		=			
ANR	2550567	MemberAccess	arc_extension_map . coreRegisters [ number - FIRST_EXTENSION_CORE_REGISTER ] . number		2550406	0					
ANR	2550568	ArrayIndexing	arc_extension_map . coreRegisters [ number - FIRST_EXTENSION_CORE_REGISTER ]		2550406	0					
ANR	2550569	MemberAccess	arc_extension_map . coreRegisters		2550406	0					
ANR	2550570	Identifier	arc_extension_map		2550406	0					
ANR	2550571	Identifier	coreRegisters		2550406	1					
ANR	2550572	AdditiveExpression	number - FIRST_EXTENSION_CORE_REGISTER		2550406	1		-			
ANR	2550573	Identifier	number		2550406	0					
ANR	2550574	Identifier	FIRST_EXTENSION_CORE_REGISTER		2550406	1					
ANR	2550575	Identifier	number		2550406	1					
ANR	2550576	Identifier	number		2550406	1					
ANR	2550577	ExpressionStatement	arc_extension_map . coreRegisters [ number - FIRST_EXTENSION_CORE_REGISTER ] . rw = REG_READWRITE	178:5:5981:6075	2550406	3	True				
ANR	2550578	AssignmentExpression	arc_extension_map . coreRegisters [ number - FIRST_EXTENSION_CORE_REGISTER ] . rw = REG_READWRITE		2550406	0		=			
ANR	2550579	MemberAccess	arc_extension_map . coreRegisters [ number - FIRST_EXTENSION_CORE_REGISTER ] . rw		2550406	0					
ANR	2550580	ArrayIndexing	arc_extension_map . coreRegisters [ number - FIRST_EXTENSION_CORE_REGISTER ]		2550406	0					
ANR	2550581	MemberAccess	arc_extension_map . coreRegisters		2550406	0					
ANR	2550582	Identifier	arc_extension_map		2550406	0					
ANR	2550583	Identifier	coreRegisters		2550406	1					
ANR	2550584	AdditiveExpression	number - FIRST_EXTENSION_CORE_REGISTER		2550406	1		-			
ANR	2550585	Identifier	number		2550406	0					
ANR	2550586	Identifier	FIRST_EXTENSION_CORE_REGISTER		2550406	1					
ANR	2550587	Identifier	rw		2550406	1					
ANR	2550588	Identifier	REG_READWRITE		2550406	1					
ANR	2550589	ExpressionStatement	arc_extension_map . coreRegisters [ number - FIRST_EXTENSION_CORE_REGISTER ] . name = strdup ( name )	179:5:6082:6176	2550406	4	True				
ANR	2550590	AssignmentExpression	arc_extension_map . coreRegisters [ number - FIRST_EXTENSION_CORE_REGISTER ] . name = strdup ( name )		2550406	0		=			
ANR	2550591	MemberAccess	arc_extension_map . coreRegisters [ number - FIRST_EXTENSION_CORE_REGISTER ] . name		2550406	0					
ANR	2550592	ArrayIndexing	arc_extension_map . coreRegisters [ number - FIRST_EXTENSION_CORE_REGISTER ]		2550406	0					
ANR	2550593	MemberAccess	arc_extension_map . coreRegisters		2550406	0					
ANR	2550594	Identifier	arc_extension_map		2550406	0					
ANR	2550595	Identifier	coreRegisters		2550406	1					
ANR	2550596	AdditiveExpression	number - FIRST_EXTENSION_CORE_REGISTER		2550406	1		-			
ANR	2550597	Identifier	number		2550406	0					
ANR	2550598	Identifier	FIRST_EXTENSION_CORE_REGISTER		2550406	1					
ANR	2550599	Identifier	name		2550406	1					
ANR	2550600	CallExpression	strdup ( name )		2550406	1					
ANR	2550601	Callee	strdup		2550406	0					
ANR	2550602	Identifier	strdup		2550406	0					
ANR	2550603	ArgumentList	name		2550406	1					
ANR	2550604	Argument	name		2550406	0					
ANR	2550605	Identifier	name		2550406	0					
ANR	2550606	BreakStatement	break ;	180:5:6183:6188	2550406	5	True				
ANR	2550607	Label	case EXT_LONG_CORE_REGISTER :	183:1:6197:6224	2550406	4	True				
ANR	2550608	Identifier	EXT_LONG_CORE_REGISTER		2550406	0					
ANR	2550609	CompoundStatement		63:5:1688:1719	2550406	5					
ANR	2550610	IdentifierDeclStatement	unsigned char number = p [ 2 ] ;	185:5:6236:6267	2550406	0	True				
ANR	2550611	IdentifierDecl	number = p [ 2 ]		2550406	0					
ANR	2550612	IdentifierDeclType	unsigned char		2550406	0					
ANR	2550613	Identifier	number		2550406	1					
ANR	2550614	AssignmentExpression	number = p [ 2 ]		2550406	2		=			
ANR	2550615	Identifier	number		2550406	0					
ANR	2550616	ArrayIndexing	p [ 2 ]		2550406	1					
ANR	2550617	Identifier	p		2550406	0					
ANR	2550618	PrimaryExpression	2		2550406	1					
ANR	2550619	IdentifierDeclStatement	char * name = ( char * ) p + 7 ;	186:5:6274:6313	2550406	1	True				
ANR	2550620	IdentifierDecl	* name = ( char * ) p + 7		2550406	0					
ANR	2550621	IdentifierDeclType	char *		2550406	0					
ANR	2550622	Identifier	name		2550406	1					
ANR	2550623	AssignmentExpression	* name = ( char * ) p + 7		2550406	2		=			
ANR	2550624	Identifier	name		2550406	0					
ANR	2550625	AdditiveExpression	( char * ) p + 7		2550406	1		+			
ANR	2550626	CastExpression	( char * ) p		2550406	0					
ANR	2550627	CastTarget	char *		2550406	0					
ANR	2550628	Identifier	p		2550406	1					
ANR	2550629	PrimaryExpression	7		2550406	1					
ANR	2550630	IdentifierDeclStatement	enum ExtReadWrite rw = p [ 6 ] ;	187:5:6320:6351	2550406	2	True				
ANR	2550631	IdentifierDecl	rw = p [ 6 ]		2550406	0					
ANR	2550632	IdentifierDeclType	enum ExtReadWrite		2550406	0					
ANR	2550633	Identifier	rw		2550406	1					
ANR	2550634	AssignmentExpression	rw = p [ 6 ]		2550406	2		=			
ANR	2550635	Identifier	rw		2550406	0					
ANR	2550636	ArrayIndexing	p [ 6 ]		2550406	1					
ANR	2550637	Identifier	p		2550406	0					
ANR	2550638	PrimaryExpression	6		2550406	1					
ANR	2550639	ExpressionStatement	arc_extension_map . coreRegisters [ number - FIRST_EXTENSION_CORE_REGISTER ] . number = number	189:5:6359:6446	2550406	3	True				
ANR	2550640	AssignmentExpression	arc_extension_map . coreRegisters [ number - FIRST_EXTENSION_CORE_REGISTER ] . number = number		2550406	0		=			
ANR	2550641	MemberAccess	arc_extension_map . coreRegisters [ number - FIRST_EXTENSION_CORE_REGISTER ] . number		2550406	0					
ANR	2550642	ArrayIndexing	arc_extension_map . coreRegisters [ number - FIRST_EXTENSION_CORE_REGISTER ]		2550406	0					
ANR	2550643	MemberAccess	arc_extension_map . coreRegisters		2550406	0					
ANR	2550644	Identifier	arc_extension_map		2550406	0					
ANR	2550645	Identifier	coreRegisters		2550406	1					
ANR	2550646	AdditiveExpression	number - FIRST_EXTENSION_CORE_REGISTER		2550406	1		-			
ANR	2550647	Identifier	number		2550406	0					
ANR	2550648	Identifier	FIRST_EXTENSION_CORE_REGISTER		2550406	1					
ANR	2550649	Identifier	number		2550406	1					
ANR	2550650	Identifier	number		2550406	1					
ANR	2550651	ExpressionStatement	arc_extension_map . coreRegisters [ number - FIRST_EXTENSION_CORE_REGISTER ] . rw = rw	190:5:6453:6536	2550406	4	True				
ANR	2550652	AssignmentExpression	arc_extension_map . coreRegisters [ number - FIRST_EXTENSION_CORE_REGISTER ] . rw = rw		2550406	0		=			
ANR	2550653	MemberAccess	arc_extension_map . coreRegisters [ number - FIRST_EXTENSION_CORE_REGISTER ] . rw		2550406	0					
ANR	2550654	ArrayIndexing	arc_extension_map . coreRegisters [ number - FIRST_EXTENSION_CORE_REGISTER ]		2550406	0					
ANR	2550655	MemberAccess	arc_extension_map . coreRegisters		2550406	0					
ANR	2550656	Identifier	arc_extension_map		2550406	0					
ANR	2550657	Identifier	coreRegisters		2550406	1					
ANR	2550658	AdditiveExpression	number - FIRST_EXTENSION_CORE_REGISTER		2550406	1		-			
ANR	2550659	Identifier	number		2550406	0					
ANR	2550660	Identifier	FIRST_EXTENSION_CORE_REGISTER		2550406	1					
ANR	2550661	Identifier	rw		2550406	1					
ANR	2550662	Identifier	rw		2550406	1					
ANR	2550663	ExpressionStatement	arc_extension_map . coreRegisters [ number - FIRST_EXTENSION_CORE_REGISTER ] . name = strdup ( name )	191:5:6543:6637	2550406	5	True				
ANR	2550664	AssignmentExpression	arc_extension_map . coreRegisters [ number - FIRST_EXTENSION_CORE_REGISTER ] . name = strdup ( name )		2550406	0		=			
ANR	2550665	MemberAccess	arc_extension_map . coreRegisters [ number - FIRST_EXTENSION_CORE_REGISTER ] . name		2550406	0					
ANR	2550666	ArrayIndexing	arc_extension_map . coreRegisters [ number - FIRST_EXTENSION_CORE_REGISTER ]		2550406	0					
ANR	2550667	MemberAccess	arc_extension_map . coreRegisters		2550406	0					
ANR	2550668	Identifier	arc_extension_map		2550406	0					
ANR	2550669	Identifier	coreRegisters		2550406	1					
ANR	2550670	AdditiveExpression	number - FIRST_EXTENSION_CORE_REGISTER		2550406	1		-			
ANR	2550671	Identifier	number		2550406	0					
ANR	2550672	Identifier	FIRST_EXTENSION_CORE_REGISTER		2550406	1					
ANR	2550673	Identifier	name		2550406	1					
ANR	2550674	CallExpression	strdup ( name )		2550406	1					
ANR	2550675	Callee	strdup		2550406	0					
ANR	2550676	Identifier	strdup		2550406	0					
ANR	2550677	ArgumentList	name		2550406	1					
ANR	2550678	Argument	name		2550406	0					
ANR	2550679	Identifier	name		2550406	0					
ANR	2550680	Label	case EXT_COND_CODE :	194:1:6646:6664	2550406	6	True				
ANR	2550681	Identifier	EXT_COND_CODE		2550406	0					
ANR	2550682	CompoundStatement		72:5:2044:2083	2550406	7					
ANR	2550683	IdentifierDeclStatement	char * cc_name = strdup ( ( char * ) ( p + 3 ) ) ;	196:5:6676:6715	2550406	0	True				
ANR	2550684	IdentifierDecl	* cc_name = strdup ( ( char * ) ( p + 3 ) )		2550406	0					
ANR	2550685	IdentifierDeclType	char *		2550406	0					
ANR	2550686	Identifier	cc_name		2550406	1					
ANR	2550687	AssignmentExpression	* cc_name = strdup ( ( char * ) ( p + 3 ) )		2550406	2		=			
ANR	2550688	Identifier	cc_name		2550406	0					
ANR	2550689	CallExpression	strdup ( ( char * ) ( p + 3 ) )		2550406	1					
ANR	2550690	Callee	strdup		2550406	0					
ANR	2550691	Identifier	strdup		2550406	0					
ANR	2550692	ArgumentList	( char * ) ( p + 3 )		2550406	1					
ANR	2550693	Argument	( char * ) ( p + 3 )		2550406	0					
ANR	2550694	CastExpression	( char * ) ( p + 3 )		2550406	0					
ANR	2550695	CastTarget	char *		2550406	0					
ANR	2550696	AdditiveExpression	p + 3		2550406	1		+			
ANR	2550697	Identifier	p		2550406	0					
ANR	2550698	PrimaryExpression	3		2550406	1					
ANR	2550699	ExpressionStatement	arc_extension_map . condCodes [ p [ 2 ] - FIRST_EXTENSION_CONDITION_CODE ] = cc_name	198:5:6723:6799	2550406	1	True				
ANR	2550700	AssignmentExpression	arc_extension_map . condCodes [ p [ 2 ] - FIRST_EXTENSION_CONDITION_CODE ] = cc_name		2550406	0		=			
ANR	2550701	ArrayIndexing	arc_extension_map . condCodes [ p [ 2 ] - FIRST_EXTENSION_CONDITION_CODE ]		2550406	0					
ANR	2550702	MemberAccess	arc_extension_map . condCodes		2550406	0					
ANR	2550703	Identifier	arc_extension_map		2550406	0					
ANR	2550704	Identifier	condCodes		2550406	1					
ANR	2550705	AdditiveExpression	p [ 2 ] - FIRST_EXTENSION_CONDITION_CODE		2550406	1		-			
ANR	2550706	ArrayIndexing	p [ 2 ]		2550406	0					
ANR	2550707	Identifier	p		2550406	0					
ANR	2550708	PrimaryExpression	2		2550406	1					
ANR	2550709	Identifier	FIRST_EXTENSION_CONDITION_CODE		2550406	1					
ANR	2550710	Identifier	cc_name		2550406	1					
ANR	2550711	BreakStatement	break ;	199:5:6806:6811	2550406	2	True				
ANR	2550712	Label	case EXT_AUX_REGISTER :	202:1:6820:6841	2550406	8	True				
ANR	2550713	Identifier	EXT_AUX_REGISTER		2550406	0					
ANR	2550714	CompoundStatement		82:5:2354:2394	2550406	9					
ANR	2550715	Statement	struct	205:5:6911:6916	2550406	0	True				
ANR	2550716	Statement	ExtAuxRegister	205:12:6918:6931	2550406	1	True				
ANR	2550717	Statement	*	205:27:6933:6933	2550406	2	True				
ANR	2550718	Statement	newAuxRegister	205:28:6934:6947	2550406	3	True				
ANR	2550719	Statement	=	205:43:6949:6949	2550406	4	True				
ANR	2550720	Statement	XNEW	205:45:6951:6954	2550406	5	True				
ANR	2550721	Statement	(	205:50:6956:6956	2550406	6	True				
ANR	2550722	Statement	struct	205:51:6957:6962	2550406	7	True				
ANR	2550723	Statement	ExtAuxRegister	205:58:6964:6977	2550406	8	True				
ANR	2550724	Statement	)	205:72:6978:6978	2550406	9	True				
ANR	2550725	ExpressionStatement		205:73:6979:6979	2550406	10	True				
ANR	2550726	IdentifierDeclStatement	char * aux_name = strdup ( ( char * ) ( p + 6 ) ) ;	206:5:6986:7026	2550406	11	True				
ANR	2550727	IdentifierDecl	* aux_name = strdup ( ( char * ) ( p + 6 ) )		2550406	0					
ANR	2550728	IdentifierDeclType	char *		2550406	0					
ANR	2550729	Identifier	aux_name		2550406	1					
ANR	2550730	AssignmentExpression	* aux_name = strdup ( ( char * ) ( p + 6 ) )		2550406	2		=			
ANR	2550731	Identifier	aux_name		2550406	0					
ANR	2550732	CallExpression	strdup ( ( char * ) ( p + 6 ) )		2550406	1					
ANR	2550733	Callee	strdup		2550406	0					
ANR	2550734	Identifier	strdup		2550406	0					
ANR	2550735	ArgumentList	( char * ) ( p + 6 )		2550406	1					
ANR	2550736	Argument	( char * ) ( p + 6 )		2550406	0					
ANR	2550737	CastExpression	( char * ) ( p + 6 )		2550406	0					
ANR	2550738	CastTarget	char *		2550406	0					
ANR	2550739	AdditiveExpression	p + 6		2550406	1		+			
ANR	2550740	Identifier	p		2550406	0					
ANR	2550741	PrimaryExpression	6		2550406	1					
ANR	2550742	ExpressionStatement	newAuxRegister -> name = aux_name	208:5:7034:7075	2550406	12	True				
ANR	2550743	AssignmentExpression	newAuxRegister -> name = aux_name		2550406	0		=			
ANR	2550744	PtrMemberAccess	newAuxRegister -> name		2550406	0					
ANR	2550745	Identifier	newAuxRegister		2550406	0					
ANR	2550746	Identifier	name		2550406	1					
ANR	2550747	Identifier	aux_name		2550406	1					
ANR	2550748	ExpressionStatement	newAuxRegister -> address = p [ 2 ] << 24 | p [ 3 ] << 16 | p [ 4 ] << 8 | p [ 5 ]	209:5:7082:7151	2550406	13	True				
ANR	2550749	AssignmentExpression	newAuxRegister -> address = p [ 2 ] << 24 | p [ 3 ] << 16 | p [ 4 ] << 8 | p [ 5 ]		2550406	0		=			
ANR	2550750	PtrMemberAccess	newAuxRegister -> address		2550406	0					
ANR	2550751	Identifier	newAuxRegister		2550406	0					
ANR	2550752	Identifier	address		2550406	1					
ANR	2550753	InclusiveOrExpression	p [ 2 ] << 24 | p [ 3 ] << 16 | p [ 4 ] << 8 | p [ 5 ]		2550406	1		|			
ANR	2550754	ShiftExpression	p [ 2 ] << 24		2550406	0		<<			
ANR	2550755	ArrayIndexing	p [ 2 ]		2550406	0					
ANR	2550756	Identifier	p		2550406	0					
ANR	2550757	PrimaryExpression	2		2550406	1					
ANR	2550758	PrimaryExpression	24		2550406	1					
ANR	2550759	InclusiveOrExpression	p [ 3 ] << 16 | p [ 4 ] << 8 | p [ 5 ]		2550406	1		|			
ANR	2550760	ShiftExpression	p [ 3 ] << 16		2550406	0		<<			
ANR	2550761	ArrayIndexing	p [ 3 ]		2550406	0					
ANR	2550762	Identifier	p		2550406	0					
ANR	2550763	PrimaryExpression	3		2550406	1					
ANR	2550764	PrimaryExpression	16		2550406	1					
ANR	2550765	InclusiveOrExpression	p [ 4 ] << 8 | p [ 5 ]		2550406	1		|			
ANR	2550766	ShiftExpression	p [ 4 ] << 8		2550406	0		<<			
ANR	2550767	ArrayIndexing	p [ 4 ]		2550406	0					
ANR	2550768	Identifier	p		2550406	0					
ANR	2550769	PrimaryExpression	4		2550406	1					
ANR	2550770	PrimaryExpression	8		2550406	1					
ANR	2550771	ArrayIndexing	p [ 5 ]		2550406	1					
ANR	2550772	Identifier	p		2550406	0					
ANR	2550773	PrimaryExpression	5		2550406	1					
ANR	2550774	ExpressionStatement	newAuxRegister -> next = arc_extension_map . auxRegisters	210:5:7158:7221	2550406	14	True				
ANR	2550775	AssignmentExpression	newAuxRegister -> next = arc_extension_map . auxRegisters		2550406	0		=			
ANR	2550776	PtrMemberAccess	newAuxRegister -> next		2550406	0					
ANR	2550777	Identifier	newAuxRegister		2550406	0					
ANR	2550778	Identifier	next		2550406	1					
ANR	2550779	MemberAccess	arc_extension_map . auxRegisters		2550406	1					
ANR	2550780	Identifier	arc_extension_map		2550406	0					
ANR	2550781	Identifier	auxRegisters		2550406	1					
ANR	2550782	ExpressionStatement	arc_extension_map . auxRegisters = newAuxRegister	211:5:7228:7275	2550406	15	True				
ANR	2550783	AssignmentExpression	arc_extension_map . auxRegisters = newAuxRegister		2550406	0		=			
ANR	2550784	MemberAccess	arc_extension_map . auxRegisters		2550406	0					
ANR	2550785	Identifier	arc_extension_map		2550406	0					
ANR	2550786	Identifier	auxRegisters		2550406	1					
ANR	2550787	Identifier	newAuxRegister		2550406	1					
ANR	2550788	BreakStatement	break ;	212:5:7282:7287	2550406	16	True				
ANR	2550789	Label	default :	215:1:7296:7303	2550406	10	True				
ANR	2550790	Identifier	default		2550406	0					
ANR	2550791	BreakStatement	break ;	217:3:7370:7375	2550406	11	True				
ANR	2550792	ExpressionStatement	p += p [ 0 ]	220:6:7387:7396	2550406	2	True				
ANR	2550793	AssignmentExpression	p += p [ 0 ]		2550406	0		+=			
ANR	2550794	Identifier	p		2550406	0					
ANR	2550795	ArrayIndexing	p [ 0 ]		2550406	1					
ANR	2550796	Identifier	p		2550406	0					
ANR	2550797	PrimaryExpression	0		2550406	1					
ANR	2550798	ReturnType	static void		2550406	1					
ANR	2550799	Identifier	create_map		2550406	2					
ANR	2550800	ParameterList	"unsigned char * block , unsigned long length"		2550406	3					
ANR	2550801	Parameter	unsigned char * block	124:23:4587:4606	2550406	0	True				
ANR	2550802	ParameterType	unsigned char *		2550406	0					
ANR	2550803	Identifier	block		2550406	1					
ANR	2550804	Parameter	unsigned long length	124:45:4609:4628	2550406	1	True				
ANR	2550805	ParameterType	unsigned long		2550406	0					
ANR	2550806	Identifier	length		2550406	1					
ANR	2550807	CFGEntryNode	ENTRY		2550406		True				
ANR	2550808	CFGExitNode	EXIT		2550406		True				
ANR	2550809	Symbol	arc_extension_map		2550406						
ANR	2550810	Symbol	minor		2550406						
ANR	2550811	Symbol	rw		2550406						
ANR	2550812	Symbol	insn -> next		2550406						
ANR	2550813	Symbol	REG_READWRITE		2550406						
ANR	2550814	Symbol	number		2550406						
ANR	2550815	Symbol	insn -> name		2550406						
ANR	2550816	Symbol	FIRST_EXTENSION_CONDITION_CODE		2550406						
ANR	2550817	Symbol	major		2550406						
ANR	2550818	Symbol	insn -> flags		2550406						
ANR	2550819	Symbol	aux_name		2550406						
ANR	2550820	Symbol	block		2550406						
ANR	2550821	Symbol	* * p		2550406						
ANR	2550822	Symbol	arc_extension_map . auxRegisters		2550406						
ANR	2550823	Symbol	newAuxRegister -> address		2550406						
ANR	2550824	Symbol	INST_HASH		2550406						
ANR	2550825	Symbol	newAuxRegister -> name		2550406						
ANR	2550826	Symbol	arc_extension_map . condCodes		2550406						
ANR	2550827	Symbol	insn -> major		2550406						
ANR	2550828	Symbol	FIRST_EXTENSION_CORE_REGISTER		2550406						
ANR	2550829	Symbol	arc_extension_map . coreRegisters [ number - FIRST_EXTENSION_CORE_REGISTER ] . name		2550406						
ANR	2550830	Symbol	* FIRST_EXTENSION_CORE_REGISTER		2550406						
ANR	2550831	Symbol	* FIRST_EXTENSION_CONDITION_CODE		2550406						
ANR	2550832	Symbol	* arc_extension_map		2550406						
ANR	2550833	Symbol	* newAuxRegister		2550406						
ANR	2550834	Symbol	length		2550406						
ANR	2550835	Symbol	* insn		2550406						
ANR	2550836	Symbol	insn -> minor		2550406						
ANR	2550837	Symbol	arc_extension_map . coreRegisters		2550406						
ANR	2550838	Symbol	cc_name		2550406						
ANR	2550839	Symbol	* arc_extension_map . condCodes		2550406						
ANR	2550840	Symbol	* number		2550406						
ANR	2550841	Symbol	p		2550406						
ANR	2550842	Symbol	bucket		2550406						
ANR	2550843	Symbol	arc_extension_map . instructions		2550406						
ANR	2550844	Symbol	insn		2550406						
ANR	2550845	Symbol	* arc_extension_map . coreRegisters		2550406						
ANR	2550846	Symbol	* bucket		2550406						
ANR	2550847	Symbol	newAuxRegister -> next		2550406						
ANR	2550848	Symbol	arc_extension_map . coreRegisters [ number - FIRST_EXTENSION_CORE_REGISTER ] . number		2550406						
ANR	2550849	Symbol	name		2550406						
ANR	2550850	Symbol	newAuxRegister		2550406						
ANR	2550851	Symbol	* p		2550406						
ANR	2550852	Symbol	strdup		2550406						
ANR	2550853	Symbol	arc_extension_map . coreRegisters [ number - FIRST_EXTENSION_CORE_REGISTER ] . rw		2550406						
ANR	2550854	Function	destroy_map	228:0:7529:8679							
ANR	2550855	FunctionDef	destroy_map ()		2550854	0					
ANR	2550856	CompoundStatement		229:0:7559:8679	2550854	0					
ANR	2550857	IdentifierDeclStatement	struct ExtAuxRegister * r ;	230:2:7563:7587	2550854	0	True				
ANR	2550858	IdentifierDecl	* r		2550854	0					
ANR	2550859	IdentifierDeclType	struct ExtAuxRegister *		2550854	0					
ANR	2550860	Identifier	r		2550854	1					
ANR	2550861	IdentifierDeclStatement	unsigned int i ;	231:2:7591:7615	2550854	1	True				
ANR	2550862	IdentifierDecl	i		2550854	0					
ANR	2550863	IdentifierDeclType	unsigned int		2550854	0					
ANR	2550864	Identifier	i		2550854	1					
ANR	2550865	ExpressionStatement	r = arc_extension_map . auxRegisters	234:2:7653:7687	2550854	2	True				
ANR	2550866	AssignmentExpression	r = arc_extension_map . auxRegisters		2550854	0		=			
ANR	2550867	Identifier	r		2550854	0					
ANR	2550868	MemberAccess	arc_extension_map . auxRegisters		2550854	1					
ANR	2550869	Identifier	arc_extension_map		2550854	0					
ANR	2550870	Identifier	auxRegisters		2550854	1					
ANR	2550871	WhileStatement	while ( r )		2550854	3					
ANR	2550872	Condition	r	235:9:7698:7698	2550854	0	True				
ANR	2550873	Identifier	r		2550854	0					
ANR	2550874	CompoundStatement		10:6:214:251	2550854	1					
ANR	2550875	IdentifierDeclStatement	struct ExtAuxRegister * next = r -> next ;	238:6:7774:7811	2550854	0	True				
ANR	2550876	IdentifierDecl	* next = r -> next		2550854	0					
ANR	2550877	IdentifierDeclType	struct ExtAuxRegister *		2550854	0					
ANR	2550878	Identifier	next		2550854	1					
ANR	2550879	AssignmentExpression	* next = r -> next		2550854	2		=			
ANR	2550880	Identifier	next		2550854	0					
ANR	2550881	PtrMemberAccess	r -> next		2550854	1					
ANR	2550882	Identifier	r		2550854	0					
ANR	2550883	Identifier	next		2550854	1					
ANR	2550884	ExpressionStatement	free ( r -> name )	240:6:7820:7834	2550854	1	True				
ANR	2550885	CallExpression	free ( r -> name )		2550854	0					
ANR	2550886	Callee	free		2550854	0					
ANR	2550887	Identifier	free		2550854	0					
ANR	2550888	ArgumentList	r -> name		2550854	1					
ANR	2550889	Argument	r -> name		2550854	0					
ANR	2550890	PtrMemberAccess	r -> name		2550854	0					
ANR	2550891	Identifier	r		2550854	0					
ANR	2550892	Identifier	name		2550854	1					
ANR	2550893	ExpressionStatement	free ( r )	241:6:7842:7850	2550854	2	True				
ANR	2550894	CallExpression	free ( r )		2550854	0					
ANR	2550895	Callee	free		2550854	0					
ANR	2550896	Identifier	free		2550854	0					
ANR	2550897	ArgumentList	r		2550854	1					
ANR	2550898	Argument	r		2550854	0					
ANR	2550899	Identifier	r		2550854	0					
ANR	2550900	ExpressionStatement	r = next	242:6:7858:7866	2550854	3	True				
ANR	2550901	AssignmentExpression	r = next		2550854	0		=			
ANR	2550902	Identifier	r		2550854	0					
ANR	2550903	Identifier	next		2550854	1					
ANR	2550904	ForStatement	for ( i = 0 ; i < INST_HASH_SIZE ; i ++ )		2550854	4					
ANR	2550905	ForInit	i = 0 ;	246:7:7909:7914	2550854	0	True				
ANR	2550906	AssignmentExpression	i = 0		2550854	0		=			
ANR	2550907	Identifier	i		2550854	0					
ANR	2550908	PrimaryExpression	0		2550854	1					
ANR	2550909	Condition	i < INST_HASH_SIZE	246:14:7916:7933	2550854	1	True				
ANR	2550910	RelationalExpression	i < INST_HASH_SIZE		2550854	0		<			
ANR	2550911	Identifier	i		2550854	0					
ANR	2550912	Identifier	INST_HASH_SIZE		2550854	1					
ANR	2550913	PostIncDecOperationExpression	i ++	246:34:7936:7938	2550854	2	True				
ANR	2550914	Identifier	i		2550854	0					
ANR	2550915	IncDec	++		2550854	1					
ANR	2550916	CompoundStatement		20:6:393:456	2550854	3					
ANR	2550917	IdentifierDeclStatement	struct ExtInstruction * insn = arc_extension_map . instructions [ i ] ;	248:6:7953:8016	2550854	0	True				
ANR	2550918	IdentifierDecl	* insn = arc_extension_map . instructions [ i ]		2550854	0					
ANR	2550919	IdentifierDeclType	struct ExtInstruction *		2550854	0					
ANR	2550920	Identifier	insn		2550854	1					
ANR	2550921	AssignmentExpression	* insn = arc_extension_map . instructions [ i ]		2550854	2		=			
ANR	2550922	Identifier	insn		2550854	0					
ANR	2550923	ArrayIndexing	arc_extension_map . instructions [ i ]		2550854	1					
ANR	2550924	MemberAccess	arc_extension_map . instructions		2550854	0					
ANR	2550925	Identifier	arc_extension_map		2550854	0					
ANR	2550926	Identifier	instructions		2550854	1					
ANR	2550927	Identifier	i		2550854	1					
ANR	2550928	WhileStatement	while ( insn )		2550854	1					
ANR	2550929	Condition	insn	250:13:8032:8035	2550854	0	True				
ANR	2550930	Identifier	insn		2550854	0					
ANR	2550931	CompoundStatement		25:10:569:609	2550854	1					
ANR	2550932	IdentifierDeclStatement	struct ExtInstruction * next = insn -> next ;	253:10:8129:8169	2550854	0	True				
ANR	2550933	IdentifierDecl	* next = insn -> next		2550854	0					
ANR	2550934	IdentifierDeclType	struct ExtInstruction *		2550854	0					
ANR	2550935	Identifier	next		2550854	1					
ANR	2550936	AssignmentExpression	* next = insn -> next		2550854	2		=			
ANR	2550937	Identifier	next		2550854	0					
ANR	2550938	PtrMemberAccess	insn -> next		2550854	1					
ANR	2550939	Identifier	insn		2550854	0					
ANR	2550940	Identifier	next		2550854	1					
ANR	2550941	ExpressionStatement	free ( insn -> name )	255:10:8182:8199	2550854	1	True				
ANR	2550942	CallExpression	free ( insn -> name )		2550854	0					
ANR	2550943	Callee	free		2550854	0					
ANR	2550944	Identifier	free		2550854	0					
ANR	2550945	ArgumentList	insn -> name		2550854	1					
ANR	2550946	Argument	insn -> name		2550854	0					
ANR	2550947	PtrMemberAccess	insn -> name		2550854	0					
ANR	2550948	Identifier	insn		2550854	0					
ANR	2550949	Identifier	name		2550854	1					
ANR	2550950	ExpressionStatement	free ( insn )	256:10:8211:8222	2550854	2	True				
ANR	2550951	CallExpression	free ( insn )		2550854	0					
ANR	2550952	Callee	free		2550854	0					
ANR	2550953	Identifier	free		2550854	0					
ANR	2550954	ArgumentList	insn		2550854	1					
ANR	2550955	Argument	insn		2550854	0					
ANR	2550956	Identifier	insn		2550854	0					
ANR	2550957	ExpressionStatement	insn = next	257:10:8234:8245	2550854	3	True				
ANR	2550958	AssignmentExpression	insn = next		2550854	0		=			
ANR	2550959	Identifier	insn		2550854	0					
ANR	2550960	Identifier	next		2550854	1					
ANR	2550961	ForStatement	for ( i = 0 ; i < NUM_EXT_CORE ; i ++ )		2550854	5					
ANR	2550962	ForInit	i = 0 ;	262:7:8299:8304	2550854	0	True				
ANR	2550963	AssignmentExpression	i = 0		2550854	0		=			
ANR	2550964	Identifier	i		2550854	0					
ANR	2550965	PrimaryExpression	0		2550854	1					
ANR	2550966	Condition	i < NUM_EXT_CORE	262:14:8306:8321	2550854	1	True				
ANR	2550967	RelationalExpression	i < NUM_EXT_CORE		2550854	0		<			
ANR	2550968	Identifier	i		2550854	0					
ANR	2550969	Identifier	NUM_EXT_CORE		2550854	1					
ANR	2550970	PostIncDecOperationExpression	i ++	262:32:8324:8326	2550854	2	True				
ANR	2550971	Identifier	i		2550854	0					
ANR	2550972	IncDec	++		2550854	1					
ANR	2550973	CompoundStatement		35:4:773:773	2550854	3					
ANR	2550974	IfStatement	if ( arc_extension_map . coreRegisters [ i ] . name )		2550854	0					
ANR	2550975	Condition	arc_extension_map . coreRegisters [ i ] . name	264:10:8345:8383	2550854	0	True				
ANR	2550976	MemberAccess	arc_extension_map . coreRegisters [ i ] . name		2550854	0					
ANR	2550977	ArrayIndexing	arc_extension_map . coreRegisters [ i ]		2550854	0					
ANR	2550978	MemberAccess	arc_extension_map . coreRegisters		2550854	0					
ANR	2550979	Identifier	arc_extension_map		2550854	0					
ANR	2550980	Identifier	coreRegisters		2550854	1					
ANR	2550981	Identifier	i		2550854	1					
ANR	2550982	Identifier	name		2550854	1					
ANR	2550983	ExpressionStatement	free ( arc_extension_map . coreRegisters [ i ] . name )	265:8:8394:8440	2550854	1	True				
ANR	2550984	CallExpression	free ( arc_extension_map . coreRegisters [ i ] . name )		2550854	0					
ANR	2550985	Callee	free		2550854	0					
ANR	2550986	Identifier	free		2550854	0					
ANR	2550987	ArgumentList	arc_extension_map . coreRegisters [ i ] . name		2550854	1					
ANR	2550988	Argument	arc_extension_map . coreRegisters [ i ] . name		2550854	0					
ANR	2550989	MemberAccess	arc_extension_map . coreRegisters [ i ] . name		2550854	0					
ANR	2550990	ArrayIndexing	arc_extension_map . coreRegisters [ i ]		2550854	0					
ANR	2550991	MemberAccess	arc_extension_map . coreRegisters		2550854	0					
ANR	2550992	Identifier	arc_extension_map		2550854	0					
ANR	2550993	Identifier	coreRegisters		2550854	1					
ANR	2550994	Identifier	i		2550854	1					
ANR	2550995	Identifier	name		2550854	1					
ANR	2550996	ForStatement	for ( i = 0 ; i < NUM_EXT_COND ; i ++ )		2550854	6					
ANR	2550997	ForInit	i = 0 ;	269:7:8485:8490	2550854	0	True				
ANR	2550998	AssignmentExpression	i = 0		2550854	0		=			
ANR	2550999	Identifier	i		2550854	0					
ANR	2551000	PrimaryExpression	0		2550854	1					
ANR	2551001	Condition	i < NUM_EXT_COND	269:14:8492:8507	2550854	1	True				
ANR	2551002	RelationalExpression	i < NUM_EXT_COND		2550854	0		<			
ANR	2551003	Identifier	i		2550854	0					
ANR	2551004	Identifier	NUM_EXT_COND		2550854	1					
ANR	2551005	PostIncDecOperationExpression	i ++	269:32:8510:8512	2550854	2	True				
ANR	2551006	Identifier	i		2550854	0					
ANR	2551007	IncDec	++		2550854	1					
ANR	2551008	CompoundStatement		42:4:959:959	2550854	3					
ANR	2551009	IfStatement	if ( arc_extension_map . condCodes [ i ] )		2550854	0					
ANR	2551010	Condition	arc_extension_map . condCodes [ i ]	271:10:8531:8560	2550854	0	True				
ANR	2551011	ArrayIndexing	arc_extension_map . condCodes [ i ]		2550854	0					
ANR	2551012	MemberAccess	arc_extension_map . condCodes		2550854	0					
ANR	2551013	Identifier	arc_extension_map		2550854	0					
ANR	2551014	Identifier	condCodes		2550854	1					
ANR	2551015	Identifier	i		2550854	1					
ANR	2551016	ExpressionStatement	free ( arc_extension_map . condCodes [ i ] )	272:8:8571:8608	2550854	1	True				
ANR	2551017	CallExpression	free ( arc_extension_map . condCodes [ i ] )		2550854	0					
ANR	2551018	Callee	free		2550854	0					
ANR	2551019	Identifier	free		2550854	0					
ANR	2551020	ArgumentList	arc_extension_map . condCodes [ i ]		2550854	1					
ANR	2551021	Argument	arc_extension_map . condCodes [ i ]		2550854	0					
ANR	2551022	ArrayIndexing	arc_extension_map . condCodes [ i ]		2550854	0					
ANR	2551023	MemberAccess	arc_extension_map . condCodes		2550854	0					
ANR	2551024	Identifier	arc_extension_map		2550854	0					
ANR	2551025	Identifier	condCodes		2550854	1					
ANR	2551026	Identifier	i		2550854	1					
ANR	2551027	ExpressionStatement	"memset ( & arc_extension_map , 0 , sizeof ( arc_extension_map ) )"	275:2:8619:8677	2550854	7	True				
ANR	2551028	CallExpression	"memset ( & arc_extension_map , 0 , sizeof ( arc_extension_map ) )"		2550854	0					
ANR	2551029	Callee	memset		2550854	0					
ANR	2551030	Identifier	memset		2550854	0					
ANR	2551031	ArgumentList	& arc_extension_map		2550854	1					
ANR	2551032	Argument	& arc_extension_map		2550854	0					
ANR	2551033	UnaryOperationExpression	& arc_extension_map		2550854	0					
ANR	2551034	UnaryOperator	&		2550854	0					
ANR	2551035	Identifier	arc_extension_map		2550854	1					
ANR	2551036	Argument	0		2550854	1					
ANR	2551037	PrimaryExpression	0		2550854	0					
ANR	2551038	Argument	sizeof ( arc_extension_map )		2550854	2					
ANR	2551039	SizeofExpression	sizeof ( arc_extension_map )		2550854	0					
ANR	2551040	Sizeof	sizeof		2550854	0					
ANR	2551041	SizeofOperand	arc_extension_map		2550854	1					
ANR	2551042	ReturnType	static void		2550854	1					
ANR	2551043	Identifier	destroy_map		2550854	2					
ANR	2551044	ParameterList			2550854	3					
ANR	2551045	CFGEntryNode	ENTRY		2550854		True				
ANR	2551046	CFGExitNode	EXIT		2550854		True				
ANR	2551047	Symbol	next		2550854						
ANR	2551048	Symbol	& arc_extension_map		2550854						
ANR	2551049	Symbol	arc_extension_map		2550854						
ANR	2551050	Symbol	NUM_EXT_CORE		2550854						
ANR	2551051	Symbol	INST_HASH_SIZE		2550854						
ANR	2551052	Symbol	insn -> next		2550854						
ANR	2551053	Symbol	NUM_EXT_COND		2550854						
ANR	2551054	Symbol	r -> next		2550854						
ANR	2551055	Symbol	insn -> name		2550854						
ANR	2551056	Symbol	* arc_extension_map . instructions		2550854						
ANR	2551057	Symbol	arc_extension_map . auxRegisters		2550854						
ANR	2551058	Symbol	arc_extension_map . condCodes		2550854						
ANR	2551059	Symbol	arc_extension_map . coreRegisters [ i ] . name		2550854						
ANR	2551060	Symbol	* arc_extension_map		2550854						
ANR	2551061	Symbol	i		2550854						
ANR	2551062	Symbol	* insn		2550854						
ANR	2551063	Symbol	arc_extension_map . coreRegisters		2550854						
ANR	2551064	Symbol	* arc_extension_map . condCodes		2550854						
ANR	2551065	Symbol	insn		2550854						
ANR	2551066	Symbol	arc_extension_map . instructions		2550854						
ANR	2551067	Symbol	r		2550854						
ANR	2551068	Symbol	* arc_extension_map . coreRegisters		2550854						
ANR	2551069	Symbol	* i		2550854						
ANR	2551070	Symbol	r -> name		2550854						
ANR	2551071	Symbol	* r		2550854						
ANR	2551072	Function	ExtReadWrite_image	280:0:8690:8994							
ANR	2551073	FunctionDef	ExtReadWrite_image (enum ExtReadWrite val)		2551072	0					
ANR	2551074	CompoundStatement		281:0:8751:8994	2551072	0					
ANR	2551075	SwitchStatement	switch ( val )		2551072	0					
ANR	2551076	Condition	val	282:12:8765:8767	2551072	0	True				
ANR	2551077	Identifier	val		2551072	0					
ANR	2551078	CompoundStatement		3:4:22:22	2551072	1					
ANR	2551079	Label	case REG_INVALID :	284:8:8784:8802	2551072	0	True				
ANR	2551080	Identifier	REG_INVALID		2551072	0					
ANR	2551081	ReturnStatement	"return ""INVALID"" ;"	284:28:8804:8820	2551072	1	True				
ANR	2551082	PrimaryExpression	"""INVALID"""		2551072	0					
ANR	2551083	Label	case REG_READ :	285:8:8830:8848	2551072	2	True				
ANR	2551084	Identifier	REG_READ		2551072	0					
ANR	2551085	ReturnStatement	"return ""RO"" ;"	285:28:8850:8861	2551072	3	True				
ANR	2551086	PrimaryExpression	"""RO"""		2551072	0					
ANR	2551087	Label	case REG_WRITE :	286:8:8871:8889	2551072	4	True				
ANR	2551088	Identifier	REG_WRITE		2551072	0					
ANR	2551089	ReturnStatement	"return ""WO"" ;"	286:28:8891:8902	2551072	5	True				
ANR	2551090	PrimaryExpression	"""WO"""		2551072	0					
ANR	2551091	Label	case REG_READWRITE :	287:8:8912:8930	2551072	6	True				
ANR	2551092	Identifier	REG_READWRITE		2551072	0					
ANR	2551093	ReturnStatement	"return ""R/W"" ;"	287:28:8932:8944	2551072	7	True				
ANR	2551094	PrimaryExpression	"""R/W"""		2551072	0					
ANR	2551095	Label	default :	288:8:8954:8972	2551072	8	True				
ANR	2551096	Identifier	default		2551072	0					
ANR	2551097	ReturnStatement	"return ""???"" ;"	288:28:8974:8986	2551072	9	True				
ANR	2551098	PrimaryExpression	"""???"""		2551072	0					
ANR	2551099	ReturnType	static const char *		2551072	1					
ANR	2551100	Identifier	ExtReadWrite_image		2551072	2					
ANR	2551101	ParameterList	enum ExtReadWrite val		2551072	3					
ANR	2551102	Parameter	enum ExtReadWrite val	280:38:8728:8748	2551072	0	True				
ANR	2551103	ParameterType	enum ExtReadWrite		2551072	0					
ANR	2551104	Identifier	val		2551072	1					
ANR	2551105	CFGEntryNode	ENTRY		2551072		True				
ANR	2551106	CFGExitNode	EXIT		2551072		True				
ANR	2551107	Symbol	val		2551072						
ANR	2551108	Function	arcExtMap_instName	299:0:9292:11738							
ANR	2551109	FunctionDef	"arcExtMap_instName (int opcode , int insn , int * flags)"		2551108	0					
ANR	2551110	CompoundStatement		301:0:9359:11738	2551108	0					
ANR	2551111	IdentifierDeclStatement	unsigned char minor ;	316:2:10194:10213	2551108	0	True				
ANR	2551112	IdentifierDecl	minor		2551108	0					
ANR	2551113	IdentifierDeclType	unsigned char		2551108	0					
ANR	2551114	Identifier	minor		2551108	1					
ANR	2551115	IdentifierDeclStatement	struct ExtInstruction * temp ;	317:2:10217:10244	2551108	1	True				
ANR	2551116	IdentifierDecl	* temp		2551108	0					
ANR	2551117	IdentifierDeclType	struct ExtInstruction *		2551108	0					
ANR	2551118	Identifier	temp		2551108	1					
ANR	2551119	IfStatement	if ( * flags != E_ARC_MACH_A4 )		2551108	2					
ANR	2551120	Condition	* flags != E_ARC_MACH_A4	319:6:10253:10275	2551108	0	True				
ANR	2551121	EqualityExpression	* flags != E_ARC_MACH_A4		2551108	0		!=			
ANR	2551122	UnaryOperationExpression	* flags		2551108	0					
ANR	2551123	UnaryOperator	*		2551108	0					
ANR	2551124	Identifier	flags		2551108	1					
ANR	2551125	Identifier	E_ARC_MACH_A4		2551108	1					
ANR	2551126	CompoundStatement		20:4:963:963	2551108	1					
ANR	2551127	IfStatement	if ( 0x08 <= opcode && opcode <= 0x0b )		2551108	0					
ANR	2551128	Condition	0x08 <= opcode && opcode <= 0x0b	322:10:10369:10400	2551108	0	True				
ANR	2551129	AndExpression	0x08 <= opcode && opcode <= 0x0b		2551108	0		&&			
ANR	2551130	RelationalExpression	0x08 <= opcode		2551108	0		<=			
ANR	2551131	PrimaryExpression	0x08		2551108	0					
ANR	2551132	Identifier	opcode		2551108	1					
ANR	2551133	RelationalExpression	opcode <= 0x0b		2551108	1		<=			
ANR	2551134	Identifier	opcode		2551108	0					
ANR	2551135	PrimaryExpression	0x0b		2551108	1					
ANR	2551136	CompoundStatement		25:3:1079:1109	2551108	1					
ANR	2551137	IdentifierDeclStatement	"unsigned char b , c , i ;"	325:3:10439:10469	2551108	0	True				
ANR	2551138	IdentifierDecl	b		2551108	0					
ANR	2551139	IdentifierDeclType	unsigned char		2551108	0					
ANR	2551140	Identifier	b		2551108	1					
ANR	2551141	IdentifierDecl	c		2551108	1					
ANR	2551142	IdentifierDeclType	unsigned char		2551108	0					
ANR	2551143	Identifier	c		2551108	1					
ANR	2551144	IdentifierDecl	i		2551108	2					
ANR	2551145	IdentifierDeclType	unsigned char		2551108	0					
ANR	2551146	Identifier	i		2551108	1					
ANR	2551147	ExpressionStatement	b = ( insn & 0x0700 ) >> 8	328:3:10511:10535	2551108	1	True				
ANR	2551148	AssignmentExpression	b = ( insn & 0x0700 ) >> 8		2551108	0		=			
ANR	2551149	Identifier	b		2551108	0					
ANR	2551150	ShiftExpression	( insn & 0x0700 ) >> 8		2551108	1		>>			
ANR	2551151	BitAndExpression	insn & 0x0700		2551108	0		&			
ANR	2551152	Identifier	insn		2551108	0					
ANR	2551153	PrimaryExpression	0x0700		2551108	1					
ANR	2551154	PrimaryExpression	8		2551108	1					
ANR	2551155	ExpressionStatement	c = ( insn & 0x00e0 ) >> 5	329:3:10540:10564	2551108	2	True				
ANR	2551156	AssignmentExpression	c = ( insn & 0x00e0 ) >> 5		2551108	0		=			
ANR	2551157	Identifier	c		2551108	0					
ANR	2551158	ShiftExpression	( insn & 0x00e0 ) >> 5		2551108	1		>>			
ANR	2551159	BitAndExpression	insn & 0x00e0		2551108	0		&			
ANR	2551160	Identifier	insn		2551108	0					
ANR	2551161	PrimaryExpression	0x00e0		2551108	1					
ANR	2551162	PrimaryExpression	5		2551108	1					
ANR	2551163	ExpressionStatement	i = ( insn & 0x001f )	330:3:10569:10588	2551108	3	True				
ANR	2551164	AssignmentExpression	i = ( insn & 0x001f )		2551108	0		=			
ANR	2551165	Identifier	i		2551108	0					
ANR	2551166	BitAndExpression	insn & 0x001f		2551108	1		&			
ANR	2551167	Identifier	insn		2551108	0					
ANR	2551168	PrimaryExpression	0x001f		2551108	1					
ANR	2551169	IfStatement	if ( i )		2551108	4					
ANR	2551170	Condition	i	332:7:10598:10598	2551108	0	True				
ANR	2551171	Identifier	i		2551108	0					
ANR	2551172	CompoundStatement		32:10:1241:1241	2551108	1					
ANR	2551173	ExpressionStatement	minor = i	333:4:10607:10616	2551108	0	True				
ANR	2551174	AssignmentExpression	minor = i		2551108	0		=			
ANR	2551175	Identifier	minor		2551108	0					
ANR	2551176	Identifier	i		2551108	1					
ANR	2551177	ElseStatement	else		2551108	0					
ANR	2551178	CompoundStatement		34:10:1268:1268	2551108	0					
ANR	2551179	ExpressionStatement	minor = ( c == 0x07 ) ? b : c	335:4:10634:10661	2551108	0	True				
ANR	2551180	AssignmentExpression	minor = ( c == 0x07 ) ? b : c		2551108	0		=			
ANR	2551181	Identifier	minor		2551108	0					
ANR	2551182	ConditionalExpression	( c == 0x07 ) ? b : c		2551108	1					
ANR	2551183	Condition	c == 0x07		2551108	0					
ANR	2551184	EqualityExpression	c == 0x07		2551108	0		==			
ANR	2551185	Identifier	c		2551108	0					
ANR	2551186	PrimaryExpression	0x07		2551108	1					
ANR	2551187	Identifier	b		2551108	1					
ANR	2551188	Identifier	c		2551108	2					
ANR	2551189	ElseStatement	else		2551108	0					
ANR	2551190	CompoundStatement		42:3:1395:1428	2551108	0					
ANR	2551191	IdentifierDeclStatement	"unsigned char I , A , B ;"	342:3:10755:10788	2551108	0	True				
ANR	2551192	IdentifierDecl	I		2551108	0					
ANR	2551193	IdentifierDeclType	unsigned char		2551108	0					
ANR	2551194	Identifier	I		2551108	1					
ANR	2551195	IdentifierDecl	A		2551108	1					
ANR	2551196	IdentifierDeclType	unsigned char		2551108	0					
ANR	2551197	Identifier	A		2551108	1					
ANR	2551198	IdentifierDecl	B		2551108	2					
ANR	2551199	IdentifierDeclType	unsigned char		2551108	0					
ANR	2551200	Identifier	B		2551108	1					
ANR	2551201	ExpressionStatement	I = ( insn & 0x003f0000 ) >> 16	346:3:10868:10897	2551108	1	True				
ANR	2551202	AssignmentExpression	I = ( insn & 0x003f0000 ) >> 16		2551108	0		=			
ANR	2551203	Identifier	I		2551108	0					
ANR	2551204	ShiftExpression	( insn & 0x003f0000 ) >> 16		2551108	1		>>			
ANR	2551205	BitAndExpression	insn & 0x003f0000		2551108	0		&			
ANR	2551206	Identifier	insn		2551108	0					
ANR	2551207	PrimaryExpression	0x003f0000		2551108	1					
ANR	2551208	PrimaryExpression	16		2551108	1					
ANR	2551209	ExpressionStatement	A = ( insn & 0x0000003f )	347:3:10902:10925	2551108	2	True				
ANR	2551210	AssignmentExpression	A = ( insn & 0x0000003f )		2551108	0		=			
ANR	2551211	Identifier	A		2551108	0					
ANR	2551212	BitAndExpression	insn & 0x0000003f		2551108	1		&			
ANR	2551213	Identifier	insn		2551108	0					
ANR	2551214	PrimaryExpression	0x0000003f		2551108	1					
ANR	2551215	ExpressionStatement	B = ( ( insn & 0x07000000 ) >> 24 ) | ( ( insn & 0x00007000 ) >> 9 )	348:3:10930:10990	2551108	3	True				
ANR	2551216	AssignmentExpression	B = ( ( insn & 0x07000000 ) >> 24 ) | ( ( insn & 0x00007000 ) >> 9 )		2551108	0		=			
ANR	2551217	Identifier	B		2551108	0					
ANR	2551218	InclusiveOrExpression	( ( insn & 0x07000000 ) >> 24 ) | ( ( insn & 0x00007000 ) >> 9 )		2551108	1		|			
ANR	2551219	ShiftExpression	( insn & 0x07000000 ) >> 24		2551108	0		>>			
ANR	2551220	BitAndExpression	insn & 0x07000000		2551108	0		&			
ANR	2551221	Identifier	insn		2551108	0					
ANR	2551222	PrimaryExpression	0x07000000		2551108	1					
ANR	2551223	PrimaryExpression	24		2551108	1					
ANR	2551224	ShiftExpression	( insn & 0x00007000 ) >> 9		2551108	1		>>			
ANR	2551225	BitAndExpression	insn & 0x00007000		2551108	0		&			
ANR	2551226	Identifier	insn		2551108	0					
ANR	2551227	PrimaryExpression	0x00007000		2551108	1					
ANR	2551228	PrimaryExpression	9		2551108	1					
ANR	2551229	IfStatement	if ( I != 0x2f )		2551108	4					
ANR	2551230	Condition	I != 0x2f	350:7:11000:11008	2551108	0	True				
ANR	2551231	EqualityExpression	I != 0x2f		2551108	0		!=			
ANR	2551232	Identifier	I		2551108	0					
ANR	2551233	PrimaryExpression	0x2f		2551108	1					
ANR	2551234	CompoundStatement		51:5:1656:1656	2551108	1					
ANR	2551235	SwitchStatement	switch ( P )		2551108	0					
ANR	2551236	Condition	P	353:15:11051:11051	2551108	0	True				
ANR	2551237	Identifier	P		2551108	0					
ANR	2551238	CompoundStatement		54:2:1696:1696	2551108	1					
ANR	2551239	Label	case 3 :	355:2:11060:11066	2551108	0	True				
ANR	2551240	IfStatement	if ( M )		2551108	1					
ANR	2551241	Condition	M	356:8:11076:11076	2551108	0	True				
ANR	2551242	Identifier	M		2551108	0					
ANR	2551243	CompoundStatement		57:6:1725:1725	2551108	1					
ANR	2551244	ExpressionStatement	minor = I	358:8:11095:11104	2551108	0	True				
ANR	2551245	AssignmentExpression	minor = I		2551108	0		=			
ANR	2551246	Identifier	minor		2551108	0					
ANR	2551247	Identifier	I		2551108	1					
ANR	2551248	BreakStatement	break ;	359:8:11114:11119	2551108	1	True				
ANR	2551249	Label	case 0 :	361:2:11131:11137	2551108	2	True				
ANR	2551250	Label	case 2 :	362:2:11141:11147	2551108	3	True				
ANR	2551251	ExpressionStatement	minor = ( I >> 1 ) | ( ( I & 0x1 ) << 5 )	363:4:11153:11188	2551108	4	True				
ANR	2551252	AssignmentExpression	minor = ( I >> 1 ) | ( ( I & 0x1 ) << 5 )		2551108	0		=			
ANR	2551253	Identifier	minor		2551108	0					
ANR	2551254	InclusiveOrExpression	( I >> 1 ) | ( ( I & 0x1 ) << 5 )		2551108	1		|			
ANR	2551255	ShiftExpression	I >> 1		2551108	0		>>			
ANR	2551256	Identifier	I		2551108	0					
ANR	2551257	PrimaryExpression	1		2551108	1					
ANR	2551258	ShiftExpression	( I & 0x1 ) << 5		2551108	1		<<			
ANR	2551259	BitAndExpression	I & 0x1		2551108	0		&			
ANR	2551260	Identifier	I		2551108	0					
ANR	2551261	PrimaryExpression	0x1		2551108	1					
ANR	2551262	PrimaryExpression	5		2551108	1					
ANR	2551263	BreakStatement	break ;	364:4:11194:11199	2551108	5	True				
ANR	2551264	Label	case 1 :	365:2:11203:11209	2551108	6	True				
ANR	2551265	ExpressionStatement	minor = ( I >> 1 ) | ( I & 0x1 ) | ( ( I & 0x2 ) << 4 )	366:4:11215:11262	2551108	7	True				
ANR	2551266	AssignmentExpression	minor = ( I >> 1 ) | ( I & 0x1 ) | ( ( I & 0x2 ) << 4 )		2551108	0		=			
ANR	2551267	Identifier	minor		2551108	0					
ANR	2551268	InclusiveOrExpression	( I >> 1 ) | ( I & 0x1 ) | ( ( I & 0x2 ) << 4 )		2551108	1		|			
ANR	2551269	ShiftExpression	I >> 1		2551108	0		>>			
ANR	2551270	Identifier	I		2551108	0					
ANR	2551271	PrimaryExpression	1		2551108	1					
ANR	2551272	InclusiveOrExpression	( I & 0x1 ) | ( ( I & 0x2 ) << 4 )		2551108	1		|			
ANR	2551273	BitAndExpression	I & 0x1		2551108	0		&			
ANR	2551274	Identifier	I		2551108	0					
ANR	2551275	PrimaryExpression	0x1		2551108	1					
ANR	2551276	ShiftExpression	( I & 0x2 ) << 4		2551108	1		<<			
ANR	2551277	BitAndExpression	I & 0x2		2551108	0		&			
ANR	2551278	Identifier	I		2551108	0					
ANR	2551279	PrimaryExpression	0x2		2551108	1					
ANR	2551280	PrimaryExpression	4		2551108	1					
ANR	2551281	ElseStatement	else		2551108	0					
ANR	2551282	CompoundStatement		73:5:1959:1959	2551108	0					
ANR	2551283	IfStatement	if ( A != 0x3f )		2551108	0					
ANR	2551284	Condition	A != 0x3f	374:10:11331:11339	2551108	0	True				
ANR	2551285	EqualityExpression	A != 0x3f		2551108	0		!=			
ANR	2551286	Identifier	A		2551108	0					
ANR	2551287	PrimaryExpression	0x3f		2551108	1					
ANR	2551288	CompoundStatement		74:21:1982:1982	2551108	1					
ANR	2551289	ExpressionStatement	minor = A	375:7:11351:11360	2551108	0	True				
ANR	2551290	AssignmentExpression	minor = A		2551108	0		=			
ANR	2551291	Identifier	minor		2551108	0					
ANR	2551292	Identifier	A		2551108	1					
ANR	2551293	ElseStatement	else		2551108	0					
ANR	2551294	CompoundStatement		76:13:2015:2015	2551108	0					
ANR	2551295	ExpressionStatement	minor = B	377:7:11384:11393	2551108	0	True				
ANR	2551296	AssignmentExpression	minor = B		2551108	0		=			
ANR	2551297	Identifier	minor		2551108	0					
ANR	2551298	Identifier	B		2551108	1					
ANR	2551299	ElseStatement	else		2551108	0					
ANR	2551300	CompoundStatement		81:9:2062:2062	2551108	0					
ANR	2551301	ExpressionStatement	minor = insn	382:3:11469:11481	2551108	0	True				
ANR	2551302	AssignmentExpression	minor = insn		2551108	0		=			
ANR	2551303	Identifier	minor		2551108	0					
ANR	2551304	Identifier	insn		2551108	1					
ANR	2551305	ExpressionStatement	"temp = arc_extension_map . instructions [ INST_HASH ( opcode , minor ) ]"	385:2:11490:11554	2551108	3	True				
ANR	2551306	AssignmentExpression	"temp = arc_extension_map . instructions [ INST_HASH ( opcode , minor ) ]"		2551108	0		=			
ANR	2551307	Identifier	temp		2551108	0					
ANR	2551308	ArrayIndexing	"arc_extension_map . instructions [ INST_HASH ( opcode , minor ) ]"		2551108	1					
ANR	2551309	MemberAccess	arc_extension_map . instructions		2551108	0					
ANR	2551310	Identifier	arc_extension_map		2551108	0					
ANR	2551311	Identifier	instructions		2551108	1					
ANR	2551312	CallExpression	"INST_HASH ( opcode , minor )"		2551108	1					
ANR	2551313	Callee	INST_HASH		2551108	0					
ANR	2551314	Identifier	INST_HASH		2551108	0					
ANR	2551315	ArgumentList	opcode		2551108	1					
ANR	2551316	Argument	opcode		2551108	0					
ANR	2551317	Identifier	opcode		2551108	0					
ANR	2551318	Argument	minor		2551108	1					
ANR	2551319	Identifier	minor		2551108	0					
ANR	2551320	WhileStatement	while ( temp )		2551108	4					
ANR	2551321	Condition	temp	386:9:11565:11568	2551108	0	True				
ANR	2551322	Identifier	temp		2551108	0					
ANR	2551323	CompoundStatement		87:4:2215:2215	2551108	1					
ANR	2551324	IfStatement	if ( ( temp -> major == opcode ) && ( temp -> minor == minor ) )		2551108	0					
ANR	2551325	Condition	( temp -> major == opcode ) && ( temp -> minor == minor )	388:10:11587:11635	2551108	0	True				
ANR	2551326	AndExpression	( temp -> major == opcode ) && ( temp -> minor == minor )		2551108	0		&&			
ANR	2551327	EqualityExpression	temp -> major == opcode		2551108	0		==			
ANR	2551328	PtrMemberAccess	temp -> major		2551108	0					
ANR	2551329	Identifier	temp		2551108	0					
ANR	2551330	Identifier	major		2551108	1					
ANR	2551331	Identifier	opcode		2551108	1					
ANR	2551332	EqualityExpression	temp -> minor == minor		2551108	1		==			
ANR	2551333	PtrMemberAccess	temp -> minor		2551108	0					
ANR	2551334	Identifier	temp		2551108	0					
ANR	2551335	Identifier	minor		2551108	1					
ANR	2551336	Identifier	minor		2551108	1					
ANR	2551337	CompoundStatement		89:1:2279:2279	2551108	1					
ANR	2551338	ExpressionStatement	* flags = temp -> flags	390:3:11644:11664	2551108	0	True				
ANR	2551339	AssignmentExpression	* flags = temp -> flags		2551108	0		=			
ANR	2551340	UnaryOperationExpression	* flags		2551108	0					
ANR	2551341	UnaryOperator	*		2551108	0					
ANR	2551342	Identifier	flags		2551108	1					
ANR	2551343	PtrMemberAccess	temp -> flags		2551108	1					
ANR	2551344	Identifier	temp		2551108	0					
ANR	2551345	Identifier	flags		2551108	1					
ANR	2551346	ReturnStatement	return temp -> name ;	391:3:11669:11686	2551108	1	True				
ANR	2551347	PtrMemberAccess	temp -> name		2551108	0					
ANR	2551348	Identifier	temp		2551108	0					
ANR	2551349	Identifier	name		2551108	1					
ANR	2551350	ExpressionStatement	temp = temp -> next	393:6:11697:11714	2551108	1	True				
ANR	2551351	AssignmentExpression	temp = temp -> next		2551108	0		=			
ANR	2551352	Identifier	temp		2551108	0					
ANR	2551353	PtrMemberAccess	temp -> next		2551108	1					
ANR	2551354	Identifier	temp		2551108	0					
ANR	2551355	Identifier	next		2551108	1					
ANR	2551356	ReturnStatement	return NULL ;	396:2:11725:11736	2551108	5	True				
ANR	2551357	Identifier	NULL		2551108	0					
ANR	2551358	ReturnType	const char *		2551108	1					
ANR	2551359	Identifier	arcExtMap_instName		2551108	2					
ANR	2551360	ParameterList	"int opcode , int insn , int * flags"		2551108	3					
ANR	2551361	Parameter	int opcode	300:20:9325:9334	2551108	0	True				
ANR	2551362	ParameterType	int		2551108	0					
ANR	2551363	Identifier	opcode		2551108	1					
ANR	2551364	Parameter	int insn	300:32:9337:9344	2551108	1	True				
ANR	2551365	ParameterType	int		2551108	0					
ANR	2551366	Identifier	insn		2551108	1					
ANR	2551367	Parameter	int * flags	300:42:9347:9356	2551108	2	True				
ANR	2551368	ParameterType	int *		2551108	0					
ANR	2551369	Identifier	flags		2551108	1					
ANR	2551370	CFGEntryNode	ENTRY		2551108		True				
ANR	2551371	CFGExitNode	EXIT		2551108		True				
ANR	2551372	Symbol	A		2551108						
ANR	2551373	Symbol	B		2551108						
ANR	2551374	Symbol	arc_extension_map		2551108						
ANR	2551375	Symbol	minor		2551108						
ANR	2551376	Symbol	flags		2551108						
ANR	2551377	Symbol	I		2551108						
ANR	2551378	Symbol	opcode		2551108						
ANR	2551379	Symbol	M		2551108						
ANR	2551380	Symbol	P		2551108						
ANR	2551381	Symbol	E_ARC_MACH_A4		2551108						
ANR	2551382	Symbol	* arc_extension_map . instructions		2551108						
ANR	2551383	Symbol	* INST_HASH		2551108						
ANR	2551384	Symbol	temp -> name		2551108						
ANR	2551385	Symbol	INST_HASH		2551108						
ANR	2551386	Symbol	* flags		2551108						
ANR	2551387	Symbol	temp		2551108						
ANR	2551388	Symbol	b		2551108						
ANR	2551389	Symbol	temp -> flags		2551108						
ANR	2551390	Symbol	c		2551108						
ANR	2551391	Symbol	NULL		2551108						
ANR	2551392	Symbol	* arc_extension_map		2551108						
ANR	2551393	Symbol	temp -> next		2551108						
ANR	2551394	Symbol	i		2551108						
ANR	2551395	Symbol	* temp		2551108						
ANR	2551396	Symbol	insn		2551108						
ANR	2551397	Symbol	arc_extension_map . instructions		2551108						
ANR	2551398	Symbol	temp -> major		2551108						
ANR	2551399	Symbol	temp -> minor		2551108						
ANR	2551400	Function	arcExtMap_coreRegName	401:0:11791:12033							
ANR	2551401	FunctionDef	arcExtMap_coreRegName (int regnum)		2551400	0					
ANR	2551402	CompoundStatement		403:0:11839:12033	2551400	0					
ANR	2551403	IfStatement	if ( regnum < FIRST_EXTENSION_CORE_REGISTER || regnum > LAST_EXTENSION_CORE_REGISTER )		2551400	0					
ANR	2551404	Condition	regnum < FIRST_EXTENSION_CORE_REGISTER || regnum > LAST_EXTENSION_CORE_REGISTER	404:5:11846:11924	2551400	0	True				
ANR	2551405	OrExpression	regnum < FIRST_EXTENSION_CORE_REGISTER || regnum > LAST_EXTENSION_CORE_REGISTER		2551400	0		||			
ANR	2551406	RelationalExpression	regnum < FIRST_EXTENSION_CORE_REGISTER		2551400	0		<			
ANR	2551407	Identifier	regnum		2551400	0					
ANR	2551408	Identifier	FIRST_EXTENSION_CORE_REGISTER		2551400	1					
ANR	2551409	RelationalExpression	regnum > LAST_EXTENSION_CORE_REGISTER		2551400	1		>			
ANR	2551410	Identifier	regnum		2551400	0					
ANR	2551411	Identifier	LAST_EXTENSION_CORE_REGISTER		2551400	1					
ANR	2551412	CompoundStatement		2:86:87:87	2551400	1					
ANR	2551413	ReturnStatement	return NULL ;	405:2:11931:11942	2551400	0	True				
ANR	2551414	Identifier	NULL		2551400	0					
ANR	2551415	ReturnStatement	return arc_extension_map . coreRegisters [ regnum - FIRST_EXTENSION_CORE_REGISTER ] . name ;	407:1:11948:12031	2551400	1	True				
ANR	2551416	MemberAccess	arc_extension_map . coreRegisters [ regnum - FIRST_EXTENSION_CORE_REGISTER ] . name		2551400	0					
ANR	2551417	ArrayIndexing	arc_extension_map . coreRegisters [ regnum - FIRST_EXTENSION_CORE_REGISTER ]		2551400	0					
ANR	2551418	MemberAccess	arc_extension_map . coreRegisters		2551400	0					
ANR	2551419	Identifier	arc_extension_map		2551400	0					
ANR	2551420	Identifier	coreRegisters		2551400	1					
ANR	2551421	AdditiveExpression	regnum - FIRST_EXTENSION_CORE_REGISTER		2551400	1		-			
ANR	2551422	Identifier	regnum		2551400	0					
ANR	2551423	Identifier	FIRST_EXTENSION_CORE_REGISTER		2551400	1					
ANR	2551424	Identifier	name		2551400	1					
ANR	2551425	ReturnType	const char *		2551400	1					
ANR	2551426	Identifier	arcExtMap_coreRegName		2551400	2					
ANR	2551427	ParameterList	int regnum		2551400	3					
ANR	2551428	Parameter	int regnum	402:23:11827:11836	2551400	0	True				
ANR	2551429	ParameterType	int		2551400	0					
ANR	2551430	Identifier	regnum		2551400	1					
ANR	2551431	CFGEntryNode	ENTRY		2551400		True				
ANR	2551432	CFGExitNode	EXIT		2551400		True				
ANR	2551433	Symbol	FIRST_EXTENSION_CORE_REGISTER		2551400						
ANR	2551434	Symbol	arc_extension_map		2551400						
ANR	2551435	Symbol	* arc_extension_map . coreRegisters		2551400						
ANR	2551436	Symbol	NULL		2551400						
ANR	2551437	Symbol	* FIRST_EXTENSION_CORE_REGISTER		2551400						
ANR	2551438	Symbol	* arc_extension_map		2551400						
ANR	2551439	Symbol	LAST_EXTENSION_CORE_REGISTER		2551400						
ANR	2551440	Symbol	* regnum		2551400						
ANR	2551441	Symbol	regnum		2551400						
ANR	2551442	Symbol	arc_extension_map . coreRegisters [ regnum - FIRST_EXTENSION_CORE_REGISTER ] . name		2551400						
ANR	2551443	Symbol	arc_extension_map . coreRegisters		2551400						
ANR	2551444	Function	arcExtMap_coreReadWrite	412:0:12093:12347							
ANR	2551445	FunctionDef	arcExtMap_coreReadWrite (int regnum)		2551444	0					
ANR	2551446	CompoundStatement		414:0:12148:12347	2551444	0					
ANR	2551447	IfStatement	if ( regnum < FIRST_EXTENSION_CORE_REGISTER || regnum > LAST_EXTENSION_CORE_REGISTER )		2551444	0					
ANR	2551448	Condition	regnum < FIRST_EXTENSION_CORE_REGISTER || regnum > LAST_EXTENSION_CORE_REGISTER	415:5:12155:12233	2551444	0	True				
ANR	2551449	OrExpression	regnum < FIRST_EXTENSION_CORE_REGISTER || regnum > LAST_EXTENSION_CORE_REGISTER		2551444	0		||			
ANR	2551450	RelationalExpression	regnum < FIRST_EXTENSION_CORE_REGISTER		2551444	0		<			
ANR	2551451	Identifier	regnum		2551444	0					
ANR	2551452	Identifier	FIRST_EXTENSION_CORE_REGISTER		2551444	1					
ANR	2551453	RelationalExpression	regnum > LAST_EXTENSION_CORE_REGISTER		2551444	1		>			
ANR	2551454	Identifier	regnum		2551444	0					
ANR	2551455	Identifier	LAST_EXTENSION_CORE_REGISTER		2551444	1					
ANR	2551456	CompoundStatement		2:86:87:87	2551444	1					
ANR	2551457	ReturnStatement	return REG_INVALID ;	416:2:12240:12258	2551444	0	True				
ANR	2551458	Identifier	REG_INVALID		2551444	0					
ANR	2551459	ReturnStatement	return arc_extension_map . coreRegisters [ regnum - FIRST_EXTENSION_CORE_REGISTER ] . rw ;	418:1:12264:12345	2551444	1	True				
ANR	2551460	MemberAccess	arc_extension_map . coreRegisters [ regnum - FIRST_EXTENSION_CORE_REGISTER ] . rw		2551444	0					
ANR	2551461	ArrayIndexing	arc_extension_map . coreRegisters [ regnum - FIRST_EXTENSION_CORE_REGISTER ]		2551444	0					
ANR	2551462	MemberAccess	arc_extension_map . coreRegisters		2551444	0					
ANR	2551463	Identifier	arc_extension_map		2551444	0					
ANR	2551464	Identifier	coreRegisters		2551444	1					
ANR	2551465	AdditiveExpression	regnum - FIRST_EXTENSION_CORE_REGISTER		2551444	1		-			
ANR	2551466	Identifier	regnum		2551444	0					
ANR	2551467	Identifier	FIRST_EXTENSION_CORE_REGISTER		2551444	1					
ANR	2551468	Identifier	rw		2551444	1					
ANR	2551469	ReturnType	enum ExtReadWrite		2551444	1					
ANR	2551470	Identifier	arcExtMap_coreReadWrite		2551444	2					
ANR	2551471	ParameterList	int regnum		2551444	3					
ANR	2551472	Parameter	int regnum	413:25:12136:12145	2551444	0	True				
ANR	2551473	ParameterType	int		2551444	0					
ANR	2551474	Identifier	regnum		2551444	1					
ANR	2551475	CFGEntryNode	ENTRY		2551444		True				
ANR	2551476	CFGExitNode	EXIT		2551444		True				
ANR	2551477	Symbol	FIRST_EXTENSION_CORE_REGISTER		2551444						
ANR	2551478	Symbol	arc_extension_map		2551444						
ANR	2551479	Symbol	* arc_extension_map . coreRegisters		2551444						
ANR	2551480	Symbol	* FIRST_EXTENSION_CORE_REGISTER		2551444						
ANR	2551481	Symbol	* arc_extension_map		2551444						
ANR	2551482	Symbol	LAST_EXTENSION_CORE_REGISTER		2551444						
ANR	2551483	Symbol	arc_extension_map . coreRegisters [ regnum - FIRST_EXTENSION_CORE_REGISTER ] . rw		2551444						
ANR	2551484	Symbol	* regnum		2551444						
ANR	2551485	Symbol	regnum		2551444						
ANR	2551486	Symbol	arc_extension_map . coreRegisters		2551444						
ANR	2551487	Symbol	REG_INVALID		2551444						
ANR	2551488	Function	arcExtMap_condCodeName	423:0:12401:12630							
ANR	2551489	FunctionDef	arcExtMap_condCodeName (int code)		2551488	0					
ANR	2551490	CompoundStatement		425:0:12448:12630	2551488	0					
ANR	2551491	IfStatement	if ( code < FIRST_EXTENSION_CONDITION_CODE || code > LAST_EXTENSION_CONDITION_CODE )		2551488	0					
ANR	2551492	Condition	code < FIRST_EXTENSION_CONDITION_CODE || code > LAST_EXTENSION_CONDITION_CODE	426:5:12455:12531	2551488	0	True				
ANR	2551493	OrExpression	code < FIRST_EXTENSION_CONDITION_CODE || code > LAST_EXTENSION_CONDITION_CODE		2551488	0		||			
ANR	2551494	RelationalExpression	code < FIRST_EXTENSION_CONDITION_CODE		2551488	0		<			
ANR	2551495	Identifier	code		2551488	0					
ANR	2551496	Identifier	FIRST_EXTENSION_CONDITION_CODE		2551488	1					
ANR	2551497	RelationalExpression	code > LAST_EXTENSION_CONDITION_CODE		2551488	1		>			
ANR	2551498	Identifier	code		2551488	0					
ANR	2551499	Identifier	LAST_EXTENSION_CONDITION_CODE		2551488	1					
ANR	2551500	CompoundStatement		2:84:85:85	2551488	1					
ANR	2551501	ReturnStatement	return NULL ;	427:2:12538:12549	2551488	0	True				
ANR	2551502	Identifier	NULL		2551488	0					
ANR	2551503	ReturnStatement	return arc_extension_map . condCodes [ code - FIRST_EXTENSION_CONDITION_CODE ] ;	429:1:12555:12628	2551488	1	True				
ANR	2551504	ArrayIndexing	arc_extension_map . condCodes [ code - FIRST_EXTENSION_CONDITION_CODE ]		2551488	0					
ANR	2551505	MemberAccess	arc_extension_map . condCodes		2551488	0					
ANR	2551506	Identifier	arc_extension_map		2551488	0					
ANR	2551507	Identifier	condCodes		2551488	1					
ANR	2551508	AdditiveExpression	code - FIRST_EXTENSION_CONDITION_CODE		2551488	1		-			
ANR	2551509	Identifier	code		2551488	0					
ANR	2551510	Identifier	FIRST_EXTENSION_CONDITION_CODE		2551488	1					
ANR	2551511	ReturnType	const char *		2551488	1					
ANR	2551512	Identifier	arcExtMap_condCodeName		2551488	2					
ANR	2551513	ParameterList	int code		2551488	3					
ANR	2551514	Parameter	int code	424:24:12438:12445	2551488	0	True				
ANR	2551515	ParameterType	int		2551488	0					
ANR	2551516	Identifier	code		2551488	1					
ANR	2551517	CFGEntryNode	ENTRY		2551488		True				
ANR	2551518	CFGExitNode	EXIT		2551488		True				
ANR	2551519	Symbol	arc_extension_map . condCodes		2551488						
ANR	2551520	Symbol	FIRST_EXTENSION_CONDITION_CODE		2551488						
ANR	2551521	Symbol	arc_extension_map		2551488						
ANR	2551522	Symbol	code		2551488						
ANR	2551523	Symbol	LAST_EXTENSION_CONDITION_CODE		2551488						
ANR	2551524	Symbol	NULL		2551488						
ANR	2551525	Symbol	* FIRST_EXTENSION_CONDITION_CODE		2551488						
ANR	2551526	Symbol	* arc_extension_map		2551488						
ANR	2551527	Symbol	* arc_extension_map . condCodes		2551488						
ANR	2551528	Symbol	* code		2551488						
ANR	2551529	Function	arcExtMap_auxRegName	434:0:12690:12997							
ANR	2551530	FunctionDef	arcExtMap_auxRegName (long address)		2551529	0					
ANR	2551531	CompoundStatement		436:0:12739:12997	2551529	0					
ANR	2551532	IdentifierDeclStatement	struct ExtAuxRegister * r ;	438:2:12813:12837	2551529	0	True				
ANR	2551533	IdentifierDecl	* r		2551529	0					
ANR	2551534	IdentifierDeclType	struct ExtAuxRegister *		2551529	0					
ANR	2551535	Identifier	r		2551529	1					
ANR	2551536	ForStatement	for ( r = arc_extension_map . auxRegisters ; r ; r = r -> next )		2551529	1					
ANR	2551537	ForInit	r = arc_extension_map . auxRegisters ;	440:7:12847:12881	2551529	0	True				
ANR	2551538	AssignmentExpression	r = arc_extension_map . auxRegisters		2551529	0		=			
ANR	2551539	Identifier	r		2551529	0					
ANR	2551540	MemberAccess	arc_extension_map . auxRegisters		2551529	1					
ANR	2551541	Identifier	arc_extension_map		2551529	0					
ANR	2551542	Identifier	auxRegisters		2551529	1					
ANR	2551543	Condition	r	440:43:12883:12883	2551529	1	True				
ANR	2551544	Identifier	r		2551529	0					
ANR	2551545	AssignmentExpression	r = r -> next	440:46:12886:12896	2551529	2	True	=			
ANR	2551546	Identifier	r		2551529	0					
ANR	2551547	PtrMemberAccess	r -> next		2551529	1					
ANR	2551548	Identifier	r		2551529	0					
ANR	2551549	Identifier	next		2551529	1					
ANR	2551550	CompoundStatement		6:4:163:163	2551529	3					
ANR	2551551	IfStatement	if ( r -> address == address )		2551529	0					
ANR	2551552	Condition	r -> address == address	442:7:12912:12932	2551529	0	True				
ANR	2551553	EqualityExpression	r -> address == address		2551529	0		==			
ANR	2551554	PtrMemberAccess	r -> address		2551529	0					
ANR	2551555	Identifier	r		2551529	0					
ANR	2551556	Identifier	address		2551529	1					
ANR	2551557	Identifier	address		2551529	1					
ANR	2551558	CompoundStatement		7:30:195:195	2551529	1					
ANR	2551559	ReturnStatement	return ( const char * ) r -> name ;	443:4:12941:12969	2551529	0	True				
ANR	2551560	CastExpression	( const char * ) r -> name		2551529	0					
ANR	2551561	CastTarget	const char *		2551529	0					
ANR	2551562	PtrMemberAccess	r -> name		2551529	1					
ANR	2551563	Identifier	r		2551529	0					
ANR	2551564	Identifier	name		2551529	1					
ANR	2551565	ReturnStatement	return NULL ;	446:2:12984:12995	2551529	2	True				
ANR	2551566	Identifier	NULL		2551529	0					
ANR	2551567	ReturnType	const char *		2551529	1					
ANR	2551568	Identifier	arcExtMap_auxRegName		2551529	2					
ANR	2551569	ParameterList	long address		2551529	3					
ANR	2551570	Parameter	long address	435:22:12725:12736	2551529	0	True				
ANR	2551571	ParameterType	long		2551529	0					
ANR	2551572	Identifier	address		2551529	1					
ANR	2551573	CFGEntryNode	ENTRY		2551529		True				
ANR	2551574	CFGExitNode	EXIT		2551529		True				
ANR	2551575	Symbol	r		2551529						
ANR	2551576	Symbol	arc_extension_map		2551529						
ANR	2551577	Symbol	address		2551529						
ANR	2551578	Symbol	NULL		2551529						
ANR	2551579	Symbol	r -> name		2551529						
ANR	2551580	Symbol	r -> address		2551529						
ANR	2551581	Symbol	* r		2551529						
ANR	2551582	Symbol	arc_extension_map . auxRegisters		2551529						
ANR	2551583	Symbol	r -> next		2551529						
ANR	2551584	Function	build_ARC_extmap	452:0:13094:13900							
ANR	2551585	FunctionDef	build_ARC_extmap (void * text_bfd)		2551584	0					
ANR	2551586	CompoundStatement		454:0:13133:13900	2551584	0					
ANR	2551587	IdentifierDeclStatement	asection * sect ;	456:2:13143:13157	2551584	0	True				
ANR	2551588	IdentifierDecl	* sect		2551584	0					
ANR	2551589	IdentifierDeclType	asection *		2551584	0					
ANR	2551590	Identifier	sect		2551584	1					
ANR	2551591	ExpressionStatement	destroy_map ( )	461:2:13321:13334	2551584	1	True				
ANR	2551592	CallExpression	destroy_map ( )		2551584	0					
ANR	2551593	Callee	destroy_map		2551584	0					
ANR	2551594	Identifier	destroy_map		2551584	0					
ANR	2551595	ArgumentList			2551584	1					
ANR	2551596	ForStatement	for ( sect = text_bfd -> sections ; sect != NULL ; sect = sect -> next )		2551584	2					
ANR	2551597	ForInit	sect = text_bfd -> sections ;	463:7:13344:13369	2551584	0	True				
ANR	2551598	AssignmentExpression	sect = text_bfd -> sections		2551584	0		=			
ANR	2551599	Identifier	sect		2551584	0					
ANR	2551600	PtrMemberAccess	text_bfd -> sections		2551584	1					
ANR	2551601	Identifier	text_bfd		2551584	0					
ANR	2551602	Identifier	sections		2551584	1					
ANR	2551603	Condition	sect != NULL	463:34:13371:13382	2551584	1	True				
ANR	2551604	EqualityExpression	sect != NULL		2551584	0		!=			
ANR	2551605	Identifier	sect		2551584	0					
ANR	2551606	Identifier	NULL		2551584	1					
ANR	2551607	AssignmentExpression	sect = sect -> next	463:48:13385:13401	2551584	2	True	=			
ANR	2551608	Identifier	sect		2551584	0					
ANR	2551609	PtrMemberAccess	sect -> next		2551584	1					
ANR	2551610	Identifier	sect		2551584	0					
ANR	2551611	Identifier	next		2551584	1					
ANR	2551612	IfStatement	"if ( ! strncmp ( sect -> name , "".gnu.linkonce.arcextmap."" , sizeof ( "".gnu.linkonce.arcextmap."" ) - 1 ) || ! strcmp ( sect -> name , "".arcextmap"" ) )"		2551584	3					
ANR	2551613	Condition	"! strncmp ( sect -> name , "".gnu.linkonce.arcextmap."" , sizeof ( "".gnu.linkonce.arcextmap."" ) - 1 ) || ! strcmp ( sect -> name , "".arcextmap"" )"	464:8:13412:13574	2551584	0	True				
ANR	2551614	OrExpression	"! strncmp ( sect -> name , "".gnu.linkonce.arcextmap."" , sizeof ( "".gnu.linkonce.arcextmap."" ) - 1 ) || ! strcmp ( sect -> name , "".arcextmap"" )"		2551584	0		||			
ANR	2551615	UnaryOperationExpression	"! strncmp ( sect -> name , "".gnu.linkonce.arcextmap."" , sizeof ( "".gnu.linkonce.arcextmap."" ) - 1 )"		2551584	0					
ANR	2551616	UnaryOperator	!		2551584	0					
ANR	2551617	CallExpression	"strncmp ( sect -> name , "".gnu.linkonce.arcextmap."" , sizeof ( "".gnu.linkonce.arcextmap."" ) - 1 )"		2551584	1					
ANR	2551618	Callee	strncmp		2551584	0					
ANR	2551619	Identifier	strncmp		2551584	0					
ANR	2551620	ArgumentList	sect -> name		2551584	1					
ANR	2551621	Argument	sect -> name		2551584	0					
ANR	2551622	PtrMemberAccess	sect -> name		2551584	0					
ANR	2551623	Identifier	sect		2551584	0					
ANR	2551624	Identifier	name		2551584	1					
ANR	2551625	Argument	""".gnu.linkonce.arcextmap."""		2551584	1					
ANR	2551626	PrimaryExpression	""".gnu.linkonce.arcextmap."""		2551584	0					
ANR	2551627	Argument	"sizeof ( "".gnu.linkonce.arcextmap."" ) - 1"		2551584	2					
ANR	2551628	AdditiveExpression	"sizeof ( "".gnu.linkonce.arcextmap."" ) - 1"		2551584	0		-			
ANR	2551629	SizeofExpression	"sizeof ( "".gnu.linkonce.arcextmap."" )"		2551584	0					
ANR	2551630	Sizeof	sizeof		2551584	0					
ANR	2551631	PrimaryExpression	""".gnu.linkonce.arcextmap."""		2551584	1					
ANR	2551632	PrimaryExpression	1		2551584	1					
ANR	2551633	UnaryOperationExpression	"! strcmp ( sect -> name , "".arcextmap"" )"		2551584	1					
ANR	2551634	UnaryOperator	!		2551584	0					
ANR	2551635	CallExpression	"strcmp ( sect -> name , "".arcextmap"" )"		2551584	1					
ANR	2551636	Callee	strcmp		2551584	0					
ANR	2551637	Identifier	strcmp		2551584	0					
ANR	2551638	ArgumentList	sect -> name		2551584	1					
ANR	2551639	Argument	sect -> name		2551584	0					
ANR	2551640	PtrMemberAccess	sect -> name		2551584	0					
ANR	2551641	Identifier	sect		2551584	0					
ANR	2551642	Identifier	name		2551584	1					
ANR	2551643	Argument	""".arcextmap"""		2551584	1					
ANR	2551644	PrimaryExpression	""".arcextmap"""		2551584	0					
ANR	2551645	CompoundStatement		17:8:520:559	2551584	1					
ANR	2551646	IdentifierDeclStatement	bfd_size_type count = bfd_get_section_size ( sect ) ;	469:8:13593:13644	2551584	0	True				
ANR	2551647	IdentifierDecl	count = bfd_get_section_size ( sect )		2551584	0					
ANR	2551648	IdentifierDeclType	bfd_size_type		2551584	0					
ANR	2551649	Identifier	count		2551584	1					
ANR	2551650	AssignmentExpression	count = bfd_get_section_size ( sect )		2551584	2		=			
ANR	2551651	Identifier	count		2551584	0					
ANR	2551652	CallExpression	bfd_get_section_size ( sect )		2551584	1					
ANR	2551653	Callee	bfd_get_section_size		2551584	0					
ANR	2551654	Identifier	bfd_get_section_size		2551584	0					
ANR	2551655	ArgumentList	sect		2551584	1					
ANR	2551656	Argument	sect		2551584	0					
ANR	2551657	Identifier	sect		2551584	0					
ANR	2551658	IdentifierDeclStatement	unsigned char * buffer = xmalloc ( count ) ;	470:8:13654:13693	2551584	1	True				
ANR	2551659	IdentifierDecl	* buffer = xmalloc ( count )		2551584	0					
ANR	2551660	IdentifierDeclType	unsigned char *		2551584	0					
ANR	2551661	Identifier	buffer		2551584	1					
ANR	2551662	AssignmentExpression	* buffer = xmalloc ( count )		2551584	2		=			
ANR	2551663	Identifier	buffer		2551584	0					
ANR	2551664	CallExpression	xmalloc ( count )		2551584	1					
ANR	2551665	Callee	xmalloc		2551584	0					
ANR	2551666	Identifier	xmalloc		2551584	0					
ANR	2551667	ArgumentList	count		2551584	1					
ANR	2551668	Argument	count		2551584	0					
ANR	2551669	Identifier	count		2551584	0					
ANR	2551670	IfStatement	if ( buffer )		2551584	2					
ANR	2551671	Condition	buffer	472:12:13708:13713	2551584	0	True				
ANR	2551672	Identifier	buffer		2551584	0					
ANR	2551673	CompoundStatement		20:10:592:592	2551584	1					
ANR	2551674	IfStatement	"if ( bfd_get_section_contents ( text_bfd , sect , buffer , 0 , count ) )"		2551584	0					
ANR	2551675	Condition	"bfd_get_section_contents ( text_bfd , sect , buffer , 0 , count )"	474:16:13744:13802	2551584	0	True				
ANR	2551676	CallExpression	"bfd_get_section_contents ( text_bfd , sect , buffer , 0 , count )"		2551584	0					
ANR	2551677	Callee	bfd_get_section_contents		2551584	0					
ANR	2551678	Identifier	bfd_get_section_contents		2551584	0					
ANR	2551679	ArgumentList	text_bfd		2551584	1					
ANR	2551680	Argument	text_bfd		2551584	0					
ANR	2551681	Identifier	text_bfd		2551584	0					
ANR	2551682	Argument	sect		2551584	1					
ANR	2551683	Identifier	sect		2551584	0					
ANR	2551684	Argument	buffer		2551584	2					
ANR	2551685	Identifier	buffer		2551584	0					
ANR	2551686	Argument	0		2551584	3					
ANR	2551687	PrimaryExpression	0		2551584	0					
ANR	2551688	Argument	count		2551584	4					
ANR	2551689	Identifier	count		2551584	0					
ANR	2551690	ExpressionStatement	"create_map ( buffer , count )"	475:14:13819:13844	2551584	1	True				
ANR	2551691	CallExpression	"create_map ( buffer , count )"		2551584	0					
ANR	2551692	Callee	create_map		2551584	0					
ANR	2551693	Identifier	create_map		2551584	0					
ANR	2551694	ArgumentList	buffer		2551584	1					
ANR	2551695	Argument	buffer		2551584	0					
ANR	2551696	Identifier	buffer		2551584	0					
ANR	2551697	Argument	count		2551584	1					
ANR	2551698	Identifier	count		2551584	0					
ANR	2551699	ExpressionStatement	free ( buffer )	476:12:13858:13871	2551584	1	True				
ANR	2551700	CallExpression	free ( buffer )		2551584	0					
ANR	2551701	Callee	free		2551584	0					
ANR	2551702	Identifier	free		2551584	0					
ANR	2551703	ArgumentList	buffer		2551584	1					
ANR	2551704	Argument	buffer		2551584	0					
ANR	2551705	Identifier	buffer		2551584	0					
ANR	2551706	ReturnType	void		2551584	1					
ANR	2551707	Identifier	build_ARC_extmap		2551584	2					
ANR	2551708	ParameterList	void * text_bfd		2551584	3					
ANR	2551709	Parameter	void * text_bfd	453:18:13117:13130	2551584	0	True				
ANR	2551710	ParameterType	void *		2551584	0					
ANR	2551711	Identifier	text_bfd		2551584	1					
ANR	2551712	CFGEntryNode	ENTRY		2551584		True				
ANR	2551713	CFGExitNode	EXIT		2551584		True				
ANR	2551714	Symbol	strcmp		2551584						
ANR	2551715	Symbol	bfd_get_section_size		2551584						
ANR	2551716	Symbol	NULL		2551584						
ANR	2551717	Symbol	bfd_get_section_contents		2551584						
ANR	2551718	Symbol	count		2551584						
ANR	2551719	Symbol	* text_bfd		2551584						
ANR	2551720	Symbol	sect -> name		2551584						
ANR	2551721	Symbol	strncmp		2551584						
ANR	2551722	Symbol	sect -> next		2551584						
ANR	2551723	Symbol	xmalloc		2551584						
ANR	2551724	Symbol	sect		2551584						
ANR	2551725	Symbol	buffer		2551584						
ANR	2551726	Symbol	text_bfd		2551584						
ANR	2551727	Symbol	* sect		2551584						
ANR	2551728	Symbol	text_bfd -> sections		2551584						
ANR	2551729	Function	dump_ARC_extmap	483:0:13904:14788							
ANR	2551730	FunctionDef	dump_ARC_extmap ()		2551729	0					
ANR	2551731	CompoundStatement		484:0:13932:14788	2551729	0					
ANR	2551732	IdentifierDeclStatement	struct ExtAuxRegister * r ;	485:4:13938:13962	2551729	0	True				
ANR	2551733	IdentifierDecl	* r		2551729	0					
ANR	2551734	IdentifierDeclType	struct ExtAuxRegister *		2551729	0					
ANR	2551735	Identifier	r		2551729	1					
ANR	2551736	IdentifierDeclStatement	int i ;	486:4:13968:13992	2551729	1	True				
ANR	2551737	IdentifierDecl	i		2551729	0					
ANR	2551738	IdentifierDeclType	int		2551729	0					
ANR	2551739	Identifier	i		2551729	1					
ANR	2551740	ExpressionStatement	r = arc_extension_map . auxRegisters	488:4:13999:14033	2551729	2	True				
ANR	2551741	AssignmentExpression	r = arc_extension_map . auxRegisters		2551729	0		=			
ANR	2551742	Identifier	r		2551729	0					
ANR	2551743	MemberAccess	arc_extension_map . auxRegisters		2551729	1					
ANR	2551744	Identifier	arc_extension_map		2551729	0					
ANR	2551745	Identifier	auxRegisters		2551729	1					
ANR	2551746	WhileStatement	while ( r )		2551729	3					
ANR	2551747	Condition	r	490:11:14047:14047	2551729	0	True				
ANR	2551748	Identifier	r		2551729	0					
ANR	2551749	CompoundStatement		8:4:121:121	2551729	1					
ANR	2551750	ExpressionStatement	"printf ( ""AUX : %s %ld\\n"" , r -> name , r -> address )"	492:8:14064:14109	2551729	0	True				
ANR	2551751	CallExpression	"printf ( ""AUX : %s %ld\\n"" , r -> name , r -> address )"		2551729	0					
ANR	2551752	Callee	printf		2551729	0					
ANR	2551753	Identifier	printf		2551729	0					
ANR	2551754	ArgumentList	"""AUX : %s %ld\\n"""		2551729	1					
ANR	2551755	Argument	"""AUX : %s %ld\\n"""		2551729	0					
ANR	2551756	PrimaryExpression	"""AUX : %s %ld\\n"""		2551729	0					
ANR	2551757	Argument	r -> name		2551729	1					
ANR	2551758	PtrMemberAccess	r -> name		2551729	0					
ANR	2551759	Identifier	r		2551729	0					
ANR	2551760	Identifier	name		2551729	1					
ANR	2551761	Argument	r -> address		2551729	2					
ANR	2551762	PtrMemberAccess	r -> address		2551729	0					
ANR	2551763	Identifier	r		2551729	0					
ANR	2551764	Identifier	address		2551729	1					
ANR	2551765	ExpressionStatement	r = r -> next	493:8:14119:14130	2551729	1	True				
ANR	2551766	AssignmentExpression	r = r -> next		2551729	0		=			
ANR	2551767	Identifier	r		2551729	0					
ANR	2551768	PtrMemberAccess	r -> next		2551729	1					
ANR	2551769	Identifier	r		2551729	0					
ANR	2551770	Identifier	next		2551729	1					
ANR	2551771	ForStatement	for ( i = 0 ; i < INST_HASH_SIZE ; i ++ )		2551729	4					
ANR	2551772	ForInit	i = 0 ;	496:9:14148:14153	2551729	0	True				
ANR	2551773	AssignmentExpression	i = 0		2551729	0		=			
ANR	2551774	Identifier	i		2551729	0					
ANR	2551775	PrimaryExpression	0		2551729	1					
ANR	2551776	Condition	i < INST_HASH_SIZE	496:16:14155:14172	2551729	1	True				
ANR	2551777	RelationalExpression	i < INST_HASH_SIZE		2551729	0		<			
ANR	2551778	Identifier	i		2551729	0					
ANR	2551779	Identifier	INST_HASH_SIZE		2551729	1					
ANR	2551780	PostIncDecOperationExpression	i ++	496:36:14175:14177	2551729	2	True				
ANR	2551781	Identifier	i		2551729	0					
ANR	2551782	IncDec	++		2551729	1					
ANR	2551783	CompoundStatement		15:8:261:288	2551729	3					
ANR	2551784	IdentifierDeclStatement	struct ExtInstruction * insn ;	498:8:14194:14221	2551729	0	True				
ANR	2551785	IdentifierDecl	* insn		2551729	0					
ANR	2551786	IdentifierDeclType	struct ExtInstruction *		2551729	0					
ANR	2551787	Identifier	insn		2551729	1					
ANR	2551788	ForStatement	for ( insn = arc_extension_map . instructions [ i ] ; insn != NULL ; insn = insn -> next )		2551729	1					
ANR	2551789	ForInit	insn = arc_extension_map . instructions [ i ] ;	500:6:14230:14270	2551729	0	True				
ANR	2551790	AssignmentExpression	insn = arc_extension_map . instructions [ i ]		2551729	0		=			
ANR	2551791	Identifier	insn		2551729	0					
ANR	2551792	ArrayIndexing	arc_extension_map . instructions [ i ]		2551729	1					
ANR	2551793	MemberAccess	arc_extension_map . instructions		2551729	0					
ANR	2551794	Identifier	arc_extension_map		2551729	0					
ANR	2551795	Identifier	instructions		2551729	1					
ANR	2551796	Identifier	i		2551729	1					
ANR	2551797	Condition	insn != NULL	500:48:14272:14283	2551729	1	True				
ANR	2551798	EqualityExpression	insn != NULL		2551729	0		!=			
ANR	2551799	Identifier	insn		2551729	0					
ANR	2551800	Identifier	NULL		2551729	1					
ANR	2551801	AssignmentExpression	insn = insn -> next	500:62:14286:14302	2551729	2	True	=			
ANR	2551802	Identifier	insn		2551729	0					
ANR	2551803	PtrMemberAccess	insn -> next		2551729	1					
ANR	2551804	Identifier	insn		2551729	0					
ANR	2551805	Identifier	next		2551729	1					
ANR	2551806	CompoundStatement		17:81:372:372	2551729	3					
ANR	2551807	ExpressionStatement	"printf ( ""INST: %d %d %x %s\\n"" , insn -> major , insn -> minor , insn -> flags , insn -> name )"	501:2:14309:14390	2551729	0	True				
ANR	2551808	CallExpression	"printf ( ""INST: %d %d %x %s\\n"" , insn -> major , insn -> minor , insn -> flags , insn -> name )"		2551729	0					
ANR	2551809	Callee	printf		2551729	0					
ANR	2551810	Identifier	printf		2551729	0					
ANR	2551811	ArgumentList	"""INST: %d %d %x %s\\n"""		2551729	1					
ANR	2551812	Argument	"""INST: %d %d %x %s\\n"""		2551729	0					
ANR	2551813	PrimaryExpression	"""INST: %d %d %x %s\\n"""		2551729	0					
ANR	2551814	Argument	insn -> major		2551729	1					
ANR	2551815	PtrMemberAccess	insn -> major		2551729	0					
ANR	2551816	Identifier	insn		2551729	0					
ANR	2551817	Identifier	major		2551729	1					
ANR	2551818	Argument	insn -> minor		2551729	2					
ANR	2551819	PtrMemberAccess	insn -> minor		2551729	0					
ANR	2551820	Identifier	insn		2551729	0					
ANR	2551821	Identifier	minor		2551729	1					
ANR	2551822	Argument	insn -> flags		2551729	3					
ANR	2551823	PtrMemberAccess	insn -> flags		2551729	0					
ANR	2551824	Identifier	insn		2551729	0					
ANR	2551825	Identifier	flags		2551729	1					
ANR	2551826	Argument	insn -> name		2551729	4					
ANR	2551827	PtrMemberAccess	insn -> name		2551729	0					
ANR	2551828	Identifier	insn		2551729	0					
ANR	2551829	Identifier	name		2551729	1					
ANR	2551830	ForStatement	for ( i = 0 ; i < NUM_EXT_CORE ; i ++ )		2551729	5					
ANR	2551831	ForInit	i = 0 ;	505:9:14411:14416	2551729	0	True				
ANR	2551832	AssignmentExpression	i = 0		2551729	0		=			
ANR	2551833	Identifier	i		2551729	0					
ANR	2551834	PrimaryExpression	0		2551729	1					
ANR	2551835	Condition	i < NUM_EXT_CORE	505:16:14418:14433	2551729	1	True				
ANR	2551836	RelationalExpression	i < NUM_EXT_CORE		2551729	0		<			
ANR	2551837	Identifier	i		2551729	0					
ANR	2551838	Identifier	NUM_EXT_CORE		2551729	1					
ANR	2551839	PostIncDecOperationExpression	i ++	505:34:14436:14438	2551729	2	True				
ANR	2551840	Identifier	i		2551729	0					
ANR	2551841	IncDec	++		2551729	1					
ANR	2551842	CompoundStatement		24:8:522:585	2551729	3					
ANR	2551843	IdentifierDeclStatement	struct ExtCoreRegister reg = arc_extension_map . coreRegisters [ i ] ;	507:8:14455:14518	2551729	0	True				
ANR	2551844	IdentifierDecl	reg = arc_extension_map . coreRegisters [ i ]		2551729	0					
ANR	2551845	IdentifierDeclType	struct ExtCoreRegister		2551729	0					
ANR	2551846	Identifier	reg		2551729	1					
ANR	2551847	AssignmentExpression	reg = arc_extension_map . coreRegisters [ i ]		2551729	2		=			
ANR	2551848	Identifier	reg		2551729	0					
ANR	2551849	ArrayIndexing	arc_extension_map . coreRegisters [ i ]		2551729	1					
ANR	2551850	MemberAccess	arc_extension_map . coreRegisters		2551729	0					
ANR	2551851	Identifier	arc_extension_map		2551729	0					
ANR	2551852	Identifier	coreRegisters		2551729	1					
ANR	2551853	Identifier	i		2551729	1					
ANR	2551854	IfStatement	if ( reg . name )		2551729	1					
ANR	2551855	Condition	reg . name	509:5:14526:14533	2551729	0	True				
ANR	2551856	MemberAccess	reg . name		2551729	0					
ANR	2551857	Identifier	reg		2551729	0					
ANR	2551858	Identifier	name		2551729	1					
ANR	2551859	CompoundStatement		26:15:603:603	2551729	1					
ANR	2551860	ExpressionStatement	"printf ( ""CORE: %s %d %s\\n"" , reg . name , reg . number , ExtReadWrite_image ( reg . rw ) )"	510:2:14540:14618	2551729	0	True				
ANR	2551861	CallExpression	"printf ( ""CORE: %s %d %s\\n"" , reg . name , reg . number , ExtReadWrite_image ( reg . rw ) )"		2551729	0					
ANR	2551862	Callee	printf		2551729	0					
ANR	2551863	Identifier	printf		2551729	0					
ANR	2551864	ArgumentList	"""CORE: %s %d %s\\n"""		2551729	1					
ANR	2551865	Argument	"""CORE: %s %d %s\\n"""		2551729	0					
ANR	2551866	PrimaryExpression	"""CORE: %s %d %s\\n"""		2551729	0					
ANR	2551867	Argument	reg . name		2551729	1					
ANR	2551868	MemberAccess	reg . name		2551729	0					
ANR	2551869	Identifier	reg		2551729	0					
ANR	2551870	Identifier	name		2551729	1					
ANR	2551871	Argument	reg . number		2551729	2					
ANR	2551872	MemberAccess	reg . number		2551729	0					
ANR	2551873	Identifier	reg		2551729	0					
ANR	2551874	Identifier	number		2551729	1					
ANR	2551875	Argument	ExtReadWrite_image ( reg . rw )		2551729	3					
ANR	2551876	CallExpression	ExtReadWrite_image ( reg . rw )		2551729	0					
ANR	2551877	Callee	ExtReadWrite_image		2551729	0					
ANR	2551878	Identifier	ExtReadWrite_image		2551729	0					
ANR	2551879	ArgumentList	reg . rw		2551729	1					
ANR	2551880	Argument	reg . rw		2551729	0					
ANR	2551881	MemberAccess	reg . rw		2551729	0					
ANR	2551882	Identifier	reg		2551729	0					
ANR	2551883	Identifier	rw		2551729	1					
ANR	2551884	ForStatement	for ( i = 0 ; i < NUM_EXT_COND ; i ++ )		2551729	6					
ANR	2551885	ForInit	i = 0 ;	514:9:14639:14644	2551729	0	True				
ANR	2551886	AssignmentExpression	i = 0		2551729	0		=			
ANR	2551887	Identifier	i		2551729	0					
ANR	2551888	PrimaryExpression	0		2551729	1					
ANR	2551889	Condition	i < NUM_EXT_COND	514:16:14646:14661	2551729	1	True				
ANR	2551890	RelationalExpression	i < NUM_EXT_COND		2551729	0		<			
ANR	2551891	Identifier	i		2551729	0					
ANR	2551892	Identifier	NUM_EXT_COND		2551729	1					
ANR	2551893	PostIncDecOperationExpression	i ++	514:34:14664:14666	2551729	2	True				
ANR	2551894	Identifier	i		2551729	0					
ANR	2551895	IncDec	++		2551729	1					
ANR	2551896	CompoundStatement		31:39:736:736	2551729	3					
ANR	2551897	IfStatement	if ( arc_extension_map . condCodes [ i ] )		2551729	0					
ANR	2551898	Condition	arc_extension_map . condCodes [ i ]	515:9:14680:14709	2551729	0	True				
ANR	2551899	ArrayIndexing	arc_extension_map . condCodes [ i ]		2551729	0					
ANR	2551900	MemberAccess	arc_extension_map . condCodes		2551729	0					
ANR	2551901	Identifier	arc_extension_map		2551729	0					
ANR	2551902	Identifier	condCodes		2551729	1					
ANR	2551903	Identifier	i		2551729	1					
ANR	2551904	CompoundStatement		32:41:779:779	2551729	1					
ANR	2551905	ExpressionStatement	"printf ( ""COND: %s\\n"" , arc_extension_map . condCodes [ i ] )"	516:6:14720:14773	2551729	0	True				
ANR	2551906	CallExpression	"printf ( ""COND: %s\\n"" , arc_extension_map . condCodes [ i ] )"		2551729	0					
ANR	2551907	Callee	printf		2551729	0					
ANR	2551908	Identifier	printf		2551729	0					
ANR	2551909	ArgumentList	"""COND: %s\\n"""		2551729	1					
ANR	2551910	Argument	"""COND: %s\\n"""		2551729	0					
ANR	2551911	PrimaryExpression	"""COND: %s\\n"""		2551729	0					
ANR	2551912	Argument	arc_extension_map . condCodes [ i ]		2551729	1					
ANR	2551913	ArrayIndexing	arc_extension_map . condCodes [ i ]		2551729	0					
ANR	2551914	MemberAccess	arc_extension_map . condCodes		2551729	0					
ANR	2551915	Identifier	arc_extension_map		2551729	0					
ANR	2551916	Identifier	condCodes		2551729	1					
ANR	2551917	Identifier	i		2551729	1					
ANR	2551918	ReturnType	void		2551729	1					
ANR	2551919	Identifier	dump_ARC_extmap		2551729	2					
ANR	2551920	ParameterList			2551729	3					
ANR	2551921	CFGEntryNode	ENTRY		2551729		True				
ANR	2551922	CFGExitNode	EXIT		2551729		True				
ANR	2551923	Symbol	reg . name		2551729						
ANR	2551924	Symbol	reg . number		2551729						
ANR	2551925	Symbol	arc_extension_map		2551729						
ANR	2551926	Symbol	NUM_EXT_CORE		2551729						
ANR	2551927	Symbol	INST_HASH_SIZE		2551729						
ANR	2551928	Symbol	insn -> next		2551729						
ANR	2551929	Symbol	NUM_EXT_COND		2551729						
ANR	2551930	Symbol	r -> next		2551729						
ANR	2551931	Symbol	insn -> name		2551729						
ANR	2551932	Symbol	ExtReadWrite_image		2551729						
ANR	2551933	Symbol	insn -> flags		2551729						
ANR	2551934	Symbol	reg		2551729						
ANR	2551935	Symbol	r -> address		2551729						
ANR	2551936	Symbol	* arc_extension_map . instructions		2551729						
ANR	2551937	Symbol	arc_extension_map . auxRegisters		2551729						
ANR	2551938	Symbol	arc_extension_map . condCodes		2551729						
ANR	2551939	Symbol	insn -> major		2551729						
ANR	2551940	Symbol	NULL		2551729						
ANR	2551941	Symbol	* arc_extension_map		2551729						
ANR	2551942	Symbol	i		2551729						
ANR	2551943	Symbol	* insn		2551729						
ANR	2551944	Symbol	insn -> minor		2551729						
ANR	2551945	Symbol	arc_extension_map . coreRegisters		2551729						
ANR	2551946	Symbol	* arc_extension_map . condCodes		2551729						
ANR	2551947	Symbol	insn		2551729						
ANR	2551948	Symbol	arc_extension_map . instructions		2551729						
ANR	2551949	Symbol	r		2551729						
ANR	2551950	Symbol	* arc_extension_map . coreRegisters		2551729						
ANR	2551951	Symbol	* i		2551729						
ANR	2551952	Symbol	reg . rw		2551729						
ANR	2551953	Symbol	r -> name		2551729						
ANR	2551954	Symbol	* r		2551729						
