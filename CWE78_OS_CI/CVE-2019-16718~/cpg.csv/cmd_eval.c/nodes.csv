command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	909941	File	data/converged/CVE-2019-16718~_radare2/cmd_eval.c								
ANR	909942	DeclStmt									
ANR	909943	Decl							const char	const char * [ ]	help_msg_e
ANR	909944	DeclStmt									
ANR	909945	Decl							const char	const char * [ ]	help_msg_ec
ANR	909946	DeclStmt									
ANR	909947	Decl							const char	const char * [ ]	help_msg_eco
ANR	909948	DeclStmt									
ANR	909949	Decl							char	char *	curtheme
ANR	909950	DeclStmt									
ANR	909951	Decl							bool	bool	getNext
ANR	909952	Function	cmd_eval_init	70:0:2747:2857							
ANR	909953	FunctionDef	cmd_eval_init (RCore * core)		909952	0					
ANR	909954	CompoundStatement		70:39:2786:2857	909952	0					
ANR	909955	ExpressionStatement	"DEFINE_CMD_DESCRIPTOR ( core , e )"	71:1:2789:2820	909952	0	True				
ANR	909956	CallExpression	"DEFINE_CMD_DESCRIPTOR ( core , e )"		909952	0					
ANR	909957	Callee	DEFINE_CMD_DESCRIPTOR		909952	0					
ANR	909958	Identifier	DEFINE_CMD_DESCRIPTOR		909952	0					
ANR	909959	ArgumentList	core		909952	1					
ANR	909960	Argument	core		909952	0					
ANR	909961	Identifier	core		909952	0					
ANR	909962	Argument	e		909952	1					
ANR	909963	Identifier	e		909952	0					
ANR	909964	ExpressionStatement	"DEFINE_CMD_DESCRIPTOR ( core , ec )"	72:1:2823:2855	909952	1	True				
ANR	909965	CallExpression	"DEFINE_CMD_DESCRIPTOR ( core , ec )"		909952	0					
ANR	909966	Callee	DEFINE_CMD_DESCRIPTOR		909952	0					
ANR	909967	Identifier	DEFINE_CMD_DESCRIPTOR		909952	0					
ANR	909968	ArgumentList	core		909952	1					
ANR	909969	Argument	core		909952	0					
ANR	909970	Identifier	core		909952	0					
ANR	909971	Argument	ec		909952	1					
ANR	909972	Identifier	ec		909952	0					
ANR	909973	ReturnType	static void		909952	1					
ANR	909974	Identifier	cmd_eval_init		909952	2					
ANR	909975	ParameterList	RCore * core		909952	3					
ANR	909976	Parameter	RCore * core	70:26:2773:2783	909952	0	True				
ANR	909977	ParameterType	RCore *		909952	0					
ANR	909978	Identifier	core		909952	1					
ANR	909979	CFGEntryNode	ENTRY		909952		True				
ANR	909980	CFGExitNode	EXIT		909952		True				
ANR	909981	Symbol	core		909952						
ANR	909982	Symbol	e		909952						
ANR	909983	Symbol	ec		909952						
ANR	909984	Function	load_theme	75:0:2860:3116							
ANR	909985	FunctionDef	"load_theme (RCore * core , const char * path)"		909984	0					
ANR	909986	CompoundStatement		75:54:2914:3116	909984	0					
ANR	909987	IfStatement	if ( ! r_file_exists ( path ) )		909984	0					
ANR	909988	Condition	! r_file_exists ( path )	76:5:2921:2941	909984	0	True				
ANR	909989	UnaryOperationExpression	! r_file_exists ( path )		909984	0					
ANR	909990	UnaryOperator	!		909984	0					
ANR	909991	CallExpression	r_file_exists ( path )		909984	1					
ANR	909992	Callee	r_file_exists		909984	0					
ANR	909993	Identifier	r_file_exists		909984	0					
ANR	909994	ArgumentList	path		909984	1					
ANR	909995	Argument	path		909984	0					
ANR	909996	Identifier	path		909984	0					
ANR	909997	CompoundStatement		2:28:29:29	909984	1					
ANR	909998	ReturnStatement	return false ;	77:2:2948:2960	909984	0	True				
ANR	909999	Identifier	false		909984	0					
ANR	910000	ExpressionStatement	"core -> cmdfilter = ""ec """	79:1:2966:2989	909984	1	True				
ANR	910001	AssignmentExpression	"core -> cmdfilter = ""ec """		909984	0		=			
ANR	910002	PtrMemberAccess	core -> cmdfilter		909984	0					
ANR	910003	Identifier	core		909984	0					
ANR	910004	Identifier	cmdfilter		909984	1					
ANR	910005	PrimaryExpression	"""ec """		909984	1					
ANR	910006	IdentifierDeclStatement	"bool res = r_core_cmd_file ( core , path ) ;"	80:1:2992:3031	909984	2	True				
ANR	910007	IdentifierDecl	"res = r_core_cmd_file ( core , path )"		909984	0					
ANR	910008	IdentifierDeclType	bool		909984	0					
ANR	910009	Identifier	res		909984	1					
ANR	910010	AssignmentExpression	"res = r_core_cmd_file ( core , path )"		909984	2		=			
ANR	910011	Identifier	res		909984	0					
ANR	910012	CallExpression	"r_core_cmd_file ( core , path )"		909984	1					
ANR	910013	Callee	r_core_cmd_file		909984	0					
ANR	910014	Identifier	r_core_cmd_file		909984	0					
ANR	910015	ArgumentList	core		909984	1					
ANR	910016	Argument	core		909984	0					
ANR	910017	Identifier	core		909984	0					
ANR	910018	Argument	path		909984	1					
ANR	910019	Identifier	path		909984	0					
ANR	910020	IfStatement	if ( res )		909984	3					
ANR	910021	Condition	res	81:5:3038:3040	909984	0	True				
ANR	910022	Identifier	res		909984	0					
ANR	910023	CompoundStatement		7:10:128:128	909984	1					
ANR	910024	ExpressionStatement	r_cons_pal_update_event ( )	82:2:3047:3073	909984	0	True				
ANR	910025	CallExpression	r_cons_pal_update_event ( )		909984	0					
ANR	910026	Callee	r_cons_pal_update_event		909984	0					
ANR	910027	Identifier	r_cons_pal_update_event		909984	0					
ANR	910028	ArgumentList			909984	1					
ANR	910029	ExpressionStatement	core -> cmdfilter = NULL	84:1:3079:3101	909984	4	True				
ANR	910030	AssignmentExpression	core -> cmdfilter = NULL		909984	0		=			
ANR	910031	PtrMemberAccess	core -> cmdfilter		909984	0					
ANR	910032	Identifier	core		909984	0					
ANR	910033	Identifier	cmdfilter		909984	1					
ANR	910034	Identifier	NULL		909984	1					
ANR	910035	ReturnStatement	return res ;	85:1:3104:3114	909984	5	True				
ANR	910036	Identifier	res		909984	0					
ANR	910037	ReturnType	static bool		909984	1					
ANR	910038	Identifier	load_theme		909984	2					
ANR	910039	ParameterList	"RCore * core , const char * path"		909984	3					
ANR	910040	Parameter	RCore * core	75:23:2883:2893	909984	0	True				
ANR	910041	ParameterType	RCore *		909984	0					
ANR	910042	Identifier	core		909984	1					
ANR	910043	Parameter	const char * path	75:36:2896:2911	909984	1	True				
ANR	910044	ParameterType	const char *		909984	0					
ANR	910045	Identifier	path		909984	1					
ANR	910046	CFGEntryNode	ENTRY		909984		True				
ANR	910047	CFGExitNode	EXIT		909984		True				
ANR	910048	Symbol	core		909984						
ANR	910049	Symbol	path		909984						
ANR	910050	Symbol	res		909984						
ANR	910051	Symbol	r_core_cmd_file		909984						
ANR	910052	Symbol	NULL		909984						
ANR	910053	Symbol	core -> cmdfilter		909984						
ANR	910054	Symbol	false		909984						
ANR	910055	Symbol	* core		909984						
ANR	910056	Symbol	r_file_exists		909984						
ANR	910057	Function	nextpal_item	88:0:3119:3754							
ANR	910058	FunctionDef	"nextpal_item (RCore * core , int mode , const char * file , int ctr)"		910057	0					
ANR	910059	CompoundStatement		88:75:3194:3754	910057	0					
ANR	910060	IdentifierDeclStatement	"const char * fn = r_str_lchr ( file , '/' ) ;"	89:1:3197:3236	910057	0	True				
ANR	910061	IdentifierDecl	"* fn = r_str_lchr ( file , '/' )"		910057	0					
ANR	910062	IdentifierDeclType	const char *		910057	0					
ANR	910063	Identifier	fn		910057	1					
ANR	910064	AssignmentExpression	"* fn = r_str_lchr ( file , '/' )"		910057	2		=			
ANR	910065	Identifier	fn		910057	0					
ANR	910066	CallExpression	"r_str_lchr ( file , '/' )"		910057	1					
ANR	910067	Callee	r_str_lchr		910057	0					
ANR	910068	Identifier	r_str_lchr		910057	0					
ANR	910069	ArgumentList	file		910057	1					
ANR	910070	Argument	file		910057	0					
ANR	910071	Identifier	file		910057	0					
ANR	910072	Argument	'/'		910057	1					
ANR	910073	PrimaryExpression	'/'		910057	0					
ANR	910074	IfStatement	if ( ! fn )		910057	1					
ANR	910075	Condition	! fn	90:5:3243:3245	910057	0	True				
ANR	910076	UnaryOperationExpression	! fn		910057	0					
ANR	910077	UnaryOperator	!		910057	0					
ANR	910078	Identifier	fn		910057	1					
ANR	910079	ExpressionStatement	fn = file	90:10:3248:3257	910057	1	True				
ANR	910080	AssignmentExpression	fn = file		910057	0		=			
ANR	910081	Identifier	fn		910057	0					
ANR	910082	Identifier	file		910057	1					
ANR	910083	SwitchStatement	switch ( mode )		910057	2					
ANR	910084	Condition	mode	91:9:3268:3271	910057	0	True				
ANR	910085	Identifier	mode		910057	0					
ANR	910086	CompoundStatement		4:15:79:79	910057	1					
ANR	910087	Label	case 'j' :	92:1:3277:3285	910057	0	True				
ANR	910088	ExpressionStatement	"r_cons_printf ( ""%s\\""%s\\"""" , ctr ? "","" : """" , fn )"	93:2:3297:3339	910057	1	True				
ANR	910089	CallExpression	"r_cons_printf ( ""%s\\""%s\\"""" , ctr ? "","" : """" , fn )"		910057	0					
ANR	910090	Callee	r_cons_printf		910057	0					
ANR	910091	Identifier	r_cons_printf		910057	0					
ANR	910092	ArgumentList	"""%s\\""%s\\"""""		910057	1					
ANR	910093	Argument	"""%s\\""%s\\"""""		910057	0					
ANR	910094	PrimaryExpression	"""%s\\""%s\\"""""		910057	0					
ANR	910095	Argument	"ctr ? "","" : """""		910057	1					
ANR	910096	ConditionalExpression	"ctr ? "","" : """""		910057	0					
ANR	910097	Condition	ctr		910057	0					
ANR	910098	Identifier	ctr		910057	0					
ANR	910099	PrimaryExpression	""","""		910057	1					
ANR	910100	PrimaryExpression	""""""		910057	2					
ANR	910101	Argument	fn		910057	2					
ANR	910102	Identifier	fn		910057	0					
ANR	910103	BreakStatement	break ;	94:2:3343:3348	910057	2	True				
ANR	910104	Label	case 'l' :	95:1:3351:3359	910057	3	True				
ANR	910105	ExpressionStatement	r_cons_println ( fn )	96:2:3371:3390	910057	4	True				
ANR	910106	CallExpression	r_cons_println ( fn )		910057	0					
ANR	910107	Callee	r_cons_println		910057	0					
ANR	910108	Identifier	r_cons_println		910057	0					
ANR	910109	ArgumentList	fn		910057	1					
ANR	910110	Argument	fn		910057	0					
ANR	910111	Identifier	fn		910057	0					
ANR	910112	BreakStatement	break ;	97:2:3394:3399	910057	5	True				
ANR	910113	Label	case 'p' :	98:1:3402:3410	910057	6	True				
ANR	910114	BreakStatement	break ;	100:2:3453:3458	910057	7	True				
ANR	910115	Label	case 'n' :	101:1:3461:3469	910057	8	True				
ANR	910116	IfStatement	if ( getNext )		910057	9					
ANR	910117	Condition	getNext	102:6:3485:3491	910057	0	True				
ANR	910118	Identifier	getNext		910057	0					
ANR	910119	CompoundStatement		15:15:299:299	910057	1					
ANR	910120	ExpressionStatement	"curtheme = r_str_dup ( curtheme , fn )"	103:3:3499:3534	910057	0	True				
ANR	910121	AssignmentExpression	"curtheme = r_str_dup ( curtheme , fn )"		910057	0		=			
ANR	910122	Identifier	curtheme		910057	0					
ANR	910123	CallExpression	"r_str_dup ( curtheme , fn )"		910057	1					
ANR	910124	Callee	r_str_dup		910057	0					
ANR	910125	Identifier	r_str_dup		910057	0					
ANR	910126	ArgumentList	curtheme		910057	1					
ANR	910127	Argument	curtheme		910057	0					
ANR	910128	Identifier	curtheme		910057	0					
ANR	910129	Argument	fn		910057	1					
ANR	910130	Identifier	fn		910057	0					
ANR	910131	ExpressionStatement	getNext = false	104:3:3539:3554	910057	1	True				
ANR	910132	AssignmentExpression	getNext = false		910057	0		=			
ANR	910133	Identifier	getNext		910057	0					
ANR	910134	Identifier	false		910057	1					
ANR	910135	ReturnStatement	return false ;	105:3:3559:3571	910057	2	True				
ANR	910136	Identifier	false		910057	0					
ANR	910137	ElseStatement	else		910057	0					
ANR	910138	IfStatement	if ( curtheme )		910057	0					
ANR	910139	Condition	curtheme	106:13:3586:3593	910057	0	True				
ANR	910140	Identifier	curtheme		910057	0					
ANR	910141	CompoundStatement		19:23:401:401	910057	1					
ANR	910142	IfStatement	"if ( ! strcmp ( curtheme , fn ) )"		910057	0					
ANR	910143	Condition	"! strcmp ( curtheme , fn )"	107:7:3605:3626	910057	0	True				
ANR	910144	UnaryOperationExpression	"! strcmp ( curtheme , fn )"		910057	0					
ANR	910145	UnaryOperator	!		910057	0					
ANR	910146	CallExpression	"strcmp ( curtheme , fn )"		910057	1					
ANR	910147	Callee	strcmp		910057	0					
ANR	910148	Identifier	strcmp		910057	0					
ANR	910149	ArgumentList	curtheme		910057	1					
ANR	910150	Argument	curtheme		910057	0					
ANR	910151	Identifier	curtheme		910057	0					
ANR	910152	Argument	fn		910057	1					
ANR	910153	Identifier	fn		910057	0					
ANR	910154	CompoundStatement		20:31:434:434	910057	1					
ANR	910155	ExpressionStatement	getNext = true	108:4:3635:3649	910057	0	True				
ANR	910156	AssignmentExpression	getNext = true		910057	0		=			
ANR	910157	Identifier	getNext		910057	0					
ANR	910158	Identifier	true		910057	1					
ANR	910159	ElseStatement	else		910057	0					
ANR	910160	CompoundStatement		23:9:470:470	910057	0					
ANR	910161	ExpressionStatement	"curtheme = r_str_dup ( curtheme , fn )"	111:3:3670:3705	910057	0	True				
ANR	910162	AssignmentExpression	"curtheme = r_str_dup ( curtheme , fn )"		910057	0		=			
ANR	910163	Identifier	curtheme		910057	0					
ANR	910164	CallExpression	"r_str_dup ( curtheme , fn )"		910057	1					
ANR	910165	Callee	r_str_dup		910057	0					
ANR	910166	Identifier	r_str_dup		910057	0					
ANR	910167	ArgumentList	curtheme		910057	1					
ANR	910168	Argument	curtheme		910057	0					
ANR	910169	Identifier	curtheme		910057	0					
ANR	910170	Argument	fn		910057	1					
ANR	910171	Identifier	fn		910057	0					
ANR	910172	ReturnStatement	return false ;	112:3:3710:3722	910057	1	True				
ANR	910173	Identifier	false		910057	0					
ANR	910174	BreakStatement	break ;	114:2:3730:3735	910057	10	True				
ANR	910175	ReturnStatement	return true ;	116:1:3741:3752	910057	3	True				
ANR	910176	Identifier	true		910057	0					
ANR	910177	ReturnType	static bool		910057	1					
ANR	910178	Identifier	nextpal_item		910057	2					
ANR	910179	ParameterList	"RCore * core , int mode , const char * file , int ctr"		910057	3					
ANR	910180	Parameter	RCore * core	88:25:3144:3154	910057	0	True				
ANR	910181	ParameterType	RCore *		910057	0					
ANR	910182	Identifier	core		910057	1					
ANR	910183	Parameter	int mode	88:38:3157:3164	910057	1	True				
ANR	910184	ParameterType	int		910057	0					
ANR	910185	Identifier	mode		910057	1					
ANR	910186	Parameter	const char * file	88:48:3167:3182	910057	2	True				
ANR	910187	ParameterType	const char *		910057	0					
ANR	910188	Identifier	file		910057	1					
ANR	910189	Parameter	int ctr	88:66:3185:3191	910057	3	True				
ANR	910190	ParameterType	int		910057	0					
ANR	910191	Identifier	ctr		910057	1					
ANR	910192	CFGEntryNode	ENTRY		910057		True				
ANR	910193	CFGExitNode	EXIT		910057		True				
ANR	910194	Symbol	mode		910057						
ANR	910195	Symbol	ctr		910057						
ANR	910196	Symbol	curtheme		910057						
ANR	910197	Symbol	strcmp		910057						
ANR	910198	Symbol	core		910057						
ANR	910199	Symbol	file		910057						
ANR	910200	Symbol	r_str_lchr		910057						
ANR	910201	Symbol	fn		910057						
ANR	910202	Symbol	false		910057						
ANR	910203	Symbol	true		910057						
ANR	910204	Symbol	getNext		910057						
ANR	910205	Symbol	r_str_dup		910057						
ANR	910206	Function	cmd_load_theme	119:0:3757:4735							
ANR	910207	FunctionDef	"cmd_load_theme (RCore * core , const char * _arg)"		910206	0					
ANR	910208	CompoundStatement		119:58:3815:4735	910206	0					
ANR	910209	IdentifierDeclStatement	bool failed = false ;	120:1:3818:3837	910206	0	True				
ANR	910210	IdentifierDecl	failed = false		910206	0					
ANR	910211	IdentifierDeclType	bool		910206	0					
ANR	910212	Identifier	failed		910206	1					
ANR	910213	AssignmentExpression	failed = false		910206	2		=			
ANR	910214	Identifier	false		910206	0					
ANR	910215	Identifier	false		910206	1					
ANR	910216	IdentifierDeclStatement	char * path ;	121:1:3840:3850	910206	1	True				
ANR	910217	IdentifierDecl	* path		910206	0					
ANR	910218	IdentifierDeclType	char *		910206	0					
ANR	910219	Identifier	path		910206	1					
ANR	910220	IfStatement	if ( ! _arg || ! * _arg )		910206	2					
ANR	910221	Condition	! _arg || ! * _arg	122:5:3857:3871	910206	0	True				
ANR	910222	OrExpression	! _arg || ! * _arg		910206	0		||			
ANR	910223	UnaryOperationExpression	! _arg		910206	0					
ANR	910224	UnaryOperator	!		910206	0					
ANR	910225	Identifier	_arg		910206	1					
ANR	910226	UnaryOperationExpression	! * _arg		910206	1					
ANR	910227	UnaryOperator	!		910206	0					
ANR	910228	UnaryOperationExpression	* _arg		910206	1					
ANR	910229	UnaryOperator	*		910206	0					
ANR	910230	Identifier	_arg		910206	1					
ANR	910231	CompoundStatement		4:22:58:58	910206	1					
ANR	910232	ReturnStatement	return false ;	123:2:3878:3890	910206	0	True				
ANR	910233	Identifier	false		910206	0					
ANR	910234	IfStatement	"if ( ! r_str_cmp ( _arg , ""default"" , strlen ( _arg ) ) )"		910206	3					
ANR	910235	Condition	"! r_str_cmp ( _arg , ""default"" , strlen ( _arg ) )"	125:5:3900:3942	910206	0	True				
ANR	910236	UnaryOperationExpression	"! r_str_cmp ( _arg , ""default"" , strlen ( _arg ) )"		910206	0					
ANR	910237	UnaryOperator	!		910206	0					
ANR	910238	CallExpression	"r_str_cmp ( _arg , ""default"" , strlen ( _arg ) )"		910206	1					
ANR	910239	Callee	r_str_cmp		910206	0					
ANR	910240	Identifier	r_str_cmp		910206	0					
ANR	910241	ArgumentList	_arg		910206	1					
ANR	910242	Argument	_arg		910206	0					
ANR	910243	Identifier	_arg		910206	0					
ANR	910244	Argument	"""default"""		910206	1					
ANR	910245	PrimaryExpression	"""default"""		910206	0					
ANR	910246	Argument	strlen ( _arg )		910206	2					
ANR	910247	CallExpression	strlen ( _arg )		910206	0					
ANR	910248	Callee	strlen		910206	0					
ANR	910249	Identifier	strlen		910206	0					
ANR	910250	ArgumentList	_arg		910206	1					
ANR	910251	Argument	_arg		910206	0					
ANR	910252	Identifier	_arg		910206	0					
ANR	910253	CompoundStatement		7:50:129:129	910206	1					
ANR	910254	ExpressionStatement	curtheme = strdup ( _arg )	126:2:3949:3973	910206	0	True				
ANR	910255	AssignmentExpression	curtheme = strdup ( _arg )		910206	0		=			
ANR	910256	Identifier	curtheme		910206	0					
ANR	910257	CallExpression	strdup ( _arg )		910206	1					
ANR	910258	Callee	strdup		910206	0					
ANR	910259	Identifier	strdup		910206	0					
ANR	910260	ArgumentList	_arg		910206	1					
ANR	910261	Argument	_arg		910206	0					
ANR	910262	Identifier	_arg		910206	0					
ANR	910263	ExpressionStatement	r_cons_pal_init ( core -> cons -> context )	127:2:3977:4014	910206	1	True				
ANR	910264	CallExpression	r_cons_pal_init ( core -> cons -> context )		910206	0					
ANR	910265	Callee	r_cons_pal_init		910206	0					
ANR	910266	Identifier	r_cons_pal_init		910206	0					
ANR	910267	ArgumentList	core -> cons -> context		910206	1					
ANR	910268	Argument	core -> cons -> context		910206	0					
ANR	910269	PtrMemberAccess	core -> cons -> context		910206	0					
ANR	910270	PtrMemberAccess	core -> cons		910206	0					
ANR	910271	Identifier	core		910206	0					
ANR	910272	Identifier	cons		910206	1					
ANR	910273	Identifier	context		910206	1					
ANR	910274	ReturnStatement	return true ;	128:2:4018:4029	910206	2	True				
ANR	910275	Identifier	true		910206	0					
ANR	910276	IdentifierDeclStatement	char * arg = strdup ( _arg ) ;	130:1:4035:4060	910206	4	True				
ANR	910277	IdentifierDecl	* arg = strdup ( _arg )		910206	0					
ANR	910278	IdentifierDeclType	char *		910206	0					
ANR	910279	Identifier	arg		910206	1					
ANR	910280	AssignmentExpression	* arg = strdup ( _arg )		910206	2		=			
ANR	910281	Identifier	arg		910206	0					
ANR	910282	CallExpression	strdup ( _arg )		910206	1					
ANR	910283	Callee	strdup		910206	0					
ANR	910284	Identifier	strdup		910206	0					
ANR	910285	ArgumentList	_arg		910206	1					
ANR	910286	Argument	_arg		910206	0					
ANR	910287	Identifier	_arg		910206	0					
ANR	910288	IdentifierDeclStatement	"char * tmp = r_str_newf ( R_JOIN_2_PATHS ( R2_HOME_THEMES , ""%s"" ) , arg ) ;"	132:1:4064:4131	910206	5	True				
ANR	910289	IdentifierDecl	"* tmp = r_str_newf ( R_JOIN_2_PATHS ( R2_HOME_THEMES , ""%s"" ) , arg )"		910206	0					
ANR	910290	IdentifierDeclType	char *		910206	0					
ANR	910291	Identifier	tmp		910206	1					
ANR	910292	AssignmentExpression	"* tmp = r_str_newf ( R_JOIN_2_PATHS ( R2_HOME_THEMES , ""%s"" ) , arg )"		910206	2		=			
ANR	910293	Identifier	tmp		910206	0					
ANR	910294	CallExpression	"r_str_newf ( R_JOIN_2_PATHS ( R2_HOME_THEMES , ""%s"" ) , arg )"		910206	1					
ANR	910295	Callee	r_str_newf		910206	0					
ANR	910296	Identifier	r_str_newf		910206	0					
ANR	910297	ArgumentList	"R_JOIN_2_PATHS ( R2_HOME_THEMES , ""%s"" )"		910206	1					
ANR	910298	Argument	"R_JOIN_2_PATHS ( R2_HOME_THEMES , ""%s"" )"		910206	0					
ANR	910299	CallExpression	"R_JOIN_2_PATHS ( R2_HOME_THEMES , ""%s"" )"		910206	0					
ANR	910300	Callee	R_JOIN_2_PATHS		910206	0					
ANR	910301	Identifier	R_JOIN_2_PATHS		910206	0					
ANR	910302	ArgumentList	R2_HOME_THEMES		910206	1					
ANR	910303	Argument	R2_HOME_THEMES		910206	0					
ANR	910304	Identifier	R2_HOME_THEMES		910206	0					
ANR	910305	Argument	"""%s"""		910206	1					
ANR	910306	PrimaryExpression	"""%s"""		910206	0					
ANR	910307	Argument	arg		910206	1					
ANR	910308	Identifier	arg		910206	0					
ANR	910309	IdentifierDeclStatement	char * home = tmp ? r_str_home ( tmp ) : NULL ;	133:1:4134:4176	910206	6	True				
ANR	910310	IdentifierDecl	* home = tmp ? r_str_home ( tmp ) : NULL		910206	0					
ANR	910311	IdentifierDeclType	char *		910206	0					
ANR	910312	Identifier	home		910206	1					
ANR	910313	AssignmentExpression	* home = tmp ? r_str_home ( tmp ) : NULL		910206	2		=			
ANR	910314	Identifier	home		910206	0					
ANR	910315	ConditionalExpression	tmp ? r_str_home ( tmp ) : NULL		910206	1					
ANR	910316	Condition	tmp		910206	0					
ANR	910317	Identifier	tmp		910206	0					
ANR	910318	CallExpression	r_str_home ( tmp )		910206	1					
ANR	910319	Callee	r_str_home		910206	0					
ANR	910320	Identifier	r_str_home		910206	0					
ANR	910321	ArgumentList	tmp		910206	1					
ANR	910322	Argument	tmp		910206	0					
ANR	910323	Identifier	tmp		910206	0					
ANR	910324	Identifier	NULL		910206	2					
ANR	910325	ExpressionStatement	free ( tmp )	134:1:4179:4189	910206	7	True				
ANR	910326	CallExpression	free ( tmp )		910206	0					
ANR	910327	Callee	free		910206	0					
ANR	910328	Identifier	free		910206	0					
ANR	910329	ArgumentList	tmp		910206	1					
ANR	910330	Argument	tmp		910206	0					
ANR	910331	Identifier	tmp		910206	0					
ANR	910332	ExpressionStatement	"tmp = r_str_newf ( R_JOIN_2_PATHS ( R2_THEMES , ""%s"" ) , arg )"	136:1:4193:4249	910206	8	True				
ANR	910333	AssignmentExpression	"tmp = r_str_newf ( R_JOIN_2_PATHS ( R2_THEMES , ""%s"" ) , arg )"		910206	0		=			
ANR	910334	Identifier	tmp		910206	0					
ANR	910335	CallExpression	"r_str_newf ( R_JOIN_2_PATHS ( R2_THEMES , ""%s"" ) , arg )"		910206	1					
ANR	910336	Callee	r_str_newf		910206	0					
ANR	910337	Identifier	r_str_newf		910206	0					
ANR	910338	ArgumentList	"R_JOIN_2_PATHS ( R2_THEMES , ""%s"" )"		910206	1					
ANR	910339	Argument	"R_JOIN_2_PATHS ( R2_THEMES , ""%s"" )"		910206	0					
ANR	910340	CallExpression	"R_JOIN_2_PATHS ( R2_THEMES , ""%s"" )"		910206	0					
ANR	910341	Callee	R_JOIN_2_PATHS		910206	0					
ANR	910342	Identifier	R_JOIN_2_PATHS		910206	0					
ANR	910343	ArgumentList	R2_THEMES		910206	1					
ANR	910344	Argument	R2_THEMES		910206	0					
ANR	910345	Identifier	R2_THEMES		910206	0					
ANR	910346	Argument	"""%s"""		910206	1					
ANR	910347	PrimaryExpression	"""%s"""		910206	0					
ANR	910348	Argument	arg		910206	1					
ANR	910349	Identifier	arg		910206	0					
ANR	910350	ExpressionStatement	path = tmp ? r_str_r2_prefix ( tmp ) : NULL	137:1:4252:4293	910206	9	True				
ANR	910351	AssignmentExpression	path = tmp ? r_str_r2_prefix ( tmp ) : NULL		910206	0		=			
ANR	910352	Identifier	path		910206	0					
ANR	910353	ConditionalExpression	tmp ? r_str_r2_prefix ( tmp ) : NULL		910206	1					
ANR	910354	Condition	tmp		910206	0					
ANR	910355	Identifier	tmp		910206	0					
ANR	910356	CallExpression	r_str_r2_prefix ( tmp )		910206	1					
ANR	910357	Callee	r_str_r2_prefix		910206	0					
ANR	910358	Identifier	r_str_r2_prefix		910206	0					
ANR	910359	ArgumentList	tmp		910206	1					
ANR	910360	Argument	tmp		910206	0					
ANR	910361	Identifier	tmp		910206	0					
ANR	910362	Identifier	NULL		910206	2					
ANR	910363	ExpressionStatement	free ( tmp )	138:1:4296:4306	910206	10	True				
ANR	910364	CallExpression	free ( tmp )		910206	0					
ANR	910365	Callee	free		910206	0					
ANR	910366	Identifier	free		910206	0					
ANR	910367	ArgumentList	tmp		910206	1					
ANR	910368	Argument	tmp		910206	0					
ANR	910369	Identifier	tmp		910206	0					
ANR	910370	IfStatement	"if ( ! load_theme ( core , home ) )"		910206	11					
ANR	910371	Condition	"! load_theme ( core , home )"	140:5:4314:4337	910206	0	True				
ANR	910372	UnaryOperationExpression	"! load_theme ( core , home )"		910206	0					
ANR	910373	UnaryOperator	!		910206	0					
ANR	910374	CallExpression	"load_theme ( core , home )"		910206	1					
ANR	910375	Callee	load_theme		910206	0					
ANR	910376	Identifier	load_theme		910206	0					
ANR	910377	ArgumentList	core		910206	1					
ANR	910378	Argument	core		910206	0					
ANR	910379	Identifier	core		910206	0					
ANR	910380	Argument	home		910206	1					
ANR	910381	Identifier	home		910206	0					
ANR	910382	CompoundStatement		22:31:524:524	910206	1					
ANR	910383	IfStatement	"if ( load_theme ( core , path ) )"		910206	0					
ANR	910384	Condition	"load_theme ( core , path )"	141:6:4348:4370	910206	0	True				
ANR	910385	CallExpression	"load_theme ( core , path )"		910206	0					
ANR	910386	Callee	load_theme		910206	0					
ANR	910387	Identifier	load_theme		910206	0					
ANR	910388	ArgumentList	core		910206	1					
ANR	910389	Argument	core		910206	0					
ANR	910390	Identifier	core		910206	0					
ANR	910391	Argument	path		910206	1					
ANR	910392	Identifier	path		910206	0					
ANR	910393	CompoundStatement		23:31:557:557	910206	1					
ANR	910394	ExpressionStatement	"curtheme = r_str_dup ( curtheme , arg )"	142:3:4378:4414	910206	0	True				
ANR	910395	AssignmentExpression	"curtheme = r_str_dup ( curtheme , arg )"		910206	0		=			
ANR	910396	Identifier	curtheme		910206	0					
ANR	910397	CallExpression	"r_str_dup ( curtheme , arg )"		910206	1					
ANR	910398	Callee	r_str_dup		910206	0					
ANR	910399	Identifier	r_str_dup		910206	0					
ANR	910400	ArgumentList	curtheme		910206	1					
ANR	910401	Argument	curtheme		910206	0					
ANR	910402	Identifier	curtheme		910206	0					
ANR	910403	Argument	arg		910206	1					
ANR	910404	Identifier	arg		910206	0					
ANR	910405	ElseStatement	else		910206	0					
ANR	910406	CompoundStatement		25:9:609:609	910206	0					
ANR	910407	IfStatement	"if ( load_theme ( core , arg ) )"		910206	0					
ANR	910408	Condition	"load_theme ( core , arg )"	144:7:4434:4455	910206	0	True				
ANR	910409	CallExpression	"load_theme ( core , arg )"		910206	0					
ANR	910410	Callee	load_theme		910206	0					
ANR	910411	Identifier	load_theme		910206	0					
ANR	910412	ArgumentList	core		910206	1					
ANR	910413	Argument	core		910206	0					
ANR	910414	Identifier	core		910206	0					
ANR	910415	Argument	arg		910206	1					
ANR	910416	Identifier	arg		910206	0					
ANR	910417	CompoundStatement		26:31:642:642	910206	1					
ANR	910418	ExpressionStatement	"curtheme = r_str_dup ( curtheme , arg )"	145:4:4464:4500	910206	0	True				
ANR	910419	AssignmentExpression	"curtheme = r_str_dup ( curtheme , arg )"		910206	0		=			
ANR	910420	Identifier	curtheme		910206	0					
ANR	910421	CallExpression	"r_str_dup ( curtheme , arg )"		910206	1					
ANR	910422	Callee	r_str_dup		910206	0					
ANR	910423	Identifier	r_str_dup		910206	0					
ANR	910424	ArgumentList	curtheme		910206	1					
ANR	910425	Argument	curtheme		910206	0					
ANR	910426	Identifier	curtheme		910206	0					
ANR	910427	Argument	arg		910206	1					
ANR	910428	Identifier	arg		910206	0					
ANR	910429	ElseStatement	else		910206	0					
ANR	910430	CompoundStatement		29:4:702:738	910206	0					
ANR	910431	IdentifierDeclStatement	char * absfile = r_file_abspath ( arg ) ;	147:4:4518:4554	910206	0	True				
ANR	910432	IdentifierDecl	* absfile = r_file_abspath ( arg )		910206	0					
ANR	910433	IdentifierDeclType	char *		910206	0					
ANR	910434	Identifier	absfile		910206	1					
ANR	910435	AssignmentExpression	* absfile = r_file_abspath ( arg )		910206	2		=			
ANR	910436	Identifier	absfile		910206	0					
ANR	910437	CallExpression	r_file_abspath ( arg )		910206	1					
ANR	910438	Callee	r_file_abspath		910206	0					
ANR	910439	Identifier	r_file_abspath		910206	0					
ANR	910440	ArgumentList	arg		910206	1					
ANR	910441	Argument	arg		910206	0					
ANR	910442	Identifier	arg		910206	0					
ANR	910443	ExpressionStatement	"eprintf ( ""eco: cannot open colorscheme profile (%s)\\n"" , absfile )"	148:4:4560:4624	910206	1	True				
ANR	910444	CallExpression	"eprintf ( ""eco: cannot open colorscheme profile (%s)\\n"" , absfile )"		910206	0					
ANR	910445	Callee	eprintf		910206	0					
ANR	910446	Identifier	eprintf		910206	0					
ANR	910447	ArgumentList	"""eco: cannot open colorscheme profile (%s)\\n"""		910206	1					
ANR	910448	Argument	"""eco: cannot open colorscheme profile (%s)\\n"""		910206	0					
ANR	910449	PrimaryExpression	"""eco: cannot open colorscheme profile (%s)\\n"""		910206	0					
ANR	910450	Argument	absfile		910206	1					
ANR	910451	Identifier	absfile		910206	0					
ANR	910452	ExpressionStatement	free ( absfile )	149:4:4630:4644	910206	2	True				
ANR	910453	CallExpression	free ( absfile )		910206	0					
ANR	910454	Callee	free		910206	0					
ANR	910455	Identifier	free		910206	0					
ANR	910456	ArgumentList	absfile		910206	1					
ANR	910457	Argument	absfile		910206	0					
ANR	910458	Identifier	absfile		910206	0					
ANR	910459	ExpressionStatement	failed = true	150:4:4650:4663	910206	3	True				
ANR	910460	AssignmentExpression	failed = true		910206	0		=			
ANR	910461	Identifier	failed		910206	0					
ANR	910462	Identifier	true		910206	1					
ANR	910463	ExpressionStatement	free ( home )	154:1:4678:4689	910206	12	True				
ANR	910464	CallExpression	free ( home )		910206	0					
ANR	910465	Callee	free		910206	0					
ANR	910466	Identifier	free		910206	0					
ANR	910467	ArgumentList	home		910206	1					
ANR	910468	Argument	home		910206	0					
ANR	910469	Identifier	home		910206	0					
ANR	910470	ExpressionStatement	free ( path )	155:1:4692:4703	910206	13	True				
ANR	910471	CallExpression	free ( path )		910206	0					
ANR	910472	Callee	free		910206	0					
ANR	910473	Identifier	free		910206	0					
ANR	910474	ArgumentList	path		910206	1					
ANR	910475	Argument	path		910206	0					
ANR	910476	Identifier	path		910206	0					
ANR	910477	ExpressionStatement	free ( arg )	156:1:4706:4716	910206	14	True				
ANR	910478	CallExpression	free ( arg )		910206	0					
ANR	910479	Callee	free		910206	0					
ANR	910480	Identifier	free		910206	0					
ANR	910481	ArgumentList	arg		910206	1					
ANR	910482	Argument	arg		910206	0					
ANR	910483	Identifier	arg		910206	0					
ANR	910484	ReturnStatement	return ! failed ;	157:1:4719:4733	910206	15	True				
ANR	910485	UnaryOperationExpression	! failed		910206	0					
ANR	910486	UnaryOperator	!		910206	0					
ANR	910487	Identifier	failed		910206	1					
ANR	910488	ReturnType	static bool		910206	1					
ANR	910489	Identifier	cmd_load_theme		910206	2					
ANR	910490	ParameterList	"RCore * core , const char * _arg"		910206	3					
ANR	910491	Parameter	RCore * core	119:27:3784:3794	910206	0	True				
ANR	910492	ParameterType	RCore *		910206	0					
ANR	910493	Identifier	core		910206	1					
ANR	910494	Parameter	const char * _arg	119:40:3797:3812	910206	1	True				
ANR	910495	ParameterType	const char *		910206	0					
ANR	910496	Identifier	_arg		910206	1					
ANR	910497	CFGEntryNode	ENTRY		910206		True				
ANR	910498	CFGExitNode	EXIT		910206		True				
ANR	910499	Symbol	r_file_abspath		910206						
ANR	910500	Symbol	* core -> cons		910206						
ANR	910501	Symbol	* core		910206						
ANR	910502	Symbol	r_str_newf		910206						
ANR	910503	Symbol	R2_THEMES		910206						
ANR	910504	Symbol	path		910206						
ANR	910505	Symbol	strlen		910206						
ANR	910506	Symbol	core -> cons		910206						
ANR	910507	Symbol	absfile		910206						
ANR	910508	Symbol	* _arg		910206						
ANR	910509	Symbol	tmp		910206						
ANR	910510	Symbol	arg		910206						
ANR	910511	Symbol	r_str_home		910206						
ANR	910512	Symbol	* * core		910206						
ANR	910513	Symbol	curtheme		910206						
ANR	910514	Symbol	NULL		910206						
ANR	910515	Symbol	R2_HOME_THEMES		910206						
ANR	910516	Symbol	false		910206						
ANR	910517	Symbol	load_theme		910206						
ANR	910518	Symbol	failed		910206						
ANR	910519	Symbol	home		910206						
ANR	910520	Symbol	r_str_cmp		910206						
ANR	910521	Symbol	core		910206						
ANR	910522	Symbol	R_JOIN_2_PATHS		910206						
ANR	910523	Symbol	true		910206						
ANR	910524	Symbol	r_str_r2_prefix		910206						
ANR	910525	Symbol	_arg		910206						
ANR	910526	Symbol	strdup		910206						
ANR	910527	Symbol	core -> cons -> context		910206						
ANR	910528	Symbol	r_str_dup		910206						
ANR	910529	Function	list_themes_in_path	160:0:4738:5002							
ANR	910530	FunctionDef	"list_themes_in_path (RList * list , const char * path)"		910529	0					
ANR	910531	CompoundStatement		160:63:4801:5002	910529	0					
ANR	910532	IdentifierDeclStatement	RListIter * iter ;	161:1:4804:4819	910529	0	True				
ANR	910533	IdentifierDecl	* iter		910529	0					
ANR	910534	IdentifierDeclType	RListIter *		910529	0					
ANR	910535	Identifier	iter		910529	1					
ANR	910536	IdentifierDeclStatement	const char * fn ;	162:1:4822:4836	910529	1	True				
ANR	910537	IdentifierDecl	* fn		910529	0					
ANR	910538	IdentifierDeclType	const char *		910529	0					
ANR	910539	Identifier	fn		910529	1					
ANR	910540	IdentifierDeclStatement	RList * files = r_sys_dir ( path ) ;	163:1:4839:4870	910529	2	True				
ANR	910541	IdentifierDecl	* files = r_sys_dir ( path )		910529	0					
ANR	910542	IdentifierDeclType	RList *		910529	0					
ANR	910543	Identifier	files		910529	1					
ANR	910544	AssignmentExpression	* files = r_sys_dir ( path )		910529	2		=			
ANR	910545	Identifier	files		910529	0					
ANR	910546	CallExpression	r_sys_dir ( path )		910529	1					
ANR	910547	Callee	r_sys_dir		910529	0					
ANR	910548	Identifier	r_sys_dir		910529	0					
ANR	910549	ArgumentList	path		910529	1					
ANR	910550	Argument	path		910529	0					
ANR	910551	Identifier	path		910529	0					
ANR	910552	Statement	r_list_foreach	164:1:4873:4886	910529	3	True				
ANR	910553	Statement	(	164:16:4888:4888	910529	4	True				
ANR	910554	Statement	files	164:17:4889:4893	910529	5	True				
ANR	910555	Statement	","	164:22:4894:4894	910529	6	True				
ANR	910556	Statement	iter	164:24:4896:4899	910529	7	True				
ANR	910557	Statement	","	164:28:4900:4900	910529	8	True				
ANR	910558	Statement	fn	164:30:4902:4903	910529	9	True				
ANR	910559	Statement	)	164:32:4904:4904	910529	10	True				
ANR	910560	CompoundStatement		5:34:104:104	910529	11					
ANR	910561	IfStatement	if ( * fn && * fn != '.' )		910529	0					
ANR	910562	Condition	* fn && * fn != '.'	165:6:4914:4930	910529	0	True				
ANR	910563	AndExpression	* fn && * fn != '.'		910529	0		&&			
ANR	910564	UnaryOperationExpression	* fn		910529	0					
ANR	910565	UnaryOperator	*		910529	0					
ANR	910566	Identifier	fn		910529	1					
ANR	910567	EqualityExpression	* fn != '.'		910529	1		!=			
ANR	910568	UnaryOperationExpression	* fn		910529	0					
ANR	910569	UnaryOperator	*		910529	0					
ANR	910570	Identifier	fn		910529	1					
ANR	910571	PrimaryExpression	'.'		910529	1					
ANR	910572	CompoundStatement		6:25:131:131	910529	1					
ANR	910573	ExpressionStatement	"r_list_append ( list , strdup ( fn ) )"	166:3:4938:4971	910529	0	True				
ANR	910574	CallExpression	"r_list_append ( list , strdup ( fn ) )"		910529	0					
ANR	910575	Callee	r_list_append		910529	0					
ANR	910576	Identifier	r_list_append		910529	0					
ANR	910577	ArgumentList	list		910529	1					
ANR	910578	Argument	list		910529	0					
ANR	910579	Identifier	list		910529	0					
ANR	910580	Argument	strdup ( fn )		910529	1					
ANR	910581	CallExpression	strdup ( fn )		910529	0					
ANR	910582	Callee	strdup		910529	0					
ANR	910583	Identifier	strdup		910529	0					
ANR	910584	ArgumentList	fn		910529	1					
ANR	910585	Argument	fn		910529	0					
ANR	910586	Identifier	fn		910529	0					
ANR	910587	ExpressionStatement	r_list_free ( files )	169:1:4981:5000	910529	12	True				
ANR	910588	CallExpression	r_list_free ( files )		910529	0					
ANR	910589	Callee	r_list_free		910529	0					
ANR	910590	Identifier	r_list_free		910529	0					
ANR	910591	ArgumentList	files		910529	1					
ANR	910592	Argument	files		910529	0					
ANR	910593	Identifier	files		910529	0					
ANR	910594	ReturnType	static void		910529	1					
ANR	910595	Identifier	list_themes_in_path		910529	2					
ANR	910596	ParameterList	"RList * list , const char * path"		910529	3					
ANR	910597	Parameter	RList * list	160:32:4770:4780	910529	0	True				
ANR	910598	ParameterType	RList *		910529	0					
ANR	910599	Identifier	list		910529	1					
ANR	910600	Parameter	const char * path	160:45:4783:4798	910529	1	True				
ANR	910601	ParameterType	const char *		910529	0					
ANR	910602	Identifier	path		910529	1					
ANR	910603	CFGEntryNode	ENTRY		910529		True				
ANR	910604	CFGExitNode	EXIT		910529		True				
ANR	910605	Symbol	path		910529						
ANR	910606	Symbol	fn		910529						
ANR	910607	Symbol	iter		910529						
ANR	910608	Symbol	files		910529						
ANR	910609	Symbol	strdup		910529						
ANR	910610	Symbol	list		910529						
ANR	910611	Symbol	* fn		910529						
ANR	910612	Symbol	r_sys_dir		910529						
ANR	910613	Function	r_core_get_theme	172:0:5005:5057							
ANR	910614	FunctionDef	r_core_get_theme ()		910613	0					
ANR	910615	CompoundStatement		172:32:5037:5057	910613	0					
ANR	910616	ReturnStatement	return curtheme ;	173:1:5040:5055	910613	0	True				
ANR	910617	Identifier	curtheme		910613	0					
ANR	910618	ReturnType	R_API char *		910613	1					
ANR	910619	Identifier	r_core_get_theme		910613	2					
ANR	910620	ParameterList			910613	3					
ANR	910621	CFGEntryNode	ENTRY		910613		True				
ANR	910622	CFGExitNode	EXIT		910613		True				
ANR	910623	Symbol	curtheme		910613						
ANR	910624	Function	r_core_list_themes	176:0:5060:5475							
ANR	910625	FunctionDef	r_core_list_themes (RCore * core)		910624	0					
ANR	910626	CompoundStatement		176:45:5105:5475	910624	0					
ANR	910627	IdentifierDeclStatement	RList * list = r_list_newf ( free ) ;	177:1:5108:5140	910624	0	True				
ANR	910628	IdentifierDecl	* list = r_list_newf ( free )		910624	0					
ANR	910629	IdentifierDeclType	RList *		910624	0					
ANR	910630	Identifier	list		910624	1					
ANR	910631	AssignmentExpression	* list = r_list_newf ( free )		910624	2		=			
ANR	910632	Identifier	list		910624	0					
ANR	910633	CallExpression	r_list_newf ( free )		910624	1					
ANR	910634	Callee	r_list_newf		910624	0					
ANR	910635	Identifier	r_list_newf		910624	0					
ANR	910636	ArgumentList	free		910624	1					
ANR	910637	Argument	free		910624	0					
ANR	910638	Identifier	free		910624	0					
ANR	910639	ExpressionStatement	getNext = false	178:1:5143:5158	910624	1	True				
ANR	910640	AssignmentExpression	getNext = false		910624	0		=			
ANR	910641	Identifier	getNext		910624	0					
ANR	910642	Identifier	false		910624	1					
ANR	910643	IdentifierDeclStatement	"char * tmp = strdup ( ""default"" ) ;"	179:1:5161:5191	910624	2	True				
ANR	910644	IdentifierDecl	"* tmp = strdup ( ""default"" )"		910624	0					
ANR	910645	IdentifierDeclType	char *		910624	0					
ANR	910646	Identifier	tmp		910624	1					
ANR	910647	AssignmentExpression	"* tmp = strdup ( ""default"" )"		910624	2		=			
ANR	910648	Identifier	tmp		910624	0					
ANR	910649	CallExpression	"strdup ( ""default"" )"		910624	1					
ANR	910650	Callee	strdup		910624	0					
ANR	910651	Identifier	strdup		910624	0					
ANR	910652	ArgumentList	"""default"""		910624	1					
ANR	910653	Argument	"""default"""		910624	0					
ANR	910654	PrimaryExpression	"""default"""		910624	0					
ANR	910655	ExpressionStatement	"r_list_append ( list , tmp )"	180:1:5194:5219	910624	3	True				
ANR	910656	CallExpression	"r_list_append ( list , tmp )"		910624	0					
ANR	910657	Callee	r_list_append		910624	0					
ANR	910658	Identifier	r_list_append		910624	0					
ANR	910659	ArgumentList	list		910624	1					
ANR	910660	Argument	list		910624	0					
ANR	910661	Identifier	list		910624	0					
ANR	910662	Argument	tmp		910624	1					
ANR	910663	Identifier	tmp		910624	0					
ANR	910664	Statement	char	181:1:5222:5225	910624	4	True				
ANR	910665	Statement	*	181:6:5227:5227	910624	5	True				
ANR	910666	Statement	path	181:7:5228:5231	910624	6	True				
ANR	910667	Statement	=	181:12:5233:5233	910624	7	True				
ANR	910668	Statement	r_str_home	181:14:5235:5244	910624	8	True				
ANR	910669	Statement	(	181:25:5246:5246	910624	9	True				
ANR	910670	Statement	R2_HOME_THEMES	181:26:5247:5260	910624	10	True				
ANR	910671	Statement	R_SYS_DIR	181:41:5262:5270	910624	11	True				
ANR	910672	Statement	)	181:50:5271:5271	910624	12	True				
ANR	910673	ExpressionStatement		181:51:5272:5272	910624	13	True				
ANR	910674	IfStatement	if ( path )		910624	14					
ANR	910675	Condition	path	182:5:5279:5282	910624	0	True				
ANR	910676	Identifier	path		910624	0					
ANR	910677	CompoundStatement		7:11:179:179	910624	1					
ANR	910678	ExpressionStatement	"list_themes_in_path ( list , path )"	183:2:5289:5321	910624	0	True				
ANR	910679	CallExpression	"list_themes_in_path ( list , path )"		910624	0					
ANR	910680	Callee	list_themes_in_path		910624	0					
ANR	910681	Identifier	list_themes_in_path		910624	0					
ANR	910682	ArgumentList	list		910624	1					
ANR	910683	Argument	list		910624	0					
ANR	910684	Identifier	list		910624	0					
ANR	910685	Argument	path		910624	1					
ANR	910686	Identifier	path		910624	0					
ANR	910687	ExpressionStatement	R_FREE ( path )	184:2:5325:5338	910624	1	True				
ANR	910688	CallExpression	R_FREE ( path )		910624	0					
ANR	910689	Callee	R_FREE		910624	0					
ANR	910690	Identifier	R_FREE		910624	0					
ANR	910691	ArgumentList	path		910624	1					
ANR	910692	Argument	path		910624	0					
ANR	910693	Identifier	path		910624	0					
ANR	910694	Statement	path	187:1:5345:5348	910624	15	True				
ANR	910695	Statement	=	187:6:5350:5350	910624	16	True				
ANR	910696	Statement	r_str_r2_prefix	187:8:5352:5366	910624	17	True				
ANR	910697	Statement	(	187:24:5368:5368	910624	18	True				
ANR	910698	Statement	R2_THEMES	187:25:5369:5377	910624	19	True				
ANR	910699	Statement	R_SYS_DIR	187:35:5379:5387	910624	20	True				
ANR	910700	Statement	)	187:44:5388:5388	910624	21	True				
ANR	910701	ExpressionStatement		187:45:5389:5389	910624	22	True				
ANR	910702	IfStatement	if ( path )		910624	23					
ANR	910703	Condition	path	188:5:5396:5399	910624	0	True				
ANR	910704	Identifier	path		910624	0					
ANR	910705	CompoundStatement		13:11:296:296	910624	1					
ANR	910706	ExpressionStatement	"list_themes_in_path ( list , path )"	189:2:5406:5438	910624	0	True				
ANR	910707	CallExpression	"list_themes_in_path ( list , path )"		910624	0					
ANR	910708	Callee	list_themes_in_path		910624	0					
ANR	910709	Identifier	list_themes_in_path		910624	0					
ANR	910710	ArgumentList	list		910624	1					
ANR	910711	Argument	list		910624	0					
ANR	910712	Identifier	list		910624	0					
ANR	910713	Argument	path		910624	1					
ANR	910714	Identifier	path		910624	0					
ANR	910715	ExpressionStatement	R_FREE ( path )	190:2:5442:5455	910624	1	True				
ANR	910716	CallExpression	R_FREE ( path )		910624	0					
ANR	910717	Callee	R_FREE		910624	0					
ANR	910718	Identifier	R_FREE		910624	0					
ANR	910719	ArgumentList	path		910624	1					
ANR	910720	Argument	path		910624	0					
ANR	910721	Identifier	path		910624	0					
ANR	910722	ReturnStatement	return list ;	193:1:5462:5473	910624	24	True				
ANR	910723	Identifier	list		910624	0					
ANR	910724	ReturnType	R_API RList *		910624	1					
ANR	910725	Identifier	r_core_list_themes		910624	2					
ANR	910726	ParameterList	RCore * core		910624	3					
ANR	910727	Parameter	RCore * core	176:32:5092:5102	910624	0	True				
ANR	910728	ParameterType	RCore *		910624	0					
ANR	910729	Identifier	core		910624	1					
ANR	910730	CFGEntryNode	ENTRY		910624		True				
ANR	910731	CFGExitNode	EXIT		910624		True				
ANR	910732	Symbol	core		910624						
ANR	910733	Symbol	path		910624						
ANR	910734	Symbol	r_list_newf		910624						
ANR	910735	Symbol	tmp		910624						
ANR	910736	Symbol	false		910624						
ANR	910737	Symbol	getNext		910624						
ANR	910738	Symbol	strdup		910624						
ANR	910739	Symbol	list		910624						
ANR	910740	Symbol	free		910624						
ANR	910741	Function	nextpal	196:0:5478:7491							
ANR	910742	FunctionDef	"nextpal (RCore * core , int mode)"		910741	0					
ANR	910743	CompoundStatement		196:43:5521:7491	910741	0					
ANR	910744	IdentifierDeclStatement	RList * files = NULL ;	198:1:5597:5616	910741	0	True				
ANR	910745	IdentifierDecl	* files = NULL		910741	0					
ANR	910746	IdentifierDeclType	RList *		910741	0					
ANR	910747	Identifier	files		910741	1					
ANR	910748	AssignmentExpression	* files = NULL		910741	2		=			
ANR	910749	Identifier	NULL		910741	0					
ANR	910750	Identifier	NULL		910741	1					
ANR	910751	IdentifierDeclStatement	RListIter * iter ;	199:1:5619:5634	910741	1	True				
ANR	910752	IdentifierDecl	* iter		910741	0					
ANR	910753	IdentifierDeclType	RListIter *		910741	0					
ANR	910754	Identifier	iter		910741	1					
ANR	910755	IdentifierDeclStatement	const char * fn ;	200:1:5637:5651	910741	2	True				
ANR	910756	IdentifierDecl	* fn		910741	0					
ANR	910757	IdentifierDeclType	const char *		910741	0					
ANR	910758	Identifier	fn		910741	1					
ANR	910759	IdentifierDeclStatement	char * path = NULL ;	201:1:5654:5671	910741	3	True				
ANR	910760	IdentifierDecl	* path = NULL		910741	0					
ANR	910761	IdentifierDeclType	char *		910741	0					
ANR	910762	Identifier	path		910741	1					
ANR	910763	AssignmentExpression	* path = NULL		910741	2		=			
ANR	910764	Identifier	NULL		910741	0					
ANR	910765	Identifier	NULL		910741	1					
ANR	910766	IdentifierDeclStatement	int ctr = 0 ;	202:1:5674:5685	910741	4	True				
ANR	910767	IdentifierDecl	ctr = 0		910741	0					
ANR	910768	IdentifierDeclType	int		910741	0					
ANR	910769	Identifier	ctr		910741	1					
ANR	910770	AssignmentExpression	ctr = 0		910741	2		=			
ANR	910771	Identifier	ctr		910741	0					
ANR	910772	PrimaryExpression	0		910741	1					
ANR	910773	Statement	char	203:1:5688:5691	910741	5	True				
ANR	910774	Statement	*	203:6:5693:5693	910741	6	True				
ANR	910775	Statement	home	203:7:5694:5697	910741	7	True				
ANR	910776	Statement	=	203:12:5699:5699	910741	8	True				
ANR	910777	Statement	r_str_home	203:14:5701:5710	910741	9	True				
ANR	910778	Statement	(	203:25:5712:5712	910741	10	True				
ANR	910779	Statement	R2_HOME_THEMES	203:26:5713:5726	910741	11	True				
ANR	910780	Statement	R_SYS_DIR	203:41:5728:5736	910741	12	True				
ANR	910781	Statement	)	203:50:5737:5737	910741	13	True				
ANR	910782	ExpressionStatement		203:51:5738:5738	910741	14	True				
ANR	910783	ExpressionStatement	getNext = false	205:1:5742:5757	910741	15	True				
ANR	910784	AssignmentExpression	getNext = false		910741	0		=			
ANR	910785	Identifier	getNext		910741	0					
ANR	910786	Identifier	false		910741	1					
ANR	910787	IfStatement	if ( mode == 'j' )		910741	16					
ANR	910788	Condition	mode == 'j'	206:5:5764:5774	910741	0	True				
ANR	910789	EqualityExpression	mode == 'j'		910741	0		==			
ANR	910790	Identifier	mode		910741	0					
ANR	910791	PrimaryExpression	'j'		910741	1					
ANR	910792	CompoundStatement		11:18:255:255	910741	1					
ANR	910793	ExpressionStatement	"r_cons_printf ( ""["" )"	207:2:5781:5800	910741	0	True				
ANR	910794	CallExpression	"r_cons_printf ( ""["" )"		910741	0					
ANR	910795	Callee	r_cons_printf		910741	0					
ANR	910796	Identifier	r_cons_printf		910741	0					
ANR	910797	ArgumentList	"""["""		910741	1					
ANR	910798	Argument	"""["""		910741	0					
ANR	910799	PrimaryExpression	"""["""		910741	0					
ANR	910800	IfStatement	if ( home )		910741	17					
ANR	910801	Condition	home	209:5:5810:5813	910741	0	True				
ANR	910802	Identifier	home		910741	0					
ANR	910803	CompoundStatement		14:11:294:294	910741	1					
ANR	910804	ExpressionStatement	files = r_sys_dir ( home )	210:2:5820:5844	910741	0	True				
ANR	910805	AssignmentExpression	files = r_sys_dir ( home )		910741	0		=			
ANR	910806	Identifier	files		910741	0					
ANR	910807	CallExpression	r_sys_dir ( home )		910741	1					
ANR	910808	Callee	r_sys_dir		910741	0					
ANR	910809	Identifier	r_sys_dir		910741	0					
ANR	910810	ArgumentList	home		910741	1					
ANR	910811	Argument	home		910741	0					
ANR	910812	Identifier	home		910741	0					
ANR	910813	Statement	r_list_foreach	211:2:5848:5861	910741	1	True				
ANR	910814	Statement	(	211:17:5863:5863	910741	2	True				
ANR	910815	Statement	files	211:18:5864:5868	910741	3	True				
ANR	910816	Statement	","	211:23:5869:5869	910741	4	True				
ANR	910817	Statement	iter	211:25:5871:5874	910741	5	True				
ANR	910818	Statement	","	211:29:5875:5875	910741	6	True				
ANR	910819	Statement	fn	211:31:5877:5878	910741	7	True				
ANR	910820	Statement	)	211:33:5879:5879	910741	8	True				
ANR	910821	CompoundStatement		16:35:359:359	910741	9					
ANR	910822	IfStatement	if ( * fn && * fn != '.' )		910741	0					
ANR	910823	Condition	* fn && * fn != '.'	212:7:5890:5906	910741	0	True				
ANR	910824	AndExpression	* fn && * fn != '.'		910741	0		&&			
ANR	910825	UnaryOperationExpression	* fn		910741	0					
ANR	910826	UnaryOperator	*		910741	0					
ANR	910827	Identifier	fn		910741	1					
ANR	910828	EqualityExpression	* fn != '.'		910741	1		!=			
ANR	910829	UnaryOperationExpression	* fn		910741	0					
ANR	910830	UnaryOperator	*		910741	0					
ANR	910831	Identifier	fn		910741	1					
ANR	910832	PrimaryExpression	'.'		910741	1					
ANR	910833	CompoundStatement		17:26:387:387	910741	1					
ANR	910834	IfStatement	if ( mode == 'p' )		910741	0					
ANR	910835	Condition	mode == 'p'	213:8:5919:5929	910741	0	True				
ANR	910836	EqualityExpression	mode == 'p'		910741	0		==			
ANR	910837	Identifier	mode		910741	0					
ANR	910838	PrimaryExpression	'p'		910741	1					
ANR	910839	CompoundStatement		19:5:417:463	910741	1					
ANR	910840	IdentifierDeclStatement	const char * nfn = iter -> n ? iter -> n -> data : NULL ;	214:5:5939:5985	910741	0	True				
ANR	910841	IdentifierDecl	* nfn = iter -> n ? iter -> n -> data : NULL		910741	0					
ANR	910842	IdentifierDeclType	const char *		910741	0					
ANR	910843	Identifier	nfn		910741	1					
ANR	910844	AssignmentExpression	* nfn = iter -> n ? iter -> n -> data : NULL		910741	2		=			
ANR	910845	Identifier	nfn		910741	0					
ANR	910846	ConditionalExpression	iter -> n ? iter -> n -> data : NULL		910741	1					
ANR	910847	Condition	iter -> n		910741	0					
ANR	910848	PtrMemberAccess	iter -> n		910741	0					
ANR	910849	Identifier	iter		910741	0					
ANR	910850	Identifier	n		910741	1					
ANR	910851	PtrMemberAccess	iter -> n -> data		910741	1					
ANR	910852	PtrMemberAccess	iter -> n		910741	0					
ANR	910853	Identifier	iter		910741	0					
ANR	910854	Identifier	n		910741	1					
ANR	910855	Identifier	data		910741	1					
ANR	910856	Identifier	NULL		910741	2					
ANR	910857	IfStatement	if ( ! curtheme )		910741	1					
ANR	910858	Condition	! curtheme	215:9:5996:6004	910741	0	True				
ANR	910859	UnaryOperationExpression	! curtheme		910741	0					
ANR	910860	UnaryOperator	!		910741	0					
ANR	910861	Identifier	curtheme		910741	1					
ANR	910862	CompoundStatement		20:20:485:485	910741	1					
ANR	910863	ExpressionStatement	free ( home )	216:6:6015:6026	910741	0	True				
ANR	910864	CallExpression	free ( home )		910741	0					
ANR	910865	Callee	free		910741	0					
ANR	910866	Identifier	free		910741	0					
ANR	910867	ArgumentList	home		910741	1					
ANR	910868	Argument	home		910741	0					
ANR	910869	Identifier	home		910741	0					
ANR	910870	ExpressionStatement	r_list_free ( files )	217:6:6034:6053	910741	1	True				
ANR	910871	CallExpression	r_list_free ( files )		910741	0					
ANR	910872	Callee	r_list_free		910741	0					
ANR	910873	Identifier	r_list_free		910741	0					
ANR	910874	ArgumentList	files		910741	1					
ANR	910875	Argument	files		910741	0					
ANR	910876	Identifier	files		910741	0					
ANR	910877	ReturnStatement	return ;	218:6:6061:6067	910741	2	True				
ANR	910878	ExpressionStatement	"eprintf ( ""%s %s %s\\n"" , nfn , curtheme , fn )"	220:5:6081:6122	910741	2	True				
ANR	910879	CallExpression	"eprintf ( ""%s %s %s\\n"" , nfn , curtheme , fn )"		910741	0					
ANR	910880	Callee	eprintf		910741	0					
ANR	910881	Identifier	eprintf		910741	0					
ANR	910882	ArgumentList	"""%s %s %s\\n"""		910741	1					
ANR	910883	Argument	"""%s %s %s\\n"""		910741	0					
ANR	910884	PrimaryExpression	"""%s %s %s\\n"""		910741	0					
ANR	910885	Argument	nfn		910741	1					
ANR	910886	Identifier	nfn		910741	0					
ANR	910887	Argument	curtheme		910741	2					
ANR	910888	Identifier	curtheme		910741	0					
ANR	910889	Argument	fn		910741	3					
ANR	910890	Identifier	fn		910741	0					
ANR	910891	IfStatement	"if ( nfn && ! strcmp ( nfn , curtheme ) )"		910741	3					
ANR	910892	Condition	"nfn && ! strcmp ( nfn , curtheme )"	221:9:6133:6162	910741	0	True				
ANR	910893	AndExpression	"nfn && ! strcmp ( nfn , curtheme )"		910741	0		&&			
ANR	910894	Identifier	nfn		910741	0					
ANR	910895	UnaryOperationExpression	"! strcmp ( nfn , curtheme )"		910741	1					
ANR	910896	UnaryOperator	!		910741	0					
ANR	910897	CallExpression	"strcmp ( nfn , curtheme )"		910741	1					
ANR	910898	Callee	strcmp		910741	0					
ANR	910899	Identifier	strcmp		910741	0					
ANR	910900	ArgumentList	nfn		910741	1					
ANR	910901	Argument	nfn		910741	0					
ANR	910902	Identifier	nfn		910741	0					
ANR	910903	Argument	curtheme		910741	1					
ANR	910904	Identifier	curtheme		910741	0					
ANR	910905	CompoundStatement		26:41:643:643	910741	1					
ANR	910906	ExpressionStatement	r_list_free ( files )	222:6:6173:6192	910741	0	True				
ANR	910907	CallExpression	r_list_free ( files )		910741	0					
ANR	910908	Callee	r_list_free		910741	0					
ANR	910909	Identifier	r_list_free		910741	0					
ANR	910910	ArgumentList	files		910741	1					
ANR	910911	Argument	files		910741	0					
ANR	910912	Identifier	files		910741	0					
ANR	910913	ExpressionStatement	files = NULL	223:6:6200:6212	910741	1	True				
ANR	910914	AssignmentExpression	files = NULL		910741	0		=			
ANR	910915	Identifier	files		910741	0					
ANR	910916	Identifier	NULL		910741	1					
ANR	910917	ExpressionStatement	free ( curtheme )	224:6:6220:6235	910741	2	True				
ANR	910918	CallExpression	free ( curtheme )		910741	0					
ANR	910919	Callee	free		910741	0					
ANR	910920	Identifier	free		910741	0					
ANR	910921	ArgumentList	curtheme		910741	1					
ANR	910922	Argument	curtheme		910741	0					
ANR	910923	Identifier	curtheme		910741	0					
ANR	910924	ExpressionStatement	curtheme = strdup ( fn )	225:6:6243:6265	910741	3	True				
ANR	910925	AssignmentExpression	curtheme = strdup ( fn )		910741	0		=			
ANR	910926	Identifier	curtheme		910741	0					
ANR	910927	CallExpression	strdup ( fn )		910741	1					
ANR	910928	Callee	strdup		910741	0					
ANR	910929	Identifier	strdup		910741	0					
ANR	910930	ArgumentList	fn		910741	1					
ANR	910931	Argument	fn		910741	0					
ANR	910932	Identifier	fn		910741	0					
ANR	910933	ExpressionStatement	R_FREE ( home )	226:6:6273:6286	910741	4	True				
ANR	910934	CallExpression	R_FREE ( home )		910741	0					
ANR	910935	Callee	R_FREE		910741	0					
ANR	910936	Identifier	R_FREE		910741	0					
ANR	910937	ArgumentList	home		910741	1					
ANR	910938	Argument	home		910741	0					
ANR	910939	Identifier	home		910741	0					
ANR	910940	GotoStatement	goto done ;	227:6:6294:6303	910741	5	True				
ANR	910941	Identifier	done		910741	0					
ANR	910942	ElseStatement	else		910741	0					
ANR	910943	CompoundStatement		34:11:801:801	910741	0					
ANR	910944	IfStatement	"if ( ! nextpal_item ( core , mode , fn , ctr ++ ) )"		910741	0					
ANR	910945	Condition	"! nextpal_item ( core , mode , fn , ctr ++ )"	230:9:6334:6370	910741	0	True				
ANR	910946	UnaryOperationExpression	"! nextpal_item ( core , mode , fn , ctr ++ )"		910741	0					
ANR	910947	UnaryOperator	!		910741	0					
ANR	910948	CallExpression	"nextpal_item ( core , mode , fn , ctr ++ )"		910741	1					
ANR	910949	Callee	nextpal_item		910741	0					
ANR	910950	Identifier	nextpal_item		910741	0					
ANR	910951	ArgumentList	core		910741	1					
ANR	910952	Argument	core		910741	0					
ANR	910953	Identifier	core		910741	0					
ANR	910954	Argument	mode		910741	1					
ANR	910955	Identifier	mode		910741	0					
ANR	910956	Argument	fn		910741	2					
ANR	910957	Identifier	fn		910741	0					
ANR	910958	Argument	ctr ++		910741	3					
ANR	910959	PostIncDecOperationExpression	ctr ++		910741	0					
ANR	910960	Identifier	ctr		910741	0					
ANR	910961	IncDec	++		910741	1					
ANR	910962	CompoundStatement		35:48:851:851	910741	1					
ANR	910963	ExpressionStatement	r_list_free ( files )	231:6:6381:6400	910741	0	True				
ANR	910964	CallExpression	r_list_free ( files )		910741	0					
ANR	910965	Callee	r_list_free		910741	0					
ANR	910966	Identifier	r_list_free		910741	0					
ANR	910967	ArgumentList	files		910741	1					
ANR	910968	Argument	files		910741	0					
ANR	910969	Identifier	files		910741	0					
ANR	910970	ExpressionStatement	files = NULL	232:6:6408:6420	910741	1	True				
ANR	910971	AssignmentExpression	files = NULL		910741	0		=			
ANR	910972	Identifier	files		910741	0					
ANR	910973	Identifier	NULL		910741	1					
ANR	910974	ExpressionStatement	R_FREE ( home )	233:6:6428:6441	910741	2	True				
ANR	910975	CallExpression	R_FREE ( home )		910741	0					
ANR	910976	Callee	R_FREE		910741	0					
ANR	910977	Identifier	R_FREE		910741	0					
ANR	910978	ArgumentList	home		910741	1					
ANR	910979	Argument	home		910741	0					
ANR	910980	Identifier	home		910741	0					
ANR	910981	GotoStatement	goto done ;	234:6:6449:6458	910741	3	True				
ANR	910982	Identifier	done		910741	0					
ANR	910983	ExpressionStatement	r_list_free ( files )	239:2:6484:6503	910741	10	True				
ANR	910984	CallExpression	r_list_free ( files )		910741	0					
ANR	910985	Callee	r_list_free		910741	0					
ANR	910986	Identifier	r_list_free		910741	0					
ANR	910987	ArgumentList	files		910741	1					
ANR	910988	Argument	files		910741	0					
ANR	910989	Identifier	files		910741	0					
ANR	910990	ExpressionStatement	R_FREE ( home )	240:2:6507:6520	910741	11	True				
ANR	910991	CallExpression	R_FREE ( home )		910741	0					
ANR	910992	Callee	R_FREE		910741	0					
ANR	910993	Identifier	R_FREE		910741	0					
ANR	910994	ArgumentList	home		910741	1					
ANR	910995	Argument	home		910741	0					
ANR	910996	Identifier	home		910741	0					
ANR	910997	Statement	path	243:1:6527:6530	910741	18	True				
ANR	910998	Statement	=	243:6:6532:6532	910741	19	True				
ANR	910999	Statement	r_str_r2_prefix	243:8:6534:6548	910741	20	True				
ANR	911000	Statement	(	243:24:6550:6550	910741	21	True				
ANR	911001	Statement	R2_THEMES	243:25:6551:6559	910741	22	True				
ANR	911002	Statement	R_SYS_DIR	243:35:6561:6569	910741	23	True				
ANR	911003	Statement	)	243:44:6570:6570	910741	24	True				
ANR	911004	ExpressionStatement		243:45:6571:6571	910741	25	True				
ANR	911005	IfStatement	if ( path )		910741	26					
ANR	911006	Condition	path	244:5:6578:6581	910741	0	True				
ANR	911007	Identifier	path		910741	0					
ANR	911008	CompoundStatement		49:11:1062:1062	910741	1					
ANR	911009	ExpressionStatement	files = r_sys_dir ( path )	245:2:6588:6612	910741	0	True				
ANR	911010	AssignmentExpression	files = r_sys_dir ( path )		910741	0		=			
ANR	911011	Identifier	files		910741	0					
ANR	911012	CallExpression	r_sys_dir ( path )		910741	1					
ANR	911013	Callee	r_sys_dir		910741	0					
ANR	911014	Identifier	r_sys_dir		910741	0					
ANR	911015	ArgumentList	path		910741	1					
ANR	911016	Argument	path		910741	0					
ANR	911017	Identifier	path		910741	0					
ANR	911018	Statement	r_list_foreach	246:2:6616:6629	910741	1	True				
ANR	911019	Statement	(	246:17:6631:6631	910741	2	True				
ANR	911020	Statement	files	246:18:6632:6636	910741	3	True				
ANR	911021	Statement	","	246:23:6637:6637	910741	4	True				
ANR	911022	Statement	iter	246:25:6639:6642	910741	5	True				
ANR	911023	Statement	","	246:29:6643:6643	910741	6	True				
ANR	911024	Statement	fn	246:31:6645:6646	910741	7	True				
ANR	911025	Statement	)	246:33:6647:6647	910741	8	True				
ANR	911026	CompoundStatement		51:35:1127:1127	910741	9					
ANR	911027	IfStatement	if ( * fn && * fn != '.' )		910741	0					
ANR	911028	Condition	* fn && * fn != '.'	247:7:6658:6674	910741	0	True				
ANR	911029	AndExpression	* fn && * fn != '.'		910741	0		&&			
ANR	911030	UnaryOperationExpression	* fn		910741	0					
ANR	911031	UnaryOperator	*		910741	0					
ANR	911032	Identifier	fn		910741	1					
ANR	911033	EqualityExpression	* fn != '.'		910741	1		!=			
ANR	911034	UnaryOperationExpression	* fn		910741	0					
ANR	911035	UnaryOperator	*		910741	0					
ANR	911036	Identifier	fn		910741	1					
ANR	911037	PrimaryExpression	'.'		910741	1					
ANR	911038	CompoundStatement		52:26:1155:1155	910741	1					
ANR	911039	IfStatement	if ( mode == 'p' )		910741	0					
ANR	911040	Condition	mode == 'p'	248:8:6687:6697	910741	0	True				
ANR	911041	EqualityExpression	mode == 'p'		910741	0		==			
ANR	911042	Identifier	mode		910741	0					
ANR	911043	PrimaryExpression	'p'		910741	1					
ANR	911044	CompoundStatement		54:5:1185:1231	910741	1					
ANR	911045	IdentifierDeclStatement	const char * nfn = iter -> n ? iter -> n -> data : NULL ;	249:5:6707:6753	910741	0	True				
ANR	911046	IdentifierDecl	* nfn = iter -> n ? iter -> n -> data : NULL		910741	0					
ANR	911047	IdentifierDeclType	const char *		910741	0					
ANR	911048	Identifier	nfn		910741	1					
ANR	911049	AssignmentExpression	* nfn = iter -> n ? iter -> n -> data : NULL		910741	2		=			
ANR	911050	Identifier	nfn		910741	0					
ANR	911051	ConditionalExpression	iter -> n ? iter -> n -> data : NULL		910741	1					
ANR	911052	Condition	iter -> n		910741	0					
ANR	911053	PtrMemberAccess	iter -> n		910741	0					
ANR	911054	Identifier	iter		910741	0					
ANR	911055	Identifier	n		910741	1					
ANR	911056	PtrMemberAccess	iter -> n -> data		910741	1					
ANR	911057	PtrMemberAccess	iter -> n		910741	0					
ANR	911058	Identifier	iter		910741	0					
ANR	911059	Identifier	n		910741	1					
ANR	911060	Identifier	data		910741	1					
ANR	911061	Identifier	NULL		910741	2					
ANR	911062	IfStatement	if ( ! curtheme )		910741	1					
ANR	911063	Condition	! curtheme	250:9:6764:6772	910741	0	True				
ANR	911064	UnaryOperationExpression	! curtheme		910741	0					
ANR	911065	UnaryOperator	!		910741	0					
ANR	911066	Identifier	curtheme		910741	1					
ANR	911067	CompoundStatement		55:20:1253:1253	910741	1					
ANR	911068	ExpressionStatement	free ( home )	251:6:6783:6794	910741	0	True				
ANR	911069	CallExpression	free ( home )		910741	0					
ANR	911070	Callee	free		910741	0					
ANR	911071	Identifier	free		910741	0					
ANR	911072	ArgumentList	home		910741	1					
ANR	911073	Argument	home		910741	0					
ANR	911074	Identifier	home		910741	0					
ANR	911075	ExpressionStatement	r_list_free ( files )	252:6:6802:6821	910741	1	True				
ANR	911076	CallExpression	r_list_free ( files )		910741	0					
ANR	911077	Callee	r_list_free		910741	0					
ANR	911078	Identifier	r_list_free		910741	0					
ANR	911079	ArgumentList	files		910741	1					
ANR	911080	Argument	files		910741	0					
ANR	911081	Identifier	files		910741	0					
ANR	911082	ReturnStatement	return ;	253:6:6829:6835	910741	2	True				
ANR	911083	ExpressionStatement	"eprintf ( ""%s %s %s\\n"" , nfn , curtheme , fn )"	255:5:6849:6890	910741	2	True				
ANR	911084	CallExpression	"eprintf ( ""%s %s %s\\n"" , nfn , curtheme , fn )"		910741	0					
ANR	911085	Callee	eprintf		910741	0					
ANR	911086	Identifier	eprintf		910741	0					
ANR	911087	ArgumentList	"""%s %s %s\\n"""		910741	1					
ANR	911088	Argument	"""%s %s %s\\n"""		910741	0					
ANR	911089	PrimaryExpression	"""%s %s %s\\n"""		910741	0					
ANR	911090	Argument	nfn		910741	1					
ANR	911091	Identifier	nfn		910741	0					
ANR	911092	Argument	curtheme		910741	2					
ANR	911093	Identifier	curtheme		910741	0					
ANR	911094	Argument	fn		910741	3					
ANR	911095	Identifier	fn		910741	0					
ANR	911096	IfStatement	"if ( nfn && ! strcmp ( nfn , curtheme ) )"		910741	3					
ANR	911097	Condition	"nfn && ! strcmp ( nfn , curtheme )"	256:9:6901:6930	910741	0	True				
ANR	911098	AndExpression	"nfn && ! strcmp ( nfn , curtheme )"		910741	0		&&			
ANR	911099	Identifier	nfn		910741	0					
ANR	911100	UnaryOperationExpression	"! strcmp ( nfn , curtheme )"		910741	1					
ANR	911101	UnaryOperator	!		910741	0					
ANR	911102	CallExpression	"strcmp ( nfn , curtheme )"		910741	1					
ANR	911103	Callee	strcmp		910741	0					
ANR	911104	Identifier	strcmp		910741	0					
ANR	911105	ArgumentList	nfn		910741	1					
ANR	911106	Argument	nfn		910741	0					
ANR	911107	Identifier	nfn		910741	0					
ANR	911108	Argument	curtheme		910741	1					
ANR	911109	Identifier	curtheme		910741	0					
ANR	911110	CompoundStatement		61:41:1411:1411	910741	1					
ANR	911111	ExpressionStatement	free ( curtheme )	257:6:6941:6956	910741	0	True				
ANR	911112	CallExpression	free ( curtheme )		910741	0					
ANR	911113	Callee	free		910741	0					
ANR	911114	Identifier	free		910741	0					
ANR	911115	ArgumentList	curtheme		910741	1					
ANR	911116	Argument	curtheme		910741	0					
ANR	911117	Identifier	curtheme		910741	0					
ANR	911118	ExpressionStatement	curtheme = strdup ( fn )	258:6:6964:6986	910741	1	True				
ANR	911119	AssignmentExpression	curtheme = strdup ( fn )		910741	0		=			
ANR	911120	Identifier	curtheme		910741	0					
ANR	911121	CallExpression	strdup ( fn )		910741	1					
ANR	911122	Callee	strdup		910741	0					
ANR	911123	Identifier	strdup		910741	0					
ANR	911124	ArgumentList	fn		910741	1					
ANR	911125	Argument	fn		910741	0					
ANR	911126	Identifier	fn		910741	0					
ANR	911127	GotoStatement	goto done ;	259:6:6994:7003	910741	2	True				
ANR	911128	Identifier	done		910741	0					
ANR	911129	ElseStatement	else		910741	0					
ANR	911130	CompoundStatement		66:11:1501:1501	910741	0					
ANR	911131	IfStatement	"if ( ! nextpal_item ( core , mode , fn , ctr ++ ) )"		910741	0					
ANR	911132	Condition	"! nextpal_item ( core , mode , fn , ctr ++ )"	262:9:7034:7070	910741	0	True				
ANR	911133	UnaryOperationExpression	"! nextpal_item ( core , mode , fn , ctr ++ )"		910741	0					
ANR	911134	UnaryOperator	!		910741	0					
ANR	911135	CallExpression	"nextpal_item ( core , mode , fn , ctr ++ )"		910741	1					
ANR	911136	Callee	nextpal_item		910741	0					
ANR	911137	Identifier	nextpal_item		910741	0					
ANR	911138	ArgumentList	core		910741	1					
ANR	911139	Argument	core		910741	0					
ANR	911140	Identifier	core		910741	0					
ANR	911141	Argument	mode		910741	1					
ANR	911142	Identifier	mode		910741	0					
ANR	911143	Argument	fn		910741	2					
ANR	911144	Identifier	fn		910741	0					
ANR	911145	Argument	ctr ++		910741	3					
ANR	911146	PostIncDecOperationExpression	ctr ++		910741	0					
ANR	911147	Identifier	ctr		910741	0					
ANR	911148	IncDec	++		910741	1					
ANR	911149	CompoundStatement		67:48:1551:1551	910741	1					
ANR	911150	GotoStatement	goto done ;	263:6:7081:7090	910741	0	True				
ANR	911151	Identifier	done		910741	0					
ANR	911152	Label	done :	270:0:7118:7122	910741	27	True				
ANR	911153	Identifier	done		910741	0					
ANR	911154	ExpressionStatement	free ( path )	271:1:7125:7136	910741	28	True				
ANR	911155	CallExpression	free ( path )		910741	0					
ANR	911156	Callee	free		910741	0					
ANR	911157	Identifier	free		910741	0					
ANR	911158	ArgumentList	path		910741	1					
ANR	911159	Argument	path		910741	0					
ANR	911160	Identifier	path		910741	0					
ANR	911161	IfStatement	if ( getNext )		910741	29					
ANR	911162	Condition	getNext	272:5:7143:7149	910741	0	True				
ANR	911163	Identifier	getNext		910741	0					
ANR	911164	CompoundStatement		77:14:1630:1630	910741	1					
ANR	911165	ExpressionStatement	R_FREE ( curtheme )	273:2:7156:7173	910741	0	True				
ANR	911166	CallExpression	R_FREE ( curtheme )		910741	0					
ANR	911167	Callee	R_FREE		910741	0					
ANR	911168	Identifier	R_FREE		910741	0					
ANR	911169	ArgumentList	curtheme		910741	1					
ANR	911170	Argument	curtheme		910741	0					
ANR	911171	Identifier	curtheme		910741	0					
ANR	911172	ExpressionStatement	"nextpal ( core , mode )"	274:2:7177:7197	910741	1	True				
ANR	911173	CallExpression	"nextpal ( core , mode )"		910741	0					
ANR	911174	Callee	nextpal		910741	0					
ANR	911175	Identifier	nextpal		910741	0					
ANR	911176	ArgumentList	core		910741	1					
ANR	911177	Argument	core		910741	0					
ANR	911178	Identifier	core		910741	0					
ANR	911179	Argument	mode		910741	1					
ANR	911180	Identifier	mode		910741	0					
ANR	911181	ReturnStatement	return ;	275:2:7201:7207	910741	2	True				
ANR	911182	IfStatement	if ( mode == 'l' && ! curtheme && ! r_list_empty ( files ) )		910741	30					
ANR	911183	Condition	mode == 'l' && ! curtheme && ! r_list_empty ( files )	277:5:7217:7265	910741	0	True				
ANR	911184	AndExpression	mode == 'l' && ! curtheme && ! r_list_empty ( files )		910741	0		&&			
ANR	911185	EqualityExpression	mode == 'l'		910741	0		==			
ANR	911186	Identifier	mode		910741	0					
ANR	911187	PrimaryExpression	'l'		910741	1					
ANR	911188	AndExpression	! curtheme && ! r_list_empty ( files )		910741	1		&&			
ANR	911189	UnaryOperationExpression	! curtheme		910741	0					
ANR	911190	UnaryOperator	!		910741	0					
ANR	911191	Identifier	curtheme		910741	1					
ANR	911192	UnaryOperationExpression	! r_list_empty ( files )		910741	1					
ANR	911193	UnaryOperator	!		910741	0					
ANR	911194	CallExpression	r_list_empty ( files )		910741	1					
ANR	911195	Callee	r_list_empty		910741	0					
ANR	911196	Identifier	r_list_empty		910741	0					
ANR	911197	ArgumentList	files		910741	1					
ANR	911198	Argument	files		910741	0					
ANR	911199	Identifier	files		910741	0					
ANR	911200	CompoundStatement		82:56:1746:1746	910741	1					
ANR	911201	ElseStatement	else		910741	0					
ANR	911202	IfStatement	if ( mode == 'n' || mode == 'p' )		910741	0					
ANR	911203	Condition	mode == 'n' || mode == 'p'	279:12:7308:7333	910741	0	True				
ANR	911204	OrExpression	mode == 'n' || mode == 'p'		910741	0		||			
ANR	911205	EqualityExpression	mode == 'n'		910741	0		==			
ANR	911206	Identifier	mode		910741	0					
ANR	911207	PrimaryExpression	'n'		910741	1					
ANR	911208	EqualityExpression	mode == 'p'		910741	1		==			
ANR	911209	Identifier	mode		910741	0					
ANR	911210	PrimaryExpression	'p'		910741	1					
ANR	911211	CompoundStatement		84:40:1814:1814	910741	1					
ANR	911212	IfStatement	if ( curtheme )		910741	0					
ANR	911213	Condition	curtheme	280:6:7344:7351	910741	0	True				
ANR	911214	Identifier	curtheme		910741	0					
ANR	911215	CompoundStatement		85:16:1832:1832	910741	1					
ANR	911216	ExpressionStatement	"r_core_cmdf ( core , ""eco %s"" , curtheme )"	281:3:7359:7397	910741	0	True				
ANR	911217	CallExpression	"r_core_cmdf ( core , ""eco %s"" , curtheme )"		910741	0					
ANR	911218	Callee	r_core_cmdf		910741	0					
ANR	911219	Identifier	r_core_cmdf		910741	0					
ANR	911220	ArgumentList	core		910741	1					
ANR	911221	Argument	core		910741	0					
ANR	911222	Identifier	core		910741	0					
ANR	911223	Argument	"""eco %s"""		910741	1					
ANR	911224	PrimaryExpression	"""eco %s"""		910741	0					
ANR	911225	Argument	curtheme		910741	2					
ANR	911226	Identifier	curtheme		910741	0					
ANR	911227	ExpressionStatement	r_list_free ( files )	284:1:7407:7426	910741	31	True				
ANR	911228	CallExpression	r_list_free ( files )		910741	0					
ANR	911229	Callee	r_list_free		910741	0					
ANR	911230	Identifier	r_list_free		910741	0					
ANR	911231	ArgumentList	files		910741	1					
ANR	911232	Argument	files		910741	0					
ANR	911233	Identifier	files		910741	0					
ANR	911234	ExpressionStatement	files = NULL	285:1:7429:7441	910741	32	True				
ANR	911235	AssignmentExpression	files = NULL		910741	0		=			
ANR	911236	Identifier	files		910741	0					
ANR	911237	Identifier	NULL		910741	1					
ANR	911238	IfStatement	if ( mode == 'j' )		910741	33					
ANR	911239	Condition	mode == 'j'	286:5:7448:7458	910741	0	True				
ANR	911240	EqualityExpression	mode == 'j'		910741	0		==			
ANR	911241	Identifier	mode		910741	0					
ANR	911242	PrimaryExpression	'j'		910741	1					
ANR	911243	CompoundStatement		91:18:1939:1939	910741	1					
ANR	911244	ExpressionStatement	"r_cons_printf ( ""]\\n"" )"	287:2:7465:7486	910741	0	True				
ANR	911245	CallExpression	"r_cons_printf ( ""]\\n"" )"		910741	0					
ANR	911246	Callee	r_cons_printf		910741	0					
ANR	911247	Identifier	r_cons_printf		910741	0					
ANR	911248	ArgumentList	"""]\\n"""		910741	1					
ANR	911249	Argument	"""]\\n"""		910741	0					
ANR	911250	PrimaryExpression	"""]\\n"""		910741	0					
ANR	911251	ReturnType	static void		910741	1					
ANR	911252	Identifier	nextpal		910741	2					
ANR	911253	ParameterList	"RCore * core , int mode"		910741	3					
ANR	911254	Parameter	RCore * core	196:20:5498:5508	910741	0	True				
ANR	911255	ParameterType	RCore *		910741	0					
ANR	911256	Identifier	core		910741	1					
ANR	911257	Parameter	int mode	196:33:5511:5518	910741	1	True				
ANR	911258	ParameterType	int		910741	0					
ANR	911259	Identifier	mode		910741	1					
ANR	911260	CFGEntryNode	ENTRY		910741		True				
ANR	911261	CFGExitNode	EXIT		910741		True				
ANR	911262	Symbol	ctr		910741						
ANR	911263	Symbol	curtheme		910741						
ANR	911264	Symbol	strcmp		910741						
ANR	911265	Symbol	NULL		910741						
ANR	911266	Symbol	fn		910741						
ANR	911267	Symbol	false		910741						
ANR	911268	Symbol	iter		910741						
ANR	911269	Symbol	iter -> n -> data		910741						
ANR	911270	Symbol	getNext		910741						
ANR	911271	Symbol	* fn		910741						
ANR	911272	Symbol	home		910741						
ANR	911273	Symbol	mode		910741						
ANR	911274	Symbol	core		910741						
ANR	911275	Symbol	path		910741						
ANR	911276	Symbol	* iter		910741						
ANR	911277	Symbol	* iter -> n		910741						
ANR	911278	Symbol	iter -> n		910741						
ANR	911279	Symbol	nfn		910741						
ANR	911280	Symbol	files		910741						
ANR	911281	Symbol	r_list_empty		910741						
ANR	911282	Symbol	strdup		910741						
ANR	911283	Symbol	* * iter		910741						
ANR	911284	Symbol	nextpal_item		910741						
ANR	911285	Symbol	r_sys_dir		910741						
ANR	911286	Function	r_core_echo	291:0:7494:7825							
ANR	911287	FunctionDef	"r_core_echo (RCore * core , const char * input)"		911286	0					
ANR	911288	CompoundStatement		291:55:7549:7825	911286	0					
ANR	911289	IfStatement	"if ( ! strncmp ( input , ""64 "" , 3 ) )"		911286	0					
ANR	911290	Condition	"! strncmp ( input , ""64 "" , 3 )"	292:5:7556:7581	911286	0	True				
ANR	911291	UnaryOperationExpression	"! strncmp ( input , ""64 "" , 3 )"		911286	0					
ANR	911292	UnaryOperator	!		911286	0					
ANR	911293	CallExpression	"strncmp ( input , ""64 "" , 3 )"		911286	1					
ANR	911294	Callee	strncmp		911286	0					
ANR	911295	Identifier	strncmp		911286	0					
ANR	911296	ArgumentList	input		911286	1					
ANR	911297	Argument	input		911286	0					
ANR	911298	Identifier	input		911286	0					
ANR	911299	Argument	"""64 """		911286	1					
ANR	911300	PrimaryExpression	"""64 """		911286	0					
ANR	911301	Argument	3		911286	2					
ANR	911302	PrimaryExpression	3		911286	0					
ANR	911303	CompoundStatement		3:2:38:64	911286	1					
ANR	911304	IdentifierDeclStatement	char * buf = strdup ( input ) ;	293:2:7588:7614	911286	0	True				
ANR	911305	IdentifierDecl	* buf = strdup ( input )		911286	0					
ANR	911306	IdentifierDeclType	char *		911286	0					
ANR	911307	Identifier	buf		911286	1					
ANR	911308	AssignmentExpression	* buf = strdup ( input )		911286	2		=			
ANR	911309	Identifier	buf		911286	0					
ANR	911310	CallExpression	strdup ( input )		911286	1					
ANR	911311	Callee	strdup		911286	0					
ANR	911312	Identifier	strdup		911286	0					
ANR	911313	ArgumentList	input		911286	1					
ANR	911314	Argument	input		911286	0					
ANR	911315	Identifier	input		911286	0					
ANR	911316	ExpressionStatement	"r_base64_decode ( ( ut8 * ) buf , input + 3 , - 1 )"	294:2:7618:7660	911286	1	True				
ANR	911317	CallExpression	"r_base64_decode ( ( ut8 * ) buf , input + 3 , - 1 )"		911286	0					
ANR	911318	Callee	r_base64_decode		911286	0					
ANR	911319	Identifier	r_base64_decode		911286	0					
ANR	911320	ArgumentList	( ut8 * ) buf		911286	1					
ANR	911321	Argument	( ut8 * ) buf		911286	0					
ANR	911322	CastExpression	( ut8 * ) buf		911286	0					
ANR	911323	CastTarget	ut8 *		911286	0					
ANR	911324	Identifier	buf		911286	1					
ANR	911325	Argument	input + 3		911286	1					
ANR	911326	AdditiveExpression	input + 3		911286	0		+			
ANR	911327	Identifier	input		911286	0					
ANR	911328	PrimaryExpression	3		911286	1					
ANR	911329	Argument	- 1		911286	2					
ANR	911330	UnaryOperationExpression	- 1		911286	0					
ANR	911331	UnaryOperator	-		911286	0					
ANR	911332	PrimaryExpression	1		911286	1					
ANR	911333	IfStatement	if ( * buf )		911286	2					
ANR	911334	Condition	* buf	295:6:7668:7671	911286	0	True				
ANR	911335	UnaryOperationExpression	* buf		911286	0					
ANR	911336	UnaryOperator	*		911286	0					
ANR	911337	Identifier	buf		911286	1					
ANR	911338	CompoundStatement		5:12:124:124	911286	1					
ANR	911339	ExpressionStatement	r_cons_echo ( buf )	296:3:7679:7696	911286	0	True				
ANR	911340	CallExpression	r_cons_echo ( buf )		911286	0					
ANR	911341	Callee	r_cons_echo		911286	0					
ANR	911342	Identifier	r_cons_echo		911286	0					
ANR	911343	ArgumentList	buf		911286	1					
ANR	911344	Argument	buf		911286	0					
ANR	911345	Identifier	buf		911286	0					
ANR	911346	ExpressionStatement	free ( buf )	298:2:7704:7714	911286	3	True				
ANR	911347	CallExpression	free ( buf )		911286	0					
ANR	911348	Callee	free		911286	0					
ANR	911349	Identifier	free		911286	0					
ANR	911350	ArgumentList	buf		911286	1					
ANR	911351	Argument	buf		911286	0					
ANR	911352	Identifier	buf		911286	0					
ANR	911353	ElseStatement	else		911286	0					
ANR	911354	CompoundStatement		10:2:178:207	911286	0					
ANR	911355	IdentifierDeclStatement	"char * p = strchr ( input , ' ' ) ;"	300:2:7728:7757	911286	0	True				
ANR	911356	IdentifierDecl	"* p = strchr ( input , ' ' )"		911286	0					
ANR	911357	IdentifierDeclType	char *		911286	0					
ANR	911358	Identifier	p		911286	1					
ANR	911359	AssignmentExpression	"* p = strchr ( input , ' ' )"		911286	2		=			
ANR	911360	Identifier	p		911286	0					
ANR	911361	CallExpression	"strchr ( input , ' ' )"		911286	1					
ANR	911362	Callee	strchr		911286	0					
ANR	911363	Identifier	strchr		911286	0					
ANR	911364	ArgumentList	input		911286	1					
ANR	911365	Argument	input		911286	0					
ANR	911366	Identifier	input		911286	0					
ANR	911367	Argument	' '		911286	1					
ANR	911368	PrimaryExpression	' '		911286	0					
ANR	911369	IfStatement	if ( p )		911286	1					
ANR	911370	Condition	p	301:6:7765:7765	911286	0	True				
ANR	911371	Identifier	p		911286	0					
ANR	911372	CompoundStatement		11:9:218:218	911286	1					
ANR	911373	ExpressionStatement	r_cons_strcat ( p + 1 )	302:3:7773:7794	911286	0	True				
ANR	911374	CallExpression	r_cons_strcat ( p + 1 )		911286	0					
ANR	911375	Callee	r_cons_strcat		911286	0					
ANR	911376	Identifier	r_cons_strcat		911286	0					
ANR	911377	ArgumentList	p + 1		911286	1					
ANR	911378	Argument	p + 1		911286	0					
ANR	911379	AdditiveExpression	p + 1		911286	0		+			
ANR	911380	Identifier	p		911286	0					
ANR	911381	PrimaryExpression	1		911286	1					
ANR	911382	ExpressionStatement	r_cons_newline ( )	303:3:7799:7816	911286	1	True				
ANR	911383	CallExpression	r_cons_newline ( )		911286	0					
ANR	911384	Callee	r_cons_newline		911286	0					
ANR	911385	Identifier	r_cons_newline		911286	0					
ANR	911386	ArgumentList			911286	1					
ANR	911387	ReturnType	R_API void		911286	1					
ANR	911388	Identifier	r_core_echo		911286	2					
ANR	911389	ParameterList	"RCore * core , const char * input"		911286	3					
ANR	911390	Parameter	RCore * core	291:23:7517:7527	911286	0	True				
ANR	911391	ParameterType	RCore *		911286	0					
ANR	911392	Identifier	core		911286	1					
ANR	911393	Parameter	const char * input	291:36:7530:7546	911286	1	True				
ANR	911394	ParameterType	const char *		911286	0					
ANR	911395	Identifier	input		911286	1					
ANR	911396	CFGEntryNode	ENTRY		911286		True				
ANR	911397	CFGExitNode	EXIT		911286		True				
ANR	911398	Symbol	p		911286						
ANR	911399	Symbol	core		911286						
ANR	911400	Symbol	input		911286						
ANR	911401	Symbol	strncmp		911286						
ANR	911402	Symbol	buf		911286						
ANR	911403	Symbol	* buf		911286						
ANR	911404	Symbol	strchr		911286						
ANR	911405	Symbol	strdup		911286						
ANR	911406	Function	cmd_eval	308:0:7828:15904							
ANR	911407	FunctionDef	"cmd_eval (void * data , const char * input)"		911406	0					
ANR	911408	CompoundStatement		308:51:7879:15904	911406	0					
ANR	911409	IdentifierDeclStatement	RCore * core = ( RCore * ) data ;	309:1:7882:7909	911406	0	True				
ANR	911410	IdentifierDecl	* core = ( RCore * ) data		911406	0					
ANR	911411	IdentifierDeclType	RCore *		911406	0					
ANR	911412	Identifier	core		911406	1					
ANR	911413	AssignmentExpression	* core = ( RCore * ) data		911406	2		=			
ANR	911414	Identifier	core		911406	0					
ANR	911415	CastExpression	( RCore * ) data		911406	1					
ANR	911416	CastTarget	RCore *		911406	0					
ANR	911417	Identifier	data		911406	1					
ANR	911418	SwitchStatement	switch ( input [ 0 ] )		911406	1					
ANR	911419	Condition	input [ 0 ]	310:9:7920:7927	911406	0	True				
ANR	911420	ArrayIndexing	input [ 0 ]		911406	0					
ANR	911421	Identifier	input		911406	0					
ANR	911422	PrimaryExpression	0		911406	1					
ANR	911423	CompoundStatement		3:19:50:50	911406	1					
ANR	911424	Label	case '\\0' :	311:1:7933:7942	911406	0	True				
ANR	911425	ExpressionStatement	"r_config_list ( core -> config , NULL , 0 )"	312:2:7953:7990	911406	1	True				
ANR	911426	CallExpression	"r_config_list ( core -> config , NULL , 0 )"		911406	0					
ANR	911427	Callee	r_config_list		911406	0					
ANR	911428	Identifier	r_config_list		911406	0					
ANR	911429	ArgumentList	core -> config		911406	1					
ANR	911430	Argument	core -> config		911406	0					
ANR	911431	PtrMemberAccess	core -> config		911406	0					
ANR	911432	Identifier	core		911406	0					
ANR	911433	Identifier	config		911406	1					
ANR	911434	Argument	NULL		911406	1					
ANR	911435	Identifier	NULL		911406	0					
ANR	911436	Argument	0		911406	2					
ANR	911437	PrimaryExpression	0		911406	0					
ANR	911438	BreakStatement	break ;	313:2:7994:7999	911406	2	True				
ANR	911439	Label	case '?' :	314:1:8002:8010	911406	3	True				
ANR	911440	Label	default :	315:1:8021:8028	911406	4	True				
ANR	911441	Identifier	default		911406	0					
ANR	911442	SwitchStatement	switch ( input [ 1 ] )		911406	5					
ANR	911443	Condition	input [ 1 ]	316:10:8040:8047	911406	0	True				
ANR	911444	ArrayIndexing	input [ 1 ]		911406	0					
ANR	911445	Identifier	input		911406	0					
ANR	911446	PrimaryExpression	1		911406	1					
ANR	911447	CompoundStatement		9:20:170:170	911406	1					
ANR	911448	Label	case '\\0' :	317:2:8054:8063	911406	0	True				
ANR	911449	ExpressionStatement	"r_core_cmd_help ( core , help_msg_e )"	317:13:8065:8099	911406	1	True				
ANR	911450	CallExpression	"r_core_cmd_help ( core , help_msg_e )"		911406	0					
ANR	911451	Callee	r_core_cmd_help		911406	0					
ANR	911452	Identifier	r_core_cmd_help		911406	0					
ANR	911453	ArgumentList	core		911406	1					
ANR	911454	Argument	core		911406	0					
ANR	911455	Identifier	core		911406	0					
ANR	911456	Argument	help_msg_e		911406	1					
ANR	911457	Identifier	help_msg_e		911406	0					
ANR	911458	BreakStatement	break ;	317:49:8101:8106	911406	2	True				
ANR	911459	Label	case '?' :	318:2:8110:8118	911406	3	True				
ANR	911460	ExpressionStatement	"r_config_list ( core -> config , input + 2 , 2 )"	318:12:8120:8162	911406	4	True				
ANR	911461	CallExpression	"r_config_list ( core -> config , input + 2 , 2 )"		911406	0					
ANR	911462	Callee	r_config_list		911406	0					
ANR	911463	Identifier	r_config_list		911406	0					
ANR	911464	ArgumentList	core -> config		911406	1					
ANR	911465	Argument	core -> config		911406	0					
ANR	911466	PtrMemberAccess	core -> config		911406	0					
ANR	911467	Identifier	core		911406	0					
ANR	911468	Identifier	config		911406	1					
ANR	911469	Argument	input + 2		911406	1					
ANR	911470	AdditiveExpression	input + 2		911406	0		+			
ANR	911471	Identifier	input		911406	0					
ANR	911472	PrimaryExpression	2		911406	1					
ANR	911473	Argument	2		911406	2					
ANR	911474	PrimaryExpression	2		911406	0					
ANR	911475	BreakStatement	break ;	318:56:8164:8169	911406	5	True				
ANR	911476	Label	default :	319:2:8173:8180	911406	6	True				
ANR	911477	Identifier	default		911406	0					
ANR	911478	ExpressionStatement	"r_config_list ( core -> config , input + 1 , 2 )"	319:11:8182:8224	911406	7	True				
ANR	911479	CallExpression	"r_config_list ( core -> config , input + 1 , 2 )"		911406	0					
ANR	911480	Callee	r_config_list		911406	0					
ANR	911481	Identifier	r_config_list		911406	0					
ANR	911482	ArgumentList	core -> config		911406	1					
ANR	911483	Argument	core -> config		911406	0					
ANR	911484	PtrMemberAccess	core -> config		911406	0					
ANR	911485	Identifier	core		911406	0					
ANR	911486	Identifier	config		911406	1					
ANR	911487	Argument	input + 1		911406	1					
ANR	911488	AdditiveExpression	input + 1		911406	0		+			
ANR	911489	Identifier	input		911406	0					
ANR	911490	PrimaryExpression	1		911406	1					
ANR	911491	Argument	2		911406	2					
ANR	911492	PrimaryExpression	2		911406	0					
ANR	911493	BreakStatement	break ;	319:55:8226:8231	911406	8	True				
ANR	911494	BreakStatement	break ;	321:2:8239:8244	911406	6	True				
ANR	911495	Label	case 't' :	322:1:8247:8255	911406	7	True				
ANR	911496	IfStatement	if ( input [ 1 ] == 'a' )		911406	8					
ANR	911497	Condition	input [ 1 ] == 'a'	323:6:8271:8285	911406	0	True				
ANR	911498	EqualityExpression	input [ 1 ] == 'a'		911406	0		==			
ANR	911499	ArrayIndexing	input [ 1 ]		911406	0					
ANR	911500	Identifier	input		911406	0					
ANR	911501	PrimaryExpression	1		911406	1					
ANR	911502	PrimaryExpression	'a'		911406	1					
ANR	911503	CompoundStatement		16:23:408:408	911406	1					
ANR	911504	ExpressionStatement	"r_cons_printf ( ""%s\\n"" , ( r_num_rand ( 10 ) % 2 ) ? ""wen"" : ""son"" )"	324:3:8293:8352	911406	0	True				
ANR	911505	CallExpression	"r_cons_printf ( ""%s\\n"" , ( r_num_rand ( 10 ) % 2 ) ? ""wen"" : ""son"" )"		911406	0					
ANR	911506	Callee	r_cons_printf		911406	0					
ANR	911507	Identifier	r_cons_printf		911406	0					
ANR	911508	ArgumentList	"""%s\\n"""		911406	1					
ANR	911509	Argument	"""%s\\n"""		911406	0					
ANR	911510	PrimaryExpression	"""%s\\n"""		911406	0					
ANR	911511	Argument	"( r_num_rand ( 10 ) % 2 ) ? ""wen"" : ""son"""		911406	1					
ANR	911512	ConditionalExpression	"( r_num_rand ( 10 ) % 2 ) ? ""wen"" : ""son"""		911406	0					
ANR	911513	Condition	r_num_rand ( 10 ) % 2		911406	0					
ANR	911514	MultiplicativeExpression	r_num_rand ( 10 ) % 2		911406	0		%			
ANR	911515	CallExpression	r_num_rand ( 10 )		911406	0					
ANR	911516	Callee	r_num_rand		911406	0					
ANR	911517	Identifier	r_num_rand		911406	0					
ANR	911518	ArgumentList	10		911406	1					
ANR	911519	Argument	10		911406	0					
ANR	911520	PrimaryExpression	10		911406	0					
ANR	911521	PrimaryExpression	2		911406	1					
ANR	911522	PrimaryExpression	"""wen"""		911406	1					
ANR	911523	PrimaryExpression	"""son"""		911406	2					
ANR	911524	ElseStatement	else		911406	0					
ANR	911525	IfStatement	if ( input [ 1 ] == ' ' && input [ 2 ] )		911406	0					
ANR	911526	Condition	input [ 1 ] == ' ' && input [ 2 ]	325:13:8367:8391	911406	0	True				
ANR	911527	AndExpression	input [ 1 ] == ' ' && input [ 2 ]		911406	0		&&			
ANR	911528	EqualityExpression	input [ 1 ] == ' '		911406	0		==			
ANR	911529	ArrayIndexing	input [ 1 ]		911406	0					
ANR	911530	Identifier	input		911406	0					
ANR	911531	PrimaryExpression	1		911406	1					
ANR	911532	PrimaryExpression	' '		911406	1					
ANR	911533	ArrayIndexing	input [ 2 ]		911406	1					
ANR	911534	Identifier	input		911406	0					
ANR	911535	PrimaryExpression	2		911406	1					
ANR	911536	CompoundStatement		19:3:519:580	911406	1					
ANR	911537	IdentifierDeclStatement	"RConfigNode * node = r_config_node_get ( core -> config , input + 2 ) ;"	326:3:8399:8460	911406	0	True				
ANR	911538	IdentifierDecl	"* node = r_config_node_get ( core -> config , input + 2 )"		911406	0					
ANR	911539	IdentifierDeclType	RConfigNode *		911406	0					
ANR	911540	Identifier	node		911406	1					
ANR	911541	AssignmentExpression	"* node = r_config_node_get ( core -> config , input + 2 )"		911406	2		=			
ANR	911542	Identifier	node		911406	0					
ANR	911543	CallExpression	"r_config_node_get ( core -> config , input + 2 )"		911406	1					
ANR	911544	Callee	r_config_node_get		911406	0					
ANR	911545	Identifier	r_config_node_get		911406	0					
ANR	911546	ArgumentList	core -> config		911406	1					
ANR	911547	Argument	core -> config		911406	0					
ANR	911548	PtrMemberAccess	core -> config		911406	0					
ANR	911549	Identifier	core		911406	0					
ANR	911550	Identifier	config		911406	1					
ANR	911551	Argument	input + 2		911406	1					
ANR	911552	AdditiveExpression	input + 2		911406	0		+			
ANR	911553	Identifier	input		911406	0					
ANR	911554	PrimaryExpression	2		911406	1					
ANR	911555	IfStatement	if ( node )		911406	1					
ANR	911556	Condition	node	327:7:8469:8472	911406	0	True				
ANR	911557	Identifier	node		911406	0					
ANR	911558	CompoundStatement		21:4:601:645	911406	1					
ANR	911559	IdentifierDeclStatement	const char * type = r_config_node_type ( node ) ;	328:4:8481:8525	911406	0	True				
ANR	911560	IdentifierDecl	* type = r_config_node_type ( node )		911406	0					
ANR	911561	IdentifierDeclType	const char *		911406	0					
ANR	911562	Identifier	type		911406	1					
ANR	911563	AssignmentExpression	* type = r_config_node_type ( node )		911406	2		=			
ANR	911564	Identifier	type		911406	0					
ANR	911565	CallExpression	r_config_node_type ( node )		911406	1					
ANR	911566	Callee	r_config_node_type		911406	0					
ANR	911567	Identifier	r_config_node_type		911406	0					
ANR	911568	ArgumentList	node		911406	1					
ANR	911569	Argument	node		911406	0					
ANR	911570	Identifier	node		911406	0					
ANR	911571	IfStatement	if ( type && * type )		911406	1					
ANR	911572	Condition	type && * type	329:8:8535:8547	911406	0	True				
ANR	911573	AndExpression	type && * type		911406	0		&&			
ANR	911574	Identifier	type		911406	0					
ANR	911575	UnaryOperationExpression	* type		911406	1					
ANR	911576	UnaryOperator	*		911406	0					
ANR	911577	Identifier	type		911406	1					
ANR	911578	CompoundStatement		22:23:670:670	911406	1					
ANR	911579	ExpressionStatement	r_cons_println ( type )	330:5:8557:8578	911406	0	True				
ANR	911580	CallExpression	r_cons_println ( type )		911406	0					
ANR	911581	Callee	r_cons_println		911406	0					
ANR	911582	Identifier	r_cons_println		911406	0					
ANR	911583	ArgumentList	type		911406	1					
ANR	911584	Argument	type		911406	0					
ANR	911585	Identifier	type		911406	0					
ANR	911586	ElseStatement	else		911406	0					
ANR	911587	CompoundStatement		26:9:720:720	911406	0					
ANR	911588	ExpressionStatement	"eprintf ( ""Usage: et [varname]  ; show type of eval var\\n"" )"	334:3:8605:8663	911406	0	True				
ANR	911589	CallExpression	"eprintf ( ""Usage: et [varname]  ; show type of eval var\\n"" )"		911406	0					
ANR	911590	Callee	eprintf		911406	0					
ANR	911591	Identifier	eprintf		911406	0					
ANR	911592	ArgumentList	"""Usage: et [varname]  ; show type of eval var\\n"""		911406	1					
ANR	911593	Argument	"""Usage: et [varname]  ; show type of eval var\\n"""		911406	0					
ANR	911594	PrimaryExpression	"""Usage: et [varname]  ; show type of eval var\\n"""		911406	0					
ANR	911595	BreakStatement	break ;	336:2:8671:8676	911406	9	True				
ANR	911596	Label	case 'n' :	337:1:8679:8687	911406	10	True				
ANR	911597	IfStatement	"if ( ! strchr ( input , '=' ) )"		911406	11					
ANR	911598	Condition	"! strchr ( input , '=' )"	338:6:8703:8722	911406	0	True				
ANR	911599	UnaryOperationExpression	"! strchr ( input , '=' )"		911406	0					
ANR	911600	UnaryOperator	!		911406	0					
ANR	911601	CallExpression	"strchr ( input , '=' )"		911406	1					
ANR	911602	Callee	strchr		911406	0					
ANR	911603	Identifier	strchr		911406	0					
ANR	911604	ArgumentList	input		911406	1					
ANR	911605	Argument	input		911406	0					
ANR	911606	Identifier	input		911406	0					
ANR	911607	Argument	'='		911406	1					
ANR	911608	PrimaryExpression	'='		911406	0					
ANR	911609	CompoundStatement		32:3:850:863	911406	1					
ANR	911610	IdentifierDeclStatement	"char * var , * p ;"	339:3:8730:8743	911406	0	True				
ANR	911611	IdentifierDecl	* var		911406	0					
ANR	911612	IdentifierDeclType	char *		911406	0					
ANR	911613	Identifier	var		911406	1					
ANR	911614	IdentifierDecl	* p		911406	1					
ANR	911615	IdentifierDeclType	char *		911406	0					
ANR	911616	Identifier	p		911406	1					
ANR	911617	ExpressionStatement	"var = strchr ( input , ' ' )"	340:3:8748:8773	911406	1	True				
ANR	911618	AssignmentExpression	"var = strchr ( input , ' ' )"		911406	0		=			
ANR	911619	Identifier	var		911406	0					
ANR	911620	CallExpression	"strchr ( input , ' ' )"		911406	1					
ANR	911621	Callee	strchr		911406	0					
ANR	911622	Identifier	strchr		911406	0					
ANR	911623	ArgumentList	input		911406	1					
ANR	911624	Argument	input		911406	0					
ANR	911625	Identifier	input		911406	0					
ANR	911626	Argument	' '		911406	1					
ANR	911627	PrimaryExpression	' '		911406	0					
ANR	911628	IfStatement	if ( var )		911406	2					
ANR	911629	Condition	var	341:7:8782:8784	911406	0	True				
ANR	911630	Identifier	var		911406	0					
ANR	911631	WhileStatement	while ( * var == ' ' )		911406	1					
ANR	911632	Condition	* var == ' '	341:19:8794:8802	911406	0	True				
ANR	911633	EqualityExpression	* var == ' '		911406	0		==			
ANR	911634	UnaryOperationExpression	* var		911406	0					
ANR	911635	UnaryOperator	*		911406	0					
ANR	911636	Identifier	var		911406	1					
ANR	911637	PrimaryExpression	' '		911406	1					
ANR	911638	ExpressionStatement	var ++	341:30:8805:8810	911406	1	True				
ANR	911639	PostIncDecOperationExpression	var ++		911406	0					
ANR	911640	Identifier	var		911406	0					
ANR	911641	IncDec	++		911406	1					
ANR	911642	ExpressionStatement	p = r_sys_getenv ( var )	342:3:8815:8837	911406	3	True				
ANR	911643	AssignmentExpression	p = r_sys_getenv ( var )		911406	0		=			
ANR	911644	Identifier	p		911406	0					
ANR	911645	CallExpression	r_sys_getenv ( var )		911406	1					
ANR	911646	Callee	r_sys_getenv		911406	0					
ANR	911647	Identifier	r_sys_getenv		911406	0					
ANR	911648	ArgumentList	var		911406	1					
ANR	911649	Argument	var		911406	0					
ANR	911650	Identifier	var		911406	0					
ANR	911651	IfStatement	if ( p )		911406	4					
ANR	911652	Condition	p	343:7:8846:8846	911406	0	True				
ANR	911653	Identifier	p		911406	0					
ANR	911654	CompoundStatement		36:10:969:969	911406	1					
ANR	911655	ExpressionStatement	r_cons_println ( p )	344:4:8855:8873	911406	0	True				
ANR	911656	CallExpression	r_cons_println ( p )		911406	0					
ANR	911657	Callee	r_cons_println		911406	0					
ANR	911658	Identifier	r_cons_println		911406	0					
ANR	911659	ArgumentList	p		911406	1					
ANR	911660	Argument	p		911406	0					
ANR	911661	Identifier	p		911406	0					
ANR	911662	ExpressionStatement	free ( p )	345:4:8879:8887	911406	1	True				
ANR	911663	CallExpression	free ( p )		911406	0					
ANR	911664	Callee	free		911406	0					
ANR	911665	Identifier	free		911406	0					
ANR	911666	ArgumentList	p		911406	1					
ANR	911667	Argument	p		911406	0					
ANR	911668	Identifier	p		911406	0					
ANR	911669	ElseStatement	else		911406	0					
ANR	911670	CompoundStatement		40:4:1025:1056	911406	0					
ANR	911671	IdentifierDeclStatement	char * * e = r_sys_get_environ ( ) ;	347:4:8905:8936	911406	0	True				
ANR	911672	IdentifierDecl	* * e = r_sys_get_environ ( )		911406	0					
ANR	911673	IdentifierDeclType	char * *		911406	0					
ANR	911674	Identifier	e		911406	1					
ANR	911675	AssignmentExpression	* * e = r_sys_get_environ ( )		911406	2		=			
ANR	911676	Identifier	e		911406	0					
ANR	911677	CallExpression	r_sys_get_environ ( )		911406	1					
ANR	911678	Callee	r_sys_get_environ		911406	0					
ANR	911679	Identifier	r_sys_get_environ		911406	0					
ANR	911680	ArgumentList			911406	1					
ANR	911681	WhileStatement	while ( e && * e )		911406	1					
ANR	911682	Condition	e && * e	348:11:8949:8955	911406	0	True				
ANR	911683	AndExpression	e && * e		911406	0		&&			
ANR	911684	Identifier	e		911406	0					
ANR	911685	UnaryOperationExpression	* e		911406	1					
ANR	911686	UnaryOperator	*		911406	0					
ANR	911687	Identifier	e		911406	1					
ANR	911688	CompoundStatement		41:20:1078:1078	911406	1					
ANR	911689	ExpressionStatement	r_cons_println ( * e )	349:5:8965:8984	911406	0	True				
ANR	911690	CallExpression	r_cons_println ( * e )		911406	0					
ANR	911691	Callee	r_cons_println		911406	0					
ANR	911692	Identifier	r_cons_println		911406	0					
ANR	911693	ArgumentList	* e		911406	1					
ANR	911694	Argument	* e		911406	0					
ANR	911695	UnaryOperationExpression	* e		911406	0					
ANR	911696	UnaryOperator	*		911406	0					
ANR	911697	Identifier	e		911406	1					
ANR	911698	ExpressionStatement	e ++	350:5:8991:8994	911406	1	True				
ANR	911699	PostIncDecOperationExpression	e ++		911406	0					
ANR	911700	Identifier	e		911406	0					
ANR	911701	IncDec	++		911406	1					
ANR	911702	ElseStatement	else		911406	0					
ANR	911703	IfStatement	if ( strlen ( input ) > 3 )		911406	0					
ANR	911704	Condition	strlen ( input ) > 3	353:13:9020:9035	911406	0	True				
ANR	911705	RelationalExpression	strlen ( input ) > 3		911406	0		>			
ANR	911706	CallExpression	strlen ( input )		911406	0					
ANR	911707	Callee	strlen		911406	0					
ANR	911708	Identifier	strlen		911406	0					
ANR	911709	ArgumentList	input		911406	1					
ANR	911710	Argument	input		911406	0					
ANR	911711	Identifier	input		911406	0					
ANR	911712	PrimaryExpression	3		911406	1					
ANR	911713	CompoundStatement		47:3:1163:1193	911406	1					
ANR	911714	IdentifierDeclStatement	"char * v , * k = strdup ( input + 3 ) ;"	354:3:9043:9073	911406	0	True				
ANR	911715	IdentifierDecl	* v		911406	0					
ANR	911716	IdentifierDeclType	char *		911406	0					
ANR	911717	Identifier	v		911406	1					
ANR	911718	IdentifierDecl	* k = strdup ( input + 3 )		911406	1					
ANR	911719	IdentifierDeclType	char *		911406	0					
ANR	911720	Identifier	k		911406	1					
ANR	911721	AssignmentExpression	* k = strdup ( input + 3 )		911406	2		=			
ANR	911722	Identifier	k		911406	0					
ANR	911723	CallExpression	strdup ( input + 3 )		911406	1					
ANR	911724	Callee	strdup		911406	0					
ANR	911725	Identifier	strdup		911406	0					
ANR	911726	ArgumentList	input + 3		911406	1					
ANR	911727	Argument	input + 3		911406	0					
ANR	911728	AdditiveExpression	input + 3		911406	0		+			
ANR	911729	Identifier	input		911406	0					
ANR	911730	PrimaryExpression	3		911406	1					
ANR	911731	IfStatement	if ( ! k )		911406	1					
ANR	911732	Condition	! k	355:7:9082:9083	911406	0	True				
ANR	911733	UnaryOperationExpression	! k		911406	0					
ANR	911734	UnaryOperator	!		911406	0					
ANR	911735	Identifier	k		911406	1					
ANR	911736	BreakStatement	break ;	355:11:9086:9091	911406	1	True				
ANR	911737	ExpressionStatement	"v = strchr ( k , '=' )"	356:3:9096:9115	911406	2	True				
ANR	911738	AssignmentExpression	"v = strchr ( k , '=' )"		911406	0		=			
ANR	911739	Identifier	v		911406	0					
ANR	911740	CallExpression	"strchr ( k , '=' )"		911406	1					
ANR	911741	Callee	strchr		911406	0					
ANR	911742	Identifier	strchr		911406	0					
ANR	911743	ArgumentList	k		911406	1					
ANR	911744	Argument	k		911406	0					
ANR	911745	Identifier	k		911406	0					
ANR	911746	Argument	'='		911406	1					
ANR	911747	PrimaryExpression	'='		911406	0					
ANR	911748	IfStatement	if ( v )		911406	3					
ANR	911749	Condition	v	357:7:9124:9124	911406	0	True				
ANR	911750	Identifier	v		911406	0					
ANR	911751	CompoundStatement		50:10:1247:1247	911406	1					
ANR	911752	ExpressionStatement	* v ++ = 0	358:4:9133:9141	911406	0	True				
ANR	911753	AssignmentExpression	* v ++ = 0		911406	0		=			
ANR	911754	UnaryOperationExpression	* v ++		911406	0					
ANR	911755	UnaryOperator	*		911406	0					
ANR	911756	PostIncDecOperationExpression	v ++		911406	1					
ANR	911757	Identifier	v		911406	0					
ANR	911758	IncDec	++		911406	1					
ANR	911759	PrimaryExpression	0		911406	1					
ANR	911760	ExpressionStatement	"r_sys_setenv ( k , v )"	359:4:9147:9166	911406	1	True				
ANR	911761	CallExpression	"r_sys_setenv ( k , v )"		911406	0					
ANR	911762	Callee	r_sys_setenv		911406	0					
ANR	911763	Identifier	r_sys_setenv		911406	0					
ANR	911764	ArgumentList	k		911406	1					
ANR	911765	Argument	k		911406	0					
ANR	911766	Identifier	k		911406	0					
ANR	911767	Argument	v		911406	1					
ANR	911768	Identifier	v		911406	0					
ANR	911769	ExpressionStatement	free ( k )	361:3:9176:9184	911406	4	True				
ANR	911770	CallExpression	free ( k )		911406	0					
ANR	911771	Callee	free		911406	0					
ANR	911772	Identifier	free		911406	0					
ANR	911773	ArgumentList	k		911406	1					
ANR	911774	Argument	k		911406	0					
ANR	911775	Identifier	k		911406	0					
ANR	911776	ReturnStatement	return true ;	363:2:9192:9203	911406	12	True				
ANR	911777	Identifier	true		911406	0					
ANR	911778	Label	case 'x' :	364:1:9206:9214	911406	13	True				
ANR	911779	ReturnStatement	"return cmd_quit ( data , """" ) ;"	366:2:9274:9300	911406	14	True				
ANR	911780	CallExpression	"cmd_quit ( data , """" )"		911406	0					
ANR	911781	Callee	cmd_quit		911406	0					
ANR	911782	Identifier	cmd_quit		911406	0					
ANR	911783	ArgumentList	data		911406	1					
ANR	911784	Argument	data		911406	0					
ANR	911785	Identifier	data		911406	0					
ANR	911786	Argument	""""""		911406	1					
ANR	911787	PrimaryExpression	""""""		911406	0					
ANR	911788	Label	case 'j' :	367:1:9303:9311	911406	15	True				
ANR	911789	ExpressionStatement	"r_config_list ( core -> config , NULL , 'j' )"	368:2:9323:9362	911406	16	True				
ANR	911790	CallExpression	"r_config_list ( core -> config , NULL , 'j' )"		911406	0					
ANR	911791	Callee	r_config_list		911406	0					
ANR	911792	Identifier	r_config_list		911406	0					
ANR	911793	ArgumentList	core -> config		911406	1					
ANR	911794	Argument	core -> config		911406	0					
ANR	911795	PtrMemberAccess	core -> config		911406	0					
ANR	911796	Identifier	core		911406	0					
ANR	911797	Identifier	config		911406	1					
ANR	911798	Argument	NULL		911406	1					
ANR	911799	Identifier	NULL		911406	0					
ANR	911800	Argument	'j'		911406	2					
ANR	911801	PrimaryExpression	'j'		911406	0					
ANR	911802	BreakStatement	break ;	369:2:9366:9371	911406	17	True				
ANR	911803	Label	case 'v' :	370:1:9374:9382	911406	18	True				
ANR	911804	ExpressionStatement	"r_config_list ( core -> config , input + 1 , 'v' )"	371:2:9397:9441	911406	19	True				
ANR	911805	CallExpression	"r_config_list ( core -> config , input + 1 , 'v' )"		911406	0					
ANR	911806	Callee	r_config_list		911406	0					
ANR	911807	Identifier	r_config_list		911406	0					
ANR	911808	ArgumentList	core -> config		911406	1					
ANR	911809	Argument	core -> config		911406	0					
ANR	911810	PtrMemberAccess	core -> config		911406	0					
ANR	911811	Identifier	core		911406	0					
ANR	911812	Identifier	config		911406	1					
ANR	911813	Argument	input + 1		911406	1					
ANR	911814	AdditiveExpression	input + 1		911406	0		+			
ANR	911815	Identifier	input		911406	0					
ANR	911816	PrimaryExpression	1		911406	1					
ANR	911817	Argument	'v'		911406	2					
ANR	911818	PrimaryExpression	'v'		911406	0					
ANR	911819	BreakStatement	break ;	372:2:9445:9450	911406	20	True				
ANR	911820	Label	case 'q' :	373:1:9453:9461	911406	21	True				
ANR	911821	ExpressionStatement	"r_config_list ( core -> config , NULL , 'q' )"	374:2:9492:9531	911406	22	True				
ANR	911822	CallExpression	"r_config_list ( core -> config , NULL , 'q' )"		911406	0					
ANR	911823	Callee	r_config_list		911406	0					
ANR	911824	Identifier	r_config_list		911406	0					
ANR	911825	ArgumentList	core -> config		911406	1					
ANR	911826	Argument	core -> config		911406	0					
ANR	911827	PtrMemberAccess	core -> config		911406	0					
ANR	911828	Identifier	core		911406	0					
ANR	911829	Identifier	config		911406	1					
ANR	911830	Argument	NULL		911406	1					
ANR	911831	Identifier	NULL		911406	0					
ANR	911832	Argument	'q'		911406	2					
ANR	911833	PrimaryExpression	'q'		911406	0					
ANR	911834	BreakStatement	break ;	375:2:9535:9540	911406	23	True				
ANR	911835	Label	case 'c' :	376:1:9543:9551	911406	24	True				
ANR	911836	SwitchStatement	switch ( input [ 1 ] )		911406	25					
ANR	911837	Condition	input [ 1 ]	377:10:9571:9578	911406	0	True				
ANR	911838	ArrayIndexing	input [ 1 ]		911406	0					
ANR	911839	Identifier	input		911406	0					
ANR	911840	PrimaryExpression	1		911406	1					
ANR	911841	CompoundStatement		70:20:1701:1701	911406	1					
ANR	911842	Label	case 'd' :	378:2:9585:9593	911406	0	True				
ANR	911843	ExpressionStatement	r_cons_pal_init ( core -> cons -> context )	379:3:9607:9644	911406	1	True				
ANR	911844	CallExpression	r_cons_pal_init ( core -> cons -> context )		911406	0					
ANR	911845	Callee	r_cons_pal_init		911406	0					
ANR	911846	Identifier	r_cons_pal_init		911406	0					
ANR	911847	ArgumentList	core -> cons -> context		911406	1					
ANR	911848	Argument	core -> cons -> context		911406	0					
ANR	911849	PtrMemberAccess	core -> cons -> context		911406	0					
ANR	911850	PtrMemberAccess	core -> cons		911406	0					
ANR	911851	Identifier	core		911406	0					
ANR	911852	Identifier	cons		911406	1					
ANR	911853	Identifier	context		911406	1					
ANR	911854	BreakStatement	break ;	380:3:9649:9654	911406	2	True				
ANR	911855	Label	case '?' :	381:2:9658:9666	911406	3	True				
ANR	911856	ExpressionStatement	"r_core_cmd_help ( core , help_msg_ec )"	382:3:9671:9706	911406	4	True				
ANR	911857	CallExpression	"r_core_cmd_help ( core , help_msg_ec )"		911406	0					
ANR	911858	Callee	r_core_cmd_help		911406	0					
ANR	911859	Identifier	r_core_cmd_help		911406	0					
ANR	911860	ArgumentList	core		911406	1					
ANR	911861	Argument	core		911406	0					
ANR	911862	Identifier	core		911406	0					
ANR	911863	Argument	help_msg_ec		911406	1					
ANR	911864	Identifier	help_msg_ec		911406	0					
ANR	911865	BreakStatement	break ;	383:3:9711:9716	911406	5	True				
ANR	911866	Label	case 'o' :	384:2:9720:9728	911406	6	True				
ANR	911867	IfStatement	if ( input [ 2 ] == 'j' )		911406	7					
ANR	911868	Condition	input [ 2 ] == 'j'	385:7:9746:9760	911406	0	True				
ANR	911869	EqualityExpression	input [ 2 ] == 'j'		911406	0		==			
ANR	911870	ArrayIndexing	input [ 2 ]		911406	0					
ANR	911871	Identifier	input		911406	0					
ANR	911872	PrimaryExpression	2		911406	1					
ANR	911873	PrimaryExpression	'j'		911406	1					
ANR	911874	CompoundStatement		78:24:1883:1883	911406	1					
ANR	911875	ExpressionStatement	"nextpal ( core , 'j' )"	386:4:9769:9788	911406	0	True				
ANR	911876	CallExpression	"nextpal ( core , 'j' )"		911406	0					
ANR	911877	Callee	nextpal		911406	0					
ANR	911878	Identifier	nextpal		911406	0					
ANR	911879	ArgumentList	core		911406	1					
ANR	911880	Argument	core		911406	0					
ANR	911881	Identifier	core		911406	0					
ANR	911882	Argument	'j'		911406	1					
ANR	911883	PrimaryExpression	'j'		911406	0					
ANR	911884	ElseStatement	else		911406	0					
ANR	911885	IfStatement	if ( input [ 2 ] == ' ' )		911406	0					
ANR	911886	Condition	input [ 2 ] == ' '	387:14:9804:9818	911406	0	True				
ANR	911887	EqualityExpression	input [ 2 ] == ' '		911406	0		==			
ANR	911888	ArrayIndexing	input [ 2 ]		911406	0					
ANR	911889	Identifier	input		911406	0					
ANR	911890	PrimaryExpression	2		911406	1					
ANR	911891	PrimaryExpression	' '		911406	1					
ANR	911892	CompoundStatement		80:31:1941:1941	911406	1					
ANR	911893	ExpressionStatement	"cmd_load_theme ( core , input + 3 )"	388:4:9827:9859	911406	0	True				
ANR	911894	CallExpression	"cmd_load_theme ( core , input + 3 )"		911406	0					
ANR	911895	Callee	cmd_load_theme		911406	0					
ANR	911896	Identifier	cmd_load_theme		911406	0					
ANR	911897	ArgumentList	core		911406	1					
ANR	911898	Argument	core		911406	0					
ANR	911899	Identifier	core		911406	0					
ANR	911900	Argument	input + 3		911406	1					
ANR	911901	AdditiveExpression	input + 3		911406	0		+			
ANR	911902	Identifier	input		911406	0					
ANR	911903	PrimaryExpression	3		911406	1					
ANR	911904	ElseStatement	else		911406	0					
ANR	911905	IfStatement	if ( input [ 2 ] == 'o' )		911406	0					
ANR	911906	Condition	input [ 2 ] == 'o'	389:14:9875:9889	911406	0	True				
ANR	911907	EqualityExpression	input [ 2 ] == 'o'		911406	0		==			
ANR	911908	ArrayIndexing	input [ 2 ]		911406	0					
ANR	911909	Identifier	input		911406	0					
ANR	911910	PrimaryExpression	2		911406	1					
ANR	911911	PrimaryExpression	'o'		911406	1					
ANR	911912	CompoundStatement		82:31:2012:2012	911406	1					
ANR	911913	ExpressionStatement	"cmd_load_theme ( core , r_core_get_theme ( ) )"	390:4:9898:9940	911406	0	True				
ANR	911914	CallExpression	"cmd_load_theme ( core , r_core_get_theme ( ) )"		911406	0					
ANR	911915	Callee	cmd_load_theme		911406	0					
ANR	911916	Identifier	cmd_load_theme		911406	0					
ANR	911917	ArgumentList	core		911406	1					
ANR	911918	Argument	core		911406	0					
ANR	911919	Identifier	core		911406	0					
ANR	911920	Argument	r_core_get_theme ( )		911406	1					
ANR	911921	CallExpression	r_core_get_theme ( )		911406	0					
ANR	911922	Callee	r_core_get_theme		911406	0					
ANR	911923	Identifier	r_core_get_theme		911406	0					
ANR	911924	ArgumentList			911406	1					
ANR	911925	ElseStatement	else		911406	0					
ANR	911926	IfStatement	if ( input [ 2 ] == 'c' || input [ 2 ] == '.' )		911406	0					
ANR	911927	Condition	input [ 2 ] == 'c' || input [ 2 ] == '.'	391:14:9956:9989	911406	0	True				
ANR	911928	OrExpression	input [ 2 ] == 'c' || input [ 2 ] == '.'		911406	0		||			
ANR	911929	EqualityExpression	input [ 2 ] == 'c'		911406	0		==			
ANR	911930	ArrayIndexing	input [ 2 ]		911406	0					
ANR	911931	Identifier	input		911406	0					
ANR	911932	PrimaryExpression	2		911406	1					
ANR	911933	PrimaryExpression	'c'		911406	1					
ANR	911934	EqualityExpression	input [ 2 ] == '.'		911406	1		==			
ANR	911935	ArrayIndexing	input [ 2 ]		911406	0					
ANR	911936	Identifier	input		911406	0					
ANR	911937	PrimaryExpression	2		911406	1					
ANR	911938	PrimaryExpression	'.'		911406	1					
ANR	911939	CompoundStatement		84:50:2112:2112	911406	1					
ANR	911940	ExpressionStatement	"r_cons_printf ( ""%s\\n"" , r_core_get_theme ( ) )"	392:4:9998:10041	911406	0	True				
ANR	911941	CallExpression	"r_cons_printf ( ""%s\\n"" , r_core_get_theme ( ) )"		911406	0					
ANR	911942	Callee	r_cons_printf		911406	0					
ANR	911943	Identifier	r_cons_printf		911406	0					
ANR	911944	ArgumentList	"""%s\\n"""		911406	1					
ANR	911945	Argument	"""%s\\n"""		911406	0					
ANR	911946	PrimaryExpression	"""%s\\n"""		911406	0					
ANR	911947	Argument	r_core_get_theme ( )		911406	1					
ANR	911948	CallExpression	r_core_get_theme ( )		911406	0					
ANR	911949	Callee	r_core_get_theme		911406	0					
ANR	911950	Identifier	r_core_get_theme		911406	0					
ANR	911951	ArgumentList			911406	1					
ANR	911952	ElseStatement	else		911406	0					
ANR	911953	IfStatement	if ( input [ 2 ] == '?' )		911406	0					
ANR	911954	Condition	input [ 2 ] == '?'	393:14:10057:10071	911406	0	True				
ANR	911955	EqualityExpression	input [ 2 ] == '?'		911406	0		==			
ANR	911956	ArrayIndexing	input [ 2 ]		911406	0					
ANR	911957	Identifier	input		911406	0					
ANR	911958	PrimaryExpression	2		911406	1					
ANR	911959	PrimaryExpression	'?'		911406	1					
ANR	911960	CompoundStatement		86:31:2194:2194	911406	1					
ANR	911961	ExpressionStatement	"r_core_cmd_help ( core , help_msg_eco )"	394:4:10080:10116	911406	0	True				
ANR	911962	CallExpression	"r_core_cmd_help ( core , help_msg_eco )"		911406	0					
ANR	911963	Callee	r_core_cmd_help		911406	0					
ANR	911964	Identifier	r_core_cmd_help		911406	0					
ANR	911965	ArgumentList	core		911406	1					
ANR	911966	Argument	core		911406	0					
ANR	911967	Identifier	core		911406	0					
ANR	911968	Argument	help_msg_eco		911406	1					
ANR	911969	Identifier	help_msg_eco		911406	0					
ANR	911970	ElseStatement	else		911406	0					
ANR	911971	IfStatement	if ( input [ 2 ] == 'q' )		911406	0					
ANR	911972	Condition	input [ 2 ] == 'q'	395:14:10132:10146	911406	0	True				
ANR	911973	EqualityExpression	input [ 2 ] == 'q'		911406	0		==			
ANR	911974	ArrayIndexing	input [ 2 ]		911406	0					
ANR	911975	Identifier	input		911406	0					
ANR	911976	PrimaryExpression	2		911406	1					
ANR	911977	PrimaryExpression	'q'		911406	1					
ANR	911978	CompoundStatement		91:4:2351:2365	911406	1					
ANR	911979	IdentifierDeclStatement	RList * themes_list = r_core_list_themes ( core ) ;	396:4:10155:10201	911406	0	True				
ANR	911980	IdentifierDecl	* themes_list = r_core_list_themes ( core )		911406	0					
ANR	911981	IdentifierDeclType	RList *		911406	0					
ANR	911982	Identifier	themes_list		911406	1					
ANR	911983	AssignmentExpression	* themes_list = r_core_list_themes ( core )		911406	2		=			
ANR	911984	Identifier	themes_list		911406	0					
ANR	911985	CallExpression	r_core_list_themes ( core )		911406	1					
ANR	911986	Callee	r_core_list_themes		911406	0					
ANR	911987	Identifier	r_core_list_themes		911406	0					
ANR	911988	ArgumentList	core		911406	1					
ANR	911989	Argument	core		911406	0					
ANR	911990	Identifier	core		911406	0					
ANR	911991	IdentifierDeclStatement	RListIter * th_iter ;	397:4:10207:10225	911406	1	True				
ANR	911992	IdentifierDecl	* th_iter		911406	0					
ANR	911993	IdentifierDeclType	RListIter *		911406	0					
ANR	911994	Identifier	th_iter		911406	1					
ANR	911995	IdentifierDeclStatement	const char * th ;	398:4:10231:10245	911406	2	True				
ANR	911996	IdentifierDecl	* th		911406	0					
ANR	911997	IdentifierDeclType	const char *		911406	0					
ANR	911998	Identifier	th		911406	1					
ANR	911999	Statement	r_list_foreach	399:4:10251:10264	911406	3	True				
ANR	912000	Statement	(	399:19:10266:10266	911406	4	True				
ANR	912001	Statement	themes_list	399:20:10267:10277	911406	5	True				
ANR	912002	Statement	","	399:31:10278:10278	911406	6	True				
ANR	912003	Statement	th_iter	399:33:10280:10286	911406	7	True				
ANR	912004	Statement	","	399:40:10287:10287	911406	8	True				
ANR	912005	Statement	th	399:42:10289:10290	911406	9	True				
ANR	912006	Statement	)	399:44:10291:10291	911406	10	True				
ANR	912007	CompoundStatement		92:46:2413:2413	911406	11					
ANR	912008	ExpressionStatement	"r_cons_printf ( ""%s\\n"" , th )"	400:5:10300:10326	911406	0	True				
ANR	912009	CallExpression	"r_cons_printf ( ""%s\\n"" , th )"		911406	0					
ANR	912010	Callee	r_cons_printf		911406	0					
ANR	912011	Identifier	r_cons_printf		911406	0					
ANR	912012	ArgumentList	"""%s\\n"""		911406	1					
ANR	912013	Argument	"""%s\\n"""		911406	0					
ANR	912014	PrimaryExpression	"""%s\\n"""		911406	0					
ANR	912015	Argument	th		911406	1					
ANR	912016	Identifier	th		911406	0					
ANR	912017	ElseStatement	else		911406	0					
ANR	912018	CompoundStatement		98:4:2546:2560	911406	0					
ANR	912019	IdentifierDeclStatement	RList * themes_list = r_core_list_themes ( core ) ;	403:4:10350:10396	911406	0	True				
ANR	912020	IdentifierDecl	* themes_list = r_core_list_themes ( core )		911406	0					
ANR	912021	IdentifierDeclType	RList *		911406	0					
ANR	912022	Identifier	themes_list		911406	1					
ANR	912023	AssignmentExpression	* themes_list = r_core_list_themes ( core )		911406	2		=			
ANR	912024	Identifier	themes_list		911406	0					
ANR	912025	CallExpression	r_core_list_themes ( core )		911406	1					
ANR	912026	Callee	r_core_list_themes		911406	0					
ANR	912027	Identifier	r_core_list_themes		911406	0					
ANR	912028	ArgumentList	core		911406	1					
ANR	912029	Argument	core		911406	0					
ANR	912030	Identifier	core		911406	0					
ANR	912031	IdentifierDeclStatement	RListIter * th_iter ;	404:4:10402:10420	911406	1	True				
ANR	912032	IdentifierDecl	* th_iter		911406	0					
ANR	912033	IdentifierDeclType	RListIter *		911406	0					
ANR	912034	Identifier	th_iter		911406	1					
ANR	912035	IdentifierDeclStatement	const char * th ;	405:4:10426:10440	911406	2	True				
ANR	912036	IdentifierDecl	* th		911406	0					
ANR	912037	IdentifierDeclType	const char *		911406	0					
ANR	912038	Identifier	th		911406	1					
ANR	912039	Statement	r_list_foreach	406:4:10446:10459	911406	3	True				
ANR	912040	Statement	(	406:19:10461:10461	911406	4	True				
ANR	912041	Statement	themes_list	406:20:10462:10472	911406	5	True				
ANR	912042	Statement	","	406:31:10473:10473	911406	6	True				
ANR	912043	Statement	th_iter	406:33:10475:10481	911406	7	True				
ANR	912044	Statement	","	406:40:10482:10482	911406	8	True				
ANR	912045	Statement	th	406:42:10484:10485	911406	9	True				
ANR	912046	Statement	)	406:44:10486:10486	911406	10	True				
ANR	912047	CompoundStatement		99:46:2608:2608	911406	11					
ANR	912048	IfStatement	"if ( curtheme && ! strcmp ( curtheme , th ) )"		911406	0					
ANR	912049	Condition	"curtheme && ! strcmp ( curtheme , th )"	407:9:10499:10532	911406	0	True				
ANR	912050	AndExpression	"curtheme && ! strcmp ( curtheme , th )"		911406	0		&&			
ANR	912051	Identifier	curtheme		911406	0					
ANR	912052	UnaryOperationExpression	"! strcmp ( curtheme , th )"		911406	1					
ANR	912053	UnaryOperator	!		911406	0					
ANR	912054	CallExpression	"strcmp ( curtheme , th )"		911406	1					
ANR	912055	Callee	strcmp		911406	0					
ANR	912056	Identifier	strcmp		911406	0					
ANR	912057	ArgumentList	curtheme		911406	1					
ANR	912058	Argument	curtheme		911406	0					
ANR	912059	Identifier	curtheme		911406	0					
ANR	912060	Argument	th		911406	1					
ANR	912061	Identifier	th		911406	0					
ANR	912062	CompoundStatement		100:45:2655:2655	911406	1					
ANR	912063	ExpressionStatement	"r_cons_printf ( ""> %s\\n"" , th )"	408:6:10543:10571	911406	0	True				
ANR	912064	CallExpression	"r_cons_printf ( ""> %s\\n"" , th )"		911406	0					
ANR	912065	Callee	r_cons_printf		911406	0					
ANR	912066	Identifier	r_cons_printf		911406	0					
ANR	912067	ArgumentList	"""> %s\\n"""		911406	1					
ANR	912068	Argument	"""> %s\\n"""		911406	0					
ANR	912069	PrimaryExpression	"""> %s\\n"""		911406	0					
ANR	912070	Argument	th		911406	1					
ANR	912071	Identifier	th		911406	0					
ANR	912072	ElseStatement	else		911406	0					
ANR	912073	CompoundStatement		102:12:2705:2705	911406	0					
ANR	912074	ExpressionStatement	"r_cons_printf ( ""  %s\\n"" , th )"	410:6:10593:10621	911406	0	True				
ANR	912075	CallExpression	"r_cons_printf ( ""  %s\\n"" , th )"		911406	0					
ANR	912076	Callee	r_cons_printf		911406	0					
ANR	912077	Identifier	r_cons_printf		911406	0					
ANR	912078	ArgumentList	"""  %s\\n"""		911406	1					
ANR	912079	Argument	"""  %s\\n"""		911406	0					
ANR	912080	PrimaryExpression	"""  %s\\n"""		911406	0					
ANR	912081	Argument	th		911406	1					
ANR	912082	Identifier	th		911406	0					
ANR	912083	BreakStatement	break ;	414:3:10644:10649	911406	8	True				
ANR	912084	Label	case 's' :	415:2:10653:10661	911406	9	True				
ANR	912085	ExpressionStatement	r_cons_pal_show ( )	415:12:10663:10681	911406	10	True				
ANR	912086	CallExpression	r_cons_pal_show ( )		911406	0					
ANR	912087	Callee	r_cons_pal_show		911406	0					
ANR	912088	Identifier	r_cons_pal_show		911406	0					
ANR	912089	ArgumentList			911406	1					
ANR	912090	BreakStatement	break ;	415:32:10683:10688	911406	11	True				
ANR	912091	Label	case '*' :	416:2:10701:10709	911406	12	True				
ANR	912092	ExpressionStatement	"r_cons_pal_list ( 1 , NULL )"	416:12:10711:10736	911406	13	True				
ANR	912093	CallExpression	"r_cons_pal_list ( 1 , NULL )"		911406	0					
ANR	912094	Callee	r_cons_pal_list		911406	0					
ANR	912095	Identifier	r_cons_pal_list		911406	0					
ANR	912096	ArgumentList	1		911406	1					
ANR	912097	Argument	1		911406	0					
ANR	912098	PrimaryExpression	1		911406	0					
ANR	912099	Argument	NULL		911406	1					
ANR	912100	Identifier	NULL		911406	0					
ANR	912101	BreakStatement	break ;	416:39:10738:10743	911406	14	True				
ANR	912102	Label	case 'h' :	417:2:10756:10764	911406	15	True				
ANR	912103	IfStatement	if ( input [ 2 ] == 'o' )		911406	16					
ANR	912104	Condition	input [ 2 ] == 'o'	418:7:10781:10795	911406	0	True				
ANR	912105	EqualityExpression	input [ 2 ] == 'o'		911406	0		==			
ANR	912106	ArrayIndexing	input [ 2 ]		911406	0					
ANR	912107	Identifier	input		911406	0					
ANR	912108	PrimaryExpression	2		911406	1					
ANR	912109	PrimaryExpression	'o'		911406	1					
ANR	912110	CompoundStatement		111:24:2918:2918	911406	1					
ANR	912111	ExpressionStatement	"r_core_echo ( core , input + 3 )"	419:4:10804:10833	911406	0	True				
ANR	912112	CallExpression	"r_core_echo ( core , input + 3 )"		911406	0					
ANR	912113	Callee	r_core_echo		911406	0					
ANR	912114	Identifier	r_core_echo		911406	0					
ANR	912115	ArgumentList	core		911406	1					
ANR	912116	Argument	core		911406	0					
ANR	912117	Identifier	core		911406	0					
ANR	912118	Argument	input + 3		911406	1					
ANR	912119	AdditiveExpression	input + 3		911406	0		+			
ANR	912120	Identifier	input		911406	0					
ANR	912121	PrimaryExpression	3		911406	1					
ANR	912122	ElseStatement	else		911406	0					
ANR	912123	CompoundStatement		113:10:2965:2965	911406	0					
ANR	912124	ExpressionStatement	"r_cons_pal_list ( 'h' , NULL )"	421:4:10851:10878	911406	0	True				
ANR	912125	CallExpression	"r_cons_pal_list ( 'h' , NULL )"		911406	0					
ANR	912126	Callee	r_cons_pal_list		911406	0					
ANR	912127	Identifier	r_cons_pal_list		911406	0					
ANR	912128	ArgumentList	'h'		911406	1					
ANR	912129	Argument	'h'		911406	0					
ANR	912130	PrimaryExpression	'h'		911406	0					
ANR	912131	Argument	NULL		911406	1					
ANR	912132	Identifier	NULL		911406	0					
ANR	912133	BreakStatement	break ;	423:3:10888:10893	911406	17	True				
ANR	912134	Label	case 'j' :	424:2:10897:10905	911406	18	True				
ANR	912135	ExpressionStatement	"r_cons_pal_list ( 'j' , NULL )"	425:3:10919:10946	911406	19	True				
ANR	912136	CallExpression	"r_cons_pal_list ( 'j' , NULL )"		911406	0					
ANR	912137	Callee	r_cons_pal_list		911406	0					
ANR	912138	Identifier	r_cons_pal_list		911406	0					
ANR	912139	ArgumentList	'j'		911406	1					
ANR	912140	Argument	'j'		911406	0					
ANR	912141	PrimaryExpression	'j'		911406	0					
ANR	912142	Argument	NULL		911406	1					
ANR	912143	Identifier	NULL		911406	0					
ANR	912144	BreakStatement	break ;	426:3:10951:10956	911406	20	True				
ANR	912145	Label	case 'c' :	427:2:10960:10968	911406	21	True				
ANR	912146	ExpressionStatement	"r_cons_pal_list ( 'c' , input + 2 )"	428:3:10982:11014	911406	22	True				
ANR	912147	CallExpression	"r_cons_pal_list ( 'c' , input + 2 )"		911406	0					
ANR	912148	Callee	r_cons_pal_list		911406	0					
ANR	912149	Identifier	r_cons_pal_list		911406	0					
ANR	912150	ArgumentList	'c'		911406	1					
ANR	912151	Argument	'c'		911406	0					
ANR	912152	PrimaryExpression	'c'		911406	0					
ANR	912153	Argument	input + 2		911406	1					
ANR	912154	AdditiveExpression	input + 2		911406	0		+			
ANR	912155	Identifier	input		911406	0					
ANR	912156	PrimaryExpression	2		911406	1					
ANR	912157	BreakStatement	break ;	429:3:11019:11024	911406	23	True				
ANR	912158	Label	case '\\0' :	430:2:11028:11037	911406	24	True				
ANR	912159	ExpressionStatement	"r_cons_pal_list ( 0 , NULL )"	431:3:11050:11075	911406	25	True				
ANR	912160	CallExpression	"r_cons_pal_list ( 0 , NULL )"		911406	0					
ANR	912161	Callee	r_cons_pal_list		911406	0					
ANR	912162	Identifier	r_cons_pal_list		911406	0					
ANR	912163	ArgumentList	0		911406	1					
ANR	912164	Argument	0		911406	0					
ANR	912165	PrimaryExpression	0		911406	0					
ANR	912166	Argument	NULL		911406	1					
ANR	912167	Identifier	NULL		911406	0					
ANR	912168	BreakStatement	break ;	432:3:11080:11085	911406	26	True				
ANR	912169	Label	case 'r' :	433:2:11089:11097	911406	27	True				
ANR	912170	ExpressionStatement	r_cons_pal_random ( )	434:3:11111:11131	911406	28	True				
ANR	912171	CallExpression	r_cons_pal_random ( )		911406	0					
ANR	912172	Callee	r_cons_pal_random		911406	0					
ANR	912173	Identifier	r_cons_pal_random		911406	0					
ANR	912174	ArgumentList			911406	1					
ANR	912175	BreakStatement	break ;	435:3:11136:11141	911406	29	True				
ANR	912176	Label	case 'n' :	436:2:11145:11153	911406	30	True				
ANR	912177	ExpressionStatement	"nextpal ( core , 'n' )"	437:3:11167:11186	911406	31	True				
ANR	912178	CallExpression	"nextpal ( core , 'n' )"		911406	0					
ANR	912179	Callee	nextpal		911406	0					
ANR	912180	Identifier	nextpal		911406	0					
ANR	912181	ArgumentList	core		911406	1					
ANR	912182	Argument	core		911406	0					
ANR	912183	Identifier	core		911406	0					
ANR	912184	Argument	'n'		911406	1					
ANR	912185	PrimaryExpression	'n'		911406	0					
ANR	912186	BreakStatement	break ;	438:3:11191:11196	911406	32	True				
ANR	912187	Label	case 'p' :	439:2:11200:11208	911406	33	True				
ANR	912188	ExpressionStatement	"nextpal ( core , 'p' )"	440:3:11222:11241	911406	34	True				
ANR	912189	CallExpression	"nextpal ( core , 'p' )"		911406	0					
ANR	912190	Callee	nextpal		911406	0					
ANR	912191	Identifier	nextpal		911406	0					
ANR	912192	ArgumentList	core		911406	1					
ANR	912193	Argument	core		911406	0					
ANR	912194	Identifier	core		911406	0					
ANR	912195	Argument	'p'		911406	1					
ANR	912196	PrimaryExpression	'p'		911406	0					
ANR	912197	BreakStatement	break ;	441:3:11246:11251	911406	35	True				
ANR	912198	Label	case 'H' :	442:2:11255:11263	911406	36	True				
ANR	912199	CompoundStatement		189:3:4880:5008	911406	37					
ANR	912200	IdentifierDeclStatement	char * color_code = NULL ;	443:3:11279:11302	911406	0	True				
ANR	912201	IdentifierDecl	* color_code = NULL		911406	0					
ANR	912202	IdentifierDeclType	char *		911406	0					
ANR	912203	Identifier	color_code		911406	1					
ANR	912204	AssignmentExpression	* color_code = NULL		911406	2		=			
ANR	912205	Identifier	NULL		911406	0					
ANR	912206	Identifier	NULL		911406	1					
ANR	912207	IdentifierDeclStatement	char * word = NULL ;	444:3:11307:11324	911406	1	True				
ANR	912208	IdentifierDecl	* word = NULL		911406	0					
ANR	912209	IdentifierDeclType	char *		911406	0					
ANR	912210	Identifier	word		911406	1					
ANR	912211	AssignmentExpression	* word = NULL		911406	2		=			
ANR	912212	Identifier	NULL		911406	0					
ANR	912213	Identifier	NULL		911406	1					
ANR	912214	IdentifierDeclStatement	int argc = 0 ;	445:3:11329:11341	911406	2	True				
ANR	912215	IdentifierDecl	argc = 0		911406	0					
ANR	912216	IdentifierDeclType	int		911406	0					
ANR	912217	Identifier	argc		911406	1					
ANR	912218	AssignmentExpression	argc = 0		911406	2		=			
ANR	912219	Identifier	argc		911406	0					
ANR	912220	PrimaryExpression	0		911406	1					
ANR	912221	IdentifierDeclStatement	"char * * argv = r_str_argv ( input + 4 , & argc ) ;"	446:3:11346:11389	911406	3	True				
ANR	912222	IdentifierDecl	"* * argv = r_str_argv ( input + 4 , & argc )"		911406	0					
ANR	912223	IdentifierDeclType	char * *		911406	0					
ANR	912224	Identifier	argv		911406	1					
ANR	912225	AssignmentExpression	"* * argv = r_str_argv ( input + 4 , & argc )"		911406	2		=			
ANR	912226	Identifier	argv		911406	0					
ANR	912227	CallExpression	"r_str_argv ( input + 4 , & argc )"		911406	1					
ANR	912228	Callee	r_str_argv		911406	0					
ANR	912229	Identifier	r_str_argv		911406	0					
ANR	912230	ArgumentList	input + 4		911406	1					
ANR	912231	Argument	input + 4		911406	0					
ANR	912232	AdditiveExpression	input + 4		911406	0		+			
ANR	912233	Identifier	input		911406	0					
ANR	912234	PrimaryExpression	4		911406	1					
ANR	912235	Argument	& argc		911406	1					
ANR	912236	UnaryOperationExpression	& argc		911406	0					
ANR	912237	UnaryOperator	&		911406	0					
ANR	912238	Identifier	argc		911406	1					
ANR	912239	SwitchStatement	switch ( input [ 2 ] )		911406	4					
ANR	912240	Condition	input [ 2 ]	447:11:11402:11409	911406	0	True				
ANR	912241	ArrayIndexing	input [ 2 ]		911406	0					
ANR	912242	Identifier	input		911406	0					
ANR	912243	PrimaryExpression	2		911406	1					
ANR	912244	CompoundStatement		140:21:3532:3532	911406	1					
ANR	912245	Label	case '?' :	448:3:11417:11425	911406	0	True				
ANR	912246	CompoundStatement		142:4:3553:3863	911406	1					
ANR	912247	IdentifierDeclStatement	"const char * helpmsg [ ] = { ""Usage ecH[iw-?]"" , """" , """" , ""ecHi"" , ""[color]"" , ""highlight current instruction with 'color' background"" , ""ecHw"" , ""[word] [color]"" , ""highlight 'word ' in current instruction with 'color' background"" , ""ecH-"" , """" , ""remove all highlights on current instruction"" , NULL } ;"	449:4:11433:11743	911406	0	True				
ANR	912248	IdentifierDecl	"* helpmsg [ ] = { ""Usage ecH[iw-?]"" , """" , """" , ""ecHi"" , ""[color]"" , ""highlight current instruction with 'color' background"" , ""ecHw"" , ""[word] [color]"" , ""highlight 'word ' in current instruction with 'color' background"" , ""ecH-"" , """" , ""remove all highlights on current instruction"" , NULL }"		911406	0					
ANR	912249	IdentifierDeclType	const char * [ ]		911406	0					
ANR	912250	Identifier	helpmsg		911406	1					
ANR	912251	AssignmentExpression	"* helpmsg [ ] = { ""Usage ecH[iw-?]"" , """" , """" , ""ecHi"" , ""[color]"" , ""highlight current instruction with 'color' background"" , ""ecHw"" , ""[word] [color]"" , ""highlight 'word ' in current instruction with 'color' background"" , ""ecH-"" , """" , ""remove all highlights on current instruction"" , NULL }"		911406	2		=			
ANR	912252	Identifier	helpmsg		911406	0					
ANR	912253	InitializerList	"""Usage ecH[iw-?]"""		911406	1					
ANR	912254	PrimaryExpression	"""Usage ecH[iw-?]"""		911406	0					
ANR	912255	PrimaryExpression	""""""		911406	1					
ANR	912256	PrimaryExpression	""""""		911406	2					
ANR	912257	PrimaryExpression	"""ecHi"""		911406	3					
ANR	912258	PrimaryExpression	"""[color]"""		911406	4					
ANR	912259	PrimaryExpression	"""highlight current instruction with 'color' background"""		911406	5					
ANR	912260	PrimaryExpression	"""ecHw"""		911406	6					
ANR	912261	PrimaryExpression	"""[word] [color]"""		911406	7					
ANR	912262	PrimaryExpression	"""highlight 'word ' in current instruction with 'color' background"""		911406	8					
ANR	912263	PrimaryExpression	"""ecH-"""		911406	9					
ANR	912264	PrimaryExpression	""""""		911406	10					
ANR	912265	PrimaryExpression	"""remove all highlights on current instruction"""		911406	11					
ANR	912266	Identifier	NULL		911406	12					
ANR	912267	ExpressionStatement	"r_core_cmd_help ( core , helpmsg )"	456:4:11749:11780	911406	1	True				
ANR	912268	CallExpression	"r_core_cmd_help ( core , helpmsg )"		911406	0					
ANR	912269	Callee	r_core_cmd_help		911406	0					
ANR	912270	Identifier	r_core_cmd_help		911406	0					
ANR	912271	ArgumentList	core		911406	1					
ANR	912272	Argument	core		911406	0					
ANR	912273	Identifier	core		911406	0					
ANR	912274	Argument	helpmsg		911406	1					
ANR	912275	Identifier	helpmsg		911406	0					
ANR	912276	BreakStatement	break ;	458:4:11792:11797	911406	2	True				
ANR	912277	Label	case '-' :	459:3:11802:11810	911406	3	True				
ANR	912278	ExpressionStatement	"r_meta_set_string ( core -> anal , R_META_TYPE_HIGHLIGHT , core -> offset , """" )"	460:4:11816:11887	911406	4	True				
ANR	912279	CallExpression	"r_meta_set_string ( core -> anal , R_META_TYPE_HIGHLIGHT , core -> offset , """" )"		911406	0					
ANR	912280	Callee	r_meta_set_string		911406	0					
ANR	912281	Identifier	r_meta_set_string		911406	0					
ANR	912282	ArgumentList	core -> anal		911406	1					
ANR	912283	Argument	core -> anal		911406	0					
ANR	912284	PtrMemberAccess	core -> anal		911406	0					
ANR	912285	Identifier	core		911406	0					
ANR	912286	Identifier	anal		911406	1					
ANR	912287	Argument	R_META_TYPE_HIGHLIGHT		911406	1					
ANR	912288	Identifier	R_META_TYPE_HIGHLIGHT		911406	0					
ANR	912289	Argument	core -> offset		911406	2					
ANR	912290	PtrMemberAccess	core -> offset		911406	0					
ANR	912291	Identifier	core		911406	0					
ANR	912292	Identifier	offset		911406	1					
ANR	912293	Argument	""""""		911406	3					
ANR	912294	PrimaryExpression	""""""		911406	0					
ANR	912295	ReturnStatement	return false ;	461:4:11893:11905	911406	5	True				
ANR	912296	Identifier	false		911406	0					
ANR	912297	Label	case '\\0' :	462:3:11910:11919	911406	6	True				
ANR	912298	Label	case 'i' :	463:3:11924:11932	911406	7	True				
ANR	912299	IfStatement	if ( argc )		911406	8					
ANR	912300	Condition	argc	464:8:11952:11955	911406	0	True				
ANR	912301	Identifier	argc		911406	0					
ANR	912302	CompoundStatement		158:5:4085:4130	911406	1					
ANR	912303	IdentifierDeclStatement	"char * dup = r_str_newf ( ""bgonly %s"" , argv [ 0 ] ) ;"	465:5:11965:12010	911406	0	True				
ANR	912304	IdentifierDecl	"* dup = r_str_newf ( ""bgonly %s"" , argv [ 0 ] )"		911406	0					
ANR	912305	IdentifierDeclType	char *		911406	0					
ANR	912306	Identifier	dup		911406	1					
ANR	912307	AssignmentExpression	"* dup = r_str_newf ( ""bgonly %s"" , argv [ 0 ] )"		911406	2		=			
ANR	912308	Identifier	dup		911406	0					
ANR	912309	CallExpression	"r_str_newf ( ""bgonly %s"" , argv [ 0 ] )"		911406	1					
ANR	912310	Callee	r_str_newf		911406	0					
ANR	912311	Identifier	r_str_newf		911406	0					
ANR	912312	ArgumentList	"""bgonly %s"""		911406	1					
ANR	912313	Argument	"""bgonly %s"""		911406	0					
ANR	912314	PrimaryExpression	"""bgonly %s"""		911406	0					
ANR	912315	Argument	argv [ 0 ]		911406	1					
ANR	912316	ArrayIndexing	argv [ 0 ]		911406	0					
ANR	912317	Identifier	argv		911406	0					
ANR	912318	PrimaryExpression	0		911406	1					
ANR	912319	ExpressionStatement	"color_code = r_cons_pal_parse ( dup , NULL )"	466:5:12017:12058	911406	1	True				
ANR	912320	AssignmentExpression	"color_code = r_cons_pal_parse ( dup , NULL )"		911406	0		=			
ANR	912321	Identifier	color_code		911406	0					
ANR	912322	CallExpression	"r_cons_pal_parse ( dup , NULL )"		911406	1					
ANR	912323	Callee	r_cons_pal_parse		911406	0					
ANR	912324	Identifier	r_cons_pal_parse		911406	0					
ANR	912325	ArgumentList	dup		911406	1					
ANR	912326	Argument	dup		911406	0					
ANR	912327	Identifier	dup		911406	0					
ANR	912328	Argument	NULL		911406	1					
ANR	912329	Identifier	NULL		911406	0					
ANR	912330	ExpressionStatement	R_FREE ( dup )	467:5:12065:12077	911406	2	True				
ANR	912331	CallExpression	R_FREE ( dup )		911406	0					
ANR	912332	Callee	R_FREE		911406	0					
ANR	912333	Identifier	R_FREE		911406	0					
ANR	912334	ArgumentList	dup		911406	1					
ANR	912335	Argument	dup		911406	0					
ANR	912336	Identifier	dup		911406	0					
ANR	912337	BreakStatement	break ;	469:4:12089:12094	911406	9	True				
ANR	912338	Label	case 'w' :	470:3:12099:12107	911406	10	True				
ANR	912339	IfStatement	if ( ! argc )		911406	11					
ANR	912340	Condition	! argc	471:8:12127:12131	911406	0	True				
ANR	912341	UnaryOperationExpression	! argc		911406	0					
ANR	912342	UnaryOperator	!		911406	0					
ANR	912343	Identifier	argc		911406	1					
ANR	912344	CompoundStatement		164:15:4254:4254	911406	1					
ANR	912345	ExpressionStatement	"eprintf ( ""Usage: echw word [color]\\n"" )"	472:5:12141:12179	911406	0	True				
ANR	912346	CallExpression	"eprintf ( ""Usage: echw word [color]\\n"" )"		911406	0					
ANR	912347	Callee	eprintf		911406	0					
ANR	912348	Identifier	eprintf		911406	0					
ANR	912349	ArgumentList	"""Usage: echw word [color]\\n"""		911406	1					
ANR	912350	Argument	"""Usage: echw word [color]\\n"""		911406	0					
ANR	912351	PrimaryExpression	"""Usage: echw word [color]\\n"""		911406	0					
ANR	912352	ExpressionStatement	r_str_argv_free ( argv )	473:5:12186:12208	911406	1	True				
ANR	912353	CallExpression	r_str_argv_free ( argv )		911406	0					
ANR	912354	Callee	r_str_argv_free		911406	0					
ANR	912355	Identifier	r_str_argv_free		911406	0					
ANR	912356	ArgumentList	argv		911406	1					
ANR	912357	Argument	argv		911406	0					
ANR	912358	Identifier	argv		911406	0					
ANR	912359	ReturnStatement	return true ;	474:5:12215:12226	911406	2	True				
ANR	912360	Identifier	true		911406	0					
ANR	912361	ExpressionStatement	word = strdup ( argv [ 0 ] )	476:4:12238:12261	911406	12	True				
ANR	912362	AssignmentExpression	word = strdup ( argv [ 0 ] )		911406	0		=			
ANR	912363	Identifier	word		911406	0					
ANR	912364	CallExpression	strdup ( argv [ 0 ] )		911406	1					
ANR	912365	Callee	strdup		911406	0					
ANR	912366	Identifier	strdup		911406	0					
ANR	912367	ArgumentList	argv [ 0 ]		911406	1					
ANR	912368	Argument	argv [ 0 ]		911406	0					
ANR	912369	ArrayIndexing	argv [ 0 ]		911406	0					
ANR	912370	Identifier	argv		911406	0					
ANR	912371	PrimaryExpression	0		911406	1					
ANR	912372	IfStatement	if ( argc > 1 )		911406	13					
ANR	912373	Condition	argc > 1	477:8:12271:12278	911406	0	True				
ANR	912374	RelationalExpression	argc > 1		911406	0		>			
ANR	912375	Identifier	argc		911406	0					
ANR	912376	PrimaryExpression	1		911406	1					
ANR	912377	CompoundStatement		171:5:4408:4453	911406	1					
ANR	912378	IdentifierDeclStatement	"char * dup = r_str_newf ( ""bgonly %s"" , argv [ 1 ] ) ;"	478:5:12288:12333	911406	0	True				
ANR	912379	IdentifierDecl	"* dup = r_str_newf ( ""bgonly %s"" , argv [ 1 ] )"		911406	0					
ANR	912380	IdentifierDeclType	char *		911406	0					
ANR	912381	Identifier	dup		911406	1					
ANR	912382	AssignmentExpression	"* dup = r_str_newf ( ""bgonly %s"" , argv [ 1 ] )"		911406	2		=			
ANR	912383	Identifier	dup		911406	0					
ANR	912384	CallExpression	"r_str_newf ( ""bgonly %s"" , argv [ 1 ] )"		911406	1					
ANR	912385	Callee	r_str_newf		911406	0					
ANR	912386	Identifier	r_str_newf		911406	0					
ANR	912387	ArgumentList	"""bgonly %s"""		911406	1					
ANR	912388	Argument	"""bgonly %s"""		911406	0					
ANR	912389	PrimaryExpression	"""bgonly %s"""		911406	0					
ANR	912390	Argument	argv [ 1 ]		911406	1					
ANR	912391	ArrayIndexing	argv [ 1 ]		911406	0					
ANR	912392	Identifier	argv		911406	0					
ANR	912393	PrimaryExpression	1		911406	1					
ANR	912394	ExpressionStatement	"color_code = r_cons_pal_parse ( dup , NULL )"	479:5:12340:12381	911406	1	True				
ANR	912395	AssignmentExpression	"color_code = r_cons_pal_parse ( dup , NULL )"		911406	0		=			
ANR	912396	Identifier	color_code		911406	0					
ANR	912397	CallExpression	"r_cons_pal_parse ( dup , NULL )"		911406	1					
ANR	912398	Callee	r_cons_pal_parse		911406	0					
ANR	912399	Identifier	r_cons_pal_parse		911406	0					
ANR	912400	ArgumentList	dup		911406	1					
ANR	912401	Argument	dup		911406	0					
ANR	912402	Identifier	dup		911406	0					
ANR	912403	Argument	NULL		911406	1					
ANR	912404	Identifier	NULL		911406	0					
ANR	912405	IfStatement	if ( ! color_code )		911406	2					
ANR	912406	Condition	! color_code	480:9:12392:12402	911406	0	True				
ANR	912407	UnaryOperationExpression	! color_code		911406	0					
ANR	912408	UnaryOperator	!		911406	0					
ANR	912409	Identifier	color_code		911406	1					
ANR	912410	CompoundStatement		173:22:4525:4525	911406	1					
ANR	912411	ExpressionStatement	"eprintf ( ""Unknown color %s\\n"" , argv [ 1 ] )"	481:6:12413:12452	911406	0	True				
ANR	912412	CallExpression	"eprintf ( ""Unknown color %s\\n"" , argv [ 1 ] )"		911406	0					
ANR	912413	Callee	eprintf		911406	0					
ANR	912414	Identifier	eprintf		911406	0					
ANR	912415	ArgumentList	"""Unknown color %s\\n"""		911406	1					
ANR	912416	Argument	"""Unknown color %s\\n"""		911406	0					
ANR	912417	PrimaryExpression	"""Unknown color %s\\n"""		911406	0					
ANR	912418	Argument	argv [ 1 ]		911406	1					
ANR	912419	ArrayIndexing	argv [ 1 ]		911406	0					
ANR	912420	Identifier	argv		911406	0					
ANR	912421	PrimaryExpression	1		911406	1					
ANR	912422	ExpressionStatement	r_str_argv_free ( argv )	482:6:12460:12482	911406	1	True				
ANR	912423	CallExpression	r_str_argv_free ( argv )		911406	0					
ANR	912424	Callee	r_str_argv_free		911406	0					
ANR	912425	Identifier	r_str_argv_free		911406	0					
ANR	912426	ArgumentList	argv		911406	1					
ANR	912427	Argument	argv		911406	0					
ANR	912428	Identifier	argv		911406	0					
ANR	912429	ExpressionStatement	free ( dup )	483:6:12490:12500	911406	2	True				
ANR	912430	CallExpression	free ( dup )		911406	0					
ANR	912431	Callee	free		911406	0					
ANR	912432	Identifier	free		911406	0					
ANR	912433	ArgumentList	dup		911406	1					
ANR	912434	Argument	dup		911406	0					
ANR	912435	Identifier	dup		911406	0					
ANR	912436	ExpressionStatement	free ( word )	484:6:12508:12519	911406	3	True				
ANR	912437	CallExpression	free ( word )		911406	0					
ANR	912438	Callee	free		911406	0					
ANR	912439	Identifier	free		911406	0					
ANR	912440	ArgumentList	word		911406	1					
ANR	912441	Argument	word		911406	0					
ANR	912442	Identifier	word		911406	0					
ANR	912443	ReturnStatement	return true ;	485:6:12527:12538	911406	4	True				
ANR	912444	Identifier	true		911406	0					
ANR	912445	ExpressionStatement	R_FREE ( dup )	487:5:12552:12564	911406	3	True				
ANR	912446	CallExpression	R_FREE ( dup )		911406	0					
ANR	912447	Callee	R_FREE		911406	0					
ANR	912448	Identifier	R_FREE		911406	0					
ANR	912449	ArgumentList	dup		911406	1					
ANR	912450	Argument	dup		911406	0					
ANR	912451	Identifier	dup		911406	0					
ANR	912452	BreakStatement	break ;	489:4:12576:12581	911406	14	True				
ANR	912453	Label	default :	490:3:12586:12593	911406	15	True				
ANR	912454	Identifier	default		911406	0					
ANR	912455	ExpressionStatement	"eprintf ( ""See ecH?\\n"" )"	491:4:12599:12621	911406	16	True				
ANR	912456	CallExpression	"eprintf ( ""See ecH?\\n"" )"		911406	0					
ANR	912457	Callee	eprintf		911406	0					
ANR	912458	Identifier	eprintf		911406	0					
ANR	912459	ArgumentList	"""See ecH?\\n"""		911406	1					
ANR	912460	Argument	"""See ecH?\\n"""		911406	0					
ANR	912461	PrimaryExpression	"""See ecH?\\n"""		911406	0					
ANR	912462	ExpressionStatement	r_str_argv_free ( argv )	492:4:12627:12649	911406	17	True				
ANR	912463	CallExpression	r_str_argv_free ( argv )		911406	0					
ANR	912464	Callee	r_str_argv_free		911406	0					
ANR	912465	Identifier	r_str_argv_free		911406	0					
ANR	912466	ArgumentList	argv		911406	1					
ANR	912467	Argument	argv		911406	0					
ANR	912468	Identifier	argv		911406	0					
ANR	912469	ReturnStatement	return true ;	493:4:12655:12666	911406	18	True				
ANR	912470	Identifier	true		911406	0					
ANR	912471	IdentifierDeclStatement	"char * str = r_meta_get_string ( core -> anal , R_META_TYPE_HIGHLIGHT , core -> offset ) ;"	495:3:12676:12755	911406	5	True				
ANR	912472	IdentifierDecl	"* str = r_meta_get_string ( core -> anal , R_META_TYPE_HIGHLIGHT , core -> offset )"		911406	0					
ANR	912473	IdentifierDeclType	char *		911406	0					
ANR	912474	Identifier	str		911406	1					
ANR	912475	AssignmentExpression	"* str = r_meta_get_string ( core -> anal , R_META_TYPE_HIGHLIGHT , core -> offset )"		911406	2		=			
ANR	912476	Identifier	str		911406	0					
ANR	912477	CallExpression	"r_meta_get_string ( core -> anal , R_META_TYPE_HIGHLIGHT , core -> offset )"		911406	1					
ANR	912478	Callee	r_meta_get_string		911406	0					
ANR	912479	Identifier	r_meta_get_string		911406	0					
ANR	912480	ArgumentList	core -> anal		911406	1					
ANR	912481	Argument	core -> anal		911406	0					
ANR	912482	PtrMemberAccess	core -> anal		911406	0					
ANR	912483	Identifier	core		911406	0					
ANR	912484	Identifier	anal		911406	1					
ANR	912485	Argument	R_META_TYPE_HIGHLIGHT		911406	1					
ANR	912486	Identifier	R_META_TYPE_HIGHLIGHT		911406	0					
ANR	912487	Argument	core -> offset		911406	2					
ANR	912488	PtrMemberAccess	core -> offset		911406	0					
ANR	912489	Identifier	core		911406	0					
ANR	912490	Identifier	offset		911406	1					
ANR	912491	IdentifierDeclStatement	"char * dup = r_str_newf ( ""%s \\""%s%s\\"""" , str ? str : """" , word ? word : """" , color_code ? color_code : r_cons_singleton ( ) -> context -> pal . wordhl ) ;"	496:3:12760:12888	911406	6	True				
ANR	912492	IdentifierDecl	"* dup = r_str_newf ( ""%s \\""%s%s\\"""" , str ? str : """" , word ? word : """" , color_code ? color_code : r_cons_singleton ( ) -> context -> pal . wordhl )"		911406	0					
ANR	912493	IdentifierDeclType	char *		911406	0					
ANR	912494	Identifier	dup		911406	1					
ANR	912495	AssignmentExpression	"* dup = r_str_newf ( ""%s \\""%s%s\\"""" , str ? str : """" , word ? word : """" , color_code ? color_code : r_cons_singleton ( ) -> context -> pal . wordhl )"		911406	2		=			
ANR	912496	Identifier	dup		911406	0					
ANR	912497	CallExpression	"r_str_newf ( ""%s \\""%s%s\\"""" , str ? str : """" , word ? word : """" , color_code ? color_code : r_cons_singleton ( ) -> context -> pal . wordhl )"		911406	1					
ANR	912498	Callee	r_str_newf		911406	0					
ANR	912499	Identifier	r_str_newf		911406	0					
ANR	912500	ArgumentList	"""%s \\""%s%s\\"""""		911406	1					
ANR	912501	Argument	"""%s \\""%s%s\\"""""		911406	0					
ANR	912502	PrimaryExpression	"""%s \\""%s%s\\"""""		911406	0					
ANR	912503	Argument	"str ? str : """""		911406	1					
ANR	912504	ConditionalExpression	"str ? str : """""		911406	0					
ANR	912505	Condition	str		911406	0					
ANR	912506	Identifier	str		911406	0					
ANR	912507	Identifier	str		911406	1					
ANR	912508	PrimaryExpression	""""""		911406	2					
ANR	912509	Argument	"word ? word : """""		911406	2					
ANR	912510	ConditionalExpression	"word ? word : """""		911406	0					
ANR	912511	Condition	word		911406	0					
ANR	912512	Identifier	word		911406	0					
ANR	912513	Identifier	word		911406	1					
ANR	912514	PrimaryExpression	""""""		911406	2					
ANR	912515	Argument	color_code ? color_code : r_cons_singleton ( ) -> context -> pal . wordhl		911406	3					
ANR	912516	ConditionalExpression	color_code ? color_code : r_cons_singleton ( ) -> context -> pal . wordhl		911406	0					
ANR	912517	Condition	color_code		911406	0					
ANR	912518	Identifier	color_code		911406	0					
ANR	912519	Identifier	color_code		911406	1					
ANR	912520	MemberAccess	r_cons_singleton ( ) -> context -> pal . wordhl		911406	2					
ANR	912521	PtrMemberAccess	r_cons_singleton ( ) -> context -> pal		911406	0					
ANR	912522	PtrMemberAccess	r_cons_singleton ( ) -> context		911406	0					
ANR	912523	CallExpression	r_cons_singleton ( )		911406	0					
ANR	912524	Callee	r_cons_singleton		911406	0					
ANR	912525	Identifier	r_cons_singleton		911406	0					
ANR	912526	ArgumentList			911406	1					
ANR	912527	Identifier	context		911406	1					
ANR	912528	Identifier	pal		911406	1					
ANR	912529	Identifier	wordhl		911406	1					
ANR	912530	ExpressionStatement	"r_meta_set_string ( core -> anal , R_META_TYPE_HIGHLIGHT , core -> offset , dup )"	497:3:12893:12965	911406	7	True				
ANR	912531	CallExpression	"r_meta_set_string ( core -> anal , R_META_TYPE_HIGHLIGHT , core -> offset , dup )"		911406	0					
ANR	912532	Callee	r_meta_set_string		911406	0					
ANR	912533	Identifier	r_meta_set_string		911406	0					
ANR	912534	ArgumentList	core -> anal		911406	1					
ANR	912535	Argument	core -> anal		911406	0					
ANR	912536	PtrMemberAccess	core -> anal		911406	0					
ANR	912537	Identifier	core		911406	0					
ANR	912538	Identifier	anal		911406	1					
ANR	912539	Argument	R_META_TYPE_HIGHLIGHT		911406	1					
ANR	912540	Identifier	R_META_TYPE_HIGHLIGHT		911406	0					
ANR	912541	Argument	core -> offset		911406	2					
ANR	912542	PtrMemberAccess	core -> offset		911406	0					
ANR	912543	Identifier	core		911406	0					
ANR	912544	Identifier	offset		911406	1					
ANR	912545	Argument	dup		911406	3					
ANR	912546	Identifier	dup		911406	0					
ANR	912547	ExpressionStatement	r_str_argv_free ( argv )	498:3:12970:12992	911406	8	True				
ANR	912548	CallExpression	r_str_argv_free ( argv )		911406	0					
ANR	912549	Callee	r_str_argv_free		911406	0					
ANR	912550	Identifier	r_str_argv_free		911406	0					
ANR	912551	ArgumentList	argv		911406	1					
ANR	912552	Argument	argv		911406	0					
ANR	912553	Identifier	argv		911406	0					
ANR	912554	ExpressionStatement	R_FREE ( word )	499:3:12997:13010	911406	9	True				
ANR	912555	CallExpression	R_FREE ( word )		911406	0					
ANR	912556	Callee	R_FREE		911406	0					
ANR	912557	Identifier	R_FREE		911406	0					
ANR	912558	ArgumentList	word		911406	1					
ANR	912559	Argument	word		911406	0					
ANR	912560	Identifier	word		911406	0					
ANR	912561	ExpressionStatement	R_FREE ( dup )	500:3:13015:13027	911406	10	True				
ANR	912562	CallExpression	R_FREE ( dup )		911406	0					
ANR	912563	Callee	R_FREE		911406	0					
ANR	912564	Identifier	R_FREE		911406	0					
ANR	912565	ArgumentList	dup		911406	1					
ANR	912566	Argument	dup		911406	0					
ANR	912567	Identifier	dup		911406	0					
ANR	912568	BreakStatement	break ;	501:3:13032:13037	911406	11	True				
ANR	912569	Label	default :	503:2:13045:13052	911406	38	True				
ANR	912570	Identifier	default		911406	0					
ANR	912571	CompoundStatement		198:3:5212:5237	911406	39					
ANR	912572	IdentifierDeclStatement	char * p = strdup ( input + 2 ) ;	504:3:13059:13087	911406	0	True				
ANR	912573	IdentifierDecl	* p = strdup ( input + 2 )		911406	0					
ANR	912574	IdentifierDeclType	char *		911406	0					
ANR	912575	Identifier	p		911406	1					
ANR	912576	AssignmentExpression	* p = strdup ( input + 2 )		911406	2		=			
ANR	912577	Identifier	p		911406	0					
ANR	912578	CallExpression	strdup ( input + 2 )		911406	1					
ANR	912579	Callee	strdup		911406	0					
ANR	912580	Identifier	strdup		911406	0					
ANR	912581	ArgumentList	input + 2		911406	1					
ANR	912582	Argument	input + 2		911406	0					
ANR	912583	AdditiveExpression	input + 2		911406	0		+			
ANR	912584	Identifier	input		911406	0					
ANR	912585	PrimaryExpression	2		911406	1					
ANR	912586	IdentifierDeclStatement	"char * q = strchr ( p , '=' ) ;"	505:3:13092:13117	911406	1	True				
ANR	912587	IdentifierDecl	"* q = strchr ( p , '=' )"		911406	0					
ANR	912588	IdentifierDeclType	char *		911406	0					
ANR	912589	Identifier	q		911406	1					
ANR	912590	AssignmentExpression	"* q = strchr ( p , '=' )"		911406	2		=			
ANR	912591	Identifier	q		911406	0					
ANR	912592	CallExpression	"strchr ( p , '=' )"		911406	1					
ANR	912593	Callee	strchr		911406	0					
ANR	912594	Identifier	strchr		911406	0					
ANR	912595	ArgumentList	p		911406	1					
ANR	912596	Argument	p		911406	0					
ANR	912597	Identifier	p		911406	0					
ANR	912598	Argument	'='		911406	1					
ANR	912599	PrimaryExpression	'='		911406	0					
ANR	912600	IfStatement	if ( ! q )		911406	2					
ANR	912601	Condition	! q	506:7:13126:13127	911406	0	True				
ANR	912602	UnaryOperationExpression	! q		911406	0					
ANR	912603	UnaryOperator	!		911406	0					
ANR	912604	Identifier	q		911406	1					
ANR	912605	CompoundStatement		199:11:5250:5250	911406	1					
ANR	912606	ExpressionStatement	"q = strchr ( p , ' ' )"	507:4:13136:13155	911406	0	True				
ANR	912607	AssignmentExpression	"q = strchr ( p , ' ' )"		911406	0		=			
ANR	912608	Identifier	q		911406	0					
ANR	912609	CallExpression	"strchr ( p , ' ' )"		911406	1					
ANR	912610	Callee	strchr		911406	0					
ANR	912611	Identifier	strchr		911406	0					
ANR	912612	ArgumentList	p		911406	1					
ANR	912613	Argument	p		911406	0					
ANR	912614	Identifier	p		911406	0					
ANR	912615	Argument	' '		911406	1					
ANR	912616	PrimaryExpression	' '		911406	0					
ANR	912617	IfStatement	if ( q )		911406	3					
ANR	912618	Condition	q	509:7:13169:13169	911406	0	True				
ANR	912619	Identifier	q		911406	0					
ANR	912620	CompoundStatement		202:10:5292:5292	911406	1					
ANR	912621	ExpressionStatement	* q ++ = 0	511:4:13195:13203	911406	0	True				
ANR	912622	AssignmentExpression	* q ++ = 0		911406	0		=			
ANR	912623	UnaryOperationExpression	* q ++		911406	0					
ANR	912624	UnaryOperator	*		911406	0					
ANR	912625	PostIncDecOperationExpression	q ++		911406	1					
ANR	912626	Identifier	q		911406	0					
ANR	912627	IncDec	++		911406	1					
ANR	912628	PrimaryExpression	0		911406	1					
ANR	912629	IfStatement	"if ( r_cons_pal_set ( p , q ) )"		911406	1					
ANR	912630	Condition	"r_cons_pal_set ( p , q )"	512:8:13213:13233	911406	0	True				
ANR	912631	CallExpression	"r_cons_pal_set ( p , q )"		911406	0					
ANR	912632	Callee	r_cons_pal_set		911406	0					
ANR	912633	Identifier	r_cons_pal_set		911406	0					
ANR	912634	ArgumentList	p		911406	1					
ANR	912635	Argument	p		911406	0					
ANR	912636	Identifier	p		911406	0					
ANR	912637	Argument	q		911406	1					
ANR	912638	Identifier	q		911406	0					
ANR	912639	CompoundStatement		205:31:5356:5356	911406	1					
ANR	912640	ExpressionStatement	r_cons_pal_update_event ( )	513:5:13243:13269	911406	0	True				
ANR	912641	CallExpression	r_cons_pal_update_event ( )		911406	0					
ANR	912642	Callee	r_cons_pal_update_event		911406	0					
ANR	912643	Identifier	r_cons_pal_update_event		911406	0					
ANR	912644	ArgumentList			911406	1					
ANR	912645	ElseStatement	else		911406	0					
ANR	912646	CompoundStatement		210:4:5433:5467	911406	0					
ANR	912647	IdentifierDeclStatement	char color [ 32 ] ;	516:4:13293:13307	911406	0	True				
ANR	912648	IdentifierDecl	color [ 32 ]		911406	0					
ANR	912649	IdentifierDeclType	char [ 32 ]		911406	0					
ANR	912650	Identifier	color		911406	1					
ANR	912651	PrimaryExpression	32		911406	2					
ANR	912652	IdentifierDeclStatement	RColor rcolor = r_cons_pal_get ( p ) ;	517:4:13313:13347	911406	1	True				
ANR	912653	IdentifierDecl	rcolor = r_cons_pal_get ( p )		911406	0					
ANR	912654	IdentifierDeclType	RColor		911406	0					
ANR	912655	Identifier	rcolor		911406	1					
ANR	912656	AssignmentExpression	rcolor = r_cons_pal_get ( p )		911406	2		=			
ANR	912657	Identifier	rcolor		911406	0					
ANR	912658	CallExpression	r_cons_pal_get ( p )		911406	1					
ANR	912659	Callee	r_cons_pal_get		911406	0					
ANR	912660	Identifier	r_cons_pal_get		911406	0					
ANR	912661	ArgumentList	p		911406	1					
ANR	912662	Argument	p		911406	0					
ANR	912663	Identifier	p		911406	0					
ANR	912664	ExpressionStatement	"r_cons_rgb_str ( color , sizeof ( color ) , & rcolor )"	518:4:13353:13400	911406	2	True				
ANR	912665	CallExpression	"r_cons_rgb_str ( color , sizeof ( color ) , & rcolor )"		911406	0					
ANR	912666	Callee	r_cons_rgb_str		911406	0					
ANR	912667	Identifier	r_cons_rgb_str		911406	0					
ANR	912668	ArgumentList	color		911406	1					
ANR	912669	Argument	color		911406	0					
ANR	912670	Identifier	color		911406	0					
ANR	912671	Argument	sizeof ( color )		911406	1					
ANR	912672	SizeofExpression	sizeof ( color )		911406	0					
ANR	912673	Sizeof	sizeof		911406	0					
ANR	912674	SizeofOperand	color		911406	1					
ANR	912675	Argument	& rcolor		911406	2					
ANR	912676	UnaryOperationExpression	& rcolor		911406	0					
ANR	912677	UnaryOperator	&		911406	0					
ANR	912678	Identifier	rcolor		911406	1					
ANR	912679	Statement	eprintf	519:4:13406:13412	911406	3	True				
ANR	912680	Statement	(	519:12:13414:13414	911406	4	True				
ANR	912681	Statement	"""(%s)(%sCOLOR"""	519:13:13415:13428	911406	5	True				
ANR	912682	Statement	Color_RESET	519:27:13429:13439	911406	6	True				
ANR	912683	Statement	""")\\n"""	519:38:13440:13444	911406	7	True				
ANR	912684	Statement	","	519:43:13445:13445	911406	8	True				
ANR	912685	Statement	p	519:45:13447:13447	911406	9	True				
ANR	912686	Statement	","	519:46:13448:13448	911406	10	True				
ANR	912687	Statement	color	519:48:13450:13454	911406	11	True				
ANR	912688	Statement	)	519:53:13455:13455	911406	12	True				
ANR	912689	ExpressionStatement		519:54:13456:13456	911406	13	True				
ANR	912690	ExpressionStatement	free ( p )	521:3:13466:13474	911406	4	True				
ANR	912691	CallExpression	free ( p )		911406	0					
ANR	912692	Callee	free		911406	0					
ANR	912693	Identifier	free		911406	0					
ANR	912694	ArgumentList	p		911406	1					
ANR	912695	Argument	p		911406	0					
ANR	912696	Identifier	p		911406	0					
ANR	912697	BreakStatement	break ;	524:2:13486:13491	911406	26	True				
ANR	912698	Label	case 'd' :	525:1:13494:13502	911406	27	True				
ANR	912699	IfStatement	if ( input [ 1 ] == '?' )		911406	28					
ANR	912700	Condition	input [ 1 ] == '?'	526:6:13518:13532	911406	0	True				
ANR	912701	EqualityExpression	input [ 1 ] == '?'		911406	0		==			
ANR	912702	ArrayIndexing	input [ 1 ]		911406	0					
ANR	912703	Identifier	input		911406	0					
ANR	912704	PrimaryExpression	1		911406	1					
ANR	912705	PrimaryExpression	'?'		911406	1					
ANR	912706	CompoundStatement		219:23:5655:5655	911406	1					
ANR	912707	ExpressionStatement	"eprintf ( ""Usage: ed[-][?] - edit ~/.radare2rc with cfg.editor\\n"" )"	527:3:13540:13605	911406	0	True				
ANR	912708	CallExpression	"eprintf ( ""Usage: ed[-][?] - edit ~/.radare2rc with cfg.editor\\n"" )"		911406	0					
ANR	912709	Callee	eprintf		911406	0					
ANR	912710	Identifier	eprintf		911406	0					
ANR	912711	ArgumentList	"""Usage: ed[-][?] - edit ~/.radare2rc with cfg.editor\\n"""		911406	1					
ANR	912712	Argument	"""Usage: ed[-][?] - edit ~/.radare2rc with cfg.editor\\n"""		911406	0					
ANR	912713	PrimaryExpression	"""Usage: ed[-][?] - edit ~/.radare2rc with cfg.editor\\n"""		911406	0					
ANR	912714	ExpressionStatement	"eprintf ( ""NOTE: ~ is HOME and this can be changed with %%HOME=/tmp\\n"" )"	528:3:13610:13680	911406	1	True				
ANR	912715	CallExpression	"eprintf ( ""NOTE: ~ is HOME and this can be changed with %%HOME=/tmp\\n"" )"		911406	0					
ANR	912716	Callee	eprintf		911406	0					
ANR	912717	Identifier	eprintf		911406	0					
ANR	912718	ArgumentList	"""NOTE: ~ is HOME and this can be changed with %%HOME=/tmp\\n"""		911406	1					
ANR	912719	Argument	"""NOTE: ~ is HOME and this can be changed with %%HOME=/tmp\\n"""		911406	0					
ANR	912720	PrimaryExpression	"""NOTE: ~ is HOME and this can be changed with %%HOME=/tmp\\n"""		911406	0					
ANR	912721	ExpressionStatement	"eprintf ( ""  ed    : ${cfg.editor} ~/.radare2rc\\n"" )"	529:3:13685:13735	911406	2	True				
ANR	912722	CallExpression	"eprintf ( ""  ed    : ${cfg.editor} ~/.radare2rc\\n"" )"		911406	0					
ANR	912723	Callee	eprintf		911406	0					
ANR	912724	Identifier	eprintf		911406	0					
ANR	912725	ArgumentList	"""  ed    : ${cfg.editor} ~/.radare2rc\\n"""		911406	1					
ANR	912726	Argument	"""  ed    : ${cfg.editor} ~/.radare2rc\\n"""		911406	0					
ANR	912727	PrimaryExpression	"""  ed    : ${cfg.editor} ~/.radare2rc\\n"""		911406	0					
ANR	912728	ExpressionStatement	"eprintf ( ""  ed-   : rm ~/.radare2rc\\n"" )"	530:3:13740:13779	911406	3	True				
ANR	912729	CallExpression	"eprintf ( ""  ed-   : rm ~/.radare2rc\\n"" )"		911406	0					
ANR	912730	Callee	eprintf		911406	0					
ANR	912731	Identifier	eprintf		911406	0					
ANR	912732	ArgumentList	"""  ed-   : rm ~/.radare2rc\\n"""		911406	1					
ANR	912733	Argument	"""  ed-   : rm ~/.radare2rc\\n"""		911406	0					
ANR	912734	PrimaryExpression	"""  ed-   : rm ~/.radare2rc\\n"""		911406	0					
ANR	912735	ElseStatement	else		911406	0					
ANR	912736	IfStatement	if ( input [ 1 ] == '-' )		911406	0					
ANR	912737	Condition	input [ 1 ] == '-'	531:13:13794:13808	911406	0	True				
ANR	912738	EqualityExpression	input [ 1 ] == '-'		911406	0		==			
ANR	912739	ArrayIndexing	input [ 1 ]		911406	0					
ANR	912740	Identifier	input		911406	0					
ANR	912741	PrimaryExpression	1		911406	1					
ANR	912742	PrimaryExpression	'-'		911406	1					
ANR	912743	CompoundStatement		225:3:5936:5974	911406	1					
ANR	912744	IdentifierDeclStatement	"char * file = r_str_home ( "".radare2rc"" ) ;"	532:3:13816:13854	911406	0	True				
ANR	912745	IdentifierDecl	"* file = r_str_home ( "".radare2rc"" )"		911406	0					
ANR	912746	IdentifierDeclType	char *		911406	0					
ANR	912747	Identifier	file		911406	1					
ANR	912748	AssignmentExpression	"* file = r_str_home ( "".radare2rc"" )"		911406	2		=			
ANR	912749	Identifier	file		911406	0					
ANR	912750	CallExpression	"r_str_home ( "".radare2rc"" )"		911406	1					
ANR	912751	Callee	r_str_home		911406	0					
ANR	912752	Identifier	r_str_home		911406	0					
ANR	912753	ArgumentList	""".radare2rc"""		911406	1					
ANR	912754	Argument	""".radare2rc"""		911406	0					
ANR	912755	PrimaryExpression	""".radare2rc"""		911406	0					
ANR	912756	ExpressionStatement	"r_cons_printf ( ""rm %s\\n"" , file )"	533:3:13859:13890	911406	1	True				
ANR	912757	CallExpression	"r_cons_printf ( ""rm %s\\n"" , file )"		911406	0					
ANR	912758	Callee	r_cons_printf		911406	0					
ANR	912759	Identifier	r_cons_printf		911406	0					
ANR	912760	ArgumentList	"""rm %s\\n"""		911406	1					
ANR	912761	Argument	"""rm %s\\n"""		911406	0					
ANR	912762	PrimaryExpression	"""rm %s\\n"""		911406	0					
ANR	912763	Argument	file		911406	1					
ANR	912764	Identifier	file		911406	0					
ANR	912765	ExpressionStatement	free ( file )	535:3:13919:13930	911406	2	True				
ANR	912766	CallExpression	free ( file )		911406	0					
ANR	912767	Callee	free		911406	0					
ANR	912768	Identifier	free		911406	0					
ANR	912769	ArgumentList	file		911406	1					
ANR	912770	Argument	file		911406	0					
ANR	912771	Identifier	file		911406	0					
ANR	912772	ElseStatement	else		911406	0					
ANR	912773	CompoundStatement		230:3:6066:6104	911406	0					
ANR	912774	IdentifierDeclStatement	"char * file = r_str_home ( "".radare2rc"" ) ;"	537:3:13946:13984	911406	0	True				
ANR	912775	IdentifierDecl	"* file = r_str_home ( "".radare2rc"" )"		911406	0					
ANR	912776	IdentifierDeclType	char *		911406	0					
ANR	912777	Identifier	file		911406	1					
ANR	912778	AssignmentExpression	"* file = r_str_home ( "".radare2rc"" )"		911406	2		=			
ANR	912779	Identifier	file		911406	0					
ANR	912780	CallExpression	"r_str_home ( "".radare2rc"" )"		911406	1					
ANR	912781	Callee	r_str_home		911406	0					
ANR	912782	Identifier	r_str_home		911406	0					
ANR	912783	ArgumentList	""".radare2rc"""		911406	1					
ANR	912784	Argument	""".radare2rc"""		911406	0					
ANR	912785	PrimaryExpression	""".radare2rc"""		911406	0					
ANR	912786	IfStatement	if ( r_cons_is_interactive ( ) )		911406	1					
ANR	912787	Condition	r_cons_is_interactive ( )	538:7:13993:14016	911406	0	True				
ANR	912788	CallExpression	r_cons_is_interactive ( )		911406	0					
ANR	912789	Callee	r_cons_is_interactive		911406	0					
ANR	912790	Identifier	r_cons_is_interactive		911406	0					
ANR	912791	ArgumentList			911406	1					
ANR	912792	CompoundStatement		233:4:6170:6209	911406	1					
ANR	912793	ExpressionStatement	r_file_touch ( file )	539:4:14025:14044	911406	0	True				
ANR	912794	CallExpression	r_file_touch ( file )		911406	0					
ANR	912795	Callee	r_file_touch		911406	0					
ANR	912796	Identifier	r_file_touch		911406	0					
ANR	912797	ArgumentList	file		911406	1					
ANR	912798	Argument	file		911406	0					
ANR	912799	Identifier	file		911406	0					
ANR	912800	IdentifierDeclStatement	"char * res = r_cons_editor ( file , NULL ) ;"	540:4:14050:14089	911406	1	True				
ANR	912801	IdentifierDecl	"* res = r_cons_editor ( file , NULL )"		911406	0					
ANR	912802	IdentifierDeclType	char *		911406	0					
ANR	912803	Identifier	res		911406	1					
ANR	912804	AssignmentExpression	"* res = r_cons_editor ( file , NULL )"		911406	2		=			
ANR	912805	Identifier	res		911406	0					
ANR	912806	CallExpression	"r_cons_editor ( file , NULL )"		911406	1					
ANR	912807	Callee	r_cons_editor		911406	0					
ANR	912808	Identifier	r_cons_editor		911406	0					
ANR	912809	ArgumentList	file		911406	1					
ANR	912810	Argument	file		911406	0					
ANR	912811	Identifier	file		911406	0					
ANR	912812	Argument	NULL		911406	1					
ANR	912813	Identifier	NULL		911406	0					
ANR	912814	IfStatement	if ( res )		911406	2					
ANR	912815	Condition	res	541:8:14099:14101	911406	0	True				
ANR	912816	Identifier	res		911406	0					
ANR	912817	CompoundStatement		234:13:6224:6224	911406	1					
ANR	912818	IfStatement	"if ( r_cons_yesno ( 'y' , ""Reload? (Y/n)"" ) )"		911406	0					
ANR	912819	Condition	"r_cons_yesno ( 'y' , ""Reload? (Y/n)"" )"	542:9:14115:14149	911406	0	True				
ANR	912820	CallExpression	"r_cons_yesno ( 'y' , ""Reload? (Y/n)"" )"		911406	0					
ANR	912821	Callee	r_cons_yesno		911406	0					
ANR	912822	Identifier	r_cons_yesno		911406	0					
ANR	912823	ArgumentList	'y'		911406	1					
ANR	912824	Argument	'y'		911406	0					
ANR	912825	PrimaryExpression	'y'		911406	0					
ANR	912826	Argument	"""Reload? (Y/n)"""		911406	1					
ANR	912827	PrimaryExpression	"""Reload? (Y/n)"""		911406	0					
ANR	912828	CompoundStatement		235:46:6272:6272	911406	1					
ANR	912829	ExpressionStatement	"r_core_run_script ( core , file )"	543:6:14160:14190	911406	0	True				
ANR	912830	CallExpression	"r_core_run_script ( core , file )"		911406	0					
ANR	912831	Callee	r_core_run_script		911406	0					
ANR	912832	Identifier	r_core_run_script		911406	0					
ANR	912833	ArgumentList	core		911406	1					
ANR	912834	Argument	core		911406	0					
ANR	912835	Identifier	core		911406	0					
ANR	912836	Argument	file		911406	1					
ANR	912837	Identifier	file		911406	0					
ANR	912838	ElseStatement	else		911406	0					
ANR	912839	CompoundStatement		239:10:6335:6335	911406	0					
ANR	912840	ExpressionStatement	"r_core_run_script ( core , file )"	547:4:14221:14251	911406	0	True				
ANR	912841	CallExpression	"r_core_run_script ( core , file )"		911406	0					
ANR	912842	Callee	r_core_run_script		911406	0					
ANR	912843	Identifier	r_core_run_script		911406	0					
ANR	912844	ArgumentList	core		911406	1					
ANR	912845	Argument	core		911406	0					
ANR	912846	Identifier	core		911406	0					
ANR	912847	Argument	file		911406	1					
ANR	912848	Identifier	file		911406	0					
ANR	912849	ExpressionStatement	free ( file )	549:3:14261:14272	911406	2	True				
ANR	912850	CallExpression	free ( file )		911406	0					
ANR	912851	Callee	free		911406	0					
ANR	912852	Identifier	free		911406	0					
ANR	912853	ArgumentList	file		911406	1					
ANR	912854	Argument	file		911406	0					
ANR	912855	Identifier	file		911406	0					
ANR	912856	BreakStatement	break ;	551:2:14280:14285	911406	29	True				
ANR	912857	Label	case 'e' :	552:1:14288:14296	911406	30	True				
ANR	912858	IfStatement	if ( input [ 1 ] == ' ' )		911406	31					
ANR	912859	Condition	input [ 1 ] == ' '	553:6:14312:14326	911406	0	True				
ANR	912860	EqualityExpression	input [ 1 ] == ' '		911406	0		==			
ANR	912861	ArrayIndexing	input [ 1 ]		911406	0					
ANR	912862	Identifier	input		911406	0					
ANR	912863	PrimaryExpression	1		911406	1					
ANR	912864	PrimaryExpression	' '		911406	1					
ANR	912865	CompoundStatement		250:3:6562:6615	911406	1					
ANR	912866	IdentifierDeclStatement	char * p ;	554:3:14334:14341	911406	0	True				
ANR	912867	IdentifierDecl	* p		911406	0					
ANR	912868	IdentifierDeclType	char *		911406	0					
ANR	912869	Identifier	p		911406	1					
ANR	912870	IdentifierDeclStatement	"const char * input2 = strchr ( input + 2 , ' ' ) ;"	555:3:14346:14390	911406	1	True				
ANR	912871	IdentifierDecl	"* input2 = strchr ( input + 2 , ' ' )"		911406	0					
ANR	912872	IdentifierDeclType	const char *		911406	0					
ANR	912873	Identifier	input2		911406	1					
ANR	912874	AssignmentExpression	"* input2 = strchr ( input + 2 , ' ' )"		911406	2		=			
ANR	912875	Identifier	input2		911406	0					
ANR	912876	CallExpression	"strchr ( input + 2 , ' ' )"		911406	1					
ANR	912877	Callee	strchr		911406	0					
ANR	912878	Identifier	strchr		911406	0					
ANR	912879	ArgumentList	input + 2		911406	1					
ANR	912880	Argument	input + 2		911406	0					
ANR	912881	AdditiveExpression	input + 2		911406	0		+			
ANR	912882	Identifier	input		911406	0					
ANR	912883	PrimaryExpression	2		911406	1					
ANR	912884	Argument	' '		911406	1					
ANR	912885	PrimaryExpression	' '		911406	0					
ANR	912886	ExpressionStatement	input2 = ( input2 ) ? input2 + 1 : input + 2	556:3:14395:14437	911406	2	True				
ANR	912887	AssignmentExpression	input2 = ( input2 ) ? input2 + 1 : input + 2		911406	0		=			
ANR	912888	Identifier	input2		911406	0					
ANR	912889	ConditionalExpression	( input2 ) ? input2 + 1 : input + 2		911406	1					
ANR	912890	Condition	input2		911406	0					
ANR	912891	Identifier	input2		911406	0					
ANR	912892	AdditiveExpression	input2 + 1		911406	1		+			
ANR	912893	Identifier	input2		911406	0					
ANR	912894	PrimaryExpression	1		911406	1					
ANR	912895	AdditiveExpression	input + 2		911406	2		+			
ANR	912896	Identifier	input		911406	0					
ANR	912897	PrimaryExpression	2		911406	1					
ANR	912898	IdentifierDeclStatement	"const char * val = r_config_get ( core -> config , input2 ) ;"	557:3:14442:14495	911406	3	True				
ANR	912899	IdentifierDecl	"* val = r_config_get ( core -> config , input2 )"		911406	0					
ANR	912900	IdentifierDeclType	const char *		911406	0					
ANR	912901	Identifier	val		911406	1					
ANR	912902	AssignmentExpression	"* val = r_config_get ( core -> config , input2 )"		911406	2		=			
ANR	912903	Identifier	val		911406	0					
ANR	912904	CallExpression	"r_config_get ( core -> config , input2 )"		911406	1					
ANR	912905	Callee	r_config_get		911406	0					
ANR	912906	Identifier	r_config_get		911406	0					
ANR	912907	ArgumentList	core -> config		911406	1					
ANR	912908	Argument	core -> config		911406	0					
ANR	912909	PtrMemberAccess	core -> config		911406	0					
ANR	912910	Identifier	core		911406	0					
ANR	912911	Identifier	config		911406	1					
ANR	912912	Argument	input2		911406	1					
ANR	912913	Identifier	input2		911406	0					
ANR	912914	ExpressionStatement	"p = r_core_editor ( core , NULL , val )"	558:3:14500:14535	911406	4	True				
ANR	912915	AssignmentExpression	"p = r_core_editor ( core , NULL , val )"		911406	0		=			
ANR	912916	Identifier	p		911406	0					
ANR	912917	CallExpression	"r_core_editor ( core , NULL , val )"		911406	1					
ANR	912918	Callee	r_core_editor		911406	0					
ANR	912919	Identifier	r_core_editor		911406	0					
ANR	912920	ArgumentList	core		911406	1					
ANR	912921	Argument	core		911406	0					
ANR	912922	Identifier	core		911406	0					
ANR	912923	Argument	NULL		911406	1					
ANR	912924	Identifier	NULL		911406	0					
ANR	912925	Argument	val		911406	2					
ANR	912926	Identifier	val		911406	0					
ANR	912927	IfStatement	if ( p )		911406	5					
ANR	912928	Condition	p	559:7:14544:14544	911406	0	True				
ANR	912929	Identifier	p		911406	0					
ANR	912930	CompoundStatement		252:10:6667:6667	911406	1					
ANR	912931	ExpressionStatement	"r_str_replace_char ( p , '\\n' , ';' )"	560:4:14553:14586	911406	0	True				
ANR	912932	CallExpression	"r_str_replace_char ( p , '\\n' , ';' )"		911406	0					
ANR	912933	Callee	r_str_replace_char		911406	0					
ANR	912934	Identifier	r_str_replace_char		911406	0					
ANR	912935	ArgumentList	p		911406	1					
ANR	912936	Argument	p		911406	0					
ANR	912937	Identifier	p		911406	0					
ANR	912938	Argument	'\\n'		911406	1					
ANR	912939	PrimaryExpression	'\\n'		911406	0					
ANR	912940	Argument	';'		911406	2					
ANR	912941	PrimaryExpression	';'		911406	0					
ANR	912942	ExpressionStatement	"r_config_set ( core -> config , input2 , p )"	561:4:14592:14630	911406	1	True				
ANR	912943	CallExpression	"r_config_set ( core -> config , input2 , p )"		911406	0					
ANR	912944	Callee	r_config_set		911406	0					
ANR	912945	Identifier	r_config_set		911406	0					
ANR	912946	ArgumentList	core -> config		911406	1					
ANR	912947	Argument	core -> config		911406	0					
ANR	912948	PtrMemberAccess	core -> config		911406	0					
ANR	912949	Identifier	core		911406	0					
ANR	912950	Identifier	config		911406	1					
ANR	912951	Argument	input2		911406	1					
ANR	912952	Identifier	input2		911406	0					
ANR	912953	Argument	p		911406	2					
ANR	912954	Identifier	p		911406	0					
ANR	912955	ElseStatement	else		911406	0					
ANR	912956	CompoundStatement		256:9:6766:6766	911406	0					
ANR	912957	ExpressionStatement	"eprintf ( ""Usage: ee varname # use $EDITOR to edit this config value\\n"" )"	564:3:14651:14722	911406	0	True				
ANR	912958	CallExpression	"eprintf ( ""Usage: ee varname # use $EDITOR to edit this config value\\n"" )"		911406	0					
ANR	912959	Callee	eprintf		911406	0					
ANR	912960	Identifier	eprintf		911406	0					
ANR	912961	ArgumentList	"""Usage: ee varname # use $EDITOR to edit this config value\\n"""		911406	1					
ANR	912962	Argument	"""Usage: ee varname # use $EDITOR to edit this config value\\n"""		911406	0					
ANR	912963	PrimaryExpression	"""Usage: ee varname # use $EDITOR to edit this config value\\n"""		911406	0					
ANR	912964	BreakStatement	break ;	566:2:14730:14735	911406	32	True				
ANR	912965	Label	case '!' :	567:1:14738:14746	911406	33	True				
ANR	912966	ExpressionStatement	input = r_str_trim_ro ( input + 1 )	568:2:14758:14791	911406	34	True				
ANR	912967	AssignmentExpression	input = r_str_trim_ro ( input + 1 )		911406	0		=			
ANR	912968	Identifier	input		911406	0					
ANR	912969	CallExpression	r_str_trim_ro ( input + 1 )		911406	1					
ANR	912970	Callee	r_str_trim_ro		911406	0					
ANR	912971	Identifier	r_str_trim_ro		911406	0					
ANR	912972	ArgumentList	input + 1		911406	1					
ANR	912973	Argument	input + 1		911406	0					
ANR	912974	AdditiveExpression	input + 1		911406	0		+			
ANR	912975	Identifier	input		911406	0					
ANR	912976	PrimaryExpression	1		911406	1					
ANR	912977	IfStatement	"if ( ! r_config_toggle ( core -> config , input ) )"		911406	35					
ANR	912978	Condition	"! r_config_toggle ( core -> config , input )"	569:6:14799:14836	911406	0	True				
ANR	912979	UnaryOperationExpression	"! r_config_toggle ( core -> config , input )"		911406	0					
ANR	912980	UnaryOperator	!		911406	0					
ANR	912981	CallExpression	"r_config_toggle ( core -> config , input )"		911406	1					
ANR	912982	Callee	r_config_toggle		911406	0					
ANR	912983	Identifier	r_config_toggle		911406	0					
ANR	912984	ArgumentList	core -> config		911406	1					
ANR	912985	Argument	core -> config		911406	0					
ANR	912986	PtrMemberAccess	core -> config		911406	0					
ANR	912987	Identifier	core		911406	0					
ANR	912988	Identifier	config		911406	1					
ANR	912989	Argument	input		911406	1					
ANR	912990	Identifier	input		911406	0					
ANR	912991	CompoundStatement		262:46:6959:6959	911406	1					
ANR	912992	ExpressionStatement	"eprintf ( ""r_config: '%s' is not a boolean variable.\\n"" , input )"	570:3:14844:14906	911406	0	True				
ANR	912993	CallExpression	"eprintf ( ""r_config: '%s' is not a boolean variable.\\n"" , input )"		911406	0					
ANR	912994	Callee	eprintf		911406	0					
ANR	912995	Identifier	eprintf		911406	0					
ANR	912996	ArgumentList	"""r_config: '%s' is not a boolean variable.\\n"""		911406	1					
ANR	912997	Argument	"""r_config: '%s' is not a boolean variable.\\n"""		911406	0					
ANR	912998	PrimaryExpression	"""r_config: '%s' is not a boolean variable.\\n"""		911406	0					
ANR	912999	Argument	input		911406	1					
ANR	913000	Identifier	input		911406	0					
ANR	913001	BreakStatement	break ;	572:2:14914:14919	911406	36	True				
ANR	913002	Label	case 's' :	573:1:14922:14930	911406	37	True				
ANR	913003	ExpressionStatement	"r_config_list ( core -> config , ( input [ 1 ] ) ? input + 1 : NULL , 's' )"	574:2:14942:15004	911406	38	True				
ANR	913004	CallExpression	"r_config_list ( core -> config , ( input [ 1 ] ) ? input + 1 : NULL , 's' )"		911406	0					
ANR	913005	Callee	r_config_list		911406	0					
ANR	913006	Identifier	r_config_list		911406	0					
ANR	913007	ArgumentList	core -> config		911406	1					
ANR	913008	Argument	core -> config		911406	0					
ANR	913009	PtrMemberAccess	core -> config		911406	0					
ANR	913010	Identifier	core		911406	0					
ANR	913011	Identifier	config		911406	1					
ANR	913012	Argument	( input [ 1 ] ) ? input + 1 : NULL		911406	1					
ANR	913013	ConditionalExpression	( input [ 1 ] ) ? input + 1 : NULL		911406	0					
ANR	913014	Condition	input [ 1 ]		911406	0					
ANR	913015	ArrayIndexing	input [ 1 ]		911406	0					
ANR	913016	Identifier	input		911406	0					
ANR	913017	PrimaryExpression	1		911406	1					
ANR	913018	AdditiveExpression	input + 1		911406	1		+			
ANR	913019	Identifier	input		911406	0					
ANR	913020	PrimaryExpression	1		911406	1					
ANR	913021	Identifier	NULL		911406	2					
ANR	913022	Argument	's'		911406	2					
ANR	913023	PrimaryExpression	's'		911406	0					
ANR	913024	BreakStatement	break ;	575:2:15008:15013	911406	39	True				
ANR	913025	Label	case '-' :	576:1:15016:15024	911406	40	True				
ANR	913026	ExpressionStatement	r_core_config_init ( core )	577:2:15036:15061	911406	41	True				
ANR	913027	CallExpression	r_core_config_init ( core )		911406	0					
ANR	913028	Callee	r_core_config_init		911406	0					
ANR	913029	Identifier	r_core_config_init		911406	0					
ANR	913030	ArgumentList	core		911406	1					
ANR	913031	Argument	core		911406	0					
ANR	913032	Identifier	core		911406	0					
ANR	913033	BreakStatement	break ;	579:2:15151:15156	911406	42	True				
ANR	913034	Label	case '*' :	580:1:15159:15167	911406	43	True				
ANR	913035	ExpressionStatement	"r_config_list ( core -> config , NULL , 1 )"	581:2:15179:15216	911406	44	True				
ANR	913036	CallExpression	"r_config_list ( core -> config , NULL , 1 )"		911406	0					
ANR	913037	Callee	r_config_list		911406	0					
ANR	913038	Identifier	r_config_list		911406	0					
ANR	913039	ArgumentList	core -> config		911406	1					
ANR	913040	Argument	core -> config		911406	0					
ANR	913041	PtrMemberAccess	core -> config		911406	0					
ANR	913042	Identifier	core		911406	0					
ANR	913043	Identifier	config		911406	1					
ANR	913044	Argument	NULL		911406	1					
ANR	913045	Identifier	NULL		911406	0					
ANR	913046	Argument	1		911406	2					
ANR	913047	PrimaryExpression	1		911406	0					
ANR	913048	BreakStatement	break ;	582:2:15220:15225	911406	45	True				
ANR	913049	Label	case 'r' :	583:1:15228:15236	911406	46	True				
ANR	913050	IfStatement	if ( input [ 1 ] )		911406	47					
ANR	913051	Condition	input [ 1 ]	584:6:15252:15259	911406	0	True				
ANR	913052	ArrayIndexing	input [ 1 ]		911406	0					
ANR	913053	Identifier	input		911406	0					
ANR	913054	PrimaryExpression	1		911406	1					
ANR	913055	CompoundStatement		278:3:7387:7438	911406	1					
ANR	913056	IdentifierDeclStatement	const char * key = input + ( ( input [ 1 ] == ' ' ) ? 2 : 1 ) ;	585:3:15267:15318	911406	0	True				
ANR	913057	IdentifierDecl	* key = input + ( ( input [ 1 ] == ' ' ) ? 2 : 1 )		911406	0					
ANR	913058	IdentifierDeclType	const char *		911406	0					
ANR	913059	Identifier	key		911406	1					
ANR	913060	AssignmentExpression	* key = input + ( ( input [ 1 ] == ' ' ) ? 2 : 1 )		911406	2		=			
ANR	913061	Identifier	key		911406	0					
ANR	913062	AdditiveExpression	input + ( ( input [ 1 ] == ' ' ) ? 2 : 1 )		911406	1		+			
ANR	913063	Identifier	input		911406	0					
ANR	913064	ConditionalExpression	( input [ 1 ] == ' ' ) ? 2 : 1		911406	1					
ANR	913065	Condition	input [ 1 ] == ' '		911406	0					
ANR	913066	EqualityExpression	input [ 1 ] == ' '		911406	0		==			
ANR	913067	ArrayIndexing	input [ 1 ]		911406	0					
ANR	913068	Identifier	input		911406	0					
ANR	913069	PrimaryExpression	1		911406	1					
ANR	913070	PrimaryExpression	' '		911406	1					
ANR	913071	PrimaryExpression	2		911406	1					
ANR	913072	PrimaryExpression	1		911406	2					
ANR	913073	IfStatement	"if ( ! r_config_readonly ( core -> config , key ) )"		911406	1					
ANR	913074	Condition	"! r_config_readonly ( core -> config , key )"	586:7:15327:15364	911406	0	True				
ANR	913075	UnaryOperationExpression	"! r_config_readonly ( core -> config , key )"		911406	0					
ANR	913076	UnaryOperator	!		911406	0					
ANR	913077	CallExpression	"r_config_readonly ( core -> config , key )"		911406	1					
ANR	913078	Callee	r_config_readonly		911406	0					
ANR	913079	Identifier	r_config_readonly		911406	0					
ANR	913080	ArgumentList	core -> config		911406	1					
ANR	913081	Argument	core -> config		911406	0					
ANR	913082	PtrMemberAccess	core -> config		911406	0					
ANR	913083	Identifier	core		911406	0					
ANR	913084	Identifier	config		911406	1					
ANR	913085	Argument	key		911406	1					
ANR	913086	Identifier	key		911406	0					
ANR	913087	CompoundStatement		279:47:7487:7487	911406	1					
ANR	913088	ExpressionStatement	"eprintf ( ""cannot find key '%s'\\n"" , key )"	587:4:15373:15412	911406	0	True				
ANR	913089	CallExpression	"eprintf ( ""cannot find key '%s'\\n"" , key )"		911406	0					
ANR	913090	Callee	eprintf		911406	0					
ANR	913091	Identifier	eprintf		911406	0					
ANR	913092	ArgumentList	"""cannot find key '%s'\\n"""		911406	1					
ANR	913093	Argument	"""cannot find key '%s'\\n"""		911406	0					
ANR	913094	PrimaryExpression	"""cannot find key '%s'\\n"""		911406	0					
ANR	913095	Argument	key		911406	1					
ANR	913096	Identifier	key		911406	0					
ANR	913097	ElseStatement	else		911406	0					
ANR	913098	CompoundStatement		282:9:7548:7548	911406	0					
ANR	913099	ExpressionStatement	"eprintf ( ""Usage: er [key]  # make an eval key PERMANENTLY read only\\n"" )"	590:3:15433:15504	911406	0	True				
ANR	913100	CallExpression	"eprintf ( ""Usage: er [key]  # make an eval key PERMANENTLY read only\\n"" )"		911406	0					
ANR	913101	Callee	eprintf		911406	0					
ANR	913102	Identifier	eprintf		911406	0					
ANR	913103	ArgumentList	"""Usage: er [key]  # make an eval key PERMANENTLY read only\\n"""		911406	1					
ANR	913104	Argument	"""Usage: er [key]  # make an eval key PERMANENTLY read only\\n"""		911406	0					
ANR	913105	PrimaryExpression	"""Usage: er [key]  # make an eval key PERMANENTLY read only\\n"""		911406	0					
ANR	913106	BreakStatement	break ;	592:2:15512:15517	911406	48	True				
ANR	913107	Label	"case ',' :"	593:1:15520:15528	911406	49	True				
ANR	913108	ExpressionStatement	"r_config_eval ( core -> config , input + 1 , true )"	594:2:15540:15585	911406	50	True				
ANR	913109	CallExpression	"r_config_eval ( core -> config , input + 1 , true )"		911406	0					
ANR	913110	Callee	r_config_eval		911406	0					
ANR	913111	Identifier	r_config_eval		911406	0					
ANR	913112	ArgumentList	core -> config		911406	1					
ANR	913113	Argument	core -> config		911406	0					
ANR	913114	PtrMemberAccess	core -> config		911406	0					
ANR	913115	Identifier	core		911406	0					
ANR	913116	Identifier	config		911406	1					
ANR	913117	Argument	input + 1		911406	1					
ANR	913118	AdditiveExpression	input + 1		911406	0		+			
ANR	913119	Identifier	input		911406	0					
ANR	913120	PrimaryExpression	1		911406	1					
ANR	913121	Argument	true		911406	2					
ANR	913122	Identifier	true		911406	0					
ANR	913123	BreakStatement	break ;	595:2:15589:15594	911406	51	True				
ANR	913124	Label	case '.' :	596:1:15597:15605	911406	52	True				
ANR	913125	Label	case ' ' :	597:1:15616:15624	911406	53	True				
ANR	913126	IfStatement	"if ( r_str_endswith ( input , ""."" ) )"		911406	54					
ANR	913127	Condition	"r_str_endswith ( input , ""."" )"	598:6:15640:15666	911406	0	True				
ANR	913128	CallExpression	"r_str_endswith ( input , ""."" )"		911406	0					
ANR	913129	Callee	r_str_endswith		911406	0					
ANR	913130	Identifier	r_str_endswith		911406	0					
ANR	913131	ArgumentList	input		911406	1					
ANR	913132	Argument	input		911406	0					
ANR	913133	Identifier	input		911406	0					
ANR	913134	Argument	"""."""		911406	1					
ANR	913135	PrimaryExpression	"""."""		911406	0					
ANR	913136	CompoundStatement		291:35:7789:7789	911406	1					
ANR	913137	ExpressionStatement	"r_config_list ( core -> config , input + 1 , 0 )"	599:3:15674:15716	911406	0	True				
ANR	913138	CallExpression	"r_config_list ( core -> config , input + 1 , 0 )"		911406	0					
ANR	913139	Callee	r_config_list		911406	0					
ANR	913140	Identifier	r_config_list		911406	0					
ANR	913141	ArgumentList	core -> config		911406	1					
ANR	913142	Argument	core -> config		911406	0					
ANR	913143	PtrMemberAccess	core -> config		911406	0					
ANR	913144	Identifier	core		911406	0					
ANR	913145	Identifier	config		911406	1					
ANR	913146	Argument	input + 1		911406	1					
ANR	913147	AdditiveExpression	input + 1		911406	0		+			
ANR	913148	Identifier	input		911406	0					
ANR	913149	PrimaryExpression	1		911406	1					
ANR	913150	Argument	0		911406	2					
ANR	913151	PrimaryExpression	0		911406	0					
ANR	913152	ElseStatement	else		911406	0					
ANR	913153	CompoundStatement		293:9:7847:7847	911406	0					
ANR	913154	ExpressionStatement	"r_config_eval ( core -> config , input + 1 , false )"	602:3:15829:15875	911406	0	True				
ANR	913155	CallExpression	"r_config_eval ( core -> config , input + 1 , false )"		911406	0					
ANR	913156	Callee	r_config_eval		911406	0					
ANR	913157	Identifier	r_config_eval		911406	0					
ANR	913158	ArgumentList	core -> config		911406	1					
ANR	913159	Argument	core -> config		911406	0					
ANR	913160	PtrMemberAccess	core -> config		911406	0					
ANR	913161	Identifier	core		911406	0					
ANR	913162	Identifier	config		911406	1					
ANR	913163	Argument	input + 1		911406	1					
ANR	913164	AdditiveExpression	input + 1		911406	0		+			
ANR	913165	Identifier	input		911406	0					
ANR	913166	PrimaryExpression	1		911406	1					
ANR	913167	Argument	false		911406	2					
ANR	913168	Identifier	false		911406	0					
ANR	913169	BreakStatement	break ;	604:2:15883:15888	911406	55	True				
ANR	913170	ReturnStatement	return 0 ;	606:1:15894:15902	911406	2	True				
ANR	913171	PrimaryExpression	0		911406	0					
ANR	913172	ReturnType	static int		911406	1					
ANR	913173	Identifier	cmd_eval		911406	2					
ANR	913174	ParameterList	"void * data , const char * input"		911406	3					
ANR	913175	Parameter	void * data	308:20:7848:7857	911406	0	True				
ANR	913176	ParameterType	void *		911406	0					
ANR	913177	Identifier	data		911406	1					
ANR	913178	Parameter	const char * input	308:32:7860:7876	911406	1	True				
ANR	913179	ParameterType	const char *		911406	0					
ANR	913180	Identifier	input		911406	1					
ANR	913181	CFGEntryNode	ENTRY		911406		True				
ANR	913182	CFGExitNode	EXIT		911406		True				
ANR	913183	Symbol	r_core_list_themes		911406						
ANR	913184	Symbol	r_core_get_theme		911406						
ANR	913185	Symbol	data		911406						
ANR	913186	Symbol	cmd_quit		911406						
ANR	913187	Symbol	r_sys_getenv		911406						
ANR	913188	Symbol	* q ++		911406						
ANR	913189	Symbol	* input		911406						
ANR	913190	Symbol	& rcolor		911406						
ANR	913191	Symbol	strchr		911406						
ANR	913192	Symbol	core -> offset		911406						
ANR	913193	Symbol	* argv		911406						
ANR	913194	Symbol	type		911406						
ANR	913195	Symbol	strlen		911406						
ANR	913196	Symbol	r_core_editor		911406						
ANR	913197	Symbol	color_code		911406						
ANR	913198	Symbol	rcolor		911406						
ANR	913199	Symbol	strcmp		911406						
ANR	913200	Symbol	val		911406						
ANR	913201	Symbol	res		911406						
ANR	913202	Symbol	r_cons_is_interactive		911406						
ANR	913203	Symbol	NULL		911406						
ANR	913204	Symbol	* v ++		911406						
ANR	913205	Symbol	themes_list		911406						
ANR	913206	Symbol	var		911406						
ANR	913207	Symbol	r_cons_pal_set		911406						
ANR	913208	Symbol	r_config_readonly		911406						
ANR	913209	Symbol	helpmsg		911406						
ANR	913210	Symbol	help_msg_eco		911406						
ANR	913211	Symbol	r_cons_pal_get		911406						
ANR	913212	Symbol	r_sys_get_environ		911406						
ANR	913213	Symbol	str		911406						
ANR	913214	Symbol	input		911406						
ANR	913215	Symbol	core		911406						
ANR	913216	Symbol	node		911406						
ANR	913217	Symbol	r_cons_singleton ( ) -> context -> pal . wordhl		911406						
ANR	913218	Symbol	th_iter		911406						
ANR	913219	Symbol	r_config_node_type		911406						
ANR	913220	Symbol	true		911406						
ANR	913221	Symbol	r_str_trim_ro		911406						
ANR	913222	Symbol	r_config_node_get		911406						
ANR	913223	Symbol	word		911406						
ANR	913224	Symbol	core -> cons -> context		911406						
ANR	913225	Symbol	color		911406						
ANR	913226	Symbol	* core -> cons		911406						
ANR	913227	Symbol	input2		911406						
ANR	913228	Symbol	* core		911406						
ANR	913229	Symbol	r_config_get		911406						
ANR	913230	Symbol	help_msg_e		911406						
ANR	913231	Symbol	r_str_newf		911406						
ANR	913232	Symbol	argv		911406						
ANR	913233	Symbol	core -> anal		911406						
ANR	913234	Symbol	r_cons_pal_parse		911406						
ANR	913235	Symbol	& argc		911406						
ANR	913236	Symbol	* var		911406						
ANR	913237	Symbol	core -> cons		911406						
ANR	913238	Symbol	file		911406						
ANR	913239	Symbol	* type		911406						
ANR	913240	Symbol	R_META_TYPE_HIGHLIGHT		911406						
ANR	913241	Symbol	r_cons_singleton		911406						
ANR	913242	Symbol	r_str_endswith		911406						
ANR	913243	Symbol	r_str_home		911406						
ANR	913244	Symbol	* * core		911406						
ANR	913245	Symbol	r_meta_get_string		911406						
ANR	913246	Symbol	key		911406						
ANR	913247	Symbol	r_str_argv		911406						
ANR	913248	Symbol	core -> config		911406						
ANR	913249	Symbol	curtheme		911406						
ANR	913250	Symbol	argc		911406						
ANR	913251	Symbol	help_msg_ec		911406						
ANR	913252	Symbol	e		911406						
ANR	913253	Symbol	r_cons_singleton ( ) -> context -> pal		911406						
ANR	913254	Symbol	false		911406						
ANR	913255	Symbol	r_cons_yesno		911406						
ANR	913256	Symbol	* r_cons_singleton ( ) -> context		911406						
ANR	913257	Symbol	k		911406						
ANR	913258	Symbol	* * r_cons_singleton		911406						
ANR	913259	Symbol	r_num_rand		911406						
ANR	913260	Symbol	* e		911406						
ANR	913261	Symbol	p		911406						
ANR	913262	Symbol	q		911406						
ANR	913263	Symbol	r_config_toggle		911406						
ANR	913264	Symbol	th		911406						
ANR	913265	Symbol	v		911406						
ANR	913266	Symbol	r_cons_editor		911406						
ANR	913267	Symbol	strdup		911406						
ANR	913268	Symbol	r_cons_singleton ( ) -> context		911406						
ANR	913269	Symbol	dup		911406						
ANR	913270	Symbol	* r_cons_singleton		911406						
