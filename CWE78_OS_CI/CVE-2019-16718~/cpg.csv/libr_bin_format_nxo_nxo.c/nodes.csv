command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	3644909	File	data/converged/CVE-2019-16718~_radare2/libr_bin_format_nxo_nxo.c								
ANR	3644910	Function	readLE32	13:0:224:357							
ANR	3644911	FunctionDef	"readLE32 (RBuffer * buf , int off)"		3644910	0					
ANR	3644912	CompoundStatement		13:37:261:357	3644910	0					
ANR	3644913	IdentifierDeclStatement	ut32 num = 0 ;	15:1:281:293	3644910	0	True				
ANR	3644914	IdentifierDecl	num = 0		3644910	0					
ANR	3644915	IdentifierDeclType	ut32		3644910	0					
ANR	3644916	Identifier	num		3644910	1					
ANR	3644917	AssignmentExpression	num = 0		3644910	2		=			
ANR	3644918	Identifier	num		3644910	0					
ANR	3644919	PrimaryExpression	0		3644910	1					
ANR	3644920	ExpressionStatement	"( void ) r_buf_read_at ( buf , off , ( ut8 * ) & num , 4 )"	16:1:296:342	3644910	1	True				
ANR	3644921	CastExpression	"( void ) r_buf_read_at ( buf , off , ( ut8 * ) & num , 4 )"		3644910	0					
ANR	3644922	CastTarget	void		3644910	0					
ANR	3644923	CallExpression	"r_buf_read_at ( buf , off , ( ut8 * ) & num , 4 )"		3644910	1					
ANR	3644924	Callee	r_buf_read_at		3644910	0					
ANR	3644925	Identifier	r_buf_read_at		3644910	0					
ANR	3644926	ArgumentList	buf		3644910	1					
ANR	3644927	Argument	buf		3644910	0					
ANR	3644928	Identifier	buf		3644910	0					
ANR	3644929	Argument	off		3644910	1					
ANR	3644930	Identifier	off		3644910	0					
ANR	3644931	Argument	( ut8 * ) & num		3644910	2					
ANR	3644932	CastExpression	( ut8 * ) & num		3644910	0					
ANR	3644933	CastTarget	ut8 *		3644910	0					
ANR	3644934	UnaryOperationExpression	& num		3644910	1					
ANR	3644935	UnaryOperator	&		3644910	0					
ANR	3644936	Identifier	num		3644910	1					
ANR	3644937	Argument	4		3644910	3					
ANR	3644938	PrimaryExpression	4		3644910	0					
ANR	3644939	ReturnStatement	return num ;	17:1:345:355	3644910	2	True				
ANR	3644940	Identifier	num		3644910	0					
ANR	3644941	ReturnType	ut32		3644910	1					
ANR	3644942	Identifier	readLE32		3644910	2					
ANR	3644943	ParameterList	"RBuffer * buf , int off"		3644910	3					
ANR	3644944	Parameter	RBuffer * buf	13:14:238:249	3644910	0	True				
ANR	3644945	ParameterType	RBuffer *		3644910	0					
ANR	3644946	Identifier	buf		3644910	1					
ANR	3644947	Parameter	int off	13:28:252:258	3644910	1	True				
ANR	3644948	ParameterType	int		3644910	0					
ANR	3644949	Identifier	off		3644910	1					
ANR	3644950	CFGEntryNode	ENTRY		3644910		True				
ANR	3644951	CFGExitNode	EXIT		3644910		True				
ANR	3644952	Symbol	buf		3644910						
ANR	3644953	Symbol	num		3644910						
ANR	3644954	Symbol	& num		3644910						
ANR	3644955	Symbol	off		3644910						
ANR	3644956	Function	readLE64	20:0:360:470							
ANR	3644957	FunctionDef	"readLE64 (RBuffer * buf , int off)"		3644956	0					
ANR	3644958	CompoundStatement		20:37:397:470	3644956	0					
ANR	3644959	ReturnStatement	"return r_buf_size ( buf ) >= off + 8 ? r_buf_read_le64_at ( buf , off ) : 0 ;"	21:1:400:468	3644956	0	True				
ANR	3644960	ConditionalExpression	"r_buf_size ( buf ) >= off + 8 ? r_buf_read_le64_at ( buf , off ) : 0"		3644956	0					
ANR	3644961	Condition	r_buf_size ( buf ) >= off + 8		3644956	0					
ANR	3644962	RelationalExpression	r_buf_size ( buf ) >= off + 8		3644956	0		>=			
ANR	3644963	CallExpression	r_buf_size ( buf )		3644956	0					
ANR	3644964	Callee	r_buf_size		3644956	0					
ANR	3644965	Identifier	r_buf_size		3644956	0					
ANR	3644966	ArgumentList	buf		3644956	1					
ANR	3644967	Argument	buf		3644956	0					
ANR	3644968	Identifier	buf		3644956	0					
ANR	3644969	AdditiveExpression	off + 8		3644956	1		+			
ANR	3644970	Identifier	off		3644956	0					
ANR	3644971	PrimaryExpression	8		3644956	1					
ANR	3644972	CallExpression	"r_buf_read_le64_at ( buf , off )"		3644956	1					
ANR	3644973	Callee	r_buf_read_le64_at		3644956	0					
ANR	3644974	Identifier	r_buf_read_le64_at		3644956	0					
ANR	3644975	ArgumentList	buf		3644956	1					
ANR	3644976	Argument	buf		3644956	0					
ANR	3644977	Identifier	buf		3644956	0					
ANR	3644978	Argument	off		3644956	1					
ANR	3644979	Identifier	off		3644956	0					
ANR	3644980	PrimaryExpression	0		3644956	2					
ANR	3644981	ReturnType	ut64		3644956	1					
ANR	3644982	Identifier	readLE64		3644956	2					
ANR	3644983	ParameterList	"RBuffer * buf , int off"		3644956	3					
ANR	3644984	Parameter	RBuffer * buf	20:14:374:385	3644956	0	True				
ANR	3644985	ParameterType	RBuffer *		3644956	0					
ANR	3644986	Identifier	buf		3644956	1					
ANR	3644987	Parameter	int off	20:28:388:394	3644956	1	True				
ANR	3644988	ParameterType	int		3644956	0					
ANR	3644989	Identifier	off		3644956	1					
ANR	3644990	CFGEntryNode	ENTRY		3644956		True				
ANR	3644991	CFGExitNode	EXIT		3644956		True				
ANR	3644992	Symbol	buf		3644956						
ANR	3644993	Symbol	r_buf_read_le64_at		3644956						
ANR	3644994	Symbol	off		3644956						
ANR	3644995	Symbol	r_buf_size		3644956						
ANR	3644996	Function	readString	24:0:473:744							
ANR	3644997	FunctionDef	"readString (RBuffer * buf , int off)"		3644996	0					
ANR	3644998	CompoundStatement		24:47:520:744	3644996	0					
ANR	3644999	IdentifierDeclStatement	char symbol [ 128 ] ;	25:1:523:539	3644996	0	True				
ANR	3645000	IdentifierDecl	symbol [ 128 ]		3644996	0					
ANR	3645001	IdentifierDeclType	char [ 128 ]		3644996	0					
ANR	3645002	Identifier	symbol		3644996	1					
ANR	3645003	PrimaryExpression	128		3644996	2					
ANR	3645004	IdentifierDeclStatement	"int left = r_buf_read_at ( buf , off , ( ut8 * ) symbol , sizeof ( symbol ) ) ;"	26:1:582:648	3644996	1	True				
ANR	3645005	IdentifierDecl	"left = r_buf_read_at ( buf , off , ( ut8 * ) symbol , sizeof ( symbol ) )"		3644996	0					
ANR	3645006	IdentifierDeclType	int		3644996	0					
ANR	3645007	Identifier	left		3644996	1					
ANR	3645008	AssignmentExpression	"left = r_buf_read_at ( buf , off , ( ut8 * ) symbol , sizeof ( symbol ) )"		3644996	2		=			
ANR	3645009	Identifier	left		3644996	0					
ANR	3645010	CallExpression	"r_buf_read_at ( buf , off , ( ut8 * ) symbol , sizeof ( symbol ) )"		3644996	1					
ANR	3645011	Callee	r_buf_read_at		3644996	0					
ANR	3645012	Identifier	r_buf_read_at		3644996	0					
ANR	3645013	ArgumentList	buf		3644996	1					
ANR	3645014	Argument	buf		3644996	0					
ANR	3645015	Identifier	buf		3644996	0					
ANR	3645016	Argument	off		3644996	1					
ANR	3645017	Identifier	off		3644996	0					
ANR	3645018	Argument	( ut8 * ) symbol		3644996	2					
ANR	3645019	CastExpression	( ut8 * ) symbol		3644996	0					
ANR	3645020	CastTarget	ut8 *		3644996	0					
ANR	3645021	Identifier	symbol		3644996	1					
ANR	3645022	Argument	sizeof ( symbol )		3644996	3					
ANR	3645023	SizeofExpression	sizeof ( symbol )		3644996	0					
ANR	3645024	Sizeof	sizeof		3644996	0					
ANR	3645025	SizeofOperand	symbol		3644996	1					
ANR	3645026	IfStatement	if ( left < 1 )		3644996	2					
ANR	3645027	Condition	left < 1	27:5:655:662	3644996	0	True				
ANR	3645028	RelationalExpression	left < 1		3644996	0		<			
ANR	3645029	Identifier	left		3644996	0					
ANR	3645030	PrimaryExpression	1		3644996	1					
ANR	3645031	CompoundStatement		4:15:144:144	3644996	1					
ANR	3645032	ReturnStatement	return NULL ;	28:2:669:680	3644996	0	True				
ANR	3645033	Identifier	NULL		3644996	0					
ANR	3645034	ExpressionStatement	symbol [ sizeof ( symbol ) - 1 ] = 0	30:1:686:717	3644996	3	True				
ANR	3645035	AssignmentExpression	symbol [ sizeof ( symbol ) - 1 ] = 0		3644996	0		=			
ANR	3645036	ArrayIndexing	symbol [ sizeof ( symbol ) - 1 ]		3644996	0					
ANR	3645037	Identifier	symbol		3644996	0					
ANR	3645038	AdditiveExpression	sizeof ( symbol ) - 1		3644996	1		-			
ANR	3645039	SizeofExpression	sizeof ( symbol )		3644996	0					
ANR	3645040	Sizeof	sizeof		3644996	0					
ANR	3645041	SizeofOperand	symbol		3644996	1					
ANR	3645042	PrimaryExpression	1		3644996	1					
ANR	3645043	PrimaryExpression	0		3644996	1					
ANR	3645044	ReturnStatement	return strdup ( symbol ) ;	31:1:720:742	3644996	4	True				
ANR	3645045	CallExpression	strdup ( symbol )		3644996	0					
ANR	3645046	Callee	strdup		3644996	0					
ANR	3645047	Identifier	strdup		3644996	0					
ANR	3645048	ArgumentList	symbol		3644996	1					
ANR	3645049	Argument	symbol		3644996	0					
ANR	3645050	Identifier	symbol		3644996	0					
ANR	3645051	ReturnType	static char *		3644996	1					
ANR	3645052	Identifier	readString		3644996	2					
ANR	3645053	ParameterList	"RBuffer * buf , int off"		3644996	3					
ANR	3645054	Parameter	RBuffer * buf	24:24:497:508	3644996	0	True				
ANR	3645055	ParameterType	RBuffer *		3644996	0					
ANR	3645056	Identifier	buf		3644996	1					
ANR	3645057	Parameter	int off	24:38:511:517	3644996	1	True				
ANR	3645058	ParameterType	int		3644996	0					
ANR	3645059	Identifier	off		3644996	1					
ANR	3645060	CFGEntryNode	ENTRY		3644996		True				
ANR	3645061	CFGExitNode	EXIT		3644996		True				
ANR	3645062	Symbol	symbol		3644996						
ANR	3645063	Symbol	buf		3644996						
ANR	3645064	Symbol	NULL		3644996						
ANR	3645065	Symbol	left		3644996						
ANR	3645066	Symbol	r_buf_read_at		3644996						
ANR	3645067	Symbol	strdup		3644996						
ANR	3645068	Symbol	* symbol		3644996						
ANR	3645069	Symbol	off		3644996						
ANR	3645070	Function	fileType	34:0:747:1012							
ANR	3645071	FunctionDef	fileType (const ut8 * buf)		3645070	0					
ANR	3645072	CompoundStatement		34:37:784:1012	3645070	0					
ANR	3645073	IfStatement	"if ( ! memcmp ( buf , ""NRO0"" , 4 ) )"		3645070	0					
ANR	3645074	Condition	"! memcmp ( buf , ""NRO0"" , 4 )"	35:5:791:814	3645070	0	True				
ANR	3645075	UnaryOperationExpression	"! memcmp ( buf , ""NRO0"" , 4 )"		3645070	0					
ANR	3645076	UnaryOperator	!		3645070	0					
ANR	3645077	CallExpression	"memcmp ( buf , ""NRO0"" , 4 )"		3645070	1					
ANR	3645078	Callee	memcmp		3645070	0					
ANR	3645079	Identifier	memcmp		3645070	0					
ANR	3645080	ArgumentList	buf		3645070	1					
ANR	3645081	Argument	buf		3645070	0					
ANR	3645082	Identifier	buf		3645070	0					
ANR	3645083	Argument	"""NRO0"""		3645070	1					
ANR	3645084	PrimaryExpression	"""NRO0"""		3645070	0					
ANR	3645085	Argument	4		3645070	2					
ANR	3645086	PrimaryExpression	4		3645070	0					
ANR	3645087	CompoundStatement		2:31:32:32	3645070	1					
ANR	3645088	ReturnStatement	"return ""nro0"" ;"	36:2:821:834	3645070	0	True				
ANR	3645089	PrimaryExpression	"""nro0"""		3645070	0					
ANR	3645090	IfStatement	"if ( ! memcmp ( buf , ""NRR0"" , 4 ) )"		3645070	1					
ANR	3645091	Condition	"! memcmp ( buf , ""NRR0"" , 4 )"	38:5:844:867	3645070	0	True				
ANR	3645092	UnaryOperationExpression	"! memcmp ( buf , ""NRR0"" , 4 )"		3645070	0					
ANR	3645093	UnaryOperator	!		3645070	0					
ANR	3645094	CallExpression	"memcmp ( buf , ""NRR0"" , 4 )"		3645070	1					
ANR	3645095	Callee	memcmp		3645070	0					
ANR	3645096	Identifier	memcmp		3645070	0					
ANR	3645097	ArgumentList	buf		3645070	1					
ANR	3645098	Argument	buf		3645070	0					
ANR	3645099	Identifier	buf		3645070	0					
ANR	3645100	Argument	"""NRR0"""		3645070	1					
ANR	3645101	PrimaryExpression	"""NRR0"""		3645070	0					
ANR	3645102	Argument	4		3645070	2					
ANR	3645103	PrimaryExpression	4		3645070	0					
ANR	3645104	CompoundStatement		5:31:85:85	3645070	1					
ANR	3645105	ReturnStatement	"return ""nrr0"" ;"	39:2:874:887	3645070	0	True				
ANR	3645106	PrimaryExpression	"""nrr0"""		3645070	0					
ANR	3645107	IfStatement	"if ( ! memcmp ( buf , ""MOD0"" , 4 ) )"		3645070	2					
ANR	3645108	Condition	"! memcmp ( buf , ""MOD0"" , 4 )"	41:5:897:920	3645070	0	True				
ANR	3645109	UnaryOperationExpression	"! memcmp ( buf , ""MOD0"" , 4 )"		3645070	0					
ANR	3645110	UnaryOperator	!		3645070	0					
ANR	3645111	CallExpression	"memcmp ( buf , ""MOD0"" , 4 )"		3645070	1					
ANR	3645112	Callee	memcmp		3645070	0					
ANR	3645113	Identifier	memcmp		3645070	0					
ANR	3645114	ArgumentList	buf		3645070	1					
ANR	3645115	Argument	buf		3645070	0					
ANR	3645116	Identifier	buf		3645070	0					
ANR	3645117	Argument	"""MOD0"""		3645070	1					
ANR	3645118	PrimaryExpression	"""MOD0"""		3645070	0					
ANR	3645119	Argument	4		3645070	2					
ANR	3645120	PrimaryExpression	4		3645070	0					
ANR	3645121	CompoundStatement		8:31:138:138	3645070	1					
ANR	3645122	ReturnStatement	"return ""mod0"" ;"	42:2:927:940	3645070	0	True				
ANR	3645123	PrimaryExpression	"""mod0"""		3645070	0					
ANR	3645124	IfStatement	"if ( ! memcmp ( buf , ""NSO0"" , 4 ) )"		3645070	3					
ANR	3645125	Condition	"! memcmp ( buf , ""NSO0"" , 4 )"	44:5:950:973	3645070	0	True				
ANR	3645126	UnaryOperationExpression	"! memcmp ( buf , ""NSO0"" , 4 )"		3645070	0					
ANR	3645127	UnaryOperator	!		3645070	0					
ANR	3645128	CallExpression	"memcmp ( buf , ""NSO0"" , 4 )"		3645070	1					
ANR	3645129	Callee	memcmp		3645070	0					
ANR	3645130	Identifier	memcmp		3645070	0					
ANR	3645131	ArgumentList	buf		3645070	1					
ANR	3645132	Argument	buf		3645070	0					
ANR	3645133	Identifier	buf		3645070	0					
ANR	3645134	Argument	"""NSO0"""		3645070	1					
ANR	3645135	PrimaryExpression	"""NSO0"""		3645070	0					
ANR	3645136	Argument	4		3645070	2					
ANR	3645137	PrimaryExpression	4		3645070	0					
ANR	3645138	CompoundStatement		11:31:191:191	3645070	1					
ANR	3645139	ReturnStatement	"return ""nso0"" ;"	45:2:980:993	3645070	0	True				
ANR	3645140	PrimaryExpression	"""nso0"""		3645070	0					
ANR	3645141	ReturnStatement	return NULL ;	47:1:999:1010	3645070	4	True				
ANR	3645142	Identifier	NULL		3645070	0					
ANR	3645143	ReturnType	const char *		3645070	1					
ANR	3645144	Identifier	fileType		3645070	2					
ANR	3645145	ParameterList	const ut8 * buf		3645070	3					
ANR	3645146	Parameter	const ut8 * buf	34:21:768:781	3645070	0	True				
ANR	3645147	ParameterType	const ut8 *		3645070	0					
ANR	3645148	Identifier	buf		3645070	1					
ANR	3645149	CFGEntryNode	ENTRY		3645070		True				
ANR	3645150	CFGExitNode	EXIT		3645070		True				
ANR	3645151	Symbol	buf		3645070						
ANR	3645152	Symbol	memcmp		3645070						
ANR	3645153	Symbol	NULL		3645070						
ANR	3645154	Function	walkSymbols	50:0:1015:2811							
ANR	3645155	FunctionDef	"walkSymbols (RBuffer * buf , RBinNXOObj * bin , ut64 symtab , ut64 strtab , ut64 strtab_size , ut64 relplt , ut64 baddr)"		3645154	0					
ANR	3645156	CompoundStatement		50:125:1140:2811	3645154	0					
ANR	3645157	IdentifierDeclStatement	"int i , import = 0 ;"	51:1:1143:1160	3645154	0	True				
ANR	3645158	IdentifierDecl	i		3645154	0					
ANR	3645159	IdentifierDeclType	int		3645154	0					
ANR	3645160	Identifier	i		3645154	1					
ANR	3645161	IdentifierDecl	import = 0		3645154	1					
ANR	3645162	IdentifierDeclType	int		3645154	0					
ANR	3645163	Identifier	import		3645154	1					
ANR	3645164	AssignmentExpression	import = 0		3645154	2		=			
ANR	3645165	Identifier	import		3645154	0					
ANR	3645166	PrimaryExpression	0		3645154	1					
ANR	3645167	IdentifierDeclStatement	RBinSymbol * sym ;	52:1:1163:1178	3645154	1	True				
ANR	3645168	IdentifierDecl	* sym		3645154	0					
ANR	3645169	IdentifierDeclType	RBinSymbol *		3645154	0					
ANR	3645170	Identifier	sym		3645154	1					
ANR	3645171	IdentifierDeclStatement	RBinImport * imp ;	53:1:1181:1196	3645154	2	True				
ANR	3645172	IdentifierDecl	* imp		3645154	0					
ANR	3645173	IdentifierDeclType	RBinImport *		3645154	0					
ANR	3645174	Identifier	imp		3645154	1					
ANR	3645175	ForStatement	for ( i = 8 ; i < 99999 ; i ++ )		3645154	3					
ANR	3645176	ForInit	i = 8 ;	54:6:1204:1209	3645154	0	True				
ANR	3645177	AssignmentExpression	i = 8		3645154	0		=			
ANR	3645178	Identifier	i		3645154	0					
ANR	3645179	PrimaryExpression	8		3645154	1					
ANR	3645180	Condition	i < 99999	54:13:1211:1219	3645154	1	True				
ANR	3645181	RelationalExpression	i < 99999		3645154	0		<			
ANR	3645182	Identifier	i		3645154	0					
ANR	3645183	PrimaryExpression	99999		3645154	1					
ANR	3645184	PostIncDecOperationExpression	i ++	54:24:1222:1224	3645154	2	True				
ANR	3645185	Identifier	i		3645154	0					
ANR	3645186	IncDec	++		3645154	1					
ANR	3645187	CompoundStatement		11:2:293:340	3645154	3					
ANR	3645188	IdentifierDeclStatement	"ut64 addr = readLE64 ( buf , symtab + i ) ;"	55:2:1231:1269	3645154	0	True				
ANR	3645189	IdentifierDecl	"addr = readLE64 ( buf , symtab + i )"		3645154	0					
ANR	3645190	IdentifierDeclType	ut64		3645154	0					
ANR	3645191	Identifier	addr		3645154	1					
ANR	3645192	AssignmentExpression	"addr = readLE64 ( buf , symtab + i )"		3645154	2		=			
ANR	3645193	Identifier	addr		3645154	0					
ANR	3645194	CallExpression	"readLE64 ( buf , symtab + i )"		3645154	1					
ANR	3645195	Callee	readLE64		3645154	0					
ANR	3645196	Identifier	readLE64		3645154	0					
ANR	3645197	ArgumentList	buf		3645154	1					
ANR	3645198	Argument	buf		3645154	0					
ANR	3645199	Identifier	buf		3645154	0					
ANR	3645200	Argument	symtab + i		3645154	1					
ANR	3645201	AdditiveExpression	symtab + i		3645154	0		+			
ANR	3645202	Identifier	symtab		3645154	0					
ANR	3645203	Identifier	i		3645154	1					
ANR	3645204	IdentifierDeclStatement	"ut64 size = readLE64 ( buf , symtab + i + 8 ) ;"	56:2:1273:1315	3645154	1	True				
ANR	3645205	IdentifierDecl	"size = readLE64 ( buf , symtab + i + 8 )"		3645154	0					
ANR	3645206	IdentifierDeclType	ut64		3645154	0					
ANR	3645207	Identifier	size		3645154	1					
ANR	3645208	AssignmentExpression	"size = readLE64 ( buf , symtab + i + 8 )"		3645154	2		=			
ANR	3645209	Identifier	size		3645154	0					
ANR	3645210	CallExpression	"readLE64 ( buf , symtab + i + 8 )"		3645154	1					
ANR	3645211	Callee	readLE64		3645154	0					
ANR	3645212	Identifier	readLE64		3645154	0					
ANR	3645213	ArgumentList	buf		3645154	1					
ANR	3645214	Argument	buf		3645154	0					
ANR	3645215	Identifier	buf		3645154	0					
ANR	3645216	Argument	symtab + i + 8		3645154	1					
ANR	3645217	AdditiveExpression	symtab + i + 8		3645154	0		+			
ANR	3645218	Identifier	symtab		3645154	0					
ANR	3645219	AdditiveExpression	i + 8		3645154	1		+			
ANR	3645220	Identifier	i		3645154	0					
ANR	3645221	PrimaryExpression	8		3645154	1					
ANR	3645222	ExpressionStatement	i += 16	57:2:1319:1326	3645154	2	True				
ANR	3645223	AssignmentExpression	i += 16		3645154	0		+=			
ANR	3645224	Identifier	i		3645154	0					
ANR	3645225	PrimaryExpression	16		3645154	1					
ANR	3645226	IdentifierDeclStatement	"ut64 name = readLE32 ( buf , symtab + i ) ;"	58:2:1344:1382	3645154	3	True				
ANR	3645227	IdentifierDecl	"name = readLE32 ( buf , symtab + i )"		3645154	0					
ANR	3645228	IdentifierDeclType	ut64		3645154	0					
ANR	3645229	Identifier	name		3645154	1					
ANR	3645230	AssignmentExpression	"name = readLE32 ( buf , symtab + i )"		3645154	2		=			
ANR	3645231	Identifier	name		3645154	0					
ANR	3645232	CallExpression	"readLE32 ( buf , symtab + i )"		3645154	1					
ANR	3645233	Callee	readLE32		3645154	0					
ANR	3645234	Identifier	readLE32		3645154	0					
ANR	3645235	ArgumentList	buf		3645154	1					
ANR	3645236	Argument	buf		3645154	0					
ANR	3645237	Identifier	buf		3645154	0					
ANR	3645238	Argument	symtab + i		3645154	1					
ANR	3645239	AdditiveExpression	symtab + i		3645154	0		+			
ANR	3645240	Identifier	symtab		3645154	0					
ANR	3645241	Identifier	i		3645154	1					
ANR	3645242	IdentifierDeclStatement	"char * symName = readString ( buf , strtab + name ) ;"	60:2:1434:1481	3645154	4	True				
ANR	3645243	IdentifierDecl	"* symName = readString ( buf , strtab + name )"		3645154	0					
ANR	3645244	IdentifierDeclType	char *		3645154	0					
ANR	3645245	Identifier	symName		3645154	1					
ANR	3645246	AssignmentExpression	"* symName = readString ( buf , strtab + name )"		3645154	2		=			
ANR	3645247	Identifier	symName		3645154	0					
ANR	3645248	CallExpression	"readString ( buf , strtab + name )"		3645154	1					
ANR	3645249	Callee	readString		3645154	0					
ANR	3645250	Identifier	readString		3645154	0					
ANR	3645251	ArgumentList	buf		3645154	1					
ANR	3645252	Argument	buf		3645154	0					
ANR	3645253	Identifier	buf		3645154	0					
ANR	3645254	Argument	strtab + name		3645154	1					
ANR	3645255	AdditiveExpression	strtab + name		3645154	0		+			
ANR	3645256	Identifier	strtab		3645154	0					
ANR	3645257	Identifier	name		3645154	1					
ANR	3645258	IfStatement	if ( ! symName )		3645154	5					
ANR	3645259	Condition	! symName	61:6:1489:1496	3645154	0	True				
ANR	3645260	UnaryOperationExpression	! symName		3645154	0					
ANR	3645261	UnaryOperator	!		3645154	0					
ANR	3645262	Identifier	symName		3645154	1					
ANR	3645263	CompoundStatement		12:16:358:358	3645154	1					
ANR	3645264	BreakStatement	break ;	62:3:1504:1509	3645154	0	True				
ANR	3645265	ExpressionStatement	sym = R_NEW0 ( RBinSymbol )	64:2:1517:1542	3645154	6	True				
ANR	3645266	AssignmentExpression	sym = R_NEW0 ( RBinSymbol )		3645154	0		=			
ANR	3645267	Identifier	sym		3645154	0					
ANR	3645268	CallExpression	R_NEW0 ( RBinSymbol )		3645154	1					
ANR	3645269	Callee	R_NEW0		3645154	0					
ANR	3645270	Identifier	R_NEW0		3645154	0					
ANR	3645271	ArgumentList	RBinSymbol		3645154	1					
ANR	3645272	Argument	RBinSymbol		3645154	0					
ANR	3645273	Identifier	RBinSymbol		3645154	0					
ANR	3645274	IfStatement	if ( ! sym )		3645154	7					
ANR	3645275	Condition	! sym	65:6:1550:1553	3645154	0	True				
ANR	3645276	UnaryOperationExpression	! sym		3645154	0					
ANR	3645277	UnaryOperator	!		3645154	0					
ANR	3645278	Identifier	sym		3645154	1					
ANR	3645279	CompoundStatement		16:12:415:415	3645154	1					
ANR	3645280	ExpressionStatement	free ( symName )	66:3:1561:1575	3645154	0	True				
ANR	3645281	CallExpression	free ( symName )		3645154	0					
ANR	3645282	Callee	free		3645154	0					
ANR	3645283	Identifier	free		3645154	0					
ANR	3645284	ArgumentList	symName		3645154	1					
ANR	3645285	Argument	symName		3645154	0					
ANR	3645286	Identifier	symName		3645154	0					
ANR	3645287	BreakStatement	break ;	67:3:1580:1585	3645154	1	True				
ANR	3645288	ExpressionStatement	sym -> type = r_str_const ( R_BIN_TYPE_FUNC_STR )	69:2:1593:1638	3645154	8	True				
ANR	3645289	AssignmentExpression	sym -> type = r_str_const ( R_BIN_TYPE_FUNC_STR )		3645154	0		=			
ANR	3645290	PtrMemberAccess	sym -> type		3645154	0					
ANR	3645291	Identifier	sym		3645154	0					
ANR	3645292	Identifier	type		3645154	1					
ANR	3645293	CallExpression	r_str_const ( R_BIN_TYPE_FUNC_STR )		3645154	1					
ANR	3645294	Callee	r_str_const		3645154	0					
ANR	3645295	Identifier	r_str_const		3645154	0					
ANR	3645296	ArgumentList	R_BIN_TYPE_FUNC_STR		3645154	1					
ANR	3645297	Argument	R_BIN_TYPE_FUNC_STR		3645154	0					
ANR	3645298	Identifier	R_BIN_TYPE_FUNC_STR		3645154	0					
ANR	3645299	ExpressionStatement	"sym -> bind = r_str_const ( ""NONE"" )"	70:2:1642:1674	3645154	9	True				
ANR	3645300	AssignmentExpression	"sym -> bind = r_str_const ( ""NONE"" )"		3645154	0		=			
ANR	3645301	PtrMemberAccess	sym -> bind		3645154	0					
ANR	3645302	Identifier	sym		3645154	0					
ANR	3645303	Identifier	bind		3645154	1					
ANR	3645304	CallExpression	"r_str_const ( ""NONE"" )"		3645154	1					
ANR	3645305	Callee	r_str_const		3645154	0					
ANR	3645306	Identifier	r_str_const		3645154	0					
ANR	3645307	ArgumentList	"""NONE"""		3645154	1					
ANR	3645308	Argument	"""NONE"""		3645154	0					
ANR	3645309	PrimaryExpression	"""NONE"""		3645154	0					
ANR	3645310	ExpressionStatement	sym -> size = size	71:2:1678:1694	3645154	10	True				
ANR	3645311	AssignmentExpression	sym -> size = size		3645154	0		=			
ANR	3645312	PtrMemberAccess	sym -> size		3645154	0					
ANR	3645313	Identifier	sym		3645154	0					
ANR	3645314	Identifier	size		3645154	1					
ANR	3645315	Identifier	size		3645154	1					
ANR	3645316	IfStatement	if ( addr == 0 )		3645154	11					
ANR	3645317	Condition	addr == 0	73:6:1703:1711	3645154	0	True				
ANR	3645318	EqualityExpression	addr == 0		3645154	0		==			
ANR	3645319	Identifier	addr		3645154	0					
ANR	3645320	PrimaryExpression	0		3645154	1					
ANR	3645321	CompoundStatement		26:3:592:644	3645154	1					
ANR	3645322	ExpressionStatement	import ++	74:3:1719:1728	3645154	0	True				
ANR	3645323	PostIncDecOperationExpression	import ++		3645154	0					
ANR	3645324	Identifier	import		3645154	0					
ANR	3645325	IncDec	++		3645154	1					
ANR	3645326	IdentifierDeclStatement	"ut64 pltSym = readLE64 ( buf , relplt + ( import * 24 ) ) ;"	75:3:1733:1785	3645154	1	True				
ANR	3645327	IdentifierDecl	"pltSym = readLE64 ( buf , relplt + ( import * 24 ) )"		3645154	0					
ANR	3645328	IdentifierDeclType	ut64		3645154	0					
ANR	3645329	Identifier	pltSym		3645154	1					
ANR	3645330	AssignmentExpression	"pltSym = readLE64 ( buf , relplt + ( import * 24 ) )"		3645154	2		=			
ANR	3645331	Identifier	pltSym		3645154	0					
ANR	3645332	CallExpression	"readLE64 ( buf , relplt + ( import * 24 ) )"		3645154	1					
ANR	3645333	Callee	readLE64		3645154	0					
ANR	3645334	Identifier	readLE64		3645154	0					
ANR	3645335	ArgumentList	buf		3645154	1					
ANR	3645336	Argument	buf		3645154	0					
ANR	3645337	Identifier	buf		3645154	0					
ANR	3645338	Argument	relplt + ( import * 24 )		3645154	1					
ANR	3645339	AdditiveExpression	relplt + ( import * 24 )		3645154	0		+			
ANR	3645340	Identifier	relplt		3645154	0					
ANR	3645341	MultiplicativeExpression	import * 24		3645154	1		*			
ANR	3645342	Identifier	import		3645154	0					
ANR	3645343	PrimaryExpression	24		3645154	1					
ANR	3645344	ExpressionStatement	imp = R_NEW0 ( RBinImport )	76:3:1790:1815	3645154	2	True				
ANR	3645345	AssignmentExpression	imp = R_NEW0 ( RBinImport )		3645154	0		=			
ANR	3645346	Identifier	imp		3645154	0					
ANR	3645347	CallExpression	R_NEW0 ( RBinImport )		3645154	1					
ANR	3645348	Callee	R_NEW0		3645154	0					
ANR	3645349	Identifier	R_NEW0		3645154	0					
ANR	3645350	ArgumentList	RBinImport		3645154	1					
ANR	3645351	Argument	RBinImport		3645154	0					
ANR	3645352	Identifier	RBinImport		3645154	0					
ANR	3645353	IfStatement	if ( ! imp )		3645154	3					
ANR	3645354	Condition	! imp	77:7:1824:1827	3645154	0	True				
ANR	3645355	UnaryOperationExpression	! imp		3645154	0					
ANR	3645356	UnaryOperator	!		3645154	0					
ANR	3645357	Identifier	imp		3645154	1					
ANR	3645358	CompoundStatement		28:13:689:689	3645154	1					
ANR	3645359	ExpressionStatement	R_FREE ( sym )	78:4:1836:1848	3645154	0	True				
ANR	3645360	CallExpression	R_FREE ( sym )		3645154	0					
ANR	3645361	Callee	R_FREE		3645154	0					
ANR	3645362	Identifier	R_FREE		3645154	0					
ANR	3645363	ArgumentList	sym		3645154	1					
ANR	3645364	Argument	sym		3645154	0					
ANR	3645365	Identifier	sym		3645154	0					
ANR	3645366	ExpressionStatement	free ( symName )	79:4:1854:1868	3645154	1	True				
ANR	3645367	CallExpression	free ( symName )		3645154	0					
ANR	3645368	Callee	free		3645154	0					
ANR	3645369	Identifier	free		3645154	0					
ANR	3645370	ArgumentList	symName		3645154	1					
ANR	3645371	Argument	symName		3645154	0					
ANR	3645372	Identifier	symName		3645154	0					
ANR	3645373	BreakStatement	break ;	80:4:1874:1879	3645154	2	True				
ANR	3645374	ExpressionStatement	imp -> name = symName	82:3:1889:1909	3645154	4	True				
ANR	3645375	AssignmentExpression	imp -> name = symName		3645154	0		=			
ANR	3645376	PtrMemberAccess	imp -> name		3645154	0					
ANR	3645377	Identifier	imp		3645154	0					
ANR	3645378	Identifier	name		3645154	1					
ANR	3645379	Identifier	symName		3645154	1					
ANR	3645380	IfStatement	if ( ! imp -> name )		3645154	5					
ANR	3645381	Condition	! imp -> name	83:7:1918:1927	3645154	0	True				
ANR	3645382	UnaryOperationExpression	! imp -> name		3645154	0					
ANR	3645383	UnaryOperator	!		3645154	0					
ANR	3645384	PtrMemberAccess	imp -> name		3645154	1					
ANR	3645385	Identifier	imp		3645154	0					
ANR	3645386	Identifier	name		3645154	1					
ANR	3645387	CompoundStatement		34:19:789:789	3645154	1					
ANR	3645388	GotoStatement	goto out_walk_symbol ;	84:4:1936:1956	3645154	0	True				
ANR	3645389	Identifier	out_walk_symbol		3645154	0					
ANR	3645390	ExpressionStatement	"imp -> type = r_str_const ( ""FUNC"" )"	86:3:1966:1998	3645154	6	True				
ANR	3645391	AssignmentExpression	"imp -> type = r_str_const ( ""FUNC"" )"		3645154	0		=			
ANR	3645392	PtrMemberAccess	imp -> type		3645154	0					
ANR	3645393	Identifier	imp		3645154	0					
ANR	3645394	Identifier	type		3645154	1					
ANR	3645395	CallExpression	"r_str_const ( ""FUNC"" )"		3645154	1					
ANR	3645396	Callee	r_str_const		3645154	0					
ANR	3645397	Identifier	r_str_const		3645154	0					
ANR	3645398	ArgumentList	"""FUNC"""		3645154	1					
ANR	3645399	Argument	"""FUNC"""		3645154	0					
ANR	3645400	PrimaryExpression	"""FUNC"""		3645154	0					
ANR	3645401	IfStatement	if ( ! imp -> type )		3645154	7					
ANR	3645402	Condition	! imp -> type	87:7:2007:2016	3645154	0	True				
ANR	3645403	UnaryOperationExpression	! imp -> type		3645154	0					
ANR	3645404	UnaryOperator	!		3645154	0					
ANR	3645405	PtrMemberAccess	imp -> type		3645154	1					
ANR	3645406	Identifier	imp		3645154	0					
ANR	3645407	Identifier	type		3645154	1					
ANR	3645408	CompoundStatement		38:19:878:878	3645154	1					
ANR	3645409	GotoStatement	goto out_walk_symbol ;	88:4:2025:2045	3645154	0	True				
ANR	3645410	Identifier	out_walk_symbol		3645154	0					
ANR	3645411	ExpressionStatement	"imp -> bind = r_str_const ( ""NONE"" )"	90:3:2055:2087	3645154	8	True				
ANR	3645412	AssignmentExpression	"imp -> bind = r_str_const ( ""NONE"" )"		3645154	0		=			
ANR	3645413	PtrMemberAccess	imp -> bind		3645154	0					
ANR	3645414	Identifier	imp		3645154	0					
ANR	3645415	Identifier	bind		3645154	1					
ANR	3645416	CallExpression	"r_str_const ( ""NONE"" )"		3645154	1					
ANR	3645417	Callee	r_str_const		3645154	0					
ANR	3645418	Identifier	r_str_const		3645154	0					
ANR	3645419	ArgumentList	"""NONE"""		3645154	1					
ANR	3645420	Argument	"""NONE"""		3645154	0					
ANR	3645421	PrimaryExpression	"""NONE"""		3645154	0					
ANR	3645422	IfStatement	if ( ! imp -> bind )		3645154	9					
ANR	3645423	Condition	! imp -> bind	91:7:2096:2105	3645154	0	True				
ANR	3645424	UnaryOperationExpression	! imp -> bind		3645154	0					
ANR	3645425	UnaryOperator	!		3645154	0					
ANR	3645426	PtrMemberAccess	imp -> bind		3645154	1					
ANR	3645427	Identifier	imp		3645154	0					
ANR	3645428	Identifier	bind		3645154	1					
ANR	3645429	CompoundStatement		42:19:967:967	3645154	1					
ANR	3645430	GotoStatement	goto out_walk_symbol ;	92:4:2114:2134	3645154	0	True				
ANR	3645431	Identifier	out_walk_symbol		3645154	0					
ANR	3645432	ExpressionStatement	imp -> ordinal = bin -> imports_list -> length	94:3:2144:2184	3645154	10	True				
ANR	3645433	AssignmentExpression	imp -> ordinal = bin -> imports_list -> length		3645154	0		=			
ANR	3645434	PtrMemberAccess	imp -> ordinal		3645154	0					
ANR	3645435	Identifier	imp		3645154	0					
ANR	3645436	Identifier	ordinal		3645154	1					
ANR	3645437	PtrMemberAccess	bin -> imports_list -> length		3645154	1					
ANR	3645438	PtrMemberAccess	bin -> imports_list		3645154	0					
ANR	3645439	Identifier	bin		3645154	0					
ANR	3645440	Identifier	imports_list		3645154	1					
ANR	3645441	Identifier	length		3645154	1					
ANR	3645442	ExpressionStatement	"r_list_append ( bin -> imports_list , imp )"	95:3:2189:2227	3645154	11	True				
ANR	3645443	CallExpression	"r_list_append ( bin -> imports_list , imp )"		3645154	0					
ANR	3645444	Callee	r_list_append		3645154	0					
ANR	3645445	Identifier	r_list_append		3645154	0					
ANR	3645446	ArgumentList	bin -> imports_list		3645154	1					
ANR	3645447	Argument	bin -> imports_list		3645154	0					
ANR	3645448	PtrMemberAccess	bin -> imports_list		3645154	0					
ANR	3645449	Identifier	bin		3645154	0					
ANR	3645450	Identifier	imports_list		3645154	1					
ANR	3645451	Argument	imp		3645154	1					
ANR	3645452	Identifier	imp		3645154	0					
ANR	3645453	ExpressionStatement	"sym -> name = r_str_newf ( ""imp.%s"" , symName )"	96:3:2232:2274	3645154	12	True				
ANR	3645454	AssignmentExpression	"sym -> name = r_str_newf ( ""imp.%s"" , symName )"		3645154	0		=			
ANR	3645455	PtrMemberAccess	sym -> name		3645154	0					
ANR	3645456	Identifier	sym		3645154	0					
ANR	3645457	Identifier	name		3645154	1					
ANR	3645458	CallExpression	"r_str_newf ( ""imp.%s"" , symName )"		3645154	1					
ANR	3645459	Callee	r_str_newf		3645154	0					
ANR	3645460	Identifier	r_str_newf		3645154	0					
ANR	3645461	ArgumentList	"""imp.%s"""		3645154	1					
ANR	3645462	Argument	"""imp.%s"""		3645154	0					
ANR	3645463	PrimaryExpression	"""imp.%s"""		3645154	0					
ANR	3645464	Argument	symName		3645154	1					
ANR	3645465	Identifier	symName		3645154	0					
ANR	3645466	IfStatement	if ( ! sym -> name )		3645154	13					
ANR	3645467	Condition	! sym -> name	97:7:2283:2292	3645154	0	True				
ANR	3645468	UnaryOperationExpression	! sym -> name		3645154	0					
ANR	3645469	UnaryOperator	!		3645154	0					
ANR	3645470	PtrMemberAccess	sym -> name		3645154	1					
ANR	3645471	Identifier	sym		3645154	0					
ANR	3645472	Identifier	name		3645154	1					
ANR	3645473	CompoundStatement		48:19:1154:1154	3645154	1					
ANR	3645474	GotoStatement	goto out_walk_symbol ;	98:4:2301:2321	3645154	0	True				
ANR	3645475	Identifier	out_walk_symbol		3645154	0					
ANR	3645476	ExpressionStatement	sym -> paddr = pltSym - 8	100:3:2331:2354	3645154	14	True				
ANR	3645477	AssignmentExpression	sym -> paddr = pltSym - 8		3645154	0		=			
ANR	3645478	PtrMemberAccess	sym -> paddr		3645154	0					
ANR	3645479	Identifier	sym		3645154	0					
ANR	3645480	Identifier	paddr		3645154	1					
ANR	3645481	AdditiveExpression	pltSym - 8		3645154	1		-			
ANR	3645482	Identifier	pltSym		3645154	0					
ANR	3645483	PrimaryExpression	8		3645154	1					
ANR	3645484	ExpressionStatement	sym -> vaddr = sym -> paddr + baddr	101:3:2359:2390	3645154	15	True				
ANR	3645485	AssignmentExpression	sym -> vaddr = sym -> paddr + baddr		3645154	0		=			
ANR	3645486	PtrMemberAccess	sym -> vaddr		3645154	0					
ANR	3645487	Identifier	sym		3645154	0					
ANR	3645488	Identifier	vaddr		3645154	1					
ANR	3645489	AdditiveExpression	sym -> paddr + baddr		3645154	1		+			
ANR	3645490	PtrMemberAccess	sym -> paddr		3645154	0					
ANR	3645491	Identifier	sym		3645154	0					
ANR	3645492	Identifier	paddr		3645154	1					
ANR	3645493	Identifier	baddr		3645154	1					
ANR	3645494	Statement	eprintf	102:3:2395:2401	3645154	16	True				
ANR	3645495	Statement	(	102:11:2403:2403	3645154	17	True				
ANR	3645496	Statement	"""f sym.imp.%s = 0x%"""	102:12:2404:2423	3645154	18	True				
ANR	3645497	Statement	PFMT64x	102:32:2424:2430	3645154	19	True				
ANR	3645498	Statement	"""\\n"""	102:39:2431:2434	3645154	20	True				
ANR	3645499	Statement	","	102:43:2435:2435	3645154	21	True				
ANR	3645500	Statement	symName	102:45:2437:2443	3645154	22	True				
ANR	3645501	Statement	","	102:52:2444:2444	3645154	23	True				
ANR	3645502	Statement	pltSym	102:54:2446:2451	3645154	24	True				
ANR	3645503	Statement	-	102:61:2453:2453	3645154	25	True				
ANR	3645504	Statement	8	102:63:2455:2455	3645154	26	True				
ANR	3645505	Statement	)	102:64:2456:2456	3645154	27	True				
ANR	3645506	ExpressionStatement		102:65:2457:2457	3645154	28	True				
ANR	3645507	ElseStatement	else		3645154	0					
ANR	3645508	CompoundStatement		54:9:1327:1327	3645154	0					
ANR	3645509	ExpressionStatement	sym -> name = symName	104:3:2473:2492	3645154	0	True				
ANR	3645510	AssignmentExpression	sym -> name = symName		3645154	0		=			
ANR	3645511	PtrMemberAccess	sym -> name		3645154	0					
ANR	3645512	Identifier	sym		3645154	0					
ANR	3645513	Identifier	name		3645154	1					
ANR	3645514	Identifier	symName		3645154	1					
ANR	3645515	IfStatement	if ( ! sym -> name )		3645154	1					
ANR	3645516	Condition	! sym -> name	105:7:2501:2510	3645154	0	True				
ANR	3645517	UnaryOperationExpression	! sym -> name		3645154	0					
ANR	3645518	UnaryOperator	!		3645154	0					
ANR	3645519	PtrMemberAccess	sym -> name		3645154	1					
ANR	3645520	Identifier	sym		3645154	0					
ANR	3645521	Identifier	name		3645154	1					
ANR	3645522	CompoundStatement		56:19:1372:1372	3645154	1					
ANR	3645523	ExpressionStatement	R_FREE ( sym )	106:4:2519:2531	3645154	0	True				
ANR	3645524	CallExpression	R_FREE ( sym )		3645154	0					
ANR	3645525	Callee	R_FREE		3645154	0					
ANR	3645526	Identifier	R_FREE		3645154	0					
ANR	3645527	ArgumentList	sym		3645154	1					
ANR	3645528	Argument	sym		3645154	0					
ANR	3645529	Identifier	sym		3645154	0					
ANR	3645530	BreakStatement	break ;	107:4:2537:2542	3645154	1	True				
ANR	3645531	ExpressionStatement	sym -> paddr = addr	109:3:2552:2569	3645154	2	True				
ANR	3645532	AssignmentExpression	sym -> paddr = addr		3645154	0		=			
ANR	3645533	PtrMemberAccess	sym -> paddr		3645154	0					
ANR	3645534	Identifier	sym		3645154	0					
ANR	3645535	Identifier	paddr		3645154	1					
ANR	3645536	Identifier	addr		3645154	1					
ANR	3645537	ExpressionStatement	sym -> vaddr = sym -> paddr + baddr	110:3:2574:2605	3645154	3	True				
ANR	3645538	AssignmentExpression	sym -> vaddr = sym -> paddr + baddr		3645154	0		=			
ANR	3645539	PtrMemberAccess	sym -> vaddr		3645154	0					
ANR	3645540	Identifier	sym		3645154	0					
ANR	3645541	Identifier	vaddr		3645154	1					
ANR	3645542	AdditiveExpression	sym -> paddr + baddr		3645154	1		+			
ANR	3645543	PtrMemberAccess	sym -> paddr		3645154	0					
ANR	3645544	Identifier	sym		3645154	0					
ANR	3645545	Identifier	paddr		3645154	1					
ANR	3645546	Identifier	baddr		3645154	1					
ANR	3645547	Statement	eprintf	111:3:2610:2616	3645154	4	True				
ANR	3645548	Statement	(	111:11:2618:2618	3645154	5	True				
ANR	3645549	Statement	"""f sym.%s %"""	111:12:2619:2630	3645154	6	True				
ANR	3645550	Statement	PFMT64u	111:24:2631:2637	3645154	7	True				
ANR	3645551	Statement	"""0x%"""	111:32:2639:2643	3645154	8	True				
ANR	3645552	Statement	PFMT64x	111:37:2644:2650	3645154	9	True				
ANR	3645553	Statement	"""\\n"""	111:44:2651:2654	3645154	10	True				
ANR	3645554	Statement	","	111:48:2655:2655	3645154	11	True				
ANR	3645555	Statement	symName	111:50:2657:2663	3645154	12	True				
ANR	3645556	Statement	","	111:57:2664:2664	3645154	13	True				
ANR	3645557	Statement	size	111:59:2666:2669	3645154	14	True				
ANR	3645558	Statement	","	111:63:2670:2670	3645154	15	True				
ANR	3645559	Statement	addr	111:65:2672:2675	3645154	16	True				
ANR	3645560	Statement	)	111:69:2676:2676	3645154	17	True				
ANR	3645561	ExpressionStatement		111:70:2677:2677	3645154	18	True				
ANR	3645562	ExpressionStatement	"r_list_append ( bin -> methods_list , sym )"	113:2:2685:2723	3645154	12	True				
ANR	3645563	CallExpression	"r_list_append ( bin -> methods_list , sym )"		3645154	0					
ANR	3645564	Callee	r_list_append		3645154	0					
ANR	3645565	Identifier	r_list_append		3645154	0					
ANR	3645566	ArgumentList	bin -> methods_list		3645154	1					
ANR	3645567	Argument	bin -> methods_list		3645154	0					
ANR	3645568	PtrMemberAccess	bin -> methods_list		3645154	0					
ANR	3645569	Identifier	bin		3645154	0					
ANR	3645570	Identifier	methods_list		3645154	1					
ANR	3645571	Argument	sym		3645154	1					
ANR	3645572	Identifier	sym		3645154	0					
ANR	3645573	ExpressionStatement	i += 8 - 1	114:2:2727:2737	3645154	13	True				
ANR	3645574	AssignmentExpression	i += 8 - 1		3645154	0		+=			
ANR	3645575	Identifier	i		3645154	0					
ANR	3645576	AdditiveExpression	8 - 1		3645154	1		-			
ANR	3645577	PrimaryExpression	8		3645154	0					
ANR	3645578	PrimaryExpression	1		3645154	1					
ANR	3645579	ReturnStatement	return ;	116:4:2746:2752	3645154	4	True				
ANR	3645580	Label	out_walk_symbol :	118:0:2755:2770	3645154	5	True				
ANR	3645581	Identifier	out_walk_symbol		3645154	0					
ANR	3645582	ExpressionStatement	R_FREE ( sym )	119:1:2773:2785	3645154	6	True				
ANR	3645583	CallExpression	R_FREE ( sym )		3645154	0					
ANR	3645584	Callee	R_FREE		3645154	0					
ANR	3645585	Identifier	R_FREE		3645154	0					
ANR	3645586	ArgumentList	sym		3645154	1					
ANR	3645587	Argument	sym		3645154	0					
ANR	3645588	Identifier	sym		3645154	0					
ANR	3645589	ExpressionStatement	R_FREE ( imp )	120:1:2788:2800	3645154	7	True				
ANR	3645590	CallExpression	R_FREE ( imp )		3645154	0					
ANR	3645591	Callee	R_FREE		3645154	0					
ANR	3645592	Identifier	R_FREE		3645154	0					
ANR	3645593	ArgumentList	imp		3645154	1					
ANR	3645594	Argument	imp		3645154	0					
ANR	3645595	Identifier	imp		3645154	0					
ANR	3645596	ReturnStatement	return ;	121:1:2803:2809	3645154	8	True				
ANR	3645597	ReturnType	static void		3645154	1					
ANR	3645598	Identifier	walkSymbols		3645154	2					
ANR	3645599	ParameterList	"RBuffer * buf , RBinNXOObj * bin , ut64 symtab , ut64 strtab , ut64 strtab_size , ut64 relplt , ut64 baddr"		3645154	3					
ANR	3645600	Parameter	RBuffer * buf	50:25:1040:1051	3645154	0	True				
ANR	3645601	ParameterType	RBuffer *		3645154	0					
ANR	3645602	Identifier	buf		3645154	1					
ANR	3645603	Parameter	RBinNXOObj * bin	50:39:1054:1068	3645154	1	True				
ANR	3645604	ParameterType	RBinNXOObj *		3645154	0					
ANR	3645605	Identifier	bin		3645154	1					
ANR	3645606	Parameter	ut64 symtab	50:56:1071:1081	3645154	2	True				
ANR	3645607	ParameterType	ut64		3645154	0					
ANR	3645608	Identifier	symtab		3645154	1					
ANR	3645609	Parameter	ut64 strtab	50:69:1084:1094	3645154	3	True				
ANR	3645610	ParameterType	ut64		3645154	0					
ANR	3645611	Identifier	strtab		3645154	1					
ANR	3645612	Parameter	ut64 strtab_size	50:82:1097:1112	3645154	4	True				
ANR	3645613	ParameterType	ut64		3645154	0					
ANR	3645614	Identifier	strtab_size		3645154	1					
ANR	3645615	Parameter	ut64 relplt	50:100:1115:1125	3645154	5	True				
ANR	3645616	ParameterType	ut64		3645154	0					
ANR	3645617	Identifier	relplt		3645154	1					
ANR	3645618	Parameter	ut64 baddr	50:113:1128:1137	3645154	6	True				
ANR	3645619	ParameterType	ut64		3645154	0					
ANR	3645620	Identifier	baddr		3645154	1					
ANR	3645621	CFGEntryNode	ENTRY		3645154		True				
ANR	3645622	CFGExitNode	EXIT		3645154		True				
ANR	3645623	Symbol	baddr		3645154						
ANR	3645624	Symbol	sym -> bind		3645154						
ANR	3645625	Symbol	import		3645154						
ANR	3645626	Symbol	bin		3645154						
ANR	3645627	Symbol	sym		3645154						
ANR	3645628	Symbol	* imp		3645154						
ANR	3645629	Symbol	sym -> type		3645154						
ANR	3645630	Symbol	readLE64		3645154						
ANR	3645631	Symbol	r_str_newf		3645154						
ANR	3645632	Symbol	imp		3645154						
ANR	3645633	Symbol	sym -> size		3645154						
ANR	3645634	Symbol	* bin		3645154						
ANR	3645635	Symbol	strtab		3645154						
ANR	3645636	Symbol	imp -> type		3645154						
ANR	3645637	Symbol	R_BIN_TYPE_FUNC_STR		3645154						
ANR	3645638	Symbol	imp -> ordinal		3645154						
ANR	3645639	Symbol	* * bin		3645154						
ANR	3645640	Symbol	addr		3645154						
ANR	3645641	Symbol	* bin -> imports_list		3645154						
ANR	3645642	Symbol	r_str_const		3645154						
ANR	3645643	Symbol	RBinImport		3645154						
ANR	3645644	Symbol	bin -> methods_list		3645154						
ANR	3645645	Symbol	bin -> imports_list -> length		3645154						
ANR	3645646	Symbol	imp -> name		3645154						
ANR	3645647	Symbol	imp -> bind		3645154						
ANR	3645648	Symbol	sym -> vaddr		3645154						
ANR	3645649	Symbol	readLE32		3645154						
ANR	3645650	Symbol	readString		3645154						
ANR	3645651	Symbol	sym -> paddr		3645154						
ANR	3645652	Symbol	i		3645154						
ANR	3645653	Symbol	pltSym		3645154						
ANR	3645654	Symbol	strtab_size		3645154						
ANR	3645655	Symbol	R_NEW0		3645154						
ANR	3645656	Symbol	* sym		3645154						
ANR	3645657	Symbol	buf		3645154						
ANR	3645658	Symbol	size		3645154						
ANR	3645659	Symbol	relplt		3645154						
ANR	3645660	Symbol	symtab		3645154						
ANR	3645661	Symbol	sym -> name		3645154						
ANR	3645662	Symbol	name		3645154						
ANR	3645663	Symbol	symName		3645154						
ANR	3645664	Symbol	bin -> imports_list		3645154						
ANR	3645665	Symbol	RBinSymbol		3645154						
ANR	3645666	Function	parseMod	124:0:2814:4772							
ANR	3645667	FunctionDef	"parseMod (RBuffer * buf , RBinNXOObj * bin , ut32 mod0 , ut64 baddr)"		3645666	0					
ANR	3645668	CompoundStatement		124:68:2882:4772	3645666	0					
ANR	3645669	IdentifierDeclStatement	"ut32 ptr = readLE32 ( buf , mod0 ) ;"	125:1:2885:2916	3645666	0	True				
ANR	3645670	IdentifierDecl	"ptr = readLE32 ( buf , mod0 )"		3645666	0					
ANR	3645671	IdentifierDeclType	ut32		3645666	0					
ANR	3645672	Identifier	ptr		3645666	1					
ANR	3645673	AssignmentExpression	"ptr = readLE32 ( buf , mod0 )"		3645666	2		=			
ANR	3645674	Identifier	ptr		3645666	0					
ANR	3645675	CallExpression	"readLE32 ( buf , mod0 )"		3645666	1					
ANR	3645676	Callee	readLE32		3645666	0					
ANR	3645677	Identifier	readLE32		3645666	0					
ANR	3645678	ArgumentList	buf		3645666	1					
ANR	3645679	Argument	buf		3645666	0					
ANR	3645680	Identifier	buf		3645666	0					
ANR	3645681	Argument	mod0		3645666	1					
ANR	3645682	Identifier	mod0		3645666	0					
ANR	3645683	ExpressionStatement	"eprintf ( ""magic %x at 0x%x\\n"" , ptr , mod0 )"	126:1:2919:2960	3645666	1	True				
ANR	3645684	CallExpression	"eprintf ( ""magic %x at 0x%x\\n"" , ptr , mod0 )"		3645666	0					
ANR	3645685	Callee	eprintf		3645666	0					
ANR	3645686	Identifier	eprintf		3645666	0					
ANR	3645687	ArgumentList	"""magic %x at 0x%x\\n"""		3645666	1					
ANR	3645688	Argument	"""magic %x at 0x%x\\n"""		3645666	0					
ANR	3645689	PrimaryExpression	"""magic %x at 0x%x\\n"""		3645666	0					
ANR	3645690	Argument	ptr		3645666	1					
ANR	3645691	Identifier	ptr		3645666	0					
ANR	3645692	Argument	mod0		3645666	2					
ANR	3645693	Identifier	mod0		3645666	0					
ANR	3645694	IfStatement	if ( ptr == 0x30444f4d )		3645666	2					
ANR	3645695	Condition	ptr == 0x30444f4d	127:5:2967:2983	3645666	0	True				
ANR	3645696	EqualityExpression	ptr == 0x30444f4d		3645666	0		==			
ANR	3645697	Identifier	ptr		3645666	0					
ANR	3645698	PrimaryExpression	0x30444f4d		3645666	1					
ANR	3645699	CompoundStatement		51:2:1765:1798	3645666	1					
ANR	3645700	ExpressionStatement	"eprintf ( ""is mode0\\n"" )"	128:2:2998:3020	3645666	0	True				
ANR	3645701	CallExpression	"eprintf ( ""is mode0\\n"" )"		3645666	0					
ANR	3645702	Callee	eprintf		3645666	0					
ANR	3645703	Identifier	eprintf		3645666	0					
ANR	3645704	ArgumentList	"""is mode0\\n"""		3645666	1					
ANR	3645705	Argument	"""is mode0\\n"""		3645666	0					
ANR	3645706	PrimaryExpression	"""is mode0\\n"""		3645666	0					
ANR	3645707	Statement	MODHeader	129:2:3024:3032	3645666	1	True				
ANR	3645708	Statement	mh	129:12:3034:3035	3645666	2	True				
ANR	3645709	Statement	=	129:15:3037:3037	3645666	3	True				
ANR	3645710	CompoundStatement		6:17:156:156	3645666	4					
ANR	3645711	Statement	.	130:3:3044:3044	3645666	0	True				
ANR	3645712	Statement	magic	130:4:3045:3049	3645666	1	True				
ANR	3645713	Statement	=	130:10:3051:3051	3645666	2	True				
ANR	3645714	Statement	readLE32	130:12:3053:3060	3645666	3	True				
ANR	3645715	Statement	(	130:21:3062:3062	3645666	4	True				
ANR	3645716	Statement	buf	130:22:3063:3065	3645666	5	True				
ANR	3645717	Statement	","	130:25:3066:3066	3645666	6	True				
ANR	3645718	Statement	mod0	130:27:3068:3071	3645666	7	True				
ANR	3645719	Statement	)	130:31:3072:3072	3645666	8	True				
ANR	3645720	Statement	","	130:32:3073:3073	3645666	9	True				
ANR	3645721	Statement	.	131:3:3078:3078	3645666	10	True				
ANR	3645722	Statement	dynamic	131:4:3079:3085	3645666	11	True				
ANR	3645723	Statement	=	131:12:3087:3087	3645666	12	True				
ANR	3645724	Statement	readLE32	131:14:3089:3096	3645666	13	True				
ANR	3645725	Statement	(	131:23:3098:3098	3645666	14	True				
ANR	3645726	Statement	buf	131:24:3099:3101	3645666	15	True				
ANR	3645727	Statement	","	131:27:3102:3102	3645666	16	True				
ANR	3645728	Statement	mod0	131:29:3104:3107	3645666	17	True				
ANR	3645729	Statement	+	131:34:3109:3109	3645666	18	True				
ANR	3645730	Statement	4	131:36:3111:3111	3645666	19	True				
ANR	3645731	Statement	)	131:37:3112:3112	3645666	20	True				
ANR	3645732	Statement	","	131:38:3113:3113	3645666	21	True				
ANR	3645733	Statement	.	132:3:3118:3118	3645666	22	True				
ANR	3645734	Statement	bss_start	132:4:3119:3127	3645666	23	True				
ANR	3645735	Statement	=	132:14:3129:3129	3645666	24	True				
ANR	3645736	Statement	readLE32	132:16:3131:3138	3645666	25	True				
ANR	3645737	Statement	(	132:25:3140:3140	3645666	26	True				
ANR	3645738	Statement	buf	132:26:3141:3143	3645666	27	True				
ANR	3645739	Statement	","	132:29:3144:3144	3645666	28	True				
ANR	3645740	Statement	mod0	132:31:3146:3149	3645666	29	True				
ANR	3645741	Statement	+	132:36:3151:3151	3645666	30	True				
ANR	3645742	Statement	8	132:38:3153:3153	3645666	31	True				
ANR	3645743	Statement	)	132:39:3154:3154	3645666	32	True				
ANR	3645744	Statement	","	132:40:3155:3155	3645666	33	True				
ANR	3645745	Statement	.	133:3:3160:3160	3645666	34	True				
ANR	3645746	Statement	bss_end	133:4:3161:3167	3645666	35	True				
ANR	3645747	Statement	=	133:12:3169:3169	3645666	36	True				
ANR	3645748	Statement	readLE32	133:14:3171:3178	3645666	37	True				
ANR	3645749	Statement	(	133:23:3180:3180	3645666	38	True				
ANR	3645750	Statement	buf	133:24:3181:3183	3645666	39	True				
ANR	3645751	Statement	","	133:27:3184:3184	3645666	40	True				
ANR	3645752	Statement	mod0	133:29:3186:3189	3645666	41	True				
ANR	3645753	Statement	+	133:34:3191:3191	3645666	42	True				
ANR	3645754	Statement	12	133:36:3193:3194	3645666	43	True				
ANR	3645755	Statement	)	133:38:3195:3195	3645666	44	True				
ANR	3645756	Statement	","	133:39:3196:3196	3645666	45	True				
ANR	3645757	Statement	.	134:3:3201:3201	3645666	46	True				
ANR	3645758	Statement	unwind_start	134:4:3202:3213	3645666	47	True				
ANR	3645759	Statement	=	134:17:3215:3215	3645666	48	True				
ANR	3645760	Statement	readLE32	134:19:3217:3224	3645666	49	True				
ANR	3645761	Statement	(	134:28:3226:3226	3645666	50	True				
ANR	3645762	Statement	buf	134:29:3227:3229	3645666	51	True				
ANR	3645763	Statement	","	134:32:3230:3230	3645666	52	True				
ANR	3645764	Statement	mod0	134:34:3232:3235	3645666	53	True				
ANR	3645765	Statement	+	134:39:3237:3237	3645666	54	True				
ANR	3645766	Statement	16	134:41:3239:3240	3645666	55	True				
ANR	3645767	Statement	)	134:43:3241:3241	3645666	56	True				
ANR	3645768	Statement	","	134:44:3242:3242	3645666	57	True				
ANR	3645769	Statement	.	135:3:3247:3247	3645666	58	True				
ANR	3645770	Statement	unwind_end	135:4:3248:3257	3645666	59	True				
ANR	3645771	Statement	=	135:15:3259:3259	3645666	60	True				
ANR	3645772	Statement	readLE32	135:17:3261:3268	3645666	61	True				
ANR	3645773	Statement	(	135:26:3270:3270	3645666	62	True				
ANR	3645774	Statement	buf	135:27:3271:3273	3645666	63	True				
ANR	3645775	Statement	","	135:30:3274:3274	3645666	64	True				
ANR	3645776	Statement	mod0	135:32:3276:3279	3645666	65	True				
ANR	3645777	Statement	+	135:37:3281:3281	3645666	66	True				
ANR	3645778	Statement	20	135:39:3283:3284	3645666	67	True				
ANR	3645779	Statement	)	135:41:3285:3285	3645666	68	True				
ANR	3645780	Statement	","	135:42:3286:3286	3645666	69	True				
ANR	3645781	Statement	.	136:3:3291:3291	3645666	70	True				
ANR	3645782	Statement	mod_object	136:4:3292:3301	3645666	71	True				
ANR	3645783	Statement	=	136:15:3303:3303	3645666	72	True				
ANR	3645784	Statement	readLE32	136:17:3305:3312	3645666	73	True				
ANR	3645785	Statement	(	136:26:3314:3314	3645666	74	True				
ANR	3645786	Statement	buf	136:27:3315:3317	3645666	75	True				
ANR	3645787	Statement	","	136:30:3318:3318	3645666	76	True				
ANR	3645788	Statement	mod0	136:32:3320:3323	3645666	77	True				
ANR	3645789	Statement	+	136:37:3325:3325	3645666	78	True				
ANR	3645790	Statement	24	136:39:3327:3328	3645666	79	True				
ANR	3645791	Statement	)	136:41:3329:3329	3645666	80	True				
ANR	3645792	Statement	","	136:42:3330:3330	3645666	81	True				
ANR	3645793	ExpressionStatement		137:3:3335:3335	3645666	5	True				
ANR	3645794	ExpressionStatement	mh . mod_object += mod0	138:2:3339:3360	3645666	6	True				
ANR	3645795	AssignmentExpression	mh . mod_object += mod0		3645666	0		+=			
ANR	3645796	MemberAccess	mh . mod_object		3645666	0					
ANR	3645797	Identifier	mh		3645666	0					
ANR	3645798	Identifier	mod_object		3645666	1					
ANR	3645799	Identifier	mod0		3645666	1					
ANR	3645800	ExpressionStatement	"eprintf ( ""magic 0x%x\\n"" , mh . magic )"	139:2:3364:3398	3645666	7	True				
ANR	3645801	CallExpression	"eprintf ( ""magic 0x%x\\n"" , mh . magic )"		3645666	0					
ANR	3645802	Callee	eprintf		3645666	0					
ANR	3645803	Identifier	eprintf		3645666	0					
ANR	3645804	ArgumentList	"""magic 0x%x\\n"""		3645666	1					
ANR	3645805	Argument	"""magic 0x%x\\n"""		3645666	0					
ANR	3645806	PrimaryExpression	"""magic 0x%x\\n"""		3645666	0					
ANR	3645807	Argument	mh . magic		3645666	1					
ANR	3645808	MemberAccess	mh . magic		3645666	0					
ANR	3645809	Identifier	mh		3645666	0					
ANR	3645810	Identifier	magic		3645666	1					
ANR	3645811	ExpressionStatement	"eprintf ( ""dynamic 0x%x\\n"" , mh . dynamic )"	140:2:3402:3440	3645666	8	True				
ANR	3645812	CallExpression	"eprintf ( ""dynamic 0x%x\\n"" , mh . dynamic )"		3645666	0					
ANR	3645813	Callee	eprintf		3645666	0					
ANR	3645814	Identifier	eprintf		3645666	0					
ANR	3645815	ArgumentList	"""dynamic 0x%x\\n"""		3645666	1					
ANR	3645816	Argument	"""dynamic 0x%x\\n"""		3645666	0					
ANR	3645817	PrimaryExpression	"""dynamic 0x%x\\n"""		3645666	0					
ANR	3645818	Argument	mh . dynamic		3645666	1					
ANR	3645819	MemberAccess	mh . dynamic		3645666	0					
ANR	3645820	Identifier	mh		3645666	0					
ANR	3645821	Identifier	dynamic		3645666	1					
ANR	3645822	ExpressionStatement	"eprintf ( ""bss 0x%x 0x%x\\n"" , mh . bss_start , mh . bss_end )"	141:2:3444:3497	3645666	9	True				
ANR	3645823	CallExpression	"eprintf ( ""bss 0x%x 0x%x\\n"" , mh . bss_start , mh . bss_end )"		3645666	0					
ANR	3645824	Callee	eprintf		3645666	0					
ANR	3645825	Identifier	eprintf		3645666	0					
ANR	3645826	ArgumentList	"""bss 0x%x 0x%x\\n"""		3645666	1					
ANR	3645827	Argument	"""bss 0x%x 0x%x\\n"""		3645666	0					
ANR	3645828	PrimaryExpression	"""bss 0x%x 0x%x\\n"""		3645666	0					
ANR	3645829	Argument	mh . bss_start		3645666	1					
ANR	3645830	MemberAccess	mh . bss_start		3645666	0					
ANR	3645831	Identifier	mh		3645666	0					
ANR	3645832	Identifier	bss_start		3645666	1					
ANR	3645833	Argument	mh . bss_end		3645666	2					
ANR	3645834	MemberAccess	mh . bss_end		3645666	0					
ANR	3645835	Identifier	mh		3645666	0					
ANR	3645836	Identifier	bss_end		3645666	1					
ANR	3645837	ExpressionStatement	"eprintf ( ""unwind 0x%x 0x%x\\n"" , mh . unwind_start , mh . unwind_end )"	142:2:3501:3563	3645666	10	True				
ANR	3645838	CallExpression	"eprintf ( ""unwind 0x%x 0x%x\\n"" , mh . unwind_start , mh . unwind_end )"		3645666	0					
ANR	3645839	Callee	eprintf		3645666	0					
ANR	3645840	Identifier	eprintf		3645666	0					
ANR	3645841	ArgumentList	"""unwind 0x%x 0x%x\\n"""		3645666	1					
ANR	3645842	Argument	"""unwind 0x%x 0x%x\\n"""		3645666	0					
ANR	3645843	PrimaryExpression	"""unwind 0x%x 0x%x\\n"""		3645666	0					
ANR	3645844	Argument	mh . unwind_start		3645666	1					
ANR	3645845	MemberAccess	mh . unwind_start		3645666	0					
ANR	3645846	Identifier	mh		3645666	0					
ANR	3645847	Identifier	unwind_start		3645666	1					
ANR	3645848	Argument	mh . unwind_end		3645666	2					
ANR	3645849	MemberAccess	mh . unwind_end		3645666	0					
ANR	3645850	Identifier	mh		3645666	0					
ANR	3645851	Identifier	unwind_end		3645666	1					
ANR	3645852	ExpressionStatement	"eprintf ( ""-------------\\n"" )"	143:2:3567:3594	3645666	11	True				
ANR	3645853	CallExpression	"eprintf ( ""-------------\\n"" )"		3645666	0					
ANR	3645854	Callee	eprintf		3645666	0					
ANR	3645855	Identifier	eprintf		3645666	0					
ANR	3645856	ArgumentList	"""-------------\\n"""		3645666	1					
ANR	3645857	Argument	"""-------------\\n"""		3645666	0					
ANR	3645858	PrimaryExpression	"""-------------\\n"""		3645666	0					
ANR	3645859	ExpressionStatement	"eprintf ( ""mod 0x%x\\n"" , mh . mod_object )"	144:2:3598:3635	3645666	12	True				
ANR	3645860	CallExpression	"eprintf ( ""mod 0x%x\\n"" , mh . mod_object )"		3645666	0					
ANR	3645861	Callee	eprintf		3645666	0					
ANR	3645862	Identifier	eprintf		3645666	0					
ANR	3645863	ArgumentList	"""mod 0x%x\\n"""		3645666	1					
ANR	3645864	Argument	"""mod 0x%x\\n"""		3645666	0					
ANR	3645865	PrimaryExpression	"""mod 0x%x\\n"""		3645666	0					
ANR	3645866	Argument	mh . mod_object		3645666	1					
ANR	3645867	MemberAccess	mh . mod_object		3645666	0					
ANR	3645868	Identifier	mh		3645666	0					
ANR	3645869	Identifier	mod_object		3645666	1					
ANR	3645870	Statement	define	145:1:3638:3643	3645666	13	True				
ANR	3645871	Statement	MO_	145:8:3645:3647	3645666	14	True				
ANR	3645872	Statement	(	145:11:3648:3648	3645666	15	True				
ANR	3645873	Statement	x	145:12:3649:3649	3645666	16	True				
ANR	3645874	Statement	)	145:13:3650:3650	3645666	17	True				
ANR	3645875	Statement	readLE64	145:15:3652:3659	3645666	18	True				
ANR	3645876	Statement	(	145:23:3660:3660	3645666	19	True				
ANR	3645877	Statement	buf	145:24:3661:3663	3645666	20	True				
ANR	3645878	Statement	","	145:27:3664:3664	3645666	21	True				
ANR	3645879	Statement	mh	145:29:3666:3667	3645666	22	True				
ANR	3645880	Statement	.	145:31:3668:3668	3645666	23	True				
ANR	3645881	Statement	mod_object	145:32:3669:3678	3645666	24	True				
ANR	3645882	Statement	+	145:43:3680:3680	3645666	25	True				
ANR	3645883	Statement	r_offsetof	145:45:3682:3691	3645666	26	True				
ANR	3645884	Statement	(	145:55:3692:3692	3645666	27	True				
ANR	3645885	Statement	MODObject	145:56:3693:3701	3645666	28	True				
ANR	3645886	Statement	","	145:65:3702:3702	3645666	29	True				
ANR	3645887	Statement	x	145:67:3704:3704	3645666	30	True				
ANR	3645888	Statement	)	145:68:3705:3705	3645666	31	True				
ANR	3645889	Statement	)	145:69:3706:3706	3645666	32	True				
ANR	3645890	Statement	MODObject	146:2:3710:3718	3645666	33	True				
ANR	3645891	Statement	mo	146:12:3720:3721	3645666	34	True				
ANR	3645892	Statement	=	146:15:3723:3723	3645666	35	True				
ANR	3645893	CompoundStatement		23:17:842:842	3645666	36					
ANR	3645894	Statement	.	147:3:3730:3730	3645666	0	True				
ANR	3645895	Statement	next	147:4:3731:3734	3645666	1	True				
ANR	3645896	Statement	=	147:9:3736:3736	3645666	2	True				
ANR	3645897	Statement	MO_	147:11:3738:3740	3645666	3	True				
ANR	3645898	Statement	(	147:14:3741:3741	3645666	4	True				
ANR	3645899	Statement	next	147:15:3742:3745	3645666	5	True				
ANR	3645900	Statement	)	147:19:3746:3746	3645666	6	True				
ANR	3645901	Statement	","	147:20:3747:3747	3645666	7	True				
ANR	3645902	Statement	.	148:3:3752:3752	3645666	8	True				
ANR	3645903	Statement	prev	148:4:3753:3756	3645666	9	True				
ANR	3645904	Statement	=	148:9:3758:3758	3645666	10	True				
ANR	3645905	Statement	MO_	148:11:3760:3762	3645666	11	True				
ANR	3645906	Statement	(	148:14:3763:3763	3645666	12	True				
ANR	3645907	Statement	prev	148:15:3764:3767	3645666	13	True				
ANR	3645908	Statement	)	148:19:3768:3768	3645666	14	True				
ANR	3645909	Statement	","	148:20:3769:3769	3645666	15	True				
ANR	3645910	Statement	.	149:3:3774:3774	3645666	16	True				
ANR	3645911	Statement	relplt	149:4:3775:3780	3645666	17	True				
ANR	3645912	Statement	=	149:11:3782:3782	3645666	18	True				
ANR	3645913	Statement	MO_	149:13:3784:3786	3645666	19	True				
ANR	3645914	Statement	(	149:16:3787:3787	3645666	20	True				
ANR	3645915	Statement	relplt	149:17:3788:3793	3645666	21	True				
ANR	3645916	Statement	)	149:23:3794:3794	3645666	22	True				
ANR	3645917	Statement	","	149:24:3795:3795	3645666	23	True				
ANR	3645918	Statement	.	150:3:3800:3800	3645666	24	True				
ANR	3645919	Statement	reldyn	150:4:3801:3806	3645666	25	True				
ANR	3645920	Statement	=	150:11:3808:3808	3645666	26	True				
ANR	3645921	Statement	MO_	150:13:3810:3812	3645666	27	True				
ANR	3645922	Statement	(	150:16:3813:3813	3645666	28	True				
ANR	3645923	Statement	reldyn	150:17:3814:3819	3645666	29	True				
ANR	3645924	Statement	)	150:23:3820:3820	3645666	30	True				
ANR	3645925	Statement	","	150:24:3821:3821	3645666	31	True				
ANR	3645926	Statement	.	151:3:3826:3826	3645666	32	True				
ANR	3645927	Statement	base	151:4:3827:3830	3645666	33	True				
ANR	3645928	Statement	=	151:9:3832:3832	3645666	34	True				
ANR	3645929	Statement	MO_	151:11:3834:3836	3645666	35	True				
ANR	3645930	Statement	(	151:14:3837:3837	3645666	36	True				
ANR	3645931	Statement	base	151:15:3838:3841	3645666	37	True				
ANR	3645932	Statement	)	151:19:3842:3842	3645666	38	True				
ANR	3645933	Statement	","	151:20:3843:3843	3645666	39	True				
ANR	3645934	Statement	.	152:3:3848:3848	3645666	40	True				
ANR	3645935	Statement	dynamic	152:4:3849:3855	3645666	41	True				
ANR	3645936	Statement	=	152:12:3857:3857	3645666	42	True				
ANR	3645937	Statement	MO_	152:14:3859:3861	3645666	43	True				
ANR	3645938	Statement	(	152:17:3862:3862	3645666	44	True				
ANR	3645939	Statement	dynamic	152:18:3863:3869	3645666	45	True				
ANR	3645940	Statement	)	152:25:3870:3870	3645666	46	True				
ANR	3645941	Statement	","	152:26:3871:3871	3645666	47	True				
ANR	3645942	Statement	.	153:3:3876:3876	3645666	48	True				
ANR	3645943	Statement	is_rela	153:4:3877:3883	3645666	49	True				
ANR	3645944	Statement	=	153:12:3885:3885	3645666	50	True				
ANR	3645945	Statement	MO_	153:14:3887:3889	3645666	51	True				
ANR	3645946	Statement	(	153:17:3890:3890	3645666	52	True				
ANR	3645947	Statement	is_rela	153:18:3891:3897	3645666	53	True				
ANR	3645948	Statement	)	153:25:3898:3898	3645666	54	True				
ANR	3645949	Statement	","	153:26:3899:3899	3645666	55	True				
ANR	3645950	Statement	.	154:3:3904:3904	3645666	56	True				
ANR	3645951	Statement	relplt_size	154:4:3905:3915	3645666	57	True				
ANR	3645952	Statement	=	154:16:3917:3917	3645666	58	True				
ANR	3645953	Statement	MO_	154:18:3919:3921	3645666	59	True				
ANR	3645954	Statement	(	154:21:3922:3922	3645666	60	True				
ANR	3645955	Statement	relplt_size	154:22:3923:3933	3645666	61	True				
ANR	3645956	Statement	)	154:33:3934:3934	3645666	62	True				
ANR	3645957	Statement	","	154:34:3935:3935	3645666	63	True				
ANR	3645958	Statement	.	155:3:3940:3940	3645666	64	True				
ANR	3645959	Statement	init	155:4:3941:3944	3645666	65	True				
ANR	3645960	Statement	=	155:9:3946:3946	3645666	66	True				
ANR	3645961	Statement	MO_	155:11:3948:3950	3645666	67	True				
ANR	3645962	Statement	(	155:14:3951:3951	3645666	68	True				
ANR	3645963	Statement	init	155:15:3952:3955	3645666	69	True				
ANR	3645964	Statement	)	155:19:3956:3956	3645666	70	True				
ANR	3645965	Statement	","	155:20:3957:3957	3645666	71	True				
ANR	3645966	Statement	.	156:3:3962:3962	3645666	72	True				
ANR	3645967	Statement	fini	156:4:3963:3966	3645666	73	True				
ANR	3645968	Statement	=	156:9:3968:3968	3645666	74	True				
ANR	3645969	Statement	MO_	156:11:3970:3972	3645666	75	True				
ANR	3645970	Statement	(	156:14:3973:3973	3645666	76	True				
ANR	3645971	Statement	fini	156:15:3974:3977	3645666	77	True				
ANR	3645972	Statement	)	156:19:3978:3978	3645666	78	True				
ANR	3645973	Statement	","	156:20:3979:3979	3645666	79	True				
ANR	3645974	Statement	.	157:3:3984:3984	3645666	80	True				
ANR	3645975	Statement	bucket	157:4:3985:3990	3645666	81	True				
ANR	3645976	Statement	=	157:11:3992:3992	3645666	82	True				
ANR	3645977	Statement	MO_	157:13:3994:3996	3645666	83	True				
ANR	3645978	Statement	(	157:16:3997:3997	3645666	84	True				
ANR	3645979	Statement	bucket	157:17:3998:4003	3645666	85	True				
ANR	3645980	Statement	)	157:23:4004:4004	3645666	86	True				
ANR	3645981	Statement	","	157:24:4005:4005	3645666	87	True				
ANR	3645982	Statement	.	158:3:4010:4010	3645666	88	True				
ANR	3645983	Statement	chain	158:4:4011:4015	3645666	89	True				
ANR	3645984	Statement	=	158:10:4017:4017	3645666	90	True				
ANR	3645985	Statement	MO_	158:12:4019:4021	3645666	91	True				
ANR	3645986	Statement	(	158:15:4022:4022	3645666	92	True				
ANR	3645987	Statement	chain	158:16:4023:4027	3645666	93	True				
ANR	3645988	Statement	)	158:21:4028:4028	3645666	94	True				
ANR	3645989	Statement	","	158:22:4029:4029	3645666	95	True				
ANR	3645990	Statement	.	159:3:4034:4034	3645666	96	True				
ANR	3645991	Statement	strtab	159:4:4035:4040	3645666	97	True				
ANR	3645992	Statement	=	159:11:4042:4042	3645666	98	True				
ANR	3645993	Statement	MO_	159:13:4044:4046	3645666	99	True				
ANR	3645994	Statement	(	159:16:4047:4047	3645666	100	True				
ANR	3645995	Statement	strtab	159:17:4048:4053	3645666	101	True				
ANR	3645996	Statement	)	159:23:4054:4054	3645666	102	True				
ANR	3645997	Statement	","	159:24:4055:4055	3645666	103	True				
ANR	3645998	Statement	.	160:3:4060:4060	3645666	104	True				
ANR	3645999	Statement	symtab	160:4:4061:4066	3645666	105	True				
ANR	3646000	Statement	=	160:11:4068:4068	3645666	106	True				
ANR	3646001	Statement	MO_	160:13:4070:4072	3645666	107	True				
ANR	3646002	Statement	(	160:16:4073:4073	3645666	108	True				
ANR	3646003	Statement	symtab	160:17:4074:4079	3645666	109	True				
ANR	3646004	Statement	)	160:23:4080:4080	3645666	110	True				
ANR	3646005	Statement	","	160:24:4081:4081	3645666	111	True				
ANR	3646006	Statement	.	161:3:4086:4086	3645666	112	True				
ANR	3646007	Statement	strtab_size	161:4:4087:4097	3645666	113	True				
ANR	3646008	Statement	=	161:16:4099:4099	3645666	114	True				
ANR	3646009	Statement	MO_	161:18:4101:4103	3645666	115	True				
ANR	3646010	Statement	(	161:21:4104:4104	3645666	116	True				
ANR	3646011	Statement	strtab_size	161:22:4105:4115	3645666	117	True				
ANR	3646012	Statement	)	161:33:4116:4116	3645666	118	True				
ANR	3646013	ExpressionStatement		162:3:4121:4121	3645666	37	True				
ANR	3646014	Statement	eprintf	163:2:4125:4131	3645666	38	True				
ANR	3646015	Statement	(	163:10:4133:4133	3645666	39	True				
ANR	3646016	Statement	"""next 0x%"""	163:11:4134:4143	3645666	40	True				
ANR	3646017	Statement	PFMT64x	163:21:4144:4150	3645666	41	True				
ANR	3646018	Statement	"""\\n"""	163:28:4151:4154	3645666	42	True				
ANR	3646019	Statement	","	163:32:4155:4155	3645666	43	True				
ANR	3646020	Statement	mo	163:34:4157:4158	3645666	44	True				
ANR	3646021	Statement	.	163:36:4159:4159	3645666	45	True				
ANR	3646022	Statement	next	163:37:4160:4163	3645666	46	True				
ANR	3646023	Statement	)	163:41:4164:4164	3645666	47	True				
ANR	3646024	ExpressionStatement		163:42:4165:4165	3645666	48	True				
ANR	3646025	Statement	eprintf	164:2:4169:4175	3645666	49	True				
ANR	3646026	Statement	(	164:10:4177:4177	3645666	50	True				
ANR	3646027	Statement	"""prev 0x%"""	164:11:4178:4187	3645666	51	True				
ANR	3646028	Statement	PFMT64x	164:21:4188:4194	3645666	52	True				
ANR	3646029	Statement	"""\\n"""	164:28:4195:4198	3645666	53	True				
ANR	3646030	Statement	","	164:32:4199:4199	3645666	54	True				
ANR	3646031	Statement	mo	164:34:4201:4202	3645666	55	True				
ANR	3646032	Statement	.	164:36:4203:4203	3645666	56	True				
ANR	3646033	Statement	prev	164:37:4204:4207	3645666	57	True				
ANR	3646034	Statement	)	164:41:4208:4208	3645666	58	True				
ANR	3646035	ExpressionStatement		164:42:4209:4209	3645666	59	True				
ANR	3646036	Statement	eprintf	165:2:4213:4219	3645666	60	True				
ANR	3646037	Statement	(	165:10:4221:4221	3645666	61	True				
ANR	3646038	Statement	"""base 0x%"""	165:11:4222:4231	3645666	62	True				
ANR	3646039	Statement	PFMT64x	165:21:4232:4238	3645666	63	True				
ANR	3646040	Statement	"""\\n"""	165:28:4239:4242	3645666	64	True				
ANR	3646041	Statement	","	165:32:4243:4243	3645666	65	True				
ANR	3646042	Statement	mo	165:34:4245:4246	3645666	66	True				
ANR	3646043	Statement	.	165:36:4247:4247	3645666	67	True				
ANR	3646044	Statement	base	165:37:4248:4251	3645666	68	True				
ANR	3646045	Statement	)	165:41:4252:4252	3645666	69	True				
ANR	3646046	ExpressionStatement		165:42:4253:4253	3645666	70	True				
ANR	3646047	Statement	eprintf	166:2:4257:4263	3645666	71	True				
ANR	3646048	Statement	(	166:10:4265:4265	3645666	72	True				
ANR	3646049	Statement	"""init 0x%"""	166:11:4266:4275	3645666	73	True				
ANR	3646050	Statement	PFMT64x	166:21:4276:4282	3645666	74	True				
ANR	3646051	Statement	"""\\n"""	166:28:4283:4286	3645666	75	True				
ANR	3646052	Statement	","	166:32:4287:4287	3645666	76	True				
ANR	3646053	Statement	mo	166:34:4289:4290	3645666	77	True				
ANR	3646054	Statement	.	166:36:4291:4291	3645666	78	True				
ANR	3646055	Statement	init	166:37:4292:4295	3645666	79	True				
ANR	3646056	Statement	)	166:41:4296:4296	3645666	80	True				
ANR	3646057	ExpressionStatement		166:42:4297:4297	3645666	81	True				
ANR	3646058	Statement	eprintf	167:2:4301:4307	3645666	82	True				
ANR	3646059	Statement	(	167:10:4309:4309	3645666	83	True				
ANR	3646060	Statement	"""fini 0x%"""	167:11:4310:4319	3645666	84	True				
ANR	3646061	Statement	PFMT64x	167:21:4320:4326	3645666	85	True				
ANR	3646062	Statement	"""\\n"""	167:28:4327:4330	3645666	86	True				
ANR	3646063	Statement	","	167:32:4331:4331	3645666	87	True				
ANR	3646064	Statement	mo	167:34:4333:4334	3645666	88	True				
ANR	3646065	Statement	.	167:36:4335:4335	3645666	89	True				
ANR	3646066	Statement	fini	167:37:4336:4339	3645666	90	True				
ANR	3646067	Statement	)	167:41:4340:4340	3645666	91	True				
ANR	3646068	ExpressionStatement		167:42:4341:4341	3645666	92	True				
ANR	3646069	Statement	eprintf	168:2:4345:4351	3645666	93	True				
ANR	3646070	Statement	(	168:10:4353:4353	3645666	94	True				
ANR	3646071	Statement	"""relplt 0x%"""	168:11:4354:4365	3645666	95	True				
ANR	3646072	Statement	PFMT64x	168:23:4366:4372	3645666	96	True				
ANR	3646073	Statement	"""\\n"""	168:30:4373:4376	3645666	97	True				
ANR	3646074	Statement	","	168:34:4377:4377	3645666	98	True				
ANR	3646075	Statement	mo	168:36:4379:4380	3645666	99	True				
ANR	3646076	Statement	.	168:38:4381:4381	3645666	100	True				
ANR	3646077	Statement	relplt	168:39:4382:4387	3645666	101	True				
ANR	3646078	Statement	-	168:46:4389:4389	3645666	102	True				
ANR	3646079	Statement	mo	168:48:4391:4392	3645666	103	True				
ANR	3646080	Statement	.	168:50:4393:4393	3645666	104	True				
ANR	3646081	Statement	base	168:51:4394:4397	3645666	105	True				
ANR	3646082	Statement	)	168:55:4398:4398	3645666	106	True				
ANR	3646083	ExpressionStatement		168:56:4399:4399	3645666	107	True				
ANR	3646084	Statement	eprintf	169:2:4403:4409	3645666	108	True				
ANR	3646085	Statement	(	169:10:4411:4411	3645666	109	True				
ANR	3646086	Statement	"""symtab = 0x%"""	169:11:4412:4425	3645666	110	True				
ANR	3646087	Statement	PFMT64x	169:25:4426:4432	3645666	111	True				
ANR	3646088	Statement	"""\\n"""	169:32:4433:4436	3645666	112	True				
ANR	3646089	Statement	","	169:36:4437:4437	3645666	113	True				
ANR	3646090	Statement	mo	169:38:4439:4440	3645666	114	True				
ANR	3646091	Statement	.	169:40:4441:4441	3645666	115	True				
ANR	3646092	Statement	symtab	169:41:4442:4447	3645666	116	True				
ANR	3646093	Statement	-	169:48:4449:4449	3645666	117	True				
ANR	3646094	Statement	mo	169:50:4451:4452	3645666	118	True				
ANR	3646095	Statement	.	169:52:4453:4453	3645666	119	True				
ANR	3646096	Statement	base	169:53:4454:4457	3645666	120	True				
ANR	3646097	Statement	)	169:57:4458:4458	3645666	121	True				
ANR	3646098	ExpressionStatement		169:58:4459:4459	3645666	122	True				
ANR	3646099	Statement	eprintf	170:2:4463:4469	3645666	123	True				
ANR	3646100	Statement	(	170:10:4471:4471	3645666	124	True				
ANR	3646101	Statement	"""strtab = 0x%"""	170:11:4472:4485	3645666	125	True				
ANR	3646102	Statement	PFMT64x	170:25:4486:4492	3645666	126	True				
ANR	3646103	Statement	"""\\n"""	170:32:4493:4496	3645666	127	True				
ANR	3646104	Statement	","	170:36:4497:4497	3645666	128	True				
ANR	3646105	Statement	mo	170:38:4499:4500	3645666	129	True				
ANR	3646106	Statement	.	170:40:4501:4501	3645666	130	True				
ANR	3646107	Statement	strtab	170:41:4502:4507	3645666	131	True				
ANR	3646108	Statement	-	170:48:4509:4509	3645666	132	True				
ANR	3646109	Statement	mo	170:50:4511:4512	3645666	133	True				
ANR	3646110	Statement	.	170:52:4513:4513	3645666	134	True				
ANR	3646111	Statement	base	170:53:4514:4517	3645666	135	True				
ANR	3646112	Statement	)	170:57:4518:4518	3645666	136	True				
ANR	3646113	ExpressionStatement		170:58:4519:4519	3645666	137	True				
ANR	3646114	Statement	eprintf	171:2:4523:4529	3645666	138	True				
ANR	3646115	Statement	(	171:10:4531:4531	3645666	139	True				
ANR	3646116	Statement	"""strtabsz = 0x%"""	171:11:4532:4547	3645666	140	True				
ANR	3646117	Statement	PFMT64x	171:27:4548:4554	3645666	141	True				
ANR	3646118	Statement	"""\\n"""	171:34:4555:4558	3645666	142	True				
ANR	3646119	Statement	","	171:38:4559:4559	3645666	143	True				
ANR	3646120	Statement	mo	171:40:4561:4562	3645666	144	True				
ANR	3646121	Statement	.	171:42:4563:4563	3645666	145	True				
ANR	3646122	Statement	strtab_size	171:43:4564:4574	3645666	146	True				
ANR	3646123	Statement	)	171:54:4575:4575	3645666	147	True				
ANR	3646124	ExpressionStatement		171:55:4576:4576	3645666	148	True				
ANR	3646125	IdentifierDeclStatement	ut64 strtab = mo . strtab - mo . base ;	173:2:4611:4644	3645666	149	True				
ANR	3646126	IdentifierDecl	strtab = mo . strtab - mo . base		3645666	0					
ANR	3646127	IdentifierDeclType	ut64		3645666	0					
ANR	3646128	Identifier	strtab		3645666	1					
ANR	3646129	AssignmentExpression	strtab = mo . strtab - mo . base		3645666	2		=			
ANR	3646130	Identifier	strtab		3645666	0					
ANR	3646131	AdditiveExpression	mo . strtab - mo . base		3645666	1		-			
ANR	3646132	MemberAccess	mo . strtab		3645666	0					
ANR	3646133	Identifier	mo		3645666	0					
ANR	3646134	Identifier	strtab		3645666	1					
ANR	3646135	MemberAccess	mo . base		3645666	1					
ANR	3646136	Identifier	mo		3645666	0					
ANR	3646137	Identifier	base		3645666	1					
ANR	3646138	IdentifierDeclStatement	ut64 symtab = mo . symtab - mo . base ;	174:2:4648:4681	3645666	150	True				
ANR	3646139	IdentifierDecl	symtab = mo . symtab - mo . base		3645666	0					
ANR	3646140	IdentifierDeclType	ut64		3645666	0					
ANR	3646141	Identifier	symtab		3645666	1					
ANR	3646142	AssignmentExpression	symtab = mo . symtab - mo . base		3645666	2		=			
ANR	3646143	Identifier	symtab		3645666	0					
ANR	3646144	AdditiveExpression	mo . symtab - mo . base		3645666	1		-			
ANR	3646145	MemberAccess	mo . symtab		3645666	0					
ANR	3646146	Identifier	mo		3645666	0					
ANR	3646147	Identifier	symtab		3645666	1					
ANR	3646148	MemberAccess	mo . base		3645666	1					
ANR	3646149	Identifier	mo		3645666	0					
ANR	3646150	Identifier	base		3645666	1					
ANR	3646151	ExpressionStatement	"walkSymbols ( buf , bin , symtab , strtab , mo . strtab_size , mo . relplt - mo . base , baddr )"	175:2:4685:4767	3645666	151	True				
ANR	3646152	CallExpression	"walkSymbols ( buf , bin , symtab , strtab , mo . strtab_size , mo . relplt - mo . base , baddr )"		3645666	0					
ANR	3646153	Callee	walkSymbols		3645666	0					
ANR	3646154	Identifier	walkSymbols		3645666	0					
ANR	3646155	ArgumentList	buf		3645666	1					
ANR	3646156	Argument	buf		3645666	0					
ANR	3646157	Identifier	buf		3645666	0					
ANR	3646158	Argument	bin		3645666	1					
ANR	3646159	Identifier	bin		3645666	0					
ANR	3646160	Argument	symtab		3645666	2					
ANR	3646161	Identifier	symtab		3645666	0					
ANR	3646162	Argument	strtab		3645666	3					
ANR	3646163	Identifier	strtab		3645666	0					
ANR	3646164	Argument	mo . strtab_size		3645666	4					
ANR	3646165	MemberAccess	mo . strtab_size		3645666	0					
ANR	3646166	Identifier	mo		3645666	0					
ANR	3646167	Identifier	strtab_size		3645666	1					
ANR	3646168	Argument	mo . relplt - mo . base		3645666	5					
ANR	3646169	AdditiveExpression	mo . relplt - mo . base		3645666	0		-			
ANR	3646170	MemberAccess	mo . relplt		3645666	0					
ANR	3646171	Identifier	mo		3645666	0					
ANR	3646172	Identifier	relplt		3645666	1					
ANR	3646173	MemberAccess	mo . base		3645666	1					
ANR	3646174	Identifier	mo		3645666	0					
ANR	3646175	Identifier	base		3645666	1					
ANR	3646176	Argument	baddr		3645666	6					
ANR	3646177	Identifier	baddr		3645666	0					
ANR	3646178	ReturnType	void		3645666	1					
ANR	3646179	Identifier	parseMod		3645666	2					
ANR	3646180	ParameterList	"RBuffer * buf , RBinNXOObj * bin , ut32 mod0 , ut64 baddr"		3645666	3					
ANR	3646181	Parameter	RBuffer * buf	124:14:2828:2839	3645666	0	True				
ANR	3646182	ParameterType	RBuffer *		3645666	0					
ANR	3646183	Identifier	buf		3645666	1					
ANR	3646184	Parameter	RBinNXOObj * bin	124:28:2842:2856	3645666	1	True				
ANR	3646185	ParameterType	RBinNXOObj *		3645666	0					
ANR	3646186	Identifier	bin		3645666	1					
ANR	3646187	Parameter	ut32 mod0	124:45:2859:2867	3645666	2	True				
ANR	3646188	ParameterType	ut32		3645666	0					
ANR	3646189	Identifier	mod0		3645666	1					
ANR	3646190	Parameter	ut64 baddr	124:56:2870:2879	3645666	3	True				
ANR	3646191	ParameterType	ut64		3645666	0					
ANR	3646192	Identifier	baddr		3645666	1					
ANR	3646193	CFGEntryNode	ENTRY		3645666		True				
ANR	3646194	CFGExitNode	EXIT		3645666		True				
ANR	3646195	Symbol	baddr		3645666						
ANR	3646196	Symbol	mo . relplt		3645666						
ANR	3646197	Symbol	mo		3645666						
ANR	3646198	Symbol	mo . symtab		3645666						
ANR	3646199	Symbol	bin		3645666						
ANR	3646200	Symbol	readLE32		3645666						
ANR	3646201	Symbol	mo . strtab_size		3645666						
ANR	3646202	Symbol	mh . magic		3645666						
ANR	3646203	Symbol	mh . unwind_end		3645666						
ANR	3646204	Symbol	mh . bss_end		3645666						
ANR	3646205	Symbol	mo . strtab		3645666						
ANR	3646206	Symbol	ptr		3645666						
ANR	3646207	Symbol	strtab		3645666						
ANR	3646208	Symbol	buf		3645666						
ANR	3646209	Symbol	mh . mod_object		3645666						
ANR	3646210	Symbol	symtab		3645666						
ANR	3646211	Symbol	mh . dynamic		3645666						
ANR	3646212	Symbol	mh		3645666						
ANR	3646213	Symbol	mh . unwind_start		3645666						
ANR	3646214	Symbol	mo . base		3645666						
ANR	3646215	Symbol	mod0		3645666						
ANR	3646216	Symbol	mh . bss_start		3645666						
