command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	6196163	File	data/converged/CVE-2019-16718~_radare2/sign.c								
ANR	6196164	DeclStmt									
ANR	6196165	Decl							include < r_hash . h >	include < r_hash . h > ( r_sign )	R_LIB_VERSION
ANR	6196166	Function	getRealRef	15:0:298:645							
ANR	6196167	FunctionDef	"getRealRef (RCore * core , ut64 off)"		6196166	0					
ANR	6196168	CompoundStatement		15:46:344:645	6196166	0					
ANR	6196169	IdentifierDeclStatement	RFlagItem * item ;	16:1:347:362	6196166	0	True				
ANR	6196170	IdentifierDecl	* item		6196166	0					
ANR	6196171	IdentifierDeclType	RFlagItem *		6196166	0					
ANR	6196172	Identifier	item		6196166	1					
ANR	6196173	IdentifierDeclStatement	RListIter * iter ;	17:1:365:380	6196166	1	True				
ANR	6196174	IdentifierDecl	* iter		6196166	0					
ANR	6196175	IdentifierDeclType	RListIter *		6196166	0					
ANR	6196176	Identifier	iter		6196166	1					
ANR	6196177	IdentifierDeclStatement	"const RList * list = r_flag_get_list ( core -> flags , off ) ;"	19:1:384:438	6196166	2	True				
ANR	6196178	IdentifierDecl	"* list = r_flag_get_list ( core -> flags , off )"		6196166	0					
ANR	6196179	IdentifierDeclType	const RList *		6196166	0					
ANR	6196180	Identifier	list		6196166	1					
ANR	6196181	AssignmentExpression	"* list = r_flag_get_list ( core -> flags , off )"		6196166	2		=			
ANR	6196182	Identifier	list		6196166	0					
ANR	6196183	CallExpression	"r_flag_get_list ( core -> flags , off )"		6196166	1					
ANR	6196184	Callee	r_flag_get_list		6196166	0					
ANR	6196185	Identifier	r_flag_get_list		6196166	0					
ANR	6196186	ArgumentList	core -> flags		6196166	1					
ANR	6196187	Argument	core -> flags		6196166	0					
ANR	6196188	PtrMemberAccess	core -> flags		6196166	0					
ANR	6196189	Identifier	core		6196166	0					
ANR	6196190	Identifier	flags		6196166	1					
ANR	6196191	Argument	off		6196166	1					
ANR	6196192	Identifier	off		6196166	0					
ANR	6196193	IfStatement	if ( ! list )		6196166	3					
ANR	6196194	Condition	! list	20:5:445:449	6196166	0	True				
ANR	6196195	UnaryOperationExpression	! list		6196166	0					
ANR	6196196	UnaryOperator	!		6196166	0					
ANR	6196197	Identifier	list		6196166	1					
ANR	6196198	CompoundStatement		6:12:107:107	6196166	1					
ANR	6196199	ReturnStatement	return NULL ;	21:2:456:467	6196166	0	True				
ANR	6196200	Identifier	NULL		6196166	0					
ANR	6196201	Statement	r_list_foreach	24:1:474:487	6196166	4	True				
ANR	6196202	Statement	(	24:16:489:489	6196166	5	True				
ANR	6196203	Statement	list	24:17:490:493	6196166	6	True				
ANR	6196204	Statement	","	24:21:494:494	6196166	7	True				
ANR	6196205	Statement	iter	24:23:496:499	6196166	8	True				
ANR	6196206	Statement	","	24:27:500:500	6196166	9	True				
ANR	6196207	Statement	item	24:29:502:505	6196166	10	True				
ANR	6196208	Statement	)	24:33:506:506	6196166	11	True				
ANR	6196209	CompoundStatement		10:35:163:163	6196166	12					
ANR	6196210	IfStatement	if ( ! item -> name )		6196166	0					
ANR	6196211	Condition	! item -> name	25:6:516:526	6196166	0	True				
ANR	6196212	UnaryOperationExpression	! item -> name		6196166	0					
ANR	6196213	UnaryOperator	!		6196166	0					
ANR	6196214	PtrMemberAccess	item -> name		6196166	1					
ANR	6196215	Identifier	item		6196166	0					
ANR	6196216	Identifier	name		6196166	1					
ANR	6196217	CompoundStatement		11:19:184:184	6196166	1					
ANR	6196218	ContinueStatement	continue ;	26:3:534:542	6196166	0	True				
ANR	6196219	IfStatement	"if ( strncmp ( item -> name , ""sym."" , 4 ) )"		6196166	1					
ANR	6196220	Condition	"strncmp ( item -> name , ""sym."" , 4 )"	28:6:554:584	6196166	0	True				
ANR	6196221	CallExpression	"strncmp ( item -> name , ""sym."" , 4 )"		6196166	0					
ANR	6196222	Callee	strncmp		6196166	0					
ANR	6196223	Identifier	strncmp		6196166	0					
ANR	6196224	ArgumentList	item -> name		6196166	1					
ANR	6196225	Argument	item -> name		6196166	0					
ANR	6196226	PtrMemberAccess	item -> name		6196166	0					
ANR	6196227	Identifier	item		6196166	0					
ANR	6196228	Identifier	name		6196166	1					
ANR	6196229	Argument	"""sym."""		6196166	1					
ANR	6196230	PrimaryExpression	"""sym."""		6196166	0					
ANR	6196231	Argument	4		6196166	2					
ANR	6196232	PrimaryExpression	4		6196166	0					
ANR	6196233	CompoundStatement		14:39:242:242	6196166	1					
ANR	6196234	ContinueStatement	continue ;	29:3:592:600	6196166	0	True				
ANR	6196235	ReturnStatement	return item -> name ;	31:2:608:625	6196166	2	True				
ANR	6196236	PtrMemberAccess	item -> name		6196166	0					
ANR	6196237	Identifier	item		6196166	0					
ANR	6196238	Identifier	name		6196166	1					
ANR	6196239	ReturnStatement	return NULL ;	34:1:632:643	6196166	13	True				
ANR	6196240	Identifier	NULL		6196166	0					
ANR	6196241	ReturnType	const char *		6196166	1					
ANR	6196242	Identifier	getRealRef		6196166	2					
ANR	6196243	ParameterList	"RCore * core , ut64 off"		6196166	3					
ANR	6196244	Parameter	RCore * core	15:23:321:331	6196166	0	True				
ANR	6196245	ParameterType	RCore *		6196166	0					
ANR	6196246	Identifier	core		6196166	1					
ANR	6196247	Parameter	ut64 off	15:36:334:341	6196166	1	True				
ANR	6196248	ParameterType	ut64		6196166	0					
ANR	6196249	Identifier	off		6196166	1					
ANR	6196250	CFGEntryNode	ENTRY		6196166		True				
ANR	6196251	CFGExitNode	EXIT		6196166		True				
ANR	6196252	CFGErrorNode	ERROR		6196166		True				
ANR	6196253	Symbol	core		6196166						
ANR	6196254	Symbol	strncmp		6196166						
ANR	6196255	Symbol	item		6196166						
ANR	6196256	Symbol	NULL		6196166						
ANR	6196257	Symbol	item -> name		6196166						
ANR	6196258	Symbol	* item		6196166						
ANR	6196259	Symbol	* core		6196166						
ANR	6196260	Symbol	iter		6196166						
ANR	6196261	Symbol	core -> flags		6196166						
ANR	6196262	Symbol	list		6196166						
ANR	6196263	Symbol	r_flag_get_list		6196166						
ANR	6196264	Symbol	off		6196166						
ANR	6196265	Function	r_sign_fcn_vars	37:0:648:1553							
ANR	6196266	FunctionDef	"r_sign_fcn_vars (RAnal * a , RAnalFunction * fcn)"		6196265	0					
ANR	6196267	CompoundStatement		37:59:707:1553	6196265	0					
ANR	6196268	ExpressionStatement	"r_return_val_if_fail ( a && fcn , NULL )"	38:1:710:747	6196265	0	True				
ANR	6196269	CallExpression	"r_return_val_if_fail ( a && fcn , NULL )"		6196265	0					
ANR	6196270	Callee	r_return_val_if_fail		6196265	0					
ANR	6196271	Identifier	r_return_val_if_fail		6196265	0					
ANR	6196272	ArgumentList	a && fcn		6196265	1					
ANR	6196273	Argument	a && fcn		6196265	0					
ANR	6196274	AndExpression	a && fcn		6196265	0		&&			
ANR	6196275	Identifier	a		6196265	0					
ANR	6196276	Identifier	fcn		6196265	1					
ANR	6196277	Argument	NULL		6196265	1					
ANR	6196278	Identifier	NULL		6196265	0					
ANR	6196279	IdentifierDeclStatement	RCore * core = a -> coreb . core ;	40:1:751:778	6196265	1	True				
ANR	6196280	IdentifierDecl	* core = a -> coreb . core		6196265	0					
ANR	6196281	IdentifierDeclType	RCore *		6196265	0					
ANR	6196282	Identifier	core		6196265	1					
ANR	6196283	AssignmentExpression	* core = a -> coreb . core		6196265	2		=			
ANR	6196284	Identifier	core		6196265	0					
ANR	6196285	MemberAccess	a -> coreb . core		6196265	1					
ANR	6196286	PtrMemberAccess	a -> coreb		6196265	0					
ANR	6196287	Identifier	a		6196265	0					
ANR	6196288	Identifier	coreb		6196265	1					
ANR	6196289	Identifier	core		6196265	1					
ANR	6196290	IfStatement	if ( ! core )		6196265	2					
ANR	6196291	Condition	! core	42:5:786:790	6196265	0	True				
ANR	6196292	UnaryOperationExpression	! core		6196265	0					
ANR	6196293	UnaryOperator	!		6196265	0					
ANR	6196294	Identifier	core		6196265	1					
ANR	6196295	CompoundStatement		6:12:85:85	6196265	1					
ANR	6196296	ReturnStatement	return NULL ;	43:2:797:808	6196265	0	True				
ANR	6196297	Identifier	NULL		6196265	0					
ANR	6196298	IdentifierDeclStatement	RListIter * iter ;	46:1:815:830	6196265	3	True				
ANR	6196299	IdentifierDecl	* iter		6196265	0					
ANR	6196300	IdentifierDeclType	RListIter *		6196265	0					
ANR	6196301	Identifier	iter		6196265	1					
ANR	6196302	IdentifierDeclStatement	RAnalVar * var ;	47:1:833:846	6196265	4	True				
ANR	6196303	IdentifierDecl	* var		6196265	0					
ANR	6196304	IdentifierDeclType	RAnalVar *		6196265	0					
ANR	6196305	Identifier	var		6196265	1					
ANR	6196306	IdentifierDeclStatement	RList * ret = r_list_newf ( ( RListFree ) free ) ;	48:1:849:892	6196265	5	True				
ANR	6196307	IdentifierDecl	* ret = r_list_newf ( ( RListFree ) free )		6196265	0					
ANR	6196308	IdentifierDeclType	RList *		6196265	0					
ANR	6196309	Identifier	ret		6196265	1					
ANR	6196310	AssignmentExpression	* ret = r_list_newf ( ( RListFree ) free )		6196265	2		=			
ANR	6196311	Identifier	ret		6196265	0					
ANR	6196312	CallExpression	r_list_newf ( ( RListFree ) free )		6196265	1					
ANR	6196313	Callee	r_list_newf		6196265	0					
ANR	6196314	Identifier	r_list_newf		6196265	0					
ANR	6196315	ArgumentList	( RListFree ) free		6196265	1					
ANR	6196316	Argument	( RListFree ) free		6196265	0					
ANR	6196317	CastExpression	( RListFree ) free		6196265	0					
ANR	6196318	CastTarget	RListFree		6196265	0					
ANR	6196319	Identifier	free		6196265	1					
ANR	6196320	IfStatement	if ( ! ret )		6196265	6					
ANR	6196321	Condition	! ret	49:5:899:902	6196265	0	True				
ANR	6196322	UnaryOperationExpression	! ret		6196265	0					
ANR	6196323	UnaryOperator	!		6196265	0					
ANR	6196324	Identifier	ret		6196265	1					
ANR	6196325	CompoundStatement		13:11:197:197	6196265	1					
ANR	6196326	ReturnStatement	return NULL ;	50:2:909:920	6196265	0	True				
ANR	6196327	Identifier	NULL		6196265	0					
ANR	6196328	IdentifierDeclStatement	"RList * reg_vars = r_anal_var_list ( core -> anal , fcn , R_ANAL_VAR_KIND_REG ) ;"	52:8:933:1005	6196265	7	True				
ANR	6196329	IdentifierDecl	"* reg_vars = r_anal_var_list ( core -> anal , fcn , R_ANAL_VAR_KIND_REG )"		6196265	0					
ANR	6196330	IdentifierDeclType	RList *		6196265	0					
ANR	6196331	Identifier	reg_vars		6196265	1					
ANR	6196332	AssignmentExpression	"* reg_vars = r_anal_var_list ( core -> anal , fcn , R_ANAL_VAR_KIND_REG )"		6196265	2		=			
ANR	6196333	Identifier	reg_vars		6196265	0					
ANR	6196334	CallExpression	"r_anal_var_list ( core -> anal , fcn , R_ANAL_VAR_KIND_REG )"		6196265	1					
ANR	6196335	Callee	r_anal_var_list		6196265	0					
ANR	6196336	Identifier	r_anal_var_list		6196265	0					
ANR	6196337	ArgumentList	core -> anal		6196265	1					
ANR	6196338	Argument	core -> anal		6196265	0					
ANR	6196339	PtrMemberAccess	core -> anal		6196265	0					
ANR	6196340	Identifier	core		6196265	0					
ANR	6196341	Identifier	anal		6196265	1					
ANR	6196342	Argument	fcn		6196265	1					
ANR	6196343	Identifier	fcn		6196265	0					
ANR	6196344	Argument	R_ANAL_VAR_KIND_REG		6196265	2					
ANR	6196345	Identifier	R_ANAL_VAR_KIND_REG		6196265	0					
ANR	6196346	IdentifierDeclStatement	"RList * spv_vars = r_anal_var_list ( core -> anal , fcn , R_ANAL_VAR_KIND_SPV ) ;"	53:8:1015:1087	6196265	8	True				
ANR	6196347	IdentifierDecl	"* spv_vars = r_anal_var_list ( core -> anal , fcn , R_ANAL_VAR_KIND_SPV )"		6196265	0					
ANR	6196348	IdentifierDeclType	RList *		6196265	0					
ANR	6196349	Identifier	spv_vars		6196265	1					
ANR	6196350	AssignmentExpression	"* spv_vars = r_anal_var_list ( core -> anal , fcn , R_ANAL_VAR_KIND_SPV )"		6196265	2		=			
ANR	6196351	Identifier	spv_vars		6196265	0					
ANR	6196352	CallExpression	"r_anal_var_list ( core -> anal , fcn , R_ANAL_VAR_KIND_SPV )"		6196265	1					
ANR	6196353	Callee	r_anal_var_list		6196265	0					
ANR	6196354	Identifier	r_anal_var_list		6196265	0					
ANR	6196355	ArgumentList	core -> anal		6196265	1					
ANR	6196356	Argument	core -> anal		6196265	0					
ANR	6196357	PtrMemberAccess	core -> anal		6196265	0					
ANR	6196358	Identifier	core		6196265	0					
ANR	6196359	Identifier	anal		6196265	1					
ANR	6196360	Argument	fcn		6196265	1					
ANR	6196361	Identifier	fcn		6196265	0					
ANR	6196362	Argument	R_ANAL_VAR_KIND_SPV		6196265	2					
ANR	6196363	Identifier	R_ANAL_VAR_KIND_SPV		6196265	0					
ANR	6196364	IdentifierDeclStatement	"RList * bpv_vars = r_anal_var_list ( core -> anal , fcn , R_ANAL_VAR_KIND_BPV ) ;"	54:8:1097:1169	6196265	9	True				
ANR	6196365	IdentifierDecl	"* bpv_vars = r_anal_var_list ( core -> anal , fcn , R_ANAL_VAR_KIND_BPV )"		6196265	0					
ANR	6196366	IdentifierDeclType	RList *		6196265	0					
ANR	6196367	Identifier	bpv_vars		6196265	1					
ANR	6196368	AssignmentExpression	"* bpv_vars = r_anal_var_list ( core -> anal , fcn , R_ANAL_VAR_KIND_BPV )"		6196265	2		=			
ANR	6196369	Identifier	bpv_vars		6196265	0					
ANR	6196370	CallExpression	"r_anal_var_list ( core -> anal , fcn , R_ANAL_VAR_KIND_BPV )"		6196265	1					
ANR	6196371	Callee	r_anal_var_list		6196265	0					
ANR	6196372	Identifier	r_anal_var_list		6196265	0					
ANR	6196373	ArgumentList	core -> anal		6196265	1					
ANR	6196374	Argument	core -> anal		6196265	0					
ANR	6196375	PtrMemberAccess	core -> anal		6196265	0					
ANR	6196376	Identifier	core		6196265	0					
ANR	6196377	Identifier	anal		6196265	1					
ANR	6196378	Argument	fcn		6196265	1					
ANR	6196379	Identifier	fcn		6196265	0					
ANR	6196380	Argument	R_ANAL_VAR_KIND_BPV		6196265	2					
ANR	6196381	Identifier	R_ANAL_VAR_KIND_BPV		6196265	0					
ANR	6196382	Statement	r_list_foreach	55:1:1172:1185	6196265	10	True				
ANR	6196383	Statement	(	55:16:1187:1187	6196265	11	True				
ANR	6196384	Statement	bpv_vars	55:17:1188:1195	6196265	12	True				
ANR	6196385	Statement	","	55:25:1196:1196	6196265	13	True				
ANR	6196386	Statement	iter	55:27:1198:1201	6196265	14	True				
ANR	6196387	Statement	","	55:31:1202:1202	6196265	15	True				
ANR	6196388	Statement	var	55:33:1204:1206	6196265	16	True				
ANR	6196389	Statement	)	55:36:1207:1207	6196265	17	True				
ANR	6196390	CompoundStatement		19:38:501:501	6196265	18					
ANR	6196391	ExpressionStatement	"r_list_append ( ret , r_str_newf ( ""b%d"" , var -> delta ) )"	56:2:1213:1264	6196265	0	True				
ANR	6196392	CallExpression	"r_list_append ( ret , r_str_newf ( ""b%d"" , var -> delta ) )"		6196265	0					
ANR	6196393	Callee	r_list_append		6196265	0					
ANR	6196394	Identifier	r_list_append		6196265	0					
ANR	6196395	ArgumentList	ret		6196265	1					
ANR	6196396	Argument	ret		6196265	0					
ANR	6196397	Identifier	ret		6196265	0					
ANR	6196398	Argument	"r_str_newf ( ""b%d"" , var -> delta )"		6196265	1					
ANR	6196399	CallExpression	"r_str_newf ( ""b%d"" , var -> delta )"		6196265	0					
ANR	6196400	Callee	r_str_newf		6196265	0					
ANR	6196401	Identifier	r_str_newf		6196265	0					
ANR	6196402	ArgumentList	"""b%d"""		6196265	1					
ANR	6196403	Argument	"""b%d"""		6196265	0					
ANR	6196404	PrimaryExpression	"""b%d"""		6196265	0					
ANR	6196405	Argument	var -> delta		6196265	1					
ANR	6196406	PtrMemberAccess	var -> delta		6196265	0					
ANR	6196407	Identifier	var		6196265	0					
ANR	6196408	Identifier	delta		6196265	1					
ANR	6196409	Statement	r_list_foreach	58:1:1270:1283	6196265	19	True				
ANR	6196410	Statement	(	58:16:1285:1285	6196265	20	True				
ANR	6196411	Statement	spv_vars	58:17:1286:1293	6196265	21	True				
ANR	6196412	Statement	","	58:25:1294:1294	6196265	22	True				
ANR	6196413	Statement	iter	58:27:1296:1299	6196265	23	True				
ANR	6196414	Statement	","	58:31:1300:1300	6196265	24	True				
ANR	6196415	Statement	var	58:33:1302:1304	6196265	25	True				
ANR	6196416	Statement	)	58:36:1305:1305	6196265	26	True				
ANR	6196417	CompoundStatement		22:38:599:599	6196265	27					
ANR	6196418	ExpressionStatement	"r_list_append ( ret , r_str_newf ( ""s%d"" , var -> delta ) )"	59:2:1311:1362	6196265	0	True				
ANR	6196419	CallExpression	"r_list_append ( ret , r_str_newf ( ""s%d"" , var -> delta ) )"		6196265	0					
ANR	6196420	Callee	r_list_append		6196265	0					
ANR	6196421	Identifier	r_list_append		6196265	0					
ANR	6196422	ArgumentList	ret		6196265	1					
ANR	6196423	Argument	ret		6196265	0					
ANR	6196424	Identifier	ret		6196265	0					
ANR	6196425	Argument	"r_str_newf ( ""s%d"" , var -> delta )"		6196265	1					
ANR	6196426	CallExpression	"r_str_newf ( ""s%d"" , var -> delta )"		6196265	0					
ANR	6196427	Callee	r_str_newf		6196265	0					
ANR	6196428	Identifier	r_str_newf		6196265	0					
ANR	6196429	ArgumentList	"""s%d"""		6196265	1					
ANR	6196430	Argument	"""s%d"""		6196265	0					
ANR	6196431	PrimaryExpression	"""s%d"""		6196265	0					
ANR	6196432	Argument	var -> delta		6196265	1					
ANR	6196433	PtrMemberAccess	var -> delta		6196265	0					
ANR	6196434	Identifier	var		6196265	0					
ANR	6196435	Identifier	delta		6196265	1					
ANR	6196436	Statement	r_list_foreach	61:1:1368:1381	6196265	28	True				
ANR	6196437	Statement	(	61:16:1383:1383	6196265	29	True				
ANR	6196438	Statement	reg_vars	61:17:1384:1391	6196265	30	True				
ANR	6196439	Statement	","	61:25:1392:1392	6196265	31	True				
ANR	6196440	Statement	iter	61:27:1394:1397	6196265	32	True				
ANR	6196441	Statement	","	61:31:1398:1398	6196265	33	True				
ANR	6196442	Statement	var	61:33:1400:1402	6196265	34	True				
ANR	6196443	Statement	)	61:36:1403:1403	6196265	35	True				
ANR	6196444	CompoundStatement		25:38:697:697	6196265	36					
ANR	6196445	ExpressionStatement	"r_list_append ( ret , r_str_newf ( ""r%d"" , var -> delta ) )"	62:2:1409:1460	6196265	0	True				
ANR	6196446	CallExpression	"r_list_append ( ret , r_str_newf ( ""r%d"" , var -> delta ) )"		6196265	0					
ANR	6196447	Callee	r_list_append		6196265	0					
ANR	6196448	Identifier	r_list_append		6196265	0					
ANR	6196449	ArgumentList	ret		6196265	1					
ANR	6196450	Argument	ret		6196265	0					
ANR	6196451	Identifier	ret		6196265	0					
ANR	6196452	Argument	"r_str_newf ( ""r%d"" , var -> delta )"		6196265	1					
ANR	6196453	CallExpression	"r_str_newf ( ""r%d"" , var -> delta )"		6196265	0					
ANR	6196454	Callee	r_str_newf		6196265	0					
ANR	6196455	Identifier	r_str_newf		6196265	0					
ANR	6196456	ArgumentList	"""r%d"""		6196265	1					
ANR	6196457	Argument	"""r%d"""		6196265	0					
ANR	6196458	PrimaryExpression	"""r%d"""		6196265	0					
ANR	6196459	Argument	var -> delta		6196265	1					
ANR	6196460	PtrMemberAccess	var -> delta		6196265	0					
ANR	6196461	Identifier	var		6196265	0					
ANR	6196462	Identifier	delta		6196265	1					
ANR	6196463	ExpressionStatement	r_list_free ( reg_vars )	64:1:1466:1488	6196265	37	True				
ANR	6196464	CallExpression	r_list_free ( reg_vars )		6196265	0					
ANR	6196465	Callee	r_list_free		6196265	0					
ANR	6196466	Identifier	r_list_free		6196265	0					
ANR	6196467	ArgumentList	reg_vars		6196265	1					
ANR	6196468	Argument	reg_vars		6196265	0					
ANR	6196469	Identifier	reg_vars		6196265	0					
ANR	6196470	ExpressionStatement	r_list_free ( bpv_vars )	65:1:1491:1513	6196265	38	True				
ANR	6196471	CallExpression	r_list_free ( bpv_vars )		6196265	0					
ANR	6196472	Callee	r_list_free		6196265	0					
ANR	6196473	Identifier	r_list_free		6196265	0					
ANR	6196474	ArgumentList	bpv_vars		6196265	1					
ANR	6196475	Argument	bpv_vars		6196265	0					
ANR	6196476	Identifier	bpv_vars		6196265	0					
ANR	6196477	ExpressionStatement	r_list_free ( spv_vars )	66:1:1516:1538	6196265	39	True				
ANR	6196478	CallExpression	r_list_free ( spv_vars )		6196265	0					
ANR	6196479	Callee	r_list_free		6196265	0					
ANR	6196480	Identifier	r_list_free		6196265	0					
ANR	6196481	ArgumentList	spv_vars		6196265	1					
ANR	6196482	Argument	spv_vars		6196265	0					
ANR	6196483	Identifier	spv_vars		6196265	0					
ANR	6196484	ReturnStatement	return ret ;	67:1:1541:1551	6196265	40	True				
ANR	6196485	Identifier	ret		6196265	0					
ANR	6196486	ReturnType	R_API RList *		6196265	1					
ANR	6196487	Identifier	r_sign_fcn_vars		6196265	2					
ANR	6196488	ParameterList	"RAnal * a , RAnalFunction * fcn"		6196265	3					
ANR	6196489	Parameter	RAnal * a	37:29:677:684	6196265	0	True				
ANR	6196490	ParameterType	RAnal *		6196265	0					
ANR	6196491	Identifier	a		6196265	1					
ANR	6196492	Parameter	RAnalFunction * fcn	37:39:687:704	6196265	1	True				
ANR	6196493	ParameterType	RAnalFunction *		6196265	0					
ANR	6196494	Identifier	fcn		6196265	1					
ANR	6196495	CFGEntryNode	ENTRY		6196265		True				
ANR	6196496	CFGExitNode	EXIT		6196265		True				
ANR	6196497	Symbol	ret		6196265						
ANR	6196498	Symbol	a		6196265						
ANR	6196499	Symbol	NULL		6196265						
ANR	6196500	Symbol	a -> coreb . core		6196265						
ANR	6196501	Symbol	R_ANAL_VAR_KIND_SPV		6196265						
ANR	6196502	Symbol	r_list_newf		6196265						
ANR	6196503	Symbol	var		6196265						
ANR	6196504	Symbol	reg_vars		6196265						
ANR	6196505	Symbol	a -> coreb		6196265						
ANR	6196506	Symbol	* core		6196265						
ANR	6196507	Symbol	iter		6196265						
ANR	6196508	Symbol	* a		6196265						
ANR	6196509	Symbol	R_ANAL_VAR_KIND_BPV		6196265						
ANR	6196510	Symbol	r_str_newf		6196265						
ANR	6196511	Symbol	core -> anal		6196265						
ANR	6196512	Symbol	var -> delta		6196265						
ANR	6196513	Symbol	fcn		6196265						
ANR	6196514	Symbol	core		6196265						
ANR	6196515	Symbol	* var		6196265						
ANR	6196516	Symbol	r_anal_var_list		6196265						
ANR	6196517	Symbol	bpv_vars		6196265						
ANR	6196518	Symbol	free		6196265						
ANR	6196519	Symbol	spv_vars		6196265						
ANR	6196520	Symbol	R_ANAL_VAR_KIND_REG		6196265						
ANR	6196521	Function	r_sign_fcn_xrefs	70:0:1556:2145							
ANR	6196522	FunctionDef	"r_sign_fcn_xrefs (RAnal * a , RAnalFunction * fcn)"		6196521	0					
ANR	6196523	CompoundStatement		70:60:1616:2145	6196521	0					
ANR	6196524	IdentifierDeclStatement	RListIter * iter = NULL ;	71:1:1619:1641	6196521	0	True				
ANR	6196525	IdentifierDecl	* iter = NULL		6196521	0					
ANR	6196526	IdentifierDeclType	RListIter *		6196521	0					
ANR	6196527	Identifier	iter		6196521	1					
ANR	6196528	AssignmentExpression	* iter = NULL		6196521	2		=			
ANR	6196529	Identifier	NULL		6196521	0					
ANR	6196530	Identifier	NULL		6196521	1					
ANR	6196531	IdentifierDeclStatement	RAnalRef * refi = NULL ;	72:1:1644:1665	6196521	1	True				
ANR	6196532	IdentifierDecl	* refi = NULL		6196521	0					
ANR	6196533	IdentifierDeclType	RAnalRef *		6196521	0					
ANR	6196534	Identifier	refi		6196521	1					
ANR	6196535	AssignmentExpression	* refi = NULL		6196521	2		=			
ANR	6196536	Identifier	NULL		6196521	0					
ANR	6196537	Identifier	NULL		6196521	1					
ANR	6196538	ExpressionStatement	"r_return_val_if_fail ( a && fcn , NULL )"	74:1:1669:1706	6196521	2	True				
ANR	6196539	CallExpression	"r_return_val_if_fail ( a && fcn , NULL )"		6196521	0					
ANR	6196540	Callee	r_return_val_if_fail		6196521	0					
ANR	6196541	Identifier	r_return_val_if_fail		6196521	0					
ANR	6196542	ArgumentList	a && fcn		6196521	1					
ANR	6196543	Argument	a && fcn		6196521	0					
ANR	6196544	AndExpression	a && fcn		6196521	0		&&			
ANR	6196545	Identifier	a		6196521	0					
ANR	6196546	Identifier	fcn		6196521	1					
ANR	6196547	Argument	NULL		6196521	1					
ANR	6196548	Identifier	NULL		6196521	0					
ANR	6196549	IdentifierDeclStatement	RCore * core = a -> coreb . core ;	76:1:1710:1737	6196521	3	True				
ANR	6196550	IdentifierDecl	* core = a -> coreb . core		6196521	0					
ANR	6196551	IdentifierDeclType	RCore *		6196521	0					
ANR	6196552	Identifier	core		6196521	1					
ANR	6196553	AssignmentExpression	* core = a -> coreb . core		6196521	2		=			
ANR	6196554	Identifier	core		6196521	0					
ANR	6196555	MemberAccess	a -> coreb . core		6196521	1					
ANR	6196556	PtrMemberAccess	a -> coreb		6196521	0					
ANR	6196557	Identifier	a		6196521	0					
ANR	6196558	Identifier	coreb		6196521	1					
ANR	6196559	Identifier	core		6196521	1					
ANR	6196560	IfStatement	if ( ! core )		6196521	4					
ANR	6196561	Condition	! core	78:5:1745:1749	6196521	0	True				
ANR	6196562	UnaryOperationExpression	! core		6196521	0					
ANR	6196563	UnaryOperator	!		6196521	0					
ANR	6196564	Identifier	core		6196521	1					
ANR	6196565	CompoundStatement		9:12:135:135	6196521	1					
ANR	6196566	ReturnStatement	return NULL ;	79:2:1756:1767	6196521	0	True				
ANR	6196567	Identifier	NULL		6196521	0					
ANR	6196568	IdentifierDeclStatement	RList * ret = r_list_newf ( ( RListFree ) free ) ;	82:1:1774:1817	6196521	5	True				
ANR	6196569	IdentifierDecl	* ret = r_list_newf ( ( RListFree ) free )		6196521	0					
ANR	6196570	IdentifierDeclType	RList *		6196521	0					
ANR	6196571	Identifier	ret		6196521	1					
ANR	6196572	AssignmentExpression	* ret = r_list_newf ( ( RListFree ) free )		6196521	2		=			
ANR	6196573	Identifier	ret		6196521	0					
ANR	6196574	CallExpression	r_list_newf ( ( RListFree ) free )		6196521	1					
ANR	6196575	Callee	r_list_newf		6196521	0					
ANR	6196576	Identifier	r_list_newf		6196521	0					
ANR	6196577	ArgumentList	( RListFree ) free		6196521	1					
ANR	6196578	Argument	( RListFree ) free		6196521	0					
ANR	6196579	CastExpression	( RListFree ) free		6196521	0					
ANR	6196580	CastTarget	RListFree		6196521	0					
ANR	6196581	Identifier	free		6196521	1					
ANR	6196582	IdentifierDeclStatement	"RList * xrefs = r_anal_fcn_get_xrefs ( a , fcn ) ;"	83:1:1820:1864	6196521	6	True				
ANR	6196583	IdentifierDecl	"* xrefs = r_anal_fcn_get_xrefs ( a , fcn )"		6196521	0					
ANR	6196584	IdentifierDeclType	RList *		6196521	0					
ANR	6196585	Identifier	xrefs		6196521	1					
ANR	6196586	AssignmentExpression	"* xrefs = r_anal_fcn_get_xrefs ( a , fcn )"		6196521	2		=			
ANR	6196587	Identifier	xrefs		6196521	0					
ANR	6196588	CallExpression	"r_anal_fcn_get_xrefs ( a , fcn )"		6196521	1					
ANR	6196589	Callee	r_anal_fcn_get_xrefs		6196521	0					
ANR	6196590	Identifier	r_anal_fcn_get_xrefs		6196521	0					
ANR	6196591	ArgumentList	a		6196521	1					
ANR	6196592	Argument	a		6196521	0					
ANR	6196593	Identifier	a		6196521	0					
ANR	6196594	Argument	fcn		6196521	1					
ANR	6196595	Identifier	fcn		6196521	0					
ANR	6196596	Statement	r_list_foreach	84:1:1867:1880	6196521	7	True				
ANR	6196597	Statement	(	84:16:1882:1882	6196521	8	True				
ANR	6196598	Statement	xrefs	84:17:1883:1887	6196521	9	True				
ANR	6196599	Statement	","	84:22:1888:1888	6196521	10	True				
ANR	6196600	Statement	iter	84:24:1890:1893	6196521	11	True				
ANR	6196601	Statement	","	84:28:1894:1894	6196521	12	True				
ANR	6196602	Statement	refi	84:30:1896:1899	6196521	13	True				
ANR	6196603	Statement	)	84:34:1900:1900	6196521	14	True				
ANR	6196604	CompoundStatement		15:36:285:285	6196521	15					
ANR	6196605	IfStatement	if ( refi -> type == R_ANAL_REF_TYPE_CODE || refi -> type == R_ANAL_REF_TYPE_CALL )		6196521	0					
ANR	6196606	Condition	refi -> type == R_ANAL_REF_TYPE_CODE || refi -> type == R_ANAL_REF_TYPE_CALL	85:6:1910:1981	6196521	0	True				
ANR	6196607	OrExpression	refi -> type == R_ANAL_REF_TYPE_CODE || refi -> type == R_ANAL_REF_TYPE_CALL		6196521	0		||			
ANR	6196608	EqualityExpression	refi -> type == R_ANAL_REF_TYPE_CODE		6196521	0		==			
ANR	6196609	PtrMemberAccess	refi -> type		6196521	0					
ANR	6196610	Identifier	refi		6196521	0					
ANR	6196611	Identifier	type		6196521	1					
ANR	6196612	Identifier	R_ANAL_REF_TYPE_CODE		6196521	1					
ANR	6196613	EqualityExpression	refi -> type == R_ANAL_REF_TYPE_CALL		6196521	1		==			
ANR	6196614	PtrMemberAccess	refi -> type		6196521	0					
ANR	6196615	Identifier	refi		6196521	0					
ANR	6196616	Identifier	type		6196521	1					
ANR	6196617	Identifier	R_ANAL_REF_TYPE_CALL		6196521	1					
ANR	6196618	CompoundStatement		17:3:372:420	6196521	1					
ANR	6196619	IdentifierDeclStatement	"const char * flag = getRealRef ( core , refi -> addr ) ;"	86:3:1989:2037	6196521	0	True				
ANR	6196620	IdentifierDecl	"* flag = getRealRef ( core , refi -> addr )"		6196521	0					
ANR	6196621	IdentifierDeclType	const char *		6196521	0					
ANR	6196622	Identifier	flag		6196521	1					
ANR	6196623	AssignmentExpression	"* flag = getRealRef ( core , refi -> addr )"		6196521	2		=			
ANR	6196624	Identifier	flag		6196521	0					
ANR	6196625	CallExpression	"getRealRef ( core , refi -> addr )"		6196521	1					
ANR	6196626	Callee	getRealRef		6196521	0					
ANR	6196627	Identifier	getRealRef		6196521	0					
ANR	6196628	ArgumentList	core		6196521	1					
ANR	6196629	Argument	core		6196521	0					
ANR	6196630	Identifier	core		6196521	0					
ANR	6196631	Argument	refi -> addr		6196521	1					
ANR	6196632	PtrMemberAccess	refi -> addr		6196521	0					
ANR	6196633	Identifier	refi		6196521	0					
ANR	6196634	Identifier	addr		6196521	1					
ANR	6196635	IfStatement	if ( flag )		6196521	1					
ANR	6196636	Condition	flag	87:7:2046:2049	6196521	0	True				
ANR	6196637	Identifier	flag		6196521	0					
ANR	6196638	CompoundStatement		18:13:435:435	6196521	1					
ANR	6196639	ExpressionStatement	"r_list_append ( ret , r_str_newf ( flag ) )"	88:4:2058:2096	6196521	0	True				
ANR	6196640	CallExpression	"r_list_append ( ret , r_str_newf ( flag ) )"		6196521	0					
ANR	6196641	Callee	r_list_append		6196521	0					
ANR	6196642	Identifier	r_list_append		6196521	0					
ANR	6196643	ArgumentList	ret		6196521	1					
ANR	6196644	Argument	ret		6196521	0					
ANR	6196645	Identifier	ret		6196521	0					
ANR	6196646	Argument	r_str_newf ( flag )		6196521	1					
ANR	6196647	CallExpression	r_str_newf ( flag )		6196521	0					
ANR	6196648	Callee	r_str_newf		6196521	0					
ANR	6196649	Identifier	r_str_newf		6196521	0					
ANR	6196650	ArgumentList	flag		6196521	1					
ANR	6196651	Argument	flag		6196521	0					
ANR	6196652	Identifier	flag		6196521	0					
ANR	6196653	ExpressionStatement	r_list_free ( xrefs )	92:1:2111:2130	6196521	16	True				
ANR	6196654	CallExpression	r_list_free ( xrefs )		6196521	0					
ANR	6196655	Callee	r_list_free		6196521	0					
ANR	6196656	Identifier	r_list_free		6196521	0					
ANR	6196657	ArgumentList	xrefs		6196521	1					
ANR	6196658	Argument	xrefs		6196521	0					
ANR	6196659	Identifier	xrefs		6196521	0					
ANR	6196660	ReturnStatement	return ret ;	93:1:2133:2143	6196521	17	True				
ANR	6196661	Identifier	ret		6196521	0					
ANR	6196662	ReturnType	R_API RList *		6196521	1					
ANR	6196663	Identifier	r_sign_fcn_xrefs		6196521	2					
ANR	6196664	ParameterList	"RAnal * a , RAnalFunction * fcn"		6196521	3					
ANR	6196665	Parameter	RAnal * a	70:30:1586:1593	6196521	0	True				
ANR	6196666	ParameterType	RAnal *		6196521	0					
ANR	6196667	Identifier	a		6196521	1					
ANR	6196668	Parameter	RAnalFunction * fcn	70:40:1596:1613	6196521	1	True				
ANR	6196669	ParameterType	RAnalFunction *		6196521	0					
ANR	6196670	Identifier	fcn		6196521	1					
ANR	6196671	CFGEntryNode	ENTRY		6196521		True				
ANR	6196672	CFGExitNode	EXIT		6196521		True				
ANR	6196673	Symbol	ret		6196521						
ANR	6196674	Symbol	a		6196521						
ANR	6196675	Symbol	NULL		6196521						
ANR	6196676	Symbol	refi		6196521						
ANR	6196677	Symbol	a -> coreb . core		6196521						
ANR	6196678	Symbol	flag		6196521						
ANR	6196679	Symbol	r_list_newf		6196521						
ANR	6196680	Symbol	a -> coreb		6196521						
ANR	6196681	Symbol	xrefs		6196521						
ANR	6196682	Symbol	iter		6196521						
ANR	6196683	Symbol	getRealRef		6196521						
ANR	6196684	Symbol	* a		6196521						
ANR	6196685	Symbol	r_str_newf		6196521						
ANR	6196686	Symbol	* refi		6196521						
ANR	6196687	Symbol	R_ANAL_REF_TYPE_CODE		6196521						
ANR	6196688	Symbol	fcn		6196521						
ANR	6196689	Symbol	core		6196521						
ANR	6196690	Symbol	refi -> type		6196521						
ANR	6196691	Symbol	refi -> addr		6196521						
ANR	6196692	Symbol	r_anal_fcn_get_xrefs		6196521						
ANR	6196693	Symbol	free		6196521						
ANR	6196694	Symbol	R_ANAL_REF_TYPE_CALL		6196521						
ANR	6196695	Function	r_sign_fcn_refs	96:0:2148:2732							
ANR	6196696	FunctionDef	"r_sign_fcn_refs (RAnal * a , RAnalFunction * fcn)"		6196695	0					
ANR	6196697	CompoundStatement		96:59:2207:2732	6196695	0					
ANR	6196698	IdentifierDeclStatement	RListIter * iter = NULL ;	97:1:2210:2232	6196695	0	True				
ANR	6196699	IdentifierDecl	* iter = NULL		6196695	0					
ANR	6196700	IdentifierDeclType	RListIter *		6196695	0					
ANR	6196701	Identifier	iter		6196695	1					
ANR	6196702	AssignmentExpression	* iter = NULL		6196695	2		=			
ANR	6196703	Identifier	NULL		6196695	0					
ANR	6196704	Identifier	NULL		6196695	1					
ANR	6196705	IdentifierDeclStatement	RAnalRef * refi = NULL ;	98:1:2235:2256	6196695	1	True				
ANR	6196706	IdentifierDecl	* refi = NULL		6196695	0					
ANR	6196707	IdentifierDeclType	RAnalRef *		6196695	0					
ANR	6196708	Identifier	refi		6196695	1					
ANR	6196709	AssignmentExpression	* refi = NULL		6196695	2		=			
ANR	6196710	Identifier	NULL		6196695	0					
ANR	6196711	Identifier	NULL		6196695	1					
ANR	6196712	ExpressionStatement	"r_return_val_if_fail ( a && fcn , NULL )"	100:1:2260:2297	6196695	2	True				
ANR	6196713	CallExpression	"r_return_val_if_fail ( a && fcn , NULL )"		6196695	0					
ANR	6196714	Callee	r_return_val_if_fail		6196695	0					
ANR	6196715	Identifier	r_return_val_if_fail		6196695	0					
ANR	6196716	ArgumentList	a && fcn		6196695	1					
ANR	6196717	Argument	a && fcn		6196695	0					
ANR	6196718	AndExpression	a && fcn		6196695	0		&&			
ANR	6196719	Identifier	a		6196695	0					
ANR	6196720	Identifier	fcn		6196695	1					
ANR	6196721	Argument	NULL		6196695	1					
ANR	6196722	Identifier	NULL		6196695	0					
ANR	6196723	IdentifierDeclStatement	RCore * core = a -> coreb . core ;	102:1:2301:2328	6196695	3	True				
ANR	6196724	IdentifierDecl	* core = a -> coreb . core		6196695	0					
ANR	6196725	IdentifierDeclType	RCore *		6196695	0					
ANR	6196726	Identifier	core		6196695	1					
ANR	6196727	AssignmentExpression	* core = a -> coreb . core		6196695	2		=			
ANR	6196728	Identifier	core		6196695	0					
ANR	6196729	MemberAccess	a -> coreb . core		6196695	1					
ANR	6196730	PtrMemberAccess	a -> coreb		6196695	0					
ANR	6196731	Identifier	a		6196695	0					
ANR	6196732	Identifier	coreb		6196695	1					
ANR	6196733	Identifier	core		6196695	1					
ANR	6196734	IfStatement	if ( ! core )		6196695	4					
ANR	6196735	Condition	! core	104:5:2336:2340	6196695	0	True				
ANR	6196736	UnaryOperationExpression	! core		6196695	0					
ANR	6196737	UnaryOperator	!		6196695	0					
ANR	6196738	Identifier	core		6196695	1					
ANR	6196739	CompoundStatement		9:12:135:135	6196695	1					
ANR	6196740	ReturnStatement	return NULL ;	105:2:2347:2358	6196695	0	True				
ANR	6196741	Identifier	NULL		6196695	0					
ANR	6196742	IdentifierDeclStatement	RList * ret = r_list_newf ( ( RListFree ) free ) ;	108:1:2365:2408	6196695	5	True				
ANR	6196743	IdentifierDecl	* ret = r_list_newf ( ( RListFree ) free )		6196695	0					
ANR	6196744	IdentifierDeclType	RList *		6196695	0					
ANR	6196745	Identifier	ret		6196695	1					
ANR	6196746	AssignmentExpression	* ret = r_list_newf ( ( RListFree ) free )		6196695	2		=			
ANR	6196747	Identifier	ret		6196695	0					
ANR	6196748	CallExpression	r_list_newf ( ( RListFree ) free )		6196695	1					
ANR	6196749	Callee	r_list_newf		6196695	0					
ANR	6196750	Identifier	r_list_newf		6196695	0					
ANR	6196751	ArgumentList	( RListFree ) free		6196695	1					
ANR	6196752	Argument	( RListFree ) free		6196695	0					
ANR	6196753	CastExpression	( RListFree ) free		6196695	0					
ANR	6196754	CastTarget	RListFree		6196695	0					
ANR	6196755	Identifier	free		6196695	1					
ANR	6196756	IdentifierDeclStatement	"RList * refs = r_anal_fcn_get_refs ( a , fcn ) ;"	109:1:2411:2453	6196695	6	True				
ANR	6196757	IdentifierDecl	"* refs = r_anal_fcn_get_refs ( a , fcn )"		6196695	0					
ANR	6196758	IdentifierDeclType	RList *		6196695	0					
ANR	6196759	Identifier	refs		6196695	1					
ANR	6196760	AssignmentExpression	"* refs = r_anal_fcn_get_refs ( a , fcn )"		6196695	2		=			
ANR	6196761	Identifier	refs		6196695	0					
ANR	6196762	CallExpression	"r_anal_fcn_get_refs ( a , fcn )"		6196695	1					
ANR	6196763	Callee	r_anal_fcn_get_refs		6196695	0					
ANR	6196764	Identifier	r_anal_fcn_get_refs		6196695	0					
ANR	6196765	ArgumentList	a		6196695	1					
ANR	6196766	Argument	a		6196695	0					
ANR	6196767	Identifier	a		6196695	0					
ANR	6196768	Argument	fcn		6196695	1					
ANR	6196769	Identifier	fcn		6196695	0					
ANR	6196770	Statement	r_list_foreach	110:1:2456:2469	6196695	7	True				
ANR	6196771	Statement	(	110:16:2471:2471	6196695	8	True				
ANR	6196772	Statement	refs	110:17:2472:2475	6196695	9	True				
ANR	6196773	Statement	","	110:21:2476:2476	6196695	10	True				
ANR	6196774	Statement	iter	110:23:2478:2481	6196695	11	True				
ANR	6196775	Statement	","	110:27:2482:2482	6196695	12	True				
ANR	6196776	Statement	refi	110:29:2484:2487	6196695	13	True				
ANR	6196777	Statement	)	110:33:2488:2488	6196695	14	True				
ANR	6196778	CompoundStatement		15:35:282:282	6196695	15					
ANR	6196779	IfStatement	if ( refi -> type == R_ANAL_REF_TYPE_CODE || refi -> type == R_ANAL_REF_TYPE_CALL )		6196695	0					
ANR	6196780	Condition	refi -> type == R_ANAL_REF_TYPE_CODE || refi -> type == R_ANAL_REF_TYPE_CALL	111:6:2498:2569	6196695	0	True				
ANR	6196781	OrExpression	refi -> type == R_ANAL_REF_TYPE_CODE || refi -> type == R_ANAL_REF_TYPE_CALL		6196695	0		||			
ANR	6196782	EqualityExpression	refi -> type == R_ANAL_REF_TYPE_CODE		6196695	0		==			
ANR	6196783	PtrMemberAccess	refi -> type		6196695	0					
ANR	6196784	Identifier	refi		6196695	0					
ANR	6196785	Identifier	type		6196695	1					
ANR	6196786	Identifier	R_ANAL_REF_TYPE_CODE		6196695	1					
ANR	6196787	EqualityExpression	refi -> type == R_ANAL_REF_TYPE_CALL		6196695	1		==			
ANR	6196788	PtrMemberAccess	refi -> type		6196695	0					
ANR	6196789	Identifier	refi		6196695	0					
ANR	6196790	Identifier	type		6196695	1					
ANR	6196791	Identifier	R_ANAL_REF_TYPE_CALL		6196695	1					
ANR	6196792	CompoundStatement		17:3:369:417	6196695	1					
ANR	6196793	IdentifierDeclStatement	"const char * flag = getRealRef ( core , refi -> addr ) ;"	112:3:2577:2625	6196695	0	True				
ANR	6196794	IdentifierDecl	"* flag = getRealRef ( core , refi -> addr )"		6196695	0					
ANR	6196795	IdentifierDeclType	const char *		6196695	0					
ANR	6196796	Identifier	flag		6196695	1					
ANR	6196797	AssignmentExpression	"* flag = getRealRef ( core , refi -> addr )"		6196695	2		=			
ANR	6196798	Identifier	flag		6196695	0					
ANR	6196799	CallExpression	"getRealRef ( core , refi -> addr )"		6196695	1					
ANR	6196800	Callee	getRealRef		6196695	0					
ANR	6196801	Identifier	getRealRef		6196695	0					
ANR	6196802	ArgumentList	core		6196695	1					
ANR	6196803	Argument	core		6196695	0					
ANR	6196804	Identifier	core		6196695	0					
ANR	6196805	Argument	refi -> addr		6196695	1					
ANR	6196806	PtrMemberAccess	refi -> addr		6196695	0					
ANR	6196807	Identifier	refi		6196695	0					
ANR	6196808	Identifier	addr		6196695	1					
ANR	6196809	IfStatement	if ( flag )		6196695	1					
ANR	6196810	Condition	flag	113:7:2634:2637	6196695	0	True				
ANR	6196811	Identifier	flag		6196695	0					
ANR	6196812	CompoundStatement		18:13:432:432	6196695	1					
ANR	6196813	ExpressionStatement	"r_list_append ( ret , r_str_newf ( flag ) )"	114:4:2646:2684	6196695	0	True				
ANR	6196814	CallExpression	"r_list_append ( ret , r_str_newf ( flag ) )"		6196695	0					
ANR	6196815	Callee	r_list_append		6196695	0					
ANR	6196816	Identifier	r_list_append		6196695	0					
ANR	6196817	ArgumentList	ret		6196695	1					
ANR	6196818	Argument	ret		6196695	0					
ANR	6196819	Identifier	ret		6196695	0					
ANR	6196820	Argument	r_str_newf ( flag )		6196695	1					
ANR	6196821	CallExpression	r_str_newf ( flag )		6196695	0					
ANR	6196822	Callee	r_str_newf		6196695	0					
ANR	6196823	Identifier	r_str_newf		6196695	0					
ANR	6196824	ArgumentList	flag		6196695	1					
ANR	6196825	Argument	flag		6196695	0					
ANR	6196826	Identifier	flag		6196695	0					
ANR	6196827	ExpressionStatement	r_list_free ( refs )	118:1:2699:2717	6196695	16	True				
ANR	6196828	CallExpression	r_list_free ( refs )		6196695	0					
ANR	6196829	Callee	r_list_free		6196695	0					
ANR	6196830	Identifier	r_list_free		6196695	0					
ANR	6196831	ArgumentList	refs		6196695	1					
ANR	6196832	Argument	refs		6196695	0					
ANR	6196833	Identifier	refs		6196695	0					
ANR	6196834	ReturnStatement	return ret ;	119:1:2720:2730	6196695	17	True				
ANR	6196835	Identifier	ret		6196695	0					
ANR	6196836	ReturnType	R_API RList *		6196695	1					
ANR	6196837	Identifier	r_sign_fcn_refs		6196695	2					
ANR	6196838	ParameterList	"RAnal * a , RAnalFunction * fcn"		6196695	3					
ANR	6196839	Parameter	RAnal * a	96:29:2177:2184	6196695	0	True				
ANR	6196840	ParameterType	RAnal *		6196695	0					
ANR	6196841	Identifier	a		6196695	1					
ANR	6196842	Parameter	RAnalFunction * fcn	96:39:2187:2204	6196695	1	True				
ANR	6196843	ParameterType	RAnalFunction *		6196695	0					
ANR	6196844	Identifier	fcn		6196695	1					
ANR	6196845	CFGEntryNode	ENTRY		6196695		True				
ANR	6196846	CFGExitNode	EXIT		6196695		True				
ANR	6196847	Symbol	ret		6196695						
ANR	6196848	Symbol	a		6196695						
ANR	6196849	Symbol	NULL		6196695						
ANR	6196850	Symbol	refi		6196695						
ANR	6196851	Symbol	a -> coreb . core		6196695						
ANR	6196852	Symbol	flag		6196695						
ANR	6196853	Symbol	r_list_newf		6196695						
ANR	6196854	Symbol	a -> coreb		6196695						
ANR	6196855	Symbol	iter		6196695						
ANR	6196856	Symbol	getRealRef		6196695						
ANR	6196857	Symbol	* a		6196695						
ANR	6196858	Symbol	r_str_newf		6196695						
ANR	6196859	Symbol	r_anal_fcn_get_refs		6196695						
ANR	6196860	Symbol	R_ANAL_REF_TYPE_CODE		6196695						
ANR	6196861	Symbol	* refi		6196695						
ANR	6196862	Symbol	fcn		6196695						
ANR	6196863	Symbol	core		6196695						
ANR	6196864	Symbol	refi -> type		6196695						
ANR	6196865	Symbol	refi -> addr		6196695						
ANR	6196866	Symbol	refs		6196695						
ANR	6196867	Symbol	free		6196695						
ANR	6196868	Symbol	R_ANAL_REF_TYPE_CALL		6196695						
ANR	6196869	Function	r_sign_deserialize	122:0:2735:6479							
ANR	6196870	FunctionDef	"r_sign_deserialize (RAnal * a , RSignItem * it , const char * k , const char * v)"		6196869	0					
ANR	6196871	CompoundStatement		122:85:2820:6479	6196869	0					
ANR	6196872	IdentifierDeclStatement	char * refs = NULL ;	123:1:2823:2840	6196869	0	True				
ANR	6196873	IdentifierDecl	* refs = NULL		6196869	0					
ANR	6196874	IdentifierDeclType	char *		6196869	0					
ANR	6196875	Identifier	refs		6196869	1					
ANR	6196876	AssignmentExpression	* refs = NULL		6196869	2		=			
ANR	6196877	Identifier	NULL		6196869	0					
ANR	6196878	Identifier	NULL		6196869	1					
ANR	6196879	IdentifierDeclStatement	char * vars = NULL ;	124:1:2843:2860	6196869	1	True				
ANR	6196880	IdentifierDecl	* vars = NULL		6196869	0					
ANR	6196881	IdentifierDeclType	char *		6196869	0					
ANR	6196882	Identifier	vars		6196869	1					
ANR	6196883	AssignmentExpression	* vars = NULL		6196869	2		=			
ANR	6196884	Identifier	NULL		6196869	0					
ANR	6196885	Identifier	NULL		6196869	1					
ANR	6196886	IdentifierDeclStatement	const char * token = NULL ;	125:1:2863:2887	6196869	2	True				
ANR	6196887	IdentifierDecl	* token = NULL		6196869	0					
ANR	6196888	IdentifierDeclType	const char *		6196869	0					
ANR	6196889	Identifier	token		6196869	1					
ANR	6196890	AssignmentExpression	* token = NULL		6196869	2		=			
ANR	6196891	Identifier	NULL		6196869	0					
ANR	6196892	Identifier	NULL		6196869	1					
ANR	6196893	IdentifierDeclStatement	"int i = 0 , n = 0 , nrefs = 0 , nvars = 0 , size = 0 , w = 0 ;"	126:1:2890:2945	6196869	3	True				
ANR	6196894	IdentifierDecl	i = 0		6196869	0					
ANR	6196895	IdentifierDeclType	int		6196869	0					
ANR	6196896	Identifier	i		6196869	1					
ANR	6196897	AssignmentExpression	i = 0		6196869	2		=			
ANR	6196898	Identifier	i		6196869	0					
ANR	6196899	PrimaryExpression	0		6196869	1					
ANR	6196900	IdentifierDecl	n = 0		6196869	1					
ANR	6196901	IdentifierDeclType	int		6196869	0					
ANR	6196902	Identifier	n		6196869	1					
ANR	6196903	AssignmentExpression	n = 0		6196869	2		=			
ANR	6196904	Identifier	n		6196869	0					
ANR	6196905	PrimaryExpression	0		6196869	1					
ANR	6196906	IdentifierDecl	nrefs = 0		6196869	2					
ANR	6196907	IdentifierDeclType	int		6196869	0					
ANR	6196908	Identifier	nrefs		6196869	1					
ANR	6196909	AssignmentExpression	nrefs = 0		6196869	2		=			
ANR	6196910	Identifier	nrefs		6196869	0					
ANR	6196911	PrimaryExpression	0		6196869	1					
ANR	6196912	IdentifierDecl	nvars = 0		6196869	3					
ANR	6196913	IdentifierDeclType	int		6196869	0					
ANR	6196914	Identifier	nvars		6196869	1					
ANR	6196915	AssignmentExpression	nvars = 0		6196869	2		=			
ANR	6196916	Identifier	nvars		6196869	0					
ANR	6196917	PrimaryExpression	0		6196869	1					
ANR	6196918	IdentifierDecl	size = 0		6196869	4					
ANR	6196919	IdentifierDeclType	int		6196869	0					
ANR	6196920	Identifier	size		6196869	1					
ANR	6196921	AssignmentExpression	size = 0		6196869	2		=			
ANR	6196922	Identifier	size		6196869	0					
ANR	6196923	PrimaryExpression	0		6196869	1					
ANR	6196924	IdentifierDecl	w = 0		6196869	5					
ANR	6196925	IdentifierDeclType	int		6196869	0					
ANR	6196926	Identifier	w		6196869	1					
ANR	6196927	AssignmentExpression	w = 0		6196869	2		=			
ANR	6196928	Identifier	w		6196869	0					
ANR	6196929	PrimaryExpression	0		6196869	1					
ANR	6196930	ExpressionStatement	"r_return_val_if_fail ( a && it && k && v , false )"	128:1:2949:2996	6196869	4	True				
ANR	6196931	CallExpression	"r_return_val_if_fail ( a && it && k && v , false )"		6196869	0					
ANR	6196932	Callee	r_return_val_if_fail		6196869	0					
ANR	6196933	Identifier	r_return_val_if_fail		6196869	0					
ANR	6196934	ArgumentList	a && it && k && v		6196869	1					
ANR	6196935	Argument	a && it && k && v		6196869	0					
ANR	6196936	AndExpression	a && it && k && v		6196869	0		&&			
ANR	6196937	Identifier	a		6196869	0					
ANR	6196938	AndExpression	it && k && v		6196869	1		&&			
ANR	6196939	Identifier	it		6196869	0					
ANR	6196940	AndExpression	k && v		6196869	1		&&			
ANR	6196941	Identifier	k		6196869	0					
ANR	6196942	Identifier	v		6196869	1					
ANR	6196943	Argument	false		6196869	1					
ANR	6196944	Identifier	false		6196869	0					
ANR	6196945	IdentifierDeclStatement	char * k2 = r_str_new ( k ) ;	130:1:3000:3024	6196869	5	True				
ANR	6196946	IdentifierDecl	* k2 = r_str_new ( k )		6196869	0					
ANR	6196947	IdentifierDeclType	char *		6196869	0					
ANR	6196948	Identifier	k2		6196869	1					
ANR	6196949	AssignmentExpression	* k2 = r_str_new ( k )		6196869	2		=			
ANR	6196950	Identifier	k2		6196869	0					
ANR	6196951	CallExpression	r_str_new ( k )		6196869	1					
ANR	6196952	Callee	r_str_new		6196869	0					
ANR	6196953	Identifier	r_str_new		6196869	0					
ANR	6196954	ArgumentList	k		6196869	1					
ANR	6196955	Argument	k		6196869	0					
ANR	6196956	Identifier	k		6196869	0					
ANR	6196957	IdentifierDeclStatement	char * v2 = r_str_new ( v ) ;	131:1:3027:3051	6196869	6	True				
ANR	6196958	IdentifierDecl	* v2 = r_str_new ( v )		6196869	0					
ANR	6196959	IdentifierDeclType	char *		6196869	0					
ANR	6196960	Identifier	v2		6196869	1					
ANR	6196961	AssignmentExpression	* v2 = r_str_new ( v )		6196869	2		=			
ANR	6196962	Identifier	v2		6196869	0					
ANR	6196963	CallExpression	r_str_new ( v )		6196869	1					
ANR	6196964	Callee	r_str_new		6196869	0					
ANR	6196965	Identifier	r_str_new		6196869	0					
ANR	6196966	ArgumentList	v		6196869	1					
ANR	6196967	Argument	v		6196869	0					
ANR	6196968	Identifier	v		6196869	0					
ANR	6196969	IfStatement	if ( ! k2 || ! v2 )		6196869	7					
ANR	6196970	Condition	! k2 || ! v2	132:5:3058:3067	6196869	0	True				
ANR	6196971	OrExpression	! k2 || ! v2		6196869	0		||			
ANR	6196972	UnaryOperationExpression	! k2		6196869	0					
ANR	6196973	UnaryOperator	!		6196869	0					
ANR	6196974	Identifier	k2		6196869	1					
ANR	6196975	UnaryOperationExpression	! v2		6196869	1					
ANR	6196976	UnaryOperator	!		6196869	0					
ANR	6196977	Identifier	v2		6196869	1					
ANR	6196978	CompoundStatement		11:17:249:249	6196869	1					
ANR	6196979	ExpressionStatement	free ( k2 )	133:2:3074:3083	6196869	0	True				
ANR	6196980	CallExpression	free ( k2 )		6196869	0					
ANR	6196981	Callee	free		6196869	0					
ANR	6196982	Identifier	free		6196869	0					
ANR	6196983	ArgumentList	k2		6196869	1					
ANR	6196984	Argument	k2		6196869	0					
ANR	6196985	Identifier	k2		6196869	0					
ANR	6196986	ExpressionStatement	free ( v2 )	134:2:3087:3096	6196869	1	True				
ANR	6196987	CallExpression	free ( v2 )		6196869	0					
ANR	6196988	Callee	free		6196869	0					
ANR	6196989	Identifier	free		6196869	0					
ANR	6196990	ArgumentList	v2		6196869	1					
ANR	6196991	Argument	v2		6196869	0					
ANR	6196992	Identifier	v2		6196869	0					
ANR	6196993	ReturnStatement	return false ;	135:2:3100:3112	6196869	2	True				
ANR	6196994	Identifier	false		6196869	0					
ANR	6196995	ExpressionStatement	"n = r_str_split ( k2 , '|' )"	139:1:3156:3181	6196869	8	True				
ANR	6196996	AssignmentExpression	"n = r_str_split ( k2 , '|' )"		6196869	0		=			
ANR	6196997	Identifier	n		6196869	0					
ANR	6196998	CallExpression	"r_str_split ( k2 , '|' )"		6196869	1					
ANR	6196999	Callee	r_str_split		6196869	0					
ANR	6197000	Identifier	r_str_split		6196869	0					
ANR	6197001	ArgumentList	k2		6196869	1					
ANR	6197002	Argument	k2		6196869	0					
ANR	6197003	Identifier	k2		6196869	0					
ANR	6197004	Argument	'|'		6196869	1					
ANR	6197005	PrimaryExpression	'|'		6196869	0					
ANR	6197006	IfStatement	if ( n != 3 )		6196869	9					
ANR	6197007	Condition	n != 3	140:5:3188:3193	6196869	0	True				
ANR	6197008	EqualityExpression	n != 3		6196869	0		!=			
ANR	6197009	Identifier	n		6196869	0					
ANR	6197010	PrimaryExpression	3		6196869	1					
ANR	6197011	CompoundStatement		19:13:375:375	6196869	1					
ANR	6197012	GotoStatement	goto out ;	141:2:3200:3208	6196869	0	True				
ANR	6197013	Identifier	out		6196869	0					
ANR	6197014	IfStatement	"if ( strcmp ( r_str_word_get0 ( k2 , 0 ) , ""zign"" ) )"		6196869	10					
ANR	6197015	Condition	"strcmp ( r_str_word_get0 ( k2 , 0 ) , ""zign"" )"	143:5:3218:3257	6196869	0	True				
ANR	6197016	CallExpression	"strcmp ( r_str_word_get0 ( k2 , 0 ) , ""zign"" )"		6196869	0					
ANR	6197017	Callee	strcmp		6196869	0					
ANR	6197018	Identifier	strcmp		6196869	0					
ANR	6197019	ArgumentList	"r_str_word_get0 ( k2 , 0 )"		6196869	1					
ANR	6197020	Argument	"r_str_word_get0 ( k2 , 0 )"		6196869	0					
ANR	6197021	CallExpression	"r_str_word_get0 ( k2 , 0 )"		6196869	0					
ANR	6197022	Callee	r_str_word_get0		6196869	0					
ANR	6197023	Identifier	r_str_word_get0		6196869	0					
ANR	6197024	ArgumentList	k2		6196869	1					
ANR	6197025	Argument	k2		6196869	0					
ANR	6197026	Identifier	k2		6196869	0					
ANR	6197027	Argument	0		6196869	1					
ANR	6197028	PrimaryExpression	0		6196869	0					
ANR	6197029	Argument	"""zign"""		6196869	1					
ANR	6197030	PrimaryExpression	"""zign"""		6196869	0					
ANR	6197031	CompoundStatement		22:47:439:439	6196869	1					
ANR	6197032	ExpressionStatement	"eprintf ( ""Invalid entry in the zigns database\\n"" )"	144:2:3264:3313	6196869	0	True				
ANR	6197033	CallExpression	"eprintf ( ""Invalid entry in the zigns database\\n"" )"		6196869	0					
ANR	6197034	Callee	eprintf		6196869	0					
ANR	6197035	Identifier	eprintf		6196869	0					
ANR	6197036	ArgumentList	"""Invalid entry in the zigns database\\n"""		6196869	1					
ANR	6197037	Argument	"""Invalid entry in the zigns database\\n"""		6196869	0					
ANR	6197038	PrimaryExpression	"""Invalid entry in the zigns database\\n"""		6196869	0					
ANR	6197039	GotoStatement	goto out ;	145:2:3317:3325	6196869	1	True				
ANR	6197040	Identifier	out		6196869	0					
ANR	6197041	ExpressionStatement	"it -> space = r_spaces_add ( & a -> zign_spaces , r_str_word_get0 ( k2 , 1 ) )"	149:1:3346:3413	6196869	11	True				
ANR	6197042	AssignmentExpression	"it -> space = r_spaces_add ( & a -> zign_spaces , r_str_word_get0 ( k2 , 1 ) )"		6196869	0		=			
ANR	6197043	PtrMemberAccess	it -> space		6196869	0					
ANR	6197044	Identifier	it		6196869	0					
ANR	6197045	Identifier	space		6196869	1					
ANR	6197046	CallExpression	"r_spaces_add ( & a -> zign_spaces , r_str_word_get0 ( k2 , 1 ) )"		6196869	1					
ANR	6197047	Callee	r_spaces_add		6196869	0					
ANR	6197048	Identifier	r_spaces_add		6196869	0					
ANR	6197049	ArgumentList	& a -> zign_spaces		6196869	1					
ANR	6197050	Argument	& a -> zign_spaces		6196869	0					
ANR	6197051	UnaryOperationExpression	& a -> zign_spaces		6196869	0					
ANR	6197052	UnaryOperator	&		6196869	0					
ANR	6197053	PtrMemberAccess	a -> zign_spaces		6196869	1					
ANR	6197054	Identifier	a		6196869	0					
ANR	6197055	Identifier	zign_spaces		6196869	1					
ANR	6197056	Argument	"r_str_word_get0 ( k2 , 1 )"		6196869	1					
ANR	6197057	CallExpression	"r_str_word_get0 ( k2 , 1 )"		6196869	0					
ANR	6197058	Callee	r_str_word_get0		6196869	0					
ANR	6197059	Identifier	r_str_word_get0		6196869	0					
ANR	6197060	ArgumentList	k2		6196869	1					
ANR	6197061	Argument	k2		6196869	0					
ANR	6197062	Identifier	k2		6196869	0					
ANR	6197063	Argument	1		6196869	1					
ANR	6197064	PrimaryExpression	1		6196869	0					
ANR	6197065	ExpressionStatement	"it -> name = r_str_new ( r_str_word_get0 ( k2 , 2 ) )"	152:1:3430:3476	6196869	12	True				
ANR	6197066	AssignmentExpression	"it -> name = r_str_new ( r_str_word_get0 ( k2 , 2 ) )"		6196869	0		=			
ANR	6197067	PtrMemberAccess	it -> name		6196869	0					
ANR	6197068	Identifier	it		6196869	0					
ANR	6197069	Identifier	name		6196869	1					
ANR	6197070	CallExpression	"r_str_new ( r_str_word_get0 ( k2 , 2 ) )"		6196869	1					
ANR	6197071	Callee	r_str_new		6196869	0					
ANR	6197072	Identifier	r_str_new		6196869	0					
ANR	6197073	ArgumentList	"r_str_word_get0 ( k2 , 2 )"		6196869	1					
ANR	6197074	Argument	"r_str_word_get0 ( k2 , 2 )"		6196869	0					
ANR	6197075	CallExpression	"r_str_word_get0 ( k2 , 2 )"		6196869	0					
ANR	6197076	Callee	r_str_word_get0		6196869	0					
ANR	6197077	Identifier	r_str_word_get0		6196869	0					
ANR	6197078	ArgumentList	k2		6196869	1					
ANR	6197079	Argument	k2		6196869	0					
ANR	6197080	Identifier	k2		6196869	0					
ANR	6197081	Argument	2		6196869	1					
ANR	6197082	PrimaryExpression	2		6196869	0					
ANR	6197083	ExpressionStatement	"n = r_str_split ( v2 , '|' )"	156:1:3571:3596	6196869	13	True				
ANR	6197084	AssignmentExpression	"n = r_str_split ( v2 , '|' )"		6196869	0		=			
ANR	6197085	Identifier	n		6196869	0					
ANR	6197086	CallExpression	"r_str_split ( v2 , '|' )"		6196869	1					
ANR	6197087	Callee	r_str_split		6196869	0					
ANR	6197088	Identifier	r_str_split		6196869	0					
ANR	6197089	ArgumentList	v2		6196869	1					
ANR	6197090	Argument	v2		6196869	0					
ANR	6197091	Identifier	v2		6196869	0					
ANR	6197092	Argument	'|'		6196869	1					
ANR	6197093	PrimaryExpression	'|'		6196869	0					
ANR	6197094	ForStatement	for ( w = 0 ; w < n ; w ++ )		6196869	14					
ANR	6197095	ForInit	w = 0 ;	157:6:3604:3609	6196869	0	True				
ANR	6197096	AssignmentExpression	w = 0		6196869	0		=			
ANR	6197097	Identifier	w		6196869	0					
ANR	6197098	PrimaryExpression	0		6196869	1					
ANR	6197099	Condition	w < n	157:13:3611:3615	6196869	1	True				
ANR	6197100	RelationalExpression	w < n		6196869	0		<			
ANR	6197101	Identifier	w		6196869	0					
ANR	6197102	Identifier	n		6196869	1					
ANR	6197103	PostIncDecOperationExpression	w ++	157:20:3618:3620	6196869	2	True				
ANR	6197104	Identifier	w		6196869	0					
ANR	6197105	IncDec	++		6196869	1					
ANR	6197106	CompoundStatement		52:2:1098:1129	6196869	3					
ANR	6197107	IdentifierDeclStatement	"const char * word = r_str_word_get0 ( v2 , w ) ;"	158:2:3627:3669	6196869	0	True				
ANR	6197108	IdentifierDecl	"* word = r_str_word_get0 ( v2 , w )"		6196869	0					
ANR	6197109	IdentifierDeclType	const char *		6196869	0					
ANR	6197110	Identifier	word		6196869	1					
ANR	6197111	AssignmentExpression	"* word = r_str_word_get0 ( v2 , w )"		6196869	2		=			
ANR	6197112	Identifier	word		6196869	0					
ANR	6197113	CallExpression	"r_str_word_get0 ( v2 , w )"		6196869	1					
ANR	6197114	Callee	r_str_word_get0		6196869	0					
ANR	6197115	Identifier	r_str_word_get0		6196869	0					
ANR	6197116	ArgumentList	v2		6196869	1					
ANR	6197117	Argument	v2		6196869	0					
ANR	6197118	Identifier	v2		6196869	0					
ANR	6197119	Argument	w		6196869	1					
ANR	6197120	Identifier	w		6196869	0					
ANR	6197121	IfStatement	if ( ! word )		6196869	1					
ANR	6197122	Condition	! word	159:6:3677:3681	6196869	0	True				
ANR	6197123	UnaryOperationExpression	! word		6196869	0					
ANR	6197124	UnaryOperator	!		6196869	0					
ANR	6197125	Identifier	word		6196869	1					
ANR	6197126	CompoundStatement		38:13:863:863	6196869	1					
ANR	6197127	BreakStatement	break ;	160:3:3689:3694	6196869	0	True				
ANR	6197128	IfStatement	if ( ! * word )		6196869	2					
ANR	6197129	Condition	! * word	162:6:3706:3711	6196869	0	True				
ANR	6197130	UnaryOperationExpression	! * word		6196869	0					
ANR	6197131	UnaryOperator	!		6196869	0					
ANR	6197132	UnaryOperationExpression	* word		6196869	1					
ANR	6197133	UnaryOperator	*		6196869	0					
ANR	6197134	Identifier	word		6196869	1					
ANR	6197135	CompoundStatement		41:14:893:893	6196869	1					
ANR	6197136	ContinueStatement	continue ;	163:3:3719:3727	6196869	0	True				
ANR	6197137	ExpressionStatement	token = word + 2	165:2:3735:3751	6196869	3	True				
ANR	6197138	AssignmentExpression	token = word + 2		6196869	0		=			
ANR	6197139	Identifier	token		6196869	0					
ANR	6197140	AdditiveExpression	word + 2		6196869	1		+			
ANR	6197141	Identifier	word		6196869	0					
ANR	6197142	PrimaryExpression	2		6196869	1					
ANR	6197143	IfStatement	"if ( ! strcmp ( word , ""*"" ) )"		6196869	4					
ANR	6197144	Condition	"! strcmp ( word , ""*"" )"	166:6:3759:3777	6196869	0	True				
ANR	6197145	UnaryOperationExpression	"! strcmp ( word , ""*"" )"		6196869	0					
ANR	6197146	UnaryOperator	!		6196869	0					
ANR	6197147	CallExpression	"strcmp ( word , ""*"" )"		6196869	1					
ANR	6197148	Callee	strcmp		6196869	0					
ANR	6197149	Identifier	strcmp		6196869	0					
ANR	6197150	ArgumentList	word		6196869	1					
ANR	6197151	Argument	word		6196869	0					
ANR	6197152	Identifier	word		6196869	0					
ANR	6197153	Argument	"""*"""		6196869	1					
ANR	6197154	PrimaryExpression	"""*"""		6196869	0					
ANR	6197155	CompoundStatement		45:27:959:959	6196869	1					
ANR	6197156	ContinueStatement	continue ;	167:3:3785:3793	6196869	0	True				
ANR	6197157	IfStatement	if ( strlen ( word ) < 3 || word [ 1 ] != ':' )		6196869	5					
ANR	6197158	Condition	strlen ( word ) < 3 || word [ 1 ] != ':'	169:6:3805:3839	6196869	0	True				
ANR	6197159	OrExpression	strlen ( word ) < 3 || word [ 1 ] != ':'		6196869	0		||			
ANR	6197160	RelationalExpression	strlen ( word ) < 3		6196869	0		<			
ANR	6197161	CallExpression	strlen ( word )		6196869	0					
ANR	6197162	Callee	strlen		6196869	0					
ANR	6197163	Identifier	strlen		6196869	0					
ANR	6197164	ArgumentList	word		6196869	1					
ANR	6197165	Argument	word		6196869	0					
ANR	6197166	Identifier	word		6196869	0					
ANR	6197167	PrimaryExpression	3		6196869	1					
ANR	6197168	EqualityExpression	word [ 1 ] != ':'		6196869	1		!=			
ANR	6197169	ArrayIndexing	word [ 1 ]		6196869	0					
ANR	6197170	Identifier	word		6196869	0					
ANR	6197171	PrimaryExpression	1		6196869	1					
ANR	6197172	PrimaryExpression	':'		6196869	1					
ANR	6197173	CompoundStatement		48:43:1021:1021	6196869	1					
ANR	6197174	ExpressionStatement	"eprintf ( ""Corrupted zignatures database (%s)\\n"" , word )"	170:3:3847:3901	6196869	0	True				
ANR	6197175	CallExpression	"eprintf ( ""Corrupted zignatures database (%s)\\n"" , word )"		6196869	0					
ANR	6197176	Callee	eprintf		6196869	0					
ANR	6197177	Identifier	eprintf		6196869	0					
ANR	6197178	ArgumentList	"""Corrupted zignatures database (%s)\\n"""		6196869	1					
ANR	6197179	Argument	"""Corrupted zignatures database (%s)\\n"""		6196869	0					
ANR	6197180	PrimaryExpression	"""Corrupted zignatures database (%s)\\n"""		6196869	0					
ANR	6197181	Argument	word		6196869	1					
ANR	6197182	Identifier	word		6196869	0					
ANR	6197183	BreakStatement	break ;	171:3:3906:3911	6196869	1	True				
ANR	6197184	IdentifierDeclStatement	RSignType st = ( RSignType ) * word ;	173:2:3919:3950	6196869	6	True				
ANR	6197185	IdentifierDecl	st = ( RSignType ) * word		6196869	0					
ANR	6197186	IdentifierDeclType	RSignType		6196869	0					
ANR	6197187	Identifier	st		6196869	1					
ANR	6197188	AssignmentExpression	st = ( RSignType ) * word		6196869	2		=			
ANR	6197189	Identifier	st		6196869	0					
ANR	6197190	CastExpression	( RSignType ) * word		6196869	1					
ANR	6197191	CastTarget	RSignType		6196869	0					
ANR	6197192	UnaryOperationExpression	* word		6196869	1					
ANR	6197193	UnaryOperator	*		6196869	0					
ANR	6197194	Identifier	word		6196869	1					
ANR	6197195	SwitchStatement	switch ( st )		6196869	7					
ANR	6197196	Condition	st	174:10:3962:3963	6196869	0	True				
ANR	6197197	Identifier	st		6196869	0					
ANR	6197198	CompoundStatement		53:14:1145:1145	6196869	1					
ANR	6197199	Label	case R_SIGN_ANAL :	175:2:3970:3986	6196869	0	True				
ANR	6197200	Identifier	R_SIGN_ANAL		6196869	0					
ANR	6197201	ExpressionStatement	"eprintf ( ""Unsupported\\n"" )"	176:3:3991:4016	6196869	1	True				
ANR	6197202	CallExpression	"eprintf ( ""Unsupported\\n"" )"		6196869	0					
ANR	6197203	Callee	eprintf		6196869	0					
ANR	6197204	Identifier	eprintf		6196869	0					
ANR	6197205	ArgumentList	"""Unsupported\\n"""		6196869	1					
ANR	6197206	Argument	"""Unsupported\\n"""		6196869	0					
ANR	6197207	PrimaryExpression	"""Unsupported\\n"""		6196869	0					
ANR	6197208	BreakStatement	break ;	177:3:4021:4026	6196869	2	True				
ANR	6197209	Label	case R_SIGN_NAME :	178:2:4030:4046	6196869	3	True				
ANR	6197210	Identifier	R_SIGN_NAME		6196869	0					
ANR	6197211	ExpressionStatement	it -> realname = strdup ( token )	179:3:4051:4080	6196869	4	True				
ANR	6197212	AssignmentExpression	it -> realname = strdup ( token )		6196869	0		=			
ANR	6197213	PtrMemberAccess	it -> realname		6196869	0					
ANR	6197214	Identifier	it		6196869	0					
ANR	6197215	Identifier	realname		6196869	1					
ANR	6197216	CallExpression	strdup ( token )		6196869	1					
ANR	6197217	Callee	strdup		6196869	0					
ANR	6197218	Identifier	strdup		6196869	0					
ANR	6197219	ArgumentList	token		6196869	1					
ANR	6197220	Argument	token		6196869	0					
ANR	6197221	Identifier	token		6196869	0					
ANR	6197222	BreakStatement	break ;	180:3:4085:4090	6196869	5	True				
ANR	6197223	Label	case R_SIGN_COMMENT :	181:2:4094:4113	6196869	6	True				
ANR	6197224	Identifier	R_SIGN_COMMENT		6196869	0					
ANR	6197225	ExpressionStatement	it -> comment = strdup ( token )	182:3:4118:4146	6196869	7	True				
ANR	6197226	AssignmentExpression	it -> comment = strdup ( token )		6196869	0		=			
ANR	6197227	PtrMemberAccess	it -> comment		6196869	0					
ANR	6197228	Identifier	it		6196869	0					
ANR	6197229	Identifier	comment		6196869	1					
ANR	6197230	CallExpression	strdup ( token )		6196869	1					
ANR	6197231	Callee	strdup		6196869	0					
ANR	6197232	Identifier	strdup		6196869	0					
ANR	6197233	ArgumentList	token		6196869	1					
ANR	6197234	Argument	token		6196869	0					
ANR	6197235	Identifier	token		6196869	0					
ANR	6197236	BreakStatement	break ;	183:3:4151:4156	6196869	8	True				
ANR	6197237	Label	case R_SIGN_GRAPH :	184:2:4160:4177	6196869	9	True				
ANR	6197238	Identifier	R_SIGN_GRAPH		6196869	0					
ANR	6197239	IfStatement	if ( strlen ( token ) == 2 * sizeof ( RSignGraph ) )		6196869	10					
ANR	6197240	Condition	strlen ( token ) == 2 * sizeof ( RSignGraph )	185:7:4186:4226	6196869	0	True				
ANR	6197241	EqualityExpression	strlen ( token ) == 2 * sizeof ( RSignGraph )		6196869	0		==			
ANR	6197242	CallExpression	strlen ( token )		6196869	0					
ANR	6197243	Callee	strlen		6196869	0					
ANR	6197244	Identifier	strlen		6196869	0					
ANR	6197245	ArgumentList	token		6196869	1					
ANR	6197246	Argument	token		6196869	0					
ANR	6197247	Identifier	token		6196869	0					
ANR	6197248	MultiplicativeExpression	2 * sizeof ( RSignGraph )		6196869	1		*			
ANR	6197249	PrimaryExpression	2		6196869	0					
ANR	6197250	SizeofExpression	sizeof ( RSignGraph )		6196869	1					
ANR	6197251	Sizeof	sizeof		6196869	0					
ANR	6197252	SizeofOperand	RSignGraph		6196869	1					
ANR	6197253	CompoundStatement		64:50:1408:1408	6196869	1					
ANR	6197254	ExpressionStatement	it -> graph = R_NEW0 ( RSignGraph )	186:4:4235:4266	6196869	0	True				
ANR	6197255	AssignmentExpression	it -> graph = R_NEW0 ( RSignGraph )		6196869	0		=			
ANR	6197256	PtrMemberAccess	it -> graph		6196869	0					
ANR	6197257	Identifier	it		6196869	0					
ANR	6197258	Identifier	graph		6196869	1					
ANR	6197259	CallExpression	R_NEW0 ( RSignGraph )		6196869	1					
ANR	6197260	Callee	R_NEW0		6196869	0					
ANR	6197261	Identifier	R_NEW0		6196869	0					
ANR	6197262	ArgumentList	RSignGraph		6196869	1					
ANR	6197263	Argument	RSignGraph		6196869	0					
ANR	6197264	Identifier	RSignGraph		6196869	0					
ANR	6197265	IfStatement	if ( it -> graph )		6196869	1					
ANR	6197266	Condition	it -> graph	187:8:4276:4284	6196869	0	True				
ANR	6197267	PtrMemberAccess	it -> graph		6196869	0					
ANR	6197268	Identifier	it		6196869	0					
ANR	6197269	Identifier	graph		6196869	1					
ANR	6197270	CompoundStatement		66:19:1466:1466	6196869	1					
ANR	6197271	ExpressionStatement	"r_hex_str2bin ( token , ( ut8 * ) it -> graph )"	188:5:4294:4334	6196869	0	True				
ANR	6197272	CallExpression	"r_hex_str2bin ( token , ( ut8 * ) it -> graph )"		6196869	0					
ANR	6197273	Callee	r_hex_str2bin		6196869	0					
ANR	6197274	Identifier	r_hex_str2bin		6196869	0					
ANR	6197275	ArgumentList	token		6196869	1					
ANR	6197276	Argument	token		6196869	0					
ANR	6197277	Identifier	token		6196869	0					
ANR	6197278	Argument	( ut8 * ) it -> graph		6196869	1					
ANR	6197279	CastExpression	( ut8 * ) it -> graph		6196869	0					
ANR	6197280	CastTarget	ut8 *		6196869	0					
ANR	6197281	PtrMemberAccess	it -> graph		6196869	1					
ANR	6197282	Identifier	it		6196869	0					
ANR	6197283	Identifier	graph		6196869	1					
ANR	6197284	BreakStatement	break ;	191:3:4350:4355	6196869	11	True				
ANR	6197285	Label	case R_SIGN_OFFSET :	192:2:4359:4377	6196869	12	True				
ANR	6197286	Identifier	R_SIGN_OFFSET		6196869	0					
ANR	6197287	ExpressionStatement	it -> addr = atoll ( token )	193:3:4382:4406	6196869	13	True				
ANR	6197288	AssignmentExpression	it -> addr = atoll ( token )		6196869	0		=			
ANR	6197289	PtrMemberAccess	it -> addr		6196869	0					
ANR	6197290	Identifier	it		6196869	0					
ANR	6197291	Identifier	addr		6196869	1					
ANR	6197292	CallExpression	atoll ( token )		6196869	1					
ANR	6197293	Callee	atoll		6196869	0					
ANR	6197294	Identifier	atoll		6196869	0					
ANR	6197295	ArgumentList	token		6196869	1					
ANR	6197296	Argument	token		6196869	0					
ANR	6197297	Identifier	token		6196869	0					
ANR	6197298	BreakStatement	break ;	194:3:4411:4416	6196869	14	True				
ANR	6197299	Label	case R_SIGN_REFS :	195:2:4420:4436	6196869	15	True				
ANR	6197300	Identifier	R_SIGN_REFS		6196869	0					
ANR	6197301	ExpressionStatement	refs = r_str_new ( token )	196:3:4441:4465	6196869	16	True				
ANR	6197302	AssignmentExpression	refs = r_str_new ( token )		6196869	0		=			
ANR	6197303	Identifier	refs		6196869	0					
ANR	6197304	CallExpression	r_str_new ( token )		6196869	1					
ANR	6197305	Callee	r_str_new		6196869	0					
ANR	6197306	Identifier	r_str_new		6196869	0					
ANR	6197307	ArgumentList	token		6196869	1					
ANR	6197308	Argument	token		6196869	0					
ANR	6197309	Identifier	token		6196869	0					
ANR	6197310	ExpressionStatement	"nrefs = r_str_split ( refs , ',' )"	197:3:4470:4501	6196869	17	True				
ANR	6197311	AssignmentExpression	"nrefs = r_str_split ( refs , ',' )"		6196869	0		=			
ANR	6197312	Identifier	nrefs		6196869	0					
ANR	6197313	CallExpression	"r_str_split ( refs , ',' )"		6196869	1					
ANR	6197314	Callee	r_str_split		6196869	0					
ANR	6197315	Identifier	r_str_split		6196869	0					
ANR	6197316	ArgumentList	refs		6196869	1					
ANR	6197317	Argument	refs		6196869	0					
ANR	6197318	Identifier	refs		6196869	0					
ANR	6197319	Argument	"','"		6196869	1					
ANR	6197320	PrimaryExpression	"','"		6196869	0					
ANR	6197321	IfStatement	if ( nrefs > 0 )		6196869	18					
ANR	6197322	Condition	nrefs > 0	198:7:4510:4518	6196869	0	True				
ANR	6197323	RelationalExpression	nrefs > 0		6196869	0		>			
ANR	6197324	Identifier	nrefs		6196869	0					
ANR	6197325	PrimaryExpression	0		6196869	1					
ANR	6197326	CompoundStatement		77:18:1700:1700	6196869	1					
ANR	6197327	ExpressionStatement	it -> refs = r_list_newf ( ( RListFree ) free )	199:4:4527:4568	6196869	0	True				
ANR	6197328	AssignmentExpression	it -> refs = r_list_newf ( ( RListFree ) free )		6196869	0		=			
ANR	6197329	PtrMemberAccess	it -> refs		6196869	0					
ANR	6197330	Identifier	it		6196869	0					
ANR	6197331	Identifier	refs		6196869	1					
ANR	6197332	CallExpression	r_list_newf ( ( RListFree ) free )		6196869	1					
ANR	6197333	Callee	r_list_newf		6196869	0					
ANR	6197334	Identifier	r_list_newf		6196869	0					
ANR	6197335	ArgumentList	( RListFree ) free		6196869	1					
ANR	6197336	Argument	( RListFree ) free		6196869	0					
ANR	6197337	CastExpression	( RListFree ) free		6196869	0					
ANR	6197338	CastTarget	RListFree		6196869	0					
ANR	6197339	Identifier	free		6196869	1					
ANR	6197340	ForStatement	for ( i = 0 ; i < nrefs ; i ++ )		6196869	1					
ANR	6197341	ForInit	i = 0 ;	200:9:4579:4584	6196869	0	True				
ANR	6197342	AssignmentExpression	i = 0		6196869	0		=			
ANR	6197343	Identifier	i		6196869	0					
ANR	6197344	PrimaryExpression	0		6196869	1					
ANR	6197345	Condition	i < nrefs	200:16:4586:4594	6196869	1	True				
ANR	6197346	RelationalExpression	i < nrefs		6196869	0		<			
ANR	6197347	Identifier	i		6196869	0					
ANR	6197348	Identifier	nrefs		6196869	1					
ANR	6197349	PostIncDecOperationExpression	i ++	200:27:4597:4599	6196869	2	True				
ANR	6197350	Identifier	i		6196869	0					
ANR	6197351	IncDec	++		6196869	1					
ANR	6197352	CompoundStatement		79:32:1781:1781	6196869	3					
ANR	6197353	ExpressionStatement	"r_list_append ( it -> refs , r_str_newf ( r_str_word_get0 ( refs , i ) ) )"	201:5:4609:4673	6196869	0	True				
ANR	6197354	CallExpression	"r_list_append ( it -> refs , r_str_newf ( r_str_word_get0 ( refs , i ) ) )"		6196869	0					
ANR	6197355	Callee	r_list_append		6196869	0					
ANR	6197356	Identifier	r_list_append		6196869	0					
ANR	6197357	ArgumentList	it -> refs		6196869	1					
ANR	6197358	Argument	it -> refs		6196869	0					
ANR	6197359	PtrMemberAccess	it -> refs		6196869	0					
ANR	6197360	Identifier	it		6196869	0					
ANR	6197361	Identifier	refs		6196869	1					
ANR	6197362	Argument	"r_str_newf ( r_str_word_get0 ( refs , i ) )"		6196869	1					
ANR	6197363	CallExpression	"r_str_newf ( r_str_word_get0 ( refs , i ) )"		6196869	0					
ANR	6197364	Callee	r_str_newf		6196869	0					
ANR	6197365	Identifier	r_str_newf		6196869	0					
ANR	6197366	ArgumentList	"r_str_word_get0 ( refs , i )"		6196869	1					
ANR	6197367	Argument	"r_str_word_get0 ( refs , i )"		6196869	0					
ANR	6197368	CallExpression	"r_str_word_get0 ( refs , i )"		6196869	0					
ANR	6197369	Callee	r_str_word_get0		6196869	0					
ANR	6197370	Identifier	r_str_word_get0		6196869	0					
ANR	6197371	ArgumentList	refs		6196869	1					
ANR	6197372	Argument	refs		6196869	0					
ANR	6197373	Identifier	refs		6196869	0					
ANR	6197374	Argument	i		6196869	1					
ANR	6197375	Identifier	i		6196869	0					
ANR	6197376	BreakStatement	break ;	204:3:4689:4694	6196869	19	True				
ANR	6197377	Label	case R_SIGN_XREFS :	205:2:4698:4715	6196869	20	True				
ANR	6197378	Identifier	R_SIGN_XREFS		6196869	0					
ANR	6197379	ExpressionStatement	refs = r_str_new ( token )	206:3:4720:4744	6196869	21	True				
ANR	6197380	AssignmentExpression	refs = r_str_new ( token )		6196869	0		=			
ANR	6197381	Identifier	refs		6196869	0					
ANR	6197382	CallExpression	r_str_new ( token )		6196869	1					
ANR	6197383	Callee	r_str_new		6196869	0					
ANR	6197384	Identifier	r_str_new		6196869	0					
ANR	6197385	ArgumentList	token		6196869	1					
ANR	6197386	Argument	token		6196869	0					
ANR	6197387	Identifier	token		6196869	0					
ANR	6197388	ExpressionStatement	"nrefs = r_str_split ( refs , ',' )"	207:3:4749:4780	6196869	22	True				
ANR	6197389	AssignmentExpression	"nrefs = r_str_split ( refs , ',' )"		6196869	0		=			
ANR	6197390	Identifier	nrefs		6196869	0					
ANR	6197391	CallExpression	"r_str_split ( refs , ',' )"		6196869	1					
ANR	6197392	Callee	r_str_split		6196869	0					
ANR	6197393	Identifier	r_str_split		6196869	0					
ANR	6197394	ArgumentList	refs		6196869	1					
ANR	6197395	Argument	refs		6196869	0					
ANR	6197396	Identifier	refs		6196869	0					
ANR	6197397	Argument	"','"		6196869	1					
ANR	6197398	PrimaryExpression	"','"		6196869	0					
ANR	6197399	IfStatement	if ( nrefs > 0 )		6196869	23					
ANR	6197400	Condition	nrefs > 0	208:7:4789:4797	6196869	0	True				
ANR	6197401	RelationalExpression	nrefs > 0		6196869	0		>			
ANR	6197402	Identifier	nrefs		6196869	0					
ANR	6197403	PrimaryExpression	0		6196869	1					
ANR	6197404	CompoundStatement		87:18:1979:1979	6196869	1					
ANR	6197405	ExpressionStatement	it -> xrefs = r_list_newf ( ( RListFree ) free )	209:4:4806:4848	6196869	0	True				
ANR	6197406	AssignmentExpression	it -> xrefs = r_list_newf ( ( RListFree ) free )		6196869	0		=			
ANR	6197407	PtrMemberAccess	it -> xrefs		6196869	0					
ANR	6197408	Identifier	it		6196869	0					
ANR	6197409	Identifier	xrefs		6196869	1					
ANR	6197410	CallExpression	r_list_newf ( ( RListFree ) free )		6196869	1					
ANR	6197411	Callee	r_list_newf		6196869	0					
ANR	6197412	Identifier	r_list_newf		6196869	0					
ANR	6197413	ArgumentList	( RListFree ) free		6196869	1					
ANR	6197414	Argument	( RListFree ) free		6196869	0					
ANR	6197415	CastExpression	( RListFree ) free		6196869	0					
ANR	6197416	CastTarget	RListFree		6196869	0					
ANR	6197417	Identifier	free		6196869	1					
ANR	6197418	ForStatement	for ( i = 0 ; i < nrefs ; i ++ )		6196869	1					
ANR	6197419	ForInit	i = 0 ;	210:9:4859:4864	6196869	0	True				
ANR	6197420	AssignmentExpression	i = 0		6196869	0		=			
ANR	6197421	Identifier	i		6196869	0					
ANR	6197422	PrimaryExpression	0		6196869	1					
ANR	6197423	Condition	i < nrefs	210:16:4866:4874	6196869	1	True				
ANR	6197424	RelationalExpression	i < nrefs		6196869	0		<			
ANR	6197425	Identifier	i		6196869	0					
ANR	6197426	Identifier	nrefs		6196869	1					
ANR	6197427	PostIncDecOperationExpression	i ++	210:27:4877:4879	6196869	2	True				
ANR	6197428	Identifier	i		6196869	0					
ANR	6197429	IncDec	++		6196869	1					
ANR	6197430	CompoundStatement		89:32:2061:2061	6196869	3					
ANR	6197431	ExpressionStatement	"r_list_append ( it -> xrefs , r_str_newf ( r_str_word_get0 ( refs , i ) ) )"	211:5:4889:4954	6196869	0	True				
ANR	6197432	CallExpression	"r_list_append ( it -> xrefs , r_str_newf ( r_str_word_get0 ( refs , i ) ) )"		6196869	0					
ANR	6197433	Callee	r_list_append		6196869	0					
ANR	6197434	Identifier	r_list_append		6196869	0					
ANR	6197435	ArgumentList	it -> xrefs		6196869	1					
ANR	6197436	Argument	it -> xrefs		6196869	0					
ANR	6197437	PtrMemberAccess	it -> xrefs		6196869	0					
ANR	6197438	Identifier	it		6196869	0					
ANR	6197439	Identifier	xrefs		6196869	1					
ANR	6197440	Argument	"r_str_newf ( r_str_word_get0 ( refs , i ) )"		6196869	1					
ANR	6197441	CallExpression	"r_str_newf ( r_str_word_get0 ( refs , i ) )"		6196869	0					
ANR	6197442	Callee	r_str_newf		6196869	0					
ANR	6197443	Identifier	r_str_newf		6196869	0					
ANR	6197444	ArgumentList	"r_str_word_get0 ( refs , i )"		6196869	1					
ANR	6197445	Argument	"r_str_word_get0 ( refs , i )"		6196869	0					
ANR	6197446	CallExpression	"r_str_word_get0 ( refs , i )"		6196869	0					
ANR	6197447	Callee	r_str_word_get0		6196869	0					
ANR	6197448	Identifier	r_str_word_get0		6196869	0					
ANR	6197449	ArgumentList	refs		6196869	1					
ANR	6197450	Argument	refs		6196869	0					
ANR	6197451	Identifier	refs		6196869	0					
ANR	6197452	Argument	i		6196869	1					
ANR	6197453	Identifier	i		6196869	0					
ANR	6197454	BreakStatement	break ;	214:3:4970:4975	6196869	24	True				
ANR	6197455	Label	case R_SIGN_VARS :	215:2:4979:4995	6196869	25	True				
ANR	6197456	Identifier	R_SIGN_VARS		6196869	0					
ANR	6197457	ExpressionStatement	vars = r_str_new ( token )	216:3:5000:5024	6196869	26	True				
ANR	6197458	AssignmentExpression	vars = r_str_new ( token )		6196869	0		=			
ANR	6197459	Identifier	vars		6196869	0					
ANR	6197460	CallExpression	r_str_new ( token )		6196869	1					
ANR	6197461	Callee	r_str_new		6196869	0					
ANR	6197462	Identifier	r_str_new		6196869	0					
ANR	6197463	ArgumentList	token		6196869	1					
ANR	6197464	Argument	token		6196869	0					
ANR	6197465	Identifier	token		6196869	0					
ANR	6197466	ExpressionStatement	"nvars = r_str_split ( vars , ',' )"	217:3:5029:5060	6196869	27	True				
ANR	6197467	AssignmentExpression	"nvars = r_str_split ( vars , ',' )"		6196869	0		=			
ANR	6197468	Identifier	nvars		6196869	0					
ANR	6197469	CallExpression	"r_str_split ( vars , ',' )"		6196869	1					
ANR	6197470	Callee	r_str_split		6196869	0					
ANR	6197471	Identifier	r_str_split		6196869	0					
ANR	6197472	ArgumentList	vars		6196869	1					
ANR	6197473	Argument	vars		6196869	0					
ANR	6197474	Identifier	vars		6196869	0					
ANR	6197475	Argument	"','"		6196869	1					
ANR	6197476	PrimaryExpression	"','"		6196869	0					
ANR	6197477	IfStatement	if ( nvars > 0 )		6196869	28					
ANR	6197478	Condition	nvars > 0	218:7:5069:5077	6196869	0	True				
ANR	6197479	RelationalExpression	nvars > 0		6196869	0		>			
ANR	6197480	Identifier	nvars		6196869	0					
ANR	6197481	PrimaryExpression	0		6196869	1					
ANR	6197482	CompoundStatement		97:18:2259:2259	6196869	1					
ANR	6197483	ExpressionStatement	it -> vars = r_list_newf ( ( RListFree ) free )	219:4:5086:5127	6196869	0	True				
ANR	6197484	AssignmentExpression	it -> vars = r_list_newf ( ( RListFree ) free )		6196869	0		=			
ANR	6197485	PtrMemberAccess	it -> vars		6196869	0					
ANR	6197486	Identifier	it		6196869	0					
ANR	6197487	Identifier	vars		6196869	1					
ANR	6197488	CallExpression	r_list_newf ( ( RListFree ) free )		6196869	1					
ANR	6197489	Callee	r_list_newf		6196869	0					
ANR	6197490	Identifier	r_list_newf		6196869	0					
ANR	6197491	ArgumentList	( RListFree ) free		6196869	1					
ANR	6197492	Argument	( RListFree ) free		6196869	0					
ANR	6197493	CastExpression	( RListFree ) free		6196869	0					
ANR	6197494	CastTarget	RListFree		6196869	0					
ANR	6197495	Identifier	free		6196869	1					
ANR	6197496	ForStatement	for ( i = 0 ; i < nvars ; i ++ )		6196869	1					
ANR	6197497	ForInit	i = 0 ;	220:9:5138:5143	6196869	0	True				
ANR	6197498	AssignmentExpression	i = 0		6196869	0		=			
ANR	6197499	Identifier	i		6196869	0					
ANR	6197500	PrimaryExpression	0		6196869	1					
ANR	6197501	Condition	i < nvars	220:16:5145:5153	6196869	1	True				
ANR	6197502	RelationalExpression	i < nvars		6196869	0		<			
ANR	6197503	Identifier	i		6196869	0					
ANR	6197504	Identifier	nvars		6196869	1					
ANR	6197505	PostIncDecOperationExpression	i ++	220:27:5156:5158	6196869	2	True				
ANR	6197506	Identifier	i		6196869	0					
ANR	6197507	IncDec	++		6196869	1					
ANR	6197508	CompoundStatement		99:32:2340:2340	6196869	3					
ANR	6197509	ExpressionStatement	"r_list_append ( it -> vars , r_str_newf ( r_str_word_get0 ( vars , i ) ) )"	221:5:5168:5232	6196869	0	True				
ANR	6197510	CallExpression	"r_list_append ( it -> vars , r_str_newf ( r_str_word_get0 ( vars , i ) ) )"		6196869	0					
ANR	6197511	Callee	r_list_append		6196869	0					
ANR	6197512	Identifier	r_list_append		6196869	0					
ANR	6197513	ArgumentList	it -> vars		6196869	1					
ANR	6197514	Argument	it -> vars		6196869	0					
ANR	6197515	PtrMemberAccess	it -> vars		6196869	0					
ANR	6197516	Identifier	it		6196869	0					
ANR	6197517	Identifier	vars		6196869	1					
ANR	6197518	Argument	"r_str_newf ( r_str_word_get0 ( vars , i ) )"		6196869	1					
ANR	6197519	CallExpression	"r_str_newf ( r_str_word_get0 ( vars , i ) )"		6196869	0					
ANR	6197520	Callee	r_str_newf		6196869	0					
ANR	6197521	Identifier	r_str_newf		6196869	0					
ANR	6197522	ArgumentList	"r_str_word_get0 ( vars , i )"		6196869	1					
ANR	6197523	Argument	"r_str_word_get0 ( vars , i )"		6196869	0					
ANR	6197524	CallExpression	"r_str_word_get0 ( vars , i )"		6196869	0					
ANR	6197525	Callee	r_str_word_get0		6196869	0					
ANR	6197526	Identifier	r_str_word_get0		6196869	0					
ANR	6197527	ArgumentList	vars		6196869	1					
ANR	6197528	Argument	vars		6196869	0					
ANR	6197529	Identifier	vars		6196869	0					
ANR	6197530	Argument	i		6196869	1					
ANR	6197531	Identifier	i		6196869	0					
ANR	6197532	BreakStatement	break ;	224:3:5248:5253	6196869	29	True				
ANR	6197533	Label	case R_SIGN_BBHASH :	225:2:5257:5275	6196869	30	True				
ANR	6197534	Identifier	R_SIGN_BBHASH		6196869	0					
ANR	6197535	IfStatement	if ( token [ 0 ] != 0 )		6196869	31					
ANR	6197536	Condition	token [ 0 ] != 0	226:7:5284:5296	6196869	0	True				
ANR	6197537	EqualityExpression	token [ 0 ] != 0		6196869	0		!=			
ANR	6197538	ArrayIndexing	token [ 0 ]		6196869	0					
ANR	6197539	Identifier	token		6196869	0					
ANR	6197540	PrimaryExpression	0		6196869	1					
ANR	6197541	PrimaryExpression	0		6196869	1					
ANR	6197542	CompoundStatement		105:22:2478:2478	6196869	1					
ANR	6197543	ExpressionStatement	it -> hash = R_NEW0 ( RSignHash )	227:4:5305:5334	6196869	0	True				
ANR	6197544	AssignmentExpression	it -> hash = R_NEW0 ( RSignHash )		6196869	0		=			
ANR	6197545	PtrMemberAccess	it -> hash		6196869	0					
ANR	6197546	Identifier	it		6196869	0					
ANR	6197547	Identifier	hash		6196869	1					
ANR	6197548	CallExpression	R_NEW0 ( RSignHash )		6196869	1					
ANR	6197549	Callee	R_NEW0		6196869	0					
ANR	6197550	Identifier	R_NEW0		6196869	0					
ANR	6197551	ArgumentList	RSignHash		6196869	1					
ANR	6197552	Argument	RSignHash		6196869	0					
ANR	6197553	Identifier	RSignHash		6196869	0					
ANR	6197554	IfStatement	if ( it -> hash )		6196869	1					
ANR	6197555	Condition	it -> hash	228:8:5344:5351	6196869	0	True				
ANR	6197556	PtrMemberAccess	it -> hash		6196869	0					
ANR	6197557	Identifier	it		6196869	0					
ANR	6197558	Identifier	hash		6196869	1					
ANR	6197559	CompoundStatement		107:18:2533:2533	6196869	1					
ANR	6197560	ExpressionStatement	it -> hash -> bbhash = r_str_new ( token )	229:5:5361:5397	6196869	0	True				
ANR	6197561	AssignmentExpression	it -> hash -> bbhash = r_str_new ( token )		6196869	0		=			
ANR	6197562	PtrMemberAccess	it -> hash -> bbhash		6196869	0					
ANR	6197563	PtrMemberAccess	it -> hash		6196869	0					
ANR	6197564	Identifier	it		6196869	0					
ANR	6197565	Identifier	hash		6196869	1					
ANR	6197566	Identifier	bbhash		6196869	1					
ANR	6197567	CallExpression	r_str_new ( token )		6196869	1					
ANR	6197568	Callee	r_str_new		6196869	0					
ANR	6197569	Identifier	r_str_new		6196869	0					
ANR	6197570	ArgumentList	token		6196869	1					
ANR	6197571	Argument	token		6196869	0					
ANR	6197572	Identifier	token		6196869	0					
ANR	6197573	BreakStatement	break ;	232:3:5413:5418	6196869	32	True				
ANR	6197574	Label	case R_SIGN_BYTES :	233:2:5422:5439	6196869	33	True				
ANR	6197575	Identifier	R_SIGN_BYTES		6196869	0					
ANR	6197576	IfStatement	if ( ! it -> bytes )		6196869	34					
ANR	6197577	Condition	! it -> bytes	234:7:5448:5457	6196869	0	True				
ANR	6197578	UnaryOperationExpression	! it -> bytes		6196869	0					
ANR	6197579	UnaryOperator	!		6196869	0					
ANR	6197580	PtrMemberAccess	it -> bytes		6196869	1					
ANR	6197581	Identifier	it		6196869	0					
ANR	6197582	Identifier	bytes		6196869	1					
ANR	6197583	CompoundStatement		113:19:2639:2639	6196869	1					
ANR	6197584	ExpressionStatement	"eprintf ( ""Missing bytes-size command before bytes\\n"" )"	235:4:5466:5519	6196869	0	True				
ANR	6197585	CallExpression	"eprintf ( ""Missing bytes-size command before bytes\\n"" )"		6196869	0					
ANR	6197586	Callee	eprintf		6196869	0					
ANR	6197587	Identifier	eprintf		6196869	0					
ANR	6197588	ArgumentList	"""Missing bytes-size command before bytes\\n"""		6196869	1					
ANR	6197589	Argument	"""Missing bytes-size command before bytes\\n"""		6196869	0					
ANR	6197590	PrimaryExpression	"""Missing bytes-size command before bytes\\n"""		6196869	0					
ANR	6197591	BreakStatement	break ;	236:4:5525:5530	6196869	1	True				
ANR	6197592	IfStatement	if ( strlen ( token ) != 2 * it -> bytes -> size )		6196869	35					
ANR	6197593	Condition	strlen ( token ) != 2 * it -> bytes -> size	238:7:5544:5580	6196869	0	True				
ANR	6197594	EqualityExpression	strlen ( token ) != 2 * it -> bytes -> size		6196869	0		!=			
ANR	6197595	CallExpression	strlen ( token )		6196869	0					
ANR	6197596	Callee	strlen		6196869	0					
ANR	6197597	Identifier	strlen		6196869	0					
ANR	6197598	ArgumentList	token		6196869	1					
ANR	6197599	Argument	token		6196869	0					
ANR	6197600	Identifier	token		6196869	0					
ANR	6197601	MultiplicativeExpression	2 * it -> bytes -> size		6196869	1		*			
ANR	6197602	PrimaryExpression	2		6196869	0					
ANR	6197603	PtrMemberAccess	it -> bytes -> size		6196869	1					
ANR	6197604	PtrMemberAccess	it -> bytes		6196869	0					
ANR	6197605	Identifier	it		6196869	0					
ANR	6197606	Identifier	bytes		6196869	1					
ANR	6197607	Identifier	size		6196869	1					
ANR	6197608	CompoundStatement		117:46:2762:2762	6196869	1					
ANR	6197609	GotoStatement	goto out ;	239:4:5589:5597	6196869	0	True				
ANR	6197610	Identifier	out		6196869	0					
ANR	6197611	ExpressionStatement	it -> bytes -> bytes = malloc ( it -> bytes -> size )	241:3:5607:5650	6196869	36	True				
ANR	6197612	AssignmentExpression	it -> bytes -> bytes = malloc ( it -> bytes -> size )		6196869	0		=			
ANR	6197613	PtrMemberAccess	it -> bytes -> bytes		6196869	0					
ANR	6197614	PtrMemberAccess	it -> bytes		6196869	0					
ANR	6197615	Identifier	it		6196869	0					
ANR	6197616	Identifier	bytes		6196869	1					
ANR	6197617	Identifier	bytes		6196869	1					
ANR	6197618	CallExpression	malloc ( it -> bytes -> size )		6196869	1					
ANR	6197619	Callee	malloc		6196869	0					
ANR	6197620	Identifier	malloc		6196869	0					
ANR	6197621	ArgumentList	it -> bytes -> size		6196869	1					
ANR	6197622	Argument	it -> bytes -> size		6196869	0					
ANR	6197623	PtrMemberAccess	it -> bytes -> size		6196869	0					
ANR	6197624	PtrMemberAccess	it -> bytes		6196869	0					
ANR	6197625	Identifier	it		6196869	0					
ANR	6197626	Identifier	bytes		6196869	1					
ANR	6197627	Identifier	size		6196869	1					
ANR	6197628	IfStatement	if ( it -> bytes -> bytes )		6196869	37					
ANR	6197629	Condition	it -> bytes -> bytes	242:7:5659:5674	6196869	0	True				
ANR	6197630	PtrMemberAccess	it -> bytes -> bytes		6196869	0					
ANR	6197631	PtrMemberAccess	it -> bytes		6196869	0					
ANR	6197632	Identifier	it		6196869	0					
ANR	6197633	Identifier	bytes		6196869	1					
ANR	6197634	Identifier	bytes		6196869	1					
ANR	6197635	CompoundStatement		121:25:2856:2856	6196869	1					
ANR	6197636	ExpressionStatement	"r_hex_str2bin ( token , it -> bytes -> bytes )"	243:4:5683:5722	6196869	0	True				
ANR	6197637	CallExpression	"r_hex_str2bin ( token , it -> bytes -> bytes )"		6196869	0					
ANR	6197638	Callee	r_hex_str2bin		6196869	0					
ANR	6197639	Identifier	r_hex_str2bin		6196869	0					
ANR	6197640	ArgumentList	token		6196869	1					
ANR	6197641	Argument	token		6196869	0					
ANR	6197642	Identifier	token		6196869	0					
ANR	6197643	Argument	it -> bytes -> bytes		6196869	1					
ANR	6197644	PtrMemberAccess	it -> bytes -> bytes		6196869	0					
ANR	6197645	PtrMemberAccess	it -> bytes		6196869	0					
ANR	6197646	Identifier	it		6196869	0					
ANR	6197647	Identifier	bytes		6196869	1					
ANR	6197648	Identifier	bytes		6196869	1					
ANR	6197649	BreakStatement	break ;	245:3:5732:5737	6196869	38	True				
ANR	6197650	Label	case R_SIGN_BYTES_MASK :	246:2:5741:5763	6196869	39	True				
ANR	6197651	Identifier	R_SIGN_BYTES_MASK		6196869	0					
ANR	6197652	IfStatement	if ( ! it -> bytes )		6196869	40					
ANR	6197653	Condition	! it -> bytes	247:7:5772:5781	6196869	0	True				
ANR	6197654	UnaryOperationExpression	! it -> bytes		6196869	0					
ANR	6197655	UnaryOperator	!		6196869	0					
ANR	6197656	PtrMemberAccess	it -> bytes		6196869	1					
ANR	6197657	Identifier	it		6196869	0					
ANR	6197658	Identifier	bytes		6196869	1					
ANR	6197659	CompoundStatement		126:19:2963:2963	6196869	1					
ANR	6197660	ExpressionStatement	"eprintf ( ""Missing bytes-size command before bytes-mask\\n"" )"	248:4:5790:5848	6196869	0	True				
ANR	6197661	CallExpression	"eprintf ( ""Missing bytes-size command before bytes-mask\\n"" )"		6196869	0					
ANR	6197662	Callee	eprintf		6196869	0					
ANR	6197663	Identifier	eprintf		6196869	0					
ANR	6197664	ArgumentList	"""Missing bytes-size command before bytes-mask\\n"""		6196869	1					
ANR	6197665	Argument	"""Missing bytes-size command before bytes-mask\\n"""		6196869	0					
ANR	6197666	PrimaryExpression	"""Missing bytes-size command before bytes-mask\\n"""		6196869	0					
ANR	6197667	BreakStatement	break ;	249:4:5854:5859	6196869	1	True				
ANR	6197668	IfStatement	if ( strlen ( token ) != 2 * it -> bytes -> size )		6196869	41					
ANR	6197669	Condition	strlen ( token ) != 2 * it -> bytes -> size	251:7:5873:5909	6196869	0	True				
ANR	6197670	EqualityExpression	strlen ( token ) != 2 * it -> bytes -> size		6196869	0		!=			
ANR	6197671	CallExpression	strlen ( token )		6196869	0					
ANR	6197672	Callee	strlen		6196869	0					
ANR	6197673	Identifier	strlen		6196869	0					
ANR	6197674	ArgumentList	token		6196869	1					
ANR	6197675	Argument	token		6196869	0					
ANR	6197676	Identifier	token		6196869	0					
ANR	6197677	MultiplicativeExpression	2 * it -> bytes -> size		6196869	1		*			
ANR	6197678	PrimaryExpression	2		6196869	0					
ANR	6197679	PtrMemberAccess	it -> bytes -> size		6196869	1					
ANR	6197680	PtrMemberAccess	it -> bytes		6196869	0					
ANR	6197681	Identifier	it		6196869	0					
ANR	6197682	Identifier	bytes		6196869	1					
ANR	6197683	Identifier	size		6196869	1					
ANR	6197684	CompoundStatement		130:46:3091:3091	6196869	1					
ANR	6197685	GotoStatement	goto out ;	252:4:5918:5926	6196869	0	True				
ANR	6197686	Identifier	out		6196869	0					
ANR	6197687	ExpressionStatement	free ( it -> bytes -> mask )	254:3:5936:5958	6196869	42	True				
ANR	6197688	CallExpression	free ( it -> bytes -> mask )		6196869	0					
ANR	6197689	Callee	free		6196869	0					
ANR	6197690	Identifier	free		6196869	0					
ANR	6197691	ArgumentList	it -> bytes -> mask		6196869	1					
ANR	6197692	Argument	it -> bytes -> mask		6196869	0					
ANR	6197693	PtrMemberAccess	it -> bytes -> mask		6196869	0					
ANR	6197694	PtrMemberAccess	it -> bytes		6196869	0					
ANR	6197695	Identifier	it		6196869	0					
ANR	6197696	Identifier	bytes		6196869	1					
ANR	6197697	Identifier	mask		6196869	1					
ANR	6197698	ExpressionStatement	it -> bytes -> mask = malloc ( it -> bytes -> size )	255:3:5963:6005	6196869	43	True				
ANR	6197699	AssignmentExpression	it -> bytes -> mask = malloc ( it -> bytes -> size )		6196869	0		=			
ANR	6197700	PtrMemberAccess	it -> bytes -> mask		6196869	0					
ANR	6197701	PtrMemberAccess	it -> bytes		6196869	0					
ANR	6197702	Identifier	it		6196869	0					
ANR	6197703	Identifier	bytes		6196869	1					
ANR	6197704	Identifier	mask		6196869	1					
ANR	6197705	CallExpression	malloc ( it -> bytes -> size )		6196869	1					
ANR	6197706	Callee	malloc		6196869	0					
ANR	6197707	Identifier	malloc		6196869	0					
ANR	6197708	ArgumentList	it -> bytes -> size		6196869	1					
ANR	6197709	Argument	it -> bytes -> size		6196869	0					
ANR	6197710	PtrMemberAccess	it -> bytes -> size		6196869	0					
ANR	6197711	PtrMemberAccess	it -> bytes		6196869	0					
ANR	6197712	Identifier	it		6196869	0					
ANR	6197713	Identifier	bytes		6196869	1					
ANR	6197714	Identifier	size		6196869	1					
ANR	6197715	IfStatement	if ( ! it -> bytes -> mask )		6196869	44					
ANR	6197716	Condition	! it -> bytes -> mask	256:7:6014:6029	6196869	0	True				
ANR	6197717	UnaryOperationExpression	! it -> bytes -> mask		6196869	0					
ANR	6197718	UnaryOperator	!		6196869	0					
ANR	6197719	PtrMemberAccess	it -> bytes -> mask		6196869	1					
ANR	6197720	PtrMemberAccess	it -> bytes		6196869	0					
ANR	6197721	Identifier	it		6196869	0					
ANR	6197722	Identifier	bytes		6196869	1					
ANR	6197723	Identifier	mask		6196869	1					
ANR	6197724	CompoundStatement		135:25:3211:3211	6196869	1					
ANR	6197725	GotoStatement	goto out ;	257:4:6038:6046	6196869	0	True				
ANR	6197726	Identifier	out		6196869	0					
ANR	6197727	ExpressionStatement	"r_hex_str2bin ( token , it -> bytes -> mask )"	259:3:6056:6094	6196869	45	True				
ANR	6197728	CallExpression	"r_hex_str2bin ( token , it -> bytes -> mask )"		6196869	0					
ANR	6197729	Callee	r_hex_str2bin		6196869	0					
ANR	6197730	Identifier	r_hex_str2bin		6196869	0					
ANR	6197731	ArgumentList	token		6196869	1					
ANR	6197732	Argument	token		6196869	0					
ANR	6197733	Identifier	token		6196869	0					
ANR	6197734	Argument	it -> bytes -> mask		6196869	1					
ANR	6197735	PtrMemberAccess	it -> bytes -> mask		6196869	0					
ANR	6197736	PtrMemberAccess	it -> bytes		6196869	0					
ANR	6197737	Identifier	it		6196869	0					
ANR	6197738	Identifier	bytes		6196869	1					
ANR	6197739	Identifier	mask		6196869	1					
ANR	6197740	BreakStatement	break ;	260:3:6099:6104	6196869	46	True				
ANR	6197741	Label	case R_SIGN_BYTES_SIZE :	261:2:6108:6130	6196869	47	True				
ANR	6197742	Identifier	R_SIGN_BYTES_SIZE		6196869	0					
ANR	6197743	ExpressionStatement	size = atoi ( token )	263:3:6150:6169	6196869	48	True				
ANR	6197744	AssignmentExpression	size = atoi ( token )		6196869	0		=			
ANR	6197745	Identifier	size		6196869	0					
ANR	6197746	CallExpression	atoi ( token )		6196869	1					
ANR	6197747	Callee	atoi		6196869	0					
ANR	6197748	Identifier	atoi		6196869	0					
ANR	6197749	ArgumentList	token		6196869	1					
ANR	6197750	Argument	token		6196869	0					
ANR	6197751	Identifier	token		6196869	0					
ANR	6197752	IfStatement	if ( size > 0 )		6196869	49					
ANR	6197753	Condition	size > 0	264:7:6178:6185	6196869	0	True				
ANR	6197754	RelationalExpression	size > 0		6196869	0		>			
ANR	6197755	Identifier	size		6196869	0					
ANR	6197756	PrimaryExpression	0		6196869	1					
ANR	6197757	CompoundStatement		143:17:3367:3367	6196869	1					
ANR	6197758	ExpressionStatement	free ( it -> bytes )	265:4:6194:6210	6196869	0	True				
ANR	6197759	CallExpression	free ( it -> bytes )		6196869	0					
ANR	6197760	Callee	free		6196869	0					
ANR	6197761	Identifier	free		6196869	0					
ANR	6197762	ArgumentList	it -> bytes		6196869	1					
ANR	6197763	Argument	it -> bytes		6196869	0					
ANR	6197764	PtrMemberAccess	it -> bytes		6196869	0					
ANR	6197765	Identifier	it		6196869	0					
ANR	6197766	Identifier	bytes		6196869	1					
ANR	6197767	ExpressionStatement	it -> bytes = R_NEW0 ( RSignBytes )	266:4:6216:6247	6196869	1	True				
ANR	6197768	AssignmentExpression	it -> bytes = R_NEW0 ( RSignBytes )		6196869	0		=			
ANR	6197769	PtrMemberAccess	it -> bytes		6196869	0					
ANR	6197770	Identifier	it		6196869	0					
ANR	6197771	Identifier	bytes		6196869	1					
ANR	6197772	CallExpression	R_NEW0 ( RSignBytes )		6196869	1					
ANR	6197773	Callee	R_NEW0		6196869	0					
ANR	6197774	Identifier	R_NEW0		6196869	0					
ANR	6197775	ArgumentList	RSignBytes		6196869	1					
ANR	6197776	Argument	RSignBytes		6196869	0					
ANR	6197777	Identifier	RSignBytes		6196869	0					
ANR	6197778	IfStatement	if ( ! it -> bytes )		6196869	2					
ANR	6197779	Condition	! it -> bytes	267:8:6257:6266	6196869	0	True				
ANR	6197780	UnaryOperationExpression	! it -> bytes		6196869	0					
ANR	6197781	UnaryOperator	!		6196869	0					
ANR	6197782	PtrMemberAccess	it -> bytes		6196869	1					
ANR	6197783	Identifier	it		6196869	0					
ANR	6197784	Identifier	bytes		6196869	1					
ANR	6197785	CompoundStatement		146:20:3448:3448	6196869	1					
ANR	6197786	GotoStatement	goto out ;	268:5:6276:6284	6196869	0	True				
ANR	6197787	Identifier	out		6196869	0					
ANR	6197788	ExpressionStatement	it -> bytes -> size = size	270:4:6296:6318	6196869	3	True				
ANR	6197789	AssignmentExpression	it -> bytes -> size = size		6196869	0		=			
ANR	6197790	PtrMemberAccess	it -> bytes -> size		6196869	0					
ANR	6197791	PtrMemberAccess	it -> bytes		6196869	0					
ANR	6197792	Identifier	it		6196869	0					
ANR	6197793	Identifier	bytes		6196869	1					
ANR	6197794	Identifier	size		6196869	1					
ANR	6197795	Identifier	size		6196869	1					
ANR	6197796	BreakStatement	break ;	272:3:6328:6333	6196869	50	True				
ANR	6197797	Label	default :	273:2:6337:6344	6196869	51	True				
ANR	6197798	Identifier	default		6196869	0					
ANR	6197799	ExpressionStatement	"eprintf ( ""Unsupported (%s)\\n"" , word )"	274:3:6349:6385	6196869	52	True				
ANR	6197800	CallExpression	"eprintf ( ""Unsupported (%s)\\n"" , word )"		6196869	0					
ANR	6197801	Callee	eprintf		6196869	0					
ANR	6197802	Identifier	eprintf		6196869	0					
ANR	6197803	ArgumentList	"""Unsupported (%s)\\n"""		6196869	1					
ANR	6197804	Argument	"""Unsupported (%s)\\n"""		6196869	0					
ANR	6197805	PrimaryExpression	"""Unsupported (%s)\\n"""		6196869	0					
ANR	6197806	Argument	word		6196869	1					
ANR	6197807	Identifier	word		6196869	0					
ANR	6197808	BreakStatement	break ;	275:3:6390:6395	6196869	53	True				
ANR	6197809	Label	out :	278:0:6404:6407	6196869	15	True				
ANR	6197810	Identifier	out		6196869	0					
ANR	6197811	ExpressionStatement	free ( k2 )	279:1:6410:6419	6196869	16	True				
ANR	6197812	CallExpression	free ( k2 )		6196869	0					
ANR	6197813	Callee	free		6196869	0					
ANR	6197814	Identifier	free		6196869	0					
ANR	6197815	ArgumentList	k2		6196869	1					
ANR	6197816	Argument	k2		6196869	0					
ANR	6197817	Identifier	k2		6196869	0					
ANR	6197818	ExpressionStatement	free ( v2 )	280:1:6422:6431	6196869	17	True				
ANR	6197819	CallExpression	free ( v2 )		6196869	0					
ANR	6197820	Callee	free		6196869	0					
ANR	6197821	Identifier	free		6196869	0					
ANR	6197822	ArgumentList	v2		6196869	1					
ANR	6197823	Argument	v2		6196869	0					
ANR	6197824	Identifier	v2		6196869	0					
ANR	6197825	ExpressionStatement	free ( refs )	281:1:6434:6445	6196869	18	True				
ANR	6197826	CallExpression	free ( refs )		6196869	0					
ANR	6197827	Callee	free		6196869	0					
ANR	6197828	Identifier	free		6196869	0					
ANR	6197829	ArgumentList	refs		6196869	1					
ANR	6197830	Argument	refs		6196869	0					
ANR	6197831	Identifier	refs		6196869	0					
ANR	6197832	ExpressionStatement	free ( vars )	282:1:6448:6459	6196869	19	True				
ANR	6197833	CallExpression	free ( vars )		6196869	0					
ANR	6197834	Callee	free		6196869	0					
ANR	6197835	Identifier	free		6196869	0					
ANR	6197836	ArgumentList	vars		6196869	1					
ANR	6197837	Argument	vars		6196869	0					
ANR	6197838	Identifier	vars		6196869	0					
ANR	6197839	ReturnStatement	return ( w == n ) ;	283:1:6462:6477	6196869	20	True				
ANR	6197840	EqualityExpression	w == n		6196869	0		==			
ANR	6197841	Identifier	w		6196869	0					
ANR	6197842	Identifier	n		6196869	1					
ANR	6197843	ReturnType	R_API bool		6196869	1					
ANR	6197844	Identifier	r_sign_deserialize		6196869	2					
ANR	6197845	ParameterList	"RAnal * a , RSignItem * it , const char * k , const char * v"		6196869	3					
ANR	6197846	Parameter	RAnal * a	122:30:2765:2772	6196869	0	True				
ANR	6197847	ParameterType	RAnal *		6196869	0					
ANR	6197848	Identifier	a		6196869	1					
ANR	6197849	Parameter	RSignItem * it	122:40:2775:2787	6196869	1	True				
ANR	6197850	ParameterType	RSignItem *		6196869	0					
ANR	6197851	Identifier	it		6196869	1					
ANR	6197852	Parameter	const char * k	122:55:2790:2802	6196869	2	True				
ANR	6197853	ParameterType	const char *		6196869	0					
ANR	6197854	Identifier	k		6196869	1					
ANR	6197855	Parameter	const char * v	122:70:2805:2817	6196869	3	True				
ANR	6197856	ParameterType	const char *		6196869	0					
ANR	6197857	Identifier	v		6196869	1					
ANR	6197858	CFGEntryNode	ENTRY		6196869		True				
ANR	6197859	CFGExitNode	EXIT		6196869		True				
ANR	6197860	Symbol	it -> graph		6196869						
ANR	6197861	Symbol	strlen		6196869						
ANR	6197862	Symbol	atoll		6196869						
ANR	6197863	Symbol	RSignHash		6196869						
ANR	6197864	Symbol	* * it		6196869						
ANR	6197865	Symbol	it -> bytes -> size		6196869						
ANR	6197866	Symbol	vars		6196869						
ANR	6197867	Symbol	r_str_new		6196869						
ANR	6197868	Symbol	it -> realname		6196869						
ANR	6197869	Symbol	it -> comment		6196869						
ANR	6197870	Symbol	it -> hash -> bbhash		6196869						
ANR	6197871	Symbol	strcmp		6196869						
ANR	6197872	Symbol	NULL		6196869						
ANR	6197873	Symbol	it -> bytes		6196869						
ANR	6197874	Symbol	r_list_newf		6196869						
ANR	6197875	Symbol	k2		6196869						
ANR	6197876	Symbol	it -> name		6196869						
ANR	6197877	Symbol	it		6196869						
ANR	6197878	Symbol	it -> space		6196869						
ANR	6197879	Symbol	R_NEW0		6196869						
ANR	6197880	Symbol	size		6196869						
ANR	6197881	Symbol	it -> xrefs		6196869						
ANR	6197882	Symbol	word		6196869						
ANR	6197883	Symbol	RSignBytes		6196869						
ANR	6197884	Symbol	it -> vars		6196869						
ANR	6197885	Symbol	r_str_newf		6196869						
ANR	6197886	Symbol	& a -> zign_spaces		6196869						
ANR	6197887	Symbol	it -> hash		6196869						
ANR	6197888	Symbol	RSignGraph		6196869						
ANR	6197889	Symbol	free		6196869						
ANR	6197890	Symbol	it -> refs		6196869						
ANR	6197891	Symbol	nvars		6196869						
ANR	6197892	Symbol	atoi		6196869						
ANR	6197893	Symbol	a		6196869						
ANR	6197894	Symbol	r_spaces_add		6196869						
ANR	6197895	Symbol	st		6196869						
ANR	6197896	Symbol	malloc		6196869						
ANR	6197897	Symbol	* it -> hash		6196869						
ANR	6197898	Symbol	* word		6196869						
ANR	6197899	Symbol	false		6196869						
ANR	6197900	Symbol	i		6196869						
ANR	6197901	Symbol	r_str_word_get0		6196869						
ANR	6197902	Symbol	k		6196869						
ANR	6197903	Symbol	nrefs		6196869						
ANR	6197904	Symbol	n		6196869						
ANR	6197905	Symbol	token		6196869						
ANR	6197906	Symbol	* it		6196869						
ANR	6197907	Symbol	it -> bytes -> bytes		6196869						
ANR	6197908	Symbol	* token		6196869						
ANR	6197909	Symbol	refs		6196869						
ANR	6197910	Symbol	r_str_split		6196869						
ANR	6197911	Symbol	v		6196869						
ANR	6197912	Symbol	w		6196869						
ANR	6197913	Symbol	it -> addr		6196869						
ANR	6197914	Symbol	strdup		6196869						
ANR	6197915	Symbol	v2		6196869						
ANR	6197916	Symbol	* it -> bytes		6196869						
ANR	6197917	Symbol	it -> bytes -> mask		6196869						
ANR	6197918	Function	serializeKey	286:0:6482:6645							
ANR	6197919	FunctionDef	"serializeKey (RAnal * a , const RSpace * space , const char * name , char * k)"		6197918	0					
ANR	6197920	CompoundStatement		286:83:6565:6645	6197918	0					
ANR	6197921	ExpressionStatement	"snprintf ( k , R_SIGN_KEY_MAXSZ , ""zign|%s|%s"" , space ? space -> name : ""*"" , name )"	287:1:6568:6643	6197918	0	True				
ANR	6197922	CallExpression	"snprintf ( k , R_SIGN_KEY_MAXSZ , ""zign|%s|%s"" , space ? space -> name : ""*"" , name )"		6197918	0					
ANR	6197923	Callee	snprintf		6197918	0					
ANR	6197924	Identifier	snprintf		6197918	0					
ANR	6197925	ArgumentList	k		6197918	1					
ANR	6197926	Argument	k		6197918	0					
ANR	6197927	Identifier	k		6197918	0					
ANR	6197928	Argument	R_SIGN_KEY_MAXSZ		6197918	1					
ANR	6197929	Identifier	R_SIGN_KEY_MAXSZ		6197918	0					
ANR	6197930	Argument	"""zign|%s|%s"""		6197918	2					
ANR	6197931	PrimaryExpression	"""zign|%s|%s"""		6197918	0					
ANR	6197932	Argument	"space ? space -> name : ""*"""		6197918	3					
ANR	6197933	ConditionalExpression	"space ? space -> name : ""*"""		6197918	0					
ANR	6197934	Condition	space		6197918	0					
ANR	6197935	Identifier	space		6197918	0					
ANR	6197936	PtrMemberAccess	space -> name		6197918	1					
ANR	6197937	Identifier	space		6197918	0					
ANR	6197938	Identifier	name		6197918	1					
ANR	6197939	PrimaryExpression	"""*"""		6197918	2					
ANR	6197940	Argument	name		6197918	4					
ANR	6197941	Identifier	name		6197918	0					
ANR	6197942	ReturnType	static void		6197918	1					
ANR	6197943	Identifier	serializeKey		6197918	2					
ANR	6197944	ParameterList	"RAnal * a , const RSpace * space , const char * name , char * k"		6197918	3					
ANR	6197945	Parameter	RAnal * a	286:25:6507:6514	6197918	0	True				
ANR	6197946	ParameterType	RAnal *		6197918	0					
ANR	6197947	Identifier	a		6197918	1					
ANR	6197948	Parameter	const RSpace * space	286:35:6517:6535	6197918	1	True				
ANR	6197949	ParameterType	const RSpace *		6197918	0					
ANR	6197950	Identifier	space		6197918	1					
ANR	6197951	Parameter	const char * name	286:56:6538:6553	6197918	2	True				
ANR	6197952	ParameterType	const char *		6197918	0					
ANR	6197953	Identifier	name		6197918	1					
ANR	6197954	Parameter	char * k	286:74:6556:6562	6197918	3	True				
ANR	6197955	ParameterType	char *		6197918	0					
ANR	6197956	Identifier	k		6197918	1					
ANR	6197957	CFGEntryNode	ENTRY		6197918		True				
ANR	6197958	CFGExitNode	EXIT		6197918		True				
ANR	6197959	Symbol	a		6197918						
ANR	6197960	Symbol	space -> name		6197918						
ANR	6197961	Symbol	name		6197918						
ANR	6197962	Symbol	* space		6197918						
ANR	6197963	Symbol	R_SIGN_KEY_MAXSZ		6197918						
ANR	6197964	Symbol	k		6197918						
ANR	6197965	Symbol	space		6197918						
ANR	6197966	Function	serializeKeySpaceStr	290:0:6648:6799							
ANR	6197967	FunctionDef	"serializeKeySpaceStr (RAnal * a , const char * space , const char * name , char * k)"		6197966	0					
ANR	6197968	CompoundStatement		290:89:6737:6799	6197966	0					
ANR	6197969	ExpressionStatement	"snprintf ( k , R_SIGN_KEY_MAXSZ , ""zign|%s|%s"" , space , name )"	291:1:6740:6797	6197966	0	True				
ANR	6197970	CallExpression	"snprintf ( k , R_SIGN_KEY_MAXSZ , ""zign|%s|%s"" , space , name )"		6197966	0					
ANR	6197971	Callee	snprintf		6197966	0					
ANR	6197972	Identifier	snprintf		6197966	0					
ANR	6197973	ArgumentList	k		6197966	1					
ANR	6197974	Argument	k		6197966	0					
ANR	6197975	Identifier	k		6197966	0					
ANR	6197976	Argument	R_SIGN_KEY_MAXSZ		6197966	1					
ANR	6197977	Identifier	R_SIGN_KEY_MAXSZ		6197966	0					
ANR	6197978	Argument	"""zign|%s|%s"""		6197966	2					
ANR	6197979	PrimaryExpression	"""zign|%s|%s"""		6197966	0					
ANR	6197980	Argument	space		6197966	3					
ANR	6197981	Identifier	space		6197966	0					
ANR	6197982	Argument	name		6197966	4					
ANR	6197983	Identifier	name		6197966	0					
ANR	6197984	ReturnType	static void		6197966	1					
ANR	6197985	Identifier	serializeKeySpaceStr		6197966	2					
ANR	6197986	ParameterList	"RAnal * a , const char * space , const char * name , char * k"		6197966	3					
ANR	6197987	Parameter	RAnal * a	290:33:6681:6688	6197966	0	True				
ANR	6197988	ParameterType	RAnal *		6197966	0					
ANR	6197989	Identifier	a		6197966	1					
ANR	6197990	Parameter	const char * space	290:43:6691:6707	6197966	1	True				
ANR	6197991	ParameterType	const char *		6197966	0					
ANR	6197992	Identifier	space		6197966	1					
ANR	6197993	Parameter	const char * name	290:62:6710:6725	6197966	2	True				
ANR	6197994	ParameterType	const char *		6197966	0					
ANR	6197995	Identifier	name		6197966	1					
ANR	6197996	Parameter	char * k	290:80:6728:6734	6197966	3	True				
ANR	6197997	ParameterType	char *		6197966	0					
ANR	6197998	Identifier	k		6197966	1					
ANR	6197999	CFGEntryNode	ENTRY		6197966		True				
ANR	6198000	CFGExitNode	EXIT		6197966		True				
ANR	6198001	Symbol	a		6197966						
ANR	6198002	Symbol	name		6197966						
ANR	6198003	Symbol	R_SIGN_KEY_MAXSZ		6197966						
ANR	6198004	Symbol	k		6197966						
ANR	6198005	Symbol	space		6197966						
ANR	6198006	Function	serialize	294:0:6802:9557							
ANR	6198007	FunctionDef	"serialize (RAnal * a , RSignItem * it , char * k , char * v)"		6198006	0					
ANR	6198008	CompoundStatement		294:65:6867:9557	6198006	0					
ANR	6198009	IdentifierDeclStatement	RListIter * iter = NULL ;	295:1:6870:6892	6198006	0	True				
ANR	6198010	IdentifierDecl	* iter = NULL		6198006	0					
ANR	6198011	IdentifierDeclType	RListIter *		6198006	0					
ANR	6198012	Identifier	iter		6198006	1					
ANR	6198013	AssignmentExpression	* iter = NULL		6198006	2		=			
ANR	6198014	Identifier	NULL		6198006	0					
ANR	6198015	Identifier	NULL		6198006	1					
ANR	6198016	IdentifierDeclStatement	"char * hexbytes = NULL , * hexmask = NULL , * hexgraph = NULL ;"	296:1:6895:6951	6198006	1	True				
ANR	6198017	IdentifierDecl	* hexbytes = NULL		6198006	0					
ANR	6198018	IdentifierDeclType	char *		6198006	0					
ANR	6198019	Identifier	hexbytes		6198006	1					
ANR	6198020	AssignmentExpression	* hexbytes = NULL		6198006	2		=			
ANR	6198021	Identifier	NULL		6198006	0					
ANR	6198022	Identifier	NULL		6198006	1					
ANR	6198023	IdentifierDecl	* hexmask = NULL		6198006	1					
ANR	6198024	IdentifierDeclType	char *		6198006	0					
ANR	6198025	Identifier	hexmask		6198006	1					
ANR	6198026	AssignmentExpression	* hexmask = NULL		6198006	2		=			
ANR	6198027	Identifier	NULL		6198006	0					
ANR	6198028	Identifier	NULL		6198006	1					
ANR	6198029	IdentifierDecl	* hexgraph = NULL		6198006	2					
ANR	6198030	IdentifierDeclType	char *		6198006	0					
ANR	6198031	Identifier	hexgraph		6198006	1					
ANR	6198032	AssignmentExpression	* hexgraph = NULL		6198006	2		=			
ANR	6198033	Identifier	NULL		6198006	0					
ANR	6198034	Identifier	NULL		6198006	1					
ANR	6198035	IdentifierDeclStatement	"char * refs = NULL , * xrefs = NULL , * ref = NULL , * var , * vars = NULL ;"	297:1:6954:7019	6198006	2	True				
ANR	6198036	IdentifierDecl	* refs = NULL		6198006	0					
ANR	6198037	IdentifierDeclType	char *		6198006	0					
ANR	6198038	Identifier	refs		6198006	1					
ANR	6198039	AssignmentExpression	* refs = NULL		6198006	2		=			
ANR	6198040	Identifier	NULL		6198006	0					
ANR	6198041	Identifier	NULL		6198006	1					
ANR	6198042	IdentifierDecl	* xrefs = NULL		6198006	1					
ANR	6198043	IdentifierDeclType	char *		6198006	0					
ANR	6198044	Identifier	xrefs		6198006	1					
ANR	6198045	AssignmentExpression	* xrefs = NULL		6198006	2		=			
ANR	6198046	Identifier	NULL		6198006	0					
ANR	6198047	Identifier	NULL		6198006	1					
ANR	6198048	IdentifierDecl	* ref = NULL		6198006	2					
ANR	6198049	IdentifierDeclType	char *		6198006	0					
ANR	6198050	Identifier	ref		6198006	1					
ANR	6198051	AssignmentExpression	* ref = NULL		6198006	2		=			
ANR	6198052	Identifier	NULL		6198006	0					
ANR	6198053	Identifier	NULL		6198006	1					
ANR	6198054	IdentifierDecl	* var		6198006	3					
ANR	6198055	IdentifierDeclType	char *		6198006	0					
ANR	6198056	Identifier	var		6198006	1					
ANR	6198057	IdentifierDecl	* vars = NULL		6198006	4					
ANR	6198058	IdentifierDeclType	char *		6198006	0					
ANR	6198059	Identifier	vars		6198006	1					
ANR	6198060	AssignmentExpression	* vars = NULL		6198006	2		=			
ANR	6198061	Identifier	NULL		6198006	0					
ANR	6198062	Identifier	NULL		6198006	1					
ANR	6198063	IdentifierDeclStatement	"int i = 0 , len = 0 ;"	298:1:7022:7040	6198006	3	True				
ANR	6198064	IdentifierDecl	i = 0		6198006	0					
ANR	6198065	IdentifierDeclType	int		6198006	0					
ANR	6198066	Identifier	i		6198006	1					
ANR	6198067	AssignmentExpression	i = 0		6198006	2		=			
ANR	6198068	Identifier	i		6198006	0					
ANR	6198069	PrimaryExpression	0		6198006	1					
ANR	6198070	IdentifierDecl	len = 0		6198006	1					
ANR	6198071	IdentifierDeclType	int		6198006	0					
ANR	6198072	Identifier	len		6198006	1					
ANR	6198073	AssignmentExpression	len = 0		6198006	2		=			
ANR	6198074	Identifier	len		6198006	0					
ANR	6198075	PrimaryExpression	0		6198006	1					
ANR	6198076	IdentifierDeclStatement	RSignBytes * bytes = it -> bytes ;	299:1:7043:7072	6198006	4	True				
ANR	6198077	IdentifierDecl	* bytes = it -> bytes		6198006	0					
ANR	6198078	IdentifierDeclType	RSignBytes *		6198006	0					
ANR	6198079	Identifier	bytes		6198006	1					
ANR	6198080	AssignmentExpression	* bytes = it -> bytes		6198006	2		=			
ANR	6198081	Identifier	bytes		6198006	0					
ANR	6198082	PtrMemberAccess	it -> bytes		6198006	1					
ANR	6198083	Identifier	it		6198006	0					
ANR	6198084	Identifier	bytes		6198006	1					
ANR	6198085	IdentifierDeclStatement	RSignGraph * graph = it -> graph ;	300:1:7075:7104	6198006	5	True				
ANR	6198086	IdentifierDecl	* graph = it -> graph		6198006	0					
ANR	6198087	IdentifierDeclType	RSignGraph *		6198006	0					
ANR	6198088	Identifier	graph		6198006	1					
ANR	6198089	AssignmentExpression	* graph = it -> graph		6198006	2		=			
ANR	6198090	Identifier	graph		6198006	0					
ANR	6198091	PtrMemberAccess	it -> graph		6198006	1					
ANR	6198092	Identifier	it		6198006	0					
ANR	6198093	Identifier	graph		6198006	1					
ANR	6198094	IdentifierDeclStatement	RSignHash * hash = it -> hash ;	301:1:7107:7133	6198006	6	True				
ANR	6198095	IdentifierDecl	* hash = it -> hash		6198006	0					
ANR	6198096	IdentifierDeclType	RSignHash *		6198006	0					
ANR	6198097	Identifier	hash		6198006	1					
ANR	6198098	AssignmentExpression	* hash = it -> hash		6198006	2		=			
ANR	6198099	Identifier	hash		6198006	0					
ANR	6198100	PtrMemberAccess	it -> hash		6198006	1					
ANR	6198101	Identifier	it		6198006	0					
ANR	6198102	Identifier	hash		6198006	1					
ANR	6198103	IfStatement	if ( k )		6198006	7					
ANR	6198104	Condition	k	303:5:7141:7141	6198006	0	True				
ANR	6198105	Identifier	k		6198006	0					
ANR	6198106	CompoundStatement		10:8:276:276	6198006	1					
ANR	6198107	ExpressionStatement	"serializeKey ( a , it -> space , it -> name , k )"	304:2:7148:7188	6198006	0	True				
ANR	6198108	CallExpression	"serializeKey ( a , it -> space , it -> name , k )"		6198006	0					
ANR	6198109	Callee	serializeKey		6198006	0					
ANR	6198110	Identifier	serializeKey		6198006	0					
ANR	6198111	ArgumentList	a		6198006	1					
ANR	6198112	Argument	a		6198006	0					
ANR	6198113	Identifier	a		6198006	0					
ANR	6198114	Argument	it -> space		6198006	1					
ANR	6198115	PtrMemberAccess	it -> space		6198006	0					
ANR	6198116	Identifier	it		6198006	0					
ANR	6198117	Identifier	space		6198006	1					
ANR	6198118	Argument	it -> name		6198006	2					
ANR	6198119	PtrMemberAccess	it -> name		6198006	0					
ANR	6198120	Identifier	it		6198006	0					
ANR	6198121	Identifier	name		6198006	1					
ANR	6198122	Argument	k		6198006	3					
ANR	6198123	Identifier	k		6198006	0					
ANR	6198124	IfStatement	if ( v )		6198006	8					
ANR	6198125	Condition	v	306:5:7198:7198	6198006	0	True				
ANR	6198126	Identifier	v		6198006	0					
ANR	6198127	CompoundStatement		96:2:2495:2526	6198006	1					
ANR	6198128	IfStatement	if ( bytes )		6198006	0					
ANR	6198129	Condition	bytes	307:6:7209:7213	6198006	0	True				
ANR	6198130	Identifier	bytes		6198006	0					
ANR	6198131	CompoundStatement		14:13:348:348	6198006	1					
ANR	6198132	ExpressionStatement	len = bytes -> size * 2 + 1	308:3:7221:7246	6198006	0	True				
ANR	6198133	AssignmentExpression	len = bytes -> size * 2 + 1		6198006	0		=			
ANR	6198134	Identifier	len		6198006	0					
ANR	6198135	AdditiveExpression	bytes -> size * 2 + 1		6198006	1		+			
ANR	6198136	MultiplicativeExpression	bytes -> size * 2		6198006	0		*			
ANR	6198137	PtrMemberAccess	bytes -> size		6198006	0					
ANR	6198138	Identifier	bytes		6198006	0					
ANR	6198139	Identifier	size		6198006	1					
ANR	6198140	PrimaryExpression	2		6198006	1					
ANR	6198141	PrimaryExpression	1		6198006	1					
ANR	6198142	ExpressionStatement	"hexbytes = calloc ( 1 , len )"	309:3:7251:7277	6198006	1	True				
ANR	6198143	AssignmentExpression	"hexbytes = calloc ( 1 , len )"		6198006	0		=			
ANR	6198144	Identifier	hexbytes		6198006	0					
ANR	6198145	CallExpression	"calloc ( 1 , len )"		6198006	1					
ANR	6198146	Callee	calloc		6198006	0					
ANR	6198147	Identifier	calloc		6198006	0					
ANR	6198148	ArgumentList	1		6198006	1					
ANR	6198149	Argument	1		6198006	0					
ANR	6198150	PrimaryExpression	1		6198006	0					
ANR	6198151	Argument	len		6198006	1					
ANR	6198152	Identifier	len		6198006	0					
ANR	6198153	ExpressionStatement	"hexmask = calloc ( 1 , len )"	310:3:7282:7307	6198006	2	True				
ANR	6198154	AssignmentExpression	"hexmask = calloc ( 1 , len )"		6198006	0		=			
ANR	6198155	Identifier	hexmask		6198006	0					
ANR	6198156	CallExpression	"calloc ( 1 , len )"		6198006	1					
ANR	6198157	Callee	calloc		6198006	0					
ANR	6198158	Identifier	calloc		6198006	0					
ANR	6198159	ArgumentList	1		6198006	1					
ANR	6198160	Argument	1		6198006	0					
ANR	6198161	PrimaryExpression	1		6198006	0					
ANR	6198162	Argument	len		6198006	1					
ANR	6198163	Identifier	len		6198006	0					
ANR	6198164	IfStatement	if ( ! hexbytes || ! hexmask )		6198006	3					
ANR	6198165	Condition	! hexbytes || ! hexmask	311:7:7316:7336	6198006	0	True				
ANR	6198166	OrExpression	! hexbytes || ! hexmask		6198006	0		||			
ANR	6198167	UnaryOperationExpression	! hexbytes		6198006	0					
ANR	6198168	UnaryOperator	!		6198006	0					
ANR	6198169	Identifier	hexbytes		6198006	1					
ANR	6198170	UnaryOperationExpression	! hexmask		6198006	1					
ANR	6198171	UnaryOperator	!		6198006	0					
ANR	6198172	Identifier	hexmask		6198006	1					
ANR	6198173	CompoundStatement		18:30:471:471	6198006	1					
ANR	6198174	ExpressionStatement	free ( hexbytes )	312:4:7345:7360	6198006	0	True				
ANR	6198175	CallExpression	free ( hexbytes )		6198006	0					
ANR	6198176	Callee	free		6198006	0					
ANR	6198177	Identifier	free		6198006	0					
ANR	6198178	ArgumentList	hexbytes		6198006	1					
ANR	6198179	Argument	hexbytes		6198006	0					
ANR	6198180	Identifier	hexbytes		6198006	0					
ANR	6198181	ExpressionStatement	free ( hexmask )	313:4:7366:7380	6198006	1	True				
ANR	6198182	CallExpression	free ( hexmask )		6198006	0					
ANR	6198183	Callee	free		6198006	0					
ANR	6198184	Identifier	free		6198006	0					
ANR	6198185	ArgumentList	hexmask		6198006	1					
ANR	6198186	Argument	hexmask		6198006	0					
ANR	6198187	Identifier	hexmask		6198006	0					
ANR	6198188	ReturnStatement	return ;	314:4:7386:7392	6198006	2	True				
ANR	6198189	IfStatement	if ( ! bytes -> bytes )		6198006	4					
ANR	6198190	Condition	! bytes -> bytes	316:7:7406:7418	6198006	0	True				
ANR	6198191	UnaryOperationExpression	! bytes -> bytes		6198006	0					
ANR	6198192	UnaryOperator	!		6198006	0					
ANR	6198193	PtrMemberAccess	bytes -> bytes		6198006	1					
ANR	6198194	Identifier	bytes		6198006	0					
ANR	6198195	Identifier	bytes		6198006	1					
ANR	6198196	CompoundStatement		23:22:553:553	6198006	1					
ANR	6198197	ExpressionStatement	bytes -> bytes = malloc ( ( bytes -> size + 1 ) * 3 )	317:4:7427:7472	6198006	0	True				
ANR	6198198	AssignmentExpression	bytes -> bytes = malloc ( ( bytes -> size + 1 ) * 3 )		6198006	0		=			
ANR	6198199	PtrMemberAccess	bytes -> bytes		6198006	0					
ANR	6198200	Identifier	bytes		6198006	0					
ANR	6198201	Identifier	bytes		6198006	1					
ANR	6198202	CallExpression	malloc ( ( bytes -> size + 1 ) * 3 )		6198006	1					
ANR	6198203	Callee	malloc		6198006	0					
ANR	6198204	Identifier	malloc		6198006	0					
ANR	6198205	ArgumentList	( bytes -> size + 1 ) * 3		6198006	1					
ANR	6198206	Argument	( bytes -> size + 1 ) * 3		6198006	0					
ANR	6198207	MultiplicativeExpression	( bytes -> size + 1 ) * 3		6198006	0		*			
ANR	6198208	AdditiveExpression	bytes -> size + 1		6198006	0		+			
ANR	6198209	PtrMemberAccess	bytes -> size		6198006	0					
ANR	6198210	Identifier	bytes		6198006	0					
ANR	6198211	Identifier	size		6198006	1					
ANR	6198212	PrimaryExpression	1		6198006	1					
ANR	6198213	PrimaryExpression	3		6198006	1					
ANR	6198214	ExpressionStatement	"r_hex_bin2str ( bytes -> bytes , bytes -> size , hexbytes )"	319:3:7482:7533	6198006	5	True				
ANR	6198215	CallExpression	"r_hex_bin2str ( bytes -> bytes , bytes -> size , hexbytes )"		6198006	0					
ANR	6198216	Callee	r_hex_bin2str		6198006	0					
ANR	6198217	Identifier	r_hex_bin2str		6198006	0					
ANR	6198218	ArgumentList	bytes -> bytes		6198006	1					
ANR	6198219	Argument	bytes -> bytes		6198006	0					
ANR	6198220	PtrMemberAccess	bytes -> bytes		6198006	0					
ANR	6198221	Identifier	bytes		6198006	0					
ANR	6198222	Identifier	bytes		6198006	1					
ANR	6198223	Argument	bytes -> size		6198006	1					
ANR	6198224	PtrMemberAccess	bytes -> size		6198006	0					
ANR	6198225	Identifier	bytes		6198006	0					
ANR	6198226	Identifier	size		6198006	1					
ANR	6198227	Argument	hexbytes		6198006	2					
ANR	6198228	Identifier	hexbytes		6198006	0					
ANR	6198229	IfStatement	if ( ! bytes -> mask )		6198006	6					
ANR	6198230	Condition	! bytes -> mask	320:7:7542:7553	6198006	0	True				
ANR	6198231	UnaryOperationExpression	! bytes -> mask		6198006	0					
ANR	6198232	UnaryOperator	!		6198006	0					
ANR	6198233	PtrMemberAccess	bytes -> mask		6198006	1					
ANR	6198234	Identifier	bytes		6198006	0					
ANR	6198235	Identifier	mask		6198006	1					
ANR	6198236	CompoundStatement		27:21:688:688	6198006	1					
ANR	6198237	ExpressionStatement	bytes -> mask = malloc ( ( bytes -> size + 1 ) * 3 )	321:4:7562:7606	6198006	0	True				
ANR	6198238	AssignmentExpression	bytes -> mask = malloc ( ( bytes -> size + 1 ) * 3 )		6198006	0		=			
ANR	6198239	PtrMemberAccess	bytes -> mask		6198006	0					
ANR	6198240	Identifier	bytes		6198006	0					
ANR	6198241	Identifier	mask		6198006	1					
ANR	6198242	CallExpression	malloc ( ( bytes -> size + 1 ) * 3 )		6198006	1					
ANR	6198243	Callee	malloc		6198006	0					
ANR	6198244	Identifier	malloc		6198006	0					
ANR	6198245	ArgumentList	( bytes -> size + 1 ) * 3		6198006	1					
ANR	6198246	Argument	( bytes -> size + 1 ) * 3		6198006	0					
ANR	6198247	MultiplicativeExpression	( bytes -> size + 1 ) * 3		6198006	0		*			
ANR	6198248	AdditiveExpression	bytes -> size + 1		6198006	0		+			
ANR	6198249	PtrMemberAccess	bytes -> size		6198006	0					
ANR	6198250	Identifier	bytes		6198006	0					
ANR	6198251	Identifier	size		6198006	1					
ANR	6198252	PrimaryExpression	1		6198006	1					
ANR	6198253	PrimaryExpression	3		6198006	1					
ANR	6198254	ExpressionStatement	"r_hex_bin2str ( bytes -> mask , bytes -> size , hexmask )"	323:3:7616:7665	6198006	7	True				
ANR	6198255	CallExpression	"r_hex_bin2str ( bytes -> mask , bytes -> size , hexmask )"		6198006	0					
ANR	6198256	Callee	r_hex_bin2str		6198006	0					
ANR	6198257	Identifier	r_hex_bin2str		6198006	0					
ANR	6198258	ArgumentList	bytes -> mask		6198006	1					
ANR	6198259	Argument	bytes -> mask		6198006	0					
ANR	6198260	PtrMemberAccess	bytes -> mask		6198006	0					
ANR	6198261	Identifier	bytes		6198006	0					
ANR	6198262	Identifier	mask		6198006	1					
ANR	6198263	Argument	bytes -> size		6198006	1					
ANR	6198264	PtrMemberAccess	bytes -> size		6198006	0					
ANR	6198265	Identifier	bytes		6198006	0					
ANR	6198266	Identifier	size		6198006	1					
ANR	6198267	Argument	hexmask		6198006	2					
ANR	6198268	Identifier	hexmask		6198006	0					
ANR	6198269	IfStatement	if ( graph )		6198006	1					
ANR	6198270	Condition	graph	325:6:7677:7681	6198006	0	True				
ANR	6198271	Identifier	graph		6198006	0					
ANR	6198272	CompoundStatement		32:13:816:816	6198006	1					
ANR	6198273	ExpressionStatement	"hexgraph = calloc ( 1 , sizeof ( RSignGraph ) * 2 + 1 )"	326:3:7689:7739	6198006	0	True				
ANR	6198274	AssignmentExpression	"hexgraph = calloc ( 1 , sizeof ( RSignGraph ) * 2 + 1 )"		6198006	0		=			
ANR	6198275	Identifier	hexgraph		6198006	0					
ANR	6198276	CallExpression	"calloc ( 1 , sizeof ( RSignGraph ) * 2 + 1 )"		6198006	1					
ANR	6198277	Callee	calloc		6198006	0					
ANR	6198278	Identifier	calloc		6198006	0					
ANR	6198279	ArgumentList	1		6198006	1					
ANR	6198280	Argument	1		6198006	0					
ANR	6198281	PrimaryExpression	1		6198006	0					
ANR	6198282	Argument	sizeof ( RSignGraph ) * 2 + 1		6198006	1					
ANR	6198283	AdditiveExpression	sizeof ( RSignGraph ) * 2 + 1		6198006	0		+			
ANR	6198284	MultiplicativeExpression	sizeof ( RSignGraph ) * 2		6198006	0		*			
ANR	6198285	SizeofExpression	sizeof ( RSignGraph )		6198006	0					
ANR	6198286	Sizeof	sizeof		6198006	0					
ANR	6198287	SizeofOperand	RSignGraph		6198006	1					
ANR	6198288	PrimaryExpression	2		6198006	1					
ANR	6198289	PrimaryExpression	1		6198006	1					
ANR	6198290	IfStatement	if ( hexgraph )		6198006	1					
ANR	6198291	Condition	hexgraph	327:7:7748:7755	6198006	0	True				
ANR	6198292	Identifier	hexgraph		6198006	0					
ANR	6198293	CompoundStatement		34:17:890:890	6198006	1					
ANR	6198294	ExpressionStatement	"r_hex_bin2str ( ( ut8 * ) graph , sizeof ( RSignGraph ) , hexgraph )"	328:4:7764:7824	6198006	0	True				
ANR	6198295	CallExpression	"r_hex_bin2str ( ( ut8 * ) graph , sizeof ( RSignGraph ) , hexgraph )"		6198006	0					
ANR	6198296	Callee	r_hex_bin2str		6198006	0					
ANR	6198297	Identifier	r_hex_bin2str		6198006	0					
ANR	6198298	ArgumentList	( ut8 * ) graph		6198006	1					
ANR	6198299	Argument	( ut8 * ) graph		6198006	0					
ANR	6198300	CastExpression	( ut8 * ) graph		6198006	0					
ANR	6198301	CastTarget	ut8 *		6198006	0					
ANR	6198302	Identifier	graph		6198006	1					
ANR	6198303	Argument	sizeof ( RSignGraph )		6198006	1					
ANR	6198304	SizeofExpression	sizeof ( RSignGraph )		6198006	0					
ANR	6198305	Sizeof	sizeof		6198006	0					
ANR	6198306	SizeofOperand	RSignGraph		6198006	1					
ANR	6198307	Argument	hexgraph		6198006	2					
ANR	6198308	Identifier	hexgraph		6198006	0					
ANR	6198309	ExpressionStatement	i = 0	331:2:7837:7842	6198006	2	True				
ANR	6198310	AssignmentExpression	i = 0		6198006	0		=			
ANR	6198311	Identifier	i		6198006	0					
ANR	6198312	PrimaryExpression	0		6198006	1					
ANR	6198313	Statement	r_list_foreach	332:2:7846:7859	6198006	3	True				
ANR	6198314	Statement	(	332:17:7861:7861	6198006	4	True				
ANR	6198315	Statement	it	332:18:7862:7863	6198006	5	True				
ANR	6198316	Statement	->	332:20:7864:7865	6198006	6	True				
ANR	6198317	Statement	refs	332:22:7866:7869	6198006	7	True				
ANR	6198318	Statement	","	332:26:7870:7870	6198006	8	True				
ANR	6198319	Statement	iter	332:28:7872:7875	6198006	9	True				
ANR	6198320	Statement	","	332:32:7876:7876	6198006	10	True				
ANR	6198321	Statement	ref	332:34:7878:7880	6198006	11	True				
ANR	6198322	Statement	)	332:37:7881:7881	6198006	12	True				
ANR	6198323	CompoundStatement		39:39:1015:1015	6198006	13					
ANR	6198324	IfStatement	if ( i > 0 )		6198006	0					
ANR	6198325	Condition	i > 0	333:7:7892:7896	6198006	0	True				
ANR	6198326	RelationalExpression	i > 0		6198006	0		>			
ANR	6198327	Identifier	i		6198006	0					
ANR	6198328	PrimaryExpression	0		6198006	1					
ANR	6198329	CompoundStatement		40:14:1031:1031	6198006	1					
ANR	6198330	ExpressionStatement	"refs = r_str_appendch ( refs , ',' )"	334:4:7905:7938	6198006	0	True				
ANR	6198331	AssignmentExpression	"refs = r_str_appendch ( refs , ',' )"		6198006	0		=			
ANR	6198332	Identifier	refs		6198006	0					
ANR	6198333	CallExpression	"r_str_appendch ( refs , ',' )"		6198006	1					
ANR	6198334	Callee	r_str_appendch		6198006	0					
ANR	6198335	Identifier	r_str_appendch		6198006	0					
ANR	6198336	ArgumentList	refs		6198006	1					
ANR	6198337	Argument	refs		6198006	0					
ANR	6198338	Identifier	refs		6198006	0					
ANR	6198339	Argument	"','"		6198006	1					
ANR	6198340	PrimaryExpression	"','"		6198006	0					
ANR	6198341	ExpressionStatement	"refs = r_str_append ( refs , ref )"	336:3:7948:7979	6198006	1	True				
ANR	6198342	AssignmentExpression	"refs = r_str_append ( refs , ref )"		6198006	0		=			
ANR	6198343	Identifier	refs		6198006	0					
ANR	6198344	CallExpression	"r_str_append ( refs , ref )"		6198006	1					
ANR	6198345	Callee	r_str_append		6198006	0					
ANR	6198346	Identifier	r_str_append		6198006	0					
ANR	6198347	ArgumentList	refs		6198006	1					
ANR	6198348	Argument	refs		6198006	0					
ANR	6198349	Identifier	refs		6198006	0					
ANR	6198350	Argument	ref		6198006	1					
ANR	6198351	Identifier	ref		6198006	0					
ANR	6198352	ExpressionStatement	i ++	337:3:7984:7987	6198006	2	True				
ANR	6198353	PostIncDecOperationExpression	i ++		6198006	0					
ANR	6198354	Identifier	i		6198006	0					
ANR	6198355	IncDec	++		6198006	1					
ANR	6198356	ExpressionStatement	i = 0	339:2:7995:8000	6198006	14	True				
ANR	6198357	AssignmentExpression	i = 0		6198006	0		=			
ANR	6198358	Identifier	i		6198006	0					
ANR	6198359	PrimaryExpression	0		6198006	1					
ANR	6198360	Statement	r_list_foreach	340:2:8004:8017	6198006	15	True				
ANR	6198361	Statement	(	340:17:8019:8019	6198006	16	True				
ANR	6198362	Statement	it	340:18:8020:8021	6198006	17	True				
ANR	6198363	Statement	->	340:20:8022:8023	6198006	18	True				
ANR	6198364	Statement	xrefs	340:22:8024:8028	6198006	19	True				
ANR	6198365	Statement	","	340:27:8029:8029	6198006	20	True				
ANR	6198366	Statement	iter	340:29:8031:8034	6198006	21	True				
ANR	6198367	Statement	","	340:33:8035:8035	6198006	22	True				
ANR	6198368	Statement	ref	340:35:8037:8039	6198006	23	True				
ANR	6198369	Statement	)	340:38:8040:8040	6198006	24	True				
ANR	6198370	CompoundStatement		47:40:1174:1174	6198006	25					
ANR	6198371	IfStatement	if ( i > 0 )		6198006	0					
ANR	6198372	Condition	i > 0	341:7:8051:8055	6198006	0	True				
ANR	6198373	RelationalExpression	i > 0		6198006	0		>			
ANR	6198374	Identifier	i		6198006	0					
ANR	6198375	PrimaryExpression	0		6198006	1					
ANR	6198376	CompoundStatement		48:14:1190:1190	6198006	1					
ANR	6198377	ExpressionStatement	"xrefs = r_str_appendch ( xrefs , ',' )"	342:4:8064:8099	6198006	0	True				
ANR	6198378	AssignmentExpression	"xrefs = r_str_appendch ( xrefs , ',' )"		6198006	0		=			
ANR	6198379	Identifier	xrefs		6198006	0					
ANR	6198380	CallExpression	"r_str_appendch ( xrefs , ',' )"		6198006	1					
ANR	6198381	Callee	r_str_appendch		6198006	0					
ANR	6198382	Identifier	r_str_appendch		6198006	0					
ANR	6198383	ArgumentList	xrefs		6198006	1					
ANR	6198384	Argument	xrefs		6198006	0					
ANR	6198385	Identifier	xrefs		6198006	0					
ANR	6198386	Argument	"','"		6198006	1					
ANR	6198387	PrimaryExpression	"','"		6198006	0					
ANR	6198388	ExpressionStatement	"xrefs = r_str_append ( xrefs , ref )"	344:3:8109:8142	6198006	1	True				
ANR	6198389	AssignmentExpression	"xrefs = r_str_append ( xrefs , ref )"		6198006	0		=			
ANR	6198390	Identifier	xrefs		6198006	0					
ANR	6198391	CallExpression	"r_str_append ( xrefs , ref )"		6198006	1					
ANR	6198392	Callee	r_str_append		6198006	0					
ANR	6198393	Identifier	r_str_append		6198006	0					
ANR	6198394	ArgumentList	xrefs		6198006	1					
ANR	6198395	Argument	xrefs		6198006	0					
ANR	6198396	Identifier	xrefs		6198006	0					
ANR	6198397	Argument	ref		6198006	1					
ANR	6198398	Identifier	ref		6198006	0					
ANR	6198399	ExpressionStatement	i ++	345:3:8147:8150	6198006	2	True				
ANR	6198400	PostIncDecOperationExpression	i ++		6198006	0					
ANR	6198401	Identifier	i		6198006	0					
ANR	6198402	IncDec	++		6198006	1					
ANR	6198403	ExpressionStatement	i = 0	347:2:8158:8163	6198006	26	True				
ANR	6198404	AssignmentExpression	i = 0		6198006	0		=			
ANR	6198405	Identifier	i		6198006	0					
ANR	6198406	PrimaryExpression	0		6198006	1					
ANR	6198407	Statement	r_list_foreach	348:2:8167:8180	6198006	27	True				
ANR	6198408	Statement	(	348:17:8182:8182	6198006	28	True				
ANR	6198409	Statement	it	348:18:8183:8184	6198006	29	True				
ANR	6198410	Statement	->	348:20:8185:8186	6198006	30	True				
ANR	6198411	Statement	vars	348:22:8187:8190	6198006	31	True				
ANR	6198412	Statement	","	348:26:8191:8191	6198006	32	True				
ANR	6198413	Statement	iter	348:28:8193:8196	6198006	33	True				
ANR	6198414	Statement	","	348:32:8197:8197	6198006	34	True				
ANR	6198415	Statement	var	348:34:8199:8201	6198006	35	True				
ANR	6198416	Statement	)	348:37:8202:8202	6198006	36	True				
ANR	6198417	CompoundStatement		55:39:1336:1336	6198006	37					
ANR	6198418	IfStatement	if ( i > 0 )		6198006	0					
ANR	6198419	Condition	i > 0	349:7:8213:8217	6198006	0	True				
ANR	6198420	RelationalExpression	i > 0		6198006	0		>			
ANR	6198421	Identifier	i		6198006	0					
ANR	6198422	PrimaryExpression	0		6198006	1					
ANR	6198423	CompoundStatement		56:14:1352:1352	6198006	1					
ANR	6198424	ExpressionStatement	"vars = r_str_appendch ( vars , ',' )"	350:4:8226:8259	6198006	0	True				
ANR	6198425	AssignmentExpression	"vars = r_str_appendch ( vars , ',' )"		6198006	0		=			
ANR	6198426	Identifier	vars		6198006	0					
ANR	6198427	CallExpression	"r_str_appendch ( vars , ',' )"		6198006	1					
ANR	6198428	Callee	r_str_appendch		6198006	0					
ANR	6198429	Identifier	r_str_appendch		6198006	0					
ANR	6198430	ArgumentList	vars		6198006	1					
ANR	6198431	Argument	vars		6198006	0					
ANR	6198432	Identifier	vars		6198006	0					
ANR	6198433	Argument	"','"		6198006	1					
ANR	6198434	PrimaryExpression	"','"		6198006	0					
ANR	6198435	ExpressionStatement	"vars = r_str_append ( vars , var )"	352:3:8269:8300	6198006	1	True				
ANR	6198436	AssignmentExpression	"vars = r_str_append ( vars , var )"		6198006	0		=			
ANR	6198437	Identifier	vars		6198006	0					
ANR	6198438	CallExpression	"r_str_append ( vars , var )"		6198006	1					
ANR	6198439	Callee	r_str_append		6198006	0					
ANR	6198440	Identifier	r_str_append		6198006	0					
ANR	6198441	ArgumentList	vars		6198006	1					
ANR	6198442	Argument	vars		6198006	0					
ANR	6198443	Identifier	vars		6198006	0					
ANR	6198444	Argument	var		6198006	1					
ANR	6198445	Identifier	var		6198006	0					
ANR	6198446	ExpressionStatement	i ++	353:3:8305:8308	6198006	2	True				
ANR	6198447	PostIncDecOperationExpression	i ++		6198006	0					
ANR	6198448	Identifier	i		6198006	0					
ANR	6198449	IncDec	++		6198006	1					
ANR	6198450	IdentifierDeclStatement	"RStrBuf * sb = r_strbuf_new ( """" ) ;"	355:2:8316:8347	6198006	38	True				
ANR	6198451	IdentifierDecl	"* sb = r_strbuf_new ( """" )"		6198006	0					
ANR	6198452	IdentifierDeclType	RStrBuf *		6198006	0					
ANR	6198453	Identifier	sb		6198006	1					
ANR	6198454	AssignmentExpression	"* sb = r_strbuf_new ( """" )"		6198006	2		=			
ANR	6198455	Identifier	sb		6198006	0					
ANR	6198456	CallExpression	"r_strbuf_new ( """" )"		6198006	1					
ANR	6198457	Callee	r_strbuf_new		6198006	0					
ANR	6198458	Identifier	r_strbuf_new		6198006	0					
ANR	6198459	ArgumentList	""""""		6198006	1					
ANR	6198460	Argument	""""""		6198006	0					
ANR	6198461	PrimaryExpression	""""""		6198006	0					
ANR	6198462	IfStatement	if ( bytes )		6198006	39					
ANR	6198463	Condition	bytes	356:6:8355:8359	6198006	0	True				
ANR	6198464	Identifier	bytes		6198006	0					
ANR	6198465	CompoundStatement		63:13:1494:1494	6198006	1					
ANR	6198466	ExpressionStatement	"r_strbuf_appendf ( sb , ""|s:%d|b:%s|m:%s"" , bytes -> size , hexbytes , hexmask )"	358:3:8427:8499	6198006	0	True				
ANR	6198467	CallExpression	"r_strbuf_appendf ( sb , ""|s:%d|b:%s|m:%s"" , bytes -> size , hexbytes , hexmask )"		6198006	0					
ANR	6198468	Callee	r_strbuf_appendf		6198006	0					
ANR	6198469	Identifier	r_strbuf_appendf		6198006	0					
ANR	6198470	ArgumentList	sb		6198006	1					
ANR	6198471	Argument	sb		6198006	0					
ANR	6198472	Identifier	sb		6198006	0					
ANR	6198473	Argument	"""|s:%d|b:%s|m:%s"""		6198006	1					
ANR	6198474	PrimaryExpression	"""|s:%d|b:%s|m:%s"""		6198006	0					
ANR	6198475	Argument	bytes -> size		6198006	2					
ANR	6198476	PtrMemberAccess	bytes -> size		6198006	0					
ANR	6198477	Identifier	bytes		6198006	0					
ANR	6198478	Identifier	size		6198006	1					
ANR	6198479	Argument	hexbytes		6198006	3					
ANR	6198480	Identifier	hexbytes		6198006	0					
ANR	6198481	Argument	hexmask		6198006	4					
ANR	6198482	Identifier	hexmask		6198006	0					
ANR	6198483	IfStatement	if ( it -> addr != UT64_MAX )		6198006	40					
ANR	6198484	Condition	it -> addr != UT64_MAX	360:6:8511:8530	6198006	0	True				
ANR	6198485	EqualityExpression	it -> addr != UT64_MAX		6198006	0		!=			
ANR	6198486	PtrMemberAccess	it -> addr		6198006	0					
ANR	6198487	Identifier	it		6198006	0					
ANR	6198488	Identifier	addr		6198006	1					
ANR	6198489	Identifier	UT64_MAX		6198006	1					
ANR	6198490	CompoundStatement		67:28:1665:1665	6198006	1					
ANR	6198491	Statement	r_strbuf_appendf	361:3:8538:8553	6198006	0	True				
ANR	6198492	Statement	(	361:20:8555:8555	6198006	1	True				
ANR	6198493	Statement	sb	361:21:8556:8557	6198006	2	True				
ANR	6198494	Statement	","	361:23:8558:8558	6198006	3	True				
ANR	6198495	Statement	"""|%c:%"""	361:25:8560:8566	6198006	4	True				
ANR	6198496	Statement	PFMT64d	361:32:8567:8573	6198006	5	True				
ANR	6198497	Statement	","	361:39:8574:8574	6198006	6	True				
ANR	6198498	Statement	R_SIGN_OFFSET	361:41:8576:8588	6198006	7	True				
ANR	6198499	Statement	","	361:54:8589:8589	6198006	8	True				
ANR	6198500	Statement	it	361:56:8591:8592	6198006	9	True				
ANR	6198501	Statement	->	361:58:8593:8594	6198006	10	True				
ANR	6198502	Statement	addr	361:60:8595:8598	6198006	11	True				
ANR	6198503	Statement	)	361:64:8599:8599	6198006	12	True				
ANR	6198504	ExpressionStatement		361:65:8600:8600	6198006	13	True				
ANR	6198505	IfStatement	if ( graph )		6198006	41					
ANR	6198506	Condition	graph	363:6:8612:8616	6198006	0	True				
ANR	6198507	Identifier	graph		6198006	0					
ANR	6198508	CompoundStatement		70:13:1751:1751	6198006	1					
ANR	6198509	ExpressionStatement	"r_strbuf_appendf ( sb , ""|%c:%s"" , R_SIGN_GRAPH , hexgraph )"	364:3:8624:8679	6198006	0	True				
ANR	6198510	CallExpression	"r_strbuf_appendf ( sb , ""|%c:%s"" , R_SIGN_GRAPH , hexgraph )"		6198006	0					
ANR	6198511	Callee	r_strbuf_appendf		6198006	0					
ANR	6198512	Identifier	r_strbuf_appendf		6198006	0					
ANR	6198513	ArgumentList	sb		6198006	1					
ANR	6198514	Argument	sb		6198006	0					
ANR	6198515	Identifier	sb		6198006	0					
ANR	6198516	Argument	"""|%c:%s"""		6198006	1					
ANR	6198517	PrimaryExpression	"""|%c:%s"""		6198006	0					
ANR	6198518	Argument	R_SIGN_GRAPH		6198006	2					
ANR	6198519	Identifier	R_SIGN_GRAPH		6198006	0					
ANR	6198520	Argument	hexgraph		6198006	3					
ANR	6198521	Identifier	hexgraph		6198006	0					
ANR	6198522	IfStatement	if ( refs )		6198006	42					
ANR	6198523	Condition	refs	366:6:8691:8694	6198006	0	True				
ANR	6198524	Identifier	refs		6198006	0					
ANR	6198525	CompoundStatement		73:12:1829:1829	6198006	1					
ANR	6198526	ExpressionStatement	"r_strbuf_appendf ( sb , ""|%c:%s"" , R_SIGN_REFS , refs )"	367:3:8702:8752	6198006	0	True				
ANR	6198527	CallExpression	"r_strbuf_appendf ( sb , ""|%c:%s"" , R_SIGN_REFS , refs )"		6198006	0					
ANR	6198528	Callee	r_strbuf_appendf		6198006	0					
ANR	6198529	Identifier	r_strbuf_appendf		6198006	0					
ANR	6198530	ArgumentList	sb		6198006	1					
ANR	6198531	Argument	sb		6198006	0					
ANR	6198532	Identifier	sb		6198006	0					
ANR	6198533	Argument	"""|%c:%s"""		6198006	1					
ANR	6198534	PrimaryExpression	"""|%c:%s"""		6198006	0					
ANR	6198535	Argument	R_SIGN_REFS		6198006	2					
ANR	6198536	Identifier	R_SIGN_REFS		6198006	0					
ANR	6198537	Argument	refs		6198006	3					
ANR	6198538	Identifier	refs		6198006	0					
ANR	6198539	IfStatement	if ( xrefs )		6198006	43					
ANR	6198540	Condition	xrefs	369:6:8764:8768	6198006	0	True				
ANR	6198541	Identifier	xrefs		6198006	0					
ANR	6198542	CompoundStatement		76:13:1903:1903	6198006	1					
ANR	6198543	ExpressionStatement	"r_strbuf_appendf ( sb , ""|%c:%s"" , R_SIGN_XREFS , xrefs )"	370:3:8776:8828	6198006	0	True				
ANR	6198544	CallExpression	"r_strbuf_appendf ( sb , ""|%c:%s"" , R_SIGN_XREFS , xrefs )"		6198006	0					
ANR	6198545	Callee	r_strbuf_appendf		6198006	0					
ANR	6198546	Identifier	r_strbuf_appendf		6198006	0					
ANR	6198547	ArgumentList	sb		6198006	1					
ANR	6198548	Argument	sb		6198006	0					
ANR	6198549	Identifier	sb		6198006	0					
ANR	6198550	Argument	"""|%c:%s"""		6198006	1					
ANR	6198551	PrimaryExpression	"""|%c:%s"""		6198006	0					
ANR	6198552	Argument	R_SIGN_XREFS		6198006	2					
ANR	6198553	Identifier	R_SIGN_XREFS		6198006	0					
ANR	6198554	Argument	xrefs		6198006	3					
ANR	6198555	Identifier	xrefs		6198006	0					
ANR	6198556	IfStatement	if ( vars )		6198006	44					
ANR	6198557	Condition	vars	372:6:8840:8843	6198006	0	True				
ANR	6198558	Identifier	vars		6198006	0					
ANR	6198559	CompoundStatement		79:12:1978:1978	6198006	1					
ANR	6198560	ExpressionStatement	"r_strbuf_appendf ( sb , ""|%c:%s"" , R_SIGN_VARS , vars )"	373:3:8851:8901	6198006	0	True				
ANR	6198561	CallExpression	"r_strbuf_appendf ( sb , ""|%c:%s"" , R_SIGN_VARS , vars )"		6198006	0					
ANR	6198562	Callee	r_strbuf_appendf		6198006	0					
ANR	6198563	Identifier	r_strbuf_appendf		6198006	0					
ANR	6198564	ArgumentList	sb		6198006	1					
ANR	6198565	Argument	sb		6198006	0					
ANR	6198566	Identifier	sb		6198006	0					
ANR	6198567	Argument	"""|%c:%s"""		6198006	1					
ANR	6198568	PrimaryExpression	"""|%c:%s"""		6198006	0					
ANR	6198569	Argument	R_SIGN_VARS		6198006	2					
ANR	6198570	Identifier	R_SIGN_VARS		6198006	0					
ANR	6198571	Argument	vars		6198006	3					
ANR	6198572	Identifier	vars		6198006	0					
ANR	6198573	IfStatement	if ( it -> comment )		6198006	45					
ANR	6198574	Condition	it -> comment	375:6:8913:8923	6198006	0	True				
ANR	6198575	PtrMemberAccess	it -> comment		6198006	0					
ANR	6198576	Identifier	it		6198006	0					
ANR	6198577	Identifier	comment		6198006	1					
ANR	6198578	CompoundStatement		82:19:2058:2058	6198006	1					
ANR	6198579	ExpressionStatement	"r_strbuf_appendf ( sb , ""|%c:%s"" , R_SIGN_COMMENT , it -> comment )"	377:3:8949:9009	6198006	0	True				
ANR	6198580	CallExpression	"r_strbuf_appendf ( sb , ""|%c:%s"" , R_SIGN_COMMENT , it -> comment )"		6198006	0					
ANR	6198581	Callee	r_strbuf_appendf		6198006	0					
ANR	6198582	Identifier	r_strbuf_appendf		6198006	0					
ANR	6198583	ArgumentList	sb		6198006	1					
ANR	6198584	Argument	sb		6198006	0					
ANR	6198585	Identifier	sb		6198006	0					
ANR	6198586	Argument	"""|%c:%s"""		6198006	1					
ANR	6198587	PrimaryExpression	"""|%c:%s"""		6198006	0					
ANR	6198588	Argument	R_SIGN_COMMENT		6198006	2					
ANR	6198589	Identifier	R_SIGN_COMMENT		6198006	0					
ANR	6198590	Argument	it -> comment		6198006	3					
ANR	6198591	PtrMemberAccess	it -> comment		6198006	0					
ANR	6198592	Identifier	it		6198006	0					
ANR	6198593	Identifier	comment		6198006	1					
ANR	6198594	IfStatement	if ( it -> realname )		6198006	46					
ANR	6198595	Condition	it -> realname	379:6:9021:9032	6198006	0	True				
ANR	6198596	PtrMemberAccess	it -> realname		6198006	0					
ANR	6198597	Identifier	it		6198006	0					
ANR	6198598	Identifier	realname		6198006	1					
ANR	6198599	CompoundStatement		86:20:2167:2167	6198006	1					
ANR	6198600	ExpressionStatement	"r_strbuf_appendf ( sb , ""|%c:%s"" , R_SIGN_NAME , it -> realname )"	381:3:9058:9116	6198006	0	True				
ANR	6198601	CallExpression	"r_strbuf_appendf ( sb , ""|%c:%s"" , R_SIGN_NAME , it -> realname )"		6198006	0					
ANR	6198602	Callee	r_strbuf_appendf		6198006	0					
ANR	6198603	Identifier	r_strbuf_appendf		6198006	0					
ANR	6198604	ArgumentList	sb		6198006	1					
ANR	6198605	Argument	sb		6198006	0					
ANR	6198606	Identifier	sb		6198006	0					
ANR	6198607	Argument	"""|%c:%s"""		6198006	1					
ANR	6198608	PrimaryExpression	"""|%c:%s"""		6198006	0					
ANR	6198609	Argument	R_SIGN_NAME		6198006	2					
ANR	6198610	Identifier	R_SIGN_NAME		6198006	0					
ANR	6198611	Argument	it -> realname		6198006	3					
ANR	6198612	PtrMemberAccess	it -> realname		6198006	0					
ANR	6198613	Identifier	it		6198006	0					
ANR	6198614	Identifier	realname		6198006	1					
ANR	6198615	IfStatement	if ( hash && hash -> bbhash )		6198006	47					
ANR	6198616	Condition	hash && hash -> bbhash	383:6:9128:9147	6198006	0	True				
ANR	6198617	AndExpression	hash && hash -> bbhash		6198006	0		&&			
ANR	6198618	Identifier	hash		6198006	0					
ANR	6198619	PtrMemberAccess	hash -> bbhash		6198006	1					
ANR	6198620	Identifier	hash		6198006	0					
ANR	6198621	Identifier	bbhash		6198006	1					
ANR	6198622	CompoundStatement		90:28:2282:2282	6198006	1					
ANR	6198623	ExpressionStatement	"r_strbuf_appendf ( sb , ""|%c:%s"" , R_SIGN_BBHASH , hash -> bbhash )"	384:3:9155:9215	6198006	0	True				
ANR	6198624	CallExpression	"r_strbuf_appendf ( sb , ""|%c:%s"" , R_SIGN_BBHASH , hash -> bbhash )"		6198006	0					
ANR	6198625	Callee	r_strbuf_appendf		6198006	0					
ANR	6198626	Identifier	r_strbuf_appendf		6198006	0					
ANR	6198627	ArgumentList	sb		6198006	1					
ANR	6198628	Argument	sb		6198006	0					
ANR	6198629	Identifier	sb		6198006	0					
ANR	6198630	Argument	"""|%c:%s"""		6198006	1					
ANR	6198631	PrimaryExpression	"""|%c:%s"""		6198006	0					
ANR	6198632	Argument	R_SIGN_BBHASH		6198006	2					
ANR	6198633	Identifier	R_SIGN_BBHASH		6198006	0					
ANR	6198634	Argument	hash -> bbhash		6198006	3					
ANR	6198635	PtrMemberAccess	hash -> bbhash		6198006	0					
ANR	6198636	Identifier	hash		6198006	0					
ANR	6198637	Identifier	bbhash		6198006	1					
ANR	6198638	IfStatement	if ( r_strbuf_length ( sb ) >= R_SIGN_VAL_MAXSZ )		6198006	48					
ANR	6198639	Condition	r_strbuf_length ( sb ) >= R_SIGN_VAL_MAXSZ	386:6:9227:9266	6198006	0	True				
ANR	6198640	RelationalExpression	r_strbuf_length ( sb ) >= R_SIGN_VAL_MAXSZ		6198006	0		>=			
ANR	6198641	CallExpression	r_strbuf_length ( sb )		6198006	0					
ANR	6198642	Callee	r_strbuf_length		6198006	0					
ANR	6198643	Identifier	r_strbuf_length		6198006	0					
ANR	6198644	ArgumentList	sb		6198006	1					
ANR	6198645	Argument	sb		6198006	0					
ANR	6198646	Identifier	sb		6198006	0					
ANR	6198647	Identifier	R_SIGN_VAL_MAXSZ		6198006	1					
ANR	6198648	CompoundStatement		93:48:2401:2401	6198006	1					
ANR	6198649	Statement	eprintf	387:3:9274:9280	6198006	0	True				
ANR	6198650	Statement	(	387:11:9282:9282	6198006	1	True				
ANR	6198651	Statement	"""Signature limit reached for 0x%08"""	387:12:9283:9317	6198006	2	True				
ANR	6198652	Statement	PFMT64x	387:47:9318:9324	6198006	3	True				
ANR	6198653	Statement	""" (%s)\\n"""	387:54:9325:9333	6198006	4	True				
ANR	6198654	Statement	","	387:63:9334:9334	6198006	5	True				
ANR	6198655	Statement	it	387:65:9336:9337	6198006	6	True				
ANR	6198656	Statement	->	387:67:9338:9339	6198006	7	True				
ANR	6198657	Statement	addr	387:69:9340:9343	6198006	8	True				
ANR	6198658	Statement	","	387:73:9344:9344	6198006	9	True				
ANR	6198659	Statement	it	387:75:9346:9347	6198006	10	True				
ANR	6198660	Statement	->	387:77:9348:9349	6198006	11	True				
ANR	6198661	Statement	name	387:79:9350:9353	6198006	12	True				
ANR	6198662	Statement	)	387:83:9354:9354	6198006	13	True				
ANR	6198663	ExpressionStatement		387:84:9355:9355	6198006	14	True				
ANR	6198664	IdentifierDeclStatement	char * res = r_strbuf_drain ( sb ) ;	389:2:9363:9394	6198006	49	True				
ANR	6198665	IdentifierDecl	* res = r_strbuf_drain ( sb )		6198006	0					
ANR	6198666	IdentifierDeclType	char *		6198006	0					
ANR	6198667	Identifier	res		6198006	1					
ANR	6198668	AssignmentExpression	* res = r_strbuf_drain ( sb )		6198006	2		=			
ANR	6198669	Identifier	res		6198006	0					
ANR	6198670	CallExpression	r_strbuf_drain ( sb )		6198006	1					
ANR	6198671	Callee	r_strbuf_drain		6198006	0					
ANR	6198672	Identifier	r_strbuf_drain		6198006	0					
ANR	6198673	ArgumentList	sb		6198006	1					
ANR	6198674	Argument	sb		6198006	0					
ANR	6198675	Identifier	sb		6198006	0					
ANR	6198676	IfStatement	if ( res )		6198006	50					
ANR	6198677	Condition	res	390:6:9402:9404	6198006	0	True				
ANR	6198678	Identifier	res		6198006	0					
ANR	6198679	CompoundStatement		97:11:2539:2539	6198006	1					
ANR	6198680	ExpressionStatement	"strncpy ( v , res , R_SIGN_VAL_MAXSZ )"	391:3:9412:9446	6198006	0	True				
ANR	6198681	CallExpression	"strncpy ( v , res , R_SIGN_VAL_MAXSZ )"		6198006	0					
ANR	6198682	Callee	strncpy		6198006	0					
ANR	6198683	Identifier	strncpy		6198006	0					
ANR	6198684	ArgumentList	v		6198006	1					
ANR	6198685	Argument	v		6198006	0					
ANR	6198686	Identifier	v		6198006	0					
ANR	6198687	Argument	res		6198006	1					
ANR	6198688	Identifier	res		6198006	0					
ANR	6198689	Argument	R_SIGN_VAL_MAXSZ		6198006	2					
ANR	6198690	Identifier	R_SIGN_VAL_MAXSZ		6198006	0					
ANR	6198691	ExpressionStatement	free ( res )	392:3:9451:9461	6198006	1	True				
ANR	6198692	CallExpression	free ( res )		6198006	0					
ANR	6198693	Callee	free		6198006	0					
ANR	6198694	Identifier	free		6198006	0					
ANR	6198695	ArgumentList	res		6198006	1					
ANR	6198696	Argument	res		6198006	0					
ANR	6198697	Identifier	res		6198006	0					
ANR	6198698	ExpressionStatement	free ( hexbytes )	395:2:9470:9485	6198006	51	True				
ANR	6198699	CallExpression	free ( hexbytes )		6198006	0					
ANR	6198700	Callee	free		6198006	0					
ANR	6198701	Identifier	free		6198006	0					
ANR	6198702	ArgumentList	hexbytes		6198006	1					
ANR	6198703	Argument	hexbytes		6198006	0					
ANR	6198704	Identifier	hexbytes		6198006	0					
ANR	6198705	ExpressionStatement	free ( hexmask )	396:2:9489:9503	6198006	52	True				
ANR	6198706	CallExpression	free ( hexmask )		6198006	0					
ANR	6198707	Callee	free		6198006	0					
ANR	6198708	Identifier	free		6198006	0					
ANR	6198709	ArgumentList	hexmask		6198006	1					
ANR	6198710	Argument	hexmask		6198006	0					
ANR	6198711	Identifier	hexmask		6198006	0					
ANR	6198712	ExpressionStatement	free ( hexgraph )	397:2:9507:9522	6198006	53	True				
ANR	6198713	CallExpression	free ( hexgraph )		6198006	0					
ANR	6198714	Callee	free		6198006	0					
ANR	6198715	Identifier	free		6198006	0					
ANR	6198716	ArgumentList	hexgraph		6198006	1					
ANR	6198717	Argument	hexgraph		6198006	0					
ANR	6198718	Identifier	hexgraph		6198006	0					
ANR	6198719	ExpressionStatement	free ( refs )	398:2:9526:9537	6198006	54	True				
ANR	6198720	CallExpression	free ( refs )		6198006	0					
ANR	6198721	Callee	free		6198006	0					
ANR	6198722	Identifier	free		6198006	0					
ANR	6198723	ArgumentList	refs		6198006	1					
ANR	6198724	Argument	refs		6198006	0					
ANR	6198725	Identifier	refs		6198006	0					
ANR	6198726	ExpressionStatement	free ( vars )	399:2:9541:9552	6198006	55	True				
ANR	6198727	CallExpression	free ( vars )		6198006	0					
ANR	6198728	Callee	free		6198006	0					
ANR	6198729	Identifier	free		6198006	0					
ANR	6198730	ArgumentList	vars		6198006	1					
ANR	6198731	Argument	vars		6198006	0					
ANR	6198732	Identifier	vars		6198006	0					
ANR	6198733	ReturnType	static void		6198006	1					
ANR	6198734	Identifier	serialize		6198006	2					
ANR	6198735	ParameterList	"RAnal * a , RSignItem * it , char * k , char * v"		6198006	3					
ANR	6198736	Parameter	RAnal * a	294:22:6824:6831	6198006	0	True				
ANR	6198737	ParameterType	RAnal *		6198006	0					
ANR	6198738	Identifier	a		6198006	1					
ANR	6198739	Parameter	RSignItem * it	294:32:6834:6846	6198006	1	True				
ANR	6198740	ParameterType	RSignItem *		6198006	0					
ANR	6198741	Identifier	it		6198006	1					
ANR	6198742	Parameter	char * k	294:47:6849:6855	6198006	2	True				
ANR	6198743	ParameterType	char *		6198006	0					
ANR	6198744	Identifier	k		6198006	1					
ANR	6198745	Parameter	char * v	294:56:6858:6864	6198006	3	True				
ANR	6198746	ParameterType	char *		6198006	0					
ANR	6198747	Identifier	v		6198006	1					
ANR	6198748	CFGEntryNode	ENTRY		6198006		True				
ANR	6198749	CFGExitNode	EXIT		6198006		True				
ANR	6198750	Symbol	bytes -> size		6198006						
ANR	6198751	Symbol	it -> graph		6198006						
ANR	6198752	Symbol	hexbytes		6198006						
ANR	6198753	Symbol	* bytes		6198006						
ANR	6198754	Symbol	ref		6198006						
ANR	6198755	Symbol	len		6198006						
ANR	6198756	Symbol	vars		6198006						
ANR	6198757	Symbol	R_SIGN_NAME		6198006						
ANR	6198758	Symbol	bytes -> mask		6198006						
ANR	6198759	Symbol	it -> comment		6198006						
ANR	6198760	Symbol	it -> realname		6198006						
ANR	6198761	Symbol	res		6198006						
ANR	6198762	Symbol	r_str_appendch		6198006						
ANR	6198763	Symbol	NULL		6198006						
ANR	6198764	Symbol	it -> bytes		6198006						
ANR	6198765	Symbol	r_strbuf_new		6198006						
ANR	6198766	Symbol	var		6198006						
ANR	6198767	Symbol	it -> name		6198006						
ANR	6198768	Symbol	hexmask		6198006						
ANR	6198769	Symbol	iter		6198006						
ANR	6198770	Symbol	it		6198006						
ANR	6198771	Symbol	graph		6198006						
ANR	6198772	Symbol	it -> space		6198006						
ANR	6198773	Symbol	R_SIGN_COMMENT		6198006						
ANR	6198774	Symbol	hash		6198006						
ANR	6198775	Symbol	hash -> bbhash		6198006						
ANR	6198776	Symbol	r_str_append		6198006						
ANR	6198777	Symbol	R_SIGN_BBHASH		6198006						
ANR	6198778	Symbol	calloc		6198006						
ANR	6198779	Symbol	sb		6198006						
ANR	6198780	Symbol	it -> hash		6198006						
ANR	6198781	Symbol	r_strbuf_length		6198006						
ANR	6198782	Symbol	* hash		6198006						
ANR	6198783	Symbol	UT64_MAX		6198006						
ANR	6198784	Symbol	a		6198006						
ANR	6198785	Symbol	malloc		6198006						
ANR	6198786	Symbol	R_SIGN_VAL_MAXSZ		6198006						
ANR	6198787	Symbol	R_SIGN_GRAPH		6198006						
ANR	6198788	Symbol	hexgraph		6198006						
ANR	6198789	Symbol	xrefs		6198006						
ANR	6198790	Symbol	R_SIGN_REFS		6198006						
ANR	6198791	Symbol	i		6198006						
ANR	6198792	Symbol	k		6198006						
ANR	6198793	Symbol	R_SIGN_XREFS		6198006						
ANR	6198794	Symbol	* it		6198006						
ANR	6198795	Symbol	refs		6198006						
ANR	6198796	Symbol	v		6198006						
ANR	6198797	Symbol	bytes		6198006						
ANR	6198798	Symbol	it -> addr		6198006						
ANR	6198799	Symbol	r_strbuf_drain		6198006						
ANR	6198800	Symbol	bytes -> bytes		6198006						
ANR	6198801	Symbol	R_SIGN_VARS		6198006						
ANR	6198802	Function	mergeItem	403:0:9560:11226							
ANR	6198803	FunctionDef	"mergeItem (RSignItem * dst , RSignItem * src)"		6198802	0					
ANR	6198804	CompoundStatement		403:54:9614:11226	6198802	0					
ANR	6198805	IdentifierDeclStatement	RListIter * iter = NULL ;	404:1:9617:9639	6198802	0	True				
ANR	6198806	IdentifierDecl	* iter = NULL		6198802	0					
ANR	6198807	IdentifierDeclType	RListIter *		6198802	0					
ANR	6198808	Identifier	iter		6198802	1					
ANR	6198809	AssignmentExpression	* iter = NULL		6198802	2		=			
ANR	6198810	Identifier	NULL		6198802	0					
ANR	6198811	Identifier	NULL		6198802	1					
ANR	6198812	IdentifierDeclStatement	"char * ref , * var ;"	405:1:9642:9657	6198802	1	True				
ANR	6198813	IdentifierDecl	* ref		6198802	0					
ANR	6198814	IdentifierDeclType	char *		6198802	0					
ANR	6198815	Identifier	ref		6198802	1					
ANR	6198816	IdentifierDecl	* var		6198802	1					
ANR	6198817	IdentifierDeclType	char *		6198802	0					
ANR	6198818	Identifier	var		6198802	1					
ANR	6198819	IfStatement	if ( src -> bytes )		6198802	2					
ANR	6198820	Condition	src -> bytes	407:5:9665:9674	6198802	0	True				
ANR	6198821	PtrMemberAccess	src -> bytes		6198802	0					
ANR	6198822	Identifier	src		6198802	0					
ANR	6198823	Identifier	bytes		6198802	1					
ANR	6198824	CompoundStatement		5:17:62:62	6198802	1					
ANR	6198825	IfStatement	if ( dst -> bytes )		6198802	0					
ANR	6198826	Condition	dst -> bytes	408:6:9685:9694	6198802	0	True				
ANR	6198827	PtrMemberAccess	dst -> bytes		6198802	0					
ANR	6198828	Identifier	dst		6198802	0					
ANR	6198829	Identifier	bytes		6198802	1					
ANR	6198830	CompoundStatement		6:18:82:82	6198802	1					
ANR	6198831	ExpressionStatement	free ( dst -> bytes -> bytes )	409:3:9702:9726	6198802	0	True				
ANR	6198832	CallExpression	free ( dst -> bytes -> bytes )		6198802	0					
ANR	6198833	Callee	free		6198802	0					
ANR	6198834	Identifier	free		6198802	0					
ANR	6198835	ArgumentList	dst -> bytes -> bytes		6198802	1					
ANR	6198836	Argument	dst -> bytes -> bytes		6198802	0					
ANR	6198837	PtrMemberAccess	dst -> bytes -> bytes		6198802	0					
ANR	6198838	PtrMemberAccess	dst -> bytes		6198802	0					
ANR	6198839	Identifier	dst		6198802	0					
ANR	6198840	Identifier	bytes		6198802	1					
ANR	6198841	Identifier	bytes		6198802	1					
ANR	6198842	ExpressionStatement	free ( dst -> bytes -> mask )	410:3:9731:9754	6198802	1	True				
ANR	6198843	CallExpression	free ( dst -> bytes -> mask )		6198802	0					
ANR	6198844	Callee	free		6198802	0					
ANR	6198845	Identifier	free		6198802	0					
ANR	6198846	ArgumentList	dst -> bytes -> mask		6198802	1					
ANR	6198847	Argument	dst -> bytes -> mask		6198802	0					
ANR	6198848	PtrMemberAccess	dst -> bytes -> mask		6198802	0					
ANR	6198849	PtrMemberAccess	dst -> bytes		6198802	0					
ANR	6198850	Identifier	dst		6198802	0					
ANR	6198851	Identifier	bytes		6198802	1					
ANR	6198852	Identifier	mask		6198802	1					
ANR	6198853	ExpressionStatement	free ( dst -> bytes )	411:3:9759:9776	6198802	2	True				
ANR	6198854	CallExpression	free ( dst -> bytes )		6198802	0					
ANR	6198855	Callee	free		6198802	0					
ANR	6198856	Identifier	free		6198802	0					
ANR	6198857	ArgumentList	dst -> bytes		6198802	1					
ANR	6198858	Argument	dst -> bytes		6198802	0					
ANR	6198859	PtrMemberAccess	dst -> bytes		6198802	0					
ANR	6198860	Identifier	dst		6198802	0					
ANR	6198861	Identifier	bytes		6198802	1					
ANR	6198862	ExpressionStatement	dst -> bytes = R_NEW0 ( RSignBytes )	413:2:9784:9816	6198802	1	True				
ANR	6198863	AssignmentExpression	dst -> bytes = R_NEW0 ( RSignBytes )		6198802	0		=			
ANR	6198864	PtrMemberAccess	dst -> bytes		6198802	0					
ANR	6198865	Identifier	dst		6198802	0					
ANR	6198866	Identifier	bytes		6198802	1					
ANR	6198867	CallExpression	R_NEW0 ( RSignBytes )		6198802	1					
ANR	6198868	Callee	R_NEW0		6198802	0					
ANR	6198869	Identifier	R_NEW0		6198802	0					
ANR	6198870	ArgumentList	RSignBytes		6198802	1					
ANR	6198871	Argument	RSignBytes		6198802	0					
ANR	6198872	Identifier	RSignBytes		6198802	0					
ANR	6198873	IfStatement	if ( ! dst -> bytes )		6198802	2					
ANR	6198874	Condition	! dst -> bytes	414:6:9824:9834	6198802	0	True				
ANR	6198875	UnaryOperationExpression	! dst -> bytes		6198802	0					
ANR	6198876	UnaryOperator	!		6198802	0					
ANR	6198877	PtrMemberAccess	dst -> bytes		6198802	1					
ANR	6198878	Identifier	dst		6198802	0					
ANR	6198879	Identifier	bytes		6198802	1					
ANR	6198880	CompoundStatement		12:19:222:222	6198802	1					
ANR	6198881	ReturnStatement	return ;	415:3:9842:9848	6198802	0	True				
ANR	6198882	ExpressionStatement	dst -> space = src -> space	417:2:9856:9879	6198802	3	True				
ANR	6198883	AssignmentExpression	dst -> space = src -> space		6198802	0		=			
ANR	6198884	PtrMemberAccess	dst -> space		6198802	0					
ANR	6198885	Identifier	dst		6198802	0					
ANR	6198886	Identifier	space		6198802	1					
ANR	6198887	PtrMemberAccess	src -> space		6198802	1					
ANR	6198888	Identifier	src		6198802	0					
ANR	6198889	Identifier	space		6198802	1					
ANR	6198890	ExpressionStatement	dst -> bytes -> size = src -> bytes -> size	418:2:9883:9918	6198802	4	True				
ANR	6198891	AssignmentExpression	dst -> bytes -> size = src -> bytes -> size		6198802	0		=			
ANR	6198892	PtrMemberAccess	dst -> bytes -> size		6198802	0					
ANR	6198893	PtrMemberAccess	dst -> bytes		6198802	0					
ANR	6198894	Identifier	dst		6198802	0					
ANR	6198895	Identifier	bytes		6198802	1					
ANR	6198896	Identifier	size		6198802	1					
ANR	6198897	PtrMemberAccess	src -> bytes -> size		6198802	1					
ANR	6198898	PtrMemberAccess	src -> bytes		6198802	0					
ANR	6198899	Identifier	src		6198802	0					
ANR	6198900	Identifier	bytes		6198802	1					
ANR	6198901	Identifier	size		6198802	1					
ANR	6198902	ExpressionStatement	dst -> bytes -> bytes = malloc ( src -> bytes -> size )	419:2:9922:9967	6198802	5	True				
ANR	6198903	AssignmentExpression	dst -> bytes -> bytes = malloc ( src -> bytes -> size )		6198802	0		=			
ANR	6198904	PtrMemberAccess	dst -> bytes -> bytes		6198802	0					
ANR	6198905	PtrMemberAccess	dst -> bytes		6198802	0					
ANR	6198906	Identifier	dst		6198802	0					
ANR	6198907	Identifier	bytes		6198802	1					
ANR	6198908	Identifier	bytes		6198802	1					
ANR	6198909	CallExpression	malloc ( src -> bytes -> size )		6198802	1					
ANR	6198910	Callee	malloc		6198802	0					
ANR	6198911	Identifier	malloc		6198802	0					
ANR	6198912	ArgumentList	src -> bytes -> size		6198802	1					
ANR	6198913	Argument	src -> bytes -> size		6198802	0					
ANR	6198914	PtrMemberAccess	src -> bytes -> size		6198802	0					
ANR	6198915	PtrMemberAccess	src -> bytes		6198802	0					
ANR	6198916	Identifier	src		6198802	0					
ANR	6198917	Identifier	bytes		6198802	1					
ANR	6198918	Identifier	size		6198802	1					
ANR	6198919	IfStatement	if ( ! dst -> bytes -> bytes )		6198802	6					
ANR	6198920	Condition	! dst -> bytes -> bytes	420:6:9975:9992	6198802	0	True				
ANR	6198921	UnaryOperationExpression	! dst -> bytes -> bytes		6198802	0					
ANR	6198922	UnaryOperator	!		6198802	0					
ANR	6198923	PtrMemberAccess	dst -> bytes -> bytes		6198802	1					
ANR	6198924	PtrMemberAccess	dst -> bytes		6198802	0					
ANR	6198925	Identifier	dst		6198802	0					
ANR	6198926	Identifier	bytes		6198802	1					
ANR	6198927	Identifier	bytes		6198802	1					
ANR	6198928	CompoundStatement		18:26:380:380	6198802	1					
ANR	6198929	ExpressionStatement	free ( dst -> bytes )	421:3:10000:10017	6198802	0	True				
ANR	6198930	CallExpression	free ( dst -> bytes )		6198802	0					
ANR	6198931	Callee	free		6198802	0					
ANR	6198932	Identifier	free		6198802	0					
ANR	6198933	ArgumentList	dst -> bytes		6198802	1					
ANR	6198934	Argument	dst -> bytes		6198802	0					
ANR	6198935	PtrMemberAccess	dst -> bytes		6198802	0					
ANR	6198936	Identifier	dst		6198802	0					
ANR	6198937	Identifier	bytes		6198802	1					
ANR	6198938	ReturnStatement	return ;	422:3:10022:10028	6198802	1	True				
ANR	6198939	ExpressionStatement	"memcpy ( dst -> bytes -> bytes , src -> bytes -> bytes , src -> bytes -> size )"	424:2:10036:10099	6198802	7	True				
ANR	6198940	CallExpression	"memcpy ( dst -> bytes -> bytes , src -> bytes -> bytes , src -> bytes -> size )"		6198802	0					
ANR	6198941	Callee	memcpy		6198802	0					
ANR	6198942	Identifier	memcpy		6198802	0					
ANR	6198943	ArgumentList	dst -> bytes -> bytes		6198802	1					
ANR	6198944	Argument	dst -> bytes -> bytes		6198802	0					
ANR	6198945	PtrMemberAccess	dst -> bytes -> bytes		6198802	0					
ANR	6198946	PtrMemberAccess	dst -> bytes		6198802	0					
ANR	6198947	Identifier	dst		6198802	0					
ANR	6198948	Identifier	bytes		6198802	1					
ANR	6198949	Identifier	bytes		6198802	1					
ANR	6198950	Argument	src -> bytes -> bytes		6198802	1					
ANR	6198951	PtrMemberAccess	src -> bytes -> bytes		6198802	0					
ANR	6198952	PtrMemberAccess	src -> bytes		6198802	0					
ANR	6198953	Identifier	src		6198802	0					
ANR	6198954	Identifier	bytes		6198802	1					
ANR	6198955	Identifier	bytes		6198802	1					
ANR	6198956	Argument	src -> bytes -> size		6198802	2					
ANR	6198957	PtrMemberAccess	src -> bytes -> size		6198802	0					
ANR	6198958	PtrMemberAccess	src -> bytes		6198802	0					
ANR	6198959	Identifier	src		6198802	0					
ANR	6198960	Identifier	bytes		6198802	1					
ANR	6198961	Identifier	size		6198802	1					
ANR	6198962	ExpressionStatement	dst -> bytes -> mask = malloc ( src -> bytes -> size )	425:2:10103:10147	6198802	8	True				
ANR	6198963	AssignmentExpression	dst -> bytes -> mask = malloc ( src -> bytes -> size )		6198802	0		=			
ANR	6198964	PtrMemberAccess	dst -> bytes -> mask		6198802	0					
ANR	6198965	PtrMemberAccess	dst -> bytes		6198802	0					
ANR	6198966	Identifier	dst		6198802	0					
ANR	6198967	Identifier	bytes		6198802	1					
ANR	6198968	Identifier	mask		6198802	1					
ANR	6198969	CallExpression	malloc ( src -> bytes -> size )		6198802	1					
ANR	6198970	Callee	malloc		6198802	0					
ANR	6198971	Identifier	malloc		6198802	0					
ANR	6198972	ArgumentList	src -> bytes -> size		6198802	1					
ANR	6198973	Argument	src -> bytes -> size		6198802	0					
ANR	6198974	PtrMemberAccess	src -> bytes -> size		6198802	0					
ANR	6198975	PtrMemberAccess	src -> bytes		6198802	0					
ANR	6198976	Identifier	src		6198802	0					
ANR	6198977	Identifier	bytes		6198802	1					
ANR	6198978	Identifier	size		6198802	1					
ANR	6198979	IfStatement	if ( ! dst -> bytes -> mask )		6198802	9					
ANR	6198980	Condition	! dst -> bytes -> mask	426:6:10155:10171	6198802	0	True				
ANR	6198981	UnaryOperationExpression	! dst -> bytes -> mask		6198802	0					
ANR	6198982	UnaryOperator	!		6198802	0					
ANR	6198983	PtrMemberAccess	dst -> bytes -> mask		6198802	1					
ANR	6198984	PtrMemberAccess	dst -> bytes		6198802	0					
ANR	6198985	Identifier	dst		6198802	0					
ANR	6198986	Identifier	bytes		6198802	1					
ANR	6198987	Identifier	mask		6198802	1					
ANR	6198988	CompoundStatement		24:25:559:559	6198802	1					
ANR	6198989	ExpressionStatement	free ( dst -> bytes -> bytes )	427:3:10179:10203	6198802	0	True				
ANR	6198990	CallExpression	free ( dst -> bytes -> bytes )		6198802	0					
ANR	6198991	Callee	free		6198802	0					
ANR	6198992	Identifier	free		6198802	0					
ANR	6198993	ArgumentList	dst -> bytes -> bytes		6198802	1					
ANR	6198994	Argument	dst -> bytes -> bytes		6198802	0					
ANR	6198995	PtrMemberAccess	dst -> bytes -> bytes		6198802	0					
ANR	6198996	PtrMemberAccess	dst -> bytes		6198802	0					
ANR	6198997	Identifier	dst		6198802	0					
ANR	6198998	Identifier	bytes		6198802	1					
ANR	6198999	Identifier	bytes		6198802	1					
ANR	6199000	ExpressionStatement	free ( dst -> bytes )	428:3:10208:10225	6198802	1	True				
ANR	6199001	CallExpression	free ( dst -> bytes )		6198802	0					
ANR	6199002	Callee	free		6198802	0					
ANR	6199003	Identifier	free		6198802	0					
ANR	6199004	ArgumentList	dst -> bytes		6198802	1					
ANR	6199005	Argument	dst -> bytes		6198802	0					
ANR	6199006	PtrMemberAccess	dst -> bytes		6198802	0					
ANR	6199007	Identifier	dst		6198802	0					
ANR	6199008	Identifier	bytes		6198802	1					
ANR	6199009	ReturnStatement	return ;	429:3:10230:10236	6198802	2	True				
ANR	6199010	ExpressionStatement	"memcpy ( dst -> bytes -> mask , src -> bytes -> mask , src -> bytes -> size )"	431:2:10244:10305	6198802	10	True				
ANR	6199011	CallExpression	"memcpy ( dst -> bytes -> mask , src -> bytes -> mask , src -> bytes -> size )"		6198802	0					
ANR	6199012	Callee	memcpy		6198802	0					
ANR	6199013	Identifier	memcpy		6198802	0					
ANR	6199014	ArgumentList	dst -> bytes -> mask		6198802	1					
ANR	6199015	Argument	dst -> bytes -> mask		6198802	0					
ANR	6199016	PtrMemberAccess	dst -> bytes -> mask		6198802	0					
ANR	6199017	PtrMemberAccess	dst -> bytes		6198802	0					
ANR	6199018	Identifier	dst		6198802	0					
ANR	6199019	Identifier	bytes		6198802	1					
ANR	6199020	Identifier	mask		6198802	1					
ANR	6199021	Argument	src -> bytes -> mask		6198802	1					
ANR	6199022	PtrMemberAccess	src -> bytes -> mask		6198802	0					
ANR	6199023	PtrMemberAccess	src -> bytes		6198802	0					
ANR	6199024	Identifier	src		6198802	0					
ANR	6199025	Identifier	bytes		6198802	1					
ANR	6199026	Identifier	mask		6198802	1					
ANR	6199027	Argument	src -> bytes -> size		6198802	2					
ANR	6199028	PtrMemberAccess	src -> bytes -> size		6198802	0					
ANR	6199029	PtrMemberAccess	src -> bytes		6198802	0					
ANR	6199030	Identifier	src		6198802	0					
ANR	6199031	Identifier	bytes		6198802	1					
ANR	6199032	Identifier	size		6198802	1					
ANR	6199033	IfStatement	if ( src -> graph )		6198802	3					
ANR	6199034	Condition	src -> graph	434:5:10316:10325	6198802	0	True				
ANR	6199035	PtrMemberAccess	src -> graph		6198802	0					
ANR	6199036	Identifier	src		6198802	0					
ANR	6199037	Identifier	graph		6198802	1					
ANR	6199038	CompoundStatement		32:17:713:713	6198802	1					
ANR	6199039	ExpressionStatement	free ( dst -> graph )	435:2:10332:10349	6198802	0	True				
ANR	6199040	CallExpression	free ( dst -> graph )		6198802	0					
ANR	6199041	Callee	free		6198802	0					
ANR	6199042	Identifier	free		6198802	0					
ANR	6199043	ArgumentList	dst -> graph		6198802	1					
ANR	6199044	Argument	dst -> graph		6198802	0					
ANR	6199045	PtrMemberAccess	dst -> graph		6198802	0					
ANR	6199046	Identifier	dst		6198802	0					
ANR	6199047	Identifier	graph		6198802	1					
ANR	6199048	ExpressionStatement	dst -> graph = R_NEW0 ( RSignGraph )	436:2:10353:10385	6198802	1	True				
ANR	6199049	AssignmentExpression	dst -> graph = R_NEW0 ( RSignGraph )		6198802	0		=			
ANR	6199050	PtrMemberAccess	dst -> graph		6198802	0					
ANR	6199051	Identifier	dst		6198802	0					
ANR	6199052	Identifier	graph		6198802	1					
ANR	6199053	CallExpression	R_NEW0 ( RSignGraph )		6198802	1					
ANR	6199054	Callee	R_NEW0		6198802	0					
ANR	6199055	Identifier	R_NEW0		6198802	0					
ANR	6199056	ArgumentList	RSignGraph		6198802	1					
ANR	6199057	Argument	RSignGraph		6198802	0					
ANR	6199058	Identifier	RSignGraph		6198802	0					
ANR	6199059	IfStatement	if ( ! dst -> graph )		6198802	2					
ANR	6199060	Condition	! dst -> graph	437:6:10393:10403	6198802	0	True				
ANR	6199061	UnaryOperationExpression	! dst -> graph		6198802	0					
ANR	6199062	UnaryOperator	!		6198802	0					
ANR	6199063	PtrMemberAccess	dst -> graph		6198802	1					
ANR	6199064	Identifier	dst		6198802	0					
ANR	6199065	Identifier	graph		6198802	1					
ANR	6199066	CompoundStatement		35:19:791:791	6198802	1					
ANR	6199067	ReturnStatement	return ;	438:3:10411:10417	6198802	0	True				
ANR	6199068	ExpressionStatement	* dst -> graph = * src -> graph	440:2:10425:10450	6198802	3	True				
ANR	6199069	AssignmentExpression	* dst -> graph = * src -> graph		6198802	0		=			
ANR	6199070	UnaryOperationExpression	* dst -> graph		6198802	0					
ANR	6199071	UnaryOperator	*		6198802	0					
ANR	6199072	PtrMemberAccess	dst -> graph		6198802	1					
ANR	6199073	Identifier	dst		6198802	0					
ANR	6199074	Identifier	graph		6198802	1					
ANR	6199075	UnaryOperationExpression	* src -> graph		6198802	1					
ANR	6199076	UnaryOperator	*		6198802	0					
ANR	6199077	PtrMemberAccess	src -> graph		6198802	1					
ANR	6199078	Identifier	src		6198802	0					
ANR	6199079	Identifier	graph		6198802	1					
ANR	6199080	IfStatement	if ( src -> comment )		6198802	4					
ANR	6199081	Condition	src -> comment	443:5:10461:10472	6198802	0	True				
ANR	6199082	PtrMemberAccess	src -> comment		6198802	0					
ANR	6199083	Identifier	src		6198802	0					
ANR	6199084	Identifier	comment		6198802	1					
ANR	6199085	CompoundStatement		41:19:860:860	6198802	1					
ANR	6199086	ExpressionStatement	dst -> comment = strdup ( src -> comment )	444:2:10479:10515	6198802	0	True				
ANR	6199087	AssignmentExpression	dst -> comment = strdup ( src -> comment )		6198802	0		=			
ANR	6199088	PtrMemberAccess	dst -> comment		6198802	0					
ANR	6199089	Identifier	dst		6198802	0					
ANR	6199090	Identifier	comment		6198802	1					
ANR	6199091	CallExpression	strdup ( src -> comment )		6198802	1					
ANR	6199092	Callee	strdup		6198802	0					
ANR	6199093	Identifier	strdup		6198802	0					
ANR	6199094	ArgumentList	src -> comment		6198802	1					
ANR	6199095	Argument	src -> comment		6198802	0					
ANR	6199096	PtrMemberAccess	src -> comment		6198802	0					
ANR	6199097	Identifier	src		6198802	0					
ANR	6199098	Identifier	comment		6198802	1					
ANR	6199099	IfStatement	if ( src -> realname )		6198802	5					
ANR	6199100	Condition	src -> realname	447:5:10526:10538	6198802	0	True				
ANR	6199101	PtrMemberAccess	src -> realname		6198802	0					
ANR	6199102	Identifier	src		6198802	0					
ANR	6199103	Identifier	realname		6198802	1					
ANR	6199104	CompoundStatement		45:20:926:926	6198802	1					
ANR	6199105	ExpressionStatement	dst -> realname = strdup ( src -> realname )	448:2:10545:10583	6198802	0	True				
ANR	6199106	AssignmentExpression	dst -> realname = strdup ( src -> realname )		6198802	0		=			
ANR	6199107	PtrMemberAccess	dst -> realname		6198802	0					
ANR	6199108	Identifier	dst		6198802	0					
ANR	6199109	Identifier	realname		6198802	1					
ANR	6199110	CallExpression	strdup ( src -> realname )		6198802	1					
ANR	6199111	Callee	strdup		6198802	0					
ANR	6199112	Identifier	strdup		6198802	0					
ANR	6199113	ArgumentList	src -> realname		6198802	1					
ANR	6199114	Argument	src -> realname		6198802	0					
ANR	6199115	PtrMemberAccess	src -> realname		6198802	0					
ANR	6199116	Identifier	src		6198802	0					
ANR	6199117	Identifier	realname		6198802	1					
ANR	6199118	IfStatement	if ( src -> addr != UT64_MAX )		6198802	6					
ANR	6199119	Condition	src -> addr != UT64_MAX	451:5:10594:10614	6198802	0	True				
ANR	6199120	EqualityExpression	src -> addr != UT64_MAX		6198802	0		!=			
ANR	6199121	PtrMemberAccess	src -> addr		6198802	0					
ANR	6199122	Identifier	src		6198802	0					
ANR	6199123	Identifier	addr		6198802	1					
ANR	6199124	Identifier	UT64_MAX		6198802	1					
ANR	6199125	CompoundStatement		49:28:1002:1002	6198802	1					
ANR	6199126	ExpressionStatement	dst -> addr = src -> addr	452:2:10621:10642	6198802	0	True				
ANR	6199127	AssignmentExpression	dst -> addr = src -> addr		6198802	0		=			
ANR	6199128	PtrMemberAccess	dst -> addr		6198802	0					
ANR	6199129	Identifier	dst		6198802	0					
ANR	6199130	Identifier	addr		6198802	1					
ANR	6199131	PtrMemberAccess	src -> addr		6198802	1					
ANR	6199132	Identifier	src		6198802	0					
ANR	6199133	Identifier	addr		6198802	1					
ANR	6199134	IfStatement	if ( src -> refs )		6198802	7					
ANR	6199135	Condition	src -> refs	455:5:10653:10661	6198802	0	True				
ANR	6199136	PtrMemberAccess	src -> refs		6198802	0					
ANR	6199137	Identifier	src		6198802	0					
ANR	6199138	Identifier	refs		6198802	1					
ANR	6199139	CompoundStatement		53:16:1049:1049	6198802	1					
ANR	6199140	ExpressionStatement	r_list_free ( dst -> refs )	456:2:10668:10691	6198802	0	True				
ANR	6199141	CallExpression	r_list_free ( dst -> refs )		6198802	0					
ANR	6199142	Callee	r_list_free		6198802	0					
ANR	6199143	Identifier	r_list_free		6198802	0					
ANR	6199144	ArgumentList	dst -> refs		6198802	1					
ANR	6199145	Argument	dst -> refs		6198802	0					
ANR	6199146	PtrMemberAccess	dst -> refs		6198802	0					
ANR	6199147	Identifier	dst		6198802	0					
ANR	6199148	Identifier	refs		6198802	1					
ANR	6199149	ExpressionStatement	dst -> refs = r_list_newf ( ( RListFree ) free )	458:2:10696:10738	6198802	1	True				
ANR	6199150	AssignmentExpression	dst -> refs = r_list_newf ( ( RListFree ) free )		6198802	0		=			
ANR	6199151	PtrMemberAccess	dst -> refs		6198802	0					
ANR	6199152	Identifier	dst		6198802	0					
ANR	6199153	Identifier	refs		6198802	1					
ANR	6199154	CallExpression	r_list_newf ( ( RListFree ) free )		6198802	1					
ANR	6199155	Callee	r_list_newf		6198802	0					
ANR	6199156	Identifier	r_list_newf		6198802	0					
ANR	6199157	ArgumentList	( RListFree ) free		6198802	1					
ANR	6199158	Argument	( RListFree ) free		6198802	0					
ANR	6199159	CastExpression	( RListFree ) free		6198802	0					
ANR	6199160	CastTarget	RListFree		6198802	0					
ANR	6199161	Identifier	free		6198802	1					
ANR	6199162	Statement	r_list_foreach	459:2:10742:10755	6198802	2	True				
ANR	6199163	Statement	(	459:17:10757:10757	6198802	3	True				
ANR	6199164	Statement	src	459:18:10758:10760	6198802	4	True				
ANR	6199165	Statement	->	459:21:10761:10762	6198802	5	True				
ANR	6199166	Statement	refs	459:23:10763:10766	6198802	6	True				
ANR	6199167	Statement	","	459:27:10767:10767	6198802	7	True				
ANR	6199168	Statement	iter	459:29:10769:10772	6198802	8	True				
ANR	6199169	Statement	","	459:33:10773:10773	6198802	9	True				
ANR	6199170	Statement	ref	459:35:10775:10777	6198802	10	True				
ANR	6199171	Statement	)	459:38:10778:10778	6198802	11	True				
ANR	6199172	CompoundStatement		57:40:1165:1165	6198802	12					
ANR	6199173	ExpressionStatement	"r_list_append ( dst -> refs , r_str_new ( ref ) )"	460:3:10785:10827	6198802	0	True				
ANR	6199174	CallExpression	"r_list_append ( dst -> refs , r_str_new ( ref ) )"		6198802	0					
ANR	6199175	Callee	r_list_append		6198802	0					
ANR	6199176	Identifier	r_list_append		6198802	0					
ANR	6199177	ArgumentList	dst -> refs		6198802	1					
ANR	6199178	Argument	dst -> refs		6198802	0					
ANR	6199179	PtrMemberAccess	dst -> refs		6198802	0					
ANR	6199180	Identifier	dst		6198802	0					
ANR	6199181	Identifier	refs		6198802	1					
ANR	6199182	Argument	r_str_new ( ref )		6198802	1					
ANR	6199183	CallExpression	r_str_new ( ref )		6198802	0					
ANR	6199184	Callee	r_str_new		6198802	0					
ANR	6199185	Identifier	r_str_new		6198802	0					
ANR	6199186	ArgumentList	ref		6198802	1					
ANR	6199187	Argument	ref		6198802	0					
ANR	6199188	Identifier	ref		6198802	0					
ANR	6199189	IfStatement	if ( src -> vars )		6198802	8					
ANR	6199190	Condition	src -> vars	464:5:10842:10850	6198802	0	True				
ANR	6199191	PtrMemberAccess	src -> vars		6198802	0					
ANR	6199192	Identifier	src		6198802	0					
ANR	6199193	Identifier	vars		6198802	1					
ANR	6199194	CompoundStatement		62:16:1238:1238	6198802	1					
ANR	6199195	ExpressionStatement	r_list_free ( dst -> vars )	465:2:10857:10880	6198802	0	True				
ANR	6199196	CallExpression	r_list_free ( dst -> vars )		6198802	0					
ANR	6199197	Callee	r_list_free		6198802	0					
ANR	6199198	Identifier	r_list_free		6198802	0					
ANR	6199199	ArgumentList	dst -> vars		6198802	1					
ANR	6199200	Argument	dst -> vars		6198802	0					
ANR	6199201	PtrMemberAccess	dst -> vars		6198802	0					
ANR	6199202	Identifier	dst		6198802	0					
ANR	6199203	Identifier	vars		6198802	1					
ANR	6199204	ExpressionStatement	dst -> vars = r_list_newf ( ( RListFree ) free )	467:2:10885:10927	6198802	1	True				
ANR	6199205	AssignmentExpression	dst -> vars = r_list_newf ( ( RListFree ) free )		6198802	0		=			
ANR	6199206	PtrMemberAccess	dst -> vars		6198802	0					
ANR	6199207	Identifier	dst		6198802	0					
ANR	6199208	Identifier	vars		6198802	1					
ANR	6199209	CallExpression	r_list_newf ( ( RListFree ) free )		6198802	1					
ANR	6199210	Callee	r_list_newf		6198802	0					
ANR	6199211	Identifier	r_list_newf		6198802	0					
ANR	6199212	ArgumentList	( RListFree ) free		6198802	1					
ANR	6199213	Argument	( RListFree ) free		6198802	0					
ANR	6199214	CastExpression	( RListFree ) free		6198802	0					
ANR	6199215	CastTarget	RListFree		6198802	0					
ANR	6199216	Identifier	free		6198802	1					
ANR	6199217	Statement	r_list_foreach	468:2:10931:10944	6198802	2	True				
ANR	6199218	Statement	(	468:17:10946:10946	6198802	3	True				
ANR	6199219	Statement	src	468:18:10947:10949	6198802	4	True				
ANR	6199220	Statement	->	468:21:10950:10951	6198802	5	True				
ANR	6199221	Statement	vars	468:23:10952:10955	6198802	6	True				
ANR	6199222	Statement	","	468:27:10956:10956	6198802	7	True				
ANR	6199223	Statement	iter	468:29:10958:10961	6198802	8	True				
ANR	6199224	Statement	","	468:33:10962:10962	6198802	9	True				
ANR	6199225	Statement	var	468:35:10964:10966	6198802	10	True				
ANR	6199226	Statement	)	468:38:10967:10967	6198802	11	True				
ANR	6199227	CompoundStatement		66:40:1354:1354	6198802	12					
ANR	6199228	ExpressionStatement	"r_list_append ( dst -> vars , r_str_new ( var ) )"	469:3:10974:11016	6198802	0	True				
ANR	6199229	CallExpression	"r_list_append ( dst -> vars , r_str_new ( var ) )"		6198802	0					
ANR	6199230	Callee	r_list_append		6198802	0					
ANR	6199231	Identifier	r_list_append		6198802	0					
ANR	6199232	ArgumentList	dst -> vars		6198802	1					
ANR	6199233	Argument	dst -> vars		6198802	0					
ANR	6199234	PtrMemberAccess	dst -> vars		6198802	0					
ANR	6199235	Identifier	dst		6198802	0					
ANR	6199236	Identifier	vars		6198802	1					
ANR	6199237	Argument	r_str_new ( var )		6198802	1					
ANR	6199238	CallExpression	r_str_new ( var )		6198802	0					
ANR	6199239	Callee	r_str_new		6198802	0					
ANR	6199240	Identifier	r_str_new		6198802	0					
ANR	6199241	ArgumentList	var		6198802	1					
ANR	6199242	Argument	var		6198802	0					
ANR	6199243	Identifier	var		6198802	0					
ANR	6199244	IfStatement	if ( src -> hash )		6198802	9					
ANR	6199245	Condition	src -> hash	473:5:11031:11039	6198802	0	True				
ANR	6199246	PtrMemberAccess	src -> hash		6198802	0					
ANR	6199247	Identifier	src		6198802	0					
ANR	6199248	Identifier	hash		6198802	1					
ANR	6199249	CompoundStatement		71:16:1427:1427	6198802	1					
ANR	6199250	IfStatement	if ( ! dst -> hash )		6198802	0					
ANR	6199251	Condition	! dst -> hash	474:6:11050:11059	6198802	0	True				
ANR	6199252	UnaryOperationExpression	! dst -> hash		6198802	0					
ANR	6199253	UnaryOperator	!		6198802	0					
ANR	6199254	PtrMemberAccess	dst -> hash		6198802	1					
ANR	6199255	Identifier	dst		6198802	0					
ANR	6199256	Identifier	hash		6198802	1					
ANR	6199257	CompoundStatement		72:18:1447:1447	6198802	1					
ANR	6199258	ExpressionStatement	dst -> hash = R_NEW0 ( RSignHash )	475:3:11067:11097	6198802	0	True				
ANR	6199259	AssignmentExpression	dst -> hash = R_NEW0 ( RSignHash )		6198802	0		=			
ANR	6199260	PtrMemberAccess	dst -> hash		6198802	0					
ANR	6199261	Identifier	dst		6198802	0					
ANR	6199262	Identifier	hash		6198802	1					
ANR	6199263	CallExpression	R_NEW0 ( RSignHash )		6198802	1					
ANR	6199264	Callee	R_NEW0		6198802	0					
ANR	6199265	Identifier	R_NEW0		6198802	0					
ANR	6199266	ArgumentList	RSignHash		6198802	1					
ANR	6199267	Argument	RSignHash		6198802	0					
ANR	6199268	Identifier	RSignHash		6198802	0					
ANR	6199269	IfStatement	if ( ! dst -> hash )		6198802	1					
ANR	6199270	Condition	! dst -> hash	476:7:11106:11115	6198802	0	True				
ANR	6199271	UnaryOperationExpression	! dst -> hash		6198802	0					
ANR	6199272	UnaryOperator	!		6198802	0					
ANR	6199273	PtrMemberAccess	dst -> hash		6198802	1					
ANR	6199274	Identifier	dst		6198802	0					
ANR	6199275	Identifier	hash		6198802	1					
ANR	6199276	CompoundStatement		74:19:1503:1503	6198802	1					
ANR	6199277	ReturnStatement	return ;	477:4:11124:11130	6198802	0	True				
ANR	6199278	IfStatement	if ( src -> hash -> bbhash )		6198802	1					
ANR	6199279	Condition	src -> hash -> bbhash	480:6:11147:11163	6198802	0	True				
ANR	6199280	PtrMemberAccess	src -> hash -> bbhash		6198802	0					
ANR	6199281	PtrMemberAccess	src -> hash		6198802	0					
ANR	6199282	Identifier	src		6198802	0					
ANR	6199283	Identifier	hash		6198802	1					
ANR	6199284	Identifier	bbhash		6198802	1					
ANR	6199285	CompoundStatement		78:25:1551:1551	6198802	1					
ANR	6199286	ExpressionStatement	dst -> hash -> bbhash = strdup ( src -> hash -> bbhash )	481:3:11171:11217	6198802	0	True				
ANR	6199287	AssignmentExpression	dst -> hash -> bbhash = strdup ( src -> hash -> bbhash )		6198802	0		=			
ANR	6199288	PtrMemberAccess	dst -> hash -> bbhash		6198802	0					
ANR	6199289	PtrMemberAccess	dst -> hash		6198802	0					
ANR	6199290	Identifier	dst		6198802	0					
ANR	6199291	Identifier	hash		6198802	1					
ANR	6199292	Identifier	bbhash		6198802	1					
ANR	6199293	CallExpression	strdup ( src -> hash -> bbhash )		6198802	1					
ANR	6199294	Callee	strdup		6198802	0					
ANR	6199295	Identifier	strdup		6198802	0					
ANR	6199296	ArgumentList	src -> hash -> bbhash		6198802	1					
ANR	6199297	Argument	src -> hash -> bbhash		6198802	0					
ANR	6199298	PtrMemberAccess	src -> hash -> bbhash		6198802	0					
ANR	6199299	PtrMemberAccess	src -> hash		6198802	0					
ANR	6199300	Identifier	src		6198802	0					
ANR	6199301	Identifier	hash		6198802	1					
ANR	6199302	Identifier	bbhash		6198802	1					
ANR	6199303	ReturnType	static void		6198802	1					
ANR	6199304	Identifier	mergeItem		6198802	2					
ANR	6199305	ParameterList	"RSignItem * dst , RSignItem * src"		6198802	3					
ANR	6199306	Parameter	RSignItem * dst	403:22:9582:9595	6198802	0	True				
ANR	6199307	ParameterType	RSignItem *		6198802	0					
ANR	6199308	Identifier	dst		6198802	1					
ANR	6199309	Parameter	RSignItem * src	403:38:9598:9611	6198802	1	True				
ANR	6199310	ParameterType	RSignItem *		6198802	0					
ANR	6199311	Identifier	src		6198802	1					
ANR	6199312	CFGEntryNode	ENTRY		6198802		True				
ANR	6199313	CFGExitNode	EXIT		6198802		True				
ANR	6199314	Symbol	src -> addr		6198802						
ANR	6199315	Symbol	src -> space		6198802						
ANR	6199316	Symbol	* src		6198802						
ANR	6199317	Symbol	* dst		6198802						
ANR	6199318	Symbol	ref		6198802						
ANR	6199319	Symbol	* src -> hash		6198802						
ANR	6199320	Symbol	RSignHash		6198802						
ANR	6199321	Symbol	dst -> addr		6198802						
ANR	6199322	Symbol	* * dst		6198802						
ANR	6199323	Symbol	r_str_new		6198802						
ANR	6199324	Symbol	* src -> graph		6198802						
ANR	6199325	Symbol	NULL		6198802						
ANR	6199326	Symbol	dst -> space		6198802						
ANR	6199327	Symbol	* dst -> bytes		6198802						
ANR	6199328	Symbol	src -> hash		6198802						
ANR	6199329	Symbol	r_list_newf		6198802						
ANR	6199330	Symbol	var		6198802						
ANR	6199331	Symbol	src -> comment		6198802						
ANR	6199332	Symbol	iter		6198802						
ANR	6199333	Symbol	* dst -> hash		6198802						
ANR	6199334	Symbol	dst -> bytes -> bytes		6198802						
ANR	6199335	Symbol	dst -> bytes		6198802						
ANR	6199336	Symbol	R_NEW0		6198802						
ANR	6199337	Symbol	src -> vars		6198802						
ANR	6199338	Symbol	src -> graph		6198802						
ANR	6199339	Symbol	* * src		6198802						
ANR	6199340	Symbol	RSignBytes		6198802						
ANR	6199341	Symbol	src -> bytes -> mask		6198802						
ANR	6199342	Symbol	* src -> bytes		6198802						
ANR	6199343	Symbol	dst		6198802						
ANR	6199344	Symbol	src -> bytes -> bytes		6198802						
ANR	6199345	Symbol	dst -> refs		6198802						
ANR	6199346	Symbol	src -> hash -> bbhash		6198802						
ANR	6199347	Symbol	src -> bytes		6198802						
ANR	6199348	Symbol	dst -> bytes -> size		6198802						
ANR	6199349	Symbol	dst -> graph		6198802						
ANR	6199350	Symbol	RSignGraph		6198802						
ANR	6199351	Symbol	src -> refs		6198802						
ANR	6199352	Symbol	dst -> vars		6198802						
ANR	6199353	Symbol	* dst -> graph		6198802						
ANR	6199354	Symbol	UT64_MAX		6198802						
ANR	6199355	Symbol	free		6198802						
ANR	6199356	Symbol	malloc		6198802						
ANR	6199357	Symbol	dst -> realname		6198802						
ANR	6199358	Symbol	dst -> bytes -> mask		6198802						
ANR	6199359	Symbol	src		6198802						
ANR	6199360	Symbol	dst -> comment		6198802						
ANR	6199361	Symbol	dst -> hash -> bbhash		6198802						
ANR	6199362	Symbol	dst -> hash		6198802						
ANR	6199363	Symbol	src -> realname		6198802						
ANR	6199364	Symbol	strdup		6198802						
ANR	6199365	Symbol	src -> bytes -> size		6198802						
ANR	6199366	Function	addItem	486:0:11229:11833							
ANR	6199367	FunctionDef	"addItem (RAnal * a , RSignItem * it)"		6199366	0					
ANR	6199368	CompoundStatement		486:45:11274:11833	6199366	0					
ANR	6199369	IdentifierDeclStatement	"char key [ R_SIGN_KEY_MAXSZ ] , val [ R_SIGN_VAL_MAXSZ ] ;"	487:1:11277:11326	6199366	0	True				
ANR	6199370	IdentifierDecl	key [ R_SIGN_KEY_MAXSZ ]		6199366	0					
ANR	6199371	IdentifierDeclType	char [ R_SIGN_KEY_MAXSZ ]		6199366	0					
ANR	6199372	Identifier	key		6199366	1					
ANR	6199373	Identifier	R_SIGN_KEY_MAXSZ		6199366	2					
ANR	6199374	IdentifierDecl	val [ R_SIGN_VAL_MAXSZ ]		6199366	1					
ANR	6199375	IdentifierDeclType	char [ R_SIGN_VAL_MAXSZ ]		6199366	0					
ANR	6199376	Identifier	val		6199366	1					
ANR	6199377	Identifier	R_SIGN_VAL_MAXSZ		6199366	2					
ANR	6199378	IdentifierDeclStatement	const char * curval = NULL ;	488:1:11329:11354	6199366	1	True				
ANR	6199379	IdentifierDecl	* curval = NULL		6199366	0					
ANR	6199380	IdentifierDeclType	const char *		6199366	0					
ANR	6199381	Identifier	curval		6199366	1					
ANR	6199382	AssignmentExpression	* curval = NULL		6199366	2		=			
ANR	6199383	Identifier	NULL		6199366	0					
ANR	6199384	Identifier	NULL		6199366	1					
ANR	6199385	IdentifierDeclStatement	bool retval = true ;	489:1:11357:11375	6199366	2	True				
ANR	6199386	IdentifierDecl	retval = true		6199366	0					
ANR	6199387	IdentifierDeclType	bool		6199366	0					
ANR	6199388	Identifier	retval		6199366	1					
ANR	6199389	AssignmentExpression	retval = true		6199366	2		=			
ANR	6199390	Identifier	true		6199366	0					
ANR	6199391	Identifier	true		6199366	1					
ANR	6199392	IdentifierDeclStatement	RSignItem * curit = r_sign_item_new ( ) ;	490:1:11378:11415	6199366	3	True				
ANR	6199393	IdentifierDecl	* curit = r_sign_item_new ( )		6199366	0					
ANR	6199394	IdentifierDeclType	RSignItem *		6199366	0					
ANR	6199395	Identifier	curit		6199366	1					
ANR	6199396	AssignmentExpression	* curit = r_sign_item_new ( )		6199366	2		=			
ANR	6199397	Identifier	curit		6199366	0					
ANR	6199398	CallExpression	r_sign_item_new ( )		6199366	1					
ANR	6199399	Callee	r_sign_item_new		6199366	0					
ANR	6199400	Identifier	r_sign_item_new		6199366	0					
ANR	6199401	ArgumentList			6199366	1					
ANR	6199402	IfStatement	if ( ! curit )		6199366	4					
ANR	6199403	Condition	! curit	491:5:11422:11427	6199366	0	True				
ANR	6199404	UnaryOperationExpression	! curit		6199366	0					
ANR	6199405	UnaryOperator	!		6199366	0					
ANR	6199406	Identifier	curit		6199366	1					
ANR	6199407	CompoundStatement		6:13:155:155	6199366	1					
ANR	6199408	ReturnStatement	return false ;	492:2:11434:11446	6199366	0	True				
ANR	6199409	Identifier	false		6199366	0					
ANR	6199410	ExpressionStatement	"serialize ( a , it , key , val )"	495:1:11453:11480	6199366	5	True				
ANR	6199411	CallExpression	"serialize ( a , it , key , val )"		6199366	0					
ANR	6199412	Callee	serialize		6199366	0					
ANR	6199413	Identifier	serialize		6199366	0					
ANR	6199414	ArgumentList	a		6199366	1					
ANR	6199415	Argument	a		6199366	0					
ANR	6199416	Identifier	a		6199366	0					
ANR	6199417	Argument	it		6199366	1					
ANR	6199418	Identifier	it		6199366	0					
ANR	6199419	Argument	key		6199366	2					
ANR	6199420	Identifier	key		6199366	0					
ANR	6199421	Argument	val		6199366	3					
ANR	6199422	Identifier	val		6199366	0					
ANR	6199423	ExpressionStatement	"curval = sdb_const_get ( a -> sdb_zigns , key , 0 )"	496:1:11483:11528	6199366	6	True				
ANR	6199424	AssignmentExpression	"curval = sdb_const_get ( a -> sdb_zigns , key , 0 )"		6199366	0		=			
ANR	6199425	Identifier	curval		6199366	0					
ANR	6199426	CallExpression	"sdb_const_get ( a -> sdb_zigns , key , 0 )"		6199366	1					
ANR	6199427	Callee	sdb_const_get		6199366	0					
ANR	6199428	Identifier	sdb_const_get		6199366	0					
ANR	6199429	ArgumentList	a -> sdb_zigns		6199366	1					
ANR	6199430	Argument	a -> sdb_zigns		6199366	0					
ANR	6199431	PtrMemberAccess	a -> sdb_zigns		6199366	0					
ANR	6199432	Identifier	a		6199366	0					
ANR	6199433	Identifier	sdb_zigns		6199366	1					
ANR	6199434	Argument	key		6199366	1					
ANR	6199435	Identifier	key		6199366	0					
ANR	6199436	Argument	0		6199366	2					
ANR	6199437	PrimaryExpression	0		6199366	0					
ANR	6199438	IfStatement	if ( curval )		6199366	7					
ANR	6199439	Condition	curval	497:5:11535:11540	6199366	0	True				
ANR	6199440	Identifier	curval		6199366	0					
ANR	6199441	CompoundStatement		12:13:268:268	6199366	1					
ANR	6199442	IfStatement	"if ( ! r_sign_deserialize ( a , curit , key , curval ) )"		6199366	0					
ANR	6199443	Condition	"! r_sign_deserialize ( a , curit , key , curval )"	498:6:11551:11593	6199366	0	True				
ANR	6199444	UnaryOperationExpression	"! r_sign_deserialize ( a , curit , key , curval )"		6199366	0					
ANR	6199445	UnaryOperator	!		6199366	0					
ANR	6199446	CallExpression	"r_sign_deserialize ( a , curit , key , curval )"		6199366	1					
ANR	6199447	Callee	r_sign_deserialize		6199366	0					
ANR	6199448	Identifier	r_sign_deserialize		6199366	0					
ANR	6199449	ArgumentList	a		6199366	1					
ANR	6199450	Argument	a		6199366	0					
ANR	6199451	Identifier	a		6199366	0					
ANR	6199452	Argument	curit		6199366	1					
ANR	6199453	Identifier	curit		6199366	0					
ANR	6199454	Argument	key		6199366	2					
ANR	6199455	Identifier	key		6199366	0					
ANR	6199456	Argument	curval		6199366	3					
ANR	6199457	Identifier	curval		6199366	0					
ANR	6199458	CompoundStatement		13:51:321:321	6199366	1					
ANR	6199459	ExpressionStatement	"eprintf ( ""error: cannot deserialize zign\\n"" )"	499:3:11601:11645	6199366	0	True				
ANR	6199460	CallExpression	"eprintf ( ""error: cannot deserialize zign\\n"" )"		6199366	0					
ANR	6199461	Callee	eprintf		6199366	0					
ANR	6199462	Identifier	eprintf		6199366	0					
ANR	6199463	ArgumentList	"""error: cannot deserialize zign\\n"""		6199366	1					
ANR	6199464	Argument	"""error: cannot deserialize zign\\n"""		6199366	0					
ANR	6199465	PrimaryExpression	"""error: cannot deserialize zign\\n"""		6199366	0					
ANR	6199466	ExpressionStatement	retval = false	500:3:11650:11664	6199366	1	True				
ANR	6199467	AssignmentExpression	retval = false		6199366	0		=			
ANR	6199468	Identifier	retval		6199366	0					
ANR	6199469	Identifier	false		6199366	1					
ANR	6199470	GotoStatement	goto out ;	501:3:11669:11677	6199366	2	True				
ANR	6199471	Identifier	out		6199366	0					
ANR	6199472	ExpressionStatement	"mergeItem ( curit , it )"	503:2:11685:11706	6199366	1	True				
ANR	6199473	CallExpression	"mergeItem ( curit , it )"		6199366	0					
ANR	6199474	Callee	mergeItem		6199366	0					
ANR	6199475	Identifier	mergeItem		6199366	0					
ANR	6199476	ArgumentList	curit		6199366	1					
ANR	6199477	Argument	curit		6199366	0					
ANR	6199478	Identifier	curit		6199366	0					
ANR	6199479	Argument	it		6199366	1					
ANR	6199480	Identifier	it		6199366	0					
ANR	6199481	ExpressionStatement	"serialize ( a , curit , key , val )"	504:2:11710:11740	6199366	2	True				
ANR	6199482	CallExpression	"serialize ( a , curit , key , val )"		6199366	0					
ANR	6199483	Callee	serialize		6199366	0					
ANR	6199484	Identifier	serialize		6199366	0					
ANR	6199485	ArgumentList	a		6199366	1					
ANR	6199486	Argument	a		6199366	0					
ANR	6199487	Identifier	a		6199366	0					
ANR	6199488	Argument	curit		6199366	1					
ANR	6199489	Identifier	curit		6199366	0					
ANR	6199490	Argument	key		6199366	2					
ANR	6199491	Identifier	key		6199366	0					
ANR	6199492	Argument	val		6199366	3					
ANR	6199493	Identifier	val		6199366	0					
ANR	6199494	ExpressionStatement	"sdb_set ( a -> sdb_zigns , key , val , 0 )"	506:1:11746:11781	6199366	8	True				
ANR	6199495	CallExpression	"sdb_set ( a -> sdb_zigns , key , val , 0 )"		6199366	0					
ANR	6199496	Callee	sdb_set		6199366	0					
ANR	6199497	Identifier	sdb_set		6199366	0					
ANR	6199498	ArgumentList	a -> sdb_zigns		6199366	1					
ANR	6199499	Argument	a -> sdb_zigns		6199366	0					
ANR	6199500	PtrMemberAccess	a -> sdb_zigns		6199366	0					
ANR	6199501	Identifier	a		6199366	0					
ANR	6199502	Identifier	sdb_zigns		6199366	1					
ANR	6199503	Argument	key		6199366	1					
ANR	6199504	Identifier	key		6199366	0					
ANR	6199505	Argument	val		6199366	2					
ANR	6199506	Identifier	val		6199366	0					
ANR	6199507	Argument	0		6199366	3					
ANR	6199508	PrimaryExpression	0		6199366	0					
ANR	6199509	Label	out :	508:0:11784:11787	6199366	9	True				
ANR	6199510	Identifier	out		6199366	0					
ANR	6199511	ExpressionStatement	r_sign_item_free ( curit )	509:1:11790:11814	6199366	10	True				
ANR	6199512	CallExpression	r_sign_item_free ( curit )		6199366	0					
ANR	6199513	Callee	r_sign_item_free		6199366	0					
ANR	6199514	Identifier	r_sign_item_free		6199366	0					
ANR	6199515	ArgumentList	curit		6199366	1					
ANR	6199516	Argument	curit		6199366	0					
ANR	6199517	Identifier	curit		6199366	0					
ANR	6199518	ReturnStatement	return retval ;	511:1:11818:11831	6199366	11	True				
ANR	6199519	Identifier	retval		6199366	0					
ANR	6199520	ReturnType	static bool		6199366	1					
ANR	6199521	Identifier	addItem		6199366	2					
ANR	6199522	ParameterList	"RAnal * a , RSignItem * it"		6199366	3					
ANR	6199523	Parameter	RAnal * a	486:20:11249:11256	6199366	0	True				
ANR	6199524	ParameterType	RAnal *		6199366	0					
ANR	6199525	Identifier	a		6199366	1					
ANR	6199526	Parameter	RSignItem * it	486:30:11259:11271	6199366	1	True				
ANR	6199527	ParameterType	RSignItem *		6199366	0					
ANR	6199528	Identifier	it		6199366	1					
ANR	6199529	CFGEntryNode	ENTRY		6199366		True				
ANR	6199530	CFGExitNode	EXIT		6199366		True				
ANR	6199531	Symbol	val		6199366						
ANR	6199532	Symbol	a		6199366						
ANR	6199533	Symbol	r_sign_item_new		6199366						
ANR	6199534	Symbol	curit		6199366						
ANR	6199535	Symbol	NULL		6199366						
ANR	6199536	Symbol	false		6199366						
ANR	6199537	Symbol	it		6199366						
ANR	6199538	Symbol	* a		6199366						
ANR	6199539	Symbol	sdb_const_get		6199366						
ANR	6199540	Symbol	retval		6199366						
ANR	6199541	Symbol	a -> sdb_zigns		6199366						
ANR	6199542	Symbol	r_sign_deserialize		6199366						
ANR	6199543	Symbol	curval		6199366						
ANR	6199544	Symbol	true		6199366						
ANR	6199545	Symbol	key		6199366						
ANR	6199546	Function	addHash	514:0:11836:12419							
ANR	6199547	FunctionDef	"addHash (RAnal * a , const char * name , int type , const char * val)"		6199546	0					
ANR	6199548	CompoundStatement		514:75:11911:12419	6199546	0					
ANR	6199549	IdentifierDeclStatement	RSignItem * it = r_sign_item_new ( ) ;	515:1:11914:11948	6199546	0	True				
ANR	6199550	IdentifierDecl	* it = r_sign_item_new ( )		6199546	0					
ANR	6199551	IdentifierDeclType	RSignItem *		6199546	0					
ANR	6199552	Identifier	it		6199546	1					
ANR	6199553	AssignmentExpression	* it = r_sign_item_new ( )		6199546	2		=			
ANR	6199554	Identifier	it		6199546	0					
ANR	6199555	CallExpression	r_sign_item_new ( )		6199546	1					
ANR	6199556	Callee	r_sign_item_new		6199546	0					
ANR	6199557	Identifier	r_sign_item_new		6199546	0					
ANR	6199558	ArgumentList			6199546	1					
ANR	6199559	IfStatement	if ( ! it )		6199546	1					
ANR	6199560	Condition	! it	516:5:11955:11957	6199546	0	True				
ANR	6199561	UnaryOperationExpression	! it		6199546	0					
ANR	6199562	UnaryOperator	!		6199546	0					
ANR	6199563	Identifier	it		6199546	1					
ANR	6199564	CompoundStatement		3:10:48:48	6199546	1					
ANR	6199565	ExpressionStatement	r_sign_item_free ( it )	517:2:11964:11985	6199546	0	True				
ANR	6199566	CallExpression	r_sign_item_free ( it )		6199546	0					
ANR	6199567	Callee	r_sign_item_free		6199546	0					
ANR	6199568	Identifier	r_sign_item_free		6199546	0					
ANR	6199569	ArgumentList	it		6199546	1					
ANR	6199570	Argument	it		6199546	0					
ANR	6199571	Identifier	it		6199546	0					
ANR	6199572	ReturnStatement	return false ;	518:2:11989:12001	6199546	1	True				
ANR	6199573	Identifier	false		6199546	0					
ANR	6199574	ExpressionStatement	it -> name = r_str_new ( name )	520:1:12007:12034	6199546	2	True				
ANR	6199575	AssignmentExpression	it -> name = r_str_new ( name )		6199546	0		=			
ANR	6199576	PtrMemberAccess	it -> name		6199546	0					
ANR	6199577	Identifier	it		6199546	0					
ANR	6199578	Identifier	name		6199546	1					
ANR	6199579	CallExpression	r_str_new ( name )		6199546	1					
ANR	6199580	Callee	r_str_new		6199546	0					
ANR	6199581	Identifier	r_str_new		6199546	0					
ANR	6199582	ArgumentList	name		6199546	1					
ANR	6199583	Argument	name		6199546	0					
ANR	6199584	Identifier	name		6199546	0					
ANR	6199585	IfStatement	if ( ! it -> name )		6199546	3					
ANR	6199586	Condition	! it -> name	521:5:12041:12049	6199546	0	True				
ANR	6199587	UnaryOperationExpression	! it -> name		6199546	0					
ANR	6199588	UnaryOperator	!		6199546	0					
ANR	6199589	PtrMemberAccess	it -> name		6199546	1					
ANR	6199590	Identifier	it		6199546	0					
ANR	6199591	Identifier	name		6199546	1					
ANR	6199592	CompoundStatement		8:16:140:140	6199546	1					
ANR	6199593	ExpressionStatement	r_sign_item_free ( it )	522:2:12056:12077	6199546	0	True				
ANR	6199594	CallExpression	r_sign_item_free ( it )		6199546	0					
ANR	6199595	Callee	r_sign_item_free		6199546	0					
ANR	6199596	Identifier	r_sign_item_free		6199546	0					
ANR	6199597	ArgumentList	it		6199546	1					
ANR	6199598	Argument	it		6199546	0					
ANR	6199599	Identifier	it		6199546	0					
ANR	6199600	ReturnStatement	return false ;	523:2:12081:12093	6199546	1	True				
ANR	6199601	Identifier	false		6199546	0					
ANR	6199602	ExpressionStatement	it -> hash = R_NEW0 ( RSignHash )	525:1:12099:12128	6199546	4	True				
ANR	6199603	AssignmentExpression	it -> hash = R_NEW0 ( RSignHash )		6199546	0		=			
ANR	6199604	PtrMemberAccess	it -> hash		6199546	0					
ANR	6199605	Identifier	it		6199546	0					
ANR	6199606	Identifier	hash		6199546	1					
ANR	6199607	CallExpression	R_NEW0 ( RSignHash )		6199546	1					
ANR	6199608	Callee	R_NEW0		6199546	0					
ANR	6199609	Identifier	R_NEW0		6199546	0					
ANR	6199610	ArgumentList	RSignHash		6199546	1					
ANR	6199611	Argument	RSignHash		6199546	0					
ANR	6199612	Identifier	RSignHash		6199546	0					
ANR	6199613	IfStatement	if ( ! it -> hash )		6199546	5					
ANR	6199614	Condition	! it -> hash	526:5:12135:12143	6199546	0	True				
ANR	6199615	UnaryOperationExpression	! it -> hash		6199546	0					
ANR	6199616	UnaryOperator	!		6199546	0					
ANR	6199617	PtrMemberAccess	it -> hash		6199546	1					
ANR	6199618	Identifier	it		6199546	0					
ANR	6199619	Identifier	hash		6199546	1					
ANR	6199620	CompoundStatement		13:16:234:234	6199546	1					
ANR	6199621	ExpressionStatement	r_sign_item_free ( it )	527:2:12150:12171	6199546	0	True				
ANR	6199622	CallExpression	r_sign_item_free ( it )		6199546	0					
ANR	6199623	Callee	r_sign_item_free		6199546	0					
ANR	6199624	Identifier	r_sign_item_free		6199546	0					
ANR	6199625	ArgumentList	it		6199546	1					
ANR	6199626	Argument	it		6199546	0					
ANR	6199627	Identifier	it		6199546	0					
ANR	6199628	ReturnStatement	return false ;	528:2:12175:12187	6199546	1	True				
ANR	6199629	Identifier	false		6199546	0					
ANR	6199630	ExpressionStatement	it -> space = r_spaces_current ( & a -> zign_spaces )	530:1:12193:12239	6199546	6	True				
ANR	6199631	AssignmentExpression	it -> space = r_spaces_current ( & a -> zign_spaces )		6199546	0		=			
ANR	6199632	PtrMemberAccess	it -> space		6199546	0					
ANR	6199633	Identifier	it		6199546	0					
ANR	6199634	Identifier	space		6199546	1					
ANR	6199635	CallExpression	r_spaces_current ( & a -> zign_spaces )		6199546	1					
ANR	6199636	Callee	r_spaces_current		6199546	0					
ANR	6199637	Identifier	r_spaces_current		6199546	0					
ANR	6199638	ArgumentList	& a -> zign_spaces		6199546	1					
ANR	6199639	Argument	& a -> zign_spaces		6199546	0					
ANR	6199640	UnaryOperationExpression	& a -> zign_spaces		6199546	0					
ANR	6199641	UnaryOperator	&		6199546	0					
ANR	6199642	PtrMemberAccess	a -> zign_spaces		6199546	1					
ANR	6199643	Identifier	a		6199546	0					
ANR	6199644	Identifier	zign_spaces		6199546	1					
ANR	6199645	IdentifierDeclStatement	bool retval = false ;	532:1:12243:12262	6199546	7	True				
ANR	6199646	IdentifierDecl	retval = false		6199546	0					
ANR	6199647	IdentifierDeclType	bool		6199546	0					
ANR	6199648	Identifier	retval		6199546	1					
ANR	6199649	AssignmentExpression	retval = false		6199546	2		=			
ANR	6199650	Identifier	false		6199546	0					
ANR	6199651	Identifier	false		6199546	1					
ANR	6199652	SwitchStatement	switch ( type )		6199546	8					
ANR	6199653	Condition	type	533:9:12273:12276	6199546	0	True				
ANR	6199654	Identifier	type		6199546	0					
ANR	6199655	CompoundStatement		20:15:367:367	6199546	1					
ANR	6199656	Label	case R_SIGN_BBHASH :	534:1:12282:12300	6199546	0	True				
ANR	6199657	Identifier	R_SIGN_BBHASH		6199546	0					
ANR	6199658	ExpressionStatement	it -> hash -> bbhash = strdup ( val )	535:2:12304:12335	6199546	1	True				
ANR	6199659	AssignmentExpression	it -> hash -> bbhash = strdup ( val )		6199546	0		=			
ANR	6199660	PtrMemberAccess	it -> hash -> bbhash		6199546	0					
ANR	6199661	PtrMemberAccess	it -> hash		6199546	0					
ANR	6199662	Identifier	it		6199546	0					
ANR	6199663	Identifier	hash		6199546	1					
ANR	6199664	Identifier	bbhash		6199546	1					
ANR	6199665	CallExpression	strdup ( val )		6199546	1					
ANR	6199666	Callee	strdup		6199546	0					
ANR	6199667	Identifier	strdup		6199546	0					
ANR	6199668	ArgumentList	val		6199546	1					
ANR	6199669	Argument	val		6199546	0					
ANR	6199670	Identifier	val		6199546	0					
ANR	6199671	ExpressionStatement	"retval = addItem ( a , it )"	536:2:12339:12363	6199546	2	True				
ANR	6199672	AssignmentExpression	"retval = addItem ( a , it )"		6199546	0		=			
ANR	6199673	Identifier	retval		6199546	0					
ANR	6199674	CallExpression	"addItem ( a , it )"		6199546	1					
ANR	6199675	Callee	addItem		6199546	0					
ANR	6199676	Identifier	addItem		6199546	0					
ANR	6199677	ArgumentList	a		6199546	1					
ANR	6199678	Argument	a		6199546	0					
ANR	6199679	Identifier	a		6199546	0					
ANR	6199680	Argument	it		6199546	1					
ANR	6199681	Identifier	it		6199546	0					
ANR	6199682	ExpressionStatement	r_sign_item_free ( it )	537:2:12367:12388	6199546	3	True				
ANR	6199683	CallExpression	r_sign_item_free ( it )		6199546	0					
ANR	6199684	Callee	r_sign_item_free		6199546	0					
ANR	6199685	Identifier	r_sign_item_free		6199546	0					
ANR	6199686	ArgumentList	it		6199546	1					
ANR	6199687	Argument	it		6199546	0					
ANR	6199688	Identifier	it		6199546	0					
ANR	6199689	BreakStatement	break ;	538:2:12392:12397	6199546	4	True				
ANR	6199690	ReturnStatement	return retval ;	541:1:12404:12417	6199546	9	True				
ANR	6199691	Identifier	retval		6199546	0					
ANR	6199692	ReturnType	static bool		6199546	1					
ANR	6199693	Identifier	addHash		6199546	2					
ANR	6199694	ParameterList	"RAnal * a , const char * name , int type , const char * val"		6199546	3					
ANR	6199695	Parameter	RAnal * a	514:20:11856:11863	6199546	0	True				
ANR	6199696	ParameterType	RAnal *		6199546	0					
ANR	6199697	Identifier	a		6199546	1					
ANR	6199698	Parameter	const char * name	514:30:11866:11881	6199546	1	True				
ANR	6199699	ParameterType	const char *		6199546	0					
ANR	6199700	Identifier	name		6199546	1					
ANR	6199701	Parameter	int type	514:48:11884:11891	6199546	2	True				
ANR	6199702	ParameterType	int		6199546	0					
ANR	6199703	Identifier	type		6199546	1					
ANR	6199704	Parameter	const char * val	514:58:11894:11908	6199546	3	True				
ANR	6199705	ParameterType	const char *		6199546	0					
ANR	6199706	Identifier	val		6199546	1					
ANR	6199707	CFGEntryNode	ENTRY		6199546		True				
ANR	6199708	CFGExitNode	EXIT		6199546		True				
ANR	6199709	Symbol	val		6199546						
ANR	6199710	Symbol	a		6199546						
ANR	6199711	Symbol	r_sign_item_new		6199546						
ANR	6199712	Symbol	* it -> hash		6199546						
ANR	6199713	Symbol	it -> name		6199546						
ANR	6199714	Symbol	false		6199546						
ANR	6199715	Symbol	it		6199546						
ANR	6199716	Symbol	type		6199546						
ANR	6199717	Symbol	& a -> zign_spaces		6199546						
ANR	6199718	Symbol	retval		6199546						
ANR	6199719	Symbol	R_NEW0		6199546						
ANR	6199720	Symbol	it -> space		6199546						
ANR	6199721	Symbol	addItem		6199546						
ANR	6199722	Symbol	* it		6199546						
ANR	6199723	Symbol	RSignHash		6199546						
ANR	6199724	Symbol	* * it		6199546						
ANR	6199725	Symbol	it -> hash		6199546						
ANR	6199726	Symbol	name		6199546						
ANR	6199727	Symbol	strdup		6199546						
ANR	6199728	Symbol	r_spaces_current		6199546						
ANR	6199729	Symbol	r_str_new		6199546						
ANR	6199730	Symbol	it -> hash -> bbhash		6199546						
ANR	6199731	Function	addBBHash	544:0:12422:12977							
ANR	6199732	FunctionDef	"addBBHash (RAnal * a , RAnalFunction * fcn , const char * name)"		6199731	0					
ANR	6199733	CompoundStatement		544:70:12492:12977	6199731	0					
ANR	6199734	IdentifierDeclStatement	bool retval = false ;	545:1:12495:12514	6199731	0	True				
ANR	6199735	IdentifierDecl	retval = false		6199731	0					
ANR	6199736	IdentifierDeclType	bool		6199731	0					
ANR	6199737	Identifier	retval		6199731	1					
ANR	6199738	AssignmentExpression	retval = false		6199731	2		=			
ANR	6199739	Identifier	false		6199731	0					
ANR	6199740	Identifier	false		6199731	1					
ANR	6199741	IdentifierDeclStatement	RSignItem * it = r_sign_item_new ( ) ;	546:1:12517:12551	6199731	1	True				
ANR	6199742	IdentifierDecl	* it = r_sign_item_new ( )		6199731	0					
ANR	6199743	IdentifierDeclType	RSignItem *		6199731	0					
ANR	6199744	Identifier	it		6199731	1					
ANR	6199745	AssignmentExpression	* it = r_sign_item_new ( )		6199731	2		=			
ANR	6199746	Identifier	it		6199731	0					
ANR	6199747	CallExpression	r_sign_item_new ( )		6199731	1					
ANR	6199748	Callee	r_sign_item_new		6199731	0					
ANR	6199749	Identifier	r_sign_item_new		6199731	0					
ANR	6199750	ArgumentList			6199731	1					
ANR	6199751	IfStatement	if ( ! it )		6199731	2					
ANR	6199752	Condition	! it	547:5:12558:12560	6199731	0	True				
ANR	6199753	UnaryOperationExpression	! it		6199731	0					
ANR	6199754	UnaryOperator	!		6199731	0					
ANR	6199755	Identifier	it		6199731	1					
ANR	6199756	CompoundStatement		4:10:70:70	6199731	1					
ANR	6199757	GotoStatement	goto beach ;	548:2:12567:12577	6199731	0	True				
ANR	6199758	Identifier	beach		6199731	0					
ANR	6199759	ExpressionStatement	it -> name = r_str_new ( name )	550:1:12583:12610	6199731	3	True				
ANR	6199760	AssignmentExpression	it -> name = r_str_new ( name )		6199731	0		=			
ANR	6199761	PtrMemberAccess	it -> name		6199731	0					
ANR	6199762	Identifier	it		6199731	0					
ANR	6199763	Identifier	name		6199731	1					
ANR	6199764	CallExpression	r_str_new ( name )		6199731	1					
ANR	6199765	Callee	r_str_new		6199731	0					
ANR	6199766	Identifier	r_str_new		6199731	0					
ANR	6199767	ArgumentList	name		6199731	1					
ANR	6199768	Argument	name		6199731	0					
ANR	6199769	Identifier	name		6199731	0					
ANR	6199770	IfStatement	if ( ! it -> name )		6199731	4					
ANR	6199771	Condition	! it -> name	551:5:12617:12625	6199731	0	True				
ANR	6199772	UnaryOperationExpression	! it -> name		6199731	0					
ANR	6199773	UnaryOperator	!		6199731	0					
ANR	6199774	PtrMemberAccess	it -> name		6199731	1					
ANR	6199775	Identifier	it		6199731	0					
ANR	6199776	Identifier	name		6199731	1					
ANR	6199777	CompoundStatement		8:16:135:135	6199731	1					
ANR	6199778	GotoStatement	goto beach ;	552:2:12632:12642	6199731	0	True				
ANR	6199779	Identifier	beach		6199731	0					
ANR	6199780	ExpressionStatement	it -> hash = R_NEW0 ( RSignHash )	554:1:12648:12677	6199731	5	True				
ANR	6199781	AssignmentExpression	it -> hash = R_NEW0 ( RSignHash )		6199731	0		=			
ANR	6199782	PtrMemberAccess	it -> hash		6199731	0					
ANR	6199783	Identifier	it		6199731	0					
ANR	6199784	Identifier	hash		6199731	1					
ANR	6199785	CallExpression	R_NEW0 ( RSignHash )		6199731	1					
ANR	6199786	Callee	R_NEW0		6199731	0					
ANR	6199787	Identifier	R_NEW0		6199731	0					
ANR	6199788	ArgumentList	RSignHash		6199731	1					
ANR	6199789	Argument	RSignHash		6199731	0					
ANR	6199790	Identifier	RSignHash		6199731	0					
ANR	6199791	ExpressionStatement	it -> space = r_spaces_current ( & a -> zign_spaces )	555:1:12680:12726	6199731	6	True				
ANR	6199792	AssignmentExpression	it -> space = r_spaces_current ( & a -> zign_spaces )		6199731	0		=			
ANR	6199793	PtrMemberAccess	it -> space		6199731	0					
ANR	6199794	Identifier	it		6199731	0					
ANR	6199795	Identifier	space		6199731	1					
ANR	6199796	CallExpression	r_spaces_current ( & a -> zign_spaces )		6199731	1					
ANR	6199797	Callee	r_spaces_current		6199731	0					
ANR	6199798	Identifier	r_spaces_current		6199731	0					
ANR	6199799	ArgumentList	& a -> zign_spaces		6199731	1					
ANR	6199800	Argument	& a -> zign_spaces		6199731	0					
ANR	6199801	UnaryOperationExpression	& a -> zign_spaces		6199731	0					
ANR	6199802	UnaryOperator	&		6199731	0					
ANR	6199803	PtrMemberAccess	a -> zign_spaces		6199731	1					
ANR	6199804	Identifier	a		6199731	0					
ANR	6199805	Identifier	zign_spaces		6199731	1					
ANR	6199806	IfStatement	if ( ! it -> hash )		6199731	7					
ANR	6199807	Condition	! it -> hash	556:5:12733:12741	6199731	0	True				
ANR	6199808	UnaryOperationExpression	! it -> hash		6199731	0					
ANR	6199809	UnaryOperator	!		6199731	0					
ANR	6199810	PtrMemberAccess	it -> hash		6199731	1					
ANR	6199811	Identifier	it		6199731	0					
ANR	6199812	Identifier	hash		6199731	1					
ANR	6199813	CompoundStatement		13:16:251:251	6199731	1					
ANR	6199814	GotoStatement	goto beach ;	557:2:12748:12758	6199731	0	True				
ANR	6199815	Identifier	beach		6199731	0					
ANR	6199816	IdentifierDeclStatement	"char * digest_hex = r_sign_calc_bbhash ( a , fcn ) ;"	560:1:12765:12811	6199731	8	True				
ANR	6199817	IdentifierDecl	"* digest_hex = r_sign_calc_bbhash ( a , fcn )"		6199731	0					
ANR	6199818	IdentifierDeclType	char *		6199731	0					
ANR	6199819	Identifier	digest_hex		6199731	1					
ANR	6199820	AssignmentExpression	"* digest_hex = r_sign_calc_bbhash ( a , fcn )"		6199731	2		=			
ANR	6199821	Identifier	digest_hex		6199731	0					
ANR	6199822	CallExpression	"r_sign_calc_bbhash ( a , fcn )"		6199731	1					
ANR	6199823	Callee	r_sign_calc_bbhash		6199731	0					
ANR	6199824	Identifier	r_sign_calc_bbhash		6199731	0					
ANR	6199825	ArgumentList	a		6199731	1					
ANR	6199826	Argument	a		6199731	0					
ANR	6199827	Identifier	a		6199731	0					
ANR	6199828	Argument	fcn		6199731	1					
ANR	6199829	Identifier	fcn		6199731	0					
ANR	6199830	IfStatement	if ( ! digest_hex )		6199731	9					
ANR	6199831	Condition	! digest_hex	561:5:12818:12828	6199731	0	True				
ANR	6199832	UnaryOperationExpression	! digest_hex		6199731	0					
ANR	6199833	UnaryOperator	!		6199731	0					
ANR	6199834	Identifier	digest_hex		6199731	1					
ANR	6199835	CompoundStatement		18:18:338:338	6199731	1					
ANR	6199836	ExpressionStatement	free ( digest_hex )	562:2:12835:12852	6199731	0	True				
ANR	6199837	CallExpression	free ( digest_hex )		6199731	0					
ANR	6199838	Callee	free		6199731	0					
ANR	6199839	Identifier	free		6199731	0					
ANR	6199840	ArgumentList	digest_hex		6199731	1					
ANR	6199841	Argument	digest_hex		6199731	0					
ANR	6199842	Identifier	digest_hex		6199731	0					
ANR	6199843	GotoStatement	goto beach ;	563:2:12856:12866	6199731	1	True				
ANR	6199844	Identifier	beach		6199731	0					
ANR	6199845	ExpressionStatement	it -> hash -> bbhash = digest_hex	565:1:12872:12901	6199731	10	True				
ANR	6199846	AssignmentExpression	it -> hash -> bbhash = digest_hex		6199731	0		=			
ANR	6199847	PtrMemberAccess	it -> hash -> bbhash		6199731	0					
ANR	6199848	PtrMemberAccess	it -> hash		6199731	0					
ANR	6199849	Identifier	it		6199731	0					
ANR	6199850	Identifier	hash		6199731	1					
ANR	6199851	Identifier	bbhash		6199731	1					
ANR	6199852	Identifier	digest_hex		6199731	1					
ANR	6199853	ExpressionStatement	"retval = addItem ( a , it )"	566:1:12904:12928	6199731	11	True				
ANR	6199854	AssignmentExpression	"retval = addItem ( a , it )"		6199731	0		=			
ANR	6199855	Identifier	retval		6199731	0					
ANR	6199856	CallExpression	"addItem ( a , it )"		6199731	1					
ANR	6199857	Callee	addItem		6199731	0					
ANR	6199858	Identifier	addItem		6199731	0					
ANR	6199859	ArgumentList	a		6199731	1					
ANR	6199860	Argument	a		6199731	0					
ANR	6199861	Identifier	a		6199731	0					
ANR	6199862	Argument	it		6199731	1					
ANR	6199863	Identifier	it		6199731	0					
ANR	6199864	Label	beach :	567:0:12930:12935	6199731	12	True				
ANR	6199865	Identifier	beach		6199731	0					
ANR	6199866	ExpressionStatement	r_sign_item_free ( it )	568:1:12938:12959	6199731	13	True				
ANR	6199867	CallExpression	r_sign_item_free ( it )		6199731	0					
ANR	6199868	Callee	r_sign_item_free		6199731	0					
ANR	6199869	Identifier	r_sign_item_free		6199731	0					
ANR	6199870	ArgumentList	it		6199731	1					
ANR	6199871	Argument	it		6199731	0					
ANR	6199872	Identifier	it		6199731	0					
ANR	6199873	ReturnStatement	return retval ;	569:1:12962:12975	6199731	14	True				
ANR	6199874	Identifier	retval		6199731	0					
ANR	6199875	ReturnType	static bool		6199731	1					
ANR	6199876	Identifier	addBBHash		6199731	2					
ANR	6199877	ParameterList	"RAnal * a , RAnalFunction * fcn , const char * name"		6199731	3					
ANR	6199878	Parameter	RAnal * a	544:22:12444:12451	6199731	0	True				
ANR	6199879	ParameterType	RAnal *		6199731	0					
ANR	6199880	Identifier	a		6199731	1					
ANR	6199881	Parameter	RAnalFunction * fcn	544:32:12454:12471	6199731	1	True				
ANR	6199882	ParameterType	RAnalFunction *		6199731	0					
ANR	6199883	Identifier	fcn		6199731	1					
ANR	6199884	Parameter	const char * name	544:52:12474:12489	6199731	2	True				
ANR	6199885	ParameterType	const char *		6199731	0					
ANR	6199886	Identifier	name		6199731	1					
ANR	6199887	CFGEntryNode	ENTRY		6199731		True				
ANR	6199888	CFGExitNode	EXIT		6199731		True				
ANR	6199889	Symbol	a		6199731						
ANR	6199890	Symbol	r_sign_item_new		6199731						
ANR	6199891	Symbol	* it -> hash		6199731						
ANR	6199892	Symbol	it -> name		6199731						
ANR	6199893	Symbol	false		6199731						
ANR	6199894	Symbol	it		6199731						
ANR	6199895	Symbol	retval		6199731						
ANR	6199896	Symbol	& a -> zign_spaces		6199731						
ANR	6199897	Symbol	fcn		6199731						
ANR	6199898	Symbol	r_sign_calc_bbhash		6199731						
ANR	6199899	Symbol	R_NEW0		6199731						
ANR	6199900	Symbol	it -> space		6199731						
ANR	6199901	Symbol	addItem		6199731						
ANR	6199902	Symbol	* it		6199731						
ANR	6199903	Symbol	RSignHash		6199731						
ANR	6199904	Symbol	* * it		6199731						
ANR	6199905	Symbol	it -> hash		6199731						
ANR	6199906	Symbol	name		6199731						
ANR	6199907	Symbol	digest_hex		6199731						
ANR	6199908	Symbol	r_spaces_current		6199731						
ANR	6199909	Symbol	r_str_new		6199731						
ANR	6199910	Symbol	it -> hash -> bbhash		6199731						
ANR	6199911	Function	addBytes	572:0:12980:13917							
ANR	6199912	FunctionDef	"addBytes (RAnal * a , const char * name , ut64 size , const ut8 * bytes , const ut8 * mask)"		6199911	0					
ANR	6199913	CompoundStatement		572:95:13075:13917	6199911	0					
ANR	6199914	IdentifierDeclStatement	bool retval = true ;	573:1:13078:13096	6199911	0	True				
ANR	6199915	IdentifierDecl	retval = true		6199911	0					
ANR	6199916	IdentifierDeclType	bool		6199911	0					
ANR	6199917	Identifier	retval		6199911	1					
ANR	6199918	AssignmentExpression	retval = true		6199911	2		=			
ANR	6199919	Identifier	true		6199911	0					
ANR	6199920	Identifier	true		6199911	1					
ANR	6199921	IfStatement	"if ( r_mem_is_zero ( mask , size ) )"		6199911	1					
ANR	6199922	Condition	"r_mem_is_zero ( mask , size )"	575:5:13104:13129	6199911	0	True				
ANR	6199923	CallExpression	"r_mem_is_zero ( mask , size )"		6199911	0					
ANR	6199924	Callee	r_mem_is_zero		6199911	0					
ANR	6199925	Identifier	r_mem_is_zero		6199911	0					
ANR	6199926	ArgumentList	mask		6199911	1					
ANR	6199927	Argument	mask		6199911	0					
ANR	6199928	Identifier	mask		6199911	0					
ANR	6199929	Argument	size		6199911	1					
ANR	6199930	Identifier	size		6199911	0					
ANR	6199931	CompoundStatement		4:33:56:56	6199911	1					
ANR	6199932	ExpressionStatement	"eprintf ( ""error: zero mask\\n"" )"	576:2:13136:13166	6199911	0	True				
ANR	6199933	CallExpression	"eprintf ( ""error: zero mask\\n"" )"		6199911	0					
ANR	6199934	Callee	eprintf		6199911	0					
ANR	6199935	Identifier	eprintf		6199911	0					
ANR	6199936	ArgumentList	"""error: zero mask\\n"""		6199911	1					
ANR	6199937	Argument	"""error: zero mask\\n"""		6199911	0					
ANR	6199938	PrimaryExpression	"""error: zero mask\\n"""		6199911	0					
ANR	6199939	ReturnStatement	return false ;	577:2:13170:13182	6199911	1	True				
ANR	6199940	Identifier	false		6199911	0					
ANR	6199941	IdentifierDeclStatement	RSignItem * it = r_sign_item_new ( ) ;	580:1:13189:13223	6199911	2	True				
ANR	6199942	IdentifierDecl	* it = r_sign_item_new ( )		6199911	0					
ANR	6199943	IdentifierDeclType	RSignItem *		6199911	0					
ANR	6199944	Identifier	it		6199911	1					
ANR	6199945	AssignmentExpression	* it = r_sign_item_new ( )		6199911	2		=			
ANR	6199946	Identifier	it		6199911	0					
ANR	6199947	CallExpression	r_sign_item_new ( )		6199911	1					
ANR	6199948	Callee	r_sign_item_new		6199911	0					
ANR	6199949	Identifier	r_sign_item_new		6199911	0					
ANR	6199950	ArgumentList			6199911	1					
ANR	6199951	IfStatement	if ( ! it )		6199911	3					
ANR	6199952	Condition	! it	581:5:13230:13232	6199911	0	True				
ANR	6199953	UnaryOperationExpression	! it		6199911	0					
ANR	6199954	UnaryOperator	!		6199911	0					
ANR	6199955	Identifier	it		6199911	1					
ANR	6199956	CompoundStatement		10:10:159:159	6199911	1					
ANR	6199957	ReturnStatement	return false ;	582:2:13239:13251	6199911	0	True				
ANR	6199958	Identifier	false		6199911	0					
ANR	6199959	ExpressionStatement	it -> name = r_str_new ( name )	585:1:13258:13285	6199911	4	True				
ANR	6199960	AssignmentExpression	it -> name = r_str_new ( name )		6199911	0		=			
ANR	6199961	PtrMemberAccess	it -> name		6199911	0					
ANR	6199962	Identifier	it		6199911	0					
ANR	6199963	Identifier	name		6199911	1					
ANR	6199964	CallExpression	r_str_new ( name )		6199911	1					
ANR	6199965	Callee	r_str_new		6199911	0					
ANR	6199966	Identifier	r_str_new		6199911	0					
ANR	6199967	ArgumentList	name		6199911	1					
ANR	6199968	Argument	name		6199911	0					
ANR	6199969	Identifier	name		6199911	0					
ANR	6199970	IfStatement	if ( ! it -> name )		6199911	5					
ANR	6199971	Condition	! it -> name	586:5:13292:13300	6199911	0	True				
ANR	6199972	UnaryOperationExpression	! it -> name		6199911	0					
ANR	6199973	UnaryOperator	!		6199911	0					
ANR	6199974	PtrMemberAccess	it -> name		6199911	1					
ANR	6199975	Identifier	it		6199911	0					
ANR	6199976	Identifier	name		6199911	1					
ANR	6199977	CompoundStatement		15:16:227:227	6199911	1					
ANR	6199978	ExpressionStatement	free ( it )	587:2:13307:13316	6199911	0	True				
ANR	6199979	CallExpression	free ( it )		6199911	0					
ANR	6199980	Callee	free		6199911	0					
ANR	6199981	Identifier	free		6199911	0					
ANR	6199982	ArgumentList	it		6199911	1					
ANR	6199983	Argument	it		6199911	0					
ANR	6199984	Identifier	it		6199911	0					
ANR	6199985	ReturnStatement	return false ;	588:2:13320:13332	6199911	1	True				
ANR	6199986	Identifier	false		6199911	0					
ANR	6199987	ExpressionStatement	it -> space = r_spaces_current ( & a -> zign_spaces )	590:1:13338:13384	6199911	6	True				
ANR	6199988	AssignmentExpression	it -> space = r_spaces_current ( & a -> zign_spaces )		6199911	0		=			
ANR	6199989	PtrMemberAccess	it -> space		6199911	0					
ANR	6199990	Identifier	it		6199911	0					
ANR	6199991	Identifier	space		6199911	1					
ANR	6199992	CallExpression	r_spaces_current ( & a -> zign_spaces )		6199911	1					
ANR	6199993	Callee	r_spaces_current		6199911	0					
ANR	6199994	Identifier	r_spaces_current		6199911	0					
ANR	6199995	ArgumentList	& a -> zign_spaces		6199911	1					
ANR	6199996	Argument	& a -> zign_spaces		6199911	0					
ANR	6199997	UnaryOperationExpression	& a -> zign_spaces		6199911	0					
ANR	6199998	UnaryOperator	&		6199911	0					
ANR	6199999	PtrMemberAccess	a -> zign_spaces		6199911	1					
ANR	6200000	Identifier	a		6199911	0					
ANR	6200001	Identifier	zign_spaces		6199911	1					
ANR	6200002	ExpressionStatement	it -> bytes = R_NEW0 ( RSignBytes )	591:1:13387:13418	6199911	7	True				
ANR	6200003	AssignmentExpression	it -> bytes = R_NEW0 ( RSignBytes )		6199911	0		=			
ANR	6200004	PtrMemberAccess	it -> bytes		6199911	0					
ANR	6200005	Identifier	it		6199911	0					
ANR	6200006	Identifier	bytes		6199911	1					
ANR	6200007	CallExpression	R_NEW0 ( RSignBytes )		6199911	1					
ANR	6200008	Callee	R_NEW0		6199911	0					
ANR	6200009	Identifier	R_NEW0		6199911	0					
ANR	6200010	ArgumentList	RSignBytes		6199911	1					
ANR	6200011	Argument	RSignBytes		6199911	0					
ANR	6200012	Identifier	RSignBytes		6199911	0					
ANR	6200013	IfStatement	if ( ! it -> bytes )		6199911	8					
ANR	6200014	Condition	! it -> bytes	592:5:13425:13434	6199911	0	True				
ANR	6200015	UnaryOperationExpression	! it -> bytes		6199911	0					
ANR	6200016	UnaryOperator	!		6199911	0					
ANR	6200017	PtrMemberAccess	it -> bytes		6199911	1					
ANR	6200018	Identifier	it		6199911	0					
ANR	6200019	Identifier	bytes		6199911	1					
ANR	6200020	CompoundStatement		21:17:361:361	6199911	1					
ANR	6200021	GotoStatement	goto fail ;	593:2:13441:13450	6199911	0	True				
ANR	6200022	Identifier	fail		6199911	0					
ANR	6200023	ExpressionStatement	it -> bytes -> size = size	595:1:13456:13478	6199911	9	True				
ANR	6200024	AssignmentExpression	it -> bytes -> size = size		6199911	0		=			
ANR	6200025	PtrMemberAccess	it -> bytes -> size		6199911	0					
ANR	6200026	PtrMemberAccess	it -> bytes		6199911	0					
ANR	6200027	Identifier	it		6199911	0					
ANR	6200028	Identifier	bytes		6199911	1					
ANR	6200029	Identifier	size		6199911	1					
ANR	6200030	Identifier	size		6199911	1					
ANR	6200031	ExpressionStatement	it -> bytes -> bytes = malloc ( size )	596:1:13481:13513	6199911	10	True				
ANR	6200032	AssignmentExpression	it -> bytes -> bytes = malloc ( size )		6199911	0		=			
ANR	6200033	PtrMemberAccess	it -> bytes -> bytes		6199911	0					
ANR	6200034	PtrMemberAccess	it -> bytes		6199911	0					
ANR	6200035	Identifier	it		6199911	0					
ANR	6200036	Identifier	bytes		6199911	1					
ANR	6200037	Identifier	bytes		6199911	1					
ANR	6200038	CallExpression	malloc ( size )		6199911	1					
ANR	6200039	Callee	malloc		6199911	0					
ANR	6200040	Identifier	malloc		6199911	0					
ANR	6200041	ArgumentList	size		6199911	1					
ANR	6200042	Argument	size		6199911	0					
ANR	6200043	Identifier	size		6199911	0					
ANR	6200044	IfStatement	if ( ! it -> bytes -> bytes )		6199911	11					
ANR	6200045	Condition	! it -> bytes -> bytes	597:5:13520:13536	6199911	0	True				
ANR	6200046	UnaryOperationExpression	! it -> bytes -> bytes		6199911	0					
ANR	6200047	UnaryOperator	!		6199911	0					
ANR	6200048	PtrMemberAccess	it -> bytes -> bytes		6199911	1					
ANR	6200049	PtrMemberAccess	it -> bytes		6199911	0					
ANR	6200050	Identifier	it		6199911	0					
ANR	6200051	Identifier	bytes		6199911	1					
ANR	6200052	Identifier	bytes		6199911	1					
ANR	6200053	CompoundStatement		26:24:463:463	6199911	1					
ANR	6200054	GotoStatement	goto fail ;	598:2:13543:13552	6199911	0	True				
ANR	6200055	Identifier	fail		6199911	0					
ANR	6200056	ExpressionStatement	"memcpy ( it -> bytes -> bytes , bytes , size )"	600:1:13558:13596	6199911	12	True				
ANR	6200057	CallExpression	"memcpy ( it -> bytes -> bytes , bytes , size )"		6199911	0					
ANR	6200058	Callee	memcpy		6199911	0					
ANR	6200059	Identifier	memcpy		6199911	0					
ANR	6200060	ArgumentList	it -> bytes -> bytes		6199911	1					
ANR	6200061	Argument	it -> bytes -> bytes		6199911	0					
ANR	6200062	PtrMemberAccess	it -> bytes -> bytes		6199911	0					
ANR	6200063	PtrMemberAccess	it -> bytes		6199911	0					
ANR	6200064	Identifier	it		6199911	0					
ANR	6200065	Identifier	bytes		6199911	1					
ANR	6200066	Identifier	bytes		6199911	1					
ANR	6200067	Argument	bytes		6199911	1					
ANR	6200068	Identifier	bytes		6199911	0					
ANR	6200069	Argument	size		6199911	2					
ANR	6200070	Identifier	size		6199911	0					
ANR	6200071	ExpressionStatement	it -> bytes -> mask = malloc ( size )	601:1:13599:13630	6199911	13	True				
ANR	6200072	AssignmentExpression	it -> bytes -> mask = malloc ( size )		6199911	0		=			
ANR	6200073	PtrMemberAccess	it -> bytes -> mask		6199911	0					
ANR	6200074	PtrMemberAccess	it -> bytes		6199911	0					
ANR	6200075	Identifier	it		6199911	0					
ANR	6200076	Identifier	bytes		6199911	1					
ANR	6200077	Identifier	mask		6199911	1					
ANR	6200078	CallExpression	malloc ( size )		6199911	1					
ANR	6200079	Callee	malloc		6199911	0					
ANR	6200080	Identifier	malloc		6199911	0					
ANR	6200081	ArgumentList	size		6199911	1					
ANR	6200082	Argument	size		6199911	0					
ANR	6200083	Identifier	size		6199911	0					
ANR	6200084	IfStatement	if ( ! it -> bytes -> mask )		6199911	14					
ANR	6200085	Condition	! it -> bytes -> mask	602:5:13637:13652	6199911	0	True				
ANR	6200086	UnaryOperationExpression	! it -> bytes -> mask		6199911	0					
ANR	6200087	UnaryOperator	!		6199911	0					
ANR	6200088	PtrMemberAccess	it -> bytes -> mask		6199911	1					
ANR	6200089	PtrMemberAccess	it -> bytes		6199911	0					
ANR	6200090	Identifier	it		6199911	0					
ANR	6200091	Identifier	bytes		6199911	1					
ANR	6200092	Identifier	mask		6199911	1					
ANR	6200093	CompoundStatement		31:23:579:579	6199911	1					
ANR	6200094	GotoStatement	goto fail ;	603:2:13659:13668	6199911	0	True				
ANR	6200095	Identifier	fail		6199911	0					
ANR	6200096	ExpressionStatement	"memcpy ( it -> bytes -> mask , mask , size )"	605:1:13674:13710	6199911	15	True				
ANR	6200097	CallExpression	"memcpy ( it -> bytes -> mask , mask , size )"		6199911	0					
ANR	6200098	Callee	memcpy		6199911	0					
ANR	6200099	Identifier	memcpy		6199911	0					
ANR	6200100	ArgumentList	it -> bytes -> mask		6199911	1					
ANR	6200101	Argument	it -> bytes -> mask		6199911	0					
ANR	6200102	PtrMemberAccess	it -> bytes -> mask		6199911	0					
ANR	6200103	PtrMemberAccess	it -> bytes		6199911	0					
ANR	6200104	Identifier	it		6199911	0					
ANR	6200105	Identifier	bytes		6199911	1					
ANR	6200106	Identifier	mask		6199911	1					
ANR	6200107	Argument	mask		6199911	1					
ANR	6200108	Identifier	mask		6199911	0					
ANR	6200109	Argument	size		6199911	2					
ANR	6200110	Identifier	size		6199911	0					
ANR	6200111	ExpressionStatement	"retval = addItem ( a , it )"	606:1:13713:13737	6199911	16	True				
ANR	6200112	AssignmentExpression	"retval = addItem ( a , it )"		6199911	0		=			
ANR	6200113	Identifier	retval		6199911	0					
ANR	6200114	CallExpression	"addItem ( a , it )"		6199911	1					
ANR	6200115	Callee	addItem		6199911	0					
ANR	6200116	Identifier	addItem		6199911	0					
ANR	6200117	ArgumentList	a		6199911	1					
ANR	6200118	Argument	a		6199911	0					
ANR	6200119	Identifier	a		6199911	0					
ANR	6200120	Argument	it		6199911	1					
ANR	6200121	Identifier	it		6199911	0					
ANR	6200122	ExpressionStatement	r_sign_item_free ( it )	607:1:13740:13761	6199911	17	True				
ANR	6200123	CallExpression	r_sign_item_free ( it )		6199911	0					
ANR	6200124	Callee	r_sign_item_free		6199911	0					
ANR	6200125	Identifier	r_sign_item_free		6199911	0					
ANR	6200126	ArgumentList	it		6199911	1					
ANR	6200127	Argument	it		6199911	0					
ANR	6200128	Identifier	it		6199911	0					
ANR	6200129	ReturnStatement	return retval ;	608:1:13764:13777	6199911	18	True				
ANR	6200130	Identifier	retval		6199911	0					
ANR	6200131	Label	fail :	609:0:13779:13783	6199911	19	True				
ANR	6200132	Identifier	fail		6199911	0					
ANR	6200133	IfStatement	if ( it )		6199911	20					
ANR	6200134	Condition	it	610:5:13790:13791	6199911	0	True				
ANR	6200135	Identifier	it		6199911	0					
ANR	6200136	CompoundStatement		39:9:718:718	6199911	1					
ANR	6200137	ExpressionStatement	free ( it -> name )	611:2:13798:13813	6199911	0	True				
ANR	6200138	CallExpression	free ( it -> name )		6199911	0					
ANR	6200139	Callee	free		6199911	0					
ANR	6200140	Identifier	free		6199911	0					
ANR	6200141	ArgumentList	it -> name		6199911	1					
ANR	6200142	Argument	it -> name		6199911	0					
ANR	6200143	PtrMemberAccess	it -> name		6199911	0					
ANR	6200144	Identifier	it		6199911	0					
ANR	6200145	Identifier	name		6199911	1					
ANR	6200146	IfStatement	if ( it -> bytes )		6199911	1					
ANR	6200147	Condition	it -> bytes	612:6:13821:13829	6199911	0	True				
ANR	6200148	PtrMemberAccess	it -> bytes		6199911	0					
ANR	6200149	Identifier	it		6199911	0					
ANR	6200150	Identifier	bytes		6199911	1					
ANR	6200151	CompoundStatement		41:17:756:756	6199911	1					
ANR	6200152	ExpressionStatement	free ( it -> bytes -> bytes )	613:3:13837:13860	6199911	0	True				
ANR	6200153	CallExpression	free ( it -> bytes -> bytes )		6199911	0					
ANR	6200154	Callee	free		6199911	0					
ANR	6200155	Identifier	free		6199911	0					
ANR	6200156	ArgumentList	it -> bytes -> bytes		6199911	1					
ANR	6200157	Argument	it -> bytes -> bytes		6199911	0					
ANR	6200158	PtrMemberAccess	it -> bytes -> bytes		6199911	0					
ANR	6200159	PtrMemberAccess	it -> bytes		6199911	0					
ANR	6200160	Identifier	it		6199911	0					
ANR	6200161	Identifier	bytes		6199911	1					
ANR	6200162	Identifier	bytes		6199911	1					
ANR	6200163	ExpressionStatement	free ( it -> bytes )	614:3:13865:13881	6199911	1	True				
ANR	6200164	CallExpression	free ( it -> bytes )		6199911	0					
ANR	6200165	Callee	free		6199911	0					
ANR	6200166	Identifier	free		6199911	0					
ANR	6200167	ArgumentList	it -> bytes		6199911	1					
ANR	6200168	Argument	it -> bytes		6199911	0					
ANR	6200169	PtrMemberAccess	it -> bytes		6199911	0					
ANR	6200170	Identifier	it		6199911	0					
ANR	6200171	Identifier	bytes		6199911	1					
ANR	6200172	ExpressionStatement	free ( it )	617:1:13891:13900	6199911	21	True				
ANR	6200173	CallExpression	free ( it )		6199911	0					
ANR	6200174	Callee	free		6199911	0					
ANR	6200175	Identifier	free		6199911	0					
ANR	6200176	ArgumentList	it		6199911	1					
ANR	6200177	Argument	it		6199911	0					
ANR	6200178	Identifier	it		6199911	0					
ANR	6200179	ReturnStatement	return false ;	618:1:13903:13915	6199911	22	True				
ANR	6200180	Identifier	false		6199911	0					
ANR	6200181	ReturnType	static bool		6199911	1					
ANR	6200182	Identifier	addBytes		6199911	2					
ANR	6200183	ParameterList	"RAnal * a , const char * name , ut64 size , const ut8 * bytes , const ut8 * mask"		6199911	3					
ANR	6200184	Parameter	RAnal * a	572:21:13001:13008	6199911	0	True				
ANR	6200185	ParameterType	RAnal *		6199911	0					
ANR	6200186	Identifier	a		6199911	1					
ANR	6200187	Parameter	const char * name	572:31:13011:13026	6199911	1	True				
ANR	6200188	ParameterType	const char *		6199911	0					
ANR	6200189	Identifier	name		6199911	1					
ANR	6200190	Parameter	ut64 size	572:49:13029:13037	6199911	2	True				
ANR	6200191	ParameterType	ut64		6199911	0					
ANR	6200192	Identifier	size		6199911	1					
ANR	6200193	Parameter	const ut8 * bytes	572:60:13040:13055	6199911	3	True				
ANR	6200194	ParameterType	const ut8 *		6199911	0					
ANR	6200195	Identifier	bytes		6199911	1					
ANR	6200196	Parameter	const ut8 * mask	572:78:13058:13072	6199911	4	True				
ANR	6200197	ParameterType	const ut8 *		6199911	0					
ANR	6200198	Identifier	mask		6199911	1					
ANR	6200199	CFGEntryNode	ENTRY		6199911		True				
ANR	6200200	CFGExitNode	EXIT		6199911		True				
ANR	6200201	Symbol	r_sign_item_new		6199911						
ANR	6200202	Symbol	& a -> zign_spaces		6199911						
ANR	6200203	Symbol	addItem		6199911						
ANR	6200204	Symbol	* * it		6199911						
ANR	6200205	Symbol	it -> bytes -> size		6199911						
ANR	6200206	Symbol	r_mem_is_zero		6199911						
ANR	6200207	Symbol	r_spaces_current		6199911						
ANR	6200208	Symbol	r_str_new		6199911						
ANR	6200209	Symbol	mask		6199911						
ANR	6200210	Symbol	a		6199911						
ANR	6200211	Symbol	malloc		6199911						
ANR	6200212	Symbol	it -> bytes		6199911						
ANR	6200213	Symbol	it -> name		6199911						
ANR	6200214	Symbol	false		6199911						
ANR	6200215	Symbol	it		6199911						
ANR	6200216	Symbol	retval		6199911						
ANR	6200217	Symbol	it -> space		6199911						
ANR	6200218	Symbol	R_NEW0		6199911						
ANR	6200219	Symbol	* it		6199911						
ANR	6200220	Symbol	it -> bytes -> bytes		6199911						
ANR	6200221	Symbol	size		6199911						
ANR	6200222	Symbol	bytes		6199911						
ANR	6200223	Symbol	name		6199911						
ANR	6200224	Symbol	true		6199911						
ANR	6200225	Symbol	* it -> bytes		6199911						
ANR	6200226	Symbol	it -> bytes -> mask		6199911						
ANR	6200227	Symbol	RSignBytes		6199911						
ANR	6200228	Function	r_sign_add_hash	621:0:13920:14399							
ANR	6200229	FunctionDef	"r_sign_add_hash (RAnal * a , const char * name , int type , const char * val , int len)"		6200228	0					
ANR	6200230	CompoundStatement		621:91:14011:14399	6200228	0					
ANR	6200231	ExpressionStatement	"r_return_val_if_fail ( a && name && type && val && len > 0 , false )"	622:1:14014:14079	6200228	0	True				
ANR	6200232	CallExpression	"r_return_val_if_fail ( a && name && type && val && len > 0 , false )"		6200228	0					
ANR	6200233	Callee	r_return_val_if_fail		6200228	0					
ANR	6200234	Identifier	r_return_val_if_fail		6200228	0					
ANR	6200235	ArgumentList	a && name && type && val && len > 0		6200228	1					
ANR	6200236	Argument	a && name && type && val && len > 0		6200228	0					
ANR	6200237	AndExpression	a && name && type && val && len > 0		6200228	0		&&			
ANR	6200238	Identifier	a		6200228	0					
ANR	6200239	AndExpression	name && type && val && len > 0		6200228	1		&&			
ANR	6200240	Identifier	name		6200228	0					
ANR	6200241	AndExpression	type && val && len > 0		6200228	1		&&			
ANR	6200242	Identifier	type		6200228	0					
ANR	6200243	AndExpression	val && len > 0		6200228	1		&&			
ANR	6200244	Identifier	val		6200228	0					
ANR	6200245	RelationalExpression	len > 0		6200228	1		>			
ANR	6200246	Identifier	len		6200228	0					
ANR	6200247	PrimaryExpression	0		6200228	1					
ANR	6200248	Argument	false		6200228	1					
ANR	6200249	Identifier	false		6200228	0					
ANR	6200250	IfStatement	if ( type != R_SIGN_BBHASH )		6200228	1					
ANR	6200251	Condition	type != R_SIGN_BBHASH	623:5:14086:14106	6200228	0	True				
ANR	6200252	EqualityExpression	type != R_SIGN_BBHASH		6200228	0		!=			
ANR	6200253	Identifier	type		6200228	0					
ANR	6200254	Identifier	R_SIGN_BBHASH		6200228	1					
ANR	6200255	CompoundStatement		3:28:97:97	6200228	1					
ANR	6200256	ExpressionStatement	"eprintf ( ""error: hash type unknown"" )"	624:2:14113:14149	6200228	0	True				
ANR	6200257	CallExpression	"eprintf ( ""error: hash type unknown"" )"		6200228	0					
ANR	6200258	Callee	eprintf		6200228	0					
ANR	6200259	Identifier	eprintf		6200228	0					
ANR	6200260	ArgumentList	"""error: hash type unknown"""		6200228	1					
ANR	6200261	Argument	"""error: hash type unknown"""		6200228	0					
ANR	6200262	PrimaryExpression	"""error: hash type unknown"""		6200228	0					
ANR	6200263	ReturnStatement	return false ;	625:2:14153:14165	6200228	1	True				
ANR	6200264	Identifier	false		6200228	0					
ANR	6200265	IdentifierDeclStatement	int digestsize = r_hash_size ( R_ZIGN_HASH ) * 2 ;	627:1:14171:14217	6200228	2	True				
ANR	6200266	IdentifierDecl	digestsize = r_hash_size ( R_ZIGN_HASH ) * 2		6200228	0					
ANR	6200267	IdentifierDeclType	int		6200228	0					
ANR	6200268	Identifier	digestsize		6200228	1					
ANR	6200269	AssignmentExpression	digestsize = r_hash_size ( R_ZIGN_HASH ) * 2		6200228	2		=			
ANR	6200270	Identifier	digestsize		6200228	0					
ANR	6200271	MultiplicativeExpression	r_hash_size ( R_ZIGN_HASH ) * 2		6200228	1		*			
ANR	6200272	CallExpression	r_hash_size ( R_ZIGN_HASH )		6200228	0					
ANR	6200273	Callee	r_hash_size		6200228	0					
ANR	6200274	Identifier	r_hash_size		6200228	0					
ANR	6200275	ArgumentList	R_ZIGN_HASH		6200228	1					
ANR	6200276	Argument	R_ZIGN_HASH		6200228	0					
ANR	6200277	Identifier	R_ZIGN_HASH		6200228	0					
ANR	6200278	PrimaryExpression	2		6200228	1					
ANR	6200279	IfStatement	if ( len != digestsize )		6200228	3					
ANR	6200280	Condition	len != digestsize	628:5:14224:14240	6200228	0	True				
ANR	6200281	EqualityExpression	len != digestsize		6200228	0		!=			
ANR	6200282	Identifier	len		6200228	0					
ANR	6200283	Identifier	digestsize		6200228	1					
ANR	6200284	CompoundStatement		8:24:231:231	6200228	1					
ANR	6200285	ExpressionStatement	"eprintf ( ""error: invalid hash size: %d (%s digest size is %d)\\n"" , len , ZIGN_HASH , digestsize )"	629:2:14247:14340	6200228	0	True				
ANR	6200286	CallExpression	"eprintf ( ""error: invalid hash size: %d (%s digest size is %d)\\n"" , len , ZIGN_HASH , digestsize )"		6200228	0					
ANR	6200287	Callee	eprintf		6200228	0					
ANR	6200288	Identifier	eprintf		6200228	0					
ANR	6200289	ArgumentList	"""error: invalid hash size: %d (%s digest size is %d)\\n"""		6200228	1					
ANR	6200290	Argument	"""error: invalid hash size: %d (%s digest size is %d)\\n"""		6200228	0					
ANR	6200291	PrimaryExpression	"""error: invalid hash size: %d (%s digest size is %d)\\n"""		6200228	0					
ANR	6200292	Argument	len		6200228	1					
ANR	6200293	Identifier	len		6200228	0					
ANR	6200294	Argument	ZIGN_HASH		6200228	2					
ANR	6200295	Identifier	ZIGN_HASH		6200228	0					
ANR	6200296	Argument	digestsize		6200228	3					
ANR	6200297	Identifier	digestsize		6200228	0					
ANR	6200298	ReturnStatement	return false ;	630:2:14344:14356	6200228	1	True				
ANR	6200299	Identifier	false		6200228	0					
ANR	6200300	ReturnStatement	"return addHash ( a , name , type , val ) ;"	632:1:14362:14397	6200228	4	True				
ANR	6200301	CallExpression	"addHash ( a , name , type , val )"		6200228	0					
ANR	6200302	Callee	addHash		6200228	0					
ANR	6200303	Identifier	addHash		6200228	0					
ANR	6200304	ArgumentList	a		6200228	1					
ANR	6200305	Argument	a		6200228	0					
ANR	6200306	Identifier	a		6200228	0					
ANR	6200307	Argument	name		6200228	1					
ANR	6200308	Identifier	name		6200228	0					
ANR	6200309	Argument	type		6200228	2					
ANR	6200310	Identifier	type		6200228	0					
ANR	6200311	Argument	val		6200228	3					
ANR	6200312	Identifier	val		6200228	0					
ANR	6200313	ReturnType	R_API bool		6200228	1					
ANR	6200314	Identifier	r_sign_add_hash		6200228	2					
ANR	6200315	ParameterList	"RAnal * a , const char * name , int type , const char * val , int len"		6200228	3					
ANR	6200316	Parameter	RAnal * a	621:27:13947:13954	6200228	0	True				
ANR	6200317	ParameterType	RAnal *		6200228	0					
ANR	6200318	Identifier	a		6200228	1					
ANR	6200319	Parameter	const char * name	621:37:13957:13972	6200228	1	True				
ANR	6200320	ParameterType	const char *		6200228	0					
ANR	6200321	Identifier	name		6200228	1					
ANR	6200322	Parameter	int type	621:55:13975:13982	6200228	2	True				
ANR	6200323	ParameterType	int		6200228	0					
ANR	6200324	Identifier	type		6200228	1					
ANR	6200325	Parameter	const char * val	621:65:13985:13999	6200228	3	True				
ANR	6200326	ParameterType	const char *		6200228	0					
ANR	6200327	Identifier	val		6200228	1					
ANR	6200328	Parameter	int len	621:82:14002:14008	6200228	4	True				
ANR	6200329	ParameterType	int		6200228	0					
ANR	6200330	Identifier	len		6200228	1					
ANR	6200331	CFGEntryNode	ENTRY		6200228		True				
ANR	6200332	CFGExitNode	EXIT		6200228		True				
ANR	6200333	Symbol	val		6200228						
ANR	6200334	Symbol	digestsize		6200228						
ANR	6200335	Symbol	a		6200228						
ANR	6200336	Symbol	ZIGN_HASH		6200228						
ANR	6200337	Symbol	len		6200228						
ANR	6200338	Symbol	R_SIGN_BBHASH		6200228						
ANR	6200339	Symbol	name		6200228						
ANR	6200340	Symbol	false		6200228						
ANR	6200341	Symbol	r_hash_size		6200228						
ANR	6200342	Symbol	addHash		6200228						
ANR	6200343	Symbol	type		6200228						
ANR	6200344	Symbol	R_ZIGN_HASH		6200228						
ANR	6200345	Function	r_sign_add_bb_hash	635:0:14402:14565							
ANR	6200346	FunctionDef	"r_sign_add_bb_hash (RAnal * a , RAnalFunction * fcn , const char * name)"		6200345	0					
ANR	6200347	CompoundStatement		635:78:14480:14565	6200345	0					
ANR	6200348	ExpressionStatement	"r_return_val_if_fail ( a && fcn && name , false )"	636:1:14483:14529	6200345	0	True				
ANR	6200349	CallExpression	"r_return_val_if_fail ( a && fcn && name , false )"		6200345	0					
ANR	6200350	Callee	r_return_val_if_fail		6200345	0					
ANR	6200351	Identifier	r_return_val_if_fail		6200345	0					
ANR	6200352	ArgumentList	a && fcn && name		6200345	1					
ANR	6200353	Argument	a && fcn && name		6200345	0					
ANR	6200354	AndExpression	a && fcn && name		6200345	0		&&			
ANR	6200355	Identifier	a		6200345	0					
ANR	6200356	AndExpression	fcn && name		6200345	1		&&			
ANR	6200357	Identifier	fcn		6200345	0					
ANR	6200358	Identifier	name		6200345	1					
ANR	6200359	Argument	false		6200345	1					
ANR	6200360	Identifier	false		6200345	0					
ANR	6200361	ReturnStatement	"return addBBHash ( a , fcn , name ) ;"	637:1:14532:14563	6200345	1	True				
ANR	6200362	CallExpression	"addBBHash ( a , fcn , name )"		6200345	0					
ANR	6200363	Callee	addBBHash		6200345	0					
ANR	6200364	Identifier	addBBHash		6200345	0					
ANR	6200365	ArgumentList	a		6200345	1					
ANR	6200366	Argument	a		6200345	0					
ANR	6200367	Identifier	a		6200345	0					
ANR	6200368	Argument	fcn		6200345	1					
ANR	6200369	Identifier	fcn		6200345	0					
ANR	6200370	Argument	name		6200345	2					
ANR	6200371	Identifier	name		6200345	0					
ANR	6200372	ReturnType	R_API bool		6200345	1					
ANR	6200373	Identifier	r_sign_add_bb_hash		6200345	2					
ANR	6200374	ParameterList	"RAnal * a , RAnalFunction * fcn , const char * name"		6200345	3					
ANR	6200375	Parameter	RAnal * a	635:30:14432:14439	6200345	0	True				
ANR	6200376	ParameterType	RAnal *		6200345	0					
ANR	6200377	Identifier	a		6200345	1					
ANR	6200378	Parameter	RAnalFunction * fcn	635:40:14442:14459	6200345	1	True				
ANR	6200379	ParameterType	RAnalFunction *		6200345	0					
ANR	6200380	Identifier	fcn		6200345	1					
ANR	6200381	Parameter	const char * name	635:60:14462:14477	6200345	2	True				
ANR	6200382	ParameterType	const char *		6200345	0					
ANR	6200383	Identifier	name		6200345	1					
ANR	6200384	CFGEntryNode	ENTRY		6200345		True				
ANR	6200385	CFGExitNode	EXIT		6200345		True				
ANR	6200386	Symbol	fcn		6200345						
ANR	6200387	Symbol	a		6200345						
ANR	6200388	Symbol	name		6200345						
ANR	6200389	Symbol	false		6200345						
ANR	6200390	Symbol	addBBHash		6200345						
ANR	6200391	Function	r_sign_add_bytes	640:0:14568:14790							
ANR	6200392	FunctionDef	"r_sign_add_bytes (RAnal * a , const char * name , ut64 size , const ut8 * bytes , const ut8 * mask)"		6200391	0					
ANR	6200393	CompoundStatement		640:102:14670:14790	6200391	0					
ANR	6200394	ExpressionStatement	"r_return_val_if_fail ( a && name && size > 0 && bytes && mask , false )"	641:1:14673:14741	6200391	0	True				
ANR	6200395	CallExpression	"r_return_val_if_fail ( a && name && size > 0 && bytes && mask , false )"		6200391	0					
ANR	6200396	Callee	r_return_val_if_fail		6200391	0					
ANR	6200397	Identifier	r_return_val_if_fail		6200391	0					
ANR	6200398	ArgumentList	a && name && size > 0 && bytes && mask		6200391	1					
ANR	6200399	Argument	a && name && size > 0 && bytes && mask		6200391	0					
ANR	6200400	AndExpression	a && name && size > 0 && bytes && mask		6200391	0		&&			
ANR	6200401	Identifier	a		6200391	0					
ANR	6200402	AndExpression	name && size > 0 && bytes && mask		6200391	1		&&			
ANR	6200403	Identifier	name		6200391	0					
ANR	6200404	AndExpression	size > 0 && bytes && mask		6200391	1		&&			
ANR	6200405	RelationalExpression	size > 0		6200391	0		>			
ANR	6200406	Identifier	size		6200391	0					
ANR	6200407	PrimaryExpression	0		6200391	1					
ANR	6200408	AndExpression	bytes && mask		6200391	1		&&			
ANR	6200409	Identifier	bytes		6200391	0					
ANR	6200410	Identifier	mask		6200391	1					
ANR	6200411	Argument	false		6200391	1					
ANR	6200412	Identifier	false		6200391	0					
ANR	6200413	ReturnStatement	"return addBytes ( a , name , size , bytes , mask ) ;"	642:1:14744:14788	6200391	1	True				
ANR	6200414	CallExpression	"addBytes ( a , name , size , bytes , mask )"		6200391	0					
ANR	6200415	Callee	addBytes		6200391	0					
ANR	6200416	Identifier	addBytes		6200391	0					
ANR	6200417	ArgumentList	a		6200391	1					
ANR	6200418	Argument	a		6200391	0					
ANR	6200419	Identifier	a		6200391	0					
ANR	6200420	Argument	name		6200391	1					
ANR	6200421	Identifier	name		6200391	0					
ANR	6200422	Argument	size		6200391	2					
ANR	6200423	Identifier	size		6200391	0					
ANR	6200424	Argument	bytes		6200391	3					
ANR	6200425	Identifier	bytes		6200391	0					
ANR	6200426	Argument	mask		6200391	4					
ANR	6200427	Identifier	mask		6200391	0					
ANR	6200428	ReturnType	R_API bool		6200391	1					
ANR	6200429	Identifier	r_sign_add_bytes		6200391	2					
ANR	6200430	ParameterList	"RAnal * a , const char * name , ut64 size , const ut8 * bytes , const ut8 * mask"		6200391	3					
ANR	6200431	Parameter	RAnal * a	640:28:14596:14603	6200391	0	True				
ANR	6200432	ParameterType	RAnal *		6200391	0					
ANR	6200433	Identifier	a		6200391	1					
ANR	6200434	Parameter	const char * name	640:38:14606:14621	6200391	1	True				
ANR	6200435	ParameterType	const char *		6200391	0					
ANR	6200436	Identifier	name		6200391	1					
ANR	6200437	Parameter	ut64 size	640:56:14624:14632	6200391	2	True				
ANR	6200438	ParameterType	ut64		6200391	0					
ANR	6200439	Identifier	size		6200391	1					
ANR	6200440	Parameter	const ut8 * bytes	640:67:14635:14650	6200391	3	True				
ANR	6200441	ParameterType	const ut8 *		6200391	0					
ANR	6200442	Identifier	bytes		6200391	1					
ANR	6200443	Parameter	const ut8 * mask	640:85:14653:14667	6200391	4	True				
ANR	6200444	ParameterType	const ut8 *		6200391	0					
ANR	6200445	Identifier	mask		6200391	1					
ANR	6200446	CFGEntryNode	ENTRY		6200391		True				
ANR	6200447	CFGExitNode	EXIT		6200391		True				
ANR	6200448	Symbol	a		6200391						
ANR	6200449	Symbol	size		6200391						
ANR	6200450	Symbol	bytes		6200391						
ANR	6200451	Symbol	name		6200391						
ANR	6200452	Symbol	false		6200391						
ANR	6200453	Symbol	addBytes		6200391						
ANR	6200454	Symbol	mask		6200391						
ANR	6200455	Function	r_sign_add_anal	645:0:14793:15117							
ANR	6200456	FunctionDef	"r_sign_add_anal (RAnal * a , const char * name , ut64 size , const ut8 * bytes , ut64 at)"		6200455	0					
ANR	6200457	CompoundStatement		645:93:14886:15117	6200455	0					
ANR	6200458	IdentifierDeclStatement	bool retval = false ;	646:1:14889:14908	6200455	0	True				
ANR	6200459	IdentifierDecl	retval = false		6200455	0					
ANR	6200460	IdentifierDeclType	bool		6200455	0					
ANR	6200461	Identifier	retval		6200455	1					
ANR	6200462	AssignmentExpression	retval = false		6200455	2		=			
ANR	6200463	Identifier	false		6200455	0					
ANR	6200464	Identifier	false		6200455	1					
ANR	6200465	ExpressionStatement	"r_return_val_if_fail ( a && name && size > 0 && bytes , false )"	647:1:14911:14971	6200455	1	True				
ANR	6200466	CallExpression	"r_return_val_if_fail ( a && name && size > 0 && bytes , false )"		6200455	0					
ANR	6200467	Callee	r_return_val_if_fail		6200455	0					
ANR	6200468	Identifier	r_return_val_if_fail		6200455	0					
ANR	6200469	ArgumentList	a && name && size > 0 && bytes		6200455	1					
ANR	6200470	Argument	a && name && size > 0 && bytes		6200455	0					
ANR	6200471	AndExpression	a && name && size > 0 && bytes		6200455	0		&&			
ANR	6200472	Identifier	a		6200455	0					
ANR	6200473	AndExpression	name && size > 0 && bytes		6200455	1		&&			
ANR	6200474	Identifier	name		6200455	0					
ANR	6200475	AndExpression	size > 0 && bytes		6200455	1		&&			
ANR	6200476	RelationalExpression	size > 0		6200455	0		>			
ANR	6200477	Identifier	size		6200455	0					
ANR	6200478	PrimaryExpression	0		6200455	1					
ANR	6200479	Identifier	bytes		6200455	1					
ANR	6200480	Argument	false		6200455	1					
ANR	6200481	Identifier	false		6200455	0					
ANR	6200482	IdentifierDeclStatement	"ut8 * mask = r_anal_mask ( a , size , bytes , at ) ;"	648:1:14974:15018	6200455	2	True				
ANR	6200483	IdentifierDecl	"* mask = r_anal_mask ( a , size , bytes , at )"		6200455	0					
ANR	6200484	IdentifierDeclType	ut8 *		6200455	0					
ANR	6200485	Identifier	mask		6200455	1					
ANR	6200486	AssignmentExpression	"* mask = r_anal_mask ( a , size , bytes , at )"		6200455	2		=			
ANR	6200487	Identifier	mask		6200455	0					
ANR	6200488	CallExpression	"r_anal_mask ( a , size , bytes , at )"		6200455	1					
ANR	6200489	Callee	r_anal_mask		6200455	0					
ANR	6200490	Identifier	r_anal_mask		6200455	0					
ANR	6200491	ArgumentList	a		6200455	1					
ANR	6200492	Argument	a		6200455	0					
ANR	6200493	Identifier	a		6200455	0					
ANR	6200494	Argument	size		6200455	1					
ANR	6200495	Identifier	size		6200455	0					
ANR	6200496	Argument	bytes		6200455	2					
ANR	6200497	Identifier	bytes		6200455	0					
ANR	6200498	Argument	at		6200455	3					
ANR	6200499	Identifier	at		6200455	0					
ANR	6200500	IfStatement	if ( mask )		6200455	3					
ANR	6200501	Condition	mask	649:5:15025:15028	6200455	0	True				
ANR	6200502	Identifier	mask		6200455	0					
ANR	6200503	CompoundStatement		5:11:144:144	6200455	1					
ANR	6200504	ExpressionStatement	"retval = addBytes ( a , name , size , bytes , mask )"	650:2:15035:15081	6200455	0	True				
ANR	6200505	AssignmentExpression	"retval = addBytes ( a , name , size , bytes , mask )"		6200455	0		=			
ANR	6200506	Identifier	retval		6200455	0					
ANR	6200507	CallExpression	"addBytes ( a , name , size , bytes , mask )"		6200455	1					
ANR	6200508	Callee	addBytes		6200455	0					
ANR	6200509	Identifier	addBytes		6200455	0					
ANR	6200510	ArgumentList	a		6200455	1					
ANR	6200511	Argument	a		6200455	0					
ANR	6200512	Identifier	a		6200455	0					
ANR	6200513	Argument	name		6200455	1					
ANR	6200514	Identifier	name		6200455	0					
ANR	6200515	Argument	size		6200455	2					
ANR	6200516	Identifier	size		6200455	0					
ANR	6200517	Argument	bytes		6200455	3					
ANR	6200518	Identifier	bytes		6200455	0					
ANR	6200519	Argument	mask		6200455	4					
ANR	6200520	Identifier	mask		6200455	0					
ANR	6200521	ExpressionStatement	free ( mask )	651:2:15085:15096	6200455	1	True				
ANR	6200522	CallExpression	free ( mask )		6200455	0					
ANR	6200523	Callee	free		6200455	0					
ANR	6200524	Identifier	free		6200455	0					
ANR	6200525	ArgumentList	mask		6200455	1					
ANR	6200526	Argument	mask		6200455	0					
ANR	6200527	Identifier	mask		6200455	0					
ANR	6200528	ReturnStatement	return retval ;	653:1:15102:15115	6200455	4	True				
ANR	6200529	Identifier	retval		6200455	0					
ANR	6200530	ReturnType	R_API bool		6200455	1					
ANR	6200531	Identifier	r_sign_add_anal		6200455	2					
ANR	6200532	ParameterList	"RAnal * a , const char * name , ut64 size , const ut8 * bytes , ut64 at"		6200455	3					
ANR	6200533	Parameter	RAnal * a	645:27:14820:14827	6200455	0	True				
ANR	6200534	ParameterType	RAnal *		6200455	0					
ANR	6200535	Identifier	a		6200455	1					
ANR	6200536	Parameter	const char * name	645:37:14830:14845	6200455	1	True				
ANR	6200537	ParameterType	const char *		6200455	0					
ANR	6200538	Identifier	name		6200455	1					
ANR	6200539	Parameter	ut64 size	645:55:14848:14856	6200455	2	True				
ANR	6200540	ParameterType	ut64		6200455	0					
ANR	6200541	Identifier	size		6200455	1					
ANR	6200542	Parameter	const ut8 * bytes	645:66:14859:14874	6200455	3	True				
ANR	6200543	ParameterType	const ut8 *		6200455	0					
ANR	6200544	Identifier	bytes		6200455	1					
ANR	6200545	Parameter	ut64 at	645:84:14877:14883	6200455	4	True				
ANR	6200546	ParameterType	ut64		6200455	0					
ANR	6200547	Identifier	at		6200455	1					
ANR	6200548	CFGEntryNode	ENTRY		6200455		True				
ANR	6200549	CFGExitNode	EXIT		6200455		True				
ANR	6200550	Symbol	a		6200455						
ANR	6200551	Symbol	at		6200455						
ANR	6200552	Symbol	size		6200455						
ANR	6200553	Symbol	bytes		6200455						
ANR	6200554	Symbol	name		6200455						
ANR	6200555	Symbol	false		6200455						
ANR	6200556	Symbol	addBytes		6200455						
ANR	6200557	Symbol	r_anal_mask		6200455						
ANR	6200558	Symbol	retval		6200455						
ANR	6200559	Symbol	mask		6200455						
ANR	6200560	Function	r_sign_add_graph	656:0:15120:15646							
ANR	6200561	FunctionDef	"r_sign_add_graph (RAnal * a , const char * name , RSignGraph graph)"		6200560	0					
ANR	6200562	CompoundStatement		656:74:15194:15646	6200560	0					
ANR	6200563	IdentifierDeclStatement	bool retval = true ;	657:1:15197:15215	6200560	0	True				
ANR	6200564	IdentifierDecl	retval = true		6200560	0					
ANR	6200565	IdentifierDeclType	bool		6200560	0					
ANR	6200566	Identifier	retval		6200560	1					
ANR	6200567	AssignmentExpression	retval = true		6200560	2		=			
ANR	6200568	Identifier	true		6200560	0					
ANR	6200569	Identifier	true		6200560	1					
ANR	6200570	IfStatement	if ( ! a || ! name )		6200560	1					
ANR	6200571	Condition	! a || ! name	658:5:15222:15232	6200560	0	True				
ANR	6200572	OrExpression	! a || ! name		6200560	0		||			
ANR	6200573	UnaryOperationExpression	! a		6200560	0					
ANR	6200574	UnaryOperator	!		6200560	0					
ANR	6200575	Identifier	a		6200560	1					
ANR	6200576	UnaryOperationExpression	! name		6200560	1					
ANR	6200577	UnaryOperator	!		6200560	0					
ANR	6200578	Identifier	name		6200560	1					
ANR	6200579	CompoundStatement		3:18:40:40	6200560	1					
ANR	6200580	ReturnStatement	return false ;	659:2:15239:15251	6200560	0	True				
ANR	6200581	Identifier	false		6200560	0					
ANR	6200582	IdentifierDeclStatement	RSignItem * it = r_sign_item_new ( ) ;	661:1:15257:15291	6200560	2	True				
ANR	6200583	IdentifierDecl	* it = r_sign_item_new ( )		6200560	0					
ANR	6200584	IdentifierDeclType	RSignItem *		6200560	0					
ANR	6200585	Identifier	it		6200560	1					
ANR	6200586	AssignmentExpression	* it = r_sign_item_new ( )		6200560	2		=			
ANR	6200587	Identifier	it		6200560	0					
ANR	6200588	CallExpression	r_sign_item_new ( )		6200560	1					
ANR	6200589	Callee	r_sign_item_new		6200560	0					
ANR	6200590	Identifier	r_sign_item_new		6200560	0					
ANR	6200591	ArgumentList			6200560	1					
ANR	6200592	IfStatement	if ( ! it )		6200560	3					
ANR	6200593	Condition	! it	662:5:15298:15300	6200560	0	True				
ANR	6200594	UnaryOperationExpression	! it		6200560	0					
ANR	6200595	UnaryOperator	!		6200560	0					
ANR	6200596	Identifier	it		6200560	1					
ANR	6200597	CompoundStatement		7:10:108:108	6200560	1					
ANR	6200598	ReturnStatement	return false ;	663:2:15307:15319	6200560	0	True				
ANR	6200599	Identifier	false		6200560	0					
ANR	6200600	ExpressionStatement	it -> name = r_str_new ( name )	665:1:15325:15352	6200560	4	True				
ANR	6200601	AssignmentExpression	it -> name = r_str_new ( name )		6200560	0		=			
ANR	6200602	PtrMemberAccess	it -> name		6200560	0					
ANR	6200603	Identifier	it		6200560	0					
ANR	6200604	Identifier	name		6200560	1					
ANR	6200605	CallExpression	r_str_new ( name )		6200560	1					
ANR	6200606	Callee	r_str_new		6200560	0					
ANR	6200607	Identifier	r_str_new		6200560	0					
ANR	6200608	ArgumentList	name		6200560	1					
ANR	6200609	Argument	name		6200560	0					
ANR	6200610	Identifier	name		6200560	0					
ANR	6200611	IfStatement	if ( ! it -> name )		6200560	5					
ANR	6200612	Condition	! it -> name	666:5:15359:15367	6200560	0	True				
ANR	6200613	UnaryOperationExpression	! it -> name		6200560	0					
ANR	6200614	UnaryOperator	!		6200560	0					
ANR	6200615	PtrMemberAccess	it -> name		6200560	1					
ANR	6200616	Identifier	it		6200560	0					
ANR	6200617	Identifier	name		6200560	1					
ANR	6200618	CompoundStatement		11:16:175:175	6200560	1					
ANR	6200619	ExpressionStatement	free ( it )	667:2:15374:15383	6200560	0	True				
ANR	6200620	CallExpression	free ( it )		6200560	0					
ANR	6200621	Callee	free		6200560	0					
ANR	6200622	Identifier	free		6200560	0					
ANR	6200623	ArgumentList	it		6200560	1					
ANR	6200624	Argument	it		6200560	0					
ANR	6200625	Identifier	it		6200560	0					
ANR	6200626	ReturnStatement	return false ;	668:2:15387:15399	6200560	1	True				
ANR	6200627	Identifier	false		6200560	0					
ANR	6200628	ExpressionStatement	it -> space = r_spaces_current ( & a -> zign_spaces )	670:1:15405:15451	6200560	6	True				
ANR	6200629	AssignmentExpression	it -> space = r_spaces_current ( & a -> zign_spaces )		6200560	0		=			
ANR	6200630	PtrMemberAccess	it -> space		6200560	0					
ANR	6200631	Identifier	it		6200560	0					
ANR	6200632	Identifier	space		6200560	1					
ANR	6200633	CallExpression	r_spaces_current ( & a -> zign_spaces )		6200560	1					
ANR	6200634	Callee	r_spaces_current		6200560	0					
ANR	6200635	Identifier	r_spaces_current		6200560	0					
ANR	6200636	ArgumentList	& a -> zign_spaces		6200560	1					
ANR	6200637	Argument	& a -> zign_spaces		6200560	0					
ANR	6200638	UnaryOperationExpression	& a -> zign_spaces		6200560	0					
ANR	6200639	UnaryOperator	&		6200560	0					
ANR	6200640	PtrMemberAccess	a -> zign_spaces		6200560	1					
ANR	6200641	Identifier	a		6200560	0					
ANR	6200642	Identifier	zign_spaces		6200560	1					
ANR	6200643	ExpressionStatement	it -> graph = R_NEW0 ( RSignGraph )	671:1:15454:15485	6200560	7	True				
ANR	6200644	AssignmentExpression	it -> graph = R_NEW0 ( RSignGraph )		6200560	0		=			
ANR	6200645	PtrMemberAccess	it -> graph		6200560	0					
ANR	6200646	Identifier	it		6200560	0					
ANR	6200647	Identifier	graph		6200560	1					
ANR	6200648	CallExpression	R_NEW0 ( RSignGraph )		6200560	1					
ANR	6200649	Callee	R_NEW0		6200560	0					
ANR	6200650	Identifier	R_NEW0		6200560	0					
ANR	6200651	ArgumentList	RSignGraph		6200560	1					
ANR	6200652	Argument	RSignGraph		6200560	0					
ANR	6200653	Identifier	RSignGraph		6200560	0					
ANR	6200654	IfStatement	if ( ! it -> graph )		6200560	8					
ANR	6200655	Condition	! it -> graph	672:5:15492:15501	6200560	0	True				
ANR	6200656	UnaryOperationExpression	! it -> graph		6200560	0					
ANR	6200657	UnaryOperator	!		6200560	0					
ANR	6200658	PtrMemberAccess	it -> graph		6200560	1					
ANR	6200659	Identifier	it		6200560	0					
ANR	6200660	Identifier	graph		6200560	1					
ANR	6200661	CompoundStatement		17:17:309:309	6200560	1					
ANR	6200662	ExpressionStatement	free ( it -> name )	673:2:15508:15523	6200560	0	True				
ANR	6200663	CallExpression	free ( it -> name )		6200560	0					
ANR	6200664	Callee	free		6200560	0					
ANR	6200665	Identifier	free		6200560	0					
ANR	6200666	ArgumentList	it -> name		6200560	1					
ANR	6200667	Argument	it -> name		6200560	0					
ANR	6200668	PtrMemberAccess	it -> name		6200560	0					
ANR	6200669	Identifier	it		6200560	0					
ANR	6200670	Identifier	name		6200560	1					
ANR	6200671	ExpressionStatement	free ( it )	674:2:15527:15536	6200560	1	True				
ANR	6200672	CallExpression	free ( it )		6200560	0					
ANR	6200673	Callee	free		6200560	0					
ANR	6200674	Identifier	free		6200560	0					
ANR	6200675	ArgumentList	it		6200560	1					
ANR	6200676	Argument	it		6200560	0					
ANR	6200677	Identifier	it		6200560	0					
ANR	6200678	ReturnStatement	return false ;	675:2:15540:15552	6200560	2	True				
ANR	6200679	Identifier	false		6200560	0					
ANR	6200680	ExpressionStatement	* it -> graph = graph	677:1:15558:15576	6200560	9	True				
ANR	6200681	AssignmentExpression	* it -> graph = graph		6200560	0		=			
ANR	6200682	UnaryOperationExpression	* it -> graph		6200560	0					
ANR	6200683	UnaryOperator	*		6200560	0					
ANR	6200684	PtrMemberAccess	it -> graph		6200560	1					
ANR	6200685	Identifier	it		6200560	0					
ANR	6200686	Identifier	graph		6200560	1					
ANR	6200687	Identifier	graph		6200560	1					
ANR	6200688	ExpressionStatement	"retval = addItem ( a , it )"	678:1:15579:15603	6200560	10	True				
ANR	6200689	AssignmentExpression	"retval = addItem ( a , it )"		6200560	0		=			
ANR	6200690	Identifier	retval		6200560	0					
ANR	6200691	CallExpression	"addItem ( a , it )"		6200560	1					
ANR	6200692	Callee	addItem		6200560	0					
ANR	6200693	Identifier	addItem		6200560	0					
ANR	6200694	ArgumentList	a		6200560	1					
ANR	6200695	Argument	a		6200560	0					
ANR	6200696	Identifier	a		6200560	0					
ANR	6200697	Argument	it		6200560	1					
ANR	6200698	Identifier	it		6200560	0					
ANR	6200699	ExpressionStatement	r_sign_item_free ( it )	679:1:15606:15627	6200560	11	True				
ANR	6200700	CallExpression	r_sign_item_free ( it )		6200560	0					
ANR	6200701	Callee	r_sign_item_free		6200560	0					
ANR	6200702	Identifier	r_sign_item_free		6200560	0					
ANR	6200703	ArgumentList	it		6200560	1					
ANR	6200704	Argument	it		6200560	0					
ANR	6200705	Identifier	it		6200560	0					
ANR	6200706	ReturnStatement	return retval ;	681:1:15631:15644	6200560	12	True				
ANR	6200707	Identifier	retval		6200560	0					
ANR	6200708	ReturnType	R_API bool		6200560	1					
ANR	6200709	Identifier	r_sign_add_graph		6200560	2					
ANR	6200710	ParameterList	"RAnal * a , const char * name , RSignGraph graph"		6200560	3					
ANR	6200711	Parameter	RAnal * a	656:28:15148:15155	6200560	0	True				
ANR	6200712	ParameterType	RAnal *		6200560	0					
ANR	6200713	Identifier	a		6200560	1					
ANR	6200714	Parameter	const char * name	656:38:15158:15173	6200560	1	True				
ANR	6200715	ParameterType	const char *		6200560	0					
ANR	6200716	Identifier	name		6200560	1					
ANR	6200717	Parameter	RSignGraph graph	656:56:15176:15191	6200560	2	True				
ANR	6200718	ParameterType	RSignGraph		6200560	0					
ANR	6200719	Identifier	graph		6200560	1					
ANR	6200720	CFGEntryNode	ENTRY		6200560		True				
ANR	6200721	CFGExitNode	EXIT		6200560		True				
ANR	6200722	Symbol	a		6200560						
ANR	6200723	Symbol	r_sign_item_new		6200560						
ANR	6200724	Symbol	it -> graph		6200560						
ANR	6200725	Symbol	it -> name		6200560						
ANR	6200726	Symbol	false		6200560						
ANR	6200727	Symbol	it		6200560						
ANR	6200728	Symbol	graph		6200560						
ANR	6200729	Symbol	retval		6200560						
ANR	6200730	Symbol	& a -> zign_spaces		6200560						
ANR	6200731	Symbol	it -> space		6200560						
ANR	6200732	Symbol	R_NEW0		6200560						
ANR	6200733	Symbol	addItem		6200560						
ANR	6200734	Symbol	* it		6200560						
ANR	6200735	Symbol	* * it		6200560						
ANR	6200736	Symbol	* it -> graph		6200560						
ANR	6200737	Symbol	name		6200560						
ANR	6200738	Symbol	true		6200560						
ANR	6200739	Symbol	RSignGraph		6200560						
ANR	6200740	Symbol	r_spaces_current		6200560						
ANR	6200741	Symbol	r_str_new		6200560						
ANR	6200742	Function	r_sign_add_comment	684:0:15649:16036							
ANR	6200743	FunctionDef	"r_sign_add_comment (RAnal * a , const char * name , const char * comment)"		6200742	0					
ANR	6200744	CompoundStatement		684:79:15728:16036	6200742	0					
ANR	6200745	ExpressionStatement	"r_return_val_if_fail ( a && name && comment , false )"	685:1:15731:15781	6200742	0	True				
ANR	6200746	CallExpression	"r_return_val_if_fail ( a && name && comment , false )"		6200742	0					
ANR	6200747	Callee	r_return_val_if_fail		6200742	0					
ANR	6200748	Identifier	r_return_val_if_fail		6200742	0					
ANR	6200749	ArgumentList	a && name && comment		6200742	1					
ANR	6200750	Argument	a && name && comment		6200742	0					
ANR	6200751	AndExpression	a && name && comment		6200742	0		&&			
ANR	6200752	Identifier	a		6200742	0					
ANR	6200753	AndExpression	name && comment		6200742	1		&&			
ANR	6200754	Identifier	name		6200742	0					
ANR	6200755	Identifier	comment		6200742	1					
ANR	6200756	Argument	false		6200742	1					
ANR	6200757	Identifier	false		6200742	0					
ANR	6200758	IdentifierDeclStatement	RSignItem * it = r_sign_item_new ( ) ;	687:1:15785:15819	6200742	1	True				
ANR	6200759	IdentifierDecl	* it = r_sign_item_new ( )		6200742	0					
ANR	6200760	IdentifierDeclType	RSignItem *		6200742	0					
ANR	6200761	Identifier	it		6200742	1					
ANR	6200762	AssignmentExpression	* it = r_sign_item_new ( )		6200742	2		=			
ANR	6200763	Identifier	it		6200742	0					
ANR	6200764	CallExpression	r_sign_item_new ( )		6200742	1					
ANR	6200765	Callee	r_sign_item_new		6200742	0					
ANR	6200766	Identifier	r_sign_item_new		6200742	0					
ANR	6200767	ArgumentList			6200742	1					
ANR	6200768	IfStatement	if ( ! it )		6200742	2					
ANR	6200769	Condition	! it	688:5:15826:15828	6200742	0	True				
ANR	6200770	UnaryOperationExpression	! it		6200742	0					
ANR	6200771	UnaryOperator	!		6200742	0					
ANR	6200772	Identifier	it		6200742	1					
ANR	6200773	CompoundStatement		5:10:102:102	6200742	1					
ANR	6200774	ReturnStatement	return false ;	689:2:15835:15847	6200742	0	True				
ANR	6200775	Identifier	false		6200742	0					
ANR	6200776	ExpressionStatement	it -> name = r_str_new ( name )	691:1:15853:15880	6200742	3	True				
ANR	6200777	AssignmentExpression	it -> name = r_str_new ( name )		6200742	0		=			
ANR	6200778	PtrMemberAccess	it -> name		6200742	0					
ANR	6200779	Identifier	it		6200742	0					
ANR	6200780	Identifier	name		6200742	1					
ANR	6200781	CallExpression	r_str_new ( name )		6200742	1					
ANR	6200782	Callee	r_str_new		6200742	0					
ANR	6200783	Identifier	r_str_new		6200742	0					
ANR	6200784	ArgumentList	name		6200742	1					
ANR	6200785	Argument	name		6200742	0					
ANR	6200786	Identifier	name		6200742	0					
ANR	6200787	ExpressionStatement	it -> space = r_spaces_current ( & a -> zign_spaces )	692:1:15883:15929	6200742	4	True				
ANR	6200788	AssignmentExpression	it -> space = r_spaces_current ( & a -> zign_spaces )		6200742	0		=			
ANR	6200789	PtrMemberAccess	it -> space		6200742	0					
ANR	6200790	Identifier	it		6200742	0					
ANR	6200791	Identifier	space		6200742	1					
ANR	6200792	CallExpression	r_spaces_current ( & a -> zign_spaces )		6200742	1					
ANR	6200793	Callee	r_spaces_current		6200742	0					
ANR	6200794	Identifier	r_spaces_current		6200742	0					
ANR	6200795	ArgumentList	& a -> zign_spaces		6200742	1					
ANR	6200796	Argument	& a -> zign_spaces		6200742	0					
ANR	6200797	UnaryOperationExpression	& a -> zign_spaces		6200742	0					
ANR	6200798	UnaryOperator	&		6200742	0					
ANR	6200799	PtrMemberAccess	a -> zign_spaces		6200742	1					
ANR	6200800	Identifier	a		6200742	0					
ANR	6200801	Identifier	zign_spaces		6200742	1					
ANR	6200802	ExpressionStatement	it -> comment = strdup ( comment )	693:1:15932:15962	6200742	5	True				
ANR	6200803	AssignmentExpression	it -> comment = strdup ( comment )		6200742	0		=			
ANR	6200804	PtrMemberAccess	it -> comment		6200742	0					
ANR	6200805	Identifier	it		6200742	0					
ANR	6200806	Identifier	comment		6200742	1					
ANR	6200807	CallExpression	strdup ( comment )		6200742	1					
ANR	6200808	Callee	strdup		6200742	0					
ANR	6200809	Identifier	strdup		6200742	0					
ANR	6200810	ArgumentList	comment		6200742	1					
ANR	6200811	Argument	comment		6200742	0					
ANR	6200812	Identifier	comment		6200742	0					
ANR	6200813	IdentifierDeclStatement	"bool retval = addItem ( a , it ) ;"	694:1:15965:15994	6200742	6	True				
ANR	6200814	IdentifierDecl	"retval = addItem ( a , it )"		6200742	0					
ANR	6200815	IdentifierDeclType	bool		6200742	0					
ANR	6200816	Identifier	retval		6200742	1					
ANR	6200817	AssignmentExpression	"retval = addItem ( a , it )"		6200742	2		=			
ANR	6200818	Identifier	retval		6200742	0					
ANR	6200819	CallExpression	"addItem ( a , it )"		6200742	1					
ANR	6200820	Callee	addItem		6200742	0					
ANR	6200821	Identifier	addItem		6200742	0					
ANR	6200822	ArgumentList	a		6200742	1					
ANR	6200823	Argument	a		6200742	0					
ANR	6200824	Identifier	a		6200742	0					
ANR	6200825	Argument	it		6200742	1					
ANR	6200826	Identifier	it		6200742	0					
ANR	6200827	ExpressionStatement	r_sign_item_free ( it )	695:1:15997:16018	6200742	7	True				
ANR	6200828	CallExpression	r_sign_item_free ( it )		6200742	0					
ANR	6200829	Callee	r_sign_item_free		6200742	0					
ANR	6200830	Identifier	r_sign_item_free		6200742	0					
ANR	6200831	ArgumentList	it		6200742	1					
ANR	6200832	Argument	it		6200742	0					
ANR	6200833	Identifier	it		6200742	0					
ANR	6200834	ReturnStatement	return retval ;	696:1:16021:16034	6200742	8	True				
ANR	6200835	Identifier	retval		6200742	0					
ANR	6200836	ReturnType	R_API bool		6200742	1					
ANR	6200837	Identifier	r_sign_add_comment		6200742	2					
ANR	6200838	ParameterList	"RAnal * a , const char * name , const char * comment"		6200742	3					
ANR	6200839	Parameter	RAnal * a	684:30:15679:15686	6200742	0	True				
ANR	6200840	ParameterType	RAnal *		6200742	0					
ANR	6200841	Identifier	a		6200742	1					
ANR	6200842	Parameter	const char * name	684:40:15689:15704	6200742	1	True				
ANR	6200843	ParameterType	const char *		6200742	0					
ANR	6200844	Identifier	name		6200742	1					
ANR	6200845	Parameter	const char * comment	684:58:15707:15725	6200742	2	True				
ANR	6200846	ParameterType	const char *		6200742	0					
ANR	6200847	Identifier	comment		6200742	1					
ANR	6200848	CFGEntryNode	ENTRY		6200742		True				
ANR	6200849	CFGExitNode	EXIT		6200742		True				
ANR	6200850	Symbol	a		6200742						
ANR	6200851	Symbol	r_sign_item_new		6200742						
ANR	6200852	Symbol	it -> name		6200742						
ANR	6200853	Symbol	false		6200742						
ANR	6200854	Symbol	it		6200742						
ANR	6200855	Symbol	& a -> zign_spaces		6200742						
ANR	6200856	Symbol	retval		6200742						
ANR	6200857	Symbol	it -> space		6200742						
ANR	6200858	Symbol	addItem		6200742						
ANR	6200859	Symbol	* it		6200742						
ANR	6200860	Symbol	name		6200742						
ANR	6200861	Symbol	comment		6200742						
ANR	6200862	Symbol	strdup		6200742						
ANR	6200863	Symbol	r_spaces_current		6200742						
ANR	6200864	Symbol	r_str_new		6200742						
ANR	6200865	Symbol	it -> comment		6200742						
ANR	6200866	Function	r_sign_add_name	699:0:16039:16430							
ANR	6200867	FunctionDef	"r_sign_add_name (RAnal * a , const char * name , const char * realname)"		6200866	0					
ANR	6200868	CompoundStatement		699:77:16116:16430	6200866	0					
ANR	6200869	ExpressionStatement	"r_return_val_if_fail ( a && name && realname , false )"	700:1:16119:16170	6200866	0	True				
ANR	6200870	CallExpression	"r_return_val_if_fail ( a && name && realname , false )"		6200866	0					
ANR	6200871	Callee	r_return_val_if_fail		6200866	0					
ANR	6200872	Identifier	r_return_val_if_fail		6200866	0					
ANR	6200873	ArgumentList	a && name && realname		6200866	1					
ANR	6200874	Argument	a && name && realname		6200866	0					
ANR	6200875	AndExpression	a && name && realname		6200866	0		&&			
ANR	6200876	Identifier	a		6200866	0					
ANR	6200877	AndExpression	name && realname		6200866	1		&&			
ANR	6200878	Identifier	name		6200866	0					
ANR	6200879	Identifier	realname		6200866	1					
ANR	6200880	Argument	false		6200866	1					
ANR	6200881	Identifier	false		6200866	0					
ANR	6200882	IdentifierDeclStatement	RSignItem * it = r_sign_item_new ( ) ;	701:1:16173:16207	6200866	1	True				
ANR	6200883	IdentifierDecl	* it = r_sign_item_new ( )		6200866	0					
ANR	6200884	IdentifierDeclType	RSignItem *		6200866	0					
ANR	6200885	Identifier	it		6200866	1					
ANR	6200886	AssignmentExpression	* it = r_sign_item_new ( )		6200866	2		=			
ANR	6200887	Identifier	it		6200866	0					
ANR	6200888	CallExpression	r_sign_item_new ( )		6200866	1					
ANR	6200889	Callee	r_sign_item_new		6200866	0					
ANR	6200890	Identifier	r_sign_item_new		6200866	0					
ANR	6200891	ArgumentList			6200866	1					
ANR	6200892	IfStatement	if ( it )		6200866	2					
ANR	6200893	Condition	it	702:5:16214:16215	6200866	0	True				
ANR	6200894	Identifier	it		6200866	0					
ANR	6200895	CompoundStatement		8:2:222:251	6200866	1					
ANR	6200896	ExpressionStatement	it -> name = r_str_new ( name )	703:2:16222:16249	6200866	0	True				
ANR	6200897	AssignmentExpression	it -> name = r_str_new ( name )		6200866	0		=			
ANR	6200898	PtrMemberAccess	it -> name		6200866	0					
ANR	6200899	Identifier	it		6200866	0					
ANR	6200900	Identifier	name		6200866	1					
ANR	6200901	CallExpression	r_str_new ( name )		6200866	1					
ANR	6200902	Callee	r_str_new		6200866	0					
ANR	6200903	Identifier	r_str_new		6200866	0					
ANR	6200904	ArgumentList	name		6200866	1					
ANR	6200905	Argument	name		6200866	0					
ANR	6200906	Identifier	name		6200866	0					
ANR	6200907	ExpressionStatement	it -> realname = strdup ( realname )	704:2:16253:16285	6200866	1	True				
ANR	6200908	AssignmentExpression	it -> realname = strdup ( realname )		6200866	0		=			
ANR	6200909	PtrMemberAccess	it -> realname		6200866	0					
ANR	6200910	Identifier	it		6200866	0					
ANR	6200911	Identifier	realname		6200866	1					
ANR	6200912	CallExpression	strdup ( realname )		6200866	1					
ANR	6200913	Callee	strdup		6200866	0					
ANR	6200914	Identifier	strdup		6200866	0					
ANR	6200915	ArgumentList	realname		6200866	1					
ANR	6200916	Argument	realname		6200866	0					
ANR	6200917	Identifier	realname		6200866	0					
ANR	6200918	ExpressionStatement	it -> space = r_spaces_current ( & a -> zign_spaces )	705:2:16289:16335	6200866	2	True				
ANR	6200919	AssignmentExpression	it -> space = r_spaces_current ( & a -> zign_spaces )		6200866	0		=			
ANR	6200920	PtrMemberAccess	it -> space		6200866	0					
ANR	6200921	Identifier	it		6200866	0					
ANR	6200922	Identifier	space		6200866	1					
ANR	6200923	CallExpression	r_spaces_current ( & a -> zign_spaces )		6200866	1					
ANR	6200924	Callee	r_spaces_current		6200866	0					
ANR	6200925	Identifier	r_spaces_current		6200866	0					
ANR	6200926	ArgumentList	& a -> zign_spaces		6200866	1					
ANR	6200927	Argument	& a -> zign_spaces		6200866	0					
ANR	6200928	UnaryOperationExpression	& a -> zign_spaces		6200866	0					
ANR	6200929	UnaryOperator	&		6200866	0					
ANR	6200930	PtrMemberAccess	a -> zign_spaces		6200866	1					
ANR	6200931	Identifier	a		6200866	0					
ANR	6200932	Identifier	zign_spaces		6200866	1					
ANR	6200933	IdentifierDeclStatement	"bool retval = addItem ( a , it ) ;"	706:2:16339:16368	6200866	3	True				
ANR	6200934	IdentifierDecl	"retval = addItem ( a , it )"		6200866	0					
ANR	6200935	IdentifierDeclType	bool		6200866	0					
ANR	6200936	Identifier	retval		6200866	1					
ANR	6200937	AssignmentExpression	"retval = addItem ( a , it )"		6200866	2		=			
ANR	6200938	Identifier	retval		6200866	0					
ANR	6200939	CallExpression	"addItem ( a , it )"		6200866	1					
ANR	6200940	Callee	addItem		6200866	0					
ANR	6200941	Identifier	addItem		6200866	0					
ANR	6200942	ArgumentList	a		6200866	1					
ANR	6200943	Argument	a		6200866	0					
ANR	6200944	Identifier	a		6200866	0					
ANR	6200945	Argument	it		6200866	1					
ANR	6200946	Identifier	it		6200866	0					
ANR	6200947	ExpressionStatement	r_sign_item_free ( it )	707:2:16372:16393	6200866	4	True				
ANR	6200948	CallExpression	r_sign_item_free ( it )		6200866	0					
ANR	6200949	Callee	r_sign_item_free		6200866	0					
ANR	6200950	Identifier	r_sign_item_free		6200866	0					
ANR	6200951	ArgumentList	it		6200866	1					
ANR	6200952	Argument	it		6200866	0					
ANR	6200953	Identifier	it		6200866	0					
ANR	6200954	ReturnStatement	return retval ;	708:2:16397:16410	6200866	5	True				
ANR	6200955	Identifier	retval		6200866	0					
ANR	6200956	ReturnStatement	return false ;	710:1:16416:16428	6200866	3	True				
ANR	6200957	Identifier	false		6200866	0					
ANR	6200958	ReturnType	R_API bool		6200866	1					
ANR	6200959	Identifier	r_sign_add_name		6200866	2					
ANR	6200960	ParameterList	"RAnal * a , const char * name , const char * realname"		6200866	3					
ANR	6200961	Parameter	RAnal * a	699:27:16066:16073	6200866	0	True				
ANR	6200962	ParameterType	RAnal *		6200866	0					
ANR	6200963	Identifier	a		6200866	1					
ANR	6200964	Parameter	const char * name	699:37:16076:16091	6200866	1	True				
ANR	6200965	ParameterType	const char *		6200866	0					
ANR	6200966	Identifier	name		6200866	1					
ANR	6200967	Parameter	const char * realname	699:55:16094:16113	6200866	2	True				
ANR	6200968	ParameterType	const char *		6200866	0					
ANR	6200969	Identifier	realname		6200866	1					
ANR	6200970	CFGEntryNode	ENTRY		6200866		True				
ANR	6200971	CFGExitNode	EXIT		6200866		True				
ANR	6200972	Symbol	a		6200866						
ANR	6200973	Symbol	r_sign_item_new		6200866						
ANR	6200974	Symbol	it -> name		6200866						
ANR	6200975	Symbol	false		6200866						
ANR	6200976	Symbol	it		6200866						
ANR	6200977	Symbol	& a -> zign_spaces		6200866						
ANR	6200978	Symbol	retval		6200866						
ANR	6200979	Symbol	realname		6200866						
ANR	6200980	Symbol	it -> space		6200866						
ANR	6200981	Symbol	addItem		6200866						
ANR	6200982	Symbol	* it		6200866						
ANR	6200983	Symbol	name		6200866						
ANR	6200984	Symbol	strdup		6200866						
ANR	6200985	Symbol	r_spaces_current		6200866						
ANR	6200986	Symbol	r_str_new		6200866						
ANR	6200987	Symbol	it -> realname		6200866						
ANR	6200988	Function	r_sign_add_addr	713:0:16433:16803							
ANR	6200989	FunctionDef	"r_sign_add_addr (RAnal * a , const char * name , ut64 addr)"		6200988	0					
ANR	6200990	CompoundStatement		713:66:16499:16803	6200988	0					
ANR	6200991	ExpressionStatement	"r_return_val_if_fail ( a && name && addr != UT64_MAX , false )"	714:1:16502:16561	6200988	0	True				
ANR	6200992	CallExpression	"r_return_val_if_fail ( a && name && addr != UT64_MAX , false )"		6200988	0					
ANR	6200993	Callee	r_return_val_if_fail		6200988	0					
ANR	6200994	Identifier	r_return_val_if_fail		6200988	0					
ANR	6200995	ArgumentList	a && name && addr != UT64_MAX		6200988	1					
ANR	6200996	Argument	a && name && addr != UT64_MAX		6200988	0					
ANR	6200997	AndExpression	a && name && addr != UT64_MAX		6200988	0		&&			
ANR	6200998	Identifier	a		6200988	0					
ANR	6200999	AndExpression	name && addr != UT64_MAX		6200988	1		&&			
ANR	6201000	Identifier	name		6200988	0					
ANR	6201001	EqualityExpression	addr != UT64_MAX		6200988	1		!=			
ANR	6201002	Identifier	addr		6200988	0					
ANR	6201003	Identifier	UT64_MAX		6200988	1					
ANR	6201004	Argument	false		6200988	1					
ANR	6201005	Identifier	false		6200988	0					
ANR	6201006	IdentifierDeclStatement	RSignItem * it = r_sign_item_new ( ) ;	716:1:16565:16599	6200988	1	True				
ANR	6201007	IdentifierDecl	* it = r_sign_item_new ( )		6200988	0					
ANR	6201008	IdentifierDeclType	RSignItem *		6200988	0					
ANR	6201009	Identifier	it		6200988	1					
ANR	6201010	AssignmentExpression	* it = r_sign_item_new ( )		6200988	2		=			
ANR	6201011	Identifier	it		6200988	0					
ANR	6201012	CallExpression	r_sign_item_new ( )		6200988	1					
ANR	6201013	Callee	r_sign_item_new		6200988	0					
ANR	6201014	Identifier	r_sign_item_new		6200988	0					
ANR	6201015	ArgumentList			6200988	1					
ANR	6201016	IfStatement	if ( ! it )		6200988	2					
ANR	6201017	Condition	! it	717:5:16606:16608	6200988	0	True				
ANR	6201018	UnaryOperationExpression	! it		6200988	0					
ANR	6201019	UnaryOperator	!		6200988	0					
ANR	6201020	Identifier	it		6200988	1					
ANR	6201021	CompoundStatement		5:10:111:111	6200988	1					
ANR	6201022	ReturnStatement	return NULL ;	718:2:16615:16626	6200988	0	True				
ANR	6201023	Identifier	NULL		6200988	0					
ANR	6201024	ExpressionStatement	it -> name = r_str_new ( name )	720:1:16632:16659	6200988	3	True				
ANR	6201025	AssignmentExpression	it -> name = r_str_new ( name )		6200988	0		=			
ANR	6201026	PtrMemberAccess	it -> name		6200988	0					
ANR	6201027	Identifier	it		6200988	0					
ANR	6201028	Identifier	name		6200988	1					
ANR	6201029	CallExpression	r_str_new ( name )		6200988	1					
ANR	6201030	Callee	r_str_new		6200988	0					
ANR	6201031	Identifier	r_str_new		6200988	0					
ANR	6201032	ArgumentList	name		6200988	1					
ANR	6201033	Argument	name		6200988	0					
ANR	6201034	Identifier	name		6200988	0					
ANR	6201035	ExpressionStatement	it -> space = r_spaces_current ( & a -> zign_spaces )	721:1:16662:16708	6200988	4	True				
ANR	6201036	AssignmentExpression	it -> space = r_spaces_current ( & a -> zign_spaces )		6200988	0		=			
ANR	6201037	PtrMemberAccess	it -> space		6200988	0					
ANR	6201038	Identifier	it		6200988	0					
ANR	6201039	Identifier	space		6200988	1					
ANR	6201040	CallExpression	r_spaces_current ( & a -> zign_spaces )		6200988	1					
ANR	6201041	Callee	r_spaces_current		6200988	0					
ANR	6201042	Identifier	r_spaces_current		6200988	0					
ANR	6201043	ArgumentList	& a -> zign_spaces		6200988	1					
ANR	6201044	Argument	& a -> zign_spaces		6200988	0					
ANR	6201045	UnaryOperationExpression	& a -> zign_spaces		6200988	0					
ANR	6201046	UnaryOperator	&		6200988	0					
ANR	6201047	PtrMemberAccess	a -> zign_spaces		6200988	1					
ANR	6201048	Identifier	a		6200988	0					
ANR	6201049	Identifier	zign_spaces		6200988	1					
ANR	6201050	ExpressionStatement	it -> addr = addr	722:1:16711:16726	6200988	5	True				
ANR	6201051	AssignmentExpression	it -> addr = addr		6200988	0		=			
ANR	6201052	PtrMemberAccess	it -> addr		6200988	0					
ANR	6201053	Identifier	it		6200988	0					
ANR	6201054	Identifier	addr		6200988	1					
ANR	6201055	Identifier	addr		6200988	1					
ANR	6201056	IdentifierDeclStatement	"bool retval = addItem ( a , it ) ;"	724:1:16730:16759	6200988	6	True				
ANR	6201057	IdentifierDecl	"retval = addItem ( a , it )"		6200988	0					
ANR	6201058	IdentifierDeclType	bool		6200988	0					
ANR	6201059	Identifier	retval		6200988	1					
ANR	6201060	AssignmentExpression	"retval = addItem ( a , it )"		6200988	2		=			
ANR	6201061	Identifier	retval		6200988	0					
ANR	6201062	CallExpression	"addItem ( a , it )"		6200988	1					
ANR	6201063	Callee	addItem		6200988	0					
ANR	6201064	Identifier	addItem		6200988	0					
ANR	6201065	ArgumentList	a		6200988	1					
ANR	6201066	Argument	a		6200988	0					
ANR	6201067	Identifier	a		6200988	0					
ANR	6201068	Argument	it		6200988	1					
ANR	6201069	Identifier	it		6200988	0					
ANR	6201070	ExpressionStatement	r_sign_item_free ( it )	726:1:16763:16784	6200988	7	True				
ANR	6201071	CallExpression	r_sign_item_free ( it )		6200988	0					
ANR	6201072	Callee	r_sign_item_free		6200988	0					
ANR	6201073	Identifier	r_sign_item_free		6200988	0					
ANR	6201074	ArgumentList	it		6200988	1					
ANR	6201075	Argument	it		6200988	0					
ANR	6201076	Identifier	it		6200988	0					
ANR	6201077	ReturnStatement	return retval ;	728:1:16788:16801	6200988	8	True				
ANR	6201078	Identifier	retval		6200988	0					
ANR	6201079	ReturnType	R_API bool		6200988	1					
ANR	6201080	Identifier	r_sign_add_addr		6200988	2					
ANR	6201081	ParameterList	"RAnal * a , const char * name , ut64 addr"		6200988	3					
ANR	6201082	Parameter	RAnal * a	713:27:16460:16467	6200988	0	True				
ANR	6201083	ParameterType	RAnal *		6200988	0					
ANR	6201084	Identifier	a		6200988	1					
ANR	6201085	Parameter	const char * name	713:37:16470:16485	6200988	1	True				
ANR	6201086	ParameterType	const char *		6200988	0					
ANR	6201087	Identifier	name		6200988	1					
ANR	6201088	Parameter	ut64 addr	713:55:16488:16496	6200988	2	True				
ANR	6201089	ParameterType	ut64		6200988	0					
ANR	6201090	Identifier	addr		6200988	1					
ANR	6201091	CFGEntryNode	ENTRY		6200988		True				
ANR	6201092	CFGExitNode	EXIT		6200988		True				
ANR	6201093	Symbol	a		6200988						
ANR	6201094	Symbol	r_sign_item_new		6200988						
ANR	6201095	Symbol	NULL		6200988						
ANR	6201096	Symbol	it -> name		6200988						
ANR	6201097	Symbol	false		6200988						
ANR	6201098	Symbol	it		6200988						
ANR	6201099	Symbol	& a -> zign_spaces		6200988						
ANR	6201100	Symbol	retval		6200988						
ANR	6201101	Symbol	it -> space		6200988						
ANR	6201102	Symbol	addItem		6200988						
ANR	6201103	Symbol	* it		6200988						
ANR	6201104	Symbol	it -> addr		6200988						
ANR	6201105	Symbol	name		6200988						
ANR	6201106	Symbol	addr		6200988						
ANR	6201107	Symbol	UT64_MAX		6200988						
ANR	6201108	Symbol	r_spaces_current		6200988						
ANR	6201109	Symbol	r_str_new		6200988						
ANR	6201110	Function	r_sign_add_vars	731:0:16806:17365							
ANR	6201111	FunctionDef	"r_sign_add_vars (RAnal * a , const char * name , RList * vars)"		6201110	0					
ANR	6201112	CompoundStatement		731:68:16874:17365	6201110	0					
ANR	6201113	ExpressionStatement	"r_return_val_if_fail ( a && name && vars , false )"	732:1:16877:16924	6201110	0	True				
ANR	6201114	CallExpression	"r_return_val_if_fail ( a && name && vars , false )"		6201110	0					
ANR	6201115	Callee	r_return_val_if_fail		6201110	0					
ANR	6201116	Identifier	r_return_val_if_fail		6201110	0					
ANR	6201117	ArgumentList	a && name && vars		6201110	1					
ANR	6201118	Argument	a && name && vars		6201110	0					
ANR	6201119	AndExpression	a && name && vars		6201110	0		&&			
ANR	6201120	Identifier	a		6201110	0					
ANR	6201121	AndExpression	name && vars		6201110	1		&&			
ANR	6201122	Identifier	name		6201110	0					
ANR	6201123	Identifier	vars		6201110	1					
ANR	6201124	Argument	false		6201110	1					
ANR	6201125	Identifier	false		6201110	0					
ANR	6201126	IdentifierDeclStatement	RListIter * iter ;	734:1:16928:16943	6201110	1	True				
ANR	6201127	IdentifierDecl	* iter		6201110	0					
ANR	6201128	IdentifierDeclType	RListIter *		6201110	0					
ANR	6201129	Identifier	iter		6201110	1					
ANR	6201130	IdentifierDeclStatement	char * var ;	735:1:16946:16955	6201110	2	True				
ANR	6201131	IdentifierDecl	* var		6201110	0					
ANR	6201132	IdentifierDeclType	char *		6201110	0					
ANR	6201133	Identifier	var		6201110	1					
ANR	6201134	IdentifierDeclStatement	RSignItem * it = r_sign_item_new ( ) ;	737:1:16959:16993	6201110	3	True				
ANR	6201135	IdentifierDecl	* it = r_sign_item_new ( )		6201110	0					
ANR	6201136	IdentifierDeclType	RSignItem *		6201110	0					
ANR	6201137	Identifier	it		6201110	1					
ANR	6201138	AssignmentExpression	* it = r_sign_item_new ( )		6201110	2		=			
ANR	6201139	Identifier	it		6201110	0					
ANR	6201140	CallExpression	r_sign_item_new ( )		6201110	1					
ANR	6201141	Callee	r_sign_item_new		6201110	0					
ANR	6201142	Identifier	r_sign_item_new		6201110	0					
ANR	6201143	ArgumentList			6201110	1					
ANR	6201144	IfStatement	if ( ! it )		6201110	4					
ANR	6201145	Condition	! it	738:5:17000:17002	6201110	0	True				
ANR	6201146	UnaryOperationExpression	! it		6201110	0					
ANR	6201147	UnaryOperator	!		6201110	0					
ANR	6201148	Identifier	it		6201110	1					
ANR	6201149	CompoundStatement		8:10:130:130	6201110	1					
ANR	6201150	ReturnStatement	return false ;	739:2:17009:17021	6201110	0	True				
ANR	6201151	Identifier	false		6201110	0					
ANR	6201152	ExpressionStatement	it -> name = r_str_new ( name )	741:1:17027:17054	6201110	5	True				
ANR	6201153	AssignmentExpression	it -> name = r_str_new ( name )		6201110	0		=			
ANR	6201154	PtrMemberAccess	it -> name		6201110	0					
ANR	6201155	Identifier	it		6201110	0					
ANR	6201156	Identifier	name		6201110	1					
ANR	6201157	CallExpression	r_str_new ( name )		6201110	1					
ANR	6201158	Callee	r_str_new		6201110	0					
ANR	6201159	Identifier	r_str_new		6201110	0					
ANR	6201160	ArgumentList	name		6201110	1					
ANR	6201161	Argument	name		6201110	0					
ANR	6201162	Identifier	name		6201110	0					
ANR	6201163	IfStatement	if ( ! it -> name )		6201110	6					
ANR	6201164	Condition	! it -> name	742:5:17061:17069	6201110	0	True				
ANR	6201165	UnaryOperationExpression	! it -> name		6201110	0					
ANR	6201166	UnaryOperator	!		6201110	0					
ANR	6201167	PtrMemberAccess	it -> name		6201110	1					
ANR	6201168	Identifier	it		6201110	0					
ANR	6201169	Identifier	name		6201110	1					
ANR	6201170	CompoundStatement		12:16:197:197	6201110	1					
ANR	6201171	ExpressionStatement	r_sign_item_free ( it )	743:2:17076:17097	6201110	0	True				
ANR	6201172	CallExpression	r_sign_item_free ( it )		6201110	0					
ANR	6201173	Callee	r_sign_item_free		6201110	0					
ANR	6201174	Identifier	r_sign_item_free		6201110	0					
ANR	6201175	ArgumentList	it		6201110	1					
ANR	6201176	Argument	it		6201110	0					
ANR	6201177	Identifier	it		6201110	0					
ANR	6201178	ReturnStatement	return false ;	744:2:17101:17113	6201110	1	True				
ANR	6201179	Identifier	false		6201110	0					
ANR	6201180	ExpressionStatement	it -> space = r_spaces_current ( & a -> zign_spaces )	746:1:17119:17165	6201110	7	True				
ANR	6201181	AssignmentExpression	it -> space = r_spaces_current ( & a -> zign_spaces )		6201110	0		=			
ANR	6201182	PtrMemberAccess	it -> space		6201110	0					
ANR	6201183	Identifier	it		6201110	0					
ANR	6201184	Identifier	space		6201110	1					
ANR	6201185	CallExpression	r_spaces_current ( & a -> zign_spaces )		6201110	1					
ANR	6201186	Callee	r_spaces_current		6201110	0					
ANR	6201187	Identifier	r_spaces_current		6201110	0					
ANR	6201188	ArgumentList	& a -> zign_spaces		6201110	1					
ANR	6201189	Argument	& a -> zign_spaces		6201110	0					
ANR	6201190	UnaryOperationExpression	& a -> zign_spaces		6201110	0					
ANR	6201191	UnaryOperator	&		6201110	0					
ANR	6201192	PtrMemberAccess	a -> zign_spaces		6201110	1					
ANR	6201193	Identifier	a		6201110	0					
ANR	6201194	Identifier	zign_spaces		6201110	1					
ANR	6201195	ExpressionStatement	it -> vars = r_list_newf ( ( RListFree ) free )	747:1:17168:17209	6201110	8	True				
ANR	6201196	AssignmentExpression	it -> vars = r_list_newf ( ( RListFree ) free )		6201110	0		=			
ANR	6201197	PtrMemberAccess	it -> vars		6201110	0					
ANR	6201198	Identifier	it		6201110	0					
ANR	6201199	Identifier	vars		6201110	1					
ANR	6201200	CallExpression	r_list_newf ( ( RListFree ) free )		6201110	1					
ANR	6201201	Callee	r_list_newf		6201110	0					
ANR	6201202	Identifier	r_list_newf		6201110	0					
ANR	6201203	ArgumentList	( RListFree ) free		6201110	1					
ANR	6201204	Argument	( RListFree ) free		6201110	0					
ANR	6201205	CastExpression	( RListFree ) free		6201110	0					
ANR	6201206	CastTarget	RListFree		6201110	0					
ANR	6201207	Identifier	free		6201110	1					
ANR	6201208	Statement	r_list_foreach	748:1:17212:17225	6201110	9	True				
ANR	6201209	Statement	(	748:16:17227:17227	6201110	10	True				
ANR	6201210	Statement	vars	748:17:17228:17231	6201110	11	True				
ANR	6201211	Statement	","	748:21:17232:17232	6201110	12	True				
ANR	6201212	Statement	iter	748:23:17234:17237	6201110	13	True				
ANR	6201213	Statement	","	748:27:17238:17238	6201110	14	True				
ANR	6201214	Statement	var	748:29:17240:17242	6201110	15	True				
ANR	6201215	Statement	)	748:32:17243:17243	6201110	16	True				
ANR	6201216	CompoundStatement		18:34:370:370	6201110	17					
ANR	6201217	ExpressionStatement	"r_list_append ( it -> vars , strdup ( var ) )"	749:2:17249:17287	6201110	0	True				
ANR	6201218	CallExpression	"r_list_append ( it -> vars , strdup ( var ) )"		6201110	0					
ANR	6201219	Callee	r_list_append		6201110	0					
ANR	6201220	Identifier	r_list_append		6201110	0					
ANR	6201221	ArgumentList	it -> vars		6201110	1					
ANR	6201222	Argument	it -> vars		6201110	0					
ANR	6201223	PtrMemberAccess	it -> vars		6201110	0					
ANR	6201224	Identifier	it		6201110	0					
ANR	6201225	Identifier	vars		6201110	1					
ANR	6201226	Argument	strdup ( var )		6201110	1					
ANR	6201227	CallExpression	strdup ( var )		6201110	0					
ANR	6201228	Callee	strdup		6201110	0					
ANR	6201229	Identifier	strdup		6201110	0					
ANR	6201230	ArgumentList	var		6201110	1					
ANR	6201231	Argument	var		6201110	0					
ANR	6201232	Identifier	var		6201110	0					
ANR	6201233	IdentifierDeclStatement	"bool retval = addItem ( a , it ) ;"	751:1:17293:17322	6201110	18	True				
ANR	6201234	IdentifierDecl	"retval = addItem ( a , it )"		6201110	0					
ANR	6201235	IdentifierDeclType	bool		6201110	0					
ANR	6201236	Identifier	retval		6201110	1					
ANR	6201237	AssignmentExpression	"retval = addItem ( a , it )"		6201110	2		=			
ANR	6201238	Identifier	retval		6201110	0					
ANR	6201239	CallExpression	"addItem ( a , it )"		6201110	1					
ANR	6201240	Callee	addItem		6201110	0					
ANR	6201241	Identifier	addItem		6201110	0					
ANR	6201242	ArgumentList	a		6201110	1					
ANR	6201243	Argument	a		6201110	0					
ANR	6201244	Identifier	a		6201110	0					
ANR	6201245	Argument	it		6201110	1					
ANR	6201246	Identifier	it		6201110	0					
ANR	6201247	ExpressionStatement	r_sign_item_free ( it )	752:1:17325:17346	6201110	19	True				
ANR	6201248	CallExpression	r_sign_item_free ( it )		6201110	0					
ANR	6201249	Callee	r_sign_item_free		6201110	0					
ANR	6201250	Identifier	r_sign_item_free		6201110	0					
ANR	6201251	ArgumentList	it		6201110	1					
ANR	6201252	Argument	it		6201110	0					
ANR	6201253	Identifier	it		6201110	0					
ANR	6201254	ReturnStatement	return retval ;	754:1:17350:17363	6201110	20	True				
ANR	6201255	Identifier	retval		6201110	0					
ANR	6201256	ReturnType	R_API bool		6201110	1					
ANR	6201257	Identifier	r_sign_add_vars		6201110	2					
ANR	6201258	ParameterList	"RAnal * a , const char * name , RList * vars"		6201110	3					
ANR	6201259	Parameter	RAnal * a	731:27:16833:16840	6201110	0	True				
ANR	6201260	ParameterType	RAnal *		6201110	0					
ANR	6201261	Identifier	a		6201110	1					
ANR	6201262	Parameter	const char * name	731:37:16843:16858	6201110	1	True				
ANR	6201263	ParameterType	const char *		6201110	0					
ANR	6201264	Identifier	name		6201110	1					
ANR	6201265	Parameter	RList * vars	731:55:16861:16871	6201110	2	True				
ANR	6201266	ParameterType	RList *		6201110	0					
ANR	6201267	Identifier	vars		6201110	1					
ANR	6201268	CFGEntryNode	ENTRY		6201110		True				
ANR	6201269	CFGExitNode	EXIT		6201110		True				
ANR	6201270	Symbol	it -> vars		6201110						
ANR	6201271	Symbol	a		6201110						
ANR	6201272	Symbol	r_sign_item_new		6201110						
ANR	6201273	Symbol	r_list_newf		6201110						
ANR	6201274	Symbol	var		6201110						
ANR	6201275	Symbol	it -> name		6201110						
ANR	6201276	Symbol	false		6201110						
ANR	6201277	Symbol	iter		6201110						
ANR	6201278	Symbol	it		6201110						
ANR	6201279	Symbol	& a -> zign_spaces		6201110						
ANR	6201280	Symbol	retval		6201110						
ANR	6201281	Symbol	it -> space		6201110						
ANR	6201282	Symbol	addItem		6201110						
ANR	6201283	Symbol	* it		6201110						
ANR	6201284	Symbol	name		6201110						
ANR	6201285	Symbol	vars		6201110						
ANR	6201286	Symbol	strdup		6201110						
ANR	6201287	Symbol	free		6201110						
ANR	6201288	Symbol	r_spaces_current		6201110						
ANR	6201289	Symbol	r_str_new		6201110						
ANR	6201290	Function	r_sign_add_refs	757:0:17368:17914							
ANR	6201291	FunctionDef	"r_sign_add_refs (RAnal * a , const char * name , RList * refs)"		6201290	0					
ANR	6201292	CompoundStatement		757:68:17436:17914	6201290	0					
ANR	6201293	ExpressionStatement	"r_return_val_if_fail ( a && name && refs , false )"	758:1:17439:17486	6201290	0	True				
ANR	6201294	CallExpression	"r_return_val_if_fail ( a && name && refs , false )"		6201290	0					
ANR	6201295	Callee	r_return_val_if_fail		6201290	0					
ANR	6201296	Identifier	r_return_val_if_fail		6201290	0					
ANR	6201297	ArgumentList	a && name && refs		6201290	1					
ANR	6201298	Argument	a && name && refs		6201290	0					
ANR	6201299	AndExpression	a && name && refs		6201290	0		&&			
ANR	6201300	Identifier	a		6201290	0					
ANR	6201301	AndExpression	name && refs		6201290	1		&&			
ANR	6201302	Identifier	name		6201290	0					
ANR	6201303	Identifier	refs		6201290	1					
ANR	6201304	Argument	false		6201290	1					
ANR	6201305	Identifier	false		6201290	0					
ANR	6201306	IdentifierDeclStatement	char * ref ;	760:1:17490:17499	6201290	1	True				
ANR	6201307	IdentifierDecl	* ref		6201290	0					
ANR	6201308	IdentifierDeclType	char *		6201290	0					
ANR	6201309	Identifier	ref		6201290	1					
ANR	6201310	IdentifierDeclStatement	RListIter * iter ;	761:1:17502:17517	6201290	2	True				
ANR	6201311	IdentifierDecl	* iter		6201290	0					
ANR	6201312	IdentifierDeclType	RListIter *		6201290	0					
ANR	6201313	Identifier	iter		6201290	1					
ANR	6201314	IdentifierDeclStatement	RSignItem * it = r_sign_item_new ( ) ;	762:1:17520:17554	6201290	3	True				
ANR	6201315	IdentifierDecl	* it = r_sign_item_new ( )		6201290	0					
ANR	6201316	IdentifierDeclType	RSignItem *		6201290	0					
ANR	6201317	Identifier	it		6201290	1					
ANR	6201318	AssignmentExpression	* it = r_sign_item_new ( )		6201290	2		=			
ANR	6201319	Identifier	it		6201290	0					
ANR	6201320	CallExpression	r_sign_item_new ( )		6201290	1					
ANR	6201321	Callee	r_sign_item_new		6201290	0					
ANR	6201322	Identifier	r_sign_item_new		6201290	0					
ANR	6201323	ArgumentList			6201290	1					
ANR	6201324	IfStatement	if ( ! it )		6201290	4					
ANR	6201325	Condition	! it	763:5:17561:17563	6201290	0	True				
ANR	6201326	UnaryOperationExpression	! it		6201290	0					
ANR	6201327	UnaryOperator	!		6201290	0					
ANR	6201328	Identifier	it		6201290	1					
ANR	6201329	CompoundStatement		7:10:129:129	6201290	1					
ANR	6201330	ReturnStatement	return false ;	764:2:17570:17582	6201290	0	True				
ANR	6201331	Identifier	false		6201290	0					
ANR	6201332	ExpressionStatement	it -> name = r_str_new ( name )	766:1:17588:17615	6201290	5	True				
ANR	6201333	AssignmentExpression	it -> name = r_str_new ( name )		6201290	0		=			
ANR	6201334	PtrMemberAccess	it -> name		6201290	0					
ANR	6201335	Identifier	it		6201290	0					
ANR	6201336	Identifier	name		6201290	1					
ANR	6201337	CallExpression	r_str_new ( name )		6201290	1					
ANR	6201338	Callee	r_str_new		6201290	0					
ANR	6201339	Identifier	r_str_new		6201290	0					
ANR	6201340	ArgumentList	name		6201290	1					
ANR	6201341	Argument	name		6201290	0					
ANR	6201342	Identifier	name		6201290	0					
ANR	6201343	IfStatement	if ( ! it -> name )		6201290	6					
ANR	6201344	Condition	! it -> name	767:5:17622:17630	6201290	0	True				
ANR	6201345	UnaryOperationExpression	! it -> name		6201290	0					
ANR	6201346	UnaryOperator	!		6201290	0					
ANR	6201347	PtrMemberAccess	it -> name		6201290	1					
ANR	6201348	Identifier	it		6201290	0					
ANR	6201349	Identifier	name		6201290	1					
ANR	6201350	CompoundStatement		11:16:196:196	6201290	1					
ANR	6201351	ExpressionStatement	free ( it )	768:2:17637:17646	6201290	0	True				
ANR	6201352	CallExpression	free ( it )		6201290	0					
ANR	6201353	Callee	free		6201290	0					
ANR	6201354	Identifier	free		6201290	0					
ANR	6201355	ArgumentList	it		6201290	1					
ANR	6201356	Argument	it		6201290	0					
ANR	6201357	Identifier	it		6201290	0					
ANR	6201358	ReturnStatement	return false ;	769:2:17650:17662	6201290	1	True				
ANR	6201359	Identifier	false		6201290	0					
ANR	6201360	ExpressionStatement	it -> space = r_spaces_current ( & a -> zign_spaces )	771:1:17668:17714	6201290	7	True				
ANR	6201361	AssignmentExpression	it -> space = r_spaces_current ( & a -> zign_spaces )		6201290	0		=			
ANR	6201362	PtrMemberAccess	it -> space		6201290	0					
ANR	6201363	Identifier	it		6201290	0					
ANR	6201364	Identifier	space		6201290	1					
ANR	6201365	CallExpression	r_spaces_current ( & a -> zign_spaces )		6201290	1					
ANR	6201366	Callee	r_spaces_current		6201290	0					
ANR	6201367	Identifier	r_spaces_current		6201290	0					
ANR	6201368	ArgumentList	& a -> zign_spaces		6201290	1					
ANR	6201369	Argument	& a -> zign_spaces		6201290	0					
ANR	6201370	UnaryOperationExpression	& a -> zign_spaces		6201290	0					
ANR	6201371	UnaryOperator	&		6201290	0					
ANR	6201372	PtrMemberAccess	a -> zign_spaces		6201290	1					
ANR	6201373	Identifier	a		6201290	0					
ANR	6201374	Identifier	zign_spaces		6201290	1					
ANR	6201375	ExpressionStatement	it -> refs = r_list_newf ( ( RListFree ) free )	772:1:17717:17758	6201290	8	True				
ANR	6201376	AssignmentExpression	it -> refs = r_list_newf ( ( RListFree ) free )		6201290	0		=			
ANR	6201377	PtrMemberAccess	it -> refs		6201290	0					
ANR	6201378	Identifier	it		6201290	0					
ANR	6201379	Identifier	refs		6201290	1					
ANR	6201380	CallExpression	r_list_newf ( ( RListFree ) free )		6201290	1					
ANR	6201381	Callee	r_list_newf		6201290	0					
ANR	6201382	Identifier	r_list_newf		6201290	0					
ANR	6201383	ArgumentList	( RListFree ) free		6201290	1					
ANR	6201384	Argument	( RListFree ) free		6201290	0					
ANR	6201385	CastExpression	( RListFree ) free		6201290	0					
ANR	6201386	CastTarget	RListFree		6201290	0					
ANR	6201387	Identifier	free		6201290	1					
ANR	6201388	Statement	r_list_foreach	773:1:17761:17774	6201290	9	True				
ANR	6201389	Statement	(	773:16:17776:17776	6201290	10	True				
ANR	6201390	Statement	refs	773:17:17777:17780	6201290	11	True				
ANR	6201391	Statement	","	773:21:17781:17781	6201290	12	True				
ANR	6201392	Statement	iter	773:23:17783:17786	6201290	13	True				
ANR	6201393	Statement	","	773:27:17787:17787	6201290	14	True				
ANR	6201394	Statement	ref	773:29:17789:17791	6201290	15	True				
ANR	6201395	Statement	)	773:32:17792:17792	6201290	16	True				
ANR	6201396	CompoundStatement		17:34:357:357	6201290	17					
ANR	6201397	ExpressionStatement	"r_list_append ( it -> refs , strdup ( ref ) )"	774:2:17798:17836	6201290	0	True				
ANR	6201398	CallExpression	"r_list_append ( it -> refs , strdup ( ref ) )"		6201290	0					
ANR	6201399	Callee	r_list_append		6201290	0					
ANR	6201400	Identifier	r_list_append		6201290	0					
ANR	6201401	ArgumentList	it -> refs		6201290	1					
ANR	6201402	Argument	it -> refs		6201290	0					
ANR	6201403	PtrMemberAccess	it -> refs		6201290	0					
ANR	6201404	Identifier	it		6201290	0					
ANR	6201405	Identifier	refs		6201290	1					
ANR	6201406	Argument	strdup ( ref )		6201290	1					
ANR	6201407	CallExpression	strdup ( ref )		6201290	0					
ANR	6201408	Callee	strdup		6201290	0					
ANR	6201409	Identifier	strdup		6201290	0					
ANR	6201410	ArgumentList	ref		6201290	1					
ANR	6201411	Argument	ref		6201290	0					
ANR	6201412	Identifier	ref		6201290	0					
ANR	6201413	IdentifierDeclStatement	"bool retval = addItem ( a , it ) ;"	776:1:17842:17871	6201290	18	True				
ANR	6201414	IdentifierDecl	"retval = addItem ( a , it )"		6201290	0					
ANR	6201415	IdentifierDeclType	bool		6201290	0					
ANR	6201416	Identifier	retval		6201290	1					
ANR	6201417	AssignmentExpression	"retval = addItem ( a , it )"		6201290	2		=			
ANR	6201418	Identifier	retval		6201290	0					
ANR	6201419	CallExpression	"addItem ( a , it )"		6201290	1					
ANR	6201420	Callee	addItem		6201290	0					
ANR	6201421	Identifier	addItem		6201290	0					
ANR	6201422	ArgumentList	a		6201290	1					
ANR	6201423	Argument	a		6201290	0					
ANR	6201424	Identifier	a		6201290	0					
ANR	6201425	Argument	it		6201290	1					
ANR	6201426	Identifier	it		6201290	0					
ANR	6201427	ExpressionStatement	r_sign_item_free ( it )	777:1:17874:17895	6201290	19	True				
ANR	6201428	CallExpression	r_sign_item_free ( it )		6201290	0					
ANR	6201429	Callee	r_sign_item_free		6201290	0					
ANR	6201430	Identifier	r_sign_item_free		6201290	0					
ANR	6201431	ArgumentList	it		6201290	1					
ANR	6201432	Argument	it		6201290	0					
ANR	6201433	Identifier	it		6201290	0					
ANR	6201434	ReturnStatement	return retval ;	779:1:17899:17912	6201290	20	True				
ANR	6201435	Identifier	retval		6201290	0					
ANR	6201436	ReturnType	R_API bool		6201290	1					
ANR	6201437	Identifier	r_sign_add_refs		6201290	2					
ANR	6201438	ParameterList	"RAnal * a , const char * name , RList * refs"		6201290	3					
ANR	6201439	Parameter	RAnal * a	757:27:17395:17402	6201290	0	True				
ANR	6201440	ParameterType	RAnal *		6201290	0					
ANR	6201441	Identifier	a		6201290	1					
ANR	6201442	Parameter	const char * name	757:37:17405:17420	6201290	1	True				
ANR	6201443	ParameterType	const char *		6201290	0					
ANR	6201444	Identifier	name		6201290	1					
ANR	6201445	Parameter	RList * refs	757:55:17423:17433	6201290	2	True				
ANR	6201446	ParameterType	RList *		6201290	0					
ANR	6201447	Identifier	refs		6201290	1					
ANR	6201448	CFGEntryNode	ENTRY		6201290		True				
ANR	6201449	CFGExitNode	EXIT		6201290		True				
ANR	6201450	Symbol	a		6201290						
ANR	6201451	Symbol	r_sign_item_new		6201290						
ANR	6201452	Symbol	r_list_newf		6201290						
ANR	6201453	Symbol	it -> name		6201290						
ANR	6201454	Symbol	false		6201290						
ANR	6201455	Symbol	iter		6201290						
ANR	6201456	Symbol	it		6201290						
ANR	6201457	Symbol	& a -> zign_spaces		6201290						
ANR	6201458	Symbol	retval		6201290						
ANR	6201459	Symbol	it -> space		6201290						
ANR	6201460	Symbol	addItem		6201290						
ANR	6201461	Symbol	ref		6201290						
ANR	6201462	Symbol	* it		6201290						
ANR	6201463	Symbol	refs		6201290						
ANR	6201464	Symbol	name		6201290						
ANR	6201465	Symbol	strdup		6201290						
ANR	6201466	Symbol	free		6201290						
ANR	6201467	Symbol	r_spaces_current		6201290						
ANR	6201468	Symbol	r_str_new		6201290						
ANR	6201469	Symbol	it -> refs		6201290						
ANR	6201470	Function	r_sign_add_xrefs	782:0:17917:18483							
ANR	6201471	FunctionDef	"r_sign_add_xrefs (RAnal * a , const char * name , RList * xrefs)"		6201470	0					
ANR	6201472	CompoundStatement		782:70:17987:18483	6201470	0					
ANR	6201473	ExpressionStatement	"r_return_val_if_fail ( a && name && xrefs , false )"	783:1:17990:18038	6201470	0	True				
ANR	6201474	CallExpression	"r_return_val_if_fail ( a && name && xrefs , false )"		6201470	0					
ANR	6201475	Callee	r_return_val_if_fail		6201470	0					
ANR	6201476	Identifier	r_return_val_if_fail		6201470	0					
ANR	6201477	ArgumentList	a && name && xrefs		6201470	1					
ANR	6201478	Argument	a && name && xrefs		6201470	0					
ANR	6201479	AndExpression	a && name && xrefs		6201470	0		&&			
ANR	6201480	Identifier	a		6201470	0					
ANR	6201481	AndExpression	name && xrefs		6201470	1		&&			
ANR	6201482	Identifier	name		6201470	0					
ANR	6201483	Identifier	xrefs		6201470	1					
ANR	6201484	Argument	false		6201470	1					
ANR	6201485	Identifier	false		6201470	0					
ANR	6201486	IdentifierDeclStatement	RListIter * iter = NULL ;	785:1:18042:18064	6201470	1	True				
ANR	6201487	IdentifierDecl	* iter = NULL		6201470	0					
ANR	6201488	IdentifierDeclType	RListIter *		6201470	0					
ANR	6201489	Identifier	iter		6201470	1					
ANR	6201490	AssignmentExpression	* iter = NULL		6201470	2		=			
ANR	6201491	Identifier	NULL		6201470	0					
ANR	6201492	Identifier	NULL		6201470	1					
ANR	6201493	IdentifierDeclStatement	char * ref = NULL ;	786:1:18067:18083	6201470	2	True				
ANR	6201494	IdentifierDecl	* ref = NULL		6201470	0					
ANR	6201495	IdentifierDeclType	char *		6201470	0					
ANR	6201496	Identifier	ref		6201470	1					
ANR	6201497	AssignmentExpression	* ref = NULL		6201470	2		=			
ANR	6201498	Identifier	NULL		6201470	0					
ANR	6201499	Identifier	NULL		6201470	1					
ANR	6201500	IdentifierDeclStatement	RSignItem * it = r_sign_item_new ( ) ;	787:1:18086:18120	6201470	3	True				
ANR	6201501	IdentifierDecl	* it = r_sign_item_new ( )		6201470	0					
ANR	6201502	IdentifierDeclType	RSignItem *		6201470	0					
ANR	6201503	Identifier	it		6201470	1					
ANR	6201504	AssignmentExpression	* it = r_sign_item_new ( )		6201470	2		=			
ANR	6201505	Identifier	it		6201470	0					
ANR	6201506	CallExpression	r_sign_item_new ( )		6201470	1					
ANR	6201507	Callee	r_sign_item_new		6201470	0					
ANR	6201508	Identifier	r_sign_item_new		6201470	0					
ANR	6201509	ArgumentList			6201470	1					
ANR	6201510	IfStatement	if ( ! it )		6201470	4					
ANR	6201511	Condition	! it	788:5:18127:18129	6201470	0	True				
ANR	6201512	UnaryOperationExpression	! it		6201470	0					
ANR	6201513	UnaryOperator	!		6201470	0					
ANR	6201514	Identifier	it		6201470	1					
ANR	6201515	CompoundStatement		7:10:144:144	6201470	1					
ANR	6201516	ReturnStatement	return false ;	789:2:18136:18148	6201470	0	True				
ANR	6201517	Identifier	false		6201470	0					
ANR	6201518	ExpressionStatement	it -> name = r_str_new ( name )	791:1:18154:18181	6201470	5	True				
ANR	6201519	AssignmentExpression	it -> name = r_str_new ( name )		6201470	0		=			
ANR	6201520	PtrMemberAccess	it -> name		6201470	0					
ANR	6201521	Identifier	it		6201470	0					
ANR	6201522	Identifier	name		6201470	1					
ANR	6201523	CallExpression	r_str_new ( name )		6201470	1					
ANR	6201524	Callee	r_str_new		6201470	0					
ANR	6201525	Identifier	r_str_new		6201470	0					
ANR	6201526	ArgumentList	name		6201470	1					
ANR	6201527	Argument	name		6201470	0					
ANR	6201528	Identifier	name		6201470	0					
ANR	6201529	IfStatement	if ( ! it -> name )		6201470	6					
ANR	6201530	Condition	! it -> name	792:5:18188:18196	6201470	0	True				
ANR	6201531	UnaryOperationExpression	! it -> name		6201470	0					
ANR	6201532	UnaryOperator	!		6201470	0					
ANR	6201533	PtrMemberAccess	it -> name		6201470	1					
ANR	6201534	Identifier	it		6201470	0					
ANR	6201535	Identifier	name		6201470	1					
ANR	6201536	CompoundStatement		11:16:211:211	6201470	1					
ANR	6201537	ExpressionStatement	free ( it )	793:2:18203:18212	6201470	0	True				
ANR	6201538	CallExpression	free ( it )		6201470	0					
ANR	6201539	Callee	free		6201470	0					
ANR	6201540	Identifier	free		6201470	0					
ANR	6201541	ArgumentList	it		6201470	1					
ANR	6201542	Argument	it		6201470	0					
ANR	6201543	Identifier	it		6201470	0					
ANR	6201544	ReturnStatement	return false ;	794:2:18216:18228	6201470	1	True				
ANR	6201545	Identifier	false		6201470	0					
ANR	6201546	ExpressionStatement	it -> space = r_spaces_current ( & a -> zign_spaces )	796:1:18234:18280	6201470	7	True				
ANR	6201547	AssignmentExpression	it -> space = r_spaces_current ( & a -> zign_spaces )		6201470	0		=			
ANR	6201548	PtrMemberAccess	it -> space		6201470	0					
ANR	6201549	Identifier	it		6201470	0					
ANR	6201550	Identifier	space		6201470	1					
ANR	6201551	CallExpression	r_spaces_current ( & a -> zign_spaces )		6201470	1					
ANR	6201552	Callee	r_spaces_current		6201470	0					
ANR	6201553	Identifier	r_spaces_current		6201470	0					
ANR	6201554	ArgumentList	& a -> zign_spaces		6201470	1					
ANR	6201555	Argument	& a -> zign_spaces		6201470	0					
ANR	6201556	UnaryOperationExpression	& a -> zign_spaces		6201470	0					
ANR	6201557	UnaryOperator	&		6201470	0					
ANR	6201558	PtrMemberAccess	a -> zign_spaces		6201470	1					
ANR	6201559	Identifier	a		6201470	0					
ANR	6201560	Identifier	zign_spaces		6201470	1					
ANR	6201561	ExpressionStatement	it -> xrefs = r_list_newf ( ( RListFree ) free )	797:1:18283:18325	6201470	8	True				
ANR	6201562	AssignmentExpression	it -> xrefs = r_list_newf ( ( RListFree ) free )		6201470	0		=			
ANR	6201563	PtrMemberAccess	it -> xrefs		6201470	0					
ANR	6201564	Identifier	it		6201470	0					
ANR	6201565	Identifier	xrefs		6201470	1					
ANR	6201566	CallExpression	r_list_newf ( ( RListFree ) free )		6201470	1					
ANR	6201567	Callee	r_list_newf		6201470	0					
ANR	6201568	Identifier	r_list_newf		6201470	0					
ANR	6201569	ArgumentList	( RListFree ) free		6201470	1					
ANR	6201570	Argument	( RListFree ) free		6201470	0					
ANR	6201571	CastExpression	( RListFree ) free		6201470	0					
ANR	6201572	CastTarget	RListFree		6201470	0					
ANR	6201573	Identifier	free		6201470	1					
ANR	6201574	Statement	r_list_foreach	798:1:18328:18341	6201470	9	True				
ANR	6201575	Statement	(	798:16:18343:18343	6201470	10	True				
ANR	6201576	Statement	xrefs	798:17:18344:18348	6201470	11	True				
ANR	6201577	Statement	","	798:22:18349:18349	6201470	12	True				
ANR	6201578	Statement	iter	798:24:18351:18354	6201470	13	True				
ANR	6201579	Statement	","	798:28:18355:18355	6201470	14	True				
ANR	6201580	Statement	ref	798:30:18357:18359	6201470	15	True				
ANR	6201581	Statement	)	798:33:18360:18360	6201470	16	True				
ANR	6201582	CompoundStatement		17:35:374:374	6201470	17					
ANR	6201583	ExpressionStatement	"r_list_append ( it -> xrefs , strdup ( ref ) )"	799:2:18366:18405	6201470	0	True				
ANR	6201584	CallExpression	"r_list_append ( it -> xrefs , strdup ( ref ) )"		6201470	0					
ANR	6201585	Callee	r_list_append		6201470	0					
ANR	6201586	Identifier	r_list_append		6201470	0					
ANR	6201587	ArgumentList	it -> xrefs		6201470	1					
ANR	6201588	Argument	it -> xrefs		6201470	0					
ANR	6201589	PtrMemberAccess	it -> xrefs		6201470	0					
ANR	6201590	Identifier	it		6201470	0					
ANR	6201591	Identifier	xrefs		6201470	1					
ANR	6201592	Argument	strdup ( ref )		6201470	1					
ANR	6201593	CallExpression	strdup ( ref )		6201470	0					
ANR	6201594	Callee	strdup		6201470	0					
ANR	6201595	Identifier	strdup		6201470	0					
ANR	6201596	ArgumentList	ref		6201470	1					
ANR	6201597	Argument	ref		6201470	0					
ANR	6201598	Identifier	ref		6201470	0					
ANR	6201599	IdentifierDeclStatement	"bool retval = addItem ( a , it ) ;"	801:1:18411:18440	6201470	18	True				
ANR	6201600	IdentifierDecl	"retval = addItem ( a , it )"		6201470	0					
ANR	6201601	IdentifierDeclType	bool		6201470	0					
ANR	6201602	Identifier	retval		6201470	1					
ANR	6201603	AssignmentExpression	"retval = addItem ( a , it )"		6201470	2		=			
ANR	6201604	Identifier	retval		6201470	0					
ANR	6201605	CallExpression	"addItem ( a , it )"		6201470	1					
ANR	6201606	Callee	addItem		6201470	0					
ANR	6201607	Identifier	addItem		6201470	0					
ANR	6201608	ArgumentList	a		6201470	1					
ANR	6201609	Argument	a		6201470	0					
ANR	6201610	Identifier	a		6201470	0					
ANR	6201611	Argument	it		6201470	1					
ANR	6201612	Identifier	it		6201470	0					
ANR	6201613	ExpressionStatement	r_sign_item_free ( it )	802:1:18443:18464	6201470	19	True				
ANR	6201614	CallExpression	r_sign_item_free ( it )		6201470	0					
ANR	6201615	Callee	r_sign_item_free		6201470	0					
ANR	6201616	Identifier	r_sign_item_free		6201470	0					
ANR	6201617	ArgumentList	it		6201470	1					
ANR	6201618	Argument	it		6201470	0					
ANR	6201619	Identifier	it		6201470	0					
ANR	6201620	ReturnStatement	return retval ;	804:1:18468:18481	6201470	20	True				
ANR	6201621	Identifier	retval		6201470	0					
ANR	6201622	ReturnType	R_API bool		6201470	1					
ANR	6201623	Identifier	r_sign_add_xrefs		6201470	2					
ANR	6201624	ParameterList	"RAnal * a , const char * name , RList * xrefs"		6201470	3					
ANR	6201625	Parameter	RAnal * a	782:28:17945:17952	6201470	0	True				
ANR	6201626	ParameterType	RAnal *		6201470	0					
ANR	6201627	Identifier	a		6201470	1					
ANR	6201628	Parameter	const char * name	782:38:17955:17970	6201470	1	True				
ANR	6201629	ParameterType	const char *		6201470	0					
ANR	6201630	Identifier	name		6201470	1					
ANR	6201631	Parameter	RList * xrefs	782:56:17973:17984	6201470	2	True				
ANR	6201632	ParameterType	RList *		6201470	0					
ANR	6201633	Identifier	xrefs		6201470	1					
ANR	6201634	CFGEntryNode	ENTRY		6201470		True				
ANR	6201635	CFGExitNode	EXIT		6201470		True				
ANR	6201636	Symbol	a		6201470						
ANR	6201637	Symbol	r_sign_item_new		6201470						
ANR	6201638	Symbol	NULL		6201470						
ANR	6201639	Symbol	r_list_newf		6201470						
ANR	6201640	Symbol	it -> name		6201470						
ANR	6201641	Symbol	xrefs		6201470						
ANR	6201642	Symbol	false		6201470						
ANR	6201643	Symbol	iter		6201470						
ANR	6201644	Symbol	it		6201470						
ANR	6201645	Symbol	& a -> zign_spaces		6201470						
ANR	6201646	Symbol	retval		6201470						
ANR	6201647	Symbol	it -> space		6201470						
ANR	6201648	Symbol	addItem		6201470						
ANR	6201649	Symbol	ref		6201470						
ANR	6201650	Symbol	* it		6201470						
ANR	6201651	Symbol	name		6201470						
ANR	6201652	Symbol	it -> xrefs		6201470						
ANR	6201653	Symbol	strdup		6201470						
ANR	6201654	Symbol	free		6201470						
ANR	6201655	Symbol	r_spaces_current		6201470						
ANR	6201656	Symbol	r_str_new		6201470						
ANR	6201657	ClassDef	ctxDeleteCB	807:0:18486:18550							
ANR	6201658	DeclStmt									
ANR	6201659	Decl							RAnal	RAnal *	anal
ANR	6201660	DeclStmt									
ANR	6201661	Decl							char	char [ R_SIGN_KEY_MAXSZ ]	buf
ANR	6201662	Function	deleteBySpaceCB	812:0:18554:18788							
ANR	6201663	FunctionDef	"deleteBySpaceCB (void * user , const char * k , const char * v)"		6201662	0					
ANR	6201664	CompoundStatement		812:69:18623:18788	6201662	0					
ANR	6201665	IdentifierDeclStatement	struct ctxDeleteCB * ctx = ( struct ctxDeleteCB * ) user ;	813:1:18626:18679	6201662	0	True				
ANR	6201666	IdentifierDecl	* ctx = ( struct ctxDeleteCB * ) user		6201662	0					
ANR	6201667	IdentifierDeclType	struct ctxDeleteCB *		6201662	0					
ANR	6201668	Identifier	ctx		6201662	1					
ANR	6201669	AssignmentExpression	* ctx = ( struct ctxDeleteCB * ) user		6201662	2		=			
ANR	6201670	Identifier	ctx		6201662	0					
ANR	6201671	CastExpression	( struct ctxDeleteCB * ) user		6201662	1					
ANR	6201672	CastTarget	struct ctxDeleteCB *		6201662	0					
ANR	6201673	Identifier	user		6201662	1					
ANR	6201674	IfStatement	"if ( ! strncmp ( k , ctx -> buf , strlen ( ctx -> buf ) ) )"		6201662	1					
ANR	6201675	Condition	"! strncmp ( k , ctx -> buf , strlen ( ctx -> buf ) )"	814:5:18686:18726	6201662	0	True				
ANR	6201676	UnaryOperationExpression	"! strncmp ( k , ctx -> buf , strlen ( ctx -> buf ) )"		6201662	0					
ANR	6201677	UnaryOperator	!		6201662	0					
ANR	6201678	CallExpression	"strncmp ( k , ctx -> buf , strlen ( ctx -> buf ) )"		6201662	1					
ANR	6201679	Callee	strncmp		6201662	0					
ANR	6201680	Identifier	strncmp		6201662	0					
ANR	6201681	ArgumentList	k		6201662	1					
ANR	6201682	Argument	k		6201662	0					
ANR	6201683	Identifier	k		6201662	0					
ANR	6201684	Argument	ctx -> buf		6201662	1					
ANR	6201685	PtrMemberAccess	ctx -> buf		6201662	0					
ANR	6201686	Identifier	ctx		6201662	0					
ANR	6201687	Identifier	buf		6201662	1					
ANR	6201688	Argument	strlen ( ctx -> buf )		6201662	2					
ANR	6201689	CallExpression	strlen ( ctx -> buf )		6201662	0					
ANR	6201690	Callee	strlen		6201662	0					
ANR	6201691	Identifier	strlen		6201662	0					
ANR	6201692	ArgumentList	ctx -> buf		6201662	1					
ANR	6201693	Argument	ctx -> buf		6201662	0					
ANR	6201694	PtrMemberAccess	ctx -> buf		6201662	0					
ANR	6201695	Identifier	ctx		6201662	0					
ANR	6201696	Identifier	buf		6201662	1					
ANR	6201697	CompoundStatement		3:48:105:105	6201662	1					
ANR	6201698	ExpressionStatement	"sdb_remove ( ctx -> anal -> sdb_zigns , k , 0 )"	815:2:18733:18772	6201662	0	True				
ANR	6201699	CallExpression	"sdb_remove ( ctx -> anal -> sdb_zigns , k , 0 )"		6201662	0					
ANR	6201700	Callee	sdb_remove		6201662	0					
ANR	6201701	Identifier	sdb_remove		6201662	0					
ANR	6201702	ArgumentList	ctx -> anal -> sdb_zigns		6201662	1					
ANR	6201703	Argument	ctx -> anal -> sdb_zigns		6201662	0					
ANR	6201704	PtrMemberAccess	ctx -> anal -> sdb_zigns		6201662	0					
ANR	6201705	PtrMemberAccess	ctx -> anal		6201662	0					
ANR	6201706	Identifier	ctx		6201662	0					
ANR	6201707	Identifier	anal		6201662	1					
ANR	6201708	Identifier	sdb_zigns		6201662	1					
ANR	6201709	Argument	k		6201662	1					
ANR	6201710	Identifier	k		6201662	0					
ANR	6201711	Argument	0		6201662	2					
ANR	6201712	PrimaryExpression	0		6201662	0					
ANR	6201713	ReturnStatement	return 1 ;	817:1:18778:18786	6201662	2	True				
ANR	6201714	PrimaryExpression	1		6201662	0					
ANR	6201715	ReturnType	static int		6201662	1					
ANR	6201716	Identifier	deleteBySpaceCB		6201662	2					
ANR	6201717	ParameterList	"void * user , const char * k , const char * v"		6201662	3					
ANR	6201718	Parameter	void * user	812:27:18581:18590	6201662	0	True				
ANR	6201719	ParameterType	void *		6201662	0					
ANR	6201720	Identifier	user		6201662	1					
ANR	6201721	Parameter	const char * k	812:39:18593:18605	6201662	1	True				
ANR	6201722	ParameterType	const char *		6201662	0					
ANR	6201723	Identifier	k		6201662	1					
ANR	6201724	Parameter	const char * v	812:54:18608:18620	6201662	2	True				
ANR	6201725	ParameterType	const char *		6201662	0					
ANR	6201726	Identifier	v		6201662	1					
ANR	6201727	CFGEntryNode	ENTRY		6201662		True				
ANR	6201728	CFGExitNode	EXIT		6201662		True				
ANR	6201729	Symbol	strlen		6201662						
ANR	6201730	Symbol	strncmp		6201662						
ANR	6201731	Symbol	* ctx -> anal		6201662						
ANR	6201732	Symbol	v		6201662						
ANR	6201733	Symbol	ctx		6201662						
ANR	6201734	Symbol	ctx -> anal -> sdb_zigns		6201662						
ANR	6201735	Symbol	ctx -> anal		6201662						
ANR	6201736	Symbol	k		6201662						
ANR	6201737	Symbol	* * ctx		6201662						
ANR	6201738	Symbol	ctx -> buf		6201662						
ANR	6201739	Symbol	user		6201662						
ANR	6201740	Symbol	* ctx		6201662						
ANR	6201741	Function	r_sign_delete	820:0:18791:19366							
ANR	6201742	FunctionDef	"r_sign_delete (RAnal * a , const char * name)"		6201741	0					
ANR	6201743	CompoundStatement		820:53:18844:19366	6201741	0					
ANR	6201744	IdentifierDeclStatement	struct ctxDeleteCB ctx = { 0 } ;	821:1:18847:18875	6201741	0	True				
ANR	6201745	IdentifierDecl	ctx = { 0 }		6201741	0					
ANR	6201746	IdentifierDeclType	struct ctxDeleteCB		6201741	0					
ANR	6201747	Identifier	ctx		6201741	1					
ANR	6201748	AssignmentExpression	ctx = { 0 }		6201741	2		=			
ANR	6201749	Identifier	ctx		6201741	0					
ANR	6201750	InitializerList	0		6201741	1					
ANR	6201751	PrimaryExpression	0		6201741	0					
ANR	6201752	IdentifierDeclStatement	char k [ R_SIGN_KEY_MAXSZ ] ;	822:1:18878:18902	6201741	1	True				
ANR	6201753	IdentifierDecl	k [ R_SIGN_KEY_MAXSZ ]		6201741	0					
ANR	6201754	IdentifierDeclType	char [ R_SIGN_KEY_MAXSZ ]		6201741	0					
ANR	6201755	Identifier	k		6201741	1					
ANR	6201756	Identifier	R_SIGN_KEY_MAXSZ		6201741	2					
ANR	6201757	IfStatement	if ( ! a || ! name )		6201741	2					
ANR	6201758	Condition	! a || ! name	824:5:18910:18920	6201741	0	True				
ANR	6201759	OrExpression	! a || ! name		6201741	0		||			
ANR	6201760	UnaryOperationExpression	! a		6201741	0					
ANR	6201761	UnaryOperator	!		6201741	0					
ANR	6201762	Identifier	a		6201741	1					
ANR	6201763	UnaryOperationExpression	! name		6201741	1					
ANR	6201764	UnaryOperator	!		6201741	0					
ANR	6201765	Identifier	name		6201741	1					
ANR	6201766	CompoundStatement		5:18:78:78	6201741	1					
ANR	6201767	ReturnStatement	return false ;	825:2:18927:18939	6201741	0	True				
ANR	6201768	Identifier	false		6201741	0					
ANR	6201769	IfStatement	if ( * name == '*' )		6201741	3					
ANR	6201770	Condition	* name == '*'	828:5:18970:18981	6201741	0	True				
ANR	6201771	EqualityExpression	* name == '*'		6201741	0		==			
ANR	6201772	UnaryOperationExpression	* name		6201741	0					
ANR	6201773	UnaryOperator	*		6201741	0					
ANR	6201774	Identifier	name		6201741	1					
ANR	6201775	PrimaryExpression	'*'		6201741	1					
ANR	6201776	CompoundStatement		9:19:139:139	6201741	1					
ANR	6201777	IfStatement	if ( ! r_spaces_current ( & a -> zign_spaces ) )		6201741	0					
ANR	6201778	Condition	! r_spaces_current ( & a -> zign_spaces )	829:6:18992:19026	6201741	0	True				
ANR	6201779	UnaryOperationExpression	! r_spaces_current ( & a -> zign_spaces )		6201741	0					
ANR	6201780	UnaryOperator	!		6201741	0					
ANR	6201781	CallExpression	r_spaces_current ( & a -> zign_spaces )		6201741	1					
ANR	6201782	Callee	r_spaces_current		6201741	0					
ANR	6201783	Identifier	r_spaces_current		6201741	0					
ANR	6201784	ArgumentList	& a -> zign_spaces		6201741	1					
ANR	6201785	Argument	& a -> zign_spaces		6201741	0					
ANR	6201786	UnaryOperationExpression	& a -> zign_spaces		6201741	0					
ANR	6201787	UnaryOperator	&		6201741	0					
ANR	6201788	PtrMemberAccess	a -> zign_spaces		6201741	1					
ANR	6201789	Identifier	a		6201741	0					
ANR	6201790	Identifier	zign_spaces		6201741	1					
ANR	6201791	CompoundStatement		10:43:184:184	6201741	1					
ANR	6201792	ExpressionStatement	sdb_reset ( a -> sdb_zigns )	830:3:19034:19058	6201741	0	True				
ANR	6201793	CallExpression	sdb_reset ( a -> sdb_zigns )		6201741	0					
ANR	6201794	Callee	sdb_reset		6201741	0					
ANR	6201795	Identifier	sdb_reset		6201741	0					
ANR	6201796	ArgumentList	a -> sdb_zigns		6201741	1					
ANR	6201797	Argument	a -> sdb_zigns		6201741	0					
ANR	6201798	PtrMemberAccess	a -> sdb_zigns		6201741	0					
ANR	6201799	Identifier	a		6201741	0					
ANR	6201800	Identifier	sdb_zigns		6201741	1					
ANR	6201801	ReturnStatement	return true ;	831:3:19063:19074	6201741	1	True				
ANR	6201802	Identifier	true		6201741	0					
ANR	6201803	ExpressionStatement	ctx . anal = a	833:2:19082:19094	6201741	1	True				
ANR	6201804	AssignmentExpression	ctx . anal = a		6201741	0		=			
ANR	6201805	MemberAccess	ctx . anal		6201741	0					
ANR	6201806	Identifier	ctx		6201741	0					
ANR	6201807	Identifier	anal		6201741	1					
ANR	6201808	Identifier	a		6201741	1					
ANR	6201809	ExpressionStatement	"serializeKey ( a , r_spaces_current ( & a -> zign_spaces ) , """" , ctx . buf )"	834:2:19098:19163	6201741	2	True				
ANR	6201810	CallExpression	"serializeKey ( a , r_spaces_current ( & a -> zign_spaces ) , """" , ctx . buf )"		6201741	0					
ANR	6201811	Callee	serializeKey		6201741	0					
ANR	6201812	Identifier	serializeKey		6201741	0					
ANR	6201813	ArgumentList	a		6201741	1					
ANR	6201814	Argument	a		6201741	0					
ANR	6201815	Identifier	a		6201741	0					
ANR	6201816	Argument	r_spaces_current ( & a -> zign_spaces )		6201741	1					
ANR	6201817	CallExpression	r_spaces_current ( & a -> zign_spaces )		6201741	0					
ANR	6201818	Callee	r_spaces_current		6201741	0					
ANR	6201819	Identifier	r_spaces_current		6201741	0					
ANR	6201820	ArgumentList	& a -> zign_spaces		6201741	1					
ANR	6201821	Argument	& a -> zign_spaces		6201741	0					
ANR	6201822	UnaryOperationExpression	& a -> zign_spaces		6201741	0					
ANR	6201823	UnaryOperator	&		6201741	0					
ANR	6201824	PtrMemberAccess	a -> zign_spaces		6201741	1					
ANR	6201825	Identifier	a		6201741	0					
ANR	6201826	Identifier	zign_spaces		6201741	1					
ANR	6201827	Argument	""""""		6201741	2					
ANR	6201828	PrimaryExpression	""""""		6201741	0					
ANR	6201829	Argument	ctx . buf		6201741	3					
ANR	6201830	MemberAccess	ctx . buf		6201741	0					
ANR	6201831	Identifier	ctx		6201741	0					
ANR	6201832	Identifier	buf		6201741	1					
ANR	6201833	ExpressionStatement	"sdb_foreach ( a -> sdb_zigns , deleteBySpaceCB , & ctx )"	835:2:19167:19216	6201741	3	True				
ANR	6201834	CallExpression	"sdb_foreach ( a -> sdb_zigns , deleteBySpaceCB , & ctx )"		6201741	0					
ANR	6201835	Callee	sdb_foreach		6201741	0					
ANR	6201836	Identifier	sdb_foreach		6201741	0					
ANR	6201837	ArgumentList	a -> sdb_zigns		6201741	1					
ANR	6201838	Argument	a -> sdb_zigns		6201741	0					
ANR	6201839	PtrMemberAccess	a -> sdb_zigns		6201741	0					
ANR	6201840	Identifier	a		6201741	0					
ANR	6201841	Identifier	sdb_zigns		6201741	1					
ANR	6201842	Argument	deleteBySpaceCB		6201741	1					
ANR	6201843	Identifier	deleteBySpaceCB		6201741	0					
ANR	6201844	Argument	& ctx		6201741	2					
ANR	6201845	UnaryOperationExpression	& ctx		6201741	0					
ANR	6201846	UnaryOperator	&		6201741	0					
ANR	6201847	Identifier	ctx		6201741	1					
ANR	6201848	ReturnStatement	return true ;	836:2:19220:19231	6201741	4	True				
ANR	6201849	Identifier	true		6201741	0					
ANR	6201850	ExpressionStatement	"serializeKey ( a , r_spaces_current ( & a -> zign_spaces ) , name , k )"	839:1:19262:19323	6201741	4	True				
ANR	6201851	CallExpression	"serializeKey ( a , r_spaces_current ( & a -> zign_spaces ) , name , k )"		6201741	0					
ANR	6201852	Callee	serializeKey		6201741	0					
ANR	6201853	Identifier	serializeKey		6201741	0					
ANR	6201854	ArgumentList	a		6201741	1					
ANR	6201855	Argument	a		6201741	0					
ANR	6201856	Identifier	a		6201741	0					
ANR	6201857	Argument	r_spaces_current ( & a -> zign_spaces )		6201741	1					
ANR	6201858	CallExpression	r_spaces_current ( & a -> zign_spaces )		6201741	0					
ANR	6201859	Callee	r_spaces_current		6201741	0					
ANR	6201860	Identifier	r_spaces_current		6201741	0					
ANR	6201861	ArgumentList	& a -> zign_spaces		6201741	1					
ANR	6201862	Argument	& a -> zign_spaces		6201741	0					
ANR	6201863	UnaryOperationExpression	& a -> zign_spaces		6201741	0					
ANR	6201864	UnaryOperator	&		6201741	0					
ANR	6201865	PtrMemberAccess	a -> zign_spaces		6201741	1					
ANR	6201866	Identifier	a		6201741	0					
ANR	6201867	Identifier	zign_spaces		6201741	1					
ANR	6201868	Argument	name		6201741	2					
ANR	6201869	Identifier	name		6201741	0					
ANR	6201870	Argument	k		6201741	3					
ANR	6201871	Identifier	k		6201741	0					
ANR	6201872	ReturnStatement	"return sdb_remove ( a -> sdb_zigns , k , 0 ) ;"	840:1:19326:19364	6201741	5	True				
ANR	6201873	CallExpression	"sdb_remove ( a -> sdb_zigns , k , 0 )"		6201741	0					
ANR	6201874	Callee	sdb_remove		6201741	0					
ANR	6201875	Identifier	sdb_remove		6201741	0					
ANR	6201876	ArgumentList	a -> sdb_zigns		6201741	1					
ANR	6201877	Argument	a -> sdb_zigns		6201741	0					
ANR	6201878	PtrMemberAccess	a -> sdb_zigns		6201741	0					
ANR	6201879	Identifier	a		6201741	0					
ANR	6201880	Identifier	sdb_zigns		6201741	1					
ANR	6201881	Argument	k		6201741	1					
ANR	6201882	Identifier	k		6201741	0					
ANR	6201883	Argument	0		6201741	2					
ANR	6201884	PrimaryExpression	0		6201741	0					
ANR	6201885	ReturnType	R_API bool		6201741	1					
ANR	6201886	Identifier	r_sign_delete		6201741	2					
ANR	6201887	ParameterList	"RAnal * a , const char * name"		6201741	3					
ANR	6201888	Parameter	RAnal * a	820:25:18816:18823	6201741	0	True				
ANR	6201889	ParameterType	RAnal *		6201741	0					
ANR	6201890	Identifier	a		6201741	1					
ANR	6201891	Parameter	const char * name	820:35:18826:18841	6201741	1	True				
ANR	6201892	ParameterType	const char *		6201741	0					
ANR	6201893	Identifier	name		6201741	1					
ANR	6201894	CFGEntryNode	ENTRY		6201741		True				
ANR	6201895	CFGExitNode	EXIT		6201741		True				
ANR	6201896	Symbol	* name		6201741						
ANR	6201897	Symbol	a		6201741						
ANR	6201898	Symbol	ctx		6201741						
ANR	6201899	Symbol	false		6201741						
ANR	6201900	Symbol	& ctx		6201741						
ANR	6201901	Symbol	deleteBySpaceCB		6201741						
ANR	6201902	Symbol	k		6201741						
ANR	6201903	Symbol	* a		6201741						
ANR	6201904	Symbol	& a -> zign_spaces		6201741						
ANR	6201905	Symbol	ctx . anal		6201741						
ANR	6201906	Symbol	a -> sdb_zigns		6201741						
ANR	6201907	Symbol	sdb_remove		6201741						
ANR	6201908	Symbol	ctx . buf		6201741						
ANR	6201909	Symbol	name		6201741						
ANR	6201910	Symbol	true		6201741						
ANR	6201911	Symbol	r_spaces_current		6201741						
ANR	6201912	Function	matchBytes	843:0:19369:20258							
ANR	6201913	FunctionDef	"matchBytes (RSignItem * a , RSignItem * b)"		6201912	0					
ANR	6201914	CompoundStatement		843:53:19422:20258	6201912	0					
ANR	6201915	IdentifierDeclStatement	double result = 0.0 ;	844:1:19425:19444	6201912	0	True				
ANR	6201916	IdentifierDecl	result = 0.0		6201912	0					
ANR	6201917	IdentifierDeclType	double		6201912	0					
ANR	6201918	Identifier	result		6201912	1					
ANR	6201919	AssignmentExpression	result = 0.0		6201912	2		=			
ANR	6201920	Identifier	result		6201912	0					
ANR	6201921	PrimaryExpression	0.0		6201912	1					
ANR	6201922	IfStatement	if ( ! a -> bytes || ! b -> bytes )		6201912	1					
ANR	6201923	Condition	! a -> bytes || ! b -> bytes	846:5:19452:19473	6201912	0	True				
ANR	6201924	OrExpression	! a -> bytes || ! b -> bytes		6201912	0		||			
ANR	6201925	UnaryOperationExpression	! a -> bytes		6201912	0					
ANR	6201926	UnaryOperator	!		6201912	0					
ANR	6201927	PtrMemberAccess	a -> bytes		6201912	1					
ANR	6201928	Identifier	a		6201912	0					
ANR	6201929	Identifier	bytes		6201912	1					
ANR	6201930	UnaryOperationExpression	! b -> bytes		6201912	1					
ANR	6201931	UnaryOperator	!		6201912	0					
ANR	6201932	PtrMemberAccess	b -> bytes		6201912	1					
ANR	6201933	Identifier	b		6201912	0					
ANR	6201934	Identifier	bytes		6201912	1					
ANR	6201935	CompoundStatement		4:29:53:53	6201912	1					
ANR	6201936	ReturnStatement	return result ;	847:2:19480:19493	6201912	0	True				
ANR	6201937	Identifier	result		6201912	0					
ANR	6201938	IdentifierDeclStatement	"size_t min_size = R_MIN ( ( size_t ) a -> bytes -> size , ( size_t ) b -> bytes -> size ) ;"	850:1:19500:19574	6201912	2	True				
ANR	6201939	IdentifierDecl	"min_size = R_MIN ( ( size_t ) a -> bytes -> size , ( size_t ) b -> bytes -> size )"		6201912	0					
ANR	6201940	IdentifierDeclType	size_t		6201912	0					
ANR	6201941	Identifier	min_size		6201912	1					
ANR	6201942	AssignmentExpression	"min_size = R_MIN ( ( size_t ) a -> bytes -> size , ( size_t ) b -> bytes -> size )"		6201912	2		=			
ANR	6201943	Identifier	min_size		6201912	0					
ANR	6201944	CallExpression	"R_MIN ( ( size_t ) a -> bytes -> size , ( size_t ) b -> bytes -> size )"		6201912	1					
ANR	6201945	Callee	R_MIN		6201912	0					
ANR	6201946	Identifier	R_MIN		6201912	0					
ANR	6201947	ArgumentList	( size_t ) a -> bytes -> size		6201912	1					
ANR	6201948	Argument	( size_t ) a -> bytes -> size		6201912	0					
ANR	6201949	CastExpression	( size_t ) a -> bytes -> size		6201912	0					
ANR	6201950	CastTarget	size_t		6201912	0					
ANR	6201951	PtrMemberAccess	a -> bytes -> size		6201912	1					
ANR	6201952	PtrMemberAccess	a -> bytes		6201912	0					
ANR	6201953	Identifier	a		6201912	0					
ANR	6201954	Identifier	bytes		6201912	1					
ANR	6201955	Identifier	size		6201912	1					
ANR	6201956	Argument	( size_t ) b -> bytes -> size		6201912	1					
ANR	6201957	CastExpression	( size_t ) b -> bytes -> size		6201912	0					
ANR	6201958	CastTarget	size_t		6201912	0					
ANR	6201959	PtrMemberAccess	b -> bytes -> size		6201912	1					
ANR	6201960	PtrMemberAccess	b -> bytes		6201912	0					
ANR	6201961	Identifier	b		6201912	0					
ANR	6201962	Identifier	bytes		6201912	1					
ANR	6201963	Identifier	size		6201912	1					
ANR	6201964	IfStatement	if ( ! min_size )		6201912	3					
ANR	6201965	Condition	! min_size	851:5:19581:19589	6201912	0	True				
ANR	6201966	UnaryOperationExpression	! min_size		6201912	0					
ANR	6201967	UnaryOperator	!		6201912	0					
ANR	6201968	Identifier	min_size		6201912	1					
ANR	6201969	CompoundStatement		9:16:169:169	6201912	1					
ANR	6201970	ReturnStatement	return result ;	852:2:19596:19609	6201912	0	True				
ANR	6201971	Identifier	result		6201912	0					
ANR	6201972	IdentifierDeclStatement	ut8 * combined_mask = NULL ;	855:1:19616:19641	6201912	4	True				
ANR	6201973	IdentifierDecl	* combined_mask = NULL		6201912	0					
ANR	6201974	IdentifierDeclType	ut8 *		6201912	0					
ANR	6201975	Identifier	combined_mask		6201912	1					
ANR	6201976	AssignmentExpression	* combined_mask = NULL		6201912	2		=			
ANR	6201977	Identifier	NULL		6201912	0					
ANR	6201978	Identifier	NULL		6201912	1					
ANR	6201979	IfStatement	if ( a -> bytes -> mask || b -> bytes -> mask )		6201912	5					
ANR	6201980	Condition	a -> bytes -> mask || b -> bytes -> mask	856:5:19648:19679	6201912	0	True				
ANR	6201981	OrExpression	a -> bytes -> mask || b -> bytes -> mask		6201912	0		||			
ANR	6201982	PtrMemberAccess	a -> bytes -> mask		6201912	0					
ANR	6201983	PtrMemberAccess	a -> bytes		6201912	0					
ANR	6201984	Identifier	a		6201912	0					
ANR	6201985	Identifier	bytes		6201912	1					
ANR	6201986	Identifier	mask		6201912	1					
ANR	6201987	PtrMemberAccess	b -> bytes -> mask		6201912	1					
ANR	6201988	PtrMemberAccess	b -> bytes		6201912	0					
ANR	6201989	Identifier	b		6201912	0					
ANR	6201990	Identifier	bytes		6201912	1					
ANR	6201991	Identifier	mask		6201912	1					
ANR	6201992	CompoundStatement		14:39:259:259	6201912	1					
ANR	6201993	ExpressionStatement	combined_mask = ( ut8 * ) malloc ( min_size )	857:2:19686:19726	6201912	0	True				
ANR	6201994	AssignmentExpression	combined_mask = ( ut8 * ) malloc ( min_size )		6201912	0		=			
ANR	6201995	Identifier	combined_mask		6201912	0					
ANR	6201996	CastExpression	( ut8 * ) malloc ( min_size )		6201912	1					
ANR	6201997	CastTarget	ut8 *		6201912	0					
ANR	6201998	CallExpression	malloc ( min_size )		6201912	1					
ANR	6201999	Callee	malloc		6201912	0					
ANR	6202000	Identifier	malloc		6201912	0					
ANR	6202001	ArgumentList	min_size		6201912	1					
ANR	6202002	Argument	min_size		6201912	0					
ANR	6202003	Identifier	min_size		6201912	0					
ANR	6202004	IfStatement	if ( ! combined_mask )		6201912	1					
ANR	6202005	Condition	! combined_mask	858:6:19734:19747	6201912	0	True				
ANR	6202006	UnaryOperationExpression	! combined_mask		6201912	0					
ANR	6202007	UnaryOperator	!		6201912	0					
ANR	6202008	Identifier	combined_mask		6201912	1					
ANR	6202009	CompoundStatement		16:22:327:327	6201912	1					
ANR	6202010	ReturnStatement	return result ;	859:3:19755:19768	6201912	0	True				
ANR	6202011	Identifier	result		6201912	0					
ANR	6202012	ExpressionStatement	"memcpy ( combined_mask , a -> bytes -> mask , min_size )"	861:2:19776:19824	6201912	2	True				
ANR	6202013	CallExpression	"memcpy ( combined_mask , a -> bytes -> mask , min_size )"		6201912	0					
ANR	6202014	Callee	memcpy		6201912	0					
ANR	6202015	Identifier	memcpy		6201912	0					
ANR	6202016	ArgumentList	combined_mask		6201912	1					
ANR	6202017	Argument	combined_mask		6201912	0					
ANR	6202018	Identifier	combined_mask		6201912	0					
ANR	6202019	Argument	a -> bytes -> mask		6201912	1					
ANR	6202020	PtrMemberAccess	a -> bytes -> mask		6201912	0					
ANR	6202021	PtrMemberAccess	a -> bytes		6201912	0					
ANR	6202022	Identifier	a		6201912	0					
ANR	6202023	Identifier	bytes		6201912	1					
ANR	6202024	Identifier	mask		6201912	1					
ANR	6202025	Argument	min_size		6201912	2					
ANR	6202026	Identifier	min_size		6201912	0					
ANR	6202027	IfStatement	if ( b -> bytes -> mask )		6201912	3					
ANR	6202028	Condition	b -> bytes -> mask	862:6:19832:19845	6201912	0	True				
ANR	6202029	PtrMemberAccess	b -> bytes -> mask		6201912	0					
ANR	6202030	PtrMemberAccess	b -> bytes		6201912	0					
ANR	6202031	Identifier	b		6201912	0					
ANR	6202032	Identifier	bytes		6201912	1					
ANR	6202033	Identifier	mask		6201912	1					
ANR	6202034	CompoundStatement		21:3:430:435	6201912	1					
ANR	6202035	IdentifierDeclStatement	int i ;	863:3:19853:19858	6201912	0	True				
ANR	6202036	IdentifierDecl	i		6201912	0					
ANR	6202037	IdentifierDeclType	int		6201912	0					
ANR	6202038	Identifier	i		6201912	1					
ANR	6202039	ForStatement	for ( i = 0 ; i != min_size ; i ++ )		6201912	1					
ANR	6202040	ForInit	i = 0 ;	864:8:19868:19873	6201912	0	True				
ANR	6202041	AssignmentExpression	i = 0		6201912	0		=			
ANR	6202042	Identifier	i		6201912	0					
ANR	6202043	PrimaryExpression	0		6201912	1					
ANR	6202044	Condition	i != min_size	864:15:19875:19887	6201912	1	True				
ANR	6202045	EqualityExpression	i != min_size		6201912	0		!=			
ANR	6202046	Identifier	i		6201912	0					
ANR	6202047	Identifier	min_size		6201912	1					
ANR	6202048	PostIncDecOperationExpression	i ++	864:30:19890:19892	6201912	2	True				
ANR	6202049	Identifier	i		6201912	0					
ANR	6202050	IncDec	++		6201912	1					
ANR	6202051	CompoundStatement		22:35:472:472	6201912	3					
ANR	6202052	ExpressionStatement	combined_mask [ i ] &= b -> bytes -> mask [ i ]	865:4:19901:19938	6201912	0	True				
ANR	6202053	AssignmentExpression	combined_mask [ i ] &= b -> bytes -> mask [ i ]		6201912	0		&=			
ANR	6202054	ArrayIndexing	combined_mask [ i ]		6201912	0					
ANR	6202055	Identifier	combined_mask		6201912	0					
ANR	6202056	Identifier	i		6201912	1					
ANR	6202057	ArrayIndexing	b -> bytes -> mask [ i ]		6201912	1					
ANR	6202058	PtrMemberAccess	b -> bytes -> mask		6201912	0					
ANR	6202059	PtrMemberAccess	b -> bytes		6201912	0					
ANR	6202060	Identifier	b		6201912	0					
ANR	6202061	Identifier	bytes		6201912	1					
ANR	6202062	Identifier	mask		6201912	1					
ANR	6202063	Identifier	i		6201912	1					
ANR	6202064	IfStatement	"if ( ( combined_mask && ! r_mem_cmp_mask ( a -> bytes -> bytes , b -> bytes -> bytes , combined_mask , min_size ) ) || ( ! combined_mask && ! memcmp ( a -> bytes -> bytes , b -> bytes -> bytes , min_size ) ) )"		6201912	6					
ANR	6202065	Condition	"( combined_mask && ! r_mem_cmp_mask ( a -> bytes -> bytes , b -> bytes -> bytes , combined_mask , min_size ) ) || ( ! combined_mask && ! memcmp ( a -> bytes -> bytes , b -> bytes -> bytes , min_size ) )"	870:5:19958:20129	6201912	0	True				
ANR	6202066	OrExpression	"( combined_mask && ! r_mem_cmp_mask ( a -> bytes -> bytes , b -> bytes -> bytes , combined_mask , min_size ) ) || ( ! combined_mask && ! memcmp ( a -> bytes -> bytes , b -> bytes -> bytes , min_size ) )"		6201912	0		||			
ANR	6202067	AndExpression	"combined_mask && ! r_mem_cmp_mask ( a -> bytes -> bytes , b -> bytes -> bytes , combined_mask , min_size )"		6201912	0		&&			
ANR	6202068	Identifier	combined_mask		6201912	0					
ANR	6202069	UnaryOperationExpression	"! r_mem_cmp_mask ( a -> bytes -> bytes , b -> bytes -> bytes , combined_mask , min_size )"		6201912	1					
ANR	6202070	UnaryOperator	!		6201912	0					
ANR	6202071	CallExpression	"r_mem_cmp_mask ( a -> bytes -> bytes , b -> bytes -> bytes , combined_mask , min_size )"		6201912	1					
ANR	6202072	Callee	r_mem_cmp_mask		6201912	0					
ANR	6202073	Identifier	r_mem_cmp_mask		6201912	0					
ANR	6202074	ArgumentList	a -> bytes -> bytes		6201912	1					
ANR	6202075	Argument	a -> bytes -> bytes		6201912	0					
ANR	6202076	PtrMemberAccess	a -> bytes -> bytes		6201912	0					
ANR	6202077	PtrMemberAccess	a -> bytes		6201912	0					
ANR	6202078	Identifier	a		6201912	0					
ANR	6202079	Identifier	bytes		6201912	1					
ANR	6202080	Identifier	bytes		6201912	1					
ANR	6202081	Argument	b -> bytes -> bytes		6201912	1					
ANR	6202082	PtrMemberAccess	b -> bytes -> bytes		6201912	0					
ANR	6202083	PtrMemberAccess	b -> bytes		6201912	0					
ANR	6202084	Identifier	b		6201912	0					
ANR	6202085	Identifier	bytes		6201912	1					
ANR	6202086	Identifier	bytes		6201912	1					
ANR	6202087	Argument	combined_mask		6201912	2					
ANR	6202088	Identifier	combined_mask		6201912	0					
ANR	6202089	Argument	min_size		6201912	3					
ANR	6202090	Identifier	min_size		6201912	0					
ANR	6202091	AndExpression	"! combined_mask && ! memcmp ( a -> bytes -> bytes , b -> bytes -> bytes , min_size )"		6201912	1		&&			
ANR	6202092	UnaryOperationExpression	! combined_mask		6201912	0					
ANR	6202093	UnaryOperator	!		6201912	0					
ANR	6202094	Identifier	combined_mask		6201912	1					
ANR	6202095	UnaryOperationExpression	"! memcmp ( a -> bytes -> bytes , b -> bytes -> bytes , min_size )"		6201912	1					
ANR	6202096	UnaryOperator	!		6201912	0					
ANR	6202097	CallExpression	"memcmp ( a -> bytes -> bytes , b -> bytes -> bytes , min_size )"		6201912	1					
ANR	6202098	Callee	memcmp		6201912	0					
ANR	6202099	Identifier	memcmp		6201912	0					
ANR	6202100	ArgumentList	a -> bytes -> bytes		6201912	1					
ANR	6202101	Argument	a -> bytes -> bytes		6201912	0					
ANR	6202102	PtrMemberAccess	a -> bytes -> bytes		6201912	0					
ANR	6202103	PtrMemberAccess	a -> bytes		6201912	0					
ANR	6202104	Identifier	a		6201912	0					
ANR	6202105	Identifier	bytes		6201912	1					
ANR	6202106	Identifier	bytes		6201912	1					
ANR	6202107	Argument	b -> bytes -> bytes		6201912	1					
ANR	6202108	PtrMemberAccess	b -> bytes -> bytes		6201912	0					
ANR	6202109	PtrMemberAccess	b -> bytes		6201912	0					
ANR	6202110	Identifier	b		6201912	0					
ANR	6202111	Identifier	bytes		6201912	1					
ANR	6202112	Identifier	bytes		6201912	1					
ANR	6202113	Argument	min_size		6201912	2					
ANR	6202114	Identifier	min_size		6201912	0					
ANR	6202115	CompoundStatement		29:76:709:709	6201912	1					
ANR	6202116	ExpressionStatement	"result = ( double ) min_size / ( double ) R_MAX ( a -> bytes -> size , b -> bytes -> size )"	872:2:20136:20212	6201912	0	True				
ANR	6202117	AssignmentExpression	"result = ( double ) min_size / ( double ) R_MAX ( a -> bytes -> size , b -> bytes -> size )"		6201912	0		=			
ANR	6202118	Identifier	result		6201912	0					
ANR	6202119	MultiplicativeExpression	"( double ) min_size / ( double ) R_MAX ( a -> bytes -> size , b -> bytes -> size )"		6201912	1		/			
ANR	6202120	CastExpression	( double ) min_size		6201912	0					
ANR	6202121	CastTarget	double		6201912	0					
ANR	6202122	Identifier	min_size		6201912	1					
ANR	6202123	CastExpression	"( double ) R_MAX ( a -> bytes -> size , b -> bytes -> size )"		6201912	1					
ANR	6202124	CastTarget	double		6201912	0					
ANR	6202125	CallExpression	"R_MAX ( a -> bytes -> size , b -> bytes -> size )"		6201912	1					
ANR	6202126	Callee	R_MAX		6201912	0					
ANR	6202127	Identifier	R_MAX		6201912	0					
ANR	6202128	ArgumentList	a -> bytes -> size		6201912	1					
ANR	6202129	Argument	a -> bytes -> size		6201912	0					
ANR	6202130	PtrMemberAccess	a -> bytes -> size		6201912	0					
ANR	6202131	PtrMemberAccess	a -> bytes		6201912	0					
ANR	6202132	Identifier	a		6201912	0					
ANR	6202133	Identifier	bytes		6201912	1					
ANR	6202134	Identifier	size		6201912	1					
ANR	6202135	Argument	b -> bytes -> size		6201912	1					
ANR	6202136	PtrMemberAccess	b -> bytes -> size		6201912	0					
ANR	6202137	PtrMemberAccess	b -> bytes		6201912	0					
ANR	6202138	Identifier	b		6201912	0					
ANR	6202139	Identifier	bytes		6201912	1					
ANR	6202140	Identifier	size		6201912	1					
ANR	6202141	ExpressionStatement	free ( combined_mask )	875:1:20219:20239	6201912	7	True				
ANR	6202142	CallExpression	free ( combined_mask )		6201912	0					
ANR	6202143	Callee	free		6201912	0					
ANR	6202144	Identifier	free		6201912	0					
ANR	6202145	ArgumentList	combined_mask		6201912	1					
ANR	6202146	Argument	combined_mask		6201912	0					
ANR	6202147	Identifier	combined_mask		6201912	0					
ANR	6202148	ReturnStatement	return result ;	877:1:20243:20256	6201912	8	True				
ANR	6202149	Identifier	result		6201912	0					
ANR	6202150	ReturnType	static double		6201912	1					
ANR	6202151	Identifier	matchBytes		6201912	2					
ANR	6202152	ParameterList	"RSignItem * a , RSignItem * b"		6201912	3					
ANR	6202153	Parameter	RSignItem * a	843:25:19394:19405	6201912	0	True				
ANR	6202154	ParameterType	RSignItem *		6201912	0					
ANR	6202155	Identifier	a		6201912	1					
ANR	6202156	Parameter	RSignItem * b	843:39:19408:19419	6201912	1	True				
ANR	6202157	ParameterType	RSignItem *		6201912	0					
ANR	6202158	Identifier	b		6201912	1					
ANR	6202159	CFGEntryNode	ENTRY		6201912		True				
ANR	6202160	CFGExitNode	EXIT		6201912		True				
ANR	6202161	Symbol	b -> bytes		6201912						
ANR	6202162	Symbol	* b -> bytes		6201912						
ANR	6202163	Symbol	combined_mask		6201912						
ANR	6202164	Symbol	* b -> bytes -> mask		6201912						
ANR	6202165	Symbol	r_mem_cmp_mask		6201912						
ANR	6202166	Symbol	result		6201912						
ANR	6202167	Symbol	* combined_mask		6201912						
ANR	6202168	Symbol	memcmp		6201912						
ANR	6202169	Symbol	a -> bytes -> size		6201912						
ANR	6202170	Symbol	b -> bytes -> size		6201912						
ANR	6202171	Symbol	* * b -> bytes		6201912						
ANR	6202172	Symbol	b -> bytes -> bytes		6201912						
ANR	6202173	Symbol	a		6201912						
ANR	6202174	Symbol	malloc		6201912						
ANR	6202175	Symbol	b		6201912						
ANR	6202176	Symbol	NULL		6201912						
ANR	6202177	Symbol	* * b		6201912						
ANR	6202178	Symbol	i		6201912						
ANR	6202179	Symbol	a -> bytes		6201912						
ANR	6202180	Symbol	R_MIN		6201912						
ANR	6202181	Symbol	* * a		6201912						
ANR	6202182	Symbol	* a		6201912						
ANR	6202183	Symbol	* b		6201912						
ANR	6202184	Symbol	a -> bytes -> mask		6201912						
ANR	6202185	Symbol	* i		6201912						
ANR	6202186	Symbol	a -> bytes -> bytes		6201912						
ANR	6202187	Symbol	b -> bytes -> mask		6201912						
ANR	6202188	Symbol	R_MAX		6201912						
ANR	6202189	Symbol	min_size		6201912						
ANR	6202190	Symbol	* a -> bytes		6201912						
ANR	6202191	Symbol	* * * b		6201912						
ANR	6202192	Function	matchGraph	883:0:20397:20820							
ANR	6202193	FunctionDef	"matchGraph (RSignItem * a , RSignItem * b)"		6202192	0					
ANR	6202194	CompoundStatement		883:53:20450:20820	6202192	0					
ANR	6202195	IfStatement	if ( ! a -> graph || ! b -> graph )		6202192	0					
ANR	6202196	Condition	! a -> graph || ! b -> graph	884:5:20457:20478	6202192	0	True				
ANR	6202197	OrExpression	! a -> graph || ! b -> graph		6202192	0		||			
ANR	6202198	UnaryOperationExpression	! a -> graph		6202192	0					
ANR	6202199	UnaryOperator	!		6202192	0					
ANR	6202200	PtrMemberAccess	a -> graph		6202192	1					
ANR	6202201	Identifier	a		6202192	0					
ANR	6202202	Identifier	graph		6202192	1					
ANR	6202203	UnaryOperationExpression	! b -> graph		6202192	1					
ANR	6202204	UnaryOperator	!		6202192	0					
ANR	6202205	PtrMemberAccess	b -> graph		6202192	1					
ANR	6202206	Identifier	b		6202192	0					
ANR	6202207	Identifier	graph		6202192	1					
ANR	6202208	CompoundStatement		2:29:30:30	6202192	1					
ANR	6202209	ReturnStatement	return 0.0 ;	885:2:20485:20495	6202192	0	True				
ANR	6202210	PrimaryExpression	0.0		6202192	0					
ANR	6202211	IdentifierDeclStatement	double total = 0.0 ;	888:1:20502:20520	6202192	1	True				
ANR	6202212	IdentifierDecl	total = 0.0		6202192	0					
ANR	6202213	IdentifierDeclType	double		6202192	0					
ANR	6202214	Identifier	total		6202192	1					
ANR	6202215	AssignmentExpression	total = 0.0		6202192	2		=			
ANR	6202216	Identifier	total		6202192	0					
ANR	6202217	PrimaryExpression	0.0		6202192	1					
ANR	6202218	ExpressionStatement	"total += SIMILARITY ( a -> graph -> cc , b -> graph -> cc )"	890:1:20524:20572	6202192	2	True				
ANR	6202219	AssignmentExpression	"total += SIMILARITY ( a -> graph -> cc , b -> graph -> cc )"		6202192	0		+=			
ANR	6202220	Identifier	total		6202192	0					
ANR	6202221	CallExpression	"SIMILARITY ( a -> graph -> cc , b -> graph -> cc )"		6202192	1					
ANR	6202222	Callee	SIMILARITY		6202192	0					
ANR	6202223	Identifier	SIMILARITY		6202192	0					
ANR	6202224	ArgumentList	a -> graph -> cc		6202192	1					
ANR	6202225	Argument	a -> graph -> cc		6202192	0					
ANR	6202226	PtrMemberAccess	a -> graph -> cc		6202192	0					
ANR	6202227	PtrMemberAccess	a -> graph		6202192	0					
ANR	6202228	Identifier	a		6202192	0					
ANR	6202229	Identifier	graph		6202192	1					
ANR	6202230	Identifier	cc		6202192	1					
ANR	6202231	Argument	b -> graph -> cc		6202192	1					
ANR	6202232	PtrMemberAccess	b -> graph -> cc		6202192	0					
ANR	6202233	PtrMemberAccess	b -> graph		6202192	0					
ANR	6202234	Identifier	b		6202192	0					
ANR	6202235	Identifier	graph		6202192	1					
ANR	6202236	Identifier	cc		6202192	1					
ANR	6202237	ExpressionStatement	"total += SIMILARITY ( a -> graph -> nbbs , b -> graph -> nbbs )"	891:1:20575:20627	6202192	3	True				
ANR	6202238	AssignmentExpression	"total += SIMILARITY ( a -> graph -> nbbs , b -> graph -> nbbs )"		6202192	0		+=			
ANR	6202239	Identifier	total		6202192	0					
ANR	6202240	CallExpression	"SIMILARITY ( a -> graph -> nbbs , b -> graph -> nbbs )"		6202192	1					
ANR	6202241	Callee	SIMILARITY		6202192	0					
ANR	6202242	Identifier	SIMILARITY		6202192	0					
ANR	6202243	ArgumentList	a -> graph -> nbbs		6202192	1					
ANR	6202244	Argument	a -> graph -> nbbs		6202192	0					
ANR	6202245	PtrMemberAccess	a -> graph -> nbbs		6202192	0					
ANR	6202246	PtrMemberAccess	a -> graph		6202192	0					
ANR	6202247	Identifier	a		6202192	0					
ANR	6202248	Identifier	graph		6202192	1					
ANR	6202249	Identifier	nbbs		6202192	1					
ANR	6202250	Argument	b -> graph -> nbbs		6202192	1					
ANR	6202251	PtrMemberAccess	b -> graph -> nbbs		6202192	0					
ANR	6202252	PtrMemberAccess	b -> graph		6202192	0					
ANR	6202253	Identifier	b		6202192	0					
ANR	6202254	Identifier	graph		6202192	1					
ANR	6202255	Identifier	nbbs		6202192	1					
ANR	6202256	ExpressionStatement	"total += SIMILARITY ( a -> graph -> ebbs , b -> graph -> ebbs )"	892:1:20630:20682	6202192	4	True				
ANR	6202257	AssignmentExpression	"total += SIMILARITY ( a -> graph -> ebbs , b -> graph -> ebbs )"		6202192	0		+=			
ANR	6202258	Identifier	total		6202192	0					
ANR	6202259	CallExpression	"SIMILARITY ( a -> graph -> ebbs , b -> graph -> ebbs )"		6202192	1					
ANR	6202260	Callee	SIMILARITY		6202192	0					
ANR	6202261	Identifier	SIMILARITY		6202192	0					
ANR	6202262	ArgumentList	a -> graph -> ebbs		6202192	1					
ANR	6202263	Argument	a -> graph -> ebbs		6202192	0					
ANR	6202264	PtrMemberAccess	a -> graph -> ebbs		6202192	0					
ANR	6202265	PtrMemberAccess	a -> graph		6202192	0					
ANR	6202266	Identifier	a		6202192	0					
ANR	6202267	Identifier	graph		6202192	1					
ANR	6202268	Identifier	ebbs		6202192	1					
ANR	6202269	Argument	b -> graph -> ebbs		6202192	1					
ANR	6202270	PtrMemberAccess	b -> graph -> ebbs		6202192	0					
ANR	6202271	PtrMemberAccess	b -> graph		6202192	0					
ANR	6202272	Identifier	b		6202192	0					
ANR	6202273	Identifier	graph		6202192	1					
ANR	6202274	Identifier	ebbs		6202192	1					
ANR	6202275	ExpressionStatement	"total += SIMILARITY ( a -> graph -> edges , b -> graph -> edges )"	893:1:20685:20739	6202192	5	True				
ANR	6202276	AssignmentExpression	"total += SIMILARITY ( a -> graph -> edges , b -> graph -> edges )"		6202192	0		+=			
ANR	6202277	Identifier	total		6202192	0					
ANR	6202278	CallExpression	"SIMILARITY ( a -> graph -> edges , b -> graph -> edges )"		6202192	1					
ANR	6202279	Callee	SIMILARITY		6202192	0					
ANR	6202280	Identifier	SIMILARITY		6202192	0					
ANR	6202281	ArgumentList	a -> graph -> edges		6202192	1					
ANR	6202282	Argument	a -> graph -> edges		6202192	0					
ANR	6202283	PtrMemberAccess	a -> graph -> edges		6202192	0					
ANR	6202284	PtrMemberAccess	a -> graph		6202192	0					
ANR	6202285	Identifier	a		6202192	0					
ANR	6202286	Identifier	graph		6202192	1					
ANR	6202287	Identifier	edges		6202192	1					
ANR	6202288	Argument	b -> graph -> edges		6202192	1					
ANR	6202289	PtrMemberAccess	b -> graph -> edges		6202192	0					
ANR	6202290	PtrMemberAccess	b -> graph		6202192	0					
ANR	6202291	Identifier	b		6202192	0					
ANR	6202292	Identifier	graph		6202192	1					
ANR	6202293	Identifier	edges		6202192	1					
ANR	6202294	ExpressionStatement	"total += SIMILARITY ( a -> graph -> bbsum , b -> graph -> bbsum )"	894:1:20742:20796	6202192	6	True				
ANR	6202295	AssignmentExpression	"total += SIMILARITY ( a -> graph -> bbsum , b -> graph -> bbsum )"		6202192	0		+=			
ANR	6202296	Identifier	total		6202192	0					
ANR	6202297	CallExpression	"SIMILARITY ( a -> graph -> bbsum , b -> graph -> bbsum )"		6202192	1					
ANR	6202298	Callee	SIMILARITY		6202192	0					
ANR	6202299	Identifier	SIMILARITY		6202192	0					
ANR	6202300	ArgumentList	a -> graph -> bbsum		6202192	1					
ANR	6202301	Argument	a -> graph -> bbsum		6202192	0					
ANR	6202302	PtrMemberAccess	a -> graph -> bbsum		6202192	0					
ANR	6202303	PtrMemberAccess	a -> graph		6202192	0					
ANR	6202304	Identifier	a		6202192	0					
ANR	6202305	Identifier	graph		6202192	1					
ANR	6202306	Identifier	bbsum		6202192	1					
ANR	6202307	Argument	b -> graph -> bbsum		6202192	1					
ANR	6202308	PtrMemberAccess	b -> graph -> bbsum		6202192	0					
ANR	6202309	PtrMemberAccess	b -> graph		6202192	0					
ANR	6202310	Identifier	b		6202192	0					
ANR	6202311	Identifier	graph		6202192	1					
ANR	6202312	Identifier	bbsum		6202192	1					
ANR	6202313	ReturnStatement	return total / 5.0 ;	896:1:20800:20818	6202192	7	True				
ANR	6202314	MultiplicativeExpression	total / 5.0		6202192	0		/			
ANR	6202315	Identifier	total		6202192	0					
ANR	6202316	PrimaryExpression	5.0		6202192	1					
ANR	6202317	ReturnType	static double		6202192	1					
ANR	6202318	Identifier	matchGraph		6202192	2					
ANR	6202319	ParameterList	"RSignItem * a , RSignItem * b"		6202192	3					
ANR	6202320	Parameter	RSignItem * a	883:25:20422:20433	6202192	0	True				
ANR	6202321	ParameterType	RSignItem *		6202192	0					
ANR	6202322	Identifier	a		6202192	1					
ANR	6202323	Parameter	RSignItem * b	883:39:20436:20447	6202192	1	True				
ANR	6202324	ParameterType	RSignItem *		6202192	0					
ANR	6202325	Identifier	b		6202192	1					
ANR	6202326	CFGEntryNode	ENTRY		6202192		True				
ANR	6202327	CFGExitNode	EXIT		6202192		True				
ANR	6202328	Symbol	a		6202192						
ANR	6202329	Symbol	b -> graph -> ebbs		6202192						
ANR	6202330	Symbol	b		6202192						
ANR	6202331	Symbol	b -> graph		6202192						
ANR	6202332	Symbol	* a -> graph		6202192						
ANR	6202333	Symbol	a -> graph -> edges		6202192						
ANR	6202334	Symbol	* * b		6202192						
ANR	6202335	Symbol	a -> graph		6202192						
ANR	6202336	Symbol	* b -> graph		6202192						
ANR	6202337	Symbol	* * a		6202192						
ANR	6202338	Symbol	* a		6202192						
ANR	6202339	Symbol	* b		6202192						
ANR	6202340	Symbol	a -> graph -> cc		6202192						
ANR	6202341	Symbol	b -> graph -> nbbs		6202192						
ANR	6202342	Symbol	b -> graph -> edges		6202192						
ANR	6202343	Symbol	b -> graph -> bbsum		6202192						
ANR	6202344	Symbol	total		6202192						
ANR	6202345	Symbol	a -> graph -> ebbs		6202192						
ANR	6202346	Symbol	b -> graph -> cc		6202192						
ANR	6202347	Symbol	a -> graph -> bbsum		6202192						
ANR	6202348	Symbol	SIMILARITY		6202192						
ANR	6202349	Symbol	a -> graph -> nbbs		6202192						
ANR	6202350	Function	r_sign_diff	899:0:20823:23254							
ANR	6202351	FunctionDef	"r_sign_diff (RAnal * a , RSignOptions * options , const char * other_space_name)"		6202350	0					
ANR	6202352	CompoundStatement		899:86:20909:23254	6202350	0					
ANR	6202353	IdentifierDeclStatement	char k [ R_SIGN_KEY_MAXSZ ] ;	900:1:20912:20936	6202350	0	True				
ANR	6202354	IdentifierDecl	k [ R_SIGN_KEY_MAXSZ ]		6202350	0					
ANR	6202355	IdentifierDeclType	char [ R_SIGN_KEY_MAXSZ ]		6202350	0					
ANR	6202356	Identifier	k		6202350	1					
ANR	6202357	Identifier	R_SIGN_KEY_MAXSZ		6202350	2					
ANR	6202358	ExpressionStatement	"r_return_val_if_fail ( a && other_space_name , false )"	902:1:20940:20991	6202350	1	True				
ANR	6202359	CallExpression	"r_return_val_if_fail ( a && other_space_name , false )"		6202350	0					
ANR	6202360	Callee	r_return_val_if_fail		6202350	0					
ANR	6202361	Identifier	r_return_val_if_fail		6202350	0					
ANR	6202362	ArgumentList	a && other_space_name		6202350	1					
ANR	6202363	Argument	a && other_space_name		6202350	0					
ANR	6202364	AndExpression	a && other_space_name		6202350	0		&&			
ANR	6202365	Identifier	a		6202350	0					
ANR	6202366	Identifier	other_space_name		6202350	1					
ANR	6202367	Argument	false		6202350	1					
ANR	6202368	Identifier	false		6202350	0					
ANR	6202369	IdentifierDeclStatement	RSpace * current_space = r_spaces_current ( & a -> zign_spaces ) ;	904:1:20995:21053	6202350	2	True				
ANR	6202370	IdentifierDecl	* current_space = r_spaces_current ( & a -> zign_spaces )		6202350	0					
ANR	6202371	IdentifierDeclType	RSpace *		6202350	0					
ANR	6202372	Identifier	current_space		6202350	1					
ANR	6202373	AssignmentExpression	* current_space = r_spaces_current ( & a -> zign_spaces )		6202350	2		=			
ANR	6202374	Identifier	current_space		6202350	0					
ANR	6202375	CallExpression	r_spaces_current ( & a -> zign_spaces )		6202350	1					
ANR	6202376	Callee	r_spaces_current		6202350	0					
ANR	6202377	Identifier	r_spaces_current		6202350	0					
ANR	6202378	ArgumentList	& a -> zign_spaces		6202350	1					
ANR	6202379	Argument	& a -> zign_spaces		6202350	0					
ANR	6202380	UnaryOperationExpression	& a -> zign_spaces		6202350	0					
ANR	6202381	UnaryOperator	&		6202350	0					
ANR	6202382	PtrMemberAccess	a -> zign_spaces		6202350	1					
ANR	6202383	Identifier	a		6202350	0					
ANR	6202384	Identifier	zign_spaces		6202350	1					
ANR	6202385	IfStatement	if ( ! current_space )		6202350	3					
ANR	6202386	Condition	! current_space	905:5:21060:21073	6202350	0	True				
ANR	6202387	UnaryOperationExpression	! current_space		6202350	0					
ANR	6202388	UnaryOperator	!		6202350	0					
ANR	6202389	Identifier	current_space		6202350	1					
ANR	6202390	CompoundStatement		7:21:166:166	6202350	1					
ANR	6202391	ReturnStatement	return false ;	906:2:21080:21092	6202350	0	True				
ANR	6202392	Identifier	false		6202350	0					
ANR	6202393	IdentifierDeclStatement	"RSpace * other_space = r_spaces_get ( & a -> zign_spaces , other_space_name ) ;"	908:1:21098:21168	6202350	4	True				
ANR	6202394	IdentifierDecl	"* other_space = r_spaces_get ( & a -> zign_spaces , other_space_name )"		6202350	0					
ANR	6202395	IdentifierDeclType	RSpace *		6202350	0					
ANR	6202396	Identifier	other_space		6202350	1					
ANR	6202397	AssignmentExpression	"* other_space = r_spaces_get ( & a -> zign_spaces , other_space_name )"		6202350	2		=			
ANR	6202398	Identifier	other_space		6202350	0					
ANR	6202399	CallExpression	"r_spaces_get ( & a -> zign_spaces , other_space_name )"		6202350	1					
ANR	6202400	Callee	r_spaces_get		6202350	0					
ANR	6202401	Identifier	r_spaces_get		6202350	0					
ANR	6202402	ArgumentList	& a -> zign_spaces		6202350	1					
ANR	6202403	Argument	& a -> zign_spaces		6202350	0					
ANR	6202404	UnaryOperationExpression	& a -> zign_spaces		6202350	0					
ANR	6202405	UnaryOperator	&		6202350	0					
ANR	6202406	PtrMemberAccess	a -> zign_spaces		6202350	1					
ANR	6202407	Identifier	a		6202350	0					
ANR	6202408	Identifier	zign_spaces		6202350	1					
ANR	6202409	Argument	other_space_name		6202350	1					
ANR	6202410	Identifier	other_space_name		6202350	0					
ANR	6202411	IfStatement	if ( ! other_space )		6202350	5					
ANR	6202412	Condition	! other_space	909:5:21175:21186	6202350	0	True				
ANR	6202413	UnaryOperationExpression	! other_space		6202350	0					
ANR	6202414	UnaryOperator	!		6202350	0					
ANR	6202415	Identifier	other_space		6202350	1					
ANR	6202416	CompoundStatement		11:19:279:279	6202350	1					
ANR	6202417	ReturnStatement	return false ;	910:2:21193:21205	6202350	0	True				
ANR	6202418	Identifier	false		6202350	0					
ANR	6202419	ExpressionStatement	"serializeKey ( a , current_space , """" , k )"	913:1:21212:21250	6202350	6	True				
ANR	6202420	CallExpression	"serializeKey ( a , current_space , """" , k )"		6202350	0					
ANR	6202421	Callee	serializeKey		6202350	0					
ANR	6202422	Identifier	serializeKey		6202350	0					
ANR	6202423	ArgumentList	a		6202350	1					
ANR	6202424	Argument	a		6202350	0					
ANR	6202425	Identifier	a		6202350	0					
ANR	6202426	Argument	current_space		6202350	1					
ANR	6202427	Identifier	current_space		6202350	0					
ANR	6202428	Argument	""""""		6202350	2					
ANR	6202429	PrimaryExpression	""""""		6202350	0					
ANR	6202430	Argument	k		6202350	3					
ANR	6202431	Identifier	k		6202350	0					
ANR	6202432	IdentifierDeclStatement	"SdbList * current_zigns = sdb_foreach_match ( a -> sdb_zigns , k , false ) ;"	914:1:21253:21320	6202350	7	True				
ANR	6202433	IdentifierDecl	"* current_zigns = sdb_foreach_match ( a -> sdb_zigns , k , false )"		6202350	0					
ANR	6202434	IdentifierDeclType	SdbList *		6202350	0					
ANR	6202435	Identifier	current_zigns		6202350	1					
ANR	6202436	AssignmentExpression	"* current_zigns = sdb_foreach_match ( a -> sdb_zigns , k , false )"		6202350	2		=			
ANR	6202437	Identifier	current_zigns		6202350	0					
ANR	6202438	CallExpression	"sdb_foreach_match ( a -> sdb_zigns , k , false )"		6202350	1					
ANR	6202439	Callee	sdb_foreach_match		6202350	0					
ANR	6202440	Identifier	sdb_foreach_match		6202350	0					
ANR	6202441	ArgumentList	a -> sdb_zigns		6202350	1					
ANR	6202442	Argument	a -> sdb_zigns		6202350	0					
ANR	6202443	PtrMemberAccess	a -> sdb_zigns		6202350	0					
ANR	6202444	Identifier	a		6202350	0					
ANR	6202445	Identifier	sdb_zigns		6202350	1					
ANR	6202446	Argument	k		6202350	1					
ANR	6202447	Identifier	k		6202350	0					
ANR	6202448	Argument	false		6202350	2					
ANR	6202449	Identifier	false		6202350	0					
ANR	6202450	ExpressionStatement	"serializeKey ( a , other_space , """" , k )"	916:1:21324:21360	6202350	8	True				
ANR	6202451	CallExpression	"serializeKey ( a , other_space , """" , k )"		6202350	0					
ANR	6202452	Callee	serializeKey		6202350	0					
ANR	6202453	Identifier	serializeKey		6202350	0					
ANR	6202454	ArgumentList	a		6202350	1					
ANR	6202455	Argument	a		6202350	0					
ANR	6202456	Identifier	a		6202350	0					
ANR	6202457	Argument	other_space		6202350	1					
ANR	6202458	Identifier	other_space		6202350	0					
ANR	6202459	Argument	""""""		6202350	2					
ANR	6202460	PrimaryExpression	""""""		6202350	0					
ANR	6202461	Argument	k		6202350	3					
ANR	6202462	Identifier	k		6202350	0					
ANR	6202463	IdentifierDeclStatement	"SdbList * other_zigns = sdb_foreach_match ( a -> sdb_zigns , k , false ) ;"	917:1:21363:21428	6202350	9	True				
ANR	6202464	IdentifierDecl	"* other_zigns = sdb_foreach_match ( a -> sdb_zigns , k , false )"		6202350	0					
ANR	6202465	IdentifierDeclType	SdbList *		6202350	0					
ANR	6202466	Identifier	other_zigns		6202350	1					
ANR	6202467	AssignmentExpression	"* other_zigns = sdb_foreach_match ( a -> sdb_zigns , k , false )"		6202350	2		=			
ANR	6202468	Identifier	other_zigns		6202350	0					
ANR	6202469	CallExpression	"sdb_foreach_match ( a -> sdb_zigns , k , false )"		6202350	1					
ANR	6202470	Callee	sdb_foreach_match		6202350	0					
ANR	6202471	Identifier	sdb_foreach_match		6202350	0					
ANR	6202472	ArgumentList	a -> sdb_zigns		6202350	1					
ANR	6202473	Argument	a -> sdb_zigns		6202350	0					
ANR	6202474	PtrMemberAccess	a -> sdb_zigns		6202350	0					
ANR	6202475	Identifier	a		6202350	0					
ANR	6202476	Identifier	sdb_zigns		6202350	1					
ANR	6202477	Argument	k		6202350	1					
ANR	6202478	Identifier	k		6202350	0					
ANR	6202479	Argument	false		6202350	2					
ANR	6202480	Identifier	false		6202350	0					
ANR	6202481	ExpressionStatement	"eprintf ( ""Diff %d %d\\n"" , ( int ) ls_length ( current_zigns ) , ( int ) ls_length ( other_zigns ) )"	919:1:21432:21518	6202350	10	True				
ANR	6202482	CallExpression	"eprintf ( ""Diff %d %d\\n"" , ( int ) ls_length ( current_zigns ) , ( int ) ls_length ( other_zigns ) )"		6202350	0					
ANR	6202483	Callee	eprintf		6202350	0					
ANR	6202484	Identifier	eprintf		6202350	0					
ANR	6202485	ArgumentList	"""Diff %d %d\\n"""		6202350	1					
ANR	6202486	Argument	"""Diff %d %d\\n"""		6202350	0					
ANR	6202487	PrimaryExpression	"""Diff %d %d\\n"""		6202350	0					
ANR	6202488	Argument	( int ) ls_length ( current_zigns )		6202350	1					
ANR	6202489	CastExpression	( int ) ls_length ( current_zigns )		6202350	0					
ANR	6202490	CastTarget	int		6202350	0					
ANR	6202491	CallExpression	ls_length ( current_zigns )		6202350	1					
ANR	6202492	Callee	ls_length		6202350	0					
ANR	6202493	Identifier	ls_length		6202350	0					
ANR	6202494	ArgumentList	current_zigns		6202350	1					
ANR	6202495	Argument	current_zigns		6202350	0					
ANR	6202496	Identifier	current_zigns		6202350	0					
ANR	6202497	Argument	( int ) ls_length ( other_zigns )		6202350	2					
ANR	6202498	CastExpression	( int ) ls_length ( other_zigns )		6202350	0					
ANR	6202499	CastTarget	int		6202350	0					
ANR	6202500	CallExpression	ls_length ( other_zigns )		6202350	1					
ANR	6202501	Callee	ls_length		6202350	0					
ANR	6202502	Identifier	ls_length		6202350	0					
ANR	6202503	ArgumentList	other_zigns		6202350	1					
ANR	6202504	Argument	other_zigns		6202350	0					
ANR	6202505	Identifier	other_zigns		6202350	0					
ANR	6202506	IdentifierDeclStatement	SdbListIter * iter ;	921:1:21522:21539	6202350	11	True				
ANR	6202507	IdentifierDecl	* iter		6202350	0					
ANR	6202508	IdentifierDeclType	SdbListIter *		6202350	0					
ANR	6202509	Identifier	iter		6202350	1					
ANR	6202510	IdentifierDeclStatement	SdbKv * kv ;	922:1:21542:21551	6202350	12	True				
ANR	6202511	IdentifierDecl	* kv		6202350	0					
ANR	6202512	IdentifierDeclType	SdbKv *		6202350	0					
ANR	6202513	Identifier	kv		6202350	1					
ANR	6202514	IdentifierDeclStatement	RList * lb = NULL ;	923:1:21554:21570	6202350	13	True				
ANR	6202515	IdentifierDecl	* lb = NULL		6202350	0					
ANR	6202516	IdentifierDeclType	RList *		6202350	0					
ANR	6202517	Identifier	lb		6202350	1					
ANR	6202518	AssignmentExpression	* lb = NULL		6202350	2		=			
ANR	6202519	Identifier	NULL		6202350	0					
ANR	6202520	Identifier	NULL		6202350	1					
ANR	6202521	IdentifierDeclStatement	RList * la = r_list_new ( ) ;	924:1:21573:21598	6202350	14	True				
ANR	6202522	IdentifierDecl	* la = r_list_new ( )		6202350	0					
ANR	6202523	IdentifierDeclType	RList *		6202350	0					
ANR	6202524	Identifier	la		6202350	1					
ANR	6202525	AssignmentExpression	* la = r_list_new ( )		6202350	2		=			
ANR	6202526	Identifier	la		6202350	0					
ANR	6202527	CallExpression	r_list_new ( )		6202350	1					
ANR	6202528	Callee	r_list_new		6202350	0					
ANR	6202529	Identifier	r_list_new		6202350	0					
ANR	6202530	ArgumentList			6202350	1					
ANR	6202531	IfStatement	if ( ! la )		6202350	15					
ANR	6202532	Condition	! la	925:5:21605:21607	6202350	0	True				
ANR	6202533	UnaryOperationExpression	! la		6202350	0					
ANR	6202534	UnaryOperator	!		6202350	0					
ANR	6202535	Identifier	la		6202350	1					
ANR	6202536	CompoundStatement		27:10:700:700	6202350	1					
ANR	6202537	GotoStatement	goto beach ;	926:2:21614:21624	6202350	0	True				
ANR	6202538	Identifier	beach		6202350	0					
ANR	6202539	Statement	ls_foreach	928:1:21630:21639	6202350	16	True				
ANR	6202540	Statement	(	928:12:21641:21641	6202350	17	True				
ANR	6202541	Statement	current_zigns	928:13:21642:21654	6202350	18	True				
ANR	6202542	Statement	","	928:26:21655:21655	6202350	19	True				
ANR	6202543	Statement	iter	928:28:21657:21660	6202350	20	True				
ANR	6202544	Statement	","	928:32:21661:21661	6202350	21	True				
ANR	6202545	Statement	kv	928:34:21663:21664	6202350	22	True				
ANR	6202546	Statement	)	928:36:21665:21665	6202350	23	True				
ANR	6202547	CompoundStatement		31:2:761:795	6202350	24					
ANR	6202548	IdentifierDeclStatement	RSignItem * it = r_sign_item_new ( ) ;	929:2:21671:21705	6202350	0	True				
ANR	6202549	IdentifierDecl	* it = r_sign_item_new ( )		6202350	0					
ANR	6202550	IdentifierDeclType	RSignItem *		6202350	0					
ANR	6202551	Identifier	it		6202350	1					
ANR	6202552	AssignmentExpression	* it = r_sign_item_new ( )		6202350	2		=			
ANR	6202553	Identifier	it		6202350	0					
ANR	6202554	CallExpression	r_sign_item_new ( )		6202350	1					
ANR	6202555	Callee	r_sign_item_new		6202350	0					
ANR	6202556	Identifier	r_sign_item_new		6202350	0					
ANR	6202557	ArgumentList			6202350	1					
ANR	6202558	IfStatement	if ( ! it )		6202350	1					
ANR	6202559	Condition	! it	930:6:21713:21715	6202350	0	True				
ANR	6202560	UnaryOperationExpression	! it		6202350	0					
ANR	6202561	UnaryOperator	!		6202350	0					
ANR	6202562	Identifier	it		6202350	1					
ANR	6202563	CompoundStatement		32:11:808:808	6202350	1					
ANR	6202564	GotoStatement	goto beach ;	931:3:21723:21733	6202350	0	True				
ANR	6202565	Identifier	beach		6202350	0					
ANR	6202566	IfStatement	"if ( r_sign_deserialize ( a , it , kv -> base . key , kv -> base . value ) )"		6202350	2					
ANR	6202567	Condition	"r_sign_deserialize ( a , it , kv -> base . key , kv -> base . value )"	933:6:21745:21800	6202350	0	True				
ANR	6202568	CallExpression	"r_sign_deserialize ( a , it , kv -> base . key , kv -> base . value )"		6202350	0					
ANR	6202569	Callee	r_sign_deserialize		6202350	0					
ANR	6202570	Identifier	r_sign_deserialize		6202350	0					
ANR	6202571	ArgumentList	a		6202350	1					
ANR	6202572	Argument	a		6202350	0					
ANR	6202573	Identifier	a		6202350	0					
ANR	6202574	Argument	it		6202350	1					
ANR	6202575	Identifier	it		6202350	0					
ANR	6202576	Argument	kv -> base . key		6202350	2					
ANR	6202577	MemberAccess	kv -> base . key		6202350	0					
ANR	6202578	PtrMemberAccess	kv -> base		6202350	0					
ANR	6202579	Identifier	kv		6202350	0					
ANR	6202580	Identifier	base		6202350	1					
ANR	6202581	Identifier	key		6202350	1					
ANR	6202582	Argument	kv -> base . value		6202350	3					
ANR	6202583	MemberAccess	kv -> base . value		6202350	0					
ANR	6202584	PtrMemberAccess	kv -> base		6202350	0					
ANR	6202585	Identifier	kv		6202350	0					
ANR	6202586	Identifier	base		6202350	1					
ANR	6202587	Identifier	value		6202350	1					
ANR	6202588	CompoundStatement		35:64:893:893	6202350	1					
ANR	6202589	ExpressionStatement	"r_list_append ( la , it )"	934:3:21808:21830	6202350	0	True				
ANR	6202590	CallExpression	"r_list_append ( la , it )"		6202350	0					
ANR	6202591	Callee	r_list_append		6202350	0					
ANR	6202592	Identifier	r_list_append		6202350	0					
ANR	6202593	ArgumentList	la		6202350	1					
ANR	6202594	Argument	la		6202350	0					
ANR	6202595	Identifier	la		6202350	0					
ANR	6202596	Argument	it		6202350	1					
ANR	6202597	Identifier	it		6202350	0					
ANR	6202598	ElseStatement	else		6202350	0					
ANR	6202599	CompoundStatement		37:9:931:931	6202350	0					
ANR	6202600	ExpressionStatement	r_sign_item_free ( it )	936:3:21846:21867	6202350	0	True				
ANR	6202601	CallExpression	r_sign_item_free ( it )		6202350	0					
ANR	6202602	Callee	r_sign_item_free		6202350	0					
ANR	6202603	Identifier	r_sign_item_free		6202350	0					
ANR	6202604	ArgumentList	it		6202350	1					
ANR	6202605	Argument	it		6202350	0					
ANR	6202606	Identifier	it		6202350	0					
ANR	6202607	ExpressionStatement	lb = r_list_new ( )	939:1:21877:21895	6202350	25	True				
ANR	6202608	AssignmentExpression	lb = r_list_new ( )		6202350	0		=			
ANR	6202609	Identifier	lb		6202350	0					
ANR	6202610	CallExpression	r_list_new ( )		6202350	1					
ANR	6202611	Callee	r_list_new		6202350	0					
ANR	6202612	Identifier	r_list_new		6202350	0					
ANR	6202613	ArgumentList			6202350	1					
ANR	6202614	IfStatement	if ( ! lb )		6202350	26					
ANR	6202615	Condition	! lb	940:5:21902:21904	6202350	0	True				
ANR	6202616	UnaryOperationExpression	! lb		6202350	0					
ANR	6202617	UnaryOperator	!		6202350	0					
ANR	6202618	Identifier	lb		6202350	1					
ANR	6202619	CompoundStatement		42:10:997:997	6202350	1					
ANR	6202620	GotoStatement	goto beach ;	941:2:21911:21921	6202350	0	True				
ANR	6202621	Identifier	beach		6202350	0					
ANR	6202622	Statement	ls_foreach	943:1:21927:21936	6202350	27	True				
ANR	6202623	Statement	(	943:12:21938:21938	6202350	28	True				
ANR	6202624	Statement	other_zigns	943:13:21939:21949	6202350	29	True				
ANR	6202625	Statement	","	943:24:21950:21950	6202350	30	True				
ANR	6202626	Statement	iter	943:26:21952:21955	6202350	31	True				
ANR	6202627	Statement	","	943:30:21956:21956	6202350	32	True				
ANR	6202628	Statement	kv	943:32:21958:21959	6202350	33	True				
ANR	6202629	Statement	)	943:34:21960:21960	6202350	34	True				
ANR	6202630	CompoundStatement		46:2:1056:1090	6202350	35					
ANR	6202631	IdentifierDeclStatement	RSignItem * it = r_sign_item_new ( ) ;	944:2:21966:22000	6202350	0	True				
ANR	6202632	IdentifierDecl	* it = r_sign_item_new ( )		6202350	0					
ANR	6202633	IdentifierDeclType	RSignItem *		6202350	0					
ANR	6202634	Identifier	it		6202350	1					
ANR	6202635	AssignmentExpression	* it = r_sign_item_new ( )		6202350	2		=			
ANR	6202636	Identifier	it		6202350	0					
ANR	6202637	CallExpression	r_sign_item_new ( )		6202350	1					
ANR	6202638	Callee	r_sign_item_new		6202350	0					
ANR	6202639	Identifier	r_sign_item_new		6202350	0					
ANR	6202640	ArgumentList			6202350	1					
ANR	6202641	IfStatement	if ( ! it )		6202350	1					
ANR	6202642	Condition	! it	945:6:22008:22010	6202350	0	True				
ANR	6202643	UnaryOperationExpression	! it		6202350	0					
ANR	6202644	UnaryOperator	!		6202350	0					
ANR	6202645	Identifier	it		6202350	1					
ANR	6202646	CompoundStatement		47:11:1103:1103	6202350	1					
ANR	6202647	GotoStatement	goto beach ;	946:3:22018:22028	6202350	0	True				
ANR	6202648	Identifier	beach		6202350	0					
ANR	6202649	IfStatement	"if ( r_sign_deserialize ( a , it , kv -> base . key , kv -> base . value ) )"		6202350	2					
ANR	6202650	Condition	"r_sign_deserialize ( a , it , kv -> base . key , kv -> base . value )"	948:6:22040:22095	6202350	0	True				
ANR	6202651	CallExpression	"r_sign_deserialize ( a , it , kv -> base . key , kv -> base . value )"		6202350	0					
ANR	6202652	Callee	r_sign_deserialize		6202350	0					
ANR	6202653	Identifier	r_sign_deserialize		6202350	0					
ANR	6202654	ArgumentList	a		6202350	1					
ANR	6202655	Argument	a		6202350	0					
ANR	6202656	Identifier	a		6202350	0					
ANR	6202657	Argument	it		6202350	1					
ANR	6202658	Identifier	it		6202350	0					
ANR	6202659	Argument	kv -> base . key		6202350	2					
ANR	6202660	MemberAccess	kv -> base . key		6202350	0					
ANR	6202661	PtrMemberAccess	kv -> base		6202350	0					
ANR	6202662	Identifier	kv		6202350	0					
ANR	6202663	Identifier	base		6202350	1					
ANR	6202664	Identifier	key		6202350	1					
ANR	6202665	Argument	kv -> base . value		6202350	3					
ANR	6202666	MemberAccess	kv -> base . value		6202350	0					
ANR	6202667	PtrMemberAccess	kv -> base		6202350	0					
ANR	6202668	Identifier	kv		6202350	0					
ANR	6202669	Identifier	base		6202350	1					
ANR	6202670	Identifier	value		6202350	1					
ANR	6202671	CompoundStatement		50:64:1188:1188	6202350	1					
ANR	6202672	ExpressionStatement	"r_list_append ( lb , it )"	949:3:22103:22125	6202350	0	True				
ANR	6202673	CallExpression	"r_list_append ( lb , it )"		6202350	0					
ANR	6202674	Callee	r_list_append		6202350	0					
ANR	6202675	Identifier	r_list_append		6202350	0					
ANR	6202676	ArgumentList	lb		6202350	1					
ANR	6202677	Argument	lb		6202350	0					
ANR	6202678	Identifier	lb		6202350	0					
ANR	6202679	Argument	it		6202350	1					
ANR	6202680	Identifier	it		6202350	0					
ANR	6202681	ElseStatement	else		6202350	0					
ANR	6202682	CompoundStatement		52:9:1226:1226	6202350	0					
ANR	6202683	ExpressionStatement	r_sign_item_free ( it )	951:3:22141:22162	6202350	0	True				
ANR	6202684	CallExpression	r_sign_item_free ( it )		6202350	0					
ANR	6202685	Callee	r_sign_item_free		6202350	0					
ANR	6202686	Identifier	r_sign_item_free		6202350	0					
ANR	6202687	ArgumentList	it		6202350	1					
ANR	6202688	Argument	it		6202350	0					
ANR	6202689	Identifier	it		6202350	0					
ANR	6202690	ExpressionStatement	ls_free ( current_zigns )	955:1:22173:22196	6202350	36	True				
ANR	6202691	CallExpression	ls_free ( current_zigns )		6202350	0					
ANR	6202692	Callee	ls_free		6202350	0					
ANR	6202693	Identifier	ls_free		6202350	0					
ANR	6202694	ArgumentList	current_zigns		6202350	1					
ANR	6202695	Argument	current_zigns		6202350	0					
ANR	6202696	Identifier	current_zigns		6202350	0					
ANR	6202697	ExpressionStatement	ls_free ( other_zigns )	956:1:22199:22220	6202350	37	True				
ANR	6202698	CallExpression	ls_free ( other_zigns )		6202350	0					
ANR	6202699	Callee	ls_free		6202350	0					
ANR	6202700	Identifier	ls_free		6202350	0					
ANR	6202701	ArgumentList	other_zigns		6202350	1					
ANR	6202702	Argument	other_zigns		6202350	0					
ANR	6202703	Identifier	other_zigns		6202350	0					
ANR	6202704	IdentifierDeclStatement	RListIter * itr ;	958:1:22224:22238	6202350	38	True				
ANR	6202705	IdentifierDecl	* itr		6202350	0					
ANR	6202706	IdentifierDeclType	RListIter *		6202350	0					
ANR	6202707	Identifier	itr		6202350	1					
ANR	6202708	IdentifierDeclStatement	RListIter * itr2 ;	959:1:22241:22256	6202350	39	True				
ANR	6202709	IdentifierDecl	* itr2		6202350	0					
ANR	6202710	IdentifierDeclType	RListIter *		6202350	0					
ANR	6202711	Identifier	itr2		6202350	1					
ANR	6202712	IdentifierDeclStatement	RSignItem * si ;	960:1:22259:22272	6202350	40	True				
ANR	6202713	IdentifierDecl	* si		6202350	0					
ANR	6202714	IdentifierDeclType	RSignItem *		6202350	0					
ANR	6202715	Identifier	si		6202350	1					
ANR	6202716	IdentifierDeclStatement	RSignItem * si2 ;	961:1:22275:22289	6202350	41	True				
ANR	6202717	IdentifierDecl	* si2		6202350	0					
ANR	6202718	IdentifierDeclType	RSignItem *		6202350	0					
ANR	6202719	Identifier	si2		6202350	1					
ANR	6202720	Statement	r_list_foreach	964:1:22319:22332	6202350	42	True				
ANR	6202721	Statement	(	964:16:22334:22334	6202350	43	True				
ANR	6202722	Statement	la	964:17:22335:22336	6202350	44	True				
ANR	6202723	Statement	","	964:19:22337:22337	6202350	45	True				
ANR	6202724	Statement	itr	964:21:22339:22341	6202350	46	True				
ANR	6202725	Statement	","	964:24:22342:22342	6202350	47	True				
ANR	6202726	Statement	si	964:26:22344:22345	6202350	48	True				
ANR	6202727	Statement	)	964:28:22346:22346	6202350	49	True				
ANR	6202728	CompoundStatement		66:30:1438:1438	6202350	50					
ANR	6202729	IfStatement	"if ( strstr ( si -> name , ""imp."" ) )"		6202350	0					
ANR	6202730	Condition	"strstr ( si -> name , ""imp."" )"	965:6:22356:22380	6202350	0	True				
ANR	6202731	CallExpression	"strstr ( si -> name , ""imp."" )"		6202350	0					
ANR	6202732	Callee	strstr		6202350	0					
ANR	6202733	Identifier	strstr		6202350	0					
ANR	6202734	ArgumentList	si -> name		6202350	1					
ANR	6202735	Argument	si -> name		6202350	0					
ANR	6202736	PtrMemberAccess	si -> name		6202350	0					
ANR	6202737	Identifier	si		6202350	0					
ANR	6202738	Identifier	name		6202350	1					
ANR	6202739	Argument	"""imp."""		6202350	1					
ANR	6202740	PrimaryExpression	"""imp."""		6202350	0					
ANR	6202741	CompoundStatement		67:33:1473:1473	6202350	1					
ANR	6202742	ContinueStatement	continue ;	966:3:22388:22396	6202350	0	True				
ANR	6202743	Statement	r_list_foreach	968:2:22404:22417	6202350	1	True				
ANR	6202744	Statement	(	968:17:22419:22419	6202350	2	True				
ANR	6202745	Statement	lb	968:18:22420:22421	6202350	3	True				
ANR	6202746	Statement	","	968:20:22422:22422	6202350	4	True				
ANR	6202747	Statement	itr2	968:22:22424:22427	6202350	5	True				
ANR	6202748	Statement	","	968:26:22428:22428	6202350	6	True				
ANR	6202749	Statement	si2	968:28:22430:22432	6202350	7	True				
ANR	6202750	Statement	)	968:31:22433:22433	6202350	8	True				
ANR	6202751	CompoundStatement		77:3:1788:1895	6202350	9					
ANR	6202752	IfStatement	"if ( strstr ( si2 -> name , ""imp."" ) )"		6202350	0					
ANR	6202753	Condition	"strstr ( si2 -> name , ""imp."" )"	969:7:22444:22469	6202350	0	True				
ANR	6202754	CallExpression	"strstr ( si2 -> name , ""imp."" )"		6202350	0					
ANR	6202755	Callee	strstr		6202350	0					
ANR	6202756	Identifier	strstr		6202350	0					
ANR	6202757	ArgumentList	si2 -> name		6202350	1					
ANR	6202758	Argument	si2 -> name		6202350	0					
ANR	6202759	PtrMemberAccess	si2 -> name		6202350	0					
ANR	6202760	Identifier	si2		6202350	0					
ANR	6202761	Identifier	name		6202350	1					
ANR	6202762	Argument	"""imp."""		6202350	1					
ANR	6202763	PrimaryExpression	"""imp."""		6202350	0					
ANR	6202764	CompoundStatement		71:35:1562:1562	6202350	1					
ANR	6202765	ContinueStatement	continue ;	970:4:22478:22486	6202350	0	True				
ANR	6202766	IdentifierDeclStatement	"double bytesScore = matchBytes ( si , si2 ) ;"	972:3:22496:22536	6202350	1	True				
ANR	6202767	IdentifierDecl	"bytesScore = matchBytes ( si , si2 )"		6202350	0					
ANR	6202768	IdentifierDeclType	double		6202350	0					
ANR	6202769	Identifier	bytesScore		6202350	1					
ANR	6202770	AssignmentExpression	"bytesScore = matchBytes ( si , si2 )"		6202350	2		=			
ANR	6202771	Identifier	bytesScore		6202350	0					
ANR	6202772	CallExpression	"matchBytes ( si , si2 )"		6202350	1					
ANR	6202773	Callee	matchBytes		6202350	0					
ANR	6202774	Identifier	matchBytes		6202350	0					
ANR	6202775	ArgumentList	si		6202350	1					
ANR	6202776	Argument	si		6202350	0					
ANR	6202777	Identifier	si		6202350	0					
ANR	6202778	Argument	si2		6202350	1					
ANR	6202779	Identifier	si2		6202350	0					
ANR	6202780	IdentifierDeclStatement	"double graphScore = matchGraph ( si , si2 ) ;"	973:3:22541:22581	6202350	2	True				
ANR	6202781	IdentifierDecl	"graphScore = matchGraph ( si , si2 )"		6202350	0					
ANR	6202782	IdentifierDeclType	double		6202350	0					
ANR	6202783	Identifier	graphScore		6202350	1					
ANR	6202784	AssignmentExpression	"graphScore = matchGraph ( si , si2 )"		6202350	2		=			
ANR	6202785	Identifier	graphScore		6202350	0					
ANR	6202786	CallExpression	"matchGraph ( si , si2 )"		6202350	1					
ANR	6202787	Callee	matchGraph		6202350	0					
ANR	6202788	Identifier	matchGraph		6202350	0					
ANR	6202789	ArgumentList	si		6202350	1					
ANR	6202790	Argument	si		6202350	0					
ANR	6202791	Identifier	si		6202350	0					
ANR	6202792	Argument	si2		6202350	1					
ANR	6202793	Identifier	si2		6202350	0					
ANR	6202794	IdentifierDeclStatement	bool bytesMatch = bytesScore >= ( options ? options -> bytes_diff_threshold : SIGN_DIFF_MATCH_BYTES_THRESHOLD ) ;	974:3:22586:22693	6202350	3	True				
ANR	6202795	IdentifierDecl	bytesMatch = bytesScore >= ( options ? options -> bytes_diff_threshold : SIGN_DIFF_MATCH_BYTES_THRESHOLD )		6202350	0					
ANR	6202796	IdentifierDeclType	bool		6202350	0					
ANR	6202797	Identifier	bytesMatch		6202350	1					
ANR	6202798	AssignmentExpression	bytesMatch = bytesScore >= ( options ? options -> bytes_diff_threshold : SIGN_DIFF_MATCH_BYTES_THRESHOLD )		6202350	2		=			
ANR	6202799	Identifier	bytesMatch		6202350	0					
ANR	6202800	RelationalExpression	bytesScore >= ( options ? options -> bytes_diff_threshold : SIGN_DIFF_MATCH_BYTES_THRESHOLD )		6202350	1		>=			
ANR	6202801	Identifier	bytesScore		6202350	0					
ANR	6202802	ConditionalExpression	options ? options -> bytes_diff_threshold : SIGN_DIFF_MATCH_BYTES_THRESHOLD		6202350	1					
ANR	6202803	Condition	options		6202350	0					
ANR	6202804	Identifier	options		6202350	0					
ANR	6202805	PtrMemberAccess	options -> bytes_diff_threshold		6202350	1					
ANR	6202806	Identifier	options		6202350	0					
ANR	6202807	Identifier	bytes_diff_threshold		6202350	1					
ANR	6202808	Identifier	SIGN_DIFF_MATCH_BYTES_THRESHOLD		6202350	2					
ANR	6202809	IdentifierDeclStatement	bool graphMatch = graphScore >= ( options ? options -> graph_diff_threshold : SIGN_DIFF_MATCH_GRAPH_THRESHOLD ) ;	975:3:22698:22805	6202350	4	True				
ANR	6202810	IdentifierDecl	graphMatch = graphScore >= ( options ? options -> graph_diff_threshold : SIGN_DIFF_MATCH_GRAPH_THRESHOLD )		6202350	0					
ANR	6202811	IdentifierDeclType	bool		6202350	0					
ANR	6202812	Identifier	graphMatch		6202350	1					
ANR	6202813	AssignmentExpression	graphMatch = graphScore >= ( options ? options -> graph_diff_threshold : SIGN_DIFF_MATCH_GRAPH_THRESHOLD )		6202350	2		=			
ANR	6202814	Identifier	graphMatch		6202350	0					
ANR	6202815	RelationalExpression	graphScore >= ( options ? options -> graph_diff_threshold : SIGN_DIFF_MATCH_GRAPH_THRESHOLD )		6202350	1		>=			
ANR	6202816	Identifier	graphScore		6202350	0					
ANR	6202817	ConditionalExpression	options ? options -> graph_diff_threshold : SIGN_DIFF_MATCH_GRAPH_THRESHOLD		6202350	1					
ANR	6202818	Condition	options		6202350	0					
ANR	6202819	Identifier	options		6202350	0					
ANR	6202820	PtrMemberAccess	options -> graph_diff_threshold		6202350	1					
ANR	6202821	Identifier	options		6202350	0					
ANR	6202822	Identifier	graph_diff_threshold		6202350	1					
ANR	6202823	Identifier	SIGN_DIFF_MATCH_GRAPH_THRESHOLD		6202350	2					
ANR	6202824	IfStatement	if ( bytesMatch )		6202350	5					
ANR	6202825	Condition	bytesMatch	977:7:22815:22824	6202350	0	True				
ANR	6202826	Identifier	bytesMatch		6202350	0					
ANR	6202827	CompoundStatement		79:19:1917:1917	6202350	1					
ANR	6202828	Statement	a	978:4:22833:22833	6202350	0	True				
ANR	6202829	Statement	->	978:5:22834:22835	6202350	1	True				
ANR	6202830	Statement	cb_printf	978:7:22836:22844	6202350	2	True				
ANR	6202831	Statement	(	978:17:22846:22846	6202350	3	True				
ANR	6202832	Statement	"""0x%08"""	978:18:22847:22853	6202350	4	True				
ANR	6202833	Statement	PFMT64x	978:25:22854:22860	6202350	5	True				
ANR	6202834	Statement	""" 0x%08"""	978:32:22861:22868	6202350	6	True				
ANR	6202835	Statement	PFMT64x	978:40:22869:22875	6202350	7	True				
ANR	6202836	Statement	""" %02.5lf B %s\\n"""	978:48:22877:22893	6202350	8	True				
ANR	6202837	Statement	","	978:65:22894:22894	6202350	9	True				
ANR	6202838	Statement	si	978:67:22896:22897	6202350	10	True				
ANR	6202839	Statement	->	978:69:22898:22899	6202350	11	True				
ANR	6202840	Statement	addr	978:71:22900:22903	6202350	12	True				
ANR	6202841	Statement	","	978:75:22904:22904	6202350	13	True				
ANR	6202842	Statement	si2	978:77:22906:22908	6202350	14	True				
ANR	6202843	Statement	->	978:80:22909:22910	6202350	15	True				
ANR	6202844	Statement	addr	978:82:22911:22914	6202350	16	True				
ANR	6202845	Statement	","	978:86:22915:22915	6202350	17	True				
ANR	6202846	Statement	bytesScore	978:88:22917:22926	6202350	18	True				
ANR	6202847	Statement	","	978:98:22927:22927	6202350	19	True				
ANR	6202848	Statement	si	978:100:22929:22930	6202350	20	True				
ANR	6202849	Statement	->	978:102:22931:22932	6202350	21	True				
ANR	6202850	Statement	name	978:104:22933:22936	6202350	22	True				
ANR	6202851	Statement	)	978:108:22937:22937	6202350	23	True				
ANR	6202852	ExpressionStatement		978:109:22938:22938	6202350	24	True				
ANR	6202853	IfStatement	if ( graphMatch )		6202350	6					
ANR	6202854	Condition	graphMatch	981:7:22953:22962	6202350	0	True				
ANR	6202855	Identifier	graphMatch		6202350	0					
ANR	6202856	CompoundStatement		83:19:2055:2055	6202350	1					
ANR	6202857	Statement	a	982:4:22971:22971	6202350	0	True				
ANR	6202858	Statement	->	982:5:22972:22973	6202350	1	True				
ANR	6202859	Statement	cb_printf	982:7:22974:22982	6202350	2	True				
ANR	6202860	Statement	(	982:17:22984:22984	6202350	3	True				
ANR	6202861	Statement	"""0x%08"""	982:18:22985:22991	6202350	4	True				
ANR	6202862	Statement	PFMT64x	982:25:22992:22998	6202350	5	True				
ANR	6202863	Statement	""" 0x%08"""	982:32:22999:23006	6202350	6	True				
ANR	6202864	Statement	PFMT64x	982:40:23007:23013	6202350	7	True				
ANR	6202865	Statement	""" %02.5lf G %s\\n"""	982:47:23014:23030	6202350	8	True				
ANR	6202866	Statement	","	982:64:23031:23031	6202350	9	True				
ANR	6202867	Statement	si	982:66:23033:23034	6202350	10	True				
ANR	6202868	Statement	->	982:68:23035:23036	6202350	11	True				
ANR	6202869	Statement	addr	982:70:23037:23040	6202350	12	True				
ANR	6202870	Statement	","	982:74:23041:23041	6202350	13	True				
ANR	6202871	Statement	si2	982:76:23043:23045	6202350	14	True				
ANR	6202872	Statement	->	982:79:23046:23047	6202350	15	True				
ANR	6202873	Statement	addr	982:81:23048:23051	6202350	16	True				
ANR	6202874	Statement	","	982:85:23052:23052	6202350	17	True				
ANR	6202875	Statement	graphScore	982:87:23054:23063	6202350	18	True				
ANR	6202876	Statement	","	982:97:23064:23064	6202350	19	True				
ANR	6202877	Statement	si	982:99:23066:23067	6202350	20	True				
ANR	6202878	Statement	->	982:101:23068:23069	6202350	21	True				
ANR	6202879	Statement	name	982:103:23070:23073	6202350	22	True				
ANR	6202880	Statement	)	982:107:23074:23074	6202350	23	True				
ANR	6202881	ExpressionStatement		982:108:23075:23075	6202350	24	True				
ANR	6202882	ExpressionStatement	r_list_free ( la )	987:1:23091:23107	6202350	51	True				
ANR	6202883	CallExpression	r_list_free ( la )		6202350	0					
ANR	6202884	Callee	r_list_free		6202350	0					
ANR	6202885	Identifier	r_list_free		6202350	0					
ANR	6202886	ArgumentList	la		6202350	1					
ANR	6202887	Argument	la		6202350	0					
ANR	6202888	Identifier	la		6202350	0					
ANR	6202889	ExpressionStatement	r_list_free ( lb )	988:1:23110:23126	6202350	52	True				
ANR	6202890	CallExpression	r_list_free ( lb )		6202350	0					
ANR	6202891	Callee	r_list_free		6202350	0					
ANR	6202892	Identifier	r_list_free		6202350	0					
ANR	6202893	ArgumentList	lb		6202350	1					
ANR	6202894	Argument	lb		6202350	0					
ANR	6202895	Identifier	lb		6202350	0					
ANR	6202896	ReturnStatement	return true ;	990:1:23130:23141	6202350	53	True				
ANR	6202897	Identifier	true		6202350	0					
ANR	6202898	Label	beach :	991:0:23143:23148	6202350	54	True				
ANR	6202899	Identifier	beach		6202350	0					
ANR	6202900	ExpressionStatement	ls_free ( current_zigns )	992:1:23151:23174	6202350	55	True				
ANR	6202901	CallExpression	ls_free ( current_zigns )		6202350	0					
ANR	6202902	Callee	ls_free		6202350	0					
ANR	6202903	Identifier	ls_free		6202350	0					
ANR	6202904	ArgumentList	current_zigns		6202350	1					
ANR	6202905	Argument	current_zigns		6202350	0					
ANR	6202906	Identifier	current_zigns		6202350	0					
ANR	6202907	ExpressionStatement	ls_free ( other_zigns )	993:1:23177:23198	6202350	56	True				
ANR	6202908	CallExpression	ls_free ( other_zigns )		6202350	0					
ANR	6202909	Callee	ls_free		6202350	0					
ANR	6202910	Identifier	ls_free		6202350	0					
ANR	6202911	ArgumentList	other_zigns		6202350	1					
ANR	6202912	Argument	other_zigns		6202350	0					
ANR	6202913	Identifier	other_zigns		6202350	0					
ANR	6202914	ExpressionStatement	r_list_free ( la )	994:1:23201:23217	6202350	57	True				
ANR	6202915	CallExpression	r_list_free ( la )		6202350	0					
ANR	6202916	Callee	r_list_free		6202350	0					
ANR	6202917	Identifier	r_list_free		6202350	0					
ANR	6202918	ArgumentList	la		6202350	1					
ANR	6202919	Argument	la		6202350	0					
ANR	6202920	Identifier	la		6202350	0					
ANR	6202921	ExpressionStatement	r_list_free ( lb )	995:1:23220:23236	6202350	58	True				
ANR	6202922	CallExpression	r_list_free ( lb )		6202350	0					
ANR	6202923	Callee	r_list_free		6202350	0					
ANR	6202924	Identifier	r_list_free		6202350	0					
ANR	6202925	ArgumentList	lb		6202350	1					
ANR	6202926	Argument	lb		6202350	0					
ANR	6202927	Identifier	lb		6202350	0					
ANR	6202928	ReturnStatement	return false ;	997:1:23240:23252	6202350	59	True				
ANR	6202929	Identifier	false		6202350	0					
ANR	6202930	ReturnType	R_API bool		6202350	1					
ANR	6202931	Identifier	r_sign_diff		6202350	2					
ANR	6202932	ParameterList	"RAnal * a , RSignOptions * options , const char * other_space_name"		6202350	3					
ANR	6202933	Parameter	RAnal * a	899:23:20846:20853	6202350	0	True				
ANR	6202934	ParameterType	RAnal *		6202350	0					
ANR	6202935	Identifier	a		6202350	1					
ANR	6202936	Parameter	RSignOptions * options	899:33:20856:20876	6202350	1	True				
ANR	6202937	ParameterType	RSignOptions *		6202350	0					
ANR	6202938	Identifier	options		6202350	1					
ANR	6202939	Parameter	const char * other_space_name	899:56:20879:20906	6202350	2	True				
ANR	6202940	ParameterType	const char *		6202350	0					
ANR	6202941	Identifier	other_space_name		6202350	1					
ANR	6202942	CFGEntryNode	ENTRY		6202350		True				
ANR	6202943	CFGExitNode	EXIT		6202350		True				
ANR	6202944	CFGErrorNode	ERROR		6202350		True				
ANR	6202945	Symbol	SIGN_DIFF_MATCH_BYTES_THRESHOLD		6202350						
ANR	6202946	Symbol	kv -> base . key		6202350						
ANR	6202947	Symbol	si2 -> name		6202350						
ANR	6202948	Symbol	current_zigns		6202350						
ANR	6202949	Symbol	kv -> base . value		6202350						
ANR	6202950	Symbol	options		6202350						
ANR	6202951	Symbol	ls_length		6202350						
ANR	6202952	Symbol	options -> bytes_diff_threshold		6202350						
ANR	6202953	Symbol	si2		6202350						
ANR	6202954	Symbol	* si		6202350						
ANR	6202955	Symbol	si -> name		6202350						
ANR	6202956	Symbol	NULL		6202350						
ANR	6202957	Symbol	itr		6202350						
ANR	6202958	Symbol	iter		6202350						
ANR	6202959	Symbol	it		6202350						
ANR	6202960	Symbol	graphScore		6202350						
ANR	6202961	Symbol	r_spaces_get		6202350						
ANR	6202962	Symbol	r_sign_deserialize		6202350						
ANR	6202963	Symbol	matchBytes		6202350						
ANR	6202964	Symbol	other_space_name		6202350						
ANR	6202965	Symbol	* kv		6202350						
ANR	6202966	Symbol	kv -> base		6202350						
ANR	6202967	Symbol	strstr		6202350						
ANR	6202968	Symbol	bytesScore		6202350						
ANR	6202969	Symbol	true		6202350						
ANR	6202970	Symbol	r_sign_item_new		6202350						
ANR	6202971	Symbol	* si2		6202350						
ANR	6202972	Symbol	& a -> zign_spaces		6202350						
ANR	6202973	Symbol	* options		6202350						
ANR	6202974	Symbol	matchGraph		6202350						
ANR	6202975	Symbol	si		6202350						
ANR	6202976	Symbol	other_space		6202350						
ANR	6202977	Symbol	itr2		6202350						
ANR	6202978	Symbol	r_spaces_current		6202350						
ANR	6202979	Symbol	a		6202350						
ANR	6202980	Symbol	current_space		6202350						
ANR	6202981	Symbol	bytesMatch		6202350						
ANR	6202982	Symbol	graphMatch		6202350						
ANR	6202983	Symbol	false		6202350						
ANR	6202984	Symbol	k		6202350						
ANR	6202985	Symbol	* a		6202350						
ANR	6202986	Symbol	kv		6202350						
ANR	6202987	Symbol	a -> sdb_zigns		6202350						
ANR	6202988	Symbol	other_zigns		6202350						
ANR	6202989	Symbol	options -> graph_diff_threshold		6202350						
ANR	6202990	Symbol	sdb_foreach_match		6202350						
ANR	6202991	Symbol	la		6202350						
ANR	6202992	Symbol	lb		6202350						
ANR	6202993	Symbol	SIGN_DIFF_MATCH_GRAPH_THRESHOLD		6202350						
ANR	6202994	Symbol	r_list_new		6202350						
ANR	6202995	Function	r_sign_diff_by_name	1000:0:23257:26072							
ANR	6202996	FunctionDef	"r_sign_diff_by_name (RAnal * a , RSignOptions * options , const char * other_space_name , bool not_matching)"		6202995	0					
ANR	6202997	CompoundStatement		1000:114:23371:26072	6202995	0					
ANR	6202998	IdentifierDeclStatement	char k [ R_SIGN_KEY_MAXSZ ] ;	1001:1:23374:23398	6202995	0	True				
ANR	6202999	IdentifierDecl	k [ R_SIGN_KEY_MAXSZ ]		6202995	0					
ANR	6203000	IdentifierDeclType	char [ R_SIGN_KEY_MAXSZ ]		6202995	0					
ANR	6203001	Identifier	k		6202995	1					
ANR	6203002	Identifier	R_SIGN_KEY_MAXSZ		6202995	2					
ANR	6203003	ExpressionStatement	"r_return_val_if_fail ( a && other_space_name , false )"	1003:1:23402:23453	6202995	1	True				
ANR	6203004	CallExpression	"r_return_val_if_fail ( a && other_space_name , false )"		6202995	0					
ANR	6203005	Callee	r_return_val_if_fail		6202995	0					
ANR	6203006	Identifier	r_return_val_if_fail		6202995	0					
ANR	6203007	ArgumentList	a && other_space_name		6202995	1					
ANR	6203008	Argument	a && other_space_name		6202995	0					
ANR	6203009	AndExpression	a && other_space_name		6202995	0		&&			
ANR	6203010	Identifier	a		6202995	0					
ANR	6203011	Identifier	other_space_name		6202995	1					
ANR	6203012	Argument	false		6202995	1					
ANR	6203013	Identifier	false		6202995	0					
ANR	6203014	IdentifierDeclStatement	RSpace * current_space = r_spaces_current ( & a -> zign_spaces ) ;	1005:1:23457:23515	6202995	2	True				
ANR	6203015	IdentifierDecl	* current_space = r_spaces_current ( & a -> zign_spaces )		6202995	0					
ANR	6203016	IdentifierDeclType	RSpace *		6202995	0					
ANR	6203017	Identifier	current_space		6202995	1					
ANR	6203018	AssignmentExpression	* current_space = r_spaces_current ( & a -> zign_spaces )		6202995	2		=			
ANR	6203019	Identifier	current_space		6202995	0					
ANR	6203020	CallExpression	r_spaces_current ( & a -> zign_spaces )		6202995	1					
ANR	6203021	Callee	r_spaces_current		6202995	0					
ANR	6203022	Identifier	r_spaces_current		6202995	0					
ANR	6203023	ArgumentList	& a -> zign_spaces		6202995	1					
ANR	6203024	Argument	& a -> zign_spaces		6202995	0					
ANR	6203025	UnaryOperationExpression	& a -> zign_spaces		6202995	0					
ANR	6203026	UnaryOperator	&		6202995	0					
ANR	6203027	PtrMemberAccess	a -> zign_spaces		6202995	1					
ANR	6203028	Identifier	a		6202995	0					
ANR	6203029	Identifier	zign_spaces		6202995	1					
ANR	6203030	IfStatement	if ( ! current_space )		6202995	3					
ANR	6203031	Condition	! current_space	1006:5:23522:23535	6202995	0	True				
ANR	6203032	UnaryOperationExpression	! current_space		6202995	0					
ANR	6203033	UnaryOperator	!		6202995	0					
ANR	6203034	Identifier	current_space		6202995	1					
ANR	6203035	CompoundStatement		7:21:166:166	6202995	1					
ANR	6203036	ReturnStatement	return false ;	1007:2:23542:23554	6202995	0	True				
ANR	6203037	Identifier	false		6202995	0					
ANR	6203038	IdentifierDeclStatement	"RSpace * other_space = r_spaces_get ( & a -> zign_spaces , other_space_name ) ;"	1009:1:23560:23630	6202995	4	True				
ANR	6203039	IdentifierDecl	"* other_space = r_spaces_get ( & a -> zign_spaces , other_space_name )"		6202995	0					
ANR	6203040	IdentifierDeclType	RSpace *		6202995	0					
ANR	6203041	Identifier	other_space		6202995	1					
ANR	6203042	AssignmentExpression	"* other_space = r_spaces_get ( & a -> zign_spaces , other_space_name )"		6202995	2		=			
ANR	6203043	Identifier	other_space		6202995	0					
ANR	6203044	CallExpression	"r_spaces_get ( & a -> zign_spaces , other_space_name )"		6202995	1					
ANR	6203045	Callee	r_spaces_get		6202995	0					
ANR	6203046	Identifier	r_spaces_get		6202995	0					
ANR	6203047	ArgumentList	& a -> zign_spaces		6202995	1					
ANR	6203048	Argument	& a -> zign_spaces		6202995	0					
ANR	6203049	UnaryOperationExpression	& a -> zign_spaces		6202995	0					
ANR	6203050	UnaryOperator	&		6202995	0					
ANR	6203051	PtrMemberAccess	a -> zign_spaces		6202995	1					
ANR	6203052	Identifier	a		6202995	0					
ANR	6203053	Identifier	zign_spaces		6202995	1					
ANR	6203054	Argument	other_space_name		6202995	1					
ANR	6203055	Identifier	other_space_name		6202995	0					
ANR	6203056	IfStatement	if ( ! other_space )		6202995	5					
ANR	6203057	Condition	! other_space	1010:5:23637:23648	6202995	0	True				
ANR	6203058	UnaryOperationExpression	! other_space		6202995	0					
ANR	6203059	UnaryOperator	!		6202995	0					
ANR	6203060	Identifier	other_space		6202995	1					
ANR	6203061	CompoundStatement		11:19:279:279	6202995	1					
ANR	6203062	ReturnStatement	return false ;	1011:2:23655:23667	6202995	0	True				
ANR	6203063	Identifier	false		6202995	0					
ANR	6203064	ExpressionStatement	"serializeKey ( a , current_space , """" , k )"	1014:1:23674:23712	6202995	6	True				
ANR	6203065	CallExpression	"serializeKey ( a , current_space , """" , k )"		6202995	0					
ANR	6203066	Callee	serializeKey		6202995	0					
ANR	6203067	Identifier	serializeKey		6202995	0					
ANR	6203068	ArgumentList	a		6202995	1					
ANR	6203069	Argument	a		6202995	0					
ANR	6203070	Identifier	a		6202995	0					
ANR	6203071	Argument	current_space		6202995	1					
ANR	6203072	Identifier	current_space		6202995	0					
ANR	6203073	Argument	""""""		6202995	2					
ANR	6203074	PrimaryExpression	""""""		6202995	0					
ANR	6203075	Argument	k		6202995	3					
ANR	6203076	Identifier	k		6202995	0					
ANR	6203077	IdentifierDeclStatement	"SdbList * current_zigns = sdb_foreach_match ( a -> sdb_zigns , k , false ) ;"	1015:1:23715:23782	6202995	7	True				
ANR	6203078	IdentifierDecl	"* current_zigns = sdb_foreach_match ( a -> sdb_zigns , k , false )"		6202995	0					
ANR	6203079	IdentifierDeclType	SdbList *		6202995	0					
ANR	6203080	Identifier	current_zigns		6202995	1					
ANR	6203081	AssignmentExpression	"* current_zigns = sdb_foreach_match ( a -> sdb_zigns , k , false )"		6202995	2		=			
ANR	6203082	Identifier	current_zigns		6202995	0					
ANR	6203083	CallExpression	"sdb_foreach_match ( a -> sdb_zigns , k , false )"		6202995	1					
ANR	6203084	Callee	sdb_foreach_match		6202995	0					
ANR	6203085	Identifier	sdb_foreach_match		6202995	0					
ANR	6203086	ArgumentList	a -> sdb_zigns		6202995	1					
ANR	6203087	Argument	a -> sdb_zigns		6202995	0					
ANR	6203088	PtrMemberAccess	a -> sdb_zigns		6202995	0					
ANR	6203089	Identifier	a		6202995	0					
ANR	6203090	Identifier	sdb_zigns		6202995	1					
ANR	6203091	Argument	k		6202995	1					
ANR	6203092	Identifier	k		6202995	0					
ANR	6203093	Argument	false		6202995	2					
ANR	6203094	Identifier	false		6202995	0					
ANR	6203095	ExpressionStatement	"serializeKey ( a , other_space , """" , k )"	1017:1:23786:23822	6202995	8	True				
ANR	6203096	CallExpression	"serializeKey ( a , other_space , """" , k )"		6202995	0					
ANR	6203097	Callee	serializeKey		6202995	0					
ANR	6203098	Identifier	serializeKey		6202995	0					
ANR	6203099	ArgumentList	a		6202995	1					
ANR	6203100	Argument	a		6202995	0					
ANR	6203101	Identifier	a		6202995	0					
ANR	6203102	Argument	other_space		6202995	1					
ANR	6203103	Identifier	other_space		6202995	0					
ANR	6203104	Argument	""""""		6202995	2					
ANR	6203105	PrimaryExpression	""""""		6202995	0					
ANR	6203106	Argument	k		6202995	3					
ANR	6203107	Identifier	k		6202995	0					
ANR	6203108	IdentifierDeclStatement	"SdbList * other_zigns = sdb_foreach_match ( a -> sdb_zigns , k , false ) ;"	1018:1:23825:23890	6202995	9	True				
ANR	6203109	IdentifierDecl	"* other_zigns = sdb_foreach_match ( a -> sdb_zigns , k , false )"		6202995	0					
ANR	6203110	IdentifierDeclType	SdbList *		6202995	0					
ANR	6203111	Identifier	other_zigns		6202995	1					
ANR	6203112	AssignmentExpression	"* other_zigns = sdb_foreach_match ( a -> sdb_zigns , k , false )"		6202995	2		=			
ANR	6203113	Identifier	other_zigns		6202995	0					
ANR	6203114	CallExpression	"sdb_foreach_match ( a -> sdb_zigns , k , false )"		6202995	1					
ANR	6203115	Callee	sdb_foreach_match		6202995	0					
ANR	6203116	Identifier	sdb_foreach_match		6202995	0					
ANR	6203117	ArgumentList	a -> sdb_zigns		6202995	1					
ANR	6203118	Argument	a -> sdb_zigns		6202995	0					
ANR	6203119	PtrMemberAccess	a -> sdb_zigns		6202995	0					
ANR	6203120	Identifier	a		6202995	0					
ANR	6203121	Identifier	sdb_zigns		6202995	1					
ANR	6203122	Argument	k		6202995	1					
ANR	6203123	Identifier	k		6202995	0					
ANR	6203124	Argument	false		6202995	2					
ANR	6203125	Identifier	false		6202995	0					
ANR	6203126	ExpressionStatement	"eprintf ( ""Diff by name %d %d (%s)\\n"" , ( int ) ls_length ( current_zigns ) , ( int ) ls_length ( other_zigns ) , not_matching ? ""not matching"" : ""matching"" )"	1020:1:23894:24037	6202995	10	True				
ANR	6203127	CallExpression	"eprintf ( ""Diff by name %d %d (%s)\\n"" , ( int ) ls_length ( current_zigns ) , ( int ) ls_length ( other_zigns ) , not_matching ? ""not matching"" : ""matching"" )"		6202995	0					
ANR	6203128	Callee	eprintf		6202995	0					
ANR	6203129	Identifier	eprintf		6202995	0					
ANR	6203130	ArgumentList	"""Diff by name %d %d (%s)\\n"""		6202995	1					
ANR	6203131	Argument	"""Diff by name %d %d (%s)\\n"""		6202995	0					
ANR	6203132	PrimaryExpression	"""Diff by name %d %d (%s)\\n"""		6202995	0					
ANR	6203133	Argument	( int ) ls_length ( current_zigns )		6202995	1					
ANR	6203134	CastExpression	( int ) ls_length ( current_zigns )		6202995	0					
ANR	6203135	CastTarget	int		6202995	0					
ANR	6203136	CallExpression	ls_length ( current_zigns )		6202995	1					
ANR	6203137	Callee	ls_length		6202995	0					
ANR	6203138	Identifier	ls_length		6202995	0					
ANR	6203139	ArgumentList	current_zigns		6202995	1					
ANR	6203140	Argument	current_zigns		6202995	0					
ANR	6203141	Identifier	current_zigns		6202995	0					
ANR	6203142	Argument	( int ) ls_length ( other_zigns )		6202995	2					
ANR	6203143	CastExpression	( int ) ls_length ( other_zigns )		6202995	0					
ANR	6203144	CastTarget	int		6202995	0					
ANR	6203145	CallExpression	ls_length ( other_zigns )		6202995	1					
ANR	6203146	Callee	ls_length		6202995	0					
ANR	6203147	Identifier	ls_length		6202995	0					
ANR	6203148	ArgumentList	other_zigns		6202995	1					
ANR	6203149	Argument	other_zigns		6202995	0					
ANR	6203150	Identifier	other_zigns		6202995	0					
ANR	6203151	Argument	"not_matching ? ""not matching"" : ""matching"""		6202995	3					
ANR	6203152	ConditionalExpression	"not_matching ? ""not matching"" : ""matching"""		6202995	0					
ANR	6203153	Condition	not_matching		6202995	0					
ANR	6203154	Identifier	not_matching		6202995	0					
ANR	6203155	PrimaryExpression	"""not matching"""		6202995	1					
ANR	6203156	PrimaryExpression	"""matching"""		6202995	2					
ANR	6203157	IdentifierDeclStatement	SdbListIter * iter ;	1022:1:24041:24058	6202995	11	True				
ANR	6203158	IdentifierDecl	* iter		6202995	0					
ANR	6203159	IdentifierDeclType	SdbListIter *		6202995	0					
ANR	6203160	Identifier	iter		6202995	1					
ANR	6203161	IdentifierDeclStatement	SdbKv * kv ;	1023:1:24061:24070	6202995	12	True				
ANR	6203162	IdentifierDecl	* kv		6202995	0					
ANR	6203163	IdentifierDeclType	SdbKv *		6202995	0					
ANR	6203164	Identifier	kv		6202995	1					
ANR	6203165	IdentifierDeclStatement	RList * lb = NULL ;	1024:1:24073:24089	6202995	13	True				
ANR	6203166	IdentifierDecl	* lb = NULL		6202995	0					
ANR	6203167	IdentifierDeclType	RList *		6202995	0					
ANR	6203168	Identifier	lb		6202995	1					
ANR	6203169	AssignmentExpression	* lb = NULL		6202995	2		=			
ANR	6203170	Identifier	NULL		6202995	0					
ANR	6203171	Identifier	NULL		6202995	1					
ANR	6203172	IdentifierDeclStatement	RList * la = r_list_new ( ) ;	1025:1:24092:24117	6202995	14	True				
ANR	6203173	IdentifierDecl	* la = r_list_new ( )		6202995	0					
ANR	6203174	IdentifierDeclType	RList *		6202995	0					
ANR	6203175	Identifier	la		6202995	1					
ANR	6203176	AssignmentExpression	* la = r_list_new ( )		6202995	2		=			
ANR	6203177	Identifier	la		6202995	0					
ANR	6203178	CallExpression	r_list_new ( )		6202995	1					
ANR	6203179	Callee	r_list_new		6202995	0					
ANR	6203180	Identifier	r_list_new		6202995	0					
ANR	6203181	ArgumentList			6202995	1					
ANR	6203182	IfStatement	if ( ! la )		6202995	15					
ANR	6203183	Condition	! la	1026:5:24124:24126	6202995	0	True				
ANR	6203184	UnaryOperationExpression	! la		6202995	0					
ANR	6203185	UnaryOperator	!		6202995	0					
ANR	6203186	Identifier	la		6202995	1					
ANR	6203187	CompoundStatement		27:10:757:757	6202995	1					
ANR	6203188	GotoStatement	goto beach ;	1027:2:24133:24143	6202995	0	True				
ANR	6203189	Identifier	beach		6202995	0					
ANR	6203190	Statement	ls_foreach	1029:1:24149:24158	6202995	16	True				
ANR	6203191	Statement	(	1029:12:24160:24160	6202995	17	True				
ANR	6203192	Statement	current_zigns	1029:13:24161:24173	6202995	18	True				
ANR	6203193	Statement	","	1029:26:24174:24174	6202995	19	True				
ANR	6203194	Statement	iter	1029:28:24176:24179	6202995	20	True				
ANR	6203195	Statement	","	1029:32:24180:24180	6202995	21	True				
ANR	6203196	Statement	kv	1029:34:24182:24183	6202995	22	True				
ANR	6203197	Statement	)	1029:36:24184:24184	6202995	23	True				
ANR	6203198	CompoundStatement		31:2:818:852	6202995	24					
ANR	6203199	IdentifierDeclStatement	RSignItem * it = r_sign_item_new ( ) ;	1030:2:24190:24224	6202995	0	True				
ANR	6203200	IdentifierDecl	* it = r_sign_item_new ( )		6202995	0					
ANR	6203201	IdentifierDeclType	RSignItem *		6202995	0					
ANR	6203202	Identifier	it		6202995	1					
ANR	6203203	AssignmentExpression	* it = r_sign_item_new ( )		6202995	2		=			
ANR	6203204	Identifier	it		6202995	0					
ANR	6203205	CallExpression	r_sign_item_new ( )		6202995	1					
ANR	6203206	Callee	r_sign_item_new		6202995	0					
ANR	6203207	Identifier	r_sign_item_new		6202995	0					
ANR	6203208	ArgumentList			6202995	1					
ANR	6203209	IfStatement	if ( ! it )		6202995	1					
ANR	6203210	Condition	! it	1031:6:24232:24234	6202995	0	True				
ANR	6203211	UnaryOperationExpression	! it		6202995	0					
ANR	6203212	UnaryOperator	!		6202995	0					
ANR	6203213	Identifier	it		6202995	1					
ANR	6203214	CompoundStatement		32:11:865:865	6202995	1					
ANR	6203215	GotoStatement	goto beach ;	1032:3:24242:24252	6202995	0	True				
ANR	6203216	Identifier	beach		6202995	0					
ANR	6203217	IfStatement	"if ( r_sign_deserialize ( a , it , kv -> base . key , kv -> base . value ) )"		6202995	2					
ANR	6203218	Condition	"r_sign_deserialize ( a , it , kv -> base . key , kv -> base . value )"	1034:6:24264:24319	6202995	0	True				
ANR	6203219	CallExpression	"r_sign_deserialize ( a , it , kv -> base . key , kv -> base . value )"		6202995	0					
ANR	6203220	Callee	r_sign_deserialize		6202995	0					
ANR	6203221	Identifier	r_sign_deserialize		6202995	0					
ANR	6203222	ArgumentList	a		6202995	1					
ANR	6203223	Argument	a		6202995	0					
ANR	6203224	Identifier	a		6202995	0					
ANR	6203225	Argument	it		6202995	1					
ANR	6203226	Identifier	it		6202995	0					
ANR	6203227	Argument	kv -> base . key		6202995	2					
ANR	6203228	MemberAccess	kv -> base . key		6202995	0					
ANR	6203229	PtrMemberAccess	kv -> base		6202995	0					
ANR	6203230	Identifier	kv		6202995	0					
ANR	6203231	Identifier	base		6202995	1					
ANR	6203232	Identifier	key		6202995	1					
ANR	6203233	Argument	kv -> base . value		6202995	3					
ANR	6203234	MemberAccess	kv -> base . value		6202995	0					
ANR	6203235	PtrMemberAccess	kv -> base		6202995	0					
ANR	6203236	Identifier	kv		6202995	0					
ANR	6203237	Identifier	base		6202995	1					
ANR	6203238	Identifier	value		6202995	1					
ANR	6203239	CompoundStatement		35:64:950:950	6202995	1					
ANR	6203240	ExpressionStatement	"r_list_append ( la , it )"	1035:3:24327:24349	6202995	0	True				
ANR	6203241	CallExpression	"r_list_append ( la , it )"		6202995	0					
ANR	6203242	Callee	r_list_append		6202995	0					
ANR	6203243	Identifier	r_list_append		6202995	0					
ANR	6203244	ArgumentList	la		6202995	1					
ANR	6203245	Argument	la		6202995	0					
ANR	6203246	Identifier	la		6202995	0					
ANR	6203247	Argument	it		6202995	1					
ANR	6203248	Identifier	it		6202995	0					
ANR	6203249	ElseStatement	else		6202995	0					
ANR	6203250	CompoundStatement		37:9:988:988	6202995	0					
ANR	6203251	ExpressionStatement	r_sign_item_free ( it )	1037:3:24365:24386	6202995	0	True				
ANR	6203252	CallExpression	r_sign_item_free ( it )		6202995	0					
ANR	6203253	Callee	r_sign_item_free		6202995	0					
ANR	6203254	Identifier	r_sign_item_free		6202995	0					
ANR	6203255	ArgumentList	it		6202995	1					
ANR	6203256	Argument	it		6202995	0					
ANR	6203257	Identifier	it		6202995	0					
ANR	6203258	ExpressionStatement	lb = r_list_new ( )	1040:1:24396:24414	6202995	25	True				
ANR	6203259	AssignmentExpression	lb = r_list_new ( )		6202995	0		=			
ANR	6203260	Identifier	lb		6202995	0					
ANR	6203261	CallExpression	r_list_new ( )		6202995	1					
ANR	6203262	Callee	r_list_new		6202995	0					
ANR	6203263	Identifier	r_list_new		6202995	0					
ANR	6203264	ArgumentList			6202995	1					
ANR	6203265	IfStatement	if ( ! la )		6202995	26					
ANR	6203266	Condition	! la	1041:5:24421:24423	6202995	0	True				
ANR	6203267	UnaryOperationExpression	! la		6202995	0					
ANR	6203268	UnaryOperator	!		6202995	0					
ANR	6203269	Identifier	la		6202995	1					
ANR	6203270	CompoundStatement		42:10:1054:1054	6202995	1					
ANR	6203271	GotoStatement	goto beach ;	1042:2:24430:24440	6202995	0	True				
ANR	6203272	Identifier	beach		6202995	0					
ANR	6203273	Statement	ls_foreach	1044:1:24446:24455	6202995	27	True				
ANR	6203274	Statement	(	1044:12:24457:24457	6202995	28	True				
ANR	6203275	Statement	other_zigns	1044:13:24458:24468	6202995	29	True				
ANR	6203276	Statement	","	1044:24:24469:24469	6202995	30	True				
ANR	6203277	Statement	iter	1044:26:24471:24474	6202995	31	True				
ANR	6203278	Statement	","	1044:30:24475:24475	6202995	32	True				
ANR	6203279	Statement	kv	1044:32:24477:24478	6202995	33	True				
ANR	6203280	Statement	)	1044:34:24479:24479	6202995	34	True				
ANR	6203281	CompoundStatement		46:2:1113:1147	6202995	35					
ANR	6203282	IdentifierDeclStatement	RSignItem * it = r_sign_item_new ( ) ;	1045:2:24485:24519	6202995	0	True				
ANR	6203283	IdentifierDecl	* it = r_sign_item_new ( )		6202995	0					
ANR	6203284	IdentifierDeclType	RSignItem *		6202995	0					
ANR	6203285	Identifier	it		6202995	1					
ANR	6203286	AssignmentExpression	* it = r_sign_item_new ( )		6202995	2		=			
ANR	6203287	Identifier	it		6202995	0					
ANR	6203288	CallExpression	r_sign_item_new ( )		6202995	1					
ANR	6203289	Callee	r_sign_item_new		6202995	0					
ANR	6203290	Identifier	r_sign_item_new		6202995	0					
ANR	6203291	ArgumentList			6202995	1					
ANR	6203292	IfStatement	if ( ! it )		6202995	1					
ANR	6203293	Condition	! it	1046:6:24527:24529	6202995	0	True				
ANR	6203294	UnaryOperationExpression	! it		6202995	0					
ANR	6203295	UnaryOperator	!		6202995	0					
ANR	6203296	Identifier	it		6202995	1					
ANR	6203297	CompoundStatement		47:11:1160:1160	6202995	1					
ANR	6203298	GotoStatement	goto beach ;	1047:3:24537:24547	6202995	0	True				
ANR	6203299	Identifier	beach		6202995	0					
ANR	6203300	IfStatement	"if ( r_sign_deserialize ( a , it , kv -> base . key , kv -> base . value ) )"		6202995	2					
ANR	6203301	Condition	"r_sign_deserialize ( a , it , kv -> base . key , kv -> base . value )"	1049:6:24559:24614	6202995	0	True				
ANR	6203302	CallExpression	"r_sign_deserialize ( a , it , kv -> base . key , kv -> base . value )"		6202995	0					
ANR	6203303	Callee	r_sign_deserialize		6202995	0					
ANR	6203304	Identifier	r_sign_deserialize		6202995	0					
ANR	6203305	ArgumentList	a		6202995	1					
ANR	6203306	Argument	a		6202995	0					
ANR	6203307	Identifier	a		6202995	0					
ANR	6203308	Argument	it		6202995	1					
ANR	6203309	Identifier	it		6202995	0					
ANR	6203310	Argument	kv -> base . key		6202995	2					
ANR	6203311	MemberAccess	kv -> base . key		6202995	0					
ANR	6203312	PtrMemberAccess	kv -> base		6202995	0					
ANR	6203313	Identifier	kv		6202995	0					
ANR	6203314	Identifier	base		6202995	1					
ANR	6203315	Identifier	key		6202995	1					
ANR	6203316	Argument	kv -> base . value		6202995	3					
ANR	6203317	MemberAccess	kv -> base . value		6202995	0					
ANR	6203318	PtrMemberAccess	kv -> base		6202995	0					
ANR	6203319	Identifier	kv		6202995	0					
ANR	6203320	Identifier	base		6202995	1					
ANR	6203321	Identifier	value		6202995	1					
ANR	6203322	CompoundStatement		50:64:1245:1245	6202995	1					
ANR	6203323	ExpressionStatement	"r_list_append ( lb , it )"	1050:3:24622:24644	6202995	0	True				
ANR	6203324	CallExpression	"r_list_append ( lb , it )"		6202995	0					
ANR	6203325	Callee	r_list_append		6202995	0					
ANR	6203326	Identifier	r_list_append		6202995	0					
ANR	6203327	ArgumentList	lb		6202995	1					
ANR	6203328	Argument	lb		6202995	0					
ANR	6203329	Identifier	lb		6202995	0					
ANR	6203330	Argument	it		6202995	1					
ANR	6203331	Identifier	it		6202995	0					
ANR	6203332	ElseStatement	else		6202995	0					
ANR	6203333	CompoundStatement		52:9:1283:1283	6202995	0					
ANR	6203334	ExpressionStatement	r_sign_item_free ( it )	1052:3:24660:24681	6202995	0	True				
ANR	6203335	CallExpression	r_sign_item_free ( it )		6202995	0					
ANR	6203336	Callee	r_sign_item_free		6202995	0					
ANR	6203337	Identifier	r_sign_item_free		6202995	0					
ANR	6203338	ArgumentList	it		6202995	1					
ANR	6203339	Argument	it		6202995	0					
ANR	6203340	Identifier	it		6202995	0					
ANR	6203341	ExpressionStatement	ls_free ( current_zigns )	1056:1:24692:24715	6202995	36	True				
ANR	6203342	CallExpression	ls_free ( current_zigns )		6202995	0					
ANR	6203343	Callee	ls_free		6202995	0					
ANR	6203344	Identifier	ls_free		6202995	0					
ANR	6203345	ArgumentList	current_zigns		6202995	1					
ANR	6203346	Argument	current_zigns		6202995	0					
ANR	6203347	Identifier	current_zigns		6202995	0					
ANR	6203348	ExpressionStatement	ls_free ( other_zigns )	1057:1:24718:24739	6202995	37	True				
ANR	6203349	CallExpression	ls_free ( other_zigns )		6202995	0					
ANR	6203350	Callee	ls_free		6202995	0					
ANR	6203351	Identifier	ls_free		6202995	0					
ANR	6203352	ArgumentList	other_zigns		6202995	1					
ANR	6203353	Argument	other_zigns		6202995	0					
ANR	6203354	Identifier	other_zigns		6202995	0					
ANR	6203355	IdentifierDeclStatement	RListIter * itr ;	1059:1:24743:24757	6202995	38	True				
ANR	6203356	IdentifierDecl	* itr		6202995	0					
ANR	6203357	IdentifierDeclType	RListIter *		6202995	0					
ANR	6203358	Identifier	itr		6202995	1					
ANR	6203359	IdentifierDeclStatement	RListIter * itr2 ;	1060:1:24760:24775	6202995	39	True				
ANR	6203360	IdentifierDecl	* itr2		6202995	0					
ANR	6203361	IdentifierDeclType	RListIter *		6202995	0					
ANR	6203362	Identifier	itr2		6202995	1					
ANR	6203363	IdentifierDeclStatement	RSignItem * si ;	1061:1:24778:24791	6202995	40	True				
ANR	6203364	IdentifierDecl	* si		6202995	0					
ANR	6203365	IdentifierDeclType	RSignItem *		6202995	0					
ANR	6203366	Identifier	si		6202995	1					
ANR	6203367	IdentifierDeclStatement	RSignItem * si2 ;	1062:1:24794:24808	6202995	41	True				
ANR	6203368	IdentifierDecl	* si2		6202995	0					
ANR	6203369	IdentifierDeclType	RSignItem *		6202995	0					
ANR	6203370	Identifier	si2		6202995	1					
ANR	6203371	IdentifierDeclStatement	size_t current_space_name_len = strlen ( current_space -> name ) ;	1063:1:24811:24871	6202995	42	True				
ANR	6203372	IdentifierDecl	current_space_name_len = strlen ( current_space -> name )		6202995	0					
ANR	6203373	IdentifierDeclType	size_t		6202995	0					
ANR	6203374	Identifier	current_space_name_len		6202995	1					
ANR	6203375	AssignmentExpression	current_space_name_len = strlen ( current_space -> name )		6202995	2		=			
ANR	6203376	Identifier	current_space_name_len		6202995	0					
ANR	6203377	CallExpression	strlen ( current_space -> name )		6202995	1					
ANR	6203378	Callee	strlen		6202995	0					
ANR	6203379	Identifier	strlen		6202995	0					
ANR	6203380	ArgumentList	current_space -> name		6202995	1					
ANR	6203381	Argument	current_space -> name		6202995	0					
ANR	6203382	PtrMemberAccess	current_space -> name		6202995	0					
ANR	6203383	Identifier	current_space		6202995	0					
ANR	6203384	Identifier	name		6202995	1					
ANR	6203385	IdentifierDeclStatement	size_t other_space_name_len = strlen ( other_space -> name ) ;	1064:1:24874:24930	6202995	43	True				
ANR	6203386	IdentifierDecl	other_space_name_len = strlen ( other_space -> name )		6202995	0					
ANR	6203387	IdentifierDeclType	size_t		6202995	0					
ANR	6203388	Identifier	other_space_name_len		6202995	1					
ANR	6203389	AssignmentExpression	other_space_name_len = strlen ( other_space -> name )		6202995	2		=			
ANR	6203390	Identifier	other_space_name_len		6202995	0					
ANR	6203391	CallExpression	strlen ( other_space -> name )		6202995	1					
ANR	6203392	Callee	strlen		6202995	0					
ANR	6203393	Identifier	strlen		6202995	0					
ANR	6203394	ArgumentList	other_space -> name		6202995	1					
ANR	6203395	Argument	other_space -> name		6202995	0					
ANR	6203396	PtrMemberAccess	other_space -> name		6202995	0					
ANR	6203397	Identifier	other_space		6202995	0					
ANR	6203398	Identifier	name		6202995	1					
ANR	6203399	Statement	r_list_foreach	1066:1:24934:24947	6202995	44	True				
ANR	6203400	Statement	(	1066:16:24949:24949	6202995	45	True				
ANR	6203401	Statement	la	1066:17:24950:24951	6202995	46	True				
ANR	6203402	Statement	","	1066:19:24952:24952	6202995	47	True				
ANR	6203403	Statement	itr	1066:21:24954:24956	6202995	48	True				
ANR	6203404	Statement	","	1066:24:24957:24957	6202995	49	True				
ANR	6203405	Statement	si	1066:26:24959:24960	6202995	50	True				
ANR	6203406	Statement	)	1066:28:24961:24961	6202995	51	True				
ANR	6203407	CompoundStatement		67:30:1591:1591	6202995	52					
ANR	6203408	IfStatement	"if ( strstr ( si -> name , ""imp."" ) )"		6202995	0					
ANR	6203409	Condition	"strstr ( si -> name , ""imp."" )"	1067:6:24971:24995	6202995	0	True				
ANR	6203410	CallExpression	"strstr ( si -> name , ""imp."" )"		6202995	0					
ANR	6203411	Callee	strstr		6202995	0					
ANR	6203412	Identifier	strstr		6202995	0					
ANR	6203413	ArgumentList	si -> name		6202995	1					
ANR	6203414	Argument	si -> name		6202995	0					
ANR	6203415	PtrMemberAccess	si -> name		6202995	0					
ANR	6203416	Identifier	si		6202995	0					
ANR	6203417	Identifier	name		6202995	1					
ANR	6203418	Argument	"""imp."""		6202995	1					
ANR	6203419	PrimaryExpression	"""imp."""		6202995	0					
ANR	6203420	CompoundStatement		68:33:1626:1626	6202995	1					
ANR	6203421	ContinueStatement	continue ;	1068:3:25003:25011	6202995	0	True				
ANR	6203422	Statement	r_list_foreach	1070:2:25019:25032	6202995	1	True				
ANR	6203423	Statement	(	1070:17:25034:25034	6202995	2	True				
ANR	6203424	Statement	lb	1070:18:25035:25036	6202995	3	True				
ANR	6203425	Statement	","	1070:20:25037:25037	6202995	4	True				
ANR	6203426	Statement	itr2	1070:22:25039:25042	6202995	5	True				
ANR	6203427	Statement	","	1070:26:25043:25043	6202995	6	True				
ANR	6203428	Statement	si2	1070:28:25045:25047	6202995	7	True				
ANR	6203429	Statement	)	1070:31:25048:25048	6202995	8	True				
ANR	6203430	CompoundStatement		79:3:2045:2152	6202995	9					
ANR	6203431	IfStatement	"if ( strcmp ( si -> name + current_space_name_len + 1 , si2 -> name + other_space_name_len + 1 ) )"		6202995	0					
ANR	6203432	Condition	"strcmp ( si -> name + current_space_name_len + 1 , si2 -> name + other_space_name_len + 1 )"	1071:7:25059:25142	6202995	0	True				
ANR	6203433	CallExpression	"strcmp ( si -> name + current_space_name_len + 1 , si2 -> name + other_space_name_len + 1 )"		6202995	0					
ANR	6203434	Callee	strcmp		6202995	0					
ANR	6203435	Identifier	strcmp		6202995	0					
ANR	6203436	ArgumentList	si -> name + current_space_name_len + 1		6202995	1					
ANR	6203437	Argument	si -> name + current_space_name_len + 1		6202995	0					
ANR	6203438	AdditiveExpression	si -> name + current_space_name_len + 1		6202995	0		+			
ANR	6203439	PtrMemberAccess	si -> name		6202995	0					
ANR	6203440	Identifier	si		6202995	0					
ANR	6203441	Identifier	name		6202995	1					
ANR	6203442	AdditiveExpression	current_space_name_len + 1		6202995	1		+			
ANR	6203443	Identifier	current_space_name_len		6202995	0					
ANR	6203444	PrimaryExpression	1		6202995	1					
ANR	6203445	Argument	si2 -> name + other_space_name_len + 1		6202995	1					
ANR	6203446	AdditiveExpression	si2 -> name + other_space_name_len + 1		6202995	0		+			
ANR	6203447	PtrMemberAccess	si2 -> name		6202995	0					
ANR	6203448	Identifier	si2		6202995	0					
ANR	6203449	Identifier	name		6202995	1					
ANR	6203450	AdditiveExpression	other_space_name_len + 1		6202995	1		+			
ANR	6203451	Identifier	other_space_name_len		6202995	0					
ANR	6203452	PrimaryExpression	1		6202995	1					
ANR	6203453	CompoundStatement		72:93:1773:1773	6202995	1					
ANR	6203454	ContinueStatement	continue ;	1072:4:25151:25159	6202995	0	True				
ANR	6203455	IdentifierDeclStatement	"double bytesScore = matchBytes ( si , si2 ) ;"	1075:3:25215:25255	6202995	1	True				
ANR	6203456	IdentifierDecl	"bytesScore = matchBytes ( si , si2 )"		6202995	0					
ANR	6203457	IdentifierDeclType	double		6202995	0					
ANR	6203458	Identifier	bytesScore		6202995	1					
ANR	6203459	AssignmentExpression	"bytesScore = matchBytes ( si , si2 )"		6202995	2		=			
ANR	6203460	Identifier	bytesScore		6202995	0					
ANR	6203461	CallExpression	"matchBytes ( si , si2 )"		6202995	1					
ANR	6203462	Callee	matchBytes		6202995	0					
ANR	6203463	Identifier	matchBytes		6202995	0					
ANR	6203464	ArgumentList	si		6202995	1					
ANR	6203465	Argument	si		6202995	0					
ANR	6203466	Identifier	si		6202995	0					
ANR	6203467	Argument	si2		6202995	1					
ANR	6203468	Identifier	si2		6202995	0					
ANR	6203469	IdentifierDeclStatement	"double graphScore = matchGraph ( si , si2 ) ;"	1076:3:25260:25300	6202995	2	True				
ANR	6203470	IdentifierDecl	"graphScore = matchGraph ( si , si2 )"		6202995	0					
ANR	6203471	IdentifierDeclType	double		6202995	0					
ANR	6203472	Identifier	graphScore		6202995	1					
ANR	6203473	AssignmentExpression	"graphScore = matchGraph ( si , si2 )"		6202995	2		=			
ANR	6203474	Identifier	graphScore		6202995	0					
ANR	6203475	CallExpression	"matchGraph ( si , si2 )"		6202995	1					
ANR	6203476	Callee	matchGraph		6202995	0					
ANR	6203477	Identifier	matchGraph		6202995	0					
ANR	6203478	ArgumentList	si		6202995	1					
ANR	6203479	Argument	si		6202995	0					
ANR	6203480	Identifier	si		6202995	0					
ANR	6203481	Argument	si2		6202995	1					
ANR	6203482	Identifier	si2		6202995	0					
ANR	6203483	IdentifierDeclStatement	bool bytesMatch = bytesScore >= ( options ? options -> bytes_diff_threshold : SIGN_DIFF_MATCH_BYTES_THRESHOLD ) ;	1077:3:25305:25412	6202995	3	True				
ANR	6203484	IdentifierDecl	bytesMatch = bytesScore >= ( options ? options -> bytes_diff_threshold : SIGN_DIFF_MATCH_BYTES_THRESHOLD )		6202995	0					
ANR	6203485	IdentifierDeclType	bool		6202995	0					
ANR	6203486	Identifier	bytesMatch		6202995	1					
ANR	6203487	AssignmentExpression	bytesMatch = bytesScore >= ( options ? options -> bytes_diff_threshold : SIGN_DIFF_MATCH_BYTES_THRESHOLD )		6202995	2		=			
ANR	6203488	Identifier	bytesMatch		6202995	0					
ANR	6203489	RelationalExpression	bytesScore >= ( options ? options -> bytes_diff_threshold : SIGN_DIFF_MATCH_BYTES_THRESHOLD )		6202995	1		>=			
ANR	6203490	Identifier	bytesScore		6202995	0					
ANR	6203491	ConditionalExpression	options ? options -> bytes_diff_threshold : SIGN_DIFF_MATCH_BYTES_THRESHOLD		6202995	1					
ANR	6203492	Condition	options		6202995	0					
ANR	6203493	Identifier	options		6202995	0					
ANR	6203494	PtrMemberAccess	options -> bytes_diff_threshold		6202995	1					
ANR	6203495	Identifier	options		6202995	0					
ANR	6203496	Identifier	bytes_diff_threshold		6202995	1					
ANR	6203497	Identifier	SIGN_DIFF_MATCH_BYTES_THRESHOLD		6202995	2					
ANR	6203498	IdentifierDeclStatement	bool graphMatch = graphScore >= ( options ? options -> graph_diff_threshold : SIGN_DIFF_MATCH_GRAPH_THRESHOLD ) ;	1078:3:25417:25524	6202995	4	True				
ANR	6203499	IdentifierDecl	graphMatch = graphScore >= ( options ? options -> graph_diff_threshold : SIGN_DIFF_MATCH_GRAPH_THRESHOLD )		6202995	0					
ANR	6203500	IdentifierDeclType	bool		6202995	0					
ANR	6203501	Identifier	graphMatch		6202995	1					
ANR	6203502	AssignmentExpression	graphMatch = graphScore >= ( options ? options -> graph_diff_threshold : SIGN_DIFF_MATCH_GRAPH_THRESHOLD )		6202995	2		=			
ANR	6203503	Identifier	graphMatch		6202995	0					
ANR	6203504	RelationalExpression	graphScore >= ( options ? options -> graph_diff_threshold : SIGN_DIFF_MATCH_GRAPH_THRESHOLD )		6202995	1		>=			
ANR	6203505	Identifier	graphScore		6202995	0					
ANR	6203506	ConditionalExpression	options ? options -> graph_diff_threshold : SIGN_DIFF_MATCH_GRAPH_THRESHOLD		6202995	1					
ANR	6203507	Condition	options		6202995	0					
ANR	6203508	Identifier	options		6202995	0					
ANR	6203509	PtrMemberAccess	options -> graph_diff_threshold		6202995	1					
ANR	6203510	Identifier	options		6202995	0					
ANR	6203511	Identifier	graph_diff_threshold		6202995	1					
ANR	6203512	Identifier	SIGN_DIFF_MATCH_GRAPH_THRESHOLD		6202995	2					
ANR	6203513	IfStatement	if ( ( bytesMatch && ! not_matching ) || ( ! bytesMatch && not_matching ) )		6202995	5					
ANR	6203514	Condition	( bytesMatch && ! not_matching ) || ( ! bytesMatch && not_matching )	1079:7:25533:25594	6202995	0	True				
ANR	6203515	OrExpression	( bytesMatch && ! not_matching ) || ( ! bytesMatch && not_matching )		6202995	0		||			
ANR	6203516	AndExpression	bytesMatch && ! not_matching		6202995	0		&&			
ANR	6203517	Identifier	bytesMatch		6202995	0					
ANR	6203518	UnaryOperationExpression	! not_matching		6202995	1					
ANR	6203519	UnaryOperator	!		6202995	0					
ANR	6203520	Identifier	not_matching		6202995	1					
ANR	6203521	AndExpression	! bytesMatch && not_matching		6202995	1		&&			
ANR	6203522	UnaryOperationExpression	! bytesMatch		6202995	0					
ANR	6203523	UnaryOperator	!		6202995	0					
ANR	6203524	Identifier	bytesMatch		6202995	1					
ANR	6203525	Identifier	not_matching		6202995	1					
ANR	6203526	CompoundStatement		80:71:2225:2225	6202995	1					
ANR	6203527	Statement	a	1080:4:25603:25603	6202995	0	True				
ANR	6203528	Statement	->	1080:5:25604:25605	6202995	1	True				
ANR	6203529	Statement	cb_printf	1080:7:25606:25614	6202995	2	True				
ANR	6203530	Statement	(	1080:17:25616:25616	6202995	3	True				
ANR	6203531	Statement	"""0x%08"""	1080:18:25617:25623	6202995	4	True				
ANR	6203532	Statement	PFMT64x	1080:25:25624:25630	6202995	5	True				
ANR	6203533	Statement	""" 0x%08"""	1080:32:25631:25638	6202995	6	True				
ANR	6203534	Statement	PFMT64x	1080:40:25639:25645	6202995	7	True				
ANR	6203535	Statement	""" %02.5f B %s\\n"""	1080:47:25646:25661	6202995	8	True				
ANR	6203536	Statement	","	1080:63:25662:25662	6202995	9	True				
ANR	6203537	Statement	si	1080:65:25664:25665	6202995	10	True				
ANR	6203538	Statement	->	1080:67:25666:25667	6202995	11	True				
ANR	6203539	Statement	addr	1080:69:25668:25671	6202995	12	True				
ANR	6203540	Statement	","	1080:73:25672:25672	6202995	13	True				
ANR	6203541	Statement	si2	1080:75:25674:25676	6202995	14	True				
ANR	6203542	Statement	->	1080:78:25677:25678	6202995	15	True				
ANR	6203543	Statement	addr	1080:80:25679:25682	6202995	16	True				
ANR	6203544	Statement	","	1080:84:25683:25683	6202995	17	True				
ANR	6203545	Statement	bytesScore	1080:86:25685:25694	6202995	18	True				
ANR	6203546	Statement	","	1080:96:25695:25695	6202995	19	True				
ANR	6203547	Statement	si	1080:98:25697:25698	6202995	20	True				
ANR	6203548	Statement	->	1080:100:25699:25700	6202995	21	True				
ANR	6203549	Statement	name	1080:102:25701:25704	6202995	22	True				
ANR	6203550	Statement	)	1080:106:25705:25705	6202995	23	True				
ANR	6203551	ExpressionStatement		1080:107:25706:25706	6202995	24	True				
ANR	6203552	IfStatement	if ( ( graphMatch && ! not_matching ) || ( ! graphMatch && not_matching ) )		6202995	6					
ANR	6203553	Condition	( graphMatch && ! not_matching ) || ( ! graphMatch && not_matching )	1082:7:25720:25781	6202995	0	True				
ANR	6203554	OrExpression	( graphMatch && ! not_matching ) || ( ! graphMatch && not_matching )		6202995	0		||			
ANR	6203555	AndExpression	graphMatch && ! not_matching		6202995	0		&&			
ANR	6203556	Identifier	graphMatch		6202995	0					
ANR	6203557	UnaryOperationExpression	! not_matching		6202995	1					
ANR	6203558	UnaryOperator	!		6202995	0					
ANR	6203559	Identifier	not_matching		6202995	1					
ANR	6203560	AndExpression	! graphMatch && not_matching		6202995	1		&&			
ANR	6203561	UnaryOperationExpression	! graphMatch		6202995	0					
ANR	6203562	UnaryOperator	!		6202995	0					
ANR	6203563	Identifier	graphMatch		6202995	1					
ANR	6203564	Identifier	not_matching		6202995	1					
ANR	6203565	CompoundStatement		83:71:2412:2412	6202995	1					
ANR	6203566	Statement	a	1083:4:25790:25790	6202995	0	True				
ANR	6203567	Statement	->	1083:5:25791:25792	6202995	1	True				
ANR	6203568	Statement	cb_printf	1083:7:25793:25801	6202995	2	True				
ANR	6203569	Statement	(	1083:17:25803:25803	6202995	3	True				
ANR	6203570	Statement	"""0x%08"""	1083:18:25804:25810	6202995	4	True				
ANR	6203571	Statement	PFMT64x	1083:25:25811:25817	6202995	5	True				
ANR	6203572	Statement	""" 0x%08"""	1083:32:25818:25825	6202995	6	True				
ANR	6203573	Statement	PFMT64x	1083:40:25826:25832	6202995	7	True				
ANR	6203574	Statement	""" %02.5f G %s\\n"""	1083:47:25833:25848	6202995	8	True				
ANR	6203575	Statement	","	1083:63:25849:25849	6202995	9	True				
ANR	6203576	Statement	si	1083:65:25851:25852	6202995	10	True				
ANR	6203577	Statement	->	1083:67:25853:25854	6202995	11	True				
ANR	6203578	Statement	addr	1083:69:25855:25858	6202995	12	True				
ANR	6203579	Statement	","	1083:73:25859:25859	6202995	13	True				
ANR	6203580	Statement	si2	1083:75:25861:25863	6202995	14	True				
ANR	6203581	Statement	->	1083:78:25864:25865	6202995	15	True				
ANR	6203582	Statement	addr	1083:80:25866:25869	6202995	16	True				
ANR	6203583	Statement	","	1083:84:25870:25870	6202995	17	True				
ANR	6203584	Statement	graphScore	1083:86:25872:25881	6202995	18	True				
ANR	6203585	Statement	","	1083:96:25882:25882	6202995	19	True				
ANR	6203586	Statement	si	1083:98:25884:25885	6202995	20	True				
ANR	6203587	Statement	->	1083:100:25886:25887	6202995	21	True				
ANR	6203588	Statement	name	1083:102:25888:25891	6202995	22	True				
ANR	6203589	Statement	)	1083:106:25892:25892	6202995	23	True				
ANR	6203590	ExpressionStatement		1083:107:25893:25893	6202995	24	True				
ANR	6203591	ExpressionStatement	r_list_free ( la )	1088:1:25909:25925	6202995	53	True				
ANR	6203592	CallExpression	r_list_free ( la )		6202995	0					
ANR	6203593	Callee	r_list_free		6202995	0					
ANR	6203594	Identifier	r_list_free		6202995	0					
ANR	6203595	ArgumentList	la		6202995	1					
ANR	6203596	Argument	la		6202995	0					
ANR	6203597	Identifier	la		6202995	0					
ANR	6203598	ExpressionStatement	r_list_free ( lb )	1089:1:25928:25944	6202995	54	True				
ANR	6203599	CallExpression	r_list_free ( lb )		6202995	0					
ANR	6203600	Callee	r_list_free		6202995	0					
ANR	6203601	Identifier	r_list_free		6202995	0					
ANR	6203602	ArgumentList	lb		6202995	1					
ANR	6203603	Argument	lb		6202995	0					
ANR	6203604	Identifier	lb		6202995	0					
ANR	6203605	ReturnStatement	return true ;	1091:1:25948:25959	6202995	55	True				
ANR	6203606	Identifier	true		6202995	0					
ANR	6203607	Label	beach :	1092:0:25961:25966	6202995	56	True				
ANR	6203608	Identifier	beach		6202995	0					
ANR	6203609	ExpressionStatement	ls_free ( current_zigns )	1093:1:25969:25992	6202995	57	True				
ANR	6203610	CallExpression	ls_free ( current_zigns )		6202995	0					
ANR	6203611	Callee	ls_free		6202995	0					
ANR	6203612	Identifier	ls_free		6202995	0					
ANR	6203613	ArgumentList	current_zigns		6202995	1					
ANR	6203614	Argument	current_zigns		6202995	0					
ANR	6203615	Identifier	current_zigns		6202995	0					
ANR	6203616	ExpressionStatement	ls_free ( other_zigns )	1094:1:25995:26016	6202995	58	True				
ANR	6203617	CallExpression	ls_free ( other_zigns )		6202995	0					
ANR	6203618	Callee	ls_free		6202995	0					
ANR	6203619	Identifier	ls_free		6202995	0					
ANR	6203620	ArgumentList	other_zigns		6202995	1					
ANR	6203621	Argument	other_zigns		6202995	0					
ANR	6203622	Identifier	other_zigns		6202995	0					
ANR	6203623	ExpressionStatement	r_list_free ( la )	1095:1:26019:26035	6202995	59	True				
ANR	6203624	CallExpression	r_list_free ( la )		6202995	0					
ANR	6203625	Callee	r_list_free		6202995	0					
ANR	6203626	Identifier	r_list_free		6202995	0					
ANR	6203627	ArgumentList	la		6202995	1					
ANR	6203628	Argument	la		6202995	0					
ANR	6203629	Identifier	la		6202995	0					
ANR	6203630	ExpressionStatement	r_list_free ( lb )	1096:1:26038:26054	6202995	60	True				
ANR	6203631	CallExpression	r_list_free ( lb )		6202995	0					
ANR	6203632	Callee	r_list_free		6202995	0					
ANR	6203633	Identifier	r_list_free		6202995	0					
ANR	6203634	ArgumentList	lb		6202995	1					
ANR	6203635	Argument	lb		6202995	0					
ANR	6203636	Identifier	lb		6202995	0					
ANR	6203637	ReturnStatement	return false ;	1098:1:26058:26070	6202995	61	True				
ANR	6203638	Identifier	false		6202995	0					
ANR	6203639	ReturnType	R_API bool		6202995	1					
ANR	6203640	Identifier	r_sign_diff_by_name		6202995	2					
ANR	6203641	ParameterList	"RAnal * a , RSignOptions * options , const char * other_space_name , bool not_matching"		6202995	3					
ANR	6203642	Parameter	RAnal * a	1000:31:23288:23295	6202995	0	True				
ANR	6203643	ParameterType	RAnal *		6202995	0					
ANR	6203644	Identifier	a		6202995	1					
ANR	6203645	Parameter	RSignOptions * options	1000:41:23298:23319	6202995	1	True				
ANR	6203646	ParameterType	RSignOptions *		6202995	0					
ANR	6203647	Identifier	options		6202995	1					
ANR	6203648	Parameter	const char * other_space_name	1000:65:23322:23349	6202995	2	True				
ANR	6203649	ParameterType	const char *		6202995	0					
ANR	6203650	Identifier	other_space_name		6202995	1					
ANR	6203651	Parameter	bool not_matching	1000:95:23352:23368	6202995	3	True				
ANR	6203652	ParameterType	bool		6202995	0					
ANR	6203653	Identifier	not_matching		6202995	1					
ANR	6203654	CFGEntryNode	ENTRY		6202995		True				
ANR	6203655	CFGExitNode	EXIT		6202995		True				
ANR	6203656	CFGErrorNode	ERROR		6202995		True				
ANR	6203657	Symbol	SIGN_DIFF_MATCH_BYTES_THRESHOLD		6202995						
ANR	6203658	Symbol	other_space -> name		6202995						
ANR	6203659	Symbol	kv -> base . key		6202995						
ANR	6203660	Symbol	si2 -> name		6202995						
ANR	6203661	Symbol	strlen		6202995						
ANR	6203662	Symbol	* current_space		6202995						
ANR	6203663	Symbol	current_zigns		6202995						
ANR	6203664	Symbol	kv -> base . value		6202995						
ANR	6203665	Symbol	options		6202995						
ANR	6203666	Symbol	ls_length		6202995						
ANR	6203667	Symbol	options -> bytes_diff_threshold		6202995						
ANR	6203668	Symbol	si2		6202995						
ANR	6203669	Symbol	* si		6202995						
ANR	6203670	Symbol	si -> name		6202995						
ANR	6203671	Symbol	strcmp		6202995						
ANR	6203672	Symbol	NULL		6202995						
ANR	6203673	Symbol	itr		6202995						
ANR	6203674	Symbol	iter		6202995						
ANR	6203675	Symbol	it		6202995						
ANR	6203676	Symbol	graphScore		6202995						
ANR	6203677	Symbol	r_spaces_get		6202995						
ANR	6203678	Symbol	r_sign_deserialize		6202995						
ANR	6203679	Symbol	matchBytes		6202995						
ANR	6203680	Symbol	other_space_name		6202995						
ANR	6203681	Symbol	* kv		6202995						
ANR	6203682	Symbol	kv -> base		6202995						
ANR	6203683	Symbol	not_matching		6202995						
ANR	6203684	Symbol	strstr		6202995						
ANR	6203685	Symbol	bytesScore		6202995						
ANR	6203686	Symbol	true		6202995						
ANR	6203687	Symbol	r_sign_item_new		6202995						
ANR	6203688	Symbol	* si2		6202995						
ANR	6203689	Symbol	& a -> zign_spaces		6202995						
ANR	6203690	Symbol	* options		6202995						
ANR	6203691	Symbol	other_space_name_len		6202995						
ANR	6203692	Symbol	matchGraph		6202995						
ANR	6203693	Symbol	* other_space		6202995						
ANR	6203694	Symbol	si		6202995						
ANR	6203695	Symbol	other_space		6202995						
ANR	6203696	Symbol	current_space -> name		6202995						
ANR	6203697	Symbol	itr2		6202995						
ANR	6203698	Symbol	r_spaces_current		6202995						
ANR	6203699	Symbol	a		6202995						
ANR	6203700	Symbol	current_space		6202995						
ANR	6203701	Symbol	bytesMatch		6202995						
ANR	6203702	Symbol	graphMatch		6202995						
ANR	6203703	Symbol	false		6202995						
ANR	6203704	Symbol	k		6202995						
ANR	6203705	Symbol	* a		6202995						
ANR	6203706	Symbol	kv		6202995						
ANR	6203707	Symbol	a -> sdb_zigns		6202995						
ANR	6203708	Symbol	current_space_name_len		6202995						
ANR	6203709	Symbol	other_zigns		6202995						
ANR	6203710	Symbol	options -> graph_diff_threshold		6202995						
ANR	6203711	Symbol	sdb_foreach_match		6202995						
ANR	6203712	Symbol	la		6202995						
ANR	6203713	Symbol	lb		6202995						
ANR	6203714	Symbol	SIGN_DIFF_MATCH_GRAPH_THRESHOLD		6202995						
ANR	6203715	Symbol	r_list_new		6202995						
ANR	6203716	ClassDef	ctxListCB	1101:0:26075:26131							
ANR	6203717	DeclStmt									
ANR	6203718	Decl							RAnal	RAnal *	anal
ANR	6203719	DeclStmt									
ANR	6203720	Decl							int	int	idx
ANR	6203721	DeclStmt									
ANR	6203722	Decl							int	int	format
ANR	6203723	ClassDef	ctxGetListCB	1107:0:26135:26185							
ANR	6203724	DeclStmt									
ANR	6203725	Decl							RAnal	RAnal *	anal
ANR	6203726	DeclStmt									
ANR	6203727	Decl							RList	RList *	list
ANR	6203728	Function	listBytes	1112:0:26189:27155							
ANR	6203729	FunctionDef	"listBytes (RAnal * a , RSignItem * it , int format)"		6203728	0					
ANR	6203730	CompoundStatement		1112:59:26248:27155	6203728	0					
ANR	6203731	IdentifierDeclStatement	RSignBytes * bytes = it -> bytes ;	1113:1:26251:26280	6203728	0	True				
ANR	6203732	IdentifierDecl	* bytes = it -> bytes		6203728	0					
ANR	6203733	IdentifierDeclType	RSignBytes *		6203728	0					
ANR	6203734	Identifier	bytes		6203728	1					
ANR	6203735	AssignmentExpression	* bytes = it -> bytes		6203728	2		=			
ANR	6203736	Identifier	bytes		6203728	0					
ANR	6203737	PtrMemberAccess	it -> bytes		6203728	1					
ANR	6203738	Identifier	it		6203728	0					
ANR	6203739	Identifier	bytes		6203728	1					
ANR	6203740	IfStatement	if ( ! bytes -> bytes )		6203728	1					
ANR	6203741	Condition	! bytes -> bytes	1115:5:26288:26300	6203728	0	True				
ANR	6203742	UnaryOperationExpression	! bytes -> bytes		6203728	0					
ANR	6203743	UnaryOperator	!		6203728	0					
ANR	6203744	PtrMemberAccess	bytes -> bytes		6203728	1					
ANR	6203745	Identifier	bytes		6203728	0					
ANR	6203746	Identifier	bytes		6203728	1					
ANR	6203747	CompoundStatement		4:20:54:54	6203728	1					
ANR	6203748	ReturnStatement	return ;	1116:2:26307:26313	6203728	0	True				
ANR	6203749	IdentifierDeclStatement	"int masked = 0 , i = 0 ;"	1119:1:26320:26341	6203728	2	True				
ANR	6203750	IdentifierDecl	masked = 0		6203728	0					
ANR	6203751	IdentifierDeclType	int		6203728	0					
ANR	6203752	Identifier	masked		6203728	1					
ANR	6203753	AssignmentExpression	masked = 0		6203728	2		=			
ANR	6203754	Identifier	masked		6203728	0					
ANR	6203755	PrimaryExpression	0		6203728	1					
ANR	6203756	IdentifierDecl	i = 0		6203728	1					
ANR	6203757	IdentifierDeclType	int		6203728	0					
ANR	6203758	Identifier	i		6203728	1					
ANR	6203759	AssignmentExpression	i = 0		6203728	2		=			
ANR	6203760	Identifier	i		6203728	0					
ANR	6203761	PrimaryExpression	0		6203728	1					
ANR	6203762	ForStatement	for ( i = 0 ; i < bytes -> size ; i ++ )		6203728	3					
ANR	6203763	ForInit	i = 0 ;	1120:6:26349:26354	6203728	0	True				
ANR	6203764	AssignmentExpression	i = 0		6203728	0		=			
ANR	6203765	Identifier	i		6203728	0					
ANR	6203766	PrimaryExpression	0		6203728	1					
ANR	6203767	Condition	i < bytes -> size	1120:13:26356:26370	6203728	1	True				
ANR	6203768	RelationalExpression	i < bytes -> size		6203728	0		<			
ANR	6203769	Identifier	i		6203728	0					
ANR	6203770	PtrMemberAccess	bytes -> size		6203728	1					
ANR	6203771	Identifier	bytes		6203728	0					
ANR	6203772	Identifier	size		6203728	1					
ANR	6203773	PostIncDecOperationExpression	i ++	1120:30:26373:26375	6203728	2	True				
ANR	6203774	Identifier	i		6203728	0					
ANR	6203775	IncDec	++		6203728	1					
ANR	6203776	CompoundStatement		9:35:129:129	6203728	3					
ANR	6203777	ExpressionStatement	masked += bytes -> mask [ i ] == 0xff	1121:2:26382:26414	6203728	0	True				
ANR	6203778	AssignmentExpression	masked += bytes -> mask [ i ] == 0xff		6203728	0		+=			
ANR	6203779	Identifier	masked		6203728	0					
ANR	6203780	EqualityExpression	bytes -> mask [ i ] == 0xff		6203728	1		==			
ANR	6203781	ArrayIndexing	bytes -> mask [ i ]		6203728	0					
ANR	6203782	PtrMemberAccess	bytes -> mask		6203728	0					
ANR	6203783	Identifier	bytes		6203728	0					
ANR	6203784	Identifier	mask		6203728	1					
ANR	6203785	Identifier	i		6203728	1					
ANR	6203786	PrimaryExpression	0xff		6203728	1					
ANR	6203787	IdentifierDeclStatement	"char * strbytes = r_hex_bin2strdup ( bytes -> bytes , bytes -> size ) ;"	1124:1:26421:26483	6203728	4	True				
ANR	6203788	IdentifierDecl	"* strbytes = r_hex_bin2strdup ( bytes -> bytes , bytes -> size )"		6203728	0					
ANR	6203789	IdentifierDeclType	char *		6203728	0					
ANR	6203790	Identifier	strbytes		6203728	1					
ANR	6203791	AssignmentExpression	"* strbytes = r_hex_bin2strdup ( bytes -> bytes , bytes -> size )"		6203728	2		=			
ANR	6203792	Identifier	strbytes		6203728	0					
ANR	6203793	CallExpression	"r_hex_bin2strdup ( bytes -> bytes , bytes -> size )"		6203728	1					
ANR	6203794	Callee	r_hex_bin2strdup		6203728	0					
ANR	6203795	Identifier	r_hex_bin2strdup		6203728	0					
ANR	6203796	ArgumentList	bytes -> bytes		6203728	1					
ANR	6203797	Argument	bytes -> bytes		6203728	0					
ANR	6203798	PtrMemberAccess	bytes -> bytes		6203728	0					
ANR	6203799	Identifier	bytes		6203728	0					
ANR	6203800	Identifier	bytes		6203728	1					
ANR	6203801	Argument	bytes -> size		6203728	1					
ANR	6203802	PtrMemberAccess	bytes -> size		6203728	0					
ANR	6203803	Identifier	bytes		6203728	0					
ANR	6203804	Identifier	size		6203728	1					
ANR	6203805	IfStatement	if ( ! strbytes )		6203728	5					
ANR	6203806	Condition	! strbytes	1125:5:26490:26498	6203728	0	True				
ANR	6203807	UnaryOperationExpression	! strbytes		6203728	0					
ANR	6203808	UnaryOperator	!		6203728	0					
ANR	6203809	Identifier	strbytes		6203728	1					
ANR	6203810	CompoundStatement		14:16:252:252	6203728	1					
ANR	6203811	ReturnStatement	return ;	1126:2:26505:26511	6203728	0	True				
ANR	6203812	IdentifierDeclStatement	"char * strmask = r_hex_bin2strdup ( bytes -> mask , bytes -> size ) ;"	1128:1:26517:26577	6203728	6	True				
ANR	6203813	IdentifierDecl	"* strmask = r_hex_bin2strdup ( bytes -> mask , bytes -> size )"		6203728	0					
ANR	6203814	IdentifierDeclType	char *		6203728	0					
ANR	6203815	Identifier	strmask		6203728	1					
ANR	6203816	AssignmentExpression	"* strmask = r_hex_bin2strdup ( bytes -> mask , bytes -> size )"		6203728	2		=			
ANR	6203817	Identifier	strmask		6203728	0					
ANR	6203818	CallExpression	"r_hex_bin2strdup ( bytes -> mask , bytes -> size )"		6203728	1					
ANR	6203819	Callee	r_hex_bin2strdup		6203728	0					
ANR	6203820	Identifier	r_hex_bin2strdup		6203728	0					
ANR	6203821	ArgumentList	bytes -> mask		6203728	1					
ANR	6203822	Argument	bytes -> mask		6203728	0					
ANR	6203823	PtrMemberAccess	bytes -> mask		6203728	0					
ANR	6203824	Identifier	bytes		6203728	0					
ANR	6203825	Identifier	mask		6203728	1					
ANR	6203826	Argument	bytes -> size		6203728	1					
ANR	6203827	PtrMemberAccess	bytes -> size		6203728	0					
ANR	6203828	Identifier	bytes		6203728	0					
ANR	6203829	Identifier	size		6203728	1					
ANR	6203830	IfStatement	if ( ! strmask )		6203728	7					
ANR	6203831	Condition	! strmask	1129:5:26584:26591	6203728	0	True				
ANR	6203832	UnaryOperationExpression	! strmask		6203728	0					
ANR	6203833	UnaryOperator	!		6203728	0					
ANR	6203834	Identifier	strmask		6203728	1					
ANR	6203835	CompoundStatement		18:15:345:345	6203728	1					
ANR	6203836	ExpressionStatement	free ( strbytes )	1130:2:26598:26613	6203728	0	True				
ANR	6203837	CallExpression	free ( strbytes )		6203728	0					
ANR	6203838	Callee	free		6203728	0					
ANR	6203839	Identifier	free		6203728	0					
ANR	6203840	ArgumentList	strbytes		6203728	1					
ANR	6203841	Argument	strbytes		6203728	0					
ANR	6203842	Identifier	strbytes		6203728	0					
ANR	6203843	ReturnStatement	return ;	1131:2:26617:26623	6203728	1	True				
ANR	6203844	IfStatement	if ( format == '*' )		6203728	8					
ANR	6203845	Condition	format == '*'	1134:5:26634:26646	6203728	0	True				
ANR	6203846	EqualityExpression	format == '*'		6203728	0		==			
ANR	6203847	Identifier	format		6203728	0					
ANR	6203848	PrimaryExpression	'*'		6203728	1					
ANR	6203849	CompoundStatement		23:20:400:400	6203728	1					
ANR	6203850	IfStatement	if ( masked == bytes -> size )		6203728	0					
ANR	6203851	Condition	masked == bytes -> size	1135:6:26657:26677	6203728	0	True				
ANR	6203852	EqualityExpression	masked == bytes -> size		6203728	0		==			
ANR	6203853	Identifier	masked		6203728	0					
ANR	6203854	PtrMemberAccess	bytes -> size		6203728	1					
ANR	6203855	Identifier	bytes		6203728	0					
ANR	6203856	Identifier	size		6203728	1					
ANR	6203857	CompoundStatement		24:29:431:431	6203728	1					
ANR	6203858	ExpressionStatement	"a -> cb_printf ( ""za %s b %s\\n"" , it -> name , strbytes )"	1136:3:26685:26734	6203728	0	True				
ANR	6203859	CallExpression	"a -> cb_printf ( ""za %s b %s\\n"" , it -> name , strbytes )"		6203728	0					
ANR	6203860	Callee	a -> cb_printf		6203728	0					
ANR	6203861	PtrMemberAccess	a -> cb_printf		6203728	0					
ANR	6203862	Identifier	a		6203728	0					
ANR	6203863	Identifier	cb_printf		6203728	1					
ANR	6203864	ArgumentList	"""za %s b %s\\n"""		6203728	1					
ANR	6203865	Argument	"""za %s b %s\\n"""		6203728	0					
ANR	6203866	PrimaryExpression	"""za %s b %s\\n"""		6203728	0					
ANR	6203867	Argument	it -> name		6203728	1					
ANR	6203868	PtrMemberAccess	it -> name		6203728	0					
ANR	6203869	Identifier	it		6203728	0					
ANR	6203870	Identifier	name		6203728	1					
ANR	6203871	Argument	strbytes		6203728	2					
ANR	6203872	Identifier	strbytes		6203728	0					
ANR	6203873	ElseStatement	else		6203728	0					
ANR	6203874	CompoundStatement		26:9:496:496	6203728	0					
ANR	6203875	ExpressionStatement	"a -> cb_printf ( ""za %s b %s:%s\\n"" , it -> name , strbytes , strmask )"	1138:3:26750:26811	6203728	0	True				
ANR	6203876	CallExpression	"a -> cb_printf ( ""za %s b %s:%s\\n"" , it -> name , strbytes , strmask )"		6203728	0					
ANR	6203877	Callee	a -> cb_printf		6203728	0					
ANR	6203878	PtrMemberAccess	a -> cb_printf		6203728	0					
ANR	6203879	Identifier	a		6203728	0					
ANR	6203880	Identifier	cb_printf		6203728	1					
ANR	6203881	ArgumentList	"""za %s b %s:%s\\n"""		6203728	1					
ANR	6203882	Argument	"""za %s b %s:%s\\n"""		6203728	0					
ANR	6203883	PrimaryExpression	"""za %s b %s:%s\\n"""		6203728	0					
ANR	6203884	Argument	it -> name		6203728	1					
ANR	6203885	PtrMemberAccess	it -> name		6203728	0					
ANR	6203886	Identifier	it		6203728	0					
ANR	6203887	Identifier	name		6203728	1					
ANR	6203888	Argument	strbytes		6203728	2					
ANR	6203889	Identifier	strbytes		6203728	0					
ANR	6203890	Argument	strmask		6203728	3					
ANR	6203891	Identifier	strmask		6203728	0					
ANR	6203892	ElseStatement	else		6203728	0					
ANR	6203893	IfStatement	if ( format == 'q' )		6203728	0					
ANR	6203894	Condition	format == 'q'	1140:12:26829:26841	6203728	0	True				
ANR	6203895	EqualityExpression	format == 'q'		6203728	0		==			
ANR	6203896	Identifier	format		6203728	0					
ANR	6203897	PrimaryExpression	'q'		6203728	1					
ANR	6203898	CompoundStatement		29:27:595:595	6203728	1					
ANR	6203899	ExpressionStatement	"a -> cb_printf ( "" b(%d/%d)"" , masked , bytes -> size )"	1141:2:26848:26895	6203728	0	True				
ANR	6203900	CallExpression	"a -> cb_printf ( "" b(%d/%d)"" , masked , bytes -> size )"		6203728	0					
ANR	6203901	Callee	a -> cb_printf		6203728	0					
ANR	6203902	PtrMemberAccess	a -> cb_printf		6203728	0					
ANR	6203903	Identifier	a		6203728	0					
ANR	6203904	Identifier	cb_printf		6203728	1					
ANR	6203905	ArgumentList	""" b(%d/%d)"""		6203728	1					
ANR	6203906	Argument	""" b(%d/%d)"""		6203728	0					
ANR	6203907	PrimaryExpression	""" b(%d/%d)"""		6203728	0					
ANR	6203908	Argument	masked		6203728	1					
ANR	6203909	Identifier	masked		6203728	0					
ANR	6203910	Argument	bytes -> size		6203728	2					
ANR	6203911	PtrMemberAccess	bytes -> size		6203728	0					
ANR	6203912	Identifier	bytes		6203728	0					
ANR	6203913	Identifier	size		6203728	1					
ANR	6203914	ElseStatement	else		6203728	0					
ANR	6203915	IfStatement	if ( format == 'j' )		6203728	0					
ANR	6203916	Condition	format == 'j'	1142:12:26909:26921	6203728	0	True				
ANR	6203917	EqualityExpression	format == 'j'		6203728	0		==			
ANR	6203918	Identifier	format		6203728	0					
ANR	6203919	PrimaryExpression	'j'		6203728	1					
ANR	6203920	CompoundStatement		31:27:675:675	6203728	1					
ANR	6203921	ExpressionStatement	"a -> cb_printf ( ""\\""bytes\\"":\\""%s\\"","" , strbytes )"	1143:2:26928:26972	6203728	0	True				
ANR	6203922	CallExpression	"a -> cb_printf ( ""\\""bytes\\"":\\""%s\\"","" , strbytes )"		6203728	0					
ANR	6203923	Callee	a -> cb_printf		6203728	0					
ANR	6203924	PtrMemberAccess	a -> cb_printf		6203728	0					
ANR	6203925	Identifier	a		6203728	0					
ANR	6203926	Identifier	cb_printf		6203728	1					
ANR	6203927	ArgumentList	"""\\""bytes\\"":\\""%s\\"","""		6203728	1					
ANR	6203928	Argument	"""\\""bytes\\"":\\""%s\\"","""		6203728	0					
ANR	6203929	PrimaryExpression	"""\\""bytes\\"":\\""%s\\"","""		6203728	0					
ANR	6203930	Argument	strbytes		6203728	1					
ANR	6203931	Identifier	strbytes		6203728	0					
ANR	6203932	ExpressionStatement	"a -> cb_printf ( ""\\""mask\\"":\\""%s\\"","" , strmask )"	1144:2:26976:27018	6203728	1	True				
ANR	6203933	CallExpression	"a -> cb_printf ( ""\\""mask\\"":\\""%s\\"","" , strmask )"		6203728	0					
ANR	6203934	Callee	a -> cb_printf		6203728	0					
ANR	6203935	PtrMemberAccess	a -> cb_printf		6203728	0					
ANR	6203936	Identifier	a		6203728	0					
ANR	6203937	Identifier	cb_printf		6203728	1					
ANR	6203938	ArgumentList	"""\\""mask\\"":\\""%s\\"","""		6203728	1					
ANR	6203939	Argument	"""\\""mask\\"":\\""%s\\"","""		6203728	0					
ANR	6203940	PrimaryExpression	"""\\""mask\\"":\\""%s\\"","""		6203728	0					
ANR	6203941	Argument	strmask		6203728	1					
ANR	6203942	Identifier	strmask		6203728	0					
ANR	6203943	ElseStatement	else		6203728	0					
ANR	6203944	CompoundStatement		34:8:779:779	6203728	0					
ANR	6203945	ExpressionStatement	"a -> cb_printf ( ""  bytes: %s\\n"" , strbytes )"	1146:2:27032:27072	6203728	0	True				
ANR	6203946	CallExpression	"a -> cb_printf ( ""  bytes: %s\\n"" , strbytes )"		6203728	0					
ANR	6203947	Callee	a -> cb_printf		6203728	0					
ANR	6203948	PtrMemberAccess	a -> cb_printf		6203728	0					
ANR	6203949	Identifier	a		6203728	0					
ANR	6203950	Identifier	cb_printf		6203728	1					
ANR	6203951	ArgumentList	"""  bytes: %s\\n"""		6203728	1					
ANR	6203952	Argument	"""  bytes: %s\\n"""		6203728	0					
ANR	6203953	PrimaryExpression	"""  bytes: %s\\n"""		6203728	0					
ANR	6203954	Argument	strbytes		6203728	1					
ANR	6203955	Identifier	strbytes		6203728	0					
ANR	6203956	ExpressionStatement	"a -> cb_printf ( ""  mask: %s\\n"" , strmask )"	1147:2:27076:27114	6203728	1	True				
ANR	6203957	CallExpression	"a -> cb_printf ( ""  mask: %s\\n"" , strmask )"		6203728	0					
ANR	6203958	Callee	a -> cb_printf		6203728	0					
ANR	6203959	PtrMemberAccess	a -> cb_printf		6203728	0					
ANR	6203960	Identifier	a		6203728	0					
ANR	6203961	Identifier	cb_printf		6203728	1					
ANR	6203962	ArgumentList	"""  mask: %s\\n"""		6203728	1					
ANR	6203963	Argument	"""  mask: %s\\n"""		6203728	0					
ANR	6203964	PrimaryExpression	"""  mask: %s\\n"""		6203728	0					
ANR	6203965	Argument	strmask		6203728	1					
ANR	6203966	Identifier	strmask		6203728	0					
ANR	6203967	ExpressionStatement	free ( strbytes )	1150:1:27121:27136	6203728	9	True				
ANR	6203968	CallExpression	free ( strbytes )		6203728	0					
ANR	6203969	Callee	free		6203728	0					
ANR	6203970	Identifier	free		6203728	0					
ANR	6203971	ArgumentList	strbytes		6203728	1					
ANR	6203972	Argument	strbytes		6203728	0					
ANR	6203973	Identifier	strbytes		6203728	0					
ANR	6203974	ExpressionStatement	free ( strmask )	1151:1:27139:27153	6203728	10	True				
ANR	6203975	CallExpression	free ( strmask )		6203728	0					
ANR	6203976	Callee	free		6203728	0					
ANR	6203977	Identifier	free		6203728	0					
ANR	6203978	ArgumentList	strmask		6203728	1					
ANR	6203979	Argument	strmask		6203728	0					
ANR	6203980	Identifier	strmask		6203728	0					
ANR	6203981	ReturnType	static void		6203728	1					
ANR	6203982	Identifier	listBytes		6203728	2					
ANR	6203983	ParameterList	"RAnal * a , RSignItem * it , int format"		6203728	3					
ANR	6203984	Parameter	RAnal * a	1112:22:26211:26218	6203728	0	True				
ANR	6203985	ParameterType	RAnal *		6203728	0					
ANR	6203986	Identifier	a		6203728	1					
ANR	6203987	Parameter	RSignItem * it	1112:32:26221:26233	6203728	1	True				
ANR	6203988	ParameterType	RSignItem *		6203728	0					
ANR	6203989	Identifier	it		6203728	1					
ANR	6203990	Parameter	int format	1112:47:26236:26245	6203728	2	True				
ANR	6203991	ParameterType	int		6203728	0					
ANR	6203992	Identifier	format		6203728	1					
ANR	6203993	CFGEntryNode	ENTRY		6203728		True				
ANR	6203994	CFGExitNode	EXIT		6203728		True				
ANR	6203995	Symbol	bytes -> size		6203728						
ANR	6203996	Symbol	a		6203728						
ANR	6203997	Symbol	* bytes -> mask		6203728						
ANR	6203998	Symbol	* * bytes		6203728						
ANR	6203999	Symbol	it -> bytes		6203728						
ANR	6204000	Symbol	strmask		6203728						
ANR	6204001	Symbol	masked		6203728						
ANR	6204002	Symbol	r_hex_bin2strdup		6203728						
ANR	6204003	Symbol	it -> name		6203728						
ANR	6204004	Symbol	format		6203728						
ANR	6204005	Symbol	i		6203728						
ANR	6204006	Symbol	it		6203728						
ANR	6204007	Symbol	* bytes		6203728						
ANR	6204008	Symbol	* it		6203728						
ANR	6204009	Symbol	* i		6203728						
ANR	6204010	Symbol	bytes		6203728						
ANR	6204011	Symbol	strbytes		6203728						
ANR	6204012	Symbol	bytes -> bytes		6203728						
ANR	6204013	Symbol	bytes -> mask		6203728						
ANR	6204014	Function	listGraph	1154:0:27158:27913							
ANR	6204015	FunctionDef	"listGraph (RAnal * a , RSignItem * it , int format)"		6204014	0					
ANR	6204016	CompoundStatement		1154:59:27217:27913	6204014	0					
ANR	6204017	IdentifierDeclStatement	RSignGraph * graph = it -> graph ;	1155:1:27220:27249	6204014	0	True				
ANR	6204018	IdentifierDecl	* graph = it -> graph		6204014	0					
ANR	6204019	IdentifierDeclType	RSignGraph *		6204014	0					
ANR	6204020	Identifier	graph		6204014	1					
ANR	6204021	AssignmentExpression	* graph = it -> graph		6204014	2		=			
ANR	6204022	Identifier	graph		6204014	0					
ANR	6204023	PtrMemberAccess	it -> graph		6204014	1					
ANR	6204024	Identifier	it		6204014	0					
ANR	6204025	Identifier	graph		6204014	1					
ANR	6204026	IfStatement	if ( format == 'q' )		6204014	1					
ANR	6204027	Condition	format == 'q'	1157:5:27257:27269	6204014	0	True				
ANR	6204028	EqualityExpression	format == 'q'		6204014	0		==			
ANR	6204029	Identifier	format		6204014	0					
ANR	6204030	PrimaryExpression	'q'		6204014	1					
ANR	6204031	CompoundStatement		4:20:54:54	6204014	1					
ANR	6204032	ExpressionStatement	"a -> cb_printf ( "" g(cc=%d,nb=%d,e=%d,eb=%d,h=%d)"" , graph -> cc , graph -> nbbs , graph -> edges , graph -> ebbs , graph -> bbsum )"	1158:2:27276:27392	6204014	0	True				
ANR	6204033	CallExpression	"a -> cb_printf ( "" g(cc=%d,nb=%d,e=%d,eb=%d,h=%d)"" , graph -> cc , graph -> nbbs , graph -> edges , graph -> ebbs , graph -> bbsum )"		6204014	0					
ANR	6204034	Callee	a -> cb_printf		6204014	0					
ANR	6204035	PtrMemberAccess	a -> cb_printf		6204014	0					
ANR	6204036	Identifier	a		6204014	0					
ANR	6204037	Identifier	cb_printf		6204014	1					
ANR	6204038	ArgumentList	""" g(cc=%d,nb=%d,e=%d,eb=%d,h=%d)"""		6204014	1					
ANR	6204039	Argument	""" g(cc=%d,nb=%d,e=%d,eb=%d,h=%d)"""		6204014	0					
ANR	6204040	PrimaryExpression	""" g(cc=%d,nb=%d,e=%d,eb=%d,h=%d)"""		6204014	0					
ANR	6204041	Argument	graph -> cc		6204014	1					
ANR	6204042	PtrMemberAccess	graph -> cc		6204014	0					
ANR	6204043	Identifier	graph		6204014	0					
ANR	6204044	Identifier	cc		6204014	1					
ANR	6204045	Argument	graph -> nbbs		6204014	2					
ANR	6204046	PtrMemberAccess	graph -> nbbs		6204014	0					
ANR	6204047	Identifier	graph		6204014	0					
ANR	6204048	Identifier	nbbs		6204014	1					
ANR	6204049	Argument	graph -> edges		6204014	3					
ANR	6204050	PtrMemberAccess	graph -> edges		6204014	0					
ANR	6204051	Identifier	graph		6204014	0					
ANR	6204052	Identifier	edges		6204014	1					
ANR	6204053	Argument	graph -> ebbs		6204014	4					
ANR	6204054	PtrMemberAccess	graph -> ebbs		6204014	0					
ANR	6204055	Identifier	graph		6204014	0					
ANR	6204056	Identifier	ebbs		6204014	1					
ANR	6204057	Argument	graph -> bbsum		6204014	5					
ANR	6204058	PtrMemberAccess	graph -> bbsum		6204014	0					
ANR	6204059	Identifier	graph		6204014	0					
ANR	6204060	Identifier	bbsum		6204014	1					
ANR	6204061	ElseStatement	else		6204014	0					
ANR	6204062	IfStatement	if ( format == '*' )		6204014	0					
ANR	6204063	Condition	format == '*'	1160:12:27406:27418	6204014	0	True				
ANR	6204064	EqualityExpression	format == '*'		6204014	0		==			
ANR	6204065	Identifier	format		6204014	0					
ANR	6204066	PrimaryExpression	'*'		6204014	1					
ANR	6204067	CompoundStatement		7:27:203:203	6204014	1					
ANR	6204068	ExpressionStatement	"a -> cb_printf ( ""za %s g cc=%d nbbs=%d edges=%d ebbs=%d bbsum=%d\\n"" , it -> name , graph -> cc , graph -> nbbs , graph -> edges , graph -> ebbs , graph -> bbsum )"	1161:2:27425:27569	6204014	0	True				
ANR	6204069	CallExpression	"a -> cb_printf ( ""za %s g cc=%d nbbs=%d edges=%d ebbs=%d bbsum=%d\\n"" , it -> name , graph -> cc , graph -> nbbs , graph -> edges , graph -> ebbs , graph -> bbsum )"		6204014	0					
ANR	6204070	Callee	a -> cb_printf		6204014	0					
ANR	6204071	PtrMemberAccess	a -> cb_printf		6204014	0					
ANR	6204072	Identifier	a		6204014	0					
ANR	6204073	Identifier	cb_printf		6204014	1					
ANR	6204074	ArgumentList	"""za %s g cc=%d nbbs=%d edges=%d ebbs=%d bbsum=%d\\n"""		6204014	1					
ANR	6204075	Argument	"""za %s g cc=%d nbbs=%d edges=%d ebbs=%d bbsum=%d\\n"""		6204014	0					
ANR	6204076	PrimaryExpression	"""za %s g cc=%d nbbs=%d edges=%d ebbs=%d bbsum=%d\\n"""		6204014	0					
ANR	6204077	Argument	it -> name		6204014	1					
ANR	6204078	PtrMemberAccess	it -> name		6204014	0					
ANR	6204079	Identifier	it		6204014	0					
ANR	6204080	Identifier	name		6204014	1					
ANR	6204081	Argument	graph -> cc		6204014	2					
ANR	6204082	PtrMemberAccess	graph -> cc		6204014	0					
ANR	6204083	Identifier	graph		6204014	0					
ANR	6204084	Identifier	cc		6204014	1					
ANR	6204085	Argument	graph -> nbbs		6204014	3					
ANR	6204086	PtrMemberAccess	graph -> nbbs		6204014	0					
ANR	6204087	Identifier	graph		6204014	0					
ANR	6204088	Identifier	nbbs		6204014	1					
ANR	6204089	Argument	graph -> edges		6204014	4					
ANR	6204090	PtrMemberAccess	graph -> edges		6204014	0					
ANR	6204091	Identifier	graph		6204014	0					
ANR	6204092	Identifier	edges		6204014	1					
ANR	6204093	Argument	graph -> ebbs		6204014	5					
ANR	6204094	PtrMemberAccess	graph -> ebbs		6204014	0					
ANR	6204095	Identifier	graph		6204014	0					
ANR	6204096	Identifier	ebbs		6204014	1					
ANR	6204097	Argument	graph -> bbsum		6204014	6					
ANR	6204098	PtrMemberAccess	graph -> bbsum		6204014	0					
ANR	6204099	Identifier	graph		6204014	0					
ANR	6204100	Identifier	bbsum		6204014	1					
ANR	6204101	ElseStatement	else		6204014	0					
ANR	6204102	IfStatement	if ( format == 'j' )		6204014	0					
ANR	6204103	Condition	format == 'j'	1163:12:27583:27595	6204014	0	True				
ANR	6204104	EqualityExpression	format == 'j'		6204014	0		==			
ANR	6204105	Identifier	format		6204014	0					
ANR	6204106	PrimaryExpression	'j'		6204014	1					
ANR	6204107	CompoundStatement		10:27:380:380	6204014	1					
ANR	6204108	ExpressionStatement	"a -> cb_printf ( ""\\""graph\\"":{\\""cc\\"":%d,\\""nbbs\\"":%d,\\""edges\\"":%d,\\""ebbs\\"":%d,\\""bbsum\\"":%d},"" , graph -> cc , graph -> nbbs , graph -> edges , graph -> ebbs , graph -> bbsum )"	1164:2:27602:27759	6204014	0	True				
ANR	6204109	CallExpression	"a -> cb_printf ( ""\\""graph\\"":{\\""cc\\"":%d,\\""nbbs\\"":%d,\\""edges\\"":%d,\\""ebbs\\"":%d,\\""bbsum\\"":%d},"" , graph -> cc , graph -> nbbs , graph -> edges , graph -> ebbs , graph -> bbsum )"		6204014	0					
ANR	6204110	Callee	a -> cb_printf		6204014	0					
ANR	6204111	PtrMemberAccess	a -> cb_printf		6204014	0					
ANR	6204112	Identifier	a		6204014	0					
ANR	6204113	Identifier	cb_printf		6204014	1					
ANR	6204114	ArgumentList	"""\\""graph\\"":{\\""cc\\"":%d,\\""nbbs\\"":%d,\\""edges\\"":%d,\\""ebbs\\"":%d,\\""bbsum\\"":%d},"""		6204014	1					
ANR	6204115	Argument	"""\\""graph\\"":{\\""cc\\"":%d,\\""nbbs\\"":%d,\\""edges\\"":%d,\\""ebbs\\"":%d,\\""bbsum\\"":%d},"""		6204014	0					
ANR	6204116	PrimaryExpression	"""\\""graph\\"":{\\""cc\\"":%d,\\""nbbs\\"":%d,\\""edges\\"":%d,\\""ebbs\\"":%d,\\""bbsum\\"":%d},"""		6204014	0					
ANR	6204117	Argument	graph -> cc		6204014	1					
ANR	6204118	PtrMemberAccess	graph -> cc		6204014	0					
ANR	6204119	Identifier	graph		6204014	0					
ANR	6204120	Identifier	cc		6204014	1					
ANR	6204121	Argument	graph -> nbbs		6204014	2					
ANR	6204122	PtrMemberAccess	graph -> nbbs		6204014	0					
ANR	6204123	Identifier	graph		6204014	0					
ANR	6204124	Identifier	nbbs		6204014	1					
ANR	6204125	Argument	graph -> edges		6204014	3					
ANR	6204126	PtrMemberAccess	graph -> edges		6204014	0					
ANR	6204127	Identifier	graph		6204014	0					
ANR	6204128	Identifier	edges		6204014	1					
ANR	6204129	Argument	graph -> ebbs		6204014	4					
ANR	6204130	PtrMemberAccess	graph -> ebbs		6204014	0					
ANR	6204131	Identifier	graph		6204014	0					
ANR	6204132	Identifier	ebbs		6204014	1					
ANR	6204133	Argument	graph -> bbsum		6204014	5					
ANR	6204134	PtrMemberAccess	graph -> bbsum		6204014	0					
ANR	6204135	Identifier	graph		6204014	0					
ANR	6204136	Identifier	bbsum		6204014	1					
ANR	6204137	ElseStatement	else		6204014	0					
ANR	6204138	CompoundStatement		13:8:551:551	6204014	0					
ANR	6204139	ExpressionStatement	"a -> cb_printf ( ""  graph: cc=%d nbbs=%d edges=%d ebbs=%d bbsum=%d\\n"" , graph -> cc , graph -> nbbs , graph -> edges , graph -> ebbs , graph -> bbsum )"	1167:2:27773:27908	6204014	0	True				
ANR	6204140	CallExpression	"a -> cb_printf ( ""  graph: cc=%d nbbs=%d edges=%d ebbs=%d bbsum=%d\\n"" , graph -> cc , graph -> nbbs , graph -> edges , graph -> ebbs , graph -> bbsum )"		6204014	0					
ANR	6204141	Callee	a -> cb_printf		6204014	0					
ANR	6204142	PtrMemberAccess	a -> cb_printf		6204014	0					
ANR	6204143	Identifier	a		6204014	0					
ANR	6204144	Identifier	cb_printf		6204014	1					
ANR	6204145	ArgumentList	"""  graph: cc=%d nbbs=%d edges=%d ebbs=%d bbsum=%d\\n"""		6204014	1					
ANR	6204146	Argument	"""  graph: cc=%d nbbs=%d edges=%d ebbs=%d bbsum=%d\\n"""		6204014	0					
ANR	6204147	PrimaryExpression	"""  graph: cc=%d nbbs=%d edges=%d ebbs=%d bbsum=%d\\n"""		6204014	0					
ANR	6204148	Argument	graph -> cc		6204014	1					
ANR	6204149	PtrMemberAccess	graph -> cc		6204014	0					
ANR	6204150	Identifier	graph		6204014	0					
ANR	6204151	Identifier	cc		6204014	1					
ANR	6204152	Argument	graph -> nbbs		6204014	2					
ANR	6204153	PtrMemberAccess	graph -> nbbs		6204014	0					
ANR	6204154	Identifier	graph		6204014	0					
ANR	6204155	Identifier	nbbs		6204014	1					
ANR	6204156	Argument	graph -> edges		6204014	3					
ANR	6204157	PtrMemberAccess	graph -> edges		6204014	0					
ANR	6204158	Identifier	graph		6204014	0					
ANR	6204159	Identifier	edges		6204014	1					
ANR	6204160	Argument	graph -> ebbs		6204014	4					
ANR	6204161	PtrMemberAccess	graph -> ebbs		6204014	0					
ANR	6204162	Identifier	graph		6204014	0					
ANR	6204163	Identifier	ebbs		6204014	1					
ANR	6204164	Argument	graph -> bbsum		6204014	5					
ANR	6204165	PtrMemberAccess	graph -> bbsum		6204014	0					
ANR	6204166	Identifier	graph		6204014	0					
ANR	6204167	Identifier	bbsum		6204014	1					
ANR	6204168	ReturnType	static void		6204014	1					
ANR	6204169	Identifier	listGraph		6204014	2					
ANR	6204170	ParameterList	"RAnal * a , RSignItem * it , int format"		6204014	3					
ANR	6204171	Parameter	RAnal * a	1154:22:27180:27187	6204014	0	True				
ANR	6204172	ParameterType	RAnal *		6204014	0					
ANR	6204173	Identifier	a		6204014	1					
ANR	6204174	Parameter	RSignItem * it	1154:32:27190:27202	6204014	1	True				
ANR	6204175	ParameterType	RSignItem *		6204014	0					
ANR	6204176	Identifier	it		6204014	1					
ANR	6204177	Parameter	int format	1154:47:27205:27214	6204014	2	True				
ANR	6204178	ParameterType	int		6204014	0					
ANR	6204179	Identifier	format		6204014	1					
ANR	6204180	CFGEntryNode	ENTRY		6204014		True				
ANR	6204181	CFGExitNode	EXIT		6204014		True				
ANR	6204182	Symbol	a		6204014						
ANR	6204183	Symbol	it -> graph		6204014						
ANR	6204184	Symbol	it -> name		6204014						
ANR	6204185	Symbol	format		6204014						
ANR	6204186	Symbol	graph -> nbbs		6204014						
ANR	6204187	Symbol	it		6204014						
ANR	6204188	Symbol	graph -> ebbs		6204014						
ANR	6204189	Symbol	graph		6204014						
ANR	6204190	Symbol	* it		6204014						
ANR	6204191	Symbol	graph -> bbsum		6204014						
ANR	6204192	Symbol	* graph		6204014						
ANR	6204193	Symbol	graph -> edges		6204014						
ANR	6204194	Symbol	graph -> cc		6204014						
ANR	6204195	Function	listComment	1172:0:27916:28384							
ANR	6204196	FunctionDef	"listComment (RAnal * a , RSignItem * it , int format)"		6204195	0					
ANR	6204197	CompoundStatement		1172:61:27977:28384	6204195	0					
ANR	6204198	IfStatement	if ( it -> comment )		6204195	0					
ANR	6204199	Condition	it -> comment	1173:5:27984:27994	6204195	0	True				
ANR	6204200	PtrMemberAccess	it -> comment		6204195	0					
ANR	6204201	Identifier	it		6204195	0					
ANR	6204202	Identifier	comment		6204195	1					
ANR	6204203	CompoundStatement		2:18:19:19	6204195	1					
ANR	6204204	IfStatement	if ( format == 'q' )		6204195	0					
ANR	6204205	Condition	format == 'q'	1174:6:28005:28017	6204195	0	True				
ANR	6204206	EqualityExpression	format == 'q'		6204195	0		==			
ANR	6204207	Identifier	format		6204195	0					
ANR	6204208	PrimaryExpression	'q'		6204195	1					
ANR	6204209	CompoundStatement		3:21:42:42	6204195	1					
ANR	6204210	ExpressionStatement	"a -> cb_printf ( ""\\n ; %s\\n"" , it -> comment )"	1176:3:28081:28120	6204195	0	True				
ANR	6204211	CallExpression	"a -> cb_printf ( ""\\n ; %s\\n"" , it -> comment )"		6204195	0					
ANR	6204212	Callee	a -> cb_printf		6204195	0					
ANR	6204213	PtrMemberAccess	a -> cb_printf		6204195	0					
ANR	6204214	Identifier	a		6204195	0					
ANR	6204215	Identifier	cb_printf		6204195	1					
ANR	6204216	ArgumentList	"""\\n ; %s\\n"""		6204195	1					
ANR	6204217	Argument	"""\\n ; %s\\n"""		6204195	0					
ANR	6204218	PrimaryExpression	"""\\n ; %s\\n"""		6204195	0					
ANR	6204219	Argument	it -> comment		6204195	1					
ANR	6204220	PtrMemberAccess	it -> comment		6204195	0					
ANR	6204221	Identifier	it		6204195	0					
ANR	6204222	Identifier	comment		6204195	1					
ANR	6204223	ElseStatement	else		6204195	0					
ANR	6204224	IfStatement	if ( format == '*' )		6204195	0					
ANR	6204225	Condition	format == '*'	1177:13:28135:28147	6204195	0	True				
ANR	6204226	EqualityExpression	format == '*'		6204195	0		==			
ANR	6204227	Identifier	format		6204195	0					
ANR	6204228	PrimaryExpression	'*'		6204195	1					
ANR	6204229	CompoundStatement		6:28:172:172	6204195	1					
ANR	6204230	ExpressionStatement	"a -> cb_printf ( ""%s\\n"" , it -> comment )"	1178:3:28155:28189	6204195	0	True				
ANR	6204231	CallExpression	"a -> cb_printf ( ""%s\\n"" , it -> comment )"		6204195	0					
ANR	6204232	Callee	a -> cb_printf		6204195	0					
ANR	6204233	PtrMemberAccess	a -> cb_printf		6204195	0					
ANR	6204234	Identifier	a		6204195	0					
ANR	6204235	Identifier	cb_printf		6204195	1					
ANR	6204236	ArgumentList	"""%s\\n"""		6204195	1					
ANR	6204237	Argument	"""%s\\n"""		6204195	0					
ANR	6204238	PrimaryExpression	"""%s\\n"""		6204195	0					
ANR	6204239	Argument	it -> comment		6204195	1					
ANR	6204240	PtrMemberAccess	it -> comment		6204195	0					
ANR	6204241	Identifier	it		6204195	0					
ANR	6204242	Identifier	comment		6204195	1					
ANR	6204243	ElseStatement	else		6204195	0					
ANR	6204244	IfStatement	if ( format == 'j' )		6204195	0					
ANR	6204245	Condition	format == 'j'	1179:13:28235:28247	6204195	0	True				
ANR	6204246	EqualityExpression	format == 'j'		6204195	0		==			
ANR	6204247	Identifier	format		6204195	0					
ANR	6204248	PrimaryExpression	'j'		6204195	1					
ANR	6204249	CompoundStatement		8:28:272:272	6204195	1					
ANR	6204250	ExpressionStatement	"a -> cb_printf ( ""\\""comments\\"":\\""%s\\"","" , it -> comment )"	1180:3:28255:28305	6204195	0	True				
ANR	6204251	CallExpression	"a -> cb_printf ( ""\\""comments\\"":\\""%s\\"","" , it -> comment )"		6204195	0					
ANR	6204252	Callee	a -> cb_printf		6204195	0					
ANR	6204253	PtrMemberAccess	a -> cb_printf		6204195	0					
ANR	6204254	Identifier	a		6204195	0					
ANR	6204255	Identifier	cb_printf		6204195	1					
ANR	6204256	ArgumentList	"""\\""comments\\"":\\""%s\\"","""		6204195	1					
ANR	6204257	Argument	"""\\""comments\\"":\\""%s\\"","""		6204195	0					
ANR	6204258	PrimaryExpression	"""\\""comments\\"":\\""%s\\"","""		6204195	0					
ANR	6204259	Argument	it -> comment		6204195	1					
ANR	6204260	PtrMemberAccess	it -> comment		6204195	0					
ANR	6204261	Identifier	it		6204195	0					
ANR	6204262	Identifier	comment		6204195	1					
ANR	6204263	ElseStatement	else		6204195	0					
ANR	6204264	CompoundStatement		10:9:338:338	6204195	0					
ANR	6204265	Statement	a	1182:3:28321:28321	6204195	0	True				
ANR	6204266	Statement	->	1182:4:28322:28323	6204195	1	True				
ANR	6204267	Statement	cb_printf	1182:6:28324:28332	6204195	2	True				
ANR	6204268	Statement	(	1182:16:28334:28334	6204195	3	True				
ANR	6204269	Statement	"""  comment: 0x%08"""	1182:17:28335:28352	6204195	4	True				
ANR	6204270	Statement	PFMT64x	1182:35:28353:28359	6204195	5	True				
ANR	6204271	Statement	"""\\n"""	1182:42:28360:28363	6204195	6	True				
ANR	6204272	Statement	","	1182:46:28364:28364	6204195	7	True				
ANR	6204273	Statement	it	1182:48:28366:28367	6204195	8	True				
ANR	6204274	Statement	->	1182:50:28368:28369	6204195	9	True				
ANR	6204275	Statement	addr	1182:52:28370:28373	6204195	10	True				
ANR	6204276	Statement	)	1182:56:28374:28374	6204195	11	True				
ANR	6204277	ExpressionStatement		1182:57:28375:28375	6204195	12	True				
ANR	6204278	ReturnType	static void		6204195	1					
ANR	6204279	Identifier	listComment		6204195	2					
ANR	6204280	ParameterList	"RAnal * a , RSignItem * it , int format"		6204195	3					
ANR	6204281	Parameter	RAnal * a	1172:24:27940:27947	6204195	0	True				
ANR	6204282	ParameterType	RAnal *		6204195	0					
ANR	6204283	Identifier	a		6204195	1					
ANR	6204284	Parameter	RSignItem * it	1172:34:27950:27962	6204195	1	True				
ANR	6204285	ParameterType	RSignItem *		6204195	0					
ANR	6204286	Identifier	it		6204195	1					
ANR	6204287	Parameter	int format	1172:49:27965:27974	6204195	2	True				
ANR	6204288	ParameterType	int		6204195	0					
ANR	6204289	Identifier	format		6204195	1					
ANR	6204290	CFGEntryNode	ENTRY		6204195		True				
ANR	6204291	CFGExitNode	EXIT		6204195		True				
ANR	6204292	Symbol	a		6204195						
ANR	6204293	Symbol	* it		6204195						
ANR	6204294	Symbol	format		6204195						
ANR	6204295	Symbol	it		6204195						
ANR	6204296	Symbol	it -> comment		6204195						
ANR	6204297	Function	listRealname	1187:0:28387:28866							
ANR	6204298	FunctionDef	"listRealname (RAnal * a , RSignItem * it , int format)"		6204297	0					
ANR	6204299	CompoundStatement		1187:62:28449:28866	6204297	0					
ANR	6204300	IfStatement	if ( it -> realname )		6204297	0					
ANR	6204301	Condition	it -> realname	1188:5:28456:28467	6204297	0	True				
ANR	6204302	PtrMemberAccess	it -> realname		6204297	0					
ANR	6204303	Identifier	it		6204297	0					
ANR	6204304	Identifier	realname		6204297	1					
ANR	6204305	CompoundStatement		2:19:20:20	6204297	1					
ANR	6204306	IfStatement	if ( format == 'q' )		6204297	0					
ANR	6204307	Condition	format == 'q'	1189:6:28478:28490	6204297	0	True				
ANR	6204308	EqualityExpression	format == 'q'		6204297	0		==			
ANR	6204309	Identifier	format		6204297	0					
ANR	6204310	PrimaryExpression	'q'		6204297	1					
ANR	6204311	CompoundStatement		3:21:43:43	6204297	1					
ANR	6204312	ElseStatement	else		6204297	0					
ANR	6204313	IfStatement	if ( format == '*' )		6204297	0					
ANR	6204314	Condition	format == '*'	1191:13:28564:28576	6204297	0	True				
ANR	6204315	EqualityExpression	format == '*'		6204297	0		==			
ANR	6204316	Identifier	format		6204297	0					
ANR	6204317	PrimaryExpression	'*'		6204297	1					
ANR	6204318	CompoundStatement		5:28:129:129	6204297	1					
ANR	6204319	ExpressionStatement	"a -> cb_printf ( ""za %s n %s\\n"" , it -> name , it -> realname )"	1192:3:28584:28637	6204297	0	True				
ANR	6204320	CallExpression	"a -> cb_printf ( ""za %s n %s\\n"" , it -> name , it -> realname )"		6204297	0					
ANR	6204321	Callee	a -> cb_printf		6204297	0					
ANR	6204322	PtrMemberAccess	a -> cb_printf		6204297	0					
ANR	6204323	Identifier	a		6204297	0					
ANR	6204324	Identifier	cb_printf		6204297	1					
ANR	6204325	ArgumentList	"""za %s n %s\\n"""		6204297	1					
ANR	6204326	Argument	"""za %s n %s\\n"""		6204297	0					
ANR	6204327	PrimaryExpression	"""za %s n %s\\n"""		6204297	0					
ANR	6204328	Argument	it -> name		6204297	1					
ANR	6204329	PtrMemberAccess	it -> name		6204297	0					
ANR	6204330	Identifier	it		6204297	0					
ANR	6204331	Identifier	name		6204297	1					
ANR	6204332	Argument	it -> realname		6204297	2					
ANR	6204333	PtrMemberAccess	it -> realname		6204297	0					
ANR	6204334	Identifier	it		6204297	0					
ANR	6204335	Identifier	realname		6204297	1					
ANR	6204336	Statement	a	1193:3:28642:28642	6204297	1	True				
ANR	6204337	Statement	->	1193:4:28643:28644	6204297	2	True				
ANR	6204338	Statement	cb_printf	1193:6:28645:28653	6204297	3	True				
ANR	6204339	Statement	(	1193:16:28655:28655	6204297	4	True				
ANR	6204340	Statement	"""afn %s @ 0x%08"""	1193:17:28656:28671	6204297	5	True				
ANR	6204341	Statement	PFMT64x	1193:33:28672:28678	6204297	6	True				
ANR	6204342	Statement	"""\\n"""	1193:40:28679:28682	6204297	7	True				
ANR	6204343	Statement	","	1193:44:28683:28683	6204297	8	True				
ANR	6204344	Statement	it	1193:46:28685:28686	6204297	9	True				
ANR	6204345	Statement	->	1193:48:28687:28688	6204297	10	True				
ANR	6204346	Statement	realname	1193:50:28689:28696	6204297	11	True				
ANR	6204347	Statement	","	1193:58:28697:28697	6204297	12	True				
ANR	6204348	Statement	it	1193:60:28699:28700	6204297	13	True				
ANR	6204349	Statement	->	1193:62:28701:28702	6204297	14	True				
ANR	6204350	Statement	addr	1193:64:28703:28706	6204297	15	True				
ANR	6204351	Statement	)	1193:68:28707:28707	6204297	16	True				
ANR	6204352	ExpressionStatement		1193:69:28708:28708	6204297	17	True				
ANR	6204353	ElseStatement	else		6204297	0					
ANR	6204354	IfStatement	if ( format == 'j' )		6204297	0					
ANR	6204355	Condition	format == 'j'	1194:13:28723:28735	6204297	0	True				
ANR	6204356	EqualityExpression	format == 'j'		6204297	0		==			
ANR	6204357	Identifier	format		6204297	0					
ANR	6204358	PrimaryExpression	'j'		6204297	1					
ANR	6204359	CompoundStatement		8:28:288:288	6204297	1					
ANR	6204360	ExpressionStatement	"a -> cb_printf ( ""\\""realname\\"":\\""%s\\"","" , it -> realname )"	1195:3:28743:28794	6204297	0	True				
ANR	6204361	CallExpression	"a -> cb_printf ( ""\\""realname\\"":\\""%s\\"","" , it -> realname )"		6204297	0					
ANR	6204362	Callee	a -> cb_printf		6204297	0					
ANR	6204363	PtrMemberAccess	a -> cb_printf		6204297	0					
ANR	6204364	Identifier	a		6204297	0					
ANR	6204365	Identifier	cb_printf		6204297	1					
ANR	6204366	ArgumentList	"""\\""realname\\"":\\""%s\\"","""		6204297	1					
ANR	6204367	Argument	"""\\""realname\\"":\\""%s\\"","""		6204297	0					
ANR	6204368	PrimaryExpression	"""\\""realname\\"":\\""%s\\"","""		6204297	0					
ANR	6204369	Argument	it -> realname		6204297	1					
ANR	6204370	PtrMemberAccess	it -> realname		6204297	0					
ANR	6204371	Identifier	it		6204297	0					
ANR	6204372	Identifier	realname		6204297	1					
ANR	6204373	ElseStatement	else		6204297	0					
ANR	6204374	CompoundStatement		10:9:355:355	6204297	0					
ANR	6204375	ExpressionStatement	"a -> cb_printf ( ""  realname: %s\\n"" , it -> realname )"	1197:3:28810:28857	6204297	0	True				
ANR	6204376	CallExpression	"a -> cb_printf ( ""  realname: %s\\n"" , it -> realname )"		6204297	0					
ANR	6204377	Callee	a -> cb_printf		6204297	0					
ANR	6204378	PtrMemberAccess	a -> cb_printf		6204297	0					
ANR	6204379	Identifier	a		6204297	0					
ANR	6204380	Identifier	cb_printf		6204297	1					
ANR	6204381	ArgumentList	"""  realname: %s\\n"""		6204297	1					
ANR	6204382	Argument	"""  realname: %s\\n"""		6204297	0					
ANR	6204383	PrimaryExpression	"""  realname: %s\\n"""		6204297	0					
ANR	6204384	Argument	it -> realname		6204297	1					
ANR	6204385	PtrMemberAccess	it -> realname		6204297	0					
ANR	6204386	Identifier	it		6204297	0					
ANR	6204387	Identifier	realname		6204297	1					
ANR	6204388	ReturnType	static void		6204297	1					
ANR	6204389	Identifier	listRealname		6204297	2					
ANR	6204390	ParameterList	"RAnal * a , RSignItem * it , int format"		6204297	3					
ANR	6204391	Parameter	RAnal * a	1187:25:28412:28419	6204297	0	True				
ANR	6204392	ParameterType	RAnal *		6204297	0					
ANR	6204393	Identifier	a		6204297	1					
ANR	6204394	Parameter	RSignItem * it	1187:35:28422:28434	6204297	1	True				
ANR	6204395	ParameterType	RSignItem *		6204297	0					
ANR	6204396	Identifier	it		6204297	1					
ANR	6204397	Parameter	int format	1187:50:28437:28446	6204297	2	True				
ANR	6204398	ParameterType	int		6204297	0					
ANR	6204399	Identifier	format		6204297	1					
ANR	6204400	CFGEntryNode	ENTRY		6204297		True				
ANR	6204401	CFGExitNode	EXIT		6204297		True				
ANR	6204402	Symbol	a		6204297						
ANR	6204403	Symbol	* it		6204297						
ANR	6204404	Symbol	it -> name		6204297						
ANR	6204405	Symbol	format		6204297						
ANR	6204406	Symbol	it		6204297						
ANR	6204407	Symbol	it -> realname		6204297						
ANR	6204408	Function	listOffset	1202:0:28869:29249							
ANR	6204409	FunctionDef	"listOffset (RAnal * a , RSignItem * it , int format)"		6204408	0					
ANR	6204410	CompoundStatement		1202:60:28929:29249	6204408	0					
ANR	6204411	IfStatement	if ( format == 'q' )		6204408	0					
ANR	6204412	Condition	format == 'q'	1203:5:28936:28948	6204408	0	True				
ANR	6204413	EqualityExpression	format == 'q'		6204408	0		==			
ANR	6204414	Identifier	format		6204408	0					
ANR	6204415	PrimaryExpression	'q'		6204408	1					
ANR	6204416	CompoundStatement		2:20:21:21	6204408	1					
ANR	6204417	ElseStatement	else		6204408	0					
ANR	6204418	IfStatement	if ( format == '*' )		6204408	0					
ANR	6204419	Condition	format == '*'	1205:12:29019:29031	6204408	0	True				
ANR	6204420	EqualityExpression	format == '*'		6204408	0		==			
ANR	6204421	Identifier	format		6204408	0					
ANR	6204422	PrimaryExpression	'*'		6204408	1					
ANR	6204423	CompoundStatement		4:27:104:104	6204408	1					
ANR	6204424	Statement	a	1206:2:29038:29038	6204408	0	True				
ANR	6204425	Statement	->	1206:3:29039:29040	6204408	1	True				
ANR	6204426	Statement	cb_printf	1206:5:29041:29049	6204408	2	True				
ANR	6204427	Statement	(	1206:15:29051:29051	6204408	3	True				
ANR	6204428	Statement	"""za %s o 0x%08"""	1206:16:29052:29066	6204408	4	True				
ANR	6204429	Statement	PFMT64x	1206:31:29067:29073	6204408	5	True				
ANR	6204430	Statement	"""\\n"""	1206:38:29074:29077	6204408	6	True				
ANR	6204431	Statement	","	1206:42:29078:29078	6204408	7	True				
ANR	6204432	Statement	it	1206:44:29080:29081	6204408	8	True				
ANR	6204433	Statement	->	1206:46:29082:29083	6204408	9	True				
ANR	6204434	Statement	name	1206:48:29084:29087	6204408	10	True				
ANR	6204435	Statement	","	1206:52:29088:29088	6204408	11	True				
ANR	6204436	Statement	it	1206:54:29090:29091	6204408	12	True				
ANR	6204437	Statement	->	1206:56:29092:29093	6204408	13	True				
ANR	6204438	Statement	addr	1206:58:29094:29097	6204408	14	True				
ANR	6204439	Statement	)	1206:62:29098:29098	6204408	15	True				
ANR	6204440	ExpressionStatement		1206:63:29099:29099	6204408	16	True				
ANR	6204441	ElseStatement	else		6204408	0					
ANR	6204442	IfStatement	if ( format == 'j' )		6204408	0					
ANR	6204443	Condition	format == 'j'	1207:12:29113:29125	6204408	0	True				
ANR	6204444	EqualityExpression	format == 'j'		6204408	0		==			
ANR	6204445	Identifier	format		6204408	0					
ANR	6204446	PrimaryExpression	'j'		6204408	1					
ANR	6204447	CompoundStatement		6:27:198:198	6204408	1					
ANR	6204448	Statement	a	1208:2:29132:29132	6204408	0	True				
ANR	6204449	Statement	->	1208:3:29133:29134	6204408	1	True				
ANR	6204450	Statement	cb_printf	1208:5:29135:29143	6204408	2	True				
ANR	6204451	Statement	(	1208:15:29145:29145	6204408	3	True				
ANR	6204452	Statement	"""\\""addr\\"":%"""	1208:16:29146:29157	6204408	4	True				
ANR	6204453	Statement	PFMT64d	1208:28:29158:29164	6204408	5	True				
ANR	6204454	Statement	""","""	1208:35:29165:29167	6204408	6	True				
ANR	6204455	Statement	","	1208:38:29168:29168	6204408	7	True				
ANR	6204456	Statement	it	1208:40:29170:29171	6204408	8	True				
ANR	6204457	Statement	->	1208:42:29172:29173	6204408	9	True				
ANR	6204458	Statement	addr	1208:44:29174:29177	6204408	10	True				
ANR	6204459	Statement	)	1208:48:29178:29178	6204408	11	True				
ANR	6204460	ExpressionStatement		1208:49:29179:29179	6204408	12	True				
ANR	6204461	ElseStatement	else		6204408	0					
ANR	6204462	CompoundStatement		8:8:259:259	6204408	0					
ANR	6204463	Statement	a	1210:2:29193:29193	6204408	0	True				
ANR	6204464	Statement	->	1210:3:29194:29195	6204408	1	True				
ANR	6204465	Statement	cb_printf	1210:5:29196:29204	6204408	2	True				
ANR	6204466	Statement	(	1210:15:29206:29206	6204408	3	True				
ANR	6204467	Statement	"""  addr: 0x%08"""	1210:16:29207:29221	6204408	4	True				
ANR	6204468	Statement	PFMT64x	1210:31:29222:29228	6204408	5	True				
ANR	6204469	Statement	"""\\n"""	1210:38:29229:29232	6204408	6	True				
ANR	6204470	Statement	","	1210:42:29233:29233	6204408	7	True				
ANR	6204471	Statement	it	1210:44:29235:29236	6204408	8	True				
ANR	6204472	Statement	->	1210:46:29237:29238	6204408	9	True				
ANR	6204473	Statement	addr	1210:48:29239:29242	6204408	10	True				
ANR	6204474	Statement	)	1210:52:29243:29243	6204408	11	True				
ANR	6204475	ExpressionStatement		1210:53:29244:29244	6204408	12	True				
ANR	6204476	ReturnType	static void		6204408	1					
ANR	6204477	Identifier	listOffset		6204408	2					
ANR	6204478	ParameterList	"RAnal * a , RSignItem * it , int format"		6204408	3					
ANR	6204479	Parameter	RAnal * a	1202:23:28892:28899	6204408	0	True				
ANR	6204480	ParameterType	RAnal *		6204408	0					
ANR	6204481	Identifier	a		6204408	1					
ANR	6204482	Parameter	RSignItem * it	1202:33:28902:28914	6204408	1	True				
ANR	6204483	ParameterType	RSignItem *		6204408	0					
ANR	6204484	Identifier	it		6204408	1					
ANR	6204485	Parameter	int format	1202:48:28917:28926	6204408	2	True				
ANR	6204486	ParameterType	int		6204408	0					
ANR	6204487	Identifier	format		6204408	1					
ANR	6204488	CFGEntryNode	ENTRY		6204408		True				
ANR	6204489	CFGExitNode	EXIT		6204408		True				
ANR	6204490	Symbol	a		6204408						
ANR	6204491	Symbol	format		6204408						
ANR	6204492	Symbol	it		6204408						
ANR	6204493	Function	listVars	1214:0:29252:30024							
ANR	6204494	FunctionDef	"listVars (RAnal * a , RSignItem * it , int format)"		6204493	0					
ANR	6204495	CompoundStatement		1214:58:29310:30024	6204493	0					
ANR	6204496	IdentifierDeclStatement	RListIter * iter = NULL ;	1215:1:29313:29335	6204493	0	True				
ANR	6204497	IdentifierDecl	* iter = NULL		6204493	0					
ANR	6204498	IdentifierDeclType	RListIter *		6204493	0					
ANR	6204499	Identifier	iter		6204493	1					
ANR	6204500	AssignmentExpression	* iter = NULL		6204493	2		=			
ANR	6204501	Identifier	NULL		6204493	0					
ANR	6204502	Identifier	NULL		6204493	1					
ANR	6204503	IdentifierDeclStatement	char * var = NULL ;	1216:1:29338:29354	6204493	1	True				
ANR	6204504	IdentifierDecl	* var = NULL		6204493	0					
ANR	6204505	IdentifierDeclType	char *		6204493	0					
ANR	6204506	Identifier	var		6204493	1					
ANR	6204507	AssignmentExpression	* var = NULL		6204493	2		=			
ANR	6204508	Identifier	NULL		6204493	0					
ANR	6204509	Identifier	NULL		6204493	1					
ANR	6204510	IdentifierDeclStatement	int i = 0 ;	1217:1:29357:29366	6204493	2	True				
ANR	6204511	IdentifierDecl	i = 0		6204493	0					
ANR	6204512	IdentifierDeclType	int		6204493	0					
ANR	6204513	Identifier	i		6204493	1					
ANR	6204514	AssignmentExpression	i = 0		6204493	2		=			
ANR	6204515	Identifier	i		6204493	0					
ANR	6204516	PrimaryExpression	0		6204493	1					
ANR	6204517	IfStatement	if ( format == '*' )		6204493	3					
ANR	6204518	Condition	format == '*'	1219:5:29374:29386	6204493	0	True				
ANR	6204519	EqualityExpression	format == '*'		6204493	0		==			
ANR	6204520	Identifier	format		6204493	0					
ANR	6204521	PrimaryExpression	'*'		6204493	1					
ANR	6204522	CompoundStatement		6:20:78:78	6204493	1					
ANR	6204523	ExpressionStatement	"a -> cb_printf ( ""za %s v "" , it -> name )"	1220:2:29393:29428	6204493	0	True				
ANR	6204524	CallExpression	"a -> cb_printf ( ""za %s v "" , it -> name )"		6204493	0					
ANR	6204525	Callee	a -> cb_printf		6204493	0					
ANR	6204526	PtrMemberAccess	a -> cb_printf		6204493	0					
ANR	6204527	Identifier	a		6204493	0					
ANR	6204528	Identifier	cb_printf		6204493	1					
ANR	6204529	ArgumentList	"""za %s v """		6204493	1					
ANR	6204530	Argument	"""za %s v """		6204493	0					
ANR	6204531	PrimaryExpression	"""za %s v """		6204493	0					
ANR	6204532	Argument	it -> name		6204493	1					
ANR	6204533	PtrMemberAccess	it -> name		6204493	0					
ANR	6204534	Identifier	it		6204493	0					
ANR	6204535	Identifier	name		6204493	1					
ANR	6204536	ElseStatement	else		6204493	0					
ANR	6204537	IfStatement	if ( format == 'q' )		6204493	0					
ANR	6204538	Condition	format == 'q'	1221:12:29442:29454	6204493	0	True				
ANR	6204539	EqualityExpression	format == 'q'		6204493	0		==			
ANR	6204540	Identifier	format		6204493	0					
ANR	6204541	PrimaryExpression	'q'		6204493	1					
ANR	6204542	CompoundStatement		8:27:146:146	6204493	1					
ANR	6204543	ExpressionStatement	"a -> cb_printf ( "" vars(%d)"" , r_list_length ( it -> vars ) )"	1222:2:29461:29513	6204493	0	True				
ANR	6204544	CallExpression	"a -> cb_printf ( "" vars(%d)"" , r_list_length ( it -> vars ) )"		6204493	0					
ANR	6204545	Callee	a -> cb_printf		6204493	0					
ANR	6204546	PtrMemberAccess	a -> cb_printf		6204493	0					
ANR	6204547	Identifier	a		6204493	0					
ANR	6204548	Identifier	cb_printf		6204493	1					
ANR	6204549	ArgumentList	""" vars(%d)"""		6204493	1					
ANR	6204550	Argument	""" vars(%d)"""		6204493	0					
ANR	6204551	PrimaryExpression	""" vars(%d)"""		6204493	0					
ANR	6204552	Argument	r_list_length ( it -> vars )		6204493	1					
ANR	6204553	CallExpression	r_list_length ( it -> vars )		6204493	0					
ANR	6204554	Callee	r_list_length		6204493	0					
ANR	6204555	Identifier	r_list_length		6204493	0					
ANR	6204556	ArgumentList	it -> vars		6204493	1					
ANR	6204557	Argument	it -> vars		6204493	0					
ANR	6204558	PtrMemberAccess	it -> vars		6204493	0					
ANR	6204559	Identifier	it		6204493	0					
ANR	6204560	Identifier	vars		6204493	1					
ANR	6204561	ReturnStatement	return ;	1223:2:29517:29523	6204493	1	True				
ANR	6204562	ElseStatement	else		6204493	0					
ANR	6204563	IfStatement	if ( format == 'j' )		6204493	0					
ANR	6204564	Condition	format == 'j'	1224:12:29537:29549	6204493	0	True				
ANR	6204565	EqualityExpression	format == 'j'		6204493	0		==			
ANR	6204566	Identifier	format		6204493	0					
ANR	6204567	PrimaryExpression	'j'		6204493	1					
ANR	6204568	CompoundStatement		11:27:241:241	6204493	1					
ANR	6204569	ExpressionStatement	"a -> cb_printf ( ""\\""vars\\"":["" )"	1225:2:29556:29583	6204493	0	True				
ANR	6204570	CallExpression	"a -> cb_printf ( ""\\""vars\\"":["" )"		6204493	0					
ANR	6204571	Callee	a -> cb_printf		6204493	0					
ANR	6204572	PtrMemberAccess	a -> cb_printf		6204493	0					
ANR	6204573	Identifier	a		6204493	0					
ANR	6204574	Identifier	cb_printf		6204493	1					
ANR	6204575	ArgumentList	"""\\""vars\\"":["""		6204493	1					
ANR	6204576	Argument	"""\\""vars\\"":["""		6204493	0					
ANR	6204577	PrimaryExpression	"""\\""vars\\"":["""		6204493	0					
ANR	6204578	ElseStatement	else		6204493	0					
ANR	6204579	CompoundStatement		13:8:282:282	6204493	0					
ANR	6204580	ExpressionStatement	"a -> cb_printf ( ""  vars: "" )"	1227:2:29597:29622	6204493	0	True				
ANR	6204581	CallExpression	"a -> cb_printf ( ""  vars: "" )"		6204493	0					
ANR	6204582	Callee	a -> cb_printf		6204493	0					
ANR	6204583	PtrMemberAccess	a -> cb_printf		6204493	0					
ANR	6204584	Identifier	a		6204493	0					
ANR	6204585	Identifier	cb_printf		6204493	1					
ANR	6204586	ArgumentList	"""  vars: """		6204493	1					
ANR	6204587	Argument	"""  vars: """		6204493	0					
ANR	6204588	PrimaryExpression	"""  vars: """		6204493	0					
ANR	6204589	Statement	r_list_foreach	1230:1:29629:29642	6204493	4	True				
ANR	6204590	Statement	(	1230:16:29644:29644	6204493	5	True				
ANR	6204591	Statement	it	1230:17:29645:29646	6204493	6	True				
ANR	6204592	Statement	->	1230:19:29647:29648	6204493	7	True				
ANR	6204593	Statement	vars	1230:21:29649:29652	6204493	8	True				
ANR	6204594	Statement	","	1230:25:29653:29653	6204493	9	True				
ANR	6204595	Statement	iter	1230:27:29655:29658	6204493	10	True				
ANR	6204596	Statement	","	1230:31:29659:29659	6204493	11	True				
ANR	6204597	Statement	var	1230:33:29661:29663	6204493	12	True				
ANR	6204598	Statement	)	1230:36:29664:29664	6204493	13	True				
ANR	6204599	CompoundStatement		17:38:355:355	6204493	14					
ANR	6204600	IfStatement	if ( i > 0 )		6204493	0					
ANR	6204601	Condition	i > 0	1231:6:29674:29678	6204493	0	True				
ANR	6204602	RelationalExpression	i > 0		6204493	0		>			
ANR	6204603	Identifier	i		6204493	0					
ANR	6204604	PrimaryExpression	0		6204493	1					
ANR	6204605	CompoundStatement		18:13:370:370	6204493	1					
ANR	6204606	IfStatement	if ( format == '*' )		6204493	0					
ANR	6204607	Condition	format == '*'	1232:7:29690:29702	6204493	0	True				
ANR	6204608	EqualityExpression	format == '*'		6204493	0		==			
ANR	6204609	Identifier	format		6204493	0					
ANR	6204610	PrimaryExpression	'*'		6204493	1					
ANR	6204611	CompoundStatement		19:22:394:394	6204493	1					
ANR	6204612	ExpressionStatement	"a -> cb_printf ( "" "" )"	1233:4:29711:29729	6204493	0	True				
ANR	6204613	CallExpression	"a -> cb_printf ( "" "" )"		6204493	0					
ANR	6204614	Callee	a -> cb_printf		6204493	0					
ANR	6204615	PtrMemberAccess	a -> cb_printf		6204493	0					
ANR	6204616	Identifier	a		6204493	0					
ANR	6204617	Identifier	cb_printf		6204493	1					
ANR	6204618	ArgumentList	""" """		6204493	1					
ANR	6204619	Argument	""" """		6204493	0					
ANR	6204620	PrimaryExpression	""" """		6204493	0					
ANR	6204621	ElseStatement	else		6204493	0					
ANR	6204622	IfStatement	if ( format == 'j' )		6204493	0					
ANR	6204623	Condition	format == 'j'	1234:14:29745:29757	6204493	0	True				
ANR	6204624	EqualityExpression	format == 'j'		6204493	0		==			
ANR	6204625	Identifier	format		6204493	0					
ANR	6204626	PrimaryExpression	'j'		6204493	1					
ANR	6204627	CompoundStatement		21:29:449:449	6204493	1					
ANR	6204628	ExpressionStatement	"a -> cb_printf ( "","" )"	1235:4:29766:29784	6204493	0	True				
ANR	6204629	CallExpression	"a -> cb_printf ( "","" )"		6204493	0					
ANR	6204630	Callee	a -> cb_printf		6204493	0					
ANR	6204631	PtrMemberAccess	a -> cb_printf		6204493	0					
ANR	6204632	Identifier	a		6204493	0					
ANR	6204633	Identifier	cb_printf		6204493	1					
ANR	6204634	ArgumentList	""","""		6204493	1					
ANR	6204635	Argument	""","""		6204493	0					
ANR	6204636	PrimaryExpression	""","""		6204493	0					
ANR	6204637	ElseStatement	else		6204493	0					
ANR	6204638	CompoundStatement		23:10:485:485	6204493	0					
ANR	6204639	ExpressionStatement	"a -> cb_printf ( "", "" )"	1237:4:29802:29821	6204493	0	True				
ANR	6204640	CallExpression	"a -> cb_printf ( "", "" )"		6204493	0					
ANR	6204641	Callee	a -> cb_printf		6204493	0					
ANR	6204642	PtrMemberAccess	a -> cb_printf		6204493	0					
ANR	6204643	Identifier	a		6204493	0					
ANR	6204644	Identifier	cb_printf		6204493	1					
ANR	6204645	ArgumentList	""", """		6204493	1					
ANR	6204646	Argument	""", """		6204493	0					
ANR	6204647	PrimaryExpression	""", """		6204493	0					
ANR	6204648	IfStatement	if ( format == 'j' )		6204493	1					
ANR	6204649	Condition	format == 'j'	1240:6:29838:29850	6204493	0	True				
ANR	6204650	EqualityExpression	format == 'j'		6204493	0		==			
ANR	6204651	Identifier	format		6204493	0					
ANR	6204652	PrimaryExpression	'j'		6204493	1					
ANR	6204653	CompoundStatement		27:21:542:542	6204493	1					
ANR	6204654	ExpressionStatement	"a -> cb_printf ( ""\\""%s\\"""" , var )"	1241:3:29858:29886	6204493	0	True				
ANR	6204655	CallExpression	"a -> cb_printf ( ""\\""%s\\"""" , var )"		6204493	0					
ANR	6204656	Callee	a -> cb_printf		6204493	0					
ANR	6204657	PtrMemberAccess	a -> cb_printf		6204493	0					
ANR	6204658	Identifier	a		6204493	0					
ANR	6204659	Identifier	cb_printf		6204493	1					
ANR	6204660	ArgumentList	"""\\""%s\\"""""		6204493	1					
ANR	6204661	Argument	"""\\""%s\\"""""		6204493	0					
ANR	6204662	PrimaryExpression	"""\\""%s\\"""""		6204493	0					
ANR	6204663	Argument	var		6204493	1					
ANR	6204664	Identifier	var		6204493	0					
ANR	6204665	ElseStatement	else		6204493	0					
ANR	6204666	CompoundStatement		29:9:586:586	6204493	0					
ANR	6204667	ExpressionStatement	"a -> cb_printf ( ""%s"" , var )"	1243:3:29902:29926	6204493	0	True				
ANR	6204668	CallExpression	"a -> cb_printf ( ""%s"" , var )"		6204493	0					
ANR	6204669	Callee	a -> cb_printf		6204493	0					
ANR	6204670	PtrMemberAccess	a -> cb_printf		6204493	0					
ANR	6204671	Identifier	a		6204493	0					
ANR	6204672	Identifier	cb_printf		6204493	1					
ANR	6204673	ArgumentList	"""%s"""		6204493	1					
ANR	6204674	Argument	"""%s"""		6204493	0					
ANR	6204675	PrimaryExpression	"""%s"""		6204493	0					
ANR	6204676	Argument	var		6204493	1					
ANR	6204677	Identifier	var		6204493	0					
ANR	6204678	ExpressionStatement	i ++	1245:2:29934:29937	6204493	2	True				
ANR	6204679	PostIncDecOperationExpression	i ++		6204493	0					
ANR	6204680	Identifier	i		6204493	0					
ANR	6204681	IncDec	++		6204493	1					
ANR	6204682	IfStatement	if ( format == 'j' )		6204493	15					
ANR	6204683	Condition	format == 'j'	1248:5:29948:29960	6204493	0	True				
ANR	6204684	EqualityExpression	format == 'j'		6204493	0		==			
ANR	6204685	Identifier	format		6204493	0					
ANR	6204686	PrimaryExpression	'j'		6204493	1					
ANR	6204687	CompoundStatement		35:20:652:652	6204493	1					
ANR	6204688	ExpressionStatement	"a -> cb_printf ( ""],"" )"	1249:2:29967:29986	6204493	0	True				
ANR	6204689	CallExpression	"a -> cb_printf ( ""],"" )"		6204493	0					
ANR	6204690	Callee	a -> cb_printf		6204493	0					
ANR	6204691	PtrMemberAccess	a -> cb_printf		6204493	0					
ANR	6204692	Identifier	a		6204493	0					
ANR	6204693	Identifier	cb_printf		6204493	1					
ANR	6204694	ArgumentList	"""],"""		6204493	1					
ANR	6204695	Argument	"""],"""		6204493	0					
ANR	6204696	PrimaryExpression	"""],"""		6204493	0					
ANR	6204697	ElseStatement	else		6204493	0					
ANR	6204698	CompoundStatement		37:8:685:685	6204493	0					
ANR	6204699	ExpressionStatement	"a -> cb_printf ( ""\\n"" )"	1251:2:30000:30019	6204493	0	True				
ANR	6204700	CallExpression	"a -> cb_printf ( ""\\n"" )"		6204493	0					
ANR	6204701	Callee	a -> cb_printf		6204493	0					
ANR	6204702	PtrMemberAccess	a -> cb_printf		6204493	0					
ANR	6204703	Identifier	a		6204493	0					
ANR	6204704	Identifier	cb_printf		6204493	1					
ANR	6204705	ArgumentList	"""\\n"""		6204493	1					
ANR	6204706	Argument	"""\\n"""		6204493	0					
ANR	6204707	PrimaryExpression	"""\\n"""		6204493	0					
ANR	6204708	ReturnType	static void		6204493	1					
ANR	6204709	Identifier	listVars		6204493	2					
ANR	6204710	ParameterList	"RAnal * a , RSignItem * it , int format"		6204493	3					
ANR	6204711	Parameter	RAnal * a	1214:21:29273:29280	6204493	0	True				
ANR	6204712	ParameterType	RAnal *		6204493	0					
ANR	6204713	Identifier	a		6204493	1					
ANR	6204714	Parameter	RSignItem * it	1214:31:29283:29295	6204493	1	True				
ANR	6204715	ParameterType	RSignItem *		6204493	0					
ANR	6204716	Identifier	it		6204493	1					
ANR	6204717	Parameter	int format	1214:46:29298:29307	6204493	2	True				
ANR	6204718	ParameterType	int		6204493	0					
ANR	6204719	Identifier	format		6204493	1					
ANR	6204720	CFGEntryNode	ENTRY		6204493		True				
ANR	6204721	CFGExitNode	EXIT		6204493		True				
ANR	6204722	Symbol	it -> vars		6204493						
ANR	6204723	Symbol	a		6204493						
ANR	6204724	Symbol	* it		6204493						
ANR	6204725	Symbol	NULL		6204493						
ANR	6204726	Symbol	var		6204493						
ANR	6204727	Symbol	it -> name		6204493						
ANR	6204728	Symbol	format		6204493						
ANR	6204729	Symbol	iter		6204493						
ANR	6204730	Symbol	i		6204493						
ANR	6204731	Symbol	it		6204493						
ANR	6204732	Symbol	r_list_length		6204493						
ANR	6204733	Function	listXRefs	1255:0:30027:30858							
ANR	6204734	FunctionDef	"listXRefs (RAnal * a , RSignItem * it , int format)"		6204733	0					
ANR	6204735	CompoundStatement		1255:59:30086:30858	6204733	0					
ANR	6204736	IdentifierDeclStatement	RListIter * iter = NULL ;	1256:1:30089:30111	6204733	0	True				
ANR	6204737	IdentifierDecl	* iter = NULL		6204733	0					
ANR	6204738	IdentifierDeclType	RListIter *		6204733	0					
ANR	6204739	Identifier	iter		6204733	1					
ANR	6204740	AssignmentExpression	* iter = NULL		6204733	2		=			
ANR	6204741	Identifier	NULL		6204733	0					
ANR	6204742	Identifier	NULL		6204733	1					
ANR	6204743	IdentifierDeclStatement	char * ref = NULL ;	1257:1:30114:30130	6204733	1	True				
ANR	6204744	IdentifierDecl	* ref = NULL		6204733	0					
ANR	6204745	IdentifierDeclType	char *		6204733	0					
ANR	6204746	Identifier	ref		6204733	1					
ANR	6204747	AssignmentExpression	* ref = NULL		6204733	2		=			
ANR	6204748	Identifier	NULL		6204733	0					
ANR	6204749	Identifier	NULL		6204733	1					
ANR	6204750	IdentifierDeclStatement	int i = 0 ;	1258:1:30133:30142	6204733	2	True				
ANR	6204751	IdentifierDecl	i = 0		6204733	0					
ANR	6204752	IdentifierDeclType	int		6204733	0					
ANR	6204753	Identifier	i		6204733	1					
ANR	6204754	AssignmentExpression	i = 0		6204733	2		=			
ANR	6204755	Identifier	i		6204733	0					
ANR	6204756	PrimaryExpression	0		6204733	1					
ANR	6204757	IfStatement	if ( format == '*' )		6204733	3					
ANR	6204758	Condition	format == '*'	1260:5:30150:30162	6204733	0	True				
ANR	6204759	EqualityExpression	format == '*'		6204733	0		==			
ANR	6204760	Identifier	format		6204733	0					
ANR	6204761	PrimaryExpression	'*'		6204733	1					
ANR	6204762	CompoundStatement		6:20:78:78	6204733	1					
ANR	6204763	ExpressionStatement	"a -> cb_printf ( ""za %s x "" , it -> name )"	1261:2:30169:30204	6204733	0	True				
ANR	6204764	CallExpression	"a -> cb_printf ( ""za %s x "" , it -> name )"		6204733	0					
ANR	6204765	Callee	a -> cb_printf		6204733	0					
ANR	6204766	PtrMemberAccess	a -> cb_printf		6204733	0					
ANR	6204767	Identifier	a		6204733	0					
ANR	6204768	Identifier	cb_printf		6204733	1					
ANR	6204769	ArgumentList	"""za %s x """		6204733	1					
ANR	6204770	Argument	"""za %s x """		6204733	0					
ANR	6204771	PrimaryExpression	"""za %s x """		6204733	0					
ANR	6204772	Argument	it -> name		6204733	1					
ANR	6204773	PtrMemberAccess	it -> name		6204733	0					
ANR	6204774	Identifier	it		6204733	0					
ANR	6204775	Identifier	name		6204733	1					
ANR	6204776	ElseStatement	else		6204733	0					
ANR	6204777	IfStatement	if ( format == 'q' )		6204733	0					
ANR	6204778	Condition	format == 'q'	1262:12:30218:30230	6204733	0	True				
ANR	6204779	EqualityExpression	format == 'q'		6204733	0		==			
ANR	6204780	Identifier	format		6204733	0					
ANR	6204781	PrimaryExpression	'q'		6204733	1					
ANR	6204782	CompoundStatement		8:27:146:146	6204733	1					
ANR	6204783	ExpressionStatement	"a -> cb_printf ( "" xrefs(%d)"" , r_list_length ( it -> xrefs ) )"	1263:2:30237:30291	6204733	0	True				
ANR	6204784	CallExpression	"a -> cb_printf ( "" xrefs(%d)"" , r_list_length ( it -> xrefs ) )"		6204733	0					
ANR	6204785	Callee	a -> cb_printf		6204733	0					
ANR	6204786	PtrMemberAccess	a -> cb_printf		6204733	0					
ANR	6204787	Identifier	a		6204733	0					
ANR	6204788	Identifier	cb_printf		6204733	1					
ANR	6204789	ArgumentList	""" xrefs(%d)"""		6204733	1					
ANR	6204790	Argument	""" xrefs(%d)"""		6204733	0					
ANR	6204791	PrimaryExpression	""" xrefs(%d)"""		6204733	0					
ANR	6204792	Argument	r_list_length ( it -> xrefs )		6204733	1					
ANR	6204793	CallExpression	r_list_length ( it -> xrefs )		6204733	0					
ANR	6204794	Callee	r_list_length		6204733	0					
ANR	6204795	Identifier	r_list_length		6204733	0					
ANR	6204796	ArgumentList	it -> xrefs		6204733	1					
ANR	6204797	Argument	it -> xrefs		6204733	0					
ANR	6204798	PtrMemberAccess	it -> xrefs		6204733	0					
ANR	6204799	Identifier	it		6204733	0					
ANR	6204800	Identifier	xrefs		6204733	1					
ANR	6204801	ReturnStatement	return ;	1264:2:30295:30301	6204733	1	True				
ANR	6204802	ElseStatement	else		6204733	0					
ANR	6204803	IfStatement	if ( format == 'j' )		6204733	0					
ANR	6204804	Condition	format == 'j'	1265:12:30315:30327	6204733	0	True				
ANR	6204805	EqualityExpression	format == 'j'		6204733	0		==			
ANR	6204806	Identifier	format		6204733	0					
ANR	6204807	PrimaryExpression	'j'		6204733	1					
ANR	6204808	CompoundStatement		11:27:243:243	6204733	1					
ANR	6204809	ExpressionStatement	"a -> cb_printf ( ""\\""xrefs\\"":["" )"	1266:2:30334:30362	6204733	0	True				
ANR	6204810	CallExpression	"a -> cb_printf ( ""\\""xrefs\\"":["" )"		6204733	0					
ANR	6204811	Callee	a -> cb_printf		6204733	0					
ANR	6204812	PtrMemberAccess	a -> cb_printf		6204733	0					
ANR	6204813	Identifier	a		6204733	0					
ANR	6204814	Identifier	cb_printf		6204733	1					
ANR	6204815	ArgumentList	"""\\""xrefs\\"":["""		6204733	1					
ANR	6204816	Argument	"""\\""xrefs\\"":["""		6204733	0					
ANR	6204817	PrimaryExpression	"""\\""xrefs\\"":["""		6204733	0					
ANR	6204818	ElseStatement	else		6204733	0					
ANR	6204819	CompoundStatement		13:8:285:285	6204733	0					
ANR	6204820	IfStatement	if ( it -> xrefs && ! r_list_empty ( it -> xrefs ) )		6204733	0					
ANR	6204821	Condition	it -> xrefs && ! r_list_empty ( it -> xrefs )	1268:6:30380:30417	6204733	0	True				
ANR	6204822	AndExpression	it -> xrefs && ! r_list_empty ( it -> xrefs )		6204733	0		&&			
ANR	6204823	PtrMemberAccess	it -> xrefs		6204733	0					
ANR	6204824	Identifier	it		6204733	0					
ANR	6204825	Identifier	xrefs		6204733	1					
ANR	6204826	UnaryOperationExpression	! r_list_empty ( it -> xrefs )		6204733	1					
ANR	6204827	UnaryOperator	!		6204733	0					
ANR	6204828	CallExpression	r_list_empty ( it -> xrefs )		6204733	1					
ANR	6204829	Callee	r_list_empty		6204733	0					
ANR	6204830	Identifier	r_list_empty		6204733	0					
ANR	6204831	ArgumentList	it -> xrefs		6204733	1					
ANR	6204832	Argument	it -> xrefs		6204733	0					
ANR	6204833	PtrMemberAccess	it -> xrefs		6204733	0					
ANR	6204834	Identifier	it		6204733	0					
ANR	6204835	Identifier	xrefs		6204733	1					
ANR	6204836	CompoundStatement		14:46:333:333	6204733	1					
ANR	6204837	ExpressionStatement	"a -> cb_printf ( ""  xrefs: "" )"	1269:3:30425:30451	6204733	0	True				
ANR	6204838	CallExpression	"a -> cb_printf ( ""  xrefs: "" )"		6204733	0					
ANR	6204839	Callee	a -> cb_printf		6204733	0					
ANR	6204840	PtrMemberAccess	a -> cb_printf		6204733	0					
ANR	6204841	Identifier	a		6204733	0					
ANR	6204842	Identifier	cb_printf		6204733	1					
ANR	6204843	ArgumentList	"""  xrefs: """		6204733	1					
ANR	6204844	Argument	"""  xrefs: """		6204733	0					
ANR	6204845	PrimaryExpression	"""  xrefs: """		6204733	0					
ANR	6204846	Statement	r_list_foreach	1273:1:30462:30475	6204733	4	True				
ANR	6204847	Statement	(	1273:16:30477:30477	6204733	5	True				
ANR	6204848	Statement	it	1273:17:30478:30479	6204733	6	True				
ANR	6204849	Statement	->	1273:19:30480:30481	6204733	7	True				
ANR	6204850	Statement	xrefs	1273:21:30482:30486	6204733	8	True				
ANR	6204851	Statement	","	1273:26:30487:30487	6204733	9	True				
ANR	6204852	Statement	iter	1273:28:30489:30492	6204733	10	True				
ANR	6204853	Statement	","	1273:32:30493:30493	6204733	11	True				
ANR	6204854	Statement	ref	1273:34:30495:30497	6204733	12	True				
ANR	6204855	Statement	)	1273:37:30498:30498	6204733	13	True				
ANR	6204856	CompoundStatement		19:39:413:413	6204733	14					
ANR	6204857	IfStatement	if ( i > 0 )		6204733	0					
ANR	6204858	Condition	i > 0	1274:6:30508:30512	6204733	0	True				
ANR	6204859	RelationalExpression	i > 0		6204733	0		>			
ANR	6204860	Identifier	i		6204733	0					
ANR	6204861	PrimaryExpression	0		6204733	1					
ANR	6204862	CompoundStatement		20:13:428:428	6204733	1					
ANR	6204863	IfStatement	if ( format == '*' )		6204733	0					
ANR	6204864	Condition	format == '*'	1275:7:30524:30536	6204733	0	True				
ANR	6204865	EqualityExpression	format == '*'		6204733	0		==			
ANR	6204866	Identifier	format		6204733	0					
ANR	6204867	PrimaryExpression	'*'		6204733	1					
ANR	6204868	CompoundStatement		21:22:452:452	6204733	1					
ANR	6204869	ExpressionStatement	"a -> cb_printf ( "" "" )"	1276:4:30545:30563	6204733	0	True				
ANR	6204870	CallExpression	"a -> cb_printf ( "" "" )"		6204733	0					
ANR	6204871	Callee	a -> cb_printf		6204733	0					
ANR	6204872	PtrMemberAccess	a -> cb_printf		6204733	0					
ANR	6204873	Identifier	a		6204733	0					
ANR	6204874	Identifier	cb_printf		6204733	1					
ANR	6204875	ArgumentList	""" """		6204733	1					
ANR	6204876	Argument	""" """		6204733	0					
ANR	6204877	PrimaryExpression	""" """		6204733	0					
ANR	6204878	ElseStatement	else		6204733	0					
ANR	6204879	IfStatement	if ( format == 'j' )		6204733	0					
ANR	6204880	Condition	format == 'j'	1277:14:30579:30591	6204733	0	True				
ANR	6204881	EqualityExpression	format == 'j'		6204733	0		==			
ANR	6204882	Identifier	format		6204733	0					
ANR	6204883	PrimaryExpression	'j'		6204733	1					
ANR	6204884	CompoundStatement		23:29:507:507	6204733	1					
ANR	6204885	ExpressionStatement	"a -> cb_printf ( "","" )"	1278:4:30600:30618	6204733	0	True				
ANR	6204886	CallExpression	"a -> cb_printf ( "","" )"		6204733	0					
ANR	6204887	Callee	a -> cb_printf		6204733	0					
ANR	6204888	PtrMemberAccess	a -> cb_printf		6204733	0					
ANR	6204889	Identifier	a		6204733	0					
ANR	6204890	Identifier	cb_printf		6204733	1					
ANR	6204891	ArgumentList	""","""		6204733	1					
ANR	6204892	Argument	""","""		6204733	0					
ANR	6204893	PrimaryExpression	""","""		6204733	0					
ANR	6204894	ElseStatement	else		6204733	0					
ANR	6204895	CompoundStatement		25:10:543:543	6204733	0					
ANR	6204896	ExpressionStatement	"a -> cb_printf ( "", "" )"	1280:4:30636:30655	6204733	0	True				
ANR	6204897	CallExpression	"a -> cb_printf ( "", "" )"		6204733	0					
ANR	6204898	Callee	a -> cb_printf		6204733	0					
ANR	6204899	PtrMemberAccess	a -> cb_printf		6204733	0					
ANR	6204900	Identifier	a		6204733	0					
ANR	6204901	Identifier	cb_printf		6204733	1					
ANR	6204902	ArgumentList	""", """		6204733	1					
ANR	6204903	Argument	""", """		6204733	0					
ANR	6204904	PrimaryExpression	""", """		6204733	0					
ANR	6204905	IfStatement	if ( format == 'j' )		6204733	1					
ANR	6204906	Condition	format == 'j'	1283:6:30672:30684	6204733	0	True				
ANR	6204907	EqualityExpression	format == 'j'		6204733	0		==			
ANR	6204908	Identifier	format		6204733	0					
ANR	6204909	PrimaryExpression	'j'		6204733	1					
ANR	6204910	CompoundStatement		29:21:600:600	6204733	1					
ANR	6204911	ExpressionStatement	"a -> cb_printf ( ""\\""%s\\"""" , ref )"	1284:3:30692:30720	6204733	0	True				
ANR	6204912	CallExpression	"a -> cb_printf ( ""\\""%s\\"""" , ref )"		6204733	0					
ANR	6204913	Callee	a -> cb_printf		6204733	0					
ANR	6204914	PtrMemberAccess	a -> cb_printf		6204733	0					
ANR	6204915	Identifier	a		6204733	0					
ANR	6204916	Identifier	cb_printf		6204733	1					
ANR	6204917	ArgumentList	"""\\""%s\\"""""		6204733	1					
ANR	6204918	Argument	"""\\""%s\\"""""		6204733	0					
ANR	6204919	PrimaryExpression	"""\\""%s\\"""""		6204733	0					
ANR	6204920	Argument	ref		6204733	1					
ANR	6204921	Identifier	ref		6204733	0					
ANR	6204922	ElseStatement	else		6204733	0					
ANR	6204923	CompoundStatement		31:9:644:644	6204733	0					
ANR	6204924	ExpressionStatement	"a -> cb_printf ( ""%s"" , ref )"	1286:3:30736:30760	6204733	0	True				
ANR	6204925	CallExpression	"a -> cb_printf ( ""%s"" , ref )"		6204733	0					
ANR	6204926	Callee	a -> cb_printf		6204733	0					
ANR	6204927	PtrMemberAccess	a -> cb_printf		6204733	0					
ANR	6204928	Identifier	a		6204733	0					
ANR	6204929	Identifier	cb_printf		6204733	1					
ANR	6204930	ArgumentList	"""%s"""		6204733	1					
ANR	6204931	Argument	"""%s"""		6204733	0					
ANR	6204932	PrimaryExpression	"""%s"""		6204733	0					
ANR	6204933	Argument	ref		6204733	1					
ANR	6204934	Identifier	ref		6204733	0					
ANR	6204935	ExpressionStatement	i ++	1288:2:30768:30771	6204733	2	True				
ANR	6204936	PostIncDecOperationExpression	i ++		6204733	0					
ANR	6204937	Identifier	i		6204733	0					
ANR	6204938	IncDec	++		6204733	1					
ANR	6204939	IfStatement	if ( format == 'j' )		6204733	15					
ANR	6204940	Condition	format == 'j'	1291:5:30782:30794	6204733	0	True				
ANR	6204941	EqualityExpression	format == 'j'		6204733	0		==			
ANR	6204942	Identifier	format		6204733	0					
ANR	6204943	PrimaryExpression	'j'		6204733	1					
ANR	6204944	CompoundStatement		37:20:710:710	6204733	1					
ANR	6204945	ExpressionStatement	"a -> cb_printf ( ""],"" )"	1292:2:30801:30820	6204733	0	True				
ANR	6204946	CallExpression	"a -> cb_printf ( ""],"" )"		6204733	0					
ANR	6204947	Callee	a -> cb_printf		6204733	0					
ANR	6204948	PtrMemberAccess	a -> cb_printf		6204733	0					
ANR	6204949	Identifier	a		6204733	0					
ANR	6204950	Identifier	cb_printf		6204733	1					
ANR	6204951	ArgumentList	"""],"""		6204733	1					
ANR	6204952	Argument	"""],"""		6204733	0					
ANR	6204953	PrimaryExpression	"""],"""		6204733	0					
ANR	6204954	ElseStatement	else		6204733	0					
ANR	6204955	CompoundStatement		39:8:743:743	6204733	0					
ANR	6204956	ExpressionStatement	"a -> cb_printf ( ""\\n"" )"	1294:2:30834:30853	6204733	0	True				
ANR	6204957	CallExpression	"a -> cb_printf ( ""\\n"" )"		6204733	0					
ANR	6204958	Callee	a -> cb_printf		6204733	0					
ANR	6204959	PtrMemberAccess	a -> cb_printf		6204733	0					
ANR	6204960	Identifier	a		6204733	0					
ANR	6204961	Identifier	cb_printf		6204733	1					
ANR	6204962	ArgumentList	"""\\n"""		6204733	1					
ANR	6204963	Argument	"""\\n"""		6204733	0					
ANR	6204964	PrimaryExpression	"""\\n"""		6204733	0					
ANR	6204965	ReturnType	static void		6204733	1					
ANR	6204966	Identifier	listXRefs		6204733	2					
ANR	6204967	ParameterList	"RAnal * a , RSignItem * it , int format"		6204733	3					
ANR	6204968	Parameter	RAnal * a	1255:22:30049:30056	6204733	0	True				
ANR	6204969	ParameterType	RAnal *		6204733	0					
ANR	6204970	Identifier	a		6204733	1					
ANR	6204971	Parameter	RSignItem * it	1255:32:30059:30071	6204733	1	True				
ANR	6204972	ParameterType	RSignItem *		6204733	0					
ANR	6204973	Identifier	it		6204733	1					
ANR	6204974	Parameter	int format	1255:47:30074:30083	6204733	2	True				
ANR	6204975	ParameterType	int		6204733	0					
ANR	6204976	Identifier	format		6204733	1					
ANR	6204977	CFGEntryNode	ENTRY		6204733		True				
ANR	6204978	CFGExitNode	EXIT		6204733		True				
ANR	6204979	Symbol	a		6204733						
ANR	6204980	Symbol	ref		6204733						
ANR	6204981	Symbol	* it		6204733						
ANR	6204982	Symbol	NULL		6204733						
ANR	6204983	Symbol	it -> name		6204733						
ANR	6204984	Symbol	format		6204733						
ANR	6204985	Symbol	iter		6204733						
ANR	6204986	Symbol	i		6204733						
ANR	6204987	Symbol	r_list_empty		6204733						
ANR	6204988	Symbol	it		6204733						
ANR	6204989	Symbol	it -> xrefs		6204733						
ANR	6204990	Symbol	r_list_length		6204733						
ANR	6204991	Function	listRefs	1298:0:30861:31684							
ANR	6204992	FunctionDef	"listRefs (RAnal * a , RSignItem * it , int format)"		6204991	0					
ANR	6204993	CompoundStatement		1298:58:30919:31684	6204991	0					
ANR	6204994	IdentifierDeclStatement	RListIter * iter = NULL ;	1299:1:30922:30944	6204991	0	True				
ANR	6204995	IdentifierDecl	* iter = NULL		6204991	0					
ANR	6204996	IdentifierDeclType	RListIter *		6204991	0					
ANR	6204997	Identifier	iter		6204991	1					
ANR	6204998	AssignmentExpression	* iter = NULL		6204991	2		=			
ANR	6204999	Identifier	NULL		6204991	0					
ANR	6205000	Identifier	NULL		6204991	1					
ANR	6205001	IdentifierDeclStatement	char * ref = NULL ;	1300:1:30947:30963	6204991	1	True				
ANR	6205002	IdentifierDecl	* ref = NULL		6204991	0					
ANR	6205003	IdentifierDeclType	char *		6204991	0					
ANR	6205004	Identifier	ref		6204991	1					
ANR	6205005	AssignmentExpression	* ref = NULL		6204991	2		=			
ANR	6205006	Identifier	NULL		6204991	0					
ANR	6205007	Identifier	NULL		6204991	1					
ANR	6205008	IdentifierDeclStatement	int i = 0 ;	1301:1:30966:30975	6204991	2	True				
ANR	6205009	IdentifierDecl	i = 0		6204991	0					
ANR	6205010	IdentifierDeclType	int		6204991	0					
ANR	6205011	Identifier	i		6204991	1					
ANR	6205012	AssignmentExpression	i = 0		6204991	2		=			
ANR	6205013	Identifier	i		6204991	0					
ANR	6205014	PrimaryExpression	0		6204991	1					
ANR	6205015	IfStatement	if ( format == '*' )		6204991	3					
ANR	6205016	Condition	format == '*'	1303:5:30983:30995	6204991	0	True				
ANR	6205017	EqualityExpression	format == '*'		6204991	0		==			
ANR	6205018	Identifier	format		6204991	0					
ANR	6205019	PrimaryExpression	'*'		6204991	1					
ANR	6205020	CompoundStatement		6:20:78:78	6204991	1					
ANR	6205021	ExpressionStatement	"a -> cb_printf ( ""za %s r "" , it -> name )"	1304:2:31002:31037	6204991	0	True				
ANR	6205022	CallExpression	"a -> cb_printf ( ""za %s r "" , it -> name )"		6204991	0					
ANR	6205023	Callee	a -> cb_printf		6204991	0					
ANR	6205024	PtrMemberAccess	a -> cb_printf		6204991	0					
ANR	6205025	Identifier	a		6204991	0					
ANR	6205026	Identifier	cb_printf		6204991	1					
ANR	6205027	ArgumentList	"""za %s r """		6204991	1					
ANR	6205028	Argument	"""za %s r """		6204991	0					
ANR	6205029	PrimaryExpression	"""za %s r """		6204991	0					
ANR	6205030	Argument	it -> name		6204991	1					
ANR	6205031	PtrMemberAccess	it -> name		6204991	0					
ANR	6205032	Identifier	it		6204991	0					
ANR	6205033	Identifier	name		6204991	1					
ANR	6205034	ElseStatement	else		6204991	0					
ANR	6205035	IfStatement	if ( format == 'q' )		6204991	0					
ANR	6205036	Condition	format == 'q'	1305:12:31051:31063	6204991	0	True				
ANR	6205037	EqualityExpression	format == 'q'		6204991	0		==			
ANR	6205038	Identifier	format		6204991	0					
ANR	6205039	PrimaryExpression	'q'		6204991	1					
ANR	6205040	CompoundStatement		8:27:146:146	6204991	1					
ANR	6205041	ExpressionStatement	"a -> cb_printf ( "" refs(%d)"" , r_list_length ( it -> refs ) )"	1306:2:31070:31122	6204991	0	True				
ANR	6205042	CallExpression	"a -> cb_printf ( "" refs(%d)"" , r_list_length ( it -> refs ) )"		6204991	0					
ANR	6205043	Callee	a -> cb_printf		6204991	0					
ANR	6205044	PtrMemberAccess	a -> cb_printf		6204991	0					
ANR	6205045	Identifier	a		6204991	0					
ANR	6205046	Identifier	cb_printf		6204991	1					
ANR	6205047	ArgumentList	""" refs(%d)"""		6204991	1					
ANR	6205048	Argument	""" refs(%d)"""		6204991	0					
ANR	6205049	PrimaryExpression	""" refs(%d)"""		6204991	0					
ANR	6205050	Argument	r_list_length ( it -> refs )		6204991	1					
ANR	6205051	CallExpression	r_list_length ( it -> refs )		6204991	0					
ANR	6205052	Callee	r_list_length		6204991	0					
ANR	6205053	Identifier	r_list_length		6204991	0					
ANR	6205054	ArgumentList	it -> refs		6204991	1					
ANR	6205055	Argument	it -> refs		6204991	0					
ANR	6205056	PtrMemberAccess	it -> refs		6204991	0					
ANR	6205057	Identifier	it		6204991	0					
ANR	6205058	Identifier	refs		6204991	1					
ANR	6205059	ReturnStatement	return ;	1307:2:31126:31132	6204991	1	True				
ANR	6205060	ElseStatement	else		6204991	0					
ANR	6205061	IfStatement	if ( format == 'j' )		6204991	0					
ANR	6205062	Condition	format == 'j'	1308:12:31146:31158	6204991	0	True				
ANR	6205063	EqualityExpression	format == 'j'		6204991	0		==			
ANR	6205064	Identifier	format		6204991	0					
ANR	6205065	PrimaryExpression	'j'		6204991	1					
ANR	6205066	CompoundStatement		11:27:241:241	6204991	1					
ANR	6205067	ExpressionStatement	"a -> cb_printf ( ""\\""refs\\"":["" )"	1309:2:31165:31192	6204991	0	True				
ANR	6205068	CallExpression	"a -> cb_printf ( ""\\""refs\\"":["" )"		6204991	0					
ANR	6205069	Callee	a -> cb_printf		6204991	0					
ANR	6205070	PtrMemberAccess	a -> cb_printf		6204991	0					
ANR	6205071	Identifier	a		6204991	0					
ANR	6205072	Identifier	cb_printf		6204991	1					
ANR	6205073	ArgumentList	"""\\""refs\\"":["""		6204991	1					
ANR	6205074	Argument	"""\\""refs\\"":["""		6204991	0					
ANR	6205075	PrimaryExpression	"""\\""refs\\"":["""		6204991	0					
ANR	6205076	ElseStatement	else		6204991	0					
ANR	6205077	CompoundStatement		13:8:282:282	6204991	0					
ANR	6205078	IfStatement	if ( it -> refs && ! r_list_empty ( it -> refs ) )		6204991	0					
ANR	6205079	Condition	it -> refs && ! r_list_empty ( it -> refs )	1311:6:31210:31245	6204991	0	True				
ANR	6205080	AndExpression	it -> refs && ! r_list_empty ( it -> refs )		6204991	0		&&			
ANR	6205081	PtrMemberAccess	it -> refs		6204991	0					
ANR	6205082	Identifier	it		6204991	0					
ANR	6205083	Identifier	refs		6204991	1					
ANR	6205084	UnaryOperationExpression	! r_list_empty ( it -> refs )		6204991	1					
ANR	6205085	UnaryOperator	!		6204991	0					
ANR	6205086	CallExpression	r_list_empty ( it -> refs )		6204991	1					
ANR	6205087	Callee	r_list_empty		6204991	0					
ANR	6205088	Identifier	r_list_empty		6204991	0					
ANR	6205089	ArgumentList	it -> refs		6204991	1					
ANR	6205090	Argument	it -> refs		6204991	0					
ANR	6205091	PtrMemberAccess	it -> refs		6204991	0					
ANR	6205092	Identifier	it		6204991	0					
ANR	6205093	Identifier	refs		6204991	1					
ANR	6205094	CompoundStatement		14:44:328:328	6204991	1					
ANR	6205095	ExpressionStatement	"a -> cb_printf ( ""  refs: "" )"	1312:3:31253:31278	6204991	0	True				
ANR	6205096	CallExpression	"a -> cb_printf ( ""  refs: "" )"		6204991	0					
ANR	6205097	Callee	a -> cb_printf		6204991	0					
ANR	6205098	PtrMemberAccess	a -> cb_printf		6204991	0					
ANR	6205099	Identifier	a		6204991	0					
ANR	6205100	Identifier	cb_printf		6204991	1					
ANR	6205101	ArgumentList	"""  refs: """		6204991	1					
ANR	6205102	Argument	"""  refs: """		6204991	0					
ANR	6205103	PrimaryExpression	"""  refs: """		6204991	0					
ANR	6205104	Statement	r_list_foreach	1316:1:31289:31302	6204991	4	True				
ANR	6205105	Statement	(	1316:16:31304:31304	6204991	5	True				
ANR	6205106	Statement	it	1316:17:31305:31306	6204991	6	True				
ANR	6205107	Statement	->	1316:19:31307:31308	6204991	7	True				
ANR	6205108	Statement	refs	1316:21:31309:31312	6204991	8	True				
ANR	6205109	Statement	","	1316:25:31313:31313	6204991	9	True				
ANR	6205110	Statement	iter	1316:27:31315:31318	6204991	10	True				
ANR	6205111	Statement	","	1316:31:31319:31319	6204991	11	True				
ANR	6205112	Statement	ref	1316:33:31321:31323	6204991	12	True				
ANR	6205113	Statement	)	1316:36:31324:31324	6204991	13	True				
ANR	6205114	CompoundStatement		19:38:406:406	6204991	14					
ANR	6205115	IfStatement	if ( i > 0 )		6204991	0					
ANR	6205116	Condition	i > 0	1317:6:31334:31338	6204991	0	True				
ANR	6205117	RelationalExpression	i > 0		6204991	0		>			
ANR	6205118	Identifier	i		6204991	0					
ANR	6205119	PrimaryExpression	0		6204991	1					
ANR	6205120	CompoundStatement		20:13:421:421	6204991	1					
ANR	6205121	IfStatement	if ( format == '*' )		6204991	0					
ANR	6205122	Condition	format == '*'	1318:7:31350:31362	6204991	0	True				
ANR	6205123	EqualityExpression	format == '*'		6204991	0		==			
ANR	6205124	Identifier	format		6204991	0					
ANR	6205125	PrimaryExpression	'*'		6204991	1					
ANR	6205126	CompoundStatement		21:22:445:445	6204991	1					
ANR	6205127	ExpressionStatement	"a -> cb_printf ( "" "" )"	1319:4:31371:31389	6204991	0	True				
ANR	6205128	CallExpression	"a -> cb_printf ( "" "" )"		6204991	0					
ANR	6205129	Callee	a -> cb_printf		6204991	0					
ANR	6205130	PtrMemberAccess	a -> cb_printf		6204991	0					
ANR	6205131	Identifier	a		6204991	0					
ANR	6205132	Identifier	cb_printf		6204991	1					
ANR	6205133	ArgumentList	""" """		6204991	1					
ANR	6205134	Argument	""" """		6204991	0					
ANR	6205135	PrimaryExpression	""" """		6204991	0					
ANR	6205136	ElseStatement	else		6204991	0					
ANR	6205137	IfStatement	if ( format == 'j' )		6204991	0					
ANR	6205138	Condition	format == 'j'	1320:14:31405:31417	6204991	0	True				
ANR	6205139	EqualityExpression	format == 'j'		6204991	0		==			
ANR	6205140	Identifier	format		6204991	0					
ANR	6205141	PrimaryExpression	'j'		6204991	1					
ANR	6205142	CompoundStatement		23:29:500:500	6204991	1					
ANR	6205143	ExpressionStatement	"a -> cb_printf ( "","" )"	1321:4:31426:31444	6204991	0	True				
ANR	6205144	CallExpression	"a -> cb_printf ( "","" )"		6204991	0					
ANR	6205145	Callee	a -> cb_printf		6204991	0					
ANR	6205146	PtrMemberAccess	a -> cb_printf		6204991	0					
ANR	6205147	Identifier	a		6204991	0					
ANR	6205148	Identifier	cb_printf		6204991	1					
ANR	6205149	ArgumentList	""","""		6204991	1					
ANR	6205150	Argument	""","""		6204991	0					
ANR	6205151	PrimaryExpression	""","""		6204991	0					
ANR	6205152	ElseStatement	else		6204991	0					
ANR	6205153	CompoundStatement		25:10:536:536	6204991	0					
ANR	6205154	ExpressionStatement	"a -> cb_printf ( "", "" )"	1323:4:31462:31481	6204991	0	True				
ANR	6205155	CallExpression	"a -> cb_printf ( "", "" )"		6204991	0					
ANR	6205156	Callee	a -> cb_printf		6204991	0					
ANR	6205157	PtrMemberAccess	a -> cb_printf		6204991	0					
ANR	6205158	Identifier	a		6204991	0					
ANR	6205159	Identifier	cb_printf		6204991	1					
ANR	6205160	ArgumentList	""", """		6204991	1					
ANR	6205161	Argument	""", """		6204991	0					
ANR	6205162	PrimaryExpression	""", """		6204991	0					
ANR	6205163	IfStatement	if ( format == 'j' )		6204991	1					
ANR	6205164	Condition	format == 'j'	1326:6:31498:31510	6204991	0	True				
ANR	6205165	EqualityExpression	format == 'j'		6204991	0		==			
ANR	6205166	Identifier	format		6204991	0					
ANR	6205167	PrimaryExpression	'j'		6204991	1					
ANR	6205168	CompoundStatement		29:21:593:593	6204991	1					
ANR	6205169	ExpressionStatement	"a -> cb_printf ( ""\\""%s\\"""" , ref )"	1327:3:31518:31546	6204991	0	True				
ANR	6205170	CallExpression	"a -> cb_printf ( ""\\""%s\\"""" , ref )"		6204991	0					
ANR	6205171	Callee	a -> cb_printf		6204991	0					
ANR	6205172	PtrMemberAccess	a -> cb_printf		6204991	0					
ANR	6205173	Identifier	a		6204991	0					
ANR	6205174	Identifier	cb_printf		6204991	1					
ANR	6205175	ArgumentList	"""\\""%s\\"""""		6204991	1					
ANR	6205176	Argument	"""\\""%s\\"""""		6204991	0					
ANR	6205177	PrimaryExpression	"""\\""%s\\"""""		6204991	0					
ANR	6205178	Argument	ref		6204991	1					
ANR	6205179	Identifier	ref		6204991	0					
ANR	6205180	ElseStatement	else		6204991	0					
ANR	6205181	CompoundStatement		31:9:637:637	6204991	0					
ANR	6205182	ExpressionStatement	"a -> cb_printf ( ""%s"" , ref )"	1329:3:31562:31586	6204991	0	True				
ANR	6205183	CallExpression	"a -> cb_printf ( ""%s"" , ref )"		6204991	0					
ANR	6205184	Callee	a -> cb_printf		6204991	0					
ANR	6205185	PtrMemberAccess	a -> cb_printf		6204991	0					
ANR	6205186	Identifier	a		6204991	0					
ANR	6205187	Identifier	cb_printf		6204991	1					
ANR	6205188	ArgumentList	"""%s"""		6204991	1					
ANR	6205189	Argument	"""%s"""		6204991	0					
ANR	6205190	PrimaryExpression	"""%s"""		6204991	0					
ANR	6205191	Argument	ref		6204991	1					
ANR	6205192	Identifier	ref		6204991	0					
ANR	6205193	ExpressionStatement	i ++	1331:2:31594:31597	6204991	2	True				
ANR	6205194	PostIncDecOperationExpression	i ++		6204991	0					
ANR	6205195	Identifier	i		6204991	0					
ANR	6205196	IncDec	++		6204991	1					
ANR	6205197	IfStatement	if ( format == 'j' )		6204991	15					
ANR	6205198	Condition	format == 'j'	1334:5:31608:31620	6204991	0	True				
ANR	6205199	EqualityExpression	format == 'j'		6204991	0		==			
ANR	6205200	Identifier	format		6204991	0					
ANR	6205201	PrimaryExpression	'j'		6204991	1					
ANR	6205202	CompoundStatement		37:20:703:703	6204991	1					
ANR	6205203	ExpressionStatement	"a -> cb_printf ( ""],"" )"	1335:2:31627:31646	6204991	0	True				
ANR	6205204	CallExpression	"a -> cb_printf ( ""],"" )"		6204991	0					
ANR	6205205	Callee	a -> cb_printf		6204991	0					
ANR	6205206	PtrMemberAccess	a -> cb_printf		6204991	0					
ANR	6205207	Identifier	a		6204991	0					
ANR	6205208	Identifier	cb_printf		6204991	1					
ANR	6205209	ArgumentList	"""],"""		6204991	1					
ANR	6205210	Argument	"""],"""		6204991	0					
ANR	6205211	PrimaryExpression	"""],"""		6204991	0					
ANR	6205212	ElseStatement	else		6204991	0					
ANR	6205213	CompoundStatement		39:8:736:736	6204991	0					
ANR	6205214	ExpressionStatement	"a -> cb_printf ( ""\\n"" )"	1337:2:31660:31679	6204991	0	True				
ANR	6205215	CallExpression	"a -> cb_printf ( ""\\n"" )"		6204991	0					
ANR	6205216	Callee	a -> cb_printf		6204991	0					
ANR	6205217	PtrMemberAccess	a -> cb_printf		6204991	0					
ANR	6205218	Identifier	a		6204991	0					
ANR	6205219	Identifier	cb_printf		6204991	1					
ANR	6205220	ArgumentList	"""\\n"""		6204991	1					
ANR	6205221	Argument	"""\\n"""		6204991	0					
ANR	6205222	PrimaryExpression	"""\\n"""		6204991	0					
ANR	6205223	ReturnType	static void		6204991	1					
ANR	6205224	Identifier	listRefs		6204991	2					
ANR	6205225	ParameterList	"RAnal * a , RSignItem * it , int format"		6204991	3					
ANR	6205226	Parameter	RAnal * a	1298:21:30882:30889	6204991	0	True				
ANR	6205227	ParameterType	RAnal *		6204991	0					
ANR	6205228	Identifier	a		6204991	1					
ANR	6205229	Parameter	RSignItem * it	1298:31:30892:30904	6204991	1	True				
ANR	6205230	ParameterType	RSignItem *		6204991	0					
ANR	6205231	Identifier	it		6204991	1					
ANR	6205232	Parameter	int format	1298:46:30907:30916	6204991	2	True				
ANR	6205233	ParameterType	int		6204991	0					
ANR	6205234	Identifier	format		6204991	1					
ANR	6205235	CFGEntryNode	ENTRY		6204991		True				
ANR	6205236	CFGExitNode	EXIT		6204991		True				
ANR	6205237	Symbol	a		6204991						
ANR	6205238	Symbol	ref		6204991						
ANR	6205239	Symbol	* it		6204991						
ANR	6205240	Symbol	NULL		6204991						
ANR	6205241	Symbol	it -> name		6204991						
ANR	6205242	Symbol	format		6204991						
ANR	6205243	Symbol	iter		6204991						
ANR	6205244	Symbol	i		6204991						
ANR	6205245	Symbol	r_list_empty		6204991						
ANR	6205246	Symbol	it		6204991						
ANR	6205247	Symbol	r_list_length		6204991						
ANR	6205248	Symbol	it -> refs		6204991						
ANR	6205249	Function	listHash	1341:0:31687:32285							
ANR	6205250	FunctionDef	"listHash (RAnal * a , RSignItem * it , int format)"		6205249	0					
ANR	6205251	CompoundStatement		1341:58:31745:32285	6205249	0					
ANR	6205252	IfStatement	if ( ! it -> hash )		6205249	0					
ANR	6205253	Condition	! it -> hash	1342:5:31752:31760	6205249	0	True				
ANR	6205254	UnaryOperationExpression	! it -> hash		6205249	0					
ANR	6205255	UnaryOperator	!		6205249	0					
ANR	6205256	PtrMemberAccess	it -> hash		6205249	1					
ANR	6205257	Identifier	it		6205249	0					
ANR	6205258	Identifier	hash		6205249	1					
ANR	6205259	CompoundStatement		2:16:17:17	6205249	1					
ANR	6205260	ReturnStatement	return ;	1343:2:31767:31773	6205249	0	True				
ANR	6205261	SwitchStatement	switch ( format )		6205249	1					
ANR	6205262	Condition	format	1345:9:31787:31792	6205249	0	True				
ANR	6205263	Identifier	format		6205249	0					
ANR	6205264	CompoundStatement		5:17:49:49	6205249	1					
ANR	6205265	Label	case 'q' :	1346:1:31798:31806	6205249	0	True				
ANR	6205266	IfStatement	if ( it -> hash -> bbhash )		6205249	1					
ANR	6205267	Condition	it -> hash -> bbhash	1347:6:31814:31829	6205249	0	True				
ANR	6205268	PtrMemberAccess	it -> hash -> bbhash		6205249	0					
ANR	6205269	PtrMemberAccess	it -> hash		6205249	0					
ANR	6205270	Identifier	it		6205249	0					
ANR	6205271	Identifier	hash		6205249	1					
ANR	6205272	Identifier	bbhash		6205249	1					
ANR	6205273	CompoundStatement		7:24:86:86	6205249	1					
ANR	6205274	ExpressionStatement	"a -> cb_printf ( "" h(%08x)"" , r_str_hash ( it -> hash -> bbhash ) )"	1348:3:31837:31892	6205249	0	True				
ANR	6205275	CallExpression	"a -> cb_printf ( "" h(%08x)"" , r_str_hash ( it -> hash -> bbhash ) )"		6205249	0					
ANR	6205276	Callee	a -> cb_printf		6205249	0					
ANR	6205277	PtrMemberAccess	a -> cb_printf		6205249	0					
ANR	6205278	Identifier	a		6205249	0					
ANR	6205279	Identifier	cb_printf		6205249	1					
ANR	6205280	ArgumentList	""" h(%08x)"""		6205249	1					
ANR	6205281	Argument	""" h(%08x)"""		6205249	0					
ANR	6205282	PrimaryExpression	""" h(%08x)"""		6205249	0					
ANR	6205283	Argument	r_str_hash ( it -> hash -> bbhash )		6205249	1					
ANR	6205284	CallExpression	r_str_hash ( it -> hash -> bbhash )		6205249	0					
ANR	6205285	Callee	r_str_hash		6205249	0					
ANR	6205286	Identifier	r_str_hash		6205249	0					
ANR	6205287	ArgumentList	it -> hash -> bbhash		6205249	1					
ANR	6205288	Argument	it -> hash -> bbhash		6205249	0					
ANR	6205289	PtrMemberAccess	it -> hash -> bbhash		6205249	0					
ANR	6205290	PtrMemberAccess	it -> hash		6205249	0					
ANR	6205291	Identifier	it		6205249	0					
ANR	6205292	Identifier	hash		6205249	1					
ANR	6205293	Identifier	bbhash		6205249	1					
ANR	6205294	BreakStatement	break ;	1350:2:31900:31905	6205249	2	True				
ANR	6205295	Label	case '*' :	1351:1:31908:31916	6205249	3	True				
ANR	6205296	IfStatement	if ( it -> hash -> bbhash )		6205249	4					
ANR	6205297	Condition	it -> hash -> bbhash	1352:6:31924:31939	6205249	0	True				
ANR	6205298	PtrMemberAccess	it -> hash -> bbhash		6205249	0					
ANR	6205299	PtrMemberAccess	it -> hash		6205249	0					
ANR	6205300	Identifier	it		6205249	0					
ANR	6205301	Identifier	hash		6205249	1					
ANR	6205302	Identifier	bbhash		6205249	1					
ANR	6205303	CompoundStatement		12:24:196:196	6205249	1					
ANR	6205304	ExpressionStatement	"a -> cb_printf ( ""za %s h %s\\n"" , it -> name , it -> hash -> bbhash )"	1353:3:31947:32004	6205249	0	True				
ANR	6205305	CallExpression	"a -> cb_printf ( ""za %s h %s\\n"" , it -> name , it -> hash -> bbhash )"		6205249	0					
ANR	6205306	Callee	a -> cb_printf		6205249	0					
ANR	6205307	PtrMemberAccess	a -> cb_printf		6205249	0					
ANR	6205308	Identifier	a		6205249	0					
ANR	6205309	Identifier	cb_printf		6205249	1					
ANR	6205310	ArgumentList	"""za %s h %s\\n"""		6205249	1					
ANR	6205311	Argument	"""za %s h %s\\n"""		6205249	0					
ANR	6205312	PrimaryExpression	"""za %s h %s\\n"""		6205249	0					
ANR	6205313	Argument	it -> name		6205249	1					
ANR	6205314	PtrMemberAccess	it -> name		6205249	0					
ANR	6205315	Identifier	it		6205249	0					
ANR	6205316	Identifier	name		6205249	1					
ANR	6205317	Argument	it -> hash -> bbhash		6205249	2					
ANR	6205318	PtrMemberAccess	it -> hash -> bbhash		6205249	0					
ANR	6205319	PtrMemberAccess	it -> hash		6205249	0					
ANR	6205320	Identifier	it		6205249	0					
ANR	6205321	Identifier	hash		6205249	1					
ANR	6205322	Identifier	bbhash		6205249	1					
ANR	6205323	BreakStatement	break ;	1355:2:32012:32017	6205249	5	True				
ANR	6205324	Label	case 'j' :	1356:1:32020:32028	6205249	6	True				
ANR	6205325	ExpressionStatement	"a -> cb_printf ( ""\\""hash\\"":{"" )"	1357:2:32032:32059	6205249	7	True				
ANR	6205326	CallExpression	"a -> cb_printf ( ""\\""hash\\"":{"" )"		6205249	0					
ANR	6205327	Callee	a -> cb_printf		6205249	0					
ANR	6205328	PtrMemberAccess	a -> cb_printf		6205249	0					
ANR	6205329	Identifier	a		6205249	0					
ANR	6205330	Identifier	cb_printf		6205249	1					
ANR	6205331	ArgumentList	"""\\""hash\\"":{"""		6205249	1					
ANR	6205332	Argument	"""\\""hash\\"":{"""		6205249	0					
ANR	6205333	PrimaryExpression	"""\\""hash\\"":{"""		6205249	0					
ANR	6205334	IfStatement	if ( it -> hash -> bbhash )		6205249	8					
ANR	6205335	Condition	it -> hash -> bbhash	1358:6:32067:32082	6205249	0	True				
ANR	6205336	PtrMemberAccess	it -> hash -> bbhash		6205249	0					
ANR	6205337	PtrMemberAccess	it -> hash		6205249	0					
ANR	6205338	Identifier	it		6205249	0					
ANR	6205339	Identifier	hash		6205249	1					
ANR	6205340	Identifier	bbhash		6205249	1					
ANR	6205341	CompoundStatement		18:24:339:339	6205249	1					
ANR	6205342	ExpressionStatement	"a -> cb_printf ( ""\\""bbhash\\"":\\""%s\\"""" , it -> hash -> bbhash )"	1359:3:32090:32142	6205249	0	True				
ANR	6205343	CallExpression	"a -> cb_printf ( ""\\""bbhash\\"":\\""%s\\"""" , it -> hash -> bbhash )"		6205249	0					
ANR	6205344	Callee	a -> cb_printf		6205249	0					
ANR	6205345	PtrMemberAccess	a -> cb_printf		6205249	0					
ANR	6205346	Identifier	a		6205249	0					
ANR	6205347	Identifier	cb_printf		6205249	1					
ANR	6205348	ArgumentList	"""\\""bbhash\\"":\\""%s\\"""""		6205249	1					
ANR	6205349	Argument	"""\\""bbhash\\"":\\""%s\\"""""		6205249	0					
ANR	6205350	PrimaryExpression	"""\\""bbhash\\"":\\""%s\\"""""		6205249	0					
ANR	6205351	Argument	it -> hash -> bbhash		6205249	1					
ANR	6205352	PtrMemberAccess	it -> hash -> bbhash		6205249	0					
ANR	6205353	PtrMemberAccess	it -> hash		6205249	0					
ANR	6205354	Identifier	it		6205249	0					
ANR	6205355	Identifier	hash		6205249	1					
ANR	6205356	Identifier	bbhash		6205249	1					
ANR	6205357	ExpressionStatement	"a -> cb_printf ( ""}"" )"	1361:2:32150:32168	6205249	9	True				
ANR	6205358	CallExpression	"a -> cb_printf ( ""}"" )"		6205249	0					
ANR	6205359	Callee	a -> cb_printf		6205249	0					
ANR	6205360	PtrMemberAccess	a -> cb_printf		6205249	0					
ANR	6205361	Identifier	a		6205249	0					
ANR	6205362	Identifier	cb_printf		6205249	1					
ANR	6205363	ArgumentList	"""}"""		6205249	1					
ANR	6205364	Argument	"""}"""		6205249	0					
ANR	6205365	PrimaryExpression	"""}"""		6205249	0					
ANR	6205366	BreakStatement	break ;	1362:2:32172:32177	6205249	10	True				
ANR	6205367	Label	default :	1363:1:32180:32187	6205249	11	True				
ANR	6205368	Identifier	default		6205249	0					
ANR	6205369	IfStatement	if ( it -> hash -> bbhash )		6205249	12					
ANR	6205370	Condition	it -> hash -> bbhash	1364:6:32195:32210	6205249	0	True				
ANR	6205371	PtrMemberAccess	it -> hash -> bbhash		6205249	0					
ANR	6205372	PtrMemberAccess	it -> hash		6205249	0					
ANR	6205373	Identifier	it		6205249	0					
ANR	6205374	Identifier	hash		6205249	1					
ANR	6205375	Identifier	bbhash		6205249	1					
ANR	6205376	CompoundStatement		24:24:467:467	6205249	1					
ANR	6205377	ExpressionStatement	"a -> cb_printf ( ""  bbhash: %s\\n"" , it -> hash -> bbhash )"	1365:3:32218:32267	6205249	0	True				
ANR	6205378	CallExpression	"a -> cb_printf ( ""  bbhash: %s\\n"" , it -> hash -> bbhash )"		6205249	0					
ANR	6205379	Callee	a -> cb_printf		6205249	0					
ANR	6205380	PtrMemberAccess	a -> cb_printf		6205249	0					
ANR	6205381	Identifier	a		6205249	0					
ANR	6205382	Identifier	cb_printf		6205249	1					
ANR	6205383	ArgumentList	"""  bbhash: %s\\n"""		6205249	1					
ANR	6205384	Argument	"""  bbhash: %s\\n"""		6205249	0					
ANR	6205385	PrimaryExpression	"""  bbhash: %s\\n"""		6205249	0					
ANR	6205386	Argument	it -> hash -> bbhash		6205249	1					
ANR	6205387	PtrMemberAccess	it -> hash -> bbhash		6205249	0					
ANR	6205388	PtrMemberAccess	it -> hash		6205249	0					
ANR	6205389	Identifier	it		6205249	0					
ANR	6205390	Identifier	hash		6205249	1					
ANR	6205391	Identifier	bbhash		6205249	1					
ANR	6205392	BreakStatement	break ;	1367:2:32275:32280	6205249	13	True				
ANR	6205393	ReturnType	static void		6205249	1					
ANR	6205394	Identifier	listHash		6205249	2					
ANR	6205395	ParameterList	"RAnal * a , RSignItem * it , int format"		6205249	3					
ANR	6205396	Parameter	RAnal * a	1341:21:31708:31715	6205249	0	True				
ANR	6205397	ParameterType	RAnal *		6205249	0					
ANR	6205398	Identifier	a		6205249	1					
ANR	6205399	Parameter	RSignItem * it	1341:31:31718:31730	6205249	1	True				
ANR	6205400	ParameterType	RSignItem *		6205249	0					
ANR	6205401	Identifier	it		6205249	1					
ANR	6205402	Parameter	int format	1341:46:31733:31742	6205249	2	True				
ANR	6205403	ParameterType	int		6205249	0					
ANR	6205404	Identifier	format		6205249	1					
ANR	6205405	CFGEntryNode	ENTRY		6205249		True				
ANR	6205406	CFGExitNode	EXIT		6205249		True				
ANR	6205407	Symbol	a		6205249						
ANR	6205408	Symbol	* it		6205249						
ANR	6205409	Symbol	* it -> hash		6205249						
ANR	6205410	Symbol	* * it		6205249						
ANR	6205411	Symbol	it -> hash		6205249						
ANR	6205412	Symbol	it -> name		6205249						
ANR	6205413	Symbol	format		6205249						
ANR	6205414	Symbol	it		6205249						
ANR	6205415	Symbol	r_str_hash		6205249						
ANR	6205416	Symbol	it -> hash -> bbhash		6205249						
ANR	6205417	Function	listCB	1371:0:32288:34738							
ANR	6205418	FunctionDef	"listCB (void * user , const char * k , const char * v)"		6205417	0					
ANR	6205419	CompoundStatement		1371:60:32348:34738	6205417	0					
ANR	6205420	IdentifierDeclStatement	struct ctxListCB * ctx = ( struct ctxListCB * ) user ;	1372:1:32351:32400	6205417	0	True				
ANR	6205421	IdentifierDecl	* ctx = ( struct ctxListCB * ) user		6205417	0					
ANR	6205422	IdentifierDeclType	struct ctxListCB *		6205417	0					
ANR	6205423	Identifier	ctx		6205417	1					
ANR	6205424	AssignmentExpression	* ctx = ( struct ctxListCB * ) user		6205417	2		=			
ANR	6205425	Identifier	ctx		6205417	0					
ANR	6205426	CastExpression	( struct ctxListCB * ) user		6205417	1					
ANR	6205427	CastTarget	struct ctxListCB *		6205417	0					
ANR	6205428	Identifier	user		6205417	1					
ANR	6205429	IdentifierDeclStatement	RSignItem * it = r_sign_item_new ( ) ;	1373:1:32403:32437	6205417	1	True				
ANR	6205430	IdentifierDecl	* it = r_sign_item_new ( )		6205417	0					
ANR	6205431	IdentifierDeclType	RSignItem *		6205417	0					
ANR	6205432	Identifier	it		6205417	1					
ANR	6205433	AssignmentExpression	* it = r_sign_item_new ( )		6205417	2		=			
ANR	6205434	Identifier	it		6205417	0					
ANR	6205435	CallExpression	r_sign_item_new ( )		6205417	1					
ANR	6205436	Callee	r_sign_item_new		6205417	0					
ANR	6205437	Identifier	r_sign_item_new		6205417	0					
ANR	6205438	ArgumentList			6205417	1					
ANR	6205439	IdentifierDeclStatement	RAnal * a = ctx -> anal ;	1374:1:32440:32460	6205417	2	True				
ANR	6205440	IdentifierDecl	* a = ctx -> anal		6205417	0					
ANR	6205441	IdentifierDeclType	RAnal *		6205417	0					
ANR	6205442	Identifier	a		6205417	1					
ANR	6205443	AssignmentExpression	* a = ctx -> anal		6205417	2		=			
ANR	6205444	Identifier	a		6205417	0					
ANR	6205445	PtrMemberAccess	ctx -> anal		6205417	1					
ANR	6205446	Identifier	ctx		6205417	0					
ANR	6205447	Identifier	anal		6205417	1					
ANR	6205448	IfStatement	"if ( ! r_sign_deserialize ( a , it , k , v ) )"		6205417	3					
ANR	6205449	Condition	"! r_sign_deserialize ( a , it , k , v )"	1376:5:32468:32500	6205417	0	True				
ANR	6205450	UnaryOperationExpression	"! r_sign_deserialize ( a , it , k , v )"		6205417	0					
ANR	6205451	UnaryOperator	!		6205417	0					
ANR	6205452	CallExpression	"r_sign_deserialize ( a , it , k , v )"		6205417	1					
ANR	6205453	Callee	r_sign_deserialize		6205417	0					
ANR	6205454	Identifier	r_sign_deserialize		6205417	0					
ANR	6205455	ArgumentList	a		6205417	1					
ANR	6205456	Argument	a		6205417	0					
ANR	6205457	Identifier	a		6205417	0					
ANR	6205458	Argument	it		6205417	1					
ANR	6205459	Identifier	it		6205417	0					
ANR	6205460	Argument	k		6205417	2					
ANR	6205461	Identifier	k		6205417	0					
ANR	6205462	Argument	v		6205417	3					
ANR	6205463	Identifier	v		6205417	0					
ANR	6205464	CompoundStatement		6:40:154:154	6205417	1					
ANR	6205465	ExpressionStatement	"eprintf ( ""error: cannot deserialize zign\\n"" )"	1377:2:32507:32551	6205417	0	True				
ANR	6205466	CallExpression	"eprintf ( ""error: cannot deserialize zign\\n"" )"		6205417	0					
ANR	6205467	Callee	eprintf		6205417	0					
ANR	6205468	Identifier	eprintf		6205417	0					
ANR	6205469	ArgumentList	"""error: cannot deserialize zign\\n"""		6205417	1					
ANR	6205470	Argument	"""error: cannot deserialize zign\\n"""		6205417	0					
ANR	6205471	PrimaryExpression	"""error: cannot deserialize zign\\n"""		6205417	0					
ANR	6205472	GotoStatement	goto out ;	1378:2:32555:32563	6205417	1	True				
ANR	6205473	Identifier	out		6205417	0					
ANR	6205474	IdentifierDeclStatement	RSpace * cur = r_spaces_current ( & a -> zign_spaces ) ;	1381:1:32570:32618	6205417	4	True				
ANR	6205475	IdentifierDecl	* cur = r_spaces_current ( & a -> zign_spaces )		6205417	0					
ANR	6205476	IdentifierDeclType	RSpace *		6205417	0					
ANR	6205477	Identifier	cur		6205417	1					
ANR	6205478	AssignmentExpression	* cur = r_spaces_current ( & a -> zign_spaces )		6205417	2		=			
ANR	6205479	Identifier	cur		6205417	0					
ANR	6205480	CallExpression	r_spaces_current ( & a -> zign_spaces )		6205417	1					
ANR	6205481	Callee	r_spaces_current		6205417	0					
ANR	6205482	Identifier	r_spaces_current		6205417	0					
ANR	6205483	ArgumentList	& a -> zign_spaces		6205417	1					
ANR	6205484	Argument	& a -> zign_spaces		6205417	0					
ANR	6205485	UnaryOperationExpression	& a -> zign_spaces		6205417	0					
ANR	6205486	UnaryOperator	&		6205417	0					
ANR	6205487	PtrMemberAccess	a -> zign_spaces		6205417	1					
ANR	6205488	Identifier	a		6205417	0					
ANR	6205489	Identifier	zign_spaces		6205417	1					
ANR	6205490	IfStatement	if ( cur != it -> space && cur )		6205417	5					
ANR	6205491	Condition	cur != it -> space && cur	1382:5:32625:32647	6205417	0	True				
ANR	6205492	AndExpression	cur != it -> space && cur		6205417	0		&&			
ANR	6205493	EqualityExpression	cur != it -> space		6205417	0		!=			
ANR	6205494	Identifier	cur		6205417	0					
ANR	6205495	PtrMemberAccess	it -> space		6205417	1					
ANR	6205496	Identifier	it		6205417	0					
ANR	6205497	Identifier	space		6205417	1					
ANR	6205498	Identifier	cur		6205417	1					
ANR	6205499	CompoundStatement		12:30:301:301	6205417	1					
ANR	6205500	GotoStatement	goto out ;	1383:2:32654:32662	6205417	0	True				
ANR	6205501	Identifier	out		6205417	0					
ANR	6205502	IfStatement	if ( ctx -> format == 'j' )		6205417	6					
ANR	6205503	Condition	ctx -> format == 'j'	1387:5:32688:32705	6205417	0	True				
ANR	6205504	EqualityExpression	ctx -> format == 'j'		6205417	0		==			
ANR	6205505	PtrMemberAccess	ctx -> format		6205417	0					
ANR	6205506	Identifier	ctx		6205417	0					
ANR	6205507	Identifier	format		6205417	1					
ANR	6205508	PrimaryExpression	'j'		6205417	1					
ANR	6205509	CompoundStatement		17:25:359:359	6205417	1					
ANR	6205510	IfStatement	if ( ctx -> idx > 0 )		6205417	0					
ANR	6205511	Condition	ctx -> idx > 0	1388:6:32716:32727	6205417	0	True				
ANR	6205512	RelationalExpression	ctx -> idx > 0		6205417	0		>			
ANR	6205513	PtrMemberAccess	ctx -> idx		6205417	0					
ANR	6205514	Identifier	ctx		6205417	0					
ANR	6205515	Identifier	idx		6205417	1					
ANR	6205516	PrimaryExpression	0		6205417	1					
ANR	6205517	CompoundStatement		18:20:381:381	6205417	1					
ANR	6205518	ExpressionStatement	"a -> cb_printf ( "","" )"	1389:3:32735:32753	6205417	0	True				
ANR	6205519	CallExpression	"a -> cb_printf ( "","" )"		6205417	0					
ANR	6205520	Callee	a -> cb_printf		6205417	0					
ANR	6205521	PtrMemberAccess	a -> cb_printf		6205417	0					
ANR	6205522	Identifier	a		6205417	0					
ANR	6205523	Identifier	cb_printf		6205417	1					
ANR	6205524	ArgumentList	""","""		6205417	1					
ANR	6205525	Argument	""","""		6205417	0					
ANR	6205526	PrimaryExpression	""","""		6205417	0					
ANR	6205527	ExpressionStatement	"a -> cb_printf ( ""{"" )"	1391:2:32761:32779	6205417	1	True				
ANR	6205528	CallExpression	"a -> cb_printf ( ""{"" )"		6205417	0					
ANR	6205529	Callee	a -> cb_printf		6205417	0					
ANR	6205530	PtrMemberAccess	a -> cb_printf		6205417	0					
ANR	6205531	Identifier	a		6205417	0					
ANR	6205532	Identifier	cb_printf		6205417	1					
ANR	6205533	ArgumentList	"""{"""		6205417	1					
ANR	6205534	Argument	"""{"""		6205417	0					
ANR	6205535	PrimaryExpression	"""{"""		6205417	0					
ANR	6205536	IfStatement	if ( ctx -> format == '*' )		6205417	7					
ANR	6205537	Condition	ctx -> format == '*'	1395:5:32840:32857	6205417	0	True				
ANR	6205538	EqualityExpression	ctx -> format == '*'		6205417	0		==			
ANR	6205539	PtrMemberAccess	ctx -> format		6205417	0					
ANR	6205540	Identifier	ctx		6205417	0					
ANR	6205541	Identifier	format		6205417	1					
ANR	6205542	PrimaryExpression	'*'		6205417	1					
ANR	6205543	CompoundStatement		25:25:511:511	6205417	1					
ANR	6205544	IfStatement	if ( it -> space )		6205417	0					
ANR	6205545	Condition	it -> space	1396:6:32868:32876	6205417	0	True				
ANR	6205546	PtrMemberAccess	it -> space		6205417	0					
ANR	6205547	Identifier	it		6205417	0					
ANR	6205548	Identifier	space		6205417	1					
ANR	6205549	CompoundStatement		26:17:530:530	6205417	1					
ANR	6205550	ExpressionStatement	"a -> cb_printf ( ""zs %s\\n"" , it -> space -> name )"	1397:3:32884:32925	6205417	0	True				
ANR	6205551	CallExpression	"a -> cb_printf ( ""zs %s\\n"" , it -> space -> name )"		6205417	0					
ANR	6205552	Callee	a -> cb_printf		6205417	0					
ANR	6205553	PtrMemberAccess	a -> cb_printf		6205417	0					
ANR	6205554	Identifier	a		6205417	0					
ANR	6205555	Identifier	cb_printf		6205417	1					
ANR	6205556	ArgumentList	"""zs %s\\n"""		6205417	1					
ANR	6205557	Argument	"""zs %s\\n"""		6205417	0					
ANR	6205558	PrimaryExpression	"""zs %s\\n"""		6205417	0					
ANR	6205559	Argument	it -> space -> name		6205417	1					
ANR	6205560	PtrMemberAccess	it -> space -> name		6205417	0					
ANR	6205561	PtrMemberAccess	it -> space		6205417	0					
ANR	6205562	Identifier	it		6205417	0					
ANR	6205563	Identifier	space		6205417	1					
ANR	6205564	Identifier	name		6205417	1					
ANR	6205565	ElseStatement	else		6205417	0					
ANR	6205566	CompoundStatement		28:9:587:587	6205417	0					
ANR	6205567	ExpressionStatement	"a -> cb_printf ( ""zs *\\n"" )"	1399:3:32941:32964	6205417	0	True				
ANR	6205568	CallExpression	"a -> cb_printf ( ""zs *\\n"" )"		6205417	0					
ANR	6205569	Callee	a -> cb_printf		6205417	0					
ANR	6205570	PtrMemberAccess	a -> cb_printf		6205417	0					
ANR	6205571	Identifier	a		6205417	0					
ANR	6205572	Identifier	cb_printf		6205417	1					
ANR	6205573	ArgumentList	"""zs *\\n"""		6205417	1					
ANR	6205574	Argument	"""zs *\\n"""		6205417	0					
ANR	6205575	PrimaryExpression	"""zs *\\n"""		6205417	0					
ANR	6205576	ElseStatement	else		6205417	0					
ANR	6205577	IfStatement	if ( ctx -> format == 'q' )		6205417	0					
ANR	6205578	Condition	ctx -> format == 'q'	1401:12:32982:32999	6205417	0	True				
ANR	6205579	EqualityExpression	ctx -> format == 'q'		6205417	0		==			
ANR	6205580	PtrMemberAccess	ctx -> format		6205417	0					
ANR	6205581	Identifier	ctx		6205417	0					
ANR	6205582	Identifier	format		6205417	1					
ANR	6205583	PrimaryExpression	'q'		6205417	1					
ANR	6205584	CompoundStatement		33:2:703:759	6205417	1					
ANR	6205585	Statement	a	1402:2:33006:33006	6205417	0	True				
ANR	6205586	Statement	->	1402:3:33007:33008	6205417	1	True				
ANR	6205587	Statement	cb_printf	1402:5:33009:33017	6205417	2	True				
ANR	6205588	Statement	(	1402:15:33019:33019	6205417	3	True				
ANR	6205589	Statement	"""0x%08"""	1402:16:33020:33026	6205417	4	True				
ANR	6205590	Statement	PFMT64x	1402:23:33027:33033	6205417	5	True				
ANR	6205591	Statement	""" """	1402:30:33034:33036	6205417	6	True				
ANR	6205592	Statement	","	1402:33:33037:33037	6205417	7	True				
ANR	6205593	Statement	it	1402:35:33039:33040	6205417	8	True				
ANR	6205594	Statement	->	1402:37:33041:33042	6205417	9	True				
ANR	6205595	Statement	addr	1402:39:33043:33046	6205417	10	True				
ANR	6205596	Statement	)	1402:43:33047:33047	6205417	11	True				
ANR	6205597	ExpressionStatement		1402:44:33048:33048	6205417	12	True				
ANR	6205598	IdentifierDeclStatement	"const char * pad = r_str_pad ( ' ' , 30 - strlen ( it -> name ) ) ;"	1403:2:33052:33108	6205417	13	True				
ANR	6205599	IdentifierDecl	"* pad = r_str_pad ( ' ' , 30 - strlen ( it -> name ) )"		6205417	0					
ANR	6205600	IdentifierDeclType	const char *		6205417	0					
ANR	6205601	Identifier	pad		6205417	1					
ANR	6205602	AssignmentExpression	"* pad = r_str_pad ( ' ' , 30 - strlen ( it -> name ) )"		6205417	2		=			
ANR	6205603	Identifier	pad		6205417	0					
ANR	6205604	CallExpression	"r_str_pad ( ' ' , 30 - strlen ( it -> name ) )"		6205417	1					
ANR	6205605	Callee	r_str_pad		6205417	0					
ANR	6205606	Identifier	r_str_pad		6205417	0					
ANR	6205607	ArgumentList	' '		6205417	1					
ANR	6205608	Argument	' '		6205417	0					
ANR	6205609	PrimaryExpression	' '		6205417	0					
ANR	6205610	Argument	30 - strlen ( it -> name )		6205417	1					
ANR	6205611	AdditiveExpression	30 - strlen ( it -> name )		6205417	0		-			
ANR	6205612	PrimaryExpression	30		6205417	0					
ANR	6205613	CallExpression	strlen ( it -> name )		6205417	1					
ANR	6205614	Callee	strlen		6205417	0					
ANR	6205615	Identifier	strlen		6205417	0					
ANR	6205616	ArgumentList	it -> name		6205417	1					
ANR	6205617	Argument	it -> name		6205417	0					
ANR	6205618	PtrMemberAccess	it -> name		6205417	0					
ANR	6205619	Identifier	it		6205417	0					
ANR	6205620	Identifier	name		6205417	1					
ANR	6205621	ExpressionStatement	"a -> cb_printf ( ""%s:%s"" , it -> name , pad )"	1404:2:33112:33149	6205417	14	True				
ANR	6205622	CallExpression	"a -> cb_printf ( ""%s:%s"" , it -> name , pad )"		6205417	0					
ANR	6205623	Callee	a -> cb_printf		6205417	0					
ANR	6205624	PtrMemberAccess	a -> cb_printf		6205417	0					
ANR	6205625	Identifier	a		6205417	0					
ANR	6205626	Identifier	cb_printf		6205417	1					
ANR	6205627	ArgumentList	"""%s:%s"""		6205417	1					
ANR	6205628	Argument	"""%s:%s"""		6205417	0					
ANR	6205629	PrimaryExpression	"""%s:%s"""		6205417	0					
ANR	6205630	Argument	it -> name		6205417	1					
ANR	6205631	PtrMemberAccess	it -> name		6205417	0					
ANR	6205632	Identifier	it		6205417	0					
ANR	6205633	Identifier	name		6205417	1					
ANR	6205634	Argument	pad		6205417	2					
ANR	6205635	Identifier	pad		6205417	0					
ANR	6205636	ElseStatement	else		6205417	0					
ANR	6205637	IfStatement	if ( ctx -> format == 'j' )		6205417	0					
ANR	6205638	Condition	ctx -> format == 'j'	1405:12:33163:33180	6205417	0	True				
ANR	6205639	EqualityExpression	ctx -> format == 'j'		6205417	0		==			
ANR	6205640	PtrMemberAccess	ctx -> format		6205417	0					
ANR	6205641	Identifier	ctx		6205417	0					
ANR	6205642	Identifier	format		6205417	1					
ANR	6205643	PrimaryExpression	'j'		6205417	1					
ANR	6205644	CompoundStatement		35:32:834:834	6205417	1					
ANR	6205645	IfStatement	if ( it -> space )		6205417	0					
ANR	6205646	Condition	it -> space	1406:6:33191:33199	6205417	0	True				
ANR	6205647	PtrMemberAccess	it -> space		6205417	0					
ANR	6205648	Identifier	it		6205417	0					
ANR	6205649	Identifier	space		6205417	1					
ANR	6205650	CompoundStatement		36:17:853:853	6205417	1					
ANR	6205651	ExpressionStatement	"a -> cb_printf ( ""{\\""zignspace\\"":\\""%s\\"","" , it -> space -> name )"	1407:3:33207:33263	6205417	0	True				
ANR	6205652	CallExpression	"a -> cb_printf ( ""{\\""zignspace\\"":\\""%s\\"","" , it -> space -> name )"		6205417	0					
ANR	6205653	Callee	a -> cb_printf		6205417	0					
ANR	6205654	PtrMemberAccess	a -> cb_printf		6205417	0					
ANR	6205655	Identifier	a		6205417	0					
ANR	6205656	Identifier	cb_printf		6205417	1					
ANR	6205657	ArgumentList	"""{\\""zignspace\\"":\\""%s\\"","""		6205417	1					
ANR	6205658	Argument	"""{\\""zignspace\\"":\\""%s\\"","""		6205417	0					
ANR	6205659	PrimaryExpression	"""{\\""zignspace\\"":\\""%s\\"","""		6205417	0					
ANR	6205660	Argument	it -> space -> name		6205417	1					
ANR	6205661	PtrMemberAccess	it -> space -> name		6205417	0					
ANR	6205662	PtrMemberAccess	it -> space		6205417	0					
ANR	6205663	Identifier	it		6205417	0					
ANR	6205664	Identifier	space		6205417	1					
ANR	6205665	Identifier	name		6205417	1					
ANR	6205666	ExpressionStatement	"a -> cb_printf ( ""\\""name\\"":\\""%s\\"","" , it -> name )"	1409:2:33271:33314	6205417	1	True				
ANR	6205667	CallExpression	"a -> cb_printf ( ""\\""name\\"":\\""%s\\"","" , it -> name )"		6205417	0					
ANR	6205668	Callee	a -> cb_printf		6205417	0					
ANR	6205669	PtrMemberAccess	a -> cb_printf		6205417	0					
ANR	6205670	Identifier	a		6205417	0					
ANR	6205671	Identifier	cb_printf		6205417	1					
ANR	6205672	ArgumentList	"""\\""name\\"":\\""%s\\"","""		6205417	1					
ANR	6205673	Argument	"""\\""name\\"":\\""%s\\"","""		6205417	0					
ANR	6205674	PrimaryExpression	"""\\""name\\"":\\""%s\\"","""		6205417	0					
ANR	6205675	Argument	it -> name		6205417	1					
ANR	6205676	PtrMemberAccess	it -> name		6205417	0					
ANR	6205677	Identifier	it		6205417	0					
ANR	6205678	Identifier	name		6205417	1					
ANR	6205679	ElseStatement	else		6205417	0					
ANR	6205680	CompoundStatement		40:8:975:975	6205417	0					
ANR	6205681	IfStatement	if ( ! r_spaces_current ( & a -> zign_spaces ) && it -> space )		6205417	0					
ANR	6205682	Condition	! r_spaces_current ( & a -> zign_spaces ) && it -> space	1411:6:33332:33379	6205417	0	True				
ANR	6205683	AndExpression	! r_spaces_current ( & a -> zign_spaces ) && it -> space		6205417	0		&&			
ANR	6205684	UnaryOperationExpression	! r_spaces_current ( & a -> zign_spaces )		6205417	0					
ANR	6205685	UnaryOperator	!		6205417	0					
ANR	6205686	CallExpression	r_spaces_current ( & a -> zign_spaces )		6205417	1					
ANR	6205687	Callee	r_spaces_current		6205417	0					
ANR	6205688	Identifier	r_spaces_current		6205417	0					
ANR	6205689	ArgumentList	& a -> zign_spaces		6205417	1					
ANR	6205690	Argument	& a -> zign_spaces		6205417	0					
ANR	6205691	UnaryOperationExpression	& a -> zign_spaces		6205417	0					
ANR	6205692	UnaryOperator	&		6205417	0					
ANR	6205693	PtrMemberAccess	a -> zign_spaces		6205417	1					
ANR	6205694	Identifier	a		6205417	0					
ANR	6205695	Identifier	zign_spaces		6205417	1					
ANR	6205696	PtrMemberAccess	it -> space		6205417	1					
ANR	6205697	Identifier	it		6205417	0					
ANR	6205698	Identifier	space		6205417	1					
ANR	6205699	CompoundStatement		41:56:1033:1033	6205417	1					
ANR	6205700	ExpressionStatement	"a -> cb_printf ( ""(%s) "" , it -> space -> name )"	1412:3:33387:33426	6205417	0	True				
ANR	6205701	CallExpression	"a -> cb_printf ( ""(%s) "" , it -> space -> name )"		6205417	0					
ANR	6205702	Callee	a -> cb_printf		6205417	0					
ANR	6205703	PtrMemberAccess	a -> cb_printf		6205417	0					
ANR	6205704	Identifier	a		6205417	0					
ANR	6205705	Identifier	cb_printf		6205417	1					
ANR	6205706	ArgumentList	"""(%s) """		6205417	1					
ANR	6205707	Argument	"""(%s) """		6205417	0					
ANR	6205708	PrimaryExpression	"""(%s) """		6205417	0					
ANR	6205709	Argument	it -> space -> name		6205417	1					
ANR	6205710	PtrMemberAccess	it -> space -> name		6205417	0					
ANR	6205711	PtrMemberAccess	it -> space		6205417	0					
ANR	6205712	Identifier	it		6205417	0					
ANR	6205713	Identifier	space		6205417	1					
ANR	6205714	Identifier	name		6205417	1					
ANR	6205715	ExpressionStatement	"a -> cb_printf ( ""%s:\\n"" , it -> name )"	1414:2:33434:33466	6205417	1	True				
ANR	6205716	CallExpression	"a -> cb_printf ( ""%s:\\n"" , it -> name )"		6205417	0					
ANR	6205717	Callee	a -> cb_printf		6205417	0					
ANR	6205718	PtrMemberAccess	a -> cb_printf		6205417	0					
ANR	6205719	Identifier	a		6205417	0					
ANR	6205720	Identifier	cb_printf		6205417	1					
ANR	6205721	ArgumentList	"""%s:\\n"""		6205417	1					
ANR	6205722	Argument	"""%s:\\n"""		6205417	0					
ANR	6205723	PrimaryExpression	"""%s:\\n"""		6205417	0					
ANR	6205724	Argument	it -> name		6205417	1					
ANR	6205725	PtrMemberAccess	it -> name		6205417	0					
ANR	6205726	Identifier	it		6205417	0					
ANR	6205727	Identifier	name		6205417	1					
ANR	6205728	IfStatement	if ( it -> bytes )		6205417	8					
ANR	6205729	Condition	it -> bytes	1418:5:33495:33503	6205417	0	True				
ANR	6205730	PtrMemberAccess	it -> bytes		6205417	0					
ANR	6205731	Identifier	it		6205417	0					
ANR	6205732	Identifier	bytes		6205417	1					
ANR	6205733	CompoundStatement		48:16:1157:1157	6205417	1					
ANR	6205734	ExpressionStatement	"listBytes ( a , it , ctx -> format )"	1419:2:33510:33540	6205417	0	True				
ANR	6205735	CallExpression	"listBytes ( a , it , ctx -> format )"		6205417	0					
ANR	6205736	Callee	listBytes		6205417	0					
ANR	6205737	Identifier	listBytes		6205417	0					
ANR	6205738	ArgumentList	a		6205417	1					
ANR	6205739	Argument	a		6205417	0					
ANR	6205740	Identifier	a		6205417	0					
ANR	6205741	Argument	it		6205417	1					
ANR	6205742	Identifier	it		6205417	0					
ANR	6205743	Argument	ctx -> format		6205417	2					
ANR	6205744	PtrMemberAccess	ctx -> format		6205417	0					
ANR	6205745	Identifier	ctx		6205417	0					
ANR	6205746	Identifier	format		6205417	1					
ANR	6205747	ElseStatement	else		6205417	0					
ANR	6205748	IfStatement	if ( ctx -> format == 'j' )		6205417	0					
ANR	6205749	Condition	ctx -> format == 'j'	1420:12:33554:33571	6205417	0	True				
ANR	6205750	EqualityExpression	ctx -> format == 'j'		6205417	0		==			
ANR	6205751	PtrMemberAccess	ctx -> format		6205417	0					
ANR	6205752	Identifier	ctx		6205417	0					
ANR	6205753	Identifier	format		6205417	1					
ANR	6205754	PrimaryExpression	'j'		6205417	1					
ANR	6205755	CompoundStatement		50:32:1225:1225	6205417	1					
ANR	6205756	ExpressionStatement	"a -> cb_printf ( ""\\""bytes\\"":\\""\\"","" )"	1421:2:33578:33610	6205417	0	True				
ANR	6205757	CallExpression	"a -> cb_printf ( ""\\""bytes\\"":\\""\\"","" )"		6205417	0					
ANR	6205758	Callee	a -> cb_printf		6205417	0					
ANR	6205759	PtrMemberAccess	a -> cb_printf		6205417	0					
ANR	6205760	Identifier	a		6205417	0					
ANR	6205761	Identifier	cb_printf		6205417	1					
ANR	6205762	ArgumentList	"""\\""bytes\\"":\\""\\"","""		6205417	1					
ANR	6205763	Argument	"""\\""bytes\\"":\\""\\"","""		6205417	0					
ANR	6205764	PrimaryExpression	"""\\""bytes\\"":\\""\\"","""		6205417	0					
ANR	6205765	IfStatement	if ( it -> graph )		6205417	9					
ANR	6205766	Condition	it -> graph	1425:5:33639:33647	6205417	0	True				
ANR	6205767	PtrMemberAccess	it -> graph		6205417	0					
ANR	6205768	Identifier	it		6205417	0					
ANR	6205769	Identifier	graph		6205417	1					
ANR	6205770	CompoundStatement		55:16:1301:1301	6205417	1					
ANR	6205771	ExpressionStatement	"listGraph ( a , it , ctx -> format )"	1426:2:33654:33684	6205417	0	True				
ANR	6205772	CallExpression	"listGraph ( a , it , ctx -> format )"		6205417	0					
ANR	6205773	Callee	listGraph		6205417	0					
ANR	6205774	Identifier	listGraph		6205417	0					
ANR	6205775	ArgumentList	a		6205417	1					
ANR	6205776	Argument	a		6205417	0					
ANR	6205777	Identifier	a		6205417	0					
ANR	6205778	Argument	it		6205417	1					
ANR	6205779	Identifier	it		6205417	0					
ANR	6205780	Argument	ctx -> format		6205417	2					
ANR	6205781	PtrMemberAccess	ctx -> format		6205417	0					
ANR	6205782	Identifier	ctx		6205417	0					
ANR	6205783	Identifier	format		6205417	1					
ANR	6205784	ElseStatement	else		6205417	0					
ANR	6205785	IfStatement	if ( ctx -> format == 'j' )		6205417	0					
ANR	6205786	Condition	ctx -> format == 'j'	1427:12:33698:33715	6205417	0	True				
ANR	6205787	EqualityExpression	ctx -> format == 'j'		6205417	0		==			
ANR	6205788	PtrMemberAccess	ctx -> format		6205417	0					
ANR	6205789	Identifier	ctx		6205417	0					
ANR	6205790	Identifier	format		6205417	1					
ANR	6205791	PrimaryExpression	'j'		6205417	1					
ANR	6205792	CompoundStatement		57:32:1369:1369	6205417	1					
ANR	6205793	ExpressionStatement	"a -> cb_printf ( ""\\""graph\\"":{},"" )"	1428:2:33722:33752	6205417	0	True				
ANR	6205794	CallExpression	"a -> cb_printf ( ""\\""graph\\"":{},"" )"		6205417	0					
ANR	6205795	Callee	a -> cb_printf		6205417	0					
ANR	6205796	PtrMemberAccess	a -> cb_printf		6205417	0					
ANR	6205797	Identifier	a		6205417	0					
ANR	6205798	Identifier	cb_printf		6205417	1					
ANR	6205799	ArgumentList	"""\\""graph\\"":{},"""		6205417	1					
ANR	6205800	Argument	"""\\""graph\\"":{},"""		6205417	0					
ANR	6205801	PrimaryExpression	"""\\""graph\\"":{},"""		6205417	0					
ANR	6205802	IfStatement	if ( it -> addr != UT64_MAX )		6205417	10					
ANR	6205803	Condition	it -> addr != UT64_MAX	1432:5:33774:33793	6205417	0	True				
ANR	6205804	EqualityExpression	it -> addr != UT64_MAX		6205417	0		!=			
ANR	6205805	PtrMemberAccess	it -> addr		6205417	0					
ANR	6205806	Identifier	it		6205417	0					
ANR	6205807	Identifier	addr		6205417	1					
ANR	6205808	Identifier	UT64_MAX		6205417	1					
ANR	6205809	CompoundStatement		62:27:1447:1447	6205417	1					
ANR	6205810	ExpressionStatement	"listOffset ( a , it , ctx -> format )"	1433:2:33800:33831	6205417	0	True				
ANR	6205811	CallExpression	"listOffset ( a , it , ctx -> format )"		6205417	0					
ANR	6205812	Callee	listOffset		6205417	0					
ANR	6205813	Identifier	listOffset		6205417	0					
ANR	6205814	ArgumentList	a		6205417	1					
ANR	6205815	Argument	a		6205417	0					
ANR	6205816	Identifier	a		6205417	0					
ANR	6205817	Argument	it		6205417	1					
ANR	6205818	Identifier	it		6205417	0					
ANR	6205819	Argument	ctx -> format		6205417	2					
ANR	6205820	PtrMemberAccess	ctx -> format		6205417	0					
ANR	6205821	Identifier	ctx		6205417	0					
ANR	6205822	Identifier	format		6205417	1					
ANR	6205823	ElseStatement	else		6205417	0					
ANR	6205824	IfStatement	if ( ctx -> format == 'j' )		6205417	0					
ANR	6205825	Condition	ctx -> format == 'j'	1434:12:33845:33862	6205417	0	True				
ANR	6205826	EqualityExpression	ctx -> format == 'j'		6205417	0		==			
ANR	6205827	PtrMemberAccess	ctx -> format		6205417	0					
ANR	6205828	Identifier	ctx		6205417	0					
ANR	6205829	Identifier	format		6205417	1					
ANR	6205830	PrimaryExpression	'j'		6205417	1					
ANR	6205831	CompoundStatement		64:32:1516:1516	6205417	1					
ANR	6205832	ExpressionStatement	"a -> cb_printf ( ""\\""addr\\"":-1,"" )"	1435:2:33869:33898	6205417	0	True				
ANR	6205833	CallExpression	"a -> cb_printf ( ""\\""addr\\"":-1,"" )"		6205417	0					
ANR	6205834	Callee	a -> cb_printf		6205417	0					
ANR	6205835	PtrMemberAccess	a -> cb_printf		6205417	0					
ANR	6205836	Identifier	a		6205417	0					
ANR	6205837	Identifier	cb_printf		6205417	1					
ANR	6205838	ArgumentList	"""\\""addr\\"":-1,"""		6205417	1					
ANR	6205839	Argument	"""\\""addr\\"":-1,"""		6205417	0					
ANR	6205840	PrimaryExpression	"""\\""addr\\"":-1,"""		6205417	0					
ANR	6205841	IfStatement	if ( it -> realname )		6205417	11					
ANR	6205842	Condition	it -> realname	1438:5:33917:33928	6205417	0	True				
ANR	6205843	PtrMemberAccess	it -> realname		6205417	0					
ANR	6205844	Identifier	it		6205417	0					
ANR	6205845	Identifier	realname		6205417	1					
ANR	6205846	CompoundStatement		68:19:1582:1582	6205417	1					
ANR	6205847	ExpressionStatement	"listRealname ( a , it , ctx -> format )"	1439:2:33935:33968	6205417	0	True				
ANR	6205848	CallExpression	"listRealname ( a , it , ctx -> format )"		6205417	0					
ANR	6205849	Callee	listRealname		6205417	0					
ANR	6205850	Identifier	listRealname		6205417	0					
ANR	6205851	ArgumentList	a		6205417	1					
ANR	6205852	Argument	a		6205417	0					
ANR	6205853	Identifier	a		6205417	0					
ANR	6205854	Argument	it		6205417	1					
ANR	6205855	Identifier	it		6205417	0					
ANR	6205856	Argument	ctx -> format		6205417	2					
ANR	6205857	PtrMemberAccess	ctx -> format		6205417	0					
ANR	6205858	Identifier	ctx		6205417	0					
ANR	6205859	Identifier	format		6205417	1					
ANR	6205860	IfStatement	if ( it -> comment )		6205417	12					
ANR	6205861	Condition	it -> comment	1441:5:33978:33988	6205417	0	True				
ANR	6205862	PtrMemberAccess	it -> comment		6205417	0					
ANR	6205863	Identifier	it		6205417	0					
ANR	6205864	Identifier	comment		6205417	1					
ANR	6205865	CompoundStatement		71:18:1642:1642	6205417	1					
ANR	6205866	ExpressionStatement	"listComment ( a , it , ctx -> format )"	1442:2:33995:34027	6205417	0	True				
ANR	6205867	CallExpression	"listComment ( a , it , ctx -> format )"		6205417	0					
ANR	6205868	Callee	listComment		6205417	0					
ANR	6205869	Identifier	listComment		6205417	0					
ANR	6205870	ArgumentList	a		6205417	1					
ANR	6205871	Argument	a		6205417	0					
ANR	6205872	Identifier	a		6205417	0					
ANR	6205873	Argument	it		6205417	1					
ANR	6205874	Identifier	it		6205417	0					
ANR	6205875	Argument	ctx -> format		6205417	2					
ANR	6205876	PtrMemberAccess	ctx -> format		6205417	0					
ANR	6205877	Identifier	ctx		6205417	0					
ANR	6205878	Identifier	format		6205417	1					
ANR	6205879	IfStatement	if ( it -> refs )		6205417	13					
ANR	6205880	Condition	it -> refs	1445:5:34052:34059	6205417	0	True				
ANR	6205881	PtrMemberAccess	it -> refs		6205417	0					
ANR	6205882	Identifier	it		6205417	0					
ANR	6205883	Identifier	refs		6205417	1					
ANR	6205884	CompoundStatement		75:15:1713:1713	6205417	1					
ANR	6205885	ExpressionStatement	"listRefs ( a , it , ctx -> format )"	1446:2:34066:34095	6205417	0	True				
ANR	6205886	CallExpression	"listRefs ( a , it , ctx -> format )"		6205417	0					
ANR	6205887	Callee	listRefs		6205417	0					
ANR	6205888	Identifier	listRefs		6205417	0					
ANR	6205889	ArgumentList	a		6205417	1					
ANR	6205890	Argument	a		6205417	0					
ANR	6205891	Identifier	a		6205417	0					
ANR	6205892	Argument	it		6205417	1					
ANR	6205893	Identifier	it		6205417	0					
ANR	6205894	Argument	ctx -> format		6205417	2					
ANR	6205895	PtrMemberAccess	ctx -> format		6205417	0					
ANR	6205896	Identifier	ctx		6205417	0					
ANR	6205897	Identifier	format		6205417	1					
ANR	6205898	ElseStatement	else		6205417	0					
ANR	6205899	IfStatement	if ( ctx -> format == 'j' )		6205417	0					
ANR	6205900	Condition	ctx -> format == 'j'	1447:12:34109:34126	6205417	0	True				
ANR	6205901	EqualityExpression	ctx -> format == 'j'		6205417	0		==			
ANR	6205902	PtrMemberAccess	ctx -> format		6205417	0					
ANR	6205903	Identifier	ctx		6205417	0					
ANR	6205904	Identifier	format		6205417	1					
ANR	6205905	PrimaryExpression	'j'		6205417	1					
ANR	6205906	CompoundStatement		77:32:1780:1780	6205417	1					
ANR	6205907	ExpressionStatement	"a -> cb_printf ( ""\\""refs\\"":[],"" )"	1448:2:34133:34162	6205417	0	True				
ANR	6205908	CallExpression	"a -> cb_printf ( ""\\""refs\\"":[],"" )"		6205417	0					
ANR	6205909	Callee	a -> cb_printf		6205417	0					
ANR	6205910	PtrMemberAccess	a -> cb_printf		6205417	0					
ANR	6205911	Identifier	a		6205417	0					
ANR	6205912	Identifier	cb_printf		6205417	1					
ANR	6205913	ArgumentList	"""\\""refs\\"":[],"""		6205417	1					
ANR	6205914	Argument	"""\\""refs\\"":[],"""		6205417	0					
ANR	6205915	PrimaryExpression	"""\\""refs\\"":[],"""		6205417	0					
ANR	6205916	IfStatement	if ( it -> xrefs )		6205417	14					
ANR	6205917	Condition	it -> xrefs	1451:5:34188:34196	6205417	0	True				
ANR	6205918	PtrMemberAccess	it -> xrefs		6205417	0					
ANR	6205919	Identifier	it		6205417	0					
ANR	6205920	Identifier	xrefs		6205417	1					
ANR	6205921	CompoundStatement		81:16:1850:1850	6205417	1					
ANR	6205922	ExpressionStatement	"listXRefs ( a , it , ctx -> format )"	1452:2:34203:34233	6205417	0	True				
ANR	6205923	CallExpression	"listXRefs ( a , it , ctx -> format )"		6205417	0					
ANR	6205924	Callee	listXRefs		6205417	0					
ANR	6205925	Identifier	listXRefs		6205417	0					
ANR	6205926	ArgumentList	a		6205417	1					
ANR	6205927	Argument	a		6205417	0					
ANR	6205928	Identifier	a		6205417	0					
ANR	6205929	Argument	it		6205417	1					
ANR	6205930	Identifier	it		6205417	0					
ANR	6205931	Argument	ctx -> format		6205417	2					
ANR	6205932	PtrMemberAccess	ctx -> format		6205417	0					
ANR	6205933	Identifier	ctx		6205417	0					
ANR	6205934	Identifier	format		6205417	1					
ANR	6205935	ElseStatement	else		6205417	0					
ANR	6205936	IfStatement	if ( ctx -> format == 'j' )		6205417	0					
ANR	6205937	Condition	ctx -> format == 'j'	1453:12:34247:34264	6205417	0	True				
ANR	6205938	EqualityExpression	ctx -> format == 'j'		6205417	0		==			
ANR	6205939	PtrMemberAccess	ctx -> format		6205417	0					
ANR	6205940	Identifier	ctx		6205417	0					
ANR	6205941	Identifier	format		6205417	1					
ANR	6205942	PrimaryExpression	'j'		6205417	1					
ANR	6205943	CompoundStatement		83:32:1918:1918	6205417	1					
ANR	6205944	ExpressionStatement	"a -> cb_printf ( ""\\""xrefs\\"":[],"" )"	1454:2:34271:34301	6205417	0	True				
ANR	6205945	CallExpression	"a -> cb_printf ( ""\\""xrefs\\"":[],"" )"		6205417	0					
ANR	6205946	Callee	a -> cb_printf		6205417	0					
ANR	6205947	PtrMemberAccess	a -> cb_printf		6205417	0					
ANR	6205948	Identifier	a		6205417	0					
ANR	6205949	Identifier	cb_printf		6205417	1					
ANR	6205950	ArgumentList	"""\\""xrefs\\"":[],"""		6205417	1					
ANR	6205951	Argument	"""\\""xrefs\\"":[],"""		6205417	0					
ANR	6205952	PrimaryExpression	"""\\""xrefs\\"":[],"""		6205417	0					
ANR	6205953	IfStatement	if ( it -> vars )		6205417	15					
ANR	6205954	Condition	it -> vars	1457:5:34320:34327	6205417	0	True				
ANR	6205955	PtrMemberAccess	it -> vars		6205417	0					
ANR	6205956	Identifier	it		6205417	0					
ANR	6205957	Identifier	vars		6205417	1					
ANR	6205958	CompoundStatement		87:15:1981:1981	6205417	1					
ANR	6205959	ExpressionStatement	"listVars ( a , it , ctx -> format )"	1458:2:34334:34363	6205417	0	True				
ANR	6205960	CallExpression	"listVars ( a , it , ctx -> format )"		6205417	0					
ANR	6205961	Callee	listVars		6205417	0					
ANR	6205962	Identifier	listVars		6205417	0					
ANR	6205963	ArgumentList	a		6205417	1					
ANR	6205964	Argument	a		6205417	0					
ANR	6205965	Identifier	a		6205417	0					
ANR	6205966	Argument	it		6205417	1					
ANR	6205967	Identifier	it		6205417	0					
ANR	6205968	Argument	ctx -> format		6205417	2					
ANR	6205969	PtrMemberAccess	ctx -> format		6205417	0					
ANR	6205970	Identifier	ctx		6205417	0					
ANR	6205971	Identifier	format		6205417	1					
ANR	6205972	ElseStatement	else		6205417	0					
ANR	6205973	IfStatement	if ( ctx -> format == 'j' )		6205417	0					
ANR	6205974	Condition	ctx -> format == 'j'	1459:12:34377:34394	6205417	0	True				
ANR	6205975	EqualityExpression	ctx -> format == 'j'		6205417	0		==			
ANR	6205976	PtrMemberAccess	ctx -> format		6205417	0					
ANR	6205977	Identifier	ctx		6205417	0					
ANR	6205978	Identifier	format		6205417	1					
ANR	6205979	PrimaryExpression	'j'		6205417	1					
ANR	6205980	CompoundStatement		89:32:2048:2048	6205417	1					
ANR	6205981	ExpressionStatement	"a -> cb_printf ( ""\\""vars\\"":[],"" )"	1460:2:34401:34430	6205417	0	True				
ANR	6205982	CallExpression	"a -> cb_printf ( ""\\""vars\\"":[],"" )"		6205417	0					
ANR	6205983	Callee	a -> cb_printf		6205417	0					
ANR	6205984	PtrMemberAccess	a -> cb_printf		6205417	0					
ANR	6205985	Identifier	a		6205417	0					
ANR	6205986	Identifier	cb_printf		6205417	1					
ANR	6205987	ArgumentList	"""\\""vars\\"":[],"""		6205417	1					
ANR	6205988	Argument	"""\\""vars\\"":[],"""		6205417	0					
ANR	6205989	PrimaryExpression	"""\\""vars\\"":[],"""		6205417	0					
ANR	6205990	IfStatement	if ( it -> hash )		6205417	16					
ANR	6205991	Condition	it -> hash	1463:5:34449:34456	6205417	0	True				
ANR	6205992	PtrMemberAccess	it -> hash		6205417	0					
ANR	6205993	Identifier	it		6205417	0					
ANR	6205994	Identifier	hash		6205417	1					
ANR	6205995	CompoundStatement		93:15:2110:2110	6205417	1					
ANR	6205996	ExpressionStatement	"listHash ( a , it , ctx -> format )"	1464:2:34463:34492	6205417	0	True				
ANR	6205997	CallExpression	"listHash ( a , it , ctx -> format )"		6205417	0					
ANR	6205998	Callee	listHash		6205417	0					
ANR	6205999	Identifier	listHash		6205417	0					
ANR	6206000	ArgumentList	a		6205417	1					
ANR	6206001	Argument	a		6205417	0					
ANR	6206002	Identifier	a		6205417	0					
ANR	6206003	Argument	it		6205417	1					
ANR	6206004	Identifier	it		6205417	0					
ANR	6206005	Argument	ctx -> format		6205417	2					
ANR	6206006	PtrMemberAccess	ctx -> format		6205417	0					
ANR	6206007	Identifier	ctx		6205417	0					
ANR	6206008	Identifier	format		6205417	1					
ANR	6206009	ElseStatement	else		6205417	0					
ANR	6206010	IfStatement	if ( ctx -> format == 'j' )		6205417	0					
ANR	6206011	Condition	ctx -> format == 'j'	1465:12:34506:34523	6205417	0	True				
ANR	6206012	EqualityExpression	ctx -> format == 'j'		6205417	0		==			
ANR	6206013	PtrMemberAccess	ctx -> format		6205417	0					
ANR	6206014	Identifier	ctx		6205417	0					
ANR	6206015	Identifier	format		6205417	1					
ANR	6206016	PrimaryExpression	'j'		6205417	1					
ANR	6206017	CompoundStatement		95:32:2177:2177	6205417	1					
ANR	6206018	ExpressionStatement	"a -> cb_printf ( ""\\""hash\\"":{}"" )"	1466:2:34530:34558	6205417	0	True				
ANR	6206019	CallExpression	"a -> cb_printf ( ""\\""hash\\"":{}"" )"		6205417	0					
ANR	6206020	Callee	a -> cb_printf		6205417	0					
ANR	6206021	PtrMemberAccess	a -> cb_printf		6205417	0					
ANR	6206022	Identifier	a		6205417	0					
ANR	6206023	Identifier	cb_printf		6205417	1					
ANR	6206024	ArgumentList	"""\\""hash\\"":{}"""		6205417	1					
ANR	6206025	Argument	"""\\""hash\\"":{}"""		6205417	0					
ANR	6206026	PrimaryExpression	"""\\""hash\\"":{}"""		6205417	0					
ANR	6206027	IfStatement	if ( ctx -> format == 'j' )		6205417	17					
ANR	6206028	Condition	ctx -> format == 'j'	1470:5:34582:34599	6205417	0	True				
ANR	6206029	EqualityExpression	ctx -> format == 'j'		6205417	0		==			
ANR	6206030	PtrMemberAccess	ctx -> format		6205417	0					
ANR	6206031	Identifier	ctx		6205417	0					
ANR	6206032	Identifier	format		6205417	1					
ANR	6206033	PrimaryExpression	'j'		6205417	1					
ANR	6206034	CompoundStatement		100:25:2253:2253	6205417	1					
ANR	6206035	ExpressionStatement	"a -> cb_printf ( ""}"" )"	1471:2:34606:34624	6205417	0	True				
ANR	6206036	CallExpression	"a -> cb_printf ( ""}"" )"		6205417	0					
ANR	6206037	Callee	a -> cb_printf		6205417	0					
ANR	6206038	PtrMemberAccess	a -> cb_printf		6205417	0					
ANR	6206039	Identifier	a		6205417	0					
ANR	6206040	Identifier	cb_printf		6205417	1					
ANR	6206041	ArgumentList	"""}"""		6205417	1					
ANR	6206042	Argument	"""}"""		6205417	0					
ANR	6206043	PrimaryExpression	"""}"""		6205417	0					
ANR	6206044	ExpressionStatement	ctx -> idx ++	1474:1:34631:34641	6205417	18	True				
ANR	6206045	PostIncDecOperationExpression	ctx -> idx ++		6205417	0					
ANR	6206046	PtrMemberAccess	ctx -> idx		6205417	0					
ANR	6206047	Identifier	ctx		6205417	0					
ANR	6206048	Identifier	idx		6205417	1					
ANR	6206049	IncDec	++		6205417	1					
ANR	6206050	IfStatement	if ( ctx -> format == 'q' )		6205417	19					
ANR	6206051	Condition	ctx -> format == 'q'	1475:5:34648:34665	6205417	0	True				
ANR	6206052	EqualityExpression	ctx -> format == 'q'		6205417	0		==			
ANR	6206053	PtrMemberAccess	ctx -> format		6205417	0					
ANR	6206054	Identifier	ctx		6205417	0					
ANR	6206055	Identifier	format		6205417	1					
ANR	6206056	PrimaryExpression	'q'		6205417	1					
ANR	6206057	CompoundStatement		105:25:2319:2319	6205417	1					
ANR	6206058	ExpressionStatement	"a -> cb_printf ( ""\\n"" )"	1476:2:34672:34691	6205417	0	True				
ANR	6206059	CallExpression	"a -> cb_printf ( ""\\n"" )"		6205417	0					
ANR	6206060	Callee	a -> cb_printf		6205417	0					
ANR	6206061	PtrMemberAccess	a -> cb_printf		6205417	0					
ANR	6206062	Identifier	a		6205417	0					
ANR	6206063	Identifier	cb_printf		6205417	1					
ANR	6206064	ArgumentList	"""\\n"""		6205417	1					
ANR	6206065	Argument	"""\\n"""		6205417	0					
ANR	6206066	PrimaryExpression	"""\\n"""		6205417	0					
ANR	6206067	Label	out :	1479:0:34697:34700	6205417	20	True				
ANR	6206068	Identifier	out		6205417	0					
ANR	6206069	ExpressionStatement	r_sign_item_free ( it )	1480:1:34703:34724	6205417	21	True				
ANR	6206070	CallExpression	r_sign_item_free ( it )		6205417	0					
ANR	6206071	Callee	r_sign_item_free		6205417	0					
ANR	6206072	Identifier	r_sign_item_free		6205417	0					
ANR	6206073	ArgumentList	it		6205417	1					
ANR	6206074	Argument	it		6205417	0					
ANR	6206075	Identifier	it		6205417	0					
ANR	6206076	ReturnStatement	return 1 ;	1482:1:34728:34736	6205417	22	True				
ANR	6206077	PrimaryExpression	1		6205417	0					
ANR	6206078	ReturnType	static int		6205417	1					
ANR	6206079	Identifier	listCB		6205417	2					
ANR	6206080	ParameterList	"void * user , const char * k , const char * v"		6205417	3					
ANR	6206081	Parameter	void * user	1371:18:32306:32315	6205417	0	True				
ANR	6206082	ParameterType	void *		6205417	0					
ANR	6206083	Identifier	user		6205417	1					
ANR	6206084	Parameter	const char * k	1371:30:32318:32330	6205417	1	True				
ANR	6206085	ParameterType	const char *		6205417	0					
ANR	6206086	Identifier	k		6205417	1					
ANR	6206087	Parameter	const char * v	1371:45:32333:32345	6205417	2	True				
ANR	6206088	ParameterType	const char *		6205417	0					
ANR	6206089	Identifier	v		6205417	1					
ANR	6206090	CFGEntryNode	ENTRY		6205417		True				
ANR	6206091	CFGExitNode	EXIT		6205417		True				
ANR	6206092	Symbol	it -> vars		6205417						
ANR	6206093	Symbol	r_sign_item_new		6205417						
ANR	6206094	Symbol	cur		6205417						
ANR	6206095	Symbol	it -> graph		6205417						
ANR	6206096	Symbol	ctx -> anal		6205417						
ANR	6206097	Symbol	ctx -> format		6205417						
ANR	6206098	Symbol	& a -> zign_spaces		6205417						
ANR	6206099	Symbol	strlen		6205417						
ANR	6206100	Symbol	pad		6205417						
ANR	6206101	Symbol	* * it		6205417						
ANR	6206102	Symbol	it -> hash		6205417						
ANR	6206103	Symbol	it -> space -> name		6205417						
ANR	6206104	Symbol	UT64_MAX		6205417						
ANR	6206105	Symbol	r_spaces_current		6205417						
ANR	6206106	Symbol	it -> refs		6205417						
ANR	6206107	Symbol	it -> realname		6205417						
ANR	6206108	Symbol	it -> comment		6205417						
ANR	6206109	Symbol	a		6205417						
ANR	6206110	Symbol	r_str_pad		6205417						
ANR	6206111	Symbol	it -> bytes		6205417						
ANR	6206112	Symbol	ctx		6205417						
ANR	6206113	Symbol	ctx -> idx		6205417						
ANR	6206114	Symbol	* it -> space		6205417						
ANR	6206115	Symbol	it -> name		6205417						
ANR	6206116	Symbol	k		6205417						
ANR	6206117	Symbol	it		6205417						
ANR	6206118	Symbol	* ctx		6205417						
ANR	6206119	Symbol	r_sign_deserialize		6205417						
ANR	6206120	Symbol	it -> space		6205417						
ANR	6206121	Symbol	* it		6205417						
ANR	6206122	Symbol	v		6205417						
ANR	6206123	Symbol	it -> addr		6205417						
ANR	6206124	Symbol	it -> xrefs		6205417						
ANR	6206125	Symbol	user		6205417						
ANR	6206126	Function	r_sign_list	1485:0:34741:34995							
ANR	6206127	FunctionDef	"r_sign_list (RAnal * a , int format)"		6206126	0					
ANR	6206128	CompoundStatement		1485:45:34786:34995	6206126	0					
ANR	6206129	ExpressionStatement	r_return_if_fail ( a )	1486:1:34789:34809	6206126	0	True				
ANR	6206130	CallExpression	r_return_if_fail ( a )		6206126	0					
ANR	6206131	Callee	r_return_if_fail		6206126	0					
ANR	6206132	Identifier	r_return_if_fail		6206126	0					
ANR	6206133	ArgumentList	a		6206126	1					
ANR	6206134	Argument	a		6206126	0					
ANR	6206135	Identifier	a		6206126	0					
ANR	6206136	IdentifierDeclStatement	"struct ctxListCB ctx = { a , 0 , format } ;"	1487:1:34812:34851	6206126	1	True				
ANR	6206137	IdentifierDecl	"ctx = { a , 0 , format }"		6206126	0					
ANR	6206138	IdentifierDeclType	struct ctxListCB		6206126	0					
ANR	6206139	Identifier	ctx		6206126	1					
ANR	6206140	AssignmentExpression	"ctx = { a , 0 , format }"		6206126	2		=			
ANR	6206141	Identifier	ctx		6206126	0					
ANR	6206142	InitializerList	a		6206126	1					
ANR	6206143	Identifier	a		6206126	0					
ANR	6206144	PrimaryExpression	0		6206126	1					
ANR	6206145	Identifier	format		6206126	2					
ANR	6206146	IfStatement	if ( format == 'j' )		6206126	2					
ANR	6206147	Condition	format == 'j'	1489:5:34859:34871	6206126	0	True				
ANR	6206148	EqualityExpression	format == 'j'		6206126	0		==			
ANR	6206149	Identifier	format		6206126	0					
ANR	6206150	PrimaryExpression	'j'		6206126	1					
ANR	6206151	CompoundStatement		5:20:87:87	6206126	1					
ANR	6206152	ExpressionStatement	"a -> cb_printf ( ""["" )"	1490:2:34878:34896	6206126	0	True				
ANR	6206153	CallExpression	"a -> cb_printf ( ""["" )"		6206126	0					
ANR	6206154	Callee	a -> cb_printf		6206126	0					
ANR	6206155	PtrMemberAccess	a -> cb_printf		6206126	0					
ANR	6206156	Identifier	a		6206126	0					
ANR	6206157	Identifier	cb_printf		6206126	1					
ANR	6206158	ArgumentList	"""["""		6206126	1					
ANR	6206159	Argument	"""["""		6206126	0					
ANR	6206160	PrimaryExpression	"""["""		6206126	0					
ANR	6206161	ExpressionStatement	"sdb_foreach ( a -> sdb_zigns , listCB , & ctx )"	1493:1:34903:34943	6206126	3	True				
ANR	6206162	CallExpression	"sdb_foreach ( a -> sdb_zigns , listCB , & ctx )"		6206126	0					
ANR	6206163	Callee	sdb_foreach		6206126	0					
ANR	6206164	Identifier	sdb_foreach		6206126	0					
ANR	6206165	ArgumentList	a -> sdb_zigns		6206126	1					
ANR	6206166	Argument	a -> sdb_zigns		6206126	0					
ANR	6206167	PtrMemberAccess	a -> sdb_zigns		6206126	0					
ANR	6206168	Identifier	a		6206126	0					
ANR	6206169	Identifier	sdb_zigns		6206126	1					
ANR	6206170	Argument	listCB		6206126	1					
ANR	6206171	Identifier	listCB		6206126	0					
ANR	6206172	Argument	& ctx		6206126	2					
ANR	6206173	UnaryOperationExpression	& ctx		6206126	0					
ANR	6206174	UnaryOperator	&		6206126	0					
ANR	6206175	Identifier	ctx		6206126	1					
ANR	6206176	IfStatement	if ( format == 'j' )		6206126	4					
ANR	6206177	Condition	format == 'j'	1495:5:34951:34963	6206126	0	True				
ANR	6206178	EqualityExpression	format == 'j'		6206126	0		==			
ANR	6206179	Identifier	format		6206126	0					
ANR	6206180	PrimaryExpression	'j'		6206126	1					
ANR	6206181	CompoundStatement		11:20:179:179	6206126	1					
ANR	6206182	ExpressionStatement	"a -> cb_printf ( ""]\\n"" )"	1496:2:34970:34990	6206126	0	True				
ANR	6206183	CallExpression	"a -> cb_printf ( ""]\\n"" )"		6206126	0					
ANR	6206184	Callee	a -> cb_printf		6206126	0					
ANR	6206185	PtrMemberAccess	a -> cb_printf		6206126	0					
ANR	6206186	Identifier	a		6206126	0					
ANR	6206187	Identifier	cb_printf		6206126	1					
ANR	6206188	ArgumentList	"""]\\n"""		6206126	1					
ANR	6206189	Argument	"""]\\n"""		6206126	0					
ANR	6206190	PrimaryExpression	"""]\\n"""		6206126	0					
ANR	6206191	ReturnType	R_API void		6206126	1					
ANR	6206192	Identifier	r_sign_list		6206126	2					
ANR	6206193	ParameterList	"RAnal * a , int format"		6206126	3					
ANR	6206194	Parameter	RAnal * a	1485:23:34764:34771	6206126	0	True				
ANR	6206195	ParameterType	RAnal *		6206126	0					
ANR	6206196	Identifier	a		6206126	1					
ANR	6206197	Parameter	int format	1485:33:34774:34783	6206126	1	True				
ANR	6206198	ParameterType	int		6206126	0					
ANR	6206199	Identifier	format		6206126	1					
ANR	6206200	CFGEntryNode	ENTRY		6206126		True				
ANR	6206201	CFGExitNode	EXIT		6206126		True				
ANR	6206202	Symbol	a		6206126						
ANR	6206203	Symbol	listCB		6206126						
ANR	6206204	Symbol	ctx		6206126						
ANR	6206205	Symbol	format		6206126						
ANR	6206206	Symbol	& ctx		6206126						
ANR	6206207	Symbol	* a		6206126						
ANR	6206208	Symbol	a -> sdb_zigns		6206126						
ANR	6206209	Function	listGetCB	1500:0:34998:35321							
ANR	6206210	FunctionDef	"listGetCB (void * user , const char * key , const char * val)"		6206209	0					
ANR	6206211	CompoundStatement		1500:67:35065:35321	6206209	0					
ANR	6206212	IdentifierDeclStatement	struct ctxGetListCB * ctx = user ;	1501:1:35068:35099	6206209	0	True				
ANR	6206213	IdentifierDecl	* ctx = user		6206209	0					
ANR	6206214	IdentifierDeclType	struct ctxGetListCB *		6206209	0					
ANR	6206215	Identifier	ctx		6206209	1					
ANR	6206216	AssignmentExpression	* ctx = user		6206209	2		=			
ANR	6206217	Identifier	user		6206209	0					
ANR	6206218	Identifier	user		6206209	1					
ANR	6206219	IdentifierDeclStatement	RSignItem * item = r_sign_item_new ( ) ;	1502:1:35102:35138	6206209	1	True				
ANR	6206220	IdentifierDecl	* item = r_sign_item_new ( )		6206209	0					
ANR	6206221	IdentifierDeclType	RSignItem *		6206209	0					
ANR	6206222	Identifier	item		6206209	1					
ANR	6206223	AssignmentExpression	* item = r_sign_item_new ( )		6206209	2		=			
ANR	6206224	Identifier	item		6206209	0					
ANR	6206225	CallExpression	r_sign_item_new ( )		6206209	1					
ANR	6206226	Callee	r_sign_item_new		6206209	0					
ANR	6206227	Identifier	r_sign_item_new		6206209	0					
ANR	6206228	ArgumentList			6206209	1					
ANR	6206229	IfStatement	if ( ! item )		6206209	2					
ANR	6206230	Condition	! item	1503:5:35145:35149	6206209	0	True				
ANR	6206231	UnaryOperationExpression	! item		6206209	0					
ANR	6206232	UnaryOperator	!		6206209	0					
ANR	6206233	Identifier	item		6206209	1					
ANR	6206234	CompoundStatement		4:12:86:86	6206209	1					
ANR	6206235	ReturnStatement	return false ;	1504:2:35156:35168	6206209	0	True				
ANR	6206236	Identifier	false		6206209	0					
ANR	6206237	IfStatement	"if ( ! r_sign_deserialize ( ctx -> anal , item , key , val ) )"		6206209	3					
ANR	6206238	Condition	"! r_sign_deserialize ( ctx -> anal , item , key , val )"	1506:5:35178:35224	6206209	0	True				
ANR	6206239	UnaryOperationExpression	"! r_sign_deserialize ( ctx -> anal , item , key , val )"		6206209	0					
ANR	6206240	UnaryOperator	!		6206209	0					
ANR	6206241	CallExpression	"r_sign_deserialize ( ctx -> anal , item , key , val )"		6206209	1					
ANR	6206242	Callee	r_sign_deserialize		6206209	0					
ANR	6206243	Identifier	r_sign_deserialize		6206209	0					
ANR	6206244	ArgumentList	ctx -> anal		6206209	1					
ANR	6206245	Argument	ctx -> anal		6206209	0					
ANR	6206246	PtrMemberAccess	ctx -> anal		6206209	0					
ANR	6206247	Identifier	ctx		6206209	0					
ANR	6206248	Identifier	anal		6206209	1					
ANR	6206249	Argument	item		6206209	1					
ANR	6206250	Identifier	item		6206209	0					
ANR	6206251	Argument	key		6206209	2					
ANR	6206252	Identifier	key		6206209	0					
ANR	6206253	Argument	val		6206209	3					
ANR	6206254	Identifier	val		6206209	0					
ANR	6206255	CompoundStatement		7:54:161:161	6206209	1					
ANR	6206256	ExpressionStatement	r_sign_item_free ( item )	1507:2:35231:35254	6206209	0	True				
ANR	6206257	CallExpression	r_sign_item_free ( item )		6206209	0					
ANR	6206258	Callee	r_sign_item_free		6206209	0					
ANR	6206259	Identifier	r_sign_item_free		6206209	0					
ANR	6206260	ArgumentList	item		6206209	1					
ANR	6206261	Argument	item		6206209	0					
ANR	6206262	Identifier	item		6206209	0					
ANR	6206263	ReturnStatement	return false ;	1508:2:35258:35270	6206209	1	True				
ANR	6206264	Identifier	false		6206209	0					
ANR	6206265	ExpressionStatement	"r_list_append ( ctx -> list , item )"	1510:1:35276:35307	6206209	4	True				
ANR	6206266	CallExpression	"r_list_append ( ctx -> list , item )"		6206209	0					
ANR	6206267	Callee	r_list_append		6206209	0					
ANR	6206268	Identifier	r_list_append		6206209	0					
ANR	6206269	ArgumentList	ctx -> list		6206209	1					
ANR	6206270	Argument	ctx -> list		6206209	0					
ANR	6206271	PtrMemberAccess	ctx -> list		6206209	0					
ANR	6206272	Identifier	ctx		6206209	0					
ANR	6206273	Identifier	list		6206209	1					
ANR	6206274	Argument	item		6206209	1					
ANR	6206275	Identifier	item		6206209	0					
ANR	6206276	ReturnStatement	return 1 ;	1512:1:35311:35319	6206209	5	True				
ANR	6206277	PrimaryExpression	1		6206209	0					
ANR	6206278	ReturnType	static int		6206209	1					
ANR	6206279	Identifier	listGetCB		6206209	2					
ANR	6206280	ParameterList	"void * user , const char * key , const char * val"		6206209	3					
ANR	6206281	Parameter	void * user	1500:21:35019:35028	6206209	0	True				
ANR	6206282	ParameterType	void *		6206209	0					
ANR	6206283	Identifier	user		6206209	1					
ANR	6206284	Parameter	const char * key	1500:33:35031:35045	6206209	1	True				
ANR	6206285	ParameterType	const char *		6206209	0					
ANR	6206286	Identifier	key		6206209	1					
ANR	6206287	Parameter	const char * val	1500:50:35048:35062	6206209	2	True				
ANR	6206288	ParameterType	const char *		6206209	0					
ANR	6206289	Identifier	val		6206209	1					
ANR	6206290	CFGEntryNode	ENTRY		6206209		True				
ANR	6206291	CFGExitNode	EXIT		6206209		True				
ANR	6206292	Symbol	val		6206209						
ANR	6206293	Symbol	r_sign_item_new		6206209						
ANR	6206294	Symbol	r_sign_deserialize		6206209						
ANR	6206295	Symbol	item		6206209						
ANR	6206296	Symbol	ctx		6206209						
ANR	6206297	Symbol	false		6206209						
ANR	6206298	Symbol	ctx -> list		6206209						
ANR	6206299	Symbol	ctx -> anal		6206209						
ANR	6206300	Symbol	user		6206209						
ANR	6206301	Symbol	key		6206209						
ANR	6206302	Symbol	* ctx		6206209						
ANR	6206303	Function	r_sign_get_list	1515:0:35324:35539							
ANR	6206304	FunctionDef	r_sign_get_list (RAnal * a)		6206303	0					
ANR	6206305	CompoundStatement		1515:39:35363:35539	6206303	0					
ANR	6206306	ExpressionStatement	"r_return_val_if_fail ( a , NULL )"	1516:1:35366:35396	6206303	0	True				
ANR	6206307	CallExpression	"r_return_val_if_fail ( a , NULL )"		6206303	0					
ANR	6206308	Callee	r_return_val_if_fail		6206303	0					
ANR	6206309	Identifier	r_return_val_if_fail		6206303	0					
ANR	6206310	ArgumentList	a		6206303	1					
ANR	6206311	Argument	a		6206303	0					
ANR	6206312	Identifier	a		6206303	0					
ANR	6206313	Argument	NULL		6206303	1					
ANR	6206314	Identifier	NULL		6206303	0					
ANR	6206315	IdentifierDeclStatement	"struct ctxGetListCB ctx = { a , r_list_newf ( ( RListFree ) r_sign_item_free ) } ;"	1517:1:35399:35473	6206303	1	True				
ANR	6206316	IdentifierDecl	"ctx = { a , r_list_newf ( ( RListFree ) r_sign_item_free ) }"		6206303	0					
ANR	6206317	IdentifierDeclType	struct ctxGetListCB		6206303	0					
ANR	6206318	Identifier	ctx		6206303	1					
ANR	6206319	AssignmentExpression	"ctx = { a , r_list_newf ( ( RListFree ) r_sign_item_free ) }"		6206303	2		=			
ANR	6206320	Identifier	ctx		6206303	0					
ANR	6206321	InitializerList	a		6206303	1					
ANR	6206322	Identifier	a		6206303	0					
ANR	6206323	CallExpression	r_list_newf ( ( RListFree ) r_sign_item_free )		6206303	1					
ANR	6206324	Callee	r_list_newf		6206303	0					
ANR	6206325	Identifier	r_list_newf		6206303	0					
ANR	6206326	ArgumentList	( RListFree ) r_sign_item_free		6206303	1					
ANR	6206327	Argument	( RListFree ) r_sign_item_free		6206303	0					
ANR	6206328	CastExpression	( RListFree ) r_sign_item_free		6206303	0					
ANR	6206329	CastTarget	RListFree		6206303	0					
ANR	6206330	Identifier	r_sign_item_free		6206303	1					
ANR	6206331	ExpressionStatement	"sdb_foreach ( a -> sdb_zigns , listGetCB , & ctx )"	1518:1:35476:35519	6206303	2	True				
ANR	6206332	CallExpression	"sdb_foreach ( a -> sdb_zigns , listGetCB , & ctx )"		6206303	0					
ANR	6206333	Callee	sdb_foreach		6206303	0					
ANR	6206334	Identifier	sdb_foreach		6206303	0					
ANR	6206335	ArgumentList	a -> sdb_zigns		6206303	1					
ANR	6206336	Argument	a -> sdb_zigns		6206303	0					
ANR	6206337	PtrMemberAccess	a -> sdb_zigns		6206303	0					
ANR	6206338	Identifier	a		6206303	0					
ANR	6206339	Identifier	sdb_zigns		6206303	1					
ANR	6206340	Argument	listGetCB		6206303	1					
ANR	6206341	Identifier	listGetCB		6206303	0					
ANR	6206342	Argument	& ctx		6206303	2					
ANR	6206343	UnaryOperationExpression	& ctx		6206303	0					
ANR	6206344	UnaryOperator	&		6206303	0					
ANR	6206345	Identifier	ctx		6206303	1					
ANR	6206346	ReturnStatement	return ctx . list ;	1519:1:35522:35537	6206303	3	True				
ANR	6206347	MemberAccess	ctx . list		6206303	0					
ANR	6206348	Identifier	ctx		6206303	0					
ANR	6206349	Identifier	list		6206303	1					
ANR	6206350	ReturnType	R_API RList *		6206303	1					
ANR	6206351	Identifier	r_sign_get_list		6206303	2					
ANR	6206352	ParameterList	RAnal * a		6206303	3					
ANR	6206353	Parameter	RAnal * a	1515:29:35353:35360	6206303	0	True				
ANR	6206354	ParameterType	RAnal *		6206303	0					
ANR	6206355	Identifier	a		6206303	1					
ANR	6206356	CFGEntryNode	ENTRY		6206303		True				
ANR	6206357	CFGExitNode	EXIT		6206303		True				
ANR	6206358	Symbol	a		6206303						
ANR	6206359	Symbol	NULL		6206303						
ANR	6206360	Symbol	r_list_newf		6206303						
ANR	6206361	Symbol	ctx		6206303						
ANR	6206362	Symbol	listGetCB		6206303						
ANR	6206363	Symbol	r_sign_item_free		6206303						
ANR	6206364	Symbol	& ctx		6206303						
ANR	6206365	Symbol	* a		6206303						
ANR	6206366	Symbol	ctx . list		6206303						
ANR	6206367	Symbol	a -> sdb_zigns		6206303						
ANR	6206368	Function	cmpaddr	1522:0:35542:35660							
ANR	6206369	FunctionDef	"cmpaddr (const void * _a , const void * _b)"		6206368	0					
ANR	6206370	CompoundStatement		1522:51:35593:35660	6206368	0					
ANR	6206371	IdentifierDeclStatement	"const RAnalBlock * a = _a , * b = _b ;"	1523:1:35596:35629	6206368	0	True				
ANR	6206372	IdentifierDecl	* a = _a		6206368	0					
ANR	6206373	IdentifierDeclType	const RAnalBlock *		6206368	0					
ANR	6206374	Identifier	a		6206368	1					
ANR	6206375	AssignmentExpression	* a = _a		6206368	2		=			
ANR	6206376	Identifier	_a		6206368	0					
ANR	6206377	Identifier	_a		6206368	1					
ANR	6206378	IdentifierDecl	* b = _b		6206368	1					
ANR	6206379	IdentifierDeclType	const RAnalBlock *		6206368	0					
ANR	6206380	Identifier	b		6206368	1					
ANR	6206381	AssignmentExpression	* b = _b		6206368	2		=			
ANR	6206382	Identifier	_b		6206368	0					
ANR	6206383	Identifier	_b		6206368	1					
ANR	6206384	ReturnStatement	return ( a -> addr - b -> addr ) ;	1524:1:35632:35658	6206368	1	True				
ANR	6206385	AdditiveExpression	a -> addr - b -> addr		6206368	0		-			
ANR	6206386	PtrMemberAccess	a -> addr		6206368	0					
ANR	6206387	Identifier	a		6206368	0					
ANR	6206388	Identifier	addr		6206368	1					
ANR	6206389	PtrMemberAccess	b -> addr		6206368	1					
ANR	6206390	Identifier	b		6206368	0					
ANR	6206391	Identifier	addr		6206368	1					
ANR	6206392	ReturnType	static int		6206368	1					
ANR	6206393	Identifier	cmpaddr		6206368	2					
ANR	6206394	ParameterList	"const void * _a , const void * _b"		6206368	3					
ANR	6206395	Parameter	const void * _a	1522:19:35561:35574	6206368	0	True				
ANR	6206396	ParameterType	const void *		6206368	0					
ANR	6206397	Identifier	_a		6206368	1					
ANR	6206398	Parameter	const void * _b	1522:35:35577:35590	6206368	1	True				
ANR	6206399	ParameterType	const void *		6206368	0					
ANR	6206400	Identifier	_b		6206368	1					
ANR	6206401	CFGEntryNode	ENTRY		6206368		True				
ANR	6206402	CFGExitNode	EXIT		6206368		True				
ANR	6206403	Symbol	a		6206368						
ANR	6206404	Symbol	_a		6206368						
ANR	6206405	Symbol	b		6206368						
ANR	6206406	Symbol	_b		6206368						
ANR	6206407	Symbol	a -> addr		6206368						
ANR	6206408	Symbol	* a		6206368						
ANR	6206409	Symbol	* b		6206368						
ANR	6206410	Symbol	b -> addr		6206368						
ANR	6206411	Function	r_sign_calc_bbhash	1527:0:35663:36373							
ANR	6206412	FunctionDef	"r_sign_calc_bbhash (RAnal * a , RAnalFunction * fcn)"		6206411	0					
ANR	6206413	CompoundStatement		1527:61:35724:36373	6206411	0					
ANR	6206414	IdentifierDeclStatement	RListIter * iter = NULL ;	1528:1:35727:35749	6206411	0	True				
ANR	6206415	IdentifierDecl	* iter = NULL		6206411	0					
ANR	6206416	IdentifierDeclType	RListIter *		6206411	0					
ANR	6206417	Identifier	iter		6206411	1					
ANR	6206418	AssignmentExpression	* iter = NULL		6206411	2		=			
ANR	6206419	Identifier	NULL		6206411	0					
ANR	6206420	Identifier	NULL		6206411	1					
ANR	6206421	IdentifierDeclStatement	RAnalBlock * bbi = NULL ;	1529:1:35752:35774	6206411	1	True				
ANR	6206422	IdentifierDecl	* bbi = NULL		6206411	0					
ANR	6206423	IdentifierDeclType	RAnalBlock *		6206411	0					
ANR	6206424	Identifier	bbi		6206411	1					
ANR	6206425	AssignmentExpression	* bbi = NULL		6206411	2		=			
ANR	6206426	Identifier	NULL		6206411	0					
ANR	6206427	Identifier	NULL		6206411	1					
ANR	6206428	IdentifierDeclStatement	char * digest_hex = NULL ;	1530:1:35777:35800	6206411	2	True				
ANR	6206429	IdentifierDecl	* digest_hex = NULL		6206411	0					
ANR	6206430	IdentifierDeclType	char *		6206411	0					
ANR	6206431	Identifier	digest_hex		6206411	1					
ANR	6206432	AssignmentExpression	* digest_hex = NULL		6206411	2		=			
ANR	6206433	Identifier	NULL		6206411	0					
ANR	6206434	Identifier	NULL		6206411	1					
ANR	6206435	IdentifierDeclStatement	"RHash * ctx = r_hash_new ( true , R_ZIGN_HASH ) ;"	1531:1:35803:35846	6206411	3	True				
ANR	6206436	IdentifierDecl	"* ctx = r_hash_new ( true , R_ZIGN_HASH )"		6206411	0					
ANR	6206437	IdentifierDeclType	RHash *		6206411	0					
ANR	6206438	Identifier	ctx		6206411	1					
ANR	6206439	AssignmentExpression	"* ctx = r_hash_new ( true , R_ZIGN_HASH )"		6206411	2		=			
ANR	6206440	Identifier	ctx		6206411	0					
ANR	6206441	CallExpression	"r_hash_new ( true , R_ZIGN_HASH )"		6206411	1					
ANR	6206442	Callee	r_hash_new		6206411	0					
ANR	6206443	Identifier	r_hash_new		6206411	0					
ANR	6206444	ArgumentList	true		6206411	1					
ANR	6206445	Argument	true		6206411	0					
ANR	6206446	Identifier	true		6206411	0					
ANR	6206447	Argument	R_ZIGN_HASH		6206411	1					
ANR	6206448	Identifier	R_ZIGN_HASH		6206411	0					
ANR	6206449	IfStatement	if ( ! ctx )		6206411	4					
ANR	6206450	Condition	! ctx	1532:5:35853:35856	6206411	0	True				
ANR	6206451	UnaryOperationExpression	! ctx		6206411	0					
ANR	6206452	UnaryOperator	!		6206411	0					
ANR	6206453	Identifier	ctx		6206411	1					
ANR	6206454	CompoundStatement		6:11:134:134	6206411	1					
ANR	6206455	GotoStatement	goto beach ;	1533:2:35863:35873	6206411	0	True				
ANR	6206456	Identifier	beach		6206411	0					
ANR	6206457	ExpressionStatement	"r_list_sort ( fcn -> bbs , & cmpaddr )"	1535:1:35879:35911	6206411	5	True				
ANR	6206458	CallExpression	"r_list_sort ( fcn -> bbs , & cmpaddr )"		6206411	0					
ANR	6206459	Callee	r_list_sort		6206411	0					
ANR	6206460	Identifier	r_list_sort		6206411	0					
ANR	6206461	ArgumentList	fcn -> bbs		6206411	1					
ANR	6206462	Argument	fcn -> bbs		6206411	0					
ANR	6206463	PtrMemberAccess	fcn -> bbs		6206411	0					
ANR	6206464	Identifier	fcn		6206411	0					
ANR	6206465	Identifier	bbs		6206411	1					
ANR	6206466	Argument	& cmpaddr		6206411	1					
ANR	6206467	UnaryOperationExpression	& cmpaddr		6206411	0					
ANR	6206468	UnaryOperator	&		6206411	0					
ANR	6206469	Identifier	cmpaddr		6206411	1					
ANR	6206470	ExpressionStatement	"r_hash_do_begin ( ctx , R_ZIGN_HASH )"	1536:1:35914:35948	6206411	6	True				
ANR	6206471	CallExpression	"r_hash_do_begin ( ctx , R_ZIGN_HASH )"		6206411	0					
ANR	6206472	Callee	r_hash_do_begin		6206411	0					
ANR	6206473	Identifier	r_hash_do_begin		6206411	0					
ANR	6206474	ArgumentList	ctx		6206411	1					
ANR	6206475	Argument	ctx		6206411	0					
ANR	6206476	Identifier	ctx		6206411	0					
ANR	6206477	Argument	R_ZIGN_HASH		6206411	1					
ANR	6206478	Identifier	R_ZIGN_HASH		6206411	0					
ANR	6206479	Statement	r_list_foreach	1537:1:35951:35964	6206411	7	True				
ANR	6206480	Statement	(	1537:16:35966:35966	6206411	8	True				
ANR	6206481	Statement	fcn	1537:17:35967:35969	6206411	9	True				
ANR	6206482	Statement	->	1537:20:35970:35971	6206411	10	True				
ANR	6206483	Statement	bbs	1537:22:35972:35974	6206411	11	True				
ANR	6206484	Statement	","	1537:25:35975:35975	6206411	12	True				
ANR	6206485	Statement	iter	1537:27:35977:35980	6206411	13	True				
ANR	6206486	Statement	","	1537:31:35981:35981	6206411	14	True				
ANR	6206487	Statement	bbi	1537:33:35983:35985	6206411	15	True				
ANR	6206488	Statement	)	1537:36:35986:35986	6206411	16	True				
ANR	6206489	CompoundStatement		12:2:267:296	6206411	17					
ANR	6206490	IdentifierDeclStatement	ut8 * buf = malloc ( bbi -> size ) ;	1538:2:35992:36021	6206411	0	True				
ANR	6206491	IdentifierDecl	* buf = malloc ( bbi -> size )		6206411	0					
ANR	6206492	IdentifierDeclType	ut8 *		6206411	0					
ANR	6206493	Identifier	buf		6206411	1					
ANR	6206494	AssignmentExpression	* buf = malloc ( bbi -> size )		6206411	2		=			
ANR	6206495	Identifier	buf		6206411	0					
ANR	6206496	CallExpression	malloc ( bbi -> size )		6206411	1					
ANR	6206497	Callee	malloc		6206411	0					
ANR	6206498	Identifier	malloc		6206411	0					
ANR	6206499	ArgumentList	bbi -> size		6206411	1					
ANR	6206500	Argument	bbi -> size		6206411	0					
ANR	6206501	PtrMemberAccess	bbi -> size		6206411	0					
ANR	6206502	Identifier	bbi		6206411	0					
ANR	6206503	Identifier	size		6206411	1					
ANR	6206504	IfStatement	if ( ! buf )		6206411	1					
ANR	6206505	Condition	! buf	1539:6:36029:36032	6206411	0	True				
ANR	6206506	UnaryOperationExpression	! buf		6206411	0					
ANR	6206507	UnaryOperator	!		6206411	0					
ANR	6206508	Identifier	buf		6206411	1					
ANR	6206509	CompoundStatement		13:12:310:310	6206411	1					
ANR	6206510	GotoStatement	goto beach ;	1540:3:36040:36050	6206411	0	True				
ANR	6206511	Identifier	beach		6206411	0					
ANR	6206512	IfStatement	"if ( ! a -> iob . read_at ( a -> iob . io , bbi -> addr , buf , bbi -> size ) )"		6206411	2					
ANR	6206513	Condition	"! a -> iob . read_at ( a -> iob . io , bbi -> addr , buf , bbi -> size )"	1542:6:36062:36115	6206411	0	True				
ANR	6206514	UnaryOperationExpression	"! a -> iob . read_at ( a -> iob . io , bbi -> addr , buf , bbi -> size )"		6206411	0					
ANR	6206515	UnaryOperator	!		6206411	0					
ANR	6206516	CallExpression	"a -> iob . read_at ( a -> iob . io , bbi -> addr , buf , bbi -> size )"		6206411	1					
ANR	6206517	Callee	a -> iob . read_at		6206411	0					
ANR	6206518	MemberAccess	a -> iob . read_at		6206411	0					
ANR	6206519	PtrMemberAccess	a -> iob		6206411	0					
ANR	6206520	Identifier	a		6206411	0					
ANR	6206521	Identifier	iob		6206411	1					
ANR	6206522	Identifier	read_at		6206411	1					
ANR	6206523	ArgumentList	a -> iob . io		6206411	1					
ANR	6206524	Argument	a -> iob . io		6206411	0					
ANR	6206525	MemberAccess	a -> iob . io		6206411	0					
ANR	6206526	PtrMemberAccess	a -> iob		6206411	0					
ANR	6206527	Identifier	a		6206411	0					
ANR	6206528	Identifier	iob		6206411	1					
ANR	6206529	Identifier	io		6206411	1					
ANR	6206530	Argument	bbi -> addr		6206411	1					
ANR	6206531	PtrMemberAccess	bbi -> addr		6206411	0					
ANR	6206532	Identifier	bbi		6206411	0					
ANR	6206533	Identifier	addr		6206411	1					
ANR	6206534	Argument	buf		6206411	2					
ANR	6206535	Identifier	buf		6206411	0					
ANR	6206536	Argument	bbi -> size		6206411	3					
ANR	6206537	PtrMemberAccess	bbi -> size		6206411	0					
ANR	6206538	Identifier	bbi		6206411	0					
ANR	6206539	Identifier	size		6206411	1					
ANR	6206540	CompoundStatement		16:62:393:393	6206411	1					
ANR	6206541	GotoStatement	goto beach ;	1543:3:36123:36133	6206411	0	True				
ANR	6206542	Identifier	beach		6206411	0					
ANR	6206543	IfStatement	"if ( ! r_hash_do_sha256 ( ctx , buf , bbi -> size ) )"		6206411	3					
ANR	6206544	Condition	"! r_hash_do_sha256 ( ctx , buf , bbi -> size )"	1545:6:36145:36183	6206411	0	True				
ANR	6206545	UnaryOperationExpression	"! r_hash_do_sha256 ( ctx , buf , bbi -> size )"		6206411	0					
ANR	6206546	UnaryOperator	!		6206411	0					
ANR	6206547	CallExpression	"r_hash_do_sha256 ( ctx , buf , bbi -> size )"		6206411	1					
ANR	6206548	Callee	r_hash_do_sha256		6206411	0					
ANR	6206549	Identifier	r_hash_do_sha256		6206411	0					
ANR	6206550	ArgumentList	ctx		6206411	1					
ANR	6206551	Argument	ctx		6206411	0					
ANR	6206552	Identifier	ctx		6206411	0					
ANR	6206553	Argument	buf		6206411	1					
ANR	6206554	Identifier	buf		6206411	0					
ANR	6206555	Argument	bbi -> size		6206411	2					
ANR	6206556	PtrMemberAccess	bbi -> size		6206411	0					
ANR	6206557	Identifier	bbi		6206411	0					
ANR	6206558	Identifier	size		6206411	1					
ANR	6206559	CompoundStatement		19:47:461:461	6206411	1					
ANR	6206560	GotoStatement	goto beach ;	1546:3:36191:36201	6206411	0	True				
ANR	6206561	Identifier	beach		6206411	0					
ANR	6206562	ExpressionStatement	free ( buf )	1548:2:36209:36219	6206411	4	True				
ANR	6206563	CallExpression	free ( buf )		6206411	0					
ANR	6206564	Callee	free		6206411	0					
ANR	6206565	Identifier	free		6206411	0					
ANR	6206566	ArgumentList	buf		6206411	1					
ANR	6206567	Argument	buf		6206411	0					
ANR	6206568	Identifier	buf		6206411	0					
ANR	6206569	ExpressionStatement	"r_hash_do_end ( ctx , R_ZIGN_HASH )"	1550:1:36225:36257	6206411	18	True				
ANR	6206570	CallExpression	"r_hash_do_end ( ctx , R_ZIGN_HASH )"		6206411	0					
ANR	6206571	Callee	r_hash_do_end		6206411	0					
ANR	6206572	Identifier	r_hash_do_end		6206411	0					
ANR	6206573	ArgumentList	ctx		6206411	1					
ANR	6206574	Argument	ctx		6206411	0					
ANR	6206575	Identifier	ctx		6206411	0					
ANR	6206576	Argument	R_ZIGN_HASH		6206411	1					
ANR	6206577	Identifier	R_ZIGN_HASH		6206411	0					
ANR	6206578	ExpressionStatement	"digest_hex = r_hex_bin2strdup ( ctx -> digest , r_hash_size ( R_ZIGN_HASH ) )"	1552:1:36261:36331	6206411	19	True				
ANR	6206579	AssignmentExpression	"digest_hex = r_hex_bin2strdup ( ctx -> digest , r_hash_size ( R_ZIGN_HASH ) )"		6206411	0		=			
ANR	6206580	Identifier	digest_hex		6206411	0					
ANR	6206581	CallExpression	"r_hex_bin2strdup ( ctx -> digest , r_hash_size ( R_ZIGN_HASH ) )"		6206411	1					
ANR	6206582	Callee	r_hex_bin2strdup		6206411	0					
ANR	6206583	Identifier	r_hex_bin2strdup		6206411	0					
ANR	6206584	ArgumentList	ctx -> digest		6206411	1					
ANR	6206585	Argument	ctx -> digest		6206411	0					
ANR	6206586	PtrMemberAccess	ctx -> digest		6206411	0					
ANR	6206587	Identifier	ctx		6206411	0					
ANR	6206588	Identifier	digest		6206411	1					
ANR	6206589	Argument	r_hash_size ( R_ZIGN_HASH )		6206411	1					
ANR	6206590	CallExpression	r_hash_size ( R_ZIGN_HASH )		6206411	0					
ANR	6206591	Callee	r_hash_size		6206411	0					
ANR	6206592	Identifier	r_hash_size		6206411	0					
ANR	6206593	ArgumentList	R_ZIGN_HASH		6206411	1					
ANR	6206594	Argument	R_ZIGN_HASH		6206411	0					
ANR	6206595	Identifier	R_ZIGN_HASH		6206411	0					
ANR	6206596	Label	beach :	1553:0:36333:36338	6206411	20	True				
ANR	6206597	Identifier	beach		6206411	0					
ANR	6206598	ExpressionStatement	free ( ctx )	1554:1:36341:36351	6206411	21	True				
ANR	6206599	CallExpression	free ( ctx )		6206411	0					
ANR	6206600	Callee	free		6206411	0					
ANR	6206601	Identifier	free		6206411	0					
ANR	6206602	ArgumentList	ctx		6206411	1					
ANR	6206603	Argument	ctx		6206411	0					
ANR	6206604	Identifier	ctx		6206411	0					
ANR	6206605	ReturnStatement	return digest_hex ;	1555:1:36354:36371	6206411	22	True				
ANR	6206606	Identifier	digest_hex		6206411	0					
ANR	6206607	ReturnType	R_API char *		6206411	1					
ANR	6206608	Identifier	r_sign_calc_bbhash		6206411	2					
ANR	6206609	ParameterList	"RAnal * a , RAnalFunction * fcn"		6206411	3					
ANR	6206610	Parameter	RAnal * a	1527:31:35694:35701	6206411	0	True				
ANR	6206611	ParameterType	RAnal *		6206411	0					
ANR	6206612	Identifier	a		6206411	1					
ANR	6206613	Parameter	RAnalFunction * fcn	1527:41:35704:35721	6206411	1	True				
ANR	6206614	ParameterType	RAnalFunction *		6206411	0					
ANR	6206615	Identifier	fcn		6206411	1					
ANR	6206616	CFGEntryNode	ENTRY		6206411		True				
ANR	6206617	CFGExitNode	EXIT		6206411		True				
ANR	6206618	Symbol	* fcn		6206411						
ANR	6206619	Symbol	bbi -> size		6206411						
ANR	6206620	Symbol	r_hex_bin2strdup		6206411						
ANR	6206621	Symbol	r_hash_size		6206411						
ANR	6206622	Symbol	a -> iob . read_at		6206411						
ANR	6206623	Symbol	fcn		6206411						
ANR	6206624	Symbol	& cmpaddr		6206411						
ANR	6206625	Symbol	ctx -> digest		6206411						
ANR	6206626	Symbol	digest_hex		6206411						
ANR	6206627	Symbol	r_hash_do_sha256		6206411						
ANR	6206628	Symbol	bbi -> addr		6206411						
ANR	6206629	Symbol	a		6206411						
ANR	6206630	Symbol	malloc		6206411						
ANR	6206631	Symbol	NULL		6206411						
ANR	6206632	Symbol	ctx		6206411						
ANR	6206633	Symbol	bbi		6206411						
ANR	6206634	Symbol	iter		6206411						
ANR	6206635	Symbol	* a		6206411						
ANR	6206636	Symbol	a -> iob . io		6206411						
ANR	6206637	Symbol	* bbi		6206411						
ANR	6206638	Symbol	* ctx		6206411						
ANR	6206639	Symbol	r_hash_new		6206411						
ANR	6206640	Symbol	a -> iob		6206411						
ANR	6206641	Symbol	buf		6206411						
ANR	6206642	Symbol	fcn -> bbs		6206411						
ANR	6206643	Symbol	true		6206411						
ANR	6206644	Symbol	R_ZIGN_HASH		6206411						
ANR	6206645	ClassDef	ctxCountForCB	1558:0:36376:36447							
ANR	6206646	DeclStmt									
ANR	6206647	Decl							RAnal	RAnal *	anal
ANR	6206648	DeclStmt									
ANR	6206649	Decl							const RSpace	const RSpace *	space
ANR	6206650	DeclStmt									
ANR	6206651	Decl							int	int	count
ANR	6206652	Function	countForCB	1564:0:36451:36815							
ANR	6206653	FunctionDef	"countForCB (void * user , const char * k , const char * v)"		6206652	0					
ANR	6206654	CompoundStatement		1564:64:36515:36815	6206652	0					
ANR	6206655	IdentifierDeclStatement	struct ctxCountForCB * ctx = ( struct ctxCountForCB * ) user ;	1565:1:36518:36575	6206652	0	True				
ANR	6206656	IdentifierDecl	* ctx = ( struct ctxCountForCB * ) user		6206652	0					
ANR	6206657	IdentifierDeclType	struct ctxCountForCB *		6206652	0					
ANR	6206658	Identifier	ctx		6206652	1					
ANR	6206659	AssignmentExpression	* ctx = ( struct ctxCountForCB * ) user		6206652	2		=			
ANR	6206660	Identifier	ctx		6206652	0					
ANR	6206661	CastExpression	( struct ctxCountForCB * ) user		6206652	1					
ANR	6206662	CastTarget	struct ctxCountForCB *		6206652	0					
ANR	6206663	Identifier	user		6206652	1					
ANR	6206664	IdentifierDeclStatement	RSignItem * it = r_sign_item_new ( ) ;	1566:1:36578:36612	6206652	1	True				
ANR	6206665	IdentifierDecl	* it = r_sign_item_new ( )		6206652	0					
ANR	6206666	IdentifierDeclType	RSignItem *		6206652	0					
ANR	6206667	Identifier	it		6206652	1					
ANR	6206668	AssignmentExpression	* it = r_sign_item_new ( )		6206652	2		=			
ANR	6206669	Identifier	it		6206652	0					
ANR	6206670	CallExpression	r_sign_item_new ( )		6206652	1					
ANR	6206671	Callee	r_sign_item_new		6206652	0					
ANR	6206672	Identifier	r_sign_item_new		6206652	0					
ANR	6206673	ArgumentList			6206652	1					
ANR	6206674	IfStatement	"if ( r_sign_deserialize ( ctx -> anal , it , k , v ) )"		6206652	2					
ANR	6206675	Condition	"r_sign_deserialize ( ctx -> anal , it , k , v )"	1568:5:36620:36659	6206652	0	True				
ANR	6206676	CallExpression	"r_sign_deserialize ( ctx -> anal , it , k , v )"		6206652	0					
ANR	6206677	Callee	r_sign_deserialize		6206652	0					
ANR	6206678	Identifier	r_sign_deserialize		6206652	0					
ANR	6206679	ArgumentList	ctx -> anal		6206652	1					
ANR	6206680	Argument	ctx -> anal		6206652	0					
ANR	6206681	PtrMemberAccess	ctx -> anal		6206652	0					
ANR	6206682	Identifier	ctx		6206652	0					
ANR	6206683	Identifier	anal		6206652	1					
ANR	6206684	Argument	it		6206652	1					
ANR	6206685	Identifier	it		6206652	0					
ANR	6206686	Argument	k		6206652	2					
ANR	6206687	Identifier	k		6206652	0					
ANR	6206688	Argument	v		6206652	3					
ANR	6206689	Identifier	v		6206652	0					
ANR	6206690	CompoundStatement		5:47:146:146	6206652	1					
ANR	6206691	IfStatement	if ( it -> space == ctx -> space )		6206652	0					
ANR	6206692	Condition	it -> space == ctx -> space	1569:6:36670:36692	6206652	0	True				
ANR	6206693	EqualityExpression	it -> space == ctx -> space		6206652	0		==			
ANR	6206694	PtrMemberAccess	it -> space		6206652	0					
ANR	6206695	Identifier	it		6206652	0					
ANR	6206696	Identifier	space		6206652	1					
ANR	6206697	PtrMemberAccess	ctx -> space		6206652	1					
ANR	6206698	Identifier	ctx		6206652	0					
ANR	6206699	Identifier	space		6206652	1					
ANR	6206700	CompoundStatement		6:31:179:179	6206652	1					
ANR	6206701	ExpressionStatement	ctx -> count ++	1570:3:36700:36712	6206652	0	True				
ANR	6206702	PostIncDecOperationExpression	ctx -> count ++		6206652	0					
ANR	6206703	PtrMemberAccess	ctx -> count		6206652	0					
ANR	6206704	Identifier	ctx		6206652	0					
ANR	6206705	Identifier	count		6206652	1					
ANR	6206706	IncDec	++		6206652	1					
ANR	6206707	ElseStatement	else		6206652	0					
ANR	6206708	CompoundStatement		9:8:210:210	6206652	0					
ANR	6206709	ExpressionStatement	"eprintf ( ""error: cannot deserialize zign\\n"" )"	1573:2:36730:36774	6206652	0	True				
ANR	6206710	CallExpression	"eprintf ( ""error: cannot deserialize zign\\n"" )"		6206652	0					
ANR	6206711	Callee	eprintf		6206652	0					
ANR	6206712	Identifier	eprintf		6206652	0					
ANR	6206713	ArgumentList	"""error: cannot deserialize zign\\n"""		6206652	1					
ANR	6206714	Argument	"""error: cannot deserialize zign\\n"""		6206652	0					
ANR	6206715	PrimaryExpression	"""error: cannot deserialize zign\\n"""		6206652	0					
ANR	6206716	ExpressionStatement	r_sign_item_free ( it )	1575:1:36780:36801	6206652	3	True				
ANR	6206717	CallExpression	r_sign_item_free ( it )		6206652	0					
ANR	6206718	Callee	r_sign_item_free		6206652	0					
ANR	6206719	Identifier	r_sign_item_free		6206652	0					
ANR	6206720	ArgumentList	it		6206652	1					
ANR	6206721	Argument	it		6206652	0					
ANR	6206722	Identifier	it		6206652	0					
ANR	6206723	ReturnStatement	return 1 ;	1577:1:36805:36813	6206652	4	True				
ANR	6206724	PrimaryExpression	1		6206652	0					
ANR	6206725	ReturnType	static int		6206652	1					
ANR	6206726	Identifier	countForCB		6206652	2					
ANR	6206727	ParameterList	"void * user , const char * k , const char * v"		6206652	3					
ANR	6206728	Parameter	void * user	1564:22:36473:36482	6206652	0	True				
ANR	6206729	ParameterType	void *		6206652	0					
ANR	6206730	Identifier	user		6206652	1					
ANR	6206731	Parameter	const char * k	1564:34:36485:36497	6206652	1	True				
ANR	6206732	ParameterType	const char *		6206652	0					
ANR	6206733	Identifier	k		6206652	1					
ANR	6206734	Parameter	const char * v	1564:49:36500:36512	6206652	2	True				
ANR	6206735	ParameterType	const char *		6206652	0					
ANR	6206736	Identifier	v		6206652	1					
ANR	6206737	CFGEntryNode	ENTRY		6206652		True				
ANR	6206738	CFGExitNode	EXIT		6206652		True				
ANR	6206739	Symbol	r_sign_item_new		6206652						
ANR	6206740	Symbol	ctx		6206652						
ANR	6206741	Symbol	ctx -> anal		6206652						
ANR	6206742	Symbol	k		6206652						
ANR	6206743	Symbol	it		6206652						
ANR	6206744	Symbol	* ctx		6206652						
ANR	6206745	Symbol	r_sign_deserialize		6206652						
ANR	6206746	Symbol	it -> space		6206652						
ANR	6206747	Symbol	ctx -> count		6206652						
ANR	6206748	Symbol	* it		6206652						
ANR	6206749	Symbol	v		6206652						
ANR	6206750	Symbol	ctx -> space		6206652						
ANR	6206751	Symbol	user		6206652						
ANR	6206752	Function	r_sign_space_count_for	1580:0:36818:37025							
ANR	6206753	FunctionDef	"r_sign_space_count_for (RAnal * a , const RSpace * space)"		6206752	0					
ANR	6206754	CompoundStatement		1580:64:36882:37025	6206752	0					
ANR	6206755	IdentifierDeclStatement	"struct ctxCountForCB ctx = { a , space , 0 } ;"	1581:1:36885:36927	6206752	0	True				
ANR	6206756	IdentifierDecl	"ctx = { a , space , 0 }"		6206752	0					
ANR	6206757	IdentifierDeclType	struct ctxCountForCB		6206752	0					
ANR	6206758	Identifier	ctx		6206752	1					
ANR	6206759	AssignmentExpression	"ctx = { a , space , 0 }"		6206752	2		=			
ANR	6206760	Identifier	ctx		6206752	0					
ANR	6206761	InitializerList	a		6206752	1					
ANR	6206762	Identifier	a		6206752	0					
ANR	6206763	Identifier	space		6206752	1					
ANR	6206764	PrimaryExpression	0		6206752	2					
ANR	6206765	ExpressionStatement	"r_return_val_if_fail ( a , 0 )"	1582:1:36930:36957	6206752	1	True				
ANR	6206766	CallExpression	"r_return_val_if_fail ( a , 0 )"		6206752	0					
ANR	6206767	Callee	r_return_val_if_fail		6206752	0					
ANR	6206768	Identifier	r_return_val_if_fail		6206752	0					
ANR	6206769	ArgumentList	a		6206752	1					
ANR	6206770	Argument	a		6206752	0					
ANR	6206771	Identifier	a		6206752	0					
ANR	6206772	Argument	0		6206752	1					
ANR	6206773	PrimaryExpression	0		6206752	0					
ANR	6206774	ExpressionStatement	"sdb_foreach ( a -> sdb_zigns , countForCB , & ctx )"	1583:1:36960:37004	6206752	2	True				
ANR	6206775	CallExpression	"sdb_foreach ( a -> sdb_zigns , countForCB , & ctx )"		6206752	0					
ANR	6206776	Callee	sdb_foreach		6206752	0					
ANR	6206777	Identifier	sdb_foreach		6206752	0					
ANR	6206778	ArgumentList	a -> sdb_zigns		6206752	1					
ANR	6206779	Argument	a -> sdb_zigns		6206752	0					
ANR	6206780	PtrMemberAccess	a -> sdb_zigns		6206752	0					
ANR	6206781	Identifier	a		6206752	0					
ANR	6206782	Identifier	sdb_zigns		6206752	1					
ANR	6206783	Argument	countForCB		6206752	1					
ANR	6206784	Identifier	countForCB		6206752	0					
ANR	6206785	Argument	& ctx		6206752	2					
ANR	6206786	UnaryOperationExpression	& ctx		6206752	0					
ANR	6206787	UnaryOperator	&		6206752	0					
ANR	6206788	Identifier	ctx		6206752	1					
ANR	6206789	ReturnStatement	return ctx . count ;	1584:1:37007:37023	6206752	3	True				
ANR	6206790	MemberAccess	ctx . count		6206752	0					
ANR	6206791	Identifier	ctx		6206752	0					
ANR	6206792	Identifier	count		6206752	1					
ANR	6206793	ReturnType	R_API int		6206752	1					
ANR	6206794	Identifier	r_sign_space_count_for		6206752	2					
ANR	6206795	ParameterList	"RAnal * a , const RSpace * space"		6206752	3					
ANR	6206796	Parameter	RAnal * a	1580:33:36851:36858	6206752	0	True				
ANR	6206797	ParameterType	RAnal *		6206752	0					
ANR	6206798	Identifier	a		6206752	1					
ANR	6206799	Parameter	const RSpace * space	1580:43:36861:36879	6206752	1	True				
ANR	6206800	ParameterType	const RSpace *		6206752	0					
ANR	6206801	Identifier	space		6206752	1					
ANR	6206802	CFGEntryNode	ENTRY		6206752		True				
ANR	6206803	CFGExitNode	EXIT		6206752		True				
ANR	6206804	Symbol	a		6206752						
ANR	6206805	Symbol	countForCB		6206752						
ANR	6206806	Symbol	ctx		6206752						
ANR	6206807	Symbol	ctx . count		6206752						
ANR	6206808	Symbol	& ctx		6206752						
ANR	6206809	Symbol	* a		6206752						
ANR	6206810	Symbol	space		6206752						
ANR	6206811	Symbol	a -> sdb_zigns		6206752						
ANR	6206812	ClassDef	ctxUnsetForCB	1587:0:37028:37087							
ANR	6206813	DeclStmt									
ANR	6206814	Decl							RAnal	RAnal *	anal
ANR	6206815	DeclStmt									
ANR	6206816	Decl							const RSpace	const RSpace *	space
ANR	6206817	Function	unsetForCB	1592:0:37091:37647							
ANR	6206818	FunctionDef	"unsetForCB (void * user , const char * k , const char * v)"		6206817	0					
ANR	6206819	CompoundStatement		1592:64:37155:37647	6206817	0					
ANR	6206820	IdentifierDeclStatement	struct ctxUnsetForCB * ctx = ( struct ctxUnsetForCB * ) user ;	1593:1:37158:37215	6206817	0	True				
ANR	6206821	IdentifierDecl	* ctx = ( struct ctxUnsetForCB * ) user		6206817	0					
ANR	6206822	IdentifierDeclType	struct ctxUnsetForCB *		6206817	0					
ANR	6206823	Identifier	ctx		6206817	1					
ANR	6206824	AssignmentExpression	* ctx = ( struct ctxUnsetForCB * ) user		6206817	2		=			
ANR	6206825	Identifier	ctx		6206817	0					
ANR	6206826	CastExpression	( struct ctxUnsetForCB * ) user		6206817	1					
ANR	6206827	CastTarget	struct ctxUnsetForCB *		6206817	0					
ANR	6206828	Identifier	user		6206817	1					
ANR	6206829	IdentifierDeclStatement	"char nk [ R_SIGN_KEY_MAXSZ ] , nv [ R_SIGN_VAL_MAXSZ ] ;"	1594:1:37218:37265	6206817	1	True				
ANR	6206830	IdentifierDecl	nk [ R_SIGN_KEY_MAXSZ ]		6206817	0					
ANR	6206831	IdentifierDeclType	char [ R_SIGN_KEY_MAXSZ ]		6206817	0					
ANR	6206832	Identifier	nk		6206817	1					
ANR	6206833	Identifier	R_SIGN_KEY_MAXSZ		6206817	2					
ANR	6206834	IdentifierDecl	nv [ R_SIGN_VAL_MAXSZ ]		6206817	1					
ANR	6206835	IdentifierDeclType	char [ R_SIGN_VAL_MAXSZ ]		6206817	0					
ANR	6206836	Identifier	nv		6206817	1					
ANR	6206837	Identifier	R_SIGN_VAL_MAXSZ		6206817	2					
ANR	6206838	IdentifierDeclStatement	RSignItem * it = r_sign_item_new ( ) ;	1595:1:37268:37302	6206817	2	True				
ANR	6206839	IdentifierDecl	* it = r_sign_item_new ( )		6206817	0					
ANR	6206840	IdentifierDeclType	RSignItem *		6206817	0					
ANR	6206841	Identifier	it		6206817	1					
ANR	6206842	AssignmentExpression	* it = r_sign_item_new ( )		6206817	2		=			
ANR	6206843	Identifier	it		6206817	0					
ANR	6206844	CallExpression	r_sign_item_new ( )		6206817	1					
ANR	6206845	Callee	r_sign_item_new		6206817	0					
ANR	6206846	Identifier	r_sign_item_new		6206817	0					
ANR	6206847	ArgumentList			6206817	1					
ANR	6206848	IdentifierDeclStatement	Sdb * db = ctx -> anal -> sdb_zigns ;	1596:1:37305:37335	6206817	3	True				
ANR	6206849	IdentifierDecl	* db = ctx -> anal -> sdb_zigns		6206817	0					
ANR	6206850	IdentifierDeclType	Sdb *		6206817	0					
ANR	6206851	Identifier	db		6206817	1					
ANR	6206852	AssignmentExpression	* db = ctx -> anal -> sdb_zigns		6206817	2		=			
ANR	6206853	Identifier	db		6206817	0					
ANR	6206854	PtrMemberAccess	ctx -> anal -> sdb_zigns		6206817	1					
ANR	6206855	PtrMemberAccess	ctx -> anal		6206817	0					
ANR	6206856	Identifier	ctx		6206817	0					
ANR	6206857	Identifier	anal		6206817	1					
ANR	6206858	Identifier	sdb_zigns		6206817	1					
ANR	6206859	IfStatement	"if ( r_sign_deserialize ( ctx -> anal , it , k , v ) )"		6206817	4					
ANR	6206860	Condition	"r_sign_deserialize ( ctx -> anal , it , k , v )"	1598:5:37343:37382	6206817	0	True				
ANR	6206861	CallExpression	"r_sign_deserialize ( ctx -> anal , it , k , v )"		6206817	0					
ANR	6206862	Callee	r_sign_deserialize		6206817	0					
ANR	6206863	Identifier	r_sign_deserialize		6206817	0					
ANR	6206864	ArgumentList	ctx -> anal		6206817	1					
ANR	6206865	Argument	ctx -> anal		6206817	0					
ANR	6206866	PtrMemberAccess	ctx -> anal		6206817	0					
ANR	6206867	Identifier	ctx		6206817	0					
ANR	6206868	Identifier	anal		6206817	1					
ANR	6206869	Argument	it		6206817	1					
ANR	6206870	Identifier	it		6206817	0					
ANR	6206871	Argument	k		6206817	2					
ANR	6206872	Identifier	k		6206817	0					
ANR	6206873	Argument	v		6206817	3					
ANR	6206874	Identifier	v		6206817	0					
ANR	6206875	CompoundStatement		7:47:229:229	6206817	1					
ANR	6206876	IfStatement	if ( it -> space && it -> space == ctx -> space )		6206817	0					
ANR	6206877	Condition	it -> space && it -> space == ctx -> space	1599:6:37393:37428	6206817	0	True				
ANR	6206878	AndExpression	it -> space && it -> space == ctx -> space		6206817	0		&&			
ANR	6206879	PtrMemberAccess	it -> space		6206817	0					
ANR	6206880	Identifier	it		6206817	0					
ANR	6206881	Identifier	space		6206817	1					
ANR	6206882	EqualityExpression	it -> space == ctx -> space		6206817	1		==			
ANR	6206883	PtrMemberAccess	it -> space		6206817	0					
ANR	6206884	Identifier	it		6206817	0					
ANR	6206885	Identifier	space		6206817	1					
ANR	6206886	PtrMemberAccess	ctx -> space		6206817	1					
ANR	6206887	Identifier	ctx		6206817	0					
ANR	6206888	Identifier	space		6206817	1					
ANR	6206889	CompoundStatement		8:44:275:275	6206817	1					
ANR	6206890	ExpressionStatement	it -> space = NULL	1600:3:37436:37452	6206817	0	True				
ANR	6206891	AssignmentExpression	it -> space = NULL		6206817	0		=			
ANR	6206892	PtrMemberAccess	it -> space		6206817	0					
ANR	6206893	Identifier	it		6206817	0					
ANR	6206894	Identifier	space		6206817	1					
ANR	6206895	Identifier	NULL		6206817	1					
ANR	6206896	ExpressionStatement	"serialize ( ctx -> anal , it , nk , nv )"	1601:3:37457:37490	6206817	1	True				
ANR	6206897	CallExpression	"serialize ( ctx -> anal , it , nk , nv )"		6206817	0					
ANR	6206898	Callee	serialize		6206817	0					
ANR	6206899	Identifier	serialize		6206817	0					
ANR	6206900	ArgumentList	ctx -> anal		6206817	1					
ANR	6206901	Argument	ctx -> anal		6206817	0					
ANR	6206902	PtrMemberAccess	ctx -> anal		6206817	0					
ANR	6206903	Identifier	ctx		6206817	0					
ANR	6206904	Identifier	anal		6206817	1					
ANR	6206905	Argument	it		6206817	1					
ANR	6206906	Identifier	it		6206817	0					
ANR	6206907	Argument	nk		6206817	2					
ANR	6206908	Identifier	nk		6206817	0					
ANR	6206909	Argument	nv		6206817	3					
ANR	6206910	Identifier	nv		6206817	0					
ANR	6206911	ExpressionStatement	"sdb_remove ( db , k , 0 )"	1602:3:37495:37516	6206817	2	True				
ANR	6206912	CallExpression	"sdb_remove ( db , k , 0 )"		6206817	0					
ANR	6206913	Callee	sdb_remove		6206817	0					
ANR	6206914	Identifier	sdb_remove		6206817	0					
ANR	6206915	ArgumentList	db		6206817	1					
ANR	6206916	Argument	db		6206817	0					
ANR	6206917	Identifier	db		6206817	0					
ANR	6206918	Argument	k		6206817	1					
ANR	6206919	Identifier	k		6206817	0					
ANR	6206920	Argument	0		6206817	2					
ANR	6206921	PrimaryExpression	0		6206817	0					
ANR	6206922	ExpressionStatement	"sdb_set ( db , nk , nv , 0 )"	1603:3:37521:37544	6206817	3	True				
ANR	6206923	CallExpression	"sdb_set ( db , nk , nv , 0 )"		6206817	0					
ANR	6206924	Callee	sdb_set		6206817	0					
ANR	6206925	Identifier	sdb_set		6206817	0					
ANR	6206926	ArgumentList	db		6206817	1					
ANR	6206927	Argument	db		6206817	0					
ANR	6206928	Identifier	db		6206817	0					
ANR	6206929	Argument	nk		6206817	1					
ANR	6206930	Identifier	nk		6206817	0					
ANR	6206931	Argument	nv		6206817	2					
ANR	6206932	Identifier	nv		6206817	0					
ANR	6206933	Argument	0		6206817	3					
ANR	6206934	PrimaryExpression	0		6206817	0					
ANR	6206935	ElseStatement	else		6206817	0					
ANR	6206936	CompoundStatement		14:8:402:402	6206817	0					
ANR	6206937	ExpressionStatement	"eprintf ( ""error: cannot deserialize zign\\n"" )"	1606:2:37562:37606	6206817	0	True				
ANR	6206938	CallExpression	"eprintf ( ""error: cannot deserialize zign\\n"" )"		6206817	0					
ANR	6206939	Callee	eprintf		6206817	0					
ANR	6206940	Identifier	eprintf		6206817	0					
ANR	6206941	ArgumentList	"""error: cannot deserialize zign\\n"""		6206817	1					
ANR	6206942	Argument	"""error: cannot deserialize zign\\n"""		6206817	0					
ANR	6206943	PrimaryExpression	"""error: cannot deserialize zign\\n"""		6206817	0					
ANR	6206944	ExpressionStatement	r_sign_item_free ( it )	1608:1:37612:37633	6206817	5	True				
ANR	6206945	CallExpression	r_sign_item_free ( it )		6206817	0					
ANR	6206946	Callee	r_sign_item_free		6206817	0					
ANR	6206947	Identifier	r_sign_item_free		6206817	0					
ANR	6206948	ArgumentList	it		6206817	1					
ANR	6206949	Argument	it		6206817	0					
ANR	6206950	Identifier	it		6206817	0					
ANR	6206951	ReturnStatement	return 1 ;	1610:1:37637:37645	6206817	6	True				
ANR	6206952	PrimaryExpression	1		6206817	0					
ANR	6206953	ReturnType	static int		6206817	1					
ANR	6206954	Identifier	unsetForCB		6206817	2					
ANR	6206955	ParameterList	"void * user , const char * k , const char * v"		6206817	3					
ANR	6206956	Parameter	void * user	1592:22:37113:37122	6206817	0	True				
ANR	6206957	ParameterType	void *		6206817	0					
ANR	6206958	Identifier	user		6206817	1					
ANR	6206959	Parameter	const char * k	1592:34:37125:37137	6206817	1	True				
ANR	6206960	ParameterType	const char *		6206817	0					
ANR	6206961	Identifier	k		6206817	1					
ANR	6206962	Parameter	const char * v	1592:49:37140:37152	6206817	2	True				
ANR	6206963	ParameterType	const char *		6206817	0					
ANR	6206964	Identifier	v		6206817	1					
ANR	6206965	CFGEntryNode	ENTRY		6206817		True				
ANR	6206966	CFGExitNode	EXIT		6206817		True				
ANR	6206967	Symbol	r_sign_item_new		6206817						
ANR	6206968	Symbol	* ctx -> anal		6206817						
ANR	6206969	Symbol	NULL		6206817						
ANR	6206970	Symbol	ctx		6206817						
ANR	6206971	Symbol	nv		6206817						
ANR	6206972	Symbol	ctx -> anal -> sdb_zigns		6206817						
ANR	6206973	Symbol	ctx -> anal		6206817						
ANR	6206974	Symbol	k		6206817						
ANR	6206975	Symbol	it		6206817						
ANR	6206976	Symbol	* ctx		6206817						
ANR	6206977	Symbol	r_sign_deserialize		6206817						
ANR	6206978	Symbol	it -> space		6206817						
ANR	6206979	Symbol	* it		6206817						
ANR	6206980	Symbol	v		6206817						
ANR	6206981	Symbol	ctx -> space		6206817						
ANR	6206982	Symbol	* * ctx		6206817						
ANR	6206983	Symbol	user		6206817						
ANR	6206984	Symbol	nk		6206817						
ANR	6206985	Symbol	db		6206817						
ANR	6206986	Function	r_sign_space_unset_for	1613:0:37650:37829							
ANR	6206987	FunctionDef	"r_sign_space_unset_for (RAnal * a , const RSpace * space)"		6206986	0					
ANR	6206988	CompoundStatement		1613:65:37715:37829	6206986	0					
ANR	6206989	ExpressionStatement	r_return_if_fail ( a )	1614:1:37718:37738	6206986	0	True				
ANR	6206990	CallExpression	r_return_if_fail ( a )		6206986	0					
ANR	6206991	Callee	r_return_if_fail		6206986	0					
ANR	6206992	Identifier	r_return_if_fail		6206986	0					
ANR	6206993	ArgumentList	a		6206986	1					
ANR	6206994	Argument	a		6206986	0					
ANR	6206995	Identifier	a		6206986	0					
ANR	6206996	IdentifierDeclStatement	"struct ctxUnsetForCB ctx = { a , space } ;"	1615:1:37741:37780	6206986	1	True				
ANR	6206997	IdentifierDecl	"ctx = { a , space }"		6206986	0					
ANR	6206998	IdentifierDeclType	struct ctxUnsetForCB		6206986	0					
ANR	6206999	Identifier	ctx		6206986	1					
ANR	6207000	AssignmentExpression	"ctx = { a , space }"		6206986	2		=			
ANR	6207001	Identifier	ctx		6206986	0					
ANR	6207002	InitializerList	a		6206986	1					
ANR	6207003	Identifier	a		6206986	0					
ANR	6207004	Identifier	space		6206986	1					
ANR	6207005	ExpressionStatement	"sdb_foreach ( a -> sdb_zigns , unsetForCB , & ctx )"	1616:1:37783:37827	6206986	2	True				
ANR	6207006	CallExpression	"sdb_foreach ( a -> sdb_zigns , unsetForCB , & ctx )"		6206986	0					
ANR	6207007	Callee	sdb_foreach		6206986	0					
ANR	6207008	Identifier	sdb_foreach		6206986	0					
ANR	6207009	ArgumentList	a -> sdb_zigns		6206986	1					
ANR	6207010	Argument	a -> sdb_zigns		6206986	0					
ANR	6207011	PtrMemberAccess	a -> sdb_zigns		6206986	0					
ANR	6207012	Identifier	a		6206986	0					
ANR	6207013	Identifier	sdb_zigns		6206986	1					
ANR	6207014	Argument	unsetForCB		6206986	1					
ANR	6207015	Identifier	unsetForCB		6206986	0					
ANR	6207016	Argument	& ctx		6206986	2					
ANR	6207017	UnaryOperationExpression	& ctx		6206986	0					
ANR	6207018	UnaryOperator	&		6206986	0					
ANR	6207019	Identifier	ctx		6206986	1					
ANR	6207020	ReturnType	R_API void		6206986	1					
ANR	6207021	Identifier	r_sign_space_unset_for		6206986	2					
ANR	6207022	ParameterList	"RAnal * a , const RSpace * space"		6206986	3					
ANR	6207023	Parameter	RAnal * a	1613:34:37684:37691	6206986	0	True				
ANR	6207024	ParameterType	RAnal *		6206986	0					
ANR	6207025	Identifier	a		6206986	1					
ANR	6207026	Parameter	const RSpace * space	1613:44:37694:37712	6206986	1	True				
ANR	6207027	ParameterType	const RSpace *		6206986	0					
ANR	6207028	Identifier	space		6206986	1					
ANR	6207029	CFGEntryNode	ENTRY		6206986		True				
ANR	6207030	CFGExitNode	EXIT		6206986		True				
ANR	6207031	Symbol	a		6206986						
ANR	6207032	Symbol	ctx		6206986						
ANR	6207033	Symbol	unsetForCB		6206986						
ANR	6207034	Symbol	& ctx		6206986						
ANR	6207035	Symbol	* a		6206986						
ANR	6207036	Symbol	space		6206986						
ANR	6207037	Symbol	a -> sdb_zigns		6206986						
ANR	6207038	ClassDef	ctxRenameForCB	1619:0:37832:37936							
ANR	6207039	DeclStmt									
ANR	6207040	Decl							RAnal	RAnal *	anal
ANR	6207041	DeclStmt									
ANR	6207042	Decl							char	char [ R_SIGN_KEY_MAXSZ ]	oprefix
ANR	6207043	DeclStmt									
ANR	6207044	Decl							char	char [ R_SIGN_KEY_MAXSZ ]	nprefix
ANR	6207045	Function	renameForCB	1625:0:37940:38456							
ANR	6207046	FunctionDef	"renameForCB (void * user , const char * k , const char * v)"		6207045	0					
ANR	6207047	CompoundStatement		1625:65:38005:38456	6207045	0					
ANR	6207048	IdentifierDeclStatement	struct ctxRenameForCB * ctx = ( struct ctxRenameForCB * ) user ;	1626:1:38008:38067	6207045	0	True				
ANR	6207049	IdentifierDecl	* ctx = ( struct ctxRenameForCB * ) user		6207045	0					
ANR	6207050	IdentifierDeclType	struct ctxRenameForCB *		6207045	0					
ANR	6207051	Identifier	ctx		6207045	1					
ANR	6207052	AssignmentExpression	* ctx = ( struct ctxRenameForCB * ) user		6207045	2		=			
ANR	6207053	Identifier	ctx		6207045	0					
ANR	6207054	CastExpression	( struct ctxRenameForCB * ) user		6207045	1					
ANR	6207055	CastTarget	struct ctxRenameForCB *		6207045	0					
ANR	6207056	Identifier	user		6207045	1					
ANR	6207057	IdentifierDeclStatement	"char nk [ R_SIGN_KEY_MAXSZ ] , nv [ R_SIGN_VAL_MAXSZ ] ;"	1627:1:38070:38117	6207045	1	True				
ANR	6207058	IdentifierDecl	nk [ R_SIGN_KEY_MAXSZ ]		6207045	0					
ANR	6207059	IdentifierDeclType	char [ R_SIGN_KEY_MAXSZ ]		6207045	0					
ANR	6207060	Identifier	nk		6207045	1					
ANR	6207061	Identifier	R_SIGN_KEY_MAXSZ		6207045	2					
ANR	6207062	IdentifierDecl	nv [ R_SIGN_VAL_MAXSZ ]		6207045	1					
ANR	6207063	IdentifierDeclType	char [ R_SIGN_VAL_MAXSZ ]		6207045	0					
ANR	6207064	Identifier	nv		6207045	1					
ANR	6207065	Identifier	R_SIGN_VAL_MAXSZ		6207045	2					
ANR	6207066	IdentifierDeclStatement	const char * zigname = NULL ;	1628:1:38120:38146	6207045	2	True				
ANR	6207067	IdentifierDecl	* zigname = NULL		6207045	0					
ANR	6207068	IdentifierDeclType	const char *		6207045	0					
ANR	6207069	Identifier	zigname		6207045	1					
ANR	6207070	AssignmentExpression	* zigname = NULL		6207045	2		=			
ANR	6207071	Identifier	NULL		6207045	0					
ANR	6207072	Identifier	NULL		6207045	1					
ANR	6207073	IdentifierDeclStatement	Sdb * db = ctx -> anal -> sdb_zigns ;	1629:1:38149:38179	6207045	3	True				
ANR	6207074	IdentifierDecl	* db = ctx -> anal -> sdb_zigns		6207045	0					
ANR	6207075	IdentifierDeclType	Sdb *		6207045	0					
ANR	6207076	Identifier	db		6207045	1					
ANR	6207077	AssignmentExpression	* db = ctx -> anal -> sdb_zigns		6207045	2		=			
ANR	6207078	Identifier	db		6207045	0					
ANR	6207079	PtrMemberAccess	ctx -> anal -> sdb_zigns		6207045	1					
ANR	6207080	PtrMemberAccess	ctx -> anal		6207045	0					
ANR	6207081	Identifier	ctx		6207045	0					
ANR	6207082	Identifier	anal		6207045	1					
ANR	6207083	Identifier	sdb_zigns		6207045	1					
ANR	6207084	IfStatement	"if ( ! strncmp ( k , ctx -> oprefix , strlen ( ctx -> oprefix ) ) )"		6207045	4					
ANR	6207085	Condition	"! strncmp ( k , ctx -> oprefix , strlen ( ctx -> oprefix ) )"	1631:5:38187:38235	6207045	0	True				
ANR	6207086	UnaryOperationExpression	"! strncmp ( k , ctx -> oprefix , strlen ( ctx -> oprefix ) )"		6207045	0					
ANR	6207087	UnaryOperator	!		6207045	0					
ANR	6207088	CallExpression	"strncmp ( k , ctx -> oprefix , strlen ( ctx -> oprefix ) )"		6207045	1					
ANR	6207089	Callee	strncmp		6207045	0					
ANR	6207090	Identifier	strncmp		6207045	0					
ANR	6207091	ArgumentList	k		6207045	1					
ANR	6207092	Argument	k		6207045	0					
ANR	6207093	Identifier	k		6207045	0					
ANR	6207094	Argument	ctx -> oprefix		6207045	1					
ANR	6207095	PtrMemberAccess	ctx -> oprefix		6207045	0					
ANR	6207096	Identifier	ctx		6207045	0					
ANR	6207097	Identifier	oprefix		6207045	1					
ANR	6207098	Argument	strlen ( ctx -> oprefix )		6207045	2					
ANR	6207099	CallExpression	strlen ( ctx -> oprefix )		6207045	0					
ANR	6207100	Callee	strlen		6207045	0					
ANR	6207101	Identifier	strlen		6207045	0					
ANR	6207102	ArgumentList	ctx -> oprefix		6207045	1					
ANR	6207103	Argument	ctx -> oprefix		6207045	0					
ANR	6207104	PtrMemberAccess	ctx -> oprefix		6207045	0					
ANR	6207105	Identifier	ctx		6207045	0					
ANR	6207106	Identifier	oprefix		6207045	1					
ANR	6207107	CompoundStatement		7:56:232:232	6207045	1					
ANR	6207108	ExpressionStatement	zigname = k + strlen ( ctx -> oprefix )	1632:2:38242:38277	6207045	0	True				
ANR	6207109	AssignmentExpression	zigname = k + strlen ( ctx -> oprefix )		6207045	0		=			
ANR	6207110	Identifier	zigname		6207045	0					
ANR	6207111	AdditiveExpression	k + strlen ( ctx -> oprefix )		6207045	1		+			
ANR	6207112	Identifier	k		6207045	0					
ANR	6207113	CallExpression	strlen ( ctx -> oprefix )		6207045	1					
ANR	6207114	Callee	strlen		6207045	0					
ANR	6207115	Identifier	strlen		6207045	0					
ANR	6207116	ArgumentList	ctx -> oprefix		6207045	1					
ANR	6207117	Argument	ctx -> oprefix		6207045	0					
ANR	6207118	PtrMemberAccess	ctx -> oprefix		6207045	0					
ANR	6207119	Identifier	ctx		6207045	0					
ANR	6207120	Identifier	oprefix		6207045	1					
ANR	6207121	ExpressionStatement	"snprintf ( nk , R_SIGN_KEY_MAXSZ , ""%s%s"" , ctx -> nprefix , zigname )"	1633:2:38281:38343	6207045	1	True				
ANR	6207122	CallExpression	"snprintf ( nk , R_SIGN_KEY_MAXSZ , ""%s%s"" , ctx -> nprefix , zigname )"		6207045	0					
ANR	6207123	Callee	snprintf		6207045	0					
ANR	6207124	Identifier	snprintf		6207045	0					
ANR	6207125	ArgumentList	nk		6207045	1					
ANR	6207126	Argument	nk		6207045	0					
ANR	6207127	Identifier	nk		6207045	0					
ANR	6207128	Argument	R_SIGN_KEY_MAXSZ		6207045	1					
ANR	6207129	Identifier	R_SIGN_KEY_MAXSZ		6207045	0					
ANR	6207130	Argument	"""%s%s"""		6207045	2					
ANR	6207131	PrimaryExpression	"""%s%s"""		6207045	0					
ANR	6207132	Argument	ctx -> nprefix		6207045	3					
ANR	6207133	PtrMemberAccess	ctx -> nprefix		6207045	0					
ANR	6207134	Identifier	ctx		6207045	0					
ANR	6207135	Identifier	nprefix		6207045	1					
ANR	6207136	Argument	zigname		6207045	4					
ANR	6207137	Identifier	zigname		6207045	0					
ANR	6207138	ExpressionStatement	"snprintf ( nv , R_SIGN_VAL_MAXSZ , ""%s"" , v )"	1634:2:38347:38387	6207045	2	True				
ANR	6207139	CallExpression	"snprintf ( nv , R_SIGN_VAL_MAXSZ , ""%s"" , v )"		6207045	0					
ANR	6207140	Callee	snprintf		6207045	0					
ANR	6207141	Identifier	snprintf		6207045	0					
ANR	6207142	ArgumentList	nv		6207045	1					
ANR	6207143	Argument	nv		6207045	0					
ANR	6207144	Identifier	nv		6207045	0					
ANR	6207145	Argument	R_SIGN_VAL_MAXSZ		6207045	1					
ANR	6207146	Identifier	R_SIGN_VAL_MAXSZ		6207045	0					
ANR	6207147	Argument	"""%s"""		6207045	2					
ANR	6207148	PrimaryExpression	"""%s"""		6207045	0					
ANR	6207149	Argument	v		6207045	3					
ANR	6207150	Identifier	v		6207045	0					
ANR	6207151	ExpressionStatement	"sdb_remove ( db , k , 0 )"	1635:2:38391:38412	6207045	3	True				
ANR	6207152	CallExpression	"sdb_remove ( db , k , 0 )"		6207045	0					
ANR	6207153	Callee	sdb_remove		6207045	0					
ANR	6207154	Identifier	sdb_remove		6207045	0					
ANR	6207155	ArgumentList	db		6207045	1					
ANR	6207156	Argument	db		6207045	0					
ANR	6207157	Identifier	db		6207045	0					
ANR	6207158	Argument	k		6207045	1					
ANR	6207159	Identifier	k		6207045	0					
ANR	6207160	Argument	0		6207045	2					
ANR	6207161	PrimaryExpression	0		6207045	0					
ANR	6207162	ExpressionStatement	"sdb_set ( db , nk , nv , 0 )"	1636:2:38416:38439	6207045	4	True				
ANR	6207163	CallExpression	"sdb_set ( db , nk , nv , 0 )"		6207045	0					
ANR	6207164	Callee	sdb_set		6207045	0					
ANR	6207165	Identifier	sdb_set		6207045	0					
ANR	6207166	ArgumentList	db		6207045	1					
ANR	6207167	Argument	db		6207045	0					
ANR	6207168	Identifier	db		6207045	0					
ANR	6207169	Argument	nk		6207045	1					
ANR	6207170	Identifier	nk		6207045	0					
ANR	6207171	Argument	nv		6207045	2					
ANR	6207172	Identifier	nv		6207045	0					
ANR	6207173	Argument	0		6207045	3					
ANR	6207174	PrimaryExpression	0		6207045	0					
ANR	6207175	ReturnStatement	return 1 ;	1639:1:38446:38454	6207045	5	True				
ANR	6207176	PrimaryExpression	1		6207045	0					
ANR	6207177	ReturnType	static int		6207045	1					
ANR	6207178	Identifier	renameForCB		6207045	2					
ANR	6207179	ParameterList	"void * user , const char * k , const char * v"		6207045	3					
ANR	6207180	Parameter	void * user	1625:23:37963:37972	6207045	0	True				
ANR	6207181	ParameterType	void *		6207045	0					
ANR	6207182	Identifier	user		6207045	1					
ANR	6207183	Parameter	const char * k	1625:35:37975:37987	6207045	1	True				
ANR	6207184	ParameterType	const char *		6207045	0					
ANR	6207185	Identifier	k		6207045	1					
ANR	6207186	Parameter	const char * v	1625:50:37990:38002	6207045	2	True				
ANR	6207187	ParameterType	const char *		6207045	0					
ANR	6207188	Identifier	v		6207045	1					
ANR	6207189	CFGEntryNode	ENTRY		6207045		True				
ANR	6207190	CFGExitNode	EXIT		6207045		True				
ANR	6207191	Symbol	ctx -> oprefix		6207045						
ANR	6207192	Symbol	R_SIGN_VAL_MAXSZ		6207045						
ANR	6207193	Symbol	NULL		6207045						
ANR	6207194	Symbol	* ctx -> anal		6207045						
ANR	6207195	Symbol	ctx		6207045						
ANR	6207196	Symbol	zigname		6207045						
ANR	6207197	Symbol	nv		6207045						
ANR	6207198	Symbol	ctx -> anal -> sdb_zigns		6207045						
ANR	6207199	Symbol	ctx -> anal		6207045						
ANR	6207200	Symbol	R_SIGN_KEY_MAXSZ		6207045						
ANR	6207201	Symbol	ctx -> nprefix		6207045						
ANR	6207202	Symbol	k		6207045						
ANR	6207203	Symbol	* ctx		6207045						
ANR	6207204	Symbol	strncmp		6207045						
ANR	6207205	Symbol	strlen		6207045						
ANR	6207206	Symbol	v		6207045						
ANR	6207207	Symbol	* * ctx		6207045						
ANR	6207208	Symbol	user		6207045						
ANR	6207209	Symbol	nk		6207045						
ANR	6207210	Symbol	db		6207045						
ANR	6207211	Function	r_sign_space_rename_for	1642:0:38459:38807							
ANR	6207212	FunctionDef	"r_sign_space_rename_for (RAnal * a , const RSpace * space , const char * oname , const char * nname)"		6207211	0					
ANR	6207213	CompoundStatement		1642:104:38563:38807	6207211	0					
ANR	6207214	ExpressionStatement	r_return_if_fail ( a && space && oname && nname )	1643:1:38566:38613	6207211	0	True				
ANR	6207215	CallExpression	r_return_if_fail ( a && space && oname && nname )		6207211	0					
ANR	6207216	Callee	r_return_if_fail		6207211	0					
ANR	6207217	Identifier	r_return_if_fail		6207211	0					
ANR	6207218	ArgumentList	a && space && oname && nname		6207211	1					
ANR	6207219	Argument	a && space && oname && nname		6207211	0					
ANR	6207220	AndExpression	a && space && oname && nname		6207211	0		&&			
ANR	6207221	Identifier	a		6207211	0					
ANR	6207222	AndExpression	space && oname && nname		6207211	1		&&			
ANR	6207223	Identifier	space		6207211	0					
ANR	6207224	AndExpression	oname && nname		6207211	1		&&			
ANR	6207225	Identifier	oname		6207211	0					
ANR	6207226	Identifier	nname		6207211	1					
ANR	6207227	Statement	struct	1644:1:38616:38621	6207211	1	True				
ANR	6207228	Statement	ctxRenameForCB	1644:8:38623:38636	6207211	2	True				
ANR	6207229	Statement	ctx	1644:23:38638:38640	6207211	3	True				
ANR	6207230	Statement	=	1644:27:38642:38642	6207211	4	True				
ANR	6207231	CompoundStatement		3:29:80:80	6207211	5					
ANR	6207232	Statement	.	1644:30:38645:38645	6207211	0	True				
ANR	6207233	Statement	anal	1644:31:38646:38649	6207211	1	True				
ANR	6207234	Statement	=	1644:36:38651:38651	6207211	2	True				
ANR	6207235	Statement	a	1644:38:38653:38653	6207211	3	True				
ANR	6207236	ExpressionStatement		1644:40:38655:38655	6207211	6	True				
ANR	6207237	ExpressionStatement	"serializeKeySpaceStr ( a , oname , """" , ctx . oprefix )"	1645:1:38658:38706	6207211	7	True				
ANR	6207238	CallExpression	"serializeKeySpaceStr ( a , oname , """" , ctx . oprefix )"		6207211	0					
ANR	6207239	Callee	serializeKeySpaceStr		6207211	0					
ANR	6207240	Identifier	serializeKeySpaceStr		6207211	0					
ANR	6207241	ArgumentList	a		6207211	1					
ANR	6207242	Argument	a		6207211	0					
ANR	6207243	Identifier	a		6207211	0					
ANR	6207244	Argument	oname		6207211	1					
ANR	6207245	Identifier	oname		6207211	0					
ANR	6207246	Argument	""""""		6207211	2					
ANR	6207247	PrimaryExpression	""""""		6207211	0					
ANR	6207248	Argument	ctx . oprefix		6207211	3					
ANR	6207249	MemberAccess	ctx . oprefix		6207211	0					
ANR	6207250	Identifier	ctx		6207211	0					
ANR	6207251	Identifier	oprefix		6207211	1					
ANR	6207252	ExpressionStatement	"serializeKeySpaceStr ( a , nname , """" , ctx . nprefix )"	1646:1:38709:38757	6207211	8	True				
ANR	6207253	CallExpression	"serializeKeySpaceStr ( a , nname , """" , ctx . nprefix )"		6207211	0					
ANR	6207254	Callee	serializeKeySpaceStr		6207211	0					
ANR	6207255	Identifier	serializeKeySpaceStr		6207211	0					
ANR	6207256	ArgumentList	a		6207211	1					
ANR	6207257	Argument	a		6207211	0					
ANR	6207258	Identifier	a		6207211	0					
ANR	6207259	Argument	nname		6207211	1					
ANR	6207260	Identifier	nname		6207211	0					
ANR	6207261	Argument	""""""		6207211	2					
ANR	6207262	PrimaryExpression	""""""		6207211	0					
ANR	6207263	Argument	ctx . nprefix		6207211	3					
ANR	6207264	MemberAccess	ctx . nprefix		6207211	0					
ANR	6207265	Identifier	ctx		6207211	0					
ANR	6207266	Identifier	nprefix		6207211	1					
ANR	6207267	ExpressionStatement	"sdb_foreach ( a -> sdb_zigns , renameForCB , & ctx )"	1647:1:38760:38805	6207211	9	True				
ANR	6207268	CallExpression	"sdb_foreach ( a -> sdb_zigns , renameForCB , & ctx )"		6207211	0					
ANR	6207269	Callee	sdb_foreach		6207211	0					
ANR	6207270	Identifier	sdb_foreach		6207211	0					
ANR	6207271	ArgumentList	a -> sdb_zigns		6207211	1					
ANR	6207272	Argument	a -> sdb_zigns		6207211	0					
ANR	6207273	PtrMemberAccess	a -> sdb_zigns		6207211	0					
ANR	6207274	Identifier	a		6207211	0					
ANR	6207275	Identifier	sdb_zigns		6207211	1					
ANR	6207276	Argument	renameForCB		6207211	1					
ANR	6207277	Identifier	renameForCB		6207211	0					
ANR	6207278	Argument	& ctx		6207211	2					
ANR	6207279	UnaryOperationExpression	& ctx		6207211	0					
ANR	6207280	UnaryOperator	&		6207211	0					
ANR	6207281	Identifier	ctx		6207211	1					
ANR	6207282	ReturnType	R_API void		6207211	1					
ANR	6207283	Identifier	r_sign_space_rename_for		6207211	2					
ANR	6207284	ParameterList	"RAnal * a , const RSpace * space , const char * oname , const char * nname"		6207211	3					
ANR	6207285	Parameter	RAnal * a	1642:35:38494:38501	6207211	0	True				
ANR	6207286	ParameterType	RAnal *		6207211	0					
ANR	6207287	Identifier	a		6207211	1					
ANR	6207288	Parameter	const RSpace * space	1642:45:38504:38522	6207211	1	True				
ANR	6207289	ParameterType	const RSpace *		6207211	0					
ANR	6207290	Identifier	space		6207211	1					
ANR	6207291	Parameter	const char * oname	1642:66:38525:38541	6207211	2	True				
ANR	6207292	ParameterType	const char *		6207211	0					
ANR	6207293	Identifier	oname		6207211	1					
ANR	6207294	Parameter	const char * nname	1642:85:38544:38560	6207211	3	True				
ANR	6207295	ParameterType	const char *		6207211	0					
ANR	6207296	Identifier	nname		6207211	1					
ANR	6207297	CFGEntryNode	ENTRY		6207211		True				
ANR	6207298	CFGExitNode	EXIT		6207211		True				
ANR	6207299	Symbol	ctx . oprefix		6207211						
ANR	6207300	Symbol	renameForCB		6207211						
ANR	6207301	Symbol	a		6207211						
ANR	6207302	Symbol	oname		6207211						
ANR	6207303	Symbol	ctx . nprefix		6207211						
ANR	6207304	Symbol	ctx		6207211						
ANR	6207305	Symbol	nname		6207211						
ANR	6207306	Symbol	& ctx		6207211						
ANR	6207307	Symbol	* a		6207211						
ANR	6207308	Symbol	space		6207211						
ANR	6207309	Symbol	a -> sdb_zigns		6207211						
ANR	6207310	ClassDef	ctxForeachCB	1650:0:38810:38885							
ANR	6207311	DeclStmt									
ANR	6207312	Decl							RAnal	RAnal *	anal
ANR	6207313	DeclStmt									
ANR	6207314	Decl							RSignForeachCallback	RSignForeachCallback	cb
ANR	6207315	DeclStmt									
ANR	6207316	Decl							void	void *	user
ANR	6207317	Function	foreachCB	1656:0:38889:39353							
ANR	6207318	FunctionDef	"foreachCB (void * user , const char * k , const char * v)"		6207317	0					
ANR	6207319	CompoundStatement		1656:63:38952:39353	6207317	0					
ANR	6207320	IdentifierDeclStatement	struct ctxForeachCB * ctx = ( struct ctxForeachCB * ) user ;	1657:1:38955:39010	6207317	0	True				
ANR	6207321	IdentifierDecl	* ctx = ( struct ctxForeachCB * ) user		6207317	0					
ANR	6207322	IdentifierDeclType	struct ctxForeachCB *		6207317	0					
ANR	6207323	Identifier	ctx		6207317	1					
ANR	6207324	AssignmentExpression	* ctx = ( struct ctxForeachCB * ) user		6207317	2		=			
ANR	6207325	Identifier	ctx		6207317	0					
ANR	6207326	CastExpression	( struct ctxForeachCB * ) user		6207317	1					
ANR	6207327	CastTarget	struct ctxForeachCB *		6207317	0					
ANR	6207328	Identifier	user		6207317	1					
ANR	6207329	IdentifierDeclStatement	RSignItem * it = r_sign_item_new ( ) ;	1658:1:39013:39047	6207317	1	True				
ANR	6207330	IdentifierDecl	* it = r_sign_item_new ( )		6207317	0					
ANR	6207331	IdentifierDeclType	RSignItem *		6207317	0					
ANR	6207332	Identifier	it		6207317	1					
ANR	6207333	AssignmentExpression	* it = r_sign_item_new ( )		6207317	2		=			
ANR	6207334	Identifier	it		6207317	0					
ANR	6207335	CallExpression	r_sign_item_new ( )		6207317	1					
ANR	6207336	Callee	r_sign_item_new		6207317	0					
ANR	6207337	Identifier	r_sign_item_new		6207317	0					
ANR	6207338	ArgumentList			6207317	1					
ANR	6207339	IdentifierDeclStatement	RAnal * a = ctx -> anal ;	1659:1:39050:39070	6207317	2	True				
ANR	6207340	IdentifierDecl	* a = ctx -> anal		6207317	0					
ANR	6207341	IdentifierDeclType	RAnal *		6207317	0					
ANR	6207342	Identifier	a		6207317	1					
ANR	6207343	AssignmentExpression	* a = ctx -> anal		6207317	2		=			
ANR	6207344	Identifier	a		6207317	0					
ANR	6207345	PtrMemberAccess	ctx -> anal		6207317	1					
ANR	6207346	Identifier	ctx		6207317	0					
ANR	6207347	Identifier	anal		6207317	1					
ANR	6207348	IdentifierDeclStatement	int retval = 1 ;	1660:1:39073:39087	6207317	3	True				
ANR	6207349	IdentifierDecl	retval = 1		6207317	0					
ANR	6207350	IdentifierDeclType	int		6207317	0					
ANR	6207351	Identifier	retval		6207317	1					
ANR	6207352	AssignmentExpression	retval = 1		6207317	2		=			
ANR	6207353	Identifier	retval		6207317	0					
ANR	6207354	PrimaryExpression	1		6207317	1					
ANR	6207355	IfStatement	"if ( r_sign_deserialize ( a , it , k , v ) )"		6207317	4					
ANR	6207356	Condition	"r_sign_deserialize ( a , it , k , v )"	1662:5:39095:39126	6207317	0	True				
ANR	6207357	CallExpression	"r_sign_deserialize ( a , it , k , v )"		6207317	0					
ANR	6207358	Callee	r_sign_deserialize		6207317	0					
ANR	6207359	Identifier	r_sign_deserialize		6207317	0					
ANR	6207360	ArgumentList	a		6207317	1					
ANR	6207361	Argument	a		6207317	0					
ANR	6207362	Identifier	a		6207317	0					
ANR	6207363	Argument	it		6207317	1					
ANR	6207364	Identifier	it		6207317	0					
ANR	6207365	Argument	k		6207317	2					
ANR	6207366	Identifier	k		6207317	0					
ANR	6207367	Argument	v		6207317	3					
ANR	6207368	Identifier	v		6207317	0					
ANR	6207369	CompoundStatement		8:2:180:228	6207317	1					
ANR	6207370	IdentifierDeclStatement	RSpace * cur = r_spaces_current ( & a -> zign_spaces ) ;	1663:2:39133:39181	6207317	0	True				
ANR	6207371	IdentifierDecl	* cur = r_spaces_current ( & a -> zign_spaces )		6207317	0					
ANR	6207372	IdentifierDeclType	RSpace *		6207317	0					
ANR	6207373	Identifier	cur		6207317	1					
ANR	6207374	AssignmentExpression	* cur = r_spaces_current ( & a -> zign_spaces )		6207317	2		=			
ANR	6207375	Identifier	cur		6207317	0					
ANR	6207376	CallExpression	r_spaces_current ( & a -> zign_spaces )		6207317	1					
ANR	6207377	Callee	r_spaces_current		6207317	0					
ANR	6207378	Identifier	r_spaces_current		6207317	0					
ANR	6207379	ArgumentList	& a -> zign_spaces		6207317	1					
ANR	6207380	Argument	& a -> zign_spaces		6207317	0					
ANR	6207381	UnaryOperationExpression	& a -> zign_spaces		6207317	0					
ANR	6207382	UnaryOperator	&		6207317	0					
ANR	6207383	PtrMemberAccess	a -> zign_spaces		6207317	1					
ANR	6207384	Identifier	a		6207317	0					
ANR	6207385	Identifier	zign_spaces		6207317	1					
ANR	6207386	IfStatement	if ( ctx -> cb && cur == it -> space )		6207317	1					
ANR	6207387	Condition	ctx -> cb && cur == it -> space	1664:6:39189:39215	6207317	0	True				
ANR	6207388	AndExpression	ctx -> cb && cur == it -> space		6207317	0		&&			
ANR	6207389	PtrMemberAccess	ctx -> cb		6207317	0					
ANR	6207390	Identifier	ctx		6207317	0					
ANR	6207391	Identifier	cb		6207317	1					
ANR	6207392	EqualityExpression	cur == it -> space		6207317	1		==			
ANR	6207393	Identifier	cur		6207317	0					
ANR	6207394	PtrMemberAccess	it -> space		6207317	1					
ANR	6207395	Identifier	it		6207317	0					
ANR	6207396	Identifier	space		6207317	1					
ANR	6207397	CompoundStatement		9:35:265:265	6207317	1					
ANR	6207398	ExpressionStatement	"ctx -> cb ( it , ctx -> user )"	1665:3:39223:39246	6207317	0	True				
ANR	6207399	CallExpression	"ctx -> cb ( it , ctx -> user )"		6207317	0					
ANR	6207400	Callee	ctx -> cb		6207317	0					
ANR	6207401	PtrMemberAccess	ctx -> cb		6207317	0					
ANR	6207402	Identifier	ctx		6207317	0					
ANR	6207403	Identifier	cb		6207317	1					
ANR	6207404	ArgumentList	it		6207317	1					
ANR	6207405	Argument	it		6207317	0					
ANR	6207406	Identifier	it		6207317	0					
ANR	6207407	Argument	ctx -> user		6207317	1					
ANR	6207408	PtrMemberAccess	ctx -> user		6207317	0					
ANR	6207409	Identifier	ctx		6207317	0					
ANR	6207410	Identifier	user		6207317	1					
ANR	6207411	ElseStatement	else		6207317	0					
ANR	6207412	CompoundStatement		12:8:307:307	6207317	0					
ANR	6207413	ExpressionStatement	"eprintf ( ""error: cannot deserialize zign\\n"" )"	1668:2:39264:39308	6207317	0	True				
ANR	6207414	CallExpression	"eprintf ( ""error: cannot deserialize zign\\n"" )"		6207317	0					
ANR	6207415	Callee	eprintf		6207317	0					
ANR	6207416	Identifier	eprintf		6207317	0					
ANR	6207417	ArgumentList	"""error: cannot deserialize zign\\n"""		6207317	1					
ANR	6207418	Argument	"""error: cannot deserialize zign\\n"""		6207317	0					
ANR	6207419	PrimaryExpression	"""error: cannot deserialize zign\\n"""		6207317	0					
ANR	6207420	ExpressionStatement	r_sign_item_free ( it )	1670:1:39314:39335	6207317	5	True				
ANR	6207421	CallExpression	r_sign_item_free ( it )		6207317	0					
ANR	6207422	Callee	r_sign_item_free		6207317	0					
ANR	6207423	Identifier	r_sign_item_free		6207317	0					
ANR	6207424	ArgumentList	it		6207317	1					
ANR	6207425	Argument	it		6207317	0					
ANR	6207426	Identifier	it		6207317	0					
ANR	6207427	ReturnStatement	return retval ;	1671:1:39338:39351	6207317	6	True				
ANR	6207428	Identifier	retval		6207317	0					
ANR	6207429	ReturnType	static int		6207317	1					
ANR	6207430	Identifier	foreachCB		6207317	2					
ANR	6207431	ParameterList	"void * user , const char * k , const char * v"		6207317	3					
ANR	6207432	Parameter	void * user	1656:21:38910:38919	6207317	0	True				
ANR	6207433	ParameterType	void *		6207317	0					
ANR	6207434	Identifier	user		6207317	1					
ANR	6207435	Parameter	const char * k	1656:33:38922:38934	6207317	1	True				
ANR	6207436	ParameterType	const char *		6207317	0					
ANR	6207437	Identifier	k		6207317	1					
ANR	6207438	Parameter	const char * v	1656:48:38937:38949	6207317	2	True				
ANR	6207439	ParameterType	const char *		6207317	0					
ANR	6207440	Identifier	v		6207317	1					
ANR	6207441	CFGEntryNode	ENTRY		6207317		True				
ANR	6207442	CFGExitNode	EXIT		6207317		True				
ANR	6207443	Symbol	r_sign_item_new		6207317						
ANR	6207444	Symbol	a		6207317						
ANR	6207445	Symbol	cur		6207317						
ANR	6207446	Symbol	ctx		6207317						
ANR	6207447	Symbol	ctx -> anal		6207317						
ANR	6207448	Symbol	ctx -> cb		6207317						
ANR	6207449	Symbol	k		6207317						
ANR	6207450	Symbol	it		6207317						
ANR	6207451	Symbol	* ctx		6207317						
ANR	6207452	Symbol	retval		6207317						
ANR	6207453	Symbol	& a -> zign_spaces		6207317						
ANR	6207454	Symbol	r_sign_deserialize		6207317						
ANR	6207455	Symbol	it -> space		6207317						
ANR	6207456	Symbol	ctx -> user		6207317						
ANR	6207457	Symbol	* it		6207317						
ANR	6207458	Symbol	v		6207317						
ANR	6207459	Symbol	user		6207317						
ANR	6207460	Symbol	r_spaces_current		6207317						
ANR	6207461	Function	r_sign_foreach	1674:0:39356:39568							
ANR	6207462	FunctionDef	"r_sign_foreach (RAnal * a , RSignForeachCallback cb , void * user)"		6207461	0					
ANR	6207463	CompoundStatement		1674:73:39429:39568	6207461	0					
ANR	6207464	ExpressionStatement	"r_return_val_if_fail ( a && cb , false )"	1675:1:39432:39469	6207461	0	True				
ANR	6207465	CallExpression	"r_return_val_if_fail ( a && cb , false )"		6207461	0					
ANR	6207466	Callee	r_return_val_if_fail		6207461	0					
ANR	6207467	Identifier	r_return_val_if_fail		6207461	0					
ANR	6207468	ArgumentList	a && cb		6207461	1					
ANR	6207469	Argument	a && cb		6207461	0					
ANR	6207470	AndExpression	a && cb		6207461	0		&&			
ANR	6207471	Identifier	a		6207461	0					
ANR	6207472	Identifier	cb		6207461	1					
ANR	6207473	Argument	false		6207461	1					
ANR	6207474	Identifier	false		6207461	0					
ANR	6207475	IdentifierDeclStatement	"struct ctxForeachCB ctx = { a , cb , user } ;"	1676:1:39472:39513	6207461	1	True				
ANR	6207476	IdentifierDecl	"ctx = { a , cb , user }"		6207461	0					
ANR	6207477	IdentifierDeclType	struct ctxForeachCB		6207461	0					
ANR	6207478	Identifier	ctx		6207461	1					
ANR	6207479	AssignmentExpression	"ctx = { a , cb , user }"		6207461	2		=			
ANR	6207480	Identifier	ctx		6207461	0					
ANR	6207481	InitializerList	a		6207461	1					
ANR	6207482	Identifier	a		6207461	0					
ANR	6207483	Identifier	cb		6207461	1					
ANR	6207484	Identifier	user		6207461	2					
ANR	6207485	ReturnStatement	"return sdb_foreach ( a -> sdb_zigns , foreachCB , & ctx ) ;"	1677:1:39516:39566	6207461	2	True				
ANR	6207486	CallExpression	"sdb_foreach ( a -> sdb_zigns , foreachCB , & ctx )"		6207461	0					
ANR	6207487	Callee	sdb_foreach		6207461	0					
ANR	6207488	Identifier	sdb_foreach		6207461	0					
ANR	6207489	ArgumentList	a -> sdb_zigns		6207461	1					
ANR	6207490	Argument	a -> sdb_zigns		6207461	0					
ANR	6207491	PtrMemberAccess	a -> sdb_zigns		6207461	0					
ANR	6207492	Identifier	a		6207461	0					
ANR	6207493	Identifier	sdb_zigns		6207461	1					
ANR	6207494	Argument	foreachCB		6207461	1					
ANR	6207495	Identifier	foreachCB		6207461	0					
ANR	6207496	Argument	& ctx		6207461	2					
ANR	6207497	UnaryOperationExpression	& ctx		6207461	0					
ANR	6207498	UnaryOperator	&		6207461	0					
ANR	6207499	Identifier	ctx		6207461	1					
ANR	6207500	ReturnType	R_API bool		6207461	1					
ANR	6207501	Identifier	r_sign_foreach		6207461	2					
ANR	6207502	ParameterList	"RAnal * a , RSignForeachCallback cb , void * user"		6207461	3					
ANR	6207503	Parameter	RAnal * a	1674:26:39382:39389	6207461	0	True				
ANR	6207504	ParameterType	RAnal *		6207461	0					
ANR	6207505	Identifier	a		6207461	1					
ANR	6207506	Parameter	RSignForeachCallback cb	1674:36:39392:39414	6207461	1	True				
ANR	6207507	ParameterType	RSignForeachCallback		6207461	0					
ANR	6207508	Identifier	cb		6207461	1					
ANR	6207509	Parameter	void * user	1674:61:39417:39426	6207461	2	True				
ANR	6207510	ParameterType	void *		6207461	0					
ANR	6207511	Identifier	user		6207461	1					
ANR	6207512	CFGEntryNode	ENTRY		6207461		True				
ANR	6207513	CFGExitNode	EXIT		6207461		True				
ANR	6207514	Symbol	a		6207461						
ANR	6207515	Symbol	foreachCB		6207461						
ANR	6207516	Symbol	ctx		6207461						
ANR	6207517	Symbol	sdb_foreach		6207461						
ANR	6207518	Symbol	false		6207461						
ANR	6207519	Symbol	& ctx		6207461						
ANR	6207520	Symbol	* a		6207461						
ANR	6207521	Symbol	user		6207461						
ANR	6207522	Symbol	cb		6207461						
ANR	6207523	Symbol	a -> sdb_zigns		6207461						
ANR	6207524	Function	r_sign_search_new	1680:0:39571:39790							
ANR	6207525	FunctionDef	r_sign_search_new ()		6207524	0					
ANR	6207526	CompoundStatement		1680:39:39610:39790	6207524	0					
ANR	6207527	IdentifierDeclStatement	RSignSearch * ret = R_NEW0 ( RSignSearch ) ;	1681:1:39613:39652	6207524	0	True				
ANR	6207528	IdentifierDecl	* ret = R_NEW0 ( RSignSearch )		6207524	0					
ANR	6207529	IdentifierDeclType	RSignSearch *		6207524	0					
ANR	6207530	Identifier	ret		6207524	1					
ANR	6207531	AssignmentExpression	* ret = R_NEW0 ( RSignSearch )		6207524	2		=			
ANR	6207532	Identifier	ret		6207524	0					
ANR	6207533	CallExpression	R_NEW0 ( RSignSearch )		6207524	1					
ANR	6207534	Callee	R_NEW0		6207524	0					
ANR	6207535	Identifier	R_NEW0		6207524	0					
ANR	6207536	ArgumentList	RSignSearch		6207524	1					
ANR	6207537	Argument	RSignSearch		6207524	0					
ANR	6207538	Identifier	RSignSearch		6207524	0					
ANR	6207539	IfStatement	if ( ret )		6207524	1					
ANR	6207540	Condition	ret	1682:5:39659:39661	6207524	0	True				
ANR	6207541	Identifier	ret		6207524	0					
ANR	6207542	CompoundStatement		3:10:53:53	6207524	1					
ANR	6207543	ExpressionStatement	ret -> search = r_search_new ( R_SEARCH_KEYWORD )	1683:2:39668:39713	6207524	0	True				
ANR	6207544	AssignmentExpression	ret -> search = r_search_new ( R_SEARCH_KEYWORD )		6207524	0		=			
ANR	6207545	PtrMemberAccess	ret -> search		6207524	0					
ANR	6207546	Identifier	ret		6207524	0					
ANR	6207547	Identifier	search		6207524	1					
ANR	6207548	CallExpression	r_search_new ( R_SEARCH_KEYWORD )		6207524	1					
ANR	6207549	Callee	r_search_new		6207524	0					
ANR	6207550	Identifier	r_search_new		6207524	0					
ANR	6207551	ArgumentList	R_SEARCH_KEYWORD		6207524	1					
ANR	6207552	Argument	R_SEARCH_KEYWORD		6207524	0					
ANR	6207553	Identifier	R_SEARCH_KEYWORD		6207524	0					
ANR	6207554	ExpressionStatement	ret -> items = r_list_newf ( ( RListFree ) r_sign_item_free )	1684:2:39717:39772	6207524	1	True				
ANR	6207555	AssignmentExpression	ret -> items = r_list_newf ( ( RListFree ) r_sign_item_free )		6207524	0		=			
ANR	6207556	PtrMemberAccess	ret -> items		6207524	0					
ANR	6207557	Identifier	ret		6207524	0					
ANR	6207558	Identifier	items		6207524	1					
ANR	6207559	CallExpression	r_list_newf ( ( RListFree ) r_sign_item_free )		6207524	1					
ANR	6207560	Callee	r_list_newf		6207524	0					
ANR	6207561	Identifier	r_list_newf		6207524	0					
ANR	6207562	ArgumentList	( RListFree ) r_sign_item_free		6207524	1					
ANR	6207563	Argument	( RListFree ) r_sign_item_free		6207524	0					
ANR	6207564	CastExpression	( RListFree ) r_sign_item_free		6207524	0					
ANR	6207565	CastTarget	RListFree		6207524	0					
ANR	6207566	Identifier	r_sign_item_free		6207524	1					
ANR	6207567	ReturnStatement	return ret ;	1686:1:39778:39788	6207524	2	True				
ANR	6207568	Identifier	ret		6207524	0					
ANR	6207569	ReturnType	R_API RSignSearch *		6207524	1					
ANR	6207570	Identifier	r_sign_search_new		6207524	2					
ANR	6207571	ParameterList			6207524	3					
ANR	6207572	CFGEntryNode	ENTRY		6207524		True				
ANR	6207573	CFGExitNode	EXIT		6207524		True				
ANR	6207574	Symbol	ret		6207524						
ANR	6207575	Symbol	r_search_new		6207524						
ANR	6207576	Symbol	R_NEW0		6207524						
ANR	6207577	Symbol	r_list_newf		6207524						
ANR	6207578	Symbol	ret -> search		6207524						
ANR	6207579	Symbol	r_sign_item_free		6207524						
ANR	6207580	Symbol	* ret		6207524						
ANR	6207581	Symbol	ret -> items		6207524						
ANR	6207582	Symbol	R_SEARCH_KEYWORD		6207524						
ANR	6207583	Symbol	RSignSearch		6207524						
ANR	6207584	Function	r_sign_search_free	1689:0:39793:39934							
ANR	6207585	FunctionDef	r_sign_search_free (RSignSearch * ss)		6207584	0					
ANR	6207586	CompoundStatement		1689:47:39840:39934	6207584	0					
ANR	6207587	IfStatement	if ( ! ss )		6207584	0					
ANR	6207588	Condition	! ss	1690:5:39847:39849	6207584	0	True				
ANR	6207589	UnaryOperationExpression	! ss		6207584	0					
ANR	6207590	UnaryOperator	!		6207584	0					
ANR	6207591	Identifier	ss		6207584	1					
ANR	6207592	CompoundStatement		2:10:11:11	6207584	1					
ANR	6207593	ReturnStatement	return ;	1691:2:39856:39862	6207584	0	True				
ANR	6207594	ExpressionStatement	r_search_free ( ss -> search )	1693:1:39868:39894	6207584	1	True				
ANR	6207595	CallExpression	r_search_free ( ss -> search )		6207584	0					
ANR	6207596	Callee	r_search_free		6207584	0					
ANR	6207597	Identifier	r_search_free		6207584	0					
ANR	6207598	ArgumentList	ss -> search		6207584	1					
ANR	6207599	Argument	ss -> search		6207584	0					
ANR	6207600	PtrMemberAccess	ss -> search		6207584	0					
ANR	6207601	Identifier	ss		6207584	0					
ANR	6207602	Identifier	search		6207584	1					
ANR	6207603	ExpressionStatement	r_list_free ( ss -> items )	1694:1:39897:39920	6207584	2	True				
ANR	6207604	CallExpression	r_list_free ( ss -> items )		6207584	0					
ANR	6207605	Callee	r_list_free		6207584	0					
ANR	6207606	Identifier	r_list_free		6207584	0					
ANR	6207607	ArgumentList	ss -> items		6207584	1					
ANR	6207608	Argument	ss -> items		6207584	0					
ANR	6207609	PtrMemberAccess	ss -> items		6207584	0					
ANR	6207610	Identifier	ss		6207584	0					
ANR	6207611	Identifier	items		6207584	1					
ANR	6207612	ExpressionStatement	free ( ss )	1695:1:39923:39932	6207584	3	True				
ANR	6207613	CallExpression	free ( ss )		6207584	0					
ANR	6207614	Callee	free		6207584	0					
ANR	6207615	Identifier	free		6207584	0					
ANR	6207616	ArgumentList	ss		6207584	1					
ANR	6207617	Argument	ss		6207584	0					
ANR	6207618	Identifier	ss		6207584	0					
ANR	6207619	ReturnType	R_API void		6207584	1					
ANR	6207620	Identifier	r_sign_search_free		6207584	2					
ANR	6207621	ParameterList	RSignSearch * ss		6207584	3					
ANR	6207622	Parameter	RSignSearch * ss	1689:30:39823:39837	6207584	0	True				
ANR	6207623	ParameterType	RSignSearch *		6207584	0					
ANR	6207624	Identifier	ss		6207584	1					
ANR	6207625	CFGEntryNode	ENTRY		6207584		True				
ANR	6207626	CFGExitNode	EXIT		6207584		True				
ANR	6207627	Symbol	ss		6207584						
ANR	6207628	Symbol	* ss		6207584						
ANR	6207629	Symbol	ss -> items		6207584						
ANR	6207630	Symbol	ss -> search		6207584						
ANR	6207631	Function	searchHitCB	1698:0:39937:40118							
ANR	6207632	FunctionDef	"searchHitCB (RSearchKeyword * kw , void * user , ut64 addr)"		6207631	0					
ANR	6207633	CompoundStatement		1698:66:40003:40118	6207631	0					
ANR	6207634	IdentifierDeclStatement	RSignSearch * ss = ( RSignSearch * ) user ;	1699:1:40006:40044	6207631	0	True				
ANR	6207635	IdentifierDecl	* ss = ( RSignSearch * ) user		6207631	0					
ANR	6207636	IdentifierDeclType	RSignSearch *		6207631	0					
ANR	6207637	Identifier	ss		6207631	1					
ANR	6207638	AssignmentExpression	* ss = ( RSignSearch * ) user		6207631	2		=			
ANR	6207639	Identifier	ss		6207631	0					
ANR	6207640	CastExpression	( RSignSearch * ) user		6207631	1					
ANR	6207641	CastTarget	RSignSearch *		6207631	0					
ANR	6207642	Identifier	user		6207631	1					
ANR	6207643	ReturnStatement	"return ss -> cb ? ss -> cb ( ( RSignItem * ) kw -> data , kw , addr , ss -> user ) : 1 ;"	1700:1:40047:40116	6207631	1	True				
ANR	6207644	ConditionalExpression	"ss -> cb ? ss -> cb ( ( RSignItem * ) kw -> data , kw , addr , ss -> user ) : 1"		6207631	0					
ANR	6207645	Condition	ss -> cb		6207631	0					
ANR	6207646	PtrMemberAccess	ss -> cb		6207631	0					
ANR	6207647	Identifier	ss		6207631	0					
ANR	6207648	Identifier	cb		6207631	1					
ANR	6207649	CallExpression	"ss -> cb ( ( RSignItem * ) kw -> data , kw , addr , ss -> user )"		6207631	1					
ANR	6207650	Callee	ss -> cb		6207631	0					
ANR	6207651	PtrMemberAccess	ss -> cb		6207631	0					
ANR	6207652	Identifier	ss		6207631	0					
ANR	6207653	Identifier	cb		6207631	1					
ANR	6207654	ArgumentList	( RSignItem * ) kw -> data		6207631	1					
ANR	6207655	Argument	( RSignItem * ) kw -> data		6207631	0					
ANR	6207656	CastExpression	( RSignItem * ) kw -> data		6207631	0					
ANR	6207657	CastTarget	RSignItem *		6207631	0					
ANR	6207658	PtrMemberAccess	kw -> data		6207631	1					
ANR	6207659	Identifier	kw		6207631	0					
ANR	6207660	Identifier	data		6207631	1					
ANR	6207661	Argument	kw		6207631	1					
ANR	6207662	Identifier	kw		6207631	0					
ANR	6207663	Argument	addr		6207631	2					
ANR	6207664	Identifier	addr		6207631	0					
ANR	6207665	Argument	ss -> user		6207631	3					
ANR	6207666	PtrMemberAccess	ss -> user		6207631	0					
ANR	6207667	Identifier	ss		6207631	0					
ANR	6207668	Identifier	user		6207631	1					
ANR	6207669	PrimaryExpression	1		6207631	2					
ANR	6207670	ReturnType	static int		6207631	1					
ANR	6207671	Identifier	searchHitCB		6207631	2					
ANR	6207672	ParameterList	"RSearchKeyword * kw , void * user , ut64 addr"		6207631	3					
ANR	6207673	Parameter	RSearchKeyword * kw	1698:23:39960:39977	6207631	0	True				
ANR	6207674	ParameterType	RSearchKeyword *		6207631	0					
ANR	6207675	Identifier	kw		6207631	1					
ANR	6207676	Parameter	void * user	1698:43:39980:39989	6207631	1	True				
ANR	6207677	ParameterType	void *		6207631	0					
ANR	6207678	Identifier	user		6207631	1					
ANR	6207679	Parameter	ut64 addr	1698:55:39992:40000	6207631	2	True				
ANR	6207680	ParameterType	ut64		6207631	0					
ANR	6207681	Identifier	addr		6207631	1					
ANR	6207682	CFGEntryNode	ENTRY		6207631		True				
ANR	6207683	CFGExitNode	EXIT		6207631		True				
ANR	6207684	Symbol	ss		6207631						
ANR	6207685	Symbol	* kw		6207631						
ANR	6207686	Symbol	* ss		6207631						
ANR	6207687	Symbol	ss -> user		6207631						
ANR	6207688	Symbol	ss -> cb		6207631						
ANR	6207689	Symbol	kw -> data		6207631						
ANR	6207690	Symbol	kw		6207631						
ANR	6207691	Symbol	addr		6207631						
ANR	6207692	Symbol	user		6207631						
ANR	6207693	ClassDef	ctxAddSearchKwCB	1703:0:40121:40177							
ANR	6207694	DeclStmt									
ANR	6207695	Decl							RSignSearch	RSignSearch *	ss
ANR	6207696	DeclStmt									
ANR	6207697	Decl							int	int	minsz
ANR	6207698	Function	addSearchKwCB	1708:0:40181:40858							
ANR	6207699	FunctionDef	"addSearchKwCB (RSignItem * it , void * user)"		6207698	0					
ANR	6207700	CompoundStatement		1708:52:40233:40858	6207698	0					
ANR	6207701	IdentifierDeclStatement	struct ctxAddSearchKwCB * ctx = ( struct ctxAddSearchKwCB * ) user ;	1709:1:40236:40299	6207698	0	True				
ANR	6207702	IdentifierDecl	* ctx = ( struct ctxAddSearchKwCB * ) user		6207698	0					
ANR	6207703	IdentifierDeclType	struct ctxAddSearchKwCB *		6207698	0					
ANR	6207704	Identifier	ctx		6207698	1					
ANR	6207705	AssignmentExpression	* ctx = ( struct ctxAddSearchKwCB * ) user		6207698	2		=			
ANR	6207706	Identifier	ctx		6207698	0					
ANR	6207707	CastExpression	( struct ctxAddSearchKwCB * ) user		6207698	1					
ANR	6207708	CastTarget	struct ctxAddSearchKwCB *		6207698	0					
ANR	6207709	Identifier	user		6207698	1					
ANR	6207710	IdentifierDeclStatement	RSignSearch * ss = ctx -> ss ;	1710:1:40302:40327	6207698	1	True				
ANR	6207711	IdentifierDecl	* ss = ctx -> ss		6207698	0					
ANR	6207712	IdentifierDeclType	RSignSearch *		6207698	0					
ANR	6207713	Identifier	ss		6207698	1					
ANR	6207714	AssignmentExpression	* ss = ctx -> ss		6207698	2		=			
ANR	6207715	Identifier	ss		6207698	0					
ANR	6207716	PtrMemberAccess	ctx -> ss		6207698	1					
ANR	6207717	Identifier	ctx		6207698	0					
ANR	6207718	Identifier	ss		6207698	1					
ANR	6207719	IdentifierDeclStatement	RSignBytes * bytes = it -> bytes ;	1711:1:40330:40359	6207698	2	True				
ANR	6207720	IdentifierDecl	* bytes = it -> bytes		6207698	0					
ANR	6207721	IdentifierDeclType	RSignBytes *		6207698	0					
ANR	6207722	Identifier	bytes		6207698	1					
ANR	6207723	AssignmentExpression	* bytes = it -> bytes		6207698	2		=			
ANR	6207724	Identifier	bytes		6207698	0					
ANR	6207725	PtrMemberAccess	it -> bytes		6207698	1					
ANR	6207726	Identifier	it		6207698	0					
ANR	6207727	Identifier	bytes		6207698	1					
ANR	6207728	IdentifierDeclStatement	RSearchKeyword * kw = NULL ;	1712:1:40362:40387	6207698	3	True				
ANR	6207729	IdentifierDecl	* kw = NULL		6207698	0					
ANR	6207730	IdentifierDeclType	RSearchKeyword *		6207698	0					
ANR	6207731	Identifier	kw		6207698	1					
ANR	6207732	AssignmentExpression	* kw = NULL		6207698	2		=			
ANR	6207733	Identifier	NULL		6207698	0					
ANR	6207734	Identifier	NULL		6207698	1					
ANR	6207735	IfStatement	if ( ! bytes )		6207698	4					
ANR	6207736	Condition	! bytes	1714:5:40395:40400	6207698	0	True				
ANR	6207737	UnaryOperationExpression	! bytes		6207698	0					
ANR	6207738	UnaryOperator	!		6207698	0					
ANR	6207739	Identifier	bytes		6207698	1					
ANR	6207740	CompoundStatement		7:13:169:169	6207698	1					
ANR	6207741	ExpressionStatement	"eprintf ( ""Cannot find bytes for this signature: %s\\n"" , it -> name )"	1715:2:40407:40471	6207698	0	True				
ANR	6207742	CallExpression	"eprintf ( ""Cannot find bytes for this signature: %s\\n"" , it -> name )"		6207698	0					
ANR	6207743	Callee	eprintf		6207698	0					
ANR	6207744	Identifier	eprintf		6207698	0					
ANR	6207745	ArgumentList	"""Cannot find bytes for this signature: %s\\n"""		6207698	1					
ANR	6207746	Argument	"""Cannot find bytes for this signature: %s\\n"""		6207698	0					
ANR	6207747	PrimaryExpression	"""Cannot find bytes for this signature: %s\\n"""		6207698	0					
ANR	6207748	Argument	it -> name		6207698	1					
ANR	6207749	PtrMemberAccess	it -> name		6207698	0					
ANR	6207750	Identifier	it		6207698	0					
ANR	6207751	Identifier	name		6207698	1					
ANR	6207752	ReturnStatement	return 1 ;	1716:2:40475:40483	6207698	1	True				
ANR	6207753	PrimaryExpression	1		6207698	0					
ANR	6207754	IfStatement	if ( ctx -> minsz && bytes -> size < ctx -> minsz )		6207698	5					
ANR	6207755	Condition	ctx -> minsz && bytes -> size < ctx -> minsz	1719:5:40494:40531	6207698	0	True				
ANR	6207756	AndExpression	ctx -> minsz && bytes -> size < ctx -> minsz		6207698	0		&&			
ANR	6207757	PtrMemberAccess	ctx -> minsz		6207698	0					
ANR	6207758	Identifier	ctx		6207698	0					
ANR	6207759	Identifier	minsz		6207698	1					
ANR	6207760	RelationalExpression	bytes -> size < ctx -> minsz		6207698	1		<			
ANR	6207761	PtrMemberAccess	bytes -> size		6207698	0					
ANR	6207762	Identifier	bytes		6207698	0					
ANR	6207763	Identifier	size		6207698	1					
ANR	6207764	PtrMemberAccess	ctx -> minsz		6207698	1					
ANR	6207765	Identifier	ctx		6207698	0					
ANR	6207766	Identifier	minsz		6207698	1					
ANR	6207767	CompoundStatement		12:45:300:300	6207698	1					
ANR	6207768	ReturnStatement	return 1 ;	1720:2:40538:40546	6207698	0	True				
ANR	6207769	PrimaryExpression	1		6207698	0					
ANR	6207770	IdentifierDeclStatement	RSignItem * it2 = r_sign_item_dup ( it ) ;	1722:1:40552:40589	6207698	6	True				
ANR	6207771	IdentifierDecl	* it2 = r_sign_item_dup ( it )		6207698	0					
ANR	6207772	IdentifierDeclType	RSignItem *		6207698	0					
ANR	6207773	Identifier	it2		6207698	1					
ANR	6207774	AssignmentExpression	* it2 = r_sign_item_dup ( it )		6207698	2		=			
ANR	6207775	Identifier	it2		6207698	0					
ANR	6207776	CallExpression	r_sign_item_dup ( it )		6207698	1					
ANR	6207777	Callee	r_sign_item_dup		6207698	0					
ANR	6207778	Identifier	r_sign_item_dup		6207698	0					
ANR	6207779	ArgumentList	it		6207698	1					
ANR	6207780	Argument	it		6207698	0					
ANR	6207781	Identifier	it		6207698	0					
ANR	6207782	IfStatement	if ( it2 )		6207698	7					
ANR	6207783	Condition	it2	1723:5:40596:40598	6207698	0	True				
ANR	6207784	Identifier	it2		6207698	0					
ANR	6207785	CompoundStatement		16:10:367:367	6207698	1					
ANR	6207786	ExpressionStatement	"r_list_append ( ss -> items , it2 )"	1724:2:40605:40635	6207698	0	True				
ANR	6207787	CallExpression	"r_list_append ( ss -> items , it2 )"		6207698	0					
ANR	6207788	Callee	r_list_append		6207698	0					
ANR	6207789	Identifier	r_list_append		6207698	0					
ANR	6207790	ArgumentList	ss -> items		6207698	1					
ANR	6207791	Argument	ss -> items		6207698	0					
ANR	6207792	PtrMemberAccess	ss -> items		6207698	0					
ANR	6207793	Identifier	ss		6207698	0					
ANR	6207794	Identifier	items		6207698	1					
ANR	6207795	Argument	it2		6207698	1					
ANR	6207796	Identifier	it2		6207698	0					
ANR	6207797	ExpressionStatement	"kw = r_search_keyword_new ( bytes -> bytes , bytes -> size , bytes -> mask , bytes -> size , ( const char * ) it2 )"	1726:2:40707:40806	6207698	1	True				
ANR	6207798	AssignmentExpression	"kw = r_search_keyword_new ( bytes -> bytes , bytes -> size , bytes -> mask , bytes -> size , ( const char * ) it2 )"		6207698	0		=			
ANR	6207799	Identifier	kw		6207698	0					
ANR	6207800	CallExpression	"r_search_keyword_new ( bytes -> bytes , bytes -> size , bytes -> mask , bytes -> size , ( const char * ) it2 )"		6207698	1					
ANR	6207801	Callee	r_search_keyword_new		6207698	0					
ANR	6207802	Identifier	r_search_keyword_new		6207698	0					
ANR	6207803	ArgumentList	bytes -> bytes		6207698	1					
ANR	6207804	Argument	bytes -> bytes		6207698	0					
ANR	6207805	PtrMemberAccess	bytes -> bytes		6207698	0					
ANR	6207806	Identifier	bytes		6207698	0					
ANR	6207807	Identifier	bytes		6207698	1					
ANR	6207808	Argument	bytes -> size		6207698	1					
ANR	6207809	PtrMemberAccess	bytes -> size		6207698	0					
ANR	6207810	Identifier	bytes		6207698	0					
ANR	6207811	Identifier	size		6207698	1					
ANR	6207812	Argument	bytes -> mask		6207698	2					
ANR	6207813	PtrMemberAccess	bytes -> mask		6207698	0					
ANR	6207814	Identifier	bytes		6207698	0					
ANR	6207815	Identifier	mask		6207698	1					
ANR	6207816	Argument	bytes -> size		6207698	3					
ANR	6207817	PtrMemberAccess	bytes -> size		6207698	0					
ANR	6207818	Identifier	bytes		6207698	0					
ANR	6207819	Identifier	size		6207698	1					
ANR	6207820	Argument	( const char * ) it2		6207698	4					
ANR	6207821	CastExpression	( const char * ) it2		6207698	0					
ANR	6207822	CastTarget	const char *		6207698	0					
ANR	6207823	Identifier	it2		6207698	1					
ANR	6207824	ExpressionStatement	"r_search_kw_add ( ss -> search , kw )"	1727:2:40810:40842	6207698	2	True				
ANR	6207825	CallExpression	"r_search_kw_add ( ss -> search , kw )"		6207698	0					
ANR	6207826	Callee	r_search_kw_add		6207698	0					
ANR	6207827	Identifier	r_search_kw_add		6207698	0					
ANR	6207828	ArgumentList	ss -> search		6207698	1					
ANR	6207829	Argument	ss -> search		6207698	0					
ANR	6207830	PtrMemberAccess	ss -> search		6207698	0					
ANR	6207831	Identifier	ss		6207698	0					
ANR	6207832	Identifier	search		6207698	1					
ANR	6207833	Argument	kw		6207698	1					
ANR	6207834	Identifier	kw		6207698	0					
ANR	6207835	ReturnStatement	return 1 ;	1729:1:40848:40856	6207698	8	True				
ANR	6207836	PrimaryExpression	1		6207698	0					
ANR	6207837	ReturnType	static int		6207698	1					
ANR	6207838	Identifier	addSearchKwCB		6207698	2					
ANR	6207839	ParameterList	"RSignItem * it , void * user"		6207698	3					
ANR	6207840	Parameter	RSignItem * it	1708:25:40206:40218	6207698	0	True				
ANR	6207841	ParameterType	RSignItem *		6207698	0					
ANR	6207842	Identifier	it		6207698	1					
ANR	6207843	Parameter	void * user	1708:40:40221:40230	6207698	1	True				
ANR	6207844	ParameterType	void *		6207698	0					
ANR	6207845	Identifier	user		6207698	1					
ANR	6207846	CFGEntryNode	ENTRY		6207698		True				
ANR	6207847	CFGExitNode	EXIT		6207698		True				
ANR	6207848	Symbol	ss		6207698						
ANR	6207849	Symbol	bytes -> size		6207698						
ANR	6207850	Symbol	r_sign_item_dup		6207698						
ANR	6207851	Symbol	it -> bytes		6207698						
ANR	6207852	Symbol	NULL		6207698						
ANR	6207853	Symbol	* ss		6207698						
ANR	6207854	Symbol	ctx		6207698						
ANR	6207855	Symbol	it2		6207698						
ANR	6207856	Symbol	it -> name		6207698						
ANR	6207857	Symbol	ss -> items		6207698						
ANR	6207858	Symbol	ctx -> ss		6207698						
ANR	6207859	Symbol	it		6207698						
ANR	6207860	Symbol	* bytes		6207698						
ANR	6207861	Symbol	kw		6207698						
ANR	6207862	Symbol	* ctx		6207698						
ANR	6207863	Symbol	ctx -> minsz		6207698						
ANR	6207864	Symbol	* it		6207698						
ANR	6207865	Symbol	bytes		6207698						
ANR	6207866	Symbol	bytes -> bytes		6207698						
ANR	6207867	Symbol	user		6207698						
ANR	6207868	Symbol	r_search_keyword_new		6207698						
ANR	6207869	Symbol	bytes -> mask		6207698						
ANR	6207870	Symbol	ss -> search		6207698						
ANR	6207871	Function	r_sign_search_init	1732:0:40861:41281							
ANR	6207872	FunctionDef	"r_sign_search_init (RAnal * a , RSignSearch * ss , int minsz , RSignSearchCallback cb , void * user)"		6207871	0					
ANR	6207873	CompoundStatement		1732:104:40965:41281	6207871	0					
ANR	6207874	IdentifierDeclStatement	"struct ctxAddSearchKwCB ctx = { ss , minsz } ;"	1733:1:40968:41011	6207871	0	True				
ANR	6207875	IdentifierDecl	"ctx = { ss , minsz }"		6207871	0					
ANR	6207876	IdentifierDeclType	struct ctxAddSearchKwCB		6207871	0					
ANR	6207877	Identifier	ctx		6207871	1					
ANR	6207878	AssignmentExpression	"ctx = { ss , minsz }"		6207871	2		=			
ANR	6207879	Identifier	ctx		6207871	0					
ANR	6207880	InitializerList	ss		6207871	1					
ANR	6207881	Identifier	ss		6207871	0					
ANR	6207882	Identifier	minsz		6207871	1					
ANR	6207883	ExpressionStatement	r_return_if_fail ( a && ss && cb )	1734:1:41014:41046	6207871	1	True				
ANR	6207884	CallExpression	r_return_if_fail ( a && ss && cb )		6207871	0					
ANR	6207885	Callee	r_return_if_fail		6207871	0					
ANR	6207886	Identifier	r_return_if_fail		6207871	0					
ANR	6207887	ArgumentList	a && ss && cb		6207871	1					
ANR	6207888	Argument	a && ss && cb		6207871	0					
ANR	6207889	AndExpression	a && ss && cb		6207871	0		&&			
ANR	6207890	Identifier	a		6207871	0					
ANR	6207891	AndExpression	ss && cb		6207871	1		&&			
ANR	6207892	Identifier	ss		6207871	0					
ANR	6207893	Identifier	cb		6207871	1					
ANR	6207894	ExpressionStatement	ss -> cb = cb	1735:1:41049:41060	6207871	2	True				
ANR	6207895	AssignmentExpression	ss -> cb = cb		6207871	0		=			
ANR	6207896	PtrMemberAccess	ss -> cb		6207871	0					
ANR	6207897	Identifier	ss		6207871	0					
ANR	6207898	Identifier	cb		6207871	1					
ANR	6207899	Identifier	cb		6207871	1					
ANR	6207900	ExpressionStatement	ss -> user = user	1736:1:41063:41078	6207871	3	True				
ANR	6207901	AssignmentExpression	ss -> user = user		6207871	0		=			
ANR	6207902	PtrMemberAccess	ss -> user		6207871	0					
ANR	6207903	Identifier	ss		6207871	0					
ANR	6207904	Identifier	user		6207871	1					
ANR	6207905	Identifier	user		6207871	1					
ANR	6207906	ExpressionStatement	r_list_purge ( ss -> items )	1737:1:41081:41105	6207871	4	True				
ANR	6207907	CallExpression	r_list_purge ( ss -> items )		6207871	0					
ANR	6207908	Callee	r_list_purge		6207871	0					
ANR	6207909	Identifier	r_list_purge		6207871	0					
ANR	6207910	ArgumentList	ss -> items		6207871	1					
ANR	6207911	Argument	ss -> items		6207871	0					
ANR	6207912	PtrMemberAccess	ss -> items		6207871	0					
ANR	6207913	Identifier	ss		6207871	0					
ANR	6207914	Identifier	items		6207871	1					
ANR	6207915	ExpressionStatement	"r_search_reset ( ss -> search , R_SEARCH_KEYWORD )"	1738:1:41108:41153	6207871	5	True				
ANR	6207916	CallExpression	"r_search_reset ( ss -> search , R_SEARCH_KEYWORD )"		6207871	0					
ANR	6207917	Callee	r_search_reset		6207871	0					
ANR	6207918	Identifier	r_search_reset		6207871	0					
ANR	6207919	ArgumentList	ss -> search		6207871	1					
ANR	6207920	Argument	ss -> search		6207871	0					
ANR	6207921	PtrMemberAccess	ss -> search		6207871	0					
ANR	6207922	Identifier	ss		6207871	0					
ANR	6207923	Identifier	search		6207871	1					
ANR	6207924	Argument	R_SEARCH_KEYWORD		6207871	1					
ANR	6207925	Identifier	R_SEARCH_KEYWORD		6207871	0					
ANR	6207926	ExpressionStatement	"r_sign_foreach ( a , addSearchKwCB , & ctx )"	1739:1:41156:41195	6207871	6	True				
ANR	6207927	CallExpression	"r_sign_foreach ( a , addSearchKwCB , & ctx )"		6207871	0					
ANR	6207928	Callee	r_sign_foreach		6207871	0					
ANR	6207929	Identifier	r_sign_foreach		6207871	0					
ANR	6207930	ArgumentList	a		6207871	1					
ANR	6207931	Argument	a		6207871	0					
ANR	6207932	Identifier	a		6207871	0					
ANR	6207933	Argument	addSearchKwCB		6207871	1					
ANR	6207934	Identifier	addSearchKwCB		6207871	0					
ANR	6207935	Argument	& ctx		6207871	2					
ANR	6207936	UnaryOperationExpression	& ctx		6207871	0					
ANR	6207937	UnaryOperator	&		6207871	0					
ANR	6207938	Identifier	ctx		6207871	1					
ANR	6207939	ExpressionStatement	r_search_begin ( ss -> search )	1740:1:41198:41225	6207871	7	True				
ANR	6207940	CallExpression	r_search_begin ( ss -> search )		6207871	0					
ANR	6207941	Callee	r_search_begin		6207871	0					
ANR	6207942	Identifier	r_search_begin		6207871	0					
ANR	6207943	ArgumentList	ss -> search		6207871	1					
ANR	6207944	Argument	ss -> search		6207871	0					
ANR	6207945	PtrMemberAccess	ss -> search		6207871	0					
ANR	6207946	Identifier	ss		6207871	0					
ANR	6207947	Identifier	search		6207871	1					
ANR	6207948	ExpressionStatement	"r_search_set_callback ( ss -> search , searchHitCB , ss )"	1741:1:41228:41279	6207871	8	True				
ANR	6207949	CallExpression	"r_search_set_callback ( ss -> search , searchHitCB , ss )"		6207871	0					
ANR	6207950	Callee	r_search_set_callback		6207871	0					
ANR	6207951	Identifier	r_search_set_callback		6207871	0					
ANR	6207952	ArgumentList	ss -> search		6207871	1					
ANR	6207953	Argument	ss -> search		6207871	0					
ANR	6207954	PtrMemberAccess	ss -> search		6207871	0					
ANR	6207955	Identifier	ss		6207871	0					
ANR	6207956	Identifier	search		6207871	1					
ANR	6207957	Argument	searchHitCB		6207871	1					
ANR	6207958	Identifier	searchHitCB		6207871	0					
ANR	6207959	Argument	ss		6207871	2					
ANR	6207960	Identifier	ss		6207871	0					
ANR	6207961	ReturnType	R_API void		6207871	1					
ANR	6207962	Identifier	r_sign_search_init		6207871	2					
ANR	6207963	ParameterList	"RAnal * a , RSignSearch * ss , int minsz , RSignSearchCallback cb , void * user"		6207871	3					
ANR	6207964	Parameter	RAnal * a	1732:30:40891:40898	6207871	0	True				
ANR	6207965	ParameterType	RAnal *		6207871	0					
ANR	6207966	Identifier	a		6207871	1					
ANR	6207967	Parameter	RSignSearch * ss	1732:40:40901:40915	6207871	1	True				
ANR	6207968	ParameterType	RSignSearch *		6207871	0					
ANR	6207969	Identifier	ss		6207871	1					
ANR	6207970	Parameter	int minsz	1732:57:40918:40926	6207871	2	True				
ANR	6207971	ParameterType	int		6207871	0					
ANR	6207972	Identifier	minsz		6207871	1					
ANR	6207973	Parameter	RSignSearchCallback cb	1732:68:40929:40950	6207871	3	True				
ANR	6207974	ParameterType	RSignSearchCallback		6207871	0					
ANR	6207975	Identifier	cb		6207871	1					
ANR	6207976	Parameter	void * user	1732:92:40953:40962	6207871	4	True				
ANR	6207977	ParameterType	void *		6207871	0					
ANR	6207978	Identifier	user		6207871	1					
ANR	6207979	CFGEntryNode	ENTRY		6207871		True				
ANR	6207980	CFGExitNode	EXIT		6207871		True				
ANR	6207981	Symbol	ss		6207871						
ANR	6207982	Symbol	addSearchKwCB		6207871						
ANR	6207983	Symbol	a		6207871						
ANR	6207984	Symbol	* ss		6207871						
ANR	6207985	Symbol	ctx		6207871						
ANR	6207986	Symbol	minsz		6207871						
ANR	6207987	Symbol	ss -> items		6207871						
ANR	6207988	Symbol	& ctx		6207871						
ANR	6207989	Symbol	ss -> cb		6207871						
ANR	6207990	Symbol	searchHitCB		6207871						
ANR	6207991	Symbol	ss -> user		6207871						
ANR	6207992	Symbol	R_SEARCH_KEYWORD		6207871						
ANR	6207993	Symbol	user		6207871						
ANR	6207994	Symbol	ss -> search		6207871						
ANR	6207995	Symbol	cb		6207871						
ANR	6207996	Function	r_sign_search_update	1744:0:41284:41486							
ANR	6207997	FunctionDef	"r_sign_search_update (RAnal * a , RSignSearch * ss , ut64 * at , const ut8 * buf , int len)"		6207996	0					
ANR	6207998	CompoundStatement		1744:93:41377:41486	6207996	0					
ANR	6207999	ExpressionStatement	"r_return_val_if_fail ( a && ss && buf && len > 0 , 0 )"	1745:1:41380:41431	6207996	0	True				
ANR	6208000	CallExpression	"r_return_val_if_fail ( a && ss && buf && len > 0 , 0 )"		6207996	0					
ANR	6208001	Callee	r_return_val_if_fail		6207996	0					
ANR	6208002	Identifier	r_return_val_if_fail		6207996	0					
ANR	6208003	ArgumentList	a && ss && buf && len > 0		6207996	1					
ANR	6208004	Argument	a && ss && buf && len > 0		6207996	0					
ANR	6208005	AndExpression	a && ss && buf && len > 0		6207996	0		&&			
ANR	6208006	Identifier	a		6207996	0					
ANR	6208007	AndExpression	ss && buf && len > 0		6207996	1		&&			
ANR	6208008	Identifier	ss		6207996	0					
ANR	6208009	AndExpression	buf && len > 0		6207996	1		&&			
ANR	6208010	Identifier	buf		6207996	0					
ANR	6208011	RelationalExpression	len > 0		6207996	1		>			
ANR	6208012	Identifier	len		6207996	0					
ANR	6208013	PrimaryExpression	0		6207996	1					
ANR	6208014	Argument	0		6207996	1					
ANR	6208015	PrimaryExpression	0		6207996	0					
ANR	6208016	ReturnStatement	"return r_search_update ( ss -> search , * at , buf , len ) ;"	1746:1:41434:41484	6207996	1	True				
ANR	6208017	CallExpression	"r_search_update ( ss -> search , * at , buf , len )"		6207996	0					
ANR	6208018	Callee	r_search_update		6207996	0					
ANR	6208019	Identifier	r_search_update		6207996	0					
ANR	6208020	ArgumentList	ss -> search		6207996	1					
ANR	6208021	Argument	ss -> search		6207996	0					
ANR	6208022	PtrMemberAccess	ss -> search		6207996	0					
ANR	6208023	Identifier	ss		6207996	0					
ANR	6208024	Identifier	search		6207996	1					
ANR	6208025	Argument	* at		6207996	1					
ANR	6208026	UnaryOperationExpression	* at		6207996	0					
ANR	6208027	UnaryOperator	*		6207996	0					
ANR	6208028	Identifier	at		6207996	1					
ANR	6208029	Argument	buf		6207996	2					
ANR	6208030	Identifier	buf		6207996	0					
ANR	6208031	Argument	len		6207996	3					
ANR	6208032	Identifier	len		6207996	0					
ANR	6208033	ReturnType	R_API int		6207996	1					
ANR	6208034	Identifier	r_sign_search_update		6207996	2					
ANR	6208035	ParameterList	"RAnal * a , RSignSearch * ss , ut64 * at , const ut8 * buf , int len"		6207996	3					
ANR	6208036	Parameter	RAnal * a	1744:31:41315:41322	6207996	0	True				
ANR	6208037	ParameterType	RAnal *		6207996	0					
ANR	6208038	Identifier	a		6207996	1					
ANR	6208039	Parameter	RSignSearch * ss	1744:41:41325:41339	6207996	1	True				
ANR	6208040	ParameterType	RSignSearch *		6207996	0					
ANR	6208041	Identifier	ss		6207996	1					
ANR	6208042	Parameter	ut64 * at	1744:58:41342:41349	6207996	2	True				
ANR	6208043	ParameterType	ut64 *		6207996	0					
ANR	6208044	Identifier	at		6207996	1					
ANR	6208045	Parameter	const ut8 * buf	1744:68:41352:41365	6207996	3	True				
ANR	6208046	ParameterType	const ut8 *		6207996	0					
ANR	6208047	Identifier	buf		6207996	1					
ANR	6208048	Parameter	int len	1744:84:41368:41374	6207996	4	True				
ANR	6208049	ParameterType	int		6207996	0					
ANR	6208050	Identifier	len		6207996	1					
ANR	6208051	CFGEntryNode	ENTRY		6207996		True				
ANR	6208052	CFGExitNode	EXIT		6207996		True				
ANR	6208053	Symbol	ss		6207996						
ANR	6208054	Symbol	a		6207996						
ANR	6208055	Symbol	r_search_update		6207996						
ANR	6208056	Symbol	buf		6207996						
ANR	6208057	Symbol	at		6207996						
ANR	6208058	Symbol	len		6207996						
ANR	6208059	Symbol	* ss		6207996						
ANR	6208060	Symbol	* at		6207996						
ANR	6208061	Symbol	ss -> search		6207996						
ANR	6208062	Function	matchCount	1750:0:41519:41613							
ANR	6208063	FunctionDef	"matchCount (int a , int b)"		6208062	0					
ANR	6208064	CompoundStatement		1750:36:41555:41613	6208062	0					
ANR	6208065	IdentifierDeclStatement	int c = a - b ;	1751:1:41558:41571	6208062	0	True				
ANR	6208066	IdentifierDecl	c = a - b		6208062	0					
ANR	6208067	IdentifierDeclType	int		6208062	0					
ANR	6208068	Identifier	c		6208062	1					
ANR	6208069	AssignmentExpression	c = a - b		6208062	2		=			
ANR	6208070	Identifier	c		6208062	0					
ANR	6208071	AdditiveExpression	a - b		6208062	1		-			
ANR	6208072	Identifier	a		6208062	0					
ANR	6208073	Identifier	b		6208062	1					
ANR	6208074	IdentifierDeclStatement	int m = a / 10 ;	1752:1:41574:41588	6208062	1	True				
ANR	6208075	IdentifierDecl	m = a / 10		6208062	0					
ANR	6208076	IdentifierDeclType	int		6208062	0					
ANR	6208077	Identifier	m		6208062	1					
ANR	6208078	AssignmentExpression	m = a / 10		6208062	2		=			
ANR	6208079	Identifier	m		6208062	0					
ANR	6208080	MultiplicativeExpression	a / 10		6208062	1		/			
ANR	6208081	Identifier	a		6208062	0					
ANR	6208082	PrimaryExpression	10		6208062	1					
ANR	6208083	ReturnStatement	return R_ABS ( c ) < m ;	1753:1:41591:41611	6208062	2	True				
ANR	6208084	RelationalExpression	R_ABS ( c ) < m		6208062	0		<			
ANR	6208085	CallExpression	R_ABS ( c )		6208062	0					
ANR	6208086	Callee	R_ABS		6208062	0					
ANR	6208087	Identifier	R_ABS		6208062	0					
ANR	6208088	ArgumentList	c		6208062	1					
ANR	6208089	Argument	c		6208062	0					
ANR	6208090	Identifier	c		6208062	0					
ANR	6208091	Identifier	m		6208062	1					
ANR	6208092	ReturnType	static int		6208062	1					
ANR	6208093	Identifier	matchCount		6208062	2					
ANR	6208094	ParameterList	"int a , int b"		6208062	3					
ANR	6208095	Parameter	int a	1750:22:41541:41545	6208062	0	True				
ANR	6208096	ParameterType	int		6208062	0					
ANR	6208097	Identifier	a		6208062	1					
ANR	6208098	Parameter	int b	1750:29:41548:41552	6208062	1	True				
ANR	6208099	ParameterType	int		6208062	0					
ANR	6208100	Identifier	b		6208062	1					
ANR	6208101	CFGEntryNode	ENTRY		6208062		True				
ANR	6208102	CFGExitNode	EXIT		6208062		True				
ANR	6208103	Symbol	a		6208062						
ANR	6208104	Symbol	b		6208062						
ANR	6208105	Symbol	c		6208062						
ANR	6208106	Symbol	R_ABS		6208062						
ANR	6208107	Symbol	m		6208062						
ANR	6208108	Function	fcnMetricsCmp	1756:0:41616:42180							
ANR	6208109	FunctionDef	"fcnMetricsCmp (RSignItem * it , RAnalFunction * fcn)"		6208108	0					
ANR	6208110	CompoundStatement		1756:61:41677:42180	6208108	0					
ANR	6208111	IdentifierDeclStatement	RSignGraph * graph = it -> graph ;	1757:1:41680:41709	6208108	0	True				
ANR	6208112	IdentifierDecl	* graph = it -> graph		6208108	0					
ANR	6208113	IdentifierDeclType	RSignGraph *		6208108	0					
ANR	6208114	Identifier	graph		6208108	1					
ANR	6208115	AssignmentExpression	* graph = it -> graph		6208108	2		=			
ANR	6208116	Identifier	graph		6208108	0					
ANR	6208117	PtrMemberAccess	it -> graph		6208108	1					
ANR	6208118	Identifier	it		6208108	0					
ANR	6208119	Identifier	graph		6208108	1					
ANR	6208120	IdentifierDeclStatement	int ebbs = - 1 ;	1758:1:41712:41725	6208108	1	True				
ANR	6208121	IdentifierDecl	ebbs = - 1		6208108	0					
ANR	6208122	IdentifierDeclType	int		6208108	0					
ANR	6208123	Identifier	ebbs		6208108	1					
ANR	6208124	AssignmentExpression	ebbs = - 1		6208108	2		=			
ANR	6208125	Identifier	ebbs		6208108	0					
ANR	6208126	UnaryOperationExpression	- 1		6208108	1					
ANR	6208127	UnaryOperator	-		6208108	0					
ANR	6208128	PrimaryExpression	1		6208108	1					
ANR	6208129	IfStatement	"if ( graph -> cc != - 1 && graph -> cc != r_anal_fcn_cc ( NULL , fcn ) )"		6208108	2					
ANR	6208130	Condition	"graph -> cc != - 1 && graph -> cc != r_anal_fcn_cc ( NULL , fcn )"	1760:5:41733:41789	6208108	0	True				
ANR	6208131	AndExpression	"graph -> cc != - 1 && graph -> cc != r_anal_fcn_cc ( NULL , fcn )"		6208108	0		&&			
ANR	6208132	EqualityExpression	graph -> cc != - 1		6208108	0		!=			
ANR	6208133	PtrMemberAccess	graph -> cc		6208108	0					
ANR	6208134	Identifier	graph		6208108	0					
ANR	6208135	Identifier	cc		6208108	1					
ANR	6208136	UnaryOperationExpression	- 1		6208108	1					
ANR	6208137	UnaryOperator	-		6208108	0					
ANR	6208138	PrimaryExpression	1		6208108	1					
ANR	6208139	EqualityExpression	"graph -> cc != r_anal_fcn_cc ( NULL , fcn )"		6208108	1		!=			
ANR	6208140	PtrMemberAccess	graph -> cc		6208108	0					
ANR	6208141	Identifier	graph		6208108	0					
ANR	6208142	Identifier	cc		6208108	1					
ANR	6208143	CallExpression	"r_anal_fcn_cc ( NULL , fcn )"		6208108	1					
ANR	6208144	Callee	r_anal_fcn_cc		6208108	0					
ANR	6208145	Identifier	r_anal_fcn_cc		6208108	0					
ANR	6208146	ArgumentList	NULL		6208108	1					
ANR	6208147	Argument	NULL		6208108	0					
ANR	6208148	Identifier	NULL		6208108	0					
ANR	6208149	Argument	fcn		6208108	1					
ANR	6208150	Identifier	fcn		6208108	0					
ANR	6208151	CompoundStatement		5:64:114:114	6208108	1					
ANR	6208152	ReturnStatement	return false ;	1761:2:41796:41808	6208108	0	True				
ANR	6208153	Identifier	false		6208108	0					
ANR	6208154	IfStatement	if ( graph -> nbbs != - 1 && graph -> nbbs != r_list_length ( fcn -> bbs ) )		6208108	3					
ANR	6208155	Condition	graph -> nbbs != - 1 && graph -> nbbs != r_list_length ( fcn -> bbs )	1763:5:41818:41877	6208108	0	True				
ANR	6208156	AndExpression	graph -> nbbs != - 1 && graph -> nbbs != r_list_length ( fcn -> bbs )		6208108	0		&&			
ANR	6208157	EqualityExpression	graph -> nbbs != - 1		6208108	0		!=			
ANR	6208158	PtrMemberAccess	graph -> nbbs		6208108	0					
ANR	6208159	Identifier	graph		6208108	0					
ANR	6208160	Identifier	nbbs		6208108	1					
ANR	6208161	UnaryOperationExpression	- 1		6208108	1					
ANR	6208162	UnaryOperator	-		6208108	0					
ANR	6208163	PrimaryExpression	1		6208108	1					
ANR	6208164	EqualityExpression	graph -> nbbs != r_list_length ( fcn -> bbs )		6208108	1		!=			
ANR	6208165	PtrMemberAccess	graph -> nbbs		6208108	0					
ANR	6208166	Identifier	graph		6208108	0					
ANR	6208167	Identifier	nbbs		6208108	1					
ANR	6208168	CallExpression	r_list_length ( fcn -> bbs )		6208108	1					
ANR	6208169	Callee	r_list_length		6208108	0					
ANR	6208170	Identifier	r_list_length		6208108	0					
ANR	6208171	ArgumentList	fcn -> bbs		6208108	1					
ANR	6208172	Argument	fcn -> bbs		6208108	0					
ANR	6208173	PtrMemberAccess	fcn -> bbs		6208108	0					
ANR	6208174	Identifier	fcn		6208108	0					
ANR	6208175	Identifier	bbs		6208108	1					
ANR	6208176	CompoundStatement		8:67:202:202	6208108	1					
ANR	6208177	ReturnStatement	return false ;	1764:2:41884:41896	6208108	0	True				
ANR	6208178	Identifier	false		6208108	0					
ANR	6208179	IfStatement	"if ( graph -> edges != - 1 && graph -> edges != r_anal_fcn_count_edges ( fcn , & ebbs ) )"		6208108	4					
ANR	6208180	Condition	"graph -> edges != - 1 && graph -> edges != r_anal_fcn_count_edges ( fcn , & ebbs )"	1766:5:41906:41978	6208108	0	True				
ANR	6208181	AndExpression	"graph -> edges != - 1 && graph -> edges != r_anal_fcn_count_edges ( fcn , & ebbs )"		6208108	0		&&			
ANR	6208182	EqualityExpression	graph -> edges != - 1		6208108	0		!=			
ANR	6208183	PtrMemberAccess	graph -> edges		6208108	0					
ANR	6208184	Identifier	graph		6208108	0					
ANR	6208185	Identifier	edges		6208108	1					
ANR	6208186	UnaryOperationExpression	- 1		6208108	1					
ANR	6208187	UnaryOperator	-		6208108	0					
ANR	6208188	PrimaryExpression	1		6208108	1					
ANR	6208189	EqualityExpression	"graph -> edges != r_anal_fcn_count_edges ( fcn , & ebbs )"		6208108	1		!=			
ANR	6208190	PtrMemberAccess	graph -> edges		6208108	0					
ANR	6208191	Identifier	graph		6208108	0					
ANR	6208192	Identifier	edges		6208108	1					
ANR	6208193	CallExpression	"r_anal_fcn_count_edges ( fcn , & ebbs )"		6208108	1					
ANR	6208194	Callee	r_anal_fcn_count_edges		6208108	0					
ANR	6208195	Identifier	r_anal_fcn_count_edges		6208108	0					
ANR	6208196	ArgumentList	fcn		6208108	1					
ANR	6208197	Argument	fcn		6208108	0					
ANR	6208198	Identifier	fcn		6208108	0					
ANR	6208199	Argument	& ebbs		6208108	1					
ANR	6208200	UnaryOperationExpression	& ebbs		6208108	0					
ANR	6208201	UnaryOperator	&		6208108	0					
ANR	6208202	Identifier	ebbs		6208108	1					
ANR	6208203	CompoundStatement		11:80:303:303	6208108	1					
ANR	6208204	ReturnStatement	return false ;	1767:2:41985:41997	6208108	0	True				
ANR	6208205	Identifier	false		6208108	0					
ANR	6208206	IfStatement	if ( graph -> ebbs != - 1 && graph -> ebbs != ebbs )		6208108	5					
ANR	6208207	Condition	graph -> ebbs != - 1 && graph -> ebbs != ebbs	1769:5:42007:42046	6208108	0	True				
ANR	6208208	AndExpression	graph -> ebbs != - 1 && graph -> ebbs != ebbs		6208108	0		&&			
ANR	6208209	EqualityExpression	graph -> ebbs != - 1		6208108	0		!=			
ANR	6208210	PtrMemberAccess	graph -> ebbs		6208108	0					
ANR	6208211	Identifier	graph		6208108	0					
ANR	6208212	Identifier	ebbs		6208108	1					
ANR	6208213	UnaryOperationExpression	- 1		6208108	1					
ANR	6208214	UnaryOperator	-		6208108	0					
ANR	6208215	PrimaryExpression	1		6208108	1					
ANR	6208216	EqualityExpression	graph -> ebbs != ebbs		6208108	1		!=			
ANR	6208217	PtrMemberAccess	graph -> ebbs		6208108	0					
ANR	6208218	Identifier	graph		6208108	0					
ANR	6208219	Identifier	ebbs		6208108	1					
ANR	6208220	Identifier	ebbs		6208108	1					
ANR	6208221	CompoundStatement		14:47:371:371	6208108	1					
ANR	6208222	ReturnStatement	return false ;	1770:2:42053:42065	6208108	0	True				
ANR	6208223	Identifier	false		6208108	0					
ANR	6208224	IfStatement	"if ( graph -> bbsum > 0 && matchCount ( graph -> bbsum , r_anal_fcn_size ( fcn ) ) )"		6208108	6					
ANR	6208225	Condition	"graph -> bbsum > 0 && matchCount ( graph -> bbsum , r_anal_fcn_size ( fcn ) )"	1772:5:42075:42142	6208108	0	True				
ANR	6208226	AndExpression	"graph -> bbsum > 0 && matchCount ( graph -> bbsum , r_anal_fcn_size ( fcn ) )"		6208108	0		&&			
ANR	6208227	RelationalExpression	graph -> bbsum > 0		6208108	0		>			
ANR	6208228	PtrMemberAccess	graph -> bbsum		6208108	0					
ANR	6208229	Identifier	graph		6208108	0					
ANR	6208230	Identifier	bbsum		6208108	1					
ANR	6208231	PrimaryExpression	0		6208108	1					
ANR	6208232	CallExpression	"matchCount ( graph -> bbsum , r_anal_fcn_size ( fcn ) )"		6208108	1					
ANR	6208233	Callee	matchCount		6208108	0					
ANR	6208234	Identifier	matchCount		6208108	0					
ANR	6208235	ArgumentList	graph -> bbsum		6208108	1					
ANR	6208236	Argument	graph -> bbsum		6208108	0					
ANR	6208237	PtrMemberAccess	graph -> bbsum		6208108	0					
ANR	6208238	Identifier	graph		6208108	0					
ANR	6208239	Identifier	bbsum		6208108	1					
ANR	6208240	Argument	r_anal_fcn_size ( fcn )		6208108	1					
ANR	6208241	CallExpression	r_anal_fcn_size ( fcn )		6208108	0					
ANR	6208242	Callee	r_anal_fcn_size		6208108	0					
ANR	6208243	Identifier	r_anal_fcn_size		6208108	0					
ANR	6208244	ArgumentList	fcn		6208108	1					
ANR	6208245	Argument	fcn		6208108	0					
ANR	6208246	Identifier	fcn		6208108	0					
ANR	6208247	CompoundStatement		17:75:467:467	6208108	1					
ANR	6208248	ReturnStatement	return false ;	1773:2:42149:42161	6208108	0	True				
ANR	6208249	Identifier	false		6208108	0					
ANR	6208250	ReturnStatement	return true ;	1775:1:42167:42178	6208108	7	True				
ANR	6208251	Identifier	true		6208108	0					
ANR	6208252	ReturnType	static bool		6208108	1					
ANR	6208253	Identifier	fcnMetricsCmp		6208108	2					
ANR	6208254	ParameterList	"RSignItem * it , RAnalFunction * fcn"		6208108	3					
ANR	6208255	Parameter	RSignItem * it	1756:26:41642:41654	6208108	0	True				
ANR	6208256	ParameterType	RSignItem *		6208108	0					
ANR	6208257	Identifier	it		6208108	1					
ANR	6208258	Parameter	RAnalFunction * fcn	1756:41:41657:41674	6208108	1	True				
ANR	6208259	ParameterType	RAnalFunction *		6208108	0					
ANR	6208260	Identifier	fcn		6208108	1					
ANR	6208261	CFGEntryNode	ENTRY		6208108		True				
ANR	6208262	CFGExitNode	EXIT		6208108		True				
ANR	6208263	Symbol	it -> graph		6208108						
ANR	6208264	Symbol	ebbs		6208108						
ANR	6208265	Symbol	& ebbs		6208108						
ANR	6208266	Symbol	NULL		6208108						
ANR	6208267	Symbol	* fcn		6208108						
ANR	6208268	Symbol	r_anal_fcn_cc		6208108						
ANR	6208269	Symbol	r_anal_fcn_size		6208108						
ANR	6208270	Symbol	false		6208108						
ANR	6208271	Symbol	graph -> nbbs		6208108						
ANR	6208272	Symbol	matchCount		6208108						
ANR	6208273	Symbol	it		6208108						
ANR	6208274	Symbol	r_anal_fcn_count_edges		6208108						
ANR	6208275	Symbol	graph -> ebbs		6208108						
ANR	6208276	Symbol	graph		6208108						
ANR	6208277	Symbol	fcn		6208108						
ANR	6208278	Symbol	* it		6208108						
ANR	6208279	Symbol	graph -> bbsum		6208108						
ANR	6208280	Symbol	fcn -> bbs		6208108						
ANR	6208281	Symbol	true		6208108						
ANR	6208282	Symbol	* graph		6208108						
ANR	6208283	Symbol	graph -> cc		6208108						
ANR	6208284	Symbol	r_list_length		6208108						
ANR	6208285	Symbol	graph -> edges		6208108						
ANR	6208286	ClassDef	ctxFcnMatchCB	1778:0:42183:42295							
ANR	6208287	DeclStmt									
ANR	6208288	Decl							RAnal	RAnal *	anal
ANR	6208289	DeclStmt									
ANR	6208290	Decl							RAnalFunction	RAnalFunction *	fcn
ANR	6208291	DeclStmt									
ANR	6208292	Decl							RSignGraphMatchCallback	RSignGraphMatchCallback	cb
ANR	6208293	DeclStmt									
ANR	6208294	Decl							void	void *	user
ANR	6208295	DeclStmt									
ANR	6208296	Decl							int	int	mincc
ANR	6208297	Function	graphMatchCB	1786:0:42299:42652							
ANR	6208298	FunctionDef	"graphMatchCB (RSignItem * it , void * user)"		6208297	0					
ANR	6208299	CompoundStatement		1786:51:42350:42652	6208297	0					
ANR	6208300	IdentifierDeclStatement	struct ctxFcnMatchCB * ctx = ( struct ctxFcnMatchCB * ) user ;	1787:1:42353:42410	6208297	0	True				
ANR	6208301	IdentifierDecl	* ctx = ( struct ctxFcnMatchCB * ) user		6208297	0					
ANR	6208302	IdentifierDeclType	struct ctxFcnMatchCB *		6208297	0					
ANR	6208303	Identifier	ctx		6208297	1					
ANR	6208304	AssignmentExpression	* ctx = ( struct ctxFcnMatchCB * ) user		6208297	2		=			
ANR	6208305	Identifier	ctx		6208297	0					
ANR	6208306	CastExpression	( struct ctxFcnMatchCB * ) user		6208297	1					
ANR	6208307	CastTarget	struct ctxFcnMatchCB *		6208297	0					
ANR	6208308	Identifier	user		6208297	1					
ANR	6208309	IdentifierDeclStatement	RSignGraph * graph = it -> graph ;	1788:1:42413:42442	6208297	1	True				
ANR	6208310	IdentifierDecl	* graph = it -> graph		6208297	0					
ANR	6208311	IdentifierDeclType	RSignGraph *		6208297	0					
ANR	6208312	Identifier	graph		6208297	1					
ANR	6208313	AssignmentExpression	* graph = it -> graph		6208297	2		=			
ANR	6208314	Identifier	graph		6208297	0					
ANR	6208315	PtrMemberAccess	it -> graph		6208297	1					
ANR	6208316	Identifier	it		6208297	0					
ANR	6208317	Identifier	graph		6208297	1					
ANR	6208318	IfStatement	if ( ! graph )		6208297	2					
ANR	6208319	Condition	! graph	1790:5:42450:42455	6208297	0	True				
ANR	6208320	UnaryOperationExpression	! graph		6208297	0					
ANR	6208321	UnaryOperator	!		6208297	0					
ANR	6208322	Identifier	graph		6208297	1					
ANR	6208323	CompoundStatement		5:13:107:107	6208297	1					
ANR	6208324	ReturnStatement	return 1 ;	1791:2:42462:42470	6208297	0	True				
ANR	6208325	PrimaryExpression	1		6208297	0					
ANR	6208326	IfStatement	if ( graph -> cc < ctx -> mincc )		6208297	3					
ANR	6208327	Condition	graph -> cc < ctx -> mincc	1794:5:42481:42502	6208297	0	True				
ANR	6208328	RelationalExpression	graph -> cc < ctx -> mincc		6208297	0		<			
ANR	6208329	PtrMemberAccess	graph -> cc		6208297	0					
ANR	6208330	Identifier	graph		6208297	0					
ANR	6208331	Identifier	cc		6208297	1					
ANR	6208332	PtrMemberAccess	ctx -> mincc		6208297	1					
ANR	6208333	Identifier	ctx		6208297	0					
ANR	6208334	Identifier	mincc		6208297	1					
ANR	6208335	CompoundStatement		9:29:154:154	6208297	1					
ANR	6208336	ReturnStatement	return 1 ;	1795:2:42509:42517	6208297	0	True				
ANR	6208337	PrimaryExpression	1		6208297	0					
ANR	6208338	IfStatement	"if ( ! fcnMetricsCmp ( it , ctx -> fcn ) )"		6208297	4					
ANR	6208339	Condition	"! fcnMetricsCmp ( it , ctx -> fcn )"	1798:5:42528:42556	6208297	0	True				
ANR	6208340	UnaryOperationExpression	"! fcnMetricsCmp ( it , ctx -> fcn )"		6208297	0					
ANR	6208341	UnaryOperator	!		6208297	0					
ANR	6208342	CallExpression	"fcnMetricsCmp ( it , ctx -> fcn )"		6208297	1					
ANR	6208343	Callee	fcnMetricsCmp		6208297	0					
ANR	6208344	Identifier	fcnMetricsCmp		6208297	0					
ANR	6208345	ArgumentList	it		6208297	1					
ANR	6208346	Argument	it		6208297	0					
ANR	6208347	Identifier	it		6208297	0					
ANR	6208348	Argument	ctx -> fcn		6208297	1					
ANR	6208349	PtrMemberAccess	ctx -> fcn		6208297	0					
ANR	6208350	Identifier	ctx		6208297	0					
ANR	6208351	Identifier	fcn		6208297	1					
ANR	6208352	CompoundStatement		13:36:208:208	6208297	1					
ANR	6208353	ReturnStatement	return 1 ;	1799:2:42563:42571	6208297	0	True				
ANR	6208354	PrimaryExpression	1		6208297	0					
ANR	6208355	IfStatement	if ( ctx -> cb )		6208297	5					
ANR	6208356	Condition	ctx -> cb	1802:5:42582:42588	6208297	0	True				
ANR	6208357	PtrMemberAccess	ctx -> cb		6208297	0					
ANR	6208358	Identifier	ctx		6208297	0					
ANR	6208359	Identifier	cb		6208297	1					
ANR	6208360	CompoundStatement		17:14:240:240	6208297	1					
ANR	6208361	ReturnStatement	"return ctx -> cb ( it , ctx -> fcn , ctx -> user ) ;"	1803:2:42595:42635	6208297	0	True				
ANR	6208362	CallExpression	"ctx -> cb ( it , ctx -> fcn , ctx -> user )"		6208297	0					
ANR	6208363	Callee	ctx -> cb		6208297	0					
ANR	6208364	PtrMemberAccess	ctx -> cb		6208297	0					
ANR	6208365	Identifier	ctx		6208297	0					
ANR	6208366	Identifier	cb		6208297	1					
ANR	6208367	ArgumentList	it		6208297	1					
ANR	6208368	Argument	it		6208297	0					
ANR	6208369	Identifier	it		6208297	0					
ANR	6208370	Argument	ctx -> fcn		6208297	1					
ANR	6208371	PtrMemberAccess	ctx -> fcn		6208297	0					
ANR	6208372	Identifier	ctx		6208297	0					
ANR	6208373	Identifier	fcn		6208297	1					
ANR	6208374	Argument	ctx -> user		6208297	2					
ANR	6208375	PtrMemberAccess	ctx -> user		6208297	0					
ANR	6208376	Identifier	ctx		6208297	0					
ANR	6208377	Identifier	user		6208297	1					
ANR	6208378	ReturnStatement	return 1 ;	1806:1:42642:42650	6208297	6	True				
ANR	6208379	PrimaryExpression	1		6208297	0					
ANR	6208380	ReturnType	static int		6208297	1					
ANR	6208381	Identifier	graphMatchCB		6208297	2					
ANR	6208382	ParameterList	"RSignItem * it , void * user"		6208297	3					
ANR	6208383	Parameter	RSignItem * it	1786:24:42323:42335	6208297	0	True				
ANR	6208384	ParameterType	RSignItem *		6208297	0					
ANR	6208385	Identifier	it		6208297	1					
ANR	6208386	Parameter	void * user	1786:39:42338:42347	6208297	1	True				
ANR	6208387	ParameterType	void *		6208297	0					
ANR	6208388	Identifier	user		6208297	1					
ANR	6208389	CFGEntryNode	ENTRY		6208297		True				
ANR	6208390	CFGExitNode	EXIT		6208297		True				
ANR	6208391	Symbol	it -> graph		6208297						
ANR	6208392	Symbol	ctx		6208297						
ANR	6208393	Symbol	ctx -> cb		6208297						
ANR	6208394	Symbol	it		6208297						
ANR	6208395	Symbol	graph		6208297						
ANR	6208396	Symbol	ctx -> mincc		6208297						
ANR	6208397	Symbol	* ctx		6208297						
ANR	6208398	Symbol	ctx -> user		6208297						
ANR	6208399	Symbol	* it		6208297						
ANR	6208400	Symbol	fcnMetricsCmp		6208297						
ANR	6208401	Symbol	* graph		6208297						
ANR	6208402	Symbol	ctx -> fcn		6208297						
ANR	6208403	Symbol	user		6208297						
ANR	6208404	Symbol	graph -> cc		6208297						
ANR	6208405	Function	r_sign_match_graph	1809:0:42655:42920							
ANR	6208406	FunctionDef	"r_sign_match_graph (RAnal * a , RAnalFunction * fcn , int mincc , RSignGraphMatchCallback cb , void * user)"		6208405	0					
ANR	6208407	CompoundStatement		1809:111:42766:42920	6208405	0					
ANR	6208408	ExpressionStatement	"r_return_val_if_fail ( a && fcn && cb , false )"	1810:1:42769:42813	6208405	0	True				
ANR	6208409	CallExpression	"r_return_val_if_fail ( a && fcn && cb , false )"		6208405	0					
ANR	6208410	Callee	r_return_val_if_fail		6208405	0					
ANR	6208411	Identifier	r_return_val_if_fail		6208405	0					
ANR	6208412	ArgumentList	a && fcn && cb		6208405	1					
ANR	6208413	Argument	a && fcn && cb		6208405	0					
ANR	6208414	AndExpression	a && fcn && cb		6208405	0		&&			
ANR	6208415	Identifier	a		6208405	0					
ANR	6208416	AndExpression	fcn && cb		6208405	1		&&			
ANR	6208417	Identifier	fcn		6208405	0					
ANR	6208418	Identifier	cb		6208405	1					
ANR	6208419	Argument	false		6208405	1					
ANR	6208420	Identifier	false		6208405	0					
ANR	6208421	IdentifierDeclStatement	"struct ctxFcnMatchCB ctx = { a , fcn , cb , user , mincc } ;"	1811:1:42816:42870	6208405	1	True				
ANR	6208422	IdentifierDecl	"ctx = { a , fcn , cb , user , mincc }"		6208405	0					
ANR	6208423	IdentifierDeclType	struct ctxFcnMatchCB		6208405	0					
ANR	6208424	Identifier	ctx		6208405	1					
ANR	6208425	AssignmentExpression	"ctx = { a , fcn , cb , user , mincc }"		6208405	2		=			
ANR	6208426	Identifier	ctx		6208405	0					
ANR	6208427	InitializerList	a		6208405	1					
ANR	6208428	Identifier	a		6208405	0					
ANR	6208429	Identifier	fcn		6208405	1					
ANR	6208430	Identifier	cb		6208405	2					
ANR	6208431	Identifier	user		6208405	3					
ANR	6208432	Identifier	mincc		6208405	4					
ANR	6208433	ReturnStatement	"return r_sign_foreach ( a , graphMatchCB , & ctx ) ;"	1812:1:42873:42918	6208405	2	True				
ANR	6208434	CallExpression	"r_sign_foreach ( a , graphMatchCB , & ctx )"		6208405	0					
ANR	6208435	Callee	r_sign_foreach		6208405	0					
ANR	6208436	Identifier	r_sign_foreach		6208405	0					
ANR	6208437	ArgumentList	a		6208405	1					
ANR	6208438	Argument	a		6208405	0					
ANR	6208439	Identifier	a		6208405	0					
ANR	6208440	Argument	graphMatchCB		6208405	1					
ANR	6208441	Identifier	graphMatchCB		6208405	0					
ANR	6208442	Argument	& ctx		6208405	2					
ANR	6208443	UnaryOperationExpression	& ctx		6208405	0					
ANR	6208444	UnaryOperator	&		6208405	0					
ANR	6208445	Identifier	ctx		6208405	1					
ANR	6208446	ReturnType	R_API bool		6208405	1					
ANR	6208447	Identifier	r_sign_match_graph		6208405	2					
ANR	6208448	ParameterList	"RAnal * a , RAnalFunction * fcn , int mincc , RSignGraphMatchCallback cb , void * user"		6208405	3					
ANR	6208449	Parameter	RAnal * a	1809:30:42685:42692	6208405	0	True				
ANR	6208450	ParameterType	RAnal *		6208405	0					
ANR	6208451	Identifier	a		6208405	1					
ANR	6208452	Parameter	RAnalFunction * fcn	1809:40:42695:42712	6208405	1	True				
ANR	6208453	ParameterType	RAnalFunction *		6208405	0					
ANR	6208454	Identifier	fcn		6208405	1					
ANR	6208455	Parameter	int mincc	1809:60:42715:42723	6208405	2	True				
ANR	6208456	ParameterType	int		6208405	0					
ANR	6208457	Identifier	mincc		6208405	1					
ANR	6208458	Parameter	RSignGraphMatchCallback cb	1809:71:42726:42751	6208405	3	True				
ANR	6208459	ParameterType	RSignGraphMatchCallback		6208405	0					
ANR	6208460	Identifier	cb		6208405	1					
ANR	6208461	Parameter	void * user	1809:99:42754:42763	6208405	4	True				
ANR	6208462	ParameterType	void *		6208405	0					
ANR	6208463	Identifier	user		6208405	1					
ANR	6208464	CFGEntryNode	ENTRY		6208405		True				
ANR	6208465	CFGExitNode	EXIT		6208405		True				
ANR	6208466	Symbol	fcn		6208405						
ANR	6208467	Symbol	graphMatchCB		6208405						
ANR	6208468	Symbol	a		6208405						
ANR	6208469	Symbol	mincc		6208405						
ANR	6208470	Symbol	ctx		6208405						
ANR	6208471	Symbol	false		6208405						
ANR	6208472	Symbol	r_sign_foreach		6208405						
ANR	6208473	Symbol	& ctx		6208405						
ANR	6208474	Symbol	user		6208405						
ANR	6208475	Symbol	cb		6208405						
ANR	6208476	Function	addrMatchCB	1815:0:42923:43207							
ANR	6208477	FunctionDef	"addrMatchCB (RSignItem * it , void * user)"		6208476	0					
ANR	6208478	CompoundStatement		1815:50:42973:43207	6208476	0					
ANR	6208479	IdentifierDeclStatement	struct ctxFcnMatchCB * ctx = ( struct ctxFcnMatchCB * ) user ;	1816:1:42976:43033	6208476	0	True				
ANR	6208480	IdentifierDecl	* ctx = ( struct ctxFcnMatchCB * ) user		6208476	0					
ANR	6208481	IdentifierDeclType	struct ctxFcnMatchCB *		6208476	0					
ANR	6208482	Identifier	ctx		6208476	1					
ANR	6208483	AssignmentExpression	* ctx = ( struct ctxFcnMatchCB * ) user		6208476	2		=			
ANR	6208484	Identifier	ctx		6208476	0					
ANR	6208485	CastExpression	( struct ctxFcnMatchCB * ) user		6208476	1					
ANR	6208486	CastTarget	struct ctxFcnMatchCB *		6208476	0					
ANR	6208487	Identifier	user		6208476	1					
ANR	6208488	IfStatement	if ( it -> addr == UT64_MAX )		6208476	1					
ANR	6208489	Condition	it -> addr == UT64_MAX	1818:5:43041:43060	6208476	0	True				
ANR	6208490	EqualityExpression	it -> addr == UT64_MAX		6208476	0		==			
ANR	6208491	PtrMemberAccess	it -> addr		6208476	0					
ANR	6208492	Identifier	it		6208476	0					
ANR	6208493	Identifier	addr		6208476	1					
ANR	6208494	Identifier	UT64_MAX		6208476	1					
ANR	6208495	CompoundStatement		4:27:89:89	6208476	1					
ANR	6208496	ReturnStatement	return 1 ;	1819:2:43067:43075	6208476	0	True				
ANR	6208497	PrimaryExpression	1		6208476	0					
ANR	6208498	IfStatement	if ( it -> addr != ctx -> fcn -> addr )		6208476	2					
ANR	6208499	Condition	it -> addr != ctx -> fcn -> addr	1822:5:43086:43111	6208476	0	True				
ANR	6208500	EqualityExpression	it -> addr != ctx -> fcn -> addr		6208476	0		!=			
ANR	6208501	PtrMemberAccess	it -> addr		6208476	0					
ANR	6208502	Identifier	it		6208476	0					
ANR	6208503	Identifier	addr		6208476	1					
ANR	6208504	PtrMemberAccess	ctx -> fcn -> addr		6208476	1					
ANR	6208505	PtrMemberAccess	ctx -> fcn		6208476	0					
ANR	6208506	Identifier	ctx		6208476	0					
ANR	6208507	Identifier	fcn		6208476	1					
ANR	6208508	Identifier	addr		6208476	1					
ANR	6208509	CompoundStatement		8:33:140:140	6208476	1					
ANR	6208510	ReturnStatement	return 1 ;	1823:2:43118:43126	6208476	0	True				
ANR	6208511	PrimaryExpression	1		6208476	0					
ANR	6208512	IfStatement	if ( ctx -> cb )		6208476	3					
ANR	6208513	Condition	ctx -> cb	1826:5:43137:43143	6208476	0	True				
ANR	6208514	PtrMemberAccess	ctx -> cb		6208476	0					
ANR	6208515	Identifier	ctx		6208476	0					
ANR	6208516	Identifier	cb		6208476	1					
ANR	6208517	CompoundStatement		12:14:172:172	6208476	1					
ANR	6208518	ReturnStatement	"return ctx -> cb ( it , ctx -> fcn , ctx -> user ) ;"	1827:2:43150:43190	6208476	0	True				
ANR	6208519	CallExpression	"ctx -> cb ( it , ctx -> fcn , ctx -> user )"		6208476	0					
ANR	6208520	Callee	ctx -> cb		6208476	0					
ANR	6208521	PtrMemberAccess	ctx -> cb		6208476	0					
ANR	6208522	Identifier	ctx		6208476	0					
ANR	6208523	Identifier	cb		6208476	1					
ANR	6208524	ArgumentList	it		6208476	1					
ANR	6208525	Argument	it		6208476	0					
ANR	6208526	Identifier	it		6208476	0					
ANR	6208527	Argument	ctx -> fcn		6208476	1					
ANR	6208528	PtrMemberAccess	ctx -> fcn		6208476	0					
ANR	6208529	Identifier	ctx		6208476	0					
ANR	6208530	Identifier	fcn		6208476	1					
ANR	6208531	Argument	ctx -> user		6208476	2					
ANR	6208532	PtrMemberAccess	ctx -> user		6208476	0					
ANR	6208533	Identifier	ctx		6208476	0					
ANR	6208534	Identifier	user		6208476	1					
ANR	6208535	ReturnStatement	return 1 ;	1830:1:43197:43205	6208476	4	True				
ANR	6208536	PrimaryExpression	1		6208476	0					
ANR	6208537	ReturnType	static int		6208476	1					
ANR	6208538	Identifier	addrMatchCB		6208476	2					
ANR	6208539	ParameterList	"RSignItem * it , void * user"		6208476	3					
ANR	6208540	Parameter	RSignItem * it	1815:23:42946:42958	6208476	0	True				
ANR	6208541	ParameterType	RSignItem *		6208476	0					
ANR	6208542	Identifier	it		6208476	1					
ANR	6208543	Parameter	void * user	1815:38:42961:42970	6208476	1	True				
ANR	6208544	ParameterType	void *		6208476	0					
ANR	6208545	Identifier	user		6208476	1					
ANR	6208546	CFGEntryNode	ENTRY		6208476		True				
ANR	6208547	CFGExitNode	EXIT		6208476		True				
ANR	6208548	Symbol	ctx		6208476						
ANR	6208549	Symbol	ctx -> cb		6208476						
ANR	6208550	Symbol	it		6208476						
ANR	6208551	Symbol	* ctx -> fcn		6208476						
ANR	6208552	Symbol	* ctx		6208476						
ANR	6208553	Symbol	ctx -> user		6208476						
ANR	6208554	Symbol	* it		6208476						
ANR	6208555	Symbol	it -> addr		6208476						
ANR	6208556	Symbol	ctx -> fcn		6208476						
ANR	6208557	Symbol	* * ctx		6208476						
ANR	6208558	Symbol	UT64_MAX		6208476						
ANR	6208559	Symbol	user		6208476						
ANR	6208560	Symbol	ctx -> fcn -> addr		6208476						
ANR	6208561	Function	r_sign_match_addr	1833:0:43210:43459							
ANR	6208562	FunctionDef	"r_sign_match_addr (RAnal * a , RAnalFunction * fcn , RSignOffsetMatchCallback cb , void * user)"		6208561	0					
ANR	6208563	CompoundStatement		1833:100:43310:43459	6208561	0					
ANR	6208564	ExpressionStatement	"r_return_val_if_fail ( a && fcn && cb , false )"	1834:1:43313:43357	6208561	0	True				
ANR	6208565	CallExpression	"r_return_val_if_fail ( a && fcn && cb , false )"		6208561	0					
ANR	6208566	Callee	r_return_val_if_fail		6208561	0					
ANR	6208567	Identifier	r_return_val_if_fail		6208561	0					
ANR	6208568	ArgumentList	a && fcn && cb		6208561	1					
ANR	6208569	Argument	a && fcn && cb		6208561	0					
ANR	6208570	AndExpression	a && fcn && cb		6208561	0		&&			
ANR	6208571	Identifier	a		6208561	0					
ANR	6208572	AndExpression	fcn && cb		6208561	1		&&			
ANR	6208573	Identifier	fcn		6208561	0					
ANR	6208574	Identifier	cb		6208561	1					
ANR	6208575	Argument	false		6208561	1					
ANR	6208576	Identifier	false		6208561	0					
ANR	6208577	IdentifierDeclStatement	"struct ctxFcnMatchCB ctx = { a , fcn , cb , user , 0 } ;"	1835:1:43360:43410	6208561	1	True				
ANR	6208578	IdentifierDecl	"ctx = { a , fcn , cb , user , 0 }"		6208561	0					
ANR	6208579	IdentifierDeclType	struct ctxFcnMatchCB		6208561	0					
ANR	6208580	Identifier	ctx		6208561	1					
ANR	6208581	AssignmentExpression	"ctx = { a , fcn , cb , user , 0 }"		6208561	2		=			
ANR	6208582	Identifier	ctx		6208561	0					
ANR	6208583	InitializerList	a		6208561	1					
ANR	6208584	Identifier	a		6208561	0					
ANR	6208585	Identifier	fcn		6208561	1					
ANR	6208586	Identifier	cb		6208561	2					
ANR	6208587	Identifier	user		6208561	3					
ANR	6208588	PrimaryExpression	0		6208561	4					
ANR	6208589	ReturnStatement	"return r_sign_foreach ( a , addrMatchCB , & ctx ) ;"	1836:1:43413:43457	6208561	2	True				
ANR	6208590	CallExpression	"r_sign_foreach ( a , addrMatchCB , & ctx )"		6208561	0					
ANR	6208591	Callee	r_sign_foreach		6208561	0					
ANR	6208592	Identifier	r_sign_foreach		6208561	0					
ANR	6208593	ArgumentList	a		6208561	1					
ANR	6208594	Argument	a		6208561	0					
ANR	6208595	Identifier	a		6208561	0					
ANR	6208596	Argument	addrMatchCB		6208561	1					
ANR	6208597	Identifier	addrMatchCB		6208561	0					
ANR	6208598	Argument	& ctx		6208561	2					
ANR	6208599	UnaryOperationExpression	& ctx		6208561	0					
ANR	6208600	UnaryOperator	&		6208561	0					
ANR	6208601	Identifier	ctx		6208561	1					
ANR	6208602	ReturnType	R_API bool		6208561	1					
ANR	6208603	Identifier	r_sign_match_addr		6208561	2					
ANR	6208604	ParameterList	"RAnal * a , RAnalFunction * fcn , RSignOffsetMatchCallback cb , void * user"		6208561	3					
ANR	6208605	Parameter	RAnal * a	1833:29:43239:43246	6208561	0	True				
ANR	6208606	ParameterType	RAnal *		6208561	0					
ANR	6208607	Identifier	a		6208561	1					
ANR	6208608	Parameter	RAnalFunction * fcn	1833:39:43249:43266	6208561	1	True				
ANR	6208609	ParameterType	RAnalFunction *		6208561	0					
ANR	6208610	Identifier	fcn		6208561	1					
ANR	6208611	Parameter	RSignOffsetMatchCallback cb	1833:59:43269:43295	6208561	2	True				
ANR	6208612	ParameterType	RSignOffsetMatchCallback		6208561	0					
ANR	6208613	Identifier	cb		6208561	1					
ANR	6208614	Parameter	void * user	1833:88:43298:43307	6208561	3	True				
ANR	6208615	ParameterType	void *		6208561	0					
ANR	6208616	Identifier	user		6208561	1					
ANR	6208617	CFGEntryNode	ENTRY		6208561		True				
ANR	6208618	CFGExitNode	EXIT		6208561		True				
ANR	6208619	Symbol	fcn		6208561						
ANR	6208620	Symbol	a		6208561						
ANR	6208621	Symbol	addrMatchCB		6208561						
ANR	6208622	Symbol	ctx		6208561						
ANR	6208623	Symbol	false		6208561						
ANR	6208624	Symbol	r_sign_foreach		6208561						
ANR	6208625	Symbol	& ctx		6208561						
ANR	6208626	Symbol	user		6208561						
ANR	6208627	Symbol	cb		6208561						
ANR	6208628	Function	hashMatchCB	1839:0:43462:43941							
ANR	6208629	FunctionDef	"hashMatchCB (RSignItem * it , void * user)"		6208628	0					
ANR	6208630	CompoundStatement		1839:50:43512:43941	6208628	0					
ANR	6208631	IdentifierDeclStatement	struct ctxFcnMatchCB * ctx = ( struct ctxFcnMatchCB * ) user ;	1840:1:43515:43572	6208628	0	True				
ANR	6208632	IdentifierDecl	* ctx = ( struct ctxFcnMatchCB * ) user		6208628	0					
ANR	6208633	IdentifierDeclType	struct ctxFcnMatchCB *		6208628	0					
ANR	6208634	Identifier	ctx		6208628	1					
ANR	6208635	AssignmentExpression	* ctx = ( struct ctxFcnMatchCB * ) user		6208628	2		=			
ANR	6208636	Identifier	ctx		6208628	0					
ANR	6208637	CastExpression	( struct ctxFcnMatchCB * ) user		6208628	1					
ANR	6208638	CastTarget	struct ctxFcnMatchCB *		6208628	0					
ANR	6208639	Identifier	user		6208628	1					
ANR	6208640	IdentifierDeclStatement	RSignHash * hash = it -> hash ;	1841:1:43575:43601	6208628	1	True				
ANR	6208641	IdentifierDecl	* hash = it -> hash		6208628	0					
ANR	6208642	IdentifierDeclType	RSignHash *		6208628	0					
ANR	6208643	Identifier	hash		6208628	1					
ANR	6208644	AssignmentExpression	* hash = it -> hash		6208628	2		=			
ANR	6208645	Identifier	hash		6208628	0					
ANR	6208646	PtrMemberAccess	it -> hash		6208628	1					
ANR	6208647	Identifier	it		6208628	0					
ANR	6208648	Identifier	hash		6208628	1					
ANR	6208649	IfStatement	if ( ! hash || ! hash -> bbhash || hash -> bbhash [ 0 ] == 0 )		6208628	2					
ANR	6208650	Condition	! hash || ! hash -> bbhash || hash -> bbhash [ 0 ] == 0	1843:5:43609:43654	6208628	0	True				
ANR	6208651	OrExpression	! hash || ! hash -> bbhash || hash -> bbhash [ 0 ] == 0		6208628	0		||			
ANR	6208652	UnaryOperationExpression	! hash		6208628	0					
ANR	6208653	UnaryOperator	!		6208628	0					
ANR	6208654	Identifier	hash		6208628	1					
ANR	6208655	OrExpression	! hash -> bbhash || hash -> bbhash [ 0 ] == 0		6208628	1		||			
ANR	6208656	UnaryOperationExpression	! hash -> bbhash		6208628	0					
ANR	6208657	UnaryOperator	!		6208628	0					
ANR	6208658	PtrMemberAccess	hash -> bbhash		6208628	1					
ANR	6208659	Identifier	hash		6208628	0					
ANR	6208660	Identifier	bbhash		6208628	1					
ANR	6208661	EqualityExpression	hash -> bbhash [ 0 ] == 0		6208628	1		==			
ANR	6208662	ArrayIndexing	hash -> bbhash [ 0 ]		6208628	0					
ANR	6208663	PtrMemberAccess	hash -> bbhash		6208628	0					
ANR	6208664	Identifier	hash		6208628	0					
ANR	6208665	Identifier	bbhash		6208628	1					
ANR	6208666	PrimaryExpression	0		6208628	1					
ANR	6208667	PrimaryExpression	0		6208628	1					
ANR	6208668	CompoundStatement		5:53:144:144	6208628	1					
ANR	6208669	ReturnStatement	return 1 ;	1844:2:43661:43669	6208628	0	True				
ANR	6208670	PrimaryExpression	1		6208628	0					
ANR	6208671	IdentifierDeclStatement	"char * digest_hex = r_sign_calc_bbhash ( ctx -> anal , ctx -> fcn ) ;"	1847:1:43676:43735	6208628	3	True				
ANR	6208672	IdentifierDecl	"* digest_hex = r_sign_calc_bbhash ( ctx -> anal , ctx -> fcn )"		6208628	0					
ANR	6208673	IdentifierDeclType	char *		6208628	0					
ANR	6208674	Identifier	digest_hex		6208628	1					
ANR	6208675	AssignmentExpression	"* digest_hex = r_sign_calc_bbhash ( ctx -> anal , ctx -> fcn )"		6208628	2		=			
ANR	6208676	Identifier	digest_hex		6208628	0					
ANR	6208677	CallExpression	"r_sign_calc_bbhash ( ctx -> anal , ctx -> fcn )"		6208628	1					
ANR	6208678	Callee	r_sign_calc_bbhash		6208628	0					
ANR	6208679	Identifier	r_sign_calc_bbhash		6208628	0					
ANR	6208680	ArgumentList	ctx -> anal		6208628	1					
ANR	6208681	Argument	ctx -> anal		6208628	0					
ANR	6208682	PtrMemberAccess	ctx -> anal		6208628	0					
ANR	6208683	Identifier	ctx		6208628	0					
ANR	6208684	Identifier	anal		6208628	1					
ANR	6208685	Argument	ctx -> fcn		6208628	1					
ANR	6208686	PtrMemberAccess	ctx -> fcn		6208628	0					
ANR	6208687	Identifier	ctx		6208628	0					
ANR	6208688	Identifier	fcn		6208628	1					
ANR	6208689	IdentifierDeclStatement	bool retval = false ;	1848:1:43738:43757	6208628	4	True				
ANR	6208690	IdentifierDecl	retval = false		6208628	0					
ANR	6208691	IdentifierDeclType	bool		6208628	0					
ANR	6208692	Identifier	retval		6208628	1					
ANR	6208693	AssignmentExpression	retval = false		6208628	2		=			
ANR	6208694	Identifier	false		6208628	0					
ANR	6208695	Identifier	false		6208628	1					
ANR	6208696	IfStatement	"if ( digest_hex && strcmp ( hash -> bbhash , digest_hex ) )"		6208628	5					
ANR	6208697	Condition	"digest_hex && strcmp ( hash -> bbhash , digest_hex )"	1849:5:43764:43810	6208628	0	True				
ANR	6208698	AndExpression	"digest_hex && strcmp ( hash -> bbhash , digest_hex )"		6208628	0		&&			
ANR	6208699	Identifier	digest_hex		6208628	0					
ANR	6208700	CallExpression	"strcmp ( hash -> bbhash , digest_hex )"		6208628	1					
ANR	6208701	Callee	strcmp		6208628	0					
ANR	6208702	Identifier	strcmp		6208628	0					
ANR	6208703	ArgumentList	hash -> bbhash		6208628	1					
ANR	6208704	Argument	hash -> bbhash		6208628	0					
ANR	6208705	PtrMemberAccess	hash -> bbhash		6208628	0					
ANR	6208706	Identifier	hash		6208628	0					
ANR	6208707	Identifier	bbhash		6208628	1					
ANR	6208708	Argument	digest_hex		6208628	1					
ANR	6208709	Identifier	digest_hex		6208628	0					
ANR	6208710	CompoundStatement		11:54:300:300	6208628	1					
ANR	6208711	GotoStatement	goto beach ;	1850:2:43817:43827	6208628	0	True				
ANR	6208712	Identifier	beach		6208628	0					
ANR	6208713	IfStatement	if ( ctx -> cb )		6208628	6					
ANR	6208714	Condition	ctx -> cb	1853:5:43838:43844	6208628	0	True				
ANR	6208715	PtrMemberAccess	ctx -> cb		6208628	0					
ANR	6208716	Identifier	ctx		6208628	0					
ANR	6208717	Identifier	cb		6208628	1					
ANR	6208718	CompoundStatement		15:14:334:334	6208628	1					
ANR	6208719	ExpressionStatement	"retval = ctx -> cb ( it , ctx -> fcn , ctx -> user )"	1854:2:43851:43893	6208628	0	True				
ANR	6208720	AssignmentExpression	"retval = ctx -> cb ( it , ctx -> fcn , ctx -> user )"		6208628	0		=			
ANR	6208721	Identifier	retval		6208628	0					
ANR	6208722	CallExpression	"ctx -> cb ( it , ctx -> fcn , ctx -> user )"		6208628	1					
ANR	6208723	Callee	ctx -> cb		6208628	0					
ANR	6208724	PtrMemberAccess	ctx -> cb		6208628	0					
ANR	6208725	Identifier	ctx		6208628	0					
ANR	6208726	Identifier	cb		6208628	1					
ANR	6208727	ArgumentList	it		6208628	1					
ANR	6208728	Argument	it		6208628	0					
ANR	6208729	Identifier	it		6208628	0					
ANR	6208730	Argument	ctx -> fcn		6208628	1					
ANR	6208731	PtrMemberAccess	ctx -> fcn		6208628	0					
ANR	6208732	Identifier	ctx		6208628	0					
ANR	6208733	Identifier	fcn		6208628	1					
ANR	6208734	Argument	ctx -> user		6208628	2					
ANR	6208735	PtrMemberAccess	ctx -> user		6208628	0					
ANR	6208736	Identifier	ctx		6208628	0					
ANR	6208737	Identifier	user		6208628	1					
ANR	6208738	Label	beach :	1856:0:43898:43903	6208628	7	True				
ANR	6208739	Identifier	beach		6208628	0					
ANR	6208740	ExpressionStatement	free ( digest_hex )	1857:1:43906:43923	6208628	8	True				
ANR	6208741	CallExpression	free ( digest_hex )		6208628	0					
ANR	6208742	Callee	free		6208628	0					
ANR	6208743	Identifier	free		6208628	0					
ANR	6208744	ArgumentList	digest_hex		6208628	1					
ANR	6208745	Argument	digest_hex		6208628	0					
ANR	6208746	Identifier	digest_hex		6208628	0					
ANR	6208747	ReturnStatement	return retval ;	1858:1:43926:43939	6208628	9	True				
ANR	6208748	Identifier	retval		6208628	0					
ANR	6208749	ReturnType	static int		6208628	1					
ANR	6208750	Identifier	hashMatchCB		6208628	2					
ANR	6208751	ParameterList	"RSignItem * it , void * user"		6208628	3					
ANR	6208752	Parameter	RSignItem * it	1839:23:43485:43497	6208628	0	True				
ANR	6208753	ParameterType	RSignItem *		6208628	0					
ANR	6208754	Identifier	it		6208628	1					
ANR	6208755	Parameter	void * user	1839:38:43500:43509	6208628	1	True				
ANR	6208756	ParameterType	void *		6208628	0					
ANR	6208757	Identifier	user		6208628	1					
ANR	6208758	CFGEntryNode	ENTRY		6208628		True				
ANR	6208759	CFGExitNode	EXIT		6208628		True				
ANR	6208760	Symbol	hash -> bbhash		6208628						
ANR	6208761	Symbol	strcmp		6208628						
ANR	6208762	Symbol	ctx		6208628						
ANR	6208763	Symbol	* hash -> bbhash		6208628						
ANR	6208764	Symbol	false		6208628						
ANR	6208765	Symbol	ctx -> anal		6208628						
ANR	6208766	Symbol	ctx -> cb		6208628						
ANR	6208767	Symbol	it		6208628						
ANR	6208768	Symbol	* * hash		6208628						
ANR	6208769	Symbol	* ctx		6208628						
ANR	6208770	Symbol	retval		6208628						
ANR	6208771	Symbol	r_sign_calc_bbhash		6208628						
ANR	6208772	Symbol	ctx -> user		6208628						
ANR	6208773	Symbol	* it		6208628						
ANR	6208774	Symbol	it -> hash		6208628						
ANR	6208775	Symbol	ctx -> fcn		6208628						
ANR	6208776	Symbol	* hash		6208628						
ANR	6208777	Symbol	digest_hex		6208628						
ANR	6208778	Symbol	user		6208628						
ANR	6208779	Symbol	hash		6208628						
ANR	6208780	Function	r_sign_match_hash	1861:0:43944:44191							
ANR	6208781	FunctionDef	"r_sign_match_hash (RAnal * a , RAnalFunction * fcn , RSignHashMatchCallback cb , void * user)"		6208780	0					
ANR	6208782	CompoundStatement		1861:98:44042:44191	6208780	0					
ANR	6208783	ExpressionStatement	"r_return_val_if_fail ( a && fcn && cb , false )"	1862:1:44045:44089	6208780	0	True				
ANR	6208784	CallExpression	"r_return_val_if_fail ( a && fcn && cb , false )"		6208780	0					
ANR	6208785	Callee	r_return_val_if_fail		6208780	0					
ANR	6208786	Identifier	r_return_val_if_fail		6208780	0					
ANR	6208787	ArgumentList	a && fcn && cb		6208780	1					
ANR	6208788	Argument	a && fcn && cb		6208780	0					
ANR	6208789	AndExpression	a && fcn && cb		6208780	0		&&			
ANR	6208790	Identifier	a		6208780	0					
ANR	6208791	AndExpression	fcn && cb		6208780	1		&&			
ANR	6208792	Identifier	fcn		6208780	0					
ANR	6208793	Identifier	cb		6208780	1					
ANR	6208794	Argument	false		6208780	1					
ANR	6208795	Identifier	false		6208780	0					
ANR	6208796	IdentifierDeclStatement	"struct ctxFcnMatchCB ctx = { a , fcn , cb , user , 0 } ;"	1863:1:44092:44142	6208780	1	True				
ANR	6208797	IdentifierDecl	"ctx = { a , fcn , cb , user , 0 }"		6208780	0					
ANR	6208798	IdentifierDeclType	struct ctxFcnMatchCB		6208780	0					
ANR	6208799	Identifier	ctx		6208780	1					
ANR	6208800	AssignmentExpression	"ctx = { a , fcn , cb , user , 0 }"		6208780	2		=			
ANR	6208801	Identifier	ctx		6208780	0					
ANR	6208802	InitializerList	a		6208780	1					
ANR	6208803	Identifier	a		6208780	0					
ANR	6208804	Identifier	fcn		6208780	1					
ANR	6208805	Identifier	cb		6208780	2					
ANR	6208806	Identifier	user		6208780	3					
ANR	6208807	PrimaryExpression	0		6208780	4					
ANR	6208808	ReturnStatement	"return r_sign_foreach ( a , hashMatchCB , & ctx ) ;"	1864:1:44145:44189	6208780	2	True				
ANR	6208809	CallExpression	"r_sign_foreach ( a , hashMatchCB , & ctx )"		6208780	0					
ANR	6208810	Callee	r_sign_foreach		6208780	0					
ANR	6208811	Identifier	r_sign_foreach		6208780	0					
ANR	6208812	ArgumentList	a		6208780	1					
ANR	6208813	Argument	a		6208780	0					
ANR	6208814	Identifier	a		6208780	0					
ANR	6208815	Argument	hashMatchCB		6208780	1					
ANR	6208816	Identifier	hashMatchCB		6208780	0					
ANR	6208817	Argument	& ctx		6208780	2					
ANR	6208818	UnaryOperationExpression	& ctx		6208780	0					
ANR	6208819	UnaryOperator	&		6208780	0					
ANR	6208820	Identifier	ctx		6208780	1					
ANR	6208821	ReturnType	R_API bool		6208780	1					
ANR	6208822	Identifier	r_sign_match_hash		6208780	2					
ANR	6208823	ParameterList	"RAnal * a , RAnalFunction * fcn , RSignHashMatchCallback cb , void * user"		6208780	3					
ANR	6208824	Parameter	RAnal * a	1861:29:43973:43980	6208780	0	True				
ANR	6208825	ParameterType	RAnal *		6208780	0					
ANR	6208826	Identifier	a		6208780	1					
ANR	6208827	Parameter	RAnalFunction * fcn	1861:39:43983:44000	6208780	1	True				
ANR	6208828	ParameterType	RAnalFunction *		6208780	0					
ANR	6208829	Identifier	fcn		6208780	1					
ANR	6208830	Parameter	RSignHashMatchCallback cb	1861:59:44003:44027	6208780	2	True				
ANR	6208831	ParameterType	RSignHashMatchCallback		6208780	0					
ANR	6208832	Identifier	cb		6208780	1					
ANR	6208833	Parameter	void * user	1861:86:44030:44039	6208780	3	True				
ANR	6208834	ParameterType	void *		6208780	0					
ANR	6208835	Identifier	user		6208780	1					
ANR	6208836	CFGEntryNode	ENTRY		6208780		True				
ANR	6208837	CFGExitNode	EXIT		6208780		True				
ANR	6208838	Symbol	fcn		6208780						
ANR	6208839	Symbol	a		6208780						
ANR	6208840	Symbol	ctx		6208780						
ANR	6208841	Symbol	false		6208780						
ANR	6208842	Symbol	r_sign_foreach		6208780						
ANR	6208843	Symbol	& ctx		6208780						
ANR	6208844	Symbol	user		6208780						
ANR	6208845	Symbol	hashMatchCB		6208780						
ANR	6208846	Symbol	cb		6208780						
ANR	6208847	Function	refsMatchCB	1868:0:44195:44945							
ANR	6208848	FunctionDef	"refsMatchCB (RSignItem * it , void * user)"		6208847	0					
ANR	6208849	CompoundStatement		1868:50:44245:44945	6208847	0					
ANR	6208850	IdentifierDeclStatement	struct ctxFcnMatchCB * ctx = ( struct ctxFcnMatchCB * ) user ;	1869:1:44248:44305	6208847	0	True				
ANR	6208851	IdentifierDecl	* ctx = ( struct ctxFcnMatchCB * ) user		6208847	0					
ANR	6208852	IdentifierDeclType	struct ctxFcnMatchCB *		6208847	0					
ANR	6208853	Identifier	ctx		6208847	1					
ANR	6208854	AssignmentExpression	* ctx = ( struct ctxFcnMatchCB * ) user		6208847	2		=			
ANR	6208855	Identifier	ctx		6208847	0					
ANR	6208856	CastExpression	( struct ctxFcnMatchCB * ) user		6208847	1					
ANR	6208857	CastTarget	struct ctxFcnMatchCB *		6208847	0					
ANR	6208858	Identifier	user		6208847	1					
ANR	6208859	IdentifierDeclStatement	RList * refs = NULL ;	1870:1:44308:44326	6208847	1	True				
ANR	6208860	IdentifierDecl	* refs = NULL		6208847	0					
ANR	6208861	IdentifierDeclType	RList *		6208847	0					
ANR	6208862	Identifier	refs		6208847	1					
ANR	6208863	AssignmentExpression	* refs = NULL		6208847	2		=			
ANR	6208864	Identifier	NULL		6208847	0					
ANR	6208865	Identifier	NULL		6208847	1					
ANR	6208866	IdentifierDeclStatement	"char * ref_a = NULL , * ref_b = NULL ;"	1871:1:44329:44362	6208847	2	True				
ANR	6208867	IdentifierDecl	* ref_a = NULL		6208847	0					
ANR	6208868	IdentifierDeclType	char *		6208847	0					
ANR	6208869	Identifier	ref_a		6208847	1					
ANR	6208870	AssignmentExpression	* ref_a = NULL		6208847	2		=			
ANR	6208871	Identifier	NULL		6208847	0					
ANR	6208872	Identifier	NULL		6208847	1					
ANR	6208873	IdentifierDecl	* ref_b = NULL		6208847	1					
ANR	6208874	IdentifierDeclType	char *		6208847	0					
ANR	6208875	Identifier	ref_b		6208847	1					
ANR	6208876	AssignmentExpression	* ref_b = NULL		6208847	2		=			
ANR	6208877	Identifier	NULL		6208847	0					
ANR	6208878	Identifier	NULL		6208847	1					
ANR	6208879	IdentifierDeclStatement	"int i = 0 , retval = 1 ;"	1872:1:44365:44386	6208847	3	True				
ANR	6208880	IdentifierDecl	i = 0		6208847	0					
ANR	6208881	IdentifierDeclType	int		6208847	0					
ANR	6208882	Identifier	i		6208847	1					
ANR	6208883	AssignmentExpression	i = 0		6208847	2		=			
ANR	6208884	Identifier	i		6208847	0					
ANR	6208885	PrimaryExpression	0		6208847	1					
ANR	6208886	IdentifierDecl	retval = 1		6208847	1					
ANR	6208887	IdentifierDeclType	int		6208847	0					
ANR	6208888	Identifier	retval		6208847	1					
ANR	6208889	AssignmentExpression	retval = 1		6208847	2		=			
ANR	6208890	Identifier	retval		6208847	0					
ANR	6208891	PrimaryExpression	1		6208847	1					
ANR	6208892	IfStatement	if ( ! it -> refs )		6208847	4					
ANR	6208893	Condition	! it -> refs	1874:5:44394:44402	6208847	0	True				
ANR	6208894	UnaryOperationExpression	! it -> refs		6208847	0					
ANR	6208895	UnaryOperator	!		6208847	0					
ANR	6208896	PtrMemberAccess	it -> refs		6208847	1					
ANR	6208897	Identifier	it		6208847	0					
ANR	6208898	Identifier	refs		6208847	1					
ANR	6208899	CompoundStatement		7:16:159:159	6208847	1					
ANR	6208900	ReturnStatement	return 1 ;	1875:2:44409:44417	6208847	0	True				
ANR	6208901	PrimaryExpression	1		6208847	0					
ANR	6208902	ExpressionStatement	"refs = r_sign_fcn_refs ( ctx -> anal , ctx -> fcn )"	1879:1:44468:44512	6208847	5	True				
ANR	6208903	AssignmentExpression	"refs = r_sign_fcn_refs ( ctx -> anal , ctx -> fcn )"		6208847	0		=			
ANR	6208904	Identifier	refs		6208847	0					
ANR	6208905	CallExpression	"r_sign_fcn_refs ( ctx -> anal , ctx -> fcn )"		6208847	1					
ANR	6208906	Callee	r_sign_fcn_refs		6208847	0					
ANR	6208907	Identifier	r_sign_fcn_refs		6208847	0					
ANR	6208908	ArgumentList	ctx -> anal		6208847	1					
ANR	6208909	Argument	ctx -> anal		6208847	0					
ANR	6208910	PtrMemberAccess	ctx -> anal		6208847	0					
ANR	6208911	Identifier	ctx		6208847	0					
ANR	6208912	Identifier	anal		6208847	1					
ANR	6208913	Argument	ctx -> fcn		6208847	1					
ANR	6208914	PtrMemberAccess	ctx -> fcn		6208847	0					
ANR	6208915	Identifier	ctx		6208847	0					
ANR	6208916	Identifier	fcn		6208847	1					
ANR	6208917	IfStatement	if ( ! refs )		6208847	6					
ANR	6208918	Condition	! refs	1880:5:44519:44523	6208847	0	True				
ANR	6208919	UnaryOperationExpression	! refs		6208847	0					
ANR	6208920	UnaryOperator	!		6208847	0					
ANR	6208921	Identifier	refs		6208847	1					
ANR	6208922	CompoundStatement		13:12:280:280	6208847	1					
ANR	6208923	ReturnStatement	return 1 ;	1881:2:44530:44538	6208847	0	True				
ANR	6208924	PrimaryExpression	1		6208847	0					
ANR	6208925	ForStatement	for ( i = 0 ; ; i ++ )		6208847	7					
ANR	6208926	ForInit	i = 0 ;	1884:6:44550:44555	6208847	0	True				
ANR	6208927	AssignmentExpression	i = 0		6208847	0		=			
ANR	6208928	Identifier	i		6208847	0					
ANR	6208929	PrimaryExpression	0		6208847	1					
ANR	6208930	PostIncDecOperationExpression	i ++	1884:15:44559:44561	6208847	1	True				
ANR	6208931	Identifier	i		6208847	0					
ANR	6208932	IncDec	++		6208847	1					
ANR	6208933	CompoundStatement		17:20:318:318	6208847	2					
ANR	6208934	ExpressionStatement	"ref_a = ( char * ) r_list_get_n ( it -> refs , i )"	1885:2:44568:44611	6208847	0	True				
ANR	6208935	AssignmentExpression	"ref_a = ( char * ) r_list_get_n ( it -> refs , i )"		6208847	0		=			
ANR	6208936	Identifier	ref_a		6208847	0					
ANR	6208937	CastExpression	"( char * ) r_list_get_n ( it -> refs , i )"		6208847	1					
ANR	6208938	CastTarget	char *		6208847	0					
ANR	6208939	CallExpression	"r_list_get_n ( it -> refs , i )"		6208847	1					
ANR	6208940	Callee	r_list_get_n		6208847	0					
ANR	6208941	Identifier	r_list_get_n		6208847	0					
ANR	6208942	ArgumentList	it -> refs		6208847	1					
ANR	6208943	Argument	it -> refs		6208847	0					
ANR	6208944	PtrMemberAccess	it -> refs		6208847	0					
ANR	6208945	Identifier	it		6208847	0					
ANR	6208946	Identifier	refs		6208847	1					
ANR	6208947	Argument	i		6208847	1					
ANR	6208948	Identifier	i		6208847	0					
ANR	6208949	ExpressionStatement	"ref_b = ( char * ) r_list_get_n ( refs , i )"	1886:2:44615:44654	6208847	1	True				
ANR	6208950	AssignmentExpression	"ref_b = ( char * ) r_list_get_n ( refs , i )"		6208847	0		=			
ANR	6208951	Identifier	ref_b		6208847	0					
ANR	6208952	CastExpression	"( char * ) r_list_get_n ( refs , i )"		6208847	1					
ANR	6208953	CastTarget	char *		6208847	0					
ANR	6208954	CallExpression	"r_list_get_n ( refs , i )"		6208847	1					
ANR	6208955	Callee	r_list_get_n		6208847	0					
ANR	6208956	Identifier	r_list_get_n		6208847	0					
ANR	6208957	ArgumentList	refs		6208847	1					
ANR	6208958	Argument	refs		6208847	0					
ANR	6208959	Identifier	refs		6208847	0					
ANR	6208960	Argument	i		6208847	1					
ANR	6208961	Identifier	i		6208847	0					
ANR	6208962	IfStatement	if ( ! ref_a || ! ref_b )		6208847	2					
ANR	6208963	Condition	! ref_a || ! ref_b	1888:6:44663:44678	6208847	0	True				
ANR	6208964	OrExpression	! ref_a || ! ref_b		6208847	0		||			
ANR	6208965	UnaryOperationExpression	! ref_a		6208847	0					
ANR	6208966	UnaryOperator	!		6208847	0					
ANR	6208967	Identifier	ref_a		6208847	1					
ANR	6208968	UnaryOperationExpression	! ref_b		6208847	1					
ANR	6208969	UnaryOperator	!		6208847	0					
ANR	6208970	Identifier	ref_b		6208847	1					
ANR	6208971	CompoundStatement		21:24:435:435	6208847	1					
ANR	6208972	IfStatement	if ( ref_a != ref_b )		6208847	0					
ANR	6208973	Condition	ref_a != ref_b	1889:7:44690:44703	6208847	0	True				
ANR	6208974	EqualityExpression	ref_a != ref_b		6208847	0		!=			
ANR	6208975	Identifier	ref_a		6208847	0					
ANR	6208976	Identifier	ref_b		6208847	1					
ANR	6208977	CompoundStatement		22:23:460:460	6208847	1					
ANR	6208978	ExpressionStatement	retval = 1	1890:4:44712:44722	6208847	0	True				
ANR	6208979	AssignmentExpression	retval = 1		6208847	0		=			
ANR	6208980	Identifier	retval		6208847	0					
ANR	6208981	PrimaryExpression	1		6208847	1					
ANR	6208982	GotoStatement	goto out ;	1891:4:44728:44736	6208847	1	True				
ANR	6208983	Identifier	out		6208847	0					
ANR	6208984	BreakStatement	break ;	1893:3:44746:44751	6208847	1	True				
ANR	6208985	IfStatement	"if ( strcmp ( ref_a , ref_b ) )"		6208847	3					
ANR	6208986	Condition	"strcmp ( ref_a , ref_b )"	1895:6:44763:44783	6208847	0	True				
ANR	6208987	CallExpression	"strcmp ( ref_a , ref_b )"		6208847	0					
ANR	6208988	Callee	strcmp		6208847	0					
ANR	6208989	Identifier	strcmp		6208847	0					
ANR	6208990	ArgumentList	ref_a		6208847	1					
ANR	6208991	Argument	ref_a		6208847	0					
ANR	6208992	Identifier	ref_a		6208847	0					
ANR	6208993	Argument	ref_b		6208847	1					
ANR	6208994	Identifier	ref_b		6208847	0					
ANR	6208995	CompoundStatement		28:29:540:540	6208847	1					
ANR	6208996	ExpressionStatement	retval = 1	1896:3:44791:44801	6208847	0	True				
ANR	6208997	AssignmentExpression	retval = 1		6208847	0		=			
ANR	6208998	Identifier	retval		6208847	0					
ANR	6208999	PrimaryExpression	1		6208847	1					
ANR	6209000	GotoStatement	goto out ;	1897:3:44806:44814	6208847	1	True				
ANR	6209001	Identifier	out		6208847	0					
ANR	6209002	IfStatement	if ( ctx -> cb )		6208847	8					
ANR	6209003	Condition	ctx -> cb	1901:5:44829:44835	6208847	0	True				
ANR	6209004	PtrMemberAccess	ctx -> cb		6208847	0					
ANR	6209005	Identifier	ctx		6208847	0					
ANR	6209006	Identifier	cb		6208847	1					
ANR	6209007	CompoundStatement		34:14:592:592	6208847	1					
ANR	6209008	ExpressionStatement	"retval = ctx -> cb ( it , ctx -> fcn , ctx -> user )"	1902:2:44842:44884	6208847	0	True				
ANR	6209009	AssignmentExpression	"retval = ctx -> cb ( it , ctx -> fcn , ctx -> user )"		6208847	0		=			
ANR	6209010	Identifier	retval		6208847	0					
ANR	6209011	CallExpression	"ctx -> cb ( it , ctx -> fcn , ctx -> user )"		6208847	1					
ANR	6209012	Callee	ctx -> cb		6208847	0					
ANR	6209013	PtrMemberAccess	ctx -> cb		6208847	0					
ANR	6209014	Identifier	ctx		6208847	0					
ANR	6209015	Identifier	cb		6208847	1					
ANR	6209016	ArgumentList	it		6208847	1					
ANR	6209017	Argument	it		6208847	0					
ANR	6209018	Identifier	it		6208847	0					
ANR	6209019	Argument	ctx -> fcn		6208847	1					
ANR	6209020	PtrMemberAccess	ctx -> fcn		6208847	0					
ANR	6209021	Identifier	ctx		6208847	0					
ANR	6209022	Identifier	fcn		6208847	1					
ANR	6209023	Argument	ctx -> user		6208847	2					
ANR	6209024	PtrMemberAccess	ctx -> user		6208847	0					
ANR	6209025	Identifier	ctx		6208847	0					
ANR	6209026	Identifier	user		6208847	1					
ANR	6209027	GotoStatement	goto out ;	1903:2:44888:44896	6208847	1	True				
ANR	6209028	Identifier	out		6208847	0					
ANR	6209029	Label	out :	1906:0:44902:44905	6208847	9	True				
ANR	6209030	Identifier	out		6208847	0					
ANR	6209031	ExpressionStatement	r_list_free ( refs )	1907:1:44908:44926	6208847	10	True				
ANR	6209032	CallExpression	r_list_free ( refs )		6208847	0					
ANR	6209033	Callee	r_list_free		6208847	0					
ANR	6209034	Identifier	r_list_free		6208847	0					
ANR	6209035	ArgumentList	refs		6208847	1					
ANR	6209036	Argument	refs		6208847	0					
ANR	6209037	Identifier	refs		6208847	0					
ANR	6209038	ReturnStatement	return retval ;	1909:1:44930:44943	6208847	11	True				
ANR	6209039	Identifier	retval		6208847	0					
ANR	6209040	ReturnType	static int		6208847	1					
ANR	6209041	Identifier	refsMatchCB		6208847	2					
ANR	6209042	ParameterList	"RSignItem * it , void * user"		6208847	3					
ANR	6209043	Parameter	RSignItem * it	1868:23:44218:44230	6208847	0	True				
ANR	6209044	ParameterType	RSignItem *		6208847	0					
ANR	6209045	Identifier	it		6208847	1					
ANR	6209046	Parameter	void * user	1868:38:44233:44242	6208847	1	True				
ANR	6209047	ParameterType	void *		6208847	0					
ANR	6209048	Identifier	user		6208847	1					
ANR	6209049	CFGEntryNode	ENTRY		6208847		True				
ANR	6209050	CFGExitNode	EXIT		6208847		True				
ANR	6209051	InfiniteForNode	true		6208847		True				
ANR	6209052	Symbol	ref_a		6208847						
ANR	6209053	Symbol	strcmp		6208847						
ANR	6209054	Symbol	NULL		6208847						
ANR	6209055	Symbol	ref_b		6208847						
ANR	6209056	Symbol	ctx		6208847						
ANR	6209057	Symbol	i		6208847						
ANR	6209058	Symbol	ctx -> anal		6208847						
ANR	6209059	Symbol	r_list_get_n		6208847						
ANR	6209060	Symbol	ctx -> cb		6208847						
ANR	6209061	Symbol	it		6208847						
ANR	6209062	Symbol	retval		6208847						
ANR	6209063	Symbol	* ctx		6208847						
ANR	6209064	Symbol	ctx -> user		6208847						
ANR	6209065	Symbol	* it		6208847						
ANR	6209066	Symbol	refs		6208847						
ANR	6209067	Symbol	r_sign_fcn_refs		6208847						
ANR	6209068	Symbol	ctx -> fcn		6208847						
ANR	6209069	Symbol	user		6208847						
ANR	6209070	Symbol	it -> refs		6208847						
ANR	6209071	Function	r_sign_match_refs	1912:0:44948:45195							
ANR	6209072	FunctionDef	"r_sign_match_refs (RAnal * a , RAnalFunction * fcn , RSignRefsMatchCallback cb , void * user)"		6209071	0					
ANR	6209073	CompoundStatement		1912:98:45046:45195	6209071	0					
ANR	6209074	ExpressionStatement	"r_return_val_if_fail ( a && fcn && cb , false )"	1913:1:45049:45093	6209071	0	True				
ANR	6209075	CallExpression	"r_return_val_if_fail ( a && fcn && cb , false )"		6209071	0					
ANR	6209076	Callee	r_return_val_if_fail		6209071	0					
ANR	6209077	Identifier	r_return_val_if_fail		6209071	0					
ANR	6209078	ArgumentList	a && fcn && cb		6209071	1					
ANR	6209079	Argument	a && fcn && cb		6209071	0					
ANR	6209080	AndExpression	a && fcn && cb		6209071	0		&&			
ANR	6209081	Identifier	a		6209071	0					
ANR	6209082	AndExpression	fcn && cb		6209071	1		&&			
ANR	6209083	Identifier	fcn		6209071	0					
ANR	6209084	Identifier	cb		6209071	1					
ANR	6209085	Argument	false		6209071	1					
ANR	6209086	Identifier	false		6209071	0					
ANR	6209087	IdentifierDeclStatement	"struct ctxFcnMatchCB ctx = { a , fcn , cb , user , 0 } ;"	1914:1:45096:45146	6209071	1	True				
ANR	6209088	IdentifierDecl	"ctx = { a , fcn , cb , user , 0 }"		6209071	0					
ANR	6209089	IdentifierDeclType	struct ctxFcnMatchCB		6209071	0					
ANR	6209090	Identifier	ctx		6209071	1					
ANR	6209091	AssignmentExpression	"ctx = { a , fcn , cb , user , 0 }"		6209071	2		=			
ANR	6209092	Identifier	ctx		6209071	0					
ANR	6209093	InitializerList	a		6209071	1					
ANR	6209094	Identifier	a		6209071	0					
ANR	6209095	Identifier	fcn		6209071	1					
ANR	6209096	Identifier	cb		6209071	2					
ANR	6209097	Identifier	user		6209071	3					
ANR	6209098	PrimaryExpression	0		6209071	4					
ANR	6209099	ReturnStatement	"return r_sign_foreach ( a , refsMatchCB , & ctx ) ;"	1915:1:45149:45193	6209071	2	True				
ANR	6209100	CallExpression	"r_sign_foreach ( a , refsMatchCB , & ctx )"		6209071	0					
ANR	6209101	Callee	r_sign_foreach		6209071	0					
ANR	6209102	Identifier	r_sign_foreach		6209071	0					
ANR	6209103	ArgumentList	a		6209071	1					
ANR	6209104	Argument	a		6209071	0					
ANR	6209105	Identifier	a		6209071	0					
ANR	6209106	Argument	refsMatchCB		6209071	1					
ANR	6209107	Identifier	refsMatchCB		6209071	0					
ANR	6209108	Argument	& ctx		6209071	2					
ANR	6209109	UnaryOperationExpression	& ctx		6209071	0					
ANR	6209110	UnaryOperator	&		6209071	0					
ANR	6209111	Identifier	ctx		6209071	1					
ANR	6209112	ReturnType	R_API bool		6209071	1					
ANR	6209113	Identifier	r_sign_match_refs		6209071	2					
ANR	6209114	ParameterList	"RAnal * a , RAnalFunction * fcn , RSignRefsMatchCallback cb , void * user"		6209071	3					
ANR	6209115	Parameter	RAnal * a	1912:29:44977:44984	6209071	0	True				
ANR	6209116	ParameterType	RAnal *		6209071	0					
ANR	6209117	Identifier	a		6209071	1					
ANR	6209118	Parameter	RAnalFunction * fcn	1912:39:44987:45004	6209071	1	True				
ANR	6209119	ParameterType	RAnalFunction *		6209071	0					
ANR	6209120	Identifier	fcn		6209071	1					
ANR	6209121	Parameter	RSignRefsMatchCallback cb	1912:59:45007:45031	6209071	2	True				
ANR	6209122	ParameterType	RSignRefsMatchCallback		6209071	0					
ANR	6209123	Identifier	cb		6209071	1					
ANR	6209124	Parameter	void * user	1912:86:45034:45043	6209071	3	True				
ANR	6209125	ParameterType	void *		6209071	0					
ANR	6209126	Identifier	user		6209071	1					
ANR	6209127	CFGEntryNode	ENTRY		6209071		True				
ANR	6209128	CFGExitNode	EXIT		6209071		True				
ANR	6209129	Symbol	fcn		6209071						
ANR	6209130	Symbol	a		6209071						
ANR	6209131	Symbol	ctx		6209071						
ANR	6209132	Symbol	refsMatchCB		6209071						
ANR	6209133	Symbol	false		6209071						
ANR	6209134	Symbol	r_sign_foreach		6209071						
ANR	6209135	Symbol	& ctx		6209071						
ANR	6209136	Symbol	user		6209071						
ANR	6209137	Symbol	cb		6209071						
ANR	6209138	Function	varsMatchCB	1918:0:45198:45948							
ANR	6209139	FunctionDef	"varsMatchCB (RSignItem * it , void * user)"		6209138	0					
ANR	6209140	CompoundStatement		1918:50:45248:45948	6209138	0					
ANR	6209141	IdentifierDeclStatement	struct ctxFcnMatchCB * ctx = ( struct ctxFcnMatchCB * ) user ;	1919:1:45251:45308	6209138	0	True				
ANR	6209142	IdentifierDecl	* ctx = ( struct ctxFcnMatchCB * ) user		6209138	0					
ANR	6209143	IdentifierDeclType	struct ctxFcnMatchCB *		6209138	0					
ANR	6209144	Identifier	ctx		6209138	1					
ANR	6209145	AssignmentExpression	* ctx = ( struct ctxFcnMatchCB * ) user		6209138	2		=			
ANR	6209146	Identifier	ctx		6209138	0					
ANR	6209147	CastExpression	( struct ctxFcnMatchCB * ) user		6209138	1					
ANR	6209148	CastTarget	struct ctxFcnMatchCB *		6209138	0					
ANR	6209149	Identifier	user		6209138	1					
ANR	6209150	IdentifierDeclStatement	RList * vars = NULL ;	1920:1:45311:45329	6209138	1	True				
ANR	6209151	IdentifierDecl	* vars = NULL		6209138	0					
ANR	6209152	IdentifierDeclType	RList *		6209138	0					
ANR	6209153	Identifier	vars		6209138	1					
ANR	6209154	AssignmentExpression	* vars = NULL		6209138	2		=			
ANR	6209155	Identifier	NULL		6209138	0					
ANR	6209156	Identifier	NULL		6209138	1					
ANR	6209157	IdentifierDeclStatement	"char * var_a = NULL , * var_b = NULL ;"	1921:1:45332:45365	6209138	2	True				
ANR	6209158	IdentifierDecl	* var_a = NULL		6209138	0					
ANR	6209159	IdentifierDeclType	char *		6209138	0					
ANR	6209160	Identifier	var_a		6209138	1					
ANR	6209161	AssignmentExpression	* var_a = NULL		6209138	2		=			
ANR	6209162	Identifier	NULL		6209138	0					
ANR	6209163	Identifier	NULL		6209138	1					
ANR	6209164	IdentifierDecl	* var_b = NULL		6209138	1					
ANR	6209165	IdentifierDeclType	char *		6209138	0					
ANR	6209166	Identifier	var_b		6209138	1					
ANR	6209167	AssignmentExpression	* var_b = NULL		6209138	2		=			
ANR	6209168	Identifier	NULL		6209138	0					
ANR	6209169	Identifier	NULL		6209138	1					
ANR	6209170	IdentifierDeclStatement	"int i = 0 , retval = 1 ;"	1922:1:45368:45389	6209138	3	True				
ANR	6209171	IdentifierDecl	i = 0		6209138	0					
ANR	6209172	IdentifierDeclType	int		6209138	0					
ANR	6209173	Identifier	i		6209138	1					
ANR	6209174	AssignmentExpression	i = 0		6209138	2		=			
ANR	6209175	Identifier	i		6209138	0					
ANR	6209176	PrimaryExpression	0		6209138	1					
ANR	6209177	IdentifierDecl	retval = 1		6209138	1					
ANR	6209178	IdentifierDeclType	int		6209138	0					
ANR	6209179	Identifier	retval		6209138	1					
ANR	6209180	AssignmentExpression	retval = 1		6209138	2		=			
ANR	6209181	Identifier	retval		6209138	0					
ANR	6209182	PrimaryExpression	1		6209138	1					
ANR	6209183	IfStatement	if ( ! it -> vars )		6209138	4					
ANR	6209184	Condition	! it -> vars	1924:5:45397:45405	6209138	0	True				
ANR	6209185	UnaryOperationExpression	! it -> vars		6209138	0					
ANR	6209186	UnaryOperator	!		6209138	0					
ANR	6209187	PtrMemberAccess	it -> vars		6209138	1					
ANR	6209188	Identifier	it		6209138	0					
ANR	6209189	Identifier	vars		6209138	1					
ANR	6209190	CompoundStatement		7:16:159:159	6209138	1					
ANR	6209191	ReturnStatement	return 1 ;	1925:2:45412:45420	6209138	0	True				
ANR	6209192	PrimaryExpression	1		6209138	0					
ANR	6209193	ExpressionStatement	"vars = r_sign_fcn_vars ( ctx -> anal , ctx -> fcn )"	1929:1:45471:45515	6209138	5	True				
ANR	6209194	AssignmentExpression	"vars = r_sign_fcn_vars ( ctx -> anal , ctx -> fcn )"		6209138	0		=			
ANR	6209195	Identifier	vars		6209138	0					
ANR	6209196	CallExpression	"r_sign_fcn_vars ( ctx -> anal , ctx -> fcn )"		6209138	1					
ANR	6209197	Callee	r_sign_fcn_vars		6209138	0					
ANR	6209198	Identifier	r_sign_fcn_vars		6209138	0					
ANR	6209199	ArgumentList	ctx -> anal		6209138	1					
ANR	6209200	Argument	ctx -> anal		6209138	0					
ANR	6209201	PtrMemberAccess	ctx -> anal		6209138	0					
ANR	6209202	Identifier	ctx		6209138	0					
ANR	6209203	Identifier	anal		6209138	1					
ANR	6209204	Argument	ctx -> fcn		6209138	1					
ANR	6209205	PtrMemberAccess	ctx -> fcn		6209138	0					
ANR	6209206	Identifier	ctx		6209138	0					
ANR	6209207	Identifier	fcn		6209138	1					
ANR	6209208	IfStatement	if ( ! vars )		6209138	6					
ANR	6209209	Condition	! vars	1930:5:45522:45526	6209138	0	True				
ANR	6209210	UnaryOperationExpression	! vars		6209138	0					
ANR	6209211	UnaryOperator	!		6209138	0					
ANR	6209212	Identifier	vars		6209138	1					
ANR	6209213	CompoundStatement		13:12:280:280	6209138	1					
ANR	6209214	ReturnStatement	return 1 ;	1931:2:45533:45541	6209138	0	True				
ANR	6209215	PrimaryExpression	1		6209138	0					
ANR	6209216	ForStatement	for ( i = 0 ; ; i ++ )		6209138	7					
ANR	6209217	ForInit	i = 0 ;	1934:6:45553:45558	6209138	0	True				
ANR	6209218	AssignmentExpression	i = 0		6209138	0		=			
ANR	6209219	Identifier	i		6209138	0					
ANR	6209220	PrimaryExpression	0		6209138	1					
ANR	6209221	PostIncDecOperationExpression	i ++	1934:15:45562:45564	6209138	1	True				
ANR	6209222	Identifier	i		6209138	0					
ANR	6209223	IncDec	++		6209138	1					
ANR	6209224	CompoundStatement		17:20:318:318	6209138	2					
ANR	6209225	ExpressionStatement	"var_a = ( char * ) r_list_get_n ( it -> vars , i )"	1935:2:45571:45614	6209138	0	True				
ANR	6209226	AssignmentExpression	"var_a = ( char * ) r_list_get_n ( it -> vars , i )"		6209138	0		=			
ANR	6209227	Identifier	var_a		6209138	0					
ANR	6209228	CastExpression	"( char * ) r_list_get_n ( it -> vars , i )"		6209138	1					
ANR	6209229	CastTarget	char *		6209138	0					
ANR	6209230	CallExpression	"r_list_get_n ( it -> vars , i )"		6209138	1					
ANR	6209231	Callee	r_list_get_n		6209138	0					
ANR	6209232	Identifier	r_list_get_n		6209138	0					
ANR	6209233	ArgumentList	it -> vars		6209138	1					
ANR	6209234	Argument	it -> vars		6209138	0					
ANR	6209235	PtrMemberAccess	it -> vars		6209138	0					
ANR	6209236	Identifier	it		6209138	0					
ANR	6209237	Identifier	vars		6209138	1					
ANR	6209238	Argument	i		6209138	1					
ANR	6209239	Identifier	i		6209138	0					
ANR	6209240	ExpressionStatement	"var_b = ( char * ) r_list_get_n ( vars , i )"	1936:2:45618:45657	6209138	1	True				
ANR	6209241	AssignmentExpression	"var_b = ( char * ) r_list_get_n ( vars , i )"		6209138	0		=			
ANR	6209242	Identifier	var_b		6209138	0					
ANR	6209243	CastExpression	"( char * ) r_list_get_n ( vars , i )"		6209138	1					
ANR	6209244	CastTarget	char *		6209138	0					
ANR	6209245	CallExpression	"r_list_get_n ( vars , i )"		6209138	1					
ANR	6209246	Callee	r_list_get_n		6209138	0					
ANR	6209247	Identifier	r_list_get_n		6209138	0					
ANR	6209248	ArgumentList	vars		6209138	1					
ANR	6209249	Argument	vars		6209138	0					
ANR	6209250	Identifier	vars		6209138	0					
ANR	6209251	Argument	i		6209138	1					
ANR	6209252	Identifier	i		6209138	0					
ANR	6209253	IfStatement	if ( ! var_a || ! var_b )		6209138	2					
ANR	6209254	Condition	! var_a || ! var_b	1938:6:45666:45681	6209138	0	True				
ANR	6209255	OrExpression	! var_a || ! var_b		6209138	0		||			
ANR	6209256	UnaryOperationExpression	! var_a		6209138	0					
ANR	6209257	UnaryOperator	!		6209138	0					
ANR	6209258	Identifier	var_a		6209138	1					
ANR	6209259	UnaryOperationExpression	! var_b		6209138	1					
ANR	6209260	UnaryOperator	!		6209138	0					
ANR	6209261	Identifier	var_b		6209138	1					
ANR	6209262	CompoundStatement		21:24:435:435	6209138	1					
ANR	6209263	IfStatement	if ( var_a != var_b )		6209138	0					
ANR	6209264	Condition	var_a != var_b	1939:7:45693:45706	6209138	0	True				
ANR	6209265	EqualityExpression	var_a != var_b		6209138	0		!=			
ANR	6209266	Identifier	var_a		6209138	0					
ANR	6209267	Identifier	var_b		6209138	1					
ANR	6209268	CompoundStatement		22:23:460:460	6209138	1					
ANR	6209269	ExpressionStatement	retval = 1	1940:4:45715:45725	6209138	0	True				
ANR	6209270	AssignmentExpression	retval = 1		6209138	0		=			
ANR	6209271	Identifier	retval		6209138	0					
ANR	6209272	PrimaryExpression	1		6209138	1					
ANR	6209273	GotoStatement	goto out ;	1941:4:45731:45739	6209138	1	True				
ANR	6209274	Identifier	out		6209138	0					
ANR	6209275	BreakStatement	break ;	1943:3:45749:45754	6209138	1	True				
ANR	6209276	IfStatement	"if ( strcmp ( var_a , var_b ) )"		6209138	3					
ANR	6209277	Condition	"strcmp ( var_a , var_b )"	1945:6:45766:45786	6209138	0	True				
ANR	6209278	CallExpression	"strcmp ( var_a , var_b )"		6209138	0					
ANR	6209279	Callee	strcmp		6209138	0					
ANR	6209280	Identifier	strcmp		6209138	0					
ANR	6209281	ArgumentList	var_a		6209138	1					
ANR	6209282	Argument	var_a		6209138	0					
ANR	6209283	Identifier	var_a		6209138	0					
ANR	6209284	Argument	var_b		6209138	1					
ANR	6209285	Identifier	var_b		6209138	0					
ANR	6209286	CompoundStatement		28:29:540:540	6209138	1					
ANR	6209287	ExpressionStatement	retval = 1	1946:3:45794:45804	6209138	0	True				
ANR	6209288	AssignmentExpression	retval = 1		6209138	0		=			
ANR	6209289	Identifier	retval		6209138	0					
ANR	6209290	PrimaryExpression	1		6209138	1					
ANR	6209291	GotoStatement	goto out ;	1947:3:45809:45817	6209138	1	True				
ANR	6209292	Identifier	out		6209138	0					
ANR	6209293	IfStatement	if ( ctx -> cb )		6209138	8					
ANR	6209294	Condition	ctx -> cb	1951:5:45832:45838	6209138	0	True				
ANR	6209295	PtrMemberAccess	ctx -> cb		6209138	0					
ANR	6209296	Identifier	ctx		6209138	0					
ANR	6209297	Identifier	cb		6209138	1					
ANR	6209298	CompoundStatement		34:14:592:592	6209138	1					
ANR	6209299	ExpressionStatement	"retval = ctx -> cb ( it , ctx -> fcn , ctx -> user )"	1952:2:45845:45887	6209138	0	True				
ANR	6209300	AssignmentExpression	"retval = ctx -> cb ( it , ctx -> fcn , ctx -> user )"		6209138	0		=			
ANR	6209301	Identifier	retval		6209138	0					
ANR	6209302	CallExpression	"ctx -> cb ( it , ctx -> fcn , ctx -> user )"		6209138	1					
ANR	6209303	Callee	ctx -> cb		6209138	0					
ANR	6209304	PtrMemberAccess	ctx -> cb		6209138	0					
ANR	6209305	Identifier	ctx		6209138	0					
ANR	6209306	Identifier	cb		6209138	1					
ANR	6209307	ArgumentList	it		6209138	1					
ANR	6209308	Argument	it		6209138	0					
ANR	6209309	Identifier	it		6209138	0					
ANR	6209310	Argument	ctx -> fcn		6209138	1					
ANR	6209311	PtrMemberAccess	ctx -> fcn		6209138	0					
ANR	6209312	Identifier	ctx		6209138	0					
ANR	6209313	Identifier	fcn		6209138	1					
ANR	6209314	Argument	ctx -> user		6209138	2					
ANR	6209315	PtrMemberAccess	ctx -> user		6209138	0					
ANR	6209316	Identifier	ctx		6209138	0					
ANR	6209317	Identifier	user		6209138	1					
ANR	6209318	GotoStatement	goto out ;	1953:2:45891:45899	6209138	1	True				
ANR	6209319	Identifier	out		6209138	0					
ANR	6209320	Label	out :	1956:0:45905:45908	6209138	9	True				
ANR	6209321	Identifier	out		6209138	0					
ANR	6209322	ExpressionStatement	r_list_free ( vars )	1957:1:45911:45929	6209138	10	True				
ANR	6209323	CallExpression	r_list_free ( vars )		6209138	0					
ANR	6209324	Callee	r_list_free		6209138	0					
ANR	6209325	Identifier	r_list_free		6209138	0					
ANR	6209326	ArgumentList	vars		6209138	1					
ANR	6209327	Argument	vars		6209138	0					
ANR	6209328	Identifier	vars		6209138	0					
ANR	6209329	ReturnStatement	return retval ;	1959:1:45933:45946	6209138	11	True				
ANR	6209330	Identifier	retval		6209138	0					
ANR	6209331	ReturnType	static int		6209138	1					
ANR	6209332	Identifier	varsMatchCB		6209138	2					
ANR	6209333	ParameterList	"RSignItem * it , void * user"		6209138	3					
ANR	6209334	Parameter	RSignItem * it	1918:23:45221:45233	6209138	0	True				
ANR	6209335	ParameterType	RSignItem *		6209138	0					
ANR	6209336	Identifier	it		6209138	1					
ANR	6209337	Parameter	void * user	1918:38:45236:45245	6209138	1	True				
ANR	6209338	ParameterType	void *		6209138	0					
ANR	6209339	Identifier	user		6209138	1					
ANR	6209340	CFGEntryNode	ENTRY		6209138		True				
ANR	6209341	CFGExitNode	EXIT		6209138		True				
ANR	6209342	InfiniteForNode	true		6209138		True				
ANR	6209343	Symbol	it -> vars		6209138						
ANR	6209344	Symbol	strcmp		6209138						
ANR	6209345	Symbol	NULL		6209138						
ANR	6209346	Symbol	var_a		6209138						
ANR	6209347	Symbol	ctx		6209138						
ANR	6209348	Symbol	var_b		6209138						
ANR	6209349	Symbol	i		6209138						
ANR	6209350	Symbol	ctx -> anal		6209138						
ANR	6209351	Symbol	r_list_get_n		6209138						
ANR	6209352	Symbol	ctx -> cb		6209138						
ANR	6209353	Symbol	it		6209138						
ANR	6209354	Symbol	retval		6209138						
ANR	6209355	Symbol	* ctx		6209138						
ANR	6209356	Symbol	ctx -> user		6209138						
ANR	6209357	Symbol	* it		6209138						
ANR	6209358	Symbol	r_sign_fcn_vars		6209138						
ANR	6209359	Symbol	ctx -> fcn		6209138						
ANR	6209360	Symbol	vars		6209138						
ANR	6209361	Symbol	user		6209138						
ANR	6209362	Function	r_sign_match_vars	1962:0:45951:46198							
ANR	6209363	FunctionDef	"r_sign_match_vars (RAnal * a , RAnalFunction * fcn , RSignVarsMatchCallback cb , void * user)"		6209362	0					
ANR	6209364	CompoundStatement		1962:98:46049:46198	6209362	0					
ANR	6209365	ExpressionStatement	"r_return_val_if_fail ( a && fcn && cb , false )"	1963:1:46052:46096	6209362	0	True				
ANR	6209366	CallExpression	"r_return_val_if_fail ( a && fcn && cb , false )"		6209362	0					
ANR	6209367	Callee	r_return_val_if_fail		6209362	0					
ANR	6209368	Identifier	r_return_val_if_fail		6209362	0					
ANR	6209369	ArgumentList	a && fcn && cb		6209362	1					
ANR	6209370	Argument	a && fcn && cb		6209362	0					
ANR	6209371	AndExpression	a && fcn && cb		6209362	0		&&			
ANR	6209372	Identifier	a		6209362	0					
ANR	6209373	AndExpression	fcn && cb		6209362	1		&&			
ANR	6209374	Identifier	fcn		6209362	0					
ANR	6209375	Identifier	cb		6209362	1					
ANR	6209376	Argument	false		6209362	1					
ANR	6209377	Identifier	false		6209362	0					
ANR	6209378	IdentifierDeclStatement	"struct ctxFcnMatchCB ctx = { a , fcn , cb , user , 0 } ;"	1964:1:46099:46149	6209362	1	True				
ANR	6209379	IdentifierDecl	"ctx = { a , fcn , cb , user , 0 }"		6209362	0					
ANR	6209380	IdentifierDeclType	struct ctxFcnMatchCB		6209362	0					
ANR	6209381	Identifier	ctx		6209362	1					
ANR	6209382	AssignmentExpression	"ctx = { a , fcn , cb , user , 0 }"		6209362	2		=			
ANR	6209383	Identifier	ctx		6209362	0					
ANR	6209384	InitializerList	a		6209362	1					
ANR	6209385	Identifier	a		6209362	0					
ANR	6209386	Identifier	fcn		6209362	1					
ANR	6209387	Identifier	cb		6209362	2					
ANR	6209388	Identifier	user		6209362	3					
ANR	6209389	PrimaryExpression	0		6209362	4					
ANR	6209390	ReturnStatement	"return r_sign_foreach ( a , varsMatchCB , & ctx ) ;"	1965:1:46152:46196	6209362	2	True				
ANR	6209391	CallExpression	"r_sign_foreach ( a , varsMatchCB , & ctx )"		6209362	0					
ANR	6209392	Callee	r_sign_foreach		6209362	0					
ANR	6209393	Identifier	r_sign_foreach		6209362	0					
ANR	6209394	ArgumentList	a		6209362	1					
ANR	6209395	Argument	a		6209362	0					
ANR	6209396	Identifier	a		6209362	0					
ANR	6209397	Argument	varsMatchCB		6209362	1					
ANR	6209398	Identifier	varsMatchCB		6209362	0					
ANR	6209399	Argument	& ctx		6209362	2					
ANR	6209400	UnaryOperationExpression	& ctx		6209362	0					
ANR	6209401	UnaryOperator	&		6209362	0					
ANR	6209402	Identifier	ctx		6209362	1					
ANR	6209403	ReturnType	R_API bool		6209362	1					
ANR	6209404	Identifier	r_sign_match_vars		6209362	2					
ANR	6209405	ParameterList	"RAnal * a , RAnalFunction * fcn , RSignVarsMatchCallback cb , void * user"		6209362	3					
ANR	6209406	Parameter	RAnal * a	1962:29:45980:45987	6209362	0	True				
ANR	6209407	ParameterType	RAnal *		6209362	0					
ANR	6209408	Identifier	a		6209362	1					
ANR	6209409	Parameter	RAnalFunction * fcn	1962:39:45990:46007	6209362	1	True				
ANR	6209410	ParameterType	RAnalFunction *		6209362	0					
ANR	6209411	Identifier	fcn		6209362	1					
ANR	6209412	Parameter	RSignVarsMatchCallback cb	1962:59:46010:46034	6209362	2	True				
ANR	6209413	ParameterType	RSignVarsMatchCallback		6209362	0					
ANR	6209414	Identifier	cb		6209362	1					
ANR	6209415	Parameter	void * user	1962:86:46037:46046	6209362	3	True				
ANR	6209416	ParameterType	void *		6209362	0					
ANR	6209417	Identifier	user		6209362	1					
ANR	6209418	CFGEntryNode	ENTRY		6209362		True				
ANR	6209419	CFGExitNode	EXIT		6209362		True				
ANR	6209420	Symbol	fcn		6209362						
ANR	6209421	Symbol	a		6209362						
ANR	6209422	Symbol	ctx		6209362						
ANR	6209423	Symbol	false		6209362						
ANR	6209424	Symbol	r_sign_foreach		6209362						
ANR	6209425	Symbol	& ctx		6209362						
ANR	6209426	Symbol	user		6209362						
ANR	6209427	Symbol	varsMatchCB		6209362						
ANR	6209428	Symbol	cb		6209362						
ANR	6209429	Function	r_sign_item_new	1969:0:46202:46350							
ANR	6209430	FunctionDef	r_sign_item_new ()		6209429	0					
ANR	6209431	CompoundStatement		1969:35:46237:46350	6209429	0					
ANR	6209432	IdentifierDeclStatement	RSignItem * ret = R_NEW0 ( RSignItem ) ;	1970:1:46240:46275	6209429	0	True				
ANR	6209433	IdentifierDecl	* ret = R_NEW0 ( RSignItem )		6209429	0					
ANR	6209434	IdentifierDeclType	RSignItem *		6209429	0					
ANR	6209435	Identifier	ret		6209429	1					
ANR	6209436	AssignmentExpression	* ret = R_NEW0 ( RSignItem )		6209429	2		=			
ANR	6209437	Identifier	ret		6209429	0					
ANR	6209438	CallExpression	R_NEW0 ( RSignItem )		6209429	1					
ANR	6209439	Callee	R_NEW0		6209429	0					
ANR	6209440	Identifier	R_NEW0		6209429	0					
ANR	6209441	ArgumentList	RSignItem		6209429	1					
ANR	6209442	Argument	RSignItem		6209429	0					
ANR	6209443	Identifier	RSignItem		6209429	0					
ANR	6209444	IfStatement	if ( ret )		6209429	1					
ANR	6209445	Condition	ret	1971:5:46282:46284	6209429	0	True				
ANR	6209446	Identifier	ret		6209429	0					
ANR	6209447	CompoundStatement		3:10:49:49	6209429	1					
ANR	6209448	ExpressionStatement	ret -> addr = UT64_MAX	1972:2:46291:46311	6209429	0	True				
ANR	6209449	AssignmentExpression	ret -> addr = UT64_MAX		6209429	0		=			
ANR	6209450	PtrMemberAccess	ret -> addr		6209429	0					
ANR	6209451	Identifier	ret		6209429	0					
ANR	6209452	Identifier	addr		6209429	1					
ANR	6209453	Identifier	UT64_MAX		6209429	1					
ANR	6209454	ExpressionStatement	ret -> space = NULL	1973:2:46315:46332	6209429	1	True				
ANR	6209455	AssignmentExpression	ret -> space = NULL		6209429	0		=			
ANR	6209456	PtrMemberAccess	ret -> space		6209429	0					
ANR	6209457	Identifier	ret		6209429	0					
ANR	6209458	Identifier	space		6209429	1					
ANR	6209459	Identifier	NULL		6209429	1					
ANR	6209460	ReturnStatement	return ret ;	1975:1:46338:46348	6209429	2	True				
ANR	6209461	Identifier	ret		6209429	0					
ANR	6209462	ReturnType	R_API RSignItem *		6209429	1					
ANR	6209463	Identifier	r_sign_item_new		6209429	2					
ANR	6209464	ParameterList			6209429	3					
ANR	6209465	CFGEntryNode	ENTRY		6209429		True				
ANR	6209466	CFGExitNode	EXIT		6209429		True				
ANR	6209467	Symbol	ret		6209429						
ANR	6209468	Symbol	ret -> space		6209429						
ANR	6209469	Symbol	R_NEW0		6209429						
ANR	6209470	Symbol	NULL		6209429						
ANR	6209471	Symbol	* ret		6209429						
ANR	6209472	Symbol	UT64_MAX		6209429						
ANR	6209473	Symbol	RSignItem		6209429						
ANR	6209474	Symbol	ret -> addr		6209429						
ANR	6209475	Function	r_sign_item_dup	1978:0:46353:47717							
ANR	6209476	FunctionDef	r_sign_item_dup (RSignItem * it)		6209475	0					
ANR	6209477	CompoundStatement		1978:48:46401:47717	6209475	0					
ANR	6209478	IdentifierDeclStatement	RListIter * iter = NULL ;	1979:1:46404:46426	6209475	0	True				
ANR	6209479	IdentifierDecl	* iter = NULL		6209475	0					
ANR	6209480	IdentifierDeclType	RListIter *		6209475	0					
ANR	6209481	Identifier	iter		6209475	1					
ANR	6209482	AssignmentExpression	* iter = NULL		6209475	2		=			
ANR	6209483	Identifier	NULL		6209475	0					
ANR	6209484	Identifier	NULL		6209475	1					
ANR	6209485	IdentifierDeclStatement	char * ref = NULL ;	1980:1:46429:46445	6209475	1	True				
ANR	6209486	IdentifierDecl	* ref = NULL		6209475	0					
ANR	6209487	IdentifierDeclType	char *		6209475	0					
ANR	6209488	Identifier	ref		6209475	1					
ANR	6209489	AssignmentExpression	* ref = NULL		6209475	2		=			
ANR	6209490	Identifier	NULL		6209475	0					
ANR	6209491	Identifier	NULL		6209475	1					
ANR	6209492	IfStatement	if ( ! it )		6209475	2					
ANR	6209493	Condition	! it	1981:5:46452:46454	6209475	0	True				
ANR	6209494	UnaryOperationExpression	! it		6209475	0					
ANR	6209495	UnaryOperator	!		6209475	0					
ANR	6209496	Identifier	it		6209475	1					
ANR	6209497	CompoundStatement		4:10:55:55	6209475	1					
ANR	6209498	ReturnStatement	return NULL ;	1982:2:46461:46472	6209475	0	True				
ANR	6209499	Identifier	NULL		6209475	0					
ANR	6209500	IdentifierDeclStatement	RSignItem * ret = r_sign_item_new ( ) ;	1984:1:46478:46513	6209475	3	True				
ANR	6209501	IdentifierDecl	* ret = r_sign_item_new ( )		6209475	0					
ANR	6209502	IdentifierDeclType	RSignItem *		6209475	0					
ANR	6209503	Identifier	ret		6209475	1					
ANR	6209504	AssignmentExpression	* ret = r_sign_item_new ( )		6209475	2		=			
ANR	6209505	Identifier	ret		6209475	0					
ANR	6209506	CallExpression	r_sign_item_new ( )		6209475	1					
ANR	6209507	Callee	r_sign_item_new		6209475	0					
ANR	6209508	Identifier	r_sign_item_new		6209475	0					
ANR	6209509	ArgumentList			6209475	1					
ANR	6209510	IfStatement	if ( ! ret )		6209475	4					
ANR	6209511	Condition	! ret	1985:5:46520:46523	6209475	0	True				
ANR	6209512	UnaryOperationExpression	! ret		6209475	0					
ANR	6209513	UnaryOperator	!		6209475	0					
ANR	6209514	Identifier	ret		6209475	1					
ANR	6209515	CompoundStatement		8:11:124:124	6209475	1					
ANR	6209516	ReturnStatement	return NULL ;	1986:2:46530:46541	6209475	0	True				
ANR	6209517	Identifier	NULL		6209475	0					
ANR	6209518	ExpressionStatement	ret -> name = r_str_new ( it -> name )	1988:1:46547:46579	6209475	5	True				
ANR	6209519	AssignmentExpression	ret -> name = r_str_new ( it -> name )		6209475	0		=			
ANR	6209520	PtrMemberAccess	ret -> name		6209475	0					
ANR	6209521	Identifier	ret		6209475	0					
ANR	6209522	Identifier	name		6209475	1					
ANR	6209523	CallExpression	r_str_new ( it -> name )		6209475	1					
ANR	6209524	Callee	r_str_new		6209475	0					
ANR	6209525	Identifier	r_str_new		6209475	0					
ANR	6209526	ArgumentList	it -> name		6209475	1					
ANR	6209527	Argument	it -> name		6209475	0					
ANR	6209528	PtrMemberAccess	it -> name		6209475	0					
ANR	6209529	Identifier	it		6209475	0					
ANR	6209530	Identifier	name		6209475	1					
ANR	6209531	IfStatement	if ( it -> realname )		6209475	6					
ANR	6209532	Condition	it -> realname	1989:5:46586:46597	6209475	0	True				
ANR	6209533	PtrMemberAccess	it -> realname		6209475	0					
ANR	6209534	Identifier	it		6209475	0					
ANR	6209535	Identifier	realname		6209475	1					
ANR	6209536	CompoundStatement		12:19:198:198	6209475	1					
ANR	6209537	ExpressionStatement	ret -> realname = r_str_newf ( it -> realname )	1990:2:46604:46645	6209475	0	True				
ANR	6209538	AssignmentExpression	ret -> realname = r_str_newf ( it -> realname )		6209475	0		=			
ANR	6209539	PtrMemberAccess	ret -> realname		6209475	0					
ANR	6209540	Identifier	ret		6209475	0					
ANR	6209541	Identifier	realname		6209475	1					
ANR	6209542	CallExpression	r_str_newf ( it -> realname )		6209475	1					
ANR	6209543	Callee	r_str_newf		6209475	0					
ANR	6209544	Identifier	r_str_newf		6209475	0					
ANR	6209545	ArgumentList	it -> realname		6209475	1					
ANR	6209546	Argument	it -> realname		6209475	0					
ANR	6209547	PtrMemberAccess	it -> realname		6209475	0					
ANR	6209548	Identifier	it		6209475	0					
ANR	6209549	Identifier	realname		6209475	1					
ANR	6209550	IfStatement	if ( it -> comment )		6209475	7					
ANR	6209551	Condition	it -> comment	1992:5:46655:46665	6209475	0	True				
ANR	6209552	PtrMemberAccess	it -> comment		6209475	0					
ANR	6209553	Identifier	it		6209475	0					
ANR	6209554	Identifier	comment		6209475	1					
ANR	6209555	CompoundStatement		15:18:266:266	6209475	1					
ANR	6209556	ExpressionStatement	ret -> comment = r_str_newf ( it -> comment )	1993:2:46672:46711	6209475	0	True				
ANR	6209557	AssignmentExpression	ret -> comment = r_str_newf ( it -> comment )		6209475	0		=			
ANR	6209558	PtrMemberAccess	ret -> comment		6209475	0					
ANR	6209559	Identifier	ret		6209475	0					
ANR	6209560	Identifier	comment		6209475	1					
ANR	6209561	CallExpression	r_str_newf ( it -> comment )		6209475	1					
ANR	6209562	Callee	r_str_newf		6209475	0					
ANR	6209563	Identifier	r_str_newf		6209475	0					
ANR	6209564	ArgumentList	it -> comment		6209475	1					
ANR	6209565	Argument	it -> comment		6209475	0					
ANR	6209566	PtrMemberAccess	it -> comment		6209475	0					
ANR	6209567	Identifier	it		6209475	0					
ANR	6209568	Identifier	comment		6209475	1					
ANR	6209569	ExpressionStatement	ret -> space = it -> space	1995:1:46717:46739	6209475	8	True				
ANR	6209570	AssignmentExpression	ret -> space = it -> space		6209475	0		=			
ANR	6209571	PtrMemberAccess	ret -> space		6209475	0					
ANR	6209572	Identifier	ret		6209475	0					
ANR	6209573	Identifier	space		6209475	1					
ANR	6209574	PtrMemberAccess	it -> space		6209475	1					
ANR	6209575	Identifier	it		6209475	0					
ANR	6209576	Identifier	space		6209475	1					
ANR	6209577	IfStatement	if ( it -> bytes )		6209475	9					
ANR	6209578	Condition	it -> bytes	1997:5:46747:46755	6209475	0	True				
ANR	6209579	PtrMemberAccess	it -> bytes		6209475	0					
ANR	6209580	Identifier	it		6209475	0					
ANR	6209581	Identifier	bytes		6209475	1					
ANR	6209582	CompoundStatement		20:16:356:356	6209475	1					
ANR	6209583	ExpressionStatement	ret -> bytes = R_NEW0 ( RSignBytes )	1998:2:46762:46794	6209475	0	True				
ANR	6209584	AssignmentExpression	ret -> bytes = R_NEW0 ( RSignBytes )		6209475	0		=			
ANR	6209585	PtrMemberAccess	ret -> bytes		6209475	0					
ANR	6209586	Identifier	ret		6209475	0					
ANR	6209587	Identifier	bytes		6209475	1					
ANR	6209588	CallExpression	R_NEW0 ( RSignBytes )		6209475	1					
ANR	6209589	Callee	R_NEW0		6209475	0					
ANR	6209590	Identifier	R_NEW0		6209475	0					
ANR	6209591	ArgumentList	RSignBytes		6209475	1					
ANR	6209592	Argument	RSignBytes		6209475	0					
ANR	6209593	Identifier	RSignBytes		6209475	0					
ANR	6209594	IfStatement	if ( ! ret -> bytes )		6209475	1					
ANR	6209595	Condition	! ret -> bytes	1999:6:46802:46812	6209475	0	True				
ANR	6209596	UnaryOperationExpression	! ret -> bytes		6209475	0					
ANR	6209597	UnaryOperator	!		6209475	0					
ANR	6209598	PtrMemberAccess	ret -> bytes		6209475	1					
ANR	6209599	Identifier	ret		6209475	0					
ANR	6209600	Identifier	bytes		6209475	1					
ANR	6209601	CompoundStatement		22:19:413:413	6209475	1					
ANR	6209602	ExpressionStatement	r_sign_item_free ( ret )	2000:3:46820:46842	6209475	0	True				
ANR	6209603	CallExpression	r_sign_item_free ( ret )		6209475	0					
ANR	6209604	Callee	r_sign_item_free		6209475	0					
ANR	6209605	Identifier	r_sign_item_free		6209475	0					
ANR	6209606	ArgumentList	ret		6209475	1					
ANR	6209607	Argument	ret		6209475	0					
ANR	6209608	Identifier	ret		6209475	0					
ANR	6209609	ReturnStatement	return NULL ;	2001:3:46847:46858	6209475	1	True				
ANR	6209610	Identifier	NULL		6209475	0					
ANR	6209611	ExpressionStatement	ret -> bytes -> size = it -> bytes -> size	2003:2:46866:46900	6209475	2	True				
ANR	6209612	AssignmentExpression	ret -> bytes -> size = it -> bytes -> size		6209475	0		=			
ANR	6209613	PtrMemberAccess	ret -> bytes -> size		6209475	0					
ANR	6209614	PtrMemberAccess	ret -> bytes		6209475	0					
ANR	6209615	Identifier	ret		6209475	0					
ANR	6209616	Identifier	bytes		6209475	1					
ANR	6209617	Identifier	size		6209475	1					
ANR	6209618	PtrMemberAccess	it -> bytes -> size		6209475	1					
ANR	6209619	PtrMemberAccess	it -> bytes		6209475	0					
ANR	6209620	Identifier	it		6209475	0					
ANR	6209621	Identifier	bytes		6209475	1					
ANR	6209622	Identifier	size		6209475	1					
ANR	6209623	ExpressionStatement	ret -> bytes -> bytes = malloc ( it -> bytes -> size )	2004:2:46904:46948	6209475	3	True				
ANR	6209624	AssignmentExpression	ret -> bytes -> bytes = malloc ( it -> bytes -> size )		6209475	0		=			
ANR	6209625	PtrMemberAccess	ret -> bytes -> bytes		6209475	0					
ANR	6209626	PtrMemberAccess	ret -> bytes		6209475	0					
ANR	6209627	Identifier	ret		6209475	0					
ANR	6209628	Identifier	bytes		6209475	1					
ANR	6209629	Identifier	bytes		6209475	1					
ANR	6209630	CallExpression	malloc ( it -> bytes -> size )		6209475	1					
ANR	6209631	Callee	malloc		6209475	0					
ANR	6209632	Identifier	malloc		6209475	0					
ANR	6209633	ArgumentList	it -> bytes -> size		6209475	1					
ANR	6209634	Argument	it -> bytes -> size		6209475	0					
ANR	6209635	PtrMemberAccess	it -> bytes -> size		6209475	0					
ANR	6209636	PtrMemberAccess	it -> bytes		6209475	0					
ANR	6209637	Identifier	it		6209475	0					
ANR	6209638	Identifier	bytes		6209475	1					
ANR	6209639	Identifier	size		6209475	1					
ANR	6209640	IfStatement	if ( ! ret -> bytes -> bytes )		6209475	4					
ANR	6209641	Condition	! ret -> bytes -> bytes	2005:6:46956:46973	6209475	0	True				
ANR	6209642	UnaryOperationExpression	! ret -> bytes -> bytes		6209475	0					
ANR	6209643	UnaryOperator	!		6209475	0					
ANR	6209644	PtrMemberAccess	ret -> bytes -> bytes		6209475	1					
ANR	6209645	PtrMemberAccess	ret -> bytes		6209475	0					
ANR	6209646	Identifier	ret		6209475	0					
ANR	6209647	Identifier	bytes		6209475	1					
ANR	6209648	Identifier	bytes		6209475	1					
ANR	6209649	CompoundStatement		28:26:574:574	6209475	1					
ANR	6209650	ExpressionStatement	r_sign_item_free ( ret )	2006:3:46981:47003	6209475	0	True				
ANR	6209651	CallExpression	r_sign_item_free ( ret )		6209475	0					
ANR	6209652	Callee	r_sign_item_free		6209475	0					
ANR	6209653	Identifier	r_sign_item_free		6209475	0					
ANR	6209654	ArgumentList	ret		6209475	1					
ANR	6209655	Argument	ret		6209475	0					
ANR	6209656	Identifier	ret		6209475	0					
ANR	6209657	ReturnStatement	return NULL ;	2007:3:47008:47019	6209475	1	True				
ANR	6209658	Identifier	NULL		6209475	0					
ANR	6209659	ExpressionStatement	"memcpy ( ret -> bytes -> bytes , it -> bytes -> bytes , it -> bytes -> size )"	2009:2:47027:47088	6209475	5	True				
ANR	6209660	CallExpression	"memcpy ( ret -> bytes -> bytes , it -> bytes -> bytes , it -> bytes -> size )"		6209475	0					
ANR	6209661	Callee	memcpy		6209475	0					
ANR	6209662	Identifier	memcpy		6209475	0					
ANR	6209663	ArgumentList	ret -> bytes -> bytes		6209475	1					
ANR	6209664	Argument	ret -> bytes -> bytes		6209475	0					
ANR	6209665	PtrMemberAccess	ret -> bytes -> bytes		6209475	0					
ANR	6209666	PtrMemberAccess	ret -> bytes		6209475	0					
ANR	6209667	Identifier	ret		6209475	0					
ANR	6209668	Identifier	bytes		6209475	1					
ANR	6209669	Identifier	bytes		6209475	1					
ANR	6209670	Argument	it -> bytes -> bytes		6209475	1					
ANR	6209671	PtrMemberAccess	it -> bytes -> bytes		6209475	0					
ANR	6209672	PtrMemberAccess	it -> bytes		6209475	0					
ANR	6209673	Identifier	it		6209475	0					
ANR	6209674	Identifier	bytes		6209475	1					
ANR	6209675	Identifier	bytes		6209475	1					
ANR	6209676	Argument	it -> bytes -> size		6209475	2					
ANR	6209677	PtrMemberAccess	it -> bytes -> size		6209475	0					
ANR	6209678	PtrMemberAccess	it -> bytes		6209475	0					
ANR	6209679	Identifier	it		6209475	0					
ANR	6209680	Identifier	bytes		6209475	1					
ANR	6209681	Identifier	size		6209475	1					
ANR	6209682	ExpressionStatement	ret -> bytes -> mask = malloc ( it -> bytes -> size )	2010:2:47092:47135	6209475	6	True				
ANR	6209683	AssignmentExpression	ret -> bytes -> mask = malloc ( it -> bytes -> size )		6209475	0		=			
ANR	6209684	PtrMemberAccess	ret -> bytes -> mask		6209475	0					
ANR	6209685	PtrMemberAccess	ret -> bytes		6209475	0					
ANR	6209686	Identifier	ret		6209475	0					
ANR	6209687	Identifier	bytes		6209475	1					
ANR	6209688	Identifier	mask		6209475	1					
ANR	6209689	CallExpression	malloc ( it -> bytes -> size )		6209475	1					
ANR	6209690	Callee	malloc		6209475	0					
ANR	6209691	Identifier	malloc		6209475	0					
ANR	6209692	ArgumentList	it -> bytes -> size		6209475	1					
ANR	6209693	Argument	it -> bytes -> size		6209475	0					
ANR	6209694	PtrMemberAccess	it -> bytes -> size		6209475	0					
ANR	6209695	PtrMemberAccess	it -> bytes		6209475	0					
ANR	6209696	Identifier	it		6209475	0					
ANR	6209697	Identifier	bytes		6209475	1					
ANR	6209698	Identifier	size		6209475	1					
ANR	6209699	IfStatement	if ( ! ret -> bytes -> mask )		6209475	7					
ANR	6209700	Condition	! ret -> bytes -> mask	2011:6:47143:47159	6209475	0	True				
ANR	6209701	UnaryOperationExpression	! ret -> bytes -> mask		6209475	0					
ANR	6209702	UnaryOperator	!		6209475	0					
ANR	6209703	PtrMemberAccess	ret -> bytes -> mask		6209475	1					
ANR	6209704	PtrMemberAccess	ret -> bytes		6209475	0					
ANR	6209705	Identifier	ret		6209475	0					
ANR	6209706	Identifier	bytes		6209475	1					
ANR	6209707	Identifier	mask		6209475	1					
ANR	6209708	CompoundStatement		34:25:760:760	6209475	1					
ANR	6209709	ExpressionStatement	r_sign_item_free ( ret )	2012:3:47167:47189	6209475	0	True				
ANR	6209710	CallExpression	r_sign_item_free ( ret )		6209475	0					
ANR	6209711	Callee	r_sign_item_free		6209475	0					
ANR	6209712	Identifier	r_sign_item_free		6209475	0					
ANR	6209713	ArgumentList	ret		6209475	1					
ANR	6209714	Argument	ret		6209475	0					
ANR	6209715	Identifier	ret		6209475	0					
ANR	6209716	ReturnStatement	return NULL ;	2013:3:47194:47205	6209475	1	True				
ANR	6209717	Identifier	NULL		6209475	0					
ANR	6209718	ExpressionStatement	"memcpy ( ret -> bytes -> mask , it -> bytes -> mask , it -> bytes -> size )"	2015:2:47213:47272	6209475	8	True				
ANR	6209719	CallExpression	"memcpy ( ret -> bytes -> mask , it -> bytes -> mask , it -> bytes -> size )"		6209475	0					
ANR	6209720	Callee	memcpy		6209475	0					
ANR	6209721	Identifier	memcpy		6209475	0					
ANR	6209722	ArgumentList	ret -> bytes -> mask		6209475	1					
ANR	6209723	Argument	ret -> bytes -> mask		6209475	0					
ANR	6209724	PtrMemberAccess	ret -> bytes -> mask		6209475	0					
ANR	6209725	PtrMemberAccess	ret -> bytes		6209475	0					
ANR	6209726	Identifier	ret		6209475	0					
ANR	6209727	Identifier	bytes		6209475	1					
ANR	6209728	Identifier	mask		6209475	1					
ANR	6209729	Argument	it -> bytes -> mask		6209475	1					
ANR	6209730	PtrMemberAccess	it -> bytes -> mask		6209475	0					
ANR	6209731	PtrMemberAccess	it -> bytes		6209475	0					
ANR	6209732	Identifier	it		6209475	0					
ANR	6209733	Identifier	bytes		6209475	1					
ANR	6209734	Identifier	mask		6209475	1					
ANR	6209735	Argument	it -> bytes -> size		6209475	2					
ANR	6209736	PtrMemberAccess	it -> bytes -> size		6209475	0					
ANR	6209737	PtrMemberAccess	it -> bytes		6209475	0					
ANR	6209738	Identifier	it		6209475	0					
ANR	6209739	Identifier	bytes		6209475	1					
ANR	6209740	Identifier	size		6209475	1					
ANR	6209741	IfStatement	if ( it -> graph )		6209475	10					
ANR	6209742	Condition	it -> graph	2018:5:47283:47291	6209475	0	True				
ANR	6209743	PtrMemberAccess	it -> graph		6209475	0					
ANR	6209744	Identifier	it		6209475	0					
ANR	6209745	Identifier	graph		6209475	1					
ANR	6209746	CompoundStatement		41:16:892:892	6209475	1					
ANR	6209747	ExpressionStatement	ret -> graph = R_NEW0 ( RSignGraph )	2019:2:47298:47330	6209475	0	True				
ANR	6209748	AssignmentExpression	ret -> graph = R_NEW0 ( RSignGraph )		6209475	0		=			
ANR	6209749	PtrMemberAccess	ret -> graph		6209475	0					
ANR	6209750	Identifier	ret		6209475	0					
ANR	6209751	Identifier	graph		6209475	1					
ANR	6209752	CallExpression	R_NEW0 ( RSignGraph )		6209475	1					
ANR	6209753	Callee	R_NEW0		6209475	0					
ANR	6209754	Identifier	R_NEW0		6209475	0					
ANR	6209755	ArgumentList	RSignGraph		6209475	1					
ANR	6209756	Argument	RSignGraph		6209475	0					
ANR	6209757	Identifier	RSignGraph		6209475	0					
ANR	6209758	IfStatement	if ( ! ret -> graph )		6209475	1					
ANR	6209759	Condition	! ret -> graph	2020:6:47338:47348	6209475	0	True				
ANR	6209760	UnaryOperationExpression	! ret -> graph		6209475	0					
ANR	6209761	UnaryOperator	!		6209475	0					
ANR	6209762	PtrMemberAccess	ret -> graph		6209475	1					
ANR	6209763	Identifier	ret		6209475	0					
ANR	6209764	Identifier	graph		6209475	1					
ANR	6209765	CompoundStatement		43:19:949:949	6209475	1					
ANR	6209766	ExpressionStatement	r_sign_item_free ( ret )	2021:3:47356:47378	6209475	0	True				
ANR	6209767	CallExpression	r_sign_item_free ( ret )		6209475	0					
ANR	6209768	Callee	r_sign_item_free		6209475	0					
ANR	6209769	Identifier	r_sign_item_free		6209475	0					
ANR	6209770	ArgumentList	ret		6209475	1					
ANR	6209771	Argument	ret		6209475	0					
ANR	6209772	Identifier	ret		6209475	0					
ANR	6209773	ReturnStatement	return NULL ;	2022:3:47383:47394	6209475	1	True				
ANR	6209774	Identifier	NULL		6209475	0					
ANR	6209775	ExpressionStatement	* ret -> graph = * it -> graph	2024:2:47402:47426	6209475	2	True				
ANR	6209776	AssignmentExpression	* ret -> graph = * it -> graph		6209475	0		=			
ANR	6209777	UnaryOperationExpression	* ret -> graph		6209475	0					
ANR	6209778	UnaryOperator	*		6209475	0					
ANR	6209779	PtrMemberAccess	ret -> graph		6209475	1					
ANR	6209780	Identifier	ret		6209475	0					
ANR	6209781	Identifier	graph		6209475	1					
ANR	6209782	UnaryOperationExpression	* it -> graph		6209475	1					
ANR	6209783	UnaryOperator	*		6209475	0					
ANR	6209784	PtrMemberAccess	it -> graph		6209475	1					
ANR	6209785	Identifier	it		6209475	0					
ANR	6209786	Identifier	graph		6209475	1					
ANR	6209787	ExpressionStatement	ret -> refs = r_list_newf ( ( RListFree ) free )	2027:1:47433:47475	6209475	11	True				
ANR	6209788	AssignmentExpression	ret -> refs = r_list_newf ( ( RListFree ) free )		6209475	0		=			
ANR	6209789	PtrMemberAccess	ret -> refs		6209475	0					
ANR	6209790	Identifier	ret		6209475	0					
ANR	6209791	Identifier	refs		6209475	1					
ANR	6209792	CallExpression	r_list_newf ( ( RListFree ) free )		6209475	1					
ANR	6209793	Callee	r_list_newf		6209475	0					
ANR	6209794	Identifier	r_list_newf		6209475	0					
ANR	6209795	ArgumentList	( RListFree ) free		6209475	1					
ANR	6209796	Argument	( RListFree ) free		6209475	0					
ANR	6209797	CastExpression	( RListFree ) free		6209475	0					
ANR	6209798	CastTarget	RListFree		6209475	0					
ANR	6209799	Identifier	free		6209475	1					
ANR	6209800	Statement	r_list_foreach	2028:1:47478:47491	6209475	12	True				
ANR	6209801	Statement	(	2028:16:47493:47493	6209475	13	True				
ANR	6209802	Statement	it	2028:17:47494:47495	6209475	14	True				
ANR	6209803	Statement	->	2028:19:47496:47497	6209475	15	True				
ANR	6209804	Statement	refs	2028:21:47498:47501	6209475	16	True				
ANR	6209805	Statement	","	2028:25:47502:47502	6209475	17	True				
ANR	6209806	Statement	iter	2028:27:47504:47507	6209475	18	True				
ANR	6209807	Statement	","	2028:31:47508:47508	6209475	19	True				
ANR	6209808	Statement	ref	2028:33:47510:47512	6209475	20	True				
ANR	6209809	Statement	)	2028:36:47513:47513	6209475	21	True				
ANR	6209810	CompoundStatement		51:38:1113:1113	6209475	22					
ANR	6209811	ExpressionStatement	"r_list_append ( ret -> refs , r_str_new ( ref ) )"	2029:2:47519:47561	6209475	0	True				
ANR	6209812	CallExpression	"r_list_append ( ret -> refs , r_str_new ( ref ) )"		6209475	0					
ANR	6209813	Callee	r_list_append		6209475	0					
ANR	6209814	Identifier	r_list_append		6209475	0					
ANR	6209815	ArgumentList	ret -> refs		6209475	1					
ANR	6209816	Argument	ret -> refs		6209475	0					
ANR	6209817	PtrMemberAccess	ret -> refs		6209475	0					
ANR	6209818	Identifier	ret		6209475	0					
ANR	6209819	Identifier	refs		6209475	1					
ANR	6209820	Argument	r_str_new ( ref )		6209475	1					
ANR	6209821	CallExpression	r_str_new ( ref )		6209475	0					
ANR	6209822	Callee	r_str_new		6209475	0					
ANR	6209823	Identifier	r_str_new		6209475	0					
ANR	6209824	ArgumentList	ref		6209475	1					
ANR	6209825	Argument	ref		6209475	0					
ANR	6209826	Identifier	ref		6209475	0					
ANR	6209827	ExpressionStatement	ret -> xrefs = r_list_newf ( ( RListFree ) free )	2031:1:47567:47610	6209475	23	True				
ANR	6209828	AssignmentExpression	ret -> xrefs = r_list_newf ( ( RListFree ) free )		6209475	0		=			
ANR	6209829	PtrMemberAccess	ret -> xrefs		6209475	0					
ANR	6209830	Identifier	ret		6209475	0					
ANR	6209831	Identifier	xrefs		6209475	1					
ANR	6209832	CallExpression	r_list_newf ( ( RListFree ) free )		6209475	1					
ANR	6209833	Callee	r_list_newf		6209475	0					
ANR	6209834	Identifier	r_list_newf		6209475	0					
ANR	6209835	ArgumentList	( RListFree ) free		6209475	1					
ANR	6209836	Argument	( RListFree ) free		6209475	0					
ANR	6209837	CastExpression	( RListFree ) free		6209475	0					
ANR	6209838	CastTarget	RListFree		6209475	0					
ANR	6209839	Identifier	free		6209475	1					
ANR	6209840	Statement	r_list_foreach	2032:1:47613:47626	6209475	24	True				
ANR	6209841	Statement	(	2032:16:47628:47628	6209475	25	True				
ANR	6209842	Statement	it	2032:17:47629:47630	6209475	26	True				
ANR	6209843	Statement	->	2032:19:47631:47632	6209475	27	True				
ANR	6209844	Statement	xrefs	2032:21:47633:47637	6209475	28	True				
ANR	6209845	Statement	","	2032:26:47638:47638	6209475	29	True				
ANR	6209846	Statement	iter	2032:28:47640:47643	6209475	30	True				
ANR	6209847	Statement	","	2032:32:47644:47644	6209475	31	True				
ANR	6209848	Statement	ref	2032:34:47646:47648	6209475	32	True				
ANR	6209849	Statement	)	2032:37:47649:47649	6209475	33	True				
ANR	6209850	CompoundStatement		55:39:1249:1249	6209475	34					
ANR	6209851	ExpressionStatement	"r_list_append ( ret -> xrefs , r_str_new ( ref ) )"	2033:2:47655:47698	6209475	0	True				
ANR	6209852	CallExpression	"r_list_append ( ret -> xrefs , r_str_new ( ref ) )"		6209475	0					
ANR	6209853	Callee	r_list_append		6209475	0					
ANR	6209854	Identifier	r_list_append		6209475	0					
ANR	6209855	ArgumentList	ret -> xrefs		6209475	1					
ANR	6209856	Argument	ret -> xrefs		6209475	0					
ANR	6209857	PtrMemberAccess	ret -> xrefs		6209475	0					
ANR	6209858	Identifier	ret		6209475	0					
ANR	6209859	Identifier	xrefs		6209475	1					
ANR	6209860	Argument	r_str_new ( ref )		6209475	1					
ANR	6209861	CallExpression	r_str_new ( ref )		6209475	0					
ANR	6209862	Callee	r_str_new		6209475	0					
ANR	6209863	Identifier	r_str_new		6209475	0					
ANR	6209864	ArgumentList	ref		6209475	1					
ANR	6209865	Argument	ref		6209475	0					
ANR	6209866	Identifier	ref		6209475	0					
ANR	6209867	ReturnStatement	return ret ;	2036:1:47705:47715	6209475	35	True				
ANR	6209868	Identifier	ret		6209475	0					
ANR	6209869	ReturnType	R_API RSignItem *		6209475	1					
ANR	6209870	Identifier	r_sign_item_dup		6209475	2					
ANR	6209871	ParameterList	RSignItem * it		6209475	3					
ANR	6209872	Parameter	RSignItem * it	1978:33:46386:46398	6209475	0	True				
ANR	6209873	ParameterType	RSignItem *		6209475	0					
ANR	6209874	Identifier	it		6209475	1					
ANR	6209875	CFGEntryNode	ENTRY		6209475		True				
ANR	6209876	CFGExitNode	EXIT		6209475		True				
ANR	6209877	Symbol	ret -> graph		6209475						
ANR	6209878	Symbol	r_sign_item_new		6209475						
ANR	6209879	Symbol	it -> graph		6209475						
ANR	6209880	Symbol	ret -> xrefs		6209475						
ANR	6209881	Symbol	* ret		6209475						
ANR	6209882	Symbol	r_str_newf		6209475						
ANR	6209883	Symbol	ret -> bytes -> bytes		6209475						
ANR	6209884	Symbol	ret -> bytes -> mask		6209475						
ANR	6209885	Symbol	ret -> space		6209475						
ANR	6209886	Symbol	ref		6209475						
ANR	6209887	Symbol	* * it		6209475						
ANR	6209888	Symbol	it -> bytes -> size		6209475						
ANR	6209889	Symbol	* it -> graph		6209475						
ANR	6209890	Symbol	RSignGraph		6209475						
ANR	6209891	Symbol	free		6209475						
ANR	6209892	Symbol	r_str_new		6209475						
ANR	6209893	Symbol	ret -> comment		6209475						
ANR	6209894	Symbol	it -> realname		6209475						
ANR	6209895	Symbol	it -> comment		6209475						
ANR	6209896	Symbol	ret		6209475						
ANR	6209897	Symbol	ret -> bytes		6209475						
ANR	6209898	Symbol	malloc		6209475						
ANR	6209899	Symbol	ret -> realname		6209475						
ANR	6209900	Symbol	NULL		6209475						
ANR	6209901	Symbol	it -> bytes		6209475						
ANR	6209902	Symbol	r_list_newf		6209475						
ANR	6209903	Symbol	ret -> refs		6209475						
ANR	6209904	Symbol	it -> name		6209475						
ANR	6209905	Symbol	iter		6209475						
ANR	6209906	Symbol	it		6209475						
ANR	6209907	Symbol	* ret -> bytes		6209475						
ANR	6209908	Symbol	ret -> name		6209475						
ANR	6209909	Symbol	it -> space		6209475						
ANR	6209910	Symbol	R_NEW0		6209475						
ANR	6209911	Symbol	* it		6209475						
ANR	6209912	Symbol	it -> bytes -> bytes		6209475						
ANR	6209913	Symbol	* * ret		6209475						
ANR	6209914	Symbol	* ret -> graph		6209475						
ANR	6209915	Symbol	ret -> bytes -> size		6209475						
ANR	6209916	Symbol	* it -> bytes		6209475						
ANR	6209917	Symbol	it -> bytes -> mask		6209475						
ANR	6209918	Symbol	RSignBytes		6209475						
ANR	6209919	Function	r_sign_item_free	2039:0:47720:48124							
ANR	6209920	FunctionDef	r_sign_item_free (RSignItem * item)		6209919	0					
ANR	6209921	CompoundStatement		2039:45:47765:48124	6209919	0					
ANR	6209922	IfStatement	if ( ! item )		6209919	0					
ANR	6209923	Condition	! item	2040:5:47772:47776	6209919	0	True				
ANR	6209924	UnaryOperationExpression	! item		6209919	0					
ANR	6209925	UnaryOperator	!		6209919	0					
ANR	6209926	Identifier	item		6209919	1					
ANR	6209927	CompoundStatement		2:12:13:13	6209919	1					
ANR	6209928	ReturnStatement	return ;	2041:2:47783:47789	6209919	0	True				
ANR	6209929	ExpressionStatement	free ( item -> name )	2043:1:47795:47812	6209919	1	True				
ANR	6209930	CallExpression	free ( item -> name )		6209919	0					
ANR	6209931	Callee	free		6209919	0					
ANR	6209932	Identifier	free		6209919	0					
ANR	6209933	ArgumentList	item -> name		6209919	1					
ANR	6209934	Argument	item -> name		6209919	0					
ANR	6209935	PtrMemberAccess	item -> name		6209919	0					
ANR	6209936	Identifier	item		6209919	0					
ANR	6209937	Identifier	name		6209919	1					
ANR	6209938	IfStatement	if ( item -> bytes )		6209919	2					
ANR	6209939	Condition	item -> bytes	2044:5:47819:47829	6209919	0	True				
ANR	6209940	PtrMemberAccess	item -> bytes		6209919	0					
ANR	6209941	Identifier	item		6209919	0					
ANR	6209942	Identifier	bytes		6209919	1					
ANR	6209943	CompoundStatement		6:18:66:66	6209919	1					
ANR	6209944	ExpressionStatement	free ( item -> bytes -> bytes )	2045:2:47836:47861	6209919	0	True				
ANR	6209945	CallExpression	free ( item -> bytes -> bytes )		6209919	0					
ANR	6209946	Callee	free		6209919	0					
ANR	6209947	Identifier	free		6209919	0					
ANR	6209948	ArgumentList	item -> bytes -> bytes		6209919	1					
ANR	6209949	Argument	item -> bytes -> bytes		6209919	0					
ANR	6209950	PtrMemberAccess	item -> bytes -> bytes		6209919	0					
ANR	6209951	PtrMemberAccess	item -> bytes		6209919	0					
ANR	6209952	Identifier	item		6209919	0					
ANR	6209953	Identifier	bytes		6209919	1					
ANR	6209954	Identifier	bytes		6209919	1					
ANR	6209955	ExpressionStatement	free ( item -> bytes -> mask )	2046:2:47865:47889	6209919	1	True				
ANR	6209956	CallExpression	free ( item -> bytes -> mask )		6209919	0					
ANR	6209957	Callee	free		6209919	0					
ANR	6209958	Identifier	free		6209919	0					
ANR	6209959	ArgumentList	item -> bytes -> mask		6209919	1					
ANR	6209960	Argument	item -> bytes -> mask		6209919	0					
ANR	6209961	PtrMemberAccess	item -> bytes -> mask		6209919	0					
ANR	6209962	PtrMemberAccess	item -> bytes		6209919	0					
ANR	6209963	Identifier	item		6209919	0					
ANR	6209964	Identifier	bytes		6209919	1					
ANR	6209965	Identifier	mask		6209919	1					
ANR	6209966	ExpressionStatement	free ( item -> bytes )	2047:2:47893:47911	6209919	2	True				
ANR	6209967	CallExpression	free ( item -> bytes )		6209919	0					
ANR	6209968	Callee	free		6209919	0					
ANR	6209969	Identifier	free		6209919	0					
ANR	6209970	ArgumentList	item -> bytes		6209919	1					
ANR	6209971	Argument	item -> bytes		6209919	0					
ANR	6209972	PtrMemberAccess	item -> bytes		6209919	0					
ANR	6209973	Identifier	item		6209919	0					
ANR	6209974	Identifier	bytes		6209919	1					
ANR	6209975	IfStatement	if ( item -> hash )		6209919	3					
ANR	6209976	Condition	item -> hash	2049:5:47921:47930	6209919	0	True				
ANR	6209977	PtrMemberAccess	item -> hash		6209919	0					
ANR	6209978	Identifier	item		6209919	0					
ANR	6209979	Identifier	hash		6209919	1					
ANR	6209980	CompoundStatement		11:17:167:167	6209919	1					
ANR	6209981	ExpressionStatement	free ( item -> hash -> bbhash )	2050:2:47937:47962	6209919	0	True				
ANR	6209982	CallExpression	free ( item -> hash -> bbhash )		6209919	0					
ANR	6209983	Callee	free		6209919	0					
ANR	6209984	Identifier	free		6209919	0					
ANR	6209985	ArgumentList	item -> hash -> bbhash		6209919	1					
ANR	6209986	Argument	item -> hash -> bbhash		6209919	0					
ANR	6209987	PtrMemberAccess	item -> hash -> bbhash		6209919	0					
ANR	6209988	PtrMemberAccess	item -> hash		6209919	0					
ANR	6209989	Identifier	item		6209919	0					
ANR	6209990	Identifier	hash		6209919	1					
ANR	6209991	Identifier	bbhash		6209919	1					
ANR	6209992	ExpressionStatement	free ( item -> hash )	2051:2:47966:47983	6209919	1	True				
ANR	6209993	CallExpression	free ( item -> hash )		6209919	0					
ANR	6209994	Callee	free		6209919	0					
ANR	6209995	Identifier	free		6209919	0					
ANR	6209996	ArgumentList	item -> hash		6209919	1					
ANR	6209997	Argument	item -> hash		6209919	0					
ANR	6209998	PtrMemberAccess	item -> hash		6209919	0					
ANR	6209999	Identifier	item		6209919	0					
ANR	6210000	Identifier	hash		6209919	1					
ANR	6210001	ExpressionStatement	free ( item -> graph )	2053:1:47989:48007	6209919	4	True				
ANR	6210002	CallExpression	free ( item -> graph )		6209919	0					
ANR	6210003	Callee	free		6209919	0					
ANR	6210004	Identifier	free		6209919	0					
ANR	6210005	ArgumentList	item -> graph		6209919	1					
ANR	6210006	Argument	item -> graph		6209919	0					
ANR	6210007	PtrMemberAccess	item -> graph		6209919	0					
ANR	6210008	Identifier	item		6209919	0					
ANR	6210009	Identifier	graph		6209919	1					
ANR	6210010	ExpressionStatement	free ( item -> comment )	2054:1:48010:48030	6209919	5	True				
ANR	6210011	CallExpression	free ( item -> comment )		6209919	0					
ANR	6210012	Callee	free		6209919	0					
ANR	6210013	Identifier	free		6209919	0					
ANR	6210014	ArgumentList	item -> comment		6209919	1					
ANR	6210015	Argument	item -> comment		6209919	0					
ANR	6210016	PtrMemberAccess	item -> comment		6209919	0					
ANR	6210017	Identifier	item		6209919	0					
ANR	6210018	Identifier	comment		6209919	1					
ANR	6210019	ExpressionStatement	free ( item -> realname )	2055:1:48033:48054	6209919	6	True				
ANR	6210020	CallExpression	free ( item -> realname )		6209919	0					
ANR	6210021	Callee	free		6209919	0					
ANR	6210022	Identifier	free		6209919	0					
ANR	6210023	ArgumentList	item -> realname		6209919	1					
ANR	6210024	Argument	item -> realname		6209919	0					
ANR	6210025	PtrMemberAccess	item -> realname		6209919	0					
ANR	6210026	Identifier	item		6209919	0					
ANR	6210027	Identifier	realname		6209919	1					
ANR	6210028	ExpressionStatement	r_list_free ( item -> refs )	2056:1:48057:48081	6209919	7	True				
ANR	6210029	CallExpression	r_list_free ( item -> refs )		6209919	0					
ANR	6210030	Callee	r_list_free		6209919	0					
ANR	6210031	Identifier	r_list_free		6209919	0					
ANR	6210032	ArgumentList	item -> refs		6209919	1					
ANR	6210033	Argument	item -> refs		6209919	0					
ANR	6210034	PtrMemberAccess	item -> refs		6209919	0					
ANR	6210035	Identifier	item		6209919	0					
ANR	6210036	Identifier	refs		6209919	1					
ANR	6210037	ExpressionStatement	r_list_free ( item -> vars )	2057:1:48084:48108	6209919	8	True				
ANR	6210038	CallExpression	r_list_free ( item -> vars )		6209919	0					
ANR	6210039	Callee	r_list_free		6209919	0					
ANR	6210040	Identifier	r_list_free		6209919	0					
ANR	6210041	ArgumentList	item -> vars		6209919	1					
ANR	6210042	Argument	item -> vars		6209919	0					
ANR	6210043	PtrMemberAccess	item -> vars		6209919	0					
ANR	6210044	Identifier	item		6209919	0					
ANR	6210045	Identifier	vars		6209919	1					
ANR	6210046	ExpressionStatement	free ( item )	2058:1:48111:48122	6209919	9	True				
ANR	6210047	CallExpression	free ( item )		6209919	0					
ANR	6210048	Callee	free		6209919	0					
ANR	6210049	Identifier	free		6209919	0					
ANR	6210050	ArgumentList	item		6209919	1					
ANR	6210051	Argument	item		6209919	0					
ANR	6210052	Identifier	item		6209919	0					
ANR	6210053	ReturnType	R_API void		6209919	1					
ANR	6210054	Identifier	r_sign_item_free		6209919	2					
ANR	6210055	ParameterList	RSignItem * item		6209919	3					
ANR	6210056	Parameter	RSignItem * item	2039:28:47748:47762	6209919	0	True				
ANR	6210057	ParameterType	RSignItem *		6209919	0					
ANR	6210058	Identifier	item		6209919	1					
ANR	6210059	CFGEntryNode	ENTRY		6209919		True				
ANR	6210060	CFGExitNode	EXIT		6209919		True				
ANR	6210061	Symbol	* item -> bytes		6209919						
ANR	6210062	Symbol	item		6209919						
ANR	6210063	Symbol	item -> bytes -> bytes		6209919						
ANR	6210064	Symbol	* * item		6209919						
ANR	6210065	Symbol	item -> hash		6209919						
ANR	6210066	Symbol	item -> comment		6209919						
ANR	6210067	Symbol	item -> graph		6209919						
ANR	6210068	Symbol	item -> vars		6209919						
ANR	6210069	Symbol	item -> bytes		6209919						
ANR	6210070	Symbol	item -> name		6209919						
ANR	6210071	Symbol	* item		6209919						
ANR	6210072	Symbol	item -> bytes -> mask		6209919						
ANR	6210073	Symbol	* item -> hash		6209919						
ANR	6210074	Symbol	item -> realname		6209919						
ANR	6210075	Symbol	item -> hash -> bbhash		6209919						
ANR	6210076	Symbol	item -> refs		6209919						
ANR	6210077	Function	loadCB	2061:0:48127:48513							
ANR	6210078	FunctionDef	"loadCB (void * user , const char * k , const char * v)"		6210077	0					
ANR	6210079	CompoundStatement		2061:60:48187:48513	6210077	0					
ANR	6210080	IdentifierDeclStatement	RAnal * a = ( RAnal * ) user ;	2062:1:48190:48215	6210077	0	True				
ANR	6210081	IdentifierDecl	* a = ( RAnal * ) user		6210077	0					
ANR	6210082	IdentifierDeclType	RAnal *		6210077	0					
ANR	6210083	Identifier	a		6210077	1					
ANR	6210084	AssignmentExpression	* a = ( RAnal * ) user		6210077	2		=			
ANR	6210085	Identifier	a		6210077	0					
ANR	6210086	CastExpression	( RAnal * ) user		6210077	1					
ANR	6210087	CastTarget	RAnal *		6210077	0					
ANR	6210088	Identifier	user		6210077	1					
ANR	6210089	IdentifierDeclStatement	"char nk [ R_SIGN_KEY_MAXSZ ] , nv [ R_SIGN_VAL_MAXSZ ] ;"	2063:1:48218:48265	6210077	1	True				
ANR	6210090	IdentifierDecl	nk [ R_SIGN_KEY_MAXSZ ]		6210077	0					
ANR	6210091	IdentifierDeclType	char [ R_SIGN_KEY_MAXSZ ]		6210077	0					
ANR	6210092	Identifier	nk		6210077	1					
ANR	6210093	Identifier	R_SIGN_KEY_MAXSZ		6210077	2					
ANR	6210094	IdentifierDecl	nv [ R_SIGN_VAL_MAXSZ ]		6210077	1					
ANR	6210095	IdentifierDeclType	char [ R_SIGN_VAL_MAXSZ ]		6210077	0					
ANR	6210096	Identifier	nv		6210077	1					
ANR	6210097	Identifier	R_SIGN_VAL_MAXSZ		6210077	2					
ANR	6210098	IdentifierDeclStatement	RSignItem * it = r_sign_item_new ( ) ;	2064:1:48268:48302	6210077	2	True				
ANR	6210099	IdentifierDecl	* it = r_sign_item_new ( )		6210077	0					
ANR	6210100	IdentifierDeclType	RSignItem *		6210077	0					
ANR	6210101	Identifier	it		6210077	1					
ANR	6210102	AssignmentExpression	* it = r_sign_item_new ( )		6210077	2		=			
ANR	6210103	Identifier	it		6210077	0					
ANR	6210104	CallExpression	r_sign_item_new ( )		6210077	1					
ANR	6210105	Callee	r_sign_item_new		6210077	0					
ANR	6210106	Identifier	r_sign_item_new		6210077	0					
ANR	6210107	ArgumentList			6210077	1					
ANR	6210108	IfStatement	"if ( it && r_sign_deserialize ( a , it , k , v ) )"		6210077	3					
ANR	6210109	Condition	"it && r_sign_deserialize ( a , it , k , v )"	2065:5:48309:48346	6210077	0	True				
ANR	6210110	AndExpression	"it && r_sign_deserialize ( a , it , k , v )"		6210077	0		&&			
ANR	6210111	Identifier	it		6210077	0					
ANR	6210112	CallExpression	"r_sign_deserialize ( a , it , k , v )"		6210077	1					
ANR	6210113	Callee	r_sign_deserialize		6210077	0					
ANR	6210114	Identifier	r_sign_deserialize		6210077	0					
ANR	6210115	ArgumentList	a		6210077	1					
ANR	6210116	Argument	a		6210077	0					
ANR	6210117	Identifier	a		6210077	0					
ANR	6210118	Argument	it		6210077	1					
ANR	6210119	Identifier	it		6210077	0					
ANR	6210120	Argument	k		6210077	2					
ANR	6210121	Identifier	k		6210077	0					
ANR	6210122	Argument	v		6210077	3					
ANR	6210123	Identifier	v		6210077	0					
ANR	6210124	CompoundStatement		5:45:161:161	6210077	1					
ANR	6210125	ExpressionStatement	"serialize ( a , it , nk , nv )"	2066:2:48353:48378	6210077	0	True				
ANR	6210126	CallExpression	"serialize ( a , it , nk , nv )"		6210077	0					
ANR	6210127	Callee	serialize		6210077	0					
ANR	6210128	Identifier	serialize		6210077	0					
ANR	6210129	ArgumentList	a		6210077	1					
ANR	6210130	Argument	a		6210077	0					
ANR	6210131	Identifier	a		6210077	0					
ANR	6210132	Argument	it		6210077	1					
ANR	6210133	Identifier	it		6210077	0					
ANR	6210134	Argument	nk		6210077	2					
ANR	6210135	Identifier	nk		6210077	0					
ANR	6210136	Argument	nv		6210077	3					
ANR	6210137	Identifier	nv		6210077	0					
ANR	6210138	ExpressionStatement	"sdb_set ( a -> sdb_zigns , nk , nv , 0 )"	2067:2:48382:48415	6210077	1	True				
ANR	6210139	CallExpression	"sdb_set ( a -> sdb_zigns , nk , nv , 0 )"		6210077	0					
ANR	6210140	Callee	sdb_set		6210077	0					
ANR	6210141	Identifier	sdb_set		6210077	0					
ANR	6210142	ArgumentList	a -> sdb_zigns		6210077	1					
ANR	6210143	Argument	a -> sdb_zigns		6210077	0					
ANR	6210144	PtrMemberAccess	a -> sdb_zigns		6210077	0					
ANR	6210145	Identifier	a		6210077	0					
ANR	6210146	Identifier	sdb_zigns		6210077	1					
ANR	6210147	Argument	nk		6210077	1					
ANR	6210148	Identifier	nk		6210077	0					
ANR	6210149	Argument	nv		6210077	2					
ANR	6210150	Identifier	nv		6210077	0					
ANR	6210151	Argument	0		6210077	3					
ANR	6210152	PrimaryExpression	0		6210077	0					
ANR	6210153	ElseStatement	else		6210077	0					
ANR	6210154	CompoundStatement		8:8:237:237	6210077	0					
ANR	6210155	ExpressionStatement	"eprintf ( ""error: cannot deserialize zign\\n"" )"	2069:2:48429:48473	6210077	0	True				
ANR	6210156	CallExpression	"eprintf ( ""error: cannot deserialize zign\\n"" )"		6210077	0					
ANR	6210157	Callee	eprintf		6210077	0					
ANR	6210158	Identifier	eprintf		6210077	0					
ANR	6210159	ArgumentList	"""error: cannot deserialize zign\\n"""		6210077	1					
ANR	6210160	Argument	"""error: cannot deserialize zign\\n"""		6210077	0					
ANR	6210161	PrimaryExpression	"""error: cannot deserialize zign\\n"""		6210077	0					
ANR	6210162	ExpressionStatement	r_sign_item_free ( it )	2071:1:48479:48500	6210077	4	True				
ANR	6210163	CallExpression	r_sign_item_free ( it )		6210077	0					
ANR	6210164	Callee	r_sign_item_free		6210077	0					
ANR	6210165	Identifier	r_sign_item_free		6210077	0					
ANR	6210166	ArgumentList	it		6210077	1					
ANR	6210167	Argument	it		6210077	0					
ANR	6210168	Identifier	it		6210077	0					
ANR	6210169	ReturnStatement	return 1 ;	2072:1:48503:48511	6210077	5	True				
ANR	6210170	PrimaryExpression	1		6210077	0					
ANR	6210171	ReturnType	static int		6210077	1					
ANR	6210172	Identifier	loadCB		6210077	2					
ANR	6210173	ParameterList	"void * user , const char * k , const char * v"		6210077	3					
ANR	6210174	Parameter	void * user	2061:18:48145:48154	6210077	0	True				
ANR	6210175	ParameterType	void *		6210077	0					
ANR	6210176	Identifier	user		6210077	1					
ANR	6210177	Parameter	const char * k	2061:30:48157:48169	6210077	1	True				
ANR	6210178	ParameterType	const char *		6210077	0					
ANR	6210179	Identifier	k		6210077	1					
ANR	6210180	Parameter	const char * v	2061:45:48172:48184	6210077	2	True				
ANR	6210181	ParameterType	const char *		6210077	0					
ANR	6210182	Identifier	v		6210077	1					
ANR	6210183	CFGEntryNode	ENTRY		6210077		True				
ANR	6210184	CFGExitNode	EXIT		6210077		True				
ANR	6210185	Symbol	a		6210077						
ANR	6210186	Symbol	r_sign_item_new		6210077						
ANR	6210187	Symbol	r_sign_deserialize		6210077						
ANR	6210188	Symbol	v		6210077						
ANR	6210189	Symbol	nv		6210077						
ANR	6210190	Symbol	k		6210077						
ANR	6210191	Symbol	it		6210077						
ANR	6210192	Symbol	* a		6210077						
ANR	6210193	Symbol	user		6210077						
ANR	6210194	Symbol	nk		6210077						
ANR	6210195	Symbol	a -> sdb_zigns		6210077						
ANR	6210196	Function	r_sign_path	2075:0:48516:49245							
ANR	6210197	FunctionDef	"r_sign_path (RAnal * a , const char * file)"		6210196	0					
ANR	6210198	CompoundStatement		2075:52:48568:49245	6210196	0					
ANR	6210199	IdentifierDeclStatement	char * abs = r_file_abspath ( file ) ;	2076:1:48571:48604	6210196	0	True				
ANR	6210200	IdentifierDecl	* abs = r_file_abspath ( file )		6210196	0					
ANR	6210201	IdentifierDeclType	char *		6210196	0					
ANR	6210202	Identifier	abs		6210196	1					
ANR	6210203	AssignmentExpression	* abs = r_file_abspath ( file )		6210196	2		=			
ANR	6210204	Identifier	abs		6210196	0					
ANR	6210205	CallExpression	r_file_abspath ( file )		6210196	1					
ANR	6210206	Callee	r_file_abspath		6210196	0					
ANR	6210207	Identifier	r_file_abspath		6210196	0					
ANR	6210208	ArgumentList	file		6210196	1					
ANR	6210209	Argument	file		6210196	0					
ANR	6210210	Identifier	file		6210196	0					
ANR	6210211	IfStatement	if ( abs )		6210196	1					
ANR	6210212	Condition	abs	2077:5:48611:48613	6210196	0	True				
ANR	6210213	Identifier	abs		6210196	0					
ANR	6210214	CompoundStatement		3:10:47:47	6210196	1					
ANR	6210215	IfStatement	if ( r_file_is_regular ( abs ) )		6210196	0					
ANR	6210216	Condition	r_file_is_regular ( abs )	2078:6:48624:48646	6210196	0	True				
ANR	6210217	CallExpression	r_file_is_regular ( abs )		6210196	0					
ANR	6210218	Callee	r_file_is_regular		6210196	0					
ANR	6210219	Identifier	r_file_is_regular		6210196	0					
ANR	6210220	ArgumentList	abs		6210196	1					
ANR	6210221	Argument	abs		6210196	0					
ANR	6210222	Identifier	abs		6210196	0					
ANR	6210223	CompoundStatement		4:31:80:80	6210196	1					
ANR	6210224	ReturnStatement	return abs ;	2079:3:48654:48664	6210196	0	True				
ANR	6210225	Identifier	abs		6210196	0					
ANR	6210226	ExpressionStatement	free ( abs )	2081:2:48672:48682	6210196	1	True				
ANR	6210227	CallExpression	free ( abs )		6210196	0					
ANR	6210228	Callee	free		6210196	0					
ANR	6210229	Identifier	free		6210196	0					
ANR	6210230	ArgumentList	abs		6210196	1					
ANR	6210231	Argument	abs		6210196	0					
ANR	6210232	Identifier	abs		6210196	0					
ANR	6210233	IfStatement	if ( a -> zign_path )		6210196	2					
ANR	6210234	Condition	a -> zign_path	2084:5:48693:48704	6210196	0	True				
ANR	6210235	PtrMemberAccess	a -> zign_path		6210196	0					
ANR	6210236	Identifier	a		6210196	0					
ANR	6210237	Identifier	zign_path		6210196	1					
ANR	6210238	CompoundStatement		11:2:142:207	6210196	1					
ANR	6210239	IdentifierDeclStatement	"char * path = r_str_newf ( ""%s%s%s"" , a -> zign_path , R_SYS_DIR , file ) ;"	2085:2:48711:48776	6210196	0	True				
ANR	6210240	IdentifierDecl	"* path = r_str_newf ( ""%s%s%s"" , a -> zign_path , R_SYS_DIR , file )"		6210196	0					
ANR	6210241	IdentifierDeclType	char *		6210196	0					
ANR	6210242	Identifier	path		6210196	1					
ANR	6210243	AssignmentExpression	"* path = r_str_newf ( ""%s%s%s"" , a -> zign_path , R_SYS_DIR , file )"		6210196	2		=			
ANR	6210244	Identifier	path		6210196	0					
ANR	6210245	CallExpression	"r_str_newf ( ""%s%s%s"" , a -> zign_path , R_SYS_DIR , file )"		6210196	1					
ANR	6210246	Callee	r_str_newf		6210196	0					
ANR	6210247	Identifier	r_str_newf		6210196	0					
ANR	6210248	ArgumentList	"""%s%s%s"""		6210196	1					
ANR	6210249	Argument	"""%s%s%s"""		6210196	0					
ANR	6210250	PrimaryExpression	"""%s%s%s"""		6210196	0					
ANR	6210251	Argument	a -> zign_path		6210196	1					
ANR	6210252	PtrMemberAccess	a -> zign_path		6210196	0					
ANR	6210253	Identifier	a		6210196	0					
ANR	6210254	Identifier	zign_path		6210196	1					
ANR	6210255	Argument	R_SYS_DIR		6210196	2					
ANR	6210256	Identifier	R_SYS_DIR		6210196	0					
ANR	6210257	Argument	file		6210196	3					
ANR	6210258	Identifier	file		6210196	0					
ANR	6210259	ExpressionStatement	abs = r_file_abspath ( path )	2086:2:48780:48807	6210196	1	True				
ANR	6210260	AssignmentExpression	abs = r_file_abspath ( path )		6210196	0		=			
ANR	6210261	Identifier	abs		6210196	0					
ANR	6210262	CallExpression	r_file_abspath ( path )		6210196	1					
ANR	6210263	Callee	r_file_abspath		6210196	0					
ANR	6210264	Identifier	r_file_abspath		6210196	0					
ANR	6210265	ArgumentList	path		6210196	1					
ANR	6210266	Argument	path		6210196	0					
ANR	6210267	Identifier	path		6210196	0					
ANR	6210268	ExpressionStatement	free ( path )	2087:2:48811:48822	6210196	2	True				
ANR	6210269	CallExpression	free ( path )		6210196	0					
ANR	6210270	Callee	free		6210196	0					
ANR	6210271	Identifier	free		6210196	0					
ANR	6210272	ArgumentList	path		6210196	1					
ANR	6210273	Argument	path		6210196	0					
ANR	6210274	Identifier	path		6210196	0					
ANR	6210275	IfStatement	if ( r_file_is_regular ( abs ) )		6210196	3					
ANR	6210276	Condition	r_file_is_regular ( abs )	2088:6:48830:48852	6210196	0	True				
ANR	6210277	CallExpression	r_file_is_regular ( abs )		6210196	0					
ANR	6210278	Callee	r_file_is_regular		6210196	0					
ANR	6210279	Identifier	r_file_is_regular		6210196	0					
ANR	6210280	ArgumentList	abs		6210196	1					
ANR	6210281	Argument	abs		6210196	0					
ANR	6210282	Identifier	abs		6210196	0					
ANR	6210283	CompoundStatement		14:31:286:286	6210196	1					
ANR	6210284	ReturnStatement	return abs ;	2089:3:48860:48870	6210196	0	True				
ANR	6210285	Identifier	abs		6210196	0					
ANR	6210286	ExpressionStatement	free ( abs )	2091:2:48878:48888	6210196	4	True				
ANR	6210287	CallExpression	free ( abs )		6210196	0					
ANR	6210288	Callee	free		6210196	0					
ANR	6210289	Identifier	free		6210196	0					
ANR	6210290	ArgumentList	abs		6210196	1					
ANR	6210291	Argument	abs		6210196	0					
ANR	6210292	Identifier	abs		6210196	0					
ANR	6210293	ElseStatement	else		6210196	0					
ANR	6210294	CompoundStatement		19:2:333:372	6210196	0					
ANR	6210295	IdentifierDeclStatement	char * home = r_str_home ( R2_HOME_ZIGNS ) ;	2093:2:48902:48941	6210196	0	True				
ANR	6210296	IdentifierDecl	* home = r_str_home ( R2_HOME_ZIGNS )		6210196	0					
ANR	6210297	IdentifierDeclType	char *		6210196	0					
ANR	6210298	Identifier	home		6210196	1					
ANR	6210299	AssignmentExpression	* home = r_str_home ( R2_HOME_ZIGNS )		6210196	2		=			
ANR	6210300	Identifier	home		6210196	0					
ANR	6210301	CallExpression	r_str_home ( R2_HOME_ZIGNS )		6210196	1					
ANR	6210302	Callee	r_str_home		6210196	0					
ANR	6210303	Identifier	r_str_home		6210196	0					
ANR	6210304	ArgumentList	R2_HOME_ZIGNS		6210196	1					
ANR	6210305	Argument	R2_HOME_ZIGNS		6210196	0					
ANR	6210306	Identifier	R2_HOME_ZIGNS		6210196	0					
ANR	6210307	ExpressionStatement	"abs = r_str_newf ( ""%s%s%s"" , home , R_SYS_DIR , file )"	2094:2:48945:48995	6210196	1	True				
ANR	6210308	AssignmentExpression	"abs = r_str_newf ( ""%s%s%s"" , home , R_SYS_DIR , file )"		6210196	0		=			
ANR	6210309	Identifier	abs		6210196	0					
ANR	6210310	CallExpression	"r_str_newf ( ""%s%s%s"" , home , R_SYS_DIR , file )"		6210196	1					
ANR	6210311	Callee	r_str_newf		6210196	0					
ANR	6210312	Identifier	r_str_newf		6210196	0					
ANR	6210313	ArgumentList	"""%s%s%s"""		6210196	1					
ANR	6210314	Argument	"""%s%s%s"""		6210196	0					
ANR	6210315	PrimaryExpression	"""%s%s%s"""		6210196	0					
ANR	6210316	Argument	home		6210196	1					
ANR	6210317	Identifier	home		6210196	0					
ANR	6210318	Argument	R_SYS_DIR		6210196	2					
ANR	6210319	Identifier	R_SYS_DIR		6210196	0					
ANR	6210320	Argument	file		6210196	3					
ANR	6210321	Identifier	file		6210196	0					
ANR	6210322	ExpressionStatement	free ( home )	2095:2:48999:49010	6210196	2	True				
ANR	6210323	CallExpression	free ( home )		6210196	0					
ANR	6210324	Callee	free		6210196	0					
ANR	6210325	Identifier	free		6210196	0					
ANR	6210326	ArgumentList	home		6210196	1					
ANR	6210327	Argument	home		6210196	0					
ANR	6210328	Identifier	home		6210196	0					
ANR	6210329	IfStatement	if ( r_file_is_regular ( abs ) )		6210196	3					
ANR	6210330	Condition	r_file_is_regular ( abs )	2096:6:49018:49040	6210196	0	True				
ANR	6210331	CallExpression	r_file_is_regular ( abs )		6210196	0					
ANR	6210332	Callee	r_file_is_regular		6210196	0					
ANR	6210333	Identifier	r_file_is_regular		6210196	0					
ANR	6210334	ArgumentList	abs		6210196	1					
ANR	6210335	Argument	abs		6210196	0					
ANR	6210336	Identifier	abs		6210196	0					
ANR	6210337	CompoundStatement		22:31:474:474	6210196	1					
ANR	6210338	ReturnStatement	return abs ;	2097:3:49048:49058	6210196	0	True				
ANR	6210339	Identifier	abs		6210196	0					
ANR	6210340	ExpressionStatement	free ( abs )	2099:2:49066:49076	6210196	4	True				
ANR	6210341	CallExpression	free ( abs )		6210196	0					
ANR	6210342	Callee	free		6210196	0					
ANR	6210343	Identifier	free		6210196	0					
ANR	6210344	ArgumentList	abs		6210196	1					
ANR	6210345	Argument	abs		6210196	0					
ANR	6210346	Identifier	abs		6210196	0					
ANR	6210347	ExpressionStatement	"abs = r_str_newf ( R_JOIN_3_PATHS ( ""%s"" , R2_ZIGNS , ""%s"" ) , r_sys_prefix ( NULL ) , file )"	2102:1:49083:49166	6210196	3	True				
ANR	6210348	AssignmentExpression	"abs = r_str_newf ( R_JOIN_3_PATHS ( ""%s"" , R2_ZIGNS , ""%s"" ) , r_sys_prefix ( NULL ) , file )"		6210196	0		=			
ANR	6210349	Identifier	abs		6210196	0					
ANR	6210350	CallExpression	"r_str_newf ( R_JOIN_3_PATHS ( ""%s"" , R2_ZIGNS , ""%s"" ) , r_sys_prefix ( NULL ) , file )"		6210196	1					
ANR	6210351	Callee	r_str_newf		6210196	0					
ANR	6210352	Identifier	r_str_newf		6210196	0					
ANR	6210353	ArgumentList	"R_JOIN_3_PATHS ( ""%s"" , R2_ZIGNS , ""%s"" )"		6210196	1					
ANR	6210354	Argument	"R_JOIN_3_PATHS ( ""%s"" , R2_ZIGNS , ""%s"" )"		6210196	0					
ANR	6210355	CallExpression	"R_JOIN_3_PATHS ( ""%s"" , R2_ZIGNS , ""%s"" )"		6210196	0					
ANR	6210356	Callee	R_JOIN_3_PATHS		6210196	0					
ANR	6210357	Identifier	R_JOIN_3_PATHS		6210196	0					
ANR	6210358	ArgumentList	"""%s"""		6210196	1					
ANR	6210359	Argument	"""%s"""		6210196	0					
ANR	6210360	PrimaryExpression	"""%s"""		6210196	0					
ANR	6210361	Argument	R2_ZIGNS		6210196	1					
ANR	6210362	Identifier	R2_ZIGNS		6210196	0					
ANR	6210363	Argument	"""%s"""		6210196	2					
ANR	6210364	PrimaryExpression	"""%s"""		6210196	0					
ANR	6210365	Argument	r_sys_prefix ( NULL )		6210196	1					
ANR	6210366	CallExpression	r_sys_prefix ( NULL )		6210196	0					
ANR	6210367	Callee	r_sys_prefix		6210196	0					
ANR	6210368	Identifier	r_sys_prefix		6210196	0					
ANR	6210369	ArgumentList	NULL		6210196	1					
ANR	6210370	Argument	NULL		6210196	0					
ANR	6210371	Identifier	NULL		6210196	0					
ANR	6210372	Argument	file		6210196	2					
ANR	6210373	Identifier	file		6210196	0					
ANR	6210374	IfStatement	if ( r_file_is_regular ( abs ) )		6210196	4					
ANR	6210375	Condition	r_file_is_regular ( abs )	2103:5:49173:49195	6210196	0	True				
ANR	6210376	CallExpression	r_file_is_regular ( abs )		6210196	0					
ANR	6210377	Callee	r_file_is_regular		6210196	0					
ANR	6210378	Identifier	r_file_is_regular		6210196	0					
ANR	6210379	ArgumentList	abs		6210196	1					
ANR	6210380	Argument	abs		6210196	0					
ANR	6210381	Identifier	abs		6210196	0					
ANR	6210382	CompoundStatement		29:30:629:629	6210196	1					
ANR	6210383	ReturnStatement	return abs ;	2104:2:49202:49212	6210196	0	True				
ANR	6210384	Identifier	abs		6210196	0					
ANR	6210385	ExpressionStatement	free ( abs )	2106:1:49218:49228	6210196	5	True				
ANR	6210386	CallExpression	free ( abs )		6210196	0					
ANR	6210387	Callee	free		6210196	0					
ANR	6210388	Identifier	free		6210196	0					
ANR	6210389	ArgumentList	abs		6210196	1					
ANR	6210390	Argument	abs		6210196	0					
ANR	6210391	Identifier	abs		6210196	0					
ANR	6210392	ReturnStatement	return NULL ;	2108:1:49232:49243	6210196	6	True				
ANR	6210393	Identifier	NULL		6210196	0					
ANR	6210394	ReturnType	R_API char *		6210196	1					
ANR	6210395	Identifier	r_sign_path		6210196	2					
ANR	6210396	ParameterList	"RAnal * a , const char * file"		6210196	3					
ANR	6210397	Parameter	RAnal * a	2075:24:48540:48547	6210196	0	True				
ANR	6210398	ParameterType	RAnal *		6210196	0					
ANR	6210399	Identifier	a		6210196	1					
ANR	6210400	Parameter	const char * file	2075:34:48550:48565	6210196	1	True				
ANR	6210401	ParameterType	const char *		6210196	0					
ANR	6210402	Identifier	file		6210196	1					
ANR	6210403	CFGEntryNode	ENTRY		6210196		True				
ANR	6210404	CFGExitNode	EXIT		6210196		True				
ANR	6210405	Symbol	a		6210196						
ANR	6210406	Symbol	r_file_abspath		6210196						
ANR	6210407	Symbol	NULL		6210196						
ANR	6210408	Symbol	R_JOIN_3_PATHS		6210196						
ANR	6210409	Symbol	r_file_is_regular		6210196						
ANR	6210410	Symbol	a -> zign_path		6210196						
ANR	6210411	Symbol	* a		6210196						
ANR	6210412	Symbol	r_str_newf		6210196						
ANR	6210413	Symbol	r_sys_prefix		6210196						
ANR	6210414	Symbol	home		6210196						
ANR	6210415	Symbol	path		6210196						
ANR	6210416	Symbol	file		6210196						
ANR	6210417	Symbol	abs		6210196						
ANR	6210418	Symbol	R_SYS_DIR		6210196						
ANR	6210419	Symbol	R2_ZIGNS		6210196						
ANR	6210420	Symbol	R2_HOME_ZIGNS		6210196						
ANR	6210421	Symbol	r_str_home		6210196						
ANR	6210422	Function	r_sign_load	2111:0:49248:49667							
ANR	6210423	FunctionDef	"r_sign_load (RAnal * a , const char * file)"		6210422	0					
ANR	6210424	CompoundStatement		2111:51:49299:49667	6210422	0					
ANR	6210425	IfStatement	if ( ! a || ! file )		6210422	0					
ANR	6210426	Condition	! a || ! file	2112:5:49306:49316	6210422	0	True				
ANR	6210427	OrExpression	! a || ! file		6210422	0		||			
ANR	6210428	UnaryOperationExpression	! a		6210422	0					
ANR	6210429	UnaryOperator	!		6210422	0					
ANR	6210430	Identifier	a		6210422	1					
ANR	6210431	UnaryOperationExpression	! file		6210422	1					
ANR	6210432	UnaryOperator	!		6210422	0					
ANR	6210433	Identifier	file		6210422	1					
ANR	6210434	CompoundStatement		2:18:19:19	6210422	1					
ANR	6210435	ReturnStatement	return false ;	2113:2:49323:49335	6210422	0	True				
ANR	6210436	Identifier	false		6210422	0					
ANR	6210437	IdentifierDeclStatement	"char * path = r_sign_path ( a , file ) ;"	2115:1:49341:49375	6210422	1	True				
ANR	6210438	IdentifierDecl	"* path = r_sign_path ( a , file )"		6210422	0					
ANR	6210439	IdentifierDeclType	char *		6210422	0					
ANR	6210440	Identifier	path		6210422	1					
ANR	6210441	AssignmentExpression	"* path = r_sign_path ( a , file )"		6210422	2		=			
ANR	6210442	Identifier	path		6210422	0					
ANR	6210443	CallExpression	"r_sign_path ( a , file )"		6210422	1					
ANR	6210444	Callee	r_sign_path		6210422	0					
ANR	6210445	Identifier	r_sign_path		6210422	0					
ANR	6210446	ArgumentList	a		6210422	1					
ANR	6210447	Argument	a		6210422	0					
ANR	6210448	Identifier	a		6210422	0					
ANR	6210449	Argument	file		6210422	1					
ANR	6210450	Identifier	file		6210422	0					
ANR	6210451	IfStatement	if ( ! r_file_exists ( path ) )		6210422	2					
ANR	6210452	Condition	! r_file_exists ( path )	2116:5:49382:49402	6210422	0	True				
ANR	6210453	UnaryOperationExpression	! r_file_exists ( path )		6210422	0					
ANR	6210454	UnaryOperator	!		6210422	0					
ANR	6210455	CallExpression	r_file_exists ( path )		6210422	1					
ANR	6210456	Callee	r_file_exists		6210422	0					
ANR	6210457	Identifier	r_file_exists		6210422	0					
ANR	6210458	ArgumentList	path		6210422	1					
ANR	6210459	Argument	path		6210422	0					
ANR	6210460	Identifier	path		6210422	0					
ANR	6210461	CompoundStatement		6:28:105:105	6210422	1					
ANR	6210462	ExpressionStatement	"eprintf ( ""error: file %s does not exist\\n"" , file )"	2117:2:49409:49458	6210422	0	True				
ANR	6210463	CallExpression	"eprintf ( ""error: file %s does not exist\\n"" , file )"		6210422	0					
ANR	6210464	Callee	eprintf		6210422	0					
ANR	6210465	Identifier	eprintf		6210422	0					
ANR	6210466	ArgumentList	"""error: file %s does not exist\\n"""		6210422	1					
ANR	6210467	Argument	"""error: file %s does not exist\\n"""		6210422	0					
ANR	6210468	PrimaryExpression	"""error: file %s does not exist\\n"""		6210422	0					
ANR	6210469	Argument	file		6210422	1					
ANR	6210470	Identifier	file		6210422	0					
ANR	6210471	ExpressionStatement	free ( path )	2118:2:49462:49473	6210422	1	True				
ANR	6210472	CallExpression	free ( path )		6210422	0					
ANR	6210473	Callee	free		6210422	0					
ANR	6210474	Identifier	free		6210422	0					
ANR	6210475	ArgumentList	path		6210422	1					
ANR	6210476	Argument	path		6210422	0					
ANR	6210477	Identifier	path		6210422	0					
ANR	6210478	ReturnStatement	return false ;	2119:2:49477:49489	6210422	2	True				
ANR	6210479	Identifier	false		6210422	0					
ANR	6210480	IdentifierDeclStatement	"Sdb * db = sdb_new ( NULL , path , 0 ) ;"	2121:1:49495:49528	6210422	3	True				
ANR	6210481	IdentifierDecl	"* db = sdb_new ( NULL , path , 0 )"		6210422	0					
ANR	6210482	IdentifierDeclType	Sdb *		6210422	0					
ANR	6210483	Identifier	db		6210422	1					
ANR	6210484	AssignmentExpression	"* db = sdb_new ( NULL , path , 0 )"		6210422	2		=			
ANR	6210485	Identifier	db		6210422	0					
ANR	6210486	CallExpression	"sdb_new ( NULL , path , 0 )"		6210422	1					
ANR	6210487	Callee	sdb_new		6210422	0					
ANR	6210488	Identifier	sdb_new		6210422	0					
ANR	6210489	ArgumentList	NULL		6210422	1					
ANR	6210490	Argument	NULL		6210422	0					
ANR	6210491	Identifier	NULL		6210422	0					
ANR	6210492	Argument	path		6210422	1					
ANR	6210493	Identifier	path		6210422	0					
ANR	6210494	Argument	0		6210422	2					
ANR	6210495	PrimaryExpression	0		6210422	0					
ANR	6210496	IfStatement	if ( ! db )		6210422	4					
ANR	6210497	Condition	! db	2122:5:49535:49537	6210422	0	True				
ANR	6210498	UnaryOperationExpression	! db		6210422	0					
ANR	6210499	UnaryOperator	!		6210422	0					
ANR	6210500	Identifier	db		6210422	1					
ANR	6210501	CompoundStatement		12:10:240:240	6210422	1					
ANR	6210502	ExpressionStatement	free ( path )	2123:2:49544:49555	6210422	0	True				
ANR	6210503	CallExpression	free ( path )		6210422	0					
ANR	6210504	Callee	free		6210422	0					
ANR	6210505	Identifier	free		6210422	0					
ANR	6210506	ArgumentList	path		6210422	1					
ANR	6210507	Argument	path		6210422	0					
ANR	6210508	Identifier	path		6210422	0					
ANR	6210509	ReturnStatement	return false ;	2124:2:49559:49571	6210422	1	True				
ANR	6210510	Identifier	false		6210422	0					
ANR	6210511	ExpressionStatement	"sdb_foreach ( db , loadCB , a )"	2126:1:49577:49604	6210422	5	True				
ANR	6210512	CallExpression	"sdb_foreach ( db , loadCB , a )"		6210422	0					
ANR	6210513	Callee	sdb_foreach		6210422	0					
ANR	6210514	Identifier	sdb_foreach		6210422	0					
ANR	6210515	ArgumentList	db		6210422	1					
ANR	6210516	Argument	db		6210422	0					
ANR	6210517	Identifier	db		6210422	0					
ANR	6210518	Argument	loadCB		6210422	1					
ANR	6210519	Identifier	loadCB		6210422	0					
ANR	6210520	Argument	a		6210422	2					
ANR	6210521	Identifier	a		6210422	0					
ANR	6210522	ExpressionStatement	sdb_close ( db )	2127:1:49607:49621	6210422	6	True				
ANR	6210523	CallExpression	sdb_close ( db )		6210422	0					
ANR	6210524	Callee	sdb_close		6210422	0					
ANR	6210525	Identifier	sdb_close		6210422	0					
ANR	6210526	ArgumentList	db		6210422	1					
ANR	6210527	Argument	db		6210422	0					
ANR	6210528	Identifier	db		6210422	0					
ANR	6210529	ExpressionStatement	sdb_free ( db )	2128:1:49624:49637	6210422	7	True				
ANR	6210530	CallExpression	sdb_free ( db )		6210422	0					
ANR	6210531	Callee	sdb_free		6210422	0					
ANR	6210532	Identifier	sdb_free		6210422	0					
ANR	6210533	ArgumentList	db		6210422	1					
ANR	6210534	Argument	db		6210422	0					
ANR	6210535	Identifier	db		6210422	0					
ANR	6210536	ExpressionStatement	free ( path )	2129:1:49640:49651	6210422	8	True				
ANR	6210537	CallExpression	free ( path )		6210422	0					
ANR	6210538	Callee	free		6210422	0					
ANR	6210539	Identifier	free		6210422	0					
ANR	6210540	ArgumentList	path		6210422	1					
ANR	6210541	Argument	path		6210422	0					
ANR	6210542	Identifier	path		6210422	0					
ANR	6210543	ReturnStatement	return true ;	2130:1:49654:49665	6210422	9	True				
ANR	6210544	Identifier	true		6210422	0					
ANR	6210545	ReturnType	R_API bool		6210422	1					
ANR	6210546	Identifier	r_sign_load		6210422	2					
ANR	6210547	ParameterList	"RAnal * a , const char * file"		6210422	3					
ANR	6210548	Parameter	RAnal * a	2111:23:49271:49278	6210422	0	True				
ANR	6210549	ParameterType	RAnal *		6210422	0					
ANR	6210550	Identifier	a		6210422	1					
ANR	6210551	Parameter	const char * file	2111:33:49281:49296	6210422	1	True				
ANR	6210552	ParameterType	const char *		6210422	0					
ANR	6210553	Identifier	file		6210422	1					
ANR	6210554	CFGEntryNode	ENTRY		6210422		True				
ANR	6210555	CFGExitNode	EXIT		6210422		True				
ANR	6210556	Symbol	loadCB		6210422						
ANR	6210557	Symbol	a		6210422						
ANR	6210558	Symbol	path		6210422						
ANR	6210559	Symbol	sdb_new		6210422						
ANR	6210560	Symbol	file		6210422						
ANR	6210561	Symbol	NULL		6210422						
ANR	6210562	Symbol	false		6210422						
ANR	6210563	Symbol	true		6210422						
ANR	6210564	Symbol	r_sign_path		6210422						
ANR	6210565	Symbol	r_file_exists		6210422						
ANR	6210566	Symbol	db		6210422						
ANR	6210567	Function	r_sign_load_gz	2133:0:49670:50632							
ANR	6210568	FunctionDef	"r_sign_load_gz (RAnal * a , const char * filename)"		6210567	0					
ANR	6210569	CompoundStatement		2133:58:49728:50632	6210567	0					
ANR	6210570	IdentifierDeclStatement	ut8 * buf = NULL ;	2134:1:49731:49746	6210567	0	True				
ANR	6210571	IdentifierDecl	* buf = NULL		6210567	0					
ANR	6210572	IdentifierDeclType	ut8 *		6210567	0					
ANR	6210573	Identifier	buf		6210567	1					
ANR	6210574	AssignmentExpression	* buf = NULL		6210567	2		=			
ANR	6210575	Identifier	NULL		6210567	0					
ANR	6210576	Identifier	NULL		6210567	1					
ANR	6210577	IdentifierDeclStatement	int size = 0 ;	2135:1:49749:49761	6210567	1	True				
ANR	6210578	IdentifierDecl	size = 0		6210567	0					
ANR	6210579	IdentifierDeclType	int		6210567	0					
ANR	6210580	Identifier	size		6210567	1					
ANR	6210581	AssignmentExpression	size = 0		6210567	2		=			
ANR	6210582	Identifier	size		6210567	0					
ANR	6210583	PrimaryExpression	0		6210567	1					
ANR	6210584	IdentifierDeclStatement	char * tmpfile = NULL ;	2136:1:49764:49784	6210567	2	True				
ANR	6210585	IdentifierDecl	* tmpfile = NULL		6210567	0					
ANR	6210586	IdentifierDeclType	char *		6210567	0					
ANR	6210587	Identifier	tmpfile		6210567	1					
ANR	6210588	AssignmentExpression	* tmpfile = NULL		6210567	2		=			
ANR	6210589	Identifier	NULL		6210567	0					
ANR	6210590	Identifier	NULL		6210567	1					
ANR	6210591	IdentifierDeclStatement	bool retval = true ;	2137:1:49787:49805	6210567	3	True				
ANR	6210592	IdentifierDecl	retval = true		6210567	0					
ANR	6210593	IdentifierDeclType	bool		6210567	0					
ANR	6210594	Identifier	retval		6210567	1					
ANR	6210595	AssignmentExpression	retval = true		6210567	2		=			
ANR	6210596	Identifier	true		6210567	0					
ANR	6210597	Identifier	true		6210567	1					
ANR	6210598	IdentifierDeclStatement	"char * path = r_sign_path ( a , filename ) ;"	2139:1:49809:49847	6210567	4	True				
ANR	6210599	IdentifierDecl	"* path = r_sign_path ( a , filename )"		6210567	0					
ANR	6210600	IdentifierDeclType	char *		6210567	0					
ANR	6210601	Identifier	path		6210567	1					
ANR	6210602	AssignmentExpression	"* path = r_sign_path ( a , filename )"		6210567	2		=			
ANR	6210603	Identifier	path		6210567	0					
ANR	6210604	CallExpression	"r_sign_path ( a , filename )"		6210567	1					
ANR	6210605	Callee	r_sign_path		6210567	0					
ANR	6210606	Identifier	r_sign_path		6210567	0					
ANR	6210607	ArgumentList	a		6210567	1					
ANR	6210608	Argument	a		6210567	0					
ANR	6210609	Identifier	a		6210567	0					
ANR	6210610	Argument	filename		6210567	1					
ANR	6210611	Identifier	filename		6210567	0					
ANR	6210612	IfStatement	if ( ! r_file_exists ( path ) )		6210567	5					
ANR	6210613	Condition	! r_file_exists ( path )	2140:5:49854:49874	6210567	0	True				
ANR	6210614	UnaryOperationExpression	! r_file_exists ( path )		6210567	0					
ANR	6210615	UnaryOperator	!		6210567	0					
ANR	6210616	CallExpression	r_file_exists ( path )		6210567	1					
ANR	6210617	Callee	r_file_exists		6210567	0					
ANR	6210618	Identifier	r_file_exists		6210567	0					
ANR	6210619	ArgumentList	path		6210567	1					
ANR	6210620	Argument	path		6210567	0					
ANR	6210621	Identifier	path		6210567	0					
ANR	6210622	CompoundStatement		8:28:148:148	6210567	1					
ANR	6210623	ExpressionStatement	"eprintf ( ""error: file %s does not exist\\n"" , filename )"	2141:2:49881:49934	6210567	0	True				
ANR	6210624	CallExpression	"eprintf ( ""error: file %s does not exist\\n"" , filename )"		6210567	0					
ANR	6210625	Callee	eprintf		6210567	0					
ANR	6210626	Identifier	eprintf		6210567	0					
ANR	6210627	ArgumentList	"""error: file %s does not exist\\n"""		6210567	1					
ANR	6210628	Argument	"""error: file %s does not exist\\n"""		6210567	0					
ANR	6210629	PrimaryExpression	"""error: file %s does not exist\\n"""		6210567	0					
ANR	6210630	Argument	filename		6210567	1					
ANR	6210631	Identifier	filename		6210567	0					
ANR	6210632	ExpressionStatement	retval = false	2142:2:49938:49952	6210567	1	True				
ANR	6210633	AssignmentExpression	retval = false		6210567	0		=			
ANR	6210634	Identifier	retval		6210567	0					
ANR	6210635	Identifier	false		6210567	1					
ANR	6210636	GotoStatement	goto out ;	2143:2:49956:49964	6210567	2	True				
ANR	6210637	Identifier	out		6210567	0					
ANR	6210638	IfStatement	"if ( ! ( buf = r_file_gzslurp ( path , & size , 0 ) ) )"		6210567	6					
ANR	6210639	Condition	"! ( buf = r_file_gzslurp ( path , & size , 0 ) )"	2146:5:49975:50014	6210567	0	True				
ANR	6210640	UnaryOperationExpression	"! ( buf = r_file_gzslurp ( path , & size , 0 ) )"		6210567	0					
ANR	6210641	UnaryOperator	!		6210567	0					
ANR	6210642	AssignmentExpression	"buf = r_file_gzslurp ( path , & size , 0 )"		6210567	1		=			
ANR	6210643	Identifier	buf		6210567	0					
ANR	6210644	CallExpression	"r_file_gzslurp ( path , & size , 0 )"		6210567	1					
ANR	6210645	Callee	r_file_gzslurp		6210567	0					
ANR	6210646	Identifier	r_file_gzslurp		6210567	0					
ANR	6210647	ArgumentList	path		6210567	1					
ANR	6210648	Argument	path		6210567	0					
ANR	6210649	Identifier	path		6210567	0					
ANR	6210650	Argument	& size		6210567	1					
ANR	6210651	UnaryOperationExpression	& size		6210567	0					
ANR	6210652	UnaryOperator	&		6210567	0					
ANR	6210653	Identifier	size		6210567	1					
ANR	6210654	Argument	0		6210567	2					
ANR	6210655	PrimaryExpression	0		6210567	0					
ANR	6210656	CompoundStatement		14:47:288:288	6210567	1					
ANR	6210657	ExpressionStatement	"eprintf ( ""error: cannot decompress file\\n"" )"	2147:2:50021:50064	6210567	0	True				
ANR	6210658	CallExpression	"eprintf ( ""error: cannot decompress file\\n"" )"		6210567	0					
ANR	6210659	Callee	eprintf		6210567	0					
ANR	6210660	Identifier	eprintf		6210567	0					
ANR	6210661	ArgumentList	"""error: cannot decompress file\\n"""		6210567	1					
ANR	6210662	Argument	"""error: cannot decompress file\\n"""		6210567	0					
ANR	6210663	PrimaryExpression	"""error: cannot decompress file\\n"""		6210567	0					
ANR	6210664	ExpressionStatement	retval = false	2148:2:50068:50082	6210567	1	True				
ANR	6210665	AssignmentExpression	retval = false		6210567	0		=			
ANR	6210666	Identifier	retval		6210567	0					
ANR	6210667	Identifier	false		6210567	1					
ANR	6210668	GotoStatement	goto out ;	2149:2:50086:50094	6210567	2	True				
ANR	6210669	Identifier	out		6210567	0					
ANR	6210670	IfStatement	"if ( ! ( tmpfile = r_file_temp ( ""r2zign"" ) ) )"		6210567	7					
ANR	6210671	Condition	"! ( tmpfile = r_file_temp ( ""r2zign"" ) )"	2152:5:50105:50139	6210567	0	True				
ANR	6210672	UnaryOperationExpression	"! ( tmpfile = r_file_temp ( ""r2zign"" ) )"		6210567	0					
ANR	6210673	UnaryOperator	!		6210567	0					
ANR	6210674	AssignmentExpression	"tmpfile = r_file_temp ( ""r2zign"" )"		6210567	1		=			
ANR	6210675	Identifier	tmpfile		6210567	0					
ANR	6210676	CallExpression	"r_file_temp ( ""r2zign"" )"		6210567	1					
ANR	6210677	Callee	r_file_temp		6210567	0					
ANR	6210678	Identifier	r_file_temp		6210567	0					
ANR	6210679	ArgumentList	"""r2zign"""		6210567	1					
ANR	6210680	Argument	"""r2zign"""		6210567	0					
ANR	6210681	PrimaryExpression	"""r2zign"""		6210567	0					
ANR	6210682	CompoundStatement		20:42:413:413	6210567	1					
ANR	6210683	ExpressionStatement	"eprintf ( ""error: cannot create temp file\\n"" )"	2153:2:50146:50190	6210567	0	True				
ANR	6210684	CallExpression	"eprintf ( ""error: cannot create temp file\\n"" )"		6210567	0					
ANR	6210685	Callee	eprintf		6210567	0					
ANR	6210686	Identifier	eprintf		6210567	0					
ANR	6210687	ArgumentList	"""error: cannot create temp file\\n"""		6210567	1					
ANR	6210688	Argument	"""error: cannot create temp file\\n"""		6210567	0					
ANR	6210689	PrimaryExpression	"""error: cannot create temp file\\n"""		6210567	0					
ANR	6210690	ExpressionStatement	retval = false	2154:2:50194:50208	6210567	1	True				
ANR	6210691	AssignmentExpression	retval = false		6210567	0		=			
ANR	6210692	Identifier	retval		6210567	0					
ANR	6210693	Identifier	false		6210567	1					
ANR	6210694	GotoStatement	goto out ;	2155:2:50212:50220	6210567	2	True				
ANR	6210695	Identifier	out		6210567	0					
ANR	6210696	IfStatement	"if ( ! r_file_dump ( tmpfile , buf , size , 0 ) )"		6210567	8					
ANR	6210697	Condition	"! r_file_dump ( tmpfile , buf , size , 0 )"	2158:5:50231:50266	6210567	0	True				
ANR	6210698	UnaryOperationExpression	"! r_file_dump ( tmpfile , buf , size , 0 )"		6210567	0					
ANR	6210699	UnaryOperator	!		6210567	0					
ANR	6210700	CallExpression	"r_file_dump ( tmpfile , buf , size , 0 )"		6210567	1					
ANR	6210701	Callee	r_file_dump		6210567	0					
ANR	6210702	Identifier	r_file_dump		6210567	0					
ANR	6210703	ArgumentList	tmpfile		6210567	1					
ANR	6210704	Argument	tmpfile		6210567	0					
ANR	6210705	Identifier	tmpfile		6210567	0					
ANR	6210706	Argument	buf		6210567	1					
ANR	6210707	Identifier	buf		6210567	0					
ANR	6210708	Argument	size		6210567	2					
ANR	6210709	Identifier	size		6210567	0					
ANR	6210710	Argument	0		6210567	3					
ANR	6210711	PrimaryExpression	0		6210567	0					
ANR	6210712	CompoundStatement		26:43:540:540	6210567	1					
ANR	6210713	ExpressionStatement	"eprintf ( ""error: cannot dump file\\n"" )"	2159:2:50273:50310	6210567	0	True				
ANR	6210714	CallExpression	"eprintf ( ""error: cannot dump file\\n"" )"		6210567	0					
ANR	6210715	Callee	eprintf		6210567	0					
ANR	6210716	Identifier	eprintf		6210567	0					
ANR	6210717	ArgumentList	"""error: cannot dump file\\n"""		6210567	1					
ANR	6210718	Argument	"""error: cannot dump file\\n"""		6210567	0					
ANR	6210719	PrimaryExpression	"""error: cannot dump file\\n"""		6210567	0					
ANR	6210720	ExpressionStatement	retval = false	2160:2:50314:50328	6210567	1	True				
ANR	6210721	AssignmentExpression	retval = false		6210567	0		=			
ANR	6210722	Identifier	retval		6210567	0					
ANR	6210723	Identifier	false		6210567	1					
ANR	6210724	GotoStatement	goto out ;	2161:2:50332:50340	6210567	2	True				
ANR	6210725	Identifier	out		6210567	0					
ANR	6210726	IfStatement	"if ( ! r_sign_load ( a , tmpfile ) )"		6210567	9					
ANR	6210727	Condition	"! r_sign_load ( a , tmpfile )"	2164:5:50351:50375	6210567	0	True				
ANR	6210728	UnaryOperationExpression	"! r_sign_load ( a , tmpfile )"		6210567	0					
ANR	6210729	UnaryOperator	!		6210567	0					
ANR	6210730	CallExpression	"r_sign_load ( a , tmpfile )"		6210567	1					
ANR	6210731	Callee	r_sign_load		6210567	0					
ANR	6210732	Identifier	r_sign_load		6210567	0					
ANR	6210733	ArgumentList	a		6210567	1					
ANR	6210734	Argument	a		6210567	0					
ANR	6210735	Identifier	a		6210567	0					
ANR	6210736	Argument	tmpfile		6210567	1					
ANR	6210737	Identifier	tmpfile		6210567	0					
ANR	6210738	CompoundStatement		32:32:649:649	6210567	1					
ANR	6210739	ExpressionStatement	"eprintf ( ""error: cannot load file\\n"" )"	2165:2:50382:50419	6210567	0	True				
ANR	6210740	CallExpression	"eprintf ( ""error: cannot load file\\n"" )"		6210567	0					
ANR	6210741	Callee	eprintf		6210567	0					
ANR	6210742	Identifier	eprintf		6210567	0					
ANR	6210743	ArgumentList	"""error: cannot load file\\n"""		6210567	1					
ANR	6210744	Argument	"""error: cannot load file\\n"""		6210567	0					
ANR	6210745	PrimaryExpression	"""error: cannot load file\\n"""		6210567	0					
ANR	6210746	ExpressionStatement	retval = false	2166:2:50423:50437	6210567	1	True				
ANR	6210747	AssignmentExpression	retval = false		6210567	0		=			
ANR	6210748	Identifier	retval		6210567	0					
ANR	6210749	Identifier	false		6210567	1					
ANR	6210750	GotoStatement	goto out ;	2167:2:50441:50449	6210567	2	True				
ANR	6210751	Identifier	out		6210567	0					
ANR	6210752	IfStatement	if ( ! r_file_rm ( tmpfile ) )		6210567	10					
ANR	6210753	Condition	! r_file_rm ( tmpfile )	2170:5:50460:50479	6210567	0	True				
ANR	6210754	UnaryOperationExpression	! r_file_rm ( tmpfile )		6210567	0					
ANR	6210755	UnaryOperator	!		6210567	0					
ANR	6210756	CallExpression	r_file_rm ( tmpfile )		6210567	1					
ANR	6210757	Callee	r_file_rm		6210567	0					
ANR	6210758	Identifier	r_file_rm		6210567	0					
ANR	6210759	ArgumentList	tmpfile		6210567	1					
ANR	6210760	Argument	tmpfile		6210567	0					
ANR	6210761	Identifier	tmpfile		6210567	0					
ANR	6210762	CompoundStatement		38:27:753:753	6210567	1					
ANR	6210763	ExpressionStatement	"eprintf ( ""error: cannot delete temp file\\n"" )"	2171:2:50486:50530	6210567	0	True				
ANR	6210764	CallExpression	"eprintf ( ""error: cannot delete temp file\\n"" )"		6210567	0					
ANR	6210765	Callee	eprintf		6210567	0					
ANR	6210766	Identifier	eprintf		6210567	0					
ANR	6210767	ArgumentList	"""error: cannot delete temp file\\n"""		6210567	1					
ANR	6210768	Argument	"""error: cannot delete temp file\\n"""		6210567	0					
ANR	6210769	PrimaryExpression	"""error: cannot delete temp file\\n"""		6210567	0					
ANR	6210770	ExpressionStatement	retval = false	2172:2:50534:50548	6210567	1	True				
ANR	6210771	AssignmentExpression	retval = false		6210567	0		=			
ANR	6210772	Identifier	retval		6210567	0					
ANR	6210773	Identifier	false		6210567	1					
ANR	6210774	GotoStatement	goto out ;	2173:2:50552:50560	6210567	2	True				
ANR	6210775	Identifier	out		6210567	0					
ANR	6210776	Label	out :	2176:0:50566:50569	6210567	11	True				
ANR	6210777	Identifier	out		6210567	0					
ANR	6210778	ExpressionStatement	free ( buf )	2177:1:50572:50582	6210567	12	True				
ANR	6210779	CallExpression	free ( buf )		6210567	0					
ANR	6210780	Callee	free		6210567	0					
ANR	6210781	Identifier	free		6210567	0					
ANR	6210782	ArgumentList	buf		6210567	1					
ANR	6210783	Argument	buf		6210567	0					
ANR	6210784	Identifier	buf		6210567	0					
ANR	6210785	ExpressionStatement	free ( tmpfile )	2178:1:50585:50599	6210567	13	True				
ANR	6210786	CallExpression	free ( tmpfile )		6210567	0					
ANR	6210787	Callee	free		6210567	0					
ANR	6210788	Identifier	free		6210567	0					
ANR	6210789	ArgumentList	tmpfile		6210567	1					
ANR	6210790	Argument	tmpfile		6210567	0					
ANR	6210791	Identifier	tmpfile		6210567	0					
ANR	6210792	ExpressionStatement	free ( path )	2179:1:50602:50613	6210567	14	True				
ANR	6210793	CallExpression	free ( path )		6210567	0					
ANR	6210794	Callee	free		6210567	0					
ANR	6210795	Identifier	free		6210567	0					
ANR	6210796	ArgumentList	path		6210567	1					
ANR	6210797	Argument	path		6210567	0					
ANR	6210798	Identifier	path		6210567	0					
ANR	6210799	ReturnStatement	return retval ;	2181:1:50617:50630	6210567	15	True				
ANR	6210800	Identifier	retval		6210567	0					
ANR	6210801	ReturnType	R_API bool		6210567	1					
ANR	6210802	Identifier	r_sign_load_gz		6210567	2					
ANR	6210803	ParameterList	"RAnal * a , const char * filename"		6210567	3					
ANR	6210804	Parameter	RAnal * a	2133:26:49696:49703	6210567	0	True				
ANR	6210805	ParameterType	RAnal *		6210567	0					
ANR	6210806	Identifier	a		6210567	1					
ANR	6210807	Parameter	const char * filename	2133:36:49706:49725	6210567	1	True				
ANR	6210808	ParameterType	const char *		6210567	0					
ANR	6210809	Identifier	filename		6210567	1					
ANR	6210810	CFGEntryNode	ENTRY		6210567		True				
ANR	6210811	CFGExitNode	EXIT		6210567		True				
ANR	6210812	Symbol	a		6210567						
ANR	6210813	Symbol	NULL		6210567						
ANR	6210814	Symbol	r_file_rm		6210567						
ANR	6210815	Symbol	false		6210567						
ANR	6210816	Symbol	r_file_temp		6210567						
ANR	6210817	Symbol	& size		6210567						
ANR	6210818	Symbol	r_sign_path		6210567						
ANR	6210819	Symbol	r_file_gzslurp		6210567						
ANR	6210820	Symbol	r_sign_load		6210567						
ANR	6210821	Symbol	retval		6210567						
ANR	6210822	Symbol	path		6210567						
ANR	6210823	Symbol	buf		6210567						
ANR	6210824	Symbol	filename		6210567						
ANR	6210825	Symbol	size		6210567						
ANR	6210826	Symbol	r_file_dump		6210567						
ANR	6210827	Symbol	true		6210567						
ANR	6210828	Symbol	r_file_exists		6210567						
ANR	6210829	Symbol	tmpfile		6210567						
ANR	6210830	Function	r_sign_save	2184:0:50635:51012							
ANR	6210831	FunctionDef	"r_sign_save (RAnal * a , const char * file)"		6210830	0					
ANR	6210832	CompoundStatement		2184:51:50686:51012	6210830	0					
ANR	6210833	ExpressionStatement	"r_return_val_if_fail ( a && file , false )"	2185:1:50689:50728	6210830	0	True				
ANR	6210834	CallExpression	"r_return_val_if_fail ( a && file , false )"		6210830	0					
ANR	6210835	Callee	r_return_val_if_fail		6210830	0					
ANR	6210836	Identifier	r_return_val_if_fail		6210830	0					
ANR	6210837	ArgumentList	a && file		6210830	1					
ANR	6210838	Argument	a && file		6210830	0					
ANR	6210839	AndExpression	a && file		6210830	0		&&			
ANR	6210840	Identifier	a		6210830	0					
ANR	6210841	Identifier	file		6210830	1					
ANR	6210842	Argument	false		6210830	1					
ANR	6210843	Identifier	false		6210830	0					
ANR	6210844	IfStatement	if ( sdb_isempty ( a -> sdb_zigns ) )		6210830	1					
ANR	6210845	Condition	sdb_isempty ( a -> sdb_zigns )	2187:5:50736:50761	6210830	0	True				
ANR	6210846	CallExpression	sdb_isempty ( a -> sdb_zigns )		6210830	0					
ANR	6210847	Callee	sdb_isempty		6210830	0					
ANR	6210848	Identifier	sdb_isempty		6210830	0					
ANR	6210849	ArgumentList	a -> sdb_zigns		6210830	1					
ANR	6210850	Argument	a -> sdb_zigns		6210830	0					
ANR	6210851	PtrMemberAccess	a -> sdb_zigns		6210830	0					
ANR	6210852	Identifier	a		6210830	0					
ANR	6210853	Identifier	sdb_zigns		6210830	1					
ANR	6210854	CompoundStatement		4:33:77:77	6210830	1					
ANR	6210855	ExpressionStatement	"eprintf ( ""WARNING: no zignatures to save\\n"" )"	2188:2:50768:50812	6210830	0	True				
ANR	6210856	CallExpression	"eprintf ( ""WARNING: no zignatures to save\\n"" )"		6210830	0					
ANR	6210857	Callee	eprintf		6210830	0					
ANR	6210858	Identifier	eprintf		6210830	0					
ANR	6210859	ArgumentList	"""WARNING: no zignatures to save\\n"""		6210830	1					
ANR	6210860	Argument	"""WARNING: no zignatures to save\\n"""		6210830	0					
ANR	6210861	PrimaryExpression	"""WARNING: no zignatures to save\\n"""		6210830	0					
ANR	6210862	ReturnStatement	return false ;	2189:2:50816:50828	6210830	1	True				
ANR	6210863	Identifier	false		6210830	0					
ANR	6210864	IdentifierDeclStatement	"Sdb * db = sdb_new ( NULL , file , 0 ) ;"	2192:1:50835:50868	6210830	2	True				
ANR	6210865	IdentifierDecl	"* db = sdb_new ( NULL , file , 0 )"		6210830	0					
ANR	6210866	IdentifierDeclType	Sdb *		6210830	0					
ANR	6210867	Identifier	db		6210830	1					
ANR	6210868	AssignmentExpression	"* db = sdb_new ( NULL , file , 0 )"		6210830	2		=			
ANR	6210869	Identifier	db		6210830	0					
ANR	6210870	CallExpression	"sdb_new ( NULL , file , 0 )"		6210830	1					
ANR	6210871	Callee	sdb_new		6210830	0					
ANR	6210872	Identifier	sdb_new		6210830	0					
ANR	6210873	ArgumentList	NULL		6210830	1					
ANR	6210874	Argument	NULL		6210830	0					
ANR	6210875	Identifier	NULL		6210830	0					
ANR	6210876	Argument	file		6210830	1					
ANR	6210877	Identifier	file		6210830	0					
ANR	6210878	Argument	0		6210830	2					
ANR	6210879	PrimaryExpression	0		6210830	0					
ANR	6210880	IfStatement	if ( ! db )		6210830	3					
ANR	6210881	Condition	! db	2193:5:50875:50877	6210830	0	True				
ANR	6210882	UnaryOperationExpression	! db		6210830	0					
ANR	6210883	UnaryOperator	!		6210830	0					
ANR	6210884	Identifier	db		6210830	1					
ANR	6210885	CompoundStatement		10:10:193:193	6210830	1					
ANR	6210886	ReturnStatement	return false ;	2194:2:50884:50896	6210830	0	True				
ANR	6210887	Identifier	false		6210830	0					
ANR	6210888	ExpressionStatement	"sdb_merge ( db , a -> sdb_zigns )"	2196:1:50902:50930	6210830	4	True				
ANR	6210889	CallExpression	"sdb_merge ( db , a -> sdb_zigns )"		6210830	0					
ANR	6210890	Callee	sdb_merge		6210830	0					
ANR	6210891	Identifier	sdb_merge		6210830	0					
ANR	6210892	ArgumentList	db		6210830	1					
ANR	6210893	Argument	db		6210830	0					
ANR	6210894	Identifier	db		6210830	0					
ANR	6210895	Argument	a -> sdb_zigns		6210830	1					
ANR	6210896	PtrMemberAccess	a -> sdb_zigns		6210830	0					
ANR	6210897	Identifier	a		6210830	0					
ANR	6210898	Identifier	sdb_zigns		6210830	1					
ANR	6210899	IdentifierDeclStatement	bool retval = sdb_sync ( db ) ;	2197:1:50933:50960	6210830	5	True				
ANR	6210900	IdentifierDecl	retval = sdb_sync ( db )		6210830	0					
ANR	6210901	IdentifierDeclType	bool		6210830	0					
ANR	6210902	Identifier	retval		6210830	1					
ANR	6210903	AssignmentExpression	retval = sdb_sync ( db )		6210830	2		=			
ANR	6210904	Identifier	retval		6210830	0					
ANR	6210905	CallExpression	sdb_sync ( db )		6210830	1					
ANR	6210906	Callee	sdb_sync		6210830	0					
ANR	6210907	Identifier	sdb_sync		6210830	0					
ANR	6210908	ArgumentList	db		6210830	1					
ANR	6210909	Argument	db		6210830	0					
ANR	6210910	Identifier	db		6210830	0					
ANR	6210911	ExpressionStatement	sdb_close ( db )	2198:1:50963:50977	6210830	6	True				
ANR	6210912	CallExpression	sdb_close ( db )		6210830	0					
ANR	6210913	Callee	sdb_close		6210830	0					
ANR	6210914	Identifier	sdb_close		6210830	0					
ANR	6210915	ArgumentList	db		6210830	1					
ANR	6210916	Argument	db		6210830	0					
ANR	6210917	Identifier	db		6210830	0					
ANR	6210918	ExpressionStatement	sdb_free ( db )	2199:1:50980:50993	6210830	7	True				
ANR	6210919	CallExpression	sdb_free ( db )		6210830	0					
ANR	6210920	Callee	sdb_free		6210830	0					
ANR	6210921	Identifier	sdb_free		6210830	0					
ANR	6210922	ArgumentList	db		6210830	1					
ANR	6210923	Argument	db		6210830	0					
ANR	6210924	Identifier	db		6210830	0					
ANR	6210925	ReturnStatement	return retval ;	2201:1:50997:51010	6210830	8	True				
ANR	6210926	Identifier	retval		6210830	0					
ANR	6210927	ReturnType	R_API bool		6210830	1					
ANR	6210928	Identifier	r_sign_save		6210830	2					
ANR	6210929	ParameterList	"RAnal * a , const char * file"		6210830	3					
ANR	6210930	Parameter	RAnal * a	2184:23:50658:50665	6210830	0	True				
ANR	6210931	ParameterType	RAnal *		6210830	0					
ANR	6210932	Identifier	a		6210830	1					
ANR	6210933	Parameter	const char * file	2184:33:50668:50683	6210830	1	True				
ANR	6210934	ParameterType	const char *		6210830	0					
ANR	6210935	Identifier	file		6210830	1					
ANR	6210936	CFGEntryNode	ENTRY		6210830		True				
ANR	6210937	CFGExitNode	EXIT		6210830		True				
ANR	6210938	Symbol	a		6210830						
ANR	6210939	Symbol	sdb_new		6210830						
ANR	6210940	Symbol	file		6210830						
ANR	6210941	Symbol	NULL		6210830						
ANR	6210942	Symbol	false		6210830						
ANR	6210943	Symbol	sdb_isempty		6210830						
ANR	6210944	Symbol	* a		6210830						
ANR	6210945	Symbol	sdb_sync		6210830						
ANR	6210946	Symbol	db		6210830						
ANR	6210947	Symbol	retval		6210830						
ANR	6210948	Symbol	a -> sdb_zigns		6210830						
ANR	6210949	Function	r_sign_options_new	2204:0:51015:51693							
ANR	6210950	FunctionDef	"r_sign_options_new (const char * bytes_thresh , const char * graph_thresh)"		6210949	0					
ANR	6210951	CompoundStatement		2204:91:51106:51693	6210949	0					
ANR	6210952	IdentifierDeclStatement	RSignOptions * options = R_NEW0 ( RSignOptions ) ;	2205:1:51109:51154	6210949	0	True				
ANR	6210953	IdentifierDecl	* options = R_NEW0 ( RSignOptions )		6210949	0					
ANR	6210954	IdentifierDeclType	RSignOptions *		6210949	0					
ANR	6210955	Identifier	options		6210949	1					
ANR	6210956	AssignmentExpression	* options = R_NEW0 ( RSignOptions )		6210949	2		=			
ANR	6210957	Identifier	options		6210949	0					
ANR	6210958	CallExpression	R_NEW0 ( RSignOptions )		6210949	1					
ANR	6210959	Callee	R_NEW0		6210949	0					
ANR	6210960	Identifier	R_NEW0		6210949	0					
ANR	6210961	ArgumentList	RSignOptions		6210949	1					
ANR	6210962	Argument	RSignOptions		6210949	0					
ANR	6210963	Identifier	RSignOptions		6210949	0					
ANR	6210964	IfStatement	if ( ! options )		6210949	1					
ANR	6210965	Condition	! options	2206:5:51161:51168	6210949	0	True				
ANR	6210966	UnaryOperationExpression	! options		6210949	0					
ANR	6210967	UnaryOperator	!		6210949	0					
ANR	6210968	Identifier	options		6210949	1					
ANR	6210969	CompoundStatement		3:15:64:64	6210949	1					
ANR	6210970	ReturnStatement	return NULL ;	2207:2:51175:51186	6210949	0	True				
ANR	6210971	Identifier	NULL		6210949	0					
ANR	6210972	ExpressionStatement	"options -> bytes_diff_threshold = r_num_get_float ( NULL , bytes_thresh )"	2210:1:51193:51261	6210949	2	True				
ANR	6210973	AssignmentExpression	"options -> bytes_diff_threshold = r_num_get_float ( NULL , bytes_thresh )"		6210949	0		=			
ANR	6210974	PtrMemberAccess	options -> bytes_diff_threshold		6210949	0					
ANR	6210975	Identifier	options		6210949	0					
ANR	6210976	Identifier	bytes_diff_threshold		6210949	1					
ANR	6210977	CallExpression	"r_num_get_float ( NULL , bytes_thresh )"		6210949	1					
ANR	6210978	Callee	r_num_get_float		6210949	0					
ANR	6210979	Identifier	r_num_get_float		6210949	0					
ANR	6210980	ArgumentList	NULL		6210949	1					
ANR	6210981	Argument	NULL		6210949	0					
ANR	6210982	Identifier	NULL		6210949	0					
ANR	6210983	Argument	bytes_thresh		6210949	1					
ANR	6210984	Identifier	bytes_thresh		6210949	0					
ANR	6210985	ExpressionStatement	"options -> graph_diff_threshold = r_num_get_float ( NULL , graph_thresh )"	2211:1:51264:51332	6210949	3	True				
ANR	6210986	AssignmentExpression	"options -> graph_diff_threshold = r_num_get_float ( NULL , graph_thresh )"		6210949	0		=			
ANR	6210987	PtrMemberAccess	options -> graph_diff_threshold		6210949	0					
ANR	6210988	Identifier	options		6210949	0					
ANR	6210989	Identifier	graph_diff_threshold		6210949	1					
ANR	6210990	CallExpression	"r_num_get_float ( NULL , graph_thresh )"		6210949	1					
ANR	6210991	Callee	r_num_get_float		6210949	0					
ANR	6210992	Identifier	r_num_get_float		6210949	0					
ANR	6210993	ArgumentList	NULL		6210949	1					
ANR	6210994	Argument	NULL		6210949	0					
ANR	6210995	Identifier	NULL		6210949	0					
ANR	6210996	Argument	graph_thresh		6210949	1					
ANR	6210997	Identifier	graph_thresh		6210949	0					
ANR	6210998	IfStatement	if ( options -> bytes_diff_threshold > 1.0 )		6210949	4					
ANR	6210999	Condition	options -> bytes_diff_threshold > 1.0	2213:5:51340:51374	6210949	0	True				
ANR	6211000	RelationalExpression	options -> bytes_diff_threshold > 1.0		6210949	0		>			
ANR	6211001	PtrMemberAccess	options -> bytes_diff_threshold		6210949	0					
ANR	6211002	Identifier	options		6210949	0					
ANR	6211003	Identifier	bytes_diff_threshold		6210949	1					
ANR	6211004	PrimaryExpression	1.0		6210949	1					
ANR	6211005	CompoundStatement		10:42:270:270	6210949	1					
ANR	6211006	ExpressionStatement	options -> bytes_diff_threshold = 1.0	2214:2:51381:51416	6210949	0	True				
ANR	6211007	AssignmentExpression	options -> bytes_diff_threshold = 1.0		6210949	0		=			
ANR	6211008	PtrMemberAccess	options -> bytes_diff_threshold		6210949	0					
ANR	6211009	Identifier	options		6210949	0					
ANR	6211010	Identifier	bytes_diff_threshold		6210949	1					
ANR	6211011	PrimaryExpression	1.0		6210949	1					
ANR	6211012	IfStatement	if ( options -> bytes_diff_threshold < 0 )		6210949	5					
ANR	6211013	Condition	options -> bytes_diff_threshold < 0	2216:5:51426:51458	6210949	0	True				
ANR	6211014	RelationalExpression	options -> bytes_diff_threshold < 0		6210949	0		<			
ANR	6211015	PtrMemberAccess	options -> bytes_diff_threshold		6210949	0					
ANR	6211016	Identifier	options		6210949	0					
ANR	6211017	Identifier	bytes_diff_threshold		6210949	1					
ANR	6211018	PrimaryExpression	0		6210949	1					
ANR	6211019	CompoundStatement		13:40:354:354	6210949	1					
ANR	6211020	ExpressionStatement	options -> bytes_diff_threshold = 0.0	2217:2:51465:51500	6210949	0	True				
ANR	6211021	AssignmentExpression	options -> bytes_diff_threshold = 0.0		6210949	0		=			
ANR	6211022	PtrMemberAccess	options -> bytes_diff_threshold		6210949	0					
ANR	6211023	Identifier	options		6210949	0					
ANR	6211024	Identifier	bytes_diff_threshold		6210949	1					
ANR	6211025	PrimaryExpression	0.0		6210949	1					
ANR	6211026	IfStatement	if ( options -> graph_diff_threshold > 1.0 )		6210949	6					
ANR	6211027	Condition	options -> graph_diff_threshold > 1.0	2219:5:51510:51544	6210949	0	True				
ANR	6211028	RelationalExpression	options -> graph_diff_threshold > 1.0		6210949	0		>			
ANR	6211029	PtrMemberAccess	options -> graph_diff_threshold		6210949	0					
ANR	6211030	Identifier	options		6210949	0					
ANR	6211031	Identifier	graph_diff_threshold		6210949	1					
ANR	6211032	PrimaryExpression	1.0		6210949	1					
ANR	6211033	CompoundStatement		16:42:440:440	6210949	1					
ANR	6211034	ExpressionStatement	options -> graph_diff_threshold = 1.0	2220:2:51551:51586	6210949	0	True				
ANR	6211035	AssignmentExpression	options -> graph_diff_threshold = 1.0		6210949	0		=			
ANR	6211036	PtrMemberAccess	options -> graph_diff_threshold		6210949	0					
ANR	6211037	Identifier	options		6210949	0					
ANR	6211038	Identifier	graph_diff_threshold		6210949	1					
ANR	6211039	PrimaryExpression	1.0		6210949	1					
ANR	6211040	IfStatement	if ( options -> graph_diff_threshold < 0 )		6210949	7					
ANR	6211041	Condition	options -> graph_diff_threshold < 0	2222:5:51596:51628	6210949	0	True				
ANR	6211042	RelationalExpression	options -> graph_diff_threshold < 0		6210949	0		<			
ANR	6211043	PtrMemberAccess	options -> graph_diff_threshold		6210949	0					
ANR	6211044	Identifier	options		6210949	0					
ANR	6211045	Identifier	graph_diff_threshold		6210949	1					
ANR	6211046	PrimaryExpression	0		6210949	1					
ANR	6211047	CompoundStatement		19:40:524:524	6210949	1					
ANR	6211048	ExpressionStatement	options -> graph_diff_threshold = 0.0	2223:2:51635:51670	6210949	0	True				
ANR	6211049	AssignmentExpression	options -> graph_diff_threshold = 0.0		6210949	0		=			
ANR	6211050	PtrMemberAccess	options -> graph_diff_threshold		6210949	0					
ANR	6211051	Identifier	options		6210949	0					
ANR	6211052	Identifier	graph_diff_threshold		6210949	1					
ANR	6211053	PrimaryExpression	0.0		6210949	1					
ANR	6211054	ReturnStatement	return options ;	2226:1:51677:51691	6210949	8	True				
ANR	6211055	Identifier	options		6210949	0					
ANR	6211056	ReturnType	R_API RSignOptions *		6210949	1					
ANR	6211057	Identifier	r_sign_options_new		6210949	2					
ANR	6211058	ParameterList	"const char * bytes_thresh , const char * graph_thresh"		6210949	3					
ANR	6211059	Parameter	const char * bytes_thresh	2204:39:51054:51077	6210949	0	True				
ANR	6211060	ParameterType	const char *		6210949	0					
ANR	6211061	Identifier	bytes_thresh		6210949	1					
ANR	6211062	Parameter	const char * graph_thresh	2204:65:51080:51103	6210949	1	True				
ANR	6211063	ParameterType	const char *		6210949	0					
ANR	6211064	Identifier	graph_thresh		6210949	1					
ANR	6211065	CFGEntryNode	ENTRY		6210949		True				
ANR	6211066	CFGExitNode	EXIT		6210949		True				
ANR	6211067	Symbol	R_NEW0		6210949						
ANR	6211068	Symbol	options -> graph_diff_threshold		6210949						
ANR	6211069	Symbol	NULL		6210949						
ANR	6211070	Symbol	options		6210949						
ANR	6211071	Symbol	bytes_thresh		6210949						
ANR	6211072	Symbol	RSignOptions		6210949						
ANR	6211073	Symbol	options -> bytes_diff_threshold		6210949						
ANR	6211074	Symbol	graph_thresh		6210949						
ANR	6211075	Symbol	r_num_get_float		6210949						
ANR	6211076	Symbol	* options		6210949						
ANR	6211077	Function	r_sign_options_free	2229:0:51696:51771							
ANR	6211078	FunctionDef	r_sign_options_free (RSignOptions * options)		6211077	0					
ANR	6211079	CompoundStatement		2229:54:51750:51771	6211077	0					
ANR	6211080	ExpressionStatement	R_FREE ( options )	2230:1:51753:51769	6211077	0	True				
ANR	6211081	CallExpression	R_FREE ( options )		6211077	0					
ANR	6211082	Callee	R_FREE		6211077	0					
ANR	6211083	Identifier	R_FREE		6211077	0					
ANR	6211084	ArgumentList	options		6211077	1					
ANR	6211085	Argument	options		6211077	0					
ANR	6211086	Identifier	options		6211077	0					
ANR	6211087	ReturnType	R_API void		6211077	1					
ANR	6211088	Identifier	r_sign_options_free		6211077	2					
ANR	6211089	ParameterList	RSignOptions * options		6211077	3					
ANR	6211090	Parameter	RSignOptions * options	2229:31:51727:51747	6211077	0	True				
ANR	6211091	ParameterType	RSignOptions *		6211077	0					
ANR	6211092	Identifier	options		6211077	1					
ANR	6211093	CFGEntryNode	ENTRY		6211077		True				
ANR	6211094	CFGExitNode	EXIT		6211077		True				
ANR	6211095	Symbol	options		6211077						
