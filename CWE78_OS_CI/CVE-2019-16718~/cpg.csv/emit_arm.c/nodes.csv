command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	1388785	File	data/converged/CVE-2019-16718~_radare2/emit_arm.c								
ANR	1388786	DeclStmt									
ANR	1388787	Decl							char	char * [ ]	regs
ANR	1388788	DeclStmt									
ANR	1388789	Decl							int	int	lastarg
ANR	1388790	Function	emit_init	21:0:400:447							
ANR	1388791	FunctionDef	emit_init (REgg * egg)		1388790	0					
ANR	1388792	CompoundStatement		21:33:433:447	1388790	0					
ANR	1388793	ReturnType	static void		1388790	1					
ANR	1388794	Identifier	emit_init		1388790	2					
ANR	1388795	ParameterList	REgg * egg		1388790	3					
ANR	1388796	Parameter	REgg * egg	21:22:422:430	1388790	0	True				
ANR	1388797	ParameterType	REgg *		1388790	0					
ANR	1388798	Identifier	egg		1388790	1					
ANR	1388799	CFGEntryNode	ENTRY		1388790		True				
ANR	1388800	CFGExitNode	EXIT		1388790		True				
ANR	1388801	Symbol	egg		1388790						
ANR	1388802	Function	emit_syscall	25:0:450:799							
ANR	1388803	FunctionDef	"emit_syscall (REgg * egg , int num)"		1388802	0					
ANR	1388804	CompoundStatement		25:46:496:799	1388802	0					
ANR	1388805	IdentifierDeclStatement	int svc = 0 ;	26:1:499:510	1388802	0	True				
ANR	1388806	IdentifierDecl	svc = 0		1388802	0					
ANR	1388807	IdentifierDeclType	int		1388802	0					
ANR	1388808	Identifier	svc		1388802	1					
ANR	1388809	AssignmentExpression	svc = 0		1388802	2		=			
ANR	1388810	Identifier	svc		1388802	0					
ANR	1388811	PrimaryExpression	0		1388802	1					
ANR	1388812	SwitchStatement	switch ( egg -> os )		1388802	1					
ANR	1388813	Condition	egg -> os	27:9:521:527	1388802	0	True				
ANR	1388814	PtrMemberAccess	egg -> os		1388802	0					
ANR	1388815	Identifier	egg		1388802	0					
ANR	1388816	Identifier	os		1388802	1					
ANR	1388817	CompoundStatement		3:18:33:33	1388802	1					
ANR	1388818	Label	case R_EGG_OS_DARWIN :	28:1:533:553	1388802	0	True				
ANR	1388819	Identifier	R_EGG_OS_DARWIN		1388802	0					
ANR	1388820	Label	case R_EGG_OS_OSX :	29:1:556:573	1388802	1	True				
ANR	1388821	Identifier	R_EGG_OS_OSX		1388802	0					
ANR	1388822	Label	case R_EGG_OS_IOS :	30:1:576:593	1388802	2	True				
ANR	1388823	Identifier	R_EGG_OS_IOS		1388802	0					
ANR	1388824	Label	case R_EGG_OS_MACOS :	31:1:596:615	1388802	3	True				
ANR	1388825	Identifier	R_EGG_OS_MACOS		1388802	0					
ANR	1388826	ExpressionStatement	svc = 0x80	32:2:619:629	1388802	4	True				
ANR	1388827	AssignmentExpression	svc = 0x80		1388802	0		=			
ANR	1388828	Identifier	svc		1388802	0					
ANR	1388829	PrimaryExpression	0x80		1388802	1					
ANR	1388830	BreakStatement	break ;	33:2:633:638	1388802	5	True				
ANR	1388831	Label	case R_EGG_OS_WATCHOS :	34:1:641:662	1388802	6	True				
ANR	1388832	Identifier	R_EGG_OS_WATCHOS		1388802	0					
ANR	1388833	ExpressionStatement	svc = 0x8000	35:2:666:678	1388802	7	True				
ANR	1388834	AssignmentExpression	svc = 0x8000		1388802	0		=			
ANR	1388835	Identifier	svc		1388802	0					
ANR	1388836	PrimaryExpression	0x8000		1388802	1					
ANR	1388837	BreakStatement	break ;	36:2:682:687	1388802	8	True				
ANR	1388838	Label	case R_EGG_OS_LINUX :	37:1:690:709	1388802	9	True				
ANR	1388839	Identifier	R_EGG_OS_LINUX		1388802	0					
ANR	1388840	ExpressionStatement	svc = 0	38:2:713:720	1388802	10	True				
ANR	1388841	AssignmentExpression	svc = 0		1388802	0		=			
ANR	1388842	Identifier	svc		1388802	0					
ANR	1388843	PrimaryExpression	0		1388802	1					
ANR	1388844	BreakStatement	break ;	39:2:724:729	1388802	11	True				
ANR	1388845	Statement	return	41:1:735:740	1388802	2	True				
ANR	1388846	Statement	r_str_newf	41:8:742:751	1388802	3	True				
ANR	1388847	Statement	(	41:19:753:753	1388802	4	True				
ANR	1388848	Statement	""": mov """	41:20:754:761	1388802	5	True				
ANR	1388849	Statement	R_AX	41:28:762:765	1388802	6	True				
ANR	1388850	Statement	""", `.arg`\\n: svc 0x%x\\n"""	41:33:767:790	1388802	7	True				
ANR	1388851	Statement	","	41:57:791:791	1388802	8	True				
ANR	1388852	Statement	svc	41:59:793:795	1388802	9	True				
ANR	1388853	Statement	)	41:62:796:796	1388802	10	True				
ANR	1388854	ExpressionStatement		41:63:797:797	1388802	11	True				
ANR	1388855	ReturnType	static char *		1388802	1					
ANR	1388856	Identifier	emit_syscall		1388802	2					
ANR	1388857	ParameterList	"REgg * egg , int num"		1388802	3					
ANR	1388858	Parameter	REgg * egg	25:26:476:484	1388802	0	True				
ANR	1388859	ParameterType	REgg *		1388802	0					
ANR	1388860	Identifier	egg		1388802	1					
ANR	1388861	Parameter	int num	25:37:487:493	1388802	1	True				
ANR	1388862	ParameterType	int		1388802	0					
ANR	1388863	Identifier	num		1388802	1					
ANR	1388864	CFGEntryNode	ENTRY		1388802		True				
ANR	1388865	CFGExitNode	EXIT		1388802		True				
ANR	1388866	Symbol	* egg		1388802						
ANR	1388867	Symbol	svc		1388802						
ANR	1388868	Symbol	egg		1388802						
ANR	1388869	Symbol	egg -> os		1388802						
ANR	1388870	Symbol	num		1388802						
ANR	1388871	Function	emit_frame	44:0:802:1060							
ANR	1388872	FunctionDef	"emit_frame (REgg * egg , int sz)"		1388871	0					
ANR	1388873	CompoundStatement		44:42:844:1060	1388871	0					
ANR	1388874	ExpressionStatement	"r_egg_printf ( egg , ""  push {fp,lr}\\n"" )"	45:1:847:885	1388871	0	True				
ANR	1388875	CallExpression	"r_egg_printf ( egg , ""  push {fp,lr}\\n"" )"		1388871	0					
ANR	1388876	Callee	r_egg_printf		1388871	0					
ANR	1388877	Identifier	r_egg_printf		1388871	0					
ANR	1388878	ArgumentList	egg		1388871	1					
ANR	1388879	Argument	egg		1388871	0					
ANR	1388880	Identifier	egg		1388871	0					
ANR	1388881	Argument	"""  push {fp,lr}\\n"""		1388871	1					
ANR	1388882	PrimaryExpression	"""  push {fp,lr}\\n"""		1388871	0					
ANR	1388883	IfStatement	if ( sz > 0 )		1388871	1					
ANR	1388884	Condition	sz > 0	46:5:892:897	1388871	0	True				
ANR	1388885	RelationalExpression	sz > 0		1388871	0		>			
ANR	1388886	Identifier	sz		1388871	0					
ANR	1388887	PrimaryExpression	0		1388871	1					
ANR	1388888	CompoundStatement		3:13:55:55	1388871	1					
ANR	1388889	Statement	r_egg_printf	47:2:904:915	1388871	0	True				
ANR	1388890	Statement	(	47:15:917:917	1388871	1	True				
ANR	1388891	Statement	egg	47:16:918:920	1388871	2	True				
ANR	1388892	Statement	","	47:19:921:921	1388871	3	True				
ANR	1388893	Statement	"""  add fp, sp, $4\\n"""	49:3:957:976	1388871	4	True				
ANR	1388894	Statement	"""  sub sp, %d\\n"""	50:3:1002:1017	1388871	5	True				
ANR	1388895	Statement	","	50:19:1018:1018	1388871	6	True				
ANR	1388896	Statement	sz	50:21:1020:1021	1388871	7	True				
ANR	1388897	Statement	)	50:23:1022:1022	1388871	8	True				
ANR	1388898	ExpressionStatement		50:24:1023:1023	1388871	9	True				
ANR	1388899	ReturnType	static void		1388871	1					
ANR	1388900	Identifier	emit_frame		1388871	2					
ANR	1388901	ParameterList	"REgg * egg , int sz"		1388871	3					
ANR	1388902	Parameter	REgg * egg	44:23:825:833	1388871	0	True				
ANR	1388903	ParameterType	REgg *		1388871	0					
ANR	1388904	Identifier	egg		1388871	1					
ANR	1388905	Parameter	int sz	44:34:836:841	1388871	1	True				
ANR	1388906	ParameterType	int		1388871	0					
ANR	1388907	Identifier	sz		1388871	1					
ANR	1388908	CFGEntryNode	ENTRY		1388871		True				
ANR	1388909	CFGExitNode	EXIT		1388871		True				
ANR	1388910	Symbol	egg		1388871						
ANR	1388911	Symbol	sz		1388871						
ANR	1388912	Function	emit_frame_end	54:0:1063:1246							
ANR	1388913	FunctionDef	"emit_frame_end (REgg * egg , int sz , int ctx)"		1388912	0					
ANR	1388914	CompoundStatement		54:55:1118:1246	1388912	0					
ANR	1388915	IfStatement	if ( sz > 0 )		1388912	0					
ANR	1388916	Condition	sz > 0	55:5:1125:1130	1388912	0	True				
ANR	1388917	RelationalExpression	sz > 0		1388912	0		>			
ANR	1388918	Identifier	sz		1388912	0					
ANR	1388919	PrimaryExpression	0		1388912	1					
ANR	1388920	CompoundStatement		2:13:14:14	1388912	1					
ANR	1388921	ExpressionStatement	"r_egg_printf ( egg , ""  add sp, fp, %d\\n"" , sz )"	56:2:1137:1181	1388912	0	True				
ANR	1388922	CallExpression	"r_egg_printf ( egg , ""  add sp, fp, %d\\n"" , sz )"		1388912	0					
ANR	1388923	Callee	r_egg_printf		1388912	0					
ANR	1388924	Identifier	r_egg_printf		1388912	0					
ANR	1388925	ArgumentList	egg		1388912	1					
ANR	1388926	Argument	egg		1388912	0					
ANR	1388927	Identifier	egg		1388912	0					
ANR	1388928	Argument	"""  add sp, fp, %d\\n"""		1388912	1					
ANR	1388929	PrimaryExpression	"""  add sp, fp, %d\\n"""		1388912	0					
ANR	1388930	Argument	sz		1388912	2					
ANR	1388931	Identifier	sz		1388912	0					
ANR	1388932	IfStatement	if ( ctx > 0 )		1388912	1					
ANR	1388933	Condition	ctx > 0	58:5:1191:1197	1388912	0	True				
ANR	1388934	RelationalExpression	ctx > 0		1388912	0		>			
ANR	1388935	Identifier	ctx		1388912	0					
ANR	1388936	PrimaryExpression	0		1388912	1					
ANR	1388937	CompoundStatement		5:14:81:81	1388912	1					
ANR	1388938	ExpressionStatement	"r_egg_printf ( egg , ""  pop {fp,pc}\\n"" )"	59:2:1204:1241	1388912	0	True				
ANR	1388939	CallExpression	"r_egg_printf ( egg , ""  pop {fp,pc}\\n"" )"		1388912	0					
ANR	1388940	Callee	r_egg_printf		1388912	0					
ANR	1388941	Identifier	r_egg_printf		1388912	0					
ANR	1388942	ArgumentList	egg		1388912	1					
ANR	1388943	Argument	egg		1388912	0					
ANR	1388944	Identifier	egg		1388912	0					
ANR	1388945	Argument	"""  pop {fp,pc}\\n"""		1388912	1					
ANR	1388946	PrimaryExpression	"""  pop {fp,pc}\\n"""		1388912	0					
ANR	1388947	ReturnType	static void		1388912	1					
ANR	1388948	Identifier	emit_frame_end		1388912	2					
ANR	1388949	ParameterList	"REgg * egg , int sz , int ctx"		1388912	3					
ANR	1388950	Parameter	REgg * egg	54:27:1090:1098	1388912	0	True				
ANR	1388951	ParameterType	REgg *		1388912	0					
ANR	1388952	Identifier	egg		1388912	1					
ANR	1388953	Parameter	int sz	54:38:1101:1106	1388912	1	True				
ANR	1388954	ParameterType	int		1388912	0					
ANR	1388955	Identifier	sz		1388912	1					
ANR	1388956	Parameter	int ctx	54:46:1109:1115	1388912	2	True				
ANR	1388957	ParameterType	int		1388912	0					
ANR	1388958	Identifier	ctx		1388912	1					
ANR	1388959	CFGEntryNode	ENTRY		1388912		True				
ANR	1388960	CFGExitNode	EXIT		1388912		True				
ANR	1388961	Symbol	egg		1388912						
ANR	1388962	Symbol	ctx		1388912						
ANR	1388963	Symbol	sz		1388912						
ANR	1388964	Function	emit_comment	63:0:1249:1451							
ANR	1388965	FunctionDef	"emit_comment (REgg * egg , const char * fmt)"		1388964	0					
ANR	1388966	CompoundStatement		63:58:1307:1451	1388964	0					
ANR	1388967	IdentifierDeclStatement	va_list ap ;	64:1:1310:1320	1388964	0	True				
ANR	1388968	IdentifierDecl	ap		1388964	0					
ANR	1388969	IdentifierDeclType	va_list		1388964	0					
ANR	1388970	Identifier	ap		1388964	1					
ANR	1388971	IdentifierDeclStatement	char buf [ 1024 ] ;	65:1:1323:1337	1388964	1	True				
ANR	1388972	IdentifierDecl	buf [ 1024 ]		1388964	0					
ANR	1388973	IdentifierDeclType	char [ 1024 ]		1388964	0					
ANR	1388974	Identifier	buf		1388964	1					
ANR	1388975	PrimaryExpression	1024		1388964	2					
ANR	1388976	ExpressionStatement	"va_start ( ap , fmt )"	66:1:1340:1358	1388964	2	True				
ANR	1388977	CallExpression	"va_start ( ap , fmt )"		1388964	0					
ANR	1388978	Callee	va_start		1388964	0					
ANR	1388979	Identifier	va_start		1388964	0					
ANR	1388980	ArgumentList	ap		1388964	1					
ANR	1388981	Argument	ap		1388964	0					
ANR	1388982	Identifier	ap		1388964	0					
ANR	1388983	Argument	fmt		1388964	1					
ANR	1388984	Identifier	fmt		1388964	0					
ANR	1388985	ExpressionStatement	"vsnprintf ( buf , sizeof ( buf ) , fmt , ap )"	67:1:1361:1399	1388964	3	True				
ANR	1388986	CallExpression	"vsnprintf ( buf , sizeof ( buf ) , fmt , ap )"		1388964	0					
ANR	1388987	Callee	vsnprintf		1388964	0					
ANR	1388988	Identifier	vsnprintf		1388964	0					
ANR	1388989	ArgumentList	buf		1388964	1					
ANR	1388990	Argument	buf		1388964	0					
ANR	1388991	Identifier	buf		1388964	0					
ANR	1388992	Argument	sizeof ( buf )		1388964	1					
ANR	1388993	SizeofExpression	sizeof ( buf )		1388964	0					
ANR	1388994	Sizeof	sizeof		1388964	0					
ANR	1388995	SizeofOperand	buf		1388964	1					
ANR	1388996	Argument	fmt		1388964	2					
ANR	1388997	Identifier	fmt		1388964	0					
ANR	1388998	Argument	ap		1388964	3					
ANR	1388999	Identifier	ap		1388964	0					
ANR	1389000	ExpressionStatement	"r_egg_printf ( egg , ""# %s\\n"" , buf )"	68:1:1402:1435	1388964	4	True				
ANR	1389001	CallExpression	"r_egg_printf ( egg , ""# %s\\n"" , buf )"		1388964	0					
ANR	1389002	Callee	r_egg_printf		1388964	0					
ANR	1389003	Identifier	r_egg_printf		1388964	0					
ANR	1389004	ArgumentList	egg		1388964	1					
ANR	1389005	Argument	egg		1388964	0					
ANR	1389006	Identifier	egg		1388964	0					
ANR	1389007	Argument	"""# %s\\n"""		1388964	1					
ANR	1389008	PrimaryExpression	"""# %s\\n"""		1388964	0					
ANR	1389009	Argument	buf		1388964	2					
ANR	1389010	Identifier	buf		1388964	0					
ANR	1389011	ExpressionStatement	va_end ( ap )	69:1:1438:1449	1388964	5	True				
ANR	1389012	CallExpression	va_end ( ap )		1388964	0					
ANR	1389013	Callee	va_end		1388964	0					
ANR	1389014	Identifier	va_end		1388964	0					
ANR	1389015	ArgumentList	ap		1388964	1					
ANR	1389016	Argument	ap		1388964	0					
ANR	1389017	Identifier	ap		1388964	0					
ANR	1389018	ReturnType	static void		1388964	1					
ANR	1389019	Identifier	emit_comment		1388964	2					
ANR	1389020	ParameterList	"REgg * egg , const char * fmt"		1388964	3					
ANR	1389021	Parameter	REgg * egg	63:25:1274:1282	1388964	0	True				
ANR	1389022	ParameterType	REgg *		1388964	0					
ANR	1389023	Identifier	egg		1388964	1					
ANR	1389024	Parameter	const char * fmt	63:36:1285:1299	1388964	1	True				
ANR	1389025	ParameterType	const char *		1388964	0					
ANR	1389026	Identifier	fmt		1388964	1					
ANR	1389027	CFGEntryNode	ENTRY		1388964		True				
ANR	1389028	CFGExitNode	EXIT		1388964		True				
ANR	1389029	Symbol	buf		1388964						
ANR	1389030	Symbol	egg		1388964						
ANR	1389031	Symbol	fmt		1388964						
ANR	1389032	Symbol	ap		1388964						
ANR	1389033	Function	emit_equ	72:0:1454:1574							
ANR	1389034	FunctionDef	"emit_equ (REgg * egg , const char * key , const char * value)"		1389033	0					
ANR	1389035	CompoundStatement		72:68:1522:1574	1389033	0					
ANR	1389036	ExpressionStatement	"r_egg_printf ( egg , "".equ %s, %s\\n"" , key , value )"	73:1:1525:1572	1389033	0	True				
ANR	1389037	CallExpression	"r_egg_printf ( egg , "".equ %s, %s\\n"" , key , value )"		1389033	0					
ANR	1389038	Callee	r_egg_printf		1389033	0					
ANR	1389039	Identifier	r_egg_printf		1389033	0					
ANR	1389040	ArgumentList	egg		1389033	1					
ANR	1389041	Argument	egg		1389033	0					
ANR	1389042	Identifier	egg		1389033	0					
ANR	1389043	Argument	""".equ %s, %s\\n"""		1389033	1					
ANR	1389044	PrimaryExpression	""".equ %s, %s\\n"""		1389033	0					
ANR	1389045	Argument	key		1389033	2					
ANR	1389046	Identifier	key		1389033	0					
ANR	1389047	Argument	value		1389033	3					
ANR	1389048	Identifier	value		1389033	0					
ANR	1389049	ReturnType	static void		1389033	1					
ANR	1389050	Identifier	emit_equ		1389033	2					
ANR	1389051	ParameterList	"REgg * egg , const char * key , const char * value"		1389033	3					
ANR	1389052	Parameter	REgg * egg	72:21:1475:1483	1389033	0	True				
ANR	1389053	ParameterType	REgg *		1389033	0					
ANR	1389054	Identifier	egg		1389033	1					
ANR	1389055	Parameter	const char * key	72:32:1486:1500	1389033	1	True				
ANR	1389056	ParameterType	const char *		1389033	0					
ANR	1389057	Identifier	key		1389033	1					
ANR	1389058	Parameter	const char * value	72:49:1503:1519	1389033	2	True				
ANR	1389059	ParameterType	const char *		1389033	0					
ANR	1389060	Identifier	value		1389033	1					
ANR	1389061	CFGEntryNode	ENTRY		1389033		True				
ANR	1389062	CFGExitNode	EXIT		1389033		True				
ANR	1389063	Symbol	egg		1389033						
ANR	1389064	Symbol	value		1389033						
ANR	1389065	Symbol	key		1389033						
ANR	1389066	Function	emit_syscall_args	76:0:1577:1771							
ANR	1389067	FunctionDef	"emit_syscall_args (REgg * egg , int nargs)"		1389066	0					
ANR	1389068	CompoundStatement		76:52:1629:1771	1389066	0					
ANR	1389069	IdentifierDeclStatement	"int j , k ;"	77:1:1632:1640	1389066	0	True				
ANR	1389070	IdentifierDecl	j		1389066	0					
ANR	1389071	IdentifierDeclType	int		1389066	0					
ANR	1389072	Identifier	j		1389066	1					
ANR	1389073	IdentifierDecl	k		1389066	1					
ANR	1389074	IdentifierDeclType	int		1389066	0					
ANR	1389075	Identifier	k		1389066	1					
ANR	1389076	ForStatement	for ( j = 0 ; j < nargs ; j ++ )		1389066	1					
ANR	1389077	ForInit	j = 0 ;	78:6:1648:1653	1389066	0	True				
ANR	1389078	AssignmentExpression	j = 0		1389066	0		=			
ANR	1389079	Identifier	j		1389066	0					
ANR	1389080	PrimaryExpression	0		1389066	1					
ANR	1389081	Condition	j < nargs	78:13:1655:1663	1389066	1	True				
ANR	1389082	RelationalExpression	j < nargs		1389066	0		<			
ANR	1389083	Identifier	j		1389066	0					
ANR	1389084	Identifier	nargs		1389066	1					
ANR	1389085	PostIncDecOperationExpression	j ++	78:24:1666:1668	1389066	2	True				
ANR	1389086	Identifier	j		1389066	0					
ANR	1389087	IncDec	++		1389066	1					
ANR	1389088	CompoundStatement		3:29:41:41	1389066	3					
ANR	1389089	ExpressionStatement	k = j * R_SZ	79:2:1675:1687	1389066	0	True				
ANR	1389090	AssignmentExpression	k = j * R_SZ		1389066	0		=			
ANR	1389091	Identifier	k		1389066	0					
ANR	1389092	MultiplicativeExpression	j * R_SZ		1389066	1		*			
ANR	1389093	Identifier	j		1389066	0					
ANR	1389094	Identifier	R_SZ		1389066	1					
ANR	1389095	ExpressionStatement	"r_egg_printf ( egg , ""  ldr %s, [sp, %d]\\n"" , regs [ j + 1 ] , k ? k + 4 : k + 8 )"	80:2:1691:1766	1389066	1	True				
ANR	1389096	CallExpression	"r_egg_printf ( egg , ""  ldr %s, [sp, %d]\\n"" , regs [ j + 1 ] , k ? k + 4 : k + 8 )"		1389066	0					
ANR	1389097	Callee	r_egg_printf		1389066	0					
ANR	1389098	Identifier	r_egg_printf		1389066	0					
ANR	1389099	ArgumentList	egg		1389066	1					
ANR	1389100	Argument	egg		1389066	0					
ANR	1389101	Identifier	egg		1389066	0					
ANR	1389102	Argument	"""  ldr %s, [sp, %d]\\n"""		1389066	1					
ANR	1389103	PrimaryExpression	"""  ldr %s, [sp, %d]\\n"""		1389066	0					
ANR	1389104	Argument	regs [ j + 1 ]		1389066	2					
ANR	1389105	ArrayIndexing	regs [ j + 1 ]		1389066	0					
ANR	1389106	Identifier	regs		1389066	0					
ANR	1389107	AdditiveExpression	j + 1		1389066	1		+			
ANR	1389108	Identifier	j		1389066	0					
ANR	1389109	PrimaryExpression	1		1389066	1					
ANR	1389110	Argument	k ? k + 4 : k + 8		1389066	3					
ANR	1389111	ConditionalExpression	k ? k + 4 : k + 8		1389066	0					
ANR	1389112	Condition	k		1389066	0					
ANR	1389113	Identifier	k		1389066	0					
ANR	1389114	AdditiveExpression	k + 4		1389066	1		+			
ANR	1389115	Identifier	k		1389066	0					
ANR	1389116	PrimaryExpression	4		1389066	1					
ANR	1389117	AdditiveExpression	k + 8		1389066	2		+			
ANR	1389118	Identifier	k		1389066	0					
ANR	1389119	PrimaryExpression	8		1389066	1					
ANR	1389120	ReturnType	static void		1389066	1					
ANR	1389121	Identifier	emit_syscall_args		1389066	2					
ANR	1389122	ParameterList	"REgg * egg , int nargs"		1389066	3					
ANR	1389123	Parameter	REgg * egg	76:30:1607:1615	1389066	0	True				
ANR	1389124	ParameterType	REgg *		1389066	0					
ANR	1389125	Identifier	egg		1389066	1					
ANR	1389126	Parameter	int nargs	76:41:1618:1626	1389066	1	True				
ANR	1389127	ParameterType	int		1389066	0					
ANR	1389128	Identifier	nargs		1389066	1					
ANR	1389129	CFGEntryNode	ENTRY		1389066		True				
ANR	1389130	CFGExitNode	EXIT		1389066		True				
ANR	1389131	Symbol	nargs		1389066						
ANR	1389132	Symbol	R_SZ		1389066						
ANR	1389133	Symbol	egg		1389066						
ANR	1389134	Symbol	* j		1389066						
ANR	1389135	Symbol	* regs		1389066						
ANR	1389136	Symbol	j		1389066						
ANR	1389137	Symbol	regs		1389066						
ANR	1389138	Symbol	k		1389066						
ANR	1389139	Function	emit_set_string	85:0:1774:2524							
ANR	1389140	FunctionDef	"emit_set_string (REgg * egg , const char * dstvar , const char * str , int j)"		1389139	0					
ANR	1389141	CompoundStatement		85:83:1857:2524	1389139	0					
ANR	1389142	IdentifierDeclStatement	"int rest , off = 0 ;"	86:1:1860:1877	1389139	0	True				
ANR	1389143	IdentifierDecl	rest		1389139	0					
ANR	1389144	IdentifierDeclType	int		1389139	0					
ANR	1389145	Identifier	rest		1389139	1					
ANR	1389146	IdentifierDecl	off = 0		1389139	1					
ANR	1389147	IdentifierDeclType	int		1389139	0					
ANR	1389148	Identifier	off		1389139	1					
ANR	1389149	AssignmentExpression	off = 0		1389139	2		=			
ANR	1389150	Identifier	off		1389139	0					
ANR	1389151	PrimaryExpression	0		1389139	1					
ANR	1389152	ExpressionStatement	off = strlen ( str ) + 1	87:1:1880:1902	1389139	1	True				
ANR	1389153	AssignmentExpression	off = strlen ( str ) + 1		1389139	0		=			
ANR	1389154	Identifier	off		1389139	0					
ANR	1389155	AdditiveExpression	strlen ( str ) + 1		1389139	1		+			
ANR	1389156	CallExpression	strlen ( str )		1389139	0					
ANR	1389157	Callee	strlen		1389139	0					
ANR	1389158	Identifier	strlen		1389139	0					
ANR	1389159	ArgumentList	str		1389139	1					
ANR	1389160	Argument	str		1389139	0					
ANR	1389161	Identifier	str		1389139	0					
ANR	1389162	PrimaryExpression	1		1389139	1					
ANR	1389163	ExpressionStatement	rest = ( off % 4 )	88:1:1905:1921	1389139	2	True				
ANR	1389164	AssignmentExpression	rest = ( off % 4 )		1389139	0		=			
ANR	1389165	Identifier	rest		1389139	0					
ANR	1389166	MultiplicativeExpression	off % 4		1389139	1		%			
ANR	1389167	Identifier	off		1389139	0					
ANR	1389168	PrimaryExpression	4		1389139	1					
ANR	1389169	IfStatement	if ( rest )		1389139	3					
ANR	1389170	Condition	rest	89:5:1928:1931	1389139	0	True				
ANR	1389171	Identifier	rest		1389139	0					
ANR	1389172	CompoundStatement		5:11:76:76	1389139	1					
ANR	1389173	ExpressionStatement	rest = 4 - rest	90:2:1938:1953	1389139	0	True				
ANR	1389174	AssignmentExpression	rest = 4 - rest		1389139	0		=			
ANR	1389175	Identifier	rest		1389139	0					
ANR	1389176	AdditiveExpression	4 - rest		1389139	1		-			
ANR	1389177	PrimaryExpression	4		1389139	0					
ANR	1389178	Identifier	rest		1389139	1					
ANR	1389179	ExpressionStatement	off += rest - 4	92:1:1959:1974	1389139	4	True				
ANR	1389180	AssignmentExpression	off += rest - 4		1389139	0		+=			
ANR	1389181	Identifier	off		1389139	0					
ANR	1389182	AdditiveExpression	rest - 4		1389139	1		-			
ANR	1389183	Identifier	rest		1389139	0					
ANR	1389184	PrimaryExpression	4		1389139	1					
ANR	1389185	ExpressionStatement	"r_egg_printf ( egg , ""  add pc, %d\\n"" , ( off ) )"	93:1:1977:2020	1389139	5	True				
ANR	1389186	CallExpression	"r_egg_printf ( egg , ""  add pc, %d\\n"" , ( off ) )"		1389139	0					
ANR	1389187	Callee	r_egg_printf		1389139	0					
ANR	1389188	Identifier	r_egg_printf		1389139	0					
ANR	1389189	ArgumentList	egg		1389139	1					
ANR	1389190	Argument	egg		1389139	0					
ANR	1389191	Identifier	egg		1389139	0					
ANR	1389192	Argument	"""  add pc, %d\\n"""		1389139	1					
ANR	1389193	PrimaryExpression	"""  add pc, %d\\n"""		1389139	0					
ANR	1389194	Argument	off		1389139	2					
ANR	1389195	Identifier	off		1389139	0					
ANR	1389196	ExpressionStatement	"r_egg_printf ( egg , "".string \\""%s\\""\\n"" , str = r_str_escape ( str ) )"	97:1:2140:2204	1389139	6	True				
ANR	1389197	CallExpression	"r_egg_printf ( egg , "".string \\""%s\\""\\n"" , str = r_str_escape ( str ) )"		1389139	0					
ANR	1389198	Callee	r_egg_printf		1389139	0					
ANR	1389199	Identifier	r_egg_printf		1389139	0					
ANR	1389200	ArgumentList	egg		1389139	1					
ANR	1389201	Argument	egg		1389139	0					
ANR	1389202	Identifier	egg		1389139	0					
ANR	1389203	Argument	""".string \\""%s\\""\\n"""		1389139	1					
ANR	1389204	PrimaryExpression	""".string \\""%s\\""\\n"""		1389139	0					
ANR	1389205	Argument	str = r_str_escape ( str )		1389139	2					
ANR	1389206	AssignmentExpression	str = r_str_escape ( str )		1389139	0		=			
ANR	1389207	Identifier	str		1389139	0					
ANR	1389208	CallExpression	r_str_escape ( str )		1389139	1					
ANR	1389209	Callee	r_str_escape		1389139	0					
ANR	1389210	Identifier	r_str_escape		1389139	0					
ANR	1389211	ArgumentList	str		1389139	1					
ANR	1389212	Argument	str		1389139	0					
ANR	1389213	Identifier	str		1389139	0					
ANR	1389214	ExpressionStatement	free ( ( char * ) str )	98:1:2207:2226	1389139	7	True				
ANR	1389215	CallExpression	free ( ( char * ) str )		1389139	0					
ANR	1389216	Callee	free		1389139	0					
ANR	1389217	Identifier	free		1389139	0					
ANR	1389218	ArgumentList	( char * ) str		1389139	1					
ANR	1389219	Argument	( char * ) str		1389139	0					
ANR	1389220	CastExpression	( char * ) str		1389139	0					
ANR	1389221	CastTarget	char *		1389139	0					
ANR	1389222	Identifier	str		1389139	1					
ANR	1389223	IfStatement	if ( rest )		1389139	8					
ANR	1389224	Condition	rest	99:5:2233:2236	1389139	0	True				
ANR	1389225	Identifier	rest		1389139	0					
ANR	1389226	CompoundStatement		15:11:381:381	1389139	1					
ANR	1389227	ExpressionStatement	"r_egg_printf ( egg , "".fill %d, 1, 0\\n"" , ( rest ) )"	100:2:2243:2289	1389139	0	True				
ANR	1389228	CallExpression	"r_egg_printf ( egg , "".fill %d, 1, 0\\n"" , ( rest ) )"		1389139	0					
ANR	1389229	Callee	r_egg_printf		1389139	0					
ANR	1389230	Identifier	r_egg_printf		1389139	0					
ANR	1389231	ArgumentList	egg		1389139	1					
ANR	1389232	Argument	egg		1389139	0					
ANR	1389233	Identifier	egg		1389139	0					
ANR	1389234	Argument	""".fill %d, 1, 0\\n"""		1389139	1					
ANR	1389235	PrimaryExpression	""".fill %d, 1, 0\\n"""		1389139	0					
ANR	1389236	Argument	rest		1389139	2					
ANR	1389237	Identifier	rest		1389139	0					
ANR	1389238	ExpressionStatement	"r_egg_printf ( egg , ""  sub r0, pc, %d\\n"" , off + 12 )"	102:1:2295:2345	1389139	9	True				
ANR	1389239	CallExpression	"r_egg_printf ( egg , ""  sub r0, pc, %d\\n"" , off + 12 )"		1389139	0					
ANR	1389240	Callee	r_egg_printf		1389139	0					
ANR	1389241	Identifier	r_egg_printf		1389139	0					
ANR	1389242	ArgumentList	egg		1389139	1					
ANR	1389243	Argument	egg		1389139	0					
ANR	1389244	Identifier	egg		1389139	0					
ANR	1389245	Argument	"""  sub r0, pc, %d\\n"""		1389139	1					
ANR	1389246	PrimaryExpression	"""  sub r0, pc, %d\\n"""		1389139	0					
ANR	1389247	Argument	off + 12		1389139	2					
ANR	1389248	AdditiveExpression	off + 12		1389139	0		+			
ANR	1389249	Identifier	off		1389139	0					
ANR	1389250	PrimaryExpression	12		1389139	1					
ANR	1389251	CompoundStatement		20:2:494:546	1389139	10					
ANR	1389252	IdentifierDeclStatement	"char str [ 32 ] , * p = r_egg_mkvar ( egg , str , dstvar , 0 ) ;"	104:2:2352:2404	1389139	0	True				
ANR	1389253	IdentifierDecl	str [ 32 ]		1389139	0					
ANR	1389254	IdentifierDeclType	char [ 32 ]		1389139	0					
ANR	1389255	Identifier	str		1389139	1					
ANR	1389256	PrimaryExpression	32		1389139	2					
ANR	1389257	IdentifierDecl	"* p = r_egg_mkvar ( egg , str , dstvar , 0 )"		1389139	1					
ANR	1389258	IdentifierDeclType	char *		1389139	0					
ANR	1389259	Identifier	p		1389139	1					
ANR	1389260	AssignmentExpression	"* p = r_egg_mkvar ( egg , str , dstvar , 0 )"		1389139	2		=			
ANR	1389261	Identifier	p		1389139	0					
ANR	1389262	CallExpression	"r_egg_mkvar ( egg , str , dstvar , 0 )"		1389139	1					
ANR	1389263	Callee	r_egg_mkvar		1389139	0					
ANR	1389264	Identifier	r_egg_mkvar		1389139	0					
ANR	1389265	ArgumentList	egg		1389139	1					
ANR	1389266	Argument	egg		1389139	0					
ANR	1389267	Identifier	egg		1389139	0					
ANR	1389268	Argument	str		1389139	1					
ANR	1389269	Identifier	str		1389139	0					
ANR	1389270	Argument	dstvar		1389139	2					
ANR	1389271	Identifier	dstvar		1389139	0					
ANR	1389272	Argument	0		1389139	3					
ANR	1389273	PrimaryExpression	0		1389139	0					
ANR	1389274	ExpressionStatement	"r_egg_printf ( egg , ""  str r0, [%s]\\n"" , p )"	106:2:2466:2507	1389139	1	True				
ANR	1389275	CallExpression	"r_egg_printf ( egg , ""  str r0, [%s]\\n"" , p )"		1389139	0					
ANR	1389276	Callee	r_egg_printf		1389139	0					
ANR	1389277	Identifier	r_egg_printf		1389139	0					
ANR	1389278	ArgumentList	egg		1389139	1					
ANR	1389279	Argument	egg		1389139	0					
ANR	1389280	Identifier	egg		1389139	0					
ANR	1389281	Argument	"""  str r0, [%s]\\n"""		1389139	1					
ANR	1389282	PrimaryExpression	"""  str r0, [%s]\\n"""		1389139	0					
ANR	1389283	Argument	p		1389139	2					
ANR	1389284	Identifier	p		1389139	0					
ANR	1389285	ExpressionStatement	free ( p )	107:2:2511:2519	1389139	2	True				
ANR	1389286	CallExpression	free ( p )		1389139	0					
ANR	1389287	Callee	free		1389139	0					
ANR	1389288	Identifier	free		1389139	0					
ANR	1389289	ArgumentList	p		1389139	1					
ANR	1389290	Argument	p		1389139	0					
ANR	1389291	Identifier	p		1389139	0					
ANR	1389292	ReturnType	static void		1389139	1					
ANR	1389293	Identifier	emit_set_string		1389139	2					
ANR	1389294	ParameterList	"REgg * egg , const char * dstvar , const char * str , int j"		1389139	3					
ANR	1389295	Parameter	REgg * egg	85:28:1802:1810	1389139	0	True				
ANR	1389296	ParameterType	REgg *		1389139	0					
ANR	1389297	Identifier	egg		1389139	1					
ANR	1389298	Parameter	const char * dstvar	85:39:1813:1830	1389139	1	True				
ANR	1389299	ParameterType	const char *		1389139	0					
ANR	1389300	Identifier	dstvar		1389139	1					
ANR	1389301	Parameter	const char * str	85:59:1833:1847	1389139	2	True				
ANR	1389302	ParameterType	const char *		1389139	0					
ANR	1389303	Identifier	str		1389139	1					
ANR	1389304	Parameter	int j	85:76:1850:1854	1389139	3	True				
ANR	1389305	ParameterType	int		1389139	0					
ANR	1389306	Identifier	j		1389139	1					
ANR	1389307	CFGEntryNode	ENTRY		1389139		True				
ANR	1389308	CFGExitNode	EXIT		1389139		True				
ANR	1389309	Symbol	str		1389139						
ANR	1389310	Symbol	r_str_escape		1389139						
ANR	1389311	Symbol	p		1389139						
ANR	1389312	Symbol	r_egg_mkvar		1389139						
ANR	1389313	Symbol	rest		1389139						
ANR	1389314	Symbol	strlen		1389139						
ANR	1389315	Symbol	egg		1389139						
ANR	1389316	Symbol	j		1389139						
ANR	1389317	Symbol	dstvar		1389139						
ANR	1389318	Symbol	off		1389139						
ANR	1389319	Function	emit_jmp	111:0:2527:2729							
ANR	1389320	FunctionDef	"emit_jmp (REgg * egg , const char * str , int atr)"		1389319	0					
ANR	1389321	CompoundStatement		111:58:2585:2729	1389319	0					
ANR	1389322	IfStatement	if ( atr )		1389319	0					
ANR	1389323	Condition	atr	112:5:2592:2594	1389319	0	True				
ANR	1389324	Identifier	atr		1389319	0					
ANR	1389325	CompoundStatement		2:10:11:11	1389319	1					
ANR	1389326	ExpressionStatement	"r_egg_printf ( egg , ""  ldr r0, %s"" , str )"	113:2:2601:2640	1389319	0	True				
ANR	1389327	CallExpression	"r_egg_printf ( egg , ""  ldr r0, %s"" , str )"		1389319	0					
ANR	1389328	Callee	r_egg_printf		1389319	0					
ANR	1389329	Identifier	r_egg_printf		1389319	0					
ANR	1389330	ArgumentList	egg		1389319	1					
ANR	1389331	Argument	egg		1389319	0					
ANR	1389332	Identifier	egg		1389319	0					
ANR	1389333	Argument	"""  ldr r0, %s"""		1389319	1					
ANR	1389334	PrimaryExpression	"""  ldr r0, %s"""		1389319	0					
ANR	1389335	Argument	str		1389319	2					
ANR	1389336	Identifier	str		1389319	0					
ANR	1389337	ExpressionStatement	"r_egg_printf ( egg , ""  bx r0\\n"" )"	114:2:2644:2675	1389319	1	True				
ANR	1389338	CallExpression	"r_egg_printf ( egg , ""  bx r0\\n"" )"		1389319	0					
ANR	1389339	Callee	r_egg_printf		1389319	0					
ANR	1389340	Identifier	r_egg_printf		1389319	0					
ANR	1389341	ArgumentList	egg		1389319	1					
ANR	1389342	Argument	egg		1389319	0					
ANR	1389343	Identifier	egg		1389319	0					
ANR	1389344	Argument	"""  bx r0\\n"""		1389319	1					
ANR	1389345	PrimaryExpression	"""  bx r0\\n"""		1389319	0					
ANR	1389346	ElseStatement	else		1389319	0					
ANR	1389347	CompoundStatement		5:8:99:99	1389319	0					
ANR	1389348	ExpressionStatement	"r_egg_printf ( egg , ""  b %s\\n"" , str )"	116:2:2689:2724	1389319	0	True				
ANR	1389349	CallExpression	"r_egg_printf ( egg , ""  b %s\\n"" , str )"		1389319	0					
ANR	1389350	Callee	r_egg_printf		1389319	0					
ANR	1389351	Identifier	r_egg_printf		1389319	0					
ANR	1389352	ArgumentList	egg		1389319	1					
ANR	1389353	Argument	egg		1389319	0					
ANR	1389354	Identifier	egg		1389319	0					
ANR	1389355	Argument	"""  b %s\\n"""		1389319	1					
ANR	1389356	PrimaryExpression	"""  b %s\\n"""		1389319	0					
ANR	1389357	Argument	str		1389319	2					
ANR	1389358	Identifier	str		1389319	0					
ANR	1389359	ReturnType	static void		1389319	1					
ANR	1389360	Identifier	emit_jmp		1389319	2					
ANR	1389361	ParameterList	"REgg * egg , const char * str , int atr"		1389319	3					
ANR	1389362	Parameter	REgg * egg	111:21:2548:2556	1389319	0	True				
ANR	1389363	ParameterType	REgg *		1389319	0					
ANR	1389364	Identifier	egg		1389319	1					
ANR	1389365	Parameter	const char * str	111:32:2559:2573	1389319	1	True				
ANR	1389366	ParameterType	const char *		1389319	0					
ANR	1389367	Identifier	str		1389319	1					
ANR	1389368	Parameter	int atr	111:49:2576:2582	1389319	2	True				
ANR	1389369	ParameterType	int		1389319	0					
ANR	1389370	Identifier	atr		1389319	1					
ANR	1389371	CFGEntryNode	ENTRY		1389319		True				
ANR	1389372	CFGExitNode	EXIT		1389319		True				
ANR	1389373	Symbol	str		1389319						
ANR	1389374	Symbol	egg		1389319						
ANR	1389375	Symbol	atr		1389319						
ANR	1389376	Function	emit_call	120:0:2732:3146							
ANR	1389377	FunctionDef	"emit_call (REgg * egg , const char * str , int atr)"		1389376	0					
ANR	1389378	CompoundStatement		120:59:2791:3146	1389376	0					
ANR	1389379	IdentifierDeclStatement	int i ;	121:1:2794:2799	1389376	0	True				
ANR	1389380	IdentifierDecl	i		1389376	0					
ANR	1389381	IdentifierDeclType	int		1389376	0					
ANR	1389382	Identifier	i		1389376	1					
ANR	1389383	ForStatement	for ( i = 0 ; i < lastarg ; i ++ )		1389376	1					
ANR	1389384	ForInit	i = 0 ;	123:6:2876:2881	1389376	0	True				
ANR	1389385	AssignmentExpression	i = 0		1389376	0		=			
ANR	1389386	Identifier	i		1389376	0					
ANR	1389387	PrimaryExpression	0		1389376	1					
ANR	1389388	Condition	i < lastarg	123:13:2883:2893	1389376	1	True				
ANR	1389389	RelationalExpression	i < lastarg		1389376	0		<			
ANR	1389390	Identifier	i		1389376	0					
ANR	1389391	Identifier	lastarg		1389376	1					
ANR	1389392	PostIncDecOperationExpression	i ++	123:26:2896:2898	1389376	2	True				
ANR	1389393	Identifier	i		1389376	0					
ANR	1389394	IncDec	++		1389376	1					
ANR	1389395	CompoundStatement		4:31:109:109	1389376	3					
ANR	1389396	ExpressionStatement	"r_egg_printf ( egg , ""  ldr r%d, [%s]\\n"" , lastarg - 1 - i , lastargs [ i ] )"	124:2:2905:2974	1389376	0	True				
ANR	1389397	CallExpression	"r_egg_printf ( egg , ""  ldr r%d, [%s]\\n"" , lastarg - 1 - i , lastargs [ i ] )"		1389376	0					
ANR	1389398	Callee	r_egg_printf		1389376	0					
ANR	1389399	Identifier	r_egg_printf		1389376	0					
ANR	1389400	ArgumentList	egg		1389376	1					
ANR	1389401	Argument	egg		1389376	0					
ANR	1389402	Identifier	egg		1389376	0					
ANR	1389403	Argument	"""  ldr r%d, [%s]\\n"""		1389376	1					
ANR	1389404	PrimaryExpression	"""  ldr r%d, [%s]\\n"""		1389376	0					
ANR	1389405	Argument	lastarg - 1 - i		1389376	2					
ANR	1389406	AdditiveExpression	lastarg - 1 - i		1389376	0		-			
ANR	1389407	Identifier	lastarg		1389376	0					
ANR	1389408	AdditiveExpression	1 - i		1389376	1		-			
ANR	1389409	PrimaryExpression	1		1389376	0					
ANR	1389410	Identifier	i		1389376	1					
ANR	1389411	Argument	lastargs [ i ]		1389376	3					
ANR	1389412	ArrayIndexing	lastargs [ i ]		1389376	0					
ANR	1389413	Identifier	lastargs		1389376	0					
ANR	1389414	Identifier	i		1389376	1					
ANR	1389415	ExpressionStatement	lastargs [ i ] [ 0 ] = 0	125:2:2978:2996	1389376	1	True				
ANR	1389416	AssignmentExpression	lastargs [ i ] [ 0 ] = 0		1389376	0		=			
ANR	1389417	ArrayIndexing	lastargs [ i ] [ 0 ]		1389376	0					
ANR	1389418	ArrayIndexing	lastargs [ i ]		1389376	0					
ANR	1389419	Identifier	lastargs		1389376	0					
ANR	1389420	Identifier	i		1389376	1					
ANR	1389421	PrimaryExpression	0		1389376	1					
ANR	1389422	PrimaryExpression	0		1389376	1					
ANR	1389423	IfStatement	if ( atr )		1389376	2					
ANR	1389424	Condition	atr	128:5:3007:3009	1389376	0	True				
ANR	1389425	Identifier	atr		1389376	0					
ANR	1389426	CompoundStatement		9:10:220:220	1389376	1					
ANR	1389427	ExpressionStatement	"r_egg_printf ( egg , ""  ldr r0, %s"" , str )"	129:2:3016:3055	1389376	0	True				
ANR	1389428	CallExpression	"r_egg_printf ( egg , ""  ldr r0, %s"" , str )"		1389376	0					
ANR	1389429	Callee	r_egg_printf		1389376	0					
ANR	1389430	Identifier	r_egg_printf		1389376	0					
ANR	1389431	ArgumentList	egg		1389376	1					
ANR	1389432	Argument	egg		1389376	0					
ANR	1389433	Identifier	egg		1389376	0					
ANR	1389434	Argument	"""  ldr r0, %s"""		1389376	1					
ANR	1389435	PrimaryExpression	"""  ldr r0, %s"""		1389376	0					
ANR	1389436	Argument	str		1389376	2					
ANR	1389437	Identifier	str		1389376	0					
ANR	1389438	ExpressionStatement	"r_egg_printf ( egg , ""  blx r0\\n"" )"	130:2:3059:3091	1389376	1	True				
ANR	1389439	CallExpression	"r_egg_printf ( egg , ""  blx r0\\n"" )"		1389376	0					
ANR	1389440	Callee	r_egg_printf		1389376	0					
ANR	1389441	Identifier	r_egg_printf		1389376	0					
ANR	1389442	ArgumentList	egg		1389376	1					
ANR	1389443	Argument	egg		1389376	0					
ANR	1389444	Identifier	egg		1389376	0					
ANR	1389445	Argument	"""  blx r0\\n"""		1389376	1					
ANR	1389446	PrimaryExpression	"""  blx r0\\n"""		1389376	0					
ANR	1389447	ElseStatement	else		1389376	0					
ANR	1389448	CompoundStatement		12:8:309:309	1389376	0					
ANR	1389449	ExpressionStatement	"r_egg_printf ( egg , ""  bl %s\\n"" , str )"	132:2:3105:3141	1389376	0	True				
ANR	1389450	CallExpression	"r_egg_printf ( egg , ""  bl %s\\n"" , str )"		1389376	0					
ANR	1389451	Callee	r_egg_printf		1389376	0					
ANR	1389452	Identifier	r_egg_printf		1389376	0					
ANR	1389453	ArgumentList	egg		1389376	1					
ANR	1389454	Argument	egg		1389376	0					
ANR	1389455	Identifier	egg		1389376	0					
ANR	1389456	Argument	"""  bl %s\\n"""		1389376	1					
ANR	1389457	PrimaryExpression	"""  bl %s\\n"""		1389376	0					
ANR	1389458	Argument	str		1389376	2					
ANR	1389459	Identifier	str		1389376	0					
ANR	1389460	ReturnType	static void		1389376	1					
ANR	1389461	Identifier	emit_call		1389376	2					
ANR	1389462	ParameterList	"REgg * egg , const char * str , int atr"		1389376	3					
ANR	1389463	Parameter	REgg * egg	120:22:2754:2762	1389376	0	True				
ANR	1389464	ParameterType	REgg *		1389376	0					
ANR	1389465	Identifier	egg		1389376	1					
ANR	1389466	Parameter	const char * str	120:33:2765:2779	1389376	1	True				
ANR	1389467	ParameterType	const char *		1389376	0					
ANR	1389468	Identifier	str		1389376	1					
ANR	1389469	Parameter	int atr	120:50:2782:2788	1389376	2	True				
ANR	1389470	ParameterType	int		1389376	0					
ANR	1389471	Identifier	atr		1389376	1					
ANR	1389472	CFGEntryNode	ENTRY		1389376		True				
ANR	1389473	CFGExitNode	EXIT		1389376		True				
ANR	1389474	Symbol	str		1389376						
ANR	1389475	Symbol	* * lastargs		1389376						
ANR	1389476	Symbol	lastarg		1389376						
ANR	1389477	Symbol	* * i		1389376						
ANR	1389478	Symbol	* i		1389376						
ANR	1389479	Symbol	egg		1389376						
ANR	1389480	Symbol	i		1389376						
ANR	1389481	Symbol	lastargs		1389376						
ANR	1389482	Symbol	* lastargs		1389376						
ANR	1389483	Symbol	atr		1389376						
ANR	1389484	Function	emit_arg	136:0:3149:4009							
ANR	1389485	FunctionDef	"emit_arg (REgg * egg , int xs , int num , const char * str)"		1389484	0					
ANR	1389486	CompoundStatement		136:66:3215:4009	1389484	0					
ANR	1389487	IdentifierDeclStatement	int d = atoi ( str ) ;	137:1:3218:3236	1389484	0	True				
ANR	1389488	IdentifierDecl	d = atoi ( str )		1389484	0					
ANR	1389489	IdentifierDeclType	int		1389484	0					
ANR	1389490	Identifier	d		1389484	1					
ANR	1389491	AssignmentExpression	d = atoi ( str )		1389484	2		=			
ANR	1389492	Identifier	d		1389484	0					
ANR	1389493	CallExpression	atoi ( str )		1389484	1					
ANR	1389494	Callee	atoi		1389484	0					
ANR	1389495	Identifier	atoi		1389484	0					
ANR	1389496	ArgumentList	str		1389484	1					
ANR	1389497	Argument	str		1389484	0					
ANR	1389498	Identifier	str		1389484	0					
ANR	1389499	IfStatement	if ( ! attsyntax && ( * str == '$' ) )		1389484	1					
ANR	1389500	Condition	! attsyntax && ( * str == '$' )	138:5:3243:3269	1389484	0	True				
ANR	1389501	AndExpression	! attsyntax && ( * str == '$' )		1389484	0		&&			
ANR	1389502	UnaryOperationExpression	! attsyntax		1389484	0					
ANR	1389503	UnaryOperator	!		1389484	0					
ANR	1389504	Identifier	attsyntax		1389484	1					
ANR	1389505	EqualityExpression	* str == '$'		1389484	1		==			
ANR	1389506	UnaryOperationExpression	* str		1389484	0					
ANR	1389507	UnaryOperator	*		1389484	0					
ANR	1389508	Identifier	str		1389484	1					
ANR	1389509	PrimaryExpression	'$'		1389484	1					
ANR	1389510	CompoundStatement		3:34:56:56	1389484	1					
ANR	1389511	ExpressionStatement	str ++	139:2:3276:3281	1389484	0	True				
ANR	1389512	PostIncDecOperationExpression	str ++		1389484	0					
ANR	1389513	Identifier	str		1389484	0					
ANR	1389514	IncDec	++		1389484	1					
ANR	1389515	ExpressionStatement	lastarg = num	141:1:3287:3300	1389484	2	True				
ANR	1389516	AssignmentExpression	lastarg = num		1389484	0		=			
ANR	1389517	Identifier	lastarg		1389484	0					
ANR	1389518	Identifier	num		1389484	1					
ANR	1389519	SwitchStatement	switch ( xs )		1389484	3					
ANR	1389520	Condition	xs	142:9:3311:3312	1389484	0	True				
ANR	1389521	Identifier	xs		1389484	0					
ANR	1389522	CompoundStatement		7:13:99:99	1389484	1					
ANR	1389523	Label	case 0 :	143:1:3318:3324	1389484	0	True				
ANR	1389524	IfStatement	"if ( strchr ( str , ',' ) )"		1389484	1					
ANR	1389525	Condition	"strchr ( str , ',' )"	144:6:3332:3348	1389484	0	True				
ANR	1389526	CallExpression	"strchr ( str , ',' )"		1389484	0					
ANR	1389527	Callee	strchr		1389484	0					
ANR	1389528	Identifier	strchr		1389484	0					
ANR	1389529	ArgumentList	str		1389484	1					
ANR	1389530	Argument	str		1389484	0					
ANR	1389531	Identifier	str		1389484	0					
ANR	1389532	Argument	"','"		1389484	1					
ANR	1389533	PrimaryExpression	"','"		1389484	0					
ANR	1389534	CompoundStatement		9:25:135:135	1389484	1					
ANR	1389535	ExpressionStatement	"strncpy ( lastargs [ num - 1 ] , str , sizeof ( lastargs [ 0 ] ) - 1 )"	146:3:3408:3465	1389484	0	True				
ANR	1389536	CallExpression	"strncpy ( lastargs [ num - 1 ] , str , sizeof ( lastargs [ 0 ] ) - 1 )"		1389484	0					
ANR	1389537	Callee	strncpy		1389484	0					
ANR	1389538	Identifier	strncpy		1389484	0					
ANR	1389539	ArgumentList	lastargs [ num - 1 ]		1389484	1					
ANR	1389540	Argument	lastargs [ num - 1 ]		1389484	0					
ANR	1389541	ArrayIndexing	lastargs [ num - 1 ]		1389484	0					
ANR	1389542	Identifier	lastargs		1389484	0					
ANR	1389543	AdditiveExpression	num - 1		1389484	1		-			
ANR	1389544	Identifier	num		1389484	0					
ANR	1389545	PrimaryExpression	1		1389484	1					
ANR	1389546	Argument	str		1389484	1					
ANR	1389547	Identifier	str		1389484	0					
ANR	1389548	Argument	sizeof ( lastargs [ 0 ] ) - 1		1389484	2					
ANR	1389549	AdditiveExpression	sizeof ( lastargs [ 0 ] ) - 1		1389484	0		-			
ANR	1389550	SizeofExpression	sizeof ( lastargs [ 0 ] )		1389484	0					
ANR	1389551	Sizeof	sizeof		1389484	0					
ANR	1389552	ArrayIndexing	lastargs [ 0 ]		1389484	1					
ANR	1389553	Identifier	lastargs		1389484	0					
ANR	1389554	PrimaryExpression	0		1389484	1					
ANR	1389555	PrimaryExpression	1		1389484	1					
ANR	1389556	ElseStatement	else		1389484	0					
ANR	1389557	CompoundStatement		12:9:260:260	1389484	0					
ANR	1389558	IfStatement	if ( ! atoi ( str ) )		1389484	0					
ANR	1389559	Condition	! atoi ( str )	148:7:3485:3495	1389484	0	True				
ANR	1389560	UnaryOperationExpression	! atoi ( str )		1389484	0					
ANR	1389561	UnaryOperator	!		1389484	0					
ANR	1389562	CallExpression	atoi ( str )		1389484	1					
ANR	1389563	Callee	atoi		1389484	0					
ANR	1389564	Identifier	atoi		1389484	0					
ANR	1389565	ArgumentList	str		1389484	1					
ANR	1389566	Argument	str		1389484	0					
ANR	1389567	Identifier	str		1389484	0					
ANR	1389568	CompoundStatement		13:20:282:282	1389484	1					
ANR	1389569	ExpressionStatement	"eprintf ( ""WARNING: probably a bug?\\n"" )"	149:4:3504:3542	1389484	0	True				
ANR	1389570	CallExpression	"eprintf ( ""WARNING: probably a bug?\\n"" )"		1389484	0					
ANR	1389571	Callee	eprintf		1389484	0					
ANR	1389572	Identifier	eprintf		1389484	0					
ANR	1389573	ArgumentList	"""WARNING: probably a bug?\\n"""		1389484	1					
ANR	1389574	Argument	"""WARNING: probably a bug?\\n"""		1389484	0					
ANR	1389575	PrimaryExpression	"""WARNING: probably a bug?\\n"""		1389484	0					
ANR	1389576	ExpressionStatement	"r_egg_printf ( egg , ""  mov r0, %s\\n"" , str )"	151:3:3552:3593	1389484	1	True				
ANR	1389577	CallExpression	"r_egg_printf ( egg , ""  mov r0, %s\\n"" , str )"		1389484	0					
ANR	1389578	Callee	r_egg_printf		1389484	0					
ANR	1389579	Identifier	r_egg_printf		1389484	0					
ANR	1389580	ArgumentList	egg		1389484	1					
ANR	1389581	Argument	egg		1389484	0					
ANR	1389582	Identifier	egg		1389484	0					
ANR	1389583	Argument	"""  mov r0, %s\\n"""		1389484	1					
ANR	1389584	PrimaryExpression	"""  mov r0, %s\\n"""		1389484	0					
ANR	1389585	Argument	str		1389484	2					
ANR	1389586	Identifier	str		1389484	0					
ANR	1389587	ExpressionStatement	"snprintf ( lastargs [ num - 1 ] , sizeof ( lastargs [ 0 ] ) , ""sp, %d"" , 8 + ( num * 4 ) )"	152:3:3598:3673	1389484	2	True				
ANR	1389588	CallExpression	"snprintf ( lastargs [ num - 1 ] , sizeof ( lastargs [ 0 ] ) , ""sp, %d"" , 8 + ( num * 4 ) )"		1389484	0					
ANR	1389589	Callee	snprintf		1389484	0					
ANR	1389590	Identifier	snprintf		1389484	0					
ANR	1389591	ArgumentList	lastargs [ num - 1 ]		1389484	1					
ANR	1389592	Argument	lastargs [ num - 1 ]		1389484	0					
ANR	1389593	ArrayIndexing	lastargs [ num - 1 ]		1389484	0					
ANR	1389594	Identifier	lastargs		1389484	0					
ANR	1389595	AdditiveExpression	num - 1		1389484	1		-			
ANR	1389596	Identifier	num		1389484	0					
ANR	1389597	PrimaryExpression	1		1389484	1					
ANR	1389598	Argument	sizeof ( lastargs [ 0 ] )		1389484	1					
ANR	1389599	SizeofExpression	sizeof ( lastargs [ 0 ] )		1389484	0					
ANR	1389600	Sizeof	sizeof		1389484	0					
ANR	1389601	ArrayIndexing	lastargs [ 0 ]		1389484	1					
ANR	1389602	Identifier	lastargs		1389484	0					
ANR	1389603	PrimaryExpression	0		1389484	1					
ANR	1389604	Argument	"""sp, %d"""		1389484	2					
ANR	1389605	PrimaryExpression	"""sp, %d"""		1389484	0					
ANR	1389606	Argument	8 + ( num * 4 )		1389484	3					
ANR	1389607	AdditiveExpression	8 + ( num * 4 )		1389484	0		+			
ANR	1389608	PrimaryExpression	8		1389484	0					
ANR	1389609	MultiplicativeExpression	num * 4		1389484	1		*			
ANR	1389610	Identifier	num		1389484	0					
ANR	1389611	PrimaryExpression	4		1389484	1					
ANR	1389612	ExpressionStatement	"r_egg_printf ( egg , ""  str r0, [%s]\\n"" , lastargs [ num - 1 ] )"	153:3:3678:3735	1389484	3	True				
ANR	1389613	CallExpression	"r_egg_printf ( egg , ""  str r0, [%s]\\n"" , lastargs [ num - 1 ] )"		1389484	0					
ANR	1389614	Callee	r_egg_printf		1389484	0					
ANR	1389615	Identifier	r_egg_printf		1389484	0					
ANR	1389616	ArgumentList	egg		1389484	1					
ANR	1389617	Argument	egg		1389484	0					
ANR	1389618	Identifier	egg		1389484	0					
ANR	1389619	Argument	"""  str r0, [%s]\\n"""		1389484	1					
ANR	1389620	PrimaryExpression	"""  str r0, [%s]\\n"""		1389484	0					
ANR	1389621	Argument	lastargs [ num - 1 ]		1389484	2					
ANR	1389622	ArrayIndexing	lastargs [ num - 1 ]		1389484	0					
ANR	1389623	Identifier	lastargs		1389484	0					
ANR	1389624	AdditiveExpression	num - 1		1389484	1		-			
ANR	1389625	Identifier	num		1389484	0					
ANR	1389626	PrimaryExpression	1		1389484	1					
ANR	1389627	BreakStatement	break ;	155:2:3743:3748	1389484	2	True				
ANR	1389628	Label	case '*' :	156:1:3751:3759	1389484	3	True				
ANR	1389629	ExpressionStatement	"r_egg_printf ( egg , ""  push {%s}\\n"" , str )"	157:2:3763:3803	1389484	4	True				
ANR	1389630	CallExpression	"r_egg_printf ( egg , ""  push {%s}\\n"" , str )"		1389484	0					
ANR	1389631	Callee	r_egg_printf		1389484	0					
ANR	1389632	Identifier	r_egg_printf		1389484	0					
ANR	1389633	ArgumentList	egg		1389484	1					
ANR	1389634	Argument	egg		1389484	0					
ANR	1389635	Identifier	egg		1389484	0					
ANR	1389636	Argument	"""  push {%s}\\n"""		1389484	1					
ANR	1389637	PrimaryExpression	"""  push {%s}\\n"""		1389484	0					
ANR	1389638	Argument	str		1389484	2					
ANR	1389639	Identifier	str		1389484	0					
ANR	1389640	BreakStatement	break ;	158:2:3807:3812	1389484	5	True				
ANR	1389641	Label	case '&' :	159:1:3815:3823	1389484	6	True				
ANR	1389642	IfStatement	if ( d )		1389484	7					
ANR	1389643	Condition	d	160:6:3831:3831	1389484	0	True				
ANR	1389644	Identifier	d		1389484	0					
ANR	1389645	CompoundStatement		25:9:618:618	1389484	1					
ANR	1389646	Statement	r_egg_printf	161:3:3839:3850	1389484	0	True				
ANR	1389647	Statement	(	161:16:3852:3852	1389484	1	True				
ANR	1389648	Statement	egg	161:17:3853:3855	1389484	2	True				
ANR	1389649	Statement	","	161:20:3856:3856	1389484	3	True				
ANR	1389650	Statement	"""  add """	161:22:3858:3865	1389484	4	True				
ANR	1389651	Statement	R_BP	161:30:3866:3869	1389484	5	True				
ANR	1389652	Statement	""", %d\\n"""	161:35:3871:3878	1389484	6	True				
ANR	1389653	Statement	","	161:43:3879:3879	1389484	7	True				
ANR	1389654	Statement	d	161:45:3881:3881	1389484	8	True				
ANR	1389655	Statement	)	161:46:3882:3882	1389484	9	True				
ANR	1389656	ExpressionStatement		161:47:3883:3883	1389484	10	True				
ANR	1389657	Statement	r_egg_printf	163:2:3891:3902	1389484	8	True				
ANR	1389658	Statement	(	163:15:3904:3904	1389484	9	True				
ANR	1389659	Statement	egg	163:16:3905:3907	1389484	10	True				
ANR	1389660	Statement	","	163:19:3908:3908	1389484	11	True				
ANR	1389661	Statement	"""  push {"""	163:21:3910:3919	1389484	12	True				
ANR	1389662	Statement	R_BP	163:31:3920:3923	1389484	13	True				
ANR	1389663	Statement	"""}\\n"""	163:36:3925:3929	1389484	14	True				
ANR	1389664	Statement	)	163:41:3930:3930	1389484	15	True				
ANR	1389665	ExpressionStatement		163:42:3931:3931	1389484	16	True				
ANR	1389666	IfStatement	if ( d )		1389484	17					
ANR	1389667	Condition	d	164:6:3939:3939	1389484	0	True				
ANR	1389668	Identifier	d		1389484	0					
ANR	1389669	CompoundStatement		29:9:726:726	1389484	1					
ANR	1389670	Statement	r_egg_printf	165:3:3947:3958	1389484	0	True				
ANR	1389671	Statement	(	165:16:3960:3960	1389484	1	True				
ANR	1389672	Statement	egg	165:17:3961:3963	1389484	2	True				
ANR	1389673	Statement	","	165:20:3964:3964	1389484	3	True				
ANR	1389674	Statement	"""  sub """	165:22:3966:3973	1389484	4	True				
ANR	1389675	Statement	R_BP	165:30:3974:3977	1389484	5	True				
ANR	1389676	Statement	""", %d\\n"""	165:35:3979:3986	1389484	6	True				
ANR	1389677	Statement	","	165:43:3987:3987	1389484	7	True				
ANR	1389678	Statement	d	165:45:3989:3989	1389484	8	True				
ANR	1389679	Statement	)	165:46:3990:3990	1389484	9	True				
ANR	1389680	ExpressionStatement		165:47:3991:3991	1389484	10	True				
ANR	1389681	BreakStatement	break ;	167:2:3999:4004	1389484	18	True				
ANR	1389682	ReturnType	static void		1389484	1					
ANR	1389683	Identifier	emit_arg		1389484	2					
ANR	1389684	ParameterList	"REgg * egg , int xs , int num , const char * str"		1389484	3					
ANR	1389685	Parameter	REgg * egg	136:21:3170:3178	1389484	0	True				
ANR	1389686	ParameterType	REgg *		1389484	0					
ANR	1389687	Identifier	egg		1389484	1					
ANR	1389688	Parameter	int xs	136:32:3181:3186	1389484	1	True				
ANR	1389689	ParameterType	int		1389484	0					
ANR	1389690	Identifier	xs		1389484	1					
ANR	1389691	Parameter	int num	136:40:3189:3195	1389484	2	True				
ANR	1389692	ParameterType	int		1389484	0					
ANR	1389693	Identifier	num		1389484	1					
ANR	1389694	Parameter	const char * str	136:49:3198:3212	1389484	3	True				
ANR	1389695	ParameterType	const char *		1389484	0					
ANR	1389696	Identifier	str		1389484	1					
ANR	1389697	CFGEntryNode	ENTRY		1389484		True				
ANR	1389698	CFGExitNode	EXIT		1389484		True				
ANR	1389699	Symbol	atoi		1389484						
ANR	1389700	Symbol	egg		1389484						
ANR	1389701	Symbol	d		1389484						
ANR	1389702	Symbol	num		1389484						
ANR	1389703	Symbol	attsyntax		1389484						
ANR	1389704	Symbol	strchr		1389484						
ANR	1389705	Symbol	* lastargs		1389484						
ANR	1389706	Symbol	str		1389484						
ANR	1389707	Symbol	* num		1389484						
ANR	1389708	Symbol	lastarg		1389484						
ANR	1389709	Symbol	lastargs		1389484						
ANR	1389710	Symbol	xs		1389484						
ANR	1389711	Symbol	* str		1389484						
ANR	1389712	Function	emit_get_result	171:0:4012:4114							
ANR	1389713	FunctionDef	"emit_get_result (REgg * egg , const char * ocn)"		1389712	0					
ANR	1389714	CompoundStatement		171:56:4068:4114	1389712	0					
ANR	1389715	ExpressionStatement	"r_egg_printf ( egg , ""  mov %s, r0\\n"" , ocn )"	172:1:4071:4112	1389712	0	True				
ANR	1389716	CallExpression	"r_egg_printf ( egg , ""  mov %s, r0\\n"" , ocn )"		1389712	0					
ANR	1389717	Callee	r_egg_printf		1389712	0					
ANR	1389718	Identifier	r_egg_printf		1389712	0					
ANR	1389719	ArgumentList	egg		1389712	1					
ANR	1389720	Argument	egg		1389712	0					
ANR	1389721	Identifier	egg		1389712	0					
ANR	1389722	Argument	"""  mov %s, r0\\n"""		1389712	1					
ANR	1389723	PrimaryExpression	"""  mov %s, r0\\n"""		1389712	0					
ANR	1389724	Argument	ocn		1389712	2					
ANR	1389725	Identifier	ocn		1389712	0					
ANR	1389726	ReturnType	static void		1389712	1					
ANR	1389727	Identifier	emit_get_result		1389712	2					
ANR	1389728	ParameterList	"REgg * egg , const char * ocn"		1389712	3					
ANR	1389729	Parameter	REgg * egg	171:28:4040:4048	1389712	0	True				
ANR	1389730	ParameterType	REgg *		1389712	0					
ANR	1389731	Identifier	egg		1389712	1					
ANR	1389732	Parameter	const char * ocn	171:39:4051:4065	1389712	1	True				
ANR	1389733	ParameterType	const char *		1389712	0					
ANR	1389734	Identifier	ocn		1389712	1					
ANR	1389735	CFGEntryNode	ENTRY		1389712		True				
ANR	1389736	CFGExitNode	EXIT		1389712		True				
ANR	1389737	Symbol	egg		1389712						
ANR	1389738	Symbol	ocn		1389712						
ANR	1389739	Function	emit_restore_stack	175:0:4117:4282							
ANR	1389740	FunctionDef	"emit_restore_stack (REgg * egg , int size)"		1389739	0					
ANR	1389741	CompoundStatement		175:52:4169:4282	1389739	0					
ANR	1389742	ReturnType	static void		1389739	1					
ANR	1389743	Identifier	emit_restore_stack		1389739	2					
ANR	1389744	ParameterList	"REgg * egg , int size"		1389739	3					
ANR	1389745	Parameter	REgg * egg	175:31:4148:4156	1389739	0	True				
ANR	1389746	ParameterType	REgg *		1389739	0					
ANR	1389747	Identifier	egg		1389739	1					
ANR	1389748	Parameter	int size	175:42:4159:4166	1389739	1	True				
ANR	1389749	ParameterType	int		1389739	0					
ANR	1389750	Identifier	size		1389739	1					
ANR	1389751	CFGEntryNode	ENTRY		1389739		True				
ANR	1389752	CFGExitNode	EXIT		1389739		True				
ANR	1389753	Symbol	egg		1389739						
ANR	1389754	Symbol	size		1389739						
ANR	1389755	Function	emit_get_while_end	180:0:4285:4437							
ANR	1389756	FunctionDef	"emit_get_while_end (REgg * egg , char * str , const char * ctxpush , const char * label)"		1389755	0					
ANR	1389757	CompoundStatement		180:93:4378:4437	1389755	0					
ANR	1389758	ExpressionStatement	"sprintf ( str , ""  push {%s}\\n  b %s\\n"" , ctxpush , label )"	181:1:4381:4435	1389755	0	True				
ANR	1389759	CallExpression	"sprintf ( str , ""  push {%s}\\n  b %s\\n"" , ctxpush , label )"		1389755	0					
ANR	1389760	Callee	sprintf		1389755	0					
ANR	1389761	Identifier	sprintf		1389755	0					
ANR	1389762	ArgumentList	str		1389755	1					
ANR	1389763	Argument	str		1389755	0					
ANR	1389764	Identifier	str		1389755	0					
ANR	1389765	Argument	"""  push {%s}\\n  b %s\\n"""		1389755	1					
ANR	1389766	PrimaryExpression	"""  push {%s}\\n  b %s\\n"""		1389755	0					
ANR	1389767	Argument	ctxpush		1389755	2					
ANR	1389768	Identifier	ctxpush		1389755	0					
ANR	1389769	Argument	label		1389755	3					
ANR	1389770	Identifier	label		1389755	0					
ANR	1389771	ReturnType	static void		1389755	1					
ANR	1389772	Identifier	emit_get_while_end		1389755	2					
ANR	1389773	ParameterList	"REgg * egg , char * str , const char * ctxpush , const char * label"		1389755	3					
ANR	1389774	Parameter	REgg * egg	180:31:4316:4324	1389755	0	True				
ANR	1389775	ParameterType	REgg *		1389755	0					
ANR	1389776	Identifier	egg		1389755	1					
ANR	1389777	Parameter	char * str	180:42:4327:4335	1389755	1	True				
ANR	1389778	ParameterType	char *		1389755	0					
ANR	1389779	Identifier	str		1389755	1					
ANR	1389780	Parameter	const char * ctxpush	180:53:4338:4356	1389755	2	True				
ANR	1389781	ParameterType	const char *		1389755	0					
ANR	1389782	Identifier	ctxpush		1389755	1					
ANR	1389783	Parameter	const char * label	180:74:4359:4375	1389755	3	True				
ANR	1389784	ParameterType	const char *		1389755	0					
ANR	1389785	Identifier	label		1389755	1					
ANR	1389786	CFGEntryNode	ENTRY		1389755		True				
ANR	1389787	CFGExitNode	EXIT		1389755		True				
ANR	1389788	Symbol	str		1389755						
ANR	1389789	Symbol	egg		1389755						
ANR	1389790	Symbol	ctxpush		1389755						
ANR	1389791	Symbol	label		1389755						
ANR	1389792	Function	emit_while_end	184:0:4440:4638							
ANR	1389793	FunctionDef	"emit_while_end (REgg * egg , const char * labelback)"		1389792	0					
ANR	1389794	CompoundStatement		184:61:4501:4638	1389792	0					
ANR	1389795	Statement	r_egg_printf	185:1:4504:4515	1389792	0	True				
ANR	1389796	Statement	(	185:14:4517:4517	1389792	1	True				
ANR	1389797	Statement	egg	185:15:4518:4520	1389792	2	True				
ANR	1389798	Statement	","	185:18:4521:4521	1389792	3	True				
ANR	1389799	Statement	"""  pop """	186:2:4525:4532	1389792	4	True				
ANR	1389800	Statement	R_AX	186:10:4533:4536	1389792	5	True				
ANR	1389801	Statement	"""\\n"""	186:15:4538:4541	1389792	6	True				
ANR	1389802	Statement	"""  cmp """	187:2:4545:4552	1389792	7	True				
ANR	1389803	Statement	R_AX	187:10:4553:4556	1389792	8	True				
ANR	1389804	Statement	""", """	187:15:4558:4561	1389792	9	True				
ANR	1389805	Statement	R_AX	187:19:4562:4565	1389792	10	True				
ANR	1389806	Statement	"""\\n"""	187:24:4567:4570	1389792	11	True				
ANR	1389807	Statement	"""  beq %s\\n"""	188:2:4612:4623	1389792	12	True				
ANR	1389808	Statement	","	188:14:4624:4624	1389792	13	True				
ANR	1389809	Statement	labelback	188:16:4626:4634	1389792	14	True				
ANR	1389810	Statement	)	188:25:4635:4635	1389792	15	True				
ANR	1389811	ExpressionStatement		188:26:4636:4636	1389792	16	True				
ANR	1389812	ReturnType	static void		1389792	1					
ANR	1389813	Identifier	emit_while_end		1389792	2					
ANR	1389814	ParameterList	"REgg * egg , const char * labelback"		1389792	3					
ANR	1389815	Parameter	REgg * egg	184:27:4467:4475	1389792	0	True				
ANR	1389816	ParameterType	REgg *		1389792	0					
ANR	1389817	Identifier	egg		1389792	1					
ANR	1389818	Parameter	const char * labelback	184:38:4478:4498	1389792	1	True				
ANR	1389819	ParameterType	const char *		1389792	0					
ANR	1389820	Identifier	labelback		1389792	1					
ANR	1389821	CFGEntryNode	ENTRY		1389792		True				
ANR	1389822	CFGExitNode	EXIT		1389792		True				
ANR	1389823	Symbol	egg		1389792						
ANR	1389824	Symbol	labelback		1389792						
ANR	1389825	Function	emit_get_var	191:0:4641:4923							
ANR	1389826	FunctionDef	"emit_get_var (REgg * egg , int type , char * out , int idx)"		1389825	0					
ANR	1389827	CompoundStatement		191:66:4707:4923	1389825	0					
ANR	1389828	SwitchStatement	switch ( type )		1389825	0					
ANR	1389829	Condition	type	192:9:4718:4721	1389825	0	True				
ANR	1389830	Identifier	type		1389825	0					
ANR	1389831	CompoundStatement		2:15:16:16	1389825	1					
ANR	1389832	Label	case 0 :	193:1:4727:4733	1389825	0	True				
ANR	1389833	ExpressionStatement	"sprintf ( out , ""sp, %d"" , idx - 1 )"	193:9:4735:4767	1389825	1	True				
ANR	1389834	CallExpression	"sprintf ( out , ""sp, %d"" , idx - 1 )"		1389825	0					
ANR	1389835	Callee	sprintf		1389825	0					
ANR	1389836	Identifier	sprintf		1389825	0					
ANR	1389837	ArgumentList	out		1389825	1					
ANR	1389838	Argument	out		1389825	0					
ANR	1389839	Identifier	out		1389825	0					
ANR	1389840	Argument	"""sp, %d"""		1389825	1					
ANR	1389841	PrimaryExpression	"""sp, %d"""		1389825	0					
ANR	1389842	Argument	idx - 1		1389825	2					
ANR	1389843	AdditiveExpression	idx - 1		1389825	0		-			
ANR	1389844	Identifier	idx		1389825	0					
ANR	1389845	PrimaryExpression	1		1389825	1					
ANR	1389846	BreakStatement	break ;	193:43:4769:4774	1389825	2	True				
ANR	1389847	Label	case 1 :	194:1:4791:4797	1389825	3	True				
ANR	1389848	ExpressionStatement	"sprintf ( out , ""r%d"" , idx )"	194:9:4799:4824	1389825	4	True				
ANR	1389849	CallExpression	"sprintf ( out , ""r%d"" , idx )"		1389825	0					
ANR	1389850	Callee	sprintf		1389825	0					
ANR	1389851	Identifier	sprintf		1389825	0					
ANR	1389852	ArgumentList	out		1389825	1					
ANR	1389853	Argument	out		1389825	0					
ANR	1389854	Identifier	out		1389825	0					
ANR	1389855	Argument	"""r%d"""		1389825	1					
ANR	1389856	PrimaryExpression	"""r%d"""		1389825	0					
ANR	1389857	Argument	idx		1389825	2					
ANR	1389858	Identifier	idx		1389825	0					
ANR	1389859	BreakStatement	break ;	194:36:4826:4831	1389825	5	True				
ANR	1389860	ReturnType	static void		1389825	1					
ANR	1389861	Identifier	emit_get_var		1389825	2					
ANR	1389862	ParameterList	"REgg * egg , int type , char * out , int idx"		1389825	3					
ANR	1389863	Parameter	REgg * egg	191:25:4666:4674	1389825	0	True				
ANR	1389864	ParameterType	REgg *		1389825	0					
ANR	1389865	Identifier	egg		1389825	1					
ANR	1389866	Parameter	int type	191:36:4677:4684	1389825	1	True				
ANR	1389867	ParameterType	int		1389825	0					
ANR	1389868	Identifier	type		1389825	1					
ANR	1389869	Parameter	char * out	191:46:4687:4695	1389825	2	True				
ANR	1389870	ParameterType	char *		1389825	0					
ANR	1389871	Identifier	out		1389825	1					
ANR	1389872	Parameter	int idx	191:57:4698:4704	1389825	3	True				
ANR	1389873	ParameterType	int		1389825	0					
ANR	1389874	Identifier	idx		1389825	1					
ANR	1389875	CFGEntryNode	ENTRY		1389825		True				
ANR	1389876	CFGExitNode	EXIT		1389825		True				
ANR	1389877	Symbol	egg		1389825						
ANR	1389878	Symbol	type		1389825						
ANR	1389879	Symbol	idx		1389825						
ANR	1389880	Symbol	out		1389825						
ANR	1389881	Function	emit_trap	199:0:4926:4996							
ANR	1389882	FunctionDef	emit_trap (REgg * egg)		1389881	0					
ANR	1389883	CompoundStatement		199:33:4959:4996	1389881	0					
ANR	1389884	ExpressionStatement	"r_egg_printf ( egg , ""  udf 16\\n"" )"	200:1:4962:4994	1389881	0	True				
ANR	1389885	CallExpression	"r_egg_printf ( egg , ""  udf 16\\n"" )"		1389881	0					
ANR	1389886	Callee	r_egg_printf		1389881	0					
ANR	1389887	Identifier	r_egg_printf		1389881	0					
ANR	1389888	ArgumentList	egg		1389881	1					
ANR	1389889	Argument	egg		1389881	0					
ANR	1389890	Identifier	egg		1389881	0					
ANR	1389891	Argument	"""  udf 16\\n"""		1389881	1					
ANR	1389892	PrimaryExpression	"""  udf 16\\n"""		1389881	0					
ANR	1389893	ReturnType	static void		1389881	1					
ANR	1389894	Identifier	emit_trap		1389881	2					
ANR	1389895	ParameterList	REgg * egg		1389881	3					
ANR	1389896	Parameter	REgg * egg	199:22:4948:4956	1389881	0	True				
ANR	1389897	ParameterType	REgg *		1389881	0					
ANR	1389898	Identifier	egg		1389881	1					
ANR	1389899	CFGEntryNode	ENTRY		1389881		True				
ANR	1389900	CFGExitNode	EXIT		1389881		True				
ANR	1389901	Symbol	egg		1389881						
ANR	1389902	Function	emit_load_ptr	203:0:4999:5112							
ANR	1389903	FunctionDef	"emit_load_ptr (REgg * egg , const char * dst)"		1389902	0					
ANR	1389904	CompoundStatement		203:54:5053:5112	1389902	0					
ANR	1389905	ExpressionStatement	"r_egg_printf ( egg , ""  ldr r0, [fp, %d]\\n"" , atoi ( dst ) )"	204:1:5056:5110	1389902	0	True				
ANR	1389906	CallExpression	"r_egg_printf ( egg , ""  ldr r0, [fp, %d]\\n"" , atoi ( dst ) )"		1389902	0					
ANR	1389907	Callee	r_egg_printf		1389902	0					
ANR	1389908	Identifier	r_egg_printf		1389902	0					
ANR	1389909	ArgumentList	egg		1389902	1					
ANR	1389910	Argument	egg		1389902	0					
ANR	1389911	Identifier	egg		1389902	0					
ANR	1389912	Argument	"""  ldr r0, [fp, %d]\\n"""		1389902	1					
ANR	1389913	PrimaryExpression	"""  ldr r0, [fp, %d]\\n"""		1389902	0					
ANR	1389914	Argument	atoi ( dst )		1389902	2					
ANR	1389915	CallExpression	atoi ( dst )		1389902	0					
ANR	1389916	Callee	atoi		1389902	0					
ANR	1389917	Identifier	atoi		1389902	0					
ANR	1389918	ArgumentList	dst		1389902	1					
ANR	1389919	Argument	dst		1389902	0					
ANR	1389920	Identifier	dst		1389902	0					
ANR	1389921	ReturnType	static void		1389902	1					
ANR	1389922	Identifier	emit_load_ptr		1389902	2					
ANR	1389923	ParameterList	"REgg * egg , const char * dst"		1389902	3					
ANR	1389924	Parameter	REgg * egg	203:26:5025:5033	1389902	0	True				
ANR	1389925	ParameterType	REgg *		1389902	0					
ANR	1389926	Identifier	egg		1389902	1					
ANR	1389927	Parameter	const char * dst	203:37:5036:5050	1389902	1	True				
ANR	1389928	ParameterType	const char *		1389902	0					
ANR	1389929	Identifier	dst		1389902	1					
ANR	1389930	CFGEntryNode	ENTRY		1389902		True				
ANR	1389931	CFGExitNode	EXIT		1389902		True				
ANR	1389932	Symbol	atoi		1389902						
ANR	1389933	Symbol	egg		1389902						
ANR	1389934	Symbol	dst		1389902						
ANR	1389935	Function	emit_branch	207:0:5115:5878							
ANR	1389936	FunctionDef	"emit_branch (REgg * egg , char * b , char * g , char * e , char * n , int sz , const char * dst)"		1389935	0					
ANR	1389937	CompoundStatement		207:96:5211:5878	1389935	0					
ANR	1389938	IdentifierDeclStatement	"char * p , str [ 64 ] ;"	208:1:5214:5230	1389935	0	True				
ANR	1389939	IdentifierDecl	* p		1389935	0					
ANR	1389940	IdentifierDeclType	char *		1389935	0					
ANR	1389941	Identifier	p		1389935	1					
ANR	1389942	IdentifierDecl	str [ 64 ]		1389935	1					
ANR	1389943	IdentifierDeclType	char [ 64 ]		1389935	0					
ANR	1389944	Identifier	str		1389935	1					
ANR	1389945	PrimaryExpression	64		1389935	2					
ANR	1389946	IdentifierDeclStatement	char * arg = NULL ;	209:1:5233:5249	1389935	1	True				
ANR	1389947	IdentifierDecl	* arg = NULL		1389935	0					
ANR	1389948	IdentifierDeclType	char *		1389935	0					
ANR	1389949	Identifier	arg		1389935	1					
ANR	1389950	AssignmentExpression	* arg = NULL		1389935	2		=			
ANR	1389951	Identifier	NULL		1389935	0					
ANR	1389952	Identifier	NULL		1389935	1					
ANR	1389953	IdentifierDeclStatement	"char * op = ""beq"" ;"	210:1:5252:5268	1389935	2	True				
ANR	1389954	IdentifierDecl	"* op = ""beq"""		1389935	0					
ANR	1389955	IdentifierDeclType	char *		1389935	0					
ANR	1389956	Identifier	op		1389935	1					
ANR	1389957	AssignmentExpression	"* op = ""beq"""		1389935	2		=			
ANR	1389958	Identifier	op		1389935	0					
ANR	1389959	PrimaryExpression	"""beq"""		1389935	1					
ANR	1389960	IfStatement	if ( b )		1389935	3					
ANR	1389961	Condition	b	212:5:5329:5329	1389935	0	True				
ANR	1389962	Identifier	b		1389935	0					
ANR	1389963	CompoundStatement		6:8:120:120	1389935	1					
ANR	1389964	ExpressionStatement	* b = '\\0'	213:2:5336:5345	1389935	0	True				
ANR	1389965	AssignmentExpression	* b = '\\0'		1389935	0		=			
ANR	1389966	UnaryOperationExpression	* b		1389935	0					
ANR	1389967	UnaryOperator	*		1389935	0					
ANR	1389968	Identifier	b		1389935	1					
ANR	1389969	PrimaryExpression	'\\0'		1389935	1					
ANR	1389970	ExpressionStatement	"op = e ? ""bge"" : ""bgt"""	214:2:5349:5369	1389935	1	True				
ANR	1389971	AssignmentExpression	"op = e ? ""bge"" : ""bgt"""		1389935	0		=			
ANR	1389972	Identifier	op		1389935	0					
ANR	1389973	ConditionalExpression	"e ? ""bge"" : ""bgt"""		1389935	1					
ANR	1389974	Condition	e		1389935	0					
ANR	1389975	Identifier	e		1389935	0					
ANR	1389976	PrimaryExpression	"""bge"""		1389935	1					
ANR	1389977	PrimaryExpression	"""bgt"""		1389935	2					
ANR	1389978	ExpressionStatement	arg = b + 1	215:2:5373:5384	1389935	2	True				
ANR	1389979	AssignmentExpression	arg = b + 1		1389935	0		=			
ANR	1389980	Identifier	arg		1389935	0					
ANR	1389981	AdditiveExpression	b + 1		1389935	1		+			
ANR	1389982	Identifier	b		1389935	0					
ANR	1389983	PrimaryExpression	1		1389935	1					
ANR	1389984	ElseStatement	else		1389935	0					
ANR	1389985	IfStatement	if ( g )		1389935	0					
ANR	1389986	Condition	g	216:12:5398:5398	1389935	0	True				
ANR	1389987	Identifier	g		1389935	0					
ANR	1389988	CompoundStatement		10:15:189:189	1389935	1					
ANR	1389989	ExpressionStatement	* g = '\\0'	217:2:5405:5414	1389935	0	True				
ANR	1389990	AssignmentExpression	* g = '\\0'		1389935	0		=			
ANR	1389991	UnaryOperationExpression	* g		1389935	0					
ANR	1389992	UnaryOperator	*		1389935	0					
ANR	1389993	Identifier	g		1389935	1					
ANR	1389994	PrimaryExpression	'\\0'		1389935	1					
ANR	1389995	ExpressionStatement	"op = e ? ""ble"" : ""blt"""	218:2:5418:5438	1389935	1	True				
ANR	1389996	AssignmentExpression	"op = e ? ""ble"" : ""blt"""		1389935	0		=			
ANR	1389997	Identifier	op		1389935	0					
ANR	1389998	ConditionalExpression	"e ? ""ble"" : ""blt"""		1389935	1					
ANR	1389999	Condition	e		1389935	0					
ANR	1390000	Identifier	e		1389935	0					
ANR	1390001	PrimaryExpression	"""ble"""		1389935	1					
ANR	1390002	PrimaryExpression	"""blt"""		1389935	2					
ANR	1390003	ExpressionStatement	arg = g + 1	219:2:5442:5453	1389935	2	True				
ANR	1390004	AssignmentExpression	arg = g + 1		1389935	0		=			
ANR	1390005	Identifier	arg		1389935	0					
ANR	1390006	AdditiveExpression	g + 1		1389935	1		+			
ANR	1390007	Identifier	g		1389935	0					
ANR	1390008	PrimaryExpression	1		1389935	1					
ANR	1390009	IfStatement	if ( ! arg )		1389935	4					
ANR	1390010	Condition	! arg	221:5:5463:5466	1389935	0	True				
ANR	1390011	UnaryOperationExpression	! arg		1389935	0					
ANR	1390012	UnaryOperator	!		1389935	0					
ANR	1390013	Identifier	arg		1389935	1					
ANR	1390014	CompoundStatement		15:11:257:257	1389935	1					
ANR	1390015	IfStatement	if ( e )		1389935	0					
ANR	1390016	Condition	e	222:6:5477:5477	1389935	0	True				
ANR	1390017	Identifier	e		1389935	0					
ANR	1390018	CompoundStatement		16:9:268:268	1389935	1					
ANR	1390019	ExpressionStatement	arg = e + 1	223:3:5485:5496	1389935	0	True				
ANR	1390020	AssignmentExpression	arg = e + 1		1389935	0		=			
ANR	1390021	Identifier	arg		1389935	0					
ANR	1390022	AdditiveExpression	e + 1		1389935	1		+			
ANR	1390023	Identifier	e		1389935	0					
ANR	1390024	PrimaryExpression	1		1389935	1					
ANR	1390025	ExpressionStatement	"op = ""bne"""	224:3:5501:5511	1389935	1	True				
ANR	1390026	AssignmentExpression	"op = ""bne"""		1389935	0		=			
ANR	1390027	Identifier	op		1389935	0					
ANR	1390028	PrimaryExpression	"""bne"""		1389935	1					
ANR	1390029	ElseStatement	else		1389935	0					
ANR	1390030	CompoundStatement		19:9:310:310	1389935	0					
ANR	1390031	ExpressionStatement	"arg = ""0"""	226:3:5527:5536	1389935	0	True				
ANR	1390032	AssignmentExpression	"arg = ""0"""		1389935	0		=			
ANR	1390033	Identifier	arg		1389935	0					
ANR	1390034	PrimaryExpression	"""0"""		1389935	1					
ANR	1390035	ExpressionStatement	"op = n ? ""bne"" : ""beq"""	227:3:5541:5561	1389935	1	True				
ANR	1390036	AssignmentExpression	"op = n ? ""bne"" : ""beq"""		1389935	0		=			
ANR	1390037	Identifier	op		1389935	0					
ANR	1390038	ConditionalExpression	"n ? ""bne"" : ""beq"""		1389935	1					
ANR	1390039	Condition	n		1389935	0					
ANR	1390040	Identifier	n		1389935	0					
ANR	1390041	PrimaryExpression	"""bne"""		1389935	1					
ANR	1390042	PrimaryExpression	"""beq"""		1389935	2					
ANR	1390043	IfStatement	if ( * arg == '=' )		1389935	5					
ANR	1390044	Condition	* arg == '='	231:5:5576:5586	1389935	0	True				
ANR	1390045	EqualityExpression	* arg == '='		1389935	0		==			
ANR	1390046	UnaryOperationExpression	* arg		1389935	0					
ANR	1390047	UnaryOperator	*		1389935	0					
ANR	1390048	Identifier	arg		1389935	1					
ANR	1390049	PrimaryExpression	'='		1389935	1					
ANR	1390050	CompoundStatement		25:18:377:377	1389935	1					
ANR	1390051	ExpressionStatement	arg ++	232:2:5593:5598	1389935	0	True				
ANR	1390052	PostIncDecOperationExpression	arg ++		1389935	0					
ANR	1390053	Identifier	arg		1389935	0					
ANR	1390054	IncDec	++		1389935	1					
ANR	1390055	ExpressionStatement	"p = r_egg_mkvar ( egg , str , arg , 0 )"	234:1:5627:5661	1389935	6	True				
ANR	1390056	AssignmentExpression	"p = r_egg_mkvar ( egg , str , arg , 0 )"		1389935	0		=			
ANR	1390057	Identifier	p		1389935	0					
ANR	1390058	CallExpression	"r_egg_mkvar ( egg , str , arg , 0 )"		1389935	1					
ANR	1390059	Callee	r_egg_mkvar		1389935	0					
ANR	1390060	Identifier	r_egg_mkvar		1389935	0					
ANR	1390061	ArgumentList	egg		1389935	1					
ANR	1390062	Argument	egg		1389935	0					
ANR	1390063	Identifier	egg		1389935	0					
ANR	1390064	Argument	str		1389935	1					
ANR	1390065	Identifier	str		1389935	0					
ANR	1390066	Argument	arg		1389935	2					
ANR	1390067	Identifier	arg		1389935	0					
ANR	1390068	Argument	0		1389935	3					
ANR	1390069	PrimaryExpression	0		1389935	0					
ANR	1390070	Statement	r_egg_printf	235:1:5664:5675	1389935	7	True				
ANR	1390071	Statement	(	235:14:5677:5677	1389935	8	True				
ANR	1390072	Statement	egg	235:15:5678:5680	1389935	9	True				
ANR	1390073	Statement	","	235:18:5681:5681	1389935	10	True				
ANR	1390074	Statement	"""  pop """	235:20:5683:5690	1389935	11	True				
ANR	1390075	Statement	R_AX	235:28:5691:5694	1389935	12	True				
ANR	1390076	Statement	"""\\n"""	235:33:5696:5699	1389935	13	True				
ANR	1390077	Statement	)	235:37:5700:5700	1389935	14	True				
ANR	1390078	ExpressionStatement		235:38:5701:5701	1389935	15	True				
ANR	1390079	Statement	r_egg_printf	236:1:5759:5770	1389935	16	True				
ANR	1390080	Statement	(	236:14:5772:5772	1389935	17	True				
ANR	1390081	Statement	egg	236:15:5773:5775	1389935	18	True				
ANR	1390082	Statement	","	236:18:5776:5776	1389935	19	True				
ANR	1390083	Statement	"""  cmp %s, """	236:20:5778:5789	1389935	20	True				
ANR	1390084	Statement	R_AX	236:32:5790:5793	1389935	21	True				
ANR	1390085	Statement	"""\\n"""	236:37:5795:5798	1389935	22	True				
ANR	1390086	Statement	","	236:41:5799:5799	1389935	23	True				
ANR	1390087	Statement	p	236:43:5801:5801	1389935	24	True				
ANR	1390088	Statement	)	236:44:5802:5802	1389935	25	True				
ANR	1390089	ExpressionStatement		236:45:5803:5803	1389935	26	True				
ANR	1390090	ExpressionStatement	"r_egg_printf ( egg , ""  %s %s\\n"" , op , dst )"	238:1:5825:5865	1389935	27	True				
ANR	1390091	CallExpression	"r_egg_printf ( egg , ""  %s %s\\n"" , op , dst )"		1389935	0					
ANR	1390092	Callee	r_egg_printf		1389935	0					
ANR	1390093	Identifier	r_egg_printf		1389935	0					
ANR	1390094	ArgumentList	egg		1389935	1					
ANR	1390095	Argument	egg		1389935	0					
ANR	1390096	Identifier	egg		1389935	0					
ANR	1390097	Argument	"""  %s %s\\n"""		1389935	1					
ANR	1390098	PrimaryExpression	"""  %s %s\\n"""		1389935	0					
ANR	1390099	Argument	op		1389935	2					
ANR	1390100	Identifier	op		1389935	0					
ANR	1390101	Argument	dst		1389935	3					
ANR	1390102	Identifier	dst		1389935	0					
ANR	1390103	ExpressionStatement	free ( p )	239:1:5868:5876	1389935	28	True				
ANR	1390104	CallExpression	free ( p )		1389935	0					
ANR	1390105	Callee	free		1389935	0					
ANR	1390106	Identifier	free		1389935	0					
ANR	1390107	ArgumentList	p		1389935	1					
ANR	1390108	Argument	p		1389935	0					
ANR	1390109	Identifier	p		1389935	0					
ANR	1390110	ReturnType	static void		1389935	1					
ANR	1390111	Identifier	emit_branch		1389935	2					
ANR	1390112	ParameterList	"REgg * egg , char * b , char * g , char * e , char * n , int sz , const char * dst"		1389935	3					
ANR	1390113	Parameter	REgg * egg	207:24:5139:5147	1389935	0	True				
ANR	1390114	ParameterType	REgg *		1389935	0					
ANR	1390115	Identifier	egg		1389935	1					
ANR	1390116	Parameter	char * b	207:35:5150:5156	1389935	1	True				
ANR	1390117	ParameterType	char *		1389935	0					
ANR	1390118	Identifier	b		1389935	1					
ANR	1390119	Parameter	char * g	207:44:5159:5165	1389935	2	True				
ANR	1390120	ParameterType	char *		1389935	0					
ANR	1390121	Identifier	g		1389935	1					
ANR	1390122	Parameter	char * e	207:53:5168:5174	1389935	3	True				
ANR	1390123	ParameterType	char *		1389935	0					
ANR	1390124	Identifier	e		1389935	1					
ANR	1390125	Parameter	char * n	207:62:5177:5183	1389935	4	True				
ANR	1390126	ParameterType	char *		1389935	0					
ANR	1390127	Identifier	n		1389935	1					
ANR	1390128	Parameter	int sz	207:71:5186:5191	1389935	5	True				
ANR	1390129	ParameterType	int		1389935	0					
ANR	1390130	Identifier	sz		1389935	1					
ANR	1390131	Parameter	const char * dst	207:79:5194:5208	1389935	6	True				
ANR	1390132	ParameterType	const char *		1389935	0					
ANR	1390133	Identifier	dst		1389935	1					
ANR	1390134	CFGEntryNode	ENTRY		1389935		True				
ANR	1390135	CFGExitNode	EXIT		1389935		True				
ANR	1390136	Symbol	r_egg_mkvar		1389935						
ANR	1390137	Symbol	op		1389935						
ANR	1390138	Symbol	b		1389935						
ANR	1390139	Symbol	NULL		1389935						
ANR	1390140	Symbol	egg		1389935						
ANR	1390141	Symbol	dst		1389935						
ANR	1390142	Symbol	e		1389935						
ANR	1390143	Symbol	g		1389935						
ANR	1390144	Symbol	sz		1389935						
ANR	1390145	Symbol	* b		1389935						
ANR	1390146	Symbol	n		1389935						
ANR	1390147	Symbol	str		1389935						
ANR	1390148	Symbol	p		1389935						
ANR	1390149	Symbol	* g		1389935						
ANR	1390150	Symbol	arg		1389935						
ANR	1390151	Symbol	* arg		1389935						
ANR	1390152	Function	emit_load	242:0:5881:6340							
ANR	1390153	FunctionDef	"emit_load (REgg * egg , const char * dst , int sz)"		1390152	0					
ANR	1390154	CompoundStatement		242:58:5939:6340	1390152	0					
ANR	1390155	SwitchStatement	switch ( sz )		1390152	0					
ANR	1390156	Condition	sz	243:9:5950:5951	1390152	0	True				
ANR	1390157	Identifier	sz		1390152	0					
ANR	1390158	CompoundStatement		2:13:14:14	1390152	1					
ANR	1390159	Label	case 'l' :	244:1:5957:5965	1390152	0	True				
ANR	1390160	Statement	r_egg_printf	245:2:5969:5980	1390152	1	True				
ANR	1390161	Statement	(	245:15:5982:5982	1390152	2	True				
ANR	1390162	Statement	egg	245:16:5983:5985	1390152	3	True				
ANR	1390163	Statement	","	245:19:5986:5986	1390152	4	True				
ANR	1390164	Statement	"""  mov """	245:21:5988:5995	1390152	5	True				
ANR	1390165	Statement	R_AX	245:29:5996:5999	1390152	6	True				
ANR	1390166	Statement	""", %s\\n"""	245:34:6001:6008	1390152	7	True				
ANR	1390167	Statement	","	245:42:6009:6009	1390152	8	True				
ANR	1390168	Statement	dst	245:44:6011:6013	1390152	9	True				
ANR	1390169	Statement	)	245:47:6014:6014	1390152	10	True				
ANR	1390170	ExpressionStatement		245:48:6015:6015	1390152	11	True				
ANR	1390171	Statement	r_egg_printf	246:2:6019:6030	1390152	12	True				
ANR	1390172	Statement	(	246:15:6032:6032	1390152	13	True				
ANR	1390173	Statement	egg	246:16:6033:6035	1390152	14	True				
ANR	1390174	Statement	","	246:19:6036:6036	1390152	15	True				
ANR	1390175	Statement	"""  mov """	246:21:6038:6045	1390152	16	True				
ANR	1390176	Statement	R_AX	246:29:6046:6049	1390152	17	True				
ANR	1390177	Statement	""", ["""	246:34:6051:6055	1390152	18	True				
ANR	1390178	Statement	R_AX	246:39:6056:6059	1390152	19	True				
ANR	1390179	Statement	"""]\\n"""	246:44:6061:6065	1390152	20	True				
ANR	1390180	Statement	)	246:49:6066:6066	1390152	21	True				
ANR	1390181	ExpressionStatement		246:50:6067:6067	1390152	22	True				
ANR	1390182	BreakStatement	break ;	247:2:6071:6076	1390152	23	True				
ANR	1390183	Label	case 'b' :	248:1:6079:6087	1390152	24	True				
ANR	1390184	Statement	r_egg_printf	249:2:6091:6102	1390152	25	True				
ANR	1390185	Statement	(	249:15:6104:6104	1390152	26	True				
ANR	1390186	Statement	egg	249:16:6105:6107	1390152	27	True				
ANR	1390187	Statement	","	249:19:6108:6108	1390152	28	True				
ANR	1390188	Statement	"""  mov """	249:21:6110:6117	1390152	29	True				
ANR	1390189	Statement	R_AX	249:29:6118:6121	1390152	30	True				
ANR	1390190	Statement	""", %s\\n"""	249:34:6123:6130	1390152	31	True				
ANR	1390191	Statement	","	249:42:6131:6131	1390152	32	True				
ANR	1390192	Statement	dst	249:44:6133:6135	1390152	33	True				
ANR	1390193	Statement	)	249:47:6136:6136	1390152	34	True				
ANR	1390194	ExpressionStatement		249:48:6137:6137	1390152	35	True				
ANR	1390195	Statement	r_egg_printf	250:2:6141:6152	1390152	36	True				
ANR	1390196	Statement	(	250:15:6154:6154	1390152	37	True				
ANR	1390197	Statement	egg	250:16:6155:6157	1390152	38	True				
ANR	1390198	Statement	","	250:19:6158:6158	1390152	39	True				
ANR	1390199	Statement	"""  movz """	250:21:6160:6168	1390152	40	True				
ANR	1390200	Statement	R_AX	250:30:6169:6172	1390152	41	True				
ANR	1390201	Statement	""", ["""	250:35:6174:6178	1390152	42	True				
ANR	1390202	Statement	R_AX	250:40:6179:6182	1390152	43	True				
ANR	1390203	Statement	"""]\\n"""	250:45:6184:6188	1390152	44	True				
ANR	1390204	Statement	)	250:50:6189:6189	1390152	45	True				
ANR	1390205	ExpressionStatement		250:51:6190:6190	1390152	46	True				
ANR	1390206	BreakStatement	break ;	251:2:6194:6199	1390152	47	True				
ANR	1390207	Label	default :	252:1:6202:6209	1390152	48	True				
ANR	1390208	Identifier	default		1390152	0					
ANR	1390209	Statement	r_egg_printf	254:2:6237:6248	1390152	49	True				
ANR	1390210	Statement	(	254:15:6250:6250	1390152	50	True				
ANR	1390211	Statement	egg	254:16:6251:6253	1390152	51	True				
ANR	1390212	Statement	","	254:19:6254:6254	1390152	52	True				
ANR	1390213	Statement	"""  mov """	254:21:6256:6263	1390152	53	True				
ANR	1390214	Statement	R_AX	254:29:6264:6267	1390152	54	True				
ANR	1390215	Statement	""", %s\\n"""	254:34:6269:6276	1390152	55	True				
ANR	1390216	Statement	","	254:42:6277:6277	1390152	56	True				
ANR	1390217	Statement	dst	254:44:6279:6281	1390152	57	True				
ANR	1390218	Statement	)	254:47:6282:6282	1390152	58	True				
ANR	1390219	ExpressionStatement		254:48:6283:6283	1390152	59	True				
ANR	1390220	Statement	r_egg_printf	255:2:6287:6298	1390152	60	True				
ANR	1390221	Statement	(	255:15:6300:6300	1390152	61	True				
ANR	1390222	Statement	egg	255:16:6301:6303	1390152	62	True				
ANR	1390223	Statement	","	255:19:6304:6304	1390152	63	True				
ANR	1390224	Statement	"""  mov """	255:21:6306:6313	1390152	64	True				
ANR	1390225	Statement	R_AX	255:29:6314:6317	1390152	65	True				
ANR	1390226	Statement	""", ["""	255:34:6319:6323	1390152	66	True				
ANR	1390227	Statement	R_AX	255:39:6324:6327	1390152	67	True				
ANR	1390228	Statement	"""]\\n"""	255:44:6329:6333	1390152	68	True				
ANR	1390229	Statement	)	255:49:6334:6334	1390152	69	True				
ANR	1390230	ExpressionStatement		255:50:6335:6335	1390152	70	True				
ANR	1390231	ReturnType	static void		1390152	1					
ANR	1390232	Identifier	emit_load		1390152	2					
ANR	1390233	ParameterList	"REgg * egg , const char * dst , int sz"		1390152	3					
ANR	1390234	Parameter	REgg * egg	242:22:5903:5911	1390152	0	True				
ANR	1390235	ParameterType	REgg *		1390152	0					
ANR	1390236	Identifier	egg		1390152	1					
ANR	1390237	Parameter	const char * dst	242:33:5914:5928	1390152	1	True				
ANR	1390238	ParameterType	const char *		1390152	0					
ANR	1390239	Identifier	dst		1390152	1					
ANR	1390240	Parameter	int sz	242:50:5931:5936	1390152	2	True				
ANR	1390241	ParameterType	int		1390152	0					
ANR	1390242	Identifier	sz		1390152	1					
ANR	1390243	CFGEntryNode	ENTRY		1390152		True				
ANR	1390244	CFGExitNode	EXIT		1390152		True				
ANR	1390245	Symbol	egg		1390152						
ANR	1390246	Symbol	dst		1390152						
ANR	1390247	Symbol	sz		1390152						
ANR	1390248	Function	emit_mathop	259:0:6343:7044							
ANR	1390249	FunctionDef	"emit_mathop (REgg * egg , int ch , int vs , int type , const char * eq , const char * p)"		1390248	0					
ANR	1390250	CompoundStatement		259:92:6435:7044	1390248	0					
ANR	1390251	IdentifierDeclStatement	char * op ;	260:1:6438:6446	1390248	0	True				
ANR	1390252	IdentifierDecl	* op		1390248	0					
ANR	1390253	IdentifierDeclType	char *		1390248	0					
ANR	1390254	Identifier	op		1390248	1					
ANR	1390255	SwitchStatement	switch ( ch )		1390248	1					
ANR	1390256	Condition	ch	261:9:6457:6458	1390248	0	True				
ANR	1390257	Identifier	ch		1390248	0					
ANR	1390258	CompoundStatement		3:13:25:25	1390248	1					
ANR	1390259	Label	case '^' :	262:1:6464:6472	1390248	0	True				
ANR	1390260	ExpressionStatement	"op = ""eor"""	262:11:6474:6484	1390248	1	True				
ANR	1390261	AssignmentExpression	"op = ""eor"""		1390248	0		=			
ANR	1390262	Identifier	op		1390248	0					
ANR	1390263	PrimaryExpression	"""eor"""		1390248	1					
ANR	1390264	BreakStatement	break ;	262:23:6486:6491	1390248	2	True				
ANR	1390265	Label	case '&' :	263:1:6494:6502	1390248	3	True				
ANR	1390266	ExpressionStatement	"op = ""and"""	263:11:6504:6514	1390248	4	True				
ANR	1390267	AssignmentExpression	"op = ""and"""		1390248	0		=			
ANR	1390268	Identifier	op		1390248	0					
ANR	1390269	PrimaryExpression	"""and"""		1390248	1					
ANR	1390270	BreakStatement	break ;	263:23:6516:6521	1390248	5	True				
ANR	1390271	Label	case '|' :	264:1:6524:6532	1390248	6	True				
ANR	1390272	ExpressionStatement	"op = ""orr"""	264:11:6534:6544	1390248	7	True				
ANR	1390273	AssignmentExpression	"op = ""orr"""		1390248	0		=			
ANR	1390274	Identifier	op		1390248	0					
ANR	1390275	PrimaryExpression	"""orr"""		1390248	1					
ANR	1390276	BreakStatement	break ;	264:23:6546:6551	1390248	8	True				
ANR	1390277	Label	case '-' :	265:1:6554:6562	1390248	9	True				
ANR	1390278	ExpressionStatement	"op = ""sub"""	265:11:6564:6574	1390248	10	True				
ANR	1390279	AssignmentExpression	"op = ""sub"""		1390248	0		=			
ANR	1390280	Identifier	op		1390248	0					
ANR	1390281	PrimaryExpression	"""sub"""		1390248	1					
ANR	1390282	BreakStatement	break ;	265:23:6576:6581	1390248	11	True				
ANR	1390283	Label	case '+' :	266:1:6584:6592	1390248	12	True				
ANR	1390284	ExpressionStatement	"op = ""add"""	266:11:6594:6604	1390248	13	True				
ANR	1390285	AssignmentExpression	"op = ""add"""		1390248	0		=			
ANR	1390286	Identifier	op		1390248	0					
ANR	1390287	PrimaryExpression	"""add"""		1390248	1					
ANR	1390288	BreakStatement	break ;	266:23:6606:6611	1390248	14	True				
ANR	1390289	Label	case '*' :	267:1:6614:6622	1390248	15	True				
ANR	1390290	ExpressionStatement	"op = ""mul"""	267:11:6624:6634	1390248	16	True				
ANR	1390291	AssignmentExpression	"op = ""mul"""		1390248	0		=			
ANR	1390292	Identifier	op		1390248	0					
ANR	1390293	PrimaryExpression	"""mul"""		1390248	1					
ANR	1390294	BreakStatement	break ;	267:23:6636:6641	1390248	17	True				
ANR	1390295	Label	case '/' :	268:1:6644:6652	1390248	18	True				
ANR	1390296	ExpressionStatement	"op = ""div"""	268:11:6654:6664	1390248	19	True				
ANR	1390297	AssignmentExpression	"op = ""div"""		1390248	0		=			
ANR	1390298	Identifier	op		1390248	0					
ANR	1390299	PrimaryExpression	"""div"""		1390248	1					
ANR	1390300	BreakStatement	break ;	268:23:6666:6671	1390248	20	True				
ANR	1390301	Label	default :	269:1:6674:6681	1390248	21	True				
ANR	1390302	Identifier	default		1390248	0					
ANR	1390303	ExpressionStatement	"op = ""mov"""	269:11:6684:6694	1390248	22	True				
ANR	1390304	AssignmentExpression	"op = ""mov"""		1390248	0		=			
ANR	1390305	Identifier	op		1390248	0					
ANR	1390306	PrimaryExpression	"""mov"""		1390248	1					
ANR	1390307	BreakStatement	break ;	269:23:6696:6701	1390248	23	True				
ANR	1390308	IfStatement	if ( ! eq )		1390248	2					
ANR	1390309	Condition	! eq	271:5:6711:6713	1390248	0	True				
ANR	1390310	UnaryOperationExpression	! eq		1390248	0					
ANR	1390311	UnaryOperator	!		1390248	0					
ANR	1390312	Identifier	eq		1390248	1					
ANR	1390313	CompoundStatement		13:10:280:280	1390248	1					
ANR	1390314	ExpressionStatement	eq = R_AX	272:2:6720:6729	1390248	0	True				
ANR	1390315	AssignmentExpression	eq = R_AX		1390248	0		=			
ANR	1390316	Identifier	eq		1390248	0					
ANR	1390317	Identifier	R_AX		1390248	1					
ANR	1390318	IfStatement	if ( ! p )		1390248	3					
ANR	1390319	Condition	! p	274:5:6739:6740	1390248	0	True				
ANR	1390320	UnaryOperationExpression	! p		1390248	0					
ANR	1390321	UnaryOperator	!		1390248	0					
ANR	1390322	Identifier	p		1390248	1					
ANR	1390323	CompoundStatement		16:9:307:307	1390248	1					
ANR	1390324	ExpressionStatement	p = R_AX	275:2:6747:6755	1390248	0	True				
ANR	1390325	AssignmentExpression	p = R_AX		1390248	0		=			
ANR	1390326	Identifier	p		1390248	0					
ANR	1390327	Identifier	R_AX		1390248	1					
ANR	1390328	ExpressionStatement	"eprintf ( ""TYPE = %c\\n"" , type )"	279:1:6777:6806	1390248	4	True				
ANR	1390329	CallExpression	"eprintf ( ""TYPE = %c\\n"" , type )"		1390248	0					
ANR	1390330	Callee	eprintf		1390248	0					
ANR	1390331	Identifier	eprintf		1390248	0					
ANR	1390332	ArgumentList	"""TYPE = %c\\n"""		1390248	1					
ANR	1390333	Argument	"""TYPE = %c\\n"""		1390248	0					
ANR	1390334	PrimaryExpression	"""TYPE = %c\\n"""		1390248	0					
ANR	1390335	Argument	type		1390248	1					
ANR	1390336	Identifier	type		1390248	0					
ANR	1390337	ExpressionStatement	"eprintf ( ""  %s%c %c%s, %s\\n"" , op , vs , type , eq , p )"	280:1:6809:6859	1390248	5	True				
ANR	1390338	CallExpression	"eprintf ( ""  %s%c %c%s, %s\\n"" , op , vs , type , eq , p )"		1390248	0					
ANR	1390339	Callee	eprintf		1390248	0					
ANR	1390340	Identifier	eprintf		1390248	0					
ANR	1390341	ArgumentList	"""  %s%c %c%s, %s\\n"""		1390248	1					
ANR	1390342	Argument	"""  %s%c %c%s, %s\\n"""		1390248	0					
ANR	1390343	PrimaryExpression	"""  %s%c %c%s, %s\\n"""		1390248	0					
ANR	1390344	Argument	op		1390248	1					
ANR	1390345	Identifier	op		1390248	0					
ANR	1390346	Argument	vs		1390248	2					
ANR	1390347	Identifier	vs		1390248	0					
ANR	1390348	Argument	type		1390248	3					
ANR	1390349	Identifier	type		1390248	0					
ANR	1390350	Argument	eq		1390248	4					
ANR	1390351	Identifier	eq		1390248	0					
ANR	1390352	Argument	p		1390248	5					
ANR	1390353	Identifier	p		1390248	0					
ANR	1390354	ExpressionStatement	"eprintf ( ""  %s %s, [%s]\\n"" , op , p , eq )"	281:1:6862:6900	1390248	6	True				
ANR	1390355	CallExpression	"eprintf ( ""  %s %s, [%s]\\n"" , op , p , eq )"		1390248	0					
ANR	1390356	Callee	eprintf		1390248	0					
ANR	1390357	Identifier	eprintf		1390248	0					
ANR	1390358	ArgumentList	"""  %s %s, [%s]\\n"""		1390248	1					
ANR	1390359	Argument	"""  %s %s, [%s]\\n"""		1390248	0					
ANR	1390360	PrimaryExpression	"""  %s %s, [%s]\\n"""		1390248	0					
ANR	1390361	Argument	op		1390248	1					
ANR	1390362	Identifier	op		1390248	0					
ANR	1390363	Argument	p		1390248	2					
ANR	1390364	Identifier	p		1390248	0					
ANR	1390365	Argument	eq		1390248	3					
ANR	1390366	Identifier	eq		1390248	0					
ANR	1390367	IfStatement	if ( type == '*' )		1390248	7					
ANR	1390368	Condition	type == '*'	283:5:6914:6924	1390248	0	True				
ANR	1390369	EqualityExpression	type == '*'		1390248	0		==			
ANR	1390370	Identifier	type		1390248	0					
ANR	1390371	PrimaryExpression	'*'		1390248	1					
ANR	1390372	CompoundStatement		25:18:491:491	1390248	1					
ANR	1390373	ExpressionStatement	"r_egg_printf ( egg , ""  %s %s, [%s]\\n"" , op , p , eq )"	284:2:6931:6979	1390248	0	True				
ANR	1390374	CallExpression	"r_egg_printf ( egg , ""  %s %s, [%s]\\n"" , op , p , eq )"		1390248	0					
ANR	1390375	Callee	r_egg_printf		1390248	0					
ANR	1390376	Identifier	r_egg_printf		1390248	0					
ANR	1390377	ArgumentList	egg		1390248	1					
ANR	1390378	Argument	egg		1390248	0					
ANR	1390379	Identifier	egg		1390248	0					
ANR	1390380	Argument	"""  %s %s, [%s]\\n"""		1390248	1					
ANR	1390381	PrimaryExpression	"""  %s %s, [%s]\\n"""		1390248	0					
ANR	1390382	Argument	op		1390248	2					
ANR	1390383	Identifier	op		1390248	0					
ANR	1390384	Argument	p		1390248	3					
ANR	1390385	Identifier	p		1390248	0					
ANR	1390386	Argument	eq		1390248	4					
ANR	1390387	Identifier	eq		1390248	0					
ANR	1390388	ElseStatement	else		1390248	0					
ANR	1390389	CompoundStatement		27:8:553:553	1390248	0					
ANR	1390390	ExpressionStatement	"r_egg_printf ( egg , ""  %s %s, %s\\n"" , op , p , eq )"	286:2:6993:7039	1390248	0	True				
ANR	1390391	CallExpression	"r_egg_printf ( egg , ""  %s %s, %s\\n"" , op , p , eq )"		1390248	0					
ANR	1390392	Callee	r_egg_printf		1390248	0					
ANR	1390393	Identifier	r_egg_printf		1390248	0					
ANR	1390394	ArgumentList	egg		1390248	1					
ANR	1390395	Argument	egg		1390248	0					
ANR	1390396	Identifier	egg		1390248	0					
ANR	1390397	Argument	"""  %s %s, %s\\n"""		1390248	1					
ANR	1390398	PrimaryExpression	"""  %s %s, %s\\n"""		1390248	0					
ANR	1390399	Argument	op		1390248	2					
ANR	1390400	Identifier	op		1390248	0					
ANR	1390401	Argument	p		1390248	3					
ANR	1390402	Identifier	p		1390248	0					
ANR	1390403	Argument	eq		1390248	4					
ANR	1390404	Identifier	eq		1390248	0					
ANR	1390405	ReturnType	static void		1390248	1					
ANR	1390406	Identifier	emit_mathop		1390248	2					
ANR	1390407	ParameterList	"REgg * egg , int ch , int vs , int type , const char * eq , const char * p"		1390248	3					
ANR	1390408	Parameter	REgg * egg	259:24:6367:6375	1390248	0	True				
ANR	1390409	ParameterType	REgg *		1390248	0					
ANR	1390410	Identifier	egg		1390248	1					
ANR	1390411	Parameter	int ch	259:35:6378:6383	1390248	1	True				
ANR	1390412	ParameterType	int		1390248	0					
ANR	1390413	Identifier	ch		1390248	1					
ANR	1390414	Parameter	int vs	259:43:6386:6391	1390248	2	True				
ANR	1390415	ParameterType	int		1390248	0					
ANR	1390416	Identifier	vs		1390248	1					
ANR	1390417	Parameter	int type	259:51:6394:6401	1390248	3	True				
ANR	1390418	ParameterType	int		1390248	0					
ANR	1390419	Identifier	type		1390248	1					
ANR	1390420	Parameter	const char * eq	259:61:6404:6417	1390248	4	True				
ANR	1390421	ParameterType	const char *		1390248	0					
ANR	1390422	Identifier	eq		1390248	1					
ANR	1390423	Parameter	const char * p	259:77:6420:6432	1390248	5	True				
ANR	1390424	ParameterType	const char *		1390248	0					
ANR	1390425	Identifier	p		1390248	1					
ANR	1390426	CFGEntryNode	ENTRY		1390248		True				
ANR	1390427	CFGExitNode	EXIT		1390248		True				
ANR	1390428	Symbol	p		1390248						
ANR	1390429	Symbol	op		1390248						
ANR	1390430	Symbol	R_AX		1390248						
ANR	1390431	Symbol	egg		1390248						
ANR	1390432	Symbol	ch		1390248						
ANR	1390433	Symbol	type		1390248						
ANR	1390434	Symbol	eq		1390248						
ANR	1390435	Symbol	vs		1390248						
ANR	1390436	Function	emit_regs	290:0:7047:7125							
ANR	1390437	FunctionDef	"emit_regs (REgg * egg , int idx)"		1390436	0					
ANR	1390438	CompoundStatement		290:49:7096:7125	1390436	0					
ANR	1390439	ReturnStatement	return regs [ idx % R_NGP ] ;	291:1:7099:7123	1390436	0	True				
ANR	1390440	ArrayIndexing	regs [ idx % R_NGP ]		1390436	0					
ANR	1390441	Identifier	regs		1390436	0					
ANR	1390442	MultiplicativeExpression	idx % R_NGP		1390436	1		%			
ANR	1390443	Identifier	idx		1390436	0					
ANR	1390444	Identifier	R_NGP		1390436	1					
ANR	1390445	ReturnType	static const char *		1390436	1					
ANR	1390446	Identifier	emit_regs		1390436	2					
ANR	1390447	ParameterList	"REgg * egg , int idx"		1390436	3					
ANR	1390448	Parameter	REgg * egg	290:29:7076:7084	1390436	0	True				
ANR	1390449	ParameterType	REgg *		1390436	0					
ANR	1390450	Identifier	egg		1390436	1					
ANR	1390451	Parameter	int idx	290:40:7087:7093	1390436	1	True				
ANR	1390452	ParameterType	int		1390436	0					
ANR	1390453	Identifier	idx		1390436	1					
ANR	1390454	CFGEntryNode	ENTRY		1390436		True				
ANR	1390455	CFGExitNode	EXIT		1390436		True				
ANR	1390456	Symbol	egg		1390436						
ANR	1390457	Symbol	* R_NGP		1390436						
ANR	1390458	Symbol	R_NGP		1390436						
ANR	1390459	Symbol	* regs		1390436						
ANR	1390460	Symbol	* idx		1390436						
ANR	1390461	Symbol	regs		1390436						
ANR	1390462	Symbol	idx		1390436						
ANR	1390463	DeclStmt									
ANR	1390464	Decl							REggEmit	REggEmit	EMIT_NAME
