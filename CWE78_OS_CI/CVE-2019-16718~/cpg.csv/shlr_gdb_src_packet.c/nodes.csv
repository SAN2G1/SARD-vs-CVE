command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	5827899	File	data/converged/CVE-2019-16718~_radare2/shlr_gdb_src_packet.c								
ANR	5827900	ClassDef	<unnamed>	8:0:131:204							
ANR	5827901	ClassDef	parse_ctx	15:0:208:284							
ANR	5827902	DeclStmt									
ANR	5827903	Decl							ut32	ut32	flags
ANR	5827904	DeclStmt									
ANR	5827905	Decl							ut8	ut8	last
ANR	5827906	DeclStmt									
ANR	5827907	Decl							ut8	ut8	sum
ANR	5827908	DeclStmt									
ANR	5827909	Decl							int	int	chksum_nibble
ANR	5827910	Function	append	22:0:288:689							
ANR	5827911	FunctionDef	"append (libgdbr_t * g , const char ch)"		5827910	0					
ANR	5827912	CompoundStatement		22:48:336:689	5827910	0					
ANR	5827913	IdentifierDeclStatement	char * ptr ;	23:1:339:348	5827910	0	True				
ANR	5827914	IdentifierDecl	* ptr		5827910	0					
ANR	5827915	IdentifierDeclType	char *		5827910	0					
ANR	5827916	Identifier	ptr		5827910	1					
ANR	5827917	IfStatement	if ( g -> data_len == g -> data_max - 1 )		5827910	1					
ANR	5827918	Condition	g -> data_len == g -> data_max - 1	24:5:355:384	5827910	0	True				
ANR	5827919	EqualityExpression	g -> data_len == g -> data_max - 1		5827910	0		==			
ANR	5827920	PtrMemberAccess	g -> data_len		5827910	0					
ANR	5827921	Identifier	g		5827910	0					
ANR	5827922	Identifier	data_len		5827910	1					
ANR	5827923	AdditiveExpression	g -> data_max - 1		5827910	1		-			
ANR	5827924	PtrMemberAccess	g -> data_max		5827910	0					
ANR	5827925	Identifier	g		5827910	0					
ANR	5827926	Identifier	data_max		5827910	1					
ANR	5827927	PrimaryExpression	1		5827910	1					
ANR	5827928	CompoundStatement		4:2:54:83	5827910	1					
ANR	5827929	IdentifierDeclStatement	int newsize = g -> data_max * 2 ;	25:2:391:420	5827910	0	True				
ANR	5827930	IdentifierDecl	newsize = g -> data_max * 2		5827910	0					
ANR	5827931	IdentifierDeclType	int		5827910	0					
ANR	5827932	Identifier	newsize		5827910	1					
ANR	5827933	AssignmentExpression	newsize = g -> data_max * 2		5827910	2		=			
ANR	5827934	Identifier	newsize		5827910	0					
ANR	5827935	MultiplicativeExpression	g -> data_max * 2		5827910	1		*			
ANR	5827936	PtrMemberAccess	g -> data_max		5827910	0					
ANR	5827937	Identifier	g		5827910	0					
ANR	5827938	Identifier	data_max		5827910	1					
ANR	5827939	PrimaryExpression	2		5827910	1					
ANR	5827940	IfStatement	if ( newsize < 1 )		5827910	1					
ANR	5827941	Condition	newsize < 1	26:6:428:438	5827910	0	True				
ANR	5827942	RelationalExpression	newsize < 1		5827910	0		<			
ANR	5827943	Identifier	newsize		5827910	0					
ANR	5827944	PrimaryExpression	1		5827910	1					
ANR	5827945	CompoundStatement		5:19:104:104	5827910	1					
ANR	5827946	ReturnStatement	return false ;	27:3:446:458	5827910	0	True				
ANR	5827947	Identifier	false		5827910	0					
ANR	5827948	ExpressionStatement	"ptr = realloc ( g -> data , newsize )"	29:2:466:498	5827910	2	True				
ANR	5827949	AssignmentExpression	"ptr = realloc ( g -> data , newsize )"		5827910	0		=			
ANR	5827950	Identifier	ptr		5827910	0					
ANR	5827951	CallExpression	"realloc ( g -> data , newsize )"		5827910	1					
ANR	5827952	Callee	realloc		5827910	0					
ANR	5827953	Identifier	realloc		5827910	0					
ANR	5827954	ArgumentList	g -> data		5827910	1					
ANR	5827955	Argument	g -> data		5827910	0					
ANR	5827956	PtrMemberAccess	g -> data		5827910	0					
ANR	5827957	Identifier	g		5827910	0					
ANR	5827958	Identifier	data		5827910	1					
ANR	5827959	Argument	newsize		5827910	1					
ANR	5827960	Identifier	newsize		5827910	0					
ANR	5827961	IfStatement	if ( ! ptr )		5827910	3					
ANR	5827962	Condition	! ptr	30:6:506:509	5827910	0	True				
ANR	5827963	UnaryOperationExpression	! ptr		5827910	0					
ANR	5827964	UnaryOperator	!		5827910	0					
ANR	5827965	Identifier	ptr		5827910	1					
ANR	5827966	CompoundStatement		9:12:175:175	5827910	1					
ANR	5827967	ExpressionStatement	"eprintf ( ""%s: Failed to reallocate buffer\\n"" , __func__ )"	31:3:517:577	5827910	0	True				
ANR	5827968	CallExpression	"eprintf ( ""%s: Failed to reallocate buffer\\n"" , __func__ )"		5827910	0					
ANR	5827969	Callee	eprintf		5827910	0					
ANR	5827970	Identifier	eprintf		5827910	0					
ANR	5827971	ArgumentList	"""%s: Failed to reallocate buffer\\n"""		5827910	1					
ANR	5827972	Argument	"""%s: Failed to reallocate buffer\\n"""		5827910	0					
ANR	5827973	PrimaryExpression	"""%s: Failed to reallocate buffer\\n"""		5827910	0					
ANR	5827974	Argument	__func__		5827910	1					
ANR	5827975	Identifier	__func__		5827910	0					
ANR	5827976	ReturnStatement	return false ;	33:3:582:594	5827910	1	True				
ANR	5827977	Identifier	false		5827910	0					
ANR	5827978	ExpressionStatement	g -> data = ptr	35:2:602:615	5827910	4	True				
ANR	5827979	AssignmentExpression	g -> data = ptr		5827910	0		=			
ANR	5827980	PtrMemberAccess	g -> data		5827910	0					
ANR	5827981	Identifier	g		5827910	0					
ANR	5827982	Identifier	data		5827910	1					
ANR	5827983	Identifier	ptr		5827910	1					
ANR	5827984	ExpressionStatement	g -> data_max = newsize	36:2:619:640	5827910	5	True				
ANR	5827985	AssignmentExpression	g -> data_max = newsize		5827910	0		=			
ANR	5827986	PtrMemberAccess	g -> data_max		5827910	0					
ANR	5827987	Identifier	g		5827910	0					
ANR	5827988	Identifier	data_max		5827910	1					
ANR	5827989	Identifier	newsize		5827910	1					
ANR	5827990	ExpressionStatement	g -> data [ g -> data_len ++ ] = ch	38:1:646:673	5827910	2	True				
ANR	5827991	AssignmentExpression	g -> data [ g -> data_len ++ ] = ch		5827910	0		=			
ANR	5827992	ArrayIndexing	g -> data [ g -> data_len ++ ]		5827910	0					
ANR	5827993	PtrMemberAccess	g -> data		5827910	0					
ANR	5827994	Identifier	g		5827910	0					
ANR	5827995	Identifier	data		5827910	1					
ANR	5827996	PostIncDecOperationExpression	g -> data_len ++		5827910	1					
ANR	5827997	PtrMemberAccess	g -> data_len		5827910	0					
ANR	5827998	Identifier	g		5827910	0					
ANR	5827999	Identifier	data_len		5827910	1					
ANR	5828000	IncDec	++		5827910	1					
ANR	5828001	Identifier	ch		5827910	1					
ANR	5828002	ReturnStatement	return true ;	39:1:676:687	5827910	3	True				
ANR	5828003	Identifier	true		5827910	0					
ANR	5828004	ReturnType	static bool		5827910	1					
ANR	5828005	Identifier	append		5827910	2					
ANR	5828006	ParameterList	"libgdbr_t * g , const char ch"		5827910	3					
ANR	5828007	Parameter	libgdbr_t * g	22:19:307:318	5827910	0	True				
ANR	5828008	ParameterType	libgdbr_t *		5827910	0					
ANR	5828009	Identifier	g		5827910	1					
ANR	5828010	Parameter	const char ch	22:33:321:333	5827910	1	True				
ANR	5828011	ParameterType	const char		5827910	0					
ANR	5828012	Identifier	ch		5827910	1					
ANR	5828013	CFGEntryNode	ENTRY		5827910		True				
ANR	5828014	CFGExitNode	EXIT		5827910		True				
ANR	5828015	Symbol	* * g		5827910						
ANR	5828016	Symbol	ch		5827910						
ANR	5828017	Symbol	g -> data		5827910						
ANR	5828018	Symbol	g		5827910						
ANR	5828019	Symbol	g -> data_len		5827910						
ANR	5828020	Symbol	newsize		5827910						
ANR	5828021	Symbol	false		5827910						
ANR	5828022	Symbol	realloc		5827910						
ANR	5828023	Symbol	ptr		5827910						
ANR	5828024	Symbol	* g		5827910						
ANR	5828025	Symbol	* g -> data		5827910						
ANR	5828026	Symbol	__func__		5827910						
ANR	5828027	Symbol	true		5827910						
ANR	5828028	Symbol	g -> data_max		5827910						
ANR	5828029	Function	unpack	42:0:692:2869							
ANR	5828030	FunctionDef	"unpack (libgdbr_t * g , struct parse_ctx * ctx , int len)"		5828029	0					
ANR	5828031	CompoundStatement		42:64:756:2869	5828029	0					
ANR	5828032	IdentifierDeclStatement	int i = 0 ;	43:1:759:768	5828029	0	True				
ANR	5828033	IdentifierDecl	i = 0		5828029	0					
ANR	5828034	IdentifierDeclType	int		5828029	0					
ANR	5828035	Identifier	i		5828029	1					
ANR	5828036	AssignmentExpression	i = 0		5828029	2		=			
ANR	5828037	Identifier	i		5828029	0					
ANR	5828038	PrimaryExpression	0		5828029	1					
ANR	5828039	IdentifierDeclStatement	int j = 0 ;	44:1:771:780	5828029	1	True				
ANR	5828040	IdentifierDecl	j = 0		5828029	0					
ANR	5828041	IdentifierDeclType	int		5828029	0					
ANR	5828042	Identifier	j		5828029	1					
ANR	5828043	AssignmentExpression	j = 0		5828029	2		=			
ANR	5828044	Identifier	j		5828029	0					
ANR	5828045	PrimaryExpression	0		5828029	1					
ANR	5828046	IdentifierDeclStatement	bool first = true ;	45:1:783:800	5828029	2	True				
ANR	5828047	IdentifierDecl	first = true		5828029	0					
ANR	5828048	IdentifierDeclType	bool		5828029	0					
ANR	5828049	Identifier	first		5828029	1					
ANR	5828050	AssignmentExpression	first = true		5828029	2		=			
ANR	5828051	Identifier	true		5828029	0					
ANR	5828052	Identifier	true		5828029	1					
ANR	5828053	ExpressionStatement	g -> read_buff [ len ] = '\\0'	46:1:803:827	5828029	3	True				
ANR	5828054	AssignmentExpression	g -> read_buff [ len ] = '\\0'		5828029	0		=			
ANR	5828055	ArrayIndexing	g -> read_buff [ len ]		5828029	0					
ANR	5828056	PtrMemberAccess	g -> read_buff		5828029	0					
ANR	5828057	Identifier	g		5828029	0					
ANR	5828058	Identifier	read_buff		5828029	1					
ANR	5828059	Identifier	len		5828029	1					
ANR	5828060	PrimaryExpression	'\\0'		5828029	1					
ANR	5828061	ForStatement	for ( i = 0 ; i < len ; i ++ )		5828029	4					
ANR	5828062	ForInit	i = 0 ;	47:6:835:840	5828029	0	True				
ANR	5828063	AssignmentExpression	i = 0		5828029	0		=			
ANR	5828064	Identifier	i		5828029	0					
ANR	5828065	PrimaryExpression	0		5828029	1					
ANR	5828066	Condition	i < len	47:13:842:848	5828029	1	True				
ANR	5828067	RelationalExpression	i < len		5828029	0		<			
ANR	5828068	Identifier	i		5828029	0					
ANR	5828069	Identifier	len		5828029	1					
ANR	5828070	PostIncDecOperationExpression	i ++	47:22:851:853	5828029	2	True				
ANR	5828071	Identifier	i		5828029	0					
ANR	5828072	IncDec	++		5828029	1					
ANR	5828073	CompoundStatement		7:2:103:129	5828029	3					
ANR	5828074	IdentifierDeclStatement	char cur = g -> read_buff [ i ] ;	48:2:860:886	5828029	0	True				
ANR	5828075	IdentifierDecl	cur = g -> read_buff [ i ]		5828029	0					
ANR	5828076	IdentifierDeclType	char		5828029	0					
ANR	5828077	Identifier	cur		5828029	1					
ANR	5828078	AssignmentExpression	cur = g -> read_buff [ i ]		5828029	2		=			
ANR	5828079	Identifier	cur		5828029	0					
ANR	5828080	ArrayIndexing	g -> read_buff [ i ]		5828029	1					
ANR	5828081	PtrMemberAccess	g -> read_buff		5828029	0					
ANR	5828082	Identifier	g		5828029	0					
ANR	5828083	Identifier	read_buff		5828029	1					
ANR	5828084	Identifier	i		5828029	1					
ANR	5828085	IfStatement	if ( ctx -> flags & CHKSUM )		5828029	1					
ANR	5828086	Condition	ctx -> flags & CHKSUM	49:6:894:912	5828029	0	True				
ANR	5828087	BitAndExpression	ctx -> flags & CHKSUM		5828029	0		&			
ANR	5828088	PtrMemberAccess	ctx -> flags		5828029	0					
ANR	5828089	Identifier	ctx		5828029	0					
ANR	5828090	Identifier	flags		5828029	1					
ANR	5828091	Identifier	CHKSUM		5828029	1					
ANR	5828092	CompoundStatement		8:27:158:158	5828029	1					
ANR	5828093	ExpressionStatement	ctx -> sum -= hex2int ( cur ) << ( ctx -> chksum_nibble * 4 )	50:3:920:973	5828029	0	True				
ANR	5828094	AssignmentExpression	ctx -> sum -= hex2int ( cur ) << ( ctx -> chksum_nibble * 4 )		5828029	0		-=			
ANR	5828095	PtrMemberAccess	ctx -> sum		5828029	0					
ANR	5828096	Identifier	ctx		5828029	0					
ANR	5828097	Identifier	sum		5828029	1					
ANR	5828098	ShiftExpression	hex2int ( cur ) << ( ctx -> chksum_nibble * 4 )		5828029	1		<<			
ANR	5828099	CallExpression	hex2int ( cur )		5828029	0					
ANR	5828100	Callee	hex2int		5828029	0					
ANR	5828101	Identifier	hex2int		5828029	0					
ANR	5828102	ArgumentList	cur		5828029	1					
ANR	5828103	Argument	cur		5828029	0					
ANR	5828104	Identifier	cur		5828029	0					
ANR	5828105	MultiplicativeExpression	ctx -> chksum_nibble * 4		5828029	1		*			
ANR	5828106	PtrMemberAccess	ctx -> chksum_nibble		5828029	0					
ANR	5828107	Identifier	ctx		5828029	0					
ANR	5828108	Identifier	chksum_nibble		5828029	1					
ANR	5828109	PrimaryExpression	4		5828029	1					
ANR	5828110	IfStatement	if ( ! -- ctx -> chksum_nibble )		5828029	1					
ANR	5828111	Condition	! -- ctx -> chksum_nibble	51:7:982:1002	5828029	0	True				
ANR	5828112	UnaryOperationExpression	! -- ctx -> chksum_nibble		5828029	0					
ANR	5828113	UnaryOperator	!		5828029	0					
ANR	5828114	UnaryExpression	-- ctx -> chksum_nibble		5828029	1					
ANR	5828115	IncDec	--		5828029	0					
ANR	5828116	PtrMemberAccess	ctx -> chksum_nibble		5828029	1					
ANR	5828117	Identifier	ctx		5828029	0					
ANR	5828118	Identifier	chksum_nibble		5828029	1					
ANR	5828119	CompoundStatement		10:30:248:248	5828029	1					
ANR	5828120	ContinueStatement	continue ;	52:4:1011:1019	5828029	0	True				
ANR	5828121	IfStatement	if ( ctx -> sum != '#' )		5828029	2					
ANR	5828122	Condition	ctx -> sum != '#'	54:7:1033:1047	5828029	0	True				
ANR	5828123	EqualityExpression	ctx -> sum != '#'		5828029	0		!=			
ANR	5828124	PtrMemberAccess	ctx -> sum		5828029	0					
ANR	5828125	Identifier	ctx		5828029	0					
ANR	5828126	Identifier	sum		5828029	1					
ANR	5828127	PrimaryExpression	'#'		5828029	1					
ANR	5828128	CompoundStatement		13:24:293:293	5828029	1					
ANR	5828129	ExpressionStatement	"eprintf ( ""%s: Invalid checksum\\n"" , __func__ )"	55:4:1056:1100	5828029	0	True				
ANR	5828130	CallExpression	"eprintf ( ""%s: Invalid checksum\\n"" , __func__ )"		5828029	0					
ANR	5828131	Callee	eprintf		5828029	0					
ANR	5828132	Identifier	eprintf		5828029	0					
ANR	5828133	ArgumentList	"""%s: Invalid checksum\\n"""		5828029	1					
ANR	5828134	Argument	"""%s: Invalid checksum\\n"""		5828029	0					
ANR	5828135	PrimaryExpression	"""%s: Invalid checksum\\n"""		5828029	0					
ANR	5828136	Argument	__func__		5828029	1					
ANR	5828137	Identifier	__func__		5828029	0					
ANR	5828138	ReturnStatement	return - 1 ;	56:4:1106:1115	5828029	1	True				
ANR	5828139	UnaryOperationExpression	- 1		5828029	0					
ANR	5828140	UnaryOperator	-		5828029	0					
ANR	5828141	PrimaryExpression	1		5828029	1					
ANR	5828142	IfStatement	if ( i != len - 1 )		5828029	3					
ANR	5828143	Condition	i != len - 1	58:7:1129:1140	5828029	0	True				
ANR	5828144	EqualityExpression	i != len - 1		5828029	0		!=			
ANR	5828145	Identifier	i		5828029	0					
ANR	5828146	AdditiveExpression	len - 1		5828029	1		-			
ANR	5828147	Identifier	len		5828029	0					
ANR	5828148	PrimaryExpression	1		5828029	1					
ANR	5828149	CompoundStatement		17:21:386:386	5828029	1					
ANR	5828150	IfStatement	if ( g -> read_buff [ i + 1 ] == '$' || ( g -> read_buff [ i + 1 ] == '+' && g -> read_buff [ i + 2 ] == '$' ) )		5828029	0					
ANR	5828151	Condition	g -> read_buff [ i + 1 ] == '$' || ( g -> read_buff [ i + 1 ] == '+' && g -> read_buff [ i + 2 ] == '$' )	59:8:1153:1248	5828029	0	True				
ANR	5828152	OrExpression	g -> read_buff [ i + 1 ] == '$' || ( g -> read_buff [ i + 1 ] == '+' && g -> read_buff [ i + 2 ] == '$' )		5828029	0		||			
ANR	5828153	EqualityExpression	g -> read_buff [ i + 1 ] == '$'		5828029	0		==			
ANR	5828154	ArrayIndexing	g -> read_buff [ i + 1 ]		5828029	0					
ANR	5828155	PtrMemberAccess	g -> read_buff		5828029	0					
ANR	5828156	Identifier	g		5828029	0					
ANR	5828157	Identifier	read_buff		5828029	1					
ANR	5828158	AdditiveExpression	i + 1		5828029	1		+			
ANR	5828159	Identifier	i		5828029	0					
ANR	5828160	PrimaryExpression	1		5828029	1					
ANR	5828161	PrimaryExpression	'$'		5828029	1					
ANR	5828162	AndExpression	g -> read_buff [ i + 1 ] == '+' && g -> read_buff [ i + 2 ] == '$'		5828029	1		&&			
ANR	5828163	EqualityExpression	g -> read_buff [ i + 1 ] == '+'		5828029	0		==			
ANR	5828164	ArrayIndexing	g -> read_buff [ i + 1 ]		5828029	0					
ANR	5828165	PtrMemberAccess	g -> read_buff		5828029	0					
ANR	5828166	Identifier	g		5828029	0					
ANR	5828167	Identifier	read_buff		5828029	1					
ANR	5828168	AdditiveExpression	i + 1		5828029	1		+			
ANR	5828169	Identifier	i		5828029	0					
ANR	5828170	PrimaryExpression	1		5828029	1					
ANR	5828171	PrimaryExpression	'+'		5828029	1					
ANR	5828172	EqualityExpression	g -> read_buff [ i + 2 ] == '$'		5828029	1		==			
ANR	5828173	ArrayIndexing	g -> read_buff [ i + 2 ]		5828029	0					
ANR	5828174	PtrMemberAccess	g -> read_buff		5828029	0					
ANR	5828175	Identifier	g		5828029	0					
ANR	5828176	Identifier	read_buff		5828029	1					
ANR	5828177	AdditiveExpression	i + 2		5828029	1		+			
ANR	5828178	Identifier	i		5828029	0					
ANR	5828179	PrimaryExpression	2		5828029	1					
ANR	5828180	PrimaryExpression	'$'		5828029	1					
ANR	5828181	CompoundStatement		19:68:494:494	5828029	1					
ANR	5828182	ExpressionStatement	g -> read_len = len - i - 1	62:5:1291:1316	5828029	0	True				
ANR	5828183	AssignmentExpression	g -> read_len = len - i - 1		5828029	0		=			
ANR	5828184	PtrMemberAccess	g -> read_len		5828029	0					
ANR	5828185	Identifier	g		5828029	0					
ANR	5828186	Identifier	read_len		5828029	1					
ANR	5828187	AdditiveExpression	len - i - 1		5828029	1		-			
ANR	5828188	Identifier	len		5828029	0					
ANR	5828189	AdditiveExpression	i - 1		5828029	1		-			
ANR	5828190	Identifier	i		5828029	0					
ANR	5828191	PrimaryExpression	1		5828029	1					
ANR	5828192	ExpressionStatement	"memcpy ( g -> read_buff , g -> read_buff + i + 1 , g -> read_len )"	63:5:1323:1379	5828029	1	True				
ANR	5828193	CallExpression	"memcpy ( g -> read_buff , g -> read_buff + i + 1 , g -> read_len )"		5828029	0					
ANR	5828194	Callee	memcpy		5828029	0					
ANR	5828195	Identifier	memcpy		5828029	0					
ANR	5828196	ArgumentList	g -> read_buff		5828029	1					
ANR	5828197	Argument	g -> read_buff		5828029	0					
ANR	5828198	PtrMemberAccess	g -> read_buff		5828029	0					
ANR	5828199	Identifier	g		5828029	0					
ANR	5828200	Identifier	read_buff		5828029	1					
ANR	5828201	Argument	g -> read_buff + i + 1		5828029	1					
ANR	5828202	AdditiveExpression	g -> read_buff + i + 1		5828029	0		+			
ANR	5828203	PtrMemberAccess	g -> read_buff		5828029	0					
ANR	5828204	Identifier	g		5828029	0					
ANR	5828205	Identifier	read_buff		5828029	1					
ANR	5828206	AdditiveExpression	i + 1		5828029	1		+			
ANR	5828207	Identifier	i		5828029	0					
ANR	5828208	PrimaryExpression	1		5828029	1					
ANR	5828209	Argument	g -> read_len		5828029	2					
ANR	5828210	PtrMemberAccess	g -> read_len		5828029	0					
ANR	5828211	Identifier	g		5828029	0					
ANR	5828212	Identifier	read_len		5828029	1					
ANR	5828213	ExpressionStatement	g -> read_buff [ g -> read_len ] = '\\0'	64:5:1386:1418	5828029	2	True				
ANR	5828214	AssignmentExpression	g -> read_buff [ g -> read_len ] = '\\0'		5828029	0		=			
ANR	5828215	ArrayIndexing	g -> read_buff [ g -> read_len ]		5828029	0					
ANR	5828216	PtrMemberAccess	g -> read_buff		5828029	0					
ANR	5828217	Identifier	g		5828029	0					
ANR	5828218	Identifier	read_buff		5828029	1					
ANR	5828219	PtrMemberAccess	g -> read_len		5828029	1					
ANR	5828220	Identifier	g		5828029	0					
ANR	5828221	Identifier	read_len		5828029	1					
ANR	5828222	PrimaryExpression	'\\0'		5828029	1					
ANR	5828223	ReturnStatement	return 0 ;	65:5:1425:1433	5828029	3	True				
ANR	5828224	PrimaryExpression	0		5828029	0					
ANR	5828225	ExpressionStatement	"eprintf ( ""%s: Garbage at end of packet: %s (%s)\\n"" , __func__ , g -> read_buff + i + 1 , g -> read_buff + i + 1 )"	67:4:1445:1556	5828029	1	True				
ANR	5828226	CallExpression	"eprintf ( ""%s: Garbage at end of packet: %s (%s)\\n"" , __func__ , g -> read_buff + i + 1 , g -> read_buff + i + 1 )"		5828029	0					
ANR	5828227	Callee	eprintf		5828029	0					
ANR	5828228	Identifier	eprintf		5828029	0					
ANR	5828229	ArgumentList	"""%s: Garbage at end of packet: %s (%s)\\n"""		5828029	1					
ANR	5828230	Argument	"""%s: Garbage at end of packet: %s (%s)\\n"""		5828029	0					
ANR	5828231	PrimaryExpression	"""%s: Garbage at end of packet: %s (%s)\\n"""		5828029	0					
ANR	5828232	Argument	__func__		5828029	1					
ANR	5828233	Identifier	__func__		5828029	0					
ANR	5828234	Argument	g -> read_buff + i + 1		5828029	2					
ANR	5828235	AdditiveExpression	g -> read_buff + i + 1		5828029	0		+			
ANR	5828236	PtrMemberAccess	g -> read_buff		5828029	0					
ANR	5828237	Identifier	g		5828029	0					
ANR	5828238	Identifier	read_buff		5828029	1					
ANR	5828239	AdditiveExpression	i + 1		5828029	1		+			
ANR	5828240	Identifier	i		5828029	0					
ANR	5828241	PrimaryExpression	1		5828029	1					
ANR	5828242	Argument	g -> read_buff + i + 1		5828029	3					
ANR	5828243	AdditiveExpression	g -> read_buff + i + 1		5828029	0		+			
ANR	5828244	PtrMemberAccess	g -> read_buff		5828029	0					
ANR	5828245	Identifier	g		5828029	0					
ANR	5828246	Identifier	read_buff		5828029	1					
ANR	5828247	AdditiveExpression	i + 1		5828029	1		+			
ANR	5828248	Identifier	i		5828029	0					
ANR	5828249	PrimaryExpression	1		5828029	1					
ANR	5828250	ExpressionStatement	g -> read_len = 0	70:3:1566:1581	5828029	4	True				
ANR	5828251	AssignmentExpression	g -> read_len = 0		5828029	0		=			
ANR	5828252	PtrMemberAccess	g -> read_len		5828029	0					
ANR	5828253	Identifier	g		5828029	0					
ANR	5828254	Identifier	read_len		5828029	1					
ANR	5828255	PrimaryExpression	0		5828029	1					
ANR	5828256	ReturnStatement	return 0 ;	71:3:1586:1594	5828029	5	True				
ANR	5828257	PrimaryExpression	0		5828029	0					
ANR	5828258	ExpressionStatement	ctx -> sum += cur	73:2:1602:1617	5828029	2	True				
ANR	5828259	AssignmentExpression	ctx -> sum += cur		5828029	0		+=			
ANR	5828260	PtrMemberAccess	ctx -> sum		5828029	0					
ANR	5828261	Identifier	ctx		5828029	0					
ANR	5828262	Identifier	sum		5828029	1					
ANR	5828263	Identifier	cur		5828029	1					
ANR	5828264	IfStatement	if ( ctx -> flags & ESC )		5828029	3					
ANR	5828265	Condition	ctx -> flags & ESC	74:6:1625:1640	5828029	0	True				
ANR	5828266	BitAndExpression	ctx -> flags & ESC		5828029	0		&			
ANR	5828267	PtrMemberAccess	ctx -> flags		5828029	0					
ANR	5828268	Identifier	ctx		5828029	0					
ANR	5828269	Identifier	flags		5828029	1					
ANR	5828270	Identifier	ESC		5828029	1					
ANR	5828271	CompoundStatement		33:24:886:886	5828029	1					
ANR	5828272	IfStatement	"if ( ! append ( g , cur ^ 0x20 ) )"		5828029	0					
ANR	5828273	Condition	"! append ( g , cur ^ 0x20 )"	75:7:1652:1674	5828029	0	True				
ANR	5828274	UnaryOperationExpression	"! append ( g , cur ^ 0x20 )"		5828029	0					
ANR	5828275	UnaryOperator	!		5828029	0					
ANR	5828276	CallExpression	"append ( g , cur ^ 0x20 )"		5828029	1					
ANR	5828277	Callee	append		5828029	0					
ANR	5828278	Identifier	append		5828029	0					
ANR	5828279	ArgumentList	g		5828029	1					
ANR	5828280	Argument	g		5828029	0					
ANR	5828281	Identifier	g		5828029	0					
ANR	5828282	Argument	cur ^ 0x20		5828029	1					
ANR	5828283	ExclusiveOrExpression	cur ^ 0x20		5828029	0		^			
ANR	5828284	Identifier	cur		5828029	0					
ANR	5828285	PrimaryExpression	0x20		5828029	1					
ANR	5828286	CompoundStatement		34:32:920:920	5828029	1					
ANR	5828287	ReturnStatement	return - 1 ;	76:4:1683:1692	5828029	0	True				
ANR	5828288	UnaryOperationExpression	- 1		5828029	0					
ANR	5828289	UnaryOperator	-		5828029	0					
ANR	5828290	PrimaryExpression	1		5828029	1					
ANR	5828291	ExpressionStatement	ctx -> flags &= ~ESC	78:3:1702:1720	5828029	1	True				
ANR	5828292	AssignmentExpression	ctx -> flags &= ~ESC		5828029	0		&=			
ANR	5828293	PtrMemberAccess	ctx -> flags		5828029	0					
ANR	5828294	Identifier	ctx		5828029	0					
ANR	5828295	Identifier	flags		5828029	1					
ANR	5828296	Identifier	~ESC		5828029	1					
ANR	5828297	ContinueStatement	continue ;	79:3:1725:1733	5828029	2	True				
ANR	5828298	IfStatement	if ( ctx -> flags & DUP )		5828029	4					
ANR	5828299	Condition	ctx -> flags & DUP	81:6:1745:1760	5828029	0	True				
ANR	5828300	BitAndExpression	ctx -> flags & DUP		5828029	0		&			
ANR	5828301	PtrMemberAccess	ctx -> flags		5828029	0					
ANR	5828302	Identifier	ctx		5828029	0					
ANR	5828303	Identifier	flags		5828029	1					
ANR	5828304	Identifier	DUP		5828029	1					
ANR	5828305	CompoundStatement		40:24:1006:1006	5828029	1					
ANR	5828306	IfStatement	if ( cur < 32 || cur > 126 )		5828029	0					
ANR	5828307	Condition	cur < 32 || cur > 126	82:7:1772:1792	5828029	0	True				
ANR	5828308	OrExpression	cur < 32 || cur > 126		5828029	0		||			
ANR	5828309	RelationalExpression	cur < 32		5828029	0		<			
ANR	5828310	Identifier	cur		5828029	0					
ANR	5828311	PrimaryExpression	32		5828029	1					
ANR	5828312	RelationalExpression	cur > 126		5828029	1		>			
ANR	5828313	Identifier	cur		5828029	0					
ANR	5828314	PrimaryExpression	126		5828029	1					
ANR	5828315	CompoundStatement		41:30:1038:1038	5828029	1					
ANR	5828316	ExpressionStatement	"eprintf ( ""%s: Invalid repeat count: %d\\n"" , __func__ , cur )"	83:4:1801:1864	5828029	0	True				
ANR	5828317	CallExpression	"eprintf ( ""%s: Invalid repeat count: %d\\n"" , __func__ , cur )"		5828029	0					
ANR	5828318	Callee	eprintf		5828029	0					
ANR	5828319	Identifier	eprintf		5828029	0					
ANR	5828320	ArgumentList	"""%s: Invalid repeat count: %d\\n"""		5828029	1					
ANR	5828321	Argument	"""%s: Invalid repeat count: %d\\n"""		5828029	0					
ANR	5828322	PrimaryExpression	"""%s: Invalid repeat count: %d\\n"""		5828029	0					
ANR	5828323	Argument	__func__		5828029	1					
ANR	5828324	Identifier	__func__		5828029	0					
ANR	5828325	Argument	cur		5828029	2					
ANR	5828326	Identifier	cur		5828029	0					
ANR	5828327	ReturnStatement	return - 1 ;	85:4:1870:1879	5828029	1	True				
ANR	5828328	UnaryOperationExpression	- 1		5828029	0					
ANR	5828329	UnaryOperator	-		5828029	0					
ANR	5828330	PrimaryExpression	1		5828029	1					
ANR	5828331	ForStatement	for ( j = cur - 29 ; j > 0 ; j -- )		5828029	1					
ANR	5828332	ForInit	j = cur - 29 ;	87:8:1894:1906	5828029	0	True				
ANR	5828333	AssignmentExpression	j = cur - 29		5828029	0		=			
ANR	5828334	Identifier	j		5828029	0					
ANR	5828335	AdditiveExpression	cur - 29		5828029	1		-			
ANR	5828336	Identifier	cur		5828029	0					
ANR	5828337	PrimaryExpression	29		5828029	1					
ANR	5828338	Condition	j > 0	87:22:1908:1912	5828029	1	True				
ANR	5828339	RelationalExpression	j > 0		5828029	0		>			
ANR	5828340	Identifier	j		5828029	0					
ANR	5828341	PrimaryExpression	0		5828029	1					
ANR	5828342	PostIncDecOperationExpression	j --	87:29:1915:1917	5828029	2	True				
ANR	5828343	Identifier	j		5828029	0					
ANR	5828344	IncDec	--		5828029	1					
ANR	5828345	CompoundStatement		46:34:1163:1163	5828029	3					
ANR	5828346	IfStatement	"if ( ! append ( g , ctx -> last ) )"		5828029	0					
ANR	5828347	Condition	"! append ( g , ctx -> last )"	88:8:1930:1951	5828029	0	True				
ANR	5828348	UnaryOperationExpression	"! append ( g , ctx -> last )"		5828029	0					
ANR	5828349	UnaryOperator	!		5828029	0					
ANR	5828350	CallExpression	"append ( g , ctx -> last )"		5828029	1					
ANR	5828351	Callee	append		5828029	0					
ANR	5828352	Identifier	append		5828029	0					
ANR	5828353	ArgumentList	g		5828029	1					
ANR	5828354	Argument	g		5828029	0					
ANR	5828355	Identifier	g		5828029	0					
ANR	5828356	Argument	ctx -> last		5828029	1					
ANR	5828357	PtrMemberAccess	ctx -> last		5828029	0					
ANR	5828358	Identifier	ctx		5828029	0					
ANR	5828359	Identifier	last		5828029	1					
ANR	5828360	CompoundStatement		47:32:1197:1197	5828029	1					
ANR	5828361	ReturnStatement	return - 1 ;	89:5:1961:1970	5828029	0	True				
ANR	5828362	UnaryOperationExpression	- 1		5828029	0					
ANR	5828363	UnaryOperator	-		5828029	0					
ANR	5828364	PrimaryExpression	1		5828029	1					
ANR	5828365	ExpressionStatement	ctx -> last = 0	92:3:1986:1999	5828029	2	True				
ANR	5828366	AssignmentExpression	ctx -> last = 0		5828029	0		=			
ANR	5828367	PtrMemberAccess	ctx -> last		5828029	0					
ANR	5828368	Identifier	ctx		5828029	0					
ANR	5828369	Identifier	last		5828029	1					
ANR	5828370	PrimaryExpression	0		5828029	1					
ANR	5828371	ExpressionStatement	ctx -> flags &= ~DUP	93:3:2004:2022	5828029	3	True				
ANR	5828372	AssignmentExpression	ctx -> flags &= ~DUP		5828029	0		&=			
ANR	5828373	PtrMemberAccess	ctx -> flags		5828029	0					
ANR	5828374	Identifier	ctx		5828029	0					
ANR	5828375	Identifier	flags		5828029	1					
ANR	5828376	Identifier	~DUP		5828029	1					
ANR	5828377	ContinueStatement	continue ;	94:3:2027:2035	5828029	4	True				
ANR	5828378	SwitchStatement	switch ( cur )		5828029	5					
ANR	5828379	Condition	cur	96:10:2051:2053	5828029	0	True				
ANR	5828380	Identifier	cur		5828029	0					
ANR	5828381	CompoundStatement		55:15:1299:1299	5828029	1					
ANR	5828382	Label	case '$' :	97:2:2060:2068	5828029	0	True				
ANR	5828383	IfStatement	if ( ctx -> flags & HEADER )		5828029	1					
ANR	5828384	Condition	ctx -> flags & HEADER	98:7:2077:2095	5828029	0	True				
ANR	5828385	BitAndExpression	ctx -> flags & HEADER		5828029	0		&			
ANR	5828386	PtrMemberAccess	ctx -> flags		5828029	0					
ANR	5828387	Identifier	ctx		5828029	0					
ANR	5828388	Identifier	flags		5828029	1					
ANR	5828389	Identifier	HEADER		5828029	1					
ANR	5828390	CompoundStatement		57:28:1341:1341	5828029	1					
ANR	5828391	ExpressionStatement	"eprintf ( ""%s: More than one $\\n"" , __func__ )"	99:4:2104:2147	5828029	0	True				
ANR	5828392	CallExpression	"eprintf ( ""%s: More than one $\\n"" , __func__ )"		5828029	0					
ANR	5828393	Callee	eprintf		5828029	0					
ANR	5828394	Identifier	eprintf		5828029	0					
ANR	5828395	ArgumentList	"""%s: More than one $\\n"""		5828029	1					
ANR	5828396	Argument	"""%s: More than one $\\n"""		5828029	0					
ANR	5828397	PrimaryExpression	"""%s: More than one $\\n"""		5828029	0					
ANR	5828398	Argument	__func__		5828029	1					
ANR	5828399	Identifier	__func__		5828029	0					
ANR	5828400	ReturnStatement	return - 1 ;	100:4:2153:2162	5828029	1	True				
ANR	5828401	UnaryOperationExpression	- 1		5828029	0					
ANR	5828402	UnaryOperator	-		5828029	0					
ANR	5828403	PrimaryExpression	1		5828029	1					
ANR	5828404	ExpressionStatement	ctx -> flags |= HEADER	102:3:2172:2192	5828029	2	True				
ANR	5828405	AssignmentExpression	ctx -> flags |= HEADER		5828029	0		|=			
ANR	5828406	PtrMemberAccess	ctx -> flags		5828029	0					
ANR	5828407	Identifier	ctx		5828029	0					
ANR	5828408	Identifier	flags		5828029	1					
ANR	5828409	Identifier	HEADER		5828029	1					
ANR	5828410	ExpressionStatement	ctx -> sum = 0	104:3:2243:2255	5828029	3	True				
ANR	5828411	AssignmentExpression	ctx -> sum = 0		5828029	0		=			
ANR	5828412	PtrMemberAccess	ctx -> sum		5828029	0					
ANR	5828413	Identifier	ctx		5828029	0					
ANR	5828414	Identifier	sum		5828029	1					
ANR	5828415	PrimaryExpression	0		5828029	1					
ANR	5828416	BreakStatement	break ;	105:3:2260:2265	5828029	4	True				
ANR	5828417	Label	case '#' :	106:2:2269:2277	5828029	5	True				
ANR	5828418	ExpressionStatement	ctx -> flags |= CHKSUM	107:3:2282:2302	5828029	6	True				
ANR	5828419	AssignmentExpression	ctx -> flags |= CHKSUM		5828029	0		|=			
ANR	5828420	PtrMemberAccess	ctx -> flags		5828029	0					
ANR	5828421	Identifier	ctx		5828029	0					
ANR	5828422	Identifier	flags		5828029	1					
ANR	5828423	Identifier	CHKSUM		5828029	1					
ANR	5828424	ExpressionStatement	ctx -> chksum_nibble = 1	108:3:2307:2329	5828029	7	True				
ANR	5828425	AssignmentExpression	ctx -> chksum_nibble = 1		5828029	0		=			
ANR	5828426	PtrMemberAccess	ctx -> chksum_nibble		5828029	0					
ANR	5828427	Identifier	ctx		5828029	0					
ANR	5828428	Identifier	chksum_nibble		5828029	1					
ANR	5828429	PrimaryExpression	1		5828029	1					
ANR	5828430	BreakStatement	break ;	109:3:2334:2339	5828029	8	True				
ANR	5828431	Label	case '}' :	110:2:2343:2351	5828029	9	True				
ANR	5828432	ExpressionStatement	ctx -> flags |= ESC	111:3:2356:2373	5828029	10	True				
ANR	5828433	AssignmentExpression	ctx -> flags |= ESC		5828029	0		|=			
ANR	5828434	PtrMemberAccess	ctx -> flags		5828029	0					
ANR	5828435	Identifier	ctx		5828029	0					
ANR	5828436	Identifier	flags		5828029	1					
ANR	5828437	Identifier	ESC		5828029	1					
ANR	5828438	BreakStatement	break ;	112:3:2378:2383	5828029	11	True				
ANR	5828439	Label	case '*' :	113:2:2387:2395	5828029	12	True				
ANR	5828440	IfStatement	if ( first )		5828029	13					
ANR	5828441	Condition	first	114:7:2404:2408	5828029	0	True				
ANR	5828442	Identifier	first		5828029	0					
ANR	5828443	CompoundStatement		73:14:1654:1654	5828029	1					
ANR	5828444	ExpressionStatement	"eprintf ( ""%s: Invalid repeat\\n"" , __func__ )"	115:4:2417:2459	5828029	0	True				
ANR	5828445	CallExpression	"eprintf ( ""%s: Invalid repeat\\n"" , __func__ )"		5828029	0					
ANR	5828446	Callee	eprintf		5828029	0					
ANR	5828447	Identifier	eprintf		5828029	0					
ANR	5828448	ArgumentList	"""%s: Invalid repeat\\n"""		5828029	1					
ANR	5828449	Argument	"""%s: Invalid repeat\\n"""		5828029	0					
ANR	5828450	PrimaryExpression	"""%s: Invalid repeat\\n"""		5828029	0					
ANR	5828451	Argument	__func__		5828029	1					
ANR	5828452	Identifier	__func__		5828029	0					
ANR	5828453	ReturnStatement	return - 1 ;	116:4:2465:2474	5828029	1	True				
ANR	5828454	UnaryOperationExpression	- 1		5828029	0					
ANR	5828455	UnaryOperator	-		5828029	0					
ANR	5828456	PrimaryExpression	1		5828029	1					
ANR	5828457	ExpressionStatement	ctx -> flags |= DUP	118:3:2484:2501	5828029	14	True				
ANR	5828458	AssignmentExpression	ctx -> flags |= DUP		5828029	0		|=			
ANR	5828459	PtrMemberAccess	ctx -> flags		5828029	0					
ANR	5828460	Identifier	ctx		5828029	0					
ANR	5828461	Identifier	flags		5828029	1					
ANR	5828462	Identifier	DUP		5828029	1					
ANR	5828463	BreakStatement	break ;	119:3:2506:2511	5828029	15	True				
ANR	5828464	Label	case '+' :	120:2:2515:2523	5828029	16	True				
ANR	5828465	Label	case '-' :	121:2:2527:2535	5828029	17	True				
ANR	5828466	IfStatement	if ( ! ( ctx -> flags & HEADER ) )		5828029	18					
ANR	5828467	Condition	! ( ctx -> flags & HEADER )	122:7:2544:2565	5828029	0	True				
ANR	5828468	UnaryOperationExpression	! ( ctx -> flags & HEADER )		5828029	0					
ANR	5828469	UnaryOperator	!		5828029	0					
ANR	5828470	BitAndExpression	ctx -> flags & HEADER		5828029	1		&			
ANR	5828471	PtrMemberAccess	ctx -> flags		5828029	0					
ANR	5828472	Identifier	ctx		5828029	0					
ANR	5828473	Identifier	flags		5828029	1					
ANR	5828474	Identifier	HEADER		5828029	1					
ANR	5828475	CompoundStatement		81:31:1811:1811	5828029	1					
ANR	5828476	IfStatement	if ( g -> server_debug && ! g -> no_ack )		5828029	0					
ANR	5828477	Condition	g -> server_debug && ! g -> no_ack	124:8:2612:2640	5828029	0	True				
ANR	5828478	AndExpression	g -> server_debug && ! g -> no_ack		5828029	0		&&			
ANR	5828479	PtrMemberAccess	g -> server_debug		5828029	0					
ANR	5828480	Identifier	g		5828029	0					
ANR	5828481	Identifier	server_debug		5828029	1					
ANR	5828482	UnaryOperationExpression	! g -> no_ack		5828029	1					
ANR	5828483	UnaryOperator	!		5828029	0					
ANR	5828484	PtrMemberAccess	g -> no_ack		5828029	1					
ANR	5828485	Identifier	g		5828029	0					
ANR	5828486	Identifier	no_ack		5828029	1					
ANR	5828487	CompoundStatement		83:39:1886:1886	5828029	1					
ANR	5828488	ExpressionStatement	"eprintf ( ""[received '%c' (0x%x)]\\n"" , cur , ( int ) cur )"	125:5:2650:2709	5828029	0	True				
ANR	5828489	CallExpression	"eprintf ( ""[received '%c' (0x%x)]\\n"" , cur , ( int ) cur )"		5828029	0					
ANR	5828490	Callee	eprintf		5828029	0					
ANR	5828491	Identifier	eprintf		5828029	0					
ANR	5828492	ArgumentList	"""[received '%c' (0x%x)]\\n"""		5828029	1					
ANR	5828493	Argument	"""[received '%c' (0x%x)]\\n"""		5828029	0					
ANR	5828494	PrimaryExpression	"""[received '%c' (0x%x)]\\n"""		5828029	0					
ANR	5828495	Argument	cur		5828029	1					
ANR	5828496	Identifier	cur		5828029	0					
ANR	5828497	Argument	( int ) cur		5828029	2					
ANR	5828498	CastExpression	( int ) cur		5828029	0					
ANR	5828499	CastTarget	int		5828029	0					
ANR	5828500	Identifier	cur		5828029	1					
ANR	5828501	BreakStatement	break ;	128:4:2721:2726	5828029	1	True				
ANR	5828502	Label	default :	131:2:2757:2764	5828029	19	True				
ANR	5828503	Identifier	default		5828029	0					
ANR	5828504	ExpressionStatement	first = false	132:3:2769:2782	5828029	20	True				
ANR	5828505	AssignmentExpression	first = false		5828029	0		=			
ANR	5828506	Identifier	first		5828029	0					
ANR	5828507	Identifier	false		5828029	1					
ANR	5828508	IfStatement	"if ( ! append ( g , cur ) )"		5828029	21					
ANR	5828509	Condition	"! append ( g , cur )"	133:7:2791:2806	5828029	0	True				
ANR	5828510	UnaryOperationExpression	"! append ( g , cur )"		5828029	0					
ANR	5828511	UnaryOperator	!		5828029	0					
ANR	5828512	CallExpression	"append ( g , cur )"		5828029	1					
ANR	5828513	Callee	append		5828029	0					
ANR	5828514	Identifier	append		5828029	0					
ANR	5828515	ArgumentList	g		5828029	1					
ANR	5828516	Argument	g		5828029	0					
ANR	5828517	Identifier	g		5828029	0					
ANR	5828518	Argument	cur		5828029	1					
ANR	5828519	Identifier	cur		5828029	0					
ANR	5828520	CompoundStatement		92:25:2052:2052	5828029	1					
ANR	5828521	ReturnStatement	return - 1 ;	134:4:2815:2824	5828029	0	True				
ANR	5828522	UnaryOperationExpression	- 1		5828029	0					
ANR	5828523	UnaryOperator	-		5828029	0					
ANR	5828524	PrimaryExpression	1		5828029	1					
ANR	5828525	ExpressionStatement	ctx -> last = cur	136:3:2834:2849	5828029	22	True				
ANR	5828526	AssignmentExpression	ctx -> last = cur		5828029	0		=			
ANR	5828527	PtrMemberAccess	ctx -> last		5828029	0					
ANR	5828528	Identifier	ctx		5828029	0					
ANR	5828529	Identifier	last		5828029	1					
ANR	5828530	Identifier	cur		5828029	1					
ANR	5828531	ReturnStatement	return 1 ;	139:1:2859:2867	5828029	5	True				
ANR	5828532	PrimaryExpression	1		5828029	0					
ANR	5828533	ReturnType	static int		5828029	1					
ANR	5828534	Identifier	unpack		5828029	2					
ANR	5828535	ParameterList	"libgdbr_t * g , struct parse_ctx * ctx , int len"		5828029	3					
ANR	5828536	Parameter	libgdbr_t * g	42:18:710:721	5828029	0	True				
ANR	5828537	ParameterType	libgdbr_t *		5828029	0					
ANR	5828538	Identifier	g		5828029	1					
ANR	5828539	Parameter	struct parse_ctx * ctx	42:32:724:744	5828029	1	True				
ANR	5828540	ParameterType	struct parse_ctx *		5828029	0					
ANR	5828541	Identifier	ctx		5828029	1					
ANR	5828542	Parameter	int len	42:55:747:753	5828029	2	True				
ANR	5828543	ParameterType	int		5828029	0					
ANR	5828544	Identifier	len		5828029	1					
ANR	5828545	CFGEntryNode	ENTRY		5828029		True				
ANR	5828546	CFGExitNode	EXIT		5828029		True				
ANR	5828547	Symbol	ctx -> last		5828029						
ANR	5828548	Symbol	cur		5828029						
ANR	5828549	Symbol	g -> server_debug		5828029						
ANR	5828550	Symbol	g -> read_buff		5828029						
ANR	5828551	Symbol	g -> read_len		5828029						
ANR	5828552	Symbol	HEADER		5828029						
ANR	5828553	Symbol	CHKSUM		5828029						
ANR	5828554	Symbol	hex2int		5828029						
ANR	5828555	Symbol	len		5828029						
ANR	5828556	Symbol	ESC		5828029						
ANR	5828557	Symbol	~DUP		5828029						
ANR	5828558	Symbol	DUP		5828029						
ANR	5828559	Symbol	ctx -> flags		5828029						
ANR	5828560	Symbol	* g -> read_buff		5828029						
ANR	5828561	Symbol	* * g		5828029						
ANR	5828562	Symbol	ctx		5828029						
ANR	5828563	Symbol	g -> no_ack		5828029						
ANR	5828564	Symbol	g		5828029						
ANR	5828565	Symbol	false		5828029						
ANR	5828566	Symbol	i		5828029						
ANR	5828567	Symbol	j		5828029						
ANR	5828568	Symbol	ctx -> chksum_nibble		5828029						
ANR	5828569	Symbol	~ESC		5828029						
ANR	5828570	Symbol	* ctx		5828029						
ANR	5828571	Symbol	* g		5828029						
ANR	5828572	Symbol	* i		5828029						
ANR	5828573	Symbol	* g -> read_len		5828029						
ANR	5828574	Symbol	ctx -> sum		5828029						
ANR	5828575	Symbol	__func__		5828029						
ANR	5828576	Symbol	true		5828029						
ANR	5828577	Symbol	first		5828029						
ANR	5828578	Symbol	append		5828029						
ANR	5828579	Symbol	* len		5828029						
ANR	5828580	Function	read_packet	142:0:2872:4032							
ANR	5828581	FunctionDef	"read_packet (libgdbr_t * g , bool vcont)"		5828580	0					
ANR	5828582	CompoundStatement		142:42:2914:4032	5828580	0					
ANR	5828583	IdentifierDeclStatement	struct parse_ctx ctx = { 0 } ;	143:1:2917:2945	5828580	0	True				
ANR	5828584	IdentifierDecl	ctx = { 0 }		5828580	0					
ANR	5828585	IdentifierDeclType	struct parse_ctx		5828580	0					
ANR	5828586	Identifier	ctx		5828580	1					
ANR	5828587	AssignmentExpression	ctx = { 0 }		5828580	2		=			
ANR	5828588	Identifier	ctx		5828580	0					
ANR	5828589	InitializerList	0		5828580	1					
ANR	5828590	PrimaryExpression	0		5828580	0					
ANR	5828591	IdentifierDeclStatement	"int ret , i ;"	144:1:2948:2958	5828580	1	True				
ANR	5828592	IdentifierDecl	ret		5828580	0					
ANR	5828593	IdentifierDeclType	int		5828580	0					
ANR	5828594	Identifier	ret		5828580	1					
ANR	5828595	IdentifierDecl	i		5828580	1					
ANR	5828596	IdentifierDeclType	int		5828580	0					
ANR	5828597	Identifier	i		5828580	1					
ANR	5828598	IfStatement	if ( ! g )		5828580	2					
ANR	5828599	Condition	! g	145:5:2965:2966	5828580	0	True				
ANR	5828600	UnaryOperationExpression	! g		5828580	0					
ANR	5828601	UnaryOperator	!		5828580	0					
ANR	5828602	Identifier	g		5828580	1					
ANR	5828603	CompoundStatement		4:9:54:54	5828580	1					
ANR	5828604	ExpressionStatement	"eprintf ( ""Initialize libgdbr_t first\\n"" )"	146:2:2973:3013	5828580	0	True				
ANR	5828605	CallExpression	"eprintf ( ""Initialize libgdbr_t first\\n"" )"		5828580	0					
ANR	5828606	Callee	eprintf		5828580	0					
ANR	5828607	Identifier	eprintf		5828580	0					
ANR	5828608	ArgumentList	"""Initialize libgdbr_t first\\n"""		5828580	1					
ANR	5828609	Argument	"""Initialize libgdbr_t first\\n"""		5828580	0					
ANR	5828610	PrimaryExpression	"""Initialize libgdbr_t first\\n"""		5828580	0					
ANR	5828611	ReturnStatement	return - 1 ;	147:2:3017:3026	5828580	1	True				
ANR	5828612	UnaryOperationExpression	- 1		5828580	0					
ANR	5828613	UnaryOperator	-		5828580	0					
ANR	5828614	PrimaryExpression	1		5828580	1					
ANR	5828615	ExpressionStatement	g -> data_len = 0	149:1:3032:3047	5828580	3	True				
ANR	5828616	AssignmentExpression	g -> data_len = 0		5828580	0		=			
ANR	5828617	PtrMemberAccess	g -> data_len		5828580	0					
ANR	5828618	Identifier	g		5828580	0					
ANR	5828619	Identifier	data_len		5828580	1					
ANR	5828620	PrimaryExpression	0		5828580	1					
ANR	5828621	IfStatement	if ( g -> read_len > 0 )		5828580	4					
ANR	5828622	Condition	g -> read_len > 0	150:5:3054:3068	5828580	0	True				
ANR	5828623	RelationalExpression	g -> read_len > 0		5828580	0		>			
ANR	5828624	PtrMemberAccess	g -> read_len		5828580	0					
ANR	5828625	Identifier	g		5828580	0					
ANR	5828626	Identifier	read_len		5828580	1					
ANR	5828627	PrimaryExpression	0		5828580	1					
ANR	5828628	CompoundStatement		9:22:156:156	5828580	1					
ANR	5828629	IfStatement	"if ( unpack ( g , & ctx , g -> read_len ) == 0 )"		5828580	0					
ANR	5828630	Condition	"unpack ( g , & ctx , g -> read_len ) == 0"	151:6:3079:3112	5828580	0	True				
ANR	5828631	EqualityExpression	"unpack ( g , & ctx , g -> read_len ) == 0"		5828580	0		==			
ANR	5828632	CallExpression	"unpack ( g , & ctx , g -> read_len )"		5828580	0					
ANR	5828633	Callee	unpack		5828580	0					
ANR	5828634	Identifier	unpack		5828580	0					
ANR	5828635	ArgumentList	g		5828580	1					
ANR	5828636	Argument	g		5828580	0					
ANR	5828637	Identifier	g		5828580	0					
ANR	5828638	Argument	& ctx		5828580	1					
ANR	5828639	UnaryOperationExpression	& ctx		5828580	0					
ANR	5828640	UnaryOperator	&		5828580	0					
ANR	5828641	Identifier	ctx		5828580	1					
ANR	5828642	Argument	g -> read_len		5828580	2					
ANR	5828643	PtrMemberAccess	g -> read_len		5828580	0					
ANR	5828644	Identifier	g		5828580	0					
ANR	5828645	Identifier	read_len		5828580	1					
ANR	5828646	PrimaryExpression	0		5828580	1					
ANR	5828647	CompoundStatement		10:42:200:200	5828580	1					
ANR	5828648	ExpressionStatement	g -> data [ g -> data_len ] = '\\0'	153:3:3172:3199	5828580	0	True				
ANR	5828649	AssignmentExpression	g -> data [ g -> data_len ] = '\\0'		5828580	0		=			
ANR	5828650	ArrayIndexing	g -> data [ g -> data_len ]		5828580	0					
ANR	5828651	PtrMemberAccess	g -> data		5828580	0					
ANR	5828652	Identifier	g		5828580	0					
ANR	5828653	Identifier	data		5828580	1					
ANR	5828654	PtrMemberAccess	g -> data_len		5828580	1					
ANR	5828655	Identifier	g		5828580	0					
ANR	5828656	Identifier	data_len		5828580	1					
ANR	5828657	PrimaryExpression	'\\0'		5828580	1					
ANR	5828658	IfStatement	if ( g -> server_debug )		5828580	1					
ANR	5828659	Condition	g -> server_debug	154:7:3208:3222	5828580	0	True				
ANR	5828660	PtrMemberAccess	g -> server_debug		5828580	0					
ANR	5828661	Identifier	g		5828580	0					
ANR	5828662	Identifier	server_debug		5828580	1					
ANR	5828663	CompoundStatement		13:24:310:310	5828580	1					
ANR	5828664	ExpressionStatement	"eprintf ( ""getpkt (\\""%s\\"");  %s\\n"" , g -> data , g -> no_ack ? ""[no ack sent]"" : ""[sending ack]"" )"	155:4:3231:3327	5828580	0	True				
ANR	5828665	CallExpression	"eprintf ( ""getpkt (\\""%s\\"");  %s\\n"" , g -> data , g -> no_ack ? ""[no ack sent]"" : ""[sending ack]"" )"		5828580	0					
ANR	5828666	Callee	eprintf		5828580	0					
ANR	5828667	Identifier	eprintf		5828580	0					
ANR	5828668	ArgumentList	"""getpkt (\\""%s\\"");  %s\\n"""		5828580	1					
ANR	5828669	Argument	"""getpkt (\\""%s\\"");  %s\\n"""		5828580	0					
ANR	5828670	PrimaryExpression	"""getpkt (\\""%s\\"");  %s\\n"""		5828580	0					
ANR	5828671	Argument	g -> data		5828580	1					
ANR	5828672	PtrMemberAccess	g -> data		5828580	0					
ANR	5828673	Identifier	g		5828580	0					
ANR	5828674	Identifier	data		5828580	1					
ANR	5828675	Argument	"g -> no_ack ? ""[no ack sent]"" : ""[sending ack]"""		5828580	2					
ANR	5828676	ConditionalExpression	"g -> no_ack ? ""[no ack sent]"" : ""[sending ack]"""		5828580	0					
ANR	5828677	Condition	g -> no_ack		5828580	0					
ANR	5828678	PtrMemberAccess	g -> no_ack		5828580	0					
ANR	5828679	Identifier	g		5828580	0					
ANR	5828680	Identifier	no_ack		5828580	1					
ANR	5828681	PrimaryExpression	"""[no ack sent]"""		5828580	1					
ANR	5828682	PrimaryExpression	"""[sending ack]"""		5828580	2					
ANR	5828683	ReturnStatement	return 0 ;	158:3:3337:3345	5828580	2	True				
ANR	5828684	PrimaryExpression	0		5828580	0					
ANR	5828685	ExpressionStatement	g -> data_len = 0	161:1:3355:3370	5828580	5	True				
ANR	5828686	AssignmentExpression	g -> data_len = 0		5828580	0		=			
ANR	5828687	PtrMemberAccess	g -> data_len		5828580	0					
ANR	5828688	Identifier	g		5828580	0					
ANR	5828689	Identifier	data_len		5828580	1					
ANR	5828690	PrimaryExpression	0		5828580	1					
ANR	5828691	ForStatement	for ( i = 0 ; i < g -> num_retries ; vcont ? 0 : i ++ )		5828580	6					
ANR	5828692	ForInit	i = 0 ;	162:6:3378:3383	5828580	0	True				
ANR	5828693	AssignmentExpression	i = 0		5828580	0		=			
ANR	5828694	Identifier	i		5828580	0					
ANR	5828695	PrimaryExpression	0		5828580	1					
ANR	5828696	Condition	i < g -> num_retries	162:13:3385:3402	5828580	1	True				
ANR	5828697	RelationalExpression	i < g -> num_retries		5828580	0		<			
ANR	5828698	Identifier	i		5828580	0					
ANR	5828699	PtrMemberAccess	g -> num_retries		5828580	1					
ANR	5828700	Identifier	g		5828580	0					
ANR	5828701	Identifier	num_retries		5828580	1					
ANR	5828702	ConditionalExpression	vcont ? 0 : i ++	162:33:3405:3419	5828580	2	True				
ANR	5828703	Condition	vcont		5828580	0					
ANR	5828704	Identifier	vcont		5828580	0					
ANR	5828705	PrimaryExpression	0		5828580	1					
ANR	5828706	PostIncDecOperationExpression	i ++		5828580	2					
ANR	5828707	Identifier	i		5828580	0					
ANR	5828708	IncDec	++		5828580	1					
ANR	5828709	CompoundStatement		29:2:643:714	5828580	3					
ANR	5828710	ExpressionStatement	"ret = r_socket_ready ( g -> sock , 0 , READ_TIMEOUT )"	163:2:3426:3473	5828580	0	True				
ANR	5828711	AssignmentExpression	"ret = r_socket_ready ( g -> sock , 0 , READ_TIMEOUT )"		5828580	0		=			
ANR	5828712	Identifier	ret		5828580	0					
ANR	5828713	CallExpression	"r_socket_ready ( g -> sock , 0 , READ_TIMEOUT )"		5828580	1					
ANR	5828714	Callee	r_socket_ready		5828580	0					
ANR	5828715	Identifier	r_socket_ready		5828580	0					
ANR	5828716	ArgumentList	g -> sock		5828580	1					
ANR	5828717	Argument	g -> sock		5828580	0					
ANR	5828718	PtrMemberAccess	g -> sock		5828580	0					
ANR	5828719	Identifier	g		5828580	0					
ANR	5828720	Identifier	sock		5828580	1					
ANR	5828721	Argument	0		5828580	1					
ANR	5828722	PrimaryExpression	0		5828580	0					
ANR	5828723	Argument	READ_TIMEOUT		5828580	2					
ANR	5828724	Identifier	READ_TIMEOUT		5828580	0					
ANR	5828725	IfStatement	if ( ret == 0 && ! vcont )		5828580	1					
ANR	5828726	Condition	ret == 0 && ! vcont	164:6:3481:3498	5828580	0	True				
ANR	5828727	AndExpression	ret == 0 && ! vcont		5828580	0		&&			
ANR	5828728	EqualityExpression	ret == 0		5828580	0		==			
ANR	5828729	Identifier	ret		5828580	0					
ANR	5828730	PrimaryExpression	0		5828580	1					
ANR	5828731	UnaryOperationExpression	! vcont		5828580	1					
ANR	5828732	UnaryOperator	!		5828580	0					
ANR	5828733	Identifier	vcont		5828580	1					
ANR	5828734	CompoundStatement		23:26:586:586	5828580	1					
ANR	5828735	ContinueStatement	continue ;	165:3:3506:3514	5828580	0	True				
ANR	5828736	IfStatement	if ( ret <= 0 )		5828580	2					
ANR	5828737	Condition	ret <= 0	167:6:3526:3533	5828580	0	True				
ANR	5828738	RelationalExpression	ret <= 0		5828580	0		<=			
ANR	5828739	Identifier	ret		5828580	0					
ANR	5828740	PrimaryExpression	0		5828580	1					
ANR	5828741	CompoundStatement		26:16:621:621	5828580	1					
ANR	5828742	ReturnStatement	return - 1 ;	168:3:3541:3550	5828580	0	True				
ANR	5828743	UnaryOperationExpression	- 1		5828580	0					
ANR	5828744	UnaryOperator	-		5828580	0					
ANR	5828745	PrimaryExpression	1		5828580	1					
ANR	5828746	IdentifierDeclStatement	"int sz = r_socket_read ( g -> sock , ( void * ) g -> read_buff , g -> read_max - 1 ) ;"	170:2:3558:3629	5828580	3	True				
ANR	5828747	IdentifierDecl	"sz = r_socket_read ( g -> sock , ( void * ) g -> read_buff , g -> read_max - 1 )"		5828580	0					
ANR	5828748	IdentifierDeclType	int		5828580	0					
ANR	5828749	Identifier	sz		5828580	1					
ANR	5828750	AssignmentExpression	"sz = r_socket_read ( g -> sock , ( void * ) g -> read_buff , g -> read_max - 1 )"		5828580	2		=			
ANR	5828751	Identifier	sz		5828580	0					
ANR	5828752	CallExpression	"r_socket_read ( g -> sock , ( void * ) g -> read_buff , g -> read_max - 1 )"		5828580	1					
ANR	5828753	Callee	r_socket_read		5828580	0					
ANR	5828754	Identifier	r_socket_read		5828580	0					
ANR	5828755	ArgumentList	g -> sock		5828580	1					
ANR	5828756	Argument	g -> sock		5828580	0					
ANR	5828757	PtrMemberAccess	g -> sock		5828580	0					
ANR	5828758	Identifier	g		5828580	0					
ANR	5828759	Identifier	sock		5828580	1					
ANR	5828760	Argument	( void * ) g -> read_buff		5828580	1					
ANR	5828761	CastExpression	( void * ) g -> read_buff		5828580	0					
ANR	5828762	CastTarget	void *		5828580	0					
ANR	5828763	PtrMemberAccess	g -> read_buff		5828580	1					
ANR	5828764	Identifier	g		5828580	0					
ANR	5828765	Identifier	read_buff		5828580	1					
ANR	5828766	Argument	g -> read_max - 1		5828580	2					
ANR	5828767	AdditiveExpression	g -> read_max - 1		5828580	0		-			
ANR	5828768	PtrMemberAccess	g -> read_max		5828580	0					
ANR	5828769	Identifier	g		5828580	0					
ANR	5828770	Identifier	read_max		5828580	1					
ANR	5828771	PrimaryExpression	1		5828580	1					
ANR	5828772	IfStatement	if ( sz <= 0 )		5828580	4					
ANR	5828773	Condition	sz <= 0	171:6:3637:3643	5828580	0	True				
ANR	5828774	RelationalExpression	sz <= 0		5828580	0		<=			
ANR	5828775	Identifier	sz		5828580	0					
ANR	5828776	PrimaryExpression	0		5828580	1					
ANR	5828777	CompoundStatement		30:15:731:731	5828580	1					
ANR	5828778	ExpressionStatement	"eprintf ( ""%s: read failed\\n"" , __func__ )"	172:3:3651:3690	5828580	0	True				
ANR	5828779	CallExpression	"eprintf ( ""%s: read failed\\n"" , __func__ )"		5828580	0					
ANR	5828780	Callee	eprintf		5828580	0					
ANR	5828781	Identifier	eprintf		5828580	0					
ANR	5828782	ArgumentList	"""%s: read failed\\n"""		5828580	1					
ANR	5828783	Argument	"""%s: read failed\\n"""		5828580	0					
ANR	5828784	PrimaryExpression	"""%s: read failed\\n"""		5828580	0					
ANR	5828785	Argument	__func__		5828580	1					
ANR	5828786	Identifier	__func__		5828580	0					
ANR	5828787	ReturnStatement	return - 1 ;	173:3:3695:3704	5828580	1	True				
ANR	5828788	UnaryOperationExpression	- 1		5828580	0					
ANR	5828789	UnaryOperator	-		5828580	0					
ANR	5828790	PrimaryExpression	1		5828580	1					
ANR	5828791	ExpressionStatement	"ret = unpack ( g , & ctx , sz )"	175:2:3712:3738	5828580	5	True				
ANR	5828792	AssignmentExpression	"ret = unpack ( g , & ctx , sz )"		5828580	0		=			
ANR	5828793	Identifier	ret		5828580	0					
ANR	5828794	CallExpression	"unpack ( g , & ctx , sz )"		5828580	1					
ANR	5828795	Callee	unpack		5828580	0					
ANR	5828796	Identifier	unpack		5828580	0					
ANR	5828797	ArgumentList	g		5828580	1					
ANR	5828798	Argument	g		5828580	0					
ANR	5828799	Identifier	g		5828580	0					
ANR	5828800	Argument	& ctx		5828580	1					
ANR	5828801	UnaryOperationExpression	& ctx		5828580	0					
ANR	5828802	UnaryOperator	&		5828580	0					
ANR	5828803	Identifier	ctx		5828580	1					
ANR	5828804	Argument	sz		5828580	2					
ANR	5828805	Identifier	sz		5828580	0					
ANR	5828806	IfStatement	if ( ret < 0 )		5828580	6					
ANR	5828807	Condition	ret < 0	176:6:3746:3752	5828580	0	True				
ANR	5828808	RelationalExpression	ret < 0		5828580	0		<			
ANR	5828809	Identifier	ret		5828580	0					
ANR	5828810	PrimaryExpression	0		5828580	1					
ANR	5828811	CompoundStatement		35:15:840:840	5828580	1					
ANR	5828812	ExpressionStatement	"eprintf ( ""%s: unpack failed\\n"" , __func__ )"	177:3:3760:3801	5828580	0	True				
ANR	5828813	CallExpression	"eprintf ( ""%s: unpack failed\\n"" , __func__ )"		5828580	0					
ANR	5828814	Callee	eprintf		5828580	0					
ANR	5828815	Identifier	eprintf		5828580	0					
ANR	5828816	ArgumentList	"""%s: unpack failed\\n"""		5828580	1					
ANR	5828817	Argument	"""%s: unpack failed\\n"""		5828580	0					
ANR	5828818	PrimaryExpression	"""%s: unpack failed\\n"""		5828580	0					
ANR	5828819	Argument	__func__		5828580	1					
ANR	5828820	Identifier	__func__		5828580	0					
ANR	5828821	ReturnStatement	return - 1 ;	178:3:3806:3815	5828580	1	True				
ANR	5828822	UnaryOperationExpression	- 1		5828580	0					
ANR	5828823	UnaryOperator	-		5828580	0					
ANR	5828824	PrimaryExpression	1		5828580	1					
ANR	5828825	IfStatement	if ( ! ret )		5828580	7					
ANR	5828826	Condition	! ret	180:6:3827:3830	5828580	0	True				
ANR	5828827	UnaryOperationExpression	! ret		5828580	0					
ANR	5828828	UnaryOperator	!		5828580	0					
ANR	5828829	Identifier	ret		5828580	1					
ANR	5828830	CompoundStatement		39:12:918:918	5828580	1					
ANR	5828831	ExpressionStatement	g -> data [ g -> data_len ] = '\\0'	181:3:3838:3865	5828580	0	True				
ANR	5828832	AssignmentExpression	g -> data [ g -> data_len ] = '\\0'		5828580	0		=			
ANR	5828833	ArrayIndexing	g -> data [ g -> data_len ]		5828580	0					
ANR	5828834	PtrMemberAccess	g -> data		5828580	0					
ANR	5828835	Identifier	g		5828580	0					
ANR	5828836	Identifier	data		5828580	1					
ANR	5828837	PtrMemberAccess	g -> data_len		5828580	1					
ANR	5828838	Identifier	g		5828580	0					
ANR	5828839	Identifier	data_len		5828580	1					
ANR	5828840	PrimaryExpression	'\\0'		5828580	1					
ANR	5828841	IfStatement	if ( g -> server_debug )		5828580	1					
ANR	5828842	Condition	g -> server_debug	182:7:3874:3888	5828580	0	True				
ANR	5828843	PtrMemberAccess	g -> server_debug		5828580	0					
ANR	5828844	Identifier	g		5828580	0					
ANR	5828845	Identifier	server_debug		5828580	1					
ANR	5828846	CompoundStatement		41:24:976:976	5828580	1					
ANR	5828847	ExpressionStatement	"eprintf ( ""getpkt (\\""%s\\"");  %s\\n"" , g -> data , g -> no_ack ? ""[no ack sent]"" : ""[sending ack]"" )"	183:4:3897:3993	5828580	0	True				
ANR	5828848	CallExpression	"eprintf ( ""getpkt (\\""%s\\"");  %s\\n"" , g -> data , g -> no_ack ? ""[no ack sent]"" : ""[sending ack]"" )"		5828580	0					
ANR	5828849	Callee	eprintf		5828580	0					
ANR	5828850	Identifier	eprintf		5828580	0					
ANR	5828851	ArgumentList	"""getpkt (\\""%s\\"");  %s\\n"""		5828580	1					
ANR	5828852	Argument	"""getpkt (\\""%s\\"");  %s\\n"""		5828580	0					
ANR	5828853	PrimaryExpression	"""getpkt (\\""%s\\"");  %s\\n"""		5828580	0					
ANR	5828854	Argument	g -> data		5828580	1					
ANR	5828855	PtrMemberAccess	g -> data		5828580	0					
ANR	5828856	Identifier	g		5828580	0					
ANR	5828857	Identifier	data		5828580	1					
ANR	5828858	Argument	"g -> no_ack ? ""[no ack sent]"" : ""[sending ack]"""		5828580	2					
ANR	5828859	ConditionalExpression	"g -> no_ack ? ""[no ack sent]"" : ""[sending ack]"""		5828580	0					
ANR	5828860	Condition	g -> no_ack		5828580	0					
ANR	5828861	PtrMemberAccess	g -> no_ack		5828580	0					
ANR	5828862	Identifier	g		5828580	0					
ANR	5828863	Identifier	no_ack		5828580	1					
ANR	5828864	PrimaryExpression	"""[no ack sent]"""		5828580	1					
ANR	5828865	PrimaryExpression	"""[sending ack]"""		5828580	2					
ANR	5828866	ReturnStatement	return 0 ;	186:3:4003:4011	5828580	2	True				
ANR	5828867	PrimaryExpression	0		5828580	0					
ANR	5828868	ReturnStatement	return - 1 ;	189:1:4021:4030	5828580	7	True				
ANR	5828869	UnaryOperationExpression	- 1		5828580	0					
ANR	5828870	UnaryOperator	-		5828580	0					
ANR	5828871	PrimaryExpression	1		5828580	1					
ANR	5828872	ReturnType	int		5828580	1					
ANR	5828873	Identifier	read_packet		5828580	2					
ANR	5828874	ParameterList	"libgdbr_t * g , bool vcont"		5828580	3					
ANR	5828875	Parameter	libgdbr_t * g	142:16:2888:2899	5828580	0	True				
ANR	5828876	ParameterType	libgdbr_t *		5828580	0					
ANR	5828877	Identifier	g		5828580	1					
ANR	5828878	Parameter	bool vcont	142:30:2902:2911	5828580	1	True				
ANR	5828879	ParameterType	bool		5828580	0					
ANR	5828880	Identifier	vcont		5828580	1					
ANR	5828881	CFGEntryNode	ENTRY		5828580		True				
ANR	5828882	CFGExitNode	EXIT		5828580		True				
ANR	5828883	Symbol	g -> server_debug		5828580						
ANR	5828884	Symbol	g -> read_len		5828580						
ANR	5828885	Symbol	g -> read_buff		5828580						
ANR	5828886	Symbol	vcont		5828580						
ANR	5828887	Symbol	g -> data_len		5828580						
ANR	5828888	Symbol	& ctx		5828580						
ANR	5828889	Symbol	* g -> data		5828580						
ANR	5828890	Symbol	r_socket_ready		5828580						
ANR	5828891	Symbol	g -> read_max		5828580						
ANR	5828892	Symbol	unpack		5828580						
ANR	5828893	Symbol	ret		5828580						
ANR	5828894	Symbol	* * g		5828580						
ANR	5828895	Symbol	g -> data		5828580						
ANR	5828896	Symbol	ctx		5828580						
ANR	5828897	Symbol	g -> no_ack		5828580						
ANR	5828898	Symbol	g		5828580						
ANR	5828899	Symbol	sz		5828580						
ANR	5828900	Symbol	i		5828580						
ANR	5828901	Symbol	READ_TIMEOUT		5828580						
ANR	5828902	Symbol	r_socket_read		5828580						
ANR	5828903	Symbol	* g		5828580						
ANR	5828904	Symbol	g -> sock		5828580						
ANR	5828905	Symbol	__func__		5828580						
ANR	5828906	Symbol	* g -> data_len		5828580						
ANR	5828907	Symbol	g -> num_retries		5828580						
ANR	5828908	Function	send_packet	192:0:4035:4368							
ANR	5828909	FunctionDef	send_packet (libgdbr_t * g)		5828908	0					
ANR	5828910	CompoundStatement		192:30:4065:4368	5828908	0					
ANR	5828911	IfStatement	if ( ! g )		5828908	0					
ANR	5828912	Condition	! g	193:5:4072:4073	5828908	0	True				
ANR	5828913	UnaryOperationExpression	! g		5828908	0					
ANR	5828914	UnaryOperator	!		5828908	0					
ANR	5828915	Identifier	g		5828908	1					
ANR	5828916	CompoundStatement		2:9:10:10	5828908	1					
ANR	5828917	ExpressionStatement	"eprintf ( ""Initialize libgdbr_t first\\n"" )"	194:2:4080:4120	5828908	0	True				
ANR	5828918	CallExpression	"eprintf ( ""Initialize libgdbr_t first\\n"" )"		5828908	0					
ANR	5828919	Callee	eprintf		5828908	0					
ANR	5828920	Identifier	eprintf		5828908	0					
ANR	5828921	ArgumentList	"""Initialize libgdbr_t first\\n"""		5828908	1					
ANR	5828922	Argument	"""Initialize libgdbr_t first\\n"""		5828908	0					
ANR	5828923	PrimaryExpression	"""Initialize libgdbr_t first\\n"""		5828908	0					
ANR	5828924	ReturnStatement	return - 1 ;	195:2:4124:4133	5828908	1	True				
ANR	5828925	UnaryOperationExpression	- 1		5828908	0					
ANR	5828926	UnaryOperator	-		5828908	0					
ANR	5828927	PrimaryExpression	1		5828908	1					
ANR	5828928	IfStatement	if ( g -> server_debug )		5828908	1					
ANR	5828929	Condition	g -> server_debug	197:5:4143:4157	5828908	0	True				
ANR	5828930	PtrMemberAccess	g -> server_debug		5828908	0					
ANR	5828931	Identifier	g		5828908	0					
ANR	5828932	Identifier	server_debug		5828908	1					
ANR	5828933	CompoundStatement		6:22:94:94	5828908	1					
ANR	5828934	ExpressionStatement	g -> send_buff [ g -> send_len ] = '\\0'	198:2:4164:4196	5828908	0	True				
ANR	5828935	AssignmentExpression	g -> send_buff [ g -> send_len ] = '\\0'		5828908	0		=			
ANR	5828936	ArrayIndexing	g -> send_buff [ g -> send_len ]		5828908	0					
ANR	5828937	PtrMemberAccess	g -> send_buff		5828908	0					
ANR	5828938	Identifier	g		5828908	0					
ANR	5828939	Identifier	send_buff		5828908	1					
ANR	5828940	PtrMemberAccess	g -> send_len		5828908	1					
ANR	5828941	Identifier	g		5828908	0					
ANR	5828942	Identifier	send_len		5828908	1					
ANR	5828943	PrimaryExpression	'\\0'		5828908	1					
ANR	5828944	ExpressionStatement	"eprintf ( ""putpkt (\\""%s\\"");  %s\\n"" , g -> send_buff , g -> no_ack ? ""[noack mode]"" : ""[looking for ack]"" )"	199:2:4200:4302	5828908	1	True				
ANR	5828945	CallExpression	"eprintf ( ""putpkt (\\""%s\\"");  %s\\n"" , g -> send_buff , g -> no_ack ? ""[noack mode]"" : ""[looking for ack]"" )"		5828908	0					
ANR	5828946	Callee	eprintf		5828908	0					
ANR	5828947	Identifier	eprintf		5828908	0					
ANR	5828948	ArgumentList	"""putpkt (\\""%s\\"");  %s\\n"""		5828908	1					
ANR	5828949	Argument	"""putpkt (\\""%s\\"");  %s\\n"""		5828908	0					
ANR	5828950	PrimaryExpression	"""putpkt (\\""%s\\"");  %s\\n"""		5828908	0					
ANR	5828951	Argument	g -> send_buff		5828908	1					
ANR	5828952	PtrMemberAccess	g -> send_buff		5828908	0					
ANR	5828953	Identifier	g		5828908	0					
ANR	5828954	Identifier	send_buff		5828908	1					
ANR	5828955	Argument	"g -> no_ack ? ""[noack mode]"" : ""[looking for ack]"""		5828908	2					
ANR	5828956	ConditionalExpression	"g -> no_ack ? ""[noack mode]"" : ""[looking for ack]"""		5828908	0					
ANR	5828957	Condition	g -> no_ack		5828908	0					
ANR	5828958	PtrMemberAccess	g -> no_ack		5828908	0					
ANR	5828959	Identifier	g		5828908	0					
ANR	5828960	Identifier	no_ack		5828908	1					
ANR	5828961	PrimaryExpression	"""[noack mode]"""		5828908	1					
ANR	5828962	PrimaryExpression	"""[looking for ack]"""		5828908	2					
ANR	5828963	ReturnStatement	"return r_socket_write ( g -> sock , g -> send_buff , g -> send_len ) ;"	202:1:4308:4366	5828908	2	True				
ANR	5828964	CallExpression	"r_socket_write ( g -> sock , g -> send_buff , g -> send_len )"		5828908	0					
ANR	5828965	Callee	r_socket_write		5828908	0					
ANR	5828966	Identifier	r_socket_write		5828908	0					
ANR	5828967	ArgumentList	g -> sock		5828908	1					
ANR	5828968	Argument	g -> sock		5828908	0					
ANR	5828969	PtrMemberAccess	g -> sock		5828908	0					
ANR	5828970	Identifier	g		5828908	0					
ANR	5828971	Identifier	sock		5828908	1					
ANR	5828972	Argument	g -> send_buff		5828908	1					
ANR	5828973	PtrMemberAccess	g -> send_buff		5828908	0					
ANR	5828974	Identifier	g		5828908	0					
ANR	5828975	Identifier	send_buff		5828908	1					
ANR	5828976	Argument	g -> send_len		5828908	2					
ANR	5828977	PtrMemberAccess	g -> send_len		5828908	0					
ANR	5828978	Identifier	g		5828908	0					
ANR	5828979	Identifier	send_len		5828908	1					
ANR	5828980	ReturnType	int		5828908	1					
ANR	5828981	Identifier	send_packet		5828908	2					
ANR	5828982	ParameterList	libgdbr_t * g		5828908	3					
ANR	5828983	Parameter	libgdbr_t * g	192:16:4051:4062	5828908	0	True				
ANR	5828984	ParameterType	libgdbr_t *		5828908	0					
ANR	5828985	Identifier	g		5828908	1					
ANR	5828986	CFGEntryNode	ENTRY		5828908		True				
ANR	5828987	CFGExitNode	EXIT		5828908		True				
ANR	5828988	Symbol	* g		5828908						
ANR	5828989	Symbol	* g -> send_len		5828908						
ANR	5828990	Symbol	g -> send_len		5828908						
ANR	5828991	Symbol	g -> server_debug		5828908						
ANR	5828992	Symbol	r_socket_write		5828908						
ANR	5828993	Symbol	* * g		5828908						
ANR	5828994	Symbol	g -> no_ack		5828908						
ANR	5828995	Symbol	g -> sock		5828908						
ANR	5828996	Symbol	g		5828908						
ANR	5828997	Symbol	* g -> send_buff		5828908						
ANR	5828998	Symbol	g -> send_buff		5828908						
ANR	5828999	Function	pack	205:0:4371:5942							
ANR	5829000	FunctionDef	"pack (libgdbr_t * g , const char * msg)"		5828999	0					
ANR	5829001	CompoundStatement		205:40:4411:5942	5828999	0					
ANR	5829002	IdentifierDeclStatement	int run_len ;	206:1:4414:4425	5828999	0	True				
ANR	5829003	IdentifierDecl	run_len		5828999	0					
ANR	5829004	IdentifierDeclType	int		5828999	0					
ANR	5829005	Identifier	run_len		5828999	1					
ANR	5829006	IdentifierDeclStatement	size_t msg_len ;	207:1:4428:4442	5828999	1	True				
ANR	5829007	IdentifierDecl	msg_len		5828999	0					
ANR	5829008	IdentifierDeclType	size_t		5828999	0					
ANR	5829009	Identifier	msg_len		5828999	1					
ANR	5829010	IdentifierDeclStatement	const char * src ;	208:1:4445:4460	5828999	2	True				
ANR	5829011	IdentifierDecl	* src		5828999	0					
ANR	5829012	IdentifierDeclType	const char *		5828999	0					
ANR	5829013	Identifier	src		5828999	1					
ANR	5829014	IdentifierDeclStatement	char prev ;	209:1:4463:4472	5828999	3	True				
ANR	5829015	IdentifierDecl	prev		5828999	0					
ANR	5829016	IdentifierDeclType	char		5828999	0					
ANR	5829017	Identifier	prev		5828999	1					
ANR	5829018	IfStatement	if ( ! g || ! msg )		5828999	4					
ANR	5829019	Condition	! g || ! msg	210:5:4479:4488	5828999	0	True				
ANR	5829020	OrExpression	! g || ! msg		5828999	0		||			
ANR	5829021	UnaryOperationExpression	! g		5828999	0					
ANR	5829022	UnaryOperator	!		5828999	0					
ANR	5829023	Identifier	g		5828999	1					
ANR	5829024	UnaryOperationExpression	! msg		5828999	1					
ANR	5829025	UnaryOperator	!		5828999	0					
ANR	5829026	Identifier	msg		5828999	1					
ANR	5829027	CompoundStatement		6:17:79:79	5828999	1					
ANR	5829028	ReturnStatement	return - 1 ;	211:2:4495:4504	5828999	0	True				
ANR	5829029	UnaryOperationExpression	- 1		5828999	0					
ANR	5829030	UnaryOperator	-		5828999	0					
ANR	5829031	PrimaryExpression	1		5828999	1					
ANR	5829032	ExpressionStatement	msg_len = strlen ( msg )	213:1:4510:4532	5828999	5	True				
ANR	5829033	AssignmentExpression	msg_len = strlen ( msg )		5828999	0		=			
ANR	5829034	Identifier	msg_len		5828999	0					
ANR	5829035	CallExpression	strlen ( msg )		5828999	1					
ANR	5829036	Callee	strlen		5828999	0					
ANR	5829037	Identifier	strlen		5828999	0					
ANR	5829038	ArgumentList	msg		5828999	1					
ANR	5829039	Argument	msg		5828999	0					
ANR	5829040	Identifier	msg		5828999	0					
ANR	5829041	IfStatement	if ( msg_len > g -> send_max + 5 )		5828999	6					
ANR	5829042	Condition	msg_len > g -> send_max + 5	214:5:4539:4563	5828999	0	True				
ANR	5829043	RelationalExpression	msg_len > g -> send_max + 5		5828999	0		>			
ANR	5829044	Identifier	msg_len		5828999	0					
ANR	5829045	AdditiveExpression	g -> send_max + 5		5828999	1		+			
ANR	5829046	PtrMemberAccess	g -> send_max		5828999	0					
ANR	5829047	Identifier	g		5828999	0					
ANR	5829048	Identifier	send_max		5828999	1					
ANR	5829049	PrimaryExpression	5		5828999	1					
ANR	5829050	CompoundStatement		10:32:154:154	5828999	1					
ANR	5829051	ExpressionStatement	"eprintf ( ""%s: message too long: %s"" , __func__ , msg )"	215:2:4570:4621	5828999	0	True				
ANR	5829052	CallExpression	"eprintf ( ""%s: message too long: %s"" , __func__ , msg )"		5828999	0					
ANR	5829053	Callee	eprintf		5828999	0					
ANR	5829054	Identifier	eprintf		5828999	0					
ANR	5829055	ArgumentList	"""%s: message too long: %s"""		5828999	1					
ANR	5829056	Argument	"""%s: message too long: %s"""		5828999	0					
ANR	5829057	PrimaryExpression	"""%s: message too long: %s"""		5828999	0					
ANR	5829058	Argument	__func__		5828999	1					
ANR	5829059	Identifier	__func__		5828999	0					
ANR	5829060	Argument	msg		5828999	2					
ANR	5829061	Identifier	msg		5828999	0					
ANR	5829062	ReturnStatement	return - 1 ;	216:2:4625:4634	5828999	1	True				
ANR	5829063	UnaryOperationExpression	- 1		5828999	0					
ANR	5829064	UnaryOperator	-		5828999	0					
ANR	5829065	PrimaryExpression	1		5828999	1					
ANR	5829066	IfStatement	if ( ! g -> send_buff )		5828999	7					
ANR	5829067	Condition	! g -> send_buff	218:5:4644:4656	5828999	0	True				
ANR	5829068	UnaryOperationExpression	! g -> send_buff		5828999	0					
ANR	5829069	UnaryOperator	!		5828999	0					
ANR	5829070	PtrMemberAccess	g -> send_buff		5828999	1					
ANR	5829071	Identifier	g		5828999	0					
ANR	5829072	Identifier	send_buff		5828999	1					
ANR	5829073	CompoundStatement		14:20:247:247	5828999	1					
ANR	5829074	ReturnStatement	return - 1 ;	219:2:4663:4672	5828999	0	True				
ANR	5829075	UnaryOperationExpression	- 1		5828999	0					
ANR	5829076	UnaryOperator	-		5828999	0					
ANR	5829077	PrimaryExpression	1		5828999	1					
ANR	5829078	ExpressionStatement	g -> send_buff [ 0 ] = '$'	221:1:4678:4699	5828999	8	True				
ANR	5829079	AssignmentExpression	g -> send_buff [ 0 ] = '$'		5828999	0		=			
ANR	5829080	ArrayIndexing	g -> send_buff [ 0 ]		5828999	0					
ANR	5829081	PtrMemberAccess	g -> send_buff		5828999	0					
ANR	5829082	Identifier	g		5828999	0					
ANR	5829083	Identifier	send_buff		5828999	1					
ANR	5829084	PrimaryExpression	0		5828999	1					
ANR	5829085	PrimaryExpression	'$'		5828999	1					
ANR	5829086	ExpressionStatement	g -> send_len = 1	222:1:4702:4717	5828999	9	True				
ANR	5829087	AssignmentExpression	g -> send_len = 1		5828999	0		=			
ANR	5829088	PtrMemberAccess	g -> send_len		5828999	0					
ANR	5829089	Identifier	g		5828999	0					
ANR	5829090	Identifier	send_len		5828999	1					
ANR	5829091	PrimaryExpression	1		5828999	1					
ANR	5829092	ExpressionStatement	src = msg	223:1:4720:4729	5828999	10	True				
ANR	5829093	AssignmentExpression	src = msg		5828999	0		=			
ANR	5829094	Identifier	src		5828999	0					
ANR	5829095	Identifier	msg		5828999	1					
ANR	5829096	WhileStatement	while ( * src )		5828999	11					
ANR	5829097	Condition	* src	224:8:4739:4742	5828999	0	True				
ANR	5829098	UnaryOperationExpression	* src		5828999	0					
ANR	5829099	UnaryOperator	*		5828999	0					
ANR	5829100	Identifier	src		5828999	1					
ANR	5829101	CompoundStatement		20:14:333:333	5828999	1					
ANR	5829102	IfStatement	if ( * src == '#' || * src == '$' || * src == '}' )		5828999	0					
ANR	5829103	Condition	* src == '#' || * src == '$' || * src == '}'	225:6:4753:4793	5828999	0	True				
ANR	5829104	OrExpression	* src == '#' || * src == '$' || * src == '}'		5828999	0		||			
ANR	5829105	EqualityExpression	* src == '#'		5828999	0		==			
ANR	5829106	UnaryOperationExpression	* src		5828999	0					
ANR	5829107	UnaryOperator	*		5828999	0					
ANR	5829108	Identifier	src		5828999	1					
ANR	5829109	PrimaryExpression	'#'		5828999	1					
ANR	5829110	OrExpression	* src == '$' || * src == '}'		5828999	1		||			
ANR	5829111	EqualityExpression	* src == '$'		5828999	0		==			
ANR	5829112	UnaryOperationExpression	* src		5828999	0					
ANR	5829113	UnaryOperator	*		5828999	0					
ANR	5829114	Identifier	src		5828999	1					
ANR	5829115	PrimaryExpression	'$'		5828999	1					
ANR	5829116	EqualityExpression	* src == '}'		5828999	1		==			
ANR	5829117	UnaryOperationExpression	* src		5828999	0					
ANR	5829118	UnaryOperator	*		5828999	0					
ANR	5829119	Identifier	src		5828999	1					
ANR	5829120	PrimaryExpression	'}'		5828999	1					
ANR	5829121	CompoundStatement		21:49:384:384	5828999	1					
ANR	5829122	ExpressionStatement	msg_len += 1	226:3:4801:4813	5828999	0	True				
ANR	5829123	AssignmentExpression	msg_len += 1		5828999	0		+=			
ANR	5829124	Identifier	msg_len		5828999	0					
ANR	5829125	PrimaryExpression	1		5828999	1					
ANR	5829126	IfStatement	if ( msg_len > g -> send_max + 5 )		5828999	1					
ANR	5829127	Condition	msg_len > g -> send_max + 5	227:7:4822:4846	5828999	0	True				
ANR	5829128	RelationalExpression	msg_len > g -> send_max + 5		5828999	0		>			
ANR	5829129	Identifier	msg_len		5828999	0					
ANR	5829130	AdditiveExpression	g -> send_max + 5		5828999	1		+			
ANR	5829131	PtrMemberAccess	g -> send_max		5828999	0					
ANR	5829132	Identifier	g		5828999	0					
ANR	5829133	Identifier	send_max		5828999	1					
ANR	5829134	PrimaryExpression	5		5828999	1					
ANR	5829135	CompoundStatement		23:34:437:437	5828999	1					
ANR	5829136	ExpressionStatement	"eprintf ( ""%s: message too long: %s"" , __func__ , msg )"	228:4:4855:4906	5828999	0	True				
ANR	5829137	CallExpression	"eprintf ( ""%s: message too long: %s"" , __func__ , msg )"		5828999	0					
ANR	5829138	Callee	eprintf		5828999	0					
ANR	5829139	Identifier	eprintf		5828999	0					
ANR	5829140	ArgumentList	"""%s: message too long: %s"""		5828999	1					
ANR	5829141	Argument	"""%s: message too long: %s"""		5828999	0					
ANR	5829142	PrimaryExpression	"""%s: message too long: %s"""		5828999	0					
ANR	5829143	Argument	__func__		5828999	1					
ANR	5829144	Identifier	__func__		5828999	0					
ANR	5829145	Argument	msg		5828999	2					
ANR	5829146	Identifier	msg		5828999	0					
ANR	5829147	ReturnStatement	return - 1 ;	229:4:4912:4921	5828999	1	True				
ANR	5829148	UnaryOperationExpression	- 1		5828999	0					
ANR	5829149	UnaryOperator	-		5828999	0					
ANR	5829150	PrimaryExpression	1		5828999	1					
ANR	5829151	ExpressionStatement	g -> send_buff [ g -> send_len ++ ] = '}'	231:3:4931:4964	5828999	2	True				
ANR	5829152	AssignmentExpression	g -> send_buff [ g -> send_len ++ ] = '}'		5828999	0		=			
ANR	5829153	ArrayIndexing	g -> send_buff [ g -> send_len ++ ]		5828999	0					
ANR	5829154	PtrMemberAccess	g -> send_buff		5828999	0					
ANR	5829155	Identifier	g		5828999	0					
ANR	5829156	Identifier	send_buff		5828999	1					
ANR	5829157	PostIncDecOperationExpression	g -> send_len ++		5828999	1					
ANR	5829158	PtrMemberAccess	g -> send_len		5828999	0					
ANR	5829159	Identifier	g		5828999	0					
ANR	5829160	Identifier	send_len		5828999	1					
ANR	5829161	IncDec	++		5828999	1					
ANR	5829162	PrimaryExpression	'}'		5828999	1					
ANR	5829163	ExpressionStatement	g -> send_buff [ g -> send_len ++ ] = * src ++ ^ 0x20	232:3:4969:5012	5828999	3	True				
ANR	5829164	AssignmentExpression	g -> send_buff [ g -> send_len ++ ] = * src ++ ^ 0x20		5828999	0		=			
ANR	5829165	ArrayIndexing	g -> send_buff [ g -> send_len ++ ]		5828999	0					
ANR	5829166	PtrMemberAccess	g -> send_buff		5828999	0					
ANR	5829167	Identifier	g		5828999	0					
ANR	5829168	Identifier	send_buff		5828999	1					
ANR	5829169	PostIncDecOperationExpression	g -> send_len ++		5828999	1					
ANR	5829170	PtrMemberAccess	g -> send_len		5828999	0					
ANR	5829171	Identifier	g		5828999	0					
ANR	5829172	Identifier	send_len		5828999	1					
ANR	5829173	IncDec	++		5828999	1					
ANR	5829174	ExclusiveOrExpression	* src ++ ^ 0x20		5828999	1		^			
ANR	5829175	UnaryOperationExpression	* src ++		5828999	0					
ANR	5829176	UnaryOperator	*		5828999	0					
ANR	5829177	PostIncDecOperationExpression	src ++		5828999	1					
ANR	5829178	Identifier	src		5828999	0					
ANR	5829179	IncDec	++		5828999	1					
ANR	5829180	PrimaryExpression	0x20		5828999	1					
ANR	5829181	ContinueStatement	continue ;	233:3:5017:5025	5828999	4	True				
ANR	5829182	ExpressionStatement	g -> send_buff [ g -> send_len ++ ] = * src ++	235:2:5033:5069	5828999	1	True				
ANR	5829183	AssignmentExpression	g -> send_buff [ g -> send_len ++ ] = * src ++		5828999	0		=			
ANR	5829184	ArrayIndexing	g -> send_buff [ g -> send_len ++ ]		5828999	0					
ANR	5829185	PtrMemberAccess	g -> send_buff		5828999	0					
ANR	5829186	Identifier	g		5828999	0					
ANR	5829187	Identifier	send_buff		5828999	1					
ANR	5829188	PostIncDecOperationExpression	g -> send_len ++		5828999	1					
ANR	5829189	PtrMemberAccess	g -> send_len		5828999	0					
ANR	5829190	Identifier	g		5828999	0					
ANR	5829191	Identifier	send_len		5828999	1					
ANR	5829192	IncDec	++		5828999	1					
ANR	5829193	UnaryOperationExpression	* src ++		5828999	1					
ANR	5829194	UnaryOperator	*		5828999	0					
ANR	5829195	PostIncDecOperationExpression	src ++		5828999	1					
ANR	5829196	Identifier	src		5828999	0					
ANR	5829197	IncDec	++		5828999	1					
ANR	5829198	IfStatement	if ( ! g -> is_server )		5828999	2					
ANR	5829199	Condition	! g -> is_server	236:6:5077:5089	5828999	0	True				
ANR	5829200	UnaryOperationExpression	! g -> is_server		5828999	0					
ANR	5829201	UnaryOperator	!		5828999	0					
ANR	5829202	PtrMemberAccess	g -> is_server		5828999	1					
ANR	5829203	Identifier	g		5828999	0					
ANR	5829204	Identifier	is_server		5828999	1					
ANR	5829205	CompoundStatement		32:21:680:680	5828999	1					
ANR	5829206	ContinueStatement	continue ;	237:3:5097:5105	5828999	0	True				
ANR	5829207	ExpressionStatement	prev = * ( src - 1 )	239:2:5113:5130	5828999	3	True				
ANR	5829208	AssignmentExpression	prev = * ( src - 1 )		5828999	0		=			
ANR	5829209	Identifier	prev		5828999	0					
ANR	5829210	UnaryOperationExpression	* ( src - 1 )		5828999	1					
ANR	5829211	UnaryOperator	*		5828999	0					
ANR	5829212	AdditiveExpression	src - 1		5828999	1		-			
ANR	5829213	Identifier	src		5828999	0					
ANR	5829214	PrimaryExpression	1		5828999	1					
ANR	5829215	ExpressionStatement	run_len = 0	240:2:5134:5145	5828999	4	True				
ANR	5829216	AssignmentExpression	run_len = 0		5828999	0		=			
ANR	5829217	Identifier	run_len		5828999	0					
ANR	5829218	PrimaryExpression	0		5828999	1					
ANR	5829219	WhileStatement	while ( src [ run_len ] == prev )		5828999	5					
ANR	5829220	Condition	src [ run_len ] == prev	241:9:5156:5175	5828999	0	True				
ANR	5829221	EqualityExpression	src [ run_len ] == prev		5828999	0		==			
ANR	5829222	ArrayIndexing	src [ run_len ]		5828999	0					
ANR	5829223	Identifier	src		5828999	0					
ANR	5829224	Identifier	run_len		5828999	1					
ANR	5829225	Identifier	prev		5828999	1					
ANR	5829226	CompoundStatement		37:31:766:766	5828999	1					
ANR	5829227	ExpressionStatement	run_len ++	242:3:5183:5192	5828999	0	True				
ANR	5829228	PostIncDecOperationExpression	run_len ++		5828999	0					
ANR	5829229	Identifier	run_len		5828999	0					
ANR	5829230	IncDec	++		5828999	1					
ANR	5829231	IfStatement	if ( run_len < 3 )		5828999	6					
ANR	5829232	Condition	run_len < 3	244:6:5204:5214	5828999	0	True				
ANR	5829233	RelationalExpression	run_len < 3		5828999	0		<			
ANR	5829234	Identifier	run_len		5828999	0					
ANR	5829235	PrimaryExpression	3		5828999	1					
ANR	5829236	CompoundStatement		40:19:805:805	5828999	1					
ANR	5829237	WhileStatement	while ( run_len -- )		5828999	0					
ANR	5829238	Condition	run_len --	245:10:5284:5292	5828999	0	True				
ANR	5829239	PostIncDecOperationExpression	run_len --		5828999	0					
ANR	5829240	Identifier	run_len		5828999	0					
ANR	5829241	IncDec	--		5828999	1					
ANR	5829242	CompoundStatement		41:21:883:883	5828999	1					
ANR	5829243	ExpressionStatement	g -> send_buff [ g -> send_len ++ ] = * src ++	246:4:5301:5337	5828999	0	True				
ANR	5829244	AssignmentExpression	g -> send_buff [ g -> send_len ++ ] = * src ++		5828999	0		=			
ANR	5829245	ArrayIndexing	g -> send_buff [ g -> send_len ++ ]		5828999	0					
ANR	5829246	PtrMemberAccess	g -> send_buff		5828999	0					
ANR	5829247	Identifier	g		5828999	0					
ANR	5829248	Identifier	send_buff		5828999	1					
ANR	5829249	PostIncDecOperationExpression	g -> send_len ++		5828999	1					
ANR	5829250	PtrMemberAccess	g -> send_len		5828999	0					
ANR	5829251	Identifier	g		5828999	0					
ANR	5829252	Identifier	send_len		5828999	1					
ANR	5829253	IncDec	++		5828999	1					
ANR	5829254	UnaryOperationExpression	* src ++		5828999	1					
ANR	5829255	UnaryOperator	*		5828999	0					
ANR	5829256	PostIncDecOperationExpression	src ++		5828999	1					
ANR	5829257	Identifier	src		5828999	0					
ANR	5829258	IncDec	++		5828999	1					
ANR	5829259	ContinueStatement	continue ;	248:3:5347:5355	5828999	1	True				
ANR	5829260	ExpressionStatement	run_len += 29	250:2:5363:5376	5828999	7	True				
ANR	5829261	AssignmentExpression	run_len += 29		5828999	0		+=			
ANR	5829262	Identifier	run_len		5828999	0					
ANR	5829263	PrimaryExpression	29		5828999	1					
ANR	5829264	IfStatement	if ( run_len == 35 || run_len == 36 )		5828999	8					
ANR	5829265	Condition	run_len == 35 || run_len == 36	251:6:5440:5469	5828999	0	True				
ANR	5829266	OrExpression	run_len == 35 || run_len == 36		5828999	0		||			
ANR	5829267	EqualityExpression	run_len == 35		5828999	0		==			
ANR	5829268	Identifier	run_len		5828999	0					
ANR	5829269	PrimaryExpression	35		5828999	1					
ANR	5829270	EqualityExpression	run_len == 36		5828999	1		==			
ANR	5829271	Identifier	run_len		5828999	0					
ANR	5829272	PrimaryExpression	36		5828999	1					
ANR	5829273	CompoundStatement		47:38:1060:1060	5828999	1					
ANR	5829274	ExpressionStatement	run_len = 34	252:3:5502:5514	5828999	0	True				
ANR	5829275	AssignmentExpression	run_len = 34		5828999	0		=			
ANR	5829276	Identifier	run_len		5828999	0					
ANR	5829277	PrimaryExpression	34		5828999	1					
ANR	5829278	ElseStatement	else		5828999	0					
ANR	5829279	IfStatement	if ( run_len > 126 )		5828999	0					
ANR	5829280	Condition	run_len > 126	253:13:5529:5541	5828999	0	True				
ANR	5829281	RelationalExpression	run_len > 126		5828999	0		>			
ANR	5829282	Identifier	run_len		5828999	0					
ANR	5829283	PrimaryExpression	126		5828999	1					
ANR	5829284	CompoundStatement		49:28:1132:1132	5828999	1					
ANR	5829285	ExpressionStatement	run_len = 126	254:3:5588:5601	5828999	0	True				
ANR	5829286	AssignmentExpression	run_len = 126		5828999	0		=			
ANR	5829287	Identifier	run_len		5828999	0					
ANR	5829288	PrimaryExpression	126		5828999	1					
ANR	5829289	ExpressionStatement	g -> send_buff [ g -> send_len ++ ] = '*'	256:2:5609:5642	5828999	9	True				
ANR	5829290	AssignmentExpression	g -> send_buff [ g -> send_len ++ ] = '*'		5828999	0		=			
ANR	5829291	ArrayIndexing	g -> send_buff [ g -> send_len ++ ]		5828999	0					
ANR	5829292	PtrMemberAccess	g -> send_buff		5828999	0					
ANR	5829293	Identifier	g		5828999	0					
ANR	5829294	Identifier	send_buff		5828999	1					
ANR	5829295	PostIncDecOperationExpression	g -> send_len ++		5828999	1					
ANR	5829296	PtrMemberAccess	g -> send_len		5828999	0					
ANR	5829297	Identifier	g		5828999	0					
ANR	5829298	Identifier	send_len		5828999	1					
ANR	5829299	IncDec	++		5828999	1					
ANR	5829300	PrimaryExpression	'*'		5828999	1					
ANR	5829301	ExpressionStatement	g -> send_buff [ g -> send_len ++ ] = run_len	257:2:5646:5683	5828999	10	True				
ANR	5829302	AssignmentExpression	g -> send_buff [ g -> send_len ++ ] = run_len		5828999	0		=			
ANR	5829303	ArrayIndexing	g -> send_buff [ g -> send_len ++ ]		5828999	0					
ANR	5829304	PtrMemberAccess	g -> send_buff		5828999	0					
ANR	5829305	Identifier	g		5828999	0					
ANR	5829306	Identifier	send_buff		5828999	1					
ANR	5829307	PostIncDecOperationExpression	g -> send_len ++		5828999	1					
ANR	5829308	PtrMemberAccess	g -> send_len		5828999	0					
ANR	5829309	Identifier	g		5828999	0					
ANR	5829310	Identifier	send_len		5828999	1					
ANR	5829311	IncDec	++		5828999	1					
ANR	5829312	Identifier	run_len		5828999	1					
ANR	5829313	ExpressionStatement	msg_len -= run_len - 27	258:2:5687:5710	5828999	11	True				
ANR	5829314	AssignmentExpression	msg_len -= run_len - 27		5828999	0		-=			
ANR	5829315	Identifier	msg_len		5828999	0					
ANR	5829316	AdditiveExpression	run_len - 27		5828999	1		-			
ANR	5829317	Identifier	run_len		5828999	0					
ANR	5829318	PrimaryExpression	27		5828999	1					
ANR	5829319	ExpressionStatement	src += run_len - 29	259:2:5759:5778	5828999	12	True				
ANR	5829320	AssignmentExpression	src += run_len - 29		5828999	0		+=			
ANR	5829321	Identifier	src		5828999	0					
ANR	5829322	AdditiveExpression	run_len - 29		5828999	1		-			
ANR	5829323	Identifier	run_len		5828999	0					
ANR	5829324	PrimaryExpression	29		5828999	1					
ANR	5829325	ExpressionStatement	g -> send_buff [ g -> send_len ] = '\\0'	261:1:5784:5816	5828999	12	True				
ANR	5829326	AssignmentExpression	g -> send_buff [ g -> send_len ] = '\\0'		5828999	0		=			
ANR	5829327	ArrayIndexing	g -> send_buff [ g -> send_len ]		5828999	0					
ANR	5829328	PtrMemberAccess	g -> send_buff		5828999	0					
ANR	5829329	Identifier	g		5828999	0					
ANR	5829330	Identifier	send_buff		5828999	1					
ANR	5829331	PtrMemberAccess	g -> send_len		5828999	1					
ANR	5829332	Identifier	g		5828999	0					
ANR	5829333	Identifier	send_len		5828999	1					
ANR	5829334	PrimaryExpression	'\\0'		5828999	1					
ANR	5829335	ExpressionStatement	"snprintf ( g -> send_buff + g -> send_len , 4 , ""#%.2x"" , cmd_checksum ( g -> send_buff + 1 ) )"	262:1:5819:5900	5828999	13	True				
ANR	5829336	CallExpression	"snprintf ( g -> send_buff + g -> send_len , 4 , ""#%.2x"" , cmd_checksum ( g -> send_buff + 1 ) )"		5828999	0					
ANR	5829337	Callee	snprintf		5828999	0					
ANR	5829338	Identifier	snprintf		5828999	0					
ANR	5829339	ArgumentList	g -> send_buff + g -> send_len		5828999	1					
ANR	5829340	Argument	g -> send_buff + g -> send_len		5828999	0					
ANR	5829341	AdditiveExpression	g -> send_buff + g -> send_len		5828999	0		+			
ANR	5829342	PtrMemberAccess	g -> send_buff		5828999	0					
ANR	5829343	Identifier	g		5828999	0					
ANR	5829344	Identifier	send_buff		5828999	1					
ANR	5829345	PtrMemberAccess	g -> send_len		5828999	1					
ANR	5829346	Identifier	g		5828999	0					
ANR	5829347	Identifier	send_len		5828999	1					
ANR	5829348	Argument	4		5828999	1					
ANR	5829349	PrimaryExpression	4		5828999	0					
ANR	5829350	Argument	"""#%.2x"""		5828999	2					
ANR	5829351	PrimaryExpression	"""#%.2x"""		5828999	0					
ANR	5829352	Argument	cmd_checksum ( g -> send_buff + 1 )		5828999	3					
ANR	5829353	CallExpression	cmd_checksum ( g -> send_buff + 1 )		5828999	0					
ANR	5829354	Callee	cmd_checksum		5828999	0					
ANR	5829355	Identifier	cmd_checksum		5828999	0					
ANR	5829356	ArgumentList	g -> send_buff + 1		5828999	1					
ANR	5829357	Argument	g -> send_buff + 1		5828999	0					
ANR	5829358	AdditiveExpression	g -> send_buff + 1		5828999	0		+			
ANR	5829359	PtrMemberAccess	g -> send_buff		5828999	0					
ANR	5829360	Identifier	g		5828999	0					
ANR	5829361	Identifier	send_buff		5828999	1					
ANR	5829362	PrimaryExpression	1		5828999	1					
ANR	5829363	ExpressionStatement	g -> send_len += 3	263:1:5903:5919	5828999	14	True				
ANR	5829364	AssignmentExpression	g -> send_len += 3		5828999	0		+=			
ANR	5829365	PtrMemberAccess	g -> send_len		5828999	0					
ANR	5829366	Identifier	g		5828999	0					
ANR	5829367	Identifier	send_len		5828999	1					
ANR	5829368	PrimaryExpression	3		5828999	1					
ANR	5829369	ReturnStatement	return g -> send_len ;	264:1:5922:5940	5828999	15	True				
ANR	5829370	PtrMemberAccess	g -> send_len		5828999	0					
ANR	5829371	Identifier	g		5828999	0					
ANR	5829372	Identifier	send_len		5828999	1					
ANR	5829373	ReturnType	int		5828999	1					
ANR	5829374	Identifier	pack		5828999	2					
ANR	5829375	ParameterList	"libgdbr_t * g , const char * msg"		5828999	3					
ANR	5829376	Parameter	libgdbr_t * g	205:9:4380:4391	5828999	0	True				
ANR	5829377	ParameterType	libgdbr_t *		5828999	0					
ANR	5829378	Identifier	g		5828999	1					
ANR	5829379	Parameter	const char * msg	205:23:4394:4408	5828999	1	True				
ANR	5829380	ParameterType	const char *		5828999	0					
ANR	5829381	Identifier	msg		5828999	1					
ANR	5829382	CFGEntryNode	ENTRY		5828999		True				
ANR	5829383	CFGExitNode	EXIT		5828999		True				
ANR	5829384	Symbol	msg		5828999						
ANR	5829385	Symbol	g -> send_len		5828999						
ANR	5829386	Symbol	* run_len		5828999						
ANR	5829387	Symbol	* * g		5828999						
ANR	5829388	Symbol	src		5828999						
ANR	5829389	Symbol	g		5828999						
ANR	5829390	Symbol	prev		5828999						
ANR	5829391	Symbol	run_len		5828999						
ANR	5829392	Symbol	msg_len		5828999						
ANR	5829393	Symbol	cmd_checksum		5828999						
ANR	5829394	Symbol	g -> send_buff		5828999						
ANR	5829395	Symbol	* src		5828999						
ANR	5829396	Symbol	strlen		5828999						
ANR	5829397	Symbol	* g		5828999						
ANR	5829398	Symbol	g -> is_server		5828999						
ANR	5829399	Symbol	* g -> send_len		5828999						
ANR	5829400	Symbol	* ( src - 1 )		5828999						
ANR	5829401	Symbol	g -> send_max		5828999						
ANR	5829402	Symbol	__func__		5828999						
ANR	5829403	Symbol	* src ++		5828999						
ANR	5829404	Symbol	* g -> send_buff		5828999						
