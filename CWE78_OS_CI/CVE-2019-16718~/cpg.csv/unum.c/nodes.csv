command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	6379669	File	data/converged/CVE-2019-16718~_radare2/unum.c								
ANR	6379670	DeclStmt									
ANR	6379671	Decl							ut64	"ut64 ( RNum * num , const char * hex )"	r_num_tailff
ANR	6379672	Function	r_srand	14:0:266:377							
ANR	6379673	FunctionDef	r_srand (int seed)		6379672	0					
ANR	6379674	CompoundStatement		14:30:296:377	6379672	0					
ANR	6379675	ExpressionStatement	( void ) seed	17:1:337:347	6379672	0	True				
ANR	6379676	CastExpression	( void ) seed		6379672	0					
ANR	6379677	CastTarget	void		6379672	0					
ANR	6379678	Identifier	seed		6379672	1					
ANR	6379679	ReturnType	static void		6379672	1					
ANR	6379680	Identifier	r_srand		6379672	2					
ANR	6379681	ParameterList	int seed		6379672	3					
ANR	6379682	Parameter	int seed	14:20:286:293	6379672	0	True				
ANR	6379683	ParameterType	int		6379672	0					
ANR	6379684	Identifier	seed		6379672	1					
ANR	6379685	CFGEntryNode	ENTRY		6379672		True				
ANR	6379686	CFGExitNode	EXIT		6379672		True				
ANR	6379687	Symbol	seed		6379672						
ANR	6379688	Function	r_rand	23:0:380:512							
ANR	6379689	FunctionDef	r_rand (int mod)		6379688	0					
ANR	6379690	CompoundStatement		23:27:407:512	6379688	0					
ANR	6379691	ReturnStatement	return ( int ) arc4random_uniform ( mod ) ;	25:1:438:474	6379688	0	True				
ANR	6379692	CastExpression	( int ) arc4random_uniform ( mod )		6379688	0					
ANR	6379693	CastTarget	int		6379688	0					
ANR	6379694	CallExpression	arc4random_uniform ( mod )		6379688	1					
ANR	6379695	Callee	arc4random_uniform		6379688	0					
ANR	6379696	Identifier	arc4random_uniform		6379688	0					
ANR	6379697	ArgumentList	mod		6379688	1					
ANR	6379698	Argument	mod		6379688	0					
ANR	6379699	Identifier	mod		6379688	0					
ANR	6379700	ReturnType	static int		6379688	1					
ANR	6379701	Identifier	r_rand		6379688	2					
ANR	6379702	ParameterList	int mod		6379688	3					
ANR	6379703	Parameter	int mod	23:18:398:404	6379688	0	True				
ANR	6379704	ParameterType	int		6379688	0					
ANR	6379705	Identifier	mod		6379688	1					
ANR	6379706	CFGEntryNode	ENTRY		6379688		True				
ANR	6379707	CFGExitNode	EXIT		6379688		True				
ANR	6379708	Symbol	arc4random_uniform		6379688						
ANR	6379709	Symbol	mod		6379688						
ANR	6379710	Function	r_num_irand	31:0:515:567							
ANR	6379711	FunctionDef	r_num_irand ()		6379710	0					
ANR	6379712	CompoundStatement		31:25:540:567	6379710	0					
ANR	6379713	ExpressionStatement	r_srand ( r_sys_now ( ) )	32:1:543:565	6379710	0	True				
ANR	6379714	CallExpression	r_srand ( r_sys_now ( ) )		6379710	0					
ANR	6379715	Callee	r_srand		6379710	0					
ANR	6379716	Identifier	r_srand		6379710	0					
ANR	6379717	ArgumentList	r_sys_now ( )		6379710	1					
ANR	6379718	Argument	r_sys_now ( )		6379710	0					
ANR	6379719	CallExpression	r_sys_now ( )		6379710	0					
ANR	6379720	Callee	r_sys_now		6379710	0					
ANR	6379721	Identifier	r_sys_now		6379710	0					
ANR	6379722	ArgumentList			6379710	1					
ANR	6379723	ReturnType	R_API void		6379710	1					
ANR	6379724	Identifier	r_num_irand		6379710	2					
ANR	6379725	ParameterList			6379710	3					
ANR	6379726	CFGEntryNode	ENTRY		6379710		True				
ANR	6379727	CFGExitNode	EXIT		6379710		True				
ANR	6379728	Symbol	r_sys_now		6379710						
ANR	6379729	Function	r_num_rand	35:0:570:764							
ANR	6379730	FunctionDef	r_num_rand (int max)		6379729	0					
ANR	6379731	CompoundStatement		35:30:600:764	6379729	0					
ANR	6379732	Statement	static	36:1:603:608	6379729	0	True				
ANR	6379733	IdentifierDeclStatement	bool rand_initialized = false ;	36:8:610:639	6379729	1	True				
ANR	6379734	IdentifierDecl	rand_initialized = false		6379729	0					
ANR	6379735	IdentifierDeclType	bool		6379729	0					
ANR	6379736	Identifier	rand_initialized		6379729	1					
ANR	6379737	AssignmentExpression	rand_initialized = false		6379729	2		=			
ANR	6379738	Identifier	false		6379729	0					
ANR	6379739	Identifier	false		6379729	1					
ANR	6379740	IfStatement	if ( ! rand_initialized )		6379729	2					
ANR	6379741	Condition	! rand_initialized	37:5:646:662	6379729	0	True				
ANR	6379742	UnaryOperationExpression	! rand_initialized		6379729	0					
ANR	6379743	UnaryOperator	!		6379729	0					
ANR	6379744	Identifier	rand_initialized		6379729	1					
ANR	6379745	CompoundStatement		3:24:64:64	6379729	1					
ANR	6379746	ExpressionStatement	r_num_irand ( )	38:2:669:683	6379729	0	True				
ANR	6379747	CallExpression	r_num_irand ( )		6379729	0					
ANR	6379748	Callee	r_num_irand		6379729	0					
ANR	6379749	Identifier	r_num_irand		6379729	0					
ANR	6379750	ArgumentList			6379729	1					
ANR	6379751	ExpressionStatement	rand_initialized = true	39:2:687:710	6379729	1	True				
ANR	6379752	AssignmentExpression	rand_initialized = true		6379729	0		=			
ANR	6379753	Identifier	rand_initialized		6379729	0					
ANR	6379754	Identifier	true		6379729	1					
ANR	6379755	IfStatement	if ( ! max )		6379729	3					
ANR	6379756	Condition	! max	41:5:720:723	6379729	0	True				
ANR	6379757	UnaryOperationExpression	! max		6379729	0					
ANR	6379758	UnaryOperator	!		6379729	0					
ANR	6379759	Identifier	max		6379729	1					
ANR	6379760	CompoundStatement		7:11:125:125	6379729	1					
ANR	6379761	ExpressionStatement	max = 1	42:2:730:737	6379729	0	True				
ANR	6379762	AssignmentExpression	max = 1		6379729	0		=			
ANR	6379763	Identifier	max		6379729	0					
ANR	6379764	PrimaryExpression	1		6379729	1					
ANR	6379765	ReturnStatement	return r_rand ( max ) ;	44:1:743:762	6379729	4	True				
ANR	6379766	CallExpression	r_rand ( max )		6379729	0					
ANR	6379767	Callee	r_rand		6379729	0					
ANR	6379768	Identifier	r_rand		6379729	0					
ANR	6379769	ArgumentList	max		6379729	1					
ANR	6379770	Argument	max		6379729	0					
ANR	6379771	Identifier	max		6379729	0					
ANR	6379772	ReturnType	R_API int		6379729	1					
ANR	6379773	Identifier	r_num_rand		6379729	2					
ANR	6379774	ParameterList	int max		6379729	3					
ANR	6379775	Parameter	int max	35:21:591:597	6379729	0	True				
ANR	6379776	ParameterType	int		6379729	0					
ANR	6379777	Identifier	max		6379729	1					
ANR	6379778	CFGEntryNode	ENTRY		6379729		True				
ANR	6379779	CFGExitNode	EXIT		6379729		True				
ANR	6379780	Symbol	max		6379729						
ANR	6379781	Symbol	rand_initialized		6379729						
ANR	6379782	Symbol	false		6379729						
ANR	6379783	Symbol	true		6379729						
ANR	6379784	Symbol	r_rand		6379729						
ANR	6379785	Function	r_num_minmax_swap	47:0:767:875							
ANR	6379786	FunctionDef	"r_num_minmax_swap (ut64 * a , ut64 * b)"		6379785	0					
ANR	6379787	CompoundStatement		47:47:814:875	6379785	0					
ANR	6379788	IfStatement	if ( * a > * b )		6379785	0					
ANR	6379789	Condition	* a > * b	48:5:821:827	6379785	0	True				
ANR	6379790	RelationalExpression	* a > * b		6379785	0		>			
ANR	6379791	UnaryOperationExpression	* a		6379785	0					
ANR	6379792	UnaryOperator	*		6379785	0					
ANR	6379793	Identifier	a		6379785	1					
ANR	6379794	UnaryOperationExpression	* b		6379785	1					
ANR	6379795	UnaryOperator	*		6379785	0					
ANR	6379796	Identifier	b		6379785	1					
ANR	6379797	CompoundStatement		3:2:19:32	6379785	1					
ANR	6379798	IdentifierDeclStatement	ut64 tmp = * a ;	49:2:834:847	6379785	0	True				
ANR	6379799	IdentifierDecl	tmp = * a		6379785	0					
ANR	6379800	IdentifierDeclType	ut64		6379785	0					
ANR	6379801	Identifier	tmp		6379785	1					
ANR	6379802	AssignmentExpression	tmp = * a		6379785	2		=			
ANR	6379803	Identifier	tmp		6379785	0					
ANR	6379804	UnaryOperationExpression	* a		6379785	1					
ANR	6379805	UnaryOperator	*		6379785	0					
ANR	6379806	Identifier	a		6379785	1					
ANR	6379807	ExpressionStatement	* a = * b	50:2:851:858	6379785	1	True				
ANR	6379808	AssignmentExpression	* a = * b		6379785	0		=			
ANR	6379809	UnaryOperationExpression	* a		6379785	0					
ANR	6379810	UnaryOperator	*		6379785	0					
ANR	6379811	Identifier	a		6379785	1					
ANR	6379812	UnaryOperationExpression	* b		6379785	1					
ANR	6379813	UnaryOperator	*		6379785	0					
ANR	6379814	Identifier	b		6379785	1					
ANR	6379815	ExpressionStatement	* b = tmp	51:2:862:870	6379785	2	True				
ANR	6379816	AssignmentExpression	* b = tmp		6379785	0		=			
ANR	6379817	UnaryOperationExpression	* b		6379785	0					
ANR	6379818	UnaryOperator	*		6379785	0					
ANR	6379819	Identifier	b		6379785	1					
ANR	6379820	Identifier	tmp		6379785	1					
ANR	6379821	ReturnType	R_API void		6379785	1					
ANR	6379822	Identifier	r_num_minmax_swap		6379785	2					
ANR	6379823	ParameterList	"ut64 * a , ut64 * b"		6379785	3					
ANR	6379824	Parameter	ut64 * a	47:29:796:802	6379785	0	True				
ANR	6379825	ParameterType	ut64 *		6379785	0					
ANR	6379826	Identifier	a		6379785	1					
ANR	6379827	Parameter	ut64 * b	47:38:805:811	6379785	1	True				
ANR	6379828	ParameterType	ut64 *		6379785	0					
ANR	6379829	Identifier	b		6379785	1					
ANR	6379830	CFGEntryNode	ENTRY		6379785		True				
ANR	6379831	CFGExitNode	EXIT		6379785		True				
ANR	6379832	Symbol	a		6379785						
ANR	6379833	Symbol	b		6379785						
ANR	6379834	Symbol	tmp		6379785						
ANR	6379835	Symbol	* a		6379785						
ANR	6379836	Symbol	* b		6379785						
ANR	6379837	Function	r_num_minmax_swap_i	55:0:878:986							
ANR	6379838	FunctionDef	"r_num_minmax_swap_i (int * a , int * b)"		6379837	0					
ANR	6379839	CompoundStatement		55:47:925:986	6379837	0					
ANR	6379840	IfStatement	if ( * a > * b )		6379837	0					
ANR	6379841	Condition	* a > * b	56:5:932:938	6379837	0	True				
ANR	6379842	RelationalExpression	* a > * b		6379837	0		>			
ANR	6379843	UnaryOperationExpression	* a		6379837	0					
ANR	6379844	UnaryOperator	*		6379837	0					
ANR	6379845	Identifier	a		6379837	1					
ANR	6379846	UnaryOperationExpression	* b		6379837	1					
ANR	6379847	UnaryOperator	*		6379837	0					
ANR	6379848	Identifier	b		6379837	1					
ANR	6379849	CompoundStatement		3:2:19:32	6379837	1					
ANR	6379850	IdentifierDeclStatement	ut64 tmp = * a ;	57:2:945:958	6379837	0	True				
ANR	6379851	IdentifierDecl	tmp = * a		6379837	0					
ANR	6379852	IdentifierDeclType	ut64		6379837	0					
ANR	6379853	Identifier	tmp		6379837	1					
ANR	6379854	AssignmentExpression	tmp = * a		6379837	2		=			
ANR	6379855	Identifier	tmp		6379837	0					
ANR	6379856	UnaryOperationExpression	* a		6379837	1					
ANR	6379857	UnaryOperator	*		6379837	0					
ANR	6379858	Identifier	a		6379837	1					
ANR	6379859	ExpressionStatement	* a = * b	58:2:962:969	6379837	1	True				
ANR	6379860	AssignmentExpression	* a = * b		6379837	0		=			
ANR	6379861	UnaryOperationExpression	* a		6379837	0					
ANR	6379862	UnaryOperator	*		6379837	0					
ANR	6379863	Identifier	a		6379837	1					
ANR	6379864	UnaryOperationExpression	* b		6379837	1					
ANR	6379865	UnaryOperator	*		6379837	0					
ANR	6379866	Identifier	b		6379837	1					
ANR	6379867	ExpressionStatement	* b = tmp	59:2:973:981	6379837	2	True				
ANR	6379868	AssignmentExpression	* b = tmp		6379837	0		=			
ANR	6379869	UnaryOperationExpression	* b		6379837	0					
ANR	6379870	UnaryOperator	*		6379837	0					
ANR	6379871	Identifier	b		6379837	1					
ANR	6379872	Identifier	tmp		6379837	1					
ANR	6379873	ReturnType	R_API void		6379837	1					
ANR	6379874	Identifier	r_num_minmax_swap_i		6379837	2					
ANR	6379875	ParameterList	"int * a , int * b"		6379837	3					
ANR	6379876	Parameter	int * a	55:31:909:914	6379837	0	True				
ANR	6379877	ParameterType	int *		6379837	0					
ANR	6379878	Identifier	a		6379837	1					
ANR	6379879	Parameter	int * b	55:39:917:922	6379837	1	True				
ANR	6379880	ParameterType	int *		6379837	0					
ANR	6379881	Identifier	b		6379837	1					
ANR	6379882	CFGEntryNode	ENTRY		6379837		True				
ANR	6379883	CFGExitNode	EXIT		6379837		True				
ANR	6379884	Symbol	a		6379837						
ANR	6379885	Symbol	b		6379837						
ANR	6379886	Symbol	tmp		6379837						
ANR	6379887	Symbol	* a		6379837						
ANR	6379888	Symbol	* b		6379837						
ANR	6379889	Function	r_num_new	63:0:989:1220							
ANR	6379890	FunctionDef	"r_num_new (RNumCallback cb , RNumCallback2 cb2 , void * ptr)"		6379889	0					
ANR	6379891	CompoundStatement		63:69:1058:1220	6379889	0					
ANR	6379892	IdentifierDeclStatement	RNum * num = R_NEW0 ( RNum ) ;	64:1:1061:1086	6379889	0	True				
ANR	6379893	IdentifierDecl	* num = R_NEW0 ( RNum )		6379889	0					
ANR	6379894	IdentifierDeclType	RNum *		6379889	0					
ANR	6379895	Identifier	num		6379889	1					
ANR	6379896	AssignmentExpression	* num = R_NEW0 ( RNum )		6379889	2		=			
ANR	6379897	Identifier	num		6379889	0					
ANR	6379898	CallExpression	R_NEW0 ( RNum )		6379889	1					
ANR	6379899	Callee	R_NEW0		6379889	0					
ANR	6379900	Identifier	R_NEW0		6379889	0					
ANR	6379901	ArgumentList	RNum		6379889	1					
ANR	6379902	Argument	RNum		6379889	0					
ANR	6379903	Identifier	RNum		6379889	0					
ANR	6379904	IfStatement	if ( ! num )		6379889	1					
ANR	6379905	Condition	! num	65:5:1093:1096	6379889	0	True				
ANR	6379906	UnaryOperationExpression	! num		6379889	0					
ANR	6379907	UnaryOperator	!		6379889	0					
ANR	6379908	Identifier	num		6379889	1					
ANR	6379909	CompoundStatement		3:11:40:40	6379889	1					
ANR	6379910	ReturnStatement	return NULL ;	66:2:1103:1114	6379889	0	True				
ANR	6379911	Identifier	NULL		6379889	0					
ANR	6379912	Statement	num	68:1:1120:1122	6379889	2	True				
ANR	6379913	Statement	->	68:4:1123:1124	6379889	3	True				
ANR	6379914	Statement	value	68:6:1125:1129	6379889	4	True				
ANR	6379915	Statement	=	68:12:1131:1131	6379889	5	True				
ANR	6379916	Statement	0L	68:14:1133:1134	6379889	6	True				
ANR	6379917	ExpressionStatement	L	68:16:1135:1136	6379889	7	True				
ANR	6379918	Identifier	L		6379889	0					
ANR	6379919	ExpressionStatement	num -> callback = cb	69:1:1139:1157	6379889	8	True				
ANR	6379920	AssignmentExpression	num -> callback = cb		6379889	0		=			
ANR	6379921	PtrMemberAccess	num -> callback		6379889	0					
ANR	6379922	Identifier	num		6379889	0					
ANR	6379923	Identifier	callback		6379889	1					
ANR	6379924	Identifier	cb		6379889	1					
ANR	6379925	ExpressionStatement	num -> cb_from_value = cb2	70:1:1160:1184	6379889	9	True				
ANR	6379926	AssignmentExpression	num -> cb_from_value = cb2		6379889	0		=			
ANR	6379927	PtrMemberAccess	num -> cb_from_value		6379889	0					
ANR	6379928	Identifier	num		6379889	0					
ANR	6379929	Identifier	cb_from_value		6379889	1					
ANR	6379930	Identifier	cb2		6379889	1					
ANR	6379931	ExpressionStatement	num -> userptr = ptr	71:1:1187:1205	6379889	10	True				
ANR	6379932	AssignmentExpression	num -> userptr = ptr		6379889	0		=			
ANR	6379933	PtrMemberAccess	num -> userptr		6379889	0					
ANR	6379934	Identifier	num		6379889	0					
ANR	6379935	Identifier	userptr		6379889	1					
ANR	6379936	Identifier	ptr		6379889	1					
ANR	6379937	ReturnStatement	return num ;	72:1:1208:1218	6379889	11	True				
ANR	6379938	Identifier	num		6379889	0					
ANR	6379939	ReturnType	R_API RNum *		6379889	1					
ANR	6379940	Identifier	r_num_new		6379889	2					
ANR	6379941	ParameterList	"RNumCallback cb , RNumCallback2 cb2 , void * ptr"		6379889	3					
ANR	6379942	Parameter	RNumCallback cb	63:22:1011:1025	6379889	0	True				
ANR	6379943	ParameterType	RNumCallback		6379889	0					
ANR	6379944	Identifier	cb		6379889	1					
ANR	6379945	Parameter	RNumCallback2 cb2	63:39:1028:1044	6379889	1	True				
ANR	6379946	ParameterType	RNumCallback2		6379889	0					
ANR	6379947	Identifier	cb2		6379889	1					
ANR	6379948	Parameter	void * ptr	63:58:1047:1055	6379889	2	True				
ANR	6379949	ParameterType	void *		6379889	0					
ANR	6379950	Identifier	ptr		6379889	1					
ANR	6379951	CFGEntryNode	ENTRY		6379889		True				
ANR	6379952	CFGExitNode	EXIT		6379889		True				
ANR	6379953	Symbol	* num		6379889						
ANR	6379954	Symbol	num -> callback		6379889						
ANR	6379955	Symbol	R_NEW0		6379889						
ANR	6379956	Symbol	cb2		6379889						
ANR	6379957	Symbol	RNum		6379889						
ANR	6379958	Symbol	NULL		6379889						
ANR	6379959	Symbol	num		6379889						
ANR	6379960	Symbol	num -> cb_from_value		6379889						
ANR	6379961	Symbol	num -> userptr		6379889						
ANR	6379962	Symbol	cb		6379889						
ANR	6379963	Symbol	ptr		6379889						
ANR	6379964	Function	r_num_free	75:0:1223:1273							
ANR	6379965	FunctionDef	r_num_free (RNum * num)		6379964	0					
ANR	6379966	CompoundStatement		75:33:1256:1273	6379964	0					
ANR	6379967	ExpressionStatement	R_FREE ( num )	76:1:1259:1271	6379964	0	True				
ANR	6379968	CallExpression	R_FREE ( num )		6379964	0					
ANR	6379969	Callee	R_FREE		6379964	0					
ANR	6379970	Identifier	R_FREE		6379964	0					
ANR	6379971	ArgumentList	num		6379964	1					
ANR	6379972	Argument	num		6379964	0					
ANR	6379973	Identifier	num		6379964	0					
ANR	6379974	ReturnType	R_API void		6379964	1					
ANR	6379975	Identifier	r_num_free		6379964	2					
ANR	6379976	ParameterList	RNum * num		6379964	3					
ANR	6379977	Parameter	RNum * num	75:22:1245:1253	6379964	0	True				
ANR	6379978	ParameterType	RNum *		6379964	0					
ANR	6379979	Identifier	num		6379964	1					
ANR	6379980	CFGEntryNode	ENTRY		6379964		True				
ANR	6379981	CFGExitNode	EXIT		6379964		True				
ANR	6379982	Symbol	num		6379964						
ANR	6379983	Function	r_num_units	96:0:1759:2427							
ANR	6379984	FunctionDef	"r_num_units (char * buf , size_t len , ut64 num)"		6379983	0					
ANR	6379985	CompoundStatement		96:57:1816:2427	6379983	0					
ANR	6379986	IdentifierDeclStatement	long double fnum ;	97:1:1819:1835	6379983	0	True				
ANR	6379987	IdentifierDecl	fnum		6379983	0					
ANR	6379988	IdentifierDeclType	long double		6379983	0					
ANR	6379989	Identifier	fnum		6379983	1					
ANR	6379990	IdentifierDeclStatement	char unit ;	98:1:1838:1847	6379983	1	True				
ANR	6379991	IdentifierDecl	unit		6379983	0					
ANR	6379992	IdentifierDeclType	char		6379983	0					
ANR	6379993	Identifier	unit		6379983	1					
ANR	6379994	IdentifierDeclStatement	const char * fmt_str ;	99:1:1850:1869	6379983	2	True				
ANR	6379995	IdentifierDecl	* fmt_str		6379983	0					
ANR	6379996	IdentifierDeclType	const char *		6379983	0					
ANR	6379997	Identifier	fmt_str		6379983	1					
ANR	6379998	IfStatement	if ( ! buf )		6379983	3					
ANR	6379999	Condition	! buf	100:5:1876:1879	6379983	0	True				
ANR	6380000	UnaryOperationExpression	! buf		6379983	0					
ANR	6380001	UnaryOperator	!		6379983	0					
ANR	6380002	Identifier	buf		6379983	1					
ANR	6380003	CompoundStatement		5:11:65:65	6379983	1					
ANR	6380004	ExpressionStatement	buf = malloc ( len + 1 )	101:2:1886:1908	6379983	0	True				
ANR	6380005	AssignmentExpression	buf = malloc ( len + 1 )		6379983	0		=			
ANR	6380006	Identifier	buf		6379983	0					
ANR	6380007	CallExpression	malloc ( len + 1 )		6379983	1					
ANR	6380008	Callee	malloc		6379983	0					
ANR	6380009	Identifier	malloc		6379983	0					
ANR	6380010	ArgumentList	len + 1		6379983	1					
ANR	6380011	Argument	len + 1		6379983	0					
ANR	6380012	AdditiveExpression	len + 1		6379983	0		+			
ANR	6380013	Identifier	len		6379983	0					
ANR	6380014	PrimaryExpression	1		6379983	1					
ANR	6380015	IfStatement	if ( ! buf )		6379983	1					
ANR	6380016	Condition	! buf	102:6:1916:1919	6379983	0	True				
ANR	6380017	UnaryOperationExpression	! buf		6379983	0					
ANR	6380018	UnaryOperator	!		6379983	0					
ANR	6380019	Identifier	buf		6379983	1					
ANR	6380020	CompoundStatement		7:12:105:105	6379983	1					
ANR	6380021	ReturnStatement	return NULL ;	103:3:1927:1938	6379983	0	True				
ANR	6380022	Identifier	NULL		6379983	0					
ANR	6380023	ExpressionStatement	fnum = num	106:1:1948:1958	6379983	4	True				
ANR	6380024	AssignmentExpression	fnum = num		6379983	0		=			
ANR	6380025	Identifier	fnum		6379983	0					
ANR	6380026	Identifier	num		6379983	1					
ANR	6380027	IfStatement	if ( num >= EB )		6379983	5					
ANR	6380028	Condition	num >= EB	107:5:1965:1973	6379983	0	True				
ANR	6380029	RelationalExpression	num >= EB		6379983	0		>=			
ANR	6380030	Identifier	num		6379983	0					
ANR	6380031	Identifier	EB		6379983	1					
ANR	6380032	CompoundStatement		12:16:159:159	6379983	1					
ANR	6380033	ExpressionStatement	unit = 'E'	107:18:1978:1988	6379983	0	True				
ANR	6380034	AssignmentExpression	unit = 'E'		6379983	0		=			
ANR	6380035	Identifier	unit		6379983	0					
ANR	6380036	PrimaryExpression	'E'		6379983	1					
ANR	6380037	ExpressionStatement	fnum /= EB	107:30:1990:2000	6379983	1	True				
ANR	6380038	AssignmentExpression	fnum /= EB		6379983	0		/=			
ANR	6380039	Identifier	fnum		6379983	0					
ANR	6380040	Identifier	EB		6379983	1					
ANR	6380041	ElseStatement	else		6379983	0					
ANR	6380042	IfStatement	if ( num >= PB )		6379983	0					
ANR	6380043	Condition	num >= PB	108:5:2014:2022	6379983	0	True				
ANR	6380044	RelationalExpression	num >= PB		6379983	0		>=			
ANR	6380045	Identifier	num		6379983	0					
ANR	6380046	Identifier	PB		6379983	1					
ANR	6380047	CompoundStatement		13:16:208:208	6379983	1					
ANR	6380048	ExpressionStatement	unit = 'P'	108:18:2027:2037	6379983	0	True				
ANR	6380049	AssignmentExpression	unit = 'P'		6379983	0		=			
ANR	6380050	Identifier	unit		6379983	0					
ANR	6380051	PrimaryExpression	'P'		6379983	1					
ANR	6380052	ExpressionStatement	fnum /= PB	108:30:2039:2049	6379983	1	True				
ANR	6380053	AssignmentExpression	fnum /= PB		6379983	0		/=			
ANR	6380054	Identifier	fnum		6379983	0					
ANR	6380055	Identifier	PB		6379983	1					
ANR	6380056	ElseStatement	else		6379983	0					
ANR	6380057	IfStatement	if ( num >= TB )		6379983	0					
ANR	6380058	Condition	num >= TB	109:5:2063:2071	6379983	0	True				
ANR	6380059	RelationalExpression	num >= TB		6379983	0		>=			
ANR	6380060	Identifier	num		6379983	0					
ANR	6380061	Identifier	TB		6379983	1					
ANR	6380062	CompoundStatement		14:16:257:257	6379983	1					
ANR	6380063	ExpressionStatement	unit = 'T'	109:18:2076:2086	6379983	0	True				
ANR	6380064	AssignmentExpression	unit = 'T'		6379983	0		=			
ANR	6380065	Identifier	unit		6379983	0					
ANR	6380066	PrimaryExpression	'T'		6379983	1					
ANR	6380067	ExpressionStatement	fnum /= TB	109:30:2088:2098	6379983	1	True				
ANR	6380068	AssignmentExpression	fnum /= TB		6379983	0		/=			
ANR	6380069	Identifier	fnum		6379983	0					
ANR	6380070	Identifier	TB		6379983	1					
ANR	6380071	ElseStatement	else		6379983	0					
ANR	6380072	IfStatement	if ( num >= GB )		6379983	0					
ANR	6380073	Condition	num >= GB	110:5:2112:2120	6379983	0	True				
ANR	6380074	RelationalExpression	num >= GB		6379983	0		>=			
ANR	6380075	Identifier	num		6379983	0					
ANR	6380076	Identifier	GB		6379983	1					
ANR	6380077	CompoundStatement		15:16:306:306	6379983	1					
ANR	6380078	ExpressionStatement	unit = 'G'	110:18:2125:2135	6379983	0	True				
ANR	6380079	AssignmentExpression	unit = 'G'		6379983	0		=			
ANR	6380080	Identifier	unit		6379983	0					
ANR	6380081	PrimaryExpression	'G'		6379983	1					
ANR	6380082	ExpressionStatement	fnum /= GB	110:30:2137:2147	6379983	1	True				
ANR	6380083	AssignmentExpression	fnum /= GB		6379983	0		/=			
ANR	6380084	Identifier	fnum		6379983	0					
ANR	6380085	Identifier	GB		6379983	1					
ANR	6380086	ElseStatement	else		6379983	0					
ANR	6380087	IfStatement	if ( num >= MB )		6379983	0					
ANR	6380088	Condition	num >= MB	111:5:2161:2169	6379983	0	True				
ANR	6380089	RelationalExpression	num >= MB		6379983	0		>=			
ANR	6380090	Identifier	num		6379983	0					
ANR	6380091	Identifier	MB		6379983	1					
ANR	6380092	CompoundStatement		16:16:355:355	6379983	1					
ANR	6380093	ExpressionStatement	unit = 'M'	111:18:2174:2184	6379983	0	True				
ANR	6380094	AssignmentExpression	unit = 'M'		6379983	0		=			
ANR	6380095	Identifier	unit		6379983	0					
ANR	6380096	PrimaryExpression	'M'		6379983	1					
ANR	6380097	ExpressionStatement	fnum /= MB	111:30:2186:2196	6379983	1	True				
ANR	6380098	AssignmentExpression	fnum /= MB		6379983	0		/=			
ANR	6380099	Identifier	fnum		6379983	0					
ANR	6380100	Identifier	MB		6379983	1					
ANR	6380101	ElseStatement	else		6379983	0					
ANR	6380102	IfStatement	if ( num >= KB )		6379983	0					
ANR	6380103	Condition	num >= KB	112:5:2210:2218	6379983	0	True				
ANR	6380104	RelationalExpression	num >= KB		6379983	0		>=			
ANR	6380105	Identifier	num		6379983	0					
ANR	6380106	Identifier	KB		6379983	1					
ANR	6380107	CompoundStatement		17:16:404:404	6379983	1					
ANR	6380108	ExpressionStatement	unit = 'K'	112:18:2223:2233	6379983	0	True				
ANR	6380109	AssignmentExpression	unit = 'K'		6379983	0		=			
ANR	6380110	Identifier	unit		6379983	0					
ANR	6380111	PrimaryExpression	'K'		6379983	1					
ANR	6380112	ExpressionStatement	fnum /= KB	112:30:2235:2245	6379983	1	True				
ANR	6380113	AssignmentExpression	fnum /= KB		6379983	0		/=			
ANR	6380114	Identifier	fnum		6379983	0					
ANR	6380115	Identifier	KB		6379983	1					
ANR	6380116	ElseStatement	else		6379983	0					
ANR	6380117	CompoundStatement		17:49:437:437	6379983	0					
ANR	6380118	ExpressionStatement	unit = '\\0'	113:2:2258:2269	6379983	0	True				
ANR	6380119	AssignmentExpression	unit = '\\0'		6379983	0		=			
ANR	6380120	Identifier	unit		6379983	0					
ANR	6380121	PrimaryExpression	'\\0'		6379983	1					
ANR	6380122	Statement	fmt_str	115:1:2275:2281	6379983	6	True				
ANR	6380123	Statement	=	115:9:2283:2283	6379983	7	True				
ANR	6380124	Statement	(	115:11:2285:2285	6379983	8	True				
ANR	6380125	Statement	(	115:12:2286:2286	6379983	9	True				
ANR	6380126	Statement	double	115:13:2287:2292	6379983	10	True				
ANR	6380127	Statement	)	115:19:2293:2293	6379983	11	True				
ANR	6380128	Statement	ceill	115:20:2294:2298	6379983	12	True				
ANR	6380129	Statement	(	115:26:2300:2300	6379983	13	True				
ANR	6380130	Statement	fnum	115:27:2301:2304	6379983	14	True				
ANR	6380131	Statement	)	115:31:2305:2305	6379983	15	True				
ANR	6380132	Statement	==	115:33:2307:2308	6379983	16	True				
ANR	6380133	Statement	(	115:36:2310:2310	6379983	17	True				
ANR	6380134	Statement	double	115:37:2311:2316	6379983	18	True				
ANR	6380135	Statement	)	115:43:2317:2317	6379983	19	True				
ANR	6380136	Statement	fnum	115:44:2318:2321	6379983	20	True				
ANR	6380137	Statement	)	115:48:2322:2322	6379983	21	True				
ANR	6380138	Statement	?	116:2:2326:2326	6379983	22	True				
ANR	6380139	Statement	"""%.0"""	116:4:2328:2332	6379983	23	True				
ANR	6380140	Statement	LDBLFMT	116:10:2334:2340	6379983	24	True				
ANR	6380141	Statement	"""%c"""	116:18:2342:2345	6379983	25	True				
ANR	6380142	Statement	:	117:2:2349:2349	6379983	26	True				
ANR	6380143	Statement	"""%.1"""	117:4:2351:2355	6379983	27	True				
ANR	6380144	Statement	LDBLFMT	117:10:2357:2363	6379983	28	True				
ANR	6380145	ExpressionStatement	"""%c"""	117:18:2365:2369	6379983	29	True				
ANR	6380146	PrimaryExpression	"""%c"""		6379983	0					
ANR	6380147	ExpressionStatement	"snprintf ( buf , len , fmt_str , fnum , unit )"	118:1:2372:2412	6379983	30	True				
ANR	6380148	CallExpression	"snprintf ( buf , len , fmt_str , fnum , unit )"		6379983	0					
ANR	6380149	Callee	snprintf		6379983	0					
ANR	6380150	Identifier	snprintf		6379983	0					
ANR	6380151	ArgumentList	buf		6379983	1					
ANR	6380152	Argument	buf		6379983	0					
ANR	6380153	Identifier	buf		6379983	0					
ANR	6380154	Argument	len		6379983	1					
ANR	6380155	Identifier	len		6379983	0					
ANR	6380156	Argument	fmt_str		6379983	2					
ANR	6380157	Identifier	fmt_str		6379983	0					
ANR	6380158	Argument	fnum		6379983	3					
ANR	6380159	Identifier	fnum		6379983	0					
ANR	6380160	Argument	unit		6379983	4					
ANR	6380161	Identifier	unit		6379983	0					
ANR	6380162	ReturnStatement	return buf ;	119:1:2415:2425	6379983	31	True				
ANR	6380163	Identifier	buf		6379983	0					
ANR	6380164	ReturnType	R_API char *		6379983	1					
ANR	6380165	Identifier	r_num_units		6379983	2					
ANR	6380166	ParameterList	"char * buf , size_t len , ut64 num"		6379983	3					
ANR	6380167	Parameter	char * buf	96:24:1783:1791	6379983	0	True				
ANR	6380168	ParameterType	char *		6379983	0					
ANR	6380169	Identifier	buf		6379983	1					
ANR	6380170	Parameter	size_t len	96:35:1794:1803	6379983	1	True				
ANR	6380171	ParameterType	size_t		6379983	0					
ANR	6380172	Identifier	len		6379983	1					
ANR	6380173	Parameter	ut64 num	96:47:1806:1813	6379983	2	True				
ANR	6380174	ParameterType	ut64		6379983	0					
ANR	6380175	Identifier	num		6379983	1					
ANR	6380176	CFGEntryNode	ENTRY		6379983		True				
ANR	6380177	CFGExitNode	EXIT		6379983		True				
ANR	6380178	Symbol	malloc		6379983						
ANR	6380179	Symbol	NULL		6379983						
ANR	6380180	Symbol	num		6379983						
ANR	6380181	Symbol	TB		6379983						
ANR	6380182	Symbol	fnum		6379983						
ANR	6380183	Symbol	buf		6379983						
ANR	6380184	Symbol	unit		6379983						
ANR	6380185	Symbol	PB		6379983						
ANR	6380186	Symbol	len		6379983						
ANR	6380187	Symbol	fmt_str		6379983						
ANR	6380188	Symbol	MB		6379983						
ANR	6380189	Symbol	KB		6379983						
ANR	6380190	Symbol	GB		6379983						
ANR	6380191	Symbol	EB		6379983						
ANR	6380192	Function	r_num_get_name	122:6:2436:2667							
ANR	6380193	FunctionDef	"r_num_get_name (RNum * num , ut64 n)"		6380192	0					
ANR	6380194	CompoundStatement		122:52:2482:2667	6380192	0					
ANR	6380195	IfStatement	if ( num -> cb_from_value )		6380192	0					
ANR	6380196	Condition	num -> cb_from_value	123:5:2489:2506	6380192	0	True				
ANR	6380197	PtrMemberAccess	num -> cb_from_value		6380192	0					
ANR	6380198	Identifier	num		6380192	0					
ANR	6380199	Identifier	cb_from_value		6380192	1					
ANR	6380200	CompoundStatement		4:2:44:94	6380192	1					
ANR	6380201	IdentifierDeclStatement	int ok = 0 ;	124:2:2513:2523	6380192	0	True				
ANR	6380202	IdentifierDecl	ok = 0		6380192	0					
ANR	6380203	IdentifierDeclType	int		6380192	0					
ANR	6380204	Identifier	ok		6380192	1					
ANR	6380205	AssignmentExpression	ok = 0		6380192	2		=			
ANR	6380206	Identifier	ok		6380192	0					
ANR	6380207	PrimaryExpression	0		6380192	1					
ANR	6380208	IdentifierDeclStatement	"const char * msg = num -> cb_from_value ( num , n , & ok ) ;"	125:2:2527:2577	6380192	1	True				
ANR	6380209	IdentifierDecl	"* msg = num -> cb_from_value ( num , n , & ok )"		6380192	0					
ANR	6380210	IdentifierDeclType	const char *		6380192	0					
ANR	6380211	Identifier	msg		6380192	1					
ANR	6380212	AssignmentExpression	"* msg = num -> cb_from_value ( num , n , & ok )"		6380192	2		=			
ANR	6380213	Identifier	msg		6380192	0					
ANR	6380214	CallExpression	"num -> cb_from_value ( num , n , & ok )"		6380192	1					
ANR	6380215	Callee	num -> cb_from_value		6380192	0					
ANR	6380216	PtrMemberAccess	num -> cb_from_value		6380192	0					
ANR	6380217	Identifier	num		6380192	0					
ANR	6380218	Identifier	cb_from_value		6380192	1					
ANR	6380219	ArgumentList	num		6380192	1					
ANR	6380220	Argument	num		6380192	0					
ANR	6380221	Identifier	num		6380192	0					
ANR	6380222	Argument	n		6380192	1					
ANR	6380223	Identifier	n		6380192	0					
ANR	6380224	Argument	& ok		6380192	2					
ANR	6380225	UnaryOperationExpression	& ok		6380192	0					
ANR	6380226	UnaryOperator	&		6380192	0					
ANR	6380227	Identifier	ok		6380192	1					
ANR	6380228	IfStatement	if ( msg && * msg )		6380192	2					
ANR	6380229	Condition	msg && * msg	126:6:2585:2595	6380192	0	True				
ANR	6380230	AndExpression	msg && * msg		6380192	0		&&			
ANR	6380231	Identifier	msg		6380192	0					
ANR	6380232	UnaryOperationExpression	* msg		6380192	1					
ANR	6380233	UnaryOperator	*		6380192	0					
ANR	6380234	Identifier	msg		6380192	1					
ANR	6380235	CompoundStatement		5:19:115:115	6380192	1					
ANR	6380236	ReturnStatement	return msg ;	127:3:2603:2613	6380192	0	True				
ANR	6380237	Identifier	msg		6380192	0					
ANR	6380238	IfStatement	if ( ok )		6380192	3					
ANR	6380239	Condition	ok	129:6:2625:2626	6380192	0	True				
ANR	6380240	Identifier	ok		6380192	0					
ANR	6380241	CompoundStatement		8:10:146:146	6380192	1					
ANR	6380242	ReturnStatement	return msg ;	130:3:2634:2644	6380192	0	True				
ANR	6380243	Identifier	msg		6380192	0					
ANR	6380244	ReturnStatement	return NULL ;	133:1:2654:2665	6380192	1	True				
ANR	6380245	Identifier	NULL		6380192	0					
ANR	6380246	ReturnType	const char *		6380192	1					
ANR	6380247	Identifier	r_num_get_name		6380192	2					
ANR	6380248	ParameterList	"RNum * num , ut64 n"		6380192	3					
ANR	6380249	Parameter	RNum * num	122:33:2463:2471	6380192	0	True				
ANR	6380250	ParameterType	RNum *		6380192	0					
ANR	6380251	Identifier	num		6380192	1					
ANR	6380252	Parameter	ut64 n	122:44:2474:2479	6380192	1	True				
ANR	6380253	ParameterType	ut64		6380192	0					
ANR	6380254	Identifier	n		6380192	1					
ANR	6380255	CFGEntryNode	ENTRY		6380192		True				
ANR	6380256	CFGExitNode	EXIT		6380192		True				
ANR	6380257	Symbol	* num		6380192						
ANR	6380258	Symbol	msg		6380192						
ANR	6380259	Symbol	NULL		6380192						
ANR	6380260	Symbol	num		6380192						
ANR	6380261	Symbol	& ok		6380192						
ANR	6380262	Symbol	num -> cb_from_value		6380192						
ANR	6380263	Symbol	* msg		6380192						
ANR	6380264	Symbol	ok		6380192						
ANR	6380265	Symbol	n		6380192						
ANR	6380266	Function	error	136:0:2670:2800							
ANR	6380267	FunctionDef	"error (RNum * num , const char * err_str)"		6380266	0					
ANR	6380268	CompoundStatement		136:50:2720:2800	6380266	0					
ANR	6380269	IfStatement	if ( num )		6380266	0					
ANR	6380270	Condition	num	137:5:2727:2729	6380266	0	True				
ANR	6380271	Identifier	num		6380266	0					
ANR	6380272	CompoundStatement		2:10:11:11	6380266	1					
ANR	6380273	ExpressionStatement	num -> nc . errors ++	138:2:2736:2752	6380266	0	True				
ANR	6380274	PostIncDecOperationExpression	num -> nc . errors ++		6380266	0					
ANR	6380275	MemberAccess	num -> nc . errors		6380266	0					
ANR	6380276	PtrMemberAccess	num -> nc		6380266	0					
ANR	6380277	Identifier	num		6380266	0					
ANR	6380278	Identifier	nc		6380266	1					
ANR	6380279	Identifier	errors		6380266	1					
ANR	6380280	IncDec	++		6380266	1					
ANR	6380281	ExpressionStatement	num -> nc . calc_err = err_str	140:2:2762:2788	6380266	1	True				
ANR	6380282	AssignmentExpression	num -> nc . calc_err = err_str		6380266	0		=			
ANR	6380283	MemberAccess	num -> nc . calc_err		6380266	0					
ANR	6380284	PtrMemberAccess	num -> nc		6380266	0					
ANR	6380285	Identifier	num		6380266	0					
ANR	6380286	Identifier	nc		6380266	1					
ANR	6380287	Identifier	calc_err		6380266	1					
ANR	6380288	Identifier	err_str		6380266	1					
ANR	6380289	ReturnType	static void		6380266	1					
ANR	6380290	Identifier	error		6380266	2					
ANR	6380291	ParameterList	"RNum * num , const char * err_str"		6380266	3					
ANR	6380292	Parameter	RNum * num	136:18:2688:2696	6380266	0	True				
ANR	6380293	ParameterType	RNum *		6380266	0					
ANR	6380294	Identifier	num		6380266	1					
ANR	6380295	Parameter	const char * err_str	136:29:2699:2717	6380266	1	True				
ANR	6380296	ParameterType	const char *		6380266	0					
ANR	6380297	Identifier	err_str		6380266	1					
ANR	6380298	CFGEntryNode	ENTRY		6380266		True				
ANR	6380299	CFGExitNode	EXIT		6380266		True				
ANR	6380300	Symbol	num -> nc . errors		6380266						
ANR	6380301	Symbol	num -> nc		6380266						
ANR	6380302	Symbol	* num		6380266						
ANR	6380303	Symbol	err_str		6380266						
ANR	6380304	Symbol	num -> nc . calc_err		6380266						
ANR	6380305	Symbol	num		6380266						
ANR	6380306	Function	r_num_get	147:0:2864:8197							
ANR	6380307	FunctionDef	"r_num_get (RNum * num , const char * str)"		6380306	0					
ANR	6380308	CompoundStatement		147:49:2913:8197	6380306	0					
ANR	6380309	IdentifierDeclStatement	"int i , j , ok ;"	148:1:2916:2928	6380306	0	True				
ANR	6380310	IdentifierDecl	i		6380306	0					
ANR	6380311	IdentifierDeclType	int		6380306	0					
ANR	6380312	Identifier	i		6380306	1					
ANR	6380313	IdentifierDecl	j		6380306	1					
ANR	6380314	IdentifierDeclType	int		6380306	0					
ANR	6380315	Identifier	j		6380306	1					
ANR	6380316	IdentifierDecl	ok		6380306	2					
ANR	6380317	IdentifierDeclType	int		6380306	0					
ANR	6380318	Identifier	ok		6380306	1					
ANR	6380319	IdentifierDeclStatement	"char lch , len ;"	149:1:2931:2944	6380306	1	True				
ANR	6380320	IdentifierDecl	lch		6380306	0					
ANR	6380321	IdentifierDeclType	char		6380306	0					
ANR	6380322	Identifier	lch		6380306	1					
ANR	6380323	IdentifierDecl	len		6380306	1					
ANR	6380324	IdentifierDeclType	char		6380306	0					
ANR	6380325	Identifier	len		6380306	1					
ANR	6380326	Statement	ut64	150:1:2947:2950	6380306	2	True				
ANR	6380327	Statement	ret	150:6:2952:2954	6380306	3	True				
ANR	6380328	Statement	=	150:10:2956:2956	6380306	4	True				
ANR	6380329	Statement	0L	150:12:2958:2959	6380306	5	True				
ANR	6380330	ExpressionStatement	L	150:14:2960:2961	6380306	6	True				
ANR	6380331	Identifier	L		6380306	0					
ANR	6380332	IdentifierDeclStatement	"ut32 s , a ;"	151:1:2964:2973	6380306	7	True				
ANR	6380333	IdentifierDecl	s		6380306	0					
ANR	6380334	IdentifierDeclType	ut32		6380306	0					
ANR	6380335	Identifier	s		6380306	1					
ANR	6380336	IdentifierDecl	a		6380306	1					
ANR	6380337	IdentifierDeclType	ut32		6380306	0					
ANR	6380338	Identifier	a		6380306	1					
ANR	6380339	IfStatement	if ( num && ! num -> nc . under_calc )		6380306	8					
ANR	6380340	Condition	num && ! num -> nc . under_calc	153:5:2981:3006	6380306	0	True				
ANR	6380341	AndExpression	num && ! num -> nc . under_calc		6380306	0		&&			
ANR	6380342	Identifier	num		6380306	0					
ANR	6380343	UnaryOperationExpression	! num -> nc . under_calc		6380306	1					
ANR	6380344	UnaryOperator	!		6380306	0					
ANR	6380345	MemberAccess	num -> nc . under_calc		6380306	1					
ANR	6380346	PtrMemberAccess	num -> nc		6380306	0					
ANR	6380347	Identifier	num		6380306	0					
ANR	6380348	Identifier	nc		6380306	1					
ANR	6380349	Identifier	under_calc		6380306	1					
ANR	6380350	CompoundStatement		7:33:95:95	6380306	1					
ANR	6380351	ExpressionStatement	num -> nc . errors = 0	154:2:3013:3031	6380306	0	True				
ANR	6380352	AssignmentExpression	num -> nc . errors = 0		6380306	0		=			
ANR	6380353	MemberAccess	num -> nc . errors		6380306	0					
ANR	6380354	PtrMemberAccess	num -> nc		6380306	0					
ANR	6380355	Identifier	num		6380306	0					
ANR	6380356	Identifier	nc		6380306	1					
ANR	6380357	Identifier	errors		6380306	1					
ANR	6380358	PrimaryExpression	0		6380306	1					
ANR	6380359	IfStatement	if ( ! str )		6380306	9					
ANR	6380360	Condition	! str	156:5:3041:3044	6380306	0	True				
ANR	6380361	UnaryOperationExpression	! str		6380306	0					
ANR	6380362	UnaryOperator	!		6380306	0					
ANR	6380363	Identifier	str		6380306	1					
ANR	6380364	CompoundStatement		10:11:133:133	6380306	1					
ANR	6380365	ReturnStatement	return 0 ;	157:2:3051:3059	6380306	0	True				
ANR	6380366	PrimaryExpression	0		6380306	0					
ANR	6380367	ForStatement	for ( ; * str == ' ' ; )		6380306	10					
ANR	6380368	Condition	* str == ' '	159:8:3072:3082	6380306	0	True				
ANR	6380369	EqualityExpression	* str == ' '		6380306	0		==			
ANR	6380370	UnaryOperationExpression	* str		6380306	0					
ANR	6380371	UnaryOperator	*		6380306	0					
ANR	6380372	Identifier	str		6380306	1					
ANR	6380373	PrimaryExpression	' '		6380306	1					
ANR	6380374	CompoundStatement		13:23:173:173	6380306	1					
ANR	6380375	ExpressionStatement	str ++	160:2:3091:3096	6380306	0	True				
ANR	6380376	PostIncDecOperationExpression	str ++		6380306	0					
ANR	6380377	Identifier	str		6380306	0					
ANR	6380378	IncDec	++		6380306	1					
ANR	6380379	IfStatement	if ( ! * str )		6380306	11					
ANR	6380380	Condition	! * str	162:5:3106:3110	6380306	0	True				
ANR	6380381	UnaryOperationExpression	! * str		6380306	0					
ANR	6380382	UnaryOperator	!		6380306	0					
ANR	6380383	UnaryOperationExpression	* str		6380306	1					
ANR	6380384	UnaryOperator	*		6380306	0					
ANR	6380385	Identifier	str		6380306	1					
ANR	6380386	CompoundStatement		16:12:199:199	6380306	1					
ANR	6380387	ReturnStatement	return 0 ;	163:2:3117:3125	6380306	0	True				
ANR	6380388	PrimaryExpression	0		6380306	0					
ANR	6380389	IfStatement	"if ( ! strncmp ( str , ""1u"" , 2 ) )"		6380306	12					
ANR	6380390	Condition	"! strncmp ( str , ""1u"" , 2 )"	165:5:3135:3157	6380306	0	True				
ANR	6380391	UnaryOperationExpression	"! strncmp ( str , ""1u"" , 2 )"		6380306	0					
ANR	6380392	UnaryOperator	!		6380306	0					
ANR	6380393	CallExpression	"strncmp ( str , ""1u"" , 2 )"		6380306	1					
ANR	6380394	Callee	strncmp		6380306	0					
ANR	6380395	Identifier	strncmp		6380306	0					
ANR	6380396	ArgumentList	str		6380306	1					
ANR	6380397	Argument	str		6380306	0					
ANR	6380398	Identifier	str		6380306	0					
ANR	6380399	Argument	"""1u"""		6380306	1					
ANR	6380400	PrimaryExpression	"""1u"""		6380306	0					
ANR	6380401	Argument	2		6380306	2					
ANR	6380402	PrimaryExpression	2		6380306	0					
ANR	6380403	CompoundStatement		19:30:246:246	6380306	1					
ANR	6380404	IfStatement	if ( num && num -> value == UT64_MAX )		6380306	0					
ANR	6380405	Condition	num && num -> value == UT64_MAX	166:6:3196:3224	6380306	0	True				
ANR	6380406	AndExpression	num && num -> value == UT64_MAX		6380306	0		&&			
ANR	6380407	Identifier	num		6380306	0					
ANR	6380408	EqualityExpression	num -> value == UT64_MAX		6380306	1		==			
ANR	6380409	PtrMemberAccess	num -> value		6380306	0					
ANR	6380410	Identifier	num		6380306	0					
ANR	6380411	Identifier	value		6380306	1					
ANR	6380412	Identifier	UT64_MAX		6380306	1					
ANR	6380413	CompoundStatement		20:37:313:313	6380306	1					
ANR	6380414	ExpressionStatement	num -> value = 0	167:3:3232:3246	6380306	0	True				
ANR	6380415	AssignmentExpression	num -> value = 0		6380306	0		=			
ANR	6380416	PtrMemberAccess	num -> value		6380306	0					
ANR	6380417	Identifier	num		6380306	0					
ANR	6380418	Identifier	value		6380306	1					
ANR	6380419	PrimaryExpression	0		6380306	1					
ANR	6380420	SwitchStatement	switch ( atoi ( str + 2 ) )		6380306	1					
ANR	6380421	Condition	atoi ( str + 2 )	169:10:3262:3275	6380306	0	True				
ANR	6380422	CallExpression	atoi ( str + 2 )		6380306	0					
ANR	6380423	Callee	atoi		6380306	0					
ANR	6380424	Identifier	atoi		6380306	0					
ANR	6380425	ArgumentList	str + 2		6380306	1					
ANR	6380426	Argument	str + 2		6380306	0					
ANR	6380427	AdditiveExpression	str + 2		6380306	0		+			
ANR	6380428	Identifier	str		6380306	0					
ANR	6380429	PrimaryExpression	2		6380306	1					
ANR	6380430	CompoundStatement		23:26:364:364	6380306	1					
ANR	6380431	Label	case 64 :	170:2:3282:3289	6380306	0	True				
ANR	6380432	ReturnStatement	return ( ut64 ) UT64_MAX ;	170:11:3291:3312	6380306	1	True				
ANR	6380433	CastExpression	( ut64 ) UT64_MAX		6380306	0					
ANR	6380434	CastTarget	ut64		6380306	0					
ANR	6380435	Identifier	UT64_MAX		6380306	1					
ANR	6380436	Label	case 32 :	171:2:3316:3323	6380306	2	True				
ANR	6380437	ReturnStatement	return ( ut64 ) UT32_MAX ;	171:11:3325:3346	6380306	3	True				
ANR	6380438	CastExpression	( ut64 ) UT32_MAX		6380306	0					
ANR	6380439	CastTarget	ut64		6380306	0					
ANR	6380440	Identifier	UT32_MAX		6380306	1					
ANR	6380441	Label	case 16 :	172:2:3350:3357	6380306	4	True				
ANR	6380442	ReturnStatement	return ( ut64 ) UT16_MAX ;	172:11:3359:3380	6380306	5	True				
ANR	6380443	CastExpression	( ut64 ) UT16_MAX		6380306	0					
ANR	6380444	CastTarget	ut64		6380306	0					
ANR	6380445	Identifier	UT16_MAX		6380306	1					
ANR	6380446	Label	case 8 :	173:2:3384:3390	6380306	6	True				
ANR	6380447	ReturnStatement	return ( ut64 ) UT8_MAX ;	173:10:3392:3412	6380306	7	True				
ANR	6380448	CastExpression	( ut64 ) UT8_MAX		6380306	0					
ANR	6380449	CastTarget	ut64		6380306	0					
ANR	6380450	Identifier	UT8_MAX		6380306	1					
ANR	6380451	IfStatement	if ( num && num -> callback )		6380306	13					
ANR	6380452	Condition	num && num -> callback	177:5:3474:3493	6380306	0	True				
ANR	6380453	AndExpression	num && num -> callback		6380306	0		&&			
ANR	6380454	Identifier	num		6380306	0					
ANR	6380455	PtrMemberAccess	num -> callback		6380306	1					
ANR	6380456	Identifier	num		6380306	0					
ANR	6380457	Identifier	callback		6380306	1					
ANR	6380458	CompoundStatement		31:27:582:582	6380306	1					
ANR	6380459	ExpressionStatement	ok = 0	178:2:3500:3506	6380306	0	True				
ANR	6380460	AssignmentExpression	ok = 0		6380306	0		=			
ANR	6380461	Identifier	ok		6380306	0					
ANR	6380462	PrimaryExpression	0		6380306	1					
ANR	6380463	ExpressionStatement	"ret = num -> callback ( num -> userptr , str , & ok )"	179:2:3510:3554	6380306	1	True				
ANR	6380464	AssignmentExpression	"ret = num -> callback ( num -> userptr , str , & ok )"		6380306	0		=			
ANR	6380465	Identifier	ret		6380306	0					
ANR	6380466	CallExpression	"num -> callback ( num -> userptr , str , & ok )"		6380306	1					
ANR	6380467	Callee	num -> callback		6380306	0					
ANR	6380468	PtrMemberAccess	num -> callback		6380306	0					
ANR	6380469	Identifier	num		6380306	0					
ANR	6380470	Identifier	callback		6380306	1					
ANR	6380471	ArgumentList	num -> userptr		6380306	1					
ANR	6380472	Argument	num -> userptr		6380306	0					
ANR	6380473	PtrMemberAccess	num -> userptr		6380306	0					
ANR	6380474	Identifier	num		6380306	0					
ANR	6380475	Identifier	userptr		6380306	1					
ANR	6380476	Argument	str		6380306	1					
ANR	6380477	Identifier	str		6380306	0					
ANR	6380478	Argument	& ok		6380306	2					
ANR	6380479	UnaryOperationExpression	& ok		6380306	0					
ANR	6380480	UnaryOperator	&		6380306	0					
ANR	6380481	Identifier	ok		6380306	1					
ANR	6380482	IfStatement	if ( ok )		6380306	2					
ANR	6380483	Condition	ok	180:6:3562:3563	6380306	0	True				
ANR	6380484	Identifier	ok		6380306	0					
ANR	6380485	CompoundStatement		34:10:652:652	6380306	1					
ANR	6380486	ReturnStatement	return ret ;	181:3:3571:3581	6380306	0	True				
ANR	6380487	Identifier	ret		6380306	0					
ANR	6380488	IfStatement	if ( str [ 0 ] && str [ 1 ] && str [ 2 ] )		6380306	14					
ANR	6380489	Condition	str [ 0 ] && str [ 1 ] && str [ 2 ]	185:5:3596:3621	6380306	0	True				
ANR	6380490	AndExpression	str [ 0 ] && str [ 1 ] && str [ 2 ]		6380306	0		&&			
ANR	6380491	ArrayIndexing	str [ 0 ]		6380306	0					
ANR	6380492	Identifier	str		6380306	0					
ANR	6380493	PrimaryExpression	0		6380306	1					
ANR	6380494	AndExpression	str [ 1 ] && str [ 2 ]		6380306	1		&&			
ANR	6380495	ArrayIndexing	str [ 1 ]		6380306	0					
ANR	6380496	Identifier	str		6380306	0					
ANR	6380497	PrimaryExpression	1		6380306	1					
ANR	6380498	ArrayIndexing	str [ 2 ]		6380306	1					
ANR	6380499	Identifier	str		6380306	0					
ANR	6380500	PrimaryExpression	2		6380306	1					
ANR	6380501	CompoundStatement		39:33:710:710	6380306	1					
ANR	6380502	IfStatement	if ( str [ 0 ] == '\\'' && str [ 2 ] == '\\'' )		6380306	0					
ANR	6380503	Condition	str [ 0 ] == '\\'' && str [ 2 ] == '\\''	186:6:3632:3663	6380306	0	True				
ANR	6380504	AndExpression	str [ 0 ] == '\\'' && str [ 2 ] == '\\''		6380306	0		&&			
ANR	6380505	EqualityExpression	str [ 0 ] == '\\''		6380306	0		==			
ANR	6380506	ArrayIndexing	str [ 0 ]		6380306	0					
ANR	6380507	Identifier	str		6380306	0					
ANR	6380508	PrimaryExpression	0		6380306	1					
ANR	6380509	PrimaryExpression	'\\''		6380306	1					
ANR	6380510	EqualityExpression	str [ 2 ] == '\\''		6380306	1		==			
ANR	6380511	ArrayIndexing	str [ 2 ]		6380306	0					
ANR	6380512	Identifier	str		6380306	0					
ANR	6380513	PrimaryExpression	2		6380306	1					
ANR	6380514	PrimaryExpression	'\\''		6380306	1					
ANR	6380515	CompoundStatement		40:40:752:752	6380306	1					
ANR	6380516	ReturnStatement	return ( ut64 ) str [ 1 ] ;	187:3:3671:3690	6380306	0	True				
ANR	6380517	CastExpression	( ut64 ) str [ 1 ]		6380306	0					
ANR	6380518	CastTarget	ut64		6380306	0					
ANR	6380519	ArrayIndexing	str [ 1 ]		6380306	1					
ANR	6380520	Identifier	str		6380306	0					
ANR	6380521	PrimaryExpression	1		6380306	1					
ANR	6380522	ExpressionStatement	len = strlen ( str )	191:1:3701:3719	6380306	15	True				
ANR	6380523	AssignmentExpression	len = strlen ( str )		6380306	0		=			
ANR	6380524	Identifier	len		6380306	0					
ANR	6380525	CallExpression	strlen ( str )		6380306	1					
ANR	6380526	Callee	strlen		6380306	0					
ANR	6380527	Identifier	strlen		6380306	0					
ANR	6380528	ArgumentList	str		6380306	1					
ANR	6380529	Argument	str		6380306	0					
ANR	6380530	Identifier	str		6380306	0					
ANR	6380531	IfStatement	if ( len > 3 && str [ 4 ] == ':' )		6380306	16					
ANR	6380532	Condition	len > 3 && str [ 4 ] == ':'	192:5:3726:3749	6380306	0	True				
ANR	6380533	AndExpression	len > 3 && str [ 4 ] == ':'		6380306	0		&&			
ANR	6380534	RelationalExpression	len > 3		6380306	0		>			
ANR	6380535	Identifier	len		6380306	0					
ANR	6380536	PrimaryExpression	3		6380306	1					
ANR	6380537	EqualityExpression	str [ 4 ] == ':'		6380306	1		==			
ANR	6380538	ArrayIndexing	str [ 4 ]		6380306	0					
ANR	6380539	Identifier	str		6380306	0					
ANR	6380540	PrimaryExpression	4		6380306	1					
ANR	6380541	PrimaryExpression	':'		6380306	1					
ANR	6380542	CompoundStatement		46:31:838:838	6380306	1					
ANR	6380543	IfStatement	"if ( sscanf ( str , ""%04x"" , & s ) == 1 )"		6380306	0					
ANR	6380544	Condition	"sscanf ( str , ""%04x"" , & s ) == 1"	193:6:3760:3788	6380306	0	True				
ANR	6380545	EqualityExpression	"sscanf ( str , ""%04x"" , & s ) == 1"		6380306	0		==			
ANR	6380546	CallExpression	"sscanf ( str , ""%04x"" , & s )"		6380306	0					
ANR	6380547	Callee	sscanf		6380306	0					
ANR	6380548	Identifier	sscanf		6380306	0					
ANR	6380549	ArgumentList	str		6380306	1					
ANR	6380550	Argument	str		6380306	0					
ANR	6380551	Identifier	str		6380306	0					
ANR	6380552	Argument	"""%04x"""		6380306	1					
ANR	6380553	PrimaryExpression	"""%04x"""		6380306	0					
ANR	6380554	Argument	& s		6380306	2					
ANR	6380555	UnaryOperationExpression	& s		6380306	0					
ANR	6380556	UnaryOperator	&		6380306	0					
ANR	6380557	Identifier	s		6380306	1					
ANR	6380558	PrimaryExpression	1		6380306	1					
ANR	6380559	CompoundStatement		47:37:877:877	6380306	1					
ANR	6380560	IfStatement	"if ( sscanf ( str + 5 , ""%04x"" , & a ) == 1 )"		6380306	0					
ANR	6380561	Condition	"sscanf ( str + 5 , ""%04x"" , & a ) == 1"	194:7:3800:3832	6380306	0	True				
ANR	6380562	EqualityExpression	"sscanf ( str + 5 , ""%04x"" , & a ) == 1"		6380306	0		==			
ANR	6380563	CallExpression	"sscanf ( str + 5 , ""%04x"" , & a )"		6380306	0					
ANR	6380564	Callee	sscanf		6380306	0					
ANR	6380565	Identifier	sscanf		6380306	0					
ANR	6380566	ArgumentList	str + 5		6380306	1					
ANR	6380567	Argument	str + 5		6380306	0					
ANR	6380568	AdditiveExpression	str + 5		6380306	0		+			
ANR	6380569	Identifier	str		6380306	0					
ANR	6380570	PrimaryExpression	5		6380306	1					
ANR	6380571	Argument	"""%04x"""		6380306	1					
ANR	6380572	PrimaryExpression	"""%04x"""		6380306	0					
ANR	6380573	Argument	& a		6380306	2					
ANR	6380574	UnaryOperationExpression	& a		6380306	0					
ANR	6380575	UnaryOperator	&		6380306	0					
ANR	6380576	Identifier	a		6380306	1					
ANR	6380577	PrimaryExpression	1		6380306	1					
ANR	6380578	CompoundStatement		48:42:921:921	6380306	1					
ANR	6380579	ReturnStatement	return ( ut64 ) ( ( s << 4 ) + a ) ;	195:4:3841:3867	6380306	0	True				
ANR	6380580	CastExpression	( ut64 ) ( ( s << 4 ) + a )		6380306	0					
ANR	6380581	CastTarget	ut64		6380306	0					
ANR	6380582	AdditiveExpression	( s << 4 ) + a		6380306	1		+			
ANR	6380583	ShiftExpression	s << 4		6380306	0		<<			
ANR	6380584	Identifier	s		6380306	0					
ANR	6380585	PrimaryExpression	4		6380306	1					
ANR	6380586	Identifier	a		6380306	1					
ANR	6380587	ElseStatement	else		6380306	0					
ANR	6380588	IfStatement	if ( len > 6 && str [ 6 ] == ':' )		6380306	0					
ANR	6380589	Condition	len > 6 && str [ 6 ] == ':'	198:12:3890:3913	6380306	0	True				
ANR	6380590	AndExpression	len > 6 && str [ 6 ] == ':'		6380306	0		&&			
ANR	6380591	RelationalExpression	len > 6		6380306	0		>			
ANR	6380592	Identifier	len		6380306	0					
ANR	6380593	PrimaryExpression	6		6380306	1					
ANR	6380594	EqualityExpression	str [ 6 ] == ':'		6380306	1		==			
ANR	6380595	ArrayIndexing	str [ 6 ]		6380306	0					
ANR	6380596	Identifier	str		6380306	0					
ANR	6380597	PrimaryExpression	6		6380306	1					
ANR	6380598	PrimaryExpression	':'		6380306	1					
ANR	6380599	CompoundStatement		52:38:1002:1002	6380306	1					
ANR	6380600	IfStatement	"if ( sscanf ( str , ""0x%04x:0x%04x"" , & s , & a ) == 2 )"		6380306	0					
ANR	6380601	Condition	"sscanf ( str , ""0x%04x:0x%04x"" , & s , & a ) == 2"	199:6:3924:3965	6380306	0	True				
ANR	6380602	EqualityExpression	"sscanf ( str , ""0x%04x:0x%04x"" , & s , & a ) == 2"		6380306	0		==			
ANR	6380603	CallExpression	"sscanf ( str , ""0x%04x:0x%04x"" , & s , & a )"		6380306	0					
ANR	6380604	Callee	sscanf		6380306	0					
ANR	6380605	Identifier	sscanf		6380306	0					
ANR	6380606	ArgumentList	str		6380306	1					
ANR	6380607	Argument	str		6380306	0					
ANR	6380608	Identifier	str		6380306	0					
ANR	6380609	Argument	"""0x%04x:0x%04x"""		6380306	1					
ANR	6380610	PrimaryExpression	"""0x%04x:0x%04x"""		6380306	0					
ANR	6380611	Argument	& s		6380306	2					
ANR	6380612	UnaryOperationExpression	& s		6380306	0					
ANR	6380613	UnaryOperator	&		6380306	0					
ANR	6380614	Identifier	s		6380306	1					
ANR	6380615	Argument	& a		6380306	3					
ANR	6380616	UnaryOperationExpression	& a		6380306	0					
ANR	6380617	UnaryOperator	&		6380306	0					
ANR	6380618	Identifier	a		6380306	1					
ANR	6380619	PrimaryExpression	2		6380306	1					
ANR	6380620	CompoundStatement		53:50:1054:1054	6380306	1					
ANR	6380621	ReturnStatement	return ( ut64 ) ( ( s << 4 ) + a ) ;	200:3:3973:4001	6380306	0	True				
ANR	6380622	CastExpression	( ut64 ) ( ( s << 4 ) + a )		6380306	0					
ANR	6380623	CastTarget	ut64		6380306	0					
ANR	6380624	AdditiveExpression	( s << 4 ) + a		6380306	1		+			
ANR	6380625	ShiftExpression	s << 4		6380306	0		<<			
ANR	6380626	Identifier	s		6380306	0					
ANR	6380627	PrimaryExpression	4		6380306	1					
ANR	6380628	Identifier	a		6380306	1					
ANR	6380629	IfStatement	"if ( sscanf ( str , ""0x%04x:%04x"" , & s , & a ) == 2 )"		6380306	1					
ANR	6380630	Condition	"sscanf ( str , ""0x%04x:%04x"" , & s , & a ) == 2"	202:6:4013:4052	6380306	0	True				
ANR	6380631	EqualityExpression	"sscanf ( str , ""0x%04x:%04x"" , & s , & a ) == 2"		6380306	0		==			
ANR	6380632	CallExpression	"sscanf ( str , ""0x%04x:%04x"" , & s , & a )"		6380306	0					
ANR	6380633	Callee	sscanf		6380306	0					
ANR	6380634	Identifier	sscanf		6380306	0					
ANR	6380635	ArgumentList	str		6380306	1					
ANR	6380636	Argument	str		6380306	0					
ANR	6380637	Identifier	str		6380306	0					
ANR	6380638	Argument	"""0x%04x:%04x"""		6380306	1					
ANR	6380639	PrimaryExpression	"""0x%04x:%04x"""		6380306	0					
ANR	6380640	Argument	& s		6380306	2					
ANR	6380641	UnaryOperationExpression	& s		6380306	0					
ANR	6380642	UnaryOperator	&		6380306	0					
ANR	6380643	Identifier	s		6380306	1					
ANR	6380644	Argument	& a		6380306	3					
ANR	6380645	UnaryOperationExpression	& a		6380306	0					
ANR	6380646	UnaryOperator	&		6380306	0					
ANR	6380647	Identifier	a		6380306	1					
ANR	6380648	PrimaryExpression	2		6380306	1					
ANR	6380649	CompoundStatement		56:48:1141:1141	6380306	1					
ANR	6380650	ReturnStatement	return ( ut64 ) ( ( s << 4 ) + a ) ;	203:3:4060:4088	6380306	0	True				
ANR	6380651	CastExpression	( ut64 ) ( ( s << 4 ) + a )		6380306	0					
ANR	6380652	CastTarget	ut64		6380306	0					
ANR	6380653	AdditiveExpression	( s << 4 ) + a		6380306	1		+			
ANR	6380654	ShiftExpression	s << 4		6380306	0		<<			
ANR	6380655	Identifier	s		6380306	0					
ANR	6380656	PrimaryExpression	4		6380306	1					
ANR	6380657	Identifier	a		6380306	1					
ANR	6380658	IfStatement	if ( str [ 0 ] == '0' && str [ 1 ] == 'b' )		6380306	17					
ANR	6380659	Condition	str [ 0 ] == '0' && str [ 1 ] == 'b'	206:5:4102:4131	6380306	0	True				
ANR	6380660	AndExpression	str [ 0 ] == '0' && str [ 1 ] == 'b'		6380306	0		&&			
ANR	6380661	EqualityExpression	str [ 0 ] == '0'		6380306	0		==			
ANR	6380662	ArrayIndexing	str [ 0 ]		6380306	0					
ANR	6380663	Identifier	str		6380306	0					
ANR	6380664	PrimaryExpression	0		6380306	1					
ANR	6380665	PrimaryExpression	'0'		6380306	1					
ANR	6380666	EqualityExpression	str [ 1 ] == 'b'		6380306	1		==			
ANR	6380667	ArrayIndexing	str [ 1 ]		6380306	0					
ANR	6380668	Identifier	str		6380306	0					
ANR	6380669	PrimaryExpression	1		6380306	1					
ANR	6380670	PrimaryExpression	'b'		6380306	1					
ANR	6380671	CompoundStatement		60:37:1220:1220	6380306	1					
ANR	6380672	ExpressionStatement	ret = 0	207:2:4138:4145	6380306	0	True				
ANR	6380673	AssignmentExpression	ret = 0		6380306	0		=			
ANR	6380674	Identifier	ret		6380306	0					
ANR	6380675	PrimaryExpression	0		6380306	1					
ANR	6380676	ForStatement	"for ( j = 0 , i = strlen ( str ) - 1 ; i > 0 ; i -- , j ++ )"		6380306	1					
ANR	6380677	ForInit	"j = 0 , i = strlen ( str ) - 1 ;"	208:7:4154:4181	6380306	0	True				
ANR	6380678	Expression	"j = 0 , i = strlen ( str ) - 1"		6380306	0					
ANR	6380679	AssignmentExpression	j = 0		6380306	0		=			
ANR	6380680	Identifier	j		6380306	0					
ANR	6380681	PrimaryExpression	0		6380306	1					
ANR	6380682	AssignmentExpression	i = strlen ( str ) - 1		6380306	1		=			
ANR	6380683	Identifier	i		6380306	0					
ANR	6380684	AdditiveExpression	strlen ( str ) - 1		6380306	1		-			
ANR	6380685	CallExpression	strlen ( str )		6380306	0					
ANR	6380686	Callee	strlen		6380306	0					
ANR	6380687	Identifier	strlen		6380306	0					
ANR	6380688	ArgumentList	str		6380306	1					
ANR	6380689	Argument	str		6380306	0					
ANR	6380690	Identifier	str		6380306	0					
ANR	6380691	PrimaryExpression	1		6380306	1					
ANR	6380692	Condition	i > 0	208:36:4183:4187	6380306	1	True				
ANR	6380693	RelationalExpression	i > 0		6380306	0		>			
ANR	6380694	Identifier	i		6380306	0					
ANR	6380695	PrimaryExpression	0		6380306	1					
ANR	6380696	Expression	"i -- , j ++"	208:43:4190:4197	6380306	2	True				
ANR	6380697	PostIncDecOperationExpression	i --		6380306	0					
ANR	6380698	Identifier	i		6380306	0					
ANR	6380699	IncDec	--		6380306	1					
ANR	6380700	PostIncDecOperationExpression	j ++		6380306	1					
ANR	6380701	Identifier	j		6380306	0					
ANR	6380702	IncDec	++		6380306	1					
ANR	6380703	CompoundStatement		62:53:1286:1286	6380306	3					
ANR	6380704	IfStatement	if ( str [ i ] == '1' )		6380306	0					
ANR	6380705	Condition	str [ i ] == '1'	209:7:4209:4221	6380306	0	True				
ANR	6380706	EqualityExpression	str [ i ] == '1'		6380306	0		==			
ANR	6380707	ArrayIndexing	str [ i ]		6380306	0					
ANR	6380708	Identifier	str		6380306	0					
ANR	6380709	Identifier	i		6380306	1					
ANR	6380710	PrimaryExpression	'1'		6380306	1					
ANR	6380711	CompoundStatement		63:22:1310:1310	6380306	1					
ANR	6380712	ExpressionStatement	ret |= 1 << j	210:4:4230:4241	6380306	0	True				
ANR	6380713	AssignmentExpression	ret |= 1 << j		6380306	0		|=			
ANR	6380714	Identifier	ret		6380306	0					
ANR	6380715	ShiftExpression	1 << j		6380306	1		<<			
ANR	6380716	PrimaryExpression	1		6380306	0					
ANR	6380717	Identifier	j		6380306	1					
ANR	6380718	ElseStatement	else		6380306	0					
ANR	6380719	IfStatement	if ( str [ i ] != '0' )		6380306	0					
ANR	6380720	Condition	str [ i ] != '0'	211:14:4257:4269	6380306	0	True				
ANR	6380721	EqualityExpression	str [ i ] != '0'		6380306	0		!=			
ANR	6380722	ArrayIndexing	str [ i ]		6380306	0					
ANR	6380723	Identifier	str		6380306	0					
ANR	6380724	Identifier	i		6380306	1					
ANR	6380725	PrimaryExpression	'0'		6380306	1					
ANR	6380726	CompoundStatement		65:29:1358:1358	6380306	1					
ANR	6380727	BreakStatement	break ;	212:4:4278:4283	6380306	0	True				
ANR	6380728	Statement	sscanf	215:2:4296:4301	6380306	2	True				
ANR	6380729	Statement	(	215:9:4303:4303	6380306	3	True				
ANR	6380730	Statement	str	215:10:4304:4306	6380306	4	True				
ANR	6380731	Statement	","	215:13:4307:4307	6380306	5	True				
ANR	6380732	Statement	"""0x%"""	215:15:4309:4313	6380306	6	True				
ANR	6380733	Statement	PFMT64x	215:20:4314:4320	6380306	7	True				
ANR	6380734	Statement	","	215:27:4321:4321	6380306	8	True				
ANR	6380735	Statement	&	215:29:4323:4323	6380306	9	True				
ANR	6380736	Statement	ret	215:30:4324:4326	6380306	10	True				
ANR	6380737	Statement	)	215:33:4327:4327	6380306	11	True				
ANR	6380738	ExpressionStatement		215:34:4328:4328	6380306	12	True				
ANR	6380739	ElseStatement	else		6380306	0					
ANR	6380740	IfStatement	if ( str [ 0 ] == '\\'' )		6380306	0					
ANR	6380741	Condition	str [ 0 ] == '\\''	216:12:4342:4355	6380306	0	True				
ANR	6380742	EqualityExpression	str [ 0 ] == '\\''		6380306	0		==			
ANR	6380743	ArrayIndexing	str [ 0 ]		6380306	0					
ANR	6380744	Identifier	str		6380306	0					
ANR	6380745	PrimaryExpression	0		6380306	1					
ANR	6380746	PrimaryExpression	'\\''		6380306	1					
ANR	6380747	CompoundStatement		70:28:1444:1444	6380306	1					
ANR	6380748	ExpressionStatement	ret = str [ 1 ] & 0xff	217:2:4362:4381	6380306	0	True				
ANR	6380749	AssignmentExpression	ret = str [ 1 ] & 0xff		6380306	0		=			
ANR	6380750	Identifier	ret		6380306	0					
ANR	6380751	BitAndExpression	str [ 1 ] & 0xff		6380306	1		&			
ANR	6380752	ArrayIndexing	str [ 1 ]		6380306	0					
ANR	6380753	Identifier	str		6380306	0					
ANR	6380754	PrimaryExpression	1		6380306	1					
ANR	6380755	PrimaryExpression	0xff		6380306	1					
ANR	6380756	ElseStatement	else		6380306	0					
ANR	6380757	IfStatement	"if ( ! strncmp ( str , ""0xff.."" , 6 ) || ! strncmp ( str , ""0xFF.."" , 6 ) )"		6380306	0					
ANR	6380758	Condition	"! strncmp ( str , ""0xff.."" , 6 ) || ! strncmp ( str , ""0xFF.."" , 6 )"	219:12:4412:4469	6380306	0	True				
ANR	6380759	OrExpression	"! strncmp ( str , ""0xff.."" , 6 ) || ! strncmp ( str , ""0xFF.."" , 6 )"		6380306	0		||			
ANR	6380760	UnaryOperationExpression	"! strncmp ( str , ""0xff.."" , 6 )"		6380306	0					
ANR	6380761	UnaryOperator	!		6380306	0					
ANR	6380762	CallExpression	"strncmp ( str , ""0xff.."" , 6 )"		6380306	1					
ANR	6380763	Callee	strncmp		6380306	0					
ANR	6380764	Identifier	strncmp		6380306	0					
ANR	6380765	ArgumentList	str		6380306	1					
ANR	6380766	Argument	str		6380306	0					
ANR	6380767	Identifier	str		6380306	0					
ANR	6380768	Argument	"""0xff.."""		6380306	1					
ANR	6380769	PrimaryExpression	"""0xff.."""		6380306	0					
ANR	6380770	Argument	6		6380306	2					
ANR	6380771	PrimaryExpression	6		6380306	0					
ANR	6380772	UnaryOperationExpression	"! strncmp ( str , ""0xFF.."" , 6 )"		6380306	1					
ANR	6380773	UnaryOperator	!		6380306	0					
ANR	6380774	CallExpression	"strncmp ( str , ""0xFF.."" , 6 )"		6380306	1					
ANR	6380775	Callee	strncmp		6380306	0					
ANR	6380776	Identifier	strncmp		6380306	0					
ANR	6380777	ArgumentList	str		6380306	1					
ANR	6380778	Argument	str		6380306	0					
ANR	6380779	Identifier	str		6380306	0					
ANR	6380780	Argument	"""0xFF.."""		6380306	1					
ANR	6380781	PrimaryExpression	"""0xFF.."""		6380306	0					
ANR	6380782	Argument	6		6380306	2					
ANR	6380783	PrimaryExpression	6		6380306	0					
ANR	6380784	CompoundStatement		73:72:1558:1558	6380306	1					
ANR	6380785	ExpressionStatement	"ret = r_num_tailff ( num , str + 6 )"	220:2:4476:4509	6380306	0	True				
ANR	6380786	AssignmentExpression	"ret = r_num_tailff ( num , str + 6 )"		6380306	0		=			
ANR	6380787	Identifier	ret		6380306	0					
ANR	6380788	CallExpression	"r_num_tailff ( num , str + 6 )"		6380306	1					
ANR	6380789	Callee	r_num_tailff		6380306	0					
ANR	6380790	Identifier	r_num_tailff		6380306	0					
ANR	6380791	ArgumentList	num		6380306	1					
ANR	6380792	Argument	num		6380306	0					
ANR	6380793	Identifier	num		6380306	0					
ANR	6380794	Argument	str + 6		6380306	1					
ANR	6380795	AdditiveExpression	str + 6		6380306	0		+			
ANR	6380796	Identifier	str		6380306	0					
ANR	6380797	PrimaryExpression	6		6380306	1					
ANR	6380798	ElseStatement	else		6380306	0					
ANR	6380799	IfStatement	"if ( ! strncmp ( str , ""0xf.."" , 5 ) || ! strncmp ( str , ""0xF.."" , 5 ) )"		6380306	0					
ANR	6380800	Condition	"! strncmp ( str , ""0xf.."" , 5 ) || ! strncmp ( str , ""0xF.."" , 5 )"	222:12:4540:4595	6380306	0	True				
ANR	6380801	OrExpression	"! strncmp ( str , ""0xf.."" , 5 ) || ! strncmp ( str , ""0xF.."" , 5 )"		6380306	0		||			
ANR	6380802	UnaryOperationExpression	"! strncmp ( str , ""0xf.."" , 5 )"		6380306	0					
ANR	6380803	UnaryOperator	!		6380306	0					
ANR	6380804	CallExpression	"strncmp ( str , ""0xf.."" , 5 )"		6380306	1					
ANR	6380805	Callee	strncmp		6380306	0					
ANR	6380806	Identifier	strncmp		6380306	0					
ANR	6380807	ArgumentList	str		6380306	1					
ANR	6380808	Argument	str		6380306	0					
ANR	6380809	Identifier	str		6380306	0					
ANR	6380810	Argument	"""0xf.."""		6380306	1					
ANR	6380811	PrimaryExpression	"""0xf.."""		6380306	0					
ANR	6380812	Argument	5		6380306	2					
ANR	6380813	PrimaryExpression	5		6380306	0					
ANR	6380814	UnaryOperationExpression	"! strncmp ( str , ""0xF.."" , 5 )"		6380306	1					
ANR	6380815	UnaryOperator	!		6380306	0					
ANR	6380816	CallExpression	"strncmp ( str , ""0xF.."" , 5 )"		6380306	1					
ANR	6380817	Callee	strncmp		6380306	0					
ANR	6380818	Identifier	strncmp		6380306	0					
ANR	6380819	ArgumentList	str		6380306	1					
ANR	6380820	Argument	str		6380306	0					
ANR	6380821	Identifier	str		6380306	0					
ANR	6380822	Argument	"""0xF.."""		6380306	1					
ANR	6380823	PrimaryExpression	"""0xF.."""		6380306	0					
ANR	6380824	Argument	5		6380306	2					
ANR	6380825	PrimaryExpression	5		6380306	0					
ANR	6380826	CompoundStatement		76:70:1684:1684	6380306	1					
ANR	6380827	ExpressionStatement	"ret = r_num_tailff ( num , str + 5 )"	223:2:4602:4635	6380306	0	True				
ANR	6380828	AssignmentExpression	"ret = r_num_tailff ( num , str + 5 )"		6380306	0		=			
ANR	6380829	Identifier	ret		6380306	0					
ANR	6380830	CallExpression	"r_num_tailff ( num , str + 5 )"		6380306	1					
ANR	6380831	Callee	r_num_tailff		6380306	0					
ANR	6380832	Identifier	r_num_tailff		6380306	0					
ANR	6380833	ArgumentList	num		6380306	1					
ANR	6380834	Argument	num		6380306	0					
ANR	6380835	Identifier	num		6380306	0					
ANR	6380836	Argument	str + 5		6380306	1					
ANR	6380837	AdditiveExpression	str + 5		6380306	0		+			
ANR	6380838	Identifier	str		6380306	0					
ANR	6380839	PrimaryExpression	5		6380306	1					
ANR	6380840	ElseStatement	else		6380306	0					
ANR	6380841	IfStatement	if ( str [ 0 ] == '0' && tolower ( str [ 1 ] ) == 'x' )		6380306	0					
ANR	6380842	Condition	str [ 0 ] == '0' && tolower ( str [ 1 ] ) == 'x'	224:12:4649:4688	6380306	0	True				
ANR	6380843	AndExpression	str [ 0 ] == '0' && tolower ( str [ 1 ] ) == 'x'		6380306	0		&&			
ANR	6380844	EqualityExpression	str [ 0 ] == '0'		6380306	0		==			
ANR	6380845	ArrayIndexing	str [ 0 ]		6380306	0					
ANR	6380846	Identifier	str		6380306	0					
ANR	6380847	PrimaryExpression	0		6380306	1					
ANR	6380848	PrimaryExpression	'0'		6380306	1					
ANR	6380849	EqualityExpression	tolower ( str [ 1 ] ) == 'x'		6380306	1		==			
ANR	6380850	CallExpression	tolower ( str [ 1 ] )		6380306	0					
ANR	6380851	Callee	tolower		6380306	0					
ANR	6380852	Identifier	tolower		6380306	0					
ANR	6380853	ArgumentList	str [ 1 ]		6380306	1					
ANR	6380854	Argument	str [ 1 ]		6380306	0					
ANR	6380855	ArrayIndexing	str [ 1 ]		6380306	0					
ANR	6380856	Identifier	str		6380306	0					
ANR	6380857	PrimaryExpression	1		6380306	1					
ANR	6380858	PrimaryExpression	'x'		6380306	1					
ANR	6380859	CompoundStatement		79:2:1781:1823	6380306	1					
ANR	6380860	IdentifierDeclStatement	"const char * lodash = strchr ( str + 2 , '_' ) ;"	225:2:4695:4737	6380306	0	True				
ANR	6380861	IdentifierDecl	"* lodash = strchr ( str + 2 , '_' )"		6380306	0					
ANR	6380862	IdentifierDeclType	const char *		6380306	0					
ANR	6380863	Identifier	lodash		6380306	1					
ANR	6380864	AssignmentExpression	"* lodash = strchr ( str + 2 , '_' )"		6380306	2		=			
ANR	6380865	Identifier	lodash		6380306	0					
ANR	6380866	CallExpression	"strchr ( str + 2 , '_' )"		6380306	1					
ANR	6380867	Callee	strchr		6380306	0					
ANR	6380868	Identifier	strchr		6380306	0					
ANR	6380869	ArgumentList	str + 2		6380306	1					
ANR	6380870	Argument	str + 2		6380306	0					
ANR	6380871	AdditiveExpression	str + 2		6380306	0		+			
ANR	6380872	Identifier	str		6380306	0					
ANR	6380873	PrimaryExpression	2		6380306	1					
ANR	6380874	Argument	'_'		6380306	1					
ANR	6380875	PrimaryExpression	'_'		6380306	0					
ANR	6380876	IfStatement	if ( lodash )		6380306	1					
ANR	6380877	Condition	lodash	226:6:4745:4750	6380306	0	True				
ANR	6380878	Identifier	lodash		6380306	0					
ANR	6380879	CompoundStatement		83:3:1953:1979	6380306	1					
ANR	6380880	IdentifierDeclStatement	char * s = strdup ( str + 2 ) ;	229:3:4867:4893	6380306	0	True				
ANR	6380881	IdentifierDecl	* s = strdup ( str + 2 )		6380306	0					
ANR	6380882	IdentifierDeclType	char *		6380306	0					
ANR	6380883	Identifier	s		6380306	1					
ANR	6380884	AssignmentExpression	* s = strdup ( str + 2 )		6380306	2		=			
ANR	6380885	Identifier	s		6380306	0					
ANR	6380886	CallExpression	strdup ( str + 2 )		6380306	1					
ANR	6380887	Callee	strdup		6380306	0					
ANR	6380888	Identifier	strdup		6380306	0					
ANR	6380889	ArgumentList	str + 2		6380306	1					
ANR	6380890	Argument	str + 2		6380306	0					
ANR	6380891	AdditiveExpression	str + 2		6380306	0		+			
ANR	6380892	Identifier	str		6380306	0					
ANR	6380893	PrimaryExpression	2		6380306	1					
ANR	6380894	IfStatement	if ( s )		6380306	1					
ANR	6380895	Condition	s	230:7:4902:4902	6380306	0	True				
ANR	6380896	Identifier	s		6380306	0					
ANR	6380897	CompoundStatement		84:10:1991:1991	6380306	1					
ANR	6380898	ExpressionStatement	"r_str_replace_char ( s , '_' , 0 )"	231:4:4911:4941	6380306	0	True				
ANR	6380899	CallExpression	"r_str_replace_char ( s , '_' , 0 )"		6380306	0					
ANR	6380900	Callee	r_str_replace_char		6380306	0					
ANR	6380901	Identifier	r_str_replace_char		6380306	0					
ANR	6380902	ArgumentList	s		6380306	1					
ANR	6380903	Argument	s		6380306	0					
ANR	6380904	Identifier	s		6380306	0					
ANR	6380905	Argument	'_'		6380306	1					
ANR	6380906	PrimaryExpression	'_'		6380306	0					
ANR	6380907	Argument	0		6380306	2					
ANR	6380908	PrimaryExpression	0		6380306	0					
ANR	6380909	ExpressionStatement	"ret = strtoull ( s , NULL , 16 )"	232:4:4947:4975	6380306	1	True				
ANR	6380910	AssignmentExpression	"ret = strtoull ( s , NULL , 16 )"		6380306	0		=			
ANR	6380911	Identifier	ret		6380306	0					
ANR	6380912	CallExpression	"strtoull ( s , NULL , 16 )"		6380306	1					
ANR	6380913	Callee	strtoull		6380306	0					
ANR	6380914	Identifier	strtoull		6380306	0					
ANR	6380915	ArgumentList	s		6380306	1					
ANR	6380916	Argument	s		6380306	0					
ANR	6380917	Identifier	s		6380306	0					
ANR	6380918	Argument	NULL		6380306	1					
ANR	6380919	Identifier	NULL		6380306	0					
ANR	6380920	Argument	16		6380306	2					
ANR	6380921	PrimaryExpression	16		6380306	0					
ANR	6380922	ExpressionStatement	free ( s )	233:4:4981:4989	6380306	2	True				
ANR	6380923	CallExpression	free ( s )		6380306	0					
ANR	6380924	Callee	free		6380306	0					
ANR	6380925	Identifier	free		6380306	0					
ANR	6380926	ArgumentList	s		6380306	1					
ANR	6380927	Argument	s		6380306	0					
ANR	6380928	Identifier	s		6380306	0					
ANR	6380929	ElseStatement	else		6380306	0					
ANR	6380930	CompoundStatement		89:9:2091:2091	6380306	0					
ANR	6380931	ExpressionStatement	"ret = strtoull ( str + 2 , NULL , 16 )"	236:3:5010:5044	6380306	0	True				
ANR	6380932	AssignmentExpression	"ret = strtoull ( str + 2 , NULL , 16 )"		6380306	0		=			
ANR	6380933	Identifier	ret		6380306	0					
ANR	6380934	CallExpression	"strtoull ( str + 2 , NULL , 16 )"		6380306	1					
ANR	6380935	Callee	strtoull		6380306	0					
ANR	6380936	Identifier	strtoull		6380306	0					
ANR	6380937	ArgumentList	str + 2		6380306	1					
ANR	6380938	Argument	str + 2		6380306	0					
ANR	6380939	AdditiveExpression	str + 2		6380306	0		+			
ANR	6380940	Identifier	str		6380306	0					
ANR	6380941	PrimaryExpression	2		6380306	1					
ANR	6380942	Argument	NULL		6380306	1					
ANR	6380943	Identifier	NULL		6380306	0					
ANR	6380944	Argument	16		6380306	2					
ANR	6380945	PrimaryExpression	16		6380306	0					
ANR	6380946	ElseStatement	else		6380306	0					
ANR	6380947	CompoundStatement		97:2:2271:2293	6380306	0					
ANR	6380948	IdentifierDeclStatement	char * endptr ;	240:2:5102:5114	6380306	0	True				
ANR	6380949	IdentifierDecl	* endptr		6380306	0					
ANR	6380950	IdentifierDeclType	char *		6380306	0					
ANR	6380951	Identifier	endptr		6380306	1					
ANR	6380952	IdentifierDeclStatement	int len_num = len > 0 ? len - 1 : 0 ;	241:2:5118:5153	6380306	1	True				
ANR	6380953	IdentifierDecl	len_num = len > 0 ? len - 1 : 0		6380306	0					
ANR	6380954	IdentifierDeclType	int		6380306	0					
ANR	6380955	Identifier	len_num		6380306	1					
ANR	6380956	AssignmentExpression	len_num = len > 0 ? len - 1 : 0		6380306	2		=			
ANR	6380957	Identifier	len_num		6380306	0					
ANR	6380958	ConditionalExpression	len > 0 ? len - 1 : 0		6380306	1					
ANR	6380959	Condition	len > 0		6380306	0					
ANR	6380960	RelationalExpression	len > 0		6380306	0		>			
ANR	6380961	Identifier	len		6380306	0					
ANR	6380962	PrimaryExpression	0		6380306	1					
ANR	6380963	AdditiveExpression	len - 1		6380306	1		-			
ANR	6380964	Identifier	len		6380306	0					
ANR	6380965	PrimaryExpression	1		6380306	1					
ANR	6380966	PrimaryExpression	0		6380306	2					
ANR	6380967	IdentifierDeclStatement	int chars_read = len_num ;	242:2:5157:5181	6380306	2	True				
ANR	6380968	IdentifierDecl	chars_read = len_num		6380306	0					
ANR	6380969	IdentifierDeclType	int		6380306	0					
ANR	6380970	Identifier	chars_read		6380306	1					
ANR	6380971	AssignmentExpression	chars_read = len_num		6380306	2		=			
ANR	6380972	Identifier	len_num		6380306	0					
ANR	6380973	Identifier	len_num		6380306	1					
ANR	6380974	IdentifierDeclStatement	bool zero_read = false ;	243:2:5185:5207	6380306	3	True				
ANR	6380975	IdentifierDecl	zero_read = false		6380306	0					
ANR	6380976	IdentifierDeclType	bool		6380306	0					
ANR	6380977	Identifier	zero_read		6380306	1					
ANR	6380978	AssignmentExpression	zero_read = false		6380306	2		=			
ANR	6380979	Identifier	false		6380306	0					
ANR	6380980	Identifier	false		6380306	1					
ANR	6380981	ExpressionStatement	lch = str [ len > 0 ? len - 1 : 0 ]	244:2:5211:5243	6380306	4	True				
ANR	6380982	AssignmentExpression	lch = str [ len > 0 ? len - 1 : 0 ]		6380306	0		=			
ANR	6380983	Identifier	lch		6380306	0					
ANR	6380984	ArrayIndexing	str [ len > 0 ? len - 1 : 0 ]		6380306	1					
ANR	6380985	Identifier	str		6380306	0					
ANR	6380986	ConditionalExpression	len > 0 ? len - 1 : 0		6380306	1					
ANR	6380987	Condition	len > 0		6380306	0					
ANR	6380988	RelationalExpression	len > 0		6380306	0		>			
ANR	6380989	Identifier	len		6380306	0					
ANR	6380990	PrimaryExpression	0		6380306	1					
ANR	6380991	AdditiveExpression	len - 1		6380306	1		-			
ANR	6380992	Identifier	len		6380306	0					
ANR	6380993	PrimaryExpression	1		6380306	1					
ANR	6380994	PrimaryExpression	0		6380306	2					
ANR	6380995	IfStatement	if ( * str == '0' && IS_DIGIT ( * ( str + 1 ) ) && lch != 'b' && lch != 'h' )		6380306	5					
ANR	6380996	Condition	* str == '0' && IS_DIGIT ( * ( str + 1 ) ) && lch != 'b' && lch != 'h'	245:6:5251:5314	6380306	0	True				
ANR	6380997	AndExpression	* str == '0' && IS_DIGIT ( * ( str + 1 ) ) && lch != 'b' && lch != 'h'		6380306	0		&&			
ANR	6380998	EqualityExpression	* str == '0'		6380306	0		==			
ANR	6380999	UnaryOperationExpression	* str		6380306	0					
ANR	6381000	UnaryOperator	*		6380306	0					
ANR	6381001	Identifier	str		6380306	1					
ANR	6381002	PrimaryExpression	'0'		6380306	1					
ANR	6381003	AndExpression	IS_DIGIT ( * ( str + 1 ) ) && lch != 'b' && lch != 'h'		6380306	1		&&			
ANR	6381004	CallExpression	IS_DIGIT ( * ( str + 1 ) )		6380306	0					
ANR	6381005	Callee	IS_DIGIT		6380306	0					
ANR	6381006	Identifier	IS_DIGIT		6380306	0					
ANR	6381007	ArgumentList	* ( str + 1 )		6380306	1					
ANR	6381008	Argument	* ( str + 1 )		6380306	0					
ANR	6381009	UnaryOperationExpression	* ( str + 1 )		6380306	0					
ANR	6381010	UnaryOperator	*		6380306	0					
ANR	6381011	AdditiveExpression	str + 1		6380306	1		+			
ANR	6381012	Identifier	str		6380306	0					
ANR	6381013	PrimaryExpression	1		6380306	1					
ANR	6381014	AndExpression	lch != 'b' && lch != 'h'		6380306	1		&&			
ANR	6381015	EqualityExpression	lch != 'b'		6380306	0		!=			
ANR	6381016	Identifier	lch		6380306	0					
ANR	6381017	PrimaryExpression	'b'		6380306	1					
ANR	6381018	EqualityExpression	lch != 'h'		6380306	1		!=			
ANR	6381019	Identifier	lch		6380306	0					
ANR	6381020	PrimaryExpression	'h'		6380306	1					
ANR	6381021	CompoundStatement		99:72:2403:2403	6380306	1					
ANR	6381022	ExpressionStatement	lch = 'o'	246:3:5322:5331	6380306	0	True				
ANR	6381023	AssignmentExpression	lch = 'o'		6380306	0		=			
ANR	6381024	Identifier	lch		6380306	0					
ANR	6381025	PrimaryExpression	'o'		6380306	1					
ANR	6381026	ExpressionStatement	len_num ++	247:3:5336:5345	6380306	1	True				
ANR	6381027	PostIncDecOperationExpression	len_num ++		6380306	0					
ANR	6381028	Identifier	len_num		6380306	0					
ANR	6381029	IncDec	++		6380306	1					
ANR	6381030	SwitchStatement	switch ( lch )		6380306	6					
ANR	6381031	Condition	lch	249:10:5361:5363	6380306	0	True				
ANR	6381032	Identifier	lch		6380306	0					
ANR	6381033	CompoundStatement		140:3:3387:3397	6380306	1					
ANR	6381034	Label	case 'h' :	250:2:5370:5378	6380306	0	True				
ANR	6381035	Statement	if	251:3:5391:5392	6380306	1	True				
ANR	6381036	Statement	(	251:6:5394:5394	6380306	2	True				
ANR	6381037	Statement	!	251:7:5395:5395	6380306	3	True				
ANR	6381038	Statement	sscanf	251:8:5396:5401	6380306	4	True				
ANR	6381039	Statement	(	251:15:5403:5403	6380306	5	True				
ANR	6381040	Statement	str	251:16:5404:5406	6380306	6	True				
ANR	6381041	Statement	","	251:19:5407:5407	6380306	7	True				
ANR	6381042	Statement	"""%"""	251:21:5409:5411	6380306	8	True				
ANR	6381043	Statement	PFMT64x	251:24:5412:5418	6380306	9	True				
ANR	6381044	Statement	"""%n"""	251:31:5419:5422	6380306	10	True				
ANR	6381045	Statement	","	251:35:5423:5423	6380306	11	True				
ANR	6381046	Statement	&	251:37:5425:5425	6380306	12	True				
ANR	6381047	Statement	ret	251:38:5426:5428	6380306	13	True				
ANR	6381048	Statement	","	251:41:5429:5429	6380306	14	True				
ANR	6381049	Statement	&	251:43:5431:5431	6380306	15	True				
ANR	6381050	Statement	chars_read	251:44:5432:5441	6380306	16	True				
ANR	6381051	Statement	)	251:54:5442:5442	6380306	17	True				
ANR	6381052	Statement	||	252:7:5451:5452	6380306	18	True				
ANR	6381053	Statement	chars_read	252:10:5454:5463	6380306	19	True				
ANR	6381054	Statement	!=	252:21:5465:5466	6380306	20	True				
ANR	6381055	Statement	len_num	252:24:5468:5474	6380306	21	True				
ANR	6381056	Statement	)	252:31:5475:5475	6380306	22	True				
ANR	6381057	CompoundStatement		106:33:2563:2563	6380306	23					
ANR	6381058	ExpressionStatement	"error ( num , ""invalid hex number"" )"	253:4:5483:5516	6380306	0	True				
ANR	6381059	CallExpression	"error ( num , ""invalid hex number"" )"		6380306	0					
ANR	6381060	Callee	error		6380306	0					
ANR	6381061	Identifier	error		6380306	0					
ANR	6381062	ArgumentList	num		6380306	1					
ANR	6381063	Argument	num		6380306	0					
ANR	6381064	Identifier	num		6380306	0					
ANR	6381065	Argument	"""invalid hex number"""		6380306	1					
ANR	6381066	PrimaryExpression	"""invalid hex number"""		6380306	0					
ANR	6381067	BreakStatement	break ;	255:3:5526:5531	6380306	24	True				
ANR	6381068	Label	case 'o' :	256:2:5535:5543	6380306	25	True				
ANR	6381069	Statement	if	257:3:5557:5558	6380306	26	True				
ANR	6381070	Statement	(	257:6:5560:5560	6380306	27	True				
ANR	6381071	Statement	!	257:7:5561:5561	6380306	28	True				
ANR	6381072	Statement	sscanf	257:8:5562:5567	6380306	29	True				
ANR	6381073	Statement	(	257:15:5569:5569	6380306	30	True				
ANR	6381074	Statement	str	257:16:5570:5572	6380306	31	True				
ANR	6381075	Statement	","	257:19:5573:5573	6380306	32	True				
ANR	6381076	Statement	"""%"""	257:21:5575:5577	6380306	33	True				
ANR	6381077	Statement	PFMT64o	257:24:5578:5584	6380306	34	True				
ANR	6381078	Statement	"""%n"""	257:31:5585:5588	6380306	35	True				
ANR	6381079	Statement	","	257:35:5589:5589	6380306	36	True				
ANR	6381080	Statement	&	257:37:5591:5591	6380306	37	True				
ANR	6381081	Statement	ret	257:38:5592:5594	6380306	38	True				
ANR	6381082	Statement	","	257:41:5595:5595	6380306	39	True				
ANR	6381083	Statement	&	257:43:5597:5597	6380306	40	True				
ANR	6381084	Statement	chars_read	257:44:5598:5607	6380306	41	True				
ANR	6381085	Statement	)	257:54:5608:5608	6380306	42	True				
ANR	6381086	Statement	||	258:7:5617:5618	6380306	43	True				
ANR	6381087	Statement	chars_read	258:10:5620:5629	6380306	44	True				
ANR	6381088	Statement	!=	258:21:5631:5632	6380306	45	True				
ANR	6381089	Statement	len_num	258:24:5634:5640	6380306	46	True				
ANR	6381090	Statement	)	258:31:5641:5641	6380306	47	True				
ANR	6381091	CompoundStatement		112:33:2729:2729	6380306	48					
ANR	6381092	ExpressionStatement	"error ( num , ""invalid octal number"" )"	259:4:5649:5684	6380306	0	True				
ANR	6381093	CallExpression	"error ( num , ""invalid octal number"" )"		6380306	0					
ANR	6381094	Callee	error		6380306	0					
ANR	6381095	Identifier	error		6380306	0					
ANR	6381096	ArgumentList	num		6380306	1					
ANR	6381097	Argument	num		6380306	0					
ANR	6381098	Identifier	num		6380306	0					
ANR	6381099	Argument	"""invalid octal number"""		6380306	1					
ANR	6381100	PrimaryExpression	"""invalid octal number"""		6380306	0					
ANR	6381101	BreakStatement	break ;	261:3:5694:5699	6380306	49	True				
ANR	6381102	Label	case 'b' :	262:2:5703:5711	6380306	50	True				
ANR	6381103	ExpressionStatement	ret = 0	263:3:5726:5733	6380306	51	True				
ANR	6381104	AssignmentExpression	ret = 0		6380306	0		=			
ANR	6381105	Identifier	ret		6380306	0					
ANR	6381106	PrimaryExpression	0		6380306	1					
ANR	6381107	ExpressionStatement	ok = true	264:3:5738:5747	6380306	52	True				
ANR	6381108	AssignmentExpression	ok = true		6380306	0		=			
ANR	6381109	Identifier	ok		6380306	0					
ANR	6381110	Identifier	true		6380306	1					
ANR	6381111	IfStatement	if ( strlen ( str ) <= 65 )		6380306	53					
ANR	6381112	Condition	strlen ( str ) <= 65	265:7:5756:5773	6380306	0	True				
ANR	6381113	RelationalExpression	strlen ( str ) <= 65		6380306	0		<=			
ANR	6381114	CallExpression	strlen ( str )		6380306	0					
ANR	6381115	Callee	strlen		6380306	0					
ANR	6381116	Identifier	strlen		6380306	0					
ANR	6381117	ArgumentList	str		6380306	1					
ANR	6381118	Argument	str		6380306	0					
ANR	6381119	Identifier	str		6380306	0					
ANR	6381120	PrimaryExpression	65		6380306	1					
ANR	6381121	CompoundStatement		119:27:2862:2862	6380306	1					
ANR	6381122	ForStatement	"for ( j = 0 , i = strlen ( str ) - 2 ; i >= 0 ; i -- , j ++ )"		6380306	0					
ANR	6381123	ForInit	"j = 0 , i = strlen ( str ) - 2 ;"	266:9:5814:5841	6380306	0	True				
ANR	6381124	Expression	"j = 0 , i = strlen ( str ) - 2"		6380306	0					
ANR	6381125	AssignmentExpression	j = 0		6380306	0		=			
ANR	6381126	Identifier	j		6380306	0					
ANR	6381127	PrimaryExpression	0		6380306	1					
ANR	6381128	AssignmentExpression	i = strlen ( str ) - 2		6380306	1		=			
ANR	6381129	Identifier	i		6380306	0					
ANR	6381130	AdditiveExpression	strlen ( str ) - 2		6380306	1		-			
ANR	6381131	CallExpression	strlen ( str )		6380306	0					
ANR	6381132	Callee	strlen		6380306	0					
ANR	6381133	Identifier	strlen		6380306	0					
ANR	6381134	ArgumentList	str		6380306	1					
ANR	6381135	Argument	str		6380306	0					
ANR	6381136	Identifier	str		6380306	0					
ANR	6381137	PrimaryExpression	2		6380306	1					
ANR	6381138	Condition	i >= 0	266:38:5843:5848	6380306	1	True				
ANR	6381139	RelationalExpression	i >= 0		6380306	0		>=			
ANR	6381140	Identifier	i		6380306	0					
ANR	6381141	PrimaryExpression	0		6380306	1					
ANR	6381142	Expression	"i -- , j ++"	266:46:5851:5858	6380306	2	True				
ANR	6381143	PostIncDecOperationExpression	i --		6380306	0					
ANR	6381144	Identifier	i		6380306	0					
ANR	6381145	IncDec	--		6380306	1					
ANR	6381146	PostIncDecOperationExpression	j ++		6380306	1					
ANR	6381147	Identifier	j		6380306	0					
ANR	6381148	IncDec	++		6380306	1					
ANR	6381149	CompoundStatement		120:56:2947:2947	6380306	3					
ANR	6381150	IfStatement	if ( str [ i ] == '1' )		6380306	0					
ANR	6381151	Condition	str [ i ] == '1'	267:9:5872:5884	6380306	0	True				
ANR	6381152	EqualityExpression	str [ i ] == '1'		6380306	0		==			
ANR	6381153	ArrayIndexing	str [ i ]		6380306	0					
ANR	6381154	Identifier	str		6380306	0					
ANR	6381155	Identifier	i		6380306	1					
ANR	6381156	PrimaryExpression	'1'		6380306	1					
ANR	6381157	CompoundStatement		121:24:2973:2973	6380306	1					
ANR	6381158	Statement	ret	268:6:5895:5897	6380306	0	True				
ANR	6381159	Statement	|=	268:10:5899:5900	6380306	1	True				
ANR	6381160	Statement	(	268:13:5902:5902	6380306	2	True				
ANR	6381161	Statement	1UL	268:14:5903:5905	6380306	3	True				
ANR	6381162	Statement	L	268:17:5906:5906	6380306	4	True				
ANR	6381163	Statement	<<	268:19:5908:5909	6380306	5	True				
ANR	6381164	Statement	j	268:22:5911:5911	6380306	6	True				
ANR	6381165	Statement	)	268:23:5912:5912	6380306	7	True				
ANR	6381166	ExpressionStatement		268:24:5913:5913	6380306	8	True				
ANR	6381167	ElseStatement	else		6380306	0					
ANR	6381168	IfStatement	if ( str [ i ] != '0' )		6380306	0					
ANR	6381169	Condition	str [ i ] != '0'	269:16:5931:5943	6380306	0	True				
ANR	6381170	EqualityExpression	str [ i ] != '0'		6380306	0		!=			
ANR	6381171	ArrayIndexing	str [ i ]		6380306	0					
ANR	6381172	Identifier	str		6380306	0					
ANR	6381173	Identifier	i		6380306	1					
ANR	6381174	PrimaryExpression	'0'		6380306	1					
ANR	6381175	CompoundStatement		123:31:3032:3032	6380306	1					
ANR	6381176	ExpressionStatement	ok = false	271:6:6031:6041	6380306	0	True				
ANR	6381177	AssignmentExpression	ok = false		6380306	0		=			
ANR	6381178	Identifier	ok		6380306	0					
ANR	6381179	Identifier	false		6380306	1					
ANR	6381180	BreakStatement	break ;	272:6:6049:6054	6380306	1	True				
ANR	6381181	ElseStatement	else		6380306	0					
ANR	6381182	CompoundStatement		129:10:3165:3165	6380306	0					
ANR	6381183	ExpressionStatement	ok = false	276:4:6085:6095	6380306	0	True				
ANR	6381184	AssignmentExpression	ok = false		6380306	0		=			
ANR	6381185	Identifier	ok		6380306	0					
ANR	6381186	Identifier	false		6380306	1					
ANR	6381187	IfStatement	if ( ! ok || ! len_num )		6380306	54					
ANR	6381188	Condition	! ok || ! len_num	279:7:6173:6187	6380306	0	True				
ANR	6381189	OrExpression	! ok || ! len_num		6380306	0		||			
ANR	6381190	UnaryOperationExpression	! ok		6380306	0					
ANR	6381191	UnaryOperator	!		6380306	0					
ANR	6381192	Identifier	ok		6380306	1					
ANR	6381193	UnaryOperationExpression	! len_num		6380306	1					
ANR	6381194	UnaryOperator	!		6380306	0					
ANR	6381195	Identifier	len_num		6380306	1					
ANR	6381196	CompoundStatement		133:24:3276:3276	6380306	1					
ANR	6381197	ExpressionStatement	"error ( num , ""invalid binary number"" )"	280:4:6196:6232	6380306	0	True				
ANR	6381198	CallExpression	"error ( num , ""invalid binary number"" )"		6380306	0					
ANR	6381199	Callee	error		6380306	0					
ANR	6381200	Identifier	error		6380306	0					
ANR	6381201	ArgumentList	num		6380306	1					
ANR	6381202	Argument	num		6380306	0					
ANR	6381203	Identifier	num		6380306	0					
ANR	6381204	Argument	"""invalid binary number"""		6380306	1					
ANR	6381205	PrimaryExpression	"""invalid binary number"""		6380306	0					
ANR	6381206	BreakStatement	break ;	282:3:6242:6247	6380306	55	True				
ANR	6381207	Label	case 't' :	283:2:6251:6259	6380306	56	True				
ANR	6381208	ExpressionStatement	ret = 0	284:3:6275:6282	6380306	57	True				
ANR	6381209	AssignmentExpression	ret = 0		6380306	0		=			
ANR	6381210	Identifier	ret		6380306	0					
ANR	6381211	PrimaryExpression	0		6380306	1					
ANR	6381212	ExpressionStatement	ok = true	285:3:6287:6296	6380306	58	True				
ANR	6381213	AssignmentExpression	ok = true		6380306	0		=			
ANR	6381214	Identifier	ok		6380306	0					
ANR	6381215	Identifier	true		6380306	1					
ANR	6381216	IdentifierDeclStatement	ut64 x = 1 ;	286:3:6301:6311	6380306	59	True				
ANR	6381217	IdentifierDecl	x = 1		6380306	0					
ANR	6381218	IdentifierDeclType	ut64		6380306	0					
ANR	6381219	Identifier	x		6380306	1					
ANR	6381220	AssignmentExpression	x = 1		6380306	2		=			
ANR	6381221	Identifier	x		6380306	0					
ANR	6381222	PrimaryExpression	1		6380306	1					
ANR	6381223	ForStatement	for ( i = strlen ( str ) - 2 ; i >= 0 ; i -- )		6380306	60					
ANR	6381224	ForInit	i = strlen ( str ) - 2 ;	287:8:6321:6341	6380306	0	True				
ANR	6381225	AssignmentExpression	i = strlen ( str ) - 2		6380306	0		=			
ANR	6381226	Identifier	i		6380306	0					
ANR	6381227	AdditiveExpression	strlen ( str ) - 2		6380306	1		-			
ANR	6381228	CallExpression	strlen ( str )		6380306	0					
ANR	6381229	Callee	strlen		6380306	0					
ANR	6381230	Identifier	strlen		6380306	0					
ANR	6381231	ArgumentList	str		6380306	1					
ANR	6381232	Argument	str		6380306	0					
ANR	6381233	Identifier	str		6380306	0					
ANR	6381234	PrimaryExpression	2		6380306	1					
ANR	6381235	Condition	i >= 0	287:30:6343:6348	6380306	1	True				
ANR	6381236	RelationalExpression	i >= 0		6380306	0		>=			
ANR	6381237	Identifier	i		6380306	0					
ANR	6381238	PrimaryExpression	0		6380306	1					
ANR	6381239	PostIncDecOperationExpression	i --	287:38:6351:6353	6380306	2	True				
ANR	6381240	Identifier	i		6380306	0					
ANR	6381241	IncDec	--		6380306	1					
ANR	6381242	CompoundStatement		141:43:3442:3442	6380306	3					
ANR	6381243	IfStatement	if ( str [ i ] < '0' || '2' < str [ i ] )		6380306	0					
ANR	6381244	Condition	str [ i ] < '0' || '2' < str [ i ]	288:8:6366:6393	6380306	0	True				
ANR	6381245	OrExpression	str [ i ] < '0' || '2' < str [ i ]		6380306	0		||			
ANR	6381246	RelationalExpression	str [ i ] < '0'		6380306	0		<			
ANR	6381247	ArrayIndexing	str [ i ]		6380306	0					
ANR	6381248	Identifier	str		6380306	0					
ANR	6381249	Identifier	i		6380306	1					
ANR	6381250	PrimaryExpression	'0'		6380306	1					
ANR	6381251	RelationalExpression	'2' < str [ i ]		6380306	1		<			
ANR	6381252	PrimaryExpression	'2'		6380306	0					
ANR	6381253	ArrayIndexing	str [ i ]		6380306	1					
ANR	6381254	Identifier	str		6380306	0					
ANR	6381255	Identifier	i		6380306	1					
ANR	6381256	CompoundStatement		142:38:3482:3482	6380306	1					
ANR	6381257	ExpressionStatement	ok = false	289:5:6403:6413	6380306	0	True				
ANR	6381258	AssignmentExpression	ok = false		6380306	0		=			
ANR	6381259	Identifier	ok		6380306	0					
ANR	6381260	Identifier	false		6380306	1					
ANR	6381261	BreakStatement	break ;	290:5:6420:6425	6380306	1	True				
ANR	6381262	ExpressionStatement	ret += x * ( str [ i ] - '0' )	292:4:6437:6462	6380306	1	True				
ANR	6381263	AssignmentExpression	ret += x * ( str [ i ] - '0' )		6380306	0		+=			
ANR	6381264	Identifier	ret		6380306	0					
ANR	6381265	MultiplicativeExpression	x * ( str [ i ] - '0' )		6380306	1		*			
ANR	6381266	Identifier	x		6380306	0					
ANR	6381267	AdditiveExpression	str [ i ] - '0'		6380306	1		-			
ANR	6381268	ArrayIndexing	str [ i ]		6380306	0					
ANR	6381269	Identifier	str		6380306	0					
ANR	6381270	Identifier	i		6380306	1					
ANR	6381271	PrimaryExpression	'0'		6380306	1					
ANR	6381272	ExpressionStatement	x *= 3	293:4:6468:6474	6380306	2	True				
ANR	6381273	AssignmentExpression	x *= 3		6380306	0		*=			
ANR	6381274	Identifier	x		6380306	0					
ANR	6381275	PrimaryExpression	3		6380306	1					
ANR	6381276	IfStatement	if ( ! ok || ! len_num )		6380306	61					
ANR	6381277	Condition	! ok || ! len_num	295:7:6488:6502	6380306	0	True				
ANR	6381278	OrExpression	! ok || ! len_num		6380306	0		||			
ANR	6381279	UnaryOperationExpression	! ok		6380306	0					
ANR	6381280	UnaryOperator	!		6380306	0					
ANR	6381281	Identifier	ok		6380306	1					
ANR	6381282	UnaryOperationExpression	! len_num		6380306	1					
ANR	6381283	UnaryOperator	!		6380306	0					
ANR	6381284	Identifier	len_num		6380306	1					
ANR	6381285	CompoundStatement		149:24:3591:3591	6380306	1					
ANR	6381286	ExpressionStatement	"error ( num , ""invalid ternary number"" )"	296:4:6511:6548	6380306	0	True				
ANR	6381287	CallExpression	"error ( num , ""invalid ternary number"" )"		6380306	0					
ANR	6381288	Callee	error		6380306	0					
ANR	6381289	Identifier	error		6380306	0					
ANR	6381290	ArgumentList	num		6380306	1					
ANR	6381291	Argument	num		6380306	0					
ANR	6381292	Identifier	num		6380306	0					
ANR	6381293	Argument	"""invalid ternary number"""		6380306	1					
ANR	6381294	PrimaryExpression	"""invalid ternary number"""		6380306	0					
ANR	6381295	ElseStatement	else		6380306	0					
ANR	6381296	CompoundStatement		161:10:3848:3848	6380306	0					
ANR	6381297	Statement	if	308:4:6768:6769	6380306	0	True				
ANR	6381298	Statement	(	308:7:6771:6771	6380306	1	True				
ANR	6381299	Statement	sscanf	308:8:6772:6777	6380306	2	True				
ANR	6381300	Statement	(	308:15:6779:6779	6380306	3	True				
ANR	6381301	Statement	str	308:16:6780:6782	6380306	4	True				
ANR	6381302	Statement	","	308:19:6783:6783	6380306	5	True				
ANR	6381303	Statement	"""%"""	308:21:6785:6787	6380306	6	True				
ANR	6381304	Statement	PFMT64d	308:24:6788:6794	6380306	7	True				
ANR	6381305	Statement	"""%n"""	308:31:6795:6798	6380306	8	True				
ANR	6381306	Statement	","	308:35:6799:6799	6380306	9	True				
ANR	6381307	Statement	&	308:37:6801:6801	6380306	10	True				
ANR	6381308	Statement	ret	308:38:6802:6804	6380306	11	True				
ANR	6381309	Statement	","	308:41:6805:6805	6380306	12	True				
ANR	6381310	Statement	&	308:43:6807:6807	6380306	13	True				
ANR	6381311	Statement	chars_read	308:44:6808:6817	6380306	14	True				
ANR	6381312	Statement	)	308:54:6818:6818	6380306	15	True				
ANR	6381313	Statement	)	308:55:6819:6819	6380306	16	True				
ANR	6381314	CompoundStatement		162:57:3907:3907	6380306	17					
ANR	6381315	ExpressionStatement	ret *= KB	309:5:6828:6837	6380306	0	True				
ANR	6381316	AssignmentExpression	ret *= KB		6380306	0		*=			
ANR	6381317	Identifier	ret		6380306	0					
ANR	6381318	Identifier	KB		6380306	1					
ANR	6381319	BreakStatement	break ;	298:3:6558:6563	6380306	62	True				
ANR	6381320	Label	case 'K' :	299:2:6567:6575	6380306	63	True				
ANR	6381321	Label	case 'k' :	299:12:6577:6585	6380306	64	True				
ANR	6381322	IfStatement	"if ( strchr ( str , '.' ) )"		6380306	65					
ANR	6381323	Condition	"strchr ( str , '.' )"	300:7:6594:6610	6380306	0	True				
ANR	6381324	CallExpression	"strchr ( str , '.' )"		6380306	0					
ANR	6381325	Callee	strchr		6380306	0					
ANR	6381326	Identifier	strchr		6380306	0					
ANR	6381327	ArgumentList	str		6380306	1					
ANR	6381328	Argument	str		6380306	0					
ANR	6381329	Identifier	str		6380306	0					
ANR	6381330	Argument	'.'		6380306	1					
ANR	6381331	PrimaryExpression	'.'		6380306	0					
ANR	6381332	CompoundStatement		155:4:3705:3717	6380306	1					
ANR	6381333	IdentifierDeclStatement	double d = 0 ;	301:4:6619:6631	6380306	0	True				
ANR	6381334	IdentifierDecl	d = 0		6380306	0					
ANR	6381335	IdentifierDeclType	double		6380306	0					
ANR	6381336	Identifier	d		6380306	1					
ANR	6381337	AssignmentExpression	d = 0		6380306	2		=			
ANR	6381338	Identifier	d		6380306	0					
ANR	6381339	PrimaryExpression	0		6380306	1					
ANR	6381340	IfStatement	"if ( sscanf ( str , ""%lf%n"" , & d , & chars_read ) )"		6380306	1					
ANR	6381341	Condition	"sscanf ( str , ""%lf%n"" , & d , & chars_read )"	302:8:6641:6678	6380306	0	True				
ANR	6381342	CallExpression	"sscanf ( str , ""%lf%n"" , & d , & chars_read )"		6380306	0					
ANR	6381343	Callee	sscanf		6380306	0					
ANR	6381344	Identifier	sscanf		6380306	0					
ANR	6381345	ArgumentList	str		6380306	1					
ANR	6381346	Argument	str		6380306	0					
ANR	6381347	Identifier	str		6380306	0					
ANR	6381348	Argument	"""%lf%n"""		6380306	1					
ANR	6381349	PrimaryExpression	"""%lf%n"""		6380306	0					
ANR	6381350	Argument	& d		6380306	2					
ANR	6381351	UnaryOperationExpression	& d		6380306	0					
ANR	6381352	UnaryOperator	&		6380306	0					
ANR	6381353	Identifier	d		6380306	1					
ANR	6381354	Argument	& chars_read		6380306	3					
ANR	6381355	UnaryOperationExpression	& chars_read		6380306	0					
ANR	6381356	UnaryOperator	&		6380306	0					
ANR	6381357	Identifier	chars_read		6380306	1					
ANR	6381358	CompoundStatement		156:48:3767:3767	6380306	1					
ANR	6381359	ExpressionStatement	ret = ( ut64 ) ( d * KB )	303:5:6688:6708	6380306	0	True				
ANR	6381360	AssignmentExpression	ret = ( ut64 ) ( d * KB )		6380306	0		=			
ANR	6381361	Identifier	ret		6380306	0					
ANR	6381362	CastExpression	( ut64 ) ( d * KB )		6380306	1					
ANR	6381363	CastTarget	ut64		6380306	0					
ANR	6381364	MultiplicativeExpression	d * KB		6380306	1		*			
ANR	6381365	Identifier	d		6380306	0					
ANR	6381366	Identifier	KB		6380306	1					
ANR	6381367	ElseStatement	else		6380306	0					
ANR	6381368	CompoundStatement		158:11:3807:3807	6380306	0					
ANR	6381369	ExpressionStatement	zero_read = true	305:5:6728:6744	6380306	0	True				
ANR	6381370	AssignmentExpression	zero_read = true		6380306	0		=			
ANR	6381371	Identifier	zero_read		6380306	0					
ANR	6381372	Identifier	true		6380306	1					
ANR	6381373	ElseStatement	else		6380306	0					
ANR	6381374	CompoundStatement		164:11:3936:3936	6380306	0					
ANR	6381375	ExpressionStatement	zero_read = true	311:5:6857:6873	6380306	0	True				
ANR	6381376	AssignmentExpression	zero_read = true		6380306	0		=			
ANR	6381377	Identifier	zero_read		6380306	0					
ANR	6381378	Identifier	true		6380306	1					
ANR	6381379	IfStatement	if ( zero_read || chars_read != len_num )		6380306	66					
ANR	6381380	Condition	zero_read || chars_read != len_num	314:7:6893:6926	6380306	0	True				
ANR	6381381	OrExpression	zero_read || chars_read != len_num		6380306	0		||			
ANR	6381382	Identifier	zero_read		6380306	0					
ANR	6381383	EqualityExpression	chars_read != len_num		6380306	1		!=			
ANR	6381384	Identifier	chars_read		6380306	0					
ANR	6381385	Identifier	len_num		6380306	1					
ANR	6381386	CompoundStatement		168:43:4015:4015	6380306	1					
ANR	6381387	ExpressionStatement	"error ( num , ""invalid kilobyte number"" )"	315:4:6935:6973	6380306	0	True				
ANR	6381388	CallExpression	"error ( num , ""invalid kilobyte number"" )"		6380306	0					
ANR	6381389	Callee	error		6380306	0					
ANR	6381390	Identifier	error		6380306	0					
ANR	6381391	ArgumentList	num		6380306	1					
ANR	6381392	Argument	num		6380306	0					
ANR	6381393	Identifier	num		6380306	0					
ANR	6381394	Argument	"""invalid kilobyte number"""		6380306	1					
ANR	6381395	PrimaryExpression	"""invalid kilobyte number"""		6380306	0					
ANR	6381396	ElseStatement	else		6380306	0					
ANR	6381397	CompoundStatement		180:10:4273:4273	6380306	0					
ANR	6381398	Statement	if	327:4:7193:7194	6380306	0	True				
ANR	6381399	Statement	(	327:7:7196:7196	6380306	1	True				
ANR	6381400	Statement	sscanf	327:8:7197:7202	6380306	2	True				
ANR	6381401	Statement	(	327:15:7204:7204	6380306	3	True				
ANR	6381402	Statement	str	327:16:7205:7207	6380306	4	True				
ANR	6381403	Statement	","	327:19:7208:7208	6380306	5	True				
ANR	6381404	Statement	"""%"""	327:21:7210:7212	6380306	6	True				
ANR	6381405	Statement	PFMT64d	327:24:7213:7219	6380306	7	True				
ANR	6381406	Statement	"""%n"""	327:31:7220:7223	6380306	8	True				
ANR	6381407	Statement	","	327:35:7224:7224	6380306	9	True				
ANR	6381408	Statement	&	327:37:7226:7226	6380306	10	True				
ANR	6381409	Statement	ret	327:38:7227:7229	6380306	11	True				
ANR	6381410	Statement	","	327:41:7230:7230	6380306	12	True				
ANR	6381411	Statement	&	327:43:7232:7232	6380306	13	True				
ANR	6381412	Statement	chars_read	327:44:7233:7242	6380306	14	True				
ANR	6381413	Statement	)	327:54:7243:7243	6380306	15	True				
ANR	6381414	Statement	)	327:55:7244:7244	6380306	16	True				
ANR	6381415	CompoundStatement		181:57:4332:4332	6380306	17					
ANR	6381416	ExpressionStatement	ret *= MB	328:5:7253:7262	6380306	0	True				
ANR	6381417	AssignmentExpression	ret *= MB		6380306	0		*=			
ANR	6381418	Identifier	ret		6380306	0					
ANR	6381419	Identifier	MB		6380306	1					
ANR	6381420	BreakStatement	break ;	317:3:6983:6988	6380306	67	True				
ANR	6381421	Label	case 'M' :	318:2:6992:7000	6380306	68	True				
ANR	6381422	Label	case 'm' :	318:12:7002:7010	6380306	69	True				
ANR	6381423	IfStatement	"if ( strchr ( str , '.' ) )"		6380306	70					
ANR	6381424	Condition	"strchr ( str , '.' )"	319:7:7019:7035	6380306	0	True				
ANR	6381425	CallExpression	"strchr ( str , '.' )"		6380306	0					
ANR	6381426	Callee	strchr		6380306	0					
ANR	6381427	Identifier	strchr		6380306	0					
ANR	6381428	ArgumentList	str		6380306	1					
ANR	6381429	Argument	str		6380306	0					
ANR	6381430	Identifier	str		6380306	0					
ANR	6381431	Argument	'.'		6380306	1					
ANR	6381432	PrimaryExpression	'.'		6380306	0					
ANR	6381433	CompoundStatement		174:4:4130:4142	6380306	1					
ANR	6381434	IdentifierDeclStatement	double d = 0 ;	320:4:7044:7056	6380306	0	True				
ANR	6381435	IdentifierDecl	d = 0		6380306	0					
ANR	6381436	IdentifierDeclType	double		6380306	0					
ANR	6381437	Identifier	d		6380306	1					
ANR	6381438	AssignmentExpression	d = 0		6380306	2		=			
ANR	6381439	Identifier	d		6380306	0					
ANR	6381440	PrimaryExpression	0		6380306	1					
ANR	6381441	IfStatement	"if ( sscanf ( str , ""%lf%n"" , & d , & chars_read ) )"		6380306	1					
ANR	6381442	Condition	"sscanf ( str , ""%lf%n"" , & d , & chars_read )"	321:8:7066:7103	6380306	0	True				
ANR	6381443	CallExpression	"sscanf ( str , ""%lf%n"" , & d , & chars_read )"		6380306	0					
ANR	6381444	Callee	sscanf		6380306	0					
ANR	6381445	Identifier	sscanf		6380306	0					
ANR	6381446	ArgumentList	str		6380306	1					
ANR	6381447	Argument	str		6380306	0					
ANR	6381448	Identifier	str		6380306	0					
ANR	6381449	Argument	"""%lf%n"""		6380306	1					
ANR	6381450	PrimaryExpression	"""%lf%n"""		6380306	0					
ANR	6381451	Argument	& d		6380306	2					
ANR	6381452	UnaryOperationExpression	& d		6380306	0					
ANR	6381453	UnaryOperator	&		6380306	0					
ANR	6381454	Identifier	d		6380306	1					
ANR	6381455	Argument	& chars_read		6380306	3					
ANR	6381456	UnaryOperationExpression	& chars_read		6380306	0					
ANR	6381457	UnaryOperator	&		6380306	0					
ANR	6381458	Identifier	chars_read		6380306	1					
ANR	6381459	CompoundStatement		175:48:4192:4192	6380306	1					
ANR	6381460	ExpressionStatement	ret = ( ut64 ) ( d * MB )	322:5:7113:7133	6380306	0	True				
ANR	6381461	AssignmentExpression	ret = ( ut64 ) ( d * MB )		6380306	0		=			
ANR	6381462	Identifier	ret		6380306	0					
ANR	6381463	CastExpression	( ut64 ) ( d * MB )		6380306	1					
ANR	6381464	CastTarget	ut64		6380306	0					
ANR	6381465	MultiplicativeExpression	d * MB		6380306	1		*			
ANR	6381466	Identifier	d		6380306	0					
ANR	6381467	Identifier	MB		6380306	1					
ANR	6381468	ElseStatement	else		6380306	0					
ANR	6381469	CompoundStatement		177:11:4232:4232	6380306	0					
ANR	6381470	ExpressionStatement	zero_read = true	324:5:7153:7169	6380306	0	True				
ANR	6381471	AssignmentExpression	zero_read = true		6380306	0		=			
ANR	6381472	Identifier	zero_read		6380306	0					
ANR	6381473	Identifier	true		6380306	1					
ANR	6381474	ElseStatement	else		6380306	0					
ANR	6381475	CompoundStatement		183:11:4361:4361	6380306	0					
ANR	6381476	ExpressionStatement	zero_read = true	330:5:7282:7298	6380306	0	True				
ANR	6381477	AssignmentExpression	zero_read = true		6380306	0		=			
ANR	6381478	Identifier	zero_read		6380306	0					
ANR	6381479	Identifier	true		6380306	1					
ANR	6381480	IfStatement	if ( zero_read || chars_read != len_num )		6380306	71					
ANR	6381481	Condition	zero_read || chars_read != len_num	333:7:7318:7351	6380306	0	True				
ANR	6381482	OrExpression	zero_read || chars_read != len_num		6380306	0		||			
ANR	6381483	Identifier	zero_read		6380306	0					
ANR	6381484	EqualityExpression	chars_read != len_num		6380306	1		!=			
ANR	6381485	Identifier	chars_read		6380306	0					
ANR	6381486	Identifier	len_num		6380306	1					
ANR	6381487	CompoundStatement		187:43:4440:4440	6380306	1					
ANR	6381488	ExpressionStatement	"error ( num , ""invalid megabyte number"" )"	334:4:7360:7398	6380306	0	True				
ANR	6381489	CallExpression	"error ( num , ""invalid megabyte number"" )"		6380306	0					
ANR	6381490	Callee	error		6380306	0					
ANR	6381491	Identifier	error		6380306	0					
ANR	6381492	ArgumentList	num		6380306	1					
ANR	6381493	Argument	num		6380306	0					
ANR	6381494	Identifier	num		6380306	0					
ANR	6381495	Argument	"""invalid megabyte number"""		6380306	1					
ANR	6381496	PrimaryExpression	"""invalid megabyte number"""		6380306	0					
ANR	6381497	ElseStatement	else		6380306	0					
ANR	6381498	CompoundStatement		199:10:4698:4698	6380306	0					
ANR	6381499	Statement	if	346:4:7618:7619	6380306	0	True				
ANR	6381500	Statement	(	346:7:7621:7621	6380306	1	True				
ANR	6381501	Statement	sscanf	346:8:7622:7627	6380306	2	True				
ANR	6381502	Statement	(	346:15:7629:7629	6380306	3	True				
ANR	6381503	Statement	str	346:16:7630:7632	6380306	4	True				
ANR	6381504	Statement	","	346:19:7633:7633	6380306	5	True				
ANR	6381505	Statement	"""%"""	346:21:7635:7637	6380306	6	True				
ANR	6381506	Statement	PFMT64d	346:24:7638:7644	6380306	7	True				
ANR	6381507	Statement	"""%n"""	346:31:7645:7648	6380306	8	True				
ANR	6381508	Statement	","	346:35:7649:7649	6380306	9	True				
ANR	6381509	Statement	&	346:37:7651:7651	6380306	10	True				
ANR	6381510	Statement	ret	346:38:7652:7654	6380306	11	True				
ANR	6381511	Statement	","	346:41:7655:7655	6380306	12	True				
ANR	6381512	Statement	&	346:43:7657:7657	6380306	13	True				
ANR	6381513	Statement	chars_read	346:44:7658:7667	6380306	14	True				
ANR	6381514	Statement	)	346:54:7668:7668	6380306	15	True				
ANR	6381515	Statement	)	346:55:7669:7669	6380306	16	True				
ANR	6381516	CompoundStatement		200:57:4757:4757	6380306	17					
ANR	6381517	ExpressionStatement	ret *= GB	347:5:7678:7687	6380306	0	True				
ANR	6381518	AssignmentExpression	ret *= GB		6380306	0		*=			
ANR	6381519	Identifier	ret		6380306	0					
ANR	6381520	Identifier	GB		6380306	1					
ANR	6381521	BreakStatement	break ;	336:3:7408:7413	6380306	72	True				
ANR	6381522	Label	case 'G' :	337:2:7417:7425	6380306	73	True				
ANR	6381523	Label	case 'g' :	337:12:7427:7435	6380306	74	True				
ANR	6381524	IfStatement	"if ( strchr ( str , '.' ) )"		6380306	75					
ANR	6381525	Condition	"strchr ( str , '.' )"	338:7:7444:7460	6380306	0	True				
ANR	6381526	CallExpression	"strchr ( str , '.' )"		6380306	0					
ANR	6381527	Callee	strchr		6380306	0					
ANR	6381528	Identifier	strchr		6380306	0					
ANR	6381529	ArgumentList	str		6380306	1					
ANR	6381530	Argument	str		6380306	0					
ANR	6381531	Identifier	str		6380306	0					
ANR	6381532	Argument	'.'		6380306	1					
ANR	6381533	PrimaryExpression	'.'		6380306	0					
ANR	6381534	CompoundStatement		193:4:4555:4567	6380306	1					
ANR	6381535	IdentifierDeclStatement	double d = 0 ;	339:4:7469:7481	6380306	0	True				
ANR	6381536	IdentifierDecl	d = 0		6380306	0					
ANR	6381537	IdentifierDeclType	double		6380306	0					
ANR	6381538	Identifier	d		6380306	1					
ANR	6381539	AssignmentExpression	d = 0		6380306	2		=			
ANR	6381540	Identifier	d		6380306	0					
ANR	6381541	PrimaryExpression	0		6380306	1					
ANR	6381542	IfStatement	"if ( sscanf ( str , ""%lf%n"" , & d , & chars_read ) )"		6380306	1					
ANR	6381543	Condition	"sscanf ( str , ""%lf%n"" , & d , & chars_read )"	340:8:7491:7528	6380306	0	True				
ANR	6381544	CallExpression	"sscanf ( str , ""%lf%n"" , & d , & chars_read )"		6380306	0					
ANR	6381545	Callee	sscanf		6380306	0					
ANR	6381546	Identifier	sscanf		6380306	0					
ANR	6381547	ArgumentList	str		6380306	1					
ANR	6381548	Argument	str		6380306	0					
ANR	6381549	Identifier	str		6380306	0					
ANR	6381550	Argument	"""%lf%n"""		6380306	1					
ANR	6381551	PrimaryExpression	"""%lf%n"""		6380306	0					
ANR	6381552	Argument	& d		6380306	2					
ANR	6381553	UnaryOperationExpression	& d		6380306	0					
ANR	6381554	UnaryOperator	&		6380306	0					
ANR	6381555	Identifier	d		6380306	1					
ANR	6381556	Argument	& chars_read		6380306	3					
ANR	6381557	UnaryOperationExpression	& chars_read		6380306	0					
ANR	6381558	UnaryOperator	&		6380306	0					
ANR	6381559	Identifier	chars_read		6380306	1					
ANR	6381560	CompoundStatement		194:48:4617:4617	6380306	1					
ANR	6381561	ExpressionStatement	ret = ( ut64 ) ( d * GB )	341:5:7538:7558	6380306	0	True				
ANR	6381562	AssignmentExpression	ret = ( ut64 ) ( d * GB )		6380306	0		=			
ANR	6381563	Identifier	ret		6380306	0					
ANR	6381564	CastExpression	( ut64 ) ( d * GB )		6380306	1					
ANR	6381565	CastTarget	ut64		6380306	0					
ANR	6381566	MultiplicativeExpression	d * GB		6380306	1		*			
ANR	6381567	Identifier	d		6380306	0					
ANR	6381568	Identifier	GB		6380306	1					
ANR	6381569	ElseStatement	else		6380306	0					
ANR	6381570	CompoundStatement		196:11:4657:4657	6380306	0					
ANR	6381571	ExpressionStatement	zero_read = true	343:5:7578:7594	6380306	0	True				
ANR	6381572	AssignmentExpression	zero_read = true		6380306	0		=			
ANR	6381573	Identifier	zero_read		6380306	0					
ANR	6381574	Identifier	true		6380306	1					
ANR	6381575	ElseStatement	else		6380306	0					
ANR	6381576	CompoundStatement		202:11:4786:4786	6380306	0					
ANR	6381577	ExpressionStatement	zero_read = true	349:5:7707:7723	6380306	0	True				
ANR	6381578	AssignmentExpression	zero_read = true		6380306	0		=			
ANR	6381579	Identifier	zero_read		6380306	0					
ANR	6381580	Identifier	true		6380306	1					
ANR	6381581	IfStatement	if ( zero_read || chars_read != len_num )		6380306	76					
ANR	6381582	Condition	zero_read || chars_read != len_num	352:7:7743:7776	6380306	0	True				
ANR	6381583	OrExpression	zero_read || chars_read != len_num		6380306	0		||			
ANR	6381584	Identifier	zero_read		6380306	0					
ANR	6381585	EqualityExpression	chars_read != len_num		6380306	1		!=			
ANR	6381586	Identifier	chars_read		6380306	0					
ANR	6381587	Identifier	len_num		6380306	1					
ANR	6381588	CompoundStatement		206:43:4865:4865	6380306	1					
ANR	6381589	ExpressionStatement	"error ( num , ""invalid gigabyte number"" )"	353:4:7785:7823	6380306	0	True				
ANR	6381590	CallExpression	"error ( num , ""invalid gigabyte number"" )"		6380306	0					
ANR	6381591	Callee	error		6380306	0					
ANR	6381592	Identifier	error		6380306	0					
ANR	6381593	ArgumentList	num		6380306	1					
ANR	6381594	Argument	num		6380306	0					
ANR	6381595	Identifier	num		6380306	0					
ANR	6381596	Argument	"""invalid gigabyte number"""		6380306	1					
ANR	6381597	PrimaryExpression	"""invalid gigabyte number"""		6380306	0					
ANR	6381598	BreakStatement	break ;	355:3:7833:7838	6380306	77	True				
ANR	6381599	Label	default :	356:2:7842:7849	6380306	78	True				
ANR	6381600	Identifier	default		6380306	0					
ANR	6381601	ExpressionStatement	"ret = _strtoui64 ( str , & endptr , 10 )"	361:3:7945:7980	6380306	79	True				
ANR	6381602	AssignmentExpression	"ret = _strtoui64 ( str , & endptr , 10 )"		6380306	0		=			
ANR	6381603	Identifier	ret		6380306	0					
ANR	6381604	CallExpression	"_strtoui64 ( str , & endptr , 10 )"		6380306	1					
ANR	6381605	Callee	_strtoui64		6380306	0					
ANR	6381606	Identifier	_strtoui64		6380306	0					
ANR	6381607	ArgumentList	str		6380306	1					
ANR	6381608	Argument	str		6380306	0					
ANR	6381609	Identifier	str		6380306	0					
ANR	6381610	Argument	& endptr		6380306	1					
ANR	6381611	UnaryOperationExpression	& endptr		6380306	0					
ANR	6381612	UnaryOperator	&		6380306	0					
ANR	6381613	Identifier	endptr		6380306	1					
ANR	6381614	Argument	10		6380306	2					
ANR	6381615	PrimaryExpression	10		6380306	0					
ANR	6381616	ExpressionStatement	"ret = strtoull ( str , & endptr , 10 )"	364:3:7999:8032	6380306	80	True				
ANR	6381617	AssignmentExpression	"ret = strtoull ( str , & endptr , 10 )"		6380306	0		=			
ANR	6381618	Identifier	ret		6380306	0					
ANR	6381619	CallExpression	"strtoull ( str , & endptr , 10 )"		6380306	1					
ANR	6381620	Callee	strtoull		6380306	0					
ANR	6381621	Identifier	strtoull		6380306	0					
ANR	6381622	ArgumentList	str		6380306	1					
ANR	6381623	Argument	str		6380306	0					
ANR	6381624	Identifier	str		6380306	0					
ANR	6381625	Argument	& endptr		6380306	1					
ANR	6381626	UnaryOperationExpression	& endptr		6380306	0					
ANR	6381627	UnaryOperator	&		6380306	0					
ANR	6381628	Identifier	endptr		6380306	1					
ANR	6381629	Argument	10		6380306	2					
ANR	6381630	PrimaryExpression	10		6380306	0					
ANR	6381631	IfStatement	if ( ! IS_DIGIT ( * str ) || ( * endptr && * endptr != lch ) )		6380306	81					
ANR	6381632	Condition	! IS_DIGIT ( * str ) || ( * endptr && * endptr != lch )	365:7:8041:8087	6380306	0	True				
ANR	6381633	OrExpression	! IS_DIGIT ( * str ) || ( * endptr && * endptr != lch )		6380306	0		||			
ANR	6381634	UnaryOperationExpression	! IS_DIGIT ( * str )		6380306	0					
ANR	6381635	UnaryOperator	!		6380306	0					
ANR	6381636	CallExpression	IS_DIGIT ( * str )		6380306	1					
ANR	6381637	Callee	IS_DIGIT		6380306	0					
ANR	6381638	Identifier	IS_DIGIT		6380306	0					
ANR	6381639	ArgumentList	* str		6380306	1					
ANR	6381640	Argument	* str		6380306	0					
ANR	6381641	UnaryOperationExpression	* str		6380306	0					
ANR	6381642	UnaryOperator	*		6380306	0					
ANR	6381643	Identifier	str		6380306	1					
ANR	6381644	AndExpression	* endptr && * endptr != lch		6380306	1		&&			
ANR	6381645	UnaryOperationExpression	* endptr		6380306	0					
ANR	6381646	UnaryOperator	*		6380306	0					
ANR	6381647	Identifier	endptr		6380306	1					
ANR	6381648	EqualityExpression	* endptr != lch		6380306	1		!=			
ANR	6381649	UnaryOperationExpression	* endptr		6380306	0					
ANR	6381650	UnaryOperator	*		6380306	0					
ANR	6381651	Identifier	endptr		6380306	1					
ANR	6381652	Identifier	lch		6380306	1					
ANR	6381653	CompoundStatement		219:56:5176:5176	6380306	1					
ANR	6381654	ExpressionStatement	"error ( num , ""unknown symbol"" )"	366:4:8096:8125	6380306	0	True				
ANR	6381655	CallExpression	"error ( num , ""unknown symbol"" )"		6380306	0					
ANR	6381656	Callee	error		6380306	0					
ANR	6381657	Identifier	error		6380306	0					
ANR	6381658	ArgumentList	num		6380306	1					
ANR	6381659	Argument	num		6380306	0					
ANR	6381660	Identifier	num		6380306	0					
ANR	6381661	Argument	"""unknown symbol"""		6380306	1					
ANR	6381662	PrimaryExpression	"""unknown symbol"""		6380306	0					
ANR	6381663	BreakStatement	break ;	368:3:8135:8140	6380306	82	True				
ANR	6381664	IfStatement	if ( num )		6380306	18					
ANR	6381665	Condition	num	371:5:8154:8156	6380306	0	True				
ANR	6381666	Identifier	num		6380306	0					
ANR	6381667	CompoundStatement		225:10:5245:5245	6380306	1					
ANR	6381668	ExpressionStatement	num -> value = ret	372:2:8163:8179	6380306	0	True				
ANR	6381669	AssignmentExpression	num -> value = ret		6380306	0		=			
ANR	6381670	PtrMemberAccess	num -> value		6380306	0					
ANR	6381671	Identifier	num		6380306	0					
ANR	6381672	Identifier	value		6380306	1					
ANR	6381673	Identifier	ret		6380306	1					
ANR	6381674	ReturnStatement	return ret ;	374:1:8185:8195	6380306	19	True				
ANR	6381675	Identifier	ret		6380306	0					
ANR	6381676	ReturnType	R_API ut64		6380306	1					
ANR	6381677	Identifier	r_num_get		6380306	2					
ANR	6381678	ParameterList	"RNum * num , const char * str"		6380306	3					
ANR	6381679	Parameter	RNum * num	147:21:2885:2893	6380306	0	True				
ANR	6381680	ParameterType	RNum *		6380306	0					
ANR	6381681	Identifier	num		6380306	1					
ANR	6381682	Parameter	const char * str	147:32:2896:2910	6380306	1	True				
ANR	6381683	ParameterType	const char *		6380306	0					
ANR	6381684	Identifier	str		6380306	1					
ANR	6381685	CFGEntryNode	ENTRY		6380306		True				
ANR	6381686	CFGExitNode	EXIT		6380306		True				
ANR	6381687	Symbol	num -> nc . errors		6380306						
ANR	6381688	Symbol	UT32_MAX		6380306						
ANR	6381689	Symbol	chars_read		6380306						
ANR	6381690	Symbol	lodash		6380306						
ANR	6381691	Symbol	tolower		6380306						
ANR	6381692	Symbol	num		6380306						
ANR	6381693	Symbol	& ok		6380306						
ANR	6381694	Symbol	strchr		6380306						
ANR	6381695	Symbol	strncmp		6380306						
ANR	6381696	Symbol	strlen		6380306						
ANR	6381697	Symbol	len		6380306						
ANR	6381698	Symbol	MB		6380306						
ANR	6381699	Symbol	* ( str + 1 )		6380306						
ANR	6381700	Symbol	UT16_MAX		6380306						
ANR	6381701	Symbol	zero_read		6380306						
ANR	6381702	Symbol	ret		6380306						
ANR	6381703	Symbol	NULL		6380306						
ANR	6381704	Symbol	endptr		6380306						
ANR	6381705	Symbol	* endptr		6380306						
ANR	6381706	Symbol	& endptr		6380306						
ANR	6381707	Symbol	str		6380306						
ANR	6381708	Symbol	sscanf		6380306						
ANR	6381709	Symbol	true		6380306						
ANR	6381710	Symbol	num -> nc . under_calc		6380306						
ANR	6381711	Symbol	r_num_tailff		6380306						
ANR	6381712	Symbol	lch		6380306						
ANR	6381713	Symbol	num -> value		6380306						
ANR	6381714	Symbol	num -> callback		6380306						
ANR	6381715	Symbol	strtoull		6380306						
ANR	6381716	Symbol	KB		6380306						
ANR	6381717	Symbol	* str		6380306						
ANR	6381718	Symbol	GB		6380306						
ANR	6381719	Symbol	ok		6380306						
ANR	6381720	Symbol	UT64_MAX		6380306						
ANR	6381721	Symbol	& chars_read		6380306						
ANR	6381722	Symbol	num -> nc		6380306						
ANR	6381723	Symbol	atoi		6380306						
ANR	6381724	Symbol	a		6380306						
ANR	6381725	Symbol	d		6380306						
ANR	6381726	Symbol	& a		6380306						
ANR	6381727	Symbol	false		6380306						
ANR	6381728	Symbol	i		6380306						
ANR	6381729	Symbol	len_num		6380306						
ANR	6381730	Symbol	j		6380306						
ANR	6381731	Symbol	num -> userptr		6380306						
ANR	6381732	Symbol	& d		6380306						
ANR	6381733	Symbol	_strtoui64		6380306						
ANR	6381734	Symbol	IS_DIGIT		6380306						
ANR	6381735	Symbol	* num		6380306						
ANR	6381736	Symbol	s		6380306						
ANR	6381737	Symbol	* i		6380306						
ANR	6381738	Symbol	UT8_MAX		6380306						
ANR	6381739	Symbol	x		6380306						
ANR	6381740	Symbol	& s		6380306						
ANR	6381741	Symbol	strdup		6380306						
ANR	6381742	Symbol	* len		6380306						
ANR	6381743	Function	r_num_op	378:0:8220:8524							
ANR	6381744	FunctionDef	"r_num_op (RNum * num , char op , ut64 a , ut64 b)"		6381743	0					
ANR	6381745	CompoundStatement		378:57:8277:8524	6381743	0					
ANR	6381746	SwitchStatement	switch ( op )		6381743	0					
ANR	6381747	Condition	op	379:9:8288:8289	6381743	0	True				
ANR	6381748	Identifier	op		6381743	0					
ANR	6381749	CompoundStatement		2:13:14:14	6381743	1					
ANR	6381750	Label	case '+' :	380:1:8295:8303	6381743	0	True				
ANR	6381751	ReturnStatement	return a + b ;	380:11:8305:8317	6381743	1	True				
ANR	6381752	AdditiveExpression	a + b		6381743	0		+			
ANR	6381753	Identifier	a		6381743	0					
ANR	6381754	Identifier	b		6381743	1					
ANR	6381755	Label	case '-' :	381:1:8320:8328	6381743	2	True				
ANR	6381756	ReturnStatement	return a - b ;	381:11:8330:8342	6381743	3	True				
ANR	6381757	AdditiveExpression	a - b		6381743	0		-			
ANR	6381758	Identifier	a		6381743	0					
ANR	6381759	Identifier	b		6381743	1					
ANR	6381760	Label	case '*' :	382:1:8345:8353	6381743	4	True				
ANR	6381761	ReturnStatement	return a * b ;	382:11:8355:8367	6381743	5	True				
ANR	6381762	MultiplicativeExpression	a * b		6381743	0		*			
ANR	6381763	Identifier	a		6381743	0					
ANR	6381764	Identifier	b		6381743	1					
ANR	6381765	Label	case '/' :	383:1:8370:8378	6381743	6	True				
ANR	6381766	IfStatement	if ( ! b && num )		6381743	7					
ANR	6381767	Condition	! b && num	384:6:8386:8394	6381743	0	True				
ANR	6381768	AndExpression	! b && num		6381743	0		&&			
ANR	6381769	UnaryOperationExpression	! b		6381743	0					
ANR	6381770	UnaryOperator	!		6381743	0					
ANR	6381771	Identifier	b		6381743	1					
ANR	6381772	Identifier	num		6381743	1					
ANR	6381773	ExpressionStatement	num -> dbz = 1	384:17:8397:8409	6381743	1	True				
ANR	6381774	AssignmentExpression	num -> dbz = 1		6381743	0		=			
ANR	6381775	PtrMemberAccess	num -> dbz		6381743	0					
ANR	6381776	Identifier	num		6381743	0					
ANR	6381777	Identifier	dbz		6381743	1					
ANR	6381778	PrimaryExpression	1		6381743	1					
ANR	6381779	ReturnStatement	return b ? a / b : 0 ;	385:2:8413:8433	6381743	8	True				
ANR	6381780	ConditionalExpression	b ? a / b : 0		6381743	0					
ANR	6381781	Condition	b		6381743	0					
ANR	6381782	Identifier	b		6381743	0					
ANR	6381783	MultiplicativeExpression	a / b		6381743	1		/			
ANR	6381784	Identifier	a		6381743	0					
ANR	6381785	Identifier	b		6381743	1					
ANR	6381786	PrimaryExpression	0		6381743	2					
ANR	6381787	Label	case '&' :	386:1:8436:8444	6381743	9	True				
ANR	6381788	ReturnStatement	return a & b ;	386:11:8446:8458	6381743	10	True				
ANR	6381789	BitAndExpression	a & b		6381743	0		&			
ANR	6381790	Identifier	a		6381743	0					
ANR	6381791	Identifier	b		6381743	1					
ANR	6381792	Label	case '|' :	387:1:8461:8469	6381743	11	True				
ANR	6381793	ReturnStatement	return a | b ;	387:11:8471:8483	6381743	12	True				
ANR	6381794	InclusiveOrExpression	a | b		6381743	0		|			
ANR	6381795	Identifier	a		6381743	0					
ANR	6381796	Identifier	b		6381743	1					
ANR	6381797	Label	case '^' :	388:1:8486:8494	6381743	13	True				
ANR	6381798	ReturnStatement	return a ^ b ;	388:11:8496:8508	6381743	14	True				
ANR	6381799	ExclusiveOrExpression	a ^ b		6381743	0		^			
ANR	6381800	Identifier	a		6381743	0					
ANR	6381801	Identifier	b		6381743	1					
ANR	6381802	ReturnStatement	return b ;	390:1:8514:8522	6381743	1	True				
ANR	6381803	Identifier	b		6381743	0					
ANR	6381804	ReturnType	static ut64		6381743	1					
ANR	6381805	Identifier	r_num_op		6381743	2					
ANR	6381806	ParameterList	"RNum * num , char op , ut64 a , ut64 b"		6381743	3					
ANR	6381807	Parameter	RNum * num	378:21:8241:8249	6381743	0	True				
ANR	6381808	ParameterType	RNum *		6381743	0					
ANR	6381809	Identifier	num		6381743	1					
ANR	6381810	Parameter	char op	378:32:8252:8258	6381743	1	True				
ANR	6381811	ParameterType	char		6381743	0					
ANR	6381812	Identifier	op		6381743	1					
ANR	6381813	Parameter	ut64 a	378:41:8261:8266	6381743	2	True				
ANR	6381814	ParameterType	ut64		6381743	0					
ANR	6381815	Identifier	a		6381743	1					
ANR	6381816	Parameter	ut64 b	378:49:8269:8274	6381743	3	True				
ANR	6381817	ParameterType	ut64		6381743	0					
ANR	6381818	Identifier	b		6381743	1					
ANR	6381819	CFGEntryNode	ENTRY		6381743		True				
ANR	6381820	CFGExitNode	EXIT		6381743		True				
ANR	6381821	Symbol	* num		6381743						
ANR	6381822	Symbol	op		6381743						
ANR	6381823	Symbol	a		6381743						
ANR	6381824	Symbol	b		6381743						
ANR	6381825	Symbol	num		6381743						
ANR	6381826	Symbol	num -> dbz		6381743						
ANR	6381827	Function	r_num_math_internal	393:6:8533:8873							
ANR	6381828	FunctionDef	"r_num_math_internal (RNum * num , char * s)"		6381827	0					
ANR	6381829	CompoundStatement		393:58:8585:8873	6381827	0					
ANR	6381830	Statement	ut64	394:1:8588:8591	6381827	0	True				
ANR	6381831	Statement	ret	394:6:8593:8595	6381827	1	True				
ANR	6381832	Statement	=	394:10:8597:8597	6381827	2	True				
ANR	6381833	Statement	0L	394:12:8599:8600	6381827	3	True				
ANR	6381834	ExpressionStatement	L	394:14:8601:8602	6381827	4	True				
ANR	6381835	Identifier	L		6381827	0					
ANR	6381836	IdentifierDeclStatement	char * p = s ;	395:1:8605:8616	6381827	5	True				
ANR	6381837	IdentifierDecl	* p = s		6381827	0					
ANR	6381838	IdentifierDeclType	char *		6381827	0					
ANR	6381839	Identifier	p		6381827	1					
ANR	6381840	AssignmentExpression	* p = s		6381827	2		=			
ANR	6381841	Identifier	s		6381827	0					
ANR	6381842	Identifier	s		6381827	1					
ANR	6381843	IdentifierDeclStatement	"int i , nop , op = 0 ;"	396:1:8619:8637	6381827	6	True				
ANR	6381844	IdentifierDecl	i		6381827	0					
ANR	6381845	IdentifierDeclType	int		6381827	0					
ANR	6381846	Identifier	i		6381827	1					
ANR	6381847	IdentifierDecl	nop		6381827	1					
ANR	6381848	IdentifierDeclType	int		6381827	0					
ANR	6381849	Identifier	nop		6381827	1					
ANR	6381850	IdentifierDecl	op = 0		6381827	2					
ANR	6381851	IdentifierDeclType	int		6381827	0					
ANR	6381852	Identifier	op		6381827	1					
ANR	6381853	AssignmentExpression	op = 0		6381827	2		=			
ANR	6381854	Identifier	op		6381827	0					
ANR	6381855	PrimaryExpression	0		6381827	1					
ANR	6381856	ForStatement	for ( i = 0 ; s [ i ] ; i ++ )		6381827	7					
ANR	6381857	ForInit	i = 0 ;	397:6:8645:8648	6381827	0	True				
ANR	6381858	AssignmentExpression	i = 0		6381827	0		=			
ANR	6381859	Identifier	i		6381827	0					
ANR	6381860	PrimaryExpression	0		6381827	1					
ANR	6381861	Condition	s [ i ]	397:11:8650:8653	6381827	1	True				
ANR	6381862	ArrayIndexing	s [ i ]		6381827	0					
ANR	6381863	Identifier	s		6381827	0					
ANR	6381864	Identifier	i		6381827	1					
ANR	6381865	PostIncDecOperationExpression	i ++	397:17:8656:8658	6381827	2	True				
ANR	6381866	Identifier	i		6381827	0					
ANR	6381867	IncDec	++		6381827	1					
ANR	6381868	CompoundStatement		5:22:75:75	6381827	3					
ANR	6381869	IfStatement	if ( r_num_is_op ( s [ i ] ) )		6381827	0					
ANR	6381870	Condition	r_num_is_op ( s [ i ] )	398:6:8669:8686	6381827	0	True				
ANR	6381871	CallExpression	r_num_is_op ( s [ i ] )		6381827	0					
ANR	6381872	Callee	r_num_is_op		6381827	0					
ANR	6381873	Identifier	r_num_is_op		6381827	0					
ANR	6381874	ArgumentList	s [ i ]		6381827	1					
ANR	6381875	Argument	s [ i ]		6381827	0					
ANR	6381876	ArrayIndexing	s [ i ]		6381827	0					
ANR	6381877	Identifier	s		6381827	0					
ANR	6381878	Identifier	i		6381827	1					
ANR	6381879	CompoundStatement		6:26:103:103	6381827	1					
ANR	6381880	ExpressionStatement	nop = s [ i ]	399:3:8694:8704	6381827	0	True				
ANR	6381881	AssignmentExpression	nop = s [ i ]		6381827	0		=			
ANR	6381882	Identifier	nop		6381827	0					
ANR	6381883	ArrayIndexing	s [ i ]		6381827	1					
ANR	6381884	Identifier	s		6381827	0					
ANR	6381885	Identifier	i		6381827	1					
ANR	6381886	ExpressionStatement	s [ i ] = '\\0'	399:15:8706:8717	6381827	1	True				
ANR	6381887	AssignmentExpression	s [ i ] = '\\0'		6381827	0		=			
ANR	6381888	ArrayIndexing	s [ i ]		6381827	0					
ANR	6381889	Identifier	s		6381827	0					
ANR	6381890	Identifier	i		6381827	1					
ANR	6381891	PrimaryExpression	'\\0'		6381827	1					
ANR	6381892	ExpressionStatement	"ret = r_num_op ( num , op , ret , r_num_get ( num , p ) )"	400:3:8722:8771	6381827	2	True				
ANR	6381893	AssignmentExpression	"ret = r_num_op ( num , op , ret , r_num_get ( num , p ) )"		6381827	0		=			
ANR	6381894	Identifier	ret		6381827	0					
ANR	6381895	CallExpression	"r_num_op ( num , op , ret , r_num_get ( num , p ) )"		6381827	1					
ANR	6381896	Callee	r_num_op		6381827	0					
ANR	6381897	Identifier	r_num_op		6381827	0					
ANR	6381898	ArgumentList	num		6381827	1					
ANR	6381899	Argument	num		6381827	0					
ANR	6381900	Identifier	num		6381827	0					
ANR	6381901	Argument	op		6381827	1					
ANR	6381902	Identifier	op		6381827	0					
ANR	6381903	Argument	ret		6381827	2					
ANR	6381904	Identifier	ret		6381827	0					
ANR	6381905	Argument	"r_num_get ( num , p )"		6381827	3					
ANR	6381906	CallExpression	"r_num_get ( num , p )"		6381827	0					
ANR	6381907	Callee	r_num_get		6381827	0					
ANR	6381908	Identifier	r_num_get		6381827	0					
ANR	6381909	ArgumentList	num		6381827	1					
ANR	6381910	Argument	num		6381827	0					
ANR	6381911	Identifier	num		6381827	0					
ANR	6381912	Argument	p		6381827	1					
ANR	6381913	Identifier	p		6381827	0					
ANR	6381914	ExpressionStatement	op = s [ i ] = nop	401:3:8776:8791	6381827	3	True				
ANR	6381915	AssignmentExpression	op = s [ i ] = nop		6381827	0		=			
ANR	6381916	Identifier	op		6381827	0					
ANR	6381917	AssignmentExpression	s [ i ] = nop		6381827	1		=			
ANR	6381918	ArrayIndexing	s [ i ]		6381827	0					
ANR	6381919	Identifier	s		6381827	0					
ANR	6381920	Identifier	i		6381827	1					
ANR	6381921	Identifier	nop		6381827	1					
ANR	6381922	ExpressionStatement	p = s + i + 1	401:20:8793:8806	6381827	4	True				
ANR	6381923	AssignmentExpression	p = s + i + 1		6381827	0		=			
ANR	6381924	Identifier	p		6381827	0					
ANR	6381925	AdditiveExpression	s + i + 1		6381827	1		+			
ANR	6381926	Identifier	s		6381827	0					
ANR	6381927	AdditiveExpression	i + 1		6381827	1		+			
ANR	6381928	Identifier	i		6381827	0					
ANR	6381929	PrimaryExpression	1		6381827	1					
ANR	6381930	BreakStatement	break ;	402:3:8811:8816	6381827	5	True				
ANR	6381931	ReturnStatement	"return r_num_op ( op , ret , r_num_get ( num , p ) ) ;"	405:1:8826:8871	6381827	8	True				
ANR	6381932	CallExpression	"r_num_op ( op , ret , r_num_get ( num , p ) )"		6381827	0					
ANR	6381933	Callee	r_num_op		6381827	0					
ANR	6381934	Identifier	r_num_op		6381827	0					
ANR	6381935	ArgumentList	op		6381827	1					
ANR	6381936	Argument	op		6381827	0					
ANR	6381937	Identifier	op		6381827	0					
ANR	6381938	Argument	ret		6381827	1					
ANR	6381939	Identifier	ret		6381827	0					
ANR	6381940	Argument	"r_num_get ( num , p )"		6381827	2					
ANR	6381941	CallExpression	"r_num_get ( num , p )"		6381827	0					
ANR	6381942	Callee	r_num_get		6381827	0					
ANR	6381943	Identifier	r_num_get		6381827	0					
ANR	6381944	ArgumentList	num		6381827	1					
ANR	6381945	Argument	num		6381827	0					
ANR	6381946	Identifier	num		6381827	0					
ANR	6381947	Argument	p		6381827	1					
ANR	6381948	Identifier	p		6381827	0					
ANR	6381949	ReturnType	static ut64		6381827	1					
ANR	6381950	Identifier	r_num_math_internal		6381827	2					
ANR	6381951	ParameterList	"RNum * num , char * s"		6381827	3					
ANR	6381952	Parameter	RNum * num	393:38:8565:8573	6381827	0	True				
ANR	6381953	ParameterType	RNum *		6381827	0					
ANR	6381954	Identifier	num		6381827	1					
ANR	6381955	Parameter	char * s	393:49:8576:8582	6381827	1	True				
ANR	6381956	ParameterType	char *		6381827	0					
ANR	6381957	Identifier	s		6381827	1					
ANR	6381958	CFGEntryNode	ENTRY		6381827		True				
ANR	6381959	CFGExitNode	EXIT		6381827		True				
ANR	6381960	Symbol	p		6381827						
ANR	6381961	Symbol	ret		6381827						
ANR	6381962	Symbol	op		6381827						
ANR	6381963	Symbol	s		6381827						
ANR	6381964	Symbol	* i		6381827						
ANR	6381965	Symbol	num		6381827						
ANR	6381966	Symbol	i		6381827						
ANR	6381967	Symbol	r_num_op		6381827						
ANR	6381968	Symbol	r_num_is_op		6381827						
ANR	6381969	Symbol	r_num_get		6381827						
ANR	6381970	Symbol	* s		6381827						
ANR	6381971	Symbol	nop		6381827						
ANR	6381972	Function	r_num_math	409:0:8905:10278							
ANR	6381973	FunctionDef	"r_num_math (RNum * num , const char * str)"		6381972	0					
ANR	6381974	CompoundStatement		409:50:8955:10278	6381972	0					
ANR	6381975	IdentifierDeclStatement	ut64 ret ;	411:1:8977:8985	6381972	0	True				
ANR	6381976	IdentifierDecl	ret		6381972	0					
ANR	6381977	IdentifierDeclType	ut64		6381972	0					
ANR	6381978	Identifier	ret		6381972	1					
ANR	6381979	IdentifierDeclStatement	const char * err = NULL ;	412:1:8988:9010	6381972	1	True				
ANR	6381980	IdentifierDecl	* err = NULL		6381972	0					
ANR	6381981	IdentifierDeclType	const char *		6381972	0					
ANR	6381982	Identifier	err		6381972	1					
ANR	6381983	AssignmentExpression	* err = NULL		6381972	2		=			
ANR	6381984	Identifier	NULL		6381972	0					
ANR	6381985	Identifier	NULL		6381972	1					
ANR	6381986	IfStatement	if ( ! str || ! * str )		6381972	2					
ANR	6381987	Condition	! str || ! * str	413:5:9017:9029	6381972	0	True				
ANR	6381988	OrExpression	! str || ! * str		6381972	0		||			
ANR	6381989	UnaryOperationExpression	! str		6381972	0					
ANR	6381990	UnaryOperator	!		6381972	0					
ANR	6381991	Identifier	str		6381972	1					
ANR	6381992	UnaryOperationExpression	! * str		6381972	1					
ANR	6381993	UnaryOperator	!		6381972	0					
ANR	6381994	UnaryOperationExpression	* str		6381972	1					
ANR	6381995	UnaryOperator	*		6381972	0					
ANR	6381996	Identifier	str		6381972	1					
ANR	6381997	CompoundStatement		5:20:76:76	6381972	1					
ANR	6381998	Statement	return	414:2:9036:9041	6381972	0	True				
ANR	6381999	Statement	0L	414:9:9043:9044	6381972	1	True				
ANR	6382000	ExpressionStatement	L	414:11:9045:9046	6381972	2	True				
ANR	6382001	Identifier	L		6381972	0					
ANR	6382002	IfStatement	if ( num )		6381972	3					
ANR	6382003	Condition	num	417:5:9091:9093	6381972	0	True				
ANR	6382004	Identifier	num		6381972	0					
ANR	6382005	CompoundStatement		9:10:140:140	6381972	1					
ANR	6382006	ExpressionStatement	num -> dbz = 0	418:2:9100:9112	6381972	0	True				
ANR	6382007	AssignmentExpression	num -> dbz = 0		6381972	0		=			
ANR	6382008	PtrMemberAccess	num -> dbz		6381972	0					
ANR	6382009	Identifier	num		6381972	0					
ANR	6382010	Identifier	dbz		6381972	1					
ANR	6382011	PrimaryExpression	0		6381972	1					
ANR	6382012	ExpressionStatement	"ret = r_num_calc ( num , str , & err )"	420:1:9118:9151	6381972	4	True				
ANR	6382013	AssignmentExpression	"ret = r_num_calc ( num , str , & err )"		6381972	0		=			
ANR	6382014	Identifier	ret		6381972	0					
ANR	6382015	CallExpression	"r_num_calc ( num , str , & err )"		6381972	1					
ANR	6382016	Callee	r_num_calc		6381972	0					
ANR	6382017	Identifier	r_num_calc		6381972	0					
ANR	6382018	ArgumentList	num		6381972	1					
ANR	6382019	Argument	num		6381972	0					
ANR	6382020	Identifier	num		6381972	0					
ANR	6382021	Argument	str		6381972	1					
ANR	6382022	Identifier	str		6381972	0					
ANR	6382023	Argument	& err		6381972	2					
ANR	6382024	UnaryOperationExpression	& err		6381972	0					
ANR	6382025	UnaryOperator	&		6381972	0					
ANR	6382026	Identifier	err		6381972	1					
ANR	6382027	IfStatement	if ( err )		6381972	5					
ANR	6382028	Condition	err	421:5:9158:9160	6381972	0	True				
ANR	6382029	Identifier	err		6381972	0					
ANR	6382030	CompoundStatement		13:10:207:207	6381972	1					
ANR	6382031	ExpressionStatement	"eprintf ( ""r_num_calc error: (%s) in (%s)\\n"" , err , str )"	422:2:9167:9221	6381972	0	True				
ANR	6382032	CallExpression	"eprintf ( ""r_num_calc error: (%s) in (%s)\\n"" , err , str )"		6381972	0					
ANR	6382033	Callee	eprintf		6381972	0					
ANR	6382034	Identifier	eprintf		6381972	0					
ANR	6382035	ArgumentList	"""r_num_calc error: (%s) in (%s)\\n"""		6381972	1					
ANR	6382036	Argument	"""r_num_calc error: (%s) in (%s)\\n"""		6381972	0					
ANR	6382037	PrimaryExpression	"""r_num_calc error: (%s) in (%s)\\n"""		6381972	0					
ANR	6382038	Argument	err		6381972	1					
ANR	6382039	Identifier	err		6381972	0					
ANR	6382040	Argument	str		6381972	2					
ANR	6382041	Identifier	str		6381972	0					
ANR	6382042	IfStatement	if ( num )		6381972	6					
ANR	6382043	Condition	num	424:5:9231:9233	6381972	0	True				
ANR	6382044	Identifier	num		6381972	0					
ANR	6382045	CompoundStatement		16:10:280:280	6381972	1					
ANR	6382046	ExpressionStatement	num -> value = ret	425:2:9240:9256	6381972	0	True				
ANR	6382047	AssignmentExpression	num -> value = ret		6381972	0		=			
ANR	6382048	PtrMemberAccess	num -> value		6381972	0					
ANR	6382049	Identifier	num		6381972	0					
ANR	6382050	Identifier	value		6381972	1					
ANR	6382051	Identifier	ret		6381972	1					
ANR	6382052	ReturnStatement	return ret ;	427:1:9262:9272	6381972	7	True				
ANR	6382053	Identifier	ret		6381972	0					
ANR	6382054	ReturnType	R_API ut64		6381972	1					
ANR	6382055	Identifier	r_num_math		6381972	2					
ANR	6382056	ParameterList	"RNum * num , const char * str"		6381972	3					
ANR	6382057	Parameter	RNum * num	409:22:8927:8935	6381972	0	True				
ANR	6382058	ParameterType	RNum *		6381972	0					
ANR	6382059	Identifier	num		6381972	1					
ANR	6382060	Parameter	const char * str	409:33:8938:8952	6381972	1	True				
ANR	6382061	ParameterType	const char *		6381972	0					
ANR	6382062	Identifier	str		6381972	1					
ANR	6382063	CFGEntryNode	ENTRY		6381972		True				
ANR	6382064	CFGExitNode	EXIT		6381972		True				
ANR	6382065	Symbol	str		6381972						
ANR	6382066	Symbol	ret		6381972						
ANR	6382067	Symbol	* num		6381972						
ANR	6382068	Symbol	num -> value		6381972						
ANR	6382069	Symbol	NULL		6381972						
ANR	6382070	Symbol	err		6381972						
ANR	6382071	Symbol	r_num_calc		6381972						
ANR	6382072	Symbol	num		6381972						
ANR	6382073	Symbol	num -> dbz		6381972						
ANR	6382074	Symbol	* str		6381972						
ANR	6382075	Symbol	& err		6381972						
ANR	6382076	Function	r_num_is_float	483:0:10281:10418							
ANR	6382077	FunctionDef	"r_num_is_float (RNum * num , const char * str)"		6382076	0					
ANR	6382078	CompoundStatement		483:53:10334:10418	6382076	0					
ANR	6382079	ReturnStatement	"return ( IS_DIGIT ( * str ) && ( strchr ( str , '.' ) || str [ strlen ( str ) - 1 ] == 'f' ) ) ;"	484:1:10337:10416	6382076	0	True				
ANR	6382080	AndExpression	"IS_DIGIT ( * str ) && ( strchr ( str , '.' ) || str [ strlen ( str ) - 1 ] == 'f' )"		6382076	0		&&			
ANR	6382081	CallExpression	IS_DIGIT ( * str )		6382076	0					
ANR	6382082	Callee	IS_DIGIT		6382076	0					
ANR	6382083	Identifier	IS_DIGIT		6382076	0					
ANR	6382084	ArgumentList	* str		6382076	1					
ANR	6382085	Argument	* str		6382076	0					
ANR	6382086	UnaryOperationExpression	* str		6382076	0					
ANR	6382087	UnaryOperator	*		6382076	0					
ANR	6382088	Identifier	str		6382076	1					
ANR	6382089	OrExpression	"strchr ( str , '.' ) || str [ strlen ( str ) - 1 ] == 'f'"		6382076	1		||			
ANR	6382090	CallExpression	"strchr ( str , '.' )"		6382076	0					
ANR	6382091	Callee	strchr		6382076	0					
ANR	6382092	Identifier	strchr		6382076	0					
ANR	6382093	ArgumentList	str		6382076	1					
ANR	6382094	Argument	str		6382076	0					
ANR	6382095	Identifier	str		6382076	0					
ANR	6382096	Argument	'.'		6382076	1					
ANR	6382097	PrimaryExpression	'.'		6382076	0					
ANR	6382098	EqualityExpression	str [ strlen ( str ) - 1 ] == 'f'		6382076	1		==			
ANR	6382099	ArrayIndexing	str [ strlen ( str ) - 1 ]		6382076	0					
ANR	6382100	Identifier	str		6382076	0					
ANR	6382101	AdditiveExpression	strlen ( str ) - 1		6382076	1		-			
ANR	6382102	CallExpression	strlen ( str )		6382076	0					
ANR	6382103	Callee	strlen		6382076	0					
ANR	6382104	Identifier	strlen		6382076	0					
ANR	6382105	ArgumentList	str		6382076	1					
ANR	6382106	Argument	str		6382076	0					
ANR	6382107	Identifier	str		6382076	0					
ANR	6382108	PrimaryExpression	1		6382076	1					
ANR	6382109	PrimaryExpression	'f'		6382076	1					
ANR	6382110	ReturnType	R_API int		6382076	1					
ANR	6382111	Identifier	r_num_is_float		6382076	2					
ANR	6382112	ParameterList	"RNum * num , const char * str"		6382076	3					
ANR	6382113	Parameter	RNum * num	483:25:10306:10314	6382076	0	True				
ANR	6382114	ParameterType	RNum *		6382076	0					
ANR	6382115	Identifier	num		6382076	1					
ANR	6382116	Parameter	const char * str	483:36:10317:10331	6382076	1	True				
ANR	6382117	ParameterType	const char *		6382076	0					
ANR	6382118	Identifier	str		6382076	1					
ANR	6382119	CFGEntryNode	ENTRY		6382076		True				
ANR	6382120	CFGExitNode	EXIT		6382076		True				
ANR	6382121	Symbol	str		6382076						
ANR	6382122	Symbol	strlen		6382076						
ANR	6382123	Symbol	* strlen		6382076						
ANR	6382124	Symbol	num		6382076						
ANR	6382125	Symbol	strchr		6382076						
ANR	6382126	Symbol	* str		6382076						
ANR	6382127	Symbol	IS_DIGIT		6382076						
ANR	6382128	Function	r_num_get_float	487:0:10421:10542							
ANR	6382129	FunctionDef	"r_num_get_float (RNum * num , const char * str)"		6382128	0					
ANR	6382130	CompoundStatement		487:57:10478:10542	6382128	0					
ANR	6382131	IdentifierDeclStatement	double d = 0.0f ;	488:1:10481:10496	6382128	0	True				
ANR	6382132	IdentifierDecl	d = 0.0f		6382128	0					
ANR	6382133	IdentifierDeclType	double		6382128	0					
ANR	6382134	Identifier	d		6382128	1					
ANR	6382135	AssignmentExpression	d = 0.0f		6382128	2		=			
ANR	6382136	Identifier	d		6382128	0					
ANR	6382137	PrimaryExpression	0.0f		6382128	1					
ANR	6382138	ExpressionStatement	"( void ) sscanf ( str , ""%lf"" , & d )"	489:1:10499:10529	6382128	1	True				
ANR	6382139	CastExpression	"( void ) sscanf ( str , ""%lf"" , & d )"		6382128	0					
ANR	6382140	CastTarget	void		6382128	0					
ANR	6382141	CallExpression	"sscanf ( str , ""%lf"" , & d )"		6382128	1					
ANR	6382142	Callee	sscanf		6382128	0					
ANR	6382143	Identifier	sscanf		6382128	0					
ANR	6382144	ArgumentList	str		6382128	1					
ANR	6382145	Argument	str		6382128	0					
ANR	6382146	Identifier	str		6382128	0					
ANR	6382147	Argument	"""%lf"""		6382128	1					
ANR	6382148	PrimaryExpression	"""%lf"""		6382128	0					
ANR	6382149	Argument	& d		6382128	2					
ANR	6382150	UnaryOperationExpression	& d		6382128	0					
ANR	6382151	UnaryOperator	&		6382128	0					
ANR	6382152	Identifier	d		6382128	1					
ANR	6382153	ReturnStatement	return d ;	490:1:10532:10540	6382128	2	True				
ANR	6382154	Identifier	d		6382128	0					
ANR	6382155	ReturnType	R_API double		6382128	1					
ANR	6382156	Identifier	r_num_get_float		6382128	2					
ANR	6382157	ParameterList	"RNum * num , const char * str"		6382128	3					
ANR	6382158	Parameter	RNum * num	487:29:10450:10458	6382128	0	True				
ANR	6382159	ParameterType	RNum *		6382128	0					
ANR	6382160	Identifier	num		6382128	1					
ANR	6382161	Parameter	const char * str	487:40:10461:10475	6382128	1	True				
ANR	6382162	ParameterType	const char *		6382128	0					
ANR	6382163	Identifier	str		6382128	1					
ANR	6382164	CFGEntryNode	ENTRY		6382128		True				
ANR	6382165	CFGExitNode	EXIT		6382128		True				
ANR	6382166	Symbol	str		6382128						
ANR	6382167	Symbol	d		6382128						
ANR	6382168	Symbol	num		6382128						
ANR	6382169	Symbol	& d		6382128						
ANR	6382170	Function	r_num_to_bits	493:0:10545:11246							
ANR	6382171	FunctionDef	"r_num_to_bits (char * out , ut64 num)"		6382170	0					
ANR	6382172	CompoundStatement		493:45:10590:11246	6382170	0					
ANR	6382173	IdentifierDeclStatement	"int size = 64 , i ;"	494:1:10593:10609	6382170	0	True				
ANR	6382174	IdentifierDecl	size = 64		6382170	0					
ANR	6382175	IdentifierDeclType	int		6382170	0					
ANR	6382176	Identifier	size		6382170	1					
ANR	6382177	AssignmentExpression	size = 64		6382170	2		=			
ANR	6382178	Identifier	size		6382170	0					
ANR	6382179	PrimaryExpression	64		6382170	1					
ANR	6382180	IdentifierDecl	i		6382170	1					
ANR	6382181	IdentifierDeclType	int		6382170	0					
ANR	6382182	Identifier	i		6382170	1					
ANR	6382183	IfStatement	if ( num >> 32 )		6382170	1					
ANR	6382184	Condition	num >> 32	496:5:10617:10625	6382170	0	True				
ANR	6382185	ShiftExpression	num >> 32		6382170	0		>>			
ANR	6382186	Identifier	num		6382170	0					
ANR	6382187	PrimaryExpression	32		6382170	1					
ANR	6382188	CompoundStatement		4:16:37:37	6382170	1					
ANR	6382189	ExpressionStatement	size = 64	497:2:10632:10641	6382170	0	True				
ANR	6382190	AssignmentExpression	size = 64		6382170	0		=			
ANR	6382191	Identifier	size		6382170	0					
ANR	6382192	PrimaryExpression	64		6382170	1					
ANR	6382193	ElseStatement	else		6382170	0					
ANR	6382194	IfStatement	if ( num & 0xff000000 )		6382170	0					
ANR	6382195	Condition	num & 0xff000000	498:12:10655:10670	6382170	0	True				
ANR	6382196	BitAndExpression	num & 0xff000000		6382170	0		&			
ANR	6382197	Identifier	num		6382170	0					
ANR	6382198	PrimaryExpression	0xff000000		6382170	1					
ANR	6382199	CompoundStatement		6:30:82:82	6382170	1					
ANR	6382200	ExpressionStatement	size = 32	499:2:10677:10686	6382170	0	True				
ANR	6382201	AssignmentExpression	size = 32		6382170	0		=			
ANR	6382202	Identifier	size		6382170	0					
ANR	6382203	PrimaryExpression	32		6382170	1					
ANR	6382204	ElseStatement	else		6382170	0					
ANR	6382205	IfStatement	if ( num & 0xff0000 )		6382170	0					
ANR	6382206	Condition	num & 0xff0000	500:12:10700:10713	6382170	0	True				
ANR	6382207	BitAndExpression	num & 0xff0000		6382170	0		&			
ANR	6382208	Identifier	num		6382170	0					
ANR	6382209	PrimaryExpression	0xff0000		6382170	1					
ANR	6382210	CompoundStatement		8:28:125:125	6382170	1					
ANR	6382211	ExpressionStatement	size = 24	501:2:10720:10729	6382170	0	True				
ANR	6382212	AssignmentExpression	size = 24		6382170	0		=			
ANR	6382213	Identifier	size		6382170	0					
ANR	6382214	PrimaryExpression	24		6382170	1					
ANR	6382215	ElseStatement	else		6382170	0					
ANR	6382216	IfStatement	if ( num & 0xff00 )		6382170	0					
ANR	6382217	Condition	num & 0xff00	502:12:10743:10754	6382170	0	True				
ANR	6382218	BitAndExpression	num & 0xff00		6382170	0		&			
ANR	6382219	Identifier	num		6382170	0					
ANR	6382220	PrimaryExpression	0xff00		6382170	1					
ANR	6382221	CompoundStatement		10:26:166:166	6382170	1					
ANR	6382222	ExpressionStatement	size = 16	503:2:10761:10770	6382170	0	True				
ANR	6382223	AssignmentExpression	size = 16		6382170	0		=			
ANR	6382224	Identifier	size		6382170	0					
ANR	6382225	PrimaryExpression	16		6382170	1					
ANR	6382226	ElseStatement	else		6382170	0					
ANR	6382227	IfStatement	if ( num & 0xff )		6382170	0					
ANR	6382228	Condition	num & 0xff	504:12:10784:10793	6382170	0	True				
ANR	6382229	BitAndExpression	num & 0xff		6382170	0		&			
ANR	6382230	Identifier	num		6382170	0					
ANR	6382231	PrimaryExpression	0xff		6382170	1					
ANR	6382232	CompoundStatement		12:24:205:205	6382170	1					
ANR	6382233	ExpressionStatement	size = 8	505:2:10800:10808	6382170	0	True				
ANR	6382234	AssignmentExpression	size = 8		6382170	0		=			
ANR	6382235	Identifier	size		6382170	0					
ANR	6382236	PrimaryExpression	8		6382170	1					
ANR	6382237	IfStatement	if ( out )		6382170	2					
ANR	6382238	Condition	out	507:5:10818:10820	6382170	0	True				
ANR	6382239	Identifier	out		6382170	0					
ANR	6382240	CompoundStatement		18:2:271:285	6382170	1					
ANR	6382241	IdentifierDeclStatement	int pos = 0 ;	508:2:10827:10838	6382170	0	True				
ANR	6382242	IdentifierDecl	pos = 0		6382170	0					
ANR	6382243	IdentifierDeclType	int		6382170	0					
ANR	6382244	Identifier	pos		6382170	1					
ANR	6382245	AssignmentExpression	pos = 0		6382170	2		=			
ANR	6382246	Identifier	pos		6382170	0					
ANR	6382247	PrimaryExpression	0		6382170	1					
ANR	6382248	IdentifierDeclStatement	int realsize = 0 ;	509:2:10842:10858	6382170	1	True				
ANR	6382249	IdentifierDecl	realsize = 0		6382170	0					
ANR	6382250	IdentifierDeclType	int		6382170	0					
ANR	6382251	Identifier	realsize		6382170	1					
ANR	6382252	AssignmentExpression	realsize = 0		6382170	2		=			
ANR	6382253	Identifier	realsize		6382170	0					
ANR	6382254	PrimaryExpression	0		6382170	1					
ANR	6382255	IdentifierDeclStatement	int hasbit = 0 ;	510:2:10862:10876	6382170	2	True				
ANR	6382256	IdentifierDecl	hasbit = 0		6382170	0					
ANR	6382257	IdentifierDeclType	int		6382170	0					
ANR	6382258	Identifier	hasbit		6382170	1					
ANR	6382259	AssignmentExpression	hasbit = 0		6382170	2		=			
ANR	6382260	Identifier	hasbit		6382170	0					
ANR	6382261	PrimaryExpression	0		6382170	1					
ANR	6382262	ForStatement	for ( i = 0 ; i < size ; i ++ )		6382170	3					
ANR	6382263	ForInit	i = 0 ;	511:7:10885:10890	6382170	0	True				
ANR	6382264	AssignmentExpression	i = 0		6382170	0		=			
ANR	6382265	Identifier	i		6382170	0					
ANR	6382266	PrimaryExpression	0		6382170	1					
ANR	6382267	Condition	i < size	511:14:10892:10899	6382170	1	True				
ANR	6382268	RelationalExpression	i < size		6382170	0		<			
ANR	6382269	Identifier	i		6382170	0					
ANR	6382270	Identifier	size		6382170	1					
ANR	6382271	PostIncDecOperationExpression	i ++	511:24:10902:10904	6382170	2	True				
ANR	6382272	Identifier	i		6382170	0					
ANR	6382273	IncDec	++		6382170	1					
ANR	6382274	CompoundStatement		20:3:321:372	6382170	3					
ANR	6382275	IdentifierDeclStatement	char bit = ( ( num >> ( size - i - 1 ) ) & 1 ) ? '1' : '0' ;	512:3:10912:10963	6382170	0	True				
ANR	6382276	IdentifierDecl	bit = ( ( num >> ( size - i - 1 ) ) & 1 ) ? '1' : '0'		6382170	0					
ANR	6382277	IdentifierDeclType	char		6382170	0					
ANR	6382278	Identifier	bit		6382170	1					
ANR	6382279	AssignmentExpression	bit = ( ( num >> ( size - i - 1 ) ) & 1 ) ? '1' : '0'		6382170	2		=			
ANR	6382280	Identifier	bit		6382170	0					
ANR	6382281	ConditionalExpression	( ( num >> ( size - i - 1 ) ) & 1 ) ? '1' : '0'		6382170	1					
ANR	6382282	Condition	( num >> ( size - i - 1 ) ) & 1		6382170	0					
ANR	6382283	BitAndExpression	( num >> ( size - i - 1 ) ) & 1		6382170	0		&			
ANR	6382284	ShiftExpression	num >> ( size - i - 1 )		6382170	0		>>			
ANR	6382285	Identifier	num		6382170	0					
ANR	6382286	AdditiveExpression	size - i - 1		6382170	1		-			
ANR	6382287	Identifier	size		6382170	0					
ANR	6382288	AdditiveExpression	i - 1		6382170	1		-			
ANR	6382289	Identifier	i		6382170	0					
ANR	6382290	PrimaryExpression	1		6382170	1					
ANR	6382291	PrimaryExpression	1		6382170	1					
ANR	6382292	PrimaryExpression	'1'		6382170	1					
ANR	6382293	PrimaryExpression	'0'		6382170	2					
ANR	6382294	IfStatement	if ( hasbit || bit == '1' )		6382170	1					
ANR	6382295	Condition	hasbit || bit == '1'	513:7:10972:10991	6382170	0	True				
ANR	6382296	OrExpression	hasbit || bit == '1'		6382170	0		||			
ANR	6382297	Identifier	hasbit		6382170	0					
ANR	6382298	EqualityExpression	bit == '1'		6382170	1		==			
ANR	6382299	Identifier	bit		6382170	0					
ANR	6382300	PrimaryExpression	'1'		6382170	1					
ANR	6382301	CompoundStatement		21:29:403:403	6382170	1					
ANR	6382302	ExpressionStatement	out [ pos ++ ] = bit	514:4:11000:11016	6382170	0	True				
ANR	6382303	AssignmentExpression	out [ pos ++ ] = bit		6382170	0		=			
ANR	6382304	ArrayIndexing	out [ pos ++ ]		6382170	0					
ANR	6382305	Identifier	out		6382170	0					
ANR	6382306	PostIncDecOperationExpression	pos ++		6382170	1					
ANR	6382307	Identifier	pos		6382170	0					
ANR	6382308	IncDec	++		6382170	1					
ANR	6382309	Identifier	bit		6382170	1					
ANR	6382310	IfStatement	if ( ! hasbit && bit == '1' )		6382170	2					
ANR	6382311	Condition	! hasbit && bit == '1'	516:7:11054:11074	6382170	0	True				
ANR	6382312	AndExpression	! hasbit && bit == '1'		6382170	0		&&			
ANR	6382313	UnaryOperationExpression	! hasbit		6382170	0					
ANR	6382314	UnaryOperator	!		6382170	0					
ANR	6382315	Identifier	hasbit		6382170	1					
ANR	6382316	EqualityExpression	bit == '1'		6382170	1		==			
ANR	6382317	Identifier	bit		6382170	0					
ANR	6382318	PrimaryExpression	'1'		6382170	1					
ANR	6382319	CompoundStatement		24:30:486:486	6382170	1					
ANR	6382320	ExpressionStatement	hasbit = 1	517:4:11083:11093	6382170	0	True				
ANR	6382321	AssignmentExpression	hasbit = 1		6382170	0		=			
ANR	6382322	Identifier	hasbit		6382170	0					
ANR	6382323	PrimaryExpression	1		6382170	1					
ANR	6382324	ExpressionStatement	realsize = size - i	518:4:11099:11118	6382170	1	True				
ANR	6382325	AssignmentExpression	realsize = size - i		6382170	0		=			
ANR	6382326	Identifier	realsize		6382170	0					
ANR	6382327	AdditiveExpression	size - i		6382170	1		-			
ANR	6382328	Identifier	size		6382170	0					
ANR	6382329	Identifier	i		6382170	1					
ANR	6382330	IfStatement	if ( realsize == 0 )		6382170	4					
ANR	6382331	Condition	realsize == 0	521:6:11135:11147	6382170	0	True				
ANR	6382332	EqualityExpression	realsize == 0		6382170	0		==			
ANR	6382333	Identifier	realsize		6382170	0					
ANR	6382334	PrimaryExpression	0		6382170	1					
ANR	6382335	CompoundStatement		29:21:559:559	6382170	1					
ANR	6382336	ExpressionStatement	out [ realsize ++ ] = '0'	522:3:11155:11176	6382170	0	True				
ANR	6382337	AssignmentExpression	out [ realsize ++ ] = '0'		6382170	0		=			
ANR	6382338	ArrayIndexing	out [ realsize ++ ]		6382170	0					
ANR	6382339	Identifier	out		6382170	0					
ANR	6382340	PostIncDecOperationExpression	realsize ++		6382170	1					
ANR	6382341	Identifier	realsize		6382170	0					
ANR	6382342	IncDec	++		6382170	1					
ANR	6382343	PrimaryExpression	'0'		6382170	1					
ANR	6382344	ExpressionStatement	out [ realsize ] = '\\0'	524:2:11184:11204	6382170	5	True				
ANR	6382345	AssignmentExpression	out [ realsize ] = '\\0'		6382170	0		=			
ANR	6382346	ArrayIndexing	out [ realsize ]		6382170	0					
ANR	6382347	Identifier	out		6382170	0					
ANR	6382348	Identifier	realsize		6382170	1					
ANR	6382349	PrimaryExpression	'\\0'		6382170	1					
ANR	6382350	ReturnStatement	return size ;	526:1:11233:11244	6382170	3	True				
ANR	6382351	Identifier	size		6382170	0					
ANR	6382352	ReturnType	R_API int		6382170	1					
ANR	6382353	Identifier	r_num_to_bits		6382170	2					
ANR	6382354	ParameterList	"char * out , ut64 num"		6382170	3					
ANR	6382355	Parameter	char * out	493:24:10569:10577	6382170	0	True				
ANR	6382356	ParameterType	char *		6382170	0					
ANR	6382357	Identifier	out		6382170	1					
ANR	6382358	Parameter	ut64 num	493:35:10580:10587	6382170	1	True				
ANR	6382359	ParameterType	ut64		6382170	0					
ANR	6382360	Identifier	num		6382170	1					
ANR	6382361	CFGEntryNode	ENTRY		6382170		True				
ANR	6382362	CFGExitNode	EXIT		6382170		True				
ANR	6382363	Symbol	size		6382170						
ANR	6382364	Symbol	pos		6382170						
ANR	6382365	Symbol	realsize		6382170						
ANR	6382366	Symbol	* realsize		6382170						
ANR	6382367	Symbol	num		6382170						
ANR	6382368	Symbol	hasbit		6382170						
ANR	6382369	Symbol	* out		6382170						
ANR	6382370	Symbol	i		6382170						
ANR	6382371	Symbol	bit		6382170						
ANR	6382372	Symbol	out		6382170						
ANR	6382373	Function	r_num_to_trits	529:0:11249:11511							
ANR	6382374	FunctionDef	"r_num_to_trits (char * out , ut64 num)"		6382373	0					
ANR	6382375	CompoundStatement		529:46:11295:11511	6382373	0					
ANR	6382376	IfStatement	if ( out == NULL )		6382373	0					
ANR	6382377	Condition	out == NULL	530:5:11302:11312	6382373	0	True				
ANR	6382378	EqualityExpression	out == NULL		6382373	0		==			
ANR	6382379	Identifier	out		6382373	0					
ANR	6382380	Identifier	NULL		6382373	1					
ANR	6382381	CompoundStatement		2:18:19:19	6382373	1					
ANR	6382382	ReturnStatement	return false ;	531:2:11319:11331	6382373	0	True				
ANR	6382383	Identifier	false		6382373	0					
ANR	6382384	IdentifierDeclStatement	int i ;	533:1:11337:11342	6382373	1	True				
ANR	6382385	IdentifierDecl	i		6382373	0					
ANR	6382386	IdentifierDeclType	int		6382373	0					
ANR	6382387	Identifier	i		6382373	1					
ANR	6382388	ForStatement	"for ( i = 0 ; num ; i ++ , num /= 3 )"		6382373	2					
ANR	6382389	ForInit	i = 0 ;	534:6:11350:11355	6382373	0	True				
ANR	6382390	AssignmentExpression	i = 0		6382373	0		=			
ANR	6382391	Identifier	i		6382373	0					
ANR	6382392	PrimaryExpression	0		6382373	1					
ANR	6382393	Condition	num	534:13:11357:11359	6382373	1	True				
ANR	6382394	Identifier	num		6382373	0					
ANR	6382395	Expression	"i ++ , num /= 3"	534:18:11362:11374	6382373	2	True				
ANR	6382396	PostIncDecOperationExpression	i ++		6382373	0					
ANR	6382397	Identifier	i		6382373	0					
ANR	6382398	IncDec	++		6382373	1					
ANR	6382399	AssignmentExpression	num /= 3		6382373	1		/=			
ANR	6382400	Identifier	num		6382373	0					
ANR	6382401	PrimaryExpression	3		6382373	1					
ANR	6382402	CompoundStatement		6:33:81:81	6382373	3					
ANR	6382403	ExpressionStatement	out [ i ] = ( char ) ( '0' + num % 3 )	535:2:11381:11412	6382373	0	True				
ANR	6382404	AssignmentExpression	out [ i ] = ( char ) ( '0' + num % 3 )		6382373	0		=			
ANR	6382405	ArrayIndexing	out [ i ]		6382373	0					
ANR	6382406	Identifier	out		6382373	0					
ANR	6382407	Identifier	i		6382373	1					
ANR	6382408	CastExpression	( char ) ( '0' + num % 3 )		6382373	1					
ANR	6382409	CastTarget	char		6382373	0					
ANR	6382410	AdditiveExpression	'0' + num % 3		6382373	1		+			
ANR	6382411	PrimaryExpression	'0'		6382373	0					
ANR	6382412	MultiplicativeExpression	num % 3		6382373	1		%			
ANR	6382413	Identifier	num		6382373	0					
ANR	6382414	PrimaryExpression	3		6382373	1					
ANR	6382415	IfStatement	if ( i == 0 )		6382373	3					
ANR	6382416	Condition	i == 0	537:5:11422:11427	6382373	0	True				
ANR	6382417	EqualityExpression	i == 0		6382373	0		==			
ANR	6382418	Identifier	i		6382373	0					
ANR	6382419	PrimaryExpression	0		6382373	1					
ANR	6382420	CompoundStatement		9:13:134:134	6382373	1					
ANR	6382421	ExpressionStatement	out [ 0 ] = '0'	538:2:11434:11446	6382373	0	True				
ANR	6382422	AssignmentExpression	out [ 0 ] = '0'		6382373	0		=			
ANR	6382423	ArrayIndexing	out [ 0 ]		6382373	0					
ANR	6382424	Identifier	out		6382373	0					
ANR	6382425	PrimaryExpression	0		6382373	1					
ANR	6382426	PrimaryExpression	'0'		6382373	1					
ANR	6382427	ExpressionStatement	i ++	539:2:11450:11453	6382373	1	True				
ANR	6382428	PostIncDecOperationExpression	i ++		6382373	0					
ANR	6382429	Identifier	i		6382373	0					
ANR	6382430	IncDec	++		6382373	1					
ANR	6382431	ExpressionStatement	out [ i ] = '\\0'	541:1:11459:11472	6382373	4	True				
ANR	6382432	AssignmentExpression	out [ i ] = '\\0'		6382373	0		=			
ANR	6382433	ArrayIndexing	out [ i ]		6382373	0					
ANR	6382434	Identifier	out		6382373	0					
ANR	6382435	Identifier	i		6382373	1					
ANR	6382436	PrimaryExpression	'\\0'		6382373	1					
ANR	6382437	ExpressionStatement	r_str_reverse ( out )	543:1:11476:11495	6382373	5	True				
ANR	6382438	CallExpression	r_str_reverse ( out )		6382373	0					
ANR	6382439	Callee	r_str_reverse		6382373	0					
ANR	6382440	Identifier	r_str_reverse		6382373	0					
ANR	6382441	ArgumentList	out		6382373	1					
ANR	6382442	Argument	out		6382373	0					
ANR	6382443	Identifier	out		6382373	0					
ANR	6382444	ReturnStatement	return true ;	544:1:11498:11509	6382373	6	True				
ANR	6382445	Identifier	true		6382373	0					
ANR	6382446	ReturnType	R_API int		6382373	1					
ANR	6382447	Identifier	r_num_to_trits		6382373	2					
ANR	6382448	ParameterList	"char * out , ut64 num"		6382373	3					
ANR	6382449	Parameter	char * out	529:25:11274:11282	6382373	0	True				
ANR	6382450	ParameterType	char *		6382373	0					
ANR	6382451	Identifier	out		6382373	1					
ANR	6382452	Parameter	ut64 num	529:36:11285:11292	6382373	1	True				
ANR	6382453	ParameterType	ut64		6382373	0					
ANR	6382454	Identifier	num		6382373	1					
ANR	6382455	CFGEntryNode	ENTRY		6382373		True				
ANR	6382456	CFGExitNode	EXIT		6382373		True				
ANR	6382457	Symbol	NULL		6382373						
ANR	6382458	Symbol	* i		6382373						
ANR	6382459	Symbol	num		6382373						
ANR	6382460	Symbol	false		6382373						
ANR	6382461	Symbol	* out		6382373						
ANR	6382462	Symbol	true		6382373						
ANR	6382463	Symbol	i		6382373						
ANR	6382464	Symbol	out		6382373						
ANR	6382465	Function	r_num_chs	547:0:11514:11706							
ANR	6382466	FunctionDef	"r_num_chs (int cylinder , int head , int sector , int sectorsize)"		6382465	0					
ANR	6382467	CompoundStatement		547:73:11587:11706	6382465	0					
ANR	6382468	IfStatement	if ( sectorsize < 1 )		6382465	0					
ANR	6382469	Condition	sectorsize < 1	548:5:11594:11607	6382465	0	True				
ANR	6382470	RelationalExpression	sectorsize < 1		6382465	0		<			
ANR	6382471	Identifier	sectorsize		6382465	0					
ANR	6382472	PrimaryExpression	1		6382465	1					
ANR	6382473	CompoundStatement		2:21:22:22	6382465	1					
ANR	6382474	ExpressionStatement	sectorsize = 512	549:2:11614:11630	6382465	0	True				
ANR	6382475	AssignmentExpression	sectorsize = 512		6382465	0		=			
ANR	6382476	Identifier	sectorsize		6382465	0					
ANR	6382477	PrimaryExpression	512		6382465	1					
ANR	6382478	ReturnStatement	return ( ut64 ) cylinder * ( ut64 ) head * ( ut64 ) sector * ( ut64 ) sectorsize ;	551:1:11636:11704	6382465	1	True				
ANR	6382479	MultiplicativeExpression	( ut64 ) cylinder * ( ut64 ) head * ( ut64 ) sector * ( ut64 ) sectorsize		6382465	0		*			
ANR	6382480	CastExpression	( ut64 ) cylinder		6382465	0					
ANR	6382481	CastTarget	ut64		6382465	0					
ANR	6382482	Identifier	cylinder		6382465	1					
ANR	6382483	MultiplicativeExpression	( ut64 ) head * ( ut64 ) sector * ( ut64 ) sectorsize		6382465	1		*			
ANR	6382484	CastExpression	( ut64 ) head		6382465	0					
ANR	6382485	CastTarget	ut64		6382465	0					
ANR	6382486	Identifier	head		6382465	1					
ANR	6382487	MultiplicativeExpression	( ut64 ) sector * ( ut64 ) sectorsize		6382465	1		*			
ANR	6382488	CastExpression	( ut64 ) sector		6382465	0					
ANR	6382489	CastTarget	ut64		6382465	0					
ANR	6382490	Identifier	sector		6382465	1					
ANR	6382491	CastExpression	( ut64 ) sectorsize		6382465	1					
ANR	6382492	CastTarget	ut64		6382465	0					
ANR	6382493	Identifier	sectorsize		6382465	1					
ANR	6382494	ReturnType	R_API ut64		6382465	1					
ANR	6382495	Identifier	r_num_chs		6382465	2					
ANR	6382496	ParameterList	"int cylinder , int head , int sector , int sectorsize"		6382465	3					
ANR	6382497	Parameter	int cylinder	547:21:11535:11546	6382465	0	True				
ANR	6382498	ParameterType	int		6382465	0					
ANR	6382499	Identifier	cylinder		6382465	1					
ANR	6382500	Parameter	int head	547:35:11549:11556	6382465	1	True				
ANR	6382501	ParameterType	int		6382465	0					
ANR	6382502	Identifier	head		6382465	1					
ANR	6382503	Parameter	int sector	547:45:11559:11568	6382465	2	True				
ANR	6382504	ParameterType	int		6382465	0					
ANR	6382505	Identifier	sector		6382465	1					
ANR	6382506	Parameter	int sectorsize	547:57:11571:11584	6382465	3	True				
ANR	6382507	ParameterType	int		6382465	0					
ANR	6382508	Identifier	sectorsize		6382465	1					
ANR	6382509	CFGEntryNode	ENTRY		6382465		True				
ANR	6382510	CFGExitNode	EXIT		6382465		True				
ANR	6382511	Symbol	head		6382465						
ANR	6382512	Symbol	cylinder		6382465						
ANR	6382513	Symbol	sectorsize		6382465						
ANR	6382514	Symbol	sector		6382465						
ANR	6382515	Function	r_num_conditional	554:0:11709:12973							
ANR	6382516	FunctionDef	"r_num_conditional (RNum * num , const char * str)"		6382515	0					
ANR	6382517	CompoundStatement		554:56:11765:12973	6382515	0					
ANR	6382518	IdentifierDeclStatement	"char * lgt , * t , * p , * s = strdup ( str ) ;"	555:1:11768:11804	6382515	0	True				
ANR	6382519	IdentifierDecl	* lgt		6382515	0					
ANR	6382520	IdentifierDeclType	char *		6382515	0					
ANR	6382521	Identifier	lgt		6382515	1					
ANR	6382522	IdentifierDecl	* t		6382515	1					
ANR	6382523	IdentifierDeclType	char *		6382515	0					
ANR	6382524	Identifier	t		6382515	1					
ANR	6382525	IdentifierDecl	* p		6382515	2					
ANR	6382526	IdentifierDeclType	char *		6382515	0					
ANR	6382527	Identifier	p		6382515	1					
ANR	6382528	IdentifierDecl	* s = strdup ( str )		6382515	3					
ANR	6382529	IdentifierDeclType	char *		6382515	0					
ANR	6382530	Identifier	s		6382515	1					
ANR	6382531	AssignmentExpression	* s = strdup ( str )		6382515	2		=			
ANR	6382532	Identifier	s		6382515	0					
ANR	6382533	CallExpression	strdup ( str )		6382515	1					
ANR	6382534	Callee	strdup		6382515	0					
ANR	6382535	Identifier	strdup		6382515	0					
ANR	6382536	ArgumentList	str		6382515	1					
ANR	6382537	Argument	str		6382515	0					
ANR	6382538	Identifier	str		6382515	0					
ANR	6382539	IdentifierDeclStatement	int res = 0 ;	556:1:11807:11818	6382515	1	True				
ANR	6382540	IdentifierDecl	res = 0		6382515	0					
ANR	6382541	IdentifierDeclType	int		6382515	0					
ANR	6382542	Identifier	res		6382515	1					
ANR	6382543	AssignmentExpression	res = 0		6382515	2		=			
ANR	6382544	Identifier	res		6382515	0					
ANR	6382545	PrimaryExpression	0		6382515	1					
ANR	6382546	IdentifierDeclStatement	"ut64 n , a , b ;"	557:1:11821:11833	6382515	2	True				
ANR	6382547	IdentifierDecl	n		6382515	0					
ANR	6382548	IdentifierDeclType	ut64		6382515	0					
ANR	6382549	Identifier	n		6382515	1					
ANR	6382550	IdentifierDecl	a		6382515	1					
ANR	6382551	IdentifierDeclType	ut64		6382515	0					
ANR	6382552	Identifier	a		6382515	1					
ANR	6382553	IdentifierDecl	b		6382515	2					
ANR	6382554	IdentifierDeclType	ut64		6382515	0					
ANR	6382555	Identifier	b		6382515	1					
ANR	6382556	ExpressionStatement	p = s	558:1:11836:11841	6382515	3	True				
ANR	6382557	AssignmentExpression	p = s		6382515	0		=			
ANR	6382558	Identifier	p		6382515	0					
ANR	6382559	Identifier	s		6382515	1					
ANR	6382560	DoStatement	do		6382515	4					
ANR	6382561	CompoundStatement		6:4:81:81	6382515	0					
ANR	6382562	ExpressionStatement	"t = strchr ( p , ',' )"	560:2:11851:11870	6382515	0	True				
ANR	6382563	AssignmentExpression	"t = strchr ( p , ',' )"		6382515	0		=			
ANR	6382564	Identifier	t		6382515	0					
ANR	6382565	CallExpression	"strchr ( p , ',' )"		6382515	1					
ANR	6382566	Callee	strchr		6382515	0					
ANR	6382567	Identifier	strchr		6382515	0					
ANR	6382568	ArgumentList	p		6382515	1					
ANR	6382569	Argument	p		6382515	0					
ANR	6382570	Identifier	p		6382515	0					
ANR	6382571	Argument	"','"		6382515	1					
ANR	6382572	PrimaryExpression	"','"		6382515	0					
ANR	6382573	IfStatement	if ( t )		6382515	1					
ANR	6382574	Condition	t	561:6:11878:11878	6382515	0	True				
ANR	6382575	Identifier	t		6382515	0					
ANR	6382576	CompoundStatement		8:9:115:115	6382515	1					
ANR	6382577	ExpressionStatement	* t = 0	562:3:11886:11892	6382515	0	True				
ANR	6382578	AssignmentExpression	* t = 0		6382515	0		=			
ANR	6382579	UnaryOperationExpression	* t		6382515	0					
ANR	6382580	UnaryOperator	*		6382515	0					
ANR	6382581	Identifier	t		6382515	1					
ANR	6382582	PrimaryExpression	0		6382515	1					
ANR	6382583	ExpressionStatement	"lgt = strchr ( p , '<' )"	564:2:11900:11921	6382515	2	True				
ANR	6382584	AssignmentExpression	"lgt = strchr ( p , '<' )"		6382515	0		=			
ANR	6382585	Identifier	lgt		6382515	0					
ANR	6382586	CallExpression	"strchr ( p , '<' )"		6382515	1					
ANR	6382587	Callee	strchr		6382515	0					
ANR	6382588	Identifier	strchr		6382515	0					
ANR	6382589	ArgumentList	p		6382515	1					
ANR	6382590	Argument	p		6382515	0					
ANR	6382591	Identifier	p		6382515	0					
ANR	6382592	Argument	'<'		6382515	1					
ANR	6382593	PrimaryExpression	'<'		6382515	0					
ANR	6382594	IfStatement	if ( lgt )		6382515	3					
ANR	6382595	Condition	lgt	565:6:11929:11931	6382515	0	True				
ANR	6382596	Identifier	lgt		6382515	0					
ANR	6382597	CompoundStatement		12:11:168:168	6382515	1					
ANR	6382598	ExpressionStatement	* lgt = 0	566:3:11939:11947	6382515	0	True				
ANR	6382599	AssignmentExpression	* lgt = 0		6382515	0		=			
ANR	6382600	UnaryOperationExpression	* lgt		6382515	0					
ANR	6382601	UnaryOperator	*		6382515	0					
ANR	6382602	Identifier	lgt		6382515	1					
ANR	6382603	PrimaryExpression	0		6382515	1					
ANR	6382604	ExpressionStatement	"a = r_num_math ( num , p )"	567:3:11952:11975	6382515	1	True				
ANR	6382605	AssignmentExpression	"a = r_num_math ( num , p )"		6382515	0		=			
ANR	6382606	Identifier	a		6382515	0					
ANR	6382607	CallExpression	"r_num_math ( num , p )"		6382515	1					
ANR	6382608	Callee	r_num_math		6382515	0					
ANR	6382609	Identifier	r_num_math		6382515	0					
ANR	6382610	ArgumentList	num		6382515	1					
ANR	6382611	Argument	num		6382515	0					
ANR	6382612	Identifier	num		6382515	0					
ANR	6382613	Argument	p		6382515	1					
ANR	6382614	Identifier	p		6382515	0					
ANR	6382615	IfStatement	if ( lgt [ 1 ] == '=' )		6382515	2					
ANR	6382616	Condition	lgt [ 1 ] == '='	568:7:11984:11996	6382515	0	True				
ANR	6382617	EqualityExpression	lgt [ 1 ] == '='		6382515	0		==			
ANR	6382618	ArrayIndexing	lgt [ 1 ]		6382515	0					
ANR	6382619	Identifier	lgt		6382515	0					
ANR	6382620	PrimaryExpression	1		6382515	1					
ANR	6382621	PrimaryExpression	'='		6382515	1					
ANR	6382622	CompoundStatement		15:22:233:233	6382515	1					
ANR	6382623	ExpressionStatement	"b = r_num_math ( num , lgt + 2 )"	569:4:12005:12034	6382515	0	True				
ANR	6382624	AssignmentExpression	"b = r_num_math ( num , lgt + 2 )"		6382515	0		=			
ANR	6382625	Identifier	b		6382515	0					
ANR	6382626	CallExpression	"r_num_math ( num , lgt + 2 )"		6382515	1					
ANR	6382627	Callee	r_num_math		6382515	0					
ANR	6382628	Identifier	r_num_math		6382515	0					
ANR	6382629	ArgumentList	num		6382515	1					
ANR	6382630	Argument	num		6382515	0					
ANR	6382631	Identifier	num		6382515	0					
ANR	6382632	Argument	lgt + 2		6382515	1					
ANR	6382633	AdditiveExpression	lgt + 2		6382515	0		+			
ANR	6382634	Identifier	lgt		6382515	0					
ANR	6382635	PrimaryExpression	2		6382515	1					
ANR	6382636	IfStatement	if ( a > b )		6382515	1					
ANR	6382637	Condition	a > b	570:8:12044:12048	6382515	0	True				
ANR	6382638	RelationalExpression	a > b		6382515	0		>			
ANR	6382639	Identifier	a		6382515	0					
ANR	6382640	Identifier	b		6382515	1					
ANR	6382641	CompoundStatement		17:15:285:285	6382515	1					
ANR	6382642	GotoStatement	goto fail ;	571:5:12058:12067	6382515	0	True				
ANR	6382643	Identifier	fail		6382515	0					
ANR	6382644	ElseStatement	else		6382515	0					
ANR	6382645	CompoundStatement		20:10:319:319	6382515	0					
ANR	6382646	ExpressionStatement	"b = r_num_math ( num , lgt + 1 )"	574:4:12091:12120	6382515	0	True				
ANR	6382647	AssignmentExpression	"b = r_num_math ( num , lgt + 1 )"		6382515	0		=			
ANR	6382648	Identifier	b		6382515	0					
ANR	6382649	CallExpression	"r_num_math ( num , lgt + 1 )"		6382515	1					
ANR	6382650	Callee	r_num_math		6382515	0					
ANR	6382651	Identifier	r_num_math		6382515	0					
ANR	6382652	ArgumentList	num		6382515	1					
ANR	6382653	Argument	num		6382515	0					
ANR	6382654	Identifier	num		6382515	0					
ANR	6382655	Argument	lgt + 1		6382515	1					
ANR	6382656	AdditiveExpression	lgt + 1		6382515	0		+			
ANR	6382657	Identifier	lgt		6382515	0					
ANR	6382658	PrimaryExpression	1		6382515	1					
ANR	6382659	IfStatement	if ( a >= b )		6382515	1					
ANR	6382660	Condition	a >= b	575:8:12130:12135	6382515	0	True				
ANR	6382661	RelationalExpression	a >= b		6382515	0		>=			
ANR	6382662	Identifier	a		6382515	0					
ANR	6382663	Identifier	b		6382515	1					
ANR	6382664	CompoundStatement		22:16:372:372	6382515	1					
ANR	6382665	GotoStatement	goto fail ;	576:5:12145:12154	6382515	0	True				
ANR	6382666	Identifier	fail		6382515	0					
ANR	6382667	ElseStatement	else		6382515	0					
ANR	6382668	CompoundStatement		26:9:410:410	6382515	0					
ANR	6382669	ExpressionStatement	"lgt = strchr ( p , '>' )"	580:3:12181:12202	6382515	0	True				
ANR	6382670	AssignmentExpression	"lgt = strchr ( p , '>' )"		6382515	0		=			
ANR	6382671	Identifier	lgt		6382515	0					
ANR	6382672	CallExpression	"strchr ( p , '>' )"		6382515	1					
ANR	6382673	Callee	strchr		6382515	0					
ANR	6382674	Identifier	strchr		6382515	0					
ANR	6382675	ArgumentList	p		6382515	1					
ANR	6382676	Argument	p		6382515	0					
ANR	6382677	Identifier	p		6382515	0					
ANR	6382678	Argument	'>'		6382515	1					
ANR	6382679	PrimaryExpression	'>'		6382515	0					
ANR	6382680	IfStatement	if ( lgt )		6382515	1					
ANR	6382681	Condition	lgt	581:7:12211:12213	6382515	0	True				
ANR	6382682	Identifier	lgt		6382515	0					
ANR	6382683	CompoundStatement		28:12:450:450	6382515	1					
ANR	6382684	ExpressionStatement	* lgt = 0	582:4:12222:12230	6382515	0	True				
ANR	6382685	AssignmentExpression	* lgt = 0		6382515	0		=			
ANR	6382686	UnaryOperationExpression	* lgt		6382515	0					
ANR	6382687	UnaryOperator	*		6382515	0					
ANR	6382688	Identifier	lgt		6382515	1					
ANR	6382689	PrimaryExpression	0		6382515	1					
ANR	6382690	ExpressionStatement	"a = r_num_math ( num , p )"	583:4:12236:12259	6382515	1	True				
ANR	6382691	AssignmentExpression	"a = r_num_math ( num , p )"		6382515	0		=			
ANR	6382692	Identifier	a		6382515	0					
ANR	6382693	CallExpression	"r_num_math ( num , p )"		6382515	1					
ANR	6382694	Callee	r_num_math		6382515	0					
ANR	6382695	Identifier	r_num_math		6382515	0					
ANR	6382696	ArgumentList	num		6382515	1					
ANR	6382697	Argument	num		6382515	0					
ANR	6382698	Identifier	num		6382515	0					
ANR	6382699	Argument	p		6382515	1					
ANR	6382700	Identifier	p		6382515	0					
ANR	6382701	IfStatement	if ( lgt [ 1 ] == '=' )		6382515	2					
ANR	6382702	Condition	lgt [ 1 ] == '='	584:8:12269:12281	6382515	0	True				
ANR	6382703	EqualityExpression	lgt [ 1 ] == '='		6382515	0		==			
ANR	6382704	ArrayIndexing	lgt [ 1 ]		6382515	0					
ANR	6382705	Identifier	lgt		6382515	0					
ANR	6382706	PrimaryExpression	1		6382515	1					
ANR	6382707	PrimaryExpression	'='		6382515	1					
ANR	6382708	CompoundStatement		31:23:518:518	6382515	1					
ANR	6382709	ExpressionStatement	"b = r_num_math ( num , lgt + 2 )"	585:5:12291:12320	6382515	0	True				
ANR	6382710	AssignmentExpression	"b = r_num_math ( num , lgt + 2 )"		6382515	0		=			
ANR	6382711	Identifier	b		6382515	0					
ANR	6382712	CallExpression	"r_num_math ( num , lgt + 2 )"		6382515	1					
ANR	6382713	Callee	r_num_math		6382515	0					
ANR	6382714	Identifier	r_num_math		6382515	0					
ANR	6382715	ArgumentList	num		6382515	1					
ANR	6382716	Argument	num		6382515	0					
ANR	6382717	Identifier	num		6382515	0					
ANR	6382718	Argument	lgt + 2		6382515	1					
ANR	6382719	AdditiveExpression	lgt + 2		6382515	0		+			
ANR	6382720	Identifier	lgt		6382515	0					
ANR	6382721	PrimaryExpression	2		6382515	1					
ANR	6382722	IfStatement	if ( a < b )		6382515	1					
ANR	6382723	Condition	a < b	586:9:12331:12335	6382515	0	True				
ANR	6382724	RelationalExpression	a < b		6382515	0		<			
ANR	6382725	Identifier	a		6382515	0					
ANR	6382726	Identifier	b		6382515	1					
ANR	6382727	CompoundStatement		33:16:572:572	6382515	1					
ANR	6382728	GotoStatement	goto fail ;	587:6:12346:12355	6382515	0	True				
ANR	6382729	Identifier	fail		6382515	0					
ANR	6382730	ElseStatement	else		6382515	0					
ANR	6382731	CompoundStatement		36:11:609:609	6382515	0					
ANR	6382732	ExpressionStatement	"b = r_num_math ( num , lgt + 1 )"	590:5:12382:12411	6382515	0	True				
ANR	6382733	AssignmentExpression	"b = r_num_math ( num , lgt + 1 )"		6382515	0		=			
ANR	6382734	Identifier	b		6382515	0					
ANR	6382735	CallExpression	"r_num_math ( num , lgt + 1 )"		6382515	1					
ANR	6382736	Callee	r_num_math		6382515	0					
ANR	6382737	Identifier	r_num_math		6382515	0					
ANR	6382738	ArgumentList	num		6382515	1					
ANR	6382739	Argument	num		6382515	0					
ANR	6382740	Identifier	num		6382515	0					
ANR	6382741	Argument	lgt + 1		6382515	1					
ANR	6382742	AdditiveExpression	lgt + 1		6382515	0		+			
ANR	6382743	Identifier	lgt		6382515	0					
ANR	6382744	PrimaryExpression	1		6382515	1					
ANR	6382745	IfStatement	if ( a <= b )		6382515	1					
ANR	6382746	Condition	a <= b	591:9:12422:12427	6382515	0	True				
ANR	6382747	RelationalExpression	a <= b		6382515	0		<=			
ANR	6382748	Identifier	a		6382515	0					
ANR	6382749	Identifier	b		6382515	1					
ANR	6382750	CompoundStatement		38:17:664:664	6382515	1					
ANR	6382751	GotoStatement	goto fail ;	592:6:12438:12447	6382515	0	True				
ANR	6382752	Identifier	fail		6382515	0					
ANR	6382753	ElseStatement	else		6382515	0					
ANR	6382754	CompoundStatement		42:10:706:706	6382515	0					
ANR	6382755	ExpressionStatement	"lgt = strchr ( p , '=' )"	596:4:12478:12499	6382515	0	True				
ANR	6382756	AssignmentExpression	"lgt = strchr ( p , '=' )"		6382515	0		=			
ANR	6382757	Identifier	lgt		6382515	0					
ANR	6382758	CallExpression	"strchr ( p , '=' )"		6382515	1					
ANR	6382759	Callee	strchr		6382515	0					
ANR	6382760	Identifier	strchr		6382515	0					
ANR	6382761	ArgumentList	p		6382515	1					
ANR	6382762	Argument	p		6382515	0					
ANR	6382763	Identifier	p		6382515	0					
ANR	6382764	Argument	'='		6382515	1					
ANR	6382765	PrimaryExpression	'='		6382515	0					
ANR	6382766	IfStatement	if ( lgt && lgt > p )		6382515	1					
ANR	6382767	Condition	lgt && lgt > p	597:8:12509:12522	6382515	0	True				
ANR	6382768	AndExpression	lgt && lgt > p		6382515	0		&&			
ANR	6382769	Identifier	lgt		6382515	0					
ANR	6382770	RelationalExpression	lgt > p		6382515	1		>			
ANR	6382771	Identifier	lgt		6382515	0					
ANR	6382772	Identifier	p		6382515	1					
ANR	6382773	CompoundStatement		44:24:759:759	6382515	1					
ANR	6382774	ExpressionStatement	lgt --	598:5:12532:12537	6382515	0	True				
ANR	6382775	PostIncDecOperationExpression	lgt --		6382515	0					
ANR	6382776	Identifier	lgt		6382515	0					
ANR	6382777	IncDec	--		6382515	1					
ANR	6382778	IfStatement	if ( * lgt == '!' )		6382515	1					
ANR	6382779	Condition	* lgt == '!'	599:9:12548:12558	6382515	0	True				
ANR	6382780	EqualityExpression	* lgt == '!'		6382515	0		==			
ANR	6382781	UnaryOperationExpression	* lgt		6382515	0					
ANR	6382782	UnaryOperator	*		6382515	0					
ANR	6382783	Identifier	lgt		6382515	1					
ANR	6382784	PrimaryExpression	'!'		6382515	1					
ANR	6382785	CompoundStatement		46:22:795:795	6382515	1					
ANR	6382786	ExpressionStatement	"r_str_replace_char ( p , '!' , ' ' )"	600:6:12569:12601	6382515	0	True				
ANR	6382787	CallExpression	"r_str_replace_char ( p , '!' , ' ' )"		6382515	0					
ANR	6382788	Callee	r_str_replace_char		6382515	0					
ANR	6382789	Identifier	r_str_replace_char		6382515	0					
ANR	6382790	ArgumentList	p		6382515	1					
ANR	6382791	Argument	p		6382515	0					
ANR	6382792	Identifier	p		6382515	0					
ANR	6382793	Argument	'!'		6382515	1					
ANR	6382794	PrimaryExpression	'!'		6382515	0					
ANR	6382795	Argument	' '		6382515	2					
ANR	6382796	PrimaryExpression	' '		6382515	0					
ANR	6382797	ExpressionStatement	"r_str_replace_char ( p , '=' , '-' )"	601:6:12609:12641	6382515	1	True				
ANR	6382798	CallExpression	"r_str_replace_char ( p , '=' , '-' )"		6382515	0					
ANR	6382799	Callee	r_str_replace_char		6382515	0					
ANR	6382800	Identifier	r_str_replace_char		6382515	0					
ANR	6382801	ArgumentList	p		6382515	1					
ANR	6382802	Argument	p		6382515	0					
ANR	6382803	Identifier	p		6382515	0					
ANR	6382804	Argument	'='		6382515	1					
ANR	6382805	PrimaryExpression	'='		6382515	0					
ANR	6382806	Argument	'-'		6382515	2					
ANR	6382807	PrimaryExpression	'-'		6382515	0					
ANR	6382808	ExpressionStatement	"n = r_num_math ( num , p )"	602:6:12649:12672	6382515	2	True				
ANR	6382809	AssignmentExpression	"n = r_num_math ( num , p )"		6382515	0		=			
ANR	6382810	Identifier	n		6382515	0					
ANR	6382811	CallExpression	"r_num_math ( num , p )"		6382515	1					
ANR	6382812	Callee	r_num_math		6382515	0					
ANR	6382813	Identifier	r_num_math		6382515	0					
ANR	6382814	ArgumentList	num		6382515	1					
ANR	6382815	Argument	num		6382515	0					
ANR	6382816	Identifier	num		6382515	0					
ANR	6382817	Argument	p		6382515	1					
ANR	6382818	Identifier	p		6382515	0					
ANR	6382819	IfStatement	if ( ! n )		6382515	3					
ANR	6382820	Condition	! n	603:10:12684:12685	6382515	0	True				
ANR	6382821	UnaryOperationExpression	! n		6382515	0					
ANR	6382822	UnaryOperator	!		6382515	0					
ANR	6382823	Identifier	n		6382515	1					
ANR	6382824	CompoundStatement		50:14:922:922	6382515	1					
ANR	6382825	GotoStatement	goto fail ;	604:7:12697:12706	6382515	0	True				
ANR	6382826	Identifier	fail		6382515	0					
ANR	6382827	ExpressionStatement	"lgt = strstr ( p , ""=="" )"	608:4:12733:12755	6382515	2	True				
ANR	6382828	AssignmentExpression	"lgt = strstr ( p , ""=="" )"		6382515	0		=			
ANR	6382829	Identifier	lgt		6382515	0					
ANR	6382830	CallExpression	"strstr ( p , ""=="" )"		6382515	1					
ANR	6382831	Callee	strstr		6382515	0					
ANR	6382832	Identifier	strstr		6382515	0					
ANR	6382833	ArgumentList	p		6382515	1					
ANR	6382834	Argument	p		6382515	0					
ANR	6382835	Identifier	p		6382515	0					
ANR	6382836	Argument	"""=="""		6382515	1					
ANR	6382837	PrimaryExpression	"""=="""		6382515	0					
ANR	6382838	IfStatement	if ( lgt )		6382515	3					
ANR	6382839	Condition	lgt	609:8:12765:12767	6382515	0	True				
ANR	6382840	Identifier	lgt		6382515	0					
ANR	6382841	CompoundStatement		56:13:1004:1004	6382515	1					
ANR	6382842	ExpressionStatement	* lgt = ' '	610:5:12777:12787	6382515	0	True				
ANR	6382843	AssignmentExpression	* lgt = ' '		6382515	0		=			
ANR	6382844	UnaryOperationExpression	* lgt		6382515	0					
ANR	6382845	UnaryOperator	*		6382515	0					
ANR	6382846	Identifier	lgt		6382515	1					
ANR	6382847	PrimaryExpression	' '		6382515	1					
ANR	6382848	ExpressionStatement	"r_str_replace_char ( p , '=' , '-' )"	612:4:12799:12831	6382515	4	True				
ANR	6382849	CallExpression	"r_str_replace_char ( p , '=' , '-' )"		6382515	0					
ANR	6382850	Callee	r_str_replace_char		6382515	0					
ANR	6382851	Identifier	r_str_replace_char		6382515	0					
ANR	6382852	ArgumentList	p		6382515	1					
ANR	6382853	Argument	p		6382515	0					
ANR	6382854	Identifier	p		6382515	0					
ANR	6382855	Argument	'='		6382515	1					
ANR	6382856	PrimaryExpression	'='		6382515	0					
ANR	6382857	Argument	'-'		6382515	2					
ANR	6382858	PrimaryExpression	'-'		6382515	0					
ANR	6382859	ExpressionStatement	"n = r_num_math ( num , p )"	613:4:12837:12860	6382515	5	True				
ANR	6382860	AssignmentExpression	"n = r_num_math ( num , p )"		6382515	0		=			
ANR	6382861	Identifier	n		6382515	0					
ANR	6382862	CallExpression	"r_num_math ( num , p )"		6382515	1					
ANR	6382863	Callee	r_num_math		6382515	0					
ANR	6382864	Identifier	r_num_math		6382515	0					
ANR	6382865	ArgumentList	num		6382515	1					
ANR	6382866	Argument	num		6382515	0					
ANR	6382867	Identifier	num		6382515	0					
ANR	6382868	Argument	p		6382515	1					
ANR	6382869	Identifier	p		6382515	0					
ANR	6382870	IfStatement	if ( n )		6382515	6					
ANR	6382871	Condition	n	614:8:12870:12870	6382515	0	True				
ANR	6382872	Identifier	n		6382515	0					
ANR	6382873	CompoundStatement		61:11:1107:1107	6382515	1					
ANR	6382874	GotoStatement	goto fail ;	615:5:12880:12889	6382515	0	True				
ANR	6382875	Identifier	fail		6382515	0					
ANR	6382876	ExpressionStatement	p = t + 1	619:2:12908:12917	6382515	4	True				
ANR	6382877	AssignmentExpression	p = t + 1		6382515	0		=			
ANR	6382878	Identifier	p		6382515	0					
ANR	6382879	AdditiveExpression	t + 1		6382515	1		+			
ANR	6382880	Identifier	t		6382515	0					
ANR	6382881	PrimaryExpression	1		6382515	1					
ANR	6382882	Condition	t	620:10:12929:12929	6382515	1	True				
ANR	6382883	Identifier	t		6382515	0					
ANR	6382884	ExpressionStatement	res = 1	621:1:12934:12941	6382515	5	True				
ANR	6382885	AssignmentExpression	res = 1		6382515	0		=			
ANR	6382886	Identifier	res		6382515	0					
ANR	6382887	PrimaryExpression	1		6382515	1					
ANR	6382888	Label	fail :	622:0:12943:12947	6382515	6	True				
ANR	6382889	Identifier	fail		6382515	0					
ANR	6382890	ExpressionStatement	free ( s )	623:1:12950:12958	6382515	7	True				
ANR	6382891	CallExpression	free ( s )		6382515	0					
ANR	6382892	Callee	free		6382515	0					
ANR	6382893	Identifier	free		6382515	0					
ANR	6382894	ArgumentList	s		6382515	1					
ANR	6382895	Argument	s		6382515	0					
ANR	6382896	Identifier	s		6382515	0					
ANR	6382897	ReturnStatement	return res ;	624:1:12961:12971	6382515	8	True				
ANR	6382898	Identifier	res		6382515	0					
ANR	6382899	ReturnType	R_API int		6382515	1					
ANR	6382900	Identifier	r_num_conditional		6382515	2					
ANR	6382901	ParameterList	"RNum * num , const char * str"		6382515	3					
ANR	6382902	Parameter	RNum * num	554:28:11737:11745	6382515	0	True				
ANR	6382903	ParameterType	RNum *		6382515	0					
ANR	6382904	Identifier	num		6382515	1					
ANR	6382905	Parameter	const char * str	554:39:11748:11762	6382515	1	True				
ANR	6382906	ParameterType	const char *		6382515	0					
ANR	6382907	Identifier	str		6382515	1					
ANR	6382908	CFGEntryNode	ENTRY		6382515		True				
ANR	6382909	CFGExitNode	EXIT		6382515		True				
ANR	6382910	Symbol	res		6382515						
ANR	6382911	Symbol	a		6382515						
ANR	6382912	Symbol	b		6382515						
ANR	6382913	Symbol	* lgt		6382515						
ANR	6382914	Symbol	num		6382515						
ANR	6382915	Symbol	strchr		6382515						
ANR	6382916	Symbol	n		6382515						
ANR	6382917	Symbol	r_num_math		6382515						
ANR	6382918	Symbol	str		6382515						
ANR	6382919	Symbol	p		6382515						
ANR	6382920	Symbol	s		6382515						
ANR	6382921	Symbol	t		6382515						
ANR	6382922	Symbol	strstr		6382515						
ANR	6382923	Symbol	lgt		6382515						
ANR	6382924	Symbol	strdup		6382515						
ANR	6382925	Symbol	* t		6382515						
ANR	6382926	Function	r_num_is_valid_input	627:0:12976:13224							
ANR	6382927	FunctionDef	"r_num_is_valid_input (RNum * num , const char * input_value)"		6382926	0					
ANR	6382928	CompoundStatement		627:67:13043:13224	6382926	0					
ANR	6382929	IdentifierDeclStatement	"ut64 value = input_value ? r_num_math ( num , input_value ) : 0 ;"	628:1:13046:13106	6382926	0	True				
ANR	6382930	IdentifierDecl	"value = input_value ? r_num_math ( num , input_value ) : 0"		6382926	0					
ANR	6382931	IdentifierDeclType	ut64		6382926	0					
ANR	6382932	Identifier	value		6382926	1					
ANR	6382933	AssignmentExpression	"value = input_value ? r_num_math ( num , input_value ) : 0"		6382926	2		=			
ANR	6382934	Identifier	value		6382926	0					
ANR	6382935	ConditionalExpression	"input_value ? r_num_math ( num , input_value ) : 0"		6382926	1					
ANR	6382936	Condition	input_value		6382926	0					
ANR	6382937	Identifier	input_value		6382926	0					
ANR	6382938	CallExpression	"r_num_math ( num , input_value )"		6382926	1					
ANR	6382939	Callee	r_num_math		6382926	0					
ANR	6382940	Identifier	r_num_math		6382926	0					
ANR	6382941	ArgumentList	num		6382926	1					
ANR	6382942	Argument	num		6382926	0					
ANR	6382943	Identifier	num		6382926	0					
ANR	6382944	Argument	input_value		6382926	1					
ANR	6382945	Identifier	input_value		6382926	0					
ANR	6382946	PrimaryExpression	0		6382926	2					
ANR	6382947	ReturnStatement	return ! ( value == 0 && input_value && * input_value != '0' ) || ! ( value == 0 && input_value && * input_value != '@' ) ;	629:1:13109:13222	6382926	1	True				
ANR	6382948	OrExpression	! ( value == 0 && input_value && * input_value != '0' ) || ! ( value == 0 && input_value && * input_value != '@' )		6382926	0		||			
ANR	6382949	UnaryOperationExpression	! ( value == 0 && input_value && * input_value != '0' )		6382926	0					
ANR	6382950	UnaryOperator	!		6382926	0					
ANR	6382951	AndExpression	value == 0 && input_value && * input_value != '0'		6382926	1		&&			
ANR	6382952	EqualityExpression	value == 0		6382926	0		==			
ANR	6382953	Identifier	value		6382926	0					
ANR	6382954	PrimaryExpression	0		6382926	1					
ANR	6382955	AndExpression	input_value && * input_value != '0'		6382926	1		&&			
ANR	6382956	Identifier	input_value		6382926	0					
ANR	6382957	EqualityExpression	* input_value != '0'		6382926	1		!=			
ANR	6382958	UnaryOperationExpression	* input_value		6382926	0					
ANR	6382959	UnaryOperator	*		6382926	0					
ANR	6382960	Identifier	input_value		6382926	1					
ANR	6382961	PrimaryExpression	'0'		6382926	1					
ANR	6382962	UnaryOperationExpression	! ( value == 0 && input_value && * input_value != '@' )		6382926	1					
ANR	6382963	UnaryOperator	!		6382926	0					
ANR	6382964	AndExpression	value == 0 && input_value && * input_value != '@'		6382926	1		&&			
ANR	6382965	EqualityExpression	value == 0		6382926	0		==			
ANR	6382966	Identifier	value		6382926	0					
ANR	6382967	PrimaryExpression	0		6382926	1					
ANR	6382968	AndExpression	input_value && * input_value != '@'		6382926	1		&&			
ANR	6382969	Identifier	input_value		6382926	0					
ANR	6382970	EqualityExpression	* input_value != '@'		6382926	1		!=			
ANR	6382971	UnaryOperationExpression	* input_value		6382926	0					
ANR	6382972	UnaryOperator	*		6382926	0					
ANR	6382973	Identifier	input_value		6382926	1					
ANR	6382974	PrimaryExpression	'@'		6382926	1					
ANR	6382975	ReturnType	R_API int		6382926	1					
ANR	6382976	Identifier	r_num_is_valid_input		6382926	2					
ANR	6382977	ParameterList	"RNum * num , const char * input_value"		6382926	3					
ANR	6382978	Parameter	RNum * num	627:31:13007:13015	6382926	0	True				
ANR	6382979	ParameterType	RNum *		6382926	0					
ANR	6382980	Identifier	num		6382926	1					
ANR	6382981	Parameter	const char * input_value	627:42:13018:13040	6382926	1	True				
ANR	6382982	ParameterType	const char *		6382926	0					
ANR	6382983	Identifier	input_value		6382926	1					
ANR	6382984	CFGEntryNode	ENTRY		6382926		True				
ANR	6382985	CFGExitNode	EXIT		6382926		True				
ANR	6382986	Symbol	* input_value		6382926						
ANR	6382987	Symbol	num		6382926						
ANR	6382988	Symbol	input_value		6382926						
ANR	6382989	Symbol	value		6382926						
ANR	6382990	Symbol	r_num_math		6382926						
ANR	6382991	Function	r_num_get_input_value	632:0:13227:13376							
ANR	6382992	FunctionDef	"r_num_get_input_value (RNum * num , const char * input_value)"		6382991	0					
ANR	6382993	CompoundStatement		632:69:13296:13376	6382991	0					
ANR	6382994	IdentifierDeclStatement	"ut64 value = input_value ? r_num_math ( num , input_value ) : 0 ;"	633:1:13299:13359	6382991	0	True				
ANR	6382995	IdentifierDecl	"value = input_value ? r_num_math ( num , input_value ) : 0"		6382991	0					
ANR	6382996	IdentifierDeclType	ut64		6382991	0					
ANR	6382997	Identifier	value		6382991	1					
ANR	6382998	AssignmentExpression	"value = input_value ? r_num_math ( num , input_value ) : 0"		6382991	2		=			
ANR	6382999	Identifier	value		6382991	0					
ANR	6383000	ConditionalExpression	"input_value ? r_num_math ( num , input_value ) : 0"		6382991	1					
ANR	6383001	Condition	input_value		6382991	0					
ANR	6383002	Identifier	input_value		6382991	0					
ANR	6383003	CallExpression	"r_num_math ( num , input_value )"		6382991	1					
ANR	6383004	Callee	r_num_math		6382991	0					
ANR	6383005	Identifier	r_num_math		6382991	0					
ANR	6383006	ArgumentList	num		6382991	1					
ANR	6383007	Argument	num		6382991	0					
ANR	6383008	Identifier	num		6382991	0					
ANR	6383009	Argument	input_value		6382991	1					
ANR	6383010	Identifier	input_value		6382991	0					
ANR	6383011	PrimaryExpression	0		6382991	2					
ANR	6383012	ReturnStatement	return value ;	634:1:13362:13374	6382991	1	True				
ANR	6383013	Identifier	value		6382991	0					
ANR	6383014	ReturnType	R_API ut64		6382991	1					
ANR	6383015	Identifier	r_num_get_input_value		6382991	2					
ANR	6383016	ParameterList	"RNum * num , const char * input_value"		6382991	3					
ANR	6383017	Parameter	RNum * num	632:33:13260:13268	6382991	0	True				
ANR	6383018	ParameterType	RNum *		6382991	0					
ANR	6383019	Identifier	num		6382991	1					
ANR	6383020	Parameter	const char * input_value	632:44:13271:13293	6382991	1	True				
ANR	6383021	ParameterType	const char *		6382991	0					
ANR	6383022	Identifier	input_value		6382991	1					
ANR	6383023	CFGEntryNode	ENTRY		6382991		True				
ANR	6383024	CFGExitNode	EXIT		6382991		True				
ANR	6383025	Symbol	num		6382991						
ANR	6383026	Symbol	input_value		6382991						
ANR	6383027	Symbol	value		6382991						
ANR	6383028	Symbol	r_num_math		6382991						
ANR	6383029	Function	escape_char	638:0:13467:13833							
ANR	6383030	FunctionDef	"escape_char (char * dst , char byte)"		6383029	0					
ANR	6383031	CompoundStatement		638:45:13512:13833	6383029	0					
ANR	6383032	IdentifierDeclStatement	"const char escape_map [ ] = ""abtnvfr"" ;"	639:1:13515:13550	6383029	0	True				
ANR	6383033	IdentifierDecl	"escape_map [ ] = ""abtnvfr"""		6383029	0					
ANR	6383034	IdentifierDeclType	const char [ ]		6383029	0					
ANR	6383035	Identifier	escape_map		6383029	1					
ANR	6383036	AssignmentExpression	"escape_map [ ] = ""abtnvfr"""		6383029	2		=			
ANR	6383037	Identifier	escape_map		6383029	0					
ANR	6383038	PrimaryExpression	"""abtnvfr"""		6383029	1					
ANR	6383039	IfStatement	if ( byte >= 7 && byte <= 13 )		6383029	1					
ANR	6383040	Condition	byte >= 7 && byte <= 13	640:5:13557:13579	6383029	0	True				
ANR	6383041	AndExpression	byte >= 7 && byte <= 13		6383029	0		&&			
ANR	6383042	RelationalExpression	byte >= 7		6383029	0		>=			
ANR	6383043	Identifier	byte		6383029	0					
ANR	6383044	PrimaryExpression	7		6383029	1					
ANR	6383045	RelationalExpression	byte <= 13		6383029	1		<=			
ANR	6383046	Identifier	byte		6383029	0					
ANR	6383047	PrimaryExpression	13		6383029	1					
ANR	6383048	CompoundStatement		3:30:69:69	6383029	1					
ANR	6383049	ExpressionStatement	* ( dst ++ ) = '\\\\'	641:2:13586:13601	6383029	0	True				
ANR	6383050	AssignmentExpression	* ( dst ++ ) = '\\\\'		6383029	0		=			
ANR	6383051	UnaryOperationExpression	* ( dst ++ )		6383029	0					
ANR	6383052	UnaryOperator	*		6383029	0					
ANR	6383053	PostIncDecOperationExpression	dst ++		6383029	1					
ANR	6383054	Identifier	dst		6383029	0					
ANR	6383055	IncDec	++		6383029	1					
ANR	6383056	PrimaryExpression	'\\\\'		6383029	1					
ANR	6383057	ExpressionStatement	* ( dst ++ ) = escape_map [ byte - 7 ]	642:2:13605:13637	6383029	1	True				
ANR	6383058	AssignmentExpression	* ( dst ++ ) = escape_map [ byte - 7 ]		6383029	0		=			
ANR	6383059	UnaryOperationExpression	* ( dst ++ )		6383029	0					
ANR	6383060	UnaryOperator	*		6383029	0					
ANR	6383061	PostIncDecOperationExpression	dst ++		6383029	1					
ANR	6383062	Identifier	dst		6383029	0					
ANR	6383063	IncDec	++		6383029	1					
ANR	6383064	ArrayIndexing	escape_map [ byte - 7 ]		6383029	1					
ANR	6383065	Identifier	escape_map		6383029	0					
ANR	6383066	AdditiveExpression	byte - 7		6383029	1		-			
ANR	6383067	Identifier	byte		6383029	0					
ANR	6383068	PrimaryExpression	7		6383029	1					
ANR	6383069	ExpressionStatement	* dst = 0	643:2:13641:13649	6383029	2	True				
ANR	6383070	AssignmentExpression	* dst = 0		6383029	0		=			
ANR	6383071	UnaryOperationExpression	* dst		6383029	0					
ANR	6383072	UnaryOperator	*		6383029	0					
ANR	6383073	Identifier	dst		6383029	1					
ANR	6383074	PrimaryExpression	0		6383029	1					
ANR	6383075	ReturnStatement	return 2 ;	644:2:13653:13661	6383029	3	True				
ANR	6383076	PrimaryExpression	2		6383029	0					
ANR	6383077	ElseStatement	else		6383029	0					
ANR	6383078	IfStatement	if ( byte )		6383029	0					
ANR	6383079	Condition	byte	645:12:13675:13678	6383029	0	True				
ANR	6383080	Identifier	byte		6383029	0					
ANR	6383081	CompoundStatement		8:18:168:168	6383029	1					
ANR	6383082	ExpressionStatement	* ( dst ++ ) = '\\\\'	646:2:13685:13700	6383029	0	True				
ANR	6383083	AssignmentExpression	* ( dst ++ ) = '\\\\'		6383029	0		=			
ANR	6383084	UnaryOperationExpression	* ( dst ++ )		6383029	0					
ANR	6383085	UnaryOperator	*		6383029	0					
ANR	6383086	PostIncDecOperationExpression	dst ++		6383029	1					
ANR	6383087	Identifier	dst		6383029	0					
ANR	6383088	IncDec	++		6383029	1					
ANR	6383089	PrimaryExpression	'\\\\'		6383029	1					
ANR	6383090	ExpressionStatement	* ( dst ++ ) = 'x'	647:2:13704:13718	6383029	1	True				
ANR	6383091	AssignmentExpression	* ( dst ++ ) = 'x'		6383029	0		=			
ANR	6383092	UnaryOperationExpression	* ( dst ++ )		6383029	0					
ANR	6383093	UnaryOperator	*		6383029	0					
ANR	6383094	PostIncDecOperationExpression	dst ++		6383029	1					
ANR	6383095	Identifier	dst		6383029	0					
ANR	6383096	IncDec	++		6383029	1					
ANR	6383097	PrimaryExpression	'x'		6383029	1					
ANR	6383098	ExpressionStatement	* ( dst ++ ) = NIBBLE_TO_HEX ( byte >> 4 )	648:2:13722:13758	6383029	2	True				
ANR	6383099	AssignmentExpression	* ( dst ++ ) = NIBBLE_TO_HEX ( byte >> 4 )		6383029	0		=			
ANR	6383100	UnaryOperationExpression	* ( dst ++ )		6383029	0					
ANR	6383101	UnaryOperator	*		6383029	0					
ANR	6383102	PostIncDecOperationExpression	dst ++		6383029	1					
ANR	6383103	Identifier	dst		6383029	0					
ANR	6383104	IncDec	++		6383029	1					
ANR	6383105	CallExpression	NIBBLE_TO_HEX ( byte >> 4 )		6383029	1					
ANR	6383106	Callee	NIBBLE_TO_HEX		6383029	0					
ANR	6383107	Identifier	NIBBLE_TO_HEX		6383029	0					
ANR	6383108	ArgumentList	byte >> 4		6383029	1					
ANR	6383109	Argument	byte >> 4		6383029	0					
ANR	6383110	ShiftExpression	byte >> 4		6383029	0		>>			
ANR	6383111	Identifier	byte		6383029	0					
ANR	6383112	PrimaryExpression	4		6383029	1					
ANR	6383113	ExpressionStatement	* ( dst ++ ) = NIBBLE_TO_HEX ( byte )	649:2:13762:13793	6383029	3	True				
ANR	6383114	AssignmentExpression	* ( dst ++ ) = NIBBLE_TO_HEX ( byte )		6383029	0		=			
ANR	6383115	UnaryOperationExpression	* ( dst ++ )		6383029	0					
ANR	6383116	UnaryOperator	*		6383029	0					
ANR	6383117	PostIncDecOperationExpression	dst ++		6383029	1					
ANR	6383118	Identifier	dst		6383029	0					
ANR	6383119	IncDec	++		6383029	1					
ANR	6383120	CallExpression	NIBBLE_TO_HEX ( byte )		6383029	1					
ANR	6383121	Callee	NIBBLE_TO_HEX		6383029	0					
ANR	6383122	Identifier	NIBBLE_TO_HEX		6383029	0					
ANR	6383123	ArgumentList	byte		6383029	1					
ANR	6383124	Argument	byte		6383029	0					
ANR	6383125	Identifier	byte		6383029	0					
ANR	6383126	ExpressionStatement	* dst = 0	650:2:13797:13805	6383029	4	True				
ANR	6383127	AssignmentExpression	* dst = 0		6383029	0		=			
ANR	6383128	UnaryOperationExpression	* dst		6383029	0					
ANR	6383129	UnaryOperator	*		6383029	0					
ANR	6383130	Identifier	dst		6383029	1					
ANR	6383131	PrimaryExpression	0		6383029	1					
ANR	6383132	ReturnStatement	return 4 ;	651:2:13809:13817	6383029	5	True				
ANR	6383133	PrimaryExpression	4		6383029	0					
ANR	6383134	ReturnStatement	return 0 ;	653:1:13823:13831	6383029	2	True				
ANR	6383135	PrimaryExpression	0		6383029	0					
ANR	6383136	ReturnType	static int		6383029	1					
ANR	6383137	Identifier	escape_char		6383029	2					
ANR	6383138	ParameterList	"char * dst , char byte"		6383029	3					
ANR	6383139	Parameter	char * dst	638:23:13490:13498	6383029	0	True				
ANR	6383140	ParameterType	char *		6383029	0					
ANR	6383141	Identifier	dst		6383029	1					
ANR	6383142	Parameter	char byte	638:34:13501:13509	6383029	1	True				
ANR	6383143	ParameterType	char		6383029	0					
ANR	6383144	Identifier	byte		6383029	1					
ANR	6383145	CFGEntryNode	ENTRY		6383029		True				
ANR	6383146	CFGExitNode	EXIT		6383029		True				
ANR	6383147	Symbol	* dst		6383029						
ANR	6383148	Symbol	* byte		6383029						
ANR	6383149	Symbol	dst		6383029						
ANR	6383150	Symbol	byte		6383029						
ANR	6383151	Symbol	* escape_map		6383029						
ANR	6383152	Symbol	NIBBLE_TO_HEX		6383029						
ANR	6383153	Symbol	* ( dst ++ )		6383029						
ANR	6383154	Symbol	escape_map		6383029						
ANR	6383155	Function	r_num_as_string	656:0:13836:14442							
ANR	6383156	FunctionDef	"r_num_as_string (RNum * ___ , ut64 n , bool printable_only)"		6383155	0					
ANR	6383157	CompoundStatement		656:68:13904:14442	6383155	0					
ANR	6383158	IdentifierDeclStatement	char str [ 34 ] ;	657:1:13907:13919	6383155	0	True				
ANR	6383159	IdentifierDecl	str [ 34 ]		6383155	0					
ANR	6383160	IdentifierDeclType	char [ 34 ]		6383155	0					
ANR	6383161	Identifier	str		6383155	1					
ANR	6383162	PrimaryExpression	34		6383155	2					
ANR	6383163	IdentifierDeclStatement	"int stri , ret = 0 , off = 0 ;"	658:1:13957:13983	6383155	1	True				
ANR	6383164	IdentifierDecl	stri		6383155	0					
ANR	6383165	IdentifierDeclType	int		6383155	0					
ANR	6383166	Identifier	stri		6383155	1					
ANR	6383167	IdentifierDecl	ret = 0		6383155	1					
ANR	6383168	IdentifierDeclType	int		6383155	0					
ANR	6383169	Identifier	ret		6383155	1					
ANR	6383170	AssignmentExpression	ret = 0		6383155	2		=			
ANR	6383171	Identifier	ret		6383155	0					
ANR	6383172	PrimaryExpression	0		6383155	1					
ANR	6383173	IdentifierDecl	off = 0		6383155	2					
ANR	6383174	IdentifierDeclType	int		6383155	0					
ANR	6383175	Identifier	off		6383155	1					
ANR	6383176	AssignmentExpression	off = 0		6383155	2		=			
ANR	6383177	Identifier	off		6383155	0					
ANR	6383178	PrimaryExpression	0		6383155	1					
ANR	6383179	IdentifierDeclStatement	int len = sizeof ( ut64 ) ;	659:1:13986:14009	6383155	2	True				
ANR	6383180	IdentifierDecl	len = sizeof ( ut64 )		6383155	0					
ANR	6383181	IdentifierDeclType	int		6383155	0					
ANR	6383182	Identifier	len		6383155	1					
ANR	6383183	AssignmentExpression	len = sizeof ( ut64 )		6383155	2		=			
ANR	6383184	Identifier	len		6383155	0					
ANR	6383185	SizeofExpression	sizeof ( ut64 )		6383155	1					
ANR	6383186	Sizeof	sizeof		6383155	0					
ANR	6383187	SizeofOperand	ut64		6383155	1					
ANR	6383188	IdentifierDeclStatement	ut64 num = n ;	660:1:14012:14024	6383155	3	True				
ANR	6383189	IdentifierDecl	num = n		6383155	0					
ANR	6383190	IdentifierDeclType	ut64		6383155	0					
ANR	6383191	Identifier	num		6383155	1					
ANR	6383192	AssignmentExpression	num = n		6383155	2		=			
ANR	6383193	Identifier	n		6383155	0					
ANR	6383194	Identifier	n		6383155	1					
ANR	6383195	ExpressionStatement	str [ stri = 0 ] = 0	661:1:14027:14042	6383155	4	True				
ANR	6383196	AssignmentExpression	str [ stri = 0 ] = 0		6383155	0		=			
ANR	6383197	ArrayIndexing	str [ stri = 0 ]		6383155	0					
ANR	6383198	Identifier	str		6383155	0					
ANR	6383199	AssignmentExpression	stri = 0		6383155	1		=			
ANR	6383200	Identifier	stri		6383155	0					
ANR	6383201	PrimaryExpression	0		6383155	1					
ANR	6383202	PrimaryExpression	0		6383155	1					
ANR	6383203	WhileStatement	while ( len -- )		6383155	5					
ANR	6383204	Condition	len --	662:8:14052:14056	6383155	0	True				
ANR	6383205	PostIncDecOperationExpression	len --		6383155	0					
ANR	6383206	Identifier	len		6383155	0					
ANR	6383207	IncDec	--		6383155	1					
ANR	6383208	CompoundStatement		8:2:158:180	6383155	1					
ANR	6383209	IdentifierDeclStatement	char ch = ( num & 0xff ) ;	663:2:14063:14085	6383155	0	True				
ANR	6383210	IdentifierDecl	ch = ( num & 0xff )		6383155	0					
ANR	6383211	IdentifierDeclType	char		6383155	0					
ANR	6383212	Identifier	ch		6383155	1					
ANR	6383213	AssignmentExpression	ch = ( num & 0xff )		6383155	2		=			
ANR	6383214	Identifier	ch		6383155	0					
ANR	6383215	BitAndExpression	num & 0xff		6383155	1		&			
ANR	6383216	Identifier	num		6383155	0					
ANR	6383217	PrimaryExpression	0xff		6383155	1					
ANR	6383218	IfStatement	if ( ch >= 32 && ch < 127 )		6383155	1					
ANR	6383219	Condition	ch >= 32 && ch < 127	664:6:14093:14112	6383155	0	True				
ANR	6383220	AndExpression	ch >= 32 && ch < 127		6383155	0		&&			
ANR	6383221	RelationalExpression	ch >= 32		6383155	0		>=			
ANR	6383222	Identifier	ch		6383155	0					
ANR	6383223	PrimaryExpression	32		6383155	1					
ANR	6383224	RelationalExpression	ch < 127		6383155	1		<			
ANR	6383225	Identifier	ch		6383155	0					
ANR	6383226	PrimaryExpression	127		6383155	1					
ANR	6383227	CompoundStatement		9:28:210:210	6383155	1					
ANR	6383228	ExpressionStatement	str [ stri ++ ] = ch	665:3:14120:14136	6383155	0	True				
ANR	6383229	AssignmentExpression	str [ stri ++ ] = ch		6383155	0		=			
ANR	6383230	ArrayIndexing	str [ stri ++ ]		6383155	0					
ANR	6383231	Identifier	str		6383155	0					
ANR	6383232	PostIncDecOperationExpression	stri ++		6383155	1					
ANR	6383233	Identifier	stri		6383155	0					
ANR	6383234	IncDec	++		6383155	1					
ANR	6383235	Identifier	ch		6383155	1					
ANR	6383236	ExpressionStatement	str [ stri ] = 0	666:3:14141:14154	6383155	1	True				
ANR	6383237	AssignmentExpression	str [ stri ] = 0		6383155	0		=			
ANR	6383238	ArrayIndexing	str [ stri ]		6383155	0					
ANR	6383239	Identifier	str		6383155	0					
ANR	6383240	Identifier	stri		6383155	1					
ANR	6383241	PrimaryExpression	0		6383155	1					
ANR	6383242	ElseStatement	else		6383155	0					
ANR	6383243	IfStatement	"if ( ! printable_only && ( off = escape_char ( str + stri , ch ) ) != 0 )"		6383155	0					
ANR	6383244	Condition	"! printable_only && ( off = escape_char ( str + stri , ch ) ) != 0"	667:13:14169:14228	6383155	0	True				
ANR	6383245	AndExpression	"! printable_only && ( off = escape_char ( str + stri , ch ) ) != 0"		6383155	0		&&			
ANR	6383246	UnaryOperationExpression	! printable_only		6383155	0					
ANR	6383247	UnaryOperator	!		6383155	0					
ANR	6383248	Identifier	printable_only		6383155	1					
ANR	6383249	EqualityExpression	"( off = escape_char ( str + stri , ch ) ) != 0"		6383155	1		!=			
ANR	6383250	AssignmentExpression	"off = escape_char ( str + stri , ch )"		6383155	0		=			
ANR	6383251	Identifier	off		6383155	0					
ANR	6383252	CallExpression	"escape_char ( str + stri , ch )"		6383155	1					
ANR	6383253	Callee	escape_char		6383155	0					
ANR	6383254	Identifier	escape_char		6383155	0					
ANR	6383255	ArgumentList	str + stri		6383155	1					
ANR	6383256	Argument	str + stri		6383155	0					
ANR	6383257	AdditiveExpression	str + stri		6383155	0		+			
ANR	6383258	Identifier	str		6383155	0					
ANR	6383259	Identifier	stri		6383155	1					
ANR	6383260	Argument	ch		6383155	1					
ANR	6383261	Identifier	ch		6383155	0					
ANR	6383262	PrimaryExpression	0		6383155	1					
ANR	6383263	CompoundStatement		12:75:326:326	6383155	1					
ANR	6383264	ExpressionStatement	stri += off	668:3:14236:14247	6383155	0	True				
ANR	6383265	AssignmentExpression	stri += off		6383155	0		+=			
ANR	6383266	Identifier	stri		6383155	0					
ANR	6383267	Identifier	off		6383155	1					
ANR	6383268	ElseStatement	else		6383155	0					
ANR	6383269	CompoundStatement		14:9:353:353	6383155	0					
ANR	6383270	IfStatement	if ( ch )		6383155	0					
ANR	6383271	Condition	ch	670:7:14267:14268	6383155	0	True				
ANR	6383272	Identifier	ch		6383155	0					
ANR	6383273	CompoundStatement		15:11:366:366	6383155	1					
ANR	6383274	ReturnStatement	return NULL ;	671:4:14277:14288	6383155	0	True				
ANR	6383275	Identifier	NULL		6383155	0					
ANR	6383276	ExpressionStatement	ret |= ( num & 0xff )	674:2:14301:14320	6383155	2	True				
ANR	6383277	AssignmentExpression	ret |= ( num & 0xff )		6383155	0		|=			
ANR	6383278	Identifier	ret		6383155	0					
ANR	6383279	BitAndExpression	num & 0xff		6383155	1		&			
ANR	6383280	Identifier	num		6383155	0					
ANR	6383281	PrimaryExpression	0xff		6383155	1					
ANR	6383282	ExpressionStatement	num >>= 8	675:2:14324:14333	6383155	3	True				
ANR	6383283	AssignmentExpression	num >>= 8		6383155	0		>>=			
ANR	6383284	Identifier	num		6383155	0					
ANR	6383285	PrimaryExpression	8		6383155	1					
ANR	6383286	IfStatement	if ( ret )		6383155	6					
ANR	6383287	Condition	ret	677:5:14343:14345	6383155	0	True				
ANR	6383288	Identifier	ret		6383155	0					
ANR	6383289	CompoundStatement		22:10:443:443	6383155	1					
ANR	6383290	ReturnStatement	return strdup ( str ) ;	678:2:14352:14371	6383155	0	True				
ANR	6383291	CallExpression	strdup ( str )		6383155	0					
ANR	6383292	Callee	strdup		6383155	0					
ANR	6383293	Identifier	strdup		6383155	0					
ANR	6383294	ArgumentList	str		6383155	1					
ANR	6383295	Argument	str		6383155	0					
ANR	6383296	Identifier	str		6383155	0					
ANR	6383297	IfStatement	if ( ! printable_only )		6383155	7					
ANR	6383298	Condition	! printable_only	680:5:14381:14395	6383155	0	True				
ANR	6383299	UnaryOperationExpression	! printable_only		6383155	0					
ANR	6383300	UnaryOperator	!		6383155	0					
ANR	6383301	Identifier	printable_only		6383155	1					
ANR	6383302	CompoundStatement		25:22:493:493	6383155	1					
ANR	6383303	ReturnStatement	"return strdup ( ""\\\\0"" ) ;"	681:2:14402:14423	6383155	0	True				
ANR	6383304	CallExpression	"strdup ( ""\\\\0"" )"		6383155	0					
ANR	6383305	Callee	strdup		6383155	0					
ANR	6383306	Identifier	strdup		6383155	0					
ANR	6383307	ArgumentList	"""\\\\0"""		6383155	1					
ANR	6383308	Argument	"""\\\\0"""		6383155	0					
ANR	6383309	PrimaryExpression	"""\\\\0"""		6383155	0					
ANR	6383310	ReturnStatement	return NULL ;	683:1:14429:14440	6383155	8	True				
ANR	6383311	Identifier	NULL		6383155	0					
ANR	6383312	ReturnType	R_API char *		6383155	1					
ANR	6383313	Identifier	r_num_as_string		6383155	2					
ANR	6383314	ParameterList	"RNum * ___ , ut64 n , bool printable_only"		6383155	3					
ANR	6383315	Parameter	RNum * ___	656:28:13864:13872	6383155	0	True				
ANR	6383316	ParameterType	RNum *		6383155	0					
ANR	6383317	Identifier	___		6383155	1					
ANR	6383318	Parameter	ut64 n	656:39:13875:13880	6383155	1	True				
ANR	6383319	ParameterType	ut64		6383155	0					
ANR	6383320	Identifier	n		6383155	1					
ANR	6383321	Parameter	bool printable_only	656:47:13883:13901	6383155	2	True				
ANR	6383322	ParameterType	bool		6383155	0					
ANR	6383323	Identifier	printable_only		6383155	1					
ANR	6383324	CFGEntryNode	ENTRY		6383155		True				
ANR	6383325	CFGExitNode	EXIT		6383155		True				
ANR	6383326	Symbol	ret		6383155						
ANR	6383327	Symbol	NULL		6383155						
ANR	6383328	Symbol	ch		6383155						
ANR	6383329	Symbol	num		6383155						
ANR	6383330	Symbol	escape_char		6383155						
ANR	6383331	Symbol	* stri		6383155						
ANR	6383332	Symbol	n		6383155						
ANR	6383333	Symbol	off		6383155						
ANR	6383334	Symbol	stri		6383155						
ANR	6383335	Symbol	printable_only		6383155						
ANR	6383336	Symbol	str		6383155						
ANR	6383337	Symbol	len		6383155						
ANR	6383338	Symbol	* str		6383155						
ANR	6383339	Symbol	strdup		6383155						
ANR	6383340	Symbol	___		6383155						
ANR	6383341	Function	r_is_valid_input_num_value	687:0:14459:14657							
ANR	6383342	FunctionDef	"r_is_valid_input_num_value (RNum * num , const char * input_value)"		6383341	0					
ANR	6383343	CompoundStatement		687:72:14531:14657	6383341	0					
ANR	6383344	IdentifierDeclStatement	"ut64 value = input_value ? r_num_math ( num , input_value ) : 0 ;"	688:1:14534:14594	6383341	0	True				
ANR	6383345	IdentifierDecl	"value = input_value ? r_num_math ( num , input_value ) : 0"		6383341	0					
ANR	6383346	IdentifierDeclType	ut64		6383341	0					
ANR	6383347	Identifier	value		6383341	1					
ANR	6383348	AssignmentExpression	"value = input_value ? r_num_math ( num , input_value ) : 0"		6383341	2		=			
ANR	6383349	Identifier	value		6383341	0					
ANR	6383350	ConditionalExpression	"input_value ? r_num_math ( num , input_value ) : 0"		6383341	1					
ANR	6383351	Condition	input_value		6383341	0					
ANR	6383352	Identifier	input_value		6383341	0					
ANR	6383353	CallExpression	"r_num_math ( num , input_value )"		6383341	1					
ANR	6383354	Callee	r_num_math		6383341	0					
ANR	6383355	Identifier	r_num_math		6383341	0					
ANR	6383356	ArgumentList	num		6383341	1					
ANR	6383357	Argument	num		6383341	0					
ANR	6383358	Identifier	num		6383341	0					
ANR	6383359	Argument	input_value		6383341	1					
ANR	6383360	Identifier	input_value		6383341	0					
ANR	6383361	PrimaryExpression	0		6383341	2					
ANR	6383362	ReturnStatement	return ! ( value == 0 && input_value && * input_value == '0' ) ;	689:1:14597:14655	6383341	1	True				
ANR	6383363	UnaryOperationExpression	! ( value == 0 && input_value && * input_value == '0' )		6383341	0					
ANR	6383364	UnaryOperator	!		6383341	0					
ANR	6383365	AndExpression	value == 0 && input_value && * input_value == '0'		6383341	1		&&			
ANR	6383366	EqualityExpression	value == 0		6383341	0		==			
ANR	6383367	Identifier	value		6383341	0					
ANR	6383368	PrimaryExpression	0		6383341	1					
ANR	6383369	AndExpression	input_value && * input_value == '0'		6383341	1		&&			
ANR	6383370	Identifier	input_value		6383341	0					
ANR	6383371	EqualityExpression	* input_value == '0'		6383341	1		==			
ANR	6383372	UnaryOperationExpression	* input_value		6383341	0					
ANR	6383373	UnaryOperator	*		6383341	0					
ANR	6383374	Identifier	input_value		6383341	1					
ANR	6383375	PrimaryExpression	'0'		6383341	1					
ANR	6383376	ReturnType	R_API int		6383341	1					
ANR	6383377	Identifier	r_is_valid_input_num_value		6383341	2					
ANR	6383378	ParameterList	"RNum * num , const char * input_value"		6383341	3					
ANR	6383379	Parameter	RNum * num	687:37:14496:14504	6383341	0	True				
ANR	6383380	ParameterType	RNum *		6383341	0					
ANR	6383381	Identifier	num		6383341	1					
ANR	6383382	Parameter	const char * input_value	687:48:14507:14529	6383341	1	True				
ANR	6383383	ParameterType	const char *		6383341	0					
ANR	6383384	Identifier	input_value		6383341	1					
ANR	6383385	CFGEntryNode	ENTRY		6383341		True				
ANR	6383386	CFGExitNode	EXIT		6383341		True				
ANR	6383387	Symbol	* input_value		6383341						
ANR	6383388	Symbol	num		6383341						
ANR	6383389	Symbol	input_value		6383341						
ANR	6383390	Symbol	value		6383341						
ANR	6383391	Symbol	r_num_math		6383341						
ANR	6383392	Function	r_get_input_num_value	693:0:14674:14787							
ANR	6383393	FunctionDef	"r_get_input_num_value (RNum * num , const char * str)"		6383392	0					
ANR	6383394	CompoundStatement		693:61:14735:14787	6383392	0					
ANR	6383395	ReturnStatement	"return ( str && * str ) ? r_num_math ( num , str ) : 0 ;"	694:1:14738:14785	6383392	0	True				
ANR	6383396	ConditionalExpression	"( str && * str ) ? r_num_math ( num , str ) : 0"		6383392	0					
ANR	6383397	Condition	str && * str		6383392	0					
ANR	6383398	AndExpression	str && * str		6383392	0		&&			
ANR	6383399	Identifier	str		6383392	0					
ANR	6383400	UnaryOperationExpression	* str		6383392	1					
ANR	6383401	UnaryOperator	*		6383392	0					
ANR	6383402	Identifier	str		6383392	1					
ANR	6383403	CallExpression	"r_num_math ( num , str )"		6383392	1					
ANR	6383404	Callee	r_num_math		6383392	0					
ANR	6383405	Identifier	r_num_math		6383392	0					
ANR	6383406	ArgumentList	num		6383392	1					
ANR	6383407	Argument	num		6383392	0					
ANR	6383408	Identifier	num		6383392	0					
ANR	6383409	Argument	str		6383392	1					
ANR	6383410	Identifier	str		6383392	0					
ANR	6383411	PrimaryExpression	0		6383392	2					
ANR	6383412	ReturnType	R_API ut64		6383392	1					
ANR	6383413	Identifier	r_get_input_num_value		6383392	2					
ANR	6383414	ParameterList	"RNum * num , const char * str"		6383392	3					
ANR	6383415	Parameter	RNum * num	693:33:14707:14715	6383392	0	True				
ANR	6383416	ParameterType	RNum *		6383392	0					
ANR	6383417	Identifier	num		6383392	1					
ANR	6383418	Parameter	const char * str	693:44:14718:14732	6383392	1	True				
ANR	6383419	ParameterType	const char *		6383392	0					
ANR	6383420	Identifier	str		6383392	1					
ANR	6383421	CFGEntryNode	ENTRY		6383392		True				
ANR	6383422	CFGExitNode	EXIT		6383392		True				
ANR	6383423	Symbol	str		6383392						
ANR	6383424	Symbol	num		6383392						
ANR	6383425	Symbol	* str		6383392						
ANR	6383426	Symbol	r_num_math		6383392						
ANR	6383427	Function	__nth_nibble	698:0:14804:14934							
ANR	6383428	FunctionDef	"__nth_nibble (ut64 n , ut32 i)"		6383427	0					
ANR	6383429	CompoundStatement		698:48:14852:14934	6383427	0					
ANR	6383430	IdentifierDeclStatement	int sz = ( sizeof ( n ) << 1 ) - 1 ;	699:1:14855:14885	6383427	0	True				
ANR	6383431	IdentifierDecl	sz = ( sizeof ( n ) << 1 ) - 1		6383427	0					
ANR	6383432	IdentifierDeclType	int		6383427	0					
ANR	6383433	Identifier	sz		6383427	1					
ANR	6383434	AssignmentExpression	sz = ( sizeof ( n ) << 1 ) - 1		6383427	2		=			
ANR	6383435	Identifier	sz		6383427	0					
ANR	6383436	AdditiveExpression	( sizeof ( n ) << 1 ) - 1		6383427	1		-			
ANR	6383437	ShiftExpression	sizeof ( n ) << 1		6383427	0		<<			
ANR	6383438	SizeofExpression	sizeof ( n )		6383427	0					
ANR	6383439	Sizeof	sizeof		6383427	0					
ANR	6383440	SizeofOperand	n		6383427	1					
ANR	6383441	PrimaryExpression	1		6383427	1					
ANR	6383442	PrimaryExpression	1		6383427	1					
ANR	6383443	IdentifierDeclStatement	int s = ( sz - i ) * 4 ;	700:1:14888:14908	6383427	1	True				
ANR	6383444	IdentifierDecl	s = ( sz - i ) * 4		6383427	0					
ANR	6383445	IdentifierDeclType	int		6383427	0					
ANR	6383446	Identifier	s		6383427	1					
ANR	6383447	AssignmentExpression	s = ( sz - i ) * 4		6383427	2		=			
ANR	6383448	Identifier	s		6383427	0					
ANR	6383449	MultiplicativeExpression	( sz - i ) * 4		6383427	1		*			
ANR	6383450	AdditiveExpression	sz - i		6383427	0		-			
ANR	6383451	Identifier	sz		6383427	0					
ANR	6383452	Identifier	i		6383427	1					
ANR	6383453	PrimaryExpression	4		6383427	1					
ANR	6383454	ReturnStatement	return ( n >> s ) & 0xf ;	701:1:14911:14932	6383427	2	True				
ANR	6383455	BitAndExpression	( n >> s ) & 0xf		6383427	0		&			
ANR	6383456	ShiftExpression	n >> s		6383427	0		>>			
ANR	6383457	Identifier	n		6383427	0					
ANR	6383458	Identifier	s		6383427	1					
ANR	6383459	PrimaryExpression	0xf		6383427	1					
ANR	6383460	ReturnType	static inline ut64		6383427	1					
ANR	6383461	Identifier	__nth_nibble		6383427	2					
ANR	6383462	ParameterList	"ut64 n , ut32 i"		6383427	3					
ANR	6383463	Parameter	ut64 n	698:32:14836:14841	6383427	0	True				
ANR	6383464	ParameterType	ut64		6383427	0					
ANR	6383465	Identifier	n		6383427	1					
ANR	6383466	Parameter	ut32 i	698:40:14844:14849	6383427	1	True				
ANR	6383467	ParameterType	ut32		6383427	0					
ANR	6383468	Identifier	i		6383427	1					
ANR	6383469	CFGEntryNode	ENTRY		6383427		True				
ANR	6383470	CFGExitNode	EXIT		6383427		True				
ANR	6383471	Symbol	s		6383427						
ANR	6383472	Symbol	sz		6383427						
ANR	6383473	Symbol	i		6383427						
ANR	6383474	Symbol	n		6383427						
ANR	6383475	Function	r_num_tail_base	704:0:14937:15333							
ANR	6383476	FunctionDef	"r_num_tail_base (RNum * num , ut64 addr , ut64 off)"		6383475	0					
ANR	6383477	CompoundStatement		704:59:14996:15333	6383475	0					
ANR	6383478	IdentifierDeclStatement	int i ;	705:1:14999:15004	6383475	0	True				
ANR	6383479	IdentifierDecl	i		6383475	0					
ANR	6383480	IdentifierDeclType	int		6383475	0					
ANR	6383481	Identifier	i		6383475	1					
ANR	6383482	IdentifierDeclStatement	bool ready = false ;	706:1:15007:15025	6383475	1	True				
ANR	6383483	IdentifierDecl	ready = false		6383475	0					
ANR	6383484	IdentifierDeclType	bool		6383475	0					
ANR	6383485	Identifier	ready		6383475	1					
ANR	6383486	AssignmentExpression	ready = false		6383475	2		=			
ANR	6383487	Identifier	false		6383475	0					
ANR	6383488	Identifier	false		6383475	1					
ANR	6383489	IdentifierDeclStatement	ut64 res = 0 ;	707:1:15028:15040	6383475	2	True				
ANR	6383490	IdentifierDecl	res = 0		6383475	0					
ANR	6383491	IdentifierDeclType	ut64		6383475	0					
ANR	6383492	Identifier	res		6383475	1					
ANR	6383493	AssignmentExpression	res = 0		6383475	2		=			
ANR	6383494	Identifier	res		6383475	0					
ANR	6383495	PrimaryExpression	0		6383475	1					
ANR	6383496	ForStatement	for ( i = 0 ; i < 16 ; i ++ )		6383475	3					
ANR	6383497	ForInit	i = 0 ;	708:6:15048:15053	6383475	0	True				
ANR	6383498	AssignmentExpression	i = 0		6383475	0		=			
ANR	6383499	Identifier	i		6383475	0					
ANR	6383500	PrimaryExpression	0		6383475	1					
ANR	6383501	Condition	i < 16	708:13:15055:15060	6383475	1	True				
ANR	6383502	RelationalExpression	i < 16		6383475	0		<			
ANR	6383503	Identifier	i		6383475	0					
ANR	6383504	PrimaryExpression	16		6383475	1					
ANR	6383505	PostIncDecOperationExpression	i ++	708:21:15063:15065	6383475	2	True				
ANR	6383506	Identifier	i		6383475	0					
ANR	6383507	IncDec	++		6383475	1					
ANR	6383508	CompoundStatement		17:2:275:297	6383475	3					
ANR	6383509	IdentifierDeclStatement	"ut64 o = __nth_nibble ( off , i ) ;"	709:2:15072:15102	6383475	0	True				
ANR	6383510	IdentifierDecl	"o = __nth_nibble ( off , i )"		6383475	0					
ANR	6383511	IdentifierDeclType	ut64		6383475	0					
ANR	6383512	Identifier	o		6383475	1					
ANR	6383513	AssignmentExpression	"o = __nth_nibble ( off , i )"		6383475	2		=			
ANR	6383514	Identifier	o		6383475	0					
ANR	6383515	CallExpression	"__nth_nibble ( off , i )"		6383475	1					
ANR	6383516	Callee	__nth_nibble		6383475	0					
ANR	6383517	Identifier	__nth_nibble		6383475	0					
ANR	6383518	ArgumentList	off		6383475	1					
ANR	6383519	Argument	off		6383475	0					
ANR	6383520	Identifier	off		6383475	0					
ANR	6383521	Argument	i		6383475	1					
ANR	6383522	Identifier	i		6383475	0					
ANR	6383523	IfStatement	if ( ! ready )		6383475	1					
ANR	6383524	Condition	! ready	710:6:15110:15115	6383475	0	True				
ANR	6383525	UnaryOperationExpression	! ready		6383475	0					
ANR	6383526	UnaryOperator	!		6383475	0					
ANR	6383527	Identifier	ready		6383475	1					
ANR	6383528	CompoundStatement		8:3:126:165	6383475	1					
ANR	6383529	IdentifierDeclStatement	"bool iseq = __nth_nibble ( addr , i ) == o ;"	711:3:15123:15162	6383475	0	True				
ANR	6383530	IdentifierDecl	"iseq = __nth_nibble ( addr , i ) == o"		6383475	0					
ANR	6383531	IdentifierDeclType	bool		6383475	0					
ANR	6383532	Identifier	iseq		6383475	1					
ANR	6383533	AssignmentExpression	"iseq = __nth_nibble ( addr , i ) == o"		6383475	2		=			
ANR	6383534	Identifier	iseq		6383475	0					
ANR	6383535	EqualityExpression	"__nth_nibble ( addr , i ) == o"		6383475	1		==			
ANR	6383536	CallExpression	"__nth_nibble ( addr , i )"		6383475	0					
ANR	6383537	Callee	__nth_nibble		6383475	0					
ANR	6383538	Identifier	__nth_nibble		6383475	0					
ANR	6383539	ArgumentList	addr		6383475	1					
ANR	6383540	Argument	addr		6383475	0					
ANR	6383541	Identifier	addr		6383475	0					
ANR	6383542	Argument	i		6383475	1					
ANR	6383543	Identifier	i		6383475	0					
ANR	6383544	Identifier	o		6383475	1					
ANR	6383545	IfStatement	if ( i == 0 && ! iseq )		6383475	1					
ANR	6383546	Condition	i == 0 && ! iseq	712:7:15171:15185	6383475	0	True				
ANR	6383547	AndExpression	i == 0 && ! iseq		6383475	0		&&			
ANR	6383548	EqualityExpression	i == 0		6383475	0		==			
ANR	6383549	Identifier	i		6383475	0					
ANR	6383550	PrimaryExpression	0		6383475	1					
ANR	6383551	UnaryOperationExpression	! iseq		6383475	1					
ANR	6383552	UnaryOperator	!		6383475	0					
ANR	6383553	Identifier	iseq		6383475	1					
ANR	6383554	CompoundStatement		9:24:191:191	6383475	1					
ANR	6383555	ReturnStatement	return UT64_MAX ;	713:4:15194:15209	6383475	0	True				
ANR	6383556	Identifier	UT64_MAX		6383475	0					
ANR	6383557	IfStatement	if ( iseq )		6383475	2					
ANR	6383558	Condition	iseq	715:7:15223:15226	6383475	0	True				
ANR	6383559	Identifier	iseq		6383475	0					
ANR	6383560	CompoundStatement		12:13:232:232	6383475	1					
ANR	6383561	ContinueStatement	continue ;	716:4:15235:15243	6383475	0	True				
ANR	6383562	ExpressionStatement	ready = true	719:2:15256:15268	6383475	2	True				
ANR	6383563	AssignmentExpression	ready = true		6383475	0		=			
ANR	6383564	Identifier	ready		6383475	0					
ANR	6383565	Identifier	true		6383475	1					
ANR	6383566	IdentifierDeclStatement	ut8 pos = ( 15 - i ) * 4 ;	720:2:15272:15294	6383475	3	True				
ANR	6383567	IdentifierDecl	pos = ( 15 - i ) * 4		6383475	0					
ANR	6383568	IdentifierDeclType	ut8		6383475	0					
ANR	6383569	Identifier	pos		6383475	1					
ANR	6383570	AssignmentExpression	pos = ( 15 - i ) * 4		6383475	2		=			
ANR	6383571	Identifier	pos		6383475	0					
ANR	6383572	MultiplicativeExpression	( 15 - i ) * 4		6383475	1		*			
ANR	6383573	AdditiveExpression	15 - i		6383475	0		-			
ANR	6383574	PrimaryExpression	15		6383475	0					
ANR	6383575	Identifier	i		6383475	1					
ANR	6383576	PrimaryExpression	4		6383475	1					
ANR	6383577	ExpressionStatement	res |= ( o << pos )	721:2:15298:15315	6383475	4	True				
ANR	6383578	AssignmentExpression	res |= ( o << pos )		6383475	0		|=			
ANR	6383579	Identifier	res		6383475	0					
ANR	6383580	ShiftExpression	o << pos		6383475	1		<<			
ANR	6383581	Identifier	o		6383475	0					
ANR	6383582	Identifier	pos		6383475	1					
ANR	6383583	ReturnStatement	return res ;	723:1:15321:15331	6383475	4	True				
ANR	6383584	Identifier	res		6383475	0					
ANR	6383585	ReturnType	R_API ut64		6383475	1					
ANR	6383586	Identifier	r_num_tail_base		6383475	2					
ANR	6383587	ParameterList	"RNum * num , ut64 addr , ut64 off"		6383475	3					
ANR	6383588	Parameter	RNum * num	704:27:14964:14972	6383475	0	True				
ANR	6383589	ParameterType	RNum *		6383475	0					
ANR	6383590	Identifier	num		6383475	1					
ANR	6383591	Parameter	ut64 addr	704:38:14975:14983	6383475	1	True				
ANR	6383592	ParameterType	ut64		6383475	0					
ANR	6383593	Identifier	addr		6383475	1					
ANR	6383594	Parameter	ut64 off	704:49:14986:14993	6383475	2	True				
ANR	6383595	ParameterType	ut64		6383475	0					
ANR	6383596	Identifier	off		6383475	1					
ANR	6383597	CFGEntryNode	ENTRY		6383475		True				
ANR	6383598	CFGExitNode	EXIT		6383475		True				
ANR	6383599	Symbol	res		6383475						
ANR	6383600	Symbol	__nth_nibble		6383475						
ANR	6383601	Symbol	num		6383475						
ANR	6383602	Symbol	iseq		6383475						
ANR	6383603	Symbol	false		6383475						
ANR	6383604	Symbol	i		6383475						
ANR	6383605	Symbol	off		6383475						
ANR	6383606	Symbol	o		6383475						
ANR	6383607	Symbol	pos		6383475						
ANR	6383608	Symbol	ready		6383475						
ANR	6383609	Symbol	true		6383475						
ANR	6383610	Symbol	addr		6383475						
ANR	6383611	Symbol	UT64_MAX		6383475						
ANR	6383612	Function	r_num_tail	726:0:15336:15822							
ANR	6383613	FunctionDef	"r_num_tail (RNum * num , ut64 addr , const char * hex)"		6383612	0					
ANR	6383614	CompoundStatement		726:61:15397:15822	6383612	0					
ANR	6383615	Statement	ut64	727:1:15400:15403	6383612	0	True				
ANR	6383616	Statement	mask	727:6:15405:15408	6383612	1	True				
ANR	6383617	Statement	=	727:11:15410:15410	6383612	2	True				
ANR	6383618	Statement	0L	727:13:15412:15413	6383612	3	True				
ANR	6383619	ExpressionStatement	L	727:15:15414:15415	6383612	4	True				
ANR	6383620	Identifier	L		6383612	0					
ANR	6383621	IdentifierDeclStatement	ut64 n = 0 ;	728:1:15418:15428	6383612	5	True				
ANR	6383622	IdentifierDecl	n = 0		6383612	0					
ANR	6383623	IdentifierDeclType	ut64		6383612	0					
ANR	6383624	Identifier	n		6383612	1					
ANR	6383625	AssignmentExpression	n = 0		6383612	2		=			
ANR	6383626	Identifier	n		6383612	0					
ANR	6383627	PrimaryExpression	0		6383612	1					
ANR	6383628	IdentifierDeclStatement	char * p ;	729:1:15431:15438	6383612	6	True				
ANR	6383629	IdentifierDecl	* p		6383612	0					
ANR	6383630	IdentifierDeclType	char *		6383612	0					
ANR	6383631	Identifier	p		6383612	1					
ANR	6383632	IdentifierDeclStatement	int i ;	730:1:15441:15446	6383612	7	True				
ANR	6383633	IdentifierDecl	i		6383612	0					
ANR	6383634	IdentifierDeclType	int		6383612	0					
ANR	6383635	Identifier	i		6383612	1					
ANR	6383636	WhileStatement	while ( * hex && ( * hex == ' ' || * hex == '.' ) )		6383612	8					
ANR	6383637	Condition	* hex && ( * hex == ' ' || * hex == '.' )	732:8:15457:15492	6383612	0	True				
ANR	6383638	AndExpression	* hex && ( * hex == ' ' || * hex == '.' )		6383612	0		&&			
ANR	6383639	UnaryOperationExpression	* hex		6383612	0					
ANR	6383640	UnaryOperator	*		6383612	0					
ANR	6383641	Identifier	hex		6383612	1					
ANR	6383642	OrExpression	* hex == ' ' || * hex == '.'		6383612	1		||			
ANR	6383643	EqualityExpression	* hex == ' '		6383612	0		==			
ANR	6383644	UnaryOperationExpression	* hex		6383612	0					
ANR	6383645	UnaryOperator	*		6383612	0					
ANR	6383646	Identifier	hex		6383612	1					
ANR	6383647	PrimaryExpression	' '		6383612	1					
ANR	6383648	EqualityExpression	* hex == '.'		6383612	1		==			
ANR	6383649	UnaryOperationExpression	* hex		6383612	0					
ANR	6383650	UnaryOperator	*		6383612	0					
ANR	6383651	Identifier	hex		6383612	1					
ANR	6383652	PrimaryExpression	'.'		6383612	1					
ANR	6383653	CompoundStatement		7:46:97:97	6383612	1					
ANR	6383654	ExpressionStatement	hex ++	733:2:15499:15504	6383612	0	True				
ANR	6383655	PostIncDecOperationExpression	hex ++		6383612	0					
ANR	6383656	Identifier	hex		6383612	0					
ANR	6383657	IncDec	++		6383612	1					
ANR	6383658	ExpressionStatement	i = strlen ( hex ) * 4	735:1:15510:15530	6383612	9	True				
ANR	6383659	AssignmentExpression	i = strlen ( hex ) * 4		6383612	0		=			
ANR	6383660	Identifier	i		6383612	0					
ANR	6383661	MultiplicativeExpression	strlen ( hex ) * 4		6383612	1		*			
ANR	6383662	CallExpression	strlen ( hex )		6383612	0					
ANR	6383663	Callee	strlen		6383612	0					
ANR	6383664	Identifier	strlen		6383612	0					
ANR	6383665	ArgumentList	hex		6383612	1					
ANR	6383666	Argument	hex		6383612	0					
ANR	6383667	Identifier	hex		6383612	0					
ANR	6383668	PrimaryExpression	4		6383612	1					
ANR	6383669	ExpressionStatement	p = malloc ( strlen ( hex ) + 10 )	736:1:15533:15563	6383612	10	True				
ANR	6383670	AssignmentExpression	p = malloc ( strlen ( hex ) + 10 )		6383612	0		=			
ANR	6383671	Identifier	p		6383612	0					
ANR	6383672	CallExpression	malloc ( strlen ( hex ) + 10 )		6383612	1					
ANR	6383673	Callee	malloc		6383612	0					
ANR	6383674	Identifier	malloc		6383612	0					
ANR	6383675	ArgumentList	strlen ( hex ) + 10		6383612	1					
ANR	6383676	Argument	strlen ( hex ) + 10		6383612	0					
ANR	6383677	AdditiveExpression	strlen ( hex ) + 10		6383612	0		+			
ANR	6383678	CallExpression	strlen ( hex )		6383612	0					
ANR	6383679	Callee	strlen		6383612	0					
ANR	6383680	Identifier	strlen		6383612	0					
ANR	6383681	ArgumentList	hex		6383612	1					
ANR	6383682	Argument	hex		6383612	0					
ANR	6383683	Identifier	hex		6383612	0					
ANR	6383684	PrimaryExpression	10		6383612	1					
ANR	6383685	IfStatement	if ( p )		6383612	11					
ANR	6383686	Condition	p	737:5:15570:15570	6383612	0	True				
ANR	6383687	Identifier	p		6383612	0					
ANR	6383688	CompoundStatement		12:8:175:175	6383612	1					
ANR	6383689	ExpressionStatement	"strcpy ( p , ""0x"" )"	738:2:15577:15593	6383612	0	True				
ANR	6383690	CallExpression	"strcpy ( p , ""0x"" )"		6383612	0					
ANR	6383691	Callee	strcpy		6383612	0					
ANR	6383692	Identifier	strcpy		6383612	0					
ANR	6383693	ArgumentList	p		6383612	1					
ANR	6383694	Argument	p		6383612	0					
ANR	6383695	Identifier	p		6383612	0					
ANR	6383696	Argument	"""0x"""		6383612	1					
ANR	6383697	PrimaryExpression	"""0x"""		6383612	0					
ANR	6383698	ExpressionStatement	"strcpy ( p + 2 , hex )"	739:2:15597:15616	6383612	1	True				
ANR	6383699	CallExpression	"strcpy ( p + 2 , hex )"		6383612	0					
ANR	6383700	Callee	strcpy		6383612	0					
ANR	6383701	Identifier	strcpy		6383612	0					
ANR	6383702	ArgumentList	p + 2		6383612	1					
ANR	6383703	Argument	p + 2		6383612	0					
ANR	6383704	AdditiveExpression	p + 2		6383612	0		+			
ANR	6383705	Identifier	p		6383612	0					
ANR	6383706	PrimaryExpression	2		6383612	1					
ANR	6383707	Argument	hex		6383612	1					
ANR	6383708	Identifier	hex		6383612	0					
ANR	6383709	IfStatement	if ( isxdigit ( ( ut8 ) hex [ 0 ] ) )		6383612	2					
ANR	6383710	Condition	isxdigit ( ( ut8 ) hex [ 0 ] )	740:6:15624:15645	6383612	0	True				
ANR	6383711	CallExpression	isxdigit ( ( ut8 ) hex [ 0 ] )		6383612	0					
ANR	6383712	Callee	isxdigit		6383612	0					
ANR	6383713	Identifier	isxdigit		6383612	0					
ANR	6383714	ArgumentList	( ut8 ) hex [ 0 ]		6383612	1					
ANR	6383715	Argument	( ut8 ) hex [ 0 ]		6383612	0					
ANR	6383716	CastExpression	( ut8 ) hex [ 0 ]		6383612	0					
ANR	6383717	CastTarget	ut8		6383612	0					
ANR	6383718	ArrayIndexing	hex [ 0 ]		6383612	1					
ANR	6383719	Identifier	hex		6383612	0					
ANR	6383720	PrimaryExpression	0		6383612	1					
ANR	6383721	CompoundStatement		15:30:250:250	6383612	1					
ANR	6383722	ExpressionStatement	"n = r_num_math ( num , p )"	741:3:15653:15676	6383612	0	True				
ANR	6383723	AssignmentExpression	"n = r_num_math ( num , p )"		6383612	0		=			
ANR	6383724	Identifier	n		6383612	0					
ANR	6383725	CallExpression	"r_num_math ( num , p )"		6383612	1					
ANR	6383726	Callee	r_num_math		6383612	0					
ANR	6383727	Identifier	r_num_math		6383612	0					
ANR	6383728	ArgumentList	num		6383612	1					
ANR	6383729	Argument	num		6383612	0					
ANR	6383730	Identifier	num		6383612	0					
ANR	6383731	Argument	p		6383612	1					
ANR	6383732	Identifier	p		6383612	0					
ANR	6383733	ElseStatement	else		6383612	0					
ANR	6383734	CompoundStatement		17:9:289:289	6383612	0					
ANR	6383735	ExpressionStatement	"eprintf ( ""Invalid argument\\n"" )"	743:3:15692:15722	6383612	0	True				
ANR	6383736	CallExpression	"eprintf ( ""Invalid argument\\n"" )"		6383612	0					
ANR	6383737	Callee	eprintf		6383612	0					
ANR	6383738	Identifier	eprintf		6383612	0					
ANR	6383739	ArgumentList	"""Invalid argument\\n"""		6383612	1					
ANR	6383740	Argument	"""Invalid argument\\n"""		6383612	0					
ANR	6383741	PrimaryExpression	"""Invalid argument\\n"""		6383612	0					
ANR	6383742	ExpressionStatement	free ( p )	744:3:15727:15735	6383612	1	True				
ANR	6383743	CallExpression	free ( p )		6383612	0					
ANR	6383744	Callee	free		6383612	0					
ANR	6383745	Identifier	free		6383612	0					
ANR	6383746	ArgumentList	p		6383612	1					
ANR	6383747	Argument	p		6383612	0					
ANR	6383748	Identifier	p		6383612	0					
ANR	6383749	ReturnStatement	return addr ;	745:3:15740:15751	6383612	2	True				
ANR	6383750	Identifier	addr		6383612	0					
ANR	6383751	ExpressionStatement	free ( p )	747:2:15759:15767	6383612	3	True				
ANR	6383752	CallExpression	free ( p )		6383612	0					
ANR	6383753	Callee	free		6383612	0					
ANR	6383754	Identifier	free		6383612	0					
ANR	6383755	ArgumentList	p		6383612	1					
ANR	6383756	Argument	p		6383612	0					
ANR	6383757	Identifier	p		6383612	0					
ANR	6383758	ExpressionStatement	mask = UT64_MAX << i	749:1:15773:15793	6383612	12	True				
ANR	6383759	AssignmentExpression	mask = UT64_MAX << i		6383612	0		=			
ANR	6383760	Identifier	mask		6383612	0					
ANR	6383761	ShiftExpression	UT64_MAX << i		6383612	1		<<			
ANR	6383762	Identifier	UT64_MAX		6383612	0					
ANR	6383763	Identifier	i		6383612	1					
ANR	6383764	ReturnStatement	return ( addr & mask ) | n ;	750:1:15796:15820	6383612	13	True				
ANR	6383765	InclusiveOrExpression	( addr & mask ) | n		6383612	0		|			
ANR	6383766	BitAndExpression	addr & mask		6383612	0		&			
ANR	6383767	Identifier	addr		6383612	0					
ANR	6383768	Identifier	mask		6383612	1					
ANR	6383769	Identifier	n		6383612	1					
ANR	6383770	ReturnType	R_API ut64		6383612	1					
ANR	6383771	Identifier	r_num_tail		6383612	2					
ANR	6383772	ParameterList	"RNum * num , ut64 addr , const char * hex"		6383612	3					
ANR	6383773	Parameter	RNum * num	726:22:15358:15366	6383612	0	True				
ANR	6383774	ParameterType	RNum *		6383612	0					
ANR	6383775	Identifier	num		6383612	1					
ANR	6383776	Parameter	ut64 addr	726:33:15369:15377	6383612	1	True				
ANR	6383777	ParameterType	ut64		6383612	0					
ANR	6383778	Identifier	addr		6383612	1					
ANR	6383779	Parameter	const char * hex	726:44:15380:15394	6383612	2	True				
ANR	6383780	ParameterType	const char *		6383612	0					
ANR	6383781	Identifier	hex		6383612	1					
ANR	6383782	CFGEntryNode	ENTRY		6383612		True				
ANR	6383783	CFGExitNode	EXIT		6383612		True				
ANR	6383784	Symbol	malloc		6383612						
ANR	6383785	Symbol	num		6383612						
ANR	6383786	Symbol	i		6383612						
ANR	6383787	Symbol	n		6383612						
ANR	6383788	Symbol	r_num_math		6383612						
ANR	6383789	Symbol	p		6383612						
ANR	6383790	Symbol	strlen		6383612						
ANR	6383791	Symbol	hex		6383612						
ANR	6383792	Symbol	* hex		6383612						
ANR	6383793	Symbol	addr		6383612						
ANR	6383794	Symbol	UT64_MAX		6383612						
ANR	6383795	Symbol	isxdigit		6383612						
ANR	6383796	Symbol	mask		6383612						
ANR	6383797	Function	r_num_tailff	753:0:15825:16284							
ANR	6383798	FunctionDef	"r_num_tailff (RNum * num , const char * hex)"		6383797	0					
ANR	6383799	CompoundStatement		753:53:15878:16284	6383797	0					
ANR	6383800	IdentifierDeclStatement	ut64 n = 0 ;	754:1:15881:15891	6383797	0	True				
ANR	6383801	IdentifierDecl	n = 0		6383797	0					
ANR	6383802	IdentifierDeclType	ut64		6383797	0					
ANR	6383803	Identifier	n		6383797	1					
ANR	6383804	AssignmentExpression	n = 0		6383797	2		=			
ANR	6383805	Identifier	n		6383797	0					
ANR	6383806	PrimaryExpression	0		6383797	1					
ANR	6383807	WhileStatement	while ( * hex && ( * hex == ' ' || * hex == '.' ) )		6383797	1					
ANR	6383808	Condition	* hex && ( * hex == ' ' || * hex == '.' )	756:8:15902:15937	6383797	0	True				
ANR	6383809	AndExpression	* hex && ( * hex == ' ' || * hex == '.' )		6383797	0		&&			
ANR	6383810	UnaryOperationExpression	* hex		6383797	0					
ANR	6383811	UnaryOperator	*		6383797	0					
ANR	6383812	Identifier	hex		6383797	1					
ANR	6383813	OrExpression	* hex == ' ' || * hex == '.'		6383797	1		||			
ANR	6383814	EqualityExpression	* hex == ' '		6383797	0		==			
ANR	6383815	UnaryOperationExpression	* hex		6383797	0					
ANR	6383816	UnaryOperator	*		6383797	0					
ANR	6383817	Identifier	hex		6383797	1					
ANR	6383818	PrimaryExpression	' '		6383797	1					
ANR	6383819	EqualityExpression	* hex == '.'		6383797	1		==			
ANR	6383820	UnaryOperationExpression	* hex		6383797	0					
ANR	6383821	UnaryOperator	*		6383797	0					
ANR	6383822	Identifier	hex		6383797	1					
ANR	6383823	PrimaryExpression	'.'		6383797	1					
ANR	6383824	CompoundStatement		4:46:61:61	6383797	1					
ANR	6383825	ExpressionStatement	hex ++	757:2:15944:15949	6383797	0	True				
ANR	6383826	PostIncDecOperationExpression	hex ++		6383797	0					
ANR	6383827	Identifier	hex		6383797	0					
ANR	6383828	IncDec	++		6383797	1					
ANR	6383829	IdentifierDeclStatement	int i = strlen ( hex ) * 4 ;	759:1:15955:15979	6383797	2	True				
ANR	6383830	IdentifierDecl	i = strlen ( hex ) * 4		6383797	0					
ANR	6383831	IdentifierDeclType	int		6383797	0					
ANR	6383832	Identifier	i		6383797	1					
ANR	6383833	AssignmentExpression	i = strlen ( hex ) * 4		6383797	2		=			
ANR	6383834	Identifier	i		6383797	0					
ANR	6383835	MultiplicativeExpression	strlen ( hex ) * 4		6383797	1		*			
ANR	6383836	CallExpression	strlen ( hex )		6383797	0					
ANR	6383837	Callee	strlen		6383797	0					
ANR	6383838	Identifier	strlen		6383797	0					
ANR	6383839	ArgumentList	hex		6383797	1					
ANR	6383840	Argument	hex		6383797	0					
ANR	6383841	Identifier	hex		6383797	0					
ANR	6383842	PrimaryExpression	4		6383797	1					
ANR	6383843	IdentifierDeclStatement	char * p = malloc ( strlen ( hex ) + 10 ) ;	760:1:15982:16018	6383797	3	True				
ANR	6383844	IdentifierDecl	* p = malloc ( strlen ( hex ) + 10 )		6383797	0					
ANR	6383845	IdentifierDeclType	char *		6383797	0					
ANR	6383846	Identifier	p		6383797	1					
ANR	6383847	AssignmentExpression	* p = malloc ( strlen ( hex ) + 10 )		6383797	2		=			
ANR	6383848	Identifier	p		6383797	0					
ANR	6383849	CallExpression	malloc ( strlen ( hex ) + 10 )		6383797	1					
ANR	6383850	Callee	malloc		6383797	0					
ANR	6383851	Identifier	malloc		6383797	0					
ANR	6383852	ArgumentList	strlen ( hex ) + 10		6383797	1					
ANR	6383853	Argument	strlen ( hex ) + 10		6383797	0					
ANR	6383854	AdditiveExpression	strlen ( hex ) + 10		6383797	0		+			
ANR	6383855	CallExpression	strlen ( hex )		6383797	0					
ANR	6383856	Callee	strlen		6383797	0					
ANR	6383857	Identifier	strlen		6383797	0					
ANR	6383858	ArgumentList	hex		6383797	1					
ANR	6383859	Argument	hex		6383797	0					
ANR	6383860	Identifier	hex		6383797	0					
ANR	6383861	PrimaryExpression	10		6383797	1					
ANR	6383862	IfStatement	if ( p )		6383797	4					
ANR	6383863	Condition	p	761:5:16025:16025	6383797	0	True				
ANR	6383864	Identifier	p		6383797	0					
ANR	6383865	CompoundStatement		9:8:149:149	6383797	1					
ANR	6383866	ExpressionStatement	"strcpy ( p , ""0x"" )"	762:2:16032:16048	6383797	0	True				
ANR	6383867	CallExpression	"strcpy ( p , ""0x"" )"		6383797	0					
ANR	6383868	Callee	strcpy		6383797	0					
ANR	6383869	Identifier	strcpy		6383797	0					
ANR	6383870	ArgumentList	p		6383797	1					
ANR	6383871	Argument	p		6383797	0					
ANR	6383872	Identifier	p		6383797	0					
ANR	6383873	Argument	"""0x"""		6383797	1					
ANR	6383874	PrimaryExpression	"""0x"""		6383797	0					
ANR	6383875	ExpressionStatement	"strcpy ( p + 2 , hex )"	763:2:16052:16071	6383797	1	True				
ANR	6383876	CallExpression	"strcpy ( p + 2 , hex )"		6383797	0					
ANR	6383877	Callee	strcpy		6383797	0					
ANR	6383878	Identifier	strcpy		6383797	0					
ANR	6383879	ArgumentList	p + 2		6383797	1					
ANR	6383880	Argument	p + 2		6383797	0					
ANR	6383881	AdditiveExpression	p + 2		6383797	0		+			
ANR	6383882	Identifier	p		6383797	0					
ANR	6383883	PrimaryExpression	2		6383797	1					
ANR	6383884	Argument	hex		6383797	1					
ANR	6383885	Identifier	hex		6383797	0					
ANR	6383886	IfStatement	if ( isxdigit ( ( ut8 ) hex [ 0 ] ) )		6383797	2					
ANR	6383887	Condition	isxdigit ( ( ut8 ) hex [ 0 ] )	764:6:16079:16100	6383797	0	True				
ANR	6383888	CallExpression	isxdigit ( ( ut8 ) hex [ 0 ] )		6383797	0					
ANR	6383889	Callee	isxdigit		6383797	0					
ANR	6383890	Identifier	isxdigit		6383797	0					
ANR	6383891	ArgumentList	( ut8 ) hex [ 0 ]		6383797	1					
ANR	6383892	Argument	( ut8 ) hex [ 0 ]		6383797	0					
ANR	6383893	CastExpression	( ut8 ) hex [ 0 ]		6383797	0					
ANR	6383894	CastTarget	ut8		6383797	0					
ANR	6383895	ArrayIndexing	hex [ 0 ]		6383797	1					
ANR	6383896	Identifier	hex		6383797	0					
ANR	6383897	PrimaryExpression	0		6383797	1					
ANR	6383898	CompoundStatement		12:30:224:224	6383797	1					
ANR	6383899	ExpressionStatement	"n = r_num_get ( num , p )"	765:3:16108:16130	6383797	0	True				
ANR	6383900	AssignmentExpression	"n = r_num_get ( num , p )"		6383797	0		=			
ANR	6383901	Identifier	n		6383797	0					
ANR	6383902	CallExpression	"r_num_get ( num , p )"		6383797	1					
ANR	6383903	Callee	r_num_get		6383797	0					
ANR	6383904	Identifier	r_num_get		6383797	0					
ANR	6383905	ArgumentList	num		6383797	1					
ANR	6383906	Argument	num		6383797	0					
ANR	6383907	Identifier	num		6383797	0					
ANR	6383908	Argument	p		6383797	1					
ANR	6383909	Identifier	p		6383797	0					
ANR	6383910	ElseStatement	else		6383797	0					
ANR	6383911	CompoundStatement		14:9:262:262	6383797	0					
ANR	6383912	ExpressionStatement	"eprintf ( ""Invalid argument\\n"" )"	767:3:16146:16176	6383797	0	True				
ANR	6383913	CallExpression	"eprintf ( ""Invalid argument\\n"" )"		6383797	0					
ANR	6383914	Callee	eprintf		6383797	0					
ANR	6383915	Identifier	eprintf		6383797	0					
ANR	6383916	ArgumentList	"""Invalid argument\\n"""		6383797	1					
ANR	6383917	Argument	"""Invalid argument\\n"""		6383797	0					
ANR	6383918	PrimaryExpression	"""Invalid argument\\n"""		6383797	0					
ANR	6383919	ExpressionStatement	free ( p )	768:3:16181:16189	6383797	1	True				
ANR	6383920	CallExpression	free ( p )		6383797	0					
ANR	6383921	Callee	free		6383797	0					
ANR	6383922	Identifier	free		6383797	0					
ANR	6383923	ArgumentList	p		6383797	1					
ANR	6383924	Argument	p		6383797	0					
ANR	6383925	Identifier	p		6383797	0					
ANR	6383926	ReturnStatement	return UT64_MAX ;	769:3:16194:16209	6383797	2	True				
ANR	6383927	Identifier	UT64_MAX		6383797	0					
ANR	6383928	ExpressionStatement	free ( p )	771:2:16217:16225	6383797	3	True				
ANR	6383929	CallExpression	free ( p )		6383797	0					
ANR	6383930	Callee	free		6383797	0					
ANR	6383931	Identifier	free		6383797	0					
ANR	6383932	ArgumentList	p		6383797	1					
ANR	6383933	Argument	p		6383797	0					
ANR	6383934	Identifier	p		6383797	0					
ANR	6383935	IdentifierDeclStatement	ut64 left = ( ( UT64_MAX >> i ) << i ) ;	773:1:16231:16264	6383797	5	True				
ANR	6383936	IdentifierDecl	left = ( ( UT64_MAX >> i ) << i )		6383797	0					
ANR	6383937	IdentifierDeclType	ut64		6383797	0					
ANR	6383938	Identifier	left		6383797	1					
ANR	6383939	AssignmentExpression	left = ( ( UT64_MAX >> i ) << i )		6383797	2		=			
ANR	6383940	Identifier	left		6383797	0					
ANR	6383941	ShiftExpression	( UT64_MAX >> i ) << i		6383797	1		<<			
ANR	6383942	ShiftExpression	UT64_MAX >> i		6383797	0		>>			
ANR	6383943	Identifier	UT64_MAX		6383797	0					
ANR	6383944	Identifier	i		6383797	1					
ANR	6383945	Identifier	i		6383797	1					
ANR	6383946	ReturnStatement	return left | n ;	774:1:16267:16282	6383797	6	True				
ANR	6383947	InclusiveOrExpression	left | n		6383797	0		|			
ANR	6383948	Identifier	left		6383797	0					
ANR	6383949	Identifier	n		6383797	1					
ANR	6383950	ReturnType	static ut64		6383797	1					
ANR	6383951	Identifier	r_num_tailff		6383797	2					
ANR	6383952	ParameterList	"RNum * num , const char * hex"		6383797	3					
ANR	6383953	Parameter	RNum * num	753:25:15850:15858	6383797	0	True				
ANR	6383954	ParameterType	RNum *		6383797	0					
ANR	6383955	Identifier	num		6383797	1					
ANR	6383956	Parameter	const char * hex	753:36:15861:15875	6383797	1	True				
ANR	6383957	ParameterType	const char *		6383797	0					
ANR	6383958	Identifier	hex		6383797	1					
ANR	6383959	CFGEntryNode	ENTRY		6383797		True				
ANR	6383960	CFGExitNode	EXIT		6383797		True				
ANR	6383961	Symbol	p		6383797						
ANR	6383962	Symbol	strlen		6383797						
ANR	6383963	Symbol	malloc		6383797						
ANR	6383964	Symbol	left		6383797						
ANR	6383965	Symbol	num		6383797						
ANR	6383966	Symbol	i		6383797						
ANR	6383967	Symbol	hex		6383797						
ANR	6383968	Symbol	* hex		6383797						
ANR	6383969	Symbol	r_num_get		6383797						
ANR	6383970	Symbol	UT64_MAX		6383797						
ANR	6383971	Symbol	n		6383797						
ANR	6383972	Symbol	isxdigit		6383797						
ANR	6383973	Function	r_num_between	777:0:16287:16758							
ANR	6383974	FunctionDef	"r_num_between (RNum * num , const char * input_value)"		6383973	0					
ANR	6383975	CompoundStatement		777:60:16347:16758	6383973	0					
ANR	6383976	IdentifierDeclStatement	int i ;	778:1:16350:16355	6383973	0	True				
ANR	6383977	IdentifierDecl	i		6383973	0					
ANR	6383978	IdentifierDeclType	int		6383973	0					
ANR	6383979	Identifier	i		6383973	1					
ANR	6383980	IdentifierDeclStatement	ut64 ns [ 3 ] ;	779:1:16358:16368	6383973	1	True				
ANR	6383981	IdentifierDecl	ns [ 3 ]		6383973	0					
ANR	6383982	IdentifierDeclType	ut64 [ 3 ]		6383973	0					
ANR	6383983	Identifier	ns		6383973	1					
ANR	6383984	PrimaryExpression	3		6383973	2					
ANR	6383985	Statement	char	780:1:16371:16374	6383973	2	True				
ANR	6383986	Statement	*	780:6:16376:16376	6383973	3	True				
ANR	6383987	Statement	const	780:8:16378:16382	6383973	4	True				
ANR	6383988	ExpressionStatement	str = strdup ( input_value )	780:14:16384:16410	6383973	5	True				
ANR	6383989	AssignmentExpression	str = strdup ( input_value )		6383973	0		=			
ANR	6383990	Identifier	str		6383973	0					
ANR	6383991	CallExpression	strdup ( input_value )		6383973	1					
ANR	6383992	Callee	strdup		6383973	0					
ANR	6383993	Identifier	strdup		6383973	0					
ANR	6383994	ArgumentList	input_value		6383973	1					
ANR	6383995	Argument	input_value		6383973	0					
ANR	6383996	Identifier	input_value		6383973	0					
ANR	6383997	IdentifierDeclStatement	RList * nums = r_num_str_split_list ( str ) ;	781:1:16413:16453	6383973	6	True				
ANR	6383998	IdentifierDecl	* nums = r_num_str_split_list ( str )		6383973	0					
ANR	6383999	IdentifierDeclType	RList *		6383973	0					
ANR	6384000	Identifier	nums		6383973	1					
ANR	6384001	AssignmentExpression	* nums = r_num_str_split_list ( str )		6383973	2		=			
ANR	6384002	Identifier	nums		6383973	0					
ANR	6384003	CallExpression	r_num_str_split_list ( str )		6383973	1					
ANR	6384004	Callee	r_num_str_split_list		6383973	0					
ANR	6384005	Identifier	r_num_str_split_list		6383973	0					
ANR	6384006	ArgumentList	str		6383973	1					
ANR	6384007	Argument	str		6383973	0					
ANR	6384008	Identifier	str		6383973	0					
ANR	6384009	IdentifierDeclStatement	int len = r_list_length ( nums ) ;	782:1:16456:16486	6383973	7	True				
ANR	6384010	IdentifierDecl	len = r_list_length ( nums )		6383973	0					
ANR	6384011	IdentifierDeclType	int		6383973	0					
ANR	6384012	Identifier	len		6383973	1					
ANR	6384013	AssignmentExpression	len = r_list_length ( nums )		6383973	2		=			
ANR	6384014	Identifier	len		6383973	0					
ANR	6384015	CallExpression	r_list_length ( nums )		6383973	1					
ANR	6384016	Callee	r_list_length		6383973	0					
ANR	6384017	Identifier	r_list_length		6383973	0					
ANR	6384018	ArgumentList	nums		6383973	1					
ANR	6384019	Argument	nums		6383973	0					
ANR	6384020	Identifier	nums		6383973	0					
ANR	6384021	IfStatement	if ( len < 3 )		6383973	8					
ANR	6384022	Condition	len < 3	783:5:16493:16499	6383973	0	True				
ANR	6384023	RelationalExpression	len < 3		6383973	0		<			
ANR	6384024	Identifier	len		6383973	0					
ANR	6384025	PrimaryExpression	3		6383973	1					
ANR	6384026	CompoundStatement		7:14:154:154	6383973	1					
ANR	6384027	ExpressionStatement	free ( str )	784:2:16506:16516	6383973	0	True				
ANR	6384028	CallExpression	free ( str )		6383973	0					
ANR	6384029	Callee	free		6383973	0					
ANR	6384030	Identifier	free		6383973	0					
ANR	6384031	ArgumentList	str		6383973	1					
ANR	6384032	Argument	str		6383973	0					
ANR	6384033	Identifier	str		6383973	0					
ANR	6384034	ExpressionStatement	r_list_free ( nums )	785:2:16520:16538	6383973	1	True				
ANR	6384035	CallExpression	r_list_free ( nums )		6383973	0					
ANR	6384036	Callee	r_list_free		6383973	0					
ANR	6384037	Identifier	r_list_free		6383973	0					
ANR	6384038	ArgumentList	nums		6383973	1					
ANR	6384039	Argument	nums		6383973	0					
ANR	6384040	Identifier	nums		6383973	0					
ANR	6384041	ReturnStatement	return - 1 ;	786:2:16542:16551	6383973	2	True				
ANR	6384042	UnaryOperationExpression	- 1		6383973	0					
ANR	6384043	UnaryOperator	-		6383973	0					
ANR	6384044	PrimaryExpression	1		6383973	1					
ANR	6384045	IfStatement	if ( len > 3 )		6383973	9					
ANR	6384046	Condition	len > 3	788:5:16561:16567	6383973	0	True				
ANR	6384047	RelationalExpression	len > 3		6383973	0		>			
ANR	6384048	Identifier	len		6383973	0					
ANR	6384049	PrimaryExpression	3		6383973	1					
ANR	6384050	CompoundStatement		12:14:222:222	6383973	1					
ANR	6384051	ExpressionStatement	len = 3	789:2:16574:16581	6383973	0	True				
ANR	6384052	AssignmentExpression	len = 3		6383973	0		=			
ANR	6384053	Identifier	len		6383973	0					
ANR	6384054	PrimaryExpression	3		6383973	1					
ANR	6384055	ForStatement	for ( i = 0 ; i < len ; i ++ )		6383973	10					
ANR	6384056	ForInit	i = 0 ;	791:6:16592:16597	6383973	0	True				
ANR	6384057	AssignmentExpression	i = 0		6383973	0		=			
ANR	6384058	Identifier	i		6383973	0					
ANR	6384059	PrimaryExpression	0		6383973	1					
ANR	6384060	Condition	i < len	791:13:16599:16605	6383973	1	True				
ANR	6384061	RelationalExpression	i < len		6383973	0		<			
ANR	6384062	Identifier	i		6383973	0					
ANR	6384063	Identifier	len		6383973	1					
ANR	6384064	PostIncDecOperationExpression	i ++	791:22:16608:16610	6383973	2	True				
ANR	6384065	Identifier	i		6383973	0					
ANR	6384066	IncDec	++		6383973	1					
ANR	6384067	CompoundStatement		15:27:265:265	6383973	3					
ANR	6384068	ExpressionStatement	"ns [ i ] = r_num_math ( num , r_list_pop_head ( nums ) )"	792:2:16617:16665	6383973	0	True				
ANR	6384069	AssignmentExpression	"ns [ i ] = r_num_math ( num , r_list_pop_head ( nums ) )"		6383973	0		=			
ANR	6384070	ArrayIndexing	ns [ i ]		6383973	0					
ANR	6384071	Identifier	ns		6383973	0					
ANR	6384072	Identifier	i		6383973	1					
ANR	6384073	CallExpression	"r_num_math ( num , r_list_pop_head ( nums ) )"		6383973	1					
ANR	6384074	Callee	r_num_math		6383973	0					
ANR	6384075	Identifier	r_num_math		6383973	0					
ANR	6384076	ArgumentList	num		6383973	1					
ANR	6384077	Argument	num		6383973	0					
ANR	6384078	Identifier	num		6383973	0					
ANR	6384079	Argument	r_list_pop_head ( nums )		6383973	1					
ANR	6384080	CallExpression	r_list_pop_head ( nums )		6383973	0					
ANR	6384081	Callee	r_list_pop_head		6383973	0					
ANR	6384082	Identifier	r_list_pop_head		6383973	0					
ANR	6384083	ArgumentList	nums		6383973	1					
ANR	6384084	Argument	nums		6383973	0					
ANR	6384085	Identifier	nums		6383973	0					
ANR	6384086	ExpressionStatement	free ( str )	794:1:16671:16681	6383973	11	True				
ANR	6384087	CallExpression	free ( str )		6383973	0					
ANR	6384088	Callee	free		6383973	0					
ANR	6384089	Identifier	free		6383973	0					
ANR	6384090	ArgumentList	str		6383973	1					
ANR	6384091	Argument	str		6383973	0					
ANR	6384092	Identifier	str		6383973	0					
ANR	6384093	ExpressionStatement	r_list_free ( nums )	795:1:16684:16702	6383973	12	True				
ANR	6384094	CallExpression	r_list_free ( nums )		6383973	0					
ANR	6384095	Callee	r_list_free		6383973	0					
ANR	6384096	Identifier	r_list_free		6383973	0					
ANR	6384097	ArgumentList	nums		6383973	1					
ANR	6384098	Argument	nums		6383973	0					
ANR	6384099	Identifier	nums		6383973	0					
ANR	6384100	ReturnStatement	"return num -> value = R_BETWEEN ( ns [ 0 ] , ns [ 1 ] , ns [ 2 ] ) ;"	796:1:16705:16756	6383973	13	True				
ANR	6384101	AssignmentExpression	"num -> value = R_BETWEEN ( ns [ 0 ] , ns [ 1 ] , ns [ 2 ] )"		6383973	0		=			
ANR	6384102	PtrMemberAccess	num -> value		6383973	0					
ANR	6384103	Identifier	num		6383973	0					
ANR	6384104	Identifier	value		6383973	1					
ANR	6384105	CallExpression	"R_BETWEEN ( ns [ 0 ] , ns [ 1 ] , ns [ 2 ] )"		6383973	1					
ANR	6384106	Callee	R_BETWEEN		6383973	0					
ANR	6384107	Identifier	R_BETWEEN		6383973	0					
ANR	6384108	ArgumentList	ns [ 0 ]		6383973	1					
ANR	6384109	Argument	ns [ 0 ]		6383973	0					
ANR	6384110	ArrayIndexing	ns [ 0 ]		6383973	0					
ANR	6384111	Identifier	ns		6383973	0					
ANR	6384112	PrimaryExpression	0		6383973	1					
ANR	6384113	Argument	ns [ 1 ]		6383973	1					
ANR	6384114	ArrayIndexing	ns [ 1 ]		6383973	0					
ANR	6384115	Identifier	ns		6383973	0					
ANR	6384116	PrimaryExpression	1		6383973	1					
ANR	6384117	Argument	ns [ 2 ]		6383973	2					
ANR	6384118	ArrayIndexing	ns [ 2 ]		6383973	0					
ANR	6384119	Identifier	ns		6383973	0					
ANR	6384120	PrimaryExpression	2		6383973	1					
ANR	6384121	ReturnType	R_API int		6383973	1					
ANR	6384122	Identifier	r_num_between		6383973	2					
ANR	6384123	ParameterList	"RNum * num , const char * input_value"		6383973	3					
ANR	6384124	Parameter	RNum * num	777:24:16311:16319	6383973	0	True				
ANR	6384125	ParameterType	RNum *		6383973	0					
ANR	6384126	Identifier	num		6383973	1					
ANR	6384127	Parameter	const char * input_value	777:35:16322:16344	6383973	1	True				
ANR	6384128	ParameterType	const char *		6383973	0					
ANR	6384129	Identifier	input_value		6383973	1					
ANR	6384130	CFGEntryNode	ENTRY		6383973		True				
ANR	6384131	CFGExitNode	EXIT		6383973		True				
ANR	6384132	Symbol	ns		6383973						
ANR	6384133	Symbol	R_BETWEEN		6383973						
ANR	6384134	Symbol	num		6383973						
ANR	6384135	Symbol	* ns		6383973						
ANR	6384136	Symbol	i		6383973						
ANR	6384137	Symbol	input_value		6383973						
ANR	6384138	Symbol	r_num_str_split_list		6383973						
ANR	6384139	Symbol	r_num_math		6383973						
ANR	6384140	Symbol	str		6383973						
ANR	6384141	Symbol	* num		6383973						
ANR	6384142	Symbol	num -> value		6383973						
ANR	6384143	Symbol	r_list_pop_head		6383973						
ANR	6384144	Symbol	* i		6383973						
ANR	6384145	Symbol	len		6383973						
ANR	6384146	Symbol	strdup		6383973						
ANR	6384147	Symbol	nums		6383973						
ANR	6384148	Symbol	r_list_length		6383973						
ANR	6384149	Function	r_num_is_op	799:0:16761:16904							
ANR	6384150	FunctionDef	r_num_is_op (const char c)		6384149	0					
ANR	6384151	CompoundStatement		799:37:16798:16904	6384149	0					
ANR	6384152	ReturnStatement	return c == '/' || c == '+' || c == '-' || c == '*' || c == '%' || c == '&' || c == '^' || c == '|' ;	800:1:16801:16902	6384149	0	True				
ANR	6384153	OrExpression	c == '/' || c == '+' || c == '-' || c == '*' || c == '%' || c == '&' || c == '^' || c == '|'		6384149	0		||			
ANR	6384154	EqualityExpression	c == '/'		6384149	0		==			
ANR	6384155	Identifier	c		6384149	0					
ANR	6384156	PrimaryExpression	'/'		6384149	1					
ANR	6384157	OrExpression	c == '+' || c == '-' || c == '*' || c == '%' || c == '&' || c == '^' || c == '|'		6384149	1		||			
ANR	6384158	EqualityExpression	c == '+'		6384149	0		==			
ANR	6384159	Identifier	c		6384149	0					
ANR	6384160	PrimaryExpression	'+'		6384149	1					
ANR	6384161	OrExpression	c == '-' || c == '*' || c == '%' || c == '&' || c == '^' || c == '|'		6384149	1		||			
ANR	6384162	EqualityExpression	c == '-'		6384149	0		==			
ANR	6384163	Identifier	c		6384149	0					
ANR	6384164	PrimaryExpression	'-'		6384149	1					
ANR	6384165	OrExpression	c == '*' || c == '%' || c == '&' || c == '^' || c == '|'		6384149	1		||			
ANR	6384166	EqualityExpression	c == '*'		6384149	0		==			
ANR	6384167	Identifier	c		6384149	0					
ANR	6384168	PrimaryExpression	'*'		6384149	1					
ANR	6384169	OrExpression	c == '%' || c == '&' || c == '^' || c == '|'		6384149	1		||			
ANR	6384170	EqualityExpression	c == '%'		6384149	0		==			
ANR	6384171	Identifier	c		6384149	0					
ANR	6384172	PrimaryExpression	'%'		6384149	1					
ANR	6384173	OrExpression	c == '&' || c == '^' || c == '|'		6384149	1		||			
ANR	6384174	EqualityExpression	c == '&'		6384149	0		==			
ANR	6384175	Identifier	c		6384149	0					
ANR	6384176	PrimaryExpression	'&'		6384149	1					
ANR	6384177	OrExpression	c == '^' || c == '|'		6384149	1		||			
ANR	6384178	EqualityExpression	c == '^'		6384149	0		==			
ANR	6384179	Identifier	c		6384149	0					
ANR	6384180	PrimaryExpression	'^'		6384149	1					
ANR	6384181	EqualityExpression	c == '|'		6384149	1		==			
ANR	6384182	Identifier	c		6384149	0					
ANR	6384183	PrimaryExpression	'|'		6384149	1					
ANR	6384184	ReturnType	R_API bool		6384149	1					
ANR	6384185	Identifier	r_num_is_op		6384149	2					
ANR	6384186	ParameterList	const char c		6384149	3					
ANR	6384187	Parameter	const char c	799:23:16784:16795	6384149	0	True				
ANR	6384188	ParameterType	const char		6384149	0					
ANR	6384189	Identifier	c		6384149	1					
ANR	6384190	CFGEntryNode	ENTRY		6384149		True				
ANR	6384191	CFGExitNode	EXIT		6384149		True				
ANR	6384192	Symbol	c		6384149						
ANR	6384193	Function	r_num_str_len	805:0:16960:17621							
ANR	6384194	FunctionDef	r_num_str_len (const char * str)		6384193	0					
ANR	6384195	CompoundStatement		805:41:17001:17621	6384193	0					
ANR	6384196	IdentifierDeclStatement	"int i = 0 , len = 0 , st ;"	806:1:17004:17026	6384193	0	True				
ANR	6384197	IdentifierDecl	i = 0		6384193	0					
ANR	6384198	IdentifierDeclType	int		6384193	0					
ANR	6384199	Identifier	i		6384193	1					
ANR	6384200	AssignmentExpression	i = 0		6384193	2		=			
ANR	6384201	Identifier	i		6384193	0					
ANR	6384202	PrimaryExpression	0		6384193	1					
ANR	6384203	IdentifierDecl	len = 0		6384193	1					
ANR	6384204	IdentifierDeclType	int		6384193	0					
ANR	6384205	Identifier	len		6384193	1					
ANR	6384206	AssignmentExpression	len = 0		6384193	2		=			
ANR	6384207	Identifier	len		6384193	0					
ANR	6384208	PrimaryExpression	0		6384193	1					
ANR	6384209	IdentifierDecl	st		6384193	2					
ANR	6384210	IdentifierDeclType	int		6384193	0					
ANR	6384211	Identifier	st		6384193	1					
ANR	6384212	ExpressionStatement	st = 0	807:1:17029:17035	6384193	1	True				
ANR	6384213	AssignmentExpression	st = 0		6384193	0		=			
ANR	6384214	Identifier	st		6384193	0					
ANR	6384215	PrimaryExpression	0		6384193	1					
ANR	6384216	IfStatement	if ( str [ 0 ] == '(' )		6384193	2					
ANR	6384217	Condition	str [ 0 ] == '('	808:5:17062:17074	6384193	0	True				
ANR	6384218	EqualityExpression	str [ 0 ] == '('		6384193	0		==			
ANR	6384219	ArrayIndexing	str [ 0 ]		6384193	0					
ANR	6384220	Identifier	str		6384193	0					
ANR	6384221	PrimaryExpression	0		6384193	1					
ANR	6384222	PrimaryExpression	'('		6384193	1					
ANR	6384223	CompoundStatement		4:20:75:75	6384193	1					
ANR	6384224	ExpressionStatement	i ++	809:2:17081:17084	6384193	0	True				
ANR	6384225	PostIncDecOperationExpression	i ++		6384193	0					
ANR	6384226	Identifier	i		6384193	0					
ANR	6384227	IncDec	++		6384193	1					
ANR	6384228	WhileStatement	while ( str [ i ] != '\\0' )		6384193	3					
ANR	6384229	Condition	str [ i ] != '\\0'	811:8:17097:17110	6384193	0	True				
ANR	6384230	EqualityExpression	str [ i ] != '\\0'		6384193	0		!=			
ANR	6384231	ArrayIndexing	str [ i ]		6384193	0					
ANR	6384232	Identifier	str		6384193	0					
ANR	6384233	Identifier	i		6384193	1					
ANR	6384234	PrimaryExpression	'\\0'		6384193	1					
ANR	6384235	CompoundStatement		7:24:111:111	6384193	1					
ANR	6384236	SwitchStatement	switch ( st )		6384193	0					
ANR	6384237	Condition	st	812:10:17125:17126	6384193	0	True				
ANR	6384238	Identifier	st		6384193	0					
ANR	6384239	CompoundStatement		8:14:127:127	6384193	1					
ANR	6384240	Label	case 0 :	813:2:17133:17139	6384193	0	True				
ANR	6384241	WhileStatement	while ( ! r_num_is_op ( str [ i ] ) && str [ i ] != ' ' && str [ i ] != '\\0' )		6384193	1					
ANR	6384242	Condition	! r_num_is_op ( str [ i ] ) && str [ i ] != ' ' && str [ i ] != '\\0'	814:10:17161:17221	6384193	0	True				
ANR	6384243	AndExpression	! r_num_is_op ( str [ i ] ) && str [ i ] != ' ' && str [ i ] != '\\0'		6384193	0		&&			
ANR	6384244	UnaryOperationExpression	! r_num_is_op ( str [ i ] )		6384193	0					
ANR	6384245	UnaryOperator	!		6384193	0					
ANR	6384246	CallExpression	r_num_is_op ( str [ i ] )		6384193	1					
ANR	6384247	Callee	r_num_is_op		6384193	0					
ANR	6384248	Identifier	r_num_is_op		6384193	0					
ANR	6384249	ArgumentList	str [ i ]		6384193	1					
ANR	6384250	Argument	str [ i ]		6384193	0					
ANR	6384251	ArrayIndexing	str [ i ]		6384193	0					
ANR	6384252	Identifier	str		6384193	0					
ANR	6384253	Identifier	i		6384193	1					
ANR	6384254	AndExpression	str [ i ] != ' ' && str [ i ] != '\\0'		6384193	1		&&			
ANR	6384255	EqualityExpression	str [ i ] != ' '		6384193	0		!=			
ANR	6384256	ArrayIndexing	str [ i ]		6384193	0					
ANR	6384257	Identifier	str		6384193	0					
ANR	6384258	Identifier	i		6384193	1					
ANR	6384259	PrimaryExpression	' '		6384193	1					
ANR	6384260	EqualityExpression	str [ i ] != '\\0'		6384193	1		!=			
ANR	6384261	ArrayIndexing	str [ i ]		6384193	0					
ANR	6384262	Identifier	str		6384193	0					
ANR	6384263	Identifier	i		6384193	1					
ANR	6384264	PrimaryExpression	'\\0'		6384193	1					
ANR	6384265	CompoundStatement		11:24:222:222	6384193	1					
ANR	6384266	ExpressionStatement	i ++	816:4:17230:17233	6384193	0	True				
ANR	6384267	PostIncDecOperationExpression	i ++		6384193	0					
ANR	6384268	Identifier	i		6384193	0					
ANR	6384269	IncDec	++		6384193	1					
ANR	6384270	IfStatement	if ( str [ i ] == '(' )		6384193	1					
ANR	6384271	Condition	str [ i ] == '('	817:8:17243:17255	6384193	0	True				
ANR	6384272	EqualityExpression	str [ i ] == '('		6384193	0		==			
ANR	6384273	ArrayIndexing	str [ i ]		6384193	0					
ANR	6384274	Identifier	str		6384193	0					
ANR	6384275	Identifier	i		6384193	1					
ANR	6384276	PrimaryExpression	'('		6384193	1					
ANR	6384277	CompoundStatement		13:23:256:256	6384193	1					
ANR	6384278	ExpressionStatement	i += r_num_str_len ( str + i )	818:6:17266:17292	6384193	0	True				
ANR	6384279	AssignmentExpression	i += r_num_str_len ( str + i )		6384193	0		+=			
ANR	6384280	Identifier	i		6384193	0					
ANR	6384281	CallExpression	r_num_str_len ( str + i )		6384193	1					
ANR	6384282	Callee	r_num_str_len		6384193	0					
ANR	6384283	Identifier	r_num_str_len		6384193	0					
ANR	6384284	ArgumentList	str + i		6384193	1					
ANR	6384285	Argument	str + i		6384193	0					
ANR	6384286	AdditiveExpression	str + i		6384193	0		+			
ANR	6384287	Identifier	str		6384193	0					
ANR	6384288	Identifier	i		6384193	1					
ANR	6384289	ExpressionStatement	len = i	821:3:17308:17315	6384193	2	True				
ANR	6384290	AssignmentExpression	len = i		6384193	0		=			
ANR	6384291	Identifier	len		6384193	0					
ANR	6384292	Identifier	i		6384193	1					
ANR	6384293	ExpressionStatement	st = 1	822:3:17320:17326	6384193	3	True				
ANR	6384294	AssignmentExpression	st = 1		6384193	0		=			
ANR	6384295	Identifier	st		6384193	0					
ANR	6384296	PrimaryExpression	1		6384193	1					
ANR	6384297	BreakStatement	break ;	823:3:17331:17336	6384193	4	True				
ANR	6384298	Label	case 1 :	824:2:17340:17346	6384193	5	True				
ANR	6384299	WhileStatement	while ( str [ i ] != '\\0' && str [ i ] == ' ' )		6384193	6					
ANR	6384300	Condition	str [ i ] != '\\0' && str [ i ] == ' '	825:10:17364:17394	6384193	0	True				
ANR	6384301	AndExpression	str [ i ] != '\\0' && str [ i ] == ' '		6384193	0		&&			
ANR	6384302	EqualityExpression	str [ i ] != '\\0'		6384193	0		!=			
ANR	6384303	ArrayIndexing	str [ i ]		6384193	0					
ANR	6384304	Identifier	str		6384193	0					
ANR	6384305	Identifier	i		6384193	1					
ANR	6384306	PrimaryExpression	'\\0'		6384193	1					
ANR	6384307	EqualityExpression	str [ i ] == ' '		6384193	1		==			
ANR	6384308	ArrayIndexing	str [ i ]		6384193	0					
ANR	6384309	Identifier	str		6384193	0					
ANR	6384310	Identifier	i		6384193	1					
ANR	6384311	PrimaryExpression	' '		6384193	1					
ANR	6384312	CompoundStatement		21:43:395:395	6384193	1					
ANR	6384313	ExpressionStatement	i ++	826:4:17403:17406	6384193	0	True				
ANR	6384314	PostIncDecOperationExpression	i ++		6384193	0					
ANR	6384315	Identifier	i		6384193	0					
ANR	6384316	IncDec	++		6384193	1					
ANR	6384317	IfStatement	if ( ! r_num_is_op ( str [ i ] ) )		6384193	7					
ANR	6384318	Condition	! r_num_is_op ( str [ i ] )	828:7:17420:17440	6384193	0	True				
ANR	6384319	UnaryOperationExpression	! r_num_is_op ( str [ i ] )		6384193	0					
ANR	6384320	UnaryOperator	!		6384193	0					
ANR	6384321	CallExpression	r_num_is_op ( str [ i ] )		6384193	1					
ANR	6384322	Callee	r_num_is_op		6384193	0					
ANR	6384323	Identifier	r_num_is_op		6384193	0					
ANR	6384324	ArgumentList	str [ i ]		6384193	1					
ANR	6384325	Argument	str [ i ]		6384193	0					
ANR	6384326	ArrayIndexing	str [ i ]		6384193	0					
ANR	6384327	Identifier	str		6384193	0					
ANR	6384328	Identifier	i		6384193	1					
ANR	6384329	CompoundStatement		24:30:441:441	6384193	1					
ANR	6384330	ReturnStatement	return len ;	829:4:17449:17459	6384193	0	True				
ANR	6384331	Identifier	len		6384193	0					
ANR	6384332	IfStatement	if ( str [ i ] == ')' )		6384193	8					
ANR	6384333	Condition	str [ i ] == ')'	831:7:17473:17485	6384193	0	True				
ANR	6384334	EqualityExpression	str [ i ] == ')'		6384193	0		==			
ANR	6384335	ArrayIndexing	str [ i ]		6384193	0					
ANR	6384336	Identifier	str		6384193	0					
ANR	6384337	Identifier	i		6384193	1					
ANR	6384338	PrimaryExpression	')'		6384193	1					
ANR	6384339	CompoundStatement		27:22:486:486	6384193	1					
ANR	6384340	ReturnStatement	return i + 1 ;	832:4:17494:17506	6384193	0	True				
ANR	6384341	AdditiveExpression	i + 1		6384193	0		+			
ANR	6384342	Identifier	i		6384193	0					
ANR	6384343	PrimaryExpression	1		6384193	1					
ANR	6384344	ExpressionStatement	i ++	834:3:17516:17519	6384193	9	True				
ANR	6384345	PostIncDecOperationExpression	i ++		6384193	0					
ANR	6384346	Identifier	i		6384193	0					
ANR	6384347	IncDec	++		6384193	1					
ANR	6384348	WhileStatement	while ( str [ i ] != '\\0' && str [ i ] == ' ' )		6384193	10					
ANR	6384349	Condition	str [ i ] != '\\0' && str [ i ] == ' '	835:10:17531:17561	6384193	0	True				
ANR	6384350	AndExpression	str [ i ] != '\\0' && str [ i ] == ' '		6384193	0		&&			
ANR	6384351	EqualityExpression	str [ i ] != '\\0'		6384193	0		!=			
ANR	6384352	ArrayIndexing	str [ i ]		6384193	0					
ANR	6384353	Identifier	str		6384193	0					
ANR	6384354	Identifier	i		6384193	1					
ANR	6384355	PrimaryExpression	'\\0'		6384193	1					
ANR	6384356	EqualityExpression	str [ i ] == ' '		6384193	1		==			
ANR	6384357	ArrayIndexing	str [ i ]		6384193	0					
ANR	6384358	Identifier	str		6384193	0					
ANR	6384359	Identifier	i		6384193	1					
ANR	6384360	PrimaryExpression	' '		6384193	1					
ANR	6384361	CompoundStatement		31:43:562:562	6384193	1					
ANR	6384362	ExpressionStatement	i ++	836:4:17570:17573	6384193	0	True				
ANR	6384363	PostIncDecOperationExpression	i ++		6384193	0					
ANR	6384364	Identifier	i		6384193	0					
ANR	6384365	IncDec	++		6384193	1					
ANR	6384366	ExpressionStatement	st = 0	838:3:17583:17589	6384193	11	True				
ANR	6384367	AssignmentExpression	st = 0		6384193	0		=			
ANR	6384368	Identifier	st		6384193	0					
ANR	6384369	PrimaryExpression	0		6384193	1					
ANR	6384370	BreakStatement	break ;	839:3:17594:17599	6384193	12	True				
ANR	6384371	ReturnStatement	return len ;	842:1:17609:17619	6384193	4	True				
ANR	6384372	Identifier	len		6384193	0					
ANR	6384373	ReturnType	R_API int		6384193	1					
ANR	6384374	Identifier	r_num_str_len		6384193	2					
ANR	6384375	ParameterList	const char * str		6384193	3					
ANR	6384376	Parameter	const char * str	805:24:16984:16998	6384193	0	True				
ANR	6384377	ParameterType	const char *		6384193	0					
ANR	6384378	Identifier	str		6384193	1					
ANR	6384379	CFGEntryNode	ENTRY		6384193		True				
ANR	6384380	CFGExitNode	EXIT		6384193		True				
ANR	6384381	Symbol	str		6384193						
ANR	6384382	Symbol	st		6384193						
ANR	6384383	Symbol	* i		6384193						
ANR	6384384	Symbol	len		6384193						
ANR	6384385	Symbol	i		6384193						
ANR	6384386	Symbol	r_num_is_op		6384193						
ANR	6384387	Symbol	* str		6384193						
ANR	6384388	Symbol	r_num_str_len		6384193						
ANR	6384389	Function	r_num_str_split	845:0:17624:17821							
ANR	6384390	FunctionDef	r_num_str_split (char * str)		6384389	0					
ANR	6384391	CompoundStatement		845:37:17661:17821	6384389	0					
ANR	6384392	IdentifierDeclStatement	"int i = 0 , count = 0 ;"	846:1:17664:17684	6384389	0	True				
ANR	6384393	IdentifierDecl	i = 0		6384389	0					
ANR	6384394	IdentifierDeclType	int		6384389	0					
ANR	6384395	Identifier	i		6384389	1					
ANR	6384396	AssignmentExpression	i = 0		6384389	2		=			
ANR	6384397	Identifier	i		6384389	0					
ANR	6384398	PrimaryExpression	0		6384389	1					
ANR	6384399	IdentifierDecl	count = 0		6384389	1					
ANR	6384400	IdentifierDeclType	int		6384389	0					
ANR	6384401	Identifier	count		6384389	1					
ANR	6384402	AssignmentExpression	count = 0		6384389	2		=			
ANR	6384403	Identifier	count		6384389	0					
ANR	6384404	PrimaryExpression	0		6384389	1					
ANR	6384405	IdentifierDeclStatement	const int len = strlen ( str ) ;	847:1:17687:17715	6384389	1	True				
ANR	6384406	IdentifierDecl	len = strlen ( str )		6384389	0					
ANR	6384407	IdentifierDeclType	const int		6384389	0					
ANR	6384408	Identifier	len		6384389	1					
ANR	6384409	AssignmentExpression	len = strlen ( str )		6384389	2		=			
ANR	6384410	Identifier	len		6384389	0					
ANR	6384411	CallExpression	strlen ( str )		6384389	1					
ANR	6384412	Callee	strlen		6384389	0					
ANR	6384413	Identifier	strlen		6384389	0					
ANR	6384414	ArgumentList	str		6384389	1					
ANR	6384415	Argument	str		6384389	0					
ANR	6384416	Identifier	str		6384389	0					
ANR	6384417	WhileStatement	while ( i < len )		6384389	2					
ANR	6384418	Condition	i < len	848:8:17725:17731	6384389	0	True				
ANR	6384419	RelationalExpression	i < len		6384389	0		<			
ANR	6384420	Identifier	i		6384389	0					
ANR	6384421	Identifier	len		6384389	1					
ANR	6384422	CompoundStatement		4:17:72:72	6384389	1					
ANR	6384423	ExpressionStatement	i += r_num_str_len ( str + i )	849:2:17738:17766	6384389	0	True				
ANR	6384424	AssignmentExpression	i += r_num_str_len ( str + i )		6384389	0		+=			
ANR	6384425	Identifier	i		6384389	0					
ANR	6384426	CallExpression	r_num_str_len ( str + i )		6384389	1					
ANR	6384427	Callee	r_num_str_len		6384389	0					
ANR	6384428	Identifier	r_num_str_len		6384389	0					
ANR	6384429	ArgumentList	str + i		6384389	1					
ANR	6384430	Argument	str + i		6384389	0					
ANR	6384431	AdditiveExpression	str + i		6384389	0		+			
ANR	6384432	Identifier	str		6384389	0					
ANR	6384433	Identifier	i		6384389	1					
ANR	6384434	ExpressionStatement	str [ i ] = '\\0'	850:2:17770:17783	6384389	1	True				
ANR	6384435	AssignmentExpression	str [ i ] = '\\0'		6384389	0		=			
ANR	6384436	ArrayIndexing	str [ i ]		6384389	0					
ANR	6384437	Identifier	str		6384389	0					
ANR	6384438	Identifier	i		6384389	1					
ANR	6384439	PrimaryExpression	'\\0'		6384389	1					
ANR	6384440	ExpressionStatement	i ++	851:2:17787:17790	6384389	2	True				
ANR	6384441	PostIncDecOperationExpression	i ++		6384389	0					
ANR	6384442	Identifier	i		6384389	0					
ANR	6384443	IncDec	++		6384389	1					
ANR	6384444	ExpressionStatement	count ++	852:2:17794:17801	6384389	3	True				
ANR	6384445	PostIncDecOperationExpression	count ++		6384389	0					
ANR	6384446	Identifier	count		6384389	0					
ANR	6384447	IncDec	++		6384389	1					
ANR	6384448	ReturnStatement	return count ;	854:1:17807:17819	6384389	3	True				
ANR	6384449	Identifier	count		6384389	0					
ANR	6384450	ReturnType	R_API int		6384389	1					
ANR	6384451	Identifier	r_num_str_split		6384389	2					
ANR	6384452	ParameterList	char * str		6384389	3					
ANR	6384453	Parameter	char * str	845:26:17650:17658	6384389	0	True				
ANR	6384454	ParameterType	char *		6384389	0					
ANR	6384455	Identifier	str		6384389	1					
ANR	6384456	CFGEntryNode	ENTRY		6384389		True				
ANR	6384457	CFGExitNode	EXIT		6384389		True				
ANR	6384458	Symbol	str		6384389						
ANR	6384459	Symbol	strlen		6384389						
ANR	6384460	Symbol	* i		6384389						
ANR	6384461	Symbol	len		6384389						
ANR	6384462	Symbol	count		6384389						
ANR	6384463	Symbol	i		6384389						
ANR	6384464	Symbol	* str		6384389						
ANR	6384465	Symbol	r_num_str_len		6384389						
ANR	6384466	Function	r_num_str_split_list	857:0:17824:18044							
ANR	6384467	FunctionDef	r_num_str_split_list (char * str)		6384466	0					
ANR	6384468	CompoundStatement		857:45:17869:18044	6384466	0					
ANR	6384469	IdentifierDeclStatement	"int i , count = r_num_str_split ( str ) ;"	858:1:17872:17908	6384466	0	True				
ANR	6384470	IdentifierDecl	i		6384466	0					
ANR	6384471	IdentifierDeclType	int		6384466	0					
ANR	6384472	Identifier	i		6384466	1					
ANR	6384473	IdentifierDecl	count = r_num_str_split ( str )		6384466	1					
ANR	6384474	IdentifierDeclType	int		6384466	0					
ANR	6384475	Identifier	count		6384466	1					
ANR	6384476	AssignmentExpression	count = r_num_str_split ( str )		6384466	2		=			
ANR	6384477	Identifier	count		6384466	0					
ANR	6384478	CallExpression	r_num_str_split ( str )		6384466	1					
ANR	6384479	Callee	r_num_str_split		6384466	0					
ANR	6384480	Identifier	r_num_str_split		6384466	0					
ANR	6384481	ArgumentList	str		6384466	1					
ANR	6384482	Argument	str		6384466	0					
ANR	6384483	Identifier	str		6384466	0					
ANR	6384484	IdentifierDeclStatement	RList * list = r_list_new ( ) ;	859:1:17911:17938	6384466	1	True				
ANR	6384485	IdentifierDecl	* list = r_list_new ( )		6384466	0					
ANR	6384486	IdentifierDeclType	RList *		6384466	0					
ANR	6384487	Identifier	list		6384466	1					
ANR	6384488	AssignmentExpression	* list = r_list_new ( )		6384466	2		=			
ANR	6384489	Identifier	list		6384466	0					
ANR	6384490	CallExpression	r_list_new ( )		6384466	1					
ANR	6384491	Callee	r_list_new		6384466	0					
ANR	6384492	Identifier	r_list_new		6384466	0					
ANR	6384493	ArgumentList			6384466	1					
ANR	6384494	ForStatement	for ( i = 0 ; i < count ; i ++ )		6384466	2					
ANR	6384495	ForInit	i = 0 ;	860:6:17946:17951	6384466	0	True				
ANR	6384496	AssignmentExpression	i = 0		6384466	0		=			
ANR	6384497	Identifier	i		6384466	0					
ANR	6384498	PrimaryExpression	0		6384466	1					
ANR	6384499	Condition	i < count	860:13:17953:17961	6384466	1	True				
ANR	6384500	RelationalExpression	i < count		6384466	0		<			
ANR	6384501	Identifier	i		6384466	0					
ANR	6384502	Identifier	count		6384466	1					
ANR	6384503	PostIncDecOperationExpression	i ++	860:24:17964:17966	6384466	2	True				
ANR	6384504	Identifier	i		6384466	0					
ANR	6384505	IncDec	++		6384466	1					
ANR	6384506	CompoundStatement		4:29:99:99	6384466	3					
ANR	6384507	ExpressionStatement	"r_list_append ( list , str )"	861:2:17973:17998	6384466	0	True				
ANR	6384508	CallExpression	"r_list_append ( list , str )"		6384466	0					
ANR	6384509	Callee	r_list_append		6384466	0					
ANR	6384510	Identifier	r_list_append		6384466	0					
ANR	6384511	ArgumentList	list		6384466	1					
ANR	6384512	Argument	list		6384466	0					
ANR	6384513	Identifier	list		6384466	0					
ANR	6384514	Argument	str		6384466	1					
ANR	6384515	Identifier	str		6384466	0					
ANR	6384516	ExpressionStatement	str += strlen ( str ) + 1	862:2:18002:18025	6384466	1	True				
ANR	6384517	AssignmentExpression	str += strlen ( str ) + 1		6384466	0		+=			
ANR	6384518	Identifier	str		6384466	0					
ANR	6384519	AdditiveExpression	strlen ( str ) + 1		6384466	1		+			
ANR	6384520	CallExpression	strlen ( str )		6384466	0					
ANR	6384521	Callee	strlen		6384466	0					
ANR	6384522	Identifier	strlen		6384466	0					
ANR	6384523	ArgumentList	str		6384466	1					
ANR	6384524	Argument	str		6384466	0					
ANR	6384525	Identifier	str		6384466	0					
ANR	6384526	PrimaryExpression	1		6384466	1					
ANR	6384527	ReturnStatement	return list ;	864:1:18031:18042	6384466	3	True				
ANR	6384528	Identifier	list		6384466	0					
ANR	6384529	ReturnType	R_API RList *		6384466	1					
ANR	6384530	Identifier	r_num_str_split_list		6384466	2					
ANR	6384531	ParameterList	char * str		6384466	3					
ANR	6384532	Parameter	char * str	857:34:17858:17866	6384466	0	True				
ANR	6384533	ParameterType	char *		6384466	0					
ANR	6384534	Identifier	str		6384466	1					
ANR	6384535	CFGEntryNode	ENTRY		6384466		True				
ANR	6384536	CFGExitNode	EXIT		6384466		True				
ANR	6384537	Symbol	str		6384466						
ANR	6384538	Symbol	strlen		6384466						
ANR	6384539	Symbol	r_num_str_split		6384466						
ANR	6384540	Symbol	count		6384466						
ANR	6384541	Symbol	i		6384466						
ANR	6384542	Symbol	list		6384466						
ANR	6384543	Symbol	r_list_new		6384466						
ANR	6384544	Function	r_num_dup	867:0:18047:18174							
ANR	6384545	FunctionDef	r_num_dup (ut64 n)		6384544	0					
ANR	6384546	CompoundStatement		867:30:18077:18174	6384544	0					
ANR	6384547	IdentifierDeclStatement	ut64 * hn = malloc ( sizeof ( ut64 ) ) ;	868:1:18080:18113	6384544	0	True				
ANR	6384548	IdentifierDecl	* hn = malloc ( sizeof ( ut64 ) )		6384544	0					
ANR	6384549	IdentifierDeclType	ut64 *		6384544	0					
ANR	6384550	Identifier	hn		6384544	1					
ANR	6384551	AssignmentExpression	* hn = malloc ( sizeof ( ut64 ) )		6384544	2		=			
ANR	6384552	Identifier	hn		6384544	0					
ANR	6384553	CallExpression	malloc ( sizeof ( ut64 ) )		6384544	1					
ANR	6384554	Callee	malloc		6384544	0					
ANR	6384555	Identifier	malloc		6384544	0					
ANR	6384556	ArgumentList	sizeof ( ut64 )		6384544	1					
ANR	6384557	Argument	sizeof ( ut64 )		6384544	0					
ANR	6384558	SizeofExpression	sizeof ( ut64 )		6384544	0					
ANR	6384559	Sizeof	sizeof		6384544	0					
ANR	6384560	SizeofOperand	ut64		6384544	1					
ANR	6384561	IfStatement	if ( ! hn )		6384544	1					
ANR	6384562	Condition	! hn	869:5:18120:18122	6384544	0	True				
ANR	6384563	UnaryOperationExpression	! hn		6384544	0					
ANR	6384564	UnaryOperator	!		6384544	0					
ANR	6384565	Identifier	hn		6384544	1					
ANR	6384566	CompoundStatement		3:10:47:47	6384544	1					
ANR	6384567	ReturnStatement	return NULL ;	870:2:18129:18140	6384544	0	True				
ANR	6384568	Identifier	NULL		6384544	0					
ANR	6384569	ExpressionStatement	* hn = n	872:1:18146:18153	6384544	2	True				
ANR	6384570	AssignmentExpression	* hn = n		6384544	0		=			
ANR	6384571	UnaryOperationExpression	* hn		6384544	0					
ANR	6384572	UnaryOperator	*		6384544	0					
ANR	6384573	Identifier	hn		6384544	1					
ANR	6384574	Identifier	n		6384544	1					
ANR	6384575	ReturnStatement	return ( void * ) hn ;	873:1:18156:18172	6384544	3	True				
ANR	6384576	CastExpression	( void * ) hn		6384544	0					
ANR	6384577	CastTarget	void *		6384544	0					
ANR	6384578	Identifier	hn		6384544	1					
ANR	6384579	ReturnType	R_API void *		6384544	1					
ANR	6384580	Identifier	r_num_dup		6384544	2					
ANR	6384581	ParameterList	ut64 n		6384544	3					
ANR	6384582	Parameter	ut64 n	867:22:18069:18074	6384544	0	True				
ANR	6384583	ParameterType	ut64		6384544	0					
ANR	6384584	Identifier	n		6384544	1					
ANR	6384585	CFGEntryNode	ENTRY		6384544		True				
ANR	6384586	CFGExitNode	EXIT		6384544		True				
ANR	6384587	Symbol	malloc		6384544						
ANR	6384588	Symbol	NULL		6384544						
ANR	6384589	Symbol	hn		6384544						
ANR	6384590	Symbol	n		6384544						
ANR	6384591	Symbol	* hn		6384544						
ANR	6384592	Function	r_num_cos	876:0:18177:18229							
ANR	6384593	FunctionDef	r_num_cos (double a)		6384592	0					
ANR	6384594	CompoundStatement		876:33:18210:18229	6384592	0					
ANR	6384595	ReturnStatement	return cos ( a ) ;	877:1:18213:18227	6384592	0	True				
ANR	6384596	CallExpression	cos ( a )		6384592	0					
ANR	6384597	Callee	cos		6384592	0					
ANR	6384598	Identifier	cos		6384592	0					
ANR	6384599	ArgumentList	a		6384592	1					
ANR	6384600	Argument	a		6384592	0					
ANR	6384601	Identifier	a		6384592	0					
ANR	6384602	ReturnType	R_API double		6384592	1					
ANR	6384603	Identifier	r_num_cos		6384592	2					
ANR	6384604	ParameterList	double a		6384592	3					
ANR	6384605	Parameter	double a	876:23:18200:18207	6384592	0	True				
ANR	6384606	ParameterType	double		6384592	0					
ANR	6384607	Identifier	a		6384592	1					
ANR	6384608	CFGEntryNode	ENTRY		6384592		True				
ANR	6384609	CFGExitNode	EXIT		6384592		True				
ANR	6384610	Symbol	a		6384592						
ANR	6384611	Symbol	cos		6384592						
ANR	6384612	Function	r_num_sin	880:0:18232:18284							
ANR	6384613	FunctionDef	r_num_sin (double a)		6384612	0					
ANR	6384614	CompoundStatement		880:33:18265:18284	6384612	0					
ANR	6384615	ReturnStatement	return sin ( a ) ;	881:1:18268:18282	6384612	0	True				
ANR	6384616	CallExpression	sin ( a )		6384612	0					
ANR	6384617	Callee	sin		6384612	0					
ANR	6384618	Identifier	sin		6384612	0					
ANR	6384619	ArgumentList	a		6384612	1					
ANR	6384620	Argument	a		6384612	0					
ANR	6384621	Identifier	a		6384612	0					
ANR	6384622	ReturnType	R_API double		6384612	1					
ANR	6384623	Identifier	r_num_sin		6384612	2					
ANR	6384624	ParameterList	double a		6384612	3					
ANR	6384625	Parameter	double a	880:23:18255:18262	6384612	0	True				
ANR	6384626	ParameterType	double		6384612	0					
ANR	6384627	Identifier	a		6384612	1					
ANR	6384628	CFGEntryNode	ENTRY		6384612		True				
ANR	6384629	CFGExitNode	EXIT		6384612		True				
ANR	6384630	Symbol	a		6384612						
ANR	6384631	Symbol	sin		6384612						
