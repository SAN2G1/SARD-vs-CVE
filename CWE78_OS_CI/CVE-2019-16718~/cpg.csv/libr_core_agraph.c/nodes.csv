command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	3936325	File	data/converged/CVE-2019-16718~_radare2/libr_core_agraph.c								
ANR	3936326	DeclStmt									
ANR	3936327	Decl							int	int	mousemode
ANR	3936328	DeclStmt									
ANR	3936329	Decl							int	int	disMode
ANR	3936330	DeclStmt									
ANR	3936331	Decl							int	int	discroll
ANR	3936332	DeclStmt									
ANR	3936333	Decl							bool	bool	graphCursor
ANR	3936334	DeclStmt									
ANR	3936335	Decl							const char	const char * [ ]	mousemodes
ANR	3936336	ClassDef	len_pos_t	61:0:1751:1790							
ANR	3936337	DeclStmt									
ANR	3936338	Decl							int	int	len
ANR	3936339	DeclStmt									
ANR	3936340	Decl							int	int	pos
ANR	3936341	ClassDef	dist_t	66:0:1794:1869							
ANR	3936342	DeclStmt									
ANR	3936343	Decl							const RGraphNode	const RGraphNode *	from
ANR	3936344	DeclStmt									
ANR	3936345	Decl							const RGraphNode	const RGraphNode *	to
ANR	3936346	DeclStmt									
ANR	3936347	Decl							int	int	dist
ANR	3936348	ClassDef	g_cb	72:0:1873:1967							
ANR	3936349	DeclStmt									
ANR	3936350	Decl							RAGraph	RAGraph *	graph
ANR	3936351	DeclStmt									
ANR	3936352	Decl							RANodeCallback	RANodeCallback	node_cb
ANR	3936353	DeclStmt									
ANR	3936354	Decl							RAEdgeCallback	RAEdgeCallback	edge_cb
ANR	3936355	DeclStmt									
ANR	3936356	Decl							void	void *	data
ANR	3936357	ClassDef	ascii_edge_t	79:8:1979:2069							
ANR	3936358	DeclStmt									
ANR	3936359	Decl							RANode	RANode *	from
ANR	3936360	DeclStmt									
ANR	3936361	Decl							RANode	RANode *	to
ANR	3936362	DeclStmt									
ANR	3936363	Decl							RList	RList *	x
ANR	3936364	Decl							RList	RList *	y
ANR	3936365	DeclStmt									
ANR	3936366	Decl							int	int	is_reversed
ANR	3936367	DeclStmt									
ANR	3936368	Decl							ascii_edge_t	ascii_edge_t	AEdge
ANR	3936369	ClassDef	layer_t	86:0:2072:2174							
ANR	3936370	DeclStmt									
ANR	3936371	Decl							int	int	n_nodes
ANR	3936372	DeclStmt									
ANR	3936373	Decl							RGraphNode	RGraphNode * *	nodes
ANR	3936374	DeclStmt									
ANR	3936375	Decl							int	int	position
ANR	3936376	DeclStmt									
ANR	3936377	Decl							int	int	height
ANR	3936378	DeclStmt									
ANR	3936379	Decl							int	int	width
ANR	3936380	DeclStmt									
ANR	3936381	Decl							int	int	gap
ANR	3936382	ClassDef	agraph_refresh_data	95:0:2178:2286							
ANR	3936383	DeclStmt									
ANR	3936384	Decl							RCore	RCore *	core
ANR	3936385	DeclStmt									
ANR	3936386	Decl							RAGraph	RAGraph *	g
ANR	3936387	DeclStmt									
ANR	3936388	Decl							RAnalFunction	RAnalFunction * *	fcn
ANR	3936389	DeclStmt									
ANR	3936390	Decl							bool	bool	follow_offset
ANR	3936391	DeclStmt									
ANR	3936392	Decl							int	int	fs
ANR	3936393	Function	is_offset	107:0:2460:2543							
ANR	3936394	FunctionDef	is_offset (const RAGraph * g)		3936393	0					
ANR	3936395	CompoundStatement		107:40:2500:2543	3936393	0					
ANR	3936396	ReturnStatement	return g -> mode == R_AGRAPH_MODE_OFFSET ;	108:1:2503:2541	3936393	0	True				
ANR	3936397	EqualityExpression	g -> mode == R_AGRAPH_MODE_OFFSET		3936393	0		==			
ANR	3936398	PtrMemberAccess	g -> mode		3936393	0					
ANR	3936399	Identifier	g		3936393	0					
ANR	3936400	Identifier	mode		3936393	1					
ANR	3936401	Identifier	R_AGRAPH_MODE_OFFSET		3936393	1					
ANR	3936402	ReturnType	static bool		3936393	1					
ANR	3936403	Identifier	is_offset		3936393	2					
ANR	3936404	ParameterList	const RAGraph * g		3936393	3					
ANR	3936405	Parameter	const RAGraph * g	107:22:2482:2497	3936393	0	True				
ANR	3936406	ParameterType	const RAGraph *		3936393	0					
ANR	3936407	Identifier	g		3936393	1					
ANR	3936408	CFGEntryNode	ENTRY		3936393		True				
ANR	3936409	CFGExitNode	EXIT		3936393		True				
ANR	3936410	Symbol	g -> mode		3936393						
ANR	3936411	Symbol	* g		3936393						
ANR	3936412	Symbol	R_AGRAPH_MODE_OFFSET		3936393						
ANR	3936413	Symbol	g		3936393						
ANR	3936414	Function	is_mini	111:0:2546:2625							
ANR	3936415	FunctionDef	is_mini (const RAGraph * g)		3936414	0					
ANR	3936416	CompoundStatement		111:38:2584:2625	3936414	0					
ANR	3936417	ReturnStatement	return g -> mode == R_AGRAPH_MODE_MINI ;	112:1:2587:2623	3936414	0	True				
ANR	3936418	EqualityExpression	g -> mode == R_AGRAPH_MODE_MINI		3936414	0		==			
ANR	3936419	PtrMemberAccess	g -> mode		3936414	0					
ANR	3936420	Identifier	g		3936414	0					
ANR	3936421	Identifier	mode		3936414	1					
ANR	3936422	Identifier	R_AGRAPH_MODE_MINI		3936414	1					
ANR	3936423	ReturnType	static bool		3936414	1					
ANR	3936424	Identifier	is_mini		3936414	2					
ANR	3936425	ParameterList	const RAGraph * g		3936414	3					
ANR	3936426	Parameter	const RAGraph * g	111:20:2566:2581	3936414	0	True				
ANR	3936427	ParameterType	const RAGraph *		3936414	0					
ANR	3936428	Identifier	g		3936414	1					
ANR	3936429	CFGEntryNode	ENTRY		3936414		True				
ANR	3936430	CFGExitNode	EXIT		3936414		True				
ANR	3936431	Symbol	g -> mode		3936414						
ANR	3936432	Symbol	* g		3936414						
ANR	3936433	Symbol	g		3936414						
ANR	3936434	Symbol	R_AGRAPH_MODE_MINI		3936414						
ANR	3936435	Function	is_tiny	115:0:2628:2721							
ANR	3936436	FunctionDef	is_tiny (const RAGraph * g)		3936435	0					
ANR	3936437	CompoundStatement		115:38:2666:2721	3936435	0					
ANR	3936438	ReturnStatement	return g -> is_tiny || g -> mode == R_AGRAPH_MODE_TINY ;	116:1:2669:2719	3936435	0	True				
ANR	3936439	OrExpression	g -> is_tiny || g -> mode == R_AGRAPH_MODE_TINY		3936435	0		||			
ANR	3936440	PtrMemberAccess	g -> is_tiny		3936435	0					
ANR	3936441	Identifier	g		3936435	0					
ANR	3936442	Identifier	is_tiny		3936435	1					
ANR	3936443	EqualityExpression	g -> mode == R_AGRAPH_MODE_TINY		3936435	1		==			
ANR	3936444	PtrMemberAccess	g -> mode		3936435	0					
ANR	3936445	Identifier	g		3936435	0					
ANR	3936446	Identifier	mode		3936435	1					
ANR	3936447	Identifier	R_AGRAPH_MODE_TINY		3936435	1					
ANR	3936448	ReturnType	static bool		3936435	1					
ANR	3936449	Identifier	is_tiny		3936435	2					
ANR	3936450	ParameterList	const RAGraph * g		3936435	3					
ANR	3936451	Parameter	const RAGraph * g	115:20:2648:2663	3936435	0	True				
ANR	3936452	ParameterType	const RAGraph *		3936435	0					
ANR	3936453	Identifier	g		3936435	1					
ANR	3936454	CFGEntryNode	ENTRY		3936435		True				
ANR	3936455	CFGExitNode	EXIT		3936435		True				
ANR	3936456	Symbol	g -> mode		3936435						
ANR	3936457	Symbol	* g		3936435						
ANR	3936458	Symbol	g -> is_tiny		3936435						
ANR	3936459	Symbol	g		3936435						
ANR	3936460	Symbol	R_AGRAPH_MODE_TINY		3936435						
ANR	3936461	Function	is_summary	119:0:2724:2809							
ANR	3936462	FunctionDef	is_summary (const RAGraph * g)		3936461	0					
ANR	3936463	CompoundStatement		119:41:2765:2809	3936461	0					
ANR	3936464	ReturnStatement	return g -> mode == R_AGRAPH_MODE_SUMMARY ;	120:1:2768:2807	3936461	0	True				
ANR	3936465	EqualityExpression	g -> mode == R_AGRAPH_MODE_SUMMARY		3936461	0		==			
ANR	3936466	PtrMemberAccess	g -> mode		3936461	0					
ANR	3936467	Identifier	g		3936461	0					
ANR	3936468	Identifier	mode		3936461	1					
ANR	3936469	Identifier	R_AGRAPH_MODE_SUMMARY		3936461	1					
ANR	3936470	ReturnType	static bool		3936461	1					
ANR	3936471	Identifier	is_summary		3936461	2					
ANR	3936472	ParameterList	const RAGraph * g		3936461	3					
ANR	3936473	Parameter	const RAGraph * g	119:23:2747:2762	3936461	0	True				
ANR	3936474	ParameterType	const RAGraph *		3936461	0					
ANR	3936475	Identifier	g		3936461	1					
ANR	3936476	CFGEntryNode	ENTRY		3936461		True				
ANR	3936477	CFGExitNode	EXIT		3936461		True				
ANR	3936478	Symbol	g -> mode		3936461						
ANR	3936479	Symbol	* g		3936461						
ANR	3936480	Symbol	g		3936461						
ANR	3936481	Symbol	R_AGRAPH_MODE_SUMMARY		3936461						
ANR	3936482	Function	is_comments	123:0:2812:2899							
ANR	3936483	FunctionDef	is_comments (const RAGraph * g)		3936482	0					
ANR	3936484	CompoundStatement		123:42:2854:2899	3936482	0					
ANR	3936485	ReturnStatement	return g -> mode == R_AGRAPH_MODE_COMMENTS ;	124:1:2857:2897	3936482	0	True				
ANR	3936486	EqualityExpression	g -> mode == R_AGRAPH_MODE_COMMENTS		3936482	0		==			
ANR	3936487	PtrMemberAccess	g -> mode		3936482	0					
ANR	3936488	Identifier	g		3936482	0					
ANR	3936489	Identifier	mode		3936482	1					
ANR	3936490	Identifier	R_AGRAPH_MODE_COMMENTS		3936482	1					
ANR	3936491	ReturnType	static bool		3936482	1					
ANR	3936492	Identifier	is_comments		3936482	2					
ANR	3936493	ParameterList	const RAGraph * g		3936482	3					
ANR	3936494	Parameter	const RAGraph * g	123:24:2836:2851	3936482	0	True				
ANR	3936495	ParameterType	const RAGraph *		3936482	0					
ANR	3936496	Identifier	g		3936482	1					
ANR	3936497	CFGEntryNode	ENTRY		3936482		True				
ANR	3936498	CFGExitNode	EXIT		3936482		True				
ANR	3936499	Symbol	g -> mode		3936482						
ANR	3936500	Symbol	* g		3936482						
ANR	3936501	Symbol	R_AGRAPH_MODE_COMMENTS		3936482						
ANR	3936502	Symbol	g		3936482						
ANR	3936503	Function	next_mode	127:0:2902:2975							
ANR	3936504	FunctionDef	next_mode (int mode)		3936503	0					
ANR	3936505	CompoundStatement		127:31:2933:2975	3936503	0					
ANR	3936506	ReturnStatement	return ( mode + 1 ) % R_AGRAPH_MODE_MAX ;	128:1:2936:2973	3936503	0	True				
ANR	3936507	MultiplicativeExpression	( mode + 1 ) % R_AGRAPH_MODE_MAX		3936503	0		%			
ANR	3936508	AdditiveExpression	mode + 1		3936503	0		+			
ANR	3936509	Identifier	mode		3936503	0					
ANR	3936510	PrimaryExpression	1		3936503	1					
ANR	3936511	Identifier	R_AGRAPH_MODE_MAX		3936503	1					
ANR	3936512	ReturnType	static int		3936503	1					
ANR	3936513	Identifier	next_mode		3936503	2					
ANR	3936514	ParameterList	int mode		3936503	3					
ANR	3936515	Parameter	int mode	127:21:2923:2930	3936503	0	True				
ANR	3936516	ParameterType	int		3936503	0					
ANR	3936517	Identifier	mode		3936503	1					
ANR	3936518	CFGEntryNode	ENTRY		3936503		True				
ANR	3936519	CFGExitNode	EXIT		3936503		True				
ANR	3936520	Symbol	mode		3936503						
ANR	3936521	Symbol	R_AGRAPH_MODE_MAX		3936503						
ANR	3936522	Function	prev_mode	131:0:2978:3071							
ANR	3936523	FunctionDef	prev_mode (int mode)		3936522	0					
ANR	3936524	CompoundStatement		131:31:3009:3071	3936522	0					
ANR	3936525	ReturnStatement	return ( mode + R_AGRAPH_MODE_MAX - 1 ) % R_AGRAPH_MODE_MAX ;	132:1:3012:3069	3936522	0	True				
ANR	3936526	MultiplicativeExpression	( mode + R_AGRAPH_MODE_MAX - 1 ) % R_AGRAPH_MODE_MAX		3936522	0		%			
ANR	3936527	AdditiveExpression	mode + R_AGRAPH_MODE_MAX - 1		3936522	0		+			
ANR	3936528	Identifier	mode		3936522	0					
ANR	3936529	AdditiveExpression	R_AGRAPH_MODE_MAX - 1		3936522	1		-			
ANR	3936530	Identifier	R_AGRAPH_MODE_MAX		3936522	0					
ANR	3936531	PrimaryExpression	1		3936522	1					
ANR	3936532	Identifier	R_AGRAPH_MODE_MAX		3936522	1					
ANR	3936533	ReturnType	static int		3936522	1					
ANR	3936534	Identifier	prev_mode		3936522	2					
ANR	3936535	ParameterList	int mode		3936522	3					
ANR	3936536	Parameter	int mode	131:21:2999:3006	3936522	0	True				
ANR	3936537	ParameterType	int		3936522	0					
ANR	3936538	Identifier	mode		3936522	1					
ANR	3936539	CFGEntryNode	ENTRY		3936522		True				
ANR	3936540	CFGExitNode	EXIT		3936522		True				
ANR	3936541	Symbol	mode		3936522						
ANR	3936542	Symbol	R_AGRAPH_MODE_MAX		3936522						
ANR	3936543	Function	agraph_get_title	135:0:3074:3429							
ANR	3936544	FunctionDef	"agraph_get_title (const RAGraph * g , RANode * n , bool in)"		3936543	0					
ANR	3936545	CompoundStatement		135:74:3148:3429	3936543	0					
ANR	3936546	IfStatement	if ( n -> title && * n -> title )		3936543	0					
ANR	3936547	Condition	n -> title && * n -> title	136:5:3155:3175	3936543	0	True				
ANR	3936548	AndExpression	n -> title && * n -> title		3936543	0		&&			
ANR	3936549	PtrMemberAccess	n -> title		3936543	0					
ANR	3936550	Identifier	n		3936543	0					
ANR	3936551	Identifier	title		3936543	1					
ANR	3936552	UnaryOperationExpression	* n -> title		3936543	1					
ANR	3936553	UnaryOperator	*		3936543	0					
ANR	3936554	PtrMemberAccess	n -> title		3936543	1					
ANR	3936555	Identifier	n		3936543	0					
ANR	3936556	Identifier	title		3936543	1					
ANR	3936557	CompoundStatement		2:28:29:29	3936543	1					
ANR	3936558	ReturnStatement	return n -> gnode ;	137:2:3182:3197	3936543	0	True				
ANR	3936559	PtrMemberAccess	n -> gnode		3936543	0					
ANR	3936560	Identifier	n		3936543	0					
ANR	3936561	Identifier	gnode		3936543	1					
ANR	3936562	IdentifierDeclStatement	const RList * outnodes = in ? n -> gnode -> in_nodes : n -> gnode -> out_nodes ;	139:1:3203:3271	3936543	1	True				
ANR	3936563	IdentifierDecl	* outnodes = in ? n -> gnode -> in_nodes : n -> gnode -> out_nodes		3936543	0					
ANR	3936564	IdentifierDeclType	const RList *		3936543	0					
ANR	3936565	Identifier	outnodes		3936543	1					
ANR	3936566	AssignmentExpression	* outnodes = in ? n -> gnode -> in_nodes : n -> gnode -> out_nodes		3936543	2		=			
ANR	3936567	Identifier	outnodes		3936543	0					
ANR	3936568	ConditionalExpression	in ? n -> gnode -> in_nodes : n -> gnode -> out_nodes		3936543	1					
ANR	3936569	Condition	in		3936543	0					
ANR	3936570	Identifier	in		3936543	0					
ANR	3936571	PtrMemberAccess	n -> gnode -> in_nodes		3936543	1					
ANR	3936572	PtrMemberAccess	n -> gnode		3936543	0					
ANR	3936573	Identifier	n		3936543	0					
ANR	3936574	Identifier	gnode		3936543	1					
ANR	3936575	Identifier	in_nodes		3936543	1					
ANR	3936576	PtrMemberAccess	n -> gnode -> out_nodes		3936543	2					
ANR	3936577	PtrMemberAccess	n -> gnode		3936543	0					
ANR	3936578	Identifier	n		3936543	0					
ANR	3936579	Identifier	gnode		3936543	1					
ANR	3936580	Identifier	out_nodes		3936543	1					
ANR	3936581	IdentifierDeclStatement	RGraphNode * gn ;	140:1:3274:3288	3936543	2	True				
ANR	3936582	IdentifierDecl	* gn		3936543	0					
ANR	3936583	IdentifierDeclType	RGraphNode *		3936543	0					
ANR	3936584	Identifier	gn		3936543	1					
ANR	3936585	IdentifierDeclStatement	RListIter * iter ;	141:1:3291:3306	3936543	3	True				
ANR	3936586	IdentifierDecl	* iter		3936543	0					
ANR	3936587	IdentifierDeclType	RListIter *		3936543	0					
ANR	3936588	Identifier	iter		3936543	1					
ANR	3936589	Statement	r_list_foreach	143:1:3310:3323	3936543	4	True				
ANR	3936590	Statement	(	143:16:3325:3325	3936543	5	True				
ANR	3936591	Statement	outnodes	143:17:3326:3333	3936543	6	True				
ANR	3936592	Statement	","	143:25:3334:3334	3936543	7	True				
ANR	3936593	Statement	iter	143:27:3336:3339	3936543	8	True				
ANR	3936594	Statement	","	143:31:3340:3340	3936543	9	True				
ANR	3936595	Statement	gn	143:33:3342:3343	3936543	10	True				
ANR	3936596	Statement	)	143:35:3344:3344	3936543	11	True				
ANR	3936597	CompoundStatement		10:2:201:222	3936543	12					
ANR	3936598	IdentifierDeclStatement	RANode * an = gn -> data ;	144:2:3350:3371	3936543	0	True				
ANR	3936599	IdentifierDecl	* an = gn -> data		3936543	0					
ANR	3936600	IdentifierDeclType	RANode *		3936543	0					
ANR	3936601	Identifier	an		3936543	1					
ANR	3936602	AssignmentExpression	* an = gn -> data		3936543	2		=			
ANR	3936603	Identifier	an		3936543	0					
ANR	3936604	PtrMemberAccess	gn -> data		3936543	1					
ANR	3936605	Identifier	gn		3936543	0					
ANR	3936606	Identifier	data		3936543	1					
ANR	3936607	ReturnStatement	"return agraph_get_title ( g , an , in ) ;"	145:2:3375:3410	3936543	1	True				
ANR	3936608	CallExpression	"agraph_get_title ( g , an , in )"		3936543	0					
ANR	3936609	Callee	agraph_get_title		3936543	0					
ANR	3936610	Identifier	agraph_get_title		3936543	0					
ANR	3936611	ArgumentList	g		3936543	1					
ANR	3936612	Argument	g		3936543	0					
ANR	3936613	Identifier	g		3936543	0					
ANR	3936614	Argument	an		3936543	1					
ANR	3936615	Identifier	an		3936543	0					
ANR	3936616	Argument	in		3936543	2					
ANR	3936617	Identifier	in		3936543	0					
ANR	3936618	ReturnStatement	return NULL ;	147:1:3416:3427	3936543	13	True				
ANR	3936619	Identifier	NULL		3936543	0					
ANR	3936620	ReturnType	static RGraphNode *		3936543	1					
ANR	3936621	Identifier	agraph_get_title		3936543	2					
ANR	3936622	ParameterList	"const RAGraph * g , RANode * n , bool in"		3936543	3					
ANR	3936623	Parameter	const RAGraph * g	135:36:3110:3125	3936543	0	True				
ANR	3936624	ParameterType	const RAGraph *		3936543	0					
ANR	3936625	Identifier	g		3936543	1					
ANR	3936626	Parameter	RANode * n	135:54:3128:3136	3936543	1	True				
ANR	3936627	ParameterType	RANode *		3936543	0					
ANR	3936628	Identifier	n		3936543	1					
ANR	3936629	Parameter	bool in	135:65:3139:3145	3936543	2	True				
ANR	3936630	ParameterType	bool		3936543	0					
ANR	3936631	Identifier	in		3936543	1					
ANR	3936632	CFGEntryNode	ENTRY		3936543		True				
ANR	3936633	CFGExitNode	EXIT		3936543		True				
ANR	3936634	Symbol	n -> gnode		3936543						
ANR	3936635	Symbol	NULL		3936543						
ANR	3936636	Symbol	in		3936543						
ANR	3936637	Symbol	n -> gnode -> out_nodes		3936543						
ANR	3936638	Symbol	g		3936543						
ANR	3936639	Symbol	gn		3936543						
ANR	3936640	Symbol	agraph_get_title		3936543						
ANR	3936641	Symbol	iter		3936543						
ANR	3936642	Symbol	* n -> gnode		3936543						
ANR	3936643	Symbol	outnodes		3936543						
ANR	3936644	Symbol	an		3936543						
ANR	3936645	Symbol	n		3936543						
ANR	3936646	Symbol	* gn		3936543						
ANR	3936647	Symbol	* n -> title		3936543						
ANR	3936648	Symbol	gn -> data		3936543						
ANR	3936649	Symbol	* n		3936543						
ANR	3936650	Symbol	n -> title		3936543						
ANR	3936651	Symbol	n -> gnode -> in_nodes		3936543						
ANR	3936652	Symbol	* * n		3936543						
ANR	3936653	Function	mode2opts	150:0:3432:3653							
ANR	3936654	FunctionDef	mode2opts (const RAGraph * g)		3936653	0					
ANR	3936655	CompoundStatement		150:39:3471:3653	3936653	0					
ANR	3936656	IdentifierDeclStatement	int opts = 0 ;	151:1:3474:3486	3936653	0	True				
ANR	3936657	IdentifierDecl	opts = 0		3936653	0					
ANR	3936658	IdentifierDeclType	int		3936653	0					
ANR	3936659	Identifier	opts		3936653	1					
ANR	3936660	AssignmentExpression	opts = 0		3936653	2		=			
ANR	3936661	Identifier	opts		3936653	0					
ANR	3936662	PrimaryExpression	0		3936653	1					
ANR	3936663	IfStatement	if ( is_offset ( g ) )		3936653	1					
ANR	3936664	Condition	is_offset ( g )	152:5:3493:3505	3936653	0	True				
ANR	3936665	CallExpression	is_offset ( g )		3936653	0					
ANR	3936666	Callee	is_offset		3936653	0					
ANR	3936667	Identifier	is_offset		3936653	0					
ANR	3936668	ArgumentList	g		3936653	1					
ANR	3936669	Argument	g		3936653	0					
ANR	3936670	Identifier	g		3936653	0					
ANR	3936671	CompoundStatement		3:20:36:36	3936653	1					
ANR	3936672	ExpressionStatement	opts |= BODY_OFFSETS	153:2:3512:3532	3936653	0	True				
ANR	3936673	AssignmentExpression	opts |= BODY_OFFSETS		3936653	0		|=			
ANR	3936674	Identifier	opts		3936653	0					
ANR	3936675	Identifier	BODY_OFFSETS		3936653	1					
ANR	3936676	IfStatement	if ( is_comments ( g ) )		3936653	2					
ANR	3936677	Condition	is_comments ( g )	155:5:3542:3556	3936653	0	True				
ANR	3936678	CallExpression	is_comments ( g )		3936653	0					
ANR	3936679	Callee	is_comments		3936653	0					
ANR	3936680	Identifier	is_comments		3936653	0					
ANR	3936681	ArgumentList	g		3936653	1					
ANR	3936682	Argument	g		3936653	0					
ANR	3936683	Identifier	g		3936653	0					
ANR	3936684	CompoundStatement		6:22:87:87	3936653	1					
ANR	3936685	ExpressionStatement	opts |= BODY_COMMENTS	156:2:3563:3584	3936653	0	True				
ANR	3936686	AssignmentExpression	opts |= BODY_COMMENTS		3936653	0		|=			
ANR	3936687	Identifier	opts		3936653	0					
ANR	3936688	Identifier	BODY_COMMENTS		3936653	1					
ANR	3936689	IfStatement	if ( is_summary ( g ) )		3936653	3					
ANR	3936690	Condition	is_summary ( g )	158:5:3594:3607	3936653	0	True				
ANR	3936691	CallExpression	is_summary ( g )		3936653	0					
ANR	3936692	Callee	is_summary		3936653	0					
ANR	3936693	Identifier	is_summary		3936653	0					
ANR	3936694	ArgumentList	g		3936653	1					
ANR	3936695	Argument	g		3936653	0					
ANR	3936696	Identifier	g		3936653	0					
ANR	3936697	CompoundStatement		9:21:138:138	3936653	1					
ANR	3936698	ExpressionStatement	opts |= BODY_SUMMARY	159:2:3614:3634	3936653	0	True				
ANR	3936699	AssignmentExpression	opts |= BODY_SUMMARY		3936653	0		|=			
ANR	3936700	Identifier	opts		3936653	0					
ANR	3936701	Identifier	BODY_SUMMARY		3936653	1					
ANR	3936702	ReturnStatement	return opts ;	161:1:3640:3651	3936653	4	True				
ANR	3936703	Identifier	opts		3936653	0					
ANR	3936704	ReturnType	static int		3936653	1					
ANR	3936705	Identifier	mode2opts		3936653	2					
ANR	3936706	ParameterList	const RAGraph * g		3936653	3					
ANR	3936707	Parameter	const RAGraph * g	150:21:3453:3468	3936653	0	True				
ANR	3936708	ParameterType	const RAGraph *		3936653	0					
ANR	3936709	Identifier	g		3936653	1					
ANR	3936710	CFGEntryNode	ENTRY		3936653		True				
ANR	3936711	CFGExitNode	EXIT		3936653		True				
ANR	3936712	Symbol	is_comments		3936653						
ANR	3936713	Symbol	is_summary		3936653						
ANR	3936714	Symbol	opts		3936653						
ANR	3936715	Symbol	BODY_COMMENTS		3936653						
ANR	3936716	Symbol	g		3936653						
ANR	3936717	Symbol	BODY_SUMMARY		3936653						
ANR	3936718	Symbol	is_offset		3936653						
ANR	3936719	Symbol	BODY_OFFSETS		3936653						
ANR	3936720	Function	rotateAsmemu	165:0:3684:4065							
ANR	3936721	FunctionDef	rotateAsmemu (RCore * core)		3936720	0					
ANR	3936722	CompoundStatement		165:38:3722:4065	3936720	0					
ANR	3936723	IdentifierDeclStatement	"const bool isEmuStr = r_config_get_i ( core -> config , ""emu.str"" ) ;"	166:1:3725:3787	3936720	0	True				
ANR	3936724	IdentifierDecl	"isEmuStr = r_config_get_i ( core -> config , ""emu.str"" )"		3936720	0					
ANR	3936725	IdentifierDeclType	const bool		3936720	0					
ANR	3936726	Identifier	isEmuStr		3936720	1					
ANR	3936727	AssignmentExpression	"isEmuStr = r_config_get_i ( core -> config , ""emu.str"" )"		3936720	2		=			
ANR	3936728	Identifier	isEmuStr		3936720	0					
ANR	3936729	CallExpression	"r_config_get_i ( core -> config , ""emu.str"" )"		3936720	1					
ANR	3936730	Callee	r_config_get_i		3936720	0					
ANR	3936731	Identifier	r_config_get_i		3936720	0					
ANR	3936732	ArgumentList	core -> config		3936720	1					
ANR	3936733	Argument	core -> config		3936720	0					
ANR	3936734	PtrMemberAccess	core -> config		3936720	0					
ANR	3936735	Identifier	core		3936720	0					
ANR	3936736	Identifier	config		3936720	1					
ANR	3936737	Argument	"""emu.str"""		3936720	1					
ANR	3936738	PrimaryExpression	"""emu.str"""		3936720	0					
ANR	3936739	IdentifierDeclStatement	"const bool isEmu = r_config_get_i ( core -> config , ""asm.emu"" ) ;"	167:1:3790:3849	3936720	1	True				
ANR	3936740	IdentifierDecl	"isEmu = r_config_get_i ( core -> config , ""asm.emu"" )"		3936720	0					
ANR	3936741	IdentifierDeclType	const bool		3936720	0					
ANR	3936742	Identifier	isEmu		3936720	1					
ANR	3936743	AssignmentExpression	"isEmu = r_config_get_i ( core -> config , ""asm.emu"" )"		3936720	2		=			
ANR	3936744	Identifier	isEmu		3936720	0					
ANR	3936745	CallExpression	"r_config_get_i ( core -> config , ""asm.emu"" )"		3936720	1					
ANR	3936746	Callee	r_config_get_i		3936720	0					
ANR	3936747	Identifier	r_config_get_i		3936720	0					
ANR	3936748	ArgumentList	core -> config		3936720	1					
ANR	3936749	Argument	core -> config		3936720	0					
ANR	3936750	PtrMemberAccess	core -> config		3936720	0					
ANR	3936751	Identifier	core		3936720	0					
ANR	3936752	Identifier	config		3936720	1					
ANR	3936753	Argument	"""asm.emu"""		3936720	1					
ANR	3936754	PrimaryExpression	"""asm.emu"""		3936720	0					
ANR	3936755	IfStatement	if ( isEmu )		3936720	2					
ANR	3936756	Condition	isEmu	168:5:3856:3860	3936720	0	True				
ANR	3936757	Identifier	isEmu		3936720	0					
ANR	3936758	CompoundStatement		4:12:140:140	3936720	1					
ANR	3936759	IfStatement	if ( isEmuStr )		3936720	0					
ANR	3936760	Condition	isEmuStr	169:6:3871:3878	3936720	0	True				
ANR	3936761	Identifier	isEmuStr		3936720	0					
ANR	3936762	CompoundStatement		5:16:158:158	3936720	1					
ANR	3936763	ExpressionStatement	"r_config_set ( core -> config , ""emu.str"" , ""false"" )"	170:3:3886:3933	3936720	0	True				
ANR	3936764	CallExpression	"r_config_set ( core -> config , ""emu.str"" , ""false"" )"		3936720	0					
ANR	3936765	Callee	r_config_set		3936720	0					
ANR	3936766	Identifier	r_config_set		3936720	0					
ANR	3936767	ArgumentList	core -> config		3936720	1					
ANR	3936768	Argument	core -> config		3936720	0					
ANR	3936769	PtrMemberAccess	core -> config		3936720	0					
ANR	3936770	Identifier	core		3936720	0					
ANR	3936771	Identifier	config		3936720	1					
ANR	3936772	Argument	"""emu.str"""		3936720	1					
ANR	3936773	PrimaryExpression	"""emu.str"""		3936720	0					
ANR	3936774	Argument	"""false"""		3936720	2					
ANR	3936775	PrimaryExpression	"""false"""		3936720	0					
ANR	3936776	ElseStatement	else		3936720	0					
ANR	3936777	CompoundStatement		7:9:221:221	3936720	0					
ANR	3936778	ExpressionStatement	"r_config_set ( core -> config , ""asm.emu"" , ""false"" )"	172:3:3949:3996	3936720	0	True				
ANR	3936779	CallExpression	"r_config_set ( core -> config , ""asm.emu"" , ""false"" )"		3936720	0					
ANR	3936780	Callee	r_config_set		3936720	0					
ANR	3936781	Identifier	r_config_set		3936720	0					
ANR	3936782	ArgumentList	core -> config		3936720	1					
ANR	3936783	Argument	core -> config		3936720	0					
ANR	3936784	PtrMemberAccess	core -> config		3936720	0					
ANR	3936785	Identifier	core		3936720	0					
ANR	3936786	Identifier	config		3936720	1					
ANR	3936787	Argument	"""asm.emu"""		3936720	1					
ANR	3936788	PrimaryExpression	"""asm.emu"""		3936720	0					
ANR	3936789	Argument	"""false"""		3936720	2					
ANR	3936790	PrimaryExpression	"""false"""		3936720	0					
ANR	3936791	ElseStatement	else		3936720	0					
ANR	3936792	CompoundStatement		10:8:287:287	3936720	0					
ANR	3936793	ExpressionStatement	"r_config_set ( core -> config , ""emu.str"" , ""true"" )"	175:2:4014:4060	3936720	0	True				
ANR	3936794	CallExpression	"r_config_set ( core -> config , ""emu.str"" , ""true"" )"		3936720	0					
ANR	3936795	Callee	r_config_set		3936720	0					
ANR	3936796	Identifier	r_config_set		3936720	0					
ANR	3936797	ArgumentList	core -> config		3936720	1					
ANR	3936798	Argument	core -> config		3936720	0					
ANR	3936799	PtrMemberAccess	core -> config		3936720	0					
ANR	3936800	Identifier	core		3936720	0					
ANR	3936801	Identifier	config		3936720	1					
ANR	3936802	Argument	"""emu.str"""		3936720	1					
ANR	3936803	PrimaryExpression	"""emu.str"""		3936720	0					
ANR	3936804	Argument	"""true"""		3936720	2					
ANR	3936805	PrimaryExpression	"""true"""		3936720	0					
ANR	3936806	ReturnType	static void		3936720	1					
ANR	3936807	Identifier	rotateAsmemu		3936720	2					
ANR	3936808	ParameterList	RCore * core		3936720	3					
ANR	3936809	Parameter	RCore * core	165:25:3709:3719	3936720	0	True				
ANR	3936810	ParameterType	RCore *		3936720	0					
ANR	3936811	Identifier	core		3936720	1					
ANR	3936812	CFGEntryNode	ENTRY		3936720		True				
ANR	3936813	CFGExitNode	EXIT		3936720		True				
ANR	3936814	Symbol	core -> config		3936720						
ANR	3936815	Symbol	core		3936720						
ANR	3936816	Symbol	isEmuStr		3936720						
ANR	3936817	Symbol	r_config_get_i		3936720						
ANR	3936818	Symbol	* core		3936720						
ANR	3936819	Symbol	isEmu		3936720						
ANR	3936820	Function	showcursor	179:0:4068:4301							
ANR	3936821	FunctionDef	"showcursor (RCore * core , int x)"		3936820	0					
ANR	3936822	CompoundStatement		179:43:4111:4301	3936820	0					
ANR	3936823	IfStatement	if ( ! x )		3936820	0					
ANR	3936824	Condition	! x	180:5:4118:4119	3936820	0	True				
ANR	3936825	UnaryOperationExpression	! x		3936820	0					
ANR	3936826	UnaryOperator	!		3936820	0					
ANR	3936827	Identifier	x		3936820	1					
ANR	3936828	CompoundStatement		3:2:14:68	3936820	1					
ANR	3936829	IdentifierDeclStatement	"int wheel = r_config_get_i ( core -> config , ""scr.wheel"" ) ;"	181:2:4126:4180	3936820	0	True				
ANR	3936830	IdentifierDecl	"wheel = r_config_get_i ( core -> config , ""scr.wheel"" )"		3936820	0					
ANR	3936831	IdentifierDeclType	int		3936820	0					
ANR	3936832	Identifier	wheel		3936820	1					
ANR	3936833	AssignmentExpression	"wheel = r_config_get_i ( core -> config , ""scr.wheel"" )"		3936820	2		=			
ANR	3936834	Identifier	wheel		3936820	0					
ANR	3936835	CallExpression	"r_config_get_i ( core -> config , ""scr.wheel"" )"		3936820	1					
ANR	3936836	Callee	r_config_get_i		3936820	0					
ANR	3936837	Identifier	r_config_get_i		3936820	0					
ANR	3936838	ArgumentList	core -> config		3936820	1					
ANR	3936839	Argument	core -> config		3936820	0					
ANR	3936840	PtrMemberAccess	core -> config		3936820	0					
ANR	3936841	Identifier	core		3936820	0					
ANR	3936842	Identifier	config		3936820	1					
ANR	3936843	Argument	"""scr.wheel"""		3936820	1					
ANR	3936844	PrimaryExpression	"""scr.wheel"""		3936820	0					
ANR	3936845	IfStatement	if ( wheel )		3936820	1					
ANR	3936846	Condition	wheel	182:6:4188:4192	3936820	0	True				
ANR	3936847	Identifier	wheel		3936820	0					
ANR	3936848	CompoundStatement		4:13:83:83	3936820	1					
ANR	3936849	ExpressionStatement	r_cons_enable_mouse ( true )	183:3:4200:4226	3936820	0	True				
ANR	3936850	CallExpression	r_cons_enable_mouse ( true )		3936820	0					
ANR	3936851	Callee	r_cons_enable_mouse		3936820	0					
ANR	3936852	Identifier	r_cons_enable_mouse		3936820	0					
ANR	3936853	ArgumentList	true		3936820	1					
ANR	3936854	Argument	true		3936820	0					
ANR	3936855	Identifier	true		3936820	0					
ANR	3936856	ElseStatement	else		3936820	0					
ANR	3936857	CompoundStatement		7:8:128:128	3936820	0					
ANR	3936858	ExpressionStatement	r_cons_enable_mouse ( false )	186:2:4244:4271	3936820	0	True				
ANR	3936859	CallExpression	r_cons_enable_mouse ( false )		3936820	0					
ANR	3936860	Callee	r_cons_enable_mouse		3936820	0					
ANR	3936861	Identifier	r_cons_enable_mouse		3936820	0					
ANR	3936862	ArgumentList	false		3936820	1					
ANR	3936863	Argument	false		3936820	0					
ANR	3936864	Identifier	false		3936820	0					
ANR	3936865	ExpressionStatement	r_cons_show_cursor ( x )	188:1:4277:4299	3936820	1	True				
ANR	3936866	CallExpression	r_cons_show_cursor ( x )		3936820	0					
ANR	3936867	Callee	r_cons_show_cursor		3936820	0					
ANR	3936868	Identifier	r_cons_show_cursor		3936820	0					
ANR	3936869	ArgumentList	x		3936820	1					
ANR	3936870	Argument	x		3936820	0					
ANR	3936871	Identifier	x		3936820	0					
ANR	3936872	ReturnType	static void		3936820	1					
ANR	3936873	Identifier	showcursor		3936820	2					
ANR	3936874	ParameterList	"RCore * core , int x"		3936820	3					
ANR	3936875	Parameter	RCore * core	179:23:4091:4101	3936820	0	True				
ANR	3936876	ParameterType	RCore *		3936820	0					
ANR	3936877	Identifier	core		3936820	1					
ANR	3936878	Parameter	int x	179:36:4104:4108	3936820	1	True				
ANR	3936879	ParameterType	int		3936820	0					
ANR	3936880	Identifier	x		3936820	1					
ANR	3936881	CFGEntryNode	ENTRY		3936820		True				
ANR	3936882	CFGExitNode	EXIT		3936820		True				
ANR	3936883	Symbol	core -> config		3936820						
ANR	3936884	Symbol	core		3936820						
ANR	3936885	Symbol	wheel		3936820						
ANR	3936886	Symbol	r_config_get_i		3936820						
ANR	3936887	Symbol	x		3936820						
ANR	3936888	Symbol	* core		3936820						
ANR	3936889	Symbol	true		3936820						
ANR	3936890	Symbol	false		3936820						
ANR	3936891	Function	get_title	191:0:4304:4381							
ANR	3936892	FunctionDef	get_title (ut64 addr)		3936891	0					
ANR	3936893	CompoundStatement		191:34:4338:4381	3936891	0					
ANR	3936894	Statement	return	192:1:4341:4346	3936891	0	True				
ANR	3936895	Statement	r_str_newf	192:8:4348:4357	3936891	1	True				
ANR	3936896	Statement	(	192:19:4359:4359	3936891	2	True				
ANR	3936897	Statement	"""0x%"""	192:20:4360:4364	3936891	3	True				
ANR	3936898	Statement	PFMT64x	192:25:4365:4371	3936891	4	True				
ANR	3936899	Statement	","	192:32:4372:4372	3936891	5	True				
ANR	3936900	Statement	addr	192:34:4374:4377	3936891	6	True				
ANR	3936901	Statement	)	192:38:4378:4378	3936891	7	True				
ANR	3936902	ExpressionStatement		192:39:4379:4379	3936891	8	True				
ANR	3936903	ReturnType	static char *		3936891	1					
ANR	3936904	Identifier	get_title		3936891	2					
ANR	3936905	ParameterList	ut64 addr		3936891	3					
ANR	3936906	Parameter	ut64 addr	191:23:4327:4335	3936891	0	True				
ANR	3936907	ParameterType	ut64		3936891	0					
ANR	3936908	Identifier	addr		3936891	1					
ANR	3936909	CFGEntryNode	ENTRY		3936891		True				
ANR	3936910	CFGExitNode	EXIT		3936891		True				
ANR	3936911	Symbol	addr		3936891						
ANR	3936912	DeclStmt									
ANR	3936913	Decl							int	int ( struct agraph_refresh_data * grd )	agraph_refresh
ANR	3936914	Function	update_node_dimension	197:0:4445:5708							
ANR	3936915	FunctionDef	"update_node_dimension (const RGraph * g , int is_mini , int zoom , int edgemode , bool callgraph , int layout)"		3936914	0					
ANR	3936916	CompoundStatement		197:116:4561:5708	3936914	0					
ANR	3936917	IdentifierDeclStatement	const RList * nodes = r_graph_get_nodes ( g ) ;	198:1:4564:4606	3936914	0	True				
ANR	3936918	IdentifierDecl	* nodes = r_graph_get_nodes ( g )		3936914	0					
ANR	3936919	IdentifierDeclType	const RList *		3936914	0					
ANR	3936920	Identifier	nodes		3936914	1					
ANR	3936921	AssignmentExpression	* nodes = r_graph_get_nodes ( g )		3936914	2		=			
ANR	3936922	Identifier	nodes		3936914	0					
ANR	3936923	CallExpression	r_graph_get_nodes ( g )		3936914	1					
ANR	3936924	Callee	r_graph_get_nodes		3936914	0					
ANR	3936925	Identifier	r_graph_get_nodes		3936914	0					
ANR	3936926	ArgumentList	g		3936914	1					
ANR	3936927	Argument	g		3936914	0					
ANR	3936928	Identifier	g		3936914	0					
ANR	3936929	IdentifierDeclStatement	RGraphNode * gn ;	199:1:4609:4623	3936914	1	True				
ANR	3936930	IdentifierDecl	* gn		3936914	0					
ANR	3936931	IdentifierDeclType	RGraphNode *		3936914	0					
ANR	3936932	Identifier	gn		3936914	1					
ANR	3936933	IdentifierDeclStatement	RListIter * it ;	200:1:4626:4639	3936914	2	True				
ANR	3936934	IdentifierDecl	* it		3936914	0					
ANR	3936935	IdentifierDeclType	RListIter *		3936914	0					
ANR	3936936	Identifier	it		3936914	1					
ANR	3936937	IdentifierDeclStatement	RANode * n ;	201:1:4642:4651	3936914	3	True				
ANR	3936938	IdentifierDecl	* n		3936914	0					
ANR	3936939	IdentifierDeclType	RANode *		3936914	0					
ANR	3936940	Identifier	n		3936914	1					
ANR	3936941	Statement	graph_foreach_anode	202:1:4654:4672	3936914	4	True				
ANR	3936942	Statement	(	202:21:4674:4674	3936914	5	True				
ANR	3936943	Statement	nodes	202:22:4675:4679	3936914	6	True				
ANR	3936944	Statement	","	202:27:4680:4680	3936914	7	True				
ANR	3936945	Statement	it	202:29:4682:4683	3936914	8	True				
ANR	3936946	Statement	","	202:31:4684:4684	3936914	9	True				
ANR	3936947	Statement	gn	202:33:4686:4687	3936914	10	True				
ANR	3936948	Statement	","	202:35:4688:4688	3936914	11	True				
ANR	3936949	Statement	n	202:37:4690:4690	3936914	12	True				
ANR	3936950	Statement	)	202:38:4691:4691	3936914	13	True				
ANR	3936951	CompoundStatement		6:40:131:131	3936914	14					
ANR	3936952	IfStatement	if ( is_mini )		3936914	0					
ANR	3936953	Condition	is_mini	203:6:4701:4707	3936914	0	True				
ANR	3936954	Identifier	is_mini		3936914	0					
ANR	3936955	CompoundStatement		7:15:148:148	3936914	1					
ANR	3936956	ExpressionStatement	n -> h = 1	204:3:4715:4723	3936914	0	True				
ANR	3936957	AssignmentExpression	n -> h = 1		3936914	0		=			
ANR	3936958	PtrMemberAccess	n -> h		3936914	0					
ANR	3936959	Identifier	n		3936914	0					
ANR	3936960	Identifier	h		3936914	1					
ANR	3936961	PrimaryExpression	1		3936914	1					
ANR	3936962	ExpressionStatement	n -> w = MINIGRAPH_NODE_MIN_WIDTH	205:3:4728:4759	3936914	1	True				
ANR	3936963	AssignmentExpression	n -> w = MINIGRAPH_NODE_MIN_WIDTH		3936914	0		=			
ANR	3936964	PtrMemberAccess	n -> w		3936914	0					
ANR	3936965	Identifier	n		3936914	0					
ANR	3936966	Identifier	w		3936914	1					
ANR	3936967	Identifier	MINIGRAPH_NODE_MIN_WIDTH		3936914	1					
ANR	3936968	ElseStatement	else		3936914	0					
ANR	3936969	IfStatement	if ( n -> is_mini )		3936914	0					
ANR	3936970	Condition	n -> is_mini	206:13:4774:4783	3936914	0	True				
ANR	3936971	PtrMemberAccess	n -> is_mini		3936914	0					
ANR	3936972	Identifier	n		3936914	0					
ANR	3936973	Identifier	is_mini		3936914	1					
ANR	3936974	CompoundStatement		10:25:224:224	3936914	1					
ANR	3936975	ExpressionStatement	n -> h = 1	207:3:4791:4799	3936914	0	True				
ANR	3936976	AssignmentExpression	n -> h = 1		3936914	0		=			
ANR	3936977	PtrMemberAccess	n -> h		3936914	0					
ANR	3936978	Identifier	n		3936914	0					
ANR	3936979	Identifier	h		3936914	1					
ANR	3936980	PrimaryExpression	1		3936914	1					
ANR	3936981	ExpressionStatement	n -> w = MININODE_MIN_WIDTH	208:3:4804:4829	3936914	1	True				
ANR	3936982	AssignmentExpression	n -> w = MININODE_MIN_WIDTH		3936914	0		=			
ANR	3936983	PtrMemberAccess	n -> w		3936914	0					
ANR	3936984	Identifier	n		3936914	0					
ANR	3936985	Identifier	w		3936914	1					
ANR	3936986	Identifier	MININODE_MIN_WIDTH		3936914	1					
ANR	3936987	ElseStatement	else		3936914	0					
ANR	3936988	CompoundStatement		15:3:332:376	3936914	0					
ANR	3936989	ExpressionStatement	"n -> w = r_str_bounds ( n -> body , ( int * ) & n -> h )"	210:3:4845:4889	3936914	0	True				
ANR	3936990	AssignmentExpression	"n -> w = r_str_bounds ( n -> body , ( int * ) & n -> h )"		3936914	0		=			
ANR	3936991	PtrMemberAccess	n -> w		3936914	0					
ANR	3936992	Identifier	n		3936914	0					
ANR	3936993	Identifier	w		3936914	1					
ANR	3936994	CallExpression	"r_str_bounds ( n -> body , ( int * ) & n -> h )"		3936914	1					
ANR	3936995	Callee	r_str_bounds		3936914	0					
ANR	3936996	Identifier	r_str_bounds		3936914	0					
ANR	3936997	ArgumentList	n -> body		3936914	1					
ANR	3936998	Argument	n -> body		3936914	0					
ANR	3936999	PtrMemberAccess	n -> body		3936914	0					
ANR	3937000	Identifier	n		3936914	0					
ANR	3937001	Identifier	body		3936914	1					
ANR	3937002	Argument	( int * ) & n -> h		3936914	1					
ANR	3937003	CastExpression	( int * ) & n -> h		3936914	0					
ANR	3937004	CastTarget	int *		3936914	0					
ANR	3937005	UnaryOperationExpression	& n -> h		3936914	1					
ANR	3937006	UnaryOperator	&		3936914	0					
ANR	3937007	PtrMemberAccess	n -> h		3936914	1					
ANR	3937008	Identifier	n		3936914	0					
ANR	3937009	Identifier	h		3936914	1					
ANR	3937010	IdentifierDeclStatement	ut32 len = strlen ( n -> title ) + MARGIN_TEXT_X ;	211:3:4894:4938	3936914	1	True				
ANR	3937011	IdentifierDecl	len = strlen ( n -> title ) + MARGIN_TEXT_X		3936914	0					
ANR	3937012	IdentifierDeclType	ut32		3936914	0					
ANR	3937013	Identifier	len		3936914	1					
ANR	3937014	AssignmentExpression	len = strlen ( n -> title ) + MARGIN_TEXT_X		3936914	2		=			
ANR	3937015	Identifier	len		3936914	0					
ANR	3937016	AdditiveExpression	strlen ( n -> title ) + MARGIN_TEXT_X		3936914	1		+			
ANR	3937017	CallExpression	strlen ( n -> title )		3936914	0					
ANR	3937018	Callee	strlen		3936914	0					
ANR	3937019	Identifier	strlen		3936914	0					
ANR	3937020	ArgumentList	n -> title		3936914	1					
ANR	3937021	Argument	n -> title		3936914	0					
ANR	3937022	PtrMemberAccess	n -> title		3936914	0					
ANR	3937023	Identifier	n		3936914	0					
ANR	3937024	Identifier	title		3936914	1					
ANR	3937025	Identifier	MARGIN_TEXT_X		3936914	1					
ANR	3937026	IfStatement	if ( len > INT_MAX )		3936914	2					
ANR	3937027	Condition	len > INT_MAX	212:7:4947:4959	3936914	0	True				
ANR	3937028	RelationalExpression	len > INT_MAX		3936914	0		>			
ANR	3937029	Identifier	len		3936914	0					
ANR	3937030	Identifier	INT_MAX		3936914	1					
ANR	3937031	CompoundStatement		16:22:400:400	3936914	1					
ANR	3937032	ExpressionStatement	len = INT_MAX	213:4:4968:4981	3936914	0	True				
ANR	3937033	AssignmentExpression	len = INT_MAX		3936914	0		=			
ANR	3937034	Identifier	len		3936914	0					
ANR	3937035	Identifier	INT_MAX		3936914	1					
ANR	3937036	IfStatement	if ( len > n -> w )		3936914	3					
ANR	3937037	Condition	len > n -> w	215:7:4995:5004	3936914	0	True				
ANR	3937038	RelationalExpression	len > n -> w		3936914	0		>			
ANR	3937039	Identifier	len		3936914	0					
ANR	3937040	PtrMemberAccess	n -> w		3936914	1					
ANR	3937041	Identifier	n		3936914	0					
ANR	3937042	Identifier	w		3936914	1					
ANR	3937043	CompoundStatement		19:19:445:445	3936914	1					
ANR	3937044	ExpressionStatement	n -> w = len	216:4:5013:5023	3936914	0	True				
ANR	3937045	AssignmentExpression	n -> w = len		3936914	0		=			
ANR	3937046	PtrMemberAccess	n -> w		3936914	0					
ANR	3937047	Identifier	n		3936914	0					
ANR	3937048	Identifier	w		3936914	1					
ANR	3937049	Identifier	len		3936914	1					
ANR	3937050	ExpressionStatement	n -> w += BORDER_WIDTH	219:3:5078:5098	3936914	4	True				
ANR	3937051	AssignmentExpression	n -> w += BORDER_WIDTH		3936914	0		+=			
ANR	3937052	PtrMemberAccess	n -> w		3936914	0					
ANR	3937053	Identifier	n		3936914	0					
ANR	3937054	Identifier	w		3936914	1					
ANR	3937055	Identifier	BORDER_WIDTH		3936914	1					
ANR	3937056	ExpressionStatement	n -> h += BORDER_HEIGHT	220:3:5103:5124	3936914	5	True				
ANR	3937057	AssignmentExpression	n -> h += BORDER_HEIGHT		3936914	0		+=			
ANR	3937058	PtrMemberAccess	n -> h		3936914	0					
ANR	3937059	Identifier	n		3936914	0					
ANR	3937060	Identifier	h		3936914	1					
ANR	3937061	Identifier	BORDER_HEIGHT		3936914	1					
ANR	3937062	ExpressionStatement	"n -> w = R_MAX ( MIN_NODE_WIDTH , ( n -> w * zoom ) / 100 )"	222:3:5157:5207	3936914	6	True				
ANR	3937063	AssignmentExpression	"n -> w = R_MAX ( MIN_NODE_WIDTH , ( n -> w * zoom ) / 100 )"		3936914	0		=			
ANR	3937064	PtrMemberAccess	n -> w		3936914	0					
ANR	3937065	Identifier	n		3936914	0					
ANR	3937066	Identifier	w		3936914	1					
ANR	3937067	CallExpression	"R_MAX ( MIN_NODE_WIDTH , ( n -> w * zoom ) / 100 )"		3936914	1					
ANR	3937068	Callee	R_MAX		3936914	0					
ANR	3937069	Identifier	R_MAX		3936914	0					
ANR	3937070	ArgumentList	MIN_NODE_WIDTH		3936914	1					
ANR	3937071	Argument	MIN_NODE_WIDTH		3936914	0					
ANR	3937072	Identifier	MIN_NODE_WIDTH		3936914	0					
ANR	3937073	Argument	( n -> w * zoom ) / 100		3936914	1					
ANR	3937074	MultiplicativeExpression	( n -> w * zoom ) / 100		3936914	0		/			
ANR	3937075	MultiplicativeExpression	n -> w * zoom		3936914	0		*			
ANR	3937076	PtrMemberAccess	n -> w		3936914	0					
ANR	3937077	Identifier	n		3936914	0					
ANR	3937078	Identifier	w		3936914	1					
ANR	3937079	Identifier	zoom		3936914	1					
ANR	3937080	PrimaryExpression	100		3936914	1					
ANR	3937081	ExpressionStatement	"n -> h = R_MAX ( MIN_NODE_HEIGHT , ( n -> h * zoom ) / 100 )"	223:3:5212:5263	3936914	7	True				
ANR	3937082	AssignmentExpression	"n -> h = R_MAX ( MIN_NODE_HEIGHT , ( n -> h * zoom ) / 100 )"		3936914	0		=			
ANR	3937083	PtrMemberAccess	n -> h		3936914	0					
ANR	3937084	Identifier	n		3936914	0					
ANR	3937085	Identifier	h		3936914	1					
ANR	3937086	CallExpression	"R_MAX ( MIN_NODE_HEIGHT , ( n -> h * zoom ) / 100 )"		3936914	1					
ANR	3937087	Callee	R_MAX		3936914	0					
ANR	3937088	Identifier	R_MAX		3936914	0					
ANR	3937089	ArgumentList	MIN_NODE_HEIGHT		3936914	1					
ANR	3937090	Argument	MIN_NODE_HEIGHT		3936914	0					
ANR	3937091	Identifier	MIN_NODE_HEIGHT		3936914	0					
ANR	3937092	Argument	( n -> h * zoom ) / 100		3936914	1					
ANR	3937093	MultiplicativeExpression	( n -> h * zoom ) / 100		3936914	0		/			
ANR	3937094	MultiplicativeExpression	n -> h * zoom		3936914	0		*			
ANR	3937095	PtrMemberAccess	n -> h		3936914	0					
ANR	3937096	Identifier	n		3936914	0					
ANR	3937097	Identifier	h		3936914	1					
ANR	3937098	Identifier	zoom		3936914	1					
ANR	3937099	PrimaryExpression	100		3936914	1					
ANR	3937100	IfStatement	if ( edgemode == 2 && ! callgraph )		3936914	8					
ANR	3937101	Condition	edgemode == 2 && ! callgraph	225:7:5273:5299	3936914	0	True				
ANR	3937102	AndExpression	edgemode == 2 && ! callgraph		3936914	0		&&			
ANR	3937103	EqualityExpression	edgemode == 2		3936914	0		==			
ANR	3937104	Identifier	edgemode		3936914	0					
ANR	3937105	PrimaryExpression	2		3936914	1					
ANR	3937106	UnaryOperationExpression	! callgraph		3936914	1					
ANR	3937107	UnaryOperator	!		3936914	0					
ANR	3937108	Identifier	callgraph		3936914	1					
ANR	3937109	CompoundStatement		29:36:740:740	3936914	1					
ANR	3937110	IfStatement	if ( ! layout )		3936914	0					
ANR	3937111	Condition	! layout	226:8:5312:5318	3936914	0	True				
ANR	3937112	UnaryOperationExpression	! layout		3936914	0					
ANR	3937113	UnaryOperator	!		3936914	0					
ANR	3937114	Identifier	layout		3936914	1					
ANR	3937115	CompoundStatement		30:17:759:759	3936914	1					
ANR	3937116	ExpressionStatement	"n -> w = R_MAX ( n -> w , ( r_list_length ( n -> gnode -> out_nodes ) * 2 + 1 ) + R_EDGES_X_INC * 2 )"	227:5:5328:5414	3936914	0	True				
ANR	3937117	AssignmentExpression	"n -> w = R_MAX ( n -> w , ( r_list_length ( n -> gnode -> out_nodes ) * 2 + 1 ) + R_EDGES_X_INC * 2 )"		3936914	0		=			
ANR	3937118	PtrMemberAccess	n -> w		3936914	0					
ANR	3937119	Identifier	n		3936914	0					
ANR	3937120	Identifier	w		3936914	1					
ANR	3937121	CallExpression	"R_MAX ( n -> w , ( r_list_length ( n -> gnode -> out_nodes ) * 2 + 1 ) + R_EDGES_X_INC * 2 )"		3936914	1					
ANR	3937122	Callee	R_MAX		3936914	0					
ANR	3937123	Identifier	R_MAX		3936914	0					
ANR	3937124	ArgumentList	n -> w		3936914	1					
ANR	3937125	Argument	n -> w		3936914	0					
ANR	3937126	PtrMemberAccess	n -> w		3936914	0					
ANR	3937127	Identifier	n		3936914	0					
ANR	3937128	Identifier	w		3936914	1					
ANR	3937129	Argument	( r_list_length ( n -> gnode -> out_nodes ) * 2 + 1 ) + R_EDGES_X_INC * 2		3936914	1					
ANR	3937130	AdditiveExpression	( r_list_length ( n -> gnode -> out_nodes ) * 2 + 1 ) + R_EDGES_X_INC * 2		3936914	0		+			
ANR	3937131	AdditiveExpression	r_list_length ( n -> gnode -> out_nodes ) * 2 + 1		3936914	0		+			
ANR	3937132	MultiplicativeExpression	r_list_length ( n -> gnode -> out_nodes ) * 2		3936914	0		*			
ANR	3937133	CallExpression	r_list_length ( n -> gnode -> out_nodes )		3936914	0					
ANR	3937134	Callee	r_list_length		3936914	0					
ANR	3937135	Identifier	r_list_length		3936914	0					
ANR	3937136	ArgumentList	n -> gnode -> out_nodes		3936914	1					
ANR	3937137	Argument	n -> gnode -> out_nodes		3936914	0					
ANR	3937138	PtrMemberAccess	n -> gnode -> out_nodes		3936914	0					
ANR	3937139	PtrMemberAccess	n -> gnode		3936914	0					
ANR	3937140	Identifier	n		3936914	0					
ANR	3937141	Identifier	gnode		3936914	1					
ANR	3937142	Identifier	out_nodes		3936914	1					
ANR	3937143	PrimaryExpression	2		3936914	1					
ANR	3937144	PrimaryExpression	1		3936914	1					
ANR	3937145	MultiplicativeExpression	R_EDGES_X_INC * 2		3936914	1		*			
ANR	3937146	Identifier	R_EDGES_X_INC		3936914	0					
ANR	3937147	PrimaryExpression	2		3936914	1					
ANR	3937148	ExpressionStatement	"n -> w = R_MAX ( n -> w , ( r_list_length ( n -> gnode -> in_nodes ) * 2 + 1 ) + R_EDGES_X_INC * 2 )"	228:5:5421:5506	3936914	1	True				
ANR	3937149	AssignmentExpression	"n -> w = R_MAX ( n -> w , ( r_list_length ( n -> gnode -> in_nodes ) * 2 + 1 ) + R_EDGES_X_INC * 2 )"		3936914	0		=			
ANR	3937150	PtrMemberAccess	n -> w		3936914	0					
ANR	3937151	Identifier	n		3936914	0					
ANR	3937152	Identifier	w		3936914	1					
ANR	3937153	CallExpression	"R_MAX ( n -> w , ( r_list_length ( n -> gnode -> in_nodes ) * 2 + 1 ) + R_EDGES_X_INC * 2 )"		3936914	1					
ANR	3937154	Callee	R_MAX		3936914	0					
ANR	3937155	Identifier	R_MAX		3936914	0					
ANR	3937156	ArgumentList	n -> w		3936914	1					
ANR	3937157	Argument	n -> w		3936914	0					
ANR	3937158	PtrMemberAccess	n -> w		3936914	0					
ANR	3937159	Identifier	n		3936914	0					
ANR	3937160	Identifier	w		3936914	1					
ANR	3937161	Argument	( r_list_length ( n -> gnode -> in_nodes ) * 2 + 1 ) + R_EDGES_X_INC * 2		3936914	1					
ANR	3937162	AdditiveExpression	( r_list_length ( n -> gnode -> in_nodes ) * 2 + 1 ) + R_EDGES_X_INC * 2		3936914	0		+			
ANR	3937163	AdditiveExpression	r_list_length ( n -> gnode -> in_nodes ) * 2 + 1		3936914	0		+			
ANR	3937164	MultiplicativeExpression	r_list_length ( n -> gnode -> in_nodes ) * 2		3936914	0		*			
ANR	3937165	CallExpression	r_list_length ( n -> gnode -> in_nodes )		3936914	0					
ANR	3937166	Callee	r_list_length		3936914	0					
ANR	3937167	Identifier	r_list_length		3936914	0					
ANR	3937168	ArgumentList	n -> gnode -> in_nodes		3936914	1					
ANR	3937169	Argument	n -> gnode -> in_nodes		3936914	0					
ANR	3937170	PtrMemberAccess	n -> gnode -> in_nodes		3936914	0					
ANR	3937171	PtrMemberAccess	n -> gnode		3936914	0					
ANR	3937172	Identifier	n		3936914	0					
ANR	3937173	Identifier	gnode		3936914	1					
ANR	3937174	Identifier	in_nodes		3936914	1					
ANR	3937175	PrimaryExpression	2		3936914	1					
ANR	3937176	PrimaryExpression	1		3936914	1					
ANR	3937177	MultiplicativeExpression	R_EDGES_X_INC * 2		3936914	1		*			
ANR	3937178	Identifier	R_EDGES_X_INC		3936914	0					
ANR	3937179	PrimaryExpression	2		3936914	1					
ANR	3937180	ElseStatement	else		3936914	0					
ANR	3937181	CompoundStatement		33:11:957:957	3936914	0					
ANR	3937182	ExpressionStatement	"n -> h = R_MAX ( n -> h , ( r_list_length ( n -> gnode -> out_nodes ) + 1 ) + R_EDGES_X_INC )"	230:5:5526:5604	3936914	0	True				
ANR	3937183	AssignmentExpression	"n -> h = R_MAX ( n -> h , ( r_list_length ( n -> gnode -> out_nodes ) + 1 ) + R_EDGES_X_INC )"		3936914	0		=			
ANR	3937184	PtrMemberAccess	n -> h		3936914	0					
ANR	3937185	Identifier	n		3936914	0					
ANR	3937186	Identifier	h		3936914	1					
ANR	3937187	CallExpression	"R_MAX ( n -> h , ( r_list_length ( n -> gnode -> out_nodes ) + 1 ) + R_EDGES_X_INC )"		3936914	1					
ANR	3937188	Callee	R_MAX		3936914	0					
ANR	3937189	Identifier	R_MAX		3936914	0					
ANR	3937190	ArgumentList	n -> h		3936914	1					
ANR	3937191	Argument	n -> h		3936914	0					
ANR	3937192	PtrMemberAccess	n -> h		3936914	0					
ANR	3937193	Identifier	n		3936914	0					
ANR	3937194	Identifier	h		3936914	1					
ANR	3937195	Argument	( r_list_length ( n -> gnode -> out_nodes ) + 1 ) + R_EDGES_X_INC		3936914	1					
ANR	3937196	AdditiveExpression	( r_list_length ( n -> gnode -> out_nodes ) + 1 ) + R_EDGES_X_INC		3936914	0		+			
ANR	3937197	AdditiveExpression	r_list_length ( n -> gnode -> out_nodes ) + 1		3936914	0		+			
ANR	3937198	CallExpression	r_list_length ( n -> gnode -> out_nodes )		3936914	0					
ANR	3937199	Callee	r_list_length		3936914	0					
ANR	3937200	Identifier	r_list_length		3936914	0					
ANR	3937201	ArgumentList	n -> gnode -> out_nodes		3936914	1					
ANR	3937202	Argument	n -> gnode -> out_nodes		3936914	0					
ANR	3937203	PtrMemberAccess	n -> gnode -> out_nodes		3936914	0					
ANR	3937204	PtrMemberAccess	n -> gnode		3936914	0					
ANR	3937205	Identifier	n		3936914	0					
ANR	3937206	Identifier	gnode		3936914	1					
ANR	3937207	Identifier	out_nodes		3936914	1					
ANR	3937208	PrimaryExpression	1		3936914	1					
ANR	3937209	Identifier	R_EDGES_X_INC		3936914	1					
ANR	3937210	ExpressionStatement	"n -> h = R_MAX ( n -> h , ( r_list_length ( n -> gnode -> in_nodes ) + 1 ) + R_EDGES_X_INC )"	231:5:5611:5688	3936914	1	True				
ANR	3937211	AssignmentExpression	"n -> h = R_MAX ( n -> h , ( r_list_length ( n -> gnode -> in_nodes ) + 1 ) + R_EDGES_X_INC )"		3936914	0		=			
ANR	3937212	PtrMemberAccess	n -> h		3936914	0					
ANR	3937213	Identifier	n		3936914	0					
ANR	3937214	Identifier	h		3936914	1					
ANR	3937215	CallExpression	"R_MAX ( n -> h , ( r_list_length ( n -> gnode -> in_nodes ) + 1 ) + R_EDGES_X_INC )"		3936914	1					
ANR	3937216	Callee	R_MAX		3936914	0					
ANR	3937217	Identifier	R_MAX		3936914	0					
ANR	3937218	ArgumentList	n -> h		3936914	1					
ANR	3937219	Argument	n -> h		3936914	0					
ANR	3937220	PtrMemberAccess	n -> h		3936914	0					
ANR	3937221	Identifier	n		3936914	0					
ANR	3937222	Identifier	h		3936914	1					
ANR	3937223	Argument	( r_list_length ( n -> gnode -> in_nodes ) + 1 ) + R_EDGES_X_INC		3936914	1					
ANR	3937224	AdditiveExpression	( r_list_length ( n -> gnode -> in_nodes ) + 1 ) + R_EDGES_X_INC		3936914	0		+			
ANR	3937225	AdditiveExpression	r_list_length ( n -> gnode -> in_nodes ) + 1		3936914	0		+			
ANR	3937226	CallExpression	r_list_length ( n -> gnode -> in_nodes )		3936914	0					
ANR	3937227	Callee	r_list_length		3936914	0					
ANR	3937228	Identifier	r_list_length		3936914	0					
ANR	3937229	ArgumentList	n -> gnode -> in_nodes		3936914	1					
ANR	3937230	Argument	n -> gnode -> in_nodes		3936914	0					
ANR	3937231	PtrMemberAccess	n -> gnode -> in_nodes		3936914	0					
ANR	3937232	PtrMemberAccess	n -> gnode		3936914	0					
ANR	3937233	Identifier	n		3936914	0					
ANR	3937234	Identifier	gnode		3936914	1					
ANR	3937235	Identifier	in_nodes		3936914	1					
ANR	3937236	PrimaryExpression	1		3936914	1					
ANR	3937237	Identifier	R_EDGES_X_INC		3936914	1					
ANR	3937238	ReturnType	static void		3936914	1					
ANR	3937239	Identifier	update_node_dimension		3936914	2					
ANR	3937240	ParameterList	"const RGraph * g , int is_mini , int zoom , int edgemode , bool callgraph , int layout"		3936914	3					
ANR	3937241	Parameter	const RGraph * g	197:34:4479:4493	3936914	0	True				
ANR	3937242	ParameterType	const RGraph *		3936914	0					
ANR	3937243	Identifier	g		3936914	1					
ANR	3937244	Parameter	int is_mini	197:51:4496:4506	3936914	1	True				
ANR	3937245	ParameterType	int		3936914	0					
ANR	3937246	Identifier	is_mini		3936914	1					
ANR	3937247	Parameter	int zoom	197:64:4509:4516	3936914	2	True				
ANR	3937248	ParameterType	int		3936914	0					
ANR	3937249	Identifier	zoom		3936914	1					
ANR	3937250	Parameter	int edgemode	197:74:4519:4530	3936914	3	True				
ANR	3937251	ParameterType	int		3936914	0					
ANR	3937252	Identifier	edgemode		3936914	1					
ANR	3937253	Parameter	bool callgraph	197:88:4533:4546	3936914	4	True				
ANR	3937254	ParameterType	bool		3936914	0					
ANR	3937255	Identifier	callgraph		3936914	1					
ANR	3937256	Parameter	int layout	197:104:4549:4558	3936914	5	True				
ANR	3937257	ParameterType	int		3936914	0					
ANR	3937258	Identifier	layout		3936914	1					
ANR	3937259	CFGEntryNode	ENTRY		3936914		True				
ANR	3937260	CFGExitNode	EXIT		3936914		True				
ANR	3937261	Symbol	n -> gnode		3936914						
ANR	3937262	Symbol	n -> gnode -> out_nodes		3936914						
ANR	3937263	Symbol	MARGIN_TEXT_X		3936914						
ANR	3937264	Symbol	* n -> gnode		3936914						
ANR	3937265	Symbol	r_str_bounds		3936914						
ANR	3937266	Symbol	strlen		3936914						
ANR	3937267	Symbol	len		3936914						
ANR	3937268	Symbol	is_mini		3936914						
ANR	3937269	Symbol	MININODE_MIN_WIDTH		3936914						
ANR	3937270	Symbol	INT_MAX		3936914						
ANR	3937271	Symbol	n -> gnode -> in_nodes		3936914						
ANR	3937272	Symbol	R_EDGES_X_INC		3936914						
ANR	3937273	Symbol	* * n		3936914						
ANR	3937274	Symbol	BORDER_WIDTH		3936914						
ANR	3937275	Symbol	MIN_NODE_WIDTH		3936914						
ANR	3937276	Symbol	r_graph_get_nodes		3936914						
ANR	3937277	Symbol	& n -> h		3936914						
ANR	3937278	Symbol	callgraph		3936914						
ANR	3937279	Symbol	n -> h		3936914						
ANR	3937280	Symbol	g		3936914						
ANR	3937281	Symbol	gn		3936914						
ANR	3937282	Symbol	n -> is_mini		3936914						
ANR	3937283	Symbol	zoom		3936914						
ANR	3937284	Symbol	edgemode		3936914						
ANR	3937285	Symbol	it		3936914						
ANR	3937286	Symbol	n		3936914						
ANR	3937287	Symbol	layout		3936914						
ANR	3937288	Symbol	BORDER_HEIGHT		3936914						
ANR	3937289	Symbol	nodes		3936914						
ANR	3937290	Symbol	MINIGRAPH_NODE_MIN_WIDTH		3936914						
ANR	3937291	Symbol	n -> w		3936914						
ANR	3937292	Symbol	* n		3936914						
ANR	3937293	Symbol	R_MAX		3936914						
ANR	3937294	Symbol	n -> title		3936914						
ANR	3937295	Symbol	n -> body		3936914						
ANR	3937296	Symbol	r_list_length		3936914						
ANR	3937297	Symbol	MIN_NODE_HEIGHT		3936914						
ANR	3937298	Function	append_shortcut	238:0:5711:6136							
ANR	3937299	FunctionDef	"append_shortcut (const RAGraph * g , char * title , char * nodetitle , int left)"		3937298	0					
ANR	3937300	CompoundStatement		238:87:5798:6136	3937298	0					
ANR	3937301	IdentifierDeclStatement	"char * shortcut = sdb_get ( g -> db , sdb_fmt ( ""agraph.nodes.%s.shortcut"" , nodetitle ) , 0 ) ;"	239:1:5801:5885	3937298	0	True				
ANR	3937302	IdentifierDecl	"* shortcut = sdb_get ( g -> db , sdb_fmt ( ""agraph.nodes.%s.shortcut"" , nodetitle ) , 0 )"		3937298	0					
ANR	3937303	IdentifierDeclType	char *		3937298	0					
ANR	3937304	Identifier	shortcut		3937298	1					
ANR	3937305	AssignmentExpression	"* shortcut = sdb_get ( g -> db , sdb_fmt ( ""agraph.nodes.%s.shortcut"" , nodetitle ) , 0 )"		3937298	2		=			
ANR	3937306	Identifier	shortcut		3937298	0					
ANR	3937307	CallExpression	"sdb_get ( g -> db , sdb_fmt ( ""agraph.nodes.%s.shortcut"" , nodetitle ) , 0 )"		3937298	1					
ANR	3937308	Callee	sdb_get		3937298	0					
ANR	3937309	Identifier	sdb_get		3937298	0					
ANR	3937310	ArgumentList	g -> db		3937298	1					
ANR	3937311	Argument	g -> db		3937298	0					
ANR	3937312	PtrMemberAccess	g -> db		3937298	0					
ANR	3937313	Identifier	g		3937298	0					
ANR	3937314	Identifier	db		3937298	1					
ANR	3937315	Argument	"sdb_fmt ( ""agraph.nodes.%s.shortcut"" , nodetitle )"		3937298	1					
ANR	3937316	CallExpression	"sdb_fmt ( ""agraph.nodes.%s.shortcut"" , nodetitle )"		3937298	0					
ANR	3937317	Callee	sdb_fmt		3937298	0					
ANR	3937318	Identifier	sdb_fmt		3937298	0					
ANR	3937319	ArgumentList	"""agraph.nodes.%s.shortcut"""		3937298	1					
ANR	3937320	Argument	"""agraph.nodes.%s.shortcut"""		3937298	0					
ANR	3937321	PrimaryExpression	"""agraph.nodes.%s.shortcut"""		3937298	0					
ANR	3937322	Argument	nodetitle		3937298	1					
ANR	3937323	Identifier	nodetitle		3937298	0					
ANR	3937324	Argument	0		3937298	2					
ANR	3937325	PrimaryExpression	0		3937298	0					
ANR	3937326	IfStatement	if ( shortcut )		3937298	1					
ANR	3937327	Condition	shortcut	240:5:5892:5899	3937298	0	True				
ANR	3937328	Identifier	shortcut		3937298	0					
ANR	3937329	CompoundStatement		3:15:103:103	3937298	1					
ANR	3937330	IfStatement	if ( g -> can -> color )		3937298	0					
ANR	3937331	Condition	g -> can -> color	241:6:5910:5922	3937298	0	True				
ANR	3937332	PtrMemberAccess	g -> can -> color		3937298	0					
ANR	3937333	PtrMemberAccess	g -> can		3937298	0					
ANR	3937334	Identifier	g		3937298	0					
ANR	3937335	Identifier	can		3937298	1					
ANR	3937336	Identifier	color		3937298	1					
ANR	3937337	CompoundStatement		4:21:126:126	3937298	1					
ANR	3937338	Statement	strncat	243:3:5968:5974	3937298	0	True				
ANR	3937339	Statement	(	243:11:5976:5976	3937298	1	True				
ANR	3937340	Statement	title	243:12:5977:5981	3937298	2	True				
ANR	3937341	Statement	","	243:17:5982:5982	3937298	3	True				
ANR	3937342	Statement	sdb_fmt	243:19:5984:5990	3937298	4	True				
ANR	3937343	Statement	(	243:27:5992:5992	3937298	5	True				
ANR	3937344	Statement	Color_YELLOW	243:28:5993:6004	3937298	6	True				
ANR	3937345	Statement	"""[o%s]"""	243:40:6005:6011	3937298	7	True				
ANR	3937346	Statement	Color_RESET	243:47:6012:6022	3937298	8	True				
ANR	3937347	Statement	","	243:58:6023:6023	3937298	9	True				
ANR	3937348	Statement	shortcut	243:61:6026:6033	3937298	10	True				
ANR	3937349	Statement	)	243:69:6034:6034	3937298	11	True				
ANR	3937350	Statement	","	243:70:6035:6035	3937298	12	True				
ANR	3937351	Statement	left	243:72:6037:6040	3937298	13	True				
ANR	3937352	Statement	)	243:76:6041:6041	3937298	14	True				
ANR	3937353	ExpressionStatement		243:77:6042:6042	3937298	15	True				
ANR	3937354	ElseStatement	else		3937298	0					
ANR	3937355	CompoundStatement		7:9:254:254	3937298	0					
ANR	3937356	ExpressionStatement	"strncat ( title , sdb_fmt ( ""[o%s]"" , shortcut ) , left )"	245:3:6058:6108	3937298	0	True				
ANR	3937357	CallExpression	"strncat ( title , sdb_fmt ( ""[o%s]"" , shortcut ) , left )"		3937298	0					
ANR	3937358	Callee	strncat		3937298	0					
ANR	3937359	Identifier	strncat		3937298	0					
ANR	3937360	ArgumentList	title		3937298	1					
ANR	3937361	Argument	title		3937298	0					
ANR	3937362	Identifier	title		3937298	0					
ANR	3937363	Argument	"sdb_fmt ( ""[o%s]"" , shortcut )"		3937298	1					
ANR	3937364	CallExpression	"sdb_fmt ( ""[o%s]"" , shortcut )"		3937298	0					
ANR	3937365	Callee	sdb_fmt		3937298	0					
ANR	3937366	Identifier	sdb_fmt		3937298	0					
ANR	3937367	ArgumentList	"""[o%s]"""		3937298	1					
ANR	3937368	Argument	"""[o%s]"""		3937298	0					
ANR	3937369	PrimaryExpression	"""[o%s]"""		3937298	0					
ANR	3937370	Argument	shortcut		3937298	1					
ANR	3937371	Identifier	shortcut		3937298	0					
ANR	3937372	Argument	left		3937298	2					
ANR	3937373	Identifier	left		3937298	0					
ANR	3937374	ExpressionStatement	free ( shortcut )	247:2:6116:6131	3937298	1	True				
ANR	3937375	CallExpression	free ( shortcut )		3937298	0					
ANR	3937376	Callee	free		3937298	0					
ANR	3937377	Identifier	free		3937298	0					
ANR	3937378	ArgumentList	shortcut		3937298	1					
ANR	3937379	Argument	shortcut		3937298	0					
ANR	3937380	Identifier	shortcut		3937298	0					
ANR	3937381	ReturnType	static void		3937298	1					
ANR	3937382	Identifier	append_shortcut		3937298	2					
ANR	3937383	ParameterList	"const RAGraph * g , char * title , char * nodetitle , int left"		3937298	3					
ANR	3937384	Parameter	const RAGraph * g	238:29:5740:5755	3937298	0	True				
ANR	3937385	ParameterType	const RAGraph *		3937298	0					
ANR	3937386	Identifier	g		3937298	1					
ANR	3937387	Parameter	char * title	238:47:5758:5768	3937298	1	True				
ANR	3937388	ParameterType	char *		3937298	0					
ANR	3937389	Identifier	title		3937298	1					
ANR	3937390	Parameter	char * nodetitle	238:60:5771:5785	3937298	2	True				
ANR	3937391	ParameterType	char *		3937298	0					
ANR	3937392	Identifier	nodetitle		3937298	1					
ANR	3937393	Parameter	int left	238:77:5788:5795	3937298	3	True				
ANR	3937394	ParameterType	int		3937298	0					
ANR	3937395	Identifier	left		3937298	1					
ANR	3937396	CFGEntryNode	ENTRY		3937298		True				
ANR	3937397	CFGExitNode	EXIT		3937298		True				
ANR	3937398	Symbol	* * g		3937298						
ANR	3937399	Symbol	g		3937298						
ANR	3937400	Symbol	g -> db		3937298						
ANR	3937401	Symbol	sdb_get		3937298						
ANR	3937402	Symbol	title		3937298						
ANR	3937403	Symbol	* g -> can		3937298						
ANR	3937404	Symbol	nodetitle		3937298						
ANR	3937405	Symbol	* g		3937298						
ANR	3937406	Symbol	shortcut		3937298						
ANR	3937407	Symbol	g -> can -> color		3937298						
ANR	3937408	Symbol	left		3937298						
ANR	3937409	Symbol	sdb_fmt		3937298						
ANR	3937410	Symbol	g -> can		3937298						
ANR	3937411	Function	mini_RANode_print	251:0:6139:7603							
ANR	3937412	FunctionDef	"mini_RANode_print (const RAGraph * g , const RANode * n , int cur , bool details)"		3937411	0					
ANR	3937413	CompoundStatement		251:88:6227:7603	3937411	0					
ANR	3937414	IdentifierDeclStatement	char title [ TITLE_LEN ] ;	252:1:6230:6251	3937411	0	True				
ANR	3937415	IdentifierDecl	title [ TITLE_LEN ]		3937411	0					
ANR	3937416	IdentifierDeclType	char [ TITLE_LEN ]		3937411	0					
ANR	3937417	Identifier	title		3937411	1					
ANR	3937418	Identifier	TITLE_LEN		3937411	2					
ANR	3937419	IdentifierDeclStatement	"int x , delta_x = 0 ;"	253:1:6254:6272	3937411	1	True				
ANR	3937420	IdentifierDecl	x		3937411	0					
ANR	3937421	IdentifierDeclType	int		3937411	0					
ANR	3937422	Identifier	x		3937411	1					
ANR	3937423	IdentifierDecl	delta_x = 0		3937411	1					
ANR	3937424	IdentifierDeclType	int		3937411	0					
ANR	3937425	Identifier	delta_x		3937411	1					
ANR	3937426	AssignmentExpression	delta_x = 0		3937411	2		=			
ANR	3937427	Identifier	delta_x		3937411	0					
ANR	3937428	PrimaryExpression	0		3937411	1					
ANR	3937429	IfStatement	"if ( ! G ( n -> x + MINIGRAPH_NODE_CENTER_X , n -> y ) && ! G ( n -> x + MINIGRAPH_NODE_CENTER_X + n -> w , n -> y ) )"		3937411	2					
ANR	3937430	Condition	"! G ( n -> x + MINIGRAPH_NODE_CENTER_X , n -> y ) && ! G ( n -> x + MINIGRAPH_NODE_CENTER_X + n -> w , n -> y )"	255:5:6280:6377	3937411	0	True				
ANR	3937431	AndExpression	"! G ( n -> x + MINIGRAPH_NODE_CENTER_X , n -> y ) && ! G ( n -> x + MINIGRAPH_NODE_CENTER_X + n -> w , n -> y )"		3937411	0		&&			
ANR	3937432	UnaryOperationExpression	"! G ( n -> x + MINIGRAPH_NODE_CENTER_X , n -> y )"		3937411	0					
ANR	3937433	UnaryOperator	!		3937411	0					
ANR	3937434	CallExpression	"G ( n -> x + MINIGRAPH_NODE_CENTER_X , n -> y )"		3937411	1					
ANR	3937435	Callee	G		3937411	0					
ANR	3937436	Identifier	G		3937411	0					
ANR	3937437	ArgumentList	n -> x + MINIGRAPH_NODE_CENTER_X		3937411	1					
ANR	3937438	Argument	n -> x + MINIGRAPH_NODE_CENTER_X		3937411	0					
ANR	3937439	AdditiveExpression	n -> x + MINIGRAPH_NODE_CENTER_X		3937411	0		+			
ANR	3937440	PtrMemberAccess	n -> x		3937411	0					
ANR	3937441	Identifier	n		3937411	0					
ANR	3937442	Identifier	x		3937411	1					
ANR	3937443	Identifier	MINIGRAPH_NODE_CENTER_X		3937411	1					
ANR	3937444	Argument	n -> y		3937411	1					
ANR	3937445	PtrMemberAccess	n -> y		3937411	0					
ANR	3937446	Identifier	n		3937411	0					
ANR	3937447	Identifier	y		3937411	1					
ANR	3937448	UnaryOperationExpression	"! G ( n -> x + MINIGRAPH_NODE_CENTER_X + n -> w , n -> y )"		3937411	1					
ANR	3937449	UnaryOperator	!		3937411	0					
ANR	3937450	CallExpression	"G ( n -> x + MINIGRAPH_NODE_CENTER_X + n -> w , n -> y )"		3937411	1					
ANR	3937451	Callee	G		3937411	0					
ANR	3937452	Identifier	G		3937411	0					
ANR	3937453	ArgumentList	n -> x + MINIGRAPH_NODE_CENTER_X + n -> w		3937411	1					
ANR	3937454	Argument	n -> x + MINIGRAPH_NODE_CENTER_X + n -> w		3937411	0					
ANR	3937455	AdditiveExpression	n -> x + MINIGRAPH_NODE_CENTER_X + n -> w		3937411	0		+			
ANR	3937456	PtrMemberAccess	n -> x		3937411	0					
ANR	3937457	Identifier	n		3937411	0					
ANR	3937458	Identifier	x		3937411	1					
ANR	3937459	AdditiveExpression	MINIGRAPH_NODE_CENTER_X + n -> w		3937411	1		+			
ANR	3937460	Identifier	MINIGRAPH_NODE_CENTER_X		3937411	0					
ANR	3937461	PtrMemberAccess	n -> w		3937411	1					
ANR	3937462	Identifier	n		3937411	0					
ANR	3937463	Identifier	w		3937411	1					
ANR	3937464	Argument	n -> y		3937411	1					
ANR	3937465	PtrMemberAccess	n -> y		3937411	0					
ANR	3937466	Identifier	n		3937411	0					
ANR	3937467	Identifier	y		3937411	1					
ANR	3937468	CompoundStatement		6:55:152:152	3937411	1					
ANR	3937469	ReturnStatement	return ;	257:2:6384:6390	3937411	0	True				
ANR	3937470	ExpressionStatement	x = n -> x + MINIGRAPH_NODE_CENTER_X + g -> can -> sx	260:1:6397:6444	3937411	3	True				
ANR	3937471	AssignmentExpression	x = n -> x + MINIGRAPH_NODE_CENTER_X + g -> can -> sx		3937411	0		=			
ANR	3937472	Identifier	x		3937411	0					
ANR	3937473	AdditiveExpression	n -> x + MINIGRAPH_NODE_CENTER_X + g -> can -> sx		3937411	1		+			
ANR	3937474	PtrMemberAccess	n -> x		3937411	0					
ANR	3937475	Identifier	n		3937411	0					
ANR	3937476	Identifier	x		3937411	1					
ANR	3937477	AdditiveExpression	MINIGRAPH_NODE_CENTER_X + g -> can -> sx		3937411	1		+			
ANR	3937478	Identifier	MINIGRAPH_NODE_CENTER_X		3937411	0					
ANR	3937479	PtrMemberAccess	g -> can -> sx		3937411	1					
ANR	3937480	PtrMemberAccess	g -> can		3937411	0					
ANR	3937481	Identifier	g		3937411	0					
ANR	3937482	Identifier	can		3937411	1					
ANR	3937483	Identifier	sx		3937411	1					
ANR	3937484	IfStatement	if ( x < 0 )		3937411	4					
ANR	3937485	Condition	x < 0	261:5:6451:6455	3937411	0	True				
ANR	3937486	RelationalExpression	x < 0		3937411	0		<			
ANR	3937487	Identifier	x		3937411	0					
ANR	3937488	PrimaryExpression	0		3937411	1					
ANR	3937489	CompoundStatement		11:12:230:230	3937411	1					
ANR	3937490	ExpressionStatement	delta_x = - x	262:2:6462:6474	3937411	0	True				
ANR	3937491	AssignmentExpression	delta_x = - x		3937411	0		=			
ANR	3937492	Identifier	delta_x		3937411	0					
ANR	3937493	UnaryOperationExpression	- x		3937411	1					
ANR	3937494	UnaryOperator	-		3937411	0					
ANR	3937495	Identifier	x		3937411	1					
ANR	3937496	IfStatement	"if ( ! G ( n -> x + MINIGRAPH_NODE_CENTER_X + delta_x , n -> y ) )"		3937411	5					
ANR	3937497	Condition	"! G ( n -> x + MINIGRAPH_NODE_CENTER_X + delta_x , n -> y )"	264:5:6484:6534	3937411	0	True				
ANR	3937498	UnaryOperationExpression	"! G ( n -> x + MINIGRAPH_NODE_CENTER_X + delta_x , n -> y )"		3937411	0					
ANR	3937499	UnaryOperator	!		3937411	0					
ANR	3937500	CallExpression	"G ( n -> x + MINIGRAPH_NODE_CENTER_X + delta_x , n -> y )"		3937411	1					
ANR	3937501	Callee	G		3937411	0					
ANR	3937502	Identifier	G		3937411	0					
ANR	3937503	ArgumentList	n -> x + MINIGRAPH_NODE_CENTER_X + delta_x		3937411	1					
ANR	3937504	Argument	n -> x + MINIGRAPH_NODE_CENTER_X + delta_x		3937411	0					
ANR	3937505	AdditiveExpression	n -> x + MINIGRAPH_NODE_CENTER_X + delta_x		3937411	0		+			
ANR	3937506	PtrMemberAccess	n -> x		3937411	0					
ANR	3937507	Identifier	n		3937411	0					
ANR	3937508	Identifier	x		3937411	1					
ANR	3937509	AdditiveExpression	MINIGRAPH_NODE_CENTER_X + delta_x		3937411	1		+			
ANR	3937510	Identifier	MINIGRAPH_NODE_CENTER_X		3937411	0					
ANR	3937511	Identifier	delta_x		3937411	1					
ANR	3937512	Argument	n -> y		3937411	1					
ANR	3937513	PtrMemberAccess	n -> y		3937411	0					
ANR	3937514	Identifier	n		3937411	0					
ANR	3937515	Identifier	y		3937411	1					
ANR	3937516	CompoundStatement		14:58:309:309	3937411	1					
ANR	3937517	ReturnStatement	return ;	265:2:6541:6547	3937411	0	True				
ANR	3937518	IfStatement	if ( details )		3937411	6					
ANR	3937519	Condition	details	268:5:6558:6564	3937411	0	True				
ANR	3937520	Identifier	details		3937411	0					
ANR	3937521	CompoundStatement		18:14:339:339	3937411	1					
ANR	3937522	IfStatement	if ( cur )		3937411	0					
ANR	3937523	Condition	cur	269:6:6575:6577	3937411	0	True				
ANR	3937524	Identifier	cur		3937411	0					
ANR	3937525	CompoundStatement		19:11:352:352	3937411	1					
ANR	3937526	ExpressionStatement	W ( & MINIGRAPH_NODE_TEXT_CUR [ delta_x ] )	270:3:6585:6622	3937411	0	True				
ANR	3937527	CallExpression	W ( & MINIGRAPH_NODE_TEXT_CUR [ delta_x ] )		3937411	0					
ANR	3937528	Callee	W		3937411	0					
ANR	3937529	Identifier	W		3937411	0					
ANR	3937530	ArgumentList	& MINIGRAPH_NODE_TEXT_CUR [ delta_x ]		3937411	1					
ANR	3937531	Argument	& MINIGRAPH_NODE_TEXT_CUR [ delta_x ]		3937411	0					
ANR	3937532	UnaryOperationExpression	& MINIGRAPH_NODE_TEXT_CUR [ delta_x ]		3937411	0					
ANR	3937533	UnaryOperator	&		3937411	0					
ANR	3937534	ArrayIndexing	MINIGRAPH_NODE_TEXT_CUR [ delta_x ]		3937411	1					
ANR	3937535	Identifier	MINIGRAPH_NODE_TEXT_CUR		3937411	0					
ANR	3937536	Identifier	delta_x		3937411	1					
ANR	3937537	ExpressionStatement	"( void ) G ( - g -> can -> sx , - g -> can -> sy + 2 )"	271:3:6627:6666	3937411	1	True				
ANR	3937538	CastExpression	"( void ) G ( - g -> can -> sx , - g -> can -> sy + 2 )"		3937411	0					
ANR	3937539	CastTarget	void		3937411	0					
ANR	3937540	CallExpression	"G ( - g -> can -> sx , - g -> can -> sy + 2 )"		3937411	1					
ANR	3937541	Callee	G		3937411	0					
ANR	3937542	Identifier	G		3937411	0					
ANR	3937543	ArgumentList	- g -> can -> sx		3937411	1					
ANR	3937544	Argument	- g -> can -> sx		3937411	0					
ANR	3937545	UnaryOperationExpression	- g -> can -> sx		3937411	0					
ANR	3937546	UnaryOperator	-		3937411	0					
ANR	3937547	PtrMemberAccess	g -> can -> sx		3937411	1					
ANR	3937548	PtrMemberAccess	g -> can		3937411	0					
ANR	3937549	Identifier	g		3937411	0					
ANR	3937550	Identifier	can		3937411	1					
ANR	3937551	Identifier	sx		3937411	1					
ANR	3937552	Argument	- g -> can -> sy + 2		3937411	1					
ANR	3937553	AdditiveExpression	- g -> can -> sy + 2		3937411	0		+			
ANR	3937554	UnaryOperationExpression	- g -> can -> sy		3937411	0					
ANR	3937555	UnaryOperator	-		3937411	0					
ANR	3937556	PtrMemberAccess	g -> can -> sy		3937411	1					
ANR	3937557	PtrMemberAccess	g -> can		3937411	0					
ANR	3937558	Identifier	g		3937411	0					
ANR	3937559	Identifier	can		3937411	1					
ANR	3937560	Identifier	sy		3937411	1					
ANR	3937561	PrimaryExpression	2		3937411	1					
ANR	3937562	ExpressionStatement	"snprintf ( title , sizeof ( title ) - 1 , ""[ %s ]"" , n -> title )"	272:3:6671:6731	3937411	2	True				
ANR	3937563	CallExpression	"snprintf ( title , sizeof ( title ) - 1 , ""[ %s ]"" , n -> title )"		3937411	0					
ANR	3937564	Callee	snprintf		3937411	0					
ANR	3937565	Identifier	snprintf		3937411	0					
ANR	3937566	ArgumentList	title		3937411	1					
ANR	3937567	Argument	title		3937411	0					
ANR	3937568	Identifier	title		3937411	0					
ANR	3937569	Argument	sizeof ( title ) - 1		3937411	1					
ANR	3937570	AdditiveExpression	sizeof ( title ) - 1		3937411	0		-			
ANR	3937571	SizeofExpression	sizeof ( title )		3937411	0					
ANR	3937572	Sizeof	sizeof		3937411	0					
ANR	3937573	SizeofOperand	title		3937411	1					
ANR	3937574	PrimaryExpression	1		3937411	1					
ANR	3937575	Argument	"""[ %s ]"""		3937411	2					
ANR	3937576	PrimaryExpression	"""[ %s ]"""		3937411	0					
ANR	3937577	Argument	n -> title		3937411	3					
ANR	3937578	PtrMemberAccess	n -> title		3937411	0					
ANR	3937579	Identifier	n		3937411	0					
ANR	3937580	Identifier	title		3937411	1					
ANR	3937581	ExpressionStatement	W ( title )	274:3:6736:6745	3937411	3	True				
ANR	3937582	CallExpression	W ( title )		3937411	0					
ANR	3937583	Callee	W		3937411	0					
ANR	3937584	Identifier	W		3937411	0					
ANR	3937585	ArgumentList	title		3937411	1					
ANR	3937586	Argument	title		3937411	0					
ANR	3937587	Identifier	title		3937411	0					
ANR	3937588	IfStatement	if ( discroll > 0 )		3937411	4					
ANR	3937589	Condition	discroll > 0	275:7:6754:6765	3937411	0	True				
ANR	3937590	RelationalExpression	discroll > 0		3937411	0		>			
ANR	3937591	Identifier	discroll		3937411	0					
ANR	3937592	PrimaryExpression	0		3937411	1					
ANR	3937593	CompoundStatement		26:4:546:605	3937411	1					
ANR	3937594	IdentifierDeclStatement	"char * body = r_str_ansi_crop ( n -> body , 0 , discroll , - 1 , - 1 ) ;"	276:4:6774:6833	3937411	0	True				
ANR	3937595	IdentifierDecl	"* body = r_str_ansi_crop ( n -> body , 0 , discroll , - 1 , - 1 )"		3937411	0					
ANR	3937596	IdentifierDeclType	char *		3937411	0					
ANR	3937597	Identifier	body		3937411	1					
ANR	3937598	AssignmentExpression	"* body = r_str_ansi_crop ( n -> body , 0 , discroll , - 1 , - 1 )"		3937411	2		=			
ANR	3937599	Identifier	body		3937411	0					
ANR	3937600	CallExpression	"r_str_ansi_crop ( n -> body , 0 , discroll , - 1 , - 1 )"		3937411	1					
ANR	3937601	Callee	r_str_ansi_crop		3937411	0					
ANR	3937602	Identifier	r_str_ansi_crop		3937411	0					
ANR	3937603	ArgumentList	n -> body		3937411	1					
ANR	3937604	Argument	n -> body		3937411	0					
ANR	3937605	PtrMemberAccess	n -> body		3937411	0					
ANR	3937606	Identifier	n		3937411	0					
ANR	3937607	Identifier	body		3937411	1					
ANR	3937608	Argument	0		3937411	1					
ANR	3937609	PrimaryExpression	0		3937411	0					
ANR	3937610	Argument	discroll		3937411	2					
ANR	3937611	Identifier	discroll		3937411	0					
ANR	3937612	Argument	- 1		3937411	3					
ANR	3937613	UnaryOperationExpression	- 1		3937411	0					
ANR	3937614	UnaryOperator	-		3937411	0					
ANR	3937615	PrimaryExpression	1		3937411	1					
ANR	3937616	Argument	- 1		3937411	4					
ANR	3937617	UnaryOperationExpression	- 1		3937411	0					
ANR	3937618	UnaryOperator	-		3937411	0					
ANR	3937619	PrimaryExpression	1		3937411	1					
ANR	3937620	ExpressionStatement	"( void ) G ( - g -> can -> sx , - g -> can -> sy + 3 )"	277:4:6839:6878	3937411	1	True				
ANR	3937621	CastExpression	"( void ) G ( - g -> can -> sx , - g -> can -> sy + 3 )"		3937411	0					
ANR	3937622	CastTarget	void		3937411	0					
ANR	3937623	CallExpression	"G ( - g -> can -> sx , - g -> can -> sy + 3 )"		3937411	1					
ANR	3937624	Callee	G		3937411	0					
ANR	3937625	Identifier	G		3937411	0					
ANR	3937626	ArgumentList	- g -> can -> sx		3937411	1					
ANR	3937627	Argument	- g -> can -> sx		3937411	0					
ANR	3937628	UnaryOperationExpression	- g -> can -> sx		3937411	0					
ANR	3937629	UnaryOperator	-		3937411	0					
ANR	3937630	PtrMemberAccess	g -> can -> sx		3937411	1					
ANR	3937631	PtrMemberAccess	g -> can		3937411	0					
ANR	3937632	Identifier	g		3937411	0					
ANR	3937633	Identifier	can		3937411	1					
ANR	3937634	Identifier	sx		3937411	1					
ANR	3937635	Argument	- g -> can -> sy + 3		3937411	1					
ANR	3937636	AdditiveExpression	- g -> can -> sy + 3		3937411	0		+			
ANR	3937637	UnaryOperationExpression	- g -> can -> sy		3937411	0					
ANR	3937638	UnaryOperator	-		3937411	0					
ANR	3937639	PtrMemberAccess	g -> can -> sy		3937411	1					
ANR	3937640	PtrMemberAccess	g -> can		3937411	0					
ANR	3937641	Identifier	g		3937411	0					
ANR	3937642	Identifier	can		3937411	1					
ANR	3937643	Identifier	sy		3937411	1					
ANR	3937644	PrimaryExpression	3		3937411	1					
ANR	3937645	ExpressionStatement	W ( body )	278:4:6884:6892	3937411	2	True				
ANR	3937646	CallExpression	W ( body )		3937411	0					
ANR	3937647	Callee	W		3937411	0					
ANR	3937648	Identifier	W		3937411	0					
ANR	3937649	ArgumentList	body		3937411	1					
ANR	3937650	Argument	body		3937411	0					
ANR	3937651	Identifier	body		3937411	0					
ANR	3937652	ExpressionStatement	free ( body )	279:4:6898:6909	3937411	3	True				
ANR	3937653	CallExpression	free ( body )		3937411	0					
ANR	3937654	Callee	free		3937411	0					
ANR	3937655	Identifier	free		3937411	0					
ANR	3937656	ArgumentList	body		3937411	1					
ANR	3937657	Argument	body		3937411	0					
ANR	3937658	Identifier	body		3937411	0					
ANR	3937659	ElseStatement	else		3937411	0					
ANR	3937660	CompoundStatement		30:10:693:693	3937411	0					
ANR	3937661	ExpressionStatement	"( void ) G ( - g -> can -> sx , - g -> can -> sy + 3 )"	281:4:6927:6966	3937411	0	True				
ANR	3937662	CastExpression	"( void ) G ( - g -> can -> sx , - g -> can -> sy + 3 )"		3937411	0					
ANR	3937663	CastTarget	void		3937411	0					
ANR	3937664	CallExpression	"G ( - g -> can -> sx , - g -> can -> sy + 3 )"		3937411	1					
ANR	3937665	Callee	G		3937411	0					
ANR	3937666	Identifier	G		3937411	0					
ANR	3937667	ArgumentList	- g -> can -> sx		3937411	1					
ANR	3937668	Argument	- g -> can -> sx		3937411	0					
ANR	3937669	UnaryOperationExpression	- g -> can -> sx		3937411	0					
ANR	3937670	UnaryOperator	-		3937411	0					
ANR	3937671	PtrMemberAccess	g -> can -> sx		3937411	1					
ANR	3937672	PtrMemberAccess	g -> can		3937411	0					
ANR	3937673	Identifier	g		3937411	0					
ANR	3937674	Identifier	can		3937411	1					
ANR	3937675	Identifier	sx		3937411	1					
ANR	3937676	Argument	- g -> can -> sy + 3		3937411	1					
ANR	3937677	AdditiveExpression	- g -> can -> sy + 3		3937411	0		+			
ANR	3937678	UnaryOperationExpression	- g -> can -> sy		3937411	0					
ANR	3937679	UnaryOperator	-		3937411	0					
ANR	3937680	PtrMemberAccess	g -> can -> sy		3937411	1					
ANR	3937681	PtrMemberAccess	g -> can		3937411	0					
ANR	3937682	Identifier	g		3937411	0					
ANR	3937683	Identifier	can		3937411	1					
ANR	3937684	Identifier	sy		3937411	1					
ANR	3937685	PrimaryExpression	3		3937411	1					
ANR	3937686	ExpressionStatement	W ( n -> body )	282:4:6972:6983	3937411	1	True				
ANR	3937687	CallExpression	W ( n -> body )		3937411	0					
ANR	3937688	Callee	W		3937411	0					
ANR	3937689	Identifier	W		3937411	0					
ANR	3937690	ArgumentList	n -> body		3937411	1					
ANR	3937691	Argument	n -> body		3937411	0					
ANR	3937692	PtrMemberAccess	n -> body		3937411	0					
ANR	3937693	Identifier	n		3937411	0					
ANR	3937694	Identifier	body		3937411	1					
ANR	3937695	ElseStatement	else		3937411	0					
ANR	3937696	CompoundStatement		35:3:776:794	3937411	0					
ANR	3937697	IdentifierDeclStatement	"char * str = ""____"" ;"	285:3:7004:7022	3937411	0	True				
ANR	3937698	IdentifierDecl	"* str = ""____"""		3937411	0					
ANR	3937699	IdentifierDeclType	char *		3937411	0					
ANR	3937700	Identifier	str		3937411	1					
ANR	3937701	AssignmentExpression	"* str = ""____"""		3937411	2		=			
ANR	3937702	Identifier	str		3937411	0					
ANR	3937703	PrimaryExpression	"""____"""		3937411	1					
ANR	3937704	IfStatement	if ( n -> title )		3937411	1					
ANR	3937705	Condition	n -> title	286:7:7031:7038	3937411	0	True				
ANR	3937706	PtrMemberAccess	n -> title		3937411	0					
ANR	3937707	Identifier	n		3937411	0					
ANR	3937708	Identifier	title		3937411	1					
ANR	3937709	CompoundStatement		37:4:819:844	3937411	1					
ANR	3937710	IdentifierDeclStatement	int l = strlen ( n -> title ) ;	287:4:7047:7072	3937411	0	True				
ANR	3937711	IdentifierDecl	l = strlen ( n -> title )		3937411	0					
ANR	3937712	IdentifierDeclType	int		3937411	0					
ANR	3937713	Identifier	l		3937411	1					
ANR	3937714	AssignmentExpression	l = strlen ( n -> title )		3937411	2		=			
ANR	3937715	Identifier	l		3937411	0					
ANR	3937716	CallExpression	strlen ( n -> title )		3937411	1					
ANR	3937717	Callee	strlen		3937411	0					
ANR	3937718	Identifier	strlen		3937411	0					
ANR	3937719	ArgumentList	n -> title		3937411	1					
ANR	3937720	Argument	n -> title		3937411	0					
ANR	3937721	PtrMemberAccess	n -> title		3937411	0					
ANR	3937722	Identifier	n		3937411	0					
ANR	3937723	Identifier	title		3937411	1					
ANR	3937724	ExpressionStatement	str = n -> title	288:4:7078:7092	3937411	1	True				
ANR	3937725	AssignmentExpression	str = n -> title		3937411	0		=			
ANR	3937726	Identifier	str		3937411	0					
ANR	3937727	PtrMemberAccess	n -> title		3937411	1					
ANR	3937728	Identifier	n		3937411	0					
ANR	3937729	Identifier	title		3937411	1					
ANR	3937730	IfStatement	if ( l > MINIGRAPH_NODE_TITLE_LEN )		3937411	2					
ANR	3937731	Condition	l > MINIGRAPH_NODE_TITLE_LEN	289:8:7102:7129	3937411	0	True				
ANR	3937732	RelationalExpression	l > MINIGRAPH_NODE_TITLE_LEN		3937411	0		>			
ANR	3937733	Identifier	l		3937411	0					
ANR	3937734	Identifier	MINIGRAPH_NODE_TITLE_LEN		3937411	1					
ANR	3937735	CompoundStatement		39:38:904:904	3937411	1					
ANR	3937736	ExpressionStatement	str += l - MINIGRAPH_NODE_TITLE_LEN	290:5:7139:7174	3937411	0	True				
ANR	3937737	AssignmentExpression	str += l - MINIGRAPH_NODE_TITLE_LEN		3937411	0		+=			
ANR	3937738	Identifier	str		3937411	0					
ANR	3937739	AdditiveExpression	l - MINIGRAPH_NODE_TITLE_LEN		3937411	1		-			
ANR	3937740	Identifier	l		3937411	0					
ANR	3937741	Identifier	MINIGRAPH_NODE_TITLE_LEN		3937411	1					
ANR	3937742	IfStatement	if ( g -> can -> color )		3937411	2					
ANR	3937743	Condition	g -> can -> color	293:7:7194:7206	3937411	0	True				
ANR	3937744	PtrMemberAccess	g -> can -> color		3937411	0					
ANR	3937745	PtrMemberAccess	g -> can		3937411	0					
ANR	3937746	Identifier	g		3937411	0					
ANR	3937747	Identifier	can		3937411	1					
ANR	3937748	Identifier	color		3937411	1					
ANR	3937749	CompoundStatement		43:22:981:981	3937411	1					
ANR	3937750	ExpressionStatement	"snprintf ( title , sizeof ( title ) - 1 , ""%s__%s__"" , Color_RESET , str )"	294:4:7215:7281	3937411	0	True				
ANR	3937751	CallExpression	"snprintf ( title , sizeof ( title ) - 1 , ""%s__%s__"" , Color_RESET , str )"		3937411	0					
ANR	3937752	Callee	snprintf		3937411	0					
ANR	3937753	Identifier	snprintf		3937411	0					
ANR	3937754	ArgumentList	title		3937411	1					
ANR	3937755	Argument	title		3937411	0					
ANR	3937756	Identifier	title		3937411	0					
ANR	3937757	Argument	sizeof ( title ) - 1		3937411	1					
ANR	3937758	AdditiveExpression	sizeof ( title ) - 1		3937411	0		-			
ANR	3937759	SizeofExpression	sizeof ( title )		3937411	0					
ANR	3937760	Sizeof	sizeof		3937411	0					
ANR	3937761	SizeofOperand	title		3937411	1					
ANR	3937762	PrimaryExpression	1		3937411	1					
ANR	3937763	Argument	"""%s__%s__"""		3937411	2					
ANR	3937764	PrimaryExpression	"""%s__%s__"""		3937411	0					
ANR	3937765	Argument	Color_RESET		3937411	3					
ANR	3937766	Identifier	Color_RESET		3937411	0					
ANR	3937767	Argument	str		3937411	4					
ANR	3937768	Identifier	str		3937411	0					
ANR	3937769	ElseStatement	else		3937411	0					
ANR	3937770	CompoundStatement		45:10:1065:1065	3937411	0					
ANR	3937771	ExpressionStatement	"snprintf ( title , sizeof ( title ) - 1 , ""__%s__"" , str )"	296:4:7299:7350	3937411	0	True				
ANR	3937772	CallExpression	"snprintf ( title , sizeof ( title ) - 1 , ""__%s__"" , str )"		3937411	0					
ANR	3937773	Callee	snprintf		3937411	0					
ANR	3937774	Identifier	snprintf		3937411	0					
ANR	3937775	ArgumentList	title		3937411	1					
ANR	3937776	Argument	title		3937411	0					
ANR	3937777	Identifier	title		3937411	0					
ANR	3937778	Argument	sizeof ( title ) - 1		3937411	1					
ANR	3937779	AdditiveExpression	sizeof ( title ) - 1		3937411	0		-			
ANR	3937780	SizeofExpression	sizeof ( title )		3937411	0					
ANR	3937781	Sizeof	sizeof		3937411	0					
ANR	3937782	SizeofOperand	title		3937411	1					
ANR	3937783	PrimaryExpression	1		3937411	1					
ANR	3937784	Argument	"""__%s__"""		3937411	2					
ANR	3937785	PrimaryExpression	"""__%s__"""		3937411	0					
ANR	3937786	Argument	str		3937411	3					
ANR	3937787	Identifier	str		3937411	0					
ANR	3937788	ExpressionStatement	"append_shortcut ( g , title , n -> title , sizeof ( title ) - strlen ( title ) - 1 )"	298:3:7360:7433	3937411	3	True				
ANR	3937789	CallExpression	"append_shortcut ( g , title , n -> title , sizeof ( title ) - strlen ( title ) - 1 )"		3937411	0					
ANR	3937790	Callee	append_shortcut		3937411	0					
ANR	3937791	Identifier	append_shortcut		3937411	0					
ANR	3937792	ArgumentList	g		3937411	1					
ANR	3937793	Argument	g		3937411	0					
ANR	3937794	Identifier	g		3937411	0					
ANR	3937795	Argument	title		3937411	1					
ANR	3937796	Identifier	title		3937411	0					
ANR	3937797	Argument	n -> title		3937411	2					
ANR	3937798	PtrMemberAccess	n -> title		3937411	0					
ANR	3937799	Identifier	n		3937411	0					
ANR	3937800	Identifier	title		3937411	1					
ANR	3937801	Argument	sizeof ( title ) - strlen ( title ) - 1		3937411	3					
ANR	3937802	AdditiveExpression	sizeof ( title ) - strlen ( title ) - 1		3937411	0		-			
ANR	3937803	SizeofExpression	sizeof ( title )		3937411	0					
ANR	3937804	Sizeof	sizeof		3937411	0					
ANR	3937805	SizeofOperand	title		3937411	1					
ANR	3937806	AdditiveExpression	strlen ( title ) - 1		3937411	1		-			
ANR	3937807	CallExpression	strlen ( title )		3937411	0					
ANR	3937808	Callee	strlen		3937411	0					
ANR	3937809	Identifier	strlen		3937411	0					
ANR	3937810	ArgumentList	title		3937411	1					
ANR	3937811	Argument	title		3937411	0					
ANR	3937812	Identifier	title		3937411	0					
ANR	3937813	PrimaryExpression	1		3937411	1					
ANR	3937814	ExpressionStatement	"W ( r_str_ansi_crop ( title , delta_x , 0 , 20 , 1 ) )"	299:3:7438:7484	3937411	4	True				
ANR	3937815	CallExpression	"W ( r_str_ansi_crop ( title , delta_x , 0 , 20 , 1 ) )"		3937411	0					
ANR	3937816	Callee	W		3937411	0					
ANR	3937817	Identifier	W		3937411	0					
ANR	3937818	ArgumentList	"r_str_ansi_crop ( title , delta_x , 0 , 20 , 1 )"		3937411	1					
ANR	3937819	Argument	"r_str_ansi_crop ( title , delta_x , 0 , 20 , 1 )"		3937411	0					
ANR	3937820	CallExpression	"r_str_ansi_crop ( title , delta_x , 0 , 20 , 1 )"		3937411	0					
ANR	3937821	Callee	r_str_ansi_crop		3937411	0					
ANR	3937822	Identifier	r_str_ansi_crop		3937411	0					
ANR	3937823	ArgumentList	title		3937411	1					
ANR	3937824	Argument	title		3937411	0					
ANR	3937825	Identifier	title		3937411	0					
ANR	3937826	Argument	delta_x		3937411	1					
ANR	3937827	Identifier	delta_x		3937411	0					
ANR	3937828	Argument	0		3937411	2					
ANR	3937829	PrimaryExpression	0		3937411	0					
ANR	3937830	Argument	20		3937411	3					
ANR	3937831	PrimaryExpression	20		3937411	0					
ANR	3937832	Argument	1		3937411	4					
ANR	3937833	PrimaryExpression	1		3937411	0					
ANR	3937834	ElseStatement	else		3937411	0					
ANR	3937835	CompoundStatement		51:8:1270:1270	3937411	0					
ANR	3937836	ExpressionStatement	"snprintf ( title , sizeof ( title ) - 1 , cur ? ""[ %s ]"" : ""  %s  "" , n -> title )"	302:2:7502:7576	3937411	0	True				
ANR	3937837	CallExpression	"snprintf ( title , sizeof ( title ) - 1 , cur ? ""[ %s ]"" : ""  %s  "" , n -> title )"		3937411	0					
ANR	3937838	Callee	snprintf		3937411	0					
ANR	3937839	Identifier	snprintf		3937411	0					
ANR	3937840	ArgumentList	title		3937411	1					
ANR	3937841	Argument	title		3937411	0					
ANR	3937842	Identifier	title		3937411	0					
ANR	3937843	Argument	sizeof ( title ) - 1		3937411	1					
ANR	3937844	AdditiveExpression	sizeof ( title ) - 1		3937411	0		-			
ANR	3937845	SizeofExpression	sizeof ( title )		3937411	0					
ANR	3937846	Sizeof	sizeof		3937411	0					
ANR	3937847	SizeofOperand	title		3937411	1					
ANR	3937848	PrimaryExpression	1		3937411	1					
ANR	3937849	Argument	"cur ? ""[ %s ]"" : ""  %s  """		3937411	2					
ANR	3937850	ConditionalExpression	"cur ? ""[ %s ]"" : ""  %s  """		3937411	0					
ANR	3937851	Condition	cur		3937411	0					
ANR	3937852	Identifier	cur		3937411	0					
ANR	3937853	PrimaryExpression	"""[ %s ]"""		3937411	1					
ANR	3937854	PrimaryExpression	"""  %s  """		3937411	2					
ANR	3937855	Argument	n -> title		3937411	3					
ANR	3937856	PtrMemberAccess	n -> title		3937411	0					
ANR	3937857	Identifier	n		3937411	0					
ANR	3937858	Identifier	title		3937411	1					
ANR	3937859	ExpressionStatement	W ( title )	304:2:7580:7589	3937411	1	True				
ANR	3937860	CallExpression	W ( title )		3937411	0					
ANR	3937861	Callee	W		3937411	0					
ANR	3937862	Identifier	W		3937411	0					
ANR	3937863	ArgumentList	title		3937411	1					
ANR	3937864	Argument	title		3937411	0					
ANR	3937865	Identifier	title		3937411	0					
ANR	3937866	ReturnStatement	return ;	306:1:7595:7601	3937411	7	True				
ANR	3937867	ReturnType	static void		3937411	1					
ANR	3937868	Identifier	mini_RANode_print		3937411	2					
ANR	3937869	ParameterList	"const RAGraph * g , const RANode * n , int cur , bool details"		3937411	3					
ANR	3937870	Parameter	const RAGraph * g	251:30:6169:6184	3937411	0	True				
ANR	3937871	ParameterType	const RAGraph *		3937411	0					
ANR	3937872	Identifier	g		3937411	1					
ANR	3937873	Parameter	const RANode * n	251:48:6187:6201	3937411	1	True				
ANR	3937874	ParameterType	const RANode *		3937411	0					
ANR	3937875	Identifier	n		3937411	1					
ANR	3937876	Parameter	int cur	251:65:6204:6210	3937411	2	True				
ANR	3937877	ParameterType	int		3937411	0					
ANR	3937878	Identifier	cur		3937411	1					
ANR	3937879	Parameter	bool details	251:74:6213:6224	3937411	3	True				
ANR	3937880	ParameterType	bool		3937411	0					
ANR	3937881	Identifier	details		3937411	1					
ANR	3937882	CFGEntryNode	ENTRY		3937411		True				
ANR	3937883	CFGExitNode	EXIT		3937411		True				
ANR	3937884	Symbol	cur		3937411						
ANR	3937885	Symbol	delta_x		3937411						
ANR	3937886	Symbol	MINIGRAPH_NODE_TITLE_LEN		3937411						
ANR	3937887	Symbol	G		3937411						
ANR	3937888	Symbol	Color_RESET		3937411						
ANR	3937889	Symbol	MINIGRAPH_NODE_CENTER_X		3937411						
ANR	3937890	Symbol	title		3937411						
ANR	3937891	Symbol	body		3937411						
ANR	3937892	Symbol	* g -> can		3937411						
ANR	3937893	Symbol	strlen		3937411						
ANR	3937894	Symbol	g -> can -> color		3937411						
ANR	3937895	Symbol	r_str_ansi_crop		3937411						
ANR	3937896	Symbol	details		3937411						
ANR	3937897	Symbol	discroll		3937411						
ANR	3937898	Symbol	g -> can -> sx		3937411						
ANR	3937899	Symbol	g -> can		3937411						
ANR	3937900	Symbol	g -> can -> sy		3937411						
ANR	3937901	Symbol	* * g		3937411						
ANR	3937902	Symbol	g		3937411						
ANR	3937903	Symbol	l		3937411						
ANR	3937904	Symbol	n		3937411						
ANR	3937905	Symbol	str		3937411						
ANR	3937906	Symbol	n -> y		3937411						
ANR	3937907	Symbol	* g		3937411						
ANR	3937908	Symbol	n -> x		3937411						
ANR	3937909	Symbol	n -> w		3937411						
ANR	3937910	Symbol	x		3937411						
ANR	3937911	Symbol	* n		3937411						
ANR	3937912	Symbol	n -> title		3937411						
ANR	3937913	Symbol	MINIGRAPH_NODE_TEXT_CUR		3937411						
ANR	3937914	Symbol	n -> body		3937411						
ANR	3937915	Function	tiny_RANode_print	309:0:7606:7837							
ANR	3937916	FunctionDef	"tiny_RANode_print (const RAGraph * g , const RANode * n , int cur)"		3937915	0					
ANR	3937917	CompoundStatement		309:74:7680:7837	3937915	0					
ANR	3937918	ExpressionStatement	"G ( n -> x , n -> y )"	310:1:7683:7697	3937915	0	True				
ANR	3937919	CallExpression	"G ( n -> x , n -> y )"		3937915	0					
ANR	3937920	Callee	G		3937915	0					
ANR	3937921	Identifier	G		3937915	0					
ANR	3937922	ArgumentList	n -> x		3937915	1					
ANR	3937923	Argument	n -> x		3937915	0					
ANR	3937924	PtrMemberAccess	n -> x		3937915	0					
ANR	3937925	Identifier	n		3937915	0					
ANR	3937926	Identifier	x		3937915	1					
ANR	3937927	Argument	n -> y		3937915	1					
ANR	3937928	PtrMemberAccess	n -> y		3937915	0					
ANR	3937929	Identifier	n		3937915	0					
ANR	3937930	Identifier	y		3937915	1					
ANR	3937931	IdentifierDeclStatement	RCons * cons = r_cons_singleton ( ) ;	311:1:7700:7733	3937915	1	True				
ANR	3937932	IdentifierDecl	* cons = r_cons_singleton ( )		3937915	0					
ANR	3937933	IdentifierDeclType	RCons *		3937915	0					
ANR	3937934	Identifier	cons		3937915	1					
ANR	3937935	AssignmentExpression	* cons = r_cons_singleton ( )		3937915	2		=			
ANR	3937936	Identifier	cons		3937915	0					
ANR	3937937	CallExpression	r_cons_singleton ( )		3937915	1					
ANR	3937938	Callee	r_cons_singleton		3937915	0					
ANR	3937939	Identifier	r_cons_singleton		3937915	0					
ANR	3937940	ArgumentList			3937915	1					
ANR	3937941	IdentifierDeclStatement	"char * circle = cons -> use_utf8 ? UTF_CIRCLE : ""()"" ;"	312:1:7736:7784	3937915	2	True				
ANR	3937942	IdentifierDecl	"* circle = cons -> use_utf8 ? UTF_CIRCLE : ""()"""		3937915	0					
ANR	3937943	IdentifierDeclType	char *		3937915	0					
ANR	3937944	Identifier	circle		3937915	1					
ANR	3937945	AssignmentExpression	"* circle = cons -> use_utf8 ? UTF_CIRCLE : ""()"""		3937915	2		=			
ANR	3937946	Identifier	circle		3937915	0					
ANR	3937947	ConditionalExpression	"cons -> use_utf8 ? UTF_CIRCLE : ""()"""		3937915	1					
ANR	3937948	Condition	cons -> use_utf8		3937915	0					
ANR	3937949	PtrMemberAccess	cons -> use_utf8		3937915	0					
ANR	3937950	Identifier	cons		3937915	0					
ANR	3937951	Identifier	use_utf8		3937915	1					
ANR	3937952	Identifier	UTF_CIRCLE		3937915	1					
ANR	3937953	PrimaryExpression	"""()"""		3937915	2					
ANR	3937954	IfStatement	if ( cur )		3937915	3					
ANR	3937955	Condition	cur	313:5:7791:7793	3937915	0	True				
ANR	3937956	Identifier	cur		3937915	0					
ANR	3937957	CompoundStatement		5:10:115:115	3937915	1					
ANR	3937958	ExpressionStatement	"W ( ""##"" )"	314:2:7800:7808	3937915	0	True				
ANR	3937959	CallExpression	"W ( ""##"" )"		3937915	0					
ANR	3937960	Callee	W		3937915	0					
ANR	3937961	Identifier	W		3937915	0					
ANR	3937962	ArgumentList	"""##"""		3937915	1					
ANR	3937963	Argument	"""##"""		3937915	0					
ANR	3937964	PrimaryExpression	"""##"""		3937915	0					
ANR	3937965	ElseStatement	else		3937915	0					
ANR	3937966	CompoundStatement		7:8:137:137	3937915	0					
ANR	3937967	ExpressionStatement	W ( circle )	316:2:7822:7832	3937915	0	True				
ANR	3937968	CallExpression	W ( circle )		3937915	0					
ANR	3937969	Callee	W		3937915	0					
ANR	3937970	Identifier	W		3937915	0					
ANR	3937971	ArgumentList	circle		3937915	1					
ANR	3937972	Argument	circle		3937915	0					
ANR	3937973	Identifier	circle		3937915	0					
ANR	3937974	ReturnType	static void		3937915	1					
ANR	3937975	Identifier	tiny_RANode_print		3937915	2					
ANR	3937976	ParameterList	"const RAGraph * g , const RANode * n , int cur"		3937915	3					
ANR	3937977	Parameter	const RAGraph * g	309:30:7636:7651	3937915	0	True				
ANR	3937978	ParameterType	const RAGraph *		3937915	0					
ANR	3937979	Identifier	g		3937915	1					
ANR	3937980	Parameter	const RANode * n	309:48:7654:7668	3937915	1	True				
ANR	3937981	ParameterType	const RANode *		3937915	0					
ANR	3937982	Identifier	n		3937915	1					
ANR	3937983	Parameter	int cur	309:65:7671:7677	3937915	2	True				
ANR	3937984	ParameterType	int		3937915	0					
ANR	3937985	Identifier	cur		3937915	1					
ANR	3937986	CFGEntryNode	ENTRY		3937915		True				
ANR	3937987	CFGExitNode	EXIT		3937915		True				
ANR	3937988	Symbol	UTF_CIRCLE		3937915						
ANR	3937989	Symbol	cur		3937915						
ANR	3937990	Symbol	n -> y		3937915						
ANR	3937991	Symbol	n -> x		3937915						
ANR	3937992	Symbol	g		3937915						
ANR	3937993	Symbol	* n		3937915						
ANR	3937994	Symbol	r_cons_singleton		3937915						
ANR	3937995	Symbol	* cons		3937915						
ANR	3937996	Symbol	cons -> use_utf8		3937915						
ANR	3937997	Symbol	circle		3937915						
ANR	3937998	Symbol	n		3937915						
ANR	3937999	Symbol	cons		3937915						
ANR	3938000	Function	get_node_color	320:0:7840:8337							
ANR	3938001	FunctionDef	"get_node_color (int color , int cur)"		3938000	0					
ANR	3938002	CompoundStatement		320:49:7889:8337	3938000	0					
ANR	3938003	IdentifierDeclStatement	RCons * cons = r_cons_singleton ( ) ;	321:8:7899:7932	3938000	0	True				
ANR	3938004	IdentifierDecl	* cons = r_cons_singleton ( )		3938000	0					
ANR	3938005	IdentifierDeclType	RCons *		3938000	0					
ANR	3938006	Identifier	cons		3938000	1					
ANR	3938007	AssignmentExpression	* cons = r_cons_singleton ( )		3938000	2		=			
ANR	3938008	Identifier	cons		3938000	0					
ANR	3938009	CallExpression	r_cons_singleton ( )		3938000	1					
ANR	3938010	Callee	r_cons_singleton		3938000	0					
ANR	3938011	Identifier	r_cons_singleton		3938000	0					
ANR	3938012	ArgumentList			3938000	1					
ANR	3938013	IfStatement	if ( color == - 1 )		3938000	1					
ANR	3938014	Condition	color == - 1	322:12:7946:7956	3938000	0	True				
ANR	3938015	EqualityExpression	color == - 1		3938000	0		==			
ANR	3938016	Identifier	color		3938000	0					
ANR	3938017	UnaryOperationExpression	- 1		3938000	1					
ANR	3938018	UnaryOperator	-		3938000	0					
ANR	3938019	PrimaryExpression	1		3938000	1					
ANR	3938020	CompoundStatement		3:25:69:69	3938000	1					
ANR	3938021	ReturnStatement	return cur ? cons -> context -> pal . graph_box2 : cons -> context -> pal . graph_box ;	323:16:7977:8050	3938000	0	True				
ANR	3938022	ConditionalExpression	cur ? cons -> context -> pal . graph_box2 : cons -> context -> pal . graph_box		3938000	0					
ANR	3938023	Condition	cur		3938000	0					
ANR	3938024	Identifier	cur		3938000	0					
ANR	3938025	MemberAccess	cons -> context -> pal . graph_box2		3938000	1					
ANR	3938026	PtrMemberAccess	cons -> context -> pal		3938000	0					
ANR	3938027	PtrMemberAccess	cons -> context		3938000	0					
ANR	3938028	Identifier	cons		3938000	0					
ANR	3938029	Identifier	context		3938000	1					
ANR	3938030	Identifier	pal		3938000	1					
ANR	3938031	Identifier	graph_box2		3938000	1					
ANR	3938032	MemberAccess	cons -> context -> pal . graph_box		3938000	2					
ANR	3938033	PtrMemberAccess	cons -> context -> pal		3938000	0					
ANR	3938034	PtrMemberAccess	cons -> context		3938000	0					
ANR	3938035	Identifier	cons		3938000	0					
ANR	3938036	Identifier	context		3938000	1					
ANR	3938037	Identifier	pal		3938000	1					
ANR	3938038	Identifier	graph_box		3938000	1					
ANR	3938039	ReturnStatement	return color ? ( color == R_ANAL_DIFF_TYPE_MATCH ? cons -> context -> pal . graph_diff_match : color == R_ANAL_DIFF_TYPE_UNMATCH ? cons -> context -> pal . graph_diff_unmatch : cons -> context -> pal . graph_diff_new ) : cons -> context -> pal . graph_diff_unknown ;	325:8:8070:8335	3938000	2	True				
ANR	3938040	ConditionalExpression	color ? ( color == R_ANAL_DIFF_TYPE_MATCH ? cons -> context -> pal . graph_diff_match : color == R_ANAL_DIFF_TYPE_UNMATCH ? cons -> context -> pal . graph_diff_unmatch : cons -> context -> pal . graph_diff_new ) : cons -> context -> pal . graph_diff_unknown		3938000	0					
ANR	3938041	Condition	color		3938000	0					
ANR	3938042	Identifier	color		3938000	0					
ANR	3938043	ConditionalExpression	color == R_ANAL_DIFF_TYPE_MATCH ? cons -> context -> pal . graph_diff_match : color == R_ANAL_DIFF_TYPE_UNMATCH ? cons -> context -> pal . graph_diff_unmatch : cons -> context -> pal . graph_diff_new		3938000	1					
ANR	3938044	Condition	color == R_ANAL_DIFF_TYPE_MATCH		3938000	0					
ANR	3938045	EqualityExpression	color == R_ANAL_DIFF_TYPE_MATCH		3938000	0		==			
ANR	3938046	Identifier	color		3938000	0					
ANR	3938047	Identifier	R_ANAL_DIFF_TYPE_MATCH		3938000	1					
ANR	3938048	MemberAccess	cons -> context -> pal . graph_diff_match		3938000	1					
ANR	3938049	PtrMemberAccess	cons -> context -> pal		3938000	0					
ANR	3938050	PtrMemberAccess	cons -> context		3938000	0					
ANR	3938051	Identifier	cons		3938000	0					
ANR	3938052	Identifier	context		3938000	1					
ANR	3938053	Identifier	pal		3938000	1					
ANR	3938054	Identifier	graph_diff_match		3938000	1					
ANR	3938055	ConditionalExpression	color == R_ANAL_DIFF_TYPE_UNMATCH ? cons -> context -> pal . graph_diff_unmatch : cons -> context -> pal . graph_diff_new		3938000	2					
ANR	3938056	Condition	color == R_ANAL_DIFF_TYPE_UNMATCH		3938000	0					
ANR	3938057	EqualityExpression	color == R_ANAL_DIFF_TYPE_UNMATCH		3938000	0		==			
ANR	3938058	Identifier	color		3938000	0					
ANR	3938059	Identifier	R_ANAL_DIFF_TYPE_UNMATCH		3938000	1					
ANR	3938060	MemberAccess	cons -> context -> pal . graph_diff_unmatch		3938000	1					
ANR	3938061	PtrMemberAccess	cons -> context -> pal		3938000	0					
ANR	3938062	PtrMemberAccess	cons -> context		3938000	0					
ANR	3938063	Identifier	cons		3938000	0					
ANR	3938064	Identifier	context		3938000	1					
ANR	3938065	Identifier	pal		3938000	1					
ANR	3938066	Identifier	graph_diff_unmatch		3938000	1					
ANR	3938067	MemberAccess	cons -> context -> pal . graph_diff_new		3938000	2					
ANR	3938068	PtrMemberAccess	cons -> context -> pal		3938000	0					
ANR	3938069	PtrMemberAccess	cons -> context		3938000	0					
ANR	3938070	Identifier	cons		3938000	0					
ANR	3938071	Identifier	context		3938000	1					
ANR	3938072	Identifier	pal		3938000	1					
ANR	3938073	Identifier	graph_diff_new		3938000	1					
ANR	3938074	MemberAccess	cons -> context -> pal . graph_diff_unknown		3938000	2					
ANR	3938075	PtrMemberAccess	cons -> context -> pal		3938000	0					
ANR	3938076	PtrMemberAccess	cons -> context		3938000	0					
ANR	3938077	Identifier	cons		3938000	0					
ANR	3938078	Identifier	context		3938000	1					
ANR	3938079	Identifier	pal		3938000	1					
ANR	3938080	Identifier	graph_diff_unknown		3938000	1					
ANR	3938081	ReturnType	static char *		3938000	1					
ANR	3938082	Identifier	get_node_color		3938000	2					
ANR	3938083	ParameterList	"int color , int cur"		3938000	3					
ANR	3938084	Parameter	int color	320:29:7869:7877	3938000	0	True				
ANR	3938085	ParameterType	int		3938000	0					
ANR	3938086	Identifier	color		3938000	1					
ANR	3938087	Parameter	int cur	320:40:7880:7886	3938000	1	True				
ANR	3938088	ParameterType	int		3938000	0					
ANR	3938089	Identifier	cur		3938000	1					
ANR	3938090	CFGEntryNode	ENTRY		3938000		True				
ANR	3938091	CFGExitNode	EXIT		3938000		True				
ANR	3938092	Symbol	cur		3938000						
ANR	3938093	Symbol	cons -> context		3938000						
ANR	3938094	Symbol	color		3938000						
ANR	3938095	Symbol	R_ANAL_DIFF_TYPE_MATCH		3938000						
ANR	3938096	Symbol	* * cons		3938000						
ANR	3938097	Symbol	cons -> context -> pal . graph_diff_unmatch		3938000						
ANR	3938098	Symbol	cons -> context -> pal . graph_diff_unknown		3938000						
ANR	3938099	Symbol	cons -> context -> pal . graph_diff_match		3938000						
ANR	3938100	Symbol	R_ANAL_DIFF_TYPE_UNMATCH		3938000						
ANR	3938101	Symbol	cons -> context -> pal . graph_box2		3938000						
ANR	3938102	Symbol	r_cons_singleton		3938000						
ANR	3938103	Symbol	* cons		3938000						
ANR	3938104	Symbol	cons -> context -> pal . graph_box		3938000						
ANR	3938105	Symbol	* cons -> context		3938000						
ANR	3938106	Symbol	cons -> context -> pal		3938000						
ANR	3938107	Symbol	cons		3938000						
ANR	3938108	Symbol	cons -> context -> pal . graph_diff_new		3938000						
ANR	3938109	Function	normal_RANode_print	330:0:8340:11180							
ANR	3938110	FunctionDef	"normal_RANode_print (const RAGraph * g , const RANode * n , int cur)"		3938109	0					
ANR	3938111	CompoundStatement		330:76:8416:11180	3938109	0					
ANR	3938112	IdentifierDeclStatement	"ut32 center_x = 0 , center_y = 0 ;"	331:1:8419:8450	3938109	0	True				
ANR	3938113	IdentifierDecl	center_x = 0		3938109	0					
ANR	3938114	IdentifierDeclType	ut32		3938109	0					
ANR	3938115	Identifier	center_x		3938109	1					
ANR	3938116	AssignmentExpression	center_x = 0		3938109	2		=			
ANR	3938117	Identifier	center_x		3938109	0					
ANR	3938118	PrimaryExpression	0		3938109	1					
ANR	3938119	IdentifierDecl	center_y = 0		3938109	1					
ANR	3938120	IdentifierDeclType	ut32		3938109	0					
ANR	3938121	Identifier	center_y		3938109	1					
ANR	3938122	AssignmentExpression	center_y = 0		3938109	2		=			
ANR	3938123	Identifier	center_y		3938109	0					
ANR	3938124	PrimaryExpression	0		3938109	1					
ANR	3938125	IdentifierDeclStatement	"ut32 delta_x = 0 , delta_txt_x = 0 ;"	332:1:8453:8486	3938109	1	True				
ANR	3938126	IdentifierDecl	delta_x = 0		3938109	0					
ANR	3938127	IdentifierDeclType	ut32		3938109	0					
ANR	3938128	Identifier	delta_x		3938109	1					
ANR	3938129	AssignmentExpression	delta_x = 0		3938109	2		=			
ANR	3938130	Identifier	delta_x		3938109	0					
ANR	3938131	PrimaryExpression	0		3938109	1					
ANR	3938132	IdentifierDecl	delta_txt_x = 0		3938109	1					
ANR	3938133	IdentifierDeclType	ut32		3938109	0					
ANR	3938134	Identifier	delta_txt_x		3938109	1					
ANR	3938135	AssignmentExpression	delta_txt_x = 0		3938109	2		=			
ANR	3938136	Identifier	delta_txt_x		3938109	0					
ANR	3938137	PrimaryExpression	0		3938109	1					
ANR	3938138	IdentifierDeclStatement	"ut32 delta_y = 0 , delta_txt_y = 0 ;"	333:1:8489:8522	3938109	2	True				
ANR	3938139	IdentifierDecl	delta_y = 0		3938109	0					
ANR	3938140	IdentifierDeclType	ut32		3938109	0					
ANR	3938141	Identifier	delta_y		3938109	1					
ANR	3938142	AssignmentExpression	delta_y = 0		3938109	2		=			
ANR	3938143	Identifier	delta_y		3938109	0					
ANR	3938144	PrimaryExpression	0		3938109	1					
ANR	3938145	IdentifierDecl	delta_txt_y = 0		3938109	1					
ANR	3938146	IdentifierDeclType	ut32		3938109	0					
ANR	3938147	Identifier	delta_txt_y		3938109	1					
ANR	3938148	AssignmentExpression	delta_txt_y = 0		3938109	2		=			
ANR	3938149	Identifier	delta_txt_y		3938109	0					
ANR	3938150	PrimaryExpression	0		3938109	1					
ANR	3938151	IdentifierDeclStatement	char title [ TITLE_LEN ] ;	334:1:8525:8546	3938109	3	True				
ANR	3938152	IdentifierDecl	title [ TITLE_LEN ]		3938109	0					
ANR	3938153	IdentifierDeclType	char [ TITLE_LEN ]		3938109	0					
ANR	3938154	Identifier	title		3938109	1					
ANR	3938155	Identifier	TITLE_LEN		3938109	2					
ANR	3938156	IdentifierDeclStatement	char * body ;	335:1:8549:8559	3938109	4	True				
ANR	3938157	IdentifierDecl	* body		3938109	0					
ANR	3938158	IdentifierDeclType	char *		3938109	0					
ANR	3938159	Identifier	body		3938109	1					
ANR	3938160	IdentifierDeclStatement	"int x , y ;"	336:1:8562:8570	3938109	5	True				
ANR	3938161	IdentifierDecl	x		3938109	0					
ANR	3938162	IdentifierDeclType	int		3938109	0					
ANR	3938163	Identifier	x		3938109	1					
ANR	3938164	IdentifierDecl	y		3938109	1					
ANR	3938165	IdentifierDeclType	int		3938109	0					
ANR	3938166	Identifier	y		3938109	1					
ANR	3938167	IdentifierDeclStatement	int color = n -> difftype ;	337:1:8573:8596	3938109	6	True				
ANR	3938168	IdentifierDecl	color = n -> difftype		3938109	0					
ANR	3938169	IdentifierDeclType	int		3938109	0					
ANR	3938170	Identifier	color		3938109	1					
ANR	3938171	AssignmentExpression	color = n -> difftype		3938109	2		=			
ANR	3938172	Identifier	color		3938109	0					
ANR	3938173	PtrMemberAccess	n -> difftype		3938109	1					
ANR	3938174	Identifier	n		3938109	0					
ANR	3938175	Identifier	difftype		3938109	1					
ANR	3938176	IdentifierDeclStatement	const bool showTitle = g -> show_node_titles ;	338:1:8599:8641	3938109	7	True				
ANR	3938177	IdentifierDecl	showTitle = g -> show_node_titles		3938109	0					
ANR	3938178	IdentifierDeclType	const bool		3938109	0					
ANR	3938179	Identifier	showTitle		3938109	1					
ANR	3938180	AssignmentExpression	showTitle = g -> show_node_titles		3938109	2		=			
ANR	3938181	Identifier	showTitle		3938109	0					
ANR	3938182	PtrMemberAccess	g -> show_node_titles		3938109	1					
ANR	3938183	Identifier	g		3938109	0					
ANR	3938184	Identifier	show_node_titles		3938109	1					
ANR	3938185	IdentifierDeclStatement	const bool showBody = g -> show_node_body ;	339:1:8644:8683	3938109	8	True				
ANR	3938186	IdentifierDecl	showBody = g -> show_node_body		3938109	0					
ANR	3938187	IdentifierDeclType	const bool		3938109	0					
ANR	3938188	Identifier	showBody		3938109	1					
ANR	3938189	AssignmentExpression	showBody = g -> show_node_body		3938109	2		=			
ANR	3938190	Identifier	showBody		3938109	0					
ANR	3938191	PtrMemberAccess	g -> show_node_body		3938109	1					
ANR	3938192	Identifier	g		3938109	0					
ANR	3938193	Identifier	show_node_body		3938109	1					
ANR	3938194	ExpressionStatement	x = n -> x + g -> can -> sx	341:1:8687:8708	3938109	9	True				
ANR	3938195	AssignmentExpression	x = n -> x + g -> can -> sx		3938109	0		=			
ANR	3938196	Identifier	x		3938109	0					
ANR	3938197	AdditiveExpression	n -> x + g -> can -> sx		3938109	1		+			
ANR	3938198	PtrMemberAccess	n -> x		3938109	0					
ANR	3938199	Identifier	n		3938109	0					
ANR	3938200	Identifier	x		3938109	1					
ANR	3938201	PtrMemberAccess	g -> can -> sx		3938109	1					
ANR	3938202	PtrMemberAccess	g -> can		3938109	0					
ANR	3938203	Identifier	g		3938109	0					
ANR	3938204	Identifier	can		3938109	1					
ANR	3938205	Identifier	sx		3938109	1					
ANR	3938206	ExpressionStatement	y = n -> y + g -> can -> sy	342:1:8711:8732	3938109	10	True				
ANR	3938207	AssignmentExpression	y = n -> y + g -> can -> sy		3938109	0		=			
ANR	3938208	Identifier	y		3938109	0					
ANR	3938209	AdditiveExpression	n -> y + g -> can -> sy		3938109	1		+			
ANR	3938210	PtrMemberAccess	n -> y		3938109	0					
ANR	3938211	Identifier	n		3938109	0					
ANR	3938212	Identifier	y		3938109	1					
ANR	3938213	PtrMemberAccess	g -> can -> sy		3938109	1					
ANR	3938214	PtrMemberAccess	g -> can		3938109	0					
ANR	3938215	Identifier	g		3938109	0					
ANR	3938216	Identifier	can		3938109	1					
ANR	3938217	Identifier	sy		3938109	1					
ANR	3938218	IfStatement	if ( x + MARGIN_TEXT_X < 0 )		3938109	11					
ANR	3938219	Condition	x + MARGIN_TEXT_X < 0	343:5:8739:8759	3938109	0	True				
ANR	3938220	RelationalExpression	x + MARGIN_TEXT_X < 0		3938109	0		<			
ANR	3938221	AdditiveExpression	x + MARGIN_TEXT_X		3938109	0		+			
ANR	3938222	Identifier	x		3938109	0					
ANR	3938223	Identifier	MARGIN_TEXT_X		3938109	1					
ANR	3938224	PrimaryExpression	0		3938109	1					
ANR	3938225	CompoundStatement		14:28:345:345	3938109	1					
ANR	3938226	ExpressionStatement	delta_x = - ( x + MARGIN_TEXT_X )	344:2:8766:8796	3938109	0	True				
ANR	3938227	AssignmentExpression	delta_x = - ( x + MARGIN_TEXT_X )		3938109	0		=			
ANR	3938228	Identifier	delta_x		3938109	0					
ANR	3938229	UnaryOperationExpression	- ( x + MARGIN_TEXT_X )		3938109	1					
ANR	3938230	UnaryOperator	-		3938109	0					
ANR	3938231	AdditiveExpression	x + MARGIN_TEXT_X		3938109	1		+			
ANR	3938232	Identifier	x		3938109	0					
ANR	3938233	Identifier	MARGIN_TEXT_X		3938109	1					
ANR	3938234	IfStatement	if ( x + n -> w < - MARGIN_TEXT_X )		3938109	12					
ANR	3938235	Condition	x + n -> w < - MARGIN_TEXT_X	346:5:8806:8830	3938109	0	True				
ANR	3938236	RelationalExpression	x + n -> w < - MARGIN_TEXT_X		3938109	0		<			
ANR	3938237	AdditiveExpression	x + n -> w		3938109	0		+			
ANR	3938238	Identifier	x		3938109	0					
ANR	3938239	PtrMemberAccess	n -> w		3938109	1					
ANR	3938240	Identifier	n		3938109	0					
ANR	3938241	Identifier	w		3938109	1					
ANR	3938242	UnaryOperationExpression	- MARGIN_TEXT_X		3938109	1					
ANR	3938243	UnaryOperator	-		3938109	0					
ANR	3938244	Identifier	MARGIN_TEXT_X		3938109	1					
ANR	3938245	CompoundStatement		17:32:416:416	3938109	1					
ANR	3938246	ReturnStatement	return ;	347:2:8837:8843	3938109	0	True				
ANR	3938247	IfStatement	if ( y < - 1 )		3938109	13					
ANR	3938248	Condition	y < - 1	349:5:8853:8858	3938109	0	True				
ANR	3938249	RelationalExpression	y < - 1		3938109	0		<			
ANR	3938250	Identifier	y		3938109	0					
ANR	3938251	UnaryOperationExpression	- 1		3938109	1					
ANR	3938252	UnaryOperator	-		3938109	0					
ANR	3938253	PrimaryExpression	1		3938109	1					
ANR	3938254	CompoundStatement		20:13:444:444	3938109	1					
ANR	3938255	ExpressionStatement	"delta_y = R_MIN ( n -> h - BORDER_HEIGHT - 1 , - y - MARGIN_TEXT_Y )"	350:2:8865:8927	3938109	0	True				
ANR	3938256	AssignmentExpression	"delta_y = R_MIN ( n -> h - BORDER_HEIGHT - 1 , - y - MARGIN_TEXT_Y )"		3938109	0		=			
ANR	3938257	Identifier	delta_y		3938109	0					
ANR	3938258	CallExpression	"R_MIN ( n -> h - BORDER_HEIGHT - 1 , - y - MARGIN_TEXT_Y )"		3938109	1					
ANR	3938259	Callee	R_MIN		3938109	0					
ANR	3938260	Identifier	R_MIN		3938109	0					
ANR	3938261	ArgumentList	n -> h - BORDER_HEIGHT - 1		3938109	1					
ANR	3938262	Argument	n -> h - BORDER_HEIGHT - 1		3938109	0					
ANR	3938263	AdditiveExpression	n -> h - BORDER_HEIGHT - 1		3938109	0		-			
ANR	3938264	PtrMemberAccess	n -> h		3938109	0					
ANR	3938265	Identifier	n		3938109	0					
ANR	3938266	Identifier	h		3938109	1					
ANR	3938267	AdditiveExpression	BORDER_HEIGHT - 1		3938109	1		-			
ANR	3938268	Identifier	BORDER_HEIGHT		3938109	0					
ANR	3938269	PrimaryExpression	1		3938109	1					
ANR	3938270	Argument	- y - MARGIN_TEXT_Y		3938109	1					
ANR	3938271	AdditiveExpression	- y - MARGIN_TEXT_Y		3938109	0		-			
ANR	3938272	UnaryOperationExpression	- y		3938109	0					
ANR	3938273	UnaryOperator	-		3938109	0					
ANR	3938274	Identifier	y		3938109	1					
ANR	3938275	Identifier	MARGIN_TEXT_Y		3938109	1					
ANR	3938276	IfStatement	if ( showTitle )		3938109	14					
ANR	3938277	Condition	showTitle	353:5:8960:8968	3938109	0	True				
ANR	3938278	Identifier	showTitle		3938109	0					
ANR	3938279	CompoundStatement		24:16:554:554	3938109	1					
ANR	3938280	IfStatement	if ( cur )		3938109	0					
ANR	3938281	Condition	cur	354:6:8979:8981	3938109	0	True				
ANR	3938282	Identifier	cur		3938109	0					
ANR	3938283	CompoundStatement		25:11:567:567	3938109	1					
ANR	3938284	ExpressionStatement	"snprintf ( title , sizeof ( title ) - 1 , ""[%s]"" , n -> title )"	355:3:8989:9043	3938109	0	True				
ANR	3938285	CallExpression	"snprintf ( title , sizeof ( title ) - 1 , ""[%s]"" , n -> title )"		3938109	0					
ANR	3938286	Callee	snprintf		3938109	0					
ANR	3938287	Identifier	snprintf		3938109	0					
ANR	3938288	ArgumentList	title		3938109	1					
ANR	3938289	Argument	title		3938109	0					
ANR	3938290	Identifier	title		3938109	0					
ANR	3938291	Argument	sizeof ( title ) - 1		3938109	1					
ANR	3938292	AdditiveExpression	sizeof ( title ) - 1		3938109	0		-			
ANR	3938293	SizeofExpression	sizeof ( title )		3938109	0					
ANR	3938294	Sizeof	sizeof		3938109	0					
ANR	3938295	SizeofOperand	title		3938109	1					
ANR	3938296	PrimaryExpression	1		3938109	1					
ANR	3938297	Argument	"""[%s]"""		3938109	2					
ANR	3938298	PrimaryExpression	"""[%s]"""		3938109	0					
ANR	3938299	Argument	n -> title		3938109	3					
ANR	3938300	PtrMemberAccess	n -> title		3938109	0					
ANR	3938301	Identifier	n		3938109	0					
ANR	3938302	Identifier	title		3938109	1					
ANR	3938303	ElseStatement	else		3938109	0					
ANR	3938304	CompoundStatement		28:3:642:688	3938109	0					
ANR	3938305	IdentifierDeclStatement	"char * color = g -> can -> color ? Color_RESET : """" ;"	357:3:9059:9105	3938109	0	True				
ANR	3938306	IdentifierDecl	"* color = g -> can -> color ? Color_RESET : """""		3938109	0					
ANR	3938307	IdentifierDeclType	char *		3938109	0					
ANR	3938308	Identifier	color		3938109	1					
ANR	3938309	AssignmentExpression	"* color = g -> can -> color ? Color_RESET : """""		3938109	2		=			
ANR	3938310	Identifier	color		3938109	0					
ANR	3938311	ConditionalExpression	"g -> can -> color ? Color_RESET : """""		3938109	1					
ANR	3938312	Condition	g -> can -> color		3938109	0					
ANR	3938313	PtrMemberAccess	g -> can -> color		3938109	0					
ANR	3938314	PtrMemberAccess	g -> can		3938109	0					
ANR	3938315	Identifier	g		3938109	0					
ANR	3938316	Identifier	can		3938109	1					
ANR	3938317	Identifier	color		3938109	1					
ANR	3938318	Identifier	Color_RESET		3938109	1					
ANR	3938319	PrimaryExpression	""""""		3938109	2					
ANR	3938320	ExpressionStatement	"snprintf ( title , sizeof ( title ) - 1 , "" %s%s "" , color , n -> title )"	358:3:9110:9173	3938109	1	True				
ANR	3938321	CallExpression	"snprintf ( title , sizeof ( title ) - 1 , "" %s%s "" , color , n -> title )"		3938109	0					
ANR	3938322	Callee	snprintf		3938109	0					
ANR	3938323	Identifier	snprintf		3938109	0					
ANR	3938324	ArgumentList	title		3938109	1					
ANR	3938325	Argument	title		3938109	0					
ANR	3938326	Identifier	title		3938109	0					
ANR	3938327	Argument	sizeof ( title ) - 1		3938109	1					
ANR	3938328	AdditiveExpression	sizeof ( title ) - 1		3938109	0		-			
ANR	3938329	SizeofExpression	sizeof ( title )		3938109	0					
ANR	3938330	Sizeof	sizeof		3938109	0					
ANR	3938331	SizeofOperand	title		3938109	1					
ANR	3938332	PrimaryExpression	1		3938109	1					
ANR	3938333	Argument	""" %s%s """		3938109	2					
ANR	3938334	PrimaryExpression	""" %s%s """		3938109	0					
ANR	3938335	Argument	color		3938109	3					
ANR	3938336	Identifier	color		3938109	0					
ANR	3938337	Argument	n -> title		3938109	4					
ANR	3938338	PtrMemberAccess	n -> title		3938109	0					
ANR	3938339	Identifier	n		3938109	0					
ANR	3938340	Identifier	title		3938109	1					
ANR	3938341	ExpressionStatement	"append_shortcut ( g , title , n -> title , sizeof ( title ) - strlen ( title ) - 1 )"	359:3:9178:9251	3938109	2	True				
ANR	3938342	CallExpression	"append_shortcut ( g , title , n -> title , sizeof ( title ) - strlen ( title ) - 1 )"		3938109	0					
ANR	3938343	Callee	append_shortcut		3938109	0					
ANR	3938344	Identifier	append_shortcut		3938109	0					
ANR	3938345	ArgumentList	g		3938109	1					
ANR	3938346	Argument	g		3938109	0					
ANR	3938347	Identifier	g		3938109	0					
ANR	3938348	Argument	title		3938109	1					
ANR	3938349	Identifier	title		3938109	0					
ANR	3938350	Argument	n -> title		3938109	2					
ANR	3938351	PtrMemberAccess	n -> title		3938109	0					
ANR	3938352	Identifier	n		3938109	0					
ANR	3938353	Identifier	title		3938109	1					
ANR	3938354	Argument	sizeof ( title ) - strlen ( title ) - 1		3938109	3					
ANR	3938355	AdditiveExpression	sizeof ( title ) - strlen ( title ) - 1		3938109	0		-			
ANR	3938356	SizeofExpression	sizeof ( title )		3938109	0					
ANR	3938357	Sizeof	sizeof		3938109	0					
ANR	3938358	SizeofOperand	title		3938109	1					
ANR	3938359	AdditiveExpression	strlen ( title ) - 1		3938109	1		-			
ANR	3938360	CallExpression	strlen ( title )		3938109	0					
ANR	3938361	Callee	strlen		3938109	0					
ANR	3938362	Identifier	strlen		3938109	0					
ANR	3938363	ArgumentList	title		3938109	1					
ANR	3938364	Argument	title		3938109	0					
ANR	3938365	Identifier	title		3938109	0					
ANR	3938366	PrimaryExpression	1		3938109	1					
ANR	3938367	IfStatement	"if ( ( delta_x < strlen ( title ) ) && G ( n -> x + MARGIN_TEXT_X + delta_x , n -> y + 1 ) )"		3938109	1					
ANR	3938368	Condition	"( delta_x < strlen ( title ) ) && G ( n -> x + MARGIN_TEXT_X + delta_x , n -> y + 1 )"	361:6:9263:9336	3938109	0	True				
ANR	3938369	AndExpression	"( delta_x < strlen ( title ) ) && G ( n -> x + MARGIN_TEXT_X + delta_x , n -> y + 1 )"		3938109	0		&&			
ANR	3938370	RelationalExpression	delta_x < strlen ( title )		3938109	0		<			
ANR	3938371	Identifier	delta_x		3938109	0					
ANR	3938372	CallExpression	strlen ( title )		3938109	1					
ANR	3938373	Callee	strlen		3938109	0					
ANR	3938374	Identifier	strlen		3938109	0					
ANR	3938375	ArgumentList	title		3938109	1					
ANR	3938376	Argument	title		3938109	0					
ANR	3938377	Identifier	title		3938109	0					
ANR	3938378	CallExpression	"G ( n -> x + MARGIN_TEXT_X + delta_x , n -> y + 1 )"		3938109	1					
ANR	3938379	Callee	G		3938109	0					
ANR	3938380	Identifier	G		3938109	0					
ANR	3938381	ArgumentList	n -> x + MARGIN_TEXT_X + delta_x		3938109	1					
ANR	3938382	Argument	n -> x + MARGIN_TEXT_X + delta_x		3938109	0					
ANR	3938383	AdditiveExpression	n -> x + MARGIN_TEXT_X + delta_x		3938109	0		+			
ANR	3938384	PtrMemberAccess	n -> x		3938109	0					
ANR	3938385	Identifier	n		3938109	0					
ANR	3938386	Identifier	x		3938109	1					
ANR	3938387	AdditiveExpression	MARGIN_TEXT_X + delta_x		3938109	1		+			
ANR	3938388	Identifier	MARGIN_TEXT_X		3938109	0					
ANR	3938389	Identifier	delta_x		3938109	1					
ANR	3938390	Argument	n -> y + 1		3938109	1					
ANR	3938391	AdditiveExpression	n -> y + 1		3938109	0		+			
ANR	3938392	PtrMemberAccess	n -> y		3938109	0					
ANR	3938393	Identifier	n		3938109	0					
ANR	3938394	Identifier	y		3938109	1					
ANR	3938395	PrimaryExpression	1		3938109	1					
ANR	3938396	CompoundStatement		33:3:927:998	3938109	1					
ANR	3938397	IdentifierDeclStatement	"char * res = r_str_ansi_crop ( title , delta_x , 0 , n -> w - BORDER_WIDTH , 1 ) ;"	362:3:9344:9415	3938109	0	True				
ANR	3938398	IdentifierDecl	"* res = r_str_ansi_crop ( title , delta_x , 0 , n -> w - BORDER_WIDTH , 1 )"		3938109	0					
ANR	3938399	IdentifierDeclType	char *		3938109	0					
ANR	3938400	Identifier	res		3938109	1					
ANR	3938401	AssignmentExpression	"* res = r_str_ansi_crop ( title , delta_x , 0 , n -> w - BORDER_WIDTH , 1 )"		3938109	2		=			
ANR	3938402	Identifier	res		3938109	0					
ANR	3938403	CallExpression	"r_str_ansi_crop ( title , delta_x , 0 , n -> w - BORDER_WIDTH , 1 )"		3938109	1					
ANR	3938404	Callee	r_str_ansi_crop		3938109	0					
ANR	3938405	Identifier	r_str_ansi_crop		3938109	0					
ANR	3938406	ArgumentList	title		3938109	1					
ANR	3938407	Argument	title		3938109	0					
ANR	3938408	Identifier	title		3938109	0					
ANR	3938409	Argument	delta_x		3938109	1					
ANR	3938410	Identifier	delta_x		3938109	0					
ANR	3938411	Argument	0		3938109	2					
ANR	3938412	PrimaryExpression	0		3938109	0					
ANR	3938413	Argument	n -> w - BORDER_WIDTH		3938109	3					
ANR	3938414	AdditiveExpression	n -> w - BORDER_WIDTH		3938109	0		-			
ANR	3938415	PtrMemberAccess	n -> w		3938109	0					
ANR	3938416	Identifier	n		3938109	0					
ANR	3938417	Identifier	w		3938109	1					
ANR	3938418	Identifier	BORDER_WIDTH		3938109	1					
ANR	3938419	Argument	1		3938109	4					
ANR	3938420	PrimaryExpression	1		3938109	0					
ANR	3938421	ExpressionStatement	W ( res )	363:3:9420:9427	3938109	1	True				
ANR	3938422	CallExpression	W ( res )		3938109	0					
ANR	3938423	Callee	W		3938109	0					
ANR	3938424	Identifier	W		3938109	0					
ANR	3938425	ArgumentList	res		3938109	1					
ANR	3938426	Argument	res		3938109	0					
ANR	3938427	Identifier	res		3938109	0					
ANR	3938428	ExpressionStatement	free ( res )	364:3:9432:9442	3938109	2	True				
ANR	3938429	CallExpression	free ( res )		3938109	0					
ANR	3938430	Callee	free		3938109	0					
ANR	3938431	Identifier	free		3938109	0					
ANR	3938432	ArgumentList	res		3938109	1					
ANR	3938433	Argument	res		3938109	0					
ANR	3938434	Identifier	res		3938109	0					
ANR	3938435	IfStatement	if ( g -> zoom > ZOOM_DEFAULT )		3938109	15					
ANR	3938436	Condition	g -> zoom > ZOOM_DEFAULT	369:5:9479:9500	3938109	0	True				
ANR	3938437	RelationalExpression	g -> zoom > ZOOM_DEFAULT		3938109	0		>			
ANR	3938438	PtrMemberAccess	g -> zoom		3938109	0					
ANR	3938439	Identifier	g		3938109	0					
ANR	3938440	Identifier	zoom		3938109	1					
ANR	3938441	Identifier	ZOOM_DEFAULT		3938109	1					
ANR	3938442	CompoundStatement		40:29:1086:1086	3938109	1					
ANR	3938443	ExpressionStatement	center_x = ( g -> zoom - ZOOM_DEFAULT ) / 10	370:2:9507:9547	3938109	0	True				
ANR	3938444	AssignmentExpression	center_x = ( g -> zoom - ZOOM_DEFAULT ) / 10		3938109	0		=			
ANR	3938445	Identifier	center_x		3938109	0					
ANR	3938446	MultiplicativeExpression	( g -> zoom - ZOOM_DEFAULT ) / 10		3938109	1		/			
ANR	3938447	AdditiveExpression	g -> zoom - ZOOM_DEFAULT		3938109	0		-			
ANR	3938448	PtrMemberAccess	g -> zoom		3938109	0					
ANR	3938449	Identifier	g		3938109	0					
ANR	3938450	Identifier	zoom		3938109	1					
ANR	3938451	Identifier	ZOOM_DEFAULT		3938109	1					
ANR	3938452	PrimaryExpression	10		3938109	1					
ANR	3938453	ExpressionStatement	center_y = ( g -> zoom - ZOOM_DEFAULT ) / 30	371:2:9551:9591	3938109	1	True				
ANR	3938454	AssignmentExpression	center_y = ( g -> zoom - ZOOM_DEFAULT ) / 30		3938109	0		=			
ANR	3938455	Identifier	center_y		3938109	0					
ANR	3938456	MultiplicativeExpression	( g -> zoom - ZOOM_DEFAULT ) / 30		3938109	1		/			
ANR	3938457	AdditiveExpression	g -> zoom - ZOOM_DEFAULT		3938109	0		-			
ANR	3938458	PtrMemberAccess	g -> zoom		3938109	0					
ANR	3938459	Identifier	g		3938109	0					
ANR	3938460	Identifier	zoom		3938109	1					
ANR	3938461	Identifier	ZOOM_DEFAULT		3938109	1					
ANR	3938462	PrimaryExpression	30		3938109	1					
ANR	3938463	ExpressionStatement	"delta_txt_x = R_MIN ( delta_x , center_x )"	372:2:9595:9634	3938109	2	True				
ANR	3938464	AssignmentExpression	"delta_txt_x = R_MIN ( delta_x , center_x )"		3938109	0		=			
ANR	3938465	Identifier	delta_txt_x		3938109	0					
ANR	3938466	CallExpression	"R_MIN ( delta_x , center_x )"		3938109	1					
ANR	3938467	Callee	R_MIN		3938109	0					
ANR	3938468	Identifier	R_MIN		3938109	0					
ANR	3938469	ArgumentList	delta_x		3938109	1					
ANR	3938470	Argument	delta_x		3938109	0					
ANR	3938471	Identifier	delta_x		3938109	0					
ANR	3938472	Argument	center_x		3938109	1					
ANR	3938473	Identifier	center_x		3938109	0					
ANR	3938474	ExpressionStatement	"delta_txt_y = R_MIN ( delta_y , center_y )"	373:2:9638:9677	3938109	3	True				
ANR	3938475	AssignmentExpression	"delta_txt_y = R_MIN ( delta_y , center_y )"		3938109	0		=			
ANR	3938476	Identifier	delta_txt_y		3938109	0					
ANR	3938477	CallExpression	"R_MIN ( delta_y , center_y )"		3938109	1					
ANR	3938478	Callee	R_MIN		3938109	0					
ANR	3938479	Identifier	R_MIN		3938109	0					
ANR	3938480	ArgumentList	delta_y		3938109	1					
ANR	3938481	Argument	delta_y		3938109	0					
ANR	3938482	Identifier	delta_y		3938109	0					
ANR	3938483	Argument	center_y		3938109	1					
ANR	3938484	Identifier	center_y		3938109	0					
ANR	3938485	IfStatement	if ( showBody )		3938109	16					
ANR	3938486	Condition	showBody	375:5:9687:9694	3938109	0	True				
ANR	3938487	Identifier	showBody		3938109	0					
ANR	3938488	CompoundStatement		46:15:1280:1280	3938109	1					
ANR	3938489	IfStatement	"if ( G ( n -> x + MARGIN_TEXT_X + delta_x + center_x - delta_txt_x , n -> y + MARGIN_TEXT_Y + delta_y + center_y - delta_txt_y ) )"		3938109	0					
ANR	3938490	Condition	"G ( n -> x + MARGIN_TEXT_X + delta_x + center_x - delta_txt_x , n -> y + MARGIN_TEXT_Y + delta_y + center_y - delta_txt_y )"	376:6:9705:9825	3938109	0	True				
ANR	3938491	CallExpression	"G ( n -> x + MARGIN_TEXT_X + delta_x + center_x - delta_txt_x , n -> y + MARGIN_TEXT_Y + delta_y + center_y - delta_txt_y )"		3938109	0					
ANR	3938492	Callee	G		3938109	0					
ANR	3938493	Identifier	G		3938109	0					
ANR	3938494	ArgumentList	n -> x + MARGIN_TEXT_X + delta_x + center_x - delta_txt_x		3938109	1					
ANR	3938495	Argument	n -> x + MARGIN_TEXT_X + delta_x + center_x - delta_txt_x		3938109	0					
ANR	3938496	AdditiveExpression	n -> x + MARGIN_TEXT_X + delta_x + center_x - delta_txt_x		3938109	0		+			
ANR	3938497	PtrMemberAccess	n -> x		3938109	0					
ANR	3938498	Identifier	n		3938109	0					
ANR	3938499	Identifier	x		3938109	1					
ANR	3938500	AdditiveExpression	MARGIN_TEXT_X + delta_x + center_x - delta_txt_x		3938109	1		+			
ANR	3938501	Identifier	MARGIN_TEXT_X		3938109	0					
ANR	3938502	AdditiveExpression	delta_x + center_x - delta_txt_x		3938109	1		+			
ANR	3938503	Identifier	delta_x		3938109	0					
ANR	3938504	AdditiveExpression	center_x - delta_txt_x		3938109	1		-			
ANR	3938505	Identifier	center_x		3938109	0					
ANR	3938506	Identifier	delta_txt_x		3938109	1					
ANR	3938507	Argument	n -> y + MARGIN_TEXT_Y + delta_y + center_y - delta_txt_y		3938109	1					
ANR	3938508	AdditiveExpression	n -> y + MARGIN_TEXT_Y + delta_y + center_y - delta_txt_y		3938109	0		+			
ANR	3938509	PtrMemberAccess	n -> y		3938109	0					
ANR	3938510	Identifier	n		3938109	0					
ANR	3938511	Identifier	y		3938109	1					
ANR	3938512	AdditiveExpression	MARGIN_TEXT_Y + delta_y + center_y - delta_txt_y		3938109	1		+			
ANR	3938513	Identifier	MARGIN_TEXT_Y		3938109	0					
ANR	3938514	AdditiveExpression	delta_y + center_y - delta_txt_y		3938109	1		+			
ANR	3938515	Identifier	delta_y		3938109	0					
ANR	3938516	AdditiveExpression	center_y - delta_txt_y		3938109	1		-			
ANR	3938517	Identifier	center_y		3938109	0					
ANR	3938518	Identifier	delta_txt_y		3938109	1					
ANR	3938519	CompoundStatement		51:3:1538:1598	3938109	1					
ANR	3938520	IdentifierDeclStatement	ut32 body_x = center_x >= delta_x ? 0 : delta_x - center_x ;	378:3:9833:9889	3938109	0	True				
ANR	3938521	IdentifierDecl	body_x = center_x >= delta_x ? 0 : delta_x - center_x		3938109	0					
ANR	3938522	IdentifierDeclType	ut32		3938109	0					
ANR	3938523	Identifier	body_x		3938109	1					
ANR	3938524	AssignmentExpression	body_x = center_x >= delta_x ? 0 : delta_x - center_x		3938109	2		=			
ANR	3938525	Identifier	body_x		3938109	0					
ANR	3938526	ConditionalExpression	center_x >= delta_x ? 0 : delta_x - center_x		3938109	1					
ANR	3938527	Condition	center_x >= delta_x		3938109	0					
ANR	3938528	RelationalExpression	center_x >= delta_x		3938109	0		>=			
ANR	3938529	Identifier	center_x		3938109	0					
ANR	3938530	Identifier	delta_x		3938109	1					
ANR	3938531	PrimaryExpression	0		3938109	1					
ANR	3938532	AdditiveExpression	delta_x - center_x		3938109	2		-			
ANR	3938533	Identifier	delta_x		3938109	0					
ANR	3938534	Identifier	center_x		3938109	1					
ANR	3938535	IdentifierDeclStatement	ut32 body_y = center_y >= delta_y ? 0 : delta_y - center_y ;	379:3:9894:9950	3938109	1	True				
ANR	3938536	IdentifierDecl	body_y = center_y >= delta_y ? 0 : delta_y - center_y		3938109	0					
ANR	3938537	IdentifierDeclType	ut32		3938109	0					
ANR	3938538	Identifier	body_y		3938109	1					
ANR	3938539	AssignmentExpression	body_y = center_y >= delta_y ? 0 : delta_y - center_y		3938109	2		=			
ANR	3938540	Identifier	body_y		3938109	0					
ANR	3938541	ConditionalExpression	center_y >= delta_y ? 0 : delta_y - center_y		3938109	1					
ANR	3938542	Condition	center_y >= delta_y		3938109	0					
ANR	3938543	RelationalExpression	center_y >= delta_y		3938109	0		>=			
ANR	3938544	Identifier	center_y		3938109	0					
ANR	3938545	Identifier	delta_y		3938109	1					
ANR	3938546	PrimaryExpression	0		3938109	1					
ANR	3938547	AdditiveExpression	delta_y - center_y		3938109	2		-			
ANR	3938548	Identifier	delta_y		3938109	0					
ANR	3938549	Identifier	center_y		3938109	1					
ANR	3938550	IdentifierDeclStatement	ut32 body_h = BORDER_HEIGHT >= n -> h ? 1 : n -> h - BORDER_HEIGHT ;	380:3:9955:10015	3938109	2	True				
ANR	3938551	IdentifierDecl	body_h = BORDER_HEIGHT >= n -> h ? 1 : n -> h - BORDER_HEIGHT		3938109	0					
ANR	3938552	IdentifierDeclType	ut32		3938109	0					
ANR	3938553	Identifier	body_h		3938109	1					
ANR	3938554	AssignmentExpression	body_h = BORDER_HEIGHT >= n -> h ? 1 : n -> h - BORDER_HEIGHT		3938109	2		=			
ANR	3938555	Identifier	body_h		3938109	0					
ANR	3938556	ConditionalExpression	BORDER_HEIGHT >= n -> h ? 1 : n -> h - BORDER_HEIGHT		3938109	1					
ANR	3938557	Condition	BORDER_HEIGHT >= n -> h		3938109	0					
ANR	3938558	RelationalExpression	BORDER_HEIGHT >= n -> h		3938109	0		>=			
ANR	3938559	Identifier	BORDER_HEIGHT		3938109	0					
ANR	3938560	PtrMemberAccess	n -> h		3938109	1					
ANR	3938561	Identifier	n		3938109	0					
ANR	3938562	Identifier	h		3938109	1					
ANR	3938563	PrimaryExpression	1		3938109	1					
ANR	3938564	AdditiveExpression	n -> h - BORDER_HEIGHT		3938109	2		-			
ANR	3938565	PtrMemberAccess	n -> h		3938109	0					
ANR	3938566	Identifier	n		3938109	0					
ANR	3938567	Identifier	h		3938109	1					
ANR	3938568	Identifier	BORDER_HEIGHT		3938109	1					
ANR	3938569	IfStatement	if ( g -> zoom < ZOOM_DEFAULT )		3938109	3					
ANR	3938570	Condition	g -> zoom < ZOOM_DEFAULT	382:7:10025:10046	3938109	0	True				
ANR	3938571	RelationalExpression	g -> zoom < ZOOM_DEFAULT		3938109	0		<			
ANR	3938572	PtrMemberAccess	g -> zoom		3938109	0					
ANR	3938573	Identifier	g		3938109	0					
ANR	3938574	Identifier	zoom		3938109	1					
ANR	3938575	Identifier	ZOOM_DEFAULT		3938109	1					
ANR	3938576	CompoundStatement		53:31:1632:1632	3938109	1					
ANR	3938577	ExpressionStatement	body_h --	383:4:10055:10063	3938109	0	True				
ANR	3938578	PostIncDecOperationExpression	body_h --		3938109	0					
ANR	3938579	Identifier	body_h		3938109	0					
ANR	3938580	IncDec	--		3938109	1					
ANR	3938581	IfStatement	if ( body_y + 1 <= body_h )		3938109	4					
ANR	3938582	Condition	body_y + 1 <= body_h	385:7:10077:10096	3938109	0	True				
ANR	3938583	RelationalExpression	body_y + 1 <= body_h		3938109	0		<=			
ANR	3938584	AdditiveExpression	body_y + 1		3938109	0		+			
ANR	3938585	Identifier	body_y		3938109	0					
ANR	3938586	PrimaryExpression	1		3938109	1					
ANR	3938587	Identifier	body_h		3938109	1					
ANR	3938588	CompoundStatement		56:29:1682:1682	3938109	1					
ANR	3938589	ExpressionStatement	"body = r_str_ansi_crop ( n -> body , body_x , body_y , n -> w - BORDER_WIDTH , body_h )"	386:4:10105:10200	3938109	0	True				
ANR	3938590	AssignmentExpression	"body = r_str_ansi_crop ( n -> body , body_x , body_y , n -> w - BORDER_WIDTH , body_h )"		3938109	0		=			
ANR	3938591	Identifier	body		3938109	0					
ANR	3938592	CallExpression	"r_str_ansi_crop ( n -> body , body_x , body_y , n -> w - BORDER_WIDTH , body_h )"		3938109	1					
ANR	3938593	Callee	r_str_ansi_crop		3938109	0					
ANR	3938594	Identifier	r_str_ansi_crop		3938109	0					
ANR	3938595	ArgumentList	n -> body		3938109	1					
ANR	3938596	Argument	n -> body		3938109	0					
ANR	3938597	PtrMemberAccess	n -> body		3938109	0					
ANR	3938598	Identifier	n		3938109	0					
ANR	3938599	Identifier	body		3938109	1					
ANR	3938600	Argument	body_x		3938109	1					
ANR	3938601	Identifier	body_x		3938109	0					
ANR	3938602	Argument	body_y		3938109	2					
ANR	3938603	Identifier	body_y		3938109	0					
ANR	3938604	Argument	n -> w - BORDER_WIDTH		3938109	3					
ANR	3938605	AdditiveExpression	n -> w - BORDER_WIDTH		3938109	0		-			
ANR	3938606	PtrMemberAccess	n -> w		3938109	0					
ANR	3938607	Identifier	n		3938109	0					
ANR	3938608	Identifier	w		3938109	1					
ANR	3938609	Identifier	BORDER_WIDTH		3938109	1					
ANR	3938610	Argument	body_h		3938109	4					
ANR	3938611	Identifier	body_h		3938109	0					
ANR	3938612	IfStatement	if ( body )		3938109	1					
ANR	3938613	Condition	body	390:8:10210:10213	3938109	0	True				
ANR	3938614	Identifier	body		3938109	0					
ANR	3938615	CompoundStatement		61:14:1799:1799	3938109	1					
ANR	3938616	ExpressionStatement	W ( body )	391:5:10223:10231	3938109	0	True				
ANR	3938617	CallExpression	W ( body )		3938109	0					
ANR	3938618	Callee	W		3938109	0					
ANR	3938619	Identifier	W		3938109	0					
ANR	3938620	ArgumentList	body		3938109	1					
ANR	3938621	Argument	body		3938109	0					
ANR	3938622	Identifier	body		3938109	0					
ANR	3938623	IfStatement	if ( g -> zoom < ZOOM_DEFAULT )		3938109	1					
ANR	3938624	Condition	g -> zoom < ZOOM_DEFAULT	392:9:10242:10263	3938109	0	True				
ANR	3938625	RelationalExpression	g -> zoom < ZOOM_DEFAULT		3938109	0		<			
ANR	3938626	PtrMemberAccess	g -> zoom		3938109	0					
ANR	3938627	Identifier	g		3938109	0					
ANR	3938628	Identifier	zoom		3938109	1					
ANR	3938629	Identifier	ZOOM_DEFAULT		3938109	1					
ANR	3938630	CompoundStatement		63:33:1849:1849	3938109	1					
ANR	3938631	ExpressionStatement	"W ( ""\\n"" )"	393:6:10274:10282	3938109	0	True				
ANR	3938632	CallExpression	"W ( ""\\n"" )"		3938109	0					
ANR	3938633	Callee	W		3938109	0					
ANR	3938634	Identifier	W		3938109	0					
ANR	3938635	ArgumentList	"""\\n"""		3938109	1					
ANR	3938636	Argument	"""\\n"""		3938109	0					
ANR	3938637	PrimaryExpression	"""\\n"""		3938109	0					
ANR	3938638	ExpressionStatement	free ( body )	395:5:10296:10307	3938109	2	True				
ANR	3938639	CallExpression	free ( body )		3938109	0					
ANR	3938640	Callee	free		3938109	0					
ANR	3938641	Identifier	free		3938109	0					
ANR	3938642	ArgumentList	body		3938109	1					
ANR	3938643	Argument	body		3938109	0					
ANR	3938644	Identifier	body		3938109	0					
ANR	3938645	ElseStatement	else		3938109	0					
ANR	3938646	CompoundStatement		67:11:1903:1903	3938109	0					
ANR	3938647	ExpressionStatement	W ( n -> body )	397:5:10327:10338	3938109	0	True				
ANR	3938648	CallExpression	W ( n -> body )		3938109	0					
ANR	3938649	Callee	W		3938109	0					
ANR	3938650	Identifier	W		3938109	0					
ANR	3938651	ArgumentList	n -> body		3938109	1					
ANR	3938652	Argument	n -> body		3938109	0					
ANR	3938653	PtrMemberAccess	n -> body		3938109	0					
ANR	3938654	Identifier	n		3938109	0					
ANR	3938655	Identifier	body		3938109	1					
ANR	3938656	IfStatement	if ( n -> body && * n -> body )		3938109	5					
ANR	3938657	Condition	n -> body && * n -> body	401:7:10424:10442	3938109	0	True				
ANR	3938658	AndExpression	n -> body && * n -> body		3938109	0		&&			
ANR	3938659	PtrMemberAccess	n -> body		3938109	0					
ANR	3938660	Identifier	n		3938109	0					
ANR	3938661	Identifier	body		3938109	1					
ANR	3938662	UnaryOperationExpression	* n -> body		3938109	1					
ANR	3938663	UnaryOperator	*		3938109	0					
ANR	3938664	PtrMemberAccess	n -> body		3938109	1					
ANR	3938665	Identifier	n		3938109	0					
ANR	3938666	Identifier	body		3938109	1					
ANR	3938667	CompoundStatement		72:28:2028:2028	3938109	1					
ANR	3938668	IfStatement	if ( body_y <= body_h && g -> zoom < ZOOM_DEFAULT )		3938109	0					
ANR	3938669	Condition	body_y <= body_h && g -> zoom < ZOOM_DEFAULT	402:8:10455:10496	3938109	0	True				
ANR	3938670	AndExpression	body_y <= body_h && g -> zoom < ZOOM_DEFAULT		3938109	0		&&			
ANR	3938671	RelationalExpression	body_y <= body_h		3938109	0		<=			
ANR	3938672	Identifier	body_y		3938109	0					
ANR	3938673	Identifier	body_h		3938109	1					
ANR	3938674	RelationalExpression	g -> zoom < ZOOM_DEFAULT		3938109	1		<			
ANR	3938675	PtrMemberAccess	g -> zoom		3938109	0					
ANR	3938676	Identifier	g		3938109	0					
ANR	3938677	Identifier	zoom		3938109	1					
ANR	3938678	Identifier	ZOOM_DEFAULT		3938109	1					
ANR	3938679	CompoundStatement		74:5:2089:2107	3938109	1					
ANR	3938680	IdentifierDeclStatement	"char * dots = ""..."" ;"	403:5:10506:10524	3938109	0	True				
ANR	3938681	IdentifierDecl	"* dots = ""..."""		3938109	0					
ANR	3938682	IdentifierDeclType	char *		3938109	0					
ANR	3938683	Identifier	dots		3938109	1					
ANR	3938684	AssignmentExpression	"* dots = ""..."""		3938109	2		=			
ANR	3938685	Identifier	dots		3938109	0					
ANR	3938686	PrimaryExpression	"""..."""		3938109	1					
ANR	3938687	IfStatement	if ( delta_x < strlen ( dots ) )		3938109	1					
ANR	3938688	Condition	delta_x < strlen ( dots )	404:9:10535:10557	3938109	0	True				
ANR	3938689	RelationalExpression	delta_x < strlen ( dots )		3938109	0		<			
ANR	3938690	Identifier	delta_x		3938109	0					
ANR	3938691	CallExpression	strlen ( dots )		3938109	1					
ANR	3938692	Callee	strlen		3938109	0					
ANR	3938693	Identifier	strlen		3938109	0					
ANR	3938694	ArgumentList	dots		3938109	1					
ANR	3938695	Argument	dots		3938109	0					
ANR	3938696	Identifier	dots		3938109	0					
ANR	3938697	CompoundStatement		75:34:2143:2143	3938109	1					
ANR	3938698	ExpressionStatement	dots += delta_x	405:6:10568:10583	3938109	0	True				
ANR	3938699	AssignmentExpression	dots += delta_x		3938109	0		+=			
ANR	3938700	Identifier	dots		3938109	0					
ANR	3938701	Identifier	delta_x		3938109	1					
ANR	3938702	ExpressionStatement	W ( dots )	406:6:10591:10599	3938109	1	True				
ANR	3938703	CallExpression	W ( dots )		3938109	0					
ANR	3938704	Callee	W		3938109	0					
ANR	3938705	Identifier	W		3938109	0					
ANR	3938706	ArgumentList	dots		3938109	1					
ANR	3938707	Argument	dots		3938109	0					
ANR	3938708	Identifier	dots		3938109	0					
ANR	3938709	IfStatement	if ( g -> show_node_bubble )		3938109	17					
ANR	3938710	Condition	g -> show_node_bubble	415:5:10751:10769	3938109	0	True				
ANR	3938711	PtrMemberAccess	g -> show_node_bubble		3938109	0					
ANR	3938712	Identifier	g		3938109	0					
ANR	3938713	Identifier	show_node_bubble		3938109	1					
ANR	3938714	CompoundStatement		86:26:2355:2355	3938109	1					
ANR	3938715	IfStatement	if ( cur )		3938109	0					
ANR	3938716	Condition	cur	416:6:10780:10782	3938109	0	True				
ANR	3938717	Identifier	cur		3938109	0					
ANR	3938718	CompoundStatement		87:11:2368:2368	3938109	1					
ANR	3938719	ExpressionStatement	"r_cons_canvas_circle ( g -> can , n -> x , n -> y , n -> w , n -> h , get_node_color ( color , cur ) )"	417:3:10790:10871	3938109	0	True				
ANR	3938720	CallExpression	"r_cons_canvas_circle ( g -> can , n -> x , n -> y , n -> w , n -> h , get_node_color ( color , cur ) )"		3938109	0					
ANR	3938721	Callee	r_cons_canvas_circle		3938109	0					
ANR	3938722	Identifier	r_cons_canvas_circle		3938109	0					
ANR	3938723	ArgumentList	g -> can		3938109	1					
ANR	3938724	Argument	g -> can		3938109	0					
ANR	3938725	PtrMemberAccess	g -> can		3938109	0					
ANR	3938726	Identifier	g		3938109	0					
ANR	3938727	Identifier	can		3938109	1					
ANR	3938728	Argument	n -> x		3938109	1					
ANR	3938729	PtrMemberAccess	n -> x		3938109	0					
ANR	3938730	Identifier	n		3938109	0					
ANR	3938731	Identifier	x		3938109	1					
ANR	3938732	Argument	n -> y		3938109	2					
ANR	3938733	PtrMemberAccess	n -> y		3938109	0					
ANR	3938734	Identifier	n		3938109	0					
ANR	3938735	Identifier	y		3938109	1					
ANR	3938736	Argument	n -> w		3938109	3					
ANR	3938737	PtrMemberAccess	n -> w		3938109	0					
ANR	3938738	Identifier	n		3938109	0					
ANR	3938739	Identifier	w		3938109	1					
ANR	3938740	Argument	n -> h		3938109	4					
ANR	3938741	PtrMemberAccess	n -> h		3938109	0					
ANR	3938742	Identifier	n		3938109	0					
ANR	3938743	Identifier	h		3938109	1					
ANR	3938744	Argument	"get_node_color ( color , cur )"		3938109	5					
ANR	3938745	CallExpression	"get_node_color ( color , cur )"		3938109	0					
ANR	3938746	Callee	get_node_color		3938109	0					
ANR	3938747	Identifier	get_node_color		3938109	0					
ANR	3938748	ArgumentList	color		3938109	1					
ANR	3938749	Argument	color		3938109	0					
ANR	3938750	Identifier	color		3938109	0					
ANR	3938751	Argument	cur		3938109	1					
ANR	3938752	Identifier	cur		3938109	0					
ANR	3938753	ElseStatement	else		3938109	0					
ANR	3938754	CompoundStatement		89:9:2465:2465	3938109	0					
ANR	3938755	ExpressionStatement	"r_cons_canvas_circle ( g -> can , n -> x , n -> y , n -> w , n -> h , get_node_color ( color , cur ) )"	419:3:10887:10967	3938109	0	True				
ANR	3938756	CallExpression	"r_cons_canvas_circle ( g -> can , n -> x , n -> y , n -> w , n -> h , get_node_color ( color , cur ) )"		3938109	0					
ANR	3938757	Callee	r_cons_canvas_circle		3938109	0					
ANR	3938758	Identifier	r_cons_canvas_circle		3938109	0					
ANR	3938759	ArgumentList	g -> can		3938109	1					
ANR	3938760	Argument	g -> can		3938109	0					
ANR	3938761	PtrMemberAccess	g -> can		3938109	0					
ANR	3938762	Identifier	g		3938109	0					
ANR	3938763	Identifier	can		3938109	1					
ANR	3938764	Argument	n -> x		3938109	1					
ANR	3938765	PtrMemberAccess	n -> x		3938109	0					
ANR	3938766	Identifier	n		3938109	0					
ANR	3938767	Identifier	x		3938109	1					
ANR	3938768	Argument	n -> y		3938109	2					
ANR	3938769	PtrMemberAccess	n -> y		3938109	0					
ANR	3938770	Identifier	n		3938109	0					
ANR	3938771	Identifier	y		3938109	1					
ANR	3938772	Argument	n -> w		3938109	3					
ANR	3938773	PtrMemberAccess	n -> w		3938109	0					
ANR	3938774	Identifier	n		3938109	0					
ANR	3938775	Identifier	w		3938109	1					
ANR	3938776	Argument	n -> h		3938109	4					
ANR	3938777	PtrMemberAccess	n -> h		3938109	0					
ANR	3938778	Identifier	n		3938109	0					
ANR	3938779	Identifier	h		3938109	1					
ANR	3938780	Argument	"get_node_color ( color , cur )"		3938109	5					
ANR	3938781	CallExpression	"get_node_color ( color , cur )"		3938109	0					
ANR	3938782	Callee	get_node_color		3938109	0					
ANR	3938783	Identifier	get_node_color		3938109	0					
ANR	3938784	ArgumentList	color		3938109	1					
ANR	3938785	Argument	color		3938109	0					
ANR	3938786	Identifier	color		3938109	0					
ANR	3938787	Argument	cur		3938109	1					
ANR	3938788	Identifier	cur		3938109	0					
ANR	3938789	ElseStatement	else		3938109	0					
ANR	3938790	CompoundStatement		92:8:2564:2564	3938109	0					
ANR	3938791	IfStatement	if ( cur )		3938109	0					
ANR	3938792	Condition	cur	422:6:10989:10991	3938109	0	True				
ANR	3938793	Identifier	cur		3938109	0					
ANR	3938794	CompoundStatement		93:11:2577:2577	3938109	1					
ANR	3938795	ExpressionStatement	"r_cons_canvas_box ( g -> can , n -> x , n -> y , n -> w , n -> h , get_node_color ( color , cur ) )"	423:3:10999:11077	3938109	0	True				
ANR	3938796	CallExpression	"r_cons_canvas_box ( g -> can , n -> x , n -> y , n -> w , n -> h , get_node_color ( color , cur ) )"		3938109	0					
ANR	3938797	Callee	r_cons_canvas_box		3938109	0					
ANR	3938798	Identifier	r_cons_canvas_box		3938109	0					
ANR	3938799	ArgumentList	g -> can		3938109	1					
ANR	3938800	Argument	g -> can		3938109	0					
ANR	3938801	PtrMemberAccess	g -> can		3938109	0					
ANR	3938802	Identifier	g		3938109	0					
ANR	3938803	Identifier	can		3938109	1					
ANR	3938804	Argument	n -> x		3938109	1					
ANR	3938805	PtrMemberAccess	n -> x		3938109	0					
ANR	3938806	Identifier	n		3938109	0					
ANR	3938807	Identifier	x		3938109	1					
ANR	3938808	Argument	n -> y		3938109	2					
ANR	3938809	PtrMemberAccess	n -> y		3938109	0					
ANR	3938810	Identifier	n		3938109	0					
ANR	3938811	Identifier	y		3938109	1					
ANR	3938812	Argument	n -> w		3938109	3					
ANR	3938813	PtrMemberAccess	n -> w		3938109	0					
ANR	3938814	Identifier	n		3938109	0					
ANR	3938815	Identifier	w		3938109	1					
ANR	3938816	Argument	n -> h		3938109	4					
ANR	3938817	PtrMemberAccess	n -> h		3938109	0					
ANR	3938818	Identifier	n		3938109	0					
ANR	3938819	Identifier	h		3938109	1					
ANR	3938820	Argument	"get_node_color ( color , cur )"		3938109	5					
ANR	3938821	CallExpression	"get_node_color ( color , cur )"		3938109	0					
ANR	3938822	Callee	get_node_color		3938109	0					
ANR	3938823	Identifier	get_node_color		3938109	0					
ANR	3938824	ArgumentList	color		3938109	1					
ANR	3938825	Argument	color		3938109	0					
ANR	3938826	Identifier	color		3938109	0					
ANR	3938827	Argument	cur		3938109	1					
ANR	3938828	Identifier	cur		3938109	0					
ANR	3938829	ElseStatement	else		3938109	0					
ANR	3938830	CompoundStatement		95:9:2671:2671	3938109	0					
ANR	3938831	ExpressionStatement	"r_cons_canvas_box ( g -> can , n -> x , n -> y , n -> w , n -> h , get_node_color ( color , cur ) )"	425:3:11093:11171	3938109	0	True				
ANR	3938832	CallExpression	"r_cons_canvas_box ( g -> can , n -> x , n -> y , n -> w , n -> h , get_node_color ( color , cur ) )"		3938109	0					
ANR	3938833	Callee	r_cons_canvas_box		3938109	0					
ANR	3938834	Identifier	r_cons_canvas_box		3938109	0					
ANR	3938835	ArgumentList	g -> can		3938109	1					
ANR	3938836	Argument	g -> can		3938109	0					
ANR	3938837	PtrMemberAccess	g -> can		3938109	0					
ANR	3938838	Identifier	g		3938109	0					
ANR	3938839	Identifier	can		3938109	1					
ANR	3938840	Argument	n -> x		3938109	1					
ANR	3938841	PtrMemberAccess	n -> x		3938109	0					
ANR	3938842	Identifier	n		3938109	0					
ANR	3938843	Identifier	x		3938109	1					
ANR	3938844	Argument	n -> y		3938109	2					
ANR	3938845	PtrMemberAccess	n -> y		3938109	0					
ANR	3938846	Identifier	n		3938109	0					
ANR	3938847	Identifier	y		3938109	1					
ANR	3938848	Argument	n -> w		3938109	3					
ANR	3938849	PtrMemberAccess	n -> w		3938109	0					
ANR	3938850	Identifier	n		3938109	0					
ANR	3938851	Identifier	w		3938109	1					
ANR	3938852	Argument	n -> h		3938109	4					
ANR	3938853	PtrMemberAccess	n -> h		3938109	0					
ANR	3938854	Identifier	n		3938109	0					
ANR	3938855	Identifier	h		3938109	1					
ANR	3938856	Argument	"get_node_color ( color , cur )"		3938109	5					
ANR	3938857	CallExpression	"get_node_color ( color , cur )"		3938109	0					
ANR	3938858	Callee	get_node_color		3938109	0					
ANR	3938859	Identifier	get_node_color		3938109	0					
ANR	3938860	ArgumentList	color		3938109	1					
ANR	3938861	Argument	color		3938109	0					
ANR	3938862	Identifier	color		3938109	0					
ANR	3938863	Argument	cur		3938109	1					
ANR	3938864	Identifier	cur		3938109	0					
ANR	3938865	ReturnType	static void		3938109	1					
ANR	3938866	Identifier	normal_RANode_print		3938109	2					
ANR	3938867	ParameterList	"const RAGraph * g , const RANode * n , int cur"		3938109	3					
ANR	3938868	Parameter	const RAGraph * g	330:32:8372:8387	3938109	0	True				
ANR	3938869	ParameterType	const RAGraph *		3938109	0					
ANR	3938870	Identifier	g		3938109	1					
ANR	3938871	Parameter	const RANode * n	330:50:8390:8404	3938109	1	True				
ANR	3938872	ParameterType	const RANode *		3938109	0					
ANR	3938873	Identifier	n		3938109	1					
ANR	3938874	Parameter	int cur	330:67:8407:8413	3938109	2	True				
ANR	3938875	ParameterType	int		3938109	0					
ANR	3938876	Identifier	cur		3938109	1					
ANR	3938877	CFGEntryNode	ENTRY		3938109		True				
ANR	3938878	CFGExitNode	EXIT		3938109		True				
ANR	3938879	Symbol	ZOOM_DEFAULT		3938109						
ANR	3938880	Symbol	MARGIN_TEXT_Y		3938109						
ANR	3938881	Symbol	delta_txt_x		3938109						
ANR	3938882	Symbol	MARGIN_TEXT_X		3938109						
ANR	3938883	Symbol	delta_txt_y		3938109						
ANR	3938884	Symbol	body		3938109						
ANR	3938885	Symbol	g -> show_node_titles		3938109						
ANR	3938886	Symbol	body_h		3938109						
ANR	3938887	Symbol	strlen		3938109						
ANR	3938888	Symbol	g -> can -> color		3938109						
ANR	3938889	Symbol	g -> show_node_bubble		3938109						
ANR	3938890	Symbol	body_y		3938109						
ANR	3938891	Symbol	body_x		3938109						
ANR	3938892	Symbol	g -> can		3938109						
ANR	3938893	Symbol	g -> can -> sx		3938109						
ANR	3938894	Symbol	g -> can -> sy		3938109						
ANR	3938895	Symbol	res		3938109						
ANR	3938896	Symbol	* * g		3938109						
ANR	3938897	Symbol	n -> h		3938109						
ANR	3938898	Symbol	BORDER_HEIGHT		3938109						
ANR	3938899	Symbol	n -> y		3938109						
ANR	3938900	Symbol	showTitle		3938109						
ANR	3938901	Symbol	n -> x		3938109						
ANR	3938902	Symbol	n -> w		3938109						
ANR	3938903	Symbol	n -> title		3938109						
ANR	3938904	Symbol	n -> body		3938109						
ANR	3938905	Symbol	center_y		3938109						
ANR	3938906	Symbol	center_x		3938109						
ANR	3938907	Symbol	cur		3938109						
ANR	3938908	Symbol	delta_x		3938109						
ANR	3938909	Symbol	delta_y		3938109						
ANR	3938910	Symbol	color		3938109						
ANR	3938911	Symbol	g -> show_node_body		3938109						
ANR	3938912	Symbol	g -> zoom		3938109						
ANR	3938913	Symbol	G		3938109						
ANR	3938914	Symbol	Color_RESET		3938109						
ANR	3938915	Symbol	title		3938109						
ANR	3938916	Symbol	n -> difftype		3938109						
ANR	3938917	Symbol	* g -> can		3938109						
ANR	3938918	Symbol	r_str_ansi_crop		3938109						
ANR	3938919	Symbol	* * n		3938109						
ANR	3938920	Symbol	BORDER_WIDTH		3938109						
ANR	3938921	Symbol	dots		3938109						
ANR	3938922	Symbol	g		3938109						
ANR	3938923	Symbol	R_MIN		3938109						
ANR	3938924	Symbol	n		3938109						
ANR	3938925	Symbol	* g		3938109						
ANR	3938926	Symbol	x		3938109						
ANR	3938927	Symbol	* n		3938109						
ANR	3938928	Symbol	y		3938109						
ANR	3938929	Symbol	showBody		3938109						
ANR	3938930	Symbol	get_node_color		3938109						
ANR	3938931	Symbol	* n -> body		3938109						
ANR	3938932	Function	get_crossing_matrix	430:0:11183:14045							
ANR	3938933	FunctionDef	"get_crossing_matrix (const RGraph * g , const struct layer_t layers [ ] , int maxlayer , int i , int from_up , int * n_rows)"		3938932	0					
ANR	3938934	CompoundStatement		433:46:11410:14045	3938932	0					
ANR	3938935	IdentifierDeclStatement	"int j , len = layers [ i ] . n_nodes ;"	434:1:11413:11443	3938932	0	True				
ANR	3938936	IdentifierDecl	j		3938932	0					
ANR	3938937	IdentifierDeclType	int		3938932	0					
ANR	3938938	Identifier	j		3938932	1					
ANR	3938939	IdentifierDecl	len = layers [ i ] . n_nodes		3938932	1					
ANR	3938940	IdentifierDeclType	int		3938932	0					
ANR	3938941	Identifier	len		3938932	1					
ANR	3938942	AssignmentExpression	len = layers [ i ] . n_nodes		3938932	2		=			
ANR	3938943	Identifier	len		3938932	0					
ANR	3938944	MemberAccess	layers [ i ] . n_nodes		3938932	1					
ANR	3938945	ArrayIndexing	layers [ i ]		3938932	0					
ANR	3938946	Identifier	layers		3938932	0					
ANR	3938947	Identifier	i		3938932	1					
ANR	3938948	Identifier	n_nodes		3938932	1					
ANR	3938949	Statement	int	436:1:11447:11449	3938932	1	True				
ANR	3938950	Statement	*	436:5:11451:11451	3938932	2	True				
ANR	3938951	Statement	*	436:6:11452:11452	3938932	3	True				
ANR	3938952	Statement	m	436:7:11453:11453	3938932	4	True				
ANR	3938953	Statement	=	436:9:11455:11455	3938932	5	True				
ANR	3938954	Statement	R_NEWS0	436:11:11457:11463	3938932	6	True				
ANR	3938955	Statement	(	436:19:11465:11465	3938932	7	True				
ANR	3938956	Statement	int	436:20:11466:11468	3938932	8	True				
ANR	3938957	Statement	*	436:24:11470:11470	3938932	9	True				
ANR	3938958	Statement	","	436:25:11471:11471	3938932	10	True				
ANR	3938959	Statement	len	436:27:11473:11475	3938932	11	True				
ANR	3938960	Statement	)	436:30:11476:11476	3938932	12	True				
ANR	3938961	ExpressionStatement		436:31:11477:11477	3938932	13	True				
ANR	3938962	IfStatement	if ( ! m )		3938932	14					
ANR	3938963	Condition	! m	437:5:11484:11485	3938932	0	True				
ANR	3938964	UnaryOperationExpression	! m		3938932	0					
ANR	3938965	UnaryOperator	!		3938932	0					
ANR	3938966	Identifier	m		3938932	1					
ANR	3938967	CompoundStatement		5:9:77:77	3938932	1					
ANR	3938968	ReturnStatement	return NULL ;	438:2:11492:11503	3938932	0	True				
ANR	3938969	Identifier	NULL		3938932	0					
ANR	3938970	ForStatement	for ( j = 0 ; j < len ; j ++ )		3938932	15					
ANR	3938971	ForInit	j = 0 ;	440:6:11514:11519	3938932	0	True				
ANR	3938972	AssignmentExpression	j = 0		3938932	0		=			
ANR	3938973	Identifier	j		3938932	0					
ANR	3938974	PrimaryExpression	0		3938932	1					
ANR	3938975	Condition	j < len	440:13:11521:11527	3938932	1	True				
ANR	3938976	RelationalExpression	j < len		3938932	0		<			
ANR	3938977	Identifier	j		3938932	0					
ANR	3938978	Identifier	len		3938932	1					
ANR	3938979	PostIncDecOperationExpression	j ++	440:22:11530:11532	3938932	2	True				
ANR	3938980	Identifier	j		3938932	0					
ANR	3938981	IncDec	++		3938932	1					
ANR	3938982	CompoundStatement		8:27:124:124	3938932	3					
ANR	3938983	ExpressionStatement	"m [ j ] = R_NEWS0 ( int , len )"	441:2:11539:11564	3938932	0	True				
ANR	3938984	AssignmentExpression	"m [ j ] = R_NEWS0 ( int , len )"		3938932	0		=			
ANR	3938985	ArrayIndexing	m [ j ]		3938932	0					
ANR	3938986	Identifier	m		3938932	0					
ANR	3938987	Identifier	j		3938932	1					
ANR	3938988	CallExpression	"R_NEWS0 ( int , len )"		3938932	1					
ANR	3938989	Callee	R_NEWS0		3938932	0					
ANR	3938990	Identifier	R_NEWS0		3938932	0					
ANR	3938991	ArgumentList	int		3938932	1					
ANR	3938992	Argument	int		3938932	0					
ANR	3938993	Identifier	int		3938932	0					
ANR	3938994	Argument	len		3938932	1					
ANR	3938995	Identifier	len		3938932	0					
ANR	3938996	IfStatement	if ( ! m [ j ] )		3938932	1					
ANR	3938997	Condition	! m [ j ]	442:6:11572:11576	3938932	0	True				
ANR	3938998	UnaryOperationExpression	! m [ j ]		3938932	0					
ANR	3938999	UnaryOperator	!		3938932	0					
ANR	3939000	ArrayIndexing	m [ j ]		3938932	1					
ANR	3939001	Identifier	m		3938932	0					
ANR	3939002	Identifier	j		3938932	1					
ANR	3939003	CompoundStatement		10:13:168:168	3938932	1					
ANR	3939004	GotoStatement	goto err_row ;	443:3:11584:11596	3938932	0	True				
ANR	3939005	Identifier	err_row		3938932	0					
ANR	3939006	IfStatement	if ( i > 0 && from_up )		3938932	16					
ANR	3939007	Condition	i > 0 && from_up	448:5:11729:11744	3938932	0	True				
ANR	3939008	AndExpression	i > 0 && from_up		3938932	0		&&			
ANR	3939009	RelationalExpression	i > 0		3938932	0		>			
ANR	3939010	Identifier	i		3938932	0					
ANR	3939011	PrimaryExpression	0		3938932	1					
ANR	3939012	Identifier	from_up		3938932	1					
ANR	3939013	CompoundStatement		16:23:336:336	3938932	1					
ANR	3939014	IfStatement	if ( r_cons_is_breaked ( ) )		3938932	0					
ANR	3939015	Condition	r_cons_is_breaked ( )	449:6:11755:11774	3938932	0	True				
ANR	3939016	CallExpression	r_cons_is_breaked ( )		3938932	0					
ANR	3939017	Callee	r_cons_is_breaked		3938932	0					
ANR	3939018	Identifier	r_cons_is_breaked		3938932	0					
ANR	3939019	ArgumentList			3938932	1					
ANR	3939020	CompoundStatement		17:28:366:366	3938932	1					
ANR	3939021	GotoStatement	goto err_row ;	450:3:11782:11794	3938932	0	True				
ANR	3939022	Identifier	err_row		3938932	0					
ANR	3939023	ForStatement	for ( j = 0 ; j < layers [ i - 1 ] . n_nodes ; j ++ )		3938932	1					
ANR	3939024	ForInit	j = 0 ;	452:7:11807:11812	3938932	0	True				
ANR	3939025	AssignmentExpression	j = 0		3938932	0		=			
ANR	3939026	Identifier	j		3938932	0					
ANR	3939027	PrimaryExpression	0		3938932	1					
ANR	3939028	Condition	j < layers [ i - 1 ] . n_nodes	452:14:11814:11838	3938932	1	True				
ANR	3939029	RelationalExpression	j < layers [ i - 1 ] . n_nodes		3938932	0		<			
ANR	3939030	Identifier	j		3938932	0					
ANR	3939031	MemberAccess	layers [ i - 1 ] . n_nodes		3938932	1					
ANR	3939032	ArrayIndexing	layers [ i - 1 ]		3938932	0					
ANR	3939033	Identifier	layers		3938932	0					
ANR	3939034	AdditiveExpression	i - 1		3938932	1		-			
ANR	3939035	Identifier	i		3938932	0					
ANR	3939036	PrimaryExpression	1		3938932	1					
ANR	3939037	Identifier	n_nodes		3938932	1					
ANR	3939038	PostIncDecOperationExpression	j ++	452:41:11841:11843	3938932	2	True				
ANR	3939039	Identifier	j		3938932	0					
ANR	3939040	IncDec	++		3938932	1					
ANR	3939041	CompoundStatement		24:3:565:579	3938932	3					
ANR	3939042	IdentifierDeclStatement	const RGraphNode * gj = layers [ i - 1 ] . nodes [ j ] ;	453:3:11851:11896	3938932	0	True				
ANR	3939043	IdentifierDecl	* gj = layers [ i - 1 ] . nodes [ j ]		3938932	0					
ANR	3939044	IdentifierDeclType	const RGraphNode *		3938932	0					
ANR	3939045	Identifier	gj		3938932	1					
ANR	3939046	AssignmentExpression	* gj = layers [ i - 1 ] . nodes [ j ]		3938932	2		=			
ANR	3939047	Identifier	gj		3938932	0					
ANR	3939048	ArrayIndexing	layers [ i - 1 ] . nodes [ j ]		3938932	1					
ANR	3939049	MemberAccess	layers [ i - 1 ] . nodes		3938932	0					
ANR	3939050	ArrayIndexing	layers [ i - 1 ]		3938932	0					
ANR	3939051	Identifier	layers		3938932	0					
ANR	3939052	AdditiveExpression	i - 1		3938932	1		-			
ANR	3939053	Identifier	i		3938932	0					
ANR	3939054	PrimaryExpression	1		3938932	1					
ANR	3939055	Identifier	nodes		3938932	1					
ANR	3939056	Identifier	j		3938932	1					
ANR	3939057	IdentifierDeclStatement	"const RList * neigh = r_graph_get_neighbours ( g , gj ) ;"	454:3:11901:11952	3938932	1	True				
ANR	3939058	IdentifierDecl	"* neigh = r_graph_get_neighbours ( g , gj )"		3938932	0					
ANR	3939059	IdentifierDeclType	const RList *		3938932	0					
ANR	3939060	Identifier	neigh		3938932	1					
ANR	3939061	AssignmentExpression	"* neigh = r_graph_get_neighbours ( g , gj )"		3938932	2		=			
ANR	3939062	Identifier	neigh		3938932	0					
ANR	3939063	CallExpression	"r_graph_get_neighbours ( g , gj )"		3938932	1					
ANR	3939064	Callee	r_graph_get_neighbours		3938932	0					
ANR	3939065	Identifier	r_graph_get_neighbours		3938932	0					
ANR	3939066	ArgumentList	g		3938932	1					
ANR	3939067	Argument	g		3938932	0					
ANR	3939068	Identifier	g		3938932	0					
ANR	3939069	Argument	gj		3938932	1					
ANR	3939070	Identifier	gj		3938932	0					
ANR	3939071	IdentifierDeclStatement	RGraphNode * gk ;	455:3:11957:11971	3938932	2	True				
ANR	3939072	IdentifierDecl	* gk		3938932	0					
ANR	3939073	IdentifierDeclType	RGraphNode *		3938932	0					
ANR	3939074	Identifier	gk		3938932	1					
ANR	3939075	IdentifierDeclStatement	RListIter * itk ;	456:3:11976:11990	3938932	3	True				
ANR	3939076	IdentifierDecl	* itk		3938932	0					
ANR	3939077	IdentifierDeclType	RListIter *		3938932	0					
ANR	3939078	Identifier	itk		3938932	1					
ANR	3939079	Statement	r_list_foreach	458:3:11996:12009	3938932	4	True				
ANR	3939080	Statement	(	458:18:12011:12011	3938932	5	True				
ANR	3939081	Statement	neigh	458:19:12012:12016	3938932	6	True				
ANR	3939082	Statement	","	458:24:12017:12017	3938932	7	True				
ANR	3939083	Statement	itk	458:26:12019:12021	3938932	8	True				
ANR	3939084	Statement	","	458:29:12022:12022	3938932	9	True				
ANR	3939085	Statement	gk	458:31:12024:12025	3938932	10	True				
ANR	3939086	Statement	)	458:33:12026:12026	3938932	11	True				
ANR	3939087	CompoundStatement		27:4:623:628	3938932	12					
ANR	3939088	IdentifierDeclStatement	int s ;	459:4:12034:12039	3938932	0	True				
ANR	3939089	IdentifierDecl	s		3938932	0					
ANR	3939090	IdentifierDeclType	int		3938932	0					
ANR	3939091	Identifier	s		3938932	1					
ANR	3939092	IfStatement	if ( gj == gk )		3938932	1					
ANR	3939093	Condition	gj == gk	461:8:12071:12078	3938932	0	True				
ANR	3939094	EqualityExpression	gj == gk		3938932	0		==			
ANR	3939095	Identifier	gj		3938932	0					
ANR	3939096	Identifier	gk		3938932	1					
ANR	3939097	CompoundStatement		29:18:670:670	3938932	1					
ANR	3939098	ContinueStatement	continue ;	462:5:12088:12096	3938932	0	True				
ANR	3939099	ForStatement	for ( s = 0 ; s < j ; ++ s )		3938932	2					
ANR	3939100	ForInit	s = 0 ;	464:9:12113:12118	3938932	0	True				
ANR	3939101	AssignmentExpression	s = 0		3938932	0		=			
ANR	3939102	Identifier	s		3938932	0					
ANR	3939103	PrimaryExpression	0		3938932	1					
ANR	3939104	Condition	s < j	464:16:12120:12124	3938932	1	True				
ANR	3939105	RelationalExpression	s < j		3938932	0		<			
ANR	3939106	Identifier	s		3938932	0					
ANR	3939107	Identifier	j		3938932	1					
ANR	3939108	UnaryExpression	++ s	464:23:12127:12129	3938932	2	True				
ANR	3939109	IncDec	++		3938932	0					
ANR	3939110	Identifier	s		3938932	1					
ANR	3939111	CompoundStatement		36:5:861:875	3938932	3					
ANR	3939112	IdentifierDeclStatement	const RGraphNode * gs = layers [ i - 1 ] . nodes [ s ] ;	465:5:12139:12184	3938932	0	True				
ANR	3939113	IdentifierDecl	* gs = layers [ i - 1 ] . nodes [ s ]		3938932	0					
ANR	3939114	IdentifierDeclType	const RGraphNode *		3938932	0					
ANR	3939115	Identifier	gs		3938932	1					
ANR	3939116	AssignmentExpression	* gs = layers [ i - 1 ] . nodes [ s ]		3938932	2		=			
ANR	3939117	Identifier	gs		3938932	0					
ANR	3939118	ArrayIndexing	layers [ i - 1 ] . nodes [ s ]		3938932	1					
ANR	3939119	MemberAccess	layers [ i - 1 ] . nodes		3938932	0					
ANR	3939120	ArrayIndexing	layers [ i - 1 ]		3938932	0					
ANR	3939121	Identifier	layers		3938932	0					
ANR	3939122	AdditiveExpression	i - 1		3938932	1		-			
ANR	3939123	Identifier	i		3938932	0					
ANR	3939124	PrimaryExpression	1		3938932	1					
ANR	3939125	Identifier	nodes		3938932	1					
ANR	3939126	Identifier	s		3938932	1					
ANR	3939127	IdentifierDeclStatement	"const RList * neigh_s = r_graph_get_neighbours ( g , gs ) ;"	466:5:12191:12244	3938932	1	True				
ANR	3939128	IdentifierDecl	"* neigh_s = r_graph_get_neighbours ( g , gs )"		3938932	0					
ANR	3939129	IdentifierDeclType	const RList *		3938932	0					
ANR	3939130	Identifier	neigh_s		3938932	1					
ANR	3939131	AssignmentExpression	"* neigh_s = r_graph_get_neighbours ( g , gs )"		3938932	2		=			
ANR	3939132	Identifier	neigh_s		3938932	0					
ANR	3939133	CallExpression	"r_graph_get_neighbours ( g , gs )"		3938932	1					
ANR	3939134	Callee	r_graph_get_neighbours		3938932	0					
ANR	3939135	Identifier	r_graph_get_neighbours		3938932	0					
ANR	3939136	ArgumentList	g		3938932	1					
ANR	3939137	Argument	g		3938932	0					
ANR	3939138	Identifier	g		3938932	0					
ANR	3939139	Argument	gs		3938932	1					
ANR	3939140	Identifier	gs		3938932	0					
ANR	3939141	IdentifierDeclStatement	RGraphNode * gt ;	467:5:12251:12265	3938932	2	True				
ANR	3939142	IdentifierDecl	* gt		3938932	0					
ANR	3939143	IdentifierDeclType	RGraphNode *		3938932	0					
ANR	3939144	Identifier	gt		3938932	1					
ANR	3939145	IdentifierDeclStatement	RListIter * itt ;	468:5:12272:12286	3938932	3	True				
ANR	3939146	IdentifierDecl	* itt		3938932	0					
ANR	3939147	IdentifierDeclType	RListIter *		3938932	0					
ANR	3939148	Identifier	itt		3938932	1					
ANR	3939149	Statement	r_list_foreach	470:5:12294:12307	3938932	4	True				
ANR	3939150	Statement	(	470:20:12309:12309	3938932	5	True				
ANR	3939151	Statement	neigh_s	470:21:12310:12316	3938932	6	True				
ANR	3939152	Statement	","	470:28:12317:12317	3938932	7	True				
ANR	3939153	Statement	itt	470:30:12319:12321	3938932	8	True				
ANR	3939154	Statement	","	470:33:12322:12322	3938932	9	True				
ANR	3939155	Statement	gt	470:35:12324:12325	3938932	10	True				
ANR	3939156	Statement	)	470:37:12326:12326	3938932	11	True				
ANR	3939157	CompoundStatement		39:6:925:946	3938932	12					
ANR	3939158	IdentifierDeclStatement	"const RANode * ak , * at ;"	471:6:12336:12357	3938932	0	True				
ANR	3939159	IdentifierDecl	* ak		3938932	0					
ANR	3939160	IdentifierDeclType	const RANode *		3938932	0					
ANR	3939161	Identifier	ak		3938932	1					
ANR	3939162	IdentifierDecl	* at		3938932	1					
ANR	3939163	IdentifierDeclType	const RANode *		3938932	0					
ANR	3939164	Identifier	at		3938932	1					
ANR	3939165	IfStatement	if ( gt == gk || gt == gs )		3938932	1					
ANR	3939166	Condition	gt == gk || gt == gs	472:10:12414:12433	3938932	0	True				
ANR	3939167	OrExpression	gt == gk || gt == gs		3938932	0		||			
ANR	3939168	EqualityExpression	gt == gk		3938932	0		==			
ANR	3939169	Identifier	gt		3938932	0					
ANR	3939170	Identifier	gk		3938932	1					
ANR	3939171	EqualityExpression	gt == gs		3938932	1		==			
ANR	3939172	Identifier	gt		3938932	0					
ANR	3939173	Identifier	gs		3938932	1					
ANR	3939174	CompoundStatement		40:32:1025:1025	3938932	1					
ANR	3939175	ContinueStatement	continue ;	473:7:12445:12453	3938932	0	True				
ANR	3939176	ExpressionStatement	ak = get_anode ( gk )	475:6:12469:12488	3938932	2	True				
ANR	3939177	AssignmentExpression	ak = get_anode ( gk )		3938932	0		=			
ANR	3939178	Identifier	ak		3938932	0					
ANR	3939179	CallExpression	get_anode ( gk )		3938932	1					
ANR	3939180	Callee	get_anode		3938932	0					
ANR	3939181	Identifier	get_anode		3938932	0					
ANR	3939182	ArgumentList	gk		3938932	1					
ANR	3939183	Argument	gk		3938932	0					
ANR	3939184	Identifier	gk		3938932	0					
ANR	3939185	ExpressionStatement	at = get_anode ( gt )	476:6:12496:12515	3938932	3	True				
ANR	3939186	AssignmentExpression	at = get_anode ( gt )		3938932	0		=			
ANR	3939187	Identifier	at		3938932	0					
ANR	3939188	CallExpression	get_anode ( gt )		3938932	1					
ANR	3939189	Callee	get_anode		3938932	0					
ANR	3939190	Identifier	get_anode		3938932	0					
ANR	3939191	ArgumentList	gt		3938932	1					
ANR	3939192	Argument	gt		3938932	0					
ANR	3939193	Identifier	gt		3938932	0					
ANR	3939194	IfStatement	if ( ak -> layer != i || at -> layer != i )		3938932	4					
ANR	3939195	Condition	ak -> layer != i || at -> layer != i	477:10:12527:12558	3938932	0	True				
ANR	3939196	OrExpression	ak -> layer != i || at -> layer != i		3938932	0		||			
ANR	3939197	EqualityExpression	ak -> layer != i		3938932	0		!=			
ANR	3939198	PtrMemberAccess	ak -> layer		3938932	0					
ANR	3939199	Identifier	ak		3938932	0					
ANR	3939200	Identifier	layer		3938932	1					
ANR	3939201	Identifier	i		3938932	1					
ANR	3939202	EqualityExpression	at -> layer != i		3938932	1		!=			
ANR	3939203	PtrMemberAccess	at -> layer		3938932	0					
ANR	3939204	Identifier	at		3938932	0					
ANR	3939205	Identifier	layer		3938932	1					
ANR	3939206	Identifier	i		3938932	1					
ANR	3939207	CompoundStatement		45:44:1150:1150	3938932	1					
ANR	3939208	ExpressionStatement	"eprintf ( ""(WARNING) \\""%s\\"" (%d) or \\""%s\\"" (%d) are not on the right layer (%d)\\n"" , ak -> title , ak -> layer , at -> title , at -> layer , i )"	481:7:12692:12845	3938932	0	True				
ANR	3939209	CallExpression	"eprintf ( ""(WARNING) \\""%s\\"" (%d) or \\""%s\\"" (%d) are not on the right layer (%d)\\n"" , ak -> title , ak -> layer , at -> title , at -> layer , i )"		3938932	0					
ANR	3939210	Callee	eprintf		3938932	0					
ANR	3939211	Identifier	eprintf		3938932	0					
ANR	3939212	ArgumentList	"""(WARNING) \\""%s\\"" (%d) or \\""%s\\"" (%d) are not on the right layer (%d)\\n"""		3938932	1					
ANR	3939213	Argument	"""(WARNING) \\""%s\\"" (%d) or \\""%s\\"" (%d) are not on the right layer (%d)\\n"""		3938932	0					
ANR	3939214	PrimaryExpression	"""(WARNING) \\""%s\\"" (%d) or \\""%s\\"" (%d) are not on the right layer (%d)\\n"""		3938932	0					
ANR	3939215	Argument	ak -> title		3938932	1					
ANR	3939216	PtrMemberAccess	ak -> title		3938932	0					
ANR	3939217	Identifier	ak		3938932	0					
ANR	3939218	Identifier	title		3938932	1					
ANR	3939219	Argument	ak -> layer		3938932	2					
ANR	3939220	PtrMemberAccess	ak -> layer		3938932	0					
ANR	3939221	Identifier	ak		3938932	0					
ANR	3939222	Identifier	layer		3938932	1					
ANR	3939223	Argument	at -> title		3938932	3					
ANR	3939224	PtrMemberAccess	at -> title		3938932	0					
ANR	3939225	Identifier	at		3938932	0					
ANR	3939226	Identifier	title		3938932	1					
ANR	3939227	Argument	at -> layer		3938932	4					
ANR	3939228	PtrMemberAccess	at -> layer		3938932	0					
ANR	3939229	Identifier	at		3938932	0					
ANR	3939230	Identifier	layer		3938932	1					
ANR	3939231	Argument	i		3938932	5					
ANR	3939232	Identifier	i		3938932	0					
ANR	3939233	ContinueStatement	continue ;	486:7:12861:12869	3938932	1	True				
ANR	3939234	ExpressionStatement	m [ ak -> pos_in_layer ] [ at -> pos_in_layer ] ++	488:6:12885:12924	3938932	5	True				
ANR	3939235	PostIncDecOperationExpression	m [ ak -> pos_in_layer ] [ at -> pos_in_layer ] ++		3938932	0					
ANR	3939236	ArrayIndexing	m [ ak -> pos_in_layer ] [ at -> pos_in_layer ]		3938932	0					
ANR	3939237	ArrayIndexing	m [ ak -> pos_in_layer ]		3938932	0					
ANR	3939238	Identifier	m		3938932	0					
ANR	3939239	PtrMemberAccess	ak -> pos_in_layer		3938932	1					
ANR	3939240	Identifier	ak		3938932	0					
ANR	3939241	Identifier	pos_in_layer		3938932	1					
ANR	3939242	PtrMemberAccess	at -> pos_in_layer		3938932	1					
ANR	3939243	Identifier	at		3938932	0					
ANR	3939244	Identifier	pos_in_layer		3938932	1					
ANR	3939245	IncDec	++		3938932	1					
ANR	3939246	IfStatement	if ( i < maxlayer - 1 && ! from_up )		3938932	17					
ANR	3939247	Condition	i < maxlayer - 1 && ! from_up	496:5:13014:13041	3938932	0	True				
ANR	3939248	AndExpression	i < maxlayer - 1 && ! from_up		3938932	0		&&			
ANR	3939249	RelationalExpression	i < maxlayer - 1		3938932	0		<			
ANR	3939250	Identifier	i		3938932	0					
ANR	3939251	AdditiveExpression	maxlayer - 1		3938932	1		-			
ANR	3939252	Identifier	maxlayer		3938932	0					
ANR	3939253	PrimaryExpression	1		3938932	1					
ANR	3939254	UnaryOperationExpression	! from_up		3938932	1					
ANR	3939255	UnaryOperator	!		3938932	0					
ANR	3939256	Identifier	from_up		3938932	1					
ANR	3939257	CompoundStatement		64:35:1633:1633	3938932	1					
ANR	3939258	IfStatement	if ( r_cons_is_breaked ( ) )		3938932	0					
ANR	3939259	Condition	r_cons_is_breaked ( )	497:6:13052:13071	3938932	0	True				
ANR	3939260	CallExpression	r_cons_is_breaked ( )		3938932	0					
ANR	3939261	Callee	r_cons_is_breaked		3938932	0					
ANR	3939262	Identifier	r_cons_is_breaked		3938932	0					
ANR	3939263	ArgumentList			3938932	1					
ANR	3939264	CompoundStatement		65:28:1663:1663	3938932	1					
ANR	3939265	GotoStatement	goto err_row ;	498:3:13079:13091	3938932	0	True				
ANR	3939266	Identifier	err_row		3938932	0					
ANR	3939267	ForStatement	for ( j = 0 ; j < layers [ i ] . n_nodes ; ++ j )		3938932	1					
ANR	3939268	ForInit	j = 0 ;	500:7:13104:13109	3938932	0	True				
ANR	3939269	AssignmentExpression	j = 0		3938932	0		=			
ANR	3939270	Identifier	j		3938932	0					
ANR	3939271	PrimaryExpression	0		3938932	1					
ANR	3939272	Condition	j < layers [ i ] . n_nodes	500:14:13111:13131	3938932	1	True				
ANR	3939273	RelationalExpression	j < layers [ i ] . n_nodes		3938932	0		<			
ANR	3939274	Identifier	j		3938932	0					
ANR	3939275	MemberAccess	layers [ i ] . n_nodes		3938932	1					
ANR	3939276	ArrayIndexing	layers [ i ]		3938932	0					
ANR	3939277	Identifier	layers		3938932	0					
ANR	3939278	Identifier	i		3938932	1					
ANR	3939279	Identifier	n_nodes		3938932	1					
ANR	3939280	UnaryExpression	++ j	500:37:13134:13136	3938932	2	True				
ANR	3939281	IncDec	++		3938932	0					
ANR	3939282	Identifier	j		3938932	1					
ANR	3939283	CompoundStatement		73:3:1897:1911	3938932	3					
ANR	3939284	IdentifierDeclStatement	const RGraphNode * gj = layers [ i ] . nodes [ j ] ;	501:3:13144:13185	3938932	0	True				
ANR	3939285	IdentifierDecl	* gj = layers [ i ] . nodes [ j ]		3938932	0					
ANR	3939286	IdentifierDeclType	const RGraphNode *		3938932	0					
ANR	3939287	Identifier	gj		3938932	1					
ANR	3939288	AssignmentExpression	* gj = layers [ i ] . nodes [ j ]		3938932	2		=			
ANR	3939289	Identifier	gj		3938932	0					
ANR	3939290	ArrayIndexing	layers [ i ] . nodes [ j ]		3938932	1					
ANR	3939291	MemberAccess	layers [ i ] . nodes		3938932	0					
ANR	3939292	ArrayIndexing	layers [ i ]		3938932	0					
ANR	3939293	Identifier	layers		3938932	0					
ANR	3939294	Identifier	i		3938932	1					
ANR	3939295	Identifier	nodes		3938932	1					
ANR	3939296	Identifier	j		3938932	1					
ANR	3939297	IdentifierDeclStatement	"const RList * neigh = r_graph_get_neighbours ( g , gj ) ;"	502:3:13190:13241	3938932	1	True				
ANR	3939298	IdentifierDecl	"* neigh = r_graph_get_neighbours ( g , gj )"		3938932	0					
ANR	3939299	IdentifierDeclType	const RList *		3938932	0					
ANR	3939300	Identifier	neigh		3938932	1					
ANR	3939301	AssignmentExpression	"* neigh = r_graph_get_neighbours ( g , gj )"		3938932	2		=			
ANR	3939302	Identifier	neigh		3938932	0					
ANR	3939303	CallExpression	"r_graph_get_neighbours ( g , gj )"		3938932	1					
ANR	3939304	Callee	r_graph_get_neighbours		3938932	0					
ANR	3939305	Identifier	r_graph_get_neighbours		3938932	0					
ANR	3939306	ArgumentList	g		3938932	1					
ANR	3939307	Argument	g		3938932	0					
ANR	3939308	Identifier	g		3938932	0					
ANR	3939309	Argument	gj		3938932	1					
ANR	3939310	Identifier	gj		3938932	0					
ANR	3939311	IdentifierDeclStatement	"const RANode * ak , * aj = get_anode ( gj ) ;"	503:3:13246:13284	3938932	2	True				
ANR	3939312	IdentifierDecl	* ak		3938932	0					
ANR	3939313	IdentifierDeclType	const RANode *		3938932	0					
ANR	3939314	Identifier	ak		3938932	1					
ANR	3939315	IdentifierDecl	* aj = get_anode ( gj )		3938932	1					
ANR	3939316	IdentifierDeclType	const RANode *		3938932	0					
ANR	3939317	Identifier	aj		3938932	1					
ANR	3939318	AssignmentExpression	* aj = get_anode ( gj )		3938932	2		=			
ANR	3939319	Identifier	aj		3938932	0					
ANR	3939320	CallExpression	get_anode ( gj )		3938932	1					
ANR	3939321	Callee	get_anode		3938932	0					
ANR	3939322	Identifier	get_anode		3938932	0					
ANR	3939323	ArgumentList	gj		3938932	1					
ANR	3939324	Argument	gj		3938932	0					
ANR	3939325	Identifier	gj		3938932	0					
ANR	3939326	IdentifierDeclStatement	RGraphNode * gk ;	504:3:13289:13303	3938932	3	True				
ANR	3939327	IdentifierDecl	* gk		3938932	0					
ANR	3939328	IdentifierDeclType	RGraphNode *		3938932	0					
ANR	3939329	Identifier	gk		3938932	1					
ANR	3939330	IdentifierDeclStatement	RListIter * itk ;	505:3:13308:13322	3938932	4	True				
ANR	3939331	IdentifierDecl	* itk		3938932	0					
ANR	3939332	IdentifierDeclType	RListIter *		3938932	0					
ANR	3939333	Identifier	itk		3938932	1					
ANR	3939334	IfStatement	if ( r_cons_is_breaked ( ) )		3938932	5					
ANR	3939335	Condition	r_cons_is_breaked ( )	507:7:13332:13351	3938932	0	True				
ANR	3939336	CallExpression	r_cons_is_breaked ( )		3938932	0					
ANR	3939337	Callee	r_cons_is_breaked		3938932	0					
ANR	3939338	Identifier	r_cons_is_breaked		3938932	0					
ANR	3939339	ArgumentList			3938932	1					
ANR	3939340	CompoundStatement		75:29:1943:1943	3938932	1					
ANR	3939341	GotoStatement	goto err_row ;	508:4:13360:13372	3938932	0	True				
ANR	3939342	Identifier	err_row		3938932	0					
ANR	3939343	Statement	graph_foreach_anode	510:3:13382:13400	3938932	6	True				
ANR	3939344	Statement	(	510:23:13402:13402	3938932	7	True				
ANR	3939345	Statement	neigh	510:24:13403:13407	3938932	8	True				
ANR	3939346	Statement	","	510:29:13408:13408	3938932	9	True				
ANR	3939347	Statement	itk	510:31:13410:13412	3938932	10	True				
ANR	3939348	Statement	","	510:34:13413:13413	3938932	11	True				
ANR	3939349	Statement	gk	510:36:13415:13416	3938932	12	True				
ANR	3939350	Statement	","	510:38:13417:13417	3938932	13	True				
ANR	3939351	Statement	ak	510:40:13419:13420	3938932	14	True				
ANR	3939352	Statement	)	510:42:13421:13421	3938932	15	True				
ANR	3939353	CompoundStatement		79:4:2018:2023	3938932	16					
ANR	3939354	IdentifierDeclStatement	int s ;	511:4:13429:13434	3938932	0	True				
ANR	3939355	IdentifierDecl	s		3938932	0					
ANR	3939356	IdentifierDeclType	int		3938932	0					
ANR	3939357	Identifier	s		3938932	1					
ANR	3939358	ForStatement	for ( s = 0 ; s < layers [ i ] . n_nodes ; ++ s )		3938932	1					
ANR	3939359	ForInit	s = 0 ;	512:9:13445:13450	3938932	0	True				
ANR	3939360	AssignmentExpression	s = 0		3938932	0		=			
ANR	3939361	Identifier	s		3938932	0					
ANR	3939362	PrimaryExpression	0		3938932	1					
ANR	3939363	Condition	s < layers [ i ] . n_nodes	512:16:13452:13472	3938932	1	True				
ANR	3939364	RelationalExpression	s < layers [ i ] . n_nodes		3938932	0		<			
ANR	3939365	Identifier	s		3938932	0					
ANR	3939366	MemberAccess	layers [ i ] . n_nodes		3938932	1					
ANR	3939367	ArrayIndexing	layers [ i ]		3938932	0					
ANR	3939368	Identifier	layers		3938932	0					
ANR	3939369	Identifier	i		3938932	1					
ANR	3939370	Identifier	n_nodes		3938932	1					
ANR	3939371	UnaryExpression	++ s	512:39:13475:13477	3938932	2	True				
ANR	3939372	IncDec	++		3938932	0					
ANR	3939373	Identifier	s		3938932	1					
ANR	3939374	CompoundStatement		85:5:2193:2231	3938932	3					
ANR	3939375	IdentifierDeclStatement	const RGraphNode * gs = layers [ i ] . nodes [ s ] ;	513:5:13487:13528	3938932	0	True				
ANR	3939376	IdentifierDecl	* gs = layers [ i ] . nodes [ s ]		3938932	0					
ANR	3939377	IdentifierDeclType	const RGraphNode *		3938932	0					
ANR	3939378	Identifier	gs		3938932	1					
ANR	3939379	AssignmentExpression	* gs = layers [ i ] . nodes [ s ]		3938932	2		=			
ANR	3939380	Identifier	gs		3938932	0					
ANR	3939381	ArrayIndexing	layers [ i ] . nodes [ s ]		3938932	1					
ANR	3939382	MemberAccess	layers [ i ] . nodes		3938932	0					
ANR	3939383	ArrayIndexing	layers [ i ]		3938932	0					
ANR	3939384	Identifier	layers		3938932	0					
ANR	3939385	Identifier	i		3938932	1					
ANR	3939386	Identifier	nodes		3938932	1					
ANR	3939387	Identifier	s		3938932	1					
ANR	3939388	IdentifierDeclStatement	const RList * neigh_s ;	514:5:13535:13555	3938932	1	True				
ANR	3939389	IdentifierDecl	* neigh_s		3938932	0					
ANR	3939390	IdentifierDeclType	const RList *		3938932	0					
ANR	3939391	Identifier	neigh_s		3938932	1					
ANR	3939392	IdentifierDeclStatement	RGraphNode * gt ;	515:5:13562:13576	3938932	2	True				
ANR	3939393	IdentifierDecl	* gt		3938932	0					
ANR	3939394	IdentifierDeclType	RGraphNode *		3938932	0					
ANR	3939395	Identifier	gt		3938932	1					
ANR	3939396	IdentifierDeclStatement	RListIter * itt ;	516:5:13583:13597	3938932	3	True				
ANR	3939397	IdentifierDecl	* itt		3938932	0					
ANR	3939398	IdentifierDeclType	RListIter *		3938932	0					
ANR	3939399	Identifier	itt		3938932	1					
ANR	3939400	IdentifierDeclStatement	"const RANode * at , * as = get_anode ( gs ) ;"	517:5:13604:13642	3938932	4	True				
ANR	3939401	IdentifierDecl	* at		3938932	0					
ANR	3939402	IdentifierDeclType	const RANode *		3938932	0					
ANR	3939403	Identifier	at		3938932	1					
ANR	3939404	IdentifierDecl	* as = get_anode ( gs )		3938932	1					
ANR	3939405	IdentifierDeclType	const RANode *		3938932	0					
ANR	3939406	Identifier	as		3938932	1					
ANR	3939407	AssignmentExpression	* as = get_anode ( gs )		3938932	2		=			
ANR	3939408	Identifier	as		3938932	0					
ANR	3939409	CallExpression	get_anode ( gs )		3938932	1					
ANR	3939410	Callee	get_anode		3938932	0					
ANR	3939411	Identifier	get_anode		3938932	0					
ANR	3939412	ArgumentList	gs		3938932	1					
ANR	3939413	Argument	gs		3938932	0					
ANR	3939414	Identifier	gs		3938932	0					
ANR	3939415	IfStatement	if ( gs == gj )		3938932	5					
ANR	3939416	Condition	gs == gj	519:9:13654:13661	3938932	0	True				
ANR	3939417	EqualityExpression	gs == gj		3938932	0		==			
ANR	3939418	Identifier	gs		3938932	0					
ANR	3939419	Identifier	gj		3938932	1					
ANR	3939420	CompoundStatement		87:19:2253:2253	3938932	1					
ANR	3939421	ContinueStatement	continue ;	520:6:13672:13680	3938932	0	True				
ANR	3939422	ExpressionStatement	"neigh_s = r_graph_get_neighbours ( g , gs )"	522:5:13694:13734	3938932	6	True				
ANR	3939423	AssignmentExpression	"neigh_s = r_graph_get_neighbours ( g , gs )"		3938932	0		=			
ANR	3939424	Identifier	neigh_s		3938932	0					
ANR	3939425	CallExpression	"r_graph_get_neighbours ( g , gs )"		3938932	1					
ANR	3939426	Callee	r_graph_get_neighbours		3938932	0					
ANR	3939427	Identifier	r_graph_get_neighbours		3938932	0					
ANR	3939428	ArgumentList	g		3938932	1					
ANR	3939429	Argument	g		3938932	0					
ANR	3939430	Identifier	g		3938932	0					
ANR	3939431	Argument	gs		3938932	1					
ANR	3939432	Identifier	gs		3938932	0					
ANR	3939433	Statement	graph_foreach_anode	523:5:13741:13759	3938932	7	True				
ANR	3939434	Statement	(	523:25:13761:13761	3938932	8	True				
ANR	3939435	Statement	neigh_s	523:26:13762:13768	3938932	9	True				
ANR	3939436	Statement	","	523:33:13769:13769	3938932	10	True				
ANR	3939437	Statement	itt	523:35:13771:13773	3938932	11	True				
ANR	3939438	Statement	","	523:38:13774:13774	3938932	12	True				
ANR	3939439	Statement	gt	523:40:13776:13777	3938932	13	True				
ANR	3939440	Statement	","	523:42:13778:13778	3938932	14	True				
ANR	3939441	Statement	at	523:44:13780:13781	3938932	15	True				
ANR	3939442	Statement	)	523:46:13782:13782	3938932	16	True				
ANR	3939443	CompoundStatement		91:48:2373:2373	3938932	17					
ANR	3939444	IfStatement	if ( at -> pos_in_layer < ak -> pos_in_layer )		3938932	0					
ANR	3939445	Condition	at -> pos_in_layer < ak -> pos_in_layer	524:10:13796:13830	3938932	0	True				
ANR	3939446	RelationalExpression	at -> pos_in_layer < ak -> pos_in_layer		3938932	0		<			
ANR	3939447	PtrMemberAccess	at -> pos_in_layer		3938932	0					
ANR	3939448	Identifier	at		3938932	0					
ANR	3939449	Identifier	pos_in_layer		3938932	1					
ANR	3939450	PtrMemberAccess	ak -> pos_in_layer		3938932	1					
ANR	3939451	Identifier	ak		3938932	0					
ANR	3939452	Identifier	pos_in_layer		3938932	1					
ANR	3939453	CompoundStatement		92:47:2422:2422	3938932	1					
ANR	3939454	ExpressionStatement	m [ aj -> pos_in_layer ] [ as -> pos_in_layer ] ++	525:7:13842:13881	3938932	0	True				
ANR	3939455	PostIncDecOperationExpression	m [ aj -> pos_in_layer ] [ as -> pos_in_layer ] ++		3938932	0					
ANR	3939456	ArrayIndexing	m [ aj -> pos_in_layer ] [ as -> pos_in_layer ]		3938932	0					
ANR	3939457	ArrayIndexing	m [ aj -> pos_in_layer ]		3938932	0					
ANR	3939458	Identifier	m		3938932	0					
ANR	3939459	PtrMemberAccess	aj -> pos_in_layer		3938932	1					
ANR	3939460	Identifier	aj		3938932	0					
ANR	3939461	Identifier	pos_in_layer		3938932	1					
ANR	3939462	PtrMemberAccess	as -> pos_in_layer		3938932	1					
ANR	3939463	Identifier	as		3938932	0					
ANR	3939464	Identifier	pos_in_layer		3938932	1					
ANR	3939465	IncDec	++		3938932	1					
ANR	3939466	IfStatement	if ( n_rows )		3938932	18					
ANR	3939467	Condition	n_rows	533:5:13922:13927	3938932	0	True				
ANR	3939468	Identifier	n_rows		3938932	0					
ANR	3939469	CompoundStatement		101:13:2519:2519	3938932	1					
ANR	3939470	ExpressionStatement	* n_rows = len	534:2:13934:13947	3938932	0	True				
ANR	3939471	AssignmentExpression	* n_rows = len		3938932	0		=			
ANR	3939472	UnaryOperationExpression	* n_rows		3938932	0					
ANR	3939473	UnaryOperator	*		3938932	0					
ANR	3939474	Identifier	n_rows		3938932	1					
ANR	3939475	Identifier	len		3938932	1					
ANR	3939476	ReturnStatement	return m ;	536:1:13953:13961	3938932	19	True				
ANR	3939477	Identifier	m		3938932	0					
ANR	3939478	Label	err_row :	538:0:13964:13971	3938932	20	True				
ANR	3939479	Identifier	err_row		3938932	0					
ANR	3939480	ForStatement	for ( i = 0 ; i < len ; i ++ )		3938932	21					
ANR	3939481	ForInit	i = 0 ;	539:6:13979:13984	3938932	0	True				
ANR	3939482	AssignmentExpression	i = 0		3938932	0		=			
ANR	3939483	Identifier	i		3938932	0					
ANR	3939484	PrimaryExpression	0		3938932	1					
ANR	3939485	Condition	i < len	539:13:13986:13992	3938932	1	True				
ANR	3939486	RelationalExpression	i < len		3938932	0		<			
ANR	3939487	Identifier	i		3938932	0					
ANR	3939488	Identifier	len		3938932	1					
ANR	3939489	PostIncDecOperationExpression	i ++	539:22:13995:13997	3938932	2	True				
ANR	3939490	Identifier	i		3938932	0					
ANR	3939491	IncDec	++		3938932	1					
ANR	3939492	CompoundStatement		107:27:2589:2589	3938932	3					
ANR	3939493	ExpressionStatement	free ( m [ i ] )	540:2:14004:14015	3938932	0	True				
ANR	3939494	CallExpression	free ( m [ i ] )		3938932	0					
ANR	3939495	Callee	free		3938932	0					
ANR	3939496	Identifier	free		3938932	0					
ANR	3939497	ArgumentList	m [ i ]		3938932	1					
ANR	3939498	Argument	m [ i ]		3938932	0					
ANR	3939499	ArrayIndexing	m [ i ]		3938932	0					
ANR	3939500	Identifier	m		3938932	0					
ANR	3939501	Identifier	i		3938932	1					
ANR	3939502	ExpressionStatement	free ( m )	542:1:14021:14029	3938932	22	True				
ANR	3939503	CallExpression	free ( m )		3938932	0					
ANR	3939504	Callee	free		3938932	0					
ANR	3939505	Identifier	free		3938932	0					
ANR	3939506	ArgumentList	m		3938932	1					
ANR	3939507	Argument	m		3938932	0					
ANR	3939508	Identifier	m		3938932	0					
ANR	3939509	ReturnStatement	return NULL ;	543:1:14032:14043	3938932	23	True				
ANR	3939510	Identifier	NULL		3938932	0					
ANR	3939511	ReturnType	static int * *		3938932	1					
ANR	3939512	Identifier	get_crossing_matrix		3938932	2					
ANR	3939513	ParameterList	"const RGraph * g , const struct layer_t layers [ ] , int maxlayer , int i , int from_up , int * n_rows"		3938932	3					
ANR	3939514	Parameter	const RGraph * g	430:33:11216:11230	3938932	0	True				
ANR	3939515	ParameterType	const RGraph *		3938932	0					
ANR	3939516	Identifier	g		3938932	1					
ANR	3939517	Parameter	const struct layer_t layers [ ]	431:33:11266:11294	3938932	1	True				
ANR	3939518	ParameterType	const struct layer_t [ ]		3938932	0					
ANR	3939519	Identifier	layers		3938932	1					
ANR	3939520	Parameter	int maxlayer	432:33:11330:11341	3938932	2	True				
ANR	3939521	ParameterType	int		3938932	0					
ANR	3939522	Identifier	maxlayer		3938932	1					
ANR	3939523	Parameter	int i	432:47:11344:11348	3938932	3	True				
ANR	3939524	ParameterType	int		3938932	0					
ANR	3939525	Identifier	i		3938932	1					
ANR	3939526	Parameter	int from_up	432:54:11351:11361	3938932	4	True				
ANR	3939527	ParameterType	int		3938932	0					
ANR	3939528	Identifier	from_up		3938932	1					
ANR	3939529	Parameter	int * n_rows	433:33:11397:11407	3938932	5	True				
ANR	3939530	ParameterType	int *		3938932	0					
ANR	3939531	Identifier	n_rows		3938932	1					
ANR	3939532	CFGEntryNode	ENTRY		3938932		True				
ANR	3939533	CFGExitNode	EXIT		3938932		True				
ANR	3939534	Symbol	* * layers		3938932						
ANR	3939535	Symbol	* as -> pos_in_layer		3938932						
ANR	3939536	Symbol	* layers [ i ] . nodes		3938932						
ANR	3939537	Symbol	at -> pos_in_layer		3938932						
ANR	3939538	Symbol	aj -> pos_in_layer		3938932						
ANR	3939539	Symbol	len		3938932						
ANR	3939540	Symbol	* * ak		3938932						
ANR	3939541	Symbol	* * aj		3938932						
ANR	3939542	Symbol	layers		3938932						
ANR	3939543	Symbol	neigh_s		3938932						
ANR	3939544	Symbol	* * ak -> pos_in_layer		3938932						
ANR	3939545	Symbol	* * as		3938932						
ANR	3939546	Symbol	* * at		3938932						
ANR	3939547	Symbol	* n_rows		3938932						
ANR	3939548	Symbol	itk		3938932						
ANR	3939549	Symbol	* * i		3938932						
ANR	3939550	Symbol	ak -> layer		3938932						
ANR	3939551	Symbol	NULL		3938932						
ANR	3939552	Symbol	as -> pos_in_layer		3938932						
ANR	3939553	Symbol	itt		3938932						
ANR	3939554	Symbol	aj		3938932						
ANR	3939555	Symbol	ak		3938932						
ANR	3939556	Symbol	ak -> pos_in_layer		3938932						
ANR	3939557	Symbol	n_rows		3938932						
ANR	3939558	Symbol	ak -> title		3938932						
ANR	3939559	Symbol	as		3938932						
ANR	3939560	Symbol	at		3938932						
ANR	3939561	Symbol	* aj -> pos_in_layer		3938932						
ANR	3939562	Symbol	* layers [ i - 1 ] . nodes		3938932						
ANR	3939563	Symbol	from_up		3938932						
ANR	3939564	Symbol	r_graph_get_neighbours		3938932						
ANR	3939565	Symbol	* aj		3938932						
ANR	3939566	Symbol	neigh		3938932						
ANR	3939567	Symbol	r_cons_is_breaked		3938932						
ANR	3939568	Symbol	layers [ i ] . n_nodes		3938932						
ANR	3939569	Symbol	R_NEWS0		3938932						
ANR	3939570	Symbol	layers [ i - 1 ] . nodes		3938932						
ANR	3939571	Symbol	* at -> pos_in_layer		3938932						
ANR	3939572	Symbol	* * m		3938932						
ANR	3939573	Symbol	* ak -> pos_in_layer		3938932						
ANR	3939574	Symbol	at -> layer		3938932						
ANR	3939575	Symbol	gj		3938932						
ANR	3939576	Symbol	get_anode		3938932						
ANR	3939577	Symbol	gk		3938932						
ANR	3939578	Symbol	g		3938932						
ANR	3939579	Symbol	i		3938932						
ANR	3939580	Symbol	j		3938932						
ANR	3939581	Symbol	* layers		3938932						
ANR	3939582	Symbol	maxlayer		3938932						
ANR	3939583	Symbol	gs		3938932						
ANR	3939584	Symbol	m		3938932						
ANR	3939585	Symbol	gt		3938932						
ANR	3939586	Symbol	int		3938932						
ANR	3939587	Symbol	layers [ i ] . nodes		3938932						
ANR	3939588	Symbol	* * * aj		3938932						
ANR	3939589	Symbol	* * aj -> pos_in_layer		3938932						
ANR	3939590	Symbol	* i		3938932						
ANR	3939591	Symbol	s		3938932						
ANR	3939592	Symbol	* ak		3938932						
ANR	3939593	Symbol	* j		3938932						
ANR	3939594	Symbol	at -> title		3938932						
ANR	3939595	Symbol	* * * ak		3938932						
ANR	3939596	Symbol	* m		3938932						
ANR	3939597	Symbol	* at		3938932						
ANR	3939598	Symbol	* as		3938932						
ANR	3939599	Symbol	* s		3938932						
ANR	3939600	Symbol	layers [ i - 1 ] . n_nodes		3938932						
ANR	3939601	Function	layer_sweep	546:0:14048:15213							
ANR	3939602	FunctionDef	"layer_sweep (const RGraph * g , const struct layer_t layers [ ] , int maxlayer , int i , int from_up)"		3939601	0					
ANR	3939603	CompoundStatement		547:57:14176:15213	3939601	0					
ANR	3939604	IdentifierDeclStatement	"RGraphNode * u , * v ;"	548:1:14179:14196	3939601	0	True				
ANR	3939605	IdentifierDecl	* u		3939601	0					
ANR	3939606	IdentifierDeclType	RGraphNode *		3939601	0					
ANR	3939607	Identifier	u		3939601	1					
ANR	3939608	IdentifierDecl	* v		3939601	1					
ANR	3939609	IdentifierDeclType	RGraphNode *		3939601	0					
ANR	3939610	Identifier	v		3939601	1					
ANR	3939611	IdentifierDeclStatement	"const RANode * au , * av ;"	549:1:14199:14220	3939601	1	True				
ANR	3939612	IdentifierDecl	* au		3939601	0					
ANR	3939613	IdentifierDeclType	const RANode *		3939601	0					
ANR	3939614	Identifier	au		3939601	1					
ANR	3939615	IdentifierDecl	* av		3939601	1					
ANR	3939616	IdentifierDeclType	const RANode *		3939601	0					
ANR	3939617	Identifier	av		3939601	1					
ANR	3939618	IdentifierDeclStatement	"int n_rows , j , changed = false ;"	550:1:14223:14253	3939601	2	True				
ANR	3939619	IdentifierDecl	n_rows		3939601	0					
ANR	3939620	IdentifierDeclType	int		3939601	0					
ANR	3939621	Identifier	n_rows		3939601	1					
ANR	3939622	IdentifierDecl	j		3939601	1					
ANR	3939623	IdentifierDeclType	int		3939601	0					
ANR	3939624	Identifier	j		3939601	1					
ANR	3939625	IdentifierDecl	changed = false		3939601	2					
ANR	3939626	IdentifierDeclType	int		3939601	0					
ANR	3939627	Identifier	changed		3939601	1					
ANR	3939628	AssignmentExpression	changed = false		3939601	2		=			
ANR	3939629	Identifier	false		3939601	0					
ANR	3939630	Identifier	false		3939601	1					
ANR	3939631	IdentifierDeclStatement	int len = layers [ i ] . n_nodes ;	551:1:14256:14283	3939601	3	True				
ANR	3939632	IdentifierDecl	len = layers [ i ] . n_nodes		3939601	0					
ANR	3939633	IdentifierDeclType	int		3939601	0					
ANR	3939634	Identifier	len		3939601	1					
ANR	3939635	AssignmentExpression	len = layers [ i ] . n_nodes		3939601	2		=			
ANR	3939636	Identifier	len		3939601	0					
ANR	3939637	MemberAccess	layers [ i ] . n_nodes		3939601	1					
ANR	3939638	ArrayIndexing	layers [ i ]		3939601	0					
ANR	3939639	Identifier	layers		3939601	0					
ANR	3939640	Identifier	i		3939601	1					
ANR	3939641	Identifier	n_nodes		3939601	1					
ANR	3939642	IdentifierDeclStatement	"int * * cross_matrix = get_crossing_matrix ( g , layers , maxlayer , i , from_up , & n_rows ) ;"	553:1:14287:14370	3939601	4	True				
ANR	3939643	IdentifierDecl	"* * cross_matrix = get_crossing_matrix ( g , layers , maxlayer , i , from_up , & n_rows )"		3939601	0					
ANR	3939644	IdentifierDeclType	int * *		3939601	0					
ANR	3939645	Identifier	cross_matrix		3939601	1					
ANR	3939646	AssignmentExpression	"* * cross_matrix = get_crossing_matrix ( g , layers , maxlayer , i , from_up , & n_rows )"		3939601	2		=			
ANR	3939647	Identifier	cross_matrix		3939601	0					
ANR	3939648	CallExpression	"get_crossing_matrix ( g , layers , maxlayer , i , from_up , & n_rows )"		3939601	1					
ANR	3939649	Callee	get_crossing_matrix		3939601	0					
ANR	3939650	Identifier	get_crossing_matrix		3939601	0					
ANR	3939651	ArgumentList	g		3939601	1					
ANR	3939652	Argument	g		3939601	0					
ANR	3939653	Identifier	g		3939601	0					
ANR	3939654	Argument	layers		3939601	1					
ANR	3939655	Identifier	layers		3939601	0					
ANR	3939656	Argument	maxlayer		3939601	2					
ANR	3939657	Identifier	maxlayer		3939601	0					
ANR	3939658	Argument	i		3939601	3					
ANR	3939659	Identifier	i		3939601	0					
ANR	3939660	Argument	from_up		3939601	4					
ANR	3939661	Identifier	from_up		3939601	0					
ANR	3939662	Argument	& n_rows		3939601	5					
ANR	3939663	UnaryOperationExpression	& n_rows		3939601	0					
ANR	3939664	UnaryOperator	&		3939601	0					
ANR	3939665	Identifier	n_rows		3939601	1					
ANR	3939666	IfStatement	if ( ! cross_matrix )		3939601	5					
ANR	3939667	Condition	! cross_matrix	554:5:14377:14389	3939601	0	True				
ANR	3939668	UnaryOperationExpression	! cross_matrix		3939601	0					
ANR	3939669	UnaryOperator	!		3939601	0					
ANR	3939670	Identifier	cross_matrix		3939601	1					
ANR	3939671	CompoundStatement		8:20:215:215	3939601	1					
ANR	3939672	ReturnStatement	return - 1 ;	555:2:14396:14405	3939601	0	True				
ANR	3939673	UnaryOperationExpression	- 1		3939601	0					
ANR	3939674	UnaryOperator	-		3939601	0					
ANR	3939675	PrimaryExpression	1		3939601	1					
ANR	3939676	ForStatement	for ( j = 0 ; j < len - 1 ; ++ j )		3939601	6					
ANR	3939677	ForInit	j = 0 ;	558:6:14434:14439	3939601	0	True				
ANR	3939678	AssignmentExpression	j = 0		3939601	0		=			
ANR	3939679	Identifier	j		3939601	0					
ANR	3939680	PrimaryExpression	0		3939601	1					
ANR	3939681	Condition	j < len - 1	558:13:14441:14451	3939601	1	True				
ANR	3939682	RelationalExpression	j < len - 1		3939601	0		<			
ANR	3939683	Identifier	j		3939601	0					
ANR	3939684	AdditiveExpression	len - 1		3939601	1		-			
ANR	3939685	Identifier	len		3939601	0					
ANR	3939686	PrimaryExpression	1		3939601	1					
ANR	3939687	UnaryExpression	++ j	558:26:14454:14456	3939601	2	True				
ANR	3939688	IncDec	++		3939601	0					
ANR	3939689	Identifier	j		3939601	1					
ANR	3939690	CompoundStatement		13:2:286:302	3939601	3					
ANR	3939691	IdentifierDeclStatement	"int auidx , avidx ;"	559:2:14463:14479	3939601	0	True				
ANR	3939692	IdentifierDecl	auidx		3939601	0					
ANR	3939693	IdentifierDeclType	int		3939601	0					
ANR	3939694	Identifier	auidx		3939601	1					
ANR	3939695	IdentifierDecl	avidx		3939601	1					
ANR	3939696	IdentifierDeclType	int		3939601	0					
ANR	3939697	Identifier	avidx		3939601	1					
ANR	3939698	ExpressionStatement	u = layers [ i ] . nodes [ j ]	561:2:14484:14506	3939601	1	True				
ANR	3939699	AssignmentExpression	u = layers [ i ] . nodes [ j ]		3939601	0		=			
ANR	3939700	Identifier	u		3939601	0					
ANR	3939701	ArrayIndexing	layers [ i ] . nodes [ j ]		3939601	1					
ANR	3939702	MemberAccess	layers [ i ] . nodes		3939601	0					
ANR	3939703	ArrayIndexing	layers [ i ]		3939601	0					
ANR	3939704	Identifier	layers		3939601	0					
ANR	3939705	Identifier	i		3939601	1					
ANR	3939706	Identifier	nodes		3939601	1					
ANR	3939707	Identifier	j		3939601	1					
ANR	3939708	ExpressionStatement	v = layers [ i ] . nodes [ j + 1 ]	562:2:14510:14536	3939601	2	True				
ANR	3939709	AssignmentExpression	v = layers [ i ] . nodes [ j + 1 ]		3939601	0		=			
ANR	3939710	Identifier	v		3939601	0					
ANR	3939711	ArrayIndexing	layers [ i ] . nodes [ j + 1 ]		3939601	1					
ANR	3939712	MemberAccess	layers [ i ] . nodes		3939601	0					
ANR	3939713	ArrayIndexing	layers [ i ]		3939601	0					
ANR	3939714	Identifier	layers		3939601	0					
ANR	3939715	Identifier	i		3939601	1					
ANR	3939716	Identifier	nodes		3939601	1					
ANR	3939717	AdditiveExpression	j + 1		3939601	1		+			
ANR	3939718	Identifier	j		3939601	0					
ANR	3939719	PrimaryExpression	1		3939601	1					
ANR	3939720	ExpressionStatement	au = get_anode ( u )	563:2:14540:14558	3939601	3	True				
ANR	3939721	AssignmentExpression	au = get_anode ( u )		3939601	0		=			
ANR	3939722	Identifier	au		3939601	0					
ANR	3939723	CallExpression	get_anode ( u )		3939601	1					
ANR	3939724	Callee	get_anode		3939601	0					
ANR	3939725	Identifier	get_anode		3939601	0					
ANR	3939726	ArgumentList	u		3939601	1					
ANR	3939727	Argument	u		3939601	0					
ANR	3939728	Identifier	u		3939601	0					
ANR	3939729	ExpressionStatement	av = get_anode ( v )	564:2:14562:14580	3939601	4	True				
ANR	3939730	AssignmentExpression	av = get_anode ( v )		3939601	0		=			
ANR	3939731	Identifier	av		3939601	0					
ANR	3939732	CallExpression	get_anode ( v )		3939601	1					
ANR	3939733	Callee	get_anode		3939601	0					
ANR	3939734	Identifier	get_anode		3939601	0					
ANR	3939735	ArgumentList	v		3939601	1					
ANR	3939736	Argument	v		3939601	0					
ANR	3939737	Identifier	v		3939601	0					
ANR	3939738	ExpressionStatement	auidx = au -> pos_in_layer	565:2:14584:14608	3939601	5	True				
ANR	3939739	AssignmentExpression	auidx = au -> pos_in_layer		3939601	0		=			
ANR	3939740	Identifier	auidx		3939601	0					
ANR	3939741	PtrMemberAccess	au -> pos_in_layer		3939601	1					
ANR	3939742	Identifier	au		3939601	0					
ANR	3939743	Identifier	pos_in_layer		3939601	1					
ANR	3939744	ExpressionStatement	avidx = av -> pos_in_layer	566:2:14612:14636	3939601	6	True				
ANR	3939745	AssignmentExpression	avidx = av -> pos_in_layer		3939601	0		=			
ANR	3939746	Identifier	avidx		3939601	0					
ANR	3939747	PtrMemberAccess	av -> pos_in_layer		3939601	1					
ANR	3939748	Identifier	av		3939601	0					
ANR	3939749	Identifier	pos_in_layer		3939601	1					
ANR	3939750	IfStatement	if ( cross_matrix [ auidx ] [ avidx ] > cross_matrix [ avidx ] [ auidx ] )		3939601	7					
ANR	3939751	Condition	cross_matrix [ auidx ] [ avidx ] > cross_matrix [ avidx ] [ auidx ]	568:6:14645:14699	3939601	0	True				
ANR	3939752	RelationalExpression	cross_matrix [ auidx ] [ avidx ] > cross_matrix [ avidx ] [ auidx ]		3939601	0		>			
ANR	3939753	ArrayIndexing	cross_matrix [ auidx ] [ avidx ]		3939601	0					
ANR	3939754	ArrayIndexing	cross_matrix [ auidx ]		3939601	0					
ANR	3939755	Identifier	cross_matrix		3939601	0					
ANR	3939756	Identifier	auidx		3939601	1					
ANR	3939757	Identifier	avidx		3939601	1					
ANR	3939758	ArrayIndexing	cross_matrix [ avidx ] [ auidx ]		3939601	1					
ANR	3939759	ArrayIndexing	cross_matrix [ avidx ]		3939601	0					
ANR	3939760	Identifier	cross_matrix		3939601	0					
ANR	3939761	Identifier	avidx		3939601	1					
ANR	3939762	Identifier	auidx		3939601	1					
ANR	3939763	CompoundStatement		22:63:525:525	3939601	1					
ANR	3939764	ExpressionStatement	layers [ i ] . nodes [ j ] = v	570:3:14730:14752	3939601	0	True				
ANR	3939765	AssignmentExpression	layers [ i ] . nodes [ j ] = v		3939601	0		=			
ANR	3939766	ArrayIndexing	layers [ i ] . nodes [ j ]		3939601	0					
ANR	3939767	MemberAccess	layers [ i ] . nodes		3939601	0					
ANR	3939768	ArrayIndexing	layers [ i ]		3939601	0					
ANR	3939769	Identifier	layers		3939601	0					
ANR	3939770	Identifier	i		3939601	1					
ANR	3939771	Identifier	nodes		3939601	1					
ANR	3939772	Identifier	j		3939601	1					
ANR	3939773	Identifier	v		3939601	1					
ANR	3939774	ExpressionStatement	layers [ i ] . nodes [ j + 1 ] = u	571:3:14757:14783	3939601	1	True				
ANR	3939775	AssignmentExpression	layers [ i ] . nodes [ j + 1 ] = u		3939601	0		=			
ANR	3939776	ArrayIndexing	layers [ i ] . nodes [ j + 1 ]		3939601	0					
ANR	3939777	MemberAccess	layers [ i ] . nodes		3939601	0					
ANR	3939778	ArrayIndexing	layers [ i ]		3939601	0					
ANR	3939779	Identifier	layers		3939601	0					
ANR	3939780	Identifier	i		3939601	1					
ANR	3939781	Identifier	nodes		3939601	1					
ANR	3939782	AdditiveExpression	j + 1		3939601	1		+			
ANR	3939783	Identifier	j		3939601	0					
ANR	3939784	PrimaryExpression	1		3939601	1					
ANR	3939785	Identifier	u		3939601	1					
ANR	3939786	ExpressionStatement	changed = true	572:3:14788:14802	3939601	2	True				
ANR	3939787	AssignmentExpression	changed = true		3939601	0		=			
ANR	3939788	Identifier	changed		3939601	0					
ANR	3939789	Identifier	true		3939601	1					
ANR	3939790	ForStatement	for ( j = 0 ; j < layers [ i ] . n_nodes ; ++ j )		3939601	7					
ANR	3939791	ForInit	j = 0 ;	579:6:15003:15008	3939601	0	True				
ANR	3939792	AssignmentExpression	j = 0		3939601	0		=			
ANR	3939793	Identifier	j		3939601	0					
ANR	3939794	PrimaryExpression	0		3939601	1					
ANR	3939795	Condition	j < layers [ i ] . n_nodes	579:13:15010:15030	3939601	1	True				
ANR	3939796	RelationalExpression	j < layers [ i ] . n_nodes		3939601	0		<			
ANR	3939797	Identifier	j		3939601	0					
ANR	3939798	MemberAccess	layers [ i ] . n_nodes		3939601	1					
ANR	3939799	ArrayIndexing	layers [ i ]		3939601	0					
ANR	3939800	Identifier	layers		3939601	0					
ANR	3939801	Identifier	i		3939601	1					
ANR	3939802	Identifier	n_nodes		3939601	1					
ANR	3939803	UnaryExpression	++ j	579:36:15033:15035	3939601	2	True				
ANR	3939804	IncDec	++		3939601	0					
ANR	3939805	Identifier	j		3939601	1					
ANR	3939806	CompoundStatement		34:2:865:907	3939601	3					
ANR	3939807	IdentifierDeclStatement	RANode * n = get_anode ( layers [ i ] . nodes [ j ] ) ;	580:2:15042:15084	3939601	0	True				
ANR	3939808	IdentifierDecl	* n = get_anode ( layers [ i ] . nodes [ j ] )		3939601	0					
ANR	3939809	IdentifierDeclType	RANode *		3939601	0					
ANR	3939810	Identifier	n		3939601	1					
ANR	3939811	AssignmentExpression	* n = get_anode ( layers [ i ] . nodes [ j ] )		3939601	2		=			
ANR	3939812	Identifier	n		3939601	0					
ANR	3939813	CallExpression	get_anode ( layers [ i ] . nodes [ j ] )		3939601	1					
ANR	3939814	Callee	get_anode		3939601	0					
ANR	3939815	Identifier	get_anode		3939601	0					
ANR	3939816	ArgumentList	layers [ i ] . nodes [ j ]		3939601	1					
ANR	3939817	Argument	layers [ i ] . nodes [ j ]		3939601	0					
ANR	3939818	ArrayIndexing	layers [ i ] . nodes [ j ]		3939601	0					
ANR	3939819	MemberAccess	layers [ i ] . nodes		3939601	0					
ANR	3939820	ArrayIndexing	layers [ i ]		3939601	0					
ANR	3939821	Identifier	layers		3939601	0					
ANR	3939822	Identifier	i		3939601	1					
ANR	3939823	Identifier	nodes		3939601	1					
ANR	3939824	Identifier	j		3939601	1					
ANR	3939825	ExpressionStatement	n -> pos_in_layer = j	581:2:15088:15107	3939601	1	True				
ANR	3939826	AssignmentExpression	n -> pos_in_layer = j		3939601	0		=			
ANR	3939827	PtrMemberAccess	n -> pos_in_layer		3939601	0					
ANR	3939828	Identifier	n		3939601	0					
ANR	3939829	Identifier	pos_in_layer		3939601	1					
ANR	3939830	Identifier	j		3939601	1					
ANR	3939831	ForStatement	for ( j = 0 ; j < n_rows ; ++ j )		3939601	8					
ANR	3939832	ForInit	j = 0 ;	584:6:15119:15124	3939601	0	True				
ANR	3939833	AssignmentExpression	j = 0		3939601	0		=			
ANR	3939834	Identifier	j		3939601	0					
ANR	3939835	PrimaryExpression	0		3939601	1					
ANR	3939836	Condition	j < n_rows	584:13:15126:15135	3939601	1	True				
ANR	3939837	RelationalExpression	j < n_rows		3939601	0		<			
ANR	3939838	Identifier	j		3939601	0					
ANR	3939839	Identifier	n_rows		3939601	1					
ANR	3939840	UnaryExpression	++ j	584:25:15138:15140	3939601	2	True				
ANR	3939841	IncDec	++		3939601	0					
ANR	3939842	Identifier	j		3939601	1					
ANR	3939843	CompoundStatement		38:30:966:966	3939601	3					
ANR	3939844	ExpressionStatement	free ( cross_matrix [ j ] )	585:2:15147:15169	3939601	0	True				
ANR	3939845	CallExpression	free ( cross_matrix [ j ] )		3939601	0					
ANR	3939846	Callee	free		3939601	0					
ANR	3939847	Identifier	free		3939601	0					
ANR	3939848	ArgumentList	cross_matrix [ j ]		3939601	1					
ANR	3939849	Argument	cross_matrix [ j ]		3939601	0					
ANR	3939850	ArrayIndexing	cross_matrix [ j ]		3939601	0					
ANR	3939851	Identifier	cross_matrix		3939601	0					
ANR	3939852	Identifier	j		3939601	1					
ANR	3939853	ExpressionStatement	free ( cross_matrix )	587:1:15175:15194	3939601	9	True				
ANR	3939854	CallExpression	free ( cross_matrix )		3939601	0					
ANR	3939855	Callee	free		3939601	0					
ANR	3939856	Identifier	free		3939601	0					
ANR	3939857	ArgumentList	cross_matrix		3939601	1					
ANR	3939858	Argument	cross_matrix		3939601	0					
ANR	3939859	Identifier	cross_matrix		3939601	0					
ANR	3939860	ReturnStatement	return changed ;	588:1:15197:15211	3939601	10	True				
ANR	3939861	Identifier	changed		3939601	0					
ANR	3939862	ReturnType	static int		3939601	1					
ANR	3939863	Identifier	layer_sweep		3939601	2					
ANR	3939864	ParameterList	"const RGraph * g , const struct layer_t layers [ ] , int maxlayer , int i , int from_up"		3939601	3					
ANR	3939865	Parameter	const RGraph * g	546:23:14071:14085	3939601	0	True				
ANR	3939866	ParameterType	const RGraph *		3939601	0					
ANR	3939867	Identifier	g		3939601	1					
ANR	3939868	Parameter	const struct layer_t layers [ ]	546:40:14088:14116	3939601	1	True				
ANR	3939869	ParameterType	const struct layer_t [ ]		3939601	0					
ANR	3939870	Identifier	layers		3939601	1					
ANR	3939871	Parameter	int maxlayer	547:23:14142:14153	3939601	2	True				
ANR	3939872	ParameterType	int		3939601	0					
ANR	3939873	Identifier	maxlayer		3939601	1					
ANR	3939874	Parameter	int i	547:37:14156:14160	3939601	3	True				
ANR	3939875	ParameterType	int		3939601	0					
ANR	3939876	Identifier	i		3939601	1					
ANR	3939877	Parameter	int from_up	547:44:14163:14173	3939601	4	True				
ANR	3939878	ParameterType	int		3939601	0					
ANR	3939879	Identifier	from_up		3939601	1					
ANR	3939880	CFGEntryNode	ENTRY		3939601		True				
ANR	3939881	CFGExitNode	EXIT		3939601		True				
ANR	3939882	Symbol	* * layers		3939601						
ANR	3939883	Symbol	from_up		3939601						
ANR	3939884	Symbol	auidx		3939601						
ANR	3939885	Symbol	* layers [ i ] . nodes		3939601						
ANR	3939886	Symbol	layers [ i ] . n_nodes		3939601						
ANR	3939887	Symbol	* * auidx		3939601						
ANR	3939888	Symbol	len		3939601						
ANR	3939889	Symbol	layers		3939601						
ANR	3939890	Symbol	* avidx		3939601						
ANR	3939891	Symbol	& n_rows		3939601						
ANR	3939892	Symbol	get_crossing_matrix		3939601						
ANR	3939893	Symbol	* cross_matrix		3939601						
ANR	3939894	Symbol	* * i		3939601						
ANR	3939895	Symbol	get_anode		3939601						
ANR	3939896	Symbol	av -> pos_in_layer		3939601						
ANR	3939897	Symbol	cross_matrix		3939601						
ANR	3939898	Symbol	avidx		3939601						
ANR	3939899	Symbol	g		3939601						
ANR	3939900	Symbol	false		3939601						
ANR	3939901	Symbol	* * cross_matrix		3939601						
ANR	3939902	Symbol	i		3939601						
ANR	3939903	Symbol	j		3939601						
ANR	3939904	Symbol	* layers		3939601						
ANR	3939905	Symbol	maxlayer		3939601						
ANR	3939906	Symbol	n		3939601						
ANR	3939907	Symbol	n_rows		3939601						
ANR	3939908	Symbol	layers [ i ] . nodes		3939601						
ANR	3939909	Symbol	* * avidx		3939601						
ANR	3939910	Symbol	* i		3939601						
ANR	3939911	Symbol	n -> pos_in_layer		3939601						
ANR	3939912	Symbol	au		3939601						
ANR	3939913	Symbol	* j		3939601						
ANR	3939914	Symbol	u		3939601						
ANR	3939915	Symbol	av		3939601						
ANR	3939916	Symbol	v		3939601						
ANR	3939917	Symbol	* av		3939601						
ANR	3939918	Symbol	true		3939601						
ANR	3939919	Symbol	* n		3939601						
ANR	3939920	Symbol	* au		3939601						
ANR	3939921	Symbol	au -> pos_in_layer		3939601						
ANR	3939922	Symbol	* auidx		3939601						
ANR	3939923	Symbol	changed		3939601						
ANR	3939924	Function	view_cyclic_edge	591:0:15216:15512							
ANR	3939925	FunctionDef	"view_cyclic_edge (const RGraphEdge * e , const RGraphVisitor * vis)"		3939924	0					
ANR	3939926	CompoundStatement		591:76:15292:15512	3939924	0					
ANR	3939927	IdentifierDeclStatement	const RAGraph * g = ( RAGraph * ) vis -> data ;	592:1:15295:15335	3939924	0	True				
ANR	3939928	IdentifierDecl	* g = ( RAGraph * ) vis -> data		3939924	0					
ANR	3939929	IdentifierDeclType	const RAGraph *		3939924	0					
ANR	3939930	Identifier	g		3939924	1					
ANR	3939931	AssignmentExpression	* g = ( RAGraph * ) vis -> data		3939924	2		=			
ANR	3939932	Identifier	g		3939924	0					
ANR	3939933	CastExpression	( RAGraph * ) vis -> data		3939924	1					
ANR	3939934	CastTarget	RAGraph *		3939924	0					
ANR	3939935	PtrMemberAccess	vis -> data		3939924	1					
ANR	3939936	Identifier	vis		3939924	0					
ANR	3939937	Identifier	data		3939924	1					
ANR	3939938	IdentifierDeclStatement	RGraphEdge * new_e = R_NEW0 ( RGraphEdge ) ;	593:1:15338:15377	3939924	1	True				
ANR	3939939	IdentifierDecl	* new_e = R_NEW0 ( RGraphEdge )		3939924	0					
ANR	3939940	IdentifierDeclType	RGraphEdge *		3939924	0					
ANR	3939941	Identifier	new_e		3939924	1					
ANR	3939942	AssignmentExpression	* new_e = R_NEW0 ( RGraphEdge )		3939924	2		=			
ANR	3939943	Identifier	new_e		3939924	0					
ANR	3939944	CallExpression	R_NEW0 ( RGraphEdge )		3939924	1					
ANR	3939945	Callee	R_NEW0		3939924	0					
ANR	3939946	Identifier	R_NEW0		3939924	0					
ANR	3939947	ArgumentList	RGraphEdge		3939924	1					
ANR	3939948	Argument	RGraphEdge		3939924	0					
ANR	3939949	Identifier	RGraphEdge		3939924	0					
ANR	3939950	IfStatement	if ( ! new_e )		3939924	2					
ANR	3939951	Condition	! new_e	594:5:15384:15389	3939924	0	True				
ANR	3939952	UnaryOperationExpression	! new_e		3939924	0					
ANR	3939953	UnaryOperator	!		3939924	0					
ANR	3939954	Identifier	new_e		3939924	1					
ANR	3939955	CompoundStatement		4:13:99:99	3939924	1					
ANR	3939956	ReturnStatement	return ;	595:2:15396:15402	3939924	0	True				
ANR	3939957	ExpressionStatement	new_e -> from = e -> from	597:1:15408:15429	3939924	3	True				
ANR	3939958	AssignmentExpression	new_e -> from = e -> from		3939924	0		=			
ANR	3939959	PtrMemberAccess	new_e -> from		3939924	0					
ANR	3939960	Identifier	new_e		3939924	0					
ANR	3939961	Identifier	from		3939924	1					
ANR	3939962	PtrMemberAccess	e -> from		3939924	1					
ANR	3939963	Identifier	e		3939924	0					
ANR	3939964	Identifier	from		3939924	1					
ANR	3939965	ExpressionStatement	new_e -> to = e -> to	598:1:15432:15449	3939924	4	True				
ANR	3939966	AssignmentExpression	new_e -> to = e -> to		3939924	0		=			
ANR	3939967	PtrMemberAccess	new_e -> to		3939924	0					
ANR	3939968	Identifier	new_e		3939924	0					
ANR	3939969	Identifier	to		3939924	1					
ANR	3939970	PtrMemberAccess	e -> to		3939924	1					
ANR	3939971	Identifier	e		3939924	0					
ANR	3939972	Identifier	to		3939924	1					
ANR	3939973	ExpressionStatement	new_e -> nth = e -> nth	599:1:15452:15471	3939924	5	True				
ANR	3939974	AssignmentExpression	new_e -> nth = e -> nth		3939924	0		=			
ANR	3939975	PtrMemberAccess	new_e -> nth		3939924	0					
ANR	3939976	Identifier	new_e		3939924	0					
ANR	3939977	Identifier	nth		3939924	1					
ANR	3939978	PtrMemberAccess	e -> nth		3939924	1					
ANR	3939979	Identifier	e		3939924	0					
ANR	3939980	Identifier	nth		3939924	1					
ANR	3939981	ExpressionStatement	"r_list_append ( g -> back_edges , new_e )"	600:1:15474:15510	3939924	6	True				
ANR	3939982	CallExpression	"r_list_append ( g -> back_edges , new_e )"		3939924	0					
ANR	3939983	Callee	r_list_append		3939924	0					
ANR	3939984	Identifier	r_list_append		3939924	0					
ANR	3939985	ArgumentList	g -> back_edges		3939924	1					
ANR	3939986	Argument	g -> back_edges		3939924	0					
ANR	3939987	PtrMemberAccess	g -> back_edges		3939924	0					
ANR	3939988	Identifier	g		3939924	0					
ANR	3939989	Identifier	back_edges		3939924	1					
ANR	3939990	Argument	new_e		3939924	1					
ANR	3939991	Identifier	new_e		3939924	0					
ANR	3939992	ReturnType	static void		3939924	1					
ANR	3939993	Identifier	view_cyclic_edge		3939924	2					
ANR	3939994	ParameterList	"const RGraphEdge * e , const RGraphVisitor * vis"		3939924	3					
ANR	3939995	Parameter	const RGraphEdge * e	591:29:15245:15263	3939924	0	True				
ANR	3939996	ParameterType	const RGraphEdge *		3939924	0					
ANR	3939997	Identifier	e		3939924	1					
ANR	3939998	Parameter	const RGraphVisitor * vis	591:50:15266:15289	3939924	1	True				
ANR	3939999	ParameterType	const RGraphVisitor *		3939924	0					
ANR	3940000	Identifier	vis		3939924	1					
ANR	3940001	CFGEntryNode	ENTRY		3939924		True				
ANR	3940002	CFGExitNode	EXIT		3939924		True				
ANR	3940003	Symbol	vis		3939924						
ANR	3940004	Symbol	e -> from		3939924						
ANR	3940005	Symbol	e		3939924						
ANR	3940006	Symbol	RGraphEdge		3939924						
ANR	3940007	Symbol	g		3939924						
ANR	3940008	Symbol	e -> to		3939924						
ANR	3940009	Symbol	* vis		3939924						
ANR	3940010	Symbol	e -> nth		3939924						
ANR	3940011	Symbol	* new_e		3939924						
ANR	3940012	Symbol	g -> back_edges		3939924						
ANR	3940013	Symbol	new_e -> from		3939924						
ANR	3940014	Symbol	* e		3939924						
ANR	3940015	Symbol	R_NEW0		3939924						
ANR	3940016	Symbol	* g		3939924						
ANR	3940017	Symbol	new_e -> to		3939924						
ANR	3940018	Symbol	new_e -> nth		3939924						
ANR	3940019	Symbol	new_e		3939924						
ANR	3940020	Symbol	vis -> data		3939924						
ANR	3940021	Function	view_dummy	603:0:15515:15960							
ANR	3940022	FunctionDef	"view_dummy (const RGraphEdge * e , const RGraphVisitor * vis)"		3940021	0					
ANR	3940023	CompoundStatement		603:70:15585:15960	3940021	0					
ANR	3940024	IdentifierDeclStatement	const RANode * a = get_anode ( e -> from ) ;	604:1:15588:15625	3940021	0	True				
ANR	3940025	IdentifierDecl	* a = get_anode ( e -> from )		3940021	0					
ANR	3940026	IdentifierDeclType	const RANode *		3940021	0					
ANR	3940027	Identifier	a		3940021	1					
ANR	3940028	AssignmentExpression	* a = get_anode ( e -> from )		3940021	2		=			
ANR	3940029	Identifier	a		3940021	0					
ANR	3940030	CallExpression	get_anode ( e -> from )		3940021	1					
ANR	3940031	Callee	get_anode		3940021	0					
ANR	3940032	Identifier	get_anode		3940021	0					
ANR	3940033	ArgumentList	e -> from		3940021	1					
ANR	3940034	Argument	e -> from		3940021	0					
ANR	3940035	PtrMemberAccess	e -> from		3940021	0					
ANR	3940036	Identifier	e		3940021	0					
ANR	3940037	Identifier	from		3940021	1					
ANR	3940038	IdentifierDeclStatement	const RANode * b = get_anode ( e -> to ) ;	605:1:15628:15663	3940021	1	True				
ANR	3940039	IdentifierDecl	* b = get_anode ( e -> to )		3940021	0					
ANR	3940040	IdentifierDeclType	const RANode *		3940021	0					
ANR	3940041	Identifier	b		3940021	1					
ANR	3940042	AssignmentExpression	* b = get_anode ( e -> to )		3940021	2		=			
ANR	3940043	Identifier	b		3940021	0					
ANR	3940044	CallExpression	get_anode ( e -> to )		3940021	1					
ANR	3940045	Callee	get_anode		3940021	0					
ANR	3940046	Identifier	get_anode		3940021	0					
ANR	3940047	ArgumentList	e -> to		3940021	1					
ANR	3940048	Argument	e -> to		3940021	0					
ANR	3940049	PtrMemberAccess	e -> to		3940021	0					
ANR	3940050	Identifier	e		3940021	0					
ANR	3940051	Identifier	to		3940021	1					
ANR	3940052	IdentifierDeclStatement	RList * long_edges = ( RList * ) vis -> data ;	606:1:15666:15705	3940021	2	True				
ANR	3940053	IdentifierDecl	* long_edges = ( RList * ) vis -> data		3940021	0					
ANR	3940054	IdentifierDeclType	RList *		3940021	0					
ANR	3940055	Identifier	long_edges		3940021	1					
ANR	3940056	AssignmentExpression	* long_edges = ( RList * ) vis -> data		3940021	2		=			
ANR	3940057	Identifier	long_edges		3940021	0					
ANR	3940058	CastExpression	( RList * ) vis -> data		3940021	1					
ANR	3940059	CastTarget	RList *		3940021	0					
ANR	3940060	PtrMemberAccess	vis -> data		3940021	1					
ANR	3940061	Identifier	vis		3940021	0					
ANR	3940062	Identifier	data		3940021	1					
ANR	3940063	IfStatement	if ( ! a || ! b )		3940021	3					
ANR	3940064	Condition	! a || ! b	607:5:15712:15719	3940021	0	True				
ANR	3940065	OrExpression	! a || ! b		3940021	0		||			
ANR	3940066	UnaryOperationExpression	! a		3940021	0					
ANR	3940067	UnaryOperator	!		3940021	0					
ANR	3940068	Identifier	a		3940021	1					
ANR	3940069	UnaryOperationExpression	! b		3940021	1					
ANR	3940070	UnaryOperator	!		3940021	0					
ANR	3940071	Identifier	b		3940021	1					
ANR	3940072	CompoundStatement		5:15:136:136	3940021	1					
ANR	3940073	ReturnStatement	return ;	608:2:15726:15732	3940021	0	True				
ANR	3940074	IfStatement	if ( R_ABS ( a -> layer - b -> layer ) > 1 )		3940021	4					
ANR	3940075	Condition	R_ABS ( a -> layer - b -> layer ) > 1	610:5:15742:15772	3940021	0	True				
ANR	3940076	RelationalExpression	R_ABS ( a -> layer - b -> layer ) > 1		3940021	0		>			
ANR	3940077	CallExpression	R_ABS ( a -> layer - b -> layer )		3940021	0					
ANR	3940078	Callee	R_ABS		3940021	0					
ANR	3940079	Identifier	R_ABS		3940021	0					
ANR	3940080	ArgumentList	a -> layer - b -> layer		3940021	1					
ANR	3940081	Argument	a -> layer - b -> layer		3940021	0					
ANR	3940082	AdditiveExpression	a -> layer - b -> layer		3940021	0		-			
ANR	3940083	PtrMemberAccess	a -> layer		3940021	0					
ANR	3940084	Identifier	a		3940021	0					
ANR	3940085	Identifier	layer		3940021	1					
ANR	3940086	PtrMemberAccess	b -> layer		3940021	1					
ANR	3940087	Identifier	b		3940021	0					
ANR	3940088	Identifier	layer		3940021	1					
ANR	3940089	PrimaryExpression	1		3940021	1					
ANR	3940090	CompoundStatement		9:2:193:232	3940021	1					
ANR	3940091	IdentifierDeclStatement	RGraphEdge * new_e = R_NEW0 ( RGraphEdge ) ;	611:2:15779:15818	3940021	0	True				
ANR	3940092	IdentifierDecl	* new_e = R_NEW0 ( RGraphEdge )		3940021	0					
ANR	3940093	IdentifierDeclType	RGraphEdge *		3940021	0					
ANR	3940094	Identifier	new_e		3940021	1					
ANR	3940095	AssignmentExpression	* new_e = R_NEW0 ( RGraphEdge )		3940021	2		=			
ANR	3940096	Identifier	new_e		3940021	0					
ANR	3940097	CallExpression	R_NEW0 ( RGraphEdge )		3940021	1					
ANR	3940098	Callee	R_NEW0		3940021	0					
ANR	3940099	Identifier	R_NEW0		3940021	0					
ANR	3940100	ArgumentList	RGraphEdge		3940021	1					
ANR	3940101	Argument	RGraphEdge		3940021	0					
ANR	3940102	Identifier	RGraphEdge		3940021	0					
ANR	3940103	IfStatement	if ( ! new_e )		3940021	1					
ANR	3940104	Condition	! new_e	612:6:15826:15831	3940021	0	True				
ANR	3940105	UnaryOperationExpression	! new_e		3940021	0					
ANR	3940106	UnaryOperator	!		3940021	0					
ANR	3940107	Identifier	new_e		3940021	1					
ANR	3940108	CompoundStatement		10:14:248:248	3940021	1					
ANR	3940109	ReturnStatement	return ;	613:3:15839:15845	3940021	0	True				
ANR	3940110	ExpressionStatement	new_e -> from = e -> from	615:2:15853:15874	3940021	2	True				
ANR	3940111	AssignmentExpression	new_e -> from = e -> from		3940021	0		=			
ANR	3940112	PtrMemberAccess	new_e -> from		3940021	0					
ANR	3940113	Identifier	new_e		3940021	0					
ANR	3940114	Identifier	from		3940021	1					
ANR	3940115	PtrMemberAccess	e -> from		3940021	1					
ANR	3940116	Identifier	e		3940021	0					
ANR	3940117	Identifier	from		3940021	1					
ANR	3940118	ExpressionStatement	new_e -> to = e -> to	616:2:15878:15895	3940021	3	True				
ANR	3940119	AssignmentExpression	new_e -> to = e -> to		3940021	0		=			
ANR	3940120	PtrMemberAccess	new_e -> to		3940021	0					
ANR	3940121	Identifier	new_e		3940021	0					
ANR	3940122	Identifier	to		3940021	1					
ANR	3940123	PtrMemberAccess	e -> to		3940021	1					
ANR	3940124	Identifier	e		3940021	0					
ANR	3940125	Identifier	to		3940021	1					
ANR	3940126	ExpressionStatement	new_e -> nth = e -> nth	617:2:15899:15918	3940021	4	True				
ANR	3940127	AssignmentExpression	new_e -> nth = e -> nth		3940021	0		=			
ANR	3940128	PtrMemberAccess	new_e -> nth		3940021	0					
ANR	3940129	Identifier	new_e		3940021	0					
ANR	3940130	Identifier	nth		3940021	1					
ANR	3940131	PtrMemberAccess	e -> nth		3940021	1					
ANR	3940132	Identifier	e		3940021	0					
ANR	3940133	Identifier	nth		3940021	1					
ANR	3940134	ExpressionStatement	"r_list_append ( long_edges , new_e )"	618:2:15922:15955	3940021	5	True				
ANR	3940135	CallExpression	"r_list_append ( long_edges , new_e )"		3940021	0					
ANR	3940136	Callee	r_list_append		3940021	0					
ANR	3940137	Identifier	r_list_append		3940021	0					
ANR	3940138	ArgumentList	long_edges		3940021	1					
ANR	3940139	Argument	long_edges		3940021	0					
ANR	3940140	Identifier	long_edges		3940021	0					
ANR	3940141	Argument	new_e		3940021	1					
ANR	3940142	Identifier	new_e		3940021	0					
ANR	3940143	ReturnType	static void		3940021	1					
ANR	3940144	Identifier	view_dummy		3940021	2					
ANR	3940145	ParameterList	"const RGraphEdge * e , const RGraphVisitor * vis"		3940021	3					
ANR	3940146	Parameter	const RGraphEdge * e	603:23:15538:15556	3940021	0	True				
ANR	3940147	ParameterType	const RGraphEdge *		3940021	0					
ANR	3940148	Identifier	e		3940021	1					
ANR	3940149	Parameter	const RGraphVisitor * vis	603:44:15559:15582	3940021	1	True				
ANR	3940150	ParameterType	const RGraphVisitor *		3940021	0					
ANR	3940151	Identifier	vis		3940021	1					
ANR	3940152	CFGEntryNode	ENTRY		3940021		True				
ANR	3940153	CFGExitNode	EXIT		3940021		True				
ANR	3940154	Symbol	vis		3940021						
ANR	3940155	Symbol	a		3940021						
ANR	3940156	Symbol	b		3940021						
ANR	3940157	Symbol	e -> from		3940021						
ANR	3940158	Symbol	get_anode		3940021						
ANR	3940159	Symbol	e		3940021						
ANR	3940160	Symbol	RGraphEdge		3940021						
ANR	3940161	Symbol	e -> to		3940021						
ANR	3940162	Symbol	* vis		3940021						
ANR	3940163	Symbol	R_ABS		3940021						
ANR	3940164	Symbol	* a		3940021						
ANR	3940165	Symbol	* b		3940021						
ANR	3940166	Symbol	e -> nth		3940021						
ANR	3940167	Symbol	* new_e		3940021						
ANR	3940168	Symbol	* e		3940021						
ANR	3940169	Symbol	new_e -> from		3940021						
ANR	3940170	Symbol	R_NEW0		3940021						
ANR	3940171	Symbol	a -> layer		3940021						
ANR	3940172	Symbol	new_e -> to		3940021						
ANR	3940173	Symbol	long_edges		3940021						
ANR	3940174	Symbol	new_e -> nth		3940021						
ANR	3940175	Symbol	new_e		3940021						
ANR	3940176	Symbol	vis -> data		3940021						
ANR	3940177	Symbol	b -> layer		3940021						
ANR	3940178	Function	remove_cycles	624:0:16083:16646							
ANR	3940179	FunctionDef	remove_cycles (RAGraph * g)		3940178	0					
ANR	3940180	CompoundStatement		624:38:16121:16646	3940178	0					
ANR	3940181	IdentifierDeclStatement	"RGraphVisitor cyclic_vis = { NULL , NULL , NULL , NULL , NULL , NULL } ;"	625:1:16124:16192	3940178	0	True				
ANR	3940182	IdentifierDecl	"cyclic_vis = { NULL , NULL , NULL , NULL , NULL , NULL }"		3940178	0					
ANR	3940183	IdentifierDeclType	RGraphVisitor		3940178	0					
ANR	3940184	Identifier	cyclic_vis		3940178	1					
ANR	3940185	AssignmentExpression	"cyclic_vis = { NULL , NULL , NULL , NULL , NULL , NULL }"		3940178	2		=			
ANR	3940186	Identifier	cyclic_vis		3940178	0					
ANR	3940187	InitializerList	NULL		3940178	1					
ANR	3940188	Identifier	NULL		3940178	0					
ANR	3940189	Identifier	NULL		3940178	1					
ANR	3940190	Identifier	NULL		3940178	2					
ANR	3940191	Identifier	NULL		3940178	3					
ANR	3940192	Identifier	NULL		3940178	4					
ANR	3940193	Identifier	NULL		3940178	5					
ANR	3940194	IdentifierDeclStatement	const RGraphEdge * e ;	628:1:16195:16214	3940178	1	True				
ANR	3940195	IdentifierDecl	* e		3940178	0					
ANR	3940196	IdentifierDeclType	const RGraphEdge *		3940178	0					
ANR	3940197	Identifier	e		3940178	1					
ANR	3940198	IdentifierDeclStatement	const RListIter * it ;	629:1:16217:16236	3940178	2	True				
ANR	3940199	IdentifierDecl	* it		3940178	0					
ANR	3940200	IdentifierDeclType	const RListIter *		3940178	0					
ANR	3940201	Identifier	it		3940178	1					
ANR	3940202	ExpressionStatement	g -> back_edges = r_list_new ( )	631:1:16240:16269	3940178	3	True				
ANR	3940203	AssignmentExpression	g -> back_edges = r_list_new ( )		3940178	0		=			
ANR	3940204	PtrMemberAccess	g -> back_edges		3940178	0					
ANR	3940205	Identifier	g		3940178	0					
ANR	3940206	Identifier	back_edges		3940178	1					
ANR	3940207	CallExpression	r_list_new ( )		3940178	1					
ANR	3940208	Callee	r_list_new		3940178	0					
ANR	3940209	Identifier	r_list_new		3940178	0					
ANR	3940210	ArgumentList			3940178	1					
ANR	3940211	ExpressionStatement	cyclic_vis . back_edge = ( RGraphEdgeCallback ) view_cyclic_edge	632:1:16272:16332	3940178	4	True				
ANR	3940212	AssignmentExpression	cyclic_vis . back_edge = ( RGraphEdgeCallback ) view_cyclic_edge		3940178	0		=			
ANR	3940213	MemberAccess	cyclic_vis . back_edge		3940178	0					
ANR	3940214	Identifier	cyclic_vis		3940178	0					
ANR	3940215	Identifier	back_edge		3940178	1					
ANR	3940216	CastExpression	( RGraphEdgeCallback ) view_cyclic_edge		3940178	1					
ANR	3940217	CastTarget	RGraphEdgeCallback		3940178	0					
ANR	3940218	Identifier	view_cyclic_edge		3940178	1					
ANR	3940219	ExpressionStatement	cyclic_vis . data = g	633:1:16335:16354	3940178	5	True				
ANR	3940220	AssignmentExpression	cyclic_vis . data = g		3940178	0		=			
ANR	3940221	MemberAccess	cyclic_vis . data		3940178	0					
ANR	3940222	Identifier	cyclic_vis		3940178	0					
ANR	3940223	Identifier	data		3940178	1					
ANR	3940224	Identifier	g		3940178	1					
ANR	3940225	ExpressionStatement	"r_graph_dfs ( g -> graph , & cyclic_vis )"	634:1:16357:16392	3940178	6	True				
ANR	3940226	CallExpression	"r_graph_dfs ( g -> graph , & cyclic_vis )"		3940178	0					
ANR	3940227	Callee	r_graph_dfs		3940178	0					
ANR	3940228	Identifier	r_graph_dfs		3940178	0					
ANR	3940229	ArgumentList	g -> graph		3940178	1					
ANR	3940230	Argument	g -> graph		3940178	0					
ANR	3940231	PtrMemberAccess	g -> graph		3940178	0					
ANR	3940232	Identifier	g		3940178	0					
ANR	3940233	Identifier	graph		3940178	1					
ANR	3940234	Argument	& cyclic_vis		3940178	1					
ANR	3940235	UnaryOperationExpression	& cyclic_vis		3940178	0					
ANR	3940236	UnaryOperator	&		3940178	0					
ANR	3940237	Identifier	cyclic_vis		3940178	1					
ANR	3940238	Statement	r_list_foreach	636:1:16396:16409	3940178	7	True				
ANR	3940239	Statement	(	636:16:16411:16411	3940178	8	True				
ANR	3940240	Statement	g	636:17:16412:16412	3940178	9	True				
ANR	3940241	Statement	->	636:18:16413:16414	3940178	10	True				
ANR	3940242	Statement	back_edges	636:20:16415:16424	3940178	11	True				
ANR	3940243	Statement	","	636:30:16425:16425	3940178	12	True				
ANR	3940244	Statement	it	636:32:16427:16428	3940178	13	True				
ANR	3940245	Statement	","	636:34:16429:16429	3940178	14	True				
ANR	3940246	Statement	e	636:36:16431:16431	3940178	15	True				
ANR	3940247	Statement	)	636:37:16432:16432	3940178	16	True				
ANR	3940248	CompoundStatement		15:2:369:412	3940178	17					
ANR	3940249	IdentifierDeclStatement	RANode * from = e -> from ? get_anode ( e -> from ) : NULL ;	637:2:16438:16487	3940178	0	True				
ANR	3940250	IdentifierDecl	* from = e -> from ? get_anode ( e -> from ) : NULL		3940178	0					
ANR	3940251	IdentifierDeclType	RANode *		3940178	0					
ANR	3940252	Identifier	from		3940178	1					
ANR	3940253	AssignmentExpression	* from = e -> from ? get_anode ( e -> from ) : NULL		3940178	2		=			
ANR	3940254	Identifier	from		3940178	0					
ANR	3940255	ConditionalExpression	e -> from ? get_anode ( e -> from ) : NULL		3940178	1					
ANR	3940256	Condition	e -> from		3940178	0					
ANR	3940257	PtrMemberAccess	e -> from		3940178	0					
ANR	3940258	Identifier	e		3940178	0					
ANR	3940259	Identifier	from		3940178	1					
ANR	3940260	CallExpression	get_anode ( e -> from )		3940178	1					
ANR	3940261	Callee	get_anode		3940178	0					
ANR	3940262	Identifier	get_anode		3940178	0					
ANR	3940263	ArgumentList	e -> from		3940178	1					
ANR	3940264	Argument	e -> from		3940178	0					
ANR	3940265	PtrMemberAccess	e -> from		3940178	0					
ANR	3940266	Identifier	e		3940178	0					
ANR	3940267	Identifier	from		3940178	1					
ANR	3940268	Identifier	NULL		3940178	2					
ANR	3940269	IdentifierDeclStatement	RANode * to = e -> to ? get_anode ( e -> to ) : NULL ;	638:2:16491:16534	3940178	1	True				
ANR	3940270	IdentifierDecl	* to = e -> to ? get_anode ( e -> to ) : NULL		3940178	0					
ANR	3940271	IdentifierDeclType	RANode *		3940178	0					
ANR	3940272	Identifier	to		3940178	1					
ANR	3940273	AssignmentExpression	* to = e -> to ? get_anode ( e -> to ) : NULL		3940178	2		=			
ANR	3940274	Identifier	to		3940178	0					
ANR	3940275	ConditionalExpression	e -> to ? get_anode ( e -> to ) : NULL		3940178	1					
ANR	3940276	Condition	e -> to		3940178	0					
ANR	3940277	PtrMemberAccess	e -> to		3940178	0					
ANR	3940278	Identifier	e		3940178	0					
ANR	3940279	Identifier	to		3940178	1					
ANR	3940280	CallExpression	get_anode ( e -> to )		3940178	1					
ANR	3940281	Callee	get_anode		3940178	0					
ANR	3940282	Identifier	get_anode		3940178	0					
ANR	3940283	ArgumentList	e -> to		3940178	1					
ANR	3940284	Argument	e -> to		3940178	0					
ANR	3940285	PtrMemberAccess	e -> to		3940178	0					
ANR	3940286	Identifier	e		3940178	0					
ANR	3940287	Identifier	to		3940178	1					
ANR	3940288	Identifier	NULL		3940178	2					
ANR	3940289	IfStatement	if ( from && to )		3940178	2					
ANR	3940290	Condition	from && to	639:6:16542:16551	3940178	0	True				
ANR	3940291	AndExpression	from && to		3940178	0		&&			
ANR	3940292	Identifier	from		3940178	0					
ANR	3940293	Identifier	to		3940178	1					
ANR	3940294	CompoundStatement		16:18:432:432	3940178	1					
ANR	3940295	ExpressionStatement	"r_agraph_del_edge ( g , from , to )"	640:3:16559:16590	3940178	0	True				
ANR	3940296	CallExpression	"r_agraph_del_edge ( g , from , to )"		3940178	0					
ANR	3940297	Callee	r_agraph_del_edge		3940178	0					
ANR	3940298	Identifier	r_agraph_del_edge		3940178	0					
ANR	3940299	ArgumentList	g		3940178	1					
ANR	3940300	Argument	g		3940178	0					
ANR	3940301	Identifier	g		3940178	0					
ANR	3940302	Argument	from		3940178	1					
ANR	3940303	Identifier	from		3940178	0					
ANR	3940304	Argument	to		3940178	2					
ANR	3940305	Identifier	to		3940178	0					
ANR	3940306	ExpressionStatement	"r_agraph_add_edge_at ( g , to , from , e -> nth )"	641:3:16595:16637	3940178	1	True				
ANR	3940307	CallExpression	"r_agraph_add_edge_at ( g , to , from , e -> nth )"		3940178	0					
ANR	3940308	Callee	r_agraph_add_edge_at		3940178	0					
ANR	3940309	Identifier	r_agraph_add_edge_at		3940178	0					
ANR	3940310	ArgumentList	g		3940178	1					
ANR	3940311	Argument	g		3940178	0					
ANR	3940312	Identifier	g		3940178	0					
ANR	3940313	Argument	to		3940178	1					
ANR	3940314	Identifier	to		3940178	0					
ANR	3940315	Argument	from		3940178	2					
ANR	3940316	Identifier	from		3940178	0					
ANR	3940317	Argument	e -> nth		3940178	3					
ANR	3940318	PtrMemberAccess	e -> nth		3940178	0					
ANR	3940319	Identifier	e		3940178	0					
ANR	3940320	Identifier	nth		3940178	1					
ANR	3940321	ReturnType	static void		3940178	1					
ANR	3940322	Identifier	remove_cycles		3940178	2					
ANR	3940323	ParameterList	RAGraph * g		3940178	3					
ANR	3940324	Parameter	RAGraph * g	624:26:16109:16118	3940178	0	True				
ANR	3940325	ParameterType	RAGraph *		3940178	0					
ANR	3940326	Identifier	g		3940178	1					
ANR	3940327	CFGEntryNode	ENTRY		3940178		True				
ANR	3940328	CFGExitNode	EXIT		3940178		True				
ANR	3940329	Symbol	& cyclic_vis		3940178						
ANR	3940330	Symbol	NULL		3940178						
ANR	3940331	Symbol	e -> from		3940178						
ANR	3940332	Symbol	get_anode		3940178						
ANR	3940333	Symbol	e		3940178						
ANR	3940334	Symbol	cyclic_vis . data		3940178						
ANR	3940335	Symbol	g		3940178						
ANR	3940336	Symbol	e -> to		3940178						
ANR	3940337	Symbol	it		3940178						
ANR	3940338	Symbol	e -> nth		3940178						
ANR	3940339	Symbol	g -> back_edges		3940178						
ANR	3940340	Symbol	* e		3940178						
ANR	3940341	Symbol	* g		3940178						
ANR	3940342	Symbol	g -> graph		3940178						
ANR	3940343	Symbol	from		3940178						
ANR	3940344	Symbol	cyclic_vis		3940178						
ANR	3940345	Symbol	to		3940178						
ANR	3940346	Symbol	view_cyclic_edge		3940178						
ANR	3940347	Symbol	cyclic_vis . back_edge		3940178						
ANR	3940348	Symbol	r_list_new		3940178						
ANR	3940349	Function	add_sorted	646:0:16649:16766							
ANR	3940350	FunctionDef	"add_sorted (RGraphNode * n , RGraphVisitor * vis)"		3940349	0					
ANR	3940351	CompoundStatement		646:58:16707:16766	3940349	0					
ANR	3940352	IdentifierDeclStatement	RList * l = ( RList * ) vis -> data ;	647:1:16710:16740	3940349	0	True				
ANR	3940353	IdentifierDecl	* l = ( RList * ) vis -> data		3940349	0					
ANR	3940354	IdentifierDeclType	RList *		3940349	0					
ANR	3940355	Identifier	l		3940349	1					
ANR	3940356	AssignmentExpression	* l = ( RList * ) vis -> data		3940349	2		=			
ANR	3940357	Identifier	l		3940349	0					
ANR	3940358	CastExpression	( RList * ) vis -> data		3940349	1					
ANR	3940359	CastTarget	RList *		3940349	0					
ANR	3940360	PtrMemberAccess	vis -> data		3940349	1					
ANR	3940361	Identifier	vis		3940349	0					
ANR	3940362	Identifier	data		3940349	1					
ANR	3940363	ExpressionStatement	"r_list_prepend ( l , n )"	648:1:16743:16764	3940349	1	True				
ANR	3940364	CallExpression	"r_list_prepend ( l , n )"		3940349	0					
ANR	3940365	Callee	r_list_prepend		3940349	0					
ANR	3940366	Identifier	r_list_prepend		3940349	0					
ANR	3940367	ArgumentList	l		3940349	1					
ANR	3940368	Argument	l		3940349	0					
ANR	3940369	Identifier	l		3940349	0					
ANR	3940370	Argument	n		3940349	1					
ANR	3940371	Identifier	n		3940349	0					
ANR	3940372	ReturnType	static void		3940349	1					
ANR	3940373	Identifier	add_sorted		3940349	2					
ANR	3940374	ParameterList	"RGraphNode * n , RGraphVisitor * vis"		3940349	3					
ANR	3940375	Parameter	RGraphNode * n	646:23:16672:16684	3940349	0	True				
ANR	3940376	ParameterType	RGraphNode *		3940349	0					
ANR	3940377	Identifier	n		3940349	1					
ANR	3940378	Parameter	RGraphVisitor * vis	646:38:16687:16704	3940349	1	True				
ANR	3940379	ParameterType	RGraphVisitor *		3940349	0					
ANR	3940380	Identifier	vis		3940349	1					
ANR	3940381	CFGEntryNode	ENTRY		3940349		True				
ANR	3940382	CFGExitNode	EXIT		3940349		True				
ANR	3940383	Symbol	vis		3940349						
ANR	3940384	Symbol	* vis		3940349						
ANR	3940385	Symbol	l		3940349						
ANR	3940386	Symbol	vis -> data		3940349						
ANR	3940387	Symbol	n		3940349						
ANR	3940388	Function	assign_layers	657:0:17096:17793							
ANR	3940389	FunctionDef	assign_layers (const RAGraph * g)		3940388	0					
ANR	3940390	CompoundStatement		657:44:17140:17793	3940388	0					
ANR	3940391	IdentifierDeclStatement	"RGraphVisitor layer_vis = { NULL , NULL , NULL , NULL , NULL , NULL } ;"	658:1:17143:17210	3940388	0	True				
ANR	3940392	IdentifierDecl	"layer_vis = { NULL , NULL , NULL , NULL , NULL , NULL }"		3940388	0					
ANR	3940393	IdentifierDeclType	RGraphVisitor		3940388	0					
ANR	3940394	Identifier	layer_vis		3940388	1					
ANR	3940395	AssignmentExpression	"layer_vis = { NULL , NULL , NULL , NULL , NULL , NULL }"		3940388	2		=			
ANR	3940396	Identifier	layer_vis		3940388	0					
ANR	3940397	InitializerList	NULL		3940388	1					
ANR	3940398	Identifier	NULL		3940388	0					
ANR	3940399	Identifier	NULL		3940388	1					
ANR	3940400	Identifier	NULL		3940388	2					
ANR	3940401	Identifier	NULL		3940388	3					
ANR	3940402	Identifier	NULL		3940388	4					
ANR	3940403	Identifier	NULL		3940388	5					
ANR	3940404	IdentifierDeclStatement	const RGraphNode * gn ;	661:1:17213:17233	3940388	1	True				
ANR	3940405	IdentifierDecl	* gn		3940388	0					
ANR	3940406	IdentifierDeclType	const RGraphNode *		3940388	0					
ANR	3940407	Identifier	gn		3940388	1					
ANR	3940408	IdentifierDeclStatement	const RListIter * it ;	662:1:17236:17255	3940388	2	True				
ANR	3940409	IdentifierDecl	* it		3940388	0					
ANR	3940410	IdentifierDeclType	const RListIter *		3940388	0					
ANR	3940411	Identifier	it		3940388	1					
ANR	3940412	IdentifierDeclStatement	RANode * n ;	663:1:17258:17267	3940388	3	True				
ANR	3940413	IdentifierDecl	* n		3940388	0					
ANR	3940414	IdentifierDeclType	RANode *		3940388	0					
ANR	3940415	Identifier	n		3940388	1					
ANR	3940416	IdentifierDeclStatement	RList * topological_sort = r_list_new ( ) ;	664:1:17270:17309	3940388	4	True				
ANR	3940417	IdentifierDecl	* topological_sort = r_list_new ( )		3940388	0					
ANR	3940418	IdentifierDeclType	RList *		3940388	0					
ANR	3940419	Identifier	topological_sort		3940388	1					
ANR	3940420	AssignmentExpression	* topological_sort = r_list_new ( )		3940388	2		=			
ANR	3940421	Identifier	topological_sort		3940388	0					
ANR	3940422	CallExpression	r_list_new ( )		3940388	1					
ANR	3940423	Callee	r_list_new		3940388	0					
ANR	3940424	Identifier	r_list_new		3940388	0					
ANR	3940425	ArgumentList			3940388	1					
ANR	3940426	ExpressionStatement	layer_vis . data = topological_sort	666:1:17313:17346	3940388	5	True				
ANR	3940427	AssignmentExpression	layer_vis . data = topological_sort		3940388	0		=			
ANR	3940428	MemberAccess	layer_vis . data		3940388	0					
ANR	3940429	Identifier	layer_vis		3940388	0					
ANR	3940430	Identifier	data		3940388	1					
ANR	3940431	Identifier	topological_sort		3940388	1					
ANR	3940432	ExpressionStatement	layer_vis . finish_node = ( RGraphNodeCallback ) add_sorted	667:1:17349:17404	3940388	6	True				
ANR	3940433	AssignmentExpression	layer_vis . finish_node = ( RGraphNodeCallback ) add_sorted		3940388	0		=			
ANR	3940434	MemberAccess	layer_vis . finish_node		3940388	0					
ANR	3940435	Identifier	layer_vis		3940388	0					
ANR	3940436	Identifier	finish_node		3940388	1					
ANR	3940437	CastExpression	( RGraphNodeCallback ) add_sorted		3940388	1					
ANR	3940438	CastTarget	RGraphNodeCallback		3940388	0					
ANR	3940439	Identifier	add_sorted		3940388	1					
ANR	3940440	ExpressionStatement	"r_graph_dfs ( g -> graph , & layer_vis )"	668:1:17407:17441	3940388	7	True				
ANR	3940441	CallExpression	"r_graph_dfs ( g -> graph , & layer_vis )"		3940388	0					
ANR	3940442	Callee	r_graph_dfs		3940388	0					
ANR	3940443	Identifier	r_graph_dfs		3940388	0					
ANR	3940444	ArgumentList	g -> graph		3940388	1					
ANR	3940445	Argument	g -> graph		3940388	0					
ANR	3940446	PtrMemberAccess	g -> graph		3940388	0					
ANR	3940447	Identifier	g		3940388	0					
ANR	3940448	Identifier	graph		3940388	1					
ANR	3940449	Argument	& layer_vis		3940388	1					
ANR	3940450	UnaryOperationExpression	& layer_vis		3940388	0					
ANR	3940451	UnaryOperator	&		3940388	0					
ANR	3940452	Identifier	layer_vis		3940388	1					
ANR	3940453	Statement	graph_foreach_anode	670:1:17445:17463	3940388	8	True				
ANR	3940454	Statement	(	670:21:17465:17465	3940388	9	True				
ANR	3940455	Statement	topological_sort	670:22:17466:17481	3940388	10	True				
ANR	3940456	Statement	","	670:38:17482:17482	3940388	11	True				
ANR	3940457	Statement	it	670:40:17484:17485	3940388	12	True				
ANR	3940458	Statement	","	670:42:17486:17486	3940388	13	True				
ANR	3940459	Statement	gn	670:44:17488:17489	3940388	14	True				
ANR	3940460	Statement	","	670:46:17490:17490	3940388	15	True				
ANR	3940461	Statement	n	670:48:17492:17492	3940388	16	True				
ANR	3940462	Statement	)	670:49:17493:17493	3940388	17	True				
ANR	3940463	CompoundStatement		18:2:452:465	3940388	18					
ANR	3940464	IdentifierDeclStatement	"const RList * innodes = r_graph_innodes ( g -> graph , gn ) ;"	671:2:17499:17552	3940388	0	True				
ANR	3940465	IdentifierDecl	"* innodes = r_graph_innodes ( g -> graph , gn )"		3940388	0					
ANR	3940466	IdentifierDeclType	const RList *		3940388	0					
ANR	3940467	Identifier	innodes		3940388	1					
ANR	3940468	AssignmentExpression	"* innodes = r_graph_innodes ( g -> graph , gn )"		3940388	2		=			
ANR	3940469	Identifier	innodes		3940388	0					
ANR	3940470	CallExpression	"r_graph_innodes ( g -> graph , gn )"		3940388	1					
ANR	3940471	Callee	r_graph_innodes		3940388	0					
ANR	3940472	Identifier	r_graph_innodes		3940388	0					
ANR	3940473	ArgumentList	g -> graph		3940388	1					
ANR	3940474	Argument	g -> graph		3940388	0					
ANR	3940475	PtrMemberAccess	g -> graph		3940388	0					
ANR	3940476	Identifier	g		3940388	0					
ANR	3940477	Identifier	graph		3940388	1					
ANR	3940478	Argument	gn		3940388	1					
ANR	3940479	Identifier	gn		3940388	0					
ANR	3940480	IdentifierDeclStatement	RListIter * it ;	672:2:17556:17569	3940388	1	True				
ANR	3940481	IdentifierDecl	* it		3940388	0					
ANR	3940482	IdentifierDeclType	RListIter *		3940388	0					
ANR	3940483	Identifier	it		3940388	1					
ANR	3940484	IdentifierDeclStatement	RGraphNode * prev ;	673:2:17573:17589	3940388	2	True				
ANR	3940485	IdentifierDecl	* prev		3940388	0					
ANR	3940486	IdentifierDeclType	RGraphNode *		3940388	0					
ANR	3940487	Identifier	prev		3940388	1					
ANR	3940488	IdentifierDeclStatement	RANode * preva ;	674:2:17593:17606	3940388	3	True				
ANR	3940489	IdentifierDecl	* preva		3940388	0					
ANR	3940490	IdentifierDeclType	RANode *		3940388	0					
ANR	3940491	Identifier	preva		3940388	1					
ANR	3940492	ExpressionStatement	n -> layer = 0	676:2:17611:17623	3940388	4	True				
ANR	3940493	AssignmentExpression	n -> layer = 0		3940388	0		=			
ANR	3940494	PtrMemberAccess	n -> layer		3940388	0					
ANR	3940495	Identifier	n		3940388	0					
ANR	3940496	Identifier	layer		3940388	1					
ANR	3940497	PrimaryExpression	0		3940388	1					
ANR	3940498	Statement	graph_foreach_anode	677:2:17627:17645	3940388	5	True				
ANR	3940499	Statement	(	677:22:17647:17647	3940388	6	True				
ANR	3940500	Statement	innodes	677:23:17648:17654	3940388	7	True				
ANR	3940501	Statement	","	677:30:17655:17655	3940388	8	True				
ANR	3940502	Statement	it	677:32:17657:17658	3940388	9	True				
ANR	3940503	Statement	","	677:34:17659:17659	3940388	10	True				
ANR	3940504	Statement	prev	677:36:17661:17664	3940388	11	True				
ANR	3940505	Statement	","	677:40:17665:17665	3940388	12	True				
ANR	3940506	Statement	preva	677:42:17667:17671	3940388	13	True				
ANR	3940507	Statement	)	677:47:17672:17672	3940388	14	True				
ANR	3940508	CompoundStatement		21:49:533:533	3940388	15					
ANR	3940509	IfStatement	if ( preva -> layer + 1 > n -> layer )		3940388	0					
ANR	3940510	Condition	preva -> layer + 1 > n -> layer	678:7:17683:17709	3940388	0	True				
ANR	3940511	RelationalExpression	preva -> layer + 1 > n -> layer		3940388	0		>			
ANR	3940512	AdditiveExpression	preva -> layer + 1		3940388	0		+			
ANR	3940513	PtrMemberAccess	preva -> layer		3940388	0					
ANR	3940514	Identifier	preva		3940388	0					
ANR	3940515	Identifier	layer		3940388	1					
ANR	3940516	PrimaryExpression	1		3940388	1					
ANR	3940517	PtrMemberAccess	n -> layer		3940388	1					
ANR	3940518	Identifier	n		3940388	0					
ANR	3940519	Identifier	layer		3940388	1					
ANR	3940520	CompoundStatement		22:36:571:571	3940388	1					
ANR	3940521	ExpressionStatement	n -> layer = preva -> layer + 1	679:4:17718:17745	3940388	0	True				
ANR	3940522	AssignmentExpression	n -> layer = preva -> layer + 1		3940388	0		=			
ANR	3940523	PtrMemberAccess	n -> layer		3940388	0					
ANR	3940524	Identifier	n		3940388	0					
ANR	3940525	Identifier	layer		3940388	1					
ANR	3940526	AdditiveExpression	preva -> layer + 1		3940388	1		+			
ANR	3940527	PtrMemberAccess	preva -> layer		3940388	0					
ANR	3940528	Identifier	preva		3940388	0					
ANR	3940529	Identifier	layer		3940388	1					
ANR	3940530	PrimaryExpression	1		3940388	1					
ANR	3940531	ExpressionStatement	r_list_free ( topological_sort )	684:1:17761:17791	3940388	19	True				
ANR	3940532	CallExpression	r_list_free ( topological_sort )		3940388	0					
ANR	3940533	Callee	r_list_free		3940388	0					
ANR	3940534	Identifier	r_list_free		3940388	0					
ANR	3940535	ArgumentList	topological_sort		3940388	1					
ANR	3940536	Argument	topological_sort		3940388	0					
ANR	3940537	Identifier	topological_sort		3940388	0					
ANR	3940538	ReturnType	static void		3940388	1					
ANR	3940539	Identifier	assign_layers		3940388	2					
ANR	3940540	ParameterList	const RAGraph * g		3940388	3					
ANR	3940541	Parameter	const RAGraph * g	657:26:17122:17137	3940388	0	True				
ANR	3940542	ParameterType	const RAGraph *		3940388	0					
ANR	3940543	Identifier	g		3940388	1					
ANR	3940544	CFGEntryNode	ENTRY		3940388		True				
ANR	3940545	CFGExitNode	EXIT		3940388		True				
ANR	3940546	Symbol	preva -> layer		3940388						
ANR	3940547	Symbol	NULL		3940388						
ANR	3940548	Symbol	g		3940388						
ANR	3940549	Symbol	gn		3940388						
ANR	3940550	Symbol	prev		3940388						
ANR	3940551	Symbol	& layer_vis		3940388						
ANR	3940552	Symbol	innodes		3940388						
ANR	3940553	Symbol	it		3940388						
ANR	3940554	Symbol	n		3940388						
ANR	3940555	Symbol	r_graph_innodes		3940388						
ANR	3940556	Symbol	layer_vis . finish_node		3940388						
ANR	3940557	Symbol	* g		3940388						
ANR	3940558	Symbol	preva		3940388						
ANR	3940559	Symbol	g -> graph		3940388						
ANR	3940560	Symbol	topological_sort		3940388						
ANR	3940561	Symbol	add_sorted		3940388						
ANR	3940562	Symbol	* n		3940388						
ANR	3940563	Symbol	* preva		3940388						
ANR	3940564	Symbol	n -> layer		3940388						
ANR	3940565	Symbol	layer_vis		3940388						
ANR	3940566	Symbol	layer_vis . data		3940388						
ANR	3940567	Symbol	r_list_new		3940388						
ANR	3940568	Function	find_edge	687:0:17796:17913							
ANR	3940569	FunctionDef	"find_edge (const RGraphEdge * a , const RGraphEdge * b)"		3940568	0					
ANR	3940570	CompoundStatement		687:63:17859:17913	3940568	0					
ANR	3940571	ReturnStatement	return a -> from == b -> to && a -> to == b -> from ? 0 : 1 ;	688:1:17862:17911	3940568	0	True				
ANR	3940572	ConditionalExpression	a -> from == b -> to && a -> to == b -> from ? 0 : 1		3940568	0					
ANR	3940573	Condition	a -> from == b -> to && a -> to == b -> from		3940568	0					
ANR	3940574	AndExpression	a -> from == b -> to && a -> to == b -> from		3940568	0		&&			
ANR	3940575	EqualityExpression	a -> from == b -> to		3940568	0		==			
ANR	3940576	PtrMemberAccess	a -> from		3940568	0					
ANR	3940577	Identifier	a		3940568	0					
ANR	3940578	Identifier	from		3940568	1					
ANR	3940579	PtrMemberAccess	b -> to		3940568	1					
ANR	3940580	Identifier	b		3940568	0					
ANR	3940581	Identifier	to		3940568	1					
ANR	3940582	EqualityExpression	a -> to == b -> from		3940568	1		==			
ANR	3940583	PtrMemberAccess	a -> to		3940568	0					
ANR	3940584	Identifier	a		3940568	0					
ANR	3940585	Identifier	to		3940568	1					
ANR	3940586	PtrMemberAccess	b -> from		3940568	1					
ANR	3940587	Identifier	b		3940568	0					
ANR	3940588	Identifier	from		3940568	1					
ANR	3940589	PrimaryExpression	0		3940568	1					
ANR	3940590	PrimaryExpression	1		3940568	2					
ANR	3940591	ReturnType	static int		3940568	1					
ANR	3940592	Identifier	find_edge		3940568	2					
ANR	3940593	ParameterList	"const RGraphEdge * a , const RGraphEdge * b"		3940568	3					
ANR	3940594	Parameter	const RGraphEdge * a	687:21:17817:17835	3940568	0	True				
ANR	3940595	ParameterType	const RGraphEdge *		3940568	0					
ANR	3940596	Identifier	a		3940568	1					
ANR	3940597	Parameter	const RGraphEdge * b	687:42:17838:17856	3940568	1	True				
ANR	3940598	ParameterType	const RGraphEdge *		3940568	0					
ANR	3940599	Identifier	b		3940568	1					
ANR	3940600	CFGEntryNode	ENTRY		3940568		True				
ANR	3940601	CFGExitNode	EXIT		3940568		True				
ANR	3940602	Symbol	a		3940568						
ANR	3940603	Symbol	a -> from		3940568						
ANR	3940604	Symbol	b		3940568						
ANR	3940605	Symbol	a -> to		3940568						
ANR	3940606	Symbol	b -> to		3940568						
ANR	3940607	Symbol	* a		3940568						
ANR	3940608	Symbol	b -> from		3940568						
ANR	3940609	Symbol	* b		3940568						
ANR	3940610	Function	is_reversed	691:0:17916:18062							
ANR	3940611	FunctionDef	"is_reversed (const RAGraph * g , const RGraphEdge * e)"		3940610	0					
ANR	3940612	CompoundStatement		691:62:17978:18062	3940610	0					
ANR	3940613	ReturnStatement	"return r_list_find ( g -> back_edges , e , ( RListComparator ) find_edge ) ? true : false ;"	692:1:17981:18060	3940610	0	True				
ANR	3940614	ConditionalExpression	"r_list_find ( g -> back_edges , e , ( RListComparator ) find_edge ) ? true : false"		3940610	0					
ANR	3940615	Condition	"r_list_find ( g -> back_edges , e , ( RListComparator ) find_edge )"		3940610	0					
ANR	3940616	CallExpression	"r_list_find ( g -> back_edges , e , ( RListComparator ) find_edge )"		3940610	0					
ANR	3940617	Callee	r_list_find		3940610	0					
ANR	3940618	Identifier	r_list_find		3940610	0					
ANR	3940619	ArgumentList	g -> back_edges		3940610	1					
ANR	3940620	Argument	g -> back_edges		3940610	0					
ANR	3940621	PtrMemberAccess	g -> back_edges		3940610	0					
ANR	3940622	Identifier	g		3940610	0					
ANR	3940623	Identifier	back_edges		3940610	1					
ANR	3940624	Argument	e		3940610	1					
ANR	3940625	Identifier	e		3940610	0					
ANR	3940626	Argument	( RListComparator ) find_edge		3940610	2					
ANR	3940627	CastExpression	( RListComparator ) find_edge		3940610	0					
ANR	3940628	CastTarget	RListComparator		3940610	0					
ANR	3940629	Identifier	find_edge		3940610	1					
ANR	3940630	Identifier	true		3940610	1					
ANR	3940631	Identifier	false		3940610	2					
ANR	3940632	ReturnType	static int		3940610	1					
ANR	3940633	Identifier	is_reversed		3940610	2					
ANR	3940634	ParameterList	"const RAGraph * g , const RGraphEdge * e"		3940610	3					
ANR	3940635	Parameter	const RAGraph * g	691:23:17939:17954	3940610	0	True				
ANR	3940636	ParameterType	const RAGraph *		3940610	0					
ANR	3940637	Identifier	g		3940610	1					
ANR	3940638	Parameter	const RGraphEdge * e	691:41:17957:17975	3940610	1	True				
ANR	3940639	ParameterType	const RGraphEdge *		3940610	0					
ANR	3940640	Identifier	e		3940610	1					
ANR	3940641	CFGEntryNode	ENTRY		3940610		True				
ANR	3940642	CFGExitNode	EXIT		3940610		True				
ANR	3940643	Symbol	r_list_find		3940610						
ANR	3940644	Symbol	* g		3940610						
ANR	3940645	Symbol	e		3940610						
ANR	3940646	Symbol	g		3940610						
ANR	3940647	Symbol	true		3940610						
ANR	3940648	Symbol	false		3940610						
ANR	3940649	Symbol	find_edge		3940610						
ANR	3940650	Symbol	g -> back_edges		3940610						
ANR	3940651	Function	create_dummy_nodes	696:0:18134:19204							
ANR	3940652	FunctionDef	create_dummy_nodes (RAGraph * g)		3940651	0					
ANR	3940653	CompoundStatement		696:43:18177:19204	3940651	0					
ANR	3940654	IfStatement	if ( ! g -> dummy )		3940651	0					
ANR	3940655	Condition	! g -> dummy	697:5:18184:18192	3940651	0	True				
ANR	3940656	UnaryOperationExpression	! g -> dummy		3940651	0					
ANR	3940657	UnaryOperator	!		3940651	0					
ANR	3940658	PtrMemberAccess	g -> dummy		3940651	1					
ANR	3940659	Identifier	g		3940651	0					
ANR	3940660	Identifier	dummy		3940651	1					
ANR	3940661	CompoundStatement		2:16:17:17	3940651	1					
ANR	3940662	ReturnStatement	return ;	698:2:18199:18205	3940651	0	True				
ANR	3940663	IdentifierDeclStatement	"RGraphVisitor dummy_vis = { NULL , NULL , NULL , NULL , NULL , NULL } ;"	700:1:18211:18278	3940651	1	True				
ANR	3940664	IdentifierDecl	"dummy_vis = { NULL , NULL , NULL , NULL , NULL , NULL }"		3940651	0					
ANR	3940665	IdentifierDeclType	RGraphVisitor		3940651	0					
ANR	3940666	Identifier	dummy_vis		3940651	1					
ANR	3940667	AssignmentExpression	"dummy_vis = { NULL , NULL , NULL , NULL , NULL , NULL }"		3940651	2		=			
ANR	3940668	Identifier	dummy_vis		3940651	0					
ANR	3940669	InitializerList	NULL		3940651	1					
ANR	3940670	Identifier	NULL		3940651	0					
ANR	3940671	Identifier	NULL		3940651	1					
ANR	3940672	Identifier	NULL		3940651	2					
ANR	3940673	Identifier	NULL		3940651	3					
ANR	3940674	Identifier	NULL		3940651	4					
ANR	3940675	Identifier	NULL		3940651	5					
ANR	3940676	IdentifierDeclStatement	const RListIter * it ;	703:1:18281:18300	3940651	2	True				
ANR	3940677	IdentifierDecl	* it		3940651	0					
ANR	3940678	IdentifierDeclType	const RListIter *		3940651	0					
ANR	3940679	Identifier	it		3940651	1					
ANR	3940680	IdentifierDeclStatement	const RGraphEdge * e ;	704:1:18303:18322	3940651	3	True				
ANR	3940681	IdentifierDecl	* e		3940651	0					
ANR	3940682	IdentifierDeclType	const RGraphEdge *		3940651	0					
ANR	3940683	Identifier	e		3940651	1					
ANR	3940684	ExpressionStatement	g -> long_edges = r_list_newf ( ( RListFree ) free )	706:1:18326:18371	3940651	4	True				
ANR	3940685	AssignmentExpression	g -> long_edges = r_list_newf ( ( RListFree ) free )		3940651	0		=			
ANR	3940686	PtrMemberAccess	g -> long_edges		3940651	0					
ANR	3940687	Identifier	g		3940651	0					
ANR	3940688	Identifier	long_edges		3940651	1					
ANR	3940689	CallExpression	r_list_newf ( ( RListFree ) free )		3940651	1					
ANR	3940690	Callee	r_list_newf		3940651	0					
ANR	3940691	Identifier	r_list_newf		3940651	0					
ANR	3940692	ArgumentList	( RListFree ) free		3940651	1					
ANR	3940693	Argument	( RListFree ) free		3940651	0					
ANR	3940694	CastExpression	( RListFree ) free		3940651	0					
ANR	3940695	CastTarget	RListFree		3940651	0					
ANR	3940696	Identifier	free		3940651	1					
ANR	3940697	ExpressionStatement	dummy_vis . data = g -> long_edges	707:1:18374:18404	3940651	5	True				
ANR	3940698	AssignmentExpression	dummy_vis . data = g -> long_edges		3940651	0		=			
ANR	3940699	MemberAccess	dummy_vis . data		3940651	0					
ANR	3940700	Identifier	dummy_vis		3940651	0					
ANR	3940701	Identifier	data		3940651	1					
ANR	3940702	PtrMemberAccess	g -> long_edges		3940651	1					
ANR	3940703	Identifier	g		3940651	0					
ANR	3940704	Identifier	long_edges		3940651	1					
ANR	3940705	ExpressionStatement	dummy_vis . tree_edge = ( RGraphEdgeCallback ) view_dummy	708:1:18407:18460	3940651	6	True				
ANR	3940706	AssignmentExpression	dummy_vis . tree_edge = ( RGraphEdgeCallback ) view_dummy		3940651	0		=			
ANR	3940707	MemberAccess	dummy_vis . tree_edge		3940651	0					
ANR	3940708	Identifier	dummy_vis		3940651	0					
ANR	3940709	Identifier	tree_edge		3940651	1					
ANR	3940710	CastExpression	( RGraphEdgeCallback ) view_dummy		3940651	1					
ANR	3940711	CastTarget	RGraphEdgeCallback		3940651	0					
ANR	3940712	Identifier	view_dummy		3940651	1					
ANR	3940713	ExpressionStatement	dummy_vis . fcross_edge = ( RGraphEdgeCallback ) view_dummy	709:1:18463:18518	3940651	7	True				
ANR	3940714	AssignmentExpression	dummy_vis . fcross_edge = ( RGraphEdgeCallback ) view_dummy		3940651	0		=			
ANR	3940715	MemberAccess	dummy_vis . fcross_edge		3940651	0					
ANR	3940716	Identifier	dummy_vis		3940651	0					
ANR	3940717	Identifier	fcross_edge		3940651	1					
ANR	3940718	CastExpression	( RGraphEdgeCallback ) view_dummy		3940651	1					
ANR	3940719	CastTarget	RGraphEdgeCallback		3940651	0					
ANR	3940720	Identifier	view_dummy		3940651	1					
ANR	3940721	ExpressionStatement	"r_graph_dfs ( g -> graph , & dummy_vis )"	710:1:18521:18555	3940651	8	True				
ANR	3940722	CallExpression	"r_graph_dfs ( g -> graph , & dummy_vis )"		3940651	0					
ANR	3940723	Callee	r_graph_dfs		3940651	0					
ANR	3940724	Identifier	r_graph_dfs		3940651	0					
ANR	3940725	ArgumentList	g -> graph		3940651	1					
ANR	3940726	Argument	g -> graph		3940651	0					
ANR	3940727	PtrMemberAccess	g -> graph		3940651	0					
ANR	3940728	Identifier	g		3940651	0					
ANR	3940729	Identifier	graph		3940651	1					
ANR	3940730	Argument	& dummy_vis		3940651	1					
ANR	3940731	UnaryOperationExpression	& dummy_vis		3940651	0					
ANR	3940732	UnaryOperator	&		3940651	0					
ANR	3940733	Identifier	dummy_vis		3940651	1					
ANR	3940734	Statement	r_list_foreach	712:1:18559:18572	3940651	9	True				
ANR	3940735	Statement	(	712:16:18574:18574	3940651	10	True				
ANR	3940736	Statement	g	712:17:18575:18575	3940651	11	True				
ANR	3940737	Statement	->	712:18:18576:18577	3940651	12	True				
ANR	3940738	Statement	long_edges	712:20:18578:18587	3940651	13	True				
ANR	3940739	Statement	","	712:30:18588:18588	3940651	14	True				
ANR	3940740	Statement	it	712:32:18590:18591	3940651	15	True				
ANR	3940741	Statement	","	712:34:18592:18592	3940651	16	True				
ANR	3940742	Statement	e	712:36:18594:18594	3940651	17	True				
ANR	3940743	Statement	)	712:37:18595:18595	3940651	18	True				
ANR	3940744	CompoundStatement		22:2:585:604	3940651	19					
ANR	3940745	IdentifierDeclStatement	RANode * from = get_anode ( e -> from ) ;	713:2:18601:18635	3940651	0	True				
ANR	3940746	IdentifierDecl	* from = get_anode ( e -> from )		3940651	0					
ANR	3940747	IdentifierDeclType	RANode *		3940651	0					
ANR	3940748	Identifier	from		3940651	1					
ANR	3940749	AssignmentExpression	* from = get_anode ( e -> from )		3940651	2		=			
ANR	3940750	Identifier	from		3940651	0					
ANR	3940751	CallExpression	get_anode ( e -> from )		3940651	1					
ANR	3940752	Callee	get_anode		3940651	0					
ANR	3940753	Identifier	get_anode		3940651	0					
ANR	3940754	ArgumentList	e -> from		3940651	1					
ANR	3940755	Argument	e -> from		3940651	0					
ANR	3940756	PtrMemberAccess	e -> from		3940651	0					
ANR	3940757	Identifier	e		3940651	0					
ANR	3940758	Identifier	from		3940651	1					
ANR	3940759	IdentifierDeclStatement	RANode * to = get_anode ( e -> to ) ;	714:2:18639:18669	3940651	1	True				
ANR	3940760	IdentifierDecl	* to = get_anode ( e -> to )		3940651	0					
ANR	3940761	IdentifierDeclType	RANode *		3940651	0					
ANR	3940762	Identifier	to		3940651	1					
ANR	3940763	AssignmentExpression	* to = get_anode ( e -> to )		3940651	2		=			
ANR	3940764	Identifier	to		3940651	0					
ANR	3940765	CallExpression	get_anode ( e -> to )		3940651	1					
ANR	3940766	Callee	get_anode		3940651	0					
ANR	3940767	Identifier	get_anode		3940651	0					
ANR	3940768	ArgumentList	e -> to		3940651	1					
ANR	3940769	Argument	e -> to		3940651	0					
ANR	3940770	PtrMemberAccess	e -> to		3940651	0					
ANR	3940771	Identifier	e		3940651	0					
ANR	3940772	Identifier	to		3940651	1					
ANR	3940773	IdentifierDeclStatement	int diff_layer = R_ABS ( from -> layer - to -> layer ) ;	715:2:18673:18721	3940651	2	True				
ANR	3940774	IdentifierDecl	diff_layer = R_ABS ( from -> layer - to -> layer )		3940651	0					
ANR	3940775	IdentifierDeclType	int		3940651	0					
ANR	3940776	Identifier	diff_layer		3940651	1					
ANR	3940777	AssignmentExpression	diff_layer = R_ABS ( from -> layer - to -> layer )		3940651	2		=			
ANR	3940778	Identifier	diff_layer		3940651	0					
ANR	3940779	CallExpression	R_ABS ( from -> layer - to -> layer )		3940651	1					
ANR	3940780	Callee	R_ABS		3940651	0					
ANR	3940781	Identifier	R_ABS		3940651	0					
ANR	3940782	ArgumentList	from -> layer - to -> layer		3940651	1					
ANR	3940783	Argument	from -> layer - to -> layer		3940651	0					
ANR	3940784	AdditiveExpression	from -> layer - to -> layer		3940651	0		-			
ANR	3940785	PtrMemberAccess	from -> layer		3940651	0					
ANR	3940786	Identifier	from		3940651	0					
ANR	3940787	Identifier	layer		3940651	1					
ANR	3940788	PtrMemberAccess	to -> layer		3940651	1					
ANR	3940789	Identifier	to		3940651	0					
ANR	3940790	Identifier	layer		3940651	1					
ANR	3940791	IdentifierDeclStatement	RANode * prev = get_anode ( e -> from ) ;	716:2:18725:18759	3940651	3	True				
ANR	3940792	IdentifierDecl	* prev = get_anode ( e -> from )		3940651	0					
ANR	3940793	IdentifierDeclType	RANode *		3940651	0					
ANR	3940794	Identifier	prev		3940651	1					
ANR	3940795	AssignmentExpression	* prev = get_anode ( e -> from )		3940651	2		=			
ANR	3940796	Identifier	prev		3940651	0					
ANR	3940797	CallExpression	get_anode ( e -> from )		3940651	1					
ANR	3940798	Callee	get_anode		3940651	0					
ANR	3940799	Identifier	get_anode		3940651	0					
ANR	3940800	ArgumentList	e -> from		3940651	1					
ANR	3940801	Argument	e -> from		3940651	0					
ANR	3940802	PtrMemberAccess	e -> from		3940651	0					
ANR	3940803	Identifier	e		3940651	0					
ANR	3940804	Identifier	from		3940651	1					
ANR	3940805	IdentifierDeclStatement	"int i , nth = e -> nth ;"	717:2:18763:18782	3940651	4	True				
ANR	3940806	IdentifierDecl	i		3940651	0					
ANR	3940807	IdentifierDeclType	int		3940651	0					
ANR	3940808	Identifier	i		3940651	1					
ANR	3940809	IdentifierDecl	nth = e -> nth		3940651	1					
ANR	3940810	IdentifierDeclType	int		3940651	0					
ANR	3940811	Identifier	nth		3940651	1					
ANR	3940812	AssignmentExpression	nth = e -> nth		3940651	2		=			
ANR	3940813	Identifier	nth		3940651	0					
ANR	3940814	PtrMemberAccess	e -> nth		3940651	1					
ANR	3940815	Identifier	e		3940651	0					
ANR	3940816	Identifier	nth		3940651	1					
ANR	3940817	ExpressionStatement	"r_agraph_del_edge ( g , from , to )"	719:2:18787:18818	3940651	5	True				
ANR	3940818	CallExpression	"r_agraph_del_edge ( g , from , to )"		3940651	0					
ANR	3940819	Callee	r_agraph_del_edge		3940651	0					
ANR	3940820	Identifier	r_agraph_del_edge		3940651	0					
ANR	3940821	ArgumentList	g		3940651	1					
ANR	3940822	Argument	g		3940651	0					
ANR	3940823	Identifier	g		3940651	0					
ANR	3940824	Argument	from		3940651	1					
ANR	3940825	Identifier	from		3940651	0					
ANR	3940826	Argument	to		3940651	2					
ANR	3940827	Identifier	to		3940651	0					
ANR	3940828	ForStatement	for ( i = 1 ; i < diff_layer ; ++ i )		3940651	6					
ANR	3940829	ForInit	i = 1 ;	720:7:18827:18832	3940651	0	True				
ANR	3940830	AssignmentExpression	i = 1		3940651	0		=			
ANR	3940831	Identifier	i		3940651	0					
ANR	3940832	PrimaryExpression	1		3940651	1					
ANR	3940833	Condition	i < diff_layer	720:14:18834:18847	3940651	1	True				
ANR	3940834	RelationalExpression	i < diff_layer		3940651	0		<			
ANR	3940835	Identifier	i		3940651	0					
ANR	3940836	Identifier	diff_layer		3940651	1					
ANR	3940837	UnaryExpression	++ i	720:30:18850:18852	3940651	2	True				
ANR	3940838	IncDec	++		3940651	0					
ANR	3940839	Identifier	i		3940651	1					
ANR	3940840	CompoundStatement		26:3:682:731	3940651	3					
ANR	3940841	IdentifierDeclStatement	"RANode * dummy = r_agraph_add_node ( g , NULL , NULL ) ;"	721:3:18860:18909	3940651	0	True				
ANR	3940842	IdentifierDecl	"* dummy = r_agraph_add_node ( g , NULL , NULL )"		3940651	0					
ANR	3940843	IdentifierDeclType	RANode *		3940651	0					
ANR	3940844	Identifier	dummy		3940651	1					
ANR	3940845	AssignmentExpression	"* dummy = r_agraph_add_node ( g , NULL , NULL )"		3940651	2		=			
ANR	3940846	Identifier	dummy		3940651	0					
ANR	3940847	CallExpression	"r_agraph_add_node ( g , NULL , NULL )"		3940651	1					
ANR	3940848	Callee	r_agraph_add_node		3940651	0					
ANR	3940849	Identifier	r_agraph_add_node		3940651	0					
ANR	3940850	ArgumentList	g		3940651	1					
ANR	3940851	Argument	g		3940651	0					
ANR	3940852	Identifier	g		3940651	0					
ANR	3940853	Argument	NULL		3940651	1					
ANR	3940854	Identifier	NULL		3940651	0					
ANR	3940855	Argument	NULL		3940651	2					
ANR	3940856	Identifier	NULL		3940651	0					
ANR	3940857	IfStatement	if ( ! dummy )		3940651	1					
ANR	3940858	Condition	! dummy	722:7:18918:18923	3940651	0	True				
ANR	3940859	UnaryOperationExpression	! dummy		3940651	0					
ANR	3940860	UnaryOperator	!		3940651	0					
ANR	3940861	Identifier	dummy		3940651	1					
ANR	3940862	CompoundStatement		27:15:748:748	3940651	1					
ANR	3940863	ReturnStatement	return ;	723:4:18932:18938	3940651	0	True				
ANR	3940864	ExpressionStatement	dummy -> is_dummy = true	725:3:18948:18970	3940651	2	True				
ANR	3940865	AssignmentExpression	dummy -> is_dummy = true		3940651	0		=			
ANR	3940866	PtrMemberAccess	dummy -> is_dummy		3940651	0					
ANR	3940867	Identifier	dummy		3940651	0					
ANR	3940868	Identifier	is_dummy		3940651	1					
ANR	3940869	Identifier	true		3940651	1					
ANR	3940870	ExpressionStatement	dummy -> layer = from -> layer + i	726:3:18975:19005	3940651	3	True				
ANR	3940871	AssignmentExpression	dummy -> layer = from -> layer + i		3940651	0		=			
ANR	3940872	PtrMemberAccess	dummy -> layer		3940651	0					
ANR	3940873	Identifier	dummy		3940651	0					
ANR	3940874	Identifier	layer		3940651	1					
ANR	3940875	AdditiveExpression	from -> layer + i		3940651	1		+			
ANR	3940876	PtrMemberAccess	from -> layer		3940651	0					
ANR	3940877	Identifier	from		3940651	0					
ANR	3940878	Identifier	layer		3940651	1					
ANR	3940879	Identifier	i		3940651	1					
ANR	3940880	ExpressionStatement	"dummy -> is_reversed = is_reversed ( g , e )"	727:3:19010:19049	3940651	4	True				
ANR	3940881	AssignmentExpression	"dummy -> is_reversed = is_reversed ( g , e )"		3940651	0		=			
ANR	3940882	PtrMemberAccess	dummy -> is_reversed		3940651	0					
ANR	3940883	Identifier	dummy		3940651	0					
ANR	3940884	Identifier	is_reversed		3940651	1					
ANR	3940885	CallExpression	"is_reversed ( g , e )"		3940651	1					
ANR	3940886	Callee	is_reversed		3940651	0					
ANR	3940887	Identifier	is_reversed		3940651	0					
ANR	3940888	ArgumentList	g		3940651	1					
ANR	3940889	Argument	g		3940651	0					
ANR	3940890	Identifier	g		3940651	0					
ANR	3940891	Argument	e		3940651	1					
ANR	3940892	Identifier	e		3940651	0					
ANR	3940893	ExpressionStatement	dummy -> w = 1	728:3:19054:19066	3940651	5	True				
ANR	3940894	AssignmentExpression	dummy -> w = 1		3940651	0		=			
ANR	3940895	PtrMemberAccess	dummy -> w		3940651	0					
ANR	3940896	Identifier	dummy		3940651	0					
ANR	3940897	Identifier	w		3940651	1					
ANR	3940898	PrimaryExpression	1		3940651	1					
ANR	3940899	ExpressionStatement	"r_agraph_add_edge_at ( g , prev , dummy , nth )"	729:3:19071:19113	3940651	6	True				
ANR	3940900	CallExpression	"r_agraph_add_edge_at ( g , prev , dummy , nth )"		3940651	0					
ANR	3940901	Callee	r_agraph_add_edge_at		3940651	0					
ANR	3940902	Identifier	r_agraph_add_edge_at		3940651	0					
ANR	3940903	ArgumentList	g		3940651	1					
ANR	3940904	Argument	g		3940651	0					
ANR	3940905	Identifier	g		3940651	0					
ANR	3940906	Argument	prev		3940651	1					
ANR	3940907	Identifier	prev		3940651	0					
ANR	3940908	Argument	dummy		3940651	2					
ANR	3940909	Identifier	dummy		3940651	0					
ANR	3940910	Argument	nth		3940651	3					
ANR	3940911	Identifier	nth		3940651	0					
ANR	3940912	ExpressionStatement	prev = dummy	731:3:19119:19131	3940651	7	True				
ANR	3940913	AssignmentExpression	prev = dummy		3940651	0		=			
ANR	3940914	Identifier	prev		3940651	0					
ANR	3940915	Identifier	dummy		3940651	1					
ANR	3940916	ExpressionStatement	nth = - 1	732:3:19136:19144	3940651	8	True				
ANR	3940917	AssignmentExpression	nth = - 1		3940651	0		=			
ANR	3940918	Identifier	nth		3940651	0					
ANR	3940919	UnaryOperationExpression	- 1		3940651	1					
ANR	3940920	UnaryOperator	-		3940651	0					
ANR	3940921	PrimaryExpression	1		3940651	1					
ANR	3940922	ExpressionStatement	"r_graph_add_edge ( g -> graph , prev -> gnode , e -> to )"	734:2:19152:19199	3940651	7	True				
ANR	3940923	CallExpression	"r_graph_add_edge ( g -> graph , prev -> gnode , e -> to )"		3940651	0					
ANR	3940924	Callee	r_graph_add_edge		3940651	0					
ANR	3940925	Identifier	r_graph_add_edge		3940651	0					
ANR	3940926	ArgumentList	g -> graph		3940651	1					
ANR	3940927	Argument	g -> graph		3940651	0					
ANR	3940928	PtrMemberAccess	g -> graph		3940651	0					
ANR	3940929	Identifier	g		3940651	0					
ANR	3940930	Identifier	graph		3940651	1					
ANR	3940931	Argument	prev -> gnode		3940651	1					
ANR	3940932	PtrMemberAccess	prev -> gnode		3940651	0					
ANR	3940933	Identifier	prev		3940651	0					
ANR	3940934	Identifier	gnode		3940651	1					
ANR	3940935	Argument	e -> to		3940651	2					
ANR	3940936	PtrMemberAccess	e -> to		3940651	0					
ANR	3940937	Identifier	e		3940651	0					
ANR	3940938	Identifier	to		3940651	1					
ANR	3940939	ReturnType	static void		3940651	1					
ANR	3940940	Identifier	create_dummy_nodes		3940651	2					
ANR	3940941	ParameterList	RAGraph * g		3940651	3					
ANR	3940942	Parameter	RAGraph * g	696:31:18165:18174	3940651	0	True				
ANR	3940943	ParameterType	RAGraph *		3940651	0					
ANR	3940944	Identifier	g		3940651	1					
ANR	3940945	CFGEntryNode	ENTRY		3940651		True				
ANR	3940946	CFGExitNode	EXIT		3940651		True				
ANR	3940947	Symbol	dummy -> is_dummy		3940651						
ANR	3940948	Symbol	dummy -> layer		3940651						
ANR	3940949	Symbol	from -> layer		3940651						
ANR	3940950	Symbol	prev		3940651						
ANR	3940951	Symbol	dummy_vis . data		3940651						
ANR	3940952	Symbol	e -> to		3940651						
ANR	3940953	Symbol	R_ABS		3940651						
ANR	3940954	Symbol	* prev		3940651						
ANR	3940955	Symbol	dummy_vis		3940651						
ANR	3940956	Symbol	dummy		3940651						
ANR	3940957	Symbol	view_dummy		3940651						
ANR	3940958	Symbol	g -> graph		3940651						
ANR	3940959	Symbol	g -> dummy		3940651						
ANR	3940960	Symbol	from		3940651						
ANR	3940961	Symbol	is_reversed		3940651						
ANR	3940962	Symbol	free		3940651						
ANR	3940963	Symbol	g -> long_edges		3940651						
ANR	3940964	Symbol	* to		3940651						
ANR	3940965	Symbol	NULL		3940651						
ANR	3940966	Symbol	get_anode		3940651						
ANR	3940967	Symbol	e -> from		3940651						
ANR	3940968	Symbol	nth		3940651						
ANR	3940969	Symbol	e		3940651						
ANR	3940970	Symbol	r_list_newf		3940651						
ANR	3940971	Symbol	prev -> gnode		3940651						
ANR	3940972	Symbol	diff_layer		3940651						
ANR	3940973	Symbol	g		3940651						
ANR	3940974	Symbol	dummy_vis . tree_edge		3940651						
ANR	3940975	Symbol	i		3940651						
ANR	3940976	Symbol	* dummy		3940651						
ANR	3940977	Symbol	it		3940651						
ANR	3940978	Symbol	dummy_vis . fcross_edge		3940651						
ANR	3940979	Symbol	& dummy_vis		3940651						
ANR	3940980	Symbol	e -> nth		3940651						
ANR	3940981	Symbol	r_agraph_add_node		3940651						
ANR	3940982	Symbol	* e		3940651						
ANR	3940983	Symbol	dummy -> w		3940651						
ANR	3940984	Symbol	* g		3940651						
ANR	3940985	Symbol	true		3940651						
ANR	3940986	Symbol	to		3940651						
ANR	3940987	Symbol	* from		3940651						
ANR	3940988	Symbol	to -> layer		3940651						
ANR	3940989	Symbol	dummy -> is_reversed		3940651						
ANR	3940990	Function	create_layers	739:0:19281:20265							
ANR	3940991	FunctionDef	create_layers (RAGraph * g)		3940990	0					
ANR	3940992	CompoundStatement		739:38:19319:20265	3940990	0					
ANR	3940993	IdentifierDeclStatement	const RList * nodes = r_graph_get_nodes ( g -> graph ) ;	740:1:19322:19371	3940990	0	True				
ANR	3940994	IdentifierDecl	* nodes = r_graph_get_nodes ( g -> graph )		3940990	0					
ANR	3940995	IdentifierDeclType	const RList *		3940990	0					
ANR	3940996	Identifier	nodes		3940990	1					
ANR	3940997	AssignmentExpression	* nodes = r_graph_get_nodes ( g -> graph )		3940990	2		=			
ANR	3940998	Identifier	nodes		3940990	0					
ANR	3940999	CallExpression	r_graph_get_nodes ( g -> graph )		3940990	1					
ANR	3941000	Callee	r_graph_get_nodes		3940990	0					
ANR	3941001	Identifier	r_graph_get_nodes		3940990	0					
ANR	3941002	ArgumentList	g -> graph		3940990	1					
ANR	3941003	Argument	g -> graph		3940990	0					
ANR	3941004	PtrMemberAccess	g -> graph		3940990	0					
ANR	3941005	Identifier	g		3940990	0					
ANR	3941006	Identifier	graph		3940990	1					
ANR	3941007	IdentifierDeclStatement	RGraphNode * gn ;	741:1:19374:19388	3940990	1	True				
ANR	3941008	IdentifierDecl	* gn		3940990	0					
ANR	3941009	IdentifierDeclType	RGraphNode *		3940990	0					
ANR	3941010	Identifier	gn		3940990	1					
ANR	3941011	IdentifierDeclStatement	const RListIter * it ;	742:1:19391:19410	3940990	2	True				
ANR	3941012	IdentifierDecl	* it		3940990	0					
ANR	3941013	IdentifierDeclType	const RListIter *		3940990	0					
ANR	3941014	Identifier	it		3940990	1					
ANR	3941015	IdentifierDeclStatement	RANode * n ;	743:1:19413:19422	3940990	3	True				
ANR	3941016	IdentifierDecl	* n		3940990	0					
ANR	3941017	IdentifierDeclType	RANode *		3940990	0					
ANR	3941018	Identifier	n		3940990	1					
ANR	3941019	IdentifierDeclStatement	int i ;	744:1:19425:19430	3940990	4	True				
ANR	3941020	IdentifierDecl	i		3940990	0					
ANR	3941021	IdentifierDeclType	int		3940990	0					
ANR	3941022	Identifier	i		3940990	1					
ANR	3941023	ExpressionStatement	g -> n_layers = 0	747:1:19460:19475	3940990	5	True				
ANR	3941024	AssignmentExpression	g -> n_layers = 0		3940990	0		=			
ANR	3941025	PtrMemberAccess	g -> n_layers		3940990	0					
ANR	3941026	Identifier	g		3940990	0					
ANR	3941027	Identifier	n_layers		3940990	1					
ANR	3941028	PrimaryExpression	0		3940990	1					
ANR	3941029	Statement	graph_foreach_anode	748:1:19478:19496	3940990	6	True				
ANR	3941030	Statement	(	748:21:19498:19498	3940990	7	True				
ANR	3941031	Statement	nodes	748:22:19499:19503	3940990	8	True				
ANR	3941032	Statement	","	748:27:19504:19504	3940990	9	True				
ANR	3941033	Statement	it	748:29:19506:19507	3940990	10	True				
ANR	3941034	Statement	","	748:31:19508:19508	3940990	11	True				
ANR	3941035	Statement	gn	748:33:19510:19511	3940990	12	True				
ANR	3941036	Statement	","	748:35:19512:19512	3940990	13	True				
ANR	3941037	Statement	n	748:37:19514:19514	3940990	14	True				
ANR	3941038	Statement	)	748:38:19515:19515	3940990	15	True				
ANR	3941039	CompoundStatement		10:40:197:197	3940990	16					
ANR	3941040	IfStatement	if ( n -> layer > g -> n_layers )		3940990	0					
ANR	3941041	Condition	n -> layer > g -> n_layers	749:6:19525:19546	3940990	0	True				
ANR	3941042	RelationalExpression	n -> layer > g -> n_layers		3940990	0		>			
ANR	3941043	PtrMemberAccess	n -> layer		3940990	0					
ANR	3941044	Identifier	n		3940990	0					
ANR	3941045	Identifier	layer		3940990	1					
ANR	3941046	PtrMemberAccess	g -> n_layers		3940990	1					
ANR	3941047	Identifier	g		3940990	0					
ANR	3941048	Identifier	n_layers		3940990	1					
ANR	3941049	CompoundStatement		11:30:229:229	3940990	1					
ANR	3941050	ExpressionStatement	g -> n_layers = n -> layer	750:3:19554:19576	3940990	0	True				
ANR	3941051	AssignmentExpression	g -> n_layers = n -> layer		3940990	0		=			
ANR	3941052	PtrMemberAccess	g -> n_layers		3940990	0					
ANR	3941053	Identifier	g		3940990	0					
ANR	3941054	Identifier	n_layers		3940990	1					
ANR	3941055	PtrMemberAccess	n -> layer		3940990	1					
ANR	3941056	Identifier	n		3940990	0					
ANR	3941057	Identifier	layer		3940990	1					
ANR	3941058	ExpressionStatement	g -> n_layers ++	755:1:19645:19658	3940990	17	True				
ANR	3941059	PostIncDecOperationExpression	g -> n_layers ++		3940990	0					
ANR	3941060	PtrMemberAccess	g -> n_layers		3940990	0					
ANR	3941061	Identifier	g		3940990	0					
ANR	3941062	Identifier	n_layers		3940990	1					
ANR	3941063	IncDec	++		3940990	1					
ANR	3941064	IfStatement	if ( sizeof ( struct layer_t ) * g -> n_layers < g -> n_layers )		3940990	18					
ANR	3941065	Condition	sizeof ( struct layer_t ) * g -> n_layers < g -> n_layers	756:5:19665:19715	3940990	0	True				
ANR	3941066	RelationalExpression	sizeof ( struct layer_t ) * g -> n_layers < g -> n_layers		3940990	0		<			
ANR	3941067	MultiplicativeExpression	sizeof ( struct layer_t ) * g -> n_layers		3940990	0		*			
ANR	3941068	SizeofExpression	sizeof ( struct layer_t )		3940990	0					
ANR	3941069	Sizeof	sizeof		3940990	0					
ANR	3941070	SizeofOperand	struct layer_t		3940990	1					
ANR	3941071	PtrMemberAccess	g -> n_layers		3940990	1					
ANR	3941072	Identifier	g		3940990	0					
ANR	3941073	Identifier	n_layers		3940990	1					
ANR	3941074	PtrMemberAccess	g -> n_layers		3940990	1					
ANR	3941075	Identifier	g		3940990	0					
ANR	3941076	Identifier	n_layers		3940990	1					
ANR	3941077	CompoundStatement		18:58:398:398	3940990	1					
ANR	3941078	ReturnStatement	return ;	757:2:19722:19728	3940990	0	True				
ANR	3941079	Statement	g	759:1:19734:19734	3940990	19	True				
ANR	3941080	Statement	->	759:2:19735:19736	3940990	20	True				
ANR	3941081	Statement	layers	759:4:19737:19742	3940990	21	True				
ANR	3941082	Statement	=	759:11:19744:19744	3940990	22	True				
ANR	3941083	Statement	R_NEWS0	759:13:19746:19752	3940990	23	True				
ANR	3941084	Statement	(	759:21:19754:19754	3940990	24	True				
ANR	3941085	Statement	struct	759:22:19755:19760	3940990	25	True				
ANR	3941086	Statement	layer_t	759:29:19762:19768	3940990	26	True				
ANR	3941087	Statement	","	759:36:19769:19769	3940990	27	True				
ANR	3941088	Statement	g	759:38:19771:19771	3940990	28	True				
ANR	3941089	Statement	->	759:39:19772:19773	3940990	29	True				
ANR	3941090	Statement	n_layers	759:41:19774:19781	3940990	30	True				
ANR	3941091	Statement	)	759:49:19782:19782	3940990	31	True				
ANR	3941092	ExpressionStatement		759:50:19783:19783	3940990	32	True				
ANR	3941093	Statement	graph_foreach_anode	761:1:19787:19805	3940990	33	True				
ANR	3941094	Statement	(	761:21:19807:19807	3940990	34	True				
ANR	3941095	Statement	nodes	761:22:19808:19812	3940990	35	True				
ANR	3941096	Statement	","	761:27:19813:19813	3940990	36	True				
ANR	3941097	Statement	it	761:29:19815:19816	3940990	37	True				
ANR	3941098	Statement	","	761:31:19817:19817	3940990	38	True				
ANR	3941099	Statement	gn	761:33:19819:19820	3940990	39	True				
ANR	3941100	Statement	","	761:35:19821:19821	3940990	40	True				
ANR	3941101	Statement	n	761:37:19823:19823	3940990	41	True				
ANR	3941102	Statement	)	761:38:19824:19824	3940990	42	True				
ANR	3941103	CompoundStatement		23:40:506:506	3940990	43					
ANR	3941104	ExpressionStatement	g -> layers [ n -> layer ] . n_nodes ++	762:2:19830:19859	3940990	0	True				
ANR	3941105	PostIncDecOperationExpression	g -> layers [ n -> layer ] . n_nodes ++		3940990	0					
ANR	3941106	MemberAccess	g -> layers [ n -> layer ] . n_nodes		3940990	0					
ANR	3941107	ArrayIndexing	g -> layers [ n -> layer ]		3940990	0					
ANR	3941108	PtrMemberAccess	g -> layers		3940990	0					
ANR	3941109	Identifier	g		3940990	0					
ANR	3941110	Identifier	layers		3940990	1					
ANR	3941111	PtrMemberAccess	n -> layer		3940990	1					
ANR	3941112	Identifier	n		3940990	0					
ANR	3941113	Identifier	layer		3940990	1					
ANR	3941114	Identifier	n_nodes		3940990	1					
ANR	3941115	IncDec	++		3940990	1					
ANR	3941116	ForStatement	for ( i = 0 ; i < g -> n_layers ; ++ i )		3940990	44					
ANR	3941117	ForInit	i = 0 ;	765:6:19871:19876	3940990	0	True				
ANR	3941118	AssignmentExpression	i = 0		3940990	0		=			
ANR	3941119	Identifier	i		3940990	0					
ANR	3941120	PrimaryExpression	0		3940990	1					
ANR	3941121	Condition	i < g -> n_layers	765:13:19878:19892	3940990	1	True				
ANR	3941122	RelationalExpression	i < g -> n_layers		3940990	0		<			
ANR	3941123	Identifier	i		3940990	0					
ANR	3941124	PtrMemberAccess	g -> n_layers		3940990	1					
ANR	3941125	Identifier	g		3940990	0					
ANR	3941126	Identifier	n_layers		3940990	1					
ANR	3941127	UnaryExpression	++ i	765:30:19895:19897	3940990	2	True				
ANR	3941128	IncDec	++		3940990	0					
ANR	3941129	Identifier	i		3940990	1					
ANR	3941130	CompoundStatement		27:35:580:580	3940990	3					
ANR	3941131	IfStatement	if ( sizeof ( RGraphNode * ) * g -> layers [ i ] . n_nodes < g -> layers [ i ] . n_nodes )		3940990	0					
ANR	3941132	Condition	sizeof ( RGraphNode * ) * g -> layers [ i ] . n_nodes < g -> layers [ i ] . n_nodes	766:6:19908:19974	3940990	0	True				
ANR	3941133	RelationalExpression	sizeof ( RGraphNode * ) * g -> layers [ i ] . n_nodes < g -> layers [ i ] . n_nodes		3940990	0		<			
ANR	3941134	MultiplicativeExpression	sizeof ( RGraphNode * ) * g -> layers [ i ] . n_nodes		3940990	0		*			
ANR	3941135	SizeofExpression	sizeof ( RGraphNode * )		3940990	0					
ANR	3941136	Sizeof	sizeof		3940990	0					
ANR	3941137	SizeofOperand	RGraphNode *		3940990	1					
ANR	3941138	MemberAccess	g -> layers [ i ] . n_nodes		3940990	1					
ANR	3941139	ArrayIndexing	g -> layers [ i ]		3940990	0					
ANR	3941140	PtrMemberAccess	g -> layers		3940990	0					
ANR	3941141	Identifier	g		3940990	0					
ANR	3941142	Identifier	layers		3940990	1					
ANR	3941143	Identifier	i		3940990	1					
ANR	3941144	Identifier	n_nodes		3940990	1					
ANR	3941145	MemberAccess	g -> layers [ i ] . n_nodes		3940990	1					
ANR	3941146	ArrayIndexing	g -> layers [ i ]		3940990	0					
ANR	3941147	PtrMemberAccess	g -> layers		3940990	0					
ANR	3941148	Identifier	g		3940990	0					
ANR	3941149	Identifier	layers		3940990	1					
ANR	3941150	Identifier	i		3940990	1					
ANR	3941151	Identifier	n_nodes		3940990	1					
ANR	3941152	CompoundStatement		28:75:657:657	3940990	1					
ANR	3941153	ContinueStatement	continue ;	767:3:19982:19990	3940990	0	True				
ANR	3941154	Statement	g	769:2:19998:19998	3940990	1	True				
ANR	3941155	Statement	->	769:3:19999:20000	3940990	2	True				
ANR	3941156	Statement	layers	769:5:20001:20006	3940990	3	True				
ANR	3941157	Statement	[	769:11:20007:20007	3940990	4	True				
ANR	3941158	Statement	i	769:12:20008:20008	3940990	5	True				
ANR	3941159	Statement	]	769:13:20009:20009	3940990	6	True				
ANR	3941160	Statement	.	769:14:20010:20010	3940990	7	True				
ANR	3941161	Statement	nodes	769:15:20011:20015	3940990	8	True				
ANR	3941162	Statement	=	769:21:20017:20017	3940990	9	True				
ANR	3941163	Statement	R_NEWS0	769:23:20019:20025	3940990	10	True				
ANR	3941164	Statement	(	769:31:20027:20027	3940990	11	True				
ANR	3941165	Statement	RGraphNode	769:32:20028:20037	3940990	12	True				
ANR	3941166	Statement	*	769:43:20039:20039	3940990	13	True				
ANR	3941167	Statement	","	769:44:20040:20040	3940990	14	True				
ANR	3941168	Statement	1	770:3:20045:20045	3940990	15	True				
ANR	3941169	Statement	+	770:5:20047:20047	3940990	16	True				
ANR	3941170	Statement	g	770:7:20049:20049	3940990	17	True				
ANR	3941171	Statement	->	770:8:20050:20051	3940990	18	True				
ANR	3941172	Statement	layers	770:10:20052:20057	3940990	19	True				
ANR	3941173	Statement	[	770:16:20058:20058	3940990	20	True				
ANR	3941174	Statement	i	770:17:20059:20059	3940990	21	True				
ANR	3941175	Statement	]	770:18:20060:20060	3940990	22	True				
ANR	3941176	Statement	.	770:19:20061:20061	3940990	23	True				
ANR	3941177	Statement	n_nodes	770:20:20062:20068	3940990	24	True				
ANR	3941178	Statement	)	770:27:20069:20069	3940990	25	True				
ANR	3941179	ExpressionStatement		770:28:20070:20070	3940990	26	True				
ANR	3941180	ExpressionStatement	g -> layers [ i ] . position = 0	771:2:20074:20099	3940990	27	True				
ANR	3941181	AssignmentExpression	g -> layers [ i ] . position = 0		3940990	0		=			
ANR	3941182	MemberAccess	g -> layers [ i ] . position		3940990	0					
ANR	3941183	ArrayIndexing	g -> layers [ i ]		3940990	0					
ANR	3941184	PtrMemberAccess	g -> layers		3940990	0					
ANR	3941185	Identifier	g		3940990	0					
ANR	3941186	Identifier	layers		3940990	1					
ANR	3941187	Identifier	i		3940990	1					
ANR	3941188	Identifier	position		3940990	1					
ANR	3941189	PrimaryExpression	0		3940990	1					
ANR	3941190	Statement	graph_foreach_anode	773:1:20105:20123	3940990	45	True				
ANR	3941191	Statement	(	773:21:20125:20125	3940990	46	True				
ANR	3941192	Statement	nodes	773:22:20126:20130	3940990	47	True				
ANR	3941193	Statement	","	773:27:20131:20131	3940990	48	True				
ANR	3941194	Statement	it	773:29:20133:20134	3940990	49	True				
ANR	3941195	Statement	","	773:31:20135:20135	3940990	50	True				
ANR	3941196	Statement	gn	773:33:20137:20138	3940990	51	True				
ANR	3941197	Statement	","	773:35:20139:20139	3940990	52	True				
ANR	3941198	Statement	n	773:37:20141:20141	3940990	53	True				
ANR	3941199	Statement	)	773:38:20142:20142	3940990	54	True				
ANR	3941200	CompoundStatement		35:40:824:824	3940990	55					
ANR	3941201	ExpressionStatement	n -> pos_in_layer = g -> layers [ n -> layer ] . position	774:2:20148:20194	3940990	0	True				
ANR	3941202	AssignmentExpression	n -> pos_in_layer = g -> layers [ n -> layer ] . position		3940990	0		=			
ANR	3941203	PtrMemberAccess	n -> pos_in_layer		3940990	0					
ANR	3941204	Identifier	n		3940990	0					
ANR	3941205	Identifier	pos_in_layer		3940990	1					
ANR	3941206	MemberAccess	g -> layers [ n -> layer ] . position		3940990	1					
ANR	3941207	ArrayIndexing	g -> layers [ n -> layer ]		3940990	0					
ANR	3941208	PtrMemberAccess	g -> layers		3940990	0					
ANR	3941209	Identifier	g		3940990	0					
ANR	3941210	Identifier	layers		3940990	1					
ANR	3941211	PtrMemberAccess	n -> layer		3940990	1					
ANR	3941212	Identifier	n		3940990	0					
ANR	3941213	Identifier	layer		3940990	1					
ANR	3941214	Identifier	position		3940990	1					
ANR	3941215	ExpressionStatement	g -> layers [ n -> layer ] . nodes [ g -> layers [ n -> layer ] . position ++ ] = gn	775:2:20198:20260	3940990	1	True				
ANR	3941216	AssignmentExpression	g -> layers [ n -> layer ] . nodes [ g -> layers [ n -> layer ] . position ++ ] = gn		3940990	0		=			
ANR	3941217	ArrayIndexing	g -> layers [ n -> layer ] . nodes [ g -> layers [ n -> layer ] . position ++ ]		3940990	0					
ANR	3941218	MemberAccess	g -> layers [ n -> layer ] . nodes		3940990	0					
ANR	3941219	ArrayIndexing	g -> layers [ n -> layer ]		3940990	0					
ANR	3941220	PtrMemberAccess	g -> layers		3940990	0					
ANR	3941221	Identifier	g		3940990	0					
ANR	3941222	Identifier	layers		3940990	1					
ANR	3941223	PtrMemberAccess	n -> layer		3940990	1					
ANR	3941224	Identifier	n		3940990	0					
ANR	3941225	Identifier	layer		3940990	1					
ANR	3941226	Identifier	nodes		3940990	1					
ANR	3941227	PostIncDecOperationExpression	g -> layers [ n -> layer ] . position ++		3940990	1					
ANR	3941228	MemberAccess	g -> layers [ n -> layer ] . position		3940990	0					
ANR	3941229	ArrayIndexing	g -> layers [ n -> layer ]		3940990	0					
ANR	3941230	PtrMemberAccess	g -> layers		3940990	0					
ANR	3941231	Identifier	g		3940990	0					
ANR	3941232	Identifier	layers		3940990	1					
ANR	3941233	PtrMemberAccess	n -> layer		3940990	1					
ANR	3941234	Identifier	n		3940990	0					
ANR	3941235	Identifier	layer		3940990	1					
ANR	3941236	Identifier	position		3940990	1					
ANR	3941237	IncDec	++		3940990	1					
ANR	3941238	Identifier	gn		3940990	1					
ANR	3941239	ReturnType	static void		3940990	1					
ANR	3941240	Identifier	create_layers		3940990	2					
ANR	3941241	ParameterList	RAGraph * g		3940990	3					
ANR	3941242	Parameter	RAGraph * g	739:26:19307:19316	3940990	0	True				
ANR	3941243	ParameterType	RAGraph *		3940990	0					
ANR	3941244	Identifier	g		3940990	1					
ANR	3941245	CFGEntryNode	ENTRY		3940990		True				
ANR	3941246	CFGExitNode	EXIT		3940990		True				
ANR	3941247	Symbol	g -> layers [ i ] . position		3940990						
ANR	3941248	Symbol	g -> n_layers		3940990						
ANR	3941249	Symbol	g -> graph		3940990						
ANR	3941250	Symbol	* * n		3940990						
ANR	3941251	Symbol	* n -> layer		3940990						
ANR	3941252	Symbol	r_graph_get_nodes		3940990						
ANR	3941253	Symbol	* * g		3940990						
ANR	3941254	Symbol	g		3940990						
ANR	3941255	Symbol	gn		3940990						
ANR	3941256	Symbol	i		3940990						
ANR	3941257	Symbol	g -> layers [ n -> layer ] . nodes		3940990						
ANR	3941258	Symbol	it		3940990						
ANR	3941259	Symbol	* * n -> layer		3940990						
ANR	3941260	Symbol	n		3940990						
ANR	3941261	Symbol	g -> layers [ n -> layer ] . position		3940990						
ANR	3941262	Symbol	* g		3940990						
ANR	3941263	Symbol	nodes		3940990						
ANR	3941264	Symbol	g -> layers [ n -> layer ] . n_nodes		3940990						
ANR	3941265	Symbol	* i		3940990						
ANR	3941266	Symbol	n -> pos_in_layer		3940990						
ANR	3941267	Symbol	* * * n		3940990						
ANR	3941268	Symbol	* n		3940990						
ANR	3941269	Symbol	* g -> layers [ n -> layer ] . nodes		3940990						
ANR	3941270	Symbol	n -> layer		3940990						
ANR	3941271	Symbol	* g -> layers		3940990						
ANR	3941272	Symbol	* * * g		3940990						
ANR	3941273	Symbol	g -> layers [ i ] . n_nodes		3940990						
ANR	3941274	Symbol	g -> layers		3940990						
ANR	3941275	Symbol	* * g -> layers		3940990						
ANR	3941276	Function	minimize_crossings	782:0:20417:21067							
ANR	3941277	FunctionDef	minimize_crossings (const RAGraph * g)		3941276	0					
ANR	3941278	CompoundStatement		782:49:20466:21067	3941276	0					
ANR	3941279	IdentifierDeclStatement	"int i , cross_changed , max_changes = 4096 ;"	783:1:20469:20509	3941276	0	True				
ANR	3941280	IdentifierDecl	i		3941276	0					
ANR	3941281	IdentifierDeclType	int		3941276	0					
ANR	3941282	Identifier	i		3941276	1					
ANR	3941283	IdentifierDecl	cross_changed		3941276	1					
ANR	3941284	IdentifierDeclType	int		3941276	0					
ANR	3941285	Identifier	cross_changed		3941276	1					
ANR	3941286	IdentifierDecl	max_changes = 4096		3941276	2					
ANR	3941287	IdentifierDeclType	int		3941276	0					
ANR	3941288	Identifier	max_changes		3941276	1					
ANR	3941289	AssignmentExpression	max_changes = 4096		3941276	2		=			
ANR	3941290	Identifier	max_changes		3941276	0					
ANR	3941291	PrimaryExpression	4096		3941276	1					
ANR	3941292	DoStatement	do		3941276	1					
ANR	3941293	CompoundStatement		4:4:49:49	3941276	0					
ANR	3941294	ExpressionStatement	cross_changed = false	786:2:20520:20541	3941276	0	True				
ANR	3941295	AssignmentExpression	cross_changed = false		3941276	0		=			
ANR	3941296	Identifier	cross_changed		3941276	0					
ANR	3941297	Identifier	false		3941276	1					
ANR	3941298	ExpressionStatement	max_changes --	787:2:20545:20558	3941276	1	True				
ANR	3941299	PostIncDecOperationExpression	max_changes --		3941276	0					
ANR	3941300	Identifier	max_changes		3941276	0					
ANR	3941301	IncDec	--		3941276	1					
ANR	3941302	ForStatement	for ( i = 0 ; i < g -> n_layers ; ++ i )		3941276	2					
ANR	3941303	ForInit	i = 0 ;	789:7:20568:20573	3941276	0	True				
ANR	3941304	AssignmentExpression	i = 0		3941276	0		=			
ANR	3941305	Identifier	i		3941276	0					
ANR	3941306	PrimaryExpression	0		3941276	1					
ANR	3941307	Condition	i < g -> n_layers	789:14:20575:20589	3941276	1	True				
ANR	3941308	RelationalExpression	i < g -> n_layers		3941276	0		<			
ANR	3941309	Identifier	i		3941276	0					
ANR	3941310	PtrMemberAccess	g -> n_layers		3941276	1					
ANR	3941311	Identifier	g		3941276	0					
ANR	3941312	Identifier	n_layers		3941276	1					
ANR	3941313	UnaryExpression	++ i	789:31:20592:20594	3941276	2	True				
ANR	3941314	IncDec	++		3941276	0					
ANR	3941315	Identifier	i		3941276	1					
ANR	3941316	CompoundStatement		9:3:135:199	3941276	3					
ANR	3941317	IdentifierDeclStatement	"int rc = layer_sweep ( g -> graph , g -> layers , g -> n_layers , i , true ) ;"	790:3:20602:20666	3941276	0	True				
ANR	3941318	IdentifierDecl	"rc = layer_sweep ( g -> graph , g -> layers , g -> n_layers , i , true )"		3941276	0					
ANR	3941319	IdentifierDeclType	int		3941276	0					
ANR	3941320	Identifier	rc		3941276	1					
ANR	3941321	AssignmentExpression	"rc = layer_sweep ( g -> graph , g -> layers , g -> n_layers , i , true )"		3941276	2		=			
ANR	3941322	Identifier	rc		3941276	0					
ANR	3941323	CallExpression	"layer_sweep ( g -> graph , g -> layers , g -> n_layers , i , true )"		3941276	1					
ANR	3941324	Callee	layer_sweep		3941276	0					
ANR	3941325	Identifier	layer_sweep		3941276	0					
ANR	3941326	ArgumentList	g -> graph		3941276	1					
ANR	3941327	Argument	g -> graph		3941276	0					
ANR	3941328	PtrMemberAccess	g -> graph		3941276	0					
ANR	3941329	Identifier	g		3941276	0					
ANR	3941330	Identifier	graph		3941276	1					
ANR	3941331	Argument	g -> layers		3941276	1					
ANR	3941332	PtrMemberAccess	g -> layers		3941276	0					
ANR	3941333	Identifier	g		3941276	0					
ANR	3941334	Identifier	layers		3941276	1					
ANR	3941335	Argument	g -> n_layers		3941276	2					
ANR	3941336	PtrMemberAccess	g -> n_layers		3941276	0					
ANR	3941337	Identifier	g		3941276	0					
ANR	3941338	Identifier	n_layers		3941276	1					
ANR	3941339	Argument	i		3941276	3					
ANR	3941340	Identifier	i		3941276	0					
ANR	3941341	Argument	true		3941276	4					
ANR	3941342	Identifier	true		3941276	0					
ANR	3941343	IfStatement	if ( rc == - 1 )		3941276	1					
ANR	3941344	Condition	rc == - 1	791:7:20675:20682	3941276	0	True				
ANR	3941345	EqualityExpression	rc == - 1		3941276	0		==			
ANR	3941346	Identifier	rc		3941276	0					
ANR	3941347	UnaryOperationExpression	- 1		3941276	1					
ANR	3941348	UnaryOperator	-		3941276	0					
ANR	3941349	PrimaryExpression	1		3941276	1					
ANR	3941350	CompoundStatement		10:17:218:218	3941276	1					
ANR	3941351	ReturnStatement	return ;	792:4:20691:20697	3941276	0	True				
ANR	3941352	ExpressionStatement	cross_changed |= ! ! rc	794:3:20707:20728	3941276	2	True				
ANR	3941353	AssignmentExpression	cross_changed |= ! ! rc		3941276	0		|=			
ANR	3941354	Identifier	cross_changed		3941276	0					
ANR	3941355	UnaryOperationExpression	! ! rc		3941276	1					
ANR	3941356	UnaryOperator	!		3941276	0					
ANR	3941357	UnaryOperationExpression	! rc		3941276	1					
ANR	3941358	UnaryOperator	!		3941276	0					
ANR	3941359	Identifier	rc		3941276	1					
ANR	3941360	Condition	cross_changed && max_changes	796:10:20744:20771	3941276	1	True				
ANR	3941361	AndExpression	cross_changed && max_changes		3941276	0		&&			
ANR	3941362	Identifier	cross_changed		3941276	0					
ANR	3941363	Identifier	max_changes		3941276	1					
ANR	3941364	ExpressionStatement	max_changes = 4096	798:1:20777:20795	3941276	2	True				
ANR	3941365	AssignmentExpression	max_changes = 4096		3941276	0		=			
ANR	3941366	Identifier	max_changes		3941276	0					
ANR	3941367	PrimaryExpression	4096		3941276	1					
ANR	3941368	DoStatement	do		3941276	3					
ANR	3941369	CompoundStatement		19:4:335:335	3941276	0					
ANR	3941370	ExpressionStatement	cross_changed = false	801:2:20806:20827	3941276	0	True				
ANR	3941371	AssignmentExpression	cross_changed = false		3941276	0		=			
ANR	3941372	Identifier	cross_changed		3941276	0					
ANR	3941373	Identifier	false		3941276	1					
ANR	3941374	ExpressionStatement	max_changes --	802:2:20831:20844	3941276	1	True				
ANR	3941375	PostIncDecOperationExpression	max_changes --		3941276	0					
ANR	3941376	Identifier	max_changes		3941276	0					
ANR	3941377	IncDec	--		3941276	1					
ANR	3941378	ForStatement	for ( i = g -> n_layers - 1 ; i >= 0 ; -- i )		3941276	2					
ANR	3941379	ForInit	i = g -> n_layers - 1 ;	804:7:20854:20873	3941276	0	True				
ANR	3941380	AssignmentExpression	i = g -> n_layers - 1		3941276	0		=			
ANR	3941381	Identifier	i		3941276	0					
ANR	3941382	AdditiveExpression	g -> n_layers - 1		3941276	1		-			
ANR	3941383	PtrMemberAccess	g -> n_layers		3941276	0					
ANR	3941384	Identifier	g		3941276	0					
ANR	3941385	Identifier	n_layers		3941276	1					
ANR	3941386	PrimaryExpression	1		3941276	1					
ANR	3941387	Condition	i >= 0	804:28:20875:20880	3941276	1	True				
ANR	3941388	RelationalExpression	i >= 0		3941276	0		>=			
ANR	3941389	Identifier	i		3941276	0					
ANR	3941390	PrimaryExpression	0		3941276	1					
ANR	3941391	UnaryExpression	-- i	804:36:20883:20885	3941276	2	True				
ANR	3941392	IncDec	--		3941276	0					
ANR	3941393	Identifier	i		3941276	1					
ANR	3941394	CompoundStatement		24:3:426:491	3941276	3					
ANR	3941395	IdentifierDeclStatement	"int rc = layer_sweep ( g -> graph , g -> layers , g -> n_layers , i , false ) ;"	805:3:20893:20958	3941276	0	True				
ANR	3941396	IdentifierDecl	"rc = layer_sweep ( g -> graph , g -> layers , g -> n_layers , i , false )"		3941276	0					
ANR	3941397	IdentifierDeclType	int		3941276	0					
ANR	3941398	Identifier	rc		3941276	1					
ANR	3941399	AssignmentExpression	"rc = layer_sweep ( g -> graph , g -> layers , g -> n_layers , i , false )"		3941276	2		=			
ANR	3941400	Identifier	rc		3941276	0					
ANR	3941401	CallExpression	"layer_sweep ( g -> graph , g -> layers , g -> n_layers , i , false )"		3941276	1					
ANR	3941402	Callee	layer_sweep		3941276	0					
ANR	3941403	Identifier	layer_sweep		3941276	0					
ANR	3941404	ArgumentList	g -> graph		3941276	1					
ANR	3941405	Argument	g -> graph		3941276	0					
ANR	3941406	PtrMemberAccess	g -> graph		3941276	0					
ANR	3941407	Identifier	g		3941276	0					
ANR	3941408	Identifier	graph		3941276	1					
ANR	3941409	Argument	g -> layers		3941276	1					
ANR	3941410	PtrMemberAccess	g -> layers		3941276	0					
ANR	3941411	Identifier	g		3941276	0					
ANR	3941412	Identifier	layers		3941276	1					
ANR	3941413	Argument	g -> n_layers		3941276	2					
ANR	3941414	PtrMemberAccess	g -> n_layers		3941276	0					
ANR	3941415	Identifier	g		3941276	0					
ANR	3941416	Identifier	n_layers		3941276	1					
ANR	3941417	Argument	i		3941276	3					
ANR	3941418	Identifier	i		3941276	0					
ANR	3941419	Argument	false		3941276	4					
ANR	3941420	Identifier	false		3941276	0					
ANR	3941421	IfStatement	if ( rc == - 1 )		3941276	1					
ANR	3941422	Condition	rc == - 1	806:7:20967:20974	3941276	0	True				
ANR	3941423	EqualityExpression	rc == - 1		3941276	0		==			
ANR	3941424	Identifier	rc		3941276	0					
ANR	3941425	UnaryOperationExpression	- 1		3941276	1					
ANR	3941426	UnaryOperator	-		3941276	0					
ANR	3941427	PrimaryExpression	1		3941276	1					
ANR	3941428	CompoundStatement		25:17:510:510	3941276	1					
ANR	3941429	ReturnStatement	return ;	807:4:20983:20989	3941276	0	True				
ANR	3941430	ExpressionStatement	cross_changed |= ! ! rc	809:3:20999:21020	3941276	2	True				
ANR	3941431	AssignmentExpression	cross_changed |= ! ! rc		3941276	0		|=			
ANR	3941432	Identifier	cross_changed		3941276	0					
ANR	3941433	UnaryOperationExpression	! ! rc		3941276	1					
ANR	3941434	UnaryOperator	!		3941276	0					
ANR	3941435	UnaryOperationExpression	! rc		3941276	1					
ANR	3941436	UnaryOperator	!		3941276	0					
ANR	3941437	Identifier	rc		3941276	1					
ANR	3941438	Condition	cross_changed && max_changes	811:10:21036:21063	3941276	1	True				
ANR	3941439	AndExpression	cross_changed && max_changes		3941276	0		&&			
ANR	3941440	Identifier	cross_changed		3941276	0					
ANR	3941441	Identifier	max_changes		3941276	1					
ANR	3941442	ReturnType	static void		3941276	1					
ANR	3941443	Identifier	minimize_crossings		3941276	2					
ANR	3941444	ParameterList	const RAGraph * g		3941276	3					
ANR	3941445	Parameter	const RAGraph * g	782:31:20448:20463	3941276	0	True				
ANR	3941446	ParameterType	const RAGraph *		3941276	0					
ANR	3941447	Identifier	g		3941276	1					
ANR	3941448	CFGEntryNode	ENTRY		3941276		True				
ANR	3941449	CFGExitNode	EXIT		3941276		True				
ANR	3941450	Symbol	* g		3941276						
ANR	3941451	Symbol	rc		3941276						
ANR	3941452	Symbol	cross_changed		3941276						
ANR	3941453	Symbol	layer_sweep		3941276						
ANR	3941454	Symbol	g -> graph		3941276						
ANR	3941455	Symbol	g		3941276						
ANR	3941456	Symbol	false		3941276						
ANR	3941457	Symbol	true		3941276						
ANR	3941458	Symbol	i		3941276						
ANR	3941459	Symbol	g -> n_layers		3941276						
ANR	3941460	Symbol	max_changes		3941276						
ANR	3941461	Symbol	g -> layers		3941276						
ANR	3941462	Function	find_dist	814:0:21070:21193							
ANR	3941463	FunctionDef	"find_dist (const struct dist_t * a , const struct dist_t * b)"		3941462	0					
ANR	3941464	CompoundStatement		814:69:21139:21193	3941462	0					
ANR	3941465	ReturnStatement	return a -> from == b -> from && a -> to == b -> to ? 0 : 1 ;	815:1:21142:21191	3941462	0	True				
ANR	3941466	ConditionalExpression	a -> from == b -> from && a -> to == b -> to ? 0 : 1		3941462	0					
ANR	3941467	Condition	a -> from == b -> from && a -> to == b -> to		3941462	0					
ANR	3941468	AndExpression	a -> from == b -> from && a -> to == b -> to		3941462	0		&&			
ANR	3941469	EqualityExpression	a -> from == b -> from		3941462	0		==			
ANR	3941470	PtrMemberAccess	a -> from		3941462	0					
ANR	3941471	Identifier	a		3941462	0					
ANR	3941472	Identifier	from		3941462	1					
ANR	3941473	PtrMemberAccess	b -> from		3941462	1					
ANR	3941474	Identifier	b		3941462	0					
ANR	3941475	Identifier	from		3941462	1					
ANR	3941476	EqualityExpression	a -> to == b -> to		3941462	1		==			
ANR	3941477	PtrMemberAccess	a -> to		3941462	0					
ANR	3941478	Identifier	a		3941462	0					
ANR	3941479	Identifier	to		3941462	1					
ANR	3941480	PtrMemberAccess	b -> to		3941462	1					
ANR	3941481	Identifier	b		3941462	0					
ANR	3941482	Identifier	to		3941462	1					
ANR	3941483	PrimaryExpression	0		3941462	1					
ANR	3941484	PrimaryExpression	1		3941462	2					
ANR	3941485	ReturnType	static int		3941462	1					
ANR	3941486	Identifier	find_dist		3941462	2					
ANR	3941487	ParameterList	"const struct dist_t * a , const struct dist_t * b"		3941462	3					
ANR	3941488	Parameter	const struct dist_t * a	814:21:21091:21112	3941462	0	True				
ANR	3941489	ParameterType	const struct dist_t *		3941462	0					
ANR	3941490	Identifier	a		3941462	1					
ANR	3941491	Parameter	const struct dist_t * b	814:45:21115:21136	3941462	1	True				
ANR	3941492	ParameterType	const struct dist_t *		3941462	0					
ANR	3941493	Identifier	b		3941462	1					
ANR	3941494	CFGEntryNode	ENTRY		3941462		True				
ANR	3941495	CFGExitNode	EXIT		3941462		True				
ANR	3941496	Symbol	a		3941462						
ANR	3941497	Symbol	a -> from		3941462						
ANR	3941498	Symbol	b		3941462						
ANR	3941499	Symbol	a -> to		3941462						
ANR	3941500	Symbol	b -> to		3941462						
ANR	3941501	Symbol	b -> from		3941462						
ANR	3941502	Symbol	* a		3941462						
ANR	3941503	Symbol	* b		3941462						
ANR	3941504	Function	dist_nodes	821:0:21383:22827							
ANR	3941505	FunctionDef	"dist_nodes (const RAGraph * g , const RGraphNode * a , const RGraphNode * b)"		3941504	0					
ANR	3941506	CompoundStatement		821:82:21465:22827	3941504	0					
ANR	3941507	IdentifierDeclStatement	struct dist_t d ;	822:1:21468:21483	3941504	0	True				
ANR	3941508	IdentifierDecl	d		3941504	0					
ANR	3941509	IdentifierDeclType	struct dist_t		3941504	0					
ANR	3941510	Identifier	d		3941504	1					
ANR	3941511	IdentifierDeclStatement	"const RANode * aa , * ab ;"	823:1:21486:21507	3941504	1	True				
ANR	3941512	IdentifierDecl	* aa		3941504	0					
ANR	3941513	IdentifierDeclType	const RANode *		3941504	0					
ANR	3941514	Identifier	aa		3941504	1					
ANR	3941515	IdentifierDecl	* ab		3941504	1					
ANR	3941516	IdentifierDeclType	const RANode *		3941504	0					
ANR	3941517	Identifier	ab		3941504	1					
ANR	3941518	IdentifierDeclStatement	RListIter * it ;	824:1:21510:21523	3941504	2	True				
ANR	3941519	IdentifierDecl	* it		3941504	0					
ANR	3941520	IdentifierDeclType	RListIter *		3941504	0					
ANR	3941521	Identifier	it		3941504	1					
ANR	3941522	IdentifierDeclStatement	int res = 0 ;	825:1:21526:21537	3941504	3	True				
ANR	3941523	IdentifierDecl	res = 0		3941504	0					
ANR	3941524	IdentifierDeclType	int		3941504	0					
ANR	3941525	Identifier	res		3941504	1					
ANR	3941526	AssignmentExpression	res = 0		3941504	2		=			
ANR	3941527	Identifier	res		3941504	0					
ANR	3941528	PrimaryExpression	0		3941504	1					
ANR	3941529	IfStatement	if ( g -> dists )		3941504	4					
ANR	3941530	Condition	g -> dists	827:5:21545:21552	3941504	0	True				
ANR	3941531	PtrMemberAccess	g -> dists		3941504	0					
ANR	3941532	Identifier	g		3941504	0					
ANR	3941533	Identifier	dists		3941504	1					
ANR	3941534	CompoundStatement		7:15:89:89	3941504	1					
ANR	3941535	ExpressionStatement	d . from = a	828:2:21559:21569	3941504	0	True				
ANR	3941536	AssignmentExpression	d . from = a		3941504	0		=			
ANR	3941537	MemberAccess	d . from		3941504	0					
ANR	3941538	Identifier	d		3941504	0					
ANR	3941539	Identifier	from		3941504	1					
ANR	3941540	Identifier	a		3941504	1					
ANR	3941541	ExpressionStatement	d . to = b	829:2:21573:21581	3941504	1	True				
ANR	3941542	AssignmentExpression	d . to = b		3941504	0		=			
ANR	3941543	MemberAccess	d . to		3941504	0					
ANR	3941544	Identifier	d		3941504	0					
ANR	3941545	Identifier	to		3941504	1					
ANR	3941546	Identifier	b		3941504	1					
ANR	3941547	ExpressionStatement	"it = r_list_find ( g -> dists , & d , ( RListComparator ) find_dist )"	830:2:21585:21645	3941504	2	True				
ANR	3941548	AssignmentExpression	"it = r_list_find ( g -> dists , & d , ( RListComparator ) find_dist )"		3941504	0		=			
ANR	3941549	Identifier	it		3941504	0					
ANR	3941550	CallExpression	"r_list_find ( g -> dists , & d , ( RListComparator ) find_dist )"		3941504	1					
ANR	3941551	Callee	r_list_find		3941504	0					
ANR	3941552	Identifier	r_list_find		3941504	0					
ANR	3941553	ArgumentList	g -> dists		3941504	1					
ANR	3941554	Argument	g -> dists		3941504	0					
ANR	3941555	PtrMemberAccess	g -> dists		3941504	0					
ANR	3941556	Identifier	g		3941504	0					
ANR	3941557	Identifier	dists		3941504	1					
ANR	3941558	Argument	& d		3941504	1					
ANR	3941559	UnaryOperationExpression	& d		3941504	0					
ANR	3941560	UnaryOperator	&		3941504	0					
ANR	3941561	Identifier	d		3941504	1					
ANR	3941562	Argument	( RListComparator ) find_dist		3941504	2					
ANR	3941563	CastExpression	( RListComparator ) find_dist		3941504	0					
ANR	3941564	CastTarget	RListComparator		3941504	0					
ANR	3941565	Identifier	find_dist		3941504	1					
ANR	3941566	IfStatement	if ( it )		3941504	3					
ANR	3941567	Condition	it	831:6:21653:21654	3941504	0	True				
ANR	3941568	Identifier	it		3941504	0					
ANR	3941569	CompoundStatement		12:3:196:260	3941504	1					
ANR	3941570	IdentifierDeclStatement	struct dist_t * old = ( struct dist_t * ) r_list_iter_get_data ( it ) ;	832:3:21662:21726	3941504	0	True				
ANR	3941571	IdentifierDecl	* old = ( struct dist_t * ) r_list_iter_get_data ( it )		3941504	0					
ANR	3941572	IdentifierDeclType	struct dist_t *		3941504	0					
ANR	3941573	Identifier	old		3941504	1					
ANR	3941574	AssignmentExpression	* old = ( struct dist_t * ) r_list_iter_get_data ( it )		3941504	2		=			
ANR	3941575	Identifier	old		3941504	0					
ANR	3941576	CastExpression	( struct dist_t * ) r_list_iter_get_data ( it )		3941504	1					
ANR	3941577	CastTarget	struct dist_t *		3941504	0					
ANR	3941578	CallExpression	r_list_iter_get_data ( it )		3941504	1					
ANR	3941579	Callee	r_list_iter_get_data		3941504	0					
ANR	3941580	Identifier	r_list_iter_get_data		3941504	0					
ANR	3941581	ArgumentList	it		3941504	1					
ANR	3941582	Argument	it		3941504	0					
ANR	3941583	Identifier	it		3941504	0					
ANR	3941584	ReturnStatement	return old -> dist ;	833:3:21731:21747	3941504	1	True				
ANR	3941585	PtrMemberAccess	old -> dist		3941504	0					
ANR	3941586	Identifier	old		3941504	0					
ANR	3941587	Identifier	dist		3941504	1					
ANR	3941588	ExpressionStatement	aa = get_anode ( a )	837:1:21758:21776	3941504	5	True				
ANR	3941589	AssignmentExpression	aa = get_anode ( a )		3941504	0		=			
ANR	3941590	Identifier	aa		3941504	0					
ANR	3941591	CallExpression	get_anode ( a )		3941504	1					
ANR	3941592	Callee	get_anode		3941504	0					
ANR	3941593	Identifier	get_anode		3941504	0					
ANR	3941594	ArgumentList	a		3941504	1					
ANR	3941595	Argument	a		3941504	0					
ANR	3941596	Identifier	a		3941504	0					
ANR	3941597	ExpressionStatement	ab = get_anode ( b )	838:1:21779:21797	3941504	6	True				
ANR	3941598	AssignmentExpression	ab = get_anode ( b )		3941504	0		=			
ANR	3941599	Identifier	ab		3941504	0					
ANR	3941600	CallExpression	get_anode ( b )		3941504	1					
ANR	3941601	Callee	get_anode		3941504	0					
ANR	3941602	Identifier	get_anode		3941504	0					
ANR	3941603	ArgumentList	b		3941504	1					
ANR	3941604	Argument	b		3941504	0					
ANR	3941605	Identifier	b		3941504	0					
ANR	3941606	IfStatement	if ( aa && ab && aa -> layer == ab -> layer )		3941504	7					
ANR	3941607	Condition	aa && ab && aa -> layer == ab -> layer	839:5:21804:21837	3941504	0	True				
ANR	3941608	AndExpression	aa && ab && aa -> layer == ab -> layer		3941504	0		&&			
ANR	3941609	Identifier	aa		3941504	0					
ANR	3941610	AndExpression	ab && aa -> layer == ab -> layer		3941504	1		&&			
ANR	3941611	Identifier	ab		3941504	0					
ANR	3941612	EqualityExpression	aa -> layer == ab -> layer		3941504	1		==			
ANR	3941613	PtrMemberAccess	aa -> layer		3941504	0					
ANR	3941614	Identifier	aa		3941504	0					
ANR	3941615	Identifier	layer		3941504	1					
ANR	3941616	PtrMemberAccess	ab -> layer		3941504	1					
ANR	3941617	Identifier	ab		3941504	0					
ANR	3941618	Identifier	layer		3941504	1					
ANR	3941619	CompoundStatement		20:2:378:383	3941504	1					
ANR	3941620	IdentifierDeclStatement	int i ;	840:2:21844:21849	3941504	0	True				
ANR	3941621	IdentifierDecl	i		3941504	0					
ANR	3941622	IdentifierDeclType	int		3941504	0					
ANR	3941623	Identifier	i		3941504	1					
ANR	3941624	ExpressionStatement	res = aa == ab && ! aa -> is_reversed ? HORIZONTAL_NODE_SPACING : 0	842:2:21854:21916	3941504	1	True				
ANR	3941625	AssignmentExpression	res = aa == ab && ! aa -> is_reversed ? HORIZONTAL_NODE_SPACING : 0		3941504	0		=			
ANR	3941626	Identifier	res		3941504	0					
ANR	3941627	ConditionalExpression	aa == ab && ! aa -> is_reversed ? HORIZONTAL_NODE_SPACING : 0		3941504	1					
ANR	3941628	Condition	aa == ab && ! aa -> is_reversed		3941504	0					
ANR	3941629	AndExpression	aa == ab && ! aa -> is_reversed		3941504	0		&&			
ANR	3941630	EqualityExpression	aa == ab		3941504	0		==			
ANR	3941631	Identifier	aa		3941504	0					
ANR	3941632	Identifier	ab		3941504	1					
ANR	3941633	UnaryOperationExpression	! aa -> is_reversed		3941504	1					
ANR	3941634	UnaryOperator	!		3941504	0					
ANR	3941635	PtrMemberAccess	aa -> is_reversed		3941504	1					
ANR	3941636	Identifier	aa		3941504	0					
ANR	3941637	Identifier	is_reversed		3941504	1					
ANR	3941638	Identifier	HORIZONTAL_NODE_SPACING		3941504	1					
ANR	3941639	PrimaryExpression	0		3941504	2					
ANR	3941640	ForStatement	for ( i = aa -> pos_in_layer ; i < ab -> pos_in_layer ; ++ i )		3941504	2					
ANR	3941641	ForInit	i = aa -> pos_in_layer ;	843:7:21925:21945	3941504	0	True				
ANR	3941642	AssignmentExpression	i = aa -> pos_in_layer		3941504	0		=			
ANR	3941643	Identifier	i		3941504	0					
ANR	3941644	PtrMemberAccess	aa -> pos_in_layer		3941504	1					
ANR	3941645	Identifier	aa		3941504	0					
ANR	3941646	Identifier	pos_in_layer		3941504	1					
ANR	3941647	Condition	i < ab -> pos_in_layer	843:29:21947:21966	3941504	1	True				
ANR	3941648	RelationalExpression	i < ab -> pos_in_layer		3941504	0		<			
ANR	3941649	Identifier	i		3941504	0					
ANR	3941650	PtrMemberAccess	ab -> pos_in_layer		3941504	1					
ANR	3941651	Identifier	ab		3941504	0					
ANR	3941652	Identifier	pos_in_layer		3941504	1					
ANR	3941653	UnaryExpression	++ i	843:51:21969:21971	3941504	2	True				
ANR	3941654	IncDec	++		3941504	0					
ANR	3941655	Identifier	i		3941504	1					
ANR	3941656	CompoundStatement		28:3:718:735	3941504	3					
ANR	3941657	IdentifierDeclStatement	const RGraphNode * cur = g -> layers [ aa -> layer ] . nodes [ i ] ;	844:3:21979:22032	3941504	0	True				
ANR	3941658	IdentifierDecl	* cur = g -> layers [ aa -> layer ] . nodes [ i ]		3941504	0					
ANR	3941659	IdentifierDeclType	const RGraphNode *		3941504	0					
ANR	3941660	Identifier	cur		3941504	1					
ANR	3941661	AssignmentExpression	* cur = g -> layers [ aa -> layer ] . nodes [ i ]		3941504	2		=			
ANR	3941662	Identifier	cur		3941504	0					
ANR	3941663	ArrayIndexing	g -> layers [ aa -> layer ] . nodes [ i ]		3941504	1					
ANR	3941664	MemberAccess	g -> layers [ aa -> layer ] . nodes		3941504	0					
ANR	3941665	ArrayIndexing	g -> layers [ aa -> layer ]		3941504	0					
ANR	3941666	PtrMemberAccess	g -> layers		3941504	0					
ANR	3941667	Identifier	g		3941504	0					
ANR	3941668	Identifier	layers		3941504	1					
ANR	3941669	PtrMemberAccess	aa -> layer		3941504	1					
ANR	3941670	Identifier	aa		3941504	0					
ANR	3941671	Identifier	layer		3941504	1					
ANR	3941672	Identifier	nodes		3941504	1					
ANR	3941673	Identifier	i		3941504	1					
ANR	3941674	IdentifierDeclStatement	const RGraphNode * next = g -> layers [ aa -> layer ] . nodes [ i + 1 ] ;	845:3:22037:22095	3941504	1	True				
ANR	3941675	IdentifierDecl	* next = g -> layers [ aa -> layer ] . nodes [ i + 1 ]		3941504	0					
ANR	3941676	IdentifierDeclType	const RGraphNode *		3941504	0					
ANR	3941677	Identifier	next		3941504	1					
ANR	3941678	AssignmentExpression	* next = g -> layers [ aa -> layer ] . nodes [ i + 1 ]		3941504	2		=			
ANR	3941679	Identifier	next		3941504	0					
ANR	3941680	ArrayIndexing	g -> layers [ aa -> layer ] . nodes [ i + 1 ]		3941504	1					
ANR	3941681	MemberAccess	g -> layers [ aa -> layer ] . nodes		3941504	0					
ANR	3941682	ArrayIndexing	g -> layers [ aa -> layer ]		3941504	0					
ANR	3941683	PtrMemberAccess	g -> layers		3941504	0					
ANR	3941684	Identifier	g		3941504	0					
ANR	3941685	Identifier	layers		3941504	1					
ANR	3941686	PtrMemberAccess	aa -> layer		3941504	1					
ANR	3941687	Identifier	aa		3941504	0					
ANR	3941688	Identifier	layer		3941504	1					
ANR	3941689	Identifier	nodes		3941504	1					
ANR	3941690	AdditiveExpression	i + 1		3941504	1		+			
ANR	3941691	Identifier	i		3941504	0					
ANR	3941692	PrimaryExpression	1		3941504	1					
ANR	3941693	IdentifierDeclStatement	const RANode * anext = get_anode ( next ) ;	846:3:22100:22138	3941504	2	True				
ANR	3941694	IdentifierDecl	* anext = get_anode ( next )		3941504	0					
ANR	3941695	IdentifierDeclType	const RANode *		3941504	0					
ANR	3941696	Identifier	anext		3941504	1					
ANR	3941697	AssignmentExpression	* anext = get_anode ( next )		3941504	2		=			
ANR	3941698	Identifier	anext		3941504	0					
ANR	3941699	CallExpression	get_anode ( next )		3941504	1					
ANR	3941700	Callee	get_anode		3941504	0					
ANR	3941701	Identifier	get_anode		3941504	0					
ANR	3941702	ArgumentList	next		3941504	1					
ANR	3941703	Argument	next		3941504	0					
ANR	3941704	Identifier	next		3941504	0					
ANR	3941705	IdentifierDeclStatement	const RANode * acur = get_anode ( cur ) ;	847:3:22143:22179	3941504	3	True				
ANR	3941706	IdentifierDecl	* acur = get_anode ( cur )		3941504	0					
ANR	3941707	IdentifierDeclType	const RANode *		3941504	0					
ANR	3941708	Identifier	acur		3941504	1					
ANR	3941709	AssignmentExpression	* acur = get_anode ( cur )		3941504	2		=			
ANR	3941710	Identifier	acur		3941504	0					
ANR	3941711	CallExpression	get_anode ( cur )		3941504	1					
ANR	3941712	Callee	get_anode		3941504	0					
ANR	3941713	Identifier	get_anode		3941504	0					
ANR	3941714	ArgumentList	cur		3941504	1					
ANR	3941715	Argument	cur		3941504	0					
ANR	3941716	Identifier	cur		3941504	0					
ANR	3941717	IdentifierDeclStatement	int found = false ;	848:3:22184:22201	3941504	4	True				
ANR	3941718	IdentifierDecl	found = false		3941504	0					
ANR	3941719	IdentifierDeclType	int		3941504	0					
ANR	3941720	Identifier	found		3941504	1					
ANR	3941721	AssignmentExpression	found = false		3941504	2		=			
ANR	3941722	Identifier	false		3941504	0					
ANR	3941723	Identifier	false		3941504	1					
ANR	3941724	IfStatement	if ( g -> dists )		3941504	5					
ANR	3941725	Condition	g -> dists	850:7:22211:22218	3941504	0	True				
ANR	3941726	PtrMemberAccess	g -> dists		3941504	0					
ANR	3941727	Identifier	g		3941504	0					
ANR	3941728	Identifier	dists		3941504	1					
ANR	3941729	CompoundStatement		30:17:755:755	3941504	1					
ANR	3941730	ExpressionStatement	d . from = cur	851:4:22227:22239	3941504	0	True				
ANR	3941731	AssignmentExpression	d . from = cur		3941504	0		=			
ANR	3941732	MemberAccess	d . from		3941504	0					
ANR	3941733	Identifier	d		3941504	0					
ANR	3941734	Identifier	from		3941504	1					
ANR	3941735	Identifier	cur		3941504	1					
ANR	3941736	ExpressionStatement	d . to = next	852:4:22245:22256	3941504	1	True				
ANR	3941737	AssignmentExpression	d . to = next		3941504	0		=			
ANR	3941738	MemberAccess	d . to		3941504	0					
ANR	3941739	Identifier	d		3941504	0					
ANR	3941740	Identifier	to		3941504	1					
ANR	3941741	Identifier	next		3941504	1					
ANR	3941742	ExpressionStatement	"it = r_list_find ( g -> dists , & d , ( RListComparator ) find_dist )"	853:4:22262:22322	3941504	2	True				
ANR	3941743	AssignmentExpression	"it = r_list_find ( g -> dists , & d , ( RListComparator ) find_dist )"		3941504	0		=			
ANR	3941744	Identifier	it		3941504	0					
ANR	3941745	CallExpression	"r_list_find ( g -> dists , & d , ( RListComparator ) find_dist )"		3941504	1					
ANR	3941746	Callee	r_list_find		3941504	0					
ANR	3941747	Identifier	r_list_find		3941504	0					
ANR	3941748	ArgumentList	g -> dists		3941504	1					
ANR	3941749	Argument	g -> dists		3941504	0					
ANR	3941750	PtrMemberAccess	g -> dists		3941504	0					
ANR	3941751	Identifier	g		3941504	0					
ANR	3941752	Identifier	dists		3941504	1					
ANR	3941753	Argument	& d		3941504	1					
ANR	3941754	UnaryOperationExpression	& d		3941504	0					
ANR	3941755	UnaryOperator	&		3941504	0					
ANR	3941756	Identifier	d		3941504	1					
ANR	3941757	Argument	( RListComparator ) find_dist		3941504	2					
ANR	3941758	CastExpression	( RListComparator ) find_dist		3941504	0					
ANR	3941759	CastTarget	RListComparator		3941504	0					
ANR	3941760	Identifier	find_dist		3941504	1					
ANR	3941761	IfStatement	if ( it )		3941504	3					
ANR	3941762	Condition	it	854:8:22332:22333	3941504	0	True				
ANR	3941763	Identifier	it		3941504	0					
ANR	3941764	CompoundStatement		35:5:877:941	3941504	1					
ANR	3941765	IdentifierDeclStatement	struct dist_t * old = ( struct dist_t * ) r_list_iter_get_data ( it ) ;	855:5:22343:22407	3941504	0	True				
ANR	3941766	IdentifierDecl	* old = ( struct dist_t * ) r_list_iter_get_data ( it )		3941504	0					
ANR	3941767	IdentifierDeclType	struct dist_t *		3941504	0					
ANR	3941768	Identifier	old		3941504	1					
ANR	3941769	AssignmentExpression	* old = ( struct dist_t * ) r_list_iter_get_data ( it )		3941504	2		=			
ANR	3941770	Identifier	old		3941504	0					
ANR	3941771	CastExpression	( struct dist_t * ) r_list_iter_get_data ( it )		3941504	1					
ANR	3941772	CastTarget	struct dist_t *		3941504	0					
ANR	3941773	CallExpression	r_list_iter_get_data ( it )		3941504	1					
ANR	3941774	Callee	r_list_iter_get_data		3941504	0					
ANR	3941775	Identifier	r_list_iter_get_data		3941504	0					
ANR	3941776	ArgumentList	it		3941504	1					
ANR	3941777	Argument	it		3941504	0					
ANR	3941778	Identifier	it		3941504	0					
ANR	3941779	ExpressionStatement	res += old -> dist	856:5:22414:22430	3941504	1	True				
ANR	3941780	AssignmentExpression	res += old -> dist		3941504	0		+=			
ANR	3941781	Identifier	res		3941504	0					
ANR	3941782	PtrMemberAccess	old -> dist		3941504	1					
ANR	3941783	Identifier	old		3941504	0					
ANR	3941784	Identifier	dist		3941504	1					
ANR	3941785	ExpressionStatement	found = true	857:5:22437:22449	3941504	2	True				
ANR	3941786	AssignmentExpression	found = true		3941504	0		=			
ANR	3941787	Identifier	found		3941504	0					
ANR	3941788	Identifier	true		3941504	1					
ANR	3941789	IfStatement	if ( acur && anext && ! found )		3941504	6					
ANR	3941790	Condition	acur && anext && ! found	861:7:22470:22492	3941504	0	True				
ANR	3941791	AndExpression	acur && anext && ! found		3941504	0		&&			
ANR	3941792	Identifier	acur		3941504	0					
ANR	3941793	AndExpression	anext && ! found		3941504	1		&&			
ANR	3941794	Identifier	anext		3941504	0					
ANR	3941795	UnaryOperationExpression	! found		3941504	1					
ANR	3941796	UnaryOperator	!		3941504	0					
ANR	3941797	Identifier	found		3941504	1					
ANR	3941798	CompoundStatement		42:4:1035:1070	3941504	1					
ANR	3941799	IdentifierDeclStatement	int space = HORIZONTAL_NODE_SPACING ;	862:4:22501:22536	3941504	0	True				
ANR	3941800	IdentifierDecl	space = HORIZONTAL_NODE_SPACING		3941504	0					
ANR	3941801	IdentifierDeclType	int		3941504	0					
ANR	3941802	Identifier	space		3941504	1					
ANR	3941803	AssignmentExpression	space = HORIZONTAL_NODE_SPACING		3941504	2		=			
ANR	3941804	Identifier	HORIZONTAL_NODE_SPACING		3941504	0					
ANR	3941805	Identifier	HORIZONTAL_NODE_SPACING		3941504	1					
ANR	3941806	IfStatement	if ( acur -> is_reversed && anext -> is_reversed )		3941504	1					
ANR	3941807	Condition	acur -> is_reversed && anext -> is_reversed	863:8:22546:22584	3941504	0	True				
ANR	3941808	AndExpression	acur -> is_reversed && anext -> is_reversed		3941504	0		&&			
ANR	3941809	PtrMemberAccess	acur -> is_reversed		3941504	0					
ANR	3941810	Identifier	acur		3941504	0					
ANR	3941811	Identifier	is_reversed		3941504	1					
ANR	3941812	PtrMemberAccess	anext -> is_reversed		3941504	1					
ANR	3941813	Identifier	anext		3941504	0					
ANR	3941814	Identifier	is_reversed		3941504	1					
ANR	3941815	CompoundStatement		43:49:1121:1121	3941504	1					
ANR	3941816	IfStatement	if ( ! acur -> is_reversed )		3941504	0					
ANR	3941817	Condition	! acur -> is_reversed	864:9:22598:22615	3941504	0	True				
ANR	3941818	UnaryOperationExpression	! acur -> is_reversed		3941504	0					
ANR	3941819	UnaryOperator	!		3941504	0					
ANR	3941820	PtrMemberAccess	acur -> is_reversed		3941504	1					
ANR	3941821	Identifier	acur		3941504	0					
ANR	3941822	Identifier	is_reversed		3941504	1					
ANR	3941823	CompoundStatement		44:29:1152:1152	3941504	1					
ANR	3941824	ExpressionStatement	res += acur -> w / 2	865:6:22626:22644	3941504	0	True				
ANR	3941825	AssignmentExpression	res += acur -> w / 2		3941504	0		+=			
ANR	3941826	Identifier	res		3941504	0					
ANR	3941827	MultiplicativeExpression	acur -> w / 2		3941504	1		/			
ANR	3941828	PtrMemberAccess	acur -> w		3941504	0					
ANR	3941829	Identifier	acur		3941504	0					
ANR	3941830	Identifier	w		3941504	1					
ANR	3941831	PrimaryExpression	2		3941504	1					
ANR	3941832	ElseStatement	else		3941504	0					
ANR	3941833	IfStatement	if ( ! anext -> is_reversed )		3941504	0					
ANR	3941834	Condition	! anext -> is_reversed	866:16:22662:22680	3941504	0	True				
ANR	3941835	UnaryOperationExpression	! anext -> is_reversed		3941504	0					
ANR	3941836	UnaryOperator	!		3941504	0					
ANR	3941837	PtrMemberAccess	anext -> is_reversed		3941504	1					
ANR	3941838	Identifier	anext		3941504	0					
ANR	3941839	Identifier	is_reversed		3941504	1					
ANR	3941840	CompoundStatement		46:37:1217:1217	3941504	1					
ANR	3941841	ExpressionStatement	res += anext -> w / 2	867:6:22691:22710	3941504	0	True				
ANR	3941842	AssignmentExpression	res += anext -> w / 2		3941504	0		+=			
ANR	3941843	Identifier	res		3941504	0					
ANR	3941844	MultiplicativeExpression	anext -> w / 2		3941504	1		/			
ANR	3941845	PtrMemberAccess	anext -> w		3941504	0					
ANR	3941846	Identifier	anext		3941504	0					
ANR	3941847	Identifier	w		3941504	1					
ANR	3941848	PrimaryExpression	2		3941504	1					
ANR	3941849	ExpressionStatement	res += 1	869:5:22724:22732	3941504	1	True				
ANR	3941850	AssignmentExpression	res += 1		3941504	0		+=			
ANR	3941851	Identifier	res		3941504	0					
ANR	3941852	PrimaryExpression	1		3941504	1					
ANR	3941853	ElseStatement	else		3941504	0					
ANR	3941854	CompoundStatement		50:11:1279:1279	3941504	0					
ANR	3941855	ExpressionStatement	res += acur -> w / 2 + anext -> w / 2 + space	871:5:22752:22793	3941504	0	True				
ANR	3941856	AssignmentExpression	res += acur -> w / 2 + anext -> w / 2 + space		3941504	0		+=			
ANR	3941857	Identifier	res		3941504	0					
ANR	3941858	AdditiveExpression	acur -> w / 2 + anext -> w / 2 + space		3941504	1		+			
ANR	3941859	MultiplicativeExpression	acur -> w / 2		3941504	0		/			
ANR	3941860	PtrMemberAccess	acur -> w		3941504	0					
ANR	3941861	Identifier	acur		3941504	0					
ANR	3941862	Identifier	w		3941504	1					
ANR	3941863	PrimaryExpression	2		3941504	1					
ANR	3941864	AdditiveExpression	anext -> w / 2 + space		3941504	1		+			
ANR	3941865	MultiplicativeExpression	anext -> w / 2		3941504	0		/			
ANR	3941866	PtrMemberAccess	anext -> w		3941504	0					
ANR	3941867	Identifier	anext		3941504	0					
ANR	3941868	Identifier	w		3941504	1					
ANR	3941869	PrimaryExpression	2		3941504	1					
ANR	3941870	Identifier	space		3941504	1					
ANR	3941871	ReturnStatement	return res ;	877:1:22815:22825	3941504	8	True				
ANR	3941872	Identifier	res		3941504	0					
ANR	3941873	ReturnType	static int		3941504	1					
ANR	3941874	Identifier	dist_nodes		3941504	2					
ANR	3941875	ParameterList	"const RAGraph * g , const RGraphNode * a , const RGraphNode * b"		3941504	3					
ANR	3941876	Parameter	const RAGraph * g	821:22:21405:21420	3941504	0	True				
ANR	3941877	ParameterType	const RAGraph *		3941504	0					
ANR	3941878	Identifier	g		3941504	1					
ANR	3941879	Parameter	const RGraphNode * a	821:40:21423:21441	3941504	1	True				
ANR	3941880	ParameterType	const RGraphNode *		3941504	0					
ANR	3941881	Identifier	a		3941504	1					
ANR	3941882	Parameter	const RGraphNode * b	821:61:21444:21462	3941504	2	True				
ANR	3941883	ParameterType	const RGraphNode *		3941504	0					
ANR	3941884	Identifier	b		3941504	1					
ANR	3941885	CFGEntryNode	ENTRY		3941504		True				
ANR	3941886	CFGExitNode	EXIT		3941504		True				
ANR	3941887	Symbol	old -> dist		3941504						
ANR	3941888	Symbol	anext -> is_reversed		3941504						
ANR	3941889	Symbol	aa -> pos_in_layer		3941504						
ANR	3941890	Symbol	HORIZONTAL_NODE_SPACING		3941504						
ANR	3941891	Symbol	* * aa		3941504						
ANR	3941892	Symbol	space		3941504						
ANR	3941893	Symbol	acur		3941504						
ANR	3941894	Symbol	d . to		3941504						
ANR	3941895	Symbol	acur -> w		3941504						
ANR	3941896	Symbol	acur -> is_reversed		3941504						
ANR	3941897	Symbol	aa		3941504						
ANR	3941898	Symbol	aa -> is_reversed		3941504						
ANR	3941899	Symbol	ab		3941504						
ANR	3941900	Symbol	res		3941504						
ANR	3941901	Symbol	ab -> layer		3941504						
ANR	3941902	Symbol	* * g		3941504						
ANR	3941903	Symbol	old		3941504						
ANR	3941904	Symbol	it		3941504						
ANR	3941905	Symbol	ab -> pos_in_layer		3941504						
ANR	3941906	Symbol	r_list_find		3941504						
ANR	3941907	Symbol	* * aa -> layer		3941504						
ANR	3941908	Symbol	* anext		3941504						
ANR	3941909	Symbol	d . from		3941504						
ANR	3941910	Symbol	g -> layers [ aa -> layer ] . nodes		3941504						
ANR	3941911	Symbol	true		3941504						
ANR	3941912	Symbol	aa -> layer		3941504						
ANR	3941913	Symbol	* g -> layers		3941504						
ANR	3941914	Symbol	* * * g		3941504						
ANR	3941915	Symbol	next		3941504						
ANR	3941916	Symbol	cur		3941504						
ANR	3941917	Symbol	* ab		3941504						
ANR	3941918	Symbol	* aa		3941504						
ANR	3941919	Symbol	g -> dists		3941504						
ANR	3941920	Symbol	* g -> layers [ aa -> layer ] . nodes		3941504						
ANR	3941921	Symbol	* old		3941504						
ANR	3941922	Symbol	found		3941504						
ANR	3941923	Symbol	r_list_iter_get_data		3941504						
ANR	3941924	Symbol	anext -> w		3941504						
ANR	3941925	Symbol	anext		3941504						
ANR	3941926	Symbol	a		3941504						
ANR	3941927	Symbol	b		3941504						
ANR	3941928	Symbol	get_anode		3941504						
ANR	3941929	Symbol	* aa -> layer		3941504						
ANR	3941930	Symbol	d		3941504						
ANR	3941931	Symbol	g		3941504						
ANR	3941932	Symbol	false		3941504						
ANR	3941933	Symbol	i		3941504						
ANR	3941934	Symbol	* acur		3941504						
ANR	3941935	Symbol	& d		3941504						
ANR	3941936	Symbol	* g		3941504						
ANR	3941937	Symbol	* i		3941504						
ANR	3941938	Symbol	find_dist		3941504						
ANR	3941939	Symbol	* * * aa		3941504						
ANR	3941940	Symbol	g -> layers		3941504						
ANR	3941941	Symbol	* * g -> layers		3941504						
ANR	3941942	Function	set_dist_nodes	881:0:22900:23525							
ANR	3941943	FunctionDef	"set_dist_nodes (const RAGraph * g , int l , int cur , int next)"		3941942	0					
ANR	3941944	CompoundStatement		881:71:22971:23525	3941942	0					
ANR	3941945	IdentifierDeclStatement	"struct dist_t * d , find_el ;"	882:1:22974:22999	3941942	0	True				
ANR	3941946	IdentifierDecl	* d		3941942	0					
ANR	3941947	IdentifierDeclType	struct dist_t *		3941942	0					
ANR	3941948	Identifier	d		3941942	1					
ANR	3941949	IdentifierDecl	find_el		3941942	1					
ANR	3941950	IdentifierDeclType	struct dist_t		3941942	0					
ANR	3941951	Identifier	find_el		3941942	1					
ANR	3941952	IdentifierDeclStatement	"const RGraphNode * vi , * vip ;"	883:1:23002:23028	3941942	1	True				
ANR	3941953	IdentifierDecl	* vi		3941942	0					
ANR	3941954	IdentifierDeclType	const RGraphNode *		3941942	0					
ANR	3941955	Identifier	vi		3941942	1					
ANR	3941956	IdentifierDecl	* vip		3941942	1					
ANR	3941957	IdentifierDeclType	const RGraphNode *		3941942	0					
ANR	3941958	Identifier	vip		3941942	1					
ANR	3941959	IdentifierDeclStatement	"const RANode * avi , * avip ;"	884:1:23031:23055	3941942	2	True				
ANR	3941960	IdentifierDecl	* avi		3941942	0					
ANR	3941961	IdentifierDeclType	const RANode *		3941942	0					
ANR	3941962	Identifier	avi		3941942	1					
ANR	3941963	IdentifierDecl	* avip		3941942	1					
ANR	3941964	IdentifierDeclType	const RANode *		3941942	0					
ANR	3941965	Identifier	avip		3941942	1					
ANR	3941966	IdentifierDeclStatement	RListIter * it ;	885:1:23058:23071	3941942	3	True				
ANR	3941967	IdentifierDecl	* it		3941942	0					
ANR	3941968	IdentifierDeclType	RListIter *		3941942	0					
ANR	3941969	Identifier	it		3941942	1					
ANR	3941970	IfStatement	if ( ! g -> dists )		3941942	4					
ANR	3941971	Condition	! g -> dists	887:5:23079:23087	3941942	0	True				
ANR	3941972	UnaryOperationExpression	! g -> dists		3941942	0					
ANR	3941973	UnaryOperator	!		3941942	0					
ANR	3941974	PtrMemberAccess	g -> dists		3941942	1					
ANR	3941975	Identifier	g		3941942	0					
ANR	3941976	Identifier	dists		3941942	1					
ANR	3941977	CompoundStatement		7:16:118:118	3941942	1					
ANR	3941978	ReturnStatement	return ;	888:2:23094:23100	3941942	0	True				
ANR	3941979	ExpressionStatement	vi = g -> layers [ l ] . nodes [ cur ]	890:1:23106:23134	3941942	5	True				
ANR	3941980	AssignmentExpression	vi = g -> layers [ l ] . nodes [ cur ]		3941942	0		=			
ANR	3941981	Identifier	vi		3941942	0					
ANR	3941982	ArrayIndexing	g -> layers [ l ] . nodes [ cur ]		3941942	1					
ANR	3941983	MemberAccess	g -> layers [ l ] . nodes		3941942	0					
ANR	3941984	ArrayIndexing	g -> layers [ l ]		3941942	0					
ANR	3941985	PtrMemberAccess	g -> layers		3941942	0					
ANR	3941986	Identifier	g		3941942	0					
ANR	3941987	Identifier	layers		3941942	1					
ANR	3941988	Identifier	l		3941942	1					
ANR	3941989	Identifier	nodes		3941942	1					
ANR	3941990	Identifier	cur		3941942	1					
ANR	3941991	ExpressionStatement	vip = g -> layers [ l ] . nodes [ next ]	891:1:23137:23167	3941942	6	True				
ANR	3941992	AssignmentExpression	vip = g -> layers [ l ] . nodes [ next ]		3941942	0		=			
ANR	3941993	Identifier	vip		3941942	0					
ANR	3941994	ArrayIndexing	g -> layers [ l ] . nodes [ next ]		3941942	1					
ANR	3941995	MemberAccess	g -> layers [ l ] . nodes		3941942	0					
ANR	3941996	ArrayIndexing	g -> layers [ l ]		3941942	0					
ANR	3941997	PtrMemberAccess	g -> layers		3941942	0					
ANR	3941998	Identifier	g		3941942	0					
ANR	3941999	Identifier	layers		3941942	1					
ANR	3942000	Identifier	l		3941942	1					
ANR	3942001	Identifier	nodes		3941942	1					
ANR	3942002	Identifier	next		3941942	1					
ANR	3942003	ExpressionStatement	avi = get_anode ( vi )	892:1:23170:23190	3941942	7	True				
ANR	3942004	AssignmentExpression	avi = get_anode ( vi )		3941942	0		=			
ANR	3942005	Identifier	avi		3941942	0					
ANR	3942006	CallExpression	get_anode ( vi )		3941942	1					
ANR	3942007	Callee	get_anode		3941942	0					
ANR	3942008	Identifier	get_anode		3941942	0					
ANR	3942009	ArgumentList	vi		3941942	1					
ANR	3942010	Argument	vi		3941942	0					
ANR	3942011	Identifier	vi		3941942	0					
ANR	3942012	ExpressionStatement	avip = get_anode ( vip )	893:1:23193:23215	3941942	8	True				
ANR	3942013	AssignmentExpression	avip = get_anode ( vip )		3941942	0		=			
ANR	3942014	Identifier	avip		3941942	0					
ANR	3942015	CallExpression	get_anode ( vip )		3941942	1					
ANR	3942016	Callee	get_anode		3941942	0					
ANR	3942017	Identifier	get_anode		3941942	0					
ANR	3942018	ArgumentList	vip		3941942	1					
ANR	3942019	Argument	vip		3941942	0					
ANR	3942020	Identifier	vip		3941942	0					
ANR	3942021	ExpressionStatement	find_el . from = vi	895:1:23219:23236	3941942	9	True				
ANR	3942022	AssignmentExpression	find_el . from = vi		3941942	0		=			
ANR	3942023	MemberAccess	find_el . from		3941942	0					
ANR	3942024	Identifier	find_el		3941942	0					
ANR	3942025	Identifier	from		3941942	1					
ANR	3942026	Identifier	vi		3941942	1					
ANR	3942027	ExpressionStatement	find_el . to = vip	896:1:23239:23255	3941942	10	True				
ANR	3942028	AssignmentExpression	find_el . to = vip		3941942	0		=			
ANR	3942029	MemberAccess	find_el . to		3941942	0					
ANR	3942030	Identifier	find_el		3941942	0					
ANR	3942031	Identifier	to		3941942	1					
ANR	3942032	Identifier	vip		3941942	1					
ANR	3942033	ExpressionStatement	"it = r_list_find ( g -> dists , & find_el , ( RListComparator ) find_dist )"	897:1:23258:23324	3941942	11	True				
ANR	3942034	AssignmentExpression	"it = r_list_find ( g -> dists , & find_el , ( RListComparator ) find_dist )"		3941942	0		=			
ANR	3942035	Identifier	it		3941942	0					
ANR	3942036	CallExpression	"r_list_find ( g -> dists , & find_el , ( RListComparator ) find_dist )"		3941942	1					
ANR	3942037	Callee	r_list_find		3941942	0					
ANR	3942038	Identifier	r_list_find		3941942	0					
ANR	3942039	ArgumentList	g -> dists		3941942	1					
ANR	3942040	Argument	g -> dists		3941942	0					
ANR	3942041	PtrMemberAccess	g -> dists		3941942	0					
ANR	3942042	Identifier	g		3941942	0					
ANR	3942043	Identifier	dists		3941942	1					
ANR	3942044	Argument	& find_el		3941942	1					
ANR	3942045	UnaryOperationExpression	& find_el		3941942	0					
ANR	3942046	UnaryOperator	&		3941942	0					
ANR	3942047	Identifier	find_el		3941942	1					
ANR	3942048	Argument	( RListComparator ) find_dist		3941942	2					
ANR	3942049	CastExpression	( RListComparator ) find_dist		3941942	0					
ANR	3942050	CastTarget	RListComparator		3941942	0					
ANR	3942051	Identifier	find_dist		3941942	1					
ANR	3942052	Statement	d	898:1:23327:23327	3941942	12	True				
ANR	3942053	Statement	=	898:3:23329:23329	3941942	13	True				
ANR	3942054	Statement	it	898:5:23331:23332	3941942	14	True				
ANR	3942055	Statement	?	898:7:23333:23333	3941942	15	True				
ANR	3942056	Statement	(	898:9:23335:23335	3941942	16	True				
ANR	3942057	Statement	struct	898:10:23336:23341	3941942	17	True				
ANR	3942058	Statement	dist_t	898:17:23343:23348	3941942	18	True				
ANR	3942059	Statement	*	898:24:23350:23350	3941942	19	True				
ANR	3942060	Statement	)	898:25:23351:23351	3941942	20	True				
ANR	3942061	Statement	r_list_iter_get_data	898:27:23353:23372	3941942	21	True				
ANR	3942062	Statement	(	898:48:23374:23374	3941942	22	True				
ANR	3942063	Statement	it	898:49:23375:23376	3941942	23	True				
ANR	3942064	Statement	)	898:51:23377:23377	3941942	24	True				
ANR	3942065	Statement	:	898:52:23378:23378	3941942	25	True				
ANR	3942066	Statement	R_NEW0	898:54:23380:23385	3941942	26	True				
ANR	3942067	Statement	(	898:61:23387:23387	3941942	27	True				
ANR	3942068	Statement	struct	898:62:23388:23393	3941942	28	True				
ANR	3942069	Statement	dist_t	898:69:23395:23400	3941942	29	True				
ANR	3942070	Statement	)	898:75:23401:23401	3941942	30	True				
ANR	3942071	ExpressionStatement		898:76:23402:23402	3941942	31	True				
ANR	3942072	ExpressionStatement	d -> from = vi	900:1:23406:23418	3941942	32	True				
ANR	3942073	AssignmentExpression	d -> from = vi		3941942	0		=			
ANR	3942074	PtrMemberAccess	d -> from		3941942	0					
ANR	3942075	Identifier	d		3941942	0					
ANR	3942076	Identifier	from		3941942	1					
ANR	3942077	Identifier	vi		3941942	1					
ANR	3942078	ExpressionStatement	d -> to = vip	901:1:23421:23432	3941942	33	True				
ANR	3942079	AssignmentExpression	d -> to = vip		3941942	0		=			
ANR	3942080	PtrMemberAccess	d -> to		3941942	0					
ANR	3942081	Identifier	d		3941942	0					
ANR	3942082	Identifier	to		3941942	1					
ANR	3942083	Identifier	vip		3941942	1					
ANR	3942084	ExpressionStatement	d -> dist = ( avip && avi ) ? avip -> x - avi -> x : 0	902:1:23435:23479	3941942	34	True				
ANR	3942085	AssignmentExpression	d -> dist = ( avip && avi ) ? avip -> x - avi -> x : 0		3941942	0		=			
ANR	3942086	PtrMemberAccess	d -> dist		3941942	0					
ANR	3942087	Identifier	d		3941942	0					
ANR	3942088	Identifier	dist		3941942	1					
ANR	3942089	ConditionalExpression	( avip && avi ) ? avip -> x - avi -> x : 0		3941942	1					
ANR	3942090	Condition	avip && avi		3941942	0					
ANR	3942091	AndExpression	avip && avi		3941942	0		&&			
ANR	3942092	Identifier	avip		3941942	0					
ANR	3942093	Identifier	avi		3941942	1					
ANR	3942094	AdditiveExpression	avip -> x - avi -> x		3941942	1		-			
ANR	3942095	PtrMemberAccess	avip -> x		3941942	0					
ANR	3942096	Identifier	avip		3941942	0					
ANR	3942097	Identifier	x		3941942	1					
ANR	3942098	PtrMemberAccess	avi -> x		3941942	1					
ANR	3942099	Identifier	avi		3941942	0					
ANR	3942100	Identifier	x		3941942	1					
ANR	3942101	PrimaryExpression	0		3941942	2					
ANR	3942102	IfStatement	if ( ! it )		3941942	35					
ANR	3942103	Condition	! it	903:5:23486:23488	3941942	0	True				
ANR	3942104	UnaryOperationExpression	! it		3941942	0					
ANR	3942105	UnaryOperator	!		3941942	0					
ANR	3942106	Identifier	it		3941942	1					
ANR	3942107	CompoundStatement		23:10:519:519	3941942	1					
ANR	3942108	ExpressionStatement	"r_list_push ( g -> dists , d )"	904:2:23495:23520	3941942	0	True				
ANR	3942109	CallExpression	"r_list_push ( g -> dists , d )"		3941942	0					
ANR	3942110	Callee	r_list_push		3941942	0					
ANR	3942111	Identifier	r_list_push		3941942	0					
ANR	3942112	ArgumentList	g -> dists		3941942	1					
ANR	3942113	Argument	g -> dists		3941942	0					
ANR	3942114	PtrMemberAccess	g -> dists		3941942	0					
ANR	3942115	Identifier	g		3941942	0					
ANR	3942116	Identifier	dists		3941942	1					
ANR	3942117	Argument	d		3941942	1					
ANR	3942118	Identifier	d		3941942	0					
ANR	3942119	ReturnType	static void		3941942	1					
ANR	3942120	Identifier	set_dist_nodes		3941942	2					
ANR	3942121	ParameterList	"const RAGraph * g , int l , int cur , int next"		3941942	3					
ANR	3942122	Parameter	const RAGraph * g	881:27:22927:22942	3941942	0	True				
ANR	3942123	ParameterType	const RAGraph *		3941942	0					
ANR	3942124	Identifier	g		3941942	1					
ANR	3942125	Parameter	int l	881:45:22945:22949	3941942	1	True				
ANR	3942126	ParameterType	int		3941942	0					
ANR	3942127	Identifier	l		3941942	1					
ANR	3942128	Parameter	int cur	881:52:22952:22958	3941942	2	True				
ANR	3942129	ParameterType	int		3941942	0					
ANR	3942130	Identifier	cur		3941942	1					
ANR	3942131	Parameter	int next	881:61:22961:22968	3941942	3	True				
ANR	3942132	ParameterType	int		3941942	0					
ANR	3942133	Identifier	next		3941942	1					
ANR	3942134	CFGEntryNode	ENTRY		3941942		True				
ANR	3942135	CFGExitNode	EXIT		3941942		True				
ANR	3942136	Symbol	next		3941942						
ANR	3942137	Symbol	& find_el		3941942						
ANR	3942138	Symbol	cur		3941942						
ANR	3942139	Symbol	* avi		3941942						
ANR	3942140	Symbol	find_el		3941942						
ANR	3942141	Symbol	g -> dists		3941942						
ANR	3942142	Symbol	* g -> layers [ l ] . nodes		3941942						
ANR	3942143	Symbol	* next		3941942						
ANR	3942144	Symbol	* avip		3941942						
ANR	3942145	Symbol	find_el . from		3941942						
ANR	3942146	Symbol	avip -> x		3941942						
ANR	3942147	Symbol	avi		3941942						
ANR	3942148	Symbol	* cur		3941942						
ANR	3942149	Symbol	vip		3941942						
ANR	3942150	Symbol	* * l		3941942						
ANR	3942151	Symbol	get_anode		3941942						
ANR	3942152	Symbol	avi -> x		3941942						
ANR	3942153	Symbol	d		3941942						
ANR	3942154	Symbol	* * g		3941942						
ANR	3942155	Symbol	d -> from		3941942						
ANR	3942156	Symbol	g		3941942						
ANR	3942157	Symbol	find_el . to		3941942						
ANR	3942158	Symbol	it		3941942						
ANR	3942159	Symbol	l		3941942						
ANR	3942160	Symbol	g -> layers [ l ] . nodes		3941942						
ANR	3942161	Symbol	* d		3941942						
ANR	3942162	Symbol	d -> dist		3941942						
ANR	3942163	Symbol	d -> to		3941942						
ANR	3942164	Symbol	avip		3941942						
ANR	3942165	Symbol	* g		3941942						
ANR	3942166	Symbol	r_list_find		3941942						
ANR	3942167	Symbol	vi		3941942						
ANR	3942168	Symbol	* l		3941942						
ANR	3942169	Symbol	find_dist		3941942						
ANR	3942170	Symbol	* g -> layers		3941942						
ANR	3942171	Symbol	* * * g		3941942						
ANR	3942172	Symbol	g -> layers		3941942						
ANR	3942173	Symbol	* * g -> layers		3941942						
ANR	3942174	Function	is_valid_pos	908:0:23528:23636							
ANR	3942175	FunctionDef	"is_valid_pos (const RAGraph * g , int l , int pos)"		3942174	0					
ANR	3942176	CompoundStatement		908:58:23586:23636	3942174	0					
ANR	3942177	ReturnStatement	return pos >= 0 && pos < g -> layers [ l ] . n_nodes ;	909:1:23589:23634	3942174	0	True				
ANR	3942178	AndExpression	pos >= 0 && pos < g -> layers [ l ] . n_nodes		3942174	0		&&			
ANR	3942179	RelationalExpression	pos >= 0		3942174	0		>=			
ANR	3942180	Identifier	pos		3942174	0					
ANR	3942181	PrimaryExpression	0		3942174	1					
ANR	3942182	RelationalExpression	pos < g -> layers [ l ] . n_nodes		3942174	1		<			
ANR	3942183	Identifier	pos		3942174	0					
ANR	3942184	MemberAccess	g -> layers [ l ] . n_nodes		3942174	1					
ANR	3942185	ArrayIndexing	g -> layers [ l ]		3942174	0					
ANR	3942186	PtrMemberAccess	g -> layers		3942174	0					
ANR	3942187	Identifier	g		3942174	0					
ANR	3942188	Identifier	layers		3942174	1					
ANR	3942189	Identifier	l		3942174	1					
ANR	3942190	Identifier	n_nodes		3942174	1					
ANR	3942191	ReturnType	static int		3942174	1					
ANR	3942192	Identifier	is_valid_pos		3942174	2					
ANR	3942193	ParameterList	"const RAGraph * g , int l , int pos"		3942174	3					
ANR	3942194	Parameter	const RAGraph * g	908:24:23552:23567	3942174	0	True				
ANR	3942195	ParameterType	const RAGraph *		3942174	0					
ANR	3942196	Identifier	g		3942174	1					
ANR	3942197	Parameter	int l	908:42:23570:23574	3942174	1	True				
ANR	3942198	ParameterType	int		3942174	0					
ANR	3942199	Identifier	l		3942174	1					
ANR	3942200	Parameter	int pos	908:49:23577:23583	3942174	2	True				
ANR	3942201	ParameterType	int		3942174	0					
ANR	3942202	Identifier	pos		3942174	1					
ANR	3942203	CFGEntryNode	ENTRY		3942174		True				
ANR	3942204	CFGExitNode	EXIT		3942174		True				
ANR	3942205	Symbol	* g		3942174						
ANR	3942206	Symbol	* * g		3942174						
ANR	3942207	Symbol	pos		3942174						
ANR	3942208	Symbol	* l		3942174						
ANR	3942209	Symbol	g		3942174						
ANR	3942210	Symbol	* g -> layers		3942174						
ANR	3942211	Symbol	l		3942174						
ANR	3942212	Symbol	g -> layers		3942174						
ANR	3942213	Symbol	g -> layers [ l ] . n_nodes		3942174						
ANR	3942214	Function	compute_vertical_nodes	916:0:23848:24605							
ANR	3942215	FunctionDef	compute_vertical_nodes (const RAGraph * g)		3942214	0					
ANR	3942216	CompoundStatement		916:53:23901:24605	3942214	0					
ANR	3942217	IdentifierDeclStatement	Sdb * res = sdb_new0 ( ) ;	917:1:23904:23926	3942214	0	True				
ANR	3942218	IdentifierDecl	* res = sdb_new0 ( )		3942214	0					
ANR	3942219	IdentifierDeclType	Sdb *		3942214	0					
ANR	3942220	Identifier	res		3942214	1					
ANR	3942221	AssignmentExpression	* res = sdb_new0 ( )		3942214	2		=			
ANR	3942222	Identifier	res		3942214	0					
ANR	3942223	CallExpression	sdb_new0 ( )		3942214	1					
ANR	3942224	Callee	sdb_new0		3942214	0					
ANR	3942225	Identifier	sdb_new0		3942214	0					
ANR	3942226	ArgumentList			3942214	1					
ANR	3942227	IdentifierDeclStatement	"int i , j ;"	918:1:23929:23937	3942214	1	True				
ANR	3942228	IdentifierDecl	i		3942214	0					
ANR	3942229	IdentifierDeclType	int		3942214	0					
ANR	3942230	Identifier	i		3942214	1					
ANR	3942231	IdentifierDecl	j		3942214	1					
ANR	3942232	IdentifierDeclType	int		3942214	0					
ANR	3942233	Identifier	j		3942214	1					
ANR	3942234	ForStatement	for ( i = 0 ; i < g -> n_layers ; ++ i )		3942214	2					
ANR	3942235	ForInit	i = 0 ;	920:6:23946:23951	3942214	0	True				
ANR	3942236	AssignmentExpression	i = 0		3942214	0		=			
ANR	3942237	Identifier	i		3942214	0					
ANR	3942238	PrimaryExpression	0		3942214	1					
ANR	3942239	Condition	i < g -> n_layers	920:13:23953:23967	3942214	1	True				
ANR	3942240	RelationalExpression	i < g -> n_layers		3942214	0		<			
ANR	3942241	Identifier	i		3942214	0					
ANR	3942242	PtrMemberAccess	g -> n_layers		3942214	1					
ANR	3942243	Identifier	g		3942214	0					
ANR	3942244	Identifier	n_layers		3942214	1					
ANR	3942245	UnaryExpression	++ i	920:30:23970:23972	3942214	2	True				
ANR	3942246	IncDec	++		3942214	0					
ANR	3942247	Identifier	i		3942214	1					
ANR	3942248	CompoundStatement		5:35:73:73	3942214	3					
ANR	3942249	ForStatement	for ( j = 0 ; j < g -> layers [ i ] . n_nodes ; ++ j )		3942214	0					
ANR	3942250	ForInit	j = 0 ;	921:7:23984:23989	3942214	0	True				
ANR	3942251	AssignmentExpression	j = 0		3942214	0		=			
ANR	3942252	Identifier	j		3942214	0					
ANR	3942253	PrimaryExpression	0		3942214	1					
ANR	3942254	Condition	j < g -> layers [ i ] . n_nodes	921:14:23991:24014	3942214	1	True				
ANR	3942255	RelationalExpression	j < g -> layers [ i ] . n_nodes		3942214	0		<			
ANR	3942256	Identifier	j		3942214	0					
ANR	3942257	MemberAccess	g -> layers [ i ] . n_nodes		3942214	1					
ANR	3942258	ArrayIndexing	g -> layers [ i ]		3942214	0					
ANR	3942259	PtrMemberAccess	g -> layers		3942214	0					
ANR	3942260	Identifier	g		3942214	0					
ANR	3942261	Identifier	layers		3942214	1					
ANR	3942262	Identifier	i		3942214	1					
ANR	3942263	Identifier	n_nodes		3942214	1					
ANR	3942264	UnaryExpression	++ j	921:40:24017:24019	3942214	2	True				
ANR	3942265	IncDec	++		3942214	0					
ANR	3942266	Identifier	j		3942214	1					
ANR	3942267	CompoundStatement		9:3:215:248	3942214	3					
ANR	3942268	IdentifierDeclStatement	RGraphNode * gn = g -> layers [ i ] . nodes [ j ] ;	922:3:24027:24065	3942214	0	True				
ANR	3942269	IdentifierDecl	* gn = g -> layers [ i ] . nodes [ j ]		3942214	0					
ANR	3942270	IdentifierDeclType	RGraphNode *		3942214	0					
ANR	3942271	Identifier	gn		3942214	1					
ANR	3942272	AssignmentExpression	* gn = g -> layers [ i ] . nodes [ j ]		3942214	2		=			
ANR	3942273	Identifier	gn		3942214	0					
ANR	3942274	ArrayIndexing	g -> layers [ i ] . nodes [ j ]		3942214	1					
ANR	3942275	MemberAccess	g -> layers [ i ] . nodes		3942214	0					
ANR	3942276	ArrayIndexing	g -> layers [ i ]		3942214	0					
ANR	3942277	PtrMemberAccess	g -> layers		3942214	0					
ANR	3942278	Identifier	g		3942214	0					
ANR	3942279	Identifier	layers		3942214	1					
ANR	3942280	Identifier	i		3942214	1					
ANR	3942281	Identifier	nodes		3942214	1					
ANR	3942282	Identifier	j		3942214	1					
ANR	3942283	IdentifierDeclStatement	"const RList * Ln = hash_get_rlist ( res , gn ) ;"	923:3:24070:24112	3942214	1	True				
ANR	3942284	IdentifierDecl	"* Ln = hash_get_rlist ( res , gn )"		3942214	0					
ANR	3942285	IdentifierDeclType	const RList *		3942214	0					
ANR	3942286	Identifier	Ln		3942214	1					
ANR	3942287	AssignmentExpression	"* Ln = hash_get_rlist ( res , gn )"		3942214	2		=			
ANR	3942288	Identifier	Ln		3942214	0					
ANR	3942289	CallExpression	"hash_get_rlist ( res , gn )"		3942214	1					
ANR	3942290	Callee	hash_get_rlist		3942214	0					
ANR	3942291	Identifier	hash_get_rlist		3942214	0					
ANR	3942292	ArgumentList	res		3942214	1					
ANR	3942293	Argument	res		3942214	0					
ANR	3942294	Identifier	res		3942214	0					
ANR	3942295	Argument	gn		3942214	1					
ANR	3942296	Identifier	gn		3942214	0					
ANR	3942297	IdentifierDeclStatement	const RANode * an = get_anode ( gn ) ;	924:3:24117:24150	3942214	2	True				
ANR	3942298	IdentifierDecl	* an = get_anode ( gn )		3942214	0					
ANR	3942299	IdentifierDeclType	const RANode *		3942214	0					
ANR	3942300	Identifier	an		3942214	1					
ANR	3942301	AssignmentExpression	* an = get_anode ( gn )		3942214	2		=			
ANR	3942302	Identifier	an		3942214	0					
ANR	3942303	CallExpression	get_anode ( gn )		3942214	1					
ANR	3942304	Callee	get_anode		3942214	0					
ANR	3942305	Identifier	get_anode		3942214	0					
ANR	3942306	ArgumentList	gn		3942214	1					
ANR	3942307	Argument	gn		3942214	0					
ANR	3942308	Identifier	gn		3942214	0					
ANR	3942309	IfStatement	if ( ! Ln )		3942214	3					
ANR	3942310	Condition	! Ln	926:7:24160:24162	3942214	0	True				
ANR	3942311	UnaryOperationExpression	! Ln		3942214	0					
ANR	3942312	UnaryOperator	!		3942214	0					
ANR	3942313	Identifier	Ln		3942214	1					
ANR	3942314	CompoundStatement		12:4:269:296	3942214	1					
ANR	3942315	IdentifierDeclStatement	RList * vert = r_list_new ( ) ;	927:4:24171:24198	3942214	0	True				
ANR	3942316	IdentifierDecl	* vert = r_list_new ( )		3942214	0					
ANR	3942317	IdentifierDeclType	RList *		3942214	0					
ANR	3942318	Identifier	vert		3942214	1					
ANR	3942319	AssignmentExpression	* vert = r_list_new ( )		3942214	2		=			
ANR	3942320	Identifier	vert		3942214	0					
ANR	3942321	CallExpression	r_list_new ( )		3942214	1					
ANR	3942322	Callee	r_list_new		3942214	0					
ANR	3942323	Identifier	r_list_new		3942214	0					
ANR	3942324	ArgumentList			3942214	1					
ANR	3942325	ExpressionStatement	"hash_set ( res , gn , vert )"	928:4:24204:24228	3942214	1	True				
ANR	3942326	CallExpression	"hash_set ( res , gn , vert )"		3942214	0					
ANR	3942327	Callee	hash_set		3942214	0					
ANR	3942328	Identifier	hash_set		3942214	0					
ANR	3942329	ArgumentList	res		3942214	1					
ANR	3942330	Argument	res		3942214	0					
ANR	3942331	Identifier	res		3942214	0					
ANR	3942332	Argument	gn		3942214	1					
ANR	3942333	Identifier	gn		3942214	0					
ANR	3942334	Argument	vert		3942214	2					
ANR	3942335	Identifier	vert		3942214	0					
ANR	3942336	IfStatement	if ( an -> is_dummy )		3942214	2					
ANR	3942337	Condition	an -> is_dummy	929:8:24238:24249	3942214	0	True				
ANR	3942338	PtrMemberAccess	an -> is_dummy		3942214	0					
ANR	3942339	Identifier	an		3942214	0					
ANR	3942340	Identifier	is_dummy		3942214	1					
ANR	3942341	CompoundStatement		16:5:385:423	3942214	1					
ANR	3942342	IdentifierDeclStatement	RGraphNode * next = gn ;	930:5:24259:24280	3942214	0	True				
ANR	3942343	IdentifierDecl	* next = gn		3942214	0					
ANR	3942344	IdentifierDeclType	RGraphNode *		3942214	0					
ANR	3942345	Identifier	next		3942214	1					
ANR	3942346	AssignmentExpression	* next = gn		3942214	2		=			
ANR	3942347	Identifier	gn		3942214	0					
ANR	3942348	Identifier	gn		3942214	1					
ANR	3942349	IdentifierDeclStatement	const RANode * anext = get_anode ( next ) ;	931:5:24287:24325	3942214	1	True				
ANR	3942350	IdentifierDecl	* anext = get_anode ( next )		3942214	0					
ANR	3942351	IdentifierDeclType	const RANode *		3942214	0					
ANR	3942352	Identifier	anext		3942214	1					
ANR	3942353	AssignmentExpression	* anext = get_anode ( next )		3942214	2		=			
ANR	3942354	Identifier	anext		3942214	0					
ANR	3942355	CallExpression	get_anode ( next )		3942214	1					
ANR	3942356	Callee	get_anode		3942214	0					
ANR	3942357	Identifier	get_anode		3942214	0					
ANR	3942358	ArgumentList	next		3942214	1					
ANR	3942359	Argument	next		3942214	0					
ANR	3942360	Identifier	next		3942214	0					
ANR	3942361	WhileStatement	while ( anext -> is_dummy )		3942214	2					
ANR	3942362	Condition	anext -> is_dummy	933:12:24340:24354	3942214	0	True				
ANR	3942363	PtrMemberAccess	anext -> is_dummy		3942214	0					
ANR	3942364	Identifier	anext		3942214	0					
ANR	3942365	Identifier	is_dummy		3942214	1					
ANR	3942366	CompoundStatement		18:29:455:455	3942214	1					
ANR	3942367	ExpressionStatement	"r_list_append ( vert , next )"	934:6:24365:24391	3942214	0	True				
ANR	3942368	CallExpression	"r_list_append ( vert , next )"		3942214	0					
ANR	3942369	Callee	r_list_append		3942214	0					
ANR	3942370	Identifier	r_list_append		3942214	0					
ANR	3942371	ArgumentList	vert		3942214	1					
ANR	3942372	Argument	vert		3942214	0					
ANR	3942373	Identifier	vert		3942214	0					
ANR	3942374	Argument	next		3942214	1					
ANR	3942375	Identifier	next		3942214	0					
ANR	3942376	ExpressionStatement	"next = r_graph_nth_neighbour ( g -> graph , next , 0 )"	935:6:24399:24447	3942214	1	True				
ANR	3942377	AssignmentExpression	"next = r_graph_nth_neighbour ( g -> graph , next , 0 )"		3942214	0		=			
ANR	3942378	Identifier	next		3942214	0					
ANR	3942379	CallExpression	"r_graph_nth_neighbour ( g -> graph , next , 0 )"		3942214	1					
ANR	3942380	Callee	r_graph_nth_neighbour		3942214	0					
ANR	3942381	Identifier	r_graph_nth_neighbour		3942214	0					
ANR	3942382	ArgumentList	g -> graph		3942214	1					
ANR	3942383	Argument	g -> graph		3942214	0					
ANR	3942384	PtrMemberAccess	g -> graph		3942214	0					
ANR	3942385	Identifier	g		3942214	0					
ANR	3942386	Identifier	graph		3942214	1					
ANR	3942387	Argument	next		3942214	1					
ANR	3942388	Identifier	next		3942214	0					
ANR	3942389	Argument	0		3942214	2					
ANR	3942390	PrimaryExpression	0		3942214	0					
ANR	3942391	IfStatement	if ( ! next )		3942214	2					
ANR	3942392	Condition	! next	936:10:24459:24463	3942214	0	True				
ANR	3942393	UnaryOperationExpression	! next		3942214	0					
ANR	3942394	UnaryOperator	!		3942214	0					
ANR	3942395	Identifier	next		3942214	1					
ANR	3942396	CompoundStatement		21:17:564:564	3942214	1					
ANR	3942397	BreakStatement	break ;	937:7:24475:24480	3942214	0	True				
ANR	3942398	ExpressionStatement	anext = get_anode ( next )	939:6:24496:24520	3942214	3	True				
ANR	3942399	AssignmentExpression	anext = get_anode ( next )		3942214	0		=			
ANR	3942400	Identifier	anext		3942214	0					
ANR	3942401	CallExpression	get_anode ( next )		3942214	1					
ANR	3942402	Callee	get_anode		3942214	0					
ANR	3942403	Identifier	get_anode		3942214	0					
ANR	3942404	ArgumentList	next		3942214	1					
ANR	3942405	Argument	next		3942214	0					
ANR	3942406	Identifier	next		3942214	0					
ANR	3942407	ElseStatement	else		3942214	0					
ANR	3942408	CompoundStatement		26:11:638:638	3942214	0					
ANR	3942409	ExpressionStatement	"r_list_append ( vert , gn )"	942:5:24547:24571	3942214	0	True				
ANR	3942410	CallExpression	"r_list_append ( vert , gn )"		3942214	0					
ANR	3942411	Callee	r_list_append		3942214	0					
ANR	3942412	Identifier	r_list_append		3942214	0					
ANR	3942413	ArgumentList	vert		3942214	1					
ANR	3942414	Argument	vert		3942214	0					
ANR	3942415	Identifier	vert		3942214	0					
ANR	3942416	Argument	gn		3942214	1					
ANR	3942417	Identifier	gn		3942214	0					
ANR	3942418	ReturnStatement	return res ;	948:1:24593:24603	3942214	3	True				
ANR	3942419	Identifier	res		3942214	0					
ANR	3942420	ReturnType	static Sdb *		3942214	1					
ANR	3942421	Identifier	compute_vertical_nodes		3942214	2					
ANR	3942422	ParameterList	const RAGraph * g		3942214	3					
ANR	3942423	Parameter	const RAGraph * g	916:35:23883:23898	3942214	0	True				
ANR	3942424	ParameterType	const RAGraph *		3942214	0					
ANR	3942425	Identifier	g		3942214	1					
ANR	3942426	CFGEntryNode	ENTRY		3942214		True				
ANR	3942427	CFGExitNode	EXIT		3942214		True				
ANR	3942428	Symbol	next		3942214						
ANR	3942429	Symbol	vert		3942214						
ANR	3942430	Symbol	hash_get_rlist		3942214						
ANR	3942431	Symbol	g -> n_layers		3942214						
ANR	3942432	Symbol	g -> layers [ i ] . nodes		3942214						
ANR	3942433	Symbol	g -> graph		3942214						
ANR	3942434	Symbol	anext -> is_dummy		3942214						
ANR	3942435	Symbol	* g -> layers [ i ] . nodes		3942214						
ANR	3942436	Symbol	an -> is_dummy		3942214						
ANR	3942437	Symbol	anext		3942214						
ANR	3942438	Symbol	r_graph_nth_neighbour		3942214						
ANR	3942439	Symbol	res		3942214						
ANR	3942440	Symbol	sdb_new0		3942214						
ANR	3942441	Symbol	* * i		3942214						
ANR	3942442	Symbol	Ln		3942214						
ANR	3942443	Symbol	get_anode		3942214						
ANR	3942444	Symbol	* * g		3942214						
ANR	3942445	Symbol	g		3942214						
ANR	3942446	Symbol	gn		3942214						
ANR	3942447	Symbol	i		3942214						
ANR	3942448	Symbol	j		3942214						
ANR	3942449	Symbol	an		3942214						
ANR	3942450	Symbol	* an		3942214						
ANR	3942451	Symbol	* g		3942214						
ANR	3942452	Symbol	* i		3942214						
ANR	3942453	Symbol	* j		3942214						
ANR	3942454	Symbol	* anext		3942214						
ANR	3942455	Symbol	* g -> layers		3942214						
ANR	3942456	Symbol	* * * g		3942214						
ANR	3942457	Symbol	g -> layers [ i ] . n_nodes		3942214						
ANR	3942458	Symbol	g -> layers		3942214						
ANR	3942459	Symbol	* * g -> layers		3942214						
ANR	3942460	Symbol	r_list_new		3942214						
ANR	3942461	Function	compute_classes	956:0:24830:25754							
ANR	3942462	FunctionDef	"compute_classes (const RAGraph * g , Sdb * v_nodes , int is_left , int * n_classes)"		3942461	0					
ANR	3942463	CompoundStatement		956:92:24922:25754	3942461	0					
ANR	3942464	IdentifierDeclStatement	"int i , j , c ;"	957:1:24925:24936	3942461	0	True				
ANR	3942465	IdentifierDecl	i		3942461	0					
ANR	3942466	IdentifierDeclType	int		3942461	0					
ANR	3942467	Identifier	i		3942461	1					
ANR	3942468	IdentifierDecl	j		3942461	1					
ANR	3942469	IdentifierDeclType	int		3942461	0					
ANR	3942470	Identifier	j		3942461	1					
ANR	3942471	IdentifierDecl	c		3942461	2					
ANR	3942472	IdentifierDeclType	int		3942461	0					
ANR	3942473	Identifier	c		3942461	1					
ANR	3942474	Statement	RList	958:1:24939:24943	3942461	1	True				
ANR	3942475	Statement	*	958:7:24945:24945	3942461	2	True				
ANR	3942476	Statement	*	958:8:24946:24946	3942461	3	True				
ANR	3942477	Statement	res	958:9:24947:24949	3942461	4	True				
ANR	3942478	Statement	=	958:13:24951:24951	3942461	5	True				
ANR	3942479	Statement	R_NEWS0	958:15:24953:24959	3942461	6	True				
ANR	3942480	Statement	(	958:23:24961:24961	3942461	7	True				
ANR	3942481	Statement	RList	958:24:24962:24966	3942461	8	True				
ANR	3942482	Statement	*	958:30:24968:24968	3942461	9	True				
ANR	3942483	Statement	","	958:31:24969:24969	3942461	10	True				
ANR	3942484	Statement	g	958:33:24971:24971	3942461	11	True				
ANR	3942485	Statement	->	958:34:24972:24973	3942461	12	True				
ANR	3942486	Statement	n_layers	958:36:24974:24981	3942461	13	True				
ANR	3942487	Statement	)	958:44:24982:24982	3942461	14	True				
ANR	3942488	ExpressionStatement		958:45:24983:24983	3942461	15	True				
ANR	3942489	IdentifierDeclStatement	RGraphNode * gn ;	959:1:24986:25000	3942461	16	True				
ANR	3942490	IdentifierDecl	* gn		3942461	0					
ANR	3942491	IdentifierDeclType	RGraphNode *		3942461	0					
ANR	3942492	Identifier	gn		3942461	1					
ANR	3942493	IdentifierDeclStatement	const RListIter * it ;	960:1:25003:25022	3942461	17	True				
ANR	3942494	IdentifierDecl	* it		3942461	0					
ANR	3942495	IdentifierDeclType	const RListIter *		3942461	0					
ANR	3942496	Identifier	it		3942461	1					
ANR	3942497	IdentifierDeclStatement	RANode * n ;	961:1:25025:25034	3942461	18	True				
ANR	3942498	IdentifierDecl	* n		3942461	0					
ANR	3942499	IdentifierDeclType	RANode *		3942461	0					
ANR	3942500	Identifier	n		3942461	1					
ANR	3942501	Statement	graph_foreach_anode	963:1:25038:25056	3942461	19	True				
ANR	3942502	Statement	(	963:21:25058:25058	3942461	20	True				
ANR	3942503	Statement	r_graph_get_nodes	963:22:25059:25075	3942461	21	True				
ANR	3942504	Statement	(	963:40:25077:25077	3942461	22	True				
ANR	3942505	Statement	g	963:41:25078:25078	3942461	23	True				
ANR	3942506	Statement	->	963:42:25079:25080	3942461	24	True				
ANR	3942507	Statement	graph	963:44:25081:25085	3942461	25	True				
ANR	3942508	Statement	)	963:49:25086:25086	3942461	26	True				
ANR	3942509	Statement	","	963:50:25087:25087	3942461	27	True				
ANR	3942510	Statement	it	963:52:25089:25090	3942461	28	True				
ANR	3942511	Statement	","	963:54:25091:25091	3942461	29	True				
ANR	3942512	Statement	gn	963:56:25093:25094	3942461	30	True				
ANR	3942513	Statement	","	963:58:25095:25095	3942461	31	True				
ANR	3942514	Statement	n	963:60:25097:25097	3942461	32	True				
ANR	3942515	Statement	)	963:61:25098:25098	3942461	33	True				
ANR	3942516	CompoundStatement		8:63:177:177	3942461	34					
ANR	3942517	ExpressionStatement	n -> klass = - 1	964:2:25104:25117	3942461	0	True				
ANR	3942518	AssignmentExpression	n -> klass = - 1		3942461	0		=			
ANR	3942519	PtrMemberAccess	n -> klass		3942461	0					
ANR	3942520	Identifier	n		3942461	0					
ANR	3942521	Identifier	klass		3942461	1					
ANR	3942522	UnaryOperationExpression	- 1		3942461	1					
ANR	3942523	UnaryOperator	-		3942461	0					
ANR	3942524	PrimaryExpression	1		3942461	1					
ANR	3942525	ForStatement	for ( i = 0 ; i < g -> n_layers ; ++ i )		3942461	35					
ANR	3942526	ForInit	i = 0 ;	967:6:25129:25134	3942461	0	True				
ANR	3942527	AssignmentExpression	i = 0		3942461	0		=			
ANR	3942528	Identifier	i		3942461	0					
ANR	3942529	PrimaryExpression	0		3942461	1					
ANR	3942530	Condition	i < g -> n_layers	967:13:25136:25150	3942461	1	True				
ANR	3942531	RelationalExpression	i < g -> n_layers		3942461	0		<			
ANR	3942532	Identifier	i		3942461	0					
ANR	3942533	PtrMemberAccess	g -> n_layers		3942461	1					
ANR	3942534	Identifier	g		3942461	0					
ANR	3942535	Identifier	n_layers		3942461	1					
ANR	3942536	UnaryExpression	++ i	967:30:25153:25155	3942461	2	True				
ANR	3942537	IncDec	++		3942461	0					
ANR	3942538	Identifier	i		3942461	1					
ANR	3942539	CompoundStatement		12:35:235:235	3942461	3					
ANR	3942540	ExpressionStatement	c = i	968:2:25162:25167	3942461	0	True				
ANR	3942541	AssignmentExpression	c = i		3942461	0		=			
ANR	3942542	Identifier	c		3942461	0					
ANR	3942543	Identifier	i		3942461	1					
ANR	3942544	ForStatement	for ( j = is_left ? 0 : g -> layers [ i ] . n_nodes - 1 ; ( is_left && j < g -> layers [ i ] . n_nodes ) || ( ! is_left && j >= 0 ) ; j = is_left ? j + 1 : j - 1 )		3942461	1					
ANR	3942545	ForInit	j = is_left ? 0 : g -> layers [ i ] . n_nodes - 1 ;	970:7:25177:25217	3942461	0	True				
ANR	3942546	AssignmentExpression	j = is_left ? 0 : g -> layers [ i ] . n_nodes - 1		3942461	0		=			
ANR	3942547	Identifier	j		3942461	0					
ANR	3942548	ConditionalExpression	is_left ? 0 : g -> layers [ i ] . n_nodes - 1		3942461	1					
ANR	3942549	Condition	is_left		3942461	0					
ANR	3942550	Identifier	is_left		3942461	0					
ANR	3942551	PrimaryExpression	0		3942461	1					
ANR	3942552	AdditiveExpression	g -> layers [ i ] . n_nodes - 1		3942461	2		-			
ANR	3942553	MemberAccess	g -> layers [ i ] . n_nodes		3942461	0					
ANR	3942554	ArrayIndexing	g -> layers [ i ]		3942461	0					
ANR	3942555	PtrMemberAccess	g -> layers		3942461	0					
ANR	3942556	Identifier	g		3942461	0					
ANR	3942557	Identifier	layers		3942461	1					
ANR	3942558	Identifier	i		3942461	1					
ANR	3942559	Identifier	n_nodes		3942461	1					
ANR	3942560	PrimaryExpression	1		3942461	1					
ANR	3942561	Condition	( is_left && j < g -> layers [ i ] . n_nodes ) || ( ! is_left && j >= 0 )	971:7:25226:25286	3942461	1	True				
ANR	3942562	OrExpression	( is_left && j < g -> layers [ i ] . n_nodes ) || ( ! is_left && j >= 0 )		3942461	0		||			
ANR	3942563	AndExpression	is_left && j < g -> layers [ i ] . n_nodes		3942461	0		&&			
ANR	3942564	Identifier	is_left		3942461	0					
ANR	3942565	RelationalExpression	j < g -> layers [ i ] . n_nodes		3942461	1		<			
ANR	3942566	Identifier	j		3942461	0					
ANR	3942567	MemberAccess	g -> layers [ i ] . n_nodes		3942461	1					
ANR	3942568	ArrayIndexing	g -> layers [ i ]		3942461	0					
ANR	3942569	PtrMemberAccess	g -> layers		3942461	0					
ANR	3942570	Identifier	g		3942461	0					
ANR	3942571	Identifier	layers		3942461	1					
ANR	3942572	Identifier	i		3942461	1					
ANR	3942573	Identifier	n_nodes		3942461	1					
ANR	3942574	AndExpression	! is_left && j >= 0		3942461	1		&&			
ANR	3942575	UnaryOperationExpression	! is_left		3942461	0					
ANR	3942576	UnaryOperator	!		3942461	0					
ANR	3942577	Identifier	is_left		3942461	1					
ANR	3942578	RelationalExpression	j >= 0		3942461	1		>=			
ANR	3942579	Identifier	j		3942461	0					
ANR	3942580	PrimaryExpression	0		3942461	1					
ANR	3942581	AssignmentExpression	j = is_left ? j + 1 : j - 1	972:7:25296:25320	3942461	2	True	=			
ANR	3942582	Identifier	j		3942461	0					
ANR	3942583	ConditionalExpression	is_left ? j + 1 : j - 1		3942461	1					
ANR	3942584	Condition	is_left		3942461	0					
ANR	3942585	Identifier	is_left		3942461	0					
ANR	3942586	AdditiveExpression	j + 1		3942461	1		+			
ANR	3942587	Identifier	j		3942461	0					
ANR	3942588	PrimaryExpression	1		3942461	1					
ANR	3942589	AdditiveExpression	j - 1		3942461	2		-			
ANR	3942590	Identifier	j		3942461	0					
ANR	3942591	PrimaryExpression	1		3942461	1					
ANR	3942592	CompoundStatement		19:3:454:487	3942461	3					
ANR	3942593	IdentifierDeclStatement	const RGraphNode * gj = g -> layers [ i ] . nodes [ j ] ;	973:3:25328:25372	3942461	0	True				
ANR	3942594	IdentifierDecl	* gj = g -> layers [ i ] . nodes [ j ]		3942461	0					
ANR	3942595	IdentifierDeclType	const RGraphNode *		3942461	0					
ANR	3942596	Identifier	gj		3942461	1					
ANR	3942597	AssignmentExpression	* gj = g -> layers [ i ] . nodes [ j ]		3942461	2		=			
ANR	3942598	Identifier	gj		3942461	0					
ANR	3942599	ArrayIndexing	g -> layers [ i ] . nodes [ j ]		3942461	1					
ANR	3942600	MemberAccess	g -> layers [ i ] . nodes		3942461	0					
ANR	3942601	ArrayIndexing	g -> layers [ i ]		3942461	0					
ANR	3942602	PtrMemberAccess	g -> layers		3942461	0					
ANR	3942603	Identifier	g		3942461	0					
ANR	3942604	Identifier	layers		3942461	1					
ANR	3942605	Identifier	i		3942461	1					
ANR	3942606	Identifier	nodes		3942461	1					
ANR	3942607	Identifier	j		3942461	1					
ANR	3942608	IdentifierDeclStatement	const RANode * aj = get_anode ( gj ) ;	974:3:25377:25410	3942461	1	True				
ANR	3942609	IdentifierDecl	* aj = get_anode ( gj )		3942461	0					
ANR	3942610	IdentifierDeclType	const RANode *		3942461	0					
ANR	3942611	Identifier	aj		3942461	1					
ANR	3942612	AssignmentExpression	* aj = get_anode ( gj )		3942461	2		=			
ANR	3942613	Identifier	aj		3942461	0					
ANR	3942614	CallExpression	get_anode ( gj )		3942461	1					
ANR	3942615	Callee	get_anode		3942461	0					
ANR	3942616	Identifier	get_anode		3942461	0					
ANR	3942617	ArgumentList	gj		3942461	1					
ANR	3942618	Argument	gj		3942461	0					
ANR	3942619	Identifier	gj		3942461	0					
ANR	3942620	IfStatement	if ( aj -> klass == - 1 )		3942461	2					
ANR	3942621	Condition	aj -> klass == - 1	976:7:25420:25434	3942461	0	True				
ANR	3942622	EqualityExpression	aj -> klass == - 1		3942461	0		==			
ANR	3942623	PtrMemberAccess	aj -> klass		3942461	0					
ANR	3942624	Identifier	aj		3942461	0					
ANR	3942625	Identifier	klass		3942461	1					
ANR	3942626	UnaryOperationExpression	- 1		3942461	1					
ANR	3942627	UnaryOperator	-		3942461	0					
ANR	3942628	PrimaryExpression	1		3942461	1					
ANR	3942629	CompoundStatement		22:4:520:567	3942461	1					
ANR	3942630	IdentifierDeclStatement	"const RList * laj = hash_get_rlist ( v_nodes , gj ) ;"	977:4:25443:25490	3942461	0	True				
ANR	3942631	IdentifierDecl	"* laj = hash_get_rlist ( v_nodes , gj )"		3942461	0					
ANR	3942632	IdentifierDeclType	const RList *		3942461	0					
ANR	3942633	Identifier	laj		3942461	1					
ANR	3942634	AssignmentExpression	"* laj = hash_get_rlist ( v_nodes , gj )"		3942461	2		=			
ANR	3942635	Identifier	laj		3942461	0					
ANR	3942636	CallExpression	"hash_get_rlist ( v_nodes , gj )"		3942461	1					
ANR	3942637	Callee	hash_get_rlist		3942461	0					
ANR	3942638	Identifier	hash_get_rlist		3942461	0					
ANR	3942639	ArgumentList	v_nodes		3942461	1					
ANR	3942640	Argument	v_nodes		3942461	0					
ANR	3942641	Identifier	v_nodes		3942461	0					
ANR	3942642	Argument	gj		3942461	1					
ANR	3942643	Identifier	gj		3942461	0					
ANR	3942644	IfStatement	if ( ! res [ c ] )		3942461	1					
ANR	3942645	Condition	! res [ c ]	979:8:25501:25507	3942461	0	True				
ANR	3942646	UnaryOperationExpression	! res [ c ]		3942461	0					
ANR	3942647	UnaryOperator	!		3942461	0					
ANR	3942648	ArrayIndexing	res [ c ]		3942461	1					
ANR	3942649	Identifier	res		3942461	0					
ANR	3942650	Identifier	c		3942461	1					
ANR	3942651	CompoundStatement		24:17:587:587	3942461	1					
ANR	3942652	ExpressionStatement	res [ c ] = r_list_new ( )	980:5:25517:25539	3942461	0	True				
ANR	3942653	AssignmentExpression	res [ c ] = r_list_new ( )		3942461	0		=			
ANR	3942654	ArrayIndexing	res [ c ]		3942461	0					
ANR	3942655	Identifier	res		3942461	0					
ANR	3942656	Identifier	c		3942461	1					
ANR	3942657	CallExpression	r_list_new ( )		3942461	1					
ANR	3942658	Callee	r_list_new		3942461	0					
ANR	3942659	Identifier	r_list_new		3942461	0					
ANR	3942660	ArgumentList			3942461	1					
ANR	3942661	Statement	graph_foreach_anode	982:4:25551:25569	3942461	2	True				
ANR	3942662	Statement	(	982:24:25571:25571	3942461	3	True				
ANR	3942663	Statement	laj	982:25:25572:25574	3942461	4	True				
ANR	3942664	Statement	","	982:28:25575:25575	3942461	5	True				
ANR	3942665	Statement	it	982:30:25577:25578	3942461	6	True				
ANR	3942666	Statement	","	982:32:25579:25579	3942461	7	True				
ANR	3942667	Statement	gn	982:34:25581:25582	3942461	8	True				
ANR	3942668	Statement	","	982:36:25583:25583	3942461	9	True				
ANR	3942669	Statement	n	982:38:25585:25585	3942461	10	True				
ANR	3942670	Statement	)	982:39:25586:25586	3942461	11	True				
ANR	3942671	CompoundStatement		27:41:665:665	3942461	12					
ANR	3942672	ExpressionStatement	"r_list_append ( res [ c ] , gn )"	983:5:25595:25621	3942461	0	True				
ANR	3942673	CallExpression	"r_list_append ( res [ c ] , gn )"		3942461	0					
ANR	3942674	Callee	r_list_append		3942461	0					
ANR	3942675	Identifier	r_list_append		3942461	0					
ANR	3942676	ArgumentList	res [ c ]		3942461	1					
ANR	3942677	Argument	res [ c ]		3942461	0					
ANR	3942678	ArrayIndexing	res [ c ]		3942461	0					
ANR	3942679	Identifier	res		3942461	0					
ANR	3942680	Identifier	c		3942461	1					
ANR	3942681	Argument	gn		3942461	1					
ANR	3942682	Identifier	gn		3942461	0					
ANR	3942683	ExpressionStatement	n -> klass = c	984:5:25628:25640	3942461	1	True				
ANR	3942684	AssignmentExpression	n -> klass = c		3942461	0		=			
ANR	3942685	PtrMemberAccess	n -> klass		3942461	0					
ANR	3942686	Identifier	n		3942461	0					
ANR	3942687	Identifier	klass		3942461	1					
ANR	3942688	Identifier	c		3942461	1					
ANR	3942689	ElseStatement	else		3942461	0					
ANR	3942690	CompoundStatement		31:10:735:735	3942461	0					
ANR	3942691	ExpressionStatement	c = aj -> klass	987:4:25664:25677	3942461	0	True				
ANR	3942692	AssignmentExpression	c = aj -> klass		3942461	0		=			
ANR	3942693	Identifier	c		3942461	0					
ANR	3942694	PtrMemberAccess	aj -> klass		3942461	1					
ANR	3942695	Identifier	aj		3942461	0					
ANR	3942696	Identifier	klass		3942461	1					
ANR	3942697	IfStatement	if ( n_classes )		3942461	36					
ANR	3942698	Condition	n_classes	992:5:25697:25705	3942461	0	True				
ANR	3942699	Identifier	n_classes		3942461	0					
ANR	3942700	CompoundStatement		37:16:785:785	3942461	1					
ANR	3942701	ExpressionStatement	* n_classes = g -> n_layers	993:2:25712:25736	3942461	0	True				
ANR	3942702	AssignmentExpression	* n_classes = g -> n_layers		3942461	0		=			
ANR	3942703	UnaryOperationExpression	* n_classes		3942461	0					
ANR	3942704	UnaryOperator	*		3942461	0					
ANR	3942705	Identifier	n_classes		3942461	1					
ANR	3942706	PtrMemberAccess	g -> n_layers		3942461	1					
ANR	3942707	Identifier	g		3942461	0					
ANR	3942708	Identifier	n_layers		3942461	1					
ANR	3942709	ReturnStatement	return res ;	995:1:25742:25752	3942461	37	True				
ANR	3942710	Identifier	res		3942461	0					
ANR	3942711	ReturnType	static RList * *		3942461	1					
ANR	3942712	Identifier	compute_classes		3942461	2					
ANR	3942713	ParameterList	"const RAGraph * g , Sdb * v_nodes , int is_left , int * n_classes"		3942461	3					
ANR	3942714	Parameter	const RAGraph * g	956:31:24861:24876	3942461	0	True				
ANR	3942715	ParameterType	const RAGraph *		3942461	0					
ANR	3942716	Identifier	g		3942461	1					
ANR	3942717	Parameter	Sdb * v_nodes	956:49:24879:24890	3942461	1	True				
ANR	3942718	ParameterType	Sdb *		3942461	0					
ANR	3942719	Identifier	v_nodes		3942461	1					
ANR	3942720	Parameter	int is_left	956:63:24893:24903	3942461	2	True				
ANR	3942721	ParameterType	int		3942461	0					
ANR	3942722	Identifier	is_left		3942461	1					
ANR	3942723	Parameter	int * n_classes	956:76:24906:24919	3942461	3	True				
ANR	3942724	ParameterType	int *		3942461	0					
ANR	3942725	Identifier	n_classes		3942461	1					
ANR	3942726	CFGEntryNode	ENTRY		3942461		True				
ANR	3942727	CFGExitNode	EXIT		3942461		True				
ANR	3942728	Symbol	hash_get_rlist		3942461						
ANR	3942729	Symbol	g -> n_layers		3942461						
ANR	3942730	Symbol	* res		3942461						
ANR	3942731	Symbol	* aj		3942461						
ANR	3942732	Symbol	n_classes		3942461						
ANR	3942733	Symbol	aj -> klass		3942461						
ANR	3942734	Symbol	g -> layers [ i ] . nodes		3942461						
ANR	3942735	Symbol	* n_classes		3942461						
ANR	3942736	Symbol	laj		3942461						
ANR	3942737	Symbol	v_nodes		3942461						
ANR	3942738	Symbol	* g -> layers [ i ] . nodes		3942461						
ANR	3942739	Symbol	res		3942461						
ANR	3942740	Symbol	* * i		3942461						
ANR	3942741	Symbol	c		3942461						
ANR	3942742	Symbol	gj		3942461						
ANR	3942743	Symbol	get_anode		3942461						
ANR	3942744	Symbol	is_left		3942461						
ANR	3942745	Symbol	* * g		3942461						
ANR	3942746	Symbol	n -> klass		3942461						
ANR	3942747	Symbol	g		3942461						
ANR	3942748	Symbol	gn		3942461						
ANR	3942749	Symbol	i		3942461						
ANR	3942750	Symbol	aj		3942461						
ANR	3942751	Symbol	j		3942461						
ANR	3942752	Symbol	it		3942461						
ANR	3942753	Symbol	* c		3942461						
ANR	3942754	Symbol	n		3942461						
ANR	3942755	Symbol	* g		3942461						
ANR	3942756	Symbol	* i		3942461						
ANR	3942757	Symbol	* j		3942461						
ANR	3942758	Symbol	* n		3942461						
ANR	3942759	Symbol	* g -> layers		3942461						
ANR	3942760	Symbol	* * * g		3942461						
ANR	3942761	Symbol	g -> layers [ i ] . n_nodes		3942461						
ANR	3942762	Symbol	g -> layers		3942461						
ANR	3942763	Symbol	* * g -> layers		3942461						
ANR	3942764	Symbol	r_list_new		3942461						
ANR	3942765	Function	cmp_dist	998:0:25757:25838							
ANR	3942766	FunctionDef	"cmp_dist (const size_t a , const size_t b)"		3942765	0					
ANR	3942767	CompoundStatement		998:52:25809:25838	3942765	0					
ANR	3942768	ReturnStatement	return ( int ) a < ( int ) b ;	999:1:25812:25836	3942765	0	True				
ANR	3942769	RelationalExpression	( int ) a < ( int ) b		3942765	0		<			
ANR	3942770	CastExpression	( int ) a		3942765	0					
ANR	3942771	CastTarget	int		3942765	0					
ANR	3942772	Identifier	a		3942765	1					
ANR	3942773	CastExpression	( int ) b		3942765	1					
ANR	3942774	CastTarget	int		3942765	0					
ANR	3942775	Identifier	b		3942765	1					
ANR	3942776	ReturnType	static int		3942765	1					
ANR	3942777	Identifier	cmp_dist		3942765	2					
ANR	3942778	ParameterList	"const size_t a , const size_t b"		3942765	3					
ANR	3942779	Parameter	const size_t a	998:20:25777:25790	3942765	0	True				
ANR	3942780	ParameterType	const size_t		3942765	0					
ANR	3942781	Identifier	a		3942765	1					
ANR	3942782	Parameter	const size_t b	998:36:25793:25806	3942765	1	True				
ANR	3942783	ParameterType	const size_t		3942765	0					
ANR	3942784	Identifier	b		3942765	1					
ANR	3942785	CFGEntryNode	ENTRY		3942765		True				
ANR	3942786	CFGExitNode	EXIT		3942765		True				
ANR	3942787	Symbol	a		3942765						
ANR	3942788	Symbol	b		3942765						
ANR	3942789	Function	get_sibling	1002:0:25841:26196							
ANR	3942790	FunctionDef	"get_sibling (const RAGraph * g , const RANode * n , int is_left , int is_adjust_class)"		3942789	0					
ANR	3942791	CompoundStatement		1002:100:25941:26196	3942789	0					
ANR	3942792	IdentifierDeclStatement	RGraphNode * res = NULL ;	1003:1:25944:25966	3942789	0	True				
ANR	3942793	IdentifierDecl	* res = NULL		3942789	0					
ANR	3942794	IdentifierDeclType	RGraphNode *		3942789	0					
ANR	3942795	Identifier	res		3942789	1					
ANR	3942796	AssignmentExpression	* res = NULL		3942789	2		=			
ANR	3942797	Identifier	NULL		3942789	0					
ANR	3942798	Identifier	NULL		3942789	1					
ANR	3942799	IdentifierDeclStatement	int pos = n -> pos_in_layer ;	1004:1:25969:25994	3942789	1	True				
ANR	3942800	IdentifierDecl	pos = n -> pos_in_layer		3942789	0					
ANR	3942801	IdentifierDeclType	int		3942789	0					
ANR	3942802	Identifier	pos		3942789	1					
ANR	3942803	AssignmentExpression	pos = n -> pos_in_layer		3942789	2		=			
ANR	3942804	Identifier	pos		3942789	0					
ANR	3942805	PtrMemberAccess	n -> pos_in_layer		3942789	1					
ANR	3942806	Identifier	n		3942789	0					
ANR	3942807	Identifier	pos_in_layer		3942789	1					
ANR	3942808	IfStatement	if ( ( is_left && is_adjust_class ) || ( ! is_left && ! is_adjust_class ) )		3942789	2					
ANR	3942809	Condition	( is_left && is_adjust_class ) || ( ! is_left && ! is_adjust_class )	1006:5:26002:26063	3942789	0	True				
ANR	3942810	OrExpression	( is_left && is_adjust_class ) || ( ! is_left && ! is_adjust_class )		3942789	0		||			
ANR	3942811	AndExpression	is_left && is_adjust_class		3942789	0		&&			
ANR	3942812	Identifier	is_left		3942789	0					
ANR	3942813	Identifier	is_adjust_class		3942789	1					
ANR	3942814	AndExpression	! is_left && ! is_adjust_class		3942789	1		&&			
ANR	3942815	UnaryOperationExpression	! is_left		3942789	0					
ANR	3942816	UnaryOperator	!		3942789	0					
ANR	3942817	Identifier	is_left		3942789	1					
ANR	3942818	UnaryOperationExpression	! is_adjust_class		3942789	1					
ANR	3942819	UnaryOperator	!		3942789	0					
ANR	3942820	Identifier	is_adjust_class		3942789	1					
ANR	3942821	CompoundStatement		5:69:124:124	3942789	1					
ANR	3942822	ExpressionStatement	pos ++	1007:2:26070:26075	3942789	0	True				
ANR	3942823	PostIncDecOperationExpression	pos ++		3942789	0					
ANR	3942824	Identifier	pos		3942789	0					
ANR	3942825	IncDec	++		3942789	1					
ANR	3942826	ElseStatement	else		3942789	0					
ANR	3942827	CompoundStatement		7:8:143:143	3942789	0					
ANR	3942828	ExpressionStatement	pos --	1009:2:26089:26094	3942789	0	True				
ANR	3942829	PostIncDecOperationExpression	pos --		3942789	0					
ANR	3942830	Identifier	pos		3942789	0					
ANR	3942831	IncDec	--		3942789	1					
ANR	3942832	IfStatement	"if ( is_valid_pos ( g , n -> layer , pos ) )"		3942789	3					
ANR	3942833	Condition	"is_valid_pos ( g , n -> layer , pos )"	1012:5:26105:26135	3942789	0	True				
ANR	3942834	CallExpression	"is_valid_pos ( g , n -> layer , pos )"		3942789	0					
ANR	3942835	Callee	is_valid_pos		3942789	0					
ANR	3942836	Identifier	is_valid_pos		3942789	0					
ANR	3942837	ArgumentList	g		3942789	1					
ANR	3942838	Argument	g		3942789	0					
ANR	3942839	Identifier	g		3942789	0					
ANR	3942840	Argument	n -> layer		3942789	1					
ANR	3942841	PtrMemberAccess	n -> layer		3942789	0					
ANR	3942842	Identifier	n		3942789	0					
ANR	3942843	Identifier	layer		3942789	1					
ANR	3942844	Argument	pos		3942789	2					
ANR	3942845	Identifier	pos		3942789	0					
ANR	3942846	CompoundStatement		11:38:196:196	3942789	1					
ANR	3942847	ExpressionStatement	res = g -> layers [ n -> layer ] . nodes [ pos ]	1013:2:26142:26178	3942789	0	True				
ANR	3942848	AssignmentExpression	res = g -> layers [ n -> layer ] . nodes [ pos ]		3942789	0		=			
ANR	3942849	Identifier	res		3942789	0					
ANR	3942850	ArrayIndexing	g -> layers [ n -> layer ] . nodes [ pos ]		3942789	1					
ANR	3942851	MemberAccess	g -> layers [ n -> layer ] . nodes		3942789	0					
ANR	3942852	ArrayIndexing	g -> layers [ n -> layer ]		3942789	0					
ANR	3942853	PtrMemberAccess	g -> layers		3942789	0					
ANR	3942854	Identifier	g		3942789	0					
ANR	3942855	Identifier	layers		3942789	1					
ANR	3942856	PtrMemberAccess	n -> layer		3942789	1					
ANR	3942857	Identifier	n		3942789	0					
ANR	3942858	Identifier	layer		3942789	1					
ANR	3942859	Identifier	nodes		3942789	1					
ANR	3942860	Identifier	pos		3942789	1					
ANR	3942861	ReturnStatement	return res ;	1015:1:26184:26194	3942789	4	True				
ANR	3942862	Identifier	res		3942789	0					
ANR	3942863	ReturnType	static RGraphNode *		3942789	1					
ANR	3942864	Identifier	get_sibling		3942789	2					
ANR	3942865	ParameterList	"const RAGraph * g , const RANode * n , int is_left , int is_adjust_class"		3942789	3					
ANR	3942866	Parameter	const RAGraph * g	1002:31:25872:25887	3942789	0	True				
ANR	3942867	ParameterType	const RAGraph *		3942789	0					
ANR	3942868	Identifier	g		3942789	1					
ANR	3942869	Parameter	const RANode * n	1002:49:25890:25904	3942789	1	True				
ANR	3942870	ParameterType	const RANode *		3942789	0					
ANR	3942871	Identifier	n		3942789	1					
ANR	3942872	Parameter	int is_left	1002:66:25907:25917	3942789	2	True				
ANR	3942873	ParameterType	int		3942789	0					
ANR	3942874	Identifier	is_left		3942789	1					
ANR	3942875	Parameter	int is_adjust_class	1002:79:25920:25938	3942789	3	True				
ANR	3942876	ParameterType	int		3942789	0					
ANR	3942877	Identifier	is_adjust_class		3942789	1					
ANR	3942878	CFGEntryNode	ENTRY		3942789		True				
ANR	3942879	CFGExitNode	EXIT		3942789		True				
ANR	3942880	Symbol	* n -> layer		3942789						
ANR	3942881	Symbol	res		3942789						
ANR	3942882	Symbol	NULL		3942789						
ANR	3942883	Symbol	is_left		3942789						
ANR	3942884	Symbol	* * g		3942789						
ANR	3942885	Symbol	g		3942789						
ANR	3942886	Symbol	g -> layers [ n -> layer ] . nodes		3942789						
ANR	3942887	Symbol	is_adjust_class		3942789						
ANR	3942888	Symbol	* * n -> layer		3942789						
ANR	3942889	Symbol	n		3942789						
ANR	3942890	Symbol	is_valid_pos		3942789						
ANR	3942891	Symbol	* g		3942789						
ANR	3942892	Symbol	n -> pos_in_layer		3942789						
ANR	3942893	Symbol	* * * n		3942789						
ANR	3942894	Symbol	pos		3942789						
ANR	3942895	Symbol	* n		3942789						
ANR	3942896	Symbol	* g -> layers [ n -> layer ] . nodes		3942789						
ANR	3942897	Symbol	n -> layer		3942789						
ANR	3942898	Symbol	* g -> layers		3942789						
ANR	3942899	Symbol	* * * g		3942789						
ANR	3942900	Symbol	g -> layers		3942789						
ANR	3942901	Symbol	* * n		3942789						
ANR	3942902	Symbol	* * g -> layers		3942789						
ANR	3942903	Symbol	* pos		3942789						
ANR	3942904	Function	adjust_class_val	1018:0:26199:26508							
ANR	3942905	FunctionDef	"adjust_class_val (const RAGraph * g , const RGraphNode * gn , const RGraphNode * sibl , Sdb * res , int is_left)"		3942904	0					
ANR	3942906	CompoundStatement		1018:115:26314:26508	3942904	0					
ANR	3942907	IfStatement	if ( is_left )		3942904	0					
ANR	3942908	Condition	is_left	1019:5:26321:26327	3942904	0	True				
ANR	3942909	Identifier	is_left		3942904	0					
ANR	3942910	CompoundStatement		2:14:15:15	3942904	1					
ANR	3942911	ReturnStatement	"return hash_get_int ( res , sibl ) - hash_get_int ( res , gn ) - dist_nodes ( g , gn , sibl ) ;"	1020:2:26334:26417	3942904	0	True				
ANR	3942912	AdditiveExpression	"hash_get_int ( res , sibl ) - hash_get_int ( res , gn ) - dist_nodes ( g , gn , sibl )"		3942904	0		-			
ANR	3942913	CallExpression	"hash_get_int ( res , sibl )"		3942904	0					
ANR	3942914	Callee	hash_get_int		3942904	0					
ANR	3942915	Identifier	hash_get_int		3942904	0					
ANR	3942916	ArgumentList	res		3942904	1					
ANR	3942917	Argument	res		3942904	0					
ANR	3942918	Identifier	res		3942904	0					
ANR	3942919	Argument	sibl		3942904	1					
ANR	3942920	Identifier	sibl		3942904	0					
ANR	3942921	AdditiveExpression	"hash_get_int ( res , gn ) - dist_nodes ( g , gn , sibl )"		3942904	1		-			
ANR	3942922	CallExpression	"hash_get_int ( res , gn )"		3942904	0					
ANR	3942923	Callee	hash_get_int		3942904	0					
ANR	3942924	Identifier	hash_get_int		3942904	0					
ANR	3942925	ArgumentList	res		3942904	1					
ANR	3942926	Argument	res		3942904	0					
ANR	3942927	Identifier	res		3942904	0					
ANR	3942928	Argument	gn		3942904	1					
ANR	3942929	Identifier	gn		3942904	0					
ANR	3942930	CallExpression	"dist_nodes ( g , gn , sibl )"		3942904	1					
ANR	3942931	Callee	dist_nodes		3942904	0					
ANR	3942932	Identifier	dist_nodes		3942904	0					
ANR	3942933	ArgumentList	g		3942904	1					
ANR	3942934	Argument	g		3942904	0					
ANR	3942935	Identifier	g		3942904	0					
ANR	3942936	Argument	gn		3942904	1					
ANR	3942937	Identifier	gn		3942904	0					
ANR	3942938	Argument	sibl		3942904	2					
ANR	3942939	Identifier	sibl		3942904	0					
ANR	3942940	ReturnStatement	"return hash_get_int ( res , gn ) - hash_get_int ( res , sibl ) - dist_nodes ( g , sibl , gn ) ;"	1022:1:26423:26506	3942904	1	True				
ANR	3942941	AdditiveExpression	"hash_get_int ( res , gn ) - hash_get_int ( res , sibl ) - dist_nodes ( g , sibl , gn )"		3942904	0		-			
ANR	3942942	CallExpression	"hash_get_int ( res , gn )"		3942904	0					
ANR	3942943	Callee	hash_get_int		3942904	0					
ANR	3942944	Identifier	hash_get_int		3942904	0					
ANR	3942945	ArgumentList	res		3942904	1					
ANR	3942946	Argument	res		3942904	0					
ANR	3942947	Identifier	res		3942904	0					
ANR	3942948	Argument	gn		3942904	1					
ANR	3942949	Identifier	gn		3942904	0					
ANR	3942950	AdditiveExpression	"hash_get_int ( res , sibl ) - dist_nodes ( g , sibl , gn )"		3942904	1		-			
ANR	3942951	CallExpression	"hash_get_int ( res , sibl )"		3942904	0					
ANR	3942952	Callee	hash_get_int		3942904	0					
ANR	3942953	Identifier	hash_get_int		3942904	0					
ANR	3942954	ArgumentList	res		3942904	1					
ANR	3942955	Argument	res		3942904	0					
ANR	3942956	Identifier	res		3942904	0					
ANR	3942957	Argument	sibl		3942904	1					
ANR	3942958	Identifier	sibl		3942904	0					
ANR	3942959	CallExpression	"dist_nodes ( g , sibl , gn )"		3942904	1					
ANR	3942960	Callee	dist_nodes		3942904	0					
ANR	3942961	Identifier	dist_nodes		3942904	0					
ANR	3942962	ArgumentList	g		3942904	1					
ANR	3942963	Argument	g		3942904	0					
ANR	3942964	Identifier	g		3942904	0					
ANR	3942965	Argument	sibl		3942904	1					
ANR	3942966	Identifier	sibl		3942904	0					
ANR	3942967	Argument	gn		3942904	2					
ANR	3942968	Identifier	gn		3942904	0					
ANR	3942969	ReturnType	static int		3942904	1					
ANR	3942970	Identifier	adjust_class_val		3942904	2					
ANR	3942971	ParameterList	"const RAGraph * g , const RGraphNode * gn , const RGraphNode * sibl , Sdb * res , int is_left"		3942904	3					
ANR	3942972	Parameter	const RAGraph * g	1018:28:26227:26242	3942904	0	True				
ANR	3942973	ParameterType	const RAGraph *		3942904	0					
ANR	3942974	Identifier	g		3942904	1					
ANR	3942975	Parameter	const RGraphNode * gn	1018:46:26245:26264	3942904	1	True				
ANR	3942976	ParameterType	const RGraphNode *		3942904	0					
ANR	3942977	Identifier	gn		3942904	1					
ANR	3942978	Parameter	const RGraphNode * sibl	1018:68:26267:26288	3942904	2	True				
ANR	3942979	ParameterType	const RGraphNode *		3942904	0					
ANR	3942980	Identifier	sibl		3942904	1					
ANR	3942981	Parameter	Sdb * res	1018:92:26291:26298	3942904	3	True				
ANR	3942982	ParameterType	Sdb *		3942904	0					
ANR	3942983	Identifier	res		3942904	1					
ANR	3942984	Parameter	int is_left	1018:102:26301:26311	3942904	4	True				
ANR	3942985	ParameterType	int		3942904	0					
ANR	3942986	Identifier	is_left		3942904	1					
ANR	3942987	CFGEntryNode	ENTRY		3942904		True				
ANR	3942988	CFGExitNode	EXIT		3942904		True				
ANR	3942989	Symbol	res		3942904						
ANR	3942990	Symbol	dist_nodes		3942904						
ANR	3942991	Symbol	is_left		3942904						
ANR	3942992	Symbol	sibl		3942904						
ANR	3942993	Symbol	g		3942904						
ANR	3942994	Symbol	gn		3942904						
ANR	3942995	Symbol	hash_get_int		3942904						
ANR	3942996	Function	adjust_class	1027:0:26628:28037							
ANR	3942997	FunctionDef	"adjust_class (const RAGraph * g , int is_left , RList * * classes , Sdb * res , int c)"		3942996	0					
ANR	3942998	CompoundStatement		1027:90:26718:28037	3942996	0					
ANR	3942999	IdentifierDeclStatement	const RGraphNode * gn ;	1028:1:26721:26741	3942996	0	True				
ANR	3943000	IdentifierDecl	* gn		3942996	0					
ANR	3943001	IdentifierDeclType	const RGraphNode *		3942996	0					
ANR	3943002	Identifier	gn		3942996	1					
ANR	3943003	IdentifierDeclStatement	const RListIter * it ;	1029:1:26744:26763	3942996	1	True				
ANR	3943004	IdentifierDecl	* it		3942996	0					
ANR	3943005	IdentifierDeclType	const RListIter *		3942996	0					
ANR	3943006	Identifier	it		3942996	1					
ANR	3943007	IdentifierDeclStatement	const RANode * an ;	1030:1:26766:26782	3942996	2	True				
ANR	3943008	IdentifierDecl	* an		3942996	0					
ANR	3943009	IdentifierDeclType	const RANode *		3942996	0					
ANR	3943010	Identifier	an		3942996	1					
ANR	3943011	IdentifierDeclStatement	"int dist , v , is_first = true ;"	1031:1:26785:26813	3942996	3	True				
ANR	3943012	IdentifierDecl	dist		3942996	0					
ANR	3943013	IdentifierDeclType	int		3942996	0					
ANR	3943014	Identifier	dist		3942996	1					
ANR	3943015	IdentifierDecl	v		3942996	1					
ANR	3943016	IdentifierDeclType	int		3942996	0					
ANR	3943017	Identifier	v		3942996	1					
ANR	3943018	IdentifierDecl	is_first = true		3942996	2					
ANR	3943019	IdentifierDeclType	int		3942996	0					
ANR	3943020	Identifier	is_first		3942996	1					
ANR	3943021	AssignmentExpression	is_first = true		3942996	2		=			
ANR	3943022	Identifier	true		3942996	0					
ANR	3943023	Identifier	true		3942996	1					
ANR	3943024	Statement	graph_foreach_anode	1033:1:26817:26835	3942996	4	True				
ANR	3943025	Statement	(	1033:21:26837:26837	3942996	5	True				
ANR	3943026	Statement	classes	1033:22:26838:26844	3942996	6	True				
ANR	3943027	Statement	[	1033:29:26845:26845	3942996	7	True				
ANR	3943028	Statement	c	1033:30:26846:26846	3942996	8	True				
ANR	3943029	Statement	]	1033:31:26847:26847	3942996	9	True				
ANR	3943030	Statement	","	1033:32:26848:26848	3942996	10	True				
ANR	3943031	Statement	it	1033:34:26850:26851	3942996	11	True				
ANR	3943032	Statement	","	1033:36:26852:26852	3942996	12	True				
ANR	3943033	Statement	gn	1033:38:26854:26855	3942996	13	True				
ANR	3943034	Statement	","	1033:40:26856:26856	3942996	14	True				
ANR	3943035	Statement	an	1033:42:26858:26859	3942996	15	True				
ANR	3943036	Statement	)	1033:44:26860:26860	3942996	16	True				
ANR	3943037	CompoundStatement		9:2:176:200	3942996	17					
ANR	3943038	IdentifierDeclStatement	const RGraphNode * sibling ;	1034:2:26866:26891	3942996	0	True				
ANR	3943039	IdentifierDecl	* sibling		3942996	0					
ANR	3943040	IdentifierDeclType	const RGraphNode *		3942996	0					
ANR	3943041	Identifier	sibling		3942996	1					
ANR	3943042	IdentifierDeclStatement	const RANode * sibl_anode ;	1035:2:26895:26919	3942996	1	True				
ANR	3943043	IdentifierDecl	* sibl_anode		3942996	0					
ANR	3943044	IdentifierDeclType	const RANode *		3942996	0					
ANR	3943045	Identifier	sibl_anode		3942996	1					
ANR	3943046	ExpressionStatement	"sibling = get_sibling ( g , an , is_left , true )"	1037:2:26924:26968	3942996	2	True				
ANR	3943047	AssignmentExpression	"sibling = get_sibling ( g , an , is_left , true )"		3942996	0		=			
ANR	3943048	Identifier	sibling		3942996	0					
ANR	3943049	CallExpression	"get_sibling ( g , an , is_left , true )"		3942996	1					
ANR	3943050	Callee	get_sibling		3942996	0					
ANR	3943051	Identifier	get_sibling		3942996	0					
ANR	3943052	ArgumentList	g		3942996	1					
ANR	3943053	Argument	g		3942996	0					
ANR	3943054	Identifier	g		3942996	0					
ANR	3943055	Argument	an		3942996	1					
ANR	3943056	Identifier	an		3942996	0					
ANR	3943057	Argument	is_left		3942996	2					
ANR	3943058	Identifier	is_left		3942996	0					
ANR	3943059	Argument	true		3942996	3					
ANR	3943060	Identifier	true		3942996	0					
ANR	3943061	IfStatement	if ( ! sibling )		3942996	3					
ANR	3943062	Condition	! sibling	1038:6:26976:26983	3942996	0	True				
ANR	3943063	UnaryOperationExpression	! sibling		3942996	0					
ANR	3943064	UnaryOperator	!		3942996	0					
ANR	3943065	Identifier	sibling		3942996	1					
ANR	3943066	CompoundStatement		12:16:267:267	3942996	1					
ANR	3943067	ContinueStatement	continue ;	1039:3:26991:26999	3942996	0	True				
ANR	3943068	ExpressionStatement	sibl_anode = get_anode ( sibling )	1041:2:27007:27039	3942996	4	True				
ANR	3943069	AssignmentExpression	sibl_anode = get_anode ( sibling )		3942996	0		=			
ANR	3943070	Identifier	sibl_anode		3942996	0					
ANR	3943071	CallExpression	get_anode ( sibling )		3942996	1					
ANR	3943072	Callee	get_anode		3942996	0					
ANR	3943073	Identifier	get_anode		3942996	0					
ANR	3943074	ArgumentList	sibling		3942996	1					
ANR	3943075	Argument	sibling		3942996	0					
ANR	3943076	Identifier	sibling		3942996	0					
ANR	3943077	IfStatement	if ( sibl_anode -> klass == c )		3942996	5					
ANR	3943078	Condition	sibl_anode -> klass == c	1042:6:27047:27068	3942996	0	True				
ANR	3943079	EqualityExpression	sibl_anode -> klass == c		3942996	0		==			
ANR	3943080	PtrMemberAccess	sibl_anode -> klass		3942996	0					
ANR	3943081	Identifier	sibl_anode		3942996	0					
ANR	3943082	Identifier	klass		3942996	1					
ANR	3943083	Identifier	c		3942996	1					
ANR	3943084	CompoundStatement		16:30:352:352	3942996	1					
ANR	3943085	ContinueStatement	continue ;	1043:3:27076:27084	3942996	0	True				
ANR	3943086	ExpressionStatement	"v = adjust_class_val ( g , gn , sibling , res , is_left )"	1045:2:27092:27143	3942996	6	True				
ANR	3943087	AssignmentExpression	"v = adjust_class_val ( g , gn , sibling , res , is_left )"		3942996	0		=			
ANR	3943088	Identifier	v		3942996	0					
ANR	3943089	CallExpression	"adjust_class_val ( g , gn , sibling , res , is_left )"		3942996	1					
ANR	3943090	Callee	adjust_class_val		3942996	0					
ANR	3943091	Identifier	adjust_class_val		3942996	0					
ANR	3943092	ArgumentList	g		3942996	1					
ANR	3943093	Argument	g		3942996	0					
ANR	3943094	Identifier	g		3942996	0					
ANR	3943095	Argument	gn		3942996	1					
ANR	3943096	Identifier	gn		3942996	0					
ANR	3943097	Argument	sibling		3942996	2					
ANR	3943098	Identifier	sibling		3942996	0					
ANR	3943099	Argument	res		3942996	3					
ANR	3943100	Identifier	res		3942996	0					
ANR	3943101	Argument	is_left		3942996	4					
ANR	3943102	Identifier	is_left		3942996	0					
ANR	3943103	ExpressionStatement	"dist = is_first ? v : R_MIN ( dist , v )"	1046:2:27147:27182	3942996	7	True				
ANR	3943104	AssignmentExpression	"dist = is_first ? v : R_MIN ( dist , v )"		3942996	0		=			
ANR	3943105	Identifier	dist		3942996	0					
ANR	3943106	ConditionalExpression	"is_first ? v : R_MIN ( dist , v )"		3942996	1					
ANR	3943107	Condition	is_first		3942996	0					
ANR	3943108	Identifier	is_first		3942996	0					
ANR	3943109	Identifier	v		3942996	1					
ANR	3943110	CallExpression	"R_MIN ( dist , v )"		3942996	2					
ANR	3943111	Callee	R_MIN		3942996	0					
ANR	3943112	Identifier	R_MIN		3942996	0					
ANR	3943113	ArgumentList	dist		3942996	1					
ANR	3943114	Argument	dist		3942996	0					
ANR	3943115	Identifier	dist		3942996	0					
ANR	3943116	Argument	v		3942996	1					
ANR	3943117	Identifier	v		3942996	0					
ANR	3943118	ExpressionStatement	is_first = false	1047:2:27186:27202	3942996	8	True				
ANR	3943119	AssignmentExpression	is_first = false		3942996	0		=			
ANR	3943120	Identifier	is_first		3942996	0					
ANR	3943121	Identifier	false		3942996	1					
ANR	3943122	IfStatement	if ( is_first )		3942996	18					
ANR	3943123	Condition	is_first	1050:5:27213:27220	3942996	0	True				
ANR	3943124	Identifier	is_first		3942996	0					
ANR	3943125	CompoundStatement		26:2:539:546	3942996	1					
ANR	3943126	IdentifierDeclStatement	RList * heap = r_list_new ( ) ;	1051:2:27227:27254	3942996	0	True				
ANR	3943127	IdentifierDecl	* heap = r_list_new ( )		3942996	0					
ANR	3943128	IdentifierDeclType	RList *		3942996	0					
ANR	3943129	Identifier	heap		3942996	1					
ANR	3943130	AssignmentExpression	* heap = r_list_new ( )		3942996	2		=			
ANR	3943131	Identifier	heap		3942996	0					
ANR	3943132	CallExpression	r_list_new ( )		3942996	1					
ANR	3943133	Callee	r_list_new		3942996	0					
ANR	3943134	Identifier	r_list_new		3942996	0					
ANR	3943135	ArgumentList			3942996	1					
ANR	3943136	IdentifierDeclStatement	int len ;	1052:2:27258:27265	3942996	1	True				
ANR	3943137	IdentifierDecl	len		3942996	0					
ANR	3943138	IdentifierDeclType	int		3942996	0					
ANR	3943139	Identifier	len		3942996	1					
ANR	3943140	Statement	graph_foreach_anode	1054:2:27270:27288	3942996	2	True				
ANR	3943141	Statement	(	1054:22:27290:27290	3942996	3	True				
ANR	3943142	Statement	classes	1054:23:27291:27297	3942996	4	True				
ANR	3943143	Statement	[	1054:30:27298:27298	3942996	5	True				
ANR	3943144	Statement	c	1054:31:27299:27299	3942996	6	True				
ANR	3943145	Statement	]	1054:32:27300:27300	3942996	7	True				
ANR	3943146	Statement	","	1054:33:27301:27301	3942996	8	True				
ANR	3943147	Statement	it	1054:35:27303:27304	3942996	9	True				
ANR	3943148	Statement	","	1054:37:27305:27305	3942996	10	True				
ANR	3943149	Statement	gn	1054:39:27307:27308	3942996	11	True				
ANR	3943150	Statement	","	1054:41:27309:27309	3942996	12	True				
ANR	3943151	Statement	an	1054:43:27311:27312	3942996	13	True				
ANR	3943152	Statement	)	1054:45:27313:27313	3942996	14	True				
ANR	3943153	CompoundStatement		32:3:714:730	3942996	15					
ANR	3943154	IdentifierDeclStatement	"const RList * neigh = r_graph_all_neighbours ( g -> graph , gn ) ;"	1055:3:27320:27378	3942996	0	True				
ANR	3943155	IdentifierDecl	"* neigh = r_graph_all_neighbours ( g -> graph , gn )"		3942996	0					
ANR	3943156	IdentifierDeclType	const RList *		3942996	0					
ANR	3943157	Identifier	neigh		3942996	1					
ANR	3943158	AssignmentExpression	"* neigh = r_graph_all_neighbours ( g -> graph , gn )"		3942996	2		=			
ANR	3943159	Identifier	neigh		3942996	0					
ANR	3943160	CallExpression	"r_graph_all_neighbours ( g -> graph , gn )"		3942996	1					
ANR	3943161	Callee	r_graph_all_neighbours		3942996	0					
ANR	3943162	Identifier	r_graph_all_neighbours		3942996	0					
ANR	3943163	ArgumentList	g -> graph		3942996	1					
ANR	3943164	Argument	g -> graph		3942996	0					
ANR	3943165	PtrMemberAccess	g -> graph		3942996	0					
ANR	3943166	Identifier	g		3942996	0					
ANR	3943167	Identifier	graph		3942996	1					
ANR	3943168	Argument	gn		3942996	1					
ANR	3943169	Identifier	gn		3942996	0					
ANR	3943170	IdentifierDeclStatement	const RGraphNode * gk ;	1056:3:27383:27403	3942996	1	True				
ANR	3943171	IdentifierDecl	* gk		3942996	0					
ANR	3943172	IdentifierDeclType	const RGraphNode *		3942996	0					
ANR	3943173	Identifier	gk		3942996	1					
ANR	3943174	IdentifierDeclStatement	const RListIter * itk ;	1057:3:27408:27428	3942996	2	True				
ANR	3943175	IdentifierDecl	* itk		3942996	0					
ANR	3943176	IdentifierDeclType	const RListIter *		3942996	0					
ANR	3943177	Identifier	itk		3942996	1					
ANR	3943178	IdentifierDeclStatement	const RANode * ak ;	1058:3:27433:27449	3942996	3	True				
ANR	3943179	IdentifierDecl	* ak		3942996	0					
ANR	3943180	IdentifierDeclType	const RANode *		3942996	0					
ANR	3943181	Identifier	ak		3942996	1					
ANR	3943182	Statement	graph_foreach_anode	1060:3:27455:27473	3942996	4	True				
ANR	3943183	Statement	(	1060:23:27475:27475	3942996	5	True				
ANR	3943184	Statement	neigh	1060:24:27476:27480	3942996	6	True				
ANR	3943185	Statement	","	1060:29:27481:27481	3942996	7	True				
ANR	3943186	Statement	itk	1060:31:27483:27485	3942996	8	True				
ANR	3943187	Statement	","	1060:34:27486:27486	3942996	9	True				
ANR	3943188	Statement	gk	1060:36:27488:27489	3942996	10	True				
ANR	3943189	Statement	","	1060:38:27490:27490	3942996	11	True				
ANR	3943190	Statement	ak	1060:40:27492:27493	3942996	12	True				
ANR	3943191	Statement	)	1060:42:27494:27494	3942996	13	True				
ANR	3943192	CompoundStatement		34:44:777:777	3942996	14					
ANR	3943193	IfStatement	if ( ak -> klass < c )		3942996	0					
ANR	3943194	Condition	ak -> klass < c	1061:8:27506:27518	3942996	0	True				
ANR	3943195	RelationalExpression	ak -> klass < c		3942996	0		<			
ANR	3943196	PtrMemberAccess	ak -> klass		3942996	0					
ANR	3943197	Identifier	ak		3942996	0					
ANR	3943198	Identifier	klass		3942996	1					
ANR	3943199	Identifier	c		3942996	1					
ANR	3943200	CompoundStatement		36:5:809:835	3942996	1					
ANR	3943201	IdentifierDeclStatement	size_t d = ( ak -> x - an -> x ) ;	1062:5:27528:27554	3942996	0	True				
ANR	3943202	IdentifierDecl	d = ( ak -> x - an -> x )		3942996	0					
ANR	3943203	IdentifierDeclType	size_t		3942996	0					
ANR	3943204	Identifier	d		3942996	1					
ANR	3943205	AssignmentExpression	d = ( ak -> x - an -> x )		3942996	2		=			
ANR	3943206	Identifier	d		3942996	0					
ANR	3943207	AdditiveExpression	ak -> x - an -> x		3942996	1		-			
ANR	3943208	PtrMemberAccess	ak -> x		3942996	0					
ANR	3943209	Identifier	ak		3942996	0					
ANR	3943210	Identifier	x		3942996	1					
ANR	3943211	PtrMemberAccess	an -> x		3942996	1					
ANR	3943212	Identifier	an		3942996	0					
ANR	3943213	Identifier	x		3942996	1					
ANR	3943214	IfStatement	if ( d > 0 )		3942996	1					
ANR	3943215	Condition	d > 0	1063:9:27565:27569	3942996	0	True				
ANR	3943216	RelationalExpression	d > 0		3942996	0		>			
ANR	3943217	Identifier	d		3942996	0					
ANR	3943218	PrimaryExpression	0		3942996	1					
ANR	3943219	CompoundStatement		37:16:853:853	3942996	1					
ANR	3943220	ExpressionStatement	"r_list_append ( heap , ( void * ) d )"	1064:6:27580:27612	3942996	0	True				
ANR	3943221	CallExpression	"r_list_append ( heap , ( void * ) d )"		3942996	0					
ANR	3943222	Callee	r_list_append		3942996	0					
ANR	3943223	Identifier	r_list_append		3942996	0					
ANR	3943224	ArgumentList	heap		3942996	1					
ANR	3943225	Argument	heap		3942996	0					
ANR	3943226	Identifier	heap		3942996	0					
ANR	3943227	Argument	( void * ) d		3942996	1					
ANR	3943228	CastExpression	( void * ) d		3942996	0					
ANR	3943229	CastTarget	void *		3942996	0					
ANR	3943230	Identifier	d		3942996	1					
ANR	3943231	ExpressionStatement	len = r_list_length ( heap )	1070:2:27639:27665	3942996	16	True				
ANR	3943232	AssignmentExpression	len = r_list_length ( heap )		3942996	0		=			
ANR	3943233	Identifier	len		3942996	0					
ANR	3943234	CallExpression	r_list_length ( heap )		3942996	1					
ANR	3943235	Callee	r_list_length		3942996	0					
ANR	3943236	Identifier	r_list_length		3942996	0					
ANR	3943237	ArgumentList	heap		3942996	1					
ANR	3943238	Argument	heap		3942996	0					
ANR	3943239	Identifier	heap		3942996	0					
ANR	3943240	IfStatement	if ( len == 0 )		3942996	17					
ANR	3943241	Condition	len == 0	1071:6:27673:27680	3942996	0	True				
ANR	3943242	EqualityExpression	len == 0		3942996	0		==			
ANR	3943243	Identifier	len		3942996	0					
ANR	3943244	PrimaryExpression	0		3942996	1					
ANR	3943245	CompoundStatement		45:16:964:964	3942996	1					
ANR	3943246	ExpressionStatement	dist = 0	1072:3:27688:27696	3942996	0	True				
ANR	3943247	AssignmentExpression	dist = 0		3942996	0		=			
ANR	3943248	Identifier	dist		3942996	0					
ANR	3943249	PrimaryExpression	0		3942996	1					
ANR	3943250	ElseStatement	else		3942996	0					
ANR	3943251	CompoundStatement		47:9:988:988	3942996	0					
ANR	3943252	ExpressionStatement	"r_list_sort ( heap , ( RListComparator ) cmp_dist )"	1074:3:27712:27758	3942996	0	True				
ANR	3943253	CallExpression	"r_list_sort ( heap , ( RListComparator ) cmp_dist )"		3942996	0					
ANR	3943254	Callee	r_list_sort		3942996	0					
ANR	3943255	Identifier	r_list_sort		3942996	0					
ANR	3943256	ArgumentList	heap		3942996	1					
ANR	3943257	Argument	heap		3942996	0					
ANR	3943258	Identifier	heap		3942996	0					
ANR	3943259	Argument	( RListComparator ) cmp_dist		3942996	1					
ANR	3943260	CastExpression	( RListComparator ) cmp_dist		3942996	0					
ANR	3943261	CastTarget	RListComparator		3942996	0					
ANR	3943262	Identifier	cmp_dist		3942996	1					
ANR	3943263	ExpressionStatement	"dist = ( int ) ( size_t ) r_list_get_n ( heap , len / 2 )"	1075:3:27763:27813	3942996	1	True				
ANR	3943264	AssignmentExpression	"dist = ( int ) ( size_t ) r_list_get_n ( heap , len / 2 )"		3942996	0		=			
ANR	3943265	Identifier	dist		3942996	0					
ANR	3943266	CastExpression	"( int ) ( size_t ) r_list_get_n ( heap , len / 2 )"		3942996	1					
ANR	3943267	CastTarget	int		3942996	0					
ANR	3943268	CastExpression	"( size_t ) r_list_get_n ( heap , len / 2 )"		3942996	1					
ANR	3943269	CastTarget	size_t		3942996	0					
ANR	3943270	CallExpression	"r_list_get_n ( heap , len / 2 )"		3942996	1					
ANR	3943271	Callee	r_list_get_n		3942996	0					
ANR	3943272	Identifier	r_list_get_n		3942996	0					
ANR	3943273	ArgumentList	heap		3942996	1					
ANR	3943274	Argument	heap		3942996	0					
ANR	3943275	Identifier	heap		3942996	0					
ANR	3943276	Argument	len / 2		3942996	1					
ANR	3943277	MultiplicativeExpression	len / 2		3942996	0		/			
ANR	3943278	Identifier	len		3942996	0					
ANR	3943279	PrimaryExpression	2		3942996	1					
ANR	3943280	ExpressionStatement	r_list_free ( heap )	1078:2:27822:27840	3942996	18	True				
ANR	3943281	CallExpression	r_list_free ( heap )		3942996	0					
ANR	3943282	Callee	r_list_free		3942996	0					
ANR	3943283	Identifier	r_list_free		3942996	0					
ANR	3943284	ArgumentList	heap		3942996	1					
ANR	3943285	Argument	heap		3942996	0					
ANR	3943286	Identifier	heap		3942996	0					
ANR	3943287	Statement	graph_foreach_anode	1081:1:27847:27865	3942996	19	True				
ANR	3943288	Statement	(	1081:21:27867:27867	3942996	20	True				
ANR	3943289	Statement	classes	1081:22:27868:27874	3942996	21	True				
ANR	3943290	Statement	[	1081:29:27875:27875	3942996	22	True				
ANR	3943291	Statement	c	1081:30:27876:27876	3942996	23	True				
ANR	3943292	Statement	]	1081:31:27877:27877	3942996	24	True				
ANR	3943293	Statement	","	1081:32:27878:27878	3942996	25	True				
ANR	3943294	Statement	it	1081:34:27880:27881	3942996	26	True				
ANR	3943295	Statement	","	1081:36:27882:27882	3942996	27	True				
ANR	3943296	Statement	gn	1081:38:27884:27885	3942996	28	True				
ANR	3943297	Statement	","	1081:40:27886:27886	3942996	29	True				
ANR	3943298	Statement	an	1081:42:27888:27889	3942996	30	True				
ANR	3943299	Statement	)	1081:44:27890:27890	3942996	31	True				
ANR	3943300	CompoundStatement		57:2:1223:1282	3942996	32					
ANR	3943301	IdentifierDeclStatement	"const int old_val = hash_get_int ( res , gn ) ;"	1082:2:27896:27938	3942996	0	True				
ANR	3943302	IdentifierDecl	"old_val = hash_get_int ( res , gn )"		3942996	0					
ANR	3943303	IdentifierDeclType	const int		3942996	0					
ANR	3943304	Identifier	old_val		3942996	1					
ANR	3943305	AssignmentExpression	"old_val = hash_get_int ( res , gn )"		3942996	2		=			
ANR	3943306	Identifier	old_val		3942996	0					
ANR	3943307	CallExpression	"hash_get_int ( res , gn )"		3942996	1					
ANR	3943308	Callee	hash_get_int		3942996	0					
ANR	3943309	Identifier	hash_get_int		3942996	0					
ANR	3943310	ArgumentList	res		3942996	1					
ANR	3943311	Argument	res		3942996	0					
ANR	3943312	Identifier	res		3942996	0					
ANR	3943313	Argument	gn		3942996	1					
ANR	3943314	Identifier	gn		3942996	0					
ANR	3943315	IdentifierDeclStatement	const int new_val = is_left ? old_val + dist : old_val - dist ;	1083:2:27942:28001	3942996	1	True				
ANR	3943316	IdentifierDecl	new_val = is_left ? old_val + dist : old_val - dist		3942996	0					
ANR	3943317	IdentifierDeclType	const int		3942996	0					
ANR	3943318	Identifier	new_val		3942996	1					
ANR	3943319	AssignmentExpression	new_val = is_left ? old_val + dist : old_val - dist		3942996	2		=			
ANR	3943320	Identifier	new_val		3942996	0					
ANR	3943321	ConditionalExpression	is_left ? old_val + dist : old_val - dist		3942996	1					
ANR	3943322	Condition	is_left		3942996	0					
ANR	3943323	Identifier	is_left		3942996	0					
ANR	3943324	AdditiveExpression	old_val + dist		3942996	1		+			
ANR	3943325	Identifier	old_val		3942996	0					
ANR	3943326	Identifier	dist		3942996	1					
ANR	3943327	AdditiveExpression	old_val - dist		3942996	2		-			
ANR	3943328	Identifier	old_val		3942996	0					
ANR	3943329	Identifier	dist		3942996	1					
ANR	3943330	ExpressionStatement	"hash_set ( res , gn , new_val )"	1084:2:28005:28032	3942996	2	True				
ANR	3943331	CallExpression	"hash_set ( res , gn , new_val )"		3942996	0					
ANR	3943332	Callee	hash_set		3942996	0					
ANR	3943333	Identifier	hash_set		3942996	0					
ANR	3943334	ArgumentList	res		3942996	1					
ANR	3943335	Argument	res		3942996	0					
ANR	3943336	Identifier	res		3942996	0					
ANR	3943337	Argument	gn		3942996	1					
ANR	3943338	Identifier	gn		3942996	0					
ANR	3943339	Argument	new_val		3942996	2					
ANR	3943340	Identifier	new_val		3942996	0					
ANR	3943341	ReturnType	static void		3942996	1					
ANR	3943342	Identifier	adjust_class		3942996	2					
ANR	3943343	ParameterList	"const RAGraph * g , int is_left , RList * * classes , Sdb * res , int c"		3942996	3					
ANR	3943344	Parameter	const RAGraph * g	1027:25:26653:26668	3942996	0	True				
ANR	3943345	ParameterType	const RAGraph *		3942996	0					
ANR	3943346	Identifier	g		3942996	1					
ANR	3943347	Parameter	int is_left	1027:43:26671:26681	3942996	1	True				
ANR	3943348	ParameterType	int		3942996	0					
ANR	3943349	Identifier	is_left		3942996	1					
ANR	3943350	Parameter	RList * * classes	1027:56:26684:26698	3942996	2	True				
ANR	3943351	ParameterType	RList * *		3942996	0					
ANR	3943352	Identifier	classes		3942996	1					
ANR	3943353	Parameter	Sdb * res	1027:73:26701:26708	3942996	3	True				
ANR	3943354	ParameterType	Sdb *		3942996	0					
ANR	3943355	Identifier	res		3942996	1					
ANR	3943356	Parameter	int c	1027:83:26711:26715	3942996	4	True				
ANR	3943357	ParameterType	int		3942996	0					
ANR	3943358	Identifier	c		3942996	1					
ANR	3943359	CFGEntryNode	ENTRY		3942996		True				
ANR	3943360	CFGExitNode	EXIT		3942996		True				
ANR	3943361	CFGErrorNode	ERROR		3942996		True				
ANR	3943362	Symbol	r_graph_all_neighbours		3942996						
ANR	3943363	Symbol	new_val		3942996						
ANR	3943364	Symbol	old_val		3942996						
ANR	3943365	Symbol	classes		3942996						
ANR	3943366	Symbol	dist		3942996						
ANR	3943367	Symbol	sibl_anode		3942996						
ANR	3943368	Symbol	neigh		3942996						
ANR	3943369	Symbol	len		3942996						
ANR	3943370	Symbol	ak -> x		3942996						
ANR	3943371	Symbol	g -> graph		3942996						
ANR	3943372	Symbol	an -> x		3942996						
ANR	3943373	Symbol	get_sibling		3942996						
ANR	3943374	Symbol	cmp_dist		3942996						
ANR	3943375	Symbol	heap		3942996						
ANR	3943376	Symbol	res		3942996						
ANR	3943377	Symbol	itk		3942996						
ANR	3943378	Symbol	c		3942996						
ANR	3943379	Symbol	get_anode		3942996						
ANR	3943380	Symbol	is_left		3942996						
ANR	3943381	Symbol	gk		3942996						
ANR	3943382	Symbol	d		3942996						
ANR	3943383	Symbol	g		3942996						
ANR	3943384	Symbol	gn		3942996						
ANR	3943385	Symbol	is_first		3942996						
ANR	3943386	Symbol	false		3942996						
ANR	3943387	Symbol	r_list_get_n		3942996						
ANR	3943388	Symbol	R_MIN		3942996						
ANR	3943389	Symbol	ak		3942996						
ANR	3943390	Symbol	it		3942996						
ANR	3943391	Symbol	an		3942996						
ANR	3943392	Symbol	hash_get_int		3942996						
ANR	3943393	Symbol	* an		3942996						
ANR	3943394	Symbol	* g		3942996						
ANR	3943395	Symbol	sibl_anode -> klass		3942996						
ANR	3943396	Symbol	sibling		3942996						
ANR	3943397	Symbol	* ak		3942996						
ANR	3943398	Symbol	v		3942996						
ANR	3943399	Symbol	ak -> klass		3942996						
ANR	3943400	Symbol	true		3942996						
ANR	3943401	Symbol	adjust_class_val		3942996						
ANR	3943402	Symbol	r_list_length		3942996						
ANR	3943403	Symbol	* sibl_anode		3942996						
ANR	3943404	Symbol	r_list_new		3942996						
ANR	3943405	Function	place_nodes_val	1088:0:28040:28298							
ANR	3943406	FunctionDef	"place_nodes_val (const RAGraph * g , const RGraphNode * gn , const RGraphNode * sibl , Sdb * res , int is_left)"		3943405	0					
ANR	3943407	CompoundStatement		1088:114:28154:28298	3943405	0					
ANR	3943408	IfStatement	if ( is_left )		3943405	0					
ANR	3943409	Condition	is_left	1089:5:28161:28167	3943405	0	True				
ANR	3943410	Identifier	is_left		3943405	0					
ANR	3943411	CompoundStatement		2:14:15:15	3943405	1					
ANR	3943412	ReturnStatement	"return hash_get_int ( res , sibl ) + dist_nodes ( g , sibl , gn ) ;"	1090:2:28174:28232	3943405	0	True				
ANR	3943413	AdditiveExpression	"hash_get_int ( res , sibl ) + dist_nodes ( g , sibl , gn )"		3943405	0		+			
ANR	3943414	CallExpression	"hash_get_int ( res , sibl )"		3943405	0					
ANR	3943415	Callee	hash_get_int		3943405	0					
ANR	3943416	Identifier	hash_get_int		3943405	0					
ANR	3943417	ArgumentList	res		3943405	1					
ANR	3943418	Argument	res		3943405	0					
ANR	3943419	Identifier	res		3943405	0					
ANR	3943420	Argument	sibl		3943405	1					
ANR	3943421	Identifier	sibl		3943405	0					
ANR	3943422	CallExpression	"dist_nodes ( g , sibl , gn )"		3943405	1					
ANR	3943423	Callee	dist_nodes		3943405	0					
ANR	3943424	Identifier	dist_nodes		3943405	0					
ANR	3943425	ArgumentList	g		3943405	1					
ANR	3943426	Argument	g		3943405	0					
ANR	3943427	Identifier	g		3943405	0					
ANR	3943428	Argument	sibl		3943405	1					
ANR	3943429	Identifier	sibl		3943405	0					
ANR	3943430	Argument	gn		3943405	2					
ANR	3943431	Identifier	gn		3943405	0					
ANR	3943432	ReturnStatement	"return hash_get_int ( res , sibl ) - dist_nodes ( g , gn , sibl ) ;"	1092:1:28238:28296	3943405	1	True				
ANR	3943433	AdditiveExpression	"hash_get_int ( res , sibl ) - dist_nodes ( g , gn , sibl )"		3943405	0		-			
ANR	3943434	CallExpression	"hash_get_int ( res , sibl )"		3943405	0					
ANR	3943435	Callee	hash_get_int		3943405	0					
ANR	3943436	Identifier	hash_get_int		3943405	0					
ANR	3943437	ArgumentList	res		3943405	1					
ANR	3943438	Argument	res		3943405	0					
ANR	3943439	Identifier	res		3943405	0					
ANR	3943440	Argument	sibl		3943405	1					
ANR	3943441	Identifier	sibl		3943405	0					
ANR	3943442	CallExpression	"dist_nodes ( g , gn , sibl )"		3943405	1					
ANR	3943443	Callee	dist_nodes		3943405	0					
ANR	3943444	Identifier	dist_nodes		3943405	0					
ANR	3943445	ArgumentList	g		3943405	1					
ANR	3943446	Argument	g		3943405	0					
ANR	3943447	Identifier	g		3943405	0					
ANR	3943448	Argument	gn		3943405	1					
ANR	3943449	Identifier	gn		3943405	0					
ANR	3943450	Argument	sibl		3943405	2					
ANR	3943451	Identifier	sibl		3943405	0					
ANR	3943452	ReturnType	static int		3943405	1					
ANR	3943453	Identifier	place_nodes_val		3943405	2					
ANR	3943454	ParameterList	"const RAGraph * g , const RGraphNode * gn , const RGraphNode * sibl , Sdb * res , int is_left"		3943405	3					
ANR	3943455	Parameter	const RAGraph * g	1088:27:28067:28082	3943405	0	True				
ANR	3943456	ParameterType	const RAGraph *		3943405	0					
ANR	3943457	Identifier	g		3943405	1					
ANR	3943458	Parameter	const RGraphNode * gn	1088:45:28085:28104	3943405	1	True				
ANR	3943459	ParameterType	const RGraphNode *		3943405	0					
ANR	3943460	Identifier	gn		3943405	1					
ANR	3943461	Parameter	const RGraphNode * sibl	1088:67:28107:28128	3943405	2	True				
ANR	3943462	ParameterType	const RGraphNode *		3943405	0					
ANR	3943463	Identifier	sibl		3943405	1					
ANR	3943464	Parameter	Sdb * res	1088:91:28131:28138	3943405	3	True				
ANR	3943465	ParameterType	Sdb *		3943405	0					
ANR	3943466	Identifier	res		3943405	1					
ANR	3943467	Parameter	int is_left	1088:101:28141:28151	3943405	4	True				
ANR	3943468	ParameterType	int		3943405	0					
ANR	3943469	Identifier	is_left		3943405	1					
ANR	3943470	CFGEntryNode	ENTRY		3943405		True				
ANR	3943471	CFGExitNode	EXIT		3943405		True				
ANR	3943472	Symbol	res		3943405						
ANR	3943473	Symbol	dist_nodes		3943405						
ANR	3943474	Symbol	is_left		3943405						
ANR	3943475	Symbol	sibl		3943405						
ANR	3943476	Symbol	g		3943405						
ANR	3943477	Symbol	gn		3943405						
ANR	3943478	Symbol	hash_get_int		3943405						
ANR	3943479	Function	place_nodes_sel_p	1095:0:28301:28504							
ANR	3943480	FunctionDef	"place_nodes_sel_p (int newval , int oldval , int is_first , int is_left)"		3943479	0					
ANR	3943481	CompoundStatement		1095:80:28381:28504	3943479	0					
ANR	3943482	IfStatement	if ( is_first )		3943479	0					
ANR	3943483	Condition	is_first	1096:5:28388:28395	3943479	0	True				
ANR	3943484	Identifier	is_first		3943479	0					
ANR	3943485	CompoundStatement		2:15:16:16	3943479	1					
ANR	3943486	ReturnStatement	return newval ;	1097:2:28402:28415	3943479	0	True				
ANR	3943487	Identifier	newval		3943479	0					
ANR	3943488	IfStatement	if ( is_left )		3943479	1					
ANR	3943489	Condition	is_left	1099:5:28425:28431	3943479	0	True				
ANR	3943490	Identifier	is_left		3943479	0					
ANR	3943491	CompoundStatement		5:14:52:52	3943479	1					
ANR	3943492	ReturnStatement	"return R_MAX ( oldval , newval ) ;"	1100:2:28438:28467	3943479	0	True				
ANR	3943493	CallExpression	"R_MAX ( oldval , newval )"		3943479	0					
ANR	3943494	Callee	R_MAX		3943479	0					
ANR	3943495	Identifier	R_MAX		3943479	0					
ANR	3943496	ArgumentList	oldval		3943479	1					
ANR	3943497	Argument	oldval		3943479	0					
ANR	3943498	Identifier	oldval		3943479	0					
ANR	3943499	Argument	newval		3943479	1					
ANR	3943500	Identifier	newval		3943479	0					
ANR	3943501	ReturnStatement	"return R_MIN ( oldval , newval ) ;"	1102:1:28473:28502	3943479	2	True				
ANR	3943502	CallExpression	"R_MIN ( oldval , newval )"		3943479	0					
ANR	3943503	Callee	R_MIN		3943479	0					
ANR	3943504	Identifier	R_MIN		3943479	0					
ANR	3943505	ArgumentList	oldval		3943479	1					
ANR	3943506	Argument	oldval		3943479	0					
ANR	3943507	Identifier	oldval		3943479	0					
ANR	3943508	Argument	newval		3943479	1					
ANR	3943509	Identifier	newval		3943479	0					
ANR	3943510	ReturnType	static int		3943479	1					
ANR	3943511	Identifier	place_nodes_sel_p		3943479	2					
ANR	3943512	ParameterList	"int newval , int oldval , int is_first , int is_left"		3943479	3					
ANR	3943513	Parameter	int newval	1095:29:28330:28339	3943479	0	True				
ANR	3943514	ParameterType	int		3943479	0					
ANR	3943515	Identifier	newval		3943479	1					
ANR	3943516	Parameter	int oldval	1095:41:28342:28351	3943479	1	True				
ANR	3943517	ParameterType	int		3943479	0					
ANR	3943518	Identifier	oldval		3943479	1					
ANR	3943519	Parameter	int is_first	1095:53:28354:28365	3943479	2	True				
ANR	3943520	ParameterType	int		3943479	0					
ANR	3943521	Identifier	is_first		3943479	1					
ANR	3943522	Parameter	int is_left	1095:67:28368:28378	3943479	3	True				
ANR	3943523	ParameterType	int		3943479	0					
ANR	3943524	Identifier	is_left		3943479	1					
ANR	3943525	CFGEntryNode	ENTRY		3943479		True				
ANR	3943526	CFGExitNode	EXIT		3943479		True				
ANR	3943527	Symbol	oldval		3943479						
ANR	3943528	Symbol	is_left		3943479						
ANR	3943529	Symbol	is_first		3943479						
ANR	3943530	Symbol	R_MAX		3943479						
ANR	3943531	Symbol	R_MIN		3943479						
ANR	3943532	Symbol	newval		3943479						
ANR	3943533	Function	place_nodes	1106:0:28552:29484							
ANR	3943534	FunctionDef	"place_nodes (const RAGraph * g , const RGraphNode * gn , int is_left , Sdb * v_nodes , RList * * classes , Sdb * res , Sdb * placed)"		3943533	0					
ANR	3943535	CompoundStatement		1106:131:28683:29484	3943533	0					
ANR	3943536	IdentifierDeclStatement	"const RList * lv = hash_get_rlist ( v_nodes , gn ) ;"	1107:1:28686:28732	3943533	0	True				
ANR	3943537	IdentifierDecl	"* lv = hash_get_rlist ( v_nodes , gn )"		3943533	0					
ANR	3943538	IdentifierDeclType	const RList *		3943533	0					
ANR	3943539	Identifier	lv		3943533	1					
ANR	3943540	AssignmentExpression	"* lv = hash_get_rlist ( v_nodes , gn )"		3943533	2		=			
ANR	3943541	Identifier	lv		3943533	0					
ANR	3943542	CallExpression	"hash_get_rlist ( v_nodes , gn )"		3943533	1					
ANR	3943543	Callee	hash_get_rlist		3943533	0					
ANR	3943544	Identifier	hash_get_rlist		3943533	0					
ANR	3943545	ArgumentList	v_nodes		3943533	1					
ANR	3943546	Argument	v_nodes		3943533	0					
ANR	3943547	Identifier	v_nodes		3943533	0					
ANR	3943548	Argument	gn		3943533	1					
ANR	3943549	Identifier	gn		3943533	0					
ANR	3943550	IdentifierDeclStatement	"int p = 0 , v , is_first = true ;"	1108:1:28735:28764	3943533	1	True				
ANR	3943551	IdentifierDecl	p = 0		3943533	0					
ANR	3943552	IdentifierDeclType	int		3943533	0					
ANR	3943553	Identifier	p		3943533	1					
ANR	3943554	AssignmentExpression	p = 0		3943533	2		=			
ANR	3943555	Identifier	p		3943533	0					
ANR	3943556	PrimaryExpression	0		3943533	1					
ANR	3943557	IdentifierDecl	v		3943533	1					
ANR	3943558	IdentifierDeclType	int		3943533	0					
ANR	3943559	Identifier	v		3943533	1					
ANR	3943560	IdentifierDecl	is_first = true		3943533	2					
ANR	3943561	IdentifierDeclType	int		3943533	0					
ANR	3943562	Identifier	is_first		3943533	1					
ANR	3943563	AssignmentExpression	is_first = true		3943533	2		=			
ANR	3943564	Identifier	true		3943533	0					
ANR	3943565	Identifier	true		3943533	1					
ANR	3943566	IdentifierDeclStatement	const RGraphNode * gk ;	1109:1:28767:28787	3943533	2	True				
ANR	3943567	IdentifierDecl	* gk		3943533	0					
ANR	3943568	IdentifierDeclType	const RGraphNode *		3943533	0					
ANR	3943569	Identifier	gk		3943533	1					
ANR	3943570	IdentifierDeclStatement	const RListIter * itk ;	1110:1:28790:28810	3943533	3	True				
ANR	3943571	IdentifierDecl	* itk		3943533	0					
ANR	3943572	IdentifierDeclType	const RListIter *		3943533	0					
ANR	3943573	Identifier	itk		3943533	1					
ANR	3943574	IdentifierDeclStatement	const RANode * ak ;	1111:1:28813:28829	3943533	4	True				
ANR	3943575	IdentifierDecl	* ak		3943533	0					
ANR	3943576	IdentifierDeclType	const RANode *		3943533	0					
ANR	3943577	Identifier	ak		3943533	1					
ANR	3943578	Statement	graph_foreach_anode	1113:1:28833:28851	3943533	5	True				
ANR	3943579	Statement	(	1113:21:28853:28853	3943533	6	True				
ANR	3943580	Statement	lv	1113:22:28854:28855	3943533	7	True				
ANR	3943581	Statement	","	1113:24:28856:28856	3943533	8	True				
ANR	3943582	Statement	itk	1113:26:28858:28860	3943533	9	True				
ANR	3943583	Statement	","	1113:29:28861:28861	3943533	10	True				
ANR	3943584	Statement	gk	1113:31:28863:28864	3943533	11	True				
ANR	3943585	Statement	","	1113:33:28865:28865	3943533	12	True				
ANR	3943586	Statement	ak	1113:35:28867:28868	3943533	13	True				
ANR	3943587	Statement	)	1113:37:28869:28869	3943533	14	True				
ANR	3943588	CompoundStatement		10:2:220:244	3943533	15					
ANR	3943589	IdentifierDeclStatement	const RGraphNode * sibling ;	1114:2:28875:28900	3943533	0	True				
ANR	3943590	IdentifierDecl	* sibling		3943533	0					
ANR	3943591	IdentifierDeclType	const RGraphNode *		3943533	0					
ANR	3943592	Identifier	sibling		3943533	1					
ANR	3943593	IdentifierDeclStatement	const RANode * sibl_anode ;	1115:2:28904:28928	3943533	1	True				
ANR	3943594	IdentifierDecl	* sibl_anode		3943533	0					
ANR	3943595	IdentifierDeclType	const RANode *		3943533	0					
ANR	3943596	Identifier	sibl_anode		3943533	1					
ANR	3943597	ExpressionStatement	"sibling = get_sibling ( g , ak , is_left , false )"	1117:2:28933:28978	3943533	2	True				
ANR	3943598	AssignmentExpression	"sibling = get_sibling ( g , ak , is_left , false )"		3943533	0		=			
ANR	3943599	Identifier	sibling		3943533	0					
ANR	3943600	CallExpression	"get_sibling ( g , ak , is_left , false )"		3943533	1					
ANR	3943601	Callee	get_sibling		3943533	0					
ANR	3943602	Identifier	get_sibling		3943533	0					
ANR	3943603	ArgumentList	g		3943533	1					
ANR	3943604	Argument	g		3943533	0					
ANR	3943605	Identifier	g		3943533	0					
ANR	3943606	Argument	ak		3943533	1					
ANR	3943607	Identifier	ak		3943533	0					
ANR	3943608	Argument	is_left		3943533	2					
ANR	3943609	Identifier	is_left		3943533	0					
ANR	3943610	Argument	false		3943533	3					
ANR	3943611	Identifier	false		3943533	0					
ANR	3943612	IfStatement	if ( ! sibling )		3943533	3					
ANR	3943613	Condition	! sibling	1118:6:28986:28993	3943533	0	True				
ANR	3943614	UnaryOperationExpression	! sibling		3943533	0					
ANR	3943615	UnaryOperator	!		3943533	0					
ANR	3943616	Identifier	sibling		3943533	1					
ANR	3943617	CompoundStatement		13:16:312:312	3943533	1					
ANR	3943618	ContinueStatement	continue ;	1119:3:29001:29009	3943533	0	True				
ANR	3943619	ExpressionStatement	sibl_anode = get_anode ( sibling )	1121:2:29017:29049	3943533	4	True				
ANR	3943620	AssignmentExpression	sibl_anode = get_anode ( sibling )		3943533	0		=			
ANR	3943621	Identifier	sibl_anode		3943533	0					
ANR	3943622	CallExpression	get_anode ( sibling )		3943533	1					
ANR	3943623	Callee	get_anode		3943533	0					
ANR	3943624	Identifier	get_anode		3943533	0					
ANR	3943625	ArgumentList	sibling		3943533	1					
ANR	3943626	Argument	sibling		3943533	0					
ANR	3943627	Identifier	sibling		3943533	0					
ANR	3943628	IfStatement	if ( ak -> klass == sibl_anode -> klass )		3943533	5					
ANR	3943629	Condition	ak -> klass == sibl_anode -> klass	1122:6:29057:29086	3943533	0	True				
ANR	3943630	EqualityExpression	ak -> klass == sibl_anode -> klass		3943533	0		==			
ANR	3943631	PtrMemberAccess	ak -> klass		3943533	0					
ANR	3943632	Identifier	ak		3943533	0					
ANR	3943633	Identifier	klass		3943533	1					
ANR	3943634	PtrMemberAccess	sibl_anode -> klass		3943533	1					
ANR	3943635	Identifier	sibl_anode		3943533	0					
ANR	3943636	Identifier	klass		3943533	1					
ANR	3943637	CompoundStatement		17:38:405:405	3943533	1					
ANR	3943638	IfStatement	"if ( ! hash_get ( placed , sibling ) )"		3943533	0					
ANR	3943639	Condition	"! hash_get ( placed , sibling )"	1123:7:29098:29124	3943533	0	True				
ANR	3943640	UnaryOperationExpression	"! hash_get ( placed , sibling )"		3943533	0					
ANR	3943641	UnaryOperator	!		3943533	0					
ANR	3943642	CallExpression	"hash_get ( placed , sibling )"		3943533	1					
ANR	3943643	Callee	hash_get		3943533	0					
ANR	3943644	Identifier	hash_get		3943533	0					
ANR	3943645	ArgumentList	placed		3943533	1					
ANR	3943646	Argument	placed		3943533	0					
ANR	3943647	Identifier	placed		3943533	0					
ANR	3943648	Argument	sibling		3943533	1					
ANR	3943649	Identifier	sibling		3943533	0					
ANR	3943650	CompoundStatement		18:36:443:443	3943533	1					
ANR	3943651	ExpressionStatement	"place_nodes ( g , sibling , is_left , v_nodes , classes , res , placed )"	1124:4:29133:29197	3943533	0	True				
ANR	3943652	CallExpression	"place_nodes ( g , sibling , is_left , v_nodes , classes , res , placed )"		3943533	0					
ANR	3943653	Callee	place_nodes		3943533	0					
ANR	3943654	Identifier	place_nodes		3943533	0					
ANR	3943655	ArgumentList	g		3943533	1					
ANR	3943656	Argument	g		3943533	0					
ANR	3943657	Identifier	g		3943533	0					
ANR	3943658	Argument	sibling		3943533	1					
ANR	3943659	Identifier	sibling		3943533	0					
ANR	3943660	Argument	is_left		3943533	2					
ANR	3943661	Identifier	is_left		3943533	0					
ANR	3943662	Argument	v_nodes		3943533	3					
ANR	3943663	Identifier	v_nodes		3943533	0					
ANR	3943664	Argument	classes		3943533	4					
ANR	3943665	Identifier	classes		3943533	0					
ANR	3943666	Argument	res		3943533	5					
ANR	3943667	Identifier	res		3943533	0					
ANR	3943668	Argument	placed		3943533	6					
ANR	3943669	Identifier	placed		3943533	0					
ANR	3943670	ExpressionStatement	"v = place_nodes_val ( g , gk , sibling , res , is_left )"	1127:3:29208:29258	3943533	1	True				
ANR	3943671	AssignmentExpression	"v = place_nodes_val ( g , gk , sibling , res , is_left )"		3943533	0		=			
ANR	3943672	Identifier	v		3943533	0					
ANR	3943673	CallExpression	"place_nodes_val ( g , gk , sibling , res , is_left )"		3943533	1					
ANR	3943674	Callee	place_nodes_val		3943533	0					
ANR	3943675	Identifier	place_nodes_val		3943533	0					
ANR	3943676	ArgumentList	g		3943533	1					
ANR	3943677	Argument	g		3943533	0					
ANR	3943678	Identifier	g		3943533	0					
ANR	3943679	Argument	gk		3943533	1					
ANR	3943680	Identifier	gk		3943533	0					
ANR	3943681	Argument	sibling		3943533	2					
ANR	3943682	Identifier	sibling		3943533	0					
ANR	3943683	Argument	res		3943533	3					
ANR	3943684	Identifier	res		3943533	0					
ANR	3943685	Argument	is_left		3943533	4					
ANR	3943686	Identifier	is_left		3943533	0					
ANR	3943687	ExpressionStatement	"p = place_nodes_sel_p ( v , p , is_first , is_left )"	1128:3:29263:29310	3943533	2	True				
ANR	3943688	AssignmentExpression	"p = place_nodes_sel_p ( v , p , is_first , is_left )"		3943533	0		=			
ANR	3943689	Identifier	p		3943533	0					
ANR	3943690	CallExpression	"place_nodes_sel_p ( v , p , is_first , is_left )"		3943533	1					
ANR	3943691	Callee	place_nodes_sel_p		3943533	0					
ANR	3943692	Identifier	place_nodes_sel_p		3943533	0					
ANR	3943693	ArgumentList	v		3943533	1					
ANR	3943694	Argument	v		3943533	0					
ANR	3943695	Identifier	v		3943533	0					
ANR	3943696	Argument	p		3943533	1					
ANR	3943697	Identifier	p		3943533	0					
ANR	3943698	Argument	is_first		3943533	2					
ANR	3943699	Identifier	is_first		3943533	0					
ANR	3943700	Argument	is_left		3943533	3					
ANR	3943701	Identifier	is_left		3943533	0					
ANR	3943702	ExpressionStatement	is_first = false	1129:3:29315:29331	3943533	3	True				
ANR	3943703	AssignmentExpression	is_first = false		3943533	0		=			
ANR	3943704	Identifier	is_first		3943533	0					
ANR	3943705	Identifier	false		3943533	1					
ANR	3943706	IfStatement	if ( is_first )		3943533	16					
ANR	3943707	Condition	is_first	1133:5:29346:29353	3943533	0	True				
ANR	3943708	Identifier	is_first		3943533	0					
ANR	3943709	CompoundStatement		28:15:672:672	3943533	1					
ANR	3943710	ExpressionStatement	p = is_left ? 0 : 50	1134:2:29360:29378	3943533	0	True				
ANR	3943711	AssignmentExpression	p = is_left ? 0 : 50		3943533	0		=			
ANR	3943712	Identifier	p		3943533	0					
ANR	3943713	ConditionalExpression	is_left ? 0 : 50		3943533	1					
ANR	3943714	Condition	is_left		3943533	0					
ANR	3943715	Identifier	is_left		3943533	0					
ANR	3943716	PrimaryExpression	0		3943533	1					
ANR	3943717	PrimaryExpression	50		3943533	2					
ANR	3943718	Statement	graph_foreach_anode	1137:1:29385:29403	3943533	17	True				
ANR	3943719	Statement	(	1137:21:29405:29405	3943533	18	True				
ANR	3943720	Statement	lv	1137:22:29406:29407	3943533	19	True				
ANR	3943721	Statement	","	1137:24:29408:29408	3943533	20	True				
ANR	3943722	Statement	itk	1137:26:29410:29412	3943533	21	True				
ANR	3943723	Statement	","	1137:29:29413:29413	3943533	22	True				
ANR	3943724	Statement	gk	1137:31:29415:29416	3943533	23	True				
ANR	3943725	Statement	","	1137:33:29417:29417	3943533	24	True				
ANR	3943726	Statement	ak	1137:35:29419:29420	3943533	25	True				
ANR	3943727	Statement	)	1137:37:29421:29421	3943533	26	True				
ANR	3943728	CompoundStatement		32:39:739:739	3943533	27					
ANR	3943729	ExpressionStatement	"hash_set ( res , gk , p )"	1138:2:29427:29448	3943533	0	True				
ANR	3943730	CallExpression	"hash_set ( res , gk , p )"		3943533	0					
ANR	3943731	Callee	hash_set		3943533	0					
ANR	3943732	Identifier	hash_set		3943533	0					
ANR	3943733	ArgumentList	res		3943533	1					
ANR	3943734	Argument	res		3943533	0					
ANR	3943735	Identifier	res		3943533	0					
ANR	3943736	Argument	gk		3943533	1					
ANR	3943737	Identifier	gk		3943533	0					
ANR	3943738	Argument	p		3943533	2					
ANR	3943739	Identifier	p		3943533	0					
ANR	3943740	ExpressionStatement	"hash_set ( placed , gk , true )"	1139:2:29452:29479	3943533	1	True				
ANR	3943741	CallExpression	"hash_set ( placed , gk , true )"		3943533	0					
ANR	3943742	Callee	hash_set		3943533	0					
ANR	3943743	Identifier	hash_set		3943533	0					
ANR	3943744	ArgumentList	placed		3943533	1					
ANR	3943745	Argument	placed		3943533	0					
ANR	3943746	Identifier	placed		3943533	0					
ANR	3943747	Argument	gk		3943533	1					
ANR	3943748	Identifier	gk		3943533	0					
ANR	3943749	Argument	true		3943533	2					
ANR	3943750	Identifier	true		3943533	0					
ANR	3943751	ReturnType	static void		3943533	1					
ANR	3943752	Identifier	place_nodes		3943533	2					
ANR	3943753	ParameterList	"const RAGraph * g , const RGraphNode * gn , int is_left , Sdb * v_nodes , RList * * classes , Sdb * res , Sdb * placed"		3943533	3					
ANR	3943754	Parameter	const RAGraph * g	1106:24:28576:28591	3943533	0	True				
ANR	3943755	ParameterType	const RAGraph *		3943533	0					
ANR	3943756	Identifier	g		3943533	1					
ANR	3943757	Parameter	const RGraphNode * gn	1106:42:28594:28613	3943533	1	True				
ANR	3943758	ParameterType	const RGraphNode *		3943533	0					
ANR	3943759	Identifier	gn		3943533	1					
ANR	3943760	Parameter	int is_left	1106:64:28616:28626	3943533	2	True				
ANR	3943761	ParameterType	int		3943533	0					
ANR	3943762	Identifier	is_left		3943533	1					
ANR	3943763	Parameter	Sdb * v_nodes	1106:77:28629:28640	3943533	3	True				
ANR	3943764	ParameterType	Sdb *		3943533	0					
ANR	3943765	Identifier	v_nodes		3943533	1					
ANR	3943766	Parameter	RList * * classes	1106:91:28643:28657	3943533	4	True				
ANR	3943767	ParameterType	RList * *		3943533	0					
ANR	3943768	Identifier	classes		3943533	1					
ANR	3943769	Parameter	Sdb * res	1106:108:28660:28667	3943533	5	True				
ANR	3943770	ParameterType	Sdb *		3943533	0					
ANR	3943771	Identifier	res		3943533	1					
ANR	3943772	Parameter	Sdb * placed	1106:118:28670:28680	3943533	6	True				
ANR	3943773	ParameterType	Sdb *		3943533	0					
ANR	3943774	Identifier	placed		3943533	1					
ANR	3943775	CFGEntryNode	ENTRY		3943533		True				
ANR	3943776	CFGExitNode	EXIT		3943533		True				
ANR	3943777	CFGErrorNode	ERROR		3943533		True				
ANR	3943778	Symbol	placed		3943533						
ANR	3943779	Symbol	classes		3943533						
ANR	3943780	Symbol	hash_get_rlist		3943533						
ANR	3943781	Symbol	lv		3943533						
ANR	3943782	Symbol	sibl_anode		3943533						
ANR	3943783	Symbol	v_nodes		3943533						
ANR	3943784	Symbol	get_sibling		3943533						
ANR	3943785	Symbol	place_nodes_sel_p		3943533						
ANR	3943786	Symbol	res		3943533						
ANR	3943787	Symbol	itk		3943533						
ANR	3943788	Symbol	get_anode		3943533						
ANR	3943789	Symbol	is_left		3943533						
ANR	3943790	Symbol	gk		3943533						
ANR	3943791	Symbol	g		3943533						
ANR	3943792	Symbol	gn		3943533						
ANR	3943793	Symbol	is_first		3943533						
ANR	3943794	Symbol	false		3943533						
ANR	3943795	Symbol	ak		3943533						
ANR	3943796	Symbol	place_nodes_val		3943533						
ANR	3943797	Symbol	p		3943533						
ANR	3943798	Symbol	sibl_anode -> klass		3943533						
ANR	3943799	Symbol	sibling		3943533						
ANR	3943800	Symbol	* ak		3943533						
ANR	3943801	Symbol	v		3943533						
ANR	3943802	Symbol	ak -> klass		3943533						
ANR	3943803	Symbol	true		3943533						
ANR	3943804	Symbol	* sibl_anode		3943533						
ANR	3943805	Symbol	hash_get		3943533						
ANR	3943806	Function	compute_pos	1144:0:29550:30228							
ANR	3943807	FunctionDef	"compute_pos (const RAGraph * g , int is_left , Sdb * v_nodes)"		3943806	0					
ANR	3943808	CompoundStatement		1144:69:29619:30228	3943806	0					
ANR	3943809	IdentifierDeclStatement	"int n_classes , i ;"	1145:1:29622:29638	3943806	0	True				
ANR	3943810	IdentifierDecl	n_classes		3943806	0					
ANR	3943811	IdentifierDeclType	int		3943806	0					
ANR	3943812	Identifier	n_classes		3943806	1					
ANR	3943813	IdentifierDecl	i		3943806	1					
ANR	3943814	IdentifierDeclType	int		3943806	0					
ANR	3943815	Identifier	i		3943806	1					
ANR	3943816	IdentifierDeclStatement	"RList * * classes = compute_classes ( g , v_nodes , is_left , & n_classes ) ;"	1147:1:29642:29709	3943806	1	True				
ANR	3943817	IdentifierDecl	"* * classes = compute_classes ( g , v_nodes , is_left , & n_classes )"		3943806	0					
ANR	3943818	IdentifierDeclType	RList * *		3943806	0					
ANR	3943819	Identifier	classes		3943806	1					
ANR	3943820	AssignmentExpression	"* * classes = compute_classes ( g , v_nodes , is_left , & n_classes )"		3943806	2		=			
ANR	3943821	Identifier	classes		3943806	0					
ANR	3943822	CallExpression	"compute_classes ( g , v_nodes , is_left , & n_classes )"		3943806	1					
ANR	3943823	Callee	compute_classes		3943806	0					
ANR	3943824	Identifier	compute_classes		3943806	0					
ANR	3943825	ArgumentList	g		3943806	1					
ANR	3943826	Argument	g		3943806	0					
ANR	3943827	Identifier	g		3943806	0					
ANR	3943828	Argument	v_nodes		3943806	1					
ANR	3943829	Identifier	v_nodes		3943806	0					
ANR	3943830	Argument	is_left		3943806	2					
ANR	3943831	Identifier	is_left		3943806	0					
ANR	3943832	Argument	& n_classes		3943806	3					
ANR	3943833	UnaryOperationExpression	& n_classes		3943806	0					
ANR	3943834	UnaryOperator	&		3943806	0					
ANR	3943835	Identifier	n_classes		3943806	1					
ANR	3943836	IfStatement	if ( ! classes )		3943806	2					
ANR	3943837	Condition	! classes	1148:5:29716:29723	3943806	0	True				
ANR	3943838	UnaryOperationExpression	! classes		3943806	0					
ANR	3943839	UnaryOperator	!		3943806	0					
ANR	3943840	Identifier	classes		3943806	1					
ANR	3943841	CompoundStatement		5:15:106:106	3943806	1					
ANR	3943842	ReturnStatement	return NULL ;	1149:2:29730:29741	3943806	0	True				
ANR	3943843	Identifier	NULL		3943806	0					
ANR	3943844	IdentifierDeclStatement	Sdb * res = sdb_new0 ( ) ;	1152:1:29748:29770	3943806	3	True				
ANR	3943845	IdentifierDecl	* res = sdb_new0 ( )		3943806	0					
ANR	3943846	IdentifierDeclType	Sdb *		3943806	0					
ANR	3943847	Identifier	res		3943806	1					
ANR	3943848	AssignmentExpression	* res = sdb_new0 ( )		3943806	2		=			
ANR	3943849	Identifier	res		3943806	0					
ANR	3943850	CallExpression	sdb_new0 ( )		3943806	1					
ANR	3943851	Callee	sdb_new0		3943806	0					
ANR	3943852	Identifier	sdb_new0		3943806	0					
ANR	3943853	ArgumentList			3943806	1					
ANR	3943854	IdentifierDeclStatement	Sdb * placed = sdb_new0 ( ) ;	1153:1:29773:29798	3943806	4	True				
ANR	3943855	IdentifierDecl	* placed = sdb_new0 ( )		3943806	0					
ANR	3943856	IdentifierDeclType	Sdb *		3943806	0					
ANR	3943857	Identifier	placed		3943806	1					
ANR	3943858	AssignmentExpression	* placed = sdb_new0 ( )		3943806	2		=			
ANR	3943859	Identifier	placed		3943806	0					
ANR	3943860	CallExpression	sdb_new0 ( )		3943806	1					
ANR	3943861	Callee	sdb_new0		3943806	0					
ANR	3943862	Identifier	sdb_new0		3943806	0					
ANR	3943863	ArgumentList			3943806	1					
ANR	3943864	ForStatement	for ( i = 0 ; i < n_classes ; ++ i )		3943806	5					
ANR	3943865	ForInit	i = 0 ;	1154:6:29806:29811	3943806	0	True				
ANR	3943866	AssignmentExpression	i = 0		3943806	0		=			
ANR	3943867	Identifier	i		3943806	0					
ANR	3943868	PrimaryExpression	0		3943806	1					
ANR	3943869	Condition	i < n_classes	1154:13:29813:29825	3943806	1	True				
ANR	3943870	RelationalExpression	i < n_classes		3943806	0		<			
ANR	3943871	Identifier	i		3943806	0					
ANR	3943872	Identifier	n_classes		3943806	1					
ANR	3943873	UnaryExpression	++ i	1154:28:29828:29830	3943806	2	True				
ANR	3943874	IncDec	++		3943806	0					
ANR	3943875	Identifier	i		3943806	1					
ANR	3943876	CompoundStatement		13:2:241:260	3943806	3					
ANR	3943877	IdentifierDeclStatement	const RGraphNode * gn ;	1155:2:29837:29857	3943806	0	True				
ANR	3943878	IdentifierDecl	* gn		3943806	0					
ANR	3943879	IdentifierDeclType	const RGraphNode *		3943806	0					
ANR	3943880	Identifier	gn		3943806	1					
ANR	3943881	IdentifierDeclStatement	const RListIter * it ;	1156:2:29861:29880	3943806	1	True				
ANR	3943882	IdentifierDecl	* it		3943806	0					
ANR	3943883	IdentifierDeclType	const RListIter *		3943806	0					
ANR	3943884	Identifier	it		3943806	1					
ANR	3943885	Statement	r_list_foreach	1158:2:29885:29898	3943806	2	True				
ANR	3943886	Statement	(	1158:17:29900:29900	3943806	3	True				
ANR	3943887	Statement	classes	1158:18:29901:29907	3943806	4	True				
ANR	3943888	Statement	[	1158:25:29908:29908	3943806	5	True				
ANR	3943889	Statement	i	1158:26:29909:29909	3943806	6	True				
ANR	3943890	Statement	]	1158:27:29910:29910	3943806	7	True				
ANR	3943891	Statement	","	1158:28:29911:29911	3943806	8	True				
ANR	3943892	Statement	it	1158:30:29913:29914	3943806	9	True				
ANR	3943893	Statement	","	1158:32:29915:29915	3943806	10	True				
ANR	3943894	Statement	gn	1158:34:29917:29918	3943806	11	True				
ANR	3943895	Statement	)	1158:36:29919:29919	3943806	12	True				
ANR	3943896	CompoundStatement		15:38:301:301	3943806	13					
ANR	3943897	IfStatement	"if ( ! hash_get_rnode ( placed , gn ) )"		3943806	0					
ANR	3943898	Condition	"! hash_get_rnode ( placed , gn )"	1159:7:29930:29957	3943806	0	True				
ANR	3943899	UnaryOperationExpression	"! hash_get_rnode ( placed , gn )"		3943806	0					
ANR	3943900	UnaryOperator	!		3943806	0					
ANR	3943901	CallExpression	"hash_get_rnode ( placed , gn )"		3943806	1					
ANR	3943902	Callee	hash_get_rnode		3943806	0					
ANR	3943903	Identifier	hash_get_rnode		3943806	0					
ANR	3943904	ArgumentList	placed		3943806	1					
ANR	3943905	Argument	placed		3943806	0					
ANR	3943906	Identifier	placed		3943806	0					
ANR	3943907	Argument	gn		3943806	1					
ANR	3943908	Identifier	gn		3943806	0					
ANR	3943909	CompoundStatement		16:37:340:340	3943806	1					
ANR	3943910	ExpressionStatement	"place_nodes ( g , gn , is_left , v_nodes , classes , res , placed )"	1160:4:29966:30025	3943806	0	True				
ANR	3943911	CallExpression	"place_nodes ( g , gn , is_left , v_nodes , classes , res , placed )"		3943806	0					
ANR	3943912	Callee	place_nodes		3943806	0					
ANR	3943913	Identifier	place_nodes		3943806	0					
ANR	3943914	ArgumentList	g		3943806	1					
ANR	3943915	Argument	g		3943806	0					
ANR	3943916	Identifier	g		3943806	0					
ANR	3943917	Argument	gn		3943806	1					
ANR	3943918	Identifier	gn		3943806	0					
ANR	3943919	Argument	is_left		3943806	2					
ANR	3943920	Identifier	is_left		3943806	0					
ANR	3943921	Argument	v_nodes		3943806	3					
ANR	3943922	Identifier	v_nodes		3943806	0					
ANR	3943923	Argument	classes		3943806	4					
ANR	3943924	Identifier	classes		3943806	0					
ANR	3943925	Argument	res		3943806	5					
ANR	3943926	Identifier	res		3943806	0					
ANR	3943927	Argument	placed		3943806	6					
ANR	3943928	Identifier	placed		3943806	0					
ANR	3943929	ExpressionStatement	"adjust_class ( g , is_left , classes , res , i )"	1164:2:30039:30081	3943806	14	True				
ANR	3943930	CallExpression	"adjust_class ( g , is_left , classes , res , i )"		3943806	0					
ANR	3943931	Callee	adjust_class		3943806	0					
ANR	3943932	Identifier	adjust_class		3943806	0					
ANR	3943933	ArgumentList	g		3943806	1					
ANR	3943934	Argument	g		3943806	0					
ANR	3943935	Identifier	g		3943806	0					
ANR	3943936	Argument	is_left		3943806	1					
ANR	3943937	Identifier	is_left		3943806	0					
ANR	3943938	Argument	classes		3943806	2					
ANR	3943939	Identifier	classes		3943806	0					
ANR	3943940	Argument	res		3943806	3					
ANR	3943941	Identifier	res		3943806	0					
ANR	3943942	Argument	i		3943806	4					
ANR	3943943	Identifier	i		3943806	0					
ANR	3943944	ExpressionStatement	sdb_free ( placed )	1167:1:30088:30105	3943806	6	True				
ANR	3943945	CallExpression	sdb_free ( placed )		3943806	0					
ANR	3943946	Callee	sdb_free		3943806	0					
ANR	3943947	Identifier	sdb_free		3943806	0					
ANR	3943948	ArgumentList	placed		3943806	1					
ANR	3943949	Argument	placed		3943806	0					
ANR	3943950	Identifier	placed		3943806	0					
ANR	3943951	ForStatement	for ( i = 0 ; i < n_classes ; ++ i )		3943806	7					
ANR	3943952	ForInit	i = 0 ;	1168:6:30113:30118	3943806	0	True				
ANR	3943953	AssignmentExpression	i = 0		3943806	0		=			
ANR	3943954	Identifier	i		3943806	0					
ANR	3943955	PrimaryExpression	0		3943806	1					
ANR	3943956	Condition	i < n_classes	1168:13:30120:30132	3943806	1	True				
ANR	3943957	RelationalExpression	i < n_classes		3943806	0		<			
ANR	3943958	Identifier	i		3943806	0					
ANR	3943959	Identifier	n_classes		3943806	1					
ANR	3943960	UnaryExpression	++ i	1168:28:30135:30137	3943806	2	True				
ANR	3943961	IncDec	++		3943806	0					
ANR	3943962	Identifier	i		3943806	1					
ANR	3943963	CompoundStatement		25:33:520:520	3943806	3					
ANR	3943964	IfStatement	if ( classes [ i ] )		3943806	0					
ANR	3943965	Condition	classes [ i ]	1169:6:30148:30157	3943806	0	True				
ANR	3943966	ArrayIndexing	classes [ i ]		3943806	0					
ANR	3943967	Identifier	classes		3943806	0					
ANR	3943968	Identifier	i		3943806	1					
ANR	3943969	CompoundStatement		26:18:540:540	3943806	1					
ANR	3943970	ExpressionStatement	r_list_free ( classes [ i ] )	1170:3:30165:30189	3943806	0	True				
ANR	3943971	CallExpression	r_list_free ( classes [ i ] )		3943806	0					
ANR	3943972	Callee	r_list_free		3943806	0					
ANR	3943973	Identifier	r_list_free		3943806	0					
ANR	3943974	ArgumentList	classes [ i ]		3943806	1					
ANR	3943975	Argument	classes [ i ]		3943806	0					
ANR	3943976	ArrayIndexing	classes [ i ]		3943806	0					
ANR	3943977	Identifier	classes		3943806	0					
ANR	3943978	Identifier	i		3943806	1					
ANR	3943979	ExpressionStatement	free ( classes )	1173:1:30199:30213	3943806	8	True				
ANR	3943980	CallExpression	free ( classes )		3943806	0					
ANR	3943981	Callee	free		3943806	0					
ANR	3943982	Identifier	free		3943806	0					
ANR	3943983	ArgumentList	classes		3943806	1					
ANR	3943984	Argument	classes		3943806	0					
ANR	3943985	Identifier	classes		3943806	0					
ANR	3943986	ReturnStatement	return res ;	1174:1:30216:30226	3943806	9	True				
ANR	3943987	Identifier	res		3943806	0					
ANR	3943988	ReturnType	static Sdb *		3943806	1					
ANR	3943989	Identifier	compute_pos		3943806	2					
ANR	3943990	ParameterList	"const RAGraph * g , int is_left , Sdb * v_nodes"		3943806	3					
ANR	3943991	Parameter	const RAGraph * g	1144:24:29574:29589	3943806	0	True				
ANR	3943992	ParameterType	const RAGraph *		3943806	0					
ANR	3943993	Identifier	g		3943806	1					
ANR	3943994	Parameter	int is_left	1144:42:29592:29602	3943806	1	True				
ANR	3943995	ParameterType	int		3943806	0					
ANR	3943996	Identifier	is_left		3943806	1					
ANR	3943997	Parameter	Sdb * v_nodes	1144:55:29605:29616	3943806	2	True				
ANR	3943998	ParameterType	Sdb *		3943806	0					
ANR	3943999	Identifier	v_nodes		3943806	1					
ANR	3944000	CFGEntryNode	ENTRY		3943806		True				
ANR	3944001	CFGExitNode	EXIT		3943806		True				
ANR	3944002	Symbol	res		3943806						
ANR	3944003	Symbol	sdb_new0		3943806						
ANR	3944004	Symbol	& n_classes		3943806						
ANR	3944005	Symbol	NULL		3943806						
ANR	3944006	Symbol	placed		3943806						
ANR	3944007	Symbol	is_left		3943806						
ANR	3944008	Symbol	hash_get_rnode		3943806						
ANR	3944009	Symbol	g		3943806						
ANR	3944010	Symbol	classes		3943806						
ANR	3944011	Symbol	gn		3943806						
ANR	3944012	Symbol	i		3943806						
ANR	3944013	Symbol	it		3943806						
ANR	3944014	Symbol	n_classes		3943806						
ANR	3944015	Symbol	* classes		3943806						
ANR	3944016	Symbol	* i		3943806						
ANR	3944017	Symbol	v_nodes		3943806						
ANR	3944018	Symbol	compute_classes		3943806						
ANR	3944019	Function	place_dummies	1185:0:30615:31336							
ANR	3944020	FunctionDef	place_dummies (const RAGraph * g)		3944019	0					
ANR	3944021	CompoundStatement		1185:44:30659:31336	3944019	0					
ANR	3944022	IdentifierDeclStatement	const RList * nodes ;	1186:1:30662:30680	3944019	0	True				
ANR	3944023	IdentifierDecl	* nodes		3944019	0					
ANR	3944024	IdentifierDeclType	const RList *		3944019	0					
ANR	3944025	Identifier	nodes		3944019	1					
ANR	3944026	IdentifierDeclStatement	const RGraphNode * gn ;	1187:1:30683:30703	3944019	1	True				
ANR	3944027	IdentifierDecl	* gn		3944019	0					
ANR	3944028	IdentifierDeclType	const RGraphNode *		3944019	0					
ANR	3944029	Identifier	gn		3944019	1					
ANR	3944030	IdentifierDeclStatement	const RListIter * it ;	1188:1:30706:30725	3944019	2	True				
ANR	3944031	IdentifierDecl	* it		3944019	0					
ANR	3944032	IdentifierDeclType	const RListIter *		3944019	0					
ANR	3944033	Identifier	it		3944019	1					
ANR	3944034	IdentifierDeclStatement	RANode * n ;	1189:1:30728:30737	3944019	3	True				
ANR	3944035	IdentifierDecl	* n		3944019	0					
ANR	3944036	IdentifierDeclType	RANode *		3944019	0					
ANR	3944037	Identifier	n		3944019	1					
ANR	3944038	IdentifierDeclStatement	Sdb * vertical_nodes = compute_vertical_nodes ( g ) ;	1191:1:30741:30789	3944019	4	True				
ANR	3944039	IdentifierDecl	* vertical_nodes = compute_vertical_nodes ( g )		3944019	0					
ANR	3944040	IdentifierDeclType	Sdb *		3944019	0					
ANR	3944041	Identifier	vertical_nodes		3944019	1					
ANR	3944042	AssignmentExpression	* vertical_nodes = compute_vertical_nodes ( g )		3944019	2		=			
ANR	3944043	Identifier	vertical_nodes		3944019	0					
ANR	3944044	CallExpression	compute_vertical_nodes ( g )		3944019	1					
ANR	3944045	Callee	compute_vertical_nodes		3944019	0					
ANR	3944046	Identifier	compute_vertical_nodes		3944019	0					
ANR	3944047	ArgumentList	g		3944019	1					
ANR	3944048	Argument	g		3944019	0					
ANR	3944049	Identifier	g		3944019	0					
ANR	3944050	IfStatement	if ( ! vertical_nodes )		3944019	5					
ANR	3944051	Condition	! vertical_nodes	1192:5:30796:30810	3944019	0	True				
ANR	3944052	UnaryOperationExpression	! vertical_nodes		3944019	0					
ANR	3944053	UnaryOperator	!		3944019	0					
ANR	3944054	Identifier	vertical_nodes		3944019	1					
ANR	3944055	CompoundStatement		8:22:153:153	3944019	1					
ANR	3944056	ReturnStatement	return ;	1193:2:30817:30823	3944019	0	True				
ANR	3944057	IdentifierDeclStatement	"Sdb * xminus = compute_pos ( g , true , vertical_nodes ) ;"	1195:1:30829:30880	3944019	6	True				
ANR	3944058	IdentifierDecl	"* xminus = compute_pos ( g , true , vertical_nodes )"		3944019	0					
ANR	3944059	IdentifierDeclType	Sdb *		3944019	0					
ANR	3944060	Identifier	xminus		3944019	1					
ANR	3944061	AssignmentExpression	"* xminus = compute_pos ( g , true , vertical_nodes )"		3944019	2		=			
ANR	3944062	Identifier	xminus		3944019	0					
ANR	3944063	CallExpression	"compute_pos ( g , true , vertical_nodes )"		3944019	1					
ANR	3944064	Callee	compute_pos		3944019	0					
ANR	3944065	Identifier	compute_pos		3944019	0					
ANR	3944066	ArgumentList	g		3944019	1					
ANR	3944067	Argument	g		3944019	0					
ANR	3944068	Identifier	g		3944019	0					
ANR	3944069	Argument	true		3944019	1					
ANR	3944070	Identifier	true		3944019	0					
ANR	3944071	Argument	vertical_nodes		3944019	2					
ANR	3944072	Identifier	vertical_nodes		3944019	0					
ANR	3944073	IfStatement	if ( ! xminus )		3944019	7					
ANR	3944074	Condition	! xminus	1196:5:30887:30893	3944019	0	True				
ANR	3944075	UnaryOperationExpression	! xminus		3944019	0					
ANR	3944076	UnaryOperator	!		3944019	0					
ANR	3944077	Identifier	xminus		3944019	1					
ANR	3944078	CompoundStatement		12:14:236:236	3944019	1					
ANR	3944079	GotoStatement	goto xminus_err ;	1197:2:30900:30915	3944019	0	True				
ANR	3944080	Identifier	xminus_err		3944019	0					
ANR	3944081	IdentifierDeclStatement	"Sdb * xplus = compute_pos ( g , false , vertical_nodes ) ;"	1199:1:30921:30972	3944019	8	True				
ANR	3944082	IdentifierDecl	"* xplus = compute_pos ( g , false , vertical_nodes )"		3944019	0					
ANR	3944083	IdentifierDeclType	Sdb *		3944019	0					
ANR	3944084	Identifier	xplus		3944019	1					
ANR	3944085	AssignmentExpression	"* xplus = compute_pos ( g , false , vertical_nodes )"		3944019	2		=			
ANR	3944086	Identifier	xplus		3944019	0					
ANR	3944087	CallExpression	"compute_pos ( g , false , vertical_nodes )"		3944019	1					
ANR	3944088	Callee	compute_pos		3944019	0					
ANR	3944089	Identifier	compute_pos		3944019	0					
ANR	3944090	ArgumentList	g		3944019	1					
ANR	3944091	Argument	g		3944019	0					
ANR	3944092	Identifier	g		3944019	0					
ANR	3944093	Argument	false		3944019	1					
ANR	3944094	Identifier	false		3944019	0					
ANR	3944095	Argument	vertical_nodes		3944019	2					
ANR	3944096	Identifier	vertical_nodes		3944019	0					
ANR	3944097	IfStatement	if ( ! xplus )		3944019	9					
ANR	3944098	Condition	! xplus	1200:5:30979:30984	3944019	0	True				
ANR	3944099	UnaryOperationExpression	! xplus		3944019	0					
ANR	3944100	UnaryOperator	!		3944019	0					
ANR	3944101	Identifier	xplus		3944019	1					
ANR	3944102	CompoundStatement		16:13:327:327	3944019	1					
ANR	3944103	GotoStatement	goto xplus_err ;	1201:2:30991:31005	3944019	0	True				
ANR	3944104	Identifier	xplus_err		3944019	0					
ANR	3944105	ExpressionStatement	nodes = r_graph_get_nodes ( g -> graph )	1204:1:31012:31048	3944019	10	True				
ANR	3944106	AssignmentExpression	nodes = r_graph_get_nodes ( g -> graph )		3944019	0		=			
ANR	3944107	Identifier	nodes		3944019	0					
ANR	3944108	CallExpression	r_graph_get_nodes ( g -> graph )		3944019	1					
ANR	3944109	Callee	r_graph_get_nodes		3944019	0					
ANR	3944110	Identifier	r_graph_get_nodes		3944019	0					
ANR	3944111	ArgumentList	g -> graph		3944019	1					
ANR	3944112	Argument	g -> graph		3944019	0					
ANR	3944113	PtrMemberAccess	g -> graph		3944019	0					
ANR	3944114	Identifier	g		3944019	0					
ANR	3944115	Identifier	graph		3944019	1					
ANR	3944116	Statement	graph_foreach_anode	1205:1:31051:31069	3944019	11	True				
ANR	3944117	Statement	(	1205:21:31071:31071	3944019	12	True				
ANR	3944118	Statement	nodes	1205:22:31072:31076	3944019	13	True				
ANR	3944119	Statement	","	1205:27:31077:31077	3944019	14	True				
ANR	3944120	Statement	it	1205:29:31079:31080	3944019	15	True				
ANR	3944121	Statement	","	1205:31:31081:31081	3944019	16	True				
ANR	3944122	Statement	gn	1205:33:31083:31084	3944019	17	True				
ANR	3944123	Statement	","	1205:35:31085:31085	3944019	18	True				
ANR	3944124	Statement	n	1205:37:31087:31087	3944019	19	True				
ANR	3944125	Statement	)	1205:38:31088:31088	3944019	20	True				
ANR	3944126	CompoundStatement		21:40:430:430	3944019	21					
ANR	3944127	ExpressionStatement	"n -> x = ( hash_get_int ( xminus , gn ) + hash_get_int ( xplus , gn ) ) / 2"	1206:2:31094:31159	3944019	0	True				
ANR	3944128	AssignmentExpression	"n -> x = ( hash_get_int ( xminus , gn ) + hash_get_int ( xplus , gn ) ) / 2"		3944019	0		=			
ANR	3944129	PtrMemberAccess	n -> x		3944019	0					
ANR	3944130	Identifier	n		3944019	0					
ANR	3944131	Identifier	x		3944019	1					
ANR	3944132	MultiplicativeExpression	"( hash_get_int ( xminus , gn ) + hash_get_int ( xplus , gn ) ) / 2"		3944019	1		/			
ANR	3944133	AdditiveExpression	"hash_get_int ( xminus , gn ) + hash_get_int ( xplus , gn )"		3944019	0		+			
ANR	3944134	CallExpression	"hash_get_int ( xminus , gn )"		3944019	0					
ANR	3944135	Callee	hash_get_int		3944019	0					
ANR	3944136	Identifier	hash_get_int		3944019	0					
ANR	3944137	ArgumentList	xminus		3944019	1					
ANR	3944138	Argument	xminus		3944019	0					
ANR	3944139	Identifier	xminus		3944019	0					
ANR	3944140	Argument	gn		3944019	1					
ANR	3944141	Identifier	gn		3944019	0					
ANR	3944142	CallExpression	"hash_get_int ( xplus , gn )"		3944019	1					
ANR	3944143	Callee	hash_get_int		3944019	0					
ANR	3944144	Identifier	hash_get_int		3944019	0					
ANR	3944145	ArgumentList	xplus		3944019	1					
ANR	3944146	Argument	xplus		3944019	0					
ANR	3944147	Identifier	xplus		3944019	0					
ANR	3944148	Argument	gn		3944019	1					
ANR	3944149	Identifier	gn		3944019	0					
ANR	3944150	PrimaryExpression	2		3944019	1					
ANR	3944151	ExpressionStatement	sdb_free ( xplus )	1209:1:31166:31182	3944019	22	True				
ANR	3944152	CallExpression	sdb_free ( xplus )		3944019	0					
ANR	3944153	Callee	sdb_free		3944019	0					
ANR	3944154	Identifier	sdb_free		3944019	0					
ANR	3944155	ArgumentList	xplus		3944019	1					
ANR	3944156	Argument	xplus		3944019	0					
ANR	3944157	Identifier	xplus		3944019	0					
ANR	3944158	Label	xplus_err :	1210:0:31184:31193	3944019	23	True				
ANR	3944159	Identifier	xplus_err		3944019	0					
ANR	3944160	ExpressionStatement	sdb_free ( xminus )	1211:1:31196:31213	3944019	24	True				
ANR	3944161	CallExpression	sdb_free ( xminus )		3944019	0					
ANR	3944162	Callee	sdb_free		3944019	0					
ANR	3944163	Identifier	sdb_free		3944019	0					
ANR	3944164	ArgumentList	xminus		3944019	1					
ANR	3944165	Argument	xminus		3944019	0					
ANR	3944166	Identifier	xminus		3944019	0					
ANR	3944167	Label	xminus_err :	1212:0:31215:31225	3944019	25	True				
ANR	3944168	Identifier	xminus_err		3944019	0					
ANR	3944169	ExpressionStatement	"sdb_foreach ( vertical_nodes , ( SdbForeachCallback ) free_vertical_nodes_cb , NULL )"	1213:1:31228:31306	3944019	26	True				
ANR	3944170	CallExpression	"sdb_foreach ( vertical_nodes , ( SdbForeachCallback ) free_vertical_nodes_cb , NULL )"		3944019	0					
ANR	3944171	Callee	sdb_foreach		3944019	0					
ANR	3944172	Identifier	sdb_foreach		3944019	0					
ANR	3944173	ArgumentList	vertical_nodes		3944019	1					
ANR	3944174	Argument	vertical_nodes		3944019	0					
ANR	3944175	Identifier	vertical_nodes		3944019	0					
ANR	3944176	Argument	( SdbForeachCallback ) free_vertical_nodes_cb		3944019	1					
ANR	3944177	CastExpression	( SdbForeachCallback ) free_vertical_nodes_cb		3944019	0					
ANR	3944178	CastTarget	SdbForeachCallback		3944019	0					
ANR	3944179	Identifier	free_vertical_nodes_cb		3944019	1					
ANR	3944180	Argument	NULL		3944019	2					
ANR	3944181	Identifier	NULL		3944019	0					
ANR	3944182	ExpressionStatement	sdb_free ( vertical_nodes )	1214:1:31309:31334	3944019	27	True				
ANR	3944183	CallExpression	sdb_free ( vertical_nodes )		3944019	0					
ANR	3944184	Callee	sdb_free		3944019	0					
ANR	3944185	Identifier	sdb_free		3944019	0					
ANR	3944186	ArgumentList	vertical_nodes		3944019	1					
ANR	3944187	Argument	vertical_nodes		3944019	0					
ANR	3944188	Identifier	vertical_nodes		3944019	0					
ANR	3944189	ReturnType	static void		3944019	1					
ANR	3944190	Identifier	place_dummies		3944019	2					
ANR	3944191	ParameterList	const RAGraph * g		3944019	3					
ANR	3944192	Parameter	const RAGraph * g	1185:26:30641:30656	3944019	0	True				
ANR	3944193	ParameterType	const RAGraph *		3944019	0					
ANR	3944194	Identifier	g		3944019	1					
ANR	3944195	CFGEntryNode	ENTRY		3944019		True				
ANR	3944196	CFGExitNode	EXIT		3944019		True				
ANR	3944197	Symbol	r_graph_get_nodes		3944019						
ANR	3944198	Symbol	NULL		3944019						
ANR	3944199	Symbol	free_vertical_nodes_cb		3944019						
ANR	3944200	Symbol	g		3944019						
ANR	3944201	Symbol	gn		3944019						
ANR	3944202	Symbol	false		3944019						
ANR	3944203	Symbol	it		3944019						
ANR	3944204	Symbol	hash_get_int		3944019						
ANR	3944205	Symbol	n		3944019						
ANR	3944206	Symbol	xminus		3944019						
ANR	3944207	Symbol	* g		3944019						
ANR	3944208	Symbol	nodes		3944019						
ANR	3944209	Symbol	g -> graph		3944019						
ANR	3944210	Symbol	n -> x		3944019						
ANR	3944211	Symbol	vertical_nodes		3944019						
ANR	3944212	Symbol	true		3944019						
ANR	3944213	Symbol	* n		3944019						
ANR	3944214	Symbol	compute_vertical_nodes		3944019						
ANR	3944215	Symbol	compute_pos		3944019						
ANR	3944216	Symbol	xplus		3944019						
ANR	3944217	Function	get_right_dummy	1217:0:31339:31745							
ANR	3944218	FunctionDef	"get_right_dummy (const RAGraph * g , const RGraphNode * n)"		3944217	0					
ANR	3944219	CompoundStatement		1217:74:31413:31745	3944217	0					
ANR	3944220	IdentifierDeclStatement	const RANode * an = get_anode ( n ) ;	1218:1:31416:31448	3944217	0	True				
ANR	3944221	IdentifierDecl	* an = get_anode ( n )		3944217	0					
ANR	3944222	IdentifierDeclType	const RANode *		3944217	0					
ANR	3944223	Identifier	an		3944217	1					
ANR	3944224	AssignmentExpression	* an = get_anode ( n )		3944217	2		=			
ANR	3944225	Identifier	an		3944217	0					
ANR	3944226	CallExpression	get_anode ( n )		3944217	1					
ANR	3944227	Callee	get_anode		3944217	0					
ANR	3944228	Identifier	get_anode		3944217	0					
ANR	3944229	ArgumentList	n		3944217	1					
ANR	3944230	Argument	n		3944217	0					
ANR	3944231	Identifier	n		3944217	0					
ANR	3944232	IfStatement	if ( ! an )		3944217	1					
ANR	3944233	Condition	! an	1219:5:31455:31457	3944217	0	True				
ANR	3944234	UnaryOperationExpression	! an		3944217	0					
ANR	3944235	UnaryOperator	!		3944217	0					
ANR	3944236	Identifier	an		3944217	1					
ANR	3944237	CompoundStatement		3:10:46:46	3944217	1					
ANR	3944238	ReturnStatement	return NULL ;	1220:2:31464:31475	3944217	0	True				
ANR	3944239	Identifier	NULL		3944217	0					
ANR	3944240	IdentifierDeclStatement	"int k , layer = an -> layer ;"	1222:1:31481:31505	3944217	2	True				
ANR	3944241	IdentifierDecl	k		3944217	0					
ANR	3944242	IdentifierDeclType	int		3944217	0					
ANR	3944243	Identifier	k		3944217	1					
ANR	3944244	IdentifierDecl	layer = an -> layer		3944217	1					
ANR	3944245	IdentifierDeclType	int		3944217	0					
ANR	3944246	Identifier	layer		3944217	1					
ANR	3944247	AssignmentExpression	layer = an -> layer		3944217	2		=			
ANR	3944248	Identifier	layer		3944217	0					
ANR	3944249	PtrMemberAccess	an -> layer		3944217	1					
ANR	3944250	Identifier	an		3944217	0					
ANR	3944251	Identifier	layer		3944217	1					
ANR	3944252	ForStatement	for ( k = an -> pos_in_layer + 1 ; k < g -> layers [ layer ] . n_nodes ; ++ k )		3944217	3					
ANR	3944253	ForInit	k = an -> pos_in_layer + 1 ;	1224:6:31514:31538	3944217	0	True				
ANR	3944254	AssignmentExpression	k = an -> pos_in_layer + 1		3944217	0		=			
ANR	3944255	Identifier	k		3944217	0					
ANR	3944256	AdditiveExpression	an -> pos_in_layer + 1		3944217	1		+			
ANR	3944257	PtrMemberAccess	an -> pos_in_layer		3944217	0					
ANR	3944258	Identifier	an		3944217	0					
ANR	3944259	Identifier	pos_in_layer		3944217	1					
ANR	3944260	PrimaryExpression	1		3944217	1					
ANR	3944261	Condition	k < g -> layers [ layer ] . n_nodes	1224:32:31540:31567	3944217	1	True				
ANR	3944262	RelationalExpression	k < g -> layers [ layer ] . n_nodes		3944217	0		<			
ANR	3944263	Identifier	k		3944217	0					
ANR	3944264	MemberAccess	g -> layers [ layer ] . n_nodes		3944217	1					
ANR	3944265	ArrayIndexing	g -> layers [ layer ]		3944217	0					
ANR	3944266	PtrMemberAccess	g -> layers		3944217	0					
ANR	3944267	Identifier	g		3944217	0					
ANR	3944268	Identifier	layers		3944217	1					
ANR	3944269	Identifier	layer		3944217	1					
ANR	3944270	Identifier	n_nodes		3944217	1					
ANR	3944271	UnaryExpression	++ k	1224:62:31570:31572	3944217	2	True				
ANR	3944272	IncDec	++		3944217	0					
ANR	3944273	Identifier	k		3944217	1					
ANR	3944274	CompoundStatement		10:2:211:244	3944217	3					
ANR	3944275	IdentifierDeclStatement	RGraphNode * gk = g -> layers [ layer ] . nodes [ k ] ;	1225:2:31579:31621	3944217	0	True				
ANR	3944276	IdentifierDecl	* gk = g -> layers [ layer ] . nodes [ k ]		3944217	0					
ANR	3944277	IdentifierDeclType	RGraphNode *		3944217	0					
ANR	3944278	Identifier	gk		3944217	1					
ANR	3944279	AssignmentExpression	* gk = g -> layers [ layer ] . nodes [ k ]		3944217	2		=			
ANR	3944280	Identifier	gk		3944217	0					
ANR	3944281	ArrayIndexing	g -> layers [ layer ] . nodes [ k ]		3944217	1					
ANR	3944282	MemberAccess	g -> layers [ layer ] . nodes		3944217	0					
ANR	3944283	ArrayIndexing	g -> layers [ layer ]		3944217	0					
ANR	3944284	PtrMemberAccess	g -> layers		3944217	0					
ANR	3944285	Identifier	g		3944217	0					
ANR	3944286	Identifier	layers		3944217	1					
ANR	3944287	Identifier	layer		3944217	1					
ANR	3944288	Identifier	nodes		3944217	1					
ANR	3944289	Identifier	k		3944217	1					
ANR	3944290	IdentifierDeclStatement	const RANode * ak = get_anode ( gk ) ;	1226:2:31625:31658	3944217	1	True				
ANR	3944291	IdentifierDecl	* ak = get_anode ( gk )		3944217	0					
ANR	3944292	IdentifierDeclType	const RANode *		3944217	0					
ANR	3944293	Identifier	ak		3944217	1					
ANR	3944294	AssignmentExpression	* ak = get_anode ( gk )		3944217	2		=			
ANR	3944295	Identifier	ak		3944217	0					
ANR	3944296	CallExpression	get_anode ( gk )		3944217	1					
ANR	3944297	Callee	get_anode		3944217	0					
ANR	3944298	Identifier	get_anode		3944217	0					
ANR	3944299	ArgumentList	gk		3944217	1					
ANR	3944300	Argument	gk		3944217	0					
ANR	3944301	Identifier	gk		3944217	0					
ANR	3944302	IfStatement	if ( ! ak )		3944217	2					
ANR	3944303	Condition	! ak	1227:6:31666:31668	3944217	0	True				
ANR	3944304	UnaryOperationExpression	! ak		3944217	0					
ANR	3944305	UnaryOperator	!		3944217	0					
ANR	3944306	Identifier	ak		3944217	1					
ANR	3944307	CompoundStatement		11:11:257:257	3944217	1					
ANR	3944308	BreakStatement	break ;	1228:3:31676:31681	3944217	0	True				
ANR	3944309	IfStatement	if ( ak -> is_dummy )		3944217	3					
ANR	3944310	Condition	ak -> is_dummy	1231:6:31694:31705	3944217	0	True				
ANR	3944311	PtrMemberAccess	ak -> is_dummy		3944217	0					
ANR	3944312	Identifier	ak		3944217	0					
ANR	3944313	Identifier	is_dummy		3944217	1					
ANR	3944314	CompoundStatement		15:20:294:294	3944217	1					
ANR	3944315	ReturnStatement	return gk ;	1232:3:31713:31722	3944217	0	True				
ANR	3944316	Identifier	gk		3944217	0					
ANR	3944317	ReturnStatement	return NULL ;	1235:1:31732:31743	3944217	4	True				
ANR	3944318	Identifier	NULL		3944217	0					
ANR	3944319	ReturnType	static RGraphNode *		3944217	1					
ANR	3944320	Identifier	get_right_dummy		3944217	2					
ANR	3944321	ParameterList	"const RAGraph * g , const RGraphNode * n"		3944217	3					
ANR	3944322	Parameter	const RAGraph * g	1217:35:31374:31389	3944217	0	True				
ANR	3944323	ParameterType	const RAGraph *		3944217	0					
ANR	3944324	Identifier	g		3944217	1					
ANR	3944325	Parameter	const RGraphNode * n	1217:53:31392:31410	3944217	1	True				
ANR	3944326	ParameterType	const RGraphNode *		3944217	0					
ANR	3944327	Identifier	n		3944217	1					
ANR	3944328	CFGEntryNode	ENTRY		3944217		True				
ANR	3944329	CFGExitNode	EXIT		3944217		True				
ANR	3944330	Symbol	ak -> is_dummy		3944217						
ANR	3944331	Symbol	* * layer		3944217						
ANR	3944332	Symbol	layer		3944217						
ANR	3944333	Symbol	* layer		3944217						
ANR	3944334	Symbol	g -> layers [ layer ] . n_nodes		3944217						
ANR	3944335	Symbol	get_anode		3944217						
ANR	3944336	Symbol	NULL		3944217						
ANR	3944337	Symbol	an -> layer		3944217						
ANR	3944338	Symbol	* * g		3944217						
ANR	3944339	Symbol	gk		3944217						
ANR	3944340	Symbol	g		3944217						
ANR	3944341	Symbol	g -> layers [ layer ] . nodes		3944217						
ANR	3944342	Symbol	ak		3944217						
ANR	3944343	Symbol	k		3944217						
ANR	3944344	Symbol	an		3944217						
ANR	3944345	Symbol	an -> pos_in_layer		3944217						
ANR	3944346	Symbol	n		3944217						
ANR	3944347	Symbol	* an		3944217						
ANR	3944348	Symbol	* g		3944217						
ANR	3944349	Symbol	* ak		3944217						
ANR	3944350	Symbol	* k		3944217						
ANR	3944351	Symbol	* g -> layers		3944217						
ANR	3944352	Symbol	* * * g		3944217						
ANR	3944353	Symbol	* g -> layers [ layer ] . nodes		3944217						
ANR	3944354	Symbol	g -> layers		3944217						
ANR	3944355	Symbol	* * g -> layers		3944217						
ANR	3944356	Function	adjust_directions	1238:0:31748:33067							
ANR	3944357	FunctionDef	"adjust_directions (const RAGraph * g , int i , int from_up , Sdb * D , Sdb * P)"		3944356	0					
ANR	3944358	CompoundStatement		1238:84:31832:33067	3944356	0					
ANR	3944359	IdentifierDeclStatement	"const RGraphNode * vm = NULL , * wm = NULL ;"	1239:1:31835:31874	3944356	0	True				
ANR	3944360	IdentifierDecl	* vm = NULL		3944356	0					
ANR	3944361	IdentifierDeclType	const RGraphNode *		3944356	0					
ANR	3944362	Identifier	vm		3944356	1					
ANR	3944363	AssignmentExpression	* vm = NULL		3944356	2		=			
ANR	3944364	Identifier	NULL		3944356	0					
ANR	3944365	Identifier	NULL		3944356	1					
ANR	3944366	IdentifierDecl	* wm = NULL		3944356	1					
ANR	3944367	IdentifierDeclType	const RGraphNode *		3944356	0					
ANR	3944368	Identifier	wm		3944356	1					
ANR	3944369	AssignmentExpression	* wm = NULL		3944356	2		=			
ANR	3944370	Identifier	NULL		3944356	0					
ANR	3944371	Identifier	NULL		3944356	1					
ANR	3944372	IdentifierDeclStatement	"const RANode * vma = NULL , * wma = NULL ;"	1240:1:31877:31914	3944356	1	True				
ANR	3944373	IdentifierDecl	* vma = NULL		3944356	0					
ANR	3944374	IdentifierDeclType	const RANode *		3944356	0					
ANR	3944375	Identifier	vma		3944356	1					
ANR	3944376	AssignmentExpression	* vma = NULL		3944356	2		=			
ANR	3944377	Identifier	NULL		3944356	0					
ANR	3944378	Identifier	NULL		3944356	1					
ANR	3944379	IdentifierDecl	* wma = NULL		3944356	1					
ANR	3944380	IdentifierDeclType	const RANode *		3944356	0					
ANR	3944381	Identifier	wma		3944356	1					
ANR	3944382	AssignmentExpression	* wma = NULL		3944356	2		=			
ANR	3944383	Identifier	NULL		3944356	0					
ANR	3944384	Identifier	NULL		3944356	1					
ANR	3944385	IdentifierDeclStatement	"int j , d = from_up ? 1 : - 1 ;"	1241:1:31917:31942	3944356	2	True				
ANR	3944386	IdentifierDecl	j		3944356	0					
ANR	3944387	IdentifierDeclType	int		3944356	0					
ANR	3944388	Identifier	j		3944356	1					
ANR	3944389	IdentifierDecl	d = from_up ? 1 : - 1		3944356	1					
ANR	3944390	IdentifierDeclType	int		3944356	0					
ANR	3944391	Identifier	d		3944356	1					
ANR	3944392	AssignmentExpression	d = from_up ? 1 : - 1		3944356	2		=			
ANR	3944393	Identifier	d		3944356	0					
ANR	3944394	ConditionalExpression	from_up ? 1 : - 1		3944356	1					
ANR	3944395	Condition	from_up		3944356	0					
ANR	3944396	Identifier	from_up		3944356	0					
ANR	3944397	PrimaryExpression	1		3944356	1					
ANR	3944398	UnaryOperationExpression	- 1		3944356	2					
ANR	3944399	UnaryOperator	-		3944356	0					
ANR	3944400	PrimaryExpression	1		3944356	1					
ANR	3944401	IfStatement	if ( i + d < 0 || i + d >= g -> n_layers )		3944356	3					
ANR	3944402	Condition	i + d < 0 || i + d >= g -> n_layers	1243:5:31950:31982	3944356	0	True				
ANR	3944403	OrExpression	i + d < 0 || i + d >= g -> n_layers		3944356	0		||			
ANR	3944404	RelationalExpression	i + d < 0		3944356	0		<			
ANR	3944405	AdditiveExpression	i + d		3944356	0		+			
ANR	3944406	Identifier	i		3944356	0					
ANR	3944407	Identifier	d		3944356	1					
ANR	3944408	PrimaryExpression	0		3944356	1					
ANR	3944409	RelationalExpression	i + d >= g -> n_layers		3944356	1		>=			
ANR	3944410	AdditiveExpression	i + d		3944356	0		+			
ANR	3944411	Identifier	i		3944356	0					
ANR	3944412	Identifier	d		3944356	1					
ANR	3944413	PtrMemberAccess	g -> n_layers		3944356	1					
ANR	3944414	Identifier	g		3944356	0					
ANR	3944415	Identifier	n_layers		3944356	1					
ANR	3944416	CompoundStatement		6:40:152:152	3944356	1					
ANR	3944417	ReturnStatement	return ;	1244:2:31989:31995	3944356	0	True				
ANR	3944418	ForStatement	for ( j = 0 ; j < g -> layers [ i + d ] . n_nodes ; ++ j )		3944356	4					
ANR	3944419	ForInit	j = 0 ;	1246:6:32006:32011	3944356	0	True				
ANR	3944420	AssignmentExpression	j = 0		3944356	0		=			
ANR	3944421	Identifier	j		3944356	0					
ANR	3944422	PrimaryExpression	0		3944356	1					
ANR	3944423	Condition	j < g -> layers [ i + d ] . n_nodes	1246:13:32013:32040	3944356	1	True				
ANR	3944424	RelationalExpression	j < g -> layers [ i + d ] . n_nodes		3944356	0		<			
ANR	3944425	Identifier	j		3944356	0					
ANR	3944426	MemberAccess	g -> layers [ i + d ] . n_nodes		3944356	1					
ANR	3944427	ArrayIndexing	g -> layers [ i + d ]		3944356	0					
ANR	3944428	PtrMemberAccess	g -> layers		3944356	0					
ANR	3944429	Identifier	g		3944356	0					
ANR	3944430	Identifier	layers		3944356	1					
ANR	3944431	AdditiveExpression	i + d		3944356	1		+			
ANR	3944432	Identifier	i		3944356	0					
ANR	3944433	Identifier	d		3944356	1					
ANR	3944434	Identifier	n_nodes		3944356	1					
ANR	3944435	UnaryExpression	++ j	1246:43:32043:32045	3944356	2	True				
ANR	3944436	IncDec	++		3944356	0					
ANR	3944437	Identifier	j		3944356	1					
ANR	3944438	CompoundStatement		11:2:276:316	3944356	3					
ANR	3944439	IdentifierDeclStatement	"const RGraphNode * wp , * vp = g -> layers [ i + d ] . nodes [ j ] ;"	1247:2:32052:32105	3944356	0	True				
ANR	3944440	IdentifierDecl	* wp		3944356	0					
ANR	3944441	IdentifierDeclType	const RGraphNode *		3944356	0					
ANR	3944442	Identifier	wp		3944356	1					
ANR	3944443	IdentifierDecl	* vp = g -> layers [ i + d ] . nodes [ j ]		3944356	1					
ANR	3944444	IdentifierDeclType	const RGraphNode *		3944356	0					
ANR	3944445	Identifier	vp		3944356	1					
ANR	3944446	AssignmentExpression	* vp = g -> layers [ i + d ] . nodes [ j ]		3944356	2		=			
ANR	3944447	Identifier	vp		3944356	0					
ANR	3944448	ArrayIndexing	g -> layers [ i + d ] . nodes [ j ]		3944356	1					
ANR	3944449	MemberAccess	g -> layers [ i + d ] . nodes		3944356	0					
ANR	3944450	ArrayIndexing	g -> layers [ i + d ]		3944356	0					
ANR	3944451	PtrMemberAccess	g -> layers		3944356	0					
ANR	3944452	Identifier	g		3944356	0					
ANR	3944453	Identifier	layers		3944356	1					
ANR	3944454	AdditiveExpression	i + d		3944356	1		+			
ANR	3944455	Identifier	i		3944356	0					
ANR	3944456	Identifier	d		3944356	1					
ANR	3944457	Identifier	nodes		3944356	1					
ANR	3944458	Identifier	j		3944356	1					
ANR	3944459	IdentifierDeclStatement	"const RANode * wpa , * vpa = get_anode ( vp ) ;"	1248:2:32109:32149	3944356	1	True				
ANR	3944460	IdentifierDecl	* wpa		3944356	0					
ANR	3944461	IdentifierDeclType	const RANode *		3944356	0					
ANR	3944462	Identifier	wpa		3944356	1					
ANR	3944463	IdentifierDecl	* vpa = get_anode ( vp )		3944356	1					
ANR	3944464	IdentifierDeclType	const RANode *		3944356	0					
ANR	3944465	Identifier	vpa		3944356	1					
ANR	3944466	AssignmentExpression	* vpa = get_anode ( vp )		3944356	2		=			
ANR	3944467	Identifier	vpa		3944356	0					
ANR	3944468	CallExpression	get_anode ( vp )		3944356	1					
ANR	3944469	Callee	get_anode		3944356	0					
ANR	3944470	Identifier	get_anode		3944356	0					
ANR	3944471	ArgumentList	vp		3944356	1					
ANR	3944472	Argument	vp		3944356	0					
ANR	3944473	Identifier	vp		3944356	0					
ANR	3944474	IfStatement	if ( ! vpa || ! vpa -> is_dummy )		3944356	2					
ANR	3944475	Condition	! vpa || ! vpa -> is_dummy	1250:6:32158:32179	3944356	0	True				
ANR	3944476	OrExpression	! vpa || ! vpa -> is_dummy		3944356	0		||			
ANR	3944477	UnaryOperationExpression	! vpa		3944356	0					
ANR	3944478	UnaryOperator	!		3944356	0					
ANR	3944479	Identifier	vpa		3944356	1					
ANR	3944480	UnaryOperationExpression	! vpa -> is_dummy		3944356	1					
ANR	3944481	UnaryOperator	!		3944356	0					
ANR	3944482	PtrMemberAccess	vpa -> is_dummy		3944356	1					
ANR	3944483	Identifier	vpa		3944356	0					
ANR	3944484	Identifier	is_dummy		3944356	1					
ANR	3944485	CompoundStatement		13:30:349:349	3944356	1					
ANR	3944486	ContinueStatement	continue ;	1251:3:32187:32195	3944356	0	True				
ANR	3944487	IfStatement	if ( from_up )		3944356	3					
ANR	3944488	Condition	from_up	1253:6:32207:32213	3944356	0	True				
ANR	3944489	Identifier	from_up		3944356	0					
ANR	3944490	CompoundStatement		16:15:383:383	3944356	1					
ANR	3944491	ExpressionStatement	"wp = r_list_get_n ( r_graph_innodes ( g -> graph , vp ) , 0 )"	1254:3:32221:32274	3944356	0	True				
ANR	3944492	AssignmentExpression	"wp = r_list_get_n ( r_graph_innodes ( g -> graph , vp ) , 0 )"		3944356	0		=			
ANR	3944493	Identifier	wp		3944356	0					
ANR	3944494	CallExpression	"r_list_get_n ( r_graph_innodes ( g -> graph , vp ) , 0 )"		3944356	1					
ANR	3944495	Callee	r_list_get_n		3944356	0					
ANR	3944496	Identifier	r_list_get_n		3944356	0					
ANR	3944497	ArgumentList	"r_graph_innodes ( g -> graph , vp )"		3944356	1					
ANR	3944498	Argument	"r_graph_innodes ( g -> graph , vp )"		3944356	0					
ANR	3944499	CallExpression	"r_graph_innodes ( g -> graph , vp )"		3944356	0					
ANR	3944500	Callee	r_graph_innodes		3944356	0					
ANR	3944501	Identifier	r_graph_innodes		3944356	0					
ANR	3944502	ArgumentList	g -> graph		3944356	1					
ANR	3944503	Argument	g -> graph		3944356	0					
ANR	3944504	PtrMemberAccess	g -> graph		3944356	0					
ANR	3944505	Identifier	g		3944356	0					
ANR	3944506	Identifier	graph		3944356	1					
ANR	3944507	Argument	vp		3944356	1					
ANR	3944508	Identifier	vp		3944356	0					
ANR	3944509	Argument	0		3944356	1					
ANR	3944510	PrimaryExpression	0		3944356	0					
ANR	3944511	ElseStatement	else		3944356	0					
ANR	3944512	CompoundStatement		18:9:452:452	3944356	0					
ANR	3944513	ExpressionStatement	"wp = r_graph_nth_neighbour ( g -> graph , vp , 0 )"	1256:3:32290:32334	3944356	0	True				
ANR	3944514	AssignmentExpression	"wp = r_graph_nth_neighbour ( g -> graph , vp , 0 )"		3944356	0		=			
ANR	3944515	Identifier	wp		3944356	0					
ANR	3944516	CallExpression	"r_graph_nth_neighbour ( g -> graph , vp , 0 )"		3944356	1					
ANR	3944517	Callee	r_graph_nth_neighbour		3944356	0					
ANR	3944518	Identifier	r_graph_nth_neighbour		3944356	0					
ANR	3944519	ArgumentList	g -> graph		3944356	1					
ANR	3944520	Argument	g -> graph		3944356	0					
ANR	3944521	PtrMemberAccess	g -> graph		3944356	0					
ANR	3944522	Identifier	g		3944356	0					
ANR	3944523	Identifier	graph		3944356	1					
ANR	3944524	Argument	vp		3944356	1					
ANR	3944525	Identifier	vp		3944356	0					
ANR	3944526	Argument	0		3944356	2					
ANR	3944527	PrimaryExpression	0		3944356	0					
ANR	3944528	ExpressionStatement	wpa = get_anode ( wp )	1258:2:32342:32362	3944356	4	True				
ANR	3944529	AssignmentExpression	wpa = get_anode ( wp )		3944356	0		=			
ANR	3944530	Identifier	wpa		3944356	0					
ANR	3944531	CallExpression	get_anode ( wp )		3944356	1					
ANR	3944532	Callee	get_anode		3944356	0					
ANR	3944533	Identifier	get_anode		3944356	0					
ANR	3944534	ArgumentList	wp		3944356	1					
ANR	3944535	Argument	wp		3944356	0					
ANR	3944536	Identifier	wp		3944356	0					
ANR	3944537	IfStatement	if ( ! wpa || ! wpa -> is_dummy )		3944356	5					
ANR	3944538	Condition	! wpa || ! wpa -> is_dummy	1259:6:32370:32391	3944356	0	True				
ANR	3944539	OrExpression	! wpa || ! wpa -> is_dummy		3944356	0		||			
ANR	3944540	UnaryOperationExpression	! wpa		3944356	0					
ANR	3944541	UnaryOperator	!		3944356	0					
ANR	3944542	Identifier	wpa		3944356	1					
ANR	3944543	UnaryOperationExpression	! wpa -> is_dummy		3944356	1					
ANR	3944544	UnaryOperator	!		3944356	0					
ANR	3944545	PtrMemberAccess	wpa -> is_dummy		3944356	1					
ANR	3944546	Identifier	wpa		3944356	0					
ANR	3944547	Identifier	is_dummy		3944356	1					
ANR	3944548	CompoundStatement		22:30:561:561	3944356	1					
ANR	3944549	ContinueStatement	continue ;	1260:3:32399:32407	3944356	0	True				
ANR	3944550	IfStatement	if ( vm )		3944356	6					
ANR	3944551	Condition	vm	1262:6:32419:32420	3944356	0	True				
ANR	3944552	Identifier	vm		3944356	0					
ANR	3944553	CompoundStatement		27:3:628:633	3944356	1					
ANR	3944554	IdentifierDeclStatement	"int p = hash_get_int ( P , wm ) ;"	1263:3:32428:32456	3944356	0	True				
ANR	3944555	IdentifierDecl	"p = hash_get_int ( P , wm )"		3944356	0					
ANR	3944556	IdentifierDeclType	int		3944356	0					
ANR	3944557	Identifier	p		3944356	1					
ANR	3944558	AssignmentExpression	"p = hash_get_int ( P , wm )"		3944356	2		=			
ANR	3944559	Identifier	p		3944356	0					
ANR	3944560	CallExpression	"hash_get_int ( P , wm )"		3944356	1					
ANR	3944561	Callee	hash_get_int		3944356	0					
ANR	3944562	Identifier	hash_get_int		3944356	0					
ANR	3944563	ArgumentList	P		3944356	1					
ANR	3944564	Argument	P		3944356	0					
ANR	3944565	Identifier	P		3944356	0					
ANR	3944566	Argument	wm		3944356	1					
ANR	3944567	Identifier	wm		3944356	0					
ANR	3944568	IdentifierDeclStatement	int k ;	1264:3:32461:32466	3944356	1	True				
ANR	3944569	IdentifierDecl	k		3944356	0					
ANR	3944570	IdentifierDeclType	int		3944356	0					
ANR	3944571	Identifier	k		3944356	1					
ANR	3944572	ForStatement	for ( k = wma -> pos_in_layer + 1 ; k < wpa -> pos_in_layer ; ++ k )		3944356	2					
ANR	3944573	ForInit	k = wma -> pos_in_layer + 1 ;	1266:8:32477:32502	3944356	0	True				
ANR	3944574	AssignmentExpression	k = wma -> pos_in_layer + 1		3944356	0		=			
ANR	3944575	Identifier	k		3944356	0					
ANR	3944576	AdditiveExpression	wma -> pos_in_layer + 1		3944356	1		+			
ANR	3944577	PtrMemberAccess	wma -> pos_in_layer		3944356	0					
ANR	3944578	Identifier	wma		3944356	0					
ANR	3944579	Identifier	pos_in_layer		3944356	1					
ANR	3944580	PrimaryExpression	1		3944356	1					
ANR	3944581	Condition	k < wpa -> pos_in_layer	1266:35:32504:32524	3944356	1	True				
ANR	3944582	RelationalExpression	k < wpa -> pos_in_layer		3944356	0		<			
ANR	3944583	Identifier	k		3944356	0					
ANR	3944584	PtrMemberAccess	wpa -> pos_in_layer		3944356	1					
ANR	3944585	Identifier	wpa		3944356	0					
ANR	3944586	Identifier	pos_in_layer		3944356	1					
ANR	3944587	UnaryExpression	++ k	1266:58:32527:32529	3944356	2	True				
ANR	3944588	IncDec	++		3944356	0					
ANR	3944589	Identifier	k		3944356	1					
ANR	3944590	CompoundStatement		31:4:763:795	3944356	3					
ANR	3944591	IdentifierDeclStatement	const RGraphNode * w = g -> layers [ wma -> layer ] . nodes [ k ] ;	1267:4:32538:32590	3944356	0	True				
ANR	3944592	IdentifierDecl	* w = g -> layers [ wma -> layer ] . nodes [ k ]		3944356	0					
ANR	3944593	IdentifierDeclType	const RGraphNode *		3944356	0					
ANR	3944594	Identifier	w		3944356	1					
ANR	3944595	AssignmentExpression	* w = g -> layers [ wma -> layer ] . nodes [ k ]		3944356	2		=			
ANR	3944596	Identifier	w		3944356	0					
ANR	3944597	ArrayIndexing	g -> layers [ wma -> layer ] . nodes [ k ]		3944356	1					
ANR	3944598	MemberAccess	g -> layers [ wma -> layer ] . nodes		3944356	0					
ANR	3944599	ArrayIndexing	g -> layers [ wma -> layer ]		3944356	0					
ANR	3944600	PtrMemberAccess	g -> layers		3944356	0					
ANR	3944601	Identifier	g		3944356	0					
ANR	3944602	Identifier	layers		3944356	1					
ANR	3944603	PtrMemberAccess	wma -> layer		3944356	1					
ANR	3944604	Identifier	wma		3944356	0					
ANR	3944605	Identifier	layer		3944356	1					
ANR	3944606	Identifier	nodes		3944356	1					
ANR	3944607	Identifier	k		3944356	1					
ANR	3944608	IdentifierDeclStatement	const RANode * aw = get_anode ( w ) ;	1268:4:32596:32628	3944356	1	True				
ANR	3944609	IdentifierDecl	* aw = get_anode ( w )		3944356	0					
ANR	3944610	IdentifierDeclType	const RANode *		3944356	0					
ANR	3944611	Identifier	aw		3944356	1					
ANR	3944612	AssignmentExpression	* aw = get_anode ( w )		3944356	2		=			
ANR	3944613	Identifier	aw		3944356	0					
ANR	3944614	CallExpression	get_anode ( w )		3944356	1					
ANR	3944615	Callee	get_anode		3944356	0					
ANR	3944616	Identifier	get_anode		3944356	0					
ANR	3944617	ArgumentList	w		3944356	1					
ANR	3944618	Argument	w		3944356	0					
ANR	3944619	Identifier	w		3944356	0					
ANR	3944620	IfStatement	if ( aw && aw -> is_dummy )		3944356	2					
ANR	3944621	Condition	aw && aw -> is_dummy	1269:8:32638:32655	3944356	0	True				
ANR	3944622	AndExpression	aw && aw -> is_dummy		3944356	0		&&			
ANR	3944623	Identifier	aw		3944356	0					
ANR	3944624	PtrMemberAccess	aw -> is_dummy		3944356	1					
ANR	3944625	Identifier	aw		3944356	0					
ANR	3944626	Identifier	is_dummy		3944356	1					
ANR	3944627	CompoundStatement		32:28:825:825	3944356	1					
ANR	3944628	ExpressionStatement	"p &= hash_get_int ( P , w )"	1270:5:32665:32689	3944356	0	True				
ANR	3944629	AssignmentExpression	"p &= hash_get_int ( P , w )"		3944356	0		&=			
ANR	3944630	Identifier	p		3944356	0					
ANR	3944631	CallExpression	"hash_get_int ( P , w )"		3944356	1					
ANR	3944632	Callee	hash_get_int		3944356	0					
ANR	3944633	Identifier	hash_get_int		3944356	0					
ANR	3944634	ArgumentList	P		3944356	1					
ANR	3944635	Argument	P		3944356	0					
ANR	3944636	Identifier	P		3944356	0					
ANR	3944637	Argument	w		3944356	1					
ANR	3944638	Identifier	w		3944356	0					
ANR	3944639	IfStatement	if ( p )		3944356	3					
ANR	3944640	Condition	p	1273:7:32709:32709	3944356	0	True				
ANR	3944641	Identifier	p		3944356	0					
ANR	3944642	CompoundStatement		36:10:879:879	3944356	1					
ANR	3944643	ExpressionStatement	"hash_set ( D , vm , from_up )"	1274:4:32718:32743	3944356	0	True				
ANR	3944644	CallExpression	"hash_set ( D , vm , from_up )"		3944356	0					
ANR	3944645	Callee	hash_set		3944356	0					
ANR	3944646	Identifier	hash_set		3944356	0					
ANR	3944647	ArgumentList	D		3944356	1					
ANR	3944648	Argument	D		3944356	0					
ANR	3944649	Identifier	D		3944356	0					
ANR	3944650	Argument	vm		3944356	1					
ANR	3944651	Identifier	vm		3944356	0					
ANR	3944652	Argument	from_up		3944356	2					
ANR	3944653	Identifier	from_up		3944356	0					
ANR	3944654	ForStatement	for ( k = vma -> pos_in_layer + 1 ; k < vpa -> pos_in_layer ; ++ k )		3944356	1					
ANR	3944655	ForInit	k = vma -> pos_in_layer + 1 ;	1275:9:32754:32779	3944356	0	True				
ANR	3944656	AssignmentExpression	k = vma -> pos_in_layer + 1		3944356	0		=			
ANR	3944657	Identifier	k		3944356	0					
ANR	3944658	AdditiveExpression	vma -> pos_in_layer + 1		3944356	1		+			
ANR	3944659	PtrMemberAccess	vma -> pos_in_layer		3944356	0					
ANR	3944660	Identifier	vma		3944356	0					
ANR	3944661	Identifier	pos_in_layer		3944356	1					
ANR	3944662	PrimaryExpression	1		3944356	1					
ANR	3944663	Condition	k < vpa -> pos_in_layer	1275:36:32781:32801	3944356	1	True				
ANR	3944664	RelationalExpression	k < vpa -> pos_in_layer		3944356	0		<			
ANR	3944665	Identifier	k		3944356	0					
ANR	3944666	PtrMemberAccess	vpa -> pos_in_layer		3944356	1					
ANR	3944667	Identifier	vpa		3944356	0					
ANR	3944668	Identifier	pos_in_layer		3944356	1					
ANR	3944669	UnaryExpression	++ k	1275:59:32804:32806	3944356	2	True				
ANR	3944670	IncDec	++		3944356	0					
ANR	3944671	Identifier	k		3944356	1					
ANR	3944672	CompoundStatement		40:5:1042:1074	3944356	3					
ANR	3944673	IdentifierDeclStatement	const RGraphNode * v = g -> layers [ vma -> layer ] . nodes [ k ] ;	1276:5:32816:32868	3944356	0	True				
ANR	3944674	IdentifierDecl	* v = g -> layers [ vma -> layer ] . nodes [ k ]		3944356	0					
ANR	3944675	IdentifierDeclType	const RGraphNode *		3944356	0					
ANR	3944676	Identifier	v		3944356	1					
ANR	3944677	AssignmentExpression	* v = g -> layers [ vma -> layer ] . nodes [ k ]		3944356	2		=			
ANR	3944678	Identifier	v		3944356	0					
ANR	3944679	ArrayIndexing	g -> layers [ vma -> layer ] . nodes [ k ]		3944356	1					
ANR	3944680	MemberAccess	g -> layers [ vma -> layer ] . nodes		3944356	0					
ANR	3944681	ArrayIndexing	g -> layers [ vma -> layer ]		3944356	0					
ANR	3944682	PtrMemberAccess	g -> layers		3944356	0					
ANR	3944683	Identifier	g		3944356	0					
ANR	3944684	Identifier	layers		3944356	1					
ANR	3944685	PtrMemberAccess	vma -> layer		3944356	1					
ANR	3944686	Identifier	vma		3944356	0					
ANR	3944687	Identifier	layer		3944356	1					
ANR	3944688	Identifier	nodes		3944356	1					
ANR	3944689	Identifier	k		3944356	1					
ANR	3944690	IdentifierDeclStatement	const RANode * av = get_anode ( v ) ;	1277:5:32875:32907	3944356	1	True				
ANR	3944691	IdentifierDecl	* av = get_anode ( v )		3944356	0					
ANR	3944692	IdentifierDeclType	const RANode *		3944356	0					
ANR	3944693	Identifier	av		3944356	1					
ANR	3944694	AssignmentExpression	* av = get_anode ( v )		3944356	2		=			
ANR	3944695	Identifier	av		3944356	0					
ANR	3944696	CallExpression	get_anode ( v )		3944356	1					
ANR	3944697	Callee	get_anode		3944356	0					
ANR	3944698	Identifier	get_anode		3944356	0					
ANR	3944699	ArgumentList	v		3944356	1					
ANR	3944700	Argument	v		3944356	0					
ANR	3944701	Identifier	v		3944356	0					
ANR	3944702	IfStatement	if ( av && av -> is_dummy )		3944356	2					
ANR	3944703	Condition	av && av -> is_dummy	1278:9:32918:32935	3944356	0	True				
ANR	3944704	AndExpression	av && av -> is_dummy		3944356	0		&&			
ANR	3944705	Identifier	av		3944356	0					
ANR	3944706	PtrMemberAccess	av -> is_dummy		3944356	1					
ANR	3944707	Identifier	av		3944356	0					
ANR	3944708	Identifier	is_dummy		3944356	1					
ANR	3944709	CompoundStatement		41:29:1105:1105	3944356	1					
ANR	3944710	ExpressionStatement	"hash_set ( D , v , from_up )"	1279:6:32946:32970	3944356	0	True				
ANR	3944711	CallExpression	"hash_set ( D , v , from_up )"		3944356	0					
ANR	3944712	Callee	hash_set		3944356	0					
ANR	3944713	Identifier	hash_set		3944356	0					
ANR	3944714	ArgumentList	D		3944356	1					
ANR	3944715	Argument	D		3944356	0					
ANR	3944716	Identifier	D		3944356	0					
ANR	3944717	Argument	v		3944356	1					
ANR	3944718	Identifier	v		3944356	0					
ANR	3944719	Argument	from_up		3944356	2					
ANR	3944720	Identifier	from_up		3944356	0					
ANR	3944721	ExpressionStatement	vm = vp	1284:2:32996:33003	3944356	7	True				
ANR	3944722	AssignmentExpression	vm = vp		3944356	0		=			
ANR	3944723	Identifier	vm		3944356	0					
ANR	3944724	Identifier	vp		3944356	1					
ANR	3944725	ExpressionStatement	wm = wp	1285:2:33007:33014	3944356	8	True				
ANR	3944726	AssignmentExpression	wm = wp		3944356	0		=			
ANR	3944727	Identifier	wm		3944356	0					
ANR	3944728	Identifier	wp		3944356	1					
ANR	3944729	ExpressionStatement	vma = get_anode ( vm )	1286:2:33018:33038	3944356	9	True				
ANR	3944730	AssignmentExpression	vma = get_anode ( vm )		3944356	0		=			
ANR	3944731	Identifier	vma		3944356	0					
ANR	3944732	CallExpression	get_anode ( vm )		3944356	1					
ANR	3944733	Callee	get_anode		3944356	0					
ANR	3944734	Identifier	get_anode		3944356	0					
ANR	3944735	ArgumentList	vm		3944356	1					
ANR	3944736	Argument	vm		3944356	0					
ANR	3944737	Identifier	vm		3944356	0					
ANR	3944738	ExpressionStatement	wma = get_anode ( wm )	1287:2:33042:33062	3944356	10	True				
ANR	3944739	AssignmentExpression	wma = get_anode ( wm )		3944356	0		=			
ANR	3944740	Identifier	wma		3944356	0					
ANR	3944741	CallExpression	get_anode ( wm )		3944356	1					
ANR	3944742	Callee	get_anode		3944356	0					
ANR	3944743	Identifier	get_anode		3944356	0					
ANR	3944744	ArgumentList	wm		3944356	1					
ANR	3944745	Argument	wm		3944356	0					
ANR	3944746	Identifier	wm		3944356	0					
ANR	3944747	ReturnType	static void		3944356	1					
ANR	3944748	Identifier	adjust_directions		3944356	2					
ANR	3944749	ParameterList	"const RAGraph * g , int i , int from_up , Sdb * D , Sdb * P"		3944356	3					
ANR	3944750	Parameter	const RAGraph * g	1238:30:31778:31793	3944356	0	True				
ANR	3944751	ParameterType	const RAGraph *		3944356	0					
ANR	3944752	Identifier	g		3944356	1					
ANR	3944753	Parameter	int i	1238:48:31796:31800	3944356	1	True				
ANR	3944754	ParameterType	int		3944356	0					
ANR	3944755	Identifier	i		3944356	1					
ANR	3944756	Parameter	int from_up	1238:55:31803:31813	3944356	2	True				
ANR	3944757	ParameterType	int		3944356	0					
ANR	3944758	Identifier	from_up		3944356	1					
ANR	3944759	Parameter	Sdb * D	1238:68:31816:31821	3944356	3	True				
ANR	3944760	ParameterType	Sdb *		3944356	0					
ANR	3944761	Identifier	D		3944356	1					
ANR	3944762	Parameter	Sdb * P	1238:76:31824:31829	3944356	4	True				
ANR	3944763	ParameterType	Sdb *		3944356	0					
ANR	3944764	Identifier	P		3944356	1					
ANR	3944765	CFGEntryNode	ENTRY		3944356		True				
ANR	3944766	CFGExitNode	EXIT		3944356		True				
ANR	3944767	Symbol	vpa -> is_dummy		3944356						
ANR	3944768	Symbol	* * * vma		3944356						
ANR	3944769	Symbol	vma -> pos_in_layer		3944356						
ANR	3944770	Symbol	g -> n_layers		3944356						
ANR	3944771	Symbol	* g -> layers [ wma -> layer ] . nodes		3944356						
ANR	3944772	Symbol	vma		3944356						
ANR	3944773	Symbol	* g -> layers [ i + d ] . nodes		3944356						
ANR	3944774	Symbol	* vpa		3944356						
ANR	3944775	Symbol	r_graph_nth_neighbour		3944356						
ANR	3944776	Symbol	* * wma		3944356						
ANR	3944777	Symbol	wma -> pos_in_layer		3944356						
ANR	3944778	Symbol	* * i		3944356						
ANR	3944779	Symbol	NULL		3944356						
ANR	3944780	Symbol	* * g		3944356						
ANR	3944781	Symbol	* wma -> layer		3944356						
ANR	3944782	Symbol	* * d		3944356						
ANR	3944783	Symbol	wpa		3944356						
ANR	3944784	Symbol	r_list_get_n		3944356						
ANR	3944785	Symbol	wma -> layer		3944356						
ANR	3944786	Symbol	* * vma -> layer		3944356						
ANR	3944787	Symbol	* wma		3944356						
ANR	3944788	Symbol	aw -> is_dummy		3944356						
ANR	3944789	Symbol	av		3944356						
ANR	3944790	Symbol	aw		3944356						
ANR	3944791	Symbol	vm		3944356						
ANR	3944792	Symbol	* g -> layers		3944356						
ANR	3944793	Symbol	vp		3944356						
ANR	3944794	Symbol	* * * g		3944356						
ANR	3944795	Symbol	av -> is_dummy		3944356						
ANR	3944796	Symbol	from_up		3944356						
ANR	3944797	Symbol	D		3944356						
ANR	3944798	Symbol	* * wma -> layer		3944356						
ANR	3944799	Symbol	* * * wma		3944356						
ANR	3944800	Symbol	wma		3944356						
ANR	3944801	Symbol	wpa -> pos_in_layer		3944356						
ANR	3944802	Symbol	vma -> layer		3944356						
ANR	3944803	Symbol	r_graph_innodes		3944356						
ANR	3944804	Symbol	g -> layers [ vma -> layer ] . nodes		3944356						
ANR	3944805	Symbol	P		3944356						
ANR	3944806	Symbol	* wpa		3944356						
ANR	3944807	Symbol	* vma -> layer		3944356						
ANR	3944808	Symbol	g -> graph		3944356						
ANR	3944809	Symbol	wm		3944356						
ANR	3944810	Symbol	wp		3944356						
ANR	3944811	Symbol	* * vma		3944356						
ANR	3944812	Symbol	g -> layers [ i + d ] . nodes		3944356						
ANR	3944813	Symbol	* g -> layers [ vma -> layer ] . nodes		3944356						
ANR	3944814	Symbol	get_anode		3944356						
ANR	3944815	Symbol	d		3944356						
ANR	3944816	Symbol	vpa		3944356						
ANR	3944817	Symbol	g		3944356						
ANR	3944818	Symbol	i		3944356						
ANR	3944819	Symbol	j		3944356						
ANR	3944820	Symbol	k		3944356						
ANR	3944821	Symbol	wpa -> is_dummy		3944356						
ANR	3944822	Symbol	hash_get_int		3944356						
ANR	3944823	Symbol	* d		3944356						
ANR	3944824	Symbol	p		3944356						
ANR	3944825	Symbol	vpa -> pos_in_layer		3944356						
ANR	3944826	Symbol	* g		3944356						
ANR	3944827	Symbol	* i		3944356						
ANR	3944828	Symbol	* j		3944356						
ANR	3944829	Symbol	g -> layers [ wma -> layer ] . nodes		3944356						
ANR	3944830	Symbol	* vma		3944356						
ANR	3944831	Symbol	* k		3944356						
ANR	3944832	Symbol	g -> layers [ i + d ] . n_nodes		3944356						
ANR	3944833	Symbol	v		3944356						
ANR	3944834	Symbol	w		3944356						
ANR	3944835	Symbol	* av		3944356						
ANR	3944836	Symbol	g -> layers		3944356						
ANR	3944837	Symbol	* * g -> layers		3944356						
ANR	3944838	Symbol	* aw		3944356						
ANR	3944839	Function	place_single	1292:0:33111:33975							
ANR	3944840	FunctionDef	"place_single (const RAGraph * g , int l , const RGraphNode * bm , const RGraphNode * bp , int from_up , int va)"		3944839	0					
ANR	3944841	CompoundStatement		1292:115:33226:33975	3944839	0					
ANR	3944842	IdentifierDeclStatement	"const RGraphNode * gk , * v = g -> layers [ l ] . nodes [ va ] ;"	1293:1:33229:33278	3944839	0	True				
ANR	3944843	IdentifierDecl	* gk		3944839	0					
ANR	3944844	IdentifierDeclType	const RGraphNode *		3944839	0					
ANR	3944845	Identifier	gk		3944839	1					
ANR	3944846	IdentifierDecl	* v = g -> layers [ l ] . nodes [ va ]		3944839	1					
ANR	3944847	IdentifierDeclType	const RGraphNode *		3944839	0					
ANR	3944848	Identifier	v		3944839	1					
ANR	3944849	AssignmentExpression	* v = g -> layers [ l ] . nodes [ va ]		3944839	2		=			
ANR	3944850	Identifier	v		3944839	0					
ANR	3944851	ArrayIndexing	g -> layers [ l ] . nodes [ va ]		3944839	1					
ANR	3944852	MemberAccess	g -> layers [ l ] . nodes		3944839	0					
ANR	3944853	ArrayIndexing	g -> layers [ l ]		3944839	0					
ANR	3944854	PtrMemberAccess	g -> layers		3944839	0					
ANR	3944855	Identifier	g		3944839	0					
ANR	3944856	Identifier	layers		3944839	1					
ANR	3944857	Identifier	l		3944839	1					
ANR	3944858	Identifier	nodes		3944839	1					
ANR	3944859	Identifier	va		3944839	1					
ANR	3944860	IdentifierDeclStatement	const RANode * ak ;	1294:1:33281:33297	3944839	1	True				
ANR	3944861	IdentifierDecl	* ak		3944839	0					
ANR	3944862	IdentifierDeclType	const RANode *		3944839	0					
ANR	3944863	Identifier	ak		3944839	1					
ANR	3944864	IdentifierDeclStatement	RANode * av = get_anode ( v ) ;	1295:1:33300:33326	3944839	2	True				
ANR	3944865	IdentifierDecl	* av = get_anode ( v )		3944839	0					
ANR	3944866	IdentifierDeclType	RANode *		3944839	0					
ANR	3944867	Identifier	av		3944839	1					
ANR	3944868	AssignmentExpression	* av = get_anode ( v )		3944839	2		=			
ANR	3944869	Identifier	av		3944839	0					
ANR	3944870	CallExpression	get_anode ( v )		3944839	1					
ANR	3944871	Callee	get_anode		3944839	0					
ANR	3944872	Identifier	get_anode		3944839	0					
ANR	3944873	ArgumentList	v		3944839	1					
ANR	3944874	Argument	v		3944839	0					
ANR	3944875	Identifier	v		3944839	0					
ANR	3944876	IfStatement	if ( ! av )		3944839	3					
ANR	3944877	Condition	! av	1296:5:33333:33335	3944839	0	True				
ANR	3944878	UnaryOperationExpression	! av		3944839	0					
ANR	3944879	UnaryOperator	!		3944839	0					
ANR	3944880	Identifier	av		3944839	1					
ANR	3944881	CompoundStatement		5:10:111:111	3944839	1					
ANR	3944882	ReturnStatement	return ;	1297:2:33342:33348	3944839	0	True				
ANR	3944883	IdentifierDeclStatement	const RListIter * itk ;	1299:1:33354:33374	3944839	4	True				
ANR	3944884	IdentifierDecl	* itk		3944839	0					
ANR	3944885	IdentifierDeclType	const RListIter *		3944839	0					
ANR	3944886	Identifier	itk		3944839	1					
ANR	3944887	IdentifierDeclStatement	"const RList * neigh = from_up ? r_graph_innodes ( g -> graph , v ) : r_graph_get_neighbours ( g -> graph , v ) ;"	1301:1:33378:33488	3944839	5	True				
ANR	3944888	IdentifierDecl	"* neigh = from_up ? r_graph_innodes ( g -> graph , v ) : r_graph_get_neighbours ( g -> graph , v )"		3944839	0					
ANR	3944889	IdentifierDeclType	const RList *		3944839	0					
ANR	3944890	Identifier	neigh		3944839	1					
ANR	3944891	AssignmentExpression	"* neigh = from_up ? r_graph_innodes ( g -> graph , v ) : r_graph_get_neighbours ( g -> graph , v )"		3944839	2		=			
ANR	3944892	Identifier	neigh		3944839	0					
ANR	3944893	ConditionalExpression	"from_up ? r_graph_innodes ( g -> graph , v ) : r_graph_get_neighbours ( g -> graph , v )"		3944839	1					
ANR	3944894	Condition	from_up		3944839	0					
ANR	3944895	Identifier	from_up		3944839	0					
ANR	3944896	CallExpression	"r_graph_innodes ( g -> graph , v )"		3944839	1					
ANR	3944897	Callee	r_graph_innodes		3944839	0					
ANR	3944898	Identifier	r_graph_innodes		3944839	0					
ANR	3944899	ArgumentList	g -> graph		3944839	1					
ANR	3944900	Argument	g -> graph		3944839	0					
ANR	3944901	PtrMemberAccess	g -> graph		3944839	0					
ANR	3944902	Identifier	g		3944839	0					
ANR	3944903	Identifier	graph		3944839	1					
ANR	3944904	Argument	v		3944839	1					
ANR	3944905	Identifier	v		3944839	0					
ANR	3944906	CallExpression	"r_graph_get_neighbours ( g -> graph , v )"		3944839	2					
ANR	3944907	Callee	r_graph_get_neighbours		3944839	0					
ANR	3944908	Identifier	r_graph_get_neighbours		3944839	0					
ANR	3944909	ArgumentList	g -> graph		3944839	1					
ANR	3944910	Argument	g -> graph		3944839	0					
ANR	3944911	PtrMemberAccess	g -> graph		3944839	0					
ANR	3944912	Identifier	g		3944839	0					
ANR	3944913	Identifier	graph		3944839	1					
ANR	3944914	Argument	v		3944839	1					
ANR	3944915	Identifier	v		3944839	0					
ANR	3944916	IdentifierDeclStatement	int len = r_list_length ( neigh ) ;	1305:1:33492:33523	3944839	6	True				
ANR	3944917	IdentifierDecl	len = r_list_length ( neigh )		3944839	0					
ANR	3944918	IdentifierDeclType	int		3944839	0					
ANR	3944919	Identifier	len		3944839	1					
ANR	3944920	AssignmentExpression	len = r_list_length ( neigh )		3944839	2		=			
ANR	3944921	Identifier	len		3944839	0					
ANR	3944922	CallExpression	r_list_length ( neigh )		3944839	1					
ANR	3944923	Callee	r_list_length		3944839	0					
ANR	3944924	Identifier	r_list_length		3944839	0					
ANR	3944925	ArgumentList	neigh		3944839	1					
ANR	3944926	Argument	neigh		3944839	0					
ANR	3944927	Identifier	neigh		3944839	0					
ANR	3944928	IfStatement	if ( len == 0 )		3944839	7					
ANR	3944929	Condition	len == 0	1306:5:33530:33537	3944839	0	True				
ANR	3944930	EqualityExpression	len == 0		3944839	0		==			
ANR	3944931	Identifier	len		3944839	0					
ANR	3944932	PrimaryExpression	0		3944839	1					
ANR	3944933	CompoundStatement		15:15:313:313	3944839	1					
ANR	3944934	ReturnStatement	return ;	1307:2:33544:33550	3944839	0	True				
ANR	3944935	IdentifierDeclStatement	int sum_x = 0 ;	1310:1:33557:33570	3944839	8	True				
ANR	3944936	IdentifierDecl	sum_x = 0		3944839	0					
ANR	3944937	IdentifierDeclType	int		3944839	0					
ANR	3944938	Identifier	sum_x		3944839	1					
ANR	3944939	AssignmentExpression	sum_x = 0		3944839	2		=			
ANR	3944940	Identifier	sum_x		3944839	0					
ANR	3944941	PrimaryExpression	0		3944839	1					
ANR	3944942	Statement	graph_foreach_anode	1311:1:33573:33591	3944839	9	True				
ANR	3944943	Statement	(	1311:21:33593:33593	3944839	10	True				
ANR	3944944	Statement	neigh	1311:22:33594:33598	3944839	11	True				
ANR	3944945	Statement	","	1311:27:33599:33599	3944839	12	True				
ANR	3944946	Statement	itk	1311:29:33601:33603	3944839	13	True				
ANR	3944947	Statement	","	1311:32:33604:33604	3944839	14	True				
ANR	3944948	Statement	gk	1311:34:33606:33607	3944839	15	True				
ANR	3944949	Statement	","	1311:36:33608:33608	3944839	16	True				
ANR	3944950	Statement	ak	1311:38:33610:33611	3944839	17	True				
ANR	3944951	Statement	)	1311:40:33612:33612	3944839	18	True				
ANR	3944952	CompoundStatement		20:42:387:387	3944839	19					
ANR	3944953	IfStatement	if ( ak -> is_reversed )		3944839	0					
ANR	3944954	Condition	ak -> is_reversed	1312:6:33622:33636	3944839	0	True				
ANR	3944955	PtrMemberAccess	ak -> is_reversed		3944839	0					
ANR	3944956	Identifier	ak		3944839	0					
ANR	3944957	Identifier	is_reversed		3944839	1					
ANR	3944958	CompoundStatement		21:23:412:412	3944839	1					
ANR	3944959	ExpressionStatement	len --	1313:3:33644:33649	3944839	0	True				
ANR	3944960	PostIncDecOperationExpression	len --		3944839	0					
ANR	3944961	Identifier	len		3944839	0					
ANR	3944962	IncDec	--		3944839	1					
ANR	3944963	ContinueStatement	continue ;	1314:3:33654:33662	3944839	1	True				
ANR	3944964	ExpressionStatement	sum_x += ak -> x	1316:2:33670:33684	3944839	1	True				
ANR	3944965	AssignmentExpression	sum_x += ak -> x		3944839	0		+=			
ANR	3944966	Identifier	sum_x		3944839	0					
ANR	3944967	PtrMemberAccess	ak -> x		3944839	1					
ANR	3944968	Identifier	ak		3944839	0					
ANR	3944969	Identifier	x		3944839	1					
ANR	3944970	IfStatement	if ( len == 0 )		3944839	20					
ANR	3944971	Condition	len == 0	1319:5:33695:33702	3944839	0	True				
ANR	3944972	EqualityExpression	len == 0		3944839	0		==			
ANR	3944973	Identifier	len		3944839	0					
ANR	3944974	PrimaryExpression	0		3944839	1					
ANR	3944975	CompoundStatement		28:15:478:478	3944839	1					
ANR	3944976	ReturnStatement	return ;	1320:2:33709:33715	3944839	0	True				
ANR	3944977	IfStatement	if ( av )		3944839	21					
ANR	3944978	Condition	av	1322:5:33725:33726	3944839	0	True				
ANR	3944979	Identifier	av		3944839	0					
ANR	3944980	CompoundStatement		31:9:502:502	3944839	1					
ANR	3944981	ExpressionStatement	av -> x = sum_x / len	1323:2:33733:33752	3944839	0	True				
ANR	3944982	AssignmentExpression	av -> x = sum_x / len		3944839	0		=			
ANR	3944983	PtrMemberAccess	av -> x		3944839	0					
ANR	3944984	Identifier	av		3944839	0					
ANR	3944985	Identifier	x		3944839	1					
ANR	3944986	MultiplicativeExpression	sum_x / len		3944839	1		/			
ANR	3944987	Identifier	sum_x		3944839	0					
ANR	3944988	Identifier	len		3944839	1					
ANR	3944989	IfStatement	if ( bm )		3944839	22					
ANR	3944990	Condition	bm	1325:5:33762:33763	3944839	0	True				
ANR	3944991	Identifier	bm		3944839	0					
ANR	3944992	CompoundStatement		35:2:543:577	3944839	1					
ANR	3944993	IdentifierDeclStatement	const RANode * bma = get_anode ( bm ) ;	1326:2:33770:33804	3944839	0	True				
ANR	3944994	IdentifierDecl	* bma = get_anode ( bm )		3944839	0					
ANR	3944995	IdentifierDeclType	const RANode *		3944839	0					
ANR	3944996	Identifier	bma		3944839	1					
ANR	3944997	AssignmentExpression	* bma = get_anode ( bm )		3944839	2		=			
ANR	3944998	Identifier	bma		3944839	0					
ANR	3944999	CallExpression	get_anode ( bm )		3944839	1					
ANR	3945000	Callee	get_anode		3944839	0					
ANR	3945001	Identifier	get_anode		3944839	0					
ANR	3945002	ArgumentList	bm		3944839	1					
ANR	3945003	Argument	bm		3944839	0					
ANR	3945004	Identifier	bm		3944839	0					
ANR	3945005	ExpressionStatement	"av -> x = R_MAX ( av -> x , bma -> x + dist_nodes ( g , bm , v ) )"	1327:2:33808:33861	3944839	1	True				
ANR	3945006	AssignmentExpression	"av -> x = R_MAX ( av -> x , bma -> x + dist_nodes ( g , bm , v ) )"		3944839	0		=			
ANR	3945007	PtrMemberAccess	av -> x		3944839	0					
ANR	3945008	Identifier	av		3944839	0					
ANR	3945009	Identifier	x		3944839	1					
ANR	3945010	CallExpression	"R_MAX ( av -> x , bma -> x + dist_nodes ( g , bm , v ) )"		3944839	1					
ANR	3945011	Callee	R_MAX		3944839	0					
ANR	3945012	Identifier	R_MAX		3944839	0					
ANR	3945013	ArgumentList	av -> x		3944839	1					
ANR	3945014	Argument	av -> x		3944839	0					
ANR	3945015	PtrMemberAccess	av -> x		3944839	0					
ANR	3945016	Identifier	av		3944839	0					
ANR	3945017	Identifier	x		3944839	1					
ANR	3945018	Argument	"bma -> x + dist_nodes ( g , bm , v )"		3944839	1					
ANR	3945019	AdditiveExpression	"bma -> x + dist_nodes ( g , bm , v )"		3944839	0		+			
ANR	3945020	PtrMemberAccess	bma -> x		3944839	0					
ANR	3945021	Identifier	bma		3944839	0					
ANR	3945022	Identifier	x		3944839	1					
ANR	3945023	CallExpression	"dist_nodes ( g , bm , v )"		3944839	1					
ANR	3945024	Callee	dist_nodes		3944839	0					
ANR	3945025	Identifier	dist_nodes		3944839	0					
ANR	3945026	ArgumentList	g		3944839	1					
ANR	3945027	Argument	g		3944839	0					
ANR	3945028	Identifier	g		3944839	0					
ANR	3945029	Argument	bm		3944839	1					
ANR	3945030	Identifier	bm		3944839	0					
ANR	3945031	Argument	v		3944839	2					
ANR	3945032	Identifier	v		3944839	0					
ANR	3945033	IfStatement	if ( bp )		3944839	23					
ANR	3945034	Condition	bp	1329:5:33871:33872	3944839	0	True				
ANR	3945035	Identifier	bp		3944839	0					
ANR	3945036	CompoundStatement		39:2:652:686	3944839	1					
ANR	3945037	IdentifierDeclStatement	const RANode * bpa = get_anode ( bp ) ;	1330:2:33879:33913	3944839	0	True				
ANR	3945038	IdentifierDecl	* bpa = get_anode ( bp )		3944839	0					
ANR	3945039	IdentifierDeclType	const RANode *		3944839	0					
ANR	3945040	Identifier	bpa		3944839	1					
ANR	3945041	AssignmentExpression	* bpa = get_anode ( bp )		3944839	2		=			
ANR	3945042	Identifier	bpa		3944839	0					
ANR	3945043	CallExpression	get_anode ( bp )		3944839	1					
ANR	3945044	Callee	get_anode		3944839	0					
ANR	3945045	Identifier	get_anode		3944839	0					
ANR	3945046	ArgumentList	bp		3944839	1					
ANR	3945047	Argument	bp		3944839	0					
ANR	3945048	Identifier	bp		3944839	0					
ANR	3945049	ExpressionStatement	"av -> x = R_MIN ( av -> x , bpa -> x - dist_nodes ( g , v , bp ) )"	1331:2:33917:33970	3944839	1	True				
ANR	3945050	AssignmentExpression	"av -> x = R_MIN ( av -> x , bpa -> x - dist_nodes ( g , v , bp ) )"		3944839	0		=			
ANR	3945051	PtrMemberAccess	av -> x		3944839	0					
ANR	3945052	Identifier	av		3944839	0					
ANR	3945053	Identifier	x		3944839	1					
ANR	3945054	CallExpression	"R_MIN ( av -> x , bpa -> x - dist_nodes ( g , v , bp ) )"		3944839	1					
ANR	3945055	Callee	R_MIN		3944839	0					
ANR	3945056	Identifier	R_MIN		3944839	0					
ANR	3945057	ArgumentList	av -> x		3944839	1					
ANR	3945058	Argument	av -> x		3944839	0					
ANR	3945059	PtrMemberAccess	av -> x		3944839	0					
ANR	3945060	Identifier	av		3944839	0					
ANR	3945061	Identifier	x		3944839	1					
ANR	3945062	Argument	"bpa -> x - dist_nodes ( g , v , bp )"		3944839	1					
ANR	3945063	AdditiveExpression	"bpa -> x - dist_nodes ( g , v , bp )"		3944839	0		-			
ANR	3945064	PtrMemberAccess	bpa -> x		3944839	0					
ANR	3945065	Identifier	bpa		3944839	0					
ANR	3945066	Identifier	x		3944839	1					
ANR	3945067	CallExpression	"dist_nodes ( g , v , bp )"		3944839	1					
ANR	3945068	Callee	dist_nodes		3944839	0					
ANR	3945069	Identifier	dist_nodes		3944839	0					
ANR	3945070	ArgumentList	g		3944839	1					
ANR	3945071	Argument	g		3944839	0					
ANR	3945072	Identifier	g		3944839	0					
ANR	3945073	Argument	v		3944839	1					
ANR	3945074	Identifier	v		3944839	0					
ANR	3945075	Argument	bp		3944839	2					
ANR	3945076	Identifier	bp		3944839	0					
ANR	3945077	ReturnType	static void		3944839	1					
ANR	3945078	Identifier	place_single		3944839	2					
ANR	3945079	ParameterList	"const RAGraph * g , int l , const RGraphNode * bm , const RGraphNode * bp , int from_up , int va"		3944839	3					
ANR	3945080	Parameter	const RAGraph * g	1292:25:33136:33151	3944839	0	True				
ANR	3945081	ParameterType	const RAGraph *		3944839	0					
ANR	3945082	Identifier	g		3944839	1					
ANR	3945083	Parameter	int l	1292:43:33154:33158	3944839	1	True				
ANR	3945084	ParameterType	int		3944839	0					
ANR	3945085	Identifier	l		3944839	1					
ANR	3945086	Parameter	const RGraphNode * bm	1292:50:33161:33180	3944839	2	True				
ANR	3945087	ParameterType	const RGraphNode *		3944839	0					
ANR	3945088	Identifier	bm		3944839	1					
ANR	3945089	Parameter	const RGraphNode * bp	1292:72:33183:33202	3944839	3	True				
ANR	3945090	ParameterType	const RGraphNode *		3944839	0					
ANR	3945091	Identifier	bp		3944839	1					
ANR	3945092	Parameter	int from_up	1292:94:33205:33215	3944839	4	True				
ANR	3945093	ParameterType	int		3944839	0					
ANR	3945094	Identifier	from_up		3944839	1					
ANR	3945095	Parameter	int va	1292:107:33218:33223	3944839	5	True				
ANR	3945096	ParameterType	int		3944839	0					
ANR	3945097	Identifier	va		3944839	1					
ANR	3945098	CFGEntryNode	ENTRY		3944839		True				
ANR	3945099	CFGExitNode	EXIT		3944839		True				
ANR	3945100	CFGErrorNode	ERROR		3944839		True				
ANR	3945101	Symbol	dist_nodes		3944839						
ANR	3945102	Symbol	* bpa		3944839						
ANR	3945103	Symbol	from_up		3944839						
ANR	3945104	Symbol	r_graph_get_neighbours		3944839						
ANR	3945105	Symbol	* g -> layers [ l ] . nodes		3944839						
ANR	3945106	Symbol	bm		3944839						
ANR	3945107	Symbol	bp		3944839						
ANR	3945108	Symbol	neigh		3944839						
ANR	3945109	Symbol	r_graph_innodes		3944839						
ANR	3945110	Symbol	sum_x		3944839						
ANR	3945111	Symbol	bpa		3944839						
ANR	3945112	Symbol	len		3944839						
ANR	3945113	Symbol	ak -> x		3944839						
ANR	3945114	Symbol	g -> graph		3944839						
ANR	3945115	Symbol	* * l		3944839						
ANR	3945116	Symbol	* bma		3944839						
ANR	3945117	Symbol	itk		3944839						
ANR	3945118	Symbol	get_anode		3944839						
ANR	3945119	Symbol	* * g		3944839						
ANR	3945120	Symbol	gk		3944839						
ANR	3945121	Symbol	av -> x		3944839						
ANR	3945122	Symbol	ak -> is_reversed		3944839						
ANR	3945123	Symbol	g		3944839						
ANR	3945124	Symbol	ak		3944839						
ANR	3945125	Symbol	R_MIN		3944839						
ANR	3945126	Symbol	va		3944839						
ANR	3945127	Symbol	bma -> x		3944839						
ANR	3945128	Symbol	l		3944839						
ANR	3945129	Symbol	g -> layers [ l ] . nodes		3944839						
ANR	3945130	Symbol	* g		3944839						
ANR	3945131	Symbol	* va		3944839						
ANR	3945132	Symbol	* ak		3944839						
ANR	3945133	Symbol	av		3944839						
ANR	3945134	Symbol	* l		3944839						
ANR	3945135	Symbol	v		3944839						
ANR	3945136	Symbol	bma		3944839						
ANR	3945137	Symbol	* av		3944839						
ANR	3945138	Symbol	R_MAX		3944839						
ANR	3945139	Symbol	* g -> layers		3944839						
ANR	3945140	Symbol	* * * g		3944839						
ANR	3945141	Symbol	g -> layers		3944839						
ANR	3945142	Symbol	* * g -> layers		3944839						
ANR	3945143	Symbol	bpa -> x		3944839						
ANR	3945144	Symbol	r_list_length		3944839						
ANR	3945145	Function	RM_listcmp	1335:0:33978:34081							
ANR	3945146	FunctionDef	"RM_listcmp (const struct len_pos_t * a , const struct len_pos_t * b)"		3945145	0					
ANR	3945147	CompoundStatement		1335:76:34054:34081	3945145	0					
ANR	3945148	ReturnStatement	return a -> pos < b -> pos ;	1336:1:34057:34079	3945145	0	True				
ANR	3945149	RelationalExpression	a -> pos < b -> pos		3945145	0		<			
ANR	3945150	PtrMemberAccess	a -> pos		3945145	0					
ANR	3945151	Identifier	a		3945145	0					
ANR	3945152	Identifier	pos		3945145	1					
ANR	3945153	PtrMemberAccess	b -> pos		3945145	1					
ANR	3945154	Identifier	b		3945145	0					
ANR	3945155	Identifier	pos		3945145	1					
ANR	3945156	ReturnType	static int		3945145	1					
ANR	3945157	Identifier	RM_listcmp		3945145	2					
ANR	3945158	ParameterList	"const struct len_pos_t * a , const struct len_pos_t * b"		3945145	3					
ANR	3945159	Parameter	const struct len_pos_t * a	1335:22:34000:34024	3945145	0	True				
ANR	3945160	ParameterType	const struct len_pos_t *		3945145	0					
ANR	3945161	Identifier	a		3945145	1					
ANR	3945162	Parameter	const struct len_pos_t * b	1335:49:34027:34051	3945145	1	True				
ANR	3945163	ParameterType	const struct len_pos_t *		3945145	0					
ANR	3945164	Identifier	b		3945145	1					
ANR	3945165	CFGEntryNode	ENTRY		3945145		True				
ANR	3945166	CFGExitNode	EXIT		3945145		True				
ANR	3945167	Symbol	a		3945145						
ANR	3945168	Symbol	b		3945145						
ANR	3945169	Symbol	a -> pos		3945145						
ANR	3945170	Symbol	* a		3945145						
ANR	3945171	Symbol	* b		3945145						
ANR	3945172	Symbol	b -> pos		3945145						
ANR	3945173	Function	RP_listcmp	1339:0:34084:34188							
ANR	3945174	FunctionDef	"RP_listcmp (const struct len_pos_t * a , const struct len_pos_t * b)"		3945173	0					
ANR	3945175	CompoundStatement		1339:76:34160:34188	3945173	0					
ANR	3945176	ReturnStatement	return a -> pos >= b -> pos ;	1340:1:34163:34186	3945173	0	True				
ANR	3945177	RelationalExpression	a -> pos >= b -> pos		3945173	0		>=			
ANR	3945178	PtrMemberAccess	a -> pos		3945173	0					
ANR	3945179	Identifier	a		3945173	0					
ANR	3945180	Identifier	pos		3945173	1					
ANR	3945181	PtrMemberAccess	b -> pos		3945173	1					
ANR	3945182	Identifier	b		3945173	0					
ANR	3945183	Identifier	pos		3945173	1					
ANR	3945184	ReturnType	static int		3945173	1					
ANR	3945185	Identifier	RP_listcmp		3945173	2					
ANR	3945186	ParameterList	"const struct len_pos_t * a , const struct len_pos_t * b"		3945173	3					
ANR	3945187	Parameter	const struct len_pos_t * a	1339:22:34106:34130	3945173	0	True				
ANR	3945188	ParameterType	const struct len_pos_t *		3945173	0					
ANR	3945189	Identifier	a		3945173	1					
ANR	3945190	Parameter	const struct len_pos_t * b	1339:49:34133:34157	3945173	1	True				
ANR	3945191	ParameterType	const struct len_pos_t *		3945173	0					
ANR	3945192	Identifier	b		3945173	1					
ANR	3945193	CFGEntryNode	ENTRY		3945173		True				
ANR	3945194	CFGExitNode	EXIT		3945173		True				
ANR	3945195	Symbol	a		3945173						
ANR	3945196	Symbol	b		3945173						
ANR	3945197	Symbol	a -> pos		3945173						
ANR	3945198	Symbol	* a		3945173						
ANR	3945199	Symbol	* b		3945173						
ANR	3945200	Symbol	b -> pos		3945173						
ANR	3945201	Function	collect_changes	1343:0:34191:35854							
ANR	3945202	FunctionDef	"collect_changes (const RAGraph * g , int l , const RGraphNode * b , int from_up , int s , int e , RList * list , int is_left)"		3945201	0					
ANR	3945203	CompoundStatement		1343:127:34318:35854	3945201	0					
ANR	3945204	IdentifierDeclStatement	const RGraphNode * vt = g -> layers [ l ] . nodes [ e - 1 ] ;	1344:1:34321:34369	3945201	0	True				
ANR	3945205	IdentifierDecl	* vt = g -> layers [ l ] . nodes [ e - 1 ]		3945201	0					
ANR	3945206	IdentifierDeclType	const RGraphNode *		3945201	0					
ANR	3945207	Identifier	vt		3945201	1					
ANR	3945208	AssignmentExpression	* vt = g -> layers [ l ] . nodes [ e - 1 ]		3945201	2		=			
ANR	3945209	Identifier	vt		3945201	0					
ANR	3945210	ArrayIndexing	g -> layers [ l ] . nodes [ e - 1 ]		3945201	1					
ANR	3945211	MemberAccess	g -> layers [ l ] . nodes		3945201	0					
ANR	3945212	ArrayIndexing	g -> layers [ l ]		3945201	0					
ANR	3945213	PtrMemberAccess	g -> layers		3945201	0					
ANR	3945214	Identifier	g		3945201	0					
ANR	3945215	Identifier	layers		3945201	1					
ANR	3945216	Identifier	l		3945201	1					
ANR	3945217	Identifier	nodes		3945201	1					
ANR	3945218	AdditiveExpression	e - 1		3945201	1		-			
ANR	3945219	Identifier	e		3945201	0					
ANR	3945220	PrimaryExpression	1		3945201	1					
ANR	3945221	IdentifierDeclStatement	const RGraphNode * vtp = g -> layers [ l ] . nodes [ s ] ;	1345:1:34372:34417	3945201	1	True				
ANR	3945222	IdentifierDecl	* vtp = g -> layers [ l ] . nodes [ s ]		3945201	0					
ANR	3945223	IdentifierDeclType	const RGraphNode *		3945201	0					
ANR	3945224	Identifier	vtp		3945201	1					
ANR	3945225	AssignmentExpression	* vtp = g -> layers [ l ] . nodes [ s ]		3945201	2		=			
ANR	3945226	Identifier	vtp		3945201	0					
ANR	3945227	ArrayIndexing	g -> layers [ l ] . nodes [ s ]		3945201	1					
ANR	3945228	MemberAccess	g -> layers [ l ] . nodes		3945201	0					
ANR	3945229	ArrayIndexing	g -> layers [ l ]		3945201	0					
ANR	3945230	PtrMemberAccess	g -> layers		3945201	0					
ANR	3945231	Identifier	g		3945201	0					
ANR	3945232	Identifier	layers		3945201	1					
ANR	3945233	Identifier	l		3945201	1					
ANR	3945234	Identifier	nodes		3945201	1					
ANR	3945235	Identifier	s		3945201	1					
ANR	3945236	IdentifierDeclStatement	struct len_pos_t * cx ;	1346:1:34420:34440	3945201	2	True				
ANR	3945237	IdentifierDecl	* cx		3945201	0					
ANR	3945238	IdentifierDeclType	struct len_pos_t *		3945201	0					
ANR	3945239	Identifier	cx		3945201	1					
ANR	3945240	IdentifierDeclStatement	int i ;	1347:1:34443:34448	3945201	3	True				
ANR	3945241	IdentifierDecl	i		3945201	0					
ANR	3945242	IdentifierDeclType	int		3945201	0					
ANR	3945243	Identifier	i		3945201	1					
ANR	3945244	IdentifierDeclStatement	RListComparator lcmp = is_left ? ( RListComparator ) RM_listcmp : ( RListComparator ) RP_listcmp ;	1349:1:34452:34542	3945201	4	True				
ANR	3945245	IdentifierDecl	lcmp = is_left ? ( RListComparator ) RM_listcmp : ( RListComparator ) RP_listcmp		3945201	0					
ANR	3945246	IdentifierDeclType	RListComparator		3945201	0					
ANR	3945247	Identifier	lcmp		3945201	1					
ANR	3945248	AssignmentExpression	lcmp = is_left ? ( RListComparator ) RM_listcmp : ( RListComparator ) RP_listcmp		3945201	2		=			
ANR	3945249	Identifier	lcmp		3945201	0					
ANR	3945250	ConditionalExpression	is_left ? ( RListComparator ) RM_listcmp : ( RListComparator ) RP_listcmp		3945201	1					
ANR	3945251	Condition	is_left		3945201	0					
ANR	3945252	Identifier	is_left		3945201	0					
ANR	3945253	CastExpression	( RListComparator ) RM_listcmp		3945201	1					
ANR	3945254	CastTarget	RListComparator		3945201	0					
ANR	3945255	Identifier	RM_listcmp		3945201	1					
ANR	3945256	CastExpression	( RListComparator ) RP_listcmp		3945201	2					
ANR	3945257	CastTarget	RListComparator		3945201	0					
ANR	3945258	Identifier	RP_listcmp		3945201	1					
ANR	3945259	ForStatement	for ( i = is_left ? s : e - 1 ; ( is_left && i < e ) || ( ! is_left && i >= s ) ; i = is_left ? i + 1 : i - 1 )		3945201	5					
ANR	3945260	ForInit	i = is_left ? s : e - 1 ;	1351:6:34551:34572	3945201	0	True				
ANR	3945261	AssignmentExpression	i = is_left ? s : e - 1		3945201	0		=			
ANR	3945262	Identifier	i		3945201	0					
ANR	3945263	ConditionalExpression	is_left ? s : e - 1		3945201	1					
ANR	3945264	Condition	is_left		3945201	0					
ANR	3945265	Identifier	is_left		3945201	0					
ANR	3945266	Identifier	s		3945201	1					
ANR	3945267	AdditiveExpression	e - 1		3945201	2		-			
ANR	3945268	Identifier	e		3945201	0					
ANR	3945269	PrimaryExpression	1		3945201	1					
ANR	3945270	Condition	( is_left && i < e ) || ( ! is_left && i >= s )	1351:29:34574:34615	3945201	1	True				
ANR	3945271	OrExpression	( is_left && i < e ) || ( ! is_left && i >= s )		3945201	0		||			
ANR	3945272	AndExpression	is_left && i < e		3945201	0		&&			
ANR	3945273	Identifier	is_left		3945201	0					
ANR	3945274	RelationalExpression	i < e		3945201	1		<			
ANR	3945275	Identifier	i		3945201	0					
ANR	3945276	Identifier	e		3945201	1					
ANR	3945277	AndExpression	! is_left && i >= s		3945201	1		&&			
ANR	3945278	UnaryOperationExpression	! is_left		3945201	0					
ANR	3945279	UnaryOperator	!		3945201	0					
ANR	3945280	Identifier	is_left		3945201	1					
ANR	3945281	RelationalExpression	i >= s		3945201	1		>=			
ANR	3945282	Identifier	i		3945201	0					
ANR	3945283	Identifier	s		3945201	1					
ANR	3945284	AssignmentExpression	i = is_left ? i + 1 : i - 1	1351:73:34618:34642	3945201	2	True	=			
ANR	3945285	Identifier	i		3945201	0					
ANR	3945286	ConditionalExpression	is_left ? i + 1 : i - 1		3945201	1					
ANR	3945287	Condition	is_left		3945201	0					
ANR	3945288	Identifier	is_left		3945201	0					
ANR	3945289	AdditiveExpression	i + 1		3945201	1		+			
ANR	3945290	Identifier	i		3945201	0					
ANR	3945291	PrimaryExpression	1		3945201	1					
ANR	3945292	AdditiveExpression	i - 1		3945201	2		-			
ANR	3945293	Identifier	i		3945201	0					
ANR	3945294	PrimaryExpression	1		3945201	1					
ANR	3945295	CompoundStatement		14:2:470:479	3945201	3					
ANR	3945296	IdentifierDeclStatement	"const RGraphNode * v , * vi = g -> layers [ l ] . nodes [ i ] ;"	1352:2:34649:34697	3945201	0	True				
ANR	3945297	IdentifierDecl	* v		3945201	0					
ANR	3945298	IdentifierDeclType	const RGraphNode *		3945201	0					
ANR	3945299	Identifier	v		3945201	1					
ANR	3945300	IdentifierDecl	* vi = g -> layers [ l ] . nodes [ i ]		3945201	1					
ANR	3945301	IdentifierDeclType	const RGraphNode *		3945201	0					
ANR	3945302	Identifier	vi		3945201	1					
ANR	3945303	AssignmentExpression	* vi = g -> layers [ l ] . nodes [ i ]		3945201	2		=			
ANR	3945304	Identifier	vi		3945201	0					
ANR	3945305	ArrayIndexing	g -> layers [ l ] . nodes [ i ]		3945201	1					
ANR	3945306	MemberAccess	g -> layers [ l ] . nodes		3945201	0					
ANR	3945307	ArrayIndexing	g -> layers [ l ]		3945201	0					
ANR	3945308	PtrMemberAccess	g -> layers		3945201	0					
ANR	3945309	Identifier	g		3945201	0					
ANR	3945310	Identifier	layers		3945201	1					
ANR	3945311	Identifier	l		3945201	1					
ANR	3945312	Identifier	nodes		3945201	1					
ANR	3945313	Identifier	i		3945201	1					
ANR	3945314	IdentifierDeclStatement	"const RANode * av , * avi = get_anode ( vi ) ;"	1353:2:34701:34740	3945201	1	True				
ANR	3945315	IdentifierDecl	* av		3945201	0					
ANR	3945316	IdentifierDeclType	const RANode *		3945201	0					
ANR	3945317	Identifier	av		3945201	1					
ANR	3945318	IdentifierDecl	* avi = get_anode ( vi )		3945201	1					
ANR	3945319	IdentifierDeclType	const RANode *		3945201	0					
ANR	3945320	Identifier	avi		3945201	1					
ANR	3945321	AssignmentExpression	* avi = get_anode ( vi )		3945201	2		=			
ANR	3945322	Identifier	avi		3945201	0					
ANR	3945323	CallExpression	get_anode ( vi )		3945201	1					
ANR	3945324	Callee	get_anode		3945201	0					
ANR	3945325	Identifier	get_anode		3945201	0					
ANR	3945326	ArgumentList	vi		3945201	1					
ANR	3945327	Argument	vi		3945201	0					
ANR	3945328	Identifier	vi		3945201	0					
ANR	3945329	IdentifierDeclStatement	const RList * neigh ;	1354:2:34744:34762	3945201	2	True				
ANR	3945330	IdentifierDecl	* neigh		3945201	0					
ANR	3945331	IdentifierDeclType	const RList *		3945201	0					
ANR	3945332	Identifier	neigh		3945201	1					
ANR	3945333	IdentifierDeclStatement	const RListIter * it ;	1355:2:34766:34785	3945201	3	True				
ANR	3945334	IdentifierDecl	* it		3945201	0					
ANR	3945335	IdentifierDeclType	const RListIter *		3945201	0					
ANR	3945336	Identifier	it		3945201	1					
ANR	3945337	IdentifierDeclStatement	int c = 0 ;	1356:2:34789:34798	3945201	4	True				
ANR	3945338	IdentifierDecl	c = 0		3945201	0					
ANR	3945339	IdentifierDeclType	int		3945201	0					
ANR	3945340	Identifier	c		3945201	1					
ANR	3945341	AssignmentExpression	c = 0		3945201	2		=			
ANR	3945342	Identifier	c		3945201	0					
ANR	3945343	PrimaryExpression	0		3945201	1					
ANR	3945344	IfStatement	if ( ! avi )		3945201	5					
ANR	3945345	Condition	! avi	1358:6:34807:34810	3945201	0	True				
ANR	3945346	UnaryOperationExpression	! avi		3945201	0					
ANR	3945347	UnaryOperator	!		3945201	0					
ANR	3945348	Identifier	avi		3945201	1					
ANR	3945349	CompoundStatement		16:12:494:494	3945201	1					
ANR	3945350	ContinueStatement	continue ;	1359:3:34818:34826	3945201	0	True				
ANR	3945351	ExpressionStatement	"neigh = from_up ? r_graph_innodes ( g -> graph , vi ) : r_graph_get_neighbours ( g -> graph , vi )"	1361:2:34834:34935	3945201	6	True				
ANR	3945352	AssignmentExpression	"neigh = from_up ? r_graph_innodes ( g -> graph , vi ) : r_graph_get_neighbours ( g -> graph , vi )"		3945201	0		=			
ANR	3945353	Identifier	neigh		3945201	0					
ANR	3945354	ConditionalExpression	"from_up ? r_graph_innodes ( g -> graph , vi ) : r_graph_get_neighbours ( g -> graph , vi )"		3945201	1					
ANR	3945355	Condition	from_up		3945201	0					
ANR	3945356	Identifier	from_up		3945201	0					
ANR	3945357	CallExpression	"r_graph_innodes ( g -> graph , vi )"		3945201	1					
ANR	3945358	Callee	r_graph_innodes		3945201	0					
ANR	3945359	Identifier	r_graph_innodes		3945201	0					
ANR	3945360	ArgumentList	g -> graph		3945201	1					
ANR	3945361	Argument	g -> graph		3945201	0					
ANR	3945362	PtrMemberAccess	g -> graph		3945201	0					
ANR	3945363	Identifier	g		3945201	0					
ANR	3945364	Identifier	graph		3945201	1					
ANR	3945365	Argument	vi		3945201	1					
ANR	3945366	Identifier	vi		3945201	0					
ANR	3945367	CallExpression	"r_graph_get_neighbours ( g -> graph , vi )"		3945201	2					
ANR	3945368	Callee	r_graph_get_neighbours		3945201	0					
ANR	3945369	Identifier	r_graph_get_neighbours		3945201	0					
ANR	3945370	ArgumentList	g -> graph		3945201	1					
ANR	3945371	Argument	g -> graph		3945201	0					
ANR	3945372	PtrMemberAccess	g -> graph		3945201	0					
ANR	3945373	Identifier	g		3945201	0					
ANR	3945374	Identifier	graph		3945201	1					
ANR	3945375	Argument	vi		3945201	1					
ANR	3945376	Identifier	vi		3945201	0					
ANR	3945377	Statement	graph_foreach_anode	1365:2:34940:34958	3945201	7	True				
ANR	3945378	Statement	(	1365:22:34960:34960	3945201	8	True				
ANR	3945379	Statement	neigh	1365:23:34961:34965	3945201	9	True				
ANR	3945380	Statement	","	1365:28:34966:34966	3945201	10	True				
ANR	3945381	Statement	it	1365:30:34968:34969	3945201	11	True				
ANR	3945382	Statement	","	1365:32:34970:34970	3945201	12	True				
ANR	3945383	Statement	v	1365:34:34972:34972	3945201	13	True				
ANR	3945384	Statement	","	1365:35:34973:34973	3945201	14	True				
ANR	3945385	Statement	av	1365:37:34975:34976	3945201	15	True				
ANR	3945386	Statement	)	1365:39:34977:34977	3945201	16	True				
ANR	3945387	CompoundStatement		23:41:660:660	3945201	17					
ANR	3945388	IfStatement	if ( ( is_left && av -> x >= avi -> x ) || ( ! is_left && av -> x <= avi -> x ) )		3945201	0					
ANR	3945389	Condition	( is_left && av -> x >= avi -> x ) || ( ! is_left && av -> x <= avi -> x )	1366:7:34988:35048	3945201	0	True				
ANR	3945390	OrExpression	( is_left && av -> x >= avi -> x ) || ( ! is_left && av -> x <= avi -> x )		3945201	0		||			
ANR	3945391	AndExpression	is_left && av -> x >= avi -> x		3945201	0		&&			
ANR	3945392	Identifier	is_left		3945201	0					
ANR	3945393	RelationalExpression	av -> x >= avi -> x		3945201	1		>=			
ANR	3945394	PtrMemberAccess	av -> x		3945201	0					
ANR	3945395	Identifier	av		3945201	0					
ANR	3945396	Identifier	x		3945201	1					
ANR	3945397	PtrMemberAccess	avi -> x		3945201	1					
ANR	3945398	Identifier	avi		3945201	0					
ANR	3945399	Identifier	x		3945201	1					
ANR	3945400	AndExpression	! is_left && av -> x <= avi -> x		3945201	1		&&			
ANR	3945401	UnaryOperationExpression	! is_left		3945201	0					
ANR	3945402	UnaryOperator	!		3945201	0					
ANR	3945403	Identifier	is_left		3945201	1					
ANR	3945404	RelationalExpression	av -> x <= avi -> x		3945201	1		<=			
ANR	3945405	PtrMemberAccess	av -> x		3945201	0					
ANR	3945406	Identifier	av		3945201	0					
ANR	3945407	Identifier	x		3945201	1					
ANR	3945408	PtrMemberAccess	avi -> x		3945201	1					
ANR	3945409	Identifier	avi		3945201	0					
ANR	3945410	Identifier	x		3945201	1					
ANR	3945411	CompoundStatement		24:70:732:732	3945201	1					
ANR	3945412	ExpressionStatement	c ++	1367:4:35057:35060	3945201	0	True				
ANR	3945413	PostIncDecOperationExpression	c ++		3945201	0					
ANR	3945414	Identifier	c		3945201	0					
ANR	3945415	IncDec	++		3945201	1					
ANR	3945416	ElseStatement	else		3945201	0					
ANR	3945417	CompoundStatement		26:10:753:753	3945201	0					
ANR	3945418	Statement	cx	1369:4:35078:35079	3945201	0	True				
ANR	3945419	Statement	=	1369:7:35081:35081	3945201	1	True				
ANR	3945420	Statement	R_NEW	1369:9:35083:35087	3945201	2	True				
ANR	3945421	Statement	(	1369:15:35089:35089	3945201	3	True				
ANR	3945422	Statement	struct	1369:16:35090:35095	3945201	4	True				
ANR	3945423	Statement	len_pos_t	1369:23:35097:35105	3945201	5	True				
ANR	3945424	Statement	)	1369:32:35106:35106	3945201	6	True				
ANR	3945425	ExpressionStatement		1369:33:35107:35107	3945201	7	True				
ANR	3945426	ExpressionStatement	c --	1370:4:35113:35116	3945201	8	True				
ANR	3945427	PostIncDecOperationExpression	c --		3945201	0					
ANR	3945428	Identifier	c		3945201	0					
ANR	3945429	IncDec	--		3945201	1					
ANR	3945430	ExpressionStatement	cx -> len = 2	1371:4:35122:35133	3945201	9	True				
ANR	3945431	AssignmentExpression	cx -> len = 2		3945201	0		=			
ANR	3945432	PtrMemberAccess	cx -> len		3945201	0					
ANR	3945433	Identifier	cx		3945201	0					
ANR	3945434	Identifier	len		3945201	1					
ANR	3945435	PrimaryExpression	2		3945201	1					
ANR	3945436	ExpressionStatement	cx -> pos = av -> x	1372:4:35139:35154	3945201	10	True				
ANR	3945437	AssignmentExpression	cx -> pos = av -> x		3945201	0		=			
ANR	3945438	PtrMemberAccess	cx -> pos		3945201	0					
ANR	3945439	Identifier	cx		3945201	0					
ANR	3945440	Identifier	pos		3945201	1					
ANR	3945441	PtrMemberAccess	av -> x		3945201	1					
ANR	3945442	Identifier	av		3945201	0					
ANR	3945443	Identifier	x		3945201	1					
ANR	3945444	IfStatement	if ( is_left )		3945201	11					
ANR	3945445	Condition	is_left	1373:8:35164:35170	3945201	0	True				
ANR	3945446	Identifier	is_left		3945201	0					
ANR	3945447	CompoundStatement		31:17:854:854	3945201	1					
ANR	3945448	ExpressionStatement	"cx -> pos += dist_nodes ( g , vi , vt )"	1374:5:35180:35213	3945201	0	True				
ANR	3945449	AssignmentExpression	"cx -> pos += dist_nodes ( g , vi , vt )"		3945201	0		+=			
ANR	3945450	PtrMemberAccess	cx -> pos		3945201	0					
ANR	3945451	Identifier	cx		3945201	0					
ANR	3945452	Identifier	pos		3945201	1					
ANR	3945453	CallExpression	"dist_nodes ( g , vi , vt )"		3945201	1					
ANR	3945454	Callee	dist_nodes		3945201	0					
ANR	3945455	Identifier	dist_nodes		3945201	0					
ANR	3945456	ArgumentList	g		3945201	1					
ANR	3945457	Argument	g		3945201	0					
ANR	3945458	Identifier	g		3945201	0					
ANR	3945459	Argument	vi		3945201	1					
ANR	3945460	Identifier	vi		3945201	0					
ANR	3945461	Argument	vt		3945201	2					
ANR	3945462	Identifier	vt		3945201	0					
ANR	3945463	ElseStatement	else		3945201	0					
ANR	3945464	CompoundStatement		33:11:907:907	3945201	0					
ANR	3945465	ExpressionStatement	"cx -> pos -= dist_nodes ( g , vtp , vi )"	1376:5:35233:35267	3945201	0	True				
ANR	3945466	AssignmentExpression	"cx -> pos -= dist_nodes ( g , vtp , vi )"		3945201	0		-=			
ANR	3945467	PtrMemberAccess	cx -> pos		3945201	0					
ANR	3945468	Identifier	cx		3945201	0					
ANR	3945469	Identifier	pos		3945201	1					
ANR	3945470	CallExpression	"dist_nodes ( g , vtp , vi )"		3945201	1					
ANR	3945471	Callee	dist_nodes		3945201	0					
ANR	3945472	Identifier	dist_nodes		3945201	0					
ANR	3945473	ArgumentList	g		3945201	1					
ANR	3945474	Argument	g		3945201	0					
ANR	3945475	Identifier	g		3945201	0					
ANR	3945476	Argument	vtp		3945201	1					
ANR	3945477	Identifier	vtp		3945201	0					
ANR	3945478	Argument	vi		3945201	2					
ANR	3945479	Identifier	vi		3945201	0					
ANR	3945480	ExpressionStatement	"r_list_add_sorted ( list , cx , lcmp )"	1378:4:35279:35313	3945201	12	True				
ANR	3945481	CallExpression	"r_list_add_sorted ( list , cx , lcmp )"		3945201	0					
ANR	3945482	Callee	r_list_add_sorted		3945201	0					
ANR	3945483	Identifier	r_list_add_sorted		3945201	0					
ANR	3945484	ArgumentList	list		3945201	1					
ANR	3945485	Argument	list		3945201	0					
ANR	3945486	Identifier	list		3945201	0					
ANR	3945487	Argument	cx		3945201	1					
ANR	3945488	Identifier	cx		3945201	0					
ANR	3945489	Argument	lcmp		3945201	2					
ANR	3945490	Identifier	lcmp		3945201	0					
ANR	3945491	Statement	cx	1382:2:35327:35328	3945201	18	True				
ANR	3945492	Statement	=	1382:5:35330:35330	3945201	19	True				
ANR	3945493	Statement	R_NEW0	1382:7:35332:35337	3945201	20	True				
ANR	3945494	Statement	(	1382:14:35339:35339	3945201	21	True				
ANR	3945495	Statement	struct	1382:15:35340:35345	3945201	22	True				
ANR	3945496	Statement	len_pos_t	1382:22:35347:35355	3945201	23	True				
ANR	3945497	Statement	)	1382:31:35356:35356	3945201	24	True				
ANR	3945498	ExpressionStatement		1382:32:35357:35357	3945201	25	True				
ANR	3945499	ExpressionStatement	cx -> len = c	1383:2:35361:35372	3945201	26	True				
ANR	3945500	AssignmentExpression	cx -> len = c		3945201	0		=			
ANR	3945501	PtrMemberAccess	cx -> len		3945201	0					
ANR	3945502	Identifier	cx		3945201	0					
ANR	3945503	Identifier	len		3945201	1					
ANR	3945504	Identifier	c		3945201	1					
ANR	3945505	ExpressionStatement	cx -> pos = avi -> x	1384:2:35376:35392	3945201	27	True				
ANR	3945506	AssignmentExpression	cx -> pos = avi -> x		3945201	0		=			
ANR	3945507	PtrMemberAccess	cx -> pos		3945201	0					
ANR	3945508	Identifier	cx		3945201	0					
ANR	3945509	Identifier	pos		3945201	1					
ANR	3945510	PtrMemberAccess	avi -> x		3945201	1					
ANR	3945511	Identifier	avi		3945201	0					
ANR	3945512	Identifier	x		3945201	1					
ANR	3945513	IfStatement	if ( is_left )		3945201	28					
ANR	3945514	Condition	is_left	1385:6:35400:35406	3945201	0	True				
ANR	3945515	Identifier	is_left		3945201	0					
ANR	3945516	CompoundStatement		43:15:1090:1090	3945201	1					
ANR	3945517	ExpressionStatement	"cx -> pos += dist_nodes ( g , vi , vt )"	1386:3:35414:35447	3945201	0	True				
ANR	3945518	AssignmentExpression	"cx -> pos += dist_nodes ( g , vi , vt )"		3945201	0		+=			
ANR	3945519	PtrMemberAccess	cx -> pos		3945201	0					
ANR	3945520	Identifier	cx		3945201	0					
ANR	3945521	Identifier	pos		3945201	1					
ANR	3945522	CallExpression	"dist_nodes ( g , vi , vt )"		3945201	1					
ANR	3945523	Callee	dist_nodes		3945201	0					
ANR	3945524	Identifier	dist_nodes		3945201	0					
ANR	3945525	ArgumentList	g		3945201	1					
ANR	3945526	Argument	g		3945201	0					
ANR	3945527	Identifier	g		3945201	0					
ANR	3945528	Argument	vi		3945201	1					
ANR	3945529	Identifier	vi		3945201	0					
ANR	3945530	Argument	vt		3945201	2					
ANR	3945531	Identifier	vt		3945201	0					
ANR	3945532	ElseStatement	else		3945201	0					
ANR	3945533	CompoundStatement		45:9:1139:1139	3945201	0					
ANR	3945534	ExpressionStatement	"cx -> pos -= dist_nodes ( g , vtp , vi )"	1388:3:35463:35497	3945201	0	True				
ANR	3945535	AssignmentExpression	"cx -> pos -= dist_nodes ( g , vtp , vi )"		3945201	0		-=			
ANR	3945536	PtrMemberAccess	cx -> pos		3945201	0					
ANR	3945537	Identifier	cx		3945201	0					
ANR	3945538	Identifier	pos		3945201	1					
ANR	3945539	CallExpression	"dist_nodes ( g , vtp , vi )"		3945201	1					
ANR	3945540	Callee	dist_nodes		3945201	0					
ANR	3945541	Identifier	dist_nodes		3945201	0					
ANR	3945542	ArgumentList	g		3945201	1					
ANR	3945543	Argument	g		3945201	0					
ANR	3945544	Identifier	g		3945201	0					
ANR	3945545	Argument	vtp		3945201	1					
ANR	3945546	Identifier	vtp		3945201	0					
ANR	3945547	Argument	vi		3945201	2					
ANR	3945548	Identifier	vi		3945201	0					
ANR	3945549	ExpressionStatement	"r_list_add_sorted ( list , cx , lcmp )"	1390:2:35505:35539	3945201	29	True				
ANR	3945550	CallExpression	"r_list_add_sorted ( list , cx , lcmp )"		3945201	0					
ANR	3945551	Callee	r_list_add_sorted		3945201	0					
ANR	3945552	Identifier	r_list_add_sorted		3945201	0					
ANR	3945553	ArgumentList	list		3945201	1					
ANR	3945554	Argument	list		3945201	0					
ANR	3945555	Identifier	list		3945201	0					
ANR	3945556	Argument	cx		3945201	1					
ANR	3945557	Identifier	cx		3945201	0					
ANR	3945558	Argument	lcmp		3945201	2					
ANR	3945559	Identifier	lcmp		3945201	0					
ANR	3945560	IfStatement	if ( b )		3945201	6					
ANR	3945561	Condition	b	1393:5:35550:35550	3945201	0	True				
ANR	3945562	Identifier	b		3945201	0					
ANR	3945563	CompoundStatement		52:2:1238:1270	3945201	1					
ANR	3945564	IdentifierDeclStatement	const RANode * ab = get_anode ( b ) ;	1394:2:35557:35589	3945201	0	True				
ANR	3945565	IdentifierDecl	* ab = get_anode ( b )		3945201	0					
ANR	3945566	IdentifierDeclType	const RANode *		3945201	0					
ANR	3945567	Identifier	ab		3945201	1					
ANR	3945568	AssignmentExpression	* ab = get_anode ( b )		3945201	2		=			
ANR	3945569	Identifier	ab		3945201	0					
ANR	3945570	CallExpression	get_anode ( b )		3945201	1					
ANR	3945571	Callee	get_anode		3945201	0					
ANR	3945572	Identifier	get_anode		3945201	0					
ANR	3945573	ArgumentList	b		3945201	1					
ANR	3945574	Argument	b		3945201	0					
ANR	3945575	Identifier	b		3945201	0					
ANR	3945576	Statement	cx	1395:2:35593:35594	3945201	1	True				
ANR	3945577	Statement	=	1395:5:35596:35596	3945201	2	True				
ANR	3945578	Statement	R_NEW	1395:7:35598:35602	3945201	3	True				
ANR	3945579	Statement	(	1395:13:35604:35604	3945201	4	True				
ANR	3945580	Statement	struct	1395:14:35605:35610	3945201	5	True				
ANR	3945581	Statement	len_pos_t	1395:21:35612:35620	3945201	6	True				
ANR	3945582	Statement	)	1395:30:35621:35621	3945201	7	True				
ANR	3945583	ExpressionStatement		1395:31:35622:35622	3945201	8	True				
ANR	3945584	IfStatement	if ( cx )		3945201	9					
ANR	3945585	Condition	cx	1396:6:35630:35631	3945201	0	True				
ANR	3945586	Identifier	cx		3945201	0					
ANR	3945587	CompoundStatement		54:10:1315:1315	3945201	1					
ANR	3945588	ExpressionStatement	cx -> len = is_left ? INT_MAX : INT_MIN	1397:3:35639:35674	3945201	0	True				
ANR	3945589	AssignmentExpression	cx -> len = is_left ? INT_MAX : INT_MIN		3945201	0		=			
ANR	3945590	PtrMemberAccess	cx -> len		3945201	0					
ANR	3945591	Identifier	cx		3945201	0					
ANR	3945592	Identifier	len		3945201	1					
ANR	3945593	ConditionalExpression	is_left ? INT_MAX : INT_MIN		3945201	1					
ANR	3945594	Condition	is_left		3945201	0					
ANR	3945595	Identifier	is_left		3945201	0					
ANR	3945596	Identifier	INT_MAX		3945201	1					
ANR	3945597	Identifier	INT_MIN		3945201	2					
ANR	3945598	ExpressionStatement	cx -> pos = ab -> x	1398:3:35679:35694	3945201	1	True				
ANR	3945599	AssignmentExpression	cx -> pos = ab -> x		3945201	0		=			
ANR	3945600	PtrMemberAccess	cx -> pos		3945201	0					
ANR	3945601	Identifier	cx		3945201	0					
ANR	3945602	Identifier	pos		3945201	1					
ANR	3945603	PtrMemberAccess	ab -> x		3945201	1					
ANR	3945604	Identifier	ab		3945201	0					
ANR	3945605	Identifier	x		3945201	1					
ANR	3945606	IfStatement	if ( is_left )		3945201	2					
ANR	3945607	Condition	is_left	1399:7:35703:35709	3945201	0	True				
ANR	3945608	Identifier	is_left		3945201	0					
ANR	3945609	CompoundStatement		57:16:1393:1393	3945201	1					
ANR	3945610	ExpressionStatement	"cx -> pos += dist_nodes ( g , b , vt )"	1400:4:35718:35750	3945201	0	True				
ANR	3945611	AssignmentExpression	"cx -> pos += dist_nodes ( g , b , vt )"		3945201	0		+=			
ANR	3945612	PtrMemberAccess	cx -> pos		3945201	0					
ANR	3945613	Identifier	cx		3945201	0					
ANR	3945614	Identifier	pos		3945201	1					
ANR	3945615	CallExpression	"dist_nodes ( g , b , vt )"		3945201	1					
ANR	3945616	Callee	dist_nodes		3945201	0					
ANR	3945617	Identifier	dist_nodes		3945201	0					
ANR	3945618	ArgumentList	g		3945201	1					
ANR	3945619	Argument	g		3945201	0					
ANR	3945620	Identifier	g		3945201	0					
ANR	3945621	Argument	b		3945201	1					
ANR	3945622	Identifier	b		3945201	0					
ANR	3945623	Argument	vt		3945201	2					
ANR	3945624	Identifier	vt		3945201	0					
ANR	3945625	ElseStatement	else		3945201	0					
ANR	3945626	CompoundStatement		59:10:1443:1443	3945201	0					
ANR	3945627	ExpressionStatement	"cx -> pos -= dist_nodes ( g , vtp , b )"	1402:4:35768:35801	3945201	0	True				
ANR	3945628	AssignmentExpression	"cx -> pos -= dist_nodes ( g , vtp , b )"		3945201	0		-=			
ANR	3945629	PtrMemberAccess	cx -> pos		3945201	0					
ANR	3945630	Identifier	cx		3945201	0					
ANR	3945631	Identifier	pos		3945201	1					
ANR	3945632	CallExpression	"dist_nodes ( g , vtp , b )"		3945201	1					
ANR	3945633	Callee	dist_nodes		3945201	0					
ANR	3945634	Identifier	dist_nodes		3945201	0					
ANR	3945635	ArgumentList	g		3945201	1					
ANR	3945636	Argument	g		3945201	0					
ANR	3945637	Identifier	g		3945201	0					
ANR	3945638	Argument	vtp		3945201	1					
ANR	3945639	Identifier	vtp		3945201	0					
ANR	3945640	Argument	b		3945201	2					
ANR	3945641	Identifier	b		3945201	0					
ANR	3945642	ExpressionStatement	"r_list_add_sorted ( list , cx , lcmp )"	1404:3:35811:35845	3945201	3	True				
ANR	3945643	CallExpression	"r_list_add_sorted ( list , cx , lcmp )"		3945201	0					
ANR	3945644	Callee	r_list_add_sorted		3945201	0					
ANR	3945645	Identifier	r_list_add_sorted		3945201	0					
ANR	3945646	ArgumentList	list		3945201	1					
ANR	3945647	Argument	list		3945201	0					
ANR	3945648	Identifier	list		3945201	0					
ANR	3945649	Argument	cx		3945201	1					
ANR	3945650	Identifier	cx		3945201	0					
ANR	3945651	Argument	lcmp		3945201	2					
ANR	3945652	Identifier	lcmp		3945201	0					
ANR	3945653	ReturnType	static void		3945201	1					
ANR	3945654	Identifier	collect_changes		3945201	2					
ANR	3945655	ParameterList	"const RAGraph * g , int l , const RGraphNode * b , int from_up , int s , int e , RList * list , int is_left"		3945201	3					
ANR	3945656	Parameter	const RAGraph * g	1343:28:34219:34234	3945201	0	True				
ANR	3945657	ParameterType	const RAGraph *		3945201	0					
ANR	3945658	Identifier	g		3945201	1					
ANR	3945659	Parameter	int l	1343:46:34237:34241	3945201	1	True				
ANR	3945660	ParameterType	int		3945201	0					
ANR	3945661	Identifier	l		3945201	1					
ANR	3945662	Parameter	const RGraphNode * b	1343:53:34244:34262	3945201	2	True				
ANR	3945663	ParameterType	const RGraphNode *		3945201	0					
ANR	3945664	Identifier	b		3945201	1					
ANR	3945665	Parameter	int from_up	1343:74:34265:34275	3945201	3	True				
ANR	3945666	ParameterType	int		3945201	0					
ANR	3945667	Identifier	from_up		3945201	1					
ANR	3945668	Parameter	int s	1343:87:34278:34282	3945201	4	True				
ANR	3945669	ParameterType	int		3945201	0					
ANR	3945670	Identifier	s		3945201	1					
ANR	3945671	Parameter	int e	1343:94:34285:34289	3945201	5	True				
ANR	3945672	ParameterType	int		3945201	0					
ANR	3945673	Identifier	e		3945201	1					
ANR	3945674	Parameter	RList * list	1343:101:34292:34302	3945201	6	True				
ANR	3945675	ParameterType	RList *		3945201	0					
ANR	3945676	Identifier	list		3945201	1					
ANR	3945677	Parameter	int is_left	1343:114:34305:34315	3945201	7	True				
ANR	3945678	ParameterType	int		3945201	0					
ANR	3945679	Identifier	is_left		3945201	1					
ANR	3945680	CFGEntryNode	ENTRY		3945201		True				
ANR	3945681	CFGExitNode	EXIT		3945201		True				
ANR	3945682	Symbol	* avi		3945201						
ANR	3945683	Symbol	* g -> layers [ l ] . nodes		3945201						
ANR	3945684	Symbol	ab		3945201						
ANR	3945685	Symbol	* * g		3945201						
ANR	3945686	Symbol	av -> x		3945201						
ANR	3945687	Symbol	ab -> x		3945201						
ANR	3945688	Symbol	it		3945201						
ANR	3945689	Symbol	list		3945201						
ANR	3945690	Symbol	vi		3945201						
ANR	3945691	Symbol	av		3945201						
ANR	3945692	Symbol	RP_listcmp		3945201						
ANR	3945693	Symbol	* cx		3945201						
ANR	3945694	Symbol	* g -> layers		3945201						
ANR	3945695	Symbol	* * * g		3945201						
ANR	3945696	Symbol	vt		3945201						
ANR	3945697	Symbol	cx -> len		3945201						
ANR	3945698	Symbol	dist_nodes		3945201						
ANR	3945699	Symbol	from_up		3945201						
ANR	3945700	Symbol	* ab		3945201						
ANR	3945701	Symbol	r_graph_get_neighbours		3945201						
ANR	3945702	Symbol	neigh		3945201						
ANR	3945703	Symbol	INT_MIN		3945201						
ANR	3945704	Symbol	r_graph_innodes		3945201						
ANR	3945705	Symbol	avi		3945201						
ANR	3945706	Symbol	g -> graph		3945201						
ANR	3945707	Symbol	INT_MAX		3945201						
ANR	3945708	Symbol	* * l		3945201						
ANR	3945709	Symbol	b		3945201						
ANR	3945710	Symbol	get_anode		3945201						
ANR	3945711	Symbol	c		3945201						
ANR	3945712	Symbol	avi -> x		3945201						
ANR	3945713	Symbol	is_left		3945201						
ANR	3945714	Symbol	e		3945201						
ANR	3945715	Symbol	g		3945201						
ANR	3945716	Symbol	RM_listcmp		3945201						
ANR	3945717	Symbol	lcmp		3945201						
ANR	3945718	Symbol	i		3945201						
ANR	3945719	Symbol	l		3945201						
ANR	3945720	Symbol	g -> layers [ l ] . nodes		3945201						
ANR	3945721	Symbol	* e		3945201						
ANR	3945722	Symbol	* g		3945201						
ANR	3945723	Symbol	s		3945201						
ANR	3945724	Symbol	vtp		3945201						
ANR	3945725	Symbol	* i		3945201						
ANR	3945726	Symbol	cx		3945201						
ANR	3945727	Symbol	* l		3945201						
ANR	3945728	Symbol	v		3945201						
ANR	3945729	Symbol	* av		3945201						
ANR	3945730	Symbol	g -> layers		3945201						
ANR	3945731	Symbol	* * g -> layers		3945201						
ANR	3945732	Symbol	* s		3945201						
ANR	3945733	Symbol	cx -> pos		3945201						
ANR	3945734	Function	combine_sequences	1409:0:35857:37538							
ANR	3945735	FunctionDef	"combine_sequences (const RAGraph * g , int l , const RGraphNode * bm , const RGraphNode * bp , int from_up , int a , int r)"		3945734	0					
ANR	3945736	CompoundStatement		1409:126:35983:37538	3945734	0					
ANR	3945737	IdentifierDeclStatement	"RList * Rm = r_list_new ( ) , * Rp = r_list_new ( ) ;"	1410:1:35986:36032	3945734	0	True				
ANR	3945738	IdentifierDecl	* Rm = r_list_new ( )		3945734	0					
ANR	3945739	IdentifierDeclType	RList *		3945734	0					
ANR	3945740	Identifier	Rm		3945734	1					
ANR	3945741	AssignmentExpression	* Rm = r_list_new ( )		3945734	2		=			
ANR	3945742	Identifier	Rm		3945734	0					
ANR	3945743	CallExpression	r_list_new ( )		3945734	1					
ANR	3945744	Callee	r_list_new		3945734	0					
ANR	3945745	Identifier	r_list_new		3945734	0					
ANR	3945746	ArgumentList			3945734	1					
ANR	3945747	IdentifierDecl	* Rp = r_list_new ( )		3945734	1					
ANR	3945748	IdentifierDeclType	RList *		3945734	0					
ANR	3945749	Identifier	Rp		3945734	1					
ANR	3945750	AssignmentExpression	* Rp = r_list_new ( )		3945734	2		=			
ANR	3945751	Identifier	Rp		3945734	0					
ANR	3945752	CallExpression	r_list_new ( )		3945734	1					
ANR	3945753	Callee	r_list_new		3945734	0					
ANR	3945754	Identifier	r_list_new		3945734	0					
ANR	3945755	ArgumentList			3945734	1					
ANR	3945756	IdentifierDeclStatement	"const RGraphNode * vt , * vtp ;"	1411:1:36035:36061	3945734	1	True				
ANR	3945757	IdentifierDecl	* vt		3945734	0					
ANR	3945758	IdentifierDeclType	const RGraphNode *		3945734	0					
ANR	3945759	Identifier	vt		3945734	1					
ANR	3945760	IdentifierDecl	* vtp		3945734	1					
ANR	3945761	IdentifierDeclType	const RGraphNode *		3945734	0					
ANR	3945762	Identifier	vtp		3945734	1					
ANR	3945763	IdentifierDeclStatement	"RANode * at , * atp ;"	1412:1:36064:36080	3945734	2	True				
ANR	3945764	IdentifierDecl	* at		3945734	0					
ANR	3945765	IdentifierDeclType	RANode *		3945734	0					
ANR	3945766	Identifier	at		3945734	1					
ANR	3945767	IdentifierDecl	* atp		3945734	1					
ANR	3945768	IdentifierDeclType	RANode *		3945734	0					
ANR	3945769	Identifier	atp		3945734	1					
ANR	3945770	IdentifierDeclStatement	"int rm , rp , t , m , i ;"	1413:1:36083:36102	3945734	3	True				
ANR	3945771	IdentifierDecl	rm		3945734	0					
ANR	3945772	IdentifierDeclType	int		3945734	0					
ANR	3945773	Identifier	rm		3945734	1					
ANR	3945774	IdentifierDecl	rp		3945734	1					
ANR	3945775	IdentifierDeclType	int		3945734	0					
ANR	3945776	Identifier	rp		3945734	1					
ANR	3945777	IdentifierDecl	t		3945734	2					
ANR	3945778	IdentifierDeclType	int		3945734	0					
ANR	3945779	Identifier	t		3945734	1					
ANR	3945780	IdentifierDecl	m		3945734	3					
ANR	3945781	IdentifierDeclType	int		3945734	0					
ANR	3945782	Identifier	m		3945734	1					
ANR	3945783	IdentifierDecl	i		3945734	4					
ANR	3945784	IdentifierDeclType	int		3945734	0					
ANR	3945785	Identifier	i		3945734	1					
ANR	3945786	ExpressionStatement	Rm -> free = ( RListFree ) free	1414:1:36105:36132	3945734	4	True				
ANR	3945787	AssignmentExpression	Rm -> free = ( RListFree ) free		3945734	0		=			
ANR	3945788	PtrMemberAccess	Rm -> free		3945734	0					
ANR	3945789	Identifier	Rm		3945734	0					
ANR	3945790	Identifier	free		3945734	1					
ANR	3945791	CastExpression	( RListFree ) free		3945734	1					
ANR	3945792	CastTarget	RListFree		3945734	0					
ANR	3945793	Identifier	free		3945734	1					
ANR	3945794	ExpressionStatement	Rp -> free = ( RListFree ) free	1415:1:36135:36162	3945734	5	True				
ANR	3945795	AssignmentExpression	Rp -> free = ( RListFree ) free		3945734	0		=			
ANR	3945796	PtrMemberAccess	Rp -> free		3945734	0					
ANR	3945797	Identifier	Rp		3945734	0					
ANR	3945798	Identifier	free		3945734	1					
ANR	3945799	CastExpression	( RListFree ) free		3945734	1					
ANR	3945800	CastTarget	RListFree		3945734	0					
ANR	3945801	Identifier	free		3945734	1					
ANR	3945802	ExpressionStatement	t = ( a + r ) / 2	1417:1:36166:36181	3945734	6	True				
ANR	3945803	AssignmentExpression	t = ( a + r ) / 2		3945734	0		=			
ANR	3945804	Identifier	t		3945734	0					
ANR	3945805	MultiplicativeExpression	( a + r ) / 2		3945734	1		/			
ANR	3945806	AdditiveExpression	a + r		3945734	0		+			
ANR	3945807	Identifier	a		3945734	0					
ANR	3945808	Identifier	r		3945734	1					
ANR	3945809	PrimaryExpression	2		3945734	1					
ANR	3945810	ExpressionStatement	vt = g -> layers [ l ] . nodes [ t - 1 ]	1418:1:36184:36214	3945734	7	True				
ANR	3945811	AssignmentExpression	vt = g -> layers [ l ] . nodes [ t - 1 ]		3945734	0		=			
ANR	3945812	Identifier	vt		3945734	0					
ANR	3945813	ArrayIndexing	g -> layers [ l ] . nodes [ t - 1 ]		3945734	1					
ANR	3945814	MemberAccess	g -> layers [ l ] . nodes		3945734	0					
ANR	3945815	ArrayIndexing	g -> layers [ l ]		3945734	0					
ANR	3945816	PtrMemberAccess	g -> layers		3945734	0					
ANR	3945817	Identifier	g		3945734	0					
ANR	3945818	Identifier	layers		3945734	1					
ANR	3945819	Identifier	l		3945734	1					
ANR	3945820	Identifier	nodes		3945734	1					
ANR	3945821	AdditiveExpression	t - 1		3945734	1		-			
ANR	3945822	Identifier	t		3945734	0					
ANR	3945823	PrimaryExpression	1		3945734	1					
ANR	3945824	ExpressionStatement	vtp = g -> layers [ l ] . nodes [ t ]	1419:1:36217:36244	3945734	8	True				
ANR	3945825	AssignmentExpression	vtp = g -> layers [ l ] . nodes [ t ]		3945734	0		=			
ANR	3945826	Identifier	vtp		3945734	0					
ANR	3945827	ArrayIndexing	g -> layers [ l ] . nodes [ t ]		3945734	1					
ANR	3945828	MemberAccess	g -> layers [ l ] . nodes		3945734	0					
ANR	3945829	ArrayIndexing	g -> layers [ l ]		3945734	0					
ANR	3945830	PtrMemberAccess	g -> layers		3945734	0					
ANR	3945831	Identifier	g		3945734	0					
ANR	3945832	Identifier	layers		3945734	1					
ANR	3945833	Identifier	l		3945734	1					
ANR	3945834	Identifier	nodes		3945734	1					
ANR	3945835	Identifier	t		3945734	1					
ANR	3945836	ExpressionStatement	at = get_anode ( vt )	1420:1:36247:36266	3945734	9	True				
ANR	3945837	AssignmentExpression	at = get_anode ( vt )		3945734	0		=			
ANR	3945838	Identifier	at		3945734	0					
ANR	3945839	CallExpression	get_anode ( vt )		3945734	1					
ANR	3945840	Callee	get_anode		3945734	0					
ANR	3945841	Identifier	get_anode		3945734	0					
ANR	3945842	ArgumentList	vt		3945734	1					
ANR	3945843	Argument	vt		3945734	0					
ANR	3945844	Identifier	vt		3945734	0					
ANR	3945845	ExpressionStatement	atp = get_anode ( vtp )	1421:1:36269:36290	3945734	10	True				
ANR	3945846	AssignmentExpression	atp = get_anode ( vtp )		3945734	0		=			
ANR	3945847	Identifier	atp		3945734	0					
ANR	3945848	CallExpression	get_anode ( vtp )		3945734	1					
ANR	3945849	Callee	get_anode		3945734	0					
ANR	3945850	Identifier	get_anode		3945734	0					
ANR	3945851	ArgumentList	vtp		3945734	1					
ANR	3945852	Argument	vtp		3945734	0					
ANR	3945853	Identifier	vtp		3945734	0					
ANR	3945854	ExpressionStatement	"collect_changes ( g , l , bm , from_up , a , t , Rm , true )"	1423:1:36294:36345	3945734	11	True				
ANR	3945855	CallExpression	"collect_changes ( g , l , bm , from_up , a , t , Rm , true )"		3945734	0					
ANR	3945856	Callee	collect_changes		3945734	0					
ANR	3945857	Identifier	collect_changes		3945734	0					
ANR	3945858	ArgumentList	g		3945734	1					
ANR	3945859	Argument	g		3945734	0					
ANR	3945860	Identifier	g		3945734	0					
ANR	3945861	Argument	l		3945734	1					
ANR	3945862	Identifier	l		3945734	0					
ANR	3945863	Argument	bm		3945734	2					
ANR	3945864	Identifier	bm		3945734	0					
ANR	3945865	Argument	from_up		3945734	3					
ANR	3945866	Identifier	from_up		3945734	0					
ANR	3945867	Argument	a		3945734	4					
ANR	3945868	Identifier	a		3945734	0					
ANR	3945869	Argument	t		3945734	5					
ANR	3945870	Identifier	t		3945734	0					
ANR	3945871	Argument	Rm		3945734	6					
ANR	3945872	Identifier	Rm		3945734	0					
ANR	3945873	Argument	true		3945734	7					
ANR	3945874	Identifier	true		3945734	0					
ANR	3945875	ExpressionStatement	"collect_changes ( g , l , bp , from_up , t , r , Rp , false )"	1424:1:36348:36400	3945734	12	True				
ANR	3945876	CallExpression	"collect_changes ( g , l , bp , from_up , t , r , Rp , false )"		3945734	0					
ANR	3945877	Callee	collect_changes		3945734	0					
ANR	3945878	Identifier	collect_changes		3945734	0					
ANR	3945879	ArgumentList	g		3945734	1					
ANR	3945880	Argument	g		3945734	0					
ANR	3945881	Identifier	g		3945734	0					
ANR	3945882	Argument	l		3945734	1					
ANR	3945883	Identifier	l		3945734	0					
ANR	3945884	Argument	bp		3945734	2					
ANR	3945885	Identifier	bp		3945734	0					
ANR	3945886	Argument	from_up		3945734	3					
ANR	3945887	Identifier	from_up		3945734	0					
ANR	3945888	Argument	t		3945734	4					
ANR	3945889	Identifier	t		3945734	0					
ANR	3945890	Argument	r		3945734	5					
ANR	3945891	Identifier	r		3945734	0					
ANR	3945892	Argument	Rp		3945734	6					
ANR	3945893	Identifier	Rp		3945734	0					
ANR	3945894	Argument	false		3945734	7					
ANR	3945895	Identifier	false		3945734	0					
ANR	3945896	ExpressionStatement	rm = rp = 0	1425:1:36403:36414	3945734	13	True				
ANR	3945897	AssignmentExpression	rm = rp = 0		3945734	0		=			
ANR	3945898	Identifier	rm		3945734	0					
ANR	3945899	AssignmentExpression	rp = 0		3945734	1		=			
ANR	3945900	Identifier	rp		3945734	0					
ANR	3945901	PrimaryExpression	0		3945734	1					
ANR	3945902	ExpressionStatement	"m = dist_nodes ( g , vt , vtp )"	1427:1:36418:36445	3945734	14	True				
ANR	3945903	AssignmentExpression	"m = dist_nodes ( g , vt , vtp )"		3945734	0		=			
ANR	3945904	Identifier	m		3945734	0					
ANR	3945905	CallExpression	"dist_nodes ( g , vt , vtp )"		3945734	1					
ANR	3945906	Callee	dist_nodes		3945734	0					
ANR	3945907	Identifier	dist_nodes		3945734	0					
ANR	3945908	ArgumentList	g		3945734	1					
ANR	3945909	Argument	g		3945734	0					
ANR	3945910	Identifier	g		3945734	0					
ANR	3945911	Argument	vt		3945734	1					
ANR	3945912	Identifier	vt		3945734	0					
ANR	3945913	Argument	vtp		3945734	2					
ANR	3945914	Identifier	vtp		3945734	0					
ANR	3945915	IfStatement	if ( at && atp )		3945734	15					
ANR	3945916	Condition	at && atp	1428:5:36452:36460	3945734	0	True				
ANR	3945917	AndExpression	at && atp		3945734	0		&&			
ANR	3945918	Identifier	at		3945734	0					
ANR	3945919	Identifier	atp		3945734	1					
ANR	3945920	CompoundStatement		20:16:479:479	3945734	1					
ANR	3945921	WhileStatement	while ( atp -> x - at -> x < m )		3945734	0					
ANR	3945922	Condition	atp -> x - at -> x < m	1429:9:36474:36491	3945734	0	True				
ANR	3945923	RelationalExpression	atp -> x - at -> x < m		3945734	0		<			
ANR	3945924	AdditiveExpression	atp -> x - at -> x		3945734	0		-			
ANR	3945925	PtrMemberAccess	atp -> x		3945734	0					
ANR	3945926	Identifier	atp		3945734	0					
ANR	3945927	Identifier	x		3945734	1					
ANR	3945928	PtrMemberAccess	at -> x		3945734	1					
ANR	3945929	Identifier	at		3945734	0					
ANR	3945930	Identifier	x		3945734	1					
ANR	3945931	Identifier	m		3945734	1					
ANR	3945932	CompoundStatement		21:29:510:510	3945734	1					
ANR	3945933	IfStatement	if ( atp -> x == at -> x )		3945734	0					
ANR	3945934	Condition	atp -> x == at -> x	1430:7:36503:36517	3945734	0	True				
ANR	3945935	EqualityExpression	atp -> x == at -> x		3945734	0		==			
ANR	3945936	PtrMemberAccess	atp -> x		3945734	0					
ANR	3945937	Identifier	atp		3945734	0					
ANR	3945938	Identifier	x		3945734	1					
ANR	3945939	PtrMemberAccess	at -> x		3945734	1					
ANR	3945940	Identifier	at		3945734	0					
ANR	3945941	Identifier	x		3945734	1					
ANR	3945942	CompoundStatement		23:4:542:558	3945734	1					
ANR	3945943	IdentifierDeclStatement	int step = m / 2 ;	1431:4:36526:36542	3945734	0	True				
ANR	3945944	IdentifierDecl	step = m / 2		3945734	0					
ANR	3945945	IdentifierDeclType	int		3945734	0					
ANR	3945946	Identifier	step		3945734	1					
ANR	3945947	AssignmentExpression	step = m / 2		3945734	2		=			
ANR	3945948	Identifier	step		3945734	0					
ANR	3945949	MultiplicativeExpression	m / 2		3945734	1		/			
ANR	3945950	Identifier	m		3945734	0					
ANR	3945951	PrimaryExpression	2		3945734	1					
ANR	3945952	ExpressionStatement	at -> x -= step	1432:4:36548:36561	3945734	1	True				
ANR	3945953	AssignmentExpression	at -> x -= step		3945734	0		-=			
ANR	3945954	PtrMemberAccess	at -> x		3945734	0					
ANR	3945955	Identifier	at		3945734	0					
ANR	3945956	Identifier	x		3945734	1					
ANR	3945957	Identifier	step		3945734	1					
ANR	3945958	ExpressionStatement	atp -> x += m - step	1433:4:36567:36585	3945734	2	True				
ANR	3945959	AssignmentExpression	atp -> x += m - step		3945734	0		+=			
ANR	3945960	PtrMemberAccess	atp -> x		3945734	0					
ANR	3945961	Identifier	atp		3945734	0					
ANR	3945962	Identifier	x		3945734	1					
ANR	3945963	AdditiveExpression	m - step		3945734	1		-			
ANR	3945964	Identifier	m		3945734	0					
ANR	3945965	Identifier	step		3945734	1					
ANR	3945966	ElseStatement	else		3945734	0					
ANR	3945967	CompoundStatement		26:10:613:613	3945734	0					
ANR	3945968	IfStatement	if ( rm < rp )		3945734	0					
ANR	3945969	Condition	rm < rp	1435:8:36607:36613	3945734	0	True				
ANR	3945970	RelationalExpression	rm < rp		3945734	0		<			
ANR	3945971	Identifier	rm		3945734	0					
ANR	3945972	Identifier	rp		3945734	1					
ANR	3945973	CompoundStatement		27:17:632:632	3945734	1					
ANR	3945974	IfStatement	if ( r_list_empty ( Rm ) )		3945734	0					
ANR	3945975	Condition	r_list_empty ( Rm )	1436:9:36627:36643	3945734	0	True				
ANR	3945976	CallExpression	r_list_empty ( Rm )		3945734	0					
ANR	3945977	Callee	r_list_empty		3945734	0					
ANR	3945978	Identifier	r_list_empty		3945734	0					
ANR	3945979	ArgumentList	Rm		3945734	1					
ANR	3945980	Argument	Rm		3945734	0					
ANR	3945981	Identifier	Rm		3945734	0					
ANR	3945982	CompoundStatement		28:28:662:662	3945734	1					
ANR	3945983	ExpressionStatement	at -> x = atp -> x - m	1437:6:36654:36672	3945734	0	True				
ANR	3945984	AssignmentExpression	at -> x = atp -> x - m		3945734	0		=			
ANR	3945985	PtrMemberAccess	at -> x		3945734	0					
ANR	3945986	Identifier	at		3945734	0					
ANR	3945987	Identifier	x		3945734	1					
ANR	3945988	AdditiveExpression	atp -> x - m		3945734	1		-			
ANR	3945989	PtrMemberAccess	atp -> x		3945734	0					
ANR	3945990	Identifier	atp		3945734	0					
ANR	3945991	Identifier	x		3945734	1					
ANR	3945992	Identifier	m		3945734	1					
ANR	3945993	ElseStatement	else		3945734	0					
ANR	3945994	CompoundStatement		31:6:710:769	3945734	0					
ANR	3945995	IdentifierDeclStatement	struct len_pos_t * cx = ( struct len_pos_t * ) r_list_pop ( Rm ) ;	1439:6:36694:36753	3945734	0	True				
ANR	3945996	IdentifierDecl	* cx = ( struct len_pos_t * ) r_list_pop ( Rm )		3945734	0					
ANR	3945997	IdentifierDeclType	struct len_pos_t *		3945734	0					
ANR	3945998	Identifier	cx		3945734	1					
ANR	3945999	AssignmentExpression	* cx = ( struct len_pos_t * ) r_list_pop ( Rm )		3945734	2		=			
ANR	3946000	Identifier	cx		3945734	0					
ANR	3946001	CastExpression	( struct len_pos_t * ) r_list_pop ( Rm )		3945734	1					
ANR	3946002	CastTarget	struct len_pos_t *		3945734	0					
ANR	3946003	CallExpression	r_list_pop ( Rm )		3945734	1					
ANR	3946004	Callee	r_list_pop		3945734	0					
ANR	3946005	Identifier	r_list_pop		3945734	0					
ANR	3946006	ArgumentList	Rm		3945734	1					
ANR	3946007	Argument	Rm		3945734	0					
ANR	3946008	Identifier	Rm		3945734	0					
ANR	3946009	ExpressionStatement	rm = rm + cx -> len	1440:6:36761:36778	3945734	1	True				
ANR	3946010	AssignmentExpression	rm = rm + cx -> len		3945734	0		=			
ANR	3946011	Identifier	rm		3945734	0					
ANR	3946012	AdditiveExpression	rm + cx -> len		3945734	1		+			
ANR	3946013	Identifier	rm		3945734	0					
ANR	3946014	PtrMemberAccess	cx -> len		3945734	1					
ANR	3946015	Identifier	cx		3945734	0					
ANR	3946016	Identifier	len		3945734	1					
ANR	3946017	ExpressionStatement	"at -> x = R_MAX ( cx -> pos , atp -> x - m )"	1441:6:36786:36821	3945734	2	True				
ANR	3946018	AssignmentExpression	"at -> x = R_MAX ( cx -> pos , atp -> x - m )"		3945734	0		=			
ANR	3946019	PtrMemberAccess	at -> x		3945734	0					
ANR	3946020	Identifier	at		3945734	0					
ANR	3946021	Identifier	x		3945734	1					
ANR	3946022	CallExpression	"R_MAX ( cx -> pos , atp -> x - m )"		3945734	1					
ANR	3946023	Callee	R_MAX		3945734	0					
ANR	3946024	Identifier	R_MAX		3945734	0					
ANR	3946025	ArgumentList	cx -> pos		3945734	1					
ANR	3946026	Argument	cx -> pos		3945734	0					
ANR	3946027	PtrMemberAccess	cx -> pos		3945734	0					
ANR	3946028	Identifier	cx		3945734	0					
ANR	3946029	Identifier	pos		3945734	1					
ANR	3946030	Argument	atp -> x - m		3945734	1					
ANR	3946031	AdditiveExpression	atp -> x - m		3945734	0		-			
ANR	3946032	PtrMemberAccess	atp -> x		3945734	0					
ANR	3946033	Identifier	atp		3945734	0					
ANR	3946034	Identifier	x		3945734	1					
ANR	3946035	Identifier	m		3945734	1					
ANR	3946036	ExpressionStatement	free ( cx )	1442:6:36829:36838	3945734	3	True				
ANR	3946037	CallExpression	free ( cx )		3945734	0					
ANR	3946038	Callee	free		3945734	0					
ANR	3946039	Identifier	free		3945734	0					
ANR	3946040	ArgumentList	cx		3945734	1					
ANR	3946041	Argument	cx		3945734	0					
ANR	3946042	Identifier	cx		3945734	0					
ANR	3946043	ElseStatement	else		3945734	0					
ANR	3946044	CompoundStatement		36:11:874:874	3945734	0					
ANR	3946045	IfStatement	if ( r_list_empty ( Rp ) )		3945734	0					
ANR	3946046	Condition	r_list_empty ( Rp )	1445:9:36869:36885	3945734	0	True				
ANR	3946047	CallExpression	r_list_empty ( Rp )		3945734	0					
ANR	3946048	Callee	r_list_empty		3945734	0					
ANR	3946049	Identifier	r_list_empty		3945734	0					
ANR	3946050	ArgumentList	Rp		3945734	1					
ANR	3946051	Argument	Rp		3945734	0					
ANR	3946052	Identifier	Rp		3945734	0					
ANR	3946053	CompoundStatement		37:28:904:904	3945734	1					
ANR	3946054	ExpressionStatement	atp -> x = at -> x + m	1446:6:36896:36914	3945734	0	True				
ANR	3946055	AssignmentExpression	atp -> x = at -> x + m		3945734	0		=			
ANR	3946056	PtrMemberAccess	atp -> x		3945734	0					
ANR	3946057	Identifier	atp		3945734	0					
ANR	3946058	Identifier	x		3945734	1					
ANR	3946059	AdditiveExpression	at -> x + m		3945734	1		+			
ANR	3946060	PtrMemberAccess	at -> x		3945734	0					
ANR	3946061	Identifier	at		3945734	0					
ANR	3946062	Identifier	x		3945734	1					
ANR	3946063	Identifier	m		3945734	1					
ANR	3946064	ElseStatement	else		3945734	0					
ANR	3946065	CompoundStatement		40:6:952:1011	3945734	0					
ANR	3946066	IdentifierDeclStatement	struct len_pos_t * cx = ( struct len_pos_t * ) r_list_pop ( Rp ) ;	1448:6:36936:36995	3945734	0	True				
ANR	3946067	IdentifierDecl	* cx = ( struct len_pos_t * ) r_list_pop ( Rp )		3945734	0					
ANR	3946068	IdentifierDeclType	struct len_pos_t *		3945734	0					
ANR	3946069	Identifier	cx		3945734	1					
ANR	3946070	AssignmentExpression	* cx = ( struct len_pos_t * ) r_list_pop ( Rp )		3945734	2		=			
ANR	3946071	Identifier	cx		3945734	0					
ANR	3946072	CastExpression	( struct len_pos_t * ) r_list_pop ( Rp )		3945734	1					
ANR	3946073	CastTarget	struct len_pos_t *		3945734	0					
ANR	3946074	CallExpression	r_list_pop ( Rp )		3945734	1					
ANR	3946075	Callee	r_list_pop		3945734	0					
ANR	3946076	Identifier	r_list_pop		3945734	0					
ANR	3946077	ArgumentList	Rp		3945734	1					
ANR	3946078	Argument	Rp		3945734	0					
ANR	3946079	Identifier	Rp		3945734	0					
ANR	3946080	ExpressionStatement	rp = rp + cx -> len	1449:6:37003:37020	3945734	1	True				
ANR	3946081	AssignmentExpression	rp = rp + cx -> len		3945734	0		=			
ANR	3946082	Identifier	rp		3945734	0					
ANR	3946083	AdditiveExpression	rp + cx -> len		3945734	1		+			
ANR	3946084	Identifier	rp		3945734	0					
ANR	3946085	PtrMemberAccess	cx -> len		3945734	1					
ANR	3946086	Identifier	cx		3945734	0					
ANR	3946087	Identifier	len		3945734	1					
ANR	3946088	ExpressionStatement	"atp -> x = R_MIN ( cx -> pos , at -> x + m )"	1450:6:37028:37063	3945734	2	True				
ANR	3946089	AssignmentExpression	"atp -> x = R_MIN ( cx -> pos , at -> x + m )"		3945734	0		=			
ANR	3946090	PtrMemberAccess	atp -> x		3945734	0					
ANR	3946091	Identifier	atp		3945734	0					
ANR	3946092	Identifier	x		3945734	1					
ANR	3946093	CallExpression	"R_MIN ( cx -> pos , at -> x + m )"		3945734	1					
ANR	3946094	Callee	R_MIN		3945734	0					
ANR	3946095	Identifier	R_MIN		3945734	0					
ANR	3946096	ArgumentList	cx -> pos		3945734	1					
ANR	3946097	Argument	cx -> pos		3945734	0					
ANR	3946098	PtrMemberAccess	cx -> pos		3945734	0					
ANR	3946099	Identifier	cx		3945734	0					
ANR	3946100	Identifier	pos		3945734	1					
ANR	3946101	Argument	at -> x + m		3945734	1					
ANR	3946102	AdditiveExpression	at -> x + m		3945734	0		+			
ANR	3946103	PtrMemberAccess	at -> x		3945734	0					
ANR	3946104	Identifier	at		3945734	0					
ANR	3946105	Identifier	x		3945734	1					
ANR	3946106	Identifier	m		3945734	1					
ANR	3946107	ExpressionStatement	free ( cx )	1451:6:37071:37080	3945734	3	True				
ANR	3946108	CallExpression	free ( cx )		3945734	0					
ANR	3946109	Callee	free		3945734	0					
ANR	3946110	Identifier	free		3945734	0					
ANR	3946111	ArgumentList	cx		3945734	1					
ANR	3946112	Argument	cx		3945734	0					
ANR	3946113	Identifier	cx		3945734	0					
ANR	3946114	ExpressionStatement	r_list_free ( Rm )	1458:1:37109:37125	3945734	16	True				
ANR	3946115	CallExpression	r_list_free ( Rm )		3945734	0					
ANR	3946116	Callee	r_list_free		3945734	0					
ANR	3946117	Identifier	r_list_free		3945734	0					
ANR	3946118	ArgumentList	Rm		3945734	1					
ANR	3946119	Argument	Rm		3945734	0					
ANR	3946120	Identifier	Rm		3945734	0					
ANR	3946121	ExpressionStatement	r_list_free ( Rp )	1459:1:37128:37144	3945734	17	True				
ANR	3946122	CallExpression	r_list_free ( Rp )		3945734	0					
ANR	3946123	Callee	r_list_free		3945734	0					
ANR	3946124	Identifier	r_list_free		3945734	0					
ANR	3946125	ArgumentList	Rp		3945734	1					
ANR	3946126	Argument	Rp		3945734	0					
ANR	3946127	Identifier	Rp		3945734	0					
ANR	3946128	ForStatement	for ( i = t - 2 ; i >= a ; -- i )		3945734	18					
ANR	3946129	ForInit	i = t - 2 ;	1461:6:37153:37162	3945734	0	True				
ANR	3946130	AssignmentExpression	i = t - 2		3945734	0		=			
ANR	3946131	Identifier	i		3945734	0					
ANR	3946132	AdditiveExpression	t - 2		3945734	1		-			
ANR	3946133	Identifier	t		3945734	0					
ANR	3946134	PrimaryExpression	2		3945734	1					
ANR	3946135	Condition	i >= a	1461:17:37164:37169	3945734	1	True				
ANR	3946136	RelationalExpression	i >= a		3945734	0		>=			
ANR	3946137	Identifier	i		3945734	0					
ANR	3946138	Identifier	a		3945734	1					
ANR	3946139	UnaryExpression	-- i	1461:25:37172:37174	3945734	2	True				
ANR	3946140	IncDec	--		3945734	0					
ANR	3946141	Identifier	i		3945734	1					
ANR	3946142	CompoundStatement		55:2:1245:1272	3945734	3					
ANR	3946143	IdentifierDeclStatement	const RGraphNode * gv = g -> layers [ l ] . nodes [ i ] ;	1462:2:37181:37225	3945734	0	True				
ANR	3946144	IdentifierDecl	* gv = g -> layers [ l ] . nodes [ i ]		3945734	0					
ANR	3946145	IdentifierDeclType	const RGraphNode *		3945734	0					
ANR	3946146	Identifier	gv		3945734	1					
ANR	3946147	AssignmentExpression	* gv = g -> layers [ l ] . nodes [ i ]		3945734	2		=			
ANR	3946148	Identifier	gv		3945734	0					
ANR	3946149	ArrayIndexing	g -> layers [ l ] . nodes [ i ]		3945734	1					
ANR	3946150	MemberAccess	g -> layers [ l ] . nodes		3945734	0					
ANR	3946151	ArrayIndexing	g -> layers [ l ]		3945734	0					
ANR	3946152	PtrMemberAccess	g -> layers		3945734	0					
ANR	3946153	Identifier	g		3945734	0					
ANR	3946154	Identifier	layers		3945734	1					
ANR	3946155	Identifier	l		3945734	1					
ANR	3946156	Identifier	nodes		3945734	1					
ANR	3946157	Identifier	i		3945734	1					
ANR	3946158	IdentifierDeclStatement	RANode * av = get_anode ( gv ) ;	1463:2:37229:37256	3945734	1	True				
ANR	3946159	IdentifierDecl	* av = get_anode ( gv )		3945734	0					
ANR	3946160	IdentifierDeclType	RANode *		3945734	0					
ANR	3946161	Identifier	av		3945734	1					
ANR	3946162	AssignmentExpression	* av = get_anode ( gv )		3945734	2		=			
ANR	3946163	Identifier	av		3945734	0					
ANR	3946164	CallExpression	get_anode ( gv )		3945734	1					
ANR	3946165	Callee	get_anode		3945734	0					
ANR	3946166	Identifier	get_anode		3945734	0					
ANR	3946167	ArgumentList	gv		3945734	1					
ANR	3946168	Argument	gv		3945734	0					
ANR	3946169	Identifier	gv		3945734	0					
ANR	3946170	IfStatement	if ( av && at )		3945734	2					
ANR	3946171	Condition	av && at	1464:6:37264:37271	3945734	0	True				
ANR	3946172	AndExpression	av && at		3945734	0		&&			
ANR	3946173	Identifier	av		3945734	0					
ANR	3946174	Identifier	at		3945734	1					
ANR	3946175	CompoundStatement		56:16:1290:1290	3945734	1					
ANR	3946176	ExpressionStatement	"av -> x = R_MIN ( av -> x , at -> x - dist_nodes ( g , gv , vt ) )"	1465:3:37279:37332	3945734	0	True				
ANR	3946177	AssignmentExpression	"av -> x = R_MIN ( av -> x , at -> x - dist_nodes ( g , gv , vt ) )"		3945734	0		=			
ANR	3946178	PtrMemberAccess	av -> x		3945734	0					
ANR	3946179	Identifier	av		3945734	0					
ANR	3946180	Identifier	x		3945734	1					
ANR	3946181	CallExpression	"R_MIN ( av -> x , at -> x - dist_nodes ( g , gv , vt ) )"		3945734	1					
ANR	3946182	Callee	R_MIN		3945734	0					
ANR	3946183	Identifier	R_MIN		3945734	0					
ANR	3946184	ArgumentList	av -> x		3945734	1					
ANR	3946185	Argument	av -> x		3945734	0					
ANR	3946186	PtrMemberAccess	av -> x		3945734	0					
ANR	3946187	Identifier	av		3945734	0					
ANR	3946188	Identifier	x		3945734	1					
ANR	3946189	Argument	"at -> x - dist_nodes ( g , gv , vt )"		3945734	1					
ANR	3946190	AdditiveExpression	"at -> x - dist_nodes ( g , gv , vt )"		3945734	0		-			
ANR	3946191	PtrMemberAccess	at -> x		3945734	0					
ANR	3946192	Identifier	at		3945734	0					
ANR	3946193	Identifier	x		3945734	1					
ANR	3946194	CallExpression	"dist_nodes ( g , gv , vt )"		3945734	1					
ANR	3946195	Callee	dist_nodes		3945734	0					
ANR	3946196	Identifier	dist_nodes		3945734	0					
ANR	3946197	ArgumentList	g		3945734	1					
ANR	3946198	Argument	g		3945734	0					
ANR	3946199	Identifier	g		3945734	0					
ANR	3946200	Argument	gv		3945734	1					
ANR	3946201	Identifier	gv		3945734	0					
ANR	3946202	Argument	vt		3945734	2					
ANR	3946203	Identifier	vt		3945734	0					
ANR	3946204	ForStatement	for ( i = t + 1 ; i < r ; ++ i )		3945734	19					
ANR	3946205	ForInit	i = t + 1 ;	1469:6:37348:37357	3945734	0	True				
ANR	3946206	AssignmentExpression	i = t + 1		3945734	0		=			
ANR	3946207	Identifier	i		3945734	0					
ANR	3946208	AdditiveExpression	t + 1		3945734	1		+			
ANR	3946209	Identifier	t		3945734	0					
ANR	3946210	PrimaryExpression	1		3945734	1					
ANR	3946211	Condition	i < r	1469:17:37359:37363	3945734	1	True				
ANR	3946212	RelationalExpression	i < r		3945734	0		<			
ANR	3946213	Identifier	i		3945734	0					
ANR	3946214	Identifier	r		3945734	1					
ANR	3946215	UnaryExpression	++ i	1469:24:37366:37368	3945734	2	True				
ANR	3946216	IncDec	++		3945734	0					
ANR	3946217	Identifier	i		3945734	1					
ANR	3946218	CompoundStatement		63:2:1439:1466	3945734	3					
ANR	3946219	IdentifierDeclStatement	const RGraphNode * gv = g -> layers [ l ] . nodes [ i ] ;	1470:2:37375:37419	3945734	0	True				
ANR	3946220	IdentifierDecl	* gv = g -> layers [ l ] . nodes [ i ]		3945734	0					
ANR	3946221	IdentifierDeclType	const RGraphNode *		3945734	0					
ANR	3946222	Identifier	gv		3945734	1					
ANR	3946223	AssignmentExpression	* gv = g -> layers [ l ] . nodes [ i ]		3945734	2		=			
ANR	3946224	Identifier	gv		3945734	0					
ANR	3946225	ArrayIndexing	g -> layers [ l ] . nodes [ i ]		3945734	1					
ANR	3946226	MemberAccess	g -> layers [ l ] . nodes		3945734	0					
ANR	3946227	ArrayIndexing	g -> layers [ l ]		3945734	0					
ANR	3946228	PtrMemberAccess	g -> layers		3945734	0					
ANR	3946229	Identifier	g		3945734	0					
ANR	3946230	Identifier	layers		3945734	1					
ANR	3946231	Identifier	l		3945734	1					
ANR	3946232	Identifier	nodes		3945734	1					
ANR	3946233	Identifier	i		3945734	1					
ANR	3946234	IdentifierDeclStatement	RANode * av = get_anode ( gv ) ;	1471:2:37423:37450	3945734	1	True				
ANR	3946235	IdentifierDecl	* av = get_anode ( gv )		3945734	0					
ANR	3946236	IdentifierDeclType	RANode *		3945734	0					
ANR	3946237	Identifier	av		3945734	1					
ANR	3946238	AssignmentExpression	* av = get_anode ( gv )		3945734	2		=			
ANR	3946239	Identifier	av		3945734	0					
ANR	3946240	CallExpression	get_anode ( gv )		3945734	1					
ANR	3946241	Callee	get_anode		3945734	0					
ANR	3946242	Identifier	get_anode		3945734	0					
ANR	3946243	ArgumentList	gv		3945734	1					
ANR	3946244	Argument	gv		3945734	0					
ANR	3946245	Identifier	gv		3945734	0					
ANR	3946246	IfStatement	if ( av && atp )		3945734	2					
ANR	3946247	Condition	av && atp	1472:6:37458:37466	3945734	0	True				
ANR	3946248	AndExpression	av && atp		3945734	0		&&			
ANR	3946249	Identifier	av		3945734	0					
ANR	3946250	Identifier	atp		3945734	1					
ANR	3946251	CompoundStatement		64:17:1485:1485	3945734	1					
ANR	3946252	ExpressionStatement	"av -> x = R_MAX ( av -> x , atp -> x + dist_nodes ( g , vtp , gv ) )"	1473:3:37474:37529	3945734	0	True				
ANR	3946253	AssignmentExpression	"av -> x = R_MAX ( av -> x , atp -> x + dist_nodes ( g , vtp , gv ) )"		3945734	0		=			
ANR	3946254	PtrMemberAccess	av -> x		3945734	0					
ANR	3946255	Identifier	av		3945734	0					
ANR	3946256	Identifier	x		3945734	1					
ANR	3946257	CallExpression	"R_MAX ( av -> x , atp -> x + dist_nodes ( g , vtp , gv ) )"		3945734	1					
ANR	3946258	Callee	R_MAX		3945734	0					
ANR	3946259	Identifier	R_MAX		3945734	0					
ANR	3946260	ArgumentList	av -> x		3945734	1					
ANR	3946261	Argument	av -> x		3945734	0					
ANR	3946262	PtrMemberAccess	av -> x		3945734	0					
ANR	3946263	Identifier	av		3945734	0					
ANR	3946264	Identifier	x		3945734	1					
ANR	3946265	Argument	"atp -> x + dist_nodes ( g , vtp , gv )"		3945734	1					
ANR	3946266	AdditiveExpression	"atp -> x + dist_nodes ( g , vtp , gv )"		3945734	0		+			
ANR	3946267	PtrMemberAccess	atp -> x		3945734	0					
ANR	3946268	Identifier	atp		3945734	0					
ANR	3946269	Identifier	x		3945734	1					
ANR	3946270	CallExpression	"dist_nodes ( g , vtp , gv )"		3945734	1					
ANR	3946271	Callee	dist_nodes		3945734	0					
ANR	3946272	Identifier	dist_nodes		3945734	0					
ANR	3946273	ArgumentList	g		3945734	1					
ANR	3946274	Argument	g		3945734	0					
ANR	3946275	Identifier	g		3945734	0					
ANR	3946276	Argument	vtp		3945734	1					
ANR	3946277	Identifier	vtp		3945734	0					
ANR	3946278	Argument	gv		3945734	2					
ANR	3946279	Identifier	gv		3945734	0					
ANR	3946280	ReturnType	static void		3945734	1					
ANR	3946281	Identifier	combine_sequences		3945734	2					
ANR	3946282	ParameterList	"const RAGraph * g , int l , const RGraphNode * bm , const RGraphNode * bp , int from_up , int a , int r"		3945734	3					
ANR	3946283	Parameter	const RAGraph * g	1409:30:35887:35902	3945734	0	True				
ANR	3946284	ParameterType	const RAGraph *		3945734	0					
ANR	3946285	Identifier	g		3945734	1					
ANR	3946286	Parameter	int l	1409:48:35905:35909	3945734	1	True				
ANR	3946287	ParameterType	int		3945734	0					
ANR	3946288	Identifier	l		3945734	1					
ANR	3946289	Parameter	const RGraphNode * bm	1409:55:35912:35931	3945734	2	True				
ANR	3946290	ParameterType	const RGraphNode *		3945734	0					
ANR	3946291	Identifier	bm		3945734	1					
ANR	3946292	Parameter	const RGraphNode * bp	1409:77:35934:35953	3945734	3	True				
ANR	3946293	ParameterType	const RGraphNode *		3945734	0					
ANR	3946294	Identifier	bp		3945734	1					
ANR	3946295	Parameter	int from_up	1409:99:35956:35966	3945734	4	True				
ANR	3946296	ParameterType	int		3945734	0					
ANR	3946297	Identifier	from_up		3945734	1					
ANR	3946298	Parameter	int a	1409:112:35969:35973	3945734	5	True				
ANR	3946299	ParameterType	int		3945734	0					
ANR	3946300	Identifier	a		3945734	1					
ANR	3946301	Parameter	int r	1409:119:35976:35980	3945734	6	True				
ANR	3946302	ParameterType	int		3945734	0					
ANR	3946303	Identifier	r		3945734	1					
ANR	3946304	CFGEntryNode	ENTRY		3945734		True				
ANR	3946305	CFGExitNode	EXIT		3945734		True				
ANR	3946306	Symbol	* Rm		3945734						
ANR	3946307	Symbol	* Rp		3945734						
ANR	3946308	Symbol	* g -> layers [ l ] . nodes		3945734						
ANR	3946309	Symbol	r_list_pop		3945734						
ANR	3946310	Symbol	at -> x		3945734						
ANR	3946311	Symbol	atp		3945734						
ANR	3946312	Symbol	* * g		3945734						
ANR	3946313	Symbol	av -> x		3945734						
ANR	3946314	Symbol	Rm -> free		3945734						
ANR	3946315	Symbol	at		3945734						
ANR	3946316	Symbol	av		3945734						
ANR	3946317	Symbol	true		3945734						
ANR	3946318	Symbol	* cx		3945734						
ANR	3946319	Symbol	r_list_empty		3945734						
ANR	3946320	Symbol	* g -> layers		3945734						
ANR	3946321	Symbol	* * * g		3945734						
ANR	3946322	Symbol	rm		3945734						
ANR	3946323	Symbol	vt		3945734						
ANR	3946324	Symbol	rp		3945734						
ANR	3946325	Symbol	cx -> len		3945734						
ANR	3946326	Symbol	dist_nodes		3945734						
ANR	3946327	Symbol	from_up		3945734						
ANR	3946328	Symbol	bm		3945734						
ANR	3946329	Symbol	bp		3945734						
ANR	3946330	Symbol	Rm		3945734						
ANR	3946331	Symbol	free		3945734						
ANR	3946332	Symbol	Rp		3945734						
ANR	3946333	Symbol	* * l		3945734						
ANR	3946334	Symbol	a		3945734						
ANR	3946335	Symbol	get_anode		3945734						
ANR	3946336	Symbol	g		3945734						
ANR	3946337	Symbol	false		3945734						
ANR	3946338	Symbol	i		3945734						
ANR	3946339	Symbol	R_MIN		3945734						
ANR	3946340	Symbol	l		3945734						
ANR	3946341	Symbol	m		3945734						
ANR	3946342	Symbol	Rp -> free		3945734						
ANR	3946343	Symbol	g -> layers [ l ] . nodes		3945734						
ANR	3946344	Symbol	gv		3945734						
ANR	3946345	Symbol	* g		3945734						
ANR	3946346	Symbol	r		3945734						
ANR	3946347	Symbol	vtp		3945734						
ANR	3946348	Symbol	* i		3945734						
ANR	3946349	Symbol	t		3945734						
ANR	3946350	Symbol	cx		3945734						
ANR	3946351	Symbol	* l		3945734						
ANR	3946352	Symbol	atp -> x		3945734						
ANR	3946353	Symbol	* atp		3945734						
ANR	3946354	Symbol	R_MAX		3945734						
ANR	3946355	Symbol	* av		3945734						
ANR	3946356	Symbol	* at		3945734						
ANR	3946357	Symbol	step		3945734						
ANR	3946358	Symbol	g -> layers		3945734						
ANR	3946359	Symbol	* * g -> layers		3945734						
ANR	3946360	Symbol	* t		3945734						
ANR	3946361	Symbol	r_list_new		3945734						
ANR	3946362	Symbol	cx -> pos		3945734						
ANR	3946363	Function	place_sequence	1483:0:37843:38244							
ANR	3946364	FunctionDef	"place_sequence (const RAGraph * g , int l , const RGraphNode * bm , const RGraphNode * bp , int from_up , int va , int vr)"		3946363	0					
ANR	3946365	CompoundStatement		1483:125:37968:38244	3946363	0					
ANR	3946366	IfStatement	if ( vr == va + 1 )		3946363	0					
ANR	3946367	Condition	vr == va + 1	1484:5:37975:37986	3946363	0	True				
ANR	3946368	EqualityExpression	vr == va + 1		3946363	0		==			
ANR	3946369	Identifier	vr		3946363	0					
ANR	3946370	AdditiveExpression	va + 1		3946363	1		+			
ANR	3946371	Identifier	va		3946363	0					
ANR	3946372	PrimaryExpression	1		3946363	1					
ANR	3946373	CompoundStatement		2:19:20:20	3946363	1					
ANR	3946374	ExpressionStatement	"place_single ( g , l , bm , bp , from_up , va )"	1485:2:37993:38033	3946363	0	True				
ANR	3946375	CallExpression	"place_single ( g , l , bm , bp , from_up , va )"		3946363	0					
ANR	3946376	Callee	place_single		3946363	0					
ANR	3946377	Identifier	place_single		3946363	0					
ANR	3946378	ArgumentList	g		3946363	1					
ANR	3946379	Argument	g		3946363	0					
ANR	3946380	Identifier	g		3946363	0					
ANR	3946381	Argument	l		3946363	1					
ANR	3946382	Identifier	l		3946363	0					
ANR	3946383	Argument	bm		3946363	2					
ANR	3946384	Identifier	bm		3946363	0					
ANR	3946385	Argument	bp		3946363	3					
ANR	3946386	Identifier	bp		3946363	0					
ANR	3946387	Argument	from_up		3946363	4					
ANR	3946388	Identifier	from_up		3946363	0					
ANR	3946389	Argument	va		3946363	5					
ANR	3946390	Identifier	va		3946363	0					
ANR	3946391	ElseStatement	else		3946363	0					
ANR	3946392	IfStatement	if ( vr > va + 1 )		3946363	0					
ANR	3946393	Condition	vr > va + 1	1486:12:38047:38057	3946363	0	True				
ANR	3946394	RelationalExpression	vr > va + 1		3946363	0		>			
ANR	3946395	Identifier	vr		3946363	0					
ANR	3946396	AdditiveExpression	va + 1		3946363	1		+			
ANR	3946397	Identifier	va		3946363	0					
ANR	3946398	PrimaryExpression	1		3946363	1					
ANR	3946399	CompoundStatement		5:2:95:117	3946363	1					
ANR	3946400	IdentifierDeclStatement	int vt = ( vr + va ) / 2 ;	1487:2:38064:38086	3946363	0	True				
ANR	3946401	IdentifierDecl	vt = ( vr + va ) / 2		3946363	0					
ANR	3946402	IdentifierDeclType	int		3946363	0					
ANR	3946403	Identifier	vt		3946363	1					
ANR	3946404	AssignmentExpression	vt = ( vr + va ) / 2		3946363	2		=			
ANR	3946405	Identifier	vt		3946363	0					
ANR	3946406	MultiplicativeExpression	( vr + va ) / 2		3946363	1		/			
ANR	3946407	AdditiveExpression	vr + va		3946363	0		+			
ANR	3946408	Identifier	vr		3946363	0					
ANR	3946409	Identifier	va		3946363	1					
ANR	3946410	PrimaryExpression	2		3946363	1					
ANR	3946411	ExpressionStatement	"place_sequence ( g , l , bm , bp , from_up , va , vt )"	1488:2:38090:38136	3946363	1	True				
ANR	3946412	CallExpression	"place_sequence ( g , l , bm , bp , from_up , va , vt )"		3946363	0					
ANR	3946413	Callee	place_sequence		3946363	0					
ANR	3946414	Identifier	place_sequence		3946363	0					
ANR	3946415	ArgumentList	g		3946363	1					
ANR	3946416	Argument	g		3946363	0					
ANR	3946417	Identifier	g		3946363	0					
ANR	3946418	Argument	l		3946363	1					
ANR	3946419	Identifier	l		3946363	0					
ANR	3946420	Argument	bm		3946363	2					
ANR	3946421	Identifier	bm		3946363	0					
ANR	3946422	Argument	bp		3946363	3					
ANR	3946423	Identifier	bp		3946363	0					
ANR	3946424	Argument	from_up		3946363	4					
ANR	3946425	Identifier	from_up		3946363	0					
ANR	3946426	Argument	va		3946363	5					
ANR	3946427	Identifier	va		3946363	0					
ANR	3946428	Argument	vt		3946363	6					
ANR	3946429	Identifier	vt		3946363	0					
ANR	3946430	ExpressionStatement	"place_sequence ( g , l , bm , bp , from_up , vt , vr )"	1489:2:38140:38186	3946363	2	True				
ANR	3946431	CallExpression	"place_sequence ( g , l , bm , bp , from_up , vt , vr )"		3946363	0					
ANR	3946432	Callee	place_sequence		3946363	0					
ANR	3946433	Identifier	place_sequence		3946363	0					
ANR	3946434	ArgumentList	g		3946363	1					
ANR	3946435	Argument	g		3946363	0					
ANR	3946436	Identifier	g		3946363	0					
ANR	3946437	Argument	l		3946363	1					
ANR	3946438	Identifier	l		3946363	0					
ANR	3946439	Argument	bm		3946363	2					
ANR	3946440	Identifier	bm		3946363	0					
ANR	3946441	Argument	bp		3946363	3					
ANR	3946442	Identifier	bp		3946363	0					
ANR	3946443	Argument	from_up		3946363	4					
ANR	3946444	Identifier	from_up		3946363	0					
ANR	3946445	Argument	vt		3946363	5					
ANR	3946446	Identifier	vt		3946363	0					
ANR	3946447	Argument	vr		3946363	6					
ANR	3946448	Identifier	vr		3946363	0					
ANR	3946449	ExpressionStatement	"combine_sequences ( g , l , bm , bp , from_up , va , vr )"	1490:2:38190:38239	3946363	3	True				
ANR	3946450	CallExpression	"combine_sequences ( g , l , bm , bp , from_up , va , vr )"		3946363	0					
ANR	3946451	Callee	combine_sequences		3946363	0					
ANR	3946452	Identifier	combine_sequences		3946363	0					
ANR	3946453	ArgumentList	g		3946363	1					
ANR	3946454	Argument	g		3946363	0					
ANR	3946455	Identifier	g		3946363	0					
ANR	3946456	Argument	l		3946363	1					
ANR	3946457	Identifier	l		3946363	0					
ANR	3946458	Argument	bm		3946363	2					
ANR	3946459	Identifier	bm		3946363	0					
ANR	3946460	Argument	bp		3946363	3					
ANR	3946461	Identifier	bp		3946363	0					
ANR	3946462	Argument	from_up		3946363	4					
ANR	3946463	Identifier	from_up		3946363	0					
ANR	3946464	Argument	va		3946363	5					
ANR	3946465	Identifier	va		3946363	0					
ANR	3946466	Argument	vr		3946363	6					
ANR	3946467	Identifier	vr		3946363	0					
ANR	3946468	ReturnType	static void		3946363	1					
ANR	3946469	Identifier	place_sequence		3946363	2					
ANR	3946470	ParameterList	"const RAGraph * g , int l , const RGraphNode * bm , const RGraphNode * bp , int from_up , int va , int vr"		3946363	3					
ANR	3946471	Parameter	const RAGraph * g	1483:27:37870:37885	3946363	0	True				
ANR	3946472	ParameterType	const RAGraph *		3946363	0					
ANR	3946473	Identifier	g		3946363	1					
ANR	3946474	Parameter	int l	1483:45:37888:37892	3946363	1	True				
ANR	3946475	ParameterType	int		3946363	0					
ANR	3946476	Identifier	l		3946363	1					
ANR	3946477	Parameter	const RGraphNode * bm	1483:52:37895:37914	3946363	2	True				
ANR	3946478	ParameterType	const RGraphNode *		3946363	0					
ANR	3946479	Identifier	bm		3946363	1					
ANR	3946480	Parameter	const RGraphNode * bp	1483:74:37917:37936	3946363	3	True				
ANR	3946481	ParameterType	const RGraphNode *		3946363	0					
ANR	3946482	Identifier	bp		3946363	1					
ANR	3946483	Parameter	int from_up	1483:96:37939:37949	3946363	4	True				
ANR	3946484	ParameterType	int		3946363	0					
ANR	3946485	Identifier	from_up		3946363	1					
ANR	3946486	Parameter	int va	1483:109:37952:37957	3946363	5	True				
ANR	3946487	ParameterType	int		3946363	0					
ANR	3946488	Identifier	va		3946363	1					
ANR	3946489	Parameter	int vr	1483:117:37960:37965	3946363	6	True				
ANR	3946490	ParameterType	int		3946363	0					
ANR	3946491	Identifier	vr		3946363	1					
ANR	3946492	CFGEntryNode	ENTRY		3946363		True				
ANR	3946493	CFGExitNode	EXIT		3946363		True				
ANR	3946494	Symbol	from_up		3946363						
ANR	3946495	Symbol	g		3946363						
ANR	3946496	Symbol	bm		3946363						
ANR	3946497	Symbol	va		3946363						
ANR	3946498	Symbol	l		3946363						
ANR	3946499	Symbol	vr		3946363						
ANR	3946500	Symbol	bp		3946363						
ANR	3946501	Symbol	vt		3946363						
ANR	3946502	Function	original_traverse_l	1497:0:38412:39947							
ANR	3946503	FunctionDef	"original_traverse_l (const RAGraph * g , Sdb * D , Sdb * P , int from_up)"		3946502	0					
ANR	3946504	CompoundStatement		1497:79:38491:39947	3946502	0					
ANR	3946505	IdentifierDeclStatement	"int i , k , va , vr ;"	1498:1:38494:38510	3946502	0	True				
ANR	3946506	IdentifierDecl	i		3946502	0					
ANR	3946507	IdentifierDeclType	int		3946502	0					
ANR	3946508	Identifier	i		3946502	1					
ANR	3946509	IdentifierDecl	k		3946502	1					
ANR	3946510	IdentifierDeclType	int		3946502	0					
ANR	3946511	Identifier	k		3946502	1					
ANR	3946512	IdentifierDecl	va		3946502	2					
ANR	3946513	IdentifierDeclType	int		3946502	0					
ANR	3946514	Identifier	va		3946502	1					
ANR	3946515	IdentifierDecl	vr		3946502	3					
ANR	3946516	IdentifierDeclType	int		3946502	0					
ANR	3946517	Identifier	vr		3946502	1					
ANR	3946518	ForStatement	for ( i = from_up ? 0 : g -> n_layers - 1 ; ( from_up && i < g -> n_layers ) || ( ! from_up && i >= 0 ) ; i = from_up ? i + 1 : i - 1 )		3946502	1					
ANR	3946519	ForInit	i = from_up ? 0 : g -> n_layers - 1 ;	1500:6:38519:38550	3946502	0	True				
ANR	3946520	AssignmentExpression	i = from_up ? 0 : g -> n_layers - 1		3946502	0		=			
ANR	3946521	Identifier	i		3946502	0					
ANR	3946522	ConditionalExpression	from_up ? 0 : g -> n_layers - 1		3946502	1					
ANR	3946523	Condition	from_up		3946502	0					
ANR	3946524	Identifier	from_up		3946502	0					
ANR	3946525	PrimaryExpression	0		3946502	1					
ANR	3946526	AdditiveExpression	g -> n_layers - 1		3946502	2		-			
ANR	3946527	PtrMemberAccess	g -> n_layers		3946502	0					
ANR	3946528	Identifier	g		3946502	0					
ANR	3946529	Identifier	n_layers		3946502	1					
ANR	3946530	PrimaryExpression	1		3946502	1					
ANR	3946531	Condition	( from_up && i < g -> n_layers ) || ( ! from_up && i >= 0 )	1501:3:38555:38606	3946502	1	True				
ANR	3946532	OrExpression	( from_up && i < g -> n_layers ) || ( ! from_up && i >= 0 )		3946502	0		||			
ANR	3946533	AndExpression	from_up && i < g -> n_layers		3946502	0		&&			
ANR	3946534	Identifier	from_up		3946502	0					
ANR	3946535	RelationalExpression	i < g -> n_layers		3946502	1		<			
ANR	3946536	Identifier	i		3946502	0					
ANR	3946537	PtrMemberAccess	g -> n_layers		3946502	1					
ANR	3946538	Identifier	g		3946502	0					
ANR	3946539	Identifier	n_layers		3946502	1					
ANR	3946540	AndExpression	! from_up && i >= 0		3946502	1		&&			
ANR	3946541	UnaryOperationExpression	! from_up		3946502	0					
ANR	3946542	UnaryOperator	!		3946502	0					
ANR	3946543	Identifier	from_up		3946502	1					
ANR	3946544	RelationalExpression	i >= 0		3946502	1		>=			
ANR	3946545	Identifier	i		3946502	0					
ANR	3946546	PrimaryExpression	0		3946502	1					
ANR	3946547	AssignmentExpression	i = from_up ? i + 1 : i - 1	1502:3:38612:38636	3946502	2	True	=			
ANR	3946548	Identifier	i		3946502	0					
ANR	3946549	ConditionalExpression	from_up ? i + 1 : i - 1		3946502	1					
ANR	3946550	Condition	from_up		3946502	0					
ANR	3946551	Identifier	from_up		3946502	0					
ANR	3946552	AdditiveExpression	i + 1		3946502	1		+			
ANR	3946553	Identifier	i		3946502	0					
ANR	3946554	PrimaryExpression	1		3946502	1					
ANR	3946555	AdditiveExpression	i - 1		3946502	2		-			
ANR	3946556	Identifier	i		3946502	0					
ANR	3946557	PrimaryExpression	1		3946502	1					
ANR	3946558	CompoundStatement		9:2:191:215	3946502	3					
ANR	3946559	IdentifierDeclStatement	int j ;	1503:2:38643:38648	3946502	0	True				
ANR	3946560	IdentifierDecl	j		3946502	0					
ANR	3946561	IdentifierDeclType	int		3946502	0					
ANR	3946562	Identifier	j		3946502	1					
ANR	3946563	IdentifierDeclStatement	const RGraphNode * bm = NULL ;	1504:2:38652:38679	3946502	1	True				
ANR	3946564	IdentifierDecl	* bm = NULL		3946502	0					
ANR	3946565	IdentifierDeclType	const RGraphNode *		3946502	0					
ANR	3946566	Identifier	bm		3946502	1					
ANR	3946567	AssignmentExpression	* bm = NULL		3946502	2		=			
ANR	3946568	Identifier	NULL		3946502	0					
ANR	3946569	Identifier	NULL		3946502	1					
ANR	3946570	IdentifierDeclStatement	const RANode * bma = NULL ;	1505:2:38683:38707	3946502	2	True				
ANR	3946571	IdentifierDecl	* bma = NULL		3946502	0					
ANR	3946572	IdentifierDeclType	const RANode *		3946502	0					
ANR	3946573	Identifier	bma		3946502	1					
ANR	3946574	AssignmentExpression	* bma = NULL		3946502	2		=			
ANR	3946575	Identifier	NULL		3946502	0					
ANR	3946576	Identifier	NULL		3946502	1					
ANR	3946577	ExpressionStatement	j = 0	1507:2:38712:38717	3946502	3	True				
ANR	3946578	AssignmentExpression	j = 0		3946502	0		=			
ANR	3946579	Identifier	j		3946502	0					
ANR	3946580	PrimaryExpression	0		3946502	1					
ANR	3946581	WhileStatement	while ( j < g -> layers [ i ] . n_nodes && ! bm )		3946502	4					
ANR	3946582	Condition	j < g -> layers [ i ] . n_nodes && ! bm	1508:9:38728:38758	3946502	0	True				
ANR	3946583	AndExpression	j < g -> layers [ i ] . n_nodes && ! bm		3946502	0		&&			
ANR	3946584	RelationalExpression	j < g -> layers [ i ] . n_nodes		3946502	0		<			
ANR	3946585	Identifier	j		3946502	0					
ANR	3946586	MemberAccess	g -> layers [ i ] . n_nodes		3946502	1					
ANR	3946587	ArrayIndexing	g -> layers [ i ]		3946502	0					
ANR	3946588	PtrMemberAccess	g -> layers		3946502	0					
ANR	3946589	Identifier	g		3946502	0					
ANR	3946590	Identifier	layers		3946502	1					
ANR	3946591	Identifier	i		3946502	1					
ANR	3946592	Identifier	n_nodes		3946502	1					
ANR	3946593	UnaryOperationExpression	! bm		3946502	1					
ANR	3946594	UnaryOperator	!		3946502	0					
ANR	3946595	Identifier	bm		3946502	1					
ANR	3946596	CompoundStatement		14:3:323:356	3946502	1					
ANR	3946597	IdentifierDeclStatement	const RGraphNode * gn = g -> layers [ i ] . nodes [ j ] ;	1509:3:38766:38810	3946502	0	True				
ANR	3946598	IdentifierDecl	* gn = g -> layers [ i ] . nodes [ j ]		3946502	0					
ANR	3946599	IdentifierDeclType	const RGraphNode *		3946502	0					
ANR	3946600	Identifier	gn		3946502	1					
ANR	3946601	AssignmentExpression	* gn = g -> layers [ i ] . nodes [ j ]		3946502	2		=			
ANR	3946602	Identifier	gn		3946502	0					
ANR	3946603	ArrayIndexing	g -> layers [ i ] . nodes [ j ]		3946502	1					
ANR	3946604	MemberAccess	g -> layers [ i ] . nodes		3946502	0					
ANR	3946605	ArrayIndexing	g -> layers [ i ]		3946502	0					
ANR	3946606	PtrMemberAccess	g -> layers		3946502	0					
ANR	3946607	Identifier	g		3946502	0					
ANR	3946608	Identifier	layers		3946502	1					
ANR	3946609	Identifier	i		3946502	1					
ANR	3946610	Identifier	nodes		3946502	1					
ANR	3946611	Identifier	j		3946502	1					
ANR	3946612	IdentifierDeclStatement	const RANode * an = get_anode ( gn ) ;	1510:3:38815:38848	3946502	1	True				
ANR	3946613	IdentifierDecl	* an = get_anode ( gn )		3946502	0					
ANR	3946614	IdentifierDeclType	const RANode *		3946502	0					
ANR	3946615	Identifier	an		3946502	1					
ANR	3946616	AssignmentExpression	* an = get_anode ( gn )		3946502	2		=			
ANR	3946617	Identifier	an		3946502	0					
ANR	3946618	CallExpression	get_anode ( gn )		3946502	1					
ANR	3946619	Callee	get_anode		3946502	0					
ANR	3946620	Identifier	get_anode		3946502	0					
ANR	3946621	ArgumentList	gn		3946502	1					
ANR	3946622	Argument	gn		3946502	0					
ANR	3946623	Identifier	gn		3946502	0					
ANR	3946624	IfStatement	if ( an && an -> is_dummy )		3946502	2					
ANR	3946625	Condition	an && an -> is_dummy	1511:7:38857:38874	3946502	0	True				
ANR	3946626	AndExpression	an && an -> is_dummy		3946502	0		&&			
ANR	3946627	Identifier	an		3946502	0					
ANR	3946628	PtrMemberAccess	an -> is_dummy		3946502	1					
ANR	3946629	Identifier	an		3946502	0					
ANR	3946630	Identifier	is_dummy		3946502	1					
ANR	3946631	CompoundStatement		15:27:385:385	3946502	1					
ANR	3946632	ExpressionStatement	va = 0	1512:4:38883:38889	3946502	0	True				
ANR	3946633	AssignmentExpression	va = 0		3946502	0		=			
ANR	3946634	Identifier	va		3946502	0					
ANR	3946635	PrimaryExpression	0		3946502	1					
ANR	3946636	ExpressionStatement	vr = j	1513:4:38895:38901	3946502	1	True				
ANR	3946637	AssignmentExpression	vr = j		3946502	0		=			
ANR	3946638	Identifier	vr		3946502	0					
ANR	3946639	Identifier	j		3946502	1					
ANR	3946640	ExpressionStatement	bm = gn	1514:4:38907:38914	3946502	2	True				
ANR	3946641	AssignmentExpression	bm = gn		3946502	0		=			
ANR	3946642	Identifier	bm		3946502	0					
ANR	3946643	Identifier	gn		3946502	1					
ANR	3946644	ExpressionStatement	bma = an	1515:4:38920:38928	3946502	3	True				
ANR	3946645	AssignmentExpression	bma = an		3946502	0		=			
ANR	3946646	Identifier	bma		3946502	0					
ANR	3946647	Identifier	an		3946502	1					
ANR	3946648	ExpressionStatement	j ++	1517:3:38938:38941	3946502	3	True				
ANR	3946649	PostIncDecOperationExpression	j ++		3946502	0					
ANR	3946650	Identifier	j		3946502	0					
ANR	3946651	IncDec	++		3946502	1					
ANR	3946652	IfStatement	if ( ! bm )		3946502	5					
ANR	3946653	Condition	! bm	1519:6:38953:38955	3946502	0	True				
ANR	3946654	UnaryOperationExpression	! bm		3946502	0					
ANR	3946655	UnaryOperator	!		3946502	0					
ANR	3946656	Identifier	bm		3946502	1					
ANR	3946657	CompoundStatement		23:11:466:466	3946502	1					
ANR	3946658	ExpressionStatement	va = 0	1520:3:38963:38969	3946502	0	True				
ANR	3946659	AssignmentExpression	va = 0		3946502	0		=			
ANR	3946660	Identifier	va		3946502	0					
ANR	3946661	PrimaryExpression	0		3946502	1					
ANR	3946662	ExpressionStatement	vr = g -> layers [ i ] . n_nodes	1521:3:38974:38999	3946502	1	True				
ANR	3946663	AssignmentExpression	vr = g -> layers [ i ] . n_nodes		3946502	0		=			
ANR	3946664	Identifier	vr		3946502	0					
ANR	3946665	MemberAccess	g -> layers [ i ] . n_nodes		3946502	1					
ANR	3946666	ArrayIndexing	g -> layers [ i ]		3946502	0					
ANR	3946667	PtrMemberAccess	g -> layers		3946502	0					
ANR	3946668	Identifier	g		3946502	0					
ANR	3946669	Identifier	layers		3946502	1					
ANR	3946670	Identifier	i		3946502	1					
ANR	3946671	Identifier	n_nodes		3946502	1					
ANR	3946672	ExpressionStatement	"place_sequence ( g , i , NULL , bm , from_up , va , vr )"	1523:2:39007:39055	3946502	6	True				
ANR	3946673	CallExpression	"place_sequence ( g , i , NULL , bm , from_up , va , vr )"		3946502	0					
ANR	3946674	Callee	place_sequence		3946502	0					
ANR	3946675	Identifier	place_sequence		3946502	0					
ANR	3946676	ArgumentList	g		3946502	1					
ANR	3946677	Argument	g		3946502	0					
ANR	3946678	Identifier	g		3946502	0					
ANR	3946679	Argument	i		3946502	1					
ANR	3946680	Identifier	i		3946502	0					
ANR	3946681	Argument	NULL		3946502	2					
ANR	3946682	Identifier	NULL		3946502	0					
ANR	3946683	Argument	bm		3946502	3					
ANR	3946684	Identifier	bm		3946502	0					
ANR	3946685	Argument	from_up		3946502	4					
ANR	3946686	Identifier	from_up		3946502	0					
ANR	3946687	Argument	va		3946502	5					
ANR	3946688	Identifier	va		3946502	0					
ANR	3946689	Argument	vr		3946502	6					
ANR	3946690	Identifier	vr		3946502	0					
ANR	3946691	ForStatement	for ( k = va ; k < vr - 1 ; k ++ )		3946502	7					
ANR	3946692	ForInit	k = va ;	1524:7:39064:39070	3946502	0	True				
ANR	3946693	AssignmentExpression	k = va		3946502	0		=			
ANR	3946694	Identifier	k		3946502	0					
ANR	3946695	Identifier	va		3946502	1					
ANR	3946696	Condition	k < vr - 1	1524:15:39072:39081	3946502	1	True				
ANR	3946697	RelationalExpression	k < vr - 1		3946502	0		<			
ANR	3946698	Identifier	k		3946502	0					
ANR	3946699	AdditiveExpression	vr - 1		3946502	1		-			
ANR	3946700	Identifier	vr		3946502	0					
ANR	3946701	PrimaryExpression	1		3946502	1					
ANR	3946702	PostIncDecOperationExpression	k ++	1524:27:39084:39086	3946502	2	True				
ANR	3946703	Identifier	k		3946502	0					
ANR	3946704	IncDec	++		3946502	1					
ANR	3946705	CompoundStatement		28:32:597:597	3946502	3					
ANR	3946706	ExpressionStatement	"set_dist_nodes ( g , i , k , k + 1 )"	1525:3:39094:39125	3946502	0	True				
ANR	3946707	CallExpression	"set_dist_nodes ( g , i , k , k + 1 )"		3946502	0					
ANR	3946708	Callee	set_dist_nodes		3946502	0					
ANR	3946709	Identifier	set_dist_nodes		3946502	0					
ANR	3946710	ArgumentList	g		3946502	1					
ANR	3946711	Argument	g		3946502	0					
ANR	3946712	Identifier	g		3946502	0					
ANR	3946713	Argument	i		3946502	1					
ANR	3946714	Identifier	i		3946502	0					
ANR	3946715	Argument	k		3946502	2					
ANR	3946716	Identifier	k		3946502	0					
ANR	3946717	Argument	k + 1		3946502	3					
ANR	3946718	AdditiveExpression	k + 1		3946502	0		+			
ANR	3946719	Identifier	k		3946502	0					
ANR	3946720	PrimaryExpression	1		3946502	1					
ANR	3946721	IfStatement	"if ( is_valid_pos ( g , i , vr - 1 ) && bm )"		3946502	8					
ANR	3946722	Condition	"is_valid_pos ( g , i , vr - 1 ) && bm"	1527:6:39137:39169	3946502	0	True				
ANR	3946723	AndExpression	"is_valid_pos ( g , i , vr - 1 ) && bm"		3946502	0		&&			
ANR	3946724	CallExpression	"is_valid_pos ( g , i , vr - 1 )"		3946502	0					
ANR	3946725	Callee	is_valid_pos		3946502	0					
ANR	3946726	Identifier	is_valid_pos		3946502	0					
ANR	3946727	ArgumentList	g		3946502	1					
ANR	3946728	Argument	g		3946502	0					
ANR	3946729	Identifier	g		3946502	0					
ANR	3946730	Argument	i		3946502	1					
ANR	3946731	Identifier	i		3946502	0					
ANR	3946732	Argument	vr - 1		3946502	2					
ANR	3946733	AdditiveExpression	vr - 1		3946502	0		-			
ANR	3946734	Identifier	vr		3946502	0					
ANR	3946735	PrimaryExpression	1		3946502	1					
ANR	3946736	Identifier	bm		3946502	1					
ANR	3946737	CompoundStatement		31:41:680:680	3946502	1					
ANR	3946738	ExpressionStatement	"set_dist_nodes ( g , i , vr - 1 , bma -> pos_in_layer )"	1528:3:39177:39225	3946502	0	True				
ANR	3946739	CallExpression	"set_dist_nodes ( g , i , vr - 1 , bma -> pos_in_layer )"		3946502	0					
ANR	3946740	Callee	set_dist_nodes		3946502	0					
ANR	3946741	Identifier	set_dist_nodes		3946502	0					
ANR	3946742	ArgumentList	g		3946502	1					
ANR	3946743	Argument	g		3946502	0					
ANR	3946744	Identifier	g		3946502	0					
ANR	3946745	Argument	i		3946502	1					
ANR	3946746	Identifier	i		3946502	0					
ANR	3946747	Argument	vr - 1		3946502	2					
ANR	3946748	AdditiveExpression	vr - 1		3946502	0		-			
ANR	3946749	Identifier	vr		3946502	0					
ANR	3946750	PrimaryExpression	1		3946502	1					
ANR	3946751	Argument	bma -> pos_in_layer		3946502	3					
ANR	3946752	PtrMemberAccess	bma -> pos_in_layer		3946502	0					
ANR	3946753	Identifier	bma		3946502	0					
ANR	3946754	Identifier	pos_in_layer		3946502	1					
ANR	3946755	WhileStatement	while ( bm )		3946502	9					
ANR	3946756	Condition	bm	1530:9:39240:39241	3946502	0	True				
ANR	3946757	Identifier	bm		3946502	0					
ANR	3946758	CompoundStatement		36:3:808:832	3946502	1					
ANR	3946759	IdentifierDeclStatement	"const RGraphNode * bp = get_right_dummy ( g , bm ) ;"	1531:3:39249:39295	3946502	0	True				
ANR	3946760	IdentifierDecl	"* bp = get_right_dummy ( g , bm )"		3946502	0					
ANR	3946761	IdentifierDeclType	const RGraphNode *		3946502	0					
ANR	3946762	Identifier	bp		3946502	1					
ANR	3946763	AssignmentExpression	"* bp = get_right_dummy ( g , bm )"		3946502	2		=			
ANR	3946764	Identifier	bp		3946502	0					
ANR	3946765	CallExpression	"get_right_dummy ( g , bm )"		3946502	1					
ANR	3946766	Callee	get_right_dummy		3946502	0					
ANR	3946767	Identifier	get_right_dummy		3946502	0					
ANR	3946768	ArgumentList	g		3946502	1					
ANR	3946769	Argument	g		3946502	0					
ANR	3946770	Identifier	g		3946502	0					
ANR	3946771	Argument	bm		3946502	1					
ANR	3946772	Identifier	bm		3946502	0					
ANR	3946773	IdentifierDeclStatement	const RANode * bpa = NULL ;	1532:3:39300:39324	3946502	1	True				
ANR	3946774	IdentifierDecl	* bpa = NULL		3946502	0					
ANR	3946775	IdentifierDeclType	const RANode *		3946502	0					
ANR	3946776	Identifier	bpa		3946502	1					
ANR	3946777	AssignmentExpression	* bpa = NULL		3946502	2		=			
ANR	3946778	Identifier	NULL		3946502	0					
ANR	3946779	Identifier	NULL		3946502	1					
ANR	3946780	ExpressionStatement	bma = get_anode ( bm )	1533:3:39329:39349	3946502	2	True				
ANR	3946781	AssignmentExpression	bma = get_anode ( bm )		3946502	0		=			
ANR	3946782	Identifier	bma		3946502	0					
ANR	3946783	CallExpression	get_anode ( bm )		3946502	1					
ANR	3946784	Callee	get_anode		3946502	0					
ANR	3946785	Identifier	get_anode		3946502	0					
ANR	3946786	ArgumentList	bm		3946502	1					
ANR	3946787	Argument	bm		3946502	0					
ANR	3946788	Identifier	bm		3946502	0					
ANR	3946789	IfStatement	if ( ! bp )		3946502	3					
ANR	3946790	Condition	! bp	1535:7:39359:39361	3946502	0	True				
ANR	3946791	UnaryOperationExpression	! bp		3946502	0					
ANR	3946792	UnaryOperator	!		3946502	0					
ANR	3946793	Identifier	bp		3946502	1					
ANR	3946794	CompoundStatement		39:12:872:872	3946502	1					
ANR	3946795	ExpressionStatement	va = bma -> pos_in_layer + 1	1536:4:39370:39396	3946502	0	True				
ANR	3946796	AssignmentExpression	va = bma -> pos_in_layer + 1		3946502	0		=			
ANR	3946797	Identifier	va		3946502	0					
ANR	3946798	AdditiveExpression	bma -> pos_in_layer + 1		3946502	1		+			
ANR	3946799	PtrMemberAccess	bma -> pos_in_layer		3946502	0					
ANR	3946800	Identifier	bma		3946502	0					
ANR	3946801	Identifier	pos_in_layer		3946502	1					
ANR	3946802	PrimaryExpression	1		3946502	1					
ANR	3946803	ExpressionStatement	vr = g -> layers [ bma -> layer ] . n_nodes	1537:4:39402:39436	3946502	1	True				
ANR	3946804	AssignmentExpression	vr = g -> layers [ bma -> layer ] . n_nodes		3946502	0		=			
ANR	3946805	Identifier	vr		3946502	0					
ANR	3946806	MemberAccess	g -> layers [ bma -> layer ] . n_nodes		3946502	1					
ANR	3946807	ArrayIndexing	g -> layers [ bma -> layer ]		3946502	0					
ANR	3946808	PtrMemberAccess	g -> layers		3946502	0					
ANR	3946809	Identifier	g		3946502	0					
ANR	3946810	Identifier	layers		3946502	1					
ANR	3946811	PtrMemberAccess	bma -> layer		3946502	1					
ANR	3946812	Identifier	bma		3946502	0					
ANR	3946813	Identifier	layer		3946502	1					
ANR	3946814	Identifier	n_nodes		3946502	1					
ANR	3946815	ExpressionStatement	"place_sequence ( g , i , bm , NULL , from_up , va , vr )"	1538:4:39442:39490	3946502	2	True				
ANR	3946816	CallExpression	"place_sequence ( g , i , bm , NULL , from_up , va , vr )"		3946502	0					
ANR	3946817	Callee	place_sequence		3946502	0					
ANR	3946818	Identifier	place_sequence		3946502	0					
ANR	3946819	ArgumentList	g		3946502	1					
ANR	3946820	Argument	g		3946502	0					
ANR	3946821	Identifier	g		3946502	0					
ANR	3946822	Argument	i		3946502	1					
ANR	3946823	Identifier	i		3946502	0					
ANR	3946824	Argument	bm		3946502	2					
ANR	3946825	Identifier	bm		3946502	0					
ANR	3946826	Argument	NULL		3946502	3					
ANR	3946827	Identifier	NULL		3946502	0					
ANR	3946828	Argument	from_up		3946502	4					
ANR	3946829	Identifier	from_up		3946502	0					
ANR	3946830	Argument	va		3946502	5					
ANR	3946831	Identifier	va		3946502	0					
ANR	3946832	Argument	vr		3946502	6					
ANR	3946833	Identifier	vr		3946502	0					
ANR	3946834	ForStatement	for ( k = va ; k < vr - 1 ; ++ k )		3946502	3					
ANR	3946835	ForInit	k = va ;	1539:9:39501:39507	3946502	0	True				
ANR	3946836	AssignmentExpression	k = va		3946502	0		=			
ANR	3946837	Identifier	k		3946502	0					
ANR	3946838	Identifier	va		3946502	1					
ANR	3946839	Condition	k < vr - 1	1539:17:39509:39518	3946502	1	True				
ANR	3946840	RelationalExpression	k < vr - 1		3946502	0		<			
ANR	3946841	Identifier	k		3946502	0					
ANR	3946842	AdditiveExpression	vr - 1		3946502	1		-			
ANR	3946843	Identifier	vr		3946502	0					
ANR	3946844	PrimaryExpression	1		3946502	1					
ANR	3946845	UnaryExpression	++ k	1539:29:39521:39523	3946502	2	True				
ANR	3946846	IncDec	++		3946502	0					
ANR	3946847	Identifier	k		3946502	1					
ANR	3946848	CompoundStatement		43:34:1034:1034	3946502	3					
ANR	3946849	ExpressionStatement	"set_dist_nodes ( g , i , k , k + 1 )"	1540:5:39533:39564	3946502	0	True				
ANR	3946850	CallExpression	"set_dist_nodes ( g , i , k , k + 1 )"		3946502	0					
ANR	3946851	Callee	set_dist_nodes		3946502	0					
ANR	3946852	Identifier	set_dist_nodes		3946502	0					
ANR	3946853	ArgumentList	g		3946502	1					
ANR	3946854	Argument	g		3946502	0					
ANR	3946855	Identifier	g		3946502	0					
ANR	3946856	Argument	i		3946502	1					
ANR	3946857	Identifier	i		3946502	0					
ANR	3946858	Argument	k		3946502	2					
ANR	3946859	Identifier	k		3946502	0					
ANR	3946860	Argument	k + 1		3946502	3					
ANR	3946861	AdditiveExpression	k + 1		3946502	0		+			
ANR	3946862	Identifier	k		3946502	0					
ANR	3946863	PrimaryExpression	1		3946502	1					
ANR	3946864	IfStatement	"if ( is_valid_pos ( g , i , va ) )"		3946502	4					
ANR	3946865	Condition	"is_valid_pos ( g , i , va )"	1543:8:39581:39603	3946502	0	True				
ANR	3946866	CallExpression	"is_valid_pos ( g , i , va )"		3946502	0					
ANR	3946867	Callee	is_valid_pos		3946502	0					
ANR	3946868	Identifier	is_valid_pos		3946502	0					
ANR	3946869	ArgumentList	g		3946502	1					
ANR	3946870	Argument	g		3946502	0					
ANR	3946871	Identifier	g		3946502	0					
ANR	3946872	Argument	i		3946502	1					
ANR	3946873	Identifier	i		3946502	0					
ANR	3946874	Argument	va		3946502	2					
ANR	3946875	Identifier	va		3946502	0					
ANR	3946876	CompoundStatement		47:33:1114:1114	3946502	1					
ANR	3946877	ExpressionStatement	"set_dist_nodes ( g , i , bma -> pos_in_layer , va )"	1544:5:39613:39657	3946502	0	True				
ANR	3946878	CallExpression	"set_dist_nodes ( g , i , bma -> pos_in_layer , va )"		3946502	0					
ANR	3946879	Callee	set_dist_nodes		3946502	0					
ANR	3946880	Identifier	set_dist_nodes		3946502	0					
ANR	3946881	ArgumentList	g		3946502	1					
ANR	3946882	Argument	g		3946502	0					
ANR	3946883	Identifier	g		3946502	0					
ANR	3946884	Argument	i		3946502	1					
ANR	3946885	Identifier	i		3946502	0					
ANR	3946886	Argument	bma -> pos_in_layer		3946502	2					
ANR	3946887	PtrMemberAccess	bma -> pos_in_layer		3946502	0					
ANR	3946888	Identifier	bma		3946502	0					
ANR	3946889	Identifier	pos_in_layer		3946502	1					
ANR	3946890	Argument	va		3946502	3					
ANR	3946891	Identifier	va		3946502	0					
ANR	3946892	ElseStatement	else		3946502	0					
ANR	3946893	IfStatement	"if ( hash_get_int ( D , bm ) == from_up )"		3946502	0					
ANR	3946894	Condition	"hash_get_int ( D , bm ) == from_up"	1546:14:39679:39709	3946502	0	True				
ANR	3946895	EqualityExpression	"hash_get_int ( D , bm ) == from_up"		3946502	0		==			
ANR	3946896	CallExpression	"hash_get_int ( D , bm )"		3946502	0					
ANR	3946897	Callee	hash_get_int		3946502	0					
ANR	3946898	Identifier	hash_get_int		3946502	0					
ANR	3946899	ArgumentList	D		3946502	1					
ANR	3946900	Argument	D		3946502	0					
ANR	3946901	Identifier	D		3946502	0					
ANR	3946902	Argument	bm		3946502	1					
ANR	3946903	Identifier	bm		3946502	0					
ANR	3946904	Identifier	from_up		3946502	1					
ANR	3946905	CompoundStatement		50:47:1220:1220	3946502	1					
ANR	3946906	ExpressionStatement	bpa = get_anode ( bp )	1547:4:39718:39738	3946502	0	True				
ANR	3946907	AssignmentExpression	bpa = get_anode ( bp )		3946502	0		=			
ANR	3946908	Identifier	bpa		3946502	0					
ANR	3946909	CallExpression	get_anode ( bp )		3946502	1					
ANR	3946910	Callee	get_anode		3946502	0					
ANR	3946911	Identifier	get_anode		3946502	0					
ANR	3946912	ArgumentList	bp		3946502	1					
ANR	3946913	Argument	bp		3946502	0					
ANR	3946914	Identifier	bp		3946502	0					
ANR	3946915	ExpressionStatement	va = bma -> pos_in_layer + 1	1548:4:39744:39770	3946502	1	True				
ANR	3946916	AssignmentExpression	va = bma -> pos_in_layer + 1		3946502	0		=			
ANR	3946917	Identifier	va		3946502	0					
ANR	3946918	AdditiveExpression	bma -> pos_in_layer + 1		3946502	1		+			
ANR	3946919	PtrMemberAccess	bma -> pos_in_layer		3946502	0					
ANR	3946920	Identifier	bma		3946502	0					
ANR	3946921	Identifier	pos_in_layer		3946502	1					
ANR	3946922	PrimaryExpression	1		3946502	1					
ANR	3946923	ExpressionStatement	vr = bpa -> pos_in_layer	1549:4:39776:39798	3946502	2	True				
ANR	3946924	AssignmentExpression	vr = bpa -> pos_in_layer		3946502	0		=			
ANR	3946925	Identifier	vr		3946502	0					
ANR	3946926	PtrMemberAccess	bpa -> pos_in_layer		3946502	1					
ANR	3946927	Identifier	bpa		3946502	0					
ANR	3946928	Identifier	pos_in_layer		3946502	1					
ANR	3946929	ExpressionStatement	"place_sequence ( g , i , bm , bp , from_up , va , vr )"	1550:4:39804:39850	3946502	3	True				
ANR	3946930	CallExpression	"place_sequence ( g , i , bm , bp , from_up , va , vr )"		3946502	0					
ANR	3946931	Callee	place_sequence		3946502	0					
ANR	3946932	Identifier	place_sequence		3946502	0					
ANR	3946933	ArgumentList	g		3946502	1					
ANR	3946934	Argument	g		3946502	0					
ANR	3946935	Identifier	g		3946502	0					
ANR	3946936	Argument	i		3946502	1					
ANR	3946937	Identifier	i		3946502	0					
ANR	3946938	Argument	bm		3946502	2					
ANR	3946939	Identifier	bm		3946502	0					
ANR	3946940	Argument	bp		3946502	3					
ANR	3946941	Identifier	bp		3946502	0					
ANR	3946942	Argument	from_up		3946502	4					
ANR	3946943	Identifier	from_up		3946502	0					
ANR	3946944	Argument	va		3946502	5					
ANR	3946945	Identifier	va		3946502	0					
ANR	3946946	Argument	vr		3946502	6					
ANR	3946947	Identifier	vr		3946502	0					
ANR	3946948	ExpressionStatement	"hash_set ( P , bm , true )"	1551:4:39856:39878	3946502	4	True				
ANR	3946949	CallExpression	"hash_set ( P , bm , true )"		3946502	0					
ANR	3946950	Callee	hash_set		3946502	0					
ANR	3946951	Identifier	hash_set		3946502	0					
ANR	3946952	ArgumentList	P		3946502	1					
ANR	3946953	Argument	P		3946502	0					
ANR	3946954	Identifier	P		3946502	0					
ANR	3946955	Argument	bm		3946502	1					
ANR	3946956	Identifier	bm		3946502	0					
ANR	3946957	Argument	true		3946502	2					
ANR	3946958	Identifier	true		3946502	0					
ANR	3946959	ExpressionStatement	bm = bp	1553:3:39888:39895	3946502	4	True				
ANR	3946960	AssignmentExpression	bm = bp		3946502	0		=			
ANR	3946961	Identifier	bm		3946502	0					
ANR	3946962	Identifier	bp		3946502	1					
ANR	3946963	ExpressionStatement	"adjust_directions ( g , i , from_up , D , P )"	1555:2:39903:39942	3946502	10	True				
ANR	3946964	CallExpression	"adjust_directions ( g , i , from_up , D , P )"		3946502	0					
ANR	3946965	Callee	adjust_directions		3946502	0					
ANR	3946966	Identifier	adjust_directions		3946502	0					
ANR	3946967	ArgumentList	g		3946502	1					
ANR	3946968	Argument	g		3946502	0					
ANR	3946969	Identifier	g		3946502	0					
ANR	3946970	Argument	i		3946502	1					
ANR	3946971	Identifier	i		3946502	0					
ANR	3946972	Argument	from_up		3946502	2					
ANR	3946973	Identifier	from_up		3946502	0					
ANR	3946974	Argument	D		3946502	3					
ANR	3946975	Identifier	D		3946502	0					
ANR	3946976	Argument	P		3946502	4					
ANR	3946977	Identifier	P		3946502	0					
ANR	3946978	ReturnType	static void		3946502	1					
ANR	3946979	Identifier	original_traverse_l		3946502	2					
ANR	3946980	ParameterList	"const RAGraph * g , Sdb * D , Sdb * P , int from_up"		3946502	3					
ANR	3946981	Parameter	const RAGraph * g	1497:32:38444:38459	3946502	0	True				
ANR	3946982	ParameterType	const RAGraph *		3946502	0					
ANR	3946983	Identifier	g		3946502	1					
ANR	3946984	Parameter	Sdb * D	1497:50:38462:38467	3946502	1	True				
ANR	3946985	ParameterType	Sdb *		3946502	0					
ANR	3946986	Identifier	D		3946502	1					
ANR	3946987	Parameter	Sdb * P	1497:58:38470:38475	3946502	2	True				
ANR	3946988	ParameterType	Sdb *		3946502	0					
ANR	3946989	Identifier	P		3946502	1					
ANR	3946990	Parameter	int from_up	1497:66:38478:38488	3946502	3	True				
ANR	3946991	ParameterType	int		3946502	0					
ANR	3946992	Identifier	from_up		3946502	1					
ANR	3946993	CFGEntryNode	ENTRY		3946502		True				
ANR	3946994	CFGExitNode	EXIT		3946502		True				
ANR	3946995	Symbol	* bpa		3946502						
ANR	3946996	Symbol	from_up		3946502						
ANR	3946997	Symbol	D		3946502						
ANR	3946998	Symbol	bma -> pos_in_layer		3946502						
ANR	3946999	Symbol	g -> n_layers		3946502						
ANR	3947000	Symbol	* * bma		3946502						
ANR	3947001	Symbol	bm		3946502						
ANR	3947002	Symbol	bp		3946502						
ANR	3947003	Symbol	g -> layers [ bma -> layer ] . n_nodes		3946502						
ANR	3947004	Symbol	is_valid_pos		3946502						
ANR	3947005	Symbol	P		3946502						
ANR	3947006	Symbol	g -> layers [ i ] . nodes		3946502						
ANR	3947007	Symbol	bpa		3946502						
ANR	3947008	Symbol	bma -> layer		3946502						
ANR	3947009	Symbol	* bma -> layer		3946502						
ANR	3947010	Symbol	bpa -> pos_in_layer		3946502						
ANR	3947011	Symbol	* g -> layers [ i ] . nodes		3946502						
ANR	3947012	Symbol	an -> is_dummy		3946502						
ANR	3947013	Symbol	* bma		3946502						
ANR	3947014	Symbol	* * i		3946502						
ANR	3947015	Symbol	NULL		3946502						
ANR	3947016	Symbol	get_anode		3946502						
ANR	3947017	Symbol	* * g		3946502						
ANR	3947018	Symbol	g		3946502						
ANR	3947019	Symbol	gn		3946502						
ANR	3947020	Symbol	get_right_dummy		3946502						
ANR	3947021	Symbol	i		3946502						
ANR	3947022	Symbol	j		3946502						
ANR	3947023	Symbol	va		3946502						
ANR	3947024	Symbol	k		3946502						
ANR	3947025	Symbol	an		3946502						
ANR	3947026	Symbol	hash_get_int		3946502						
ANR	3947027	Symbol	* an		3946502						
ANR	3947028	Symbol	* g		3946502						
ANR	3947029	Symbol	* i		3946502						
ANR	3947030	Symbol	* j		3946502						
ANR	3947031	Symbol	bma		3946502						
ANR	3947032	Symbol	true		3946502						
ANR	3947033	Symbol	* g -> layers		3946502						
ANR	3947034	Symbol	* * * g		3946502						
ANR	3947035	Symbol	g -> layers [ i ] . n_nodes		3946502						
ANR	3947036	Symbol	vr		3946502						
ANR	3947037	Symbol	g -> layers		3946502						
ANR	3947038	Symbol	* * g -> layers		3946502						
ANR	3947039	Function	place_original	1562:0:40115:40977							
ANR	3947040	FunctionDef	place_original (RAGraph * g)		3947039	0					
ANR	3947041	CompoundStatement		1562:39:40154:40977	3947039	0					
ANR	3947042	IdentifierDeclStatement	const RList * nodes = r_graph_get_nodes ( g -> graph ) ;	1563:1:40157:40206	3947039	0	True				
ANR	3947043	IdentifierDecl	* nodes = r_graph_get_nodes ( g -> graph )		3947039	0					
ANR	3947044	IdentifierDeclType	const RList *		3947039	0					
ANR	3947045	Identifier	nodes		3947039	1					
ANR	3947046	AssignmentExpression	* nodes = r_graph_get_nodes ( g -> graph )		3947039	2		=			
ANR	3947047	Identifier	nodes		3947039	0					
ANR	3947048	CallExpression	r_graph_get_nodes ( g -> graph )		3947039	1					
ANR	3947049	Callee	r_graph_get_nodes		3947039	0					
ANR	3947050	Identifier	r_graph_get_nodes		3947039	0					
ANR	3947051	ArgumentList	g -> graph		3947039	1					
ANR	3947052	Argument	g -> graph		3947039	0					
ANR	3947053	PtrMemberAccess	g -> graph		3947039	0					
ANR	3947054	Identifier	g		3947039	0					
ANR	3947055	Identifier	graph		3947039	1					
ANR	3947056	IdentifierDeclStatement	const RGraphNode * gn ;	1564:1:40209:40229	3947039	1	True				
ANR	3947057	IdentifierDecl	* gn		3947039	0					
ANR	3947058	IdentifierDeclType	const RGraphNode *		3947039	0					
ANR	3947059	Identifier	gn		3947039	1					
ANR	3947060	IdentifierDeclStatement	const RListIter * itn ;	1565:1:40232:40252	3947039	2	True				
ANR	3947061	IdentifierDecl	* itn		3947039	0					
ANR	3947062	IdentifierDeclType	const RListIter *		3947039	0					
ANR	3947063	Identifier	itn		3947039	1					
ANR	3947064	IdentifierDeclStatement	const RANode * an ;	1566:1:40255:40271	3947039	3	True				
ANR	3947065	IdentifierDecl	* an		3947039	0					
ANR	3947066	IdentifierDeclType	const RANode *		3947039	0					
ANR	3947067	Identifier	an		3947039	1					
ANR	3947068	IdentifierDeclStatement	Sdb * D = sdb_new0 ( ) ;	1568:1:40275:40295	3947039	4	True				
ANR	3947069	IdentifierDecl	* D = sdb_new0 ( )		3947039	0					
ANR	3947070	IdentifierDeclType	Sdb *		3947039	0					
ANR	3947071	Identifier	D		3947039	1					
ANR	3947072	AssignmentExpression	* D = sdb_new0 ( )		3947039	2		=			
ANR	3947073	Identifier	D		3947039	0					
ANR	3947074	CallExpression	sdb_new0 ( )		3947039	1					
ANR	3947075	Callee	sdb_new0		3947039	0					
ANR	3947076	Identifier	sdb_new0		3947039	0					
ANR	3947077	ArgumentList			3947039	1					
ANR	3947078	IfStatement	if ( ! D )		3947039	5					
ANR	3947079	Condition	! D	1569:5:40302:40303	3947039	0	True				
ANR	3947080	UnaryOperationExpression	! D		3947039	0					
ANR	3947081	UnaryOperator	!		3947039	0					
ANR	3947082	Identifier	D		3947039	1					
ANR	3947083	CompoundStatement		8:9:151:151	3947039	1					
ANR	3947084	ReturnStatement	return ;	1570:2:40310:40316	3947039	0	True				
ANR	3947085	IdentifierDeclStatement	Sdb * P = sdb_new0 ( ) ;	1572:1:40322:40342	3947039	6	True				
ANR	3947086	IdentifierDecl	* P = sdb_new0 ( )		3947039	0					
ANR	3947087	IdentifierDeclType	Sdb *		3947039	0					
ANR	3947088	Identifier	P		3947039	1					
ANR	3947089	AssignmentExpression	* P = sdb_new0 ( )		3947039	2		=			
ANR	3947090	Identifier	P		3947039	0					
ANR	3947091	CallExpression	sdb_new0 ( )		3947039	1					
ANR	3947092	Callee	sdb_new0		3947039	0					
ANR	3947093	Identifier	sdb_new0		3947039	0					
ANR	3947094	ArgumentList			3947039	1					
ANR	3947095	IfStatement	if ( ! P )		3947039	7					
ANR	3947096	Condition	! P	1573:5:40349:40350	3947039	0	True				
ANR	3947097	UnaryOperationExpression	! P		3947039	0					
ANR	3947098	UnaryOperator	!		3947039	0					
ANR	3947099	Identifier	P		3947039	1					
ANR	3947100	CompoundStatement		12:9:198:198	3947039	1					
ANR	3947101	ExpressionStatement	sdb_free ( D )	1574:2:40357:40369	3947039	0	True				
ANR	3947102	CallExpression	sdb_free ( D )		3947039	0					
ANR	3947103	Callee	sdb_free		3947039	0					
ANR	3947104	Identifier	sdb_free		3947039	0					
ANR	3947105	ArgumentList	D		3947039	1					
ANR	3947106	Argument	D		3947039	0					
ANR	3947107	Identifier	D		3947039	0					
ANR	3947108	ReturnStatement	return ;	1575:2:40373:40379	3947039	1	True				
ANR	3947109	ExpressionStatement	g -> dists = r_list_newf ( ( RListFree ) free )	1577:1:40385:40426	3947039	8	True				
ANR	3947110	AssignmentExpression	g -> dists = r_list_newf ( ( RListFree ) free )		3947039	0		=			
ANR	3947111	PtrMemberAccess	g -> dists		3947039	0					
ANR	3947112	Identifier	g		3947039	0					
ANR	3947113	Identifier	dists		3947039	1					
ANR	3947114	CallExpression	r_list_newf ( ( RListFree ) free )		3947039	1					
ANR	3947115	Callee	r_list_newf		3947039	0					
ANR	3947116	Identifier	r_list_newf		3947039	0					
ANR	3947117	ArgumentList	( RListFree ) free		3947039	1					
ANR	3947118	Argument	( RListFree ) free		3947039	0					
ANR	3947119	CastExpression	( RListFree ) free		3947039	0					
ANR	3947120	CastTarget	RListFree		3947039	0					
ANR	3947121	Identifier	free		3947039	1					
ANR	3947122	IfStatement	if ( ! g -> dists )		3947039	9					
ANR	3947123	Condition	! g -> dists	1578:5:40433:40441	3947039	0	True				
ANR	3947124	UnaryOperationExpression	! g -> dists		3947039	0					
ANR	3947125	UnaryOperator	!		3947039	0					
ANR	3947126	PtrMemberAccess	g -> dists		3947039	1					
ANR	3947127	Identifier	g		3947039	0					
ANR	3947128	Identifier	dists		3947039	1					
ANR	3947129	CompoundStatement		17:16:289:289	3947039	1					
ANR	3947130	ExpressionStatement	sdb_free ( D )	1579:2:40448:40460	3947039	0	True				
ANR	3947131	CallExpression	sdb_free ( D )		3947039	0					
ANR	3947132	Callee	sdb_free		3947039	0					
ANR	3947133	Identifier	sdb_free		3947039	0					
ANR	3947134	ArgumentList	D		3947039	1					
ANR	3947135	Argument	D		3947039	0					
ANR	3947136	Identifier	D		3947039	0					
ANR	3947137	ExpressionStatement	sdb_free ( P )	1580:2:40464:40476	3947039	1	True				
ANR	3947138	CallExpression	sdb_free ( P )		3947039	0					
ANR	3947139	Callee	sdb_free		3947039	0					
ANR	3947140	Identifier	sdb_free		3947039	0					
ANR	3947141	ArgumentList	P		3947039	1					
ANR	3947142	Argument	P		3947039	0					
ANR	3947143	Identifier	P		3947039	0					
ANR	3947144	ReturnStatement	return ;	1581:2:40480:40486	3947039	2	True				
ANR	3947145	Statement	graph_foreach_anode	1584:1:40493:40511	3947039	10	True				
ANR	3947146	Statement	(	1584:21:40513:40513	3947039	11	True				
ANR	3947147	Statement	nodes	1584:22:40514:40518	3947039	12	True				
ANR	3947148	Statement	","	1584:27:40519:40519	3947039	13	True				
ANR	3947149	Statement	itn	1584:29:40521:40523	3947039	14	True				
ANR	3947150	Statement	","	1584:32:40524:40524	3947039	15	True				
ANR	3947151	Statement	gn	1584:34:40526:40527	3947039	16	True				
ANR	3947152	Statement	","	1584:36:40528:40528	3947039	17	True				
ANR	3947153	Statement	an	1584:38:40530:40531	3947039	18	True				
ANR	3947154	Statement	)	1584:40:40532:40532	3947039	19	True				
ANR	3947155	CompoundStatement		28:2:478:519	3947039	20					
ANR	3947156	IfStatement	if ( ! an -> is_dummy )		3947039	0					
ANR	3947157	Condition	! an -> is_dummy	1585:6:40542:40554	3947039	0	True				
ANR	3947158	UnaryOperationExpression	! an -> is_dummy		3947039	0					
ANR	3947159	UnaryOperator	!		3947039	0					
ANR	3947160	PtrMemberAccess	an -> is_dummy		3947039	1					
ANR	3947161	Identifier	an		3947039	0					
ANR	3947162	Identifier	is_dummy		3947039	1					
ANR	3947163	CompoundStatement		24:21:402:402	3947039	1					
ANR	3947164	ContinueStatement	continue ;	1586:3:40562:40570	3947039	0	True				
ANR	3947165	IdentifierDeclStatement	"const RGraphNode * right_v = get_right_dummy ( g , gn ) ;"	1588:2:40578:40629	3947039	1	True				
ANR	3947166	IdentifierDecl	"* right_v = get_right_dummy ( g , gn )"		3947039	0					
ANR	3947167	IdentifierDeclType	const RGraphNode *		3947039	0					
ANR	3947168	Identifier	right_v		3947039	1					
ANR	3947169	AssignmentExpression	"* right_v = get_right_dummy ( g , gn )"		3947039	2		=			
ANR	3947170	Identifier	right_v		3947039	0					
ANR	3947171	CallExpression	"get_right_dummy ( g , gn )"		3947039	1					
ANR	3947172	Callee	get_right_dummy		3947039	0					
ANR	3947173	Identifier	get_right_dummy		3947039	0					
ANR	3947174	ArgumentList	g		3947039	1					
ANR	3947175	Argument	g		3947039	0					
ANR	3947176	Identifier	g		3947039	0					
ANR	3947177	Argument	gn		3947039	1					
ANR	3947178	Identifier	gn		3947039	0					
ANR	3947179	IdentifierDeclStatement	const RANode * right = get_anode ( right_v ) ;	1589:2:40633:40674	3947039	2	True				
ANR	3947180	IdentifierDecl	* right = get_anode ( right_v )		3947039	0					
ANR	3947181	IdentifierDeclType	const RANode *		3947039	0					
ANR	3947182	Identifier	right		3947039	1					
ANR	3947183	AssignmentExpression	* right = get_anode ( right_v )		3947039	2		=			
ANR	3947184	Identifier	right		3947039	0					
ANR	3947185	CallExpression	get_anode ( right_v )		3947039	1					
ANR	3947186	Callee	get_anode		3947039	0					
ANR	3947187	Identifier	get_anode		3947039	0					
ANR	3947188	ArgumentList	right_v		3947039	1					
ANR	3947189	Argument	right_v		3947039	0					
ANR	3947190	Identifier	right_v		3947039	0					
ANR	3947191	IfStatement	if ( right_v && right )		3947039	3					
ANR	3947192	Condition	right_v && right	1590:6:40682:40697	3947039	0	True				
ANR	3947193	AndExpression	right_v && right		3947039	0		&&			
ANR	3947194	Identifier	right_v		3947039	0					
ANR	3947195	Identifier	right		3947039	1					
ANR	3947196	CompoundStatement		31:3:574:633	3947039	1					
ANR	3947197	ExpressionStatement	"hash_set ( D , gn , 0 )"	1591:3:40705:40724	3947039	0	True				
ANR	3947198	CallExpression	"hash_set ( D , gn , 0 )"		3947039	0					
ANR	3947199	Callee	hash_set		3947039	0					
ANR	3947200	Identifier	hash_set		3947039	0					
ANR	3947201	ArgumentList	D		3947039	1					
ANR	3947202	Argument	D		3947039	0					
ANR	3947203	Identifier	D		3947039	0					
ANR	3947204	Argument	gn		3947039	1					
ANR	3947205	Identifier	gn		3947039	0					
ANR	3947206	Argument	0		3947039	2					
ANR	3947207	PrimaryExpression	0		3947039	0					
ANR	3947208	IdentifierDeclStatement	"int dt_eq = right -> x - an -> x == dist_nodes ( g , gn , right_v ) ;"	1592:3:40729:40788	3947039	1	True				
ANR	3947209	IdentifierDecl	"dt_eq = right -> x - an -> x == dist_nodes ( g , gn , right_v )"		3947039	0					
ANR	3947210	IdentifierDeclType	int		3947039	0					
ANR	3947211	Identifier	dt_eq		3947039	1					
ANR	3947212	AssignmentExpression	"dt_eq = right -> x - an -> x == dist_nodes ( g , gn , right_v )"		3947039	2		=			
ANR	3947213	Identifier	dt_eq		3947039	0					
ANR	3947214	EqualityExpression	"right -> x - an -> x == dist_nodes ( g , gn , right_v )"		3947039	1		==			
ANR	3947215	AdditiveExpression	right -> x - an -> x		3947039	0		-			
ANR	3947216	PtrMemberAccess	right -> x		3947039	0					
ANR	3947217	Identifier	right		3947039	0					
ANR	3947218	Identifier	x		3947039	1					
ANR	3947219	PtrMemberAccess	an -> x		3947039	1					
ANR	3947220	Identifier	an		3947039	0					
ANR	3947221	Identifier	x		3947039	1					
ANR	3947222	CallExpression	"dist_nodes ( g , gn , right_v )"		3947039	1					
ANR	3947223	Callee	dist_nodes		3947039	0					
ANR	3947224	Identifier	dist_nodes		3947039	0					
ANR	3947225	ArgumentList	g		3947039	1					
ANR	3947226	Argument	g		3947039	0					
ANR	3947227	Identifier	g		3947039	0					
ANR	3947228	Argument	gn		3947039	1					
ANR	3947229	Identifier	gn		3947039	0					
ANR	3947230	Argument	right_v		3947039	2					
ANR	3947231	Identifier	right_v		3947039	0					
ANR	3947232	ExpressionStatement	"hash_set ( P , gn , dt_eq )"	1593:3:40793:40816	3947039	2	True				
ANR	3947233	CallExpression	"hash_set ( P , gn , dt_eq )"		3947039	0					
ANR	3947234	Callee	hash_set		3947039	0					
ANR	3947235	Identifier	hash_set		3947039	0					
ANR	3947236	ArgumentList	P		3947039	1					
ANR	3947237	Argument	P		3947039	0					
ANR	3947238	Identifier	P		3947039	0					
ANR	3947239	Argument	gn		3947039	1					
ANR	3947240	Identifier	gn		3947039	0					
ANR	3947241	Argument	dt_eq		3947039	2					
ANR	3947242	Identifier	dt_eq		3947039	0					
ANR	3947243	ExpressionStatement	"original_traverse_l ( g , D , P , true )"	1597:1:40827:40862	3947039	21	True				
ANR	3947244	CallExpression	"original_traverse_l ( g , D , P , true )"		3947039	0					
ANR	3947245	Callee	original_traverse_l		3947039	0					
ANR	3947246	Identifier	original_traverse_l		3947039	0					
ANR	3947247	ArgumentList	g		3947039	1					
ANR	3947248	Argument	g		3947039	0					
ANR	3947249	Identifier	g		3947039	0					
ANR	3947250	Argument	D		3947039	1					
ANR	3947251	Identifier	D		3947039	0					
ANR	3947252	Argument	P		3947039	2					
ANR	3947253	Identifier	P		3947039	0					
ANR	3947254	Argument	true		3947039	3					
ANR	3947255	Identifier	true		3947039	0					
ANR	3947256	ExpressionStatement	"original_traverse_l ( g , D , P , false )"	1598:1:40865:40901	3947039	22	True				
ANR	3947257	CallExpression	"original_traverse_l ( g , D , P , false )"		3947039	0					
ANR	3947258	Callee	original_traverse_l		3947039	0					
ANR	3947259	Identifier	original_traverse_l		3947039	0					
ANR	3947260	ArgumentList	g		3947039	1					
ANR	3947261	Argument	g		3947039	0					
ANR	3947262	Identifier	g		3947039	0					
ANR	3947263	Argument	D		3947039	1					
ANR	3947264	Identifier	D		3947039	0					
ANR	3947265	Argument	P		3947039	2					
ANR	3947266	Identifier	P		3947039	0					
ANR	3947267	Argument	false		3947039	3					
ANR	3947268	Identifier	false		3947039	0					
ANR	3947269	ExpressionStatement	r_list_free ( g -> dists )	1600:1:40905:40927	3947039	23	True				
ANR	3947270	CallExpression	r_list_free ( g -> dists )		3947039	0					
ANR	3947271	Callee	r_list_free		3947039	0					
ANR	3947272	Identifier	r_list_free		3947039	0					
ANR	3947273	ArgumentList	g -> dists		3947039	1					
ANR	3947274	Argument	g -> dists		3947039	0					
ANR	3947275	PtrMemberAccess	g -> dists		3947039	0					
ANR	3947276	Identifier	g		3947039	0					
ANR	3947277	Identifier	dists		3947039	1					
ANR	3947278	ExpressionStatement	g -> dists = NULL	1601:1:40930:40945	3947039	24	True				
ANR	3947279	AssignmentExpression	g -> dists = NULL		3947039	0		=			
ANR	3947280	PtrMemberAccess	g -> dists		3947039	0					
ANR	3947281	Identifier	g		3947039	0					
ANR	3947282	Identifier	dists		3947039	1					
ANR	3947283	Identifier	NULL		3947039	1					
ANR	3947284	ExpressionStatement	sdb_free ( P )	1602:1:40948:40960	3947039	25	True				
ANR	3947285	CallExpression	sdb_free ( P )		3947039	0					
ANR	3947286	Callee	sdb_free		3947039	0					
ANR	3947287	Identifier	sdb_free		3947039	0					
ANR	3947288	ArgumentList	P		3947039	1					
ANR	3947289	Argument	P		3947039	0					
ANR	3947290	Identifier	P		3947039	0					
ANR	3947291	ExpressionStatement	sdb_free ( D )	1603:1:40963:40975	3947039	26	True				
ANR	3947292	CallExpression	sdb_free ( D )		3947039	0					
ANR	3947293	Callee	sdb_free		3947039	0					
ANR	3947294	Identifier	sdb_free		3947039	0					
ANR	3947295	ArgumentList	D		3947039	1					
ANR	3947296	Argument	D		3947039	0					
ANR	3947297	Identifier	D		3947039	0					
ANR	3947298	ReturnType	static void		3947039	1					
ANR	3947299	Identifier	place_original		3947039	2					
ANR	3947300	ParameterList	RAGraph * g		3947039	3					
ANR	3947301	Parameter	RAGraph * g	1562:27:40142:40151	3947039	0	True				
ANR	3947302	ParameterType	RAGraph *		3947039	0					
ANR	3947303	Identifier	g		3947039	1					
ANR	3947304	CFGEntryNode	ENTRY		3947039		True				
ANR	3947305	CFGExitNode	EXIT		3947039		True				
ANR	3947306	CFGErrorNode	ERROR		3947039		True				
ANR	3947307	Symbol	dist_nodes		3947039						
ANR	3947308	Symbol	D		3947039						
ANR	3947309	Symbol	g -> dists		3947039						
ANR	3947310	Symbol	dt_eq		3947039						
ANR	3947311	Symbol	P		3947039						
ANR	3947312	Symbol	g -> graph		3947039						
ANR	3947313	Symbol	an -> x		3947039						
ANR	3947314	Symbol	free		3947039						
ANR	3947315	Symbol	right_v		3947039						
ANR	3947316	Symbol	an -> is_dummy		3947039						
ANR	3947317	Symbol	sdb_new0		3947039						
ANR	3947318	Symbol	itn		3947039						
ANR	3947319	Symbol	r_graph_get_nodes		3947039						
ANR	3947320	Symbol	get_anode		3947039						
ANR	3947321	Symbol	NULL		3947039						
ANR	3947322	Symbol	r_list_newf		3947039						
ANR	3947323	Symbol	g		3947039						
ANR	3947324	Symbol	gn		3947039						
ANR	3947325	Symbol	get_right_dummy		3947039						
ANR	3947326	Symbol	false		3947039						
ANR	3947327	Symbol	right		3947039						
ANR	3947328	Symbol	an		3947039						
ANR	3947329	Symbol	* an		3947039						
ANR	3947330	Symbol	* g		3947039						
ANR	3947331	Symbol	nodes		3947039						
ANR	3947332	Symbol	true		3947039						
ANR	3947333	Symbol	right -> x		3947039						
ANR	3947334	Symbol	* right		3947039						
ANR	3947335	DeclStmt									
ANR	3947336	Decl							void	void ( RANode * n )	free_anode
ANR	3947337	Function	remove_dummy_nodes	1608:0:41021:41315							
ANR	3947338	FunctionDef	remove_dummy_nodes (const RAGraph * g)		3947337	0					
ANR	3947339	CompoundStatement		1608:49:41070:41315	3947337	0					
ANR	3947340	IdentifierDeclStatement	const RList * nodes = r_graph_get_nodes ( g -> graph ) ;	1609:1:41073:41122	3947337	0	True				
ANR	3947341	IdentifierDecl	* nodes = r_graph_get_nodes ( g -> graph )		3947337	0					
ANR	3947342	IdentifierDeclType	const RList *		3947337	0					
ANR	3947343	Identifier	nodes		3947337	1					
ANR	3947344	AssignmentExpression	* nodes = r_graph_get_nodes ( g -> graph )		3947337	2		=			
ANR	3947345	Identifier	nodes		3947337	0					
ANR	3947346	CallExpression	r_graph_get_nodes ( g -> graph )		3947337	1					
ANR	3947347	Callee	r_graph_get_nodes		3947337	0					
ANR	3947348	Identifier	r_graph_get_nodes		3947337	0					
ANR	3947349	ArgumentList	g -> graph		3947337	1					
ANR	3947350	Argument	g -> graph		3947337	0					
ANR	3947351	PtrMemberAccess	g -> graph		3947337	0					
ANR	3947352	Identifier	g		3947337	0					
ANR	3947353	Identifier	graph		3947337	1					
ANR	3947354	IdentifierDeclStatement	RGraphNode * gn ;	1610:1:41125:41139	3947337	1	True				
ANR	3947355	IdentifierDecl	* gn		3947337	0					
ANR	3947356	IdentifierDeclType	RGraphNode *		3947337	0					
ANR	3947357	Identifier	gn		3947337	1					
ANR	3947358	IdentifierDeclStatement	RListIter * it ;	1611:1:41142:41155	3947337	2	True				
ANR	3947359	IdentifierDecl	* it		3947337	0					
ANR	3947360	IdentifierDeclType	RListIter *		3947337	0					
ANR	3947361	Identifier	it		3947337	1					
ANR	3947362	IdentifierDeclStatement	RANode * n ;	1612:1:41158:41167	3947337	3	True				
ANR	3947363	IdentifierDecl	* n		3947337	0					
ANR	3947364	IdentifierDeclType	RANode *		3947337	0					
ANR	3947365	Identifier	n		3947337	1					
ANR	3947366	Statement	graph_foreach_anode	1614:1:41171:41189	3947337	4	True				
ANR	3947367	Statement	(	1614:21:41191:41191	3947337	5	True				
ANR	3947368	Statement	nodes	1614:22:41192:41196	3947337	6	True				
ANR	3947369	Statement	","	1614:27:41197:41197	3947337	7	True				
ANR	3947370	Statement	it	1614:29:41199:41200	3947337	8	True				
ANR	3947371	Statement	","	1614:31:41201:41201	3947337	9	True				
ANR	3947372	Statement	gn	1614:33:41203:41204	3947337	10	True				
ANR	3947373	Statement	","	1614:35:41205:41205	3947337	11	True				
ANR	3947374	Statement	n	1614:37:41207:41207	3947337	12	True				
ANR	3947375	Statement	)	1614:38:41208:41208	3947337	13	True				
ANR	3947376	CompoundStatement		7:40:139:139	3947337	14					
ANR	3947377	IfStatement	if ( n -> is_dummy )		3947337	0					
ANR	3947378	Condition	n -> is_dummy	1615:6:41218:41228	3947337	0	True				
ANR	3947379	PtrMemberAccess	n -> is_dummy		3947337	0					
ANR	3947380	Identifier	n		3947337	0					
ANR	3947381	Identifier	is_dummy		3947337	1					
ANR	3947382	CompoundStatement		8:19:160:160	3947337	1					
ANR	3947383	ExpressionStatement	"r_graph_del_node ( g -> graph , gn )"	1616:3:41236:41267	3947337	0	True				
ANR	3947384	CallExpression	"r_graph_del_node ( g -> graph , gn )"		3947337	0					
ANR	3947385	Callee	r_graph_del_node		3947337	0					
ANR	3947386	Identifier	r_graph_del_node		3947337	0					
ANR	3947387	ArgumentList	g -> graph		3947337	1					
ANR	3947388	Argument	g -> graph		3947337	0					
ANR	3947389	PtrMemberAccess	g -> graph		3947337	0					
ANR	3947390	Identifier	g		3947337	0					
ANR	3947391	Identifier	graph		3947337	1					
ANR	3947392	Argument	gn		3947337	1					
ANR	3947393	Identifier	gn		3947337	0					
ANR	3947394	ExpressionStatement	n -> gnode = NULL	1617:3:41272:41287	3947337	1	True				
ANR	3947395	AssignmentExpression	n -> gnode = NULL		3947337	0		=			
ANR	3947396	PtrMemberAccess	n -> gnode		3947337	0					
ANR	3947397	Identifier	n		3947337	0					
ANR	3947398	Identifier	gnode		3947337	1					
ANR	3947399	Identifier	NULL		3947337	1					
ANR	3947400	ExpressionStatement	free_anode ( n )	1618:3:41292:41306	3947337	2	True				
ANR	3947401	CallExpression	free_anode ( n )		3947337	0					
ANR	3947402	Callee	free_anode		3947337	0					
ANR	3947403	Identifier	free_anode		3947337	0					
ANR	3947404	ArgumentList	n		3947337	1					
ANR	3947405	Argument	n		3947337	0					
ANR	3947406	Identifier	n		3947337	0					
ANR	3947407	ReturnType	static void		3947337	1					
ANR	3947408	Identifier	remove_dummy_nodes		3947337	2					
ANR	3947409	ParameterList	const RAGraph * g		3947337	3					
ANR	3947410	Parameter	const RAGraph * g	1608:31:41052:41067	3947337	0	True				
ANR	3947411	ParameterType	const RAGraph *		3947337	0					
ANR	3947412	Identifier	g		3947337	1					
ANR	3947413	CFGEntryNode	ENTRY		3947337		True				
ANR	3947414	CFGExitNode	EXIT		3947337		True				
ANR	3947415	Symbol	* g		3947337						
ANR	3947416	Symbol	n -> gnode		3947337						
ANR	3947417	Symbol	r_graph_get_nodes		3947337						
ANR	3947418	Symbol	nodes		3947337						
ANR	3947419	Symbol	NULL		3947337						
ANR	3947420	Symbol	g -> graph		3947337						
ANR	3947421	Symbol	g		3947337						
ANR	3947422	Symbol	gn		3947337						
ANR	3947423	Symbol	n -> is_dummy		3947337						
ANR	3947424	Symbol	* n		3947337						
ANR	3947425	Symbol	it		3947337						
ANR	3947426	Symbol	n		3947337						
ANR	3947427	Function	set_layer_gap	1624:0:41325:42547							
ANR	3947428	FunctionDef	set_layer_gap (RAGraph * g)		3947427	0					
ANR	3947429	CompoundStatement		1624:39:41364:42547	3947427	0					
ANR	3947430	IdentifierDeclStatement	int gap = 0 ;	1625:1:41367:41378	3947427	0	True				
ANR	3947431	IdentifierDecl	gap = 0		3947427	0					
ANR	3947432	IdentifierDeclType	int		3947427	0					
ANR	3947433	Identifier	gap		3947427	1					
ANR	3947434	AssignmentExpression	gap = 0		3947427	2		=			
ANR	3947435	Identifier	gap		3947427	0					
ANR	3947436	PrimaryExpression	0		3947427	1					
ANR	3947437	IdentifierDeclStatement	"int i = 0 , j = 0 ;"	1626:1:41381:41397	3947427	1	True				
ANR	3947438	IdentifierDecl	i = 0		3947427	0					
ANR	3947439	IdentifierDeclType	int		3947427	0					
ANR	3947440	Identifier	i		3947427	1					
ANR	3947441	AssignmentExpression	i = 0		3947427	2		=			
ANR	3947442	Identifier	i		3947427	0					
ANR	3947443	PrimaryExpression	0		3947427	1					
ANR	3947444	IdentifierDecl	j = 0		3947427	1					
ANR	3947445	IdentifierDeclType	int		3947427	0					
ANR	3947446	Identifier	j		3947427	1					
ANR	3947447	AssignmentExpression	j = 0		3947427	2		=			
ANR	3947448	Identifier	j		3947427	0					
ANR	3947449	PrimaryExpression	0		3947427	1					
ANR	3947450	IdentifierDeclStatement	RListIter * itn ;	1627:1:41400:41414	3947427	2	True				
ANR	3947451	IdentifierDecl	* itn		3947427	0					
ANR	3947452	IdentifierDeclType	RListIter *		3947427	0					
ANR	3947453	Identifier	itn		3947427	1					
ANR	3947454	IdentifierDeclStatement	"RGraphNode * ga , * gb ;"	1628:1:41417:41436	3947427	3	True				
ANR	3947455	IdentifierDecl	* ga		3947427	0					
ANR	3947456	IdentifierDeclType	RGraphNode *		3947427	0					
ANR	3947457	Identifier	ga		3947427	1					
ANR	3947458	IdentifierDecl	* gb		3947427	1					
ANR	3947459	IdentifierDeclType	RGraphNode *		3947427	0					
ANR	3947460	Identifier	gb		3947427	1					
ANR	3947461	IdentifierDeclStatement	"RANode * a , * b ;"	1629:1:41439:41452	3947427	4	True				
ANR	3947462	IdentifierDecl	* a		3947427	0					
ANR	3947463	IdentifierDeclType	RANode *		3947427	0					
ANR	3947464	Identifier	a		3947427	1					
ANR	3947465	IdentifierDecl	* b		3947427	1					
ANR	3947466	IdentifierDeclType	RANode *		3947427	0					
ANR	3947467	Identifier	b		3947427	1					
ANR	3947468	IdentifierDeclStatement	const RList * outnodes ;	1630:1:41455:41476	3947427	5	True				
ANR	3947469	IdentifierDecl	* outnodes		3947427	0					
ANR	3947470	IdentifierDeclType	const RList *		3947427	0					
ANR	3947471	Identifier	outnodes		3947427	1					
ANR	3947472	ExpressionStatement	g -> layers [ 0 ] . gap = 0	1632:1:41480:41500	3947427	6	True				
ANR	3947473	AssignmentExpression	g -> layers [ 0 ] . gap = 0		3947427	0		=			
ANR	3947474	MemberAccess	g -> layers [ 0 ] . gap		3947427	0					
ANR	3947475	ArrayIndexing	g -> layers [ 0 ]		3947427	0					
ANR	3947476	PtrMemberAccess	g -> layers		3947427	0					
ANR	3947477	Identifier	g		3947427	0					
ANR	3947478	Identifier	layers		3947427	1					
ANR	3947479	PrimaryExpression	0		3947427	1					
ANR	3947480	Identifier	gap		3947427	1					
ANR	3947481	PrimaryExpression	0		3947427	1					
ANR	3947482	ForStatement	for ( i = 0 ; i < g -> n_layers ; i ++ )		3947427	7					
ANR	3947483	ForInit	i = 0 ;	1633:6:41508:41513	3947427	0	True				
ANR	3947484	AssignmentExpression	i = 0		3947427	0		=			
ANR	3947485	Identifier	i		3947427	0					
ANR	3947486	PrimaryExpression	0		3947427	1					
ANR	3947487	Condition	i < g -> n_layers	1633:13:41515:41529	3947427	1	True				
ANR	3947488	RelationalExpression	i < g -> n_layers		3947427	0		<			
ANR	3947489	Identifier	i		3947427	0					
ANR	3947490	PtrMemberAccess	g -> n_layers		3947427	1					
ANR	3947491	Identifier	g		3947427	0					
ANR	3947492	Identifier	n_layers		3947427	1					
ANR	3947493	PostIncDecOperationExpression	i ++	1633:30:41532:41534	3947427	2	True				
ANR	3947494	Identifier	i		3947427	0					
ANR	3947495	IncDec	++		3947427	1					
ANR	3947496	CompoundStatement		10:35:172:172	3947427	3					
ANR	3947497	ExpressionStatement	gap = 0	1634:2:41541:41548	3947427	0	True				
ANR	3947498	AssignmentExpression	gap = 0		3947427	0		=			
ANR	3947499	Identifier	gap		3947427	0					
ANR	3947500	PrimaryExpression	0		3947427	1					
ANR	3947501	IfStatement	if ( i + 1 < g -> n_layers )		3947427	1					
ANR	3947502	Condition	i + 1 < g -> n_layers	1635:6:41556:41574	3947427	0	True				
ANR	3947503	RelationalExpression	i + 1 < g -> n_layers		3947427	0		<			
ANR	3947504	AdditiveExpression	i + 1		3947427	0		+			
ANR	3947505	Identifier	i		3947427	0					
ANR	3947506	PrimaryExpression	1		3947427	1					
ANR	3947507	PtrMemberAccess	g -> n_layers		3947427	1					
ANR	3947508	Identifier	g		3947427	0					
ANR	3947509	Identifier	n_layers		3947427	1					
ANR	3947510	CompoundStatement		12:27:212:212	3947427	1					
ANR	3947511	ExpressionStatement	g -> layers [ i + 1 ] . gap = gap	1636:3:41582:41606	3947427	0	True				
ANR	3947512	AssignmentExpression	g -> layers [ i + 1 ] . gap = gap		3947427	0		=			
ANR	3947513	MemberAccess	g -> layers [ i + 1 ] . gap		3947427	0					
ANR	3947514	ArrayIndexing	g -> layers [ i + 1 ]		3947427	0					
ANR	3947515	PtrMemberAccess	g -> layers		3947427	0					
ANR	3947516	Identifier	g		3947427	0					
ANR	3947517	Identifier	layers		3947427	1					
ANR	3947518	AdditiveExpression	i + 1		3947427	1		+			
ANR	3947519	Identifier	i		3947427	0					
ANR	3947520	PrimaryExpression	1		3947427	1					
ANR	3947521	Identifier	gap		3947427	1					
ANR	3947522	Identifier	gap		3947427	1					
ANR	3947523	ForStatement	for ( j = 0 ; j < g -> layers [ i ] . n_nodes ; j ++ )		3947427	2					
ANR	3947524	ForInit	j = 0 ;	1638:7:41619:41624	3947427	0	True				
ANR	3947525	AssignmentExpression	j = 0		3947427	0		=			
ANR	3947526	Identifier	j		3947427	0					
ANR	3947527	PrimaryExpression	0		3947427	1					
ANR	3947528	Condition	j < g -> layers [ i ] . n_nodes	1638:14:41626:41649	3947427	1	True				
ANR	3947529	RelationalExpression	j < g -> layers [ i ] . n_nodes		3947427	0		<			
ANR	3947530	Identifier	j		3947427	0					
ANR	3947531	MemberAccess	g -> layers [ i ] . n_nodes		3947427	1					
ANR	3947532	ArrayIndexing	g -> layers [ i ]		3947427	0					
ANR	3947533	PtrMemberAccess	g -> layers		3947427	0					
ANR	3947534	Identifier	g		3947427	0					
ANR	3947535	Identifier	layers		3947427	1					
ANR	3947536	Identifier	i		3947427	1					
ANR	3947537	Identifier	n_nodes		3947427	1					
ANR	3947538	PostIncDecOperationExpression	j ++	1638:40:41652:41654	3947427	2	True				
ANR	3947539	Identifier	j		3947427	0					
ANR	3947540	IncDec	++		3947427	1					
ANR	3947541	CompoundStatement		15:45:292:292	3947427	3					
ANR	3947542	ExpressionStatement	ga = g -> layers [ i ] . nodes [ j ]	1639:3:41662:41688	3947427	0	True				
ANR	3947543	AssignmentExpression	ga = g -> layers [ i ] . nodes [ j ]		3947427	0		=			
ANR	3947544	Identifier	ga		3947427	0					
ANR	3947545	ArrayIndexing	g -> layers [ i ] . nodes [ j ]		3947427	1					
ANR	3947546	MemberAccess	g -> layers [ i ] . nodes		3947427	0					
ANR	3947547	ArrayIndexing	g -> layers [ i ]		3947427	0					
ANR	3947548	PtrMemberAccess	g -> layers		3947427	0					
ANR	3947549	Identifier	g		3947427	0					
ANR	3947550	Identifier	layers		3947427	1					
ANR	3947551	Identifier	i		3947427	1					
ANR	3947552	Identifier	nodes		3947427	1					
ANR	3947553	Identifier	j		3947427	1					
ANR	3947554	IfStatement	if ( ! ga )		3947427	1					
ANR	3947555	Condition	! ga	1640:7:41697:41699	3947427	0	True				
ANR	3947556	UnaryOperationExpression	! ga		3947427	0					
ANR	3947557	UnaryOperator	!		3947427	0					
ANR	3947558	Identifier	ga		3947427	1					
ANR	3947559	CompoundStatement		17:12:337:337	3947427	1					
ANR	3947560	ContinueStatement	continue ;	1641:4:41708:41716	3947427	0	True				
ANR	3947561	ExpressionStatement	a = ( RANode * ) ga -> data	1643:3:41726:41749	3947427	2	True				
ANR	3947562	AssignmentExpression	a = ( RANode * ) ga -> data		3947427	0		=			
ANR	3947563	Identifier	a		3947427	0					
ANR	3947564	CastExpression	( RANode * ) ga -> data		3947427	1					
ANR	3947565	CastTarget	RANode *		3947427	0					
ANR	3947566	PtrMemberAccess	ga -> data		3947427	1					
ANR	3947567	Identifier	ga		3947427	0					
ANR	3947568	Identifier	data		3947427	1					
ANR	3947569	ExpressionStatement	outnodes = ga -> out_nodes	1644:3:41754:41778	3947427	3	True				
ANR	3947570	AssignmentExpression	outnodes = ga -> out_nodes		3947427	0		=			
ANR	3947571	Identifier	outnodes		3947427	0					
ANR	3947572	PtrMemberAccess	ga -> out_nodes		3947427	1					
ANR	3947573	Identifier	ga		3947427	0					
ANR	3947574	Identifier	out_nodes		3947427	1					
ANR	3947575	IfStatement	if ( ! outnodes || ! a )		3947427	4					
ANR	3947576	Condition	! outnodes || ! a	1646:7:41788:41802	3947427	0	True				
ANR	3947577	OrExpression	! outnodes || ! a		3947427	0		||			
ANR	3947578	UnaryOperationExpression	! outnodes		3947427	0					
ANR	3947579	UnaryOperator	!		3947427	0					
ANR	3947580	Identifier	outnodes		3947427	1					
ANR	3947581	UnaryOperationExpression	! a		3947427	1					
ANR	3947582	UnaryOperator	!		3947427	0					
ANR	3947583	Identifier	a		3947427	1					
ANR	3947584	CompoundStatement		23:24:440:440	3947427	1					
ANR	3947585	ContinueStatement	continue ;	1647:4:41811:41819	3947427	0	True				
ANR	3947586	Statement	graph_foreach_anode	1649:3:41829:41847	3947427	5	True				
ANR	3947587	Statement	(	1649:23:41849:41849	3947427	6	True				
ANR	3947588	Statement	outnodes	1649:24:41850:41857	3947427	7	True				
ANR	3947589	Statement	","	1649:32:41858:41858	3947427	8	True				
ANR	3947590	Statement	itn	1649:34:41860:41862	3947427	9	True				
ANR	3947591	Statement	","	1649:37:41863:41863	3947427	10	True				
ANR	3947592	Statement	gb	1649:39:41865:41866	3947427	11	True				
ANR	3947593	Statement	","	1649:41:41867:41867	3947427	12	True				
ANR	3947594	Statement	b	1649:43:41869:41869	3947427	13	True				
ANR	3947595	Statement	)	1649:44:41870:41870	3947427	14	True				
ANR	3947596	CompoundStatement		26:46:507:507	3947427	15					
ANR	3947597	IfStatement	if ( g -> layout == 0 )		3947427	0					
ANR	3947598	Condition	g -> layout == 0	1650:8:41882:41895	3947427	0	True				
ANR	3947599	EqualityExpression	g -> layout == 0		3947427	0		==			
ANR	3947600	PtrMemberAccess	g -> layout		3947427	0					
ANR	3947601	Identifier	g		3947427	0					
ANR	3947602	Identifier	layout		3947427	1					
ANR	3947603	PrimaryExpression	0		3947427	1					
ANR	3947604	CompoundStatement		27:24:533:533	3947427	1					
ANR	3947605	IfStatement	if ( ( b -> x != a -> x ) || b -> layer <= a -> layer )		3947427	0					
ANR	3947606	Condition	( b -> x != a -> x ) || b -> layer <= a -> layer	1651:9:41928:41965	3947427	0	True				
ANR	3947607	OrExpression	( b -> x != a -> x ) || b -> layer <= a -> layer		3947427	0		||			
ANR	3947608	EqualityExpression	b -> x != a -> x		3947427	0		!=			
ANR	3947609	PtrMemberAccess	b -> x		3947427	0					
ANR	3947610	Identifier	b		3947427	0					
ANR	3947611	Identifier	x		3947427	1					
ANR	3947612	PtrMemberAccess	a -> x		3947427	1					
ANR	3947613	Identifier	a		3947427	0					
ANR	3947614	Identifier	x		3947427	1					
ANR	3947615	RelationalExpression	b -> layer <= a -> layer		3947427	1		<=			
ANR	3947616	PtrMemberAccess	b -> layer		3947427	0					
ANR	3947617	Identifier	b		3947427	0					
ANR	3947618	Identifier	layer		3947427	1					
ANR	3947619	PtrMemberAccess	a -> layer		3947427	1					
ANR	3947620	Identifier	a		3947427	0					
ANR	3947621	Identifier	layer		3947427	1					
ANR	3947622	CompoundStatement		28:49:603:603	3947427	1					
ANR	3947623	ExpressionStatement	gap += 1	1652:6:41976:41984	3947427	0	True				
ANR	3947624	AssignmentExpression	gap += 1		3947427	0		+=			
ANR	3947625	Identifier	gap		3947427	0					
ANR	3947626	PrimaryExpression	1		3947427	1					
ANR	3947627	IfStatement	if ( b -> layer <= a -> layer )		3947427	1					
ANR	3947628	Condition	b -> layer <= a -> layer	1653:10:41996:42015	3947427	0	True				
ANR	3947629	RelationalExpression	b -> layer <= a -> layer		3947427	0		<=			
ANR	3947630	PtrMemberAccess	b -> layer		3947427	0					
ANR	3947631	Identifier	b		3947427	0					
ANR	3947632	Identifier	layer		3947427	1					
ANR	3947633	PtrMemberAccess	a -> layer		3947427	1					
ANR	3947634	Identifier	a		3947427	0					
ANR	3947635	Identifier	layer		3947427	1					
ANR	3947636	CompoundStatement		30:32:653:653	3947427	1					
ANR	3947637	ExpressionStatement	g -> layers [ b -> layer ] . gap += 1	1654:7:42027:42055	3947427	0	True				
ANR	3947638	AssignmentExpression	g -> layers [ b -> layer ] . gap += 1		3947427	0		+=			
ANR	3947639	MemberAccess	g -> layers [ b -> layer ] . gap		3947427	0					
ANR	3947640	ArrayIndexing	g -> layers [ b -> layer ]		3947427	0					
ANR	3947641	PtrMemberAccess	g -> layers		3947427	0					
ANR	3947642	Identifier	g		3947427	0					
ANR	3947643	Identifier	layers		3947427	1					
ANR	3947644	PtrMemberAccess	b -> layer		3947427	1					
ANR	3947645	Identifier	b		3947427	0					
ANR	3947646	Identifier	layer		3947427	1					
ANR	3947647	Identifier	gap		3947427	1					
ANR	3947648	PrimaryExpression	1		3947427	1					
ANR	3947649	ElseStatement	else		3947427	0					
ANR	3947650	IfStatement	if ( ( ! a -> is_dummy && b -> is_dummy ) || ( a -> is_dummy && ! b -> is_dummy ) )		3947427	0					
ANR	3947651	Condition	( ! a -> is_dummy && b -> is_dummy ) || ( a -> is_dummy && ! b -> is_dummy )	1656:16:42081:42142	3947427	0	True				
ANR	3947652	OrExpression	( ! a -> is_dummy && b -> is_dummy ) || ( a -> is_dummy && ! b -> is_dummy )		3947427	0		||			
ANR	3947653	AndExpression	! a -> is_dummy && b -> is_dummy		3947427	0		&&			
ANR	3947654	UnaryOperationExpression	! a -> is_dummy		3947427	0					
ANR	3947655	UnaryOperator	!		3947427	0					
ANR	3947656	PtrMemberAccess	a -> is_dummy		3947427	1					
ANR	3947657	Identifier	a		3947427	0					
ANR	3947658	Identifier	is_dummy		3947427	1					
ANR	3947659	PtrMemberAccess	b -> is_dummy		3947427	1					
ANR	3947660	Identifier	b		3947427	0					
ANR	3947661	Identifier	is_dummy		3947427	1					
ANR	3947662	AndExpression	a -> is_dummy && ! b -> is_dummy		3947427	1		&&			
ANR	3947663	PtrMemberAccess	a -> is_dummy		3947427	0					
ANR	3947664	Identifier	a		3947427	0					
ANR	3947665	Identifier	is_dummy		3947427	1					
ANR	3947666	UnaryOperationExpression	! b -> is_dummy		3947427	1					
ANR	3947667	UnaryOperator	!		3947427	0					
ANR	3947668	PtrMemberAccess	b -> is_dummy		3947427	1					
ANR	3947669	Identifier	b		3947427	0					
ANR	3947670	Identifier	is_dummy		3947427	1					
ANR	3947671	CompoundStatement		33:80:780:780	3947427	1					
ANR	3947672	ExpressionStatement	gap += 1	1657:6:42153:42161	3947427	0	True				
ANR	3947673	AssignmentExpression	gap += 1		3947427	0		+=			
ANR	3947674	Identifier	gap		3947427	0					
ANR	3947675	PrimaryExpression	1		3947427	1					
ANR	3947676	ElseStatement	else		3947427	0					
ANR	3947677	CompoundStatement		36:11:816:816	3947427	0					
ANR	3947678	IfStatement	if ( ( b -> y == a -> y && b -> h != a -> h ) || b -> y != a -> y || b -> layer <= a -> layer )		3947427	0					
ANR	3947679	Condition	( b -> y == a -> y && b -> h != a -> h ) || b -> y != a -> y || b -> layer <= a -> layer	1660:9:42192:42261	3947427	0	True				
ANR	3947680	OrExpression	( b -> y == a -> y && b -> h != a -> h ) || b -> y != a -> y || b -> layer <= a -> layer		3947427	0		||			
ANR	3947681	AndExpression	b -> y == a -> y && b -> h != a -> h		3947427	0		&&			
ANR	3947682	EqualityExpression	b -> y == a -> y		3947427	0		==			
ANR	3947683	PtrMemberAccess	b -> y		3947427	0					
ANR	3947684	Identifier	b		3947427	0					
ANR	3947685	Identifier	y		3947427	1					
ANR	3947686	PtrMemberAccess	a -> y		3947427	1					
ANR	3947687	Identifier	a		3947427	0					
ANR	3947688	Identifier	y		3947427	1					
ANR	3947689	EqualityExpression	b -> h != a -> h		3947427	1		!=			
ANR	3947690	PtrMemberAccess	b -> h		3947427	0					
ANR	3947691	Identifier	b		3947427	0					
ANR	3947692	Identifier	h		3947427	1					
ANR	3947693	PtrMemberAccess	a -> h		3947427	1					
ANR	3947694	Identifier	a		3947427	0					
ANR	3947695	Identifier	h		3947427	1					
ANR	3947696	OrExpression	b -> y != a -> y || b -> layer <= a -> layer		3947427	1		||			
ANR	3947697	EqualityExpression	b -> y != a -> y		3947427	0		!=			
ANR	3947698	PtrMemberAccess	b -> y		3947427	0					
ANR	3947699	Identifier	b		3947427	0					
ANR	3947700	Identifier	y		3947427	1					
ANR	3947701	PtrMemberAccess	a -> y		3947427	1					
ANR	3947702	Identifier	a		3947427	0					
ANR	3947703	Identifier	y		3947427	1					
ANR	3947704	RelationalExpression	b -> layer <= a -> layer		3947427	1		<=			
ANR	3947705	PtrMemberAccess	b -> layer		3947427	0					
ANR	3947706	Identifier	b		3947427	0					
ANR	3947707	Identifier	layer		3947427	1					
ANR	3947708	PtrMemberAccess	a -> layer		3947427	1					
ANR	3947709	Identifier	a		3947427	0					
ANR	3947710	Identifier	layer		3947427	1					
ANR	3947711	CompoundStatement		37:81:899:899	3947427	1					
ANR	3947712	ExpressionStatement	gap += 1	1661:6:42272:42280	3947427	0	True				
ANR	3947713	AssignmentExpression	gap += 1		3947427	0		+=			
ANR	3947714	Identifier	gap		3947427	0					
ANR	3947715	PrimaryExpression	1		3947427	1					
ANR	3947716	IfStatement	if ( b -> layer <= a -> layer )		3947427	1					
ANR	3947717	Condition	b -> layer <= a -> layer	1662:10:42292:42311	3947427	0	True				
ANR	3947718	RelationalExpression	b -> layer <= a -> layer		3947427	0		<=			
ANR	3947719	PtrMemberAccess	b -> layer		3947427	0					
ANR	3947720	Identifier	b		3947427	0					
ANR	3947721	Identifier	layer		3947427	1					
ANR	3947722	PtrMemberAccess	a -> layer		3947427	1					
ANR	3947723	Identifier	a		3947427	0					
ANR	3947724	Identifier	layer		3947427	1					
ANR	3947725	CompoundStatement		39:32:949:949	3947427	1					
ANR	3947726	ExpressionStatement	g -> layers [ b -> layer ] . gap += 1	1663:7:42323:42351	3947427	0	True				
ANR	3947727	AssignmentExpression	g -> layers [ b -> layer ] . gap += 1		3947427	0		+=			
ANR	3947728	MemberAccess	g -> layers [ b -> layer ] . gap		3947427	0					
ANR	3947729	ArrayIndexing	g -> layers [ b -> layer ]		3947427	0					
ANR	3947730	PtrMemberAccess	g -> layers		3947427	0					
ANR	3947731	Identifier	g		3947427	0					
ANR	3947732	Identifier	layers		3947427	1					
ANR	3947733	PtrMemberAccess	b -> layer		3947427	1					
ANR	3947734	Identifier	b		3947427	0					
ANR	3947735	Identifier	layer		3947427	1					
ANR	3947736	Identifier	gap		3947427	1					
ANR	3947737	PrimaryExpression	1		3947427	1					
ANR	3947738	ElseStatement	else		3947427	0					
ANR	3947739	IfStatement	if ( ( ! a -> is_dummy && b -> is_dummy ) || ( a -> is_dummy && ! b -> is_dummy ) )		3947427	0					
ANR	3947740	Condition	( ! a -> is_dummy && b -> is_dummy ) || ( a -> is_dummy && ! b -> is_dummy )	1665:16:42377:42438	3947427	0	True				
ANR	3947741	OrExpression	( ! a -> is_dummy && b -> is_dummy ) || ( a -> is_dummy && ! b -> is_dummy )		3947427	0		||			
ANR	3947742	AndExpression	! a -> is_dummy && b -> is_dummy		3947427	0		&&			
ANR	3947743	UnaryOperationExpression	! a -> is_dummy		3947427	0					
ANR	3947744	UnaryOperator	!		3947427	0					
ANR	3947745	PtrMemberAccess	a -> is_dummy		3947427	1					
ANR	3947746	Identifier	a		3947427	0					
ANR	3947747	Identifier	is_dummy		3947427	1					
ANR	3947748	PtrMemberAccess	b -> is_dummy		3947427	1					
ANR	3947749	Identifier	b		3947427	0					
ANR	3947750	Identifier	is_dummy		3947427	1					
ANR	3947751	AndExpression	a -> is_dummy && ! b -> is_dummy		3947427	1		&&			
ANR	3947752	PtrMemberAccess	a -> is_dummy		3947427	0					
ANR	3947753	Identifier	a		3947427	0					
ANR	3947754	Identifier	is_dummy		3947427	1					
ANR	3947755	UnaryOperationExpression	! b -> is_dummy		3947427	1					
ANR	3947756	UnaryOperator	!		3947427	0					
ANR	3947757	PtrMemberAccess	b -> is_dummy		3947427	1					
ANR	3947758	Identifier	b		3947427	0					
ANR	3947759	Identifier	is_dummy		3947427	1					
ANR	3947760	CompoundStatement		42:80:1076:1076	3947427	1					
ANR	3947761	ExpressionStatement	gap += 1	1666:6:42449:42457	3947427	0	True				
ANR	3947762	AssignmentExpression	gap += 1		3947427	0		+=			
ANR	3947763	Identifier	gap		3947427	0					
ANR	3947764	PrimaryExpression	1		3947427	1					
ANR	3947765	IfStatement	if ( i + 1 < g -> n_layers )		3947427	3					
ANR	3947766	Condition	i + 1 < g -> n_layers	1671:6:42487:42505	3947427	0	True				
ANR	3947767	RelationalExpression	i + 1 < g -> n_layers		3947427	0		<			
ANR	3947768	AdditiveExpression	i + 1		3947427	0		+			
ANR	3947769	Identifier	i		3947427	0					
ANR	3947770	PrimaryExpression	1		3947427	1					
ANR	3947771	PtrMemberAccess	g -> n_layers		3947427	1					
ANR	3947772	Identifier	g		3947427	0					
ANR	3947773	Identifier	n_layers		3947427	1					
ANR	3947774	CompoundStatement		48:27:1143:1143	3947427	1					
ANR	3947775	ExpressionStatement	g -> layers [ i + 1 ] . gap += gap	1672:3:42513:42538	3947427	0	True				
ANR	3947776	AssignmentExpression	g -> layers [ i + 1 ] . gap += gap		3947427	0		+=			
ANR	3947777	MemberAccess	g -> layers [ i + 1 ] . gap		3947427	0					
ANR	3947778	ArrayIndexing	g -> layers [ i + 1 ]		3947427	0					
ANR	3947779	PtrMemberAccess	g -> layers		3947427	0					
ANR	3947780	Identifier	g		3947427	0					
ANR	3947781	Identifier	layers		3947427	1					
ANR	3947782	AdditiveExpression	i + 1		3947427	1		+			
ANR	3947783	Identifier	i		3947427	0					
ANR	3947784	PrimaryExpression	1		3947427	1					
ANR	3947785	Identifier	gap		3947427	1					
ANR	3947786	Identifier	gap		3947427	1					
ANR	3947787	ReturnType	static void		3947427	1					
ANR	3947788	Identifier	set_layer_gap		3947427	2					
ANR	3947789	ParameterList	RAGraph * g		3947427	3					
ANR	3947790	Parameter	RAGraph * g	1624:27:41352:41361	3947427	0	True				
ANR	3947791	ParameterType	RAGraph *		3947427	0					
ANR	3947792	Identifier	g		3947427	1					
ANR	3947793	CFGEntryNode	ENTRY		3947427		True				
ANR	3947794	CFGExitNode	EXIT		3947427		True				
ANR	3947795	Symbol	* ga		3947427						
ANR	3947796	Symbol	a -> h		3947427						
ANR	3947797	Symbol	g -> n_layers		3947427						
ANR	3947798	Symbol	g -> layers [ i ] . nodes		3947427						
ANR	3947799	Symbol	ga -> out_nodes		3947427						
ANR	3947800	Symbol	b -> x		3947427						
ANR	3947801	Symbol	gap		3947427						
ANR	3947802	Symbol	ga		3947427						
ANR	3947803	Symbol	gb		3947427						
ANR	3947804	Symbol	b -> y		3947427						
ANR	3947805	Symbol	* g -> layers [ i ] . nodes		3947427						
ANR	3947806	Symbol	b -> layer		3947427						
ANR	3947807	Symbol	b -> is_dummy		3947427						
ANR	3947808	Symbol	a		3947427						
ANR	3947809	Symbol	itn		3947427						
ANR	3947810	Symbol	b		3947427						
ANR	3947811	Symbol	* * i		3947427						
ANR	3947812	Symbol	a -> is_dummy		3947427						
ANR	3947813	Symbol	* * g		3947427						
ANR	3947814	Symbol	g -> layout		3947427						
ANR	3947815	Symbol	b -> h		3947427						
ANR	3947816	Symbol	ga -> data		3947427						
ANR	3947817	Symbol	g		3947427						
ANR	3947818	Symbol	i		3947427						
ANR	3947819	Symbol	* * b		3947427						
ANR	3947820	Symbol	j		3947427						
ANR	3947821	Symbol	* a		3947427						
ANR	3947822	Symbol	outnodes		3947427						
ANR	3947823	Symbol	* b		3947427						
ANR	3947824	Symbol	g -> layers [ b -> layer ] . gap		3947427						
ANR	3947825	Symbol	* b -> layer		3947427						
ANR	3947826	Symbol	g -> layers [ i + 1 ] . gap		3947427						
ANR	3947827	Symbol	* g		3947427						
ANR	3947828	Symbol	a -> layer		3947427						
ANR	3947829	Symbol	g -> layers [ 0 ] . gap		3947427						
ANR	3947830	Symbol	* i		3947427						
ANR	3947831	Symbol	* j		3947427						
ANR	3947832	Symbol	a -> x		3947427						
ANR	3947833	Symbol	a -> y		3947427						
ANR	3947834	Symbol	* g -> layers		3947427						
ANR	3947835	Symbol	* * * g		3947427						
ANR	3947836	Symbol	g -> layers [ i ] . n_nodes		3947427						
ANR	3947837	Symbol	g -> layers		3947427						
ANR	3947838	Symbol	* * g -> layers		3947427						
ANR	3947839	Function	fix_back_edge_dummy_nodes	1677:0:42550:43607							
ANR	3947840	FunctionDef	"fix_back_edge_dummy_nodes (RAGraph * g , RANode * from , RANode * to)"		3947839	0					
ANR	3947841	CompoundStatement		1677:76:42626:43607	3947839	0					
ANR	3947842	IdentifierDeclStatement	"RANode * v , * tmp = NULL ;"	1678:1:42629:42651	3947839	0	True				
ANR	3947843	IdentifierDecl	* v		3947839	0					
ANR	3947844	IdentifierDeclType	RANode *		3947839	0					
ANR	3947845	Identifier	v		3947839	1					
ANR	3947846	IdentifierDecl	* tmp = NULL		3947839	1					
ANR	3947847	IdentifierDeclType	RANode *		3947839	0					
ANR	3947848	Identifier	tmp		3947839	1					
ANR	3947849	AssignmentExpression	* tmp = NULL		3947839	2		=			
ANR	3947850	Identifier	NULL		3947839	0					
ANR	3947851	Identifier	NULL		3947839	1					
ANR	3947852	IdentifierDeclStatement	RGraphNode * gv = NULL ;	1679:1:42654:42675	3947839	1	True				
ANR	3947853	IdentifierDecl	* gv = NULL		3947839	0					
ANR	3947854	IdentifierDeclType	RGraphNode *		3947839	0					
ANR	3947855	Identifier	gv		3947839	1					
ANR	3947856	AssignmentExpression	* gv = NULL		3947839	2		=			
ANR	3947857	Identifier	NULL		3947839	0					
ANR	3947858	Identifier	NULL		3947839	1					
ANR	3947859	IdentifierDeclStatement	RListIter * it ;	1680:1:42678:42691	3947839	2	True				
ANR	3947860	IdentifierDecl	* it		3947839	0					
ANR	3947861	IdentifierDeclType	RListIter *		3947839	0					
ANR	3947862	Identifier	it		3947839	1					
ANR	3947863	IdentifierDeclStatement	int i ;	1681:1:42694:42699	3947839	3	True				
ANR	3947864	IdentifierDecl	i		3947839	0					
ANR	3947865	IdentifierDeclType	int		3947839	0					
ANR	3947866	Identifier	i		3947839	1					
ANR	3947867	ExpressionStatement	r_return_if_fail ( g && from && to )	1682:1:42702:42736	3947839	4	True				
ANR	3947868	CallExpression	r_return_if_fail ( g && from && to )		3947839	0					
ANR	3947869	Callee	r_return_if_fail		3947839	0					
ANR	3947870	Identifier	r_return_if_fail		3947839	0					
ANR	3947871	ArgumentList	g && from && to		3947839	1					
ANR	3947872	Argument	g && from && to		3947839	0					
ANR	3947873	AndExpression	g && from && to		3947839	0		&&			
ANR	3947874	Identifier	g		3947839	0					
ANR	3947875	AndExpression	from && to		3947839	1		&&			
ANR	3947876	Identifier	from		3947839	0					
ANR	3947877	Identifier	to		3947839	1					
ANR	3947878	IdentifierDeclStatement	"const RList * neighbours = r_graph_get_neighbours ( g -> graph , to -> gnode ) ;"	1683:1:42739:42809	3947839	5	True				
ANR	3947879	IdentifierDecl	"* neighbours = r_graph_get_neighbours ( g -> graph , to -> gnode )"		3947839	0					
ANR	3947880	IdentifierDeclType	const RList *		3947839	0					
ANR	3947881	Identifier	neighbours		3947839	1					
ANR	3947882	AssignmentExpression	"* neighbours = r_graph_get_neighbours ( g -> graph , to -> gnode )"		3947839	2		=			
ANR	3947883	Identifier	neighbours		3947839	0					
ANR	3947884	CallExpression	"r_graph_get_neighbours ( g -> graph , to -> gnode )"		3947839	1					
ANR	3947885	Callee	r_graph_get_neighbours		3947839	0					
ANR	3947886	Identifier	r_graph_get_neighbours		3947839	0					
ANR	3947887	ArgumentList	g -> graph		3947839	1					
ANR	3947888	Argument	g -> graph		3947839	0					
ANR	3947889	PtrMemberAccess	g -> graph		3947839	0					
ANR	3947890	Identifier	g		3947839	0					
ANR	3947891	Identifier	graph		3947839	1					
ANR	3947892	Argument	to -> gnode		3947839	1					
ANR	3947893	PtrMemberAccess	to -> gnode		3947839	0					
ANR	3947894	Identifier	to		3947839	0					
ANR	3947895	Identifier	gnode		3947839	1					
ANR	3947896	Statement	graph_foreach_anode	1684:1:42812:42830	3947839	6	True				
ANR	3947897	Statement	(	1684:21:42832:42832	3947839	7	True				
ANR	3947898	Statement	neighbours	1684:22:42833:42842	3947839	8	True				
ANR	3947899	Statement	","	1684:32:42843:42843	3947839	9	True				
ANR	3947900	Statement	it	1684:34:42845:42846	3947839	10	True				
ANR	3947901	Statement	","	1684:36:42847:42847	3947839	11	True				
ANR	3947902	Statement	gv	1684:38:42849:42850	3947839	12	True				
ANR	3947903	Statement	","	1684:40:42851:42851	3947839	13	True				
ANR	3947904	Statement	v	1684:42:42853:42853	3947839	14	True				
ANR	3947905	Statement	)	1684:43:42854:42854	3947839	15	True				
ANR	3947906	CompoundStatement		8:45:229:229	3947839	16					
ANR	3947907	ExpressionStatement	tmp = v	1685:2:42860:42867	3947839	0	True				
ANR	3947908	AssignmentExpression	tmp = v		3947839	0		=			
ANR	3947909	Identifier	tmp		3947839	0					
ANR	3947910	Identifier	v		3947839	1					
ANR	3947911	WhileStatement	while ( tmp -> is_dummy )		3947839	1					
ANR	3947912	Condition	tmp -> is_dummy	1686:9:42878:42890	3947839	0	True				
ANR	3947913	PtrMemberAccess	tmp -> is_dummy		3947839	0					
ANR	3947914	Identifier	tmp		3947839	0					
ANR	3947915	Identifier	is_dummy		3947839	1					
ANR	3947916	CompoundStatement		10:24:266:266	3947839	1					
ANR	3947917	ExpressionStatement	tmp = ( RANode * ) ( ( ( RGraphNode * ) r_list_first ( tmp -> gnode -> out_nodes ) ) -> data )	1687:3:42898:42975	3947839	0	True				
ANR	3947918	AssignmentExpression	tmp = ( RANode * ) ( ( ( RGraphNode * ) r_list_first ( tmp -> gnode -> out_nodes ) ) -> data )		3947839	0		=			
ANR	3947919	Identifier	tmp		3947839	0					
ANR	3947920	CastExpression	( RANode * ) ( ( ( RGraphNode * ) r_list_first ( tmp -> gnode -> out_nodes ) ) -> data )		3947839	1					
ANR	3947921	CastTarget	RANode *		3947839	0					
ANR	3947922	PtrMemberAccess	( ( RGraphNode * ) r_list_first ( tmp -> gnode -> out_nodes ) ) -> data		3947839	1					
ANR	3947923	CastExpression	( RGraphNode * ) r_list_first ( tmp -> gnode -> out_nodes )		3947839	0					
ANR	3947924	CastTarget	RGraphNode *		3947839	0					
ANR	3947925	CallExpression	r_list_first ( tmp -> gnode -> out_nodes )		3947839	1					
ANR	3947926	Callee	r_list_first		3947839	0					
ANR	3947927	Identifier	r_list_first		3947839	0					
ANR	3947928	ArgumentList	tmp -> gnode -> out_nodes		3947839	1					
ANR	3947929	Argument	tmp -> gnode -> out_nodes		3947839	0					
ANR	3947930	PtrMemberAccess	tmp -> gnode -> out_nodes		3947839	0					
ANR	3947931	PtrMemberAccess	tmp -> gnode		3947839	0					
ANR	3947932	Identifier	tmp		3947839	0					
ANR	3947933	Identifier	gnode		3947839	1					
ANR	3947934	Identifier	out_nodes		3947839	1					
ANR	3947935	Identifier	data		3947839	1					
ANR	3947936	IfStatement	if ( tmp -> gnode -> idx == from -> gnode -> idx )		3947839	2					
ANR	3947937	Condition	tmp -> gnode -> idx == from -> gnode -> idx	1689:6:42987:43021	3947839	0	True				
ANR	3947938	EqualityExpression	tmp -> gnode -> idx == from -> gnode -> idx		3947839	0		==			
ANR	3947939	PtrMemberAccess	tmp -> gnode -> idx		3947839	0					
ANR	3947940	PtrMemberAccess	tmp -> gnode		3947839	0					
ANR	3947941	Identifier	tmp		3947839	0					
ANR	3947942	Identifier	gnode		3947839	1					
ANR	3947943	Identifier	idx		3947839	1					
ANR	3947944	PtrMemberAccess	from -> gnode -> idx		3947839	1					
ANR	3947945	PtrMemberAccess	from -> gnode		3947839	0					
ANR	3947946	Identifier	from		3947839	0					
ANR	3947947	Identifier	gnode		3947839	1					
ANR	3947948	Identifier	idx		3947839	1					
ANR	3947949	CompoundStatement		13:43:397:397	3947839	1					
ANR	3947950	BreakStatement	break ;	1690:3:43029:43034	3947839	0	True				
ANR	3947951	ExpressionStatement	tmp = NULL	1692:2:43042:43052	3947839	3	True				
ANR	3947952	AssignmentExpression	tmp = NULL		3947839	0		=			
ANR	3947953	Identifier	tmp		3947839	0					
ANR	3947954	Identifier	NULL		3947839	1					
ANR	3947955	IfStatement	if ( tmp )		3947839	17					
ANR	3947956	Condition	tmp	1694:5:43062:43064	3947839	0	True				
ANR	3947957	Identifier	tmp		3947839	0					
ANR	3947958	CompoundStatement		18:10:440:440	3947839	1					
ANR	3947959	ExpressionStatement	tmp = v	1695:2:43071:43078	3947839	0	True				
ANR	3947960	AssignmentExpression	tmp = v		3947839	0		=			
ANR	3947961	Identifier	tmp		3947839	0					
ANR	3947962	Identifier	v		3947839	1					
ANR	3947963	ExpressionStatement	v = to	1696:2:43082:43088	3947839	1	True				
ANR	3947964	AssignmentExpression	v = to		3947839	0		=			
ANR	3947965	Identifier	v		3947839	0					
ANR	3947966	Identifier	to		3947839	1					
ANR	3947967	WhileStatement	while ( tmp -> gnode -> idx != from -> gnode -> idx )		3947839	2					
ANR	3947968	Condition	tmp -> gnode -> idx != from -> gnode -> idx	1697:9:43099:43133	3947839	0	True				
ANR	3947969	EqualityExpression	tmp -> gnode -> idx != from -> gnode -> idx		3947839	0		!=			
ANR	3947970	PtrMemberAccess	tmp -> gnode -> idx		3947839	0					
ANR	3947971	PtrMemberAccess	tmp -> gnode		3947839	0					
ANR	3947972	Identifier	tmp		3947839	0					
ANR	3947973	Identifier	gnode		3947839	1					
ANR	3947974	Identifier	idx		3947839	1					
ANR	3947975	PtrMemberAccess	from -> gnode -> idx		3947839	1					
ANR	3947976	PtrMemberAccess	from -> gnode		3947839	0					
ANR	3947977	Identifier	from		3947839	0					
ANR	3947978	Identifier	gnode		3947839	1					
ANR	3947979	Identifier	idx		3947839	1					
ANR	3947980	CompoundStatement		21:46:509:509	3947839	1					
ANR	3947981	ExpressionStatement	v = tmp	1698:3:43141:43148	3947839	0	True				
ANR	3947982	AssignmentExpression	v = tmp		3947839	0		=			
ANR	3947983	Identifier	v		3947839	0					
ANR	3947984	Identifier	tmp		3947839	1					
ANR	3947985	ExpressionStatement	tmp = ( RANode * ) ( ( ( RGraphNode * ) r_list_first ( v -> gnode -> out_nodes ) ) -> data )	1699:3:43153:43228	3947839	1	True				
ANR	3947986	AssignmentExpression	tmp = ( RANode * ) ( ( ( RGraphNode * ) r_list_first ( v -> gnode -> out_nodes ) ) -> data )		3947839	0		=			
ANR	3947987	Identifier	tmp		3947839	0					
ANR	3947988	CastExpression	( RANode * ) ( ( ( RGraphNode * ) r_list_first ( v -> gnode -> out_nodes ) ) -> data )		3947839	1					
ANR	3947989	CastTarget	RANode *		3947839	0					
ANR	3947990	PtrMemberAccess	( ( RGraphNode * ) r_list_first ( v -> gnode -> out_nodes ) ) -> data		3947839	1					
ANR	3947991	CastExpression	( RGraphNode * ) r_list_first ( v -> gnode -> out_nodes )		3947839	0					
ANR	3947992	CastTarget	RGraphNode *		3947839	0					
ANR	3947993	CallExpression	r_list_first ( v -> gnode -> out_nodes )		3947839	1					
ANR	3947994	Callee	r_list_first		3947839	0					
ANR	3947995	Identifier	r_list_first		3947839	0					
ANR	3947996	ArgumentList	v -> gnode -> out_nodes		3947839	1					
ANR	3947997	Argument	v -> gnode -> out_nodes		3947839	0					
ANR	3947998	PtrMemberAccess	v -> gnode -> out_nodes		3947839	0					
ANR	3947999	PtrMemberAccess	v -> gnode		3947839	0					
ANR	3948000	Identifier	v		3947839	0					
ANR	3948001	Identifier	gnode		3947839	1					
ANR	3948002	Identifier	out_nodes		3947839	1					
ANR	3948003	Identifier	data		3947839	1					
ANR	3948004	ExpressionStatement	i = 0	1701:3:43234:43239	3947839	2	True				
ANR	3948005	AssignmentExpression	i = 0		3947839	0		=			
ANR	3948006	Identifier	i		3947839	0					
ANR	3948007	PrimaryExpression	0		3947839	1					
ANR	3948008	WhileStatement	while ( v -> gnode -> idx != g -> layers [ v -> layer ] . nodes [ i ] -> idx )		3947839	3					
ANR	3948009	Condition	v -> gnode -> idx != g -> layers [ v -> layer ] . nodes [ i ] -> idx	1702:10:43251:43300	3947839	0	True				
ANR	3948010	EqualityExpression	v -> gnode -> idx != g -> layers [ v -> layer ] . nodes [ i ] -> idx		3947839	0		!=			
ANR	3948011	PtrMemberAccess	v -> gnode -> idx		3947839	0					
ANR	3948012	PtrMemberAccess	v -> gnode		3947839	0					
ANR	3948013	Identifier	v		3947839	0					
ANR	3948014	Identifier	gnode		3947839	1					
ANR	3948015	Identifier	idx		3947839	1					
ANR	3948016	PtrMemberAccess	g -> layers [ v -> layer ] . nodes [ i ] -> idx		3947839	1					
ANR	3948017	ArrayIndexing	g -> layers [ v -> layer ] . nodes [ i ]		3947839	0					
ANR	3948018	MemberAccess	g -> layers [ v -> layer ] . nodes		3947839	0					
ANR	3948019	ArrayIndexing	g -> layers [ v -> layer ]		3947839	0					
ANR	3948020	PtrMemberAccess	g -> layers		3947839	0					
ANR	3948021	Identifier	g		3947839	0					
ANR	3948022	Identifier	layers		3947839	1					
ANR	3948023	PtrMemberAccess	v -> layer		3947839	1					
ANR	3948024	Identifier	v		3947839	0					
ANR	3948025	Identifier	layer		3947839	1					
ANR	3948026	Identifier	nodes		3947839	1					
ANR	3948027	Identifier	i		3947839	1					
ANR	3948028	Identifier	idx		3947839	1					
ANR	3948029	CompoundStatement		26:62:676:676	3947839	1					
ANR	3948030	ExpressionStatement	i += 1	1703:4:43309:43315	3947839	0	True				
ANR	3948031	AssignmentExpression	i += 1		3947839	0		+=			
ANR	3948032	Identifier	i		3947839	0					
ANR	3948033	PrimaryExpression	1		3947839	1					
ANR	3948034	WhileStatement	while ( i + 1 < g -> layers [ v -> layer ] . n_nodes )		3947839	4					
ANR	3948035	Condition	i + 1 < g -> layers [ v -> layer ] . n_nodes	1706:10:43333:43367	3947839	0	True				
ANR	3948036	RelationalExpression	i + 1 < g -> layers [ v -> layer ] . n_nodes		3947839	0		<			
ANR	3948037	AdditiveExpression	i + 1		3947839	0		+			
ANR	3948038	Identifier	i		3947839	0					
ANR	3948039	PrimaryExpression	1		3947839	1					
ANR	3948040	MemberAccess	g -> layers [ v -> layer ] . n_nodes		3947839	1					
ANR	3948041	ArrayIndexing	g -> layers [ v -> layer ]		3947839	0					
ANR	3948042	PtrMemberAccess	g -> layers		3947839	0					
ANR	3948043	Identifier	g		3947839	0					
ANR	3948044	Identifier	layers		3947839	1					
ANR	3948045	PtrMemberAccess	v -> layer		3947839	1					
ANR	3948046	Identifier	v		3947839	0					
ANR	3948047	Identifier	layer		3947839	1					
ANR	3948048	Identifier	n_nodes		3947839	1					
ANR	3948049	CompoundStatement		30:47:743:743	3947839	1					
ANR	3948050	ExpressionStatement	g -> layers [ v -> layer ] . nodes [ i ] = g -> layers [ v -> layer ] . nodes [ i + 1 ]	1707:4:43376:43437	3947839	0	True				
ANR	3948051	AssignmentExpression	g -> layers [ v -> layer ] . nodes [ i ] = g -> layers [ v -> layer ] . nodes [ i + 1 ]		3947839	0		=			
ANR	3948052	ArrayIndexing	g -> layers [ v -> layer ] . nodes [ i ]		3947839	0					
ANR	3948053	MemberAccess	g -> layers [ v -> layer ] . nodes		3947839	0					
ANR	3948054	ArrayIndexing	g -> layers [ v -> layer ]		3947839	0					
ANR	3948055	PtrMemberAccess	g -> layers		3947839	0					
ANR	3948056	Identifier	g		3947839	0					
ANR	3948057	Identifier	layers		3947839	1					
ANR	3948058	PtrMemberAccess	v -> layer		3947839	1					
ANR	3948059	Identifier	v		3947839	0					
ANR	3948060	Identifier	layer		3947839	1					
ANR	3948061	Identifier	nodes		3947839	1					
ANR	3948062	Identifier	i		3947839	1					
ANR	3948063	ArrayIndexing	g -> layers [ v -> layer ] . nodes [ i + 1 ]		3947839	1					
ANR	3948064	MemberAccess	g -> layers [ v -> layer ] . nodes		3947839	0					
ANR	3948065	ArrayIndexing	g -> layers [ v -> layer ]		3947839	0					
ANR	3948066	PtrMemberAccess	g -> layers		3947839	0					
ANR	3948067	Identifier	g		3947839	0					
ANR	3948068	Identifier	layers		3947839	1					
ANR	3948069	PtrMemberAccess	v -> layer		3947839	1					
ANR	3948070	Identifier	v		3947839	0					
ANR	3948071	Identifier	layer		3947839	1					
ANR	3948072	Identifier	nodes		3947839	1					
ANR	3948073	AdditiveExpression	i + 1		3947839	1		+			
ANR	3948074	Identifier	i		3947839	0					
ANR	3948075	PrimaryExpression	1		3947839	1					
ANR	3948076	ExpressionStatement	i ++	1708:4:43443:43446	3947839	1	True				
ANR	3948077	PostIncDecOperationExpression	i ++		3947839	0					
ANR	3948078	Identifier	i		3947839	0					
ANR	3948079	IncDec	++		3947839	1					
ANR	3948080	ExpressionStatement	g -> layers [ v -> layer ] . nodes [ g -> layers [ v -> layer ] . n_nodes - 1 ] = 0	1710:3:43456:43518	3947839	5	True				
ANR	3948081	AssignmentExpression	g -> layers [ v -> layer ] . nodes [ g -> layers [ v -> layer ] . n_nodes - 1 ] = 0		3947839	0		=			
ANR	3948082	ArrayIndexing	g -> layers [ v -> layer ] . nodes [ g -> layers [ v -> layer ] . n_nodes - 1 ]		3947839	0					
ANR	3948083	MemberAccess	g -> layers [ v -> layer ] . nodes		3947839	0					
ANR	3948084	ArrayIndexing	g -> layers [ v -> layer ]		3947839	0					
ANR	3948085	PtrMemberAccess	g -> layers		3947839	0					
ANR	3948086	Identifier	g		3947839	0					
ANR	3948087	Identifier	layers		3947839	1					
ANR	3948088	PtrMemberAccess	v -> layer		3947839	1					
ANR	3948089	Identifier	v		3947839	0					
ANR	3948090	Identifier	layer		3947839	1					
ANR	3948091	Identifier	nodes		3947839	1					
ANR	3948092	AdditiveExpression	g -> layers [ v -> layer ] . n_nodes - 1		3947839	1		-			
ANR	3948093	MemberAccess	g -> layers [ v -> layer ] . n_nodes		3947839	0					
ANR	3948094	ArrayIndexing	g -> layers [ v -> layer ]		3947839	0					
ANR	3948095	PtrMemberAccess	g -> layers		3947839	0					
ANR	3948096	Identifier	g		3947839	0					
ANR	3948097	Identifier	layers		3947839	1					
ANR	3948098	PtrMemberAccess	v -> layer		3947839	1					
ANR	3948099	Identifier	v		3947839	0					
ANR	3948100	Identifier	layer		3947839	1					
ANR	3948101	Identifier	n_nodes		3947839	1					
ANR	3948102	PrimaryExpression	1		3947839	1					
ANR	3948103	PrimaryExpression	0		3947839	1					
ANR	3948104	ExpressionStatement	g -> layers [ v -> layer ] . n_nodes -= 1	1711:3:43523:43555	3947839	6	True				
ANR	3948105	AssignmentExpression	g -> layers [ v -> layer ] . n_nodes -= 1		3947839	0		-=			
ANR	3948106	MemberAccess	g -> layers [ v -> layer ] . n_nodes		3947839	0					
ANR	3948107	ArrayIndexing	g -> layers [ v -> layer ]		3947839	0					
ANR	3948108	PtrMemberAccess	g -> layers		3947839	0					
ANR	3948109	Identifier	g		3947839	0					
ANR	3948110	Identifier	layers		3947839	1					
ANR	3948111	PtrMemberAccess	v -> layer		3947839	1					
ANR	3948112	Identifier	v		3947839	0					
ANR	3948113	Identifier	layer		3947839	1					
ANR	3948114	Identifier	n_nodes		3947839	1					
ANR	3948115	PrimaryExpression	1		3947839	1					
ANR	3948116	ExpressionStatement	"r_graph_del_node ( g -> graph , v -> gnode )"	1713:3:43561:43598	3947839	7	True				
ANR	3948117	CallExpression	"r_graph_del_node ( g -> graph , v -> gnode )"		3947839	0					
ANR	3948118	Callee	r_graph_del_node		3947839	0					
ANR	3948119	Identifier	r_graph_del_node		3947839	0					
ANR	3948120	ArgumentList	g -> graph		3947839	1					
ANR	3948121	Argument	g -> graph		3947839	0					
ANR	3948122	PtrMemberAccess	g -> graph		3947839	0					
ANR	3948123	Identifier	g		3947839	0					
ANR	3948124	Identifier	graph		3947839	1					
ANR	3948125	Argument	v -> gnode		3947839	1					
ANR	3948126	PtrMemberAccess	v -> gnode		3947839	0					
ANR	3948127	Identifier	v		3947839	0					
ANR	3948128	Identifier	gnode		3947839	1					
ANR	3948129	ReturnType	static void		3947839	1					
ANR	3948130	Identifier	fix_back_edge_dummy_nodes		3947839	2					
ANR	3948131	ParameterList	"RAGraph * g , RANode * from , RANode * to"		3947839	3					
ANR	3948132	Parameter	RAGraph * g	1677:38:42588:42597	3947839	0	True				
ANR	3948133	ParameterType	RAGraph *		3947839	0					
ANR	3948134	Identifier	g		3947839	1					
ANR	3948135	Parameter	RANode * from	1677:50:42600:42611	3947839	1	True				
ANR	3948136	ParameterType	RANode *		3947839	0					
ANR	3948137	Identifier	from		3947839	1					
ANR	3948138	Parameter	RANode * to	1677:64:42614:42623	3947839	2	True				
ANR	3948139	ParameterType	RANode *		3947839	0					
ANR	3948140	Identifier	to		3947839	1					
ANR	3948141	CFGEntryNode	ENTRY		3947839		True				
ANR	3948142	CFGExitNode	EXIT		3947839		True				
ANR	3948143	CFGErrorNode	ERROR		3947839		True				
ANR	3948144	Symbol	* v		3947839						
ANR	3948145	Symbol	* * * * v		3947839						
ANR	3948146	Symbol	* * v -> layer		3947839						
ANR	3948147	Symbol	* * g -> layers [ v -> layer ] . nodes		3947839						
ANR	3948148	Symbol	* g -> layers [ v -> layer ] . n_nodes		3947839						
ANR	3948149	Symbol	* * * * g		3947839						
ANR	3948150	Symbol	g -> layers [ v -> layer ] . nodes [ i ] -> idx		3947839						
ANR	3948151	Symbol	tmp		3947839						
ANR	3948152	Symbol	g -> layers [ v -> layer ] . nodes		3947839						
ANR	3948153	Symbol	from		3947839						
ANR	3948154	Symbol	v -> gnode		3947839						
ANR	3948155	Symbol	* to		3947839						
ANR	3948156	Symbol	* * i		3947839						
ANR	3948157	Symbol	NULL		3947839						
ANR	3948158	Symbol	* * g		3947839						
ANR	3948159	Symbol	g -> layers [ v -> layer ] . n_nodes		3947839						
ANR	3948160	Symbol	it		3947839						
ANR	3948161	Symbol	* * * v		3947839						
ANR	3948162	Symbol	* from -> gnode		3947839						
ANR	3948163	Symbol	* v -> gnode		3947839						
ANR	3948164	Symbol	v -> gnode -> idx		3947839						
ANR	3948165	Symbol	* g -> layers [ v -> layer ] . nodes		3947839						
ANR	3948166	Symbol	* g -> layers		3947839						
ANR	3948167	Symbol	* * * g		3947839						
ANR	3948168	Symbol	v -> gnode -> out_nodes		3947839						
ANR	3948169	Symbol	* tmp		3947839						
ANR	3948170	Symbol	* * from		3947839						
ANR	3948171	Symbol	* r_list_first		3947839						
ANR	3948172	Symbol	( ( RGraphNode * ) r_list_first ( v -> gnode -> out_nodes ) ) -> data		3947839						
ANR	3948173	Symbol	r_graph_get_neighbours		3947839						
ANR	3948174	Symbol	tmp -> is_dummy		3947839						
ANR	3948175	Symbol	r_list_first		3947839						
ANR	3948176	Symbol	tmp -> gnode -> idx		3947839						
ANR	3948177	Symbol	g -> graph		3947839						
ANR	3948178	Symbol	* * v		3947839						
ANR	3948179	Symbol	* * * g -> layers		3947839						
ANR	3948180	Symbol	tmp -> gnode -> out_nodes		3947839						
ANR	3948181	Symbol	g		3947839						
ANR	3948182	Symbol	to -> gnode		3947839						
ANR	3948183	Symbol	i		3947839						
ANR	3948184	Symbol	neighbours		3947839						
ANR	3948185	Symbol	* * tmp		3947839						
ANR	3948186	Symbol	from -> gnode		3947839						
ANR	3948187	Symbol	gv		3947839						
ANR	3948188	Symbol	* g		3947839						
ANR	3948189	Symbol	( ( RGraphNode * ) r_list_first ( tmp -> gnode -> out_nodes ) ) -> data		3947839						
ANR	3948190	Symbol	* i		3947839						
ANR	3948191	Symbol	v		3947839						
ANR	3948192	Symbol	from -> gnode -> idx		3947839						
ANR	3948193	Symbol	v -> layer		3947839						
ANR	3948194	Symbol	* v -> layer		3947839						
ANR	3948195	Symbol	* tmp -> gnode		3947839						
ANR	3948196	Symbol	to		3947839						
ANR	3948197	Symbol	* * * v -> layer		3947839						
ANR	3948198	Symbol	tmp -> gnode		3947839						
ANR	3948199	Symbol	g -> layers		3947839						
ANR	3948200	Symbol	* * g -> layers		3947839						
ANR	3948201	Symbol	* from		3947839						
ANR	3948202	Function	get_edge_number	1718:0:43610:44484							
ANR	3948203	FunctionDef	"get_edge_number (const RAGraph * g , RANode * src , RANode * dst , bool outgoing)"		3948202	0					
ANR	3948204	CompoundStatement		1718:87:43697:44484	3948202	0					
ANR	3948205	IdentifierDeclStatement	RListIter * itn ;	1719:1:43700:43714	3948202	0	True				
ANR	3948206	IdentifierDecl	* itn		3948202	0					
ANR	3948207	IdentifierDeclType	RListIter *		3948202	0					
ANR	3948208	Identifier	itn		3948202	1					
ANR	3948209	IdentifierDeclStatement	RGraphNode * gv ;	1720:1:43717:43731	3948202	1	True				
ANR	3948210	IdentifierDecl	* gv		3948202	0					
ANR	3948211	IdentifierDeclType	RGraphNode *		3948202	0					
ANR	3948212	Identifier	gv		3948202	1					
ANR	3948213	IdentifierDeclStatement	int cur_nth = 0 ;	1721:1:43734:43749	3948202	2	True				
ANR	3948214	IdentifierDecl	cur_nth = 0		3948202	0					
ANR	3948215	IdentifierDeclType	int		3948202	0					
ANR	3948216	Identifier	cur_nth		3948202	1					
ANR	3948217	AssignmentExpression	cur_nth = 0		3948202	2		=			
ANR	3948218	Identifier	cur_nth		3948202	0					
ANR	3948219	PrimaryExpression	0		3948202	1					
ANR	3948220	IdentifierDeclStatement	int nth = 0 ;	1722:1:43752:43763	3948202	3	True				
ANR	3948221	IdentifierDecl	nth = 0		3948202	0					
ANR	3948222	IdentifierDeclType	int		3948202	0					
ANR	3948223	Identifier	nth		3948202	1					
ANR	3948224	AssignmentExpression	nth = 0		3948202	2		=			
ANR	3948225	Identifier	nth		3948202	0					
ANR	3948226	PrimaryExpression	0		3948202	1					
ANR	3948227	IdentifierDeclStatement	RANode * v ;	1723:1:43766:43775	3948202	4	True				
ANR	3948228	IdentifierDecl	* v		3948202	0					
ANR	3948229	IdentifierDeclType	RANode *		3948202	0					
ANR	3948230	Identifier	v		3948202	1					
ANR	3948231	IfStatement	if ( outgoing && src -> is_dummy )		3948202	5					
ANR	3948232	Condition	outgoing && src -> is_dummy	1725:5:43783:43807	3948202	0	True				
ANR	3948233	AndExpression	outgoing && src -> is_dummy		3948202	0		&&			
ANR	3948234	Identifier	outgoing		3948202	0					
ANR	3948235	PtrMemberAccess	src -> is_dummy		3948202	1					
ANR	3948236	Identifier	src		3948202	0					
ANR	3948237	Identifier	is_dummy		3948202	1					
ANR	3948238	CompoundStatement		9:2:116:201	3948202	1					
ANR	3948239	IdentifierDeclStatement	RANode * in = ( RANode * ) ( ( ( RGraphNode * ) r_list_first ( ( src -> gnode ) -> in_nodes ) ) -> data ) ;	1726:2:43814:43899	3948202	0	True				
ANR	3948240	IdentifierDecl	* in = ( RANode * ) ( ( ( RGraphNode * ) r_list_first ( ( src -> gnode ) -> in_nodes ) ) -> data )		3948202	0					
ANR	3948241	IdentifierDeclType	RANode *		3948202	0					
ANR	3948242	Identifier	in		3948202	1					
ANR	3948243	AssignmentExpression	* in = ( RANode * ) ( ( ( RGraphNode * ) r_list_first ( ( src -> gnode ) -> in_nodes ) ) -> data )		3948202	2		=			
ANR	3948244	Identifier	in		3948202	0					
ANR	3948245	CastExpression	( RANode * ) ( ( ( RGraphNode * ) r_list_first ( ( src -> gnode ) -> in_nodes ) ) -> data )		3948202	1					
ANR	3948246	CastTarget	RANode *		3948202	0					
ANR	3948247	PtrMemberAccess	( ( RGraphNode * ) r_list_first ( ( src -> gnode ) -> in_nodes ) ) -> data		3948202	1					
ANR	3948248	CastExpression	( RGraphNode * ) r_list_first ( ( src -> gnode ) -> in_nodes )		3948202	0					
ANR	3948249	CastTarget	RGraphNode *		3948202	0					
ANR	3948250	CallExpression	r_list_first ( ( src -> gnode ) -> in_nodes )		3948202	1					
ANR	3948251	Callee	r_list_first		3948202	0					
ANR	3948252	Identifier	r_list_first		3948202	0					
ANR	3948253	ArgumentList	( src -> gnode ) -> in_nodes		3948202	1					
ANR	3948254	Argument	( src -> gnode ) -> in_nodes		3948202	0					
ANR	3948255	PtrMemberAccess	( src -> gnode ) -> in_nodes		3948202	0					
ANR	3948256	PtrMemberAccess	src -> gnode		3948202	0					
ANR	3948257	Identifier	src		3948202	0					
ANR	3948258	Identifier	gnode		3948202	1					
ANR	3948259	Identifier	in_nodes		3948202	1					
ANR	3948260	Identifier	data		3948202	1					
ANR	3948261	ExpressionStatement	"cur_nth = get_edge_number ( g , in , src , outgoing )"	1727:2:43903:43951	3948202	1	True				
ANR	3948262	AssignmentExpression	"cur_nth = get_edge_number ( g , in , src , outgoing )"		3948202	0		=			
ANR	3948263	Identifier	cur_nth		3948202	0					
ANR	3948264	CallExpression	"get_edge_number ( g , in , src , outgoing )"		3948202	1					
ANR	3948265	Callee	get_edge_number		3948202	0					
ANR	3948266	Identifier	get_edge_number		3948202	0					
ANR	3948267	ArgumentList	g		3948202	1					
ANR	3948268	Argument	g		3948202	0					
ANR	3948269	Identifier	g		3948202	0					
ANR	3948270	Argument	in		3948202	1					
ANR	3948271	Identifier	in		3948202	0					
ANR	3948272	Argument	src		3948202	2					
ANR	3948273	Identifier	src		3948202	0					
ANR	3948274	Argument	outgoing		3948202	3					
ANR	3948275	Identifier	outgoing		3948202	0					
ANR	3948276	ElseStatement	else		3948202	0					
ANR	3948277	CompoundStatement		15:2:400:449	3948202	0					
ANR	3948278	IdentifierDeclStatement	"const RList * neighbours = outgoing ? r_graph_get_neighbours ( g -> graph , src -> gnode ) : r_graph_innodes ( g -> graph , dst -> gnode ) ;"	1729:2:43965:44094	3948202	0	True				
ANR	3948279	IdentifierDecl	"* neighbours = outgoing ? r_graph_get_neighbours ( g -> graph , src -> gnode ) : r_graph_innodes ( g -> graph , dst -> gnode )"		3948202	0					
ANR	3948280	IdentifierDeclType	const RList *		3948202	0					
ANR	3948281	Identifier	neighbours		3948202	1					
ANR	3948282	AssignmentExpression	"* neighbours = outgoing ? r_graph_get_neighbours ( g -> graph , src -> gnode ) : r_graph_innodes ( g -> graph , dst -> gnode )"		3948202	2		=			
ANR	3948283	Identifier	neighbours		3948202	0					
ANR	3948284	ConditionalExpression	"outgoing ? r_graph_get_neighbours ( g -> graph , src -> gnode ) : r_graph_innodes ( g -> graph , dst -> gnode )"		3948202	1					
ANR	3948285	Condition	outgoing		3948202	0					
ANR	3948286	Identifier	outgoing		3948202	0					
ANR	3948287	CallExpression	"r_graph_get_neighbours ( g -> graph , src -> gnode )"		3948202	1					
ANR	3948288	Callee	r_graph_get_neighbours		3948202	0					
ANR	3948289	Identifier	r_graph_get_neighbours		3948202	0					
ANR	3948290	ArgumentList	g -> graph		3948202	1					
ANR	3948291	Argument	g -> graph		3948202	0					
ANR	3948292	PtrMemberAccess	g -> graph		3948202	0					
ANR	3948293	Identifier	g		3948202	0					
ANR	3948294	Identifier	graph		3948202	1					
ANR	3948295	Argument	src -> gnode		3948202	1					
ANR	3948296	PtrMemberAccess	src -> gnode		3948202	0					
ANR	3948297	Identifier	src		3948202	0					
ANR	3948298	Identifier	gnode		3948202	1					
ANR	3948299	CallExpression	"r_graph_innodes ( g -> graph , dst -> gnode )"		3948202	2					
ANR	3948300	Callee	r_graph_innodes		3948202	0					
ANR	3948301	Identifier	r_graph_innodes		3948202	0					
ANR	3948302	ArgumentList	g -> graph		3948202	1					
ANR	3948303	Argument	g -> graph		3948202	0					
ANR	3948304	PtrMemberAccess	g -> graph		3948202	0					
ANR	3948305	Identifier	g		3948202	0					
ANR	3948306	Identifier	graph		3948202	1					
ANR	3948307	Argument	dst -> gnode		3948202	1					
ANR	3948308	PtrMemberAccess	dst -> gnode		3948202	0					
ANR	3948309	Identifier	dst		3948202	0					
ANR	3948310	Identifier	gnode		3948202	1					
ANR	3948311	IdentifierDeclStatement	const int exit_edges = r_list_length ( neighbours ) ;	1732:2:44098:44147	3948202	1	True				
ANR	3948312	IdentifierDecl	exit_edges = r_list_length ( neighbours )		3948202	0					
ANR	3948313	IdentifierDeclType	const int		3948202	0					
ANR	3948314	Identifier	exit_edges		3948202	1					
ANR	3948315	AssignmentExpression	exit_edges = r_list_length ( neighbours )		3948202	2		=			
ANR	3948316	Identifier	exit_edges		3948202	0					
ANR	3948317	CallExpression	r_list_length ( neighbours )		3948202	1					
ANR	3948318	Callee	r_list_length		3948202	0					
ANR	3948319	Identifier	r_list_length		3948202	0					
ANR	3948320	ArgumentList	neighbours		3948202	1					
ANR	3948321	Argument	neighbours		3948202	0					
ANR	3948322	Identifier	neighbours		3948202	0					
ANR	3948323	Statement	graph_foreach_anode	1733:2:44151:44169	3948202	2	True				
ANR	3948324	Statement	(	1733:22:44171:44171	3948202	3	True				
ANR	3948325	Statement	neighbours	1733:23:44172:44181	3948202	4	True				
ANR	3948326	Statement	","	1733:33:44182:44182	3948202	5	True				
ANR	3948327	Statement	itn	1733:35:44184:44186	3948202	6	True				
ANR	3948328	Statement	","	1733:38:44187:44187	3948202	7	True				
ANR	3948329	Statement	gv	1733:40:44189:44190	3948202	8	True				
ANR	3948330	Statement	","	1733:42:44191:44191	3948202	9	True				
ANR	3948331	Statement	v	1733:44:44193:44193	3948202	10	True				
ANR	3948332	Statement	)	1733:45:44194:44194	3948202	11	True				
ANR	3948333	CompoundStatement		16:47:498:498	3948202	12					
ANR	3948334	ExpressionStatement	cur_nth = nth	1734:3:44201:44214	3948202	0	True				
ANR	3948335	AssignmentExpression	cur_nth = nth		3948202	0		=			
ANR	3948336	Identifier	cur_nth		3948202	0					
ANR	3948337	Identifier	nth		3948202	1					
ANR	3948338	IfStatement	if ( g -> is_callgraph )		3948202	1					
ANR	3948339	Condition	g -> is_callgraph	1735:7:44223:44237	3948202	0	True				
ANR	3948340	PtrMemberAccess	g -> is_callgraph		3948202	0					
ANR	3948341	Identifier	g		3948202	0					
ANR	3948342	Identifier	is_callgraph		3948202	1					
ANR	3948343	CompoundStatement		18:24:542:542	3948202	1					
ANR	3948344	ExpressionStatement	cur_nth = 0	1736:4:44246:44257	3948202	0	True				
ANR	3948345	AssignmentExpression	cur_nth = 0		3948202	0		=			
ANR	3948346	Identifier	cur_nth		3948202	0					
ANR	3948347	PrimaryExpression	0		3948202	1					
ANR	3948348	ElseStatement	else		3948202	0					
ANR	3948349	IfStatement	if ( exit_edges == 1 )		3948202	0					
ANR	3948350	Condition	exit_edges == 1	1737:14:44273:44287	3948202	0	True				
ANR	3948351	EqualityExpression	exit_edges == 1		3948202	0		==			
ANR	3948352	Identifier	exit_edges		3948202	0					
ANR	3948353	PrimaryExpression	1		3948202	1					
ANR	3948354	CompoundStatement		20:31:592:592	3948202	1					
ANR	3948355	ExpressionStatement	cur_nth = - 1	1738:4:44296:44308	3948202	0	True				
ANR	3948356	AssignmentExpression	cur_nth = - 1		3948202	0		=			
ANR	3948357	Identifier	cur_nth		3948202	0					
ANR	3948358	UnaryOperationExpression	- 1		3948202	1					
ANR	3948359	UnaryOperator	-		3948202	0					
ANR	3948360	PrimaryExpression	1		3948202	1					
ANR	3948361	IfStatement	if ( outgoing && gv -> idx == ( dst -> gnode ) -> idx )		3948202	2					
ANR	3948362	Condition	outgoing && gv -> idx == ( dst -> gnode ) -> idx	1740:7:44322:44361	3948202	0	True				
ANR	3948363	AndExpression	outgoing && gv -> idx == ( dst -> gnode ) -> idx		3948202	0		&&			
ANR	3948364	Identifier	outgoing		3948202	0					
ANR	3948365	EqualityExpression	gv -> idx == ( dst -> gnode ) -> idx		3948202	1		==			
ANR	3948366	PtrMemberAccess	gv -> idx		3948202	0					
ANR	3948367	Identifier	gv		3948202	0					
ANR	3948368	Identifier	idx		3948202	1					
ANR	3948369	PtrMemberAccess	( dst -> gnode ) -> idx		3948202	1					
ANR	3948370	PtrMemberAccess	dst -> gnode		3948202	0					
ANR	3948371	Identifier	dst		3948202	0					
ANR	3948372	Identifier	gnode		3948202	1					
ANR	3948373	Identifier	idx		3948202	1					
ANR	3948374	CompoundStatement		23:49:666:666	3948202	1					
ANR	3948375	BreakStatement	break ;	1741:4:44370:44375	3948202	0	True				
ANR	3948376	IfStatement	if ( ! outgoing && gv -> idx == ( src -> gnode ) -> idx )		3948202	3					
ANR	3948377	Condition	! outgoing && gv -> idx == ( src -> gnode ) -> idx	1743:7:44389:44429	3948202	0	True				
ANR	3948378	AndExpression	! outgoing && gv -> idx == ( src -> gnode ) -> idx		3948202	0		&&			
ANR	3948379	UnaryOperationExpression	! outgoing		3948202	0					
ANR	3948380	UnaryOperator	!		3948202	0					
ANR	3948381	Identifier	outgoing		3948202	1					
ANR	3948382	EqualityExpression	gv -> idx == ( src -> gnode ) -> idx		3948202	1		==			
ANR	3948383	PtrMemberAccess	gv -> idx		3948202	0					
ANR	3948384	Identifier	gv		3948202	0					
ANR	3948385	Identifier	idx		3948202	1					
ANR	3948386	PtrMemberAccess	( src -> gnode ) -> idx		3948202	1					
ANR	3948387	PtrMemberAccess	src -> gnode		3948202	0					
ANR	3948388	Identifier	src		3948202	0					
ANR	3948389	Identifier	gnode		3948202	1					
ANR	3948390	Identifier	idx		3948202	1					
ANR	3948391	CompoundStatement		26:50:734:734	3948202	1					
ANR	3948392	BreakStatement	break ;	1744:4:44438:44443	3948202	0	True				
ANR	3948393	ExpressionStatement	nth ++	1746:3:44453:44458	3948202	4	True				
ANR	3948394	PostIncDecOperationExpression	nth ++		3948202	0					
ANR	3948395	Identifier	nth		3948202	0					
ANR	3948396	IncDec	++		3948202	1					
ANR	3948397	ReturnStatement	return cur_nth ;	1749:1:44468:44482	3948202	6	True				
ANR	3948398	Identifier	cur_nth		3948202	0					
ANR	3948399	ReturnType	static int		3948202	1					
ANR	3948400	Identifier	get_edge_number		3948202	2					
ANR	3948401	ParameterList	"const RAGraph * g , RANode * src , RANode * dst , bool outgoing"		3948202	3					
ANR	3948402	Parameter	const RAGraph * g	1718:28:43638:43653	3948202	0	True				
ANR	3948403	ParameterType	const RAGraph *		3948202	0					
ANR	3948404	Identifier	g		3948202	1					
ANR	3948405	Parameter	RANode * src	1718:46:43656:43666	3948202	1	True				
ANR	3948406	ParameterType	RANode *		3948202	0					
ANR	3948407	Identifier	src		3948202	1					
ANR	3948408	Parameter	RANode * dst	1718:59:43669:43679	3948202	2	True				
ANR	3948409	ParameterType	RANode *		3948202	0					
ANR	3948410	Identifier	dst		3948202	1					
ANR	3948411	Parameter	bool outgoing	1718:72:43682:43694	3948202	3	True				
ANR	3948412	ParameterType	bool		3948202	0					
ANR	3948413	Identifier	outgoing		3948202	1					
ANR	3948414	CFGEntryNode	ENTRY		3948202		True				
ANR	3948415	CFGExitNode	EXIT		3948202		True				
ANR	3948416	CFGErrorNode	ERROR		3948202		True				
ANR	3948417	Symbol	cur_nth		3948202						
ANR	3948418	Symbol	outgoing		3948202						
ANR	3948419	Symbol	gv -> idx		3948202						
ANR	3948420	Symbol	* src -> gnode		3948202						
ANR	3948421	Symbol	* r_list_first		3948202						
ANR	3948422	Symbol	dst		3948202						
ANR	3948423	Symbol	get_edge_number		3948202						
ANR	3948424	Symbol	r_graph_get_neighbours		3948202						
ANR	3948425	Symbol	* src		3948202						
ANR	3948426	Symbol	r_graph_innodes		3948202						
ANR	3948427	Symbol	r_list_first		3948202						
ANR	3948428	Symbol	* dst		3948202						
ANR	3948429	Symbol	( src -> gnode ) -> idx		3948202						
ANR	3948430	Symbol	g -> graph		3948202						
ANR	3948431	Symbol	( ( RGraphNode * ) r_list_first ( ( src -> gnode ) -> in_nodes ) ) -> data		3948202						
ANR	3948432	Symbol	* * dst		3948202						
ANR	3948433	Symbol	src -> gnode		3948202						
ANR	3948434	Symbol	g -> is_callgraph		3948202						
ANR	3948435	Symbol	* dst -> gnode		3948202						
ANR	3948436	Symbol	itn		3948202						
ANR	3948437	Symbol	nth		3948202						
ANR	3948438	Symbol	exit_edges		3948202						
ANR	3948439	Symbol	src		3948202						
ANR	3948440	Symbol	in		3948202						
ANR	3948441	Symbol	g		3948202						
ANR	3948442	Symbol	neighbours		3948202						
ANR	3948443	Symbol	gv		3948202						
ANR	3948444	Symbol	* g		3948202						
ANR	3948445	Symbol	dst -> gnode		3948202						
ANR	3948446	Symbol	( src -> gnode ) -> in_nodes		3948202						
ANR	3948447	Symbol	v		3948202						
ANR	3948448	Symbol	* gv		3948202						
ANR	3948449	Symbol	* * src		3948202						
ANR	3948450	Symbol	( dst -> gnode ) -> idx		3948202						
ANR	3948451	Symbol	src -> is_dummy		3948202						
ANR	3948452	Symbol	r_list_length		3948202						
ANR	3948453	Function	count_edges	1752:0:44487:44602							
ANR	3948454	FunctionDef	"count_edges (const RAGraph * g , RANode * src , RANode * dst)"		3948453	0					
ANR	3948455	CompoundStatement		1752:68:44555:44602	3948453	0					
ANR	3948456	ReturnStatement	"return get_edge_number ( g , src , dst , true ) ;"	1753:1:44558:44600	3948453	0	True				
ANR	3948457	CallExpression	"get_edge_number ( g , src , dst , true )"		3948453	0					
ANR	3948458	Callee	get_edge_number		3948453	0					
ANR	3948459	Identifier	get_edge_number		3948453	0					
ANR	3948460	ArgumentList	g		3948453	1					
ANR	3948461	Argument	g		3948453	0					
ANR	3948462	Identifier	g		3948453	0					
ANR	3948463	Argument	src		3948453	1					
ANR	3948464	Identifier	src		3948453	0					
ANR	3948465	Argument	dst		3948453	2					
ANR	3948466	Identifier	dst		3948453	0					
ANR	3948467	Argument	true		3948453	3					
ANR	3948468	Identifier	true		3948453	0					
ANR	3948469	ReturnType	static int		3948453	1					
ANR	3948470	Identifier	count_edges		3948453	2					
ANR	3948471	ParameterList	"const RAGraph * g , RANode * src , RANode * dst"		3948453	3					
ANR	3948472	Parameter	const RAGraph * g	1752:24:44511:44526	3948453	0	True				
ANR	3948473	ParameterType	const RAGraph *		3948453	0					
ANR	3948474	Identifier	g		3948453	1					
ANR	3948475	Parameter	RANode * src	1752:42:44529:44539	3948453	1	True				
ANR	3948476	ParameterType	RANode *		3948453	0					
ANR	3948477	Identifier	src		3948453	1					
ANR	3948478	Parameter	RANode * dst	1752:55:44542:44552	3948453	2	True				
ANR	3948479	ParameterType	RANode *		3948453	0					
ANR	3948480	Identifier	dst		3948453	1					
ANR	3948481	CFGEntryNode	ENTRY		3948453		True				
ANR	3948482	CFGExitNode	EXIT		3948453		True				
ANR	3948483	Symbol	dst		3948453						
ANR	3948484	Symbol	get_edge_number		3948453						
ANR	3948485	Symbol	src		3948453						
ANR	3948486	Symbol	g		3948453						
ANR	3948487	Symbol	true		3948453						
ANR	3948488	Function	backedge_info	1756:0:44605:48285							
ANR	3948489	FunctionDef	backedge_info (RAGraph * g)		3948488	0					
ANR	3948490	CompoundStatement		1756:39:44644:48285	3948488	0					
ANR	3948491	IdentifierDeclStatement	"int i , j , k ;"	1757:1:44647:44658	3948488	0	True				
ANR	3948492	IdentifierDecl	i		3948488	0					
ANR	3948493	IdentifierDeclType	int		3948488	0					
ANR	3948494	Identifier	i		3948488	1					
ANR	3948495	IdentifierDecl	j		3948488	1					
ANR	3948496	IdentifierDeclType	int		3948488	0					
ANR	3948497	Identifier	j		3948488	1					
ANR	3948498	IdentifierDecl	k		3948488	2					
ANR	3948499	IdentifierDeclType	int		3948488	0					
ANR	3948500	Identifier	k		3948488	1					
ANR	3948501	IdentifierDeclStatement	"int min , max ;"	1758:1:44661:44673	3948488	1	True				
ANR	3948502	IdentifierDecl	min		3948488	0					
ANR	3948503	IdentifierDeclType	int		3948488	0					
ANR	3948504	Identifier	min		3948488	1					
ANR	3948505	IdentifierDecl	max		3948488	1					
ANR	3948506	IdentifierDeclType	int		3948488	0					
ANR	3948507	Identifier	max		3948488	1					
ANR	3948508	IdentifierDeclStatement	int inedge = 0 ;	1759:1:44676:44690	3948488	2	True				
ANR	3948509	IdentifierDecl	inedge = 0		3948488	0					
ANR	3948510	IdentifierDeclType	int		3948488	0					
ANR	3948511	Identifier	inedge		3948488	1					
ANR	3948512	AssignmentExpression	inedge = 0		3948488	2		=			
ANR	3948513	Identifier	inedge		3948488	0					
ANR	3948514	PrimaryExpression	0		3948488	1					
ANR	3948515	IdentifierDeclStatement	int outedge = 0 ;	1760:1:44693:44708	3948488	3	True				
ANR	3948516	IdentifierDecl	outedge = 0		3948488	0					
ANR	3948517	IdentifierDeclType	int		3948488	0					
ANR	3948518	Identifier	outedge		3948488	1					
ANR	3948519	AssignmentExpression	outedge = 0		3948488	2		=			
ANR	3948520	Identifier	outedge		3948488	0					
ANR	3948521	PrimaryExpression	0		3948488	1					
ANR	3948522	Statement	int	1762:1:44712:44714	3948488	4	True				
ANR	3948523	Statement	*	1762:5:44716:44716	3948488	5	True				
ANR	3948524	Statement	*	1762:6:44717:44717	3948488	6	True				
ANR	3948525	Statement	arr	1762:7:44718:44720	3948488	7	True				
ANR	3948526	Statement	=	1762:11:44722:44722	3948488	8	True				
ANR	3948527	Statement	R_NEWS0	1762:13:44724:44730	3948488	9	True				
ANR	3948528	Statement	(	1762:21:44732:44732	3948488	10	True				
ANR	3948529	Statement	int	1762:22:44733:44735	3948488	11	True				
ANR	3948530	Statement	*	1762:26:44737:44737	3948488	12	True				
ANR	3948531	Statement	","	1762:27:44738:44738	3948488	13	True				
ANR	3948532	Statement	g	1762:29:44740:44740	3948488	14	True				
ANR	3948533	Statement	->	1762:30:44741:44742	3948488	15	True				
ANR	3948534	Statement	n_layers	1762:32:44743:44750	3948488	16	True				
ANR	3948535	Statement	)	1762:40:44751:44751	3948488	17	True				
ANR	3948536	ExpressionStatement		1762:41:44752:44752	3948488	18	True				
ANR	3948537	IfStatement	if ( ! arr )		3948488	19					
ANR	3948538	Condition	! arr	1763:5:44759:44762	3948488	0	True				
ANR	3948539	UnaryOperationExpression	! arr		3948488	0					
ANR	3948540	UnaryOperator	!		3948488	0					
ANR	3948541	Identifier	arr		3948488	1					
ANR	3948542	CompoundStatement		8:11:120:120	3948488	1					
ANR	3948543	ReturnStatement	return ;	1764:2:44769:44775	3948488	0	True				
ANR	3948544	ForStatement	for ( i = 0 ; i < g -> n_layers ; i ++ )		3948488	20					
ANR	3948545	ForInit	i = 0 ;	1766:6:44786:44791	3948488	0	True				
ANR	3948546	AssignmentExpression	i = 0		3948488	0		=			
ANR	3948547	Identifier	i		3948488	0					
ANR	3948548	PrimaryExpression	0		3948488	1					
ANR	3948549	Condition	i < g -> n_layers	1766:13:44793:44807	3948488	1	True				
ANR	3948550	RelationalExpression	i < g -> n_layers		3948488	0		<			
ANR	3948551	Identifier	i		3948488	0					
ANR	3948552	PtrMemberAccess	g -> n_layers		3948488	1					
ANR	3948553	Identifier	g		3948488	0					
ANR	3948554	Identifier	n_layers		3948488	1					
ANR	3948555	PostIncDecOperationExpression	i ++	1766:30:44810:44812	3948488	2	True				
ANR	3948556	Identifier	i		3948488	0					
ANR	3948557	IncDec	++		3948488	1					
ANR	3948558	CompoundStatement		11:35:170:170	3948488	3					
ANR	3948559	ExpressionStatement	"arr [ i ] = R_NEWS0 ( int , 2 )"	1767:2:44819:44844	3948488	0	True				
ANR	3948560	AssignmentExpression	"arr [ i ] = R_NEWS0 ( int , 2 )"		3948488	0		=			
ANR	3948561	ArrayIndexing	arr [ i ]		3948488	0					
ANR	3948562	Identifier	arr		3948488	0					
ANR	3948563	Identifier	i		3948488	1					
ANR	3948564	CallExpression	"R_NEWS0 ( int , 2 )"		3948488	1					
ANR	3948565	Callee	R_NEWS0		3948488	0					
ANR	3948566	Identifier	R_NEWS0		3948488	0					
ANR	3948567	ArgumentList	int		3948488	1					
ANR	3948568	Argument	int		3948488	0					
ANR	3948569	Identifier	int		3948488	0					
ANR	3948570	Argument	2		3948488	1					
ANR	3948571	PrimaryExpression	2		3948488	0					
ANR	3948572	IfStatement	if ( ! arr [ i ] )		3948488	1					
ANR	3948573	Condition	! arr [ i ]	1768:6:44852:44858	3948488	0	True				
ANR	3948574	UnaryOperationExpression	! arr [ i ]		3948488	0					
ANR	3948575	UnaryOperator	!		3948488	0					
ANR	3948576	ArrayIndexing	arr [ i ]		3948488	1					
ANR	3948577	Identifier	arr		3948488	0					
ANR	3948578	Identifier	i		3948488	1					
ANR	3948579	CompoundStatement		13:15:216:216	3948488	1					
ANR	3948580	GotoStatement	goto err ;	1769:3:44866:44874	3948488	0	True				
ANR	3948581	Identifier	err		3948488	0					
ANR	3948582	ForStatement	for ( i = 0 ; i < g -> n_layers ; i ++ )		3948488	21					
ANR	3948583	ForInit	i = 0 ;	1773:6:44890:44895	3948488	0	True				
ANR	3948584	AssignmentExpression	i = 0		3948488	0		=			
ANR	3948585	Identifier	i		3948488	0					
ANR	3948586	PrimaryExpression	0		3948488	1					
ANR	3948587	Condition	i < g -> n_layers	1773:13:44897:44911	3948488	1	True				
ANR	3948588	RelationalExpression	i < g -> n_layers		3948488	0		<			
ANR	3948589	Identifier	i		3948488	0					
ANR	3948590	PtrMemberAccess	g -> n_layers		3948488	1					
ANR	3948591	Identifier	g		3948488	0					
ANR	3948592	Identifier	n_layers		3948488	1					
ANR	3948593	PostIncDecOperationExpression	i ++	1773:30:44914:44916	3948488	2	True				
ANR	3948594	Identifier	i		3948488	0					
ANR	3948595	IncDec	++		3948488	1					
ANR	3948596	CompoundStatement		18:35:274:274	3948488	3					
ANR	3948597	ForStatement	for ( j = 0 ; j < g -> layers [ i ] . n_nodes ; j ++ )		3948488	0					
ANR	3948598	ForInit	j = 0 ;	1774:7:44928:44933	3948488	0	True				
ANR	3948599	AssignmentExpression	j = 0		3948488	0		=			
ANR	3948600	Identifier	j		3948488	0					
ANR	3948601	PrimaryExpression	0		3948488	1					
ANR	3948602	Condition	j < g -> layers [ i ] . n_nodes	1774:14:44935:44958	3948488	1	True				
ANR	3948603	RelationalExpression	j < g -> layers [ i ] . n_nodes		3948488	0		<			
ANR	3948604	Identifier	j		3948488	0					
ANR	3948605	MemberAccess	g -> layers [ i ] . n_nodes		3948488	1					
ANR	3948606	ArrayIndexing	g -> layers [ i ]		3948488	0					
ANR	3948607	PtrMemberAccess	g -> layers		3948488	0					
ANR	3948608	Identifier	g		3948488	0					
ANR	3948609	Identifier	layers		3948488	1					
ANR	3948610	Identifier	i		3948488	1					
ANR	3948611	Identifier	n_nodes		3948488	1					
ANR	3948612	PostIncDecOperationExpression	j ++	1774:40:44961:44963	3948488	2	True				
ANR	3948613	Identifier	j		3948488	0					
ANR	3948614	IncDec	++		3948488	1					
ANR	3948615	CompoundStatement		29:3:512:549	3948488	3					
ANR	3948616	IdentifierDeclStatement	RGraphNode * gt = g -> layers [ i ] . nodes [ j ] ;	1775:3:44971:45009	3948488	0	True				
ANR	3948617	IdentifierDecl	* gt = g -> layers [ i ] . nodes [ j ]		3948488	0					
ANR	3948618	IdentifierDeclType	RGraphNode *		3948488	0					
ANR	3948619	Identifier	gt		3948488	1					
ANR	3948620	AssignmentExpression	* gt = g -> layers [ i ] . nodes [ j ]		3948488	2		=			
ANR	3948621	Identifier	gt		3948488	0					
ANR	3948622	ArrayIndexing	g -> layers [ i ] . nodes [ j ]		3948488	1					
ANR	3948623	MemberAccess	g -> layers [ i ] . nodes		3948488	0					
ANR	3948624	ArrayIndexing	g -> layers [ i ]		3948488	0					
ANR	3948625	PtrMemberAccess	g -> layers		3948488	0					
ANR	3948626	Identifier	g		3948488	0					
ANR	3948627	Identifier	layers		3948488	1					
ANR	3948628	Identifier	i		3948488	1					
ANR	3948629	Identifier	nodes		3948488	1					
ANR	3948630	Identifier	j		3948488	1					
ANR	3948631	IfStatement	if ( ! gt )		3948488	1					
ANR	3948632	Condition	! gt	1776:7:45018:45020	3948488	0	True				
ANR	3948633	UnaryOperationExpression	! gt		3948488	0					
ANR	3948634	UnaryOperator	!		3948488	0					
ANR	3948635	Identifier	gt		3948488	1					
ANR	3948636	CompoundStatement		21:12:378:378	3948488	1					
ANR	3948637	ContinueStatement	continue ;	1777:4:45029:45037	3948488	0	True				
ANR	3948638	IdentifierDeclStatement	RANode * t = ( RANode * ) gt -> data ;	1779:3:45047:45078	3948488	2	True				
ANR	3948639	IdentifierDecl	* t = ( RANode * ) gt -> data		3948488	0					
ANR	3948640	IdentifierDeclType	RANode *		3948488	0					
ANR	3948641	Identifier	t		3948488	1					
ANR	3948642	AssignmentExpression	* t = ( RANode * ) gt -> data		3948488	2		=			
ANR	3948643	Identifier	t		3948488	0					
ANR	3948644	CastExpression	( RANode * ) gt -> data		3948488	1					
ANR	3948645	CastTarget	RANode *		3948488	0					
ANR	3948646	PtrMemberAccess	gt -> data		3948488	1					
ANR	3948647	Identifier	gt		3948488	0					
ANR	3948648	Identifier	data		3948488	1					
ANR	3948649	IfStatement	if ( ! t )		3948488	3					
ANR	3948650	Condition	! t	1780:7:45087:45088	3948488	0	True				
ANR	3948651	UnaryOperationExpression	! t		3948488	0					
ANR	3948652	UnaryOperator	!		3948488	0					
ANR	3948653	Identifier	t		3948488	1					
ANR	3948654	CompoundStatement		25:11:446:446	3948488	1					
ANR	3948655	ContinueStatement	continue ;	1781:4:45097:45105	3948488	0	True				
ANR	3948656	IdentifierDeclStatement	int tc = g -> layout == 0 ? t -> x : t -> y ;	1783:3:45115:45152	3948488	4	True				
ANR	3948657	IdentifierDecl	tc = g -> layout == 0 ? t -> x : t -> y		3948488	0					
ANR	3948658	IdentifierDeclType	int		3948488	0					
ANR	3948659	Identifier	tc		3948488	1					
ANR	3948660	AssignmentExpression	tc = g -> layout == 0 ? t -> x : t -> y		3948488	2		=			
ANR	3948661	Identifier	tc		3948488	0					
ANR	3948662	ConditionalExpression	g -> layout == 0 ? t -> x : t -> y		3948488	1					
ANR	3948663	Condition	g -> layout == 0		3948488	0					
ANR	3948664	EqualityExpression	g -> layout == 0		3948488	0		==			
ANR	3948665	PtrMemberAccess	g -> layout		3948488	0					
ANR	3948666	Identifier	g		3948488	0					
ANR	3948667	Identifier	layout		3948488	1					
ANR	3948668	PrimaryExpression	0		3948488	1					
ANR	3948669	PtrMemberAccess	t -> x		3948488	1					
ANR	3948670	Identifier	t		3948488	0					
ANR	3948671	Identifier	x		3948488	1					
ANR	3948672	PtrMemberAccess	t -> y		3948488	2					
ANR	3948673	Identifier	t		3948488	0					
ANR	3948674	Identifier	y		3948488	1					
ANR	3948675	IdentifierDeclStatement	int tl = g -> layout == 0 ? t -> w : t -> h ;	1784:3:45157:45194	3948488	5	True				
ANR	3948676	IdentifierDecl	tl = g -> layout == 0 ? t -> w : t -> h		3948488	0					
ANR	3948677	IdentifierDeclType	int		3948488	0					
ANR	3948678	Identifier	tl		3948488	1					
ANR	3948679	AssignmentExpression	tl = g -> layout == 0 ? t -> w : t -> h		3948488	2		=			
ANR	3948680	Identifier	tl		3948488	0					
ANR	3948681	ConditionalExpression	g -> layout == 0 ? t -> w : t -> h		3948488	1					
ANR	3948682	Condition	g -> layout == 0		3948488	0					
ANR	3948683	EqualityExpression	g -> layout == 0		3948488	0		==			
ANR	3948684	PtrMemberAccess	g -> layout		3948488	0					
ANR	3948685	Identifier	g		3948488	0					
ANR	3948686	Identifier	layout		3948488	1					
ANR	3948687	PrimaryExpression	0		3948488	1					
ANR	3948688	PtrMemberAccess	t -> w		3948488	1					
ANR	3948689	Identifier	t		3948488	0					
ANR	3948690	Identifier	w		3948488	1					
ANR	3948691	PtrMemberAccess	t -> h		3948488	2					
ANR	3948692	Identifier	t		3948488	0					
ANR	3948693	Identifier	h		3948488	1					
ANR	3948694	IfStatement	if ( ! j )		3948488	6					
ANR	3948695	Condition	! j	1785:7:45203:45204	3948488	0	True				
ANR	3948696	UnaryOperationExpression	! j		3948488	0					
ANR	3948697	UnaryOperator	!		3948488	0					
ANR	3948698	Identifier	j		3948488	1					
ANR	3948699	CompoundStatement		30:11:562:562	3948488	1					
ANR	3948700	ExpressionStatement	arr [ i ] [ 0 ] = tc	1786:4:45213:45227	3948488	0	True				
ANR	3948701	AssignmentExpression	arr [ i ] [ 0 ] = tc		3948488	0		=			
ANR	3948702	ArrayIndexing	arr [ i ] [ 0 ]		3948488	0					
ANR	3948703	ArrayIndexing	arr [ i ]		3948488	0					
ANR	3948704	Identifier	arr		3948488	0					
ANR	3948705	Identifier	i		3948488	1					
ANR	3948706	PrimaryExpression	0		3948488	1					
ANR	3948707	Identifier	tc		3948488	1					
ANR	3948708	ExpressionStatement	arr [ i ] [ 1 ] = tc + tl	1787:4:45233:45252	3948488	1	True				
ANR	3948709	AssignmentExpression	arr [ i ] [ 1 ] = tc + tl		3948488	0		=			
ANR	3948710	ArrayIndexing	arr [ i ] [ 1 ]		3948488	0					
ANR	3948711	ArrayIndexing	arr [ i ]		3948488	0					
ANR	3948712	Identifier	arr		3948488	0					
ANR	3948713	Identifier	i		3948488	1					
ANR	3948714	PrimaryExpression	1		3948488	1					
ANR	3948715	AdditiveExpression	tc + tl		3948488	1		+			
ANR	3948716	Identifier	tc		3948488	0					
ANR	3948717	Identifier	tl		3948488	1					
ANR	3948718	IfStatement	if ( arr [ i ] [ 0 ] > tc )		3948488	7					
ANR	3948719	Condition	arr [ i ] [ 0 ] > tc	1790:7:45267:45280	3948488	0	True				
ANR	3948720	RelationalExpression	arr [ i ] [ 0 ] > tc		3948488	0		>			
ANR	3948721	ArrayIndexing	arr [ i ] [ 0 ]		3948488	0					
ANR	3948722	ArrayIndexing	arr [ i ]		3948488	0					
ANR	3948723	Identifier	arr		3948488	0					
ANR	3948724	Identifier	i		3948488	1					
ANR	3948725	PrimaryExpression	0		3948488	1					
ANR	3948726	Identifier	tc		3948488	1					
ANR	3948727	CompoundStatement		35:23:638:638	3948488	1					
ANR	3948728	ExpressionStatement	arr [ i ] [ 0 ] = tc	1791:4:45289:45303	3948488	0	True				
ANR	3948729	AssignmentExpression	arr [ i ] [ 0 ] = tc		3948488	0		=			
ANR	3948730	ArrayIndexing	arr [ i ] [ 0 ]		3948488	0					
ANR	3948731	ArrayIndexing	arr [ i ]		3948488	0					
ANR	3948732	Identifier	arr		3948488	0					
ANR	3948733	Identifier	i		3948488	1					
ANR	3948734	PrimaryExpression	0		3948488	1					
ANR	3948735	Identifier	tc		3948488	1					
ANR	3948736	IfStatement	if ( arr [ i ] [ 1 ] < tc + tl )		3948488	8					
ANR	3948737	Condition	arr [ i ] [ 1 ] < tc + tl	1794:7:45318:45336	3948488	0	True				
ANR	3948738	RelationalExpression	arr [ i ] [ 1 ] < tc + tl		3948488	0		<			
ANR	3948739	ArrayIndexing	arr [ i ] [ 1 ]		3948488	0					
ANR	3948740	ArrayIndexing	arr [ i ]		3948488	0					
ANR	3948741	Identifier	arr		3948488	0					
ANR	3948742	Identifier	i		3948488	1					
ANR	3948743	PrimaryExpression	1		3948488	1					
ANR	3948744	AdditiveExpression	tc + tl		3948488	1		+			
ANR	3948745	Identifier	tc		3948488	0					
ANR	3948746	Identifier	tl		3948488	1					
ANR	3948747	CompoundStatement		39:28:694:694	3948488	1					
ANR	3948748	ExpressionStatement	arr [ i ] [ 1 ] = tc + tl	1795:4:45345:45364	3948488	0	True				
ANR	3948749	AssignmentExpression	arr [ i ] [ 1 ] = tc + tl		3948488	0		=			
ANR	3948750	ArrayIndexing	arr [ i ] [ 1 ]		3948488	0					
ANR	3948751	ArrayIndexing	arr [ i ]		3948488	0					
ANR	3948752	Identifier	arr		3948488	0					
ANR	3948753	Identifier	i		3948488	1					
ANR	3948754	PrimaryExpression	1		3948488	1					
ANR	3948755	AdditiveExpression	tc + tl		3948488	1		+			
ANR	3948756	Identifier	tc		3948488	0					
ANR	3948757	Identifier	tl		3948488	1					
ANR	3948758	ForStatement	for ( j = 0 ; j < g -> layers [ i ] . n_nodes ; j ++ )		3948488	1					
ANR	3948759	ForInit	j = 0 ;	1799:7:45383:45388	3948488	0	True				
ANR	3948760	AssignmentExpression	j = 0		3948488	0		=			
ANR	3948761	Identifier	j		3948488	0					
ANR	3948762	PrimaryExpression	0		3948488	1					
ANR	3948763	Condition	j < g -> layers [ i ] . n_nodes	1799:14:45390:45413	3948488	1	True				
ANR	3948764	RelationalExpression	j < g -> layers [ i ] . n_nodes		3948488	0		<			
ANR	3948765	Identifier	j		3948488	0					
ANR	3948766	MemberAccess	g -> layers [ i ] . n_nodes		3948488	1					
ANR	3948767	ArrayIndexing	g -> layers [ i ]		3948488	0					
ANR	3948768	PtrMemberAccess	g -> layers		3948488	0					
ANR	3948769	Identifier	g		3948488	0					
ANR	3948770	Identifier	layers		3948488	1					
ANR	3948771	Identifier	i		3948488	1					
ANR	3948772	Identifier	n_nodes		3948488	1					
ANR	3948773	PostIncDecOperationExpression	j ++	1799:40:45416:45418	3948488	2	True				
ANR	3948774	Identifier	j		3948488	0					
ANR	3948775	IncDec	++		3948488	1					
ANR	3948776	CompoundStatement		53:3:986:1000	3948488	3					
ANR	3948777	IdentifierDeclStatement	RANode * a = get_anode ( g -> layers [ i ] . nodes [ j ] ) ;	1800:3:45426:45471	3948488	0	True				
ANR	3948778	IdentifierDecl	* a = get_anode ( g -> layers [ i ] . nodes [ j ] )		3948488	0					
ANR	3948779	IdentifierDeclType	RANode *		3948488	0					
ANR	3948780	Identifier	a		3948488	1					
ANR	3948781	AssignmentExpression	* a = get_anode ( g -> layers [ i ] . nodes [ j ] )		3948488	2		=			
ANR	3948782	Identifier	a		3948488	0					
ANR	3948783	CallExpression	get_anode ( g -> layers [ i ] . nodes [ j ] )		3948488	1					
ANR	3948784	Callee	get_anode		3948488	0					
ANR	3948785	Identifier	get_anode		3948488	0					
ANR	3948786	ArgumentList	g -> layers [ i ] . nodes [ j ]		3948488	1					
ANR	3948787	Argument	g -> layers [ i ] . nodes [ j ]		3948488	0					
ANR	3948788	ArrayIndexing	g -> layers [ i ] . nodes [ j ]		3948488	0					
ANR	3948789	MemberAccess	g -> layers [ i ] . nodes		3948488	0					
ANR	3948790	ArrayIndexing	g -> layers [ i ]		3948488	0					
ANR	3948791	PtrMemberAccess	g -> layers		3948488	0					
ANR	3948792	Identifier	g		3948488	0					
ANR	3948793	Identifier	layers		3948488	1					
ANR	3948794	Identifier	i		3948488	1					
ANR	3948795	Identifier	nodes		3948488	1					
ANR	3948796	Identifier	j		3948488	1					
ANR	3948797	IfStatement	if ( ! a || a -> is_dummy )		3948488	1					
ANR	3948798	Condition	! a || a -> is_dummy	1801:7:45480:45496	3948488	0	True				
ANR	3948799	OrExpression	! a || a -> is_dummy		3948488	0		||			
ANR	3948800	UnaryOperationExpression	! a		3948488	0					
ANR	3948801	UnaryOperator	!		3948488	0					
ANR	3948802	Identifier	a		3948488	1					
ANR	3948803	PtrMemberAccess	a -> is_dummy		3948488	1					
ANR	3948804	Identifier	a		3948488	0					
ANR	3948805	Identifier	is_dummy		3948488	1					
ANR	3948806	CompoundStatement		46:26:854:854	3948488	1					
ANR	3948807	ContinueStatement	continue ;	1802:4:45505:45513	3948488	0	True				
ANR	3948808	IdentifierDeclStatement	"const RList * neighbours = r_graph_get_neighbours ( g -> graph , a -> gnode ) ;"	1805:3:45524:45593	3948488	2	True				
ANR	3948809	IdentifierDecl	"* neighbours = r_graph_get_neighbours ( g -> graph , a -> gnode )"		3948488	0					
ANR	3948810	IdentifierDeclType	const RList *		3948488	0					
ANR	3948811	Identifier	neighbours		3948488	1					
ANR	3948812	AssignmentExpression	"* neighbours = r_graph_get_neighbours ( g -> graph , a -> gnode )"		3948488	2		=			
ANR	3948813	Identifier	neighbours		3948488	0					
ANR	3948814	CallExpression	"r_graph_get_neighbours ( g -> graph , a -> gnode )"		3948488	1					
ANR	3948815	Callee	r_graph_get_neighbours		3948488	0					
ANR	3948816	Identifier	r_graph_get_neighbours		3948488	0					
ANR	3948817	ArgumentList	g -> graph		3948488	1					
ANR	3948818	Argument	g -> graph		3948488	0					
ANR	3948819	PtrMemberAccess	g -> graph		3948488	0					
ANR	3948820	Identifier	g		3948488	0					
ANR	3948821	Identifier	graph		3948488	1					
ANR	3948822	Argument	a -> gnode		3948488	1					
ANR	3948823	PtrMemberAccess	a -> gnode		3948488	0					
ANR	3948824	Identifier	a		3948488	0					
ANR	3948825	Identifier	gnode		3948488	1					
ANR	3948826	IdentifierDeclStatement	RGraphNode * gb ;	1806:3:45598:45612	3948488	3	True				
ANR	3948827	IdentifierDecl	* gb		3948488	0					
ANR	3948828	IdentifierDeclType	RGraphNode *		3948488	0					
ANR	3948829	Identifier	gb		3948488	1					
ANR	3948830	IdentifierDeclStatement	RANode * b ;	1807:3:45617:45626	3948488	4	True				
ANR	3948831	IdentifierDecl	* b		3948488	0					
ANR	3948832	IdentifierDeclType	RANode *		3948488	0					
ANR	3948833	Identifier	b		3948488	1					
ANR	3948834	IdentifierDeclStatement	RListIter * itm ;	1808:3:45631:45645	3948488	5	True				
ANR	3948835	IdentifierDecl	* itm		3948488	0					
ANR	3948836	IdentifierDeclType	RListIter *		3948488	0					
ANR	3948837	Identifier	itm		3948488	1					
ANR	3948838	IfStatement	if ( i == 0 )		3948488	6					
ANR	3948839	Condition	i == 0	1810:7:45655:45660	3948488	0	True				
ANR	3948840	EqualityExpression	i == 0		3948488	0		==			
ANR	3948841	Identifier	i		3948488	0					
ANR	3948842	PrimaryExpression	0		3948488	1					
ANR	3948843	CompoundStatement		55:15:1018:1018	3948488	1					
ANR	3948844	ExpressionStatement	"inedge += r_list_length ( r_graph_innodes ( g -> graph , a -> gnode ) )"	1811:4:45669:45731	3948488	0	True				
ANR	3948845	AssignmentExpression	"inedge += r_list_length ( r_graph_innodes ( g -> graph , a -> gnode ) )"		3948488	0		+=			
ANR	3948846	Identifier	inedge		3948488	0					
ANR	3948847	CallExpression	"r_list_length ( r_graph_innodes ( g -> graph , a -> gnode ) )"		3948488	1					
ANR	3948848	Callee	r_list_length		3948488	0					
ANR	3948849	Identifier	r_list_length		3948488	0					
ANR	3948850	ArgumentList	"r_graph_innodes ( g -> graph , a -> gnode )"		3948488	1					
ANR	3948851	Argument	"r_graph_innodes ( g -> graph , a -> gnode )"		3948488	0					
ANR	3948852	CallExpression	"r_graph_innodes ( g -> graph , a -> gnode )"		3948488	0					
ANR	3948853	Callee	r_graph_innodes		3948488	0					
ANR	3948854	Identifier	r_graph_innodes		3948488	0					
ANR	3948855	ArgumentList	g -> graph		3948488	1					
ANR	3948856	Argument	g -> graph		3948488	0					
ANR	3948857	PtrMemberAccess	g -> graph		3948488	0					
ANR	3948858	Identifier	g		3948488	0					
ANR	3948859	Identifier	graph		3948488	1					
ANR	3948860	Argument	a -> gnode		3948488	1					
ANR	3948861	PtrMemberAccess	a -> gnode		3948488	0					
ANR	3948862	Identifier	a		3948488	0					
ANR	3948863	Identifier	gnode		3948488	1					
ANR	3948864	ElseStatement	else		3948488	0					
ANR	3948865	IfStatement	if ( i == g -> n_layers - 1 )		3948488	0					
ANR	3948866	Condition	i == g -> n_layers - 1	1812:14:45747:45766	3948488	0	True				
ANR	3948867	EqualityExpression	i == g -> n_layers - 1		3948488	0		==			
ANR	3948868	Identifier	i		3948488	0					
ANR	3948869	AdditiveExpression	g -> n_layers - 1		3948488	1		-			
ANR	3948870	PtrMemberAccess	g -> n_layers		3948488	0					
ANR	3948871	Identifier	g		3948488	0					
ANR	3948872	Identifier	n_layers		3948488	1					
ANR	3948873	PrimaryExpression	1		3948488	1					
ANR	3948874	CompoundStatement		57:36:1124:1124	3948488	1					
ANR	3948875	ExpressionStatement	outedge += r_list_length ( neighbours )	1813:4:45775:45812	3948488	0	True				
ANR	3948876	AssignmentExpression	outedge += r_list_length ( neighbours )		3948488	0		+=			
ANR	3948877	Identifier	outedge		3948488	0					
ANR	3948878	CallExpression	r_list_length ( neighbours )		3948488	1					
ANR	3948879	Callee	r_list_length		3948488	0					
ANR	3948880	Identifier	r_list_length		3948488	0					
ANR	3948881	ArgumentList	neighbours		3948488	1					
ANR	3948882	Argument	neighbours		3948488	0					
ANR	3948883	Identifier	neighbours		3948488	0					
ANR	3948884	Statement	graph_foreach_anode	1816:3:45823:45841	3948488	7	True				
ANR	3948885	Statement	(	1816:23:45843:45843	3948488	8	True				
ANR	3948886	Statement	neighbours	1816:24:45844:45853	3948488	9	True				
ANR	3948887	Statement	","	1816:34:45854:45854	3948488	10	True				
ANR	3948888	Statement	itm	1816:36:45856:45858	3948488	11	True				
ANR	3948889	Statement	","	1816:39:45859:45859	3948488	12	True				
ANR	3948890	Statement	gb	1816:41:45861:45862	3948488	13	True				
ANR	3948891	Statement	","	1816:43:45863:45863	3948488	14	True				
ANR	3948892	Statement	b	1816:45:45865:45865	3948488	15	True				
ANR	3948893	Statement	)	1816:46:45866:45866	3948488	16	True				
ANR	3948894	CompoundStatement		99:4:2020:2045	3948488	17					
ANR	3948895	IfStatement	if ( b -> layer > a -> layer )		3948488	0					
ANR	3948896	Condition	b -> layer > a -> layer	1817:8:45878:45896	3948488	0	True				
ANR	3948897	RelationalExpression	b -> layer > a -> layer		3948488	0		>			
ANR	3948898	PtrMemberAccess	b -> layer		3948488	0					
ANR	3948899	Identifier	b		3948488	0					
ANR	3948900	Identifier	layer		3948488	1					
ANR	3948901	PtrMemberAccess	a -> layer		3948488	1					
ANR	3948902	Identifier	a		3948488	0					
ANR	3948903	Identifier	layer		3948488	1					
ANR	3948904	CompoundStatement		62:29:1254:1254	3948488	1					
ANR	3948905	ContinueStatement	continue ;	1818:5:45906:45914	3948488	0	True				
ANR	3948906	IdentifierDeclStatement	"int nth = count_edges ( g , a , b ) ;"	1821:4:45927:45958	3948488	1	True				
ANR	3948907	IdentifierDecl	"nth = count_edges ( g , a , b )"		3948488	0					
ANR	3948908	IdentifierDeclType	int		3948488	0					
ANR	3948909	Identifier	nth		3948488	1					
ANR	3948910	AssignmentExpression	"nth = count_edges ( g , a , b )"		3948488	2		=			
ANR	3948911	Identifier	nth		3948488	0					
ANR	3948912	CallExpression	"count_edges ( g , a , b )"		3948488	1					
ANR	3948913	Callee	count_edges		3948488	0					
ANR	3948914	Identifier	count_edges		3948488	0					
ANR	3948915	ArgumentList	g		3948488	1					
ANR	3948916	Argument	g		3948488	0					
ANR	3948917	Identifier	g		3948488	0					
ANR	3948918	Argument	a		3948488	1					
ANR	3948919	Identifier	a		3948488	0					
ANR	3948920	Argument	b		3948488	2					
ANR	3948921	Identifier	b		3948488	0					
ANR	3948922	IdentifierDeclStatement	int xinc = R_EDGES_X_INC + 2 * ( nth + 1 ) ;	1822:4:45964:46004	3948488	2	True				
ANR	3948923	IdentifierDecl	xinc = R_EDGES_X_INC + 2 * ( nth + 1 )		3948488	0					
ANR	3948924	IdentifierDeclType	int		3948488	0					
ANR	3948925	Identifier	xinc		3948488	1					
ANR	3948926	AssignmentExpression	xinc = R_EDGES_X_INC + 2 * ( nth + 1 )		3948488	2		=			
ANR	3948927	Identifier	xinc		3948488	0					
ANR	3948928	AdditiveExpression	R_EDGES_X_INC + 2 * ( nth + 1 )		3948488	1		+			
ANR	3948929	Identifier	R_EDGES_X_INC		3948488	0					
ANR	3948930	MultiplicativeExpression	2 * ( nth + 1 )		3948488	1		*			
ANR	3948931	PrimaryExpression	2		3948488	0					
ANR	3948932	AdditiveExpression	nth + 1		3948488	1		+			
ANR	3948933	Identifier	nth		3948488	0					
ANR	3948934	PrimaryExpression	1		3948488	1					
ANR	3948935	IdentifierDeclStatement	int ax = g -> layout == 0 ? a -> x + xinc : a -> y + ( a -> h / 2 ) + nth ;	1824:4:46011:46074	3948488	3	True				
ANR	3948936	IdentifierDecl	ax = g -> layout == 0 ? a -> x + xinc : a -> y + ( a -> h / 2 ) + nth		3948488	0					
ANR	3948937	IdentifierDeclType	int		3948488	0					
ANR	3948938	Identifier	ax		3948488	1					
ANR	3948939	AssignmentExpression	ax = g -> layout == 0 ? a -> x + xinc : a -> y + ( a -> h / 2 ) + nth		3948488	2		=			
ANR	3948940	Identifier	ax		3948488	0					
ANR	3948941	ConditionalExpression	g -> layout == 0 ? a -> x + xinc : a -> y + ( a -> h / 2 ) + nth		3948488	1					
ANR	3948942	Condition	g -> layout == 0		3948488	0					
ANR	3948943	EqualityExpression	g -> layout == 0		3948488	0		==			
ANR	3948944	PtrMemberAccess	g -> layout		3948488	0					
ANR	3948945	Identifier	g		3948488	0					
ANR	3948946	Identifier	layout		3948488	1					
ANR	3948947	PrimaryExpression	0		3948488	1					
ANR	3948948	AdditiveExpression	a -> x + xinc		3948488	1		+			
ANR	3948949	PtrMemberAccess	a -> x		3948488	0					
ANR	3948950	Identifier	a		3948488	0					
ANR	3948951	Identifier	x		3948488	1					
ANR	3948952	Identifier	xinc		3948488	1					
ANR	3948953	AdditiveExpression	a -> y + ( a -> h / 2 ) + nth		3948488	2		+			
ANR	3948954	PtrMemberAccess	a -> y		3948488	0					
ANR	3948955	Identifier	a		3948488	0					
ANR	3948956	Identifier	y		3948488	1					
ANR	3948957	AdditiveExpression	( a -> h / 2 ) + nth		3948488	1		+			
ANR	3948958	MultiplicativeExpression	a -> h / 2		3948488	0		/			
ANR	3948959	PtrMemberAccess	a -> h		3948488	0					
ANR	3948960	Identifier	a		3948488	0					
ANR	3948961	Identifier	h		3948488	1					
ANR	3948962	PrimaryExpression	2		3948488	1					
ANR	3948963	Identifier	nth		3948488	1					
ANR	3948964	IdentifierDeclStatement	int bx = g -> layout == 0 ? b -> x + xinc : b -> y + ( b -> h / 2 ) + nth ;	1825:4:46080:46143	3948488	4	True				
ANR	3948965	IdentifierDecl	bx = g -> layout == 0 ? b -> x + xinc : b -> y + ( b -> h / 2 ) + nth		3948488	0					
ANR	3948966	IdentifierDeclType	int		3948488	0					
ANR	3948967	Identifier	bx		3948488	1					
ANR	3948968	AssignmentExpression	bx = g -> layout == 0 ? b -> x + xinc : b -> y + ( b -> h / 2 ) + nth		3948488	2		=			
ANR	3948969	Identifier	bx		3948488	0					
ANR	3948970	ConditionalExpression	g -> layout == 0 ? b -> x + xinc : b -> y + ( b -> h / 2 ) + nth		3948488	1					
ANR	3948971	Condition	g -> layout == 0		3948488	0					
ANR	3948972	EqualityExpression	g -> layout == 0		3948488	0		==			
ANR	3948973	PtrMemberAccess	g -> layout		3948488	0					
ANR	3948974	Identifier	g		3948488	0					
ANR	3948975	Identifier	layout		3948488	1					
ANR	3948976	PrimaryExpression	0		3948488	1					
ANR	3948977	AdditiveExpression	b -> x + xinc		3948488	1		+			
ANR	3948978	PtrMemberAccess	b -> x		3948488	0					
ANR	3948979	Identifier	b		3948488	0					
ANR	3948980	Identifier	x		3948488	1					
ANR	3948981	Identifier	xinc		3948488	1					
ANR	3948982	AdditiveExpression	b -> y + ( b -> h / 2 ) + nth		3948488	2		+			
ANR	3948983	PtrMemberAccess	b -> y		3948488	0					
ANR	3948984	Identifier	b		3948488	0					
ANR	3948985	Identifier	y		3948488	1					
ANR	3948986	AdditiveExpression	( b -> h / 2 ) + nth		3948488	1		+			
ANR	3948987	MultiplicativeExpression	b -> h / 2		3948488	0		/			
ANR	3948988	PtrMemberAccess	b -> h		3948488	0					
ANR	3948989	Identifier	b		3948488	0					
ANR	3948990	Identifier	h		3948488	1					
ANR	3948991	PrimaryExpression	2		3948488	1					
ANR	3948992	Identifier	nth		3948488	1					
ANR	3948993	IfStatement	if ( g -> layout == 0 && nth == 0 && bx > ax )		3948488	5					
ANR	3948994	Condition	g -> layout == 0 && nth == 0 && bx > ax	1827:8:46154:46190	3948488	0	True				
ANR	3948995	AndExpression	g -> layout == 0 && nth == 0 && bx > ax		3948488	0		&&			
ANR	3948996	EqualityExpression	g -> layout == 0		3948488	0		==			
ANR	3948997	PtrMemberAccess	g -> layout		3948488	0					
ANR	3948998	Identifier	g		3948488	0					
ANR	3948999	Identifier	layout		3948488	1					
ANR	3949000	PrimaryExpression	0		3948488	1					
ANR	3949001	AndExpression	nth == 0 && bx > ax		3948488	1		&&			
ANR	3949002	EqualityExpression	nth == 0		3948488	0		==			
ANR	3949003	Identifier	nth		3948488	0					
ANR	3949004	PrimaryExpression	0		3948488	1					
ANR	3949005	RelationalExpression	bx > ax		3948488	1		>			
ANR	3949006	Identifier	bx		3948488	0					
ANR	3949007	Identifier	ax		3948488	1					
ANR	3949008	CompoundStatement		72:47:1548:1548	3948488	1					
ANR	3949009	ExpressionStatement	ax += 4	1828:5:46200:46207	3948488	0	True				
ANR	3949010	AssignmentExpression	ax += 4		3948488	0		+=			
ANR	3949011	Identifier	ax		3948488	0					
ANR	3949012	PrimaryExpression	4		3948488	1					
ANR	3949013	ExpressionStatement	min = arr [ b -> layer ] [ 0 ]	1831:4:46220:46242	3948488	6	True				
ANR	3949014	AssignmentExpression	min = arr [ b -> layer ] [ 0 ]		3948488	0		=			
ANR	3949015	Identifier	min		3948488	0					
ANR	3949016	ArrayIndexing	arr [ b -> layer ] [ 0 ]		3948488	1					
ANR	3949017	ArrayIndexing	arr [ b -> layer ]		3948488	0					
ANR	3949018	Identifier	arr		3948488	0					
ANR	3949019	PtrMemberAccess	b -> layer		3948488	1					
ANR	3949020	Identifier	b		3948488	0					
ANR	3949021	Identifier	layer		3948488	1					
ANR	3949022	PrimaryExpression	0		3948488	1					
ANR	3949023	ExpressionStatement	max = arr [ b -> layer ] [ 1 ]	1832:4:46248:46270	3948488	7	True				
ANR	3949024	AssignmentExpression	max = arr [ b -> layer ] [ 1 ]		3948488	0		=			
ANR	3949025	Identifier	max		3948488	0					
ANR	3949026	ArrayIndexing	arr [ b -> layer ] [ 1 ]		3948488	1					
ANR	3949027	ArrayIndexing	arr [ b -> layer ]		3948488	0					
ANR	3949028	Identifier	arr		3948488	0					
ANR	3949029	PtrMemberAccess	b -> layer		3948488	1					
ANR	3949030	Identifier	b		3948488	0					
ANR	3949031	Identifier	layer		3948488	1					
ANR	3949032	PrimaryExpression	1		3948488	1					
ANR	3949033	ForStatement	for ( k = b -> layer ; k <= a -> layer ; k ++ )		3948488	8					
ANR	3949034	ForInit	k = b -> layer ;	1833:9:46281:46293	3948488	0	True				
ANR	3949035	AssignmentExpression	k = b -> layer		3948488	0		=			
ANR	3949036	Identifier	k		3948488	0					
ANR	3949037	PtrMemberAccess	b -> layer		3948488	1					
ANR	3949038	Identifier	b		3948488	0					
ANR	3949039	Identifier	layer		3948488	1					
ANR	3949040	Condition	k <= a -> layer	1833:23:46295:46307	3948488	1	True				
ANR	3949041	RelationalExpression	k <= a -> layer		3948488	0		<=			
ANR	3949042	Identifier	k		3948488	0					
ANR	3949043	PtrMemberAccess	a -> layer		3948488	1					
ANR	3949044	Identifier	a		3948488	0					
ANR	3949045	Identifier	layer		3948488	1					
ANR	3949046	PostIncDecOperationExpression	k ++	1833:38:46310:46312	3948488	2	True				
ANR	3949047	Identifier	k		3948488	0					
ANR	3949048	IncDec	++		3948488	1					
ANR	3949049	CompoundStatement		78:43:1670:1670	3948488	3					
ANR	3949050	IfStatement	if ( min > arr [ k ] [ 0 ] )		3948488	0					
ANR	3949051	Condition	min > arr [ k ] [ 0 ]	1834:9:46326:46340	3948488	0	True				
ANR	3949052	RelationalExpression	min > arr [ k ] [ 0 ]		3948488	0		>			
ANR	3949053	Identifier	min		3948488	0					
ANR	3949054	ArrayIndexing	arr [ k ] [ 0 ]		3948488	1					
ANR	3949055	ArrayIndexing	arr [ k ]		3948488	0					
ANR	3949056	Identifier	arr		3948488	0					
ANR	3949057	Identifier	k		3948488	1					
ANR	3949058	PrimaryExpression	0		3948488	1					
ANR	3949059	CompoundStatement		79:26:1698:1698	3948488	1					
ANR	3949060	ExpressionStatement	min = arr [ k ] [ 0 ]	1835:6:46351:46366	3948488	0	True				
ANR	3949061	AssignmentExpression	min = arr [ k ] [ 0 ]		3948488	0		=			
ANR	3949062	Identifier	min		3948488	0					
ANR	3949063	ArrayIndexing	arr [ k ] [ 0 ]		3948488	1					
ANR	3949064	ArrayIndexing	arr [ k ]		3948488	0					
ANR	3949065	Identifier	arr		3948488	0					
ANR	3949066	Identifier	k		3948488	1					
ANR	3949067	PrimaryExpression	0		3948488	1					
ANR	3949068	IfStatement	if ( max < arr [ k ] [ 1 ] )		3948488	1					
ANR	3949069	Condition	max < arr [ k ] [ 1 ]	1838:9:46385:46399	3948488	0	True				
ANR	3949070	RelationalExpression	max < arr [ k ] [ 1 ]		3948488	0		<			
ANR	3949071	Identifier	max		3948488	0					
ANR	3949072	ArrayIndexing	arr [ k ] [ 1 ]		3948488	1					
ANR	3949073	ArrayIndexing	arr [ k ]		3948488	0					
ANR	3949074	Identifier	arr		3948488	0					
ANR	3949075	Identifier	k		3948488	1					
ANR	3949076	PrimaryExpression	1		3948488	1					
ANR	3949077	CompoundStatement		83:26:1757:1757	3948488	1					
ANR	3949078	ExpressionStatement	max = arr [ k ] [ 1 ]	1839:6:46410:46425	3948488	0	True				
ANR	3949079	AssignmentExpression	max = arr [ k ] [ 1 ]		3948488	0		=			
ANR	3949080	Identifier	max		3948488	0					
ANR	3949081	ArrayIndexing	arr [ k ] [ 1 ]		3948488	1					
ANR	3949082	ArrayIndexing	arr [ k ]		3948488	0					
ANR	3949083	Identifier	arr		3948488	0					
ANR	3949084	Identifier	k		3948488	1					
ANR	3949085	PrimaryExpression	1		3948488	1					
ANR	3949086	IdentifierDeclStatement	int l = ( ax - min ) + ( bx - min ) ;	1843:4:46445:46476	3948488	9	True				
ANR	3949087	IdentifierDecl	l = ( ax - min ) + ( bx - min )		3948488	0					
ANR	3949088	IdentifierDeclType	int		3948488	0					
ANR	3949089	Identifier	l		3948488	1					
ANR	3949090	AssignmentExpression	l = ( ax - min ) + ( bx - min )		3948488	2		=			
ANR	3949091	Identifier	l		3948488	0					
ANR	3949092	AdditiveExpression	( ax - min ) + ( bx - min )		3948488	1		+			
ANR	3949093	AdditiveExpression	ax - min		3948488	0		-			
ANR	3949094	Identifier	ax		3948488	0					
ANR	3949095	Identifier	min		3948488	1					
ANR	3949096	AdditiveExpression	bx - min		3948488	1		-			
ANR	3949097	Identifier	bx		3948488	0					
ANR	3949098	Identifier	min		3948488	1					
ANR	3949099	IdentifierDeclStatement	int r = ( max - ax ) + ( max - bx ) ;	1844:4:46482:46513	3948488	10	True				
ANR	3949100	IdentifierDecl	r = ( max - ax ) + ( max - bx )		3948488	0					
ANR	3949101	IdentifierDeclType	int		3948488	0					
ANR	3949102	Identifier	r		3948488	1					
ANR	3949103	AssignmentExpression	r = ( max - ax ) + ( max - bx )		3948488	2		=			
ANR	3949104	Identifier	r		3948488	0					
ANR	3949105	AdditiveExpression	( max - ax ) + ( max - bx )		3948488	1		+			
ANR	3949106	AdditiveExpression	max - ax		3948488	0		-			
ANR	3949107	Identifier	max		3948488	0					
ANR	3949108	Identifier	ax		3948488	1					
ANR	3949109	AdditiveExpression	max - bx		3948488	1		-			
ANR	3949110	Identifier	max		3948488	0					
ANR	3949111	Identifier	bx		3948488	1					
ANR	3949112	ForStatement	for ( k = b -> layer ; k <= a -> layer ; k ++ )		3948488	11					
ANR	3949113	ForInit	k = b -> layer ;	1846:9:46525:46537	3948488	0	True				
ANR	3949114	AssignmentExpression	k = b -> layer		3948488	0		=			
ANR	3949115	Identifier	k		3948488	0					
ANR	3949116	PtrMemberAccess	b -> layer		3948488	1					
ANR	3949117	Identifier	b		3948488	0					
ANR	3949118	Identifier	layer		3948488	1					
ANR	3949119	Condition	k <= a -> layer	1846:23:46539:46551	3948488	1	True				
ANR	3949120	RelationalExpression	k <= a -> layer		3948488	0		<=			
ANR	3949121	Identifier	k		3948488	0					
ANR	3949122	PtrMemberAccess	a -> layer		3948488	1					
ANR	3949123	Identifier	a		3948488	0					
ANR	3949124	Identifier	layer		3948488	1					
ANR	3949125	PostIncDecOperationExpression	k ++	1846:38:46554:46556	3948488	2	True				
ANR	3949126	Identifier	k		3948488	0					
ANR	3949127	IncDec	++		3948488	1					
ANR	3949128	CompoundStatement		91:43:1914:1914	3948488	3					
ANR	3949129	IfStatement	if ( r < l )		3948488	0					
ANR	3949130	Condition	r < l	1847:9:46570:46574	3948488	0	True				
ANR	3949131	RelationalExpression	r < l		3948488	0		<			
ANR	3949132	Identifier	r		3948488	0					
ANR	3949133	Identifier	l		3948488	1					
ANR	3949134	CompoundStatement		92:16:1932:1932	3948488	1					
ANR	3949135	ExpressionStatement	arr [ k ] [ 1 ] = max + 1	1848:6:46585:46604	3948488	0	True				
ANR	3949136	AssignmentExpression	arr [ k ] [ 1 ] = max + 1		3948488	0		=			
ANR	3949137	ArrayIndexing	arr [ k ] [ 1 ]		3948488	0					
ANR	3949138	ArrayIndexing	arr [ k ]		3948488	0					
ANR	3949139	Identifier	arr		3948488	0					
ANR	3949140	Identifier	k		3948488	1					
ANR	3949141	PrimaryExpression	1		3948488	1					
ANR	3949142	AdditiveExpression	max + 1		3948488	1		+			
ANR	3949143	Identifier	max		3948488	0					
ANR	3949144	PrimaryExpression	1		3948488	1					
ANR	3949145	ElseStatement	else		3948488	0					
ANR	3949146	CompoundStatement		94:12:1973:1973	3948488	0					
ANR	3949147	ExpressionStatement	arr [ k ] [ 0 ] = min - 1	1850:6:46626:46645	3948488	0	True				
ANR	3949148	AssignmentExpression	arr [ k ] [ 0 ] = min - 1		3948488	0		=			
ANR	3949149	ArrayIndexing	arr [ k ] [ 0 ]		3948488	0					
ANR	3949150	ArrayIndexing	arr [ k ]		3948488	0					
ANR	3949151	Identifier	arr		3948488	0					
ANR	3949152	Identifier	k		3948488	1					
ANR	3949153	PrimaryExpression	0		3948488	1					
ANR	3949154	AdditiveExpression	min - 1		3948488	1		-			
ANR	3949155	Identifier	min		3948488	0					
ANR	3949156	PrimaryExpression	1		3948488	1					
ANR	3949157	IdentifierDeclStatement	AEdge * e = R_NEW0 ( AEdge ) ;	1854:4:46665:46690	3948488	12	True				
ANR	3949158	IdentifierDecl	* e = R_NEW0 ( AEdge )		3948488	0					
ANR	3949159	IdentifierDeclType	AEdge *		3948488	0					
ANR	3949160	Identifier	e		3948488	1					
ANR	3949161	AssignmentExpression	* e = R_NEW0 ( AEdge )		3948488	2		=			
ANR	3949162	Identifier	e		3948488	0					
ANR	3949163	CallExpression	R_NEW0 ( AEdge )		3948488	1					
ANR	3949164	Callee	R_NEW0		3948488	0					
ANR	3949165	Identifier	R_NEW0		3948488	0					
ANR	3949166	ArgumentList	AEdge		3948488	1					
ANR	3949167	Argument	AEdge		3948488	0					
ANR	3949168	Identifier	AEdge		3948488	0					
ANR	3949169	IfStatement	if ( ! e )		3948488	13					
ANR	3949170	Condition	! e	1855:8:46700:46701	3948488	0	True				
ANR	3949171	UnaryOperationExpression	! e		3948488	0					
ANR	3949172	UnaryOperator	!		3948488	0					
ANR	3949173	Identifier	e		3948488	1					
ANR	3949174	CompoundStatement		100:12:2059:2059	3948488	1					
ANR	3949175	ExpressionStatement	free ( arr )	1856:5:46711:46721	3948488	0	True				
ANR	3949176	CallExpression	free ( arr )		3948488	0					
ANR	3949177	Callee	free		3948488	0					
ANR	3949178	Identifier	free		3948488	0					
ANR	3949179	ArgumentList	arr		3948488	1					
ANR	3949180	Argument	arr		3948488	0					
ANR	3949181	Identifier	arr		3948488	0					
ANR	3949182	ReturnStatement	return ;	1857:5:46728:46734	3948488	1	True				
ANR	3949183	ExpressionStatement	e -> is_reversed = true	1860:4:46747:46768	3948488	14	True				
ANR	3949184	AssignmentExpression	e -> is_reversed = true		3948488	0		=			
ANR	3949185	PtrMemberAccess	e -> is_reversed		3948488	0					
ANR	3949186	Identifier	e		3948488	0					
ANR	3949187	Identifier	is_reversed		3948488	1					
ANR	3949188	Identifier	true		3948488	1					
ANR	3949189	ExpressionStatement	e -> from = a	1861:4:46774:46785	3948488	15	True				
ANR	3949190	AssignmentExpression	e -> from = a		3948488	0		=			
ANR	3949191	PtrMemberAccess	e -> from		3948488	0					
ANR	3949192	Identifier	e		3948488	0					
ANR	3949193	Identifier	from		3948488	1					
ANR	3949194	Identifier	a		3948488	1					
ANR	3949195	ExpressionStatement	e -> to = b	1862:4:46791:46800	3948488	16	True				
ANR	3949196	AssignmentExpression	e -> to = b		3948488	0		=			
ANR	3949197	PtrMemberAccess	e -> to		3948488	0					
ANR	3949198	Identifier	e		3948488	0					
ANR	3949199	Identifier	to		3948488	1					
ANR	3949200	Identifier	b		3948488	1					
ANR	3949201	ExpressionStatement	e -> x = r_list_new ( )	1863:4:46806:46826	3948488	17	True				
ANR	3949202	AssignmentExpression	e -> x = r_list_new ( )		3948488	0		=			
ANR	3949203	PtrMemberAccess	e -> x		3948488	0					
ANR	3949204	Identifier	e		3948488	0					
ANR	3949205	Identifier	x		3948488	1					
ANR	3949206	CallExpression	r_list_new ( )		3948488	1					
ANR	3949207	Callee	r_list_new		3948488	0					
ANR	3949208	Identifier	r_list_new		3948488	0					
ANR	3949209	ArgumentList			3948488	1					
ANR	3949210	ExpressionStatement	e -> y = r_list_new ( )	1864:4:46832:46852	3948488	18	True				
ANR	3949211	AssignmentExpression	e -> y = r_list_new ( )		3948488	0		=			
ANR	3949212	PtrMemberAccess	e -> y		3948488	0					
ANR	3949213	Identifier	e		3948488	0					
ANR	3949214	Identifier	y		3948488	1					
ANR	3949215	CallExpression	r_list_new ( )		3948488	1					
ANR	3949216	Callee	r_list_new		3948488	0					
ANR	3949217	Identifier	r_list_new		3948488	0					
ANR	3949218	ArgumentList			3948488	1					
ANR	3949219	IfStatement	if ( r < l )		3948488	19					
ANR	3949220	Condition	r < l	1866:8:46863:46867	3948488	0	True				
ANR	3949221	RelationalExpression	r < l		3948488	0		<			
ANR	3949222	Identifier	r		3948488	0					
ANR	3949223	Identifier	l		3948488	1					
ANR	3949224	CompoundStatement		111:15:2225:2225	3948488	1					
ANR	3949225	ExpressionStatement	"r_list_append ( ( g -> layout == 0 ? e -> x : e -> y ) , ( void * ) ( size_t ) ( max + 1 ) )"	1867:5:46877:46952	3948488	0	True				
ANR	3949226	CallExpression	"r_list_append ( ( g -> layout == 0 ? e -> x : e -> y ) , ( void * ) ( size_t ) ( max + 1 ) )"		3948488	0					
ANR	3949227	Callee	r_list_append		3948488	0					
ANR	3949228	Identifier	r_list_append		3948488	0					
ANR	3949229	ArgumentList	g -> layout == 0 ? e -> x : e -> y		3948488	1					
ANR	3949230	Argument	g -> layout == 0 ? e -> x : e -> y		3948488	0					
ANR	3949231	ConditionalExpression	g -> layout == 0 ? e -> x : e -> y		3948488	0					
ANR	3949232	Condition	g -> layout == 0		3948488	0					
ANR	3949233	EqualityExpression	g -> layout == 0		3948488	0		==			
ANR	3949234	PtrMemberAccess	g -> layout		3948488	0					
ANR	3949235	Identifier	g		3948488	0					
ANR	3949236	Identifier	layout		3948488	1					
ANR	3949237	PrimaryExpression	0		3948488	1					
ANR	3949238	PtrMemberAccess	e -> x		3948488	1					
ANR	3949239	Identifier	e		3948488	0					
ANR	3949240	Identifier	x		3948488	1					
ANR	3949241	PtrMemberAccess	e -> y		3948488	2					
ANR	3949242	Identifier	e		3948488	0					
ANR	3949243	Identifier	y		3948488	1					
ANR	3949244	Argument	( void * ) ( size_t ) ( max + 1 )		3948488	1					
ANR	3949245	CastExpression	( void * ) ( size_t ) ( max + 1 )		3948488	0					
ANR	3949246	CastTarget	void *		3948488	0					
ANR	3949247	CastExpression	( size_t ) ( max + 1 )		3948488	1					
ANR	3949248	CastTarget	size_t		3948488	0					
ANR	3949249	AdditiveExpression	max + 1		3948488	1		+			
ANR	3949250	Identifier	max		3948488	0					
ANR	3949251	PrimaryExpression	1		3948488	1					
ANR	3949252	ElseStatement	else		3948488	0					
ANR	3949253	CompoundStatement		113:11:2320:2320	3948488	0					
ANR	3949254	ExpressionStatement	"r_list_append ( ( g -> layout == 0 ? e -> x : e -> y ) , ( void * ) ( size_t ) ( min - 1 ) )"	1869:5:46972:47047	3948488	0	True				
ANR	3949255	CallExpression	"r_list_append ( ( g -> layout == 0 ? e -> x : e -> y ) , ( void * ) ( size_t ) ( min - 1 ) )"		3948488	0					
ANR	3949256	Callee	r_list_append		3948488	0					
ANR	3949257	Identifier	r_list_append		3948488	0					
ANR	3949258	ArgumentList	g -> layout == 0 ? e -> x : e -> y		3948488	1					
ANR	3949259	Argument	g -> layout == 0 ? e -> x : e -> y		3948488	0					
ANR	3949260	ConditionalExpression	g -> layout == 0 ? e -> x : e -> y		3948488	0					
ANR	3949261	Condition	g -> layout == 0		3948488	0					
ANR	3949262	EqualityExpression	g -> layout == 0		3948488	0		==			
ANR	3949263	PtrMemberAccess	g -> layout		3948488	0					
ANR	3949264	Identifier	g		3948488	0					
ANR	3949265	Identifier	layout		3948488	1					
ANR	3949266	PrimaryExpression	0		3948488	1					
ANR	3949267	PtrMemberAccess	e -> x		3948488	1					
ANR	3949268	Identifier	e		3948488	0					
ANR	3949269	Identifier	x		3948488	1					
ANR	3949270	PtrMemberAccess	e -> y		3948488	2					
ANR	3949271	Identifier	e		3948488	0					
ANR	3949272	Identifier	y		3948488	1					
ANR	3949273	Argument	( void * ) ( size_t ) ( min - 1 )		3948488	1					
ANR	3949274	CastExpression	( void * ) ( size_t ) ( min - 1 )		3948488	0					
ANR	3949275	CastTarget	void *		3948488	0					
ANR	3949276	CastExpression	( size_t ) ( min - 1 )		3948488	1					
ANR	3949277	CastTarget	size_t		3948488	0					
ANR	3949278	AdditiveExpression	min - 1		3948488	1		-			
ANR	3949279	Identifier	min		3948488	0					
ANR	3949280	PrimaryExpression	1		3948488	1					
ANR	3949281	ExpressionStatement	"r_list_append ( g -> edges , e )"	1872:4:47060:47086	3948488	20	True				
ANR	3949282	CallExpression	"r_list_append ( g -> edges , e )"		3948488	0					
ANR	3949283	Callee	r_list_append		3948488	0					
ANR	3949284	Identifier	r_list_append		3948488	0					
ANR	3949285	ArgumentList	g -> edges		3948488	1					
ANR	3949286	Argument	g -> edges		3948488	0					
ANR	3949287	PtrMemberAccess	g -> edges		3948488	0					
ANR	3949288	Identifier	g		3948488	0					
ANR	3949289	Identifier	edges		3948488	1					
ANR	3949290	Argument	e		3948488	1					
ANR	3949291	Identifier	e		3948488	0					
ANR	3949292	IfStatement	if ( inedge )		3948488	22					
ANR	3949293	Condition	inedge	1878:5:47226:47231	3948488	0	True				
ANR	3949294	Identifier	inedge		3948488	0					
ANR	3949295	CompoundStatement		125:2:2646:2671	3948488	1					
ANR	3949296	IdentifierDeclStatement	RANode * n = ( RANode * ) g -> layers [ 0 ] . nodes [ 0 ] -> data ;	1879:2:47238:47287	3948488	0	True				
ANR	3949297	IdentifierDecl	* n = ( RANode * ) g -> layers [ 0 ] . nodes [ 0 ] -> data		3948488	0					
ANR	3949298	IdentifierDeclType	RANode *		3948488	0					
ANR	3949299	Identifier	n		3948488	1					
ANR	3949300	AssignmentExpression	* n = ( RANode * ) g -> layers [ 0 ] . nodes [ 0 ] -> data		3948488	2		=			
ANR	3949301	Identifier	n		3948488	0					
ANR	3949302	CastExpression	( RANode * ) g -> layers [ 0 ] . nodes [ 0 ] -> data		3948488	1					
ANR	3949303	CastTarget	RANode *		3948488	0					
ANR	3949304	PtrMemberAccess	g -> layers [ 0 ] . nodes [ 0 ] -> data		3948488	1					
ANR	3949305	ArrayIndexing	g -> layers [ 0 ] . nodes [ 0 ]		3948488	0					
ANR	3949306	MemberAccess	g -> layers [ 0 ] . nodes		3948488	0					
ANR	3949307	ArrayIndexing	g -> layers [ 0 ]		3948488	0					
ANR	3949308	PtrMemberAccess	g -> layers		3948488	0					
ANR	3949309	Identifier	g		3948488	0					
ANR	3949310	Identifier	layers		3948488	1					
ANR	3949311	PrimaryExpression	0		3948488	1					
ANR	3949312	Identifier	nodes		3948488	1					
ANR	3949313	PrimaryExpression	0		3948488	1					
ANR	3949314	Identifier	data		3948488	1					
ANR	3949315	IdentifierDeclStatement	AEdge * e = R_NEW0 ( AEdge ) ;	1880:2:47291:47316	3948488	1	True				
ANR	3949316	IdentifierDecl	* e = R_NEW0 ( AEdge )		3948488	0					
ANR	3949317	IdentifierDeclType	AEdge *		3948488	0					
ANR	3949318	Identifier	e		3948488	1					
ANR	3949319	AssignmentExpression	* e = R_NEW0 ( AEdge )		3948488	2		=			
ANR	3949320	Identifier	e		3948488	0					
ANR	3949321	CallExpression	R_NEW0 ( AEdge )		3948488	1					
ANR	3949322	Callee	R_NEW0		3948488	0					
ANR	3949323	Identifier	R_NEW0		3948488	0					
ANR	3949324	ArgumentList	AEdge		3948488	1					
ANR	3949325	Argument	AEdge		3948488	0					
ANR	3949326	Identifier	AEdge		3948488	0					
ANR	3949327	IfStatement	if ( ! e )		3948488	2					
ANR	3949328	Condition	! e	1881:6:47324:47325	3948488	0	True				
ANR	3949329	UnaryOperationExpression	! e		3948488	0					
ANR	3949330	UnaryOperator	!		3948488	0					
ANR	3949331	Identifier	e		3948488	1					
ANR	3949332	CompoundStatement		126:10:2683:2683	3948488	1					
ANR	3949333	ExpressionStatement	free ( arr )	1882:3:47333:47343	3948488	0	True				
ANR	3949334	CallExpression	free ( arr )		3948488	0					
ANR	3949335	Callee	free		3948488	0					
ANR	3949336	Identifier	free		3948488	0					
ANR	3949337	ArgumentList	arr		3948488	1					
ANR	3949338	Argument	arr		3948488	0					
ANR	3949339	Identifier	arr		3948488	0					
ANR	3949340	ReturnStatement	return ;	1883:3:47348:47354	3948488	1	True				
ANR	3949341	ExpressionStatement	e -> is_reversed = true	1885:2:47362:47383	3948488	3	True				
ANR	3949342	AssignmentExpression	e -> is_reversed = true		3948488	0		=			
ANR	3949343	PtrMemberAccess	e -> is_reversed		3948488	0					
ANR	3949344	Identifier	e		3948488	0					
ANR	3949345	Identifier	is_reversed		3948488	1					
ANR	3949346	Identifier	true		3948488	1					
ANR	3949347	ExpressionStatement	e -> from = NULL	1886:2:47387:47401	3948488	4	True				
ANR	3949348	AssignmentExpression	e -> from = NULL		3948488	0		=			
ANR	3949349	PtrMemberAccess	e -> from		3948488	0					
ANR	3949350	Identifier	e		3948488	0					
ANR	3949351	Identifier	from		3948488	1					
ANR	3949352	Identifier	NULL		3948488	1					
ANR	3949353	ExpressionStatement	e -> to = NULL	1887:2:47405:47417	3948488	5	True				
ANR	3949354	AssignmentExpression	e -> to = NULL		3948488	0		=			
ANR	3949355	PtrMemberAccess	e -> to		3948488	0					
ANR	3949356	Identifier	e		3948488	0					
ANR	3949357	Identifier	to		3948488	1					
ANR	3949358	Identifier	NULL		3948488	1					
ANR	3949359	ExpressionStatement	e -> x = r_list_new ( )	1888:2:47421:47441	3948488	6	True				
ANR	3949360	AssignmentExpression	e -> x = r_list_new ( )		3948488	0		=			
ANR	3949361	PtrMemberAccess	e -> x		3948488	0					
ANR	3949362	Identifier	e		3948488	0					
ANR	3949363	Identifier	x		3948488	1					
ANR	3949364	CallExpression	r_list_new ( )		3948488	1					
ANR	3949365	Callee	r_list_new		3948488	0					
ANR	3949366	Identifier	r_list_new		3948488	0					
ANR	3949367	ArgumentList			3948488	1					
ANR	3949368	ExpressionStatement	e -> y = r_list_new ( )	1889:2:47445:47465	3948488	7	True				
ANR	3949369	AssignmentExpression	e -> y = r_list_new ( )		3948488	0		=			
ANR	3949370	PtrMemberAccess	e -> y		3948488	0					
ANR	3949371	Identifier	e		3948488	0					
ANR	3949372	Identifier	y		3948488	1					
ANR	3949373	CallExpression	r_list_new ( )		3948488	1					
ANR	3949374	Callee	r_list_new		3948488	0					
ANR	3949375	Identifier	r_list_new		3948488	0					
ANR	3949376	ArgumentList			3948488	1					
ANR	3949377	IfStatement	if ( g -> layout == 0 )		3948488	8					
ANR	3949378	Condition	g -> layout == 0	1890:6:47473:47486	3948488	0	True				
ANR	3949379	EqualityExpression	g -> layout == 0		3948488	0		==			
ANR	3949380	PtrMemberAccess	g -> layout		3948488	0					
ANR	3949381	Identifier	g		3948488	0					
ANR	3949382	Identifier	layout		3948488	1					
ANR	3949383	PrimaryExpression	0		3948488	1					
ANR	3949384	CompoundStatement		135:22:2844:2844	3948488	1					
ANR	3949385	ExpressionStatement	"r_list_append ( e -> y , ( void * ) ( size_t ) ( n -> y - 1 - inedge ) )"	1891:3:47494:47553	3948488	0	True				
ANR	3949386	CallExpression	"r_list_append ( e -> y , ( void * ) ( size_t ) ( n -> y - 1 - inedge ) )"		3948488	0					
ANR	3949387	Callee	r_list_append		3948488	0					
ANR	3949388	Identifier	r_list_append		3948488	0					
ANR	3949389	ArgumentList	e -> y		3948488	1					
ANR	3949390	Argument	e -> y		3948488	0					
ANR	3949391	PtrMemberAccess	e -> y		3948488	0					
ANR	3949392	Identifier	e		3948488	0					
ANR	3949393	Identifier	y		3948488	1					
ANR	3949394	Argument	( void * ) ( size_t ) ( n -> y - 1 - inedge )		3948488	1					
ANR	3949395	CastExpression	( void * ) ( size_t ) ( n -> y - 1 - inedge )		3948488	0					
ANR	3949396	CastTarget	void *		3948488	0					
ANR	3949397	CastExpression	( size_t ) ( n -> y - 1 - inedge )		3948488	1					
ANR	3949398	CastTarget	size_t		3948488	0					
ANR	3949399	AdditiveExpression	n -> y - 1 - inedge		3948488	1		-			
ANR	3949400	PtrMemberAccess	n -> y		3948488	0					
ANR	3949401	Identifier	n		3948488	0					
ANR	3949402	Identifier	y		3948488	1					
ANR	3949403	AdditiveExpression	1 - inedge		3948488	1		-			
ANR	3949404	PrimaryExpression	1		3948488	0					
ANR	3949405	Identifier	inedge		3948488	1					
ANR	3949406	ElseStatement	else		3948488	0					
ANR	3949407	CompoundStatement		137:9:2919:2919	3948488	0					
ANR	3949408	ExpressionStatement	"r_list_append ( e -> x , ( void * ) ( size_t ) ( n -> x - 1 - inedge ) )"	1893:3:47569:47628	3948488	0	True				
ANR	3949409	CallExpression	"r_list_append ( e -> x , ( void * ) ( size_t ) ( n -> x - 1 - inedge ) )"		3948488	0					
ANR	3949410	Callee	r_list_append		3948488	0					
ANR	3949411	Identifier	r_list_append		3948488	0					
ANR	3949412	ArgumentList	e -> x		3948488	1					
ANR	3949413	Argument	e -> x		3948488	0					
ANR	3949414	PtrMemberAccess	e -> x		3948488	0					
ANR	3949415	Identifier	e		3948488	0					
ANR	3949416	Identifier	x		3948488	1					
ANR	3949417	Argument	( void * ) ( size_t ) ( n -> x - 1 - inedge )		3948488	1					
ANR	3949418	CastExpression	( void * ) ( size_t ) ( n -> x - 1 - inedge )		3948488	0					
ANR	3949419	CastTarget	void *		3948488	0					
ANR	3949420	CastExpression	( size_t ) ( n -> x - 1 - inedge )		3948488	1					
ANR	3949421	CastTarget	size_t		3948488	0					
ANR	3949422	AdditiveExpression	n -> x - 1 - inedge		3948488	1		-			
ANR	3949423	PtrMemberAccess	n -> x		3948488	0					
ANR	3949424	Identifier	n		3948488	0					
ANR	3949425	Identifier	x		3948488	1					
ANR	3949426	AdditiveExpression	1 - inedge		3948488	1		-			
ANR	3949427	PrimaryExpression	1		3948488	0					
ANR	3949428	Identifier	inedge		3948488	1					
ANR	3949429	ExpressionStatement	"r_list_append ( g -> edges , e )"	1895:2:47636:47663	3948488	9	True				
ANR	3949430	CallExpression	"r_list_append ( g -> edges , e )"		3948488	0					
ANR	3949431	Callee	r_list_append		3948488	0					
ANR	3949432	Identifier	r_list_append		3948488	0					
ANR	3949433	ArgumentList	g -> edges		3948488	1					
ANR	3949434	Argument	g -> edges		3948488	0					
ANR	3949435	PtrMemberAccess	g -> edges		3948488	0					
ANR	3949436	Identifier	g		3948488	0					
ANR	3949437	Identifier	edges		3948488	1					
ANR	3949438	Argument	e		3948488	1					
ANR	3949439	Identifier	e		3948488	0					
ANR	3949440	IfStatement	if ( outedge )		3948488	23					
ANR	3949441	Condition	outedge	1898:5:47674:47680	3948488	0	True				
ANR	3949442	Identifier	outedge		3948488	0					
ANR	3949443	CompoundStatement		145:2:3109:3134	3948488	1					
ANR	3949444	IdentifierDeclStatement	RANode * n = ( RANode * ) g -> layers [ g -> n_layers - 1 ] . nodes [ 0 ] -> data ;	1899:2:47687:47750	3948488	0	True				
ANR	3949445	IdentifierDecl	* n = ( RANode * ) g -> layers [ g -> n_layers - 1 ] . nodes [ 0 ] -> data		3948488	0					
ANR	3949446	IdentifierDeclType	RANode *		3948488	0					
ANR	3949447	Identifier	n		3948488	1					
ANR	3949448	AssignmentExpression	* n = ( RANode * ) g -> layers [ g -> n_layers - 1 ] . nodes [ 0 ] -> data		3948488	2		=			
ANR	3949449	Identifier	n		3948488	0					
ANR	3949450	CastExpression	( RANode * ) g -> layers [ g -> n_layers - 1 ] . nodes [ 0 ] -> data		3948488	1					
ANR	3949451	CastTarget	RANode *		3948488	0					
ANR	3949452	PtrMemberAccess	g -> layers [ g -> n_layers - 1 ] . nodes [ 0 ] -> data		3948488	1					
ANR	3949453	ArrayIndexing	g -> layers [ g -> n_layers - 1 ] . nodes [ 0 ]		3948488	0					
ANR	3949454	MemberAccess	g -> layers [ g -> n_layers - 1 ] . nodes		3948488	0					
ANR	3949455	ArrayIndexing	g -> layers [ g -> n_layers - 1 ]		3948488	0					
ANR	3949456	PtrMemberAccess	g -> layers		3948488	0					
ANR	3949457	Identifier	g		3948488	0					
ANR	3949458	Identifier	layers		3948488	1					
ANR	3949459	AdditiveExpression	g -> n_layers - 1		3948488	1		-			
ANR	3949460	PtrMemberAccess	g -> n_layers		3948488	0					
ANR	3949461	Identifier	g		3948488	0					
ANR	3949462	Identifier	n_layers		3948488	1					
ANR	3949463	PrimaryExpression	1		3948488	1					
ANR	3949464	Identifier	nodes		3948488	1					
ANR	3949465	PrimaryExpression	0		3948488	1					
ANR	3949466	Identifier	data		3948488	1					
ANR	3949467	IdentifierDeclStatement	AEdge * e = R_NEW0 ( AEdge ) ;	1900:2:47754:47779	3948488	1	True				
ANR	3949468	IdentifierDecl	* e = R_NEW0 ( AEdge )		3948488	0					
ANR	3949469	IdentifierDeclType	AEdge *		3948488	0					
ANR	3949470	Identifier	e		3948488	1					
ANR	3949471	AssignmentExpression	* e = R_NEW0 ( AEdge )		3948488	2		=			
ANR	3949472	Identifier	e		3948488	0					
ANR	3949473	CallExpression	R_NEW0 ( AEdge )		3948488	1					
ANR	3949474	Callee	R_NEW0		3948488	0					
ANR	3949475	Identifier	R_NEW0		3948488	0					
ANR	3949476	ArgumentList	AEdge		3948488	1					
ANR	3949477	Argument	AEdge		3948488	0					
ANR	3949478	Identifier	AEdge		3948488	0					
ANR	3949479	IfStatement	if ( ! e )		3948488	2					
ANR	3949480	Condition	! e	1901:6:47787:47788	3948488	0	True				
ANR	3949481	UnaryOperationExpression	! e		3948488	0					
ANR	3949482	UnaryOperator	!		3948488	0					
ANR	3949483	Identifier	e		3948488	1					
ANR	3949484	CompoundStatement		146:10:3146:3146	3948488	1					
ANR	3949485	ExpressionStatement	free ( arr )	1902:3:47796:47806	3948488	0	True				
ANR	3949486	CallExpression	free ( arr )		3948488	0					
ANR	3949487	Callee	free		3948488	0					
ANR	3949488	Identifier	free		3948488	0					
ANR	3949489	ArgumentList	arr		3948488	1					
ANR	3949490	Argument	arr		3948488	0					
ANR	3949491	Identifier	arr		3948488	0					
ANR	3949492	ReturnStatement	return ;	1903:3:47811:47817	3948488	1	True				
ANR	3949493	ExpressionStatement	e -> is_reversed = true	1906:2:47826:47847	3948488	3	True				
ANR	3949494	AssignmentExpression	e -> is_reversed = true		3948488	0		=			
ANR	3949495	PtrMemberAccess	e -> is_reversed		3948488	0					
ANR	3949496	Identifier	e		3948488	0					
ANR	3949497	Identifier	is_reversed		3948488	1					
ANR	3949498	Identifier	true		3948488	1					
ANR	3949499	ExpressionStatement	e -> from = NULL	1907:2:47851:47865	3948488	4	True				
ANR	3949500	AssignmentExpression	e -> from = NULL		3948488	0		=			
ANR	3949501	PtrMemberAccess	e -> from		3948488	0					
ANR	3949502	Identifier	e		3948488	0					
ANR	3949503	Identifier	from		3948488	1					
ANR	3949504	Identifier	NULL		3948488	1					
ANR	3949505	ExpressionStatement	e -> to = NULL	1908:2:47869:47881	3948488	5	True				
ANR	3949506	AssignmentExpression	e -> to = NULL		3948488	0		=			
ANR	3949507	PtrMemberAccess	e -> to		3948488	0					
ANR	3949508	Identifier	e		3948488	0					
ANR	3949509	Identifier	to		3948488	1					
ANR	3949510	Identifier	NULL		3948488	1					
ANR	3949511	ExpressionStatement	e -> x = r_list_new ( )	1909:2:47885:47905	3948488	6	True				
ANR	3949512	AssignmentExpression	e -> x = r_list_new ( )		3948488	0		=			
ANR	3949513	PtrMemberAccess	e -> x		3948488	0					
ANR	3949514	Identifier	e		3948488	0					
ANR	3949515	Identifier	x		3948488	1					
ANR	3949516	CallExpression	r_list_new ( )		3948488	1					
ANR	3949517	Callee	r_list_new		3948488	0					
ANR	3949518	Identifier	r_list_new		3948488	0					
ANR	3949519	ArgumentList			3948488	1					
ANR	3949520	ExpressionStatement	e -> y = r_list_new ( )	1910:2:47909:47929	3948488	7	True				
ANR	3949521	AssignmentExpression	e -> y = r_list_new ( )		3948488	0		=			
ANR	3949522	PtrMemberAccess	e -> y		3948488	0					
ANR	3949523	Identifier	e		3948488	0					
ANR	3949524	Identifier	y		3948488	1					
ANR	3949525	CallExpression	r_list_new ( )		3948488	1					
ANR	3949526	Callee	r_list_new		3948488	0					
ANR	3949527	Identifier	r_list_new		3948488	0					
ANR	3949528	ArgumentList			3948488	1					
ANR	3949529	IfStatement	if ( g -> layout == 0 )		3948488	8					
ANR	3949530	Condition	g -> layout == 0	1911:6:47937:47950	3948488	0	True				
ANR	3949531	EqualityExpression	g -> layout == 0		3948488	0		==			
ANR	3949532	PtrMemberAccess	g -> layout		3948488	0					
ANR	3949533	Identifier	g		3948488	0					
ANR	3949534	Identifier	layout		3948488	1					
ANR	3949535	PrimaryExpression	0		3948488	1					
ANR	3949536	CompoundStatement		156:22:3308:3308	3948488	1					
ANR	3949537	ExpressionStatement	"r_list_append ( e -> y , ( void * ) ( size_t ) ( n -> y + g -> layers [ g -> n_layers - 1 ] . height + 2 + outedge ) )"	1912:3:47958:48054	3948488	0	True				
ANR	3949538	CallExpression	"r_list_append ( e -> y , ( void * ) ( size_t ) ( n -> y + g -> layers [ g -> n_layers - 1 ] . height + 2 + outedge ) )"		3948488	0					
ANR	3949539	Callee	r_list_append		3948488	0					
ANR	3949540	Identifier	r_list_append		3948488	0					
ANR	3949541	ArgumentList	e -> y		3948488	1					
ANR	3949542	Argument	e -> y		3948488	0					
ANR	3949543	PtrMemberAccess	e -> y		3948488	0					
ANR	3949544	Identifier	e		3948488	0					
ANR	3949545	Identifier	y		3948488	1					
ANR	3949546	Argument	( void * ) ( size_t ) ( n -> y + g -> layers [ g -> n_layers - 1 ] . height + 2 + outedge )		3948488	1					
ANR	3949547	CastExpression	( void * ) ( size_t ) ( n -> y + g -> layers [ g -> n_layers - 1 ] . height + 2 + outedge )		3948488	0					
ANR	3949548	CastTarget	void *		3948488	0					
ANR	3949549	CastExpression	( size_t ) ( n -> y + g -> layers [ g -> n_layers - 1 ] . height + 2 + outedge )		3948488	1					
ANR	3949550	CastTarget	size_t		3948488	0					
ANR	3949551	AdditiveExpression	n -> y + g -> layers [ g -> n_layers - 1 ] . height + 2 + outedge		3948488	1		+			
ANR	3949552	PtrMemberAccess	n -> y		3948488	0					
ANR	3949553	Identifier	n		3948488	0					
ANR	3949554	Identifier	y		3948488	1					
ANR	3949555	AdditiveExpression	g -> layers [ g -> n_layers - 1 ] . height + 2 + outedge		3948488	1		+			
ANR	3949556	MemberAccess	g -> layers [ g -> n_layers - 1 ] . height		3948488	0					
ANR	3949557	ArrayIndexing	g -> layers [ g -> n_layers - 1 ]		3948488	0					
ANR	3949558	PtrMemberAccess	g -> layers		3948488	0					
ANR	3949559	Identifier	g		3948488	0					
ANR	3949560	Identifier	layers		3948488	1					
ANR	3949561	AdditiveExpression	g -> n_layers - 1		3948488	1		-			
ANR	3949562	PtrMemberAccess	g -> n_layers		3948488	0					
ANR	3949563	Identifier	g		3948488	0					
ANR	3949564	Identifier	n_layers		3948488	1					
ANR	3949565	PrimaryExpression	1		3948488	1					
ANR	3949566	Identifier	height		3948488	1					
ANR	3949567	AdditiveExpression	2 + outedge		3948488	1		+			
ANR	3949568	PrimaryExpression	2		3948488	0					
ANR	3949569	Identifier	outedge		3948488	1					
ANR	3949570	ElseStatement	else		3948488	0					
ANR	3949571	CompoundStatement		158:9:3420:3420	3948488	0					
ANR	3949572	ExpressionStatement	"r_list_append ( e -> x , ( void * ) ( size_t ) ( n -> x + g -> layers [ g -> n_layers - 1 ] . width + 2 + outedge ) )"	1914:3:48070:48165	3948488	0	True				
ANR	3949573	CallExpression	"r_list_append ( e -> x , ( void * ) ( size_t ) ( n -> x + g -> layers [ g -> n_layers - 1 ] . width + 2 + outedge ) )"		3948488	0					
ANR	3949574	Callee	r_list_append		3948488	0					
ANR	3949575	Identifier	r_list_append		3948488	0					
ANR	3949576	ArgumentList	e -> x		3948488	1					
ANR	3949577	Argument	e -> x		3948488	0					
ANR	3949578	PtrMemberAccess	e -> x		3948488	0					
ANR	3949579	Identifier	e		3948488	0					
ANR	3949580	Identifier	x		3948488	1					
ANR	3949581	Argument	( void * ) ( size_t ) ( n -> x + g -> layers [ g -> n_layers - 1 ] . width + 2 + outedge )		3948488	1					
ANR	3949582	CastExpression	( void * ) ( size_t ) ( n -> x + g -> layers [ g -> n_layers - 1 ] . width + 2 + outedge )		3948488	0					
ANR	3949583	CastTarget	void *		3948488	0					
ANR	3949584	CastExpression	( size_t ) ( n -> x + g -> layers [ g -> n_layers - 1 ] . width + 2 + outedge )		3948488	1					
ANR	3949585	CastTarget	size_t		3948488	0					
ANR	3949586	AdditiveExpression	n -> x + g -> layers [ g -> n_layers - 1 ] . width + 2 + outedge		3948488	1		+			
ANR	3949587	PtrMemberAccess	n -> x		3948488	0					
ANR	3949588	Identifier	n		3948488	0					
ANR	3949589	Identifier	x		3948488	1					
ANR	3949590	AdditiveExpression	g -> layers [ g -> n_layers - 1 ] . width + 2 + outedge		3948488	1		+			
ANR	3949591	MemberAccess	g -> layers [ g -> n_layers - 1 ] . width		3948488	0					
ANR	3949592	ArrayIndexing	g -> layers [ g -> n_layers - 1 ]		3948488	0					
ANR	3949593	PtrMemberAccess	g -> layers		3948488	0					
ANR	3949594	Identifier	g		3948488	0					
ANR	3949595	Identifier	layers		3948488	1					
ANR	3949596	AdditiveExpression	g -> n_layers - 1		3948488	1		-			
ANR	3949597	PtrMemberAccess	g -> n_layers		3948488	0					
ANR	3949598	Identifier	g		3948488	0					
ANR	3949599	Identifier	n_layers		3948488	1					
ANR	3949600	PrimaryExpression	1		3948488	1					
ANR	3949601	Identifier	width		3948488	1					
ANR	3949602	AdditiveExpression	2 + outedge		3948488	1		+			
ANR	3949603	PrimaryExpression	2		3948488	0					
ANR	3949604	Identifier	outedge		3948488	1					
ANR	3949605	ExpressionStatement	"r_list_append ( g -> edges , e )"	1916:2:48173:48200	3948488	9	True				
ANR	3949606	CallExpression	"r_list_append ( g -> edges , e )"		3948488	0					
ANR	3949607	Callee	r_list_append		3948488	0					
ANR	3949608	Identifier	r_list_append		3948488	0					
ANR	3949609	ArgumentList	g -> edges		3948488	1					
ANR	3949610	Argument	g -> edges		3948488	0					
ANR	3949611	PtrMemberAccess	g -> edges		3948488	0					
ANR	3949612	Identifier	g		3948488	0					
ANR	3949613	Identifier	edges		3948488	1					
ANR	3949614	Argument	e		3948488	1					
ANR	3949615	Identifier	e		3948488	0					
ANR	3949616	Label	err :	1918:1:48206:48209	3948488	24	True				
ANR	3949617	Identifier	err		3948488	0					
ANR	3949618	ForStatement	for ( i = i - 1 ; i >= 0 ; i -- )		3948488	25					
ANR	3949619	ForInit	i = i - 1 ;	1919:6:48217:48226	3948488	0	True				
ANR	3949620	AssignmentExpression	i = i - 1		3948488	0		=			
ANR	3949621	Identifier	i		3948488	0					
ANR	3949622	AdditiveExpression	i - 1		3948488	1		-			
ANR	3949623	Identifier	i		3948488	0					
ANR	3949624	PrimaryExpression	1		3948488	1					
ANR	3949625	Condition	i >= 0	1919:17:48228:48233	3948488	1	True				
ANR	3949626	RelationalExpression	i >= 0		3948488	0		>=			
ANR	3949627	Identifier	i		3948488	0					
ANR	3949628	PrimaryExpression	0		3948488	1					
ANR	3949629	PostIncDecOperationExpression	i --	1919:25:48236:48238	3948488	2	True				
ANR	3949630	Identifier	i		3948488	0					
ANR	3949631	IncDec	--		3948488	1					
ANR	3949632	CompoundStatement		164:30:3596:3596	3948488	3					
ANR	3949633	ExpressionStatement	free ( arr [ i ] )	1920:2:48245:48258	3948488	0	True				
ANR	3949634	CallExpression	free ( arr [ i ] )		3948488	0					
ANR	3949635	Callee	free		3948488	0					
ANR	3949636	Identifier	free		3948488	0					
ANR	3949637	ArgumentList	arr [ i ]		3948488	1					
ANR	3949638	Argument	arr [ i ]		3948488	0					
ANR	3949639	ArrayIndexing	arr [ i ]		3948488	0					
ANR	3949640	Identifier	arr		3948488	0					
ANR	3949641	Identifier	i		3948488	1					
ANR	3949642	ExpressionStatement	free ( arr )	1922:1:48264:48274	3948488	26	True				
ANR	3949643	CallExpression	free ( arr )		3948488	0					
ANR	3949644	Callee	free		3948488	0					
ANR	3949645	Identifier	free		3948488	0					
ANR	3949646	ArgumentList	arr		3948488	1					
ANR	3949647	Argument	arr		3948488	0					
ANR	3949648	Identifier	arr		3948488	0					
ANR	3949649	ReturnStatement	return ;	1923:1:48277:48283	3948488	27	True				
ANR	3949650	ReturnType	static void		3948488	1					
ANR	3949651	Identifier	backedge_info		3948488	2					
ANR	3949652	ParameterList	RAGraph * g		3948488	3					
ANR	3949653	Parameter	RAGraph * g	1756:27:44632:44641	3948488	0	True				
ANR	3949654	ParameterType	RAGraph *		3948488	0					
ANR	3949655	Identifier	g		3948488	1					
ANR	3949656	CFGEntryNode	ENTRY		3948488		True				
ANR	3949657	CFGExitNode	EXIT		3948488		True				
ANR	3949658	Symbol	outedge		3948488						
ANR	3949659	Symbol	inedge		3948488						
ANR	3949660	Symbol	g -> n_layers		3948488						
ANR	3949661	Symbol	g -> edges		3948488						
ANR	3949662	Symbol	g -> layers [ 0 ] . nodes [ 0 ] -> data		3948488						
ANR	3949663	Symbol	* * * g -> n_layers		3948488						
ANR	3949664	Symbol	* g -> n_layers		3948488						
ANR	3949665	Symbol	AEdge		3948488						
ANR	3949666	Symbol	t -> h		3948488						
ANR	3949667	Symbol	* * b -> layer		3948488						
ANR	3949668	Symbol	R_NEW0		3948488						
ANR	3949669	Symbol	e -> is_reversed		3948488						
ANR	3949670	Symbol	g -> layers [ g -> n_layers - 1 ] . width		3948488						
ANR	3949671	Symbol	* arr		3948488						
ANR	3949672	Symbol	* * arr		3948488						
ANR	3949673	Symbol	ax		3948488						
ANR	3949674	Symbol	* g -> layers		3948488						
ANR	3949675	Symbol	* * * g		3948488						
ANR	3949676	Symbol	t -> y		3948488						
ANR	3949677	Symbol	t -> w		3948488						
ANR	3949678	Symbol	t -> x		3948488						
ANR	3949679	Symbol	* * * b		3948488						
ANR	3949680	Symbol	r_graph_get_neighbours		3948488						
ANR	3949681	Symbol	a -> h		3948488						
ANR	3949682	Symbol	* * g -> n_layers		3948488						
ANR	3949683	Symbol	min		3948488						
ANR	3949684	Symbol	g -> graph		3948488						
ANR	3949685	Symbol	bx		3948488						
ANR	3949686	Symbol	count_edges		3948488						
ANR	3949687	Symbol	* * * g -> layers		3948488						
ANR	3949688	Symbol	xinc		3948488						
ANR	3949689	Symbol	arr		3948488						
ANR	3949690	Symbol	a		3948488						
ANR	3949691	Symbol	b		3948488						
ANR	3949692	Symbol	nth		3948488						
ANR	3949693	Symbol	* * g -> layers [ 0 ] . nodes		3948488						
ANR	3949694	Symbol	g -> layout		3948488						
ANR	3949695	Symbol	max		3948488						
ANR	3949696	Symbol	e		3948488						
ANR	3949697	Symbol	g		3948488						
ANR	3949698	Symbol	i		3948488						
ANR	3949699	Symbol	j		3948488						
ANR	3949700	Symbol	neighbours		3948488						
ANR	3949701	Symbol	k		3948488						
ANR	3949702	Symbol	l		3948488						
ANR	3949703	Symbol	gt -> data		3948488						
ANR	3949704	Symbol	n		3948488						
ANR	3949705	Symbol	tc		3948488						
ANR	3949706	Symbol	a -> layer		3948488						
ANR	3949707	Symbol	r		3948488						
ANR	3949708	Symbol	t		3948488						
ANR	3949709	Symbol	a -> x		3948488						
ANR	3949710	Symbol	a -> y		3948488						
ANR	3949711	Symbol	tl		3948488						
ANR	3949712	Symbol	g -> layers [ i ] . n_nodes		3948488						
ANR	3949713	Symbol	g -> layers		3948488						
ANR	3949714	Symbol	* * g -> layers		3948488						
ANR	3949715	Symbol	r_list_length		3948488						
ANR	3949716	Symbol	* * g -> layers [ g -> n_layers - 1 ] . nodes		3948488						
ANR	3949717	Symbol	* * * * g		3948488						
ANR	3949718	Symbol	e -> y		3948488						
ANR	3949719	Symbol	e -> x		3948488						
ANR	3949720	Symbol	* g -> layers [ i ] . nodes		3948488						
ANR	3949721	Symbol	b -> layer		3948488						
ANR	3949722	Symbol	g -> layers [ g -> n_layers - 1 ] . nodes [ 0 ] -> data		3948488						
ANR	3949723	Symbol	* * k		3948488						
ANR	3949724	Symbol	* g -> layers [ g -> n_layers - 1 ] . nodes		3948488						
ANR	3949725	Symbol	* * i		3948488						
ANR	3949726	Symbol	a -> is_dummy		3948488						
ANR	3949727	Symbol	itm		3948488						
ANR	3949728	Symbol	e -> from		3948488						
ANR	3949729	Symbol	NULL		3948488						
ANR	3949730	Symbol	* * g		3948488						
ANR	3949731	Symbol	b -> h		3948488						
ANR	3949732	Symbol	* * b		3948488						
ANR	3949733	Symbol	a -> gnode		3948488						
ANR	3949734	Symbol	* b -> layer		3948488						
ANR	3949735	Symbol	* gt		3948488						
ANR	3949736	Symbol	n -> y		3948488						
ANR	3949737	Symbol	n -> x		3948488						
ANR	3949738	Symbol	g -> layers [ g -> n_layers - 1 ] . height		3948488						
ANR	3949739	Symbol	true		3948488						
ANR	3949740	Symbol	* g -> layers [ 0 ] . nodes		3948488						
ANR	3949741	Symbol	g -> layers [ 0 ] . nodes		3948488						
ANR	3949742	Symbol	e -> to		3948488						
ANR	3949743	Symbol	g -> layers [ g -> n_layers - 1 ] . nodes		3948488						
ANR	3949744	Symbol	r_graph_innodes		3948488						
ANR	3949745	Symbol	g -> layers [ i ] . nodes		3948488						
ANR	3949746	Symbol	b -> x		3948488						
ANR	3949747	Symbol	R_NEWS0		3948488						
ANR	3949748	Symbol	gb		3948488						
ANR	3949749	Symbol	b -> y		3948488						
ANR	3949750	Symbol	R_EDGES_X_INC		3948488						
ANR	3949751	Symbol	get_anode		3948488						
ANR	3949752	Symbol	* a		3948488						
ANR	3949753	Symbol	* b		3948488						
ANR	3949754	Symbol	gt		3948488						
ANR	3949755	Symbol	int		3948488						
ANR	3949756	Symbol	* e		3948488						
ANR	3949757	Symbol	* g		3948488						
ANR	3949758	Symbol	* i		3948488						
ANR	3949759	Symbol	* j		3948488						
ANR	3949760	Symbol	* k		3948488						
ANR	3949761	Symbol	* n		3948488						
ANR	3949762	Symbol	* t		3948488						
ANR	3949763	Symbol	r_list_new		3948488						
ANR	3949764	Function	set_layout	1932:0:48595:52127							
ANR	3949765	FunctionDef	set_layout (RAGraph * g)		3949764	0					
ANR	3949766	CompoundStatement		1932:35:48630:52127	3949764	0					
ANR	3949767	IdentifierDeclStatement	"int i , j , k ;"	1933:1:48633:48644	3949764	0	True				
ANR	3949768	IdentifierDecl	i		3949764	0					
ANR	3949769	IdentifierDeclType	int		3949764	0					
ANR	3949770	Identifier	i		3949764	1					
ANR	3949771	IdentifierDecl	j		3949764	1					
ANR	3949772	IdentifierDeclType	int		3949764	0					
ANR	3949773	Identifier	j		3949764	1					
ANR	3949774	IdentifierDecl	k		3949764	2					
ANR	3949775	IdentifierDeclType	int		3949764	0					
ANR	3949776	Identifier	k		3949764	1					
ANR	3949777	ExpressionStatement	r_list_free ( g -> edges )	1935:1:48648:48670	3949764	1	True				
ANR	3949778	CallExpression	r_list_free ( g -> edges )		3949764	0					
ANR	3949779	Callee	r_list_free		3949764	0					
ANR	3949780	Identifier	r_list_free		3949764	0					
ANR	3949781	ArgumentList	g -> edges		3949764	1					
ANR	3949782	Argument	g -> edges		3949764	0					
ANR	3949783	PtrMemberAccess	g -> edges		3949764	0					
ANR	3949784	Identifier	g		3949764	0					
ANR	3949785	Identifier	edges		3949764	1					
ANR	3949786	ExpressionStatement	g -> edges = r_list_new ( )	1936:1:48673:48697	3949764	2	True				
ANR	3949787	AssignmentExpression	g -> edges = r_list_new ( )		3949764	0		=			
ANR	3949788	PtrMemberAccess	g -> edges		3949764	0					
ANR	3949789	Identifier	g		3949764	0					
ANR	3949790	Identifier	edges		3949764	1					
ANR	3949791	CallExpression	r_list_new ( )		3949764	1					
ANR	3949792	Callee	r_list_new		3949764	0					
ANR	3949793	Identifier	r_list_new		3949764	0					
ANR	3949794	ArgumentList			3949764	1					
ANR	3949795	ExpressionStatement	remove_cycles ( g )	1938:1:48701:48718	3949764	3	True				
ANR	3949796	CallExpression	remove_cycles ( g )		3949764	0					
ANR	3949797	Callee	remove_cycles		3949764	0					
ANR	3949798	Identifier	remove_cycles		3949764	0					
ANR	3949799	ArgumentList	g		3949764	1					
ANR	3949800	Argument	g		3949764	0					
ANR	3949801	Identifier	g		3949764	0					
ANR	3949802	ExpressionStatement	assign_layers ( g )	1939:1:48721:48738	3949764	4	True				
ANR	3949803	CallExpression	assign_layers ( g )		3949764	0					
ANR	3949804	Callee	assign_layers		3949764	0					
ANR	3949805	Identifier	assign_layers		3949764	0					
ANR	3949806	ArgumentList	g		3949764	1					
ANR	3949807	Argument	g		3949764	0					
ANR	3949808	Identifier	g		3949764	0					
ANR	3949809	ExpressionStatement	create_dummy_nodes ( g )	1940:1:48741:48763	3949764	5	True				
ANR	3949810	CallExpression	create_dummy_nodes ( g )		3949764	0					
ANR	3949811	Callee	create_dummy_nodes		3949764	0					
ANR	3949812	Identifier	create_dummy_nodes		3949764	0					
ANR	3949813	ArgumentList	g		3949764	1					
ANR	3949814	Argument	g		3949764	0					
ANR	3949815	Identifier	g		3949764	0					
ANR	3949816	ExpressionStatement	create_layers ( g )	1941:1:48766:48783	3949764	6	True				
ANR	3949817	CallExpression	create_layers ( g )		3949764	0					
ANR	3949818	Callee	create_layers		3949764	0					
ANR	3949819	Identifier	create_layers		3949764	0					
ANR	3949820	ArgumentList	g		3949764	1					
ANR	3949821	Argument	g		3949764	0					
ANR	3949822	Identifier	g		3949764	0					
ANR	3949823	ExpressionStatement	minimize_crossings ( g )	1942:1:48786:48808	3949764	7	True				
ANR	3949824	CallExpression	minimize_crossings ( g )		3949764	0					
ANR	3949825	Callee	minimize_crossings		3949764	0					
ANR	3949826	Identifier	minimize_crossings		3949764	0					
ANR	3949827	ArgumentList	g		3949764	1					
ANR	3949828	Argument	g		3949764	0					
ANR	3949829	Identifier	g		3949764	0					
ANR	3949830	IfStatement	if ( r_cons_is_breaked ( ) )		3949764	8					
ANR	3949831	Condition	r_cons_is_breaked ( )	1944:5:48816:48835	3949764	0	True				
ANR	3949832	CallExpression	r_cons_is_breaked ( )		3949764	0					
ANR	3949833	Callee	r_cons_is_breaked		3949764	0					
ANR	3949834	Identifier	r_cons_is_breaked		3949764	0					
ANR	3949835	ArgumentList			3949764	1					
ANR	3949836	CompoundStatement		13:27:207:207	3949764	1					
ANR	3949837	ExpressionStatement	r_cons_break_end ( )	1945:2:48842:48861	3949764	0	True				
ANR	3949838	CallExpression	r_cons_break_end ( )		3949764	0					
ANR	3949839	Callee	r_cons_break_end		3949764	0					
ANR	3949840	Identifier	r_cons_break_end		3949764	0					
ANR	3949841	ArgumentList			3949764	1					
ANR	3949842	ReturnStatement	return ;	1946:2:48865:48871	3949764	1	True				
ANR	3949843	ForStatement	for ( i = 0 ; i < g -> n_layers ; i ++ )		3949764	9					
ANR	3949844	ForInit	i = 0 ;	1949:6:48909:48914	3949764	0	True				
ANR	3949845	AssignmentExpression	i = 0		3949764	0		=			
ANR	3949846	Identifier	i		3949764	0					
ANR	3949847	PrimaryExpression	0		3949764	1					
ANR	3949848	Condition	i < g -> n_layers	1949:13:48916:48930	3949764	1	True				
ANR	3949849	RelationalExpression	i < g -> n_layers		3949764	0		<			
ANR	3949850	Identifier	i		3949764	0					
ANR	3949851	PtrMemberAccess	g -> n_layers		3949764	1					
ANR	3949852	Identifier	g		3949764	0					
ANR	3949853	Identifier	n_layers		3949764	1					
ANR	3949854	PostIncDecOperationExpression	i ++	1949:30:48933:48935	3949764	2	True				
ANR	3949855	Identifier	i		3949764	0					
ANR	3949856	IncDec	++		3949764	1					
ANR	3949857	CompoundStatement		20:2:325:335	3949764	3					
ANR	3949858	IdentifierDeclStatement	int rh = 0 ;	1950:2:48942:48952	3949764	0	True				
ANR	3949859	IdentifierDecl	rh = 0		3949764	0					
ANR	3949860	IdentifierDeclType	int		3949764	0					
ANR	3949861	Identifier	rh		3949764	1					
ANR	3949862	AssignmentExpression	rh = 0		3949764	2		=			
ANR	3949863	Identifier	rh		3949764	0					
ANR	3949864	PrimaryExpression	0		3949764	1					
ANR	3949865	IdentifierDeclStatement	int rw = 0 ;	1951:2:48956:48966	3949764	1	True				
ANR	3949866	IdentifierDecl	rw = 0		3949764	0					
ANR	3949867	IdentifierDeclType	int		3949764	0					
ANR	3949868	Identifier	rw		3949764	1					
ANR	3949869	AssignmentExpression	rw = 0		3949764	2		=			
ANR	3949870	Identifier	rw		3949764	0					
ANR	3949871	PrimaryExpression	0		3949764	1					
ANR	3949872	ForStatement	for ( j = 0 ; j < g -> layers [ i ] . n_nodes ; ++ j )		3949764	2					
ANR	3949873	ForInit	j = 0 ;	1952:7:48975:48980	3949764	0	True				
ANR	3949874	AssignmentExpression	j = 0		3949764	0		=			
ANR	3949875	Identifier	j		3949764	0					
ANR	3949876	PrimaryExpression	0		3949764	1					
ANR	3949877	Condition	j < g -> layers [ i ] . n_nodes	1952:14:48982:49005	3949764	1	True				
ANR	3949878	RelationalExpression	j < g -> layers [ i ] . n_nodes		3949764	0		<			
ANR	3949879	Identifier	j		3949764	0					
ANR	3949880	MemberAccess	g -> layers [ i ] . n_nodes		3949764	1					
ANR	3949881	ArrayIndexing	g -> layers [ i ]		3949764	0					
ANR	3949882	PtrMemberAccess	g -> layers		3949764	0					
ANR	3949883	Identifier	g		3949764	0					
ANR	3949884	Identifier	layers		3949764	1					
ANR	3949885	Identifier	i		3949764	1					
ANR	3949886	Identifier	n_nodes		3949764	1					
ANR	3949887	UnaryExpression	++ j	1952:40:49008:49010	3949764	2	True				
ANR	3949888	IncDec	++		3949764	0					
ANR	3949889	Identifier	j		3949764	1					
ANR	3949890	CompoundStatement		22:3:387:438	3949764	3					
ANR	3949891	IdentifierDeclStatement	const RANode * n = get_anode ( g -> layers [ i ] . nodes [ j ] ) ;	1953:3:49018:49069	3949764	0	True				
ANR	3949892	IdentifierDecl	* n = get_anode ( g -> layers [ i ] . nodes [ j ] )		3949764	0					
ANR	3949893	IdentifierDeclType	const RANode *		3949764	0					
ANR	3949894	Identifier	n		3949764	1					
ANR	3949895	AssignmentExpression	* n = get_anode ( g -> layers [ i ] . nodes [ j ] )		3949764	2		=			
ANR	3949896	Identifier	n		3949764	0					
ANR	3949897	CallExpression	get_anode ( g -> layers [ i ] . nodes [ j ] )		3949764	1					
ANR	3949898	Callee	get_anode		3949764	0					
ANR	3949899	Identifier	get_anode		3949764	0					
ANR	3949900	ArgumentList	g -> layers [ i ] . nodes [ j ]		3949764	1					
ANR	3949901	Argument	g -> layers [ i ] . nodes [ j ]		3949764	0					
ANR	3949902	ArrayIndexing	g -> layers [ i ] . nodes [ j ]		3949764	0					
ANR	3949903	MemberAccess	g -> layers [ i ] . nodes		3949764	0					
ANR	3949904	ArrayIndexing	g -> layers [ i ]		3949764	0					
ANR	3949905	PtrMemberAccess	g -> layers		3949764	0					
ANR	3949906	Identifier	g		3949764	0					
ANR	3949907	Identifier	layers		3949764	1					
ANR	3949908	Identifier	i		3949764	1					
ANR	3949909	Identifier	nodes		3949764	1					
ANR	3949910	Identifier	j		3949764	1					
ANR	3949911	IfStatement	if ( n -> h > rh )		3949764	1					
ANR	3949912	Condition	n -> h > rh	1954:7:49078:49086	3949764	0	True				
ANR	3949913	RelationalExpression	n -> h > rh		3949764	0		>			
ANR	3949914	PtrMemberAccess	n -> h		3949764	0					
ANR	3949915	Identifier	n		3949764	0					
ANR	3949916	Identifier	h		3949764	1					
ANR	3949917	Identifier	rh		3949764	1					
ANR	3949918	CompoundStatement		23:18:458:458	3949764	1					
ANR	3949919	ExpressionStatement	rh = n -> h	1955:4:49095:49104	3949764	0	True				
ANR	3949920	AssignmentExpression	rh = n -> h		3949764	0		=			
ANR	3949921	Identifier	rh		3949764	0					
ANR	3949922	PtrMemberAccess	n -> h		3949764	1					
ANR	3949923	Identifier	n		3949764	0					
ANR	3949924	Identifier	h		3949764	1					
ANR	3949925	IfStatement	if ( n -> w > rw )		3949764	2					
ANR	3949926	Condition	n -> w > rw	1957:7:49118:49126	3949764	0	True				
ANR	3949927	RelationalExpression	n -> w > rw		3949764	0		>			
ANR	3949928	PtrMemberAccess	n -> w		3949764	0					
ANR	3949929	Identifier	n		3949764	0					
ANR	3949930	Identifier	w		3949764	1					
ANR	3949931	Identifier	rw		3949764	1					
ANR	3949932	CompoundStatement		26:18:498:498	3949764	1					
ANR	3949933	ExpressionStatement	rw = n -> w	1958:4:49135:49144	3949764	0	True				
ANR	3949934	AssignmentExpression	rw = n -> w		3949764	0		=			
ANR	3949935	Identifier	rw		3949764	0					
ANR	3949936	PtrMemberAccess	n -> w		3949764	1					
ANR	3949937	Identifier	n		3949764	0					
ANR	3949938	Identifier	w		3949764	1					
ANR	3949939	ExpressionStatement	g -> layers [ i ] . height = rh	1961:2:49157:49181	3949764	3	True				
ANR	3949940	AssignmentExpression	g -> layers [ i ] . height = rh		3949764	0		=			
ANR	3949941	MemberAccess	g -> layers [ i ] . height		3949764	0					
ANR	3949942	ArrayIndexing	g -> layers [ i ]		3949764	0					
ANR	3949943	PtrMemberAccess	g -> layers		3949764	0					
ANR	3949944	Identifier	g		3949764	0					
ANR	3949945	Identifier	layers		3949764	1					
ANR	3949946	Identifier	i		3949764	1					
ANR	3949947	Identifier	height		3949764	1					
ANR	3949948	Identifier	rh		3949764	1					
ANR	3949949	ExpressionStatement	g -> layers [ i ] . width = rw	1962:2:49185:49208	3949764	4	True				
ANR	3949950	AssignmentExpression	g -> layers [ i ] . width = rw		3949764	0		=			
ANR	3949951	MemberAccess	g -> layers [ i ] . width		3949764	0					
ANR	3949952	ArrayIndexing	g -> layers [ i ]		3949764	0					
ANR	3949953	PtrMemberAccess	g -> layers		3949764	0					
ANR	3949954	Identifier	g		3949764	0					
ANR	3949955	Identifier	layers		3949764	1					
ANR	3949956	Identifier	i		3949764	1					
ANR	3949957	Identifier	width		3949764	1					
ANR	3949958	Identifier	rw		3949764	1					
ANR	3949959	ForStatement	for ( i = 0 ; i < g -> n_layers ; i ++ )		3949764	10					
ANR	3949960	ForInit	i = 0 ;	1965:6:49220:49225	3949764	0	True				
ANR	3949961	AssignmentExpression	i = 0		3949764	0		=			
ANR	3949962	Identifier	i		3949764	0					
ANR	3949963	PrimaryExpression	0		3949764	1					
ANR	3949964	Condition	i < g -> n_layers	1965:13:49227:49241	3949764	1	True				
ANR	3949965	RelationalExpression	i < g -> n_layers		3949764	0		<			
ANR	3949966	Identifier	i		3949764	0					
ANR	3949967	PtrMemberAccess	g -> n_layers		3949764	1					
ANR	3949968	Identifier	g		3949764	0					
ANR	3949969	Identifier	n_layers		3949764	1					
ANR	3949970	PostIncDecOperationExpression	i ++	1965:30:49244:49246	3949764	2	True				
ANR	3949971	Identifier	i		3949764	0					
ANR	3949972	IncDec	++		3949764	1					
ANR	3949973	CompoundStatement		34:35:618:618	3949764	3					
ANR	3949974	ForStatement	for ( j = 0 ; j < g -> layers [ i ] . n_nodes ; ++ j )		3949764	0					
ANR	3949975	ForInit	j = 0 ;	1966:7:49258:49263	3949764	0	True				
ANR	3949976	AssignmentExpression	j = 0		3949764	0		=			
ANR	3949977	Identifier	j		3949764	0					
ANR	3949978	PrimaryExpression	0		3949764	1					
ANR	3949979	Condition	j < g -> layers [ i ] . n_nodes	1966:14:49265:49288	3949764	1	True				
ANR	3949980	RelationalExpression	j < g -> layers [ i ] . n_nodes		3949764	0		<			
ANR	3949981	Identifier	j		3949764	0					
ANR	3949982	MemberAccess	g -> layers [ i ] . n_nodes		3949764	1					
ANR	3949983	ArrayIndexing	g -> layers [ i ]		3949764	0					
ANR	3949984	PtrMemberAccess	g -> layers		3949764	0					
ANR	3949985	Identifier	g		3949764	0					
ANR	3949986	Identifier	layers		3949764	1					
ANR	3949987	Identifier	i		3949764	1					
ANR	3949988	Identifier	n_nodes		3949764	1					
ANR	3949989	UnaryExpression	++ j	1966:40:49291:49293	3949764	2	True				
ANR	3949990	IncDec	++		3949764	0					
ANR	3949991	Identifier	j		3949764	1					
ANR	3949992	CompoundStatement		36:3:670:720	3949764	3					
ANR	3949993	IdentifierDeclStatement	RANode * a = ( RANode * ) g -> layers [ i ] . nodes [ j ] -> data ;	1967:3:49301:49351	3949764	0	True				
ANR	3949994	IdentifierDecl	* a = ( RANode * ) g -> layers [ i ] . nodes [ j ] -> data		3949764	0					
ANR	3949995	IdentifierDeclType	RANode *		3949764	0					
ANR	3949996	Identifier	a		3949764	1					
ANR	3949997	AssignmentExpression	* a = ( RANode * ) g -> layers [ i ] . nodes [ j ] -> data		3949764	2		=			
ANR	3949998	Identifier	a		3949764	0					
ANR	3949999	CastExpression	( RANode * ) g -> layers [ i ] . nodes [ j ] -> data		3949764	1					
ANR	3950000	CastTarget	RANode *		3949764	0					
ANR	3950001	PtrMemberAccess	g -> layers [ i ] . nodes [ j ] -> data		3949764	1					
ANR	3950002	ArrayIndexing	g -> layers [ i ] . nodes [ j ]		3949764	0					
ANR	3950003	MemberAccess	g -> layers [ i ] . nodes		3949764	0					
ANR	3950004	ArrayIndexing	g -> layers [ i ]		3949764	0					
ANR	3950005	PtrMemberAccess	g -> layers		3949764	0					
ANR	3950006	Identifier	g		3949764	0					
ANR	3950007	Identifier	layers		3949764	1					
ANR	3950008	Identifier	i		3949764	1					
ANR	3950009	Identifier	nodes		3949764	1					
ANR	3950010	Identifier	j		3949764	1					
ANR	3950011	Identifier	data		3949764	1					
ANR	3950012	IfStatement	if ( a -> is_dummy )		3949764	1					
ANR	3950013	Condition	a -> is_dummy	1968:7:49360:49370	3949764	0	True				
ANR	3950014	PtrMemberAccess	a -> is_dummy		3949764	0					
ANR	3950015	Identifier	a		3949764	0					
ANR	3950016	Identifier	is_dummy		3949764	1					
ANR	3950017	CompoundStatement		37:20:742:742	3949764	1					
ANR	3950018	IfStatement	if ( g -> layout == 0 )		3949764	0					
ANR	3950019	Condition	g -> layout == 0	1969:8:49383:49396	3949764	0	True				
ANR	3950020	EqualityExpression	g -> layout == 0		3949764	0		==			
ANR	3950021	PtrMemberAccess	g -> layout		3949764	0					
ANR	3950022	Identifier	g		3949764	0					
ANR	3950023	Identifier	layout		3949764	1					
ANR	3950024	PrimaryExpression	0		3949764	1					
ANR	3950025	CompoundStatement		38:24:768:768	3949764	1					
ANR	3950026	ExpressionStatement	a -> h = g -> layers [ i ] . height	1970:5:49406:49432	3949764	0	True				
ANR	3950027	AssignmentExpression	a -> h = g -> layers [ i ] . height		3949764	0		=			
ANR	3950028	PtrMemberAccess	a -> h		3949764	0					
ANR	3950029	Identifier	a		3949764	0					
ANR	3950030	Identifier	h		3949764	1					
ANR	3950031	MemberAccess	g -> layers [ i ] . height		3949764	1					
ANR	3950032	ArrayIndexing	g -> layers [ i ]		3949764	0					
ANR	3950033	PtrMemberAccess	g -> layers		3949764	0					
ANR	3950034	Identifier	g		3949764	0					
ANR	3950035	Identifier	layers		3949764	1					
ANR	3950036	Identifier	i		3949764	1					
ANR	3950037	Identifier	height		3949764	1					
ANR	3950038	ElseStatement	else		3949764	0					
ANR	3950039	CompoundStatement		40:11:814:814	3949764	0					
ANR	3950040	ExpressionStatement	a -> w = g -> layers [ i ] . width	1972:5:49452:49477	3949764	0	True				
ANR	3950041	AssignmentExpression	a -> w = g -> layers [ i ] . width		3949764	0		=			
ANR	3950042	PtrMemberAccess	a -> w		3949764	0					
ANR	3950043	Identifier	a		3949764	0					
ANR	3950044	Identifier	w		3949764	1					
ANR	3950045	MemberAccess	g -> layers [ i ] . width		3949764	1					
ANR	3950046	ArrayIndexing	g -> layers [ i ]		3949764	0					
ANR	3950047	PtrMemberAccess	g -> layers		3949764	0					
ANR	3950048	Identifier	g		3949764	0					
ANR	3950049	Identifier	layers		3949764	1					
ANR	3950050	Identifier	i		3949764	1					
ANR	3950051	Identifier	width		3949764	1					
ANR	3950052	ExpressionStatement	a -> layer_height = g -> layers [ i ] . height	1975:3:49493:49530	3949764	2	True				
ANR	3950053	AssignmentExpression	a -> layer_height = g -> layers [ i ] . height		3949764	0		=			
ANR	3950054	PtrMemberAccess	a -> layer_height		3949764	0					
ANR	3950055	Identifier	a		3949764	0					
ANR	3950056	Identifier	layer_height		3949764	1					
ANR	3950057	MemberAccess	g -> layers [ i ] . height		3949764	1					
ANR	3950058	ArrayIndexing	g -> layers [ i ]		3949764	0					
ANR	3950059	PtrMemberAccess	g -> layers		3949764	0					
ANR	3950060	Identifier	g		3949764	0					
ANR	3950061	Identifier	layers		3949764	1					
ANR	3950062	Identifier	i		3949764	1					
ANR	3950063	Identifier	height		3949764	1					
ANR	3950064	ExpressionStatement	a -> layer_width = g -> layers [ i ] . width	1976:3:49535:49570	3949764	3	True				
ANR	3950065	AssignmentExpression	a -> layer_width = g -> layers [ i ] . width		3949764	0		=			
ANR	3950066	PtrMemberAccess	a -> layer_width		3949764	0					
ANR	3950067	Identifier	a		3949764	0					
ANR	3950068	Identifier	layer_width		3949764	1					
ANR	3950069	MemberAccess	g -> layers [ i ] . width		3949764	1					
ANR	3950070	ArrayIndexing	g -> layers [ i ]		3949764	0					
ANR	3950071	PtrMemberAccess	g -> layers		3949764	0					
ANR	3950072	Identifier	g		3949764	0					
ANR	3950073	Identifier	layers		3949764	1					
ANR	3950074	Identifier	i		3949764	1					
ANR	3950075	Identifier	width		3949764	1					
ANR	3950076	ExpressionStatement	place_dummies ( g )	1983:1:49722:49739	3949764	11	True				
ANR	3950077	CallExpression	place_dummies ( g )		3949764	0					
ANR	3950078	Callee	place_dummies		3949764	0					
ANR	3950079	Identifier	place_dummies		3949764	0					
ANR	3950080	ArgumentList	g		3949764	1					
ANR	3950081	Argument	g		3949764	0					
ANR	3950082	Identifier	g		3949764	0					
ANR	3950083	ExpressionStatement	place_original ( g )	1984:1:49742:49760	3949764	12	True				
ANR	3950084	CallExpression	place_original ( g )		3949764	0					
ANR	3950085	Callee	place_original		3949764	0					
ANR	3950086	Identifier	place_original		3949764	0					
ANR	3950087	ArgumentList	g		3949764	1					
ANR	3950088	Argument	g		3949764	0					
ANR	3950089	Identifier	g		3949764	0					
ANR	3950090	IdentifierDeclStatement	const RListIter * it ;	1989:1:49977:49996	3949764	13	True				
ANR	3950091	IdentifierDecl	* it		3949764	0					
ANR	3950092	IdentifierDeclType	const RListIter *		3949764	0					
ANR	3950093	Identifier	it		3949764	1					
ANR	3950094	IdentifierDeclStatement	const RGraphEdge * e ;	1990:1:49999:50018	3949764	14	True				
ANR	3950095	IdentifierDecl	* e		3949764	0					
ANR	3950096	IdentifierDeclType	const RGraphEdge *		3949764	0					
ANR	3950097	Identifier	e		3949764	1					
ANR	3950098	Statement	r_list_foreach	1991:1:50021:50034	3949764	15	True				
ANR	3950099	Statement	(	1991:16:50036:50036	3949764	16	True				
ANR	3950100	Statement	g	1991:17:50037:50037	3949764	17	True				
ANR	3950101	Statement	->	1991:18:50038:50039	3949764	18	True				
ANR	3950102	Statement	back_edges	1991:20:50040:50049	3949764	19	True				
ANR	3950103	Statement	","	1991:30:50050:50050	3949764	20	True				
ANR	3950104	Statement	it	1991:32:50052:50053	3949764	21	True				
ANR	3950105	Statement	","	1991:34:50054:50054	3949764	22	True				
ANR	3950106	Statement	e	1991:36:50056:50056	3949764	23	True				
ANR	3950107	Statement	)	1991:37:50057:50057	3949764	24	True				
ANR	3950108	CompoundStatement		62:2:1485:1528	3949764	25					
ANR	3950109	IdentifierDeclStatement	RANode * from = e -> from ? get_anode ( e -> from ) : NULL ;	1992:2:50063:50112	3949764	0	True				
ANR	3950110	IdentifierDecl	* from = e -> from ? get_anode ( e -> from ) : NULL		3949764	0					
ANR	3950111	IdentifierDeclType	RANode *		3949764	0					
ANR	3950112	Identifier	from		3949764	1					
ANR	3950113	AssignmentExpression	* from = e -> from ? get_anode ( e -> from ) : NULL		3949764	2		=			
ANR	3950114	Identifier	from		3949764	0					
ANR	3950115	ConditionalExpression	e -> from ? get_anode ( e -> from ) : NULL		3949764	1					
ANR	3950116	Condition	e -> from		3949764	0					
ANR	3950117	PtrMemberAccess	e -> from		3949764	0					
ANR	3950118	Identifier	e		3949764	0					
ANR	3950119	Identifier	from		3949764	1					
ANR	3950120	CallExpression	get_anode ( e -> from )		3949764	1					
ANR	3950121	Callee	get_anode		3949764	0					
ANR	3950122	Identifier	get_anode		3949764	0					
ANR	3950123	ArgumentList	e -> from		3949764	1					
ANR	3950124	Argument	e -> from		3949764	0					
ANR	3950125	PtrMemberAccess	e -> from		3949764	0					
ANR	3950126	Identifier	e		3949764	0					
ANR	3950127	Identifier	from		3949764	1					
ANR	3950128	Identifier	NULL		3949764	2					
ANR	3950129	IdentifierDeclStatement	RANode * to = e -> to ? get_anode ( e -> to ) : NULL ;	1993:2:50116:50159	3949764	1	True				
ANR	3950130	IdentifierDecl	* to = e -> to ? get_anode ( e -> to ) : NULL		3949764	0					
ANR	3950131	IdentifierDeclType	RANode *		3949764	0					
ANR	3950132	Identifier	to		3949764	1					
ANR	3950133	AssignmentExpression	* to = e -> to ? get_anode ( e -> to ) : NULL		3949764	2		=			
ANR	3950134	Identifier	to		3949764	0					
ANR	3950135	ConditionalExpression	e -> to ? get_anode ( e -> to ) : NULL		3949764	1					
ANR	3950136	Condition	e -> to		3949764	0					
ANR	3950137	PtrMemberAccess	e -> to		3949764	0					
ANR	3950138	Identifier	e		3949764	0					
ANR	3950139	Identifier	to		3949764	1					
ANR	3950140	CallExpression	get_anode ( e -> to )		3949764	1					
ANR	3950141	Callee	get_anode		3949764	0					
ANR	3950142	Identifier	get_anode		3949764	0					
ANR	3950143	ArgumentList	e -> to		3949764	1					
ANR	3950144	Argument	e -> to		3949764	0					
ANR	3950145	PtrMemberAccess	e -> to		3949764	0					
ANR	3950146	Identifier	e		3949764	0					
ANR	3950147	Identifier	to		3949764	1					
ANR	3950148	Identifier	NULL		3949764	2					
ANR	3950149	ExpressionStatement	"fix_back_edge_dummy_nodes ( g , from , to )"	1994:2:50163:50202	3949764	2	True				
ANR	3950150	CallExpression	"fix_back_edge_dummy_nodes ( g , from , to )"		3949764	0					
ANR	3950151	Callee	fix_back_edge_dummy_nodes		3949764	0					
ANR	3950152	Identifier	fix_back_edge_dummy_nodes		3949764	0					
ANR	3950153	ArgumentList	g		3949764	1					
ANR	3950154	Argument	g		3949764	0					
ANR	3950155	Identifier	g		3949764	0					
ANR	3950156	Argument	from		3949764	1					
ANR	3950157	Identifier	from		3949764	0					
ANR	3950158	Argument	to		3949764	2					
ANR	3950159	Identifier	to		3949764	0					
ANR	3950160	ExpressionStatement	"r_agraph_del_edge ( g , to , from )"	1995:2:50206:50237	3949764	3	True				
ANR	3950161	CallExpression	"r_agraph_del_edge ( g , to , from )"		3949764	0					
ANR	3950162	Callee	r_agraph_del_edge		3949764	0					
ANR	3950163	Identifier	r_agraph_del_edge		3949764	0					
ANR	3950164	ArgumentList	g		3949764	1					
ANR	3950165	Argument	g		3949764	0					
ANR	3950166	Identifier	g		3949764	0					
ANR	3950167	Argument	to		3949764	1					
ANR	3950168	Identifier	to		3949764	0					
ANR	3950169	Argument	from		3949764	2					
ANR	3950170	Identifier	from		3949764	0					
ANR	3950171	ExpressionStatement	"r_agraph_add_edge_at ( g , from , to , e -> nth )"	1996:2:50241:50283	3949764	4	True				
ANR	3950172	CallExpression	"r_agraph_add_edge_at ( g , from , to , e -> nth )"		3949764	0					
ANR	3950173	Callee	r_agraph_add_edge_at		3949764	0					
ANR	3950174	Identifier	r_agraph_add_edge_at		3949764	0					
ANR	3950175	ArgumentList	g		3949764	1					
ANR	3950176	Argument	g		3949764	0					
ANR	3950177	Identifier	g		3949764	0					
ANR	3950178	Argument	from		3949764	1					
ANR	3950179	Identifier	from		3949764	0					
ANR	3950180	Argument	to		3949764	2					
ANR	3950181	Identifier	to		3949764	0					
ANR	3950182	Argument	e -> nth		3949764	3					
ANR	3950183	PtrMemberAccess	e -> nth		3949764	0					
ANR	3950184	Identifier	e		3949764	0					
ANR	3950185	Identifier	nth		3949764	1					
ANR	3950186	SwitchStatement	switch ( g -> layout )		3949764	26					
ANR	3950187	Condition	g -> layout	1999:9:50298:50306	3949764	0	True				
ANR	3950188	PtrMemberAccess	g -> layout		3949764	0					
ANR	3950189	Identifier	g		3949764	0					
ANR	3950190	Identifier	layout		3949764	1					
ANR	3950191	CompoundStatement		68:20:1678:1678	3949764	1					
ANR	3950192	Label	default :	2000:1:50312:50319	3949764	0	True				
ANR	3950193	Identifier	default		3949764	0					
ANR	3950194	Label	case 0 :	2001:1:50322:50328	3949764	1	True				
ANR	3950195	ForStatement	for ( i = 0 ; i < g -> n_layers ; ++ i )		3949764	2					
ANR	3950196	ForInit	i = 0 ;	2003:7:50397:50402	3949764	0	True				
ANR	3950197	AssignmentExpression	i = 0		3949764	0		=			
ANR	3950198	Identifier	i		3949764	0					
ANR	3950199	PrimaryExpression	0		3949764	1					
ANR	3950200	Condition	i < g -> n_layers	2003:14:50404:50418	3949764	1	True				
ANR	3950201	RelationalExpression	i < g -> n_layers		3949764	0		<			
ANR	3950202	Identifier	i		3949764	0					
ANR	3950203	PtrMemberAccess	g -> n_layers		3949764	1					
ANR	3950204	Identifier	g		3949764	0					
ANR	3950205	Identifier	n_layers		3949764	1					
ANR	3950206	UnaryExpression	++ i	2003:31:50421:50423	3949764	2	True				
ANR	3950207	IncDec	++		3949764	0					
ANR	3950208	Identifier	i		3949764	1					
ANR	3950209	CompoundStatement		72:36:1795:1795	3949764	3					
ANR	3950210	ForStatement	for ( j = 0 ; j < g -> layers [ i ] . n_nodes ; ++ j )		3949764	0					
ANR	3950211	ForInit	j = 0 ;	2004:8:50436:50441	3949764	0	True				
ANR	3950212	AssignmentExpression	j = 0		3949764	0		=			
ANR	3950213	Identifier	j		3949764	0					
ANR	3950214	PrimaryExpression	0		3949764	1					
ANR	3950215	Condition	j < g -> layers [ i ] . n_nodes	2004:15:50443:50466	3949764	1	True				
ANR	3950216	RelationalExpression	j < g -> layers [ i ] . n_nodes		3949764	0		<			
ANR	3950217	Identifier	j		3949764	0					
ANR	3950218	MemberAccess	g -> layers [ i ] . n_nodes		3949764	1					
ANR	3950219	ArrayIndexing	g -> layers [ i ]		3949764	0					
ANR	3950220	PtrMemberAccess	g -> layers		3949764	0					
ANR	3950221	Identifier	g		3949764	0					
ANR	3950222	Identifier	layers		3949764	1					
ANR	3950223	Identifier	i		3949764	1					
ANR	3950224	Identifier	n_nodes		3949764	1					
ANR	3950225	UnaryExpression	++ j	2004:41:50469:50471	3949764	2	True				
ANR	3950226	IncDec	++		3949764	0					
ANR	3950227	Identifier	j		3949764	1					
ANR	3950228	CompoundStatement		74:4:1849:1894	3949764	3					
ANR	3950229	IdentifierDeclStatement	RANode * n = get_anode ( g -> layers [ i ] . nodes [ j ] ) ;	2005:4:50480:50525	3949764	0	True				
ANR	3950230	IdentifierDecl	* n = get_anode ( g -> layers [ i ] . nodes [ j ] )		3949764	0					
ANR	3950231	IdentifierDeclType	RANode *		3949764	0					
ANR	3950232	Identifier	n		3949764	1					
ANR	3950233	AssignmentExpression	* n = get_anode ( g -> layers [ i ] . nodes [ j ] )		3949764	2		=			
ANR	3950234	Identifier	n		3949764	0					
ANR	3950235	CallExpression	get_anode ( g -> layers [ i ] . nodes [ j ] )		3949764	1					
ANR	3950236	Callee	get_anode		3949764	0					
ANR	3950237	Identifier	get_anode		3949764	0					
ANR	3950238	ArgumentList	g -> layers [ i ] . nodes [ j ]		3949764	1					
ANR	3950239	Argument	g -> layers [ i ] . nodes [ j ]		3949764	0					
ANR	3950240	ArrayIndexing	g -> layers [ i ] . nodes [ j ]		3949764	0					
ANR	3950241	MemberAccess	g -> layers [ i ] . nodes		3949764	0					
ANR	3950242	ArrayIndexing	g -> layers [ i ]		3949764	0					
ANR	3950243	PtrMemberAccess	g -> layers		3949764	0					
ANR	3950244	Identifier	g		3949764	0					
ANR	3950245	Identifier	layers		3949764	1					
ANR	3950246	Identifier	i		3949764	1					
ANR	3950247	Identifier	nodes		3949764	1					
ANR	3950248	Identifier	j		3949764	1					
ANR	3950249	IfStatement	if ( n )		3949764	1					
ANR	3950250	Condition	n	2006:8:50535:50535	3949764	0	True				
ANR	3950251	Identifier	n		3949764	0					
ANR	3950252	CompoundStatement		75:11:1907:1907	3949764	1					
ANR	3950253	ExpressionStatement	n -> x -= n -> w / 2	2007:5:50545:50561	3949764	0	True				
ANR	3950254	AssignmentExpression	n -> x -= n -> w / 2		3949764	0		-=			
ANR	3950255	PtrMemberAccess	n -> x		3949764	0					
ANR	3950256	Identifier	n		3949764	0					
ANR	3950257	Identifier	x		3949764	1					
ANR	3950258	MultiplicativeExpression	n -> w / 2		3949764	1		/			
ANR	3950259	PtrMemberAccess	n -> w		3949764	0					
ANR	3950260	Identifier	n		3949764	0					
ANR	3950261	Identifier	w		3949764	1					
ANR	3950262	PrimaryExpression	2		3949764	1					
ANR	3950263	IfStatement	if ( g -> is_tiny )		3949764	1					
ANR	3950264	Condition	g -> is_tiny	2008:9:50572:50581	3949764	0	True				
ANR	3950265	PtrMemberAccess	g -> is_tiny		3949764	0					
ANR	3950266	Identifier	g		3949764	0					
ANR	3950267	Identifier	is_tiny		3949764	1					
ANR	3950268	CompoundStatement		77:21:1953:1953	3949764	1					
ANR	3950269	ExpressionStatement	n -> x /= 8	2009:6:50592:50601	3949764	0	True				
ANR	3950270	AssignmentExpression	n -> x /= 8		3949764	0		/=			
ANR	3950271	PtrMemberAccess	n -> x		3949764	0					
ANR	3950272	Identifier	n		3949764	0					
ANR	3950273	Identifier	x		3949764	1					
ANR	3950274	PrimaryExpression	8		3949764	1					
ANR	3950275	ExpressionStatement	set_layer_gap ( g )	2015:2:50628:50645	3949764	3	True				
ANR	3950276	CallExpression	set_layer_gap ( g )		3949764	0					
ANR	3950277	Callee	set_layer_gap		3949764	0					
ANR	3950278	Identifier	set_layer_gap		3949764	0					
ANR	3950279	ArgumentList	g		3949764	1					
ANR	3950280	Argument	g		3949764	0					
ANR	3950281	Identifier	g		3949764	0					
ANR	3950282	ForStatement	for ( i = 0 ; i < g -> n_layers ; ++ i )		3949764	4					
ANR	3950283	ForInit	i = 0 ;	2018:7:50678:50683	3949764	0	True				
ANR	3950284	AssignmentExpression	i = 0		3949764	0		=			
ANR	3950285	Identifier	i		3949764	0					
ANR	3950286	PrimaryExpression	0		3949764	1					
ANR	3950287	Condition	i < g -> n_layers	2018:14:50685:50699	3949764	1	True				
ANR	3950288	RelationalExpression	i < g -> n_layers		3949764	0		<			
ANR	3950289	Identifier	i		3949764	0					
ANR	3950290	PtrMemberAccess	g -> n_layers		3949764	1					
ANR	3950291	Identifier	g		3949764	0					
ANR	3950292	Identifier	n_layers		3949764	1					
ANR	3950293	UnaryExpression	++ i	2018:31:50702:50704	3949764	2	True				
ANR	3950294	IncDec	++		3949764	0					
ANR	3950295	Identifier	i		3949764	1					
ANR	3950296	CompoundStatement		88:3:2081:2094	3949764	3					
ANR	3950297	IdentifierDeclStatement	int tmp_y = 0 ;	2019:3:50712:50725	3949764	0	True				
ANR	3950298	IdentifierDecl	tmp_y = 0		3949764	0					
ANR	3950299	IdentifierDeclType	int		3949764	0					
ANR	3950300	Identifier	tmp_y		3949764	1					
ANR	3950301	AssignmentExpression	tmp_y = 0		3949764	2		=			
ANR	3950302	Identifier	tmp_y		3949764	0					
ANR	3950303	PrimaryExpression	0		3949764	1					
ANR	3950304	ExpressionStatement	tmp_y = g -> layers [ 0 ] . gap	2020:3:50730:50754	3949764	1	True				
ANR	3950305	AssignmentExpression	tmp_y = g -> layers [ 0 ] . gap		3949764	0		=			
ANR	3950306	Identifier	tmp_y		3949764	0					
ANR	3950307	MemberAccess	g -> layers [ 0 ] . gap		3949764	1					
ANR	3950308	ArrayIndexing	g -> layers [ 0 ]		3949764	0					
ANR	3950309	PtrMemberAccess	g -> layers		3949764	0					
ANR	3950310	Identifier	g		3949764	0					
ANR	3950311	Identifier	layers		3949764	1					
ANR	3950312	PrimaryExpression	0		3949764	1					
ANR	3950313	Identifier	gap		3949764	1					
ANR	3950314	ForStatement	for ( k = 1 ; k <= i ; k ++ )		3949764	2					
ANR	3950315	ForInit	k = 1 ;	2021:8:50790:50795	3949764	0	True				
ANR	3950316	AssignmentExpression	k = 1		3949764	0		=			
ANR	3950317	Identifier	k		3949764	0					
ANR	3950318	PrimaryExpression	1		3949764	1					
ANR	3950319	Condition	k <= i	2021:15:50797:50802	3949764	1	True				
ANR	3950320	RelationalExpression	k <= i		3949764	0		<=			
ANR	3950321	Identifier	k		3949764	0					
ANR	3950322	Identifier	i		3949764	1					
ANR	3950323	PostIncDecOperationExpression	k ++	2021:23:50805:50807	3949764	2	True				
ANR	3950324	Identifier	k		3949764	0					
ANR	3950325	IncDec	++		3949764	1					
ANR	3950326	CompoundStatement		90:28:2179:2179	3949764	3					
ANR	3950327	ExpressionStatement	tmp_y += g -> layers [ k - 1 ] . height + g -> layers [ k ] . gap + 3	2022:4:50816:50869	3949764	0	True				
ANR	3950328	AssignmentExpression	tmp_y += g -> layers [ k - 1 ] . height + g -> layers [ k ] . gap + 3		3949764	0		+=			
ANR	3950329	Identifier	tmp_y		3949764	0					
ANR	3950330	AdditiveExpression	g -> layers [ k - 1 ] . height + g -> layers [ k ] . gap + 3		3949764	1		+			
ANR	3950331	MemberAccess	g -> layers [ k - 1 ] . height		3949764	0					
ANR	3950332	ArrayIndexing	g -> layers [ k - 1 ]		3949764	0					
ANR	3950333	PtrMemberAccess	g -> layers		3949764	0					
ANR	3950334	Identifier	g		3949764	0					
ANR	3950335	Identifier	layers		3949764	1					
ANR	3950336	AdditiveExpression	k - 1		3949764	1		-			
ANR	3950337	Identifier	k		3949764	0					
ANR	3950338	PrimaryExpression	1		3949764	1					
ANR	3950339	Identifier	height		3949764	1					
ANR	3950340	AdditiveExpression	g -> layers [ k ] . gap + 3		3949764	1		+			
ANR	3950341	MemberAccess	g -> layers [ k ] . gap		3949764	0					
ANR	3950342	ArrayIndexing	g -> layers [ k ]		3949764	0					
ANR	3950343	PtrMemberAccess	g -> layers		3949764	0					
ANR	3950344	Identifier	g		3949764	0					
ANR	3950345	Identifier	layers		3949764	1					
ANR	3950346	Identifier	k		3949764	1					
ANR	3950347	Identifier	gap		3949764	1					
ANR	3950348	PrimaryExpression	3		3949764	1					
ANR	3950349	IfStatement	if ( g -> is_tiny )		3949764	3					
ANR	3950350	Condition	g -> is_tiny	2024:7:50903:50912	3949764	0	True				
ANR	3950351	PtrMemberAccess	g -> is_tiny		3949764	0					
ANR	3950352	Identifier	g		3949764	0					
ANR	3950353	Identifier	is_tiny		3949764	1					
ANR	3950354	CompoundStatement		93:19:2284:2284	3949764	1					
ANR	3950355	ExpressionStatement	tmp_y = i	2025:4:50921:50930	3949764	0	True				
ANR	3950356	AssignmentExpression	tmp_y = i		3949764	0		=			
ANR	3950357	Identifier	tmp_y		3949764	0					
ANR	3950358	Identifier	i		3949764	1					
ANR	3950359	ForStatement	for ( j = 0 ; j < g -> layers [ i ] . n_nodes ; ++ j )		3949764	4					
ANR	3950360	ForInit	j = 0 ;	2027:8:50945:50950	3949764	0	True				
ANR	3950361	AssignmentExpression	j = 0		3949764	0		=			
ANR	3950362	Identifier	j		3949764	0					
ANR	3950363	PrimaryExpression	0		3949764	1					
ANR	3950364	Condition	j < g -> layers [ i ] . n_nodes	2027:15:50952:50975	3949764	1	True				
ANR	3950365	RelationalExpression	j < g -> layers [ i ] . n_nodes		3949764	0		<			
ANR	3950366	Identifier	j		3949764	0					
ANR	3950367	MemberAccess	g -> layers [ i ] . n_nodes		3949764	1					
ANR	3950368	ArrayIndexing	g -> layers [ i ]		3949764	0					
ANR	3950369	PtrMemberAccess	g -> layers		3949764	0					
ANR	3950370	Identifier	g		3949764	0					
ANR	3950371	Identifier	layers		3949764	1					
ANR	3950372	Identifier	i		3949764	1					
ANR	3950373	Identifier	n_nodes		3949764	1					
ANR	3950374	UnaryExpression	++ j	2027:41:50978:50980	3949764	2	True				
ANR	3950375	IncDec	++		3949764	0					
ANR	3950376	Identifier	j		3949764	1					
ANR	3950377	CompoundStatement		97:4:2358:2403	3949764	3					
ANR	3950378	IdentifierDeclStatement	RANode * n = get_anode ( g -> layers [ i ] . nodes [ j ] ) ;	2028:4:50989:51034	3949764	0	True				
ANR	3950379	IdentifierDecl	* n = get_anode ( g -> layers [ i ] . nodes [ j ] )		3949764	0					
ANR	3950380	IdentifierDeclType	RANode *		3949764	0					
ANR	3950381	Identifier	n		3949764	1					
ANR	3950382	AssignmentExpression	* n = get_anode ( g -> layers [ i ] . nodes [ j ] )		3949764	2		=			
ANR	3950383	Identifier	n		3949764	0					
ANR	3950384	CallExpression	get_anode ( g -> layers [ i ] . nodes [ j ] )		3949764	1					
ANR	3950385	Callee	get_anode		3949764	0					
ANR	3950386	Identifier	get_anode		3949764	0					
ANR	3950387	ArgumentList	g -> layers [ i ] . nodes [ j ]		3949764	1					
ANR	3950388	Argument	g -> layers [ i ] . nodes [ j ]		3949764	0					
ANR	3950389	ArrayIndexing	g -> layers [ i ] . nodes [ j ]		3949764	0					
ANR	3950390	MemberAccess	g -> layers [ i ] . nodes		3949764	0					
ANR	3950391	ArrayIndexing	g -> layers [ i ]		3949764	0					
ANR	3950392	PtrMemberAccess	g -> layers		3949764	0					
ANR	3950393	Identifier	g		3949764	0					
ANR	3950394	Identifier	layers		3949764	1					
ANR	3950395	Identifier	i		3949764	1					
ANR	3950396	Identifier	nodes		3949764	1					
ANR	3950397	Identifier	j		3949764	1					
ANR	3950398	IfStatement	if ( n )		3949764	1					
ANR	3950399	Condition	n	2029:8:51044:51044	3949764	0	True				
ANR	3950400	Identifier	n		3949764	0					
ANR	3950401	CompoundStatement		98:11:2416:2416	3949764	1					
ANR	3950402	ExpressionStatement	n -> y = tmp_y	2030:5:51054:51066	3949764	0	True				
ANR	3950403	AssignmentExpression	n -> y = tmp_y		3949764	0		=			
ANR	3950404	PtrMemberAccess	n -> y		3949764	0					
ANR	3950405	Identifier	n		3949764	0					
ANR	3950406	Identifier	y		3949764	1					
ANR	3950407	Identifier	tmp_y		3949764	1					
ANR	3950408	BreakStatement	break ;	2034:2:51085:51090	3949764	5	True				
ANR	3950409	Label	case 1 :	2036:1:51113:51119	3949764	6	True				
ANR	3950410	ForStatement	for ( i = 0 ; i < g -> n_layers ; i ++ )		3949764	7					
ANR	3950411	ForInit	i = 0 ;	2038:7:51179:51184	3949764	0	True				
ANR	3950412	AssignmentExpression	i = 0		3949764	0		=			
ANR	3950413	Identifier	i		3949764	0					
ANR	3950414	PrimaryExpression	0		3949764	1					
ANR	3950415	Condition	i < g -> n_layers	2038:14:51186:51200	3949764	1	True				
ANR	3950416	RelationalExpression	i < g -> n_layers		3949764	0		<			
ANR	3950417	Identifier	i		3949764	0					
ANR	3950418	PtrMemberAccess	g -> n_layers		3949764	1					
ANR	3950419	Identifier	g		3949764	0					
ANR	3950420	Identifier	n_layers		3949764	1					
ANR	3950421	PostIncDecOperationExpression	i ++	2038:31:51203:51205	3949764	2	True				
ANR	3950422	Identifier	i		3949764	0					
ANR	3950423	IncDec	++		3949764	1					
ANR	3950424	CompoundStatement		107:36:2577:2577	3949764	3					
ANR	3950425	ForStatement	for ( j = 0 ; j < g -> layers [ i ] . n_nodes ; j ++ )		3949764	0					
ANR	3950426	ForInit	j = 0 ;	2039:8:51218:51223	3949764	0	True				
ANR	3950427	AssignmentExpression	j = 0		3949764	0		=			
ANR	3950428	Identifier	j		3949764	0					
ANR	3950429	PrimaryExpression	0		3949764	1					
ANR	3950430	Condition	j < g -> layers [ i ] . n_nodes	2039:15:51225:51248	3949764	1	True				
ANR	3950431	RelationalExpression	j < g -> layers [ i ] . n_nodes		3949764	0		<			
ANR	3950432	Identifier	j		3949764	0					
ANR	3950433	MemberAccess	g -> layers [ i ] . n_nodes		3949764	1					
ANR	3950434	ArrayIndexing	g -> layers [ i ]		3949764	0					
ANR	3950435	PtrMemberAccess	g -> layers		3949764	0					
ANR	3950436	Identifier	g		3949764	0					
ANR	3950437	Identifier	layers		3949764	1					
ANR	3950438	Identifier	i		3949764	1					
ANR	3950439	Identifier	n_nodes		3949764	1					
ANR	3950440	PostIncDecOperationExpression	j ++	2039:41:51251:51253	3949764	2	True				
ANR	3950441	Identifier	j		3949764	0					
ANR	3950442	IncDec	++		3949764	1					
ANR	3950443	CompoundStatement		109:4:2631:2676	3949764	3					
ANR	3950444	IdentifierDeclStatement	RANode * n = get_anode ( g -> layers [ i ] . nodes [ j ] ) ;	2040:4:51262:51307	3949764	0	True				
ANR	3950445	IdentifierDecl	* n = get_anode ( g -> layers [ i ] . nodes [ j ] )		3949764	0					
ANR	3950446	IdentifierDeclType	RANode *		3949764	0					
ANR	3950447	Identifier	n		3949764	1					
ANR	3950448	AssignmentExpression	* n = get_anode ( g -> layers [ i ] . nodes [ j ] )		3949764	2		=			
ANR	3950449	Identifier	n		3949764	0					
ANR	3950450	CallExpression	get_anode ( g -> layers [ i ] . nodes [ j ] )		3949764	1					
ANR	3950451	Callee	get_anode		3949764	0					
ANR	3950452	Identifier	get_anode		3949764	0					
ANR	3950453	ArgumentList	g -> layers [ i ] . nodes [ j ]		3949764	1					
ANR	3950454	Argument	g -> layers [ i ] . nodes [ j ]		3949764	0					
ANR	3950455	ArrayIndexing	g -> layers [ i ] . nodes [ j ]		3949764	0					
ANR	3950456	MemberAccess	g -> layers [ i ] . nodes		3949764	0					
ANR	3950457	ArrayIndexing	g -> layers [ i ]		3949764	0					
ANR	3950458	PtrMemberAccess	g -> layers		3949764	0					
ANR	3950459	Identifier	g		3949764	0					
ANR	3950460	Identifier	layers		3949764	1					
ANR	3950461	Identifier	i		3949764	1					
ANR	3950462	Identifier	nodes		3949764	1					
ANR	3950463	Identifier	j		3949764	1					
ANR	3950464	ExpressionStatement	n -> y = 1	2041:4:51313:51321	3949764	1	True				
ANR	3950465	AssignmentExpression	n -> y = 1		3949764	0		=			
ANR	3950466	PtrMemberAccess	n -> y		3949764	0					
ANR	3950467	Identifier	n		3949764	0					
ANR	3950468	Identifier	y		3949764	1					
ANR	3950469	PrimaryExpression	1		3949764	1					
ANR	3950470	ForStatement	for ( k = 0 ; k < j ; k ++ )		3949764	2					
ANR	3950471	ForInit	k = 0 ;	2042:9:51332:51337	3949764	0	True				
ANR	3950472	AssignmentExpression	k = 0		3949764	0		=			
ANR	3950473	Identifier	k		3949764	0					
ANR	3950474	PrimaryExpression	0		3949764	1					
ANR	3950475	Condition	k < j	2042:16:51339:51343	3949764	1	True				
ANR	3950476	RelationalExpression	k < j		3949764	0		<			
ANR	3950477	Identifier	k		3949764	0					
ANR	3950478	Identifier	j		3949764	1					
ANR	3950479	PostIncDecOperationExpression	k ++	2042:23:51346:51348	3949764	2	True				
ANR	3950480	Identifier	k		3949764	0					
ANR	3950481	IncDec	++		3949764	1					
ANR	3950482	CompoundStatement		112:5:2727:2772	3949764	3					
ANR	3950483	IdentifierDeclStatement	RANode * m = get_anode ( g -> layers [ i ] . nodes [ k ] ) ;	2043:5:51358:51403	3949764	0	True				
ANR	3950484	IdentifierDecl	* m = get_anode ( g -> layers [ i ] . nodes [ k ] )		3949764	0					
ANR	3950485	IdentifierDeclType	RANode *		3949764	0					
ANR	3950486	Identifier	m		3949764	1					
ANR	3950487	AssignmentExpression	* m = get_anode ( g -> layers [ i ] . nodes [ k ] )		3949764	2		=			
ANR	3950488	Identifier	m		3949764	0					
ANR	3950489	CallExpression	get_anode ( g -> layers [ i ] . nodes [ k ] )		3949764	1					
ANR	3950490	Callee	get_anode		3949764	0					
ANR	3950491	Identifier	get_anode		3949764	0					
ANR	3950492	ArgumentList	g -> layers [ i ] . nodes [ k ]		3949764	1					
ANR	3950493	Argument	g -> layers [ i ] . nodes [ k ]		3949764	0					
ANR	3950494	ArrayIndexing	g -> layers [ i ] . nodes [ k ]		3949764	0					
ANR	3950495	MemberAccess	g -> layers [ i ] . nodes		3949764	0					
ANR	3950496	ArrayIndexing	g -> layers [ i ]		3949764	0					
ANR	3950497	PtrMemberAccess	g -> layers		3949764	0					
ANR	3950498	Identifier	g		3949764	0					
ANR	3950499	Identifier	layers		3949764	1					
ANR	3950500	Identifier	i		3949764	1					
ANR	3950501	Identifier	nodes		3949764	1					
ANR	3950502	Identifier	k		3949764	1					
ANR	3950503	ExpressionStatement	n -> y -= ( m -> h + VERTICAL_NODE_SPACING )	2044:5:51410:51448	3949764	1	True				
ANR	3950504	AssignmentExpression	n -> y -= ( m -> h + VERTICAL_NODE_SPACING )		3949764	0		-=			
ANR	3950505	PtrMemberAccess	n -> y		3949764	0					
ANR	3950506	Identifier	n		3949764	0					
ANR	3950507	Identifier	y		3949764	1					
ANR	3950508	AdditiveExpression	m -> h + VERTICAL_NODE_SPACING		3949764	1		+			
ANR	3950509	PtrMemberAccess	m -> h		3949764	0					
ANR	3950510	Identifier	m		3949764	0					
ANR	3950511	Identifier	h		3949764	1					
ANR	3950512	Identifier	VERTICAL_NODE_SPACING		3949764	1					
ANR	3950513	ExpressionStatement	set_layer_gap ( g )	2049:2:51468:51485	3949764	8	True				
ANR	3950514	CallExpression	set_layer_gap ( g )		3949764	0					
ANR	3950515	Callee	set_layer_gap		3949764	0					
ANR	3950516	Identifier	set_layer_gap		3949764	0					
ANR	3950517	ArgumentList	g		3949764	1					
ANR	3950518	Argument	g		3949764	0					
ANR	3950519	Identifier	g		3949764	0					
ANR	3950520	ForStatement	for ( i = 0 ; i < g -> n_layers ; i ++ )		3949764	9					
ANR	3950521	ForInit	i = 0 ;	2052:7:51520:51525	3949764	0	True				
ANR	3950522	AssignmentExpression	i = 0		3949764	0		=			
ANR	3950523	Identifier	i		3949764	0					
ANR	3950524	PrimaryExpression	0		3949764	1					
ANR	3950525	Condition	i < g -> n_layers	2052:14:51527:51541	3949764	1	True				
ANR	3950526	RelationalExpression	i < g -> n_layers		3949764	0		<			
ANR	3950527	Identifier	i		3949764	0					
ANR	3950528	PtrMemberAccess	g -> n_layers		3949764	1					
ANR	3950529	Identifier	g		3949764	0					
ANR	3950530	Identifier	n_layers		3949764	1					
ANR	3950531	PostIncDecOperationExpression	i ++	2052:31:51544:51546	3949764	2	True				
ANR	3950532	Identifier	i		3949764	0					
ANR	3950533	IncDec	++		3949764	1					
ANR	3950534	CompoundStatement		122:3:2923:2958	3949764	3					
ANR	3950535	IdentifierDeclStatement	int xval = 1 + g -> layers [ 0 ] . gap + 1 ;	2053:3:51554:51589	3949764	0	True				
ANR	3950536	IdentifierDecl	xval = 1 + g -> layers [ 0 ] . gap + 1		3949764	0					
ANR	3950537	IdentifierDeclType	int		3949764	0					
ANR	3950538	Identifier	xval		3949764	1					
ANR	3950539	AssignmentExpression	xval = 1 + g -> layers [ 0 ] . gap + 1		3949764	2		=			
ANR	3950540	Identifier	xval		3949764	0					
ANR	3950541	AdditiveExpression	1 + g -> layers [ 0 ] . gap + 1		3949764	1		+			
ANR	3950542	PrimaryExpression	1		3949764	0					
ANR	3950543	AdditiveExpression	g -> layers [ 0 ] . gap + 1		3949764	1		+			
ANR	3950544	MemberAccess	g -> layers [ 0 ] . gap		3949764	0					
ANR	3950545	ArrayIndexing	g -> layers [ 0 ]		3949764	0					
ANR	3950546	PtrMemberAccess	g -> layers		3949764	0					
ANR	3950547	Identifier	g		3949764	0					
ANR	3950548	Identifier	layers		3949764	1					
ANR	3950549	PrimaryExpression	0		3949764	1					
ANR	3950550	Identifier	gap		3949764	1					
ANR	3950551	PrimaryExpression	1		3949764	1					
ANR	3950552	ForStatement	for ( k = 1 ; k <= i ; k ++ )		3949764	1					
ANR	3950553	ForInit	k = 1 ;	2054:8:51599:51604	3949764	0	True				
ANR	3950554	AssignmentExpression	k = 1		3949764	0		=			
ANR	3950555	Identifier	k		3949764	0					
ANR	3950556	PrimaryExpression	1		3949764	1					
ANR	3950557	Condition	k <= i	2054:15:51606:51611	3949764	1	True				
ANR	3950558	RelationalExpression	k <= i		3949764	0		<=			
ANR	3950559	Identifier	k		3949764	0					
ANR	3950560	Identifier	i		3949764	1					
ANR	3950561	PostIncDecOperationExpression	k ++	2054:23:51614:51616	3949764	2	True				
ANR	3950562	Identifier	k		3949764	0					
ANR	3950563	IncDec	++		3949764	1					
ANR	3950564	CompoundStatement		123:28:2988:2988	3949764	3					
ANR	3950565	ExpressionStatement	xval += g -> layers [ k - 1 ] . width + g -> layers [ k ] . gap + 3	2055:4:51625:51676	3949764	0	True				
ANR	3950566	AssignmentExpression	xval += g -> layers [ k - 1 ] . width + g -> layers [ k ] . gap + 3		3949764	0		+=			
ANR	3950567	Identifier	xval		3949764	0					
ANR	3950568	AdditiveExpression	g -> layers [ k - 1 ] . width + g -> layers [ k ] . gap + 3		3949764	1		+			
ANR	3950569	MemberAccess	g -> layers [ k - 1 ] . width		3949764	0					
ANR	3950570	ArrayIndexing	g -> layers [ k - 1 ]		3949764	0					
ANR	3950571	PtrMemberAccess	g -> layers		3949764	0					
ANR	3950572	Identifier	g		3949764	0					
ANR	3950573	Identifier	layers		3949764	1					
ANR	3950574	AdditiveExpression	k - 1		3949764	1		-			
ANR	3950575	Identifier	k		3949764	0					
ANR	3950576	PrimaryExpression	1		3949764	1					
ANR	3950577	Identifier	width		3949764	1					
ANR	3950578	AdditiveExpression	g -> layers [ k ] . gap + 3		3949764	1		+			
ANR	3950579	MemberAccess	g -> layers [ k ] . gap		3949764	0					
ANR	3950580	ArrayIndexing	g -> layers [ k ]		3949764	0					
ANR	3950581	PtrMemberAccess	g -> layers		3949764	0					
ANR	3950582	Identifier	g		3949764	0					
ANR	3950583	Identifier	layers		3949764	1					
ANR	3950584	Identifier	k		3949764	1					
ANR	3950585	Identifier	gap		3949764	1					
ANR	3950586	PrimaryExpression	3		3949764	1					
ANR	3950587	ForStatement	for ( j = 0 ; j < g -> layers [ i ] . n_nodes ; j ++ )		3949764	2					
ANR	3950588	ForInit	j = 0 ;	2057:8:51691:51696	3949764	0	True				
ANR	3950589	AssignmentExpression	j = 0		3949764	0		=			
ANR	3950590	Identifier	j		3949764	0					
ANR	3950591	PrimaryExpression	0		3949764	1					
ANR	3950592	Condition	j < g -> layers [ i ] . n_nodes	2057:15:51698:51721	3949764	1	True				
ANR	3950593	RelationalExpression	j < g -> layers [ i ] . n_nodes		3949764	0		<			
ANR	3950594	Identifier	j		3949764	0					
ANR	3950595	MemberAccess	g -> layers [ i ] . n_nodes		3949764	1					
ANR	3950596	ArrayIndexing	g -> layers [ i ]		3949764	0					
ANR	3950597	PtrMemberAccess	g -> layers		3949764	0					
ANR	3950598	Identifier	g		3949764	0					
ANR	3950599	Identifier	layers		3949764	1					
ANR	3950600	Identifier	i		3949764	1					
ANR	3950601	Identifier	n_nodes		3949764	1					
ANR	3950602	PostIncDecOperationExpression	j ++	2057:41:51724:51726	3949764	2	True				
ANR	3950603	Identifier	j		3949764	0					
ANR	3950604	IncDec	++		3949764	1					
ANR	3950605	CompoundStatement		127:4:3104:3149	3949764	3					
ANR	3950606	IdentifierDeclStatement	RANode * n = get_anode ( g -> layers [ i ] . nodes [ j ] ) ;	2058:4:51735:51780	3949764	0	True				
ANR	3950607	IdentifierDecl	* n = get_anode ( g -> layers [ i ] . nodes [ j ] )		3949764	0					
ANR	3950608	IdentifierDeclType	RANode *		3949764	0					
ANR	3950609	Identifier	n		3949764	1					
ANR	3950610	AssignmentExpression	* n = get_anode ( g -> layers [ i ] . nodes [ j ] )		3949764	2		=			
ANR	3950611	Identifier	n		3949764	0					
ANR	3950612	CallExpression	get_anode ( g -> layers [ i ] . nodes [ j ] )		3949764	1					
ANR	3950613	Callee	get_anode		3949764	0					
ANR	3950614	Identifier	get_anode		3949764	0					
ANR	3950615	ArgumentList	g -> layers [ i ] . nodes [ j ]		3949764	1					
ANR	3950616	Argument	g -> layers [ i ] . nodes [ j ]		3949764	0					
ANR	3950617	ArrayIndexing	g -> layers [ i ] . nodes [ j ]		3949764	0					
ANR	3950618	MemberAccess	g -> layers [ i ] . nodes		3949764	0					
ANR	3950619	ArrayIndexing	g -> layers [ i ]		3949764	0					
ANR	3950620	PtrMemberAccess	g -> layers		3949764	0					
ANR	3950621	Identifier	g		3949764	0					
ANR	3950622	Identifier	layers		3949764	1					
ANR	3950623	Identifier	i		3949764	1					
ANR	3950624	Identifier	nodes		3949764	1					
ANR	3950625	Identifier	j		3949764	1					
ANR	3950626	ExpressionStatement	n -> x = xval	2059:4:51786:51797	3949764	1	True				
ANR	3950627	AssignmentExpression	n -> x = xval		3949764	0		=			
ANR	3950628	PtrMemberAccess	n -> x		3949764	0					
ANR	3950629	Identifier	n		3949764	0					
ANR	3950630	Identifier	x		3949764	1					
ANR	3950631	Identifier	xval		3949764	1					
ANR	3950632	BreakStatement	break ;	2062:2:51810:51815	3949764	10	True				
ANR	3950633	ExpressionStatement	backedge_info ( g )	2065:1:51822:51839	3949764	27	True				
ANR	3950634	CallExpression	backedge_info ( g )		3949764	0					
ANR	3950635	Callee	backedge_info		3949764	0					
ANR	3950636	Identifier	backedge_info		3949764	0					
ANR	3950637	ArgumentList	g		3949764	1					
ANR	3950638	Argument	g		3949764	0					
ANR	3950639	Identifier	g		3949764	0					
ANR	3950640	ForStatement	for ( i = 0 ; i < g -> n_layers ; ++ i )		3949764	28					
ANR	3950641	ForInit	i = 0 ;	2071:6:51963:51968	3949764	0	True				
ANR	3950642	AssignmentExpression	i = 0		3949764	0		=			
ANR	3950643	Identifier	i		3949764	0					
ANR	3950644	PrimaryExpression	0		3949764	1					
ANR	3950645	Condition	i < g -> n_layers	2071:13:51970:51984	3949764	1	True				
ANR	3950646	RelationalExpression	i < g -> n_layers		3949764	0		<			
ANR	3950647	Identifier	i		3949764	0					
ANR	3950648	PtrMemberAccess	g -> n_layers		3949764	1					
ANR	3950649	Identifier	g		3949764	0					
ANR	3950650	Identifier	n_layers		3949764	1					
ANR	3950651	UnaryExpression	++ i	2071:30:51987:51989	3949764	2	True				
ANR	3950652	IncDec	++		3949764	0					
ANR	3950653	Identifier	i		3949764	1					
ANR	3950654	CompoundStatement		140:35:3361:3361	3949764	3					
ANR	3950655	ExpressionStatement	free ( g -> layers [ i ] . nodes )	2072:2:51996:52021	3949764	0	True				
ANR	3950656	CallExpression	free ( g -> layers [ i ] . nodes )		3949764	0					
ANR	3950657	Callee	free		3949764	0					
ANR	3950658	Identifier	free		3949764	0					
ANR	3950659	ArgumentList	g -> layers [ i ] . nodes		3949764	1					
ANR	3950660	Argument	g -> layers [ i ] . nodes		3949764	0					
ANR	3950661	MemberAccess	g -> layers [ i ] . nodes		3949764	0					
ANR	3950662	ArrayIndexing	g -> layers [ i ]		3949764	0					
ANR	3950663	PtrMemberAccess	g -> layers		3949764	0					
ANR	3950664	Identifier	g		3949764	0					
ANR	3950665	Identifier	layers		3949764	1					
ANR	3950666	Identifier	i		3949764	1					
ANR	3950667	Identifier	nodes		3949764	1					
ANR	3950668	ExpressionStatement	free ( g -> layers )	2074:1:52027:52043	3949764	29	True				
ANR	3950669	CallExpression	free ( g -> layers )		3949764	0					
ANR	3950670	Callee	free		3949764	0					
ANR	3950671	Identifier	free		3949764	0					
ANR	3950672	ArgumentList	g -> layers		3949764	1					
ANR	3950673	Argument	g -> layers		3949764	0					
ANR	3950674	PtrMemberAccess	g -> layers		3949764	0					
ANR	3950675	Identifier	g		3949764	0					
ANR	3950676	Identifier	layers		3949764	1					
ANR	3950677	ExpressionStatement	r_list_free ( g -> long_edges )	2075:1:52046:52073	3949764	30	True				
ANR	3950678	CallExpression	r_list_free ( g -> long_edges )		3949764	0					
ANR	3950679	Callee	r_list_free		3949764	0					
ANR	3950680	Identifier	r_list_free		3949764	0					
ANR	3950681	ArgumentList	g -> long_edges		3949764	1					
ANR	3950682	Argument	g -> long_edges		3949764	0					
ANR	3950683	PtrMemberAccess	g -> long_edges		3949764	0					
ANR	3950684	Identifier	g		3949764	0					
ANR	3950685	Identifier	long_edges		3949764	1					
ANR	3950686	ExpressionStatement	r_list_free ( g -> back_edges )	2076:1:52076:52103	3949764	31	True				
ANR	3950687	CallExpression	r_list_free ( g -> back_edges )		3949764	0					
ANR	3950688	Callee	r_list_free		3949764	0					
ANR	3950689	Identifier	r_list_free		3949764	0					
ANR	3950690	ArgumentList	g -> back_edges		3949764	1					
ANR	3950691	Argument	g -> back_edges		3949764	0					
ANR	3950692	PtrMemberAccess	g -> back_edges		3949764	0					
ANR	3950693	Identifier	g		3949764	0					
ANR	3950694	Identifier	back_edges		3949764	1					
ANR	3950695	ExpressionStatement	r_cons_break_pop ( )	2077:1:52106:52125	3949764	32	True				
ANR	3950696	CallExpression	r_cons_break_pop ( )		3949764	0					
ANR	3950697	Callee	r_cons_break_pop		3949764	0					
ANR	3950698	Identifier	r_cons_break_pop		3949764	0					
ANR	3950699	ArgumentList			3949764	1					
ANR	3950700	ReturnType	static void		3949764	1					
ANR	3950701	Identifier	set_layout		3949764	2					
ANR	3950702	ParameterList	RAGraph * g		3949764	3					
ANR	3950703	Parameter	RAGraph * g	1932:23:48618:48627	3949764	0	True				
ANR	3950704	ParameterType	RAGraph *		3949764	0					
ANR	3950705	Identifier	g		3949764	1					
ANR	3950706	CFGEntryNode	ENTRY		3949764		True				
ANR	3950707	CFGExitNode	EXIT		3949764		True				
ANR	3950708	Symbol	g -> edges		3949764						
ANR	3950709	Symbol	g -> n_layers		3949764						
ANR	3950710	Symbol	g -> back_edges		3949764						
ANR	3950711	Symbol	* * * * g		3949764						
ANR	3950712	Symbol	xval		3949764						
ANR	3950713	Symbol	g -> is_tiny		3949764						
ANR	3950714	Symbol	from		3949764						
ANR	3950715	Symbol	* g -> layers [ i ] . nodes		3949764						
ANR	3950716	Symbol	* * j		3949764						
ANR	3950717	Symbol	* * i		3949764						
ANR	3950718	Symbol	a -> is_dummy		3949764						
ANR	3950719	Symbol	g -> long_edges		3949764						
ANR	3950720	Symbol	e -> from		3949764						
ANR	3950721	Symbol	NULL		3949764						
ANR	3950722	Symbol	* * g		3949764						
ANR	3950723	Symbol	a -> layer_height		3949764						
ANR	3950724	Symbol	n -> h		3949764						
ANR	3950725	Symbol	g -> layers [ i ] . width		3949764						
ANR	3950726	Symbol	it		3949764						
ANR	3950727	Symbol	g -> layers [ k - 1 ] . width		3949764						
ANR	3950728	Symbol	n -> y		3949764						
ANR	3950729	Symbol	rh		3949764						
ANR	3950730	Symbol	n -> x		3949764						
ANR	3950731	Symbol	n -> w		3949764						
ANR	3950732	Symbol	* * * i		3949764						
ANR	3950733	Symbol	* g -> layers		3949764						
ANR	3950734	Symbol	* * * g		3949764						
ANR	3950735	Symbol	g -> layers [ k ] . gap		3949764						
ANR	3950736	Symbol	tmp_y		3949764						
ANR	3950737	Symbol	rw		3949764						
ANR	3950738	Symbol	a -> h		3949764						
ANR	3950739	Symbol	e -> to		3949764						
ANR	3950740	Symbol	g -> layers [ k - 1 ] . height		3949764						
ANR	3950741	Symbol	g -> layers [ i ] . nodes		3949764						
ANR	3950742	Symbol	* * g -> layers [ i ] . nodes		3949764						
ANR	3950743	Symbol	r_cons_is_breaked		3949764						
ANR	3950744	Symbol	m -> h		3949764						
ANR	3950745	Symbol	g -> layers [ i ] . nodes [ j ] -> data		3949764						
ANR	3950746	Symbol	* * * g -> layers		3949764						
ANR	3950747	Symbol	VERTICAL_NODE_SPACING		3949764						
ANR	3950748	Symbol	g -> layers [ i ] . height		3949764						
ANR	3950749	Symbol	a		3949764						
ANR	3950750	Symbol	get_anode		3949764						
ANR	3950751	Symbol	g -> layout		3949764						
ANR	3950752	Symbol	e		3949764						
ANR	3950753	Symbol	g		3949764						
ANR	3950754	Symbol	i		3949764						
ANR	3950755	Symbol	j		3949764						
ANR	3950756	Symbol	k		3949764						
ANR	3950757	Symbol	* a		3949764						
ANR	3950758	Symbol	e -> nth		3949764						
ANR	3950759	Symbol	m		3949764						
ANR	3950760	Symbol	n		3949764						
ANR	3950761	Symbol	* e		3949764						
ANR	3950762	Symbol	* g		3949764						
ANR	3950763	Symbol	* i		3949764						
ANR	3950764	Symbol	g -> layers [ 0 ] . gap		3949764						
ANR	3950765	Symbol	* j		3949764						
ANR	3950766	Symbol	* k		3949764						
ANR	3950767	Symbol	a -> layer_width		3949764						
ANR	3950768	Symbol	* m		3949764						
ANR	3950769	Symbol	* n		3949764						
ANR	3950770	Symbol	a -> w		3949764						
ANR	3950771	Symbol	g -> layers [ i ] . n_nodes		3949764						
ANR	3950772	Symbol	to		3949764						
ANR	3950773	Symbol	g -> layers		3949764						
ANR	3950774	Symbol	* * g -> layers		3949764						
ANR	3950775	Symbol	r_list_new		3949764						
ANR	3950776	Function	get_body	2080:0:52130:54478							
ANR	3950777	FunctionDef	"get_body (RCore * core , ut64 addr , int size , int opts)"		3950776	0					
ANR	3950778	CompoundStatement		2080:66:52196:54478	3950776	0					
ANR	3950779	IdentifierDeclStatement	char * body ;	2081:1:52199:52209	3950776	0	True				
ANR	3950780	IdentifierDecl	* body		3950776	0					
ANR	3950781	IdentifierDeclType	char *		3950776	0					
ANR	3950782	Identifier	body		3950776	1					
ANR	3950783	IdentifierDeclStatement	RConfigHold * hc = r_config_hold_new ( core -> config ) ;	2082:1:52212:52262	3950776	1	True				
ANR	3950784	IdentifierDecl	* hc = r_config_hold_new ( core -> config )		3950776	0					
ANR	3950785	IdentifierDeclType	RConfigHold *		3950776	0					
ANR	3950786	Identifier	hc		3950776	1					
ANR	3950787	AssignmentExpression	* hc = r_config_hold_new ( core -> config )		3950776	2		=			
ANR	3950788	Identifier	hc		3950776	0					
ANR	3950789	CallExpression	r_config_hold_new ( core -> config )		3950776	1					
ANR	3950790	Callee	r_config_hold_new		3950776	0					
ANR	3950791	Identifier	r_config_hold_new		3950776	0					
ANR	3950792	ArgumentList	core -> config		3950776	1					
ANR	3950793	Argument	core -> config		3950776	0					
ANR	3950794	PtrMemberAccess	core -> config		3950776	0					
ANR	3950795	Identifier	core		3950776	0					
ANR	3950796	Identifier	config		3950776	1					
ANR	3950797	IfStatement	if ( ! hc )		3950776	2					
ANR	3950798	Condition	! hc	2083:5:52269:52271	3950776	0	True				
ANR	3950799	UnaryOperationExpression	! hc		3950776	0					
ANR	3950800	UnaryOperator	!		3950776	0					
ANR	3950801	Identifier	hc		3950776	1					
ANR	3950802	CompoundStatement		4:10:77:77	3950776	1					
ANR	3950803	ReturnStatement	return NULL ;	2084:2:52278:52289	3950776	0	True				
ANR	3950804	Identifier	NULL		3950776	0					
ANR	3950805	ExpressionStatement	"r_config_hold_i ( hc , ""asm.lines"" , ""asm.bytes"" , ""asm.cmt.col"" , ""asm.marks"" , ""asm.offset"" , ""asm.comments"" , ""asm.cmt.right"" , ""asm.bb.line"" , NULL )"	2086:1:52295:52441	3950776	3	True				
ANR	3950806	CallExpression	"r_config_hold_i ( hc , ""asm.lines"" , ""asm.bytes"" , ""asm.cmt.col"" , ""asm.marks"" , ""asm.offset"" , ""asm.comments"" , ""asm.cmt.right"" , ""asm.bb.line"" , NULL )"		3950776	0					
ANR	3950807	Callee	r_config_hold_i		3950776	0					
ANR	3950808	Identifier	r_config_hold_i		3950776	0					
ANR	3950809	ArgumentList	hc		3950776	1					
ANR	3950810	Argument	hc		3950776	0					
ANR	3950811	Identifier	hc		3950776	0					
ANR	3950812	Argument	"""asm.lines"""		3950776	1					
ANR	3950813	PrimaryExpression	"""asm.lines"""		3950776	0					
ANR	3950814	Argument	"""asm.bytes"""		3950776	2					
ANR	3950815	PrimaryExpression	"""asm.bytes"""		3950776	0					
ANR	3950816	Argument	"""asm.cmt.col"""		3950776	3					
ANR	3950817	PrimaryExpression	"""asm.cmt.col"""		3950776	0					
ANR	3950818	Argument	"""asm.marks"""		3950776	4					
ANR	3950819	PrimaryExpression	"""asm.marks"""		3950776	0					
ANR	3950820	Argument	"""asm.offset"""		3950776	5					
ANR	3950821	PrimaryExpression	"""asm.offset"""		3950776	0					
ANR	3950822	Argument	"""asm.comments"""		3950776	6					
ANR	3950823	PrimaryExpression	"""asm.comments"""		3950776	0					
ANR	3950824	Argument	"""asm.cmt.right"""		3950776	7					
ANR	3950825	PrimaryExpression	"""asm.cmt.right"""		3950776	0					
ANR	3950826	Argument	"""asm.bb.line"""		3950776	8					
ANR	3950827	PrimaryExpression	"""asm.bb.line"""		3950776	0					
ANR	3950828	Argument	NULL		3950776	9					
ANR	3950829	Identifier	NULL		3950776	0					
ANR	3950830	IdentifierDeclStatement	"const bool o_comments = r_config_get_i ( core -> config , ""graph.comments"" ) ;"	2089:1:52444:52515	3950776	4	True				
ANR	3950831	IdentifierDecl	"o_comments = r_config_get_i ( core -> config , ""graph.comments"" )"		3950776	0					
ANR	3950832	IdentifierDeclType	const bool		3950776	0					
ANR	3950833	Identifier	o_comments		3950776	1					
ANR	3950834	AssignmentExpression	"o_comments = r_config_get_i ( core -> config , ""graph.comments"" )"		3950776	2		=			
ANR	3950835	Identifier	o_comments		3950776	0					
ANR	3950836	CallExpression	"r_config_get_i ( core -> config , ""graph.comments"" )"		3950776	1					
ANR	3950837	Callee	r_config_get_i		3950776	0					
ANR	3950838	Identifier	r_config_get_i		3950776	0					
ANR	3950839	ArgumentList	core -> config		3950776	1					
ANR	3950840	Argument	core -> config		3950776	0					
ANR	3950841	PtrMemberAccess	core -> config		3950776	0					
ANR	3950842	Identifier	core		3950776	0					
ANR	3950843	Identifier	config		3950776	1					
ANR	3950844	Argument	"""graph.comments"""		3950776	1					
ANR	3950845	PrimaryExpression	"""graph.comments"""		3950776	0					
ANR	3950846	IdentifierDeclStatement	"const bool o_cmtright = r_config_get_i ( core -> config , ""graph.cmtright"" ) ;"	2090:1:52518:52589	3950776	5	True				
ANR	3950847	IdentifierDecl	"o_cmtright = r_config_get_i ( core -> config , ""graph.cmtright"" )"		3950776	0					
ANR	3950848	IdentifierDeclType	const bool		3950776	0					
ANR	3950849	Identifier	o_cmtright		3950776	1					
ANR	3950850	AssignmentExpression	"o_cmtright = r_config_get_i ( core -> config , ""graph.cmtright"" )"		3950776	2		=			
ANR	3950851	Identifier	o_cmtright		3950776	0					
ANR	3950852	CallExpression	"r_config_get_i ( core -> config , ""graph.cmtright"" )"		3950776	1					
ANR	3950853	Callee	r_config_get_i		3950776	0					
ANR	3950854	Identifier	r_config_get_i		3950776	0					
ANR	3950855	ArgumentList	core -> config		3950776	1					
ANR	3950856	Argument	core -> config		3950776	0					
ANR	3950857	PtrMemberAccess	core -> config		3950776	0					
ANR	3950858	Identifier	core		3950776	0					
ANR	3950859	Identifier	config		3950776	1					
ANR	3950860	Argument	"""graph.cmtright"""		3950776	1					
ANR	3950861	PrimaryExpression	"""graph.cmtright"""		3950776	0					
ANR	3950862	IdentifierDeclStatement	"const bool o_bytes = r_config_get_i ( core -> config , ""graph.bytes"" ) ;"	2091:1:52592:52657	3950776	6	True				
ANR	3950863	IdentifierDecl	"o_bytes = r_config_get_i ( core -> config , ""graph.bytes"" )"		3950776	0					
ANR	3950864	IdentifierDeclType	const bool		3950776	0					
ANR	3950865	Identifier	o_bytes		3950776	1					
ANR	3950866	AssignmentExpression	"o_bytes = r_config_get_i ( core -> config , ""graph.bytes"" )"		3950776	2		=			
ANR	3950867	Identifier	o_bytes		3950776	0					
ANR	3950868	CallExpression	"r_config_get_i ( core -> config , ""graph.bytes"" )"		3950776	1					
ANR	3950869	Callee	r_config_get_i		3950776	0					
ANR	3950870	Identifier	r_config_get_i		3950776	0					
ANR	3950871	ArgumentList	core -> config		3950776	1					
ANR	3950872	Argument	core -> config		3950776	0					
ANR	3950873	PtrMemberAccess	core -> config		3950776	0					
ANR	3950874	Identifier	core		3950776	0					
ANR	3950875	Identifier	config		3950776	1					
ANR	3950876	Argument	"""graph.bytes"""		3950776	1					
ANR	3950877	PrimaryExpression	"""graph.bytes"""		3950776	0					
ANR	3950878	IdentifierDeclStatement	"const bool o_flags_in_bytes = r_config_get_i ( core -> config , ""asm.flags.inbytes"" ) ;"	2092:1:52660:52740	3950776	7	True				
ANR	3950879	IdentifierDecl	"o_flags_in_bytes = r_config_get_i ( core -> config , ""asm.flags.inbytes"" )"		3950776	0					
ANR	3950880	IdentifierDeclType	const bool		3950776	0					
ANR	3950881	Identifier	o_flags_in_bytes		3950776	1					
ANR	3950882	AssignmentExpression	"o_flags_in_bytes = r_config_get_i ( core -> config , ""asm.flags.inbytes"" )"		3950776	2		=			
ANR	3950883	Identifier	o_flags_in_bytes		3950776	0					
ANR	3950884	CallExpression	"r_config_get_i ( core -> config , ""asm.flags.inbytes"" )"		3950776	1					
ANR	3950885	Callee	r_config_get_i		3950776	0					
ANR	3950886	Identifier	r_config_get_i		3950776	0					
ANR	3950887	ArgumentList	core -> config		3950776	1					
ANR	3950888	Argument	core -> config		3950776	0					
ANR	3950889	PtrMemberAccess	core -> config		3950776	0					
ANR	3950890	Identifier	core		3950776	0					
ANR	3950891	Identifier	config		3950776	1					
ANR	3950892	Argument	"""asm.flags.inbytes"""		3950776	1					
ANR	3950893	PrimaryExpression	"""asm.flags.inbytes"""		3950776	0					
ANR	3950894	IdentifierDeclStatement	"const bool o_graph_offset = r_config_get_i ( core -> config , ""graph.offset"" ) ;"	2093:1:52743:52816	3950776	8	True				
ANR	3950895	IdentifierDecl	"o_graph_offset = r_config_get_i ( core -> config , ""graph.offset"" )"		3950776	0					
ANR	3950896	IdentifierDeclType	const bool		3950776	0					
ANR	3950897	Identifier	o_graph_offset		3950776	1					
ANR	3950898	AssignmentExpression	"o_graph_offset = r_config_get_i ( core -> config , ""graph.offset"" )"		3950776	2		=			
ANR	3950899	Identifier	o_graph_offset		3950776	0					
ANR	3950900	CallExpression	"r_config_get_i ( core -> config , ""graph.offset"" )"		3950776	1					
ANR	3950901	Callee	r_config_get_i		3950776	0					
ANR	3950902	Identifier	r_config_get_i		3950776	0					
ANR	3950903	ArgumentList	core -> config		3950776	1					
ANR	3950904	Argument	core -> config		3950776	0					
ANR	3950905	PtrMemberAccess	core -> config		3950776	0					
ANR	3950906	Identifier	core		3950776	0					
ANR	3950907	Identifier	config		3950776	1					
ANR	3950908	Argument	"""graph.offset"""		3950776	1					
ANR	3950909	PrimaryExpression	"""graph.offset"""		3950776	0					
ANR	3950910	IdentifierDeclStatement	int o_cursor = core -> print -> cur_enabled ;	2094:1:52819:52858	3950776	9	True				
ANR	3950911	IdentifierDecl	o_cursor = core -> print -> cur_enabled		3950776	0					
ANR	3950912	IdentifierDeclType	int		3950776	0					
ANR	3950913	Identifier	o_cursor		3950776	1					
ANR	3950914	AssignmentExpression	o_cursor = core -> print -> cur_enabled		3950776	2		=			
ANR	3950915	Identifier	o_cursor		3950776	0					
ANR	3950916	PtrMemberAccess	core -> print -> cur_enabled		3950776	1					
ANR	3950917	PtrMemberAccess	core -> print		3950776	0					
ANR	3950918	Identifier	core		3950776	0					
ANR	3950919	Identifier	print		3950776	1					
ANR	3950920	Identifier	cur_enabled		3950776	1					
ANR	3950921	IfStatement	if ( opts & BODY_COMMENTS )		3950776	10					
ANR	3950922	Condition	opts & BODY_COMMENTS	2095:5:52865:52884	3950776	0	True				
ANR	3950923	BitAndExpression	opts & BODY_COMMENTS		3950776	0		&			
ANR	3950924	Identifier	opts		3950776	0					
ANR	3950925	Identifier	BODY_COMMENTS		3950776	1					
ANR	3950926	CompoundStatement		16:27:690:690	3950776	1					
ANR	3950927	ExpressionStatement	"r_core_visual_toggle_decompiler_disasm ( core , true , false )"	2096:2:52891:52949	3950776	0	True				
ANR	3950928	CallExpression	"r_core_visual_toggle_decompiler_disasm ( core , true , false )"		3950776	0					
ANR	3950929	Callee	r_core_visual_toggle_decompiler_disasm		3950776	0					
ANR	3950930	Identifier	r_core_visual_toggle_decompiler_disasm		3950776	0					
ANR	3950931	ArgumentList	core		3950776	1					
ANR	3950932	Argument	core		3950776	0					
ANR	3950933	Identifier	core		3950776	0					
ANR	3950934	Argument	true		3950776	1					
ANR	3950935	Identifier	true		3950776	0					
ANR	3950936	Argument	false		3950776	2					
ANR	3950937	Identifier	false		3950776	0					
ANR	3950938	Statement	char	2097:2:52953:52956	3950776	1	True				
ANR	3950939	Statement	*	2097:7:52958:52958	3950776	2	True				
ANR	3950940	Statement	res	2097:9:52960:52962	3950776	3	True				
ANR	3950941	Statement	=	2097:13:52964:52964	3950776	4	True				
ANR	3950942	Statement	r_core_cmd_strf	2097:15:52966:52980	3950776	5	True				
ANR	3950943	Statement	(	2097:31:52982:52982	3950776	6	True				
ANR	3950944	Statement	core	2097:32:52983:52986	3950776	7	True				
ANR	3950945	Statement	","	2097:36:52987:52987	3950776	8	True				
ANR	3950946	Statement	"""pD %d @ 0x%08"""	2097:38:52989:53003	3950776	9	True				
ANR	3950947	Statement	PFMT64x	2097:53:53004:53010	3950776	10	True				
ANR	3950948	Statement	","	2097:60:53011:53011	3950776	11	True				
ANR	3950949	Statement	size	2097:62:53013:53016	3950776	12	True				
ANR	3950950	Statement	","	2097:66:53017:53017	3950776	13	True				
ANR	3950951	Statement	addr	2097:68:53019:53022	3950776	14	True				
ANR	3950952	Statement	)	2097:72:53023:53023	3950776	15	True				
ANR	3950953	ExpressionStatement		2097:73:53024:53024	3950776	16	True				
ANR	3950954	ExpressionStatement	"res = r_str_replace ( res , ""; "" , """" , true )"	2098:2:53028:53069	3950776	17	True				
ANR	3950955	AssignmentExpression	"res = r_str_replace ( res , ""; "" , """" , true )"		3950776	0		=			
ANR	3950956	Identifier	res		3950776	0					
ANR	3950957	CallExpression	"r_str_replace ( res , ""; "" , """" , true )"		3950776	1					
ANR	3950958	Callee	r_str_replace		3950776	0					
ANR	3950959	Identifier	r_str_replace		3950776	0					
ANR	3950960	ArgumentList	res		3950776	1					
ANR	3950961	Argument	res		3950776	0					
ANR	3950962	Identifier	res		3950776	0					
ANR	3950963	Argument	"""; """		3950776	1					
ANR	3950964	PrimaryExpression	"""; """		3950776	0					
ANR	3950965	Argument	""""""		3950776	2					
ANR	3950966	PrimaryExpression	""""""		3950776	0					
ANR	3950967	Argument	true		3950776	3					
ANR	3950968	Identifier	true		3950776	0					
ANR	3950969	ExpressionStatement	r_str_trim ( res )	2100:2:53125:53141	3950776	18	True				
ANR	3950970	CallExpression	r_str_trim ( res )		3950776	0					
ANR	3950971	Callee	r_str_trim		3950776	0					
ANR	3950972	Identifier	r_str_trim		3950776	0					
ANR	3950973	ArgumentList	res		3950776	1					
ANR	3950974	Argument	res		3950776	0					
ANR	3950975	Identifier	res		3950776	0					
ANR	3950976	ExpressionStatement	res = r_str_trim_lines ( res )	2101:2:53145:53173	3950776	19	True				
ANR	3950977	AssignmentExpression	res = r_str_trim_lines ( res )		3950776	0		=			
ANR	3950978	Identifier	res		3950776	0					
ANR	3950979	CallExpression	r_str_trim_lines ( res )		3950776	1					
ANR	3950980	Callee	r_str_trim_lines		3950776	0					
ANR	3950981	Identifier	r_str_trim_lines		3950776	0					
ANR	3950982	ArgumentList	res		3950776	1					
ANR	3950983	Argument	res		3950776	0					
ANR	3950984	Identifier	res		3950776	0					
ANR	3950985	ExpressionStatement	"r_core_visual_toggle_decompiler_disasm ( core , true , false )"	2102:2:53177:53235	3950776	20	True				
ANR	3950986	CallExpression	"r_core_visual_toggle_decompiler_disasm ( core , true , false )"		3950776	0					
ANR	3950987	Callee	r_core_visual_toggle_decompiler_disasm		3950776	0					
ANR	3950988	Identifier	r_core_visual_toggle_decompiler_disasm		3950776	0					
ANR	3950989	ArgumentList	core		3950776	1					
ANR	3950990	Argument	core		3950776	0					
ANR	3950991	Identifier	core		3950776	0					
ANR	3950992	Argument	true		3950776	1					
ANR	3950993	Identifier	true		3950776	0					
ANR	3950994	Argument	false		3950776	2					
ANR	3950995	Identifier	false		3950776	0					
ANR	3950996	ReturnStatement	return res ;	2103:2:53239:53249	3950776	21	True				
ANR	3950997	Identifier	res		3950776	0					
ANR	3950998	IdentifierDeclStatement	"const char * cmd = ( opts & BODY_SUMMARY ) ? ""pds"" : ""pD"" ;"	2105:1:53255:53307	3950776	11	True				
ANR	3950999	IdentifierDecl	"* cmd = ( opts & BODY_SUMMARY ) ? ""pds"" : ""pD"""		3950776	0					
ANR	3951000	IdentifierDeclType	const char *		3950776	0					
ANR	3951001	Identifier	cmd		3950776	1					
ANR	3951002	AssignmentExpression	"* cmd = ( opts & BODY_SUMMARY ) ? ""pds"" : ""pD"""		3950776	2		=			
ANR	3951003	Identifier	cmd		3950776	0					
ANR	3951004	ConditionalExpression	"( opts & BODY_SUMMARY ) ? ""pds"" : ""pD"""		3950776	1					
ANR	3951005	Condition	opts & BODY_SUMMARY		3950776	0					
ANR	3951006	BitAndExpression	opts & BODY_SUMMARY		3950776	0		&			
ANR	3951007	Identifier	opts		3950776	0					
ANR	3951008	Identifier	BODY_SUMMARY		3950776	1					
ANR	3951009	PrimaryExpression	"""pds"""		3950776	1					
ANR	3951010	PrimaryExpression	"""pD"""		3950776	2					
ANR	3951011	ExpressionStatement	"r_config_set_i ( core -> config , ""asm.bb.line"" , false )"	2108:1:53333:53384	3950776	12	True				
ANR	3951012	CallExpression	"r_config_set_i ( core -> config , ""asm.bb.line"" , false )"		3950776	0					
ANR	3951013	Callee	r_config_set_i		3950776	0					
ANR	3951014	Identifier	r_config_set_i		3950776	0					
ANR	3951015	ArgumentList	core -> config		3950776	1					
ANR	3951016	Argument	core -> config		3950776	0					
ANR	3951017	PtrMemberAccess	core -> config		3950776	0					
ANR	3951018	Identifier	core		3950776	0					
ANR	3951019	Identifier	config		3950776	1					
ANR	3951020	Argument	"""asm.bb.line"""		3950776	1					
ANR	3951021	PrimaryExpression	"""asm.bb.line"""		3950776	0					
ANR	3951022	Argument	false		3950776	2					
ANR	3951023	Identifier	false		3950776	0					
ANR	3951024	ExpressionStatement	"r_config_set_i ( core -> config , ""asm.lines"" , false )"	2109:1:53387:53436	3950776	13	True				
ANR	3951025	CallExpression	"r_config_set_i ( core -> config , ""asm.lines"" , false )"		3950776	0					
ANR	3951026	Callee	r_config_set_i		3950776	0					
ANR	3951027	Identifier	r_config_set_i		3950776	0					
ANR	3951028	ArgumentList	core -> config		3950776	1					
ANR	3951029	Argument	core -> config		3950776	0					
ANR	3951030	PtrMemberAccess	core -> config		3950776	0					
ANR	3951031	Identifier	core		3950776	0					
ANR	3951032	Identifier	config		3950776	1					
ANR	3951033	Argument	"""asm.lines"""		3950776	1					
ANR	3951034	PrimaryExpression	"""asm.lines"""		3950776	0					
ANR	3951035	Argument	false		3950776	2					
ANR	3951036	Identifier	false		3950776	0					
ANR	3951037	ExpressionStatement	"r_config_set_i ( core -> config , ""asm.cmt.col"" , 0 )"	2110:1:53439:53486	3950776	14	True				
ANR	3951038	CallExpression	"r_config_set_i ( core -> config , ""asm.cmt.col"" , 0 )"		3950776	0					
ANR	3951039	Callee	r_config_set_i		3950776	0					
ANR	3951040	Identifier	r_config_set_i		3950776	0					
ANR	3951041	ArgumentList	core -> config		3950776	1					
ANR	3951042	Argument	core -> config		3950776	0					
ANR	3951043	PtrMemberAccess	core -> config		3950776	0					
ANR	3951044	Identifier	core		3950776	0					
ANR	3951045	Identifier	config		3950776	1					
ANR	3951046	Argument	"""asm.cmt.col"""		3950776	1					
ANR	3951047	PrimaryExpression	"""asm.cmt.col"""		3950776	0					
ANR	3951048	Argument	0		3950776	2					
ANR	3951049	PrimaryExpression	0		3950776	0					
ANR	3951050	ExpressionStatement	"r_config_set_i ( core -> config , ""asm.marks"" , false )"	2111:1:53489:53538	3950776	15	True				
ANR	3951051	CallExpression	"r_config_set_i ( core -> config , ""asm.marks"" , false )"		3950776	0					
ANR	3951052	Callee	r_config_set_i		3950776	0					
ANR	3951053	Identifier	r_config_set_i		3950776	0					
ANR	3951054	ArgumentList	core -> config		3950776	1					
ANR	3951055	Argument	core -> config		3950776	0					
ANR	3951056	PtrMemberAccess	core -> config		3950776	0					
ANR	3951057	Identifier	core		3950776	0					
ANR	3951058	Identifier	config		3950776	1					
ANR	3951059	Argument	"""asm.marks"""		3950776	1					
ANR	3951060	PrimaryExpression	"""asm.marks"""		3950776	0					
ANR	3951061	Argument	false		3950776	2					
ANR	3951062	Identifier	false		3950776	0					
ANR	3951063	ExpressionStatement	"r_config_set_i ( core -> config , ""asm.cmt.right"" , ( opts & BODY_SUMMARY ) || o_cmtright )"	2112:1:53541:53624	3950776	16	True				
ANR	3951064	CallExpression	"r_config_set_i ( core -> config , ""asm.cmt.right"" , ( opts & BODY_SUMMARY ) || o_cmtright )"		3950776	0					
ANR	3951065	Callee	r_config_set_i		3950776	0					
ANR	3951066	Identifier	r_config_set_i		3950776	0					
ANR	3951067	ArgumentList	core -> config		3950776	1					
ANR	3951068	Argument	core -> config		3950776	0					
ANR	3951069	PtrMemberAccess	core -> config		3950776	0					
ANR	3951070	Identifier	core		3950776	0					
ANR	3951071	Identifier	config		3950776	1					
ANR	3951072	Argument	"""asm.cmt.right"""		3950776	1					
ANR	3951073	PrimaryExpression	"""asm.cmt.right"""		3950776	0					
ANR	3951074	Argument	( opts & BODY_SUMMARY ) || o_cmtright		3950776	2					
ANR	3951075	OrExpression	( opts & BODY_SUMMARY ) || o_cmtright		3950776	0		||			
ANR	3951076	BitAndExpression	opts & BODY_SUMMARY		3950776	0		&			
ANR	3951077	Identifier	opts		3950776	0					
ANR	3951078	Identifier	BODY_SUMMARY		3950776	1					
ANR	3951079	Identifier	o_cmtright		3950776	1					
ANR	3951080	ExpressionStatement	"r_config_set_i ( core -> config , ""asm.comments"" , ( opts & BODY_SUMMARY ) || o_comments )"	2113:1:53627:53709	3950776	17	True				
ANR	3951081	CallExpression	"r_config_set_i ( core -> config , ""asm.comments"" , ( opts & BODY_SUMMARY ) || o_comments )"		3950776	0					
ANR	3951082	Callee	r_config_set_i		3950776	0					
ANR	3951083	Identifier	r_config_set_i		3950776	0					
ANR	3951084	ArgumentList	core -> config		3950776	1					
ANR	3951085	Argument	core -> config		3950776	0					
ANR	3951086	PtrMemberAccess	core -> config		3950776	0					
ANR	3951087	Identifier	core		3950776	0					
ANR	3951088	Identifier	config		3950776	1					
ANR	3951089	Argument	"""asm.comments"""		3950776	1					
ANR	3951090	PrimaryExpression	"""asm.comments"""		3950776	0					
ANR	3951091	Argument	( opts & BODY_SUMMARY ) || o_comments		3950776	2					
ANR	3951092	OrExpression	( opts & BODY_SUMMARY ) || o_comments		3950776	0		||			
ANR	3951093	BitAndExpression	opts & BODY_SUMMARY		3950776	0		&			
ANR	3951094	Identifier	opts		3950776	0					
ANR	3951095	Identifier	BODY_SUMMARY		3950776	1					
ANR	3951096	Identifier	o_comments		3950776	1					
ANR	3951097	ExpressionStatement	"r_config_set_i ( core -> config , ""asm.bytes"" , ( opts & ( BODY_SUMMARY | BODY_OFFSETS ) ) || o_bytes || o_flags_in_bytes )"	2114:1:53712:53828	3950776	18	True				
ANR	3951098	CallExpression	"r_config_set_i ( core -> config , ""asm.bytes"" , ( opts & ( BODY_SUMMARY | BODY_OFFSETS ) ) || o_bytes || o_flags_in_bytes )"		3950776	0					
ANR	3951099	Callee	r_config_set_i		3950776	0					
ANR	3951100	Identifier	r_config_set_i		3950776	0					
ANR	3951101	ArgumentList	core -> config		3950776	1					
ANR	3951102	Argument	core -> config		3950776	0					
ANR	3951103	PtrMemberAccess	core -> config		3950776	0					
ANR	3951104	Identifier	core		3950776	0					
ANR	3951105	Identifier	config		3950776	1					
ANR	3951106	Argument	"""asm.bytes"""		3950776	1					
ANR	3951107	PrimaryExpression	"""asm.bytes"""		3950776	0					
ANR	3951108	Argument	( opts & ( BODY_SUMMARY | BODY_OFFSETS ) ) || o_bytes || o_flags_in_bytes		3950776	2					
ANR	3951109	OrExpression	( opts & ( BODY_SUMMARY | BODY_OFFSETS ) ) || o_bytes || o_flags_in_bytes		3950776	0		||			
ANR	3951110	BitAndExpression	opts & ( BODY_SUMMARY | BODY_OFFSETS )		3950776	0		&			
ANR	3951111	Identifier	opts		3950776	0					
ANR	3951112	InclusiveOrExpression	BODY_SUMMARY | BODY_OFFSETS		3950776	1		|			
ANR	3951113	Identifier	BODY_SUMMARY		3950776	0					
ANR	3951114	Identifier	BODY_OFFSETS		3950776	1					
ANR	3951115	OrExpression	o_bytes || o_flags_in_bytes		3950776	1		||			
ANR	3951116	Identifier	o_bytes		3950776	0					
ANR	3951117	Identifier	o_flags_in_bytes		3950776	1					
ANR	3951118	ExpressionStatement	"r_config_set_i ( core -> config , ""asm.bb.middle"" , false )"	2116:1:53831:53884	3950776	19	True				
ANR	3951119	CallExpression	"r_config_set_i ( core -> config , ""asm.bb.middle"" , false )"		3950776	0					
ANR	3951120	Callee	r_config_set_i		3950776	0					
ANR	3951121	Identifier	r_config_set_i		3950776	0					
ANR	3951122	ArgumentList	core -> config		3950776	1					
ANR	3951123	Argument	core -> config		3950776	0					
ANR	3951124	PtrMemberAccess	core -> config		3950776	0					
ANR	3951125	Identifier	core		3950776	0					
ANR	3951126	Identifier	config		3950776	1					
ANR	3951127	Argument	"""asm.bb.middle"""		3950776	1					
ANR	3951128	PrimaryExpression	"""asm.bb.middle"""		3950776	0					
ANR	3951129	Argument	false		3950776	2					
ANR	3951130	Identifier	false		3950776	0					
ANR	3951131	ExpressionStatement	core -> print -> cur_enabled = false	2117:1:53887:53919	3950776	20	True				
ANR	3951132	AssignmentExpression	core -> print -> cur_enabled = false		3950776	0		=			
ANR	3951133	PtrMemberAccess	core -> print -> cur_enabled		3950776	0					
ANR	3951134	PtrMemberAccess	core -> print		3950776	0					
ANR	3951135	Identifier	core		3950776	0					
ANR	3951136	Identifier	print		3950776	1					
ANR	3951137	Identifier	cur_enabled		3950776	1					
ANR	3951138	Identifier	false		3950776	1					
ANR	3951139	IfStatement	if ( opts & BODY_OFFSETS || opts & BODY_SUMMARY || o_graph_offset )		3950776	21					
ANR	3951140	Condition	opts & BODY_OFFSETS || opts & BODY_SUMMARY || o_graph_offset	2119:5:53927:53986	3950776	0	True				
ANR	3951141	OrExpression	opts & BODY_OFFSETS || opts & BODY_SUMMARY || o_graph_offset		3950776	0		||			
ANR	3951142	BitAndExpression	opts & BODY_OFFSETS		3950776	0		&			
ANR	3951143	Identifier	opts		3950776	0					
ANR	3951144	Identifier	BODY_OFFSETS		3950776	1					
ANR	3951145	OrExpression	opts & BODY_SUMMARY || o_graph_offset		3950776	1		||			
ANR	3951146	BitAndExpression	opts & BODY_SUMMARY		3950776	0		&			
ANR	3951147	Identifier	opts		3950776	0					
ANR	3951148	Identifier	BODY_SUMMARY		3950776	1					
ANR	3951149	Identifier	o_graph_offset		3950776	1					
ANR	3951150	CompoundStatement		40:67:1792:1792	3950776	1					
ANR	3951151	ExpressionStatement	"r_config_set_i ( core -> config , ""asm.offset"" , true )"	2120:2:53993:54042	3950776	0	True				
ANR	3951152	CallExpression	"r_config_set_i ( core -> config , ""asm.offset"" , true )"		3950776	0					
ANR	3951153	Callee	r_config_set_i		3950776	0					
ANR	3951154	Identifier	r_config_set_i		3950776	0					
ANR	3951155	ArgumentList	core -> config		3950776	1					
ANR	3951156	Argument	core -> config		3950776	0					
ANR	3951157	PtrMemberAccess	core -> config		3950776	0					
ANR	3951158	Identifier	core		3950776	0					
ANR	3951159	Identifier	config		3950776	1					
ANR	3951160	Argument	"""asm.offset"""		3950776	1					
ANR	3951161	PrimaryExpression	"""asm.offset"""		3950776	0					
ANR	3951162	Argument	true		3950776	2					
ANR	3951163	Identifier	true		3950776	0					
ANR	3951164	ElseStatement	else		3950776	0					
ANR	3951165	CompoundStatement		42:8:1855:1855	3950776	0					
ANR	3951166	ExpressionStatement	"r_config_set_i ( core -> config , ""asm.offset"" , false )"	2122:2:54056:54106	3950776	0	True				
ANR	3951167	CallExpression	"r_config_set_i ( core -> config , ""asm.offset"" , false )"		3950776	0					
ANR	3951168	Callee	r_config_set_i		3950776	0					
ANR	3951169	Identifier	r_config_set_i		3950776	0					
ANR	3951170	ArgumentList	core -> config		3950776	1					
ANR	3951171	Argument	core -> config		3950776	0					
ANR	3951172	PtrMemberAccess	core -> config		3950776	0					
ANR	3951173	Identifier	core		3950776	0					
ANR	3951174	Identifier	config		3950776	1					
ANR	3951175	Argument	"""asm.offset"""		3950776	1					
ANR	3951176	PrimaryExpression	"""asm.offset"""		3950776	0					
ANR	3951177	Argument	false		3950776	2					
ANR	3951178	Identifier	false		3950776	0					
ANR	3951179	IdentifierDeclStatement	"bool html = r_config_get_i ( core -> config , ""scr.html"" ) ;"	2125:1:54113:54166	3950776	22	True				
ANR	3951180	IdentifierDecl	"html = r_config_get_i ( core -> config , ""scr.html"" )"		3950776	0					
ANR	3951181	IdentifierDeclType	bool		3950776	0					
ANR	3951182	Identifier	html		3950776	1					
ANR	3951183	AssignmentExpression	"html = r_config_get_i ( core -> config , ""scr.html"" )"		3950776	2		=			
ANR	3951184	Identifier	html		3950776	0					
ANR	3951185	CallExpression	"r_config_get_i ( core -> config , ""scr.html"" )"		3950776	1					
ANR	3951186	Callee	r_config_get_i		3950776	0					
ANR	3951187	Identifier	r_config_get_i		3950776	0					
ANR	3951188	ArgumentList	core -> config		3950776	1					
ANR	3951189	Argument	core -> config		3950776	0					
ANR	3951190	PtrMemberAccess	core -> config		3950776	0					
ANR	3951191	Identifier	core		3950776	0					
ANR	3951192	Identifier	config		3950776	1					
ANR	3951193	Argument	"""scr.html"""		3950776	1					
ANR	3951194	PrimaryExpression	"""scr.html"""		3950776	0					
ANR	3951195	ExpressionStatement	"r_config_set_i ( core -> config , ""scr.html"" , 0 )"	2126:1:54169:54213	3950776	23	True				
ANR	3951196	CallExpression	"r_config_set_i ( core -> config , ""scr.html"" , 0 )"		3950776	0					
ANR	3951197	Callee	r_config_set_i		3950776	0					
ANR	3951198	Identifier	r_config_set_i		3950776	0					
ANR	3951199	ArgumentList	core -> config		3950776	1					
ANR	3951200	Argument	core -> config		3950776	0					
ANR	3951201	PtrMemberAccess	core -> config		3950776	0					
ANR	3951202	Identifier	core		3950776	0					
ANR	3951203	Identifier	config		3950776	1					
ANR	3951204	Argument	"""scr.html"""		3950776	1					
ANR	3951205	PrimaryExpression	"""scr.html"""		3950776	0					
ANR	3951206	Argument	0		3950776	2					
ANR	3951207	PrimaryExpression	0		3950776	0					
ANR	3951208	Statement	body	2127:1:54216:54219	3950776	24	True				
ANR	3951209	Statement	=	2127:6:54221:54221	3950776	25	True				
ANR	3951210	Statement	r_core_cmd_strf	2127:8:54223:54237	3950776	26	True				
ANR	3951211	Statement	(	2127:24:54239:54239	3950776	27	True				
ANR	3951212	Statement	core	2127:25:54240:54243	3950776	28	True				
ANR	3951213	Statement	","	2127:29:54244:54244	3950776	29	True				
ANR	3951214	Statement	"""%s %d @ 0x%08"""	2128:3:54249:54263	3950776	30	True				
ANR	3951215	Statement	PFMT64x	2128:18:54264:54270	3950776	31	True				
ANR	3951216	Statement	","	2128:25:54271:54271	3950776	32	True				
ANR	3951217	Statement	cmd	2128:27:54273:54275	3950776	33	True				
ANR	3951218	Statement	","	2128:30:54276:54276	3950776	34	True				
ANR	3951219	Statement	size	2128:32:54278:54281	3950776	35	True				
ANR	3951220	Statement	","	2128:36:54282:54282	3950776	36	True				
ANR	3951221	Statement	addr	2128:38:54284:54287	3950776	37	True				
ANR	3951222	Statement	)	2128:42:54288:54288	3950776	38	True				
ANR	3951223	ExpressionStatement		2128:43:54289:54289	3950776	39	True				
ANR	3951224	ExpressionStatement	"r_config_set_i ( core -> config , ""scr.html"" , html )"	2129:1:54292:54339	3950776	40	True				
ANR	3951225	CallExpression	"r_config_set_i ( core -> config , ""scr.html"" , html )"		3950776	0					
ANR	3951226	Callee	r_config_set_i		3950776	0					
ANR	3951227	Identifier	r_config_set_i		3950776	0					
ANR	3951228	ArgumentList	core -> config		3950776	1					
ANR	3951229	Argument	core -> config		3950776	0					
ANR	3951230	PtrMemberAccess	core -> config		3950776	0					
ANR	3951231	Identifier	core		3950776	0					
ANR	3951232	Identifier	config		3950776	1					
ANR	3951233	Argument	"""scr.html"""		3950776	1					
ANR	3951234	PrimaryExpression	"""scr.html"""		3950776	0					
ANR	3951235	Argument	html		3950776	2					
ANR	3951236	Identifier	html		3950776	0					
ANR	3951237	ExpressionStatement	core -> print -> cur_enabled = o_cursor	2132:1:54372:54407	3950776	41	True				
ANR	3951238	AssignmentExpression	core -> print -> cur_enabled = o_cursor		3950776	0		=			
ANR	3951239	PtrMemberAccess	core -> print -> cur_enabled		3950776	0					
ANR	3951240	PtrMemberAccess	core -> print		3950776	0					
ANR	3951241	Identifier	core		3950776	0					
ANR	3951242	Identifier	print		3950776	1					
ANR	3951243	Identifier	cur_enabled		3950776	1					
ANR	3951244	Identifier	o_cursor		3950776	1					
ANR	3951245	ExpressionStatement	r_config_hold_restore ( hc )	2133:1:54410:54436	3950776	42	True				
ANR	3951246	CallExpression	r_config_hold_restore ( hc )		3950776	0					
ANR	3951247	Callee	r_config_hold_restore		3950776	0					
ANR	3951248	Identifier	r_config_hold_restore		3950776	0					
ANR	3951249	ArgumentList	hc		3950776	1					
ANR	3951250	Argument	hc		3950776	0					
ANR	3951251	Identifier	hc		3950776	0					
ANR	3951252	ExpressionStatement	r_config_hold_free ( hc )	2134:1:54439:54462	3950776	43	True				
ANR	3951253	CallExpression	r_config_hold_free ( hc )		3950776	0					
ANR	3951254	Callee	r_config_hold_free		3950776	0					
ANR	3951255	Identifier	r_config_hold_free		3950776	0					
ANR	3951256	ArgumentList	hc		3950776	1					
ANR	3951257	Argument	hc		3950776	0					
ANR	3951258	Identifier	hc		3950776	0					
ANR	3951259	ReturnStatement	return body ;	2135:1:54465:54476	3950776	44	True				
ANR	3951260	Identifier	body		3950776	0					
ANR	3951261	ReturnType	static char *		3950776	1					
ANR	3951262	Identifier	get_body		3950776	2					
ANR	3951263	ParameterList	"RCore * core , ut64 addr , int size , int opts"		3950776	3					
ANR	3951264	Parameter	RCore * core	2080:22:52152:52162	3950776	0	True				
ANR	3951265	ParameterType	RCore *		3950776	0					
ANR	3951266	Identifier	core		3950776	1					
ANR	3951267	Parameter	ut64 addr	2080:35:52165:52173	3950776	1	True				
ANR	3951268	ParameterType	ut64		3950776	0					
ANR	3951269	Identifier	addr		3950776	1					
ANR	3951270	Parameter	int size	2080:46:52176:52183	3950776	2	True				
ANR	3951271	ParameterType	int		3950776	0					
ANR	3951272	Identifier	size		3950776	1					
ANR	3951273	Parameter	int opts	2080:56:52186:52193	3950776	3	True				
ANR	3951274	ParameterType	int		3950776	0					
ANR	3951275	Identifier	opts		3950776	1					
ANR	3951276	CFGEntryNode	ENTRY		3950776		True				
ANR	3951277	CFGExitNode	EXIT		3950776		True				
ANR	3951278	Symbol	* core		3950776						
ANR	3951279	Symbol	body		3950776						
ANR	3951280	Symbol	o_cursor		3950776						
ANR	3951281	Symbol	o_comments		3950776						
ANR	3951282	Symbol	o_flags_in_bytes		3950776						
ANR	3951283	Symbol	opts		3950776						
ANR	3951284	Symbol	r_config_hold_new		3950776						
ANR	3951285	Symbol	o_bytes		3950776						
ANR	3951286	Symbol	r_str_replace		3950776						
ANR	3951287	Symbol	html		3950776						
ANR	3951288	Symbol	addr		3950776						
ANR	3951289	Symbol	* * core		3950776						
ANR	3951290	Symbol	core -> config		3950776						
ANR	3951291	Symbol	o_cmtright		3950776						
ANR	3951292	Symbol	res		3950776						
ANR	3951293	Symbol	NULL		3950776						
ANR	3951294	Symbol	r_str_trim_lines		3950776						
ANR	3951295	Symbol	BODY_SUMMARY		3950776						
ANR	3951296	Symbol	false		3950776						
ANR	3951297	Symbol	core		3950776						
ANR	3951298	Symbol	* core -> print		3950776						
ANR	3951299	Symbol	size		3950776						
ANR	3951300	Symbol	o_graph_offset		3950776						
ANR	3951301	Symbol	BODY_COMMENTS		3950776						
ANR	3951302	Symbol	r_config_get_i		3950776						
ANR	3951303	Symbol	true		3950776						
ANR	3951304	Symbol	hc		3950776						
ANR	3951305	Symbol	cmd		3950776						
ANR	3951306	Symbol	core -> print		3950776						
ANR	3951307	Symbol	core -> print -> cur_enabled		3950776						
ANR	3951308	Symbol	BODY_OFFSETS		3950776						
ANR	3951309	Function	get_bb_body	2138:0:54481:55975							
ANR	3951310	FunctionDef	"get_bb_body (RCore * core , RAnalBlock * b , int opts , RAnalFunction * fcn , bool emu , ut64 saved_gp , ut8 * saved_arena)"		3951309	0					
ANR	3951311	CompoundStatement		2138:126:54607:55975	3951309	0					
ANR	3951312	IfStatement	if ( emu )		3951309	0					
ANR	3951313	Condition	emu	2139:5:54614:54616	3951309	0	True				
ANR	3951314	Identifier	emu		3951309	0					
ANR	3951315	CompoundStatement		2:10:11:11	3951309	1					
ANR	3951316	ExpressionStatement	core -> anal -> gp = saved_gp	2140:2:54623:54648	3951309	0	True				
ANR	3951317	AssignmentExpression	core -> anal -> gp = saved_gp		3951309	0		=			
ANR	3951318	PtrMemberAccess	core -> anal -> gp		3951309	0					
ANR	3951319	PtrMemberAccess	core -> anal		3951309	0					
ANR	3951320	Identifier	core		3951309	0					
ANR	3951321	Identifier	anal		3951309	1					
ANR	3951322	Identifier	gp		3951309	1					
ANR	3951323	Identifier	saved_gp		3951309	1					
ANR	3951324	IfStatement	if ( b -> parent_reg_arena )		3951309	1					
ANR	3951325	Condition	b -> parent_reg_arena	2141:6:54656:54674	3951309	0	True				
ANR	3951326	PtrMemberAccess	b -> parent_reg_arena		3951309	0					
ANR	3951327	Identifier	b		3951309	0					
ANR	3951328	Identifier	parent_reg_arena		3951309	1					
ANR	3951329	CompoundStatement		7:3:167:211	3951309	1					
ANR	3951330	ExpressionStatement	"r_reg_arena_poke ( core -> anal -> reg , b -> parent_reg_arena )"	2142:3:54682:54737	3951309	0	True				
ANR	3951331	CallExpression	"r_reg_arena_poke ( core -> anal -> reg , b -> parent_reg_arena )"		3951309	0					
ANR	3951332	Callee	r_reg_arena_poke		3951309	0					
ANR	3951333	Identifier	r_reg_arena_poke		3951309	0					
ANR	3951334	ArgumentList	core -> anal -> reg		3951309	1					
ANR	3951335	Argument	core -> anal -> reg		3951309	0					
ANR	3951336	PtrMemberAccess	core -> anal -> reg		3951309	0					
ANR	3951337	PtrMemberAccess	core -> anal		3951309	0					
ANR	3951338	Identifier	core		3951309	0					
ANR	3951339	Identifier	anal		3951309	1					
ANR	3951340	Identifier	reg		3951309	1					
ANR	3951341	Argument	b -> parent_reg_arena		3951309	1					
ANR	3951342	PtrMemberAccess	b -> parent_reg_arena		3951309	0					
ANR	3951343	Identifier	b		3951309	0					
ANR	3951344	Identifier	parent_reg_arena		3951309	1					
ANR	3951345	ExpressionStatement	R_FREE ( b -> parent_reg_arena )	2143:3:54742:54770	3951309	1	True				
ANR	3951346	CallExpression	R_FREE ( b -> parent_reg_arena )		3951309	0					
ANR	3951347	Callee	R_FREE		3951309	0					
ANR	3951348	Identifier	R_FREE		3951309	0					
ANR	3951349	ArgumentList	b -> parent_reg_arena		3951309	1					
ANR	3951350	Argument	b -> parent_reg_arena		3951309	0					
ANR	3951351	PtrMemberAccess	b -> parent_reg_arena		3951309	0					
ANR	3951352	Identifier	b		3951309	0					
ANR	3951353	Identifier	parent_reg_arena		3951309	1					
ANR	3951354	IdentifierDeclStatement	"ut64 gp = r_reg_getv ( core -> anal -> reg , ""gp"" ) ;"	2144:3:54775:54819	3951309	2	True				
ANR	3951355	IdentifierDecl	"gp = r_reg_getv ( core -> anal -> reg , ""gp"" )"		3951309	0					
ANR	3951356	IdentifierDeclType	ut64		3951309	0					
ANR	3951357	Identifier	gp		3951309	1					
ANR	3951358	AssignmentExpression	"gp = r_reg_getv ( core -> anal -> reg , ""gp"" )"		3951309	2		=			
ANR	3951359	Identifier	gp		3951309	0					
ANR	3951360	CallExpression	"r_reg_getv ( core -> anal -> reg , ""gp"" )"		3951309	1					
ANR	3951361	Callee	r_reg_getv		3951309	0					
ANR	3951362	Identifier	r_reg_getv		3951309	0					
ANR	3951363	ArgumentList	core -> anal -> reg		3951309	1					
ANR	3951364	Argument	core -> anal -> reg		3951309	0					
ANR	3951365	PtrMemberAccess	core -> anal -> reg		3951309	0					
ANR	3951366	PtrMemberAccess	core -> anal		3951309	0					
ANR	3951367	Identifier	core		3951309	0					
ANR	3951368	Identifier	anal		3951309	1					
ANR	3951369	Identifier	reg		3951309	1					
ANR	3951370	Argument	"""gp"""		3951309	1					
ANR	3951371	PrimaryExpression	"""gp"""		3951309	0					
ANR	3951372	IfStatement	if ( gp )		3951309	3					
ANR	3951373	Condition	gp	2145:7:54828:54829	3951309	0	True				
ANR	3951374	Identifier	gp		3951309	0					
ANR	3951375	CompoundStatement		8:11:224:224	3951309	1					
ANR	3951376	ExpressionStatement	core -> anal -> gp = gp	2146:4:54838:54857	3951309	0	True				
ANR	3951377	AssignmentExpression	core -> anal -> gp = gp		3951309	0		=			
ANR	3951378	PtrMemberAccess	core -> anal -> gp		3951309	0					
ANR	3951379	PtrMemberAccess	core -> anal		3951309	0					
ANR	3951380	Identifier	core		3951309	0					
ANR	3951381	Identifier	anal		3951309	1					
ANR	3951382	Identifier	gp		3951309	1					
ANR	3951383	Identifier	gp		3951309	1					
ANR	3951384	ElseStatement	else		3951309	0					
ANR	3951385	CompoundStatement		11:9:265:265	3951309	0					
ANR	3951386	ExpressionStatement	"r_reg_arena_poke ( core -> anal -> reg , saved_arena )"	2149:3:54878:54925	3951309	0	True				
ANR	3951387	CallExpression	"r_reg_arena_poke ( core -> anal -> reg , saved_arena )"		3951309	0					
ANR	3951388	Callee	r_reg_arena_poke		3951309	0					
ANR	3951389	Identifier	r_reg_arena_poke		3951309	0					
ANR	3951390	ArgumentList	core -> anal -> reg		3951309	1					
ANR	3951391	Argument	core -> anal -> reg		3951309	0					
ANR	3951392	PtrMemberAccess	core -> anal -> reg		3951309	0					
ANR	3951393	PtrMemberAccess	core -> anal		3951309	0					
ANR	3951394	Identifier	core		3951309	0					
ANR	3951395	Identifier	anal		3951309	1					
ANR	3951396	Identifier	reg		3951309	1					
ANR	3951397	Argument	saved_arena		3951309	1					
ANR	3951398	Identifier	saved_arena		3951309	0					
ANR	3951399	IfStatement	if ( b -> parent_stackptr != INT_MAX )		3951309	1					
ANR	3951400	Condition	b -> parent_stackptr != INT_MAX	2152:5:54939:54967	3951309	0	True				
ANR	3951401	EqualityExpression	b -> parent_stackptr != INT_MAX		3951309	0		!=			
ANR	3951402	PtrMemberAccess	b -> parent_stackptr		3951309	0					
ANR	3951403	Identifier	b		3951309	0					
ANR	3951404	Identifier	parent_stackptr		3951309	1					
ANR	3951405	Identifier	INT_MAX		3951309	1					
ANR	3951406	CompoundStatement		15:36:362:362	3951309	1					
ANR	3951407	ExpressionStatement	core -> anal -> stackptr = b -> parent_stackptr	2153:2:54974:55015	3951309	0	True				
ANR	3951408	AssignmentExpression	core -> anal -> stackptr = b -> parent_stackptr		3951309	0		=			
ANR	3951409	PtrMemberAccess	core -> anal -> stackptr		3951309	0					
ANR	3951410	PtrMemberAccess	core -> anal		3951309	0					
ANR	3951411	Identifier	core		3951309	0					
ANR	3951412	Identifier	anal		3951309	1					
ANR	3951413	Identifier	stackptr		3951309	1					
ANR	3951414	PtrMemberAccess	b -> parent_stackptr		3951309	1					
ANR	3951415	Identifier	b		3951309	0					
ANR	3951416	Identifier	parent_stackptr		3951309	1					
ANR	3951417	IdentifierDeclStatement	"char * body = get_body ( core , b -> addr , b -> size , opts ) ;"	2155:1:55021:55073	3951309	2	True				
ANR	3951418	IdentifierDecl	"* body = get_body ( core , b -> addr , b -> size , opts )"		3951309	0					
ANR	3951419	IdentifierDeclType	char *		3951309	0					
ANR	3951420	Identifier	body		3951309	1					
ANR	3951421	AssignmentExpression	"* body = get_body ( core , b -> addr , b -> size , opts )"		3951309	2		=			
ANR	3951422	Identifier	body		3951309	0					
ANR	3951423	CallExpression	"get_body ( core , b -> addr , b -> size , opts )"		3951309	1					
ANR	3951424	Callee	get_body		3951309	0					
ANR	3951425	Identifier	get_body		3951309	0					
ANR	3951426	ArgumentList	core		3951309	1					
ANR	3951427	Argument	core		3951309	0					
ANR	3951428	Identifier	core		3951309	0					
ANR	3951429	Argument	b -> addr		3951309	1					
ANR	3951430	PtrMemberAccess	b -> addr		3951309	0					
ANR	3951431	Identifier	b		3951309	0					
ANR	3951432	Identifier	addr		3951309	1					
ANR	3951433	Argument	b -> size		3951309	2					
ANR	3951434	PtrMemberAccess	b -> size		3951309	0					
ANR	3951435	Identifier	b		3951309	0					
ANR	3951436	Identifier	size		3951309	1					
ANR	3951437	Argument	opts		3951309	3					
ANR	3951438	Identifier	opts		3951309	0					
ANR	3951439	IfStatement	if ( b -> jump != UT64_MAX )		3951309	3					
ANR	3951440	Condition	b -> jump != UT64_MAX	2156:5:55080:55098	3951309	0	True				
ANR	3951441	EqualityExpression	b -> jump != UT64_MAX		3951309	0		!=			
ANR	3951442	PtrMemberAccess	b -> jump		3951309	0					
ANR	3951443	Identifier	b		3951309	0					
ANR	3951444	Identifier	jump		3951309	1					
ANR	3951445	Identifier	UT64_MAX		3951309	1					
ANR	3951446	CompoundStatement		19:26:493:493	3951309	1					
ANR	3951447	IfStatement	if ( b -> jump > b -> addr )		3951309	0					
ANR	3951448	Condition	b -> jump > b -> addr	2157:6:55109:55125	3951309	0	True				
ANR	3951449	RelationalExpression	b -> jump > b -> addr		3951309	0		>			
ANR	3951450	PtrMemberAccess	b -> jump		3951309	0					
ANR	3951451	Identifier	b		3951309	0					
ANR	3951452	Identifier	jump		3951309	1					
ANR	3951453	PtrMemberAccess	b -> addr		3951309	1					
ANR	3951454	Identifier	b		3951309	0					
ANR	3951455	Identifier	addr		3951309	1					
ANR	3951456	CompoundStatement		21:3:525:575	3951309	1					
ANR	3951457	IdentifierDeclStatement	"RAnalBlock * jumpbb = r_anal_bb_get_jumpbb ( fcn , b ) ;"	2158:3:55133:55183	3951309	0	True				
ANR	3951458	IdentifierDecl	"* jumpbb = r_anal_bb_get_jumpbb ( fcn , b )"		3951309	0					
ANR	3951459	IdentifierDeclType	RAnalBlock *		3951309	0					
ANR	3951460	Identifier	jumpbb		3951309	1					
ANR	3951461	AssignmentExpression	"* jumpbb = r_anal_bb_get_jumpbb ( fcn , b )"		3951309	2		=			
ANR	3951462	Identifier	jumpbb		3951309	0					
ANR	3951463	CallExpression	"r_anal_bb_get_jumpbb ( fcn , b )"		3951309	1					
ANR	3951464	Callee	r_anal_bb_get_jumpbb		3951309	0					
ANR	3951465	Identifier	r_anal_bb_get_jumpbb		3951309	0					
ANR	3951466	ArgumentList	fcn		3951309	1					
ANR	3951467	Argument	fcn		3951309	0					
ANR	3951468	Identifier	fcn		3951309	0					
ANR	3951469	Argument	b		3951309	1					
ANR	3951470	Identifier	b		3951309	0					
ANR	3951471	IfStatement	if ( jumpbb )		3951309	1					
ANR	3951472	Condition	jumpbb	2159:7:55192:55197	3951309	0	True				
ANR	3951473	Identifier	jumpbb		3951309	0					
ANR	3951474	CompoundStatement		22:15:592:592	3951309	1					
ANR	3951475	IfStatement	if ( emu && core -> anal -> last_disasm_reg != NULL && ! jumpbb -> parent_reg_arena )		3951309	0					
ANR	3951476	Condition	emu && core -> anal -> last_disasm_reg != NULL && ! jumpbb -> parent_reg_arena	2160:8:55210:55280	3951309	0	True				
ANR	3951477	AndExpression	emu && core -> anal -> last_disasm_reg != NULL && ! jumpbb -> parent_reg_arena		3951309	0		&&			
ANR	3951478	Identifier	emu		3951309	0					
ANR	3951479	AndExpression	core -> anal -> last_disasm_reg != NULL && ! jumpbb -> parent_reg_arena		3951309	1		&&			
ANR	3951480	EqualityExpression	core -> anal -> last_disasm_reg != NULL		3951309	0		!=			
ANR	3951481	PtrMemberAccess	core -> anal -> last_disasm_reg		3951309	0					
ANR	3951482	PtrMemberAccess	core -> anal		3951309	0					
ANR	3951483	Identifier	core		3951309	0					
ANR	3951484	Identifier	anal		3951309	1					
ANR	3951485	Identifier	last_disasm_reg		3951309	1					
ANR	3951486	Identifier	NULL		3951309	1					
ANR	3951487	UnaryOperationExpression	! jumpbb -> parent_reg_arena		3951309	1					
ANR	3951488	UnaryOperator	!		3951309	0					
ANR	3951489	PtrMemberAccess	jumpbb -> parent_reg_arena		3951309	1					
ANR	3951490	Identifier	jumpbb		3951309	0					
ANR	3951491	Identifier	parent_reg_arena		3951309	1					
ANR	3951492	CompoundStatement		23:81:675:675	3951309	1					
ANR	3951493	ExpressionStatement	"jumpbb -> parent_reg_arena = r_reg_arena_dup ( core -> anal -> reg , core -> anal -> last_disasm_reg )"	2161:5:55290:55379	3951309	0	True				
ANR	3951494	AssignmentExpression	"jumpbb -> parent_reg_arena = r_reg_arena_dup ( core -> anal -> reg , core -> anal -> last_disasm_reg )"		3951309	0		=			
ANR	3951495	PtrMemberAccess	jumpbb -> parent_reg_arena		3951309	0					
ANR	3951496	Identifier	jumpbb		3951309	0					
ANR	3951497	Identifier	parent_reg_arena		3951309	1					
ANR	3951498	CallExpression	"r_reg_arena_dup ( core -> anal -> reg , core -> anal -> last_disasm_reg )"		3951309	1					
ANR	3951499	Callee	r_reg_arena_dup		3951309	0					
ANR	3951500	Identifier	r_reg_arena_dup		3951309	0					
ANR	3951501	ArgumentList	core -> anal -> reg		3951309	1					
ANR	3951502	Argument	core -> anal -> reg		3951309	0					
ANR	3951503	PtrMemberAccess	core -> anal -> reg		3951309	0					
ANR	3951504	PtrMemberAccess	core -> anal		3951309	0					
ANR	3951505	Identifier	core		3951309	0					
ANR	3951506	Identifier	anal		3951309	1					
ANR	3951507	Identifier	reg		3951309	1					
ANR	3951508	Argument	core -> anal -> last_disasm_reg		3951309	1					
ANR	3951509	PtrMemberAccess	core -> anal -> last_disasm_reg		3951309	0					
ANR	3951510	PtrMemberAccess	core -> anal		3951309	0					
ANR	3951511	Identifier	core		3951309	0					
ANR	3951512	Identifier	anal		3951309	1					
ANR	3951513	Identifier	last_disasm_reg		3951309	1					
ANR	3951514	IfStatement	if ( jumpbb -> parent_stackptr == INT_MAX )		3951309	1					
ANR	3951515	Condition	jumpbb -> parent_stackptr == INT_MAX	2163:8:55395:55428	3951309	0	True				
ANR	3951516	EqualityExpression	jumpbb -> parent_stackptr == INT_MAX		3951309	0		==			
ANR	3951517	PtrMemberAccess	jumpbb -> parent_stackptr		3951309	0					
ANR	3951518	Identifier	jumpbb		3951309	0					
ANR	3951519	Identifier	parent_stackptr		3951309	1					
ANR	3951520	Identifier	INT_MAX		3951309	1					
ANR	3951521	CompoundStatement		26:44:823:823	3951309	1					
ANR	3951522	ExpressionStatement	jumpbb -> parent_stackptr = core -> anal -> stackptr + b -> stackptr	2164:5:55438:55498	3951309	0	True				
ANR	3951523	AssignmentExpression	jumpbb -> parent_stackptr = core -> anal -> stackptr + b -> stackptr		3951309	0		=			
ANR	3951524	PtrMemberAccess	jumpbb -> parent_stackptr		3951309	0					
ANR	3951525	Identifier	jumpbb		3951309	0					
ANR	3951526	Identifier	parent_stackptr		3951309	1					
ANR	3951527	AdditiveExpression	core -> anal -> stackptr + b -> stackptr		3951309	1		+			
ANR	3951528	PtrMemberAccess	core -> anal -> stackptr		3951309	0					
ANR	3951529	PtrMemberAccess	core -> anal		3951309	0					
ANR	3951530	Identifier	core		3951309	0					
ANR	3951531	Identifier	anal		3951309	1					
ANR	3951532	Identifier	stackptr		3951309	1					
ANR	3951533	PtrMemberAccess	b -> stackptr		3951309	1					
ANR	3951534	Identifier	b		3951309	0					
ANR	3951535	Identifier	stackptr		3951309	1					
ANR	3951536	IfStatement	if ( b -> fail != UT64_MAX )		3951309	4					
ANR	3951537	Condition	b -> fail != UT64_MAX	2169:5:55523:55541	3951309	0	True				
ANR	3951538	EqualityExpression	b -> fail != UT64_MAX		3951309	0		!=			
ANR	3951539	PtrMemberAccess	b -> fail		3951309	0					
ANR	3951540	Identifier	b		3951309	0					
ANR	3951541	Identifier	fail		3951309	1					
ANR	3951542	Identifier	UT64_MAX		3951309	1					
ANR	3951543	CompoundStatement		32:26:936:936	3951309	1					
ANR	3951544	IfStatement	if ( b -> fail > b -> addr )		3951309	0					
ANR	3951545	Condition	b -> fail > b -> addr	2170:6:55552:55568	3951309	0	True				
ANR	3951546	RelationalExpression	b -> fail > b -> addr		3951309	0		>			
ANR	3951547	PtrMemberAccess	b -> fail		3951309	0					
ANR	3951548	Identifier	b		3951309	0					
ANR	3951549	Identifier	fail		3951309	1					
ANR	3951550	PtrMemberAccess	b -> addr		3951309	1					
ANR	3951551	Identifier	b		3951309	0					
ANR	3951552	Identifier	addr		3951309	1					
ANR	3951553	CompoundStatement		34:3:968:1018	3951309	1					
ANR	3951554	IdentifierDeclStatement	"RAnalBlock * failbb = r_anal_bb_get_failbb ( fcn , b ) ;"	2171:3:55576:55626	3951309	0	True				
ANR	3951555	IdentifierDecl	"* failbb = r_anal_bb_get_failbb ( fcn , b )"		3951309	0					
ANR	3951556	IdentifierDeclType	RAnalBlock *		3951309	0					
ANR	3951557	Identifier	failbb		3951309	1					
ANR	3951558	AssignmentExpression	"* failbb = r_anal_bb_get_failbb ( fcn , b )"		3951309	2		=			
ANR	3951559	Identifier	failbb		3951309	0					
ANR	3951560	CallExpression	"r_anal_bb_get_failbb ( fcn , b )"		3951309	1					
ANR	3951561	Callee	r_anal_bb_get_failbb		3951309	0					
ANR	3951562	Identifier	r_anal_bb_get_failbb		3951309	0					
ANR	3951563	ArgumentList	fcn		3951309	1					
ANR	3951564	Argument	fcn		3951309	0					
ANR	3951565	Identifier	fcn		3951309	0					
ANR	3951566	Argument	b		3951309	1					
ANR	3951567	Identifier	b		3951309	0					
ANR	3951568	IfStatement	if ( failbb )		3951309	1					
ANR	3951569	Condition	failbb	2172:7:55635:55640	3951309	0	True				
ANR	3951570	Identifier	failbb		3951309	0					
ANR	3951571	CompoundStatement		35:15:1035:1035	3951309	1					
ANR	3951572	IfStatement	if ( emu && core -> anal -> last_disasm_reg != NULL && ! failbb -> parent_reg_arena )		3951309	0					
ANR	3951573	Condition	emu && core -> anal -> last_disasm_reg != NULL && ! failbb -> parent_reg_arena	2173:8:55653:55723	3951309	0	True				
ANR	3951574	AndExpression	emu && core -> anal -> last_disasm_reg != NULL && ! failbb -> parent_reg_arena		3951309	0		&&			
ANR	3951575	Identifier	emu		3951309	0					
ANR	3951576	AndExpression	core -> anal -> last_disasm_reg != NULL && ! failbb -> parent_reg_arena		3951309	1		&&			
ANR	3951577	EqualityExpression	core -> anal -> last_disasm_reg != NULL		3951309	0		!=			
ANR	3951578	PtrMemberAccess	core -> anal -> last_disasm_reg		3951309	0					
ANR	3951579	PtrMemberAccess	core -> anal		3951309	0					
ANR	3951580	Identifier	core		3951309	0					
ANR	3951581	Identifier	anal		3951309	1					
ANR	3951582	Identifier	last_disasm_reg		3951309	1					
ANR	3951583	Identifier	NULL		3951309	1					
ANR	3951584	UnaryOperationExpression	! failbb -> parent_reg_arena		3951309	1					
ANR	3951585	UnaryOperator	!		3951309	0					
ANR	3951586	PtrMemberAccess	failbb -> parent_reg_arena		3951309	1					
ANR	3951587	Identifier	failbb		3951309	0					
ANR	3951588	Identifier	parent_reg_arena		3951309	1					
ANR	3951589	CompoundStatement		36:81:1118:1118	3951309	1					
ANR	3951590	ExpressionStatement	"failbb -> parent_reg_arena = r_reg_arena_dup ( core -> anal -> reg , core -> anal -> last_disasm_reg )"	2174:5:55733:55822	3951309	0	True				
ANR	3951591	AssignmentExpression	"failbb -> parent_reg_arena = r_reg_arena_dup ( core -> anal -> reg , core -> anal -> last_disasm_reg )"		3951309	0		=			
ANR	3951592	PtrMemberAccess	failbb -> parent_reg_arena		3951309	0					
ANR	3951593	Identifier	failbb		3951309	0					
ANR	3951594	Identifier	parent_reg_arena		3951309	1					
ANR	3951595	CallExpression	"r_reg_arena_dup ( core -> anal -> reg , core -> anal -> last_disasm_reg )"		3951309	1					
ANR	3951596	Callee	r_reg_arena_dup		3951309	0					
ANR	3951597	Identifier	r_reg_arena_dup		3951309	0					
ANR	3951598	ArgumentList	core -> anal -> reg		3951309	1					
ANR	3951599	Argument	core -> anal -> reg		3951309	0					
ANR	3951600	PtrMemberAccess	core -> anal -> reg		3951309	0					
ANR	3951601	PtrMemberAccess	core -> anal		3951309	0					
ANR	3951602	Identifier	core		3951309	0					
ANR	3951603	Identifier	anal		3951309	1					
ANR	3951604	Identifier	reg		3951309	1					
ANR	3951605	Argument	core -> anal -> last_disasm_reg		3951309	1					
ANR	3951606	PtrMemberAccess	core -> anal -> last_disasm_reg		3951309	0					
ANR	3951607	PtrMemberAccess	core -> anal		3951309	0					
ANR	3951608	Identifier	core		3951309	0					
ANR	3951609	Identifier	anal		3951309	1					
ANR	3951610	Identifier	last_disasm_reg		3951309	1					
ANR	3951611	IfStatement	if ( failbb -> parent_stackptr == INT_MAX )		3951309	1					
ANR	3951612	Condition	failbb -> parent_stackptr == INT_MAX	2176:8:55838:55871	3951309	0	True				
ANR	3951613	EqualityExpression	failbb -> parent_stackptr == INT_MAX		3951309	0		==			
ANR	3951614	PtrMemberAccess	failbb -> parent_stackptr		3951309	0					
ANR	3951615	Identifier	failbb		3951309	0					
ANR	3951616	Identifier	parent_stackptr		3951309	1					
ANR	3951617	Identifier	INT_MAX		3951309	1					
ANR	3951618	CompoundStatement		39:44:1266:1266	3951309	1					
ANR	3951619	ExpressionStatement	failbb -> parent_stackptr = core -> anal -> stackptr + b -> stackptr	2177:5:55881:55941	3951309	0	True				
ANR	3951620	AssignmentExpression	failbb -> parent_stackptr = core -> anal -> stackptr + b -> stackptr		3951309	0		=			
ANR	3951621	PtrMemberAccess	failbb -> parent_stackptr		3951309	0					
ANR	3951622	Identifier	failbb		3951309	0					
ANR	3951623	Identifier	parent_stackptr		3951309	1					
ANR	3951624	AdditiveExpression	core -> anal -> stackptr + b -> stackptr		3951309	1		+			
ANR	3951625	PtrMemberAccess	core -> anal -> stackptr		3951309	0					
ANR	3951626	PtrMemberAccess	core -> anal		3951309	0					
ANR	3951627	Identifier	core		3951309	0					
ANR	3951628	Identifier	anal		3951309	1					
ANR	3951629	Identifier	stackptr		3951309	1					
ANR	3951630	PtrMemberAccess	b -> stackptr		3951309	1					
ANR	3951631	Identifier	b		3951309	0					
ANR	3951632	Identifier	stackptr		3951309	1					
ANR	3951633	ReturnStatement	return body ;	2182:1:55962:55973	3951309	5	True				
ANR	3951634	Identifier	body		3951309	0					
ANR	3951635	ReturnType	static char *		3951309	1					
ANR	3951636	Identifier	get_bb_body		3951309	2					
ANR	3951637	ParameterList	"RCore * core , RAnalBlock * b , int opts , RAnalFunction * fcn , bool emu , ut64 saved_gp , ut8 * saved_arena"		3951309	3					
ANR	3951638	Parameter	RCore * core	2138:25:54506:54516	3951309	0	True				
ANR	3951639	ParameterType	RCore *		3951309	0					
ANR	3951640	Identifier	core		3951309	1					
ANR	3951641	Parameter	RAnalBlock * b	2138:38:54519:54531	3951309	1	True				
ANR	3951642	ParameterType	RAnalBlock *		3951309	0					
ANR	3951643	Identifier	b		3951309	1					
ANR	3951644	Parameter	int opts	2138:53:54534:54541	3951309	2	True				
ANR	3951645	ParameterType	int		3951309	0					
ANR	3951646	Identifier	opts		3951309	1					
ANR	3951647	Parameter	RAnalFunction * fcn	2138:63:54544:54561	3951309	3	True				
ANR	3951648	ParameterType	RAnalFunction *		3951309	0					
ANR	3951649	Identifier	fcn		3951309	1					
ANR	3951650	Parameter	bool emu	2138:83:54564:54571	3951309	4	True				
ANR	3951651	ParameterType	bool		3951309	0					
ANR	3951652	Identifier	emu		3951309	1					
ANR	3951653	Parameter	ut64 saved_gp	2138:93:54574:54586	3951309	5	True				
ANR	3951654	ParameterType	ut64		3951309	0					
ANR	3951655	Identifier	saved_gp		3951309	1					
ANR	3951656	Parameter	ut8 * saved_arena	2138:108:54589:54604	3951309	6	True				
ANR	3951657	ParameterType	ut8 *		3951309	0					
ANR	3951658	Identifier	saved_arena		3951309	1					
ANR	3951659	CFGEntryNode	ENTRY		3951309		True				
ANR	3951660	CFGExitNode	EXIT		3951309		True				
ANR	3951661	Symbol	core -> anal -> reg		3951309						
ANR	3951662	Symbol	jumpbb -> parent_reg_arena		3951309						
ANR	3951663	Symbol	saved_arena		3951309						
ANR	3951664	Symbol	b -> size		3951309						
ANR	3951665	Symbol	* core		3951309						
ANR	3951666	Symbol	failbb		3951309						
ANR	3951667	Symbol	emu		3951309						
ANR	3951668	Symbol	body		3951309						
ANR	3951669	Symbol	core -> anal		3951309						
ANR	3951670	Symbol	b -> addr		3951309						
ANR	3951671	Symbol	core -> anal -> last_disasm_reg		3951309						
ANR	3951672	Symbol	fcn		3951309						
ANR	3951673	Symbol	opts		3951309						
ANR	3951674	Symbol	failbb -> parent_stackptr		3951309						
ANR	3951675	Symbol	INT_MAX		3951309						
ANR	3951676	Symbol	r_anal_bb_get_jumpbb		3951309						
ANR	3951677	Symbol	* jumpbb		3951309						
ANR	3951678	Symbol	r_anal_bb_get_failbb		3951309						
ANR	3951679	Symbol	* failbb		3951309						
ANR	3951680	Symbol	saved_gp		3951309						
ANR	3951681	Symbol	UT64_MAX		3951309						
ANR	3951682	Symbol	* * core		3951309						
ANR	3951683	Symbol	b -> parent_reg_arena		3951309						
ANR	3951684	Symbol	b -> fail		3951309						
ANR	3951685	Symbol	b		3951309						
ANR	3951686	Symbol	get_body		3951309						
ANR	3951687	Symbol	NULL		3951309						
ANR	3951688	Symbol	jumpbb -> parent_stackptr		3951309						
ANR	3951689	Symbol	gp		3951309						
ANR	3951690	Symbol	core -> anal -> gp		3951309						
ANR	3951691	Symbol	jumpbb		3951309						
ANR	3951692	Symbol	* b		3951309						
ANR	3951693	Symbol	b -> jump		3951309						
ANR	3951694	Symbol	core		3951309						
ANR	3951695	Symbol	* core -> anal		3951309						
ANR	3951696	Symbol	r_reg_arena_dup		3951309						
ANR	3951697	Symbol	b -> parent_stackptr		3951309						
ANR	3951698	Symbol	failbb -> parent_reg_arena		3951309						
ANR	3951699	Symbol	core -> anal -> stackptr		3951309						
ANR	3951700	Symbol	b -> stackptr		3951309						
ANR	3951701	Symbol	r_reg_getv		3951309						
ANR	3951702	Function	bbcmp	2185:0:55978:56054							
ANR	3951703	FunctionDef	"bbcmp (RAnalBlock * a , RAnalBlock * b)"		3951702	0					
ANR	3951704	CompoundStatement		2185:47:56025:56054	3951702	0					
ANR	3951705	ReturnStatement	return a -> addr - b -> addr ;	2186:1:56028:56052	3951702	0	True				
ANR	3951706	AdditiveExpression	a -> addr - b -> addr		3951702	0		-			
ANR	3951707	PtrMemberAccess	a -> addr		3951702	0					
ANR	3951708	Identifier	a		3951702	0					
ANR	3951709	Identifier	addr		3951702	1					
ANR	3951710	PtrMemberAccess	b -> addr		3951702	1					
ANR	3951711	Identifier	b		3951702	0					
ANR	3951712	Identifier	addr		3951702	1					
ANR	3951713	ReturnType	static int		3951702	1					
ANR	3951714	Identifier	bbcmp		3951702	2					
ANR	3951715	ParameterList	"RAnalBlock * a , RAnalBlock * b"		3951702	3					
ANR	3951716	Parameter	RAnalBlock * a	2185:17:55995:56007	3951702	0	True				
ANR	3951717	ParameterType	RAnalBlock *		3951702	0					
ANR	3951718	Identifier	a		3951702	1					
ANR	3951719	Parameter	RAnalBlock * b	2185:32:56010:56022	3951702	1	True				
ANR	3951720	ParameterType	RAnalBlock *		3951702	0					
ANR	3951721	Identifier	b		3951702	1					
ANR	3951722	CFGEntryNode	ENTRY		3951702		True				
ANR	3951723	CFGExitNode	EXIT		3951702		True				
ANR	3951724	Symbol	a		3951702						
ANR	3951725	Symbol	b		3951702						
ANR	3951726	Symbol	a -> addr		3951702						
ANR	3951727	Symbol	* a		3951702						
ANR	3951728	Symbol	* b		3951702						
ANR	3951729	Symbol	b -> addr		3951702						
ANR	3951730	Function	get_bbupdate	2189:0:56057:57405							
ANR	3951731	FunctionDef	"get_bbupdate (RAGraph * g , RCore * core , RAnalFunction * fcn)"		3951730	0					
ANR	3951732	CompoundStatement		2189:70:56127:57405	3951730	0					
ANR	3951733	IdentifierDeclStatement	RAnalBlock * bb ;	2190:1:56130:56144	3951730	0	True				
ANR	3951734	IdentifierDecl	* bb		3951730	0					
ANR	3951735	IdentifierDeclType	RAnalBlock *		3951730	0					
ANR	3951736	Identifier	bb		3951730	1					
ANR	3951737	IdentifierDeclStatement	RListIter * iter ;	2191:1:56147:56162	3951730	1	True				
ANR	3951738	IdentifierDecl	* iter		3951730	0					
ANR	3951739	IdentifierDeclType	RListIter *		3951730	0					
ANR	3951740	Identifier	iter		3951730	1					
ANR	3951741	IdentifierDeclStatement	"bool emu = r_config_get_i ( core -> config , ""asm.emu"" ) ;"	2192:1:56165:56216	3951730	2	True				
ANR	3951742	IdentifierDecl	"emu = r_config_get_i ( core -> config , ""asm.emu"" )"		3951730	0					
ANR	3951743	IdentifierDeclType	bool		3951730	0					
ANR	3951744	Identifier	emu		3951730	1					
ANR	3951745	AssignmentExpression	"emu = r_config_get_i ( core -> config , ""asm.emu"" )"		3951730	2		=			
ANR	3951746	Identifier	emu		3951730	0					
ANR	3951747	CallExpression	"r_config_get_i ( core -> config , ""asm.emu"" )"		3951730	1					
ANR	3951748	Callee	r_config_get_i		3951730	0					
ANR	3951749	Identifier	r_config_get_i		3951730	0					
ANR	3951750	ArgumentList	core -> config		3951730	1					
ANR	3951751	Argument	core -> config		3951730	0					
ANR	3951752	PtrMemberAccess	core -> config		3951730	0					
ANR	3951753	Identifier	core		3951730	0					
ANR	3951754	Identifier	config		3951730	1					
ANR	3951755	Argument	"""asm.emu"""		3951730	1					
ANR	3951756	PrimaryExpression	"""asm.emu"""		3951730	0					
ANR	3951757	IdentifierDeclStatement	ut64 saved_gp = core -> anal -> gp ;	2193:1:56219:56249	3951730	3	True				
ANR	3951758	IdentifierDecl	saved_gp = core -> anal -> gp		3951730	0					
ANR	3951759	IdentifierDeclType	ut64		3951730	0					
ANR	3951760	Identifier	saved_gp		3951730	1					
ANR	3951761	AssignmentExpression	saved_gp = core -> anal -> gp		3951730	2		=			
ANR	3951762	Identifier	saved_gp		3951730	0					
ANR	3951763	PtrMemberAccess	core -> anal -> gp		3951730	1					
ANR	3951764	PtrMemberAccess	core -> anal		3951730	0					
ANR	3951765	Identifier	core		3951730	0					
ANR	3951766	Identifier	anal		3951730	1					
ANR	3951767	Identifier	gp		3951730	1					
ANR	3951768	IdentifierDeclStatement	ut8 * saved_arena = NULL ;	2194:1:56252:56275	3951730	4	True				
ANR	3951769	IdentifierDecl	* saved_arena = NULL		3951730	0					
ANR	3951770	IdentifierDeclType	ut8 *		3951730	0					
ANR	3951771	Identifier	saved_arena		3951730	1					
ANR	3951772	AssignmentExpression	* saved_arena = NULL		3951730	2		=			
ANR	3951773	Identifier	NULL		3951730	0					
ANR	3951774	Identifier	NULL		3951730	1					
ANR	3951775	IdentifierDeclStatement	int saved_stackptr = core -> anal -> stackptr ;	2195:1:56278:56319	3951730	5	True				
ANR	3951776	IdentifierDecl	saved_stackptr = core -> anal -> stackptr		3951730	0					
ANR	3951777	IdentifierDeclType	int		3951730	0					
ANR	3951778	Identifier	saved_stackptr		3951730	1					
ANR	3951779	AssignmentExpression	saved_stackptr = core -> anal -> stackptr		3951730	2		=			
ANR	3951780	Identifier	saved_stackptr		3951730	0					
ANR	3951781	PtrMemberAccess	core -> anal -> stackptr		3951730	1					
ANR	3951782	PtrMemberAccess	core -> anal		3951730	0					
ANR	3951783	Identifier	core		3951730	0					
ANR	3951784	Identifier	anal		3951730	1					
ANR	3951785	Identifier	stackptr		3951730	1					
ANR	3951786	IdentifierDeclStatement	char * shortcut = 0 ;	2196:1:56322:56340	3951730	6	True				
ANR	3951787	IdentifierDecl	* shortcut = 0		3951730	0					
ANR	3951788	IdentifierDeclType	char *		3951730	0					
ANR	3951789	Identifier	shortcut		3951730	1					
ANR	3951790	AssignmentExpression	* shortcut = 0		3951730	2		=			
ANR	3951791	Identifier	shortcut		3951730	0					
ANR	3951792	PrimaryExpression	0		3951730	1					
ANR	3951793	IdentifierDeclStatement	int shortcuts = 0 ;	2197:1:56343:56360	3951730	7	True				
ANR	3951794	IdentifierDecl	shortcuts = 0		3951730	0					
ANR	3951795	IdentifierDeclType	int		3951730	0					
ANR	3951796	Identifier	shortcuts		3951730	1					
ANR	3951797	AssignmentExpression	shortcuts = 0		3951730	2		=			
ANR	3951798	Identifier	shortcuts		3951730	0					
ANR	3951799	PrimaryExpression	0		3951730	1					
ANR	3951800	ExpressionStatement	core -> keep_asmqjmps = false	2198:1:56363:56390	3951730	8	True				
ANR	3951801	AssignmentExpression	core -> keep_asmqjmps = false		3951730	0		=			
ANR	3951802	PtrMemberAccess	core -> keep_asmqjmps		3951730	0					
ANR	3951803	Identifier	core		3951730	0					
ANR	3951804	Identifier	keep_asmqjmps		3951730	1					
ANR	3951805	Identifier	false		3951730	1					
ANR	3951806	IfStatement	if ( emu )		3951730	9					
ANR	3951807	Condition	emu	2200:5:56398:56400	3951730	0	True				
ANR	3951808	Identifier	emu		3951730	0					
ANR	3951809	CompoundStatement		12:10:275:275	3951730	1					
ANR	3951810	ExpressionStatement	saved_arena = r_reg_arena_peek ( core -> anal -> reg )	2201:2:56407:56455	3951730	0	True				
ANR	3951811	AssignmentExpression	saved_arena = r_reg_arena_peek ( core -> anal -> reg )		3951730	0		=			
ANR	3951812	Identifier	saved_arena		3951730	0					
ANR	3951813	CallExpression	r_reg_arena_peek ( core -> anal -> reg )		3951730	1					
ANR	3951814	Callee	r_reg_arena_peek		3951730	0					
ANR	3951815	Identifier	r_reg_arena_peek		3951730	0					
ANR	3951816	ArgumentList	core -> anal -> reg		3951730	1					
ANR	3951817	Argument	core -> anal -> reg		3951730	0					
ANR	3951818	PtrMemberAccess	core -> anal -> reg		3951730	0					
ANR	3951819	PtrMemberAccess	core -> anal		3951730	0					
ANR	3951820	Identifier	core		3951730	0					
ANR	3951821	Identifier	anal		3951730	1					
ANR	3951822	Identifier	reg		3951730	1					
ANR	3951823	IfStatement	if ( ! fcn )		3951730	10					
ANR	3951824	Condition	! fcn	2203:5:56465:56468	3951730	0	True				
ANR	3951825	UnaryOperationExpression	! fcn		3951730	0					
ANR	3951826	UnaryOperator	!		3951730	0					
ANR	3951827	Identifier	fcn		3951730	1					
ANR	3951828	CompoundStatement		15:11:343:343	3951730	1					
ANR	3951829	ExpressionStatement	R_FREE ( saved_arena )	2204:2:56475:56495	3951730	0	True				
ANR	3951830	CallExpression	R_FREE ( saved_arena )		3951730	0					
ANR	3951831	Callee	R_FREE		3951730	0					
ANR	3951832	Identifier	R_FREE		3951730	0					
ANR	3951833	ArgumentList	saved_arena		3951730	1					
ANR	3951834	Argument	saved_arena		3951730	0					
ANR	3951835	Identifier	saved_arena		3951730	0					
ANR	3951836	ReturnStatement	return ;	2205:2:56499:56505	3951730	1	True				
ANR	3951837	ExpressionStatement	"r_list_sort ( fcn -> bbs , ( RListComparator ) bbcmp )"	2207:1:56511:56558	3951730	11	True				
ANR	3951838	CallExpression	"r_list_sort ( fcn -> bbs , ( RListComparator ) bbcmp )"		3951730	0					
ANR	3951839	Callee	r_list_sort		3951730	0					
ANR	3951840	Identifier	r_list_sort		3951730	0					
ANR	3951841	ArgumentList	fcn -> bbs		3951730	1					
ANR	3951842	Argument	fcn -> bbs		3951730	0					
ANR	3951843	PtrMemberAccess	fcn -> bbs		3951730	0					
ANR	3951844	Identifier	fcn		3951730	0					
ANR	3951845	Identifier	bbs		3951730	1					
ANR	3951846	Argument	( RListComparator ) bbcmp		3951730	1					
ANR	3951847	CastExpression	( RListComparator ) bbcmp		3951730	0					
ANR	3951848	CastTarget	RListComparator		3951730	0					
ANR	3951849	Identifier	bbcmp		3951730	1					
ANR	3951850	ExpressionStatement	"shortcuts = r_config_get_i ( core -> config , ""graph.nodejmps"" )"	2209:1:56562:56621	3951730	12	True				
ANR	3951851	AssignmentExpression	"shortcuts = r_config_get_i ( core -> config , ""graph.nodejmps"" )"		3951730	0		=			
ANR	3951852	Identifier	shortcuts		3951730	0					
ANR	3951853	CallExpression	"r_config_get_i ( core -> config , ""graph.nodejmps"" )"		3951730	1					
ANR	3951854	Callee	r_config_get_i		3951730	0					
ANR	3951855	Identifier	r_config_get_i		3951730	0					
ANR	3951856	ArgumentList	core -> config		3951730	1					
ANR	3951857	Argument	core -> config		3951730	0					
ANR	3951858	PtrMemberAccess	core -> config		3951730	0					
ANR	3951859	Identifier	core		3951730	0					
ANR	3951860	Identifier	config		3951730	1					
ANR	3951861	Argument	"""graph.nodejmps"""		3951730	1					
ANR	3951862	PrimaryExpression	"""graph.nodejmps"""		3951730	0					
ANR	3951863	Statement	r_list_foreach	2210:1:56624:56637	3951730	13	True				
ANR	3951864	Statement	(	2210:16:56639:56639	3951730	14	True				
ANR	3951865	Statement	fcn	2210:17:56640:56642	3951730	15	True				
ANR	3951866	Statement	->	2210:20:56643:56644	3951730	16	True				
ANR	3951867	Statement	bbs	2210:22:56645:56647	3951730	17	True				
ANR	3951868	Statement	","	2210:25:56648:56648	3951730	18	True				
ANR	3951869	Statement	iter	2210:27:56650:56653	3951730	19	True				
ANR	3951870	Statement	","	2210:31:56654:56654	3951730	20	True				
ANR	3951871	Statement	bb	2210:33:56656:56657	3951730	21	True				
ANR	3951872	Statement	)	2210:35:56658:56658	3951730	22	True				
ANR	3951873	CompoundStatement		36:2:907:950	3951730	23					
ANR	3951874	IfStatement	if ( bb -> addr == UT64_MAX )		3951730	0					
ANR	3951875	Condition	bb -> addr == UT64_MAX	2211:6:56668:56687	3951730	0	True				
ANR	3951876	EqualityExpression	bb -> addr == UT64_MAX		3951730	0		==			
ANR	3951877	PtrMemberAccess	bb -> addr		3951730	0					
ANR	3951878	Identifier	bb		3951730	0					
ANR	3951879	Identifier	addr		3951730	1					
ANR	3951880	Identifier	UT64_MAX		3951730	1					
ANR	3951881	CompoundStatement		23:28:562:562	3951730	1					
ANR	3951882	ContinueStatement	continue ;	2212:3:56695:56703	3951730	0	True				
ANR	3951883	IdentifierDeclStatement	"char * body = get_bb_body ( core , bb , mode2opts ( g ) , fcn , emu , saved_gp , saved_arena ) ;"	2214:2:56711:56794	3951730	1	True				
ANR	3951884	IdentifierDecl	"* body = get_bb_body ( core , bb , mode2opts ( g ) , fcn , emu , saved_gp , saved_arena )"		3951730	0					
ANR	3951885	IdentifierDeclType	char *		3951730	0					
ANR	3951886	Identifier	body		3951730	1					
ANR	3951887	AssignmentExpression	"* body = get_bb_body ( core , bb , mode2opts ( g ) , fcn , emu , saved_gp , saved_arena )"		3951730	2		=			
ANR	3951888	Identifier	body		3951730	0					
ANR	3951889	CallExpression	"get_bb_body ( core , bb , mode2opts ( g ) , fcn , emu , saved_gp , saved_arena )"		3951730	1					
ANR	3951890	Callee	get_bb_body		3951730	0					
ANR	3951891	Identifier	get_bb_body		3951730	0					
ANR	3951892	ArgumentList	core		3951730	1					
ANR	3951893	Argument	core		3951730	0					
ANR	3951894	Identifier	core		3951730	0					
ANR	3951895	Argument	bb		3951730	1					
ANR	3951896	Identifier	bb		3951730	0					
ANR	3951897	Argument	mode2opts ( g )		3951730	2					
ANR	3951898	CallExpression	mode2opts ( g )		3951730	0					
ANR	3951899	Callee	mode2opts		3951730	0					
ANR	3951900	Identifier	mode2opts		3951730	0					
ANR	3951901	ArgumentList	g		3951730	1					
ANR	3951902	Argument	g		3951730	0					
ANR	3951903	Identifier	g		3951730	0					
ANR	3951904	Argument	fcn		3951730	3					
ANR	3951905	Identifier	fcn		3951730	0					
ANR	3951906	Argument	emu		3951730	4					
ANR	3951907	Identifier	emu		3951730	0					
ANR	3951908	Argument	saved_gp		3951730	5					
ANR	3951909	Identifier	saved_gp		3951730	0					
ANR	3951910	Argument	saved_arena		3951730	6					
ANR	3951911	Identifier	saved_arena		3951730	0					
ANR	3951912	IdentifierDeclStatement	char * title = get_title ( bb -> addr ) ;	2215:2:56798:56832	3951730	2	True				
ANR	3951913	IdentifierDecl	* title = get_title ( bb -> addr )		3951730	0					
ANR	3951914	IdentifierDeclType	char *		3951730	0					
ANR	3951915	Identifier	title		3951730	1					
ANR	3951916	AssignmentExpression	* title = get_title ( bb -> addr )		3951730	2		=			
ANR	3951917	Identifier	title		3951730	0					
ANR	3951918	CallExpression	get_title ( bb -> addr )		3951730	1					
ANR	3951919	Callee	get_title		3951730	0					
ANR	3951920	Identifier	get_title		3951730	0					
ANR	3951921	ArgumentList	bb -> addr		3951730	1					
ANR	3951922	Argument	bb -> addr		3951730	0					
ANR	3951923	PtrMemberAccess	bb -> addr		3951730	0					
ANR	3951924	Identifier	bb		3951730	0					
ANR	3951925	Identifier	addr		3951730	1					
ANR	3951926	IfStatement	if ( shortcuts )		3951730	3					
ANR	3951927	Condition	shortcuts	2217:6:56841:56849	3951730	0	True				
ANR	3951928	Identifier	shortcuts		3951730	0					
ANR	3951929	CompoundStatement		29:17:724:724	3951730	1					
ANR	3951930	ExpressionStatement	"shortcut = r_core_add_asmqjmp ( core , bb -> addr )"	2218:3:56857:56903	3951730	0	True				
ANR	3951931	AssignmentExpression	"shortcut = r_core_add_asmqjmp ( core , bb -> addr )"		3951730	0		=			
ANR	3951932	Identifier	shortcut		3951730	0					
ANR	3951933	CallExpression	"r_core_add_asmqjmp ( core , bb -> addr )"		3951730	1					
ANR	3951934	Callee	r_core_add_asmqjmp		3951730	0					
ANR	3951935	Identifier	r_core_add_asmqjmp		3951730	0					
ANR	3951936	ArgumentList	core		3951730	1					
ANR	3951937	Argument	core		3951730	0					
ANR	3951938	Identifier	core		3951730	0					
ANR	3951939	Argument	bb -> addr		3951730	1					
ANR	3951940	PtrMemberAccess	bb -> addr		3951730	0					
ANR	3951941	Identifier	bb		3951730	0					
ANR	3951942	Identifier	addr		3951730	1					
ANR	3951943	IfStatement	if ( shortcut )		3951730	1					
ANR	3951944	Condition	shortcut	2219:7:56912:56919	3951730	0	True				
ANR	3951945	Identifier	shortcut		3951730	0					
ANR	3951946	CompoundStatement		31:17:794:794	3951730	1					
ANR	3951947	ExpressionStatement	"sdb_set ( g -> db , sdb_fmt ( ""agraph.nodes.%s.shortcut"" , title ) , shortcut , 0 )"	2220:4:56928:57001	3951730	0	True				
ANR	3951948	CallExpression	"sdb_set ( g -> db , sdb_fmt ( ""agraph.nodes.%s.shortcut"" , title ) , shortcut , 0 )"		3951730	0					
ANR	3951949	Callee	sdb_set		3951730	0					
ANR	3951950	Identifier	sdb_set		3951730	0					
ANR	3951951	ArgumentList	g -> db		3951730	1					
ANR	3951952	Argument	g -> db		3951730	0					
ANR	3951953	PtrMemberAccess	g -> db		3951730	0					
ANR	3951954	Identifier	g		3951730	0					
ANR	3951955	Identifier	db		3951730	1					
ANR	3951956	Argument	"sdb_fmt ( ""agraph.nodes.%s.shortcut"" , title )"		3951730	1					
ANR	3951957	CallExpression	"sdb_fmt ( ""agraph.nodes.%s.shortcut"" , title )"		3951730	0					
ANR	3951958	Callee	sdb_fmt		3951730	0					
ANR	3951959	Identifier	sdb_fmt		3951730	0					
ANR	3951960	ArgumentList	"""agraph.nodes.%s.shortcut"""		3951730	1					
ANR	3951961	Argument	"""agraph.nodes.%s.shortcut"""		3951730	0					
ANR	3951962	PrimaryExpression	"""agraph.nodes.%s.shortcut"""		3951730	0					
ANR	3951963	Argument	title		3951730	1					
ANR	3951964	Identifier	title		3951730	0					
ANR	3951965	Argument	shortcut		3951730	2					
ANR	3951966	Identifier	shortcut		3951730	0					
ANR	3951967	Argument	0		3951730	3					
ANR	3951968	PrimaryExpression	0		3951730	0					
ANR	3951969	ExpressionStatement	free ( shortcut )	2221:4:57007:57022	3951730	1	True				
ANR	3951970	CallExpression	free ( shortcut )		3951730	0					
ANR	3951971	Callee	free		3951730	0					
ANR	3951972	Identifier	free		3951730	0					
ANR	3951973	ArgumentList	shortcut		3951730	1					
ANR	3951974	Argument	shortcut		3951730	0					
ANR	3951975	Identifier	shortcut		3951730	0					
ANR	3951976	IdentifierDeclStatement	"RANode * node = r_agraph_get_node ( g , title ) ;"	2224:2:57035:57078	3951730	4	True				
ANR	3951977	IdentifierDecl	"* node = r_agraph_get_node ( g , title )"		3951730	0					
ANR	3951978	IdentifierDeclType	RANode *		3951730	0					
ANR	3951979	Identifier	node		3951730	1					
ANR	3951980	AssignmentExpression	"* node = r_agraph_get_node ( g , title )"		3951730	2		=			
ANR	3951981	Identifier	node		3951730	0					
ANR	3951982	CallExpression	"r_agraph_get_node ( g , title )"		3951730	1					
ANR	3951983	Callee	r_agraph_get_node		3951730	0					
ANR	3951984	Identifier	r_agraph_get_node		3951730	0					
ANR	3951985	ArgumentList	g		3951730	1					
ANR	3951986	Argument	g		3951730	0					
ANR	3951987	Identifier	g		3951730	0					
ANR	3951988	Argument	title		3951730	1					
ANR	3951989	Identifier	title		3951730	0					
ANR	3951990	IfStatement	if ( node )		3951730	5					
ANR	3951991	Condition	node	2225:6:57086:57089	3951730	0	True				
ANR	3951992	Identifier	node		3951730	0					
ANR	3951993	CompoundStatement		37:12:964:964	3951730	1					
ANR	3951994	ExpressionStatement	free ( node -> body )	2226:3:57097:57114	3951730	0	True				
ANR	3951995	CallExpression	free ( node -> body )		3951730	0					
ANR	3951996	Callee	free		3951730	0					
ANR	3951997	Identifier	free		3951730	0					
ANR	3951998	ArgumentList	node -> body		3951730	1					
ANR	3951999	Argument	node -> body		3951730	0					
ANR	3952000	PtrMemberAccess	node -> body		3951730	0					
ANR	3952001	Identifier	node		3951730	0					
ANR	3952002	Identifier	body		3951730	1					
ANR	3952003	ExpressionStatement	node -> body = body	2227:3:57119:57136	3951730	1	True				
ANR	3952004	AssignmentExpression	node -> body = body		3951730	0		=			
ANR	3952005	PtrMemberAccess	node -> body		3951730	0					
ANR	3952006	Identifier	node		3951730	0					
ANR	3952007	Identifier	body		3951730	1					
ANR	3952008	Identifier	body		3951730	1					
ANR	3952009	ElseStatement	else		3951730	0					
ANR	3952010	CompoundStatement		40:9:1019:1019	3951730	0					
ANR	3952011	ExpressionStatement	free ( body )	2229:3:57152:57163	3951730	0	True				
ANR	3952012	CallExpression	free ( body )		3951730	0					
ANR	3952013	Callee	free		3951730	0					
ANR	3952014	Identifier	free		3951730	0					
ANR	3952015	ArgumentList	body		3951730	1					
ANR	3952016	Argument	body		3951730	0					
ANR	3952017	Identifier	body		3951730	0					
ANR	3952018	ExpressionStatement	free ( title )	2231:2:57171:57183	3951730	6	True				
ANR	3952019	CallExpression	free ( title )		3951730	0					
ANR	3952020	Callee	free		3951730	0					
ANR	3952021	Identifier	free		3951730	0					
ANR	3952022	ArgumentList	title		3951730	1					
ANR	3952023	Argument	title		3951730	0					
ANR	3952024	Identifier	title		3951730	0					
ANR	3952025	ExpressionStatement	core -> keep_asmqjmps = true	2232:2:57187:57213	3951730	7	True				
ANR	3952026	AssignmentExpression	core -> keep_asmqjmps = true		3951730	0		=			
ANR	3952027	PtrMemberAccess	core -> keep_asmqjmps		3951730	0					
ANR	3952028	Identifier	core		3951730	0					
ANR	3952029	Identifier	keep_asmqjmps		3951730	1					
ANR	3952030	Identifier	true		3951730	1					
ANR	3952031	IfStatement	if ( emu )		3951730	24					
ANR	3952032	Condition	emu	2235:5:57224:57226	3951730	0	True				
ANR	3952033	Identifier	emu		3951730	0					
ANR	3952034	CompoundStatement		47:10:1101:1101	3951730	1					
ANR	3952035	ExpressionStatement	core -> anal -> gp = saved_gp	2236:2:57233:57258	3951730	0	True				
ANR	3952036	AssignmentExpression	core -> anal -> gp = saved_gp		3951730	0		=			
ANR	3952037	PtrMemberAccess	core -> anal -> gp		3951730	0					
ANR	3952038	PtrMemberAccess	core -> anal		3951730	0					
ANR	3952039	Identifier	core		3951730	0					
ANR	3952040	Identifier	anal		3951730	1					
ANR	3952041	Identifier	gp		3951730	1					
ANR	3952042	Identifier	saved_gp		3951730	1					
ANR	3952043	IfStatement	if ( saved_arena )		3951730	1					
ANR	3952044	Condition	saved_arena	2237:6:57266:57276	3951730	0	True				
ANR	3952045	Identifier	saved_arena		3951730	0					
ANR	3952046	CompoundStatement		49:19:1151:1151	3951730	1					
ANR	3952047	ExpressionStatement	"r_reg_arena_poke ( core -> anal -> reg , saved_arena )"	2238:3:57284:57331	3951730	0	True				
ANR	3952048	CallExpression	"r_reg_arena_poke ( core -> anal -> reg , saved_arena )"		3951730	0					
ANR	3952049	Callee	r_reg_arena_poke		3951730	0					
ANR	3952050	Identifier	r_reg_arena_poke		3951730	0					
ANR	3952051	ArgumentList	core -> anal -> reg		3951730	1					
ANR	3952052	Argument	core -> anal -> reg		3951730	0					
ANR	3952053	PtrMemberAccess	core -> anal -> reg		3951730	0					
ANR	3952054	PtrMemberAccess	core -> anal		3951730	0					
ANR	3952055	Identifier	core		3951730	0					
ANR	3952056	Identifier	anal		3951730	1					
ANR	3952057	Identifier	reg		3951730	1					
ANR	3952058	Argument	saved_arena		3951730	1					
ANR	3952059	Identifier	saved_arena		3951730	0					
ANR	3952060	ExpressionStatement	R_FREE ( saved_arena )	2239:3:57336:57356	3951730	1	True				
ANR	3952061	CallExpression	R_FREE ( saved_arena )		3951730	0					
ANR	3952062	Callee	R_FREE		3951730	0					
ANR	3952063	Identifier	R_FREE		3951730	0					
ANR	3952064	ArgumentList	saved_arena		3951730	1					
ANR	3952065	Argument	saved_arena		3951730	0					
ANR	3952066	Identifier	saved_arena		3951730	0					
ANR	3952067	ExpressionStatement	core -> anal -> stackptr = saved_stackptr	2242:1:57366:57403	3951730	25	True				
ANR	3952068	AssignmentExpression	core -> anal -> stackptr = saved_stackptr		3951730	0		=			
ANR	3952069	PtrMemberAccess	core -> anal -> stackptr		3951730	0					
ANR	3952070	PtrMemberAccess	core -> anal		3951730	0					
ANR	3952071	Identifier	core		3951730	0					
ANR	3952072	Identifier	anal		3951730	1					
ANR	3952073	Identifier	stackptr		3951730	1					
ANR	3952074	Identifier	saved_stackptr		3951730	1					
ANR	3952075	ReturnType	static void		3951730	1					
ANR	3952076	Identifier	get_bbupdate		3951730	2					
ANR	3952077	ParameterList	"RAGraph * g , RCore * core , RAnalFunction * fcn"		3951730	3					
ANR	3952078	Parameter	RAGraph * g	2189:25:56082:56091	3951730	0	True				
ANR	3952079	ParameterType	RAGraph *		3951730	0					
ANR	3952080	Identifier	g		3951730	1					
ANR	3952081	Parameter	RCore * core	2189:37:56094:56104	3951730	1	True				
ANR	3952082	ParameterType	RCore *		3951730	0					
ANR	3952083	Identifier	core		3951730	1					
ANR	3952084	Parameter	RAnalFunction * fcn	2189:50:56107:56124	3951730	2	True				
ANR	3952085	ParameterType	RAnalFunction *		3951730	0					
ANR	3952086	Identifier	fcn		3951730	1					
ANR	3952087	CFGEntryNode	ENTRY		3951730		True				
ANR	3952088	CFGExitNode	EXIT		3951730		True				
ANR	3952089	CFGErrorNode	ERROR		3951730		True				
ANR	3952090	Symbol	bb		3951730						
ANR	3952091	Symbol	saved_stackptr		3951730						
ANR	3952092	Symbol	core -> anal -> reg		3951730						
ANR	3952093	Symbol	* fcn		3951730						
ANR	3952094	Symbol	saved_arena		3951730						
ANR	3952095	Symbol	g -> db		3951730						
ANR	3952096	Symbol	* core		3951730						
ANR	3952097	Symbol	shortcuts		3951730						
ANR	3952098	Symbol	core -> keep_asmqjmps		3951730						
ANR	3952099	Symbol	bb -> addr		3951730						
ANR	3952100	Symbol	emu		3951730						
ANR	3952101	Symbol	mode2opts		3951730						
ANR	3952102	Symbol	body		3951730						
ANR	3952103	Symbol	title		3951730						
ANR	3952104	Symbol	core -> anal		3951730						
ANR	3952105	Symbol	get_title		3951730						
ANR	3952106	Symbol	get_bb_body		3951730						
ANR	3952107	Symbol	fcn		3951730						
ANR	3952108	Symbol	shortcut		3951730						
ANR	3952109	Symbol	bbcmp		3951730						
ANR	3952110	Symbol	r_agraph_get_node		3951730						
ANR	3952111	Symbol	r_core_add_asmqjmp		3951730						
ANR	3952112	Symbol	node -> body		3951730						
ANR	3952113	Symbol	* node		3951730						
ANR	3952114	Symbol	saved_gp		3951730						
ANR	3952115	Symbol	UT64_MAX		3951730						
ANR	3952116	Symbol	sdb_fmt		3951730						
ANR	3952117	Symbol	* * core		3951730						
ANR	3952118	Symbol	core -> config		3951730						
ANR	3952119	Symbol	NULL		3951730						
ANR	3952120	Symbol	* bb		3951730						
ANR	3952121	Symbol	g		3951730						
ANR	3952122	Symbol	false		3951730						
ANR	3952123	Symbol	iter		3951730						
ANR	3952124	Symbol	core -> anal -> gp		3951730						
ANR	3952125	Symbol	core		3951730						
ANR	3952126	Symbol	* g		3951730						
ANR	3952127	Symbol	node		3951730						
ANR	3952128	Symbol	* core -> anal		3951730						
ANR	3952129	Symbol	fcn -> bbs		3951730						
ANR	3952130	Symbol	r_config_get_i		3951730						
ANR	3952131	Symbol	true		3951730						
ANR	3952132	Symbol	core -> anal -> stackptr		3951730						
ANR	3952133	Symbol	r_reg_arena_peek		3951730						
ANR	3952134	Function	fold_asm_trace	2245:0:57408:57953							
ANR	3952135	FunctionDef	"fold_asm_trace (RCore * core , RAGraph * g)"		3952134	0					
ANR	3952136	CompoundStatement		2245:52:57460:57953	3952134	0					
ANR	3952137	IdentifierDeclStatement	const RList * nodes = r_graph_get_nodes ( g -> graph ) ;	2246:1:57463:57512	3952134	0	True				
ANR	3952138	IdentifierDecl	* nodes = r_graph_get_nodes ( g -> graph )		3952134	0					
ANR	3952139	IdentifierDeclType	const RList *		3952134	0					
ANR	3952140	Identifier	nodes		3952134	1					
ANR	3952141	AssignmentExpression	* nodes = r_graph_get_nodes ( g -> graph )		3952134	2		=			
ANR	3952142	Identifier	nodes		3952134	0					
ANR	3952143	CallExpression	r_graph_get_nodes ( g -> graph )		3952134	1					
ANR	3952144	Callee	r_graph_get_nodes		3952134	0					
ANR	3952145	Identifier	r_graph_get_nodes		3952134	0					
ANR	3952146	ArgumentList	g -> graph		3952134	1					
ANR	3952147	Argument	g -> graph		3952134	0					
ANR	3952148	PtrMemberAccess	g -> graph		3952134	0					
ANR	3952149	Identifier	g		3952134	0					
ANR	3952150	Identifier	graph		3952134	1					
ANR	3952151	IdentifierDeclStatement	RGraphNode * gn ;	2247:1:57515:57529	3952134	1	True				
ANR	3952152	IdentifierDecl	* gn		3952134	0					
ANR	3952153	IdentifierDeclType	RGraphNode *		3952134	0					
ANR	3952154	Identifier	gn		3952134	1					
ANR	3952155	IdentifierDeclStatement	RListIter * it ;	2248:1:57532:57545	3952134	2	True				
ANR	3952156	IdentifierDecl	* it		3952134	0					
ANR	3952157	IdentifierDeclType	RListIter *		3952134	0					
ANR	3952158	Identifier	it		3952134	1					
ANR	3952159	IdentifierDeclStatement	RANode * n ;	2249:1:57548:57557	3952134	3	True				
ANR	3952160	IdentifierDecl	* n		3952134	0					
ANR	3952161	IdentifierDeclType	RANode *		3952134	0					
ANR	3952162	Identifier	n		3952134	1					
ANR	3952163	IdentifierDeclStatement	RANode * curnode = get_anode ( g -> curnode ) ;	2251:1:57561:57601	3952134	4	True				
ANR	3952164	IdentifierDecl	* curnode = get_anode ( g -> curnode )		3952134	0					
ANR	3952165	IdentifierDeclType	RANode *		3952134	0					
ANR	3952166	Identifier	curnode		3952134	1					
ANR	3952167	AssignmentExpression	* curnode = get_anode ( g -> curnode )		3952134	2		=			
ANR	3952168	Identifier	curnode		3952134	0					
ANR	3952169	CallExpression	get_anode ( g -> curnode )		3952134	1					
ANR	3952170	Callee	get_anode		3952134	0					
ANR	3952171	Identifier	get_anode		3952134	0					
ANR	3952172	ArgumentList	g -> curnode		3952134	1					
ANR	3952173	Argument	g -> curnode		3952134	0					
ANR	3952174	PtrMemberAccess	g -> curnode		3952134	0					
ANR	3952175	Identifier	g		3952134	0					
ANR	3952176	Identifier	curnode		3952134	1					
ANR	3952177	Statement	graph_foreach_anode	2252:1:57604:57622	3952134	5	True				
ANR	3952178	Statement	(	2252:21:57624:57624	3952134	6	True				
ANR	3952179	Statement	nodes	2252:22:57625:57629	3952134	7	True				
ANR	3952180	Statement	","	2252:27:57630:57630	3952134	8	True				
ANR	3952181	Statement	it	2252:29:57632:57633	3952134	9	True				
ANR	3952182	Statement	","	2252:31:57634:57634	3952134	10	True				
ANR	3952183	Statement	gn	2252:33:57636:57637	3952134	11	True				
ANR	3952184	Statement	","	2252:35:57638:57638	3952134	12	True				
ANR	3952185	Statement	n	2252:37:57640:57640	3952134	13	True				
ANR	3952186	Statement	)	2252:38:57641:57641	3952134	14	True				
ANR	3952187	CompoundStatement		15:2:322:380	3952134	15					
ANR	3952188	IfStatement	if ( curnode == n )		3952134	0					
ANR	3952189	Condition	curnode == n	2253:6:57651:57662	3952134	0	True				
ANR	3952190	EqualityExpression	curnode == n		3952134	0		==			
ANR	3952191	Identifier	curnode		3952134	0					
ANR	3952192	Identifier	n		3952134	1					
ANR	3952193	CompoundStatement		9:20:204:204	3952134	1					
ANR	3952194	ExpressionStatement	n -> is_mini = false	2254:3:57670:57688	3952134	0	True				
ANR	3952195	AssignmentExpression	n -> is_mini = false		3952134	0		=			
ANR	3952196	PtrMemberAccess	n -> is_mini		3952134	0					
ANR	3952197	Identifier	n		3952134	0					
ANR	3952198	Identifier	is_mini		3952134	1					
ANR	3952199	Identifier	false		3952134	1					
ANR	3952200	ExpressionStatement	g -> need_reload_nodes = true	2255:3:57693:57720	3952134	1	True				
ANR	3952201	AssignmentExpression	g -> need_reload_nodes = true		3952134	0		=			
ANR	3952202	PtrMemberAccess	g -> need_reload_nodes		3952134	0					
ANR	3952203	Identifier	g		3952134	0					
ANR	3952204	Identifier	need_reload_nodes		3952134	1					
ANR	3952205	Identifier	true		3952134	1					
ANR	3952206	ContinueStatement	continue ;	2256:3:57725:57733	3952134	2	True				
ANR	3952207	IdentifierDeclStatement	"ut64 addr = r_num_get ( NULL , n -> title ) ;"	2258:2:57741:57779	3952134	1	True				
ANR	3952208	IdentifierDecl	"addr = r_num_get ( NULL , n -> title )"		3952134	0					
ANR	3952209	IdentifierDeclType	ut64		3952134	0					
ANR	3952210	Identifier	addr		3952134	1					
ANR	3952211	AssignmentExpression	"addr = r_num_get ( NULL , n -> title )"		3952134	2		=			
ANR	3952212	Identifier	addr		3952134	0					
ANR	3952213	CallExpression	"r_num_get ( NULL , n -> title )"		3952134	1					
ANR	3952214	Callee	r_num_get		3952134	0					
ANR	3952215	Identifier	r_num_get		3952134	0					
ANR	3952216	ArgumentList	NULL		3952134	1					
ANR	3952217	Argument	NULL		3952134	0					
ANR	3952218	Identifier	NULL		3952134	0					
ANR	3952219	Argument	n -> title		3952134	1					
ANR	3952220	PtrMemberAccess	n -> title		3952134	0					
ANR	3952221	Identifier	n		3952134	0					
ANR	3952222	Identifier	title		3952134	1					
ANR	3952223	IdentifierDeclStatement	"RDebugTracepoint * tp = r_debug_trace_get ( core -> dbg , addr ) ;"	2259:2:57783:57841	3952134	2	True				
ANR	3952224	IdentifierDecl	"* tp = r_debug_trace_get ( core -> dbg , addr )"		3952134	0					
ANR	3952225	IdentifierDeclType	RDebugTracepoint *		3952134	0					
ANR	3952226	Identifier	tp		3952134	1					
ANR	3952227	AssignmentExpression	"* tp = r_debug_trace_get ( core -> dbg , addr )"		3952134	2		=			
ANR	3952228	Identifier	tp		3952134	0					
ANR	3952229	CallExpression	"r_debug_trace_get ( core -> dbg , addr )"		3952134	1					
ANR	3952230	Callee	r_debug_trace_get		3952134	0					
ANR	3952231	Identifier	r_debug_trace_get		3952134	0					
ANR	3952232	ArgumentList	core -> dbg		3952134	1					
ANR	3952233	Argument	core -> dbg		3952134	0					
ANR	3952234	PtrMemberAccess	core -> dbg		3952134	0					
ANR	3952235	Identifier	core		3952134	0					
ANR	3952236	Identifier	dbg		3952134	1					
ANR	3952237	Argument	addr		3952134	1					
ANR	3952238	Identifier	addr		3952134	0					
ANR	3952239	ExpressionStatement	n -> is_mini = ( tp == NULL )	2260:2:57845:57870	3952134	3	True				
ANR	3952240	AssignmentExpression	n -> is_mini = ( tp == NULL )		3952134	0		=			
ANR	3952241	PtrMemberAccess	n -> is_mini		3952134	0					
ANR	3952242	Identifier	n		3952134	0					
ANR	3952243	Identifier	is_mini		3952134	1					
ANR	3952244	EqualityExpression	tp == NULL		3952134	1		==			
ANR	3952245	Identifier	tp		3952134	0					
ANR	3952246	Identifier	NULL		3952134	1					
ANR	3952247	ExpressionStatement	g -> need_update_dim = 1	2262:1:57876:57898	3952134	16	True				
ANR	3952248	AssignmentExpression	g -> need_update_dim = 1		3952134	0		=			
ANR	3952249	PtrMemberAccess	g -> need_update_dim		3952134	0					
ANR	3952250	Identifier	g		3952134	0					
ANR	3952251	Identifier	need_update_dim		3952134	1					
ANR	3952252	PrimaryExpression	1		3952134	1					
ANR	3952253	ReturnType	static void		3952134	1					
ANR	3952254	Identifier	fold_asm_trace		3952134	2					
ANR	3952255	ParameterList	"RCore * core , RAGraph * g"		3952134	3					
ANR	3952256	Parameter	RCore * core	2245:27:57435:57445	3952134	0	True				
ANR	3952257	ParameterType	RCore *		3952134	0					
ANR	3952258	Identifier	core		3952134	1					
ANR	3952259	Parameter	RAGraph * g	2245:40:57448:57457	3952134	1	True				
ANR	3952260	ParameterType	RAGraph *		3952134	0					
ANR	3952261	Identifier	g		3952134	1					
ANR	3952262	CFGEntryNode	ENTRY		3952134		True				
ANR	3952263	CFGExitNode	EXIT		3952134		True				
ANR	3952264	CFGErrorNode	ERROR		3952134		True				
ANR	3952265	Symbol	* core		3952134						
ANR	3952266	Symbol	g -> need_update_dim		3952134						
ANR	3952267	Symbol	g -> graph		3952134						
ANR	3952268	Symbol	r_num_get		3952134						
ANR	3952269	Symbol	addr		3952134						
ANR	3952270	Symbol	r_graph_get_nodes		3952134						
ANR	3952271	Symbol	get_anode		3952134						
ANR	3952272	Symbol	NULL		3952134						
ANR	3952273	Symbol	g -> need_reload_nodes		3952134						
ANR	3952274	Symbol	g		3952134						
ANR	3952275	Symbol	gn		3952134						
ANR	3952276	Symbol	curnode		3952134						
ANR	3952277	Symbol	false		3952134						
ANR	3952278	Symbol	n -> is_mini		3952134						
ANR	3952279	Symbol	r_debug_trace_get		3952134						
ANR	3952280	Symbol	it		3952134						
ANR	3952281	Symbol	n		3952134						
ANR	3952282	Symbol	core		3952134						
ANR	3952283	Symbol	* g		3952134						
ANR	3952284	Symbol	nodes		3952134						
ANR	3952285	Symbol	g -> curnode		3952134						
ANR	3952286	Symbol	* n		3952134						
ANR	3952287	Symbol	true		3952134						
ANR	3952288	Symbol	n -> title		3952134						
ANR	3952289	Symbol	tp		3952134						
ANR	3952290	Symbol	core -> dbg		3952134						
ANR	3952291	Function	delete_dup_edges	2266:0:57956:58517							
ANR	3952292	FunctionDef	delete_dup_edges (RAGraph * g)		3952291	0					
ANR	3952293	CompoundStatement		2266:42:57998:58517	3952291	0					
ANR	3952294	IdentifierDeclStatement	"RListIter * it , * in_it , * in_it2 , * in_it2_tmp ;"	2267:1:58001:58044	3952291	0	True				
ANR	3952295	IdentifierDecl	* it		3952291	0					
ANR	3952296	IdentifierDeclType	RListIter *		3952291	0					
ANR	3952297	Identifier	it		3952291	1					
ANR	3952298	IdentifierDecl	* in_it		3952291	1					
ANR	3952299	IdentifierDeclType	RListIter *		3952291	0					
ANR	3952300	Identifier	in_it		3952291	1					
ANR	3952301	IdentifierDecl	* in_it2		3952291	2					
ANR	3952302	IdentifierDeclType	RListIter *		3952291	0					
ANR	3952303	Identifier	in_it2		3952291	1					
ANR	3952304	IdentifierDecl	* in_it2_tmp		3952291	3					
ANR	3952305	IdentifierDeclType	RListIter *		3952291	0					
ANR	3952306	Identifier	in_it2_tmp		3952291	1					
ANR	3952307	IdentifierDeclStatement	"RGraphNode * n , * a , * b ;"	2268:1:58047:58068	3952291	1	True				
ANR	3952308	IdentifierDecl	* n		3952291	0					
ANR	3952309	IdentifierDeclType	RGraphNode *		3952291	0					
ANR	3952310	Identifier	n		3952291	1					
ANR	3952311	IdentifierDecl	* a		3952291	1					
ANR	3952312	IdentifierDeclType	RGraphNode *		3952291	0					
ANR	3952313	Identifier	a		3952291	1					
ANR	3952314	IdentifierDecl	* b		3952291	2					
ANR	3952315	IdentifierDeclType	RGraphNode *		3952291	0					
ANR	3952316	Identifier	b		3952291	1					
ANR	3952317	Statement	r_list_foreach	2269:1:58071:58084	3952291	2	True				
ANR	3952318	Statement	(	2269:16:58086:58086	3952291	3	True				
ANR	3952319	Statement	g	2269:17:58087:58087	3952291	4	True				
ANR	3952320	Statement	->	2269:18:58088:58089	3952291	5	True				
ANR	3952321	Statement	graph	2269:20:58090:58094	3952291	6	True				
ANR	3952322	Statement	->	2269:25:58095:58096	3952291	7	True				
ANR	3952323	Statement	nodes	2269:27:58097:58101	3952291	8	True				
ANR	3952324	Statement	","	2269:32:58102:58102	3952291	9	True				
ANR	3952325	Statement	it	2269:34:58104:58105	3952291	10	True				
ANR	3952326	Statement	","	2269:36:58106:58106	3952291	11	True				
ANR	3952327	Statement	n	2269:38:58108:58108	3952291	12	True				
ANR	3952328	Statement	)	2269:39:58109:58109	3952291	13	True				
ANR	3952329	CompoundStatement		4:41:112:112	3952291	14					
ANR	3952330	Statement	r_list_foreach	2270:2:58115:58128	3952291	0	True				
ANR	3952331	Statement	(	2270:17:58130:58130	3952291	1	True				
ANR	3952332	Statement	n	2270:18:58131:58131	3952291	2	True				
ANR	3952333	Statement	->	2270:19:58132:58133	3952291	3	True				
ANR	3952334	Statement	out_nodes	2270:21:58134:58142	3952291	4	True				
ANR	3952335	Statement	","	2270:30:58143:58143	3952291	5	True				
ANR	3952336	Statement	in_it	2270:32:58145:58149	3952291	6	True				
ANR	3952337	Statement	","	2270:37:58150:58150	3952291	7	True				
ANR	3952338	Statement	a	2270:39:58152:58152	3952291	8	True				
ANR	3952339	Statement	)	2270:40:58153:58153	3952291	9	True				
ANR	3952340	CompoundStatement		5:42:156:156	3952291	10					
ANR	3952341	ForStatement	"for ( in_it2 = in_it -> n ; in_it2 && ( b = in_it2 -> data , in_it2_tmp = in_it2 -> n , 1 ) ; in_it2 = in_it2_tmp )"		3952291	0					
ANR	3952342	ForInit	in_it2 = in_it -> n ;	2271:8:58165:58182	3952291	0	True				
ANR	3952343	AssignmentExpression	in_it2 = in_it -> n		3952291	0		=			
ANR	3952344	Identifier	in_it2		3952291	0					
ANR	3952345	PtrMemberAccess	in_it -> n		3952291	1					
ANR	3952346	Identifier	in_it		3952291	0					
ANR	3952347	Identifier	n		3952291	1					
ANR	3952348	Condition	"in_it2 && ( b = in_it2 -> data , in_it2_tmp = in_it2 -> n , 1 )"	2271:27:58184:58238	3952291	1	True				
ANR	3952349	AndExpression	"in_it2 && ( b = in_it2 -> data , in_it2_tmp = in_it2 -> n , 1 )"		3952291	0		&&			
ANR	3952350	Identifier	in_it2		3952291	0					
ANR	3952351	Expression	"b = in_it2 -> data , in_it2_tmp = in_it2 -> n , 1"		3952291	1					
ANR	3952352	AssignmentExpression	b = in_it2 -> data		3952291	0		=			
ANR	3952353	Identifier	b		3952291	0					
ANR	3952354	PtrMemberAccess	in_it2 -> data		3952291	1					
ANR	3952355	Identifier	in_it2		3952291	0					
ANR	3952356	Identifier	data		3952291	1					
ANR	3952357	Expression	"in_it2_tmp = in_it2 -> n , 1"		3952291	1					
ANR	3952358	AssignmentExpression	in_it2_tmp = in_it2 -> n		3952291	0		=			
ANR	3952359	Identifier	in_it2_tmp		3952291	0					
ANR	3952360	PtrMemberAccess	in_it2 -> n		3952291	1					
ANR	3952361	Identifier	in_it2		3952291	0					
ANR	3952362	Identifier	n		3952291	1					
ANR	3952363	PrimaryExpression	1		3952291	1					
ANR	3952364	AssignmentExpression	in_it2 = in_it2_tmp	2271:84:58241:58259	3952291	2	True	=			
ANR	3952365	Identifier	in_it2		3952291	0					
ANR	3952366	Identifier	in_it2_tmp		3952291	1					
ANR	3952367	CompoundStatement		6:105:263:263	3952291	3					
ANR	3952368	IfStatement	if ( a -> idx == b -> idx )		3952291	0					
ANR	3952369	Condition	a -> idx == b -> idx	2272:8:58272:58287	3952291	0	True				
ANR	3952370	EqualityExpression	a -> idx == b -> idx		3952291	0		==			
ANR	3952371	PtrMemberAccess	a -> idx		3952291	0					
ANR	3952372	Identifier	a		3952291	0					
ANR	3952373	Identifier	idx		3952291	1					
ANR	3952374	PtrMemberAccess	b -> idx		3952291	1					
ANR	3952375	Identifier	b		3952291	0					
ANR	3952376	Identifier	idx		3952291	1					
ANR	3952377	CompoundStatement		7:26:291:291	3952291	1					
ANR	3952378	ExpressionStatement	"r_list_delete ( n -> out_nodes , in_it2 )"	2273:5:58297:58333	3952291	0	True				
ANR	3952379	CallExpression	"r_list_delete ( n -> out_nodes , in_it2 )"		3952291	0					
ANR	3952380	Callee	r_list_delete		3952291	0					
ANR	3952381	Identifier	r_list_delete		3952291	0					
ANR	3952382	ArgumentList	n -> out_nodes		3952291	1					
ANR	3952383	Argument	n -> out_nodes		3952291	0					
ANR	3952384	PtrMemberAccess	n -> out_nodes		3952291	0					
ANR	3952385	Identifier	n		3952291	0					
ANR	3952386	Identifier	out_nodes		3952291	1					
ANR	3952387	Argument	in_it2		3952291	1					
ANR	3952388	Identifier	in_it2		3952291	0					
ANR	3952389	ExpressionStatement	"r_list_delete_data ( n -> all_neighbours , b )"	2274:5:58340:58381	3952291	1	True				
ANR	3952390	CallExpression	"r_list_delete_data ( n -> all_neighbours , b )"		3952291	0					
ANR	3952391	Callee	r_list_delete_data		3952291	0					
ANR	3952392	Identifier	r_list_delete_data		3952291	0					
ANR	3952393	ArgumentList	n -> all_neighbours		3952291	1					
ANR	3952394	Argument	n -> all_neighbours		3952291	0					
ANR	3952395	PtrMemberAccess	n -> all_neighbours		3952291	0					
ANR	3952396	Identifier	n		3952291	0					
ANR	3952397	Identifier	all_neighbours		3952291	1					
ANR	3952398	Argument	b		3952291	1					
ANR	3952399	Identifier	b		3952291	0					
ANR	3952400	ExpressionStatement	"r_list_delete_data ( b -> in_nodes , n )"	2275:5:58388:58423	3952291	2	True				
ANR	3952401	CallExpression	"r_list_delete_data ( b -> in_nodes , n )"		3952291	0					
ANR	3952402	Callee	r_list_delete_data		3952291	0					
ANR	3952403	Identifier	r_list_delete_data		3952291	0					
ANR	3952404	ArgumentList	b -> in_nodes		3952291	1					
ANR	3952405	Argument	b -> in_nodes		3952291	0					
ANR	3952406	PtrMemberAccess	b -> in_nodes		3952291	0					
ANR	3952407	Identifier	b		3952291	0					
ANR	3952408	Identifier	in_nodes		3952291	1					
ANR	3952409	Argument	n		3952291	1					
ANR	3952410	Identifier	n		3952291	0					
ANR	3952411	ExpressionStatement	"r_list_delete_data ( b -> all_neighbours , n )"	2276:5:58430:58471	3952291	3	True				
ANR	3952412	CallExpression	"r_list_delete_data ( b -> all_neighbours , n )"		3952291	0					
ANR	3952413	Callee	r_list_delete_data		3952291	0					
ANR	3952414	Identifier	r_list_delete_data		3952291	0					
ANR	3952415	ArgumentList	b -> all_neighbours		3952291	1					
ANR	3952416	Argument	b -> all_neighbours		3952291	0					
ANR	3952417	PtrMemberAccess	b -> all_neighbours		3952291	0					
ANR	3952418	Identifier	b		3952291	0					
ANR	3952419	Identifier	all_neighbours		3952291	1					
ANR	3952420	Argument	n		3952291	1					
ANR	3952421	Identifier	n		3952291	0					
ANR	3952422	ExpressionStatement	g -> graph -> n_edges --	2277:5:58478:58497	3952291	4	True				
ANR	3952423	PostIncDecOperationExpression	g -> graph -> n_edges --		3952291	0					
ANR	3952424	PtrMemberAccess	g -> graph -> n_edges		3952291	0					
ANR	3952425	PtrMemberAccess	g -> graph		3952291	0					
ANR	3952426	Identifier	g		3952291	0					
ANR	3952427	Identifier	graph		3952291	1					
ANR	3952428	Identifier	n_edges		3952291	1					
ANR	3952429	IncDec	--		3952291	1					
ANR	3952430	ReturnType	static void		3952291	1					
ANR	3952431	Identifier	delete_dup_edges		3952291	2					
ANR	3952432	ParameterList	RAGraph * g		3952291	3					
ANR	3952433	Parameter	RAGraph * g	2266:30:57986:57995	3952291	0	True				
ANR	3952434	ParameterType	RAGraph *		3952291	0					
ANR	3952435	Identifier	g		3952291	1					
ANR	3952436	CFGEntryNode	ENTRY		3952291		True				
ANR	3952437	CFGExitNode	EXIT		3952291		True				
ANR	3952438	Symbol	in_it2_tmp		3952291						
ANR	3952439	Symbol	* g -> graph		3952291						
ANR	3952440	Symbol	g -> graph -> n_edges		3952291						
ANR	3952441	Symbol	* in_it		3952291						
ANR	3952442	Symbol	g -> graph		3952291						
ANR	3952443	Symbol	in_it2 -> data		3952291						
ANR	3952444	Symbol	a		3952291						
ANR	3952445	Symbol	b		3952291						
ANR	3952446	Symbol	* in_it2		3952291						
ANR	3952447	Symbol	* * g		3952291						
ANR	3952448	Symbol	g		3952291						
ANR	3952449	Symbol	b -> in_nodes		3952291						
ANR	3952450	Symbol	in_it2		3952291						
ANR	3952451	Symbol	b -> all_neighbours		3952291						
ANR	3952452	Symbol	it		3952291						
ANR	3952453	Symbol	in_it2 -> n		3952291						
ANR	3952454	Symbol	* a		3952291						
ANR	3952455	Symbol	* b		3952291						
ANR	3952456	Symbol	n		3952291						
ANR	3952457	Symbol	a -> idx		3952291						
ANR	3952458	Symbol	* g		3952291						
ANR	3952459	Symbol	b -> idx		3952291						
ANR	3952460	Symbol	in_it -> n		3952291						
ANR	3952461	Symbol	* n		3952291						
ANR	3952462	Symbol	n -> out_nodes		3952291						
ANR	3952463	Symbol	n -> all_neighbours		3952291						
ANR	3952464	Symbol	in_it		3952291						
ANR	3952465	Function	isbbfew	2284:0:58520:58889							
ANR	3952466	FunctionDef	"isbbfew (RAnalBlock * curbb , RAnalBlock * bb)"		3952465	0					
ANR	3952467	CompoundStatement		2284:55:58575:58889	3952465	0					
ANR	3952468	IfStatement	if ( bb -> addr == curbb -> addr || bb -> addr == curbb -> jump || bb -> addr == curbb -> fail )		3952465	0					
ANR	3952469	Condition	bb -> addr == curbb -> addr || bb -> addr == curbb -> jump || bb -> addr == curbb -> fail	2285:5:58582:58658	3952465	0	True				
ANR	3952470	OrExpression	bb -> addr == curbb -> addr || bb -> addr == curbb -> jump || bb -> addr == curbb -> fail		3952465	0		||			
ANR	3952471	EqualityExpression	bb -> addr == curbb -> addr		3952465	0		==			
ANR	3952472	PtrMemberAccess	bb -> addr		3952465	0					
ANR	3952473	Identifier	bb		3952465	0					
ANR	3952474	Identifier	addr		3952465	1					
ANR	3952475	PtrMemberAccess	curbb -> addr		3952465	1					
ANR	3952476	Identifier	curbb		3952465	0					
ANR	3952477	Identifier	addr		3952465	1					
ANR	3952478	OrExpression	bb -> addr == curbb -> jump || bb -> addr == curbb -> fail		3952465	1		||			
ANR	3952479	EqualityExpression	bb -> addr == curbb -> jump		3952465	0		==			
ANR	3952480	PtrMemberAccess	bb -> addr		3952465	0					
ANR	3952481	Identifier	bb		3952465	0					
ANR	3952482	Identifier	addr		3952465	1					
ANR	3952483	PtrMemberAccess	curbb -> jump		3952465	1					
ANR	3952484	Identifier	curbb		3952465	0					
ANR	3952485	Identifier	jump		3952465	1					
ANR	3952486	EqualityExpression	bb -> addr == curbb -> fail		3952465	1		==			
ANR	3952487	PtrMemberAccess	bb -> addr		3952465	0					
ANR	3952488	Identifier	bb		3952465	0					
ANR	3952489	Identifier	addr		3952465	1					
ANR	3952490	PtrMemberAccess	curbb -> fail		3952465	1					
ANR	3952491	Identifier	curbb		3952465	0					
ANR	3952492	Identifier	fail		3952465	1					
ANR	3952493	CompoundStatement		2:84:85:85	3952465	1					
ANR	3952494	ReturnStatement	return true ;	2287:2:58681:58692	3952465	0	True				
ANR	3952495	Identifier	true		3952465	0					
ANR	3952496	IfStatement	if ( curbb -> switch_op )		3952465	1					
ANR	3952497	Condition	curbb -> switch_op	2289:5:58702:58717	3952465	0	True				
ANR	3952498	PtrMemberAccess	curbb -> switch_op		3952465	0					
ANR	3952499	Identifier	curbb		3952465	0					
ANR	3952500	Identifier	switch_op		3952465	1					
ANR	3952501	CompoundStatement		8:2:165:181	3952465	1					
ANR	3952502	IdentifierDeclStatement	RListIter * it ;	2290:2:58724:58737	3952465	0	True				
ANR	3952503	IdentifierDecl	* it		3952465	0					
ANR	3952504	IdentifierDeclType	RListIter *		3952465	0					
ANR	3952505	Identifier	it		3952465	1					
ANR	3952506	IdentifierDeclStatement	RAnalCaseOp * cop ;	2291:2:58741:58757	3952465	1	True				
ANR	3952507	IdentifierDecl	* cop		3952465	0					
ANR	3952508	IdentifierDeclType	RAnalCaseOp *		3952465	0					
ANR	3952509	Identifier	cop		3952465	1					
ANR	3952510	Statement	r_list_foreach	2292:2:58761:58774	3952465	2	True				
ANR	3952511	Statement	(	2292:17:58776:58776	3952465	3	True				
ANR	3952512	Statement	curbb	2292:18:58777:58781	3952465	4	True				
ANR	3952513	Statement	->	2292:23:58782:58783	3952465	5	True				
ANR	3952514	Statement	switch_op	2292:25:58784:58792	3952465	6	True				
ANR	3952515	Statement	->	2292:34:58793:58794	3952465	7	True				
ANR	3952516	Statement	cases	2292:36:58795:58799	3952465	8	True				
ANR	3952517	Statement	","	2292:41:58800:58800	3952465	9	True				
ANR	3952518	Statement	it	2292:43:58802:58803	3952465	10	True				
ANR	3952519	Statement	","	2292:45:58804:58804	3952465	11	True				
ANR	3952520	Statement	cop	2292:47:58806:58808	3952465	12	True				
ANR	3952521	Statement	)	2292:50:58809:58809	3952465	13	True				
ANR	3952522	CompoundStatement		9:52:235:235	3952465	14					
ANR	3952523	IfStatement	if ( cop -> addr == bb -> addr )		3952465	0					
ANR	3952524	Condition	cop -> addr == bb -> addr	2293:7:58820:58840	3952465	0	True				
ANR	3952525	EqualityExpression	cop -> addr == bb -> addr		3952465	0		==			
ANR	3952526	PtrMemberAccess	cop -> addr		3952465	0					
ANR	3952527	Identifier	cop		3952465	0					
ANR	3952528	Identifier	addr		3952465	1					
ANR	3952529	PtrMemberAccess	bb -> addr		3952465	1					
ANR	3952530	Identifier	bb		3952465	0					
ANR	3952531	Identifier	addr		3952465	1					
ANR	3952532	CompoundStatement		10:30:267:267	3952465	1					
ANR	3952533	ReturnStatement	return true ;	2294:4:58849:58860	3952465	0	True				
ANR	3952534	Identifier	true		3952465	0					
ANR	3952535	ReturnStatement	return false ;	2298:1:58875:58887	3952465	2	True				
ANR	3952536	Identifier	false		3952465	0					
ANR	3952537	ReturnType	static bool		3952465	1					
ANR	3952538	Identifier	isbbfew		3952465	2					
ANR	3952539	ParameterList	"RAnalBlock * curbb , RAnalBlock * bb"		3952465	3					
ANR	3952540	Parameter	RAnalBlock * curbb	2284:20:58540:58556	3952465	0	True				
ANR	3952541	ParameterType	RAnalBlock *		3952465	0					
ANR	3952542	Identifier	curbb		3952465	1					
ANR	3952543	Parameter	RAnalBlock * bb	2284:39:58559:58572	3952465	1	True				
ANR	3952544	ParameterType	RAnalBlock *		3952465	0					
ANR	3952545	Identifier	bb		3952465	1					
ANR	3952546	CFGEntryNode	ENTRY		3952465		True				
ANR	3952547	CFGExitNode	EXIT		3952465		True				
ANR	3952548	Symbol	bb		3952465						
ANR	3952549	Symbol	* curbb		3952465						
ANR	3952550	Symbol	* bb		3952465						
ANR	3952551	Symbol	cop		3952465						
ANR	3952552	Symbol	false		3952465						
ANR	3952553	Symbol	curbb		3952465						
ANR	3952554	Symbol	bb -> addr		3952465						
ANR	3952555	Symbol	it		3952465						
ANR	3952556	Symbol	curbb -> fail		3952465						
ANR	3952557	Symbol	cop -> addr		3952465						
ANR	3952558	Symbol	* cop		3952465						
ANR	3952559	Symbol	true		3952465						
ANR	3952560	Symbol	curbb -> switch_op		3952465						
ANR	3952561	Symbol	curbb -> addr		3952465						
ANR	3952562	Symbol	curbb -> jump		3952465						
ANR	3952563	Function	get_bbnodes	2302:0:58968:61531							
ANR	3952564	FunctionDef	"get_bbnodes (RAGraph * g , RCore * core , RAnalFunction * fcn)"		3952563	0					
ANR	3952565	CompoundStatement		2302:68:59036:61531	3952563	0					
ANR	3952566	IdentifierDeclStatement	RAnalBlock * bb ;	2303:1:59039:59053	3952563	0	True				
ANR	3952567	IdentifierDecl	* bb		3952563	0					
ANR	3952568	IdentifierDeclType	RAnalBlock *		3952563	0					
ANR	3952569	Identifier	bb		3952563	1					
ANR	3952570	IdentifierDeclStatement	RListIter * iter ;	2304:1:59056:59071	3952563	1	True				
ANR	3952571	IdentifierDecl	* iter		3952563	0					
ANR	3952572	IdentifierDeclType	RListIter *		3952563	0					
ANR	3952573	Identifier	iter		3952563	1					
ANR	3952574	IdentifierDeclStatement	char * shortcut = NULL ;	2305:1:59074:59095	3952563	2	True				
ANR	3952575	IdentifierDecl	* shortcut = NULL		3952563	0					
ANR	3952576	IdentifierDeclType	char *		3952563	0					
ANR	3952577	Identifier	shortcut		3952563	1					
ANR	3952578	AssignmentExpression	* shortcut = NULL		3952563	2		=			
ANR	3952579	Identifier	NULL		3952563	0					
ANR	3952580	Identifier	NULL		3952563	1					
ANR	3952581	IdentifierDeclStatement	int shortcuts = 0 ;	2306:1:59098:59115	3952563	3	True				
ANR	3952582	IdentifierDecl	shortcuts = 0		3952563	0					
ANR	3952583	IdentifierDeclType	int		3952563	0					
ANR	3952584	Identifier	shortcuts		3952563	1					
ANR	3952585	AssignmentExpression	shortcuts = 0		3952563	2		=			
ANR	3952586	Identifier	shortcuts		3952563	0					
ANR	3952587	PrimaryExpression	0		3952563	1					
ANR	3952588	IdentifierDeclStatement	"bool emu = r_config_get_i ( core -> config , ""asm.emu"" ) ;"	2307:1:59118:59169	3952563	4	True				
ANR	3952589	IdentifierDecl	"emu = r_config_get_i ( core -> config , ""asm.emu"" )"		3952563	0					
ANR	3952590	IdentifierDeclType	bool		3952563	0					
ANR	3952591	Identifier	emu		3952563	1					
ANR	3952592	AssignmentExpression	"emu = r_config_get_i ( core -> config , ""asm.emu"" )"		3952563	2		=			
ANR	3952593	Identifier	emu		3952563	0					
ANR	3952594	CallExpression	"r_config_get_i ( core -> config , ""asm.emu"" )"		3952563	1					
ANR	3952595	Callee	r_config_get_i		3952563	0					
ANR	3952596	Identifier	r_config_get_i		3952563	0					
ANR	3952597	ArgumentList	core -> config		3952563	1					
ANR	3952598	Argument	core -> config		3952563	0					
ANR	3952599	PtrMemberAccess	core -> config		3952563	0					
ANR	3952600	Identifier	core		3952563	0					
ANR	3952601	Identifier	config		3952563	1					
ANR	3952602	Argument	"""asm.emu"""		3952563	1					
ANR	3952603	PrimaryExpression	"""asm.emu"""		3952563	0					
ANR	3952604	IdentifierDeclStatement	"bool few = r_config_get_i ( core -> config , ""graph.few"" ) ;"	2308:1:59172:59225	3952563	5	True				
ANR	3952605	IdentifierDecl	"few = r_config_get_i ( core -> config , ""graph.few"" )"		3952563	0					
ANR	3952606	IdentifierDeclType	bool		3952563	0					
ANR	3952607	Identifier	few		3952563	1					
ANR	3952608	AssignmentExpression	"few = r_config_get_i ( core -> config , ""graph.few"" )"		3952563	2		=			
ANR	3952609	Identifier	few		3952563	0					
ANR	3952610	CallExpression	"r_config_get_i ( core -> config , ""graph.few"" )"		3952563	1					
ANR	3952611	Callee	r_config_get_i		3952563	0					
ANR	3952612	Identifier	r_config_get_i		3952563	0					
ANR	3952613	ArgumentList	core -> config		3952563	1					
ANR	3952614	Argument	core -> config		3952563	0					
ANR	3952615	PtrMemberAccess	core -> config		3952563	0					
ANR	3952616	Identifier	core		3952563	0					
ANR	3952617	Identifier	config		3952563	1					
ANR	3952618	Argument	"""graph.few"""		3952563	1					
ANR	3952619	PrimaryExpression	"""graph.few"""		3952563	0					
ANR	3952620	IdentifierDeclStatement	int ret = false ;	2309:1:59228:59243	3952563	6	True				
ANR	3952621	IdentifierDecl	ret = false		3952563	0					
ANR	3952622	IdentifierDeclType	int		3952563	0					
ANR	3952623	Identifier	ret		3952563	1					
ANR	3952624	AssignmentExpression	ret = false		3952563	2		=			
ANR	3952625	Identifier	false		3952563	0					
ANR	3952626	Identifier	false		3952563	1					
ANR	3952627	IdentifierDeclStatement	ut64 saved_gp = core -> anal -> gp ;	2310:1:59246:59276	3952563	7	True				
ANR	3952628	IdentifierDecl	saved_gp = core -> anal -> gp		3952563	0					
ANR	3952629	IdentifierDeclType	ut64		3952563	0					
ANR	3952630	Identifier	saved_gp		3952563	1					
ANR	3952631	AssignmentExpression	saved_gp = core -> anal -> gp		3952563	2		=			
ANR	3952632	Identifier	saved_gp		3952563	0					
ANR	3952633	PtrMemberAccess	core -> anal -> gp		3952563	1					
ANR	3952634	PtrMemberAccess	core -> anal		3952563	0					
ANR	3952635	Identifier	core		3952563	0					
ANR	3952636	Identifier	anal		3952563	1					
ANR	3952637	Identifier	gp		3952563	1					
ANR	3952638	IdentifierDeclStatement	ut8 * saved_arena = NULL ;	2311:1:59279:59302	3952563	8	True				
ANR	3952639	IdentifierDecl	* saved_arena = NULL		3952563	0					
ANR	3952640	IdentifierDeclType	ut8 *		3952563	0					
ANR	3952641	Identifier	saved_arena		3952563	1					
ANR	3952642	AssignmentExpression	* saved_arena = NULL		3952563	2		=			
ANR	3952643	Identifier	NULL		3952563	0					
ANR	3952644	Identifier	NULL		3952563	1					
ANR	3952645	IdentifierDeclStatement	int saved_stackptr = core -> anal -> stackptr ;	2312:1:59305:59346	3952563	9	True				
ANR	3952646	IdentifierDecl	saved_stackptr = core -> anal -> stackptr		3952563	0					
ANR	3952647	IdentifierDeclType	int		3952563	0					
ANR	3952648	Identifier	saved_stackptr		3952563	1					
ANR	3952649	AssignmentExpression	saved_stackptr = core -> anal -> stackptr		3952563	2		=			
ANR	3952650	Identifier	saved_stackptr		3952563	0					
ANR	3952651	PtrMemberAccess	core -> anal -> stackptr		3952563	1					
ANR	3952652	PtrMemberAccess	core -> anal		3952563	0					
ANR	3952653	Identifier	core		3952563	0					
ANR	3952654	Identifier	anal		3952563	1					
ANR	3952655	Identifier	stackptr		3952563	1					
ANR	3952656	ExpressionStatement	core -> keep_asmqjmps = false	2313:1:59349:59376	3952563	10	True				
ANR	3952657	AssignmentExpression	core -> keep_asmqjmps = false		3952563	0		=			
ANR	3952658	PtrMemberAccess	core -> keep_asmqjmps		3952563	0					
ANR	3952659	Identifier	core		3952563	0					
ANR	3952660	Identifier	keep_asmqjmps		3952563	1					
ANR	3952661	Identifier	false		3952563	1					
ANR	3952662	IfStatement	if ( ! fcn )		3952563	11					
ANR	3952663	Condition	! fcn	2315:5:59384:59387	3952563	0	True				
ANR	3952664	UnaryOperationExpression	! fcn		3952563	0					
ANR	3952665	UnaryOperator	!		3952563	0					
ANR	3952666	Identifier	fcn		3952563	1					
ANR	3952667	CompoundStatement		14:11:353:353	3952563	1					
ANR	3952668	ReturnStatement	return false ;	2316:2:59394:59406	3952563	0	True				
ANR	3952669	Identifier	false		3952563	0					
ANR	3952670	IfStatement	if ( emu )		3952563	12					
ANR	3952671	Condition	emu	2318:5:59416:59418	3952563	0	True				
ANR	3952672	Identifier	emu		3952563	0					
ANR	3952673	CompoundStatement		17:10:384:384	3952563	1					
ANR	3952674	ExpressionStatement	saved_arena = r_reg_arena_peek ( core -> anal -> reg )	2319:2:59425:59473	3952563	0	True				
ANR	3952675	AssignmentExpression	saved_arena = r_reg_arena_peek ( core -> anal -> reg )		3952563	0		=			
ANR	3952676	Identifier	saved_arena		3952563	0					
ANR	3952677	CallExpression	r_reg_arena_peek ( core -> anal -> reg )		3952563	1					
ANR	3952678	Callee	r_reg_arena_peek		3952563	0					
ANR	3952679	Identifier	r_reg_arena_peek		3952563	0					
ANR	3952680	ArgumentList	core -> anal -> reg		3952563	1					
ANR	3952681	Argument	core -> anal -> reg		3952563	0					
ANR	3952682	PtrMemberAccess	core -> anal -> reg		3952563	0					
ANR	3952683	PtrMemberAccess	core -> anal		3952563	0					
ANR	3952684	Identifier	core		3952563	0					
ANR	3952685	Identifier	anal		3952563	1					
ANR	3952686	Identifier	reg		3952563	1					
ANR	3952687	ExpressionStatement	"r_list_sort ( fcn -> bbs , ( RListComparator ) bbcmp )"	2321:1:59479:59526	3952563	13	True				
ANR	3952688	CallExpression	"r_list_sort ( fcn -> bbs , ( RListComparator ) bbcmp )"		3952563	0					
ANR	3952689	Callee	r_list_sort		3952563	0					
ANR	3952690	Identifier	r_list_sort		3952563	0					
ANR	3952691	ArgumentList	fcn -> bbs		3952563	1					
ANR	3952692	Argument	fcn -> bbs		3952563	0					
ANR	3952693	PtrMemberAccess	fcn -> bbs		3952563	0					
ANR	3952694	Identifier	fcn		3952563	0					
ANR	3952695	Identifier	bbs		3952563	1					
ANR	3952696	Argument	( RListComparator ) bbcmp		3952563	1					
ANR	3952697	CastExpression	( RListComparator ) bbcmp		3952563	0					
ANR	3952698	CastTarget	RListComparator		3952563	0					
ANR	3952699	Identifier	bbcmp		3952563	1					
ANR	3952700	IdentifierDeclStatement	RAnalBlock * curbb = NULL ;	2322:1:59529:59553	3952563	14	True				
ANR	3952701	IdentifierDecl	* curbb = NULL		3952563	0					
ANR	3952702	IdentifierDeclType	RAnalBlock *		3952563	0					
ANR	3952703	Identifier	curbb		3952563	1					
ANR	3952704	AssignmentExpression	* curbb = NULL		3952563	2		=			
ANR	3952705	Identifier	NULL		3952563	0					
ANR	3952706	Identifier	NULL		3952563	1					
ANR	3952707	IfStatement	if ( few )		3952563	15					
ANR	3952708	Condition	few	2323:5:59560:59562	3952563	0	True				
ANR	3952709	Identifier	few		3952563	0					
ANR	3952710	CompoundStatement		22:10:528:528	3952563	1					
ANR	3952711	Statement	r_list_foreach	2324:2:59569:59582	3952563	0	True				
ANR	3952712	Statement	(	2324:17:59584:59584	3952563	1	True				
ANR	3952713	Statement	fcn	2324:18:59585:59587	3952563	2	True				
ANR	3952714	Statement	->	2324:21:59588:59589	3952563	3	True				
ANR	3952715	Statement	bbs	2324:23:59590:59592	3952563	4	True				
ANR	3952716	Statement	","	2324:26:59593:59593	3952563	5	True				
ANR	3952717	Statement	iter	2324:28:59595:59598	3952563	6	True				
ANR	3952718	Statement	","	2324:32:59599:59599	3952563	7	True				
ANR	3952719	Statement	bb	2324:34:59601:59602	3952563	8	True				
ANR	3952720	Statement	)	2324:36:59603:59603	3952563	9	True				
ANR	3952721	CompoundStatement		23:38:568:568	3952563	10					
ANR	3952722	IfStatement	if ( ! curbb )		3952563	0					
ANR	3952723	Condition	! curbb	2325:7:59614:59619	3952563	0	True				
ANR	3952724	UnaryOperationExpression	! curbb		3952563	0					
ANR	3952725	UnaryOperator	!		3952563	0					
ANR	3952726	Identifier	curbb		3952563	1					
ANR	3952727	CompoundStatement		24:15:585:585	3952563	1					
ANR	3952728	ExpressionStatement	curbb = bb	2326:4:59628:59638	3952563	0	True				
ANR	3952729	AssignmentExpression	curbb = bb		3952563	0		=			
ANR	3952730	Identifier	curbb		3952563	0					
ANR	3952731	Identifier	bb		3952563	1					
ANR	3952732	IfStatement	"if ( r_anal_bb_is_in_offset ( bb , core -> offset ) )"		3952563	1					
ANR	3952733	Condition	"r_anal_bb_is_in_offset ( bb , core -> offset )"	2328:7:59652:59692	3952563	0	True				
ANR	3952734	CallExpression	"r_anal_bb_is_in_offset ( bb , core -> offset )"		3952563	0					
ANR	3952735	Callee	r_anal_bb_is_in_offset		3952563	0					
ANR	3952736	Identifier	r_anal_bb_is_in_offset		3952563	0					
ANR	3952737	ArgumentList	bb		3952563	1					
ANR	3952738	Argument	bb		3952563	0					
ANR	3952739	Identifier	bb		3952563	0					
ANR	3952740	Argument	core -> offset		3952563	1					
ANR	3952741	PtrMemberAccess	core -> offset		3952563	0					
ANR	3952742	Identifier	core		3952563	0					
ANR	3952743	Identifier	offset		3952563	1					
ANR	3952744	CompoundStatement		27:50:658:658	3952563	1					
ANR	3952745	ExpressionStatement	curbb = bb	2329:4:59701:59711	3952563	0	True				
ANR	3952746	AssignmentExpression	curbb = bb		3952563	0		=			
ANR	3952747	Identifier	curbb		3952563	0					
ANR	3952748	Identifier	bb		3952563	1					
ANR	3952749	BreakStatement	break ;	2330:4:59717:59722	3952563	1	True				
ANR	3952750	ExpressionStatement	core -> keep_asmqjmps = false	2335:1:59738:59765	3952563	16	True				
ANR	3952751	AssignmentExpression	core -> keep_asmqjmps = false		3952563	0		=			
ANR	3952752	PtrMemberAccess	core -> keep_asmqjmps		3952563	0					
ANR	3952753	Identifier	core		3952563	0					
ANR	3952754	Identifier	keep_asmqjmps		3952563	1					
ANR	3952755	Identifier	false		3952563	1					
ANR	3952756	Statement	r_list_foreach	2336:1:59768:59781	3952563	17	True				
ANR	3952757	Statement	(	2336:16:59783:59783	3952563	18	True				
ANR	3952758	Statement	fcn	2336:17:59784:59786	3952563	19	True				
ANR	3952759	Statement	->	2336:20:59787:59788	3952563	20	True				
ANR	3952760	Statement	bbs	2336:22:59789:59791	3952563	21	True				
ANR	3952761	Statement	","	2336:25:59792:59792	3952563	22	True				
ANR	3952762	Statement	iter	2336:27:59794:59797	3952563	23	True				
ANR	3952763	Statement	","	2336:31:59798:59798	3952563	24	True				
ANR	3952764	Statement	bb	2336:33:59800:59801	3952563	25	True				
ANR	3952765	Statement	)	2336:35:59802:59802	3952563	26	True				
ANR	3952766	CompoundStatement		45:2:998:1047	3952563	27					
ANR	3952767	IfStatement	if ( bb -> addr == UT64_MAX )		3952563	0					
ANR	3952768	Condition	bb -> addr == UT64_MAX	2337:6:59812:59831	3952563	0	True				
ANR	3952769	EqualityExpression	bb -> addr == UT64_MAX		3952563	0		==			
ANR	3952770	PtrMemberAccess	bb -> addr		3952563	0					
ANR	3952771	Identifier	bb		3952563	0					
ANR	3952772	Identifier	addr		3952563	1					
ANR	3952773	Identifier	UT64_MAX		3952563	1					
ANR	3952774	CompoundStatement		36:28:797:797	3952563	1					
ANR	3952775	ContinueStatement	continue ;	2338:3:59839:59847	3952563	0	True				
ANR	3952776	IfStatement	"if ( few && ! isbbfew ( curbb , bb ) )"		3952563	1					
ANR	3952777	Condition	"few && ! isbbfew ( curbb , bb )"	2340:6:59859:59885	3952563	0	True				
ANR	3952778	AndExpression	"few && ! isbbfew ( curbb , bb )"		3952563	0		&&			
ANR	3952779	Identifier	few		3952563	0					
ANR	3952780	UnaryOperationExpression	"! isbbfew ( curbb , bb )"		3952563	1					
ANR	3952781	UnaryOperator	!		3952563	0					
ANR	3952782	CallExpression	"isbbfew ( curbb , bb )"		3952563	1					
ANR	3952783	Callee	isbbfew		3952563	0					
ANR	3952784	Identifier	isbbfew		3952563	0					
ANR	3952785	ArgumentList	curbb		3952563	1					
ANR	3952786	Argument	curbb		3952563	0					
ANR	3952787	Identifier	curbb		3952563	0					
ANR	3952788	Argument	bb		3952563	1					
ANR	3952789	Identifier	bb		3952563	0					
ANR	3952790	CompoundStatement		39:35:851:851	3952563	1					
ANR	3952791	ContinueStatement	continue ;	2341:3:59893:59901	3952563	0	True				
ANR	3952792	IdentifierDeclStatement	"char * body = get_bb_body ( core , bb , mode2opts ( g ) , fcn , emu , saved_gp , saved_arena ) ;"	2343:2:59909:59992	3952563	2	True				
ANR	3952793	IdentifierDecl	"* body = get_bb_body ( core , bb , mode2opts ( g ) , fcn , emu , saved_gp , saved_arena )"		3952563	0					
ANR	3952794	IdentifierDeclType	char *		3952563	0					
ANR	3952795	Identifier	body		3952563	1					
ANR	3952796	AssignmentExpression	"* body = get_bb_body ( core , bb , mode2opts ( g ) , fcn , emu , saved_gp , saved_arena )"		3952563	2		=			
ANR	3952797	Identifier	body		3952563	0					
ANR	3952798	CallExpression	"get_bb_body ( core , bb , mode2opts ( g ) , fcn , emu , saved_gp , saved_arena )"		3952563	1					
ANR	3952799	Callee	get_bb_body		3952563	0					
ANR	3952800	Identifier	get_bb_body		3952563	0					
ANR	3952801	ArgumentList	core		3952563	1					
ANR	3952802	Argument	core		3952563	0					
ANR	3952803	Identifier	core		3952563	0					
ANR	3952804	Argument	bb		3952563	1					
ANR	3952805	Identifier	bb		3952563	0					
ANR	3952806	Argument	mode2opts ( g )		3952563	2					
ANR	3952807	CallExpression	mode2opts ( g )		3952563	0					
ANR	3952808	Callee	mode2opts		3952563	0					
ANR	3952809	Identifier	mode2opts		3952563	0					
ANR	3952810	ArgumentList	g		3952563	1					
ANR	3952811	Argument	g		3952563	0					
ANR	3952812	Identifier	g		3952563	0					
ANR	3952813	Argument	fcn		3952563	3					
ANR	3952814	Identifier	fcn		3952563	0					
ANR	3952815	Argument	emu		3952563	4					
ANR	3952816	Identifier	emu		3952563	0					
ANR	3952817	Argument	saved_gp		3952563	5					
ANR	3952818	Identifier	saved_gp		3952563	0					
ANR	3952819	Argument	saved_arena		3952563	6					
ANR	3952820	Identifier	saved_arena		3952563	0					
ANR	3952821	IdentifierDeclStatement	char * title = get_title ( bb -> addr ) ;	2344:2:59996:60030	3952563	3	True				
ANR	3952822	IdentifierDecl	* title = get_title ( bb -> addr )		3952563	0					
ANR	3952823	IdentifierDeclType	char *		3952563	0					
ANR	3952824	Identifier	title		3952563	1					
ANR	3952825	AssignmentExpression	* title = get_title ( bb -> addr )		3952563	2		=			
ANR	3952826	Identifier	title		3952563	0					
ANR	3952827	CallExpression	get_title ( bb -> addr )		3952563	1					
ANR	3952828	Callee	get_title		3952563	0					
ANR	3952829	Identifier	get_title		3952563	0					
ANR	3952830	ArgumentList	bb -> addr		3952563	1					
ANR	3952831	Argument	bb -> addr		3952563	0					
ANR	3952832	PtrMemberAccess	bb -> addr		3952563	0					
ANR	3952833	Identifier	bb		3952563	0					
ANR	3952834	Identifier	addr		3952563	1					
ANR	3952835	IdentifierDeclStatement	"RANode * node = r_agraph_add_node ( g , title , body ) ;"	2346:2:60035:60084	3952563	4	True				
ANR	3952836	IdentifierDecl	"* node = r_agraph_add_node ( g , title , body )"		3952563	0					
ANR	3952837	IdentifierDeclType	RANode *		3952563	0					
ANR	3952838	Identifier	node		3952563	1					
ANR	3952839	AssignmentExpression	"* node = r_agraph_add_node ( g , title , body )"		3952563	2		=			
ANR	3952840	Identifier	node		3952563	0					
ANR	3952841	CallExpression	"r_agraph_add_node ( g , title , body )"		3952563	1					
ANR	3952842	Callee	r_agraph_add_node		3952563	0					
ANR	3952843	Identifier	r_agraph_add_node		3952563	0					
ANR	3952844	ArgumentList	g		3952563	1					
ANR	3952845	Argument	g		3952563	0					
ANR	3952846	Identifier	g		3952563	0					
ANR	3952847	Argument	title		3952563	1					
ANR	3952848	Identifier	title		3952563	0					
ANR	3952849	Argument	body		3952563	2					
ANR	3952850	Identifier	body		3952563	0					
ANR	3952851	ExpressionStatement	"shortcuts = g -> is_interactive ? r_config_get_i ( core -> config , ""graph.nodejmps"" ) : false"	2347:2:60088:60175	3952563	5	True				
ANR	3952852	AssignmentExpression	"shortcuts = g -> is_interactive ? r_config_get_i ( core -> config , ""graph.nodejmps"" ) : false"		3952563	0		=			
ANR	3952853	Identifier	shortcuts		3952563	0					
ANR	3952854	ConditionalExpression	"g -> is_interactive ? r_config_get_i ( core -> config , ""graph.nodejmps"" ) : false"		3952563	1					
ANR	3952855	Condition	g -> is_interactive		3952563	0					
ANR	3952856	PtrMemberAccess	g -> is_interactive		3952563	0					
ANR	3952857	Identifier	g		3952563	0					
ANR	3952858	Identifier	is_interactive		3952563	1					
ANR	3952859	CallExpression	"r_config_get_i ( core -> config , ""graph.nodejmps"" )"		3952563	1					
ANR	3952860	Callee	r_config_get_i		3952563	0					
ANR	3952861	Identifier	r_config_get_i		3952563	0					
ANR	3952862	ArgumentList	core -> config		3952563	1					
ANR	3952863	Argument	core -> config		3952563	0					
ANR	3952864	PtrMemberAccess	core -> config		3952563	0					
ANR	3952865	Identifier	core		3952563	0					
ANR	3952866	Identifier	config		3952563	1					
ANR	3952867	Argument	"""graph.nodejmps"""		3952563	1					
ANR	3952868	PrimaryExpression	"""graph.nodejmps"""		3952563	0					
ANR	3952869	Identifier	false		3952563	2					
ANR	3952870	IfStatement	if ( shortcuts )		3952563	6					
ANR	3952871	Condition	shortcuts	2349:6:60184:60192	3952563	0	True				
ANR	3952872	Identifier	shortcuts		3952563	0					
ANR	3952873	CompoundStatement		48:17:1158:1158	3952563	1					
ANR	3952874	ExpressionStatement	"shortcut = r_core_add_asmqjmp ( core , bb -> addr )"	2350:3:60200:60246	3952563	0	True				
ANR	3952875	AssignmentExpression	"shortcut = r_core_add_asmqjmp ( core , bb -> addr )"		3952563	0		=			
ANR	3952876	Identifier	shortcut		3952563	0					
ANR	3952877	CallExpression	"r_core_add_asmqjmp ( core , bb -> addr )"		3952563	1					
ANR	3952878	Callee	r_core_add_asmqjmp		3952563	0					
ANR	3952879	Identifier	r_core_add_asmqjmp		3952563	0					
ANR	3952880	ArgumentList	core		3952563	1					
ANR	3952881	Argument	core		3952563	0					
ANR	3952882	Identifier	core		3952563	0					
ANR	3952883	Argument	bb -> addr		3952563	1					
ANR	3952884	PtrMemberAccess	bb -> addr		3952563	0					
ANR	3952885	Identifier	bb		3952563	0					
ANR	3952886	Identifier	addr		3952563	1					
ANR	3952887	IfStatement	if ( shortcut )		3952563	1					
ANR	3952888	Condition	shortcut	2351:7:60255:60262	3952563	0	True				
ANR	3952889	Identifier	shortcut		3952563	0					
ANR	3952890	CompoundStatement		50:17:1228:1228	3952563	1					
ANR	3952891	ExpressionStatement	"sdb_set ( g -> db , sdb_fmt ( ""agraph.nodes.%s.shortcut"" , title ) , shortcut , 0 )"	2352:4:60271:60344	3952563	0	True				
ANR	3952892	CallExpression	"sdb_set ( g -> db , sdb_fmt ( ""agraph.nodes.%s.shortcut"" , title ) , shortcut , 0 )"		3952563	0					
ANR	3952893	Callee	sdb_set		3952563	0					
ANR	3952894	Identifier	sdb_set		3952563	0					
ANR	3952895	ArgumentList	g -> db		3952563	1					
ANR	3952896	Argument	g -> db		3952563	0					
ANR	3952897	PtrMemberAccess	g -> db		3952563	0					
ANR	3952898	Identifier	g		3952563	0					
ANR	3952899	Identifier	db		3952563	1					
ANR	3952900	Argument	"sdb_fmt ( ""agraph.nodes.%s.shortcut"" , title )"		3952563	1					
ANR	3952901	CallExpression	"sdb_fmt ( ""agraph.nodes.%s.shortcut"" , title )"		3952563	0					
ANR	3952902	Callee	sdb_fmt		3952563	0					
ANR	3952903	Identifier	sdb_fmt		3952563	0					
ANR	3952904	ArgumentList	"""agraph.nodes.%s.shortcut"""		3952563	1					
ANR	3952905	Argument	"""agraph.nodes.%s.shortcut"""		3952563	0					
ANR	3952906	PrimaryExpression	"""agraph.nodes.%s.shortcut"""		3952563	0					
ANR	3952907	Argument	title		3952563	1					
ANR	3952908	Identifier	title		3952563	0					
ANR	3952909	Argument	shortcut		3952563	2					
ANR	3952910	Identifier	shortcut		3952563	0					
ANR	3952911	Argument	0		3952563	3					
ANR	3952912	PrimaryExpression	0		3952563	0					
ANR	3952913	ExpressionStatement	free ( shortcut )	2353:4:60350:60365	3952563	1	True				
ANR	3952914	CallExpression	free ( shortcut )		3952563	0					
ANR	3952915	Callee	free		3952563	0					
ANR	3952916	Identifier	free		3952563	0					
ANR	3952917	ArgumentList	shortcut		3952563	1					
ANR	3952918	Argument	shortcut		3952563	0					
ANR	3952919	Identifier	shortcut		3952563	0					
ANR	3952920	ExpressionStatement	free ( body )	2356:2:60378:60389	3952563	7	True				
ANR	3952921	CallExpression	free ( body )		3952563	0					
ANR	3952922	Callee	free		3952563	0					
ANR	3952923	Identifier	free		3952563	0					
ANR	3952924	ArgumentList	body		3952563	1					
ANR	3952925	Argument	body		3952563	0					
ANR	3952926	Identifier	body		3952563	0					
ANR	3952927	ExpressionStatement	free ( title )	2357:2:60393:60405	3952563	8	True				
ANR	3952928	CallExpression	free ( title )		3952563	0					
ANR	3952929	Callee	free		3952563	0					
ANR	3952930	Identifier	free		3952563	0					
ANR	3952931	ArgumentList	title		3952563	1					
ANR	3952932	Argument	title		3952563	0					
ANR	3952933	Identifier	title		3952563	0					
ANR	3952934	IfStatement	if ( ! node )		3952563	9					
ANR	3952935	Condition	! node	2358:6:60413:60417	3952563	0	True				
ANR	3952936	UnaryOperationExpression	! node		3952563	0					
ANR	3952937	UnaryOperator	!		3952563	0					
ANR	3952938	Identifier	node		3952563	1					
ANR	3952939	CompoundStatement		57:13:1383:1383	3952563	1					
ANR	3952940	GotoStatement	goto cleanup ;	2359:3:60425:60437	3952563	0	True				
ANR	3952941	Identifier	cleanup		3952563	0					
ANR	3952942	ExpressionStatement	core -> keep_asmqjmps = true	2361:2:60445:60471	3952563	10	True				
ANR	3952943	AssignmentExpression	core -> keep_asmqjmps = true		3952563	0		=			
ANR	3952944	PtrMemberAccess	core -> keep_asmqjmps		3952563	0					
ANR	3952945	Identifier	core		3952563	0					
ANR	3952946	Identifier	keep_asmqjmps		3952563	1					
ANR	3952947	Identifier	true		3952563	1					
ANR	3952948	Statement	r_list_foreach	2364:1:60478:60491	3952563	28	True				
ANR	3952949	Statement	(	2364:16:60493:60493	3952563	29	True				
ANR	3952950	Statement	fcn	2364:17:60494:60496	3952563	30	True				
ANR	3952951	Statement	->	2364:20:60497:60498	3952563	31	True				
ANR	3952952	Statement	bbs	2364:22:60499:60501	3952563	32	True				
ANR	3952953	Statement	","	2364:25:60502:60502	3952563	33	True				
ANR	3952954	Statement	iter	2364:27:60504:60507	3952563	34	True				
ANR	3952955	Statement	","	2364:31:60508:60508	3952563	35	True				
ANR	3952956	Statement	bb	2364:33:60510:60511	3952563	36	True				
ANR	3952957	Statement	)	2364:35:60512:60512	3952563	37	True				
ANR	3952958	CompoundStatement		73:2:1665:1674	3952563	38					
ANR	3952959	IfStatement	if ( bb -> addr == UT64_MAX )		3952563	0					
ANR	3952960	Condition	bb -> addr == UT64_MAX	2365:6:60522:60541	3952563	0	True				
ANR	3952961	EqualityExpression	bb -> addr == UT64_MAX		3952563	0		==			
ANR	3952962	PtrMemberAccess	bb -> addr		3952563	0					
ANR	3952963	Identifier	bb		3952563	0					
ANR	3952964	Identifier	addr		3952563	1					
ANR	3952965	Identifier	UT64_MAX		3952563	1					
ANR	3952966	CompoundStatement		64:28:1507:1507	3952563	1					
ANR	3952967	ContinueStatement	continue ;	2366:3:60549:60557	3952563	0	True				
ANR	3952968	IfStatement	"if ( few && ! isbbfew ( curbb , bb ) )"		3952563	1					
ANR	3952969	Condition	"few && ! isbbfew ( curbb , bb )"	2368:6:60569:60595	3952563	0	True				
ANR	3952970	AndExpression	"few && ! isbbfew ( curbb , bb )"		3952563	0		&&			
ANR	3952971	Identifier	few		3952563	0					
ANR	3952972	UnaryOperationExpression	"! isbbfew ( curbb , bb )"		3952563	1					
ANR	3952973	UnaryOperator	!		3952563	0					
ANR	3952974	CallExpression	"isbbfew ( curbb , bb )"		3952563	1					
ANR	3952975	Callee	isbbfew		3952563	0					
ANR	3952976	Identifier	isbbfew		3952563	0					
ANR	3952977	ArgumentList	curbb		3952563	1					
ANR	3952978	Argument	curbb		3952563	0					
ANR	3952979	Identifier	curbb		3952563	0					
ANR	3952980	Argument	bb		3952563	1					
ANR	3952981	Identifier	bb		3952563	0					
ANR	3952982	CompoundStatement		67:35:1561:1561	3952563	1					
ANR	3952983	ContinueStatement	continue ;	2369:3:60603:60611	3952563	0	True				
ANR	3952984	IdentifierDeclStatement	char * title = get_title ( bb -> addr ) ;	2372:2:60620:60654	3952563	2	True				
ANR	3952985	IdentifierDecl	* title = get_title ( bb -> addr )		3952563	0					
ANR	3952986	IdentifierDeclType	char *		3952563	0					
ANR	3952987	Identifier	title		3952563	1					
ANR	3952988	AssignmentExpression	* title = get_title ( bb -> addr )		3952563	2		=			
ANR	3952989	Identifier	title		3952563	0					
ANR	3952990	CallExpression	get_title ( bb -> addr )		3952563	1					
ANR	3952991	Callee	get_title		3952563	0					
ANR	3952992	Identifier	get_title		3952563	0					
ANR	3952993	ArgumentList	bb -> addr		3952563	1					
ANR	3952994	Argument	bb -> addr		3952563	0					
ANR	3952995	PtrMemberAccess	bb -> addr		3952563	0					
ANR	3952996	Identifier	bb		3952563	0					
ANR	3952997	Identifier	addr		3952563	1					
ANR	3952998	IdentifierDeclStatement	"RANode * u = r_agraph_get_node ( g , title ) ;"	2373:2:60658:60698	3952563	3	True				
ANR	3952999	IdentifierDecl	"* u = r_agraph_get_node ( g , title )"		3952563	0					
ANR	3953000	IdentifierDeclType	RANode *		3952563	0					
ANR	3953001	Identifier	u		3952563	1					
ANR	3953002	AssignmentExpression	"* u = r_agraph_get_node ( g , title )"		3952563	2		=			
ANR	3953003	Identifier	u		3952563	0					
ANR	3953004	CallExpression	"r_agraph_get_node ( g , title )"		3952563	1					
ANR	3953005	Callee	r_agraph_get_node		3952563	0					
ANR	3953006	Identifier	r_agraph_get_node		3952563	0					
ANR	3953007	ArgumentList	g		3952563	1					
ANR	3953008	Argument	g		3952563	0					
ANR	3953009	Identifier	g		3952563	0					
ANR	3953010	Argument	title		3952563	1					
ANR	3953011	Identifier	title		3952563	0					
ANR	3953012	IdentifierDeclStatement	RANode * v ;	2374:2:60702:60711	3952563	4	True				
ANR	3953013	IdentifierDecl	* v		3952563	0					
ANR	3953014	IdentifierDeclType	RANode *		3952563	0					
ANR	3953015	Identifier	v		3952563	1					
ANR	3953016	ExpressionStatement	free ( title )	2375:2:60715:60727	3952563	5	True				
ANR	3953017	CallExpression	free ( title )		3952563	0					
ANR	3953018	Callee	free		3952563	0					
ANR	3953019	Identifier	free		3952563	0					
ANR	3953020	ArgumentList	title		3952563	1					
ANR	3953021	Argument	title		3952563	0					
ANR	3953022	Identifier	title		3952563	0					
ANR	3953023	IfStatement	if ( bb -> jump != UT64_MAX )		3952563	6					
ANR	3953024	Condition	bb -> jump != UT64_MAX	2376:6:60735:60754	3952563	0	True				
ANR	3953025	EqualityExpression	bb -> jump != UT64_MAX		3952563	0		!=			
ANR	3953026	PtrMemberAccess	bb -> jump		3952563	0					
ANR	3953027	Identifier	bb		3952563	0					
ANR	3953028	Identifier	jump		3952563	1					
ANR	3953029	Identifier	UT64_MAX		3952563	1					
ANR	3953030	CompoundStatement		75:28:1720:1720	3952563	1					
ANR	3953031	ExpressionStatement	title = get_title ( bb -> jump )	2377:3:60762:60790	3952563	0	True				
ANR	3953032	AssignmentExpression	title = get_title ( bb -> jump )		3952563	0		=			
ANR	3953033	Identifier	title		3952563	0					
ANR	3953034	CallExpression	get_title ( bb -> jump )		3952563	1					
ANR	3953035	Callee	get_title		3952563	0					
ANR	3953036	Identifier	get_title		3952563	0					
ANR	3953037	ArgumentList	bb -> jump		3952563	1					
ANR	3953038	Argument	bb -> jump		3952563	0					
ANR	3953039	PtrMemberAccess	bb -> jump		3952563	0					
ANR	3953040	Identifier	bb		3952563	0					
ANR	3953041	Identifier	jump		3952563	1					
ANR	3953042	ExpressionStatement	"v = r_agraph_get_node ( g , title )"	2378:3:60795:60827	3952563	1	True				
ANR	3953043	AssignmentExpression	"v = r_agraph_get_node ( g , title )"		3952563	0		=			
ANR	3953044	Identifier	v		3952563	0					
ANR	3953045	CallExpression	"r_agraph_get_node ( g , title )"		3952563	1					
ANR	3953046	Callee	r_agraph_get_node		3952563	0					
ANR	3953047	Identifier	r_agraph_get_node		3952563	0					
ANR	3953048	ArgumentList	g		3952563	1					
ANR	3953049	Argument	g		3952563	0					
ANR	3953050	Identifier	g		3952563	0					
ANR	3953051	Argument	title		3952563	1					
ANR	3953052	Identifier	title		3952563	0					
ANR	3953053	ExpressionStatement	free ( title )	2379:3:60832:60844	3952563	2	True				
ANR	3953054	CallExpression	free ( title )		3952563	0					
ANR	3953055	Callee	free		3952563	0					
ANR	3953056	Identifier	free		3952563	0					
ANR	3953057	ArgumentList	title		3952563	1					
ANR	3953058	Argument	title		3952563	0					
ANR	3953059	Identifier	title		3952563	0					
ANR	3953060	ExpressionStatement	"r_agraph_add_edge ( g , u , v )"	2380:3:60849:60876	3952563	3	True				
ANR	3953061	CallExpression	"r_agraph_add_edge ( g , u , v )"		3952563	0					
ANR	3953062	Callee	r_agraph_add_edge		3952563	0					
ANR	3953063	Identifier	r_agraph_add_edge		3952563	0					
ANR	3953064	ArgumentList	g		3952563	1					
ANR	3953065	Argument	g		3952563	0					
ANR	3953066	Identifier	g		3952563	0					
ANR	3953067	Argument	u		3952563	1					
ANR	3953068	Identifier	u		3952563	0					
ANR	3953069	Argument	v		3952563	2					
ANR	3953070	Identifier	v		3952563	0					
ANR	3953071	IfStatement	if ( bb -> fail != UT64_MAX )		3952563	7					
ANR	3953072	Condition	bb -> fail != UT64_MAX	2382:6:60888:60907	3952563	0	True				
ANR	3953073	EqualityExpression	bb -> fail != UT64_MAX		3952563	0		!=			
ANR	3953074	PtrMemberAccess	bb -> fail		3952563	0					
ANR	3953075	Identifier	bb		3952563	0					
ANR	3953076	Identifier	fail		3952563	1					
ANR	3953077	Identifier	UT64_MAX		3952563	1					
ANR	3953078	CompoundStatement		81:28:1873:1873	3952563	1					
ANR	3953079	ExpressionStatement	title = get_title ( bb -> fail )	2383:3:60915:60943	3952563	0	True				
ANR	3953080	AssignmentExpression	title = get_title ( bb -> fail )		3952563	0		=			
ANR	3953081	Identifier	title		3952563	0					
ANR	3953082	CallExpression	get_title ( bb -> fail )		3952563	1					
ANR	3953083	Callee	get_title		3952563	0					
ANR	3953084	Identifier	get_title		3952563	0					
ANR	3953085	ArgumentList	bb -> fail		3952563	1					
ANR	3953086	Argument	bb -> fail		3952563	0					
ANR	3953087	PtrMemberAccess	bb -> fail		3952563	0					
ANR	3953088	Identifier	bb		3952563	0					
ANR	3953089	Identifier	fail		3952563	1					
ANR	3953090	ExpressionStatement	"v = r_agraph_get_node ( g , title )"	2384:3:60948:60980	3952563	1	True				
ANR	3953091	AssignmentExpression	"v = r_agraph_get_node ( g , title )"		3952563	0		=			
ANR	3953092	Identifier	v		3952563	0					
ANR	3953093	CallExpression	"r_agraph_get_node ( g , title )"		3952563	1					
ANR	3953094	Callee	r_agraph_get_node		3952563	0					
ANR	3953095	Identifier	r_agraph_get_node		3952563	0					
ANR	3953096	ArgumentList	g		3952563	1					
ANR	3953097	Argument	g		3952563	0					
ANR	3953098	Identifier	g		3952563	0					
ANR	3953099	Argument	title		3952563	1					
ANR	3953100	Identifier	title		3952563	0					
ANR	3953101	ExpressionStatement	free ( title )	2385:3:60985:60997	3952563	2	True				
ANR	3953102	CallExpression	free ( title )		3952563	0					
ANR	3953103	Callee	free		3952563	0					
ANR	3953104	Identifier	free		3952563	0					
ANR	3953105	ArgumentList	title		3952563	1					
ANR	3953106	Argument	title		3952563	0					
ANR	3953107	Identifier	title		3952563	0					
ANR	3953108	ExpressionStatement	"r_agraph_add_edge ( g , u , v )"	2386:3:61002:61029	3952563	3	True				
ANR	3953109	CallExpression	"r_agraph_add_edge ( g , u , v )"		3952563	0					
ANR	3953110	Callee	r_agraph_add_edge		3952563	0					
ANR	3953111	Identifier	r_agraph_add_edge		3952563	0					
ANR	3953112	ArgumentList	g		3952563	1					
ANR	3953113	Argument	g		3952563	0					
ANR	3953114	Identifier	g		3952563	0					
ANR	3953115	Argument	u		3952563	1					
ANR	3953116	Identifier	u		3952563	0					
ANR	3953117	Argument	v		3952563	2					
ANR	3953118	Identifier	v		3952563	0					
ANR	3953119	IfStatement	if ( bb -> switch_op )		3952563	8					
ANR	3953120	Condition	bb -> switch_op	2388:6:61041:61053	3952563	0	True				
ANR	3953121	PtrMemberAccess	bb -> switch_op		3952563	0					
ANR	3953122	Identifier	bb		3952563	0					
ANR	3953123	Identifier	switch_op		3952563	1					
ANR	3953124	CompoundStatement		89:3:2042:2058	3952563	1					
ANR	3953125	IdentifierDeclStatement	RListIter * it ;	2389:3:61061:61074	3952563	0	True				
ANR	3953126	IdentifierDecl	* it		3952563	0					
ANR	3953127	IdentifierDeclType	RListIter *		3952563	0					
ANR	3953128	Identifier	it		3952563	1					
ANR	3953129	IdentifierDeclStatement	RAnalCaseOp * cop ;	2390:3:61079:61095	3952563	1	True				
ANR	3953130	IdentifierDecl	* cop		3952563	0					
ANR	3953131	IdentifierDeclType	RAnalCaseOp *		3952563	0					
ANR	3953132	Identifier	cop		3952563	1					
ANR	3953133	Statement	r_list_foreach	2391:3:61100:61113	3952563	2	True				
ANR	3953134	Statement	(	2391:18:61115:61115	3952563	3	True				
ANR	3953135	Statement	bb	2391:19:61116:61117	3952563	4	True				
ANR	3953136	Statement	->	2391:21:61118:61119	3952563	5	True				
ANR	3953137	Statement	switch_op	2391:23:61120:61128	3952563	6	True				
ANR	3953138	Statement	->	2391:32:61129:61130	3952563	7	True				
ANR	3953139	Statement	cases	2391:34:61131:61135	3952563	8	True				
ANR	3953140	Statement	","	2391:39:61136:61136	3952563	9	True				
ANR	3953141	Statement	it	2391:41:61138:61139	3952563	10	True				
ANR	3953142	Statement	","	2391:43:61140:61140	3952563	11	True				
ANR	3953143	Statement	cop	2391:45:61142:61144	3952563	12	True				
ANR	3953144	Statement	)	2391:48:61145:61145	3952563	13	True				
ANR	3953145	CompoundStatement		90:50:2110:2110	3952563	14					
ANR	3953146	ExpressionStatement	title = get_title ( cop -> addr )	2392:4:61153:61182	3952563	0	True				
ANR	3953147	AssignmentExpression	title = get_title ( cop -> addr )		3952563	0		=			
ANR	3953148	Identifier	title		3952563	0					
ANR	3953149	CallExpression	get_title ( cop -> addr )		3952563	1					
ANR	3953150	Callee	get_title		3952563	0					
ANR	3953151	Identifier	get_title		3952563	0					
ANR	3953152	ArgumentList	cop -> addr		3952563	1					
ANR	3953153	Argument	cop -> addr		3952563	0					
ANR	3953154	PtrMemberAccess	cop -> addr		3952563	0					
ANR	3953155	Identifier	cop		3952563	0					
ANR	3953156	Identifier	addr		3952563	1					
ANR	3953157	ExpressionStatement	"v = r_agraph_get_node ( g , title )"	2393:4:61188:61220	3952563	1	True				
ANR	3953158	AssignmentExpression	"v = r_agraph_get_node ( g , title )"		3952563	0		=			
ANR	3953159	Identifier	v		3952563	0					
ANR	3953160	CallExpression	"r_agraph_get_node ( g , title )"		3952563	1					
ANR	3953161	Callee	r_agraph_get_node		3952563	0					
ANR	3953162	Identifier	r_agraph_get_node		3952563	0					
ANR	3953163	ArgumentList	g		3952563	1					
ANR	3953164	Argument	g		3952563	0					
ANR	3953165	Identifier	g		3952563	0					
ANR	3953166	Argument	title		3952563	1					
ANR	3953167	Identifier	title		3952563	0					
ANR	3953168	ExpressionStatement	free ( title )	2394:4:61226:61238	3952563	2	True				
ANR	3953169	CallExpression	free ( title )		3952563	0					
ANR	3953170	Callee	free		3952563	0					
ANR	3953171	Identifier	free		3952563	0					
ANR	3953172	ArgumentList	title		3952563	1					
ANR	3953173	Argument	title		3952563	0					
ANR	3953174	Identifier	title		3952563	0					
ANR	3953175	ExpressionStatement	"r_agraph_add_edge ( g , u , v )"	2395:4:61244:61271	3952563	3	True				
ANR	3953176	CallExpression	"r_agraph_add_edge ( g , u , v )"		3952563	0					
ANR	3953177	Callee	r_agraph_add_edge		3952563	0					
ANR	3953178	Identifier	r_agraph_add_edge		3952563	0					
ANR	3953179	ArgumentList	g		3952563	1					
ANR	3953180	Argument	g		3952563	0					
ANR	3953181	Identifier	g		3952563	0					
ANR	3953182	Argument	u		3952563	1					
ANR	3953183	Identifier	u		3952563	0					
ANR	3953184	Argument	v		3952563	2					
ANR	3953185	Identifier	v		3952563	0					
ANR	3953186	ExpressionStatement	delete_dup_edges ( g )	2400:1:61287:61307	3952563	39	True				
ANR	3953187	CallExpression	delete_dup_edges ( g )		3952563	0					
ANR	3953188	Callee	delete_dup_edges		3952563	0					
ANR	3953189	Identifier	delete_dup_edges		3952563	0					
ANR	3953190	ArgumentList	g		3952563	1					
ANR	3953191	Argument	g		3952563	0					
ANR	3953192	Identifier	g		3952563	0					
ANR	3953193	ExpressionStatement	ret = true	2401:1:61310:61320	3952563	40	True				
ANR	3953194	AssignmentExpression	ret = true		3952563	0		=			
ANR	3953195	Identifier	ret		3952563	0					
ANR	3953196	Identifier	true		3952563	1					
ANR	3953197	Label	cleanup :	2403:0:61323:61330	3952563	41	True				
ANR	3953198	Identifier	cleanup		3952563	0					
ANR	3953199	IfStatement	if ( emu )		3952563	42					
ANR	3953200	Condition	emu	2404:5:61337:61339	3952563	0	True				
ANR	3953201	Identifier	emu		3952563	0					
ANR	3953202	CompoundStatement		103:10:2305:2305	3952563	1					
ANR	3953203	ExpressionStatement	core -> anal -> gp = saved_gp	2405:2:61346:61371	3952563	0	True				
ANR	3953204	AssignmentExpression	core -> anal -> gp = saved_gp		3952563	0		=			
ANR	3953205	PtrMemberAccess	core -> anal -> gp		3952563	0					
ANR	3953206	PtrMemberAccess	core -> anal		3952563	0					
ANR	3953207	Identifier	core		3952563	0					
ANR	3953208	Identifier	anal		3952563	1					
ANR	3953209	Identifier	gp		3952563	1					
ANR	3953210	Identifier	saved_gp		3952563	1					
ANR	3953211	IfStatement	if ( saved_arena )		3952563	1					
ANR	3953212	Condition	saved_arena	2406:6:61379:61389	3952563	0	True				
ANR	3953213	Identifier	saved_arena		3952563	0					
ANR	3953214	CompoundStatement		105:19:2355:2355	3952563	1					
ANR	3953215	ExpressionStatement	"r_reg_arena_poke ( core -> anal -> reg , saved_arena )"	2407:3:61397:61444	3952563	0	True				
ANR	3953216	CallExpression	"r_reg_arena_poke ( core -> anal -> reg , saved_arena )"		3952563	0					
ANR	3953217	Callee	r_reg_arena_poke		3952563	0					
ANR	3953218	Identifier	r_reg_arena_poke		3952563	0					
ANR	3953219	ArgumentList	core -> anal -> reg		3952563	1					
ANR	3953220	Argument	core -> anal -> reg		3952563	0					
ANR	3953221	PtrMemberAccess	core -> anal -> reg		3952563	0					
ANR	3953222	PtrMemberAccess	core -> anal		3952563	0					
ANR	3953223	Identifier	core		3952563	0					
ANR	3953224	Identifier	anal		3952563	1					
ANR	3953225	Identifier	reg		3952563	1					
ANR	3953226	Argument	saved_arena		3952563	1					
ANR	3953227	Identifier	saved_arena		3952563	0					
ANR	3953228	ExpressionStatement	R_FREE ( saved_arena )	2408:3:61449:61469	3952563	1	True				
ANR	3953229	CallExpression	R_FREE ( saved_arena )		3952563	0					
ANR	3953230	Callee	R_FREE		3952563	0					
ANR	3953231	Identifier	R_FREE		3952563	0					
ANR	3953232	ArgumentList	saved_arena		3952563	1					
ANR	3953233	Argument	saved_arena		3952563	0					
ANR	3953234	Identifier	saved_arena		3952563	0					
ANR	3953235	ExpressionStatement	core -> anal -> stackptr = saved_stackptr	2411:1:61479:61516	3952563	43	True				
ANR	3953236	AssignmentExpression	core -> anal -> stackptr = saved_stackptr		3952563	0		=			
ANR	3953237	PtrMemberAccess	core -> anal -> stackptr		3952563	0					
ANR	3953238	PtrMemberAccess	core -> anal		3952563	0					
ANR	3953239	Identifier	core		3952563	0					
ANR	3953240	Identifier	anal		3952563	1					
ANR	3953241	Identifier	stackptr		3952563	1					
ANR	3953242	Identifier	saved_stackptr		3952563	1					
ANR	3953243	ReturnStatement	return ret ;	2412:1:61519:61529	3952563	44	True				
ANR	3953244	Identifier	ret		3952563	0					
ANR	3953245	ReturnType	static int		3952563	1					
ANR	3953246	Identifier	get_bbnodes		3952563	2					
ANR	3953247	ParameterList	"RAGraph * g , RCore * core , RAnalFunction * fcn"		3952563	3					
ANR	3953248	Parameter	RAGraph * g	2302:23:58991:59000	3952563	0	True				
ANR	3953249	ParameterType	RAGraph *		3952563	0					
ANR	3953250	Identifier	g		3952563	1					
ANR	3953251	Parameter	RCore * core	2302:35:59003:59013	3952563	1	True				
ANR	3953252	ParameterType	RCore *		3952563	0					
ANR	3953253	Identifier	core		3952563	1					
ANR	3953254	Parameter	RAnalFunction * fcn	2302:48:59016:59033	3952563	2	True				
ANR	3953255	ParameterType	RAnalFunction *		3952563	0					
ANR	3953256	Identifier	fcn		3952563	1					
ANR	3953257	CFGEntryNode	ENTRY		3952563		True				
ANR	3953258	CFGExitNode	EXIT		3952563		True				
ANR	3953259	CFGErrorNode	ERROR		3952563		True				
ANR	3953260	Symbol	saved_stackptr		3952563						
ANR	3953261	Symbol	core -> anal -> reg		3952563						
ANR	3953262	Symbol	* fcn		3952563						
ANR	3953263	Symbol	cop		3952563						
ANR	3953264	Symbol	g -> db		3952563						
ANR	3953265	Symbol	core -> offset		3952563						
ANR	3953266	Symbol	bb -> addr		3952563						
ANR	3953267	Symbol	body		3952563						
ANR	3953268	Symbol	mode2opts		3952563						
ANR	3953269	Symbol	get_bb_body		3952563						
ANR	3953270	Symbol	bbcmp		3952563						
ANR	3953271	Symbol	r_agraph_get_node		3952563						
ANR	3953272	Symbol	few		3952563						
ANR	3953273	Symbol	ret		3952563						
ANR	3953274	Symbol	NULL		3952563						
ANR	3953275	Symbol	iter		3952563						
ANR	3953276	Symbol	curbb		3952563						
ANR	3953277	Symbol	it		3952563						
ANR	3953278	Symbol	core		3952563						
ANR	3953279	Symbol	node		3952563						
ANR	3953280	Symbol	g -> is_interactive		3952563						
ANR	3953281	Symbol	r_config_get_i		3952563						
ANR	3953282	Symbol	true		3952563						
ANR	3953283	Symbol	r_reg_arena_peek		3952563						
ANR	3953284	Symbol	bb		3952563						
ANR	3953285	Symbol	saved_arena		3952563						
ANR	3953286	Symbol	shortcuts		3952563						
ANR	3953287	Symbol	* core		3952563						
ANR	3953288	Symbol	core -> keep_asmqjmps		3952563						
ANR	3953289	Symbol	emu		3952563						
ANR	3953290	Symbol	title		3952563						
ANR	3953291	Symbol	core -> anal		3952563						
ANR	3953292	Symbol	get_title		3952563						
ANR	3953293	Symbol	fcn		3952563						
ANR	3953294	Symbol	isbbfew		3952563						
ANR	3953295	Symbol	* cop		3952563						
ANR	3953296	Symbol	shortcut		3952563						
ANR	3953297	Symbol	r_core_add_asmqjmp		3952563						
ANR	3953298	Symbol	saved_gp		3952563						
ANR	3953299	Symbol	UT64_MAX		3952563						
ANR	3953300	Symbol	sdb_fmt		3952563						
ANR	3953301	Symbol	* * core		3952563						
ANR	3953302	Symbol	core -> config		3952563						
ANR	3953303	Symbol	bb -> fail		3952563						
ANR	3953304	Symbol	* bb		3952563						
ANR	3953305	Symbol	g		3952563						
ANR	3953306	Symbol	false		3952563						
ANR	3953307	Symbol	core -> anal -> gp		3952563						
ANR	3953308	Symbol	r_agraph_add_node		3952563						
ANR	3953309	Symbol	cop -> addr		3952563						
ANR	3953310	Symbol	* g		3952563						
ANR	3953311	Symbol	bb -> jump		3952563						
ANR	3953312	Symbol	* core -> anal		3952563						
ANR	3953313	Symbol	fcn -> bbs		3952563						
ANR	3953314	Symbol	u		3952563						
ANR	3953315	Symbol	v		3952563						
ANR	3953316	Symbol	core -> anal -> stackptr		3952563						
ANR	3953317	Symbol	bb -> switch_op		3952563						
ANR	3953318	Symbol	r_anal_bb_is_in_offset		3952563						
ANR	3953319	Function	get_cgnodes	2417:0:61623:62806							
ANR	3953320	FunctionDef	"get_cgnodes (RAGraph * g , RCore * core , RAnalFunction * fcn)"		3953319	0					
ANR	3953321	CompoundStatement		2417:68:61691:62806	3953319	0					
ANR	3953322	IdentifierDeclStatement	"RAnalFunction * f = r_anal_get_fcn_in ( core -> anal , core -> offset , 0 ) ;"	2419:1:61706:61772	3953319	0	True				
ANR	3953323	IdentifierDecl	"* f = r_anal_get_fcn_in ( core -> anal , core -> offset , 0 )"		3953319	0					
ANR	3953324	IdentifierDeclType	RAnalFunction *		3953319	0					
ANR	3953325	Identifier	f		3953319	1					
ANR	3953326	AssignmentExpression	"* f = r_anal_get_fcn_in ( core -> anal , core -> offset , 0 )"		3953319	2		=			
ANR	3953327	Identifier	f		3953319	0					
ANR	3953328	CallExpression	"r_anal_get_fcn_in ( core -> anal , core -> offset , 0 )"		3953319	1					
ANR	3953329	Callee	r_anal_get_fcn_in		3953319	0					
ANR	3953330	Identifier	r_anal_get_fcn_in		3953319	0					
ANR	3953331	ArgumentList	core -> anal		3953319	1					
ANR	3953332	Argument	core -> anal		3953319	0					
ANR	3953333	PtrMemberAccess	core -> anal		3953319	0					
ANR	3953334	Identifier	core		3953319	0					
ANR	3953335	Identifier	anal		3953319	1					
ANR	3953336	Argument	core -> offset		3953319	1					
ANR	3953337	PtrMemberAccess	core -> offset		3953319	0					
ANR	3953338	Identifier	core		3953319	0					
ANR	3953339	Identifier	offset		3953319	1					
ANR	3953340	Argument	0		3953319	2					
ANR	3953341	PrimaryExpression	0		3953319	0					
ANR	3953342	IdentifierDeclStatement	"RANode * node , * fcn_anode ;"	2420:1:61775:61799	3953319	1	True				
ANR	3953343	IdentifierDecl	* node		3953319	0					
ANR	3953344	IdentifierDeclType	RANode *		3953319	0					
ANR	3953345	Identifier	node		3953319	1					
ANR	3953346	IdentifierDecl	* fcn_anode		3953319	1					
ANR	3953347	IdentifierDeclType	RANode *		3953319	0					
ANR	3953348	Identifier	fcn_anode		3953319	1					
ANR	3953349	IdentifierDeclStatement	RListIter * iter ;	2421:1:61802:61817	3953319	2	True				
ANR	3953350	IdentifierDecl	* iter		3953319	0					
ANR	3953351	IdentifierDeclType	RListIter *		3953319	0					
ANR	3953352	Identifier	iter		3953319	1					
ANR	3953353	IdentifierDeclStatement	RAnalRef * ref ;	2422:1:61820:61833	3953319	3	True				
ANR	3953354	IdentifierDecl	* ref		3953319	0					
ANR	3953355	IdentifierDeclType	RAnalRef *		3953319	0					
ANR	3953356	Identifier	ref		3953319	1					
ANR	3953357	IdentifierDeclStatement	RList * refs ;	2423:1:61836:61847	3953319	4	True				
ANR	3953358	IdentifierDecl	* refs		3953319	0					
ANR	3953359	IdentifierDeclType	RList *		3953319	0					
ANR	3953360	Identifier	refs		3953319	1					
ANR	3953361	IfStatement	if ( ! f )		3953319	5					
ANR	3953362	Condition	! f	2424:5:61854:61855	3953319	0	True				
ANR	3953363	UnaryOperationExpression	! f		3953319	0					
ANR	3953364	UnaryOperator	!		3953319	0					
ANR	3953365	Identifier	f		3953319	1					
ANR	3953366	CompoundStatement		8:9:166:166	3953319	1					
ANR	3953367	ReturnStatement	return false ;	2425:2:61862:61874	3953319	0	True				
ANR	3953368	Identifier	false		3953319	0					
ANR	3953369	IfStatement	if ( ! fcn )		3953319	6					
ANR	3953370	Condition	! fcn	2427:5:61884:61887	3953319	0	True				
ANR	3953371	UnaryOperationExpression	! fcn		3953319	0					
ANR	3953372	UnaryOperator	!		3953319	0					
ANR	3953373	Identifier	fcn		3953319	1					
ANR	3953374	CompoundStatement		11:11:198:198	3953319	1					
ANR	3953375	ExpressionStatement	fcn = f	2428:2:61894:61901	3953319	0	True				
ANR	3953376	AssignmentExpression	fcn = f		3953319	0		=			
ANR	3953377	Identifier	fcn		3953319	0					
ANR	3953378	Identifier	f		3953319	1					
ANR	3953379	ExpressionStatement	"r_core_seek ( core , f -> addr , 1 )"	2431:1:61908:61938	3953319	7	True				
ANR	3953380	CallExpression	"r_core_seek ( core , f -> addr , 1 )"		3953319	0					
ANR	3953381	Callee	r_core_seek		3953319	0					
ANR	3953382	Identifier	r_core_seek		3953319	0					
ANR	3953383	ArgumentList	core		3953319	1					
ANR	3953384	Argument	core		3953319	0					
ANR	3953385	Identifier	core		3953319	0					
ANR	3953386	Argument	f -> addr		3953319	1					
ANR	3953387	PtrMemberAccess	f -> addr		3953319	0					
ANR	3953388	Identifier	f		3953319	0					
ANR	3953389	Identifier	addr		3953319	1					
ANR	3953390	Argument	1		3953319	2					
ANR	3953391	PrimaryExpression	1		3953319	0					
ANR	3953392	IdentifierDeclStatement	char * title = get_title ( fcn -> addr ) ;	2433:1:61942:61977	3953319	8	True				
ANR	3953393	IdentifierDecl	* title = get_title ( fcn -> addr )		3953319	0					
ANR	3953394	IdentifierDeclType	char *		3953319	0					
ANR	3953395	Identifier	title		3953319	1					
ANR	3953396	AssignmentExpression	* title = get_title ( fcn -> addr )		3953319	2		=			
ANR	3953397	Identifier	title		3953319	0					
ANR	3953398	CallExpression	get_title ( fcn -> addr )		3953319	1					
ANR	3953399	Callee	get_title		3953319	0					
ANR	3953400	Identifier	get_title		3953319	0					
ANR	3953401	ArgumentList	fcn -> addr		3953319	1					
ANR	3953402	Argument	fcn -> addr		3953319	0					
ANR	3953403	PtrMemberAccess	fcn -> addr		3953319	0					
ANR	3953404	Identifier	fcn		3953319	0					
ANR	3953405	Identifier	addr		3953319	1					
ANR	3953406	ExpressionStatement	"fcn_anode = r_agraph_add_node ( g , title , """" )"	2434:1:61980:62024	3953319	9	True				
ANR	3953407	AssignmentExpression	"fcn_anode = r_agraph_add_node ( g , title , """" )"		3953319	0		=			
ANR	3953408	Identifier	fcn_anode		3953319	0					
ANR	3953409	CallExpression	"r_agraph_add_node ( g , title , """" )"		3953319	1					
ANR	3953410	Callee	r_agraph_add_node		3953319	0					
ANR	3953411	Identifier	r_agraph_add_node		3953319	0					
ANR	3953412	ArgumentList	g		3953319	1					
ANR	3953413	Argument	g		3953319	0					
ANR	3953414	Identifier	g		3953319	0					
ANR	3953415	Argument	title		3953319	1					
ANR	3953416	Identifier	title		3953319	0					
ANR	3953417	Argument	""""""		3953319	2					
ANR	3953418	PrimaryExpression	""""""		3953319	0					
ANR	3953419	ExpressionStatement	free ( title )	2436:1:62028:62040	3953319	10	True				
ANR	3953420	CallExpression	free ( title )		3953319	0					
ANR	3953421	Callee	free		3953319	0					
ANR	3953422	Identifier	free		3953319	0					
ANR	3953423	ArgumentList	title		3953319	1					
ANR	3953424	Argument	title		3953319	0					
ANR	3953425	Identifier	title		3953319	0					
ANR	3953426	IfStatement	if ( ! fcn_anode )		3953319	11					
ANR	3953427	Condition	! fcn_anode	2437:5:62047:62056	3953319	0	True				
ANR	3953428	UnaryOperationExpression	! fcn_anode		3953319	0					
ANR	3953429	UnaryOperator	!		3953319	0					
ANR	3953430	Identifier	fcn_anode		3953319	1					
ANR	3953431	CompoundStatement		21:17:367:367	3953319	1					
ANR	3953432	ReturnStatement	return false ;	2438:2:62063:62075	3953319	0	True				
ANR	3953433	Identifier	false		3953319	0					
ANR	3953434	ExpressionStatement	fcn_anode -> x = 10	2441:1:62082:62099	3953319	12	True				
ANR	3953435	AssignmentExpression	fcn_anode -> x = 10		3953319	0		=			
ANR	3953436	PtrMemberAccess	fcn_anode -> x		3953319	0					
ANR	3953437	Identifier	fcn_anode		3953319	0					
ANR	3953438	Identifier	x		3953319	1					
ANR	3953439	PrimaryExpression	10		3953319	1					
ANR	3953440	ExpressionStatement	fcn_anode -> y = 3	2442:1:62102:62118	3953319	13	True				
ANR	3953441	AssignmentExpression	fcn_anode -> y = 3		3953319	0		=			
ANR	3953442	PtrMemberAccess	fcn_anode -> y		3953319	0					
ANR	3953443	Identifier	fcn_anode		3953319	0					
ANR	3953444	Identifier	y		3953319	1					
ANR	3953445	PrimaryExpression	3		3953319	1					
ANR	3953446	ExpressionStatement	"refs = r_anal_fcn_get_refs ( core -> anal , fcn )"	2444:1:62122:62166	3953319	14	True				
ANR	3953447	AssignmentExpression	"refs = r_anal_fcn_get_refs ( core -> anal , fcn )"		3953319	0		=			
ANR	3953448	Identifier	refs		3953319	0					
ANR	3953449	CallExpression	"r_anal_fcn_get_refs ( core -> anal , fcn )"		3953319	1					
ANR	3953450	Callee	r_anal_fcn_get_refs		3953319	0					
ANR	3953451	Identifier	r_anal_fcn_get_refs		3953319	0					
ANR	3953452	ArgumentList	core -> anal		3953319	1					
ANR	3953453	Argument	core -> anal		3953319	0					
ANR	3953454	PtrMemberAccess	core -> anal		3953319	0					
ANR	3953455	Identifier	core		3953319	0					
ANR	3953456	Identifier	anal		3953319	1					
ANR	3953457	Argument	fcn		3953319	1					
ANR	3953458	Identifier	fcn		3953319	0					
ANR	3953459	Statement	r_list_foreach	2445:1:62169:62182	3953319	15	True				
ANR	3953460	Statement	(	2445:16:62184:62184	3953319	16	True				
ANR	3953461	Statement	refs	2445:17:62185:62188	3953319	17	True				
ANR	3953462	Statement	","	2445:21:62189:62189	3953319	18	True				
ANR	3953463	Statement	iter	2445:23:62191:62194	3953319	19	True				
ANR	3953464	Statement	","	2445:27:62195:62195	3953319	20	True				
ANR	3953465	Statement	ref	2445:29:62197:62199	3953319	21	True				
ANR	3953466	Statement	)	2445:32:62200:62200	3953319	22	True				
ANR	3953467	CompoundStatement		42:2:746:806	3953319	23					
ANR	3953468	ExpressionStatement	title = get_title ( ref -> addr )	2446:2:62206:62235	3953319	0	True				
ANR	3953469	AssignmentExpression	title = get_title ( ref -> addr )		3953319	0		=			
ANR	3953470	Identifier	title		3953319	0					
ANR	3953471	CallExpression	get_title ( ref -> addr )		3953319	1					
ANR	3953472	Callee	get_title		3953319	0					
ANR	3953473	Identifier	get_title		3953319	0					
ANR	3953474	ArgumentList	ref -> addr		3953319	1					
ANR	3953475	Argument	ref -> addr		3953319	0					
ANR	3953476	PtrMemberAccess	ref -> addr		3953319	0					
ANR	3953477	Identifier	ref		3953319	0					
ANR	3953478	Identifier	addr		3953319	1					
ANR	3953479	IfStatement	"if ( r_agraph_get_node ( g , title ) != NULL )"		3953319	1					
ANR	3953480	Condition	"r_agraph_get_node ( g , title ) != NULL"	2447:6:62243:62278	3953319	0	True				
ANR	3953481	EqualityExpression	"r_agraph_get_node ( g , title ) != NULL"		3953319	0		!=			
ANR	3953482	CallExpression	"r_agraph_get_node ( g , title )"		3953319	0					
ANR	3953483	Callee	r_agraph_get_node		3953319	0					
ANR	3953484	Identifier	r_agraph_get_node		3953319	0					
ANR	3953485	ArgumentList	g		3953319	1					
ANR	3953486	Argument	g		3953319	0					
ANR	3953487	Identifier	g		3953319	0					
ANR	3953488	Argument	title		3953319	1					
ANR	3953489	Identifier	title		3953319	0					
ANR	3953490	Identifier	NULL		3953319	1					
ANR	3953491	CompoundStatement		31:44:589:589	3953319	1					
ANR	3953492	ContinueStatement	continue ;	2448:3:62286:62294	3953319	0	True				
ANR	3953493	ExpressionStatement	free ( title )	2450:2:62302:62314	3953319	2	True				
ANR	3953494	CallExpression	free ( title )		3953319	0					
ANR	3953495	Callee	free		3953319	0					
ANR	3953496	Identifier	free		3953319	0					
ANR	3953497	ArgumentList	title		3953319	1					
ANR	3953498	Argument	title		3953319	0					
ANR	3953499	Identifier	title		3953319	0					
ANR	3953500	IdentifierDeclStatement	int size = 0 ;	2452:2:62319:62331	3953319	3	True				
ANR	3953501	IdentifierDecl	size = 0		3953319	0					
ANR	3953502	IdentifierDeclType	int		3953319	0					
ANR	3953503	Identifier	size		3953319	1					
ANR	3953504	AssignmentExpression	size = 0		3953319	2		=			
ANR	3953505	Identifier	size		3953319	0					
ANR	3953506	PrimaryExpression	0		3953319	1					
ANR	3953507	IdentifierDeclStatement	"RAnalBlock * bb = r_anal_bb_from_offset ( core -> anal , ref -> addr ) ;"	2453:2:62335:62397	3953319	4	True				
ANR	3953508	IdentifierDecl	"* bb = r_anal_bb_from_offset ( core -> anal , ref -> addr )"		3953319	0					
ANR	3953509	IdentifierDeclType	RAnalBlock *		3953319	0					
ANR	3953510	Identifier	bb		3953319	1					
ANR	3953511	AssignmentExpression	"* bb = r_anal_bb_from_offset ( core -> anal , ref -> addr )"		3953319	2		=			
ANR	3953512	Identifier	bb		3953319	0					
ANR	3953513	CallExpression	"r_anal_bb_from_offset ( core -> anal , ref -> addr )"		3953319	1					
ANR	3953514	Callee	r_anal_bb_from_offset		3953319	0					
ANR	3953515	Identifier	r_anal_bb_from_offset		3953319	0					
ANR	3953516	ArgumentList	core -> anal		3953319	1					
ANR	3953517	Argument	core -> anal		3953319	0					
ANR	3953518	PtrMemberAccess	core -> anal		3953319	0					
ANR	3953519	Identifier	core		3953319	0					
ANR	3953520	Identifier	anal		3953319	1					
ANR	3953521	Argument	ref -> addr		3953319	1					
ANR	3953522	PtrMemberAccess	ref -> addr		3953319	0					
ANR	3953523	Identifier	ref		3953319	0					
ANR	3953524	Identifier	addr		3953319	1					
ANR	3953525	IfStatement	if ( bb )		3953319	5					
ANR	3953526	Condition	bb	2454:6:62405:62406	3953319	0	True				
ANR	3953527	Identifier	bb		3953319	0					
ANR	3953528	CompoundStatement		38:10:717:717	3953319	1					
ANR	3953529	ExpressionStatement	size = bb -> size	2455:3:62414:62429	3953319	0	True				
ANR	3953530	AssignmentExpression	size = bb -> size		3953319	0		=			
ANR	3953531	Identifier	size		3953319	0					
ANR	3953532	PtrMemberAccess	bb -> size		3953319	1					
ANR	3953533	Identifier	bb		3953319	0					
ANR	3953534	Identifier	size		3953319	1					
ANR	3953535	IdentifierDeclStatement	"char * body = get_body ( core , ref -> addr , size , mode2opts ( g ) ) ;"	2458:2:62438:62498	3953319	6	True				
ANR	3953536	IdentifierDecl	"* body = get_body ( core , ref -> addr , size , mode2opts ( g ) )"		3953319	0					
ANR	3953537	IdentifierDeclType	char *		3953319	0					
ANR	3953538	Identifier	body		3953319	1					
ANR	3953539	AssignmentExpression	"* body = get_body ( core , ref -> addr , size , mode2opts ( g ) )"		3953319	2		=			
ANR	3953540	Identifier	body		3953319	0					
ANR	3953541	CallExpression	"get_body ( core , ref -> addr , size , mode2opts ( g ) )"		3953319	1					
ANR	3953542	Callee	get_body		3953319	0					
ANR	3953543	Identifier	get_body		3953319	0					
ANR	3953544	ArgumentList	core		3953319	1					
ANR	3953545	Argument	core		3953319	0					
ANR	3953546	Identifier	core		3953319	0					
ANR	3953547	Argument	ref -> addr		3953319	1					
ANR	3953548	PtrMemberAccess	ref -> addr		3953319	0					
ANR	3953549	Identifier	ref		3953319	0					
ANR	3953550	Identifier	addr		3953319	1					
ANR	3953551	Argument	size		3953319	2					
ANR	3953552	Identifier	size		3953319	0					
ANR	3953553	Argument	mode2opts ( g )		3953319	3					
ANR	3953554	CallExpression	mode2opts ( g )		3953319	0					
ANR	3953555	Callee	mode2opts		3953319	0					
ANR	3953556	Identifier	mode2opts		3953319	0					
ANR	3953557	ArgumentList	g		3953319	1					
ANR	3953558	Argument	g		3953319	0					
ANR	3953559	Identifier	g		3953319	0					
ANR	3953560	ExpressionStatement	title = get_title ( ref -> addr )	2459:2:62502:62531	3953319	7	True				
ANR	3953561	AssignmentExpression	title = get_title ( ref -> addr )		3953319	0		=			
ANR	3953562	Identifier	title		3953319	0					
ANR	3953563	CallExpression	get_title ( ref -> addr )		3953319	1					
ANR	3953564	Callee	get_title		3953319	0					
ANR	3953565	Identifier	get_title		3953319	0					
ANR	3953566	ArgumentList	ref -> addr		3953319	1					
ANR	3953567	Argument	ref -> addr		3953319	0					
ANR	3953568	PtrMemberAccess	ref -> addr		3953319	0					
ANR	3953569	Identifier	ref		3953319	0					
ANR	3953570	Identifier	addr		3953319	1					
ANR	3953571	ExpressionStatement	"node = r_agraph_add_node ( g , title , body )"	2461:2:62536:62577	3953319	8	True				
ANR	3953572	AssignmentExpression	"node = r_agraph_add_node ( g , title , body )"		3953319	0		=			
ANR	3953573	Identifier	node		3953319	0					
ANR	3953574	CallExpression	"r_agraph_add_node ( g , title , body )"		3953319	1					
ANR	3953575	Callee	r_agraph_add_node		3953319	0					
ANR	3953576	Identifier	r_agraph_add_node		3953319	0					
ANR	3953577	ArgumentList	g		3953319	1					
ANR	3953578	Argument	g		3953319	0					
ANR	3953579	Identifier	g		3953319	0					
ANR	3953580	Argument	title		3953319	1					
ANR	3953581	Identifier	title		3953319	0					
ANR	3953582	Argument	body		3953319	2					
ANR	3953583	Identifier	body		3953319	0					
ANR	3953584	IfStatement	if ( ! node )		3953319	9					
ANR	3953585	Condition	! node	2462:6:62585:62589	3953319	0	True				
ANR	3953586	UnaryOperationExpression	! node		3953319	0					
ANR	3953587	UnaryOperator	!		3953319	0					
ANR	3953588	Identifier	node		3953319	1					
ANR	3953589	CompoundStatement		46:13:900:900	3953319	1					
ANR	3953590	ReturnStatement	return false ;	2463:3:62597:62609	3953319	0	True				
ANR	3953591	Identifier	false		3953319	0					
ANR	3953592	ExpressionStatement	free ( title )	2466:2:62618:62630	3953319	10	True				
ANR	3953593	CallExpression	free ( title )		3953319	0					
ANR	3953594	Callee	free		3953319	0					
ANR	3953595	Identifier	free		3953319	0					
ANR	3953596	ArgumentList	title		3953319	1					
ANR	3953597	Argument	title		3953319	0					
ANR	3953598	Identifier	title		3953319	0					
ANR	3953599	ExpressionStatement	free ( body )	2467:2:62634:62645	3953319	11	True				
ANR	3953600	CallExpression	free ( body )		3953319	0					
ANR	3953601	Callee	free		3953319	0					
ANR	3953602	Identifier	free		3953319	0					
ANR	3953603	ArgumentList	body		3953319	1					
ANR	3953604	Argument	body		3953319	0					
ANR	3953605	Identifier	body		3953319	0					
ANR	3953606	ExpressionStatement	node -> x = 10	2469:2:62650:62662	3953319	12	True				
ANR	3953607	AssignmentExpression	node -> x = 10		3953319	0		=			
ANR	3953608	PtrMemberAccess	node -> x		3953319	0					
ANR	3953609	Identifier	node		3953319	0					
ANR	3953610	Identifier	x		3953319	1					
ANR	3953611	PrimaryExpression	10		3953319	1					
ANR	3953612	ExpressionStatement	node -> y = 10	2470:2:62666:62678	3953319	13	True				
ANR	3953613	AssignmentExpression	node -> y = 10		3953319	0		=			
ANR	3953614	PtrMemberAccess	node -> y		3953319	0					
ANR	3953615	Identifier	node		3953319	0					
ANR	3953616	Identifier	y		3953319	1					
ANR	3953617	PrimaryExpression	10		3953319	1					
ANR	3953618	ExpressionStatement	"r_agraph_add_edge ( g , fcn_anode , node )"	2472:2:62683:62721	3953319	14	True				
ANR	3953619	CallExpression	"r_agraph_add_edge ( g , fcn_anode , node )"		3953319	0					
ANR	3953620	Callee	r_agraph_add_edge		3953319	0					
ANR	3953621	Identifier	r_agraph_add_edge		3953319	0					
ANR	3953622	ArgumentList	g		3953319	1					
ANR	3953623	Argument	g		3953319	0					
ANR	3953624	Identifier	g		3953319	0					
ANR	3953625	Argument	fcn_anode		3953319	1					
ANR	3953626	Identifier	fcn_anode		3953319	0					
ANR	3953627	Argument	node		3953319	2					
ANR	3953628	Identifier	node		3953319	0					
ANR	3953629	ExpressionStatement	r_list_free ( refs )	2474:1:62727:62745	3953319	24	True				
ANR	3953630	CallExpression	r_list_free ( refs )		3953319	0					
ANR	3953631	Callee	r_list_free		3953319	0					
ANR	3953632	Identifier	r_list_free		3953319	0					
ANR	3953633	ArgumentList	refs		3953319	1					
ANR	3953634	Argument	refs		3953319	0					
ANR	3953635	Identifier	refs		3953319	0					
ANR	3953636	ReturnStatement	return true ;	2478:1:62793:62804	3953319	25	True				
ANR	3953637	Identifier	true		3953319	0					
ANR	3953638	ReturnType	static int		3953319	1					
ANR	3953639	Identifier	get_cgnodes		3953319	2					
ANR	3953640	ParameterList	"RAGraph * g , RCore * core , RAnalFunction * fcn"		3953319	3					
ANR	3953641	Parameter	RAGraph * g	2417:23:61646:61655	3953319	0	True				
ANR	3953642	ParameterType	RAGraph *		3953319	0					
ANR	3953643	Identifier	g		3953319	1					
ANR	3953644	Parameter	RCore * core	2417:35:61658:61668	3953319	1	True				
ANR	3953645	ParameterType	RCore *		3953319	0					
ANR	3953646	Identifier	core		3953319	1					
ANR	3953647	Parameter	RAnalFunction * fcn	2417:48:61671:61688	3953319	2	True				
ANR	3953648	ParameterType	RAnalFunction *		3953319	0					
ANR	3953649	Identifier	fcn		3953319	1					
ANR	3953650	CFGEntryNode	ENTRY		3953319		True				
ANR	3953651	CFGExitNode	EXIT		3953319		True				
ANR	3953652	CFGErrorNode	ERROR		3953319		True				
ANR	3953653	Symbol	bb		3953319						
ANR	3953654	Symbol	ref -> addr		3953319						
ANR	3953655	Symbol	r_anal_bb_from_offset		3953319						
ANR	3953656	Symbol	bb -> size		3953319						
ANR	3953657	Symbol	node -> y		3953319						
ANR	3953658	Symbol	* fcn		3953319						
ANR	3953659	Symbol	* core		3953319						
ANR	3953660	Symbol	core -> offset		3953319						
ANR	3953661	Symbol	title		3953319						
ANR	3953662	Symbol	body		3953319						
ANR	3953663	Symbol	mode2opts		3953319						
ANR	3953664	Symbol	node -> x		3953319						
ANR	3953665	Symbol	core -> anal		3953319						
ANR	3953666	Symbol	get_title		3953319						
ANR	3953667	Symbol	fcn		3953319						
ANR	3953668	Symbol	ref		3953319						
ANR	3953669	Symbol	r_agraph_get_node		3953319						
ANR	3953670	Symbol	fcn_anode		3953319						
ANR	3953671	Symbol	f -> addr		3953319						
ANR	3953672	Symbol	* node		3953319						
ANR	3953673	Symbol	* fcn_anode		3953319						
ANR	3953674	Symbol	get_body		3953319						
ANR	3953675	Symbol	NULL		3953319						
ANR	3953676	Symbol	* bb		3953319						
ANR	3953677	Symbol	f		3953319						
ANR	3953678	Symbol	g		3953319						
ANR	3953679	Symbol	false		3953319						
ANR	3953680	Symbol	fcn_anode -> x		3953319						
ANR	3953681	Symbol	iter		3953319						
ANR	3953682	Symbol	fcn_anode -> y		3953319						
ANR	3953683	Symbol	r_agraph_add_node		3953319						
ANR	3953684	Symbol	r_anal_fcn_get_refs		3953319						
ANR	3953685	Symbol	* f		3953319						
ANR	3953686	Symbol	core		3953319						
ANR	3953687	Symbol	node		3953319						
ANR	3953688	Symbol	r_anal_get_fcn_in		3953319						
ANR	3953689	Symbol	size		3953319						
ANR	3953690	Symbol	refs		3953319						
ANR	3953691	Symbol	true		3953319						
ANR	3953692	Symbol	fcn -> addr		3953319						
ANR	3953693	Symbol	* ref		3953319						
ANR	3953694	Function	reload_nodes	2481:0:62809:62979							
ANR	3953695	FunctionDef	"reload_nodes (RAGraph * g , RCore * core , RAnalFunction * fcn)"		3953694	0					
ANR	3953696	CompoundStatement		2481:69:62878:62979	3953694	0					
ANR	3953697	IdentifierDeclStatement	int is_c = g -> is_callgraph ;	2482:1:62881:62907	3953694	0	True				
ANR	3953698	IdentifierDecl	is_c = g -> is_callgraph		3953694	0					
ANR	3953699	IdentifierDeclType	int		3953694	0					
ANR	3953700	Identifier	is_c		3953694	1					
ANR	3953701	AssignmentExpression	is_c = g -> is_callgraph		3953694	2		=			
ANR	3953702	Identifier	is_c		3953694	0					
ANR	3953703	PtrMemberAccess	g -> is_callgraph		3953694	1					
ANR	3953704	Identifier	g		3953694	0					
ANR	3953705	Identifier	is_callgraph		3953694	1					
ANR	3953706	ReturnStatement	"return is_c ? get_cgnodes ( g , core , fcn ) : get_bbnodes ( g , core , fcn ) ;"	2483:1:62910:62977	3953694	1	True				
ANR	3953707	ConditionalExpression	"is_c ? get_cgnodes ( g , core , fcn ) : get_bbnodes ( g , core , fcn )"		3953694	0					
ANR	3953708	Condition	is_c		3953694	0					
ANR	3953709	Identifier	is_c		3953694	0					
ANR	3953710	CallExpression	"get_cgnodes ( g , core , fcn )"		3953694	1					
ANR	3953711	Callee	get_cgnodes		3953694	0					
ANR	3953712	Identifier	get_cgnodes		3953694	0					
ANR	3953713	ArgumentList	g		3953694	1					
ANR	3953714	Argument	g		3953694	0					
ANR	3953715	Identifier	g		3953694	0					
ANR	3953716	Argument	core		3953694	1					
ANR	3953717	Identifier	core		3953694	0					
ANR	3953718	Argument	fcn		3953694	2					
ANR	3953719	Identifier	fcn		3953694	0					
ANR	3953720	CallExpression	"get_bbnodes ( g , core , fcn )"		3953694	2					
ANR	3953721	Callee	get_bbnodes		3953694	0					
ANR	3953722	Identifier	get_bbnodes		3953694	0					
ANR	3953723	ArgumentList	g		3953694	1					
ANR	3953724	Argument	g		3953694	0					
ANR	3953725	Identifier	g		3953694	0					
ANR	3953726	Argument	core		3953694	1					
ANR	3953727	Identifier	core		3953694	0					
ANR	3953728	Argument	fcn		3953694	2					
ANR	3953729	Identifier	fcn		3953694	0					
ANR	3953730	ReturnType	static int		3953694	1					
ANR	3953731	Identifier	reload_nodes		3953694	2					
ANR	3953732	ParameterList	"RAGraph * g , RCore * core , RAnalFunction * fcn"		3953694	3					
ANR	3953733	Parameter	RAGraph * g	2481:24:62833:62842	3953694	0	True				
ANR	3953734	ParameterType	RAGraph *		3953694	0					
ANR	3953735	Identifier	g		3953694	1					
ANR	3953736	Parameter	RCore * core	2481:36:62845:62855	3953694	1	True				
ANR	3953737	ParameterType	RCore *		3953694	0					
ANR	3953738	Identifier	core		3953694	1					
ANR	3953739	Parameter	RAnalFunction * fcn	2481:49:62858:62875	3953694	2	True				
ANR	3953740	ParameterType	RAnalFunction *		3953694	0					
ANR	3953741	Identifier	fcn		3953694	1					
ANR	3953742	CFGEntryNode	ENTRY		3953694		True				
ANR	3953743	CFGExitNode	EXIT		3953694		True				
ANR	3953744	Symbol	fcn		3953694						
ANR	3953745	Symbol	core		3953694						
ANR	3953746	Symbol	* g		3953694						
ANR	3953747	Symbol	g		3953694						
ANR	3953748	Symbol	get_bbnodes		3953694						
ANR	3953749	Symbol	get_cgnodes		3953694						
ANR	3953750	Symbol	g -> is_callgraph		3953694						
ANR	3953751	Symbol	is_c		3953694						
ANR	3953752	Function	update_seek	2486:0:62982:63509							
ANR	3953753	FunctionDef	"update_seek (RConsCanvas * can , RANode * n , int force)"		3953752	0					
ANR	3953754	CompoundStatement		2486:64:63046:63509	3953752	0					
ANR	3953755	IdentifierDeclStatement	"int x , y , w , h ;"	2487:1:63049:63063	3953752	0	True				
ANR	3953756	IdentifierDecl	x		3953752	0					
ANR	3953757	IdentifierDeclType	int		3953752	0					
ANR	3953758	Identifier	x		3953752	1					
ANR	3953759	IdentifierDecl	y		3953752	1					
ANR	3953760	IdentifierDeclType	int		3953752	0					
ANR	3953761	Identifier	y		3953752	1					
ANR	3953762	IdentifierDecl	w		3953752	2					
ANR	3953763	IdentifierDeclType	int		3953752	0					
ANR	3953764	Identifier	w		3953752	1					
ANR	3953765	IdentifierDecl	h		3953752	3					
ANR	3953766	IdentifierDeclType	int		3953752	0					
ANR	3953767	Identifier	h		3953752	1					
ANR	3953768	IdentifierDeclStatement	int doscroll = false ;	2488:1:63066:63086	3953752	1	True				
ANR	3953769	IdentifierDecl	doscroll = false		3953752	0					
ANR	3953770	IdentifierDeclType	int		3953752	0					
ANR	3953771	Identifier	doscroll		3953752	1					
ANR	3953772	AssignmentExpression	doscroll = false		3953752	2		=			
ANR	3953773	Identifier	false		3953752	0					
ANR	3953774	Identifier	false		3953752	1					
ANR	3953775	IfStatement	if ( ! n )		3953752	2					
ANR	3953776	Condition	! n	2490:5:63094:63095	3953752	0	True				
ANR	3953777	UnaryOperationExpression	! n		3953752	0					
ANR	3953778	UnaryOperator	!		3953752	0					
ANR	3953779	Identifier	n		3953752	1					
ANR	3953780	CompoundStatement		5:9:51:51	3953752	1					
ANR	3953781	ReturnStatement	return ;	2491:2:63102:63108	3953752	0	True				
ANR	3953782	ExpressionStatement	x = n -> x + can -> sx	2493:1:63114:63132	3953752	3	True				
ANR	3953783	AssignmentExpression	x = n -> x + can -> sx		3953752	0		=			
ANR	3953784	Identifier	x		3953752	0					
ANR	3953785	AdditiveExpression	n -> x + can -> sx		3953752	1		+			
ANR	3953786	PtrMemberAccess	n -> x		3953752	0					
ANR	3953787	Identifier	n		3953752	0					
ANR	3953788	Identifier	x		3953752	1					
ANR	3953789	PtrMemberAccess	can -> sx		3953752	1					
ANR	3953790	Identifier	can		3953752	0					
ANR	3953791	Identifier	sx		3953752	1					
ANR	3953792	ExpressionStatement	y = n -> y + can -> sy	2494:1:63135:63153	3953752	4	True				
ANR	3953793	AssignmentExpression	y = n -> y + can -> sy		3953752	0		=			
ANR	3953794	Identifier	y		3953752	0					
ANR	3953795	AdditiveExpression	n -> y + can -> sy		3953752	1		+			
ANR	3953796	PtrMemberAccess	n -> y		3953752	0					
ANR	3953797	Identifier	n		3953752	0					
ANR	3953798	Identifier	y		3953752	1					
ANR	3953799	PtrMemberAccess	can -> sy		3953752	1					
ANR	3953800	Identifier	can		3953752	0					
ANR	3953801	Identifier	sy		3953752	1					
ANR	3953802	ExpressionStatement	w = can -> w	2495:1:63156:63166	3953752	5	True				
ANR	3953803	AssignmentExpression	w = can -> w		3953752	0		=			
ANR	3953804	Identifier	w		3953752	0					
ANR	3953805	PtrMemberAccess	can -> w		3953752	1					
ANR	3953806	Identifier	can		3953752	0					
ANR	3953807	Identifier	w		3953752	1					
ANR	3953808	ExpressionStatement	h = can -> h	2496:1:63169:63179	3953752	6	True				
ANR	3953809	AssignmentExpression	h = can -> h		3953752	0		=			
ANR	3953810	Identifier	h		3953752	0					
ANR	3953811	PtrMemberAccess	can -> h		3953752	1					
ANR	3953812	Identifier	can		3953752	0					
ANR	3953813	Identifier	h		3953752	1					
ANR	3953814	ExpressionStatement	doscroll = force || y < 0 || y + 5 > h || x + 5 > w || x + n -> w + 5 < 0	2498:1:63183:63254	3953752	7	True				
ANR	3953815	AssignmentExpression	doscroll = force || y < 0 || y + 5 > h || x + 5 > w || x + n -> w + 5 < 0		3953752	0		=			
ANR	3953816	Identifier	doscroll		3953752	0					
ANR	3953817	OrExpression	force || y < 0 || y + 5 > h || x + 5 > w || x + n -> w + 5 < 0		3953752	1		||			
ANR	3953818	Identifier	force		3953752	0					
ANR	3953819	OrExpression	y < 0 || y + 5 > h || x + 5 > w || x + n -> w + 5 < 0		3953752	1		||			
ANR	3953820	RelationalExpression	y < 0		3953752	0		<			
ANR	3953821	Identifier	y		3953752	0					
ANR	3953822	PrimaryExpression	0		3953752	1					
ANR	3953823	OrExpression	y + 5 > h || x + 5 > w || x + n -> w + 5 < 0		3953752	1		||			
ANR	3953824	RelationalExpression	y + 5 > h		3953752	0		>			
ANR	3953825	AdditiveExpression	y + 5		3953752	0		+			
ANR	3953826	Identifier	y		3953752	0					
ANR	3953827	PrimaryExpression	5		3953752	1					
ANR	3953828	Identifier	h		3953752	1					
ANR	3953829	OrExpression	x + 5 > w || x + n -> w + 5 < 0		3953752	1		||			
ANR	3953830	RelationalExpression	x + 5 > w		3953752	0		>			
ANR	3953831	AdditiveExpression	x + 5		3953752	0		+			
ANR	3953832	Identifier	x		3953752	0					
ANR	3953833	PrimaryExpression	5		3953752	1					
ANR	3953834	Identifier	w		3953752	1					
ANR	3953835	RelationalExpression	x + n -> w + 5 < 0		3953752	1		<			
ANR	3953836	AdditiveExpression	x + n -> w + 5		3953752	0		+			
ANR	3953837	Identifier	x		3953752	0					
ANR	3953838	AdditiveExpression	n -> w + 5		3953752	1		+			
ANR	3953839	PtrMemberAccess	n -> w		3953752	0					
ANR	3953840	Identifier	n		3953752	0					
ANR	3953841	Identifier	w		3953752	1					
ANR	3953842	PrimaryExpression	5		3953752	1					
ANR	3953843	PrimaryExpression	0		3953752	1					
ANR	3953844	IfStatement	if ( doscroll )		3953752	8					
ANR	3953845	Condition	doscroll	2500:5:63262:63269	3953752	0	True				
ANR	3953846	Identifier	doscroll		3953752	0					
ANR	3953847	CompoundStatement		15:15:225:225	3953752	1					
ANR	3953848	IfStatement	if ( n -> w > w )		3953752	0					
ANR	3953849	Condition	n -> w > w	2501:6:63280:63287	3953752	0	True				
ANR	3953850	RelationalExpression	n -> w > w		3953752	0		>			
ANR	3953851	PtrMemberAccess	n -> w		3953752	0					
ANR	3953852	Identifier	n		3953752	0					
ANR	3953853	Identifier	w		3953752	1					
ANR	3953854	Identifier	w		3953752	1					
ANR	3953855	CompoundStatement		16:16:243:243	3953752	1					
ANR	3953856	ExpressionStatement	can -> sx = - n -> x	2502:3:63319:63334	3953752	0	True				
ANR	3953857	AssignmentExpression	can -> sx = - n -> x		3953752	0		=			
ANR	3953858	PtrMemberAccess	can -> sx		3953752	0					
ANR	3953859	Identifier	can		3953752	0					
ANR	3953860	Identifier	sx		3953752	1					
ANR	3953861	UnaryOperationExpression	- n -> x		3953752	1					
ANR	3953862	UnaryOperator	-		3953752	0					
ANR	3953863	PtrMemberAccess	n -> x		3953752	1					
ANR	3953864	Identifier	n		3953752	0					
ANR	3953865	Identifier	x		3953752	1					
ANR	3953866	ElseStatement	else		3953752	0					
ANR	3953867	CompoundStatement		18:9:298:298	3953752	0					
ANR	3953868	ExpressionStatement	can -> sx = - n -> x - n -> w / 2 + w / 2	2504:3:63350:63384	3953752	0	True				
ANR	3953869	AssignmentExpression	can -> sx = - n -> x - n -> w / 2 + w / 2		3953752	0		=			
ANR	3953870	PtrMemberAccess	can -> sx		3953752	0					
ANR	3953871	Identifier	can		3953752	0					
ANR	3953872	Identifier	sx		3953752	1					
ANR	3953873	AdditiveExpression	- n -> x - n -> w / 2 + w / 2		3953752	1		-			
ANR	3953874	UnaryOperationExpression	- n -> x		3953752	0					
ANR	3953875	UnaryOperator	-		3953752	0					
ANR	3953876	PtrMemberAccess	n -> x		3953752	1					
ANR	3953877	Identifier	n		3953752	0					
ANR	3953878	Identifier	x		3953752	1					
ANR	3953879	AdditiveExpression	n -> w / 2 + w / 2		3953752	1		+			
ANR	3953880	MultiplicativeExpression	n -> w / 2		3953752	0		/			
ANR	3953881	PtrMemberAccess	n -> w		3953752	0					
ANR	3953882	Identifier	n		3953752	0					
ANR	3953883	Identifier	w		3953752	1					
ANR	3953884	PrimaryExpression	2		3953752	1					
ANR	3953885	MultiplicativeExpression	w / 2		3953752	1		/			
ANR	3953886	Identifier	w		3953752	0					
ANR	3953887	PrimaryExpression	2		3953752	1					
ANR	3953888	IfStatement	if ( n -> h > h )		3953752	1					
ANR	3953889	Condition	n -> h > h	2506:6:63396:63403	3953752	0	True				
ANR	3953890	RelationalExpression	n -> h > h		3953752	0		>			
ANR	3953891	PtrMemberAccess	n -> h		3953752	0					
ANR	3953892	Identifier	n		3953752	0					
ANR	3953893	Identifier	h		3953752	1					
ANR	3953894	Identifier	h		3953752	1					
ANR	3953895	CompoundStatement		21:16:359:359	3953752	1					
ANR	3953896	ExpressionStatement	can -> sy = - n -> y	2507:3:63435:63450	3953752	0	True				
ANR	3953897	AssignmentExpression	can -> sy = - n -> y		3953752	0		=			
ANR	3953898	PtrMemberAccess	can -> sy		3953752	0					
ANR	3953899	Identifier	can		3953752	0					
ANR	3953900	Identifier	sy		3953752	1					
ANR	3953901	UnaryOperationExpression	- n -> y		3953752	1					
ANR	3953902	UnaryOperator	-		3953752	0					
ANR	3953903	PtrMemberAccess	n -> y		3953752	1					
ANR	3953904	Identifier	n		3953752	0					
ANR	3953905	Identifier	y		3953752	1					
ANR	3953906	ElseStatement	else		3953752	0					
ANR	3953907	CompoundStatement		23:9:414:414	3953752	0					
ANR	3953908	ExpressionStatement	can -> sy = - n -> y - n -> h / 8 + h / 4	2509:3:63466:63500	3953752	0	True				
ANR	3953909	AssignmentExpression	can -> sy = - n -> y - n -> h / 8 + h / 4		3953752	0		=			
ANR	3953910	PtrMemberAccess	can -> sy		3953752	0					
ANR	3953911	Identifier	can		3953752	0					
ANR	3953912	Identifier	sy		3953752	1					
ANR	3953913	AdditiveExpression	- n -> y - n -> h / 8 + h / 4		3953752	1		-			
ANR	3953914	UnaryOperationExpression	- n -> y		3953752	0					
ANR	3953915	UnaryOperator	-		3953752	0					
ANR	3953916	PtrMemberAccess	n -> y		3953752	1					
ANR	3953917	Identifier	n		3953752	0					
ANR	3953918	Identifier	y		3953752	1					
ANR	3953919	AdditiveExpression	n -> h / 8 + h / 4		3953752	1		+			
ANR	3953920	MultiplicativeExpression	n -> h / 8		3953752	0		/			
ANR	3953921	PtrMemberAccess	n -> h		3953752	0					
ANR	3953922	Identifier	n		3953752	0					
ANR	3953923	Identifier	h		3953752	1					
ANR	3953924	PrimaryExpression	8		3953752	1					
ANR	3953925	MultiplicativeExpression	h / 4		3953752	1		/			
ANR	3953926	Identifier	h		3953752	0					
ANR	3953927	PrimaryExpression	4		3953752	1					
ANR	3953928	ReturnType	static void		3953752	1					
ANR	3953929	Identifier	update_seek		3953752	2					
ANR	3953930	ParameterList	"RConsCanvas * can , RANode * n , int force"		3953752	3					
ANR	3953931	Parameter	RConsCanvas * can	2486:24:63006:63021	3953752	0	True				
ANR	3953932	ParameterType	RConsCanvas *		3953752	0					
ANR	3953933	Identifier	can		3953752	1					
ANR	3953934	Parameter	RANode * n	2486:42:63024:63032	3953752	1	True				
ANR	3953935	ParameterType	RANode *		3953752	0					
ANR	3953936	Identifier	n		3953752	1					
ANR	3953937	Parameter	int force	2486:53:63035:63043	3953752	2	True				
ANR	3953938	ParameterType	int		3953752	0					
ANR	3953939	Identifier	force		3953752	1					
ANR	3953940	CFGEntryNode	ENTRY		3953752		True				
ANR	3953941	CFGExitNode	EXIT		3953752		True				
ANR	3953942	Symbol	* can		3953752						
ANR	3953943	Symbol	can -> w		3953752						
ANR	3953944	Symbol	n -> h		3953752						
ANR	3953945	Symbol	h		3953752						
ANR	3953946	Symbol	false		3953752						
ANR	3953947	Symbol	can -> sx		3953752						
ANR	3953948	Symbol	can -> sy		3953752						
ANR	3953949	Symbol	n		3953752						
ANR	3953950	Symbol	can		3953752						
ANR	3953951	Symbol	n -> y		3953752						
ANR	3953952	Symbol	n -> x		3953752						
ANR	3953953	Symbol	w		3953752						
ANR	3953954	Symbol	doscroll		3953752						
ANR	3953955	Symbol	can -> h		3953752						
ANR	3953956	Symbol	n -> w		3953752						
ANR	3953957	Symbol	x		3953752						
ANR	3953958	Symbol	* n		3953752						
ANR	3953959	Symbol	y		3953752						
ANR	3953960	Symbol	force		3953752						
ANR	3953961	Function	is_near	2514:0:63512:63687							
ANR	3953962	FunctionDef	"is_near (const RANode * n , int x , int y , int is_next)"		3953961	0					
ANR	3953963	CompoundStatement		2514:63:63575:63687	3953961	0					
ANR	3953964	IfStatement	if ( is_next )		3953961	0					
ANR	3953965	Condition	is_next	2515:5:63582:63588	3953961	0	True				
ANR	3953966	Identifier	is_next		3953961	0					
ANR	3953967	CompoundStatement		2:14:15:15	3953961	1					
ANR	3953968	ReturnStatement	return ( n -> y == y && n -> x > x ) || n -> y > y ;	2516:2:63595:63637	3953961	0	True				
ANR	3953969	OrExpression	( n -> y == y && n -> x > x ) || n -> y > y		3953961	0		||			
ANR	3953970	AndExpression	n -> y == y && n -> x > x		3953961	0		&&			
ANR	3953971	EqualityExpression	n -> y == y		3953961	0		==			
ANR	3953972	PtrMemberAccess	n -> y		3953961	0					
ANR	3953973	Identifier	n		3953961	0					
ANR	3953974	Identifier	y		3953961	1					
ANR	3953975	Identifier	y		3953961	1					
ANR	3953976	RelationalExpression	n -> x > x		3953961	1		>			
ANR	3953977	PtrMemberAccess	n -> x		3953961	0					
ANR	3953978	Identifier	n		3953961	0					
ANR	3953979	Identifier	x		3953961	1					
ANR	3953980	Identifier	x		3953961	1					
ANR	3953981	RelationalExpression	n -> y > y		3953961	1		>			
ANR	3953982	PtrMemberAccess	n -> y		3953961	0					
ANR	3953983	Identifier	n		3953961	0					
ANR	3953984	Identifier	y		3953961	1					
ANR	3953985	Identifier	y		3953961	1					
ANR	3953986	ReturnStatement	return ( n -> y == y && n -> x < x ) || n -> y < y ;	2518:1:63643:63685	3953961	1	True				
ANR	3953987	OrExpression	( n -> y == y && n -> x < x ) || n -> y < y		3953961	0		||			
ANR	3953988	AndExpression	n -> y == y && n -> x < x		3953961	0		&&			
ANR	3953989	EqualityExpression	n -> y == y		3953961	0		==			
ANR	3953990	PtrMemberAccess	n -> y		3953961	0					
ANR	3953991	Identifier	n		3953961	0					
ANR	3953992	Identifier	y		3953961	1					
ANR	3953993	Identifier	y		3953961	1					
ANR	3953994	RelationalExpression	n -> x < x		3953961	1		<			
ANR	3953995	PtrMemberAccess	n -> x		3953961	0					
ANR	3953996	Identifier	n		3953961	0					
ANR	3953997	Identifier	x		3953961	1					
ANR	3953998	Identifier	x		3953961	1					
ANR	3953999	RelationalExpression	n -> y < y		3953961	1		<			
ANR	3954000	PtrMemberAccess	n -> y		3953961	0					
ANR	3954001	Identifier	n		3953961	0					
ANR	3954002	Identifier	y		3953961	1					
ANR	3954003	Identifier	y		3953961	1					
ANR	3954004	ReturnType	static int		3953961	1					
ANR	3954005	Identifier	is_near		3953961	2					
ANR	3954006	ParameterList	"const RANode * n , int x , int y , int is_next"		3953961	3					
ANR	3954007	Parameter	const RANode * n	2514:19:63531:63545	3953961	0	True				
ANR	3954008	ParameterType	const RANode *		3953961	0					
ANR	3954009	Identifier	n		3953961	1					
ANR	3954010	Parameter	int x	2514:36:63548:63552	3953961	1	True				
ANR	3954011	ParameterType	int		3953961	0					
ANR	3954012	Identifier	x		3953961	1					
ANR	3954013	Parameter	int y	2514:43:63555:63559	3953961	2	True				
ANR	3954014	ParameterType	int		3953961	0					
ANR	3954015	Identifier	y		3953961	1					
ANR	3954016	Parameter	int is_next	2514:50:63562:63572	3953961	3	True				
ANR	3954017	ParameterType	int		3953961	0					
ANR	3954018	Identifier	is_next		3953961	1					
ANR	3954019	CFGEntryNode	ENTRY		3953961		True				
ANR	3954020	CFGExitNode	EXIT		3953961		True				
ANR	3954021	Symbol	is_next		3953961						
ANR	3954022	Symbol	n -> y		3953961						
ANR	3954023	Symbol	n -> x		3953961						
ANR	3954024	Symbol	x		3953961						
ANR	3954025	Symbol	* n		3953961						
ANR	3954026	Symbol	y		3953961						
ANR	3954027	Symbol	n		3953961						
ANR	3954028	Function	is_near_h	2522:0:63707:63884							
ANR	3954029	FunctionDef	"is_near_h (const RANode * n , int x , int y , int is_next)"		3954028	0					
ANR	3954030	CompoundStatement		2522:65:63772:63884	3954028	0					
ANR	3954031	IfStatement	if ( is_next )		3954028	0					
ANR	3954032	Condition	is_next	2523:5:63779:63785	3954028	0	True				
ANR	3954033	Identifier	is_next		3954028	0					
ANR	3954034	CompoundStatement		2:14:15:15	3954028	1					
ANR	3954035	ReturnStatement	return ( n -> x == x && n -> y > y ) || n -> x > x ;	2524:2:63792:63834	3954028	0	True				
ANR	3954036	OrExpression	( n -> x == x && n -> y > y ) || n -> x > x		3954028	0		||			
ANR	3954037	AndExpression	n -> x == x && n -> y > y		3954028	0		&&			
ANR	3954038	EqualityExpression	n -> x == x		3954028	0		==			
ANR	3954039	PtrMemberAccess	n -> x		3954028	0					
ANR	3954040	Identifier	n		3954028	0					
ANR	3954041	Identifier	x		3954028	1					
ANR	3954042	Identifier	x		3954028	1					
ANR	3954043	RelationalExpression	n -> y > y		3954028	1		>			
ANR	3954044	PtrMemberAccess	n -> y		3954028	0					
ANR	3954045	Identifier	n		3954028	0					
ANR	3954046	Identifier	y		3954028	1					
ANR	3954047	Identifier	y		3954028	1					
ANR	3954048	RelationalExpression	n -> x > x		3954028	1		>			
ANR	3954049	PtrMemberAccess	n -> x		3954028	0					
ANR	3954050	Identifier	n		3954028	0					
ANR	3954051	Identifier	x		3954028	1					
ANR	3954052	Identifier	x		3954028	1					
ANR	3954053	ReturnStatement	return ( n -> x == x && n -> y < y ) || n -> x < x ;	2526:1:63840:63882	3954028	1	True				
ANR	3954054	OrExpression	( n -> x == x && n -> y < y ) || n -> x < x		3954028	0		||			
ANR	3954055	AndExpression	n -> x == x && n -> y < y		3954028	0		&&			
ANR	3954056	EqualityExpression	n -> x == x		3954028	0		==			
ANR	3954057	PtrMemberAccess	n -> x		3954028	0					
ANR	3954058	Identifier	n		3954028	0					
ANR	3954059	Identifier	x		3954028	1					
ANR	3954060	Identifier	x		3954028	1					
ANR	3954061	RelationalExpression	n -> y < y		3954028	1		<			
ANR	3954062	PtrMemberAccess	n -> y		3954028	0					
ANR	3954063	Identifier	n		3954028	0					
ANR	3954064	Identifier	y		3954028	1					
ANR	3954065	Identifier	y		3954028	1					
ANR	3954066	RelationalExpression	n -> x < x		3954028	1		<			
ANR	3954067	PtrMemberAccess	n -> x		3954028	0					
ANR	3954068	Identifier	n		3954028	0					
ANR	3954069	Identifier	x		3954028	1					
ANR	3954070	Identifier	x		3954028	1					
ANR	3954071	ReturnType	static int		3954028	1					
ANR	3954072	Identifier	is_near_h		3954028	2					
ANR	3954073	ParameterList	"const RANode * n , int x , int y , int is_next"		3954028	3					
ANR	3954074	Parameter	const RANode * n	2522:21:63728:63742	3954028	0	True				
ANR	3954075	ParameterType	const RANode *		3954028	0					
ANR	3954076	Identifier	n		3954028	1					
ANR	3954077	Parameter	int x	2522:38:63745:63749	3954028	1	True				
ANR	3954078	ParameterType	int		3954028	0					
ANR	3954079	Identifier	x		3954028	1					
ANR	3954080	Parameter	int y	2522:45:63752:63756	3954028	2	True				
ANR	3954081	ParameterType	int		3954028	0					
ANR	3954082	Identifier	y		3954028	1					
ANR	3954083	Parameter	int is_next	2522:52:63759:63769	3954028	3	True				
ANR	3954084	ParameterType	int		3954028	0					
ANR	3954085	Identifier	is_next		3954028	1					
ANR	3954086	CFGEntryNode	ENTRY		3954028		True				
ANR	3954087	CFGExitNode	EXIT		3954028		True				
ANR	3954088	Symbol	is_next		3954028						
ANR	3954089	Symbol	n -> y		3954028						
ANR	3954090	Symbol	n -> x		3954028						
ANR	3954091	Symbol	x		3954028						
ANR	3954092	Symbol	* n		3954028						
ANR	3954093	Symbol	y		3954028						
ANR	3954094	Symbol	n		3954028						
ANR	3954095	Function	find_near_of	2529:0:63887:65035							
ANR	3954096	FunctionDef	"find_near_of (const RAGraph * g , const RGraphNode * cur , int is_next)"		3954095	0					
ANR	3954097	CompoundStatement		2529:92:63979:65035	3954095	0					
ANR	3954098	IdentifierDeclStatement	const RList * nodes = r_graph_get_nodes ( g -> graph ) ;	2531:1:64004:64053	3954095	0	True				
ANR	3954099	IdentifierDecl	* nodes = r_graph_get_nodes ( g -> graph )		3954095	0					
ANR	3954100	IdentifierDeclType	const RList *		3954095	0					
ANR	3954101	Identifier	nodes		3954095	1					
ANR	3954102	AssignmentExpression	* nodes = r_graph_get_nodes ( g -> graph )		3954095	2		=			
ANR	3954103	Identifier	nodes		3954095	0					
ANR	3954104	CallExpression	r_graph_get_nodes ( g -> graph )		3954095	1					
ANR	3954105	Callee	r_graph_get_nodes		3954095	0					
ANR	3954106	Identifier	r_graph_get_nodes		3954095	0					
ANR	3954107	ArgumentList	g -> graph		3954095	1					
ANR	3954108	Argument	g -> graph		3954095	0					
ANR	3954109	PtrMemberAccess	g -> graph		3954095	0					
ANR	3954110	Identifier	g		3954095	0					
ANR	3954111	Identifier	graph		3954095	1					
ANR	3954112	IdentifierDeclStatement	const RListIter * it ;	2532:1:64056:64075	3954095	1	True				
ANR	3954113	IdentifierDecl	* it		3954095	0					
ANR	3954114	IdentifierDeclType	const RListIter *		3954095	0					
ANR	3954115	Identifier	it		3954095	1					
ANR	3954116	IdentifierDeclStatement	"const RGraphNode * gn , * resgn = NULL ;"	2533:1:64078:64113	3954095	2	True				
ANR	3954117	IdentifierDecl	* gn		3954095	0					
ANR	3954118	IdentifierDeclType	const RGraphNode *		3954095	0					
ANR	3954119	Identifier	gn		3954095	1					
ANR	3954120	IdentifierDecl	* resgn = NULL		3954095	1					
ANR	3954121	IdentifierDeclType	const RGraphNode *		3954095	0					
ANR	3954122	Identifier	resgn		3954095	1					
ANR	3954123	AssignmentExpression	* resgn = NULL		3954095	2		=			
ANR	3954124	Identifier	NULL		3954095	0					
ANR	3954125	Identifier	NULL		3954095	1					
ANR	3954126	IdentifierDeclStatement	"const RANode * n , * acur = cur ? get_anode ( cur ) : NULL ;"	2534:1:64116:64167	3954095	3	True				
ANR	3954127	IdentifierDecl	* n		3954095	0					
ANR	3954128	IdentifierDeclType	const RANode *		3954095	0					
ANR	3954129	Identifier	n		3954095	1					
ANR	3954130	IdentifierDecl	* acur = cur ? get_anode ( cur ) : NULL		3954095	1					
ANR	3954131	IdentifierDeclType	const RANode *		3954095	0					
ANR	3954132	Identifier	acur		3954095	1					
ANR	3954133	AssignmentExpression	* acur = cur ? get_anode ( cur ) : NULL		3954095	2		=			
ANR	3954134	Identifier	acur		3954095	0					
ANR	3954135	ConditionalExpression	cur ? get_anode ( cur ) : NULL		3954095	1					
ANR	3954136	Condition	cur		3954095	0					
ANR	3954137	Identifier	cur		3954095	0					
ANR	3954138	CallExpression	get_anode ( cur )		3954095	1					
ANR	3954139	Callee	get_anode		3954095	0					
ANR	3954140	Identifier	get_anode		3954095	0					
ANR	3954141	ArgumentList	cur		3954095	1					
ANR	3954142	Argument	cur		3954095	0					
ANR	3954143	Identifier	cur		3954095	0					
ANR	3954144	Identifier	NULL		3954095	2					
ANR	3954145	IdentifierDeclStatement	const int default_v = is_next ? INT_MIN : INT_MAX ;	2535:1:64170:64217	3954095	4	True				
ANR	3954146	IdentifierDecl	default_v = is_next ? INT_MIN : INT_MAX		3954095	0					
ANR	3954147	IdentifierDeclType	const int		3954095	0					
ANR	3954148	Identifier	default_v		3954095	1					
ANR	3954149	AssignmentExpression	default_v = is_next ? INT_MIN : INT_MAX		3954095	2		=			
ANR	3954150	Identifier	default_v		3954095	0					
ANR	3954151	ConditionalExpression	is_next ? INT_MIN : INT_MAX		3954095	1					
ANR	3954152	Condition	is_next		3954095	0					
ANR	3954153	Identifier	is_next		3954095	0					
ANR	3954154	Identifier	INT_MIN		3954095	1					
ANR	3954155	Identifier	INT_MAX		3954095	2					
ANR	3954156	IdentifierDeclStatement	const int start_y = acur ? acur -> y : default_v ;	2536:1:64220:64264	3954095	5	True				
ANR	3954157	IdentifierDecl	start_y = acur ? acur -> y : default_v		3954095	0					
ANR	3954158	IdentifierDeclType	const int		3954095	0					
ANR	3954159	Identifier	start_y		3954095	1					
ANR	3954160	AssignmentExpression	start_y = acur ? acur -> y : default_v		3954095	2		=			
ANR	3954161	Identifier	start_y		3954095	0					
ANR	3954162	ConditionalExpression	acur ? acur -> y : default_v		3954095	1					
ANR	3954163	Condition	acur		3954095	0					
ANR	3954164	Identifier	acur		3954095	0					
ANR	3954165	PtrMemberAccess	acur -> y		3954095	1					
ANR	3954166	Identifier	acur		3954095	0					
ANR	3954167	Identifier	y		3954095	1					
ANR	3954168	Identifier	default_v		3954095	2					
ANR	3954169	IdentifierDeclStatement	const int start_x = acur ? acur -> x : default_v ;	2537:1:64267:64311	3954095	6	True				
ANR	3954170	IdentifierDecl	start_x = acur ? acur -> x : default_v		3954095	0					
ANR	3954171	IdentifierDeclType	const int		3954095	0					
ANR	3954172	Identifier	start_x		3954095	1					
ANR	3954173	AssignmentExpression	start_x = acur ? acur -> x : default_v		3954095	2		=			
ANR	3954174	Identifier	start_x		3954095	0					
ANR	3954175	ConditionalExpression	acur ? acur -> x : default_v		3954095	1					
ANR	3954176	Condition	acur		3954095	0					
ANR	3954177	Identifier	acur		3954095	0					
ANR	3954178	PtrMemberAccess	acur -> x		3954095	1					
ANR	3954179	Identifier	acur		3954095	0					
ANR	3954180	Identifier	x		3954095	1					
ANR	3954181	Identifier	default_v		3954095	2					
ANR	3954182	Statement	graph_foreach_anode	2539:1:64315:64333	3954095	7	True				
ANR	3954183	Statement	(	2539:21:64335:64335	3954095	8	True				
ANR	3954184	Statement	nodes	2539:22:64336:64340	3954095	9	True				
ANR	3954185	Statement	","	2539:27:64341:64341	3954095	10	True				
ANR	3954186	Statement	it	2539:29:64343:64344	3954095	11	True				
ANR	3954187	Statement	","	2539:31:64345:64345	3954095	12	True				
ANR	3954188	Statement	gn	2539:33:64347:64348	3954095	13	True				
ANR	3954189	Statement	","	2539:35:64349:64349	3954095	14	True				
ANR	3954190	Statement	n	2539:37:64351:64351	3954095	15	True				
ANR	3954191	Statement	)	2539:38:64352:64352	3954095	16	True				
ANR	3954192	CompoundStatement		13:2:478:605	3954095	17					
ANR	3954193	IdentifierDeclStatement	"bool isNear = true ? is_near ( n , start_x , start_y , is_next ) : is_near_h ( n , start_x , start_y , is_next ) ;"	2541:2:64458:64585	3954095	0	True				
ANR	3954194	IdentifierDecl	"isNear = true ? is_near ( n , start_x , start_y , is_next ) : is_near_h ( n , start_x , start_y , is_next )"		3954095	0					
ANR	3954195	IdentifierDeclType	bool		3954095	0					
ANR	3954196	Identifier	isNear		3954095	1					
ANR	3954197	AssignmentExpression	"isNear = true ? is_near ( n , start_x , start_y , is_next ) : is_near_h ( n , start_x , start_y , is_next )"		3954095	2		=			
ANR	3954198	Identifier	isNear		3954095	0					
ANR	3954199	ConditionalExpression	"true ? is_near ( n , start_x , start_y , is_next ) : is_near_h ( n , start_x , start_y , is_next )"		3954095	1					
ANR	3954200	Condition	true		3954095	0					
ANR	3954201	Identifier	true		3954095	0					
ANR	3954202	CallExpression	"is_near ( n , start_x , start_y , is_next )"		3954095	1					
ANR	3954203	Callee	is_near		3954095	0					
ANR	3954204	Identifier	is_near		3954095	0					
ANR	3954205	ArgumentList	n		3954095	1					
ANR	3954206	Argument	n		3954095	0					
ANR	3954207	Identifier	n		3954095	0					
ANR	3954208	Argument	start_x		3954095	1					
ANR	3954209	Identifier	start_x		3954095	0					
ANR	3954210	Argument	start_y		3954095	2					
ANR	3954211	Identifier	start_y		3954095	0					
ANR	3954212	Argument	is_next		3954095	3					
ANR	3954213	Identifier	is_next		3954095	0					
ANR	3954214	CallExpression	"is_near_h ( n , start_x , start_y , is_next )"		3954095	2					
ANR	3954215	Callee	is_near_h		3954095	0					
ANR	3954216	Identifier	is_near_h		3954095	0					
ANR	3954217	ArgumentList	n		3954095	1					
ANR	3954218	Argument	n		3954095	0					
ANR	3954219	Identifier	n		3954095	0					
ANR	3954220	Argument	start_x		3954095	1					
ANR	3954221	Identifier	start_x		3954095	0					
ANR	3954222	Argument	start_y		3954095	2					
ANR	3954223	Identifier	start_y		3954095	0					
ANR	3954224	Argument	is_next		3954095	3					
ANR	3954225	Identifier	is_next		3954095	0					
ANR	3954226	IfStatement	if ( isNear )		3954095	1					
ANR	3954227	Condition	isNear	2544:6:64593:64598	3954095	0	True				
ANR	3954228	Identifier	isNear		3954095	0					
ANR	3954229	CompoundStatement		17:3:626:644	3954095	1					
ANR	3954230	IdentifierDeclStatement	const RANode * resn ;	2545:3:64606:64624	3954095	0	True				
ANR	3954231	IdentifierDecl	* resn		3954095	0					
ANR	3954232	IdentifierDeclType	const RANode *		3954095	0					
ANR	3954233	Identifier	resn		3954095	1					
ANR	3954234	IfStatement	if ( ! resgn )		3954095	1					
ANR	3954235	Condition	! resgn	2547:7:64634:64639	3954095	0	True				
ANR	3954236	UnaryOperationExpression	! resgn		3954095	0					
ANR	3954237	UnaryOperator	!		3954095	0					
ANR	3954238	Identifier	resgn		3954095	1					
ANR	3954239	CompoundStatement		19:15:662:662	3954095	1					
ANR	3954240	ExpressionStatement	resgn = gn	2548:4:64648:64658	3954095	0	True				
ANR	3954241	AssignmentExpression	resgn = gn		3954095	0		=			
ANR	3954242	Identifier	resgn		3954095	0					
ANR	3954243	Identifier	gn		3954095	1					
ANR	3954244	ContinueStatement	continue ;	2549:4:64664:64672	3954095	1	True				
ANR	3954245	ExpressionStatement	resn = get_anode ( resgn )	2552:3:64683:64707	3954095	2	True				
ANR	3954246	AssignmentExpression	resn = get_anode ( resgn )		3954095	0		=			
ANR	3954247	Identifier	resn		3954095	0					
ANR	3954248	CallExpression	get_anode ( resgn )		3954095	1					
ANR	3954249	Callee	get_anode		3954095	0					
ANR	3954250	Identifier	get_anode		3954095	0					
ANR	3954251	ArgumentList	resgn		3954095	1					
ANR	3954252	Argument	resgn		3954095	0					
ANR	3954253	Identifier	resgn		3954095	0					
ANR	3954254	IfStatement	if ( ( is_next && resn -> y > n -> y ) || ( ! is_next && resn -> y < n -> y ) )		3954095	3					
ANR	3954255	Condition	( is_next && resn -> y > n -> y ) || ( ! is_next && resn -> y < n -> y )	2553:7:64716:64774	3954095	0	True				
ANR	3954256	OrExpression	( is_next && resn -> y > n -> y ) || ( ! is_next && resn -> y < n -> y )		3954095	0		||			
ANR	3954257	AndExpression	is_next && resn -> y > n -> y		3954095	0		&&			
ANR	3954258	Identifier	is_next		3954095	0					
ANR	3954259	RelationalExpression	resn -> y > n -> y		3954095	1		>			
ANR	3954260	PtrMemberAccess	resn -> y		3954095	0					
ANR	3954261	Identifier	resn		3954095	0					
ANR	3954262	Identifier	y		3954095	1					
ANR	3954263	PtrMemberAccess	n -> y		3954095	1					
ANR	3954264	Identifier	n		3954095	0					
ANR	3954265	Identifier	y		3954095	1					
ANR	3954266	AndExpression	! is_next && resn -> y < n -> y		3954095	1		&&			
ANR	3954267	UnaryOperationExpression	! is_next		3954095	0					
ANR	3954268	UnaryOperator	!		3954095	0					
ANR	3954269	Identifier	is_next		3954095	1					
ANR	3954270	RelationalExpression	resn -> y < n -> y		3954095	1		<			
ANR	3954271	PtrMemberAccess	resn -> y		3954095	0					
ANR	3954272	Identifier	resn		3954095	0					
ANR	3954273	Identifier	y		3954095	1					
ANR	3954274	PtrMemberAccess	n -> y		3954095	1					
ANR	3954275	Identifier	n		3954095	0					
ANR	3954276	Identifier	y		3954095	1					
ANR	3954277	CompoundStatement		25:68:797:797	3954095	1					
ANR	3954278	ExpressionStatement	resgn = gn	2554:4:64783:64793	3954095	0	True				
ANR	3954279	AssignmentExpression	resgn = gn		3954095	0		=			
ANR	3954280	Identifier	resgn		3954095	0					
ANR	3954281	Identifier	gn		3954095	1					
ANR	3954282	ElseStatement	else		3954095	0					
ANR	3954283	IfStatement	if ( ( is_next && resn -> y == n -> y && resn -> x > n -> x ) || ( ! is_next && resn -> y == n -> y && resn -> x < n -> x ) )		3954095	0					
ANR	3954284	Condition	( is_next && resn -> y == n -> y && resn -> x > n -> x ) || ( ! is_next && resn -> y == n -> y && resn -> x < n -> x )	2555:14:64809:64919	3954095	0	True				
ANR	3954285	OrExpression	( is_next && resn -> y == n -> y && resn -> x > n -> x ) || ( ! is_next && resn -> y == n -> y && resn -> x < n -> x )		3954095	0		||			
ANR	3954286	AndExpression	is_next && resn -> y == n -> y && resn -> x > n -> x		3954095	0		&&			
ANR	3954287	Identifier	is_next		3954095	0					
ANR	3954288	AndExpression	resn -> y == n -> y && resn -> x > n -> x		3954095	1		&&			
ANR	3954289	EqualityExpression	resn -> y == n -> y		3954095	0		==			
ANR	3954290	PtrMemberAccess	resn -> y		3954095	0					
ANR	3954291	Identifier	resn		3954095	0					
ANR	3954292	Identifier	y		3954095	1					
ANR	3954293	PtrMemberAccess	n -> y		3954095	1					
ANR	3954294	Identifier	n		3954095	0					
ANR	3954295	Identifier	y		3954095	1					
ANR	3954296	RelationalExpression	resn -> x > n -> x		3954095	1		>			
ANR	3954297	PtrMemberAccess	resn -> x		3954095	0					
ANR	3954298	Identifier	resn		3954095	0					
ANR	3954299	Identifier	x		3954095	1					
ANR	3954300	PtrMemberAccess	n -> x		3954095	1					
ANR	3954301	Identifier	n		3954095	0					
ANR	3954302	Identifier	x		3954095	1					
ANR	3954303	AndExpression	! is_next && resn -> y == n -> y && resn -> x < n -> x		3954095	1		&&			
ANR	3954304	UnaryOperationExpression	! is_next		3954095	0					
ANR	3954305	UnaryOperator	!		3954095	0					
ANR	3954306	Identifier	is_next		3954095	1					
ANR	3954307	AndExpression	resn -> y == n -> y && resn -> x < n -> x		3954095	1		&&			
ANR	3954308	EqualityExpression	resn -> y == n -> y		3954095	0		==			
ANR	3954309	PtrMemberAccess	resn -> y		3954095	0					
ANR	3954310	Identifier	resn		3954095	0					
ANR	3954311	Identifier	y		3954095	1					
ANR	3954312	PtrMemberAccess	n -> y		3954095	1					
ANR	3954313	Identifier	n		3954095	0					
ANR	3954314	Identifier	y		3954095	1					
ANR	3954315	RelationalExpression	resn -> x < n -> x		3954095	1		<			
ANR	3954316	PtrMemberAccess	resn -> x		3954095	0					
ANR	3954317	Identifier	resn		3954095	0					
ANR	3954318	Identifier	x		3954095	1					
ANR	3954319	PtrMemberAccess	n -> x		3954095	1					
ANR	3954320	Identifier	n		3954095	0					
ANR	3954321	Identifier	x		3954095	1					
ANR	3954322	CompoundStatement		28:63:942:942	3954095	1					
ANR	3954323	ExpressionStatement	resgn = gn	2557:4:64928:64938	3954095	0	True				
ANR	3954324	AssignmentExpression	resgn = gn		3954095	0		=			
ANR	3954325	Identifier	resgn		3954095	0					
ANR	3954326	Identifier	gn		3954095	1					
ANR	3954327	IfStatement	if ( ! resgn && cur )		3954095	18					
ANR	3954328	Condition	! resgn && cur	2561:5:64957:64969	3954095	0	True				
ANR	3954329	AndExpression	! resgn && cur		3954095	0		&&			
ANR	3954330	UnaryOperationExpression	! resgn		3954095	0					
ANR	3954331	UnaryOperator	!		3954095	0					
ANR	3954332	Identifier	resgn		3954095	1					
ANR	3954333	Identifier	cur		3954095	1					
ANR	3954334	CompoundStatement		33:20:992:992	3954095	1					
ANR	3954335	ExpressionStatement	"resgn = find_near_of ( g , NULL , is_next )"	2562:2:64976:65015	3954095	0	True				
ANR	3954336	AssignmentExpression	"resgn = find_near_of ( g , NULL , is_next )"		3954095	0		=			
ANR	3954337	Identifier	resgn		3954095	0					
ANR	3954338	CallExpression	"find_near_of ( g , NULL , is_next )"		3954095	1					
ANR	3954339	Callee	find_near_of		3954095	0					
ANR	3954340	Identifier	find_near_of		3954095	0					
ANR	3954341	ArgumentList	g		3954095	1					
ANR	3954342	Argument	g		3954095	0					
ANR	3954343	Identifier	g		3954095	0					
ANR	3954344	Argument	NULL		3954095	1					
ANR	3954345	Identifier	NULL		3954095	0					
ANR	3954346	Argument	is_next		3954095	2					
ANR	3954347	Identifier	is_next		3954095	0					
ANR	3954348	ReturnStatement	return resgn ;	2564:1:65021:65033	3954095	19	True				
ANR	3954349	Identifier	resgn		3954095	0					
ANR	3954350	ReturnType	static const RGraphNode *		3954095	1					
ANR	3954351	Identifier	find_near_of		3954095	2					
ANR	3954352	ParameterList	"const RAGraph * g , const RGraphNode * cur , int is_next"		3954095	3					
ANR	3954353	Parameter	const RAGraph * g	2529:38:63925:63940	3954095	0	True				
ANR	3954354	ParameterType	const RAGraph *		3954095	0					
ANR	3954355	Identifier	g		3954095	1					
ANR	3954356	Parameter	const RGraphNode * cur	2529:56:63943:63963	3954095	1	True				
ANR	3954357	ParameterType	const RGraphNode *		3954095	0					
ANR	3954358	Identifier	cur		3954095	1					
ANR	3954359	Parameter	int is_next	2529:79:63966:63976	3954095	2	True				
ANR	3954360	ParameterType	int		3954095	0					
ANR	3954361	Identifier	is_next		3954095	1					
ANR	3954362	CFGEntryNode	ENTRY		3954095		True				
ANR	3954363	CFGExitNode	EXIT		3954095		True				
ANR	3954364	CFGErrorNode	ERROR		3954095		True				
ANR	3954365	Symbol	cur		3954095						
ANR	3954366	Symbol	is_near		3954095						
ANR	3954367	Symbol	find_near_of		3954095						
ANR	3954368	Symbol	INT_MIN		3954095						
ANR	3954369	Symbol	default_v		3954095						
ANR	3954370	Symbol	resn -> x		3954095						
ANR	3954371	Symbol	acur		3954095						
ANR	3954372	Symbol	isNear		3954095						
ANR	3954373	Symbol	g -> graph		3954095						
ANR	3954374	Symbol	acur -> x		3954095						
ANR	3954375	Symbol	resn -> y		3954095						
ANR	3954376	Symbol	acur -> y		3954095						
ANR	3954377	Symbol	INT_MAX		3954095						
ANR	3954378	Symbol	is_near_h		3954095						
ANR	3954379	Symbol	r_graph_get_nodes		3954095						
ANR	3954380	Symbol	NULL		3954095						
ANR	3954381	Symbol	get_anode		3954095						
ANR	3954382	Symbol	g		3954095						
ANR	3954383	Symbol	gn		3954095						
ANR	3954384	Symbol	* resn		3954095						
ANR	3954385	Symbol	* acur		3954095						
ANR	3954386	Symbol	it		3954095						
ANR	3954387	Symbol	n		3954095						
ANR	3954388	Symbol	start_x		3954095						
ANR	3954389	Symbol	is_next		3954095						
ANR	3954390	Symbol	* g		3954095						
ANR	3954391	Symbol	resgn		3954095						
ANR	3954392	Symbol	n -> y		3954095						
ANR	3954393	Symbol	nodes		3954095						
ANR	3954394	Symbol	n -> x		3954095						
ANR	3954395	Symbol	start_y		3954095						
ANR	3954396	Symbol	true		3954095						
ANR	3954397	Symbol	* n		3954095						
ANR	3954398	Symbol	resn		3954095						
ANR	3954399	Function	update_graph_sizes	2567:0:65038:67303							
ANR	3954400	FunctionDef	update_graph_sizes (RAGraph * g)		3954399	0					
ANR	3954401	CompoundStatement		2567:43:65081:67303	3954399	0					
ANR	3954402	IdentifierDeclStatement	RListIter * it ;	2568:1:65084:65097	3954399	0	True				
ANR	3954403	IdentifierDecl	* it		3954399	0					
ANR	3954404	IdentifierDeclType	RListIter *		3954399	0					
ANR	3954405	Identifier	it		3954399	1					
ANR	3954406	IdentifierDeclStatement	RGraphNode * gk ;	2569:1:65100:65114	3954399	1	True				
ANR	3954407	IdentifierDecl	* gk		3954399	0					
ANR	3954408	IdentifierDeclType	RGraphNode *		3954399	0					
ANR	3954409	Identifier	gk		3954399	1					
ANR	3954410	IdentifierDeclStatement	"RANode * ak , * min_gn , * max_gn ;"	2570:1:65117:65145	3954399	2	True				
ANR	3954411	IdentifierDecl	* ak		3954399	0					
ANR	3954412	IdentifierDeclType	RANode *		3954399	0					
ANR	3954413	Identifier	ak		3954399	1					
ANR	3954414	IdentifierDecl	* min_gn		3954399	1					
ANR	3954415	IdentifierDeclType	RANode *		3954399	0					
ANR	3954416	Identifier	min_gn		3954399	1					
ANR	3954417	IdentifierDecl	* max_gn		3954399	2					
ANR	3954418	IdentifierDeclType	RANode *		3954399	0					
ANR	3954419	Identifier	max_gn		3954399	1					
ANR	3954420	IdentifierDeclStatement	"int max_x , max_y ;"	2571:1:65148:65164	3954399	3	True				
ANR	3954421	IdentifierDecl	max_x		3954399	0					
ANR	3954422	IdentifierDeclType	int		3954399	0					
ANR	3954423	Identifier	max_x		3954399	1					
ANR	3954424	IdentifierDecl	max_y		3954399	1					
ANR	3954425	IdentifierDeclType	int		3954399	0					
ANR	3954426	Identifier	max_y		3954399	1					
ANR	3954427	IdentifierDeclStatement	"int delta_x , delta_y ;"	2572:1:65167:65187	3954399	4	True				
ANR	3954428	IdentifierDecl	delta_x		3954399	0					
ANR	3954429	IdentifierDeclType	int		3954399	0					
ANR	3954430	Identifier	delta_x		3954399	1					
ANR	3954431	IdentifierDecl	delta_y		3954399	1					
ANR	3954432	IdentifierDeclType	int		3954399	0					
ANR	3954433	Identifier	delta_y		3954399	1					
ANR	3954434	IdentifierDeclStatement	AEdge * e ;	2573:1:65190:65198	3954399	5	True				
ANR	3954435	IdentifierDecl	* e		3954399	0					
ANR	3954436	IdentifierDeclType	AEdge *		3954399	0					
ANR	3954437	Identifier	e		3954399	1					
ANR	3954438	ExpressionStatement	g -> x = g -> y = INT_MAX	2575:1:65202:65223	3954399	6	True				
ANR	3954439	AssignmentExpression	g -> x = g -> y = INT_MAX		3954399	0		=			
ANR	3954440	PtrMemberAccess	g -> x		3954399	0					
ANR	3954441	Identifier	g		3954399	0					
ANR	3954442	Identifier	x		3954399	1					
ANR	3954443	AssignmentExpression	g -> y = INT_MAX		3954399	1		=			
ANR	3954444	PtrMemberAccess	g -> y		3954399	0					
ANR	3954445	Identifier	g		3954399	0					
ANR	3954446	Identifier	y		3954399	1					
ANR	3954447	Identifier	INT_MAX		3954399	1					
ANR	3954448	ExpressionStatement	max_x = max_y = INT_MIN	2576:1:65226:65249	3954399	7	True				
ANR	3954449	AssignmentExpression	max_x = max_y = INT_MIN		3954399	0		=			
ANR	3954450	Identifier	max_x		3954399	0					
ANR	3954451	AssignmentExpression	max_y = INT_MIN		3954399	1		=			
ANR	3954452	Identifier	max_y		3954399	0					
ANR	3954453	Identifier	INT_MIN		3954399	1					
ANR	3954454	ExpressionStatement	min_gn = max_gn = NULL	2577:1:65252:65274	3954399	8	True				
ANR	3954455	AssignmentExpression	min_gn = max_gn = NULL		3954399	0		=			
ANR	3954456	Identifier	min_gn		3954399	0					
ANR	3954457	AssignmentExpression	max_gn = NULL		3954399	1		=			
ANR	3954458	Identifier	max_gn		3954399	0					
ANR	3954459	Identifier	NULL		3954399	1					
ANR	3954460	Statement	graph_foreach_anode	2579:1:65278:65296	3954399	9	True				
ANR	3954461	Statement	(	2579:21:65298:65298	3954399	10	True				
ANR	3954462	Statement	r_graph_get_nodes	2579:22:65299:65315	3954399	11	True				
ANR	3954463	Statement	(	2579:40:65317:65317	3954399	12	True				
ANR	3954464	Statement	g	2579:41:65318:65318	3954399	13	True				
ANR	3954465	Statement	->	2579:42:65319:65320	3954399	14	True				
ANR	3954466	Statement	graph	2579:44:65321:65325	3954399	15	True				
ANR	3954467	Statement	)	2579:49:65326:65326	3954399	16	True				
ANR	3954468	Statement	","	2579:50:65327:65327	3954399	17	True				
ANR	3954469	Statement	it	2579:52:65329:65330	3954399	18	True				
ANR	3954470	Statement	","	2579:54:65331:65331	3954399	19	True				
ANR	3954471	Statement	gk	2579:56:65333:65334	3954399	20	True				
ANR	3954472	Statement	","	2579:58:65335:65335	3954399	21	True				
ANR	3954473	Statement	ak	2579:60:65337:65338	3954399	22	True				
ANR	3954474	Statement	)	2579:62:65339:65339	3954399	23	True				
ANR	3954475	CompoundStatement		15:2:289:296	3954399	24					
ANR	3954476	IdentifierDeclStatement	const RList * nd = NULL ;	2580:2:65345:65367	3954399	0	True				
ANR	3954477	IdentifierDecl	* nd = NULL		3954399	0					
ANR	3954478	IdentifierDeclType	const RList *		3954399	0					
ANR	3954479	Identifier	nd		3954399	1					
ANR	3954480	AssignmentExpression	* nd = NULL		3954399	2		=			
ANR	3954481	Identifier	NULL		3954399	0					
ANR	3954482	Identifier	NULL		3954399	1					
ANR	3954483	IdentifierDeclStatement	int len ;	2581:2:65371:65378	3954399	1	True				
ANR	3954484	IdentifierDecl	len		3954399	0					
ANR	3954485	IdentifierDeclType	int		3954399	0					
ANR	3954486	Identifier	len		3954399	1					
ANR	3954487	IfStatement	if ( ak -> x < g -> x )		3954399	2					
ANR	3954488	Condition	ak -> x < g -> x	2582:6:65386:65397	3954399	0	True				
ANR	3954489	RelationalExpression	ak -> x < g -> x		3954399	0		<			
ANR	3954490	PtrMemberAccess	ak -> x		3954399	0					
ANR	3954491	Identifier	ak		3954399	0					
ANR	3954492	Identifier	x		3954399	1					
ANR	3954493	PtrMemberAccess	g -> x		3954399	1					
ANR	3954494	Identifier	g		3954399	0					
ANR	3954495	Identifier	x		3954399	1					
ANR	3954496	CompoundStatement		16:20:318:318	3954399	1					
ANR	3954497	ExpressionStatement	g -> x = ak -> x	2583:3:65405:65417	3954399	0	True				
ANR	3954498	AssignmentExpression	g -> x = ak -> x		3954399	0		=			
ANR	3954499	PtrMemberAccess	g -> x		3954399	0					
ANR	3954500	Identifier	g		3954399	0					
ANR	3954501	Identifier	x		3954399	1					
ANR	3954502	PtrMemberAccess	ak -> x		3954399	1					
ANR	3954503	Identifier	ak		3954399	0					
ANR	3954504	Identifier	x		3954399	1					
ANR	3954505	ExpressionStatement	"nd = r_graph_innodes ( g -> graph , gk )"	2586:2:65426:65461	3954399	3	True				
ANR	3954506	AssignmentExpression	"nd = r_graph_innodes ( g -> graph , gk )"		3954399	0		=			
ANR	3954507	Identifier	nd		3954399	0					
ANR	3954508	CallExpression	"r_graph_innodes ( g -> graph , gk )"		3954399	1					
ANR	3954509	Callee	r_graph_innodes		3954399	0					
ANR	3954510	Identifier	r_graph_innodes		3954399	0					
ANR	3954511	ArgumentList	g -> graph		3954399	1					
ANR	3954512	Argument	g -> graph		3954399	0					
ANR	3954513	PtrMemberAccess	g -> graph		3954399	0					
ANR	3954514	Identifier	g		3954399	0					
ANR	3954515	Identifier	graph		3954399	1					
ANR	3954516	Argument	gk		3954399	1					
ANR	3954517	Identifier	gk		3954399	0					
ANR	3954518	ExpressionStatement	len = nd ? r_list_length ( nd ) + 1 : 0	2587:2:65465:65502	3954399	4	True				
ANR	3954519	AssignmentExpression	len = nd ? r_list_length ( nd ) + 1 : 0		3954399	0		=			
ANR	3954520	Identifier	len		3954399	0					
ANR	3954521	ConditionalExpression	nd ? r_list_length ( nd ) + 1 : 0		3954399	1					
ANR	3954522	Condition	nd		3954399	0					
ANR	3954523	Identifier	nd		3954399	0					
ANR	3954524	AdditiveExpression	r_list_length ( nd ) + 1		3954399	1		+			
ANR	3954525	CallExpression	r_list_length ( nd )		3954399	0					
ANR	3954526	Callee	r_list_length		3954399	0					
ANR	3954527	Identifier	r_list_length		3954399	0					
ANR	3954528	ArgumentList	nd		3954399	1					
ANR	3954529	Argument	nd		3954399	0					
ANR	3954530	Identifier	nd		3954399	0					
ANR	3954531	PrimaryExpression	1		3954399	1					
ANR	3954532	PrimaryExpression	0		3954399	2					
ANR	3954533	IfStatement	if ( ak -> y - len < g -> y )		3954399	5					
ANR	3954534	Condition	ak -> y - len < g -> y	2588:6:65510:65527	3954399	0	True				
ANR	3954535	RelationalExpression	ak -> y - len < g -> y		3954399	0		<			
ANR	3954536	AdditiveExpression	ak -> y - len		3954399	0		-			
ANR	3954537	PtrMemberAccess	ak -> y		3954399	0					
ANR	3954538	Identifier	ak		3954399	0					
ANR	3954539	Identifier	y		3954399	1					
ANR	3954540	Identifier	len		3954399	1					
ANR	3954541	PtrMemberAccess	g -> y		3954399	1					
ANR	3954542	Identifier	g		3954399	0					
ANR	3954543	Identifier	y		3954399	1					
ANR	3954544	CompoundStatement		22:26:448:448	3954399	1					
ANR	3954545	ExpressionStatement	g -> y = ak -> y - len	2589:3:65535:65553	3954399	0	True				
ANR	3954546	AssignmentExpression	g -> y = ak -> y - len		3954399	0		=			
ANR	3954547	PtrMemberAccess	g -> y		3954399	0					
ANR	3954548	Identifier	g		3954399	0					
ANR	3954549	Identifier	y		3954399	1					
ANR	3954550	AdditiveExpression	ak -> y - len		3954399	1		-			
ANR	3954551	PtrMemberAccess	ak -> y		3954399	0					
ANR	3954552	Identifier	ak		3954399	0					
ANR	3954553	Identifier	y		3954399	1					
ANR	3954554	Identifier	len		3954399	1					
ANR	3954555	ExpressionStatement	min_gn = ak	2590:3:65558:65569	3954399	1	True				
ANR	3954556	AssignmentExpression	min_gn = ak		3954399	0		=			
ANR	3954557	Identifier	min_gn		3954399	0					
ANR	3954558	Identifier	ak		3954399	1					
ANR	3954559	IfStatement	if ( ak -> x + ak -> w > max_x )		3954399	6					
ANR	3954560	Condition	ak -> x + ak -> w > max_x	2593:6:65582:65602	3954399	0	True				
ANR	3954561	RelationalExpression	ak -> x + ak -> w > max_x		3954399	0		>			
ANR	3954562	AdditiveExpression	ak -> x + ak -> w		3954399	0		+			
ANR	3954563	PtrMemberAccess	ak -> x		3954399	0					
ANR	3954564	Identifier	ak		3954399	0					
ANR	3954565	Identifier	x		3954399	1					
ANR	3954566	PtrMemberAccess	ak -> w		3954399	1					
ANR	3954567	Identifier	ak		3954399	0					
ANR	3954568	Identifier	w		3954399	1					
ANR	3954569	Identifier	max_x		3954399	1					
ANR	3954570	CompoundStatement		27:29:523:523	3954399	1					
ANR	3954571	ExpressionStatement	max_x = ak -> x + ak -> w	2594:3:65610:65631	3954399	0	True				
ANR	3954572	AssignmentExpression	max_x = ak -> x + ak -> w		3954399	0		=			
ANR	3954573	Identifier	max_x		3954399	0					
ANR	3954574	AdditiveExpression	ak -> x + ak -> w		3954399	1		+			
ANR	3954575	PtrMemberAccess	ak -> x		3954399	0					
ANR	3954576	Identifier	ak		3954399	0					
ANR	3954577	Identifier	x		3954399	1					
ANR	3954578	PtrMemberAccess	ak -> w		3954399	1					
ANR	3954579	Identifier	ak		3954399	0					
ANR	3954580	Identifier	w		3954399	1					
ANR	3954581	ExpressionStatement	nd = NULL	2597:2:65640:65649	3954399	7	True				
ANR	3954582	AssignmentExpression	nd = NULL		3954399	0		=			
ANR	3954583	Identifier	nd		3954399	0					
ANR	3954584	Identifier	NULL		3954399	1					
ANR	3954585	ExpressionStatement	"nd = r_graph_get_neighbours ( g -> graph , gk )"	2598:2:65653:65695	3954399	8	True				
ANR	3954586	AssignmentExpression	"nd = r_graph_get_neighbours ( g -> graph , gk )"		3954399	0		=			
ANR	3954587	Identifier	nd		3954399	0					
ANR	3954588	CallExpression	"r_graph_get_neighbours ( g -> graph , gk )"		3954399	1					
ANR	3954589	Callee	r_graph_get_neighbours		3954399	0					
ANR	3954590	Identifier	r_graph_get_neighbours		3954399	0					
ANR	3954591	ArgumentList	g -> graph		3954399	1					
ANR	3954592	Argument	g -> graph		3954399	0					
ANR	3954593	PtrMemberAccess	g -> graph		3954399	0					
ANR	3954594	Identifier	g		3954399	0					
ANR	3954595	Identifier	graph		3954399	1					
ANR	3954596	Argument	gk		3954399	1					
ANR	3954597	Identifier	gk		3954399	0					
ANR	3954598	ExpressionStatement	len = nd ? r_list_length ( nd ) + 2 : 0	2599:2:65699:65736	3954399	9	True				
ANR	3954599	AssignmentExpression	len = nd ? r_list_length ( nd ) + 2 : 0		3954399	0		=			
ANR	3954600	Identifier	len		3954399	0					
ANR	3954601	ConditionalExpression	nd ? r_list_length ( nd ) + 2 : 0		3954399	1					
ANR	3954602	Condition	nd		3954399	0					
ANR	3954603	Identifier	nd		3954399	0					
ANR	3954604	AdditiveExpression	r_list_length ( nd ) + 2		3954399	1		+			
ANR	3954605	CallExpression	r_list_length ( nd )		3954399	0					
ANR	3954606	Callee	r_list_length		3954399	0					
ANR	3954607	Identifier	r_list_length		3954399	0					
ANR	3954608	ArgumentList	nd		3954399	1					
ANR	3954609	Argument	nd		3954399	0					
ANR	3954610	Identifier	nd		3954399	0					
ANR	3954611	PrimaryExpression	2		3954399	1					
ANR	3954612	PrimaryExpression	0		3954399	2					
ANR	3954613	IfStatement	if ( ak -> y + ak -> h + len > max_y )		3954399	10					
ANR	3954614	Condition	ak -> y + ak -> h + len > max_y	2600:6:65744:65770	3954399	0	True				
ANR	3954615	RelationalExpression	ak -> y + ak -> h + len > max_y		3954399	0		>			
ANR	3954616	AdditiveExpression	ak -> y + ak -> h + len		3954399	0		+			
ANR	3954617	PtrMemberAccess	ak -> y		3954399	0					
ANR	3954618	Identifier	ak		3954399	0					
ANR	3954619	Identifier	y		3954399	1					
ANR	3954620	AdditiveExpression	ak -> h + len		3954399	1		+			
ANR	3954621	PtrMemberAccess	ak -> h		3954399	0					
ANR	3954622	Identifier	ak		3954399	0					
ANR	3954623	Identifier	h		3954399	1					
ANR	3954624	Identifier	len		3954399	1					
ANR	3954625	Identifier	max_y		3954399	1					
ANR	3954626	CompoundStatement		34:35:691:691	3954399	1					
ANR	3954627	ExpressionStatement	max_y = ak -> y + ak -> h + len	2601:3:65778:65805	3954399	0	True				
ANR	3954628	AssignmentExpression	max_y = ak -> y + ak -> h + len		3954399	0		=			
ANR	3954629	Identifier	max_y		3954399	0					
ANR	3954630	AdditiveExpression	ak -> y + ak -> h + len		3954399	1		+			
ANR	3954631	PtrMemberAccess	ak -> y		3954399	0					
ANR	3954632	Identifier	ak		3954399	0					
ANR	3954633	Identifier	y		3954399	1					
ANR	3954634	AdditiveExpression	ak -> h + len		3954399	1		+			
ANR	3954635	PtrMemberAccess	ak -> h		3954399	0					
ANR	3954636	Identifier	ak		3954399	0					
ANR	3954637	Identifier	h		3954399	1					
ANR	3954638	Identifier	len		3954399	1					
ANR	3954639	ExpressionStatement	max_gn = ak	2602:3:65810:65821	3954399	1	True				
ANR	3954640	AssignmentExpression	max_gn = ak		3954399	0		=			
ANR	3954641	Identifier	max_gn		3954399	0					
ANR	3954642	Identifier	ak		3954399	1					
ANR	3954643	Statement	r_list_foreach	2606:1:65901:65914	3954399	25	True				
ANR	3954644	Statement	(	2606:16:65916:65916	3954399	26	True				
ANR	3954645	Statement	g	2606:17:65917:65917	3954399	27	True				
ANR	3954646	Statement	->	2606:18:65918:65919	3954399	28	True				
ANR	3954647	Statement	edges	2606:20:65920:65924	3954399	29	True				
ANR	3954648	Statement	","	2606:25:65925:65925	3954399	30	True				
ANR	3954649	Statement	it	2606:27:65927:65928	3954399	31	True				
ANR	3954650	Statement	","	2606:29:65929:65929	3954399	32	True				
ANR	3954651	Statement	e	2606:31:65931:65931	3954399	33	True				
ANR	3954652	Statement	)	2606:32:65932:65932	3954399	34	True				
ANR	3954653	CompoundStatement		43:2:885:890	3954399	35					
ANR	3954654	IdentifierDeclStatement	RListIter * kt ;	2607:2:65938:65951	3954399	0	True				
ANR	3954655	IdentifierDecl	* kt		3954399	0					
ANR	3954656	IdentifierDeclType	RListIter *		3954399	0					
ANR	3954657	Identifier	kt		3954399	1					
ANR	3954658	IdentifierDeclStatement	void * vv ;	2608:2:65955:65963	3954399	1	True				
ANR	3954659	IdentifierDecl	* vv		3954399	0					
ANR	3954660	IdentifierDeclType	void *		3954399	0					
ANR	3954661	Identifier	vv		3954399	1					
ANR	3954662	IdentifierDeclStatement	int v ;	2609:2:65967:65972	3954399	2	True				
ANR	3954663	IdentifierDecl	v		3954399	0					
ANR	3954664	IdentifierDeclType	int		3954399	0					
ANR	3954665	Identifier	v		3954399	1					
ANR	3954666	IfStatement	if ( r_cons_is_breaked ( ) )		3954399	3					
ANR	3954667	Condition	r_cons_is_breaked ( )	2610:6:65980:65999	3954399	0	True				
ANR	3954668	CallExpression	r_cons_is_breaked ( )		3954399	0					
ANR	3954669	Callee	r_cons_is_breaked		3954399	0					
ANR	3954670	Identifier	r_cons_is_breaked		3954399	0					
ANR	3954671	ArgumentList			3954399	1					
ANR	3954672	CompoundStatement		44:28:920:920	3954399	1					
ANR	3954673	BreakStatement	break ;	2611:3:66007:66012	3954399	0	True				
ANR	3954674	Statement	r_list_foreach	2613:2:66020:66033	3954399	4	True				
ANR	3954675	Statement	(	2613:17:66035:66035	3954399	5	True				
ANR	3954676	Statement	e	2613:18:66036:66036	3954399	6	True				
ANR	3954677	Statement	->	2613:19:66037:66038	3954399	7	True				
ANR	3954678	Statement	x	2613:21:66039:66039	3954399	8	True				
ANR	3954679	Statement	","	2613:22:66040:66040	3954399	9	True				
ANR	3954680	Statement	kt	2613:24:66042:66043	3954399	10	True				
ANR	3954681	Statement	","	2613:26:66044:66044	3954399	11	True				
ANR	3954682	Statement	vv	2613:28:66046:66047	3954399	12	True				
ANR	3954683	Statement	)	2613:30:66048:66048	3954399	13	True				
ANR	3954684	CompoundStatement		47:32:968:968	3954399	14					
ANR	3954685	ExpressionStatement	v = ( int ) ( size_t ) vv	2614:3:66055:66076	3954399	0	True				
ANR	3954686	AssignmentExpression	v = ( int ) ( size_t ) vv		3954399	0		=			
ANR	3954687	Identifier	v		3954399	0					
ANR	3954688	CastExpression	( int ) ( size_t ) vv		3954399	1					
ANR	3954689	CastTarget	int		3954399	0					
ANR	3954690	CastExpression	( size_t ) vv		3954399	1					
ANR	3954691	CastTarget	size_t		3954399	0					
ANR	3954692	Identifier	vv		3954399	1					
ANR	3954693	IfStatement	if ( v < g -> x )		3954399	1					
ANR	3954694	Condition	v < g -> x	2615:7:66085:66092	3954399	0	True				
ANR	3954695	RelationalExpression	v < g -> x		3954399	0		<			
ANR	3954696	Identifier	v		3954399	0					
ANR	3954697	PtrMemberAccess	g -> x		3954399	1					
ANR	3954698	Identifier	g		3954399	0					
ANR	3954699	Identifier	x		3954399	1					
ANR	3954700	CompoundStatement		49:17:1013:1013	3954399	1					
ANR	3954701	ExpressionStatement	g -> x = v	2616:4:66101:66109	3954399	0	True				
ANR	3954702	AssignmentExpression	g -> x = v		3954399	0		=			
ANR	3954703	PtrMemberAccess	g -> x		3954399	0					
ANR	3954704	Identifier	g		3954399	0					
ANR	3954705	Identifier	x		3954399	1					
ANR	3954706	Identifier	v		3954399	1					
ANR	3954707	IfStatement	if ( v + 1 > max_x )		3954399	2					
ANR	3954708	Condition	v + 1 > max_x	2618:7:66123:66135	3954399	0	True				
ANR	3954709	RelationalExpression	v + 1 > max_x		3954399	0		>			
ANR	3954710	AdditiveExpression	v + 1		3954399	0		+			
ANR	3954711	Identifier	v		3954399	0					
ANR	3954712	PrimaryExpression	1		3954399	1					
ANR	3954713	Identifier	max_x		3954399	1					
ANR	3954714	CompoundStatement		52:22:1056:1056	3954399	1					
ANR	3954715	ExpressionStatement	max_x = v + 1	2619:4:66144:66157	3954399	0	True				
ANR	3954716	AssignmentExpression	max_x = v + 1		3954399	0		=			
ANR	3954717	Identifier	max_x		3954399	0					
ANR	3954718	AdditiveExpression	v + 1		3954399	1		+			
ANR	3954719	Identifier	v		3954399	0					
ANR	3954720	PrimaryExpression	1		3954399	1					
ANR	3954721	Statement	r_list_foreach	2622:2:66170:66183	3954399	15	True				
ANR	3954722	Statement	(	2622:17:66185:66185	3954399	16	True				
ANR	3954723	Statement	e	2622:18:66186:66186	3954399	17	True				
ANR	3954724	Statement	->	2622:19:66187:66188	3954399	18	True				
ANR	3954725	Statement	y	2622:21:66189:66189	3954399	19	True				
ANR	3954726	Statement	","	2622:22:66190:66190	3954399	20	True				
ANR	3954727	Statement	kt	2622:24:66192:66193	3954399	21	True				
ANR	3954728	Statement	","	2622:26:66194:66194	3954399	22	True				
ANR	3954729	Statement	vv	2622:28:66196:66197	3954399	23	True				
ANR	3954730	Statement	)	2622:30:66198:66198	3954399	24	True				
ANR	3954731	CompoundStatement		56:32:1118:1118	3954399	25					
ANR	3954732	ExpressionStatement	v = ( int ) ( size_t ) vv	2623:3:66205:66226	3954399	0	True				
ANR	3954733	AssignmentExpression	v = ( int ) ( size_t ) vv		3954399	0		=			
ANR	3954734	Identifier	v		3954399	0					
ANR	3954735	CastExpression	( int ) ( size_t ) vv		3954399	1					
ANR	3954736	CastTarget	int		3954399	0					
ANR	3954737	CastExpression	( size_t ) vv		3954399	1					
ANR	3954738	CastTarget	size_t		3954399	0					
ANR	3954739	Identifier	vv		3954399	1					
ANR	3954740	IfStatement	if ( v < g -> y )		3954399	1					
ANR	3954741	Condition	v < g -> y	2624:7:66235:66242	3954399	0	True				
ANR	3954742	RelationalExpression	v < g -> y		3954399	0		<			
ANR	3954743	Identifier	v		3954399	0					
ANR	3954744	PtrMemberAccess	g -> y		3954399	1					
ANR	3954745	Identifier	g		3954399	0					
ANR	3954746	Identifier	y		3954399	1					
ANR	3954747	CompoundStatement		58:17:1163:1163	3954399	1					
ANR	3954748	ExpressionStatement	g -> y = v	2625:4:66251:66259	3954399	0	True				
ANR	3954749	AssignmentExpression	g -> y = v		3954399	0		=			
ANR	3954750	PtrMemberAccess	g -> y		3954399	0					
ANR	3954751	Identifier	g		3954399	0					
ANR	3954752	Identifier	y		3954399	1					
ANR	3954753	Identifier	v		3954399	1					
ANR	3954754	IfStatement	if ( v + 1 > max_y )		3954399	2					
ANR	3954755	Condition	v + 1 > max_y	2627:7:66273:66285	3954399	0	True				
ANR	3954756	RelationalExpression	v + 1 > max_y		3954399	0		>			
ANR	3954757	AdditiveExpression	v + 1		3954399	0		+			
ANR	3954758	Identifier	v		3954399	0					
ANR	3954759	PrimaryExpression	1		3954399	1					
ANR	3954760	Identifier	max_y		3954399	1					
ANR	3954761	CompoundStatement		61:22:1206:1206	3954399	1					
ANR	3954762	ExpressionStatement	max_y = v + 1	2628:4:66294:66307	3954399	0	True				
ANR	3954763	AssignmentExpression	max_y = v + 1		3954399	0		=			
ANR	3954764	Identifier	max_y		3954399	0					
ANR	3954765	AdditiveExpression	v + 1		3954399	1		+			
ANR	3954766	Identifier	v		3954399	0					
ANR	3954767	PrimaryExpression	1		3954399	1					
ANR	3954768	ExpressionStatement	r_cons_break_pop ( )	2632:1:66322:66341	3954399	36	True				
ANR	3954769	CallExpression	r_cons_break_pop ( )		3954399	0					
ANR	3954770	Callee	r_cons_break_pop		3954399	0					
ANR	3954771	Identifier	r_cons_break_pop		3954399	0					
ANR	3954772	ArgumentList			3954399	1					
ANR	3954773	IfStatement	if ( min_gn )		3954399	37					
ANR	3954774	Condition	min_gn	2634:5:66349:66354	3954399	0	True				
ANR	3954775	Identifier	min_gn		3954399	0					
ANR	3954776	CompoundStatement		69:2:1279:1341	3954399	1					
ANR	3954777	IdentifierDeclStatement	"const RList * neigh = r_graph_innodes ( g -> graph , min_gn -> gnode ) ;"	2635:2:66361:66423	3954399	0	True				
ANR	3954778	IdentifierDecl	"* neigh = r_graph_innodes ( g -> graph , min_gn -> gnode )"		3954399	0					
ANR	3954779	IdentifierDeclType	const RList *		3954399	0					
ANR	3954780	Identifier	neigh		3954399	1					
ANR	3954781	AssignmentExpression	"* neigh = r_graph_innodes ( g -> graph , min_gn -> gnode )"		3954399	2		=			
ANR	3954782	Identifier	neigh		3954399	0					
ANR	3954783	CallExpression	"r_graph_innodes ( g -> graph , min_gn -> gnode )"		3954399	1					
ANR	3954784	Callee	r_graph_innodes		3954399	0					
ANR	3954785	Identifier	r_graph_innodes		3954399	0					
ANR	3954786	ArgumentList	g -> graph		3954399	1					
ANR	3954787	Argument	g -> graph		3954399	0					
ANR	3954788	PtrMemberAccess	g -> graph		3954399	0					
ANR	3954789	Identifier	g		3954399	0					
ANR	3954790	Identifier	graph		3954399	1					
ANR	3954791	Argument	min_gn -> gnode		3954399	1					
ANR	3954792	PtrMemberAccess	min_gn -> gnode		3954399	0					
ANR	3954793	Identifier	min_gn		3954399	0					
ANR	3954794	Identifier	gnode		3954399	1					
ANR	3954795	IfStatement	if ( r_list_length ( neigh ) > 0 )		3954399	1					
ANR	3954796	Condition	r_list_length ( neigh ) > 0	2636:6:66431:66455	3954399	0	True				
ANR	3954797	RelationalExpression	r_list_length ( neigh ) > 0		3954399	0		>			
ANR	3954798	CallExpression	r_list_length ( neigh )		3954399	0					
ANR	3954799	Callee	r_list_length		3954399	0					
ANR	3954800	Identifier	r_list_length		3954399	0					
ANR	3954801	ArgumentList	neigh		3954399	1					
ANR	3954802	Argument	neigh		3954399	0					
ANR	3954803	Identifier	neigh		3954399	0					
ANR	3954804	PrimaryExpression	0		3954399	1					
ANR	3954805	CompoundStatement		70:33:1376:1376	3954399	1					
ANR	3954806	ExpressionStatement	g -> y --	2637:3:66463:66469	3954399	0	True				
ANR	3954807	PostIncDecOperationExpression	g -> y --		3954399	0					
ANR	3954808	PtrMemberAccess	g -> y		3954399	0					
ANR	3954809	Identifier	g		3954399	0					
ANR	3954810	Identifier	y		3954399	1					
ANR	3954811	IncDec	--		3954399	1					
ANR	3954812	ExpressionStatement	max_y ++	2638:3:66474:66481	3954399	1	True				
ANR	3954813	PostIncDecOperationExpression	max_y ++		3954399	0					
ANR	3954814	Identifier	max_y		3954399	0					
ANR	3954815	IncDec	++		3954399	1					
ANR	3954816	IfStatement	if ( max_gn )		3954399	2					
ANR	3954817	Condition	max_gn	2640:6:66493:66498	3954399	0	True				
ANR	3954818	Identifier	max_gn		3954399	0					
ANR	3954819	CompoundStatement		75:3:1424:1493	3954399	1					
ANR	3954820	IdentifierDeclStatement	"const RList * neigh = r_graph_get_neighbours ( g -> graph , min_gn -> gnode ) ;"	2641:3:66506:66575	3954399	0	True				
ANR	3954821	IdentifierDecl	"* neigh = r_graph_get_neighbours ( g -> graph , min_gn -> gnode )"		3954399	0					
ANR	3954822	IdentifierDeclType	const RList *		3954399	0					
ANR	3954823	Identifier	neigh		3954399	1					
ANR	3954824	AssignmentExpression	"* neigh = r_graph_get_neighbours ( g -> graph , min_gn -> gnode )"		3954399	2		=			
ANR	3954825	Identifier	neigh		3954399	0					
ANR	3954826	CallExpression	"r_graph_get_neighbours ( g -> graph , min_gn -> gnode )"		3954399	1					
ANR	3954827	Callee	r_graph_get_neighbours		3954399	0					
ANR	3954828	Identifier	r_graph_get_neighbours		3954399	0					
ANR	3954829	ArgumentList	g -> graph		3954399	1					
ANR	3954830	Argument	g -> graph		3954399	0					
ANR	3954831	PtrMemberAccess	g -> graph		3954399	0					
ANR	3954832	Identifier	g		3954399	0					
ANR	3954833	Identifier	graph		3954399	1					
ANR	3954834	Argument	min_gn -> gnode		3954399	1					
ANR	3954835	PtrMemberAccess	min_gn -> gnode		3954399	0					
ANR	3954836	Identifier	min_gn		3954399	0					
ANR	3954837	Identifier	gnode		3954399	1					
ANR	3954838	IfStatement	if ( r_list_length ( neigh ) > 0 )		3954399	1					
ANR	3954839	Condition	r_list_length ( neigh ) > 0	2642:7:66584:66608	3954399	0	True				
ANR	3954840	RelationalExpression	r_list_length ( neigh ) > 0		3954399	0		>			
ANR	3954841	CallExpression	r_list_length ( neigh )		3954399	0					
ANR	3954842	Callee	r_list_length		3954399	0					
ANR	3954843	Identifier	r_list_length		3954399	0					
ANR	3954844	ArgumentList	neigh		3954399	1					
ANR	3954845	Argument	neigh		3954399	0					
ANR	3954846	Identifier	neigh		3954399	0					
ANR	3954847	PrimaryExpression	0		3954399	1					
ANR	3954848	CompoundStatement		76:34:1529:1529	3954399	1					
ANR	3954849	ExpressionStatement	max_y ++	2643:4:66617:66624	3954399	0	True				
ANR	3954850	PostIncDecOperationExpression	max_y ++		3954399	0					
ANR	3954851	Identifier	max_y		3954399	0					
ANR	3954852	IncDec	++		3954399	1					
ANR	3954853	IfStatement	if ( g -> x != INT_MAX && g -> y != INT_MAX )		3954399	38					
ANR	3954854	Condition	g -> x != INT_MAX && g -> y != INT_MAX	2648:5:66644:66677	3954399	0	True				
ANR	3954855	AndExpression	g -> x != INT_MAX && g -> y != INT_MAX		3954399	0		&&			
ANR	3954856	EqualityExpression	g -> x != INT_MAX		3954399	0		!=			
ANR	3954857	PtrMemberAccess	g -> x		3954399	0					
ANR	3954858	Identifier	g		3954399	0					
ANR	3954859	Identifier	x		3954399	1					
ANR	3954860	Identifier	INT_MAX		3954399	1					
ANR	3954861	EqualityExpression	g -> y != INT_MAX		3954399	1		!=			
ANR	3954862	PtrMemberAccess	g -> y		3954399	0					
ANR	3954863	Identifier	g		3954399	0					
ANR	3954864	Identifier	y		3954399	1					
ANR	3954865	Identifier	INT_MAX		3954399	1					
ANR	3954866	CompoundStatement		82:41:1598:1598	3954399	1					
ANR	3954867	ExpressionStatement	g -> w = max_x - g -> x	2649:2:66684:66703	3954399	0	True				
ANR	3954868	AssignmentExpression	g -> w = max_x - g -> x		3954399	0		=			
ANR	3954869	PtrMemberAccess	g -> w		3954399	0					
ANR	3954870	Identifier	g		3954399	0					
ANR	3954871	Identifier	w		3954399	1					
ANR	3954872	AdditiveExpression	max_x - g -> x		3954399	1		-			
ANR	3954873	Identifier	max_x		3954399	0					
ANR	3954874	PtrMemberAccess	g -> x		3954399	1					
ANR	3954875	Identifier	g		3954399	0					
ANR	3954876	Identifier	x		3954399	1					
ANR	3954877	IfStatement	if ( g -> title )		3954399	1					
ANR	3954878	Condition	g -> title	2650:6:66711:66718	3954399	0	True				
ANR	3954879	PtrMemberAccess	g -> title		3954399	0					
ANR	3954880	Identifier	g		3954399	0					
ANR	3954881	Identifier	title		3954399	1					
ANR	3954882	CompoundStatement		85:3:1644:1674	3954399	1					
ANR	3954883	IdentifierDeclStatement	size_t len = strlen ( g -> title ) ;	2651:3:66726:66756	3954399	0	True				
ANR	3954884	IdentifierDecl	len = strlen ( g -> title )		3954399	0					
ANR	3954885	IdentifierDeclType	size_t		3954399	0					
ANR	3954886	Identifier	len		3954399	1					
ANR	3954887	AssignmentExpression	len = strlen ( g -> title )		3954399	2		=			
ANR	3954888	Identifier	len		3954399	0					
ANR	3954889	CallExpression	strlen ( g -> title )		3954399	1					
ANR	3954890	Callee	strlen		3954399	0					
ANR	3954891	Identifier	strlen		3954399	0					
ANR	3954892	ArgumentList	g -> title		3954399	1					
ANR	3954893	Argument	g -> title		3954399	0					
ANR	3954894	PtrMemberAccess	g -> title		3954399	0					
ANR	3954895	Identifier	g		3954399	0					
ANR	3954896	Identifier	title		3954399	1					
ANR	3954897	IfStatement	if ( len > INT_MAX )		3954399	1					
ANR	3954898	Condition	len > INT_MAX	2652:7:66765:66777	3954399	0	True				
ANR	3954899	RelationalExpression	len > INT_MAX		3954399	0		>			
ANR	3954900	Identifier	len		3954399	0					
ANR	3954901	Identifier	INT_MAX		3954399	1					
ANR	3954902	CompoundStatement		86:22:1698:1698	3954399	1					
ANR	3954903	ExpressionStatement	g -> w = INT_MAX	2653:4:66786:66800	3954399	0	True				
ANR	3954904	AssignmentExpression	g -> w = INT_MAX		3954399	0		=			
ANR	3954905	PtrMemberAccess	g -> w		3954399	0					
ANR	3954906	Identifier	g		3954399	0					
ANR	3954907	Identifier	w		3954399	1					
ANR	3954908	Identifier	INT_MAX		3954399	1					
ANR	3954909	IfStatement	if ( ( int ) len > g -> w )		3954399	2					
ANR	3954910	Condition	( int ) len > g -> w	2655:7:66814:66829	3954399	0	True				
ANR	3954911	RelationalExpression	( int ) len > g -> w		3954399	0		>			
ANR	3954912	CastExpression	( int ) len		3954399	0					
ANR	3954913	CastTarget	int		3954399	0					
ANR	3954914	Identifier	len		3954399	1					
ANR	3954915	PtrMemberAccess	g -> w		3954399	1					
ANR	3954916	Identifier	g		3954399	0					
ANR	3954917	Identifier	w		3954399	1					
ANR	3954918	CompoundStatement		89:25:1750:1750	3954399	1					
ANR	3954919	ExpressionStatement	g -> w = len	2656:4:66838:66848	3954399	0	True				
ANR	3954920	AssignmentExpression	g -> w = len		3954399	0		=			
ANR	3954921	PtrMemberAccess	g -> w		3954399	0					
ANR	3954922	Identifier	g		3954399	0					
ANR	3954923	Identifier	w		3954399	1					
ANR	3954924	Identifier	len		3954399	1					
ANR	3954925	ExpressionStatement	g -> h = max_y - g -> y	2659:2:66861:66880	3954399	2	True				
ANR	3954926	AssignmentExpression	g -> h = max_y - g -> y		3954399	0		=			
ANR	3954927	PtrMemberAccess	g -> h		3954399	0					
ANR	3954928	Identifier	g		3954399	0					
ANR	3954929	Identifier	h		3954399	1					
ANR	3954930	AdditiveExpression	max_y - g -> y		3954399	1		-			
ANR	3954931	Identifier	max_y		3954399	0					
ANR	3954932	PtrMemberAccess	g -> y		3954399	1					
ANR	3954933	Identifier	g		3954399	0					
ANR	3954934	Identifier	y		3954399	1					
ANR	3954935	ElseStatement	else		3954399	0					
ANR	3954936	CompoundStatement		94:8:1808:1808	3954399	0					
ANR	3954937	ExpressionStatement	g -> x = g -> y = 0	2661:2:66894:66909	3954399	0	True				
ANR	3954938	AssignmentExpression	g -> x = g -> y = 0		3954399	0		=			
ANR	3954939	PtrMemberAccess	g -> x		3954399	0					
ANR	3954940	Identifier	g		3954399	0					
ANR	3954941	Identifier	x		3954399	1					
ANR	3954942	AssignmentExpression	g -> y = 0		3954399	1		=			
ANR	3954943	PtrMemberAccess	g -> y		3954399	0					
ANR	3954944	Identifier	g		3954399	0					
ANR	3954945	Identifier	y		3954399	1					
ANR	3954946	PrimaryExpression	0		3954399	1					
ANR	3954947	ExpressionStatement	g -> w = g -> h = 0	2662:2:66913:66928	3954399	1	True				
ANR	3954948	AssignmentExpression	g -> w = g -> h = 0		3954399	0		=			
ANR	3954949	PtrMemberAccess	g -> w		3954399	0					
ANR	3954950	Identifier	g		3954399	0					
ANR	3954951	Identifier	w		3954399	1					
ANR	3954952	AssignmentExpression	g -> h = 0		3954399	1		=			
ANR	3954953	PtrMemberAccess	g -> h		3954399	0					
ANR	3954954	Identifier	g		3954399	0					
ANR	3954955	Identifier	h		3954399	1					
ANR	3954956	PrimaryExpression	0		3954399	1					
ANR	3954957	ExpressionStatement	"sdb_num_set ( g -> db , ""agraph.w"" , g -> w , 0 )"	2665:1:66935:66975	3954399	39	True				
ANR	3954958	CallExpression	"sdb_num_set ( g -> db , ""agraph.w"" , g -> w , 0 )"		3954399	0					
ANR	3954959	Callee	sdb_num_set		3954399	0					
ANR	3954960	Identifier	sdb_num_set		3954399	0					
ANR	3954961	ArgumentList	g -> db		3954399	1					
ANR	3954962	Argument	g -> db		3954399	0					
ANR	3954963	PtrMemberAccess	g -> db		3954399	0					
ANR	3954964	Identifier	g		3954399	0					
ANR	3954965	Identifier	db		3954399	1					
ANR	3954966	Argument	"""agraph.w"""		3954399	1					
ANR	3954967	PrimaryExpression	"""agraph.w"""		3954399	0					
ANR	3954968	Argument	g -> w		3954399	2					
ANR	3954969	PtrMemberAccess	g -> w		3954399	0					
ANR	3954970	Identifier	g		3954399	0					
ANR	3954971	Identifier	w		3954399	1					
ANR	3954972	Argument	0		3954399	3					
ANR	3954973	PrimaryExpression	0		3954399	0					
ANR	3954974	ExpressionStatement	"sdb_num_set ( g -> db , ""agraph.h"" , g -> h , 0 )"	2666:1:66978:67018	3954399	40	True				
ANR	3954975	CallExpression	"sdb_num_set ( g -> db , ""agraph.h"" , g -> h , 0 )"		3954399	0					
ANR	3954976	Callee	sdb_num_set		3954399	0					
ANR	3954977	Identifier	sdb_num_set		3954399	0					
ANR	3954978	ArgumentList	g -> db		3954399	1					
ANR	3954979	Argument	g -> db		3954399	0					
ANR	3954980	PtrMemberAccess	g -> db		3954399	0					
ANR	3954981	Identifier	g		3954399	0					
ANR	3954982	Identifier	db		3954399	1					
ANR	3954983	Argument	"""agraph.h"""		3954399	1					
ANR	3954984	PrimaryExpression	"""agraph.h"""		3954399	0					
ANR	3954985	Argument	g -> h		3954399	2					
ANR	3954986	PtrMemberAccess	g -> h		3954399	0					
ANR	3954987	Identifier	g		3954399	0					
ANR	3954988	Identifier	h		3954399	1					
ANR	3954989	Argument	0		3954399	3					
ANR	3954990	PrimaryExpression	0		3954399	0					
ANR	3954991	ExpressionStatement	delta_x = g -> x < 0 ? - g -> x : 0	2669:1:67138:67166	3954399	41	True				
ANR	3954992	AssignmentExpression	delta_x = g -> x < 0 ? - g -> x : 0		3954399	0		=			
ANR	3954993	Identifier	delta_x		3954399	0					
ANR	3954994	ConditionalExpression	g -> x < 0 ? - g -> x : 0		3954399	1					
ANR	3954995	Condition	g -> x < 0		3954399	0					
ANR	3954996	RelationalExpression	g -> x < 0		3954399	0		<			
ANR	3954997	PtrMemberAccess	g -> x		3954399	0					
ANR	3954998	Identifier	g		3954399	0					
ANR	3954999	Identifier	x		3954399	1					
ANR	3955000	PrimaryExpression	0		3954399	1					
ANR	3955001	UnaryOperationExpression	- g -> x		3954399	1					
ANR	3955002	UnaryOperator	-		3954399	0					
ANR	3955003	PtrMemberAccess	g -> x		3954399	1					
ANR	3955004	Identifier	g		3954399	0					
ANR	3955005	Identifier	x		3954399	1					
ANR	3955006	PrimaryExpression	0		3954399	2					
ANR	3955007	ExpressionStatement	delta_y = g -> y < 0 ? - g -> y : 0	2670:1:67169:67197	3954399	42	True				
ANR	3955008	AssignmentExpression	delta_y = g -> y < 0 ? - g -> y : 0		3954399	0		=			
ANR	3955009	Identifier	delta_y		3954399	0					
ANR	3955010	ConditionalExpression	g -> y < 0 ? - g -> y : 0		3954399	1					
ANR	3955011	Condition	g -> y < 0		3954399	0					
ANR	3955012	RelationalExpression	g -> y < 0		3954399	0		<			
ANR	3955013	PtrMemberAccess	g -> y		3954399	0					
ANR	3955014	Identifier	g		3954399	0					
ANR	3955015	Identifier	y		3954399	1					
ANR	3955016	PrimaryExpression	0		3954399	1					
ANR	3955017	UnaryOperationExpression	- g -> y		3954399	1					
ANR	3955018	UnaryOperator	-		3954399	0					
ANR	3955019	PtrMemberAccess	g -> y		3954399	1					
ANR	3955020	Identifier	g		3954399	0					
ANR	3955021	Identifier	y		3954399	1					
ANR	3955022	PrimaryExpression	0		3954399	2					
ANR	3955023	ExpressionStatement	"sdb_num_set ( g -> db , ""agraph.delta_x"" , delta_x , 0 )"	2671:1:67200:67249	3954399	43	True				
ANR	3955024	CallExpression	"sdb_num_set ( g -> db , ""agraph.delta_x"" , delta_x , 0 )"		3954399	0					
ANR	3955025	Callee	sdb_num_set		3954399	0					
ANR	3955026	Identifier	sdb_num_set		3954399	0					
ANR	3955027	ArgumentList	g -> db		3954399	1					
ANR	3955028	Argument	g -> db		3954399	0					
ANR	3955029	PtrMemberAccess	g -> db		3954399	0					
ANR	3955030	Identifier	g		3954399	0					
ANR	3955031	Identifier	db		3954399	1					
ANR	3955032	Argument	"""agraph.delta_x"""		3954399	1					
ANR	3955033	PrimaryExpression	"""agraph.delta_x"""		3954399	0					
ANR	3955034	Argument	delta_x		3954399	2					
ANR	3955035	Identifier	delta_x		3954399	0					
ANR	3955036	Argument	0		3954399	3					
ANR	3955037	PrimaryExpression	0		3954399	0					
ANR	3955038	ExpressionStatement	"sdb_num_set ( g -> db , ""agraph.delta_y"" , delta_y , 0 )"	2672:1:67252:67301	3954399	44	True				
ANR	3955039	CallExpression	"sdb_num_set ( g -> db , ""agraph.delta_y"" , delta_y , 0 )"		3954399	0					
ANR	3955040	Callee	sdb_num_set		3954399	0					
ANR	3955041	Identifier	sdb_num_set		3954399	0					
ANR	3955042	ArgumentList	g -> db		3954399	1					
ANR	3955043	Argument	g -> db		3954399	0					
ANR	3955044	PtrMemberAccess	g -> db		3954399	0					
ANR	3955045	Identifier	g		3954399	0					
ANR	3955046	Identifier	db		3954399	1					
ANR	3955047	Argument	"""agraph.delta_y"""		3954399	1					
ANR	3955048	PrimaryExpression	"""agraph.delta_y"""		3954399	0					
ANR	3955049	Argument	delta_y		3954399	2					
ANR	3955050	Identifier	delta_y		3954399	0					
ANR	3955051	Argument	0		3954399	3					
ANR	3955052	PrimaryExpression	0		3954399	0					
ANR	3955053	ReturnType	static void		3954399	1					
ANR	3955054	Identifier	update_graph_sizes		3954399	2					
ANR	3955055	ParameterList	RAGraph * g		3954399	3					
ANR	3955056	Parameter	RAGraph * g	2567:31:65069:65078	3954399	0	True				
ANR	3955057	ParameterType	RAGraph *		3954399	0					
ANR	3955058	Identifier	g		3954399	1					
ANR	3955059	CFGEntryNode	ENTRY		3954399		True				
ANR	3955060	CFGExitNode	EXIT		3954399		True				
ANR	3955061	CFGErrorNode	ERROR		3954399		True				
ANR	3955062	Symbol	vv		3954399						
ANR	3955063	Symbol	delta_x		3954399						
ANR	3955064	Symbol	delta_y		3954399						
ANR	3955065	Symbol	ak -> h		3954399						
ANR	3955066	Symbol	r_graph_get_neighbours		3954399						
ANR	3955067	Symbol	g -> db		3954399						
ANR	3955068	Symbol	g -> h		3954399						
ANR	3955069	Symbol	INT_MIN		3954399						
ANR	3955070	Symbol	neigh		3954399						
ANR	3955071	Symbol	min_gn		3954399						
ANR	3955072	Symbol	r_graph_innodes		3954399						
ANR	3955073	Symbol	strlen		3954399						
ANR	3955074	Symbol	r_cons_is_breaked		3954399						
ANR	3955075	Symbol	len		3954399						
ANR	3955076	Symbol	ak -> x		3954399						
ANR	3955077	Symbol	g -> graph		3954399						
ANR	3955078	Symbol	ak -> w		3954399						
ANR	3955079	Symbol	INT_MAX		3954399						
ANR	3955080	Symbol	* min_gn		3954399						
ANR	3955081	Symbol	g -> title		3954399						
ANR	3955082	Symbol	NULL		3954399						
ANR	3955083	Symbol	gk		3954399						
ANR	3955084	Symbol	e		3954399						
ANR	3955085	Symbol	g		3954399						
ANR	3955086	Symbol	min_gn -> gnode		3954399						
ANR	3955087	Symbol	kt		3954399						
ANR	3955088	Symbol	ak		3954399						
ANR	3955089	Symbol	it		3954399						
ANR	3955090	Symbol	ak -> y		3954399						
ANR	3955091	Symbol	max_gn		3954399						
ANR	3955092	Symbol	max_x		3954399						
ANR	3955093	Symbol	* g		3954399						
ANR	3955094	Symbol	max_y		3954399						
ANR	3955095	Symbol	* ak		3954399						
ANR	3955096	Symbol	nd		3954399						
ANR	3955097	Symbol	v		3954399						
ANR	3955098	Symbol	g -> y		3954399						
ANR	3955099	Symbol	g -> x		3954399						
ANR	3955100	Symbol	g -> w		3954399						
ANR	3955101	Symbol	r_list_length		3954399						
ANR	3955102	Function	r_agraph_set_curnode	2675:0:67306:67571							
ANR	3955103	FunctionDef	"r_agraph_set_curnode (RAGraph * g , RANode * a)"		3955102	0					
ANR	3955104	CompoundStatement		2675:55:67361:67571	3955102	0					
ANR	3955105	IfStatement	if ( ! a )		3955102	0					
ANR	3955106	Condition	! a	2676:5:67368:67369	3955102	0	True				
ANR	3955107	UnaryOperationExpression	! a		3955102	0					
ANR	3955108	UnaryOperator	!		3955102	0					
ANR	3955109	Identifier	a		3955102	1					
ANR	3955110	CompoundStatement		2:9:10:10	3955102	1					
ANR	3955111	ReturnStatement	return ;	2677:2:67376:67382	3955102	0	True				
ANR	3955112	ExpressionStatement	g -> curnode = a -> gnode	2679:1:67388:67409	3955102	1	True				
ANR	3955113	AssignmentExpression	g -> curnode = a -> gnode		3955102	0		=			
ANR	3955114	PtrMemberAccess	g -> curnode		3955102	0					
ANR	3955115	Identifier	g		3955102	0					
ANR	3955116	Identifier	curnode		3955102	1					
ANR	3955117	PtrMemberAccess	a -> gnode		3955102	1					
ANR	3955118	Identifier	a		3955102	0					
ANR	3955119	Identifier	gnode		3955102	1					
ANR	3955120	IfStatement	if ( a -> title )		3955102	2					
ANR	3955121	Condition	a -> title	2680:5:67416:67423	3955102	0	True				
ANR	3955122	PtrMemberAccess	a -> title		3955102	0					
ANR	3955123	Identifier	a		3955102	0					
ANR	3955124	Identifier	title		3955102	1					
ANR	3955125	CompoundStatement		6:15:64:64	3955102	1					
ANR	3955126	ExpressionStatement	"sdb_set ( g -> db , ""agraph.curnode"" , a -> title , 0 )"	2681:2:67430:67476	3955102	0	True				
ANR	3955127	CallExpression	"sdb_set ( g -> db , ""agraph.curnode"" , a -> title , 0 )"		3955102	0					
ANR	3955128	Callee	sdb_set		3955102	0					
ANR	3955129	Identifier	sdb_set		3955102	0					
ANR	3955130	ArgumentList	g -> db		3955102	1					
ANR	3955131	Argument	g -> db		3955102	0					
ANR	3955132	PtrMemberAccess	g -> db		3955102	0					
ANR	3955133	Identifier	g		3955102	0					
ANR	3955134	Identifier	db		3955102	1					
ANR	3955135	Argument	"""agraph.curnode"""		3955102	1					
ANR	3955136	PrimaryExpression	"""agraph.curnode"""		3955102	0					
ANR	3955137	Argument	a -> title		3955102	2					
ANR	3955138	PtrMemberAccess	a -> title		3955102	0					
ANR	3955139	Identifier	a		3955102	0					
ANR	3955140	Identifier	title		3955102	1					
ANR	3955141	Argument	0		3955102	3					
ANR	3955142	PrimaryExpression	0		3955102	0					
ANR	3955143	IfStatement	if ( g -> on_curnode_change )		3955102	1					
ANR	3955144	Condition	g -> on_curnode_change	2682:6:67484:67503	3955102	0	True				
ANR	3955145	PtrMemberAccess	g -> on_curnode_change		3955102	0					
ANR	3955146	Identifier	g		3955102	0					
ANR	3955147	Identifier	on_curnode_change		3955102	1					
ANR	3955148	CompoundStatement		8:28:144:144	3955102	1					
ANR	3955149	ExpressionStatement	"g -> on_curnode_change ( a , g -> on_curnode_change_data )"	2683:3:67511:67562	3955102	0	True				
ANR	3955150	CallExpression	"g -> on_curnode_change ( a , g -> on_curnode_change_data )"		3955102	0					
ANR	3955151	Callee	g -> on_curnode_change		3955102	0					
ANR	3955152	PtrMemberAccess	g -> on_curnode_change		3955102	0					
ANR	3955153	Identifier	g		3955102	0					
ANR	3955154	Identifier	on_curnode_change		3955102	1					
ANR	3955155	ArgumentList	a		3955102	1					
ANR	3955156	Argument	a		3955102	0					
ANR	3955157	Identifier	a		3955102	0					
ANR	3955158	Argument	g -> on_curnode_change_data		3955102	1					
ANR	3955159	PtrMemberAccess	g -> on_curnode_change_data		3955102	0					
ANR	3955160	Identifier	g		3955102	0					
ANR	3955161	Identifier	on_curnode_change_data		3955102	1					
ANR	3955162	ReturnType	R_API void		3955102	1					
ANR	3955163	Identifier	r_agraph_set_curnode		3955102	2					
ANR	3955164	ParameterList	"RAGraph * g , RANode * a"		3955102	3					
ANR	3955165	Parameter	RAGraph * g	2675:32:67338:67347	3955102	0	True				
ANR	3955166	ParameterType	RAGraph *		3955102	0					
ANR	3955167	Identifier	g		3955102	1					
ANR	3955168	Parameter	RANode * a	2675:44:67350:67358	3955102	1	True				
ANR	3955169	ParameterType	RANode *		3955102	0					
ANR	3955170	Identifier	a		3955102	1					
ANR	3955171	CFGEntryNode	ENTRY		3955102		True				
ANR	3955172	CFGExitNode	EXIT		3955102		True				
ANR	3955173	Symbol	a -> title		3955102						
ANR	3955174	Symbol	a		3955102						
ANR	3955175	Symbol	* g		3955102						
ANR	3955176	Symbol	g		3955102						
ANR	3955177	Symbol	g -> curnode		3955102						
ANR	3955178	Symbol	g -> db		3955102						
ANR	3955179	Symbol	a -> gnode		3955102						
ANR	3955180	Symbol	* a		3955102						
ANR	3955181	Symbol	g -> on_curnode_change_data		3955102						
ANR	3955182	Symbol	g -> on_curnode_change		3955102						
ANR	3955183	Function	rebase	2688:0:67574:67646							
ANR	3955184	FunctionDef	"rebase (RAGraph * g , int v)"		3955183	0					
ANR	3955185	CompoundStatement		2688:38:67612:67646	3955183	0					
ANR	3955186	ReturnStatement	return g -> x < 0 ? - g -> x + v : v ;	2689:1:67615:67644	3955183	0	True				
ANR	3955187	ConditionalExpression	g -> x < 0 ? - g -> x + v : v		3955183	0					
ANR	3955188	Condition	g -> x < 0		3955183	0					
ANR	3955189	RelationalExpression	g -> x < 0		3955183	0		<			
ANR	3955190	PtrMemberAccess	g -> x		3955183	0					
ANR	3955191	Identifier	g		3955183	0					
ANR	3955192	Identifier	x		3955183	1					
ANR	3955193	PrimaryExpression	0		3955183	1					
ANR	3955194	AdditiveExpression	- g -> x + v		3955183	1		+			
ANR	3955195	UnaryOperationExpression	- g -> x		3955183	0					
ANR	3955196	UnaryOperator	-		3955183	0					
ANR	3955197	PtrMemberAccess	g -> x		3955183	1					
ANR	3955198	Identifier	g		3955183	0					
ANR	3955199	Identifier	x		3955183	1					
ANR	3955200	Identifier	v		3955183	1					
ANR	3955201	Identifier	v		3955183	2					
ANR	3955202	ReturnType	static ut64		3955183	1					
ANR	3955203	Identifier	rebase		3955183	2					
ANR	3955204	ParameterList	"RAGraph * g , int v"		3955183	3					
ANR	3955205	Parameter	RAGraph * g	2688:19:67593:67602	3955183	0	True				
ANR	3955206	ParameterType	RAGraph *		3955183	0					
ANR	3955207	Identifier	g		3955183	1					
ANR	3955208	Parameter	int v	2688:31:67605:67609	3955183	1	True				
ANR	3955209	ParameterType	int		3955183	0					
ANR	3955210	Identifier	v		3955183	1					
ANR	3955211	CFGEntryNode	ENTRY		3955183		True				
ANR	3955212	CFGExitNode	EXIT		3955183		True				
ANR	3955213	Symbol	* g		3955183						
ANR	3955214	Symbol	v		3955183						
ANR	3955215	Symbol	g		3955183						
ANR	3955216	Symbol	g -> x		3955183						
ANR	3955217	Function	agraph_set_layout	2692:0:67649:68255							
ANR	3955218	FunctionDef	agraph_set_layout (RAGraph * g)		3955217	0					
ANR	3955219	CompoundStatement		2692:42:67691:68255	3955217	0					
ANR	3955220	IdentifierDeclStatement	RListIter * it ;	2693:1:67694:67707	3955217	0	True				
ANR	3955221	IdentifierDecl	* it		3955217	0					
ANR	3955222	IdentifierDeclType	RListIter *		3955217	0					
ANR	3955223	Identifier	it		3955217	1					
ANR	3955224	IdentifierDeclStatement	RGraphNode * n ;	2694:1:67710:67723	3955217	1	True				
ANR	3955225	IdentifierDecl	* n		3955217	0					
ANR	3955226	IdentifierDeclType	RGraphNode *		3955217	0					
ANR	3955227	Identifier	n		3955217	1					
ANR	3955228	IdentifierDeclStatement	RANode * a ;	2695:1:67726:67735	3955217	2	True				
ANR	3955229	IdentifierDecl	* a		3955217	0					
ANR	3955230	IdentifierDeclType	RANode *		3955217	0					
ANR	3955231	Identifier	a		3955217	1					
ANR	3955232	ExpressionStatement	set_layout ( g )	2697:1:67739:67753	3955217	3	True				
ANR	3955233	CallExpression	set_layout ( g )		3955217	0					
ANR	3955234	Callee	set_layout		3955217	0					
ANR	3955235	Identifier	set_layout		3955217	0					
ANR	3955236	ArgumentList	g		3955217	1					
ANR	3955237	Argument	g		3955217	0					
ANR	3955238	Identifier	g		3955217	0					
ANR	3955239	ExpressionStatement	update_graph_sizes ( g )	2699:1:67757:67779	3955217	4	True				
ANR	3955240	CallExpression	update_graph_sizes ( g )		3955217	0					
ANR	3955241	Callee	update_graph_sizes		3955217	0					
ANR	3955242	Identifier	update_graph_sizes		3955217	0					
ANR	3955243	ArgumentList	g		3955217	1					
ANR	3955244	Argument	g		3955217	0					
ANR	3955245	Identifier	g		3955217	0					
ANR	3955246	Statement	graph_foreach_anode	2700:1:67782:67800	3955217	5	True				
ANR	3955247	Statement	(	2700:21:67802:67802	3955217	6	True				
ANR	3955248	Statement	r_graph_get_nodes	2700:22:67803:67819	3955217	7	True				
ANR	3955249	Statement	(	2700:40:67821:67821	3955217	8	True				
ANR	3955250	Statement	g	2700:41:67822:67822	3955217	9	True				
ANR	3955251	Statement	->	2700:42:67823:67824	3955217	10	True				
ANR	3955252	Statement	graph	2700:44:67825:67829	3955217	11	True				
ANR	3955253	Statement	)	2700:49:67830:67830	3955217	12	True				
ANR	3955254	Statement	","	2700:50:67831:67831	3955217	13	True				
ANR	3955255	Statement	it	2700:52:67833:67834	3955217	14	True				
ANR	3955256	Statement	","	2700:54:67835:67835	3955217	15	True				
ANR	3955257	Statement	n	2700:56:67837:67837	3955217	16	True				
ANR	3955258	Statement	","	2700:57:67838:67838	3955217	17	True				
ANR	3955259	Statement	a	2700:59:67840:67840	3955217	18	True				
ANR	3955260	Statement	)	2700:60:67841:67841	3955217	19	True				
ANR	3955261	CompoundStatement		13:2:193:206	3955217	20					
ANR	3955262	IfStatement	if ( a -> is_dummy )		3955217	0					
ANR	3955263	Condition	a -> is_dummy	2701:6:67851:67861	3955217	0	True				
ANR	3955264	PtrMemberAccess	a -> is_dummy		3955217	0					
ANR	3955265	Identifier	a		3955217	0					
ANR	3955266	Identifier	is_dummy		3955217	1					
ANR	3955267	CompoundStatement		10:19:172:172	3955217	1					
ANR	3955268	ContinueStatement	continue ;	2702:3:67869:67877	3955217	0	True				
ANR	3955269	IdentifierDeclStatement	const char * k ;	2704:2:67885:67898	3955217	1	True				
ANR	3955270	IdentifierDecl	* k		3955217	0					
ANR	3955271	IdentifierDeclType	const char *		3955217	0					
ANR	3955272	Identifier	k		3955217	1					
ANR	3955273	ExpressionStatement	"k = sdb_fmt ( ""agraph.nodes.%s.x"" , a -> title )"	2705:2:67902:67945	3955217	2	True				
ANR	3955274	AssignmentExpression	"k = sdb_fmt ( ""agraph.nodes.%s.x"" , a -> title )"		3955217	0		=			
ANR	3955275	Identifier	k		3955217	0					
ANR	3955276	CallExpression	"sdb_fmt ( ""agraph.nodes.%s.x"" , a -> title )"		3955217	1					
ANR	3955277	Callee	sdb_fmt		3955217	0					
ANR	3955278	Identifier	sdb_fmt		3955217	0					
ANR	3955279	ArgumentList	"""agraph.nodes.%s.x"""		3955217	1					
ANR	3955280	Argument	"""agraph.nodes.%s.x"""		3955217	0					
ANR	3955281	PrimaryExpression	"""agraph.nodes.%s.x"""		3955217	0					
ANR	3955282	Argument	a -> title		3955217	1					
ANR	3955283	PtrMemberAccess	a -> title		3955217	0					
ANR	3955284	Identifier	a		3955217	0					
ANR	3955285	Identifier	title		3955217	1					
ANR	3955286	ExpressionStatement	"sdb_num_set ( g -> db , k , rebase ( g , a -> x ) , 0 )"	2706:2:67949:67992	3955217	3	True				
ANR	3955287	CallExpression	"sdb_num_set ( g -> db , k , rebase ( g , a -> x ) , 0 )"		3955217	0					
ANR	3955288	Callee	sdb_num_set		3955217	0					
ANR	3955289	Identifier	sdb_num_set		3955217	0					
ANR	3955290	ArgumentList	g -> db		3955217	1					
ANR	3955291	Argument	g -> db		3955217	0					
ANR	3955292	PtrMemberAccess	g -> db		3955217	0					
ANR	3955293	Identifier	g		3955217	0					
ANR	3955294	Identifier	db		3955217	1					
ANR	3955295	Argument	k		3955217	1					
ANR	3955296	Identifier	k		3955217	0					
ANR	3955297	Argument	"rebase ( g , a -> x )"		3955217	2					
ANR	3955298	CallExpression	"rebase ( g , a -> x )"		3955217	0					
ANR	3955299	Callee	rebase		3955217	0					
ANR	3955300	Identifier	rebase		3955217	0					
ANR	3955301	ArgumentList	g		3955217	1					
ANR	3955302	Argument	g		3955217	0					
ANR	3955303	Identifier	g		3955217	0					
ANR	3955304	Argument	a -> x		3955217	1					
ANR	3955305	PtrMemberAccess	a -> x		3955217	0					
ANR	3955306	Identifier	a		3955217	0					
ANR	3955307	Identifier	x		3955217	1					
ANR	3955308	Argument	0		3955217	3					
ANR	3955309	PrimaryExpression	0		3955217	0					
ANR	3955310	ExpressionStatement	"k = sdb_fmt ( ""agraph.nodes.%s.y"" , a -> title )"	2707:2:67996:68039	3955217	4	True				
ANR	3955311	AssignmentExpression	"k = sdb_fmt ( ""agraph.nodes.%s.y"" , a -> title )"		3955217	0		=			
ANR	3955312	Identifier	k		3955217	0					
ANR	3955313	CallExpression	"sdb_fmt ( ""agraph.nodes.%s.y"" , a -> title )"		3955217	1					
ANR	3955314	Callee	sdb_fmt		3955217	0					
ANR	3955315	Identifier	sdb_fmt		3955217	0					
ANR	3955316	ArgumentList	"""agraph.nodes.%s.y"""		3955217	1					
ANR	3955317	Argument	"""agraph.nodes.%s.y"""		3955217	0					
ANR	3955318	PrimaryExpression	"""agraph.nodes.%s.y"""		3955217	0					
ANR	3955319	Argument	a -> title		3955217	1					
ANR	3955320	PtrMemberAccess	a -> title		3955217	0					
ANR	3955321	Identifier	a		3955217	0					
ANR	3955322	Identifier	title		3955217	1					
ANR	3955323	ExpressionStatement	"sdb_num_set ( g -> db , k , rebase ( g , a -> y ) , 0 )"	2708:2:68043:68086	3955217	5	True				
ANR	3955324	CallExpression	"sdb_num_set ( g -> db , k , rebase ( g , a -> y ) , 0 )"		3955217	0					
ANR	3955325	Callee	sdb_num_set		3955217	0					
ANR	3955326	Identifier	sdb_num_set		3955217	0					
ANR	3955327	ArgumentList	g -> db		3955217	1					
ANR	3955328	Argument	g -> db		3955217	0					
ANR	3955329	PtrMemberAccess	g -> db		3955217	0					
ANR	3955330	Identifier	g		3955217	0					
ANR	3955331	Identifier	db		3955217	1					
ANR	3955332	Argument	k		3955217	1					
ANR	3955333	Identifier	k		3955217	0					
ANR	3955334	Argument	"rebase ( g , a -> y )"		3955217	2					
ANR	3955335	CallExpression	"rebase ( g , a -> y )"		3955217	0					
ANR	3955336	Callee	rebase		3955217	0					
ANR	3955337	Identifier	rebase		3955217	0					
ANR	3955338	ArgumentList	g		3955217	1					
ANR	3955339	Argument	g		3955217	0					
ANR	3955340	Identifier	g		3955217	0					
ANR	3955341	Argument	a -> y		3955217	1					
ANR	3955342	PtrMemberAccess	a -> y		3955217	0					
ANR	3955343	Identifier	a		3955217	0					
ANR	3955344	Identifier	y		3955217	1					
ANR	3955345	Argument	0		3955217	3					
ANR	3955346	PrimaryExpression	0		3955217	0					
ANR	3955347	ExpressionStatement	"k = sdb_fmt ( ""agraph.nodes.%s.w"" , a -> title )"	2709:2:68090:68133	3955217	6	True				
ANR	3955348	AssignmentExpression	"k = sdb_fmt ( ""agraph.nodes.%s.w"" , a -> title )"		3955217	0		=			
ANR	3955349	Identifier	k		3955217	0					
ANR	3955350	CallExpression	"sdb_fmt ( ""agraph.nodes.%s.w"" , a -> title )"		3955217	1					
ANR	3955351	Callee	sdb_fmt		3955217	0					
ANR	3955352	Identifier	sdb_fmt		3955217	0					
ANR	3955353	ArgumentList	"""agraph.nodes.%s.w"""		3955217	1					
ANR	3955354	Argument	"""agraph.nodes.%s.w"""		3955217	0					
ANR	3955355	PrimaryExpression	"""agraph.nodes.%s.w"""		3955217	0					
ANR	3955356	Argument	a -> title		3955217	1					
ANR	3955357	PtrMemberAccess	a -> title		3955217	0					
ANR	3955358	Identifier	a		3955217	0					
ANR	3955359	Identifier	title		3955217	1					
ANR	3955360	ExpressionStatement	"sdb_num_set ( g -> db , k , a -> w , 0 )"	2710:2:68137:68168	3955217	7	True				
ANR	3955361	CallExpression	"sdb_num_set ( g -> db , k , a -> w , 0 )"		3955217	0					
ANR	3955362	Callee	sdb_num_set		3955217	0					
ANR	3955363	Identifier	sdb_num_set		3955217	0					
ANR	3955364	ArgumentList	g -> db		3955217	1					
ANR	3955365	Argument	g -> db		3955217	0					
ANR	3955366	PtrMemberAccess	g -> db		3955217	0					
ANR	3955367	Identifier	g		3955217	0					
ANR	3955368	Identifier	db		3955217	1					
ANR	3955369	Argument	k		3955217	1					
ANR	3955370	Identifier	k		3955217	0					
ANR	3955371	Argument	a -> w		3955217	2					
ANR	3955372	PtrMemberAccess	a -> w		3955217	0					
ANR	3955373	Identifier	a		3955217	0					
ANR	3955374	Identifier	w		3955217	1					
ANR	3955375	Argument	0		3955217	3					
ANR	3955376	PrimaryExpression	0		3955217	0					
ANR	3955377	ExpressionStatement	"k = sdb_fmt ( ""agraph.nodes.%s.h"" , a -> title )"	2711:2:68172:68215	3955217	8	True				
ANR	3955378	AssignmentExpression	"k = sdb_fmt ( ""agraph.nodes.%s.h"" , a -> title )"		3955217	0		=			
ANR	3955379	Identifier	k		3955217	0					
ANR	3955380	CallExpression	"sdb_fmt ( ""agraph.nodes.%s.h"" , a -> title )"		3955217	1					
ANR	3955381	Callee	sdb_fmt		3955217	0					
ANR	3955382	Identifier	sdb_fmt		3955217	0					
ANR	3955383	ArgumentList	"""agraph.nodes.%s.h"""		3955217	1					
ANR	3955384	Argument	"""agraph.nodes.%s.h"""		3955217	0					
ANR	3955385	PrimaryExpression	"""agraph.nodes.%s.h"""		3955217	0					
ANR	3955386	Argument	a -> title		3955217	1					
ANR	3955387	PtrMemberAccess	a -> title		3955217	0					
ANR	3955388	Identifier	a		3955217	0					
ANR	3955389	Identifier	title		3955217	1					
ANR	3955390	ExpressionStatement	"sdb_num_set ( g -> db , k , a -> h , 0 )"	2712:2:68219:68250	3955217	9	True				
ANR	3955391	CallExpression	"sdb_num_set ( g -> db , k , a -> h , 0 )"		3955217	0					
ANR	3955392	Callee	sdb_num_set		3955217	0					
ANR	3955393	Identifier	sdb_num_set		3955217	0					
ANR	3955394	ArgumentList	g -> db		3955217	1					
ANR	3955395	Argument	g -> db		3955217	0					
ANR	3955396	PtrMemberAccess	g -> db		3955217	0					
ANR	3955397	Identifier	g		3955217	0					
ANR	3955398	Identifier	db		3955217	1					
ANR	3955399	Argument	k		3955217	1					
ANR	3955400	Identifier	k		3955217	0					
ANR	3955401	Argument	a -> h		3955217	2					
ANR	3955402	PtrMemberAccess	a -> h		3955217	0					
ANR	3955403	Identifier	a		3955217	0					
ANR	3955404	Identifier	h		3955217	1					
ANR	3955405	Argument	0		3955217	3					
ANR	3955406	PrimaryExpression	0		3955217	0					
ANR	3955407	ReturnType	static void		3955217	1					
ANR	3955408	Identifier	agraph_set_layout		3955217	2					
ANR	3955409	ParameterList	RAGraph * g		3955217	3					
ANR	3955410	Parameter	RAGraph * g	2692:30:67679:67688	3955217	0	True				
ANR	3955411	ParameterType	RAGraph *		3955217	0					
ANR	3955412	Identifier	g		3955217	1					
ANR	3955413	CFGEntryNode	ENTRY		3955217		True				
ANR	3955414	CFGExitNode	EXIT		3955217		True				
ANR	3955415	CFGErrorNode	ERROR		3955217		True				
ANR	3955416	Symbol	a -> title		3955217						
ANR	3955417	Symbol	a		3955217						
ANR	3955418	Symbol	rebase		3955217						
ANR	3955419	Symbol	a -> is_dummy		3955217						
ANR	3955420	Symbol	a -> h		3955217						
ANR	3955421	Symbol	g		3955217						
ANR	3955422	Symbol	g -> db		3955217						
ANR	3955423	Symbol	it		3955217						
ANR	3955424	Symbol	* a		3955217						
ANR	3955425	Symbol	k		3955217						
ANR	3955426	Symbol	n		3955217						
ANR	3955427	Symbol	* g		3955217						
ANR	3955428	Symbol	a -> x		3955217						
ANR	3955429	Symbol	a -> y		3955217						
ANR	3955430	Symbol	a -> w		3955217						
ANR	3955431	Symbol	sdb_fmt		3955217						
ANR	3955432	Function	agraph_update_seek	2717:0:68322:68444							
ANR	3955433	FunctionDef	"agraph_update_seek (RAGraph * g , RANode * n , int force)"		3955432	0					
ANR	3955434	CompoundStatement		2717:65:68387:68444	3955432	0					
ANR	3955435	ExpressionStatement	g -> update_seek_on = n	2718:1:68390:68411	3955432	0	True				
ANR	3955436	AssignmentExpression	g -> update_seek_on = n		3955432	0		=			
ANR	3955437	PtrMemberAccess	g -> update_seek_on		3955432	0					
ANR	3955438	Identifier	g		3955432	0					
ANR	3955439	Identifier	update_seek_on		3955432	1					
ANR	3955440	Identifier	n		3955432	1					
ANR	3955441	ExpressionStatement	g -> force_update_seek = force	2719:1:68414:68442	3955432	1	True				
ANR	3955442	AssignmentExpression	g -> force_update_seek = force		3955432	0		=			
ANR	3955443	PtrMemberAccess	g -> force_update_seek		3955432	0					
ANR	3955444	Identifier	g		3955432	0					
ANR	3955445	Identifier	force_update_seek		3955432	1					
ANR	3955446	Identifier	force		3955432	1					
ANR	3955447	ReturnType	static void		3955432	1					
ANR	3955448	Identifier	agraph_update_seek		3955432	2					
ANR	3955449	ParameterList	"RAGraph * g , RANode * n , int force"		3955432	3					
ANR	3955450	Parameter	RAGraph * g	2717:31:68353:68362	3955432	0	True				
ANR	3955451	ParameterType	RAGraph *		3955432	0					
ANR	3955452	Identifier	g		3955432	1					
ANR	3955453	Parameter	RANode * n	2717:43:68365:68373	3955432	1	True				
ANR	3955454	ParameterType	RANode *		3955432	0					
ANR	3955455	Identifier	n		3955432	1					
ANR	3955456	Parameter	int force	2717:54:68376:68384	3955432	2	True				
ANR	3955457	ParameterType	int		3955432	0					
ANR	3955458	Identifier	force		3955432	1					
ANR	3955459	CFGEntryNode	ENTRY		3955432		True				
ANR	3955460	CFGExitNode	EXIT		3955432		True				
ANR	3955461	Symbol	* g		3955432						
ANR	3955462	Symbol	g -> force_update_seek		3955432						
ANR	3955463	Symbol	g		3955432						
ANR	3955464	Symbol	g -> update_seek_on		3955432						
ANR	3955465	Symbol	force		3955432						
ANR	3955466	Symbol	n		3955432						
ANR	3955467	Function	agraph_print_node	2722:0:68447:68812							
ANR	3955468	FunctionDef	"agraph_print_node (const RAGraph * g , RANode * n)"		3955467	0					
ANR	3955469	CompoundStatement		2722:59:68506:68812	3955467	0					
ANR	3955470	IfStatement	if ( n -> is_dummy )		3955467	0					
ANR	3955471	Condition	n -> is_dummy	2723:5:68513:68523	3955467	0	True				
ANR	3955472	PtrMemberAccess	n -> is_dummy		3955467	0					
ANR	3955473	Identifier	n		3955467	0					
ANR	3955474	Identifier	is_dummy		3955467	1					
ANR	3955475	CompoundStatement		2:18:19:19	3955467	1					
ANR	3955476	ReturnStatement	return ;	2724:2:68530:68536	3955467	0	True				
ANR	3955477	IdentifierDeclStatement	const int cur = g -> curnode && get_anode ( g -> curnode ) == n ;	2726:1:68542:68599	3955467	1	True				
ANR	3955478	IdentifierDecl	cur = g -> curnode && get_anode ( g -> curnode ) == n		3955467	0					
ANR	3955479	IdentifierDeclType	const int		3955467	0					
ANR	3955480	Identifier	cur		3955467	1					
ANR	3955481	AssignmentExpression	cur = g -> curnode && get_anode ( g -> curnode ) == n		3955467	2		=			
ANR	3955482	Identifier	cur		3955467	0					
ANR	3955483	AndExpression	g -> curnode && get_anode ( g -> curnode ) == n		3955467	1		&&			
ANR	3955484	PtrMemberAccess	g -> curnode		3955467	0					
ANR	3955485	Identifier	g		3955467	0					
ANR	3955486	Identifier	curnode		3955467	1					
ANR	3955487	EqualityExpression	get_anode ( g -> curnode ) == n		3955467	1		==			
ANR	3955488	CallExpression	get_anode ( g -> curnode )		3955467	0					
ANR	3955489	Callee	get_anode		3955467	0					
ANR	3955490	Identifier	get_anode		3955467	0					
ANR	3955491	ArgumentList	g -> curnode		3955467	1					
ANR	3955492	Argument	g -> curnode		3955467	0					
ANR	3955493	PtrMemberAccess	g -> curnode		3955467	0					
ANR	3955494	Identifier	g		3955467	0					
ANR	3955495	Identifier	curnode		3955467	1					
ANR	3955496	Identifier	n		3955467	1					
ANR	3955497	IdentifierDeclStatement	const bool isMini = is_mini ( g ) ;	2727:1:68602:68633	3955467	2	True				
ANR	3955498	IdentifierDecl	isMini = is_mini ( g )		3955467	0					
ANR	3955499	IdentifierDeclType	const bool		3955467	0					
ANR	3955500	Identifier	isMini		3955467	1					
ANR	3955501	AssignmentExpression	isMini = is_mini ( g )		3955467	2		=			
ANR	3955502	Identifier	isMini		3955467	0					
ANR	3955503	CallExpression	is_mini ( g )		3955467	1					
ANR	3955504	Callee	is_mini		3955467	0					
ANR	3955505	Identifier	is_mini		3955467	0					
ANR	3955506	ArgumentList	g		3955467	1					
ANR	3955507	Argument	g		3955467	0					
ANR	3955508	Identifier	g		3955467	0					
ANR	3955509	IfStatement	if ( g -> is_tiny )		3955467	3					
ANR	3955510	Condition	g -> is_tiny	2728:5:68640:68649	3955467	0	True				
ANR	3955511	PtrMemberAccess	g -> is_tiny		3955467	0					
ANR	3955512	Identifier	g		3955467	0					
ANR	3955513	Identifier	is_tiny		3955467	1					
ANR	3955514	CompoundStatement		7:17:145:145	3955467	1					
ANR	3955515	ExpressionStatement	"tiny_RANode_print ( g , n , cur )"	2729:2:68656:68685	3955467	0	True				
ANR	3955516	CallExpression	"tiny_RANode_print ( g , n , cur )"		3955467	0					
ANR	3955517	Callee	tiny_RANode_print		3955467	0					
ANR	3955518	Identifier	tiny_RANode_print		3955467	0					
ANR	3955519	ArgumentList	g		3955467	1					
ANR	3955520	Argument	g		3955467	0					
ANR	3955521	Identifier	g		3955467	0					
ANR	3955522	Argument	n		3955467	1					
ANR	3955523	Identifier	n		3955467	0					
ANR	3955524	Argument	cur		3955467	2					
ANR	3955525	Identifier	cur		3955467	0					
ANR	3955526	ElseStatement	else		3955467	0					
ANR	3955527	IfStatement	if ( isMini || n -> is_mini )		3955467	0					
ANR	3955528	Condition	isMini || n -> is_mini	2730:12:68699:68718	3955467	0	True				
ANR	3955529	OrExpression	isMini || n -> is_mini		3955467	0		||			
ANR	3955530	Identifier	isMini		3955467	0					
ANR	3955531	PtrMemberAccess	n -> is_mini		3955467	1					
ANR	3955532	Identifier	n		3955467	0					
ANR	3955533	Identifier	is_mini		3955467	1					
ANR	3955534	CompoundStatement		9:34:214:214	3955467	1					
ANR	3955535	ExpressionStatement	"mini_RANode_print ( g , n , cur , isMini )"	2731:2:68725:68762	3955467	0	True				
ANR	3955536	CallExpression	"mini_RANode_print ( g , n , cur , isMini )"		3955467	0					
ANR	3955537	Callee	mini_RANode_print		3955467	0					
ANR	3955538	Identifier	mini_RANode_print		3955467	0					
ANR	3955539	ArgumentList	g		3955467	1					
ANR	3955540	Argument	g		3955467	0					
ANR	3955541	Identifier	g		3955467	0					
ANR	3955542	Argument	n		3955467	1					
ANR	3955543	Identifier	n		3955467	0					
ANR	3955544	Argument	cur		3955467	2					
ANR	3955545	Identifier	cur		3955467	0					
ANR	3955546	Argument	isMini		3955467	3					
ANR	3955547	Identifier	isMini		3955467	0					
ANR	3955548	ElseStatement	else		3955467	0					
ANR	3955549	CompoundStatement		11:8:265:265	3955467	0					
ANR	3955550	ExpressionStatement	"normal_RANode_print ( g , n , cur )"	2733:2:68776:68807	3955467	0	True				
ANR	3955551	CallExpression	"normal_RANode_print ( g , n , cur )"		3955467	0					
ANR	3955552	Callee	normal_RANode_print		3955467	0					
ANR	3955553	Identifier	normal_RANode_print		3955467	0					
ANR	3955554	ArgumentList	g		3955467	1					
ANR	3955555	Argument	g		3955467	0					
ANR	3955556	Identifier	g		3955467	0					
ANR	3955557	Argument	n		3955467	1					
ANR	3955558	Identifier	n		3955467	0					
ANR	3955559	Argument	cur		3955467	2					
ANR	3955560	Identifier	cur		3955467	0					
ANR	3955561	ReturnType	static void		3955467	1					
ANR	3955562	Identifier	agraph_print_node		3955467	2					
ANR	3955563	ParameterList	"const RAGraph * g , RANode * n"		3955467	3					
ANR	3955564	Parameter	const RAGraph * g	2722:30:68477:68492	3955467	0	True				
ANR	3955565	ParameterType	const RAGraph *		3955467	0					
ANR	3955566	Identifier	g		3955467	1					
ANR	3955567	Parameter	RANode * n	2722:48:68495:68503	3955467	1	True				
ANR	3955568	ParameterType	RANode *		3955467	0					
ANR	3955569	Identifier	n		3955467	1					
ANR	3955570	CFGEntryNode	ENTRY		3955467		True				
ANR	3955571	CFGExitNode	EXIT		3955467		True				
ANR	3955572	Symbol	* g		3955467						
ANR	3955573	Symbol	cur		3955467						
ANR	3955574	Symbol	g -> is_tiny		3955467						
ANR	3955575	Symbol	get_anode		3955467						
ANR	3955576	Symbol	is_mini		3955467						
ANR	3955577	Symbol	g		3955467						
ANR	3955578	Symbol	g -> curnode		3955467						
ANR	3955579	Symbol	isMini		3955467						
ANR	3955580	Symbol	* n		3955467						
ANR	3955581	Symbol	n -> is_dummy		3955467						
ANR	3955582	Symbol	n -> is_mini		3955467						
ANR	3955583	Symbol	n		3955467						
ANR	3955584	Function	agraph_print_nodes	2737:0:68815:69194							
ANR	3955585	FunctionDef	agraph_print_nodes (const RAGraph * g)		3955584	0					
ANR	3955586	CompoundStatement		2737:49:68864:69194	3955584	0					
ANR	3955587	IdentifierDeclStatement	const RList * nodes = r_graph_get_nodes ( g -> graph ) ;	2738:1:68867:68916	3955584	0	True				
ANR	3955588	IdentifierDecl	* nodes = r_graph_get_nodes ( g -> graph )		3955584	0					
ANR	3955589	IdentifierDeclType	const RList *		3955584	0					
ANR	3955590	Identifier	nodes		3955584	1					
ANR	3955591	AssignmentExpression	* nodes = r_graph_get_nodes ( g -> graph )		3955584	2		=			
ANR	3955592	Identifier	nodes		3955584	0					
ANR	3955593	CallExpression	r_graph_get_nodes ( g -> graph )		3955584	1					
ANR	3955594	Callee	r_graph_get_nodes		3955584	0					
ANR	3955595	Identifier	r_graph_get_nodes		3955584	0					
ANR	3955596	ArgumentList	g -> graph		3955584	1					
ANR	3955597	Argument	g -> graph		3955584	0					
ANR	3955598	PtrMemberAccess	g -> graph		3955584	0					
ANR	3955599	Identifier	g		3955584	0					
ANR	3955600	Identifier	graph		3955584	1					
ANR	3955601	IdentifierDeclStatement	RGraphNode * gn ;	2739:1:68919:68933	3955584	1	True				
ANR	3955602	IdentifierDecl	* gn		3955584	0					
ANR	3955603	IdentifierDeclType	RGraphNode *		3955584	0					
ANR	3955604	Identifier	gn		3955584	1					
ANR	3955605	IdentifierDeclStatement	RListIter * it ;	2740:1:68936:68949	3955584	2	True				
ANR	3955606	IdentifierDecl	* it		3955584	0					
ANR	3955607	IdentifierDeclType	RListIter *		3955584	0					
ANR	3955608	Identifier	it		3955584	1					
ANR	3955609	IdentifierDeclStatement	RANode * n ;	2741:1:68952:68961	3955584	3	True				
ANR	3955610	IdentifierDecl	* n		3955584	0					
ANR	3955611	IdentifierDeclType	RANode *		3955584	0					
ANR	3955612	Identifier	n		3955584	1					
ANR	3955613	Statement	graph_foreach_anode	2743:1:68965:68983	3955584	4	True				
ANR	3955614	Statement	(	2743:21:68985:68985	3955584	5	True				
ANR	3955615	Statement	nodes	2743:22:68986:68990	3955584	6	True				
ANR	3955616	Statement	","	2743:27:68991:68991	3955584	7	True				
ANR	3955617	Statement	it	2743:29:68993:68994	3955584	8	True				
ANR	3955618	Statement	","	2743:31:68995:68995	3955584	9	True				
ANR	3955619	Statement	gn	2743:33:68997:68998	3955584	10	True				
ANR	3955620	Statement	","	2743:35:68999:68999	3955584	11	True				
ANR	3955621	Statement	n	2743:37:69001:69001	3955584	12	True				
ANR	3955622	Statement	)	2743:38:69002:69002	3955584	13	True				
ANR	3955623	CompoundStatement		7:40:139:139	3955584	14					
ANR	3955624	IfStatement	if ( gn != g -> curnode )		3955584	0					
ANR	3955625	Condition	gn != g -> curnode	2744:6:69012:69027	3955584	0	True				
ANR	3955626	EqualityExpression	gn != g -> curnode		3955584	0		!=			
ANR	3955627	Identifier	gn		3955584	0					
ANR	3955628	PtrMemberAccess	g -> curnode		3955584	1					
ANR	3955629	Identifier	g		3955584	0					
ANR	3955630	Identifier	curnode		3955584	1					
ANR	3955631	CompoundStatement		8:24:165:165	3955584	1					
ANR	3955632	ExpressionStatement	"agraph_print_node ( g , n )"	2745:3:69035:69059	3955584	0	True				
ANR	3955633	CallExpression	"agraph_print_node ( g , n )"		3955584	0					
ANR	3955634	Callee	agraph_print_node		3955584	0					
ANR	3955635	Identifier	agraph_print_node		3955584	0					
ANR	3955636	ArgumentList	g		3955584	1					
ANR	3955637	Argument	g		3955584	0					
ANR	3955638	Identifier	g		3955584	0					
ANR	3955639	Argument	n		3955584	1					
ANR	3955640	Identifier	n		3955584	0					
ANR	3955641	IfStatement	if ( g -> curnode )		3955584	15					
ANR	3955642	Condition	g -> curnode	2750:5:69128:69137	3955584	0	True				
ANR	3955643	PtrMemberAccess	g -> curnode		3955584	0					
ANR	3955644	Identifier	g		3955584	0					
ANR	3955645	Identifier	curnode		3955584	1					
ANR	3955646	CompoundStatement		14:17:275:275	3955584	1					
ANR	3955647	ExpressionStatement	"agraph_print_node ( g , get_anode ( g -> curnode ) )"	2751:2:69144:69189	3955584	0	True				
ANR	3955648	CallExpression	"agraph_print_node ( g , get_anode ( g -> curnode ) )"		3955584	0					
ANR	3955649	Callee	agraph_print_node		3955584	0					
ANR	3955650	Identifier	agraph_print_node		3955584	0					
ANR	3955651	ArgumentList	g		3955584	1					
ANR	3955652	Argument	g		3955584	0					
ANR	3955653	Identifier	g		3955584	0					
ANR	3955654	Argument	get_anode ( g -> curnode )		3955584	1					
ANR	3955655	CallExpression	get_anode ( g -> curnode )		3955584	0					
ANR	3955656	Callee	get_anode		3955584	0					
ANR	3955657	Identifier	get_anode		3955584	0					
ANR	3955658	ArgumentList	g -> curnode		3955584	1					
ANR	3955659	Argument	g -> curnode		3955584	0					
ANR	3955660	PtrMemberAccess	g -> curnode		3955584	0					
ANR	3955661	Identifier	g		3955584	0					
ANR	3955662	Identifier	curnode		3955584	1					
ANR	3955663	ReturnType	static void		3955584	1					
ANR	3955664	Identifier	agraph_print_nodes		3955584	2					
ANR	3955665	ParameterList	const RAGraph * g		3955584	3					
ANR	3955666	Parameter	const RAGraph * g	2737:31:68846:68861	3955584	0	True				
ANR	3955667	ParameterType	const RAGraph *		3955584	0					
ANR	3955668	Identifier	g		3955584	1					
ANR	3955669	CFGEntryNode	ENTRY		3955584		True				
ANR	3955670	CFGExitNode	EXIT		3955584		True				
ANR	3955671	Symbol	* g		3955584						
ANR	3955672	Symbol	nodes		3955584						
ANR	3955673	Symbol	r_graph_get_nodes		3955584						
ANR	3955674	Symbol	get_anode		3955584						
ANR	3955675	Symbol	g -> graph		3955584						
ANR	3955676	Symbol	g		3955584						
ANR	3955677	Symbol	gn		3955584						
ANR	3955678	Symbol	g -> curnode		3955584						
ANR	3955679	Symbol	it		3955584						
ANR	3955680	Symbol	n		3955584						
ANR	3955681	ClassDef	tmplayer	2755:0:69197:69280							
ANR	3955682	DeclStmt									
ANR	3955683	Decl							int	int	layer
ANR	3955684	DeclStmt									
ANR	3955685	Decl							int	int	edgectr
ANR	3955686	DeclStmt									
ANR	3955687	Decl							int	int	revedgectr
ANR	3955688	DeclStmt									
ANR	3955689	Decl							int	int	minx
ANR	3955690	DeclStmt									
ANR	3955691	Decl							int	int	maxx
ANR	3955692	ClassDef	tmpbackedgeinfo	2762:0:69283:69413							
ANR	3955693	DeclStmt									
ANR	3955694	Decl							int	int	ax
ANR	3955695	DeclStmt									
ANR	3955696	Decl							int	int	ay
ANR	3955697	DeclStmt									
ANR	3955698	Decl							int	int	bx
ANR	3955699	DeclStmt									
ANR	3955700	Decl							int	int	by
ANR	3955701	DeclStmt									
ANR	3955702	Decl							int	int	edgectr
ANR	3955703	DeclStmt									
ANR	3955704	Decl							int	int	fromlayer
ANR	3955705	DeclStmt									
ANR	3955706	Decl							int	int	tolayer
ANR	3955707	DeclStmt									
ANR	3955708	Decl							RCanvasLineStyle	RCanvasLineStyle	style
ANR	3955709	Function	tmplayercmp	2773:0:69417:69537							
ANR	3955710	FunctionDef	"tmplayercmp (const void * a , const void * b)"		3955709	0					
ANR	3955711	CompoundStatement		2773:47:69464:69537	3955709	0					
ANR	3955712	ReturnStatement	return ( ( struct tmplayer * ) a ) -> layer > ( ( struct tmplayer * ) b ) -> layer ;	2774:1:69467:69535	3955709	0	True				
ANR	3955713	RelationalExpression	( ( struct tmplayer * ) a ) -> layer > ( ( struct tmplayer * ) b ) -> layer		3955709	0		>			
ANR	3955714	PtrMemberAccess	( ( struct tmplayer * ) a ) -> layer		3955709	0					
ANR	3955715	CastExpression	( struct tmplayer * ) a		3955709	0					
ANR	3955716	CastTarget	struct tmplayer *		3955709	0					
ANR	3955717	Identifier	a		3955709	1					
ANR	3955718	Identifier	layer		3955709	1					
ANR	3955719	PtrMemberAccess	( ( struct tmplayer * ) b ) -> layer		3955709	1					
ANR	3955720	CastExpression	( struct tmplayer * ) b		3955709	0					
ANR	3955721	CastTarget	struct tmplayer *		3955709	0					
ANR	3955722	Identifier	b		3955709	1					
ANR	3955723	Identifier	layer		3955709	1					
ANR	3955724	ReturnType	int		3955709	1					
ANR	3955725	Identifier	tmplayercmp		3955709	2					
ANR	3955726	ParameterList	"const void * a , const void * b"		3955709	3					
ANR	3955727	Parameter	const void * a	2773:17:69434:69446	3955709	0	True				
ANR	3955728	ParameterType	const void *		3955709	0					
ANR	3955729	Identifier	a		3955709	1					
ANR	3955730	Parameter	const void * b	2773:32:69449:69461	3955709	1	True				
ANR	3955731	ParameterType	const void *		3955709	0					
ANR	3955732	Identifier	b		3955709	1					
ANR	3955733	CFGEntryNode	ENTRY		3955709		True				
ANR	3955734	CFGExitNode	EXIT		3955709		True				
ANR	3955735	Symbol	a		3955709						
ANR	3955736	Symbol	b		3955709						
ANR	3955737	Symbol	( ( struct tmplayer * ) a ) -> layer		3955709						
ANR	3955738	Symbol	( ( struct tmplayer * ) b ) -> layer		3955709						
ANR	3955739	Symbol	* a		3955709						
ANR	3955740	Symbol	* b		3955709						
ANR	3955741	Function	agraph_print_edges_simple	2777:0:69540:70274							
ANR	3955742	FunctionDef	agraph_print_edges_simple (RAGraph * g)		3955741	0					
ANR	3955743	CompoundStatement		2777:50:69590:70274	3955741	0					
ANR	3955744	IdentifierDeclStatement	RCanvasLineStyle style = { 0 } ;	2778:1:69593:69621	3955741	0	True				
ANR	3955745	IdentifierDecl	style = { 0 }		3955741	0					
ANR	3955746	IdentifierDeclType	RCanvasLineStyle		3955741	0					
ANR	3955747	Identifier	style		3955741	1					
ANR	3955748	AssignmentExpression	style = { 0 }		3955741	2		=			
ANR	3955749	Identifier	style		3955741	0					
ANR	3955750	InitializerList	0		3955741	1					
ANR	3955751	PrimaryExpression	0		3955741	0					
ANR	3955752	IdentifierDeclStatement	"RANode * n , * n2 ;"	2779:1:69624:69638	3955741	1	True				
ANR	3955753	IdentifierDecl	* n		3955741	0					
ANR	3955754	IdentifierDeclType	RANode *		3955741	0					
ANR	3955755	Identifier	n		3955741	1					
ANR	3955756	IdentifierDecl	* n2		3955741	1					
ANR	3955757	IdentifierDeclType	RANode *		3955741	0					
ANR	3955758	Identifier	n2		3955741	1					
ANR	3955759	IdentifierDeclStatement	"RGraphNode * gn , * gn2 ;"	2780:1:69641:69661	3955741	2	True				
ANR	3955760	IdentifierDecl	* gn		3955741	0					
ANR	3955761	IdentifierDeclType	RGraphNode *		3955741	0					
ANR	3955762	Identifier	gn		3955741	1					
ANR	3955763	IdentifierDecl	* gn2		3955741	1					
ANR	3955764	IdentifierDeclType	RGraphNode *		3955741	0					
ANR	3955765	Identifier	gn2		3955741	1					
ANR	3955766	IdentifierDeclStatement	"RListIter * iter , * iter2 ;"	2781:1:69664:69687	3955741	3	True				
ANR	3955767	IdentifierDecl	* iter		3955741	0					
ANR	3955768	IdentifierDeclType	RListIter *		3955741	0					
ANR	3955769	Identifier	iter		3955741	1					
ANR	3955770	IdentifierDecl	* iter2		3955741	1					
ANR	3955771	IdentifierDeclType	RListIter *		3955741	0					
ANR	3955772	Identifier	iter2		3955741	1					
ANR	3955773	IdentifierDeclStatement	const RList * nodes = r_graph_get_nodes ( g -> graph ) ;	2782:1:69690:69739	3955741	4	True				
ANR	3955774	IdentifierDecl	* nodes = r_graph_get_nodes ( g -> graph )		3955741	0					
ANR	3955775	IdentifierDeclType	const RList *		3955741	0					
ANR	3955776	Identifier	nodes		3955741	1					
ANR	3955777	AssignmentExpression	* nodes = r_graph_get_nodes ( g -> graph )		3955741	2		=			
ANR	3955778	Identifier	nodes		3955741	0					
ANR	3955779	CallExpression	r_graph_get_nodes ( g -> graph )		3955741	1					
ANR	3955780	Callee	r_graph_get_nodes		3955741	0					
ANR	3955781	Identifier	r_graph_get_nodes		3955741	0					
ANR	3955782	ArgumentList	g -> graph		3955741	1					
ANR	3955783	Argument	g -> graph		3955741	0					
ANR	3955784	PtrMemberAccess	g -> graph		3955741	0					
ANR	3955785	Identifier	g		3955741	0					
ANR	3955786	Identifier	graph		3955741	1					
ANR	3955787	Statement	graph_foreach_anode	2783:1:69742:69760	3955741	5	True				
ANR	3955788	Statement	(	2783:21:69762:69762	3955741	6	True				
ANR	3955789	Statement	nodes	2783:22:69763:69767	3955741	7	True				
ANR	3955790	Statement	","	2783:27:69768:69768	3955741	8	True				
ANR	3955791	Statement	iter	2783:29:69770:69773	3955741	9	True				
ANR	3955792	Statement	","	2783:33:69774:69774	3955741	10	True				
ANR	3955793	Statement	gn	2783:35:69776:69777	3955741	11	True				
ANR	3955794	Statement	","	2783:37:69778:69778	3955741	12	True				
ANR	3955795	Statement	n	2783:39:69780:69780	3955741	13	True				
ANR	3955796	Statement	)	2783:40:69781:69781	3955741	14	True				
ANR	3955797	CompoundStatement		8:2:196:239	3955741	15					
ANR	3955798	IdentifierDeclStatement	const RList * outnodes = n -> gnode -> out_nodes ;	2784:2:69787:69830	3955741	0	True				
ANR	3955799	IdentifierDecl	* outnodes = n -> gnode -> out_nodes		3955741	0					
ANR	3955800	IdentifierDeclType	const RList *		3955741	0					
ANR	3955801	Identifier	outnodes		3955741	1					
ANR	3955802	AssignmentExpression	* outnodes = n -> gnode -> out_nodes		3955741	2		=			
ANR	3955803	Identifier	outnodes		3955741	0					
ANR	3955804	PtrMemberAccess	n -> gnode -> out_nodes		3955741	1					
ANR	3955805	PtrMemberAccess	n -> gnode		3955741	0					
ANR	3955806	Identifier	n		3955741	0					
ANR	3955807	Identifier	gnode		3955741	1					
ANR	3955808	Identifier	out_nodes		3955741	1					
ANR	3955809	Statement	graph_foreach_anode	2785:2:69834:69852	3955741	1	True				
ANR	3955810	Statement	(	2785:22:69854:69854	3955741	2	True				
ANR	3955811	Statement	outnodes	2785:23:69855:69862	3955741	3	True				
ANR	3955812	Statement	","	2785:31:69863:69863	3955741	4	True				
ANR	3955813	Statement	iter2	2785:33:69865:69869	3955741	5	True				
ANR	3955814	Statement	","	2785:38:69870:69870	3955741	6	True				
ANR	3955815	Statement	gn2	2785:40:69872:69874	3955741	7	True				
ANR	3955816	Statement	","	2785:43:69875:69875	3955741	8	True				
ANR	3955817	Statement	n2	2785:45:69877:69878	3955741	9	True				
ANR	3955818	Statement	)	2785:47:69879:69879	3955741	10	True				
ANR	3955819	CompoundStatement		12:3:335:354	3955741	11					
ANR	3955820	IdentifierDeclStatement	int sx = n -> w / 2 ;	2786:3:69886:69903	3955741	0	True				
ANR	3955821	IdentifierDecl	sx = n -> w / 2		3955741	0					
ANR	3955822	IdentifierDeclType	int		3955741	0					
ANR	3955823	Identifier	sx		3955741	1					
ANR	3955824	AssignmentExpression	sx = n -> w / 2		3955741	2		=			
ANR	3955825	Identifier	sx		3955741	0					
ANR	3955826	MultiplicativeExpression	n -> w / 2		3955741	1		/			
ANR	3955827	PtrMemberAccess	n -> w		3955741	0					
ANR	3955828	Identifier	n		3955741	0					
ANR	3955829	Identifier	w		3955741	1					
ANR	3955830	PrimaryExpression	2		3955741	1					
ANR	3955831	IdentifierDeclStatement	int sy = n -> h ;	2787:3:69908:69921	3955741	1	True				
ANR	3955832	IdentifierDecl	sy = n -> h		3955741	0					
ANR	3955833	IdentifierDeclType	int		3955741	0					
ANR	3955834	Identifier	sy		3955741	1					
ANR	3955835	AssignmentExpression	sy = n -> h		3955741	2		=			
ANR	3955836	Identifier	sy		3955741	0					
ANR	3955837	PtrMemberAccess	n -> h		3955741	1					
ANR	3955838	Identifier	n		3955741	0					
ANR	3955839	Identifier	h		3955741	1					
ANR	3955840	IdentifierDeclStatement	int sx2 = n2 -> w / 2 ;	2788:3:69926:69945	3955741	2	True				
ANR	3955841	IdentifierDecl	sx2 = n2 -> w / 2		3955741	0					
ANR	3955842	IdentifierDeclType	int		3955741	0					
ANR	3955843	Identifier	sx2		3955741	1					
ANR	3955844	AssignmentExpression	sx2 = n2 -> w / 2		3955741	2		=			
ANR	3955845	Identifier	sx2		3955741	0					
ANR	3955846	MultiplicativeExpression	n2 -> w / 2		3955741	1		/			
ANR	3955847	PtrMemberAccess	n2 -> w		3955741	0					
ANR	3955848	Identifier	n2		3955741	0					
ANR	3955849	Identifier	w		3955741	1					
ANR	3955850	PrimaryExpression	2		3955741	1					
ANR	3955851	IfStatement	if ( g -> is_tiny )		3955741	3					
ANR	3955852	Condition	g -> is_tiny	2789:7:69954:69963	3955741	0	True				
ANR	3955853	PtrMemberAccess	g -> is_tiny		3955741	0					
ANR	3955854	Identifier	g		3955741	0					
ANR	3955855	Identifier	is_tiny		3955741	1					
ANR	3955856	CompoundStatement		13:19:375:375	3955741	1					
ANR	3955857	ExpressionStatement	sx = 0	2790:4:69972:69978	3955741	0	True				
ANR	3955858	AssignmentExpression	sx = 0		3955741	0		=			
ANR	3955859	Identifier	sx		3955741	0					
ANR	3955860	PrimaryExpression	0		3955741	1					
ANR	3955861	ExpressionStatement	sy = 0	2791:4:69984:69990	3955741	1	True				
ANR	3955862	AssignmentExpression	sy = 0		3955741	0		=			
ANR	3955863	Identifier	sy		3955741	0					
ANR	3955864	PrimaryExpression	0		3955741	1					
ANR	3955865	ExpressionStatement	sx2 = 0	2792:4:69996:70003	3955741	2	True				
ANR	3955866	AssignmentExpression	sx2 = 0		3955741	0		=			
ANR	3955867	Identifier	sx2		3955741	0					
ANR	3955868	PrimaryExpression	0		3955741	1					
ANR	3955869	ExpressionStatement	"r_cons_canvas_line ( g -> can , n -> x + sx , n -> y + sy , n2 -> x + sx2 , n2 -> y , & style )"	2795:3:70048:70133	3955741	4	True				
ANR	3955870	CallExpression	"r_cons_canvas_line ( g -> can , n -> x + sx , n -> y + sy , n2 -> x + sx2 , n2 -> y , & style )"		3955741	0					
ANR	3955871	Callee	r_cons_canvas_line		3955741	0					
ANR	3955872	Identifier	r_cons_canvas_line		3955741	0					
ANR	3955873	ArgumentList	g -> can		3955741	1					
ANR	3955874	Argument	g -> can		3955741	0					
ANR	3955875	PtrMemberAccess	g -> can		3955741	0					
ANR	3955876	Identifier	g		3955741	0					
ANR	3955877	Identifier	can		3955741	1					
ANR	3955878	Argument	n -> x + sx		3955741	1					
ANR	3955879	AdditiveExpression	n -> x + sx		3955741	0		+			
ANR	3955880	PtrMemberAccess	n -> x		3955741	0					
ANR	3955881	Identifier	n		3955741	0					
ANR	3955882	Identifier	x		3955741	1					
ANR	3955883	Identifier	sx		3955741	1					
ANR	3955884	Argument	n -> y + sy		3955741	2					
ANR	3955885	AdditiveExpression	n -> y + sy		3955741	0		+			
ANR	3955886	PtrMemberAccess	n -> y		3955741	0					
ANR	3955887	Identifier	n		3955741	0					
ANR	3955888	Identifier	y		3955741	1					
ANR	3955889	Identifier	sy		3955741	1					
ANR	3955890	Argument	n2 -> x + sx2		3955741	3					
ANR	3955891	AdditiveExpression	n2 -> x + sx2		3955741	0		+			
ANR	3955892	PtrMemberAccess	n2 -> x		3955741	0					
ANR	3955893	Identifier	n2		3955741	0					
ANR	3955894	Identifier	x		3955741	1					
ANR	3955895	Identifier	sx2		3955741	1					
ANR	3955896	Argument	n2 -> y		3955741	4					
ANR	3955897	PtrMemberAccess	n2 -> y		3955741	0					
ANR	3955898	Identifier	n2		3955741	0					
ANR	3955899	Identifier	y		3955741	1					
ANR	3955900	Argument	& style		3955741	5					
ANR	3955901	UnaryOperationExpression	& style		3955741	0					
ANR	3955902	UnaryOperator	&		3955741	0					
ANR	3955903	Identifier	style		3955741	1					
ANR	3955904	IfStatement	if ( n2 -> is_dummy )		3955741	5					
ANR	3955905	Condition	n2 -> is_dummy	2799:7:70143:70154	3955741	0	True				
ANR	3955906	PtrMemberAccess	n2 -> is_dummy		3955741	0					
ANR	3955907	Identifier	n2		3955741	0					
ANR	3955908	Identifier	is_dummy		3955741	1					
ANR	3955909	CompoundStatement		23:21:566:566	3955741	1					
ANR	3955910	ExpressionStatement	"r_cons_canvas_line ( g -> can , n2 -> x + sx2 , n2 -> y - 1 , n2 -> x + sx2 , n2 -> y + n2 -> h , & style )"	2800:4:70163:70260	3955741	0	True				
ANR	3955911	CallExpression	"r_cons_canvas_line ( g -> can , n2 -> x + sx2 , n2 -> y - 1 , n2 -> x + sx2 , n2 -> y + n2 -> h , & style )"		3955741	0					
ANR	3955912	Callee	r_cons_canvas_line		3955741	0					
ANR	3955913	Identifier	r_cons_canvas_line		3955741	0					
ANR	3955914	ArgumentList	g -> can		3955741	1					
ANR	3955915	Argument	g -> can		3955741	0					
ANR	3955916	PtrMemberAccess	g -> can		3955741	0					
ANR	3955917	Identifier	g		3955741	0					
ANR	3955918	Identifier	can		3955741	1					
ANR	3955919	Argument	n2 -> x + sx2		3955741	1					
ANR	3955920	AdditiveExpression	n2 -> x + sx2		3955741	0		+			
ANR	3955921	PtrMemberAccess	n2 -> x		3955741	0					
ANR	3955922	Identifier	n2		3955741	0					
ANR	3955923	Identifier	x		3955741	1					
ANR	3955924	Identifier	sx2		3955741	1					
ANR	3955925	Argument	n2 -> y - 1		3955741	2					
ANR	3955926	AdditiveExpression	n2 -> y - 1		3955741	0		-			
ANR	3955927	PtrMemberAccess	n2 -> y		3955741	0					
ANR	3955928	Identifier	n2		3955741	0					
ANR	3955929	Identifier	y		3955741	1					
ANR	3955930	PrimaryExpression	1		3955741	1					
ANR	3955931	Argument	n2 -> x + sx2		3955741	3					
ANR	3955932	AdditiveExpression	n2 -> x + sx2		3955741	0		+			
ANR	3955933	PtrMemberAccess	n2 -> x		3955741	0					
ANR	3955934	Identifier	n2		3955741	0					
ANR	3955935	Identifier	x		3955741	1					
ANR	3955936	Identifier	sx2		3955741	1					
ANR	3955937	Argument	n2 -> y + n2 -> h		3955741	4					
ANR	3955938	AdditiveExpression	n2 -> y + n2 -> h		3955741	0		+			
ANR	3955939	PtrMemberAccess	n2 -> y		3955741	0					
ANR	3955940	Identifier	n2		3955741	0					
ANR	3955941	Identifier	y		3955741	1					
ANR	3955942	PtrMemberAccess	n2 -> h		3955741	1					
ANR	3955943	Identifier	n2		3955741	0					
ANR	3955944	Identifier	h		3955741	1					
ANR	3955945	Argument	& style		3955741	5					
ANR	3955946	UnaryOperationExpression	& style		3955741	0					
ANR	3955947	UnaryOperator	&		3955741	0					
ANR	3955948	Identifier	style		3955741	1					
ANR	3955949	ReturnType	static void		3955741	1					
ANR	3955950	Identifier	agraph_print_edges_simple		3955741	2					
ANR	3955951	ParameterList	RAGraph * g		3955741	3					
ANR	3955952	Parameter	RAGraph * g	2777:38:69578:69587	3955741	0	True				
ANR	3955953	ParameterType	RAGraph *		3955741	0					
ANR	3955954	Identifier	g		3955741	1					
ANR	3955955	CFGEntryNode	ENTRY		3955741		True				
ANR	3955956	CFGExitNode	EXIT		3955741		True				
ANR	3955957	Symbol	n -> gnode		3955741						
ANR	3955958	Symbol	n2		3955741						
ANR	3955959	Symbol	n -> gnode -> out_nodes		3955741						
ANR	3955960	Symbol	* n -> gnode		3955741						
ANR	3955961	Symbol	n2 -> h		3955741						
ANR	3955962	Symbol	g -> is_tiny		3955741						
ANR	3955963	Symbol	g -> graph		3955741						
ANR	3955964	Symbol	* * n		3955741						
ANR	3955965	Symbol	g -> can		3955741						
ANR	3955966	Symbol	r_graph_get_nodes		3955741						
ANR	3955967	Symbol	sx		3955741						
ANR	3955968	Symbol	& style		3955741						
ANR	3955969	Symbol	sy		3955741						
ANR	3955970	Symbol	n -> h		3955741						
ANR	3955971	Symbol	g		3955741						
ANR	3955972	Symbol	gn		3955741						
ANR	3955973	Symbol	iter2		3955741						
ANR	3955974	Symbol	iter		3955741						
ANR	3955975	Symbol	* n2		3955741						
ANR	3955976	Symbol	gn2		3955741						
ANR	3955977	Symbol	outnodes		3955741						
ANR	3955978	Symbol	sx2		3955741						
ANR	3955979	Symbol	n		3955741						
ANR	3955980	Symbol	* g		3955741						
ANR	3955981	Symbol	n -> y		3955741						
ANR	3955982	Symbol	nodes		3955741						
ANR	3955983	Symbol	n -> x		3955741						
ANR	3955984	Symbol	n -> w		3955741						
ANR	3955985	Symbol	* n		3955741						
ANR	3955986	Symbol	n2 -> is_dummy		3955741						
ANR	3955987	Symbol	style		3955741						
ANR	3955988	Symbol	n2 -> w		3955741						
ANR	3955989	Symbol	n2 -> x		3955741						
ANR	3955990	Symbol	n2 -> y		3955741						
ANR	3955991	Function	first_x_cmp	2808:0:70277:70626							
ANR	3955992	FunctionDef	"first_x_cmp (const void * _a , const void * _b)"		3955991	0					
ANR	3955993	CompoundStatement		2808:56:70333:70626	3955991	0					
ANR	3955994	IdentifierDeclStatement	RGraphNode * ga = ( RGraphNode * ) _a ;	2809:1:70336:70369	3955991	0	True				
ANR	3955995	IdentifierDecl	* ga = ( RGraphNode * ) _a		3955991	0					
ANR	3955996	IdentifierDeclType	RGraphNode *		3955991	0					
ANR	3955997	Identifier	ga		3955991	1					
ANR	3955998	AssignmentExpression	* ga = ( RGraphNode * ) _a		3955991	2		=			
ANR	3955999	Identifier	ga		3955991	0					
ANR	3956000	CastExpression	( RGraphNode * ) _a		3955991	1					
ANR	3956001	CastTarget	RGraphNode *		3955991	0					
ANR	3956002	Identifier	_a		3955991	1					
ANR	3956003	IdentifierDeclStatement	RGraphNode * gb = ( RGraphNode * ) _b ;	2810:1:70372:70405	3955991	1	True				
ANR	3956004	IdentifierDecl	* gb = ( RGraphNode * ) _b		3955991	0					
ANR	3956005	IdentifierDeclType	RGraphNode *		3955991	0					
ANR	3956006	Identifier	gb		3955991	1					
ANR	3956007	AssignmentExpression	* gb = ( RGraphNode * ) _b		3955991	2		=			
ANR	3956008	Identifier	gb		3955991	0					
ANR	3956009	CastExpression	( RGraphNode * ) _b		3955991	1					
ANR	3956010	CastTarget	RGraphNode *		3955991	0					
ANR	3956011	Identifier	_b		3955991	1					
ANR	3956012	IdentifierDeclStatement	RANode * a = ( RANode * ) ga -> data ;	2811:1:70408:70438	3955991	2	True				
ANR	3956013	IdentifierDecl	* a = ( RANode * ) ga -> data		3955991	0					
ANR	3956014	IdentifierDeclType	RANode *		3955991	0					
ANR	3956015	Identifier	a		3955991	1					
ANR	3956016	AssignmentExpression	* a = ( RANode * ) ga -> data		3955991	2		=			
ANR	3956017	Identifier	a		3955991	0					
ANR	3956018	CastExpression	( RANode * ) ga -> data		3955991	1					
ANR	3956019	CastTarget	RANode *		3955991	0					
ANR	3956020	PtrMemberAccess	ga -> data		3955991	1					
ANR	3956021	Identifier	ga		3955991	0					
ANR	3956022	Identifier	data		3955991	1					
ANR	3956023	IdentifierDeclStatement	RANode * b = ( RANode * ) gb -> data ;	2812:1:70441:70471	3955991	3	True				
ANR	3956024	IdentifierDecl	* b = ( RANode * ) gb -> data		3955991	0					
ANR	3956025	IdentifierDeclType	RANode *		3955991	0					
ANR	3956026	Identifier	b		3955991	1					
ANR	3956027	AssignmentExpression	* b = ( RANode * ) gb -> data		3955991	2		=			
ANR	3956028	Identifier	b		3955991	0					
ANR	3956029	CastExpression	( RANode * ) gb -> data		3955991	1					
ANR	3956030	CastTarget	RANode *		3955991	0					
ANR	3956031	PtrMemberAccess	gb -> data		3955991	1					
ANR	3956032	Identifier	gb		3955991	0					
ANR	3956033	Identifier	data		3955991	1					
ANR	3956034	IfStatement	if ( b -> y < a -> y )		3955991	4					
ANR	3956035	Condition	b -> y < a -> y	2813:5:70478:70488	3955991	0	True				
ANR	3956036	RelationalExpression	b -> y < a -> y		3955991	0		<			
ANR	3956037	PtrMemberAccess	b -> y		3955991	0					
ANR	3956038	Identifier	b		3955991	0					
ANR	3956039	Identifier	y		3955991	1					
ANR	3956040	PtrMemberAccess	a -> y		3955991	1					
ANR	3956041	Identifier	a		3955991	0					
ANR	3956042	Identifier	y		3955991	1					
ANR	3956043	CompoundStatement		6:18:157:157	3955991	1					
ANR	3956044	ReturnStatement	return - 1 ;	2814:2:70495:70504	3955991	0	True				
ANR	3956045	UnaryOperationExpression	- 1		3955991	0					
ANR	3956046	UnaryOperator	-		3955991	0					
ANR	3956047	PrimaryExpression	1		3955991	1					
ANR	3956048	IfStatement	if ( b -> y > a -> y )		3955991	5					
ANR	3956049	Condition	b -> y > a -> y	2816:5:70514:70524	3955991	0	True				
ANR	3956050	RelationalExpression	b -> y > a -> y		3955991	0		>			
ANR	3956051	PtrMemberAccess	b -> y		3955991	0					
ANR	3956052	Identifier	b		3955991	0					
ANR	3956053	Identifier	y		3955991	1					
ANR	3956054	PtrMemberAccess	a -> y		3955991	1					
ANR	3956055	Identifier	a		3955991	0					
ANR	3956056	Identifier	y		3955991	1					
ANR	3956057	CompoundStatement		9:18:193:193	3955991	1					
ANR	3956058	ReturnStatement	return 1 ;	2817:2:70531:70539	3955991	0	True				
ANR	3956059	PrimaryExpression	1		3955991	0					
ANR	3956060	IfStatement	if ( a -> x < b -> x )		3955991	6					
ANR	3956061	Condition	a -> x < b -> x	2819:5:70549:70559	3955991	0	True				
ANR	3956062	RelationalExpression	a -> x < b -> x		3955991	0		<			
ANR	3956063	PtrMemberAccess	a -> x		3955991	0					
ANR	3956064	Identifier	a		3955991	0					
ANR	3956065	Identifier	x		3955991	1					
ANR	3956066	PtrMemberAccess	b -> x		3955991	1					
ANR	3956067	Identifier	b		3955991	0					
ANR	3956068	Identifier	x		3955991	1					
ANR	3956069	CompoundStatement		12:18:228:228	3955991	1					
ANR	3956070	ReturnStatement	return 1 ;	2820:2:70566:70574	3955991	0	True				
ANR	3956071	PrimaryExpression	1		3955991	0					
ANR	3956072	IfStatement	if ( a -> x > b -> x )		3955991	7					
ANR	3956073	Condition	a -> x > b -> x	2822:5:70584:70594	3955991	0	True				
ANR	3956074	RelationalExpression	a -> x > b -> x		3955991	0		>			
ANR	3956075	PtrMemberAccess	a -> x		3955991	0					
ANR	3956076	Identifier	a		3955991	0					
ANR	3956077	Identifier	x		3955991	1					
ANR	3956078	PtrMemberAccess	b -> x		3955991	1					
ANR	3956079	Identifier	b		3955991	0					
ANR	3956080	Identifier	x		3955991	1					
ANR	3956081	CompoundStatement		15:18:263:263	3955991	1					
ANR	3956082	ReturnStatement	return - 1 ;	2823:2:70601:70610	3955991	0	True				
ANR	3956083	UnaryOperationExpression	- 1		3955991	0					
ANR	3956084	UnaryOperator	-		3955991	0					
ANR	3956085	PrimaryExpression	1		3955991	1					
ANR	3956086	ReturnStatement	return 0 ;	2825:1:70616:70624	3955991	8	True				
ANR	3956087	PrimaryExpression	0		3955991	0					
ANR	3956088	ReturnType	static int		3955991	1					
ANR	3956089	Identifier	first_x_cmp		3955991	2					
ANR	3956090	ParameterList	"const void * _a , const void * _b"		3955991	3					
ANR	3956091	Parameter	const void * _a	2808:24:70301:70314	3955991	0	True				
ANR	3956092	ParameterType	const void *		3955991	0					
ANR	3956093	Identifier	_a		3955991	1					
ANR	3956094	Parameter	const void * _b	2808:40:70317:70330	3955991	1	True				
ANR	3956095	ParameterType	const void *		3955991	0					
ANR	3956096	Identifier	_b		3955991	1					
ANR	3956097	CFGEntryNode	ENTRY		3955991		True				
ANR	3956098	CFGExitNode	EXIT		3955991		True				
ANR	3956099	Symbol	a		3955991						
ANR	3956100	Symbol	_a		3955991						
ANR	3956101	Symbol	* gb		3955991						
ANR	3956102	Symbol	b		3955991						
ANR	3956103	Symbol	_b		3955991						
ANR	3956104	Symbol	* ga		3955991						
ANR	3956105	Symbol	ga -> data		3955991						
ANR	3956106	Symbol	* a		3955991						
ANR	3956107	Symbol	* b		3955991						
ANR	3956108	Symbol	gb -> data		3955991						
ANR	3956109	Symbol	b -> x		3955991						
ANR	3956110	Symbol	a -> x		3955991						
ANR	3956111	Symbol	a -> y		3955991						
ANR	3956112	Symbol	ga		3955991						
ANR	3956113	Symbol	gb		3955991						
ANR	3956114	Symbol	b -> y		3955991						
ANR	3956115	Function	agraph_print_edges	2828:0:70629:78083							
ANR	3956116	FunctionDef	agraph_print_edges (RAGraph * g)		3956115	0					
ANR	3956117	CompoundStatement		2828:43:70672:78083	3956115	0					
ANR	3956118	IfStatement	if ( ! g -> edgemode )		3956115	0					
ANR	3956119	Condition	! g -> edgemode	2829:5:70679:70690	3956115	0	True				
ANR	3956120	UnaryOperationExpression	! g -> edgemode		3956115	0					
ANR	3956121	UnaryOperator	!		3956115	0					
ANR	3956122	PtrMemberAccess	g -> edgemode		3956115	1					
ANR	3956123	Identifier	g		3956115	0					
ANR	3956124	Identifier	edgemode		3956115	1					
ANR	3956125	CompoundStatement		2:19:20:20	3956115	1					
ANR	3956126	ReturnStatement	return ;	2830:2:70697:70703	3956115	0	True				
ANR	3956127	IfStatement	if ( g -> edgemode == 1 )		3956115	1					
ANR	3956128	Condition	g -> edgemode == 1	2832:5:70713:70728	3956115	0	True				
ANR	3956129	EqualityExpression	g -> edgemode == 1		3956115	0		==			
ANR	3956130	PtrMemberAccess	g -> edgemode		3956115	0					
ANR	3956131	Identifier	g		3956115	0					
ANR	3956132	Identifier	edgemode		3956115	1					
ANR	3956133	PrimaryExpression	1		3956115	1					
ANR	3956134	CompoundStatement		5:23:58:58	3956115	1					
ANR	3956135	ExpressionStatement	agraph_print_edges_simple ( g )	2833:2:70735:70764	3956115	0	True				
ANR	3956136	CallExpression	agraph_print_edges_simple ( g )		3956115	0					
ANR	3956137	Callee	agraph_print_edges_simple		3956115	0					
ANR	3956138	Identifier	agraph_print_edges_simple		3956115	0					
ANR	3956139	ArgumentList	g		3956115	1					
ANR	3956140	Argument	g		3956115	0					
ANR	3956141	Identifier	g		3956115	0					
ANR	3956142	ReturnStatement	return ;	2834:2:70768:70774	3956115	1	True				
ANR	3956143	IdentifierDeclStatement	"int out_nth , in_nth , bendpoint ;"	2836:1:70780:70810	3956115	2	True				
ANR	3956144	IdentifierDecl	out_nth		3956115	0					
ANR	3956145	IdentifierDeclType	int		3956115	0					
ANR	3956146	Identifier	out_nth		3956115	1					
ANR	3956147	IdentifierDecl	in_nth		3956115	1					
ANR	3956148	IdentifierDeclType	int		3956115	0					
ANR	3956149	Identifier	in_nth		3956115	1					
ANR	3956150	IdentifierDecl	bendpoint		3956115	2					
ANR	3956151	IdentifierDeclType	int		3956115	0					
ANR	3956152	Identifier	bendpoint		3956115	1					
ANR	3956153	IdentifierDeclStatement	"RListIter * itn , * itm , * ito ;"	2837:1:70813:70839	3956115	3	True				
ANR	3956154	IdentifierDecl	* itn		3956115	0					
ANR	3956155	IdentifierDeclType	RListIter *		3956115	0					
ANR	3956156	Identifier	itn		3956115	1					
ANR	3956157	IdentifierDecl	* itm		3956115	1					
ANR	3956158	IdentifierDeclType	RListIter *		3956115	0					
ANR	3956159	Identifier	itm		3956115	1					
ANR	3956160	IdentifierDecl	* ito		3956115	2					
ANR	3956161	IdentifierDeclType	RListIter *		3956115	0					
ANR	3956162	Identifier	ito		3956115	1					
ANR	3956163	IdentifierDeclStatement	RCanvasLineStyle style = { 0 } ;	2838:1:70842:70870	3956115	4	True				
ANR	3956164	IdentifierDecl	style = { 0 }		3956115	0					
ANR	3956165	IdentifierDeclType	RCanvasLineStyle		3956115	0					
ANR	3956166	Identifier	style		3956115	1					
ANR	3956167	AssignmentExpression	style = { 0 }		3956115	2		=			
ANR	3956168	Identifier	style		3956115	0					
ANR	3956169	InitializerList	0		3956115	1					
ANR	3956170	PrimaryExpression	0		3956115	0					
ANR	3956171	IdentifierDeclStatement	const RList * nodes = r_graph_get_nodes ( g -> graph ) ;	2839:1:70873:70922	3956115	5	True				
ANR	3956172	IdentifierDecl	* nodes = r_graph_get_nodes ( g -> graph )		3956115	0					
ANR	3956173	IdentifierDeclType	const RList *		3956115	0					
ANR	3956174	Identifier	nodes		3956115	1					
ANR	3956175	AssignmentExpression	* nodes = r_graph_get_nodes ( g -> graph )		3956115	2		=			
ANR	3956176	Identifier	nodes		3956115	0					
ANR	3956177	CallExpression	r_graph_get_nodes ( g -> graph )		3956115	1					
ANR	3956178	Callee	r_graph_get_nodes		3956115	0					
ANR	3956179	Identifier	r_graph_get_nodes		3956115	0					
ANR	3956180	ArgumentList	g -> graph		3956115	1					
ANR	3956181	Argument	g -> graph		3956115	0					
ANR	3956182	PtrMemberAccess	g -> graph		3956115	0					
ANR	3956183	Identifier	g		3956115	0					
ANR	3956184	Identifier	graph		3956115	1					
ANR	3956185	IdentifierDeclStatement	RGraphNode * ga ;	2840:1:70925:70939	3956115	6	True				
ANR	3956186	IdentifierDecl	* ga		3956115	0					
ANR	3956187	IdentifierDeclType	RGraphNode *		3956115	0					
ANR	3956188	Identifier	ga		3956115	1					
ANR	3956189	IdentifierDeclStatement	RANode * a ;	2841:1:70942:70951	3956115	7	True				
ANR	3956190	IdentifierDecl	* a		3956115	0					
ANR	3956191	IdentifierDeclType	RANode *		3956115	0					
ANR	3956192	Identifier	a		3956115	1					
ANR	3956193	IdentifierDeclStatement	RList * lyr = r_list_new ( ) ;	2843:1:70955:70981	3956115	8	True				
ANR	3956194	IdentifierDecl	* lyr = r_list_new ( )		3956115	0					
ANR	3956195	IdentifierDeclType	RList *		3956115	0					
ANR	3956196	Identifier	lyr		3956115	1					
ANR	3956197	AssignmentExpression	* lyr = r_list_new ( )		3956115	2		=			
ANR	3956198	Identifier	lyr		3956115	0					
ANR	3956199	CallExpression	r_list_new ( )		3956115	1					
ANR	3956200	Callee	r_list_new		3956115	0					
ANR	3956201	Identifier	r_list_new		3956115	0					
ANR	3956202	ArgumentList			3956115	1					
ANR	3956203	IdentifierDeclStatement	RList * bckedges = r_list_new ( ) ;	2844:1:70984:71015	3956115	9	True				
ANR	3956204	IdentifierDecl	* bckedges = r_list_new ( )		3956115	0					
ANR	3956205	IdentifierDeclType	RList *		3956115	0					
ANR	3956206	Identifier	bckedges		3956115	1					
ANR	3956207	AssignmentExpression	* bckedges = r_list_new ( )		3956115	2		=			
ANR	3956208	Identifier	bckedges		3956115	0					
ANR	3956209	CallExpression	r_list_new ( )		3956115	1					
ANR	3956210	Callee	r_list_new		3956115	0					
ANR	3956211	Identifier	r_list_new		3956115	0					
ANR	3956212	ArgumentList			3956115	1					
ANR	3956213	IdentifierDeclStatement	"struct tmplayer * tl , * tm ;"	2845:1:71018:71042	3956115	10	True				
ANR	3956214	IdentifierDecl	* tl		3956115	0					
ANR	3956215	IdentifierDeclType	struct tmplayer *		3956115	0					
ANR	3956216	Identifier	tl		3956115	1					
ANR	3956217	IdentifierDecl	* tm		3956115	1					
ANR	3956218	IdentifierDeclType	struct tmplayer *		3956115	0					
ANR	3956219	Identifier	tm		3956115	1					
ANR	3956220	Statement	graph_foreach_anode	2847:1:71046:71064	3956115	11	True				
ANR	3956221	Statement	(	2847:21:71066:71066	3956115	12	True				
ANR	3956222	Statement	nodes	2847:22:71067:71071	3956115	13	True				
ANR	3956223	Statement	","	2847:27:71072:71072	3956115	14	True				
ANR	3956224	Statement	itm	2847:29:71074:71076	3956115	15	True				
ANR	3956225	Statement	","	2847:32:71077:71077	3956115	16	True				
ANR	3956226	Statement	ga	2847:34:71079:71080	3956115	17	True				
ANR	3956227	Statement	","	2847:36:71081:71081	3956115	18	True				
ANR	3956228	Statement	a	2847:38:71083:71083	3956115	19	True				
ANR	3956229	Statement	)	2847:39:71084:71084	3956115	20	True				
ANR	3956230	CompoundStatement		69:2:1402:1444	3956115	21					
ANR	3956231	IdentifierDeclStatement	const RGraphNode * gb ;	2848:2:71090:71110	3956115	0	True				
ANR	3956232	IdentifierDecl	* gb		3956115	0					
ANR	3956233	IdentifierDeclType	const RGraphNode *		3956115	0					
ANR	3956234	Identifier	gb		3956115	1					
ANR	3956235	IdentifierDeclStatement	RANode * b ;	2849:2:71114:71123	3956115	1	True				
ANR	3956236	IdentifierDecl	* b		3956115	0					
ANR	3956237	IdentifierDeclType	RANode *		3956115	0					
ANR	3956238	Identifier	b		3956115	1					
ANR	3956239	IdentifierDeclStatement	"RList * neighbours = ( RList * ) r_graph_get_neighbours ( g -> graph , ga ) ;"	2850:2:71127:71193	3956115	2	True				
ANR	3956240	IdentifierDecl	"* neighbours = ( RList * ) r_graph_get_neighbours ( g -> graph , ga )"		3956115	0					
ANR	3956241	IdentifierDeclType	RList *		3956115	0					
ANR	3956242	Identifier	neighbours		3956115	1					
ANR	3956243	AssignmentExpression	"* neighbours = ( RList * ) r_graph_get_neighbours ( g -> graph , ga )"		3956115	2		=			
ANR	3956244	Identifier	neighbours		3956115	0					
ANR	3956245	CastExpression	"( RList * ) r_graph_get_neighbours ( g -> graph , ga )"		3956115	1					
ANR	3956246	CastTarget	RList *		3956115	0					
ANR	3956247	CallExpression	"r_graph_get_neighbours ( g -> graph , ga )"		3956115	1					
ANR	3956248	Callee	r_graph_get_neighbours		3956115	0					
ANR	3956249	Identifier	r_graph_get_neighbours		3956115	0					
ANR	3956250	ArgumentList	g -> graph		3956115	1					
ANR	3956251	Argument	g -> graph		3956115	0					
ANR	3956252	PtrMemberAccess	g -> graph		3956115	0					
ANR	3956253	Identifier	g		3956115	0					
ANR	3956254	Identifier	graph		3956115	1					
ANR	3956255	Argument	ga		3956115	1					
ANR	3956256	Identifier	ga		3956115	0					
ANR	3956257	IdentifierDeclStatement	"int ax , ay , bx , by , a_x_inc , b_x_inc ;"	2851:2:71197:71233	3956115	3	True				
ANR	3956258	IdentifierDecl	ax		3956115	0					
ANR	3956259	IdentifierDeclType	int		3956115	0					
ANR	3956260	Identifier	ax		3956115	1					
ANR	3956261	IdentifierDecl	ay		3956115	1					
ANR	3956262	IdentifierDeclType	int		3956115	0					
ANR	3956263	Identifier	ay		3956115	1					
ANR	3956264	IdentifierDecl	bx		3956115	2					
ANR	3956265	IdentifierDeclType	int		3956115	0					
ANR	3956266	Identifier	bx		3956115	1					
ANR	3956267	IdentifierDecl	by		3956115	3					
ANR	3956268	IdentifierDeclType	int		3956115	0					
ANR	3956269	Identifier	by		3956115	1					
ANR	3956270	IdentifierDecl	a_x_inc		3956115	4					
ANR	3956271	IdentifierDeclType	int		3956115	0					
ANR	3956272	Identifier	a_x_inc		3956115	1					
ANR	3956273	IdentifierDecl	b_x_inc		3956115	5					
ANR	3956274	IdentifierDeclType	int		3956115	0					
ANR	3956275	Identifier	b_x_inc		3956115	1					
ANR	3956276	ExpressionStatement	tl = tm = NULL	2852:2:71237:71251	3956115	4	True				
ANR	3956277	AssignmentExpression	tl = tm = NULL		3956115	0		=			
ANR	3956278	Identifier	tl		3956115	0					
ANR	3956279	AssignmentExpression	tm = NULL		3956115	1		=			
ANR	3956280	Identifier	tm		3956115	0					
ANR	3956281	Identifier	NULL		3956115	1					
ANR	3956282	IfStatement	if ( r_cons_is_breaked ( ) )		3956115	5					
ANR	3956283	Condition	r_cons_is_breaked ( )	2853:6:71259:71278	3956115	0	True				
ANR	3956284	CallExpression	r_cons_is_breaked ( )		3956115	0					
ANR	3956285	Callee	r_cons_is_breaked		3956115	0					
ANR	3956286	Identifier	r_cons_is_breaked		3956115	0					
ANR	3956287	ArgumentList			3956115	1					
ANR	3956288	CompoundStatement		26:28:608:608	3956115	1					
ANR	3956289	BreakStatement	break ;	2854:3:71286:71291	3956115	0	True				
ANR	3956290	Statement	r_list_foreach	2857:2:71300:71313	3956115	6	True				
ANR	3956291	Statement	(	2857:17:71315:71315	3956115	7	True				
ANR	3956292	Statement	lyr	2857:18:71316:71318	3956115	8	True				
ANR	3956293	Statement	","	2857:21:71319:71319	3956115	9	True				
ANR	3956294	Statement	ito	2857:23:71321:71323	3956115	10	True				
ANR	3956295	Statement	","	2857:26:71324:71324	3956115	11	True				
ANR	3956296	Statement	tl	2857:28:71326:71327	3956115	12	True				
ANR	3956297	Statement	)	2857:30:71328:71328	3956115	13	True				
ANR	3956298	CompoundStatement		30:32:657:657	3956115	14					
ANR	3956299	IfStatement	if ( tl -> layer == a -> layer )		3956115	0					
ANR	3956300	Condition	tl -> layer == a -> layer	2858:7:71339:71359	3956115	0	True				
ANR	3956301	EqualityExpression	tl -> layer == a -> layer		3956115	0		==			
ANR	3956302	PtrMemberAccess	tl -> layer		3956115	0					
ANR	3956303	Identifier	tl		3956115	0					
ANR	3956304	Identifier	layer		3956115	1					
ANR	3956305	PtrMemberAccess	a -> layer		3956115	1					
ANR	3956306	Identifier	a		3956115	0					
ANR	3956307	Identifier	layer		3956115	1					
ANR	3956308	CompoundStatement		31:30:689:689	3956115	1					
ANR	3956309	ExpressionStatement	tm = tl	2859:4:71368:71375	3956115	0	True				
ANR	3956310	AssignmentExpression	tm = tl		3956115	0		=			
ANR	3956311	Identifier	tm		3956115	0					
ANR	3956312	Identifier	tl		3956115	1					
ANR	3956313	IfStatement	if ( g -> layout == 0 )		3956115	1					
ANR	3956314	Condition	g -> layout == 0	2860:8:71385:71398	3956115	0	True				
ANR	3956315	EqualityExpression	g -> layout == 0		3956115	0		==			
ANR	3956316	PtrMemberAccess	g -> layout		3956115	0					
ANR	3956317	Identifier	g		3956115	0					
ANR	3956318	Identifier	layout		3956115	1					
ANR	3956319	PrimaryExpression	0		3956115	1					
ANR	3956320	CompoundStatement		33:24:728:728	3956115	1					
ANR	3956321	IfStatement	if ( tm -> minx > a -> x )		3956115	0					
ANR	3956322	Condition	tm -> minx > a -> x	2861:9:71430:71444	3956115	0	True				
ANR	3956323	RelationalExpression	tm -> minx > a -> x		3956115	0		>			
ANR	3956324	PtrMemberAccess	tm -> minx		3956115	0					
ANR	3956325	Identifier	tm		3956115	0					
ANR	3956326	Identifier	minx		3956115	1					
ANR	3956327	PtrMemberAccess	a -> x		3956115	1					
ANR	3956328	Identifier	a		3956115	0					
ANR	3956329	Identifier	x		3956115	1					
ANR	3956330	CompoundStatement		34:26:774:774	3956115	1					
ANR	3956331	ExpressionStatement	tm -> minx = a -> x	2862:6:71455:71470	3956115	0	True				
ANR	3956332	AssignmentExpression	tm -> minx = a -> x		3956115	0		=			
ANR	3956333	PtrMemberAccess	tm -> minx		3956115	0					
ANR	3956334	Identifier	tm		3956115	0					
ANR	3956335	Identifier	minx		3956115	1					
ANR	3956336	PtrMemberAccess	a -> x		3956115	1					
ANR	3956337	Identifier	a		3956115	0					
ANR	3956338	Identifier	x		3956115	1					
ANR	3956339	IfStatement	if ( tm -> maxx < a -> x + a -> w )		3956115	1					
ANR	3956340	Condition	tm -> maxx < a -> x + a -> w	2864:9:71488:71509	3956115	0	True				
ANR	3956341	RelationalExpression	tm -> maxx < a -> x + a -> w		3956115	0		<			
ANR	3956342	PtrMemberAccess	tm -> maxx		3956115	0					
ANR	3956343	Identifier	tm		3956115	0					
ANR	3956344	Identifier	maxx		3956115	1					
ANR	3956345	AdditiveExpression	a -> x + a -> w		3956115	1		+			
ANR	3956346	PtrMemberAccess	a -> x		3956115	0					
ANR	3956347	Identifier	a		3956115	0					
ANR	3956348	Identifier	x		3956115	1					
ANR	3956349	PtrMemberAccess	a -> w		3956115	1					
ANR	3956350	Identifier	a		3956115	0					
ANR	3956351	Identifier	w		3956115	1					
ANR	3956352	CompoundStatement		37:33:839:839	3956115	1					
ANR	3956353	ExpressionStatement	tm -> maxx = a -> x + a -> w	2865:6:71520:71542	3956115	0	True				
ANR	3956354	AssignmentExpression	tm -> maxx = a -> x + a -> w		3956115	0		=			
ANR	3956355	PtrMemberAccess	tm -> maxx		3956115	0					
ANR	3956356	Identifier	tm		3956115	0					
ANR	3956357	Identifier	maxx		3956115	1					
ANR	3956358	AdditiveExpression	a -> x + a -> w		3956115	1		+			
ANR	3956359	PtrMemberAccess	a -> x		3956115	0					
ANR	3956360	Identifier	a		3956115	0					
ANR	3956361	Identifier	x		3956115	1					
ANR	3956362	PtrMemberAccess	a -> w		3956115	1					
ANR	3956363	Identifier	a		3956115	0					
ANR	3956364	Identifier	w		3956115	1					
ANR	3956365	ElseStatement	else		3956115	0					
ANR	3956366	CompoundStatement		40:11:889:889	3956115	0					
ANR	3956367	IfStatement	if ( tm -> minx > a -> y )		3956115	0					
ANR	3956368	Condition	tm -> minx > a -> y	2868:9:71573:71587	3956115	0	True				
ANR	3956369	RelationalExpression	tm -> minx > a -> y		3956115	0		>			
ANR	3956370	PtrMemberAccess	tm -> minx		3956115	0					
ANR	3956371	Identifier	tm		3956115	0					
ANR	3956372	Identifier	minx		3956115	1					
ANR	3956373	PtrMemberAccess	a -> y		3956115	1					
ANR	3956374	Identifier	a		3956115	0					
ANR	3956375	Identifier	y		3956115	1					
ANR	3956376	CompoundStatement		41:26:917:917	3956115	1					
ANR	3956377	ExpressionStatement	tm -> minx = a -> y	2869:6:71598:71613	3956115	0	True				
ANR	3956378	AssignmentExpression	tm -> minx = a -> y		3956115	0		=			
ANR	3956379	PtrMemberAccess	tm -> minx		3956115	0					
ANR	3956380	Identifier	tm		3956115	0					
ANR	3956381	Identifier	minx		3956115	1					
ANR	3956382	PtrMemberAccess	a -> y		3956115	1					
ANR	3956383	Identifier	a		3956115	0					
ANR	3956384	Identifier	y		3956115	1					
ANR	3956385	IfStatement	if ( tm -> maxx < a -> y + a -> h )		3956115	1					
ANR	3956386	Condition	tm -> maxx < a -> y + a -> h	2871:9:71631:71652	3956115	0	True				
ANR	3956387	RelationalExpression	tm -> maxx < a -> y + a -> h		3956115	0		<			
ANR	3956388	PtrMemberAccess	tm -> maxx		3956115	0					
ANR	3956389	Identifier	tm		3956115	0					
ANR	3956390	Identifier	maxx		3956115	1					
ANR	3956391	AdditiveExpression	a -> y + a -> h		3956115	1		+			
ANR	3956392	PtrMemberAccess	a -> y		3956115	0					
ANR	3956393	Identifier	a		3956115	0					
ANR	3956394	Identifier	y		3956115	1					
ANR	3956395	PtrMemberAccess	a -> h		3956115	1					
ANR	3956396	Identifier	a		3956115	0					
ANR	3956397	Identifier	h		3956115	1					
ANR	3956398	CompoundStatement		44:33:982:982	3956115	1					
ANR	3956399	ExpressionStatement	tm -> maxx = a -> y + a -> h	2872:6:71663:71685	3956115	0	True				
ANR	3956400	AssignmentExpression	tm -> maxx = a -> y + a -> h		3956115	0		=			
ANR	3956401	PtrMemberAccess	tm -> maxx		3956115	0					
ANR	3956402	Identifier	tm		3956115	0					
ANR	3956403	Identifier	maxx		3956115	1					
ANR	3956404	AdditiveExpression	a -> y + a -> h		3956115	1		+			
ANR	3956405	PtrMemberAccess	a -> y		3956115	0					
ANR	3956406	Identifier	a		3956115	0					
ANR	3956407	Identifier	y		3956115	1					
ANR	3956408	PtrMemberAccess	a -> h		3956115	1					
ANR	3956409	Identifier	a		3956115	0					
ANR	3956410	Identifier	h		3956115	1					
ANR	3956411	BreakStatement	break ;	2875:4:71704:71709	3956115	2	True				
ANR	3956412	IfStatement	if ( ! tm )		3956115	15					
ANR	3956413	Condition	! tm	2879:6:71727:71729	3956115	0	True				
ANR	3956414	UnaryOperationExpression	! tm		3956115	0					
ANR	3956415	UnaryOperator	!		3956115	0					
ANR	3956416	Identifier	tm		3956115	1					
ANR	3956417	CompoundStatement		52:11:1059:1059	3956115	1					
ANR	3956418	Statement	tm	2880:3:71737:71738	3956115	0	True				
ANR	3956419	Statement	=	2880:6:71740:71740	3956115	1	True				
ANR	3956420	Statement	R_NEW0	2880:8:71742:71747	3956115	2	True				
ANR	3956421	Statement	(	2880:15:71749:71749	3956115	3	True				
ANR	3956422	Statement	struct	2880:16:71750:71755	3956115	4	True				
ANR	3956423	Statement	tmplayer	2880:23:71757:71764	3956115	5	True				
ANR	3956424	Statement	)	2880:31:71765:71765	3956115	6	True				
ANR	3956425	ExpressionStatement		2880:32:71766:71766	3956115	7	True				
ANR	3956426	IfStatement	if ( tm )		3956115	8					
ANR	3956427	Condition	tm	2881:7:71775:71776	3956115	0	True				
ANR	3956428	Identifier	tm		3956115	0					
ANR	3956429	CompoundStatement		54:11:1106:1106	3956115	1					
ANR	3956430	ExpressionStatement	tm -> layer = a -> layer	2882:4:71785:71805	3956115	0	True				
ANR	3956431	AssignmentExpression	tm -> layer = a -> layer		3956115	0		=			
ANR	3956432	PtrMemberAccess	tm -> layer		3956115	0					
ANR	3956433	Identifier	tm		3956115	0					
ANR	3956434	Identifier	layer		3956115	1					
ANR	3956435	PtrMemberAccess	a -> layer		3956115	1					
ANR	3956436	Identifier	a		3956115	0					
ANR	3956437	Identifier	layer		3956115	1					
ANR	3956438	ExpressionStatement	tm -> edgectr = 0	2883:4:71811:71826	3956115	1	True				
ANR	3956439	AssignmentExpression	tm -> edgectr = 0		3956115	0		=			
ANR	3956440	PtrMemberAccess	tm -> edgectr		3956115	0					
ANR	3956441	Identifier	tm		3956115	0					
ANR	3956442	Identifier	edgectr		3956115	1					
ANR	3956443	PrimaryExpression	0		3956115	1					
ANR	3956444	ExpressionStatement	tm -> revedgectr = 0	2884:4:71832:71850	3956115	2	True				
ANR	3956445	AssignmentExpression	tm -> revedgectr = 0		3956115	0		=			
ANR	3956446	PtrMemberAccess	tm -> revedgectr		3956115	0					
ANR	3956447	Identifier	tm		3956115	0					
ANR	3956448	Identifier	revedgectr		3956115	1					
ANR	3956449	PrimaryExpression	0		3956115	1					
ANR	3956450	IfStatement	if ( g -> layout == 0 )		3956115	3					
ANR	3956451	Condition	g -> layout == 0	2885:8:71860:71873	3956115	0	True				
ANR	3956452	EqualityExpression	g -> layout == 0		3956115	0		==			
ANR	3956453	PtrMemberAccess	g -> layout		3956115	0					
ANR	3956454	Identifier	g		3956115	0					
ANR	3956455	Identifier	layout		3956115	1					
ANR	3956456	PrimaryExpression	0		3956115	1					
ANR	3956457	CompoundStatement		58:24:1203:1203	3956115	1					
ANR	3956458	ExpressionStatement	tm -> minx = a -> x	2886:5:71901:71916	3956115	0	True				
ANR	3956459	AssignmentExpression	tm -> minx = a -> x		3956115	0		=			
ANR	3956460	PtrMemberAccess	tm -> minx		3956115	0					
ANR	3956461	Identifier	tm		3956115	0					
ANR	3956462	Identifier	minx		3956115	1					
ANR	3956463	PtrMemberAccess	a -> x		3956115	1					
ANR	3956464	Identifier	a		3956115	0					
ANR	3956465	Identifier	x		3956115	1					
ANR	3956466	ExpressionStatement	tm -> maxx = a -> x + a -> w	2887:5:71923:71945	3956115	1	True				
ANR	3956467	AssignmentExpression	tm -> maxx = a -> x + a -> w		3956115	0		=			
ANR	3956468	PtrMemberAccess	tm -> maxx		3956115	0					
ANR	3956469	Identifier	tm		3956115	0					
ANR	3956470	Identifier	maxx		3956115	1					
ANR	3956471	AdditiveExpression	a -> x + a -> w		3956115	1		+			
ANR	3956472	PtrMemberAccess	a -> x		3956115	0					
ANR	3956473	Identifier	a		3956115	0					
ANR	3956474	Identifier	x		3956115	1					
ANR	3956475	PtrMemberAccess	a -> w		3956115	1					
ANR	3956476	Identifier	a		3956115	0					
ANR	3956477	Identifier	w		3956115	1					
ANR	3956478	ElseStatement	else		3956115	0					
ANR	3956479	CompoundStatement		61:11:1285:1285	3956115	0					
ANR	3956480	ExpressionStatement	tm -> minx = a -> y	2889:5:71965:71980	3956115	0	True				
ANR	3956481	AssignmentExpression	tm -> minx = a -> y		3956115	0		=			
ANR	3956482	PtrMemberAccess	tm -> minx		3956115	0					
ANR	3956483	Identifier	tm		3956115	0					
ANR	3956484	Identifier	minx		3956115	1					
ANR	3956485	PtrMemberAccess	a -> y		3956115	1					
ANR	3956486	Identifier	a		3956115	0					
ANR	3956487	Identifier	y		3956115	1					
ANR	3956488	ExpressionStatement	tm -> maxx = a -> y + a -> h	2890:5:71987:72009	3956115	1	True				
ANR	3956489	AssignmentExpression	tm -> maxx = a -> y + a -> h		3956115	0		=			
ANR	3956490	PtrMemberAccess	tm -> maxx		3956115	0					
ANR	3956491	Identifier	tm		3956115	0					
ANR	3956492	Identifier	maxx		3956115	1					
ANR	3956493	AdditiveExpression	a -> y + a -> h		3956115	1		+			
ANR	3956494	PtrMemberAccess	a -> y		3956115	0					
ANR	3956495	Identifier	a		3956115	0					
ANR	3956496	Identifier	y		3956115	1					
ANR	3956497	PtrMemberAccess	a -> h		3956115	1					
ANR	3956498	Identifier	a		3956115	0					
ANR	3956499	Identifier	h		3956115	1					
ANR	3956500	ExpressionStatement	"r_list_add_sorted ( lyr , tm , tmplayercmp )"	2892:4:72021:72061	3956115	4	True				
ANR	3956501	CallExpression	"r_list_add_sorted ( lyr , tm , tmplayercmp )"		3956115	0					
ANR	3956502	Callee	r_list_add_sorted		3956115	0					
ANR	3956503	Identifier	r_list_add_sorted		3956115	0					
ANR	3956504	ArgumentList	lyr		3956115	1					
ANR	3956505	Argument	lyr		3956115	0					
ANR	3956506	Identifier	lyr		3956115	0					
ANR	3956507	Argument	tm		3956115	1					
ANR	3956508	Identifier	tm		3956115	0					
ANR	3956509	Argument	tmplayercmp		3956115	2					
ANR	3956510	Identifier	tmplayercmp		3956115	0					
ANR	3956511	IdentifierDeclStatement	bool many = r_list_length ( neighbours ) > 2 ;	2896:2:72075:72117	3956115	16	True				
ANR	3956512	IdentifierDecl	many = r_list_length ( neighbours ) > 2		3956115	0					
ANR	3956513	IdentifierDeclType	bool		3956115	0					
ANR	3956514	Identifier	many		3956115	1					
ANR	3956515	AssignmentExpression	many = r_list_length ( neighbours ) > 2		3956115	2		=			
ANR	3956516	Identifier	many		3956115	0					
ANR	3956517	RelationalExpression	r_list_length ( neighbours ) > 2		3956115	1		>			
ANR	3956518	CallExpression	r_list_length ( neighbours )		3956115	0					
ANR	3956519	Callee	r_list_length		3956115	0					
ANR	3956520	Identifier	r_list_length		3956115	0					
ANR	3956521	ArgumentList	neighbours		3956115	1					
ANR	3956522	Argument	neighbours		3956115	0					
ANR	3956523	Identifier	neighbours		3956115	0					
ANR	3956524	PrimaryExpression	2		3956115	1					
ANR	3956525	IfStatement	if ( many && ! g -> is_callgraph )		3956115	17					
ANR	3956526	Condition	many && ! g -> is_callgraph	2898:6:72126:72149	3956115	0	True				
ANR	3956527	AndExpression	many && ! g -> is_callgraph		3956115	0		&&			
ANR	3956528	Identifier	many		3956115	0					
ANR	3956529	UnaryOperationExpression	! g -> is_callgraph		3956115	1					
ANR	3956530	UnaryOperator	!		3956115	0					
ANR	3956531	PtrMemberAccess	g -> is_callgraph		3956115	1					
ANR	3956532	Identifier	g		3956115	0					
ANR	3956533	Identifier	is_callgraph		3956115	1					
ANR	3956534	CompoundStatement		71:32:1479:1479	3956115	1					
ANR	3956535	ExpressionStatement	ga -> out_nodes -> sorted = false	2899:3:72157:72186	3956115	0	True				
ANR	3956536	AssignmentExpression	ga -> out_nodes -> sorted = false		3956115	0		=			
ANR	3956537	PtrMemberAccess	ga -> out_nodes -> sorted		3956115	0					
ANR	3956538	PtrMemberAccess	ga -> out_nodes		3956115	0					
ANR	3956539	Identifier	ga		3956115	0					
ANR	3956540	Identifier	out_nodes		3956115	1					
ANR	3956541	Identifier	sorted		3956115	1					
ANR	3956542	Identifier	false		3956115	1					
ANR	3956543	ExpressionStatement	"r_list_sort ( neighbours , first_x_cmp )"	2900:3:72191:72228	3956115	1	True				
ANR	3956544	CallExpression	"r_list_sort ( neighbours , first_x_cmp )"		3956115	0					
ANR	3956545	Callee	r_list_sort		3956115	0					
ANR	3956546	Identifier	r_list_sort		3956115	0					
ANR	3956547	ArgumentList	neighbours		3956115	1					
ANR	3956548	Argument	neighbours		3956115	0					
ANR	3956549	Identifier	neighbours		3956115	0					
ANR	3956550	Argument	first_x_cmp		3956115	1					
ANR	3956551	Identifier	first_x_cmp		3956115	0					
ANR	3956552	Statement	graph_foreach_anode	2903:2:72237:72255	3956115	18	True				
ANR	3956553	Statement	(	2903:22:72257:72257	3956115	19	True				
ANR	3956554	Statement	neighbours	2903:23:72258:72267	3956115	20	True				
ANR	3956555	Statement	","	2903:33:72268:72268	3956115	21	True				
ANR	3956556	Statement	itn	2903:35:72270:72272	3956115	22	True				
ANR	3956557	Statement	","	2903:38:72273:72273	3956115	23	True				
ANR	3956558	Statement	gb	2903:40:72275:72276	3956115	24	True				
ANR	3956559	Statement	","	2903:42:72277:72277	3956115	25	True				
ANR	3956560	Statement	b	2903:44:72279:72279	3956115	26	True				
ANR	3956561	Statement	)	2903:45:72280:72280	3956115	27	True				
ANR	3956562	CompoundStatement		80:3:1707:1731	3956115	28					
ANR	3956563	ExpressionStatement	"out_nth = get_edge_number ( g , a , b , true )"	2904:3:72287:72328	3956115	0	True				
ANR	3956564	AssignmentExpression	"out_nth = get_edge_number ( g , a , b , true )"		3956115	0		=			
ANR	3956565	Identifier	out_nth		3956115	0					
ANR	3956566	CallExpression	"get_edge_number ( g , a , b , true )"		3956115	1					
ANR	3956567	Callee	get_edge_number		3956115	0					
ANR	3956568	Identifier	get_edge_number		3956115	0					
ANR	3956569	ArgumentList	g		3956115	1					
ANR	3956570	Argument	g		3956115	0					
ANR	3956571	Identifier	g		3956115	0					
ANR	3956572	Argument	a		3956115	1					
ANR	3956573	Identifier	a		3956115	0					
ANR	3956574	Argument	b		3956115	2					
ANR	3956575	Identifier	b		3956115	0					
ANR	3956576	Argument	true		3956115	3					
ANR	3956577	Identifier	true		3956115	0					
ANR	3956578	ExpressionStatement	"in_nth = get_edge_number ( g , a , b , false )"	2905:3:72333:72374	3956115	1	True				
ANR	3956579	AssignmentExpression	"in_nth = get_edge_number ( g , a , b , false )"		3956115	0		=			
ANR	3956580	Identifier	in_nth		3956115	0					
ANR	3956581	CallExpression	"get_edge_number ( g , a , b , false )"		3956115	1					
ANR	3956582	Callee	get_edge_number		3956115	0					
ANR	3956583	Identifier	get_edge_number		3956115	0					
ANR	3956584	ArgumentList	g		3956115	1					
ANR	3956585	Argument	g		3956115	0					
ANR	3956586	Identifier	g		3956115	0					
ANR	3956587	Argument	a		3956115	1					
ANR	3956588	Identifier	a		3956115	0					
ANR	3956589	Argument	b		3956115	2					
ANR	3956590	Identifier	b		3956115	0					
ANR	3956591	Argument	false		3956115	3					
ANR	3956592	Identifier	false		3956115	0					
ANR	3956593	IdentifierDeclStatement	bool parent_many = false ;	2907:3:72380:72404	3956115	2	True				
ANR	3956594	IdentifierDecl	parent_many = false		3956115	0					
ANR	3956595	IdentifierDeclType	bool		3956115	0					
ANR	3956596	Identifier	parent_many		3956115	1					
ANR	3956597	AssignmentExpression	parent_many = false		3956115	2		=			
ANR	3956598	Identifier	false		3956115	0					
ANR	3956599	Identifier	false		3956115	1					
ANR	3956600	IfStatement	if ( a -> is_dummy )		3956115	3					
ANR	3956601	Condition	a -> is_dummy	2908:7:72413:72423	3956115	0	True				
ANR	3956602	PtrMemberAccess	a -> is_dummy		3956115	0					
ANR	3956603	Identifier	a		3956115	0					
ANR	3956604	Identifier	is_dummy		3956115	1					
ANR	3956605	CompoundStatement		82:4:1759:1834	3956115	1					
ANR	3956606	IdentifierDeclStatement	RANode * in = ( RANode * ) ( ( ( RGraphNode * ) r_list_first ( ga -> in_nodes ) ) -> data ) ;	2909:4:72432:72507	3956115	0	True				
ANR	3956607	IdentifierDecl	* in = ( RANode * ) ( ( ( RGraphNode * ) r_list_first ( ga -> in_nodes ) ) -> data )		3956115	0					
ANR	3956608	IdentifierDeclType	RANode *		3956115	0					
ANR	3956609	Identifier	in		3956115	1					
ANR	3956610	AssignmentExpression	* in = ( RANode * ) ( ( ( RGraphNode * ) r_list_first ( ga -> in_nodes ) ) -> data )		3956115	2		=			
ANR	3956611	Identifier	in		3956115	0					
ANR	3956612	CastExpression	( RANode * ) ( ( ( RGraphNode * ) r_list_first ( ga -> in_nodes ) ) -> data )		3956115	1					
ANR	3956613	CastTarget	RANode *		3956115	0					
ANR	3956614	PtrMemberAccess	( ( RGraphNode * ) r_list_first ( ga -> in_nodes ) ) -> data		3956115	1					
ANR	3956615	CastExpression	( RGraphNode * ) r_list_first ( ga -> in_nodes )		3956115	0					
ANR	3956616	CastTarget	RGraphNode *		3956115	0					
ANR	3956617	CallExpression	r_list_first ( ga -> in_nodes )		3956115	1					
ANR	3956618	Callee	r_list_first		3956115	0					
ANR	3956619	Identifier	r_list_first		3956115	0					
ANR	3956620	ArgumentList	ga -> in_nodes		3956115	1					
ANR	3956621	Argument	ga -> in_nodes		3956115	0					
ANR	3956622	PtrMemberAccess	ga -> in_nodes		3956115	0					
ANR	3956623	Identifier	ga		3956115	0					
ANR	3956624	Identifier	in_nodes		3956115	1					
ANR	3956625	Identifier	data		3956115	1					
ANR	3956626	WhileStatement	while ( in && in -> is_dummy )		3956115	1					
ANR	3956627	Condition	in && in -> is_dummy	2910:11:72520:72537	3956115	0	True				
ANR	3956628	AndExpression	in && in -> is_dummy		3956115	0		&&			
ANR	3956629	Identifier	in		3956115	0					
ANR	3956630	PtrMemberAccess	in -> is_dummy		3956115	1					
ANR	3956631	Identifier	in		3956115	0					
ANR	3956632	Identifier	is_dummy		3956115	1					
ANR	3956633	CompoundStatement		83:31:1867:1867	3956115	1					
ANR	3956634	ExpressionStatement	in = ( RANode * ) ( ( ( RGraphNode * ) r_list_first ( ( in -> gnode ) -> in_nodes ) ) -> data )	2911:5:72547:72623	3956115	0	True				
ANR	3956635	AssignmentExpression	in = ( RANode * ) ( ( ( RGraphNode * ) r_list_first ( ( in -> gnode ) -> in_nodes ) ) -> data )		3956115	0		=			
ANR	3956636	Identifier	in		3956115	0					
ANR	3956637	CastExpression	( RANode * ) ( ( ( RGraphNode * ) r_list_first ( ( in -> gnode ) -> in_nodes ) ) -> data )		3956115	1					
ANR	3956638	CastTarget	RANode *		3956115	0					
ANR	3956639	PtrMemberAccess	( ( RGraphNode * ) r_list_first ( ( in -> gnode ) -> in_nodes ) ) -> data		3956115	1					
ANR	3956640	CastExpression	( RGraphNode * ) r_list_first ( ( in -> gnode ) -> in_nodes )		3956115	0					
ANR	3956641	CastTarget	RGraphNode *		3956115	0					
ANR	3956642	CallExpression	r_list_first ( ( in -> gnode ) -> in_nodes )		3956115	1					
ANR	3956643	Callee	r_list_first		3956115	0					
ANR	3956644	Identifier	r_list_first		3956115	0					
ANR	3956645	ArgumentList	( in -> gnode ) -> in_nodes		3956115	1					
ANR	3956646	Argument	( in -> gnode ) -> in_nodes		3956115	0					
ANR	3956647	PtrMemberAccess	( in -> gnode ) -> in_nodes		3956115	0					
ANR	3956648	PtrMemberAccess	in -> gnode		3956115	0					
ANR	3956649	Identifier	in		3956115	0					
ANR	3956650	Identifier	gnode		3956115	1					
ANR	3956651	Identifier	in_nodes		3956115	1					
ANR	3956652	Identifier	data		3956115	1					
ANR	3956653	IfStatement	if ( in && in -> gnode )		3956115	2					
ANR	3956654	Condition	in && in -> gnode	2913:8:72639:72653	3956115	0	True				
ANR	3956655	AndExpression	in && in -> gnode		3956115	0		&&			
ANR	3956656	Identifier	in		3956115	0					
ANR	3956657	PtrMemberAccess	in -> gnode		3956115	1					
ANR	3956658	Identifier	in		3956115	0					
ANR	3956659	Identifier	gnode		3956115	1					
ANR	3956660	CompoundStatement		86:25:1983:1983	3956115	1					
ANR	3956661	ExpressionStatement	parent_many = r_list_length ( in -> gnode -> out_nodes ) > 2	2914:5:72663:72717	3956115	0	True				
ANR	3956662	AssignmentExpression	parent_many = r_list_length ( in -> gnode -> out_nodes ) > 2		3956115	0		=			
ANR	3956663	Identifier	parent_many		3956115	0					
ANR	3956664	RelationalExpression	r_list_length ( in -> gnode -> out_nodes ) > 2		3956115	1		>			
ANR	3956665	CallExpression	r_list_length ( in -> gnode -> out_nodes )		3956115	0					
ANR	3956666	Callee	r_list_length		3956115	0					
ANR	3956667	Identifier	r_list_length		3956115	0					
ANR	3956668	ArgumentList	in -> gnode -> out_nodes		3956115	1					
ANR	3956669	Argument	in -> gnode -> out_nodes		3956115	0					
ANR	3956670	PtrMemberAccess	in -> gnode -> out_nodes		3956115	0					
ANR	3956671	PtrMemberAccess	in -> gnode		3956115	0					
ANR	3956672	Identifier	in		3956115	0					
ANR	3956673	Identifier	gnode		3956115	1					
ANR	3956674	Identifier	out_nodes		3956115	1					
ANR	3956675	PrimaryExpression	2		3956115	1					
ANR	3956676	ElseStatement	else		3956115	0					
ANR	3956677	CompoundStatement		88:11:2057:2057	3956115	0					
ANR	3956678	ExpressionStatement	parent_many = false	2916:5:72737:72756	3956115	0	True				
ANR	3956679	AssignmentExpression	parent_many = false		3956115	0		=			
ANR	3956680	Identifier	parent_many		3956115	0					
ANR	3956681	Identifier	false		3956115	1					
ANR	3956682	ExpressionStatement	style . dot_style = DOT_STYLE_NORMAL	2920:3:72773:72807	3956115	4	True				
ANR	3956683	AssignmentExpression	style . dot_style = DOT_STYLE_NORMAL		3956115	0		=			
ANR	3956684	MemberAccess	style . dot_style		3956115	0					
ANR	3956685	Identifier	style		3956115	0					
ANR	3956686	Identifier	dot_style		3956115	1					
ANR	3956687	Identifier	DOT_STYLE_NORMAL		3956115	1					
ANR	3956688	IfStatement	if ( many || parent_many )		3956115	5					
ANR	3956689	Condition	many || parent_many	2921:7:72816:72834	3956115	0	True				
ANR	3956690	OrExpression	many || parent_many		3956115	0		||			
ANR	3956691	Identifier	many		3956115	0					
ANR	3956692	Identifier	parent_many		3956115	1					
ANR	3956693	CompoundStatement		94:28:2164:2164	3956115	1					
ANR	3956694	ExpressionStatement	style . color = LINE_UNCJMP	2922:4:72843:72868	3956115	0	True				
ANR	3956695	AssignmentExpression	style . color = LINE_UNCJMP		3956115	0		=			
ANR	3956696	MemberAccess	style . color		3956115	0					
ANR	3956697	Identifier	style		3956115	0					
ANR	3956698	Identifier	color		3956115	1					
ANR	3956699	Identifier	LINE_UNCJMP		3956115	1					
ANR	3956700	ElseStatement	else		3956115	0					
ANR	3956701	CompoundStatement		96:10:2207:2207	3956115	0					
ANR	3956702	SwitchStatement	switch ( out_nth )		3956115	0					
ANR	3956703	Condition	out_nth	2924:12:72894:72900	3956115	0	True				
ANR	3956704	Identifier	out_nth		3956115	0					
ANR	3956705	CompoundStatement		97:21:2230:2230	3956115	1					
ANR	3956706	Label	case 0 :	2925:4:72909:72915	3956115	0	True				
ANR	3956707	ExpressionStatement	style . color = LINE_TRUE	2926:5:72922:72945	3956115	1	True				
ANR	3956708	AssignmentExpression	style . color = LINE_TRUE		3956115	0		=			
ANR	3956709	MemberAccess	style . color		3956115	0					
ANR	3956710	Identifier	style		3956115	0					
ANR	3956711	Identifier	color		3956115	1					
ANR	3956712	Identifier	LINE_TRUE		3956115	1					
ANR	3956713	ExpressionStatement	style . dot_style = DOT_STYLE_CONDITIONAL	2927:5:72952:72991	3956115	2	True				
ANR	3956714	AssignmentExpression	style . dot_style = DOT_STYLE_CONDITIONAL		3956115	0		=			
ANR	3956715	MemberAccess	style . dot_style		3956115	0					
ANR	3956716	Identifier	style		3956115	0					
ANR	3956717	Identifier	dot_style		3956115	1					
ANR	3956718	Identifier	DOT_STYLE_CONDITIONAL		3956115	1					
ANR	3956719	BreakStatement	break ;	2928:5:72998:73003	3956115	3	True				
ANR	3956720	Label	case 1 :	2929:4:73009:73015	3956115	4	True				
ANR	3956721	ExpressionStatement	style . color = LINE_FALSE	2930:5:73022:73046	3956115	5	True				
ANR	3956722	AssignmentExpression	style . color = LINE_FALSE		3956115	0		=			
ANR	3956723	MemberAccess	style . color		3956115	0					
ANR	3956724	Identifier	style		3956115	0					
ANR	3956725	Identifier	color		3956115	1					
ANR	3956726	Identifier	LINE_FALSE		3956115	1					
ANR	3956727	ExpressionStatement	style . dot_style = DOT_STYLE_CONDITIONAL	2931:5:73053:73092	3956115	6	True				
ANR	3956728	AssignmentExpression	style . dot_style = DOT_STYLE_CONDITIONAL		3956115	0		=			
ANR	3956729	MemberAccess	style . dot_style		3956115	0					
ANR	3956730	Identifier	style		3956115	0					
ANR	3956731	Identifier	dot_style		3956115	1					
ANR	3956732	Identifier	DOT_STYLE_CONDITIONAL		3956115	1					
ANR	3956733	BreakStatement	break ;	2932:5:73099:73104	3956115	7	True				
ANR	3956734	Statement	case	2933:4:73110:73113	3956115	8	True				
ANR	3956735	Statement	-	2933:9:73115:73115	3956115	9	True				
ANR	3956736	Label	1 :	2933:10:73116:73117	3956115	10	True				
ANR	3956737	ExpressionStatement	style . color = LINE_UNCJMP	2934:5:73124:73149	3956115	11	True				
ANR	3956738	AssignmentExpression	style . color = LINE_UNCJMP		3956115	0		=			
ANR	3956739	MemberAccess	style . color		3956115	0					
ANR	3956740	Identifier	style		3956115	0					
ANR	3956741	Identifier	color		3956115	1					
ANR	3956742	Identifier	LINE_UNCJMP		3956115	1					
ANR	3956743	BreakStatement	break ;	2935:5:73156:73161	3956115	12	True				
ANR	3956744	Label	default :	2936:4:73167:73174	3956115	13	True				
ANR	3956745	Identifier	default		3956115	0					
ANR	3956746	ExpressionStatement	style . color = LINE_NONE	2937:5:73181:73204	3956115	14	True				
ANR	3956747	AssignmentExpression	style . color = LINE_NONE		3956115	0		=			
ANR	3956748	MemberAccess	style . color		3956115	0					
ANR	3956749	Identifier	style		3956115	0					
ANR	3956750	Identifier	color		3956115	1					
ANR	3956751	Identifier	LINE_NONE		3956115	1					
ANR	3956752	BreakStatement	break ;	2938:5:73211:73216	3956115	15	True				
ANR	3956753	SwitchStatement	switch ( g -> layout )		3956115	6					
ANR	3956754	Condition	g -> layout	2942:11:73241:73249	3956115	0	True				
ANR	3956755	PtrMemberAccess	g -> layout		3956115	0					
ANR	3956756	Identifier	g		3956115	0					
ANR	3956757	Identifier	layout		3956115	1					
ANR	3956758	CompoundStatement		115:22:2579:2579	3956115	1					
ANR	3956759	Label	case 0 :	2943:3:73257:73263	3956115	0	True				
ANR	3956760	Label	default :	2944:3:73268:73275	3956115	1	True				
ANR	3956761	Identifier	default		3956115	0					
ANR	3956762	ExpressionStatement	style . symbol = ( ! g -> hints || a -> is_dummy ) ? LINE_NOSYM_VERT : style . color	2945:4:73281:73354	3956115	2	True				
ANR	3956763	AssignmentExpression	style . symbol = ( ! g -> hints || a -> is_dummy ) ? LINE_NOSYM_VERT : style . color		3956115	0		=			
ANR	3956764	MemberAccess	style . symbol		3956115	0					
ANR	3956765	Identifier	style		3956115	0					
ANR	3956766	Identifier	symbol		3956115	1					
ANR	3956767	ConditionalExpression	( ! g -> hints || a -> is_dummy ) ? LINE_NOSYM_VERT : style . color		3956115	1					
ANR	3956768	Condition	! g -> hints || a -> is_dummy		3956115	0					
ANR	3956769	OrExpression	! g -> hints || a -> is_dummy		3956115	0		||			
ANR	3956770	UnaryOperationExpression	! g -> hints		3956115	0					
ANR	3956771	UnaryOperator	!		3956115	0					
ANR	3956772	PtrMemberAccess	g -> hints		3956115	1					
ANR	3956773	Identifier	g		3956115	0					
ANR	3956774	Identifier	hints		3956115	1					
ANR	3956775	PtrMemberAccess	a -> is_dummy		3956115	1					
ANR	3956776	Identifier	a		3956115	0					
ANR	3956777	Identifier	is_dummy		3956115	1					
ANR	3956778	Identifier	LINE_NOSYM_VERT		3956115	1					
ANR	3956779	MemberAccess	style . color		3956115	2					
ANR	3956780	Identifier	style		3956115	0					
ANR	3956781	Identifier	color		3956115	1					
ANR	3956782	IfStatement	if ( a -> y + a -> h > b -> y )		3956115	3					
ANR	3956783	Condition	a -> y + a -> h > b -> y	2946:8:73364:73381	3956115	0	True				
ANR	3956784	RelationalExpression	a -> y + a -> h > b -> y		3956115	0		>			
ANR	3956785	AdditiveExpression	a -> y + a -> h		3956115	0		+			
ANR	3956786	PtrMemberAccess	a -> y		3956115	0					
ANR	3956787	Identifier	a		3956115	0					
ANR	3956788	Identifier	y		3956115	1					
ANR	3956789	PtrMemberAccess	a -> h		3956115	1					
ANR	3956790	Identifier	a		3956115	0					
ANR	3956791	Identifier	h		3956115	1					
ANR	3956792	PtrMemberAccess	b -> y		3956115	1					
ANR	3956793	Identifier	b		3956115	0					
ANR	3956794	Identifier	y		3956115	1					
ANR	3956795	CompoundStatement		119:28:2711:2711	3956115	1					
ANR	3956796	ExpressionStatement	style . dot_style = DOT_STYLE_BACKEDGE	2947:5:73391:73427	3956115	0	True				
ANR	3956797	AssignmentExpression	style . dot_style = DOT_STYLE_BACKEDGE		3956115	0		=			
ANR	3956798	MemberAccess	style . dot_style		3956115	0					
ANR	3956799	Identifier	style		3956115	0					
ANR	3956800	Identifier	dot_style		3956115	1					
ANR	3956801	Identifier	DOT_STYLE_BACKEDGE		3956115	1					
ANR	3956802	ExpressionStatement	a_x_inc = R_EDGES_X_INC + 2 * ( out_nth + 1 )	2950:4:73440:73483	3956115	4	True				
ANR	3956803	AssignmentExpression	a_x_inc = R_EDGES_X_INC + 2 * ( out_nth + 1 )		3956115	0		=			
ANR	3956804	Identifier	a_x_inc		3956115	0					
ANR	3956805	AdditiveExpression	R_EDGES_X_INC + 2 * ( out_nth + 1 )		3956115	1		+			
ANR	3956806	Identifier	R_EDGES_X_INC		3956115	0					
ANR	3956807	MultiplicativeExpression	2 * ( out_nth + 1 )		3956115	1		*			
ANR	3956808	PrimaryExpression	2		3956115	0					
ANR	3956809	AdditiveExpression	out_nth + 1		3956115	1		+			
ANR	3956810	Identifier	out_nth		3956115	0					
ANR	3956811	PrimaryExpression	1		3956115	1					
ANR	3956812	ExpressionStatement	b_x_inc = R_EDGES_X_INC + 2 * ( in_nth + 1 )	2951:4:73489:73531	3956115	5	True				
ANR	3956813	AssignmentExpression	b_x_inc = R_EDGES_X_INC + 2 * ( in_nth + 1 )		3956115	0		=			
ANR	3956814	Identifier	b_x_inc		3956115	0					
ANR	3956815	AdditiveExpression	R_EDGES_X_INC + 2 * ( in_nth + 1 )		3956115	1		+			
ANR	3956816	Identifier	R_EDGES_X_INC		3956115	0					
ANR	3956817	MultiplicativeExpression	2 * ( in_nth + 1 )		3956115	1		*			
ANR	3956818	PrimaryExpression	2		3956115	0					
ANR	3956819	AdditiveExpression	in_nth + 1		3956115	1		+			
ANR	3956820	Identifier	in_nth		3956115	0					
ANR	3956821	PrimaryExpression	1		3956115	1					
ANR	3956822	ExpressionStatement	bx = b -> is_dummy ? b -> x : ( b -> x + b_x_inc )	2953:4:73538:73580	3956115	6	True				
ANR	3956823	AssignmentExpression	bx = b -> is_dummy ? b -> x : ( b -> x + b_x_inc )		3956115	0		=			
ANR	3956824	Identifier	bx		3956115	0					
ANR	3956825	ConditionalExpression	b -> is_dummy ? b -> x : ( b -> x + b_x_inc )		3956115	1					
ANR	3956826	Condition	b -> is_dummy		3956115	0					
ANR	3956827	PtrMemberAccess	b -> is_dummy		3956115	0					
ANR	3956828	Identifier	b		3956115	0					
ANR	3956829	Identifier	is_dummy		3956115	1					
ANR	3956830	PtrMemberAccess	b -> x		3956115	1					
ANR	3956831	Identifier	b		3956115	0					
ANR	3956832	Identifier	x		3956115	1					
ANR	3956833	AdditiveExpression	b -> x + b_x_inc		3956115	2		+			
ANR	3956834	PtrMemberAccess	b -> x		3956115	0					
ANR	3956835	Identifier	b		3956115	0					
ANR	3956836	Identifier	x		3956115	1					
ANR	3956837	Identifier	b_x_inc		3956115	1					
ANR	3956838	ExpressionStatement	ay = a -> y + a -> h	2954:4:73586:73602	3956115	7	True				
ANR	3956839	AssignmentExpression	ay = a -> y + a -> h		3956115	0		=			
ANR	3956840	Identifier	ay		3956115	0					
ANR	3956841	AdditiveExpression	a -> y + a -> h		3956115	1		+			
ANR	3956842	PtrMemberAccess	a -> y		3956115	0					
ANR	3956843	Identifier	a		3956115	0					
ANR	3956844	Identifier	y		3956115	1					
ANR	3956845	PtrMemberAccess	a -> h		3956115	1					
ANR	3956846	Identifier	a		3956115	0					
ANR	3956847	Identifier	h		3956115	1					
ANR	3956848	ExpressionStatement	by = b -> y - 1	2955:4:73608:73621	3956115	8	True				
ANR	3956849	AssignmentExpression	by = b -> y - 1		3956115	0		=			
ANR	3956850	Identifier	by		3956115	0					
ANR	3956851	AdditiveExpression	b -> y - 1		3956115	1		-			
ANR	3956852	PtrMemberAccess	b -> y		3956115	0					
ANR	3956853	Identifier	b		3956115	0					
ANR	3956854	Identifier	y		3956115	1					
ANR	3956855	PrimaryExpression	1		3956115	1					
ANR	3956856	IfStatement	if ( many && ! g -> is_callgraph )		3956115	9					
ANR	3956857	Condition	many && ! g -> is_callgraph	2957:8:73632:73655	3956115	0	True				
ANR	3956858	AndExpression	many && ! g -> is_callgraph		3956115	0		&&			
ANR	3956859	Identifier	many		3956115	0					
ANR	3956860	UnaryOperationExpression	! g -> is_callgraph		3956115	1					
ANR	3956861	UnaryOperator	!		3956115	0					
ANR	3956862	PtrMemberAccess	g -> is_callgraph		3956115	1					
ANR	3956863	Identifier	g		3956115	0					
ANR	3956864	Identifier	is_callgraph		3956115	1					
ANR	3956865	CompoundStatement		131:5:2992:3044	3956115	1					
ANR	3956866	IdentifierDeclStatement	int t = R_EDGES_X_INC + 2 * ( neighbours -> length + 1 ) ;	2958:5:73665:73717	3956115	0	True				
ANR	3956867	IdentifierDecl	t = R_EDGES_X_INC + 2 * ( neighbours -> length + 1 )		3956115	0					
ANR	3956868	IdentifierDeclType	int		3956115	0					
ANR	3956869	Identifier	t		3956115	1					
ANR	3956870	AssignmentExpression	t = R_EDGES_X_INC + 2 * ( neighbours -> length + 1 )		3956115	2		=			
ANR	3956871	Identifier	t		3956115	0					
ANR	3956872	AdditiveExpression	R_EDGES_X_INC + 2 * ( neighbours -> length + 1 )		3956115	1		+			
ANR	3956873	Identifier	R_EDGES_X_INC		3956115	0					
ANR	3956874	MultiplicativeExpression	2 * ( neighbours -> length + 1 )		3956115	1		*			
ANR	3956875	PrimaryExpression	2		3956115	0					
ANR	3956876	AdditiveExpression	neighbours -> length + 1		3956115	1		+			
ANR	3956877	PtrMemberAccess	neighbours -> length		3956115	0					
ANR	3956878	Identifier	neighbours		3956115	0					
ANR	3956879	Identifier	length		3956115	1					
ANR	3956880	PrimaryExpression	1		3956115	1					
ANR	3956881	ExpressionStatement	ax = a -> is_dummy ? a -> x : ( a -> x + a -> w / 2 + ( t / 2 - a_x_inc ) )	2959:5:73724:73783	3956115	1	True				
ANR	3956882	AssignmentExpression	ax = a -> is_dummy ? a -> x : ( a -> x + a -> w / 2 + ( t / 2 - a_x_inc ) )		3956115	0		=			
ANR	3956883	Identifier	ax		3956115	0					
ANR	3956884	ConditionalExpression	a -> is_dummy ? a -> x : ( a -> x + a -> w / 2 + ( t / 2 - a_x_inc ) )		3956115	1					
ANR	3956885	Condition	a -> is_dummy		3956115	0					
ANR	3956886	PtrMemberAccess	a -> is_dummy		3956115	0					
ANR	3956887	Identifier	a		3956115	0					
ANR	3956888	Identifier	is_dummy		3956115	1					
ANR	3956889	PtrMemberAccess	a -> x		3956115	1					
ANR	3956890	Identifier	a		3956115	0					
ANR	3956891	Identifier	x		3956115	1					
ANR	3956892	AdditiveExpression	a -> x + a -> w / 2 + ( t / 2 - a_x_inc )		3956115	2		+			
ANR	3956893	PtrMemberAccess	a -> x		3956115	0					
ANR	3956894	Identifier	a		3956115	0					
ANR	3956895	Identifier	x		3956115	1					
ANR	3956896	AdditiveExpression	a -> w / 2 + ( t / 2 - a_x_inc )		3956115	1		+			
ANR	3956897	MultiplicativeExpression	a -> w / 2		3956115	0		/			
ANR	3956898	PtrMemberAccess	a -> w		3956115	0					
ANR	3956899	Identifier	a		3956115	0					
ANR	3956900	Identifier	w		3956115	1					
ANR	3956901	PrimaryExpression	2		3956115	1					
ANR	3956902	AdditiveExpression	t / 2 - a_x_inc		3956115	1		-			
ANR	3956903	MultiplicativeExpression	t / 2		3956115	0		/			
ANR	3956904	Identifier	t		3956115	0					
ANR	3956905	PrimaryExpression	2		3956115	1					
ANR	3956906	Identifier	a_x_inc		3956115	1					
ANR	3956907	ExpressionStatement	bendpoint = bx < ax ? neighbours -> length - out_nth : out_nth	2960:5:73790:73851	3956115	2	True				
ANR	3956908	AssignmentExpression	bendpoint = bx < ax ? neighbours -> length - out_nth : out_nth		3956115	0		=			
ANR	3956909	Identifier	bendpoint		3956115	0					
ANR	3956910	ConditionalExpression	bx < ax ? neighbours -> length - out_nth : out_nth		3956115	1					
ANR	3956911	Condition	bx < ax		3956115	0					
ANR	3956912	RelationalExpression	bx < ax		3956115	0		<			
ANR	3956913	Identifier	bx		3956115	0					
ANR	3956914	Identifier	ax		3956115	1					
ANR	3956915	AdditiveExpression	neighbours -> length - out_nth		3956115	1		-			
ANR	3956916	PtrMemberAccess	neighbours -> length		3956115	0					
ANR	3956917	Identifier	neighbours		3956115	0					
ANR	3956918	Identifier	length		3956115	1					
ANR	3956919	Identifier	out_nth		3956115	1					
ANR	3956920	Identifier	out_nth		3956115	2					
ANR	3956921	ElseStatement	else		3956115	0					
ANR	3956922	CompoundStatement		134:11:3191:3191	3956115	0					
ANR	3956923	ExpressionStatement	ax = a -> is_dummy ? a -> x : ( a -> x + a_x_inc )	2962:5:73871:73913	3956115	0	True				
ANR	3956924	AssignmentExpression	ax = a -> is_dummy ? a -> x : ( a -> x + a_x_inc )		3956115	0		=			
ANR	3956925	Identifier	ax		3956115	0					
ANR	3956926	ConditionalExpression	a -> is_dummy ? a -> x : ( a -> x + a_x_inc )		3956115	1					
ANR	3956927	Condition	a -> is_dummy		3956115	0					
ANR	3956928	PtrMemberAccess	a -> is_dummy		3956115	0					
ANR	3956929	Identifier	a		3956115	0					
ANR	3956930	Identifier	is_dummy		3956115	1					
ANR	3956931	PtrMemberAccess	a -> x		3956115	1					
ANR	3956932	Identifier	a		3956115	0					
ANR	3956933	Identifier	x		3956115	1					
ANR	3956934	AdditiveExpression	a -> x + a_x_inc		3956115	2		+			
ANR	3956935	PtrMemberAccess	a -> x		3956115	0					
ANR	3956936	Identifier	a		3956115	0					
ANR	3956937	Identifier	x		3956115	1					
ANR	3956938	Identifier	a_x_inc		3956115	1					
ANR	3956939	ExpressionStatement	bendpoint = tm -> edgectr	2963:5:73920:73943	3956115	1	True				
ANR	3956940	AssignmentExpression	bendpoint = tm -> edgectr		3956115	0		=			
ANR	3956941	Identifier	bendpoint		3956115	0					
ANR	3956942	PtrMemberAccess	tm -> edgectr		3956115	1					
ANR	3956943	Identifier	tm		3956115	0					
ANR	3956944	Identifier	edgectr		3956115	1					
ANR	3956945	IfStatement	if ( ! a -> is_dummy && itn == neighbours -> head && out_nth == 0 && bx > ax )		3956115	10					
ANR	3956946	Condition	! a -> is_dummy && itn == neighbours -> head && out_nth == 0 && bx > ax	2966:8:73960:74025	3956115	0	True				
ANR	3956947	AndExpression	! a -> is_dummy && itn == neighbours -> head && out_nth == 0 && bx > ax		3956115	0		&&			
ANR	3956948	UnaryOperationExpression	! a -> is_dummy		3956115	0					
ANR	3956949	UnaryOperator	!		3956115	0					
ANR	3956950	PtrMemberAccess	a -> is_dummy		3956115	1					
ANR	3956951	Identifier	a		3956115	0					
ANR	3956952	Identifier	is_dummy		3956115	1					
ANR	3956953	AndExpression	itn == neighbours -> head && out_nth == 0 && bx > ax		3956115	1		&&			
ANR	3956954	EqualityExpression	itn == neighbours -> head		3956115	0		==			
ANR	3956955	Identifier	itn		3956115	0					
ANR	3956956	PtrMemberAccess	neighbours -> head		3956115	1					
ANR	3956957	Identifier	neighbours		3956115	0					
ANR	3956958	Identifier	head		3956115	1					
ANR	3956959	AndExpression	out_nth == 0 && bx > ax		3956115	1		&&			
ANR	3956960	EqualityExpression	out_nth == 0		3956115	0		==			
ANR	3956961	Identifier	out_nth		3956115	0					
ANR	3956962	PrimaryExpression	0		3956115	1					
ANR	3956963	RelationalExpression	bx > ax		3956115	1		>			
ANR	3956964	Identifier	bx		3956115	0					
ANR	3956965	Identifier	ax		3956115	1					
ANR	3956966	CompoundStatement		139:76:3355:3355	3956115	1					
ANR	3956967	ExpressionStatement	ax += ( many && ! g -> is_callgraph ) ? 0 : 4	2967:5:74035:74075	3956115	0	True				
ANR	3956968	AssignmentExpression	ax += ( many && ! g -> is_callgraph ) ? 0 : 4		3956115	0		+=			
ANR	3956969	Identifier	ax		3956115	0					
ANR	3956970	ConditionalExpression	( many && ! g -> is_callgraph ) ? 0 : 4		3956115	1					
ANR	3956971	Condition	many && ! g -> is_callgraph		3956115	0					
ANR	3956972	AndExpression	many && ! g -> is_callgraph		3956115	0		&&			
ANR	3956973	Identifier	many		3956115	0					
ANR	3956974	UnaryOperationExpression	! g -> is_callgraph		3956115	1					
ANR	3956975	UnaryOperator	!		3956115	0					
ANR	3956976	PtrMemberAccess	g -> is_callgraph		3956115	1					
ANR	3956977	Identifier	g		3956115	0					
ANR	3956978	Identifier	is_callgraph		3956115	1					
ANR	3956979	PrimaryExpression	0		3956115	1					
ANR	3956980	PrimaryExpression	4		3956115	2					
ANR	3956981	IfStatement	if ( a -> h < a -> layer_height )		3956115	11					
ANR	3956982	Condition	a -> h < a -> layer_height	2969:8:74091:74112	3956115	0	True				
ANR	3956983	RelationalExpression	a -> h < a -> layer_height		3956115	0		<			
ANR	3956984	PtrMemberAccess	a -> h		3956115	0					
ANR	3956985	Identifier	a		3956115	0					
ANR	3956986	Identifier	h		3956115	1					
ANR	3956987	PtrMemberAccess	a -> layer_height		3956115	1					
ANR	3956988	Identifier	a		3956115	0					
ANR	3956989	Identifier	layer_height		3956115	1					
ANR	3956990	CompoundStatement		142:32:3442:3442	3956115	1					
ANR	3956991	ExpressionStatement	"r_cons_canvas_line ( g -> can , ax , ay , ax , ay + a -> layer_height - a -> h , & style )"	2970:5:74122:74198	3956115	0	True				
ANR	3956992	CallExpression	"r_cons_canvas_line ( g -> can , ax , ay , ax , ay + a -> layer_height - a -> h , & style )"		3956115	0					
ANR	3956993	Callee	r_cons_canvas_line		3956115	0					
ANR	3956994	Identifier	r_cons_canvas_line		3956115	0					
ANR	3956995	ArgumentList	g -> can		3956115	1					
ANR	3956996	Argument	g -> can		3956115	0					
ANR	3956997	PtrMemberAccess	g -> can		3956115	0					
ANR	3956998	Identifier	g		3956115	0					
ANR	3956999	Identifier	can		3956115	1					
ANR	3957000	Argument	ax		3956115	1					
ANR	3957001	Identifier	ax		3956115	0					
ANR	3957002	Argument	ay		3956115	2					
ANR	3957003	Identifier	ay		3956115	0					
ANR	3957004	Argument	ax		3956115	3					
ANR	3957005	Identifier	ax		3956115	0					
ANR	3957006	Argument	ay + a -> layer_height - a -> h		3956115	4					
ANR	3957007	AdditiveExpression	ay + a -> layer_height - a -> h		3956115	0		+			
ANR	3957008	Identifier	ay		3956115	0					
ANR	3957009	AdditiveExpression	a -> layer_height - a -> h		3956115	1		-			
ANR	3957010	PtrMemberAccess	a -> layer_height		3956115	0					
ANR	3957011	Identifier	a		3956115	0					
ANR	3957012	Identifier	layer_height		3956115	1					
ANR	3957013	PtrMemberAccess	a -> h		3956115	1					
ANR	3957014	Identifier	a		3956115	0					
ANR	3957015	Identifier	h		3956115	1					
ANR	3957016	Argument	& style		3956115	5					
ANR	3957017	UnaryOperationExpression	& style		3956115	0					
ANR	3957018	UnaryOperator	&		3956115	0					
ANR	3957019	Identifier	style		3956115	1					
ANR	3957020	ExpressionStatement	ay = a -> y + a -> layer_height	2971:5:74205:74232	3956115	1	True				
ANR	3957021	AssignmentExpression	ay = a -> y + a -> layer_height		3956115	0		=			
ANR	3957022	Identifier	ay		3956115	0					
ANR	3957023	AdditiveExpression	a -> y + a -> layer_height		3956115	1		+			
ANR	3957024	PtrMemberAccess	a -> y		3956115	0					
ANR	3957025	Identifier	a		3956115	0					
ANR	3957026	Identifier	y		3956115	1					
ANR	3957027	PtrMemberAccess	a -> layer_height		3956115	1					
ANR	3957028	Identifier	a		3956115	0					
ANR	3957029	Identifier	layer_height		3956115	1					
ANR	3957030	ExpressionStatement	style . symbol = LINE_NOSYM_VERT	2972:5:74239:74269	3956115	2	True				
ANR	3957031	AssignmentExpression	style . symbol = LINE_NOSYM_VERT		3956115	0		=			
ANR	3957032	MemberAccess	style . symbol		3956115	0					
ANR	3957033	Identifier	style		3956115	0					
ANR	3957034	Identifier	symbol		3956115	1					
ANR	3957035	Identifier	LINE_NOSYM_VERT		3956115	1					
ANR	3957036	IfStatement	if ( by >= ay )		3956115	12					
ANR	3957037	Condition	by >= ay	2974:8:74285:74292	3956115	0	True				
ANR	3957038	RelationalExpression	by >= ay		3956115	0		>=			
ANR	3957039	Identifier	by		3956115	0					
ANR	3957040	Identifier	ay		3956115	1					
ANR	3957041	CompoundStatement		147:18:3622:3622	3956115	1					
ANR	3957042	ExpressionStatement	"r_cons_canvas_line_square_defined ( g -> can , ax , ay , bx , by , & style , bendpoint , true )"	2975:5:74302:74385	3956115	0	True				
ANR	3957043	CallExpression	"r_cons_canvas_line_square_defined ( g -> can , ax , ay , bx , by , & style , bendpoint , true )"		3956115	0					
ANR	3957044	Callee	r_cons_canvas_line_square_defined		3956115	0					
ANR	3957045	Identifier	r_cons_canvas_line_square_defined		3956115	0					
ANR	3957046	ArgumentList	g -> can		3956115	1					
ANR	3957047	Argument	g -> can		3956115	0					
ANR	3957048	PtrMemberAccess	g -> can		3956115	0					
ANR	3957049	Identifier	g		3956115	0					
ANR	3957050	Identifier	can		3956115	1					
ANR	3957051	Argument	ax		3956115	1					
ANR	3957052	Identifier	ax		3956115	0					
ANR	3957053	Argument	ay		3956115	2					
ANR	3957054	Identifier	ay		3956115	0					
ANR	3957055	Argument	bx		3956115	3					
ANR	3957056	Identifier	bx		3956115	0					
ANR	3957057	Argument	by		3956115	4					
ANR	3957058	Identifier	by		3956115	0					
ANR	3957059	Argument	& style		3956115	5					
ANR	3957060	UnaryOperationExpression	& style		3956115	0					
ANR	3957061	UnaryOperator	&		3956115	0					
ANR	3957062	Identifier	style		3956115	1					
ANR	3957063	Argument	bendpoint		3956115	6					
ANR	3957064	Identifier	bendpoint		3956115	0					
ANR	3957065	Argument	true		3956115	7					
ANR	3957066	Identifier	true		3956115	0					
ANR	3957067	ElseStatement	else		3956115	0					
ANR	3957068	CompoundStatement		150:5:3732:3805	3956115	0					
ANR	3957069	IdentifierDeclStatement	"struct tmpbackedgeinfo * tmp = calloc ( 1 , sizeof ( struct tmpbackedgeinfo ) ) ;"	2977:5:74405:74478	3956115	0	True				
ANR	3957070	IdentifierDecl	"* tmp = calloc ( 1 , sizeof ( struct tmpbackedgeinfo ) )"		3956115	0					
ANR	3957071	IdentifierDeclType	struct tmpbackedgeinfo *		3956115	0					
ANR	3957072	Identifier	tmp		3956115	1					
ANR	3957073	AssignmentExpression	"* tmp = calloc ( 1 , sizeof ( struct tmpbackedgeinfo ) )"		3956115	2		=			
ANR	3957074	Identifier	tmp		3956115	0					
ANR	3957075	CallExpression	"calloc ( 1 , sizeof ( struct tmpbackedgeinfo ) )"		3956115	1					
ANR	3957076	Callee	calloc		3956115	0					
ANR	3957077	Identifier	calloc		3956115	0					
ANR	3957078	ArgumentList	1		3956115	1					
ANR	3957079	Argument	1		3956115	0					
ANR	3957080	PrimaryExpression	1		3956115	0					
ANR	3957081	Argument	sizeof ( struct tmpbackedgeinfo )		3956115	1					
ANR	3957082	SizeofExpression	sizeof ( struct tmpbackedgeinfo )		3956115	0					
ANR	3957083	Sizeof	sizeof		3956115	0					
ANR	3957084	SizeofOperand	struct tmpbackedgeinfo		3956115	1					
ANR	3957085	ExpressionStatement	tmp -> ax = ax	2978:5:74485:74497	3956115	1	True				
ANR	3957086	AssignmentExpression	tmp -> ax = ax		3956115	0		=			
ANR	3957087	PtrMemberAccess	tmp -> ax		3956115	0					
ANR	3957088	Identifier	tmp		3956115	0					
ANR	3957089	Identifier	ax		3956115	1					
ANR	3957090	Identifier	ax		3956115	1					
ANR	3957091	ExpressionStatement	tmp -> bx = bx	2979:5:74504:74516	3956115	2	True				
ANR	3957092	AssignmentExpression	tmp -> bx = bx		3956115	0		=			
ANR	3957093	PtrMemberAccess	tmp -> bx		3956115	0					
ANR	3957094	Identifier	tmp		3956115	0					
ANR	3957095	Identifier	bx		3956115	1					
ANR	3957096	Identifier	bx		3956115	1					
ANR	3957097	ExpressionStatement	tmp -> ay = ay	2980:5:74523:74535	3956115	3	True				
ANR	3957098	AssignmentExpression	tmp -> ay = ay		3956115	0		=			
ANR	3957099	PtrMemberAccess	tmp -> ay		3956115	0					
ANR	3957100	Identifier	tmp		3956115	0					
ANR	3957101	Identifier	ay		3956115	1					
ANR	3957102	Identifier	ay		3956115	1					
ANR	3957103	ExpressionStatement	tmp -> by = by	2981:5:74542:74554	3956115	4	True				
ANR	3957104	AssignmentExpression	tmp -> by = by		3956115	0		=			
ANR	3957105	PtrMemberAccess	tmp -> by		3956115	0					
ANR	3957106	Identifier	tmp		3956115	0					
ANR	3957107	Identifier	by		3956115	1					
ANR	3957108	Identifier	by		3956115	1					
ANR	3957109	ExpressionStatement	tmp -> edgectr = bendpoint	2982:5:74561:74585	3956115	5	True				
ANR	3957110	AssignmentExpression	tmp -> edgectr = bendpoint		3956115	0		=			
ANR	3957111	PtrMemberAccess	tmp -> edgectr		3956115	0					
ANR	3957112	Identifier	tmp		3956115	0					
ANR	3957113	Identifier	edgectr		3956115	1					
ANR	3957114	Identifier	bendpoint		3956115	1					
ANR	3957115	ExpressionStatement	tmp -> fromlayer = a -> layer	2983:5:74592:74617	3956115	6	True				
ANR	3957116	AssignmentExpression	tmp -> fromlayer = a -> layer		3956115	0		=			
ANR	3957117	PtrMemberAccess	tmp -> fromlayer		3956115	0					
ANR	3957118	Identifier	tmp		3956115	0					
ANR	3957119	Identifier	fromlayer		3956115	1					
ANR	3957120	PtrMemberAccess	a -> layer		3956115	1					
ANR	3957121	Identifier	a		3956115	0					
ANR	3957122	Identifier	layer		3956115	1					
ANR	3957123	ExpressionStatement	tmp -> tolayer = b -> layer	2984:5:74624:74647	3956115	7	True				
ANR	3957124	AssignmentExpression	tmp -> tolayer = b -> layer		3956115	0		=			
ANR	3957125	PtrMemberAccess	tmp -> tolayer		3956115	0					
ANR	3957126	Identifier	tmp		3956115	0					
ANR	3957127	Identifier	tolayer		3956115	1					
ANR	3957128	PtrMemberAccess	b -> layer		3956115	1					
ANR	3957129	Identifier	b		3956115	0					
ANR	3957130	Identifier	layer		3956115	1					
ANR	3957131	ExpressionStatement	tmp -> style = style	2985:5:74654:74672	3956115	8	True				
ANR	3957132	AssignmentExpression	tmp -> style = style		3956115	0		=			
ANR	3957133	PtrMemberAccess	tmp -> style		3956115	0					
ANR	3957134	Identifier	tmp		3956115	0					
ANR	3957135	Identifier	style		3956115	1					
ANR	3957136	Identifier	style		3956115	1					
ANR	3957137	ExpressionStatement	"r_list_append ( bckedges , tmp )"	2986:5:74679:74708	3956115	9	True				
ANR	3957138	CallExpression	"r_list_append ( bckedges , tmp )"		3956115	0					
ANR	3957139	Callee	r_list_append		3956115	0					
ANR	3957140	Identifier	r_list_append		3956115	0					
ANR	3957141	ArgumentList	bckedges		3956115	1					
ANR	3957142	Argument	bckedges		3956115	0					
ANR	3957143	Identifier	bckedges		3956115	0					
ANR	3957144	Argument	tmp		3956115	1					
ANR	3957145	Identifier	tmp		3956115	0					
ANR	3957146	IfStatement	if ( b -> is_dummy )		3956115	13					
ANR	3957147	Condition	b -> is_dummy	2988:8:74724:74734	3956115	0	True				
ANR	3957148	PtrMemberAccess	b -> is_dummy		3956115	0					
ANR	3957149	Identifier	b		3956115	0					
ANR	3957150	Identifier	is_dummy		3956115	1					
ANR	3957151	CompoundStatement		161:21:4064:4064	3956115	1					
ANR	3957152	ExpressionStatement	style . symbol = LINE_NOSYM_VERT	2989:5:74744:74774	3956115	0	True				
ANR	3957153	AssignmentExpression	style . symbol = LINE_NOSYM_VERT		3956115	0		=			
ANR	3957154	MemberAccess	style . symbol		3956115	0					
ANR	3957155	Identifier	style		3956115	0					
ANR	3957156	Identifier	symbol		3956115	1					
ANR	3957157	Identifier	LINE_NOSYM_VERT		3956115	1					
ANR	3957158	ExpressionStatement	"r_cons_canvas_line ( g -> can , bx , by , bx , b -> y + b -> h , & style )"	2990:5:74781:74841	3956115	1	True				
ANR	3957159	CallExpression	"r_cons_canvas_line ( g -> can , bx , by , bx , b -> y + b -> h , & style )"		3956115	0					
ANR	3957160	Callee	r_cons_canvas_line		3956115	0					
ANR	3957161	Identifier	r_cons_canvas_line		3956115	0					
ANR	3957162	ArgumentList	g -> can		3956115	1					
ANR	3957163	Argument	g -> can		3956115	0					
ANR	3957164	PtrMemberAccess	g -> can		3956115	0					
ANR	3957165	Identifier	g		3956115	0					
ANR	3957166	Identifier	can		3956115	1					
ANR	3957167	Argument	bx		3956115	1					
ANR	3957168	Identifier	bx		3956115	0					
ANR	3957169	Argument	by		3956115	2					
ANR	3957170	Identifier	by		3956115	0					
ANR	3957171	Argument	bx		3956115	3					
ANR	3957172	Identifier	bx		3956115	0					
ANR	3957173	Argument	b -> y + b -> h		3956115	4					
ANR	3957174	AdditiveExpression	b -> y + b -> h		3956115	0		+			
ANR	3957175	PtrMemberAccess	b -> y		3956115	0					
ANR	3957176	Identifier	b		3956115	0					
ANR	3957177	Identifier	y		3956115	1					
ANR	3957178	PtrMemberAccess	b -> h		3956115	1					
ANR	3957179	Identifier	b		3956115	0					
ANR	3957180	Identifier	h		3956115	1					
ANR	3957181	Argument	& style		3956115	5					
ANR	3957182	UnaryOperationExpression	& style		3956115	0					
ANR	3957183	UnaryOperator	&		3956115	0					
ANR	3957184	Identifier	style		3956115	1					
ANR	3957185	IfStatement	if ( b -> x != a -> x || b -> layer <= a -> layer || ( ! a -> is_dummy && b -> is_dummy ) || ( a -> is_dummy && ! b -> is_dummy ) )		3956115	14					
ANR	3957186	Condition	b -> x != a -> x || b -> layer <= a -> layer || ( ! a -> is_dummy && b -> is_dummy ) || ( a -> is_dummy && ! b -> is_dummy )	2992:8:74857:74958	3956115	0	True				
ANR	3957187	OrExpression	b -> x != a -> x || b -> layer <= a -> layer || ( ! a -> is_dummy && b -> is_dummy ) || ( a -> is_dummy && ! b -> is_dummy )		3956115	0		||			
ANR	3957188	EqualityExpression	b -> x != a -> x		3956115	0		!=			
ANR	3957189	PtrMemberAccess	b -> x		3956115	0					
ANR	3957190	Identifier	b		3956115	0					
ANR	3957191	Identifier	x		3956115	1					
ANR	3957192	PtrMemberAccess	a -> x		3956115	1					
ANR	3957193	Identifier	a		3956115	0					
ANR	3957194	Identifier	x		3956115	1					
ANR	3957195	OrExpression	b -> layer <= a -> layer || ( ! a -> is_dummy && b -> is_dummy ) || ( a -> is_dummy && ! b -> is_dummy )		3956115	1		||			
ANR	3957196	RelationalExpression	b -> layer <= a -> layer		3956115	0		<=			
ANR	3957197	PtrMemberAccess	b -> layer		3956115	0					
ANR	3957198	Identifier	b		3956115	0					
ANR	3957199	Identifier	layer		3956115	1					
ANR	3957200	PtrMemberAccess	a -> layer		3956115	1					
ANR	3957201	Identifier	a		3956115	0					
ANR	3957202	Identifier	layer		3956115	1					
ANR	3957203	OrExpression	( ! a -> is_dummy && b -> is_dummy ) || ( a -> is_dummy && ! b -> is_dummy )		3956115	1		||			
ANR	3957204	AndExpression	! a -> is_dummy && b -> is_dummy		3956115	0		&&			
ANR	3957205	UnaryOperationExpression	! a -> is_dummy		3956115	0					
ANR	3957206	UnaryOperator	!		3956115	0					
ANR	3957207	PtrMemberAccess	a -> is_dummy		3956115	1					
ANR	3957208	Identifier	a		3956115	0					
ANR	3957209	Identifier	is_dummy		3956115	1					
ANR	3957210	PtrMemberAccess	b -> is_dummy		3956115	1					
ANR	3957211	Identifier	b		3956115	0					
ANR	3957212	Identifier	is_dummy		3956115	1					
ANR	3957213	AndExpression	a -> is_dummy && ! b -> is_dummy		3956115	1		&&			
ANR	3957214	PtrMemberAccess	a -> is_dummy		3956115	0					
ANR	3957215	Identifier	a		3956115	0					
ANR	3957216	Identifier	is_dummy		3956115	1					
ANR	3957217	UnaryOperationExpression	! b -> is_dummy		3956115	1					
ANR	3957218	UnaryOperator	!		3956115	0					
ANR	3957219	PtrMemberAccess	b -> is_dummy		3956115	1					
ANR	3957220	Identifier	b		3956115	0					
ANR	3957221	Identifier	is_dummy		3956115	1					
ANR	3957222	CompoundStatement		165:112:4288:4288	3956115	1					
ANR	3957223	IfStatement	if ( tm )		3956115	0					
ANR	3957224	Condition	tm	2993:9:74972:74973	3956115	0	True				
ANR	3957225	Identifier	tm		3956115	0					
ANR	3957226	CompoundStatement		166:13:4303:4303	3956115	1					
ANR	3957227	ExpressionStatement	tm -> edgectr ++	2994:6:74984:74997	3956115	0	True				
ANR	3957228	PostIncDecOperationExpression	tm -> edgectr ++		3956115	0					
ANR	3957229	PtrMemberAccess	tm -> edgectr		3956115	0					
ANR	3957230	Identifier	tm		3956115	0					
ANR	3957231	Identifier	edgectr		3956115	1					
ANR	3957232	IncDec	++		3956115	1					
ANR	3957233	BreakStatement	break ;	2997:4:75016:75021	3956115	15	True				
ANR	3957234	Label	case 1 :	2998:3:75026:75032	3956115	16	True				
ANR	3957235	ExpressionStatement	style . symbol = ( ! g -> hints || a -> is_dummy ) ? LINE_NOSYM_HORIZ : style . color	2999:4:75038:75112	3956115	17	True				
ANR	3957236	AssignmentExpression	style . symbol = ( ! g -> hints || a -> is_dummy ) ? LINE_NOSYM_HORIZ : style . color		3956115	0		=			
ANR	3957237	MemberAccess	style . symbol		3956115	0					
ANR	3957238	Identifier	style		3956115	0					
ANR	3957239	Identifier	symbol		3956115	1					
ANR	3957240	ConditionalExpression	( ! g -> hints || a -> is_dummy ) ? LINE_NOSYM_HORIZ : style . color		3956115	1					
ANR	3957241	Condition	! g -> hints || a -> is_dummy		3956115	0					
ANR	3957242	OrExpression	! g -> hints || a -> is_dummy		3956115	0		||			
ANR	3957243	UnaryOperationExpression	! g -> hints		3956115	0					
ANR	3957244	UnaryOperator	!		3956115	0					
ANR	3957245	PtrMemberAccess	g -> hints		3956115	1					
ANR	3957246	Identifier	g		3956115	0					
ANR	3957247	Identifier	hints		3956115	1					
ANR	3957248	PtrMemberAccess	a -> is_dummy		3956115	1					
ANR	3957249	Identifier	a		3956115	0					
ANR	3957250	Identifier	is_dummy		3956115	1					
ANR	3957251	Identifier	LINE_NOSYM_HORIZ		3956115	1					
ANR	3957252	MemberAccess	style . color		3956115	2					
ANR	3957253	Identifier	style		3956115	0					
ANR	3957254	Identifier	color		3956115	1					
ANR	3957255	IfStatement	if ( a -> x + a -> w > b -> x )		3956115	18					
ANR	3957256	Condition	a -> x + a -> w > b -> x	3000:8:75122:75139	3956115	0	True				
ANR	3957257	RelationalExpression	a -> x + a -> w > b -> x		3956115	0		>			
ANR	3957258	AdditiveExpression	a -> x + a -> w		3956115	0		+			
ANR	3957259	PtrMemberAccess	a -> x		3956115	0					
ANR	3957260	Identifier	a		3956115	0					
ANR	3957261	Identifier	x		3956115	1					
ANR	3957262	PtrMemberAccess	a -> w		3956115	1					
ANR	3957263	Identifier	a		3956115	0					
ANR	3957264	Identifier	w		3956115	1					
ANR	3957265	PtrMemberAccess	b -> x		3956115	1					
ANR	3957266	Identifier	b		3956115	0					
ANR	3957267	Identifier	x		3956115	1					
ANR	3957268	CompoundStatement		173:28:4469:4469	3956115	1					
ANR	3957269	ExpressionStatement	style . dot_style = DOT_STYLE_BACKEDGE	3001:5:75149:75185	3956115	0	True				
ANR	3957270	AssignmentExpression	style . dot_style = DOT_STYLE_BACKEDGE		3956115	0		=			
ANR	3957271	MemberAccess	style . dot_style		3956115	0					
ANR	3957272	Identifier	style		3956115	0					
ANR	3957273	Identifier	dot_style		3956115	1					
ANR	3957274	Identifier	DOT_STYLE_BACKEDGE		3956115	1					
ANR	3957275	ExpressionStatement	ax = a -> x	3004:4:75198:75207	3956115	19	True				
ANR	3957276	AssignmentExpression	ax = a -> x		3956115	0		=			
ANR	3957277	Identifier	ax		3956115	0					
ANR	3957278	PtrMemberAccess	a -> x		3956115	1					
ANR	3957279	Identifier	a		3956115	0					
ANR	3957280	Identifier	x		3956115	1					
ANR	3957281	IfStatement	if ( g -> zoom > 0 )		3956115	20					
ANR	3957282	Condition	g -> zoom > 0	3005:8:75217:75227	3956115	0	True				
ANR	3957283	RelationalExpression	g -> zoom > 0		3956115	0		>			
ANR	3957284	PtrMemberAccess	g -> zoom		3956115	0					
ANR	3957285	Identifier	g		3956115	0					
ANR	3957286	Identifier	zoom		3956115	1					
ANR	3957287	PrimaryExpression	0		3956115	1					
ANR	3957288	CompoundStatement		178:21:4557:4557	3956115	1					
ANR	3957289	ExpressionStatement	ax += a -> w	3006:5:75237:75247	3956115	0	True				
ANR	3957290	AssignmentExpression	ax += a -> w		3956115	0		+=			
ANR	3957291	Identifier	ax		3956115	0					
ANR	3957292	PtrMemberAccess	a -> w		3956115	1					
ANR	3957293	Identifier	a		3956115	0					
ANR	3957294	Identifier	w		3956115	1					
ANR	3957295	ElseStatement	else		3956115	0					
ANR	3957296	CompoundStatement		180:11:4587:4587	3956115	0					
ANR	3957297	ExpressionStatement	ax ++	3008:5:75267:75272	3956115	0	True				
ANR	3957298	PostIncDecOperationExpression	ax ++		3956115	0					
ANR	3957299	Identifier	ax		3956115	0					
ANR	3957300	IncDec	++		3956115	1					
ANR	3957301	ExpressionStatement	ay = a -> y	3010:4:75284:75293	3956115	21	True				
ANR	3957302	AssignmentExpression	ay = a -> y		3956115	0		=			
ANR	3957303	Identifier	ay		3956115	0					
ANR	3957304	PtrMemberAccess	a -> y		3956115	1					
ANR	3957305	Identifier	a		3956115	0					
ANR	3957306	Identifier	y		3956115	1					
ANR	3957307	IfStatement	if ( ! a -> is_dummy && g -> zoom > 0 )		3956115	22					
ANR	3957308	Condition	! a -> is_dummy && g -> zoom > 0	3011:8:75303:75329	3956115	0	True				
ANR	3957309	AndExpression	! a -> is_dummy && g -> zoom > 0		3956115	0		&&			
ANR	3957310	UnaryOperationExpression	! a -> is_dummy		3956115	0					
ANR	3957311	UnaryOperator	!		3956115	0					
ANR	3957312	PtrMemberAccess	a -> is_dummy		3956115	1					
ANR	3957313	Identifier	a		3956115	0					
ANR	3957314	Identifier	is_dummy		3956115	1					
ANR	3957315	RelationalExpression	g -> zoom > 0		3956115	1		>			
ANR	3957316	PtrMemberAccess	g -> zoom		3956115	0					
ANR	3957317	Identifier	g		3956115	0					
ANR	3957318	Identifier	zoom		3956115	1					
ANR	3957319	PrimaryExpression	0		3956115	1					
ANR	3957320	CompoundStatement		184:37:4659:4659	3956115	1					
ANR	3957321	ExpressionStatement	ay += R_EDGES_X_INC + out_nth	3012:5:75339:75368	3956115	0	True				
ANR	3957322	AssignmentExpression	ay += R_EDGES_X_INC + out_nth		3956115	0		+=			
ANR	3957323	Identifier	ay		3956115	0					
ANR	3957324	AdditiveExpression	R_EDGES_X_INC + out_nth		3956115	1		+			
ANR	3957325	Identifier	R_EDGES_X_INC		3956115	0					
ANR	3957326	Identifier	out_nth		3956115	1					
ANR	3957327	ExpressionStatement	bx = b -> x - 1	3014:4:75380:75393	3956115	23	True				
ANR	3957328	AssignmentExpression	bx = b -> x - 1		3956115	0		=			
ANR	3957329	Identifier	bx		3956115	0					
ANR	3957330	AdditiveExpression	b -> x - 1		3956115	1		-			
ANR	3957331	PtrMemberAccess	b -> x		3956115	0					
ANR	3957332	Identifier	b		3956115	0					
ANR	3957333	Identifier	x		3956115	1					
ANR	3957334	PrimaryExpression	1		3956115	1					
ANR	3957335	ExpressionStatement	by = b -> y	3015:4:75399:75408	3956115	24	True				
ANR	3957336	AssignmentExpression	by = b -> y		3956115	0		=			
ANR	3957337	Identifier	by		3956115	0					
ANR	3957338	PtrMemberAccess	b -> y		3956115	1					
ANR	3957339	Identifier	b		3956115	0					
ANR	3957340	Identifier	y		3956115	1					
ANR	3957341	IfStatement	if ( ! b -> is_dummy && g -> zoom > 0 )		3956115	25					
ANR	3957342	Condition	! b -> is_dummy && g -> zoom > 0	3016:8:75418:75444	3956115	0	True				
ANR	3957343	AndExpression	! b -> is_dummy && g -> zoom > 0		3956115	0		&&			
ANR	3957344	UnaryOperationExpression	! b -> is_dummy		3956115	0					
ANR	3957345	UnaryOperator	!		3956115	0					
ANR	3957346	PtrMemberAccess	b -> is_dummy		3956115	1					
ANR	3957347	Identifier	b		3956115	0					
ANR	3957348	Identifier	is_dummy		3956115	1					
ANR	3957349	RelationalExpression	g -> zoom > 0		3956115	1		>			
ANR	3957350	PtrMemberAccess	g -> zoom		3956115	0					
ANR	3957351	Identifier	g		3956115	0					
ANR	3957352	Identifier	zoom		3956115	1					
ANR	3957353	PrimaryExpression	0		3956115	1					
ANR	3957354	CompoundStatement		189:37:4774:4774	3956115	1					
ANR	3957355	ExpressionStatement	by += R_EDGES_X_INC + out_nth	3017:5:75454:75483	3956115	0	True				
ANR	3957356	AssignmentExpression	by += R_EDGES_X_INC + out_nth		3956115	0		+=			
ANR	3957357	Identifier	by		3956115	0					
ANR	3957358	AdditiveExpression	R_EDGES_X_INC + out_nth		3956115	1		+			
ANR	3957359	Identifier	R_EDGES_X_INC		3956115	0					
ANR	3957360	Identifier	out_nth		3956115	1					
ANR	3957361	IfStatement	if ( a -> w < a -> layer_width )		3956115	26					
ANR	3957362	Condition	a -> w < a -> layer_width	3020:8:75500:75520	3956115	0	True				
ANR	3957363	RelationalExpression	a -> w < a -> layer_width		3956115	0		<			
ANR	3957364	PtrMemberAccess	a -> w		3956115	0					
ANR	3957365	Identifier	a		3956115	0					
ANR	3957366	Identifier	w		3956115	1					
ANR	3957367	PtrMemberAccess	a -> layer_width		3956115	1					
ANR	3957368	Identifier	a		3956115	0					
ANR	3957369	Identifier	layer_width		3956115	1					
ANR	3957370	CompoundStatement		193:31:4850:4850	3956115	1					
ANR	3957371	ExpressionStatement	"r_cons_canvas_line_square_defined ( g -> can , ax , ay , a -> x + a -> layer_width , ay , & style , 0 , false )"	3021:5:75530:75625	3956115	0	True				
ANR	3957372	CallExpression	"r_cons_canvas_line_square_defined ( g -> can , ax , ay , a -> x + a -> layer_width , ay , & style , 0 , false )"		3956115	0					
ANR	3957373	Callee	r_cons_canvas_line_square_defined		3956115	0					
ANR	3957374	Identifier	r_cons_canvas_line_square_defined		3956115	0					
ANR	3957375	ArgumentList	g -> can		3956115	1					
ANR	3957376	Argument	g -> can		3956115	0					
ANR	3957377	PtrMemberAccess	g -> can		3956115	0					
ANR	3957378	Identifier	g		3956115	0					
ANR	3957379	Identifier	can		3956115	1					
ANR	3957380	Argument	ax		3956115	1					
ANR	3957381	Identifier	ax		3956115	0					
ANR	3957382	Argument	ay		3956115	2					
ANR	3957383	Identifier	ay		3956115	0					
ANR	3957384	Argument	a -> x + a -> layer_width		3956115	3					
ANR	3957385	AdditiveExpression	a -> x + a -> layer_width		3956115	0		+			
ANR	3957386	PtrMemberAccess	a -> x		3956115	0					
ANR	3957387	Identifier	a		3956115	0					
ANR	3957388	Identifier	x		3956115	1					
ANR	3957389	PtrMemberAccess	a -> layer_width		3956115	1					
ANR	3957390	Identifier	a		3956115	0					
ANR	3957391	Identifier	layer_width		3956115	1					
ANR	3957392	Argument	ay		3956115	4					
ANR	3957393	Identifier	ay		3956115	0					
ANR	3957394	Argument	& style		3956115	5					
ANR	3957395	UnaryOperationExpression	& style		3956115	0					
ANR	3957396	UnaryOperator	&		3956115	0					
ANR	3957397	Identifier	style		3956115	1					
ANR	3957398	Argument	0		3956115	6					
ANR	3957399	PrimaryExpression	0		3956115	0					
ANR	3957400	Argument	false		3956115	7					
ANR	3957401	Identifier	false		3956115	0					
ANR	3957402	ExpressionStatement	ax = a -> x	3022:5:75632:75641	3956115	1	True				
ANR	3957403	AssignmentExpression	ax = a -> x		3956115	0		=			
ANR	3957404	Identifier	ax		3956115	0					
ANR	3957405	PtrMemberAccess	a -> x		3956115	1					
ANR	3957406	Identifier	a		3956115	0					
ANR	3957407	Identifier	x		3956115	1					
ANR	3957408	IfStatement	if ( g -> zoom > 1 )		3956115	2					
ANR	3957409	Condition	g -> zoom > 1	3023:9:75652:75662	3956115	0	True				
ANR	3957410	RelationalExpression	g -> zoom > 1		3956115	0		>			
ANR	3957411	PtrMemberAccess	g -> zoom		3956115	0					
ANR	3957412	Identifier	g		3956115	0					
ANR	3957413	Identifier	zoom		3956115	1					
ANR	3957414	PrimaryExpression	1		3956115	1					
ANR	3957415	CompoundStatement		196:22:4992:4992	3956115	1					
ANR	3957416	ExpressionStatement	ax += a -> layer_width	3024:6:75673:75693	3956115	0	True				
ANR	3957417	AssignmentExpression	ax += a -> layer_width		3956115	0		+=			
ANR	3957418	Identifier	ax		3956115	0					
ANR	3957419	PtrMemberAccess	a -> layer_width		3956115	1					
ANR	3957420	Identifier	a		3956115	0					
ANR	3957421	Identifier	layer_width		3956115	1					
ANR	3957422	ElseStatement	else		3956115	0					
ANR	3957423	CompoundStatement		198:12:5034:5034	3956115	0					
ANR	3957424	ExpressionStatement	ax += 1	3026:6:75715:75722	3956115	0	True				
ANR	3957425	AssignmentExpression	ax += 1		3956115	0		+=			
ANR	3957426	Identifier	ax		3956115	0					
ANR	3957427	PrimaryExpression	1		3956115	1					
ANR	3957428	ExpressionStatement	style . symbol = LINE_NOSYM_HORIZ	3028:5:75736:75767	3956115	3	True				
ANR	3957429	AssignmentExpression	style . symbol = LINE_NOSYM_HORIZ		3956115	0		=			
ANR	3957430	MemberAccess	style . symbol		3956115	0					
ANR	3957431	Identifier	style		3956115	0					
ANR	3957432	Identifier	symbol		3956115	1					
ANR	3957433	Identifier	LINE_NOSYM_HORIZ		3956115	1					
ANR	3957434	IfStatement	if ( bx >= ax )		3956115	27					
ANR	3957435	Condition	bx >= ax	3030:8:75783:75790	3956115	0	True				
ANR	3957436	RelationalExpression	bx >= ax		3956115	0		>=			
ANR	3957437	Identifier	bx		3956115	0					
ANR	3957438	Identifier	ax		3956115	1					
ANR	3957439	CompoundStatement		203:18:5120:5120	3956115	1					
ANR	3957440	ExpressionStatement	"r_cons_canvas_line_square_defined ( g -> can , ax , ay , bx , by , & style , tm -> edgectr , false )"	3031:5:75800:75886	3956115	0	True				
ANR	3957441	CallExpression	"r_cons_canvas_line_square_defined ( g -> can , ax , ay , bx , by , & style , tm -> edgectr , false )"		3956115	0					
ANR	3957442	Callee	r_cons_canvas_line_square_defined		3956115	0					
ANR	3957443	Identifier	r_cons_canvas_line_square_defined		3956115	0					
ANR	3957444	ArgumentList	g -> can		3956115	1					
ANR	3957445	Argument	g -> can		3956115	0					
ANR	3957446	PtrMemberAccess	g -> can		3956115	0					
ANR	3957447	Identifier	g		3956115	0					
ANR	3957448	Identifier	can		3956115	1					
ANR	3957449	Argument	ax		3956115	1					
ANR	3957450	Identifier	ax		3956115	0					
ANR	3957451	Argument	ay		3956115	2					
ANR	3957452	Identifier	ay		3956115	0					
ANR	3957453	Argument	bx		3956115	3					
ANR	3957454	Identifier	bx		3956115	0					
ANR	3957455	Argument	by		3956115	4					
ANR	3957456	Identifier	by		3956115	0					
ANR	3957457	Argument	& style		3956115	5					
ANR	3957458	UnaryOperationExpression	& style		3956115	0					
ANR	3957459	UnaryOperator	&		3956115	0					
ANR	3957460	Identifier	style		3956115	1					
ANR	3957461	Argument	tm -> edgectr		3956115	6					
ANR	3957462	PtrMemberAccess	tm -> edgectr		3956115	0					
ANR	3957463	Identifier	tm		3956115	0					
ANR	3957464	Identifier	edgectr		3956115	1					
ANR	3957465	Argument	false		3956115	7					
ANR	3957466	Identifier	false		3956115	0					
ANR	3957467	ElseStatement	else		3956115	0					
ANR	3957468	CompoundStatement		206:5:5233:5306	3956115	0					
ANR	3957469	IdentifierDeclStatement	"struct tmpbackedgeinfo * tmp = calloc ( 1 , sizeof ( struct tmpbackedgeinfo ) ) ;"	3033:5:75906:75979	3956115	0	True				
ANR	3957470	IdentifierDecl	"* tmp = calloc ( 1 , sizeof ( struct tmpbackedgeinfo ) )"		3956115	0					
ANR	3957471	IdentifierDeclType	struct tmpbackedgeinfo *		3956115	0					
ANR	3957472	Identifier	tmp		3956115	1					
ANR	3957473	AssignmentExpression	"* tmp = calloc ( 1 , sizeof ( struct tmpbackedgeinfo ) )"		3956115	2		=			
ANR	3957474	Identifier	tmp		3956115	0					
ANR	3957475	CallExpression	"calloc ( 1 , sizeof ( struct tmpbackedgeinfo ) )"		3956115	1					
ANR	3957476	Callee	calloc		3956115	0					
ANR	3957477	Identifier	calloc		3956115	0					
ANR	3957478	ArgumentList	1		3956115	1					
ANR	3957479	Argument	1		3956115	0					
ANR	3957480	PrimaryExpression	1		3956115	0					
ANR	3957481	Argument	sizeof ( struct tmpbackedgeinfo )		3956115	1					
ANR	3957482	SizeofExpression	sizeof ( struct tmpbackedgeinfo )		3956115	0					
ANR	3957483	Sizeof	sizeof		3956115	0					
ANR	3957484	SizeofOperand	struct tmpbackedgeinfo		3956115	1					
ANR	3957485	IfStatement	if ( tmp )		3956115	1					
ANR	3957486	Condition	tmp	3034:9:75990:75992	3956115	0	True				
ANR	3957487	Identifier	tmp		3956115	0					
ANR	3957488	CompoundStatement		207:14:5322:5322	3956115	1					
ANR	3957489	ExpressionStatement	tmp -> ax = ax	3035:6:76003:76015	3956115	0	True				
ANR	3957490	AssignmentExpression	tmp -> ax = ax		3956115	0		=			
ANR	3957491	PtrMemberAccess	tmp -> ax		3956115	0					
ANR	3957492	Identifier	tmp		3956115	0					
ANR	3957493	Identifier	ax		3956115	1					
ANR	3957494	Identifier	ax		3956115	1					
ANR	3957495	ExpressionStatement	tmp -> bx = bx	3036:6:76023:76035	3956115	1	True				
ANR	3957496	AssignmentExpression	tmp -> bx = bx		3956115	0		=			
ANR	3957497	PtrMemberAccess	tmp -> bx		3956115	0					
ANR	3957498	Identifier	tmp		3956115	0					
ANR	3957499	Identifier	bx		3956115	1					
ANR	3957500	Identifier	bx		3956115	1					
ANR	3957501	ExpressionStatement	tmp -> ay = ay	3037:6:76043:76055	3956115	2	True				
ANR	3957502	AssignmentExpression	tmp -> ay = ay		3956115	0		=			
ANR	3957503	PtrMemberAccess	tmp -> ay		3956115	0					
ANR	3957504	Identifier	tmp		3956115	0					
ANR	3957505	Identifier	ay		3956115	1					
ANR	3957506	Identifier	ay		3956115	1					
ANR	3957507	ExpressionStatement	tmp -> by = by	3038:6:76063:76075	3956115	3	True				
ANR	3957508	AssignmentExpression	tmp -> by = by		3956115	0		=			
ANR	3957509	PtrMemberAccess	tmp -> by		3956115	0					
ANR	3957510	Identifier	tmp		3956115	0					
ANR	3957511	Identifier	by		3956115	1					
ANR	3957512	Identifier	by		3956115	1					
ANR	3957513	ExpressionStatement	tmp -> edgectr = tm -> edgectr	3039:6:76083:76109	3956115	4	True				
ANR	3957514	AssignmentExpression	tmp -> edgectr = tm -> edgectr		3956115	0		=			
ANR	3957515	PtrMemberAccess	tmp -> edgectr		3956115	0					
ANR	3957516	Identifier	tmp		3956115	0					
ANR	3957517	Identifier	edgectr		3956115	1					
ANR	3957518	PtrMemberAccess	tm -> edgectr		3956115	1					
ANR	3957519	Identifier	tm		3956115	0					
ANR	3957520	Identifier	edgectr		3956115	1					
ANR	3957521	ExpressionStatement	tmp -> fromlayer = a -> layer	3040:6:76117:76142	3956115	5	True				
ANR	3957522	AssignmentExpression	tmp -> fromlayer = a -> layer		3956115	0		=			
ANR	3957523	PtrMemberAccess	tmp -> fromlayer		3956115	0					
ANR	3957524	Identifier	tmp		3956115	0					
ANR	3957525	Identifier	fromlayer		3956115	1					
ANR	3957526	PtrMemberAccess	a -> layer		3956115	1					
ANR	3957527	Identifier	a		3956115	0					
ANR	3957528	Identifier	layer		3956115	1					
ANR	3957529	ExpressionStatement	tmp -> tolayer = b -> layer	3041:6:76150:76173	3956115	6	True				
ANR	3957530	AssignmentExpression	tmp -> tolayer = b -> layer		3956115	0		=			
ANR	3957531	PtrMemberAccess	tmp -> tolayer		3956115	0					
ANR	3957532	Identifier	tmp		3956115	0					
ANR	3957533	Identifier	tolayer		3956115	1					
ANR	3957534	PtrMemberAccess	b -> layer		3956115	1					
ANR	3957535	Identifier	b		3956115	0					
ANR	3957536	Identifier	layer		3956115	1					
ANR	3957537	ExpressionStatement	tmp -> style = style	3042:6:76181:76199	3956115	7	True				
ANR	3957538	AssignmentExpression	tmp -> style = style		3956115	0		=			
ANR	3957539	PtrMemberAccess	tmp -> style		3956115	0					
ANR	3957540	Identifier	tmp		3956115	0					
ANR	3957541	Identifier	style		3956115	1					
ANR	3957542	Identifier	style		3956115	1					
ANR	3957543	ExpressionStatement	"r_list_append ( bckedges , tmp )"	3043:6:76207:76236	3956115	8	True				
ANR	3957544	CallExpression	"r_list_append ( bckedges , tmp )"		3956115	0					
ANR	3957545	Callee	r_list_append		3956115	0					
ANR	3957546	Identifier	r_list_append		3956115	0					
ANR	3957547	ArgumentList	bckedges		3956115	1					
ANR	3957548	Argument	bckedges		3956115	0					
ANR	3957549	Identifier	bckedges		3956115	0					
ANR	3957550	Argument	tmp		3956115	1					
ANR	3957551	Identifier	tmp		3956115	0					
ANR	3957552	IfStatement	if ( b -> is_dummy )		3956115	28					
ANR	3957553	Condition	b -> is_dummy	3046:8:76259:76269	3956115	0	True				
ANR	3957554	PtrMemberAccess	b -> is_dummy		3956115	0					
ANR	3957555	Identifier	b		3956115	0					
ANR	3957556	Identifier	is_dummy		3956115	1					
ANR	3957557	CompoundStatement		219:21:5599:5599	3956115	1					
ANR	3957558	ExpressionStatement	style . symbol = LINE_NOSYM_HORIZ	3047:5:76279:76310	3956115	0	True				
ANR	3957559	AssignmentExpression	style . symbol = LINE_NOSYM_HORIZ		3956115	0		=			
ANR	3957560	MemberAccess	style . symbol		3956115	0					
ANR	3957561	Identifier	style		3956115	0					
ANR	3957562	Identifier	symbol		3956115	1					
ANR	3957563	Identifier	LINE_NOSYM_HORIZ		3956115	1					
ANR	3957564	ExpressionStatement	"r_cons_canvas_line_square_defined ( g -> can , bx , by , bx + b -> layer_width , by , & style , 0 , false )"	3048:5:76317:76410	3956115	1	True				
ANR	3957565	CallExpression	"r_cons_canvas_line_square_defined ( g -> can , bx , by , bx + b -> layer_width , by , & style , 0 , false )"		3956115	0					
ANR	3957566	Callee	r_cons_canvas_line_square_defined		3956115	0					
ANR	3957567	Identifier	r_cons_canvas_line_square_defined		3956115	0					
ANR	3957568	ArgumentList	g -> can		3956115	1					
ANR	3957569	Argument	g -> can		3956115	0					
ANR	3957570	PtrMemberAccess	g -> can		3956115	0					
ANR	3957571	Identifier	g		3956115	0					
ANR	3957572	Identifier	can		3956115	1					
ANR	3957573	Argument	bx		3956115	1					
ANR	3957574	Identifier	bx		3956115	0					
ANR	3957575	Argument	by		3956115	2					
ANR	3957576	Identifier	by		3956115	0					
ANR	3957577	Argument	bx + b -> layer_width		3956115	3					
ANR	3957578	AdditiveExpression	bx + b -> layer_width		3956115	0		+			
ANR	3957579	Identifier	bx		3956115	0					
ANR	3957580	PtrMemberAccess	b -> layer_width		3956115	1					
ANR	3957581	Identifier	b		3956115	0					
ANR	3957582	Identifier	layer_width		3956115	1					
ANR	3957583	Argument	by		3956115	4					
ANR	3957584	Identifier	by		3956115	0					
ANR	3957585	Argument	& style		3956115	5					
ANR	3957586	UnaryOperationExpression	& style		3956115	0					
ANR	3957587	UnaryOperator	&		3956115	0					
ANR	3957588	Identifier	style		3956115	1					
ANR	3957589	Argument	0		3956115	6					
ANR	3957590	PrimaryExpression	0		3956115	0					
ANR	3957591	Argument	false		3956115	7					
ANR	3957592	Identifier	false		3956115	0					
ANR	3957593	IfStatement	if ( ( b -> y == a -> y && b -> h != a -> h ) || b -> y != a -> y || b -> layer <= a -> layer || ( ! a -> is_dummy && b -> is_dummy ) || ( a -> is_dummy && ! b -> is_dummy ) )		3956115	29					
ANR	3957594	Condition	( b -> y == a -> y && b -> h != a -> h ) || b -> y != a -> y || b -> layer <= a -> layer || ( ! a -> is_dummy && b -> is_dummy ) || ( a -> is_dummy && ! b -> is_dummy )	3050:8:76426:76561	3956115	0	True				
ANR	3957595	OrExpression	( b -> y == a -> y && b -> h != a -> h ) || b -> y != a -> y || b -> layer <= a -> layer || ( ! a -> is_dummy && b -> is_dummy ) || ( a -> is_dummy && ! b -> is_dummy )		3956115	0		||			
ANR	3957596	AndExpression	b -> y == a -> y && b -> h != a -> h		3956115	0		&&			
ANR	3957597	EqualityExpression	b -> y == a -> y		3956115	0		==			
ANR	3957598	PtrMemberAccess	b -> y		3956115	0					
ANR	3957599	Identifier	b		3956115	0					
ANR	3957600	Identifier	y		3956115	1					
ANR	3957601	PtrMemberAccess	a -> y		3956115	1					
ANR	3957602	Identifier	a		3956115	0					
ANR	3957603	Identifier	y		3956115	1					
ANR	3957604	EqualityExpression	b -> h != a -> h		3956115	1		!=			
ANR	3957605	PtrMemberAccess	b -> h		3956115	0					
ANR	3957606	Identifier	b		3956115	0					
ANR	3957607	Identifier	h		3956115	1					
ANR	3957608	PtrMemberAccess	a -> h		3956115	1					
ANR	3957609	Identifier	a		3956115	0					
ANR	3957610	Identifier	h		3956115	1					
ANR	3957611	OrExpression	b -> y != a -> y || b -> layer <= a -> layer || ( ! a -> is_dummy && b -> is_dummy ) || ( a -> is_dummy && ! b -> is_dummy )		3956115	1		||			
ANR	3957612	EqualityExpression	b -> y != a -> y		3956115	0		!=			
ANR	3957613	PtrMemberAccess	b -> y		3956115	0					
ANR	3957614	Identifier	b		3956115	0					
ANR	3957615	Identifier	y		3956115	1					
ANR	3957616	PtrMemberAccess	a -> y		3956115	1					
ANR	3957617	Identifier	a		3956115	0					
ANR	3957618	Identifier	y		3956115	1					
ANR	3957619	OrExpression	b -> layer <= a -> layer || ( ! a -> is_dummy && b -> is_dummy ) || ( a -> is_dummy && ! b -> is_dummy )		3956115	1		||			
ANR	3957620	RelationalExpression	b -> layer <= a -> layer		3956115	0		<=			
ANR	3957621	PtrMemberAccess	b -> layer		3956115	0					
ANR	3957622	Identifier	b		3956115	0					
ANR	3957623	Identifier	layer		3956115	1					
ANR	3957624	PtrMemberAccess	a -> layer		3956115	1					
ANR	3957625	Identifier	a		3956115	0					
ANR	3957626	Identifier	layer		3956115	1					
ANR	3957627	OrExpression	( ! a -> is_dummy && b -> is_dummy ) || ( a -> is_dummy && ! b -> is_dummy )		3956115	1		||			
ANR	3957628	AndExpression	! a -> is_dummy && b -> is_dummy		3956115	0		&&			
ANR	3957629	UnaryOperationExpression	! a -> is_dummy		3956115	0					
ANR	3957630	UnaryOperator	!		3956115	0					
ANR	3957631	PtrMemberAccess	a -> is_dummy		3956115	1					
ANR	3957632	Identifier	a		3956115	0					
ANR	3957633	Identifier	is_dummy		3956115	1					
ANR	3957634	PtrMemberAccess	b -> is_dummy		3956115	1					
ANR	3957635	Identifier	b		3956115	0					
ANR	3957636	Identifier	is_dummy		3956115	1					
ANR	3957637	AndExpression	a -> is_dummy && ! b -> is_dummy		3956115	1		&&			
ANR	3957638	PtrMemberAccess	a -> is_dummy		3956115	0					
ANR	3957639	Identifier	a		3956115	0					
ANR	3957640	Identifier	is_dummy		3956115	1					
ANR	3957641	UnaryOperationExpression	! b -> is_dummy		3956115	1					
ANR	3957642	UnaryOperator	!		3956115	0					
ANR	3957643	PtrMemberAccess	b -> is_dummy		3956115	1					
ANR	3957644	Identifier	b		3956115	0					
ANR	3957645	Identifier	is_dummy		3956115	1					
ANR	3957646	CompoundStatement		223:146:5891:5891	3956115	1					
ANR	3957647	ExpressionStatement	tm -> edgectr += 1	3051:5:76571:76587	3956115	0	True				
ANR	3957648	AssignmentExpression	tm -> edgectr += 1		3956115	0		+=			
ANR	3957649	PtrMemberAccess	tm -> edgectr		3956115	0					
ANR	3957650	Identifier	tm		3956115	0					
ANR	3957651	Identifier	edgectr		3956115	1					
ANR	3957652	PrimaryExpression	1		3956115	1					
ANR	3957653	BreakStatement	break ;	3053:4:76599:76604	3956115	30	True				
ANR	3957654	IdentifierDeclStatement	struct tmpbackedgeinfo * temp ;	3058:1:76620:76648	3956115	22	True				
ANR	3957655	IdentifierDecl	* temp		3956115	0					
ANR	3957656	IdentifierDeclType	struct tmpbackedgeinfo *		3956115	0					
ANR	3957657	Identifier	temp		3956115	1					
ANR	3957658	Statement	r_list_foreach	3059:1:76651:76664	3956115	23	True				
ANR	3957659	Statement	(	3059:16:76666:76666	3956115	24	True				
ANR	3957660	Statement	bckedges	3059:17:76667:76674	3956115	25	True				
ANR	3957661	Statement	","	3059:25:76675:76675	3956115	26	True				
ANR	3957662	Statement	itm	3059:27:76677:76679	3956115	27	True				
ANR	3957663	Statement	","	3059:30:76680:76680	3956115	28	True				
ANR	3957664	Statement	temp	3059:32:76682:76685	3956115	29	True				
ANR	3957665	Statement	)	3059:36:76686:76686	3956115	30	True				
ANR	3957666	CompoundStatement		235:2:6070:6096	3956115	31					
ANR	3957667	IdentifierDeclStatement	"int leftlen , rightlen ;"	3060:2:76692:76713	3956115	0	True				
ANR	3957668	IdentifierDecl	leftlen		3956115	0					
ANR	3957669	IdentifierDeclType	int		3956115	0					
ANR	3957670	Identifier	leftlen		3956115	1					
ANR	3957671	IdentifierDecl	rightlen		3956115	1					
ANR	3957672	IdentifierDeclType	int		3956115	0					
ANR	3957673	Identifier	rightlen		3956115	1					
ANR	3957674	IdentifierDeclStatement	"int minx = 0 , maxx = 0 ;"	3061:2:76717:76739	3956115	1	True				
ANR	3957675	IdentifierDecl	minx = 0		3956115	0					
ANR	3957676	IdentifierDeclType	int		3956115	0					
ANR	3957677	Identifier	minx		3956115	1					
ANR	3957678	AssignmentExpression	minx = 0		3956115	2		=			
ANR	3957679	Identifier	minx		3956115	0					
ANR	3957680	PrimaryExpression	0		3956115	1					
ANR	3957681	IdentifierDecl	maxx = 0		3956115	1					
ANR	3957682	IdentifierDeclType	int		3956115	0					
ANR	3957683	Identifier	maxx		3956115	1					
ANR	3957684	AssignmentExpression	maxx = 0		3956115	2		=			
ANR	3957685	Identifier	maxx		3956115	0					
ANR	3957686	PrimaryExpression	0		3956115	1					
ANR	3957687	IdentifierDeclStatement	struct tmplayer * tt = NULL ;	3062:2:76743:76769	3956115	2	True				
ANR	3957688	IdentifierDecl	* tt = NULL		3956115	0					
ANR	3957689	IdentifierDeclType	struct tmplayer *		3956115	0					
ANR	3957690	Identifier	tt		3956115	1					
ANR	3957691	AssignmentExpression	* tt = NULL		3956115	2		=			
ANR	3957692	Identifier	NULL		3956115	0					
ANR	3957693	Identifier	NULL		3956115	1					
ANR	3957694	ExpressionStatement	"tl = r_list_get_n ( lyr , temp -> fromlayer )"	3063:2:76773:76813	3956115	3	True				
ANR	3957695	AssignmentExpression	"tl = r_list_get_n ( lyr , temp -> fromlayer )"		3956115	0		=			
ANR	3957696	Identifier	tl		3956115	0					
ANR	3957697	CallExpression	"r_list_get_n ( lyr , temp -> fromlayer )"		3956115	1					
ANR	3957698	Callee	r_list_get_n		3956115	0					
ANR	3957699	Identifier	r_list_get_n		3956115	0					
ANR	3957700	ArgumentList	lyr		3956115	1					
ANR	3957701	Argument	lyr		3956115	0					
ANR	3957702	Identifier	lyr		3956115	0					
ANR	3957703	Argument	temp -> fromlayer		3956115	1					
ANR	3957704	PtrMemberAccess	temp -> fromlayer		3956115	0					
ANR	3957705	Identifier	temp		3956115	0					
ANR	3957706	Identifier	fromlayer		3956115	1					
ANR	3957707	IfStatement	if ( r_cons_is_breaked ( ) )		3956115	4					
ANR	3957708	Condition	r_cons_is_breaked ( )	3064:6:76821:76840	3956115	0	True				
ANR	3957709	CallExpression	r_cons_is_breaked ( )		3956115	0					
ANR	3957710	Callee	r_cons_is_breaked		3956115	0					
ANR	3957711	Identifier	r_cons_is_breaked		3956115	0					
ANR	3957712	ArgumentList			3956115	1					
ANR	3957713	CompoundStatement		237:28:6170:6170	3956115	1					
ANR	3957714	BreakStatement	break ;	3065:3:76848:76853	3956115	0	True				
ANR	3957715	Statement	r_list_foreach	3068:2:76862:76875	3956115	5	True				
ANR	3957716	Statement	(	3068:17:76877:76877	3956115	6	True				
ANR	3957717	Statement	lyr	3068:18:76878:76880	3956115	7	True				
ANR	3957718	Statement	","	3068:21:76881:76881	3956115	8	True				
ANR	3957719	Statement	ito	3068:23:76883:76885	3956115	9	True				
ANR	3957720	Statement	","	3068:26:76886:76886	3956115	10	True				
ANR	3957721	Statement	tl	3068:28:76888:76889	3956115	11	True				
ANR	3957722	Statement	)	3068:30:76890:76890	3956115	12	True				
ANR	3957723	CompoundStatement		241:32:6219:6219	3956115	13					
ANR	3957724	IfStatement	if ( tl -> layer <= temp -> tolayer )		3956115	0					
ANR	3957725	Condition	tl -> layer <= temp -> tolayer	3069:7:76901:76926	3956115	0	True				
ANR	3957726	RelationalExpression	tl -> layer <= temp -> tolayer		3956115	0		<=			
ANR	3957727	PtrMemberAccess	tl -> layer		3956115	0					
ANR	3957728	Identifier	tl		3956115	0					
ANR	3957729	Identifier	layer		3956115	1					
ANR	3957730	PtrMemberAccess	temp -> tolayer		3956115	1					
ANR	3957731	Identifier	temp		3956115	0					
ANR	3957732	Identifier	tolayer		3956115	1					
ANR	3957733	CompoundStatement		242:35:6256:6256	3956115	1					
ANR	3957734	ExpressionStatement	tt = tl	3070:4:76935:76942	3956115	0	True				
ANR	3957735	AssignmentExpression	tt = tl		3956115	0		=			
ANR	3957736	Identifier	tt		3956115	0					
ANR	3957737	Identifier	tl		3956115	1					
ANR	3957738	ExpressionStatement	minx = tl -> minx	3071:4:76948:76963	3956115	1	True				
ANR	3957739	AssignmentExpression	minx = tl -> minx		3956115	0		=			
ANR	3957740	Identifier	minx		3956115	0					
ANR	3957741	PtrMemberAccess	tl -> minx		3956115	1					
ANR	3957742	Identifier	tl		3956115	0					
ANR	3957743	Identifier	minx		3956115	1					
ANR	3957744	ExpressionStatement	maxx = tl -> maxx	3072:4:76969:76984	3956115	2	True				
ANR	3957745	AssignmentExpression	maxx = tl -> maxx		3956115	0		=			
ANR	3957746	Identifier	maxx		3956115	0					
ANR	3957747	PtrMemberAccess	tl -> maxx		3956115	1					
ANR	3957748	Identifier	tl		3956115	0					
ANR	3957749	Identifier	maxx		3956115	1					
ANR	3957750	ContinueStatement	continue ;	3073:4:76990:76998	3956115	3	True				
ANR	3957751	ExpressionStatement	minx = minx < tl -> minx ? minx : tl -> minx	3075:3:77008:77048	3956115	1	True				
ANR	3957752	AssignmentExpression	minx = minx < tl -> minx ? minx : tl -> minx		3956115	0		=			
ANR	3957753	Identifier	minx		3956115	0					
ANR	3957754	ConditionalExpression	minx < tl -> minx ? minx : tl -> minx		3956115	1					
ANR	3957755	Condition	minx < tl -> minx		3956115	0					
ANR	3957756	RelationalExpression	minx < tl -> minx		3956115	0		<			
ANR	3957757	Identifier	minx		3956115	0					
ANR	3957758	PtrMemberAccess	tl -> minx		3956115	1					
ANR	3957759	Identifier	tl		3956115	0					
ANR	3957760	Identifier	minx		3956115	1					
ANR	3957761	Identifier	minx		3956115	1					
ANR	3957762	PtrMemberAccess	tl -> minx		3956115	2					
ANR	3957763	Identifier	tl		3956115	0					
ANR	3957764	Identifier	minx		3956115	1					
ANR	3957765	ExpressionStatement	maxx = maxx > tl -> maxx ? maxx : tl -> maxx	3076:3:77053:77093	3956115	2	True				
ANR	3957766	AssignmentExpression	maxx = maxx > tl -> maxx ? maxx : tl -> maxx		3956115	0		=			
ANR	3957767	Identifier	maxx		3956115	0					
ANR	3957768	ConditionalExpression	maxx > tl -> maxx ? maxx : tl -> maxx		3956115	1					
ANR	3957769	Condition	maxx > tl -> maxx		3956115	0					
ANR	3957770	RelationalExpression	maxx > tl -> maxx		3956115	0		>			
ANR	3957771	Identifier	maxx		3956115	0					
ANR	3957772	PtrMemberAccess	tl -> maxx		3956115	1					
ANR	3957773	Identifier	tl		3956115	0					
ANR	3957774	Identifier	maxx		3956115	1					
ANR	3957775	Identifier	maxx		3956115	1					
ANR	3957776	PtrMemberAccess	tl -> maxx		3956115	2					
ANR	3957777	Identifier	tl		3956115	0					
ANR	3957778	Identifier	maxx		3956115	1					
ANR	3957779	IfStatement	if ( tl -> layer >= temp -> fromlayer )		3956115	3					
ANR	3957780	Condition	tl -> layer >= temp -> fromlayer	3077:7:77102:77129	3956115	0	True				
ANR	3957781	RelationalExpression	tl -> layer >= temp -> fromlayer		3956115	0		>=			
ANR	3957782	PtrMemberAccess	tl -> layer		3956115	0					
ANR	3957783	Identifier	tl		3956115	0					
ANR	3957784	Identifier	layer		3956115	1					
ANR	3957785	PtrMemberAccess	temp -> fromlayer		3956115	1					
ANR	3957786	Identifier	temp		3956115	0					
ANR	3957787	Identifier	fromlayer		3956115	1					
ANR	3957788	CompoundStatement		250:37:6459:6459	3956115	1					
ANR	3957789	BreakStatement	break ;	3078:4:77138:77143	3956115	0	True				
ANR	3957790	IfStatement	if ( tt )		3956115	14					
ANR	3957791	Condition	tt	3082:6:77161:77162	3956115	0	True				
ANR	3957792	Identifier	tt		3956115	0					
ANR	3957793	CompoundStatement		255:10:6492:6492	3956115	1					
ANR	3957794	ExpressionStatement	tt -> revedgectr += 1	3083:3:77170:77189	3956115	0	True				
ANR	3957795	AssignmentExpression	tt -> revedgectr += 1		3956115	0		+=			
ANR	3957796	PtrMemberAccess	tt -> revedgectr		3956115	0					
ANR	3957797	Identifier	tt		3956115	0					
ANR	3957798	Identifier	revedgectr		3956115	1					
ANR	3957799	PrimaryExpression	1		3956115	1					
ANR	3957800	IfStatement	if ( g -> layout == 0 )		3956115	15					
ANR	3957801	Condition	g -> layout == 0	3085:6:77201:77214	3956115	0	True				
ANR	3957802	EqualityExpression	g -> layout == 0		3956115	0		==			
ANR	3957803	PtrMemberAccess	g -> layout		3956115	0					
ANR	3957804	Identifier	g		3956115	0					
ANR	3957805	Identifier	layout		3956115	1					
ANR	3957806	PrimaryExpression	0		3956115	1					
ANR	3957807	CompoundStatement		258:22:6544:6544	3956115	1					
ANR	3957808	ExpressionStatement	leftlen = ( temp -> ax - minx ) + ( temp -> bx - minx )	3086:3:77222:77269	3956115	0	True				
ANR	3957809	AssignmentExpression	leftlen = ( temp -> ax - minx ) + ( temp -> bx - minx )		3956115	0		=			
ANR	3957810	Identifier	leftlen		3956115	0					
ANR	3957811	AdditiveExpression	( temp -> ax - minx ) + ( temp -> bx - minx )		3956115	1		+			
ANR	3957812	AdditiveExpression	temp -> ax - minx		3956115	0		-			
ANR	3957813	PtrMemberAccess	temp -> ax		3956115	0					
ANR	3957814	Identifier	temp		3956115	0					
ANR	3957815	Identifier	ax		3956115	1					
ANR	3957816	Identifier	minx		3956115	1					
ANR	3957817	AdditiveExpression	temp -> bx - minx		3956115	1		-			
ANR	3957818	PtrMemberAccess	temp -> bx		3956115	0					
ANR	3957819	Identifier	temp		3956115	0					
ANR	3957820	Identifier	bx		3956115	1					
ANR	3957821	Identifier	minx		3956115	1					
ANR	3957822	ExpressionStatement	rightlen = ( maxx - temp -> ax ) + ( maxx - temp -> bx )	3087:3:77274:77322	3956115	1	True				
ANR	3957823	AssignmentExpression	rightlen = ( maxx - temp -> ax ) + ( maxx - temp -> bx )		3956115	0		=			
ANR	3957824	Identifier	rightlen		3956115	0					
ANR	3957825	AdditiveExpression	( maxx - temp -> ax ) + ( maxx - temp -> bx )		3956115	1		+			
ANR	3957826	AdditiveExpression	maxx - temp -> ax		3956115	0		-			
ANR	3957827	Identifier	maxx		3956115	0					
ANR	3957828	PtrMemberAccess	temp -> ax		3956115	1					
ANR	3957829	Identifier	temp		3956115	0					
ANR	3957830	Identifier	ax		3956115	1					
ANR	3957831	AdditiveExpression	maxx - temp -> bx		3956115	1		-			
ANR	3957832	Identifier	maxx		3956115	0					
ANR	3957833	PtrMemberAccess	temp -> bx		3956115	1					
ANR	3957834	Identifier	temp		3956115	0					
ANR	3957835	Identifier	bx		3956115	1					
ANR	3957836	ElseStatement	else		3956115	0					
ANR	3957837	CompoundStatement		261:9:6660:6660	3956115	0					
ANR	3957838	ExpressionStatement	leftlen = ( temp -> ay - minx ) + ( temp -> by - minx )	3089:3:77338:77385	3956115	0	True				
ANR	3957839	AssignmentExpression	leftlen = ( temp -> ay - minx ) + ( temp -> by - minx )		3956115	0		=			
ANR	3957840	Identifier	leftlen		3956115	0					
ANR	3957841	AdditiveExpression	( temp -> ay - minx ) + ( temp -> by - minx )		3956115	1		+			
ANR	3957842	AdditiveExpression	temp -> ay - minx		3956115	0		-			
ANR	3957843	PtrMemberAccess	temp -> ay		3956115	0					
ANR	3957844	Identifier	temp		3956115	0					
ANR	3957845	Identifier	ay		3956115	1					
ANR	3957846	Identifier	minx		3956115	1					
ANR	3957847	AdditiveExpression	temp -> by - minx		3956115	1		-			
ANR	3957848	PtrMemberAccess	temp -> by		3956115	0					
ANR	3957849	Identifier	temp		3956115	0					
ANR	3957850	Identifier	by		3956115	1					
ANR	3957851	Identifier	minx		3956115	1					
ANR	3957852	ExpressionStatement	rightlen = ( maxx - temp -> ay ) + ( maxx - temp -> by )	3090:3:77390:77438	3956115	1	True				
ANR	3957853	AssignmentExpression	rightlen = ( maxx - temp -> ay ) + ( maxx - temp -> by )		3956115	0		=			
ANR	3957854	Identifier	rightlen		3956115	0					
ANR	3957855	AdditiveExpression	( maxx - temp -> ay ) + ( maxx - temp -> by )		3956115	1		+			
ANR	3957856	AdditiveExpression	maxx - temp -> ay		3956115	0		-			
ANR	3957857	Identifier	maxx		3956115	0					
ANR	3957858	PtrMemberAccess	temp -> ay		3956115	1					
ANR	3957859	Identifier	temp		3956115	0					
ANR	3957860	Identifier	ay		3956115	1					
ANR	3957861	AdditiveExpression	maxx - temp -> by		3956115	1		-			
ANR	3957862	Identifier	maxx		3956115	0					
ANR	3957863	PtrMemberAccess	temp -> by		3956115	1					
ANR	3957864	Identifier	temp		3956115	0					
ANR	3957865	Identifier	by		3956115	1					
ANR	3957866	IfStatement	if ( tt )		3956115	16					
ANR	3957867	Condition	tt	3093:6:77451:77452	3956115	0	True				
ANR	3957868	Identifier	tt		3956115	0					
ANR	3957869	CompoundStatement		267:3:6787:6837	3956115	1					
ANR	3957870	IdentifierDeclStatement	int arg = ( rightlen < leftlen ) ? maxx + 1 : minx - 1 ;	3094:3:77460:77510	3956115	0	True				
ANR	3957871	IdentifierDecl	arg = ( rightlen < leftlen ) ? maxx + 1 : minx - 1		3956115	0					
ANR	3957872	IdentifierDeclType	int		3956115	0					
ANR	3957873	Identifier	arg		3956115	1					
ANR	3957874	AssignmentExpression	arg = ( rightlen < leftlen ) ? maxx + 1 : minx - 1		3956115	2		=			
ANR	3957875	Identifier	arg		3956115	0					
ANR	3957876	ConditionalExpression	( rightlen < leftlen ) ? maxx + 1 : minx - 1		3956115	1					
ANR	3957877	Condition	rightlen < leftlen		3956115	0					
ANR	3957878	RelationalExpression	rightlen < leftlen		3956115	0		<			
ANR	3957879	Identifier	rightlen		3956115	0					
ANR	3957880	Identifier	leftlen		3956115	1					
ANR	3957881	AdditiveExpression	maxx + 1		3956115	1		+			
ANR	3957882	Identifier	maxx		3956115	0					
ANR	3957883	PrimaryExpression	1		3956115	1					
ANR	3957884	AdditiveExpression	minx - 1		3956115	2		-			
ANR	3957885	Identifier	minx		3956115	0					
ANR	3957886	PrimaryExpression	1		3956115	1					
ANR	3957887	ExpressionStatement	"r_cons_canvas_line_back_edge ( g -> can , temp -> ax , temp -> ay , temp -> bx , temp -> by , & ( temp -> style ) , temp -> edgectr , arg , tt -> revedgectr , ! g -> layout )"	3095:3:77515:77656	3956115	1	True				
ANR	3957888	CallExpression	"r_cons_canvas_line_back_edge ( g -> can , temp -> ax , temp -> ay , temp -> bx , temp -> by , & ( temp -> style ) , temp -> edgectr , arg , tt -> revedgectr , ! g -> layout )"		3956115	0					
ANR	3957889	Callee	r_cons_canvas_line_back_edge		3956115	0					
ANR	3957890	Identifier	r_cons_canvas_line_back_edge		3956115	0					
ANR	3957891	ArgumentList	g -> can		3956115	1					
ANR	3957892	Argument	g -> can		3956115	0					
ANR	3957893	PtrMemberAccess	g -> can		3956115	0					
ANR	3957894	Identifier	g		3956115	0					
ANR	3957895	Identifier	can		3956115	1					
ANR	3957896	Argument	temp -> ax		3956115	1					
ANR	3957897	PtrMemberAccess	temp -> ax		3956115	0					
ANR	3957898	Identifier	temp		3956115	0					
ANR	3957899	Identifier	ax		3956115	1					
ANR	3957900	Argument	temp -> ay		3956115	2					
ANR	3957901	PtrMemberAccess	temp -> ay		3956115	0					
ANR	3957902	Identifier	temp		3956115	0					
ANR	3957903	Identifier	ay		3956115	1					
ANR	3957904	Argument	temp -> bx		3956115	3					
ANR	3957905	PtrMemberAccess	temp -> bx		3956115	0					
ANR	3957906	Identifier	temp		3956115	0					
ANR	3957907	Identifier	bx		3956115	1					
ANR	3957908	Argument	temp -> by		3956115	4					
ANR	3957909	PtrMemberAccess	temp -> by		3956115	0					
ANR	3957910	Identifier	temp		3956115	0					
ANR	3957911	Identifier	by		3956115	1					
ANR	3957912	Argument	& ( temp -> style )		3956115	5					
ANR	3957913	UnaryOperationExpression	& ( temp -> style )		3956115	0					
ANR	3957914	UnaryOperator	&		3956115	0					
ANR	3957915	PtrMemberAccess	temp -> style		3956115	1					
ANR	3957916	Identifier	temp		3956115	0					
ANR	3957917	Identifier	style		3956115	1					
ANR	3957918	Argument	temp -> edgectr		3956115	6					
ANR	3957919	PtrMemberAccess	temp -> edgectr		3956115	0					
ANR	3957920	Identifier	temp		3956115	0					
ANR	3957921	Identifier	edgectr		3956115	1					
ANR	3957922	Argument	arg		3956115	7					
ANR	3957923	Identifier	arg		3956115	0					
ANR	3957924	Argument	tt -> revedgectr		3956115	8					
ANR	3957925	PtrMemberAccess	tt -> revedgectr		3956115	0					
ANR	3957926	Identifier	tt		3956115	0					
ANR	3957927	Identifier	revedgectr		3956115	1					
ANR	3957928	Argument	! g -> layout		3956115	9					
ANR	3957929	UnaryOperationExpression	! g -> layout		3956115	0					
ANR	3957930	UnaryOperator	!		3956115	0					
ANR	3957931	PtrMemberAccess	g -> layout		3956115	1					
ANR	3957932	Identifier	g		3956115	0					
ANR	3957933	Identifier	layout		3956115	1					
ANR	3957934	Statement	r_list_foreach	3098:2:77665:77678	3956115	17	True				
ANR	3957935	Statement	(	3098:17:77680:77680	3956115	18	True				
ANR	3957936	Statement	lyr	3098:18:77681:77683	3956115	19	True				
ANR	3957937	Statement	","	3098:21:77684:77684	3956115	20	True				
ANR	3957938	Statement	ito	3098:23:77686:77688	3956115	21	True				
ANR	3957939	Statement	","	3098:26:77689:77689	3956115	22	True				
ANR	3957940	Statement	tl	3098:28:77691:77692	3956115	23	True				
ANR	3957941	Statement	)	3098:30:77693:77693	3956115	24	True				
ANR	3957942	CompoundStatement		271:32:7022:7022	3956115	25					
ANR	3957943	IfStatement	if ( tl -> layer < temp -> tolayer )		3956115	0					
ANR	3957944	Condition	tl -> layer < temp -> tolayer	3099:7:77704:77728	3956115	0	True				
ANR	3957945	RelationalExpression	tl -> layer < temp -> tolayer		3956115	0		<			
ANR	3957946	PtrMemberAccess	tl -> layer		3956115	0					
ANR	3957947	Identifier	tl		3956115	0					
ANR	3957948	Identifier	layer		3956115	1					
ANR	3957949	PtrMemberAccess	temp -> tolayer		3956115	1					
ANR	3957950	Identifier	temp		3956115	0					
ANR	3957951	Identifier	tolayer		3956115	1					
ANR	3957952	CompoundStatement		272:34:7058:7058	3956115	1					
ANR	3957953	ContinueStatement	continue ;	3100:4:77737:77745	3956115	0	True				
ANR	3957954	IfStatement	if ( rightlen < leftlen )		3956115	1					
ANR	3957955	Condition	rightlen < leftlen	3102:7:77759:77776	3956115	0	True				
ANR	3957956	RelationalExpression	rightlen < leftlen		3956115	0		<			
ANR	3957957	Identifier	rightlen		3956115	0					
ANR	3957958	Identifier	leftlen		3956115	1					
ANR	3957959	CompoundStatement		275:27:7106:7106	3956115	1					
ANR	3957960	ExpressionStatement	tl -> maxx = maxx + 1	3103:4:77785:77804	3956115	0	True				
ANR	3957961	AssignmentExpression	tl -> maxx = maxx + 1		3956115	0		=			
ANR	3957962	PtrMemberAccess	tl -> maxx		3956115	0					
ANR	3957963	Identifier	tl		3956115	0					
ANR	3957964	Identifier	maxx		3956115	1					
ANR	3957965	AdditiveExpression	maxx + 1		3956115	1		+			
ANR	3957966	Identifier	maxx		3956115	0					
ANR	3957967	PrimaryExpression	1		3956115	1					
ANR	3957968	ElseStatement	else		3956115	0					
ANR	3957969	CompoundStatement		277:10:7143:7143	3956115	0					
ANR	3957970	ExpressionStatement	tl -> minx = minx - 1	3105:4:77822:77841	3956115	0	True				
ANR	3957971	AssignmentExpression	tl -> minx = minx - 1		3956115	0		=			
ANR	3957972	PtrMemberAccess	tl -> minx		3956115	0					
ANR	3957973	Identifier	tl		3956115	0					
ANR	3957974	Identifier	minx		3956115	1					
ANR	3957975	AdditiveExpression	minx - 1		3956115	1		-			
ANR	3957976	Identifier	minx		3956115	0					
ANR	3957977	PrimaryExpression	1		3956115	1					
ANR	3957978	IfStatement	if ( tl -> layer >= temp -> fromlayer )		3956115	2					
ANR	3957979	Condition	tl -> layer >= temp -> fromlayer	3107:7:77855:77882	3956115	0	True				
ANR	3957980	RelationalExpression	tl -> layer >= temp -> fromlayer		3956115	0		>=			
ANR	3957981	PtrMemberAccess	tl -> layer		3956115	0					
ANR	3957982	Identifier	tl		3956115	0					
ANR	3957983	Identifier	layer		3956115	1					
ANR	3957984	PtrMemberAccess	temp -> fromlayer		3956115	1					
ANR	3957985	Identifier	temp		3956115	0					
ANR	3957986	Identifier	fromlayer		3956115	1					
ANR	3957987	CompoundStatement		280:37:7212:7212	3956115	1					
ANR	3957988	BreakStatement	break ;	3108:4:77891:77896	3956115	0	True				
ANR	3957989	Statement	r_list_foreach	3113:1:77912:77925	3956115	32	True				
ANR	3957990	Statement	(	3113:16:77927:77927	3956115	33	True				
ANR	3957991	Statement	lyr	3113:17:77928:77930	3956115	34	True				
ANR	3957992	Statement	","	3113:20:77931:77931	3956115	35	True				
ANR	3957993	Statement	ito	3113:22:77933:77935	3956115	36	True				
ANR	3957994	Statement	","	3113:25:77936:77936	3956115	37	True				
ANR	3957995	Statement	tl	3113:27:77938:77939	3956115	38	True				
ANR	3957996	Statement	)	3113:29:77940:77940	3956115	39	True				
ANR	3957997	CompoundStatement		286:31:7269:7269	3956115	40					
ANR	3957998	ExpressionStatement	free ( tl )	3114:2:77946:77955	3956115	0	True				
ANR	3957999	CallExpression	free ( tl )		3956115	0					
ANR	3958000	Callee	free		3956115	0					
ANR	3958001	Identifier	free		3956115	0					
ANR	3958002	ArgumentList	tl		3956115	1					
ANR	3958003	Argument	tl		3956115	0					
ANR	3958004	Identifier	tl		3956115	0					
ANR	3958005	Statement	r_list_foreach	3117:1:77962:77975	3956115	41	True				
ANR	3958006	Statement	(	3117:16:77977:77977	3956115	42	True				
ANR	3958007	Statement	bckedges	3117:17:77978:77985	3956115	43	True				
ANR	3958008	Statement	","	3117:25:77986:77986	3956115	44	True				
ANR	3958009	Statement	ito	3117:27:77988:77990	3956115	45	True				
ANR	3958010	Statement	","	3117:30:77991:77991	3956115	46	True				
ANR	3958011	Statement	tl	3117:32:77993:77994	3956115	47	True				
ANR	3958012	Statement	)	3117:34:77995:77995	3956115	48	True				
ANR	3958013	CompoundStatement		290:36:7324:7324	3956115	49					
ANR	3958014	ExpressionStatement	free ( tl )	3118:2:78001:78010	3956115	0	True				
ANR	3958015	CallExpression	free ( tl )		3956115	0					
ANR	3958016	Callee	free		3956115	0					
ANR	3958017	Identifier	free		3956115	0					
ANR	3958018	ArgumentList	tl		3956115	1					
ANR	3958019	Argument	tl		3956115	0					
ANR	3958020	Identifier	tl		3956115	0					
ANR	3958021	ExpressionStatement	r_list_free ( lyr )	3121:1:78017:78034	3956115	50	True				
ANR	3958022	CallExpression	r_list_free ( lyr )		3956115	0					
ANR	3958023	Callee	r_list_free		3956115	0					
ANR	3958024	Identifier	r_list_free		3956115	0					
ANR	3958025	ArgumentList	lyr		3956115	1					
ANR	3958026	Argument	lyr		3956115	0					
ANR	3958027	Identifier	lyr		3956115	0					
ANR	3958028	ExpressionStatement	r_list_free ( bckedges )	3122:1:78037:78059	3956115	51	True				
ANR	3958029	CallExpression	r_list_free ( bckedges )		3956115	0					
ANR	3958030	Callee	r_list_free		3956115	0					
ANR	3958031	Identifier	r_list_free		3956115	0					
ANR	3958032	ArgumentList	bckedges		3956115	1					
ANR	3958033	Argument	bckedges		3956115	0					
ANR	3958034	Identifier	bckedges		3956115	0					
ANR	3958035	ExpressionStatement	r_cons_break_pop ( )	3123:1:78062:78081	3956115	52	True				
ANR	3958036	CallExpression	r_cons_break_pop ( )		3956115	0					
ANR	3958037	Callee	r_cons_break_pop		3956115	0					
ANR	3958038	Identifier	r_cons_break_pop		3956115	0					
ANR	3958039	ArgumentList			3956115	1					
ANR	3958040	ReturnType	static void		3956115	1					
ANR	3958041	Identifier	agraph_print_edges		3956115	2					
ANR	3958042	ParameterList	RAGraph * g		3956115	3					
ANR	3958043	Parameter	RAGraph * g	2828:31:70660:70669	3956115	0	True				
ANR	3958044	ParameterType	RAGraph *		3956115	0					
ANR	3958045	Identifier	g		3956115	1					
ANR	3958046	CFGEntryNode	ENTRY		3956115		True				
ANR	3958047	CFGExitNode	EXIT		3956115		True				
ANR	3958048	CFGErrorNode	ERROR		3956115		True				
ANR	3958049	Symbol	tm -> minx		3956115						
ANR	3958050	Symbol	style . symbol		3956115						
ANR	3958051	Symbol	bendpoint		3956115						
ANR	3958052	Symbol	tmp -> bx		3956115						
ANR	3958053	Symbol	tmp -> by		3956115						
ANR	3958054	Symbol	tmp		3956115						
ANR	3958055	Symbol	( ( RGraphNode * ) r_list_first ( ga -> in_nodes ) ) -> data		3956115						
ANR	3958056	Symbol	a_x_inc		3956115						
ANR	3958057	Symbol	g -> is_callgraph		3956115						
ANR	3958058	Symbol	g -> can		3956115						
ANR	3958059	Symbol	rightlen		3956115						
ANR	3958060	Symbol	tm -> revedgectr		3956115						
ANR	3958061	Symbol	in -> gnode -> out_nodes		3956115						
ANR	3958062	Symbol	neighbours -> length		3956115						
ANR	3958063	Symbol	in		3956115						
ANR	3958064	Symbol	* tt		3956115						
ANR	3958065	Symbol	ga -> in_nodes		3956115						
ANR	3958066	Symbol	in_nth		3956115						
ANR	3958067	Symbol	* in -> gnode		3956115						
ANR	3958068	Symbol	LINE_TRUE		3956115						
ANR	3958069	Symbol	tm -> maxx		3956115						
ANR	3958070	Symbol	ax		3956115						
ANR	3958071	Symbol	ay		3956115						
ANR	3958072	Symbol	style		3956115						
ANR	3958073	Symbol	* tm		3956115						
ANR	3958074	Symbol	* tl		3956115						
ANR	3958075	Symbol	tmplayercmp		3956115						
ANR	3958076	Symbol	* tmp		3956115						
ANR	3958077	Symbol	* * ga		3956115						
ANR	3958078	Symbol	r_graph_get_neighbours		3956115						
ANR	3958079	Symbol	a -> h		3956115						
ANR	3958080	Symbol	( ( RGraphNode * ) r_list_first ( ( in -> gnode ) -> in_nodes ) ) -> data		3956115						
ANR	3958081	Symbol	LINE_UNCJMP		3956115						
ANR	3958082	Symbol	tl -> minx		3956115						
ANR	3958083	Symbol	r_cons_is_breaked		3956115						
ANR	3958084	Symbol	tm -> edgectr		3956115						
ANR	3958085	Symbol	g -> graph		3956115						
ANR	3958086	Symbol	minx		3956115						
ANR	3958087	Symbol	bx		3956115						
ANR	3958088	Symbol	by		3956115						
ANR	3958089	Symbol	arg		3956115						
ANR	3958090	Symbol	temp -> edgectr		3956115						
ANR	3958091	Symbol	tmp -> style		3956115						
ANR	3958092	Symbol	LINE_NOSYM_HORIZ		3956115						
ANR	3958093	Symbol	a		3956115						
ANR	3958094	Symbol	b		3956115						
ANR	3958095	Symbol	DOT_STYLE_CONDITIONAL		3956115						
ANR	3958096	Symbol	r_graph_get_nodes		3956115						
ANR	3958097	Symbol	g -> layout		3956115						
ANR	3958098	Symbol	& style		3956115						
ANR	3958099	Symbol	g		3956115						
ANR	3958100	Symbol	LINE_NONE		3956115						
ANR	3958101	Symbol	neighbours		3956115						
ANR	3958102	Symbol	many		3956115						
ANR	3958103	Symbol	tm -> layer		3956115						
ANR	3958104	Symbol	tmp -> ay		3956115						
ANR	3958105	Symbol	a -> layer		3956115						
ANR	3958106	Symbol	tmp -> ax		3956115						
ANR	3958107	Symbol	t		3956115						
ANR	3958108	Symbol	a -> x		3956115						
ANR	3958109	Symbol	a -> layer_width		3956115						
ANR	3958110	Symbol	a -> y		3956115						
ANR	3958111	Symbol	tl		3956115						
ANR	3958112	Symbol	tm		3956115						
ANR	3958113	Symbol	a -> w		3956115						
ANR	3958114	Symbol	( in -> gnode ) -> in_nodes		3956115						
ANR	3958115	Symbol	b_x_inc		3956115						
ANR	3958116	Symbol	tl -> maxx		3956115						
ANR	3958117	Symbol	r_list_length		3956115						
ANR	3958118	Symbol	tt		3956115						
ANR	3958119	Symbol	* ga		3956115						
ANR	3958120	Symbol	lyr		3956115						
ANR	3958121	Symbol	get_edge_number		3956115						
ANR	3958122	Symbol	temp -> tolayer		3956115						
ANR	3958123	Symbol	ga -> out_nodes		3956115						
ANR	3958124	Symbol	* * in		3956115						
ANR	3958125	Symbol	tmp -> fromlayer		3956115						
ANR	3958126	Symbol	& temp -> style		3956115						
ANR	3958127	Symbol	b -> layer		3956115						
ANR	3958128	Symbol	b -> is_dummy		3956115						
ANR	3958129	Symbol	itn		3956115						
ANR	3958130	Symbol	a -> is_dummy		3956115						
ANR	3958131	Symbol	itm		3956115						
ANR	3958132	Symbol	NULL		3956115						
ANR	3958133	Symbol	DOT_STYLE_BACKEDGE		3956115						
ANR	3958134	Symbol	b -> h		3956115						
ANR	3958135	Symbol	ito		3956115						
ANR	3958136	Symbol	a -> layer_height		3956115						
ANR	3958137	Symbol	first_x_cmp		3956115						
ANR	3958138	Symbol	maxx		3956115						
ANR	3958139	Symbol	temp -> fromlayer		3956115						
ANR	3958140	Symbol	temp -> ax		3956115						
ANR	3958141	Symbol	r_list_get_n		3956115						
ANR	3958142	Symbol	temp -> ay		3956115						
ANR	3958143	Symbol	parent_many		3956115						
ANR	3958144	Symbol	neighbours -> head		3956115						
ANR	3958145	Symbol	* temp		3956115						
ANR	3958146	Symbol	ga -> out_nodes -> sorted		3956115						
ANR	3958147	Symbol	style . color		3956115						
ANR	3958148	Symbol	true		3956115						
ANR	3958149	Symbol	DOT_STYLE_NORMAL		3956115						
ANR	3958150	Symbol	* ga -> out_nodes		3956115						
ANR	3958151	Symbol	g -> hints		3956115						
ANR	3958152	Symbol	* r_list_first		3956115						
ANR	3958153	Symbol	g -> zoom		3956115						
ANR	3958154	Symbol	tt -> revedgectr		3956115						
ANR	3958155	Symbol	in -> is_dummy		3956115						
ANR	3958156	Symbol	* in		3956115						
ANR	3958157	Symbol	temp -> by		3956115						
ANR	3958158	Symbol	calloc		3956115						
ANR	3958159	Symbol	temp -> bx		3956115						
ANR	3958160	Symbol	r_list_first		3956115						
ANR	3958161	Symbol	b -> x		3956115						
ANR	3958162	Symbol	LINE_NOSYM_VERT		3956115						
ANR	3958163	Symbol	ga		3956115						
ANR	3958164	Symbol	gb		3956115						
ANR	3958165	Symbol	b -> y		3956115						
ANR	3958166	Symbol	bckedges		3956115						
ANR	3958167	Symbol	R_EDGES_X_INC		3956115						
ANR	3958168	Symbol	leftlen		3956115						
ANR	3958169	Symbol	temp		3956115						
ANR	3958170	Symbol	tmp -> tolayer		3956115						
ANR	3958171	Symbol	false		3956115						
ANR	3958172	Symbol	style . dot_style		3956115						
ANR	3958173	Symbol	LINE_FALSE		3956115						
ANR	3958174	Symbol	* a		3956115						
ANR	3958175	Symbol	* b		3956115						
ANR	3958176	Symbol	in -> gnode		3956115						
ANR	3958177	Symbol	tmp -> edgectr		3956115						
ANR	3958178	Symbol	* g		3956115						
ANR	3958179	Symbol	nodes		3956115						
ANR	3958180	Symbol	g -> edgemode		3956115						
ANR	3958181	Symbol	* neighbours		3956115						
ANR	3958182	Symbol	tl -> layer		3956115						
ANR	3958183	Symbol	b -> layer_width		3956115						
ANR	3958184	Symbol	out_nth		3956115						
ANR	3958185	Symbol	r_list_new		3956115						
ANR	3958186	Function	agraph_toggle_callgraph	3126:0:78086:78233							
ANR	3958187	FunctionDef	agraph_toggle_callgraph (RAGraph * g)		3958186	0					
ANR	3958188	CompoundStatement		3126:48:78134:78233	3958186	0					
ANR	3958189	ExpressionStatement	g -> is_callgraph = ! g -> is_callgraph	3127:1:78137:78171	3958186	0	True				
ANR	3958190	AssignmentExpression	g -> is_callgraph = ! g -> is_callgraph		3958186	0		=			
ANR	3958191	PtrMemberAccess	g -> is_callgraph		3958186	0					
ANR	3958192	Identifier	g		3958186	0					
ANR	3958193	Identifier	is_callgraph		3958186	1					
ANR	3958194	UnaryOperationExpression	! g -> is_callgraph		3958186	1					
ANR	3958195	UnaryOperator	!		3958186	0					
ANR	3958196	PtrMemberAccess	g -> is_callgraph		3958186	1					
ANR	3958197	Identifier	g		3958186	0					
ANR	3958198	Identifier	is_callgraph		3958186	1					
ANR	3958199	ExpressionStatement	g -> need_reload_nodes = true	3128:1:78174:78201	3958186	1	True				
ANR	3958200	AssignmentExpression	g -> need_reload_nodes = true		3958186	0		=			
ANR	3958201	PtrMemberAccess	g -> need_reload_nodes		3958186	0					
ANR	3958202	Identifier	g		3958186	0					
ANR	3958203	Identifier	need_reload_nodes		3958186	1					
ANR	3958204	Identifier	true		3958186	1					
ANR	3958205	ExpressionStatement	g -> force_update_seek = true	3129:1:78204:78231	3958186	2	True				
ANR	3958206	AssignmentExpression	g -> force_update_seek = true		3958186	0		=			
ANR	3958207	PtrMemberAccess	g -> force_update_seek		3958186	0					
ANR	3958208	Identifier	g		3958186	0					
ANR	3958209	Identifier	force_update_seek		3958186	1					
ANR	3958210	Identifier	true		3958186	1					
ANR	3958211	ReturnType	static void		3958186	1					
ANR	3958212	Identifier	agraph_toggle_callgraph		3958186	2					
ANR	3958213	ParameterList	RAGraph * g		3958186	3					
ANR	3958214	Parameter	RAGraph * g	3126:36:78122:78131	3958186	0	True				
ANR	3958215	ParameterType	RAGraph *		3958186	0					
ANR	3958216	Identifier	g		3958186	1					
ANR	3958217	CFGEntryNode	ENTRY		3958186		True				
ANR	3958218	CFGExitNode	EXIT		3958186		True				
ANR	3958219	Symbol	* g		3958186						
ANR	3958220	Symbol	g -> force_update_seek		3958186						
ANR	3958221	Symbol	g -> need_reload_nodes		3958186						
ANR	3958222	Symbol	g		3958186						
ANR	3958223	Symbol	true		3958186						
ANR	3958224	Symbol	g -> is_callgraph		3958186						
ANR	3958225	Function	agraph_set_zoom	3132:0:78236:78717							
ANR	3958226	FunctionDef	"agraph_set_zoom (RAGraph * g , int v)"		3958225	0					
ANR	3958227	CompoundStatement		3132:47:78283:78717	3958225	0					
ANR	3958228	IfStatement	if ( v >= - 10 )		3958225	0					
ANR	3958229	Condition	v >= - 10	3133:5:78290:78297	3958225	0	True				
ANR	3958230	RelationalExpression	v >= - 10		3958225	0		>=			
ANR	3958231	Identifier	v		3958225	0					
ANR	3958232	UnaryOperationExpression	- 10		3958225	1					
ANR	3958233	UnaryOperator	-		3958225	0					
ANR	3958234	PrimaryExpression	10		3958225	1					
ANR	3958235	CompoundStatement		12:2:218:235	3958225	1					
ANR	3958236	ExpressionStatement	g -> is_tiny = false	3134:2:78304:78322	3958225	0	True				
ANR	3958237	AssignmentExpression	g -> is_tiny = false		3958225	0		=			
ANR	3958238	PtrMemberAccess	g -> is_tiny		3958225	0					
ANR	3958239	Identifier	g		3958225	0					
ANR	3958240	Identifier	is_tiny		3958225	1					
ANR	3958241	Identifier	false		3958225	1					
ANR	3958242	IfStatement	if ( v == 0 )		3958225	1					
ANR	3958243	Condition	v == 0	3135:6:78330:78335	3958225	0	True				
ANR	3958244	EqualityExpression	v == 0		3958225	0		==			
ANR	3958245	Identifier	v		3958225	0					
ANR	3958246	PrimaryExpression	0		3958225	1					
ANR	3958247	CompoundStatement		4:14:54:54	3958225	1					
ANR	3958248	ExpressionStatement	g -> mode = R_AGRAPH_MODE_MINI	3136:3:78343:78371	3958225	0	True				
ANR	3958249	AssignmentExpression	g -> mode = R_AGRAPH_MODE_MINI		3958225	0		=			
ANR	3958250	PtrMemberAccess	g -> mode		3958225	0					
ANR	3958251	Identifier	g		3958225	0					
ANR	3958252	Identifier	mode		3958225	1					
ANR	3958253	Identifier	R_AGRAPH_MODE_MINI		3958225	1					
ANR	3958254	ElseStatement	else		3958225	0					
ANR	3958255	IfStatement	if ( v < 0 )		3958225	0					
ANR	3958256	Condition	v < 0	3137:13:78386:78390	3958225	0	True				
ANR	3958257	RelationalExpression	v < 0		3958225	0		<			
ANR	3958258	Identifier	v		3958225	0					
ANR	3958259	PrimaryExpression	0		3958225	1					
ANR	3958260	CompoundStatement		6:20:109:109	3958225	1					
ANR	3958261	ExpressionStatement	g -> mode = R_AGRAPH_MODE_TINY	3138:3:78398:78426	3958225	0	True				
ANR	3958262	AssignmentExpression	g -> mode = R_AGRAPH_MODE_TINY		3958225	0		=			
ANR	3958263	PtrMemberAccess	g -> mode		3958225	0					
ANR	3958264	Identifier	g		3958225	0					
ANR	3958265	Identifier	mode		3958225	1					
ANR	3958266	Identifier	R_AGRAPH_MODE_TINY		3958225	1					
ANR	3958267	ExpressionStatement	g -> is_tiny = true	3139:3:78431:78448	3958225	1	True				
ANR	3958268	AssignmentExpression	g -> is_tiny = true		3958225	0		=			
ANR	3958269	PtrMemberAccess	g -> is_tiny		3958225	0					
ANR	3958270	Identifier	g		3958225	0					
ANR	3958271	Identifier	is_tiny		3958225	1					
ANR	3958272	Identifier	true		3958225	1					
ANR	3958273	ElseStatement	else		3958225	0					
ANR	3958274	CompoundStatement		9:9:175:175	3958225	0					
ANR	3958275	ExpressionStatement	g -> mode = R_AGRAPH_MODE_NORMAL	3141:3:78464:78494	3958225	0	True				
ANR	3958276	AssignmentExpression	g -> mode = R_AGRAPH_MODE_NORMAL		3958225	0		=			
ANR	3958277	PtrMemberAccess	g -> mode		3958225	0					
ANR	3958278	Identifier	g		3958225	0					
ANR	3958279	Identifier	mode		3958225	1					
ANR	3958280	Identifier	R_AGRAPH_MODE_NORMAL		3958225	1					
ANR	3958281	IdentifierDeclStatement	const int K = 920 ;	3143:2:78502:78519	3958225	2	True				
ANR	3958282	IdentifierDecl	K = 920		3958225	0					
ANR	3958283	IdentifierDeclType	const int		3958225	0					
ANR	3958284	Identifier	K		3958225	1					
ANR	3958285	AssignmentExpression	K = 920		3958225	2		=			
ANR	3958286	Identifier	K		3958225	0					
ANR	3958287	PrimaryExpression	920		3958225	1					
ANR	3958288	IfStatement	if ( g -> zoom < v )		3958225	3					
ANR	3958289	Condition	g -> zoom < v	3144:6:78527:78537	3958225	0	True				
ANR	3958290	RelationalExpression	g -> zoom < v		3958225	0		<			
ANR	3958291	PtrMemberAccess	g -> zoom		3958225	0					
ANR	3958292	Identifier	g		3958225	0					
ANR	3958293	Identifier	zoom		3958225	1					
ANR	3958294	Identifier	v		3958225	1					
ANR	3958295	CompoundStatement		13:19:256:256	3958225	1					
ANR	3958296	ExpressionStatement	g -> can -> sy = ( g -> can -> sy * K ) / 1000	3145:3:78545:78581	3958225	0	True				
ANR	3958297	AssignmentExpression	g -> can -> sy = ( g -> can -> sy * K ) / 1000		3958225	0		=			
ANR	3958298	PtrMemberAccess	g -> can -> sy		3958225	0					
ANR	3958299	PtrMemberAccess	g -> can		3958225	0					
ANR	3958300	Identifier	g		3958225	0					
ANR	3958301	Identifier	can		3958225	1					
ANR	3958302	Identifier	sy		3958225	1					
ANR	3958303	MultiplicativeExpression	( g -> can -> sy * K ) / 1000		3958225	1		/			
ANR	3958304	MultiplicativeExpression	g -> can -> sy * K		3958225	0		*			
ANR	3958305	PtrMemberAccess	g -> can -> sy		3958225	0					
ANR	3958306	PtrMemberAccess	g -> can		3958225	0					
ANR	3958307	Identifier	g		3958225	0					
ANR	3958308	Identifier	can		3958225	1					
ANR	3958309	Identifier	sy		3958225	1					
ANR	3958310	Identifier	K		3958225	1					
ANR	3958311	PrimaryExpression	1000		3958225	1					
ANR	3958312	ElseStatement	else		3958225	0					
ANR	3958313	CompoundStatement		16:7:310:310	3958225	0					
ANR	3958314	ExpressionStatement	g -> can -> sy = ( g -> can -> sy * 1000 ) / K	3148:3:78599:78635	3958225	0	True				
ANR	3958315	AssignmentExpression	g -> can -> sy = ( g -> can -> sy * 1000 ) / K		3958225	0		=			
ANR	3958316	PtrMemberAccess	g -> can -> sy		3958225	0					
ANR	3958317	PtrMemberAccess	g -> can		3958225	0					
ANR	3958318	Identifier	g		3958225	0					
ANR	3958319	Identifier	can		3958225	1					
ANR	3958320	Identifier	sy		3958225	1					
ANR	3958321	MultiplicativeExpression	( g -> can -> sy * 1000 ) / K		3958225	1		/			
ANR	3958322	MultiplicativeExpression	g -> can -> sy * 1000		3958225	0		*			
ANR	3958323	PtrMemberAccess	g -> can -> sy		3958225	0					
ANR	3958324	PtrMemberAccess	g -> can		3958225	0					
ANR	3958325	Identifier	g		3958225	0					
ANR	3958326	Identifier	can		3958225	1					
ANR	3958327	Identifier	sy		3958225	1					
ANR	3958328	PrimaryExpression	1000		3958225	1					
ANR	3958329	Identifier	K		3958225	1					
ANR	3958330	ExpressionStatement	g -> zoom = v	3150:2:78643:78654	3958225	4	True				
ANR	3958331	AssignmentExpression	g -> zoom = v		3958225	0		=			
ANR	3958332	PtrMemberAccess	g -> zoom		3958225	0					
ANR	3958333	Identifier	g		3958225	0					
ANR	3958334	Identifier	zoom		3958225	1					
ANR	3958335	Identifier	v		3958225	1					
ANR	3958336	ExpressionStatement	g -> need_update_dim = true	3151:2:78658:78683	3958225	5	True				
ANR	3958337	AssignmentExpression	g -> need_update_dim = true		3958225	0		=			
ANR	3958338	PtrMemberAccess	g -> need_update_dim		3958225	0					
ANR	3958339	Identifier	g		3958225	0					
ANR	3958340	Identifier	need_update_dim		3958225	1					
ANR	3958341	Identifier	true		3958225	1					
ANR	3958342	ExpressionStatement	g -> need_set_layout = true	3152:2:78687:78712	3958225	6	True				
ANR	3958343	AssignmentExpression	g -> need_set_layout = true		3958225	0		=			
ANR	3958344	PtrMemberAccess	g -> need_set_layout		3958225	0					
ANR	3958345	Identifier	g		3958225	0					
ANR	3958346	Identifier	need_set_layout		3958225	1					
ANR	3958347	Identifier	true		3958225	1					
ANR	3958348	ReturnType	static void		3958225	1					
ANR	3958349	Identifier	agraph_set_zoom		3958225	2					
ANR	3958350	ParameterList	"RAGraph * g , int v"		3958225	3					
ANR	3958351	Parameter	RAGraph * g	3132:28:78264:78273	3958225	0	True				
ANR	3958352	ParameterType	RAGraph *		3958225	0					
ANR	3958353	Identifier	g		3958225	1					
ANR	3958354	Parameter	int v	3132:40:78276:78280	3958225	1	True				
ANR	3958355	ParameterType	int		3958225	0					
ANR	3958356	Identifier	v		3958225	1					
ANR	3958357	CFGEntryNode	ENTRY		3958225		True				
ANR	3958358	CFGExitNode	EXIT		3958225		True				
ANR	3958359	Symbol	g -> need_set_layout		3958225						
ANR	3958360	Symbol	* * g		3958225						
ANR	3958361	Symbol	R_AGRAPH_MODE_NORMAL		3958225						
ANR	3958362	Symbol	g -> zoom		3958225						
ANR	3958363	Symbol	g		3958225						
ANR	3958364	Symbol	false		3958225						
ANR	3958365	Symbol	R_AGRAPH_MODE_MINI		3958225						
ANR	3958366	Symbol	K		3958225						
ANR	3958367	Symbol	* g -> can		3958225						
ANR	3958368	Symbol	g -> need_update_dim		3958225						
ANR	3958369	Symbol	g -> mode		3958225						
ANR	3958370	Symbol	* g		3958225						
ANR	3958371	Symbol	g -> is_tiny		3958225						
ANR	3958372	Symbol	v		3958225						
ANR	3958373	Symbol	true		3958225						
ANR	3958374	Symbol	g -> can		3958225						
ANR	3958375	Symbol	R_AGRAPH_MODE_TINY		3958225						
ANR	3958376	Symbol	g -> can -> sy		3958225						
ANR	3958377	Function	agraph_reload_nodes	3159:0:78906:79043							
ANR	3958378	FunctionDef	"agraph_reload_nodes (RAGraph * g , RCore * core , RAnalFunction * fcn)"		3958377	0					
ANR	3958379	CompoundStatement		3159:76:78982:79043	3958377	0					
ANR	3958380	ExpressionStatement	r_agraph_reset ( g )	3160:1:78985:79003	3958377	0	True				
ANR	3958381	CallExpression	r_agraph_reset ( g )		3958377	0					
ANR	3958382	Callee	r_agraph_reset		3958377	0					
ANR	3958383	Identifier	r_agraph_reset		3958377	0					
ANR	3958384	ArgumentList	g		3958377	1					
ANR	3958385	Argument	g		3958377	0					
ANR	3958386	Identifier	g		3958377	0					
ANR	3958387	ReturnStatement	"return reload_nodes ( g , core , fcn ) ;"	3162:1:79007:79041	3958377	1	True				
ANR	3958388	CallExpression	"reload_nodes ( g , core , fcn )"		3958377	0					
ANR	3958389	Callee	reload_nodes		3958377	0					
ANR	3958390	Identifier	reload_nodes		3958377	0					
ANR	3958391	ArgumentList	g		3958377	1					
ANR	3958392	Argument	g		3958377	0					
ANR	3958393	Identifier	g		3958377	0					
ANR	3958394	Argument	core		3958377	1					
ANR	3958395	Identifier	core		3958377	0					
ANR	3958396	Argument	fcn		3958377	2					
ANR	3958397	Identifier	fcn		3958377	0					
ANR	3958398	ReturnType	static int		3958377	1					
ANR	3958399	Identifier	agraph_reload_nodes		3958377	2					
ANR	3958400	ParameterList	"RAGraph * g , RCore * core , RAnalFunction * fcn"		3958377	3					
ANR	3958401	Parameter	RAGraph * g	3159:31:78937:78946	3958377	0	True				
ANR	3958402	ParameterType	RAGraph *		3958377	0					
ANR	3958403	Identifier	g		3958377	1					
ANR	3958404	Parameter	RCore * core	3159:43:78949:78959	3958377	1	True				
ANR	3958405	ParameterType	RCore *		3958377	0					
ANR	3958406	Identifier	core		3958377	1					
ANR	3958407	Parameter	RAnalFunction * fcn	3159:56:78962:78979	3958377	2	True				
ANR	3958408	ParameterType	RAnalFunction *		3958377	0					
ANR	3958409	Identifier	fcn		3958377	1					
ANR	3958410	CFGEntryNode	ENTRY		3958377		True				
ANR	3958411	CFGExitNode	EXIT		3958377		True				
ANR	3958412	Symbol	fcn		3958377						
ANR	3958413	Symbol	core		3958377						
ANR	3958414	Symbol	reload_nodes		3958377						
ANR	3958415	Symbol	g		3958377						
ANR	3958416	Function	follow_nth	3165:0:79046:79348							
ANR	3958417	FunctionDef	"follow_nth (RAGraph * g , int nth)"		3958416	0					
ANR	3958418	CompoundStatement		3165:44:79090:79348	3958416	0					
ANR	3958419	IdentifierDeclStatement	"const RGraphNode * cn = r_graph_nth_neighbour ( g -> graph , g -> curnode , nth ) ;"	3166:1:79093:79165	3958416	0	True				
ANR	3958420	IdentifierDecl	"* cn = r_graph_nth_neighbour ( g -> graph , g -> curnode , nth )"		3958416	0					
ANR	3958421	IdentifierDeclType	const RGraphNode *		3958416	0					
ANR	3958422	Identifier	cn		3958416	1					
ANR	3958423	AssignmentExpression	"* cn = r_graph_nth_neighbour ( g -> graph , g -> curnode , nth )"		3958416	2		=			
ANR	3958424	Identifier	cn		3958416	0					
ANR	3958425	CallExpression	"r_graph_nth_neighbour ( g -> graph , g -> curnode , nth )"		3958416	1					
ANR	3958426	Callee	r_graph_nth_neighbour		3958416	0					
ANR	3958427	Identifier	r_graph_nth_neighbour		3958416	0					
ANR	3958428	ArgumentList	g -> graph		3958416	1					
ANR	3958429	Argument	g -> graph		3958416	0					
ANR	3958430	PtrMemberAccess	g -> graph		3958416	0					
ANR	3958431	Identifier	g		3958416	0					
ANR	3958432	Identifier	graph		3958416	1					
ANR	3958433	Argument	g -> curnode		3958416	1					
ANR	3958434	PtrMemberAccess	g -> curnode		3958416	0					
ANR	3958435	Identifier	g		3958416	0					
ANR	3958436	Identifier	curnode		3958416	1					
ANR	3958437	Argument	nth		3958416	2					
ANR	3958438	Identifier	nth		3958416	0					
ANR	3958439	IdentifierDeclStatement	RANode * a = get_anode ( cn ) ;	3167:1:79168:79194	3958416	1	True				
ANR	3958440	IdentifierDecl	* a = get_anode ( cn )		3958416	0					
ANR	3958441	IdentifierDeclType	RANode *		3958416	0					
ANR	3958442	Identifier	a		3958416	1					
ANR	3958443	AssignmentExpression	* a = get_anode ( cn )		3958416	2		=			
ANR	3958444	Identifier	a		3958416	0					
ANR	3958445	CallExpression	get_anode ( cn )		3958416	1					
ANR	3958446	Callee	get_anode		3958416	0					
ANR	3958447	Identifier	get_anode		3958416	0					
ANR	3958448	ArgumentList	cn		3958416	1					
ANR	3958449	Argument	cn		3958416	0					
ANR	3958450	Identifier	cn		3958416	0					
ANR	3958451	WhileStatement	while ( a && a -> is_dummy )		3958416	2					
ANR	3958452	Condition	a && a -> is_dummy	3169:8:79205:79220	3958416	0	True				
ANR	3958453	AndExpression	a && a -> is_dummy		3958416	0		&&			
ANR	3958454	Identifier	a		3958416	0					
ANR	3958455	PtrMemberAccess	a -> is_dummy		3958416	1					
ANR	3958456	Identifier	a		3958416	0					
ANR	3958457	Identifier	is_dummy		3958416	1					
ANR	3958458	CompoundStatement		5:26:132:132	3958416	1					
ANR	3958459	ExpressionStatement	"cn = r_graph_nth_neighbour ( g -> graph , a -> gnode , 0 )"	3170:2:79227:79277	3958416	0	True				
ANR	3958460	AssignmentExpression	"cn = r_graph_nth_neighbour ( g -> graph , a -> gnode , 0 )"		3958416	0		=			
ANR	3958461	Identifier	cn		3958416	0					
ANR	3958462	CallExpression	"r_graph_nth_neighbour ( g -> graph , a -> gnode , 0 )"		3958416	1					
ANR	3958463	Callee	r_graph_nth_neighbour		3958416	0					
ANR	3958464	Identifier	r_graph_nth_neighbour		3958416	0					
ANR	3958465	ArgumentList	g -> graph		3958416	1					
ANR	3958466	Argument	g -> graph		3958416	0					
ANR	3958467	PtrMemberAccess	g -> graph		3958416	0					
ANR	3958468	Identifier	g		3958416	0					
ANR	3958469	Identifier	graph		3958416	1					
ANR	3958470	Argument	a -> gnode		3958416	1					
ANR	3958471	PtrMemberAccess	a -> gnode		3958416	0					
ANR	3958472	Identifier	a		3958416	0					
ANR	3958473	Identifier	gnode		3958416	1					
ANR	3958474	Argument	0		3958416	2					
ANR	3958475	PrimaryExpression	0		3958416	0					
ANR	3958476	ExpressionStatement	a = get_anode ( cn )	3171:2:79281:79299	3958416	1	True				
ANR	3958477	AssignmentExpression	a = get_anode ( cn )		3958416	0		=			
ANR	3958478	Identifier	a		3958416	0					
ANR	3958479	CallExpression	get_anode ( cn )		3958416	1					
ANR	3958480	Callee	get_anode		3958416	0					
ANR	3958481	Identifier	get_anode		3958416	0					
ANR	3958482	ArgumentList	cn		3958416	1					
ANR	3958483	Argument	cn		3958416	0					
ANR	3958484	Identifier	cn		3958416	0					
ANR	3958485	IfStatement	if ( a )		3958416	3					
ANR	3958486	Condition	a	3173:5:79309:79309	3958416	0	True				
ANR	3958487	Identifier	a		3958416	0					
ANR	3958488	CompoundStatement		9:8:221:221	3958416	1					
ANR	3958489	ExpressionStatement	"r_agraph_set_curnode ( g , a )"	3174:2:79316:79343	3958416	0	True				
ANR	3958490	CallExpression	"r_agraph_set_curnode ( g , a )"		3958416	0					
ANR	3958491	Callee	r_agraph_set_curnode		3958416	0					
ANR	3958492	Identifier	r_agraph_set_curnode		3958416	0					
ANR	3958493	ArgumentList	g		3958416	1					
ANR	3958494	Argument	g		3958416	0					
ANR	3958495	Identifier	g		3958416	0					
ANR	3958496	Argument	a		3958416	1					
ANR	3958497	Identifier	a		3958416	0					
ANR	3958498	ReturnType	static void		3958416	1					
ANR	3958499	Identifier	follow_nth		3958416	2					
ANR	3958500	ParameterList	"RAGraph * g , int nth"		3958416	3					
ANR	3958501	Parameter	RAGraph * g	3165:23:79069:79078	3958416	0	True				
ANR	3958502	ParameterType	RAGraph *		3958416	0					
ANR	3958503	Identifier	g		3958416	1					
ANR	3958504	Parameter	int nth	3165:35:79081:79087	3958416	1	True				
ANR	3958505	ParameterType	int		3958416	0					
ANR	3958506	Identifier	nth		3958416	1					
ANR	3958507	CFGEntryNode	ENTRY		3958416		True				
ANR	3958508	CFGExitNode	EXIT		3958416		True				
ANR	3958509	Symbol	* g		3958416						
ANR	3958510	Symbol	a		3958416						
ANR	3958511	Symbol	a -> is_dummy		3958416						
ANR	3958512	Symbol	nth		3958416						
ANR	3958513	Symbol	get_anode		3958416						
ANR	3958514	Symbol	g -> graph		3958416						
ANR	3958515	Symbol	g		3958416						
ANR	3958516	Symbol	g -> curnode		3958416						
ANR	3958517	Symbol	a -> gnode		3958416						
ANR	3958518	Symbol	cn		3958416						
ANR	3958519	Symbol	* a		3958416						
ANR	3958520	Symbol	r_graph_nth_neighbour		3958416						
ANR	3958521	Function	move_current_node	3178:0:79351:79595							
ANR	3958522	FunctionDef	"move_current_node (RAGraph * g , int xdiff , int ydiff)"		3958521	0					
ANR	3958523	CompoundStatement		3178:64:79415:79595	3958521	0					
ANR	3958524	IdentifierDeclStatement	RANode * n = get_anode ( g -> curnode ) ;	3179:1:79418:79452	3958521	0	True				
ANR	3958525	IdentifierDecl	* n = get_anode ( g -> curnode )		3958521	0					
ANR	3958526	IdentifierDeclType	RANode *		3958521	0					
ANR	3958527	Identifier	n		3958521	1					
ANR	3958528	AssignmentExpression	* n = get_anode ( g -> curnode )		3958521	2		=			
ANR	3958529	Identifier	n		3958521	0					
ANR	3958530	CallExpression	get_anode ( g -> curnode )		3958521	1					
ANR	3958531	Callee	get_anode		3958521	0					
ANR	3958532	Identifier	get_anode		3958521	0					
ANR	3958533	ArgumentList	g -> curnode		3958521	1					
ANR	3958534	Argument	g -> curnode		3958521	0					
ANR	3958535	PtrMemberAccess	g -> curnode		3958521	0					
ANR	3958536	Identifier	g		3958521	0					
ANR	3958537	Identifier	curnode		3958521	1					
ANR	3958538	IfStatement	if ( n )		3958521	1					
ANR	3958539	Condition	n	3180:5:79459:79459	3958521	0	True				
ANR	3958540	Identifier	n		3958521	0					
ANR	3958541	CompoundStatement		3:8:46:46	3958521	1					
ANR	3958542	IfStatement	if ( is_tiny ( g ) )		3958521	0					
ANR	3958543	Condition	is_tiny ( g )	3181:6:79470:79480	3958521	0	True				
ANR	3958544	CallExpression	is_tiny ( g )		3958521	0					
ANR	3958545	Callee	is_tiny		3958521	0					
ANR	3958546	Identifier	is_tiny		3958521	0					
ANR	3958547	ArgumentList	g		3958521	1					
ANR	3958548	Argument	g		3958521	0					
ANR	3958549	Identifier	g		3958521	0					
ANR	3958550	CompoundStatement		4:19:67:67	3958521	1					
ANR	3958551	ExpressionStatement	xdiff = NORMALIZE_MOV ( xdiff )	3182:3:79488:79517	3958521	0	True				
ANR	3958552	AssignmentExpression	xdiff = NORMALIZE_MOV ( xdiff )		3958521	0		=			
ANR	3958553	Identifier	xdiff		3958521	0					
ANR	3958554	CallExpression	NORMALIZE_MOV ( xdiff )		3958521	1					
ANR	3958555	Callee	NORMALIZE_MOV		3958521	0					
ANR	3958556	Identifier	NORMALIZE_MOV		3958521	0					
ANR	3958557	ArgumentList	xdiff		3958521	1					
ANR	3958558	Argument	xdiff		3958521	0					
ANR	3958559	Identifier	xdiff		3958521	0					
ANR	3958560	ExpressionStatement	ydiff = NORMALIZE_MOV ( ydiff )	3183:3:79522:79551	3958521	1	True				
ANR	3958561	AssignmentExpression	ydiff = NORMALIZE_MOV ( ydiff )		3958521	0		=			
ANR	3958562	Identifier	ydiff		3958521	0					
ANR	3958563	CallExpression	NORMALIZE_MOV ( ydiff )		3958521	1					
ANR	3958564	Callee	NORMALIZE_MOV		3958521	0					
ANR	3958565	Identifier	NORMALIZE_MOV		3958521	0					
ANR	3958566	ArgumentList	ydiff		3958521	1					
ANR	3958567	Argument	ydiff		3958521	0					
ANR	3958568	Identifier	ydiff		3958521	0					
ANR	3958569	ExpressionStatement	n -> x += xdiff	3186:2:79560:79573	3958521	1	True				
ANR	3958570	AssignmentExpression	n -> x += xdiff		3958521	0		+=			
ANR	3958571	PtrMemberAccess	n -> x		3958521	0					
ANR	3958572	Identifier	n		3958521	0					
ANR	3958573	Identifier	x		3958521	1					
ANR	3958574	Identifier	xdiff		3958521	1					
ANR	3958575	ExpressionStatement	n -> y += ydiff	3187:2:79577:79590	3958521	2	True				
ANR	3958576	AssignmentExpression	n -> y += ydiff		3958521	0		+=			
ANR	3958577	PtrMemberAccess	n -> y		3958521	0					
ANR	3958578	Identifier	n		3958521	0					
ANR	3958579	Identifier	y		3958521	1					
ANR	3958580	Identifier	ydiff		3958521	1					
ANR	3958581	ReturnType	static void		3958521	1					
ANR	3958582	Identifier	move_current_node		3958521	2					
ANR	3958583	ParameterList	"RAGraph * g , int xdiff , int ydiff"		3958521	3					
ANR	3958584	Parameter	RAGraph * g	3178:30:79381:79390	3958521	0	True				
ANR	3958585	ParameterType	RAGraph *		3958521	0					
ANR	3958586	Identifier	g		3958521	1					
ANR	3958587	Parameter	int xdiff	3178:42:79393:79401	3958521	1	True				
ANR	3958588	ParameterType	int		3958521	0					
ANR	3958589	Identifier	xdiff		3958521	1					
ANR	3958590	Parameter	int ydiff	3178:53:79404:79412	3958521	2	True				
ANR	3958591	ParameterType	int		3958521	0					
ANR	3958592	Identifier	ydiff		3958521	1					
ANR	3958593	CFGEntryNode	ENTRY		3958521		True				
ANR	3958594	CFGExitNode	EXIT		3958521		True				
ANR	3958595	Symbol	* g		3958521						
ANR	3958596	Symbol	NORMALIZE_MOV		3958521						
ANR	3958597	Symbol	n -> y		3958521						
ANR	3958598	Symbol	get_anode		3958521						
ANR	3958599	Symbol	ydiff		3958521						
ANR	3958600	Symbol	n -> x		3958521						
ANR	3958601	Symbol	g		3958521						
ANR	3958602	Symbol	xdiff		3958521						
ANR	3958603	Symbol	g -> curnode		3958521						
ANR	3958604	Symbol	* n		3958521						
ANR	3958605	Symbol	is_tiny		3958521						
ANR	3958606	Symbol	n		3958521						
ANR	3958607	Function	agraph_merge_child	3193:0:79697:80694							
ANR	3958608	FunctionDef	"agraph_merge_child (RAGraph * g , int idx)"		3958607	0					
ANR	3958609	CompoundStatement		3193:52:79749:80694	3958607	0					
ANR	3958610	IdentifierDeclStatement	"const RGraphNode * nn = r_graph_nth_neighbour ( g -> graph , g -> curnode , idx ) ;"	3194:1:79752:79824	3958607	0	True				
ANR	3958611	IdentifierDecl	"* nn = r_graph_nth_neighbour ( g -> graph , g -> curnode , idx )"		3958607	0					
ANR	3958612	IdentifierDeclType	const RGraphNode *		3958607	0					
ANR	3958613	Identifier	nn		3958607	1					
ANR	3958614	AssignmentExpression	"* nn = r_graph_nth_neighbour ( g -> graph , g -> curnode , idx )"		3958607	2		=			
ANR	3958615	Identifier	nn		3958607	0					
ANR	3958616	CallExpression	"r_graph_nth_neighbour ( g -> graph , g -> curnode , idx )"		3958607	1					
ANR	3958617	Callee	r_graph_nth_neighbour		3958607	0					
ANR	3958618	Identifier	r_graph_nth_neighbour		3958607	0					
ANR	3958619	ArgumentList	g -> graph		3958607	1					
ANR	3958620	Argument	g -> graph		3958607	0					
ANR	3958621	PtrMemberAccess	g -> graph		3958607	0					
ANR	3958622	Identifier	g		3958607	0					
ANR	3958623	Identifier	graph		3958607	1					
ANR	3958624	Argument	g -> curnode		3958607	1					
ANR	3958625	PtrMemberAccess	g -> curnode		3958607	0					
ANR	3958626	Identifier	g		3958607	0					
ANR	3958627	Identifier	curnode		3958607	1					
ANR	3958628	Argument	idx		3958607	2					
ANR	3958629	Identifier	idx		3958607	0					
ANR	3958630	IdentifierDeclStatement	const RGraphNode * cn = g -> curnode ;	3195:1:79827:79860	3958607	1	True				
ANR	3958631	IdentifierDecl	* cn = g -> curnode		3958607	0					
ANR	3958632	IdentifierDeclType	const RGraphNode *		3958607	0					
ANR	3958633	Identifier	cn		3958607	1					
ANR	3958634	AssignmentExpression	* cn = g -> curnode		3958607	2		=			
ANR	3958635	Identifier	cn		3958607	0					
ANR	3958636	PtrMemberAccess	g -> curnode		3958607	1					
ANR	3958637	Identifier	g		3958607	0					
ANR	3958638	Identifier	curnode		3958607	1					
ANR	3958639	IfStatement	if ( cn && nn )		3958607	2					
ANR	3958640	Condition	cn && nn	3196:5:79867:79874	3958607	0	True				
ANR	3958641	AndExpression	cn && nn		3958607	0		&&			
ANR	3958642	Identifier	cn		3958607	0					
ANR	3958643	Identifier	nn		3958607	1					
ANR	3958644	CompoundStatement		19:2:664:715	3958607	1					
ANR	3958645	IdentifierDeclStatement	RANode * ann = get_anode ( nn ) ;	3197:2:79881:79909	3958607	0	True				
ANR	3958646	IdentifierDecl	* ann = get_anode ( nn )		3958607	0					
ANR	3958647	IdentifierDeclType	RANode *		3958607	0					
ANR	3958648	Identifier	ann		3958607	1					
ANR	3958649	AssignmentExpression	* ann = get_anode ( nn )		3958607	2		=			
ANR	3958650	Identifier	ann		3958607	0					
ANR	3958651	CallExpression	get_anode ( nn )		3958607	1					
ANR	3958652	Callee	get_anode		3958607	0					
ANR	3958653	Identifier	get_anode		3958607	0					
ANR	3958654	ArgumentList	nn		3958607	1					
ANR	3958655	Argument	nn		3958607	0					
ANR	3958656	Identifier	nn		3958607	0					
ANR	3958657	IdentifierDeclStatement	RANode * acn = get_anode ( cn ) ;	3198:2:79913:79941	3958607	1	True				
ANR	3958658	IdentifierDecl	* acn = get_anode ( cn )		3958607	0					
ANR	3958659	IdentifierDeclType	RANode *		3958607	0					
ANR	3958660	Identifier	acn		3958607	1					
ANR	3958661	AssignmentExpression	* acn = get_anode ( cn )		3958607	2		=			
ANR	3958662	Identifier	acn		3958607	0					
ANR	3958663	CallExpression	get_anode ( cn )		3958607	1					
ANR	3958664	Callee	get_anode		3958607	0					
ANR	3958665	Identifier	get_anode		3958607	0					
ANR	3958666	ArgumentList	cn		3958607	1					
ANR	3958667	Argument	cn		3958607	0					
ANR	3958668	Identifier	cn		3958607	0					
ANR	3958669	ExpressionStatement	"acn -> body = r_str_append ( acn -> body , ann -> title )"	3199:2:79945:79993	3958607	2	True				
ANR	3958670	AssignmentExpression	"acn -> body = r_str_append ( acn -> body , ann -> title )"		3958607	0		=			
ANR	3958671	PtrMemberAccess	acn -> body		3958607	0					
ANR	3958672	Identifier	acn		3958607	0					
ANR	3958673	Identifier	body		3958607	1					
ANR	3958674	CallExpression	"r_str_append ( acn -> body , ann -> title )"		3958607	1					
ANR	3958675	Callee	r_str_append		3958607	0					
ANR	3958676	Identifier	r_str_append		3958607	0					
ANR	3958677	ArgumentList	acn -> body		3958607	1					
ANR	3958678	Argument	acn -> body		3958607	0					
ANR	3958679	PtrMemberAccess	acn -> body		3958607	0					
ANR	3958680	Identifier	acn		3958607	0					
ANR	3958681	Identifier	body		3958607	1					
ANR	3958682	Argument	ann -> title		3958607	1					
ANR	3958683	PtrMemberAccess	ann -> title		3958607	0					
ANR	3958684	Identifier	ann		3958607	0					
ANR	3958685	Identifier	title		3958607	1					
ANR	3958686	ExpressionStatement	"acn -> body = r_str_append ( acn -> body , ""\\n"" )"	3200:2:79997:80039	3958607	3	True				
ANR	3958687	AssignmentExpression	"acn -> body = r_str_append ( acn -> body , ""\\n"" )"		3958607	0		=			
ANR	3958688	PtrMemberAccess	acn -> body		3958607	0					
ANR	3958689	Identifier	acn		3958607	0					
ANR	3958690	Identifier	body		3958607	1					
ANR	3958691	CallExpression	"r_str_append ( acn -> body , ""\\n"" )"		3958607	1					
ANR	3958692	Callee	r_str_append		3958607	0					
ANR	3958693	Identifier	r_str_append		3958607	0					
ANR	3958694	ArgumentList	acn -> body		3958607	1					
ANR	3958695	Argument	acn -> body		3958607	0					
ANR	3958696	PtrMemberAccess	acn -> body		3958607	0					
ANR	3958697	Identifier	acn		3958607	0					
ANR	3958698	Identifier	body		3958607	1					
ANR	3958699	Argument	"""\\n"""		3958607	1					
ANR	3958700	PrimaryExpression	"""\\n"""		3958607	0					
ANR	3958701	ExpressionStatement	"acn -> body = r_str_append ( acn -> body , ann -> body )"	3201:2:80043:80090	3958607	4	True				
ANR	3958702	AssignmentExpression	"acn -> body = r_str_append ( acn -> body , ann -> body )"		3958607	0		=			
ANR	3958703	PtrMemberAccess	acn -> body		3958607	0					
ANR	3958704	Identifier	acn		3958607	0					
ANR	3958705	Identifier	body		3958607	1					
ANR	3958706	CallExpression	"r_str_append ( acn -> body , ann -> body )"		3958607	1					
ANR	3958707	Callee	r_str_append		3958607	0					
ANR	3958708	Identifier	r_str_append		3958607	0					
ANR	3958709	ArgumentList	acn -> body		3958607	1					
ANR	3958710	Argument	acn -> body		3958607	0					
ANR	3958711	PtrMemberAccess	acn -> body		3958607	0					
ANR	3958712	Identifier	acn		3958607	0					
ANR	3958713	Identifier	body		3958607	1					
ANR	3958714	Argument	ann -> body		3958607	1					
ANR	3958715	PtrMemberAccess	ann -> body		3958607	0					
ANR	3958716	Identifier	ann		3958607	0					
ANR	3958717	Identifier	body		3958607	1					
ANR	3958718	ExpressionStatement	acn -> h += ann -> h - 3	3203:2:80129:80149	3958607	5	True				
ANR	3958719	AssignmentExpression	acn -> h += ann -> h - 3		3958607	0		+=			
ANR	3958720	PtrMemberAccess	acn -> h		3958607	0					
ANR	3958721	Identifier	acn		3958607	0					
ANR	3958722	Identifier	h		3958607	1					
ANR	3958723	AdditiveExpression	ann -> h - 3		3958607	1		-			
ANR	3958724	PtrMemberAccess	ann -> h		3958607	0					
ANR	3958725	Identifier	ann		3958607	0					
ANR	3958726	Identifier	h		3958607	1					
ANR	3958727	PrimaryExpression	3		3958607	1					
ANR	3958728	ExpressionStatement	free ( ann -> body )	3204:2:80153:80169	3958607	6	True				
ANR	3958729	CallExpression	free ( ann -> body )		3958607	0					
ANR	3958730	Callee	free		3958607	0					
ANR	3958731	Identifier	free		3958607	0					
ANR	3958732	ArgumentList	ann -> body		3958607	1					
ANR	3958733	Argument	ann -> body		3958607	0					
ANR	3958734	PtrMemberAccess	ann -> body		3958607	0					
ANR	3958735	Identifier	ann		3958607	0					
ANR	3958736	Identifier	body		3958607	1					
ANR	3958737	IdentifierDeclStatement	"char * neis = sdb_get ( g -> db , K_NEIGHBOURS ( ann ) , 0 ) ;"	3211:2:80414:80465	3958607	7	True				
ANR	3958738	IdentifierDecl	"* neis = sdb_get ( g -> db , K_NEIGHBOURS ( ann ) , 0 )"		3958607	0					
ANR	3958739	IdentifierDeclType	char *		3958607	0					
ANR	3958740	Identifier	neis		3958607	1					
ANR	3958741	AssignmentExpression	"* neis = sdb_get ( g -> db , K_NEIGHBOURS ( ann ) , 0 )"		3958607	2		=			
ANR	3958742	Identifier	neis		3958607	0					
ANR	3958743	CallExpression	"sdb_get ( g -> db , K_NEIGHBOURS ( ann ) , 0 )"		3958607	1					
ANR	3958744	Callee	sdb_get		3958607	0					
ANR	3958745	Identifier	sdb_get		3958607	0					
ANR	3958746	ArgumentList	g -> db		3958607	1					
ANR	3958747	Argument	g -> db		3958607	0					
ANR	3958748	PtrMemberAccess	g -> db		3958607	0					
ANR	3958749	Identifier	g		3958607	0					
ANR	3958750	Identifier	db		3958607	1					
ANR	3958751	Argument	K_NEIGHBOURS ( ann )		3958607	1					
ANR	3958752	CallExpression	K_NEIGHBOURS ( ann )		3958607	0					
ANR	3958753	Callee	K_NEIGHBOURS		3958607	0					
ANR	3958754	Identifier	K_NEIGHBOURS		3958607	0					
ANR	3958755	ArgumentList	ann		3958607	1					
ANR	3958756	Argument	ann		3958607	0					
ANR	3958757	Identifier	ann		3958607	0					
ANR	3958758	Argument	0		3958607	2					
ANR	3958759	PrimaryExpression	0		3958607	0					
ANR	3958760	IfStatement	if ( neis )		3958607	8					
ANR	3958761	Condition	neis	3212:6:80473:80476	3958607	0	True				
ANR	3958762	Identifier	neis		3958607	0					
ANR	3958763	CompoundStatement		20:12:729:729	3958607	1					
ANR	3958764	ExpressionStatement	"sdb_set_owned ( g -> db , K_NEIGHBOURS ( ann ) , neis , 0 )"	3213:3:80484:80534	3958607	0	True				
ANR	3958765	CallExpression	"sdb_set_owned ( g -> db , K_NEIGHBOURS ( ann ) , neis , 0 )"		3958607	0					
ANR	3958766	Callee	sdb_set_owned		3958607	0					
ANR	3958767	Identifier	sdb_set_owned		3958607	0					
ANR	3958768	ArgumentList	g -> db		3958607	1					
ANR	3958769	Argument	g -> db		3958607	0					
ANR	3958770	PtrMemberAccess	g -> db		3958607	0					
ANR	3958771	Identifier	g		3958607	0					
ANR	3958772	Identifier	db		3958607	1					
ANR	3958773	Argument	K_NEIGHBOURS ( ann )		3958607	1					
ANR	3958774	CallExpression	K_NEIGHBOURS ( ann )		3958607	0					
ANR	3958775	Callee	K_NEIGHBOURS		3958607	0					
ANR	3958776	Identifier	K_NEIGHBOURS		3958607	0					
ANR	3958777	ArgumentList	ann		3958607	1					
ANR	3958778	Argument	ann		3958607	0					
ANR	3958779	Identifier	ann		3958607	0					
ANR	3958780	Argument	neis		3958607	2					
ANR	3958781	Identifier	neis		3958607	0					
ANR	3958782	Argument	0		3958607	3					
ANR	3958783	PrimaryExpression	0		3958607	0					
ANR	3958784	ExpressionStatement	"r_agraph_del_node ( g , ann -> title )"	3214:3:80539:80572	3958607	1	True				
ANR	3958785	CallExpression	"r_agraph_del_node ( g , ann -> title )"		3958607	0					
ANR	3958786	Callee	r_agraph_del_node		3958607	0					
ANR	3958787	Identifier	r_agraph_del_node		3958607	0					
ANR	3958788	ArgumentList	g		3958607	1					
ANR	3958789	Argument	g		3958607	0					
ANR	3958790	Identifier	g		3958607	0					
ANR	3958791	Argument	ann -> title		3958607	1					
ANR	3958792	PtrMemberAccess	ann -> title		3958607	0					
ANR	3958793	Identifier	ann		3958607	0					
ANR	3958794	Identifier	title		3958607	1					
ANR	3958795	ExpressionStatement	agraph_print_nodes ( g )	3215:3:80577:80599	3958607	2	True				
ANR	3958796	CallExpression	agraph_print_nodes ( g )		3958607	0					
ANR	3958797	Callee	agraph_print_nodes		3958607	0					
ANR	3958798	Identifier	agraph_print_nodes		3958607	0					
ANR	3958799	ArgumentList	g		3958607	1					
ANR	3958800	Argument	g		3958607	0					
ANR	3958801	Identifier	g		3958607	0					
ANR	3958802	ExpressionStatement	agraph_print_edges ( g )	3216:3:80604:80626	3958607	3	True				
ANR	3958803	CallExpression	agraph_print_edges ( g )		3958607	0					
ANR	3958804	Callee	agraph_print_edges		3958607	0					
ANR	3958805	Identifier	agraph_print_edges		3958607	0					
ANR	3958806	ArgumentList	g		3958607	1					
ANR	3958807	Argument	g		3958607	0					
ANR	3958808	Identifier	g		3958607	0					
ANR	3958809	ReturnType	static void		3958607	1					
ANR	3958810	Identifier	agraph_merge_child		3958607	2					
ANR	3958811	ParameterList	"RAGraph * g , int idx"		3958607	3					
ANR	3958812	Parameter	RAGraph * g	3193:31:79728:79737	3958607	0	True				
ANR	3958813	ParameterType	RAGraph *		3958607	0					
ANR	3958814	Identifier	g		3958607	1					
ANR	3958815	Parameter	int idx	3193:43:79740:79746	3958607	1	True				
ANR	3958816	ParameterType	int		3958607	0					
ANR	3958817	Identifier	idx		3958607	1					
ANR	3958818	CFGEntryNode	ENTRY		3958607		True				
ANR	3958819	CFGExitNode	EXIT		3958607		True				
ANR	3958820	Symbol	nn		3958607						
ANR	3958821	Symbol	ann		3958607						
ANR	3958822	Symbol	r_str_append		3958607						
ANR	3958823	Symbol	get_anode		3958607						
ANR	3958824	Symbol	acn -> h		3958607						
ANR	3958825	Symbol	g		3958607						
ANR	3958826	Symbol	g -> db		3958607						
ANR	3958827	Symbol	* acn		3958607						
ANR	3958828	Symbol	sdb_get		3958607						
ANR	3958829	Symbol	cn		3958607						
ANR	3958830	Symbol	ann -> body		3958607						
ANR	3958831	Symbol	acn -> body		3958607						
ANR	3958832	Symbol	acn		3958607						
ANR	3958833	Symbol	* g		3958607						
ANR	3958834	Symbol	neis		3958607						
ANR	3958835	Symbol	* ann		3958607						
ANR	3958836	Symbol	ann -> h		3958607						
ANR	3958837	Symbol	g -> graph		3958607						
ANR	3958838	Symbol	g -> curnode		3958607						
ANR	3958839	Symbol	K_NEIGHBOURS		3958607						
ANR	3958840	Symbol	idx		3958607						
ANR	3958841	Symbol	r_graph_nth_neighbour		3958607						
ANR	3958842	Symbol	ann -> title		3958607						
ANR	3958843	Function	agraph_toggle_tiny	3223:0:80704:80916							
ANR	3958844	FunctionDef	agraph_toggle_tiny (RAGraph * g)		3958843	0					
ANR	3958845	CompoundStatement		3223:44:80748:80916	3958843	0					
ANR	3958846	ExpressionStatement	g -> is_tiny = ! g -> is_tiny	3224:1:80751:80775	3958843	0	True				
ANR	3958847	AssignmentExpression	g -> is_tiny = ! g -> is_tiny		3958843	0		=			
ANR	3958848	PtrMemberAccess	g -> is_tiny		3958843	0					
ANR	3958849	Identifier	g		3958843	0					
ANR	3958850	Identifier	is_tiny		3958843	1					
ANR	3958851	UnaryOperationExpression	! g -> is_tiny		3958843	1					
ANR	3958852	UnaryOperator	!		3958843	0					
ANR	3958853	PtrMemberAccess	g -> is_tiny		3958843	1					
ANR	3958854	Identifier	g		3958843	0					
ANR	3958855	Identifier	is_tiny		3958843	1					
ANR	3958856	ExpressionStatement	g -> need_update_dim = 1	3225:1:80778:80800	3958843	1	True				
ANR	3958857	AssignmentExpression	g -> need_update_dim = 1		3958843	0		=			
ANR	3958858	PtrMemberAccess	g -> need_update_dim		3958843	0					
ANR	3958859	Identifier	g		3958843	0					
ANR	3958860	Identifier	need_update_dim		3958843	1					
ANR	3958861	PrimaryExpression	1		3958843	1					
ANR	3958862	ExpressionStatement	agraph_refresh ( r_cons_singleton ( ) -> event_data )	3226:1:80803:80851	3958843	2	True				
ANR	3958863	CallExpression	agraph_refresh ( r_cons_singleton ( ) -> event_data )		3958843	0					
ANR	3958864	Callee	agraph_refresh		3958843	0					
ANR	3958865	Identifier	agraph_refresh		3958843	0					
ANR	3958866	ArgumentList	r_cons_singleton ( ) -> event_data		3958843	1					
ANR	3958867	Argument	r_cons_singleton ( ) -> event_data		3958843	0					
ANR	3958868	PtrMemberAccess	r_cons_singleton ( ) -> event_data		3958843	0					
ANR	3958869	CallExpression	r_cons_singleton ( )		3958843	0					
ANR	3958870	Callee	r_cons_singleton		3958843	0					
ANR	3958871	Identifier	r_cons_singleton		3958843	0					
ANR	3958872	ArgumentList			3958843	1					
ANR	3958873	Identifier	event_data		3958843	1					
ANR	3958874	ExpressionStatement	agraph_set_layout ( ( RAGraph * ) g )	3227:1:80854:80887	3958843	3	True				
ANR	3958875	CallExpression	agraph_set_layout ( ( RAGraph * ) g )		3958843	0					
ANR	3958876	Callee	agraph_set_layout		3958843	0					
ANR	3958877	Identifier	agraph_set_layout		3958843	0					
ANR	3958878	ArgumentList	( RAGraph * ) g		3958843	1					
ANR	3958879	Argument	( RAGraph * ) g		3958843	0					
ANR	3958880	CastExpression	( RAGraph * ) g		3958843	0					
ANR	3958881	CastTarget	RAGraph *		3958843	0					
ANR	3958882	Identifier	g		3958843	1					
ANR	3958883	ReturnType	static void		3958843	1					
ANR	3958884	Identifier	agraph_toggle_tiny		3958843	2					
ANR	3958885	ParameterList	RAGraph * g		3958843	3					
ANR	3958886	Parameter	RAGraph * g	3223:32:80736:80745	3958843	0	True				
ANR	3958887	ParameterType	RAGraph *		3958843	0					
ANR	3958888	Identifier	g		3958843	1					
ANR	3958889	CFGEntryNode	ENTRY		3958843		True				
ANR	3958890	CFGExitNode	EXIT		3958843		True				
ANR	3958891	Symbol	* g		3958843						
ANR	3958892	Symbol	g -> is_tiny		3958843						
ANR	3958893	Symbol	r_cons_singleton ( ) -> event_data		3958843						
ANR	3958894	Symbol	g		3958843						
ANR	3958895	Symbol	r_cons_singleton		3958843						
ANR	3958896	Symbol	g -> need_update_dim		3958843						
ANR	3958897	Symbol	* r_cons_singleton		3958843						
ANR	3958898	Function	agraph_toggle_mini	3231:0:80919:81154							
ANR	3958899	FunctionDef	agraph_toggle_mini (RAGraph * g)		3958898	0					
ANR	3958900	CompoundStatement		3231:43:80962:81154	3958898	0					
ANR	3958901	IdentifierDeclStatement	RANode * n = get_anode ( g -> curnode ) ;	3232:1:80965:80999	3958898	0	True				
ANR	3958902	IdentifierDecl	* n = get_anode ( g -> curnode )		3958898	0					
ANR	3958903	IdentifierDeclType	RANode *		3958898	0					
ANR	3958904	Identifier	n		3958898	1					
ANR	3958905	AssignmentExpression	* n = get_anode ( g -> curnode )		3958898	2		=			
ANR	3958906	Identifier	n		3958898	0					
ANR	3958907	CallExpression	get_anode ( g -> curnode )		3958898	1					
ANR	3958908	Callee	get_anode		3958898	0					
ANR	3958909	Identifier	get_anode		3958898	0					
ANR	3958910	ArgumentList	g -> curnode		3958898	1					
ANR	3958911	Argument	g -> curnode		3958898	0					
ANR	3958912	PtrMemberAccess	g -> curnode		3958898	0					
ANR	3958913	Identifier	g		3958898	0					
ANR	3958914	Identifier	curnode		3958898	1					
ANR	3958915	IfStatement	if ( n )		3958898	1					
ANR	3958916	Condition	n	3233:5:81006:81006	3958898	0	True				
ANR	3958917	Identifier	n		3958898	0					
ANR	3958918	CompoundStatement		3:8:46:46	3958898	1					
ANR	3958919	ExpressionStatement	n -> is_mini = ! n -> is_mini	3234:2:81013:81037	3958898	0	True				
ANR	3958920	AssignmentExpression	n -> is_mini = ! n -> is_mini		3958898	0		=			
ANR	3958921	PtrMemberAccess	n -> is_mini		3958898	0					
ANR	3958922	Identifier	n		3958898	0					
ANR	3958923	Identifier	is_mini		3958898	1					
ANR	3958924	UnaryOperationExpression	! n -> is_mini		3958898	1					
ANR	3958925	UnaryOperator	!		3958898	0					
ANR	3958926	PtrMemberAccess	n -> is_mini		3958898	1					
ANR	3958927	Identifier	n		3958898	0					
ANR	3958928	Identifier	is_mini		3958898	1					
ANR	3958929	ExpressionStatement	g -> need_update_dim = 1	3236:1:81043:81065	3958898	2	True				
ANR	3958930	AssignmentExpression	g -> need_update_dim = 1		3958898	0		=			
ANR	3958931	PtrMemberAccess	g -> need_update_dim		3958898	0					
ANR	3958932	Identifier	g		3958898	0					
ANR	3958933	Identifier	need_update_dim		3958898	1					
ANR	3958934	PrimaryExpression	1		3958898	1					
ANR	3958935	ExpressionStatement	agraph_refresh ( r_cons_singleton ( ) -> event_data )	3237:1:81068:81116	3958898	3	True				
ANR	3958936	CallExpression	agraph_refresh ( r_cons_singleton ( ) -> event_data )		3958898	0					
ANR	3958937	Callee	agraph_refresh		3958898	0					
ANR	3958938	Identifier	agraph_refresh		3958898	0					
ANR	3958939	ArgumentList	r_cons_singleton ( ) -> event_data		3958898	1					
ANR	3958940	Argument	r_cons_singleton ( ) -> event_data		3958898	0					
ANR	3958941	PtrMemberAccess	r_cons_singleton ( ) -> event_data		3958898	0					
ANR	3958942	CallExpression	r_cons_singleton ( )		3958898	0					
ANR	3958943	Callee	r_cons_singleton		3958898	0					
ANR	3958944	Identifier	r_cons_singleton		3958898	0					
ANR	3958945	ArgumentList			3958898	1					
ANR	3958946	Identifier	event_data		3958898	1					
ANR	3958947	ExpressionStatement	agraph_set_layout ( ( RAGraph * ) g )	3238:1:81119:81152	3958898	4	True				
ANR	3958948	CallExpression	agraph_set_layout ( ( RAGraph * ) g )		3958898	0					
ANR	3958949	Callee	agraph_set_layout		3958898	0					
ANR	3958950	Identifier	agraph_set_layout		3958898	0					
ANR	3958951	ArgumentList	( RAGraph * ) g		3958898	1					
ANR	3958952	Argument	( RAGraph * ) g		3958898	0					
ANR	3958953	CastExpression	( RAGraph * ) g		3958898	0					
ANR	3958954	CastTarget	RAGraph *		3958898	0					
ANR	3958955	Identifier	g		3958898	1					
ANR	3958956	ReturnType	static void		3958898	1					
ANR	3958957	Identifier	agraph_toggle_mini		3958898	2					
ANR	3958958	ParameterList	RAGraph * g		3958898	3					
ANR	3958959	Parameter	RAGraph * g	3231:31:80950:80959	3958898	0	True				
ANR	3958960	ParameterType	RAGraph *		3958898	0					
ANR	3958961	Identifier	g		3958898	1					
ANR	3958962	CFGEntryNode	ENTRY		3958898		True				
ANR	3958963	CFGExitNode	EXIT		3958898		True				
ANR	3958964	Symbol	* g		3958898						
ANR	3958965	Symbol	r_cons_singleton ( ) -> event_data		3958898						
ANR	3958966	Symbol	get_anode		3958898						
ANR	3958967	Symbol	g		3958898						
ANR	3958968	Symbol	g -> curnode		3958898						
ANR	3958969	Symbol	* n		3958898						
ANR	3958970	Symbol	n -> is_mini		3958898						
ANR	3958971	Symbol	r_cons_singleton		3958898						
ANR	3958972	Symbol	n		3958898						
ANR	3958973	Symbol	g -> need_update_dim		3958898						
ANR	3958974	Symbol	* r_cons_singleton		3958898						
ANR	3958975	Function	agraph_follow_innodes	3241:0:81157:82682							
ANR	3958976	FunctionDef	"agraph_follow_innodes (RAGraph * g , bool in)"		3958975	0					
ANR	3958977	CompoundStatement		3241:56:81213:82682	3958975	0					
ANR	3958978	IdentifierDeclStatement	int count = 0 ;	3242:1:81216:81229	3958975	0	True				
ANR	3958979	IdentifierDecl	count = 0		3958975	0					
ANR	3958980	IdentifierDeclType	int		3958975	0					
ANR	3958981	Identifier	count		3958975	1					
ANR	3958982	AssignmentExpression	count = 0		3958975	2		=			
ANR	3958983	Identifier	count		3958975	0					
ANR	3958984	PrimaryExpression	0		3958975	1					
ANR	3958985	IdentifierDeclStatement	RListIter * iter ;	3243:1:81232:81247	3958975	1	True				
ANR	3958986	IdentifierDecl	* iter		3958975	0					
ANR	3958987	IdentifierDeclType	RListIter *		3958975	0					
ANR	3958988	Identifier	iter		3958975	1					
ANR	3958989	IdentifierDeclStatement	RANode * an = get_anode ( g -> curnode ) ;	3244:1:81250:81285	3958975	2	True				
ANR	3958990	IdentifierDecl	* an = get_anode ( g -> curnode )		3958975	0					
ANR	3958991	IdentifierDeclType	RANode *		3958975	0					
ANR	3958992	Identifier	an		3958975	1					
ANR	3958993	AssignmentExpression	* an = get_anode ( g -> curnode )		3958975	2		=			
ANR	3958994	Identifier	an		3958975	0					
ANR	3958995	CallExpression	get_anode ( g -> curnode )		3958975	1					
ANR	3958996	Callee	get_anode		3958975	0					
ANR	3958997	Identifier	get_anode		3958975	0					
ANR	3958998	ArgumentList	g -> curnode		3958975	1					
ANR	3958999	Argument	g -> curnode		3958975	0					
ANR	3959000	PtrMemberAccess	g -> curnode		3958975	0					
ANR	3959001	Identifier	g		3958975	0					
ANR	3959002	Identifier	curnode		3958975	1					
ANR	3959003	IdentifierDeclStatement	RGraphNode * gn = an -> gnode ;	3245:1:81288:81314	3958975	3	True				
ANR	3959004	IdentifierDecl	* gn = an -> gnode		3958975	0					
ANR	3959005	IdentifierDeclType	RGraphNode *		3958975	0					
ANR	3959006	Identifier	gn		3958975	1					
ANR	3959007	AssignmentExpression	* gn = an -> gnode		3958975	2		=			
ANR	3959008	Identifier	gn		3958975	0					
ANR	3959009	PtrMemberAccess	an -> gnode		3958975	1					
ANR	3959010	Identifier	an		3958975	0					
ANR	3959011	Identifier	gnode		3958975	1					
ANR	3959012	IdentifierDeclStatement	const RList * list = in ? an -> gnode -> in_nodes : an -> gnode -> out_nodes ;	3246:1:81317:81382	3958975	4	True				
ANR	3959013	IdentifierDecl	* list = in ? an -> gnode -> in_nodes : an -> gnode -> out_nodes		3958975	0					
ANR	3959014	IdentifierDeclType	const RList *		3958975	0					
ANR	3959015	Identifier	list		3958975	1					
ANR	3959016	AssignmentExpression	* list = in ? an -> gnode -> in_nodes : an -> gnode -> out_nodes		3958975	2		=			
ANR	3959017	Identifier	list		3958975	0					
ANR	3959018	ConditionalExpression	in ? an -> gnode -> in_nodes : an -> gnode -> out_nodes		3958975	1					
ANR	3959019	Condition	in		3958975	0					
ANR	3959020	Identifier	in		3958975	0					
ANR	3959021	PtrMemberAccess	an -> gnode -> in_nodes		3958975	1					
ANR	3959022	PtrMemberAccess	an -> gnode		3958975	0					
ANR	3959023	Identifier	an		3958975	0					
ANR	3959024	Identifier	gnode		3958975	1					
ANR	3959025	Identifier	in_nodes		3958975	1					
ANR	3959026	PtrMemberAccess	an -> gnode -> out_nodes		3958975	2					
ANR	3959027	PtrMemberAccess	an -> gnode		3958975	0					
ANR	3959028	Identifier	an		3958975	0					
ANR	3959029	Identifier	gnode		3958975	1					
ANR	3959030	Identifier	out_nodes		3958975	1					
ANR	3959031	IdentifierDeclStatement	int nth = - 1 ;	3247:1:81385:81397	3958975	5	True				
ANR	3959032	IdentifierDecl	nth = - 1		3958975	0					
ANR	3959033	IdentifierDeclType	int		3958975	0					
ANR	3959034	Identifier	nth		3958975	1					
ANR	3959035	AssignmentExpression	nth = - 1		3958975	2		=			
ANR	3959036	Identifier	nth		3958975	0					
ANR	3959037	UnaryOperationExpression	- 1		3958975	1					
ANR	3959038	UnaryOperator	-		3958975	0					
ANR	3959039	PrimaryExpression	1		3958975	1					
ANR	3959040	IfStatement	if ( r_list_length ( list ) == 0 )		3958975	6					
ANR	3959041	Condition	r_list_length ( list ) == 0	3248:5:81404:81428	3958975	0	True				
ANR	3959042	EqualityExpression	r_list_length ( list ) == 0		3958975	0		==			
ANR	3959043	CallExpression	r_list_length ( list )		3958975	0					
ANR	3959044	Callee	r_list_length		3958975	0					
ANR	3959045	Identifier	r_list_length		3958975	0					
ANR	3959046	ArgumentList	list		3958975	1					
ANR	3959047	Argument	list		3958975	0					
ANR	3959048	Identifier	list		3958975	0					
ANR	3959049	PrimaryExpression	0		3958975	1					
ANR	3959050	CompoundStatement		8:32:217:217	3958975	1					
ANR	3959051	ReturnStatement	return ;	3249:2:81435:81441	3958975	0	True				
ANR	3959052	ExpressionStatement	"r_cons_gotoxy ( 0 , 2 )"	3251:1:81447:81467	3958975	7	True				
ANR	3959053	CallExpression	"r_cons_gotoxy ( 0 , 2 )"		3958975	0					
ANR	3959054	Callee	r_cons_gotoxy		3958975	0					
ANR	3959055	Identifier	r_cons_gotoxy		3958975	0					
ANR	3959056	ArgumentList	0		3958975	1					
ANR	3959057	Argument	0		3958975	0					
ANR	3959058	PrimaryExpression	0		3958975	0					
ANR	3959059	Argument	2		3958975	1					
ANR	3959060	PrimaryExpression	2		3958975	0					
ANR	3959061	ExpressionStatement	"r_cons_printf ( in ? ""Input nodes:\\n"" : ""Output nodes:\\n"" )"	3252:1:81470:81525	3958975	8	True				
ANR	3959062	CallExpression	"r_cons_printf ( in ? ""Input nodes:\\n"" : ""Output nodes:\\n"" )"		3958975	0					
ANR	3959063	Callee	r_cons_printf		3958975	0					
ANR	3959064	Identifier	r_cons_printf		3958975	0					
ANR	3959065	ArgumentList	"in ? ""Input nodes:\\n"" : ""Output nodes:\\n"""		3958975	1					
ANR	3959066	Argument	"in ? ""Input nodes:\\n"" : ""Output nodes:\\n"""		3958975	0					
ANR	3959067	ConditionalExpression	"in ? ""Input nodes:\\n"" : ""Output nodes:\\n"""		3958975	0					
ANR	3959068	Condition	in		3958975	0					
ANR	3959069	Identifier	in		3958975	0					
ANR	3959070	PrimaryExpression	"""Input nodes:\\n"""		3958975	1					
ANR	3959071	PrimaryExpression	"""Output nodes:\\n"""		3958975	2					
ANR	3959072	IdentifierDeclStatement	RList * options = r_list_newf ( NULL ) ;	3253:1:81528:81563	3958975	9	True				
ANR	3959073	IdentifierDecl	* options = r_list_newf ( NULL )		3958975	0					
ANR	3959074	IdentifierDeclType	RList *		3958975	0					
ANR	3959075	Identifier	options		3958975	1					
ANR	3959076	AssignmentExpression	* options = r_list_newf ( NULL )		3958975	2		=			
ANR	3959077	Identifier	options		3958975	0					
ANR	3959078	CallExpression	r_list_newf ( NULL )		3958975	1					
ANR	3959079	Callee	r_list_newf		3958975	0					
ANR	3959080	Identifier	r_list_newf		3958975	0					
ANR	3959081	ArgumentList	NULL		3958975	1					
ANR	3959082	Argument	NULL		3958975	0					
ANR	3959083	Identifier	NULL		3958975	0					
ANR	3959084	IdentifierDeclStatement	RList * gnodes = in ? an -> gnode -> in_nodes : an -> gnode -> out_nodes ;	3254:1:81566:81627	3958975	10	True				
ANR	3959085	IdentifierDecl	* gnodes = in ? an -> gnode -> in_nodes : an -> gnode -> out_nodes		3958975	0					
ANR	3959086	IdentifierDeclType	RList *		3958975	0					
ANR	3959087	Identifier	gnodes		3958975	1					
ANR	3959088	AssignmentExpression	* gnodes = in ? an -> gnode -> in_nodes : an -> gnode -> out_nodes		3958975	2		=			
ANR	3959089	Identifier	gnodes		3958975	0					
ANR	3959090	ConditionalExpression	in ? an -> gnode -> in_nodes : an -> gnode -> out_nodes		3958975	1					
ANR	3959091	Condition	in		3958975	0					
ANR	3959092	Identifier	in		3958975	0					
ANR	3959093	PtrMemberAccess	an -> gnode -> in_nodes		3958975	1					
ANR	3959094	PtrMemberAccess	an -> gnode		3958975	0					
ANR	3959095	Identifier	an		3958975	0					
ANR	3959096	Identifier	gnode		3958975	1					
ANR	3959097	Identifier	in_nodes		3958975	1					
ANR	3959098	PtrMemberAccess	an -> gnode -> out_nodes		3958975	2					
ANR	3959099	PtrMemberAccess	an -> gnode		3958975	0					
ANR	3959100	Identifier	an		3958975	0					
ANR	3959101	Identifier	gnode		3958975	1					
ANR	3959102	Identifier	out_nodes		3958975	1					
ANR	3959103	Statement	r_list_foreach	3255:1:81630:81643	3958975	11	True				
ANR	3959104	Statement	(	3255:16:81645:81645	3958975	12	True				
ANR	3959105	Statement	gnodes	3255:17:81646:81651	3958975	13	True				
ANR	3959106	Statement	","	3255:23:81652:81652	3958975	14	True				
ANR	3959107	Statement	iter	3255:25:81654:81657	3958975	15	True				
ANR	3959108	Statement	","	3255:29:81658:81658	3958975	16	True				
ANR	3959109	Statement	gn	3255:31:81660:81661	3958975	17	True				
ANR	3959110	Statement	)	3255:33:81662:81662	3958975	18	True				
ANR	3959111	CompoundStatement		17:2:485:531	3958975	19					
ANR	3959112	IdentifierDeclStatement	RANode * an = get_anode ( gn ) ;	3256:2:81668:81695	3958975	0	True				
ANR	3959113	IdentifierDecl	* an = get_anode ( gn )		3958975	0					
ANR	3959114	IdentifierDeclType	RANode *		3958975	0					
ANR	3959115	Identifier	an		3958975	1					
ANR	3959116	AssignmentExpression	* an = get_anode ( gn )		3958975	2		=			
ANR	3959117	Identifier	an		3958975	0					
ANR	3959118	CallExpression	get_anode ( gn )		3958975	1					
ANR	3959119	Callee	get_anode		3958975	0					
ANR	3959120	Identifier	get_anode		3958975	0					
ANR	3959121	ArgumentList	gn		3958975	1					
ANR	3959122	Argument	gn		3958975	0					
ANR	3959123	Identifier	gn		3958975	0					
ANR	3959124	IdentifierDeclStatement	"RGraphNode * gnn = agraph_get_title ( g , an , in ) ;"	3257:2:81699:81745	3958975	1	True				
ANR	3959125	IdentifierDecl	"* gnn = agraph_get_title ( g , an , in )"		3958975	0					
ANR	3959126	IdentifierDeclType	RGraphNode *		3958975	0					
ANR	3959127	Identifier	gnn		3958975	1					
ANR	3959128	AssignmentExpression	"* gnn = agraph_get_title ( g , an , in )"		3958975	2		=			
ANR	3959129	Identifier	gnn		3958975	0					
ANR	3959130	CallExpression	"agraph_get_title ( g , an , in )"		3958975	1					
ANR	3959131	Callee	agraph_get_title		3958975	0					
ANR	3959132	Identifier	agraph_get_title		3958975	0					
ANR	3959133	ArgumentList	g		3958975	1					
ANR	3959134	Argument	g		3958975	0					
ANR	3959135	Identifier	g		3958975	0					
ANR	3959136	Argument	an		3958975	1					
ANR	3959137	Identifier	an		3958975	0					
ANR	3959138	Argument	in		3958975	2					
ANR	3959139	Identifier	in		3958975	0					
ANR	3959140	IfStatement	if ( gnn )		3958975	2					
ANR	3959141	Condition	gnn	3258:6:81753:81755	3958975	0	True				
ANR	3959142	Identifier	gnn		3958975	0					
ANR	3959143	CompoundStatement		21:3:591:607	3958975	1					
ANR	3959144	IdentifierDeclStatement	RANode * nnn = gnn -> data ;	3259:3:81763:81786	3958975	0	True				
ANR	3959145	IdentifierDecl	* nnn = gnn -> data		3958975	0					
ANR	3959146	IdentifierDeclType	RANode *		3958975	0					
ANR	3959147	Identifier	nnn		3958975	1					
ANR	3959148	AssignmentExpression	* nnn = gnn -> data		3958975	2		=			
ANR	3959149	Identifier	nnn		3958975	0					
ANR	3959150	PtrMemberAccess	gnn -> data		3958975	1					
ANR	3959151	Identifier	gnn		3958975	0					
ANR	3959152	Identifier	data		3958975	1					
ANR	3959153	IdentifierDeclStatement	RANode * o ;	3260:3:81791:81800	3958975	1	True				
ANR	3959154	IdentifierDecl	* o		3958975	0					
ANR	3959155	IdentifierDeclType	RANode *		3958975	0					
ANR	3959156	Identifier	o		3958975	1					
ANR	3959157	IdentifierDeclStatement	RListIter * iter2 ;	3261:3:81805:81821	3958975	2	True				
ANR	3959158	IdentifierDecl	* iter2		3958975	0					
ANR	3959159	IdentifierDeclType	RListIter *		3958975	0					
ANR	3959160	Identifier	iter2		3958975	1					
ANR	3959161	Statement	r_list_foreach	3263:3:81844:81857	3958975	3	True				
ANR	3959162	Statement	(	3263:18:81859:81859	3958975	4	True				
ANR	3959163	Statement	options	3263:19:81860:81866	3958975	5	True				
ANR	3959164	Statement	","	3263:26:81867:81867	3958975	6	True				
ANR	3959165	Statement	iter2	3263:28:81869:81873	3958975	7	True				
ANR	3959166	Statement	","	3263:33:81874:81874	3958975	8	True				
ANR	3959167	Statement	o	3263:35:81876:81876	3958975	9	True				
ANR	3959168	Statement	)	3263:36:81877:81877	3958975	10	True				
ANR	3959169	CompoundStatement		23:38:665:665	3958975	11					
ANR	3959170	IfStatement	"if ( ! strcmp ( o -> title , nnn -> title ) )"		3958975	0					
ANR	3959171	Condition	"! strcmp ( o -> title , nnn -> title )"	3264:8:81889:81918	3958975	0	True				
ANR	3959172	UnaryOperationExpression	"! strcmp ( o -> title , nnn -> title )"		3958975	0					
ANR	3959173	UnaryOperator	!		3958975	0					
ANR	3959174	CallExpression	"strcmp ( o -> title , nnn -> title )"		3958975	1					
ANR	3959175	Callee	strcmp		3958975	0					
ANR	3959176	Identifier	strcmp		3958975	0					
ANR	3959177	ArgumentList	o -> title		3958975	1					
ANR	3959178	Argument	o -> title		3958975	0					
ANR	3959179	PtrMemberAccess	o -> title		3958975	0					
ANR	3959180	Identifier	o		3958975	0					
ANR	3959181	Identifier	title		3958975	1					
ANR	3959182	Argument	nnn -> title		3958975	1					
ANR	3959183	PtrMemberAccess	nnn -> title		3958975	0					
ANR	3959184	Identifier	nnn		3958975	0					
ANR	3959185	Identifier	title		3958975	1					
ANR	3959186	CompoundStatement		24:40:707:707	3958975	1					
ANR	3959187	ContinueStatement	continue ;	3265:5:81928:81936	3958975	0	True				
ANR	3959188	ExpressionStatement	"r_cons_printf ( ""%d %s\\n"" , count , nnn -> title )"	3268:3:81952:81996	3958975	12	True				
ANR	3959189	CallExpression	"r_cons_printf ( ""%d %s\\n"" , count , nnn -> title )"		3958975	0					
ANR	3959190	Callee	r_cons_printf		3958975	0					
ANR	3959191	Identifier	r_cons_printf		3958975	0					
ANR	3959192	ArgumentList	"""%d %s\\n"""		3958975	1					
ANR	3959193	Argument	"""%d %s\\n"""		3958975	0					
ANR	3959194	PrimaryExpression	"""%d %s\\n"""		3958975	0					
ANR	3959195	Argument	count		3958975	1					
ANR	3959196	Identifier	count		3958975	0					
ANR	3959197	Argument	nnn -> title		3958975	2					
ANR	3959198	PtrMemberAccess	nnn -> title		3958975	0					
ANR	3959199	Identifier	nnn		3958975	0					
ANR	3959200	Identifier	title		3958975	1					
ANR	3959201	ExpressionStatement	"r_list_append ( options , nnn )"	3269:3:82001:82029	3958975	13	True				
ANR	3959202	CallExpression	"r_list_append ( options , nnn )"		3958975	0					
ANR	3959203	Callee	r_list_append		3958975	0					
ANR	3959204	Identifier	r_list_append		3958975	0					
ANR	3959205	ArgumentList	options		3958975	1					
ANR	3959206	Argument	options		3958975	0					
ANR	3959207	Identifier	options		3958975	0					
ANR	3959208	Argument	nnn		3958975	1					
ANR	3959209	Identifier	nnn		3958975	0					
ANR	3959210	ExpressionStatement	count ++	3270:3:82034:82041	3958975	14	True				
ANR	3959211	PostIncDecOperationExpression	count ++		3958975	0					
ANR	3959212	Identifier	count		3958975	0					
ANR	3959213	IncDec	++		3958975	1					
ANR	3959214	ExpressionStatement	r_cons_flush ( )	3273:1:82051:82066	3958975	20	True				
ANR	3959215	CallExpression	r_cons_flush ( )		3958975	0					
ANR	3959216	Callee	r_cons_flush		3958975	0					
ANR	3959217	Identifier	r_cons_flush		3958975	0					
ANR	3959218	ArgumentList			3958975	1					
ANR	3959219	IfStatement	if ( r_list_length ( list ) == 1 )		3958975	21					
ANR	3959220	Condition	r_list_length ( list ) == 1	3274:5:82073:82097	3958975	0	True				
ANR	3959221	EqualityExpression	r_list_length ( list ) == 1		3958975	0		==			
ANR	3959222	CallExpression	r_list_length ( list )		3958975	0					
ANR	3959223	Callee	r_list_length		3958975	0					
ANR	3959224	Identifier	r_list_length		3958975	0					
ANR	3959225	ArgumentList	list		3958975	1					
ANR	3959226	Argument	list		3958975	0					
ANR	3959227	Identifier	list		3958975	0					
ANR	3959228	PrimaryExpression	1		3958975	1					
ANR	3959229	CompoundStatement		34:32:886:886	3958975	1					
ANR	3959230	ExpressionStatement	nth = 0	3275:2:82104:82111	3958975	0	True				
ANR	3959231	AssignmentExpression	nth = 0		3958975	0		=			
ANR	3959232	Identifier	nth		3958975	0					
ANR	3959233	PrimaryExpression	0		3958975	1					
ANR	3959234	ElseStatement	else		3958975	0					
ANR	3959235	IfStatement	if ( r_list_length ( list ) < 10 )		3958975	0					
ANR	3959236	Condition	r_list_length ( list ) < 10	3276:12:82125:82149	3958975	0	True				
ANR	3959237	RelationalExpression	r_list_length ( list ) < 10		3958975	0		<			
ANR	3959238	CallExpression	r_list_length ( list )		3958975	0					
ANR	3959239	Callee	r_list_length		3958975	0					
ANR	3959240	Identifier	r_list_length		3958975	0					
ANR	3959241	ArgumentList	list		3958975	1					
ANR	3959242	Argument	list		3958975	0					
ANR	3959243	Identifier	list		3958975	0					
ANR	3959244	PrimaryExpression	10		3958975	1					
ANR	3959245	CompoundStatement		38:2:958:986	3958975	1					
ANR	3959246	IdentifierDeclStatement	char ch = r_cons_readchar ( ) ;	3278:2:82172:82200	3958975	0	True				
ANR	3959247	IdentifierDecl	ch = r_cons_readchar ( )		3958975	0					
ANR	3959248	IdentifierDeclType	char		3958975	0					
ANR	3959249	Identifier	ch		3958975	1					
ANR	3959250	AssignmentExpression	ch = r_cons_readchar ( )		3958975	2		=			
ANR	3959251	Identifier	ch		3958975	0					
ANR	3959252	CallExpression	r_cons_readchar ( )		3958975	1					
ANR	3959253	Callee	r_cons_readchar		3958975	0					
ANR	3959254	Identifier	r_cons_readchar		3958975	0					
ANR	3959255	ArgumentList			3958975	1					
ANR	3959256	IfStatement	if ( ch >= '0' && ch <= '9' )		3958975	1					
ANR	3959257	Condition	ch >= '0' && ch <= '9'	3279:6:82208:82229	3958975	0	True				
ANR	3959258	AndExpression	ch >= '0' && ch <= '9'		3958975	0		&&			
ANR	3959259	RelationalExpression	ch >= '0'		3958975	0		>=			
ANR	3959260	Identifier	ch		3958975	0					
ANR	3959261	PrimaryExpression	'0'		3958975	1					
ANR	3959262	RelationalExpression	ch <= '9'		3958975	1		<=			
ANR	3959263	Identifier	ch		3958975	0					
ANR	3959264	PrimaryExpression	'9'		3958975	1					
ANR	3959265	CompoundStatement		39:30:1018:1018	3958975	1					
ANR	3959266	ExpressionStatement	nth = ch - '0'	3280:3:82237:82252	3958975	0	True				
ANR	3959267	AssignmentExpression	nth = ch - '0'		3958975	0		=			
ANR	3959268	Identifier	nth		3958975	0					
ANR	3959269	AdditiveExpression	ch - '0'		3958975	1		-			
ANR	3959270	Identifier	ch		3958975	0					
ANR	3959271	PrimaryExpression	'0'		3958975	1					
ANR	3959272	ElseStatement	else		3958975	0					
ANR	3959273	CompoundStatement		45:2:1116:1159	3958975	0					
ANR	3959274	ExpressionStatement	r_cons_show_cursor ( true )	3283:2:82270:82295	3958975	0	True				
ANR	3959275	CallExpression	r_cons_show_cursor ( true )		3958975	0					
ANR	3959276	Callee	r_cons_show_cursor		3958975	0					
ANR	3959277	Identifier	r_cons_show_cursor		3958975	0					
ANR	3959278	ArgumentList	true		3958975	1					
ANR	3959279	Argument	true		3958975	0					
ANR	3959280	Identifier	true		3958975	0					
ANR	3959281	ExpressionStatement	r_cons_enable_mouse ( false )	3284:2:82299:82326	3958975	1	True				
ANR	3959282	CallExpression	r_cons_enable_mouse ( false )		3958975	0					
ANR	3959283	Callee	r_cons_enable_mouse		3958975	0					
ANR	3959284	Identifier	r_cons_enable_mouse		3958975	0					
ANR	3959285	ArgumentList	false		3958975	1					
ANR	3959286	Argument	false		3958975	0					
ANR	3959287	Identifier	false		3958975	0					
ANR	3959288	IdentifierDeclStatement	"char * nth_string = r_cons_input ( ""index> "" ) ;"	3285:2:82330:82373	3958975	2	True				
ANR	3959289	IdentifierDecl	"* nth_string = r_cons_input ( ""index> "" )"		3958975	0					
ANR	3959290	IdentifierDeclType	char *		3958975	0					
ANR	3959291	Identifier	nth_string		3958975	1					
ANR	3959292	AssignmentExpression	"* nth_string = r_cons_input ( ""index> "" )"		3958975	2		=			
ANR	3959293	Identifier	nth_string		3958975	0					
ANR	3959294	CallExpression	"r_cons_input ( ""index> "" )"		3958975	1					
ANR	3959295	Callee	r_cons_input		3958975	0					
ANR	3959296	Identifier	r_cons_input		3958975	0					
ANR	3959297	ArgumentList	"""index> """		3958975	1					
ANR	3959298	Argument	"""index> """		3958975	0					
ANR	3959299	PrimaryExpression	"""index> """		3958975	0					
ANR	3959300	ExpressionStatement	nth = atoi ( nth_string )	3286:2:82377:82400	3958975	3	True				
ANR	3959301	AssignmentExpression	nth = atoi ( nth_string )		3958975	0		=			
ANR	3959302	Identifier	nth		3958975	0					
ANR	3959303	CallExpression	atoi ( nth_string )		3958975	1					
ANR	3959304	Callee	atoi		3958975	0					
ANR	3959305	Identifier	atoi		3958975	0					
ANR	3959306	ArgumentList	nth_string		3958975	1					
ANR	3959307	Argument	nth_string		3958975	0					
ANR	3959308	Identifier	nth_string		3958975	0					
ANR	3959309	IfStatement	if ( nth == 0 && * nth_string != '0' )		3958975	4					
ANR	3959310	Condition	nth == 0 && * nth_string != '0'	3287:6:82408:82437	3958975	0	True				
ANR	3959311	AndExpression	nth == 0 && * nth_string != '0'		3958975	0		&&			
ANR	3959312	EqualityExpression	nth == 0		3958975	0		==			
ANR	3959313	Identifier	nth		3958975	0					
ANR	3959314	PrimaryExpression	0		3958975	1					
ANR	3959315	EqualityExpression	* nth_string != '0'		3958975	1		!=			
ANR	3959316	UnaryOperationExpression	* nth_string		3958975	0					
ANR	3959317	UnaryOperator	*		3958975	0					
ANR	3959318	Identifier	nth_string		3958975	1					
ANR	3959319	PrimaryExpression	'0'		3958975	1					
ANR	3959320	CompoundStatement		47:38:1226:1226	3958975	1					
ANR	3959321	ExpressionStatement	nth = - 1	3288:3:82445:82453	3958975	0	True				
ANR	3959322	AssignmentExpression	nth = - 1		3958975	0		=			
ANR	3959323	Identifier	nth		3958975	0					
ANR	3959324	UnaryOperationExpression	- 1		3958975	1					
ANR	3959325	UnaryOperator	-		3958975	0					
ANR	3959326	PrimaryExpression	1		3958975	1					
ANR	3959327	ExpressionStatement	free ( nth_string )	3290:2:82461:82478	3958975	5	True				
ANR	3959328	CallExpression	free ( nth_string )		3958975	0					
ANR	3959329	Callee	free		3958975	0					
ANR	3959330	Identifier	free		3958975	0					
ANR	3959331	ArgumentList	nth_string		3958975	1					
ANR	3959332	Argument	nth_string		3958975	0					
ANR	3959333	Identifier	nth_string		3958975	0					
ANR	3959334	IfStatement	if ( nth != - 1 )		3958975	22					
ANR	3959335	Condition	nth != - 1	3292:5:82488:82496	3958975	0	True				
ANR	3959336	EqualityExpression	nth != - 1		3958975	0		!=			
ANR	3959337	Identifier	nth		3958975	0					
ANR	3959338	UnaryOperationExpression	- 1		3958975	1					
ANR	3959339	UnaryOperator	-		3958975	0					
ANR	3959340	PrimaryExpression	1		3958975	1					
ANR	3959341	CompoundStatement		53:2:1289:1340	3958975	1					
ANR	3959342	IdentifierDeclStatement	"RANode * selected_node = r_list_get_n ( options , nth ) ;"	3293:2:82503:82554	3958975	0	True				
ANR	3959343	IdentifierDecl	"* selected_node = r_list_get_n ( options , nth )"		3958975	0					
ANR	3959344	IdentifierDeclType	RANode *		3958975	0					
ANR	3959345	Identifier	selected_node		3958975	1					
ANR	3959346	AssignmentExpression	"* selected_node = r_list_get_n ( options , nth )"		3958975	2		=			
ANR	3959347	Identifier	selected_node		3958975	0					
ANR	3959348	CallExpression	"r_list_get_n ( options , nth )"		3958975	1					
ANR	3959349	Callee	r_list_get_n		3958975	0					
ANR	3959350	Identifier	r_list_get_n		3958975	0					
ANR	3959351	ArgumentList	options		3958975	1					
ANR	3959352	Argument	options		3958975	0					
ANR	3959353	Identifier	options		3958975	0					
ANR	3959354	Argument	nth		3958975	1					
ANR	3959355	Identifier	nth		3958975	0					
ANR	3959356	ExpressionStatement	"r_agraph_set_curnode ( g , selected_node )"	3294:2:82558:82597	3958975	1	True				
ANR	3959357	CallExpression	"r_agraph_set_curnode ( g , selected_node )"		3958975	0					
ANR	3959358	Callee	r_agraph_set_curnode		3958975	0					
ANR	3959359	Identifier	r_agraph_set_curnode		3958975	0					
ANR	3959360	ArgumentList	g		3958975	1					
ANR	3959361	Argument	g		3958975	0					
ANR	3959362	Identifier	g		3958975	0					
ANR	3959363	Argument	selected_node		3958975	1					
ANR	3959364	Identifier	selected_node		3958975	0					
ANR	3959365	ExpressionStatement	r_list_free ( options )	3296:1:82603:82624	3958975	23	True				
ANR	3959366	CallExpression	r_list_free ( options )		3958975	0					
ANR	3959367	Callee	r_list_free		3958975	0					
ANR	3959368	Identifier	r_list_free		3958975	0					
ANR	3959369	ArgumentList	options		3958975	1					
ANR	3959370	Argument	options		3958975	0					
ANR	3959371	Identifier	options		3958975	0					
ANR	3959372	ExpressionStatement	"agraph_update_seek ( g , get_anode ( g -> curnode ) , false )"	3297:1:82627:82680	3958975	24	True				
ANR	3959373	CallExpression	"agraph_update_seek ( g , get_anode ( g -> curnode ) , false )"		3958975	0					
ANR	3959374	Callee	agraph_update_seek		3958975	0					
ANR	3959375	Identifier	agraph_update_seek		3958975	0					
ANR	3959376	ArgumentList	g		3958975	1					
ANR	3959377	Argument	g		3958975	0					
ANR	3959378	Identifier	g		3958975	0					
ANR	3959379	Argument	get_anode ( g -> curnode )		3958975	1					
ANR	3959380	CallExpression	get_anode ( g -> curnode )		3958975	0					
ANR	3959381	Callee	get_anode		3958975	0					
ANR	3959382	Identifier	get_anode		3958975	0					
ANR	3959383	ArgumentList	g -> curnode		3958975	1					
ANR	3959384	Argument	g -> curnode		3958975	0					
ANR	3959385	PtrMemberAccess	g -> curnode		3958975	0					
ANR	3959386	Identifier	g		3958975	0					
ANR	3959387	Identifier	curnode		3958975	1					
ANR	3959388	Argument	false		3958975	2					
ANR	3959389	Identifier	false		3958975	0					
ANR	3959390	ReturnType	static void		3958975	1					
ANR	3959391	Identifier	agraph_follow_innodes		3958975	2					
ANR	3959392	ParameterList	"RAGraph * g , bool in"		3958975	3					
ANR	3959393	Parameter	RAGraph * g	3241:35:81192:81201	3958975	0	True				
ANR	3959394	ParameterType	RAGraph *		3958975	0					
ANR	3959395	Identifier	g		3958975	1					
ANR	3959396	Parameter	bool in	3241:47:81204:81210	3958975	1	True				
ANR	3959397	ParameterType	bool		3958975	0					
ANR	3959398	Identifier	in		3958975	1					
ANR	3959399	CFGEntryNode	ENTRY		3958975		True				
ANR	3959400	CFGExitNode	EXIT		3958975		True				
ANR	3959401	CFGErrorNode	ERROR		3958975		True				
ANR	3959402	Symbol	r_cons_readchar		3958975						
ANR	3959403	Symbol	agraph_get_title		3958975						
ANR	3959404	Symbol	* nth_string		3958975						
ANR	3959405	Symbol	an -> gnode -> out_nodes		3958975						
ANR	3959406	Symbol	gnn -> data		3958975						
ANR	3959407	Symbol	o -> title		3958975						
ANR	3959408	Symbol	an -> gnode		3958975						
ANR	3959409	Symbol	options		3958975						
ANR	3959410	Symbol	* nnn		3958975						
ANR	3959411	Symbol	* * an		3958975						
ANR	3959412	Symbol	* an -> gnode		3958975						
ANR	3959413	Symbol	nth_string		3958975						
ANR	3959414	Symbol	strcmp		3958975						
ANR	3959415	Symbol	atoi		3958975						
ANR	3959416	Symbol	get_anode		3958975						
ANR	3959417	Symbol	nth		3958975						
ANR	3959418	Symbol	NULL		3958975						
ANR	3959419	Symbol	in		3958975						
ANR	3959420	Symbol	an -> gnode -> in_nodes		3958975						
ANR	3959421	Symbol	r_list_newf		3958975						
ANR	3959422	Symbol	ch		3958975						
ANR	3959423	Symbol	gnn		3958975						
ANR	3959424	Symbol	g		3958975						
ANR	3959425	Symbol	gn		3958975						
ANR	3959426	Symbol	iter2		3958975						
ANR	3959427	Symbol	nnn -> title		3958975						
ANR	3959428	Symbol	count		3958975						
ANR	3959429	Symbol	false		3958975						
ANR	3959430	Symbol	selected_node		3958975						
ANR	3959431	Symbol	iter		3958975						
ANR	3959432	Symbol	r_list_get_n		3958975						
ANR	3959433	Symbol	list		3958975						
ANR	3959434	Symbol	an		3958975						
ANR	3959435	Symbol	* gnn		3958975						
ANR	3959436	Symbol	gnodes		3958975						
ANR	3959437	Symbol	nnn		3958975						
ANR	3959438	Symbol	o		3958975						
ANR	3959439	Symbol	* an		3958975						
ANR	3959440	Symbol	* g		3958975						
ANR	3959441	Symbol	g -> curnode		3958975						
ANR	3959442	Symbol	true		3958975						
ANR	3959443	Symbol	* o		3958975						
ANR	3959444	Symbol	r_cons_input		3958975						
ANR	3959445	Symbol	r_list_length		3958975						
ANR	3959446	Function	agraph_follow_true	3300:0:82685:82806							
ANR	3959447	FunctionDef	agraph_follow_true (RAGraph * g)		3959446	0					
ANR	3959448	CompoundStatement		3300:43:82728:82806	3959446	0					
ANR	3959449	ExpressionStatement	"follow_nth ( g , 0 )"	3301:1:82731:82748	3959446	0	True				
ANR	3959450	CallExpression	"follow_nth ( g , 0 )"		3959446	0					
ANR	3959451	Callee	follow_nth		3959446	0					
ANR	3959452	Identifier	follow_nth		3959446	0					
ANR	3959453	ArgumentList	g		3959446	1					
ANR	3959454	Argument	g		3959446	0					
ANR	3959455	Identifier	g		3959446	0					
ANR	3959456	Argument	0		3959446	1					
ANR	3959457	PrimaryExpression	0		3959446	0					
ANR	3959458	ExpressionStatement	"agraph_update_seek ( g , get_anode ( g -> curnode ) , false )"	3302:1:82751:82804	3959446	1	True				
ANR	3959459	CallExpression	"agraph_update_seek ( g , get_anode ( g -> curnode ) , false )"		3959446	0					
ANR	3959460	Callee	agraph_update_seek		3959446	0					
ANR	3959461	Identifier	agraph_update_seek		3959446	0					
ANR	3959462	ArgumentList	g		3959446	1					
ANR	3959463	Argument	g		3959446	0					
ANR	3959464	Identifier	g		3959446	0					
ANR	3959465	Argument	get_anode ( g -> curnode )		3959446	1					
ANR	3959466	CallExpression	get_anode ( g -> curnode )		3959446	0					
ANR	3959467	Callee	get_anode		3959446	0					
ANR	3959468	Identifier	get_anode		3959446	0					
ANR	3959469	ArgumentList	g -> curnode		3959446	1					
ANR	3959470	Argument	g -> curnode		3959446	0					
ANR	3959471	PtrMemberAccess	g -> curnode		3959446	0					
ANR	3959472	Identifier	g		3959446	0					
ANR	3959473	Identifier	curnode		3959446	1					
ANR	3959474	Argument	false		3959446	2					
ANR	3959475	Identifier	false		3959446	0					
ANR	3959476	ReturnType	static void		3959446	1					
ANR	3959477	Identifier	agraph_follow_true		3959446	2					
ANR	3959478	ParameterList	RAGraph * g		3959446	3					
ANR	3959479	Parameter	RAGraph * g	3300:31:82716:82725	3959446	0	True				
ANR	3959480	ParameterType	RAGraph *		3959446	0					
ANR	3959481	Identifier	g		3959446	1					
ANR	3959482	CFGEntryNode	ENTRY		3959446		True				
ANR	3959483	CFGExitNode	EXIT		3959446		True				
ANR	3959484	Symbol	* g		3959446						
ANR	3959485	Symbol	get_anode		3959446						
ANR	3959486	Symbol	g		3959446						
ANR	3959487	Symbol	g -> curnode		3959446						
ANR	3959488	Symbol	false		3959446						
ANR	3959489	Function	agraph_follow_false	3305:0:82809:82931							
ANR	3959490	FunctionDef	agraph_follow_false (RAGraph * g)		3959489	0					
ANR	3959491	CompoundStatement		3305:44:82853:82931	3959489	0					
ANR	3959492	ExpressionStatement	"follow_nth ( g , 1 )"	3306:1:82856:82873	3959489	0	True				
ANR	3959493	CallExpression	"follow_nth ( g , 1 )"		3959489	0					
ANR	3959494	Callee	follow_nth		3959489	0					
ANR	3959495	Identifier	follow_nth		3959489	0					
ANR	3959496	ArgumentList	g		3959489	1					
ANR	3959497	Argument	g		3959489	0					
ANR	3959498	Identifier	g		3959489	0					
ANR	3959499	Argument	1		3959489	1					
ANR	3959500	PrimaryExpression	1		3959489	0					
ANR	3959501	ExpressionStatement	"agraph_update_seek ( g , get_anode ( g -> curnode ) , false )"	3307:1:82876:82929	3959489	1	True				
ANR	3959502	CallExpression	"agraph_update_seek ( g , get_anode ( g -> curnode ) , false )"		3959489	0					
ANR	3959503	Callee	agraph_update_seek		3959489	0					
ANR	3959504	Identifier	agraph_update_seek		3959489	0					
ANR	3959505	ArgumentList	g		3959489	1					
ANR	3959506	Argument	g		3959489	0					
ANR	3959507	Identifier	g		3959489	0					
ANR	3959508	Argument	get_anode ( g -> curnode )		3959489	1					
ANR	3959509	CallExpression	get_anode ( g -> curnode )		3959489	0					
ANR	3959510	Callee	get_anode		3959489	0					
ANR	3959511	Identifier	get_anode		3959489	0					
ANR	3959512	ArgumentList	g -> curnode		3959489	1					
ANR	3959513	Argument	g -> curnode		3959489	0					
ANR	3959514	PtrMemberAccess	g -> curnode		3959489	0					
ANR	3959515	Identifier	g		3959489	0					
ANR	3959516	Identifier	curnode		3959489	1					
ANR	3959517	Argument	false		3959489	2					
ANR	3959518	Identifier	false		3959489	0					
ANR	3959519	ReturnType	static void		3959489	1					
ANR	3959520	Identifier	agraph_follow_false		3959489	2					
ANR	3959521	ParameterList	RAGraph * g		3959489	3					
ANR	3959522	Parameter	RAGraph * g	3305:32:82841:82850	3959489	0	True				
ANR	3959523	ParameterType	RAGraph *		3959489	0					
ANR	3959524	Identifier	g		3959489	1					
ANR	3959525	CFGEntryNode	ENTRY		3959489		True				
ANR	3959526	CFGExitNode	EXIT		3959489		True				
ANR	3959527	Symbol	* g		3959489						
ANR	3959528	Symbol	get_anode		3959489						
ANR	3959529	Symbol	g		3959489						
ANR	3959530	Symbol	g -> curnode		3959489						
ANR	3959531	Symbol	false		3959489						
ANR	3959532	Function	agraph_next_node	3311:0:82975:83248							
ANR	3959533	FunctionDef	agraph_next_node (RAGraph * g)		3959532	0					
ANR	3959534	CompoundStatement		3311:41:83016:83248	3959532	0					
ANR	3959535	IdentifierDeclStatement	"RANode * a = get_anode ( find_near_of ( g , g -> curnode , true ) ) ;"	3312:1:83019:83077	3959532	0	True				
ANR	3959536	IdentifierDecl	"* a = get_anode ( find_near_of ( g , g -> curnode , true ) )"		3959532	0					
ANR	3959537	IdentifierDeclType	RANode *		3959532	0					
ANR	3959538	Identifier	a		3959532	1					
ANR	3959539	AssignmentExpression	"* a = get_anode ( find_near_of ( g , g -> curnode , true ) )"		3959532	2		=			
ANR	3959540	Identifier	a		3959532	0					
ANR	3959541	CallExpression	"get_anode ( find_near_of ( g , g -> curnode , true ) )"		3959532	1					
ANR	3959542	Callee	get_anode		3959532	0					
ANR	3959543	Identifier	get_anode		3959532	0					
ANR	3959544	ArgumentList	"find_near_of ( g , g -> curnode , true )"		3959532	1					
ANR	3959545	Argument	"find_near_of ( g , g -> curnode , true )"		3959532	0					
ANR	3959546	CallExpression	"find_near_of ( g , g -> curnode , true )"		3959532	0					
ANR	3959547	Callee	find_near_of		3959532	0					
ANR	3959548	Identifier	find_near_of		3959532	0					
ANR	3959549	ArgumentList	g		3959532	1					
ANR	3959550	Argument	g		3959532	0					
ANR	3959551	Identifier	g		3959532	0					
ANR	3959552	Argument	g -> curnode		3959532	1					
ANR	3959553	PtrMemberAccess	g -> curnode		3959532	0					
ANR	3959554	Identifier	g		3959532	0					
ANR	3959555	Identifier	curnode		3959532	1					
ANR	3959556	Argument	true		3959532	2					
ANR	3959557	Identifier	true		3959532	0					
ANR	3959558	WhileStatement	while ( a && a -> is_dummy )		3959532	1					
ANR	3959559	Condition	a && a -> is_dummy	3313:8:83087:83102	3959532	0	True				
ANR	3959560	AndExpression	a && a -> is_dummy		3959532	0		&&			
ANR	3959561	Identifier	a		3959532	0					
ANR	3959562	PtrMemberAccess	a -> is_dummy		3959532	1					
ANR	3959563	Identifier	a		3959532	0					
ANR	3959564	Identifier	is_dummy		3959532	1					
ANR	3959565	CompoundStatement		3:26:88:88	3959532	1					
ANR	3959566	ExpressionStatement	"a = get_anode ( find_near_of ( g , a -> gnode , true ) )"	3314:2:83109:83157	3959532	0	True				
ANR	3959567	AssignmentExpression	"a = get_anode ( find_near_of ( g , a -> gnode , true ) )"		3959532	0		=			
ANR	3959568	Identifier	a		3959532	0					
ANR	3959569	CallExpression	"get_anode ( find_near_of ( g , a -> gnode , true ) )"		3959532	1					
ANR	3959570	Callee	get_anode		3959532	0					
ANR	3959571	Identifier	get_anode		3959532	0					
ANR	3959572	ArgumentList	"find_near_of ( g , a -> gnode , true )"		3959532	1					
ANR	3959573	Argument	"find_near_of ( g , a -> gnode , true )"		3959532	0					
ANR	3959574	CallExpression	"find_near_of ( g , a -> gnode , true )"		3959532	0					
ANR	3959575	Callee	find_near_of		3959532	0					
ANR	3959576	Identifier	find_near_of		3959532	0					
ANR	3959577	ArgumentList	g		3959532	1					
ANR	3959578	Argument	g		3959532	0					
ANR	3959579	Identifier	g		3959532	0					
ANR	3959580	Argument	a -> gnode		3959532	1					
ANR	3959581	PtrMemberAccess	a -> gnode		3959532	0					
ANR	3959582	Identifier	a		3959532	0					
ANR	3959583	Identifier	gnode		3959532	1					
ANR	3959584	Argument	true		3959532	2					
ANR	3959585	Identifier	true		3959532	0					
ANR	3959586	ExpressionStatement	"r_agraph_set_curnode ( g , a )"	3316:1:83163:83190	3959532	2	True				
ANR	3959587	CallExpression	"r_agraph_set_curnode ( g , a )"		3959532	0					
ANR	3959588	Callee	r_agraph_set_curnode		3959532	0					
ANR	3959589	Identifier	r_agraph_set_curnode		3959532	0					
ANR	3959590	ArgumentList	g		3959532	1					
ANR	3959591	Argument	g		3959532	0					
ANR	3959592	Identifier	g		3959532	0					
ANR	3959593	Argument	a		3959532	1					
ANR	3959594	Identifier	a		3959532	0					
ANR	3959595	ExpressionStatement	"agraph_update_seek ( g , get_anode ( g -> curnode ) , false )"	3317:1:83193:83246	3959532	3	True				
ANR	3959596	CallExpression	"agraph_update_seek ( g , get_anode ( g -> curnode ) , false )"		3959532	0					
ANR	3959597	Callee	agraph_update_seek		3959532	0					
ANR	3959598	Identifier	agraph_update_seek		3959532	0					
ANR	3959599	ArgumentList	g		3959532	1					
ANR	3959600	Argument	g		3959532	0					
ANR	3959601	Identifier	g		3959532	0					
ANR	3959602	Argument	get_anode ( g -> curnode )		3959532	1					
ANR	3959603	CallExpression	get_anode ( g -> curnode )		3959532	0					
ANR	3959604	Callee	get_anode		3959532	0					
ANR	3959605	Identifier	get_anode		3959532	0					
ANR	3959606	ArgumentList	g -> curnode		3959532	1					
ANR	3959607	Argument	g -> curnode		3959532	0					
ANR	3959608	PtrMemberAccess	g -> curnode		3959532	0					
ANR	3959609	Identifier	g		3959532	0					
ANR	3959610	Identifier	curnode		3959532	1					
ANR	3959611	Argument	false		3959532	2					
ANR	3959612	Identifier	false		3959532	0					
ANR	3959613	ReturnType	static void		3959532	1					
ANR	3959614	Identifier	agraph_next_node		3959532	2					
ANR	3959615	ParameterList	RAGraph * g		3959532	3					
ANR	3959616	Parameter	RAGraph * g	3311:29:83004:83013	3959532	0	True				
ANR	3959617	ParameterType	RAGraph *		3959532	0					
ANR	3959618	Identifier	g		3959532	1					
ANR	3959619	CFGEntryNode	ENTRY		3959532		True				
ANR	3959620	CFGExitNode	EXIT		3959532		True				
ANR	3959621	Symbol	* g		3959532						
ANR	3959622	Symbol	a		3959532						
ANR	3959623	Symbol	a -> is_dummy		3959532						
ANR	3959624	Symbol	get_anode		3959532						
ANR	3959625	Symbol	g		3959532						
ANR	3959626	Symbol	g -> curnode		3959532						
ANR	3959627	Symbol	true		3959532						
ANR	3959628	Symbol	false		3959532						
ANR	3959629	Symbol	find_near_of		3959532						
ANR	3959630	Symbol	a -> gnode		3959532						
ANR	3959631	Symbol	* a		3959532						
ANR	3959632	Function	agraph_prev_node	3321:0:83296:83571							
ANR	3959633	FunctionDef	agraph_prev_node (RAGraph * g)		3959632	0					
ANR	3959634	CompoundStatement		3321:41:83337:83571	3959632	0					
ANR	3959635	IdentifierDeclStatement	"RANode * a = get_anode ( find_near_of ( g , g -> curnode , false ) ) ;"	3322:1:83340:83399	3959632	0	True				
ANR	3959636	IdentifierDecl	"* a = get_anode ( find_near_of ( g , g -> curnode , false ) )"		3959632	0					
ANR	3959637	IdentifierDeclType	RANode *		3959632	0					
ANR	3959638	Identifier	a		3959632	1					
ANR	3959639	AssignmentExpression	"* a = get_anode ( find_near_of ( g , g -> curnode , false ) )"		3959632	2		=			
ANR	3959640	Identifier	a		3959632	0					
ANR	3959641	CallExpression	"get_anode ( find_near_of ( g , g -> curnode , false ) )"		3959632	1					
ANR	3959642	Callee	get_anode		3959632	0					
ANR	3959643	Identifier	get_anode		3959632	0					
ANR	3959644	ArgumentList	"find_near_of ( g , g -> curnode , false )"		3959632	1					
ANR	3959645	Argument	"find_near_of ( g , g -> curnode , false )"		3959632	0					
ANR	3959646	CallExpression	"find_near_of ( g , g -> curnode , false )"		3959632	0					
ANR	3959647	Callee	find_near_of		3959632	0					
ANR	3959648	Identifier	find_near_of		3959632	0					
ANR	3959649	ArgumentList	g		3959632	1					
ANR	3959650	Argument	g		3959632	0					
ANR	3959651	Identifier	g		3959632	0					
ANR	3959652	Argument	g -> curnode		3959632	1					
ANR	3959653	PtrMemberAccess	g -> curnode		3959632	0					
ANR	3959654	Identifier	g		3959632	0					
ANR	3959655	Identifier	curnode		3959632	1					
ANR	3959656	Argument	false		3959632	2					
ANR	3959657	Identifier	false		3959632	0					
ANR	3959658	WhileStatement	while ( a && a -> is_dummy )		3959632	1					
ANR	3959659	Condition	a && a -> is_dummy	3323:8:83409:83424	3959632	0	True				
ANR	3959660	AndExpression	a && a -> is_dummy		3959632	0		&&			
ANR	3959661	Identifier	a		3959632	0					
ANR	3959662	PtrMemberAccess	a -> is_dummy		3959632	1					
ANR	3959663	Identifier	a		3959632	0					
ANR	3959664	Identifier	is_dummy		3959632	1					
ANR	3959665	CompoundStatement		3:26:89:89	3959632	1					
ANR	3959666	ExpressionStatement	"a = get_anode ( find_near_of ( g , a -> gnode , false ) )"	3324:2:83431:83480	3959632	0	True				
ANR	3959667	AssignmentExpression	"a = get_anode ( find_near_of ( g , a -> gnode , false ) )"		3959632	0		=			
ANR	3959668	Identifier	a		3959632	0					
ANR	3959669	CallExpression	"get_anode ( find_near_of ( g , a -> gnode , false ) )"		3959632	1					
ANR	3959670	Callee	get_anode		3959632	0					
ANR	3959671	Identifier	get_anode		3959632	0					
ANR	3959672	ArgumentList	"find_near_of ( g , a -> gnode , false )"		3959632	1					
ANR	3959673	Argument	"find_near_of ( g , a -> gnode , false )"		3959632	0					
ANR	3959674	CallExpression	"find_near_of ( g , a -> gnode , false )"		3959632	0					
ANR	3959675	Callee	find_near_of		3959632	0					
ANR	3959676	Identifier	find_near_of		3959632	0					
ANR	3959677	ArgumentList	g		3959632	1					
ANR	3959678	Argument	g		3959632	0					
ANR	3959679	Identifier	g		3959632	0					
ANR	3959680	Argument	a -> gnode		3959632	1					
ANR	3959681	PtrMemberAccess	a -> gnode		3959632	0					
ANR	3959682	Identifier	a		3959632	0					
ANR	3959683	Identifier	gnode		3959632	1					
ANR	3959684	Argument	false		3959632	2					
ANR	3959685	Identifier	false		3959632	0					
ANR	3959686	ExpressionStatement	"r_agraph_set_curnode ( g , a )"	3326:1:83486:83513	3959632	2	True				
ANR	3959687	CallExpression	"r_agraph_set_curnode ( g , a )"		3959632	0					
ANR	3959688	Callee	r_agraph_set_curnode		3959632	0					
ANR	3959689	Identifier	r_agraph_set_curnode		3959632	0					
ANR	3959690	ArgumentList	g		3959632	1					
ANR	3959691	Argument	g		3959632	0					
ANR	3959692	Identifier	g		3959632	0					
ANR	3959693	Argument	a		3959632	1					
ANR	3959694	Identifier	a		3959632	0					
ANR	3959695	ExpressionStatement	"agraph_update_seek ( g , get_anode ( g -> curnode ) , false )"	3327:1:83516:83569	3959632	3	True				
ANR	3959696	CallExpression	"agraph_update_seek ( g , get_anode ( g -> curnode ) , false )"		3959632	0					
ANR	3959697	Callee	agraph_update_seek		3959632	0					
ANR	3959698	Identifier	agraph_update_seek		3959632	0					
ANR	3959699	ArgumentList	g		3959632	1					
ANR	3959700	Argument	g		3959632	0					
ANR	3959701	Identifier	g		3959632	0					
ANR	3959702	Argument	get_anode ( g -> curnode )		3959632	1					
ANR	3959703	CallExpression	get_anode ( g -> curnode )		3959632	0					
ANR	3959704	Callee	get_anode		3959632	0					
ANR	3959705	Identifier	get_anode		3959632	0					
ANR	3959706	ArgumentList	g -> curnode		3959632	1					
ANR	3959707	Argument	g -> curnode		3959632	0					
ANR	3959708	PtrMemberAccess	g -> curnode		3959632	0					
ANR	3959709	Identifier	g		3959632	0					
ANR	3959710	Identifier	curnode		3959632	1					
ANR	3959711	Argument	false		3959632	2					
ANR	3959712	Identifier	false		3959632	0					
ANR	3959713	ReturnType	static void		3959632	1					
ANR	3959714	Identifier	agraph_prev_node		3959632	2					
ANR	3959715	ParameterList	RAGraph * g		3959632	3					
ANR	3959716	Parameter	RAGraph * g	3321:29:83325:83334	3959632	0	True				
ANR	3959717	ParameterType	RAGraph *		3959632	0					
ANR	3959718	Identifier	g		3959632	1					
ANR	3959719	CFGEntryNode	ENTRY		3959632		True				
ANR	3959720	CFGExitNode	EXIT		3959632		True				
ANR	3959721	Symbol	* g		3959632						
ANR	3959722	Symbol	a		3959632						
ANR	3959723	Symbol	a -> is_dummy		3959632						
ANR	3959724	Symbol	get_anode		3959632						
ANR	3959725	Symbol	g		3959632						
ANR	3959726	Symbol	g -> curnode		3959632						
ANR	3959727	Symbol	false		3959632						
ANR	3959728	Symbol	find_near_of		3959632						
ANR	3959729	Symbol	a -> gnode		3959632						
ANR	3959730	Symbol	* a		3959632						
ANR	3959731	Function	agraph_update_title	3330:0:83574:83923							
ANR	3959732	FunctionDef	"agraph_update_title (RCore * core , RAGraph * g , RAnalFunction * fcn)"		3959731	0					
ANR	3959733	CompoundStatement		3330:77:83651:83923	3959731	0					
ANR	3959734	IdentifierDeclStatement	RANode * a = get_anode ( g -> curnode ) ;	3331:1:83654:83688	3959731	0	True				
ANR	3959735	IdentifierDecl	* a = get_anode ( g -> curnode )		3959731	0					
ANR	3959736	IdentifierDeclType	RANode *		3959731	0					
ANR	3959737	Identifier	a		3959731	1					
ANR	3959738	AssignmentExpression	* a = get_anode ( g -> curnode )		3959731	2		=			
ANR	3959739	Identifier	a		3959731	0					
ANR	3959740	CallExpression	get_anode ( g -> curnode )		3959731	1					
ANR	3959741	Callee	get_anode		3959731	0					
ANR	3959742	Identifier	get_anode		3959731	0					
ANR	3959743	ArgumentList	g -> curnode		3959731	1					
ANR	3959744	Argument	g -> curnode		3959731	0					
ANR	3959745	PtrMemberAccess	g -> curnode		3959731	0					
ANR	3959746	Identifier	g		3959731	0					
ANR	3959747	Identifier	curnode		3959731	1					
ANR	3959748	IdentifierDeclStatement	"char * sig = r_core_cmd_str ( core , ""afcf"" ) ;"	3332:1:83691:83732	3959731	1	True				
ANR	3959749	IdentifierDecl	"* sig = r_core_cmd_str ( core , ""afcf"" )"		3959731	0					
ANR	3959750	IdentifierDeclType	char *		3959731	0					
ANR	3959751	Identifier	sig		3959731	1					
ANR	3959752	AssignmentExpression	"* sig = r_core_cmd_str ( core , ""afcf"" )"		3959731	2		=			
ANR	3959753	Identifier	sig		3959731	0					
ANR	3959754	CallExpression	"r_core_cmd_str ( core , ""afcf"" )"		3959731	1					
ANR	3959755	Callee	r_core_cmd_str		3959731	0					
ANR	3959756	Identifier	r_core_cmd_str		3959731	0					
ANR	3959757	ArgumentList	core		3959731	1					
ANR	3959758	Argument	core		3959731	0					
ANR	3959759	Identifier	core		3959731	0					
ANR	3959760	Argument	"""afcf"""		3959731	1					
ANR	3959761	PrimaryExpression	"""afcf"""		3959731	0					
ANR	3959762	Statement	char	3333:1:83735:83738	3959731	2	True				
ANR	3959763	Statement	*	3333:6:83740:83740	3959731	3	True				
ANR	3959764	Statement	new_title	3333:7:83741:83749	3959731	4	True				
ANR	3959765	Statement	=	3333:17:83751:83751	3959731	5	True				
ANR	3959766	Statement	r_str_newf	3333:19:83753:83762	3959731	6	True				
ANR	3959767	Statement	(	3333:30:83764:83764	3959731	7	True				
ANR	3959768	Statement	"""%s[0x%08"""	3334:2:83768:83777	3959731	8	True				
ANR	3959769	Statement	PFMT64x	3334:12:83778:83784	3959731	9	True				
ANR	3959770	Statement	"""]> %s # %s """	3334:20:83786:83798	3959731	10	True				
ANR	3959771	Statement	","	3334:33:83799:83799	3959731	11	True				
ANR	3959772	Statement	graphCursor	3335:2:83803:83813	3959731	12	True				
ANR	3959773	Statement	?	3335:13:83814:83814	3959731	13	True				
ANR	3959774	Statement	"""(cursor)"""	3335:15:83816:83825	3959731	14	True				
ANR	3959775	Statement	:	3335:25:83826:83826	3959731	15	True				
ANR	3959776	Statement	""""""	3335:27:83828:83829	3959731	16	True				
ANR	3959777	Statement	","	3335:29:83830:83830	3959731	17	True				
ANR	3959778	Statement	fcn	3336:2:83834:83836	3959731	18	True				
ANR	3959779	Statement	->	3336:5:83837:83838	3959731	19	True				
ANR	3959780	Statement	addr	3336:7:83839:83842	3959731	20	True				
ANR	3959781	Statement	","	3336:11:83843:83843	3959731	21	True				
ANR	3959782	Statement	a	3336:13:83845:83845	3959731	22	True				
ANR	3959783	Statement	?	3336:14:83846:83846	3959731	23	True				
ANR	3959784	Statement	a	3336:16:83848:83848	3959731	24	True				
ANR	3959785	Statement	->	3336:17:83849:83850	3959731	25	True				
ANR	3959786	Label	title :	3336:19:83851:83856	3959731	26	True				
ANR	3959787	Identifier	title		3959731	0					
ANR	3959788	Statement	""""""	3336:26:83858:83859	3959731	27	True				
ANR	3959789	Statement	","	3336:28:83860:83860	3959731	28	True				
ANR	3959790	Statement	sig	3336:30:83862:83864	3959731	29	True				
ANR	3959791	Statement	)	3336:33:83865:83865	3959731	30	True				
ANR	3959792	ExpressionStatement		3336:34:83866:83866	3959731	31	True				
ANR	3959793	ExpressionStatement	"r_agraph_set_title ( g , new_title )"	3337:1:83869:83902	3959731	32	True				
ANR	3959794	CallExpression	"r_agraph_set_title ( g , new_title )"		3959731	0					
ANR	3959795	Callee	r_agraph_set_title		3959731	0					
ANR	3959796	Identifier	r_agraph_set_title		3959731	0					
ANR	3959797	ArgumentList	g		3959731	1					
ANR	3959798	Argument	g		3959731	0					
ANR	3959799	Identifier	g		3959731	0					
ANR	3959800	Argument	new_title		3959731	1					
ANR	3959801	Identifier	new_title		3959731	0					
ANR	3959802	ExpressionStatement	free ( new_title )	3338:1:83905:83921	3959731	33	True				
ANR	3959803	CallExpression	free ( new_title )		3959731	0					
ANR	3959804	Callee	free		3959731	0					
ANR	3959805	Identifier	free		3959731	0					
ANR	3959806	ArgumentList	new_title		3959731	1					
ANR	3959807	Argument	new_title		3959731	0					
ANR	3959808	Identifier	new_title		3959731	0					
ANR	3959809	ReturnType	static void		3959731	1					
ANR	3959810	Identifier	agraph_update_title		3959731	2					
ANR	3959811	ParameterList	"RCore * core , RAGraph * g , RAnalFunction * fcn"		3959731	3					
ANR	3959812	Parameter	RCore * core	3330:32:83606:83616	3959731	0	True				
ANR	3959813	ParameterType	RCore *		3959731	0					
ANR	3959814	Identifier	core		3959731	1					
ANR	3959815	Parameter	RAGraph * g	3330:45:83619:83628	3959731	1	True				
ANR	3959816	ParameterType	RAGraph *		3959731	0					
ANR	3959817	Identifier	g		3959731	1					
ANR	3959818	Parameter	RAnalFunction * fcn	3330:57:83631:83648	3959731	2	True				
ANR	3959819	ParameterType	RAnalFunction *		3959731	0					
ANR	3959820	Identifier	fcn		3959731	1					
ANR	3959821	CFGEntryNode	ENTRY		3959731		True				
ANR	3959822	CFGExitNode	EXIT		3959731		True				
ANR	3959823	Symbol	fcn		3959731						
ANR	3959824	Symbol	sig		3959731						
ANR	3959825	Symbol	core		3959731						
ANR	3959826	Symbol	a		3959731						
ANR	3959827	Symbol	* g		3959731						
ANR	3959828	Symbol	get_anode		3959731						
ANR	3959829	Symbol	r_core_cmd_str		3959731						
ANR	3959830	Symbol	g		3959731						
ANR	3959831	Symbol	g -> curnode		3959731						
ANR	3959832	Symbol	new_title		3959731						
ANR	3959833	Function	check_changes	3343:0:84009:85864							
ANR	3959834	FunctionDef	"check_changes (RAGraph * g , int is_interactive , RCore * core , RAnalFunction * fcn)"		3959833	0					
ANR	3959835	CompoundStatement		3343:90:84099:85864	3959833	0					
ANR	3959836	IdentifierDeclStatement	"int oldpos [ 2 ] = { 0 , 0 } ;"	3344:1:84102:84129	3959833	0	True				
ANR	3959837	IdentifierDecl	"oldpos [ 2 ] = { 0 , 0 }"		3959833	0					
ANR	3959838	IdentifierDeclType	int [ 2 ]		3959833	0					
ANR	3959839	Identifier	oldpos		3959833	1					
ANR	3959840	PrimaryExpression	2		3959833	2					
ANR	3959841	AssignmentExpression	"oldpos [ 2 ] = { 0 , 0 }"		3959833	3		=			
ANR	3959842	Identifier	oldpos		3959833	0					
ANR	3959843	InitializerList	0		3959833	1					
ANR	3959844	PrimaryExpression	0		3959833	0					
ANR	3959845	PrimaryExpression	0		3959833	1					
ANR	3959846	IfStatement	if ( g -> need_reload_nodes && core )		3959833	1					
ANR	3959847	Condition	g -> need_reload_nodes && core	3347:5:84136:84163	3959833	0	True				
ANR	3959848	AndExpression	g -> need_reload_nodes && core		3959833	0		&&			
ANR	3959849	PtrMemberAccess	g -> need_reload_nodes		3959833	0					
ANR	3959850	Identifier	g		3959833	0					
ANR	3959851	Identifier	need_reload_nodes		3959833	1					
ANR	3959852	Identifier	core		3959833	1					
ANR	3959853	CompoundStatement		5:35:66:66	3959833	1					
ANR	3959854	IfStatement	if ( ! g -> update_seek_on && ! g -> force_update_seek )		3959833	0					
ANR	3959855	Condition	! g -> update_seek_on && ! g -> force_update_seek	3348:6:84174:84216	3959833	0	True				
ANR	3959856	AndExpression	! g -> update_seek_on && ! g -> force_update_seek		3959833	0		&&			
ANR	3959857	UnaryOperationExpression	! g -> update_seek_on		3959833	0					
ANR	3959858	UnaryOperator	!		3959833	0					
ANR	3959859	PtrMemberAccess	g -> update_seek_on		3959833	1					
ANR	3959860	Identifier	g		3959833	0					
ANR	3959861	Identifier	update_seek_on		3959833	1					
ANR	3959862	UnaryOperationExpression	! g -> force_update_seek		3959833	1					
ANR	3959863	UnaryOperator	!		3959833	0					
ANR	3959864	PtrMemberAccess	g -> force_update_seek		3959833	1					
ANR	3959865	Identifier	g		3959833	0					
ANR	3959866	Identifier	force_update_seek		3959833	1					
ANR	3959867	CompoundStatement		6:51:119:119	3959833	1					
ANR	3959868	ExpressionStatement	oldpos [ 0 ] = g -> can -> sx	3350:3:84247:84269	3959833	0	True				
ANR	3959869	AssignmentExpression	oldpos [ 0 ] = g -> can -> sx		3959833	0		=			
ANR	3959870	ArrayIndexing	oldpos [ 0 ]		3959833	0					
ANR	3959871	Identifier	oldpos		3959833	0					
ANR	3959872	PrimaryExpression	0		3959833	1					
ANR	3959873	PtrMemberAccess	g -> can -> sx		3959833	1					
ANR	3959874	PtrMemberAccess	g -> can		3959833	0					
ANR	3959875	Identifier	g		3959833	0					
ANR	3959876	Identifier	can		3959833	1					
ANR	3959877	Identifier	sx		3959833	1					
ANR	3959878	ExpressionStatement	oldpos [ 1 ] = g -> can -> sy	3351:3:84274:84296	3959833	1	True				
ANR	3959879	AssignmentExpression	oldpos [ 1 ] = g -> can -> sy		3959833	0		=			
ANR	3959880	ArrayIndexing	oldpos [ 1 ]		3959833	0					
ANR	3959881	Identifier	oldpos		3959833	0					
ANR	3959882	PrimaryExpression	1		3959833	1					
ANR	3959883	PtrMemberAccess	g -> can -> sy		3959833	1					
ANR	3959884	PtrMemberAccess	g -> can		3959833	0					
ANR	3959885	Identifier	g		3959833	0					
ANR	3959886	Identifier	can		3959833	1					
ANR	3959887	Identifier	sy		3959833	1					
ANR	3959888	IfStatement	"if ( ! agraph_reload_nodes ( g , core , fcn ) )"		3959833	1					
ANR	3959889	Condition	"! agraph_reload_nodes ( g , core , fcn )"	3353:6:84308:84342	3959833	0	True				
ANR	3959890	UnaryOperationExpression	"! agraph_reload_nodes ( g , core , fcn )"		3959833	0					
ANR	3959891	UnaryOperator	!		3959833	0					
ANR	3959892	CallExpression	"agraph_reload_nodes ( g , core , fcn )"		3959833	1					
ANR	3959893	Callee	agraph_reload_nodes		3959833	0					
ANR	3959894	Identifier	agraph_reload_nodes		3959833	0					
ANR	3959895	ArgumentList	g		3959833	1					
ANR	3959896	Argument	g		3959833	0					
ANR	3959897	Identifier	g		3959833	0					
ANR	3959898	Argument	core		3959833	1					
ANR	3959899	Identifier	core		3959833	0					
ANR	3959900	Argument	fcn		3959833	2					
ANR	3959901	Identifier	fcn		3959833	0					
ANR	3959902	CompoundStatement		11:43:245:245	3959833	1					
ANR	3959903	ReturnStatement	return false ;	3354:3:84350:84362	3959833	0	True				
ANR	3959904	Identifier	false		3959833	0					
ANR	3959905	IfStatement	if ( fcn )		3959833	2					
ANR	3959906	Condition	fcn	3357:5:84376:84378	3959833	0	True				
ANR	3959907	Identifier	fcn		3959833	0					
ANR	3959908	CompoundStatement		15:10:281:281	3959833	1					
ANR	3959909	ExpressionStatement	"agraph_update_title ( core , g , fcn )"	3358:2:84385:84419	3959833	0	True				
ANR	3959910	CallExpression	"agraph_update_title ( core , g , fcn )"		3959833	0					
ANR	3959911	Callee	agraph_update_title		3959833	0					
ANR	3959912	Identifier	agraph_update_title		3959833	0					
ANR	3959913	ArgumentList	core		3959833	1					
ANR	3959914	Argument	core		3959833	0					
ANR	3959915	Identifier	core		3959833	0					
ANR	3959916	Argument	g		3959833	1					
ANR	3959917	Identifier	g		3959833	0					
ANR	3959918	Argument	fcn		3959833	2					
ANR	3959919	Identifier	fcn		3959833	0					
ANR	3959920	IfStatement	if ( core && core -> config )		3959833	3					
ANR	3959921	Condition	core && core -> config	3360:5:84429:84448	3959833	0	True				
ANR	3959922	AndExpression	core && core -> config		3959833	0		&&			
ANR	3959923	Identifier	core		3959833	0					
ANR	3959924	PtrMemberAccess	core -> config		3959833	1					
ANR	3959925	Identifier	core		3959833	0					
ANR	3959926	Identifier	config		3959833	1					
ANR	3959927	CompoundStatement		18:27:351:351	3959833	1					
ANR	3959928	IfStatement	"if ( r_config_get_i ( core -> config , ""graph.trace"" ) )"		3959833	0					
ANR	3959929	Condition	"r_config_get_i ( core -> config , ""graph.trace"" )"	3361:6:84459:84502	3959833	0	True				
ANR	3959930	CallExpression	"r_config_get_i ( core -> config , ""graph.trace"" )"		3959833	0					
ANR	3959931	Callee	r_config_get_i		3959833	0					
ANR	3959932	Identifier	r_config_get_i		3959833	0					
ANR	3959933	ArgumentList	core -> config		3959833	1					
ANR	3959934	Argument	core -> config		3959833	0					
ANR	3959935	PtrMemberAccess	core -> config		3959833	0					
ANR	3959936	Identifier	core		3959833	0					
ANR	3959937	Identifier	config		3959833	1					
ANR	3959938	Argument	"""graph.trace"""		3959833	1					
ANR	3959939	PrimaryExpression	"""graph.trace"""		3959833	0					
ANR	3959940	CompoundStatement		19:52:405:405	3959833	1					
ANR	3959941	ExpressionStatement	"fold_asm_trace ( core , g )"	3363:3:84540:84564	3959833	0	True				
ANR	3959942	CallExpression	"fold_asm_trace ( core , g )"		3959833	0					
ANR	3959943	Callee	fold_asm_trace		3959833	0					
ANR	3959944	Identifier	fold_asm_trace		3959833	0					
ANR	3959945	ArgumentList	core		3959833	1					
ANR	3959946	Argument	core		3959833	0					
ANR	3959947	Identifier	core		3959833	0					
ANR	3959948	Argument	g		3959833	1					
ANR	3959949	Identifier	g		3959833	0					
ANR	3959950	IfStatement	if ( g -> need_update_dim || g -> need_reload_nodes || ! is_interactive )		3959833	4					
ANR	3959951	Condition	g -> need_update_dim || g -> need_reload_nodes || ! is_interactive	3366:5:84578:84638	3959833	0	True				
ANR	3959952	OrExpression	g -> need_update_dim || g -> need_reload_nodes || ! is_interactive		3959833	0		||			
ANR	3959953	PtrMemberAccess	g -> need_update_dim		3959833	0					
ANR	3959954	Identifier	g		3959833	0					
ANR	3959955	Identifier	need_update_dim		3959833	1					
ANR	3959956	OrExpression	g -> need_reload_nodes || ! is_interactive		3959833	1		||			
ANR	3959957	PtrMemberAccess	g -> need_reload_nodes		3959833	0					
ANR	3959958	Identifier	g		3959833	0					
ANR	3959959	Identifier	need_reload_nodes		3959833	1					
ANR	3959960	UnaryOperationExpression	! is_interactive		3959833	1					
ANR	3959961	UnaryOperator	!		3959833	0					
ANR	3959962	Identifier	is_interactive		3959833	1					
ANR	3959963	CompoundStatement		24:68:541:541	3959833	1					
ANR	3959964	ExpressionStatement	"update_node_dimension ( g -> graph , is_mini ( g ) , g -> zoom , g -> edgemode , g -> is_callgraph , g -> layout )"	3367:2:84645:84740	3959833	0	True				
ANR	3959965	CallExpression	"update_node_dimension ( g -> graph , is_mini ( g ) , g -> zoom , g -> edgemode , g -> is_callgraph , g -> layout )"		3959833	0					
ANR	3959966	Callee	update_node_dimension		3959833	0					
ANR	3959967	Identifier	update_node_dimension		3959833	0					
ANR	3959968	ArgumentList	g -> graph		3959833	1					
ANR	3959969	Argument	g -> graph		3959833	0					
ANR	3959970	PtrMemberAccess	g -> graph		3959833	0					
ANR	3959971	Identifier	g		3959833	0					
ANR	3959972	Identifier	graph		3959833	1					
ANR	3959973	Argument	is_mini ( g )		3959833	1					
ANR	3959974	CallExpression	is_mini ( g )		3959833	0					
ANR	3959975	Callee	is_mini		3959833	0					
ANR	3959976	Identifier	is_mini		3959833	0					
ANR	3959977	ArgumentList	g		3959833	1					
ANR	3959978	Argument	g		3959833	0					
ANR	3959979	Identifier	g		3959833	0					
ANR	3959980	Argument	g -> zoom		3959833	2					
ANR	3959981	PtrMemberAccess	g -> zoom		3959833	0					
ANR	3959982	Identifier	g		3959833	0					
ANR	3959983	Identifier	zoom		3959833	1					
ANR	3959984	Argument	g -> edgemode		3959833	3					
ANR	3959985	PtrMemberAccess	g -> edgemode		3959833	0					
ANR	3959986	Identifier	g		3959833	0					
ANR	3959987	Identifier	edgemode		3959833	1					
ANR	3959988	Argument	g -> is_callgraph		3959833	4					
ANR	3959989	PtrMemberAccess	g -> is_callgraph		3959833	0					
ANR	3959990	Identifier	g		3959833	0					
ANR	3959991	Identifier	is_callgraph		3959833	1					
ANR	3959992	Argument	g -> layout		3959833	5					
ANR	3959993	PtrMemberAccess	g -> layout		3959833	0					
ANR	3959994	Identifier	g		3959833	0					
ANR	3959995	Identifier	layout		3959833	1					
ANR	3959996	IfStatement	if ( g -> need_set_layout || g -> need_reload_nodes || ! is_interactive )		3959833	5					
ANR	3959997	Condition	g -> need_set_layout || g -> need_reload_nodes || ! is_interactive	3369:5:84750:84810	3959833	0	True				
ANR	3959998	OrExpression	g -> need_set_layout || g -> need_reload_nodes || ! is_interactive		3959833	0		||			
ANR	3959999	PtrMemberAccess	g -> need_set_layout		3959833	0					
ANR	3960000	Identifier	g		3959833	0					
ANR	3960001	Identifier	need_set_layout		3959833	1					
ANR	3960002	OrExpression	g -> need_reload_nodes || ! is_interactive		3959833	1		||			
ANR	3960003	PtrMemberAccess	g -> need_reload_nodes		3959833	0					
ANR	3960004	Identifier	g		3959833	0					
ANR	3960005	Identifier	need_reload_nodes		3959833	1					
ANR	3960006	UnaryOperationExpression	! is_interactive		3959833	1					
ANR	3960007	UnaryOperator	!		3959833	0					
ANR	3960008	Identifier	is_interactive		3959833	1					
ANR	3960009	CompoundStatement		27:68:713:713	3959833	1					
ANR	3960010	ExpressionStatement	agraph_set_layout ( g )	3370:2:84817:84838	3959833	0	True				
ANR	3960011	CallExpression	agraph_set_layout ( g )		3959833	0					
ANR	3960012	Callee	agraph_set_layout		3959833	0					
ANR	3960013	Identifier	agraph_set_layout		3959833	0					
ANR	3960014	ArgumentList	g		3959833	1					
ANR	3960015	Argument	g		3959833	0					
ANR	3960016	Identifier	g		3959833	0					
ANR	3960017	IfStatement	if ( core )		3959833	6					
ANR	3960018	Condition	core	3372:5:84848:84851	3959833	0	True				
ANR	3960019	Identifier	core		3959833	0					
ANR	3960020	CompoundStatement		33:2:849:891	3959833	1					
ANR	3960021	IdentifierDeclStatement	"ut64 off = r_core_anal_get_bbaddr ( core , core -> offset ) ;"	3373:2:84858:84912	3959833	0	True				
ANR	3960022	IdentifierDecl	"off = r_core_anal_get_bbaddr ( core , core -> offset )"		3959833	0					
ANR	3960023	IdentifierDeclType	ut64		3959833	0					
ANR	3960024	Identifier	off		3959833	1					
ANR	3960025	AssignmentExpression	"off = r_core_anal_get_bbaddr ( core , core -> offset )"		3959833	2		=			
ANR	3960026	Identifier	off		3959833	0					
ANR	3960027	CallExpression	"r_core_anal_get_bbaddr ( core , core -> offset )"		3959833	1					
ANR	3960028	Callee	r_core_anal_get_bbaddr		3959833	0					
ANR	3960029	Identifier	r_core_anal_get_bbaddr		3959833	0					
ANR	3960030	ArgumentList	core		3959833	1					
ANR	3960031	Argument	core		3959833	0					
ANR	3960032	Identifier	core		3959833	0					
ANR	3960033	Argument	core -> offset		3959833	1					
ANR	3960034	PtrMemberAccess	core -> offset		3959833	0					
ANR	3960035	Identifier	core		3959833	0					
ANR	3960036	Identifier	offset		3959833	1					
ANR	3960037	IdentifierDeclStatement	char * title = get_title ( off ) ;	3374:2:84916:84945	3959833	1	True				
ANR	3960038	IdentifierDecl	* title = get_title ( off )		3959833	0					
ANR	3960039	IdentifierDeclType	char *		3959833	0					
ANR	3960040	Identifier	title		3959833	1					
ANR	3960041	AssignmentExpression	* title = get_title ( off )		3959833	2		=			
ANR	3960042	Identifier	title		3959833	0					
ANR	3960043	CallExpression	get_title ( off )		3959833	1					
ANR	3960044	Callee	get_title		3959833	0					
ANR	3960045	Identifier	get_title		3959833	0					
ANR	3960046	ArgumentList	off		3959833	1					
ANR	3960047	Argument	off		3959833	0					
ANR	3960048	Identifier	off		3959833	0					
ANR	3960049	IdentifierDeclStatement	RANode * cur_anode = get_anode ( g -> curnode ) ;	3375:2:84949:84991	3959833	2	True				
ANR	3960050	IdentifierDecl	* cur_anode = get_anode ( g -> curnode )		3959833	0					
ANR	3960051	IdentifierDeclType	RANode *		3959833	0					
ANR	3960052	Identifier	cur_anode		3959833	1					
ANR	3960053	AssignmentExpression	* cur_anode = get_anode ( g -> curnode )		3959833	2		=			
ANR	3960054	Identifier	cur_anode		3959833	0					
ANR	3960055	CallExpression	get_anode ( g -> curnode )		3959833	1					
ANR	3960056	Callee	get_anode		3959833	0					
ANR	3960057	Identifier	get_anode		3959833	0					
ANR	3960058	ArgumentList	g -> curnode		3959833	1					
ANR	3960059	Argument	g -> curnode		3959833	0					
ANR	3960060	PtrMemberAccess	g -> curnode		3959833	0					
ANR	3960061	Identifier	g		3959833	0					
ANR	3960062	Identifier	curnode		3959833	1					
ANR	3960063	IfStatement	"if ( fcn && ( ( is_interactive && ! cur_anode ) || ( cur_anode && strcmp ( cur_anode -> title , title ) ) ) )"		3959833	3					
ANR	3960064	Condition	"fcn && ( ( is_interactive && ! cur_anode ) || ( cur_anode && strcmp ( cur_anode -> title , title ) ) )"	3376:6:84999:85088	3959833	0	True				
ANR	3960065	AndExpression	"fcn && ( ( is_interactive && ! cur_anode ) || ( cur_anode && strcmp ( cur_anode -> title , title ) ) )"		3959833	0		&&			
ANR	3960066	Identifier	fcn		3959833	0					
ANR	3960067	OrExpression	"( is_interactive && ! cur_anode ) || ( cur_anode && strcmp ( cur_anode -> title , title ) )"		3959833	1		||			
ANR	3960068	AndExpression	is_interactive && ! cur_anode		3959833	0		&&			
ANR	3960069	Identifier	is_interactive		3959833	0					
ANR	3960070	UnaryOperationExpression	! cur_anode		3959833	1					
ANR	3960071	UnaryOperator	!		3959833	0					
ANR	3960072	Identifier	cur_anode		3959833	1					
ANR	3960073	AndExpression	"cur_anode && strcmp ( cur_anode -> title , title )"		3959833	1		&&			
ANR	3960074	Identifier	cur_anode		3959833	0					
ANR	3960075	CallExpression	"strcmp ( cur_anode -> title , title )"		3959833	1					
ANR	3960076	Callee	strcmp		3959833	0					
ANR	3960077	Identifier	strcmp		3959833	0					
ANR	3960078	ArgumentList	cur_anode -> title		3959833	1					
ANR	3960079	Argument	cur_anode -> title		3959833	0					
ANR	3960080	PtrMemberAccess	cur_anode -> title		3959833	0					
ANR	3960081	Identifier	cur_anode		3959833	0					
ANR	3960082	Identifier	title		3959833	1					
ANR	3960083	Argument	title		3959833	1					
ANR	3960084	Identifier	title		3959833	0					
ANR	3960085	CompoundStatement		34:98:991:991	3959833	1					
ANR	3960086	ExpressionStatement	"g -> update_seek_on = r_agraph_get_node ( g , title )"	3377:3:85096:85144	3959833	0	True				
ANR	3960087	AssignmentExpression	"g -> update_seek_on = r_agraph_get_node ( g , title )"		3959833	0		=			
ANR	3960088	PtrMemberAccess	g -> update_seek_on		3959833	0					
ANR	3960089	Identifier	g		3959833	0					
ANR	3960090	Identifier	update_seek_on		3959833	1					
ANR	3960091	CallExpression	"r_agraph_get_node ( g , title )"		3959833	1					
ANR	3960092	Callee	r_agraph_get_node		3959833	0					
ANR	3960093	Identifier	r_agraph_get_node		3959833	0					
ANR	3960094	ArgumentList	g		3959833	1					
ANR	3960095	Argument	g		3959833	0					
ANR	3960096	Identifier	g		3959833	0					
ANR	3960097	Argument	title		3959833	1					
ANR	3960098	Identifier	title		3959833	0					
ANR	3960099	IfStatement	if ( g -> update_seek_on )		3959833	1					
ANR	3960100	Condition	g -> update_seek_on	3378:7:85153:85169	3959833	0	True				
ANR	3960101	PtrMemberAccess	g -> update_seek_on		3959833	0					
ANR	3960102	Identifier	g		3959833	0					
ANR	3960103	Identifier	update_seek_on		3959833	1					
ANR	3960104	CompoundStatement		36:26:1072:1072	3959833	1					
ANR	3960105	ExpressionStatement	"r_agraph_set_curnode ( g , g -> update_seek_on )"	3379:4:85178:85221	3959833	0	True				
ANR	3960106	CallExpression	"r_agraph_set_curnode ( g , g -> update_seek_on )"		3959833	0					
ANR	3960107	Callee	r_agraph_set_curnode		3959833	0					
ANR	3960108	Identifier	r_agraph_set_curnode		3959833	0					
ANR	3960109	ArgumentList	g		3959833	1					
ANR	3960110	Argument	g		3959833	0					
ANR	3960111	Identifier	g		3959833	0					
ANR	3960112	Argument	g -> update_seek_on		3959833	1					
ANR	3960113	PtrMemberAccess	g -> update_seek_on		3959833	0					
ANR	3960114	Identifier	g		3959833	0					
ANR	3960115	Identifier	update_seek_on		3959833	1					
ANR	3960116	ExpressionStatement	g -> force_update_seek = true	3380:4:85227:85254	3959833	1	True				
ANR	3960117	AssignmentExpression	g -> force_update_seek = true		3959833	0		=			
ANR	3960118	PtrMemberAccess	g -> force_update_seek		3959833	0					
ANR	3960119	Identifier	g		3959833	0					
ANR	3960120	Identifier	force_update_seek		3959833	1					
ANR	3960121	Identifier	true		3959833	1					
ANR	3960122	ExpressionStatement	free ( title )	3383:2:85267:85279	3959833	4	True				
ANR	3960123	CallExpression	free ( title )		3959833	0					
ANR	3960124	Callee	free		3959833	0					
ANR	3960125	Identifier	free		3959833	0					
ANR	3960126	ArgumentList	title		3959833	1					
ANR	3960127	Argument	title		3959833	0					
ANR	3960128	Identifier	title		3959833	0					
ANR	3960129	ExpressionStatement	"g -> can -> color = r_config_get_i ( core -> config , ""scr.color"" )"	3384:2:85283:85341	3959833	5	True				
ANR	3960130	AssignmentExpression	"g -> can -> color = r_config_get_i ( core -> config , ""scr.color"" )"		3959833	0		=			
ANR	3960131	PtrMemberAccess	g -> can -> color		3959833	0					
ANR	3960132	PtrMemberAccess	g -> can		3959833	0					
ANR	3960133	Identifier	g		3959833	0					
ANR	3960134	Identifier	can		3959833	1					
ANR	3960135	Identifier	color		3959833	1					
ANR	3960136	CallExpression	"r_config_get_i ( core -> config , ""scr.color"" )"		3959833	1					
ANR	3960137	Callee	r_config_get_i		3959833	0					
ANR	3960138	Identifier	r_config_get_i		3959833	0					
ANR	3960139	ArgumentList	core -> config		3959833	1					
ANR	3960140	Argument	core -> config		3959833	0					
ANR	3960141	PtrMemberAccess	core -> config		3959833	0					
ANR	3960142	Identifier	core		3959833	0					
ANR	3960143	Identifier	config		3959833	1					
ANR	3960144	Argument	"""scr.color"""		3959833	1					
ANR	3960145	PrimaryExpression	"""scr.color"""		3959833	0					
ANR	3960146	ExpressionStatement	"g -> hints = r_config_get_i ( core -> config , ""graph.hints"" )"	3385:2:85345:85400	3959833	6	True				
ANR	3960147	AssignmentExpression	"g -> hints = r_config_get_i ( core -> config , ""graph.hints"" )"		3959833	0		=			
ANR	3960148	PtrMemberAccess	g -> hints		3959833	0					
ANR	3960149	Identifier	g		3959833	0					
ANR	3960150	Identifier	hints		3959833	1					
ANR	3960151	CallExpression	"r_config_get_i ( core -> config , ""graph.hints"" )"		3959833	1					
ANR	3960152	Callee	r_config_get_i		3959833	0					
ANR	3960153	Identifier	r_config_get_i		3959833	0					
ANR	3960154	ArgumentList	core -> config		3959833	1					
ANR	3960155	Argument	core -> config		3959833	0					
ANR	3960156	PtrMemberAccess	core -> config		3959833	0					
ANR	3960157	Identifier	core		3959833	0					
ANR	3960158	Identifier	config		3959833	1					
ANR	3960159	Argument	"""graph.hints"""		3959833	1					
ANR	3960160	PrimaryExpression	"""graph.hints"""		3959833	0					
ANR	3960161	IfStatement	if ( g -> update_seek_on || g -> force_update_seek )		3959833	7					
ANR	3960162	Condition	g -> update_seek_on || g -> force_update_seek	3387:5:85410:85450	3959833	0	True				
ANR	3960163	OrExpression	g -> update_seek_on || g -> force_update_seek		3959833	0		||			
ANR	3960164	PtrMemberAccess	g -> update_seek_on		3959833	0					
ANR	3960165	Identifier	g		3959833	0					
ANR	3960166	Identifier	update_seek_on		3959833	1					
ANR	3960167	PtrMemberAccess	g -> force_update_seek		3959833	1					
ANR	3960168	Identifier	g		3959833	0					
ANR	3960169	Identifier	force_update_seek		3959833	1					
ANR	3960170	CompoundStatement		46:2:1357:1386	3959833	1					
ANR	3960171	IdentifierDeclStatement	RANode * n = g -> update_seek_on ;	3388:2:85457:85486	3959833	0	True				
ANR	3960172	IdentifierDecl	* n = g -> update_seek_on		3959833	0					
ANR	3960173	IdentifierDeclType	RANode *		3959833	0					
ANR	3960174	Identifier	n		3959833	1					
ANR	3960175	AssignmentExpression	* n = g -> update_seek_on		3959833	2		=			
ANR	3960176	Identifier	n		3959833	0					
ANR	3960177	PtrMemberAccess	g -> update_seek_on		3959833	1					
ANR	3960178	Identifier	g		3959833	0					
ANR	3960179	Identifier	update_seek_on		3959833	1					
ANR	3960180	IfStatement	if ( ! n && g -> curnode )		3959833	1					
ANR	3960181	Condition	! n && g -> curnode	3389:6:85494:85509	3959833	0	True				
ANR	3960182	AndExpression	! n && g -> curnode		3959833	0		&&			
ANR	3960183	UnaryOperationExpression	! n		3959833	0					
ANR	3960184	UnaryOperator	!		3959833	0					
ANR	3960185	Identifier	n		3959833	1					
ANR	3960186	PtrMemberAccess	g -> curnode		3959833	1					
ANR	3960187	Identifier	g		3959833	0					
ANR	3960188	Identifier	curnode		3959833	1					
ANR	3960189	CompoundStatement		47:24:1412:1412	3959833	1					
ANR	3960190	ExpressionStatement	n = get_anode ( g -> curnode )	3390:3:85517:85543	3959833	0	True				
ANR	3960191	AssignmentExpression	n = get_anode ( g -> curnode )		3959833	0		=			
ANR	3960192	Identifier	n		3959833	0					
ANR	3960193	CallExpression	get_anode ( g -> curnode )		3959833	1					
ANR	3960194	Callee	get_anode		3959833	0					
ANR	3960195	Identifier	get_anode		3959833	0					
ANR	3960196	ArgumentList	g -> curnode		3959833	1					
ANR	3960197	Argument	g -> curnode		3959833	0					
ANR	3960198	PtrMemberAccess	g -> curnode		3959833	0					
ANR	3960199	Identifier	g		3959833	0					
ANR	3960200	Identifier	curnode		3959833	1					
ANR	3960201	IfStatement	if ( n )		3959833	2					
ANR	3960202	Condition	n	3392:6:85555:85555	3959833	0	True				
ANR	3960203	Identifier	n		3959833	0					
ANR	3960204	CompoundStatement		50:9:1458:1458	3959833	1					
ANR	3960205	ExpressionStatement	"update_seek ( g -> can , n , g -> force_update_seek )"	3393:3:85563:85608	3959833	0	True				
ANR	3960206	CallExpression	"update_seek ( g -> can , n , g -> force_update_seek )"		3959833	0					
ANR	3960207	Callee	update_seek		3959833	0					
ANR	3960208	Identifier	update_seek		3959833	0					
ANR	3960209	ArgumentList	g -> can		3959833	1					
ANR	3960210	Argument	g -> can		3959833	0					
ANR	3960211	PtrMemberAccess	g -> can		3959833	0					
ANR	3960212	Identifier	g		3959833	0					
ANR	3960213	Identifier	can		3959833	1					
ANR	3960214	Argument	n		3959833	1					
ANR	3960215	Identifier	n		3959833	0					
ANR	3960216	Argument	g -> force_update_seek		3959833	2					
ANR	3960217	PtrMemberAccess	g -> force_update_seek		3959833	0					
ANR	3960218	Identifier	g		3959833	0					
ANR	3960219	Identifier	force_update_seek		3959833	1					
ANR	3960220	IfStatement	if ( oldpos [ 0 ] || oldpos [ 1 ] )		3959833	8					
ANR	3960221	Condition	oldpos [ 0 ] || oldpos [ 1 ]	3396:5:85622:85643	3959833	0	True				
ANR	3960222	OrExpression	oldpos [ 0 ] || oldpos [ 1 ]		3959833	0		||			
ANR	3960223	ArrayIndexing	oldpos [ 0 ]		3959833	0					
ANR	3960224	Identifier	oldpos		3959833	0					
ANR	3960225	PrimaryExpression	0		3959833	1					
ANR	3960226	ArrayIndexing	oldpos [ 1 ]		3959833	1					
ANR	3960227	Identifier	oldpos		3959833	0					
ANR	3960228	PrimaryExpression	1		3959833	1					
ANR	3960229	CompoundStatement		54:29:1546:1546	3959833	1					
ANR	3960230	ExpressionStatement	g -> can -> sx = oldpos [ 0 ]	3397:2:85650:85672	3959833	0	True				
ANR	3960231	AssignmentExpression	g -> can -> sx = oldpos [ 0 ]		3959833	0		=			
ANR	3960232	PtrMemberAccess	g -> can -> sx		3959833	0					
ANR	3960233	PtrMemberAccess	g -> can		3959833	0					
ANR	3960234	Identifier	g		3959833	0					
ANR	3960235	Identifier	can		3959833	1					
ANR	3960236	Identifier	sx		3959833	1					
ANR	3960237	ArrayIndexing	oldpos [ 0 ]		3959833	1					
ANR	3960238	Identifier	oldpos		3959833	0					
ANR	3960239	PrimaryExpression	0		3959833	1					
ANR	3960240	ExpressionStatement	g -> can -> sy = oldpos [ 1 ]	3398:2:85676:85698	3959833	1	True				
ANR	3960241	AssignmentExpression	g -> can -> sy = oldpos [ 1 ]		3959833	0		=			
ANR	3960242	PtrMemberAccess	g -> can -> sy		3959833	0					
ANR	3960243	PtrMemberAccess	g -> can		3959833	0					
ANR	3960244	Identifier	g		3959833	0					
ANR	3960245	Identifier	can		3959833	1					
ANR	3960246	Identifier	sy		3959833	1					
ANR	3960247	ArrayIndexing	oldpos [ 1 ]		3959833	1					
ANR	3960248	Identifier	oldpos		3959833	0					
ANR	3960249	PrimaryExpression	1		3959833	1					
ANR	3960250	ExpressionStatement	g -> need_reload_nodes = false	3400:1:85704:85732	3959833	9	True				
ANR	3960251	AssignmentExpression	g -> need_reload_nodes = false		3959833	0		=			
ANR	3960252	PtrMemberAccess	g -> need_reload_nodes		3959833	0					
ANR	3960253	Identifier	g		3959833	0					
ANR	3960254	Identifier	need_reload_nodes		3959833	1					
ANR	3960255	Identifier	false		3959833	1					
ANR	3960256	ExpressionStatement	g -> need_update_dim = false	3401:1:85735:85761	3959833	10	True				
ANR	3960257	AssignmentExpression	g -> need_update_dim = false		3959833	0		=			
ANR	3960258	PtrMemberAccess	g -> need_update_dim		3959833	0					
ANR	3960259	Identifier	g		3959833	0					
ANR	3960260	Identifier	need_update_dim		3959833	1					
ANR	3960261	Identifier	false		3959833	1					
ANR	3960262	ExpressionStatement	g -> need_set_layout = false	3402:1:85764:85790	3959833	11	True				
ANR	3960263	AssignmentExpression	g -> need_set_layout = false		3959833	0		=			
ANR	3960264	PtrMemberAccess	g -> need_set_layout		3959833	0					
ANR	3960265	Identifier	g		3959833	0					
ANR	3960266	Identifier	need_set_layout		3959833	1					
ANR	3960267	Identifier	false		3959833	1					
ANR	3960268	ExpressionStatement	g -> update_seek_on = NULL	3403:1:85793:85817	3959833	12	True				
ANR	3960269	AssignmentExpression	g -> update_seek_on = NULL		3959833	0		=			
ANR	3960270	PtrMemberAccess	g -> update_seek_on		3959833	0					
ANR	3960271	Identifier	g		3959833	0					
ANR	3960272	Identifier	update_seek_on		3959833	1					
ANR	3960273	Identifier	NULL		3959833	1					
ANR	3960274	ExpressionStatement	g -> force_update_seek = false	3404:1:85820:85848	3959833	13	True				
ANR	3960275	AssignmentExpression	g -> force_update_seek = false		3959833	0		=			
ANR	3960276	PtrMemberAccess	g -> force_update_seek		3959833	0					
ANR	3960277	Identifier	g		3959833	0					
ANR	3960278	Identifier	force_update_seek		3959833	1					
ANR	3960279	Identifier	false		3959833	1					
ANR	3960280	ReturnStatement	return true ;	3405:1:85851:85862	3959833	14	True				
ANR	3960281	Identifier	true		3959833	0					
ANR	3960282	ReturnType	static int		3959833	1					
ANR	3960283	Identifier	check_changes		3959833	2					
ANR	3960284	ParameterList	"RAGraph * g , int is_interactive , RCore * core , RAnalFunction * fcn"		3959833	3					
ANR	3960285	Parameter	RAGraph * g	3343:25:84034:84043	3959833	0	True				
ANR	3960286	ParameterType	RAGraph *		3959833	0					
ANR	3960287	Identifier	g		3959833	1					
ANR	3960288	Parameter	int is_interactive	3343:37:84046:84063	3959833	1	True				
ANR	3960289	ParameterType	int		3959833	0					
ANR	3960290	Identifier	is_interactive		3959833	1					
ANR	3960291	Parameter	RCore * core	3343:57:84066:84076	3959833	2	True				
ANR	3960292	ParameterType	RCore *		3959833	0					
ANR	3960293	Identifier	core		3959833	1					
ANR	3960294	Parameter	RAnalFunction * fcn	3343:70:84079:84096	3959833	3	True				
ANR	3960295	ParameterType	RAnalFunction *		3959833	0					
ANR	3960296	Identifier	fcn		3959833	1					
ANR	3960297	CFGEntryNode	ENTRY		3959833		True				
ANR	3960298	CFGExitNode	EXIT		3959833		True				
ANR	3960299	Symbol	* oldpos		3959833						
ANR	3960300	Symbol	g -> hints		3959833						
ANR	3960301	Symbol	g -> zoom		3959833						
ANR	3960302	Symbol	oldpos		3959833						
ANR	3960303	Symbol	* core		3959833						
ANR	3960304	Symbol	core -> offset		3959833						
ANR	3960305	Symbol	cur_anode -> title		3959833						
ANR	3960306	Symbol	title		3959833						
ANR	3960307	Symbol	get_title		3959833						
ANR	3960308	Symbol	* g -> can		3959833						
ANR	3960309	Symbol	g -> need_update_dim		3959833						
ANR	3960310	Symbol	fcn		3959833						
ANR	3960311	Symbol	r_core_anal_get_bbaddr		3959833						
ANR	3960312	Symbol	g -> can -> color		3959833						
ANR	3960313	Symbol	is_mini		3959833						
ANR	3960314	Symbol	g -> graph		3959833						
ANR	3960315	Symbol	r_agraph_get_node		3959833						
ANR	3960316	Symbol	g -> is_callgraph		3959833						
ANR	3960317	Symbol	g -> can -> sx		3959833						
ANR	3960318	Symbol	g -> can		3959833						
ANR	3960319	Symbol	g -> can -> sy		3959833						
ANR	3960320	Symbol	core -> config		3959833						
ANR	3960321	Symbol	strcmp		3959833						
ANR	3960322	Symbol	g -> need_set_layout		3959833						
ANR	3960323	Symbol	get_anode		3959833						
ANR	3960324	Symbol	NULL		3959833						
ANR	3960325	Symbol	g -> need_reload_nodes		3959833						
ANR	3960326	Symbol	* * g		3959833						
ANR	3960327	Symbol	g -> layout		3959833						
ANR	3960328	Symbol	g		3959833						
ANR	3960329	Symbol	is_interactive		3959833						
ANR	3960330	Symbol	g -> update_seek_on		3959833						
ANR	3960331	Symbol	false		3959833						
ANR	3960332	Symbol	cur_anode		3959833						
ANR	3960333	Symbol	off		3959833						
ANR	3960334	Symbol	n		3959833						
ANR	3960335	Symbol	* cur_anode		3959833						
ANR	3960336	Symbol	core		3959833						
ANR	3960337	Symbol	* g		3959833						
ANR	3960338	Symbol	g -> force_update_seek		3959833						
ANR	3960339	Symbol	g -> edgemode		3959833						
ANR	3960340	Symbol	r_config_get_i		3959833						
ANR	3960341	Symbol	g -> curnode		3959833						
ANR	3960342	Symbol	true		3959833						
ANR	3960343	Symbol	agraph_reload_nodes		3959833						
ANR	3960344	Function	agraph_print	3408:0:85867:88064							
ANR	3960345	FunctionDef	"agraph_print (RAGraph * g , int is_interactive , RCore * core , RAnalFunction * fcn)"		3960344	0					
ANR	3960346	CompoundStatement		3408:89:85956:88064	3960344	0					
ANR	3960347	IdentifierDeclStatement	"int h , w = r_cons_get_size ( & h ) ;"	3409:1:85959:85990	3960344	0	True				
ANR	3960348	IdentifierDecl	h		3960344	0					
ANR	3960349	IdentifierDeclType	int		3960344	0					
ANR	3960350	Identifier	h		3960344	1					
ANR	3960351	IdentifierDecl	w = r_cons_get_size ( & h )		3960344	1					
ANR	3960352	IdentifierDeclType	int		3960344	0					
ANR	3960353	Identifier	w		3960344	1					
ANR	3960354	AssignmentExpression	w = r_cons_get_size ( & h )		3960344	2		=			
ANR	3960355	Identifier	w		3960344	0					
ANR	3960356	CallExpression	r_cons_get_size ( & h )		3960344	1					
ANR	3960357	Callee	r_cons_get_size		3960344	0					
ANR	3960358	Identifier	r_cons_get_size		3960344	0					
ANR	3960359	ArgumentList	& h		3960344	1					
ANR	3960360	Argument	& h		3960344	0					
ANR	3960361	UnaryOperationExpression	& h		3960344	0					
ANR	3960362	UnaryOperator	&		3960344	0					
ANR	3960363	Identifier	h		3960344	1					
ANR	3960364	IdentifierDeclStatement	"int ret = check_changes ( g , is_interactive , core , fcn ) ;"	3410:1:85993:86047	3960344	1	True				
ANR	3960365	IdentifierDecl	"ret = check_changes ( g , is_interactive , core , fcn )"		3960344	0					
ANR	3960366	IdentifierDeclType	int		3960344	0					
ANR	3960367	Identifier	ret		3960344	1					
ANR	3960368	AssignmentExpression	"ret = check_changes ( g , is_interactive , core , fcn )"		3960344	2		=			
ANR	3960369	Identifier	ret		3960344	0					
ANR	3960370	CallExpression	"check_changes ( g , is_interactive , core , fcn )"		3960344	1					
ANR	3960371	Callee	check_changes		3960344	0					
ANR	3960372	Identifier	check_changes		3960344	0					
ANR	3960373	ArgumentList	g		3960344	1					
ANR	3960374	Argument	g		3960344	0					
ANR	3960375	Identifier	g		3960344	0					
ANR	3960376	Argument	is_interactive		3960344	1					
ANR	3960377	Identifier	is_interactive		3960344	0					
ANR	3960378	Argument	core		3960344	2					
ANR	3960379	Identifier	core		3960344	0					
ANR	3960380	Argument	fcn		3960344	3					
ANR	3960381	Identifier	fcn		3960344	0					
ANR	3960382	IfStatement	if ( ! ret )		3960344	2					
ANR	3960383	Condition	! ret	3411:5:86054:86057	3960344	0	True				
ANR	3960384	UnaryOperationExpression	! ret		3960344	0					
ANR	3960385	UnaryOperator	!		3960344	0					
ANR	3960386	Identifier	ret		3960344	1					
ANR	3960387	CompoundStatement		4:11:103:103	3960344	1					
ANR	3960388	ReturnStatement	return false ;	3412:2:86064:86076	3960344	0	True				
ANR	3960389	Identifier	false		3960344	0					
ANR	3960390	IfStatement	if ( is_interactive )		3960344	3					
ANR	3960391	Condition	is_interactive	3415:5:86087:86100	3960344	0	True				
ANR	3960392	Identifier	is_interactive		3960344	0					
ANR	3960393	CompoundStatement		8:21:146:146	3960344	1					
ANR	3960394	ExpressionStatement	r_cons_clear00 ( )	3416:2:86107:86124	3960344	0	True				
ANR	3960395	CallExpression	r_cons_clear00 ( )		3960344	0					
ANR	3960396	Callee	r_cons_clear00		3960344	0					
ANR	3960397	Identifier	r_cons_clear00		3960344	0					
ANR	3960398	ArgumentList			3960344	1					
ANR	3960399	ElseStatement	else		3960344	0					
ANR	3960400	CompoundStatement		10:8:177:177	3960344	0					
ANR	3960401	ExpressionStatement	update_graph_sizes ( g )	3419:2:86215:86237	3960344	0	True				
ANR	3960402	CallExpression	update_graph_sizes ( g )		3960344	0					
ANR	3960403	Callee	update_graph_sizes		3960344	0					
ANR	3960404	Identifier	update_graph_sizes		3960344	0					
ANR	3960405	ArgumentList	g		3960344	1					
ANR	3960406	Argument	g		3960344	0					
ANR	3960407	Identifier	g		3960344	0					
ANR	3960408	ExpressionStatement	h = is_interactive ? h : g -> h + 1	3422:1:86244:86275	3960344	4	True				
ANR	3960409	AssignmentExpression	h = is_interactive ? h : g -> h + 1		3960344	0		=			
ANR	3960410	Identifier	h		3960344	0					
ANR	3960411	ConditionalExpression	is_interactive ? h : g -> h + 1		3960344	1					
ANR	3960412	Condition	is_interactive		3960344	0					
ANR	3960413	Identifier	is_interactive		3960344	0					
ANR	3960414	Identifier	h		3960344	1					
ANR	3960415	AdditiveExpression	g -> h + 1		3960344	2		+			
ANR	3960416	PtrMemberAccess	g -> h		3960344	0					
ANR	3960417	Identifier	g		3960344	0					
ANR	3960418	Identifier	h		3960344	1					
ANR	3960419	PrimaryExpression	1		3960344	1					
ANR	3960420	ExpressionStatement	w = is_interactive ? w : g -> w + 2	3423:1:86278:86309	3960344	5	True				
ANR	3960421	AssignmentExpression	w = is_interactive ? w : g -> w + 2		3960344	0		=			
ANR	3960422	Identifier	w		3960344	0					
ANR	3960423	ConditionalExpression	is_interactive ? w : g -> w + 2		3960344	1					
ANR	3960424	Condition	is_interactive		3960344	0					
ANR	3960425	Identifier	is_interactive		3960344	0					
ANR	3960426	Identifier	w		3960344	1					
ANR	3960427	AdditiveExpression	g -> w + 2		3960344	2		+			
ANR	3960428	PtrMemberAccess	g -> w		3960344	0					
ANR	3960429	Identifier	g		3960344	0					
ANR	3960430	Identifier	w		3960344	1					
ANR	3960431	PrimaryExpression	2		3960344	1					
ANR	3960432	IfStatement	"if ( ! r_cons_canvas_resize ( g -> can , w , h ) )"		3960344	6					
ANR	3960433	Condition	"! r_cons_canvas_resize ( g -> can , w , h )"	3424:5:86316:86351	3960344	0	True				
ANR	3960434	UnaryOperationExpression	"! r_cons_canvas_resize ( g -> can , w , h )"		3960344	0					
ANR	3960435	UnaryOperator	!		3960344	0					
ANR	3960436	CallExpression	"r_cons_canvas_resize ( g -> can , w , h )"		3960344	1					
ANR	3960437	Callee	r_cons_canvas_resize		3960344	0					
ANR	3960438	Identifier	r_cons_canvas_resize		3960344	0					
ANR	3960439	ArgumentList	g -> can		3960344	1					
ANR	3960440	Argument	g -> can		3960344	0					
ANR	3960441	PtrMemberAccess	g -> can		3960344	0					
ANR	3960442	Identifier	g		3960344	0					
ANR	3960443	Identifier	can		3960344	1					
ANR	3960444	Argument	w		3960344	1					
ANR	3960445	Identifier	w		3960344	0					
ANR	3960446	Argument	h		3960344	2					
ANR	3960447	Identifier	h		3960344	0					
ANR	3960448	CompoundStatement		17:43:397:397	3960344	1					
ANR	3960449	ReturnStatement	return false ;	3425:2:86358:86370	3960344	0	True				
ANR	3960450	Identifier	false		3960344	0					
ANR	3960451	IfStatement	if ( ! is_interactive )		3960344	7					
ANR	3960452	Condition	! is_interactive	3428:5:86414:86428	3960344	0	True				
ANR	3960453	UnaryOperationExpression	! is_interactive		3960344	0					
ANR	3960454	UnaryOperator	!		3960344	0					
ANR	3960455	Identifier	is_interactive		3960344	1					
ANR	3960456	CompoundStatement		21:22:474:474	3960344	1					
ANR	3960457	ExpressionStatement	g -> can -> sx = - g -> x	3429:2:86435:86453	3960344	0	True				
ANR	3960458	AssignmentExpression	g -> can -> sx = - g -> x		3960344	0		=			
ANR	3960459	PtrMemberAccess	g -> can -> sx		3960344	0					
ANR	3960460	PtrMemberAccess	g -> can		3960344	0					
ANR	3960461	Identifier	g		3960344	0					
ANR	3960462	Identifier	can		3960344	1					
ANR	3960463	Identifier	sx		3960344	1					
ANR	3960464	UnaryOperationExpression	- g -> x		3960344	1					
ANR	3960465	UnaryOperator	-		3960344	0					
ANR	3960466	PtrMemberAccess	g -> x		3960344	1					
ANR	3960467	Identifier	g		3960344	0					
ANR	3960468	Identifier	x		3960344	1					
ANR	3960469	ExpressionStatement	g -> can -> sy = - g -> y - 1	3430:2:86457:86479	3960344	1	True				
ANR	3960470	AssignmentExpression	g -> can -> sy = - g -> y - 1		3960344	0		=			
ANR	3960471	PtrMemberAccess	g -> can -> sy		3960344	0					
ANR	3960472	PtrMemberAccess	g -> can		3960344	0					
ANR	3960473	Identifier	g		3960344	0					
ANR	3960474	Identifier	can		3960344	1					
ANR	3960475	Identifier	sy		3960344	1					
ANR	3960476	AdditiveExpression	- g -> y - 1		3960344	1		-			
ANR	3960477	UnaryOperationExpression	- g -> y		3960344	0					
ANR	3960478	UnaryOperator	-		3960344	0					
ANR	3960479	PtrMemberAccess	g -> y		3960344	1					
ANR	3960480	Identifier	g		3960344	0					
ANR	3960481	Identifier	y		3960344	1					
ANR	3960482	PrimaryExpression	1		3960344	1					
ANR	3960483	IfStatement	if ( g -> is_dis )		3960344	8					
ANR	3960484	Condition	g -> is_dis	3432:5:86489:86497	3960344	0	True				
ANR	3960485	PtrMemberAccess	g -> is_dis		3960344	0					
ANR	3960486	Identifier	g		3960344	0					
ANR	3960487	Identifier	is_dis		3960344	1					
ANR	3960488	CompoundStatement		33:2:936:978	3960344	1					
ANR	3960489	ExpressionStatement	"( void ) G ( - g -> can -> sx + 1 , - g -> can -> sy + 2 )"	3433:2:86504:86547	3960344	0	True				
ANR	3960490	CastExpression	"( void ) G ( - g -> can -> sx + 1 , - g -> can -> sy + 2 )"		3960344	0					
ANR	3960491	CastTarget	void		3960344	0					
ANR	3960492	CallExpression	"G ( - g -> can -> sx + 1 , - g -> can -> sy + 2 )"		3960344	1					
ANR	3960493	Callee	G		3960344	0					
ANR	3960494	Identifier	G		3960344	0					
ANR	3960495	ArgumentList	- g -> can -> sx + 1		3960344	1					
ANR	3960496	Argument	- g -> can -> sx + 1		3960344	0					
ANR	3960497	AdditiveExpression	- g -> can -> sx + 1		3960344	0		+			
ANR	3960498	UnaryOperationExpression	- g -> can -> sx		3960344	0					
ANR	3960499	UnaryOperator	-		3960344	0					
ANR	3960500	PtrMemberAccess	g -> can -> sx		3960344	1					
ANR	3960501	PtrMemberAccess	g -> can		3960344	0					
ANR	3960502	Identifier	g		3960344	0					
ANR	3960503	Identifier	can		3960344	1					
ANR	3960504	Identifier	sx		3960344	1					
ANR	3960505	PrimaryExpression	1		3960344	1					
ANR	3960506	Argument	- g -> can -> sy + 2		3960344	1					
ANR	3960507	AdditiveExpression	- g -> can -> sy + 2		3960344	0		+			
ANR	3960508	UnaryOperationExpression	- g -> can -> sy		3960344	0					
ANR	3960509	UnaryOperator	-		3960344	0					
ANR	3960510	PtrMemberAccess	g -> can -> sy		3960344	1					
ANR	3960511	PtrMemberAccess	g -> can		3960344	0					
ANR	3960512	Identifier	g		3960344	0					
ANR	3960513	Identifier	can		3960344	1					
ANR	3960514	Identifier	sy		3960344	1					
ANR	3960515	PrimaryExpression	2		3960344	1					
ANR	3960516	IdentifierDeclStatement	"int scr_utf8 = r_config_get_i ( core -> config , ""scr.utf8"" ) ;"	3434:2:86551:86607	3960344	1	True				
ANR	3960517	IdentifierDecl	"scr_utf8 = r_config_get_i ( core -> config , ""scr.utf8"" )"		3960344	0					
ANR	3960518	IdentifierDeclType	int		3960344	0					
ANR	3960519	Identifier	scr_utf8		3960344	1					
ANR	3960520	AssignmentExpression	"scr_utf8 = r_config_get_i ( core -> config , ""scr.utf8"" )"		3960344	2		=			
ANR	3960521	Identifier	scr_utf8		3960344	0					
ANR	3960522	CallExpression	"r_config_get_i ( core -> config , ""scr.utf8"" )"		3960344	1					
ANR	3960523	Callee	r_config_get_i		3960344	0					
ANR	3960524	Identifier	r_config_get_i		3960344	0					
ANR	3960525	ArgumentList	core -> config		3960344	1					
ANR	3960526	Argument	core -> config		3960344	0					
ANR	3960527	PtrMemberAccess	core -> config		3960344	0					
ANR	3960528	Identifier	core		3960344	0					
ANR	3960529	Identifier	config		3960344	1					
ANR	3960530	Argument	"""scr.utf8"""		3960344	1					
ANR	3960531	PrimaryExpression	"""scr.utf8"""		3960344	0					
ANR	3960532	IdentifierDeclStatement	"int asm_bytes = r_config_get_i ( core -> config , ""asm.bytes"" ) ;"	3435:2:86611:86669	3960344	2	True				
ANR	3960533	IdentifierDecl	"asm_bytes = r_config_get_i ( core -> config , ""asm.bytes"" )"		3960344	0					
ANR	3960534	IdentifierDeclType	int		3960344	0					
ANR	3960535	Identifier	asm_bytes		3960344	1					
ANR	3960536	AssignmentExpression	"asm_bytes = r_config_get_i ( core -> config , ""asm.bytes"" )"		3960344	2		=			
ANR	3960537	Identifier	asm_bytes		3960344	0					
ANR	3960538	CallExpression	"r_config_get_i ( core -> config , ""asm.bytes"" )"		3960344	1					
ANR	3960539	Callee	r_config_get_i		3960344	0					
ANR	3960540	Identifier	r_config_get_i		3960344	0					
ANR	3960541	ArgumentList	core -> config		3960344	1					
ANR	3960542	Argument	core -> config		3960344	0					
ANR	3960543	PtrMemberAccess	core -> config		3960344	0					
ANR	3960544	Identifier	core		3960344	0					
ANR	3960545	Identifier	config		3960344	1					
ANR	3960546	Argument	"""asm.bytes"""		3960344	1					
ANR	3960547	PrimaryExpression	"""asm.bytes"""		3960344	0					
ANR	3960548	IdentifierDeclStatement	"int asm_cmt_right = r_config_get_i ( core -> config , ""asm.cmt.right"" ) ;"	3436:2:86673:86739	3960344	3	True				
ANR	3960549	IdentifierDecl	"asm_cmt_right = r_config_get_i ( core -> config , ""asm.cmt.right"" )"		3960344	0					
ANR	3960550	IdentifierDeclType	int		3960344	0					
ANR	3960551	Identifier	asm_cmt_right		3960344	1					
ANR	3960552	AssignmentExpression	"asm_cmt_right = r_config_get_i ( core -> config , ""asm.cmt.right"" )"		3960344	2		=			
ANR	3960553	Identifier	asm_cmt_right		3960344	0					
ANR	3960554	CallExpression	"r_config_get_i ( core -> config , ""asm.cmt.right"" )"		3960344	1					
ANR	3960555	Callee	r_config_get_i		3960344	0					
ANR	3960556	Identifier	r_config_get_i		3960344	0					
ANR	3960557	ArgumentList	core -> config		3960344	1					
ANR	3960558	Argument	core -> config		3960344	0					
ANR	3960559	PtrMemberAccess	core -> config		3960344	0					
ANR	3960560	Identifier	core		3960344	0					
ANR	3960561	Identifier	config		3960344	1					
ANR	3960562	Argument	"""asm.cmt.right"""		3960344	1					
ANR	3960563	PrimaryExpression	"""asm.cmt.right"""		3960344	0					
ANR	3960564	ExpressionStatement	"r_config_set_i ( core -> config , ""scr.utf8"" , 0 )"	3437:2:86743:86787	3960344	4	True				
ANR	3960565	CallExpression	"r_config_set_i ( core -> config , ""scr.utf8"" , 0 )"		3960344	0					
ANR	3960566	Callee	r_config_set_i		3960344	0					
ANR	3960567	Identifier	r_config_set_i		3960344	0					
ANR	3960568	ArgumentList	core -> config		3960344	1					
ANR	3960569	Argument	core -> config		3960344	0					
ANR	3960570	PtrMemberAccess	core -> config		3960344	0					
ANR	3960571	Identifier	core		3960344	0					
ANR	3960572	Identifier	config		3960344	1					
ANR	3960573	Argument	"""scr.utf8"""		3960344	1					
ANR	3960574	PrimaryExpression	"""scr.utf8"""		3960344	0					
ANR	3960575	Argument	0		3960344	2					
ANR	3960576	PrimaryExpression	0		3960344	0					
ANR	3960577	ExpressionStatement	"r_config_set_i ( core -> config , ""asm.bytes"" , 0 )"	3438:2:86791:86836	3960344	5	True				
ANR	3960578	CallExpression	"r_config_set_i ( core -> config , ""asm.bytes"" , 0 )"		3960344	0					
ANR	3960579	Callee	r_config_set_i		3960344	0					
ANR	3960580	Identifier	r_config_set_i		3960344	0					
ANR	3960581	ArgumentList	core -> config		3960344	1					
ANR	3960582	Argument	core -> config		3960344	0					
ANR	3960583	PtrMemberAccess	core -> config		3960344	0					
ANR	3960584	Identifier	core		3960344	0					
ANR	3960585	Identifier	config		3960344	1					
ANR	3960586	Argument	"""asm.bytes"""		3960344	1					
ANR	3960587	PrimaryExpression	"""asm.bytes"""		3960344	0					
ANR	3960588	Argument	0		3960344	2					
ANR	3960589	PrimaryExpression	0		3960344	0					
ANR	3960590	ExpressionStatement	"r_config_set_i ( core -> config , ""asm.cmt.right"" , 0 )"	3439:2:86840:86889	3960344	6	True				
ANR	3960591	CallExpression	"r_config_set_i ( core -> config , ""asm.cmt.right"" , 0 )"		3960344	0					
ANR	3960592	Callee	r_config_set_i		3960344	0					
ANR	3960593	Identifier	r_config_set_i		3960344	0					
ANR	3960594	ArgumentList	core -> config		3960344	1					
ANR	3960595	Argument	core -> config		3960344	0					
ANR	3960596	PtrMemberAccess	core -> config		3960344	0					
ANR	3960597	Identifier	core		3960344	0					
ANR	3960598	Identifier	config		3960344	1					
ANR	3960599	Argument	"""asm.cmt.right"""		3960344	1					
ANR	3960600	PrimaryExpression	"""asm.cmt.right"""		3960344	0					
ANR	3960601	Argument	0		3960344	2					
ANR	3960602	PrimaryExpression	0		3960344	0					
ANR	3960603	IdentifierDeclStatement	"char * str = r_core_cmd_str ( core , ""pd $r"" ) ;"	3440:2:86893:86935	3960344	7	True				
ANR	3960604	IdentifierDecl	"* str = r_core_cmd_str ( core , ""pd $r"" )"		3960344	0					
ANR	3960605	IdentifierDeclType	char *		3960344	0					
ANR	3960606	Identifier	str		3960344	1					
ANR	3960607	AssignmentExpression	"* str = r_core_cmd_str ( core , ""pd $r"" )"		3960344	2		=			
ANR	3960608	Identifier	str		3960344	0					
ANR	3960609	CallExpression	"r_core_cmd_str ( core , ""pd $r"" )"		3960344	1					
ANR	3960610	Callee	r_core_cmd_str		3960344	0					
ANR	3960611	Identifier	r_core_cmd_str		3960344	0					
ANR	3960612	ArgumentList	core		3960344	1					
ANR	3960613	Argument	core		3960344	0					
ANR	3960614	Identifier	core		3960344	0					
ANR	3960615	Argument	"""pd $r"""		3960344	1					
ANR	3960616	PrimaryExpression	"""pd $r"""		3960344	0					
ANR	3960617	IfStatement	if ( str )		3960344	8					
ANR	3960618	Condition	str	3441:6:86943:86945	3960344	0	True				
ANR	3960619	Identifier	str		3960344	0					
ANR	3960620	CompoundStatement		34:11:991:991	3960344	1					
ANR	3960621	ExpressionStatement	W ( str )	3442:3:86953:86960	3960344	0	True				
ANR	3960622	CallExpression	W ( str )		3960344	0					
ANR	3960623	Callee	W		3960344	0					
ANR	3960624	Identifier	W		3960344	0					
ANR	3960625	ArgumentList	str		3960344	1					
ANR	3960626	Argument	str		3960344	0					
ANR	3960627	Identifier	str		3960344	0					
ANR	3960628	ExpressionStatement	free ( str )	3443:3:86965:86975	3960344	1	True				
ANR	3960629	CallExpression	free ( str )		3960344	0					
ANR	3960630	Callee	free		3960344	0					
ANR	3960631	Identifier	free		3960344	0					
ANR	3960632	ArgumentList	str		3960344	1					
ANR	3960633	Argument	str		3960344	0					
ANR	3960634	Identifier	str		3960344	0					
ANR	3960635	ExpressionStatement	"r_config_set_i ( core -> config , ""scr.utf8"" , scr_utf8 )"	3445:2:86983:87034	3960344	9	True				
ANR	3960636	CallExpression	"r_config_set_i ( core -> config , ""scr.utf8"" , scr_utf8 )"		3960344	0					
ANR	3960637	Callee	r_config_set_i		3960344	0					
ANR	3960638	Identifier	r_config_set_i		3960344	0					
ANR	3960639	ArgumentList	core -> config		3960344	1					
ANR	3960640	Argument	core -> config		3960344	0					
ANR	3960641	PtrMemberAccess	core -> config		3960344	0					
ANR	3960642	Identifier	core		3960344	0					
ANR	3960643	Identifier	config		3960344	1					
ANR	3960644	Argument	"""scr.utf8"""		3960344	1					
ANR	3960645	PrimaryExpression	"""scr.utf8"""		3960344	0					
ANR	3960646	Argument	scr_utf8		3960344	2					
ANR	3960647	Identifier	scr_utf8		3960344	0					
ANR	3960648	ExpressionStatement	"r_config_set_i ( core -> config , ""asm.bytes"" , asm_bytes )"	3446:2:87038:87091	3960344	10	True				
ANR	3960649	CallExpression	"r_config_set_i ( core -> config , ""asm.bytes"" , asm_bytes )"		3960344	0					
ANR	3960650	Callee	r_config_set_i		3960344	0					
ANR	3960651	Identifier	r_config_set_i		3960344	0					
ANR	3960652	ArgumentList	core -> config		3960344	1					
ANR	3960653	Argument	core -> config		3960344	0					
ANR	3960654	PtrMemberAccess	core -> config		3960344	0					
ANR	3960655	Identifier	core		3960344	0					
ANR	3960656	Identifier	config		3960344	1					
ANR	3960657	Argument	"""asm.bytes"""		3960344	1					
ANR	3960658	PrimaryExpression	"""asm.bytes"""		3960344	0					
ANR	3960659	Argument	asm_bytes		3960344	2					
ANR	3960660	Identifier	asm_bytes		3960344	0					
ANR	3960661	ExpressionStatement	"r_config_set_i ( core -> config , ""asm.cmt.right"" , asm_cmt_right )"	3447:2:87095:87156	3960344	11	True				
ANR	3960662	CallExpression	"r_config_set_i ( core -> config , ""asm.cmt.right"" , asm_cmt_right )"		3960344	0					
ANR	3960663	Callee	r_config_set_i		3960344	0					
ANR	3960664	Identifier	r_config_set_i		3960344	0					
ANR	3960665	ArgumentList	core -> config		3960344	1					
ANR	3960666	Argument	core -> config		3960344	0					
ANR	3960667	PtrMemberAccess	core -> config		3960344	0					
ANR	3960668	Identifier	core		3960344	0					
ANR	3960669	Identifier	config		3960344	1					
ANR	3960670	Argument	"""asm.cmt.right"""		3960344	1					
ANR	3960671	PrimaryExpression	"""asm.cmt.right"""		3960344	0					
ANR	3960672	Argument	asm_cmt_right		3960344	2					
ANR	3960673	Identifier	asm_cmt_right		3960344	0					
ANR	3960674	IfStatement	if ( g -> title && * g -> title )		3960344	9					
ANR	3960675	Condition	g -> title && * g -> title	3449:5:87166:87186	3960344	0	True				
ANR	3960676	AndExpression	g -> title && * g -> title		3960344	0		&&			
ANR	3960677	PtrMemberAccess	g -> title		3960344	0					
ANR	3960678	Identifier	g		3960344	0					
ANR	3960679	Identifier	title		3960344	1					
ANR	3960680	UnaryOperationExpression	* g -> title		3960344	1					
ANR	3960681	UnaryOperator	*		3960344	0					
ANR	3960682	PtrMemberAccess	g -> title		3960344	1					
ANR	3960683	Identifier	g		3960344	0					
ANR	3960684	Identifier	title		3960344	1					
ANR	3960685	CompoundStatement		42:28:1232:1232	3960344	1					
ANR	3960686	ExpressionStatement	g -> can -> sy ++	3450:2:87193:87206	3960344	0	True				
ANR	3960687	PostIncDecOperationExpression	g -> can -> sy ++		3960344	0					
ANR	3960688	PtrMemberAccess	g -> can -> sy		3960344	0					
ANR	3960689	PtrMemberAccess	g -> can		3960344	0					
ANR	3960690	Identifier	g		3960344	0					
ANR	3960691	Identifier	can		3960344	1					
ANR	3960692	Identifier	sy		3960344	1					
ANR	3960693	IncDec	++		3960344	1					
ANR	3960694	ExpressionStatement	agraph_print_edges ( g )	3452:1:87212:87234	3960344	10	True				
ANR	3960695	CallExpression	agraph_print_edges ( g )		3960344	0					
ANR	3960696	Callee	agraph_print_edges		3960344	0					
ANR	3960697	Identifier	agraph_print_edges		3960344	0					
ANR	3960698	ArgumentList	g		3960344	1					
ANR	3960699	Argument	g		3960344	0					
ANR	3960700	Identifier	g		3960344	0					
ANR	3960701	ExpressionStatement	agraph_print_nodes ( g )	3453:1:87237:87259	3960344	11	True				
ANR	3960702	CallExpression	agraph_print_nodes ( g )		3960344	0					
ANR	3960703	Callee	agraph_print_nodes		3960344	0					
ANR	3960704	Identifier	agraph_print_nodes		3960344	0					
ANR	3960705	ArgumentList	g		3960344	1					
ANR	3960706	Argument	g		3960344	0					
ANR	3960707	Identifier	g		3960344	0					
ANR	3960708	IfStatement	if ( g -> title && * g -> title )		3960344	12					
ANR	3960709	Condition	g -> title && * g -> title	3454:5:87266:87286	3960344	0	True				
ANR	3960710	AndExpression	g -> title && * g -> title		3960344	0		&&			
ANR	3960711	PtrMemberAccess	g -> title		3960344	0					
ANR	3960712	Identifier	g		3960344	0					
ANR	3960713	Identifier	title		3960344	1					
ANR	3960714	UnaryOperationExpression	* g -> title		3960344	1					
ANR	3960715	UnaryOperator	*		3960344	0					
ANR	3960716	PtrMemberAccess	g -> title		3960344	1					
ANR	3960717	Identifier	g		3960344	0					
ANR	3960718	Identifier	title		3960344	1					
ANR	3960719	CompoundStatement		47:28:1332:1332	3960344	1					
ANR	3960720	ExpressionStatement	g -> can -> sy --	3455:2:87293:87306	3960344	0	True				
ANR	3960721	PostIncDecOperationExpression	g -> can -> sy --		3960344	0					
ANR	3960722	PtrMemberAccess	g -> can -> sy		3960344	0					
ANR	3960723	PtrMemberAccess	g -> can		3960344	0					
ANR	3960724	Identifier	g		3960344	0					
ANR	3960725	Identifier	can		3960344	1					
ANR	3960726	Identifier	sy		3960344	1					
ANR	3960727	IncDec	--		3960344	1					
ANR	3960728	ExpressionStatement	"( void ) G ( - g -> can -> sx , - g -> can -> sy )"	3458:1:87341:87376	3960344	13	True				
ANR	3960729	CastExpression	"( void ) G ( - g -> can -> sx , - g -> can -> sy )"		3960344	0					
ANR	3960730	CastTarget	void		3960344	0					
ANR	3960731	CallExpression	"G ( - g -> can -> sx , - g -> can -> sy )"		3960344	1					
ANR	3960732	Callee	G		3960344	0					
ANR	3960733	Identifier	G		3960344	0					
ANR	3960734	ArgumentList	- g -> can -> sx		3960344	1					
ANR	3960735	Argument	- g -> can -> sx		3960344	0					
ANR	3960736	UnaryOperationExpression	- g -> can -> sx		3960344	0					
ANR	3960737	UnaryOperator	-		3960344	0					
ANR	3960738	PtrMemberAccess	g -> can -> sx		3960344	1					
ANR	3960739	PtrMemberAccess	g -> can		3960344	0					
ANR	3960740	Identifier	g		3960344	0					
ANR	3960741	Identifier	can		3960344	1					
ANR	3960742	Identifier	sx		3960344	1					
ANR	3960743	Argument	- g -> can -> sy		3960344	1					
ANR	3960744	UnaryOperationExpression	- g -> can -> sy		3960344	0					
ANR	3960745	UnaryOperator	-		3960344	0					
ANR	3960746	PtrMemberAccess	g -> can -> sy		3960344	1					
ANR	3960747	PtrMemberAccess	g -> can		3960344	0					
ANR	3960748	Identifier	g		3960344	0					
ANR	3960749	Identifier	can		3960344	1					
ANR	3960750	Identifier	sy		3960344	1					
ANR	3960751	IfStatement	if ( ! g -> is_tiny )		3960344	14					
ANR	3960752	Condition	! g -> is_tiny	3459:5:87383:87393	3960344	0	True				
ANR	3960753	UnaryOperationExpression	! g -> is_tiny		3960344	0					
ANR	3960754	UnaryOperator	!		3960344	0					
ANR	3960755	PtrMemberAccess	g -> is_tiny		3960344	1					
ANR	3960756	Identifier	g		3960344	0					
ANR	3960757	Identifier	is_tiny		3960344	1					
ANR	3960758	CompoundStatement		52:18:1439:1439	3960344	1					
ANR	3960759	ExpressionStatement	W ( g -> title )	3460:16:87414:87426	3960344	0	True				
ANR	3960760	CallExpression	W ( g -> title )		3960344	0					
ANR	3960761	Callee	W		3960344	0					
ANR	3960762	Identifier	W		3960344	0					
ANR	3960763	ArgumentList	g -> title		3960344	1					
ANR	3960764	Argument	g -> title		3960344	0					
ANR	3960765	PtrMemberAccess	g -> title		3960344	0					
ANR	3960766	Identifier	g		3960344	0					
ANR	3960767	Identifier	title		3960344	1					
ANR	3960768	IfStatement	if ( is_interactive && g -> title )		3960344	15					
ANR	3960769	Condition	is_interactive && g -> title	3462:5:87436:87461	3960344	0	True				
ANR	3960770	AndExpression	is_interactive && g -> title		3960344	0		&&			
ANR	3960771	Identifier	is_interactive		3960344	0					
ANR	3960772	PtrMemberAccess	g -> title		3960344	1					
ANR	3960773	Identifier	g		3960344	0					
ANR	3960774	Identifier	title		3960344	1					
ANR	3960775	CompoundStatement		56:2:1511:1544	3960344	1					
ANR	3960776	IdentifierDeclStatement	int title_len = strlen ( g -> title ) ;	3463:2:87468:87501	3960344	0	True				
ANR	3960777	IdentifierDecl	title_len = strlen ( g -> title )		3960344	0					
ANR	3960778	IdentifierDeclType	int		3960344	0					
ANR	3960779	Identifier	title_len		3960344	1					
ANR	3960780	AssignmentExpression	title_len = strlen ( g -> title )		3960344	2		=			
ANR	3960781	Identifier	title_len		3960344	0					
ANR	3960782	CallExpression	strlen ( g -> title )		3960344	1					
ANR	3960783	Callee	strlen		3960344	0					
ANR	3960784	Identifier	strlen		3960344	0					
ANR	3960785	ArgumentList	g -> title		3960344	1					
ANR	3960786	Argument	g -> title		3960344	0					
ANR	3960787	PtrMemberAccess	g -> title		3960344	0					
ANR	3960788	Identifier	g		3960344	0					
ANR	3960789	Identifier	title		3960344	1					
ANR	3960790	ExpressionStatement	"r_cons_canvas_fill ( g -> can , - g -> can -> sx + title_len , - g -> can -> sy , w - title_len , 1 , ' ' )"	3464:2:87505:87596	3960344	1	True				
ANR	3960791	CallExpression	"r_cons_canvas_fill ( g -> can , - g -> can -> sx + title_len , - g -> can -> sy , w - title_len , 1 , ' ' )"		3960344	0					
ANR	3960792	Callee	r_cons_canvas_fill		3960344	0					
ANR	3960793	Identifier	r_cons_canvas_fill		3960344	0					
ANR	3960794	ArgumentList	g -> can		3960344	1					
ANR	3960795	Argument	g -> can		3960344	0					
ANR	3960796	PtrMemberAccess	g -> can		3960344	0					
ANR	3960797	Identifier	g		3960344	0					
ANR	3960798	Identifier	can		3960344	1					
ANR	3960799	Argument	- g -> can -> sx + title_len		3960344	1					
ANR	3960800	AdditiveExpression	- g -> can -> sx + title_len		3960344	0		+			
ANR	3960801	UnaryOperationExpression	- g -> can -> sx		3960344	0					
ANR	3960802	UnaryOperator	-		3960344	0					
ANR	3960803	PtrMemberAccess	g -> can -> sx		3960344	1					
ANR	3960804	PtrMemberAccess	g -> can		3960344	0					
ANR	3960805	Identifier	g		3960344	0					
ANR	3960806	Identifier	can		3960344	1					
ANR	3960807	Identifier	sx		3960344	1					
ANR	3960808	Identifier	title_len		3960344	1					
ANR	3960809	Argument	- g -> can -> sy		3960344	2					
ANR	3960810	UnaryOperationExpression	- g -> can -> sy		3960344	0					
ANR	3960811	UnaryOperator	-		3960344	0					
ANR	3960812	PtrMemberAccess	g -> can -> sy		3960344	1					
ANR	3960813	PtrMemberAccess	g -> can		3960344	0					
ANR	3960814	Identifier	g		3960344	0					
ANR	3960815	Identifier	can		3960344	1					
ANR	3960816	Identifier	sy		3960344	1					
ANR	3960817	Argument	w - title_len		3960344	3					
ANR	3960818	AdditiveExpression	w - title_len		3960344	0		-			
ANR	3960819	Identifier	w		3960344	0					
ANR	3960820	Identifier	title_len		3960344	1					
ANR	3960821	Argument	1		3960344	4					
ANR	3960822	PrimaryExpression	1		3960344	0					
ANR	3960823	Argument	' '		3960344	5					
ANR	3960824	PrimaryExpression	' '		3960344	0					
ANR	3960825	ExpressionStatement	r_cons_canvas_print_region ( g -> can )	3468:1:87603:87638	3960344	16	True				
ANR	3960826	CallExpression	r_cons_canvas_print_region ( g -> can )		3960344	0					
ANR	3960827	Callee	r_cons_canvas_print_region		3960344	0					
ANR	3960828	Identifier	r_cons_canvas_print_region		3960344	0					
ANR	3960829	ArgumentList	g -> can		3960344	1					
ANR	3960830	Argument	g -> can		3960344	0					
ANR	3960831	PtrMemberAccess	g -> can		3960344	0					
ANR	3960832	Identifier	g		3960344	0					
ANR	3960833	Identifier	can		3960344	1					
ANR	3960834	IfStatement	if ( is_interactive )		3960344	17					
ANR	3960835	Condition	is_interactive	3470:5:87646:87659	3960344	0	True				
ANR	3960836	Identifier	is_interactive		3960344	0					
ANR	3960837	CompoundStatement		66:2:1795:1817	3960344	1					
ANR	3960838	ExpressionStatement	r_cons_newline ( )	3471:2:87666:87683	3960344	0	True				
ANR	3960839	CallExpression	r_cons_newline ( )		3960344	0					
ANR	3960840	Callee	r_cons_newline		3960344	0					
ANR	3960841	Identifier	r_cons_newline		3960344	0					
ANR	3960842	ArgumentList			3960344	1					
ANR	3960843	IdentifierDeclStatement	"const char * cmdv = r_config_get ( core -> config , ""cmd.gprompt"" ) ;"	3472:2:87687:87748	3960344	1	True				
ANR	3960844	IdentifierDecl	"* cmdv = r_config_get ( core -> config , ""cmd.gprompt"" )"		3960344	0					
ANR	3960845	IdentifierDeclType	const char *		3960344	0					
ANR	3960846	Identifier	cmdv		3960344	1					
ANR	3960847	AssignmentExpression	"* cmdv = r_config_get ( core -> config , ""cmd.gprompt"" )"		3960344	2		=			
ANR	3960848	Identifier	cmdv		3960344	0					
ANR	3960849	CallExpression	"r_config_get ( core -> config , ""cmd.gprompt"" )"		3960344	1					
ANR	3960850	Callee	r_config_get		3960344	0					
ANR	3960851	Identifier	r_config_get		3960344	0					
ANR	3960852	ArgumentList	core -> config		3960344	1					
ANR	3960853	Argument	core -> config		3960344	0					
ANR	3960854	PtrMemberAccess	core -> config		3960344	0					
ANR	3960855	Identifier	core		3960344	0					
ANR	3960856	Identifier	config		3960344	1					
ANR	3960857	Argument	"""cmd.gprompt"""		3960344	1					
ANR	3960858	PrimaryExpression	"""cmd.gprompt"""		3960344	0					
ANR	3960859	IdentifierDeclStatement	bool mustFlush = false ;	3473:2:87752:87774	3960344	2	True				
ANR	3960860	IdentifierDecl	mustFlush = false		3960344	0					
ANR	3960861	IdentifierDeclType	bool		3960344	0					
ANR	3960862	Identifier	mustFlush		3960344	1					
ANR	3960863	AssignmentExpression	mustFlush = false		3960344	2		=			
ANR	3960864	Identifier	false		3960344	0					
ANR	3960865	Identifier	false		3960344	1					
ANR	3960866	ExpressionStatement	r_cons_visual_flush ( )	3474:2:87778:87800	3960344	3	True				
ANR	3960867	CallExpression	r_cons_visual_flush ( )		3960344	0					
ANR	3960868	Callee	r_cons_visual_flush		3960344	0					
ANR	3960869	Identifier	r_cons_visual_flush		3960344	0					
ANR	3960870	ArgumentList			3960344	1					
ANR	3960871	IfStatement	if ( cmdv && * cmdv )		3960344	4					
ANR	3960872	Condition	cmdv && * cmdv	3475:6:87808:87820	3960344	0	True				
ANR	3960873	AndExpression	cmdv && * cmdv		3960344	0		&&			
ANR	3960874	Identifier	cmdv		3960344	0					
ANR	3960875	UnaryOperationExpression	* cmdv		3960344	1					
ANR	3960876	UnaryOperator	*		3960344	0					
ANR	3960877	Identifier	cmdv		3960344	1					
ANR	3960878	CompoundStatement		68:21:1866:1866	3960344	1					
ANR	3960879	ExpressionStatement	"r_cons_gotoxy ( 0 , 2 )"	3476:3:87828:87848	3960344	0	True				
ANR	3960880	CallExpression	"r_cons_gotoxy ( 0 , 2 )"		3960344	0					
ANR	3960881	Callee	r_cons_gotoxy		3960344	0					
ANR	3960882	Identifier	r_cons_gotoxy		3960344	0					
ANR	3960883	ArgumentList	0		3960344	1					
ANR	3960884	Argument	0		3960344	0					
ANR	3960885	PrimaryExpression	0		3960344	0					
ANR	3960886	Argument	2		3960344	1					
ANR	3960887	PrimaryExpression	2		3960344	0					
ANR	3960888	ExpressionStatement	r_cons_strcat ( Color_RESET )	3477:3:87853:87880	3960344	1	True				
ANR	3960889	CallExpression	r_cons_strcat ( Color_RESET )		3960344	0					
ANR	3960890	Callee	r_cons_strcat		3960344	0					
ANR	3960891	Identifier	r_cons_strcat		3960344	0					
ANR	3960892	ArgumentList	Color_RESET		3960344	1					
ANR	3960893	Argument	Color_RESET		3960344	0					
ANR	3960894	Identifier	Color_RESET		3960344	0					
ANR	3960895	ExpressionStatement	"r_core_cmd0 ( core , cmdv )"	3478:3:87885:87909	3960344	2	True				
ANR	3960896	CallExpression	"r_core_cmd0 ( core , cmdv )"		3960344	0					
ANR	3960897	Callee	r_core_cmd0		3960344	0					
ANR	3960898	Identifier	r_core_cmd0		3960344	0					
ANR	3960899	ArgumentList	core		3960344	1					
ANR	3960900	Argument	core		3960344	0					
ANR	3960901	Identifier	core		3960344	0					
ANR	3960902	Argument	cmdv		3960344	1					
ANR	3960903	Identifier	cmdv		3960344	0					
ANR	3960904	ExpressionStatement	mustFlush = true	3479:3:87914:87930	3960344	3	True				
ANR	3960905	AssignmentExpression	mustFlush = true		3960344	0		=			
ANR	3960906	Identifier	mustFlush		3960344	0					
ANR	3960907	Identifier	true		3960344	1					
ANR	3960908	IfStatement	if ( core && core -> scr_gadgets )		3960344	5					
ANR	3960909	Condition	core && core -> scr_gadgets	3481:6:87942:87966	3960344	0	True				
ANR	3960910	AndExpression	core && core -> scr_gadgets		3960344	0		&&			
ANR	3960911	Identifier	core		3960344	0					
ANR	3960912	PtrMemberAccess	core -> scr_gadgets		3960344	1					
ANR	3960913	Identifier	core		3960344	0					
ANR	3960914	Identifier	scr_gadgets		3960344	1					
ANR	3960915	CompoundStatement		74:33:2012:2012	3960344	1					
ANR	3960916	ExpressionStatement	"r_core_cmd0 ( core , ""pg"" )"	3482:3:87974:87998	3960344	0	True				
ANR	3960917	CallExpression	"r_core_cmd0 ( core , ""pg"" )"		3960344	0					
ANR	3960918	Callee	r_core_cmd0		3960344	0					
ANR	3960919	Identifier	r_core_cmd0		3960344	0					
ANR	3960920	ArgumentList	core		3960344	1					
ANR	3960921	Argument	core		3960344	0					
ANR	3960922	Identifier	core		3960344	0					
ANR	3960923	Argument	"""pg"""		3960344	1					
ANR	3960924	PrimaryExpression	"""pg"""		3960344	0					
ANR	3960925	IfStatement	if ( mustFlush )		3960344	6					
ANR	3960926	Condition	mustFlush	3484:6:88010:88018	3960344	0	True				
ANR	3960927	Identifier	mustFlush		3960344	0					
ANR	3960928	CompoundStatement		77:17:2064:2064	3960344	1					
ANR	3960929	ExpressionStatement	r_cons_flush ( )	3485:3:88026:88041	3960344	0	True				
ANR	3960930	CallExpression	r_cons_flush ( )		3960344	0					
ANR	3960931	Callee	r_cons_flush		3960344	0					
ANR	3960932	Identifier	r_cons_flush		3960344	0					
ANR	3960933	ArgumentList			3960344	1					
ANR	3960934	ReturnStatement	return true ;	3488:1:88051:88062	3960344	18	True				
ANR	3960935	Identifier	true		3960344	0					
ANR	3960936	ReturnType	static int		3960344	1					
ANR	3960937	Identifier	agraph_print		3960344	2					
ANR	3960938	ParameterList	"RAGraph * g , int is_interactive , RCore * core , RAnalFunction * fcn"		3960344	3					
ANR	3960939	Parameter	RAGraph * g	3408:24:85891:85900	3960344	0	True				
ANR	3960940	ParameterType	RAGraph *		3960344	0					
ANR	3960941	Identifier	g		3960344	1					
ANR	3960942	Parameter	int is_interactive	3408:36:85903:85920	3960344	1	True				
ANR	3960943	ParameterType	int		3960344	0					
ANR	3960944	Identifier	is_interactive		3960344	1					
ANR	3960945	Parameter	RCore * core	3408:56:85923:85933	3960344	2	True				
ANR	3960946	ParameterType	RCore *		3960344	0					
ANR	3960947	Identifier	core		3960344	1					
ANR	3960948	Parameter	RAnalFunction * fcn	3408:69:85936:85953	3960344	3	True				
ANR	3960949	ParameterType	RAnalFunction *		3960344	0					
ANR	3960950	Identifier	fcn		3960344	1					
ANR	3960951	CFGEntryNode	ENTRY		3960344		True				
ANR	3960952	CFGExitNode	EXIT		3960344		True				
ANR	3960953	Symbol	r_core_cmd_str		3960344						
ANR	3960954	Symbol	mustFlush		3960344						
ANR	3960955	Symbol	scr_utf8		3960344						
ANR	3960956	Symbol	* core		3960344						
ANR	3960957	Symbol	r_config_get		3960344						
ANR	3960958	Symbol	Color_RESET		3960344						
ANR	3960959	Symbol	g -> h		3960344						
ANR	3960960	Symbol	core -> scr_gadgets		3960344						
ANR	3960961	Symbol	r_cons_canvas_resize		3960344						
ANR	3960962	Symbol	* g -> can		3960344						
ANR	3960963	Symbol	fcn		3960344						
ANR	3960964	Symbol	strlen		3960344						
ANR	3960965	Symbol	g -> is_tiny		3960344						
ANR	3960966	Symbol	cmdv		3960344						
ANR	3960967	Symbol	title_len		3960344						
ANR	3960968	Symbol	g -> can		3960344						
ANR	3960969	Symbol	g -> can -> sx		3960344						
ANR	3960970	Symbol	g -> can -> sy		3960344						
ANR	3960971	Symbol	ret		3960344						
ANR	3960972	Symbol	core -> config		3960344						
ANR	3960973	Symbol	check_changes		3960344						
ANR	3960974	Symbol	g -> title		3960344						
ANR	3960975	Symbol	* * g		3960344						
ANR	3960976	Symbol	* g -> title		3960344						
ANR	3960977	Symbol	r_cons_get_size		3960344						
ANR	3960978	Symbol	g		3960344						
ANR	3960979	Symbol	is_interactive		3960344						
ANR	3960980	Symbol	h		3960344						
ANR	3960981	Symbol	false		3960344						
ANR	3960982	Symbol	& h		3960344						
ANR	3960983	Symbol	* cmdv		3960344						
ANR	3960984	Symbol	str		3960344						
ANR	3960985	Symbol	core		3960344						
ANR	3960986	Symbol	* g		3960344						
ANR	3960987	Symbol	asm_bytes		3960344						
ANR	3960988	Symbol	asm_cmt_right		3960344						
ANR	3960989	Symbol	w		3960344						
ANR	3960990	Symbol	r_config_get_i		3960344						
ANR	3960991	Symbol	g -> y		3960344						
ANR	3960992	Symbol	g -> is_dis		3960344						
ANR	3960993	Symbol	true		3960344						
ANR	3960994	Symbol	g -> x		3960344						
ANR	3960995	Symbol	g -> w		3960344						
ANR	3960996	Function	agraph_refresh	3491:0:88067:89807							
ANR	3960997	FunctionDef	agraph_refresh (struct agraph_refresh_data * grd)		3960996	0					
ANR	3960998	CompoundStatement		3491:59:88126:89807	3960996	0					
ANR	3960999	IfStatement	if ( ! grd )		3960996	0					
ANR	3961000	Condition	! grd	3492:5:88133:88136	3960996	0	True				
ANR	3961001	UnaryOperationExpression	! grd		3960996	0					
ANR	3961002	UnaryOperator	!		3960996	0					
ANR	3961003	Identifier	grd		3960996	1					
ANR	3961004	CompoundStatement		2:11:12:12	3960996	1					
ANR	3961005	ReturnStatement	return 0 ;	3493:2:88143:88151	3960996	0	True				
ANR	3961006	PrimaryExpression	0		3960996	0					
ANR	3961007	ExpressionStatement	r_cons_singleton ( ) -> event_data = grd	3495:1:88157:88194	3960996	1	True				
ANR	3961008	AssignmentExpression	r_cons_singleton ( ) -> event_data = grd		3960996	0		=			
ANR	3961009	PtrMemberAccess	r_cons_singleton ( ) -> event_data		3960996	0					
ANR	3961010	CallExpression	r_cons_singleton ( )		3960996	0					
ANR	3961011	Callee	r_cons_singleton		3960996	0					
ANR	3961012	Identifier	r_cons_singleton		3960996	0					
ANR	3961013	ArgumentList			3960996	1					
ANR	3961014	Identifier	event_data		3960996	1					
ANR	3961015	Identifier	grd		3960996	1					
ANR	3961016	IdentifierDeclStatement	RCore * core = grd -> core ;	3496:1:88197:88220	3960996	2	True				
ANR	3961017	IdentifierDecl	* core = grd -> core		3960996	0					
ANR	3961018	IdentifierDeclType	RCore *		3960996	0					
ANR	3961019	Identifier	core		3960996	1					
ANR	3961020	AssignmentExpression	* core = grd -> core		3960996	2		=			
ANR	3961021	Identifier	core		3960996	0					
ANR	3961022	PtrMemberAccess	grd -> core		3960996	1					
ANR	3961023	Identifier	grd		3960996	0					
ANR	3961024	Identifier	core		3960996	1					
ANR	3961025	IdentifierDeclStatement	RAGraph * g = grd -> g ;	3497:1:88223:88242	3960996	3	True				
ANR	3961026	IdentifierDecl	* g = grd -> g		3960996	0					
ANR	3961027	IdentifierDeclType	RAGraph *		3960996	0					
ANR	3961028	Identifier	g		3960996	1					
ANR	3961029	AssignmentExpression	* g = grd -> g		3960996	2		=			
ANR	3961030	Identifier	g		3960996	0					
ANR	3961031	PtrMemberAccess	grd -> g		3960996	1					
ANR	3961032	Identifier	grd		3960996	0					
ANR	3961033	Identifier	g		3960996	1					
ANR	3961034	IdentifierDeclStatement	RAnalFunction * f = NULL ;	3498:1:88245:88268	3960996	4	True				
ANR	3961035	IdentifierDecl	* f = NULL		3960996	0					
ANR	3961036	IdentifierDeclType	RAnalFunction *		3960996	0					
ANR	3961037	Identifier	f		3960996	1					
ANR	3961038	AssignmentExpression	* f = NULL		3960996	2		=			
ANR	3961039	Identifier	NULL		3960996	0					
ANR	3961040	Identifier	NULL		3960996	1					
ANR	3961041	IdentifierDeclStatement	RAnalFunction * * fcn = grd -> fcn ;	3499:1:88271:88301	3960996	5	True				
ANR	3961042	IdentifierDecl	* * fcn = grd -> fcn		3960996	0					
ANR	3961043	IdentifierDeclType	RAnalFunction * *		3960996	0					
ANR	3961044	Identifier	fcn		3960996	1					
ANR	3961045	AssignmentExpression	* * fcn = grd -> fcn		3960996	2		=			
ANR	3961046	Identifier	fcn		3960996	0					
ANR	3961047	PtrMemberAccess	grd -> fcn		3960996	1					
ANR	3961048	Identifier	grd		3960996	0					
ANR	3961049	Identifier	fcn		3960996	1					
ANR	3961050	IfStatement	if ( ! fcn )		3960996	6					
ANR	3961051	Condition	! fcn	3501:5:88309:88312	3960996	0	True				
ANR	3961052	UnaryOperationExpression	! fcn		3960996	0					
ANR	3961053	UnaryOperator	!		3960996	0					
ANR	3961054	Identifier	fcn		3960996	1					
ANR	3961055	CompoundStatement		11:11:188:188	3960996	1					
ANR	3961056	ReturnStatement	"return agraph_print ( g , grd -> fs , core , NULL ) ;"	3502:2:88319:88363	3960996	0	True				
ANR	3961057	CallExpression	"agraph_print ( g , grd -> fs , core , NULL )"		3960996	0					
ANR	3961058	Callee	agraph_print		3960996	0					
ANR	3961059	Identifier	agraph_print		3960996	0					
ANR	3961060	ArgumentList	g		3960996	1					
ANR	3961061	Argument	g		3960996	0					
ANR	3961062	Identifier	g		3960996	0					
ANR	3961063	Argument	grd -> fs		3960996	1					
ANR	3961064	PtrMemberAccess	grd -> fs		3960996	0					
ANR	3961065	Identifier	grd		3960996	0					
ANR	3961066	Identifier	fs		3960996	1					
ANR	3961067	Argument	core		3960996	2					
ANR	3961068	Identifier	core		3960996	0					
ANR	3961069	Argument	NULL		3960996	3					
ANR	3961070	Identifier	NULL		3960996	0					
ANR	3961071	IfStatement	if ( g -> is_instep && core -> io -> debug )		3960996	7					
ANR	3961072	Condition	g -> is_instep && core -> io -> debug	3506:5:88432:88462	3960996	0	True				
ANR	3961073	AndExpression	g -> is_instep && core -> io -> debug		3960996	0		&&			
ANR	3961074	PtrMemberAccess	g -> is_instep		3960996	0					
ANR	3961075	Identifier	g		3960996	0					
ANR	3961076	Identifier	is_instep		3960996	1					
ANR	3961077	PtrMemberAccess	core -> io -> debug		3960996	1					
ANR	3961078	PtrMemberAccess	core -> io		3960996	0					
ANR	3961079	Identifier	core		3960996	0					
ANR	3961080	Identifier	io		3960996	1					
ANR	3961081	Identifier	debug		3960996	1					
ANR	3961082	CompoundStatement		24:2:643:673	3960996	1					
ANR	3961083	IdentifierDeclStatement	"const char * pc = r_reg_get_name ( core -> dbg -> reg , R_REG_NAME_PC ) ;"	3508:2:88512:88575	3960996	0	True				
ANR	3961084	IdentifierDecl	"* pc = r_reg_get_name ( core -> dbg -> reg , R_REG_NAME_PC )"		3960996	0					
ANR	3961085	IdentifierDeclType	const char *		3960996	0					
ANR	3961086	Identifier	pc		3960996	1					
ANR	3961087	AssignmentExpression	"* pc = r_reg_get_name ( core -> dbg -> reg , R_REG_NAME_PC )"		3960996	2		=			
ANR	3961088	Identifier	pc		3960996	0					
ANR	3961089	CallExpression	"r_reg_get_name ( core -> dbg -> reg , R_REG_NAME_PC )"		3960996	1					
ANR	3961090	Callee	r_reg_get_name		3960996	0					
ANR	3961091	Identifier	r_reg_get_name		3960996	0					
ANR	3961092	ArgumentList	core -> dbg -> reg		3960996	1					
ANR	3961093	Argument	core -> dbg -> reg		3960996	0					
ANR	3961094	PtrMemberAccess	core -> dbg -> reg		3960996	0					
ANR	3961095	PtrMemberAccess	core -> dbg		3960996	0					
ANR	3961096	Identifier	core		3960996	0					
ANR	3961097	Identifier	dbg		3960996	1					
ANR	3961098	Identifier	reg		3960996	1					
ANR	3961099	Argument	R_REG_NAME_PC		3960996	1					
ANR	3961100	Identifier	R_REG_NAME_PC		3960996	0					
ANR	3961101	IdentifierDeclStatement	"RRegItem * r = r_reg_get ( core -> dbg -> reg , pc , - 1 ) ;"	3509:2:88579:88627	3960996	1	True				
ANR	3961102	IdentifierDecl	"* r = r_reg_get ( core -> dbg -> reg , pc , - 1 )"		3960996	0					
ANR	3961103	IdentifierDeclType	RRegItem *		3960996	0					
ANR	3961104	Identifier	r		3960996	1					
ANR	3961105	AssignmentExpression	"* r = r_reg_get ( core -> dbg -> reg , pc , - 1 )"		3960996	2		=			
ANR	3961106	Identifier	r		3960996	0					
ANR	3961107	CallExpression	"r_reg_get ( core -> dbg -> reg , pc , - 1 )"		3960996	1					
ANR	3961108	Callee	r_reg_get		3960996	0					
ANR	3961109	Identifier	r_reg_get		3960996	0					
ANR	3961110	ArgumentList	core -> dbg -> reg		3960996	1					
ANR	3961111	Argument	core -> dbg -> reg		3960996	0					
ANR	3961112	PtrMemberAccess	core -> dbg -> reg		3960996	0					
ANR	3961113	PtrMemberAccess	core -> dbg		3960996	0					
ANR	3961114	Identifier	core		3960996	0					
ANR	3961115	Identifier	dbg		3960996	1					
ANR	3961116	Identifier	reg		3960996	1					
ANR	3961117	Argument	pc		3960996	1					
ANR	3961118	Identifier	pc		3960996	0					
ANR	3961119	Argument	- 1		3960996	2					
ANR	3961120	UnaryOperationExpression	- 1		3960996	0					
ANR	3961121	UnaryOperator	-		3960996	0					
ANR	3961122	PrimaryExpression	1		3960996	1					
ANR	3961123	IdentifierDeclStatement	"ut64 addr = r_reg_get_value ( core -> dbg -> reg , r ) ;"	3510:2:88631:88678	3960996	2	True				
ANR	3961124	IdentifierDecl	"addr = r_reg_get_value ( core -> dbg -> reg , r )"		3960996	0					
ANR	3961125	IdentifierDeclType	ut64		3960996	0					
ANR	3961126	Identifier	addr		3960996	1					
ANR	3961127	AssignmentExpression	"addr = r_reg_get_value ( core -> dbg -> reg , r )"		3960996	2		=			
ANR	3961128	Identifier	addr		3960996	0					
ANR	3961129	CallExpression	"r_reg_get_value ( core -> dbg -> reg , r )"		3960996	1					
ANR	3961130	Callee	r_reg_get_value		3960996	0					
ANR	3961131	Identifier	r_reg_get_value		3960996	0					
ANR	3961132	ArgumentList	core -> dbg -> reg		3960996	1					
ANR	3961133	Argument	core -> dbg -> reg		3960996	0					
ANR	3961134	PtrMemberAccess	core -> dbg -> reg		3960996	0					
ANR	3961135	PtrMemberAccess	core -> dbg		3960996	0					
ANR	3961136	Identifier	core		3960996	0					
ANR	3961137	Identifier	dbg		3960996	1					
ANR	3961138	Identifier	reg		3960996	1					
ANR	3961139	Argument	r		3960996	1					
ANR	3961140	Identifier	r		3960996	0					
ANR	3961141	IdentifierDeclStatement	RANode * acur = get_anode ( g -> curnode ) ;	3511:2:88682:88719	3960996	3	True				
ANR	3961142	IdentifierDecl	* acur = get_anode ( g -> curnode )		3960996	0					
ANR	3961143	IdentifierDeclType	RANode *		3960996	0					
ANR	3961144	Identifier	acur		3960996	1					
ANR	3961145	AssignmentExpression	* acur = get_anode ( g -> curnode )		3960996	2		=			
ANR	3961146	Identifier	acur		3960996	0					
ANR	3961147	CallExpression	get_anode ( g -> curnode )		3960996	1					
ANR	3961148	Callee	get_anode		3960996	0					
ANR	3961149	Identifier	get_anode		3960996	0					
ANR	3961150	ArgumentList	g -> curnode		3960996	1					
ANR	3961151	Argument	g -> curnode		3960996	0					
ANR	3961152	PtrMemberAccess	g -> curnode		3960996	0					
ANR	3961153	Identifier	g		3960996	0					
ANR	3961154	Identifier	curnode		3960996	1					
ANR	3961155	ExpressionStatement	"addr = r_core_anal_get_bbaddr ( core , addr )"	3513:2:88724:88766	3960996	4	True				
ANR	3961156	AssignmentExpression	"addr = r_core_anal_get_bbaddr ( core , addr )"		3960996	0		=			
ANR	3961157	Identifier	addr		3960996	0					
ANR	3961158	CallExpression	"r_core_anal_get_bbaddr ( core , addr )"		3960996	1					
ANR	3961159	Callee	r_core_anal_get_bbaddr		3960996	0					
ANR	3961160	Identifier	r_core_anal_get_bbaddr		3960996	0					
ANR	3961161	ArgumentList	core		3960996	1					
ANR	3961162	Argument	core		3960996	0					
ANR	3961163	Identifier	core		3960996	0					
ANR	3961164	Argument	addr		3960996	1					
ANR	3961165	Identifier	addr		3960996	0					
ANR	3961166	IdentifierDeclStatement	char * title = get_title ( addr ) ;	3514:2:88770:88800	3960996	5	True				
ANR	3961167	IdentifierDecl	* title = get_title ( addr )		3960996	0					
ANR	3961168	IdentifierDeclType	char *		3960996	0					
ANR	3961169	Identifier	title		3960996	1					
ANR	3961170	AssignmentExpression	* title = get_title ( addr )		3960996	2		=			
ANR	3961171	Identifier	title		3960996	0					
ANR	3961172	CallExpression	get_title ( addr )		3960996	1					
ANR	3961173	Callee	get_title		3960996	0					
ANR	3961174	Identifier	get_title		3960996	0					
ANR	3961175	ArgumentList	addr		3960996	1					
ANR	3961176	Argument	addr		3960996	0					
ANR	3961177	Identifier	addr		3960996	0					
ANR	3961178	IfStatement	"if ( ! acur || strcmp ( acur -> title , title ) )"		3960996	6					
ANR	3961179	Condition	"! acur || strcmp ( acur -> title , title )"	3515:6:88808:88843	3960996	0	True				
ANR	3961180	OrExpression	"! acur || strcmp ( acur -> title , title )"		3960996	0		||			
ANR	3961181	UnaryOperationExpression	! acur		3960996	0					
ANR	3961182	UnaryOperator	!		3960996	0					
ANR	3961183	Identifier	acur		3960996	1					
ANR	3961184	CallExpression	"strcmp ( acur -> title , title )"		3960996	1					
ANR	3961185	Callee	strcmp		3960996	0					
ANR	3961186	Identifier	strcmp		3960996	0					
ANR	3961187	ArgumentList	acur -> title		3960996	1					
ANR	3961188	Argument	acur -> title		3960996	0					
ANR	3961189	PtrMemberAccess	acur -> title		3960996	0					
ANR	3961190	Identifier	acur		3960996	0					
ANR	3961191	Identifier	title		3960996	1					
ANR	3961192	Argument	title		3960996	1					
ANR	3961193	Identifier	title		3960996	0					
ANR	3961194	CompoundStatement		25:44:719:719	3960996	1					
ANR	3961195	ExpressionStatement	"r_core_cmd0 ( core , ""sr PC"" )"	3516:3:88851:88878	3960996	0	True				
ANR	3961196	CallExpression	"r_core_cmd0 ( core , ""sr PC"" )"		3960996	0					
ANR	3961197	Callee	r_core_cmd0		3960996	0					
ANR	3961198	Identifier	r_core_cmd0		3960996	0					
ANR	3961199	ArgumentList	core		3960996	1					
ANR	3961200	Argument	core		3960996	0					
ANR	3961201	Identifier	core		3960996	0					
ANR	3961202	Argument	"""sr PC"""		3960996	1					
ANR	3961203	PrimaryExpression	"""sr PC"""		3960996	0					
ANR	3961204	ExpressionStatement	free ( title )	3518:2:88886:88898	3960996	7	True				
ANR	3961205	CallExpression	free ( title )		3960996	0					
ANR	3961206	Callee	free		3960996	0					
ANR	3961207	Identifier	free		3960996	0					
ANR	3961208	ArgumentList	title		3960996	1					
ANR	3961209	Argument	title		3960996	0					
ANR	3961210	Identifier	title		3960996	0					
ANR	3961211	ExpressionStatement	g -> is_instep = false	3519:2:88902:88922	3960996	8	True				
ANR	3961212	AssignmentExpression	g -> is_instep = false		3960996	0		=			
ANR	3961213	PtrMemberAccess	g -> is_instep		3960996	0					
ANR	3961214	Identifier	g		3960996	0					
ANR	3961215	Identifier	is_instep		3960996	1					
ANR	3961216	Identifier	false		3960996	1					
ANR	3961217	IfStatement	if ( grd -> follow_offset )		3960996	8					
ANR	3961218	Condition	grd -> follow_offset	3522:5:88933:88950	3960996	0	True				
ANR	3961219	PtrMemberAccess	grd -> follow_offset		3960996	0					
ANR	3961220	Identifier	grd		3960996	0					
ANR	3961221	Identifier	follow_offset		3960996	1					
ANR	3961222	CompoundStatement		32:25:826:826	3960996	1					
ANR	3961223	IfStatement	"if ( r_io_is_valid_offset ( core -> io , core -> offset , 0 ) )"		3960996	0					
ANR	3961224	Condition	"r_io_is_valid_offset ( core -> io , core -> offset , 0 )"	3523:6:88961:89008	3960996	0	True				
ANR	3961225	CallExpression	"r_io_is_valid_offset ( core -> io , core -> offset , 0 )"		3960996	0					
ANR	3961226	Callee	r_io_is_valid_offset		3960996	0					
ANR	3961227	Identifier	r_io_is_valid_offset		3960996	0					
ANR	3961228	ArgumentList	core -> io		3960996	1					
ANR	3961229	Argument	core -> io		3960996	0					
ANR	3961230	PtrMemberAccess	core -> io		3960996	0					
ANR	3961231	Identifier	core		3960996	0					
ANR	3961232	Identifier	io		3960996	1					
ANR	3961233	Argument	core -> offset		3960996	1					
ANR	3961234	PtrMemberAccess	core -> offset		3960996	0					
ANR	3961235	Identifier	core		3960996	0					
ANR	3961236	Identifier	offset		3960996	1					
ANR	3961237	Argument	0		3960996	2					
ANR	3961238	PrimaryExpression	0		3960996	0					
ANR	3961239	CompoundStatement		33:56:884:884	3960996	1					
ANR	3961240	ExpressionStatement	"f = r_anal_get_fcn_in ( core -> anal , core -> offset , 0 )"	3524:3:89016:89067	3960996	0	True				
ANR	3961241	AssignmentExpression	"f = r_anal_get_fcn_in ( core -> anal , core -> offset , 0 )"		3960996	0		=			
ANR	3961242	Identifier	f		3960996	0					
ANR	3961243	CallExpression	"r_anal_get_fcn_in ( core -> anal , core -> offset , 0 )"		3960996	1					
ANR	3961244	Callee	r_anal_get_fcn_in		3960996	0					
ANR	3961245	Identifier	r_anal_get_fcn_in		3960996	0					
ANR	3961246	ArgumentList	core -> anal		3960996	1					
ANR	3961247	Argument	core -> anal		3960996	0					
ANR	3961248	PtrMemberAccess	core -> anal		3960996	0					
ANR	3961249	Identifier	core		3960996	0					
ANR	3961250	Identifier	anal		3960996	1					
ANR	3961251	Argument	core -> offset		3960996	1					
ANR	3961252	PtrMemberAccess	core -> offset		3960996	0					
ANR	3961253	Identifier	core		3960996	0					
ANR	3961254	Identifier	offset		3960996	1					
ANR	3961255	Argument	0		3960996	2					
ANR	3961256	PrimaryExpression	0		3960996	0					
ANR	3961257	IfStatement	if ( ! f )		3960996	1					
ANR	3961258	Condition	! f	3525:7:89076:89077	3960996	0	True				
ANR	3961259	UnaryOperationExpression	! f		3960996	0					
ANR	3961260	UnaryOperator	!		3960996	0					
ANR	3961261	Identifier	f		3960996	1					
ANR	3961262	CompoundStatement		35:11:953:953	3960996	1					
ANR	3961263	IfStatement	if ( ! g -> is_dis )		3960996	0					
ANR	3961264	Condition	! g -> is_dis	3526:8:89090:89099	3960996	0	True				
ANR	3961265	UnaryOperationExpression	! g -> is_dis		3960996	0					
ANR	3961266	UnaryOperator	!		3960996	0					
ANR	3961267	PtrMemberAccess	g -> is_dis		3960996	1					
ANR	3961268	Identifier	g		3960996	0					
ANR	3961269	Identifier	is_dis		3960996	1					
ANR	3961270	CompoundStatement		36:20:975:975	3960996	1					
ANR	3961271	Statement	if	3527:5:89109:89110	3960996	0	True				
ANR	3961272	Statement	(	3527:8:89112:89112	3960996	1	True				
ANR	3961273	Statement	!	3527:9:89113:89113	3960996	2	True				
ANR	3961274	Statement	r_cons_yesno	3527:10:89114:89125	3960996	3	True				
ANR	3961275	Statement	(	3527:23:89127:89127	3960996	4	True				
ANR	3961276	Statement	'y'	3527:24:89128:89130	3960996	5	True				
ANR	3961277	Statement	","	3527:27:89131:89131	3960996	6	True				
ANR	3961278	Statement	"""\\rNo function at 0x%08"""	3527:29:89133:89156	3960996	7	True				
ANR	3961279	Statement	PFMT64x	3527:53:89157:89163	3960996	8	True				
ANR	3961280	Statement	""". Define it here (Y/n)? """	3527:60:89164:89189	3960996	9	True				
ANR	3961281	Statement	","	3527:86:89190:89190	3960996	10	True				
ANR	3961282	Statement	core	3527:88:89192:89195	3960996	11	True				
ANR	3961283	Statement	->	3527:92:89196:89197	3960996	12	True				
ANR	3961284	Statement	offset	3527:94:89198:89203	3960996	13	True				
ANR	3961285	Statement	)	3527:100:89204:89204	3960996	14	True				
ANR	3961286	Statement	)	3527:101:89205:89205	3960996	15	True				
ANR	3961287	CompoundStatement		37:103:1080:1080	3960996	16					
ANR	3961288	ReturnStatement	return 0 ;	3528:6:89215:89223	3960996	0	True				
ANR	3961289	PrimaryExpression	0		3960996	0					
ANR	3961290	ExpressionStatement	"r_core_cmd0 ( core , ""af"" )"	3530:5:89237:89261	3960996	17	True				
ANR	3961291	CallExpression	"r_core_cmd0 ( core , ""af"" )"		3960996	0					
ANR	3961292	Callee	r_core_cmd0		3960996	0					
ANR	3961293	Identifier	r_core_cmd0		3960996	0					
ANR	3961294	ArgumentList	core		3960996	1					
ANR	3961295	Argument	core		3960996	0					
ANR	3961296	Identifier	core		3960996	0					
ANR	3961297	Argument	"""af"""		3960996	1					
ANR	3961298	PrimaryExpression	"""af"""		3960996	0					
ANR	3961299	ExpressionStatement	"f = r_anal_get_fcn_in ( core -> anal , core -> offset , 0 )"	3532:4:89273:89324	3960996	1	True				
ANR	3961300	AssignmentExpression	"f = r_anal_get_fcn_in ( core -> anal , core -> offset , 0 )"		3960996	0		=			
ANR	3961301	Identifier	f		3960996	0					
ANR	3961302	CallExpression	"r_anal_get_fcn_in ( core -> anal , core -> offset , 0 )"		3960996	1					
ANR	3961303	Callee	r_anal_get_fcn_in		3960996	0					
ANR	3961304	Identifier	r_anal_get_fcn_in		3960996	0					
ANR	3961305	ArgumentList	core -> anal		3960996	1					
ANR	3961306	Argument	core -> anal		3960996	0					
ANR	3961307	PtrMemberAccess	core -> anal		3960996	0					
ANR	3961308	Identifier	core		3960996	0					
ANR	3961309	Identifier	anal		3960996	1					
ANR	3961310	Argument	core -> offset		3960996	1					
ANR	3961311	PtrMemberAccess	core -> offset		3960996	0					
ANR	3961312	Identifier	core		3960996	0					
ANR	3961313	Identifier	offset		3960996	1					
ANR	3961314	Argument	0		3960996	2					
ANR	3961315	PrimaryExpression	0		3960996	0					
ANR	3961316	ExpressionStatement	g -> need_reload_nodes = true	3533:4:89330:89357	3960996	2	True				
ANR	3961317	AssignmentExpression	g -> need_reload_nodes = true		3960996	0		=			
ANR	3961318	PtrMemberAccess	g -> need_reload_nodes		3960996	0					
ANR	3961319	Identifier	g		3960996	0					
ANR	3961320	Identifier	need_reload_nodes		3960996	1					
ANR	3961321	Identifier	true		3960996	1					
ANR	3961322	IfStatement	if ( f && fcn && f != * fcn )		3960996	2					
ANR	3961323	Condition	f && fcn && f != * fcn	3535:7:89371:89391	3960996	0	True				
ANR	3961324	AndExpression	f && fcn && f != * fcn		3960996	0		&&			
ANR	3961325	Identifier	f		3960996	0					
ANR	3961326	AndExpression	fcn && f != * fcn		3960996	1		&&			
ANR	3961327	Identifier	fcn		3960996	0					
ANR	3961328	EqualityExpression	f != * fcn		3960996	1		!=			
ANR	3961329	Identifier	f		3960996	0					
ANR	3961330	UnaryOperationExpression	* fcn		3960996	1					
ANR	3961331	UnaryOperator	*		3960996	0					
ANR	3961332	Identifier	fcn		3960996	1					
ANR	3961333	CompoundStatement		45:30:1267:1267	3960996	1					
ANR	3961334	ExpressionStatement	* fcn = f	3536:4:89400:89408	3960996	0	True				
ANR	3961335	AssignmentExpression	* fcn = f		3960996	0		=			
ANR	3961336	UnaryOperationExpression	* fcn		3960996	0					
ANR	3961337	UnaryOperator	*		3960996	0					
ANR	3961338	Identifier	fcn		3960996	1					
ANR	3961339	Identifier	f		3960996	1					
ANR	3961340	ExpressionStatement	g -> need_reload_nodes = true	3537:4:89414:89441	3960996	1	True				
ANR	3961341	AssignmentExpression	g -> need_reload_nodes = true		3960996	0		=			
ANR	3961342	PtrMemberAccess	g -> need_reload_nodes		3960996	0					
ANR	3961343	Identifier	g		3960996	0					
ANR	3961344	Identifier	need_reload_nodes		3960996	1					
ANR	3961345	Identifier	true		3960996	1					
ANR	3961346	ExpressionStatement	g -> force_update_seek = true	3538:4:89447:89474	3960996	2	True				
ANR	3961347	AssignmentExpression	g -> force_update_seek = true		3960996	0		=			
ANR	3961348	PtrMemberAccess	g -> force_update_seek		3960996	0					
ANR	3961349	Identifier	g		3960996	0					
ANR	3961350	Identifier	force_update_seek		3960996	1					
ANR	3961351	Identifier	true		3960996	1					
ANR	3961352	ElseStatement	else		3960996	0					
ANR	3961353	CompoundStatement		50:9:1363:1363	3960996	0					
ANR	3961354	ExpressionStatement	"r_cons_message ( ""This is not a valid offset\\n"" )"	3542:3:89573:89620	3960996	0	True				
ANR	3961355	CallExpression	"r_cons_message ( ""This is not a valid offset\\n"" )"		3960996	0					
ANR	3961356	Callee	r_cons_message		3960996	0					
ANR	3961357	Identifier	r_cons_message		3960996	0					
ANR	3961358	ArgumentList	"""This is not a valid offset\\n"""		3960996	1					
ANR	3961359	Argument	"""This is not a valid offset\\n"""		3960996	0					
ANR	3961360	PrimaryExpression	"""This is not a valid offset\\n"""		3960996	0					
ANR	3961361	ExpressionStatement	r_cons_flush ( )	3543:3:89625:89640	3960996	1	True				
ANR	3961362	CallExpression	r_cons_flush ( )		3960996	0					
ANR	3961363	Callee	r_cons_flush		3960996	0					
ANR	3961364	Identifier	r_cons_flush		3960996	0					
ANR	3961365	ArgumentList			3960996	1					
ANR	3961366	IdentifierDeclStatement	"int res = agraph_print ( g , grd -> fs , core , * fcn ) ;"	3547:1:89651:89698	3960996	9	True				
ANR	3961367	IdentifierDecl	"res = agraph_print ( g , grd -> fs , core , * fcn )"		3960996	0					
ANR	3961368	IdentifierDeclType	int		3960996	0					
ANR	3961369	Identifier	res		3960996	1					
ANR	3961370	AssignmentExpression	"res = agraph_print ( g , grd -> fs , core , * fcn )"		3960996	2		=			
ANR	3961371	Identifier	res		3960996	0					
ANR	3961372	CallExpression	"agraph_print ( g , grd -> fs , core , * fcn )"		3960996	1					
ANR	3961373	Callee	agraph_print		3960996	0					
ANR	3961374	Identifier	agraph_print		3960996	0					
ANR	3961375	ArgumentList	g		3960996	1					
ANR	3961376	Argument	g		3960996	0					
ANR	3961377	Identifier	g		3960996	0					
ANR	3961378	Argument	grd -> fs		3960996	1					
ANR	3961379	PtrMemberAccess	grd -> fs		3960996	0					
ANR	3961380	Identifier	grd		3960996	0					
ANR	3961381	Identifier	fs		3960996	1					
ANR	3961382	Argument	core		3960996	2					
ANR	3961383	Identifier	core		3960996	0					
ANR	3961384	Argument	* fcn		3960996	3					
ANR	3961385	UnaryOperationExpression	* fcn		3960996	0					
ANR	3961386	UnaryOperator	*		3960996	0					
ANR	3961387	Identifier	fcn		3960996	1					
ANR	3961388	IfStatement	"if ( r_config_get_i ( core -> config , ""scr.scrollbar"" ) )"		3960996	10					
ANR	3961389	Condition	"r_config_get_i ( core -> config , ""scr.scrollbar"" )"	3549:5:89706:89751	3960996	0	True				
ANR	3961390	CallExpression	"r_config_get_i ( core -> config , ""scr.scrollbar"" )"		3960996	0					
ANR	3961391	Callee	r_config_get_i		3960996	0					
ANR	3961392	Identifier	r_config_get_i		3960996	0					
ANR	3961393	ArgumentList	core -> config		3960996	1					
ANR	3961394	Argument	core -> config		3960996	0					
ANR	3961395	PtrMemberAccess	core -> config		3960996	0					
ANR	3961396	Identifier	core		3960996	0					
ANR	3961397	Identifier	config		3960996	1					
ANR	3961398	Argument	"""scr.scrollbar"""		3960996	1					
ANR	3961399	PrimaryExpression	"""scr.scrollbar"""		3960996	0					
ANR	3961400	CompoundStatement		59:53:1627:1627	3960996	1					
ANR	3961401	ExpressionStatement	r_core_print_scrollbar ( core )	3550:2:89758:89787	3960996	0	True				
ANR	3961402	CallExpression	r_core_print_scrollbar ( core )		3960996	0					
ANR	3961403	Callee	r_core_print_scrollbar		3960996	0					
ANR	3961404	Identifier	r_core_print_scrollbar		3960996	0					
ANR	3961405	ArgumentList	core		3960996	1					
ANR	3961406	Argument	core		3960996	0					
ANR	3961407	Identifier	core		3960996	0					
ANR	3961408	ReturnStatement	return res ;	3553:1:89795:89805	3960996	11	True				
ANR	3961409	Identifier	res		3960996	0					
ANR	3961410	ReturnType	static int		3960996	1					
ANR	3961411	Identifier	agraph_refresh		3960996	2					
ANR	3961412	ParameterList	struct agraph_refresh_data * grd		3960996	3					
ANR	3961413	Parameter	struct agraph_refresh_data * grd	3491:26:88093:88123	3960996	0	True				
ANR	3961414	ParameterType	struct agraph_refresh_data *		3960996	0					
ANR	3961415	Identifier	grd		3960996	1					
ANR	3961416	CFGEntryNode	ENTRY		3960996		True				
ANR	3961417	CFGExitNode	EXIT		3960996		True				
ANR	3961418	Symbol	grd -> g		3960996						
ANR	3961419	Symbol	* fcn		3960996						
ANR	3961420	Symbol	R_REG_NAME_PC		3960996						
ANR	3961421	Symbol	agraph_print		3960996						
ANR	3961422	Symbol	core -> offset		3960996						
ANR	3961423	Symbol	grd -> fcn		3960996						
ANR	3961424	Symbol	g -> is_instep		3960996						
ANR	3961425	Symbol	acur		3960996						
ANR	3961426	Symbol	core -> io -> debug		3960996						
ANR	3961427	Symbol	r_reg_get		3960996						
ANR	3961428	Symbol	strcmp		3960996						
ANR	3961429	Symbol	res		3960996						
ANR	3961430	Symbol	r_io_is_valid_offset		3960996						
ANR	3961431	Symbol	NULL		3960996						
ANR	3961432	Symbol	g -> need_reload_nodes		3960996						
ANR	3961433	Symbol	grd -> core		3960996						
ANR	3961434	Symbol	core		3960996						
ANR	3961435	Symbol	r_reg_get_name		3960996						
ANR	3961436	Symbol	r_config_get_i		3960996						
ANR	3961437	Symbol	true		3960996						
ANR	3961438	Symbol	* grd		3960996						
ANR	3961439	Symbol	* core -> dbg		3960996						
ANR	3961440	Symbol	* core		3960996						
ANR	3961441	Symbol	title		3960996						
ANR	3961442	Symbol	acur -> title		3960996						
ANR	3961443	Symbol	get_title		3960996						
ANR	3961444	Symbol	core -> anal		3960996						
ANR	3961445	Symbol	fcn		3960996						
ANR	3961446	Symbol	core -> io		3960996						
ANR	3961447	Symbol	r_core_anal_get_bbaddr		3960996						
ANR	3961448	Symbol	grd		3960996						
ANR	3961449	Symbol	r_cons_singleton		3960996						
ANR	3961450	Symbol	addr		3960996						
ANR	3961451	Symbol	* * core		3960996						
ANR	3961452	Symbol	core -> config		3960996						
ANR	3961453	Symbol	r_reg_get_value		3960996						
ANR	3961454	Symbol	get_anode		3960996						
ANR	3961455	Symbol	f		3960996						
ANR	3961456	Symbol	g		3960996						
ANR	3961457	Symbol	false		3960996						
ANR	3961458	Symbol	* acur		3960996						
ANR	3961459	Symbol	* core -> io		3960996						
ANR	3961460	Symbol	* g		3960996						
ANR	3961461	Symbol	r_cons_singleton ( ) -> event_data		3960996						
ANR	3961462	Symbol	r		3960996						
ANR	3961463	Symbol	g -> force_update_seek		3960996						
ANR	3961464	Symbol	pc		3960996						
ANR	3961465	Symbol	r_anal_get_fcn_in		3960996						
ANR	3961466	Symbol	core -> dbg -> reg		3960996						
ANR	3961467	Symbol	g -> curnode		3960996						
ANR	3961468	Symbol	g -> is_dis		3960996						
ANR	3961469	Symbol	grd -> fs		3960996						
ANR	3961470	Symbol	* r_cons_singleton		3960996						
ANR	3961471	Symbol	grd -> follow_offset		3960996						
ANR	3961472	Symbol	core -> dbg		3960996						
ANR	3961473	Function	agraph_refresh_oneshot	3556:0:89810:89962							
ANR	3961474	FunctionDef	agraph_refresh_oneshot (struct agraph_refresh_data * grd)		3961473	0					
ANR	3961475	CompoundStatement		3556:68:89878:89962	3961473	0					
ANR	3961476	ExpressionStatement	"r_core_task_enqueue_oneshot ( grd -> core , ( RCoreTaskOneShot ) agraph_refresh , grd )"	3557:1:89881:89960	3961473	0	True				
ANR	3961477	CallExpression	"r_core_task_enqueue_oneshot ( grd -> core , ( RCoreTaskOneShot ) agraph_refresh , grd )"		3961473	0					
ANR	3961478	Callee	r_core_task_enqueue_oneshot		3961473	0					
ANR	3961479	Identifier	r_core_task_enqueue_oneshot		3961473	0					
ANR	3961480	ArgumentList	grd -> core		3961473	1					
ANR	3961481	Argument	grd -> core		3961473	0					
ANR	3961482	PtrMemberAccess	grd -> core		3961473	0					
ANR	3961483	Identifier	grd		3961473	0					
ANR	3961484	Identifier	core		3961473	1					
ANR	3961485	Argument	( RCoreTaskOneShot ) agraph_refresh		3961473	1					
ANR	3961486	CastExpression	( RCoreTaskOneShot ) agraph_refresh		3961473	0					
ANR	3961487	CastTarget	RCoreTaskOneShot		3961473	0					
ANR	3961488	Identifier	agraph_refresh		3961473	1					
ANR	3961489	Argument	grd		3961473	2					
ANR	3961490	Identifier	grd		3961473	0					
ANR	3961491	ReturnType	static void		3961473	1					
ANR	3961492	Identifier	agraph_refresh_oneshot		3961473	2					
ANR	3961493	ParameterList	struct agraph_refresh_data * grd		3961473	3					
ANR	3961494	Parameter	struct agraph_refresh_data * grd	3556:35:89845:89875	3961473	0	True				
ANR	3961495	ParameterType	struct agraph_refresh_data *		3961473	0					
ANR	3961496	Identifier	grd		3961473	1					
ANR	3961497	CFGEntryNode	ENTRY		3961473		True				
ANR	3961498	CFGExitNode	EXIT		3961473		True				
ANR	3961499	Symbol	grd		3961473						
ANR	3961500	Symbol	grd -> core		3961473						
ANR	3961501	Symbol	agraph_refresh		3961473						
ANR	3961502	Symbol	* grd		3961473						
ANR	3961503	Function	agraph_toggle_speed	3560:0:89965:90153							
ANR	3961504	FunctionDef	"agraph_toggle_speed (RAGraph * g , RCore * core)"		3961503	0					
ANR	3961505	CompoundStatement		3560:57:90022:90153	3961503	0					
ANR	3961506	IdentifierDeclStatement	"const int alt = r_config_get_i ( core -> config , ""graph.scroll"" ) ;"	3561:1:90025:90086	3961503	0	True				
ANR	3961507	IdentifierDecl	"alt = r_config_get_i ( core -> config , ""graph.scroll"" )"		3961503	0					
ANR	3961508	IdentifierDeclType	const int		3961503	0					
ANR	3961509	Identifier	alt		3961503	1					
ANR	3961510	AssignmentExpression	"alt = r_config_get_i ( core -> config , ""graph.scroll"" )"		3961503	2		=			
ANR	3961511	Identifier	alt		3961503	0					
ANR	3961512	CallExpression	"r_config_get_i ( core -> config , ""graph.scroll"" )"		3961503	1					
ANR	3961513	Callee	r_config_get_i		3961503	0					
ANR	3961514	Identifier	r_config_get_i		3961503	0					
ANR	3961515	ArgumentList	core -> config		3961503	1					
ANR	3961516	Argument	core -> config		3961503	0					
ANR	3961517	PtrMemberAccess	core -> config		3961503	0					
ANR	3961518	Identifier	core		3961503	0					
ANR	3961519	Identifier	config		3961503	1					
ANR	3961520	Argument	"""graph.scroll"""		3961503	1					
ANR	3961521	PrimaryExpression	"""graph.scroll"""		3961503	0					
ANR	3961522	ExpressionStatement	g -> movspeed = g -> movspeed == DEFAULT_SPEED ? alt : DEFAULT_SPEED	3562:1:90089:90151	3961503	1	True				
ANR	3961523	AssignmentExpression	g -> movspeed = g -> movspeed == DEFAULT_SPEED ? alt : DEFAULT_SPEED		3961503	0		=			
ANR	3961524	PtrMemberAccess	g -> movspeed		3961503	0					
ANR	3961525	Identifier	g		3961503	0					
ANR	3961526	Identifier	movspeed		3961503	1					
ANR	3961527	ConditionalExpression	g -> movspeed == DEFAULT_SPEED ? alt : DEFAULT_SPEED		3961503	1					
ANR	3961528	Condition	g -> movspeed == DEFAULT_SPEED		3961503	0					
ANR	3961529	EqualityExpression	g -> movspeed == DEFAULT_SPEED		3961503	0		==			
ANR	3961530	PtrMemberAccess	g -> movspeed		3961503	0					
ANR	3961531	Identifier	g		3961503	0					
ANR	3961532	Identifier	movspeed		3961503	1					
ANR	3961533	Identifier	DEFAULT_SPEED		3961503	1					
ANR	3961534	Identifier	alt		3961503	1					
ANR	3961535	Identifier	DEFAULT_SPEED		3961503	2					
ANR	3961536	ReturnType	static void		3961503	1					
ANR	3961537	Identifier	agraph_toggle_speed		3961503	2					
ANR	3961538	ParameterList	"RAGraph * g , RCore * core"		3961503	3					
ANR	3961539	Parameter	RAGraph * g	3560:32:89997:90006	3961503	0	True				
ANR	3961540	ParameterType	RAGraph *		3961503	0					
ANR	3961541	Identifier	g		3961503	1					
ANR	3961542	Parameter	RCore * core	3560:44:90009:90019	3961503	1	True				
ANR	3961543	ParameterType	RCore *		3961503	0					
ANR	3961544	Identifier	core		3961503	1					
ANR	3961545	CFGEntryNode	ENTRY		3961503		True				
ANR	3961546	CFGExitNode	EXIT		3961503		True				
ANR	3961547	Symbol	core -> config		3961503						
ANR	3961548	Symbol	core		3961503						
ANR	3961549	Symbol	* g		3961503						
ANR	3961550	Symbol	g -> movspeed		3961503						
ANR	3961551	Symbol	g		3961503						
ANR	3961552	Symbol	r_config_get_i		3961503						
ANR	3961553	Symbol	DEFAULT_SPEED		3961503						
ANR	3961554	Symbol	alt		3961503						
ANR	3961555	Symbol	* core		3961503						
ANR	3961556	Function	agraph_init	3565:0:90156:90522							
ANR	3961557	FunctionDef	agraph_init (RAGraph * g)		3961556	0					
ANR	3961558	CompoundStatement		3565:36:90192:90522	3961556	0					
ANR	3961559	ExpressionStatement	g -> is_callgraph = false	3566:1:90195:90218	3961556	0	True				
ANR	3961560	AssignmentExpression	g -> is_callgraph = false		3961556	0		=			
ANR	3961561	PtrMemberAccess	g -> is_callgraph		3961556	0					
ANR	3961562	Identifier	g		3961556	0					
ANR	3961563	Identifier	is_callgraph		3961556	1					
ANR	3961564	Identifier	false		3961556	1					
ANR	3961565	ExpressionStatement	g -> is_instep = false	3567:1:90221:90241	3961556	1	True				
ANR	3961566	AssignmentExpression	g -> is_instep = false		3961556	0		=			
ANR	3961567	PtrMemberAccess	g -> is_instep		3961556	0					
ANR	3961568	Identifier	g		3961556	0					
ANR	3961569	Identifier	is_instep		3961556	1					
ANR	3961570	Identifier	false		3961556	1					
ANR	3961571	ExpressionStatement	g -> need_reload_nodes = true	3568:1:90244:90271	3961556	2	True				
ANR	3961572	AssignmentExpression	g -> need_reload_nodes = true		3961556	0		=			
ANR	3961573	PtrMemberAccess	g -> need_reload_nodes		3961556	0					
ANR	3961574	Identifier	g		3961556	0					
ANR	3961575	Identifier	need_reload_nodes		3961556	1					
ANR	3961576	Identifier	true		3961556	1					
ANR	3961577	ExpressionStatement	g -> show_node_titles = true	3569:1:90274:90300	3961556	3	True				
ANR	3961578	AssignmentExpression	g -> show_node_titles = true		3961556	0		=			
ANR	3961579	PtrMemberAccess	g -> show_node_titles		3961556	0					
ANR	3961580	Identifier	g		3961556	0					
ANR	3961581	Identifier	show_node_titles		3961556	1					
ANR	3961582	Identifier	true		3961556	1					
ANR	3961583	ExpressionStatement	g -> show_node_body = true	3570:1:90303:90327	3961556	4	True				
ANR	3961584	AssignmentExpression	g -> show_node_body = true		3961556	0		=			
ANR	3961585	PtrMemberAccess	g -> show_node_body		3961556	0					
ANR	3961586	Identifier	g		3961556	0					
ANR	3961587	Identifier	show_node_body		3961556	1					
ANR	3961588	Identifier	true		3961556	1					
ANR	3961589	ExpressionStatement	g -> force_update_seek = true	3571:1:90330:90357	3961556	5	True				
ANR	3961590	AssignmentExpression	g -> force_update_seek = true		3961556	0		=			
ANR	3961591	PtrMemberAccess	g -> force_update_seek		3961556	0					
ANR	3961592	Identifier	g		3961556	0					
ANR	3961593	Identifier	force_update_seek		3961556	1					
ANR	3961594	Identifier	true		3961556	1					
ANR	3961595	ExpressionStatement	g -> graph = r_graph_new ( )	3572:1:90360:90385	3961556	6	True				
ANR	3961596	AssignmentExpression	g -> graph = r_graph_new ( )		3961556	0		=			
ANR	3961597	PtrMemberAccess	g -> graph		3961556	0					
ANR	3961598	Identifier	g		3961556	0					
ANR	3961599	Identifier	graph		3961556	1					
ANR	3961600	CallExpression	r_graph_new ( )		3961556	1					
ANR	3961601	Callee	r_graph_new		3961556	0					
ANR	3961602	Identifier	r_graph_new		3961556	0					
ANR	3961603	ArgumentList			3961556	1					
ANR	3961604	ExpressionStatement	g -> nodes = sdb_new0 ( )	3573:1:90388:90410	3961556	7	True				
ANR	3961605	AssignmentExpression	g -> nodes = sdb_new0 ( )		3961556	0		=			
ANR	3961606	PtrMemberAccess	g -> nodes		3961556	0					
ANR	3961607	Identifier	g		3961556	0					
ANR	3961608	Identifier	nodes		3961556	1					
ANR	3961609	CallExpression	sdb_new0 ( )		3961556	1					
ANR	3961610	Callee	sdb_new0		3961556	0					
ANR	3961611	Identifier	sdb_new0		3961556	0					
ANR	3961612	ArgumentList			3961556	1					
ANR	3961613	ExpressionStatement	g -> edgemode = 2	3574:1:90413:90428	3961556	8	True				
ANR	3961614	AssignmentExpression	g -> edgemode = 2		3961556	0		=			
ANR	3961615	PtrMemberAccess	g -> edgemode		3961556	0					
ANR	3961616	Identifier	g		3961556	0					
ANR	3961617	Identifier	edgemode		3961556	1					
ANR	3961618	PrimaryExpression	2		3961556	1					
ANR	3961619	ExpressionStatement	g -> zoom = ZOOM_DEFAULT	3575:1:90431:90453	3961556	9	True				
ANR	3961620	AssignmentExpression	g -> zoom = ZOOM_DEFAULT		3961556	0		=			
ANR	3961621	PtrMemberAccess	g -> zoom		3961556	0					
ANR	3961622	Identifier	g		3961556	0					
ANR	3961623	Identifier	zoom		3961556	1					
ANR	3961624	Identifier	ZOOM_DEFAULT		3961556	1					
ANR	3961625	ExpressionStatement	g -> hints = 1	3576:1:90456:90468	3961556	10	True				
ANR	3961626	AssignmentExpression	g -> hints = 1		3961556	0		=			
ANR	3961627	PtrMemberAccess	g -> hints		3961556	0					
ANR	3961628	Identifier	g		3961556	0					
ANR	3961629	Identifier	hints		3961556	1					
ANR	3961630	PrimaryExpression	1		3961556	1					
ANR	3961631	ExpressionStatement	g -> movspeed = DEFAULT_SPEED	3577:1:90471:90498	3961556	11	True				
ANR	3961632	AssignmentExpression	g -> movspeed = DEFAULT_SPEED		3961556	0		=			
ANR	3961633	PtrMemberAccess	g -> movspeed		3961556	0					
ANR	3961634	Identifier	g		3961556	0					
ANR	3961635	Identifier	movspeed		3961556	1					
ANR	3961636	Identifier	DEFAULT_SPEED		3961556	1					
ANR	3961637	ExpressionStatement	g -> db = sdb_new0 ( )	3578:1:90501:90520	3961556	12	True				
ANR	3961638	AssignmentExpression	g -> db = sdb_new0 ( )		3961556	0		=			
ANR	3961639	PtrMemberAccess	g -> db		3961556	0					
ANR	3961640	Identifier	g		3961556	0					
ANR	3961641	Identifier	db		3961556	1					
ANR	3961642	CallExpression	sdb_new0 ( )		3961556	1					
ANR	3961643	Callee	sdb_new0		3961556	0					
ANR	3961644	Identifier	sdb_new0		3961556	0					
ANR	3961645	ArgumentList			3961556	1					
ANR	3961646	ReturnType	static void		3961556	1					
ANR	3961647	Identifier	agraph_init		3961556	2					
ANR	3961648	ParameterList	RAGraph * g		3961556	3					
ANR	3961649	Parameter	RAGraph * g	3565:24:90180:90189	3961556	0	True				
ANR	3961650	ParameterType	RAGraph *		3961556	0					
ANR	3961651	Identifier	g		3961556	1					
ANR	3961652	CFGEntryNode	ENTRY		3961556		True				
ANR	3961653	CFGExitNode	EXIT		3961556		True				
ANR	3961654	Symbol	ZOOM_DEFAULT		3961556						
ANR	3961655	Symbol	sdb_new0		3961556						
ANR	3961656	Symbol	g -> hints		3961556						
ANR	3961657	Symbol	g -> need_reload_nodes		3961556						
ANR	3961658	Symbol	g -> show_node_body		3961556						
ANR	3961659	Symbol	g -> zoom		3961556						
ANR	3961660	Symbol	g -> movspeed		3961556						
ANR	3961661	Symbol	g		3961556						
ANR	3961662	Symbol	DEFAULT_SPEED		3961556						
ANR	3961663	Symbol	g -> db		3961556						
ANR	3961664	Symbol	false		3961556						
ANR	3961665	Symbol	r_graph_new		3961556						
ANR	3961666	Symbol	g -> show_node_titles		3961556						
ANR	3961667	Symbol	* g		3961556						
ANR	3961668	Symbol	g -> is_instep		3961556						
ANR	3961669	Symbol	g -> force_update_seek		3961556						
ANR	3961670	Symbol	g -> edgemode		3961556						
ANR	3961671	Symbol	g -> graph		3961556						
ANR	3961672	Symbol	g -> nodes		3961556						
ANR	3961673	Symbol	true		3961556						
ANR	3961674	Symbol	g -> is_callgraph		3961556						
ANR	3961675	Function	free_anode	3581:0:90525:90607							
ANR	3961676	FunctionDef	free_anode (RANode * n)		3961675	0					
ANR	3961677	CompoundStatement		3581:34:90559:90607	3961675	0					
ANR	3961678	ExpressionStatement	free ( n -> title )	3582:1:90562:90577	3961675	0	True				
ANR	3961679	CallExpression	free ( n -> title )		3961675	0					
ANR	3961680	Callee	free		3961675	0					
ANR	3961681	Identifier	free		3961675	0					
ANR	3961682	ArgumentList	n -> title		3961675	1					
ANR	3961683	Argument	n -> title		3961675	0					
ANR	3961684	PtrMemberAccess	n -> title		3961675	0					
ANR	3961685	Identifier	n		3961675	0					
ANR	3961686	Identifier	title		3961675	1					
ANR	3961687	ExpressionStatement	free ( n -> body )	3583:1:90580:90594	3961675	1	True				
ANR	3961688	CallExpression	free ( n -> body )		3961675	0					
ANR	3961689	Callee	free		3961675	0					
ANR	3961690	Identifier	free		3961675	0					
ANR	3961691	ArgumentList	n -> body		3961675	1					
ANR	3961692	Argument	n -> body		3961675	0					
ANR	3961693	PtrMemberAccess	n -> body		3961675	0					
ANR	3961694	Identifier	n		3961675	0					
ANR	3961695	Identifier	body		3961675	1					
ANR	3961696	ExpressionStatement	free ( n )	3584:1:90597:90605	3961675	2	True				
ANR	3961697	CallExpression	free ( n )		3961675	0					
ANR	3961698	Callee	free		3961675	0					
ANR	3961699	Identifier	free		3961675	0					
ANR	3961700	ArgumentList	n		3961675	1					
ANR	3961701	Argument	n		3961675	0					
ANR	3961702	Identifier	n		3961675	0					
ANR	3961703	ReturnType	static void		3961675	1					
ANR	3961704	Identifier	free_anode		3961675	2					
ANR	3961705	ParameterList	RANode * n		3961675	3					
ANR	3961706	Parameter	RANode * n	3581:23:90548:90556	3961675	0	True				
ANR	3961707	ParameterType	RANode *		3961675	0					
ANR	3961708	Identifier	n		3961675	1					
ANR	3961709	CFGEntryNode	ENTRY		3961675		True				
ANR	3961710	CFGExitNode	EXIT		3961675		True				
ANR	3961711	Symbol	* n		3961675						
ANR	3961712	Symbol	n -> title		3961675						
ANR	3961713	Symbol	n -> body		3961675						
ANR	3961714	Symbol	n		3961675						
ANR	3961715	Function	graphNodeMove	3587:0:90610:91163							
ANR	3961716	FunctionDef	"graphNodeMove (RAGraph * g , int dir , int speed)"		3961715	0					
ANR	3961717	CompoundStatement		3587:58:90668:91163	3961715	0					
ANR	3961718	IdentifierDeclStatement	int delta = ( dir == 'k' ) ? - 1 : 1 ;	3588:1:90671:90702	3961715	0	True				
ANR	3961719	IdentifierDecl	delta = ( dir == 'k' ) ? - 1 : 1		3961715	0					
ANR	3961720	IdentifierDeclType	int		3961715	0					
ANR	3961721	Identifier	delta		3961715	1					
ANR	3961722	AssignmentExpression	delta = ( dir == 'k' ) ? - 1 : 1		3961715	2		=			
ANR	3961723	Identifier	delta		3961715	0					
ANR	3961724	ConditionalExpression	( dir == 'k' ) ? - 1 : 1		3961715	1					
ANR	3961725	Condition	dir == 'k'		3961715	0					
ANR	3961726	EqualityExpression	dir == 'k'		3961715	0		==			
ANR	3961727	Identifier	dir		3961715	0					
ANR	3961728	PrimaryExpression	'k'		3961715	1					
ANR	3961729	UnaryOperationExpression	- 1		3961715	1					
ANR	3961730	UnaryOperator	-		3961715	0					
ANR	3961731	PrimaryExpression	1		3961715	1					
ANR	3961732	PrimaryExpression	1		3961715	2					
ANR	3961733	IfStatement	if ( dir == 'H' )		3961715	1					
ANR	3961734	Condition	dir == 'H'	3589:5:90709:90718	3961715	0	True				
ANR	3961735	EqualityExpression	dir == 'H'		3961715	0		==			
ANR	3961736	Identifier	dir		3961715	0					
ANR	3961737	PrimaryExpression	'H'		3961715	1					
ANR	3961738	CompoundStatement		3:17:52:52	3961715	1					
ANR	3961739	ReturnStatement	return ;	3590:2:90725:90731	3961715	0	True				
ANR	3961740	IfStatement	if ( dir == 'h' || dir == 'l' )		3961715	2					
ANR	3961741	Condition	dir == 'h' || dir == 'l'	3592:5:90741:90764	3961715	0	True				
ANR	3961742	OrExpression	dir == 'h' || dir == 'l'		3961715	0		||			
ANR	3961743	EqualityExpression	dir == 'h'		3961715	0		==			
ANR	3961744	Identifier	dir		3961715	0					
ANR	3961745	PrimaryExpression	'h'		3961715	1					
ANR	3961746	EqualityExpression	dir == 'l'		3961715	1		==			
ANR	3961747	Identifier	dir		3961715	0					
ANR	3961748	PrimaryExpression	'l'		3961715	1					
ANR	3961749	CompoundStatement		6:31:98:98	3961715	1					
ANR	3961750	IfStatement	if ( is_mini ( g ) )		3961715	0					
ANR	3961751	Condition	is_mini ( g )	3594:6:90798:90808	3961715	0	True				
ANR	3961752	CallExpression	is_mini ( g )		3961715	0					
ANR	3961753	Callee	is_mini		3961715	0					
ANR	3961754	Identifier	is_mini		3961715	0					
ANR	3961755	ArgumentList	g		3961715	1					
ANR	3961756	Argument	g		3961715	0					
ANR	3961757	Identifier	g		3961715	0					
ANR	3961758	CompoundStatement		8:19:142:142	3961715	1					
ANR	3961759	ExpressionStatement	discroll = 0	3595:3:90816:90828	3961715	0	True				
ANR	3961760	AssignmentExpression	discroll = 0		3961715	0		=			
ANR	3961761	Identifier	discroll		3961715	0					
ANR	3961762	PrimaryExpression	0		3961715	1					
ANR	3961763	ElseStatement	else		3961715	0					
ANR	3961764	CompoundStatement		11:3:175:206	3961715	0					
ANR	3961765	IdentifierDeclStatement	int delta = ( dir == 'l' ) ? 1 : - 1 ;	3597:3:90844:90875	3961715	0	True				
ANR	3961766	IdentifierDecl	delta = ( dir == 'l' ) ? 1 : - 1		3961715	0					
ANR	3961767	IdentifierDeclType	int		3961715	0					
ANR	3961768	Identifier	delta		3961715	1					
ANR	3961769	AssignmentExpression	delta = ( dir == 'l' ) ? 1 : - 1		3961715	2		=			
ANR	3961770	Identifier	delta		3961715	0					
ANR	3961771	ConditionalExpression	( dir == 'l' ) ? 1 : - 1		3961715	1					
ANR	3961772	Condition	dir == 'l'		3961715	0					
ANR	3961773	EqualityExpression	dir == 'l'		3961715	0		==			
ANR	3961774	Identifier	dir		3961715	0					
ANR	3961775	PrimaryExpression	'l'		3961715	1					
ANR	3961776	PrimaryExpression	1		3961715	1					
ANR	3961777	UnaryOperationExpression	- 1		3961715	2					
ANR	3961778	UnaryOperator	-		3961715	0					
ANR	3961779	PrimaryExpression	1		3961715	1					
ANR	3961780	ExpressionStatement	"move_current_node ( g , speed * delta , 0 )"	3598:3:90880:90919	3961715	1	True				
ANR	3961781	CallExpression	"move_current_node ( g , speed * delta , 0 )"		3961715	0					
ANR	3961782	Callee	move_current_node		3961715	0					
ANR	3961783	Identifier	move_current_node		3961715	0					
ANR	3961784	ArgumentList	g		3961715	1					
ANR	3961785	Argument	g		3961715	0					
ANR	3961786	Identifier	g		3961715	0					
ANR	3961787	Argument	speed * delta		3961715	1					
ANR	3961788	MultiplicativeExpression	speed * delta		3961715	0		*			
ANR	3961789	Identifier	speed		3961715	0					
ANR	3961790	Identifier	delta		3961715	1					
ANR	3961791	Argument	0		3961715	2					
ANR	3961792	PrimaryExpression	0		3961715	0					
ANR	3961793	ReturnStatement	return ;	3600:2:90927:90933	3961715	1	True				
ANR	3961794	IdentifierDeclStatement	RCore * core = NULL ;	3602:1:90939:90957	3961715	3	True				
ANR	3961795	IdentifierDecl	* core = NULL		3961715	0					
ANR	3961796	IdentifierDeclType	RCore *		3961715	0					
ANR	3961797	Identifier	core		3961715	1					
ANR	3961798	AssignmentExpression	* core = NULL		3961715	2		=			
ANR	3961799	Identifier	NULL		3961715	0					
ANR	3961800	Identifier	NULL		3961715	1					
ANR	3961801	IfStatement	if ( is_mini ( g ) )		3961715	4					
ANR	3961802	Condition	is_mini ( g )	3604:5:90984:90994	3961715	0	True				
ANR	3961803	CallExpression	is_mini ( g )		3961715	0					
ANR	3961804	Callee	is_mini		3961715	0					
ANR	3961805	Identifier	is_mini		3961715	0					
ANR	3961806	ArgumentList	g		3961715	1					
ANR	3961807	Argument	g		3961715	0					
ANR	3961808	Identifier	g		3961715	0					
ANR	3961809	CompoundStatement		18:18:328:328	3961715	1					
ANR	3961810	ExpressionStatement	discroll += ( delta * speed )	3605:2:91001:91028	3961715	0	True				
ANR	3961811	AssignmentExpression	discroll += ( delta * speed )		3961715	0		+=			
ANR	3961812	Identifier	discroll		3961715	0					
ANR	3961813	MultiplicativeExpression	delta * speed		3961715	1		*			
ANR	3961814	Identifier	delta		3961715	0					
ANR	3961815	Identifier	speed		3961715	1					
ANR	3961816	ElseStatement	else		3961715	0					
ANR	3961817	IfStatement	if ( g -> is_dis )		3961715	0					
ANR	3961818	Condition	g -> is_dis	3606:12:91042:91050	3961715	0	True				
ANR	3961819	PtrMemberAccess	g -> is_dis		3961715	0					
ANR	3961820	Identifier	g		3961715	0					
ANR	3961821	Identifier	is_dis		3961715	1					
ANR	3961822	CompoundStatement		20:23:384:384	3961715	1					
ANR	3961823	ExpressionStatement	"r_core_cmdf ( core , ""so %d"" , ( delta * 4 ) * speed )"	3607:2:91057:91105	3961715	0	True				
ANR	3961824	CallExpression	"r_core_cmdf ( core , ""so %d"" , ( delta * 4 ) * speed )"		3961715	0					
ANR	3961825	Callee	r_core_cmdf		3961715	0					
ANR	3961826	Identifier	r_core_cmdf		3961715	0					
ANR	3961827	ArgumentList	core		3961715	1					
ANR	3961828	Argument	core		3961715	0					
ANR	3961829	Identifier	core		3961715	0					
ANR	3961830	Argument	"""so %d"""		3961715	1					
ANR	3961831	PrimaryExpression	"""so %d"""		3961715	0					
ANR	3961832	Argument	( delta * 4 ) * speed		3961715	2					
ANR	3961833	MultiplicativeExpression	( delta * 4 ) * speed		3961715	0		*			
ANR	3961834	MultiplicativeExpression	delta * 4		3961715	0		*			
ANR	3961835	Identifier	delta		3961715	0					
ANR	3961836	PrimaryExpression	4		3961715	1					
ANR	3961837	Identifier	speed		3961715	1					
ANR	3961838	ElseStatement	else		3961715	0					
ANR	3961839	CompoundStatement		22:8:446:446	3961715	0					
ANR	3961840	ExpressionStatement	"move_current_node ( g , 0 , delta * speed )"	3609:2:91119:91158	3961715	0	True				
ANR	3961841	CallExpression	"move_current_node ( g , 0 , delta * speed )"		3961715	0					
ANR	3961842	Callee	move_current_node		3961715	0					
ANR	3961843	Identifier	move_current_node		3961715	0					
ANR	3961844	ArgumentList	g		3961715	1					
ANR	3961845	Argument	g		3961715	0					
ANR	3961846	Identifier	g		3961715	0					
ANR	3961847	Argument	0		3961715	1					
ANR	3961848	PrimaryExpression	0		3961715	0					
ANR	3961849	Argument	delta * speed		3961715	2					
ANR	3961850	MultiplicativeExpression	delta * speed		3961715	0		*			
ANR	3961851	Identifier	delta		3961715	0					
ANR	3961852	Identifier	speed		3961715	1					
ANR	3961853	ReturnType	static void		3961715	1					
ANR	3961854	Identifier	graphNodeMove		3961715	2					
ANR	3961855	ParameterList	"RAGraph * g , int dir , int speed"		3961715	3					
ANR	3961856	Parameter	RAGraph * g	3587:26:90636:90645	3961715	0	True				
ANR	3961857	ParameterType	RAGraph *		3961715	0					
ANR	3961858	Identifier	g		3961715	1					
ANR	3961859	Parameter	int dir	3587:38:90648:90654	3961715	1	True				
ANR	3961860	ParameterType	int		3961715	0					
ANR	3961861	Identifier	dir		3961715	1					
ANR	3961862	Parameter	int speed	3587:47:90657:90665	3961715	2	True				
ANR	3961863	ParameterType	int		3961715	0					
ANR	3961864	Identifier	speed		3961715	1					
ANR	3961865	CFGEntryNode	ENTRY		3961715		True				
ANR	3961866	CFGExitNode	EXIT		3961715		True				
ANR	3961867	Symbol	core		3961715						
ANR	3961868	Symbol	* g		3961715						
ANR	3961869	Symbol	NULL		3961715						
ANR	3961870	Symbol	is_mini		3961715						
ANR	3961871	Symbol	g		3961715						
ANR	3961872	Symbol	delta		3961715						
ANR	3961873	Symbol	g -> is_dis		3961715						
ANR	3961874	Symbol	discroll		3961715						
ANR	3961875	Symbol	dir		3961715						
ANR	3961876	Symbol	speed		3961715						
ANR	3961877	Function	agraph_free_nodes	3613:0:91166:91369							
ANR	3961878	FunctionDef	agraph_free_nodes (const RAGraph * g)		3961877	0					
ANR	3961879	CompoundStatement		3613:48:91214:91369	3961877	0					
ANR	3961880	IdentifierDeclStatement	RListIter * it ;	3614:1:91217:91230	3961877	0	True				
ANR	3961881	IdentifierDecl	* it		3961877	0					
ANR	3961882	IdentifierDeclType	RListIter *		3961877	0					
ANR	3961883	Identifier	it		3961877	1					
ANR	3961884	IdentifierDeclStatement	RGraphNode * n ;	3615:1:91233:91246	3961877	1	True				
ANR	3961885	IdentifierDecl	* n		3961877	0					
ANR	3961886	IdentifierDeclType	RGraphNode *		3961877	0					
ANR	3961887	Identifier	n		3961877	1					
ANR	3961888	IdentifierDeclStatement	RANode * a ;	3616:1:91249:91258	3961877	2	True				
ANR	3961889	IdentifierDecl	* a		3961877	0					
ANR	3961890	IdentifierDeclType	RANode *		3961877	0					
ANR	3961891	Identifier	a		3961877	1					
ANR	3961892	Statement	graph_foreach_anode	3618:1:91262:91280	3961877	3	True				
ANR	3961893	Statement	(	3618:21:91282:91282	3961877	4	True				
ANR	3961894	Statement	r_graph_get_nodes	3618:22:91283:91299	3961877	5	True				
ANR	3961895	Statement	(	3618:40:91301:91301	3961877	6	True				
ANR	3961896	Statement	g	3618:41:91302:91302	3961877	7	True				
ANR	3961897	Statement	->	3618:42:91303:91304	3961877	8	True				
ANR	3961898	Statement	graph	3618:44:91305:91309	3961877	9	True				
ANR	3961899	Statement	)	3618:49:91310:91310	3961877	10	True				
ANR	3961900	Statement	","	3618:50:91311:91311	3961877	11	True				
ANR	3961901	Statement	it	3618:52:91313:91314	3961877	12	True				
ANR	3961902	Statement	","	3618:54:91315:91315	3961877	13	True				
ANR	3961903	Statement	n	3618:56:91317:91317	3961877	14	True				
ANR	3961904	Statement	","	3618:57:91318:91318	3961877	15	True				
ANR	3961905	Statement	a	3618:59:91320:91320	3961877	16	True				
ANR	3961906	Statement	)	3618:60:91321:91321	3961877	17	True				
ANR	3961907	CompoundStatement		6:62:108:108	3961877	18					
ANR	3961908	ExpressionStatement	free_anode ( a )	3619:2:91327:91341	3961877	0	True				
ANR	3961909	CallExpression	free_anode ( a )		3961877	0					
ANR	3961910	Callee	free_anode		3961877	0					
ANR	3961911	Identifier	free_anode		3961877	0					
ANR	3961912	ArgumentList	a		3961877	1					
ANR	3961913	Argument	a		3961877	0					
ANR	3961914	Identifier	a		3961877	0					
ANR	3961915	ExpressionStatement	sdb_free ( g -> nodes )	3622:1:91348:91367	3961877	19	True				
ANR	3961916	CallExpression	sdb_free ( g -> nodes )		3961877	0					
ANR	3961917	Callee	sdb_free		3961877	0					
ANR	3961918	Identifier	sdb_free		3961877	0					
ANR	3961919	ArgumentList	g -> nodes		3961877	1					
ANR	3961920	Argument	g -> nodes		3961877	0					
ANR	3961921	PtrMemberAccess	g -> nodes		3961877	0					
ANR	3961922	Identifier	g		3961877	0					
ANR	3961923	Identifier	nodes		3961877	1					
ANR	3961924	ReturnType	static void		3961877	1					
ANR	3961925	Identifier	agraph_free_nodes		3961877	2					
ANR	3961926	ParameterList	const RAGraph * g		3961877	3					
ANR	3961927	Parameter	const RAGraph * g	3613:30:91196:91211	3961877	0	True				
ANR	3961928	ParameterType	const RAGraph *		3961877	0					
ANR	3961929	Identifier	g		3961877	1					
ANR	3961930	CFGEntryNode	ENTRY		3961877		True				
ANR	3961931	CFGExitNode	EXIT		3961877		True				
ANR	3961932	Symbol	a		3961877						
ANR	3961933	Symbol	* g		3961877						
ANR	3961934	Symbol	g -> nodes		3961877						
ANR	3961935	Symbol	g		3961877						
ANR	3961936	Symbol	it		3961877						
ANR	3961937	Symbol	n		3961877						
ANR	3961938	Function	sdb_set_enc	3625:0:91372:91543							
ANR	3961939	FunctionDef	"sdb_set_enc (Sdb * db , const char * key , const char * v , ut32 cas)"		3961938	0					
ANR	3961940	CompoundStatement		3625:75:91447:91543	3961938	0					
ANR	3961941	IdentifierDeclStatement	"char * estr = sdb_encode ( ( const void * ) v , - 1 ) ;"	3626:1:91450:91496	3961938	0	True				
ANR	3961942	IdentifierDecl	"* estr = sdb_encode ( ( const void * ) v , - 1 )"		3961938	0					
ANR	3961943	IdentifierDeclType	char *		3961938	0					
ANR	3961944	Identifier	estr		3961938	1					
ANR	3961945	AssignmentExpression	"* estr = sdb_encode ( ( const void * ) v , - 1 )"		3961938	2		=			
ANR	3961946	Identifier	estr		3961938	0					
ANR	3961947	CallExpression	"sdb_encode ( ( const void * ) v , - 1 )"		3961938	1					
ANR	3961948	Callee	sdb_encode		3961938	0					
ANR	3961949	Identifier	sdb_encode		3961938	0					
ANR	3961950	ArgumentList	( const void * ) v		3961938	1					
ANR	3961951	Argument	( const void * ) v		3961938	0					
ANR	3961952	CastExpression	( const void * ) v		3961938	0					
ANR	3961953	CastTarget	const void *		3961938	0					
ANR	3961954	Identifier	v		3961938	1					
ANR	3961955	Argument	- 1		3961938	1					
ANR	3961956	UnaryOperationExpression	- 1		3961938	0					
ANR	3961957	UnaryOperator	-		3961938	0					
ANR	3961958	PrimaryExpression	1		3961938	1					
ANR	3961959	ExpressionStatement	"sdb_set ( db , key , estr , cas )"	3627:1:91499:91527	3961938	1	True				
ANR	3961960	CallExpression	"sdb_set ( db , key , estr , cas )"		3961938	0					
ANR	3961961	Callee	sdb_set		3961938	0					
ANR	3961962	Identifier	sdb_set		3961938	0					
ANR	3961963	ArgumentList	db		3961938	1					
ANR	3961964	Argument	db		3961938	0					
ANR	3961965	Identifier	db		3961938	0					
ANR	3961966	Argument	key		3961938	1					
ANR	3961967	Identifier	key		3961938	0					
ANR	3961968	Argument	estr		3961938	2					
ANR	3961969	Identifier	estr		3961938	0					
ANR	3961970	Argument	cas		3961938	3					
ANR	3961971	Identifier	cas		3961938	0					
ANR	3961972	ExpressionStatement	free ( estr )	3628:1:91530:91541	3961938	2	True				
ANR	3961973	CallExpression	free ( estr )		3961938	0					
ANR	3961974	Callee	free		3961938	0					
ANR	3961975	Identifier	free		3961938	0					
ANR	3961976	ArgumentList	estr		3961938	1					
ANR	3961977	Argument	estr		3961938	0					
ANR	3961978	Identifier	estr		3961938	0					
ANR	3961979	ReturnType	static void		3961938	1					
ANR	3961980	Identifier	sdb_set_enc		3961938	2					
ANR	3961981	ParameterList	"Sdb * db , const char * key , const char * v , ut32 cas"		3961938	3					
ANR	3961982	Parameter	Sdb * db	3625:24:91396:91402	3961938	0	True				
ANR	3961983	ParameterType	Sdb *		3961938	0					
ANR	3961984	Identifier	db		3961938	1					
ANR	3961985	Parameter	const char * key	3625:33:91405:91419	3961938	1	True				
ANR	3961986	ParameterType	const char *		3961938	0					
ANR	3961987	Identifier	key		3961938	1					
ANR	3961988	Parameter	const char * v	3625:50:91422:91434	3961938	2	True				
ANR	3961989	ParameterType	const char *		3961938	0					
ANR	3961990	Identifier	v		3961938	1					
ANR	3961991	Parameter	ut32 cas	3625:65:91437:91444	3961938	3	True				
ANR	3961992	ParameterType	ut32		3961938	0					
ANR	3961993	Identifier	cas		3961938	1					
ANR	3961994	CFGEntryNode	ENTRY		3961938		True				
ANR	3961995	CFGExitNode	EXIT		3961938		True				
ANR	3961996	Symbol	estr		3961938						
ANR	3961997	Symbol	cas		3961938						
ANR	3961998	Symbol	v		3961938						
ANR	3961999	Symbol	sdb_encode		3961938						
ANR	3962000	Symbol	db		3961938						
ANR	3962001	Symbol	key		3961938						
ANR	3962002	Function	agraph_sdb_init	3631:0:91546:92081							
ANR	3962003	FunctionDef	agraph_sdb_init (const RAGraph * g)		3962002	0					
ANR	3962004	CompoundStatement		3631:46:91592:92081	3962002	0					
ANR	3962005	ExpressionStatement	"sdb_bool_set ( g -> db , ""agraph.is_callgraph"" , g -> is_callgraph , 0 )"	3632:1:91595:91658	3962002	0	True				
ANR	3962006	CallExpression	"sdb_bool_set ( g -> db , ""agraph.is_callgraph"" , g -> is_callgraph , 0 )"		3962002	0					
ANR	3962007	Callee	sdb_bool_set		3962002	0					
ANR	3962008	Identifier	sdb_bool_set		3962002	0					
ANR	3962009	ArgumentList	g -> db		3962002	1					
ANR	3962010	Argument	g -> db		3962002	0					
ANR	3962011	PtrMemberAccess	g -> db		3962002	0					
ANR	3962012	Identifier	g		3962002	0					
ANR	3962013	Identifier	db		3962002	1					
ANR	3962014	Argument	"""agraph.is_callgraph"""		3962002	1					
ANR	3962015	PrimaryExpression	"""agraph.is_callgraph"""		3962002	0					
ANR	3962016	Argument	g -> is_callgraph		3962002	2					
ANR	3962017	PtrMemberAccess	g -> is_callgraph		3962002	0					
ANR	3962018	Identifier	g		3962002	0					
ANR	3962019	Identifier	is_callgraph		3962002	1					
ANR	3962020	Argument	0		3962002	3					
ANR	3962021	PrimaryExpression	0		3962002	0					
ANR	3962022	IdentifierDeclStatement	RCons * cons = r_cons_singleton ( ) ;	3633:1:91661:91694	3962002	1	True				
ANR	3962023	IdentifierDecl	* cons = r_cons_singleton ( )		3962002	0					
ANR	3962024	IdentifierDeclType	RCons *		3962002	0					
ANR	3962025	Identifier	cons		3962002	1					
ANR	3962026	AssignmentExpression	* cons = r_cons_singleton ( )		3962002	2		=			
ANR	3962027	Identifier	cons		3962002	0					
ANR	3962028	CallExpression	r_cons_singleton ( )		3962002	1					
ANR	3962029	Callee	r_cons_singleton		3962002	0					
ANR	3962030	Identifier	r_cons_singleton		3962002	0					
ANR	3962031	ArgumentList			3962002	1					
ANR	3962032	ExpressionStatement	"sdb_set_enc ( g -> db , ""agraph.color_box"" , cons -> context -> pal . graph_box , 0 )"	3634:1:91697:91769	3962002	2	True				
ANR	3962033	CallExpression	"sdb_set_enc ( g -> db , ""agraph.color_box"" , cons -> context -> pal . graph_box , 0 )"		3962002	0					
ANR	3962034	Callee	sdb_set_enc		3962002	0					
ANR	3962035	Identifier	sdb_set_enc		3962002	0					
ANR	3962036	ArgumentList	g -> db		3962002	1					
ANR	3962037	Argument	g -> db		3962002	0					
ANR	3962038	PtrMemberAccess	g -> db		3962002	0					
ANR	3962039	Identifier	g		3962002	0					
ANR	3962040	Identifier	db		3962002	1					
ANR	3962041	Argument	"""agraph.color_box"""		3962002	1					
ANR	3962042	PrimaryExpression	"""agraph.color_box"""		3962002	0					
ANR	3962043	Argument	cons -> context -> pal . graph_box		3962002	2					
ANR	3962044	MemberAccess	cons -> context -> pal . graph_box		3962002	0					
ANR	3962045	PtrMemberAccess	cons -> context -> pal		3962002	0					
ANR	3962046	PtrMemberAccess	cons -> context		3962002	0					
ANR	3962047	Identifier	cons		3962002	0					
ANR	3962048	Identifier	context		3962002	1					
ANR	3962049	Identifier	pal		3962002	1					
ANR	3962050	Identifier	graph_box		3962002	1					
ANR	3962051	Argument	0		3962002	3					
ANR	3962052	PrimaryExpression	0		3962002	0					
ANR	3962053	ExpressionStatement	"sdb_set_enc ( g -> db , ""agraph.color_box2"" , cons -> context -> pal . graph_box2 , 0 )"	3635:1:91772:91846	3962002	3	True				
ANR	3962054	CallExpression	"sdb_set_enc ( g -> db , ""agraph.color_box2"" , cons -> context -> pal . graph_box2 , 0 )"		3962002	0					
ANR	3962055	Callee	sdb_set_enc		3962002	0					
ANR	3962056	Identifier	sdb_set_enc		3962002	0					
ANR	3962057	ArgumentList	g -> db		3962002	1					
ANR	3962058	Argument	g -> db		3962002	0					
ANR	3962059	PtrMemberAccess	g -> db		3962002	0					
ANR	3962060	Identifier	g		3962002	0					
ANR	3962061	Identifier	db		3962002	1					
ANR	3962062	Argument	"""agraph.color_box2"""		3962002	1					
ANR	3962063	PrimaryExpression	"""agraph.color_box2"""		3962002	0					
ANR	3962064	Argument	cons -> context -> pal . graph_box2		3962002	2					
ANR	3962065	MemberAccess	cons -> context -> pal . graph_box2		3962002	0					
ANR	3962066	PtrMemberAccess	cons -> context -> pal		3962002	0					
ANR	3962067	PtrMemberAccess	cons -> context		3962002	0					
ANR	3962068	Identifier	cons		3962002	0					
ANR	3962069	Identifier	context		3962002	1					
ANR	3962070	Identifier	pal		3962002	1					
ANR	3962071	Identifier	graph_box2		3962002	1					
ANR	3962072	Argument	0		3962002	3					
ANR	3962073	PrimaryExpression	0		3962002	0					
ANR	3962074	ExpressionStatement	"sdb_set_enc ( g -> db , ""agraph.color_box3"" , cons -> context -> pal . graph_box3 , 0 )"	3636:1:91849:91923	3962002	4	True				
ANR	3962075	CallExpression	"sdb_set_enc ( g -> db , ""agraph.color_box3"" , cons -> context -> pal . graph_box3 , 0 )"		3962002	0					
ANR	3962076	Callee	sdb_set_enc		3962002	0					
ANR	3962077	Identifier	sdb_set_enc		3962002	0					
ANR	3962078	ArgumentList	g -> db		3962002	1					
ANR	3962079	Argument	g -> db		3962002	0					
ANR	3962080	PtrMemberAccess	g -> db		3962002	0					
ANR	3962081	Identifier	g		3962002	0					
ANR	3962082	Identifier	db		3962002	1					
ANR	3962083	Argument	"""agraph.color_box3"""		3962002	1					
ANR	3962084	PrimaryExpression	"""agraph.color_box3"""		3962002	0					
ANR	3962085	Argument	cons -> context -> pal . graph_box3		3962002	2					
ANR	3962086	MemberAccess	cons -> context -> pal . graph_box3		3962002	0					
ANR	3962087	PtrMemberAccess	cons -> context -> pal		3962002	0					
ANR	3962088	PtrMemberAccess	cons -> context		3962002	0					
ANR	3962089	Identifier	cons		3962002	0					
ANR	3962090	Identifier	context		3962002	1					
ANR	3962091	Identifier	pal		3962002	1					
ANR	3962092	Identifier	graph_box3		3962002	1					
ANR	3962093	Argument	0		3962002	3					
ANR	3962094	PrimaryExpression	0		3962002	0					
ANR	3962095	ExpressionStatement	"sdb_set_enc ( g -> db , ""agraph.color_true"" , cons -> context -> pal . graph_true , 0 )"	3637:1:91926:92000	3962002	5	True				
ANR	3962096	CallExpression	"sdb_set_enc ( g -> db , ""agraph.color_true"" , cons -> context -> pal . graph_true , 0 )"		3962002	0					
ANR	3962097	Callee	sdb_set_enc		3962002	0					
ANR	3962098	Identifier	sdb_set_enc		3962002	0					
ANR	3962099	ArgumentList	g -> db		3962002	1					
ANR	3962100	Argument	g -> db		3962002	0					
ANR	3962101	PtrMemberAccess	g -> db		3962002	0					
ANR	3962102	Identifier	g		3962002	0					
ANR	3962103	Identifier	db		3962002	1					
ANR	3962104	Argument	"""agraph.color_true"""		3962002	1					
ANR	3962105	PrimaryExpression	"""agraph.color_true"""		3962002	0					
ANR	3962106	Argument	cons -> context -> pal . graph_true		3962002	2					
ANR	3962107	MemberAccess	cons -> context -> pal . graph_true		3962002	0					
ANR	3962108	PtrMemberAccess	cons -> context -> pal		3962002	0					
ANR	3962109	PtrMemberAccess	cons -> context		3962002	0					
ANR	3962110	Identifier	cons		3962002	0					
ANR	3962111	Identifier	context		3962002	1					
ANR	3962112	Identifier	pal		3962002	1					
ANR	3962113	Identifier	graph_true		3962002	1					
ANR	3962114	Argument	0		3962002	3					
ANR	3962115	PrimaryExpression	0		3962002	0					
ANR	3962116	ExpressionStatement	"sdb_set_enc ( g -> db , ""agraph.color_false"" , cons -> context -> pal . graph_false , 0 )"	3638:1:92003:92079	3962002	6	True				
ANR	3962117	CallExpression	"sdb_set_enc ( g -> db , ""agraph.color_false"" , cons -> context -> pal . graph_false , 0 )"		3962002	0					
ANR	3962118	Callee	sdb_set_enc		3962002	0					
ANR	3962119	Identifier	sdb_set_enc		3962002	0					
ANR	3962120	ArgumentList	g -> db		3962002	1					
ANR	3962121	Argument	g -> db		3962002	0					
ANR	3962122	PtrMemberAccess	g -> db		3962002	0					
ANR	3962123	Identifier	g		3962002	0					
ANR	3962124	Identifier	db		3962002	1					
ANR	3962125	Argument	"""agraph.color_false"""		3962002	1					
ANR	3962126	PrimaryExpression	"""agraph.color_false"""		3962002	0					
ANR	3962127	Argument	cons -> context -> pal . graph_false		3962002	2					
ANR	3962128	MemberAccess	cons -> context -> pal . graph_false		3962002	0					
ANR	3962129	PtrMemberAccess	cons -> context -> pal		3962002	0					
ANR	3962130	PtrMemberAccess	cons -> context		3962002	0					
ANR	3962131	Identifier	cons		3962002	0					
ANR	3962132	Identifier	context		3962002	1					
ANR	3962133	Identifier	pal		3962002	1					
ANR	3962134	Identifier	graph_false		3962002	1					
ANR	3962135	Argument	0		3962002	3					
ANR	3962136	PrimaryExpression	0		3962002	0					
ANR	3962137	ReturnType	static void		3962002	1					
ANR	3962138	Identifier	agraph_sdb_init		3962002	2					
ANR	3962139	ParameterList	const RAGraph * g		3962002	3					
ANR	3962140	Parameter	const RAGraph * g	3631:28:91574:91589	3962002	0	True				
ANR	3962141	ParameterType	const RAGraph *		3962002	0					
ANR	3962142	Identifier	g		3962002	1					
ANR	3962143	CFGEntryNode	ENTRY		3962002		True				
ANR	3962144	CFGExitNode	EXIT		3962002		True				
ANR	3962145	Symbol	cons -> context		3962002						
ANR	3962146	Symbol	g		3962002						
ANR	3962147	Symbol	g -> db		3962002						
ANR	3962148	Symbol	* * cons		3962002						
ANR	3962149	Symbol	* g		3962002						
ANR	3962150	Symbol	cons -> context -> pal . graph_box2		3962002						
ANR	3962151	Symbol	cons -> context -> pal . graph_true		3962002						
ANR	3962152	Symbol	cons -> context -> pal . graph_box3		3962002						
ANR	3962153	Symbol	r_cons_singleton		3962002						
ANR	3962154	Symbol	* cons		3962002						
ANR	3962155	Symbol	g -> is_callgraph		3962002						
ANR	3962156	Symbol	cons -> context -> pal . graph_box		3962002						
ANR	3962157	Symbol	cons -> context -> pal . graph_false		3962002						
ANR	3962158	Symbol	cons -> context -> pal		3962002						
ANR	3962159	Symbol	* cons -> context		3962002						
ANR	3962160	Symbol	cons		3962002						
ANR	3962161	Function	r_agraph_get_sdb	3641:0:92084:92263							
ANR	3962162	FunctionDef	r_agraph_get_sdb (RAGraph * g)		3962161	0					
ANR	3962163	CompoundStatement		3641:40:92124:92263	3962161	0					
ANR	3962164	ExpressionStatement	g -> need_update_dim = true	3642:1:92127:92152	3962161	0	True				
ANR	3962165	AssignmentExpression	g -> need_update_dim = true		3962161	0		=			
ANR	3962166	PtrMemberAccess	g -> need_update_dim		3962161	0					
ANR	3962167	Identifier	g		3962161	0					
ANR	3962168	Identifier	need_update_dim		3962161	1					
ANR	3962169	Identifier	true		3962161	1					
ANR	3962170	ExpressionStatement	g -> need_set_layout = true	3643:1:92155:92180	3962161	1	True				
ANR	3962171	AssignmentExpression	g -> need_set_layout = true		3962161	0		=			
ANR	3962172	PtrMemberAccess	g -> need_set_layout		3962161	0					
ANR	3962173	Identifier	g		3962161	0					
ANR	3962174	Identifier	need_set_layout		3962161	1					
ANR	3962175	Identifier	true		3962161	1					
ANR	3962176	ExpressionStatement	"check_changes ( g , false , NULL , NULL )"	3644:1:92183:92219	3962161	2	True				
ANR	3962177	CallExpression	"check_changes ( g , false , NULL , NULL )"		3962161	0					
ANR	3962178	Callee	check_changes		3962161	0					
ANR	3962179	Identifier	check_changes		3962161	0					
ANR	3962180	ArgumentList	g		3962161	1					
ANR	3962181	Argument	g		3962161	0					
ANR	3962182	Identifier	g		3962161	0					
ANR	3962183	Argument	false		3962161	1					
ANR	3962184	Identifier	false		3962161	0					
ANR	3962185	Argument	NULL		3962161	2					
ANR	3962186	Identifier	NULL		3962161	0					
ANR	3962187	Argument	NULL		3962161	3					
ANR	3962188	Identifier	NULL		3962161	0					
ANR	3962189	ReturnStatement	return g -> db ;	3646:1:92249:92261	3962161	3	True				
ANR	3962190	PtrMemberAccess	g -> db		3962161	0					
ANR	3962191	Identifier	g		3962161	0					
ANR	3962192	Identifier	db		3962161	1					
ANR	3962193	ReturnType	R_API Sdb *		3962161	1					
ANR	3962194	Identifier	r_agraph_get_sdb		3962161	2					
ANR	3962195	ParameterList	RAGraph * g		3962161	3					
ANR	3962196	Parameter	RAGraph * g	3641:28:92112:92121	3962161	0	True				
ANR	3962197	ParameterType	RAGraph *		3962161	0					
ANR	3962198	Identifier	g		3962161	1					
ANR	3962199	CFGEntryNode	ENTRY		3962161		True				
ANR	3962200	CFGExitNode	EXIT		3962161		True				
ANR	3962201	Symbol	* g		3962161						
ANR	3962202	Symbol	g -> need_set_layout		3962161						
ANR	3962203	Symbol	NULL		3962161						
ANR	3962204	Symbol	g		3962161						
ANR	3962205	Symbol	g -> db		3962161						
ANR	3962206	Symbol	true		3962161						
ANR	3962207	Symbol	false		3962161						
ANR	3962208	Symbol	g -> need_update_dim		3962161						
ANR	3962209	Function	r_agraph_print	3649:0:92266:92398							
ANR	3962210	FunctionDef	r_agraph_print (RAGraph * g)		3962209	0					
ANR	3962211	CompoundStatement		3649:38:92304:92398	3962209	0					
ANR	3962212	ExpressionStatement	"agraph_print ( g , false , NULL , NULL )"	3650:1:92307:92342	3962209	0	True				
ANR	3962213	CallExpression	"agraph_print ( g , false , NULL , NULL )"		3962209	0					
ANR	3962214	Callee	agraph_print		3962209	0					
ANR	3962215	Identifier	agraph_print		3962209	0					
ANR	3962216	ArgumentList	g		3962209	1					
ANR	3962217	Argument	g		3962209	0					
ANR	3962218	Identifier	g		3962209	0					
ANR	3962219	Argument	false		3962209	1					
ANR	3962220	Identifier	false		3962209	0					
ANR	3962221	Argument	NULL		3962209	2					
ANR	3962222	Identifier	NULL		3962209	0					
ANR	3962223	Argument	NULL		3962209	3					
ANR	3962224	Identifier	NULL		3962209	0					
ANR	3962225	IfStatement	if ( g -> graph -> n_nodes > 0 )		3962209	1					
ANR	3962226	Condition	g -> graph -> n_nodes > 0	3651:5:92349:92369	3962209	0	True				
ANR	3962227	RelationalExpression	g -> graph -> n_nodes > 0		3962209	0		>			
ANR	3962228	PtrMemberAccess	g -> graph -> n_nodes		3962209	0					
ANR	3962229	PtrMemberAccess	g -> graph		3962209	0					
ANR	3962230	Identifier	g		3962209	0					
ANR	3962231	Identifier	graph		3962209	1					
ANR	3962232	Identifier	n_nodes		3962209	1					
ANR	3962233	PrimaryExpression	0		3962209	1					
ANR	3962234	CompoundStatement		3:28:67:67	3962209	1					
ANR	3962235	ExpressionStatement	r_cons_newline ( )	3652:2:92376:92393	3962209	0	True				
ANR	3962236	CallExpression	r_cons_newline ( )		3962209	0					
ANR	3962237	Callee	r_cons_newline		3962209	0					
ANR	3962238	Identifier	r_cons_newline		3962209	0					
ANR	3962239	ArgumentList			3962209	1					
ANR	3962240	ReturnType	R_API void		3962209	1					
ANR	3962241	Identifier	r_agraph_print		3962209	2					
ANR	3962242	ParameterList	RAGraph * g		3962209	3					
ANR	3962243	Parameter	RAGraph * g	3649:26:92292:92301	3962209	0	True				
ANR	3962244	ParameterType	RAGraph *		3962209	0					
ANR	3962245	Identifier	g		3962209	1					
ANR	3962246	CFGEntryNode	ENTRY		3962209		True				
ANR	3962247	CFGExitNode	EXIT		3962209		True				
ANR	3962248	Symbol	g -> graph -> n_nodes		3962209						
ANR	3962249	Symbol	* g		3962209						
ANR	3962250	Symbol	NULL		3962209						
ANR	3962251	Symbol	* * g		3962209						
ANR	3962252	Symbol	g -> graph		3962209						
ANR	3962253	Symbol	* g -> graph		3962209						
ANR	3962254	Symbol	g		3962209						
ANR	3962255	Symbol	false		3962209						
ANR	3962256	Function	r_agraph_print_json	3656:0:92401:93042							
ANR	3962257	FunctionDef	"r_agraph_print_json (RAGraph * g , PJ * pj)"		3962256	0					
ANR	3962258	CompoundStatement		3656:51:92452:93042	3962256	0					
ANR	3962259	IdentifierDeclStatement	"RList * nodes = g -> graph -> nodes , * neighbours = NULL ;"	3657:1:92455:92505	3962256	0	True				
ANR	3962260	IdentifierDecl	* nodes = g -> graph -> nodes		3962256	0					
ANR	3962261	IdentifierDeclType	RList *		3962256	0					
ANR	3962262	Identifier	nodes		3962256	1					
ANR	3962263	AssignmentExpression	* nodes = g -> graph -> nodes		3962256	2		=			
ANR	3962264	Identifier	nodes		3962256	0					
ANR	3962265	PtrMemberAccess	g -> graph -> nodes		3962256	1					
ANR	3962266	PtrMemberAccess	g -> graph		3962256	0					
ANR	3962267	Identifier	g		3962256	0					
ANR	3962268	Identifier	graph		3962256	1					
ANR	3962269	Identifier	nodes		3962256	1					
ANR	3962270	IdentifierDecl	* neighbours = NULL		3962256	1					
ANR	3962271	IdentifierDeclType	RList *		3962256	0					
ANR	3962272	Identifier	neighbours		3962256	1					
ANR	3962273	AssignmentExpression	* neighbours = NULL		3962256	2		=			
ANR	3962274	Identifier	NULL		3962256	0					
ANR	3962275	Identifier	NULL		3962256	1					
ANR	3962276	IdentifierDeclStatement	"RListIter * it , * itt ;"	3658:1:92508:92527	3962256	1	True				
ANR	3962277	IdentifierDecl	* it		3962256	0					
ANR	3962278	IdentifierDeclType	RListIter *		3962256	0					
ANR	3962279	Identifier	it		3962256	1					
ANR	3962280	IdentifierDecl	* itt		3962256	1					
ANR	3962281	IdentifierDeclType	RListIter *		3962256	0					
ANR	3962282	Identifier	itt		3962256	1					
ANR	3962283	IdentifierDeclStatement	"RGraphNode * node = NULL , * neighbour = NULL ;"	3659:1:92530:92572	3962256	2	True				
ANR	3962284	IdentifierDecl	* node = NULL		3962256	0					
ANR	3962285	IdentifierDeclType	RGraphNode *		3962256	0					
ANR	3962286	Identifier	node		3962256	1					
ANR	3962287	AssignmentExpression	* node = NULL		3962256	2		=			
ANR	3962288	Identifier	NULL		3962256	0					
ANR	3962289	Identifier	NULL		3962256	1					
ANR	3962290	IdentifierDecl	* neighbour = NULL		3962256	1					
ANR	3962291	IdentifierDeclType	RGraphNode *		3962256	0					
ANR	3962292	Identifier	neighbour		3962256	1					
ANR	3962293	AssignmentExpression	* neighbour = NULL		3962256	2		=			
ANR	3962294	Identifier	NULL		3962256	0					
ANR	3962295	Identifier	NULL		3962256	1					
ANR	3962296	IfStatement	if ( ! pj )		3962256	3					
ANR	3962297	Condition	! pj	3660:5:92579:92581	3962256	0	True				
ANR	3962298	UnaryOperationExpression	! pj		3962256	0					
ANR	3962299	UnaryOperator	!		3962256	0					
ANR	3962300	Identifier	pj		3962256	1					
ANR	3962301	CompoundStatement		5:10:131:131	3962256	1					
ANR	3962302	ReturnStatement	return ;	3661:2:92588:92594	3962256	0	True				
ANR	3962303	Statement	r_list_foreach	3663:1:92600:92613	3962256	4	True				
ANR	3962304	Statement	(	3663:16:92615:92615	3962256	5	True				
ANR	3962305	Statement	nodes	3663:17:92616:92620	3962256	6	True				
ANR	3962306	Statement	","	3663:22:92621:92621	3962256	7	True				
ANR	3962307	Statement	it	3663:24:92623:92624	3962256	8	True				
ANR	3962308	Statement	","	3663:26:92625:92625	3962256	9	True				
ANR	3962309	Statement	node	3663:28:92627:92630	3962256	10	True				
ANR	3962310	Statement	)	3663:32:92631:92631	3962256	11	True				
ANR	3962311	CompoundStatement		10:2:225:259	3962256	12					
ANR	3962312	IdentifierDeclStatement	RANode * anode = ( RANode * ) node -> data ;	3664:2:92637:92674	3962256	0	True				
ANR	3962313	IdentifierDecl	* anode = ( RANode * ) node -> data		3962256	0					
ANR	3962314	IdentifierDeclType	RANode *		3962256	0					
ANR	3962315	Identifier	anode		3962256	1					
ANR	3962316	AssignmentExpression	* anode = ( RANode * ) node -> data		3962256	2		=			
ANR	3962317	Identifier	anode		3962256	0					
ANR	3962318	CastExpression	( RANode * ) node -> data		3962256	1					
ANR	3962319	CastTarget	RANode *		3962256	0					
ANR	3962320	PtrMemberAccess	node -> data		3962256	1					
ANR	3962321	Identifier	node		3962256	0					
ANR	3962322	Identifier	data		3962256	1					
ANR	3962323	IdentifierDeclStatement	char * label = strdup ( anode -> body ) ;	3665:2:92678:92712	3962256	1	True				
ANR	3962324	IdentifierDecl	* label = strdup ( anode -> body )		3962256	0					
ANR	3962325	IdentifierDeclType	char *		3962256	0					
ANR	3962326	Identifier	label		3962256	1					
ANR	3962327	AssignmentExpression	* label = strdup ( anode -> body )		3962256	2		=			
ANR	3962328	Identifier	label		3962256	0					
ANR	3962329	CallExpression	strdup ( anode -> body )		3962256	1					
ANR	3962330	Callee	strdup		3962256	0					
ANR	3962331	Identifier	strdup		3962256	0					
ANR	3962332	ArgumentList	anode -> body		3962256	1					
ANR	3962333	Argument	anode -> body		3962256	0					
ANR	3962334	PtrMemberAccess	anode -> body		3962256	0					
ANR	3962335	Identifier	anode		3962256	0					
ANR	3962336	Identifier	body		3962256	1					
ANR	3962337	ExpressionStatement	pj_o ( pj )	3666:2:92716:92725	3962256	2	True				
ANR	3962338	CallExpression	pj_o ( pj )		3962256	0					
ANR	3962339	Callee	pj_o		3962256	0					
ANR	3962340	Identifier	pj_o		3962256	0					
ANR	3962341	ArgumentList	pj		3962256	1					
ANR	3962342	Argument	pj		3962256	0					
ANR	3962343	Identifier	pj		3962256	0					
ANR	3962344	ExpressionStatement	"pj_ki ( pj , ""id"" , anode -> gnode -> idx )"	3667:2:92729:92764	3962256	3	True				
ANR	3962345	CallExpression	"pj_ki ( pj , ""id"" , anode -> gnode -> idx )"		3962256	0					
ANR	3962346	Callee	pj_ki		3962256	0					
ANR	3962347	Identifier	pj_ki		3962256	0					
ANR	3962348	ArgumentList	pj		3962256	1					
ANR	3962349	Argument	pj		3962256	0					
ANR	3962350	Identifier	pj		3962256	0					
ANR	3962351	Argument	"""id"""		3962256	1					
ANR	3962352	PrimaryExpression	"""id"""		3962256	0					
ANR	3962353	Argument	anode -> gnode -> idx		3962256	2					
ANR	3962354	PtrMemberAccess	anode -> gnode -> idx		3962256	0					
ANR	3962355	PtrMemberAccess	anode -> gnode		3962256	0					
ANR	3962356	Identifier	anode		3962256	0					
ANR	3962357	Identifier	gnode		3962256	1					
ANR	3962358	Identifier	idx		3962256	1					
ANR	3962359	ExpressionStatement	"pj_ks ( pj , ""title"" , anode -> title )"	3668:2:92768:92801	3962256	4	True				
ANR	3962360	CallExpression	"pj_ks ( pj , ""title"" , anode -> title )"		3962256	0					
ANR	3962361	Callee	pj_ks		3962256	0					
ANR	3962362	Identifier	pj_ks		3962256	0					
ANR	3962363	ArgumentList	pj		3962256	1					
ANR	3962364	Argument	pj		3962256	0					
ANR	3962365	Identifier	pj		3962256	0					
ANR	3962366	Argument	"""title"""		3962256	1					
ANR	3962367	PrimaryExpression	"""title"""		3962256	0					
ANR	3962368	Argument	anode -> title		3962256	2					
ANR	3962369	PtrMemberAccess	anode -> title		3962256	0					
ANR	3962370	Identifier	anode		3962256	0					
ANR	3962371	Identifier	title		3962256	1					
ANR	3962372	ExpressionStatement	"pj_ks ( pj , ""body"" , label )"	3669:2:92805:92830	3962256	5	True				
ANR	3962373	CallExpression	"pj_ks ( pj , ""body"" , label )"		3962256	0					
ANR	3962374	Callee	pj_ks		3962256	0					
ANR	3962375	Identifier	pj_ks		3962256	0					
ANR	3962376	ArgumentList	pj		3962256	1					
ANR	3962377	Argument	pj		3962256	0					
ANR	3962378	Identifier	pj		3962256	0					
ANR	3962379	Argument	"""body"""		3962256	1					
ANR	3962380	PrimaryExpression	"""body"""		3962256	0					
ANR	3962381	Argument	label		3962256	2					
ANR	3962382	Identifier	label		3962256	0					
ANR	3962383	ExpressionStatement	"pj_k ( pj , ""out_nodes"" )"	3670:2:92834:92856	3962256	6	True				
ANR	3962384	CallExpression	"pj_k ( pj , ""out_nodes"" )"		3962256	0					
ANR	3962385	Callee	pj_k		3962256	0					
ANR	3962386	Identifier	pj_k		3962256	0					
ANR	3962387	ArgumentList	pj		3962256	1					
ANR	3962388	Argument	pj		3962256	0					
ANR	3962389	Identifier	pj		3962256	0					
ANR	3962390	Argument	"""out_nodes"""		3962256	1					
ANR	3962391	PrimaryExpression	"""out_nodes"""		3962256	0					
ANR	3962392	ExpressionStatement	pj_a ( pj )	3671:2:92860:92869	3962256	7	True				
ANR	3962393	CallExpression	pj_a ( pj )		3962256	0					
ANR	3962394	Callee	pj_a		3962256	0					
ANR	3962395	Identifier	pj_a		3962256	0					
ANR	3962396	ArgumentList	pj		3962256	1					
ANR	3962397	Argument	pj		3962256	0					
ANR	3962398	Identifier	pj		3962256	0					
ANR	3962399	ExpressionStatement	neighbours = anode -> gnode -> out_nodes	3672:2:92873:92909	3962256	8	True				
ANR	3962400	AssignmentExpression	neighbours = anode -> gnode -> out_nodes		3962256	0		=			
ANR	3962401	Identifier	neighbours		3962256	0					
ANR	3962402	PtrMemberAccess	anode -> gnode -> out_nodes		3962256	1					
ANR	3962403	PtrMemberAccess	anode -> gnode		3962256	0					
ANR	3962404	Identifier	anode		3962256	0					
ANR	3962405	Identifier	gnode		3962256	1					
ANR	3962406	Identifier	out_nodes		3962256	1					
ANR	3962407	Statement	r_list_foreach	3673:2:92913:92926	3962256	9	True				
ANR	3962408	Statement	(	3673:17:92928:92928	3962256	10	True				
ANR	3962409	Statement	neighbours	3673:18:92929:92938	3962256	11	True				
ANR	3962410	Statement	","	3673:28:92939:92939	3962256	12	True				
ANR	3962411	Statement	itt	3673:30:92941:92943	3962256	13	True				
ANR	3962412	Statement	","	3673:33:92944:92944	3962256	14	True				
ANR	3962413	Statement	neighbour	3673:35:92946:92954	3962256	15	True				
ANR	3962414	Statement	)	3673:44:92955:92955	3962256	16	True				
ANR	3962415	CompoundStatement		18:46:504:504	3962256	17					
ANR	3962416	ExpressionStatement	"pj_i ( pj , neighbour -> idx )"	3674:3:92962:92987	3962256	0	True				
ANR	3962417	CallExpression	"pj_i ( pj , neighbour -> idx )"		3962256	0					
ANR	3962418	Callee	pj_i		3962256	0					
ANR	3962419	Identifier	pj_i		3962256	0					
ANR	3962420	ArgumentList	pj		3962256	1					
ANR	3962421	Argument	pj		3962256	0					
ANR	3962422	Identifier	pj		3962256	0					
ANR	3962423	Argument	neighbour -> idx		3962256	1					
ANR	3962424	PtrMemberAccess	neighbour -> idx		3962256	0					
ANR	3962425	Identifier	neighbour		3962256	0					
ANR	3962426	Identifier	idx		3962256	1					
ANR	3962427	ExpressionStatement	pj_end ( pj )	3676:2:92995:93006	3962256	18	True				
ANR	3962428	CallExpression	pj_end ( pj )		3962256	0					
ANR	3962429	Callee	pj_end		3962256	0					
ANR	3962430	Identifier	pj_end		3962256	0					
ANR	3962431	ArgumentList	pj		3962256	1					
ANR	3962432	Argument	pj		3962256	0					
ANR	3962433	Identifier	pj		3962256	0					
ANR	3962434	ExpressionStatement	pj_end ( pj )	3677:2:93010:93021	3962256	19	True				
ANR	3962435	CallExpression	pj_end ( pj )		3962256	0					
ANR	3962436	Callee	pj_end		3962256	0					
ANR	3962437	Identifier	pj_end		3962256	0					
ANR	3962438	ArgumentList	pj		3962256	1					
ANR	3962439	Argument	pj		3962256	0					
ANR	3962440	Identifier	pj		3962256	0					
ANR	3962441	ExpressionStatement	free ( label )	3678:2:93025:93037	3962256	20	True				
ANR	3962442	CallExpression	free ( label )		3962256	0					
ANR	3962443	Callee	free		3962256	0					
ANR	3962444	Identifier	free		3962256	0					
ANR	3962445	ArgumentList	label		3962256	1					
ANR	3962446	Argument	label		3962256	0					
ANR	3962447	Identifier	label		3962256	0					
ANR	3962448	ReturnType	R_API void		3962256	1					
ANR	3962449	Identifier	r_agraph_print_json		3962256	2					
ANR	3962450	ParameterList	"RAGraph * g , PJ * pj"		3962256	3					
ANR	3962451	Parameter	RAGraph * g	3656:31:92432:92441	3962256	0	True				
ANR	3962452	ParameterType	RAGraph *		3962256	0					
ANR	3962453	Identifier	g		3962256	1					
ANR	3962454	Parameter	PJ * pj	3656:43:92444:92449	3962256	1	True				
ANR	3962455	ParameterType	PJ *		3962256	0					
ANR	3962456	Identifier	pj		3962256	1					
ANR	3962457	CFGEntryNode	ENTRY		3962256		True				
ANR	3962458	CFGExitNode	EXIT		3962256		True				
ANR	3962459	Symbol	* g -> graph		3962256						
ANR	3962460	Symbol	* anode		3962256						
ANR	3962461	Symbol	anode -> title		3962256						
ANR	3962462	Symbol	neighbour		3962256						
ANR	3962463	Symbol	anode -> gnode -> idx		3962256						
ANR	3962464	Symbol	node -> data		3962256						
ANR	3962465	Symbol	anode -> gnode -> out_nodes		3962256						
ANR	3962466	Symbol	g -> graph		3962256						
ANR	3962467	Symbol	* node		3962256						
ANR	3962468	Symbol	g -> graph -> nodes		3962256						
ANR	3962469	Symbol	anode -> body		3962256						
ANR	3962470	Symbol	anode -> gnode		3962256						
ANR	3962471	Symbol	NULL		3962256						
ANR	3962472	Symbol	* * g		3962256						
ANR	3962473	Symbol	neighbour -> idx		3962256						
ANR	3962474	Symbol	g		3962256						
ANR	3962475	Symbol	itt		3962256						
ANR	3962476	Symbol	anode		3962256						
ANR	3962477	Symbol	neighbours		3962256						
ANR	3962478	Symbol	* anode -> gnode		3962256						
ANR	3962479	Symbol	it		3962256						
ANR	3962480	Symbol	label		3962256						
ANR	3962481	Symbol	* neighbour		3962256						
ANR	3962482	Symbol	* g		3962256						
ANR	3962483	Symbol	node		3962256						
ANR	3962484	Symbol	nodes		3962256						
ANR	3962485	Symbol	pj		3962256						
ANR	3962486	Symbol	strdup		3962256						
ANR	3962487	Symbol	* * anode		3962256						
ANR	3962488	Function	r_agraph_set_title	3682:0:93045:93214							
ANR	3962489	FunctionDef	"r_agraph_set_title (RAGraph * g , const char * title)"		3962488	0					
ANR	3962490	CompoundStatement		3682:61:93106:93214	3962488	0					
ANR	3962491	ExpressionStatement	free ( g -> title )	3683:1:93109:93124	3962488	0	True				
ANR	3962492	CallExpression	free ( g -> title )		3962488	0					
ANR	3962493	Callee	free		3962488	0					
ANR	3962494	Identifier	free		3962488	0					
ANR	3962495	ArgumentList	g -> title		3962488	1					
ANR	3962496	Argument	g -> title		3962488	0					
ANR	3962497	PtrMemberAccess	g -> title		3962488	0					
ANR	3962498	Identifier	g		3962488	0					
ANR	3962499	Identifier	title		3962488	1					
ANR	3962500	ExpressionStatement	g -> title = title ? strdup ( title ) : NULL	3684:1:93127:93165	3962488	1	True				
ANR	3962501	AssignmentExpression	g -> title = title ? strdup ( title ) : NULL		3962488	0		=			
ANR	3962502	PtrMemberAccess	g -> title		3962488	0					
ANR	3962503	Identifier	g		3962488	0					
ANR	3962504	Identifier	title		3962488	1					
ANR	3962505	ConditionalExpression	title ? strdup ( title ) : NULL		3962488	1					
ANR	3962506	Condition	title		3962488	0					
ANR	3962507	Identifier	title		3962488	0					
ANR	3962508	CallExpression	strdup ( title )		3962488	1					
ANR	3962509	Callee	strdup		3962488	0					
ANR	3962510	Identifier	strdup		3962488	0					
ANR	3962511	ArgumentList	title		3962488	1					
ANR	3962512	Argument	title		3962488	0					
ANR	3962513	Identifier	title		3962488	0					
ANR	3962514	Identifier	NULL		3962488	2					
ANR	3962515	ExpressionStatement	"sdb_set ( g -> db , ""agraph.title"" , g -> title , 0 )"	3685:1:93168:93212	3962488	2	True				
ANR	3962516	CallExpression	"sdb_set ( g -> db , ""agraph.title"" , g -> title , 0 )"		3962488	0					
ANR	3962517	Callee	sdb_set		3962488	0					
ANR	3962518	Identifier	sdb_set		3962488	0					
ANR	3962519	ArgumentList	g -> db		3962488	1					
ANR	3962520	Argument	g -> db		3962488	0					
ANR	3962521	PtrMemberAccess	g -> db		3962488	0					
ANR	3962522	Identifier	g		3962488	0					
ANR	3962523	Identifier	db		3962488	1					
ANR	3962524	Argument	"""agraph.title"""		3962488	1					
ANR	3962525	PrimaryExpression	"""agraph.title"""		3962488	0					
ANR	3962526	Argument	g -> title		3962488	2					
ANR	3962527	PtrMemberAccess	g -> title		3962488	0					
ANR	3962528	Identifier	g		3962488	0					
ANR	3962529	Identifier	title		3962488	1					
ANR	3962530	Argument	0		3962488	3					
ANR	3962531	PrimaryExpression	0		3962488	0					
ANR	3962532	ReturnType	R_API void		3962488	1					
ANR	3962533	Identifier	r_agraph_set_title		3962488	2					
ANR	3962534	ParameterList	"RAGraph * g , const char * title"		3962488	3					
ANR	3962535	Parameter	RAGraph * g	3682:30:93075:93084	3962488	0	True				
ANR	3962536	ParameterType	RAGraph *		3962488	0					
ANR	3962537	Identifier	g		3962488	1					
ANR	3962538	Parameter	const char * title	3682:42:93087:93103	3962488	1	True				
ANR	3962539	ParameterType	const char *		3962488	0					
ANR	3962540	Identifier	title		3962488	1					
ANR	3962541	CFGEntryNode	ENTRY		3962488		True				
ANR	3962542	CFGExitNode	EXIT		3962488		True				
ANR	3962543	Symbol	* g		3962488						
ANR	3962544	Symbol	g -> title		3962488						
ANR	3962545	Symbol	NULL		3962488						
ANR	3962546	Symbol	g		3962488						
ANR	3962547	Symbol	g -> db		3962488						
ANR	3962548	Symbol	strdup		3962488						
ANR	3962549	Symbol	title		3962488						
ANR	3962550	Function	r_agraph_add_node_with_color	3688:0:93217:94639							
ANR	3962551	FunctionDef	"r_agraph_add_node_with_color (const RAGraph * g , const char * title , const char * body , int color)"		3962550	0					
ANR	3962552	CompoundStatement		3688:109:93326:94639	3962550	0					
ANR	3962553	IdentifierDeclStatement	"RANode * res = r_agraph_get_node ( g , title ) ;"	3689:8:93336:93378	3962550	0	True				
ANR	3962554	IdentifierDecl	"* res = r_agraph_get_node ( g , title )"		3962550	0					
ANR	3962555	IdentifierDeclType	RANode *		3962550	0					
ANR	3962556	Identifier	res		3962550	1					
ANR	3962557	AssignmentExpression	"* res = r_agraph_get_node ( g , title )"		3962550	2		=			
ANR	3962558	Identifier	res		3962550	0					
ANR	3962559	CallExpression	"r_agraph_get_node ( g , title )"		3962550	1					
ANR	3962560	Callee	r_agraph_get_node		3962550	0					
ANR	3962561	Identifier	r_agraph_get_node		3962550	0					
ANR	3962562	ArgumentList	g		3962550	1					
ANR	3962563	Argument	g		3962550	0					
ANR	3962564	Identifier	g		3962550	0					
ANR	3962565	Argument	title		3962550	1					
ANR	3962566	Identifier	title		3962550	0					
ANR	3962567	IfStatement	if ( res )		3962550	1					
ANR	3962568	Condition	res	3690:12:93392:93394	3962550	0	True				
ANR	3962569	Identifier	res		3962550	0					
ANR	3962570	CompoundStatement		3:17:70:70	3962550	1					
ANR	3962571	ReturnStatement	return res ;	3691:16:93415:93425	3962550	0	True				
ANR	3962572	Identifier	res		3962550	0					
ANR	3962573	ExpressionStatement	res = R_NEW0 ( RANode )	3693:8:93445:93466	3962550	2	True				
ANR	3962574	AssignmentExpression	res = R_NEW0 ( RANode )		3962550	0		=			
ANR	3962575	Identifier	res		3962550	0					
ANR	3962576	CallExpression	R_NEW0 ( RANode )		3962550	1					
ANR	3962577	Callee	R_NEW0		3962550	0					
ANR	3962578	Identifier	R_NEW0		3962550	0					
ANR	3962579	ArgumentList	RANode		3962550	1					
ANR	3962580	Argument	RANode		3962550	0					
ANR	3962581	Identifier	RANode		3962550	0					
ANR	3962582	IfStatement	if ( ! res )		3962550	3					
ANR	3962583	Condition	! res	3694:12:93480:93483	3962550	0	True				
ANR	3962584	UnaryOperationExpression	! res		3962550	0					
ANR	3962585	UnaryOperator	!		3962550	0					
ANR	3962586	Identifier	res		3962550	1					
ANR	3962587	CompoundStatement		7:18:159:159	3962550	1					
ANR	3962588	ReturnStatement	return NULL ;	3695:16:93504:93515	3962550	0	True				
ANR	3962589	Identifier	NULL		3962550	0					
ANR	3962590	ExpressionStatement	"res -> title = title ? r_str_trunc_ellipsis ( title , 255 ) : strdup ( """" )"	3698:8:93536:93603	3962550	4	True				
ANR	3962591	AssignmentExpression	"res -> title = title ? r_str_trunc_ellipsis ( title , 255 ) : strdup ( """" )"		3962550	0		=			
ANR	3962592	PtrMemberAccess	res -> title		3962550	0					
ANR	3962593	Identifier	res		3962550	0					
ANR	3962594	Identifier	title		3962550	1					
ANR	3962595	ConditionalExpression	"title ? r_str_trunc_ellipsis ( title , 255 ) : strdup ( """" )"		3962550	1					
ANR	3962596	Condition	title		3962550	0					
ANR	3962597	Identifier	title		3962550	0					
ANR	3962598	CallExpression	"r_str_trunc_ellipsis ( title , 255 )"		3962550	1					
ANR	3962599	Callee	r_str_trunc_ellipsis		3962550	0					
ANR	3962600	Identifier	r_str_trunc_ellipsis		3962550	0					
ANR	3962601	ArgumentList	title		3962550	1					
ANR	3962602	Argument	title		3962550	0					
ANR	3962603	Identifier	title		3962550	0					
ANR	3962604	Argument	255		3962550	1					
ANR	3962605	PrimaryExpression	255		3962550	0					
ANR	3962606	CallExpression	"strdup ( """" )"		3962550	2					
ANR	3962607	Callee	strdup		3962550	0					
ANR	3962608	Identifier	strdup		3962550	0					
ANR	3962609	ArgumentList	""""""		3962550	1					
ANR	3962610	Argument	""""""		3962550	0					
ANR	3962611	PrimaryExpression	""""""		3962550	0					
ANR	3962612	ExpressionStatement	"res -> body = body ? strdup ( body ) : strdup ( """" )"	3699:8:93613:93657	3962550	5	True				
ANR	3962613	AssignmentExpression	"res -> body = body ? strdup ( body ) : strdup ( """" )"		3962550	0		=			
ANR	3962614	PtrMemberAccess	res -> body		3962550	0					
ANR	3962615	Identifier	res		3962550	0					
ANR	3962616	Identifier	body		3962550	1					
ANR	3962617	ConditionalExpression	"body ? strdup ( body ) : strdup ( """" )"		3962550	1					
ANR	3962618	Condition	body		3962550	0					
ANR	3962619	Identifier	body		3962550	0					
ANR	3962620	CallExpression	strdup ( body )		3962550	1					
ANR	3962621	Callee	strdup		3962550	0					
ANR	3962622	Identifier	strdup		3962550	0					
ANR	3962623	ArgumentList	body		3962550	1					
ANR	3962624	Argument	body		3962550	0					
ANR	3962625	Identifier	body		3962550	0					
ANR	3962626	CallExpression	"strdup ( """" )"		3962550	2					
ANR	3962627	Callee	strdup		3962550	0					
ANR	3962628	Identifier	strdup		3962550	0					
ANR	3962629	ArgumentList	""""""		3962550	1					
ANR	3962630	Argument	""""""		3962550	0					
ANR	3962631	PrimaryExpression	""""""		3962550	0					
ANR	3962632	ExpressionStatement	res -> layer = - 1	3700:8:93667:93682	3962550	6	True				
ANR	3962633	AssignmentExpression	res -> layer = - 1		3962550	0		=			
ANR	3962634	PtrMemberAccess	res -> layer		3962550	0					
ANR	3962635	Identifier	res		3962550	0					
ANR	3962636	Identifier	layer		3962550	1					
ANR	3962637	UnaryOperationExpression	- 1		3962550	1					
ANR	3962638	UnaryOperator	-		3962550	0					
ANR	3962639	PrimaryExpression	1		3962550	1					
ANR	3962640	ExpressionStatement	res -> pos_in_layer = - 1	3701:8:93692:93714	3962550	7	True				
ANR	3962641	AssignmentExpression	res -> pos_in_layer = - 1		3962550	0		=			
ANR	3962642	PtrMemberAccess	res -> pos_in_layer		3962550	0					
ANR	3962643	Identifier	res		3962550	0					
ANR	3962644	Identifier	pos_in_layer		3962550	1					
ANR	3962645	UnaryOperationExpression	- 1		3962550	1					
ANR	3962646	UnaryOperator	-		3962550	0					
ANR	3962647	PrimaryExpression	1		3962550	1					
ANR	3962648	ExpressionStatement	res -> is_dummy = false	3702:8:93724:93745	3962550	8	True				
ANR	3962649	AssignmentExpression	res -> is_dummy = false		3962550	0		=			
ANR	3962650	PtrMemberAccess	res -> is_dummy		3962550	0					
ANR	3962651	Identifier	res		3962550	0					
ANR	3962652	Identifier	is_dummy		3962550	1					
ANR	3962653	Identifier	false		3962550	1					
ANR	3962654	ExpressionStatement	res -> is_reversed = false	3703:8:93755:93779	3962550	9	True				
ANR	3962655	AssignmentExpression	res -> is_reversed = false		3962550	0		=			
ANR	3962656	PtrMemberAccess	res -> is_reversed		3962550	0					
ANR	3962657	Identifier	res		3962550	0					
ANR	3962658	Identifier	is_reversed		3962550	1					
ANR	3962659	Identifier	false		3962550	1					
ANR	3962660	ExpressionStatement	res -> klass = - 1	3704:8:93789:93804	3962550	10	True				
ANR	3962661	AssignmentExpression	res -> klass = - 1		3962550	0		=			
ANR	3962662	PtrMemberAccess	res -> klass		3962550	0					
ANR	3962663	Identifier	res		3962550	0					
ANR	3962664	Identifier	klass		3962550	1					
ANR	3962665	UnaryOperationExpression	- 1		3962550	1					
ANR	3962666	UnaryOperator	-		3962550	0					
ANR	3962667	PrimaryExpression	1		3962550	1					
ANR	3962668	ExpressionStatement	res -> difftype = color	3705:8:93814:93835	3962550	11	True				
ANR	3962669	AssignmentExpression	res -> difftype = color		3962550	0		=			
ANR	3962670	PtrMemberAccess	res -> difftype		3962550	0					
ANR	3962671	Identifier	res		3962550	0					
ANR	3962672	Identifier	difftype		3962550	1					
ANR	3962673	Identifier	color		3962550	1					
ANR	3962674	ExpressionStatement	"res -> gnode = r_graph_add_node ( g -> graph , res )"	3706:8:93845:93890	3962550	12	True				
ANR	3962675	AssignmentExpression	"res -> gnode = r_graph_add_node ( g -> graph , res )"		3962550	0		=			
ANR	3962676	PtrMemberAccess	res -> gnode		3962550	0					
ANR	3962677	Identifier	res		3962550	0					
ANR	3962678	Identifier	gnode		3962550	1					
ANR	3962679	CallExpression	"r_graph_add_node ( g -> graph , res )"		3962550	1					
ANR	3962680	Callee	r_graph_add_node		3962550	0					
ANR	3962681	Identifier	r_graph_add_node		3962550	0					
ANR	3962682	ArgumentList	g -> graph		3962550	1					
ANR	3962683	Argument	g -> graph		3962550	0					
ANR	3962684	PtrMemberAccess	g -> graph		3962550	0					
ANR	3962685	Identifier	g		3962550	0					
ANR	3962686	Identifier	graph		3962550	1					
ANR	3962687	Argument	res		3962550	1					
ANR	3962688	Identifier	res		3962550	0					
ANR	3962689	ExpressionStatement	"sdb_num_set ( g -> nodes , res -> title , ( ut64 ) ( size_t ) res , 0 )"	3707:8:93900:93958	3962550	13	True				
ANR	3962690	CallExpression	"sdb_num_set ( g -> nodes , res -> title , ( ut64 ) ( size_t ) res , 0 )"		3962550	0					
ANR	3962691	Callee	sdb_num_set		3962550	0					
ANR	3962692	Identifier	sdb_num_set		3962550	0					
ANR	3962693	ArgumentList	g -> nodes		3962550	1					
ANR	3962694	Argument	g -> nodes		3962550	0					
ANR	3962695	PtrMemberAccess	g -> nodes		3962550	0					
ANR	3962696	Identifier	g		3962550	0					
ANR	3962697	Identifier	nodes		3962550	1					
ANR	3962698	Argument	res -> title		3962550	1					
ANR	3962699	PtrMemberAccess	res -> title		3962550	0					
ANR	3962700	Identifier	res		3962550	0					
ANR	3962701	Identifier	title		3962550	1					
ANR	3962702	Argument	( ut64 ) ( size_t ) res		3962550	2					
ANR	3962703	CastExpression	( ut64 ) ( size_t ) res		3962550	0					
ANR	3962704	CastTarget	ut64		3962550	0					
ANR	3962705	CastExpression	( size_t ) res		3962550	1					
ANR	3962706	CastTarget	size_t		3962550	0					
ANR	3962707	Identifier	res		3962550	1					
ANR	3962708	Argument	0		3962550	3					
ANR	3962709	PrimaryExpression	0		3962550	0					
ANR	3962710	IfStatement	if ( res -> title )		3962550	14					
ANR	3962711	Condition	res -> title	3708:12:93972:93981	3962550	0	True				
ANR	3962712	PtrMemberAccess	res -> title		3962550	0					
ANR	3962713	Identifier	res		3962550	0					
ANR	3962714	Identifier	title		3962550	1					
ANR	3962715	CompoundStatement		23:16:711:721	3962550	1					
ANR	3962716	IdentifierDeclStatement	"char * s , * estr , * b ;"	3709:16:94002:94020	3962550	0	True				
ANR	3962717	IdentifierDecl	* s		3962550	0					
ANR	3962718	IdentifierDeclType	char *		3962550	0					
ANR	3962719	Identifier	s		3962550	1					
ANR	3962720	IdentifierDecl	* estr		3962550	1					
ANR	3962721	IdentifierDeclType	char *		3962550	0					
ANR	3962722	Identifier	estr		3962550	1					
ANR	3962723	IdentifierDecl	* b		3962550	2					
ANR	3962724	IdentifierDeclType	char *		3962550	0					
ANR	3962725	Identifier	b		3962550	1					
ANR	3962726	IdentifierDeclStatement	size_t len ;	3710:16:94038:94048	3962550	1	True				
ANR	3962727	IdentifierDecl	len		3962550	0					
ANR	3962728	IdentifierDeclType	size_t		3962550	0					
ANR	3962729	Identifier	len		3962550	1					
ANR	3962730	ExpressionStatement	"sdb_array_add ( g -> db , ""agraph.nodes"" , res -> title , 0 )"	3711:16:94066:94118	3962550	2	True				
ANR	3962731	CallExpression	"sdb_array_add ( g -> db , ""agraph.nodes"" , res -> title , 0 )"		3962550	0					
ANR	3962732	Callee	sdb_array_add		3962550	0					
ANR	3962733	Identifier	sdb_array_add		3962550	0					
ANR	3962734	ArgumentList	g -> db		3962550	1					
ANR	3962735	Argument	g -> db		3962550	0					
ANR	3962736	PtrMemberAccess	g -> db		3962550	0					
ANR	3962737	Identifier	g		3962550	0					
ANR	3962738	Identifier	db		3962550	1					
ANR	3962739	Argument	"""agraph.nodes"""		3962550	1					
ANR	3962740	PrimaryExpression	"""agraph.nodes"""		3962550	0					
ANR	3962741	Argument	res -> title		3962550	2					
ANR	3962742	PtrMemberAccess	res -> title		3962550	0					
ANR	3962743	Identifier	res		3962550	0					
ANR	3962744	Identifier	title		3962550	1					
ANR	3962745	Argument	0		3962550	3					
ANR	3962746	PrimaryExpression	0		3962550	0					
ANR	3962747	ExpressionStatement	b = strdup ( res -> body )	3712:16:94136:94158	3962550	3	True				
ANR	3962748	AssignmentExpression	b = strdup ( res -> body )		3962550	0		=			
ANR	3962749	Identifier	b		3962550	0					
ANR	3962750	CallExpression	strdup ( res -> body )		3962550	1					
ANR	3962751	Callee	strdup		3962550	0					
ANR	3962752	Identifier	strdup		3962550	0					
ANR	3962753	ArgumentList	res -> body		3962550	1					
ANR	3962754	Argument	res -> body		3962550	0					
ANR	3962755	PtrMemberAccess	res -> body		3962550	0					
ANR	3962756	Identifier	res		3962550	0					
ANR	3962757	Identifier	body		3962550	1					
ANR	3962758	ExpressionStatement	len = strlen ( b )	3713:16:94176:94192	3962550	4	True				
ANR	3962759	AssignmentExpression	len = strlen ( b )		3962550	0		=			
ANR	3962760	Identifier	len		3962550	0					
ANR	3962761	CallExpression	strlen ( b )		3962550	1					
ANR	3962762	Callee	strlen		3962550	0					
ANR	3962763	Identifier	strlen		3962550	0					
ANR	3962764	ArgumentList	b		3962550	1					
ANR	3962765	Argument	b		3962550	0					
ANR	3962766	Identifier	b		3962550	0					
ANR	3962767	IfStatement	if ( len > 0 && b [ len - 1 ] == '\\n' )		3962550	5					
ANR	3962768	Condition	len > 0 && b [ len - 1 ] == '\\n'	3714:20:94214:94242	3962550	0	True				
ANR	3962769	AndExpression	len > 0 && b [ len - 1 ] == '\\n'		3962550	0		&&			
ANR	3962770	RelationalExpression	len > 0		3962550	0		>			
ANR	3962771	Identifier	len		3962550	0					
ANR	3962772	PrimaryExpression	0		3962550	1					
ANR	3962773	EqualityExpression	b [ len - 1 ] == '\\n'		3962550	1		==			
ANR	3962774	ArrayIndexing	b [ len - 1 ]		3962550	0					
ANR	3962775	Identifier	b		3962550	0					
ANR	3962776	AdditiveExpression	len - 1		3962550	1		-			
ANR	3962777	Identifier	len		3962550	0					
ANR	3962778	PrimaryExpression	1		3962550	1					
ANR	3962779	PrimaryExpression	'\\n'		3962550	1					
ANR	3962780	CompoundStatement		27:51:918:918	3962550	1					
ANR	3962781	ExpressionStatement	b [ len - 1 ] = '\\0'	3715:24:94271:94288	3962550	0	True				
ANR	3962782	AssignmentExpression	b [ len - 1 ] = '\\0'		3962550	0		=			
ANR	3962783	ArrayIndexing	b [ len - 1 ]		3962550	0					
ANR	3962784	Identifier	b		3962550	0					
ANR	3962785	AdditiveExpression	len - 1		3962550	1		-			
ANR	3962786	Identifier	len		3962550	0					
ANR	3962787	PrimaryExpression	1		3962550	1					
ANR	3962788	PrimaryExpression	'\\0'		3962550	1					
ANR	3962789	ExpressionStatement	"estr = sdb_encode ( ( const void * ) b , - 1 )"	3717:16:94324:94364	3962550	6	True				
ANR	3962790	AssignmentExpression	"estr = sdb_encode ( ( const void * ) b , - 1 )"		3962550	0		=			
ANR	3962791	Identifier	estr		3962550	0					
ANR	3962792	CallExpression	"sdb_encode ( ( const void * ) b , - 1 )"		3962550	1					
ANR	3962793	Callee	sdb_encode		3962550	0					
ANR	3962794	Identifier	sdb_encode		3962550	0					
ANR	3962795	ArgumentList	( const void * ) b		3962550	1					
ANR	3962796	Argument	( const void * ) b		3962550	0					
ANR	3962797	CastExpression	( const void * ) b		3962550	0					
ANR	3962798	CastTarget	const void *		3962550	0					
ANR	3962799	Identifier	b		3962550	1					
ANR	3962800	Argument	- 1		3962550	1					
ANR	3962801	UnaryOperationExpression	- 1		3962550	0					
ANR	3962802	UnaryOperator	-		3962550	0					
ANR	3962803	PrimaryExpression	1		3962550	1					
ANR	3962804	ExpressionStatement	"s = r_str_newf ( ""base64:%s"" , estr )"	3719:16:94433:94467	3962550	7	True				
ANR	3962805	AssignmentExpression	"s = r_str_newf ( ""base64:%s"" , estr )"		3962550	0		=			
ANR	3962806	Identifier	s		3962550	0					
ANR	3962807	CallExpression	"r_str_newf ( ""base64:%s"" , estr )"		3962550	1					
ANR	3962808	Callee	r_str_newf		3962550	0					
ANR	3962809	Identifier	r_str_newf		3962550	0					
ANR	3962810	ArgumentList	"""base64:%s"""		3962550	1					
ANR	3962811	Argument	"""base64:%s"""		3962550	0					
ANR	3962812	PrimaryExpression	"""base64:%s"""		3962550	0					
ANR	3962813	Argument	estr		3962550	1					
ANR	3962814	Identifier	estr		3962550	0					
ANR	3962815	ExpressionStatement	free ( estr )	3720:16:94485:94496	3962550	8	True				
ANR	3962816	CallExpression	free ( estr )		3962550	0					
ANR	3962817	Callee	free		3962550	0					
ANR	3962818	Identifier	free		3962550	0					
ANR	3962819	ArgumentList	estr		3962550	1					
ANR	3962820	Argument	estr		3962550	0					
ANR	3962821	Identifier	estr		3962550	0					
ANR	3962822	ExpressionStatement	free ( b )	3721:16:94514:94522	3962550	9	True				
ANR	3962823	CallExpression	free ( b )		3962550	0					
ANR	3962824	Callee	free		3962550	0					
ANR	3962825	Identifier	free		3962550	0					
ANR	3962826	ArgumentList	b		3962550	1					
ANR	3962827	Argument	b		3962550	0					
ANR	3962828	Identifier	b		3962550	0					
ANR	3962829	ExpressionStatement	"sdb_set ( g -> db , sdb_fmt ( ""agraph.nodes.%s.body"" , res -> title ) , s , 0 )"	3722:16:94540:94607	3962550	10	True				
ANR	3962830	CallExpression	"sdb_set ( g -> db , sdb_fmt ( ""agraph.nodes.%s.body"" , res -> title ) , s , 0 )"		3962550	0					
ANR	3962831	Callee	sdb_set		3962550	0					
ANR	3962832	Identifier	sdb_set		3962550	0					
ANR	3962833	ArgumentList	g -> db		3962550	1					
ANR	3962834	Argument	g -> db		3962550	0					
ANR	3962835	PtrMemberAccess	g -> db		3962550	0					
ANR	3962836	Identifier	g		3962550	0					
ANR	3962837	Identifier	db		3962550	1					
ANR	3962838	Argument	"sdb_fmt ( ""agraph.nodes.%s.body"" , res -> title )"		3962550	1					
ANR	3962839	CallExpression	"sdb_fmt ( ""agraph.nodes.%s.body"" , res -> title )"		3962550	0					
ANR	3962840	Callee	sdb_fmt		3962550	0					
ANR	3962841	Identifier	sdb_fmt		3962550	0					
ANR	3962842	ArgumentList	"""agraph.nodes.%s.body"""		3962550	1					
ANR	3962843	Argument	"""agraph.nodes.%s.body"""		3962550	0					
ANR	3962844	PrimaryExpression	"""agraph.nodes.%s.body"""		3962550	0					
ANR	3962845	Argument	res -> title		3962550	1					
ANR	3962846	PtrMemberAccess	res -> title		3962550	0					
ANR	3962847	Identifier	res		3962550	0					
ANR	3962848	Identifier	title		3962550	1					
ANR	3962849	Argument	s		3962550	2					
ANR	3962850	Identifier	s		3962550	0					
ANR	3962851	Argument	0		3962550	3					
ANR	3962852	PrimaryExpression	0		3962550	0					
ANR	3962853	ReturnStatement	return res ;	3724:8:94627:94637	3962550	15	True				
ANR	3962854	Identifier	res		3962550	0					
ANR	3962855	ReturnType	R_API RANode *		3962550	1					
ANR	3962856	Identifier	r_agraph_add_node_with_color		3962550	2					
ANR	3962857	ParameterList	"const RAGraph * g , const char * title , const char * body , int color"		3962550	3					
ANR	3962858	Parameter	const RAGraph * g	3688:43:93260:93275	3962550	0	True				
ANR	3962859	ParameterType	const RAGraph *		3962550	0					
ANR	3962860	Identifier	g		3962550	1					
ANR	3962861	Parameter	const char * title	3688:61:93278:93294	3962550	1	True				
ANR	3962862	ParameterType	const char *		3962550	0					
ANR	3962863	Identifier	title		3962550	1					
ANR	3962864	Parameter	const char * body	3688:80:93297:93312	3962550	2	True				
ANR	3962865	ParameterType	const char *		3962550	0					
ANR	3962866	Identifier	body		3962550	1					
ANR	3962867	Parameter	int color	3688:98:93315:93323	3962550	3	True				
ANR	3962868	ParameterType	int		3962550	0					
ANR	3962869	Identifier	color		3962550	1					
ANR	3962870	CFGEntryNode	ENTRY		3962550		True				
ANR	3962871	CFGExitNode	EXIT		3962550		True				
ANR	3962872	Symbol	res -> is_reversed		3962550						
ANR	3962873	Symbol	res -> title		3962550						
ANR	3962874	Symbol	estr		3962550						
ANR	3962875	Symbol	color		3962550						
ANR	3962876	Symbol	g -> db		3962550						
ANR	3962877	Symbol	res -> gnode		3962550						
ANR	3962878	Symbol	* res		3962550						
ANR	3962879	Symbol	r_str_newf		3962550						
ANR	3962880	Symbol	title		3962550						
ANR	3962881	Symbol	body		3962550						
ANR	3962882	Symbol	res -> is_dummy		3962550						
ANR	3962883	Symbol	strlen		3962550						
ANR	3962884	Symbol	len		3962550						
ANR	3962885	Symbol	g -> graph		3962550						
ANR	3962886	Symbol	g -> nodes		3962550						
ANR	3962887	Symbol	r_agraph_get_node		3962550						
ANR	3962888	Symbol	res -> layer		3962550						
ANR	3962889	Symbol	sdb_encode		3962550						
ANR	3962890	Symbol	res -> difftype		3962550						
ANR	3962891	Symbol	res -> body		3962550						
ANR	3962892	Symbol	sdb_fmt		3962550						
ANR	3962893	Symbol	res		3962550						
ANR	3962894	Symbol	b		3962550						
ANR	3962895	Symbol	NULL		3962550						
ANR	3962896	Symbol	g		3962550						
ANR	3962897	Symbol	false		3962550						
ANR	3962898	Symbol	* b		3962550						
ANR	3962899	Symbol	R_NEW0		3962550						
ANR	3962900	Symbol	* g		3962550						
ANR	3962901	Symbol	s		3962550						
ANR	3962902	Symbol	RANode		3962550						
ANR	3962903	Symbol	r_str_trunc_ellipsis		3962550						
ANR	3962904	Symbol	res -> pos_in_layer		3962550						
ANR	3962905	Symbol	strdup		3962550						
ANR	3962906	Symbol	res -> klass		3962550						
ANR	3962907	Symbol	r_graph_add_node		3962550						
ANR	3962908	Symbol	* len		3962550						
ANR	3962909	Function	r_agraph_add_node	3727:0:94642:94796							
ANR	3962910	FunctionDef	"r_agraph_add_node (const RAGraph * g , const char * title , const char * body)"		3962909	0					
ANR	3962911	CompoundStatement		3727:87:94729:94796	3962909	0					
ANR	3962912	ReturnStatement	"return r_agraph_add_node_with_color ( g , title , body , - 1 ) ;"	3728:8:94739:94794	3962909	0	True				
ANR	3962913	CallExpression	"r_agraph_add_node_with_color ( g , title , body , - 1 )"		3962909	0					
ANR	3962914	Callee	r_agraph_add_node_with_color		3962909	0					
ANR	3962915	Identifier	r_agraph_add_node_with_color		3962909	0					
ANR	3962916	ArgumentList	g		3962909	1					
ANR	3962917	Argument	g		3962909	0					
ANR	3962918	Identifier	g		3962909	0					
ANR	3962919	Argument	title		3962909	1					
ANR	3962920	Identifier	title		3962909	0					
ANR	3962921	Argument	body		3962909	2					
ANR	3962922	Identifier	body		3962909	0					
ANR	3962923	Argument	- 1		3962909	3					
ANR	3962924	UnaryOperationExpression	- 1		3962909	0					
ANR	3962925	UnaryOperator	-		3962909	0					
ANR	3962926	PrimaryExpression	1		3962909	1					
ANR	3962927	ReturnType	R_API RANode *		3962909	1					
ANR	3962928	Identifier	r_agraph_add_node		3962909	2					
ANR	3962929	ParameterList	"const RAGraph * g , const char * title , const char * body"		3962909	3					
ANR	3962930	Parameter	const RAGraph * g	3727:32:94674:94689	3962909	0	True				
ANR	3962931	ParameterType	const RAGraph *		3962909	0					
ANR	3962932	Identifier	g		3962909	1					
ANR	3962933	Parameter	const char * title	3727:50:94692:94708	3962909	1	True				
ANR	3962934	ParameterType	const char *		3962909	0					
ANR	3962935	Identifier	title		3962909	1					
ANR	3962936	Parameter	const char * body	3727:69:94711:94726	3962909	2	True				
ANR	3962937	ParameterType	const char *		3962909	0					
ANR	3962938	Identifier	body		3962909	1					
ANR	3962939	CFGEntryNode	ENTRY		3962909		True				
ANR	3962940	CFGExitNode	EXIT		3962909		True				
ANR	3962941	Symbol	g		3962909						
ANR	3962942	Symbol	title		3962909						
ANR	3962943	Symbol	body		3962909						
ANR	3962944	Symbol	r_agraph_add_node_with_color		3962909						
ANR	3962945	Function	r_agraph_del_node	3731:0:94799:95992							
ANR	3962946	FunctionDef	"r_agraph_del_node (const RAGraph * g , const char * title)"		3962945	0					
ANR	3962947	CompoundStatement		3731:66:94865:95992	3962945	0					
ANR	3962948	IdentifierDeclStatement	"char * title_trunc = r_str_trunc_ellipsis ( title , 255 ) ;"	3732:1:94868:94921	3962945	0	True				
ANR	3962949	IdentifierDecl	"* title_trunc = r_str_trunc_ellipsis ( title , 255 )"		3962945	0					
ANR	3962950	IdentifierDeclType	char *		3962945	0					
ANR	3962951	Identifier	title_trunc		3962945	1					
ANR	3962952	AssignmentExpression	"* title_trunc = r_str_trunc_ellipsis ( title , 255 )"		3962945	2		=			
ANR	3962953	Identifier	title_trunc		3962945	0					
ANR	3962954	CallExpression	"r_str_trunc_ellipsis ( title , 255 )"		3962945	1					
ANR	3962955	Callee	r_str_trunc_ellipsis		3962945	0					
ANR	3962956	Identifier	r_str_trunc_ellipsis		3962945	0					
ANR	3962957	ArgumentList	title		3962945	1					
ANR	3962958	Argument	title		3962945	0					
ANR	3962959	Identifier	title		3962945	0					
ANR	3962960	Argument	255		3962945	1					
ANR	3962961	PrimaryExpression	255		3962945	0					
ANR	3962962	IdentifierDeclStatement	"RANode * an , * res = r_agraph_get_node ( g , title_trunc ) ;"	3733:1:94924:94977	3962945	1	True				
ANR	3962963	IdentifierDecl	* an		3962945	0					
ANR	3962964	IdentifierDeclType	RANode *		3962945	0					
ANR	3962965	Identifier	an		3962945	1					
ANR	3962966	IdentifierDecl	"* res = r_agraph_get_node ( g , title_trunc )"		3962945	1					
ANR	3962967	IdentifierDeclType	RANode *		3962945	0					
ANR	3962968	Identifier	res		3962945	1					
ANR	3962969	AssignmentExpression	"* res = r_agraph_get_node ( g , title_trunc )"		3962945	2		=			
ANR	3962970	Identifier	res		3962945	0					
ANR	3962971	CallExpression	"r_agraph_get_node ( g , title_trunc )"		3962945	1					
ANR	3962972	Callee	r_agraph_get_node		3962945	0					
ANR	3962973	Identifier	r_agraph_get_node		3962945	0					
ANR	3962974	ArgumentList	g		3962945	1					
ANR	3962975	Argument	g		3962945	0					
ANR	3962976	Identifier	g		3962945	0					
ANR	3962977	Argument	title_trunc		3962945	1					
ANR	3962978	Identifier	title_trunc		3962945	0					
ANR	3962979	ExpressionStatement	free ( title_trunc )	3734:1:94980:94998	3962945	2	True				
ANR	3962980	CallExpression	free ( title_trunc )		3962945	0					
ANR	3962981	Callee	free		3962945	0					
ANR	3962982	Identifier	free		3962945	0					
ANR	3962983	ArgumentList	title_trunc		3962945	1					
ANR	3962984	Argument	title_trunc		3962945	0					
ANR	3962985	Identifier	title_trunc		3962945	0					
ANR	3962986	IdentifierDeclStatement	RGraphNode * gn ;	3735:1:95001:95015	3962945	3	True				
ANR	3962987	IdentifierDecl	* gn		3962945	0					
ANR	3962988	IdentifierDeclType	RGraphNode *		3962945	0					
ANR	3962989	Identifier	gn		3962945	1					
ANR	3962990	IdentifierDeclStatement	RListIter * it ;	3736:1:95018:95031	3962945	4	True				
ANR	3962991	IdentifierDecl	* it		3962945	0					
ANR	3962992	IdentifierDeclType	RListIter *		3962945	0					
ANR	3962993	Identifier	it		3962945	1					
ANR	3962994	IfStatement	if ( ! res )		3962945	5					
ANR	3962995	Condition	! res	3738:5:95039:95042	3962945	0	True				
ANR	3962996	UnaryOperationExpression	! res		3962945	0					
ANR	3962997	UnaryOperator	!		3962945	0					
ANR	3962998	Identifier	res		3962945	1					
ANR	3962999	CompoundStatement		8:11:179:179	3962945	1					
ANR	3963000	ReturnStatement	return false ;	3739:2:95049:95061	3962945	0	True				
ANR	3963001	Identifier	false		3962945	0					
ANR	3963002	ExpressionStatement	"sdb_set ( g -> nodes , res -> title , NULL , 0 )"	3741:1:95067:95106	3962945	6	True				
ANR	3963003	CallExpression	"sdb_set ( g -> nodes , res -> title , NULL , 0 )"		3962945	0					
ANR	3963004	Callee	sdb_set		3962945	0					
ANR	3963005	Identifier	sdb_set		3962945	0					
ANR	3963006	ArgumentList	g -> nodes		3962945	1					
ANR	3963007	Argument	g -> nodes		3962945	0					
ANR	3963008	PtrMemberAccess	g -> nodes		3962945	0					
ANR	3963009	Identifier	g		3962945	0					
ANR	3963010	Identifier	nodes		3962945	1					
ANR	3963011	Argument	res -> title		3962945	1					
ANR	3963012	PtrMemberAccess	res -> title		3962945	0					
ANR	3963013	Identifier	res		3962945	0					
ANR	3963014	Identifier	title		3962945	1					
ANR	3963015	Argument	NULL		3962945	2					
ANR	3963016	Identifier	NULL		3962945	0					
ANR	3963017	Argument	0		3962945	3					
ANR	3963018	PrimaryExpression	0		3962945	0					
ANR	3963019	ExpressionStatement	"sdb_array_remove ( g -> db , ""agraph.nodes"" , res -> title , 0 )"	3742:1:95109:95164	3962945	7	True				
ANR	3963020	CallExpression	"sdb_array_remove ( g -> db , ""agraph.nodes"" , res -> title , 0 )"		3962945	0					
ANR	3963021	Callee	sdb_array_remove		3962945	0					
ANR	3963022	Identifier	sdb_array_remove		3962945	0					
ANR	3963023	ArgumentList	g -> db		3962945	1					
ANR	3963024	Argument	g -> db		3962945	0					
ANR	3963025	PtrMemberAccess	g -> db		3962945	0					
ANR	3963026	Identifier	g		3962945	0					
ANR	3963027	Identifier	db		3962945	1					
ANR	3963028	Argument	"""agraph.nodes"""		3962945	1					
ANR	3963029	PrimaryExpression	"""agraph.nodes"""		3962945	0					
ANR	3963030	Argument	res -> title		3962945	2					
ANR	3963031	PtrMemberAccess	res -> title		3962945	0					
ANR	3963032	Identifier	res		3962945	0					
ANR	3963033	Identifier	title		3962945	1					
ANR	3963034	Argument	0		3962945	3					
ANR	3963035	PrimaryExpression	0		3962945	0					
ANR	3963036	ExpressionStatement	"sdb_set ( g -> db , sdb_fmt ( ""agraph.nodes.%s"" , res -> title ) , NULL , 0 )"	3743:1:95167:95232	3962945	8	True				
ANR	3963037	CallExpression	"sdb_set ( g -> db , sdb_fmt ( ""agraph.nodes.%s"" , res -> title ) , NULL , 0 )"		3962945	0					
ANR	3963038	Callee	sdb_set		3962945	0					
ANR	3963039	Identifier	sdb_set		3962945	0					
ANR	3963040	ArgumentList	g -> db		3962945	1					
ANR	3963041	Argument	g -> db		3962945	0					
ANR	3963042	PtrMemberAccess	g -> db		3962945	0					
ANR	3963043	Identifier	g		3962945	0					
ANR	3963044	Identifier	db		3962945	1					
ANR	3963045	Argument	"sdb_fmt ( ""agraph.nodes.%s"" , res -> title )"		3962945	1					
ANR	3963046	CallExpression	"sdb_fmt ( ""agraph.nodes.%s"" , res -> title )"		3962945	0					
ANR	3963047	Callee	sdb_fmt		3962945	0					
ANR	3963048	Identifier	sdb_fmt		3962945	0					
ANR	3963049	ArgumentList	"""agraph.nodes.%s"""		3962945	1					
ANR	3963050	Argument	"""agraph.nodes.%s"""		3962945	0					
ANR	3963051	PrimaryExpression	"""agraph.nodes.%s"""		3962945	0					
ANR	3963052	Argument	res -> title		3962945	1					
ANR	3963053	PtrMemberAccess	res -> title		3962945	0					
ANR	3963054	Identifier	res		3962945	0					
ANR	3963055	Identifier	title		3962945	1					
ANR	3963056	Argument	NULL		3962945	2					
ANR	3963057	Identifier	NULL		3962945	0					
ANR	3963058	Argument	0		3962945	3					
ANR	3963059	PrimaryExpression	0		3962945	0					
ANR	3963060	ExpressionStatement	"sdb_set ( g -> db , sdb_fmt ( ""agraph.nodes.%s.body"" , res -> title ) , 0 , 0 )"	3744:1:95235:95302	3962945	9	True				
ANR	3963061	CallExpression	"sdb_set ( g -> db , sdb_fmt ( ""agraph.nodes.%s.body"" , res -> title ) , 0 , 0 )"		3962945	0					
ANR	3963062	Callee	sdb_set		3962945	0					
ANR	3963063	Identifier	sdb_set		3962945	0					
ANR	3963064	ArgumentList	g -> db		3962945	1					
ANR	3963065	Argument	g -> db		3962945	0					
ANR	3963066	PtrMemberAccess	g -> db		3962945	0					
ANR	3963067	Identifier	g		3962945	0					
ANR	3963068	Identifier	db		3962945	1					
ANR	3963069	Argument	"sdb_fmt ( ""agraph.nodes.%s.body"" , res -> title )"		3962945	1					
ANR	3963070	CallExpression	"sdb_fmt ( ""agraph.nodes.%s.body"" , res -> title )"		3962945	0					
ANR	3963071	Callee	sdb_fmt		3962945	0					
ANR	3963072	Identifier	sdb_fmt		3962945	0					
ANR	3963073	ArgumentList	"""agraph.nodes.%s.body"""		3962945	1					
ANR	3963074	Argument	"""agraph.nodes.%s.body"""		3962945	0					
ANR	3963075	PrimaryExpression	"""agraph.nodes.%s.body"""		3962945	0					
ANR	3963076	Argument	res -> title		3962945	1					
ANR	3963077	PtrMemberAccess	res -> title		3962945	0					
ANR	3963078	Identifier	res		3962945	0					
ANR	3963079	Identifier	title		3962945	1					
ANR	3963080	Argument	0		3962945	2					
ANR	3963081	PrimaryExpression	0		3962945	0					
ANR	3963082	Argument	0		3962945	3					
ANR	3963083	PrimaryExpression	0		3962945	0					
ANR	3963084	ExpressionStatement	"sdb_set ( g -> db , sdb_fmt ( ""agraph.nodes.%s.x"" , res -> title ) , NULL , 0 )"	3745:1:95305:95372	3962945	10	True				
ANR	3963085	CallExpression	"sdb_set ( g -> db , sdb_fmt ( ""agraph.nodes.%s.x"" , res -> title ) , NULL , 0 )"		3962945	0					
ANR	3963086	Callee	sdb_set		3962945	0					
ANR	3963087	Identifier	sdb_set		3962945	0					
ANR	3963088	ArgumentList	g -> db		3962945	1					
ANR	3963089	Argument	g -> db		3962945	0					
ANR	3963090	PtrMemberAccess	g -> db		3962945	0					
ANR	3963091	Identifier	g		3962945	0					
ANR	3963092	Identifier	db		3962945	1					
ANR	3963093	Argument	"sdb_fmt ( ""agraph.nodes.%s.x"" , res -> title )"		3962945	1					
ANR	3963094	CallExpression	"sdb_fmt ( ""agraph.nodes.%s.x"" , res -> title )"		3962945	0					
ANR	3963095	Callee	sdb_fmt		3962945	0					
ANR	3963096	Identifier	sdb_fmt		3962945	0					
ANR	3963097	ArgumentList	"""agraph.nodes.%s.x"""		3962945	1					
ANR	3963098	Argument	"""agraph.nodes.%s.x"""		3962945	0					
ANR	3963099	PrimaryExpression	"""agraph.nodes.%s.x"""		3962945	0					
ANR	3963100	Argument	res -> title		3962945	1					
ANR	3963101	PtrMemberAccess	res -> title		3962945	0					
ANR	3963102	Identifier	res		3962945	0					
ANR	3963103	Identifier	title		3962945	1					
ANR	3963104	Argument	NULL		3962945	2					
ANR	3963105	Identifier	NULL		3962945	0					
ANR	3963106	Argument	0		3962945	3					
ANR	3963107	PrimaryExpression	0		3962945	0					
ANR	3963108	ExpressionStatement	"sdb_set ( g -> db , sdb_fmt ( ""agraph.nodes.%s.y"" , res -> title ) , NULL , 0 )"	3746:1:95375:95442	3962945	11	True				
ANR	3963109	CallExpression	"sdb_set ( g -> db , sdb_fmt ( ""agraph.nodes.%s.y"" , res -> title ) , NULL , 0 )"		3962945	0					
ANR	3963110	Callee	sdb_set		3962945	0					
ANR	3963111	Identifier	sdb_set		3962945	0					
ANR	3963112	ArgumentList	g -> db		3962945	1					
ANR	3963113	Argument	g -> db		3962945	0					
ANR	3963114	PtrMemberAccess	g -> db		3962945	0					
ANR	3963115	Identifier	g		3962945	0					
ANR	3963116	Identifier	db		3962945	1					
ANR	3963117	Argument	"sdb_fmt ( ""agraph.nodes.%s.y"" , res -> title )"		3962945	1					
ANR	3963118	CallExpression	"sdb_fmt ( ""agraph.nodes.%s.y"" , res -> title )"		3962945	0					
ANR	3963119	Callee	sdb_fmt		3962945	0					
ANR	3963120	Identifier	sdb_fmt		3962945	0					
ANR	3963121	ArgumentList	"""agraph.nodes.%s.y"""		3962945	1					
ANR	3963122	Argument	"""agraph.nodes.%s.y"""		3962945	0					
ANR	3963123	PrimaryExpression	"""agraph.nodes.%s.y"""		3962945	0					
ANR	3963124	Argument	res -> title		3962945	1					
ANR	3963125	PtrMemberAccess	res -> title		3962945	0					
ANR	3963126	Identifier	res		3962945	0					
ANR	3963127	Identifier	title		3962945	1					
ANR	3963128	Argument	NULL		3962945	2					
ANR	3963129	Identifier	NULL		3962945	0					
ANR	3963130	Argument	0		3962945	3					
ANR	3963131	PrimaryExpression	0		3962945	0					
ANR	3963132	ExpressionStatement	"sdb_set ( g -> db , sdb_fmt ( ""agraph.nodes.%s.w"" , res -> title ) , NULL , 0 )"	3747:1:95445:95512	3962945	12	True				
ANR	3963133	CallExpression	"sdb_set ( g -> db , sdb_fmt ( ""agraph.nodes.%s.w"" , res -> title ) , NULL , 0 )"		3962945	0					
ANR	3963134	Callee	sdb_set		3962945	0					
ANR	3963135	Identifier	sdb_set		3962945	0					
ANR	3963136	ArgumentList	g -> db		3962945	1					
ANR	3963137	Argument	g -> db		3962945	0					
ANR	3963138	PtrMemberAccess	g -> db		3962945	0					
ANR	3963139	Identifier	g		3962945	0					
ANR	3963140	Identifier	db		3962945	1					
ANR	3963141	Argument	"sdb_fmt ( ""agraph.nodes.%s.w"" , res -> title )"		3962945	1					
ANR	3963142	CallExpression	"sdb_fmt ( ""agraph.nodes.%s.w"" , res -> title )"		3962945	0					
ANR	3963143	Callee	sdb_fmt		3962945	0					
ANR	3963144	Identifier	sdb_fmt		3962945	0					
ANR	3963145	ArgumentList	"""agraph.nodes.%s.w"""		3962945	1					
ANR	3963146	Argument	"""agraph.nodes.%s.w"""		3962945	0					
ANR	3963147	PrimaryExpression	"""agraph.nodes.%s.w"""		3962945	0					
ANR	3963148	Argument	res -> title		3962945	1					
ANR	3963149	PtrMemberAccess	res -> title		3962945	0					
ANR	3963150	Identifier	res		3962945	0					
ANR	3963151	Identifier	title		3962945	1					
ANR	3963152	Argument	NULL		3962945	2					
ANR	3963153	Identifier	NULL		3962945	0					
ANR	3963154	Argument	0		3962945	3					
ANR	3963155	PrimaryExpression	0		3962945	0					
ANR	3963156	ExpressionStatement	"sdb_set ( g -> db , sdb_fmt ( ""agraph.nodes.%s.h"" , res -> title ) , NULL , 0 )"	3748:1:95515:95582	3962945	13	True				
ANR	3963157	CallExpression	"sdb_set ( g -> db , sdb_fmt ( ""agraph.nodes.%s.h"" , res -> title ) , NULL , 0 )"		3962945	0					
ANR	3963158	Callee	sdb_set		3962945	0					
ANR	3963159	Identifier	sdb_set		3962945	0					
ANR	3963160	ArgumentList	g -> db		3962945	1					
ANR	3963161	Argument	g -> db		3962945	0					
ANR	3963162	PtrMemberAccess	g -> db		3962945	0					
ANR	3963163	Identifier	g		3962945	0					
ANR	3963164	Identifier	db		3962945	1					
ANR	3963165	Argument	"sdb_fmt ( ""agraph.nodes.%s.h"" , res -> title )"		3962945	1					
ANR	3963166	CallExpression	"sdb_fmt ( ""agraph.nodes.%s.h"" , res -> title )"		3962945	0					
ANR	3963167	Callee	sdb_fmt		3962945	0					
ANR	3963168	Identifier	sdb_fmt		3962945	0					
ANR	3963169	ArgumentList	"""agraph.nodes.%s.h"""		3962945	1					
ANR	3963170	Argument	"""agraph.nodes.%s.h"""		3962945	0					
ANR	3963171	PrimaryExpression	"""agraph.nodes.%s.h"""		3962945	0					
ANR	3963172	Argument	res -> title		3962945	1					
ANR	3963173	PtrMemberAccess	res -> title		3962945	0					
ANR	3963174	Identifier	res		3962945	0					
ANR	3963175	Identifier	title		3962945	1					
ANR	3963176	Argument	NULL		3962945	2					
ANR	3963177	Identifier	NULL		3962945	0					
ANR	3963178	Argument	0		3962945	3					
ANR	3963179	PrimaryExpression	0		3962945	0					
ANR	3963180	ExpressionStatement	"sdb_set ( g -> db , sdb_fmt ( ""agraph.nodes.%s.neighbours"" , res -> title ) , NULL , 0 )"	3749:1:95585:95661	3962945	14	True				
ANR	3963181	CallExpression	"sdb_set ( g -> db , sdb_fmt ( ""agraph.nodes.%s.neighbours"" , res -> title ) , NULL , 0 )"		3962945	0					
ANR	3963182	Callee	sdb_set		3962945	0					
ANR	3963183	Identifier	sdb_set		3962945	0					
ANR	3963184	ArgumentList	g -> db		3962945	1					
ANR	3963185	Argument	g -> db		3962945	0					
ANR	3963186	PtrMemberAccess	g -> db		3962945	0					
ANR	3963187	Identifier	g		3962945	0					
ANR	3963188	Identifier	db		3962945	1					
ANR	3963189	Argument	"sdb_fmt ( ""agraph.nodes.%s.neighbours"" , res -> title )"		3962945	1					
ANR	3963190	CallExpression	"sdb_fmt ( ""agraph.nodes.%s.neighbours"" , res -> title )"		3962945	0					
ANR	3963191	Callee	sdb_fmt		3962945	0					
ANR	3963192	Identifier	sdb_fmt		3962945	0					
ANR	3963193	ArgumentList	"""agraph.nodes.%s.neighbours"""		3962945	1					
ANR	3963194	Argument	"""agraph.nodes.%s.neighbours"""		3962945	0					
ANR	3963195	PrimaryExpression	"""agraph.nodes.%s.neighbours"""		3962945	0					
ANR	3963196	Argument	res -> title		3962945	1					
ANR	3963197	PtrMemberAccess	res -> title		3962945	0					
ANR	3963198	Identifier	res		3962945	0					
ANR	3963199	Identifier	title		3962945	1					
ANR	3963200	Argument	NULL		3962945	2					
ANR	3963201	Identifier	NULL		3962945	0					
ANR	3963202	Argument	0		3962945	3					
ANR	3963203	PrimaryExpression	0		3962945	0					
ANR	3963204	IdentifierDeclStatement	"const RList * innodes = r_graph_innodes ( g -> graph , res -> gnode ) ;"	3751:1:95665:95726	3962945	15	True				
ANR	3963205	IdentifierDecl	"* innodes = r_graph_innodes ( g -> graph , res -> gnode )"		3962945	0					
ANR	3963206	IdentifierDeclType	const RList *		3962945	0					
ANR	3963207	Identifier	innodes		3962945	1					
ANR	3963208	AssignmentExpression	"* innodes = r_graph_innodes ( g -> graph , res -> gnode )"		3962945	2		=			
ANR	3963209	Identifier	innodes		3962945	0					
ANR	3963210	CallExpression	"r_graph_innodes ( g -> graph , res -> gnode )"		3962945	1					
ANR	3963211	Callee	r_graph_innodes		3962945	0					
ANR	3963212	Identifier	r_graph_innodes		3962945	0					
ANR	3963213	ArgumentList	g -> graph		3962945	1					
ANR	3963214	Argument	g -> graph		3962945	0					
ANR	3963215	PtrMemberAccess	g -> graph		3962945	0					
ANR	3963216	Identifier	g		3962945	0					
ANR	3963217	Identifier	graph		3962945	1					
ANR	3963218	Argument	res -> gnode		3962945	1					
ANR	3963219	PtrMemberAccess	res -> gnode		3962945	0					
ANR	3963220	Identifier	res		3962945	0					
ANR	3963221	Identifier	gnode		3962945	1					
ANR	3963222	Statement	graph_foreach_anode	3752:1:95729:95747	3962945	16	True				
ANR	3963223	Statement	(	3752:21:95749:95749	3962945	17	True				
ANR	3963224	Statement	innodes	3752:22:95750:95756	3962945	18	True				
ANR	3963225	Statement	","	3752:29:95757:95757	3962945	19	True				
ANR	3963226	Statement	it	3752:31:95759:95760	3962945	20	True				
ANR	3963227	Statement	","	3752:33:95761:95761	3962945	21	True				
ANR	3963228	Statement	gn	3752:35:95763:95764	3962945	22	True				
ANR	3963229	Statement	","	3752:37:95765:95765	3962945	23	True				
ANR	3963230	Statement	an	3752:39:95767:95768	3962945	24	True				
ANR	3963231	Statement	)	3752:41:95769:95769	3962945	25	True				
ANR	3963232	CompoundStatement		23:2:909:976	3962945	26					
ANR	3963233	IdentifierDeclStatement	"const char * key = sdb_fmt ( ""agraph.nodes.%s.neighbours"" , an -> title ) ;"	3753:2:95775:95842	3962945	0	True				
ANR	3963234	IdentifierDecl	"* key = sdb_fmt ( ""agraph.nodes.%s.neighbours"" , an -> title )"		3962945	0					
ANR	3963235	IdentifierDeclType	const char *		3962945	0					
ANR	3963236	Identifier	key		3962945	1					
ANR	3963237	AssignmentExpression	"* key = sdb_fmt ( ""agraph.nodes.%s.neighbours"" , an -> title )"		3962945	2		=			
ANR	3963238	Identifier	key		3962945	0					
ANR	3963239	CallExpression	"sdb_fmt ( ""agraph.nodes.%s.neighbours"" , an -> title )"		3962945	1					
ANR	3963240	Callee	sdb_fmt		3962945	0					
ANR	3963241	Identifier	sdb_fmt		3962945	0					
ANR	3963242	ArgumentList	"""agraph.nodes.%s.neighbours"""		3962945	1					
ANR	3963243	Argument	"""agraph.nodes.%s.neighbours"""		3962945	0					
ANR	3963244	PrimaryExpression	"""agraph.nodes.%s.neighbours"""		3962945	0					
ANR	3963245	Argument	an -> title		3962945	1					
ANR	3963246	PtrMemberAccess	an -> title		3962945	0					
ANR	3963247	Identifier	an		3962945	0					
ANR	3963248	Identifier	title		3962945	1					
ANR	3963249	ExpressionStatement	"sdb_array_remove ( g -> db , key , res -> title , 0 )"	3754:2:95846:95890	3962945	1	True				
ANR	3963250	CallExpression	"sdb_array_remove ( g -> db , key , res -> title , 0 )"		3962945	0					
ANR	3963251	Callee	sdb_array_remove		3962945	0					
ANR	3963252	Identifier	sdb_array_remove		3962945	0					
ANR	3963253	ArgumentList	g -> db		3962945	1					
ANR	3963254	Argument	g -> db		3962945	0					
ANR	3963255	PtrMemberAccess	g -> db		3962945	0					
ANR	3963256	Identifier	g		3962945	0					
ANR	3963257	Identifier	db		3962945	1					
ANR	3963258	Argument	key		3962945	1					
ANR	3963259	Identifier	key		3962945	0					
ANR	3963260	Argument	res -> title		3962945	2					
ANR	3963261	PtrMemberAccess	res -> title		3962945	0					
ANR	3963262	Identifier	res		3962945	0					
ANR	3963263	Identifier	title		3962945	1					
ANR	3963264	Argument	0		3962945	3					
ANR	3963265	PrimaryExpression	0		3962945	0					
ANR	3963266	ExpressionStatement	"r_graph_del_node ( g -> graph , res -> gnode )"	3757:1:95897:95936	3962945	27	True				
ANR	3963267	CallExpression	"r_graph_del_node ( g -> graph , res -> gnode )"		3962945	0					
ANR	3963268	Callee	r_graph_del_node		3962945	0					
ANR	3963269	Identifier	r_graph_del_node		3962945	0					
ANR	3963270	ArgumentList	g -> graph		3962945	1					
ANR	3963271	Argument	g -> graph		3962945	0					
ANR	3963272	PtrMemberAccess	g -> graph		3962945	0					
ANR	3963273	Identifier	g		3962945	0					
ANR	3963274	Identifier	graph		3962945	1					
ANR	3963275	Argument	res -> gnode		3962945	1					
ANR	3963276	PtrMemberAccess	res -> gnode		3962945	0					
ANR	3963277	Identifier	res		3962945	0					
ANR	3963278	Identifier	gnode		3962945	1					
ANR	3963279	ExpressionStatement	res -> gnode = NULL	3758:1:95939:95956	3962945	28	True				
ANR	3963280	AssignmentExpression	res -> gnode = NULL		3962945	0		=			
ANR	3963281	PtrMemberAccess	res -> gnode		3962945	0					
ANR	3963282	Identifier	res		3962945	0					
ANR	3963283	Identifier	gnode		3962945	1					
ANR	3963284	Identifier	NULL		3962945	1					
ANR	3963285	ExpressionStatement	free_anode ( res )	3760:1:95960:95976	3962945	29	True				
ANR	3963286	CallExpression	free_anode ( res )		3962945	0					
ANR	3963287	Callee	free_anode		3962945	0					
ANR	3963288	Identifier	free_anode		3962945	0					
ANR	3963289	ArgumentList	res		3962945	1					
ANR	3963290	Argument	res		3962945	0					
ANR	3963291	Identifier	res		3962945	0					
ANR	3963292	ReturnStatement	return true ;	3761:1:95979:95990	3962945	30	True				
ANR	3963293	Identifier	true		3962945	0					
ANR	3963294	ReturnType	R_API bool		3962945	1					
ANR	3963295	Identifier	r_agraph_del_node		3962945	2					
ANR	3963296	ParameterList	"const RAGraph * g , const char * title"		3962945	3					
ANR	3963297	Parameter	const RAGraph * g	3731:29:94828:94843	3962945	0	True				
ANR	3963298	ParameterType	const RAGraph *		3962945	0					
ANR	3963299	Identifier	g		3962945	1					
ANR	3963300	Parameter	const char * title	3731:47:94846:94862	3962945	1	True				
ANR	3963301	ParameterType	const char *		3962945	0					
ANR	3963302	Identifier	title		3962945	1					
ANR	3963303	CFGEntryNode	ENTRY		3962945		True				
ANR	3963304	CFGExitNode	EXIT		3962945		True				
ANR	3963305	Symbol	res -> title		3962945						
ANR	3963306	Symbol	g -> db		3962945						
ANR	3963307	Symbol	innodes		3962945						
ANR	3963308	Symbol	res -> gnode		3962945						
ANR	3963309	Symbol	* res		3962945						
ANR	3963310	Symbol	title		3962945						
ANR	3963311	Symbol	title_trunc		3962945						
ANR	3963312	Symbol	r_graph_innodes		3962945						
ANR	3963313	Symbol	g -> nodes		3962945						
ANR	3963314	Symbol	g -> graph		3962945						
ANR	3963315	Symbol	r_agraph_get_node		3962945						
ANR	3963316	Symbol	sdb_fmt		3962945						
ANR	3963317	Symbol	key		3962945						
ANR	3963318	Symbol	res		3962945						
ANR	3963319	Symbol	NULL		3962945						
ANR	3963320	Symbol	g		3962945						
ANR	3963321	Symbol	gn		3962945						
ANR	3963322	Symbol	false		3962945						
ANR	3963323	Symbol	it		3962945						
ANR	3963324	Symbol	an		3962945						
ANR	3963325	Symbol	* an		3962945						
ANR	3963326	Symbol	* g		3962945						
ANR	3963327	Symbol	an -> title		3962945						
ANR	3963328	Symbol	r_str_trunc_ellipsis		3962945						
ANR	3963329	Symbol	true		3962945						
ANR	3963330	DeclStmt									
ANR	3963331	Decl							RANodeCallback	RANodeCallback	cb
ANR	3963332	DeclStmt									
ANR	3963333	Decl							void	void *	user_data
ANR	3963334	DeclStmt									
ANR	3963335	Decl							RANode	RANode *	n
ANR	3963336	DeclStmt									
ANR	3963337	Decl							RAEdgeCallback	RAEdgeCallback	cb
ANR	3963338	DeclStmt									
ANR	3963339	Decl							RAGraph	RAGraph *	g
ANR	3963340	DeclStmt									
ANR	3963341	Decl							void	void *	user_data
ANR	3963342	DeclStmt									
ANR	3963343	Decl							RANode	RANode *	an
ANR	3963344	Decl							RANode	RANode *	n
ANR	3963345	DeclStmt									
ANR	3963346	Decl							const RList	const RList *	neigh
ANR	3963347	DeclStmt									
ANR	3963348	Decl							RListIter	RListIter *	it
ANR	3963349	DeclStmt									
ANR	3963350	Decl							RGraphNode	RGraphNode *	gn
ANR	3963351	Function	r_agraph_foreach	3792:0:96679:96871							
ANR	3963352	FunctionDef	"r_agraph_foreach (RAGraph * g , RANodeCallback cb , void * user)"		3963351	0					
ANR	3963353	CompoundStatement		3792:71:96750:96871	3963351	0					
ANR	3963354	Statement	struct	3793:1:96753:96758	3963351	0	True				
ANR	3963355	Statement	g_cb	3793:8:96760:96763	3963351	1	True				
ANR	3963356	Statement	u	3793:13:96765:96765	3963351	2	True				
ANR	3963357	Statement	=	3793:15:96767:96767	3963351	3	True				
ANR	3963358	CompoundStatement		2:17:18:18	3963351	4					
ANR	3963359	Statement	.	3794:2:96773:96773	3963351	0	True				
ANR	3963360	Statement	node_cb	3794:3:96774:96780	3963351	1	True				
ANR	3963361	Statement	=	3794:11:96782:96782	3963351	2	True				
ANR	3963362	Statement	cb	3794:13:96784:96785	3963351	3	True				
ANR	3963363	Statement	","	3794:15:96786:96786	3963351	4	True				
ANR	3963364	Statement	.	3795:2:96790:96790	3963351	5	True				
ANR	3963365	Statement	data	3795:3:96791:96794	3963351	6	True				
ANR	3963366	Statement	=	3795:8:96796:96796	3963351	7	True				
ANR	3963367	Statement	user	3795:10:96798:96801	3963351	8	True				
ANR	3963368	ExpressionStatement		3796:2:96805:96805	3963351	5	True				
ANR	3963369	ExpressionStatement	"sdb_foreach ( g -> nodes , ( SdbForeachCallback ) user_node_cb , & u )"	3797:1:96808:96869	3963351	6	True				
ANR	3963370	CallExpression	"sdb_foreach ( g -> nodes , ( SdbForeachCallback ) user_node_cb , & u )"		3963351	0					
ANR	3963371	Callee	sdb_foreach		3963351	0					
ANR	3963372	Identifier	sdb_foreach		3963351	0					
ANR	3963373	ArgumentList	g -> nodes		3963351	1					
ANR	3963374	Argument	g -> nodes		3963351	0					
ANR	3963375	PtrMemberAccess	g -> nodes		3963351	0					
ANR	3963376	Identifier	g		3963351	0					
ANR	3963377	Identifier	nodes		3963351	1					
ANR	3963378	Argument	( SdbForeachCallback ) user_node_cb		3963351	1					
ANR	3963379	CastExpression	( SdbForeachCallback ) user_node_cb		3963351	0					
ANR	3963380	CastTarget	SdbForeachCallback		3963351	0					
ANR	3963381	Identifier	user_node_cb		3963351	1					
ANR	3963382	Argument	& u		3963351	2					
ANR	3963383	UnaryOperationExpression	& u		3963351	0					
ANR	3963384	UnaryOperator	&		3963351	0					
ANR	3963385	Identifier	u		3963351	1					
ANR	3963386	ReturnType	R_API void		3963351	1					
ANR	3963387	Identifier	r_agraph_foreach		3963351	2					
ANR	3963388	ParameterList	"RAGraph * g , RANodeCallback cb , void * user"		3963351	3					
ANR	3963389	Parameter	RAGraph * g	3792:28:96707:96716	3963351	0	True				
ANR	3963390	ParameterType	RAGraph *		3963351	0					
ANR	3963391	Identifier	g		3963351	1					
ANR	3963392	Parameter	RANodeCallback cb	3792:40:96719:96735	3963351	1	True				
ANR	3963393	ParameterType	RANodeCallback		3963351	0					
ANR	3963394	Identifier	cb		3963351	1					
ANR	3963395	Parameter	void * user	3792:59:96738:96747	3963351	2	True				
ANR	3963396	ParameterType	void *		3963351	0					
ANR	3963397	Identifier	user		3963351	1					
ANR	3963398	CFGEntryNode	ENTRY		3963351		True				
ANR	3963399	CFGExitNode	EXIT		3963351		True				
ANR	3963400	Symbol	* g		3963351						
ANR	3963401	Symbol	g -> nodes		3963351						
ANR	3963402	Symbol	g		3963351						
ANR	3963403	Symbol	& u		3963351						
ANR	3963404	Symbol	user		3963351						
ANR	3963405	Symbol	cb		3963351						
ANR	3963406	Symbol	user_node_cb		3963351						
ANR	3963407	Function	r_agraph_foreach_edge	3800:0:96874:97085							
ANR	3963408	FunctionDef	"r_agraph_foreach_edge (RAGraph * g , RAEdgeCallback cb , void * user)"		3963407	0					
ANR	3963409	CompoundStatement		3800:76:96950:97085	3963407	0					
ANR	3963410	Statement	struct	3801:1:96953:96958	3963407	0	True				
ANR	3963411	Statement	g_cb	3801:8:96960:96963	3963407	1	True				
ANR	3963412	Statement	u	3801:13:96965:96965	3963407	2	True				
ANR	3963413	Statement	=	3801:15:96967:96967	3963407	3	True				
ANR	3963414	CompoundStatement		2:17:18:18	3963407	4					
ANR	3963415	Statement	.	3802:2:96973:96973	3963407	0	True				
ANR	3963416	Statement	graph	3802:3:96974:96978	3963407	1	True				
ANR	3963417	Statement	=	3802:9:96980:96980	3963407	2	True				
ANR	3963418	Statement	g	3802:11:96982:96982	3963407	3	True				
ANR	3963419	Statement	","	3802:12:96983:96983	3963407	4	True				
ANR	3963420	Statement	.	3803:2:96987:96987	3963407	5	True				
ANR	3963421	Statement	edge_cb	3803:3:96988:96994	3963407	6	True				
ANR	3963422	Statement	=	3803:11:96996:96996	3963407	7	True				
ANR	3963423	Statement	cb	3803:13:96998:96999	3963407	8	True				
ANR	3963424	Statement	","	3803:15:97000:97000	3963407	9	True				
ANR	3963425	Statement	.	3804:2:97004:97004	3963407	10	True				
ANR	3963426	Statement	data	3804:3:97005:97008	3963407	11	True				
ANR	3963427	Statement	=	3804:8:97010:97010	3963407	12	True				
ANR	3963428	Statement	user	3804:10:97012:97015	3963407	13	True				
ANR	3963429	ExpressionStatement		3805:2:97019:97019	3963407	5	True				
ANR	3963430	ExpressionStatement	"sdb_foreach ( g -> nodes , ( SdbForeachCallback ) user_edge_cb , & u )"	3806:1:97022:97083	3963407	6	True				
ANR	3963431	CallExpression	"sdb_foreach ( g -> nodes , ( SdbForeachCallback ) user_edge_cb , & u )"		3963407	0					
ANR	3963432	Callee	sdb_foreach		3963407	0					
ANR	3963433	Identifier	sdb_foreach		3963407	0					
ANR	3963434	ArgumentList	g -> nodes		3963407	1					
ANR	3963435	Argument	g -> nodes		3963407	0					
ANR	3963436	PtrMemberAccess	g -> nodes		3963407	0					
ANR	3963437	Identifier	g		3963407	0					
ANR	3963438	Identifier	nodes		3963407	1					
ANR	3963439	Argument	( SdbForeachCallback ) user_edge_cb		3963407	1					
ANR	3963440	CastExpression	( SdbForeachCallback ) user_edge_cb		3963407	0					
ANR	3963441	CastTarget	SdbForeachCallback		3963407	0					
ANR	3963442	Identifier	user_edge_cb		3963407	1					
ANR	3963443	Argument	& u		3963407	2					
ANR	3963444	UnaryOperationExpression	& u		3963407	0					
ANR	3963445	UnaryOperator	&		3963407	0					
ANR	3963446	Identifier	u		3963407	1					
ANR	3963447	ReturnType	R_API void		3963407	1					
ANR	3963448	Identifier	r_agraph_foreach_edge		3963407	2					
ANR	3963449	ParameterList	"RAGraph * g , RAEdgeCallback cb , void * user"		3963407	3					
ANR	3963450	Parameter	RAGraph * g	3800:33:96907:96916	3963407	0	True				
ANR	3963451	ParameterType	RAGraph *		3963407	0					
ANR	3963452	Identifier	g		3963407	1					
ANR	3963453	Parameter	RAEdgeCallback cb	3800:45:96919:96935	3963407	1	True				
ANR	3963454	ParameterType	RAEdgeCallback		3963407	0					
ANR	3963455	Identifier	cb		3963407	1					
ANR	3963456	Parameter	void * user	3800:64:96938:96947	3963407	2	True				
ANR	3963457	ParameterType	void *		3963407	0					
ANR	3963458	Identifier	user		3963407	1					
ANR	3963459	CFGEntryNode	ENTRY		3963407		True				
ANR	3963460	CFGExitNode	EXIT		3963407		True				
ANR	3963461	Symbol	* g		3963407						
ANR	3963462	Symbol	g -> nodes		3963407						
ANR	3963463	Symbol	g		3963407						
ANR	3963464	Symbol	user_edge_cb		3963407						
ANR	3963465	Symbol	& u		3963407						
ANR	3963466	Symbol	user		3963407						
ANR	3963467	Symbol	cb		3963407						
ANR	3963468	Function	r_agraph_get_first_node	3809:0:97088:97256							
ANR	3963469	FunctionDef	r_agraph_get_first_node (const RAGraph * g)		3963468	0					
ANR	3963470	CompoundStatement		3809:56:97144:97256	3963468	0					
ANR	3963471	IdentifierDeclStatement	const RList * l = r_graph_get_nodes ( g -> graph ) ;	3810:1:97147:97192	3963468	0	True				
ANR	3963472	IdentifierDecl	* l = r_graph_get_nodes ( g -> graph )		3963468	0					
ANR	3963473	IdentifierDeclType	const RList *		3963468	0					
ANR	3963474	Identifier	l		3963468	1					
ANR	3963475	AssignmentExpression	* l = r_graph_get_nodes ( g -> graph )		3963468	2		=			
ANR	3963476	Identifier	l		3963468	0					
ANR	3963477	CallExpression	r_graph_get_nodes ( g -> graph )		3963468	1					
ANR	3963478	Callee	r_graph_get_nodes		3963468	0					
ANR	3963479	Identifier	r_graph_get_nodes		3963468	0					
ANR	3963480	ArgumentList	g -> graph		3963468	1					
ANR	3963481	Argument	g -> graph		3963468	0					
ANR	3963482	PtrMemberAccess	g -> graph		3963468	0					
ANR	3963483	Identifier	g		3963468	0					
ANR	3963484	Identifier	graph		3963468	1					
ANR	3963485	IdentifierDeclStatement	RGraphNode * rgn = r_list_first ( l ) ;	3811:1:97195:97229	3963468	1	True				
ANR	3963486	IdentifierDecl	* rgn = r_list_first ( l )		3963468	0					
ANR	3963487	IdentifierDeclType	RGraphNode *		3963468	0					
ANR	3963488	Identifier	rgn		3963468	1					
ANR	3963489	AssignmentExpression	* rgn = r_list_first ( l )		3963468	2		=			
ANR	3963490	Identifier	rgn		3963468	0					
ANR	3963491	CallExpression	r_list_first ( l )		3963468	1					
ANR	3963492	Callee	r_list_first		3963468	0					
ANR	3963493	Identifier	r_list_first		3963468	0					
ANR	3963494	ArgumentList	l		3963468	1					
ANR	3963495	Argument	l		3963468	0					
ANR	3963496	Identifier	l		3963468	0					
ANR	3963497	ReturnStatement	return get_anode ( rgn ) ;	3812:1:97232:97254	3963468	2	True				
ANR	3963498	CallExpression	get_anode ( rgn )		3963468	0					
ANR	3963499	Callee	get_anode		3963468	0					
ANR	3963500	Identifier	get_anode		3963468	0					
ANR	3963501	ArgumentList	rgn		3963468	1					
ANR	3963502	Argument	rgn		3963468	0					
ANR	3963503	Identifier	rgn		3963468	0					
ANR	3963504	ReturnType	R_API RANode *		3963468	1					
ANR	3963505	Identifier	r_agraph_get_first_node		3963468	2					
ANR	3963506	ParameterList	const RAGraph * g		3963468	3					
ANR	3963507	Parameter	const RAGraph * g	3809:38:97126:97141	3963468	0	True				
ANR	3963508	ParameterType	const RAGraph *		3963468	0					
ANR	3963509	Identifier	g		3963468	1					
ANR	3963510	CFGEntryNode	ENTRY		3963468		True				
ANR	3963511	CFGExitNode	EXIT		3963468		True				
ANR	3963512	Symbol	r_list_first		3963468						
ANR	3963513	Symbol	* g		3963468						
ANR	3963514	Symbol	r_graph_get_nodes		3963468						
ANR	3963515	Symbol	get_anode		3963468						
ANR	3963516	Symbol	g -> graph		3963468						
ANR	3963517	Symbol	g		3963468						
ANR	3963518	Symbol	rgn		3963468						
ANR	3963519	Symbol	l		3963468						
ANR	3963520	Function	r_agraph_get_node	3815:0:97259:97515							
ANR	3963521	FunctionDef	"r_agraph_get_node (const RAGraph * g , const char * title)"		3963520	0					
ANR	3963522	CompoundStatement		3815:69:97328:97515	3963520	0					
ANR	3963523	IdentifierDeclStatement	"char * title_trunc = title ? r_str_trunc_ellipsis ( title , 255 ) : NULL ;"	3816:1:97331:97399	3963520	0	True				
ANR	3963524	IdentifierDecl	"* title_trunc = title ? r_str_trunc_ellipsis ( title , 255 ) : NULL"		3963520	0					
ANR	3963525	IdentifierDeclType	char *		3963520	0					
ANR	3963526	Identifier	title_trunc		3963520	1					
ANR	3963527	AssignmentExpression	"* title_trunc = title ? r_str_trunc_ellipsis ( title , 255 ) : NULL"		3963520	2		=			
ANR	3963528	Identifier	title_trunc		3963520	0					
ANR	3963529	ConditionalExpression	"title ? r_str_trunc_ellipsis ( title , 255 ) : NULL"		3963520	1					
ANR	3963530	Condition	title		3963520	0					
ANR	3963531	Identifier	title		3963520	0					
ANR	3963532	CallExpression	"r_str_trunc_ellipsis ( title , 255 )"		3963520	1					
ANR	3963533	Callee	r_str_trunc_ellipsis		3963520	0					
ANR	3963534	Identifier	r_str_trunc_ellipsis		3963520	0					
ANR	3963535	ArgumentList	title		3963520	1					
ANR	3963536	Argument	title		3963520	0					
ANR	3963537	Identifier	title		3963520	0					
ANR	3963538	Argument	255		3963520	1					
ANR	3963539	PrimaryExpression	255		3963520	0					
ANR	3963540	Identifier	NULL		3963520	2					
ANR	3963541	IdentifierDeclStatement	"RANode * node = ( RANode * ) ( size_t ) sdb_num_get ( g -> nodes , title_trunc , NULL ) ;"	3817:1:97402:97478	3963520	1	True				
ANR	3963542	IdentifierDecl	"* node = ( RANode * ) ( size_t ) sdb_num_get ( g -> nodes , title_trunc , NULL )"		3963520	0					
ANR	3963543	IdentifierDeclType	RANode *		3963520	0					
ANR	3963544	Identifier	node		3963520	1					
ANR	3963545	AssignmentExpression	"* node = ( RANode * ) ( size_t ) sdb_num_get ( g -> nodes , title_trunc , NULL )"		3963520	2		=			
ANR	3963546	Identifier	node		3963520	0					
ANR	3963547	CastExpression	"( RANode * ) ( size_t ) sdb_num_get ( g -> nodes , title_trunc , NULL )"		3963520	1					
ANR	3963548	CastTarget	RANode *		3963520	0					
ANR	3963549	CastExpression	"( size_t ) sdb_num_get ( g -> nodes , title_trunc , NULL )"		3963520	1					
ANR	3963550	CastTarget	size_t		3963520	0					
ANR	3963551	CallExpression	"sdb_num_get ( g -> nodes , title_trunc , NULL )"		3963520	1					
ANR	3963552	Callee	sdb_num_get		3963520	0					
ANR	3963553	Identifier	sdb_num_get		3963520	0					
ANR	3963554	ArgumentList	g -> nodes		3963520	1					
ANR	3963555	Argument	g -> nodes		3963520	0					
ANR	3963556	PtrMemberAccess	g -> nodes		3963520	0					
ANR	3963557	Identifier	g		3963520	0					
ANR	3963558	Identifier	nodes		3963520	1					
ANR	3963559	Argument	title_trunc		3963520	1					
ANR	3963560	Identifier	title_trunc		3963520	0					
ANR	3963561	Argument	NULL		3963520	2					
ANR	3963562	Identifier	NULL		3963520	0					
ANR	3963563	ExpressionStatement	free ( title_trunc )	3818:1:97481:97499	3963520	2	True				
ANR	3963564	CallExpression	free ( title_trunc )		3963520	0					
ANR	3963565	Callee	free		3963520	0					
ANR	3963566	Identifier	free		3963520	0					
ANR	3963567	ArgumentList	title_trunc		3963520	1					
ANR	3963568	Argument	title_trunc		3963520	0					
ANR	3963569	Identifier	title_trunc		3963520	0					
ANR	3963570	ReturnStatement	return node ;	3819:1:97502:97513	3963520	3	True				
ANR	3963571	Identifier	node		3963520	0					
ANR	3963572	ReturnType	R_API RANode *		3963520	1					
ANR	3963573	Identifier	r_agraph_get_node		3963520	2					
ANR	3963574	ParameterList	"const RAGraph * g , const char * title"		3963520	3					
ANR	3963575	Parameter	const RAGraph * g	3815:32:97291:97306	3963520	0	True				
ANR	3963576	ParameterType	const RAGraph *		3963520	0					
ANR	3963577	Identifier	g		3963520	1					
ANR	3963578	Parameter	const char * title	3815:50:97309:97325	3963520	1	True				
ANR	3963579	ParameterType	const char *		3963520	0					
ANR	3963580	Identifier	title		3963520	1					
ANR	3963581	CFGEntryNode	ENTRY		3963520		True				
ANR	3963582	CFGExitNode	EXIT		3963520		True				
ANR	3963583	Symbol	sdb_num_get		3963520						
ANR	3963584	Symbol	* g		3963520						
ANR	3963585	Symbol	node		3963520						
ANR	3963586	Symbol	NULL		3963520						
ANR	3963587	Symbol	g -> nodes		3963520						
ANR	3963588	Symbol	g		3963520						
ANR	3963589	Symbol	r_str_trunc_ellipsis		3963520						
ANR	3963590	Symbol	title		3963520						
ANR	3963591	Symbol	title_trunc		3963520						
ANR	3963592	Function	r_agraph_add_edge	3822:0:97518:97807							
ANR	3963593	FunctionDef	"r_agraph_add_edge (const RAGraph * g , RANode * a , RANode * b)"		3963592	0					
ANR	3963594	CompoundStatement		3822:69:97587:97807	3963592	0					
ANR	3963595	ExpressionStatement	r_return_if_fail ( g && a && b )	3823:1:97590:97620	3963592	0	True				
ANR	3963596	CallExpression	r_return_if_fail ( g && a && b )		3963592	0					
ANR	3963597	Callee	r_return_if_fail		3963592	0					
ANR	3963598	Identifier	r_return_if_fail		3963592	0					
ANR	3963599	ArgumentList	g && a && b		3963592	1					
ANR	3963600	Argument	g && a && b		3963592	0					
ANR	3963601	AndExpression	g && a && b		3963592	0		&&			
ANR	3963602	Identifier	g		3963592	0					
ANR	3963603	AndExpression	a && b		3963592	1		&&			
ANR	3963604	Identifier	a		3963592	0					
ANR	3963605	Identifier	b		3963592	1					
ANR	3963606	ExpressionStatement	"r_graph_add_edge ( g -> graph , a -> gnode , b -> gnode )"	3824:1:97623:97670	3963592	1	True				
ANR	3963607	CallExpression	"r_graph_add_edge ( g -> graph , a -> gnode , b -> gnode )"		3963592	0					
ANR	3963608	Callee	r_graph_add_edge		3963592	0					
ANR	3963609	Identifier	r_graph_add_edge		3963592	0					
ANR	3963610	ArgumentList	g -> graph		3963592	1					
ANR	3963611	Argument	g -> graph		3963592	0					
ANR	3963612	PtrMemberAccess	g -> graph		3963592	0					
ANR	3963613	Identifier	g		3963592	0					
ANR	3963614	Identifier	graph		3963592	1					
ANR	3963615	Argument	a -> gnode		3963592	1					
ANR	3963616	PtrMemberAccess	a -> gnode		3963592	0					
ANR	3963617	Identifier	a		3963592	0					
ANR	3963618	Identifier	gnode		3963592	1					
ANR	3963619	Argument	b -> gnode		3963592	2					
ANR	3963620	PtrMemberAccess	b -> gnode		3963592	0					
ANR	3963621	Identifier	b		3963592	0					
ANR	3963622	Identifier	gnode		3963592	1					
ANR	3963623	IfStatement	if ( a -> title && b -> title )		3963592	2					
ANR	3963624	Condition	a -> title && b -> title	3825:5:97677:97696	3963592	0	True				
ANR	3963625	AndExpression	a -> title && b -> title		3963592	0		&&			
ANR	3963626	PtrMemberAccess	a -> title		3963592	0					
ANR	3963627	Identifier	a		3963592	0					
ANR	3963628	Identifier	title		3963592	1					
ANR	3963629	PtrMemberAccess	b -> title		3963592	1					
ANR	3963630	Identifier	b		3963592	0					
ANR	3963631	Identifier	title		3963592	1					
ANR	3963632	CompoundStatement		5:2:115:173	3963592	1					
ANR	3963633	IdentifierDeclStatement	"char * k = sdb_fmt ( ""agraph.nodes.%s.neighbours"" , a -> title ) ;"	3826:2:97703:97761	3963592	0	True				
ANR	3963634	IdentifierDecl	"* k = sdb_fmt ( ""agraph.nodes.%s.neighbours"" , a -> title )"		3963592	0					
ANR	3963635	IdentifierDeclType	char *		3963592	0					
ANR	3963636	Identifier	k		3963592	1					
ANR	3963637	AssignmentExpression	"* k = sdb_fmt ( ""agraph.nodes.%s.neighbours"" , a -> title )"		3963592	2		=			
ANR	3963638	Identifier	k		3963592	0					
ANR	3963639	CallExpression	"sdb_fmt ( ""agraph.nodes.%s.neighbours"" , a -> title )"		3963592	1					
ANR	3963640	Callee	sdb_fmt		3963592	0					
ANR	3963641	Identifier	sdb_fmt		3963592	0					
ANR	3963642	ArgumentList	"""agraph.nodes.%s.neighbours"""		3963592	1					
ANR	3963643	Argument	"""agraph.nodes.%s.neighbours"""		3963592	0					
ANR	3963644	PrimaryExpression	"""agraph.nodes.%s.neighbours"""		3963592	0					
ANR	3963645	Argument	a -> title		3963592	1					
ANR	3963646	PtrMemberAccess	a -> title		3963592	0					
ANR	3963647	Identifier	a		3963592	0					
ANR	3963648	Identifier	title		3963592	1					
ANR	3963649	ExpressionStatement	"sdb_array_add ( g -> db , k , b -> title , 0 )"	3827:2:97765:97802	3963592	1	True				
ANR	3963650	CallExpression	"sdb_array_add ( g -> db , k , b -> title , 0 )"		3963592	0					
ANR	3963651	Callee	sdb_array_add		3963592	0					
ANR	3963652	Identifier	sdb_array_add		3963592	0					
ANR	3963653	ArgumentList	g -> db		3963592	1					
ANR	3963654	Argument	g -> db		3963592	0					
ANR	3963655	PtrMemberAccess	g -> db		3963592	0					
ANR	3963656	Identifier	g		3963592	0					
ANR	3963657	Identifier	db		3963592	1					
ANR	3963658	Argument	k		3963592	1					
ANR	3963659	Identifier	k		3963592	0					
ANR	3963660	Argument	b -> title		3963592	2					
ANR	3963661	PtrMemberAccess	b -> title		3963592	0					
ANR	3963662	Identifier	b		3963592	0					
ANR	3963663	Identifier	title		3963592	1					
ANR	3963664	Argument	0		3963592	3					
ANR	3963665	PrimaryExpression	0		3963592	0					
ANR	3963666	ReturnType	R_API void		3963592	1					
ANR	3963667	Identifier	r_agraph_add_edge		3963592	2					
ANR	3963668	ParameterList	"const RAGraph * g , RANode * a , RANode * b"		3963592	3					
ANR	3963669	Parameter	const RAGraph * g	3822:29:97547:97562	3963592	0	True				
ANR	3963670	ParameterType	const RAGraph *		3963592	0					
ANR	3963671	Identifier	g		3963592	1					
ANR	3963672	Parameter	RANode * a	3822:47:97565:97573	3963592	1	True				
ANR	3963673	ParameterType	RANode *		3963592	0					
ANR	3963674	Identifier	a		3963592	1					
ANR	3963675	Parameter	RANode * b	3822:58:97576:97584	3963592	2	True				
ANR	3963676	ParameterType	RANode *		3963592	0					
ANR	3963677	Identifier	b		3963592	1					
ANR	3963678	CFGEntryNode	ENTRY		3963592		True				
ANR	3963679	CFGExitNode	EXIT		3963592		True				
ANR	3963680	Symbol	a -> title		3963592						
ANR	3963681	Symbol	a		3963592						
ANR	3963682	Symbol	b		3963592						
ANR	3963683	Symbol	b -> gnode		3963592						
ANR	3963684	Symbol	g		3963592						
ANR	3963685	Symbol	g -> db		3963592						
ANR	3963686	Symbol	a -> gnode		3963592						
ANR	3963687	Symbol	* a		3963592						
ANR	3963688	Symbol	k		3963592						
ANR	3963689	Symbol	* b		3963592						
ANR	3963690	Symbol	* g		3963592						
ANR	3963691	Symbol	g -> graph		3963592						
ANR	3963692	Symbol	b -> title		3963592						
ANR	3963693	Symbol	sdb_fmt		3963592						
ANR	3963694	Function	r_agraph_add_edge_at	3831:0:97810:98127							
ANR	3963695	FunctionDef	"r_agraph_add_edge_at (const RAGraph * g , RANode * a , RANode * b , int nth)"		3963694	0					
ANR	3963696	CompoundStatement		3831:81:97891:98127	3963694	0					
ANR	3963697	ExpressionStatement	r_return_if_fail ( g && a && b )	3832:1:97894:97924	3963694	0	True				
ANR	3963698	CallExpression	r_return_if_fail ( g && a && b )		3963694	0					
ANR	3963699	Callee	r_return_if_fail		3963694	0					
ANR	3963700	Identifier	r_return_if_fail		3963694	0					
ANR	3963701	ArgumentList	g && a && b		3963694	1					
ANR	3963702	Argument	g && a && b		3963694	0					
ANR	3963703	AndExpression	g && a && b		3963694	0		&&			
ANR	3963704	Identifier	g		3963694	0					
ANR	3963705	AndExpression	a && b		3963694	1		&&			
ANR	3963706	Identifier	a		3963694	0					
ANR	3963707	Identifier	b		3963694	1					
ANR	3963708	IfStatement	if ( a -> title && b -> title )		3963694	1					
ANR	3963709	Condition	a -> title && b -> title	3833:5:97931:97950	3963694	0	True				
ANR	3963710	AndExpression	a -> title && b -> title		3963694	0		&&			
ANR	3963711	PtrMemberAccess	a -> title		3963694	0					
ANR	3963712	Identifier	a		3963694	0					
ANR	3963713	Identifier	title		3963694	1					
ANR	3963714	PtrMemberAccess	b -> title		3963694	1					
ANR	3963715	Identifier	b		3963694	0					
ANR	3963716	Identifier	title		3963694	1					
ANR	3963717	CompoundStatement		4:2:65:123	3963694	1					
ANR	3963718	IdentifierDeclStatement	"char * k = sdb_fmt ( ""agraph.nodes.%s.neighbours"" , a -> title ) ;"	3834:2:97957:98015	3963694	0	True				
ANR	3963719	IdentifierDecl	"* k = sdb_fmt ( ""agraph.nodes.%s.neighbours"" , a -> title )"		3963694	0					
ANR	3963720	IdentifierDeclType	char *		3963694	0					
ANR	3963721	Identifier	k		3963694	1					
ANR	3963722	AssignmentExpression	"* k = sdb_fmt ( ""agraph.nodes.%s.neighbours"" , a -> title )"		3963694	2		=			
ANR	3963723	Identifier	k		3963694	0					
ANR	3963724	CallExpression	"sdb_fmt ( ""agraph.nodes.%s.neighbours"" , a -> title )"		3963694	1					
ANR	3963725	Callee	sdb_fmt		3963694	0					
ANR	3963726	Identifier	sdb_fmt		3963694	0					
ANR	3963727	ArgumentList	"""agraph.nodes.%s.neighbours"""		3963694	1					
ANR	3963728	Argument	"""agraph.nodes.%s.neighbours"""		3963694	0					
ANR	3963729	PrimaryExpression	"""agraph.nodes.%s.neighbours"""		3963694	0					
ANR	3963730	Argument	a -> title		3963694	1					
ANR	3963731	PtrMemberAccess	a -> title		3963694	0					
ANR	3963732	Identifier	a		3963694	0					
ANR	3963733	Identifier	title		3963694	1					
ANR	3963734	ExpressionStatement	"sdb_array_insert ( g -> db , k , nth , b -> title , 0 )"	3835:2:98019:98064	3963694	1	True				
ANR	3963735	CallExpression	"sdb_array_insert ( g -> db , k , nth , b -> title , 0 )"		3963694	0					
ANR	3963736	Callee	sdb_array_insert		3963694	0					
ANR	3963737	Identifier	sdb_array_insert		3963694	0					
ANR	3963738	ArgumentList	g -> db		3963694	1					
ANR	3963739	Argument	g -> db		3963694	0					
ANR	3963740	PtrMemberAccess	g -> db		3963694	0					
ANR	3963741	Identifier	g		3963694	0					
ANR	3963742	Identifier	db		3963694	1					
ANR	3963743	Argument	k		3963694	1					
ANR	3963744	Identifier	k		3963694	0					
ANR	3963745	Argument	nth		3963694	2					
ANR	3963746	Identifier	nth		3963694	0					
ANR	3963747	Argument	b -> title		3963694	3					
ANR	3963748	PtrMemberAccess	b -> title		3963694	0					
ANR	3963749	Identifier	b		3963694	0					
ANR	3963750	Identifier	title		3963694	1					
ANR	3963751	Argument	0		3963694	4					
ANR	3963752	PrimaryExpression	0		3963694	0					
ANR	3963753	ExpressionStatement	"r_graph_add_edge_at ( g -> graph , a -> gnode , b -> gnode , nth )"	3837:1:98070:98125	3963694	2	True				
ANR	3963754	CallExpression	"r_graph_add_edge_at ( g -> graph , a -> gnode , b -> gnode , nth )"		3963694	0					
ANR	3963755	Callee	r_graph_add_edge_at		3963694	0					
ANR	3963756	Identifier	r_graph_add_edge_at		3963694	0					
ANR	3963757	ArgumentList	g -> graph		3963694	1					
ANR	3963758	Argument	g -> graph		3963694	0					
ANR	3963759	PtrMemberAccess	g -> graph		3963694	0					
ANR	3963760	Identifier	g		3963694	0					
ANR	3963761	Identifier	graph		3963694	1					
ANR	3963762	Argument	a -> gnode		3963694	1					
ANR	3963763	PtrMemberAccess	a -> gnode		3963694	0					
ANR	3963764	Identifier	a		3963694	0					
ANR	3963765	Identifier	gnode		3963694	1					
ANR	3963766	Argument	b -> gnode		3963694	2					
ANR	3963767	PtrMemberAccess	b -> gnode		3963694	0					
ANR	3963768	Identifier	b		3963694	0					
ANR	3963769	Identifier	gnode		3963694	1					
ANR	3963770	Argument	nth		3963694	3					
ANR	3963771	Identifier	nth		3963694	0					
ANR	3963772	ReturnType	R_API void		3963694	1					
ANR	3963773	Identifier	r_agraph_add_edge_at		3963694	2					
ANR	3963774	ParameterList	"const RAGraph * g , RANode * a , RANode * b , int nth"		3963694	3					
ANR	3963775	Parameter	const RAGraph * g	3831:32:97842:97857	3963694	0	True				
ANR	3963776	ParameterType	const RAGraph *		3963694	0					
ANR	3963777	Identifier	g		3963694	1					
ANR	3963778	Parameter	RANode * a	3831:50:97860:97868	3963694	1	True				
ANR	3963779	ParameterType	RANode *		3963694	0					
ANR	3963780	Identifier	a		3963694	1					
ANR	3963781	Parameter	RANode * b	3831:61:97871:97879	3963694	2	True				
ANR	3963782	ParameterType	RANode *		3963694	0					
ANR	3963783	Identifier	b		3963694	1					
ANR	3963784	Parameter	int nth	3831:72:97882:97888	3963694	3	True				
ANR	3963785	ParameterType	int		3963694	0					
ANR	3963786	Identifier	nth		3963694	1					
ANR	3963787	CFGEntryNode	ENTRY		3963694		True				
ANR	3963788	CFGExitNode	EXIT		3963694		True				
ANR	3963789	Symbol	a -> title		3963694						
ANR	3963790	Symbol	a		3963694						
ANR	3963791	Symbol	b		3963694						
ANR	3963792	Symbol	nth		3963694						
ANR	3963793	Symbol	b -> gnode		3963694						
ANR	3963794	Symbol	g		3963694						
ANR	3963795	Symbol	g -> db		3963694						
ANR	3963796	Symbol	a -> gnode		3963694						
ANR	3963797	Symbol	* a		3963694						
ANR	3963798	Symbol	k		3963694						
ANR	3963799	Symbol	* b		3963694						
ANR	3963800	Symbol	* g		3963694						
ANR	3963801	Symbol	g -> graph		3963694						
ANR	3963802	Symbol	b -> title		3963694						
ANR	3963803	Symbol	sdb_fmt		3963694						
ANR	3963804	Function	r_agraph_del_edge	3840:0:98130:98428							
ANR	3963805	FunctionDef	"r_agraph_del_edge (const RAGraph * g , RANode * a , RANode * b)"		3963804	0					
ANR	3963806	CompoundStatement		3840:69:98199:98428	3963804	0					
ANR	3963807	ExpressionStatement	r_return_if_fail ( g && a && b )	3841:1:98202:98232	3963804	0	True				
ANR	3963808	CallExpression	r_return_if_fail ( g && a && b )		3963804	0					
ANR	3963809	Callee	r_return_if_fail		3963804	0					
ANR	3963810	Identifier	r_return_if_fail		3963804	0					
ANR	3963811	ArgumentList	g && a && b		3963804	1					
ANR	3963812	Argument	g && a && b		3963804	0					
ANR	3963813	AndExpression	g && a && b		3963804	0		&&			
ANR	3963814	Identifier	g		3963804	0					
ANR	3963815	AndExpression	a && b		3963804	1		&&			
ANR	3963816	Identifier	a		3963804	0					
ANR	3963817	Identifier	b		3963804	1					
ANR	3963818	IfStatement	if ( a -> title && b -> title )		3963804	1					
ANR	3963819	Condition	a -> title && b -> title	3842:5:98239:98258	3963804	0	True				
ANR	3963820	AndExpression	a -> title && b -> title		3963804	0		&&			
ANR	3963821	PtrMemberAccess	a -> title		3963804	0					
ANR	3963822	Identifier	a		3963804	0					
ANR	3963823	Identifier	title		3963804	1					
ANR	3963824	PtrMemberAccess	b -> title		3963804	1					
ANR	3963825	Identifier	b		3963804	0					
ANR	3963826	Identifier	title		3963804	1					
ANR	3963827	CompoundStatement		4:2:65:129	3963804	1					
ANR	3963828	IdentifierDeclStatement	"const char * k = sdb_fmt ( ""agraph.nodes.%s.neighbours"" , a -> title ) ;"	3843:2:98265:98329	3963804	0	True				
ANR	3963829	IdentifierDecl	"* k = sdb_fmt ( ""agraph.nodes.%s.neighbours"" , a -> title )"		3963804	0					
ANR	3963830	IdentifierDeclType	const char *		3963804	0					
ANR	3963831	Identifier	k		3963804	1					
ANR	3963832	AssignmentExpression	"* k = sdb_fmt ( ""agraph.nodes.%s.neighbours"" , a -> title )"		3963804	2		=			
ANR	3963833	Identifier	k		3963804	0					
ANR	3963834	CallExpression	"sdb_fmt ( ""agraph.nodes.%s.neighbours"" , a -> title )"		3963804	1					
ANR	3963835	Callee	sdb_fmt		3963804	0					
ANR	3963836	Identifier	sdb_fmt		3963804	0					
ANR	3963837	ArgumentList	"""agraph.nodes.%s.neighbours"""		3963804	1					
ANR	3963838	Argument	"""agraph.nodes.%s.neighbours"""		3963804	0					
ANR	3963839	PrimaryExpression	"""agraph.nodes.%s.neighbours"""		3963804	0					
ANR	3963840	Argument	a -> title		3963804	1					
ANR	3963841	PtrMemberAccess	a -> title		3963804	0					
ANR	3963842	Identifier	a		3963804	0					
ANR	3963843	Identifier	title		3963804	1					
ANR	3963844	ExpressionStatement	"sdb_array_remove ( g -> db , k , b -> title , 0 )"	3844:2:98333:98373	3963804	1	True				
ANR	3963845	CallExpression	"sdb_array_remove ( g -> db , k , b -> title , 0 )"		3963804	0					
ANR	3963846	Callee	sdb_array_remove		3963804	0					
ANR	3963847	Identifier	sdb_array_remove		3963804	0					
ANR	3963848	ArgumentList	g -> db		3963804	1					
ANR	3963849	Argument	g -> db		3963804	0					
ANR	3963850	PtrMemberAccess	g -> db		3963804	0					
ANR	3963851	Identifier	g		3963804	0					
ANR	3963852	Identifier	db		3963804	1					
ANR	3963853	Argument	k		3963804	1					
ANR	3963854	Identifier	k		3963804	0					
ANR	3963855	Argument	b -> title		3963804	2					
ANR	3963856	PtrMemberAccess	b -> title		3963804	0					
ANR	3963857	Identifier	b		3963804	0					
ANR	3963858	Identifier	title		3963804	1					
ANR	3963859	Argument	0		3963804	3					
ANR	3963860	PrimaryExpression	0		3963804	0					
ANR	3963861	ExpressionStatement	"r_graph_del_edge ( g -> graph , a -> gnode , b -> gnode )"	3846:1:98379:98426	3963804	2	True				
ANR	3963862	CallExpression	"r_graph_del_edge ( g -> graph , a -> gnode , b -> gnode )"		3963804	0					
ANR	3963863	Callee	r_graph_del_edge		3963804	0					
ANR	3963864	Identifier	r_graph_del_edge		3963804	0					
ANR	3963865	ArgumentList	g -> graph		3963804	1					
ANR	3963866	Argument	g -> graph		3963804	0					
ANR	3963867	PtrMemberAccess	g -> graph		3963804	0					
ANR	3963868	Identifier	g		3963804	0					
ANR	3963869	Identifier	graph		3963804	1					
ANR	3963870	Argument	a -> gnode		3963804	1					
ANR	3963871	PtrMemberAccess	a -> gnode		3963804	0					
ANR	3963872	Identifier	a		3963804	0					
ANR	3963873	Identifier	gnode		3963804	1					
ANR	3963874	Argument	b -> gnode		3963804	2					
ANR	3963875	PtrMemberAccess	b -> gnode		3963804	0					
ANR	3963876	Identifier	b		3963804	0					
ANR	3963877	Identifier	gnode		3963804	1					
ANR	3963878	ReturnType	R_API void		3963804	1					
ANR	3963879	Identifier	r_agraph_del_edge		3963804	2					
ANR	3963880	ParameterList	"const RAGraph * g , RANode * a , RANode * b"		3963804	3					
ANR	3963881	Parameter	const RAGraph * g	3840:29:98159:98174	3963804	0	True				
ANR	3963882	ParameterType	const RAGraph *		3963804	0					
ANR	3963883	Identifier	g		3963804	1					
ANR	3963884	Parameter	RANode * a	3840:47:98177:98185	3963804	1	True				
ANR	3963885	ParameterType	RANode *		3963804	0					
ANR	3963886	Identifier	a		3963804	1					
ANR	3963887	Parameter	RANode * b	3840:58:98188:98196	3963804	2	True				
ANR	3963888	ParameterType	RANode *		3963804	0					
ANR	3963889	Identifier	b		3963804	1					
ANR	3963890	CFGEntryNode	ENTRY		3963804		True				
ANR	3963891	CFGExitNode	EXIT		3963804		True				
ANR	3963892	Symbol	a -> title		3963804						
ANR	3963893	Symbol	a		3963804						
ANR	3963894	Symbol	b		3963804						
ANR	3963895	Symbol	b -> gnode		3963804						
ANR	3963896	Symbol	g		3963804						
ANR	3963897	Symbol	g -> db		3963804						
ANR	3963898	Symbol	a -> gnode		3963804						
ANR	3963899	Symbol	* a		3963804						
ANR	3963900	Symbol	k		3963804						
ANR	3963901	Symbol	* b		3963804						
ANR	3963902	Symbol	* g		3963804						
ANR	3963903	Symbol	g -> graph		3963804						
ANR	3963904	Symbol	b -> title		3963804						
ANR	3963905	Symbol	sdb_fmt		3963804						
ANR	3963906	Function	r_agraph_reset	3849:0:98431:98833							
ANR	3963907	FunctionDef	r_agraph_reset (RAGraph * g)		3963906	0					
ANR	3963908	CompoundStatement		3849:38:98469:98833	3963906	0					
ANR	3963909	ExpressionStatement	agraph_free_nodes ( g )	3850:1:98472:98493	3963906	0	True				
ANR	3963910	CallExpression	agraph_free_nodes ( g )		3963906	0					
ANR	3963911	Callee	agraph_free_nodes		3963906	0					
ANR	3963912	Identifier	agraph_free_nodes		3963906	0					
ANR	3963913	ArgumentList	g		3963906	1					
ANR	3963914	Argument	g		3963906	0					
ANR	3963915	Identifier	g		3963906	0					
ANR	3963916	ExpressionStatement	r_graph_reset ( g -> graph )	3851:1:98496:98520	3963906	1	True				
ANR	3963917	CallExpression	r_graph_reset ( g -> graph )		3963906	0					
ANR	3963918	Callee	r_graph_reset		3963906	0					
ANR	3963919	Identifier	r_graph_reset		3963906	0					
ANR	3963920	ArgumentList	g -> graph		3963906	1					
ANR	3963921	Argument	g -> graph		3963906	0					
ANR	3963922	PtrMemberAccess	g -> graph		3963906	0					
ANR	3963923	Identifier	g		3963906	0					
ANR	3963924	Identifier	graph		3963906	1					
ANR	3963925	ExpressionStatement	"r_agraph_set_title ( g , NULL )"	3852:1:98523:98551	3963906	2	True				
ANR	3963926	CallExpression	"r_agraph_set_title ( g , NULL )"		3963906	0					
ANR	3963927	Callee	r_agraph_set_title		3963906	0					
ANR	3963928	Identifier	r_agraph_set_title		3963906	0					
ANR	3963929	ArgumentList	g		3963906	1					
ANR	3963930	Argument	g		3963906	0					
ANR	3963931	Identifier	g		3963906	0					
ANR	3963932	Argument	NULL		3963906	1					
ANR	3963933	Identifier	NULL		3963906	0					
ANR	3963934	ExpressionStatement	sdb_reset ( g -> db )	3853:1:98554:98571	3963906	3	True				
ANR	3963935	CallExpression	sdb_reset ( g -> db )		3963906	0					
ANR	3963936	Callee	sdb_reset		3963906	0					
ANR	3963937	Identifier	sdb_reset		3963906	0					
ANR	3963938	ArgumentList	g -> db		3963906	1					
ANR	3963939	Argument	g -> db		3963906	0					
ANR	3963940	PtrMemberAccess	g -> db		3963906	0					
ANR	3963941	Identifier	g		3963906	0					
ANR	3963942	Identifier	db		3963906	1					
ANR	3963943	IfStatement	if ( g -> edges )		3963906	4					
ANR	3963944	Condition	g -> edges	3854:5:98578:98585	3963906	0	True				
ANR	3963945	PtrMemberAccess	g -> edges		3963906	0					
ANR	3963946	Identifier	g		3963906	0					
ANR	3963947	Identifier	edges		3963906	1					
ANR	3963948	CompoundStatement		6:15:118:118	3963906	1					
ANR	3963949	ExpressionStatement	r_list_purge ( g -> edges )	3855:2:98592:98615	3963906	0	True				
ANR	3963950	CallExpression	r_list_purge ( g -> edges )		3963906	0					
ANR	3963951	Callee	r_list_purge		3963906	0					
ANR	3963952	Identifier	r_list_purge		3963906	0					
ANR	3963953	ArgumentList	g -> edges		3963906	1					
ANR	3963954	Argument	g -> edges		3963906	0					
ANR	3963955	PtrMemberAccess	g -> edges		3963906	0					
ANR	3963956	Identifier	g		3963906	0					
ANR	3963957	Identifier	edges		3963906	1					
ANR	3963958	ExpressionStatement	g -> nodes = sdb_new0 ( )	3857:1:98621:98643	3963906	5	True				
ANR	3963959	AssignmentExpression	g -> nodes = sdb_new0 ( )		3963906	0		=			
ANR	3963960	PtrMemberAccess	g -> nodes		3963906	0					
ANR	3963961	Identifier	g		3963906	0					
ANR	3963962	Identifier	nodes		3963906	1					
ANR	3963963	CallExpression	sdb_new0 ( )		3963906	1					
ANR	3963964	Callee	sdb_new0		3963906	0					
ANR	3963965	Identifier	sdb_new0		3963906	0					
ANR	3963966	ArgumentList			3963906	1					
ANR	3963967	ExpressionStatement	g -> update_seek_on = NULL	3858:1:98646:98670	3963906	6	True				
ANR	3963968	AssignmentExpression	g -> update_seek_on = NULL		3963906	0		=			
ANR	3963969	PtrMemberAccess	g -> update_seek_on		3963906	0					
ANR	3963970	Identifier	g		3963906	0					
ANR	3963971	Identifier	update_seek_on		3963906	1					
ANR	3963972	Identifier	NULL		3963906	1					
ANR	3963973	ExpressionStatement	g -> need_reload_nodes = false	3859:1:98673:98701	3963906	7	True				
ANR	3963974	AssignmentExpression	g -> need_reload_nodes = false		3963906	0		=			
ANR	3963975	PtrMemberAccess	g -> need_reload_nodes		3963906	0					
ANR	3963976	Identifier	g		3963906	0					
ANR	3963977	Identifier	need_reload_nodes		3963906	1					
ANR	3963978	Identifier	false		3963906	1					
ANR	3963979	ExpressionStatement	g -> need_set_layout = true	3860:1:98704:98729	3963906	8	True				
ANR	3963980	AssignmentExpression	g -> need_set_layout = true		3963906	0		=			
ANR	3963981	PtrMemberAccess	g -> need_set_layout		3963906	0					
ANR	3963982	Identifier	g		3963906	0					
ANR	3963983	Identifier	need_set_layout		3963906	1					
ANR	3963984	Identifier	true		3963906	1					
ANR	3963985	ExpressionStatement	g -> need_update_dim = true	3861:1:98732:98757	3963906	9	True				
ANR	3963986	AssignmentExpression	g -> need_update_dim = true		3963906	0		=			
ANR	3963987	PtrMemberAccess	g -> need_update_dim		3963906	0					
ANR	3963988	Identifier	g		3963906	0					
ANR	3963989	Identifier	need_update_dim		3963906	1					
ANR	3963990	Identifier	true		3963906	1					
ANR	3963991	ExpressionStatement	g -> x = g -> y = g -> w = g -> h = 0	3862:1:98760:98789	3963906	10	True				
ANR	3963992	AssignmentExpression	g -> x = g -> y = g -> w = g -> h = 0		3963906	0		=			
ANR	3963993	PtrMemberAccess	g -> x		3963906	0					
ANR	3963994	Identifier	g		3963906	0					
ANR	3963995	Identifier	x		3963906	1					
ANR	3963996	AssignmentExpression	g -> y = g -> w = g -> h = 0		3963906	1		=			
ANR	3963997	PtrMemberAccess	g -> y		3963906	0					
ANR	3963998	Identifier	g		3963906	0					
ANR	3963999	Identifier	y		3963906	1					
ANR	3964000	AssignmentExpression	g -> w = g -> h = 0		3963906	1		=			
ANR	3964001	PtrMemberAccess	g -> w		3963906	0					
ANR	3964002	Identifier	g		3963906	0					
ANR	3964003	Identifier	w		3963906	1					
ANR	3964004	AssignmentExpression	g -> h = 0		3963906	1		=			
ANR	3964005	PtrMemberAccess	g -> h		3963906	0					
ANR	3964006	Identifier	g		3963906	0					
ANR	3964007	Identifier	h		3963906	1					
ANR	3964008	PrimaryExpression	0		3963906	1					
ANR	3964009	ExpressionStatement	agraph_sdb_init ( g )	3863:1:98792:98811	3963906	11	True				
ANR	3964010	CallExpression	agraph_sdb_init ( g )		3963906	0					
ANR	3964011	Callee	agraph_sdb_init		3963906	0					
ANR	3964012	Identifier	agraph_sdb_init		3963906	0					
ANR	3964013	ArgumentList	g		3963906	1					
ANR	3964014	Argument	g		3963906	0					
ANR	3964015	Identifier	g		3963906	0					
ANR	3964016	ExpressionStatement	g -> curnode = NULL	3864:1:98814:98831	3963906	12	True				
ANR	3964017	AssignmentExpression	g -> curnode = NULL		3963906	0		=			
ANR	3964018	PtrMemberAccess	g -> curnode		3963906	0					
ANR	3964019	Identifier	g		3963906	0					
ANR	3964020	Identifier	curnode		3963906	1					
ANR	3964021	Identifier	NULL		3963906	1					
ANR	3964022	ReturnType	R_API void		3963906	1					
ANR	3964023	Identifier	r_agraph_reset		3963906	2					
ANR	3964024	ParameterList	RAGraph * g		3963906	3					
ANR	3964025	Parameter	RAGraph * g	3849:26:98457:98466	3963906	0	True				
ANR	3964026	ParameterType	RAGraph *		3963906	0					
ANR	3964027	Identifier	g		3963906	1					
ANR	3964028	CFGEntryNode	ENTRY		3963906		True				
ANR	3964029	CFGExitNode	EXIT		3963906		True				
ANR	3964030	Symbol	sdb_new0		3963906						
ANR	3964031	Symbol	g -> need_set_layout		3963906						
ANR	3964032	Symbol	NULL		3963906						
ANR	3964033	Symbol	g -> need_reload_nodes		3963906						
ANR	3964034	Symbol	g		3963906						
ANR	3964035	Symbol	g -> db		3963906						
ANR	3964036	Symbol	g -> update_seek_on		3963906						
ANR	3964037	Symbol	false		3963906						
ANR	3964038	Symbol	g -> h		3963906						
ANR	3964039	Symbol	g -> edges		3963906						
ANR	3964040	Symbol	g -> need_update_dim		3963906						
ANR	3964041	Symbol	* g		3963906						
ANR	3964042	Symbol	g -> graph		3963906						
ANR	3964043	Symbol	g -> nodes		3963906						
ANR	3964044	Symbol	g -> curnode		3963906						
ANR	3964045	Symbol	true		3963906						
ANR	3964046	Symbol	g -> y		3963906						
ANR	3964047	Symbol	g -> x		3963906						
ANR	3964048	Symbol	g -> w		3963906						
ANR	3964049	Function	r_agraph_free	3867:0:98836:99061							
ANR	3964050	FunctionDef	r_agraph_free (RAGraph * g)		3964049	0					
ANR	3964051	CompoundStatement		3867:37:98873:99061	3964049	0					
ANR	3964052	IfStatement	if ( g )		3964049	0					
ANR	3964053	Condition	g	3868:5:98880:98880	3964049	0	True				
ANR	3964054	Identifier	g		3964049	0					
ANR	3964055	CompoundStatement		2:8:9:9	3964049	1					
ANR	3964056	ExpressionStatement	agraph_free_nodes ( g )	3869:2:98887:98908	3964049	0	True				
ANR	3964057	CallExpression	agraph_free_nodes ( g )		3964049	0					
ANR	3964058	Callee	agraph_free_nodes		3964049	0					
ANR	3964059	Identifier	agraph_free_nodes		3964049	0					
ANR	3964060	ArgumentList	g		3964049	1					
ANR	3964061	Argument	g		3964049	0					
ANR	3964062	Identifier	g		3964049	0					
ANR	3964063	ExpressionStatement	r_graph_free ( g -> graph )	3870:2:98912:98935	3964049	1	True				
ANR	3964064	CallExpression	r_graph_free ( g -> graph )		3964049	0					
ANR	3964065	Callee	r_graph_free		3964049	0					
ANR	3964066	Identifier	r_graph_free		3964049	0					
ANR	3964067	ArgumentList	g -> graph		3964049	1					
ANR	3964068	Argument	g -> graph		3964049	0					
ANR	3964069	PtrMemberAccess	g -> graph		3964049	0					
ANR	3964070	Identifier	g		3964049	0					
ANR	3964071	Identifier	graph		3964049	1					
ANR	3964072	ExpressionStatement	r_list_free ( g -> edges )	3871:2:98939:98961	3964049	2	True				
ANR	3964073	CallExpression	r_list_free ( g -> edges )		3964049	0					
ANR	3964074	Callee	r_list_free		3964049	0					
ANR	3964075	Identifier	r_list_free		3964049	0					
ANR	3964076	ArgumentList	g -> edges		3964049	1					
ANR	3964077	Argument	g -> edges		3964049	0					
ANR	3964078	PtrMemberAccess	g -> edges		3964049	0					
ANR	3964079	Identifier	g		3964049	0					
ANR	3964080	Identifier	edges		3964049	1					
ANR	3964081	ExpressionStatement	"r_agraph_set_title ( g , NULL )"	3872:2:98965:98993	3964049	3	True				
ANR	3964082	CallExpression	"r_agraph_set_title ( g , NULL )"		3964049	0					
ANR	3964083	Callee	r_agraph_set_title		3964049	0					
ANR	3964084	Identifier	r_agraph_set_title		3964049	0					
ANR	3964085	ArgumentList	g		3964049	1					
ANR	3964086	Argument	g		3964049	0					
ANR	3964087	Identifier	g		3964049	0					
ANR	3964088	Argument	NULL		3964049	1					
ANR	3964089	Identifier	NULL		3964049	0					
ANR	3964090	ExpressionStatement	sdb_free ( g -> db )	3873:2:98997:99013	3964049	4	True				
ANR	3964091	CallExpression	sdb_free ( g -> db )		3964049	0					
ANR	3964092	Callee	sdb_free		3964049	0					
ANR	3964093	Identifier	sdb_free		3964049	0					
ANR	3964094	ArgumentList	g -> db		3964049	1					
ANR	3964095	Argument	g -> db		3964049	0					
ANR	3964096	PtrMemberAccess	g -> db		3964049	0					
ANR	3964097	Identifier	g		3964049	0					
ANR	3964098	Identifier	db		3964049	1					
ANR	3964099	ExpressionStatement	r_cons_canvas_free ( g -> can )	3874:2:99017:99044	3964049	5	True				
ANR	3964100	CallExpression	r_cons_canvas_free ( g -> can )		3964049	0					
ANR	3964101	Callee	r_cons_canvas_free		3964049	0					
ANR	3964102	Identifier	r_cons_canvas_free		3964049	0					
ANR	3964103	ArgumentList	g -> can		3964049	1					
ANR	3964104	Argument	g -> can		3964049	0					
ANR	3964105	PtrMemberAccess	g -> can		3964049	0					
ANR	3964106	Identifier	g		3964049	0					
ANR	3964107	Identifier	can		3964049	1					
ANR	3964108	ExpressionStatement	free ( g )	3875:2:99048:99056	3964049	6	True				
ANR	3964109	CallExpression	free ( g )		3964049	0					
ANR	3964110	Callee	free		3964049	0					
ANR	3964111	Identifier	free		3964049	0					
ANR	3964112	ArgumentList	g		3964049	1					
ANR	3964113	Argument	g		3964049	0					
ANR	3964114	Identifier	g		3964049	0					
ANR	3964115	ReturnType	R_API void		3964049	1					
ANR	3964116	Identifier	r_agraph_free		3964049	2					
ANR	3964117	ParameterList	RAGraph * g		3964049	3					
ANR	3964118	Parameter	RAGraph * g	3867:25:98861:98870	3964049	0	True				
ANR	3964119	ParameterType	RAGraph *		3964049	0					
ANR	3964120	Identifier	g		3964049	1					
ANR	3964121	CFGEntryNode	ENTRY		3964049		True				
ANR	3964122	CFGExitNode	EXIT		3964049		True				
ANR	3964123	Symbol	* g		3964049						
ANR	3964124	Symbol	NULL		3964049						
ANR	3964125	Symbol	g -> graph		3964049						
ANR	3964126	Symbol	g		3964049						
ANR	3964127	Symbol	g -> db		3964049						
ANR	3964128	Symbol	g -> edges		3964049						
ANR	3964129	Symbol	g -> can		3964049						
ANR	3964130	Function	r_agraph_new	3879:0:99064:99257							
ANR	3964131	FunctionDef	r_agraph_new (RConsCanvas * can)		3964130	0					
ANR	3964132	CompoundStatement		3879:46:99110:99257	3964130	0					
ANR	3964133	IdentifierDeclStatement	RAGraph * g = R_NEW0 ( RAGraph ) ;	3880:1:99113:99142	3964130	0	True				
ANR	3964134	IdentifierDecl	* g = R_NEW0 ( RAGraph )		3964130	0					
ANR	3964135	IdentifierDeclType	RAGraph *		3964130	0					
ANR	3964136	Identifier	g		3964130	1					
ANR	3964137	AssignmentExpression	* g = R_NEW0 ( RAGraph )		3964130	2		=			
ANR	3964138	Identifier	g		3964130	0					
ANR	3964139	CallExpression	R_NEW0 ( RAGraph )		3964130	1					
ANR	3964140	Callee	R_NEW0		3964130	0					
ANR	3964141	Identifier	R_NEW0		3964130	0					
ANR	3964142	ArgumentList	RAGraph		3964130	1					
ANR	3964143	Argument	RAGraph		3964130	0					
ANR	3964144	Identifier	RAGraph		3964130	0					
ANR	3964145	IfStatement	if ( ! g )		3964130	1					
ANR	3964146	Condition	! g	3881:5:99149:99150	3964130	0	True				
ANR	3964147	UnaryOperationExpression	! g		3964130	0					
ANR	3964148	UnaryOperator	!		3964130	0					
ANR	3964149	Identifier	g		3964130	1					
ANR	3964150	CompoundStatement		3:9:42:42	3964130	1					
ANR	3964151	ReturnStatement	return NULL ;	3882:2:99157:99168	3964130	0	True				
ANR	3964152	Identifier	NULL		3964130	0					
ANR	3964153	ExpressionStatement	g -> can = can	3884:1:99174:99186	3964130	2	True				
ANR	3964154	AssignmentExpression	g -> can = can		3964130	0		=			
ANR	3964155	PtrMemberAccess	g -> can		3964130	0					
ANR	3964156	Identifier	g		3964130	0					
ANR	3964157	Identifier	can		3964130	1					
ANR	3964158	Identifier	can		3964130	1					
ANR	3964159	ExpressionStatement	g -> dummy = true	3885:1:99189:99204	3964130	3	True				
ANR	3964160	AssignmentExpression	g -> dummy = true		3964130	0		=			
ANR	3964161	PtrMemberAccess	g -> dummy		3964130	0					
ANR	3964162	Identifier	g		3964130	0					
ANR	3964163	Identifier	dummy		3964130	1					
ANR	3964164	Identifier	true		3964130	1					
ANR	3964165	ExpressionStatement	agraph_init ( g )	3886:1:99207:99222	3964130	4	True				
ANR	3964166	CallExpression	agraph_init ( g )		3964130	0					
ANR	3964167	Callee	agraph_init		3964130	0					
ANR	3964168	Identifier	agraph_init		3964130	0					
ANR	3964169	ArgumentList	g		3964130	1					
ANR	3964170	Argument	g		3964130	0					
ANR	3964171	Identifier	g		3964130	0					
ANR	3964172	ExpressionStatement	agraph_sdb_init ( g )	3887:1:99225:99244	3964130	5	True				
ANR	3964173	CallExpression	agraph_sdb_init ( g )		3964130	0					
ANR	3964174	Callee	agraph_sdb_init		3964130	0					
ANR	3964175	Identifier	agraph_sdb_init		3964130	0					
ANR	3964176	ArgumentList	g		3964130	1					
ANR	3964177	Argument	g		3964130	0					
ANR	3964178	Identifier	g		3964130	0					
ANR	3964179	ReturnStatement	return g ;	3888:1:99247:99255	3964130	6	True				
ANR	3964180	Identifier	g		3964130	0					
ANR	3964181	ReturnType	R_API RAGraph *		3964130	1					
ANR	3964182	Identifier	r_agraph_new		3964130	2					
ANR	3964183	ParameterList	RConsCanvas * can		3964130	3					
ANR	3964184	Parameter	RConsCanvas * can	3879:28:99092:99107	3964130	0	True				
ANR	3964185	ParameterType	RConsCanvas *		3964130	0					
ANR	3964186	Identifier	can		3964130	1					
ANR	3964187	CFGEntryNode	ENTRY		3964130		True				
ANR	3964188	CFGExitNode	EXIT		3964130		True				
ANR	3964189	Symbol	can		3964130						
ANR	3964190	Symbol	R_NEW0		3964130						
ANR	3964191	Symbol	* g		3964130						
ANR	3964192	Symbol	NULL		3964130						
ANR	3964193	Symbol	g -> dummy		3964130						
ANR	3964194	Symbol	g		3964130						
ANR	3964195	Symbol	RAGraph		3964130						
ANR	3964196	Symbol	true		3964130						
ANR	3964197	Symbol	g -> can		3964130						
ANR	3964198	Function	visual_offset	3891:0:99260:99900							
ANR	3964199	FunctionDef	"visual_offset (RAGraph * g , RCore * core)"		3964198	0					
ANR	3964200	CompoundStatement		3891:51:99311:99900	3964198	0					
ANR	3964201	IdentifierDeclStatement	char buf [ 256 ] ;	3892:1:99314:99327	3964198	0	True				
ANR	3964202	IdentifierDecl	buf [ 256 ]		3964198	0					
ANR	3964203	IdentifierDeclType	char [ 256 ]		3964198	0					
ANR	3964204	Identifier	buf		3964198	1					
ANR	3964205	PrimaryExpression	256		3964198	2					
ANR	3964206	IdentifierDeclStatement	int rows ;	3893:1:99330:99338	3964198	1	True				
ANR	3964207	IdentifierDecl	rows		3964198	0					
ANR	3964208	IdentifierDeclType	int		3964198	0					
ANR	3964209	Identifier	rows		3964198	1					
ANR	3964210	ExpressionStatement	r_cons_get_size ( & rows )	3894:1:99341:99364	3964198	2	True				
ANR	3964211	CallExpression	r_cons_get_size ( & rows )		3964198	0					
ANR	3964212	Callee	r_cons_get_size		3964198	0					
ANR	3964213	Identifier	r_cons_get_size		3964198	0					
ANR	3964214	ArgumentList	& rows		3964198	1					
ANR	3964215	Argument	& rows		3964198	0					
ANR	3964216	UnaryOperationExpression	& rows		3964198	0					
ANR	3964217	UnaryOperator	&		3964198	0					
ANR	3964218	Identifier	rows		3964198	1					
ANR	3964219	ExpressionStatement	"r_cons_gotoxy ( 0 , rows )"	3895:1:99367:99390	3964198	3	True				
ANR	3964220	CallExpression	"r_cons_gotoxy ( 0 , rows )"		3964198	0					
ANR	3964221	Callee	r_cons_gotoxy		3964198	0					
ANR	3964222	Identifier	r_cons_gotoxy		3964198	0					
ANR	3964223	ArgumentList	0		3964198	1					
ANR	3964224	Argument	0		3964198	0					
ANR	3964225	PrimaryExpression	0		3964198	0					
ANR	3964226	Argument	rows		3964198	1					
ANR	3964227	Identifier	rows		3964198	0					
ANR	3964228	ExpressionStatement	r_cons_flush ( )	3896:1:99393:99408	3964198	4	True				
ANR	3964229	CallExpression	r_cons_flush ( )		3964198	0					
ANR	3964230	Callee	r_cons_flush		3964198	0					
ANR	3964231	Identifier	r_cons_flush		3964198	0					
ANR	3964232	ArgumentList			3964198	1					
ANR	3964233	ExpressionStatement	core -> cons -> line -> prompt_type = R_LINE_PROMPT_OFFSET	3897:1:99411:99463	3964198	5	True				
ANR	3964234	AssignmentExpression	core -> cons -> line -> prompt_type = R_LINE_PROMPT_OFFSET		3964198	0		=			
ANR	3964235	PtrMemberAccess	core -> cons -> line -> prompt_type		3964198	0					
ANR	3964236	PtrMemberAccess	core -> cons -> line		3964198	0					
ANR	3964237	PtrMemberAccess	core -> cons		3964198	0					
ANR	3964238	Identifier	core		3964198	0					
ANR	3964239	Identifier	cons		3964198	1					
ANR	3964240	Identifier	line		3964198	1					
ANR	3964241	Identifier	prompt_type		3964198	1					
ANR	3964242	Identifier	R_LINE_PROMPT_OFFSET		3964198	1					
ANR	3964243	ExpressionStatement	"r_line_set_hist_callback ( core -> cons -> line , & r_line_hist_offset_up , & r_line_hist_offset_down )"	3898:1:99466:99559	3964198	6	True				
ANR	3964244	CallExpression	"r_line_set_hist_callback ( core -> cons -> line , & r_line_hist_offset_up , & r_line_hist_offset_down )"		3964198	0					
ANR	3964245	Callee	r_line_set_hist_callback		3964198	0					
ANR	3964246	Identifier	r_line_set_hist_callback		3964198	0					
ANR	3964247	ArgumentList	core -> cons -> line		3964198	1					
ANR	3964248	Argument	core -> cons -> line		3964198	0					
ANR	3964249	PtrMemberAccess	core -> cons -> line		3964198	0					
ANR	3964250	PtrMemberAccess	core -> cons		3964198	0					
ANR	3964251	Identifier	core		3964198	0					
ANR	3964252	Identifier	cons		3964198	1					
ANR	3964253	Identifier	line		3964198	1					
ANR	3964254	Argument	& r_line_hist_offset_up		3964198	1					
ANR	3964255	UnaryOperationExpression	& r_line_hist_offset_up		3964198	0					
ANR	3964256	UnaryOperator	&		3964198	0					
ANR	3964257	Identifier	r_line_hist_offset_up		3964198	1					
ANR	3964258	Argument	& r_line_hist_offset_down		3964198	2					
ANR	3964259	UnaryOperationExpression	& r_line_hist_offset_down		3964198	0					
ANR	3964260	UnaryOperator	&		3964198	0					
ANR	3964261	Identifier	r_line_hist_offset_down		3964198	1					
ANR	3964262	ExpressionStatement	"r_line_set_prompt ( ""[offset]> "" )"	3899:1:99562:99594	3964198	7	True				
ANR	3964263	CallExpression	"r_line_set_prompt ( ""[offset]> "" )"		3964198	0					
ANR	3964264	Callee	r_line_set_prompt		3964198	0					
ANR	3964265	Identifier	r_line_set_prompt		3964198	0					
ANR	3964266	ArgumentList	"""[offset]> """		3964198	1					
ANR	3964267	Argument	"""[offset]> """		3964198	0					
ANR	3964268	PrimaryExpression	"""[offset]> """		3964198	0					
ANR	3964269	ExpressionStatement	"strcpy ( buf , ""s "" )"	3900:1:99597:99615	3964198	8	True				
ANR	3964270	CallExpression	"strcpy ( buf , ""s "" )"		3964198	0					
ANR	3964271	Callee	strcpy		3964198	0					
ANR	3964272	Identifier	strcpy		3964198	0					
ANR	3964273	ArgumentList	buf		3964198	1					
ANR	3964274	Argument	buf		3964198	0					
ANR	3964275	Identifier	buf		3964198	0					
ANR	3964276	Argument	"""s """		3964198	1					
ANR	3964277	PrimaryExpression	"""s """		3964198	0					
ANR	3964278	IfStatement	"if ( r_cons_fgets ( buf + 2 , sizeof ( buf ) - 3 , 0 , NULL ) > 0 )"		3964198	9					
ANR	3964279	Condition	"r_cons_fgets ( buf + 2 , sizeof ( buf ) - 3 , 0 , NULL ) > 0"	3901:5:99622:99674	3964198	0	True				
ANR	3964280	RelationalExpression	"r_cons_fgets ( buf + 2 , sizeof ( buf ) - 3 , 0 , NULL ) > 0"		3964198	0		>			
ANR	3964281	CallExpression	"r_cons_fgets ( buf + 2 , sizeof ( buf ) - 3 , 0 , NULL )"		3964198	0					
ANR	3964282	Callee	r_cons_fgets		3964198	0					
ANR	3964283	Identifier	r_cons_fgets		3964198	0					
ANR	3964284	ArgumentList	buf + 2		3964198	1					
ANR	3964285	Argument	buf + 2		3964198	0					
ANR	3964286	AdditiveExpression	buf + 2		3964198	0		+			
ANR	3964287	Identifier	buf		3964198	0					
ANR	3964288	PrimaryExpression	2		3964198	1					
ANR	3964289	Argument	sizeof ( buf ) - 3		3964198	1					
ANR	3964290	AdditiveExpression	sizeof ( buf ) - 3		3964198	0		-			
ANR	3964291	SizeofExpression	sizeof ( buf )		3964198	0					
ANR	3964292	Sizeof	sizeof		3964198	0					
ANR	3964293	SizeofOperand	buf		3964198	1					
ANR	3964294	PrimaryExpression	3		3964198	1					
ANR	3964295	Argument	0		3964198	2					
ANR	3964296	PrimaryExpression	0		3964198	0					
ANR	3964297	Argument	NULL		3964198	3					
ANR	3964298	Identifier	NULL		3964198	0					
ANR	3964299	PrimaryExpression	0		3964198	1					
ANR	3964300	CompoundStatement		11:60:365:365	3964198	1					
ANR	3964301	IfStatement	if ( buf [ 2 ] == '.' )		3964198	0					
ANR	3964302	Condition	buf [ 2 ] == '.'	3902:6:99685:99697	3964198	0	True				
ANR	3964303	EqualityExpression	buf [ 2 ] == '.'		3964198	0		==			
ANR	3964304	ArrayIndexing	buf [ 2 ]		3964198	0					
ANR	3964305	Identifier	buf		3964198	0					
ANR	3964306	PrimaryExpression	2		3964198	1					
ANR	3964307	PrimaryExpression	'.'		3964198	1					
ANR	3964308	CompoundStatement		12:21:388:388	3964198	1					
ANR	3964309	ExpressionStatement	buf [ 1 ] = '.'	3903:3:99705:99717	3964198	0	True				
ANR	3964310	AssignmentExpression	buf [ 1 ] = '.'		3964198	0		=			
ANR	3964311	ArrayIndexing	buf [ 1 ]		3964198	0					
ANR	3964312	Identifier	buf		3964198	0					
ANR	3964313	PrimaryExpression	1		3964198	1					
ANR	3964314	PrimaryExpression	'.'		3964198	1					
ANR	3964315	ExpressionStatement	"r_core_cmd0 ( core , buf )"	3905:2:99725:99748	3964198	1	True				
ANR	3964316	CallExpression	"r_core_cmd0 ( core , buf )"		3964198	0					
ANR	3964317	Callee	r_core_cmd0		3964198	0					
ANR	3964318	Identifier	r_core_cmd0		3964198	0					
ANR	3964319	ArgumentList	core		3964198	1					
ANR	3964320	Argument	core		3964198	0					
ANR	3964321	Identifier	core		3964198	0					
ANR	3964322	Argument	buf		3964198	1					
ANR	3964323	Identifier	buf		3964198	0					
ANR	3964324	ExpressionStatement	"r_line_set_hist_callback ( core -> cons -> line , & r_line_hist_cmd_up , & r_line_hist_cmd_down )"	3906:2:99752:99839	3964198	2	True				
ANR	3964325	CallExpression	"r_line_set_hist_callback ( core -> cons -> line , & r_line_hist_cmd_up , & r_line_hist_cmd_down )"		3964198	0					
ANR	3964326	Callee	r_line_set_hist_callback		3964198	0					
ANR	3964327	Identifier	r_line_set_hist_callback		3964198	0					
ANR	3964328	ArgumentList	core -> cons -> line		3964198	1					
ANR	3964329	Argument	core -> cons -> line		3964198	0					
ANR	3964330	PtrMemberAccess	core -> cons -> line		3964198	0					
ANR	3964331	PtrMemberAccess	core -> cons		3964198	0					
ANR	3964332	Identifier	core		3964198	0					
ANR	3964333	Identifier	cons		3964198	1					
ANR	3964334	Identifier	line		3964198	1					
ANR	3964335	Argument	& r_line_hist_cmd_up		3964198	1					
ANR	3964336	UnaryOperationExpression	& r_line_hist_cmd_up		3964198	0					
ANR	3964337	UnaryOperator	&		3964198	0					
ANR	3964338	Identifier	r_line_hist_cmd_up		3964198	1					
ANR	3964339	Argument	& r_line_hist_cmd_down		3964198	2					
ANR	3964340	UnaryOperationExpression	& r_line_hist_cmd_down		3964198	0					
ANR	3964341	UnaryOperator	&		3964198	0					
ANR	3964342	Identifier	r_line_hist_cmd_down		3964198	1					
ANR	3964343	ExpressionStatement	core -> cons -> line -> prompt_type = R_LINE_PROMPT_DEFAULT	3908:1:99845:99898	3964198	10	True				
ANR	3964344	AssignmentExpression	core -> cons -> line -> prompt_type = R_LINE_PROMPT_DEFAULT		3964198	0		=			
ANR	3964345	PtrMemberAccess	core -> cons -> line -> prompt_type		3964198	0					
ANR	3964346	PtrMemberAccess	core -> cons -> line		3964198	0					
ANR	3964347	PtrMemberAccess	core -> cons		3964198	0					
ANR	3964348	Identifier	core		3964198	0					
ANR	3964349	Identifier	cons		3964198	1					
ANR	3964350	Identifier	line		3964198	1					
ANR	3964351	Identifier	prompt_type		3964198	1					
ANR	3964352	Identifier	R_LINE_PROMPT_DEFAULT		3964198	1					
ANR	3964353	ReturnType	static void		3964198	1					
ANR	3964354	Identifier	visual_offset		3964198	2					
ANR	3964355	ParameterList	"RAGraph * g , RCore * core"		3964198	3					
ANR	3964356	Parameter	RAGraph * g	3891:26:99286:99295	3964198	0	True				
ANR	3964357	ParameterType	RAGraph *		3964198	0					
ANR	3964358	Identifier	g		3964198	1					
ANR	3964359	Parameter	RCore * core	3891:38:99298:99308	3964198	1	True				
ANR	3964360	ParameterType	RCore *		3964198	0					
ANR	3964361	Identifier	core		3964198	1					
ANR	3964362	CFGEntryNode	ENTRY		3964198		True				
ANR	3964363	CFGExitNode	EXIT		3964198		True				
ANR	3964364	Symbol	* buf		3964198						
ANR	3964365	Symbol	& rows		3964198						
ANR	3964366	Symbol	NULL		3964198						
ANR	3964367	Symbol	* core -> cons		3964198						
ANR	3964368	Symbol	R_LINE_PROMPT_OFFSET		3964198						
ANR	3964369	Symbol	r_cons_fgets		3964198						
ANR	3964370	Symbol	g		3964198						
ANR	3964371	Symbol	* * core -> cons		3964198						
ANR	3964372	Symbol	* core		3964198						
ANR	3964373	Symbol	rows		3964198						
ANR	3964374	Symbol	core -> cons -> line -> prompt_type		3964198						
ANR	3964375	Symbol	R_LINE_PROMPT_DEFAULT		3964198						
ANR	3964376	Symbol	core		3964198						
ANR	3964377	Symbol	* * * core		3964198						
ANR	3964378	Symbol	& r_line_hist_cmd_down		3964198						
ANR	3964379	Symbol	buf		3964198						
ANR	3964380	Symbol	core -> cons		3964198						
ANR	3964381	Symbol	& r_line_hist_offset_down		3964198						
ANR	3964382	Symbol	* core -> cons -> line		3964198						
ANR	3964383	Symbol	& r_line_hist_offset_up		3964198						
ANR	3964384	Symbol	& r_line_hist_cmd_up		3964198						
ANR	3964385	Symbol	core -> cons -> line		3964198						
ANR	3964386	Symbol	* * core		3964198						
ANR	3964387	Function	goto_asmqjmps	3911:0:99903:100851							
ANR	3964388	FunctionDef	"goto_asmqjmps (RAGraph * g , RCore * core)"		3964387	0					
ANR	3964389	CompoundStatement		3911:51:99954:100851	3964387	0					
ANR	3964390	IdentifierDeclStatement	"const char * h = ""[Fast goto call/jmp]> "" ;"	3912:1:99957:99997	3964387	0	True				
ANR	3964391	IdentifierDecl	"* h = ""[Fast goto call/jmp]> """		3964387	0					
ANR	3964392	IdentifierDeclType	const char *		3964387	0					
ANR	3964393	Identifier	h		3964387	1					
ANR	3964394	AssignmentExpression	"* h = ""[Fast goto call/jmp]> """		3964387	2		=			
ANR	3964395	Identifier	h		3964387	0					
ANR	3964396	PrimaryExpression	"""[Fast goto call/jmp]> """		3964387	1					
ANR	3964397	IdentifierDeclStatement	char obuf [ R_CORE_ASMQJMPS_LEN_LETTERS + 1 ] ;	3913:1:100000:100042	3964387	1	True				
ANR	3964398	IdentifierDecl	obuf [ R_CORE_ASMQJMPS_LEN_LETTERS + 1 ]		3964387	0					
ANR	3964399	IdentifierDeclType	char [ R_CORE_ASMQJMPS_LEN_LETTERS + 1 ]		3964387	0					
ANR	3964400	Identifier	obuf		3964387	1					
ANR	3964401	AdditiveExpression	R_CORE_ASMQJMPS_LEN_LETTERS + 1		3964387	2		+			
ANR	3964402	Identifier	R_CORE_ASMQJMPS_LEN_LETTERS		3964387	0					
ANR	3964403	PrimaryExpression	1		3964387	1					
ANR	3964404	IdentifierDeclStatement	"int rows , i = 0 ;"	3914:1:100045:100060	3964387	2	True				
ANR	3964405	IdentifierDecl	rows		3964387	0					
ANR	3964406	IdentifierDeclType	int		3964387	0					
ANR	3964407	Identifier	rows		3964387	1					
ANR	3964408	IdentifierDecl	i = 0		3964387	1					
ANR	3964409	IdentifierDeclType	int		3964387	0					
ANR	3964410	Identifier	i		3964387	1					
ANR	3964411	AssignmentExpression	i = 0		3964387	2		=			
ANR	3964412	Identifier	i		3964387	0					
ANR	3964413	PrimaryExpression	0		3964387	1					
ANR	3964414	IdentifierDeclStatement	bool cont ;	3915:1:100063:100072	3964387	3	True				
ANR	3964415	IdentifierDecl	cont		3964387	0					
ANR	3964416	IdentifierDeclType	bool		3964387	0					
ANR	3964417	Identifier	cont		3964387	1					
ANR	3964418	ExpressionStatement	r_cons_get_size ( & rows )	3917:1:100076:100099	3964387	4	True				
ANR	3964419	CallExpression	r_cons_get_size ( & rows )		3964387	0					
ANR	3964420	Callee	r_cons_get_size		3964387	0					
ANR	3964421	Identifier	r_cons_get_size		3964387	0					
ANR	3964422	ArgumentList	& rows		3964387	1					
ANR	3964423	Argument	& rows		3964387	0					
ANR	3964424	UnaryOperationExpression	& rows		3964387	0					
ANR	3964425	UnaryOperator	&		3964387	0					
ANR	3964426	Identifier	rows		3964387	1					
ANR	3964427	ExpressionStatement	"r_cons_gotoxy ( 0 , rows )"	3918:1:100102:100125	3964387	5	True				
ANR	3964428	CallExpression	"r_cons_gotoxy ( 0 , rows )"		3964387	0					
ANR	3964429	Callee	r_cons_gotoxy		3964387	0					
ANR	3964430	Identifier	r_cons_gotoxy		3964387	0					
ANR	3964431	ArgumentList	0		3964387	1					
ANR	3964432	Argument	0		3964387	0					
ANR	3964433	PrimaryExpression	0		3964387	0					
ANR	3964434	Argument	rows		3964387	1					
ANR	3964435	Identifier	rows		3964387	0					
ANR	3964436	ExpressionStatement	r_cons_clear_line ( 0 )	3919:1:100128:100149	3964387	6	True				
ANR	3964437	CallExpression	r_cons_clear_line ( 0 )		3964387	0					
ANR	3964438	Callee	r_cons_clear_line		3964387	0					
ANR	3964439	Identifier	r_cons_clear_line		3964387	0					
ANR	3964440	ArgumentList	0		3964387	1					
ANR	3964441	Argument	0		3964387	0					
ANR	3964442	PrimaryExpression	0		3964387	0					
ANR	3964443	ExpressionStatement	r_cons_printf ( Color_RESET )	3920:1:100152:100179	3964387	7	True				
ANR	3964444	CallExpression	r_cons_printf ( Color_RESET )		3964387	0					
ANR	3964445	Callee	r_cons_printf		3964387	0					
ANR	3964446	Identifier	r_cons_printf		3964387	0					
ANR	3964447	ArgumentList	Color_RESET		3964387	1					
ANR	3964448	Argument	Color_RESET		3964387	0					
ANR	3964449	Identifier	Color_RESET		3964387	0					
ANR	3964450	ExpressionStatement	r_cons_printf ( h )	3921:1:100182:100199	3964387	8	True				
ANR	3964451	CallExpression	r_cons_printf ( h )		3964387	0					
ANR	3964452	Callee	r_cons_printf		3964387	0					
ANR	3964453	Identifier	r_cons_printf		3964387	0					
ANR	3964454	ArgumentList	h		3964387	1					
ANR	3964455	Argument	h		3964387	0					
ANR	3964456	Identifier	h		3964387	0					
ANR	3964457	ExpressionStatement	r_cons_flush ( )	3922:1:100202:100217	3964387	9	True				
ANR	3964458	CallExpression	r_cons_flush ( )		3964387	0					
ANR	3964459	Callee	r_cons_flush		3964387	0					
ANR	3964460	Identifier	r_cons_flush		3964387	0					
ANR	3964461	ArgumentList			3964387	1					
ANR	3964462	DoStatement	do		3964387	10					
ANR	3964463	CompoundStatement		15:2:273:301	3964387	0					
ANR	3964464	IdentifierDeclStatement	char ch = r_cons_readchar ( ) ;	3925:2:100228:100256	3964387	0	True				
ANR	3964465	IdentifierDecl	ch = r_cons_readchar ( )		3964387	0					
ANR	3964466	IdentifierDeclType	char		3964387	0					
ANR	3964467	Identifier	ch		3964387	1					
ANR	3964468	AssignmentExpression	ch = r_cons_readchar ( )		3964387	2		=			
ANR	3964469	Identifier	ch		3964387	0					
ANR	3964470	CallExpression	r_cons_readchar ( )		3964387	1					
ANR	3964471	Callee	r_cons_readchar		3964387	0					
ANR	3964472	Identifier	r_cons_readchar		3964387	0					
ANR	3964473	ArgumentList			3964387	1					
ANR	3964474	ExpressionStatement	obuf [ i ++ ] = ch	3926:2:100260:100274	3964387	1	True				
ANR	3964475	AssignmentExpression	obuf [ i ++ ] = ch		3964387	0		=			
ANR	3964476	ArrayIndexing	obuf [ i ++ ]		3964387	0					
ANR	3964477	Identifier	obuf		3964387	0					
ANR	3964478	PostIncDecOperationExpression	i ++		3964387	1					
ANR	3964479	Identifier	i		3964387	0					
ANR	3964480	IncDec	++		3964387	1					
ANR	3964481	Identifier	ch		3964387	1					
ANR	3964482	ExpressionStatement	"r_cons_printf ( ""%c"" , ch )"	3927:2:100278:100302	3964387	2	True				
ANR	3964483	CallExpression	"r_cons_printf ( ""%c"" , ch )"		3964387	0					
ANR	3964484	Callee	r_cons_printf		3964387	0					
ANR	3964485	Identifier	r_cons_printf		3964387	0					
ANR	3964486	ArgumentList	"""%c"""		3964387	1					
ANR	3964487	Argument	"""%c"""		3964387	0					
ANR	3964488	PrimaryExpression	"""%c"""		3964387	0					
ANR	3964489	Argument	ch		3964387	1					
ANR	3964490	Identifier	ch		3964387	0					
ANR	3964491	ExpressionStatement	cont = isalpha ( ( ut8 ) ch ) && ! islower ( ( ut8 ) ch )	3928:2:100306:100354	3964387	3	True				
ANR	3964492	AssignmentExpression	cont = isalpha ( ( ut8 ) ch ) && ! islower ( ( ut8 ) ch )		3964387	0		=			
ANR	3964493	Identifier	cont		3964387	0					
ANR	3964494	AndExpression	isalpha ( ( ut8 ) ch ) && ! islower ( ( ut8 ) ch )		3964387	1		&&			
ANR	3964495	CallExpression	isalpha ( ( ut8 ) ch )		3964387	0					
ANR	3964496	Callee	isalpha		3964387	0					
ANR	3964497	Identifier	isalpha		3964387	0					
ANR	3964498	ArgumentList	( ut8 ) ch		3964387	1					
ANR	3964499	Argument	( ut8 ) ch		3964387	0					
ANR	3964500	CastExpression	( ut8 ) ch		3964387	0					
ANR	3964501	CastTarget	ut8		3964387	0					
ANR	3964502	Identifier	ch		3964387	1					
ANR	3964503	UnaryOperationExpression	! islower ( ( ut8 ) ch )		3964387	1					
ANR	3964504	UnaryOperator	!		3964387	0					
ANR	3964505	CallExpression	islower ( ( ut8 ) ch )		3964387	1					
ANR	3964506	Callee	islower		3964387	0					
ANR	3964507	Identifier	islower		3964387	0					
ANR	3964508	ArgumentList	( ut8 ) ch		3964387	1					
ANR	3964509	Argument	( ut8 ) ch		3964387	0					
ANR	3964510	CastExpression	( ut8 ) ch		3964387	0					
ANR	3964511	CastTarget	ut8		3964387	0					
ANR	3964512	Identifier	ch		3964387	1					
ANR	3964513	Condition	i < R_CORE_ASMQJMPS_LEN_LETTERS && cont	3929:10:100366:100404	3964387	1	True				
ANR	3964514	AndExpression	i < R_CORE_ASMQJMPS_LEN_LETTERS && cont		3964387	0		&&			
ANR	3964515	RelationalExpression	i < R_CORE_ASMQJMPS_LEN_LETTERS		3964387	0		<			
ANR	3964516	Identifier	i		3964387	0					
ANR	3964517	Identifier	R_CORE_ASMQJMPS_LEN_LETTERS		3964387	1					
ANR	3964518	Identifier	cont		3964387	1					
ANR	3964519	ExpressionStatement	r_cons_flush ( )	3930:1:100409:100424	3964387	11	True				
ANR	3964520	CallExpression	r_cons_flush ( )		3964387	0					
ANR	3964521	Callee	r_cons_flush		3964387	0					
ANR	3964522	Identifier	r_cons_flush		3964387	0					
ANR	3964523	ArgumentList			3964387	1					
ANR	3964524	ExpressionStatement	obuf [ i ] = '\\0'	3932:1:100428:100442	3964387	12	True				
ANR	3964525	AssignmentExpression	obuf [ i ] = '\\0'		3964387	0		=			
ANR	3964526	ArrayIndexing	obuf [ i ]		3964387	0					
ANR	3964527	Identifier	obuf		3964387	0					
ANR	3964528	Identifier	i		3964387	1					
ANR	3964529	PrimaryExpression	'\\0'		3964387	1					
ANR	3964530	IdentifierDeclStatement	"ut64 addr = r_core_get_asmqjmps ( core , obuf ) ;"	3933:1:100445:100489	3964387	13	True				
ANR	3964531	IdentifierDecl	"addr = r_core_get_asmqjmps ( core , obuf )"		3964387	0					
ANR	3964532	IdentifierDeclType	ut64		3964387	0					
ANR	3964533	Identifier	addr		3964387	1					
ANR	3964534	AssignmentExpression	"addr = r_core_get_asmqjmps ( core , obuf )"		3964387	2		=			
ANR	3964535	Identifier	addr		3964387	0					
ANR	3964536	CallExpression	"r_core_get_asmqjmps ( core , obuf )"		3964387	1					
ANR	3964537	Callee	r_core_get_asmqjmps		3964387	0					
ANR	3964538	Identifier	r_core_get_asmqjmps		3964387	0					
ANR	3964539	ArgumentList	core		3964387	1					
ANR	3964540	Argument	core		3964387	0					
ANR	3964541	Identifier	core		3964387	0					
ANR	3964542	Argument	obuf		3964387	1					
ANR	3964543	Identifier	obuf		3964387	0					
ANR	3964544	IfStatement	if ( addr != UT64_MAX )		3964387	14					
ANR	3964545	Condition	addr != UT64_MAX	3934:5:100496:100511	3964387	0	True				
ANR	3964546	EqualityExpression	addr != UT64_MAX		3964387	0		!=			
ANR	3964547	Identifier	addr		3964387	0					
ANR	3964548	Identifier	UT64_MAX		3964387	1					
ANR	3964549	CompoundStatement		26:2:597:645	3964387	1					
ANR	3964550	IdentifierDeclStatement	char * title = get_title ( addr ) ;	3935:2:100518:100548	3964387	0	True				
ANR	3964551	IdentifierDecl	* title = get_title ( addr )		3964387	0					
ANR	3964552	IdentifierDeclType	char *		3964387	0					
ANR	3964553	Identifier	title		3964387	1					
ANR	3964554	AssignmentExpression	* title = get_title ( addr )		3964387	2		=			
ANR	3964555	Identifier	title		3964387	0					
ANR	3964556	CallExpression	get_title ( addr )		3964387	1					
ANR	3964557	Callee	get_title		3964387	0					
ANR	3964558	Identifier	get_title		3964387	0					
ANR	3964559	ArgumentList	addr		3964387	1					
ANR	3964560	Argument	addr		3964387	0					
ANR	3964561	Identifier	addr		3964387	0					
ANR	3964562	IdentifierDeclStatement	"RANode * addr_node = r_agraph_get_node ( g , title ) ;"	3936:2:100552:100600	3964387	1	True				
ANR	3964563	IdentifierDecl	"* addr_node = r_agraph_get_node ( g , title )"		3964387	0					
ANR	3964564	IdentifierDeclType	RANode *		3964387	0					
ANR	3964565	Identifier	addr_node		3964387	1					
ANR	3964566	AssignmentExpression	"* addr_node = r_agraph_get_node ( g , title )"		3964387	2		=			
ANR	3964567	Identifier	addr_node		3964387	0					
ANR	3964568	CallExpression	"r_agraph_get_node ( g , title )"		3964387	1					
ANR	3964569	Callee	r_agraph_get_node		3964387	0					
ANR	3964570	Identifier	r_agraph_get_node		3964387	0					
ANR	3964571	ArgumentList	g		3964387	1					
ANR	3964572	Argument	g		3964387	0					
ANR	3964573	Identifier	g		3964387	0					
ANR	3964574	Argument	title		3964387	1					
ANR	3964575	Identifier	title		3964387	0					
ANR	3964576	IfStatement	if ( addr_node )		3964387	2					
ANR	3964577	Condition	addr_node	3937:6:100608:100616	3964387	0	True				
ANR	3964578	Identifier	addr_node		3964387	0					
ANR	3964579	CompoundStatement		27:17:664:664	3964387	1					
ANR	3964580	ExpressionStatement	"r_agraph_set_curnode ( g , addr_node )"	3938:3:100624:100659	3964387	0	True				
ANR	3964581	CallExpression	"r_agraph_set_curnode ( g , addr_node )"		3964387	0					
ANR	3964582	Callee	r_agraph_set_curnode		3964387	0					
ANR	3964583	Identifier	r_agraph_set_curnode		3964387	0					
ANR	3964584	ArgumentList	g		3964387	1					
ANR	3964585	Argument	g		3964387	0					
ANR	3964586	Identifier	g		3964387	0					
ANR	3964587	Argument	addr_node		3964387	1					
ANR	3964588	Identifier	addr_node		3964387	0					
ANR	3964589	ExpressionStatement	"r_core_seek ( core , addr , 0 )"	3939:3:100664:100691	3964387	1	True				
ANR	3964590	CallExpression	"r_core_seek ( core , addr , 0 )"		3964387	0					
ANR	3964591	Callee	r_core_seek		3964387	0					
ANR	3964592	Identifier	r_core_seek		3964387	0					
ANR	3964593	ArgumentList	core		3964387	1					
ANR	3964594	Argument	core		3964387	0					
ANR	3964595	Identifier	core		3964387	0					
ANR	3964596	Argument	addr		3964387	1					
ANR	3964597	Identifier	addr		3964387	0					
ANR	3964598	Argument	0		3964387	2					
ANR	3964599	PrimaryExpression	0		3964387	0					
ANR	3964600	ExpressionStatement	"agraph_update_seek ( g , addr_node , true )"	3940:3:100696:100735	3964387	2	True				
ANR	3964601	CallExpression	"agraph_update_seek ( g , addr_node , true )"		3964387	0					
ANR	3964602	Callee	agraph_update_seek		3964387	0					
ANR	3964603	Identifier	agraph_update_seek		3964387	0					
ANR	3964604	ArgumentList	g		3964387	1					
ANR	3964605	Argument	g		3964387	0					
ANR	3964606	Identifier	g		3964387	0					
ANR	3964607	Argument	addr_node		3964387	1					
ANR	3964608	Identifier	addr_node		3964387	0					
ANR	3964609	Argument	true		3964387	2					
ANR	3964610	Identifier	true		3964387	0					
ANR	3964611	ElseStatement	else		3964387	0					
ANR	3964612	CompoundStatement		31:9:791:791	3964387	0					
ANR	3964613	ExpressionStatement	"r_io_sundo_push ( core -> io , core -> offset , 0 )"	3942:3:100751:100794	3964387	0	True				
ANR	3964614	CallExpression	"r_io_sundo_push ( core -> io , core -> offset , 0 )"		3964387	0					
ANR	3964615	Callee	r_io_sundo_push		3964387	0					
ANR	3964616	Identifier	r_io_sundo_push		3964387	0					
ANR	3964617	ArgumentList	core -> io		3964387	1					
ANR	3964618	Argument	core -> io		3964387	0					
ANR	3964619	PtrMemberAccess	core -> io		3964387	0					
ANR	3964620	Identifier	core		3964387	0					
ANR	3964621	Identifier	io		3964387	1					
ANR	3964622	Argument	core -> offset		3964387	1					
ANR	3964623	PtrMemberAccess	core -> offset		3964387	0					
ANR	3964624	Identifier	core		3964387	0					
ANR	3964625	Identifier	offset		3964387	1					
ANR	3964626	Argument	0		3964387	2					
ANR	3964627	PrimaryExpression	0		3964387	0					
ANR	3964628	ExpressionStatement	"r_core_seek ( core , addr , 0 )"	3943:3:100799:100826	3964387	1	True				
ANR	3964629	CallExpression	"r_core_seek ( core , addr , 0 )"		3964387	0					
ANR	3964630	Callee	r_core_seek		3964387	0					
ANR	3964631	Identifier	r_core_seek		3964387	0					
ANR	3964632	ArgumentList	core		3964387	1					
ANR	3964633	Argument	core		3964387	0					
ANR	3964634	Identifier	core		3964387	0					
ANR	3964635	Argument	addr		3964387	1					
ANR	3964636	Identifier	addr		3964387	0					
ANR	3964637	Argument	0		3964387	2					
ANR	3964638	PrimaryExpression	0		3964387	0					
ANR	3964639	ExpressionStatement	free ( title )	3945:2:100834:100846	3964387	3	True				
ANR	3964640	CallExpression	free ( title )		3964387	0					
ANR	3964641	Callee	free		3964387	0					
ANR	3964642	Identifier	free		3964387	0					
ANR	3964643	ArgumentList	title		3964387	1					
ANR	3964644	Argument	title		3964387	0					
ANR	3964645	Identifier	title		3964387	0					
ANR	3964646	ReturnType	static void		3964387	1					
ANR	3964647	Identifier	goto_asmqjmps		3964387	2					
ANR	3964648	ParameterList	"RAGraph * g , RCore * core"		3964387	3					
ANR	3964649	Parameter	RAGraph * g	3911:26:99929:99938	3964387	0	True				
ANR	3964650	ParameterType	RAGraph *		3964387	0					
ANR	3964651	Identifier	g		3964387	1					
ANR	3964652	Parameter	RCore * core	3911:38:99941:99951	3964387	1	True				
ANR	3964653	ParameterType	RCore *		3964387	0					
ANR	3964654	Identifier	core		3964387	1					
ANR	3964655	CFGEntryNode	ENTRY		3964387		True				
ANR	3964656	CFGExitNode	EXIT		3964387		True				
ANR	3964657	Symbol	isalpha		3964387						
ANR	3964658	Symbol	& rows		3964387						
ANR	3964659	Symbol	r_cons_readchar		3964387						
ANR	3964660	Symbol	islower		3964387						
ANR	3964661	Symbol	Color_RESET		3964387						
ANR	3964662	Symbol	R_CORE_ASMQJMPS_LEN_LETTERS		3964387						
ANR	3964663	Symbol	* core		3964387						
ANR	3964664	Symbol	core -> offset		3964387						
ANR	3964665	Symbol	title		3964387						
ANR	3964666	Symbol	get_title		3964387						
ANR	3964667	Symbol	core -> io		3964387						
ANR	3964668	Symbol	r_agraph_get_node		3964387						
ANR	3964669	Symbol	obuf		3964387						
ANR	3964670	Symbol	addr_node		3964387						
ANR	3964671	Symbol	cont		3964387						
ANR	3964672	Symbol	addr		3964387						
ANR	3964673	Symbol	UT64_MAX		3964387						
ANR	3964674	Symbol	ch		3964387						
ANR	3964675	Symbol	g		3964387						
ANR	3964676	Symbol	h		3964387						
ANR	3964677	Symbol	i		3964387						
ANR	3964678	Symbol	r_core_get_asmqjmps		3964387						
ANR	3964679	Symbol	rows		3964387						
ANR	3964680	Symbol	core		3964387						
ANR	3964681	Symbol	* i		3964387						
ANR	3964682	Symbol	* obuf		3964387						
ANR	3964683	Symbol	true		3964387						
ANR	3964684	Function	seek_to_node	3949:0:100854:101181							
ANR	3964685	FunctionDef	"seek_to_node (RANode * n , RCore * core)"		3964684	0					
ANR	3964686	CompoundStatement		3949:49:100903:101181	3964684	0					
ANR	3964687	IdentifierDeclStatement	"ut64 off = r_core_anal_get_bbaddr ( core , core -> offset ) ;"	3950:1:100906:100960	3964684	0	True				
ANR	3964688	IdentifierDecl	"off = r_core_anal_get_bbaddr ( core , core -> offset )"		3964684	0					
ANR	3964689	IdentifierDeclType	ut64		3964684	0					
ANR	3964690	Identifier	off		3964684	1					
ANR	3964691	AssignmentExpression	"off = r_core_anal_get_bbaddr ( core , core -> offset )"		3964684	2		=			
ANR	3964692	Identifier	off		3964684	0					
ANR	3964693	CallExpression	"r_core_anal_get_bbaddr ( core , core -> offset )"		3964684	1					
ANR	3964694	Callee	r_core_anal_get_bbaddr		3964684	0					
ANR	3964695	Identifier	r_core_anal_get_bbaddr		3964684	0					
ANR	3964696	ArgumentList	core		3964684	1					
ANR	3964697	Argument	core		3964684	0					
ANR	3964698	Identifier	core		3964684	0					
ANR	3964699	Argument	core -> offset		3964684	1					
ANR	3964700	PtrMemberAccess	core -> offset		3964684	0					
ANR	3964701	Identifier	core		3964684	0					
ANR	3964702	Identifier	offset		3964684	1					
ANR	3964703	IdentifierDeclStatement	char * title = get_title ( off ) ;	3951:1:100963:100992	3964684	1	True				
ANR	3964704	IdentifierDecl	* title = get_title ( off )		3964684	0					
ANR	3964705	IdentifierDeclType	char *		3964684	0					
ANR	3964706	Identifier	title		3964684	1					
ANR	3964707	AssignmentExpression	* title = get_title ( off )		3964684	2		=			
ANR	3964708	Identifier	title		3964684	0					
ANR	3964709	CallExpression	get_title ( off )		3964684	1					
ANR	3964710	Callee	get_title		3964684	0					
ANR	3964711	Identifier	get_title		3964684	0					
ANR	3964712	ArgumentList	off		3964684	1					
ANR	3964713	Argument	off		3964684	0					
ANR	3964714	Identifier	off		3964684	0					
ANR	3964715	IfStatement	"if ( title && strcmp ( title , n -> title ) )"		3964684	2					
ANR	3964716	Condition	"title && strcmp ( title , n -> title )"	3953:5:101000:101032	3964684	0	True				
ANR	3964717	AndExpression	"title && strcmp ( title , n -> title )"		3964684	0		&&			
ANR	3964718	Identifier	title		3964684	0					
ANR	3964719	CallExpression	"strcmp ( title , n -> title )"		3964684	1					
ANR	3964720	Callee	strcmp		3964684	0					
ANR	3964721	Identifier	strcmp		3964684	0					
ANR	3964722	ArgumentList	title		3964684	1					
ANR	3964723	Argument	title		3964684	0					
ANR	3964724	Identifier	title		3964684	0					
ANR	3964725	Argument	n -> title		3964684	1					
ANR	3964726	PtrMemberAccess	n -> title		3964684	0					
ANR	3964727	Identifier	n		3964684	0					
ANR	3964728	Identifier	title		3964684	1					
ANR	3964729	CompoundStatement		6:2:135:176	3964684	1					
ANR	3964730	IdentifierDeclStatement	"char * cmd = r_str_newf ( ""s %s"" , n -> title ) ;"	3954:2:101039:101080	3964684	0	True				
ANR	3964731	IdentifierDecl	"* cmd = r_str_newf ( ""s %s"" , n -> title )"		3964684	0					
ANR	3964732	IdentifierDeclType	char *		3964684	0					
ANR	3964733	Identifier	cmd		3964684	1					
ANR	3964734	AssignmentExpression	"* cmd = r_str_newf ( ""s %s"" , n -> title )"		3964684	2		=			
ANR	3964735	Identifier	cmd		3964684	0					
ANR	3964736	CallExpression	"r_str_newf ( ""s %s"" , n -> title )"		3964684	1					
ANR	3964737	Callee	r_str_newf		3964684	0					
ANR	3964738	Identifier	r_str_newf		3964684	0					
ANR	3964739	ArgumentList	"""s %s"""		3964684	1					
ANR	3964740	Argument	"""s %s"""		3964684	0					
ANR	3964741	PrimaryExpression	"""s %s"""		3964684	0					
ANR	3964742	Argument	n -> title		3964684	1					
ANR	3964743	PtrMemberAccess	n -> title		3964684	0					
ANR	3964744	Identifier	n		3964684	0					
ANR	3964745	Identifier	title		3964684	1					
ANR	3964746	IfStatement	if ( cmd )		3964684	1					
ANR	3964747	Condition	cmd	3955:6:101088:101090	3964684	0	True				
ANR	3964748	Identifier	cmd		3964684	0					
ANR	3964749	CompoundStatement		7:11:189:189	3964684	1					
ANR	3964750	IfStatement	if ( * cmd )		3964684	0					
ANR	3964751	Condition	* cmd	3956:7:101102:101105	3964684	0	True				
ANR	3964752	UnaryOperationExpression	* cmd		3964684	0					
ANR	3964753	UnaryOperator	*		3964684	0					
ANR	3964754	Identifier	cmd		3964684	1					
ANR	3964755	CompoundStatement		8:13:204:204	3964684	1					
ANR	3964756	ExpressionStatement	"r_core_cmd0 ( core , cmd )"	3957:4:101114:101137	3964684	0	True				
ANR	3964757	CallExpression	"r_core_cmd0 ( core , cmd )"		3964684	0					
ANR	3964758	Callee	r_core_cmd0		3964684	0					
ANR	3964759	Identifier	r_core_cmd0		3964684	0					
ANR	3964760	ArgumentList	core		3964684	1					
ANR	3964761	Argument	core		3964684	0					
ANR	3964762	Identifier	core		3964684	0					
ANR	3964763	Argument	cmd		3964684	1					
ANR	3964764	Identifier	cmd		3964684	0					
ANR	3964765	ExpressionStatement	free ( cmd )	3959:3:101147:101157	3964684	1	True				
ANR	3964766	CallExpression	free ( cmd )		3964684	0					
ANR	3964767	Callee	free		3964684	0					
ANR	3964768	Identifier	free		3964684	0					
ANR	3964769	ArgumentList	cmd		3964684	1					
ANR	3964770	Argument	cmd		3964684	0					
ANR	3964771	Identifier	cmd		3964684	0					
ANR	3964772	ExpressionStatement	free ( title )	3962:1:101167:101179	3964684	3	True				
ANR	3964773	CallExpression	free ( title )		3964684	0					
ANR	3964774	Callee	free		3964684	0					
ANR	3964775	Identifier	free		3964684	0					
ANR	3964776	ArgumentList	title		3964684	1					
ANR	3964777	Argument	title		3964684	0					
ANR	3964778	Identifier	title		3964684	0					
ANR	3964779	ReturnType	static void		3964684	1					
ANR	3964780	Identifier	seek_to_node		3964684	2					
ANR	3964781	ParameterList	"RANode * n , RCore * core"		3964684	3					
ANR	3964782	Parameter	RANode * n	3949:25:100879:100887	3964684	0	True				
ANR	3964783	ParameterType	RANode *		3964684	0					
ANR	3964784	Identifier	n		3964684	1					
ANR	3964785	Parameter	RCore * core	3949:36:100890:100900	3964684	1	True				
ANR	3964786	ParameterType	RCore *		3964684	0					
ANR	3964787	Identifier	core		3964684	1					
ANR	3964788	CFGEntryNode	ENTRY		3964684		True				
ANR	3964789	CFGExitNode	EXIT		3964684		True				
ANR	3964790	Symbol	strcmp		3964684						
ANR	3964791	Symbol	* core		3964684						
ANR	3964792	Symbol	core -> offset		3964684						
ANR	3964793	Symbol	r_str_newf		3964684						
ANR	3964794	Symbol	title		3964684						
ANR	3964795	Symbol	get_title		3964684						
ANR	3964796	Symbol	n		3964684						
ANR	3964797	Symbol	off		3964684						
ANR	3964798	Symbol	core		3964684						
ANR	3964799	Symbol	r_core_anal_get_bbaddr		3964684						
ANR	3964800	Symbol	* n		3964684						
ANR	3964801	Symbol	n -> title		3964684						
ANR	3964802	Symbol	cmd		3964684						
ANR	3964803	Symbol	* cmd		3964684						
ANR	3964804	Function	graph_single_step_in	3965:0:101184:101662							
ANR	3964805	FunctionDef	"graph_single_step_in (RCore * core , RAGraph * g)"		3964804	0					
ANR	3964806	CompoundStatement		3965:58:101242:101662	3964804	0					
ANR	3964807	IfStatement	"if ( r_config_get_i ( core -> config , ""cfg.debug"" ) )"		3964804	0					
ANR	3964808	Condition	"r_config_get_i ( core -> config , ""cfg.debug"" )"	3966:5:101249:101290	3964804	0	True				
ANR	3964809	CallExpression	"r_config_get_i ( core -> config , ""cfg.debug"" )"		3964804	0					
ANR	3964810	Callee	r_config_get_i		3964804	0					
ANR	3964811	Identifier	r_config_get_i		3964804	0					
ANR	3964812	ArgumentList	core -> config		3964804	1					
ANR	3964813	Argument	core -> config		3964804	0					
ANR	3964814	PtrMemberAccess	core -> config		3964804	0					
ANR	3964815	Identifier	core		3964804	0					
ANR	3964816	Identifier	config		3964804	1					
ANR	3964817	Argument	"""cfg.debug"""		3964804	1					
ANR	3964818	PrimaryExpression	"""cfg.debug"""		3964804	0					
ANR	3964819	CompoundStatement		2:49:50:50	3964804	1					
ANR	3964820	IfStatement	if ( core -> print -> cur_enabled )		3964804	0					
ANR	3964821	Condition	core -> print -> cur_enabled	3967:6:101301:101324	3964804	0	True				
ANR	3964822	PtrMemberAccess	core -> print -> cur_enabled		3964804	0					
ANR	3964823	PtrMemberAccess	core -> print		3964804	0					
ANR	3964824	Identifier	core		3964804	0					
ANR	3964825	Identifier	print		3964804	1					
ANR	3964826	Identifier	cur_enabled		3964804	1					
ANR	3964827	CompoundStatement		3:32:84:84	3964804	1					
ANR	3964828	Statement	r_core_cmdf	3969:3:101349:101359	3964804	0	True				
ANR	3964829	Statement	(	3969:15:101361:101361	3964804	1	True				
ANR	3964830	Statement	core	3969:16:101362:101365	3964804	2	True				
ANR	3964831	Statement	","	3969:20:101366:101366	3964804	3	True				
ANR	3964832	Statement	"""dcu 0x%08"""	3969:22:101368:101378	3964804	4	True				
ANR	3964833	Statement	PFMT64x	3969:33:101379:101385	3964804	5	True				
ANR	3964834	Statement	","	3969:40:101386:101386	3964804	6	True				
ANR	3964835	Statement	core	3969:42:101388:101391	3964804	7	True				
ANR	3964836	Statement	->	3969:46:101392:101393	3964804	8	True				
ANR	3964837	Statement	offset	3969:48:101394:101399	3964804	9	True				
ANR	3964838	Statement	+	3969:55:101401:101401	3964804	10	True				
ANR	3964839	Statement	core	3969:57:101403:101406	3964804	11	True				
ANR	3964840	Statement	->	3969:61:101407:101408	3964804	12	True				
ANR	3964841	Statement	print	3969:63:101409:101413	3964804	13	True				
ANR	3964842	Statement	->	3969:68:101414:101415	3964804	14	True				
ANR	3964843	Statement	cur	3969:70:101416:101418	3964804	15	True				
ANR	3964844	Statement	)	3969:73:101419:101419	3964804	16	True				
ANR	3964845	ExpressionStatement		3969:74:101420:101420	3964804	17	True				
ANR	3964846	ExpressionStatement	core -> print -> cur_enabled = 0	3970:3:101425:101453	3964804	18	True				
ANR	3964847	AssignmentExpression	core -> print -> cur_enabled = 0		3964804	0		=			
ANR	3964848	PtrMemberAccess	core -> print -> cur_enabled		3964804	0					
ANR	3964849	PtrMemberAccess	core -> print		3964804	0					
ANR	3964850	Identifier	core		3964804	0					
ANR	3964851	Identifier	print		3964804	1					
ANR	3964852	Identifier	cur_enabled		3964804	1					
ANR	3964853	PrimaryExpression	0		3964804	1					
ANR	3964854	ElseStatement	else		3964804	0					
ANR	3964855	CompoundStatement		7:9:221:221	3964804	0					
ANR	3964856	ExpressionStatement	"r_core_cmd ( core , ""ds"" , 0 )"	3972:3:101469:101495	3964804	0	True				
ANR	3964857	CallExpression	"r_core_cmd ( core , ""ds"" , 0 )"		3964804	0					
ANR	3964858	Callee	r_core_cmd		3964804	0					
ANR	3964859	Identifier	r_core_cmd		3964804	0					
ANR	3964860	ArgumentList	core		3964804	1					
ANR	3964861	Argument	core		3964804	0					
ANR	3964862	Identifier	core		3964804	0					
ANR	3964863	Argument	"""ds"""		3964804	1					
ANR	3964864	PrimaryExpression	"""ds"""		3964804	0					
ANR	3964865	Argument	0		3964804	2					
ANR	3964866	PrimaryExpression	0		3964804	0					
ANR	3964867	ExpressionStatement	"r_core_cmd ( core , "".dr*"" , 0 )"	3973:3:101500:101528	3964804	1	True				
ANR	3964868	CallExpression	"r_core_cmd ( core , "".dr*"" , 0 )"		3964804	0					
ANR	3964869	Callee	r_core_cmd		3964804	0					
ANR	3964870	Identifier	r_core_cmd		3964804	0					
ANR	3964871	ArgumentList	core		3964804	1					
ANR	3964872	Argument	core		3964804	0					
ANR	3964873	Identifier	core		3964804	0					
ANR	3964874	Argument	""".dr*"""		3964804	1					
ANR	3964875	PrimaryExpression	""".dr*"""		3964804	0					
ANR	3964876	Argument	0		3964804	2					
ANR	3964877	PrimaryExpression	0		3964804	0					
ANR	3964878	ElseStatement	else		3964804	0					
ANR	3964879	CompoundStatement		11:8:299:299	3964804	0					
ANR	3964880	ExpressionStatement	"r_core_cmd ( core , ""aes"" , 0 )"	3976:2:101546:101573	3964804	0	True				
ANR	3964881	CallExpression	"r_core_cmd ( core , ""aes"" , 0 )"		3964804	0					
ANR	3964882	Callee	r_core_cmd		3964804	0					
ANR	3964883	Identifier	r_core_cmd		3964804	0					
ANR	3964884	ArgumentList	core		3964804	1					
ANR	3964885	Argument	core		3964804	0					
ANR	3964886	Identifier	core		3964804	0					
ANR	3964887	Argument	"""aes"""		3964804	1					
ANR	3964888	PrimaryExpression	"""aes"""		3964804	0					
ANR	3964889	Argument	0		3964804	2					
ANR	3964890	PrimaryExpression	0		3964804	0					
ANR	3964891	ExpressionStatement	"r_core_cmd ( core , "".ar*"" , 0 )"	3977:2:101577:101605	3964804	1	True				
ANR	3964892	CallExpression	"r_core_cmd ( core , "".ar*"" , 0 )"		3964804	0					
ANR	3964893	Callee	r_core_cmd		3964804	0					
ANR	3964894	Identifier	r_core_cmd		3964804	0					
ANR	3964895	ArgumentList	core		3964804	1					
ANR	3964896	Argument	core		3964804	0					
ANR	3964897	Identifier	core		3964804	0					
ANR	3964898	Argument	""".ar*"""		3964804	1					
ANR	3964899	PrimaryExpression	""".ar*"""		3964804	0					
ANR	3964900	Argument	0		3964804	2					
ANR	3964901	PrimaryExpression	0		3964804	0					
ANR	3964902	ExpressionStatement	g -> is_instep = true	3979:1:101611:101630	3964804	1	True				
ANR	3964903	AssignmentExpression	g -> is_instep = true		3964804	0		=			
ANR	3964904	PtrMemberAccess	g -> is_instep		3964804	0					
ANR	3964905	Identifier	g		3964804	0					
ANR	3964906	Identifier	is_instep		3964804	1					
ANR	3964907	Identifier	true		3964804	1					
ANR	3964908	ExpressionStatement	g -> need_reload_nodes = true	3980:1:101633:101660	3964804	2	True				
ANR	3964909	AssignmentExpression	g -> need_reload_nodes = true		3964804	0		=			
ANR	3964910	PtrMemberAccess	g -> need_reload_nodes		3964804	0					
ANR	3964911	Identifier	g		3964804	0					
ANR	3964912	Identifier	need_reload_nodes		3964804	1					
ANR	3964913	Identifier	true		3964804	1					
ANR	3964914	ReturnType	static void		3964804	1					
ANR	3964915	Identifier	graph_single_step_in		3964804	2					
ANR	3964916	ParameterList	"RCore * core , RAGraph * g"		3964804	3					
ANR	3964917	Parameter	RCore * core	3965:33:101217:101227	3964804	0	True				
ANR	3964918	ParameterType	RCore *		3964804	0					
ANR	3964919	Identifier	core		3964804	1					
ANR	3964920	Parameter	RAGraph * g	3965:46:101230:101239	3964804	1	True				
ANR	3964921	ParameterType	RAGraph *		3964804	0					
ANR	3964922	Identifier	g		3964804	1					
ANR	3964923	CFGEntryNode	ENTRY		3964804		True				
ANR	3964924	CFGExitNode	EXIT		3964804		True				
ANR	3964925	Symbol	core -> config		3964804						
ANR	3964926	Symbol	g -> need_reload_nodes		3964804						
ANR	3964927	Symbol	g		3964804						
ANR	3964928	Symbol	* core		3964804						
ANR	3964929	Symbol	core		3964804						
ANR	3964930	Symbol	* g		3964804						
ANR	3964931	Symbol	* core -> print		3964804						
ANR	3964932	Symbol	g -> is_instep		3964804						
ANR	3964933	Symbol	r_config_get_i		3964804						
ANR	3964934	Symbol	true		3964804						
ANR	3964935	Symbol	core -> print		3964804						
ANR	3964936	Symbol	core -> print -> cur_enabled		3964804						
ANR	3964937	Symbol	* * core		3964804						
ANR	3964938	Function	graph_single_step_over	3983:0:101665:102086							
ANR	3964939	FunctionDef	"graph_single_step_over (RCore * core , RAGraph * g)"		3964938	0					
ANR	3964940	CompoundStatement		3983:60:101725:102086	3964938	0					
ANR	3964941	IfStatement	"if ( r_config_get_i ( core -> config , ""cfg.debug"" ) )"		3964938	0					
ANR	3964942	Condition	"r_config_get_i ( core -> config , ""cfg.debug"" )"	3984:5:101732:101773	3964938	0	True				
ANR	3964943	CallExpression	"r_config_get_i ( core -> config , ""cfg.debug"" )"		3964938	0					
ANR	3964944	Callee	r_config_get_i		3964938	0					
ANR	3964945	Identifier	r_config_get_i		3964938	0					
ANR	3964946	ArgumentList	core -> config		3964938	1					
ANR	3964947	Argument	core -> config		3964938	0					
ANR	3964948	PtrMemberAccess	core -> config		3964938	0					
ANR	3964949	Identifier	core		3964938	0					
ANR	3964950	Identifier	config		3964938	1					
ANR	3964951	Argument	"""cfg.debug"""		3964938	1					
ANR	3964952	PrimaryExpression	"""cfg.debug"""		3964938	0					
ANR	3964953	CompoundStatement		2:49:50:50	3964938	1					
ANR	3964954	IfStatement	if ( core -> print -> cur_enabled )		3964938	0					
ANR	3964955	Condition	core -> print -> cur_enabled	3985:6:101784:101807	3964938	0	True				
ANR	3964956	PtrMemberAccess	core -> print -> cur_enabled		3964938	0					
ANR	3964957	PtrMemberAccess	core -> print		3964938	0					
ANR	3964958	Identifier	core		3964938	0					
ANR	3964959	Identifier	print		3964938	1					
ANR	3964960	Identifier	cur_enabled		3964938	1					
ANR	3964961	CompoundStatement		3:32:84:84	3964938	1					
ANR	3964962	ExpressionStatement	"r_core_cmd ( core , ""dcr"" , 0 )"	3986:3:101815:101842	3964938	0	True				
ANR	3964963	CallExpression	"r_core_cmd ( core , ""dcr"" , 0 )"		3964938	0					
ANR	3964964	Callee	r_core_cmd		3964938	0					
ANR	3964965	Identifier	r_core_cmd		3964938	0					
ANR	3964966	ArgumentList	core		3964938	1					
ANR	3964967	Argument	core		3964938	0					
ANR	3964968	Identifier	core		3964938	0					
ANR	3964969	Argument	"""dcr"""		3964938	1					
ANR	3964970	PrimaryExpression	"""dcr"""		3964938	0					
ANR	3964971	Argument	0		3964938	2					
ANR	3964972	PrimaryExpression	0		3964938	0					
ANR	3964973	ExpressionStatement	core -> print -> cur_enabled = 0	3987:3:101847:101875	3964938	1	True				
ANR	3964974	AssignmentExpression	core -> print -> cur_enabled = 0		3964938	0		=			
ANR	3964975	PtrMemberAccess	core -> print -> cur_enabled		3964938	0					
ANR	3964976	PtrMemberAccess	core -> print		3964938	0					
ANR	3964977	Identifier	core		3964938	0					
ANR	3964978	Identifier	print		3964938	1					
ANR	3964979	Identifier	cur_enabled		3964938	1					
ANR	3964980	PrimaryExpression	0		3964938	1					
ANR	3964981	ElseStatement	else		3964938	0					
ANR	3964982	CompoundStatement		6:9:160:160	3964938	0					
ANR	3964983	ExpressionStatement	"r_core_cmd ( core , ""dso"" , 0 )"	3989:3:101891:101918	3964938	0	True				
ANR	3964984	CallExpression	"r_core_cmd ( core , ""dso"" , 0 )"		3964938	0					
ANR	3964985	Callee	r_core_cmd		3964938	0					
ANR	3964986	Identifier	r_core_cmd		3964938	0					
ANR	3964987	ArgumentList	core		3964938	1					
ANR	3964988	Argument	core		3964938	0					
ANR	3964989	Identifier	core		3964938	0					
ANR	3964990	Argument	"""dso"""		3964938	1					
ANR	3964991	PrimaryExpression	"""dso"""		3964938	0					
ANR	3964992	Argument	0		3964938	2					
ANR	3964993	PrimaryExpression	0		3964938	0					
ANR	3964994	ExpressionStatement	"r_core_cmd ( core , "".dr*"" , 0 )"	3990:3:101923:101951	3964938	1	True				
ANR	3964995	CallExpression	"r_core_cmd ( core , "".dr*"" , 0 )"		3964938	0					
ANR	3964996	Callee	r_core_cmd		3964938	0					
ANR	3964997	Identifier	r_core_cmd		3964938	0					
ANR	3964998	ArgumentList	core		3964938	1					
ANR	3964999	Argument	core		3964938	0					
ANR	3965000	Identifier	core		3964938	0					
ANR	3965001	Argument	""".dr*"""		3964938	1					
ANR	3965002	PrimaryExpression	""".dr*"""		3964938	0					
ANR	3965003	Argument	0		3964938	2					
ANR	3965004	PrimaryExpression	0		3964938	0					
ANR	3965005	ElseStatement	else		3964938	0					
ANR	3965006	CompoundStatement		10:8:239:239	3964938	0					
ANR	3965007	ExpressionStatement	"r_core_cmd ( core , ""aeso"" , 0 )"	3993:2:101969:101997	3964938	0	True				
ANR	3965008	CallExpression	"r_core_cmd ( core , ""aeso"" , 0 )"		3964938	0					
ANR	3965009	Callee	r_core_cmd		3964938	0					
ANR	3965010	Identifier	r_core_cmd		3964938	0					
ANR	3965011	ArgumentList	core		3964938	1					
ANR	3965012	Argument	core		3964938	0					
ANR	3965013	Identifier	core		3964938	0					
ANR	3965014	Argument	"""aeso"""		3964938	1					
ANR	3965015	PrimaryExpression	"""aeso"""		3964938	0					
ANR	3965016	Argument	0		3964938	2					
ANR	3965017	PrimaryExpression	0		3964938	0					
ANR	3965018	ExpressionStatement	"r_core_cmd ( core , "".ar*"" , 0 )"	3994:2:102001:102029	3964938	1	True				
ANR	3965019	CallExpression	"r_core_cmd ( core , "".ar*"" , 0 )"		3964938	0					
ANR	3965020	Callee	r_core_cmd		3964938	0					
ANR	3965021	Identifier	r_core_cmd		3964938	0					
ANR	3965022	ArgumentList	core		3964938	1					
ANR	3965023	Argument	core		3964938	0					
ANR	3965024	Identifier	core		3964938	0					
ANR	3965025	Argument	""".ar*"""		3964938	1					
ANR	3965026	PrimaryExpression	""".ar*"""		3964938	0					
ANR	3965027	Argument	0		3964938	2					
ANR	3965028	PrimaryExpression	0		3964938	0					
ANR	3965029	ExpressionStatement	g -> is_instep = true	3996:1:102035:102054	3964938	1	True				
ANR	3965030	AssignmentExpression	g -> is_instep = true		3964938	0		=			
ANR	3965031	PtrMemberAccess	g -> is_instep		3964938	0					
ANR	3965032	Identifier	g		3964938	0					
ANR	3965033	Identifier	is_instep		3964938	1					
ANR	3965034	Identifier	true		3964938	1					
ANR	3965035	ExpressionStatement	g -> need_reload_nodes = true	3997:1:102057:102084	3964938	2	True				
ANR	3965036	AssignmentExpression	g -> need_reload_nodes = true		3964938	0		=			
ANR	3965037	PtrMemberAccess	g -> need_reload_nodes		3964938	0					
ANR	3965038	Identifier	g		3964938	0					
ANR	3965039	Identifier	need_reload_nodes		3964938	1					
ANR	3965040	Identifier	true		3964938	1					
ANR	3965041	ReturnType	static void		3964938	1					
ANR	3965042	Identifier	graph_single_step_over		3964938	2					
ANR	3965043	ParameterList	"RCore * core , RAGraph * g"		3964938	3					
ANR	3965044	Parameter	RCore * core	3983:35:101700:101710	3964938	0	True				
ANR	3965045	ParameterType	RCore *		3964938	0					
ANR	3965046	Identifier	core		3964938	1					
ANR	3965047	Parameter	RAGraph * g	3983:48:101713:101722	3964938	1	True				
ANR	3965048	ParameterType	RAGraph *		3964938	0					
ANR	3965049	Identifier	g		3964938	1					
ANR	3965050	CFGEntryNode	ENTRY		3964938		True				
ANR	3965051	CFGExitNode	EXIT		3964938		True				
ANR	3965052	Symbol	core -> config		3964938						
ANR	3965053	Symbol	g -> need_reload_nodes		3964938						
ANR	3965054	Symbol	g		3964938						
ANR	3965055	Symbol	* core		3964938						
ANR	3965056	Symbol	core		3964938						
ANR	3965057	Symbol	* g		3964938						
ANR	3965058	Symbol	* core -> print		3964938						
ANR	3965059	Symbol	g -> is_instep		3964938						
ANR	3965060	Symbol	r_config_get_i		3964938						
ANR	3965061	Symbol	true		3964938						
ANR	3965062	Symbol	core -> print		3964938						
ANR	3965063	Symbol	* * core		3964938						
ANR	3965064	Symbol	core -> print -> cur_enabled		3964938						
ANR	3965065	Function	graph_breakpoint	4000:0:102089:102166							
ANR	3965066	FunctionDef	graph_breakpoint (RCore * core)		3965065	0					
ANR	3965067	CompoundStatement		4000:42:102131:102166	3965065	0					
ANR	3965068	ExpressionStatement	"r_core_cmd ( core , ""dbs $$"" , 0 )"	4001:1:102134:102164	3965065	0	True				
ANR	3965069	CallExpression	"r_core_cmd ( core , ""dbs $$"" , 0 )"		3965065	0					
ANR	3965070	Callee	r_core_cmd		3965065	0					
ANR	3965071	Identifier	r_core_cmd		3965065	0					
ANR	3965072	ArgumentList	core		3965065	1					
ANR	3965073	Argument	core		3965065	0					
ANR	3965074	Identifier	core		3965065	0					
ANR	3965075	Argument	"""dbs $$"""		3965065	1					
ANR	3965076	PrimaryExpression	"""dbs $$"""		3965065	0					
ANR	3965077	Argument	0		3965065	2					
ANR	3965078	PrimaryExpression	0		3965065	0					
ANR	3965079	ReturnType	static void		3965065	1					
ANR	3965080	Identifier	graph_breakpoint		3965065	2					
ANR	3965081	ParameterList	RCore * core		3965065	3					
ANR	3965082	Parameter	RCore * core	4000:29:102118:102128	3965065	0	True				
ANR	3965083	ParameterType	RCore *		3965065	0					
ANR	3965084	Identifier	core		3965065	1					
ANR	3965085	CFGEntryNode	ENTRY		3965065		True				
ANR	3965086	CFGExitNode	EXIT		3965065		True				
ANR	3965087	Symbol	core		3965065						
ANR	3965088	Function	graph_continue	4004:0:102169:102240							
ANR	3965089	FunctionDef	graph_continue (RCore * core)		3965088	0					
ANR	3965090	CompoundStatement		4004:40:102209:102240	3965088	0					
ANR	3965091	ExpressionStatement	"r_core_cmd ( core , ""dc"" , 0 )"	4005:1:102212:102238	3965088	0	True				
ANR	3965092	CallExpression	"r_core_cmd ( core , ""dc"" , 0 )"		3965088	0					
ANR	3965093	Callee	r_core_cmd		3965088	0					
ANR	3965094	Identifier	r_core_cmd		3965088	0					
ANR	3965095	ArgumentList	core		3965088	1					
ANR	3965096	Argument	core		3965088	0					
ANR	3965097	Identifier	core		3965088	0					
ANR	3965098	Argument	"""dc"""		3965088	1					
ANR	3965099	PrimaryExpression	"""dc"""		3965088	0					
ANR	3965100	Argument	0		3965088	2					
ANR	3965101	PrimaryExpression	0		3965088	0					
ANR	3965102	ReturnType	static void		3965088	1					
ANR	3965103	Identifier	graph_continue		3965088	2					
ANR	3965104	ParameterList	RCore * core		3965088	3					
ANR	3965105	Parameter	RCore * core	4004:27:102196:102206	3965088	0	True				
ANR	3965106	ParameterType	RCore *		3965088	0					
ANR	3965107	Identifier	core		3965088	1					
ANR	3965108	CFGEntryNode	ENTRY		3965088		True				
ANR	3965109	CFGExitNode	EXIT		3965088		True				
ANR	3965110	Symbol	core		3965088						
ANR	3965111	Function	applyDisMode	4007:0:102242:102675							
ANR	3965112	FunctionDef	applyDisMode (RCore * core)		3965111	0					
ANR	3965113	CompoundStatement		4007:38:102280:102675	3965111	0					
ANR	3965114	SwitchStatement	switch ( disMode )		3965111	0					
ANR	3965115	Condition	disMode	4008:9:102291:102297	3965111	0	True				
ANR	3965116	Identifier	disMode		3965111	0					
ANR	3965117	CompoundStatement		2:18:19:19	3965111	1					
ANR	3965118	Label	case 0 :	4009:1:102303:102309	3965111	0	True				
ANR	3965119	ExpressionStatement	"r_config_set ( core -> config , ""asm.pseudo"" , ""false"" )"	4010:2:102313:102363	3965111	1	True				
ANR	3965120	CallExpression	"r_config_set ( core -> config , ""asm.pseudo"" , ""false"" )"		3965111	0					
ANR	3965121	Callee	r_config_set		3965111	0					
ANR	3965122	Identifier	r_config_set		3965111	0					
ANR	3965123	ArgumentList	core -> config		3965111	1					
ANR	3965124	Argument	core -> config		3965111	0					
ANR	3965125	PtrMemberAccess	core -> config		3965111	0					
ANR	3965126	Identifier	core		3965111	0					
ANR	3965127	Identifier	config		3965111	1					
ANR	3965128	Argument	"""asm.pseudo"""		3965111	1					
ANR	3965129	PrimaryExpression	"""asm.pseudo"""		3965111	0					
ANR	3965130	Argument	"""false"""		3965111	2					
ANR	3965131	PrimaryExpression	"""false"""		3965111	0					
ANR	3965132	ExpressionStatement	"r_config_set ( core -> config , ""asm.esil"" , ""false"" )"	4011:2:102367:102415	3965111	2	True				
ANR	3965133	CallExpression	"r_config_set ( core -> config , ""asm.esil"" , ""false"" )"		3965111	0					
ANR	3965134	Callee	r_config_set		3965111	0					
ANR	3965135	Identifier	r_config_set		3965111	0					
ANR	3965136	ArgumentList	core -> config		3965111	1					
ANR	3965137	Argument	core -> config		3965111	0					
ANR	3965138	PtrMemberAccess	core -> config		3965111	0					
ANR	3965139	Identifier	core		3965111	0					
ANR	3965140	Identifier	config		3965111	1					
ANR	3965141	Argument	"""asm.esil"""		3965111	1					
ANR	3965142	PrimaryExpression	"""asm.esil"""		3965111	0					
ANR	3965143	Argument	"""false"""		3965111	2					
ANR	3965144	PrimaryExpression	"""false"""		3965111	0					
ANR	3965145	BreakStatement	break ;	4012:2:102419:102424	3965111	3	True				
ANR	3965146	Label	case 1 :	4013:1:102427:102433	3965111	4	True				
ANR	3965147	ExpressionStatement	"r_config_set ( core -> config , ""asm.pseudo"" , ""true"" )"	4014:2:102437:102486	3965111	5	True				
ANR	3965148	CallExpression	"r_config_set ( core -> config , ""asm.pseudo"" , ""true"" )"		3965111	0					
ANR	3965149	Callee	r_config_set		3965111	0					
ANR	3965150	Identifier	r_config_set		3965111	0					
ANR	3965151	ArgumentList	core -> config		3965111	1					
ANR	3965152	Argument	core -> config		3965111	0					
ANR	3965153	PtrMemberAccess	core -> config		3965111	0					
ANR	3965154	Identifier	core		3965111	0					
ANR	3965155	Identifier	config		3965111	1					
ANR	3965156	Argument	"""asm.pseudo"""		3965111	1					
ANR	3965157	PrimaryExpression	"""asm.pseudo"""		3965111	0					
ANR	3965158	Argument	"""true"""		3965111	2					
ANR	3965159	PrimaryExpression	"""true"""		3965111	0					
ANR	3965160	ExpressionStatement	"r_config_set ( core -> config , ""asm.esil"" , ""false"" )"	4015:2:102490:102538	3965111	6	True				
ANR	3965161	CallExpression	"r_config_set ( core -> config , ""asm.esil"" , ""false"" )"		3965111	0					
ANR	3965162	Callee	r_config_set		3965111	0					
ANR	3965163	Identifier	r_config_set		3965111	0					
ANR	3965164	ArgumentList	core -> config		3965111	1					
ANR	3965165	Argument	core -> config		3965111	0					
ANR	3965166	PtrMemberAccess	core -> config		3965111	0					
ANR	3965167	Identifier	core		3965111	0					
ANR	3965168	Identifier	config		3965111	1					
ANR	3965169	Argument	"""asm.esil"""		3965111	1					
ANR	3965170	PrimaryExpression	"""asm.esil"""		3965111	0					
ANR	3965171	Argument	"""false"""		3965111	2					
ANR	3965172	PrimaryExpression	"""false"""		3965111	0					
ANR	3965173	BreakStatement	break ;	4016:2:102542:102547	3965111	7	True				
ANR	3965174	Label	case 2 :	4017:1:102550:102556	3965111	8	True				
ANR	3965175	ExpressionStatement	"r_config_set ( core -> config , ""asm.pseudo"" , ""false"" )"	4018:2:102560:102610	3965111	9	True				
ANR	3965176	CallExpression	"r_config_set ( core -> config , ""asm.pseudo"" , ""false"" )"		3965111	0					
ANR	3965177	Callee	r_config_set		3965111	0					
ANR	3965178	Identifier	r_config_set		3965111	0					
ANR	3965179	ArgumentList	core -> config		3965111	1					
ANR	3965180	Argument	core -> config		3965111	0					
ANR	3965181	PtrMemberAccess	core -> config		3965111	0					
ANR	3965182	Identifier	core		3965111	0					
ANR	3965183	Identifier	config		3965111	1					
ANR	3965184	Argument	"""asm.pseudo"""		3965111	1					
ANR	3965185	PrimaryExpression	"""asm.pseudo"""		3965111	0					
ANR	3965186	Argument	"""false"""		3965111	2					
ANR	3965187	PrimaryExpression	"""false"""		3965111	0					
ANR	3965188	ExpressionStatement	"r_config_set ( core -> config , ""asm.esil"" , ""true"" )"	4019:2:102614:102661	3965111	10	True				
ANR	3965189	CallExpression	"r_config_set ( core -> config , ""asm.esil"" , ""true"" )"		3965111	0					
ANR	3965190	Callee	r_config_set		3965111	0					
ANR	3965191	Identifier	r_config_set		3965111	0					
ANR	3965192	ArgumentList	core -> config		3965111	1					
ANR	3965193	Argument	core -> config		3965111	0					
ANR	3965194	PtrMemberAccess	core -> config		3965111	0					
ANR	3965195	Identifier	core		3965111	0					
ANR	3965196	Identifier	config		3965111	1					
ANR	3965197	Argument	"""asm.esil"""		3965111	1					
ANR	3965198	PrimaryExpression	"""asm.esil"""		3965111	0					
ANR	3965199	Argument	"""true"""		3965111	2					
ANR	3965200	PrimaryExpression	"""true"""		3965111	0					
ANR	3965201	BreakStatement	break ;	4020:2:102665:102670	3965111	11	True				
ANR	3965202	ReturnType	static void		3965111	1					
ANR	3965203	Identifier	applyDisMode		3965111	2					
ANR	3965204	ParameterList	RCore * core		3965111	3					
ANR	3965205	Parameter	RCore * core	4007:25:102267:102277	3965111	0	True				
ANR	3965206	ParameterType	RCore *		3965111	0					
ANR	3965207	Identifier	core		3965111	1					
ANR	3965208	CFGEntryNode	ENTRY		3965111		True				
ANR	3965209	CFGExitNode	EXIT		3965111		True				
ANR	3965210	Symbol	core -> config		3965111						
ANR	3965211	Symbol	core		3965111						
ANR	3965212	Symbol	disMode		3965111						
ANR	3965213	Symbol	* core		3965111						
ANR	3965214	Function	rotateColor	4024:0:102678:102862							
ANR	3965215	FunctionDef	rotateColor (RCore * core)		3965214	0					
ANR	3965216	CompoundStatement		4024:37:102715:102862	3965214	0					
ANR	3965217	IdentifierDeclStatement	"int color = r_config_get_i ( core -> config , ""scr.color"" ) ;"	4025:1:102718:102772	3965214	0	True				
ANR	3965218	IdentifierDecl	"color = r_config_get_i ( core -> config , ""scr.color"" )"		3965214	0					
ANR	3965219	IdentifierDeclType	int		3965214	0					
ANR	3965220	Identifier	color		3965214	1					
ANR	3965221	AssignmentExpression	"color = r_config_get_i ( core -> config , ""scr.color"" )"		3965214	2		=			
ANR	3965222	Identifier	color		3965214	0					
ANR	3965223	CallExpression	"r_config_get_i ( core -> config , ""scr.color"" )"		3965214	1					
ANR	3965224	Callee	r_config_get_i		3965214	0					
ANR	3965225	Identifier	r_config_get_i		3965214	0					
ANR	3965226	ArgumentList	core -> config		3965214	1					
ANR	3965227	Argument	core -> config		3965214	0					
ANR	3965228	PtrMemberAccess	core -> config		3965214	0					
ANR	3965229	Identifier	core		3965214	0					
ANR	3965230	Identifier	config		3965214	1					
ANR	3965231	Argument	"""scr.color"""		3965214	1					
ANR	3965232	PrimaryExpression	"""scr.color"""		3965214	0					
ANR	3965233	IfStatement	if ( ++ color > 2 )		3965214	1					
ANR	3965234	Condition	++ color > 2	4026:5:102779:102789	3965214	0	True				
ANR	3965235	RelationalExpression	++ color > 2		3965214	0		>			
ANR	3965236	UnaryExpression	++ color		3965214	0					
ANR	3965237	IncDec	++		3965214	0					
ANR	3965238	Identifier	color		3965214	1					
ANR	3965239	PrimaryExpression	2		3965214	1					
ANR	3965240	CompoundStatement		3:18:76:76	3965214	1					
ANR	3965241	ExpressionStatement	color = 0	4027:2:102796:102805	3965214	0	True				
ANR	3965242	AssignmentExpression	color = 0		3965214	0		=			
ANR	3965243	Identifier	color		3965214	0					
ANR	3965244	PrimaryExpression	0		3965214	1					
ANR	3965245	ExpressionStatement	"r_config_set_i ( core -> config , ""scr.color"" , color )"	4029:1:102811:102860	3965214	2	True				
ANR	3965246	CallExpression	"r_config_set_i ( core -> config , ""scr.color"" , color )"		3965214	0					
ANR	3965247	Callee	r_config_set_i		3965214	0					
ANR	3965248	Identifier	r_config_set_i		3965214	0					
ANR	3965249	ArgumentList	core -> config		3965214	1					
ANR	3965250	Argument	core -> config		3965214	0					
ANR	3965251	PtrMemberAccess	core -> config		3965214	0					
ANR	3965252	Identifier	core		3965214	0					
ANR	3965253	Identifier	config		3965214	1					
ANR	3965254	Argument	"""scr.color"""		3965214	1					
ANR	3965255	PrimaryExpression	"""scr.color"""		3965214	0					
ANR	3965256	Argument	color		3965214	2					
ANR	3965257	Identifier	color		3965214	0					
ANR	3965258	ReturnType	static void		3965214	1					
ANR	3965259	Identifier	rotateColor		3965214	2					
ANR	3965260	ParameterList	RCore * core		3965214	3					
ANR	3965261	Parameter	RCore * core	4024:24:102702:102712	3965214	0	True				
ANR	3965262	ParameterType	RCore *		3965214	0					
ANR	3965263	Identifier	core		3965214	1					
ANR	3965264	CFGEntryNode	ENTRY		3965214		True				
ANR	3965265	CFGExitNode	EXIT		3965214		True				
ANR	3965266	Symbol	core -> config		3965214						
ANR	3965267	Symbol	core		3965214						
ANR	3965268	Symbol	color		3965214						
ANR	3965269	Symbol	r_config_get_i		3965214						
ANR	3965270	Symbol	* core		3965214						
ANR	3965271	Function	toggle_bb	4033:0:102885:103205							
ANR	3965272	FunctionDef	"toggle_bb (RCore * core , ut64 addr)"		3965271	0					
ANR	3965273	CompoundStatement		4033:46:102931:103205	3965271	0					
ANR	3965274	IdentifierDeclStatement	"RAnalFunction * fcn = r_anal_get_fcn_in ( core -> anal , addr , R_ANAL_FCN_TYPE_NULL ) ;"	4034:1:102934:103013	3965271	0	True				
ANR	3965275	IdentifierDecl	"* fcn = r_anal_get_fcn_in ( core -> anal , addr , R_ANAL_FCN_TYPE_NULL )"		3965271	0					
ANR	3965276	IdentifierDeclType	RAnalFunction *		3965271	0					
ANR	3965277	Identifier	fcn		3965271	1					
ANR	3965278	AssignmentExpression	"* fcn = r_anal_get_fcn_in ( core -> anal , addr , R_ANAL_FCN_TYPE_NULL )"		3965271	2		=			
ANR	3965279	Identifier	fcn		3965271	0					
ANR	3965280	CallExpression	"r_anal_get_fcn_in ( core -> anal , addr , R_ANAL_FCN_TYPE_NULL )"		3965271	1					
ANR	3965281	Callee	r_anal_get_fcn_in		3965271	0					
ANR	3965282	Identifier	r_anal_get_fcn_in		3965271	0					
ANR	3965283	ArgumentList	core -> anal		3965271	1					
ANR	3965284	Argument	core -> anal		3965271	0					
ANR	3965285	PtrMemberAccess	core -> anal		3965271	0					
ANR	3965286	Identifier	core		3965271	0					
ANR	3965287	Identifier	anal		3965271	1					
ANR	3965288	Argument	addr		3965271	1					
ANR	3965289	Identifier	addr		3965271	0					
ANR	3965290	Argument	R_ANAL_FCN_TYPE_NULL		3965271	2					
ANR	3965291	Identifier	R_ANAL_FCN_TYPE_NULL		3965271	0					
ANR	3965292	IfStatement	if ( fcn )		3965271	1					
ANR	3965293	Condition	fcn	4035:5:103020:103022	3965271	0	True				
ANR	3965294	Identifier	fcn		3965271	0					
ANR	3965295	CompoundStatement		4:2:97:157	3965271	1					
ANR	3965296	IdentifierDeclStatement	"RAnalBlock * bb = r_anal_fcn_bbget_in ( core -> anal , fcn , addr ) ;"	4036:2:103029:103089	3965271	0	True				
ANR	3965297	IdentifierDecl	"* bb = r_anal_fcn_bbget_in ( core -> anal , fcn , addr )"		3965271	0					
ANR	3965298	IdentifierDeclType	RAnalBlock *		3965271	0					
ANR	3965299	Identifier	bb		3965271	1					
ANR	3965300	AssignmentExpression	"* bb = r_anal_fcn_bbget_in ( core -> anal , fcn , addr )"		3965271	2		=			
ANR	3965301	Identifier	bb		3965271	0					
ANR	3965302	CallExpression	"r_anal_fcn_bbget_in ( core -> anal , fcn , addr )"		3965271	1					
ANR	3965303	Callee	r_anal_fcn_bbget_in		3965271	0					
ANR	3965304	Identifier	r_anal_fcn_bbget_in		3965271	0					
ANR	3965305	ArgumentList	core -> anal		3965271	1					
ANR	3965306	Argument	core -> anal		3965271	0					
ANR	3965307	PtrMemberAccess	core -> anal		3965271	0					
ANR	3965308	Identifier	core		3965271	0					
ANR	3965309	Identifier	anal		3965271	1					
ANR	3965310	Argument	fcn		3965271	1					
ANR	3965311	Identifier	fcn		3965271	0					
ANR	3965312	Argument	addr		3965271	2					
ANR	3965313	Identifier	addr		3965271	0					
ANR	3965314	IfStatement	if ( bb )		3965271	1					
ANR	3965315	Condition	bb	4037:6:103097:103098	3965271	0	True				
ANR	3965316	Identifier	bb		3965271	0					
ANR	3965317	CompoundStatement		5:10:169:169	3965271	1					
ANR	3965318	ExpressionStatement	bb -> folded = ! bb -> folded	4038:3:103106:103130	3965271	0	True				
ANR	3965319	AssignmentExpression	bb -> folded = ! bb -> folded		3965271	0		=			
ANR	3965320	PtrMemberAccess	bb -> folded		3965271	0					
ANR	3965321	Identifier	bb		3965271	0					
ANR	3965322	Identifier	folded		3965271	1					
ANR	3965323	UnaryOperationExpression	! bb -> folded		3965271	1					
ANR	3965324	UnaryOperator	!		3965271	0					
ANR	3965325	PtrMemberAccess	bb -> folded		3965271	1					
ANR	3965326	Identifier	bb		3965271	0					
ANR	3965327	Identifier	folded		3965271	1					
ANR	3965328	ElseStatement	else		3965271	0					
ANR	3965329	CompoundStatement		7:9:209:209	3965271	0					
ANR	3965330	ExpressionStatement	r_warn_if_reached ( )	4040:3:103146:103166	3965271	0	True				
ANR	3965331	CallExpression	r_warn_if_reached ( )		3965271	0					
ANR	3965332	Callee	r_warn_if_reached		3965271	0					
ANR	3965333	Identifier	r_warn_if_reached		3965271	0					
ANR	3965334	ArgumentList			3965271	1					
ANR	3965335	ReturnStatement	return true ;	4042:2:103174:103185	3965271	2	True				
ANR	3965336	Identifier	true		3965271	0					
ANR	3965337	ReturnStatement	return false ;	4044:1:103191:103203	3965271	2	True				
ANR	3965338	Identifier	false		3965271	0					
ANR	3965339	ReturnType	static bool		3965271	1					
ANR	3965340	Identifier	toggle_bb		3965271	2					
ANR	3965341	ParameterList	"RCore * core , ut64 addr"		3965271	3					
ANR	3965342	Parameter	RCore * core	4033:22:102907:102917	3965271	0	True				
ANR	3965343	ParameterType	RCore *		3965271	0					
ANR	3965344	Identifier	core		3965271	1					
ANR	3965345	Parameter	ut64 addr	4033:35:102920:102928	3965271	1	True				
ANR	3965346	ParameterType	ut64		3965271	0					
ANR	3965347	Identifier	addr		3965271	1					
ANR	3965348	CFGEntryNode	ENTRY		3965271		True				
ANR	3965349	CFGExitNode	EXIT		3965271		True				
ANR	3965350	Symbol	bb		3965271						
ANR	3965351	Symbol	R_ANAL_FCN_TYPE_NULL		3965271						
ANR	3965352	Symbol	* bb		3965271						
ANR	3965353	Symbol	* core		3965271						
ANR	3965354	Symbol	false		3965271						
ANR	3965355	Symbol	core -> anal		3965271						
ANR	3965356	Symbol	fcn		3965271						
ANR	3965357	Symbol	core		3965271						
ANR	3965358	Symbol	r_anal_get_fcn_in		3965271						
ANR	3965359	Symbol	true		3965271						
ANR	3965360	Symbol	addr		3965271						
ANR	3965361	Symbol	r_anal_fcn_bbget_in		3965271						
ANR	3965362	Symbol	bb -> folded		3965271						
ANR	3965363	Function	r_core_visual_graph	4047:0:103208:124552							
ANR	3965364	FunctionDef	"r_core_visual_graph (RCore * core , RAGraph * g , RAnalFunction * _fcn , int is_interactive)"		3965363	0					
ANR	3965365	CompoundStatement		4047:96:103304:124552	3965363	0					
ANR	3965366	IdentifierDeclStatement	int o_asmqjmps_letter = core -> is_asmqjmps_letter ;	4048:1:103307:103355	3965363	0	True				
ANR	3965367	IdentifierDecl	o_asmqjmps_letter = core -> is_asmqjmps_letter		3965363	0					
ANR	3965368	IdentifierDeclType	int		3965363	0					
ANR	3965369	Identifier	o_asmqjmps_letter		3965363	1					
ANR	3965370	AssignmentExpression	o_asmqjmps_letter = core -> is_asmqjmps_letter		3965363	2		=			
ANR	3965371	Identifier	o_asmqjmps_letter		3965363	0					
ANR	3965372	PtrMemberAccess	core -> is_asmqjmps_letter		3965363	1					
ANR	3965373	Identifier	core		3965363	0					
ANR	3965374	Identifier	is_asmqjmps_letter		3965363	1					
ANR	3965375	IdentifierDeclStatement	int o_scrinteractive = r_cons_is_interactive ( ) ;	4049:1:103358:103405	3965363	1	True				
ANR	3965376	IdentifierDecl	o_scrinteractive = r_cons_is_interactive ( )		3965363	0					
ANR	3965377	IdentifierDeclType	int		3965363	0					
ANR	3965378	Identifier	o_scrinteractive		3965363	1					
ANR	3965379	AssignmentExpression	o_scrinteractive = r_cons_is_interactive ( )		3965363	2		=			
ANR	3965380	Identifier	o_scrinteractive		3965363	0					
ANR	3965381	CallExpression	r_cons_is_interactive ( )		3965363	1					
ANR	3965382	Callee	r_cons_is_interactive		3965363	0					
ANR	3965383	Identifier	r_cons_is_interactive		3965363	0					
ANR	3965384	ArgumentList			3965363	1					
ANR	3965385	IdentifierDeclStatement	int o_vmode = core -> vmode ;	4050:1:103408:103433	3965363	2	True				
ANR	3965386	IdentifierDecl	o_vmode = core -> vmode		3965363	0					
ANR	3965387	IdentifierDeclType	int		3965363	0					
ANR	3965388	Identifier	o_vmode		3965363	1					
ANR	3965389	AssignmentExpression	o_vmode = core -> vmode		3965363	2		=			
ANR	3965390	Identifier	o_vmode		3965363	0					
ANR	3965391	PtrMemberAccess	core -> vmode		3965363	1					
ANR	3965392	Identifier	core		3965363	0					
ANR	3965393	Identifier	vmode		3965363	1					
ANR	3965394	IdentifierDeclStatement	"int exit_graph = false , is_error = false ;"	4051:1:103436:103476	3965363	3	True				
ANR	3965395	IdentifierDecl	exit_graph = false		3965363	0					
ANR	3965396	IdentifierDeclType	int		3965363	0					
ANR	3965397	Identifier	exit_graph		3965363	1					
ANR	3965398	AssignmentExpression	exit_graph = false		3965363	2		=			
ANR	3965399	Identifier	false		3965363	0					
ANR	3965400	Identifier	false		3965363	1					
ANR	3965401	IdentifierDecl	is_error = false		3965363	1					
ANR	3965402	IdentifierDeclType	int		3965363	0					
ANR	3965403	Identifier	is_error		3965363	1					
ANR	3965404	AssignmentExpression	is_error = false		3965363	2		=			
ANR	3965405	Identifier	false		3965363	0					
ANR	3965406	Identifier	false		3965363	1					
ANR	3965407	IdentifierDeclStatement	int update_seek = false ;	4052:1:103479:103502	3965363	4	True				
ANR	3965408	IdentifierDecl	update_seek = false		3965363	0					
ANR	3965409	IdentifierDeclType	int		3965363	0					
ANR	3965410	Identifier	update_seek		3965363	1					
ANR	3965411	AssignmentExpression	update_seek = false		3965363	2		=			
ANR	3965412	Identifier	false		3965363	0					
ANR	3965413	Identifier	false		3965363	1					
ANR	3965414	IdentifierDeclStatement	struct agraph_refresh_data * grd ;	4053:1:103505:103536	3965363	5	True				
ANR	3965415	IdentifierDecl	* grd		3965363	0					
ANR	3965416	IdentifierDeclType	struct agraph_refresh_data *		3965363	0					
ANR	3965417	Identifier	grd		3965363	1					
ANR	3965418	IdentifierDeclStatement	"int okey , key ;"	4054:1:103539:103552	3965363	6	True				
ANR	3965419	IdentifierDecl	okey		3965363	0					
ANR	3965420	IdentifierDeclType	int		3965363	0					
ANR	3965421	Identifier	okey		3965363	1					
ANR	3965422	IdentifierDecl	key		3965363	1					
ANR	3965423	IdentifierDeclType	int		3965363	0					
ANR	3965424	Identifier	key		3965363	1					
ANR	3965425	IdentifierDeclStatement	RAnalFunction * fcn = NULL ;	4055:1:103555:103580	3965363	7	True				
ANR	3965426	IdentifierDecl	* fcn = NULL		3965363	0					
ANR	3965427	IdentifierDeclType	RAnalFunction *		3965363	0					
ANR	3965428	Identifier	fcn		3965363	1					
ANR	3965429	AssignmentExpression	* fcn = NULL		3965363	2		=			
ANR	3965430	Identifier	NULL		3965363	0					
ANR	3965431	Identifier	NULL		3965363	1					
ANR	3965432	IdentifierDeclStatement	const char * key_s ;	4056:1:103583:103600	3965363	8	True				
ANR	3965433	IdentifierDecl	* key_s		3965363	0					
ANR	3965434	IdentifierDeclType	const char *		3965363	0					
ANR	3965435	Identifier	key_s		3965363	1					
ANR	3965436	IdentifierDeclStatement	"RConsCanvas * can , * o_can = NULL ;"	4057:1:103603:103634	3965363	9	True				
ANR	3965437	IdentifierDecl	* can		3965363	0					
ANR	3965438	IdentifierDeclType	RConsCanvas *		3965363	0					
ANR	3965439	Identifier	can		3965363	1					
ANR	3965440	IdentifierDecl	* o_can = NULL		3965363	1					
ANR	3965441	IdentifierDeclType	RConsCanvas *		3965363	0					
ANR	3965442	Identifier	o_can		3965363	1					
ANR	3965443	AssignmentExpression	* o_can = NULL		3965363	2		=			
ANR	3965444	Identifier	NULL		3965363	0					
ANR	3965445	Identifier	NULL		3965363	1					
ANR	3965446	IdentifierDeclStatement	bool graph_allocated = false ;	4058:1:103637:103665	3965363	10	True				
ANR	3965447	IdentifierDecl	graph_allocated = false		3965363	0					
ANR	3965448	IdentifierDeclType	bool		3965363	0					
ANR	3965449	Identifier	graph_allocated		3965363	1					
ANR	3965450	AssignmentExpression	graph_allocated = false		3965363	2		=			
ANR	3965451	Identifier	false		3965363	0					
ANR	3965452	Identifier	false		3965363	1					
ANR	3965453	IdentifierDeclStatement	int movspeed ;	4059:1:103668:103680	3965363	11	True				
ANR	3965454	IdentifierDecl	movspeed		3965363	0					
ANR	3965455	IdentifierDeclType	int		3965363	0					
ANR	3965456	Identifier	movspeed		3965363	1					
ANR	3965457	IdentifierDeclStatement	"int ret , invscroll ;"	4060:1:103683:103701	3965363	12	True				
ANR	3965458	IdentifierDecl	ret		3965363	0					
ANR	3965459	IdentifierDeclType	int		3965363	0					
ANR	3965460	Identifier	ret		3965363	1					
ANR	3965461	IdentifierDecl	invscroll		3965363	1					
ANR	3965462	IdentifierDeclType	int		3965363	0					
ANR	3965463	Identifier	invscroll		3965363	1					
ANR	3965464	IdentifierDeclStatement	RConfigHold * hc = r_config_hold_new ( core -> config ) ;	4061:1:103704:103754	3965363	13	True				
ANR	3965465	IdentifierDecl	* hc = r_config_hold_new ( core -> config )		3965363	0					
ANR	3965466	IdentifierDeclType	RConfigHold *		3965363	0					
ANR	3965467	Identifier	hc		3965363	1					
ANR	3965468	AssignmentExpression	* hc = r_config_hold_new ( core -> config )		3965363	2		=			
ANR	3965469	Identifier	hc		3965363	0					
ANR	3965470	CallExpression	r_config_hold_new ( core -> config )		3965363	1					
ANR	3965471	Callee	r_config_hold_new		3965363	0					
ANR	3965472	Identifier	r_config_hold_new		3965363	0					
ANR	3965473	ArgumentList	core -> config		3965363	1					
ANR	3965474	Argument	core -> config		3965363	0					
ANR	3965475	PtrMemberAccess	core -> config		3965363	0					
ANR	3965476	Identifier	core		3965363	0					
ANR	3965477	Identifier	config		3965363	1					
ANR	3965478	IfStatement	if ( ! hc )		3965363	14					
ANR	3965479	Condition	! hc	4062:5:103761:103763	3965363	0	True				
ANR	3965480	UnaryOperationExpression	! hc		3965363	0					
ANR	3965481	UnaryOperator	!		3965363	0					
ANR	3965482	Identifier	hc		3965363	1					
ANR	3965483	CompoundStatement		16:10:461:461	3965363	1					
ANR	3965484	ReturnStatement	return false ;	4063:2:103770:103782	3965363	0	True				
ANR	3965485	Identifier	false		3965363	0					
ANR	3965486	ExpressionStatement	"r_config_hold_i ( hc , ""asm.pseudo"" , ""asm.esil"" , ""asm.cmt.right"" , NULL )"	4065:1:103788:103857	3965363	15	True				
ANR	3965487	CallExpression	"r_config_hold_i ( hc , ""asm.pseudo"" , ""asm.esil"" , ""asm.cmt.right"" , NULL )"		3965363	0					
ANR	3965488	Callee	r_config_hold_i		3965363	0					
ANR	3965489	Identifier	r_config_hold_i		3965363	0					
ANR	3965490	ArgumentList	hc		3965363	1					
ANR	3965491	Argument	hc		3965363	0					
ANR	3965492	Identifier	hc		3965363	0					
ANR	3965493	Argument	"""asm.pseudo"""		3965363	1					
ANR	3965494	PrimaryExpression	"""asm.pseudo"""		3965363	0					
ANR	3965495	Argument	"""asm.esil"""		3965363	2					
ANR	3965496	PrimaryExpression	"""asm.esil"""		3965363	0					
ANR	3965497	Argument	"""asm.cmt.right"""		3965363	3					
ANR	3965498	PrimaryExpression	"""asm.cmt.right"""		3965363	0					
ANR	3965499	Argument	NULL		3965363	4					
ANR	3965500	Identifier	NULL		3965363	0					
ANR	3965501	IdentifierDeclStatement	"int h , w = r_cons_get_size ( & h ) ;"	4067:1:103861:103892	3965363	16	True				
ANR	3965502	IdentifierDecl	h		3965363	0					
ANR	3965503	IdentifierDeclType	int		3965363	0					
ANR	3965504	Identifier	h		3965363	1					
ANR	3965505	IdentifierDecl	w = r_cons_get_size ( & h )		3965363	1					
ANR	3965506	IdentifierDeclType	int		3965363	0					
ANR	3965507	Identifier	w		3965363	1					
ANR	3965508	AssignmentExpression	w = r_cons_get_size ( & h )		3965363	2		=			
ANR	3965509	Identifier	w		3965363	0					
ANR	3965510	CallExpression	r_cons_get_size ( & h )		3965363	1					
ANR	3965511	Callee	r_cons_get_size		3965363	0					
ANR	3965512	Identifier	r_cons_get_size		3965363	0					
ANR	3965513	ArgumentList	& h		3965363	1					
ANR	3965514	Argument	& h		3965363	0					
ANR	3965515	UnaryOperationExpression	& h		3965363	0					
ANR	3965516	UnaryOperator	&		3965363	0					
ANR	3965517	Identifier	h		3965363	1					
ANR	3965518	ExpressionStatement	"can = r_cons_canvas_new ( w , h )"	4068:1:103895:103925	3965363	17	True				
ANR	3965519	AssignmentExpression	"can = r_cons_canvas_new ( w , h )"		3965363	0		=			
ANR	3965520	Identifier	can		3965363	0					
ANR	3965521	CallExpression	"r_cons_canvas_new ( w , h )"		3965363	1					
ANR	3965522	Callee	r_cons_canvas_new		3965363	0					
ANR	3965523	Identifier	r_cons_canvas_new		3965363	0					
ANR	3965524	ArgumentList	w		3965363	1					
ANR	3965525	Argument	w		3965363	0					
ANR	3965526	Identifier	w		3965363	0					
ANR	3965527	Argument	h		3965363	1					
ANR	3965528	Identifier	h		3965363	0					
ANR	3965529	IfStatement	if ( ! can )		3965363	18					
ANR	3965530	Condition	! can	4069:5:103932:103935	3965363	0	True				
ANR	3965531	UnaryOperationExpression	! can		3965363	0					
ANR	3965532	UnaryOperator	!		3965363	0					
ANR	3965533	Identifier	can		3965363	1					
ANR	3965534	CompoundStatement		23:11:633:633	3965363	1					
ANR	3965535	ExpressionStatement	w = 80	4070:2:103942:103948	3965363	0	True				
ANR	3965536	AssignmentExpression	w = 80		3965363	0		=			
ANR	3965537	Identifier	w		3965363	0					
ANR	3965538	PrimaryExpression	80		3965363	1					
ANR	3965539	ExpressionStatement	h = 25	4071:2:103952:103958	3965363	1	True				
ANR	3965540	AssignmentExpression	h = 25		3965363	0		=			
ANR	3965541	Identifier	h		3965363	0					
ANR	3965542	PrimaryExpression	25		3965363	1					
ANR	3965543	ExpressionStatement	"can = r_cons_canvas_new ( w , h )"	4072:2:103962:103992	3965363	2	True				
ANR	3965544	AssignmentExpression	"can = r_cons_canvas_new ( w , h )"		3965363	0		=			
ANR	3965545	Identifier	can		3965363	0					
ANR	3965546	CallExpression	"r_cons_canvas_new ( w , h )"		3965363	1					
ANR	3965547	Callee	r_cons_canvas_new		3965363	0					
ANR	3965548	Identifier	r_cons_canvas_new		3965363	0					
ANR	3965549	ArgumentList	w		3965363	1					
ANR	3965550	Argument	w		3965363	0					
ANR	3965551	Identifier	w		3965363	0					
ANR	3965552	Argument	h		3965363	1					
ANR	3965553	Identifier	h		3965363	0					
ANR	3965554	IfStatement	if ( ! can )		3965363	3					
ANR	3965555	Condition	! can	4073:6:104000:104003	3965363	0	True				
ANR	3965556	UnaryOperationExpression	! can		3965363	0					
ANR	3965557	UnaryOperator	!		3965363	0					
ANR	3965558	Identifier	can		3965363	1					
ANR	3965559	CompoundStatement		27:12:701:701	3965363	1					
ANR	3965560	Statement	eprintf	4074:3:104011:104017	3965363	0	True				
ANR	3965561	Statement	(	4074:11:104019:104019	3965363	1	True				
ANR	3965562	Statement	"""Cannot create RCons.canvas context. Invalid screen """	4074:12:104020:104072	3965363	2	True				
ANR	3965563	Statement	"""size? See scr.columns + scr.rows\\n"""	4075:5:104079:104114	3965363	3	True				
ANR	3965564	Statement	)	4075:41:104115:104115	3965363	4	True				
ANR	3965565	ExpressionStatement		4075:42:104116:104116	3965363	5	True				
ANR	3965566	ExpressionStatement	r_config_hold_free ( hc )	4076:3:104121:104144	3965363	6	True				
ANR	3965567	CallExpression	r_config_hold_free ( hc )		3965363	0					
ANR	3965568	Callee	r_config_hold_free		3965363	0					
ANR	3965569	Identifier	r_config_hold_free		3965363	0					
ANR	3965570	ArgumentList	hc		3965363	1					
ANR	3965571	Argument	hc		3965363	0					
ANR	3965572	Identifier	hc		3965363	0					
ANR	3965573	ReturnStatement	return false ;	4077:3:104149:104161	3965363	7	True				
ANR	3965574	Identifier	false		3965363	0					
ANR	3965575	ExpressionStatement	"can -> linemode = r_config_get_i ( core -> config , ""graph.linemode"" )"	4080:1:104171:104234	3965363	19	True				
ANR	3965576	AssignmentExpression	"can -> linemode = r_config_get_i ( core -> config , ""graph.linemode"" )"		3965363	0		=			
ANR	3965577	PtrMemberAccess	can -> linemode		3965363	0					
ANR	3965578	Identifier	can		3965363	0					
ANR	3965579	Identifier	linemode		3965363	1					
ANR	3965580	CallExpression	"r_config_get_i ( core -> config , ""graph.linemode"" )"		3965363	1					
ANR	3965581	Callee	r_config_get_i		3965363	0					
ANR	3965582	Identifier	r_config_get_i		3965363	0					
ANR	3965583	ArgumentList	core -> config		3965363	1					
ANR	3965584	Argument	core -> config		3965363	0					
ANR	3965585	PtrMemberAccess	core -> config		3965363	0					
ANR	3965586	Identifier	core		3965363	0					
ANR	3965587	Identifier	config		3965363	1					
ANR	3965588	Argument	"""graph.linemode"""		3965363	1					
ANR	3965589	PrimaryExpression	"""graph.linemode"""		3965363	0					
ANR	3965590	ExpressionStatement	"can -> color = r_config_get_i ( core -> config , ""scr.color"" )"	4081:1:104237:104292	3965363	20	True				
ANR	3965591	AssignmentExpression	"can -> color = r_config_get_i ( core -> config , ""scr.color"" )"		3965363	0		=			
ANR	3965592	PtrMemberAccess	can -> color		3965363	0					
ANR	3965593	Identifier	can		3965363	0					
ANR	3965594	Identifier	color		3965363	1					
ANR	3965595	CallExpression	"r_config_get_i ( core -> config , ""scr.color"" )"		3965363	1					
ANR	3965596	Callee	r_config_get_i		3965363	0					
ANR	3965597	Identifier	r_config_get_i		3965363	0					
ANR	3965598	ArgumentList	core -> config		3965363	1					
ANR	3965599	Argument	core -> config		3965363	0					
ANR	3965600	PtrMemberAccess	core -> config		3965363	0					
ANR	3965601	Identifier	core		3965363	0					
ANR	3965602	Identifier	config		3965363	1					
ANR	3965603	Argument	"""scr.color"""		3965363	1					
ANR	3965604	PrimaryExpression	"""scr.color"""		3965363	0					
ANR	3965605	IfStatement	if ( ! g )		3965363	21					
ANR	3965606	Condition	! g	4083:5:104300:104301	3965363	0	True				
ANR	3965607	UnaryOperationExpression	! g		3965363	0					
ANR	3965608	UnaryOperator	!		3965363	0					
ANR	3965609	Identifier	g		3965363	1					
ANR	3965610	CompoundStatement		37:9:999:999	3965363	1					
ANR	3965611	ExpressionStatement	graph_allocated = true	4084:2:104308:104330	3965363	0	True				
ANR	3965612	AssignmentExpression	graph_allocated = true		3965363	0		=			
ANR	3965613	Identifier	graph_allocated		3965363	0					
ANR	3965614	Identifier	true		3965363	1					
ANR	3965615	ExpressionStatement	"fcn = _fcn ? _fcn : r_anal_get_fcn_in ( core -> anal , core -> offset , 0 )"	4085:2:104334:104399	3965363	1	True				
ANR	3965616	AssignmentExpression	"fcn = _fcn ? _fcn : r_anal_get_fcn_in ( core -> anal , core -> offset , 0 )"		3965363	0		=			
ANR	3965617	Identifier	fcn		3965363	0					
ANR	3965618	ConditionalExpression	"_fcn ? _fcn : r_anal_get_fcn_in ( core -> anal , core -> offset , 0 )"		3965363	1					
ANR	3965619	Condition	_fcn		3965363	0					
ANR	3965620	Identifier	_fcn		3965363	0					
ANR	3965621	Identifier	_fcn		3965363	1					
ANR	3965622	CallExpression	"r_anal_get_fcn_in ( core -> anal , core -> offset , 0 )"		3965363	2					
ANR	3965623	Callee	r_anal_get_fcn_in		3965363	0					
ANR	3965624	Identifier	r_anal_get_fcn_in		3965363	0					
ANR	3965625	ArgumentList	core -> anal		3965363	1					
ANR	3965626	Argument	core -> anal		3965363	0					
ANR	3965627	PtrMemberAccess	core -> anal		3965363	0					
ANR	3965628	Identifier	core		3965363	0					
ANR	3965629	Identifier	anal		3965363	1					
ANR	3965630	Argument	core -> offset		3965363	1					
ANR	3965631	PtrMemberAccess	core -> offset		3965363	0					
ANR	3965632	Identifier	core		3965363	0					
ANR	3965633	Identifier	offset		3965363	1					
ANR	3965634	Argument	0		3965363	2					
ANR	3965635	PrimaryExpression	0		3965363	0					
ANR	3965636	IfStatement	if ( ! fcn )		3965363	2					
ANR	3965637	Condition	! fcn	4086:6:104407:104410	3965363	0	True				
ANR	3965638	UnaryOperationExpression	! fcn		3965363	0					
ANR	3965639	UnaryOperator	!		3965363	0					
ANR	3965640	Identifier	fcn		3965363	1					
ANR	3965641	CompoundStatement		40:12:1108:1108	3965363	1					
ANR	3965642	ExpressionStatement	r_config_hold_restore ( hc )	4087:3:104418:104444	3965363	0	True				
ANR	3965643	CallExpression	r_config_hold_restore ( hc )		3965363	0					
ANR	3965644	Callee	r_config_hold_restore		3965363	0					
ANR	3965645	Identifier	r_config_hold_restore		3965363	0					
ANR	3965646	ArgumentList	hc		3965363	1					
ANR	3965647	Argument	hc		3965363	0					
ANR	3965648	Identifier	hc		3965363	0					
ANR	3965649	ExpressionStatement	r_config_hold_free ( hc )	4088:3:104449:104472	3965363	1	True				
ANR	3965650	CallExpression	r_config_hold_free ( hc )		3965363	0					
ANR	3965651	Callee	r_config_hold_free		3965363	0					
ANR	3965652	Identifier	r_config_hold_free		3965363	0					
ANR	3965653	ArgumentList	hc		3965363	1					
ANR	3965654	Argument	hc		3965363	0					
ANR	3965655	Identifier	hc		3965363	0					
ANR	3965656	ExpressionStatement	r_cons_canvas_free ( can )	4089:3:104477:104501	3965363	2	True				
ANR	3965657	CallExpression	r_cons_canvas_free ( can )		3965363	0					
ANR	3965658	Callee	r_cons_canvas_free		3965363	0					
ANR	3965659	Identifier	r_cons_canvas_free		3965363	0					
ANR	3965660	ArgumentList	can		3965363	1					
ANR	3965661	Argument	can		3965363	0					
ANR	3965662	Identifier	can		3965363	0					
ANR	3965663	ReturnStatement	return false ;	4090:3:104506:104518	3965363	3	True				
ANR	3965664	Identifier	false		3965363	0					
ANR	3965665	ExpressionStatement	g = r_agraph_new ( can )	4092:2:104526:104548	3965363	3	True				
ANR	3965666	AssignmentExpression	g = r_agraph_new ( can )		3965363	0		=			
ANR	3965667	Identifier	g		3965363	0					
ANR	3965668	CallExpression	r_agraph_new ( can )		3965363	1					
ANR	3965669	Callee	r_agraph_new		3965363	0					
ANR	3965670	Identifier	r_agraph_new		3965363	0					
ANR	3965671	ArgumentList	can		3965363	1					
ANR	3965672	Argument	can		3965363	0					
ANR	3965673	Identifier	can		3965363	0					
ANR	3965674	IfStatement	if ( ! g )		3965363	4					
ANR	3965675	Condition	! g	4093:6:104556:104557	3965363	0	True				
ANR	3965676	UnaryOperationExpression	! g		3965363	0					
ANR	3965677	UnaryOperator	!		3965363	0					
ANR	3965678	Identifier	g		3965363	1					
ANR	3965679	CompoundStatement		47:10:1255:1255	3965363	1					
ANR	3965680	ExpressionStatement	r_cons_canvas_free ( can )	4094:3:104565:104589	3965363	0	True				
ANR	3965681	CallExpression	r_cons_canvas_free ( can )		3965363	0					
ANR	3965682	Callee	r_cons_canvas_free		3965363	0					
ANR	3965683	Identifier	r_cons_canvas_free		3965363	0					
ANR	3965684	ArgumentList	can		3965363	1					
ANR	3965685	Argument	can		3965363	0					
ANR	3965686	Identifier	can		3965363	0					
ANR	3965687	ExpressionStatement	r_config_hold_restore ( hc )	4095:3:104594:104620	3965363	1	True				
ANR	3965688	CallExpression	r_config_hold_restore ( hc )		3965363	0					
ANR	3965689	Callee	r_config_hold_restore		3965363	0					
ANR	3965690	Identifier	r_config_hold_restore		3965363	0					
ANR	3965691	ArgumentList	hc		3965363	1					
ANR	3965692	Argument	hc		3965363	0					
ANR	3965693	Identifier	hc		3965363	0					
ANR	3965694	ExpressionStatement	r_config_hold_free ( hc )	4096:3:104625:104648	3965363	2	True				
ANR	3965695	CallExpression	r_config_hold_free ( hc )		3965363	0					
ANR	3965696	Callee	r_config_hold_free		3965363	0					
ANR	3965697	Identifier	r_config_hold_free		3965363	0					
ANR	3965698	ArgumentList	hc		3965363	1					
ANR	3965699	Argument	hc		3965363	0					
ANR	3965700	Identifier	hc		3965363	0					
ANR	3965701	ReturnStatement	return false ;	4097:3:104653:104665	3965363	3	True				
ANR	3965702	Identifier	false		3965363	0					
ANR	3965703	ExpressionStatement	g -> is_tiny = is_interactive == 2	4099:2:104673:104705	3965363	5	True				
ANR	3965704	AssignmentExpression	g -> is_tiny = is_interactive == 2		3965363	0		=			
ANR	3965705	PtrMemberAccess	g -> is_tiny		3965363	0					
ANR	3965706	Identifier	g		3965363	0					
ANR	3965707	Identifier	is_tiny		3965363	1					
ANR	3965708	EqualityExpression	is_interactive == 2		3965363	1		==			
ANR	3965709	Identifier	is_interactive		3965363	0					
ANR	3965710	PrimaryExpression	2		3965363	1					
ANR	3965711	ExpressionStatement	"g -> layout = r_config_get_i ( core -> config , ""graph.layout"" )"	4100:2:104709:104766	3965363	6	True				
ANR	3965712	AssignmentExpression	"g -> layout = r_config_get_i ( core -> config , ""graph.layout"" )"		3965363	0		=			
ANR	3965713	PtrMemberAccess	g -> layout		3965363	0					
ANR	3965714	Identifier	g		3965363	0					
ANR	3965715	Identifier	layout		3965363	1					
ANR	3965716	CallExpression	"r_config_get_i ( core -> config , ""graph.layout"" )"		3965363	1					
ANR	3965717	Callee	r_config_get_i		3965363	0					
ANR	3965718	Identifier	r_config_get_i		3965363	0					
ANR	3965719	ArgumentList	core -> config		3965363	1					
ANR	3965720	Argument	core -> config		3965363	0					
ANR	3965721	PtrMemberAccess	core -> config		3965363	0					
ANR	3965722	Identifier	core		3965363	0					
ANR	3965723	Identifier	config		3965363	1					
ANR	3965724	Argument	"""graph.layout"""		3965363	1					
ANR	3965725	PrimaryExpression	"""graph.layout"""		3965363	0					
ANR	3965726	ExpressionStatement	"g -> dummy = r_config_get_i ( core -> config , ""graph.dummy"" )"	4101:2:104770:104825	3965363	7	True				
ANR	3965727	AssignmentExpression	"g -> dummy = r_config_get_i ( core -> config , ""graph.dummy"" )"		3965363	0		=			
ANR	3965728	PtrMemberAccess	g -> dummy		3965363	0					
ANR	3965729	Identifier	g		3965363	0					
ANR	3965730	Identifier	dummy		3965363	1					
ANR	3965731	CallExpression	"r_config_get_i ( core -> config , ""graph.dummy"" )"		3965363	1					
ANR	3965732	Callee	r_config_get_i		3965363	0					
ANR	3965733	Identifier	r_config_get_i		3965363	0					
ANR	3965734	ArgumentList	core -> config		3965363	1					
ANR	3965735	Argument	core -> config		3965363	0					
ANR	3965736	PtrMemberAccess	core -> config		3965363	0					
ANR	3965737	Identifier	core		3965363	0					
ANR	3965738	Identifier	config		3965363	1					
ANR	3965739	Argument	"""graph.dummy"""		3965363	1					
ANR	3965740	PrimaryExpression	"""graph.dummy"""		3965363	0					
ANR	3965741	ExpressionStatement	"g -> show_node_titles = r_config_get_i ( core -> config , ""graph.ntitles"" )"	4102:2:104829:104897	3965363	8	True				
ANR	3965742	AssignmentExpression	"g -> show_node_titles = r_config_get_i ( core -> config , ""graph.ntitles"" )"		3965363	0		=			
ANR	3965743	PtrMemberAccess	g -> show_node_titles		3965363	0					
ANR	3965744	Identifier	g		3965363	0					
ANR	3965745	Identifier	show_node_titles		3965363	1					
ANR	3965746	CallExpression	"r_config_get_i ( core -> config , ""graph.ntitles"" )"		3965363	1					
ANR	3965747	Callee	r_config_get_i		3965363	0					
ANR	3965748	Identifier	r_config_get_i		3965363	0					
ANR	3965749	ArgumentList	core -> config		3965363	1					
ANR	3965750	Argument	core -> config		3965363	0					
ANR	3965751	PtrMemberAccess	core -> config		3965363	0					
ANR	3965752	Identifier	core		3965363	0					
ANR	3965753	Identifier	config		3965363	1					
ANR	3965754	Argument	"""graph.ntitles"""		3965363	1					
ANR	3965755	PrimaryExpression	"""graph.ntitles"""		3965363	0					
ANR	3965756	ElseStatement	else		3965363	0					
ANR	3965757	CompoundStatement		57:8:1602:1602	3965363	0					
ANR	3965758	ExpressionStatement	o_can = g -> can	4104:2:104911:104925	3965363	0	True				
ANR	3965759	AssignmentExpression	o_can = g -> can		3965363	0		=			
ANR	3965760	Identifier	o_can		3965363	0					
ANR	3965761	PtrMemberAccess	g -> can		3965363	1					
ANR	3965762	Identifier	g		3965363	0					
ANR	3965763	Identifier	can		3965363	1					
ANR	3965764	ExpressionStatement	"r_config_set_i ( core -> config , ""scr.interactive"" , false )"	4106:1:104931:104986	3965363	22	True				
ANR	3965765	CallExpression	"r_config_set_i ( core -> config , ""scr.interactive"" , false )"		3965363	0					
ANR	3965766	Callee	r_config_set_i		3965363	0					
ANR	3965767	Identifier	r_config_set_i		3965363	0					
ANR	3965768	ArgumentList	core -> config		3965363	1					
ANR	3965769	Argument	core -> config		3965363	0					
ANR	3965770	PtrMemberAccess	core -> config		3965363	0					
ANR	3965771	Identifier	core		3965363	0					
ANR	3965772	Identifier	config		3965363	1					
ANR	3965773	Argument	"""scr.interactive"""		3965363	1					
ANR	3965774	PrimaryExpression	"""scr.interactive"""		3965363	0					
ANR	3965775	Argument	false		3965363	2					
ANR	3965776	Identifier	false		3965363	0					
ANR	3965777	ExpressionStatement	g -> can = can	4107:1:104989:105001	3965363	23	True				
ANR	3965778	AssignmentExpression	g -> can = can		3965363	0		=			
ANR	3965779	PtrMemberAccess	g -> can		3965363	0					
ANR	3965780	Identifier	g		3965363	0					
ANR	3965781	Identifier	can		3965363	1					
ANR	3965782	Identifier	can		3965363	1					
ANR	3965783	ExpressionStatement	"g -> movspeed = r_config_get_i ( core -> config , ""graph.scroll"" )"	4108:1:105004:105063	3965363	24	True				
ANR	3965784	AssignmentExpression	"g -> movspeed = r_config_get_i ( core -> config , ""graph.scroll"" )"		3965363	0		=			
ANR	3965785	PtrMemberAccess	g -> movspeed		3965363	0					
ANR	3965786	Identifier	g		3965363	0					
ANR	3965787	Identifier	movspeed		3965363	1					
ANR	3965788	CallExpression	"r_config_get_i ( core -> config , ""graph.scroll"" )"		3965363	1					
ANR	3965789	Callee	r_config_get_i		3965363	0					
ANR	3965790	Identifier	r_config_get_i		3965363	0					
ANR	3965791	ArgumentList	core -> config		3965363	1					
ANR	3965792	Argument	core -> config		3965363	0					
ANR	3965793	PtrMemberAccess	core -> config		3965363	0					
ANR	3965794	Identifier	core		3965363	0					
ANR	3965795	Identifier	config		3965363	1					
ANR	3965796	Argument	"""graph.scroll"""		3965363	1					
ANR	3965797	PrimaryExpression	"""graph.scroll"""		3965363	0					
ANR	3965798	ExpressionStatement	"g -> show_node_titles = r_config_get_i ( core -> config , ""graph.ntitles"" )"	4109:1:105066:105134	3965363	25	True				
ANR	3965799	AssignmentExpression	"g -> show_node_titles = r_config_get_i ( core -> config , ""graph.ntitles"" )"		3965363	0		=			
ANR	3965800	PtrMemberAccess	g -> show_node_titles		3965363	0					
ANR	3965801	Identifier	g		3965363	0					
ANR	3965802	Identifier	show_node_titles		3965363	1					
ANR	3965803	CallExpression	"r_config_get_i ( core -> config , ""graph.ntitles"" )"		3965363	1					
ANR	3965804	Callee	r_config_get_i		3965363	0					
ANR	3965805	Identifier	r_config_get_i		3965363	0					
ANR	3965806	ArgumentList	core -> config		3965363	1					
ANR	3965807	Argument	core -> config		3965363	0					
ANR	3965808	PtrMemberAccess	core -> config		3965363	0					
ANR	3965809	Identifier	core		3965363	0					
ANR	3965810	Identifier	config		3965363	1					
ANR	3965811	Argument	"""graph.ntitles"""		3965363	1					
ANR	3965812	PrimaryExpression	"""graph.ntitles"""		3965363	0					
ANR	3965813	ExpressionStatement	"g -> show_node_body = r_config_get_i ( core -> config , ""graph.body"" )"	4110:1:105137:105200	3965363	26	True				
ANR	3965814	AssignmentExpression	"g -> show_node_body = r_config_get_i ( core -> config , ""graph.body"" )"		3965363	0		=			
ANR	3965815	PtrMemberAccess	g -> show_node_body		3965363	0					
ANR	3965816	Identifier	g		3965363	0					
ANR	3965817	Identifier	show_node_body		3965363	1					
ANR	3965818	CallExpression	"r_config_get_i ( core -> config , ""graph.body"" )"		3965363	1					
ANR	3965819	Callee	r_config_get_i		3965363	0					
ANR	3965820	Identifier	r_config_get_i		3965363	0					
ANR	3965821	ArgumentList	core -> config		3965363	1					
ANR	3965822	Argument	core -> config		3965363	0					
ANR	3965823	PtrMemberAccess	core -> config		3965363	0					
ANR	3965824	Identifier	core		3965363	0					
ANR	3965825	Identifier	config		3965363	1					
ANR	3965826	Argument	"""graph.body"""		3965363	1					
ANR	3965827	PrimaryExpression	"""graph.body"""		3965363	0					
ANR	3965828	ExpressionStatement	"g -> show_node_bubble = r_config_get_i ( core -> config , ""graph.bubble"" )"	4111:1:105203:105270	3965363	27	True				
ANR	3965829	AssignmentExpression	"g -> show_node_bubble = r_config_get_i ( core -> config , ""graph.bubble"" )"		3965363	0		=			
ANR	3965830	PtrMemberAccess	g -> show_node_bubble		3965363	0					
ANR	3965831	Identifier	g		3965363	0					
ANR	3965832	Identifier	show_node_bubble		3965363	1					
ANR	3965833	CallExpression	"r_config_get_i ( core -> config , ""graph.bubble"" )"		3965363	1					
ANR	3965834	Callee	r_config_get_i		3965363	0					
ANR	3965835	Identifier	r_config_get_i		3965363	0					
ANR	3965836	ArgumentList	core -> config		3965363	1					
ANR	3965837	Argument	core -> config		3965363	0					
ANR	3965838	PtrMemberAccess	core -> config		3965363	0					
ANR	3965839	Identifier	core		3965363	0					
ANR	3965840	Identifier	config		3965363	1					
ANR	3965841	Argument	"""graph.bubble"""		3965363	1					
ANR	3965842	PrimaryExpression	"""graph.bubble"""		3965363	0					
ANR	3965843	ExpressionStatement	g -> on_curnode_change = ( RANodeCallback ) seek_to_node	4112:1:105273:105325	3965363	28	True				
ANR	3965844	AssignmentExpression	g -> on_curnode_change = ( RANodeCallback ) seek_to_node		3965363	0		=			
ANR	3965845	PtrMemberAccess	g -> on_curnode_change		3965363	0					
ANR	3965846	Identifier	g		3965363	0					
ANR	3965847	Identifier	on_curnode_change		3965363	1					
ANR	3965848	CastExpression	( RANodeCallback ) seek_to_node		3965363	1					
ANR	3965849	CastTarget	RANodeCallback		3965363	0					
ANR	3965850	Identifier	seek_to_node		3965363	1					
ANR	3965851	ExpressionStatement	g -> on_curnode_change_data = core	4113:1:105328:105360	3965363	29	True				
ANR	3965852	AssignmentExpression	g -> on_curnode_change_data = core		3965363	0		=			
ANR	3965853	PtrMemberAccess	g -> on_curnode_change_data		3965363	0					
ANR	3965854	Identifier	g		3965363	0					
ANR	3965855	Identifier	on_curnode_change_data		3965363	1					
ANR	3965856	Identifier	core		3965363	1					
ANR	3965857	ExpressionStatement	"g -> edgemode = r_config_get_i ( core -> config , ""graph.edges"" )"	4114:1:105363:105421	3965363	30	True				
ANR	3965858	AssignmentExpression	"g -> edgemode = r_config_get_i ( core -> config , ""graph.edges"" )"		3965363	0		=			
ANR	3965859	PtrMemberAccess	g -> edgemode		3965363	0					
ANR	3965860	Identifier	g		3965363	0					
ANR	3965861	Identifier	edgemode		3965363	1					
ANR	3965862	CallExpression	"r_config_get_i ( core -> config , ""graph.edges"" )"		3965363	1					
ANR	3965863	Callee	r_config_get_i		3965363	0					
ANR	3965864	Identifier	r_config_get_i		3965363	0					
ANR	3965865	ArgumentList	core -> config		3965363	1					
ANR	3965866	Argument	core -> config		3965363	0					
ANR	3965867	PtrMemberAccess	core -> config		3965363	0					
ANR	3965868	Identifier	core		3965363	0					
ANR	3965869	Identifier	config		3965363	1					
ANR	3965870	Argument	"""graph.edges"""		3965363	1					
ANR	3965871	PrimaryExpression	"""graph.edges"""		3965363	0					
ANR	3965872	ExpressionStatement	"g -> hints = r_config_get_i ( core -> config , ""graph.hints"" )"	4115:1:105424:105479	3965363	31	True				
ANR	3965873	AssignmentExpression	"g -> hints = r_config_get_i ( core -> config , ""graph.hints"" )"		3965363	0		=			
ANR	3965874	PtrMemberAccess	g -> hints		3965363	0					
ANR	3965875	Identifier	g		3965363	0					
ANR	3965876	Identifier	hints		3965363	1					
ANR	3965877	CallExpression	"r_config_get_i ( core -> config , ""graph.hints"" )"		3965363	1					
ANR	3965878	Callee	r_config_get_i		3965363	0					
ANR	3965879	Identifier	r_config_get_i		3965363	0					
ANR	3965880	ArgumentList	core -> config		3965363	1					
ANR	3965881	Argument	core -> config		3965363	0					
ANR	3965882	PtrMemberAccess	core -> config		3965363	0					
ANR	3965883	Identifier	core		3965363	0					
ANR	3965884	Identifier	config		3965363	1					
ANR	3965885	Argument	"""graph.hints"""		3965363	1					
ANR	3965886	PrimaryExpression	"""graph.hints"""		3965363	0					
ANR	3965887	ExpressionStatement	g -> is_interactive = is_interactive	4116:1:105482:105516	3965363	32	True				
ANR	3965888	AssignmentExpression	g -> is_interactive = is_interactive		3965363	0		=			
ANR	3965889	PtrMemberAccess	g -> is_interactive		3965363	0					
ANR	3965890	Identifier	g		3965363	0					
ANR	3965891	Identifier	is_interactive		3965363	1					
ANR	3965892	Identifier	is_interactive		3965363	1					
ANR	3965893	IdentifierDeclStatement	"bool asm_comments = r_config_get_i ( core -> config , ""asm.comments"" ) ;"	4117:1:105519:105584	3965363	33	True				
ANR	3965894	IdentifierDecl	"asm_comments = r_config_get_i ( core -> config , ""asm.comments"" )"		3965363	0					
ANR	3965895	IdentifierDeclType	bool		3965363	0					
ANR	3965896	Identifier	asm_comments		3965363	1					
ANR	3965897	AssignmentExpression	"asm_comments = r_config_get_i ( core -> config , ""asm.comments"" )"		3965363	2		=			
ANR	3965898	Identifier	asm_comments		3965363	0					
ANR	3965899	CallExpression	"r_config_get_i ( core -> config , ""asm.comments"" )"		3965363	1					
ANR	3965900	Callee	r_config_get_i		3965363	0					
ANR	3965901	Identifier	r_config_get_i		3965363	0					
ANR	3965902	ArgumentList	core -> config		3965363	1					
ANR	3965903	Argument	core -> config		3965363	0					
ANR	3965904	PtrMemberAccess	core -> config		3965363	0					
ANR	3965905	Identifier	core		3965363	0					
ANR	3965906	Identifier	config		3965363	1					
ANR	3965907	Argument	"""asm.comments"""		3965363	1					
ANR	3965908	PrimaryExpression	"""asm.comments"""		3965363	0					
ANR	3965909	ExpressionStatement	"r_config_set ( core -> config , ""asm.comments"" , r_str_bool ( r_config_get_i ( core -> config , ""graph.comments"" ) ) )"	4118:1:105587:105694	3965363	34	True				
ANR	3965910	CallExpression	"r_config_set ( core -> config , ""asm.comments"" , r_str_bool ( r_config_get_i ( core -> config , ""graph.comments"" ) ) )"		3965363	0					
ANR	3965911	Callee	r_config_set		3965363	0					
ANR	3965912	Identifier	r_config_set		3965363	0					
ANR	3965913	ArgumentList	core -> config		3965363	1					
ANR	3965914	Argument	core -> config		3965363	0					
ANR	3965915	PtrMemberAccess	core -> config		3965363	0					
ANR	3965916	Identifier	core		3965363	0					
ANR	3965917	Identifier	config		3965363	1					
ANR	3965918	Argument	"""asm.comments"""		3965363	1					
ANR	3965919	PrimaryExpression	"""asm.comments"""		3965363	0					
ANR	3965920	Argument	"r_str_bool ( r_config_get_i ( core -> config , ""graph.comments"" ) )"		3965363	2					
ANR	3965921	CallExpression	"r_str_bool ( r_config_get_i ( core -> config , ""graph.comments"" ) )"		3965363	0					
ANR	3965922	Callee	r_str_bool		3965363	0					
ANR	3965923	Identifier	r_str_bool		3965363	0					
ANR	3965924	ArgumentList	"r_config_get_i ( core -> config , ""graph.comments"" )"		3965363	1					
ANR	3965925	Argument	"r_config_get_i ( core -> config , ""graph.comments"" )"		3965363	0					
ANR	3965926	CallExpression	"r_config_get_i ( core -> config , ""graph.comments"" )"		3965363	0					
ANR	3965927	Callee	r_config_get_i		3965363	0					
ANR	3965928	Identifier	r_config_get_i		3965363	0					
ANR	3965929	ArgumentList	core -> config		3965363	1					
ANR	3965930	Argument	core -> config		3965363	0					
ANR	3965931	PtrMemberAccess	core -> config		3965363	0					
ANR	3965932	Identifier	core		3965363	0					
ANR	3965933	Identifier	config		3965363	1					
ANR	3965934	Argument	"""graph.comments"""		3965363	1					
ANR	3965935	PrimaryExpression	"""graph.comments"""		3965363	0					
ANR	3965936	ExpressionStatement	core -> is_asmqjmps_letter = true	4122:1:105748:105779	3965363	35	True				
ANR	3965937	AssignmentExpression	core -> is_asmqjmps_letter = true		3965363	0		=			
ANR	3965938	PtrMemberAccess	core -> is_asmqjmps_letter		3965363	0					
ANR	3965939	Identifier	core		3965363	0					
ANR	3965940	Identifier	is_asmqjmps_letter		3965363	1					
ANR	3965941	Identifier	true		3965363	1					
ANR	3965942	ExpressionStatement	core -> vmode = true	4123:1:105782:105800	3965363	36	True				
ANR	3965943	AssignmentExpression	core -> vmode = true		3965363	0		=			
ANR	3965944	PtrMemberAccess	core -> vmode		3965363	0					
ANR	3965945	Identifier	core		3965363	0					
ANR	3965946	Identifier	vmode		3965363	1					
ANR	3965947	Identifier	true		3965363	1					
ANR	3965948	Statement	grd	4125:1:105804:105806	3965363	37	True				
ANR	3965949	Statement	=	4125:5:105808:105808	3965363	38	True				
ANR	3965950	Statement	R_NEW0	4125:7:105810:105815	3965363	39	True				
ANR	3965951	Statement	(	4125:14:105817:105817	3965363	40	True				
ANR	3965952	Statement	struct	4125:15:105818:105823	3965363	41	True				
ANR	3965953	Statement	agraph_refresh_data	4125:22:105825:105843	3965363	42	True				
ANR	3965954	Statement	)	4125:41:105844:105844	3965363	43	True				
ANR	3965955	ExpressionStatement		4125:42:105845:105845	3965363	44	True				
ANR	3965956	IfStatement	if ( ! grd )		3965363	45					
ANR	3965957	Condition	! grd	4126:5:105852:105855	3965363	0	True				
ANR	3965958	UnaryOperationExpression	! grd		3965363	0					
ANR	3965959	UnaryOperator	!		3965363	0					
ANR	3965960	Identifier	grd		3965363	1					
ANR	3965961	CompoundStatement		80:11:2553:2553	3965363	1					
ANR	3965962	ExpressionStatement	r_cons_canvas_free ( can )	4127:2:105862:105886	3965363	0	True				
ANR	3965963	CallExpression	r_cons_canvas_free ( can )		3965363	0					
ANR	3965964	Callee	r_cons_canvas_free		3965363	0					
ANR	3965965	Identifier	r_cons_canvas_free		3965363	0					
ANR	3965966	ArgumentList	can		3965363	1					
ANR	3965967	Argument	can		3965363	0					
ANR	3965968	Identifier	can		3965363	0					
ANR	3965969	ExpressionStatement	r_config_hold_restore ( hc )	4128:2:105890:105916	3965363	1	True				
ANR	3965970	CallExpression	r_config_hold_restore ( hc )		3965363	0					
ANR	3965971	Callee	r_config_hold_restore		3965363	0					
ANR	3965972	Identifier	r_config_hold_restore		3965363	0					
ANR	3965973	ArgumentList	hc		3965363	1					
ANR	3965974	Argument	hc		3965363	0					
ANR	3965975	Identifier	hc		3965363	0					
ANR	3965976	ExpressionStatement	r_config_hold_free ( hc )	4129:2:105920:105943	3965363	2	True				
ANR	3965977	CallExpression	r_config_hold_free ( hc )		3965363	0					
ANR	3965978	Callee	r_config_hold_free		3965363	0					
ANR	3965979	Identifier	r_config_hold_free		3965363	0					
ANR	3965980	ArgumentList	hc		3965363	1					
ANR	3965981	Argument	hc		3965363	0					
ANR	3965982	Identifier	hc		3965363	0					
ANR	3965983	ExpressionStatement	r_agraph_free ( g )	4130:2:105947:105964	3965363	3	True				
ANR	3965984	CallExpression	r_agraph_free ( g )		3965363	0					
ANR	3965985	Callee	r_agraph_free		3965363	0					
ANR	3965986	Identifier	r_agraph_free		3965363	0					
ANR	3965987	ArgumentList	g		3965363	1					
ANR	3965988	Argument	g		3965363	0					
ANR	3965989	Identifier	g		3965363	0					
ANR	3965990	ReturnStatement	return false ;	4131:2:105968:105980	3965363	4	True				
ANR	3965991	Identifier	false		3965363	0					
ANR	3965992	ExpressionStatement	grd -> g = g	4133:1:105986:105996	3965363	46	True				
ANR	3965993	AssignmentExpression	grd -> g = g		3965363	0		=			
ANR	3965994	PtrMemberAccess	grd -> g		3965363	0					
ANR	3965995	Identifier	grd		3965363	0					
ANR	3965996	Identifier	g		3965363	1					
ANR	3965997	Identifier	g		3965363	1					
ANR	3965998	ExpressionStatement	grd -> fs = is_interactive == 1	4134:1:105999:106028	3965363	47	True				
ANR	3965999	AssignmentExpression	grd -> fs = is_interactive == 1		3965363	0		=			
ANR	3966000	PtrMemberAccess	grd -> fs		3965363	0					
ANR	3966001	Identifier	grd		3965363	0					
ANR	3966002	Identifier	fs		3965363	1					
ANR	3966003	EqualityExpression	is_interactive == 1		3965363	1		==			
ANR	3966004	Identifier	is_interactive		3965363	0					
ANR	3966005	PrimaryExpression	1		3965363	1					
ANR	3966006	ExpressionStatement	grd -> core = core	4135:1:106031:106047	3965363	48	True				
ANR	3966007	AssignmentExpression	grd -> core = core		3965363	0		=			
ANR	3966008	PtrMemberAccess	grd -> core		3965363	0					
ANR	3966009	Identifier	grd		3965363	0					
ANR	3966010	Identifier	core		3965363	1					
ANR	3966011	Identifier	core		3965363	1					
ANR	3966012	ExpressionStatement	grd -> follow_offset = _fcn ? false : true	4136:1:106050:106090	3965363	49	True				
ANR	3966013	AssignmentExpression	grd -> follow_offset = _fcn ? false : true		3965363	0		=			
ANR	3966014	PtrMemberAccess	grd -> follow_offset		3965363	0					
ANR	3966015	Identifier	grd		3965363	0					
ANR	3966016	Identifier	follow_offset		3965363	1					
ANR	3966017	ConditionalExpression	_fcn ? false : true		3965363	1					
ANR	3966018	Condition	_fcn		3965363	0					
ANR	3966019	Identifier	_fcn		3965363	0					
ANR	3966020	Identifier	false		3965363	1					
ANR	3966021	Identifier	true		3965363	2					
ANR	3966022	ExpressionStatement	grd -> fcn = fcn != NULL ? & fcn : NULL	4137:1:106093:106127	3965363	50	True				
ANR	3966023	AssignmentExpression	grd -> fcn = fcn != NULL ? & fcn : NULL		3965363	0		=			
ANR	3966024	PtrMemberAccess	grd -> fcn		3965363	0					
ANR	3966025	Identifier	grd		3965363	0					
ANR	3966026	Identifier	fcn		3965363	1					
ANR	3966027	ConditionalExpression	fcn != NULL ? & fcn : NULL		3965363	1					
ANR	3966028	Condition	fcn != NULL		3965363	0					
ANR	3966029	EqualityExpression	fcn != NULL		3965363	0		!=			
ANR	3966030	Identifier	fcn		3965363	0					
ANR	3966031	Identifier	NULL		3965363	1					
ANR	3966032	UnaryOperationExpression	& fcn		3965363	1					
ANR	3966033	UnaryOperator	&		3965363	0					
ANR	3966034	Identifier	fcn		3965363	1					
ANR	3966035	Identifier	NULL		3965363	2					
ANR	3966036	ExpressionStatement	ret = agraph_refresh ( grd )	4138:1:106130:106156	3965363	51	True				
ANR	3966037	AssignmentExpression	ret = agraph_refresh ( grd )		3965363	0		=			
ANR	3966038	Identifier	ret		3965363	0					
ANR	3966039	CallExpression	agraph_refresh ( grd )		3965363	1					
ANR	3966040	Callee	agraph_refresh		3965363	0					
ANR	3966041	Identifier	agraph_refresh		3965363	0					
ANR	3966042	ArgumentList	grd		3965363	1					
ANR	3966043	Argument	grd		3965363	0					
ANR	3966044	Identifier	grd		3965363	0					
ANR	3966045	IfStatement	if ( ! ret || is_interactive != 1 )		3965363	52					
ANR	3966046	Condition	! ret || is_interactive != 1	4139:5:106163:106189	3965363	0	True				
ANR	3966047	OrExpression	! ret || is_interactive != 1		3965363	0		||			
ANR	3966048	UnaryOperationExpression	! ret		3965363	0					
ANR	3966049	UnaryOperator	!		3965363	0					
ANR	3966050	Identifier	ret		3965363	1					
ANR	3966051	EqualityExpression	is_interactive != 1		3965363	1		!=			
ANR	3966052	Identifier	is_interactive		3965363	0					
ANR	3966053	PrimaryExpression	1		3965363	1					
ANR	3966054	CompoundStatement		93:34:2887:2887	3965363	1					
ANR	3966055	ExpressionStatement	r_cons_newline ( )	4140:2:106196:106213	3965363	0	True				
ANR	3966056	CallExpression	r_cons_newline ( )		3965363	0					
ANR	3966057	Callee	r_cons_newline		3965363	0					
ANR	3966058	Identifier	r_cons_newline		3965363	0					
ANR	3966059	ArgumentList			3965363	1					
ANR	3966060	ExpressionStatement	exit_graph = true	4141:2:106217:106234	3965363	1	True				
ANR	3966061	AssignmentExpression	exit_graph = true		3965363	0		=			
ANR	3966062	Identifier	exit_graph		3965363	0					
ANR	3966063	Identifier	true		3965363	1					
ANR	3966064	ExpressionStatement	is_error = ! ret	4142:2:106238:106253	3965363	2	True				
ANR	3966065	AssignmentExpression	is_error = ! ret		3965363	0		=			
ANR	3966066	Identifier	is_error		3965363	0					
ANR	3966067	UnaryOperationExpression	! ret		3965363	1					
ANR	3966068	UnaryOperator	!		3965363	0					
ANR	3966069	Identifier	ret		3965363	1					
ANR	3966070	ExpressionStatement	core -> cons -> event_resize = NULL	4145:1:106260:106291	3965363	53	True				
ANR	3966071	AssignmentExpression	core -> cons -> event_resize = NULL		3965363	0		=			
ANR	3966072	PtrMemberAccess	core -> cons -> event_resize		3965363	0					
ANR	3966073	PtrMemberAccess	core -> cons		3965363	0					
ANR	3966074	Identifier	core		3965363	0					
ANR	3966075	Identifier	cons		3965363	1					
ANR	3966076	Identifier	event_resize		3965363	1					
ANR	3966077	Identifier	NULL		3965363	1					
ANR	3966078	ExpressionStatement	core -> cons -> event_data = grd	4146:1:106335:106363	3965363	54	True				
ANR	3966079	AssignmentExpression	core -> cons -> event_data = grd		3965363	0		=			
ANR	3966080	PtrMemberAccess	core -> cons -> event_data		3965363	0					
ANR	3966081	PtrMemberAccess	core -> cons		3965363	0					
ANR	3966082	Identifier	core		3965363	0					
ANR	3966083	Identifier	cons		3965363	1					
ANR	3966084	Identifier	event_data		3965363	1					
ANR	3966085	Identifier	grd		3965363	1					
ANR	3966086	ExpressionStatement	core -> cons -> event_resize = ( RConsEvent ) agraph_refresh_oneshot	4147:1:106366:106428	3965363	55	True				
ANR	3966087	AssignmentExpression	core -> cons -> event_resize = ( RConsEvent ) agraph_refresh_oneshot		3965363	0		=			
ANR	3966088	PtrMemberAccess	core -> cons -> event_resize		3965363	0					
ANR	3966089	PtrMemberAccess	core -> cons		3965363	0					
ANR	3966090	Identifier	core		3965363	0					
ANR	3966091	Identifier	cons		3965363	1					
ANR	3966092	Identifier	event_resize		3965363	1					
ANR	3966093	CastExpression	( RConsEvent ) agraph_refresh_oneshot		3965363	1					
ANR	3966094	CastTarget	RConsEvent		3965363	0					
ANR	3966095	Identifier	agraph_refresh_oneshot		3965363	1					
ANR	3966096	ExpressionStatement	"r_cons_break_push ( NULL , NULL )"	4149:1:106432:106462	3965363	56	True				
ANR	3966097	CallExpression	"r_cons_break_push ( NULL , NULL )"		3965363	0					
ANR	3966098	Callee	r_cons_break_push		3965363	0					
ANR	3966099	Identifier	r_cons_break_push		3965363	0					
ANR	3966100	ArgumentList	NULL		3965363	1					
ANR	3966101	Argument	NULL		3965363	0					
ANR	3966102	Identifier	NULL		3965363	0					
ANR	3966103	Argument	NULL		3965363	1					
ANR	3966104	Identifier	NULL		3965363	0					
ANR	3966105	WhileStatement	while ( ! exit_graph && ! is_error && ! r_cons_is_breaked ( ) )		3965363	57					
ANR	3966106	Condition	! exit_graph && ! is_error && ! r_cons_is_breaked ( )	4151:8:106473:106521	3965363	0	True				
ANR	3966107	AndExpression	! exit_graph && ! is_error && ! r_cons_is_breaked ( )		3965363	0		&&			
ANR	3966108	UnaryOperationExpression	! exit_graph		3965363	0					
ANR	3966109	UnaryOperator	!		3965363	0					
ANR	3966110	Identifier	exit_graph		3965363	1					
ANR	3966111	AndExpression	! is_error && ! r_cons_is_breaked ( )		3965363	1		&&			
ANR	3966112	UnaryOperationExpression	! is_error		3965363	0					
ANR	3966113	UnaryOperator	!		3965363	0					
ANR	3966114	Identifier	is_error		3965363	1					
ANR	3966115	UnaryOperationExpression	! r_cons_is_breaked ( )		3965363	1					
ANR	3966116	UnaryOperator	!		3965363	0					
ANR	3966117	CallExpression	r_cons_is_breaked ( )		3965363	1					
ANR	3966118	Callee	r_cons_is_breaked		3965363	0					
ANR	3966119	Identifier	r_cons_is_breaked		3965363	0					
ANR	3966120	ArgumentList			3965363	1					
ANR	3966121	CompoundStatement		136:2:3912:3927	3965363	1					
ANR	3966122	ExpressionStatement	w = r_cons_get_size ( & h )	4152:2:106528:106552	3965363	0	True				
ANR	3966123	AssignmentExpression	w = r_cons_get_size ( & h )		3965363	0		=			
ANR	3966124	Identifier	w		3965363	0					
ANR	3966125	CallExpression	r_cons_get_size ( & h )		3965363	1					
ANR	3966126	Callee	r_cons_get_size		3965363	0					
ANR	3966127	Identifier	r_cons_get_size		3965363	0					
ANR	3966128	ArgumentList	& h		3965363	1					
ANR	3966129	Argument	& h		3965363	0					
ANR	3966130	UnaryOperationExpression	& h		3965363	0					
ANR	3966131	UnaryOperator	&		3965363	0					
ANR	3966132	Identifier	h		3965363	1					
ANR	3966133	ExpressionStatement	"invscroll = r_config_get_i ( core -> config , ""graph.invscroll"" )"	4153:2:106556:106616	3965363	1	True				
ANR	3966134	AssignmentExpression	"invscroll = r_config_get_i ( core -> config , ""graph.invscroll"" )"		3965363	0		=			
ANR	3966135	Identifier	invscroll		3965363	0					
ANR	3966136	CallExpression	"r_config_get_i ( core -> config , ""graph.invscroll"" )"		3965363	1					
ANR	3966137	Callee	r_config_get_i		3965363	0					
ANR	3966138	Identifier	r_config_get_i		3965363	0					
ANR	3966139	ArgumentList	core -> config		3965363	1					
ANR	3966140	Argument	core -> config		3965363	0					
ANR	3966141	PtrMemberAccess	core -> config		3965363	0					
ANR	3966142	Identifier	core		3965363	0					
ANR	3966143	Identifier	config		3965363	1					
ANR	3966144	Argument	"""graph.invscroll"""		3965363	1					
ANR	3966145	PrimaryExpression	"""graph.invscroll"""		3965363	0					
ANR	3966146	ExpressionStatement	ret = agraph_refresh ( grd )	4154:2:106620:106646	3965363	2	True				
ANR	3966147	AssignmentExpression	ret = agraph_refresh ( grd )		3965363	0		=			
ANR	3966148	Identifier	ret		3965363	0					
ANR	3966149	CallExpression	agraph_refresh ( grd )		3965363	1					
ANR	3966150	Callee	agraph_refresh		3965363	0					
ANR	3966151	Identifier	agraph_refresh		3965363	0					
ANR	3966152	ArgumentList	grd		3965363	1					
ANR	3966153	Argument	grd		3965363	0					
ANR	3966154	Identifier	grd		3965363	0					
ANR	3966155	IfStatement	if ( ! ret )		3965363	3					
ANR	3966156	Condition	! ret	4156:6:106655:106658	3965363	0	True				
ANR	3966157	UnaryOperationExpression	! ret		3965363	0					
ANR	3966158	UnaryOperator	!		3965363	0					
ANR	3966159	Identifier	ret		3965363	1					
ANR	3966160	CompoundStatement		110:12:3356:3356	3965363	1					
ANR	3966161	ExpressionStatement	is_error = true	4157:3:106666:106681	3965363	0	True				
ANR	3966162	AssignmentExpression	is_error = true		3965363	0		=			
ANR	3966163	Identifier	is_error		3965363	0					
ANR	3966164	Identifier	true		3965363	1					
ANR	3966165	BreakStatement	break ;	4158:3:106686:106691	3965363	1	True				
ANR	3966166	ExpressionStatement	"showcursor ( core , false )"	4160:2:106699:106723	3965363	4	True				
ANR	3966167	CallExpression	"showcursor ( core , false )"		3965363	0					
ANR	3966168	Callee	showcursor		3965363	0					
ANR	3966169	Identifier	showcursor		3965363	0					
ANR	3966170	ArgumentList	core		3965363	1					
ANR	3966171	Argument	core		3965363	0					
ANR	3966172	Identifier	core		3965363	0					
ANR	3966173	Argument	false		3965363	1					
ANR	3966174	Identifier	false		3965363	0					
ANR	3966175	ExpressionStatement	okey = r_cons_readchar ( )	4163:2:106760:106785	3965363	5	True				
ANR	3966176	AssignmentExpression	okey = r_cons_readchar ( )		3965363	0		=			
ANR	3966177	Identifier	okey		3965363	0					
ANR	3966178	CallExpression	r_cons_readchar ( )		3965363	1					
ANR	3966179	Callee	r_cons_readchar		3965363	0					
ANR	3966180	Identifier	r_cons_readchar		3965363	0					
ANR	3966181	ArgumentList			3965363	1					
ANR	3966182	ExpressionStatement	key = r_cons_arrow_to_hjkl ( okey )	4164:2:106789:106822	3965363	6	True				
ANR	3966183	AssignmentExpression	key = r_cons_arrow_to_hjkl ( okey )		3965363	0		=			
ANR	3966184	Identifier	key		3965363	0					
ANR	3966185	CallExpression	r_cons_arrow_to_hjkl ( okey )		3965363	1					
ANR	3966186	Callee	r_cons_arrow_to_hjkl		3965363	0					
ANR	3966187	Identifier	r_cons_arrow_to_hjkl		3965363	0					
ANR	3966188	ArgumentList	okey		3965363	1					
ANR	3966189	Argument	okey		3965363	0					
ANR	3966190	Identifier	okey		3965363	0					
ANR	3966191	IfStatement	if ( core -> cons -> mouse_event )		3965363	7					
ANR	3966192	Condition	core -> cons -> mouse_event	4166:6:106831:106853	3965363	0	True				
ANR	3966193	PtrMemberAccess	core -> cons -> mouse_event		3965363	0					
ANR	3966194	PtrMemberAccess	core -> cons		3965363	0					
ANR	3966195	Identifier	core		3965363	0					
ANR	3966196	Identifier	cons		3965363	1					
ANR	3966197	Identifier	mouse_event		3965363	1					
ANR	3966198	CompoundStatement		120:31:3551:3551	3965363	1					
ANR	3966199	ExpressionStatement	"movspeed = r_config_get_i ( core -> config , ""scr.wheel.speed"" )"	4167:3:106861:106920	3965363	0	True				
ANR	3966200	AssignmentExpression	"movspeed = r_config_get_i ( core -> config , ""scr.wheel.speed"" )"		3965363	0		=			
ANR	3966201	Identifier	movspeed		3965363	0					
ANR	3966202	CallExpression	"r_config_get_i ( core -> config , ""scr.wheel.speed"" )"		3965363	1					
ANR	3966203	Callee	r_config_get_i		3965363	0					
ANR	3966204	Identifier	r_config_get_i		3965363	0					
ANR	3966205	ArgumentList	core -> config		3965363	1					
ANR	3966206	Argument	core -> config		3965363	0					
ANR	3966207	PtrMemberAccess	core -> config		3965363	0					
ANR	3966208	Identifier	core		3965363	0					
ANR	3966209	Identifier	config		3965363	1					
ANR	3966210	Argument	"""scr.wheel.speed"""		3965363	1					
ANR	3966211	PrimaryExpression	"""scr.wheel.speed"""		3965363	0					
ANR	3966212	SwitchStatement	switch ( key )		3965363	1					
ANR	3966213	Condition	key	4168:11:106933:106935	3965363	0	True				
ANR	3966214	Identifier	key		3965363	0					
ANR	3966215	CompoundStatement		122:16:3633:3633	3965363	1					
ANR	3966216	Label	case 'j' :	4169:3:106943:106951	3965363	0	True				
ANR	3966217	Label	case 'k' :	4170:3:106956:106964	3965363	1	True				
ANR	3966218	SwitchStatement	switch ( mousemode )		3965363	2					
ANR	3966219	Condition	mousemode	4171:12:106978:106986	3965363	0	True				
ANR	3966220	Identifier	mousemode		3965363	0					
ANR	3966221	CompoundStatement		125:23:3684:3684	3965363	1					
ANR	3966222	Label	case 0 :	4172:4:106995:107001	3965363	0	True				
ANR	3966223	BreakStatement	break ;	4172:12:107003:107008	3965363	1	True				
ANR	3966224	Label	case 1 :	4173:4:107014:107020	3965363	2	True				
ANR	3966225	ExpressionStatement	key = key == 'k' ? 'h' : 'l'	4173:12:107022:107048	3965363	3	True				
ANR	3966226	AssignmentExpression	key = key == 'k' ? 'h' : 'l'		3965363	0		=			
ANR	3966227	Identifier	key		3965363	0					
ANR	3966228	ConditionalExpression	key == 'k' ? 'h' : 'l'		3965363	1					
ANR	3966229	Condition	key == 'k'		3965363	0					
ANR	3966230	EqualityExpression	key == 'k'		3965363	0		==			
ANR	3966231	Identifier	key		3965363	0					
ANR	3966232	PrimaryExpression	'k'		3965363	1					
ANR	3966233	PrimaryExpression	'h'		3965363	1					
ANR	3966234	PrimaryExpression	'l'		3965363	2					
ANR	3966235	BreakStatement	break ;	4173:40:107050:107055	3965363	4	True				
ANR	3966236	Label	case 2 :	4174:4:107061:107067	3965363	5	True				
ANR	3966237	ExpressionStatement	key = key == 'k' ? 'J' : 'K'	4174:12:107069:107095	3965363	6	True				
ANR	3966238	AssignmentExpression	key = key == 'k' ? 'J' : 'K'		3965363	0		=			
ANR	3966239	Identifier	key		3965363	0					
ANR	3966240	ConditionalExpression	key == 'k' ? 'J' : 'K'		3965363	1					
ANR	3966241	Condition	key == 'k'		3965363	0					
ANR	3966242	EqualityExpression	key == 'k'		3965363	0		==			
ANR	3966243	Identifier	key		3965363	0					
ANR	3966244	PrimaryExpression	'k'		3965363	1					
ANR	3966245	PrimaryExpression	'J'		3965363	1					
ANR	3966246	PrimaryExpression	'K'		3965363	2					
ANR	3966247	BreakStatement	break ;	4174:40:107097:107102	3965363	7	True				
ANR	3966248	Label	case 3 :	4175:4:107108:107114	3965363	8	True				
ANR	3966249	ExpressionStatement	key = key == 'k' ? 'L' : 'H'	4175:12:107116:107142	3965363	9	True				
ANR	3966250	AssignmentExpression	key = key == 'k' ? 'L' : 'H'		3965363	0		=			
ANR	3966251	Identifier	key		3965363	0					
ANR	3966252	ConditionalExpression	key == 'k' ? 'L' : 'H'		3965363	1					
ANR	3966253	Condition	key == 'k'		3965363	0					
ANR	3966254	EqualityExpression	key == 'k'		3965363	0		==			
ANR	3966255	Identifier	key		3965363	0					
ANR	3966256	PrimaryExpression	'k'		3965363	1					
ANR	3966257	PrimaryExpression	'L'		3965363	1					
ANR	3966258	PrimaryExpression	'H'		3965363	2					
ANR	3966259	BreakStatement	break ;	4175:40:107144:107149	3965363	10	True				
ANR	3966260	BreakStatement	break ;	4177:4:107161:107166	3965363	3	True				
ANR	3966261	ElseStatement	else		3965363	0					
ANR	3966262	CompoundStatement		133:9:3877:3877	3965363	0					
ANR	3966263	ExpressionStatement	movspeed = g -> movspeed	4180:3:107187:107209	3965363	0	True				
ANR	3966264	AssignmentExpression	movspeed = g -> movspeed		3965363	0		=			
ANR	3966265	Identifier	movspeed		3965363	0					
ANR	3966266	PtrMemberAccess	g -> movspeed		3965363	1					
ANR	3966267	Identifier	g		3965363	0					
ANR	3966268	Identifier	movspeed		3965363	1					
ANR	3966269	IdentifierDeclStatement	const char * cmd ;	4182:2:107217:107232	3965363	8	True				
ANR	3966270	IdentifierDecl	* cmd		3965363	0					
ANR	3966271	IdentifierDeclType	const char *		3965363	0					
ANR	3966272	Identifier	cmd		3965363	1					
ANR	3966273	SwitchStatement	switch ( key )		3965363	9					
ANR	3966274	Condition	key	4183:10:107244:107246	3965363	0	True				
ANR	3966275	Identifier	key		3965363	0					
ANR	3966276	CompoundStatement		137:15:3944:3944	3965363	1					
ANR	3966277	Label	case '-' :	4184:2:107253:107261	3965363	0	True				
ANR	3966278	ExpressionStatement	"agraph_set_zoom ( g , g -> zoom - ZOOM_STEP )"	4185:3:107266:107306	3965363	1	True				
ANR	3966279	CallExpression	"agraph_set_zoom ( g , g -> zoom - ZOOM_STEP )"		3965363	0					
ANR	3966280	Callee	agraph_set_zoom		3965363	0					
ANR	3966281	Identifier	agraph_set_zoom		3965363	0					
ANR	3966282	ArgumentList	g		3965363	1					
ANR	3966283	Argument	g		3965363	0					
ANR	3966284	Identifier	g		3965363	0					
ANR	3966285	Argument	g -> zoom - ZOOM_STEP		3965363	1					
ANR	3966286	AdditiveExpression	g -> zoom - ZOOM_STEP		3965363	0		-			
ANR	3966287	PtrMemberAccess	g -> zoom		3965363	0					
ANR	3966288	Identifier	g		3965363	0					
ANR	3966289	Identifier	zoom		3965363	1					
ANR	3966290	Identifier	ZOOM_STEP		3965363	1					
ANR	3966291	ExpressionStatement	g -> force_update_seek = true	4186:3:107311:107338	3965363	2	True				
ANR	3966292	AssignmentExpression	g -> force_update_seek = true		3965363	0		=			
ANR	3966293	PtrMemberAccess	g -> force_update_seek		3965363	0					
ANR	3966294	Identifier	g		3965363	0					
ANR	3966295	Identifier	force_update_seek		3965363	1					
ANR	3966296	Identifier	true		3965363	1					
ANR	3966297	BreakStatement	break ;	4187:3:107343:107348	3965363	3	True				
ANR	3966298	Label	case '+' :	4188:2:107352:107360	3965363	4	True				
ANR	3966299	ExpressionStatement	"agraph_set_zoom ( g , g -> zoom + ZOOM_STEP )"	4189:3:107365:107405	3965363	5	True				
ANR	3966300	CallExpression	"agraph_set_zoom ( g , g -> zoom + ZOOM_STEP )"		3965363	0					
ANR	3966301	Callee	agraph_set_zoom		3965363	0					
ANR	3966302	Identifier	agraph_set_zoom		3965363	0					
ANR	3966303	ArgumentList	g		3965363	1					
ANR	3966304	Argument	g		3965363	0					
ANR	3966305	Identifier	g		3965363	0					
ANR	3966306	Argument	g -> zoom + ZOOM_STEP		3965363	1					
ANR	3966307	AdditiveExpression	g -> zoom + ZOOM_STEP		3965363	0		+			
ANR	3966308	PtrMemberAccess	g -> zoom		3965363	0					
ANR	3966309	Identifier	g		3965363	0					
ANR	3966310	Identifier	zoom		3965363	1					
ANR	3966311	Identifier	ZOOM_STEP		3965363	1					
ANR	3966312	ExpressionStatement	g -> force_update_seek = true	4190:3:107410:107437	3965363	6	True				
ANR	3966313	AssignmentExpression	g -> force_update_seek = true		3965363	0		=			
ANR	3966314	PtrMemberAccess	g -> force_update_seek		3965363	0					
ANR	3966315	Identifier	g		3965363	0					
ANR	3966316	Identifier	force_update_seek		3965363	1					
ANR	3966317	Identifier	true		3965363	1					
ANR	3966318	BreakStatement	break ;	4191:3:107442:107447	3965363	7	True				
ANR	3966319	Label	case '0' :	4192:2:107451:107459	3965363	8	True				
ANR	3966320	ExpressionStatement	"agraph_set_zoom ( g , ZOOM_DEFAULT )"	4193:3:107464:107497	3965363	9	True				
ANR	3966321	CallExpression	"agraph_set_zoom ( g , ZOOM_DEFAULT )"		3965363	0					
ANR	3966322	Callee	agraph_set_zoom		3965363	0					
ANR	3966323	Identifier	agraph_set_zoom		3965363	0					
ANR	3966324	ArgumentList	g		3965363	1					
ANR	3966325	Argument	g		3965363	0					
ANR	3966326	Identifier	g		3965363	0					
ANR	3966327	Argument	ZOOM_DEFAULT		3965363	1					
ANR	3966328	Identifier	ZOOM_DEFAULT		3965363	0					
ANR	3966329	ExpressionStatement	"agraph_update_seek ( g , get_anode ( g -> curnode ) , true )"	4194:3:107502:107554	3965363	10	True				
ANR	3966330	CallExpression	"agraph_update_seek ( g , get_anode ( g -> curnode ) , true )"		3965363	0					
ANR	3966331	Callee	agraph_update_seek		3965363	0					
ANR	3966332	Identifier	agraph_update_seek		3965363	0					
ANR	3966333	ArgumentList	g		3965363	1					
ANR	3966334	Argument	g		3965363	0					
ANR	3966335	Identifier	g		3965363	0					
ANR	3966336	Argument	get_anode ( g -> curnode )		3965363	1					
ANR	3966337	CallExpression	get_anode ( g -> curnode )		3965363	0					
ANR	3966338	Callee	get_anode		3965363	0					
ANR	3966339	Identifier	get_anode		3965363	0					
ANR	3966340	ArgumentList	g -> curnode		3965363	1					
ANR	3966341	Argument	g -> curnode		3965363	0					
ANR	3966342	PtrMemberAccess	g -> curnode		3965363	0					
ANR	3966343	Identifier	g		3965363	0					
ANR	3966344	Identifier	curnode		3965363	1					
ANR	3966345	Argument	true		3965363	2					
ANR	3966346	Identifier	true		3965363	0					
ANR	3966347	BreakStatement	break ;	4196:3:107598:107603	3965363	11	True				
ANR	3966348	Label	case '=' :	4197:2:107607:107615	3965363	12	True				
ANR	3966349	CompoundStatement		155:3:4396:4456	3965363	13					
ANR	3966350	ExpressionStatement	"showcursor ( core , true )"	4199:3:107646:107669	3965363	0	True				
ANR	3966351	CallExpression	"showcursor ( core , true )"		3965363	0					
ANR	3966352	Callee	showcursor		3965363	0					
ANR	3966353	Identifier	showcursor		3965363	0					
ANR	3966354	ArgumentList	core		3965363	1					
ANR	3966355	Argument	core		3965363	0					
ANR	3966356	Identifier	core		3965363	0					
ANR	3966357	Argument	true		3965363	1					
ANR	3966358	Identifier	true		3965363	0					
ANR	3966359	IdentifierDeclStatement	const char * buf = NULL ;	4200:3:107674:107696	3965363	1	True				
ANR	3966360	IdentifierDecl	* buf = NULL		3965363	0					
ANR	3966361	IdentifierDeclType	const char *		3965363	0					
ANR	3966362	Identifier	buf		3965363	1					
ANR	3966363	AssignmentExpression	* buf = NULL		3965363	2		=			
ANR	3966364	Identifier	NULL		3965363	0					
ANR	3966365	Identifier	NULL		3965363	1					
ANR	3966366	IdentifierDeclStatement	"const char * cmd = r_config_get ( core -> config , ""cmd.gprompt"" ) ;"	4201:3:107701:107761	3965363	2	True				
ANR	3966367	IdentifierDecl	"* cmd = r_config_get ( core -> config , ""cmd.gprompt"" )"		3965363	0					
ANR	3966368	IdentifierDeclType	const char *		3965363	0					
ANR	3966369	Identifier	cmd		3965363	1					
ANR	3966370	AssignmentExpression	"* cmd = r_config_get ( core -> config , ""cmd.gprompt"" )"		3965363	2		=			
ANR	3966371	Identifier	cmd		3965363	0					
ANR	3966372	CallExpression	"r_config_get ( core -> config , ""cmd.gprompt"" )"		3965363	1					
ANR	3966373	Callee	r_config_get		3965363	0					
ANR	3966374	Identifier	r_config_get		3965363	0					
ANR	3966375	ArgumentList	core -> config		3965363	1					
ANR	3966376	Argument	core -> config		3965363	0					
ANR	3966377	PtrMemberAccess	core -> config		3965363	0					
ANR	3966378	Identifier	core		3965363	0					
ANR	3966379	Identifier	config		3965363	1					
ANR	3966380	Argument	"""cmd.gprompt"""		3965363	1					
ANR	3966381	PrimaryExpression	"""cmd.gprompt"""		3965363	0					
ANR	3966382	ExpressionStatement	"r_line_set_prompt ( ""cmd.gprompt> "" )"	4202:3:107766:107801	3965363	3	True				
ANR	3966383	CallExpression	"r_line_set_prompt ( ""cmd.gprompt> "" )"		3965363	0					
ANR	3966384	Callee	r_line_set_prompt		3965363	0					
ANR	3966385	Identifier	r_line_set_prompt		3965363	0					
ANR	3966386	ArgumentList	"""cmd.gprompt> """		3965363	1					
ANR	3966387	Argument	"""cmd.gprompt> """		3965363	0					
ANR	3966388	PrimaryExpression	"""cmd.gprompt> """		3965363	0					
ANR	3966389	ExpressionStatement	core -> cons -> line -> contents = strdup ( cmd )	4203:3:107806:107847	3965363	4	True				
ANR	3966390	AssignmentExpression	core -> cons -> line -> contents = strdup ( cmd )		3965363	0		=			
ANR	3966391	PtrMemberAccess	core -> cons -> line -> contents		3965363	0					
ANR	3966392	PtrMemberAccess	core -> cons -> line		3965363	0					
ANR	3966393	PtrMemberAccess	core -> cons		3965363	0					
ANR	3966394	Identifier	core		3965363	0					
ANR	3966395	Identifier	cons		3965363	1					
ANR	3966396	Identifier	line		3965363	1					
ANR	3966397	Identifier	contents		3965363	1					
ANR	3966398	CallExpression	strdup ( cmd )		3965363	1					
ANR	3966399	Callee	strdup		3965363	0					
ANR	3966400	Identifier	strdup		3965363	0					
ANR	3966401	ArgumentList	cmd		3965363	1					
ANR	3966402	Argument	cmd		3965363	0					
ANR	3966403	Identifier	cmd		3965363	0					
ANR	3966404	ExpressionStatement	buf = r_line_readline ( )	4204:3:107852:107876	3965363	5	True				
ANR	3966405	AssignmentExpression	buf = r_line_readline ( )		3965363	0		=			
ANR	3966406	Identifier	buf		3965363	0					
ANR	3966407	CallExpression	r_line_readline ( )		3965363	1					
ANR	3966408	Callee	r_line_readline		3965363	0					
ANR	3966409	Identifier	r_line_readline		3965363	0					
ANR	3966410	ArgumentList			3965363	1					
ANR	3966411	ExpressionStatement	core -> cons -> line -> contents = NULL	4205:3:107881:107914	3965363	6	True				
ANR	3966412	AssignmentExpression	core -> cons -> line -> contents = NULL		3965363	0		=			
ANR	3966413	PtrMemberAccess	core -> cons -> line -> contents		3965363	0					
ANR	3966414	PtrMemberAccess	core -> cons -> line		3965363	0					
ANR	3966415	PtrMemberAccess	core -> cons		3965363	0					
ANR	3966416	Identifier	core		3965363	0					
ANR	3966417	Identifier	cons		3965363	1					
ANR	3966418	Identifier	line		3965363	1					
ANR	3966419	Identifier	contents		3965363	1					
ANR	3966420	Identifier	NULL		3965363	1					
ANR	3966421	ExpressionStatement	"r_config_set ( core -> config , ""cmd.gprompt"" , buf )"	4206:3:107919:107966	3965363	7	True				
ANR	3966422	CallExpression	"r_config_set ( core -> config , ""cmd.gprompt"" , buf )"		3965363	0					
ANR	3966423	Callee	r_config_set		3965363	0					
ANR	3966424	Identifier	r_config_set		3965363	0					
ANR	3966425	ArgumentList	core -> config		3965363	1					
ANR	3966426	Argument	core -> config		3965363	0					
ANR	3966427	PtrMemberAccess	core -> config		3965363	0					
ANR	3966428	Identifier	core		3965363	0					
ANR	3966429	Identifier	config		3965363	1					
ANR	3966430	Argument	"""cmd.gprompt"""		3965363	1					
ANR	3966431	PrimaryExpression	"""cmd.gprompt"""		3965363	0					
ANR	3966432	Argument	buf		3965363	2					
ANR	3966433	Identifier	buf		3965363	0					
ANR	3966434	ExpressionStatement	"showcursor ( core , false )"	4207:3:107971:107995	3965363	8	True				
ANR	3966435	CallExpression	"showcursor ( core , false )"		3965363	0					
ANR	3966436	Callee	showcursor		3965363	0					
ANR	3966437	Identifier	showcursor		3965363	0					
ANR	3966438	ArgumentList	core		3965363	1					
ANR	3966439	Argument	core		3965363	0					
ANR	3966440	Identifier	core		3965363	0					
ANR	3966441	Argument	false		3965363	1					
ANR	3966442	Identifier	false		3965363	0					
ANR	3966443	BreakStatement	break ;	4209:2:108003:108008	3965363	14	True				
ANR	3966444	Label	case '|' :	4210:2:108012:108020	3965363	15	True				
ANR	3966445	CompoundStatement		166:4:4726:4779	3965363	16					
ANR	3966446	IdentifierDeclStatement	"int e = r_config_get_i ( core -> config , ""graph.layout"" ) ;"	4212:4:108031:108084	3965363	0	True				
ANR	3966447	IdentifierDecl	"e = r_config_get_i ( core -> config , ""graph.layout"" )"		3965363	0					
ANR	3966448	IdentifierDeclType	int		3965363	0					
ANR	3966449	Identifier	e		3965363	1					
ANR	3966450	AssignmentExpression	"e = r_config_get_i ( core -> config , ""graph.layout"" )"		3965363	2		=			
ANR	3966451	Identifier	e		3965363	0					
ANR	3966452	CallExpression	"r_config_get_i ( core -> config , ""graph.layout"" )"		3965363	1					
ANR	3966453	Callee	r_config_get_i		3965363	0					
ANR	3966454	Identifier	r_config_get_i		3965363	0					
ANR	3966455	ArgumentList	core -> config		3965363	1					
ANR	3966456	Argument	core -> config		3965363	0					
ANR	3966457	PtrMemberAccess	core -> config		3965363	0					
ANR	3966458	Identifier	core		3965363	0					
ANR	3966459	Identifier	config		3965363	1					
ANR	3966460	Argument	"""graph.layout"""		3965363	1					
ANR	3966461	PrimaryExpression	"""graph.layout"""		3965363	0					
ANR	3966462	IfStatement	if ( ++ e > 1 )		3965363	1					
ANR	3966463	Condition	++ e > 1	4213:8:108094:108100	3965363	0	True				
ANR	3966464	RelationalExpression	++ e > 1		3965363	0		>			
ANR	3966465	UnaryExpression	++ e		3965363	0					
ANR	3966466	IncDec	++		3965363	0					
ANR	3966467	Identifier	e		3965363	1					
ANR	3966468	PrimaryExpression	1		3965363	1					
ANR	3966469	CompoundStatement		167:17:4798:4798	3965363	1					
ANR	3966470	ExpressionStatement	e = 0	4214:5:108110:108115	3965363	0	True				
ANR	3966471	AssignmentExpression	e = 0		3965363	0		=			
ANR	3966472	Identifier	e		3965363	0					
ANR	3966473	PrimaryExpression	0		3965363	1					
ANR	3966474	ExpressionStatement	"r_config_set_i ( core -> config , ""graph.layout"" , e )"	4216:4:108127:108175	3965363	2	True				
ANR	3966475	CallExpression	"r_config_set_i ( core -> config , ""graph.layout"" , e )"		3965363	0					
ANR	3966476	Callee	r_config_set_i		3965363	0					
ANR	3966477	Identifier	r_config_set_i		3965363	0					
ANR	3966478	ArgumentList	core -> config		3965363	1					
ANR	3966479	Argument	core -> config		3965363	0					
ANR	3966480	PtrMemberAccess	core -> config		3965363	0					
ANR	3966481	Identifier	core		3965363	0					
ANR	3966482	Identifier	config		3965363	1					
ANR	3966483	Argument	"""graph.layout"""		3965363	1					
ANR	3966484	PrimaryExpression	"""graph.layout"""		3965363	0					
ANR	3966485	Argument	e		3965363	2					
ANR	3966486	Identifier	e		3965363	0					
ANR	3966487	ExpressionStatement	"g -> layout = r_config_get_i ( core -> config , ""graph.layout"" )"	4217:4:108181:108238	3965363	3	True				
ANR	3966488	AssignmentExpression	"g -> layout = r_config_get_i ( core -> config , ""graph.layout"" )"		3965363	0		=			
ANR	3966489	PtrMemberAccess	g -> layout		3965363	0					
ANR	3966490	Identifier	g		3965363	0					
ANR	3966491	Identifier	layout		3965363	1					
ANR	3966492	CallExpression	"r_config_get_i ( core -> config , ""graph.layout"" )"		3965363	1					
ANR	3966493	Callee	r_config_get_i		3965363	0					
ANR	3966494	Identifier	r_config_get_i		3965363	0					
ANR	3966495	ArgumentList	core -> config		3965363	1					
ANR	3966496	Argument	core -> config		3965363	0					
ANR	3966497	PtrMemberAccess	core -> config		3965363	0					
ANR	3966498	Identifier	core		3965363	0					
ANR	3966499	Identifier	config		3965363	1					
ANR	3966500	Argument	"""graph.layout"""		3965363	1					
ANR	3966501	PrimaryExpression	"""graph.layout"""		3965363	0					
ANR	3966502	ExpressionStatement	g -> need_update_dim = true	4218:4:108244:108269	3965363	4	True				
ANR	3966503	AssignmentExpression	g -> need_update_dim = true		3965363	0		=			
ANR	3966504	PtrMemberAccess	g -> need_update_dim		3965363	0					
ANR	3966505	Identifier	g		3965363	0					
ANR	3966506	Identifier	need_update_dim		3965363	1					
ANR	3966507	Identifier	true		3965363	1					
ANR	3966508	ExpressionStatement	g -> need_set_layout = true	4219:4:108275:108300	3965363	5	True				
ANR	3966509	AssignmentExpression	g -> need_set_layout = true		3965363	0		=			
ANR	3966510	PtrMemberAccess	g -> need_set_layout		3965363	0					
ANR	3966511	Identifier	g		3965363	0					
ANR	3966512	Identifier	need_set_layout		3965363	1					
ANR	3966513	Identifier	true		3965363	1					
ANR	3966514	ExpressionStatement	discroll = 0	4221:3:108310:108322	3965363	17	True				
ANR	3966515	AssignmentExpression	discroll = 0		3965363	0		=			
ANR	3966516	Identifier	discroll		3965363	0					
ANR	3966517	PrimaryExpression	0		3965363	1					
ANR	3966518	ExpressionStatement	"agraph_update_seek ( g , get_anode ( g -> curnode ) , true )"	4222:3:108327:108379	3965363	18	True				
ANR	3966519	CallExpression	"agraph_update_seek ( g , get_anode ( g -> curnode ) , true )"		3965363	0					
ANR	3966520	Callee	agraph_update_seek		3965363	0					
ANR	3966521	Identifier	agraph_update_seek		3965363	0					
ANR	3966522	ArgumentList	g		3965363	1					
ANR	3966523	Argument	g		3965363	0					
ANR	3966524	Identifier	g		3965363	0					
ANR	3966525	Argument	get_anode ( g -> curnode )		3965363	1					
ANR	3966526	CallExpression	get_anode ( g -> curnode )		3965363	0					
ANR	3966527	Callee	get_anode		3965363	0					
ANR	3966528	Identifier	get_anode		3965363	0					
ANR	3966529	ArgumentList	g -> curnode		3965363	1					
ANR	3966530	Argument	g -> curnode		3965363	0					
ANR	3966531	PtrMemberAccess	g -> curnode		3965363	0					
ANR	3966532	Identifier	g		3965363	0					
ANR	3966533	Identifier	curnode		3965363	1					
ANR	3966534	Argument	true		3965363	2					
ANR	3966535	Identifier	true		3965363	0					
ANR	3966536	BreakStatement	break ;	4223:3:108384:108389	3965363	19	True				
ANR	3966537	Label	case 'e' :	4224:2:108393:108401	3965363	20	True				
ANR	3966538	CompoundStatement		180:4:5107:5159	3965363	21					
ANR	3966539	IdentifierDeclStatement	"int e = r_config_get_i ( core -> config , ""graph.edges"" ) ;"	4226:4:108412:108464	3965363	0	True				
ANR	3966540	IdentifierDecl	"e = r_config_get_i ( core -> config , ""graph.edges"" )"		3965363	0					
ANR	3966541	IdentifierDeclType	int		3965363	0					
ANR	3966542	Identifier	e		3965363	1					
ANR	3966543	AssignmentExpression	"e = r_config_get_i ( core -> config , ""graph.edges"" )"		3965363	2		=			
ANR	3966544	Identifier	e		3965363	0					
ANR	3966545	CallExpression	"r_config_get_i ( core -> config , ""graph.edges"" )"		3965363	1					
ANR	3966546	Callee	r_config_get_i		3965363	0					
ANR	3966547	Identifier	r_config_get_i		3965363	0					
ANR	3966548	ArgumentList	core -> config		3965363	1					
ANR	3966549	Argument	core -> config		3965363	0					
ANR	3966550	PtrMemberAccess	core -> config		3965363	0					
ANR	3966551	Identifier	core		3965363	0					
ANR	3966552	Identifier	config		3965363	1					
ANR	3966553	Argument	"""graph.edges"""		3965363	1					
ANR	3966554	PrimaryExpression	"""graph.edges"""		3965363	0					
ANR	3966555	ExpressionStatement	e ++	4227:4:108470:108473	3965363	1	True				
ANR	3966556	PostIncDecOperationExpression	e ++		3965363	0					
ANR	3966557	Identifier	e		3965363	0					
ANR	3966558	IncDec	++		3965363	1					
ANR	3966559	IfStatement	if ( e > 2 )		3965363	2					
ANR	3966560	Condition	e > 2	4228:8:108483:108487	3965363	0	True				
ANR	3966561	RelationalExpression	e > 2		3965363	0		>			
ANR	3966562	Identifier	e		3965363	0					
ANR	3966563	PrimaryExpression	2		3965363	1					
ANR	3966564	CompoundStatement		182:15:5185:5185	3965363	1					
ANR	3966565	ExpressionStatement	e = 0	4229:5:108497:108502	3965363	0	True				
ANR	3966566	AssignmentExpression	e = 0		3965363	0		=			
ANR	3966567	Identifier	e		3965363	0					
ANR	3966568	PrimaryExpression	0		3965363	1					
ANR	3966569	ExpressionStatement	"r_config_set_i ( core -> config , ""graph.edges"" , e )"	4231:4:108514:108561	3965363	3	True				
ANR	3966570	CallExpression	"r_config_set_i ( core -> config , ""graph.edges"" , e )"		3965363	0					
ANR	3966571	Callee	r_config_set_i		3965363	0					
ANR	3966572	Identifier	r_config_set_i		3965363	0					
ANR	3966573	ArgumentList	core -> config		3965363	1					
ANR	3966574	Argument	core -> config		3965363	0					
ANR	3966575	PtrMemberAccess	core -> config		3965363	0					
ANR	3966576	Identifier	core		3965363	0					
ANR	3966577	Identifier	config		3965363	1					
ANR	3966578	Argument	"""graph.edges"""		3965363	1					
ANR	3966579	PrimaryExpression	"""graph.edges"""		3965363	0					
ANR	3966580	Argument	e		3965363	2					
ANR	3966581	Identifier	e		3965363	0					
ANR	3966582	ExpressionStatement	g -> edgemode = e	4232:4:108567:108582	3965363	4	True				
ANR	3966583	AssignmentExpression	g -> edgemode = e		3965363	0		=			
ANR	3966584	PtrMemberAccess	g -> edgemode		3965363	0					
ANR	3966585	Identifier	g		3965363	0					
ANR	3966586	Identifier	edgemode		3965363	1					
ANR	3966587	Identifier	e		3965363	1					
ANR	3966588	ExpressionStatement	g -> need_update_dim = true	4233:4:108588:108613	3965363	5	True				
ANR	3966589	AssignmentExpression	g -> need_update_dim = true		3965363	0		=			
ANR	3966590	PtrMemberAccess	g -> need_update_dim		3965363	0					
ANR	3966591	Identifier	g		3965363	0					
ANR	3966592	Identifier	need_update_dim		3965363	1					
ANR	3966593	Identifier	true		3965363	1					
ANR	3966594	ExpressionStatement	"get_bbupdate ( g , core , fcn )"	4234:4:108619:108646	3965363	6	True				
ANR	3966595	CallExpression	"get_bbupdate ( g , core , fcn )"		3965363	0					
ANR	3966596	Callee	get_bbupdate		3965363	0					
ANR	3966597	Identifier	get_bbupdate		3965363	0					
ANR	3966598	ArgumentList	g		3965363	1					
ANR	3966599	Argument	g		3965363	0					
ANR	3966600	Identifier	g		3965363	0					
ANR	3966601	Argument	core		3965363	1					
ANR	3966602	Identifier	core		3965363	0					
ANR	3966603	Argument	fcn		3965363	2					
ANR	3966604	Identifier	fcn		3965363	0					
ANR	3966605	BreakStatement	break ;	4236:3:108656:108661	3965363	22	True				
ANR	3966606	Label	case 'b' :	4237:2:108665:108673	3965363	23	True				
ANR	3966607	ExpressionStatement	"r_core_visual_browse ( core , """" )"	4238:3:108678:108709	3965363	24	True				
ANR	3966608	CallExpression	"r_core_visual_browse ( core , """" )"		3965363	0					
ANR	3966609	Callee	r_core_visual_browse		3965363	0					
ANR	3966610	Identifier	r_core_visual_browse		3965363	0					
ANR	3966611	ArgumentList	core		3965363	1					
ANR	3966612	Argument	core		3965363	0					
ANR	3966613	Identifier	core		3965363	0					
ANR	3966614	Argument	""""""		3965363	1					
ANR	3966615	PrimaryExpression	""""""		3965363	0					
ANR	3966616	BreakStatement	break ;	4239:3:108714:108719	3965363	25	True				
ANR	3966617	Label	case 'E' :	4240:2:108723:108731	3965363	26	True				
ANR	3966618	CompoundStatement		196:4:5437:5492	3965363	27					
ANR	3966619	IdentifierDeclStatement	"int e = r_config_get_i ( core -> config , ""graph.linemode"" ) ;"	4242:4:108742:108797	3965363	0	True				
ANR	3966620	IdentifierDecl	"e = r_config_get_i ( core -> config , ""graph.linemode"" )"		3965363	0					
ANR	3966621	IdentifierDeclType	int		3965363	0					
ANR	3966622	Identifier	e		3965363	1					
ANR	3966623	AssignmentExpression	"e = r_config_get_i ( core -> config , ""graph.linemode"" )"		3965363	2		=			
ANR	3966624	Identifier	e		3965363	0					
ANR	3966625	CallExpression	"r_config_get_i ( core -> config , ""graph.linemode"" )"		3965363	1					
ANR	3966626	Callee	r_config_get_i		3965363	0					
ANR	3966627	Identifier	r_config_get_i		3965363	0					
ANR	3966628	ArgumentList	core -> config		3965363	1					
ANR	3966629	Argument	core -> config		3965363	0					
ANR	3966630	PtrMemberAccess	core -> config		3965363	0					
ANR	3966631	Identifier	core		3965363	0					
ANR	3966632	Identifier	config		3965363	1					
ANR	3966633	Argument	"""graph.linemode"""		3965363	1					
ANR	3966634	PrimaryExpression	"""graph.linemode"""		3965363	0					
ANR	3966635	ExpressionStatement	e --	4243:4:108803:108806	3965363	1	True				
ANR	3966636	PostIncDecOperationExpression	e --		3965363	0					
ANR	3966637	Identifier	e		3965363	0					
ANR	3966638	IncDec	--		3965363	1					
ANR	3966639	IfStatement	if ( e < 0 )		3965363	2					
ANR	3966640	Condition	e < 0	4244:8:108816:108820	3965363	0	True				
ANR	3966641	RelationalExpression	e < 0		3965363	0		<			
ANR	3966642	Identifier	e		3965363	0					
ANR	3966643	PrimaryExpression	0		3965363	1					
ANR	3966644	CompoundStatement		198:15:5518:5518	3965363	1					
ANR	3966645	ExpressionStatement	e = 1	4245:5:108830:108835	3965363	0	True				
ANR	3966646	AssignmentExpression	e = 1		3965363	0		=			
ANR	3966647	Identifier	e		3965363	0					
ANR	3966648	PrimaryExpression	1		3965363	1					
ANR	3966649	ExpressionStatement	"r_config_set_i ( core -> config , ""graph.linemode"" , e )"	4247:4:108847:108897	3965363	3	True				
ANR	3966650	CallExpression	"r_config_set_i ( core -> config , ""graph.linemode"" , e )"		3965363	0					
ANR	3966651	Callee	r_config_set_i		3965363	0					
ANR	3966652	Identifier	r_config_set_i		3965363	0					
ANR	3966653	ArgumentList	core -> config		3965363	1					
ANR	3966654	Argument	core -> config		3965363	0					
ANR	3966655	PtrMemberAccess	core -> config		3965363	0					
ANR	3966656	Identifier	core		3965363	0					
ANR	3966657	Identifier	config		3965363	1					
ANR	3966658	Argument	"""graph.linemode"""		3965363	1					
ANR	3966659	PrimaryExpression	"""graph.linemode"""		3965363	0					
ANR	3966660	Argument	e		3965363	2					
ANR	3966661	Identifier	e		3965363	0					
ANR	3966662	ExpressionStatement	g -> can -> linemode = e	4248:4:108903:108923	3965363	4	True				
ANR	3966663	AssignmentExpression	g -> can -> linemode = e		3965363	0		=			
ANR	3966664	PtrMemberAccess	g -> can -> linemode		3965363	0					
ANR	3966665	PtrMemberAccess	g -> can		3965363	0					
ANR	3966666	Identifier	g		3965363	0					
ANR	3966667	Identifier	can		3965363	1					
ANR	3966668	Identifier	linemode		3965363	1					
ANR	3966669	Identifier	e		3965363	1					
ANR	3966670	ExpressionStatement	"get_bbupdate ( g , core , fcn )"	4249:4:108929:108956	3965363	5	True				
ANR	3966671	CallExpression	"get_bbupdate ( g , core , fcn )"		3965363	0					
ANR	3966672	Callee	get_bbupdate		3965363	0					
ANR	3966673	Identifier	get_bbupdate		3965363	0					
ANR	3966674	ArgumentList	g		3965363	1					
ANR	3966675	Argument	g		3965363	0					
ANR	3966676	Identifier	g		3965363	0					
ANR	3966677	Argument	core		3965363	1					
ANR	3966678	Identifier	core		3965363	0					
ANR	3966679	Argument	fcn		3965363	2					
ANR	3966680	Identifier	fcn		3965363	0					
ANR	3966681	BreakStatement	break ;	4251:3:108966:108971	3965363	28	True				
ANR	3966682	Label	case 13 :	4252:2:108975:108982	3965363	29	True				
ANR	3966683	ExpressionStatement	"agraph_update_seek ( g , get_anode ( g -> curnode ) , true )"	4253:3:108987:109039	3965363	30	True				
ANR	3966684	CallExpression	"agraph_update_seek ( g , get_anode ( g -> curnode ) , true )"		3965363	0					
ANR	3966685	Callee	agraph_update_seek		3965363	0					
ANR	3966686	Identifier	agraph_update_seek		3965363	0					
ANR	3966687	ArgumentList	g		3965363	1					
ANR	3966688	Argument	g		3965363	0					
ANR	3966689	Identifier	g		3965363	0					
ANR	3966690	Argument	get_anode ( g -> curnode )		3965363	1					
ANR	3966691	CallExpression	get_anode ( g -> curnode )		3965363	0					
ANR	3966692	Callee	get_anode		3965363	0					
ANR	3966693	Identifier	get_anode		3965363	0					
ANR	3966694	ArgumentList	g -> curnode		3965363	1					
ANR	3966695	Argument	g -> curnode		3965363	0					
ANR	3966696	PtrMemberAccess	g -> curnode		3965363	0					
ANR	3966697	Identifier	g		3965363	0					
ANR	3966698	Identifier	curnode		3965363	1					
ANR	3966699	Argument	true		3965363	2					
ANR	3966700	Identifier	true		3965363	0					
ANR	3966701	ExpressionStatement	update_seek = true	4254:3:109044:109062	3965363	31	True				
ANR	3966702	AssignmentExpression	update_seek = true		3965363	0		=			
ANR	3966703	Identifier	update_seek		3965363	0					
ANR	3966704	Identifier	true		3965363	1					
ANR	3966705	ExpressionStatement	exit_graph = true	4255:3:109067:109084	3965363	32	True				
ANR	3966706	AssignmentExpression	exit_graph = true		3965363	0		=			
ANR	3966707	Identifier	exit_graph		3965363	0					
ANR	3966708	Identifier	true		3965363	1					
ANR	3966709	BreakStatement	break ;	4256:3:109089:109094	3965363	33	True				
ANR	3966710	Label	case '>' :	4257:2:109098:109106	3965363	34	True				
ANR	3966711	IfStatement	"if ( fcn && r_cons_yesno ( 'y' , ""Compute function callgraph? (Y/n)"" ) )"		3965363	35					
ANR	3966712	Condition	"fcn && r_cons_yesno ( 'y' , ""Compute function callgraph? (Y/n)"" )"	4258:7:109115:109176	3965363	0	True				
ANR	3966713	AndExpression	"fcn && r_cons_yesno ( 'y' , ""Compute function callgraph? (Y/n)"" )"		3965363	0		&&			
ANR	3966714	Identifier	fcn		3965363	0					
ANR	3966715	CallExpression	"r_cons_yesno ( 'y' , ""Compute function callgraph? (Y/n)"" )"		3965363	1					
ANR	3966716	Callee	r_cons_yesno		3965363	0					
ANR	3966717	Identifier	r_cons_yesno		3965363	0					
ANR	3966718	ArgumentList	'y'		3965363	1					
ANR	3966719	Argument	'y'		3965363	0					
ANR	3966720	PrimaryExpression	'y'		3965363	0					
ANR	3966721	Argument	"""Compute function callgraph? (Y/n)"""		3965363	1					
ANR	3966722	PrimaryExpression	"""Compute function callgraph? (Y/n)"""		3965363	0					
ANR	3966723	CompoundStatement		212:71:5874:5874	3965363	1					
ANR	3966724	ExpressionStatement	"r_core_cmd0 ( core , ""ag-;.agc* @$FB;.axfg @$FB;aggi"" )"	4259:4:109185:109237	3965363	0	True				
ANR	3966725	CallExpression	"r_core_cmd0 ( core , ""ag-;.agc* @$FB;.axfg @$FB;aggi"" )"		3965363	0					
ANR	3966726	Callee	r_core_cmd0		3965363	0					
ANR	3966727	Identifier	r_core_cmd0		3965363	0					
ANR	3966728	ArgumentList	core		3965363	1					
ANR	3966729	Argument	core		3965363	0					
ANR	3966730	Identifier	core		3965363	0					
ANR	3966731	Argument	"""ag-;.agc* @$FB;.axfg @$FB;aggi"""		3965363	1					
ANR	3966732	PrimaryExpression	"""ag-;.agc* @$FB;.axfg @$FB;aggi"""		3965363	0					
ANR	3966733	BreakStatement	break ;	4261:3:109247:109252	3965363	36	True				
ANR	3966734	Label	case '<' :	4262:2:109256:109264	3965363	37	True				
ANR	3966735	IfStatement	if ( fcn )		3965363	38					
ANR	3966736	Condition	fcn	4264:7:109319:109321	3965363	0	True				
ANR	3966737	Identifier	fcn		3965363	0					
ANR	3966738	CompoundStatement		218:12:6019:6019	3965363	1					
ANR	3966739	ExpressionStatement	"r_core_cmd0 ( core , ""ag-;.axtg $FB;aggi"" )"	4265:4:109330:109370	3965363	0	True				
ANR	3966740	CallExpression	"r_core_cmd0 ( core , ""ag-;.axtg $FB;aggi"" )"		3965363	0					
ANR	3966741	Callee	r_core_cmd0		3965363	0					
ANR	3966742	Identifier	r_core_cmd0		3965363	0					
ANR	3966743	ArgumentList	core		3965363	1					
ANR	3966744	Argument	core		3965363	0					
ANR	3966745	Identifier	core		3965363	0					
ANR	3966746	Argument	"""ag-;.axtg $FB;aggi"""		3965363	1					
ANR	3966747	PrimaryExpression	"""ag-;.axtg $FB;aggi"""		3965363	0					
ANR	3966748	BreakStatement	break ;	4267:3:109380:109385	3965363	39	True				
ANR	3966749	Label	case 'G' :	4268:2:109389:109397	3965363	40	True				
ANR	3966750	ExpressionStatement	"r_core_cmd0 ( core , ""ag-;.dtg*;aggi"" )"	4269:3:109402:109438	3965363	41	True				
ANR	3966751	CallExpression	"r_core_cmd0 ( core , ""ag-;.dtg*;aggi"" )"		3965363	0					
ANR	3966752	Callee	r_core_cmd0		3965363	0					
ANR	3966753	Identifier	r_core_cmd0		3965363	0					
ANR	3966754	ArgumentList	core		3965363	1					
ANR	3966755	Argument	core		3965363	0					
ANR	3966756	Identifier	core		3965363	0					
ANR	3966757	Argument	"""ag-;.dtg*;aggi"""		3965363	1					
ANR	3966758	PrimaryExpression	"""ag-;.dtg*;aggi"""		3965363	0					
ANR	3966759	BreakStatement	break ;	4270:3:109443:109448	3965363	42	True				
ANR	3966760	Label	case 'V' :	4271:2:109452:109460	3965363	43	True				
ANR	3966761	IfStatement	if ( fcn )		3965363	44					
ANR	3966762	Condition	fcn	4272:7:109469:109471	3965363	0	True				
ANR	3966763	Identifier	fcn		3965363	0					
ANR	3966764	CompoundStatement		226:12:6169:6169	3965363	1					
ANR	3966765	ExpressionStatement	agraph_toggle_callgraph ( g )	4273:4:109480:109507	3965363	0	True				
ANR	3966766	CallExpression	agraph_toggle_callgraph ( g )		3965363	0					
ANR	3966767	Callee	agraph_toggle_callgraph		3965363	0					
ANR	3966768	Identifier	agraph_toggle_callgraph		3965363	0					
ANR	3966769	ArgumentList	g		3965363	1					
ANR	3966770	Argument	g		3965363	0					
ANR	3966771	Identifier	g		3965363	0					
ANR	3966772	BreakStatement	break ;	4275:3:109517:109522	3965363	45	True				
ANR	3966773	Label	case 'Z' :	4276:2:109526:109534	3965363	46	True				
ANR	3966774	IfStatement	if ( okey == 27 )		3965363	47					
ANR	3966775	Condition	okey == 27	4277:7:109543:109552	3965363	0	True				
ANR	3966776	EqualityExpression	okey == 27		3965363	0		==			
ANR	3966777	Identifier	okey		3965363	0					
ANR	3966778	PrimaryExpression	27		3965363	1					
ANR	3966779	CompoundStatement		231:19:6250:6250	3965363	1					
ANR	3966780	ExpressionStatement	agraph_prev_node ( g )	4278:4:109574:109594	3965363	0	True				
ANR	3966781	CallExpression	agraph_prev_node ( g )		3965363	0					
ANR	3966782	Callee	agraph_prev_node		3965363	0					
ANR	3966783	Identifier	agraph_prev_node		3965363	0					
ANR	3966784	ArgumentList	g		3965363	1					
ANR	3966785	Argument	g		3965363	0					
ANR	3966786	Identifier	g		3965363	0					
ANR	3966787	ElseStatement	else		3965363	0					
ANR	3966788	CompoundStatement		234:4:6307:6341	3965363	0					
ANR	3966789	IdentifierDeclStatement	RANode * n = get_anode ( g -> curnode ) ;	4280:4:109612:109646	3965363	0	True				
ANR	3966790	IdentifierDecl	* n = get_anode ( g -> curnode )		3965363	0					
ANR	3966791	IdentifierDeclType	RANode *		3965363	0					
ANR	3966792	Identifier	n		3965363	1					
ANR	3966793	AssignmentExpression	* n = get_anode ( g -> curnode )		3965363	2		=			
ANR	3966794	Identifier	n		3965363	0					
ANR	3966795	CallExpression	get_anode ( g -> curnode )		3965363	1					
ANR	3966796	Callee	get_anode		3965363	0					
ANR	3966797	Identifier	get_anode		3965363	0					
ANR	3966798	ArgumentList	g -> curnode		3965363	1					
ANR	3966799	Argument	g -> curnode		3965363	0					
ANR	3966800	PtrMemberAccess	g -> curnode		3965363	0					
ANR	3966801	Identifier	g		3965363	0					
ANR	3966802	Identifier	curnode		3965363	1					
ANR	3966803	IfStatement	if ( n )		3965363	1					
ANR	3966804	Condition	n	4281:8:109656:109656	3965363	0	True				
ANR	3966805	Identifier	n		3965363	0					
ANR	3966806	CompoundStatement		236:5:6361:6399	3965363	1					
ANR	3966807	IdentifierDeclStatement	"ut64 addr = r_num_get ( NULL , n -> title ) ;"	4282:5:109666:109704	3965363	0	True				
ANR	3966808	IdentifierDecl	"addr = r_num_get ( NULL , n -> title )"		3965363	0					
ANR	3966809	IdentifierDeclType	ut64		3965363	0					
ANR	3966810	Identifier	addr		3965363	1					
ANR	3966811	AssignmentExpression	"addr = r_num_get ( NULL , n -> title )"		3965363	2		=			
ANR	3966812	Identifier	addr		3965363	0					
ANR	3966813	CallExpression	"r_num_get ( NULL , n -> title )"		3965363	1					
ANR	3966814	Callee	r_num_get		3965363	0					
ANR	3966815	Identifier	r_num_get		3965363	0					
ANR	3966816	ArgumentList	NULL		3965363	1					
ANR	3966817	Argument	NULL		3965363	0					
ANR	3966818	Identifier	NULL		3965363	0					
ANR	3966819	Argument	n -> title		3965363	1					
ANR	3966820	PtrMemberAccess	n -> title		3965363	0					
ANR	3966821	Identifier	n		3965363	0					
ANR	3966822	Identifier	title		3965363	1					
ANR	3966823	ExpressionStatement	"toggle_bb ( core , addr )"	4283:5:109711:109733	3965363	1	True				
ANR	3966824	CallExpression	"toggle_bb ( core , addr )"		3965363	0					
ANR	3966825	Callee	toggle_bb		3965363	0					
ANR	3966826	Identifier	toggle_bb		3965363	0					
ANR	3966827	ArgumentList	core		3965363	1					
ANR	3966828	Argument	core		3965363	0					
ANR	3966829	Identifier	core		3965363	0					
ANR	3966830	Argument	addr		3965363	1					
ANR	3966831	Identifier	addr		3965363	0					
ANR	3966832	ExpressionStatement	g -> need_reload_nodes = true	4284:5:109740:109767	3965363	2	True				
ANR	3966833	AssignmentExpression	g -> need_reload_nodes = true		3965363	0		=			
ANR	3966834	PtrMemberAccess	g -> need_reload_nodes		3965363	0					
ANR	3966835	Identifier	g		3965363	0					
ANR	3966836	Identifier	need_reload_nodes		3965363	1					
ANR	3966837	Identifier	true		3965363	1					
ANR	3966838	BreakStatement	break ;	4287:3:109783:109788	3965363	48	True				
ANR	3966839	Label	case 's' :	4288:2:109792:109800	3965363	49	True				
ANR	3966840	IfStatement	if ( ! fcn )		3965363	50					
ANR	3966841	Condition	! fcn	4289:7:109809:109812	3965363	0	True				
ANR	3966842	UnaryOperationExpression	! fcn		3965363	0					
ANR	3966843	UnaryOperator	!		3965363	0					
ANR	3966844	Identifier	fcn		3965363	1					
ANR	3966845	CompoundStatement		243:13:6510:6510	3965363	1					
ANR	3966846	BreakStatement	break ;	4290:4:109821:109826	3965363	0	True				
ANR	3966847	ExpressionStatement	"key_s = r_config_get ( core -> config , ""key.s"" )"	4292:3:109836:109880	3965363	51	True				
ANR	3966848	AssignmentExpression	"key_s = r_config_get ( core -> config , ""key.s"" )"		3965363	0		=			
ANR	3966849	Identifier	key_s		3965363	0					
ANR	3966850	CallExpression	"r_config_get ( core -> config , ""key.s"" )"		3965363	1					
ANR	3966851	Callee	r_config_get		3965363	0					
ANR	3966852	Identifier	r_config_get		3965363	0					
ANR	3966853	ArgumentList	core -> config		3965363	1					
ANR	3966854	Argument	core -> config		3965363	0					
ANR	3966855	PtrMemberAccess	core -> config		3965363	0					
ANR	3966856	Identifier	core		3965363	0					
ANR	3966857	Identifier	config		3965363	1					
ANR	3966858	Argument	"""key.s"""		3965363	1					
ANR	3966859	PrimaryExpression	"""key.s"""		3965363	0					
ANR	3966860	IfStatement	if ( key_s && * key_s )		3965363	52					
ANR	3966861	Condition	key_s && * key_s	4293:7:109889:109903	3965363	0	True				
ANR	3966862	AndExpression	key_s && * key_s		3965363	0		&&			
ANR	3966863	Identifier	key_s		3965363	0					
ANR	3966864	UnaryOperationExpression	* key_s		3965363	1					
ANR	3966865	UnaryOperator	*		3965363	0					
ANR	3966866	Identifier	key_s		3965363	1					
ANR	3966867	CompoundStatement		247:24:6601:6601	3965363	1					
ANR	3966868	ExpressionStatement	"r_core_cmd0 ( core , key_s )"	4294:4:109912:109937	3965363	0	True				
ANR	3966869	CallExpression	"r_core_cmd0 ( core , key_s )"		3965363	0					
ANR	3966870	Callee	r_core_cmd0		3965363	0					
ANR	3966871	Identifier	r_core_cmd0		3965363	0					
ANR	3966872	ArgumentList	core		3965363	1					
ANR	3966873	Argument	core		3965363	0					
ANR	3966874	Identifier	core		3965363	0					
ANR	3966875	Argument	key_s		3965363	1					
ANR	3966876	Identifier	key_s		3965363	0					
ANR	3966877	ElseStatement	else		3965363	0					
ANR	3966878	CompoundStatement		249:10:6644:6644	3965363	0					
ANR	3966879	ExpressionStatement	"graph_single_step_in ( core , g )"	4296:4:109955:109985	3965363	0	True				
ANR	3966880	CallExpression	"graph_single_step_in ( core , g )"		3965363	0					
ANR	3966881	Callee	graph_single_step_in		3965363	0					
ANR	3966882	Identifier	graph_single_step_in		3965363	0					
ANR	3966883	ArgumentList	core		3965363	1					
ANR	3966884	Argument	core		3965363	0					
ANR	3966885	Identifier	core		3965363	0					
ANR	3966886	Argument	g		3965363	1					
ANR	3966887	Identifier	g		3965363	0					
ANR	3966888	ExpressionStatement	discroll = 0	4298:3:109995:110007	3965363	53	True				
ANR	3966889	AssignmentExpression	discroll = 0		3965363	0		=			
ANR	3966890	Identifier	discroll		3965363	0					
ANR	3966891	PrimaryExpression	0		3965363	1					
ANR	3966892	ExpressionStatement	"agraph_update_seek ( g , get_anode ( g -> curnode ) , true )"	4299:3:110012:110064	3965363	54	True				
ANR	3966893	CallExpression	"agraph_update_seek ( g , get_anode ( g -> curnode ) , true )"		3965363	0					
ANR	3966894	Callee	agraph_update_seek		3965363	0					
ANR	3966895	Identifier	agraph_update_seek		3965363	0					
ANR	3966896	ArgumentList	g		3965363	1					
ANR	3966897	Argument	g		3965363	0					
ANR	3966898	Identifier	g		3965363	0					
ANR	3966899	Argument	get_anode ( g -> curnode )		3965363	1					
ANR	3966900	CallExpression	get_anode ( g -> curnode )		3965363	0					
ANR	3966901	Callee	get_anode		3965363	0					
ANR	3966902	Identifier	get_anode		3965363	0					
ANR	3966903	ArgumentList	g -> curnode		3965363	1					
ANR	3966904	Argument	g -> curnode		3965363	0					
ANR	3966905	PtrMemberAccess	g -> curnode		3965363	0					
ANR	3966906	Identifier	g		3965363	0					
ANR	3966907	Identifier	curnode		3965363	1					
ANR	3966908	Argument	true		3965363	2					
ANR	3966909	Identifier	true		3965363	0					
ANR	3966910	BreakStatement	break ;	4300:3:110069:110074	3965363	55	True				
ANR	3966911	Label	case 'S' :	4301:2:110078:110086	3965363	56	True				
ANR	3966912	IfStatement	if ( fcn )		3965363	57					
ANR	3966913	Condition	fcn	4302:7:110095:110097	3965363	0	True				
ANR	3966914	Identifier	fcn		3965363	0					
ANR	3966915	CompoundStatement		256:12:6795:6795	3965363	1					
ANR	3966916	ExpressionStatement	"graph_single_step_over ( core , g )"	4303:4:110106:110138	3965363	0	True				
ANR	3966917	CallExpression	"graph_single_step_over ( core , g )"		3965363	0					
ANR	3966918	Callee	graph_single_step_over		3965363	0					
ANR	3966919	Identifier	graph_single_step_over		3965363	0					
ANR	3966920	ArgumentList	core		3965363	1					
ANR	3966921	Argument	core		3965363	0					
ANR	3966922	Identifier	core		3965363	0					
ANR	3966923	Argument	g		3965363	1					
ANR	3966924	Identifier	g		3965363	0					
ANR	3966925	BreakStatement	break ;	4305:3:110148:110153	3965363	58	True				
ANR	3966926	Label	case 'x' :	4306:2:110157:110165	3965363	59	True				
ANR	3966927	Label	case 'X' :	4307:2:110169:110177	3965363	60	True				
ANR	3966928	CompoundStatement		267:3:6944:6998	3965363	61					
ANR	3966929	IfStatement	if ( ! fcn )		3965363	0					
ANR	3966930	Condition	! fcn	4309:7:110190:110193	3965363	0	True				
ANR	3966931	UnaryOperationExpression	! fcn		3965363	0					
ANR	3966932	UnaryOperator	!		3965363	0					
ANR	3966933	Identifier	fcn		3965363	1					
ANR	3966934	CompoundStatement		263:13:6891:6891	3965363	1					
ANR	3966935	BreakStatement	break ;	4310:4:110202:110207	3965363	0	True				
ANR	3966936	IdentifierDeclStatement	ut64 old_off = core -> offset ;	4312:3:110217:110244	3965363	1	True				
ANR	3966937	IdentifierDecl	old_off = core -> offset		3965363	0					
ANR	3966938	IdentifierDeclType	ut64		3965363	0					
ANR	3966939	Identifier	old_off		3965363	1					
ANR	3966940	AssignmentExpression	old_off = core -> offset		3965363	2		=			
ANR	3966941	Identifier	old_off		3965363	0					
ANR	3966942	PtrMemberAccess	core -> offset		3965363	1					
ANR	3966943	Identifier	core		3965363	0					
ANR	3966944	Identifier	offset		3965363	1					
ANR	3966945	IdentifierDeclStatement	"ut64 off = r_core_anal_get_bbaddr ( core , core -> offset ) ;"	4313:3:110249:110303	3965363	2	True				
ANR	3966946	IdentifierDecl	"off = r_core_anal_get_bbaddr ( core , core -> offset )"		3965363	0					
ANR	3966947	IdentifierDeclType	ut64		3965363	0					
ANR	3966948	Identifier	off		3965363	1					
ANR	3966949	AssignmentExpression	"off = r_core_anal_get_bbaddr ( core , core -> offset )"		3965363	2		=			
ANR	3966950	Identifier	off		3965363	0					
ANR	3966951	CallExpression	"r_core_anal_get_bbaddr ( core , core -> offset )"		3965363	1					
ANR	3966952	Callee	r_core_anal_get_bbaddr		3965363	0					
ANR	3966953	Identifier	r_core_anal_get_bbaddr		3965363	0					
ANR	3966954	ArgumentList	core		3965363	1					
ANR	3966955	Argument	core		3965363	0					
ANR	3966956	Identifier	core		3965363	0					
ANR	3966957	Argument	core -> offset		3965363	1					
ANR	3966958	PtrMemberAccess	core -> offset		3965363	0					
ANR	3966959	Identifier	core		3965363	0					
ANR	3966960	Identifier	offset		3965363	1					
ANR	3966961	ExpressionStatement	"r_core_seek ( core , off , 0 )"	4314:3:110308:110334	3965363	3	True				
ANR	3966962	CallExpression	"r_core_seek ( core , off , 0 )"		3965363	0					
ANR	3966963	Callee	r_core_seek		3965363	0					
ANR	3966964	Identifier	r_core_seek		3965363	0					
ANR	3966965	ArgumentList	core		3965363	1					
ANR	3966966	Argument	core		3965363	0					
ANR	3966967	Identifier	core		3965363	0					
ANR	3966968	Argument	off		3965363	1					
ANR	3966969	Identifier	off		3965363	0					
ANR	3966970	Argument	0		3965363	2					
ANR	3966971	PrimaryExpression	0		3965363	0					
ANR	3966972	IfStatement	"if ( ( key == 'x' && ! r_core_visual_refs ( core , true , true ) ) || ( key == 'X' && ! r_core_visual_refs ( core , false , true ) ) )"		3965363	4					
ANR	3966973	Condition	"( key == 'x' && ! r_core_visual_refs ( core , true , true ) ) || ( key == 'X' && ! r_core_visual_refs ( core , false , true ) )"	4315:7:110343:110462	3965363	0	True				
ANR	3966974	OrExpression	"( key == 'x' && ! r_core_visual_refs ( core , true , true ) ) || ( key == 'X' && ! r_core_visual_refs ( core , false , true ) )"		3965363	0		||			
ANR	3966975	AndExpression	"key == 'x' && ! r_core_visual_refs ( core , true , true )"		3965363	0		&&			
ANR	3966976	EqualityExpression	key == 'x'		3965363	0		==			
ANR	3966977	Identifier	key		3965363	0					
ANR	3966978	PrimaryExpression	'x'		3965363	1					
ANR	3966979	UnaryOperationExpression	"! r_core_visual_refs ( core , true , true )"		3965363	1					
ANR	3966980	UnaryOperator	!		3965363	0					
ANR	3966981	CallExpression	"r_core_visual_refs ( core , true , true )"		3965363	1					
ANR	3966982	Callee	r_core_visual_refs		3965363	0					
ANR	3966983	Identifier	r_core_visual_refs		3965363	0					
ANR	3966984	ArgumentList	core		3965363	1					
ANR	3966985	Argument	core		3965363	0					
ANR	3966986	Identifier	core		3965363	0					
ANR	3966987	Argument	true		3965363	1					
ANR	3966988	Identifier	true		3965363	0					
ANR	3966989	Argument	true		3965363	2					
ANR	3966990	Identifier	true		3965363	0					
ANR	3966991	AndExpression	"key == 'X' && ! r_core_visual_refs ( core , false , true )"		3965363	1		&&			
ANR	3966992	EqualityExpression	key == 'X'		3965363	0		==			
ANR	3966993	Identifier	key		3965363	0					
ANR	3966994	PrimaryExpression	'X'		3965363	1					
ANR	3966995	UnaryOperationExpression	"! r_core_visual_refs ( core , false , true )"		3965363	1					
ANR	3966996	UnaryOperator	!		3965363	0					
ANR	3966997	CallExpression	"r_core_visual_refs ( core , false , true )"		3965363	1					
ANR	3966998	Callee	r_core_visual_refs		3965363	0					
ANR	3966999	Identifier	r_core_visual_refs		3965363	0					
ANR	3967000	ArgumentList	core		3965363	1					
ANR	3967001	Argument	core		3965363	0					
ANR	3967002	Identifier	core		3965363	0					
ANR	3967003	Argument	false		3965363	1					
ANR	3967004	Identifier	false		3965363	0					
ANR	3967005	Argument	true		3965363	2					
ANR	3967006	Identifier	true		3965363	0					
ANR	3967007	CompoundStatement		270:64:7160:7160	3965363	1					
ANR	3967008	ExpressionStatement	"r_core_seek ( core , old_off , 0 )"	4317:4:110471:110501	3965363	0	True				
ANR	3967009	CallExpression	"r_core_seek ( core , old_off , 0 )"		3965363	0					
ANR	3967010	Callee	r_core_seek		3965363	0					
ANR	3967011	Identifier	r_core_seek		3965363	0					
ANR	3967012	ArgumentList	core		3965363	1					
ANR	3967013	Argument	core		3965363	0					
ANR	3967014	Identifier	core		3965363	0					
ANR	3967015	Argument	old_off		3965363	1					
ANR	3967016	Identifier	old_off		3965363	0					
ANR	3967017	Argument	0		3965363	2					
ANR	3967018	PrimaryExpression	0		3965363	0					
ANR	3967019	BreakStatement	break ;	4319:3:110511:110516	3965363	5	True				
ANR	3967020	Label	case 9 :	4321:2:110524:110530	3965363	62	True				
ANR	3967021	ExpressionStatement	agraph_next_node ( g )	4322:3:110542:110562	3965363	63	True				
ANR	3967022	CallExpression	agraph_next_node ( g )		3965363	0					
ANR	3967023	Callee	agraph_next_node		3965363	0					
ANR	3967024	Identifier	agraph_next_node		3965363	0					
ANR	3967025	ArgumentList	g		3965363	1					
ANR	3967026	Argument	g		3965363	0					
ANR	3967027	Identifier	g		3965363	0					
ANR	3967028	ExpressionStatement	discroll = 0	4323:3:110567:110579	3965363	64	True				
ANR	3967029	AssignmentExpression	discroll = 0		3965363	0		=			
ANR	3967030	Identifier	discroll		3965363	0					
ANR	3967031	PrimaryExpression	0		3965363	1					
ANR	3967032	BreakStatement	break ;	4324:3:110584:110589	3965363	65	True				
ANR	3967033	Label	case '?' :	4325:2:110593:110601	3965363	66	True				
ANR	3967034	ExpressionStatement	r_cons_clear00 ( )	4326:3:110606:110623	3965363	67	True				
ANR	3967035	CallExpression	r_cons_clear00 ( )		3965363	0					
ANR	3967036	Callee	r_cons_clear00		3965363	0					
ANR	3967037	Identifier	r_cons_clear00		3965363	0					
ANR	3967038	ArgumentList			3965363	1					
ANR	3967039	Statement	r_cons_printf	4327:3:110628:110640	3965363	68	True				
ANR	3967040	Statement	(	4327:17:110642:110642	3965363	69	True				
ANR	3967041	Statement	"""Visual Ascii Art graph keybindings:\\n"""	4327:18:110643:110681	3965363	70	True				
ANR	3967042	Statement	""" :e cmd.gprompt = agft   - show tinygraph in one side\\n"""	4328:4:110687:110743	3965363	71	True				
ANR	3967043	Statement	""" +/-/0        - zoom in/out/default\\n"""	4329:4:110749:110787	3965363	72	True				
ANR	3967044	Statement	""" ;            - add comment in current basic block\\n"""	4330:4:110793:110846	3965363	73	True				
ANR	3967045	Statement	""" . (dot)      - center graph to the current node\\n"""	4331:4:110852:110903	3965363	74	True				
ANR	3967046	Statement	""" , (comma)    - toggle graph.few\\n"""	4332:4:110909:110944	3965363	75	True				
ANR	3967047	Statement	""" ^            - seek to the first bb of the function\\n"""	4333:4:110950:111005	3965363	76	True				
ANR	3967048	Statement	""" =            - toggle graph.layout\\n"""	4334:4:111011:111049	3965363	77	True				
ANR	3967049	Statement	""" :cmd         - run radare command\\n"""	4335:4:111055:111092	3965363	78	True				
ANR	3967050	Statement	""" '            - toggle graph.comments\\n"""	4336:4:111098:111138	3965363	79	True				
ANR	3967051	Statement	""" \\""            - toggle graph.refs\\n"""	4337:4:111144:111181	3965363	80	True				
ANR	3967052	Statement	""" #            - toggle graph.hints\\n"""	4338:4:111187:111224	3965363	81	True				
ANR	3967053	Statement	""" /            - highlight text\\n"""	4339:4:111230:111263	3965363	82	True				
ANR	3967054	Statement	""" |            - set cmd.gprompt\\n"""	4340:4:111269:111303	3965363	83	True				
ANR	3967055	Statement	""" _            - enter hud selector\\n"""	4341:4:111309:111346	3965363	84	True				
ANR	3967056	Statement	""" >            - show function callgraph (see graph.refs)\\n"""	4342:4:111352:111411	3965363	85	True				
ANR	3967057	Statement	""" <            - show program callgraph (see graph.refs)\\n"""	4343:4:111417:111475	3965363	86	True				
ANR	3967058	Statement	""" (            - reverse conditional branch of last instruction in bb\\n"""	4344:4:111481:111552	3965363	87	True				
ANR	3967059	Statement	""" )            - rotate asm.emu and emu.str\\n"""	4345:4:111558:111603	3965363	88	True				
ANR	3967060	Statement	""" Home/End     - go to the top/bottom of the canvas\\n"""	4346:4:111609:111662	3965363	89	True				
ANR	3967061	Statement	""" Page-UP/DOWN - scroll canvas up/down\\n"""	4347:4:111668:111708	3965363	90	True				
ANR	3967062	Statement	""" b            - visual browse things\\n"""	4348:4:111714:111753	3965363	91	True				
ANR	3967063	Statement	""" c            - toggle graph cursor mode\\n"""	4349:4:111759:111802	3965363	92	True				
ANR	3967064	Statement	""" C            - toggle scr.colors\\n"""	4350:4:111808:111844	3965363	93	True				
ANR	3967065	Statement	""" d            - rename function\\n"""	4351:4:111850:111884	3965363	94	True				
ANR	3967066	Statement	""" D            - toggle the mixed graph+disasm mode\\n"""	4352:4:111890:111943	3965363	95	True				
ANR	3967067	Statement	""" e            - rotate graph.edges (show/hide edges)\\n"""	4353:4:111949:112004	3965363	96	True				
ANR	3967068	Statement	""" E            - rotate graph.linemode (square/diagonal lines)\\n"""	4354:4:112010:112074	3965363	97	True				
ANR	3967069	Statement	""" F            - enter flag selector\\n"""	4355:4:112080:112118	3965363	98	True				
ANR	3967070	Statement	""" g            - go/seek to given offset\\n"""	4356:4:112124:112166	3965363	99	True				
ANR	3967071	Statement	""" G            - debug trace callgraph (generated with dtc)\\n"""	4357:4:112172:112233	3965363	100	True				
ANR	3967072	Statement	""" hjkl/HJKL    - scroll canvas or node depending on graph cursor (uppercase for faster)\\n"""	4358:4:112239:112328	3965363	101	True				
ANR	3967073	Statement	""" i            - select input nodes by index\\n"""	4359:4:112334:112380	3965363	102	True				
ANR	3967074	Statement	""" I            - select output node by index\\n"""	4360:4:112386:112432	3965363	103	True				
ANR	3967075	Statement	""" m/M          - change mouse modes\\n"""	4361:4:112438:112475	3965363	104	True				
ANR	3967076	Statement	""" n/N          - next/previous scr.nkey (function/flag..)\\n"""	4362:4:112481:112540	3965363	105	True				
ANR	3967077	Statement	""" o([A-Za-z]*) - follow jmp/call identified by shortcut (like ;[oa])\\n"""	4363:4:112546:112616	3965363	106	True				
ANR	3967078	Statement	""" O            - toggle asm.pseudo and asm.esil\\n"""	4364:4:112622:112671	3965363	107	True				
ANR	3967079	Statement	""" p/P          - rotate graph modes (normal, display offsets, minigraph, summary)\\n"""	4365:4:112677:112760	3965363	108	True				
ANR	3967080	Statement	""" q            - back to Visual mode\\n"""	4366:4:112766:112804	3965363	109	True				
ANR	3967081	Statement	""" r            - toggle jmphints/leahints\\n"""	4367:4:112810:112853	3965363	110	True				
ANR	3967082	Statement	""" R            - randomize colors\\n"""	4368:4:112859:112894	3965363	111	True				
ANR	3967083	Statement	""" s/S          - step / step over\\n"""	4369:4:112900:112935	3965363	112	True				
ANR	3967084	Statement	""" tab          - select next node\\n"""	4370:4:112941:112976	3965363	113	True				
ANR	3967085	Statement	""" TAB          - select previous node\\n"""	4371:4:112982:113021	3965363	114	True				
ANR	3967086	Statement	""" t/f          - follow true/false edges\\n"""	4372:4:113027:113069	3965363	115	True				
ANR	3967087	Statement	""" u/U          - undo/redo seek\\n"""	4373:4:113075:113108	3965363	116	True				
ANR	3967088	Statement	""" V            - toggle basicblock / call graphs\\n"""	4374:4:113114:113164	3965363	117	True				
ANR	3967089	Statement	""" w            - toggle between movements speed 1 and graph.scroll\\n"""	4375:4:113170:113238	3965363	118	True				
ANR	3967090	Statement	""" x/X          - jump to xref/ref\\n"""	4376:4:113244:113279	3965363	119	True				
ANR	3967091	Statement	""" Y            - toggle tiny graph\\n"""	4377:4:113285:113321	3965363	120	True				
ANR	3967092	Statement	""" z            - toggle node folding\\n"""	4378:4:113327:113365	3965363	121	True				
ANR	3967093	Statement	""" Z            - toggle basic block folding"""	4379:4:113371:113414	3965363	122	True				
ANR	3967094	Statement	)	4379:48:113415:113415	3965363	123	True				
ANR	3967095	ExpressionStatement		4379:49:113416:113416	3965363	124	True				
ANR	3967096	ExpressionStatement	r_cons_less ( )	4380:3:113421:113435	3965363	125	True				
ANR	3967097	CallExpression	r_cons_less ( )		3965363	0					
ANR	3967098	Callee	r_cons_less		3965363	0					
ANR	3967099	Identifier	r_cons_less		3965363	0					
ANR	3967100	ArgumentList			3965363	1					
ANR	3967101	ExpressionStatement	r_cons_any_key ( NULL )	4381:3:113440:113461	3965363	126	True				
ANR	3967102	CallExpression	r_cons_any_key ( NULL )		3965363	0					
ANR	3967103	Callee	r_cons_any_key		3965363	0					
ANR	3967104	Identifier	r_cons_any_key		3965363	0					
ANR	3967105	ArgumentList	NULL		3965363	1					
ANR	3967106	Argument	NULL		3965363	0					
ANR	3967107	Identifier	NULL		3965363	0					
ANR	3967108	BreakStatement	break ;	4382:3:113466:113471	3965363	127	True				
ANR	3967109	Label	"case '""' :"	4383:2:113475:113483	3965363	128	True				
ANR	3967110	ExpressionStatement	"r_config_toggle ( core -> config , ""graph.refs"" )"	4384:3:113488:113532	3965363	129	True				
ANR	3967111	CallExpression	"r_config_toggle ( core -> config , ""graph.refs"" )"		3965363	0					
ANR	3967112	Callee	r_config_toggle		3965363	0					
ANR	3967113	Identifier	r_config_toggle		3965363	0					
ANR	3967114	ArgumentList	core -> config		3965363	1					
ANR	3967115	Argument	core -> config		3965363	0					
ANR	3967116	PtrMemberAccess	core -> config		3965363	0					
ANR	3967117	Identifier	core		3965363	0					
ANR	3967118	Identifier	config		3965363	1					
ANR	3967119	Argument	"""graph.refs"""		3965363	1					
ANR	3967120	PrimaryExpression	"""graph.refs"""		3965363	0					
ANR	3967121	BreakStatement	break ;	4385:3:113537:113542	3965363	130	True				
ANR	3967122	Label	case '#' :	4386:2:113546:113554	3965363	131	True				
ANR	3967123	IfStatement	if ( g -> mode == R_AGRAPH_MODE_COMMENTS )		3965363	132					
ANR	3967124	Condition	g -> mode == R_AGRAPH_MODE_COMMENTS	4387:7:113563:113595	3965363	0	True				
ANR	3967125	EqualityExpression	g -> mode == R_AGRAPH_MODE_COMMENTS		3965363	0		==			
ANR	3967126	PtrMemberAccess	g -> mode		3965363	0					
ANR	3967127	Identifier	g		3965363	0					
ANR	3967128	Identifier	mode		3965363	1					
ANR	3967129	Identifier	R_AGRAPH_MODE_COMMENTS		3965363	1					
ANR	3967130	CompoundStatement		341:42:10293:10293	3965363	1					
ANR	3967131	ExpressionStatement	g -> mode = R_AGRAPH_MODE_NORMAL	4388:4:113604:113634	3965363	0	True				
ANR	3967132	AssignmentExpression	g -> mode = R_AGRAPH_MODE_NORMAL		3965363	0		=			
ANR	3967133	PtrMemberAccess	g -> mode		3965363	0					
ANR	3967134	Identifier	g		3965363	0					
ANR	3967135	Identifier	mode		3965363	1					
ANR	3967136	Identifier	R_AGRAPH_MODE_NORMAL		3965363	1					
ANR	3967137	ElseStatement	else		3965363	0					
ANR	3967138	CompoundStatement		343:10:10341:10341	3965363	0					
ANR	3967139	ExpressionStatement	g -> mode = R_AGRAPH_MODE_COMMENTS	4390:4:113652:113684	3965363	0	True				
ANR	3967140	AssignmentExpression	g -> mode = R_AGRAPH_MODE_COMMENTS		3965363	0		=			
ANR	3967141	PtrMemberAccess	g -> mode		3965363	0					
ANR	3967142	Identifier	g		3965363	0					
ANR	3967143	Identifier	mode		3965363	1					
ANR	3967144	Identifier	R_AGRAPH_MODE_COMMENTS		3965363	1					
ANR	3967145	ExpressionStatement	g -> need_reload_nodes = true	4392:3:113694:113721	3965363	133	True				
ANR	3967146	AssignmentExpression	g -> need_reload_nodes = true		3965363	0		=			
ANR	3967147	PtrMemberAccess	g -> need_reload_nodes		3965363	0					
ANR	3967148	Identifier	g		3965363	0					
ANR	3967149	Identifier	need_reload_nodes		3965363	1					
ANR	3967150	Identifier	true		3965363	1					
ANR	3967151	ExpressionStatement	discroll = 0	4393:3:113726:113738	3965363	134	True				
ANR	3967152	AssignmentExpression	discroll = 0		3965363	0		=			
ANR	3967153	Identifier	discroll		3965363	0					
ANR	3967154	PrimaryExpression	0		3965363	1					
ANR	3967155	ExpressionStatement	"agraph_update_seek ( g , get_anode ( g -> curnode ) , true )"	4394:3:113743:113795	3965363	135	True				
ANR	3967156	CallExpression	"agraph_update_seek ( g , get_anode ( g -> curnode ) , true )"		3965363	0					
ANR	3967157	Callee	agraph_update_seek		3965363	0					
ANR	3967158	Identifier	agraph_update_seek		3965363	0					
ANR	3967159	ArgumentList	g		3965363	1					
ANR	3967160	Argument	g		3965363	0					
ANR	3967161	Identifier	g		3965363	0					
ANR	3967162	Argument	get_anode ( g -> curnode )		3965363	1					
ANR	3967163	CallExpression	get_anode ( g -> curnode )		3965363	0					
ANR	3967164	Callee	get_anode		3965363	0					
ANR	3967165	Identifier	get_anode		3965363	0					
ANR	3967166	ArgumentList	g -> curnode		3965363	1					
ANR	3967167	Argument	g -> curnode		3965363	0					
ANR	3967168	PtrMemberAccess	g -> curnode		3965363	0					
ANR	3967169	Identifier	g		3965363	0					
ANR	3967170	Identifier	curnode		3965363	1					
ANR	3967171	Argument	true		3965363	2					
ANR	3967172	Identifier	true		3965363	0					
ANR	3967173	BreakStatement	break ;	4396:3:113853:113858	3965363	136	True				
ANR	3967174	Label	case 'p' :	4397:2:113862:113870	3965363	137	True				
ANR	3967175	ExpressionStatement	g -> mode = next_mode ( g -> mode )	4398:3:113875:113904	3965363	138	True				
ANR	3967176	AssignmentExpression	g -> mode = next_mode ( g -> mode )		3965363	0		=			
ANR	3967177	PtrMemberAccess	g -> mode		3965363	0					
ANR	3967178	Identifier	g		3965363	0					
ANR	3967179	Identifier	mode		3965363	1					
ANR	3967180	CallExpression	next_mode ( g -> mode )		3965363	1					
ANR	3967181	Callee	next_mode		3965363	0					
ANR	3967182	Identifier	next_mode		3965363	0					
ANR	3967183	ArgumentList	g -> mode		3965363	1					
ANR	3967184	Argument	g -> mode		3965363	0					
ANR	3967185	PtrMemberAccess	g -> mode		3965363	0					
ANR	3967186	Identifier	g		3965363	0					
ANR	3967187	Identifier	mode		3965363	1					
ANR	3967188	ExpressionStatement	g -> need_reload_nodes = true	4399:3:113909:113936	3965363	139	True				
ANR	3967189	AssignmentExpression	g -> need_reload_nodes = true		3965363	0		=			
ANR	3967190	PtrMemberAccess	g -> need_reload_nodes		3965363	0					
ANR	3967191	Identifier	g		3965363	0					
ANR	3967192	Identifier	need_reload_nodes		3965363	1					
ANR	3967193	Identifier	true		3965363	1					
ANR	3967194	ExpressionStatement	"agraph_update_seek ( g , get_anode ( g -> curnode ) , true )"	4400:3:113941:113993	3965363	140	True				
ANR	3967195	CallExpression	"agraph_update_seek ( g , get_anode ( g -> curnode ) , true )"		3965363	0					
ANR	3967196	Callee	agraph_update_seek		3965363	0					
ANR	3967197	Identifier	agraph_update_seek		3965363	0					
ANR	3967198	ArgumentList	g		3965363	1					
ANR	3967199	Argument	g		3965363	0					
ANR	3967200	Identifier	g		3965363	0					
ANR	3967201	Argument	get_anode ( g -> curnode )		3965363	1					
ANR	3967202	CallExpression	get_anode ( g -> curnode )		3965363	0					
ANR	3967203	Callee	get_anode		3965363	0					
ANR	3967204	Identifier	get_anode		3965363	0					
ANR	3967205	ArgumentList	g -> curnode		3965363	1					
ANR	3967206	Argument	g -> curnode		3965363	0					
ANR	3967207	PtrMemberAccess	g -> curnode		3965363	0					
ANR	3967208	Identifier	g		3965363	0					
ANR	3967209	Identifier	curnode		3965363	1					
ANR	3967210	Argument	true		3965363	2					
ANR	3967211	Identifier	true		3965363	0					
ANR	3967212	BreakStatement	break ;	4401:3:113998:114003	3965363	141	True				
ANR	3967213	Label	case 'P' :	4402:2:114007:114015	3965363	142	True				
ANR	3967214	IfStatement	if ( ! fcn )		3965363	143					
ANR	3967215	Condition	! fcn	4403:7:114024:114027	3965363	0	True				
ANR	3967216	UnaryOperationExpression	! fcn		3965363	0					
ANR	3967217	UnaryOperator	!		3965363	0					
ANR	3967218	Identifier	fcn		3965363	1					
ANR	3967219	CompoundStatement		357:13:10725:10725	3965363	1					
ANR	3967220	BreakStatement	break ;	4404:4:114036:114041	3965363	0	True				
ANR	3967221	ExpressionStatement	g -> mode = prev_mode ( g -> mode )	4406:3:114051:114080	3965363	144	True				
ANR	3967222	AssignmentExpression	g -> mode = prev_mode ( g -> mode )		3965363	0		=			
ANR	3967223	PtrMemberAccess	g -> mode		3965363	0					
ANR	3967224	Identifier	g		3965363	0					
ANR	3967225	Identifier	mode		3965363	1					
ANR	3967226	CallExpression	prev_mode ( g -> mode )		3965363	1					
ANR	3967227	Callee	prev_mode		3965363	0					
ANR	3967228	Identifier	prev_mode		3965363	0					
ANR	3967229	ArgumentList	g -> mode		3965363	1					
ANR	3967230	Argument	g -> mode		3965363	0					
ANR	3967231	PtrMemberAccess	g -> mode		3965363	0					
ANR	3967232	Identifier	g		3965363	0					
ANR	3967233	Identifier	mode		3965363	1					
ANR	3967234	ExpressionStatement	g -> need_reload_nodes = true	4407:3:114085:114112	3965363	145	True				
ANR	3967235	AssignmentExpression	g -> need_reload_nodes = true		3965363	0		=			
ANR	3967236	PtrMemberAccess	g -> need_reload_nodes		3965363	0					
ANR	3967237	Identifier	g		3965363	0					
ANR	3967238	Identifier	need_reload_nodes		3965363	1					
ANR	3967239	Identifier	true		3965363	1					
ANR	3967240	ExpressionStatement	"agraph_update_seek ( g , get_anode ( g -> curnode ) , true )"	4408:3:114117:114169	3965363	146	True				
ANR	3967241	CallExpression	"agraph_update_seek ( g , get_anode ( g -> curnode ) , true )"		3965363	0					
ANR	3967242	Callee	agraph_update_seek		3965363	0					
ANR	3967243	Identifier	agraph_update_seek		3965363	0					
ANR	3967244	ArgumentList	g		3965363	1					
ANR	3967245	Argument	g		3965363	0					
ANR	3967246	Identifier	g		3965363	0					
ANR	3967247	Argument	get_anode ( g -> curnode )		3965363	1					
ANR	3967248	CallExpression	get_anode ( g -> curnode )		3965363	0					
ANR	3967249	Callee	get_anode		3965363	0					
ANR	3967250	Identifier	get_anode		3965363	0					
ANR	3967251	ArgumentList	g -> curnode		3965363	1					
ANR	3967252	Argument	g -> curnode		3965363	0					
ANR	3967253	PtrMemberAccess	g -> curnode		3965363	0					
ANR	3967254	Identifier	g		3965363	0					
ANR	3967255	Identifier	curnode		3965363	1					
ANR	3967256	Argument	true		3965363	2					
ANR	3967257	Identifier	true		3965363	0					
ANR	3967258	BreakStatement	break ;	4409:3:114174:114179	3965363	147	True				
ANR	3967259	Label	case 'o' :	4410:2:114183:114191	3965363	148	True				
ANR	3967260	ExpressionStatement	"goto_asmqjmps ( g , core )"	4411:3:114196:114219	3965363	149	True				
ANR	3967261	CallExpression	"goto_asmqjmps ( g , core )"		3965363	0					
ANR	3967262	Callee	goto_asmqjmps		3965363	0					
ANR	3967263	Identifier	goto_asmqjmps		3965363	0					
ANR	3967264	ArgumentList	g		3965363	1					
ANR	3967265	Argument	g		3965363	0					
ANR	3967266	Identifier	g		3965363	0					
ANR	3967267	Argument	core		3965363	1					
ANR	3967268	Identifier	core		3965363	0					
ANR	3967269	BreakStatement	break ;	4412:3:114224:114229	3965363	150	True				
ANR	3967270	Label	case 'g' :	4413:2:114233:114241	3965363	151	True				
ANR	3967271	ExpressionStatement	"showcursor ( core , true )"	4414:3:114246:114269	3965363	152	True				
ANR	3967272	CallExpression	"showcursor ( core , true )"		3965363	0					
ANR	3967273	Callee	showcursor		3965363	0					
ANR	3967274	Identifier	showcursor		3965363	0					
ANR	3967275	ArgumentList	core		3965363	1					
ANR	3967276	Argument	core		3965363	0					
ANR	3967277	Identifier	core		3965363	0					
ANR	3967278	Argument	true		3965363	1					
ANR	3967279	Identifier	true		3965363	0					
ANR	3967280	ExpressionStatement	"visual_offset ( g , core )"	4415:3:114274:114297	3965363	153	True				
ANR	3967281	CallExpression	"visual_offset ( g , core )"		3965363	0					
ANR	3967282	Callee	visual_offset		3965363	0					
ANR	3967283	Identifier	visual_offset		3965363	0					
ANR	3967284	ArgumentList	g		3965363	1					
ANR	3967285	Argument	g		3965363	0					
ANR	3967286	Identifier	g		3965363	0					
ANR	3967287	Argument	core		3965363	1					
ANR	3967288	Identifier	core		3965363	0					
ANR	3967289	ExpressionStatement	"showcursor ( core , false )"	4416:3:114302:114326	3965363	154	True				
ANR	3967290	CallExpression	"showcursor ( core , false )"		3965363	0					
ANR	3967291	Callee	showcursor		3965363	0					
ANR	3967292	Identifier	showcursor		3965363	0					
ANR	3967293	ArgumentList	core		3965363	1					
ANR	3967294	Argument	core		3965363	0					
ANR	3967295	Identifier	core		3965363	0					
ANR	3967296	Argument	false		3965363	1					
ANR	3967297	Identifier	false		3965363	0					
ANR	3967298	BreakStatement	break ;	4417:3:114331:114336	3965363	155	True				
ANR	3967299	Label	case 'O' :	4418:2:114340:114348	3965363	156	True				
ANR	3967300	IfStatement	if ( ! fcn )		3965363	157					
ANR	3967301	Condition	! fcn	4419:7:114357:114360	3965363	0	True				
ANR	3967302	UnaryOperationExpression	! fcn		3965363	0					
ANR	3967303	UnaryOperator	!		3965363	0					
ANR	3967304	Identifier	fcn		3965363	1					
ANR	3967305	CompoundStatement		373:13:11058:11058	3965363	1					
ANR	3967306	BreakStatement	break ;	4420:4:114369:114374	3965363	0	True				
ANR	3967307	ExpressionStatement	disMode = ( disMode + 1 ) % 3	4422:3:114384:114411	3965363	158	True				
ANR	3967308	AssignmentExpression	disMode = ( disMode + 1 ) % 3		3965363	0		=			
ANR	3967309	Identifier	disMode		3965363	0					
ANR	3967310	MultiplicativeExpression	( disMode + 1 ) % 3		3965363	1		%			
ANR	3967311	AdditiveExpression	disMode + 1		3965363	0		+			
ANR	3967312	Identifier	disMode		3965363	0					
ANR	3967313	PrimaryExpression	1		3965363	1					
ANR	3967314	PrimaryExpression	3		3965363	1					
ANR	3967315	ExpressionStatement	applyDisMode ( core )	4423:3:114416:114435	3965363	159	True				
ANR	3967316	CallExpression	applyDisMode ( core )		3965363	0					
ANR	3967317	Callee	applyDisMode		3965363	0					
ANR	3967318	Identifier	applyDisMode		3965363	0					
ANR	3967319	ArgumentList	core		3965363	1					
ANR	3967320	Argument	core		3965363	0					
ANR	3967321	Identifier	core		3965363	0					
ANR	3967322	ExpressionStatement	g -> need_reload_nodes = true	4424:3:114440:114467	3965363	160	True				
ANR	3967323	AssignmentExpression	g -> need_reload_nodes = true		3965363	0		=			
ANR	3967324	PtrMemberAccess	g -> need_reload_nodes		3965363	0					
ANR	3967325	Identifier	g		3965363	0					
ANR	3967326	Identifier	need_reload_nodes		3965363	1					
ANR	3967327	Identifier	true		3965363	1					
ANR	3967328	ExpressionStatement	"get_bbupdate ( g , core , fcn )"	4425:3:114472:114499	3965363	161	True				
ANR	3967329	CallExpression	"get_bbupdate ( g , core , fcn )"		3965363	0					
ANR	3967330	Callee	get_bbupdate		3965363	0					
ANR	3967331	Identifier	get_bbupdate		3965363	0					
ANR	3967332	ArgumentList	g		3965363	1					
ANR	3967333	Argument	g		3965363	0					
ANR	3967334	Identifier	g		3965363	0					
ANR	3967335	Argument	core		3965363	1					
ANR	3967336	Identifier	core		3965363	0					
ANR	3967337	Argument	fcn		3965363	2					
ANR	3967338	Identifier	fcn		3965363	0					
ANR	3967339	BreakStatement	break ;	4426:3:114504:114509	3965363	162	True				
ANR	3967340	Label	case 'u' :	4427:2:114514:114522	3965363	163	True				
ANR	3967341	CompoundStatement		386:3:11257:11309	3965363	164					
ANR	3967342	IfStatement	if ( ! fcn )		3965363	0					
ANR	3967343	Condition	! fcn	4429:7:114535:114538	3965363	0	True				
ANR	3967344	UnaryOperationExpression	! fcn		3965363	0					
ANR	3967345	UnaryOperator	!		3965363	0					
ANR	3967346	Identifier	fcn		3965363	1					
ANR	3967347	CompoundStatement		383:13:11236:11236	3965363	1					
ANR	3967348	BreakStatement	break ;	4430:4:114547:114552	3965363	0	True				
ANR	3967349	IdentifierDeclStatement	"RIOUndos * undo = r_io_sundo ( core -> io , core -> offset ) ;"	4432:3:114562:114614	3965363	1	True				
ANR	3967350	IdentifierDecl	"* undo = r_io_sundo ( core -> io , core -> offset )"		3965363	0					
ANR	3967351	IdentifierDeclType	RIOUndos *		3965363	0					
ANR	3967352	Identifier	undo		3965363	1					
ANR	3967353	AssignmentExpression	"* undo = r_io_sundo ( core -> io , core -> offset )"		3965363	2		=			
ANR	3967354	Identifier	undo		3965363	0					
ANR	3967355	CallExpression	"r_io_sundo ( core -> io , core -> offset )"		3965363	1					
ANR	3967356	Callee	r_io_sundo		3965363	0					
ANR	3967357	Identifier	r_io_sundo		3965363	0					
ANR	3967358	ArgumentList	core -> io		3965363	1					
ANR	3967359	Argument	core -> io		3965363	0					
ANR	3967360	PtrMemberAccess	core -> io		3965363	0					
ANR	3967361	Identifier	core		3965363	0					
ANR	3967362	Identifier	io		3965363	1					
ANR	3967363	Argument	core -> offset		3965363	1					
ANR	3967364	PtrMemberAccess	core -> offset		3965363	0					
ANR	3967365	Identifier	core		3965363	0					
ANR	3967366	Identifier	offset		3965363	1					
ANR	3967367	IfStatement	if ( undo )		3965363	2					
ANR	3967368	Condition	undo	4433:7:114623:114626	3965363	0	True				
ANR	3967369	Identifier	undo		3965363	0					
ANR	3967370	CompoundStatement		387:13:11324:11324	3965363	1					
ANR	3967371	ExpressionStatement	"r_core_seek ( core , undo -> off , 0 )"	4434:4:114635:114667	3965363	0	True				
ANR	3967372	CallExpression	"r_core_seek ( core , undo -> off , 0 )"		3965363	0					
ANR	3967373	Callee	r_core_seek		3965363	0					
ANR	3967374	Identifier	r_core_seek		3965363	0					
ANR	3967375	ArgumentList	core		3965363	1					
ANR	3967376	Argument	core		3965363	0					
ANR	3967377	Identifier	core		3965363	0					
ANR	3967378	Argument	undo -> off		3965363	1					
ANR	3967379	PtrMemberAccess	undo -> off		3965363	0					
ANR	3967380	Identifier	undo		3965363	0					
ANR	3967381	Identifier	off		3965363	1					
ANR	3967382	Argument	0		3965363	2					
ANR	3967383	PrimaryExpression	0		3965363	0					
ANR	3967384	ElseStatement	else		3965363	0					
ANR	3967385	CompoundStatement		389:10:11374:11374	3965363	0					
ANR	3967386	ExpressionStatement	"eprintf ( ""Cannot undo\\n"" )"	4436:4:114685:114710	3965363	0	True				
ANR	3967387	CallExpression	"eprintf ( ""Cannot undo\\n"" )"		3965363	0					
ANR	3967388	Callee	eprintf		3965363	0					
ANR	3967389	Identifier	eprintf		3965363	0					
ANR	3967390	ArgumentList	"""Cannot undo\\n"""		3965363	1					
ANR	3967391	Argument	"""Cannot undo\\n"""		3965363	0					
ANR	3967392	PrimaryExpression	"""Cannot undo\\n"""		3965363	0					
ANR	3967393	IfStatement	"if ( r_config_get_i ( core -> config , ""graph.few"" ) )"		3965363	3					
ANR	3967394	Condition	"r_config_get_i ( core -> config , ""graph.few"" )"	4438:7:114724:114765	3965363	0	True				
ANR	3967395	CallExpression	"r_config_get_i ( core -> config , ""graph.few"" )"		3965363	0					
ANR	3967396	Callee	r_config_get_i		3965363	0					
ANR	3967397	Identifier	r_config_get_i		3965363	0					
ANR	3967398	ArgumentList	core -> config		3965363	1					
ANR	3967399	Argument	core -> config		3965363	0					
ANR	3967400	PtrMemberAccess	core -> config		3965363	0					
ANR	3967401	Identifier	core		3965363	0					
ANR	3967402	Identifier	config		3965363	1					
ANR	3967403	Argument	"""graph.few"""		3965363	1					
ANR	3967404	PrimaryExpression	"""graph.few"""		3965363	0					
ANR	3967405	CompoundStatement		392:51:11463:11463	3965363	1					
ANR	3967406	ExpressionStatement	g -> need_reload_nodes = true	4439:4:114774:114801	3965363	0	True				
ANR	3967407	AssignmentExpression	g -> need_reload_nodes = true		3965363	0		=			
ANR	3967408	PtrMemberAccess	g -> need_reload_nodes		3965363	0					
ANR	3967409	Identifier	g		3965363	0					
ANR	3967410	Identifier	need_reload_nodes		3965363	1					
ANR	3967411	Identifier	true		3965363	1					
ANR	3967412	BreakStatement	break ;	4441:3:114811:114816	3965363	4	True				
ANR	3967413	Label	case 'U' :	4443:2:114824:114832	3965363	165	True				
ANR	3967414	CompoundStatement		402:3:11567:11610	3965363	166					
ANR	3967415	IfStatement	if ( ! fcn )		3965363	0					
ANR	3967416	Condition	! fcn	4445:7:114845:114848	3965363	0	True				
ANR	3967417	UnaryOperationExpression	! fcn		3965363	0					
ANR	3967418	UnaryOperator	!		3965363	0					
ANR	3967419	Identifier	fcn		3965363	1					
ANR	3967420	CompoundStatement		399:13:11546:11546	3965363	1					
ANR	3967421	BreakStatement	break ;	4446:4:114857:114862	3965363	0	True				
ANR	3967422	IdentifierDeclStatement	RIOUndos * undo = r_io_sundo_redo ( core -> io ) ;	4448:3:114872:114915	3965363	1	True				
ANR	3967423	IdentifierDecl	* undo = r_io_sundo_redo ( core -> io )		3965363	0					
ANR	3967424	IdentifierDeclType	RIOUndos *		3965363	0					
ANR	3967425	Identifier	undo		3965363	1					
ANR	3967426	AssignmentExpression	* undo = r_io_sundo_redo ( core -> io )		3965363	2		=			
ANR	3967427	Identifier	undo		3965363	0					
ANR	3967428	CallExpression	r_io_sundo_redo ( core -> io )		3965363	1					
ANR	3967429	Callee	r_io_sundo_redo		3965363	0					
ANR	3967430	Identifier	r_io_sundo_redo		3965363	0					
ANR	3967431	ArgumentList	core -> io		3965363	1					
ANR	3967432	Argument	core -> io		3965363	0					
ANR	3967433	PtrMemberAccess	core -> io		3965363	0					
ANR	3967434	Identifier	core		3965363	0					
ANR	3967435	Identifier	io		3965363	1					
ANR	3967436	IfStatement	if ( undo )		3965363	2					
ANR	3967437	Condition	undo	4449:7:114924:114927	3965363	0	True				
ANR	3967438	Identifier	undo		3965363	0					
ANR	3967439	CompoundStatement		403:13:11625:11625	3965363	1					
ANR	3967440	ExpressionStatement	"r_core_seek ( core , undo -> off , 0 )"	4450:4:114936:114968	3965363	0	True				
ANR	3967441	CallExpression	"r_core_seek ( core , undo -> off , 0 )"		3965363	0					
ANR	3967442	Callee	r_core_seek		3965363	0					
ANR	3967443	Identifier	r_core_seek		3965363	0					
ANR	3967444	ArgumentList	core		3965363	1					
ANR	3967445	Argument	core		3965363	0					
ANR	3967446	Identifier	core		3965363	0					
ANR	3967447	Argument	undo -> off		3965363	1					
ANR	3967448	PtrMemberAccess	undo -> off		3965363	0					
ANR	3967449	Identifier	undo		3965363	0					
ANR	3967450	Identifier	off		3965363	1					
ANR	3967451	Argument	0		3965363	2					
ANR	3967452	PrimaryExpression	0		3965363	0					
ANR	3967453	ElseStatement	else		3965363	0					
ANR	3967454	CompoundStatement		405:10:11675:11675	3965363	0					
ANR	3967455	ExpressionStatement	"eprintf ( ""Cannot redo\\n"" )"	4452:4:114986:115011	3965363	0	True				
ANR	3967456	CallExpression	"eprintf ( ""Cannot redo\\n"" )"		3965363	0					
ANR	3967457	Callee	eprintf		3965363	0					
ANR	3967458	Identifier	eprintf		3965363	0					
ANR	3967459	ArgumentList	"""Cannot redo\\n"""		3965363	1					
ANR	3967460	Argument	"""Cannot redo\\n"""		3965363	0					
ANR	3967461	PrimaryExpression	"""Cannot redo\\n"""		3965363	0					
ANR	3967462	BreakStatement	break ;	4454:3:115021:115026	3965363	3	True				
ANR	3967463	Label	case 'r' :	4456:2:115034:115042	3965363	167	True				
ANR	3967464	IfStatement	if ( fcn )		3965363	168					
ANR	3967465	Condition	fcn	4457:7:115051:115053	3965363	0	True				
ANR	3967466	Identifier	fcn		3965363	0					
ANR	3967467	CompoundStatement		411:12:11751:11751	3965363	1					
ANR	3967468	ExpressionStatement	"g -> layout = r_config_get_i ( core -> config , ""graph.layout"" )"	4458:4:115062:115119	3965363	0	True				
ANR	3967469	AssignmentExpression	"g -> layout = r_config_get_i ( core -> config , ""graph.layout"" )"		3965363	0		=			
ANR	3967470	PtrMemberAccess	g -> layout		3965363	0					
ANR	3967471	Identifier	g		3965363	0					
ANR	3967472	Identifier	layout		3965363	1					
ANR	3967473	CallExpression	"r_config_get_i ( core -> config , ""graph.layout"" )"		3965363	1					
ANR	3967474	Callee	r_config_get_i		3965363	0					
ANR	3967475	Identifier	r_config_get_i		3965363	0					
ANR	3967476	ArgumentList	core -> config		3965363	1					
ANR	3967477	Argument	core -> config		3965363	0					
ANR	3967478	PtrMemberAccess	core -> config		3965363	0					
ANR	3967479	Identifier	core		3965363	0					
ANR	3967480	Identifier	config		3965363	1					
ANR	3967481	Argument	"""graph.layout"""		3965363	1					
ANR	3967482	PrimaryExpression	"""graph.layout"""		3965363	0					
ANR	3967483	ExpressionStatement	g -> need_reload_nodes = true	4459:4:115125:115152	3965363	1	True				
ANR	3967484	AssignmentExpression	g -> need_reload_nodes = true		3965363	0		=			
ANR	3967485	PtrMemberAccess	g -> need_reload_nodes		3965363	0					
ANR	3967486	Identifier	g		3965363	0					
ANR	3967487	Identifier	need_reload_nodes		3965363	1					
ANR	3967488	Identifier	true		3965363	1					
ANR	3967489	IfStatement	"if ( r_config_get_i ( core -> config , ""asm.hint.call"" ) )"		3965363	169					
ANR	3967490	Condition	"r_config_get_i ( core -> config , ""asm.hint.call"" )"	4462:7:115202:115247	3965363	0	True				
ANR	3967491	CallExpression	"r_config_get_i ( core -> config , ""asm.hint.call"" )"		3965363	0					
ANR	3967492	Callee	r_config_get_i		3965363	0					
ANR	3967493	Identifier	r_config_get_i		3965363	0					
ANR	3967494	ArgumentList	core -> config		3965363	1					
ANR	3967495	Argument	core -> config		3965363	0					
ANR	3967496	PtrMemberAccess	core -> config		3965363	0					
ANR	3967497	Identifier	core		3965363	0					
ANR	3967498	Identifier	config		3965363	1					
ANR	3967499	Argument	"""asm.hint.call"""		3965363	1					
ANR	3967500	PrimaryExpression	"""asm.hint.call"""		3965363	0					
ANR	3967501	CompoundStatement		416:55:11945:11945	3965363	1					
ANR	3967502	ExpressionStatement	"r_core_cmd0 ( core , ""e!asm.hint.call"" )"	4463:4:115256:115293	3965363	0	True				
ANR	3967503	CallExpression	"r_core_cmd0 ( core , ""e!asm.hint.call"" )"		3965363	0					
ANR	3967504	Callee	r_core_cmd0		3965363	0					
ANR	3967505	Identifier	r_core_cmd0		3965363	0					
ANR	3967506	ArgumentList	core		3965363	1					
ANR	3967507	Argument	core		3965363	0					
ANR	3967508	Identifier	core		3965363	0					
ANR	3967509	Argument	"""e!asm.hint.call"""		3965363	1					
ANR	3967510	PrimaryExpression	"""e!asm.hint.call"""		3965363	0					
ANR	3967511	ExpressionStatement	"r_core_cmd0 ( core , ""e!asm.hint.jmp"" )"	4464:4:115299:115335	3965363	1	True				
ANR	3967512	CallExpression	"r_core_cmd0 ( core , ""e!asm.hint.jmp"" )"		3965363	0					
ANR	3967513	Callee	r_core_cmd0		3965363	0					
ANR	3967514	Identifier	r_core_cmd0		3965363	0					
ANR	3967515	ArgumentList	core		3965363	1					
ANR	3967516	Argument	core		3965363	0					
ANR	3967517	Identifier	core		3965363	0					
ANR	3967518	Argument	"""e!asm.hint.jmp"""		3965363	1					
ANR	3967519	PrimaryExpression	"""e!asm.hint.jmp"""		3965363	0					
ANR	3967520	ElseStatement	else		3965363	0					
ANR	3967521	IfStatement	"if ( r_config_get_i ( core -> config , ""asm.hint.jmp"" ) )"		3965363	0					
ANR	3967522	Condition	"r_config_get_i ( core -> config , ""asm.hint.jmp"" )"	4465:14:115351:115395	3965363	0	True				
ANR	3967523	CallExpression	"r_config_get_i ( core -> config , ""asm.hint.jmp"" )"		3965363	0					
ANR	3967524	Callee	r_config_get_i		3965363	0					
ANR	3967525	Identifier	r_config_get_i		3965363	0					
ANR	3967526	ArgumentList	core -> config		3965363	1					
ANR	3967527	Argument	core -> config		3965363	0					
ANR	3967528	PtrMemberAccess	core -> config		3965363	0					
ANR	3967529	Identifier	core		3965363	0					
ANR	3967530	Identifier	config		3965363	1					
ANR	3967531	Argument	"""asm.hint.jmp"""		3965363	1					
ANR	3967532	PrimaryExpression	"""asm.hint.jmp"""		3965363	0					
ANR	3967533	CompoundStatement		419:61:12093:12093	3965363	1					
ANR	3967534	ExpressionStatement	"r_core_cmd0 ( core , ""e!asm.hint.jmp"" )"	4466:4:115404:115440	3965363	0	True				
ANR	3967535	CallExpression	"r_core_cmd0 ( core , ""e!asm.hint.jmp"" )"		3965363	0					
ANR	3967536	Callee	r_core_cmd0		3965363	0					
ANR	3967537	Identifier	r_core_cmd0		3965363	0					
ANR	3967538	ArgumentList	core		3965363	1					
ANR	3967539	Argument	core		3965363	0					
ANR	3967540	Identifier	core		3965363	0					
ANR	3967541	Argument	"""e!asm.hint.jmp"""		3965363	1					
ANR	3967542	PrimaryExpression	"""e!asm.hint.jmp"""		3965363	0					
ANR	3967543	ExpressionStatement	"r_core_cmd0 ( core , ""e!asm.hint.lea"" )"	4467:4:115446:115482	3965363	1	True				
ANR	3967544	CallExpression	"r_core_cmd0 ( core , ""e!asm.hint.lea"" )"		3965363	0					
ANR	3967545	Callee	r_core_cmd0		3965363	0					
ANR	3967546	Identifier	r_core_cmd0		3965363	0					
ANR	3967547	ArgumentList	core		3965363	1					
ANR	3967548	Argument	core		3965363	0					
ANR	3967549	Identifier	core		3965363	0					
ANR	3967550	Argument	"""e!asm.hint.lea"""		3965363	1					
ANR	3967551	PrimaryExpression	"""e!asm.hint.lea"""		3965363	0					
ANR	3967552	ElseStatement	else		3965363	0					
ANR	3967553	IfStatement	"if ( r_config_get_i ( core -> config , ""asm.hint.lea"" ) )"		3965363	0					
ANR	3967554	Condition	"r_config_get_i ( core -> config , ""asm.hint.lea"" )"	4468:14:115498:115542	3965363	0	True				
ANR	3967555	CallExpression	"r_config_get_i ( core -> config , ""asm.hint.lea"" )"		3965363	0					
ANR	3967556	Callee	r_config_get_i		3965363	0					
ANR	3967557	Identifier	r_config_get_i		3965363	0					
ANR	3967558	ArgumentList	core -> config		3965363	1					
ANR	3967559	Argument	core -> config		3965363	0					
ANR	3967560	PtrMemberAccess	core -> config		3965363	0					
ANR	3967561	Identifier	core		3965363	0					
ANR	3967562	Identifier	config		3965363	1					
ANR	3967563	Argument	"""asm.hint.lea"""		3965363	1					
ANR	3967564	PrimaryExpression	"""asm.hint.lea"""		3965363	0					
ANR	3967565	CompoundStatement		422:61:12240:12240	3965363	1					
ANR	3967566	ExpressionStatement	"r_core_cmd0 ( core , ""e!asm.hint.lea"" )"	4469:4:115551:115587	3965363	0	True				
ANR	3967567	CallExpression	"r_core_cmd0 ( core , ""e!asm.hint.lea"" )"		3965363	0					
ANR	3967568	Callee	r_core_cmd0		3965363	0					
ANR	3967569	Identifier	r_core_cmd0		3965363	0					
ANR	3967570	ArgumentList	core		3965363	1					
ANR	3967571	Argument	core		3965363	0					
ANR	3967572	Identifier	core		3965363	0					
ANR	3967573	Argument	"""e!asm.hint.lea"""		3965363	1					
ANR	3967574	PrimaryExpression	"""e!asm.hint.lea"""		3965363	0					
ANR	3967575	ExpressionStatement	"r_core_cmd0 ( core , ""e!asm.hint.call"" )"	4470:4:115593:115630	3965363	1	True				
ANR	3967576	CallExpression	"r_core_cmd0 ( core , ""e!asm.hint.call"" )"		3965363	0					
ANR	3967577	Callee	r_core_cmd0		3965363	0					
ANR	3967578	Identifier	r_core_cmd0		3965363	0					
ANR	3967579	ArgumentList	core		3965363	1					
ANR	3967580	Argument	core		3965363	0					
ANR	3967581	Identifier	core		3965363	0					
ANR	3967582	Argument	"""e!asm.hint.call"""		3965363	1					
ANR	3967583	PrimaryExpression	"""e!asm.hint.call"""		3965363	0					
ANR	3967584	BreakStatement	break ;	4472:3:115640:115645	3965363	170	True				
ANR	3967585	Label	case '$' :	4473:2:115649:115657	3965363	171	True				
ANR	3967586	ExpressionStatement	"r_core_cmd ( core , ""dr PC=$$"" , 0 )"	4474:3:115662:115694	3965363	172	True				
ANR	3967587	CallExpression	"r_core_cmd ( core , ""dr PC=$$"" , 0 )"		3965363	0					
ANR	3967588	Callee	r_core_cmd		3965363	0					
ANR	3967589	Identifier	r_core_cmd		3965363	0					
ANR	3967590	ArgumentList	core		3965363	1					
ANR	3967591	Argument	core		3965363	0					
ANR	3967592	Identifier	core		3965363	0					
ANR	3967593	Argument	"""dr PC=$$"""		3965363	1					
ANR	3967594	PrimaryExpression	"""dr PC=$$"""		3965363	0					
ANR	3967595	Argument	0		3965363	2					
ANR	3967596	PrimaryExpression	0		3965363	0					
ANR	3967597	ExpressionStatement	"r_core_cmd ( core , ""sr PC"" , 0 )"	4475:3:115699:115728	3965363	173	True				
ANR	3967598	CallExpression	"r_core_cmd ( core , ""sr PC"" , 0 )"		3965363	0					
ANR	3967599	Callee	r_core_cmd		3965363	0					
ANR	3967600	Identifier	r_core_cmd		3965363	0					
ANR	3967601	ArgumentList	core		3965363	1					
ANR	3967602	Argument	core		3965363	0					
ANR	3967603	Identifier	core		3965363	0					
ANR	3967604	Argument	"""sr PC"""		3965363	1					
ANR	3967605	PrimaryExpression	"""sr PC"""		3965363	0					
ANR	3967606	Argument	0		3965363	2					
ANR	3967607	PrimaryExpression	0		3965363	0					
ANR	3967608	ExpressionStatement	g -> need_reload_nodes = true	4476:3:115733:115760	3965363	174	True				
ANR	3967609	AssignmentExpression	g -> need_reload_nodes = true		3965363	0		=			
ANR	3967610	PtrMemberAccess	g -> need_reload_nodes		3965363	0					
ANR	3967611	Identifier	g		3965363	0					
ANR	3967612	Identifier	need_reload_nodes		3965363	1					
ANR	3967613	Identifier	true		3965363	1					
ANR	3967614	BreakStatement	break ;	4477:3:115765:115770	3965363	175	True				
ANR	3967615	Label	case 'R' :	4478:2:115774:115782	3965363	176	True				
ANR	3967616	IfStatement	"if ( r_config_get_i ( core -> config , ""scr.randpal"" ) )"		3965363	177					
ANR	3967617	Condition	"r_config_get_i ( core -> config , ""scr.randpal"" )"	4479:7:115791:115834	3965363	0	True				
ANR	3967618	CallExpression	"r_config_get_i ( core -> config , ""scr.randpal"" )"		3965363	0					
ANR	3967619	Callee	r_config_get_i		3965363	0					
ANR	3967620	Identifier	r_config_get_i		3965363	0					
ANR	3967621	ArgumentList	core -> config		3965363	1					
ANR	3967622	Argument	core -> config		3965363	0					
ANR	3967623	PtrMemberAccess	core -> config		3965363	0					
ANR	3967624	Identifier	core		3965363	0					
ANR	3967625	Identifier	config		3965363	1					
ANR	3967626	Argument	"""scr.randpal"""		3965363	1					
ANR	3967627	PrimaryExpression	"""scr.randpal"""		3965363	0					
ANR	3967628	CompoundStatement		433:53:12532:12532	3965363	1					
ANR	3967629	ExpressionStatement	"r_core_cmd0 ( core , ""ecr"" )"	4480:4:115843:115868	3965363	0	True				
ANR	3967630	CallExpression	"r_core_cmd0 ( core , ""ecr"" )"		3965363	0					
ANR	3967631	Callee	r_core_cmd0		3965363	0					
ANR	3967632	Identifier	r_core_cmd0		3965363	0					
ANR	3967633	ArgumentList	core		3965363	1					
ANR	3967634	Argument	core		3965363	0					
ANR	3967635	Identifier	core		3965363	0					
ANR	3967636	Argument	"""ecr"""		3965363	1					
ANR	3967637	PrimaryExpression	"""ecr"""		3965363	0					
ANR	3967638	ElseStatement	else		3965363	0					
ANR	3967639	CompoundStatement		435:10:12575:12575	3965363	0					
ANR	3967640	ExpressionStatement	"r_core_cmd0 ( core , ""ecn"" )"	4482:4:115886:115911	3965363	0	True				
ANR	3967641	CallExpression	"r_core_cmd0 ( core , ""ecn"" )"		3965363	0					
ANR	3967642	Callee	r_core_cmd0		3965363	0					
ANR	3967643	Identifier	r_core_cmd0		3965363	0					
ANR	3967644	ArgumentList	core		3965363	1					
ANR	3967645	Argument	core		3965363	0					
ANR	3967646	Identifier	core		3965363	0					
ANR	3967647	Argument	"""ecn"""		3965363	1					
ANR	3967648	PrimaryExpression	"""ecn"""		3965363	0					
ANR	3967649	IfStatement	if ( ! fcn )		3965363	178					
ANR	3967650	Condition	! fcn	4484:7:115925:115928	3965363	0	True				
ANR	3967651	UnaryOperationExpression	! fcn		3965363	0					
ANR	3967652	UnaryOperator	!		3965363	0					
ANR	3967653	Identifier	fcn		3965363	1					
ANR	3967654	CompoundStatement		438:13:12626:12626	3965363	1					
ANR	3967655	BreakStatement	break ;	4485:4:115937:115942	3965363	0	True				
ANR	3967656	ExpressionStatement	"g -> edgemode = r_config_get_i ( core -> config , ""graph.edges"" )"	4487:3:115952:116010	3965363	179	True				
ANR	3967657	AssignmentExpression	"g -> edgemode = r_config_get_i ( core -> config , ""graph.edges"" )"		3965363	0		=			
ANR	3967658	PtrMemberAccess	g -> edgemode		3965363	0					
ANR	3967659	Identifier	g		3965363	0					
ANR	3967660	Identifier	edgemode		3965363	1					
ANR	3967661	CallExpression	"r_config_get_i ( core -> config , ""graph.edges"" )"		3965363	1					
ANR	3967662	Callee	r_config_get_i		3965363	0					
ANR	3967663	Identifier	r_config_get_i		3965363	0					
ANR	3967664	ArgumentList	core -> config		3965363	1					
ANR	3967665	Argument	core -> config		3965363	0					
ANR	3967666	PtrMemberAccess	core -> config		3965363	0					
ANR	3967667	Identifier	core		3965363	0					
ANR	3967668	Identifier	config		3965363	1					
ANR	3967669	Argument	"""graph.edges"""		3965363	1					
ANR	3967670	PrimaryExpression	"""graph.edges"""		3965363	0					
ANR	3967671	ExpressionStatement	"get_bbupdate ( g , core , fcn )"	4488:3:116015:116042	3965363	180	True				
ANR	3967672	CallExpression	"get_bbupdate ( g , core , fcn )"		3965363	0					
ANR	3967673	Callee	get_bbupdate		3965363	0					
ANR	3967674	Identifier	get_bbupdate		3965363	0					
ANR	3967675	ArgumentList	g		3965363	1					
ANR	3967676	Argument	g		3965363	0					
ANR	3967677	Identifier	g		3965363	0					
ANR	3967678	Argument	core		3965363	1					
ANR	3967679	Identifier	core		3965363	0					
ANR	3967680	Argument	fcn		3965363	2					
ANR	3967681	Identifier	fcn		3965363	0					
ANR	3967682	BreakStatement	break ;	4489:3:116047:116052	3965363	181	True				
ANR	3967683	Label	case '!' :	4490:2:116056:116064	3965363	182	True				
ANR	3967684	ExpressionStatement	"r_core_visual_panels_root ( core , core -> panels_root )"	4491:3:116069:116120	3965363	183	True				
ANR	3967685	CallExpression	"r_core_visual_panels_root ( core , core -> panels_root )"		3965363	0					
ANR	3967686	Callee	r_core_visual_panels_root		3965363	0					
ANR	3967687	Identifier	r_core_visual_panels_root		3965363	0					
ANR	3967688	ArgumentList	core		3965363	1					
ANR	3967689	Argument	core		3965363	0					
ANR	3967690	Identifier	core		3965363	0					
ANR	3967691	Argument	core -> panels_root		3965363	1					
ANR	3967692	PtrMemberAccess	core -> panels_root		3965363	0					
ANR	3967693	Identifier	core		3965363	0					
ANR	3967694	Identifier	panels_root		3965363	1					
ANR	3967695	BreakStatement	break ;	4492:3:116125:116130	3965363	184	True				
ANR	3967696	Label	case '\\'' :	4493:2:116134:116143	3965363	185	True				
ANR	3967697	IfStatement	if ( fcn )		3965363	186					
ANR	3967698	Condition	fcn	4494:7:116152:116154	3965363	0	True				
ANR	3967699	Identifier	fcn		3965363	0					
ANR	3967700	CompoundStatement		448:12:12852:12852	3965363	1					
ANR	3967701	ExpressionStatement	"r_config_toggle ( core -> config , ""graph.comments"" )"	4495:4:116163:116211	3965363	0	True				
ANR	3967702	CallExpression	"r_config_toggle ( core -> config , ""graph.comments"" )"		3965363	0					
ANR	3967703	Callee	r_config_toggle		3965363	0					
ANR	3967704	Identifier	r_config_toggle		3965363	0					
ANR	3967705	ArgumentList	core -> config		3965363	1					
ANR	3967706	Argument	core -> config		3965363	0					
ANR	3967707	PtrMemberAccess	core -> config		3965363	0					
ANR	3967708	Identifier	core		3965363	0					
ANR	3967709	Identifier	config		3965363	1					
ANR	3967710	Argument	"""graph.comments"""		3965363	1					
ANR	3967711	PrimaryExpression	"""graph.comments"""		3965363	0					
ANR	3967712	ExpressionStatement	g -> need_reload_nodes = true	4496:4:116217:116244	3965363	1	True				
ANR	3967713	AssignmentExpression	g -> need_reload_nodes = true		3965363	0		=			
ANR	3967714	PtrMemberAccess	g -> need_reload_nodes		3965363	0					
ANR	3967715	Identifier	g		3965363	0					
ANR	3967716	Identifier	need_reload_nodes		3965363	1					
ANR	3967717	Identifier	true		3965363	1					
ANR	3967718	BreakStatement	break ;	4498:3:116254:116259	3965363	187	True				
ANR	3967719	Label	case ';' :	4499:2:116263:116271	3965363	188	True				
ANR	3967720	IfStatement	if ( fcn )		3965363	189					
ANR	3967721	Condition	fcn	4500:7:116280:116282	3965363	0	True				
ANR	3967722	Identifier	fcn		3965363	0					
ANR	3967723	CompoundStatement		456:4:13015:13028	3965363	1					
ANR	3967724	ExpressionStatement	"showcursor ( core , true )"	4501:4:116291:116314	3965363	0	True				
ANR	3967725	CallExpression	"showcursor ( core , true )"		3965363	0					
ANR	3967726	Callee	showcursor		3965363	0					
ANR	3967727	Identifier	showcursor		3965363	0					
ANR	3967728	ArgumentList	core		3965363	1					
ANR	3967729	Argument	core		3965363	0					
ANR	3967730	Identifier	core		3965363	0					
ANR	3967731	Argument	true		3965363	1					
ANR	3967732	Identifier	true		3965363	0					
ANR	3967733	IdentifierDeclStatement	char buf [ 256 ] ;	4502:4:116320:116333	3965363	1	True				
ANR	3967734	IdentifierDecl	buf [ 256 ]		3965363	0					
ANR	3967735	IdentifierDeclType	char [ 256 ]		3965363	0					
ANR	3967736	Identifier	buf		3965363	1					
ANR	3967737	PrimaryExpression	256		3965363	2					
ANR	3967738	ExpressionStatement	"r_line_set_prompt ( ""[comment]> "" )"	4503:4:116339:116372	3965363	2	True				
ANR	3967739	CallExpression	"r_line_set_prompt ( ""[comment]> "" )"		3965363	0					
ANR	3967740	Callee	r_line_set_prompt		3965363	0					
ANR	3967741	Identifier	r_line_set_prompt		3965363	0					
ANR	3967742	ArgumentList	"""[comment]> """		3965363	1					
ANR	3967743	Argument	"""[comment]> """		3965363	0					
ANR	3967744	PrimaryExpression	"""[comment]> """		3965363	0					
ANR	3967745	IfStatement	"if ( r_cons_fgets ( buf , sizeof ( buf ) - 1 , 0 , NULL ) > 0 )"		3965363	3					
ANR	3967746	Condition	"r_cons_fgets ( buf , sizeof ( buf ) - 1 , 0 , NULL ) > 0"	4504:8:116382:116430	3965363	0	True				
ANR	3967747	RelationalExpression	"r_cons_fgets ( buf , sizeof ( buf ) - 1 , 0 , NULL ) > 0"		3965363	0		>			
ANR	3967748	CallExpression	"r_cons_fgets ( buf , sizeof ( buf ) - 1 , 0 , NULL )"		3965363	0					
ANR	3967749	Callee	r_cons_fgets		3965363	0					
ANR	3967750	Identifier	r_cons_fgets		3965363	0					
ANR	3967751	ArgumentList	buf		3965363	1					
ANR	3967752	Argument	buf		3965363	0					
ANR	3967753	Identifier	buf		3965363	0					
ANR	3967754	Argument	sizeof ( buf ) - 1		3965363	1					
ANR	3967755	AdditiveExpression	sizeof ( buf ) - 1		3965363	0		-			
ANR	3967756	SizeofExpression	sizeof ( buf )		3965363	0					
ANR	3967757	Sizeof	sizeof		3965363	0					
ANR	3967758	SizeofOperand	buf		3965363	1					
ANR	3967759	PrimaryExpression	1		3965363	1					
ANR	3967760	Argument	0		3965363	2					
ANR	3967761	PrimaryExpression	0		3965363	0					
ANR	3967762	Argument	NULL		3965363	3					
ANR	3967763	Identifier	NULL		3965363	0					
ANR	3967764	PrimaryExpression	0		3965363	1					
ANR	3967765	CompoundStatement		458:59:13128:13128	3965363	1					
ANR	3967766	ExpressionStatement	"r_core_cmdf ( core , ""\\""CC %s\\"""" , buf )"	4505:5:116440:116476	3965363	0	True				
ANR	3967767	CallExpression	"r_core_cmdf ( core , ""\\""CC %s\\"""" , buf )"		3965363	0					
ANR	3967768	Callee	r_core_cmdf		3965363	0					
ANR	3967769	Identifier	r_core_cmdf		3965363	0					
ANR	3967770	ArgumentList	core		3965363	1					
ANR	3967771	Argument	core		3965363	0					
ANR	3967772	Identifier	core		3965363	0					
ANR	3967773	Argument	"""\\""CC %s\\"""""		3965363	1					
ANR	3967774	PrimaryExpression	"""\\""CC %s\\"""""		3965363	0					
ANR	3967775	Argument	buf		3965363	2					
ANR	3967776	Identifier	buf		3965363	0					
ANR	3967777	ExpressionStatement	g -> need_reload_nodes = true	4507:4:116488:116515	3965363	4	True				
ANR	3967778	AssignmentExpression	g -> need_reload_nodes = true		3965363	0		=			
ANR	3967779	PtrMemberAccess	g -> need_reload_nodes		3965363	0					
ANR	3967780	Identifier	g		3965363	0					
ANR	3967781	Identifier	need_reload_nodes		3965363	1					
ANR	3967782	Identifier	true		3965363	1					
ANR	3967783	ExpressionStatement	"showcursor ( core , false )"	4508:4:116521:116545	3965363	5	True				
ANR	3967784	CallExpression	"showcursor ( core , false )"		3965363	0					
ANR	3967785	Callee	showcursor		3965363	0					
ANR	3967786	Identifier	showcursor		3965363	0					
ANR	3967787	ArgumentList	core		3965363	1					
ANR	3967788	Argument	core		3965363	0					
ANR	3967789	Identifier	core		3965363	0					
ANR	3967790	Argument	false		3965363	1					
ANR	3967791	Identifier	false		3965363	0					
ANR	3967792	BreakStatement	break ;	4510:3:116555:116560	3965363	190	True				
ANR	3967793	Label	case 'C' :	4511:2:116564:116572	3965363	191	True				
ANR	3967794	ExpressionStatement	rotateColor ( core )	4512:3:116577:116595	3965363	192	True				
ANR	3967795	CallExpression	rotateColor ( core )		3965363	0					
ANR	3967796	Callee	rotateColor		3965363	0					
ANR	3967797	Identifier	rotateColor		3965363	0					
ANR	3967798	ArgumentList	core		3965363	1					
ANR	3967799	Argument	core		3965363	0					
ANR	3967800	Identifier	core		3965363	0					
ANR	3967801	BreakStatement	break ;	4513:3:116600:116605	3965363	193	True				
ANR	3967802	Label	case 'm' :	4514:2:116609:116617	3965363	194	True				
ANR	3967803	ExpressionStatement	mousemode ++	4515:3:116622:116633	3965363	195	True				
ANR	3967804	PostIncDecOperationExpression	mousemode ++		3965363	0					
ANR	3967805	Identifier	mousemode		3965363	0					
ANR	3967806	IncDec	++		3965363	1					
ANR	3967807	IfStatement	if ( ! mousemodes [ mousemode ] )		3965363	196					
ANR	3967808	Condition	! mousemodes [ mousemode ]	4516:7:116642:116663	3965363	0	True				
ANR	3967809	UnaryOperationExpression	! mousemodes [ mousemode ]		3965363	0					
ANR	3967810	UnaryOperator	!		3965363	0					
ANR	3967811	ArrayIndexing	mousemodes [ mousemode ]		3965363	1					
ANR	3967812	Identifier	mousemodes		3965363	0					
ANR	3967813	Identifier	mousemode		3965363	1					
ANR	3967814	CompoundStatement		470:31:13361:13361	3965363	1					
ANR	3967815	ExpressionStatement	mousemode = 0	4517:4:116672:116685	3965363	0	True				
ANR	3967816	AssignmentExpression	mousemode = 0		3965363	0		=			
ANR	3967817	Identifier	mousemode		3965363	0					
ANR	3967818	PrimaryExpression	0		3965363	1					
ANR	3967819	BreakStatement	break ;	4519:3:116695:116700	3965363	197	True				
ANR	3967820	Label	case 'M' :	4520:2:116704:116712	3965363	198	True				
ANR	3967821	ExpressionStatement	mousemode --	4521:3:116717:116728	3965363	199	True				
ANR	3967822	PostIncDecOperationExpression	mousemode --		3965363	0					
ANR	3967823	Identifier	mousemode		3965363	0					
ANR	3967824	IncDec	--		3965363	1					
ANR	3967825	IfStatement	if ( mousemode < 0 )		3965363	200					
ANR	3967826	Condition	mousemode < 0	4522:7:116737:116749	3965363	0	True				
ANR	3967827	RelationalExpression	mousemode < 0		3965363	0		<			
ANR	3967828	Identifier	mousemode		3965363	0					
ANR	3967829	PrimaryExpression	0		3965363	1					
ANR	3967830	CompoundStatement		476:22:13447:13447	3965363	1					
ANR	3967831	ExpressionStatement	mousemode = 3	4523:4:116758:116771	3965363	0	True				
ANR	3967832	AssignmentExpression	mousemode = 3		3965363	0		=			
ANR	3967833	Identifier	mousemode		3965363	0					
ANR	3967834	PrimaryExpression	3		3965363	1					
ANR	3967835	BreakStatement	break ;	4525:3:116781:116786	3965363	201	True				
ANR	3967836	Label	case '(' :	4526:2:116790:116798	3965363	202	True				
ANR	3967837	IfStatement	if ( fcn )		3965363	203					
ANR	3967838	Condition	fcn	4527:7:116807:116809	3965363	0	True				
ANR	3967839	Identifier	fcn		3965363	0					
ANR	3967840	CompoundStatement		481:12:13507:13507	3965363	1					
ANR	3967841	ExpressionStatement	"r_core_cmd0 ( core , ""wao recj@B:-1"" )"	4528:4:116818:116853	3965363	0	True				
ANR	3967842	CallExpression	"r_core_cmd0 ( core , ""wao recj@B:-1"" )"		3965363	0					
ANR	3967843	Callee	r_core_cmd0		3965363	0					
ANR	3967844	Identifier	r_core_cmd0		3965363	0					
ANR	3967845	ArgumentList	core		3965363	1					
ANR	3967846	Argument	core		3965363	0					
ANR	3967847	Identifier	core		3965363	0					
ANR	3967848	Argument	"""wao recj@B:-1"""		3965363	1					
ANR	3967849	PrimaryExpression	"""wao recj@B:-1"""		3965363	0					
ANR	3967850	ExpressionStatement	g -> need_reload_nodes = true	4529:4:116859:116886	3965363	1	True				
ANR	3967851	AssignmentExpression	g -> need_reload_nodes = true		3965363	0		=			
ANR	3967852	PtrMemberAccess	g -> need_reload_nodes		3965363	0					
ANR	3967853	Identifier	g		3965363	0					
ANR	3967854	Identifier	need_reload_nodes		3965363	1					
ANR	3967855	Identifier	true		3965363	1					
ANR	3967856	BreakStatement	break ;	4531:3:116896:116901	3965363	204	True				
ANR	3967857	Label	case ')' :	4532:2:116905:116913	3965363	205	True				
ANR	3967858	IfStatement	if ( fcn )		3965363	206					
ANR	3967859	Condition	fcn	4533:7:116922:116924	3965363	0	True				
ANR	3967860	Identifier	fcn		3965363	0					
ANR	3967861	CompoundStatement		487:12:13622:13622	3965363	1					
ANR	3967862	ExpressionStatement	rotateAsmemu ( core )	4534:4:116933:116952	3965363	0	True				
ANR	3967863	CallExpression	rotateAsmemu ( core )		3965363	0					
ANR	3967864	Callee	rotateAsmemu		3965363	0					
ANR	3967865	Identifier	rotateAsmemu		3965363	0					
ANR	3967866	ArgumentList	core		3965363	1					
ANR	3967867	Argument	core		3965363	0					
ANR	3967868	Identifier	core		3965363	0					
ANR	3967869	ExpressionStatement	g -> need_reload_nodes = true	4535:4:116958:116985	3965363	1	True				
ANR	3967870	AssignmentExpression	g -> need_reload_nodes = true		3965363	0		=			
ANR	3967871	PtrMemberAccess	g -> need_reload_nodes		3965363	0					
ANR	3967872	Identifier	g		3965363	0					
ANR	3967873	Identifier	need_reload_nodes		3965363	1					
ANR	3967874	Identifier	true		3965363	1					
ANR	3967875	BreakStatement	break ;	4537:3:116995:117000	3965363	207	True				
ANR	3967876	Label	case 'd' :	4538:2:117004:117012	3965363	208	True				
ANR	3967877	CompoundStatement		493:3:13712:13712	3965363	209					
ANR	3967878	ExpressionStatement	"showcursor ( core , true )"	4540:4:117023:117046	3965363	0	True				
ANR	3967879	CallExpression	"showcursor ( core , true )"		3965363	0					
ANR	3967880	Callee	showcursor		3965363	0					
ANR	3967881	Identifier	showcursor		3965363	0					
ANR	3967882	ArgumentList	core		3965363	1					
ANR	3967883	Argument	core		3965363	0					
ANR	3967884	Identifier	core		3965363	0					
ANR	3967885	Argument	true		3965363	1					
ANR	3967886	Identifier	true		3965363	0					
ANR	3967887	ExpressionStatement	"r_config_set_i ( core -> config , ""scr.interactive"" , true )"	4542:4:117064:117118	3965363	1	True				
ANR	3967888	CallExpression	"r_config_set_i ( core -> config , ""scr.interactive"" , true )"		3965363	0					
ANR	3967889	Callee	r_config_set_i		3965363	0					
ANR	3967890	Identifier	r_config_set_i		3965363	0					
ANR	3967891	ArgumentList	core -> config		3965363	1					
ANR	3967892	Argument	core -> config		3965363	0					
ANR	3967893	PtrMemberAccess	core -> config		3965363	0					
ANR	3967894	Identifier	core		3965363	0					
ANR	3967895	Identifier	config		3965363	1					
ANR	3967896	Argument	"""scr.interactive"""		3965363	1					
ANR	3967897	PrimaryExpression	"""scr.interactive"""		3965363	0					
ANR	3967898	Argument	true		3965363	2					
ANR	3967899	Identifier	true		3965363	0					
ANR	3967900	ExpressionStatement	"r_core_visual_define ( core , """" , 0 )"	4543:4:117124:117158	3965363	2	True				
ANR	3967901	CallExpression	"r_core_visual_define ( core , """" , 0 )"		3965363	0					
ANR	3967902	Callee	r_core_visual_define		3965363	0					
ANR	3967903	Identifier	r_core_visual_define		3965363	0					
ANR	3967904	ArgumentList	core		3965363	1					
ANR	3967905	Argument	core		3965363	0					
ANR	3967906	Identifier	core		3965363	0					
ANR	3967907	Argument	""""""		3965363	1					
ANR	3967908	PrimaryExpression	""""""		3965363	0					
ANR	3967909	Argument	0		3965363	2					
ANR	3967910	PrimaryExpression	0		3965363	0					
ANR	3967911	ExpressionStatement	"get_bbupdate ( g , core , fcn )"	4544:4:117164:117191	3965363	3	True				
ANR	3967912	CallExpression	"get_bbupdate ( g , core , fcn )"		3965363	0					
ANR	3967913	Callee	get_bbupdate		3965363	0					
ANR	3967914	Identifier	get_bbupdate		3965363	0					
ANR	3967915	ArgumentList	g		3965363	1					
ANR	3967916	Argument	g		3965363	0					
ANR	3967917	Identifier	g		3965363	0					
ANR	3967918	Argument	core		3965363	1					
ANR	3967919	Identifier	core		3965363	0					
ANR	3967920	Argument	fcn		3965363	2					
ANR	3967921	Identifier	fcn		3965363	0					
ANR	3967922	ExpressionStatement	"showcursor ( core , false )"	4545:4:117197:117221	3965363	4	True				
ANR	3967923	CallExpression	"showcursor ( core , false )"		3965363	0					
ANR	3967924	Callee	showcursor		3965363	0					
ANR	3967925	Identifier	showcursor		3965363	0					
ANR	3967926	ArgumentList	core		3965363	1					
ANR	3967927	Argument	core		3965363	0					
ANR	3967928	Identifier	core		3965363	0					
ANR	3967929	Argument	false		3965363	1					
ANR	3967930	Identifier	false		3965363	0					
ANR	3967931	BreakStatement	break ;	4547:3:117231:117236	3965363	210	True				
ANR	3967932	Label	case 'D' :	4548:2:117240:117248	3965363	211	True				
ANR	3967933	ExpressionStatement	g -> is_dis = ! g -> is_dis	4549:3:117253:117275	3965363	212	True				
ANR	3967934	AssignmentExpression	g -> is_dis = ! g -> is_dis		3965363	0		=			
ANR	3967935	PtrMemberAccess	g -> is_dis		3965363	0					
ANR	3967936	Identifier	g		3965363	0					
ANR	3967937	Identifier	is_dis		3965363	1					
ANR	3967938	UnaryOperationExpression	! g -> is_dis		3965363	1					
ANR	3967939	UnaryOperator	!		3965363	0					
ANR	3967940	PtrMemberAccess	g -> is_dis		3965363	1					
ANR	3967941	Identifier	g		3965363	0					
ANR	3967942	Identifier	is_dis		3965363	1					
ANR	3967943	BreakStatement	break ;	4550:3:117280:117285	3965363	213	True				
ANR	3967944	Label	case 'n' :	4551:2:117289:117297	3965363	214	True				
ANR	3967945	ExpressionStatement	"r_core_seek_next ( core , r_config_get ( core -> config , ""scr.nkey"" ) )"	4552:3:117302:117366	3965363	215	True				
ANR	3967946	CallExpression	"r_core_seek_next ( core , r_config_get ( core -> config , ""scr.nkey"" ) )"		3965363	0					
ANR	3967947	Callee	r_core_seek_next		3965363	0					
ANR	3967948	Identifier	r_core_seek_next		3965363	0					
ANR	3967949	ArgumentList	core		3965363	1					
ANR	3967950	Argument	core		3965363	0					
ANR	3967951	Identifier	core		3965363	0					
ANR	3967952	Argument	"r_config_get ( core -> config , ""scr.nkey"" )"		3965363	1					
ANR	3967953	CallExpression	"r_config_get ( core -> config , ""scr.nkey"" )"		3965363	0					
ANR	3967954	Callee	r_config_get		3965363	0					
ANR	3967955	Identifier	r_config_get		3965363	0					
ANR	3967956	ArgumentList	core -> config		3965363	1					
ANR	3967957	Argument	core -> config		3965363	0					
ANR	3967958	PtrMemberAccess	core -> config		3965363	0					
ANR	3967959	Identifier	core		3965363	0					
ANR	3967960	Identifier	config		3965363	1					
ANR	3967961	Argument	"""scr.nkey"""		3965363	1					
ANR	3967962	PrimaryExpression	"""scr.nkey"""		3965363	0					
ANR	3967963	BreakStatement	break ;	4553:3:117371:117376	3965363	216	True				
ANR	3967964	Label	case 'N' :	4554:2:117380:117388	3965363	217	True				
ANR	3967965	ExpressionStatement	"r_core_seek_previous ( core , r_config_get ( core -> config , ""scr.nkey"" ) )"	4555:3:117393:117461	3965363	218	True				
ANR	3967966	CallExpression	"r_core_seek_previous ( core , r_config_get ( core -> config , ""scr.nkey"" ) )"		3965363	0					
ANR	3967967	Callee	r_core_seek_previous		3965363	0					
ANR	3967968	Identifier	r_core_seek_previous		3965363	0					
ANR	3967969	ArgumentList	core		3965363	1					
ANR	3967970	Argument	core		3965363	0					
ANR	3967971	Identifier	core		3965363	0					
ANR	3967972	Argument	"r_config_get ( core -> config , ""scr.nkey"" )"		3965363	1					
ANR	3967973	CallExpression	"r_config_get ( core -> config , ""scr.nkey"" )"		3965363	0					
ANR	3967974	Callee	r_config_get		3965363	0					
ANR	3967975	Identifier	r_config_get		3965363	0					
ANR	3967976	ArgumentList	core -> config		3965363	1					
ANR	3967977	Argument	core -> config		3965363	0					
ANR	3967978	PtrMemberAccess	core -> config		3965363	0					
ANR	3967979	Identifier	core		3965363	0					
ANR	3967980	Identifier	config		3965363	1					
ANR	3967981	Argument	"""scr.nkey"""		3965363	1					
ANR	3967982	PrimaryExpression	"""scr.nkey"""		3965363	0					
ANR	3967983	BreakStatement	break ;	4556:3:117466:117471	3965363	219	True				
ANR	3967984	Label	case 'Y' :	4557:2:117475:117483	3965363	220	True				
ANR	3967985	ExpressionStatement	agraph_toggle_tiny ( g )	4558:3:117488:117510	3965363	221	True				
ANR	3967986	CallExpression	agraph_toggle_tiny ( g )		3965363	0					
ANR	3967987	Callee	agraph_toggle_tiny		3965363	0					
ANR	3967988	Identifier	agraph_toggle_tiny		3965363	0					
ANR	3967989	ArgumentList	g		3965363	1					
ANR	3967990	Argument	g		3965363	0					
ANR	3967991	Identifier	g		3965363	0					
ANR	3967992	ExpressionStatement	"agraph_update_seek ( g , get_anode ( g -> curnode ) , true )"	4559:3:117515:117567	3965363	222	True				
ANR	3967993	CallExpression	"agraph_update_seek ( g , get_anode ( g -> curnode ) , true )"		3965363	0					
ANR	3967994	Callee	agraph_update_seek		3965363	0					
ANR	3967995	Identifier	agraph_update_seek		3965363	0					
ANR	3967996	ArgumentList	g		3965363	1					
ANR	3967997	Argument	g		3965363	0					
ANR	3967998	Identifier	g		3965363	0					
ANR	3967999	Argument	get_anode ( g -> curnode )		3965363	1					
ANR	3968000	CallExpression	get_anode ( g -> curnode )		3965363	0					
ANR	3968001	Callee	get_anode		3965363	0					
ANR	3968002	Identifier	get_anode		3965363	0					
ANR	3968003	ArgumentList	g -> curnode		3965363	1					
ANR	3968004	Argument	g -> curnode		3965363	0					
ANR	3968005	PtrMemberAccess	g -> curnode		3965363	0					
ANR	3968006	Identifier	g		3965363	0					
ANR	3968007	Identifier	curnode		3965363	1					
ANR	3968008	Argument	true		3965363	2					
ANR	3968009	Identifier	true		3965363	0					
ANR	3968010	BreakStatement	break ;	4560:3:117572:117577	3965363	223	True				
ANR	3968011	Label	case 'z' :	4561:2:117581:117589	3965363	224	True				
ANR	3968012	ExpressionStatement	agraph_toggle_mini ( g )	4562:3:117594:117616	3965363	225	True				
ANR	3968013	CallExpression	agraph_toggle_mini ( g )		3965363	0					
ANR	3968014	Callee	agraph_toggle_mini		3965363	0					
ANR	3968015	Identifier	agraph_toggle_mini		3965363	0					
ANR	3968016	ArgumentList	g		3965363	1					
ANR	3968017	Argument	g		3965363	0					
ANR	3968018	Identifier	g		3965363	0					
ANR	3968019	ExpressionStatement	discroll = 0	4563:3:117621:117633	3965363	226	True				
ANR	3968020	AssignmentExpression	discroll = 0		3965363	0		=			
ANR	3968021	Identifier	discroll		3965363	0					
ANR	3968022	PrimaryExpression	0		3965363	1					
ANR	3968023	ExpressionStatement	"agraph_update_seek ( g , get_anode ( g -> curnode ) , true )"	4564:3:117638:117690	3965363	227	True				
ANR	3968024	CallExpression	"agraph_update_seek ( g , get_anode ( g -> curnode ) , true )"		3965363	0					
ANR	3968025	Callee	agraph_update_seek		3965363	0					
ANR	3968026	Identifier	agraph_update_seek		3965363	0					
ANR	3968027	ArgumentList	g		3965363	1					
ANR	3968028	Argument	g		3965363	0					
ANR	3968029	Identifier	g		3965363	0					
ANR	3968030	Argument	get_anode ( g -> curnode )		3965363	1					
ANR	3968031	CallExpression	get_anode ( g -> curnode )		3965363	0					
ANR	3968032	Callee	get_anode		3965363	0					
ANR	3968033	Identifier	get_anode		3965363	0					
ANR	3968034	ArgumentList	g -> curnode		3965363	1					
ANR	3968035	Argument	g -> curnode		3965363	0					
ANR	3968036	PtrMemberAccess	g -> curnode		3965363	0					
ANR	3968037	Identifier	g		3965363	0					
ANR	3968038	Identifier	curnode		3965363	1					
ANR	3968039	Argument	true		3965363	2					
ANR	3968040	Identifier	true		3965363	0					
ANR	3968041	BreakStatement	break ;	4565:3:117695:117700	3965363	228	True				
ANR	3968042	Label	case 'v' :	4566:2:117704:117712	3965363	229	True				
ANR	3968043	ExpressionStatement	"r_core_visual_anal ( core , NULL )"	4567:3:117717:117748	3965363	230	True				
ANR	3968044	CallExpression	"r_core_visual_anal ( core , NULL )"		3965363	0					
ANR	3968045	Callee	r_core_visual_anal		3965363	0					
ANR	3968046	Identifier	r_core_visual_anal		3965363	0					
ANR	3968047	ArgumentList	core		3965363	1					
ANR	3968048	Argument	core		3965363	0					
ANR	3968049	Identifier	core		3965363	0					
ANR	3968050	Argument	NULL		3965363	1					
ANR	3968051	Identifier	NULL		3965363	0					
ANR	3968052	BreakStatement	break ;	4568:3:117753:117758	3965363	231	True				
ANR	3968053	Label	case 'J' :	4569:2:117762:117770	3965363	232	True				
ANR	3968054	IfStatement	if ( graphCursor )		3965363	233					
ANR	3968055	Condition	graphCursor	4571:7:117804:117814	3965363	0	True				
ANR	3968056	Identifier	graphCursor		3965363	0					
ANR	3968057	CompoundStatement		526:4:14518:14567	3965363	1					
ANR	3968058	IdentifierDeclStatement	int speed = ( okey == 27 ) ? PAGEKEY_SPEED : movspeed ;	4572:4:117823:117872	3965363	0	True				
ANR	3968059	IdentifierDecl	speed = ( okey == 27 ) ? PAGEKEY_SPEED : movspeed		3965363	0					
ANR	3968060	IdentifierDeclType	int		3965363	0					
ANR	3968061	Identifier	speed		3965363	1					
ANR	3968062	AssignmentExpression	speed = ( okey == 27 ) ? PAGEKEY_SPEED : movspeed		3965363	2		=			
ANR	3968063	Identifier	speed		3965363	0					
ANR	3968064	ConditionalExpression	( okey == 27 ) ? PAGEKEY_SPEED : movspeed		3965363	1					
ANR	3968065	Condition	okey == 27		3965363	0					
ANR	3968066	EqualityExpression	okey == 27		3965363	0		==			
ANR	3968067	Identifier	okey		3965363	0					
ANR	3968068	PrimaryExpression	27		3965363	1					
ANR	3968069	Identifier	PAGEKEY_SPEED		3965363	1					
ANR	3968070	Identifier	movspeed		3965363	2					
ANR	3968071	ExpressionStatement	"graphNodeMove ( g , 'j' , speed * 2 )"	4573:4:117878:117911	3965363	1	True				
ANR	3968072	CallExpression	"graphNodeMove ( g , 'j' , speed * 2 )"		3965363	0					
ANR	3968073	Callee	graphNodeMove		3965363	0					
ANR	3968074	Identifier	graphNodeMove		3965363	0					
ANR	3968075	ArgumentList	g		3965363	1					
ANR	3968076	Argument	g		3965363	0					
ANR	3968077	Identifier	g		3965363	0					
ANR	3968078	Argument	'j'		3965363	1					
ANR	3968079	PrimaryExpression	'j'		3965363	0					
ANR	3968080	Argument	speed * 2		3965363	2					
ANR	3968081	MultiplicativeExpression	speed * 2		3965363	0		*			
ANR	3968082	Identifier	speed		3965363	0					
ANR	3968083	PrimaryExpression	2		3965363	1					
ANR	3968084	ElseStatement	else		3965363	0					
ANR	3968085	CompoundStatement		528:10:14618:14618	3965363	0					
ANR	3968086	ExpressionStatement	can -> sy -= ( 5 * movspeed ) * ( invscroll ? - 1 : 1 )	4575:4:117929:117973	3965363	0	True				
ANR	3968087	AssignmentExpression	can -> sy -= ( 5 * movspeed ) * ( invscroll ? - 1 : 1 )		3965363	0		-=			
ANR	3968088	PtrMemberAccess	can -> sy		3965363	0					
ANR	3968089	Identifier	can		3965363	0					
ANR	3968090	Identifier	sy		3965363	1					
ANR	3968091	MultiplicativeExpression	( 5 * movspeed ) * ( invscroll ? - 1 : 1 )		3965363	1		*			
ANR	3968092	MultiplicativeExpression	5 * movspeed		3965363	0		*			
ANR	3968093	PrimaryExpression	5		3965363	0					
ANR	3968094	Identifier	movspeed		3965363	1					
ANR	3968095	ConditionalExpression	invscroll ? - 1 : 1		3965363	1					
ANR	3968096	Condition	invscroll		3965363	0					
ANR	3968097	Identifier	invscroll		3965363	0					
ANR	3968098	UnaryOperationExpression	- 1		3965363	1					
ANR	3968099	UnaryOperator	-		3965363	0					
ANR	3968100	PrimaryExpression	1		3965363	1					
ANR	3968101	PrimaryExpression	1		3965363	2					
ANR	3968102	BreakStatement	break ;	4577:3:117983:117988	3965363	234	True				
ANR	3968103	Label	case 'K' :	4578:2:117992:118000	3965363	235	True				
ANR	3968104	IfStatement	if ( graphCursor )		3965363	236					
ANR	3968105	Condition	graphCursor	4579:7:118009:118019	3965363	0	True				
ANR	3968106	Identifier	graphCursor		3965363	0					
ANR	3968107	CompoundStatement		534:4:14723:14772	3965363	1					
ANR	3968108	IdentifierDeclStatement	int speed = ( okey == 27 ) ? PAGEKEY_SPEED : movspeed ;	4580:4:118028:118077	3965363	0	True				
ANR	3968109	IdentifierDecl	speed = ( okey == 27 ) ? PAGEKEY_SPEED : movspeed		3965363	0					
ANR	3968110	IdentifierDeclType	int		3965363	0					
ANR	3968111	Identifier	speed		3965363	1					
ANR	3968112	AssignmentExpression	speed = ( okey == 27 ) ? PAGEKEY_SPEED : movspeed		3965363	2		=			
ANR	3968113	Identifier	speed		3965363	0					
ANR	3968114	ConditionalExpression	( okey == 27 ) ? PAGEKEY_SPEED : movspeed		3965363	1					
ANR	3968115	Condition	okey == 27		3965363	0					
ANR	3968116	EqualityExpression	okey == 27		3965363	0		==			
ANR	3968117	Identifier	okey		3965363	0					
ANR	3968118	PrimaryExpression	27		3965363	1					
ANR	3968119	Identifier	PAGEKEY_SPEED		3965363	1					
ANR	3968120	Identifier	movspeed		3965363	2					
ANR	3968121	ExpressionStatement	"graphNodeMove ( g , 'k' , speed * 2 )"	4581:4:118083:118116	3965363	1	True				
ANR	3968122	CallExpression	"graphNodeMove ( g , 'k' , speed * 2 )"		3965363	0					
ANR	3968123	Callee	graphNodeMove		3965363	0					
ANR	3968124	Identifier	graphNodeMove		3965363	0					
ANR	3968125	ArgumentList	g		3965363	1					
ANR	3968126	Argument	g		3965363	0					
ANR	3968127	Identifier	g		3965363	0					
ANR	3968128	Argument	'k'		3965363	1					
ANR	3968129	PrimaryExpression	'k'		3965363	0					
ANR	3968130	Argument	speed * 2		3965363	2					
ANR	3968131	MultiplicativeExpression	speed * 2		3965363	0		*			
ANR	3968132	Identifier	speed		3965363	0					
ANR	3968133	PrimaryExpression	2		3965363	1					
ANR	3968134	ElseStatement	else		3965363	0					
ANR	3968135	CompoundStatement		536:10:14823:14823	3965363	0					
ANR	3968136	ExpressionStatement	can -> sy += ( 5 * movspeed ) * ( invscroll ? - 1 : 1 )	4583:4:118134:118178	3965363	0	True				
ANR	3968137	AssignmentExpression	can -> sy += ( 5 * movspeed ) * ( invscroll ? - 1 : 1 )		3965363	0		+=			
ANR	3968138	PtrMemberAccess	can -> sy		3965363	0					
ANR	3968139	Identifier	can		3965363	0					
ANR	3968140	Identifier	sy		3965363	1					
ANR	3968141	MultiplicativeExpression	( 5 * movspeed ) * ( invscroll ? - 1 : 1 )		3965363	1		*			
ANR	3968142	MultiplicativeExpression	5 * movspeed		3965363	0		*			
ANR	3968143	PrimaryExpression	5		3965363	0					
ANR	3968144	Identifier	movspeed		3965363	1					
ANR	3968145	ConditionalExpression	invscroll ? - 1 : 1		3965363	1					
ANR	3968146	Condition	invscroll		3965363	0					
ANR	3968147	Identifier	invscroll		3965363	0					
ANR	3968148	UnaryOperationExpression	- 1		3965363	1					
ANR	3968149	UnaryOperator	-		3965363	0					
ANR	3968150	PrimaryExpression	1		3965363	1					
ANR	3968151	PrimaryExpression	1		3965363	2					
ANR	3968152	BreakStatement	break ;	4585:3:118188:118193	3965363	237	True				
ANR	3968153	Label	case 'H' :	4586:2:118197:118205	3965363	238	True				
ANR	3968154	IfStatement	if ( graphCursor )		3965363	239					
ANR	3968155	Condition	graphCursor	4587:7:118214:118224	3965363	0	True				
ANR	3968156	Identifier	graphCursor		3965363	0					
ANR	3968157	CompoundStatement		541:20:14922:14922	3965363	1					
ANR	3968158	ExpressionStatement	"graphNodeMove ( g , 'h' , movspeed * 2 )"	4589:4:118264:118300	3965363	0	True				
ANR	3968159	CallExpression	"graphNodeMove ( g , 'h' , movspeed * 2 )"		3965363	0					
ANR	3968160	Callee	graphNodeMove		3965363	0					
ANR	3968161	Identifier	graphNodeMove		3965363	0					
ANR	3968162	ArgumentList	g		3965363	1					
ANR	3968163	Argument	g		3965363	0					
ANR	3968164	Identifier	g		3965363	0					
ANR	3968165	Argument	'h'		3965363	1					
ANR	3968166	PrimaryExpression	'h'		3965363	0					
ANR	3968167	Argument	movspeed * 2		3965363	2					
ANR	3968168	MultiplicativeExpression	movspeed * 2		3965363	0		*			
ANR	3968169	Identifier	movspeed		3965363	0					
ANR	3968170	PrimaryExpression	2		3965363	1					
ANR	3968171	ElseStatement	else		3965363	0					
ANR	3968172	CompoundStatement		544:10:15007:15007	3965363	0					
ANR	3968173	IfStatement	if ( okey == 27 )		3965363	0					
ANR	3968174	Condition	okey == 27	4592:8:118350:118359	3965363	0	True				
ANR	3968175	EqualityExpression	okey == 27		3965363	0		==			
ANR	3968176	Identifier	okey		3965363	0					
ANR	3968177	PrimaryExpression	27		3965363	1					
ANR	3968178	CompoundStatement		548:5:15088:15139	3965363	1					
ANR	3968179	IdentifierDeclStatement	"const RGraphNode * gn = find_near_of ( g , NULL , true ) ;"	4594:5:118393:118444	3965363	0	True				
ANR	3968180	IdentifierDecl	"* gn = find_near_of ( g , NULL , true )"		3965363	0					
ANR	3968181	IdentifierDeclType	const RGraphNode *		3965363	0					
ANR	3968182	Identifier	gn		3965363	1					
ANR	3968183	AssignmentExpression	"* gn = find_near_of ( g , NULL , true )"		3965363	2		=			
ANR	3968184	Identifier	gn		3965363	0					
ANR	3968185	CallExpression	"find_near_of ( g , NULL , true )"		3965363	1					
ANR	3968186	Callee	find_near_of		3965363	0					
ANR	3968187	Identifier	find_near_of		3965363	0					
ANR	3968188	ArgumentList	g		3965363	1					
ANR	3968189	Argument	g		3965363	0					
ANR	3968190	Identifier	g		3965363	0					
ANR	3968191	Argument	NULL		3965363	1					
ANR	3968192	Identifier	NULL		3965363	0					
ANR	3968193	Argument	true		3965363	2					
ANR	3968194	Identifier	true		3965363	0					
ANR	3968195	ExpressionStatement	g -> update_seek_on = get_anode ( gn )	4595:5:118451:118485	3965363	1	True				
ANR	3968196	AssignmentExpression	g -> update_seek_on = get_anode ( gn )		3965363	0		=			
ANR	3968197	PtrMemberAccess	g -> update_seek_on		3965363	0					
ANR	3968198	Identifier	g		3965363	0					
ANR	3968199	Identifier	update_seek_on		3965363	1					
ANR	3968200	CallExpression	get_anode ( gn )		3965363	1					
ANR	3968201	Callee	get_anode		3965363	0					
ANR	3968202	Identifier	get_anode		3965363	0					
ANR	3968203	ArgumentList	gn		3965363	1					
ANR	3968204	Argument	gn		3965363	0					
ANR	3968205	Identifier	gn		3965363	0					
ANR	3968206	ElseStatement	else		3965363	0					
ANR	3968207	CompoundStatement		550:11:15193:15193	3965363	0					
ANR	3968208	ExpressionStatement	can -> sx += ( 5 * movspeed ) * ( invscroll ? - 1 : 1 )	4597:5:118505:118551	3965363	0	True				
ANR	3968209	AssignmentExpression	can -> sx += ( 5 * movspeed ) * ( invscroll ? - 1 : 1 )		3965363	0		+=			
ANR	3968210	PtrMemberAccess	can -> sx		3965363	0					
ANR	3968211	Identifier	can		3965363	0					
ANR	3968212	Identifier	sx		3965363	1					
ANR	3968213	MultiplicativeExpression	( 5 * movspeed ) * ( invscroll ? - 1 : 1 )		3965363	1		*			
ANR	3968214	MultiplicativeExpression	5 * movspeed		3965363	0		*			
ANR	3968215	PrimaryExpression	5		3965363	0					
ANR	3968216	Identifier	movspeed		3965363	1					
ANR	3968217	ConditionalExpression	invscroll ? - 1 : 1		3965363	1					
ANR	3968218	Condition	invscroll		3965363	0					
ANR	3968219	Identifier	invscroll		3965363	0					
ANR	3968220	UnaryOperationExpression	- 1		3965363	1					
ANR	3968221	UnaryOperator	-		3965363	0					
ANR	3968222	PrimaryExpression	1		3965363	1					
ANR	3968223	PrimaryExpression	1		3965363	2					
ANR	3968224	BreakStatement	break ;	4600:3:118567:118572	3965363	240	True				
ANR	3968225	Label	case 'L' :	4601:2:118576:118584	3965363	241	True				
ANR	3968226	IfStatement	if ( graphCursor )		3965363	242					
ANR	3968227	Condition	graphCursor	4602:7:118593:118603	3965363	0	True				
ANR	3968228	Identifier	graphCursor		3965363	0					
ANR	3968229	CompoundStatement		556:20:15301:15301	3965363	1					
ANR	3968230	ExpressionStatement	"graphNodeMove ( g , 'l' , movspeed * 2 )"	4603:4:118612:118648	3965363	0	True				
ANR	3968231	CallExpression	"graphNodeMove ( g , 'l' , movspeed * 2 )"		3965363	0					
ANR	3968232	Callee	graphNodeMove		3965363	0					
ANR	3968233	Identifier	graphNodeMove		3965363	0					
ANR	3968234	ArgumentList	g		3965363	1					
ANR	3968235	Argument	g		3965363	0					
ANR	3968236	Identifier	g		3965363	0					
ANR	3968237	Argument	'l'		3965363	1					
ANR	3968238	PrimaryExpression	'l'		3965363	0					
ANR	3968239	Argument	movspeed * 2		3965363	2					
ANR	3968240	MultiplicativeExpression	movspeed * 2		3965363	0		*			
ANR	3968241	Identifier	movspeed		3965363	0					
ANR	3968242	PrimaryExpression	2		3965363	1					
ANR	3968243	ElseStatement	else		3965363	0					
ANR	3968244	CompoundStatement		558:10:15355:15355	3965363	0					
ANR	3968245	IfStatement	if ( is_mini ( g ) )		3965363	0					
ANR	3968246	Condition	is_mini ( g )	4605:8:118670:118680	3965363	0	True				
ANR	3968247	CallExpression	is_mini ( g )		3965363	0					
ANR	3968248	Callee	is_mini		3965363	0					
ANR	3968249	Identifier	is_mini		3965363	0					
ANR	3968250	ArgumentList	g		3965363	1					
ANR	3968251	Argument	g		3965363	0					
ANR	3968252	Identifier	g		3965363	0					
ANR	3968253	CompoundStatement		559:21:15378:15378	3965363	1					
ANR	3968254	ExpressionStatement	discroll = 0	4606:5:118690:118702	3965363	0	True				
ANR	3968255	AssignmentExpression	discroll = 0		3965363	0		=			
ANR	3968256	Identifier	discroll		3965363	0					
ANR	3968257	PrimaryExpression	0		3965363	1					
ANR	3968258	ElseStatement	else		3965363	0					
ANR	3968259	CompoundStatement		561:11:15410:15410	3965363	0					
ANR	3968260	ExpressionStatement	can -> sx -= ( 5 * movspeed ) * ( invscroll ? - 1 : 1 )	4608:5:118722:118768	3965363	0	True				
ANR	3968261	AssignmentExpression	can -> sx -= ( 5 * movspeed ) * ( invscroll ? - 1 : 1 )		3965363	0		-=			
ANR	3968262	PtrMemberAccess	can -> sx		3965363	0					
ANR	3968263	Identifier	can		3965363	0					
ANR	3968264	Identifier	sx		3965363	1					
ANR	3968265	MultiplicativeExpression	( 5 * movspeed ) * ( invscroll ? - 1 : 1 )		3965363	1		*			
ANR	3968266	MultiplicativeExpression	5 * movspeed		3965363	0		*			
ANR	3968267	PrimaryExpression	5		3965363	0					
ANR	3968268	Identifier	movspeed		3965363	1					
ANR	3968269	ConditionalExpression	invscroll ? - 1 : 1		3965363	1					
ANR	3968270	Condition	invscroll		3965363	0					
ANR	3968271	Identifier	invscroll		3965363	0					
ANR	3968272	UnaryOperationExpression	- 1		3965363	1					
ANR	3968273	UnaryOperator	-		3965363	0					
ANR	3968274	PrimaryExpression	1		3965363	1					
ANR	3968275	PrimaryExpression	1		3965363	2					
ANR	3968276	BreakStatement	break ;	4611:3:118784:118789	3965363	243	True				
ANR	3968277	Label	case 'c' :	4612:2:118793:118801	3965363	244	True				
ANR	3968278	ExpressionStatement	graphCursor = ! graphCursor	4613:3:118806:118832	3965363	245	True				
ANR	3968279	AssignmentExpression	graphCursor = ! graphCursor		3965363	0		=			
ANR	3968280	Identifier	graphCursor		3965363	0					
ANR	3968281	UnaryOperationExpression	! graphCursor		3965363	1					
ANR	3968282	UnaryOperator	!		3965363	0					
ANR	3968283	Identifier	graphCursor		3965363	1					
ANR	3968284	BreakStatement	break ;	4614:3:118837:118842	3965363	246	True				
ANR	3968285	Label	case 'j' :	4615:2:118846:118854	3965363	247	True				
ANR	3968286	IfStatement	if ( g -> is_dis )		3965363	248					
ANR	3968287	Condition	g -> is_dis	4616:7:118863:118871	3965363	0	True				
ANR	3968288	PtrMemberAccess	g -> is_dis		3965363	0					
ANR	3968289	Identifier	g		3965363	0					
ANR	3968290	Identifier	is_dis		3965363	1					
ANR	3968291	CompoundStatement		570:18:15569:15569	3965363	1					
ANR	3968292	ExpressionStatement	"r_core_cmd0 ( core , ""so 1"" )"	4617:4:118880:118906	3965363	0	True				
ANR	3968293	CallExpression	"r_core_cmd0 ( core , ""so 1"" )"		3965363	0					
ANR	3968294	Callee	r_core_cmd0		3965363	0					
ANR	3968295	Identifier	r_core_cmd0		3965363	0					
ANR	3968296	ArgumentList	core		3965363	1					
ANR	3968297	Argument	core		3965363	0					
ANR	3968298	Identifier	core		3965363	0					
ANR	3968299	Argument	"""so 1"""		3965363	1					
ANR	3968300	PrimaryExpression	"""so 1"""		3965363	0					
ANR	3968301	ElseStatement	else		3965363	0					
ANR	3968302	CompoundStatement		572:10:15613:15613	3965363	0					
ANR	3968303	IfStatement	if ( graphCursor )		3965363	0					
ANR	3968304	Condition	graphCursor	4619:8:118928:118938	3965363	0	True				
ANR	3968305	Identifier	graphCursor		3965363	0					
ANR	3968306	CompoundStatement		574:5:15643:15692	3965363	1					
ANR	3968307	IdentifierDeclStatement	int speed = ( okey == 27 ) ? PAGEKEY_SPEED : movspeed ;	4620:5:118948:118997	3965363	0	True				
ANR	3968308	IdentifierDecl	speed = ( okey == 27 ) ? PAGEKEY_SPEED : movspeed		3965363	0					
ANR	3968309	IdentifierDeclType	int		3965363	0					
ANR	3968310	Identifier	speed		3965363	1					
ANR	3968311	AssignmentExpression	speed = ( okey == 27 ) ? PAGEKEY_SPEED : movspeed		3965363	2		=			
ANR	3968312	Identifier	speed		3965363	0					
ANR	3968313	ConditionalExpression	( okey == 27 ) ? PAGEKEY_SPEED : movspeed		3965363	1					
ANR	3968314	Condition	okey == 27		3965363	0					
ANR	3968315	EqualityExpression	okey == 27		3965363	0		==			
ANR	3968316	Identifier	okey		3965363	0					
ANR	3968317	PrimaryExpression	27		3965363	1					
ANR	3968318	Identifier	PAGEKEY_SPEED		3965363	1					
ANR	3968319	Identifier	movspeed		3965363	2					
ANR	3968320	ExpressionStatement	"graphNodeMove ( g , 'j' , speed )"	4621:5:119004:119033	3965363	1	True				
ANR	3968321	CallExpression	"graphNodeMove ( g , 'j' , speed )"		3965363	0					
ANR	3968322	Callee	graphNodeMove		3965363	0					
ANR	3968323	Identifier	graphNodeMove		3965363	0					
ANR	3968324	ArgumentList	g		3965363	1					
ANR	3968325	Argument	g		3965363	0					
ANR	3968326	Identifier	g		3965363	0					
ANR	3968327	Argument	'j'		3965363	1					
ANR	3968328	PrimaryExpression	'j'		3965363	0					
ANR	3968329	Argument	speed		3965363	2					
ANR	3968330	Identifier	speed		3965363	0					
ANR	3968331	ElseStatement	else		3965363	0					
ANR	3968332	CompoundStatement		576:11:15741:15741	3965363	0					
ANR	3968333	ExpressionStatement	can -> sy -= movspeed * ( invscroll ? - 1 : 1 )	4624:5:119075:119115	3965363	0	True				
ANR	3968334	AssignmentExpression	can -> sy -= movspeed * ( invscroll ? - 1 : 1 )		3965363	0		-=			
ANR	3968335	PtrMemberAccess	can -> sy		3965363	0					
ANR	3968336	Identifier	can		3965363	0					
ANR	3968337	Identifier	sy		3965363	1					
ANR	3968338	MultiplicativeExpression	movspeed * ( invscroll ? - 1 : 1 )		3965363	1		*			
ANR	3968339	Identifier	movspeed		3965363	0					
ANR	3968340	ConditionalExpression	invscroll ? - 1 : 1		3965363	1					
ANR	3968341	Condition	invscroll		3965363	0					
ANR	3968342	Identifier	invscroll		3965363	0					
ANR	3968343	UnaryOperationExpression	- 1		3965363	1					
ANR	3968344	UnaryOperator	-		3965363	0					
ANR	3968345	PrimaryExpression	1		3965363	1					
ANR	3968346	PrimaryExpression	1		3965363	2					
ANR	3968347	BreakStatement	break ;	4627:3:119131:119136	3965363	249	True				
ANR	3968348	Label	case 'k' :	4628:2:119140:119148	3965363	250	True				
ANR	3968349	IfStatement	if ( g -> is_dis )		3965363	251					
ANR	3968350	Condition	g -> is_dis	4629:7:119157:119165	3965363	0	True				
ANR	3968351	PtrMemberAccess	g -> is_dis		3965363	0					
ANR	3968352	Identifier	g		3965363	0					
ANR	3968353	Identifier	is_dis		3965363	1					
ANR	3968354	CompoundStatement		583:18:15863:15863	3965363	1					
ANR	3968355	ExpressionStatement	"r_core_cmd0 ( core , ""so -1"" )"	4630:4:119174:119201	3965363	0	True				
ANR	3968356	CallExpression	"r_core_cmd0 ( core , ""so -1"" )"		3965363	0					
ANR	3968357	Callee	r_core_cmd0		3965363	0					
ANR	3968358	Identifier	r_core_cmd0		3965363	0					
ANR	3968359	ArgumentList	core		3965363	1					
ANR	3968360	Argument	core		3965363	0					
ANR	3968361	Identifier	core		3965363	0					
ANR	3968362	Argument	"""so -1"""		3965363	1					
ANR	3968363	PrimaryExpression	"""so -1"""		3965363	0					
ANR	3968364	ElseStatement	else		3965363	0					
ANR	3968365	CompoundStatement		585:10:15908:15908	3965363	0					
ANR	3968366	IfStatement	if ( graphCursor )		3965363	0					
ANR	3968367	Condition	graphCursor	4632:8:119223:119233	3965363	0	True				
ANR	3968368	Identifier	graphCursor		3965363	0					
ANR	3968369	CompoundStatement		587:5:15938:15987	3965363	1					
ANR	3968370	IdentifierDeclStatement	int speed = ( okey == 27 ) ? PAGEKEY_SPEED : movspeed ;	4633:5:119243:119292	3965363	0	True				
ANR	3968371	IdentifierDecl	speed = ( okey == 27 ) ? PAGEKEY_SPEED : movspeed		3965363	0					
ANR	3968372	IdentifierDeclType	int		3965363	0					
ANR	3968373	Identifier	speed		3965363	1					
ANR	3968374	AssignmentExpression	speed = ( okey == 27 ) ? PAGEKEY_SPEED : movspeed		3965363	2		=			
ANR	3968375	Identifier	speed		3965363	0					
ANR	3968376	ConditionalExpression	( okey == 27 ) ? PAGEKEY_SPEED : movspeed		3965363	1					
ANR	3968377	Condition	okey == 27		3965363	0					
ANR	3968378	EqualityExpression	okey == 27		3965363	0		==			
ANR	3968379	Identifier	okey		3965363	0					
ANR	3968380	PrimaryExpression	27		3965363	1					
ANR	3968381	Identifier	PAGEKEY_SPEED		3965363	1					
ANR	3968382	Identifier	movspeed		3965363	2					
ANR	3968383	ExpressionStatement	"graphNodeMove ( g , 'k' , speed )"	4634:5:119299:119328	3965363	1	True				
ANR	3968384	CallExpression	"graphNodeMove ( g , 'k' , speed )"		3965363	0					
ANR	3968385	Callee	graphNodeMove		3965363	0					
ANR	3968386	Identifier	graphNodeMove		3965363	0					
ANR	3968387	ArgumentList	g		3965363	1					
ANR	3968388	Argument	g		3965363	0					
ANR	3968389	Identifier	g		3965363	0					
ANR	3968390	Argument	'k'		3965363	1					
ANR	3968391	PrimaryExpression	'k'		3965363	0					
ANR	3968392	Argument	speed		3965363	2					
ANR	3968393	Identifier	speed		3965363	0					
ANR	3968394	ElseStatement	else		3965363	0					
ANR	3968395	CompoundStatement		589:11:16036:16036	3965363	0					
ANR	3968396	ExpressionStatement	can -> sy += movspeed * ( invscroll ? - 1 : 1 )	4637:5:119370:119410	3965363	0	True				
ANR	3968397	AssignmentExpression	can -> sy += movspeed * ( invscroll ? - 1 : 1 )		3965363	0		+=			
ANR	3968398	PtrMemberAccess	can -> sy		3965363	0					
ANR	3968399	Identifier	can		3965363	0					
ANR	3968400	Identifier	sy		3965363	1					
ANR	3968401	MultiplicativeExpression	movspeed * ( invscroll ? - 1 : 1 )		3965363	1		*			
ANR	3968402	Identifier	movspeed		3965363	0					
ANR	3968403	ConditionalExpression	invscroll ? - 1 : 1		3965363	1					
ANR	3968404	Condition	invscroll		3965363	0					
ANR	3968405	Identifier	invscroll		3965363	0					
ANR	3968406	UnaryOperationExpression	- 1		3965363	1					
ANR	3968407	UnaryOperator	-		3965363	0					
ANR	3968408	PrimaryExpression	1		3965363	1					
ANR	3968409	PrimaryExpression	1		3965363	2					
ANR	3968410	BreakStatement	break ;	4640:3:119426:119431	3965363	252	True				
ANR	3968411	Label	case 'l' :	4641:2:119435:119443	3965363	253	True				
ANR	3968412	IfStatement	if ( graphCursor )		3965363	254					
ANR	3968413	Condition	graphCursor	4642:7:119452:119462	3965363	0	True				
ANR	3968414	Identifier	graphCursor		3965363	0					
ANR	3968415	CompoundStatement		597:4:16166:16215	3965363	1					
ANR	3968416	IdentifierDeclStatement	int speed = ( okey == 27 ) ? PAGEKEY_SPEED : movspeed ;	4643:4:119471:119520	3965363	0	True				
ANR	3968417	IdentifierDecl	speed = ( okey == 27 ) ? PAGEKEY_SPEED : movspeed		3965363	0					
ANR	3968418	IdentifierDeclType	int		3965363	0					
ANR	3968419	Identifier	speed		3965363	1					
ANR	3968420	AssignmentExpression	speed = ( okey == 27 ) ? PAGEKEY_SPEED : movspeed		3965363	2		=			
ANR	3968421	Identifier	speed		3965363	0					
ANR	3968422	ConditionalExpression	( okey == 27 ) ? PAGEKEY_SPEED : movspeed		3965363	1					
ANR	3968423	Condition	okey == 27		3965363	0					
ANR	3968424	EqualityExpression	okey == 27		3965363	0		==			
ANR	3968425	Identifier	okey		3965363	0					
ANR	3968426	PrimaryExpression	27		3965363	1					
ANR	3968427	Identifier	PAGEKEY_SPEED		3965363	1					
ANR	3968428	Identifier	movspeed		3965363	2					
ANR	3968429	ExpressionStatement	"graphNodeMove ( g , 'l' , speed )"	4644:4:119526:119555	3965363	1	True				
ANR	3968430	CallExpression	"graphNodeMove ( g , 'l' , speed )"		3965363	0					
ANR	3968431	Callee	graphNodeMove		3965363	0					
ANR	3968432	Identifier	graphNodeMove		3965363	0					
ANR	3968433	ArgumentList	g		3965363	1					
ANR	3968434	Argument	g		3965363	0					
ANR	3968435	Identifier	g		3965363	0					
ANR	3968436	Argument	'l'		3965363	1					
ANR	3968437	PrimaryExpression	'l'		3965363	0					
ANR	3968438	Argument	speed		3965363	2					
ANR	3968439	Identifier	speed		3965363	0					
ANR	3968440	ElseStatement	else		3965363	0					
ANR	3968441	CompoundStatement		599:10:16262:16262	3965363	0					
ANR	3968442	ExpressionStatement	can -> sx -= movspeed * ( invscroll ? - 1 : 1 )	4646:4:119573:119613	3965363	0	True				
ANR	3968443	AssignmentExpression	can -> sx -= movspeed * ( invscroll ? - 1 : 1 )		3965363	0		-=			
ANR	3968444	PtrMemberAccess	can -> sx		3965363	0					
ANR	3968445	Identifier	can		3965363	0					
ANR	3968446	Identifier	sx		3965363	1					
ANR	3968447	MultiplicativeExpression	movspeed * ( invscroll ? - 1 : 1 )		3965363	1		*			
ANR	3968448	Identifier	movspeed		3965363	0					
ANR	3968449	ConditionalExpression	invscroll ? - 1 : 1		3965363	1					
ANR	3968450	Condition	invscroll		3965363	0					
ANR	3968451	Identifier	invscroll		3965363	0					
ANR	3968452	UnaryOperationExpression	- 1		3965363	1					
ANR	3968453	UnaryOperator	-		3965363	0					
ANR	3968454	PrimaryExpression	1		3965363	1					
ANR	3968455	PrimaryExpression	1		3965363	2					
ANR	3968456	BreakStatement	break ;	4648:3:119623:119628	3965363	255	True				
ANR	3968457	Label	case 'h' :	4649:2:119632:119640	3965363	256	True				
ANR	3968458	IfStatement	if ( graphCursor )		3965363	257					
ANR	3968459	Condition	graphCursor	4650:7:119649:119659	3965363	0	True				
ANR	3968460	Identifier	graphCursor		3965363	0					
ANR	3968461	CompoundStatement		605:4:16363:16412	3965363	1					
ANR	3968462	IdentifierDeclStatement	int speed = ( okey == 27 ) ? PAGEKEY_SPEED : movspeed ;	4651:4:119668:119717	3965363	0	True				
ANR	3968463	IdentifierDecl	speed = ( okey == 27 ) ? PAGEKEY_SPEED : movspeed		3965363	0					
ANR	3968464	IdentifierDeclType	int		3965363	0					
ANR	3968465	Identifier	speed		3965363	1					
ANR	3968466	AssignmentExpression	speed = ( okey == 27 ) ? PAGEKEY_SPEED : movspeed		3965363	2		=			
ANR	3968467	Identifier	speed		3965363	0					
ANR	3968468	ConditionalExpression	( okey == 27 ) ? PAGEKEY_SPEED : movspeed		3965363	1					
ANR	3968469	Condition	okey == 27		3965363	0					
ANR	3968470	EqualityExpression	okey == 27		3965363	0		==			
ANR	3968471	Identifier	okey		3965363	0					
ANR	3968472	PrimaryExpression	27		3965363	1					
ANR	3968473	Identifier	PAGEKEY_SPEED		3965363	1					
ANR	3968474	Identifier	movspeed		3965363	2					
ANR	3968475	ExpressionStatement	"graphNodeMove ( g , 'h' , speed )"	4652:4:119723:119752	3965363	1	True				
ANR	3968476	CallExpression	"graphNodeMove ( g , 'h' , speed )"		3965363	0					
ANR	3968477	Callee	graphNodeMove		3965363	0					
ANR	3968478	Identifier	graphNodeMove		3965363	0					
ANR	3968479	ArgumentList	g		3965363	1					
ANR	3968480	Argument	g		3965363	0					
ANR	3968481	Identifier	g		3965363	0					
ANR	3968482	Argument	'h'		3965363	1					
ANR	3968483	PrimaryExpression	'h'		3965363	0					
ANR	3968484	Argument	speed		3965363	2					
ANR	3968485	Identifier	speed		3965363	0					
ANR	3968486	ElseStatement	else		3965363	0					
ANR	3968487	CompoundStatement		607:10:16459:16459	3965363	0					
ANR	3968488	ExpressionStatement	can -> sx += movspeed * ( invscroll ? - 1 : 1 )	4654:4:119770:119810	3965363	0	True				
ANR	3968489	AssignmentExpression	can -> sx += movspeed * ( invscroll ? - 1 : 1 )		3965363	0		+=			
ANR	3968490	PtrMemberAccess	can -> sx		3965363	0					
ANR	3968491	Identifier	can		3965363	0					
ANR	3968492	Identifier	sx		3965363	1					
ANR	3968493	MultiplicativeExpression	movspeed * ( invscroll ? - 1 : 1 )		3965363	1		*			
ANR	3968494	Identifier	movspeed		3965363	0					
ANR	3968495	ConditionalExpression	invscroll ? - 1 : 1		3965363	1					
ANR	3968496	Condition	invscroll		3965363	0					
ANR	3968497	Identifier	invscroll		3965363	0					
ANR	3968498	UnaryOperationExpression	- 1		3965363	1					
ANR	3968499	UnaryOperator	-		3965363	0					
ANR	3968500	PrimaryExpression	1		3965363	1					
ANR	3968501	PrimaryExpression	1		3965363	2					
ANR	3968502	BreakStatement	break ;	4656:3:119820:119825	3965363	258	True				
ANR	3968503	Label	case '^' :	4657:2:119829:119837	3965363	259	True				
ANR	3968504	CompoundStatement		613:6:16547:16615	3965363	260					
ANR	3968505	IdentifierDeclStatement	"RAnalFunction * fcn = r_anal_get_fcn_in ( core -> anal , core -> offset , 0 ) ;"	4659:6:119852:119920	3965363	0	True				
ANR	3968506	IdentifierDecl	"* fcn = r_anal_get_fcn_in ( core -> anal , core -> offset , 0 )"		3965363	0					
ANR	3968507	IdentifierDeclType	RAnalFunction *		3965363	0					
ANR	3968508	Identifier	fcn		3965363	1					
ANR	3968509	AssignmentExpression	"* fcn = r_anal_get_fcn_in ( core -> anal , core -> offset , 0 )"		3965363	2		=			
ANR	3968510	Identifier	fcn		3965363	0					
ANR	3968511	CallExpression	"r_anal_get_fcn_in ( core -> anal , core -> offset , 0 )"		3965363	1					
ANR	3968512	Callee	r_anal_get_fcn_in		3965363	0					
ANR	3968513	Identifier	r_anal_get_fcn_in		3965363	0					
ANR	3968514	ArgumentList	core -> anal		3965363	1					
ANR	3968515	Argument	core -> anal		3965363	0					
ANR	3968516	PtrMemberAccess	core -> anal		3965363	0					
ANR	3968517	Identifier	core		3965363	0					
ANR	3968518	Identifier	anal		3965363	1					
ANR	3968519	Argument	core -> offset		3965363	1					
ANR	3968520	PtrMemberAccess	core -> offset		3965363	0					
ANR	3968521	Identifier	core		3965363	0					
ANR	3968522	Identifier	offset		3965363	1					
ANR	3968523	Argument	0		3965363	2					
ANR	3968524	PrimaryExpression	0		3965363	0					
ANR	3968525	IfStatement	if ( fcn )		3965363	1					
ANR	3968526	Condition	fcn	4660:10:119932:119934	3965363	0	True				
ANR	3968527	Identifier	fcn		3965363	0					
ANR	3968528	CompoundStatement		614:15:16632:16632	3965363	1					
ANR	3968529	ExpressionStatement	"r_core_seek ( core , fcn -> addr , 0 )"	4661:7:119946:119978	3965363	0	True				
ANR	3968530	CallExpression	"r_core_seek ( core , fcn -> addr , 0 )"		3965363	0					
ANR	3968531	Callee	r_core_seek		3965363	0					
ANR	3968532	Identifier	r_core_seek		3965363	0					
ANR	3968533	ArgumentList	core		3965363	1					
ANR	3968534	Argument	core		3965363	0					
ANR	3968535	Identifier	core		3965363	0					
ANR	3968536	Argument	fcn -> addr		3965363	1					
ANR	3968537	PtrMemberAccess	fcn -> addr		3965363	0					
ANR	3968538	Identifier	fcn		3965363	0					
ANR	3968539	Identifier	addr		3965363	1					
ANR	3968540	Argument	0		3965363	2					
ANR	3968541	PrimaryExpression	0		3965363	0					
ANR	3968542	ExpressionStatement	"agraph_update_seek ( g , get_anode ( g -> curnode ) , true )"	4664:5:120000:120052	3965363	261	True				
ANR	3968543	CallExpression	"agraph_update_seek ( g , get_anode ( g -> curnode ) , true )"		3965363	0					
ANR	3968544	Callee	agraph_update_seek		3965363	0					
ANR	3968545	Identifier	agraph_update_seek		3965363	0					
ANR	3968546	ArgumentList	g		3965363	1					
ANR	3968547	Argument	g		3965363	0					
ANR	3968548	Identifier	g		3965363	0					
ANR	3968549	Argument	get_anode ( g -> curnode )		3965363	1					
ANR	3968550	CallExpression	get_anode ( g -> curnode )		3965363	0					
ANR	3968551	Callee	get_anode		3965363	0					
ANR	3968552	Identifier	get_anode		3965363	0					
ANR	3968553	ArgumentList	g -> curnode		3965363	1					
ANR	3968554	Argument	g -> curnode		3965363	0					
ANR	3968555	PtrMemberAccess	g -> curnode		3965363	0					
ANR	3968556	Identifier	g		3965363	0					
ANR	3968557	Identifier	curnode		3965363	1					
ANR	3968558	Argument	true		3965363	2					
ANR	3968559	Identifier	true		3965363	0					
ANR	3968560	BreakStatement	break ;	4665:5:120059:120064	3965363	262	True				
ANR	3968561	Label	"case ',' :"	4666:2:120068:120076	3965363	263	True				
ANR	3968562	ExpressionStatement	"r_config_toggle ( core -> config , ""graph.few"" )"	4667:3:120081:120124	3965363	264	True				
ANR	3968563	CallExpression	"r_config_toggle ( core -> config , ""graph.few"" )"		3965363	0					
ANR	3968564	Callee	r_config_toggle		3965363	0					
ANR	3968565	Identifier	r_config_toggle		3965363	0					
ANR	3968566	ArgumentList	core -> config		3965363	1					
ANR	3968567	Argument	core -> config		3965363	0					
ANR	3968568	PtrMemberAccess	core -> config		3965363	0					
ANR	3968569	Identifier	core		3965363	0					
ANR	3968570	Identifier	config		3965363	1					
ANR	3968571	Argument	"""graph.few"""		3965363	1					
ANR	3968572	PrimaryExpression	"""graph.few"""		3965363	0					
ANR	3968573	ExpressionStatement	g -> need_reload_nodes = true	4668:3:120129:120156	3965363	265	True				
ANR	3968574	AssignmentExpression	g -> need_reload_nodes = true		3965363	0		=			
ANR	3968575	PtrMemberAccess	g -> need_reload_nodes		3965363	0					
ANR	3968576	Identifier	g		3965363	0					
ANR	3968577	Identifier	need_reload_nodes		3965363	1					
ANR	3968578	Identifier	true		3965363	1					
ANR	3968579	ExpressionStatement	"agraph_update_seek ( g , get_anode ( g -> curnode ) , true )"	4669:3:120161:120213	3965363	266	True				
ANR	3968580	CallExpression	"agraph_update_seek ( g , get_anode ( g -> curnode ) , true )"		3965363	0					
ANR	3968581	Callee	agraph_update_seek		3965363	0					
ANR	3968582	Identifier	agraph_update_seek		3965363	0					
ANR	3968583	ArgumentList	g		3965363	1					
ANR	3968584	Argument	g		3965363	0					
ANR	3968585	Identifier	g		3965363	0					
ANR	3968586	Argument	get_anode ( g -> curnode )		3965363	1					
ANR	3968587	CallExpression	get_anode ( g -> curnode )		3965363	0					
ANR	3968588	Callee	get_anode		3965363	0					
ANR	3968589	Identifier	get_anode		3965363	0					
ANR	3968590	ArgumentList	g -> curnode		3965363	1					
ANR	3968591	Argument	g -> curnode		3965363	0					
ANR	3968592	PtrMemberAccess	g -> curnode		3965363	0					
ANR	3968593	Identifier	g		3965363	0					
ANR	3968594	Identifier	curnode		3965363	1					
ANR	3968595	Argument	true		3965363	2					
ANR	3968596	Identifier	true		3965363	0					
ANR	3968597	BreakStatement	break ;	4670:3:120218:120223	3965363	267	True				
ANR	3968598	Label	case '.' :	4671:2:120227:120235	3965363	268	True				
ANR	3968599	ExpressionStatement	discroll = 0	4672:3:120240:120252	3965363	269	True				
ANR	3968600	AssignmentExpression	discroll = 0		3965363	0		=			
ANR	3968601	Identifier	discroll		3965363	0					
ANR	3968602	PrimaryExpression	0		3965363	1					
ANR	3968603	ExpressionStatement	"agraph_update_seek ( g , get_anode ( g -> curnode ) , true )"	4673:3:120257:120309	3965363	270	True				
ANR	3968604	CallExpression	"agraph_update_seek ( g , get_anode ( g -> curnode ) , true )"		3965363	0					
ANR	3968605	Callee	agraph_update_seek		3965363	0					
ANR	3968606	Identifier	agraph_update_seek		3965363	0					
ANR	3968607	ArgumentList	g		3965363	1					
ANR	3968608	Argument	g		3965363	0					
ANR	3968609	Identifier	g		3965363	0					
ANR	3968610	Argument	get_anode ( g -> curnode )		3965363	1					
ANR	3968611	CallExpression	get_anode ( g -> curnode )		3965363	0					
ANR	3968612	Callee	get_anode		3965363	0					
ANR	3968613	Identifier	get_anode		3965363	0					
ANR	3968614	ArgumentList	g -> curnode		3965363	1					
ANR	3968615	Argument	g -> curnode		3965363	0					
ANR	3968616	PtrMemberAccess	g -> curnode		3965363	0					
ANR	3968617	Identifier	g		3965363	0					
ANR	3968618	Identifier	curnode		3965363	1					
ANR	3968619	Argument	true		3965363	2					
ANR	3968620	Identifier	true		3965363	0					
ANR	3968621	BreakStatement	break ;	4674:3:120314:120319	3965363	271	True				
ANR	3968622	Label	case 'i' :	4675:2:120323:120331	3965363	272	True				
ANR	3968623	ExpressionStatement	"agraph_follow_innodes ( g , true )"	4676:3:120336:120367	3965363	273	True				
ANR	3968624	CallExpression	"agraph_follow_innodes ( g , true )"		3965363	0					
ANR	3968625	Callee	agraph_follow_innodes		3965363	0					
ANR	3968626	Identifier	agraph_follow_innodes		3965363	0					
ANR	3968627	ArgumentList	g		3965363	1					
ANR	3968628	Argument	g		3965363	0					
ANR	3968629	Identifier	g		3965363	0					
ANR	3968630	Argument	true		3965363	1					
ANR	3968631	Identifier	true		3965363	0					
ANR	3968632	IfStatement	"if ( r_config_get_i ( core -> config , ""graph.few"" ) )"		3965363	274					
ANR	3968633	Condition	"r_config_get_i ( core -> config , ""graph.few"" )"	4677:7:120376:120417	3965363	0	True				
ANR	3968634	CallExpression	"r_config_get_i ( core -> config , ""graph.few"" )"		3965363	0					
ANR	3968635	Callee	r_config_get_i		3965363	0					
ANR	3968636	Identifier	r_config_get_i		3965363	0					
ANR	3968637	ArgumentList	core -> config		3965363	1					
ANR	3968638	Argument	core -> config		3965363	0					
ANR	3968639	PtrMemberAccess	core -> config		3965363	0					
ANR	3968640	Identifier	core		3965363	0					
ANR	3968641	Identifier	config		3965363	1					
ANR	3968642	Argument	"""graph.few"""		3965363	1					
ANR	3968643	PrimaryExpression	"""graph.few"""		3965363	0					
ANR	3968644	CompoundStatement		631:51:17115:17115	3965363	1					
ANR	3968645	ExpressionStatement	g -> need_reload_nodes = true	4678:4:120426:120453	3965363	0	True				
ANR	3968646	AssignmentExpression	g -> need_reload_nodes = true		3965363	0		=			
ANR	3968647	PtrMemberAccess	g -> need_reload_nodes		3965363	0					
ANR	3968648	Identifier	g		3965363	0					
ANR	3968649	Identifier	need_reload_nodes		3965363	1					
ANR	3968650	Identifier	true		3965363	1					
ANR	3968651	BreakStatement	break ;	4680:3:120463:120468	3965363	275	True				
ANR	3968652	Label	case 'I' :	4681:2:120472:120480	3965363	276	True				
ANR	3968653	ExpressionStatement	"agraph_follow_innodes ( g , false )"	4682:3:120485:120517	3965363	277	True				
ANR	3968654	CallExpression	"agraph_follow_innodes ( g , false )"		3965363	0					
ANR	3968655	Callee	agraph_follow_innodes		3965363	0					
ANR	3968656	Identifier	agraph_follow_innodes		3965363	0					
ANR	3968657	ArgumentList	g		3965363	1					
ANR	3968658	Argument	g		3965363	0					
ANR	3968659	Identifier	g		3965363	0					
ANR	3968660	Argument	false		3965363	1					
ANR	3968661	Identifier	false		3965363	0					
ANR	3968662	IfStatement	"if ( r_config_get_i ( core -> config , ""graph.few"" ) )"		3965363	278					
ANR	3968663	Condition	"r_config_get_i ( core -> config , ""graph.few"" )"	4683:7:120526:120567	3965363	0	True				
ANR	3968664	CallExpression	"r_config_get_i ( core -> config , ""graph.few"" )"		3965363	0					
ANR	3968665	Callee	r_config_get_i		3965363	0					
ANR	3968666	Identifier	r_config_get_i		3965363	0					
ANR	3968667	ArgumentList	core -> config		3965363	1					
ANR	3968668	Argument	core -> config		3965363	0					
ANR	3968669	PtrMemberAccess	core -> config		3965363	0					
ANR	3968670	Identifier	core		3965363	0					
ANR	3968671	Identifier	config		3965363	1					
ANR	3968672	Argument	"""graph.few"""		3965363	1					
ANR	3968673	PrimaryExpression	"""graph.few"""		3965363	0					
ANR	3968674	CompoundStatement		637:51:17265:17265	3965363	1					
ANR	3968675	ExpressionStatement	g -> need_reload_nodes = true	4684:4:120576:120603	3965363	0	True				
ANR	3968676	AssignmentExpression	g -> need_reload_nodes = true		3965363	0		=			
ANR	3968677	PtrMemberAccess	g -> need_reload_nodes		3965363	0					
ANR	3968678	Identifier	g		3965363	0					
ANR	3968679	Identifier	need_reload_nodes		3965363	1					
ANR	3968680	Identifier	true		3965363	1					
ANR	3968681	BreakStatement	break ;	4686:3:120613:120618	3965363	279	True				
ANR	3968682	Label	case 't' :	4687:2:120622:120630	3965363	280	True				
ANR	3968683	ExpressionStatement	agraph_follow_true ( g )	4688:3:120635:120657	3965363	281	True				
ANR	3968684	CallExpression	agraph_follow_true ( g )		3965363	0					
ANR	3968685	Callee	agraph_follow_true		3965363	0					
ANR	3968686	Identifier	agraph_follow_true		3965363	0					
ANR	3968687	ArgumentList	g		3965363	1					
ANR	3968688	Argument	g		3965363	0					
ANR	3968689	Identifier	g		3965363	0					
ANR	3968690	IfStatement	"if ( r_config_get_i ( core -> config , ""graph.few"" ) )"		3965363	282					
ANR	3968691	Condition	"r_config_get_i ( core -> config , ""graph.few"" )"	4689:7:120666:120707	3965363	0	True				
ANR	3968692	CallExpression	"r_config_get_i ( core -> config , ""graph.few"" )"		3965363	0					
ANR	3968693	Callee	r_config_get_i		3965363	0					
ANR	3968694	Identifier	r_config_get_i		3965363	0					
ANR	3968695	ArgumentList	core -> config		3965363	1					
ANR	3968696	Argument	core -> config		3965363	0					
ANR	3968697	PtrMemberAccess	core -> config		3965363	0					
ANR	3968698	Identifier	core		3965363	0					
ANR	3968699	Identifier	config		3965363	1					
ANR	3968700	Argument	"""graph.few"""		3965363	1					
ANR	3968701	PrimaryExpression	"""graph.few"""		3965363	0					
ANR	3968702	CompoundStatement		643:51:17405:17405	3965363	1					
ANR	3968703	ExpressionStatement	g -> need_reload_nodes = true	4690:4:120716:120743	3965363	0	True				
ANR	3968704	AssignmentExpression	g -> need_reload_nodes = true		3965363	0		=			
ANR	3968705	PtrMemberAccess	g -> need_reload_nodes		3965363	0					
ANR	3968706	Identifier	g		3965363	0					
ANR	3968707	Identifier	need_reload_nodes		3965363	1					
ANR	3968708	Identifier	true		3965363	1					
ANR	3968709	BreakStatement	break ;	4692:3:120753:120758	3965363	283	True				
ANR	3968710	Label	case 'T' :	4693:2:120762:120770	3965363	284	True				
ANR	3968711	BreakStatement	break ;	4695:3:120816:120821	3965363	285	True				
ANR	3968712	Label	case 'f' :	4696:2:120825:120833	3965363	286	True				
ANR	3968713	ExpressionStatement	agraph_follow_false ( g )	4697:3:120838:120861	3965363	287	True				
ANR	3968714	CallExpression	agraph_follow_false ( g )		3965363	0					
ANR	3968715	Callee	agraph_follow_false		3965363	0					
ANR	3968716	Identifier	agraph_follow_false		3965363	0					
ANR	3968717	ArgumentList	g		3965363	1					
ANR	3968718	Argument	g		3965363	0					
ANR	3968719	Identifier	g		3965363	0					
ANR	3968720	IfStatement	"if ( r_config_get_i ( core -> config , ""graph.few"" ) )"		3965363	288					
ANR	3968721	Condition	"r_config_get_i ( core -> config , ""graph.few"" )"	4698:7:120870:120911	3965363	0	True				
ANR	3968722	CallExpression	"r_config_get_i ( core -> config , ""graph.few"" )"		3965363	0					
ANR	3968723	Callee	r_config_get_i		3965363	0					
ANR	3968724	Identifier	r_config_get_i		3965363	0					
ANR	3968725	ArgumentList	core -> config		3965363	1					
ANR	3968726	Argument	core -> config		3965363	0					
ANR	3968727	PtrMemberAccess	core -> config		3965363	0					
ANR	3968728	Identifier	core		3965363	0					
ANR	3968729	Identifier	config		3965363	1					
ANR	3968730	Argument	"""graph.few"""		3965363	1					
ANR	3968731	PrimaryExpression	"""graph.few"""		3965363	0					
ANR	3968732	CompoundStatement		652:51:17609:17609	3965363	1					
ANR	3968733	ExpressionStatement	g -> need_reload_nodes = true	4699:4:120920:120947	3965363	0	True				
ANR	3968734	AssignmentExpression	g -> need_reload_nodes = true		3965363	0		=			
ANR	3968735	PtrMemberAccess	g -> need_reload_nodes		3965363	0					
ANR	3968736	Identifier	g		3965363	0					
ANR	3968737	Identifier	need_reload_nodes		3965363	1					
ANR	3968738	Identifier	true		3965363	1					
ANR	3968739	BreakStatement	break ;	4701:3:120957:120962	3965363	289	True				
ANR	3968740	Label	case 'F' :	4702:2:120966:120974	3965363	290	True				
ANR	3968741	IfStatement	if ( okey == 27 )		3965363	291					
ANR	3968742	Condition	okey == 27	4703:7:120983:120992	3965363	0	True				
ANR	3968743	EqualityExpression	okey == 27		3965363	0		==			
ANR	3968744	Identifier	okey		3965363	0					
ANR	3968745	PrimaryExpression	27		3965363	1					
ANR	3968746	CompoundStatement		659:4:17718:17770	3965363	1					
ANR	3968747	IdentifierDeclStatement	"const RGraphNode * gn = find_near_of ( g , NULL , false ) ;"	4705:4:121023:121075	3965363	0	True				
ANR	3968748	IdentifierDecl	"* gn = find_near_of ( g , NULL , false )"		3965363	0					
ANR	3968749	IdentifierDeclType	const RGraphNode *		3965363	0					
ANR	3968750	Identifier	gn		3965363	1					
ANR	3968751	AssignmentExpression	"* gn = find_near_of ( g , NULL , false )"		3965363	2		=			
ANR	3968752	Identifier	gn		3965363	0					
ANR	3968753	CallExpression	"find_near_of ( g , NULL , false )"		3965363	1					
ANR	3968754	Callee	find_near_of		3965363	0					
ANR	3968755	Identifier	find_near_of		3965363	0					
ANR	3968756	ArgumentList	g		3965363	1					
ANR	3968757	Argument	g		3965363	0					
ANR	3968758	Identifier	g		3965363	0					
ANR	3968759	Argument	NULL		3965363	1					
ANR	3968760	Identifier	NULL		3965363	0					
ANR	3968761	Argument	false		3965363	2					
ANR	3968762	Identifier	false		3965363	0					
ANR	3968763	ExpressionStatement	g -> update_seek_on = get_anode ( gn )	4706:4:121081:121115	3965363	1	True				
ANR	3968764	AssignmentExpression	g -> update_seek_on = get_anode ( gn )		3965363	0		=			
ANR	3968765	PtrMemberAccess	g -> update_seek_on		3965363	0					
ANR	3968766	Identifier	g		3965363	0					
ANR	3968767	Identifier	update_seek_on		3965363	1					
ANR	3968768	CallExpression	get_anode ( gn )		3965363	1					
ANR	3968769	Callee	get_anode		3965363	0					
ANR	3968770	Identifier	get_anode		3965363	0					
ANR	3968771	ArgumentList	gn		3965363	1					
ANR	3968772	Argument	gn		3965363	0					
ANR	3968773	Identifier	gn		3965363	0					
ANR	3968774	ElseStatement	else		3965363	0					
ANR	3968775	CompoundStatement		661:10:17822:17822	3965363	0					
ANR	3968776	ExpressionStatement	r_core_visual_trackflags ( core )	4709:4:121167:121198	3965363	0	True				
ANR	3968777	CallExpression	r_core_visual_trackflags ( core )		3965363	0					
ANR	3968778	Callee	r_core_visual_trackflags		3965363	0					
ANR	3968779	Identifier	r_core_visual_trackflags		3965363	0					
ANR	3968780	ArgumentList	core		3965363	1					
ANR	3968781	Argument	core		3965363	0					
ANR	3968782	Identifier	core		3965363	0					
ANR	3968783	BreakStatement	break ;	4711:3:121208:121213	3965363	292	True				
ANR	3968784	Label	case '/' :	4712:2:121217:121225	3965363	293	True				
ANR	3968785	ExpressionStatement	"showcursor ( core , true )"	4713:3:121230:121253	3965363	294	True				
ANR	3968786	CallExpression	"showcursor ( core , true )"		3965363	0					
ANR	3968787	Callee	showcursor		3965363	0					
ANR	3968788	Identifier	showcursor		3965363	0					
ANR	3968789	ArgumentList	core		3965363	1					
ANR	3968790	Argument	core		3965363	0					
ANR	3968791	Identifier	core		3965363	0					
ANR	3968792	Argument	true		3965363	1					
ANR	3968793	Identifier	true		3965363	0					
ANR	3968794	ExpressionStatement	"r_config_set_i ( core -> config , ""scr.interactive"" , true )"	4714:3:121258:121312	3965363	295	True				
ANR	3968795	CallExpression	"r_config_set_i ( core -> config , ""scr.interactive"" , true )"		3965363	0					
ANR	3968796	Callee	r_config_set_i		3965363	0					
ANR	3968797	Identifier	r_config_set_i		3965363	0					
ANR	3968798	ArgumentList	core -> config		3965363	1					
ANR	3968799	Argument	core -> config		3965363	0					
ANR	3968800	PtrMemberAccess	core -> config		3965363	0					
ANR	3968801	Identifier	core		3965363	0					
ANR	3968802	Identifier	config		3965363	1					
ANR	3968803	Argument	"""scr.interactive"""		3965363	1					
ANR	3968804	PrimaryExpression	"""scr.interactive"""		3965363	0					
ANR	3968805	Argument	true		3965363	2					
ANR	3968806	Identifier	true		3965363	0					
ANR	3968807	ExpressionStatement	"r_core_cmd0 ( core , ""?i highlight;e scr.highlight=`yp`"" )"	4715:3:121317:121372	3965363	296	True				
ANR	3968808	CallExpression	"r_core_cmd0 ( core , ""?i highlight;e scr.highlight=`yp`"" )"		3965363	0					
ANR	3968809	Callee	r_core_cmd0		3965363	0					
ANR	3968810	Identifier	r_core_cmd0		3965363	0					
ANR	3968811	ArgumentList	core		3965363	1					
ANR	3968812	Argument	core		3965363	0					
ANR	3968813	Identifier	core		3965363	0					
ANR	3968814	Argument	"""?i highlight;e scr.highlight=`yp`"""		3965363	1					
ANR	3968815	PrimaryExpression	"""?i highlight;e scr.highlight=`yp`"""		3965363	0					
ANR	3968816	ExpressionStatement	"r_config_set_i ( core -> config , ""scr.interactive"" , false )"	4716:3:121377:121432	3965363	297	True				
ANR	3968817	CallExpression	"r_config_set_i ( core -> config , ""scr.interactive"" , false )"		3965363	0					
ANR	3968818	Callee	r_config_set_i		3965363	0					
ANR	3968819	Identifier	r_config_set_i		3965363	0					
ANR	3968820	ArgumentList	core -> config		3965363	1					
ANR	3968821	Argument	core -> config		3965363	0					
ANR	3968822	PtrMemberAccess	core -> config		3965363	0					
ANR	3968823	Identifier	core		3965363	0					
ANR	3968824	Identifier	config		3965363	1					
ANR	3968825	Argument	"""scr.interactive"""		3965363	1					
ANR	3968826	PrimaryExpression	"""scr.interactive"""		3965363	0					
ANR	3968827	Argument	false		3965363	2					
ANR	3968828	Identifier	false		3965363	0					
ANR	3968829	ExpressionStatement	"showcursor ( core , false )"	4717:3:121437:121461	3965363	298	True				
ANR	3968830	CallExpression	"showcursor ( core , false )"		3965363	0					
ANR	3968831	Callee	showcursor		3965363	0					
ANR	3968832	Identifier	showcursor		3965363	0					
ANR	3968833	ArgumentList	core		3965363	1					
ANR	3968834	Argument	core		3965363	0					
ANR	3968835	Identifier	core		3965363	0					
ANR	3968836	Argument	false		3965363	1					
ANR	3968837	Identifier	false		3965363	0					
ANR	3968838	BreakStatement	break ;	4718:3:121466:121471	3965363	299	True				
ANR	3968839	Label	case ':' :	4719:2:121475:121483	3965363	300	True				
ANR	3968840	ExpressionStatement	r_core_visual_prompt_input ( core )	4720:3:121488:121521	3965363	301	True				
ANR	3968841	CallExpression	r_core_visual_prompt_input ( core )		3965363	0					
ANR	3968842	Callee	r_core_visual_prompt_input		3965363	0					
ANR	3968843	Identifier	r_core_visual_prompt_input		3965363	0					
ANR	3968844	ArgumentList	core		3965363	1					
ANR	3968845	Argument	core		3965363	0					
ANR	3968846	Identifier	core		3965363	0					
ANR	3968847	IfStatement	if ( ! g )		3965363	302					
ANR	3968848	Condition	! g	4721:7:121530:121531	3965363	0	True				
ANR	3968849	UnaryOperationExpression	! g		3965363	0					
ANR	3968850	UnaryOperator	!		3965363	0					
ANR	3968851	Identifier	g		3965363	1					
ANR	3968852	CompoundStatement		675:11:18229:18229	3965363	1					
ANR	3968853	ExpressionStatement	g -> need_reload_nodes = true	4722:4:121540:121567	3965363	0	True				
ANR	3968854	AssignmentExpression	g -> need_reload_nodes = true		3965363	0		=			
ANR	3968855	PtrMemberAccess	g -> need_reload_nodes		3965363	0					
ANR	3968856	Identifier	g		3965363	0					
ANR	3968857	Identifier	need_reload_nodes		3965363	1					
ANR	3968858	Identifier	true		3965363	1					
ANR	3968859	ExpressionStatement	"get_bbupdate ( g , core , fcn )"	4723:4:121644:121671	3965363	1	True				
ANR	3968860	CallExpression	"get_bbupdate ( g , core , fcn )"		3965363	0					
ANR	3968861	Callee	get_bbupdate		3965363	0					
ANR	3968862	Identifier	get_bbupdate		3965363	0					
ANR	3968863	ArgumentList	g		3965363	1					
ANR	3968864	Argument	g		3965363	0					
ANR	3968865	Identifier	g		3965363	0					
ANR	3968866	Argument	core		3965363	1					
ANR	3968867	Identifier	core		3965363	0					
ANR	3968868	Argument	fcn		3965363	2					
ANR	3968869	Identifier	fcn		3965363	0					
ANR	3968870	BreakStatement	break ;	4725:3:121681:121686	3965363	303	True				
ANR	3968871	Label	case 'w' :	4726:2:121690:121698	3965363	304	True				
ANR	3968872	ExpressionStatement	"agraph_toggle_speed ( g , core )"	4727:3:121703:121732	3965363	305	True				
ANR	3968873	CallExpression	"agraph_toggle_speed ( g , core )"		3965363	0					
ANR	3968874	Callee	agraph_toggle_speed		3965363	0					
ANR	3968875	Identifier	agraph_toggle_speed		3965363	0					
ANR	3968876	ArgumentList	g		3965363	1					
ANR	3968877	Argument	g		3965363	0					
ANR	3968878	Identifier	g		3965363	0					
ANR	3968879	Argument	core		3965363	1					
ANR	3968880	Identifier	core		3965363	0					
ANR	3968881	BreakStatement	break ;	4728:3:121737:121742	3965363	306	True				
ANR	3968882	Label	case '_' :	4729:2:121746:121754	3965363	307	True				
ANR	3968883	ExpressionStatement	r_core_visual_hudstuff ( core )	4730:3:121759:121788	3965363	308	True				
ANR	3968884	CallExpression	r_core_visual_hudstuff ( core )		3965363	0					
ANR	3968885	Callee	r_core_visual_hudstuff		3965363	0					
ANR	3968886	Identifier	r_core_visual_hudstuff		3965363	0					
ANR	3968887	ArgumentList	core		3965363	1					
ANR	3968888	Argument	core		3965363	0					
ANR	3968889	Identifier	core		3965363	0					
ANR	3968890	BreakStatement	break ;	4731:3:121793:121798	3965363	309	True				
ANR	3968891	Label	case R_CONS_KEY_F1 :	4732:2:121802:121820	3965363	310	True				
ANR	3968892	Identifier	R_CONS_KEY_F1		3965363	0					
ANR	3968893	ExpressionStatement	"cmd = r_config_get ( core -> config , ""key.f1"" )"	4733:3:121825:121868	3965363	311	True				
ANR	3968894	AssignmentExpression	"cmd = r_config_get ( core -> config , ""key.f1"" )"		3965363	0		=			
ANR	3968895	Identifier	cmd		3965363	0					
ANR	3968896	CallExpression	"r_config_get ( core -> config , ""key.f1"" )"		3965363	1					
ANR	3968897	Callee	r_config_get		3965363	0					
ANR	3968898	Identifier	r_config_get		3965363	0					
ANR	3968899	ArgumentList	core -> config		3965363	1					
ANR	3968900	Argument	core -> config		3965363	0					
ANR	3968901	PtrMemberAccess	core -> config		3965363	0					
ANR	3968902	Identifier	core		3965363	0					
ANR	3968903	Identifier	config		3965363	1					
ANR	3968904	Argument	"""key.f1"""		3965363	1					
ANR	3968905	PrimaryExpression	"""key.f1"""		3965363	0					
ANR	3968906	IfStatement	if ( cmd && * cmd )		3965363	312					
ANR	3968907	Condition	cmd && * cmd	4734:7:121877:121887	3965363	0	True				
ANR	3968908	AndExpression	cmd && * cmd		3965363	0		&&			
ANR	3968909	Identifier	cmd		3965363	0					
ANR	3968910	UnaryOperationExpression	* cmd		3965363	1					
ANR	3968911	UnaryOperator	*		3965363	0					
ANR	3968912	Identifier	cmd		3965363	1					
ANR	3968913	CompoundStatement		688:20:18585:18585	3965363	1					
ANR	3968914	ExpressionStatement	"( void ) r_core_cmd0 ( core , cmd )"	4735:4:121896:121926	3965363	0	True				
ANR	3968915	CastExpression	"( void ) r_core_cmd0 ( core , cmd )"		3965363	0					
ANR	3968916	CastTarget	void		3965363	0					
ANR	3968917	CallExpression	"r_core_cmd0 ( core , cmd )"		3965363	1					
ANR	3968918	Callee	r_core_cmd0		3965363	0					
ANR	3968919	Identifier	r_core_cmd0		3965363	0					
ANR	3968920	ArgumentList	core		3965363	1					
ANR	3968921	Argument	core		3965363	0					
ANR	3968922	Identifier	core		3965363	0					
ANR	3968923	Argument	cmd		3965363	1					
ANR	3968924	Identifier	cmd		3965363	0					
ANR	3968925	BreakStatement	break ;	4737:3:121936:121941	3965363	313	True				
ANR	3968926	Label	case R_CONS_KEY_F2 :	4738:2:121945:121963	3965363	314	True				
ANR	3968927	Identifier	R_CONS_KEY_F2		3965363	0					
ANR	3968928	ExpressionStatement	"cmd = r_config_get ( core -> config , ""key.f2"" )"	4739:3:121968:122011	3965363	315	True				
ANR	3968929	AssignmentExpression	"cmd = r_config_get ( core -> config , ""key.f2"" )"		3965363	0		=			
ANR	3968930	Identifier	cmd		3965363	0					
ANR	3968931	CallExpression	"r_config_get ( core -> config , ""key.f2"" )"		3965363	1					
ANR	3968932	Callee	r_config_get		3965363	0					
ANR	3968933	Identifier	r_config_get		3965363	0					
ANR	3968934	ArgumentList	core -> config		3965363	1					
ANR	3968935	Argument	core -> config		3965363	0					
ANR	3968936	PtrMemberAccess	core -> config		3965363	0					
ANR	3968937	Identifier	core		3965363	0					
ANR	3968938	Identifier	config		3965363	1					
ANR	3968939	Argument	"""key.f2"""		3965363	1					
ANR	3968940	PrimaryExpression	"""key.f2"""		3965363	0					
ANR	3968941	IfStatement	if ( cmd && * cmd )		3965363	316					
ANR	3968942	Condition	cmd && * cmd	4740:7:122020:122030	3965363	0	True				
ANR	3968943	AndExpression	cmd && * cmd		3965363	0		&&			
ANR	3968944	Identifier	cmd		3965363	0					
ANR	3968945	UnaryOperationExpression	* cmd		3965363	1					
ANR	3968946	UnaryOperator	*		3965363	0					
ANR	3968947	Identifier	cmd		3965363	1					
ANR	3968948	CompoundStatement		694:20:18728:18728	3965363	1					
ANR	3968949	ExpressionStatement	"( void ) r_core_cmd0 ( core , cmd )"	4741:4:122039:122069	3965363	0	True				
ANR	3968950	CastExpression	"( void ) r_core_cmd0 ( core , cmd )"		3965363	0					
ANR	3968951	CastTarget	void		3965363	0					
ANR	3968952	CallExpression	"r_core_cmd0 ( core , cmd )"		3965363	1					
ANR	3968953	Callee	r_core_cmd0		3965363	0					
ANR	3968954	Identifier	r_core_cmd0		3965363	0					
ANR	3968955	ArgumentList	core		3965363	1					
ANR	3968956	Argument	core		3965363	0					
ANR	3968957	Identifier	core		3965363	0					
ANR	3968958	Argument	cmd		3965363	1					
ANR	3968959	Identifier	cmd		3965363	0					
ANR	3968960	ElseStatement	else		3965363	0					
ANR	3968961	CompoundStatement		696:10:18776:18776	3965363	0					
ANR	3968962	ExpressionStatement	graph_breakpoint ( core )	4743:4:122087:122110	3965363	0	True				
ANR	3968963	CallExpression	graph_breakpoint ( core )		3965363	0					
ANR	3968964	Callee	graph_breakpoint		3965363	0					
ANR	3968965	Identifier	graph_breakpoint		3965363	0					
ANR	3968966	ArgumentList	core		3965363	1					
ANR	3968967	Argument	core		3965363	0					
ANR	3968968	Identifier	core		3965363	0					
ANR	3968969	BreakStatement	break ;	4745:3:122120:122125	3965363	317	True				
ANR	3968970	Label	case R_CONS_KEY_F3 :	4746:2:122129:122147	3965363	318	True				
ANR	3968971	Identifier	R_CONS_KEY_F3		3965363	0					
ANR	3968972	ExpressionStatement	"cmd = r_config_get ( core -> config , ""key.f3"" )"	4747:3:122152:122195	3965363	319	True				
ANR	3968973	AssignmentExpression	"cmd = r_config_get ( core -> config , ""key.f3"" )"		3965363	0		=			
ANR	3968974	Identifier	cmd		3965363	0					
ANR	3968975	CallExpression	"r_config_get ( core -> config , ""key.f3"" )"		3965363	1					
ANR	3968976	Callee	r_config_get		3965363	0					
ANR	3968977	Identifier	r_config_get		3965363	0					
ANR	3968978	ArgumentList	core -> config		3965363	1					
ANR	3968979	Argument	core -> config		3965363	0					
ANR	3968980	PtrMemberAccess	core -> config		3965363	0					
ANR	3968981	Identifier	core		3965363	0					
ANR	3968982	Identifier	config		3965363	1					
ANR	3968983	Argument	"""key.f3"""		3965363	1					
ANR	3968984	PrimaryExpression	"""key.f3"""		3965363	0					
ANR	3968985	IfStatement	if ( cmd && * cmd )		3965363	320					
ANR	3968986	Condition	cmd && * cmd	4748:7:122204:122214	3965363	0	True				
ANR	3968987	AndExpression	cmd && * cmd		3965363	0		&&			
ANR	3968988	Identifier	cmd		3965363	0					
ANR	3968989	UnaryOperationExpression	* cmd		3965363	1					
ANR	3968990	UnaryOperator	*		3965363	0					
ANR	3968991	Identifier	cmd		3965363	1					
ANR	3968992	CompoundStatement		702:20:18912:18912	3965363	1					
ANR	3968993	ExpressionStatement	"( void ) r_core_cmd0 ( core , cmd )"	4749:4:122223:122253	3965363	0	True				
ANR	3968994	CastExpression	"( void ) r_core_cmd0 ( core , cmd )"		3965363	0					
ANR	3968995	CastTarget	void		3965363	0					
ANR	3968996	CallExpression	"r_core_cmd0 ( core , cmd )"		3965363	1					
ANR	3968997	Callee	r_core_cmd0		3965363	0					
ANR	3968998	Identifier	r_core_cmd0		3965363	0					
ANR	3968999	ArgumentList	core		3965363	1					
ANR	3969000	Argument	core		3965363	0					
ANR	3969001	Identifier	core		3965363	0					
ANR	3969002	Argument	cmd		3965363	1					
ANR	3969003	Identifier	cmd		3965363	0					
ANR	3969004	BreakStatement	break ;	4751:3:122263:122268	3965363	321	True				
ANR	3969005	Label	case R_CONS_KEY_F4 :	4752:2:122272:122290	3965363	322	True				
ANR	3969006	Identifier	R_CONS_KEY_F4		3965363	0					
ANR	3969007	ExpressionStatement	"cmd = r_config_get ( core -> config , ""key.f4"" )"	4753:3:122295:122338	3965363	323	True				
ANR	3969008	AssignmentExpression	"cmd = r_config_get ( core -> config , ""key.f4"" )"		3965363	0		=			
ANR	3969009	Identifier	cmd		3965363	0					
ANR	3969010	CallExpression	"r_config_get ( core -> config , ""key.f4"" )"		3965363	1					
ANR	3969011	Callee	r_config_get		3965363	0					
ANR	3969012	Identifier	r_config_get		3965363	0					
ANR	3969013	ArgumentList	core -> config		3965363	1					
ANR	3969014	Argument	core -> config		3965363	0					
ANR	3969015	PtrMemberAccess	core -> config		3965363	0					
ANR	3969016	Identifier	core		3965363	0					
ANR	3969017	Identifier	config		3965363	1					
ANR	3969018	Argument	"""key.f4"""		3965363	1					
ANR	3969019	PrimaryExpression	"""key.f4"""		3965363	0					
ANR	3969020	IfStatement	if ( cmd && * cmd )		3965363	324					
ANR	3969021	Condition	cmd && * cmd	4754:7:122347:122357	3965363	0	True				
ANR	3969022	AndExpression	cmd && * cmd		3965363	0		&&			
ANR	3969023	Identifier	cmd		3965363	0					
ANR	3969024	UnaryOperationExpression	* cmd		3965363	1					
ANR	3969025	UnaryOperator	*		3965363	0					
ANR	3969026	Identifier	cmd		3965363	1					
ANR	3969027	CompoundStatement		708:20:19055:19055	3965363	1					
ANR	3969028	ExpressionStatement	"( void ) r_core_cmd0 ( core , cmd )"	4755:4:122366:122396	3965363	0	True				
ANR	3969029	CastExpression	"( void ) r_core_cmd0 ( core , cmd )"		3965363	0					
ANR	3969030	CastTarget	void		3965363	0					
ANR	3969031	CallExpression	"r_core_cmd0 ( core , cmd )"		3965363	1					
ANR	3969032	Callee	r_core_cmd0		3965363	0					
ANR	3969033	Identifier	r_core_cmd0		3965363	0					
ANR	3969034	ArgumentList	core		3965363	1					
ANR	3969035	Argument	core		3965363	0					
ANR	3969036	Identifier	core		3965363	0					
ANR	3969037	Argument	cmd		3965363	1					
ANR	3969038	Identifier	cmd		3965363	0					
ANR	3969039	BreakStatement	break ;	4757:3:122406:122411	3965363	325	True				
ANR	3969040	Label	case R_CONS_KEY_F5 :	4758:2:122415:122433	3965363	326	True				
ANR	3969041	Identifier	R_CONS_KEY_F5		3965363	0					
ANR	3969042	ExpressionStatement	"cmd = r_config_get ( core -> config , ""key.f5"" )"	4759:3:122438:122481	3965363	327	True				
ANR	3969043	AssignmentExpression	"cmd = r_config_get ( core -> config , ""key.f5"" )"		3965363	0		=			
ANR	3969044	Identifier	cmd		3965363	0					
ANR	3969045	CallExpression	"r_config_get ( core -> config , ""key.f5"" )"		3965363	1					
ANR	3969046	Callee	r_config_get		3965363	0					
ANR	3969047	Identifier	r_config_get		3965363	0					
ANR	3969048	ArgumentList	core -> config		3965363	1					
ANR	3969049	Argument	core -> config		3965363	0					
ANR	3969050	PtrMemberAccess	core -> config		3965363	0					
ANR	3969051	Identifier	core		3965363	0					
ANR	3969052	Identifier	config		3965363	1					
ANR	3969053	Argument	"""key.f5"""		3965363	1					
ANR	3969054	PrimaryExpression	"""key.f5"""		3965363	0					
ANR	3969055	IfStatement	if ( cmd && * cmd )		3965363	328					
ANR	3969056	Condition	cmd && * cmd	4760:7:122490:122500	3965363	0	True				
ANR	3969057	AndExpression	cmd && * cmd		3965363	0		&&			
ANR	3969058	Identifier	cmd		3965363	0					
ANR	3969059	UnaryOperationExpression	* cmd		3965363	1					
ANR	3969060	UnaryOperator	*		3965363	0					
ANR	3969061	Identifier	cmd		3965363	1					
ANR	3969062	CompoundStatement		714:20:19198:19198	3965363	1					
ANR	3969063	ExpressionStatement	"( void ) r_core_cmd0 ( core , cmd )"	4761:4:122509:122538	3965363	0	True				
ANR	3969064	CastExpression	"( void ) r_core_cmd0 ( core , cmd )"		3965363	0					
ANR	3969065	CastTarget	void		3965363	0					
ANR	3969066	CallExpression	"r_core_cmd0 ( core , cmd )"		3965363	1					
ANR	3969067	Callee	r_core_cmd0		3965363	0					
ANR	3969068	Identifier	r_core_cmd0		3965363	0					
ANR	3969069	ArgumentList	core		3965363	1					
ANR	3969070	Argument	core		3965363	0					
ANR	3969071	Identifier	core		3965363	0					
ANR	3969072	Argument	cmd		3965363	1					
ANR	3969073	Identifier	cmd		3965363	0					
ANR	3969074	BreakStatement	break ;	4763:3:122548:122553	3965363	329	True				
ANR	3969075	Label	case R_CONS_KEY_F6 :	4764:2:122557:122575	3965363	330	True				
ANR	3969076	Identifier	R_CONS_KEY_F6		3965363	0					
ANR	3969077	ExpressionStatement	"cmd = r_config_get ( core -> config , ""key.f6"" )"	4765:3:122580:122623	3965363	331	True				
ANR	3969078	AssignmentExpression	"cmd = r_config_get ( core -> config , ""key.f6"" )"		3965363	0		=			
ANR	3969079	Identifier	cmd		3965363	0					
ANR	3969080	CallExpression	"r_config_get ( core -> config , ""key.f6"" )"		3965363	1					
ANR	3969081	Callee	r_config_get		3965363	0					
ANR	3969082	Identifier	r_config_get		3965363	0					
ANR	3969083	ArgumentList	core -> config		3965363	1					
ANR	3969084	Argument	core -> config		3965363	0					
ANR	3969085	PtrMemberAccess	core -> config		3965363	0					
ANR	3969086	Identifier	core		3965363	0					
ANR	3969087	Identifier	config		3965363	1					
ANR	3969088	Argument	"""key.f6"""		3965363	1					
ANR	3969089	PrimaryExpression	"""key.f6"""		3965363	0					
ANR	3969090	IfStatement	if ( cmd && * cmd )		3965363	332					
ANR	3969091	Condition	cmd && * cmd	4766:7:122632:122642	3965363	0	True				
ANR	3969092	AndExpression	cmd && * cmd		3965363	0		&&			
ANR	3969093	Identifier	cmd		3965363	0					
ANR	3969094	UnaryOperationExpression	* cmd		3965363	1					
ANR	3969095	UnaryOperator	*		3965363	0					
ANR	3969096	Identifier	cmd		3965363	1					
ANR	3969097	CompoundStatement		720:20:19340:19340	3965363	1					
ANR	3969098	ExpressionStatement	"( void ) r_core_cmd0 ( core , cmd )"	4767:4:122651:122680	3965363	0	True				
ANR	3969099	CastExpression	"( void ) r_core_cmd0 ( core , cmd )"		3965363	0					
ANR	3969100	CastTarget	void		3965363	0					
ANR	3969101	CallExpression	"r_core_cmd0 ( core , cmd )"		3965363	1					
ANR	3969102	Callee	r_core_cmd0		3965363	0					
ANR	3969103	Identifier	r_core_cmd0		3965363	0					
ANR	3969104	ArgumentList	core		3965363	1					
ANR	3969105	Argument	core		3965363	0					
ANR	3969106	Identifier	core		3965363	0					
ANR	3969107	Argument	cmd		3965363	1					
ANR	3969108	Identifier	cmd		3965363	0					
ANR	3969109	BreakStatement	break ;	4769:3:122690:122695	3965363	333	True				
ANR	3969110	Label	case R_CONS_KEY_F7 :	4770:2:122699:122717	3965363	334	True				
ANR	3969111	Identifier	R_CONS_KEY_F7		3965363	0					
ANR	3969112	ExpressionStatement	"cmd = r_config_get ( core -> config , ""key.f7"" )"	4771:3:122722:122765	3965363	335	True				
ANR	3969113	AssignmentExpression	"cmd = r_config_get ( core -> config , ""key.f7"" )"		3965363	0		=			
ANR	3969114	Identifier	cmd		3965363	0					
ANR	3969115	CallExpression	"r_config_get ( core -> config , ""key.f7"" )"		3965363	1					
ANR	3969116	Callee	r_config_get		3965363	0					
ANR	3969117	Identifier	r_config_get		3965363	0					
ANR	3969118	ArgumentList	core -> config		3965363	1					
ANR	3969119	Argument	core -> config		3965363	0					
ANR	3969120	PtrMemberAccess	core -> config		3965363	0					
ANR	3969121	Identifier	core		3965363	0					
ANR	3969122	Identifier	config		3965363	1					
ANR	3969123	Argument	"""key.f7"""		3965363	1					
ANR	3969124	PrimaryExpression	"""key.f7"""		3965363	0					
ANR	3969125	IfStatement	if ( cmd && * cmd )		3965363	336					
ANR	3969126	Condition	cmd && * cmd	4772:7:122774:122784	3965363	0	True				
ANR	3969127	AndExpression	cmd && * cmd		3965363	0		&&			
ANR	3969128	Identifier	cmd		3965363	0					
ANR	3969129	UnaryOperationExpression	* cmd		3965363	1					
ANR	3969130	UnaryOperator	*		3965363	0					
ANR	3969131	Identifier	cmd		3965363	1					
ANR	3969132	CompoundStatement		726:20:19482:19482	3965363	1					
ANR	3969133	ExpressionStatement	"( void ) r_core_cmd0 ( core , cmd )"	4773:4:122793:122822	3965363	0	True				
ANR	3969134	CastExpression	"( void ) r_core_cmd0 ( core , cmd )"		3965363	0					
ANR	3969135	CastTarget	void		3965363	0					
ANR	3969136	CallExpression	"r_core_cmd0 ( core , cmd )"		3965363	1					
ANR	3969137	Callee	r_core_cmd0		3965363	0					
ANR	3969138	Identifier	r_core_cmd0		3965363	0					
ANR	3969139	ArgumentList	core		3965363	1					
ANR	3969140	Argument	core		3965363	0					
ANR	3969141	Identifier	core		3965363	0					
ANR	3969142	Argument	cmd		3965363	1					
ANR	3969143	Identifier	cmd		3965363	0					
ANR	3969144	ElseStatement	else		3965363	0					
ANR	3969145	CompoundStatement		728:10:19529:19529	3965363	0					
ANR	3969146	ExpressionStatement	"graph_single_step_in ( core , g )"	4775:4:122840:122870	3965363	0	True				
ANR	3969147	CallExpression	"graph_single_step_in ( core , g )"		3965363	0					
ANR	3969148	Callee	graph_single_step_in		3965363	0					
ANR	3969149	Identifier	graph_single_step_in		3965363	0					
ANR	3969150	ArgumentList	core		3965363	1					
ANR	3969151	Argument	core		3965363	0					
ANR	3969152	Identifier	core		3965363	0					
ANR	3969153	Argument	g		3965363	1					
ANR	3969154	Identifier	g		3965363	0					
ANR	3969155	BreakStatement	break ;	4777:3:122880:122885	3965363	337	True				
ANR	3969156	Label	case R_CONS_KEY_F8 :	4778:2:122889:122907	3965363	338	True				
ANR	3969157	Identifier	R_CONS_KEY_F8		3965363	0					
ANR	3969158	ExpressionStatement	"cmd = r_config_get ( core -> config , ""key.f8"" )"	4779:3:122912:122955	3965363	339	True				
ANR	3969159	AssignmentExpression	"cmd = r_config_get ( core -> config , ""key.f8"" )"		3965363	0		=			
ANR	3969160	Identifier	cmd		3965363	0					
ANR	3969161	CallExpression	"r_config_get ( core -> config , ""key.f8"" )"		3965363	1					
ANR	3969162	Callee	r_config_get		3965363	0					
ANR	3969163	Identifier	r_config_get		3965363	0					
ANR	3969164	ArgumentList	core -> config		3965363	1					
ANR	3969165	Argument	core -> config		3965363	0					
ANR	3969166	PtrMemberAccess	core -> config		3965363	0					
ANR	3969167	Identifier	core		3965363	0					
ANR	3969168	Identifier	config		3965363	1					
ANR	3969169	Argument	"""key.f8"""		3965363	1					
ANR	3969170	PrimaryExpression	"""key.f8"""		3965363	0					
ANR	3969171	IfStatement	if ( cmd && * cmd )		3965363	340					
ANR	3969172	Condition	cmd && * cmd	4780:7:122964:122974	3965363	0	True				
ANR	3969173	AndExpression	cmd && * cmd		3965363	0		&&			
ANR	3969174	Identifier	cmd		3965363	0					
ANR	3969175	UnaryOperationExpression	* cmd		3965363	1					
ANR	3969176	UnaryOperator	*		3965363	0					
ANR	3969177	Identifier	cmd		3965363	1					
ANR	3969178	CompoundStatement		734:20:19672:19672	3965363	1					
ANR	3969179	ExpressionStatement	"( void ) r_core_cmd0 ( core , cmd )"	4781:4:122983:123012	3965363	0	True				
ANR	3969180	CastExpression	"( void ) r_core_cmd0 ( core , cmd )"		3965363	0					
ANR	3969181	CastTarget	void		3965363	0					
ANR	3969182	CallExpression	"r_core_cmd0 ( core , cmd )"		3965363	1					
ANR	3969183	Callee	r_core_cmd0		3965363	0					
ANR	3969184	Identifier	r_core_cmd0		3965363	0					
ANR	3969185	ArgumentList	core		3965363	1					
ANR	3969186	Argument	core		3965363	0					
ANR	3969187	Identifier	core		3965363	0					
ANR	3969188	Argument	cmd		3965363	1					
ANR	3969189	Identifier	cmd		3965363	0					
ANR	3969190	ElseStatement	else		3965363	0					
ANR	3969191	CompoundStatement		736:10:19719:19719	3965363	0					
ANR	3969192	ExpressionStatement	"graph_single_step_over ( core , g )"	4783:4:123030:123062	3965363	0	True				
ANR	3969193	CallExpression	"graph_single_step_over ( core , g )"		3965363	0					
ANR	3969194	Callee	graph_single_step_over		3965363	0					
ANR	3969195	Identifier	graph_single_step_over		3965363	0					
ANR	3969196	ArgumentList	core		3965363	1					
ANR	3969197	Argument	core		3965363	0					
ANR	3969198	Identifier	core		3965363	0					
ANR	3969199	Argument	g		3965363	1					
ANR	3969200	Identifier	g		3965363	0					
ANR	3969201	BreakStatement	break ;	4785:3:123072:123077	3965363	341	True				
ANR	3969202	Label	case R_CONS_KEY_F9 :	4786:2:123081:123099	3965363	342	True				
ANR	3969203	Identifier	R_CONS_KEY_F9		3965363	0					
ANR	3969204	ExpressionStatement	"cmd = r_config_get ( core -> config , ""key.f9"" )"	4787:3:123104:123147	3965363	343	True				
ANR	3969205	AssignmentExpression	"cmd = r_config_get ( core -> config , ""key.f9"" )"		3965363	0		=			
ANR	3969206	Identifier	cmd		3965363	0					
ANR	3969207	CallExpression	"r_config_get ( core -> config , ""key.f9"" )"		3965363	1					
ANR	3969208	Callee	r_config_get		3965363	0					
ANR	3969209	Identifier	r_config_get		3965363	0					
ANR	3969210	ArgumentList	core -> config		3965363	1					
ANR	3969211	Argument	core -> config		3965363	0					
ANR	3969212	PtrMemberAccess	core -> config		3965363	0					
ANR	3969213	Identifier	core		3965363	0					
ANR	3969214	Identifier	config		3965363	1					
ANR	3969215	Argument	"""key.f9"""		3965363	1					
ANR	3969216	PrimaryExpression	"""key.f9"""		3965363	0					
ANR	3969217	IfStatement	if ( cmd && * cmd )		3965363	344					
ANR	3969218	Condition	cmd && * cmd	4788:7:123156:123166	3965363	0	True				
ANR	3969219	AndExpression	cmd && * cmd		3965363	0		&&			
ANR	3969220	Identifier	cmd		3965363	0					
ANR	3969221	UnaryOperationExpression	* cmd		3965363	1					
ANR	3969222	UnaryOperator	*		3965363	0					
ANR	3969223	Identifier	cmd		3965363	1					
ANR	3969224	CompoundStatement		742:20:19864:19864	3965363	1					
ANR	3969225	ExpressionStatement	"( void ) r_core_cmd0 ( core , cmd )"	4789:4:123175:123204	3965363	0	True				
ANR	3969226	CastExpression	"( void ) r_core_cmd0 ( core , cmd )"		3965363	0					
ANR	3969227	CastTarget	void		3965363	0					
ANR	3969228	CallExpression	"r_core_cmd0 ( core , cmd )"		3965363	1					
ANR	3969229	Callee	r_core_cmd0		3965363	0					
ANR	3969230	Identifier	r_core_cmd0		3965363	0					
ANR	3969231	ArgumentList	core		3965363	1					
ANR	3969232	Argument	core		3965363	0					
ANR	3969233	Identifier	core		3965363	0					
ANR	3969234	Argument	cmd		3965363	1					
ANR	3969235	Identifier	cmd		3965363	0					
ANR	3969236	ElseStatement	else		3965363	0					
ANR	3969237	CompoundStatement		744:10:19911:19911	3965363	0					
ANR	3969238	ExpressionStatement	graph_continue ( core )	4791:4:123222:123243	3965363	0	True				
ANR	3969239	CallExpression	graph_continue ( core )		3965363	0					
ANR	3969240	Callee	graph_continue		3965363	0					
ANR	3969241	Identifier	graph_continue		3965363	0					
ANR	3969242	ArgumentList	core		3965363	1					
ANR	3969243	Argument	core		3965363	0					
ANR	3969244	Identifier	core		3965363	0					
ANR	3969245	BreakStatement	break ;	4793:3:123253:123258	3965363	345	True				
ANR	3969246	Label	case R_CONS_KEY_F10 :	4794:2:123262:123281	3965363	346	True				
ANR	3969247	Identifier	R_CONS_KEY_F10		3965363	0					
ANR	3969248	ExpressionStatement	"cmd = r_config_get ( core -> config , ""key.f10"" )"	4795:3:123286:123330	3965363	347	True				
ANR	3969249	AssignmentExpression	"cmd = r_config_get ( core -> config , ""key.f10"" )"		3965363	0		=			
ANR	3969250	Identifier	cmd		3965363	0					
ANR	3969251	CallExpression	"r_config_get ( core -> config , ""key.f10"" )"		3965363	1					
ANR	3969252	Callee	r_config_get		3965363	0					
ANR	3969253	Identifier	r_config_get		3965363	0					
ANR	3969254	ArgumentList	core -> config		3965363	1					
ANR	3969255	Argument	core -> config		3965363	0					
ANR	3969256	PtrMemberAccess	core -> config		3965363	0					
ANR	3969257	Identifier	core		3965363	0					
ANR	3969258	Identifier	config		3965363	1					
ANR	3969259	Argument	"""key.f10"""		3965363	1					
ANR	3969260	PrimaryExpression	"""key.f10"""		3965363	0					
ANR	3969261	IfStatement	if ( cmd && * cmd )		3965363	348					
ANR	3969262	Condition	cmd && * cmd	4796:7:123339:123349	3965363	0	True				
ANR	3969263	AndExpression	cmd && * cmd		3965363	0		&&			
ANR	3969264	Identifier	cmd		3965363	0					
ANR	3969265	UnaryOperationExpression	* cmd		3965363	1					
ANR	3969266	UnaryOperator	*		3965363	0					
ANR	3969267	Identifier	cmd		3965363	1					
ANR	3969268	CompoundStatement		750:20:20047:20047	3965363	1					
ANR	3969269	ExpressionStatement	"( void ) r_core_cmd0 ( core , cmd )"	4797:4:123358:123387	3965363	0	True				
ANR	3969270	CastExpression	"( void ) r_core_cmd0 ( core , cmd )"		3965363	0					
ANR	3969271	CastTarget	void		3965363	0					
ANR	3969272	CallExpression	"r_core_cmd0 ( core , cmd )"		3965363	1					
ANR	3969273	Callee	r_core_cmd0		3965363	0					
ANR	3969274	Identifier	r_core_cmd0		3965363	0					
ANR	3969275	ArgumentList	core		3965363	1					
ANR	3969276	Argument	core		3965363	0					
ANR	3969277	Identifier	core		3965363	0					
ANR	3969278	Argument	cmd		3965363	1					
ANR	3969279	Identifier	cmd		3965363	0					
ANR	3969280	BreakStatement	break ;	4799:3:123397:123402	3965363	349	True				
ANR	3969281	Label	case R_CONS_KEY_F11 :	4800:2:123406:123425	3965363	350	True				
ANR	3969282	Identifier	R_CONS_KEY_F11		3965363	0					
ANR	3969283	ExpressionStatement	"cmd = r_config_get ( core -> config , ""key.f11"" )"	4801:3:123430:123474	3965363	351	True				
ANR	3969284	AssignmentExpression	"cmd = r_config_get ( core -> config , ""key.f11"" )"		3965363	0		=			
ANR	3969285	Identifier	cmd		3965363	0					
ANR	3969286	CallExpression	"r_config_get ( core -> config , ""key.f11"" )"		3965363	1					
ANR	3969287	Callee	r_config_get		3965363	0					
ANR	3969288	Identifier	r_config_get		3965363	0					
ANR	3969289	ArgumentList	core -> config		3965363	1					
ANR	3969290	Argument	core -> config		3965363	0					
ANR	3969291	PtrMemberAccess	core -> config		3965363	0					
ANR	3969292	Identifier	core		3965363	0					
ANR	3969293	Identifier	config		3965363	1					
ANR	3969294	Argument	"""key.f11"""		3965363	1					
ANR	3969295	PrimaryExpression	"""key.f11"""		3965363	0					
ANR	3969296	IfStatement	if ( cmd && * cmd )		3965363	352					
ANR	3969297	Condition	cmd && * cmd	4802:7:123483:123493	3965363	0	True				
ANR	3969298	AndExpression	cmd && * cmd		3965363	0		&&			
ANR	3969299	Identifier	cmd		3965363	0					
ANR	3969300	UnaryOperationExpression	* cmd		3965363	1					
ANR	3969301	UnaryOperator	*		3965363	0					
ANR	3969302	Identifier	cmd		3965363	1					
ANR	3969303	CompoundStatement		756:20:20191:20191	3965363	1					
ANR	3969304	ExpressionStatement	"( void ) r_core_cmd0 ( core , cmd )"	4803:4:123502:123531	3965363	0	True				
ANR	3969305	CastExpression	"( void ) r_core_cmd0 ( core , cmd )"		3965363	0					
ANR	3969306	CastTarget	void		3965363	0					
ANR	3969307	CallExpression	"r_core_cmd0 ( core , cmd )"		3965363	1					
ANR	3969308	Callee	r_core_cmd0		3965363	0					
ANR	3969309	Identifier	r_core_cmd0		3965363	0					
ANR	3969310	ArgumentList	core		3965363	1					
ANR	3969311	Argument	core		3965363	0					
ANR	3969312	Identifier	core		3965363	0					
ANR	3969313	Argument	cmd		3965363	1					
ANR	3969314	Identifier	cmd		3965363	0					
ANR	3969315	BreakStatement	break ;	4805:3:123541:123546	3965363	353	True				
ANR	3969316	Label	case R_CONS_KEY_F12 :	4806:2:123550:123569	3965363	354	True				
ANR	3969317	Identifier	R_CONS_KEY_F12		3965363	0					
ANR	3969318	ExpressionStatement	"cmd = r_config_get ( core -> config , ""key.f12"" )"	4807:3:123574:123618	3965363	355	True				
ANR	3969319	AssignmentExpression	"cmd = r_config_get ( core -> config , ""key.f12"" )"		3965363	0		=			
ANR	3969320	Identifier	cmd		3965363	0					
ANR	3969321	CallExpression	"r_config_get ( core -> config , ""key.f12"" )"		3965363	1					
ANR	3969322	Callee	r_config_get		3965363	0					
ANR	3969323	Identifier	r_config_get		3965363	0					
ANR	3969324	ArgumentList	core -> config		3965363	1					
ANR	3969325	Argument	core -> config		3965363	0					
ANR	3969326	PtrMemberAccess	core -> config		3965363	0					
ANR	3969327	Identifier	core		3965363	0					
ANR	3969328	Identifier	config		3965363	1					
ANR	3969329	Argument	"""key.f12"""		3965363	1					
ANR	3969330	PrimaryExpression	"""key.f12"""		3965363	0					
ANR	3969331	IfStatement	if ( cmd && * cmd )		3965363	356					
ANR	3969332	Condition	cmd && * cmd	4808:7:123627:123637	3965363	0	True				
ANR	3969333	AndExpression	cmd && * cmd		3965363	0		&&			
ANR	3969334	Identifier	cmd		3965363	0					
ANR	3969335	UnaryOperationExpression	* cmd		3965363	1					
ANR	3969336	UnaryOperator	*		3965363	0					
ANR	3969337	Identifier	cmd		3965363	1					
ANR	3969338	CompoundStatement		762:20:20335:20335	3965363	1					
ANR	3969339	ExpressionStatement	"( void ) r_core_cmd0 ( core , cmd )"	4809:4:123646:123675	3965363	0	True				
ANR	3969340	CastExpression	"( void ) r_core_cmd0 ( core , cmd )"		3965363	0					
ANR	3969341	CastTarget	void		3965363	0					
ANR	3969342	CallExpression	"r_core_cmd0 ( core , cmd )"		3965363	1					
ANR	3969343	Callee	r_core_cmd0		3965363	0					
ANR	3969344	Identifier	r_core_cmd0		3965363	0					
ANR	3969345	ArgumentList	core		3965363	1					
ANR	3969346	Argument	core		3965363	0					
ANR	3969347	Identifier	core		3965363	0					
ANR	3969348	Argument	cmd		3965363	1					
ANR	3969349	Identifier	cmd		3965363	0					
ANR	3969350	BreakStatement	break ;	4811:3:123685:123690	3965363	357	True				
ANR	3969351	Statement	case	4812:2:123694:123697	3965363	358	True				
ANR	3969352	Statement	-	4812:7:123699:123699	3965363	359	True				
ANR	3969353	Label	1 :	4812:8:123700:123701	3965363	360	True				
ANR	3969354	Label	case ' ' :	4813:2:123712:123720	3965363	361	True				
ANR	3969355	Label	case 'Q' :	4814:2:123724:123732	3965363	362	True				
ANR	3969356	Label	case 'q' :	4815:2:123736:123744	3965363	363	True				
ANR	3969357	IfStatement	if ( g -> is_callgraph )		3965363	364					
ANR	3969358	Condition	g -> is_callgraph	4816:7:123753:123767	3965363	0	True				
ANR	3969359	PtrMemberAccess	g -> is_callgraph		3965363	0					
ANR	3969360	Identifier	g		3965363	0					
ANR	3969361	Identifier	is_callgraph		3965363	1					
ANR	3969362	CompoundStatement		770:24:20465:20465	3965363	1					
ANR	3969363	ExpressionStatement	agraph_toggle_callgraph ( g )	4817:4:123776:123803	3965363	0	True				
ANR	3969364	CallExpression	agraph_toggle_callgraph ( g )		3965363	0					
ANR	3969365	Callee	agraph_toggle_callgraph		3965363	0					
ANR	3969366	Identifier	agraph_toggle_callgraph		3965363	0					
ANR	3969367	ArgumentList	g		3965363	1					
ANR	3969368	Argument	g		3965363	0					
ANR	3969369	Identifier	g		3965363	0					
ANR	3969370	ElseStatement	else		3965363	0					
ANR	3969371	CompoundStatement		772:10:20510:20510	3965363	0					
ANR	3969372	ExpressionStatement	exit_graph = true	4819:4:123821:123838	3965363	0	True				
ANR	3969373	AssignmentExpression	exit_graph = true		3965363	0		=			
ANR	3969374	Identifier	exit_graph		3965363	0					
ANR	3969375	Identifier	true		3965363	1					
ANR	3969376	BreakStatement	break ;	4821:3:123848:123853	3965363	365	True				
ANR	3969377	Label	case 27 :	4822:2:123857:123864	3965363	366	True				
ANR	3969378	IfStatement	if ( r_cons_readchar ( ) == 91 )		3965363	367					
ANR	3969379	Condition	r_cons_readchar ( ) == 91	4823:7:123880:123903	3965363	0	True				
ANR	3969380	EqualityExpression	r_cons_readchar ( ) == 91		3965363	0		==			
ANR	3969381	CallExpression	r_cons_readchar ( )		3965363	0					
ANR	3969382	Callee	r_cons_readchar		3965363	0					
ANR	3969383	Identifier	r_cons_readchar		3965363	0					
ANR	3969384	ArgumentList			3965363	1					
ANR	3969385	PrimaryExpression	91		3965363	1					
ANR	3969386	CompoundStatement		777:33:20601:20601	3965363	1					
ANR	3969387	IfStatement	if ( r_cons_readchar ( ) == 90 )		3965363	0					
ANR	3969388	Condition	r_cons_readchar ( ) == 90	4824:8:123916:123939	3965363	0	True				
ANR	3969389	EqualityExpression	r_cons_readchar ( ) == 90		3965363	0		==			
ANR	3969390	CallExpression	r_cons_readchar ( )		3965363	0					
ANR	3969391	Callee	r_cons_readchar		3965363	0					
ANR	3969392	Identifier	r_cons_readchar		3965363	0					
ANR	3969393	ArgumentList			3965363	1					
ANR	3969394	PrimaryExpression	90		3965363	1					
ANR	3969395	CompoundStatement		778:34:20637:20637	3965363	1					
ANR	3969396	ExpressionStatement	agraph_prev_node ( g )	4825:5:123949:123969	3965363	0	True				
ANR	3969397	CallExpression	agraph_prev_node ( g )		3965363	0					
ANR	3969398	Callee	agraph_prev_node		3965363	0					
ANR	3969399	Identifier	agraph_prev_node		3965363	0					
ANR	3969400	ArgumentList	g		3965363	1					
ANR	3969401	Argument	g		3965363	0					
ANR	3969402	Identifier	g		3965363	0					
ANR	3969403	BreakStatement	break ;	4828:3:123985:123990	3965363	368	True				
ANR	3969404	Label	default :	4829:2:123994:124001	3965363	369	True				
ANR	3969405	Identifier	default		3965363	0					
ANR	3969406	BreakStatement	break ;	4830:3:124006:124011	3965363	370	True				
ANR	3969407	ExpressionStatement	r_cons_break_pop ( )	4833:1:124021:124040	3965363	58	True				
ANR	3969408	CallExpression	r_cons_break_pop ( )		3965363	0					
ANR	3969409	Callee	r_cons_break_pop		3965363	0					
ANR	3969410	Identifier	r_cons_break_pop		3965363	0					
ANR	3969411	ArgumentList			3965363	1					
ANR	3969412	ExpressionStatement	"r_config_set ( core -> config , ""asm.comments"" , r_str_bool ( asm_comments ) )"	4834:1:124043:124113	3965363	59	True				
ANR	3969413	CallExpression	"r_config_set ( core -> config , ""asm.comments"" , r_str_bool ( asm_comments ) )"		3965363	0					
ANR	3969414	Callee	r_config_set		3965363	0					
ANR	3969415	Identifier	r_config_set		3965363	0					
ANR	3969416	ArgumentList	core -> config		3965363	1					
ANR	3969417	Argument	core -> config		3965363	0					
ANR	3969418	PtrMemberAccess	core -> config		3965363	0					
ANR	3969419	Identifier	core		3965363	0					
ANR	3969420	Identifier	config		3965363	1					
ANR	3969421	Argument	"""asm.comments"""		3965363	1					
ANR	3969422	PrimaryExpression	"""asm.comments"""		3965363	0					
ANR	3969423	Argument	r_str_bool ( asm_comments )		3965363	2					
ANR	3969424	CallExpression	r_str_bool ( asm_comments )		3965363	0					
ANR	3969425	Callee	r_str_bool		3965363	0					
ANR	3969426	Identifier	r_str_bool		3965363	0					
ANR	3969427	ArgumentList	asm_comments		3965363	1					
ANR	3969428	Argument	asm_comments		3965363	0					
ANR	3969429	Identifier	asm_comments		3965363	0					
ANR	3969430	ExpressionStatement	core -> cons -> event_resize = NULL	4835:1:124116:124147	3965363	60	True				
ANR	3969431	AssignmentExpression	core -> cons -> event_resize = NULL		3965363	0		=			
ANR	3969432	PtrMemberAccess	core -> cons -> event_resize		3965363	0					
ANR	3969433	PtrMemberAccess	core -> cons		3965363	0					
ANR	3969434	Identifier	core		3965363	0					
ANR	3969435	Identifier	cons		3965363	1					
ANR	3969436	Identifier	event_resize		3965363	1					
ANR	3969437	Identifier	NULL		3965363	1					
ANR	3969438	ExpressionStatement	core -> cons -> event_data = NULL	4836:1:124150:124179	3965363	61	True				
ANR	3969439	AssignmentExpression	core -> cons -> event_data = NULL		3965363	0		=			
ANR	3969440	PtrMemberAccess	core -> cons -> event_data		3965363	0					
ANR	3969441	PtrMemberAccess	core -> cons		3965363	0					
ANR	3969442	Identifier	core		3965363	0					
ANR	3969443	Identifier	cons		3965363	1					
ANR	3969444	Identifier	event_data		3965363	1					
ANR	3969445	Identifier	NULL		3965363	1					
ANR	3969446	ExpressionStatement	core -> vmode = o_vmode	4837:1:124182:124203	3965363	62	True				
ANR	3969447	AssignmentExpression	core -> vmode = o_vmode		3965363	0		=			
ANR	3969448	PtrMemberAccess	core -> vmode		3965363	0					
ANR	3969449	Identifier	core		3965363	0					
ANR	3969450	Identifier	vmode		3965363	1					
ANR	3969451	Identifier	o_vmode		3965363	1					
ANR	3969452	ExpressionStatement	core -> is_asmqjmps_letter = o_asmqjmps_letter	4838:1:124206:124250	3965363	63	True				
ANR	3969453	AssignmentExpression	core -> is_asmqjmps_letter = o_asmqjmps_letter		3965363	0		=			
ANR	3969454	PtrMemberAccess	core -> is_asmqjmps_letter		3965363	0					
ANR	3969455	Identifier	core		3965363	0					
ANR	3969456	Identifier	is_asmqjmps_letter		3965363	1					
ANR	3969457	Identifier	o_asmqjmps_letter		3965363	1					
ANR	3969458	ExpressionStatement	core -> keep_asmqjmps = false	4839:1:124253:124280	3965363	64	True				
ANR	3969459	AssignmentExpression	core -> keep_asmqjmps = false		3965363	0		=			
ANR	3969460	PtrMemberAccess	core -> keep_asmqjmps		3965363	0					
ANR	3969461	Identifier	core		3965363	0					
ANR	3969462	Identifier	keep_asmqjmps		3965363	1					
ANR	3969463	Identifier	false		3965363	1					
ANR	3969464	ExpressionStatement	free ( grd )	4841:1:124284:124294	3965363	65	True				
ANR	3969465	CallExpression	free ( grd )		3965363	0					
ANR	3969466	Callee	free		3965363	0					
ANR	3969467	Identifier	free		3965363	0					
ANR	3969468	ArgumentList	grd		3965363	1					
ANR	3969469	Argument	grd		3965363	0					
ANR	3969470	Identifier	grd		3965363	0					
ANR	3969471	IfStatement	if ( graph_allocated )		3965363	66					
ANR	3969472	Condition	graph_allocated	4842:5:124301:124315	3965363	0	True				
ANR	3969473	Identifier	graph_allocated		3965363	0					
ANR	3969474	CompoundStatement		796:22:21013:21013	3965363	1					
ANR	3969475	ExpressionStatement	r_agraph_free ( g )	4843:2:124322:124339	3965363	0	True				
ANR	3969476	CallExpression	r_agraph_free ( g )		3965363	0					
ANR	3969477	Callee	r_agraph_free		3965363	0					
ANR	3969478	Identifier	r_agraph_free		3965363	0					
ANR	3969479	ArgumentList	g		3965363	1					
ANR	3969480	Argument	g		3965363	0					
ANR	3969481	Identifier	g		3965363	0					
ANR	3969482	ExpressionStatement	"r_config_set_i ( core -> config , ""scr.interactive"" , o_scrinteractive )"	4844:2:124343:124409	3965363	1	True				
ANR	3969483	CallExpression	"r_config_set_i ( core -> config , ""scr.interactive"" , o_scrinteractive )"		3965363	0					
ANR	3969484	Callee	r_config_set_i		3965363	0					
ANR	3969485	Identifier	r_config_set_i		3965363	0					
ANR	3969486	ArgumentList	core -> config		3965363	1					
ANR	3969487	Argument	core -> config		3965363	0					
ANR	3969488	PtrMemberAccess	core -> config		3965363	0					
ANR	3969489	Identifier	core		3965363	0					
ANR	3969490	Identifier	config		3965363	1					
ANR	3969491	Argument	"""scr.interactive"""		3965363	1					
ANR	3969492	PrimaryExpression	"""scr.interactive"""		3965363	0					
ANR	3969493	Argument	o_scrinteractive		3965363	2					
ANR	3969494	Identifier	o_scrinteractive		3965363	0					
ANR	3969495	ElseStatement	else		3965363	0					
ANR	3969496	CompoundStatement		799:8:21114:21114	3965363	0					
ANR	3969497	ExpressionStatement	g -> can = o_can	4846:2:124423:124437	3965363	0	True				
ANR	3969498	AssignmentExpression	g -> can = o_can		3965363	0		=			
ANR	3969499	PtrMemberAccess	g -> can		3965363	0					
ANR	3969500	Identifier	g		3965363	0					
ANR	3969501	Identifier	can		3965363	1					
ANR	3969502	Identifier	o_can		3965363	1					
ANR	3969503	ExpressionStatement	r_config_hold_restore ( hc )	4848:1:124443:124469	3965363	67	True				
ANR	3969504	CallExpression	r_config_hold_restore ( hc )		3965363	0					
ANR	3969505	Callee	r_config_hold_restore		3965363	0					
ANR	3969506	Identifier	r_config_hold_restore		3965363	0					
ANR	3969507	ArgumentList	hc		3965363	1					
ANR	3969508	Argument	hc		3965363	0					
ANR	3969509	Identifier	hc		3965363	0					
ANR	3969510	ExpressionStatement	r_config_hold_free ( hc )	4849:1:124472:124495	3965363	68	True				
ANR	3969511	CallExpression	r_config_hold_free ( hc )		3965363	0					
ANR	3969512	Callee	r_config_hold_free		3965363	0					
ANR	3969513	Identifier	r_config_hold_free		3965363	0					
ANR	3969514	ArgumentList	hc		3965363	1					
ANR	3969515	Argument	hc		3965363	0					
ANR	3969516	Identifier	hc		3965363	0					
ANR	3969517	IfStatement	if ( update_seek )		3965363	69					
ANR	3969518	Condition	update_seek	4850:5:124502:124512	3965363	0	True				
ANR	3969519	Identifier	update_seek		3965363	0					
ANR	3969520	CompoundStatement		804:18:21210:21210	3965363	1					
ANR	3969521	ReturnStatement	return - 1 ;	4851:2:124519:124528	3965363	0	True				
ANR	3969522	UnaryOperationExpression	- 1		3965363	0					
ANR	3969523	UnaryOperator	-		3965363	0					
ANR	3969524	PrimaryExpression	1		3965363	1					
ANR	3969525	ReturnStatement	return ! is_error ;	4853:1:124534:124550	3965363	70	True				
ANR	3969526	UnaryOperationExpression	! is_error		3965363	0					
ANR	3969527	UnaryOperator	!		3965363	0					
ANR	3969528	Identifier	is_error		3965363	1					
ANR	3969529	ReturnType	R_API int		3965363	1					
ANR	3969530	Identifier	r_core_visual_graph		3965363	2					
ANR	3969531	ParameterList	"RCore * core , RAGraph * g , RAnalFunction * _fcn , int is_interactive"		3965363	3					
ANR	3969532	Parameter	RCore * core	4047:30:103238:103248	3965363	0	True				
ANR	3969533	ParameterType	RCore *		3965363	0					
ANR	3969534	Identifier	core		3965363	1					
ANR	3969535	Parameter	RAGraph * g	4047:43:103251:103260	3965363	1	True				
ANR	3969536	ParameterType	RAGraph *		3965363	0					
ANR	3969537	Identifier	g		3965363	1					
ANR	3969538	Parameter	RAnalFunction * _fcn	4047:55:103263:103281	3965363	2	True				
ANR	3969539	ParameterType	RAnalFunction *		3965363	0					
ANR	3969540	Identifier	_fcn		3965363	1					
ANR	3969541	Parameter	int is_interactive	4047:76:103284:103301	3965363	3	True				
ANR	3969542	ParameterType	int		3965363	0					
ANR	3969543	Identifier	is_interactive		3965363	1					
ANR	3969544	CFGEntryNode	ENTRY		3965363		True				
ANR	3969545	CFGExitNode	EXIT		3965363		True				
ANR	3969546	Symbol	ZOOM_DEFAULT		3965363						
ANR	3969547	Symbol	can -> linemode		3965363						
ANR	3969548	Symbol	core -> cons -> mouse_event		3965363						
ANR	3969549	Symbol	grd -> g		3965363						
ANR	3969550	Symbol	* fcn		3965363						
ANR	3969551	Symbol	r_agraph_new		3965363						
ANR	3969552	Symbol	g -> movspeed		3965363						
ANR	3969553	Symbol	core -> offset		3965363						
ANR	3969554	Symbol	g -> show_node_titles		3965363						
ANR	3969555	Symbol	can -> sx		3965363						
ANR	3969556	Symbol	can -> sy		3965363						
ANR	3969557	Symbol	g -> mode		3965363						
ANR	3969558	Symbol	g -> is_tiny		3965363						
ANR	3969559	Symbol	is_error		3965363						
ANR	3969560	Symbol	* cmd		3965363						
ANR	3969561	Symbol	g -> is_callgraph		3965363						
ANR	3969562	Symbol	g -> can		3965363						
ANR	3969563	Symbol	r_cons_is_interactive		3965363						
ANR	3969564	Symbol	g -> need_reload_nodes		3965363						
ANR	3969565	Symbol	invscroll		3965363						
ANR	3969566	Symbol	seek_to_node		3965363						
ANR	3969567	Symbol	movspeed		3965363						
ANR	3969568	Symbol	* * * core		3965363						
ANR	3969569	Symbol	g -> is_interactive		3965363						
ANR	3969570	Symbol	mousemode		3965363						
ANR	3969571	Symbol	* core -> cons -> line		3965363						
ANR	3969572	Symbol	r_config_get_i		3965363						
ANR	3969573	Symbol	n -> title		3965363						
ANR	3969574	Symbol	r_cons_canvas_new		3965363						
ANR	3969575	Symbol	cmd		3965363						
ANR	3969576	Symbol	undo -> off		3965363						
ANR	3969577	Symbol	* core -> cons		3965363						
ANR	3969578	Symbol	g -> show_node_body		3965363						
ANR	3969579	Symbol	R_AGRAPH_MODE_NORMAL		3965363						
ANR	3969580	Symbol	* core		3965363						
ANR	3969581	Symbol	o_asmqjmps_letter		3965363						
ANR	3969582	Symbol	o_can		3965363						
ANR	3969583	Symbol	r_config_get		3965363						
ANR	3969584	Symbol	core -> anal		3965363						
ANR	3969585	Symbol	g -> on_curnode_change		3965363						
ANR	3969586	Symbol	fcn		3965363						
ANR	3969587	Symbol	r_cons_is_breaked		3965363						
ANR	3969588	Symbol	core -> cons		3965363						
ANR	3969589	Symbol	exit_graph		3965363						
ANR	3969590	Symbol	r_core_anal_get_bbaddr		3965363						
ANR	3969591	Symbol	core -> io		3965363						
ANR	3969592	Symbol	r_config_hold_new		3965363						
ANR	3969593	Symbol	is_mini		3965363						
ANR	3969594	Symbol	r_io_sundo		3965363						
ANR	3969595	Symbol	key		3965363						
ANR	3969596	Symbol	g -> layout		3965363						
ANR	3969597	Symbol	e		3965363						
ANR	3969598	Symbol	r_io_sundo_redo		3965363						
ANR	3969599	Symbol	g		3965363						
ANR	3969600	Symbol	h		3965363						
ANR	3969601	Symbol	r_cons_yesno		3965363						
ANR	3969602	Symbol	* key_s		3965363						
ANR	3969603	Symbol	n		3965363						
ANR	3969604	Symbol	off		3965363						
ANR	3969605	Symbol	& fcn		3965363						
ANR	3969606	Symbol	buf		3965363						
ANR	3969607	Symbol	w		3965363						
ANR	3969608	Symbol	r_line_readline		3965363						
ANR	3969609	Symbol	fcn -> addr		3965363						
ANR	3969610	Symbol	grd -> fs		3965363						
ANR	3969611	Symbol	r_core_visual_refs		3965363						
ANR	3969612	Symbol	core -> panels_root		3965363						
ANR	3969613	Symbol	agraph_refresh_oneshot		3965363						
ANR	3969614	Symbol	core -> cons -> line		3965363						
ANR	3969615	Symbol	grd -> follow_offset		3965363						
ANR	3969616	Symbol	mousemodes		3965363						
ANR	3969617	Symbol	key_s		3965363						
ANR	3969618	Symbol	g -> can -> linemode		3965363						
ANR	3969619	Symbol	r_cons_readchar		3965363						
ANR	3969620	Symbol	* can		3965363						
ANR	3969621	Symbol	r_cons_fgets		3965363						
ANR	3969622	Symbol	find_near_of		3965363						
ANR	3969623	Symbol	grd -> fcn		3965363						
ANR	3969624	Symbol	can -> color		3965363						
ANR	3969625	Symbol	g -> show_node_bubble		3965363						
ANR	3969626	Symbol	core -> cons -> event_resize		3965363						
ANR	3969627	Symbol	PAGEKEY_SPEED		3965363						
ANR	3969628	Symbol	r_num_get		3965363						
ANR	3969629	Symbol	old_off		3965363						
ANR	3969630	Symbol	agraph_refresh		3965363						
ANR	3969631	Symbol	ret		3965363						
ANR	3969632	Symbol	g -> need_set_layout		3965363						
ANR	3969633	Symbol	core -> cons -> line -> contents		3965363						
ANR	3969634	Symbol	NULL		3965363						
ANR	3969635	Symbol	okey		3965363						
ANR	3969636	Symbol	* * g		3965363						
ANR	3969637	Symbol	r_cons_get_size		3965363						
ANR	3969638	Symbol	* * core -> cons		3965363						
ANR	3969639	Symbol	grd -> core		3965363						
ANR	3969640	Symbol	o_scrinteractive		3965363						
ANR	3969641	Symbol	core		3965363						
ANR	3969642	Symbol	r_cons_arrow_to_hjkl		3965363						
ANR	3969643	Symbol	true		3965363						
ANR	3969644	Symbol	* grd		3965363						
ANR	3969645	Symbol	graph_allocated		3965363						
ANR	3969646	Symbol	_fcn		3965363						
ANR	3969647	Symbol	* undo		3965363						
ANR	3969648	Symbol	g -> hints		3965363						
ANR	3969649	Symbol	core -> is_asmqjmps_letter		3965363						
ANR	3969650	Symbol	disMode		3965363						
ANR	3969651	Symbol	g -> zoom		3965363						
ANR	3969652	Symbol	core -> keep_asmqjmps		3965363						
ANR	3969653	Symbol	g -> need_update_dim		3965363						
ANR	3969654	Symbol	* g -> can		3965363						
ANR	3969655	Symbol	speed		3965363						
ANR	3969656	Symbol	can		3965363						
ANR	3969657	Symbol	undo		3965363						
ANR	3969658	Symbol	g -> dummy		3965363						
ANR	3969659	Symbol	grd		3965363						
ANR	3969660	Symbol	discroll		3965363						
ANR	3969661	Symbol	addr		3965363						
ANR	3969662	Symbol	* * core		3965363						
ANR	3969663	Symbol	core -> config		3965363						
ANR	3969664	Symbol	* mousemode		3965363						
ANR	3969665	Symbol	r_str_bool		3965363						
ANR	3969666	Symbol	get_anode		3965363						
ANR	3969667	Symbol	R_AGRAPH_MODE_COMMENTS		3965363						
ANR	3969668	Symbol	next_mode		3965363						
ANR	3969669	Symbol	is_interactive		3965363						
ANR	3969670	Symbol	ZOOM_STEP		3965363						
ANR	3969671	Symbol	gn		3965363						
ANR	3969672	Symbol	g -> update_seek_on		3965363						
ANR	3969673	Symbol	false		3965363						
ANR	3969674	Symbol	graphCursor		3965363						
ANR	3969675	Symbol	o_vmode		3965363						
ANR	3969676	Symbol	g -> on_curnode_change_data		3965363						
ANR	3969677	Symbol	& h		3965363						
ANR	3969678	Symbol	* g		3965363						
ANR	3969679	Symbol	* mousemodes		3965363						
ANR	3969680	Symbol	g -> force_update_seek		3965363						
ANR	3969681	Symbol	r_anal_get_fcn_in		3965363						
ANR	3969682	Symbol	g -> edgemode		3965363						
ANR	3969683	Symbol	asm_comments		3965363						
ANR	3969684	Symbol	core -> cons -> event_data		3965363						
ANR	3969685	Symbol	g -> curnode		3965363						
ANR	3969686	Symbol	* n		3965363						
ANR	3969687	Symbol	g -> is_dis		3965363						
ANR	3969688	Symbol	prev_mode		3965363						
ANR	3969689	Symbol	hc		3965363						
ANR	3969690	Symbol	strdup		3965363						
ANR	3969691	Symbol	core -> vmode		3965363						
ANR	3969692	Symbol	update_seek		3965363						
